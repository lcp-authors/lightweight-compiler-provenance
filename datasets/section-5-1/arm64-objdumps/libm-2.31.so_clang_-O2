
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libm-2.31.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000b9c8 <.init>:
    b9c8:	stp	x29, x30, [sp, #-16]!
    b9cc:	mov	x29, sp
    b9d0:	bl	bac0 <__assert_fail@plt+0x10>
    b9d4:	ldp	x29, x30, [sp], #16
    b9d8:	ret

Disassembly of section .plt:

000000000000b9e0 <fputs@plt-0x20>:
    b9e0:	stp	x16, x30, [sp, #-16]!
    b9e4:	adrp	x16, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    b9e8:	ldr	x17, [x16, #4088]
    b9ec:	add	x16, x16, #0xff8
    b9f0:	br	x17
    b9f4:	nop
    b9f8:	nop
    b9fc:	nop

000000000000ba00 <fputs@plt>:
    ba00:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba04:	ldr	x17, [x16]
    ba08:	add	x16, x16, #0x0
    ba0c:	br	x17

000000000000ba10 <__strtold_nan@plt>:
    ba10:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba14:	ldr	x17, [x16, #8]
    ba18:	add	x16, x16, #0x8
    ba1c:	br	x17

000000000000ba20 <__cxa_finalize@plt>:
    ba20:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba24:	ldr	x17, [x16, #16]
    ba28:	add	x16, x16, #0x10
    ba2c:	br	x17

000000000000ba30 <qsort@plt>:
    ba30:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba34:	ldr	x17, [x16, #24]
    ba38:	add	x16, x16, #0x18
    ba3c:	br	x17

000000000000ba40 <__strtod_nan@plt>:
    ba40:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba44:	ldr	x17, [x16, #32]
    ba48:	add	x16, x16, #0x20
    ba4c:	br	x17

000000000000ba50 <memset@plt>:
    ba50:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba54:	ldr	x17, [x16, #40]
    ba58:	add	x16, x16, #0x28
    ba5c:	br	x17

000000000000ba60 <matherr@plt>:
    ba60:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba64:	ldr	x17, [x16, #48]
    ba68:	add	x16, x16, #0x30
    ba6c:	br	x17

000000000000ba70 <__stack_chk_fail@plt>:
    ba70:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba74:	ldr	x17, [x16, #56]
    ba78:	add	x16, x16, #0x38
    ba7c:	br	x17

000000000000ba80 <__gmon_start__@plt>:
    ba80:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba84:	ldr	x17, [x16, #64]
    ba88:	add	x16, x16, #0x40
    ba8c:	br	x17

000000000000ba90 <fwrite@plt>:
    ba90:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    ba94:	ldr	x17, [x16, #72]
    ba98:	add	x16, x16, #0x48
    ba9c:	br	x17

000000000000baa0 <__strtof_nan@plt>:
    baa0:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    baa4:	ldr	x17, [x16, #80]
    baa8:	add	x16, x16, #0x50
    baac:	br	x17

000000000000bab0 <__assert_fail@plt>:
    bab0:	adrp	x16, a8000 <fputs@GLIBC_2.17>
    bab4:	ldr	x17, [x16, #88]
    bab8:	add	x16, x16, #0x58
    babc:	br	x17

Disassembly of section .text:

000000000000bac0 <matherr@GLIBC_2.17-0xd8>:
    bac0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    bac4:	ldr	x0, [x0, #4024]
    bac8:	cbz	x0, bad0 <__assert_fail@plt+0x20>
    bacc:	b	ba80 <__gmon_start__@plt>
    bad0:	ret
    bad4:	nop
    bad8:	adrp	x0, a8000 <f64xsubf128@@GLIBC_2.28+0x54280>
    badc:	add	x0, x0, #0x70
    bae0:	adrp	x1, a8000 <f64xsubf128@@GLIBC_2.28+0x54280>
    bae4:	add	x1, x1, #0x70
    bae8:	cmp	x1, x0
    baec:	b.eq	bb04 <__assert_fail@plt+0x54>  // b.none
    baf0:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    baf4:	ldr	x1, [x1, #3968]
    baf8:	cbz	x1, bb04 <__assert_fail@plt+0x54>
    bafc:	mov	x16, x1
    bb00:	br	x16
    bb04:	ret
    bb08:	adrp	x0, a8000 <f64xsubf128@@GLIBC_2.28+0x54280>
    bb0c:	add	x0, x0, #0x70
    bb10:	adrp	x1, a8000 <f64xsubf128@@GLIBC_2.28+0x54280>
    bb14:	add	x1, x1, #0x70
    bb18:	sub	x1, x1, x0
    bb1c:	lsr	x2, x1, #63
    bb20:	add	x1, x2, x1, asr #3
    bb24:	cmp	xzr, x1, asr #1
    bb28:	asr	x1, x1, #1
    bb2c:	b.eq	bb44 <__assert_fail@plt+0x94>  // b.none
    bb30:	adrp	x2, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    bb34:	ldr	x2, [x2, #4056]
    bb38:	cbz	x2, bb44 <__assert_fail@plt+0x94>
    bb3c:	mov	x16, x2
    bb40:	br	x16
    bb44:	ret
    bb48:	stp	x29, x30, [sp, #-32]!
    bb4c:	mov	x29, sp
    bb50:	str	x19, [sp, #16]
    bb54:	adrp	x19, a8000 <f64xsubf128@@GLIBC_2.28+0x54280>
    bb58:	ldrb	w0, [x19, #108]
    bb5c:	cbnz	w0, bb84 <__assert_fail@plt+0xd4>
    bb60:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    bb64:	ldr	x0, [x0, #3984]
    bb68:	cbz	x0, bb78 <__assert_fail@plt+0xc8>
    bb6c:	adrp	x0, a8000 <f64xsubf128@@GLIBC_2.28+0x54280>
    bb70:	ldr	x0, [x0, #96]
    bb74:	bl	ba20 <__cxa_finalize@plt>
    bb78:	bl	bad8 <__assert_fail@plt+0x28>
    bb7c:	mov	w0, #0x1                   	// #1
    bb80:	strb	w0, [x19, #108]
    bb84:	ldr	x19, [sp, #16]
    bb88:	ldp	x29, x30, [sp], #32
    bb8c:	ret
    bb90:	b	bb08 <__assert_fail@plt+0x58>
    bb94:	nop

000000000000bb98 <matherr@GLIBC_2.17>:
    bb98:	mov	w0, #0x0                   	// #0
    bb9c:	ret

000000000000bba0 <feclearexcept@@GLIBC_2.17>:
    bba0:	mrs	x1, fpsr
    bba4:	and	w0, w0, #0x1f
    bba8:	tst	w0, w1
    bbac:	bic	w0, w1, w0
    bbb0:	b.eq	bbb8 <feclearexcept@@GLIBC_2.17+0x18>  // b.none
    bbb4:	msr	fpsr, x0
    bbb8:	mov	w0, #0x0                   	// #0
    bbbc:	ret

000000000000bbc0 <fegetexceptflag@@GLIBC_2.17>:
    bbc0:	mov	x3, x0
    bbc4:	mrs	x2, fpsr
    bbc8:	and	w1, w2, w1
    bbcc:	mov	w0, #0x0                   	// #0
    bbd0:	and	w1, w1, #0x1f
    bbd4:	str	w1, [x3]
    bbd8:	ret
    bbdc:	nop

000000000000bbe0 <feraiseexcept@@GLIBC_2.17>:
    bbe0:	stp	x29, x30, [sp, #-64]!
    bbe4:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    bbe8:	movi	v4.2s, #0x80, lsl #16
    bbec:	mov	x29, sp
    bbf0:	ldr	x4, [x1, #4032]
    bbf4:	mov	w2, #0xc5ae                	// #50606
    bbf8:	movk	w2, #0x749d, lsl #16
    bbfc:	fmov	s5, #1.000000000000000000e+00
    bc00:	fmov	s0, w2
    bc04:	fmov	s3, #2.000000000000000000e+00
    bc08:	fmov	s2, #3.000000000000000000e+00
    bc0c:	ldr	x2, [x4]
    bc10:	str	x2, [sp, #56]
    bc14:	mov	x2, #0x0                   	// #0
    bc18:	mov	w3, #0x7f7fffff            	// #2139095039
    bc1c:	str	wzr, [sp, #28]
    bc20:	str	w3, [sp, #36]
    bc24:	str	s5, [sp, #32]
    bc28:	stp	s4, s0, [sp, #40]
    bc2c:	stp	s3, s2, [sp, #48]
    bc30:	tbz	w0, #0, bc40 <feraiseexcept@@GLIBC_2.17+0x60>
    bc34:	ldr	s0, [sp, #28]
    bc38:	fdiv	s0, s0, s0
    bc3c:	mrs	x2, fpsr
    bc40:	tbz	w0, #1, bc54 <feraiseexcept@@GLIBC_2.17+0x74>
    bc44:	ldr	s0, [sp, #32]
    bc48:	ldr	s1, [sp, #28]
    bc4c:	fdiv	s0, s0, s1
    bc50:	mrs	x2, fpsr
    bc54:	tbz	w0, #2, bc68 <feraiseexcept@@GLIBC_2.17+0x88>
    bc58:	ldr	s0, [sp, #36]
    bc5c:	ldr	s1, [sp, #44]
    bc60:	fadd	s0, s0, s1
    bc64:	mrs	x2, fpsr
    bc68:	tbz	w0, #3, bc7c <feraiseexcept@@GLIBC_2.17+0x9c>
    bc6c:	ldr	s0, [sp, #40]
    bc70:	ldr	s1, [sp, #52]
    bc74:	fdiv	s0, s0, s1
    bc78:	mrs	x2, fpsr
    bc7c:	tbz	w0, #4, bc90 <feraiseexcept@@GLIBC_2.17+0xb0>
    bc80:	ldr	s0, [sp, #48]
    bc84:	ldr	s1, [sp, #52]
    bc88:	fdiv	s0, s0, s1
    bc8c:	mrs	x0, fpsr
    bc90:	ldr	x1, [x1, #4032]
    bc94:	ldr	x2, [sp, #56]
    bc98:	ldr	x0, [x1]
    bc9c:	eor	x0, x2, x0
    bca0:	cbnz	x0, bcb0 <feraiseexcept@@GLIBC_2.17+0xd0>
    bca4:	mov	w0, #0x0                   	// #0
    bca8:	ldp	x29, x30, [sp], #64
    bcac:	ret
    bcb0:	bl	ba70 <__stack_chk_fail@plt>
    bcb4:	nop

000000000000bcb8 <fesetexceptflag@@GLIBC_2.17>:
    bcb8:	mrs	x2, fpsr
    bcbc:	and	w1, w1, #0x1f
    bcc0:	bic	w3, w2, w1
    bcc4:	ldr	w0, [x0]
    bcc8:	and	w1, w1, w0
    bccc:	orr	w1, w1, w3
    bcd0:	cmp	w2, w1
    bcd4:	b.eq	bcdc <fesetexceptflag@@GLIBC_2.17+0x24>  // b.none
    bcd8:	msr	fpsr, x1
    bcdc:	mov	w0, #0x0                   	// #0
    bce0:	ret
    bce4:	nop

000000000000bce8 <fetestexcept@@GLIBC_2.17>:
    bce8:	mrs	x1, fpsr
    bcec:	and	w0, w1, w0
    bcf0:	and	w0, w0, #0x1f
    bcf4:	ret

000000000000bcf8 <fegetround@@GLIBC_2.17>:
    bcf8:	mrs	x0, fpcr
    bcfc:	and	w0, w0, #0xc00000
    bd00:	ret
    bd04:	nop

000000000000bd08 <fesetround@@GLIBC_2.17>:
    bd08:	tst	w0, #0xff3fffff
    bd0c:	b.ne	bd24 <fesetround@@GLIBC_2.17+0x1c>  // b.any
    bd10:	mrs	x1, fpcr
    bd14:	eor	w0, w0, w1
    bd18:	ands	w0, w0, #0xc00000
    bd1c:	b.ne	bd2c <fesetround@@GLIBC_2.17+0x24>  // b.any
    bd20:	ret
    bd24:	mov	w0, #0x1                   	// #1
    bd28:	ret
    bd2c:	eor	w0, w0, w1
    bd30:	msr	fpcr, x0
    bd34:	mov	w0, #0x0                   	// #0
    bd38:	ret
    bd3c:	nop

000000000000bd40 <fegetenv@@GLIBC_2.17>:
    bd40:	mov	x1, x0
    bd44:	mrs	x0, fpcr
    bd48:	mrs	x2, fpsr
    bd4c:	stp	w0, w2, [x1]
    bd50:	mov	w0, #0x0                   	// #0
    bd54:	ret

000000000000bd58 <feholdexcept@@GLIBC_2.17>:
    bd58:	mrs	x1, fpcr
    bd5c:	mrs	x2, fpsr
    bd60:	stp	w1, w2, [x0]
    bd64:	tst	w1, #0x1f00
    bd68:	and	w0, w2, #0xffffffe0
    bd6c:	and	w1, w1, #0xffffe0ff
    bd70:	b.ne	bd88 <feholdexcept@@GLIBC_2.17+0x30>  // b.any
    bd74:	cmp	w2, w0
    bd78:	b.eq	bd80 <feholdexcept@@GLIBC_2.17+0x28>  // b.none
    bd7c:	msr	fpsr, x0
    bd80:	mov	w0, #0x0                   	// #0
    bd84:	ret
    bd88:	msr	fpcr, x1
    bd8c:	b	bd74 <feholdexcept@@GLIBC_2.17+0x1c>

000000000000bd90 <fesetenv@@GLIBC_2.17>:
    bd90:	mrs	x2, fpcr
    bd94:	add	x1, x0, #0x2
    bd98:	cmp	x1, #0x1
    bd9c:	b.hi	bde0 <fesetenv@@GLIBC_2.17+0x50>  // b.pmore
    bda0:	mrs	x3, fpsr
    bda4:	mov	w1, #0xe0ff                	// #57599
    bda8:	cmn	x0, #0x1
    bdac:	movk	w1, #0xfe0f, lsl #16
    bdb0:	and	w1, w2, w1
    bdb4:	orr	w4, w1, #0x1f00
    bdb8:	and	w0, w3, #0xfffffe0
    bdbc:	csel	w1, w4, w1, ne  // ne = any
    bdc0:	msr	fpsr, x0
    bdc4:	cmp	w1, w2
    bdc8:	mov	w0, #0x0                   	// #0
    bdcc:	b.eq	bddc <fesetenv@@GLIBC_2.17+0x4c>  // b.none
    bdd0:	msr	fpcr, x1
    bdd4:	mrs	x0, fpcr
    bdd8:	bic	w0, w1, w0
    bddc:	ret
    bde0:	ldr	w1, [x0]
    bde4:	cmp	w2, w1
    bde8:	b.eq	bdf0 <fesetenv@@GLIBC_2.17+0x60>  // b.none
    bdec:	msr	fpcr, x1
    bdf0:	ldr	w0, [x0, #4]
    bdf4:	msr	fpsr, x0
    bdf8:	mov	w0, #0x0                   	// #0
    bdfc:	ret

000000000000be00 <feupdateenv@@GLIBC_2.17>:
    be00:	mov	x1, x0
    be04:	mrs	x4, fpcr
    be08:	mrs	x2, fpsr
    be0c:	add	x3, x0, #0x2
    be10:	and	w0, w2, #0x1f
    be14:	cmp	x3, #0x1
    be18:	b.ls	be4c <feupdateenv@@GLIBC_2.17+0x4c>  // b.plast
    be1c:	ldp	w3, w1, [x1]
    be20:	cmp	w4, w3
    be24:	orr	w1, w0, w1
    be28:	b.eq	be30 <feupdateenv@@GLIBC_2.17+0x30>  // b.none
    be2c:	msr	fpcr, x3
    be30:	cmp	w2, w1
    be34:	b.eq	be3c <feupdateenv@@GLIBC_2.17+0x3c>  // b.none
    be38:	msr	fpsr, x1
    be3c:	tst	w0, w3, lsr #8
    be40:	b.ne	be8c <feupdateenv@@GLIBC_2.17+0x8c>  // b.any
    be44:	mov	w0, #0x0                   	// #0
    be48:	ret
    be4c:	mov	w3, #0xe0ff                	// #57599
    be50:	cmn	x1, #0x1
    be54:	movk	w3, #0xfe0f, lsl #16
    be58:	and	w3, w4, w3
    be5c:	orr	w1, w3, #0x1f00
    be60:	and	w2, w2, #0xfffffff
    be64:	csel	w3, w1, w3, ne  // ne = any
    be68:	msr	fpsr, x2
    be6c:	cmp	w3, w4
    be70:	b.eq	be3c <feupdateenv@@GLIBC_2.17+0x3c>  // b.none
    be74:	msr	fpcr, x3
    be78:	mrs	x1, fpcr
    be7c:	bics	wzr, w3, w1
    be80:	b.eq	be3c <feupdateenv@@GLIBC_2.17+0x3c>  // b.none
    be84:	mov	w0, #0x1                   	// #1
    be88:	ret
    be8c:	b	bbe0 <feraiseexcept@@GLIBC_2.17>

000000000000be90 <fedisableexcept@@GLIBC_2.17>:
    be90:	mrs	x2, fpcr
    be94:	ubfiz	w1, w0, #8, #5
    be98:	tst	w1, w2
    be9c:	bic	w1, w2, w1
    bea0:	b.eq	bea8 <fedisableexcept@@GLIBC_2.17+0x18>  // b.none
    bea4:	msr	fpcr, x1
    bea8:	ubfx	x0, x2, #8, #5
    beac:	ret

000000000000beb0 <feenableexcept@@GLIBC_2.17>:
    beb0:	mrs	x2, fpcr
    beb4:	ubfiz	w1, w0, #8, #5
    beb8:	bics	wzr, w1, w2
    bebc:	orr	w1, w1, w2
    bec0:	b.eq	bed4 <feenableexcept@@GLIBC_2.17+0x24>  // b.none
    bec4:	msr	fpcr, x1
    bec8:	mrs	x0, fpcr
    becc:	bics	wzr, w1, w0
    bed0:	b.ne	bedc <feenableexcept@@GLIBC_2.17+0x2c>  // b.any
    bed4:	ubfx	x0, x2, #8, #5
    bed8:	ret
    bedc:	mov	w0, #0xffffffff            	// #-1
    bee0:	ret
    bee4:	nop

000000000000bee8 <fegetexcept@@GLIBC_2.17>:
    bee8:	mrs	x0, fpcr
    beec:	ubfx	x0, x0, #8, #5
    bef0:	ret
    bef4:	nop

000000000000bef8 <fesetexcept@@GLIBC_2.25>:
    bef8:	mrs	x1, fpsr
    befc:	and	w0, w0, #0x1f
    bf00:	bics	wzr, w0, w1
    bf04:	orr	w0, w0, w1
    bf08:	b.eq	bf10 <fesetexcept@@GLIBC_2.25+0x18>  // b.none
    bf0c:	msr	fpsr, x0
    bf10:	mov	w0, #0x0                   	// #0
    bf14:	ret

000000000000bf18 <fetestexceptflag@@GLIBC_2.25>:
    bf18:	ldr	w0, [x0]
    bf1c:	and	w0, w1, w0
    bf20:	and	w0, w0, #0x1f
    bf24:	ret

000000000000bf28 <fegetmode@@GLIBC_2.25>:
    bf28:	mrs	x1, fpcr
    bf2c:	str	w1, [x0]
    bf30:	mov	w0, #0x0                   	// #0
    bf34:	ret

000000000000bf38 <fesetmode@@GLIBC_2.25>:
    bf38:	mrs	x1, fpcr
    bf3c:	cmn	x0, #0x1
    bf40:	b.eq	bf5c <fesetmode@@GLIBC_2.25+0x24>  // b.none
    bf44:	ldr	w0, [x0]
    bf48:	cmp	w0, w1
    bf4c:	b.eq	bf54 <fesetmode@@GLIBC_2.25+0x1c>  // b.none
    bf50:	msr	fpcr, x0
    bf54:	mov	w0, #0x0                   	// #0
    bf58:	ret
    bf5c:	mov	w0, #0xe0ff                	// #57599
    bf60:	movk	w0, #0xfe0f, lsl #16
    bf64:	and	w0, w1, w0
    bf68:	b	bf48 <fesetmode@@GLIBC_2.25+0x10>
    bf6c:	nop

000000000000bf70 <acosf128@@GLIBC_2.27>:
    bf70:	stp	x29, x30, [sp, #-80]!
    bf74:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    bf78:	add	x0, x0, #0x2f0
    bf7c:	mov	x29, sp
    bf80:	stp	x19, x20, [sp, #16]
    bf84:	ldr	q1, [x0]
    bf88:	str	q0, [sp, #48]
    bf8c:	ldp	x19, x20, [sp, #48]
    bf90:	str	x21, [sp, #32]
    bf94:	and	x21, x20, #0x7fffffffffffffff
    bf98:	str	x21, [sp, #56]
    bf9c:	ldr	q0, [sp, #48]
    bfa0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    bfa4:	cbnz	w0, bfc8 <acosf128@@GLIBC_2.27+0x58>
    bfa8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    bfac:	add	x0, x0, #0x2f0
    bfb0:	stp	x19, x21, [sp, #48]
    bfb4:	ldr	q1, [x0]
    bfb8:	ldr	q0, [sp, #48]
    bfbc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    bfc0:	cmp	w0, #0x0
    bfc4:	b.gt	bfe0 <acosf128@@GLIBC_2.27+0x70>
    bfc8:	stp	x19, x20, [sp, #48]
    bfcc:	ldp	x19, x20, [sp, #16]
    bfd0:	ldr	x21, [sp, #32]
    bfd4:	ldr	q0, [sp, #48]
    bfd8:	ldp	x29, x30, [sp], #80
    bfdc:	b	12678 <__acosl_finite@GLIBC_2.17>
    bfe0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    bfe4:	ldr	x0, [x0, #4000]
    bfe8:	ldr	w0, [x0]
    bfec:	cmn	w0, #0x1
    bff0:	b.eq	bfc8 <acosf128@@GLIBC_2.27+0x58>  // b.none
    bff4:	mov	w0, #0x1                   	// #1
    bff8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    bffc:	stp	x19, x20, [sp, #48]
    c000:	mov	w0, #0xc9                  	// #201
    c004:	stp	x19, x20, [sp, #64]
    c008:	ldr	q1, [sp, #48]
    c00c:	ldp	x19, x20, [sp, #16]
    c010:	ldr	x21, [sp, #32]
    c014:	ldr	q0, [sp, #64]
    c018:	ldp	x29, x30, [sp], #80
    c01c:	b	e038 <lgammal@GLIBC_2.17+0x198>

000000000000c020 <acoshf128@@GLIBC_2.27>:
    c020:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c024:	add	x0, x0, #0x2f0
    c028:	stp	x29, x30, [sp, #-32]!
    c02c:	mov	x29, sp
    c030:	ldr	q1, [x0]
    c034:	str	q0, [sp, #16]
    c038:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c03c:	ldr	q2, [sp, #16]
    c040:	cbnz	w0, c060 <acoshf128@@GLIBC_2.27+0x40>
    c044:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c048:	add	x0, x0, #0x2f0
    c04c:	mov	v0.16b, v2.16b
    c050:	ldr	q1, [x0]
    c054:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c058:	ldr	q2, [sp, #16]
    c05c:	tbnz	w0, #31, c06c <acoshf128@@GLIBC_2.27+0x4c>
    c060:	ldp	x29, x30, [sp], #32
    c064:	mov	v0.16b, v2.16b
    c068:	b	13150 <__acoshl_finite@GLIBC_2.17>
    c06c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c070:	ldr	x0, [x0, #4000]
    c074:	ldr	w0, [x0]
    c078:	cmn	w0, #0x1
    c07c:	b.eq	c060 <acoshf128@@GLIBC_2.27+0x40>  // b.none
    c080:	ldp	x29, x30, [sp], #32
    c084:	mov	v1.16b, v2.16b
    c088:	mov	v0.16b, v2.16b
    c08c:	mov	w0, #0xe5                  	// #229
    c090:	b	e038 <lgammal@GLIBC_2.17+0x198>
    c094:	nop

000000000000c098 <asinf128@@GLIBC_2.27>:
    c098:	stp	x29, x30, [sp, #-80]!
    c09c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c0a0:	add	x0, x0, #0x2f0
    c0a4:	mov	x29, sp
    c0a8:	stp	x19, x20, [sp, #16]
    c0ac:	ldr	q1, [x0]
    c0b0:	str	q0, [sp, #48]
    c0b4:	ldp	x19, x20, [sp, #48]
    c0b8:	str	x21, [sp, #32]
    c0bc:	and	x21, x20, #0x7fffffffffffffff
    c0c0:	str	x21, [sp, #56]
    c0c4:	ldr	q0, [sp, #48]
    c0c8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c0cc:	cbnz	w0, c0f0 <asinf128@@GLIBC_2.27+0x58>
    c0d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c0d4:	add	x0, x0, #0x2f0
    c0d8:	stp	x19, x21, [sp, #48]
    c0dc:	ldr	q1, [x0]
    c0e0:	ldr	q0, [sp, #48]
    c0e4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    c0e8:	cmp	w0, #0x0
    c0ec:	b.gt	c108 <asinf128@@GLIBC_2.27+0x70>
    c0f0:	stp	x19, x20, [sp, #48]
    c0f4:	ldp	x19, x20, [sp, #16]
    c0f8:	ldr	x21, [sp, #32]
    c0fc:	ldr	q0, [sp, #48]
    c100:	ldp	x29, x30, [sp], #80
    c104:	b	132e8 <__asinl_finite@GLIBC_2.17>
    c108:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c10c:	ldr	x0, [x0, #4000]
    c110:	ldr	w0, [x0]
    c114:	cmn	w0, #0x1
    c118:	b.eq	c0f0 <asinf128@@GLIBC_2.27+0x58>  // b.none
    c11c:	mov	w0, #0x1                   	// #1
    c120:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    c124:	stp	x19, x20, [sp, #48]
    c128:	mov	w0, #0xca                  	// #202
    c12c:	stp	x19, x20, [sp, #64]
    c130:	ldr	q1, [sp, #48]
    c134:	ldp	x19, x20, [sp, #16]
    c138:	ldr	x21, [sp, #32]
    c13c:	ldr	q0, [sp, #64]
    c140:	ldp	x29, x30, [sp], #80
    c144:	b	e038 <lgammal@GLIBC_2.17+0x198>

000000000000c148 <atan2f128@@GLIBC_2.27>:
    c148:	stp	x29, x30, [sp, #-80]!
    c14c:	mov	x29, sp
    c150:	str	q1, [sp, #48]
    c154:	movi	v1.2d, #0x0
    c158:	str	q0, [sp, #64]
    c15c:	ldr	q0, [sp, #48]
    c160:	stp	x19, x20, [sp, #16]
    c164:	str	x21, [sp, #32]
    c168:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    c16c:	movi	v1.2d, #0x0
    c170:	cmp	w0, #0x0
    c174:	ldr	q0, [sp, #64]
    c178:	cset	w20, eq  // eq = none
    c17c:	ldr	x19, [sp, #56]
    c180:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    c184:	cmp	w0, #0x0
    c188:	cset	w0, eq  // eq = none
    c18c:	tst	w0, w20
    c190:	ldr	x21, [sp, #48]
    c194:	b.ne	c1f0 <atan2f128@@GLIBC_2.27+0xa8>  // b.any
    c198:	stp	x21, x19, [sp, #48]
    c19c:	ldr	q0, [sp, #64]
    c1a0:	ldr	q1, [sp, #48]
    c1a4:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
    c1a8:	str	q0, [sp, #48]
    c1ac:	movi	v1.2d, #0x0
    c1b0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    c1b4:	cmp	w0, #0x0
    c1b8:	movi	v1.2d, #0x0
    c1bc:	ldr	q0, [sp, #64]
    c1c0:	cset	w20, eq  // eq = none
    c1c4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    c1c8:	cmp	w0, #0x0
    c1cc:	cset	w0, ne  // ne = any
    c1d0:	ldr	q2, [sp, #48]
    c1d4:	tst	w0, w20
    c1d8:	b.ne	c220 <atan2f128@@GLIBC_2.27+0xd8>  // b.any
    c1dc:	mov	v0.16b, v2.16b
    c1e0:	ldp	x19, x20, [sp, #16]
    c1e4:	ldr	x21, [sp, #32]
    c1e8:	ldp	x29, x30, [sp], #80
    c1ec:	ret
    c1f0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c1f4:	ldr	x0, [x0, #4000]
    c1f8:	ldr	w0, [x0]
    c1fc:	cbnz	w0, c198 <atan2f128@@GLIBC_2.27+0x50>
    c200:	stp	x21, x19, [sp, #48]
    c204:	mov	w0, #0xcb                  	// #203
    c208:	ldr	q0, [sp, #64]
    c20c:	ldp	x19, x20, [sp, #16]
    c210:	ldr	x21, [sp, #32]
    c214:	ldr	q1, [sp, #48]
    c218:	ldp	x29, x30, [sp], #80
    c21c:	b	e038 <lgammal@GLIBC_2.17+0x198>
    c220:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c224:	add	x0, x0, #0x300
    c228:	and	x19, x19, #0x7fffffffffffffff
    c22c:	stp	x21, x19, [sp, #48]
    c230:	ldr	q1, [x0]
    c234:	ldr	q0, [sp, #48]
    c238:	str	q2, [sp, #64]
    c23c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c240:	ldr	q2, [sp, #64]
    c244:	cbnz	w0, c1dc <atan2f128@@GLIBC_2.27+0x94>
    c248:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c24c:	add	x0, x0, #0x300
    c250:	stp	x21, x19, [sp, #48]
    c254:	ldr	q1, [x0]
    c258:	ldr	q0, [sp, #48]
    c25c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c260:	cmp	w0, #0x0
    c264:	ldr	q2, [sp, #64]
    c268:	b.gt	c1dc <atan2f128@@GLIBC_2.27+0x94>
    c26c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c270:	ldr	x0, [x0, #3976]
    c274:	mrs	x1, tpidr_el0
    c278:	mov	w2, #0x22                  	// #34
    c27c:	str	w2, [x1, x0]
    c280:	b	c1dc <atan2f128@@GLIBC_2.27+0x94>
    c284:	nop

000000000000c288 <atanhf128@@GLIBC_2.27>:
    c288:	stp	x29, x30, [sp, #-80]!
    c28c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c290:	add	x0, x0, #0x2f0
    c294:	mov	x29, sp
    c298:	stp	x19, x20, [sp, #16]
    c29c:	ldr	q1, [x0]
    c2a0:	str	q0, [sp, #48]
    c2a4:	ldp	x19, x20, [sp, #48]
    c2a8:	str	x21, [sp, #32]
    c2ac:	and	x21, x20, #0x7fffffffffffffff
    c2b0:	str	x21, [sp, #56]
    c2b4:	ldr	q0, [sp, #48]
    c2b8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c2bc:	cbnz	w0, c2dc <atanhf128@@GLIBC_2.27+0x54>
    c2c0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c2c4:	add	x0, x0, #0x2f0
    c2c8:	stp	x19, x21, [sp, #48]
    c2cc:	ldr	q1, [x0]
    c2d0:	ldr	q0, [sp, #48]
    c2d4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    c2d8:	tbz	w0, #31, c2f4 <atanhf128@@GLIBC_2.27+0x6c>
    c2dc:	stp	x19, x20, [sp, #48]
    c2e0:	ldp	x19, x20, [sp, #16]
    c2e4:	ldr	x21, [sp, #32]
    c2e8:	ldr	q0, [sp, #48]
    c2ec:	ldp	x29, x30, [sp], #80
    c2f0:	b	13dc8 <__atanhl_finite@GLIBC_2.17>
    c2f4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c2f8:	ldr	x0, [x0, #4000]
    c2fc:	ldr	w0, [x0]
    c300:	cmn	w0, #0x1
    c304:	b.eq	c2dc <atanhf128@@GLIBC_2.27+0x54>  // b.none
    c308:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c30c:	add	x0, x0, #0x2f0
    c310:	stp	x19, x21, [sp, #48]
    c314:	ldr	q1, [x0]
    c318:	ldr	q0, [sp, #48]
    c31c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c320:	stp	x19, x20, [sp, #48]
    c324:	cmp	w0, #0x0
    c328:	stp	x19, x20, [sp, #64]
    c32c:	cset	w0, le
    c330:	ldr	q1, [sp, #48]
    c334:	ldp	x19, x20, [sp, #16]
    c338:	add	w0, w0, #0xe6
    c33c:	ldr	x21, [sp, #32]
    c340:	ldr	q0, [sp, #64]
    c344:	ldp	x29, x30, [sp], #80
    c348:	b	e038 <lgammal@GLIBC_2.17+0x198>
    c34c:	nop

000000000000c350 <coshf128@@GLIBC_2.27>:
    c350:	stp	x29, x30, [sp, #-96]!
    c354:	mov	x29, sp
    c358:	stp	x19, x20, [sp, #16]
    c35c:	stp	x21, x22, [sp, #32]
    c360:	str	x23, [sp, #48]
    c364:	str	q0, [sp, #64]
    c368:	ldr	x22, [sp, #64]
    c36c:	ldr	x23, [sp, #72]
    c370:	bl	14000 <__coshl_finite@GLIBC_2.17>
    c374:	str	q0, [sp, #64]
    c378:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c37c:	ldp	x19, x20, [sp, #64]
    c380:	add	x0, x0, #0x300
    c384:	ldr	q1, [x0]
    c388:	and	x21, x20, #0x7fffffffffffffff
    c38c:	str	x21, [sp, #72]
    c390:	ldr	q0, [sp, #64]
    c394:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c398:	cbnz	w0, c3d8 <coshf128@@GLIBC_2.27+0x88>
    c39c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c3a0:	add	x0, x0, #0x300
    c3a4:	stp	x19, x21, [sp, #64]
    c3a8:	ldr	q1, [x0]
    c3ac:	ldr	q0, [sp, #64]
    c3b0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c3b4:	cmp	w0, #0x0
    c3b8:	b.gt	c3d8 <coshf128@@GLIBC_2.27+0x88>
    c3bc:	stp	x19, x20, [sp, #64]
    c3c0:	ldp	x19, x20, [sp, #16]
    c3c4:	ldp	x21, x22, [sp, #32]
    c3c8:	ldr	x23, [sp, #48]
    c3cc:	ldr	q0, [sp, #64]
    c3d0:	ldp	x29, x30, [sp], #96
    c3d4:	ret
    c3d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c3dc:	add	x0, x0, #0x300
    c3e0:	and	x21, x23, #0x7fffffffffffffff
    c3e4:	stp	x22, x21, [sp, #64]
    c3e8:	ldr	q1, [x0]
    c3ec:	ldr	q0, [sp, #64]
    c3f0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c3f4:	cbnz	w0, c3bc <coshf128@@GLIBC_2.27+0x6c>
    c3f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c3fc:	add	x0, x0, #0x300
    c400:	stp	x22, x21, [sp, #64]
    c404:	ldr	q1, [x0]
    c408:	ldr	q0, [sp, #64]
    c40c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c410:	cmp	w0, #0x0
    c414:	b.gt	c3bc <coshf128@@GLIBC_2.27+0x6c>
    c418:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c41c:	ldr	x0, [x0, #4000]
    c420:	ldr	w0, [x0]
    c424:	cmn	w0, #0x1
    c428:	b.eq	c3bc <coshf128@@GLIBC_2.27+0x6c>  // b.none
    c42c:	stp	x22, x23, [sp, #64]
    c430:	mov	w0, #0xcd                  	// #205
    c434:	stp	x22, x23, [sp, #80]
    c438:	ldr	q1, [sp, #64]
    c43c:	ldp	x19, x20, [sp, #16]
    c440:	ldp	x21, x22, [sp, #32]
    c444:	ldr	x23, [sp, #48]
    c448:	ldr	q0, [sp, #80]
    c44c:	ldp	x29, x30, [sp], #96
    c450:	b	e038 <lgammal@GLIBC_2.17+0x198>
    c454:	nop

000000000000c458 <exp2f128@@GLIBC_2.27>:
    c458:	stp	x29, x30, [sp, #-96]!
    c45c:	mov	x29, sp
    c460:	stp	x19, x20, [sp, #16]
    c464:	stp	x21, x22, [sp, #32]
    c468:	str	x23, [sp, #48]
    c46c:	str	q0, [sp, #64]
    c470:	ldr	x22, [sp, #64]
    c474:	ldr	x23, [sp, #72]
    c478:	bl	2f338 <__exp2l_finite@GLIBC_2.17>
    c47c:	str	q0, [sp, #64]
    c480:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c484:	ldp	x19, x20, [sp, #64]
    c488:	add	x0, x0, #0x300
    c48c:	ldr	q1, [x0]
    c490:	and	x21, x20, #0x7fffffffffffffff
    c494:	str	x21, [sp, #72]
    c498:	ldr	q0, [sp, #64]
    c49c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c4a0:	cbnz	w0, c4f4 <exp2f128@@GLIBC_2.27+0x9c>
    c4a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c4a8:	add	x0, x0, #0x300
    c4ac:	stp	x19, x21, [sp, #64]
    c4b0:	ldr	q1, [x0]
    c4b4:	ldr	q0, [sp, #64]
    c4b8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c4bc:	cmp	w0, #0x0
    c4c0:	b.gt	c4f4 <exp2f128@@GLIBC_2.27+0x9c>
    c4c4:	movi	v1.2d, #0x0
    c4c8:	stp	x19, x20, [sp, #64]
    c4cc:	ldr	q0, [sp, #64]
    c4d0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    c4d4:	cbz	w0, c4f4 <exp2f128@@GLIBC_2.27+0x9c>
    c4d8:	stp	x19, x20, [sp, #64]
    c4dc:	ldp	x19, x20, [sp, #16]
    c4e0:	ldp	x21, x22, [sp, #32]
    c4e4:	ldr	x23, [sp, #48]
    c4e8:	ldr	q0, [sp, #64]
    c4ec:	ldp	x29, x30, [sp], #96
    c4f0:	ret
    c4f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c4f8:	add	x0, x0, #0x300
    c4fc:	and	x21, x23, #0x7fffffffffffffff
    c500:	stp	x22, x21, [sp, #64]
    c504:	ldr	q1, [x0]
    c508:	ldr	q0, [sp, #64]
    c50c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c510:	cbnz	w0, c4d8 <exp2f128@@GLIBC_2.27+0x80>
    c514:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c518:	add	x0, x0, #0x300
    c51c:	stp	x22, x21, [sp, #64]
    c520:	ldr	q1, [x0]
    c524:	ldr	q0, [sp, #64]
    c528:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c52c:	cmp	w0, #0x0
    c530:	b.gt	c4d8 <exp2f128@@GLIBC_2.27+0x80>
    c534:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c538:	ldr	x0, [x0, #4000]
    c53c:	ldr	w0, [x0]
    c540:	cmn	w0, #0x1
    c544:	b.eq	c4d8 <exp2f128@@GLIBC_2.27+0x80>  // b.none
    c548:	stp	x22, x23, [sp, #64]
    c54c:	cmp	x23, #0x0
    c550:	cset	w0, lt  // lt = tstop
    c554:	stp	x22, x23, [sp, #80]
    c558:	add	w0, w0, #0xf4
    c55c:	ldr	q1, [sp, #64]
    c560:	ldp	x19, x20, [sp, #16]
    c564:	ldp	x21, x22, [sp, #32]
    c568:	ldr	x23, [sp, #48]
    c56c:	ldr	q0, [sp, #80]
    c570:	ldp	x29, x30, [sp], #96
    c574:	b	e038 <lgammal@GLIBC_2.17+0x198>

000000000000c578 <pow10l@GLIBC_2.17>:
    c578:	stp	x29, x30, [sp, #-96]!
    c57c:	mov	x29, sp
    c580:	stp	x19, x20, [sp, #16]
    c584:	stp	x21, x22, [sp, #32]
    c588:	str	x23, [sp, #48]
    c58c:	str	q0, [sp, #64]
    c590:	ldr	x22, [sp, #64]
    c594:	ldr	x23, [sp, #72]
    c598:	bl	25338 <__exp10l_finite@GLIBC_2.17>
    c59c:	str	q0, [sp, #64]
    c5a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c5a4:	ldp	x19, x20, [sp, #64]
    c5a8:	add	x0, x0, #0x300
    c5ac:	ldr	q1, [x0]
    c5b0:	and	x21, x20, #0x7fffffffffffffff
    c5b4:	str	x21, [sp, #72]
    c5b8:	ldr	q0, [sp, #64]
    c5bc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c5c0:	cbnz	w0, c614 <pow10l@GLIBC_2.17+0x9c>
    c5c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c5c8:	add	x0, x0, #0x300
    c5cc:	stp	x19, x21, [sp, #64]
    c5d0:	ldr	q1, [x0]
    c5d4:	ldr	q0, [sp, #64]
    c5d8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c5dc:	cmp	w0, #0x0
    c5e0:	b.gt	c614 <pow10l@GLIBC_2.17+0x9c>
    c5e4:	movi	v1.2d, #0x0
    c5e8:	stp	x19, x20, [sp, #64]
    c5ec:	ldr	q0, [sp, #64]
    c5f0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    c5f4:	cbz	w0, c614 <pow10l@GLIBC_2.17+0x9c>
    c5f8:	stp	x19, x20, [sp, #64]
    c5fc:	ldp	x19, x20, [sp, #16]
    c600:	ldp	x21, x22, [sp, #32]
    c604:	ldr	x23, [sp, #48]
    c608:	ldr	q0, [sp, #64]
    c60c:	ldp	x29, x30, [sp], #96
    c610:	ret
    c614:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c618:	add	x0, x0, #0x300
    c61c:	and	x21, x23, #0x7fffffffffffffff
    c620:	stp	x22, x21, [sp, #64]
    c624:	ldr	q1, [x0]
    c628:	ldr	q0, [sp, #64]
    c62c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c630:	cbnz	w0, c5f8 <pow10l@GLIBC_2.17+0x80>
    c634:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c638:	add	x0, x0, #0x300
    c63c:	stp	x22, x21, [sp, #64]
    c640:	ldr	q1, [x0]
    c644:	ldr	q0, [sp, #64]
    c648:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c64c:	cmp	w0, #0x0
    c650:	b.gt	c5f8 <pow10l@GLIBC_2.17+0x80>
    c654:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c658:	ldr	x0, [x0, #4000]
    c65c:	ldr	w0, [x0]
    c660:	cmn	w0, #0x1
    c664:	b.eq	c5f8 <pow10l@GLIBC_2.17+0x80>  // b.none
    c668:	stp	x22, x23, [sp, #64]
    c66c:	cmp	x23, #0x0
    c670:	cset	w0, lt  // lt = tstop
    c674:	stp	x22, x23, [sp, #80]
    c678:	add	w0, w0, #0xf6
    c67c:	ldr	q1, [sp, #64]
    c680:	ldp	x19, x20, [sp, #16]
    c684:	ldp	x21, x22, [sp, #32]
    c688:	ldr	x23, [sp, #48]
    c68c:	ldr	q0, [sp, #80]
    c690:	ldp	x29, x30, [sp], #96
    c694:	b	e038 <lgammal@GLIBC_2.17+0x198>

000000000000c698 <fmodf128@@GLIBC_2.27>:
    c698:	stp	x29, x30, [sp, #-80]!
    c69c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c6a0:	add	x0, x0, #0x300
    c6a4:	mov	x29, sp
    c6a8:	stp	x19, x20, [sp, #16]
    c6ac:	mov	w20, #0x1                   	// #1
    c6b0:	stp	x21, x22, [sp, #32]
    c6b4:	str	q0, [sp, #48]
    c6b8:	ldp	x19, x21, [sp, #48]
    c6bc:	str	q1, [sp, #64]
    c6c0:	ldr	q1, [x0]
    c6c4:	and	x22, x21, #0x7fffffffffffffff
    c6c8:	str	x22, [sp, #56]
    c6cc:	ldr	q0, [sp, #48]
    c6d0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c6d4:	cbnz	w0, c6f8 <fmodf128@@GLIBC_2.27+0x60>
    c6d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c6dc:	add	x0, x0, #0x300
    c6e0:	stp	x19, x22, [sp, #48]
    c6e4:	ldr	q1, [x0]
    c6e8:	ldr	q0, [sp, #48]
    c6ec:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    c6f0:	cmp	w0, #0x0
    c6f4:	cset	w20, le
    c6f8:	movi	v1.2d, #0x0
    c6fc:	ldr	q0, [sp, #64]
    c700:	eor	w20, w20, #0x1
    c704:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    c708:	cmp	w0, #0x0
    c70c:	cset	w0, eq  // eq = none
    c710:	orr	w20, w20, w0
    c714:	tbnz	w20, #0, c734 <fmodf128@@GLIBC_2.27+0x9c>
    c718:	stp	x19, x21, [sp, #48]
    c71c:	ldr	q1, [sp, #64]
    c720:	ldp	x19, x20, [sp, #16]
    c724:	ldp	x21, x22, [sp, #32]
    c728:	ldr	q0, [sp, #48]
    c72c:	ldp	x29, x30, [sp], #80
    c730:	b	146b0 <__fmodl_finite@GLIBC_2.17>
    c734:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c738:	stp	x19, x21, [sp, #48]
    c73c:	ldr	q1, [sp, #64]
    c740:	ldr	x0, [x0, #4000]
    c744:	ldr	q0, [sp, #48]
    c748:	ldr	w0, [x0]
    c74c:	cmn	w0, #0x1
    c750:	cset	w20, ne  // ne = any
    c754:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c758:	cmp	w0, #0x0
    c75c:	csel	w20, w20, wzr, eq  // eq = none
    c760:	cbz	w20, c718 <fmodf128@@GLIBC_2.27+0x80>
    c764:	stp	x19, x21, [sp, #48]
    c768:	mov	w0, #0xe3                  	// #227
    c76c:	ldr	q1, [sp, #64]
    c770:	ldp	x19, x20, [sp, #16]
    c774:	ldp	x21, x22, [sp, #32]
    c778:	ldr	q0, [sp, #48]
    c77c:	ldp	x29, x30, [sp], #80
    c780:	b	e038 <lgammal@GLIBC_2.17+0x198>
    c784:	nop

000000000000c788 <hypotf128@@GLIBC_2.27>:
    c788:	stp	x29, x30, [sp, #-112]!
    c78c:	mov	x29, sp
    c790:	stp	x21, x22, [sp, #32]
    c794:	stp	x23, x24, [sp, #48]
    c798:	str	x25, [sp, #64]
    c79c:	str	q0, [sp, #80]
    c7a0:	str	q1, [sp, #96]
    c7a4:	ldp	x22, x23, [sp, #80]
    c7a8:	stp	x19, x20, [sp, #16]
    c7ac:	ldr	x24, [sp, #96]
    c7b0:	str	x24, [sp, #80]
    c7b4:	ldr	x25, [sp, #104]
    c7b8:	str	x25, [sp, #88]
    c7bc:	str	x22, [sp, #96]
    c7c0:	str	x23, [sp, #104]
    c7c4:	ldr	q1, [sp, #80]
    c7c8:	ldr	q0, [sp, #96]
    c7cc:	bl	14a50 <__hypotl_finite@GLIBC_2.17>
    c7d0:	str	q0, [sp, #80]
    c7d4:	ldp	x19, x20, [sp, #80]
    c7d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c7dc:	add	x0, x0, #0x300
    c7e0:	ldr	q1, [x0]
    c7e4:	and	x21, x20, #0x7fffffffffffffff
    c7e8:	str	x21, [sp, #88]
    c7ec:	ldr	q0, [sp, #80]
    c7f0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c7f4:	cbnz	w0, c838 <hypotf128@@GLIBC_2.27+0xb0>
    c7f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c7fc:	add	x0, x0, #0x300
    c800:	stp	x19, x21, [sp, #80]
    c804:	ldr	q1, [x0]
    c808:	ldr	q0, [sp, #80]
    c80c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c810:	cmp	w0, #0x0
    c814:	b.gt	c838 <hypotf128@@GLIBC_2.27+0xb0>
    c818:	stp	x19, x20, [sp, #80]
    c81c:	ldp	x19, x20, [sp, #16]
    c820:	ldp	x21, x22, [sp, #32]
    c824:	ldp	x23, x24, [sp, #48]
    c828:	ldr	x25, [sp, #64]
    c82c:	ldr	q0, [sp, #80]
    c830:	ldp	x29, x30, [sp], #112
    c834:	ret
    c838:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c83c:	add	x0, x0, #0x300
    c840:	and	x21, x23, #0x7fffffffffffffff
    c844:	stp	x22, x21, [sp, #80]
    c848:	ldr	q1, [x0]
    c84c:	ldr	q0, [sp, #80]
    c850:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c854:	cbnz	w0, c818 <hypotf128@@GLIBC_2.27+0x90>
    c858:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c85c:	add	x0, x0, #0x300
    c860:	stp	x22, x21, [sp, #80]
    c864:	ldr	q1, [x0]
    c868:	ldr	q0, [sp, #80]
    c86c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c870:	cmp	w0, #0x0
    c874:	b.gt	c818 <hypotf128@@GLIBC_2.27+0x90>
    c878:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c87c:	add	x0, x0, #0x300
    c880:	and	x21, x25, #0x7fffffffffffffff
    c884:	stp	x24, x21, [sp, #80]
    c888:	ldr	q1, [x0]
    c88c:	ldr	q0, [sp, #80]
    c890:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c894:	cbnz	w0, c818 <hypotf128@@GLIBC_2.27+0x90>
    c898:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c89c:	add	x0, x0, #0x300
    c8a0:	stp	x24, x21, [sp, #80]
    c8a4:	ldr	q1, [x0]
    c8a8:	ldr	q0, [sp, #80]
    c8ac:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c8b0:	cmp	w0, #0x0
    c8b4:	b.gt	c818 <hypotf128@@GLIBC_2.27+0x90>
    c8b8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c8bc:	ldr	x0, [x0, #4000]
    c8c0:	ldr	w0, [x0]
    c8c4:	cmn	w0, #0x1
    c8c8:	b.eq	c818 <hypotf128@@GLIBC_2.27+0x90>  // b.none
    c8cc:	stp	x24, x25, [sp, #80]
    c8d0:	mov	w0, #0xcc                  	// #204
    c8d4:	stp	x22, x23, [sp, #96]
    c8d8:	ldr	q1, [sp, #80]
    c8dc:	ldp	x19, x20, [sp, #16]
    c8e0:	ldp	x21, x22, [sp, #32]
    c8e4:	ldp	x23, x24, [sp, #48]
    c8e8:	ldr	x25, [sp, #64]
    c8ec:	ldr	q0, [sp, #96]
    c8f0:	ldp	x29, x30, [sp], #112
    c8f4:	b	e038 <lgammal@GLIBC_2.17+0x198>

000000000000c8f8 <j0f128@@GLIBC_2.27>:
    c8f8:	stp	x29, x30, [sp, #-80]!
    c8fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c900:	add	x0, x0, #0x310
    c904:	mov	x29, sp
    c908:	stp	x19, x20, [sp, #16]
    c90c:	ldr	q1, [x0]
    c910:	str	q0, [sp, #48]
    c914:	ldp	x19, x20, [sp, #48]
    c918:	str	x21, [sp, #32]
    c91c:	and	x21, x20, #0x7fffffffffffffff
    c920:	str	x21, [sp, #56]
    c924:	ldr	q0, [sp, #48]
    c928:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c92c:	cbnz	w0, c950 <j0f128@@GLIBC_2.27+0x58>
    c930:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c934:	add	x0, x0, #0x310
    c938:	stp	x19, x21, [sp, #48]
    c93c:	ldr	q1, [x0]
    c940:	ldr	q0, [sp, #48]
    c944:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    c948:	cmp	w0, #0x0
    c94c:	b.gt	c968 <j0f128@@GLIBC_2.27+0x70>
    c950:	stp	x19, x20, [sp, #48]
    c954:	ldp	x19, x20, [sp, #16]
    c958:	ldr	x21, [sp, #32]
    c95c:	ldr	q0, [sp, #48]
    c960:	ldp	x29, x30, [sp], #80
    c964:	b	14e60 <__j0l_finite@GLIBC_2.17>
    c968:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    c96c:	ldr	x0, [x0, #4000]
    c970:	ldr	w0, [x0]
    c974:	cmp	w0, #0x2
    c978:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    c97c:	b.eq	c950 <j0f128@@GLIBC_2.27+0x58>  // b.none
    c980:	stp	x19, x20, [sp, #48]
    c984:	mov	w0, #0xea                  	// #234
    c988:	stp	x19, x20, [sp, #64]
    c98c:	ldr	q1, [sp, #48]
    c990:	ldp	x19, x20, [sp, #16]
    c994:	ldr	x21, [sp, #32]
    c998:	ldr	q0, [sp, #64]
    c99c:	ldp	x29, x30, [sp], #80
    c9a0:	b	e038 <lgammal@GLIBC_2.17+0x198>
    c9a4:	nop

000000000000c9a8 <y0f128@@GLIBC_2.27>:
    c9a8:	movi	v1.2d, #0x0
    c9ac:	stp	x29, x30, [sp, #-48]!
    c9b0:	mov	x29, sp
    c9b4:	stp	x19, x20, [sp, #16]
    c9b8:	mov	w19, #0x1                   	// #1
    c9bc:	str	q0, [sp, #32]
    c9c0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c9c4:	cbnz	w0, c9dc <y0f128@@GLIBC_2.27+0x34>
    c9c8:	movi	v1.2d, #0x0
    c9cc:	ldr	q0, [sp, #32]
    c9d0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    c9d4:	cmp	w0, #0x0
    c9d8:	cset	w19, gt
    c9dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c9e0:	add	x0, x0, #0x310
    c9e4:	ldr	q0, [sp, #32]
    c9e8:	mov	w20, #0x1                   	// #1
    c9ec:	ldr	q1, [x0]
    c9f0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    c9f4:	cbnz	w0, ca14 <y0f128@@GLIBC_2.27+0x6c>
    c9f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    c9fc:	add	x0, x0, #0x310
    ca00:	ldr	q0, [sp, #32]
    ca04:	ldr	q1, [x0]
    ca08:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    ca0c:	cmp	w0, #0x0
    ca10:	cset	w20, le
    ca14:	and	w19, w19, w20
    ca18:	tbz	w19, #0, ca2c <y0f128@@GLIBC_2.27+0x84>
    ca1c:	ldp	x19, x20, [sp, #16]
    ca20:	ldr	q0, [sp, #32]
    ca24:	ldp	x29, x30, [sp], #48
    ca28:	b	160e0 <__y0l_finite@GLIBC_2.17>
    ca2c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ca30:	ldr	x0, [x0, #4000]
    ca34:	ldr	w19, [x0]
    ca38:	cmn	w19, #0x1
    ca3c:	b.eq	ca1c <y0f128@@GLIBC_2.27+0x74>  // b.none
    ca40:	movi	v1.2d, #0x0
    ca44:	ldr	q0, [sp, #32]
    ca48:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    ca4c:	tbnz	w0, #31, ca90 <y0f128@@GLIBC_2.27+0xe8>
    ca50:	movi	v1.2d, #0x0
    ca54:	ldr	q0, [sp, #32]
    ca58:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    ca5c:	cbz	w0, ca80 <y0f128@@GLIBC_2.27+0xd8>
    ca60:	cmp	w19, #0x2
    ca64:	mov	w0, #0xeb                  	// #235
    ca68:	b.eq	ca1c <y0f128@@GLIBC_2.27+0x74>  // b.none
    ca6c:	ldp	x19, x20, [sp, #16]
    ca70:	ldr	q1, [sp, #32]
    ca74:	ldp	x29, x30, [sp], #48
    ca78:	mov	v0.16b, v1.16b
    ca7c:	b	e038 <lgammal@GLIBC_2.17+0x198>
    ca80:	mov	w0, #0x2                   	// #2
    ca84:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    ca88:	mov	w0, #0xd0                  	// #208
    ca8c:	b	ca6c <y0f128@@GLIBC_2.27+0xc4>
    ca90:	mov	w0, #0x1                   	// #1
    ca94:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    ca98:	mov	w0, #0xd1                  	// #209
    ca9c:	b	ca6c <y0f128@@GLIBC_2.27+0xc4>

000000000000caa0 <j1f128@@GLIBC_2.27>:
    caa0:	stp	x29, x30, [sp, #-80]!
    caa4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    caa8:	add	x0, x0, #0x310
    caac:	mov	x29, sp
    cab0:	stp	x19, x20, [sp, #16]
    cab4:	ldr	q1, [x0]
    cab8:	str	q0, [sp, #48]
    cabc:	ldp	x19, x20, [sp, #48]
    cac0:	str	x21, [sp, #32]
    cac4:	and	x21, x20, #0x7fffffffffffffff
    cac8:	str	x21, [sp, #56]
    cacc:	ldr	q0, [sp, #48]
    cad0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    cad4:	cbnz	w0, caf8 <j1f128@@GLIBC_2.27+0x58>
    cad8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    cadc:	add	x0, x0, #0x310
    cae0:	stp	x19, x21, [sp, #48]
    cae4:	ldr	q1, [x0]
    cae8:	ldr	q0, [sp, #48]
    caec:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    caf0:	cmp	w0, #0x0
    caf4:	b.gt	cb10 <j1f128@@GLIBC_2.27+0x70>
    caf8:	stp	x19, x20, [sp, #48]
    cafc:	ldp	x19, x20, [sp, #16]
    cb00:	ldr	x21, [sp, #32]
    cb04:	ldr	q0, [sp, #48]
    cb08:	ldp	x29, x30, [sp], #80
    cb0c:	b	173a0 <__j1l_finite@GLIBC_2.17>
    cb10:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    cb14:	ldr	x0, [x0, #4000]
    cb18:	ldr	w0, [x0]
    cb1c:	cmp	w0, #0x2
    cb20:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    cb24:	b.eq	caf8 <j1f128@@GLIBC_2.27+0x58>  // b.none
    cb28:	stp	x19, x20, [sp, #48]
    cb2c:	mov	w0, #0xec                  	// #236
    cb30:	stp	x19, x20, [sp, #64]
    cb34:	ldr	q1, [sp, #48]
    cb38:	ldp	x19, x20, [sp, #16]
    cb3c:	ldr	x21, [sp, #32]
    cb40:	ldr	q0, [sp, #64]
    cb44:	ldp	x29, x30, [sp], #80
    cb48:	b	e038 <lgammal@GLIBC_2.17+0x198>
    cb4c:	nop

000000000000cb50 <y1f128@@GLIBC_2.27>:
    cb50:	movi	v1.2d, #0x0
    cb54:	stp	x29, x30, [sp, #-48]!
    cb58:	mov	x29, sp
    cb5c:	stp	x19, x20, [sp, #16]
    cb60:	mov	w19, #0x1                   	// #1
    cb64:	str	q0, [sp, #32]
    cb68:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    cb6c:	cbnz	w0, cb84 <y1f128@@GLIBC_2.27+0x34>
    cb70:	movi	v1.2d, #0x0
    cb74:	ldr	q0, [sp, #32]
    cb78:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    cb7c:	cmp	w0, #0x0
    cb80:	cset	w19, gt
    cb84:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    cb88:	add	x0, x0, #0x310
    cb8c:	ldr	q0, [sp, #32]
    cb90:	mov	w20, #0x1                   	// #1
    cb94:	ldr	q1, [x0]
    cb98:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    cb9c:	cbnz	w0, cbbc <y1f128@@GLIBC_2.27+0x6c>
    cba0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    cba4:	add	x0, x0, #0x310
    cba8:	ldr	q0, [sp, #32]
    cbac:	ldr	q1, [x0]
    cbb0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    cbb4:	cmp	w0, #0x0
    cbb8:	cset	w20, le
    cbbc:	and	w19, w19, w20
    cbc0:	tbz	w19, #0, cbd4 <y1f128@@GLIBC_2.27+0x84>
    cbc4:	ldp	x19, x20, [sp, #16]
    cbc8:	ldr	q0, [sp, #32]
    cbcc:	ldp	x29, x30, [sp], #48
    cbd0:	b	186a8 <__y1l_finite@GLIBC_2.17>
    cbd4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    cbd8:	ldr	x0, [x0, #4000]
    cbdc:	ldr	w19, [x0]
    cbe0:	cmn	w19, #0x1
    cbe4:	b.eq	cbc4 <y1f128@@GLIBC_2.27+0x74>  // b.none
    cbe8:	movi	v1.2d, #0x0
    cbec:	ldr	q0, [sp, #32]
    cbf0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    cbf4:	tbnz	w0, #31, cc38 <y1f128@@GLIBC_2.27+0xe8>
    cbf8:	movi	v1.2d, #0x0
    cbfc:	ldr	q0, [sp, #32]
    cc00:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    cc04:	cbz	w0, cc28 <y1f128@@GLIBC_2.27+0xd8>
    cc08:	cmp	w19, #0x2
    cc0c:	mov	w0, #0xed                  	// #237
    cc10:	b.eq	cbc4 <y1f128@@GLIBC_2.27+0x74>  // b.none
    cc14:	ldp	x19, x20, [sp, #16]
    cc18:	ldr	q1, [sp, #32]
    cc1c:	ldp	x29, x30, [sp], #48
    cc20:	mov	v0.16b, v1.16b
    cc24:	b	e038 <lgammal@GLIBC_2.17+0x198>
    cc28:	mov	w0, #0x2                   	// #2
    cc2c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    cc30:	mov	w0, #0xd2                  	// #210
    cc34:	b	cc14 <y1f128@@GLIBC_2.27+0xc4>
    cc38:	mov	w0, #0x1                   	// #1
    cc3c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    cc40:	mov	w0, #0xd3                  	// #211
    cc44:	b	cc14 <y1f128@@GLIBC_2.27+0xc4>

000000000000cc48 <jnf128@@GLIBC_2.27>:
    cc48:	stp	x29, x30, [sp, #-96]!
    cc4c:	mov	x29, sp
    cc50:	stp	x19, x20, [sp, #16]
    cc54:	stp	x21, x22, [sp, #32]
    cc58:	mov	w22, w0
    cc5c:	str	q0, [sp, #48]
    cc60:	ldp	x20, x19, [sp, #48]
    cc64:	bl	19a50 <__jnl_finite@GLIBC_2.17>
    cc68:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    cc6c:	stp	x20, x19, [sp, #48]
    cc70:	ldr	x1, [x1, #4000]
    cc74:	stp	x20, x19, [sp, #64]
    cc78:	ldr	q1, [sp, #48]
    cc7c:	str	q0, [sp, #80]
    cc80:	ldr	w0, [x1]
    cc84:	ldr	q0, [sp, #64]
    cc88:	cmp	w0, #0x2
    cc8c:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    cc90:	cset	w21, eq  // eq = none
    cc94:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    cc98:	cmp	w0, #0x0
    cc9c:	csinc	w21, w21, wzr, eq  // eq = none
    cca0:	cbnz	w21, ccc8 <jnf128@@GLIBC_2.27+0x80>
    cca4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    cca8:	add	x0, x0, #0x310
    ccac:	ldr	q1, [x0]
    ccb0:	and	x0, x19, #0x7fffffffffffffff
    ccb4:	stp	x20, x0, [sp, #48]
    ccb8:	ldr	q0, [sp, #48]
    ccbc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    ccc0:	cmp	w0, #0x0
    ccc4:	b.gt	ccdc <jnf128@@GLIBC_2.27+0x94>
    ccc8:	ldp	x19, x20, [sp, #16]
    cccc:	ldp	x21, x22, [sp, #32]
    ccd0:	ldr	q0, [sp, #80]
    ccd4:	ldp	x29, x30, [sp], #96
    ccd8:	ret
    ccdc:	scvtf	d0, w22
    cce0:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
    cce4:	stp	x20, x19, [sp, #48]
    cce8:	mov	w0, #0xee                  	// #238
    ccec:	ldp	x19, x20, [sp, #16]
    ccf0:	ldp	x21, x22, [sp, #32]
    ccf4:	ldr	q1, [sp, #48]
    ccf8:	ldp	x29, x30, [sp], #96
    ccfc:	b	e038 <lgammal@GLIBC_2.17+0x198>

000000000000cd00 <ynf128@@GLIBC_2.27>:
    cd00:	stp	x29, x30, [sp, #-80]!
    cd04:	mov	x29, sp
    cd08:	stp	x19, x20, [sp, #16]
    cd0c:	str	x21, [sp, #32]
    cd10:	mov	w21, w0
    cd14:	str	q0, [sp, #48]
    cd18:	bl	1a240 <__ynl_finite@GLIBC_2.17>
    cd1c:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    cd20:	ldr	q1, [sp, #48]
    cd24:	str	q0, [sp, #64]
    cd28:	ldr	x1, [x1, #4000]
    cd2c:	mov	v0.16b, v1.16b
    cd30:	ldr	w20, [x1]
    cd34:	cmn	w20, #0x1
    cd38:	cset	w19, eq  // eq = none
    cd3c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    cd40:	cmp	w0, #0x0
    cd44:	csinc	w19, w19, wzr, eq  // eq = none
    cd48:	cbnz	w19, cd8c <ynf128@@GLIBC_2.27+0x8c>
    cd4c:	movi	v1.2d, #0x0
    cd50:	ldr	q0, [sp, #48]
    cd54:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    cd58:	cmp	w0, #0x0
    cd5c:	b.le	cda0 <ynf128@@GLIBC_2.27+0xa0>
    cd60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    cd64:	add	x0, x0, #0x310
    cd68:	cmp	w20, #0x2
    cd6c:	ldr	q0, [sp, #48]
    cd70:	cset	w19, ne  // ne = any
    cd74:	ldr	q1, [x0]
    cd78:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    cd7c:	cmp	w0, #0x0
    cd80:	cset	w0, gt
    cd84:	tst	w19, w0
    cd88:	b.ne	cdf0 <ynf128@@GLIBC_2.27+0xf0>  // b.any
    cd8c:	ldp	x19, x20, [sp, #16]
    cd90:	ldr	x21, [sp, #32]
    cd94:	ldr	q0, [sp, #64]
    cd98:	ldp	x29, x30, [sp], #80
    cd9c:	ret
    cda0:	scvtf	d0, w21
    cda4:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
    cda8:	str	q0, [sp, #64]
    cdac:	movi	v1.2d, #0x0
    cdb0:	ldr	q0, [sp, #48]
    cdb4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    cdb8:	ldr	q2, [sp, #64]
    cdbc:	ldr	q1, [sp, #48]
    cdc0:	mov	v0.16b, v2.16b
    cdc4:	cbz	w0, cddc <ynf128@@GLIBC_2.27+0xdc>
    cdc8:	ldp	x19, x20, [sp, #16]
    cdcc:	mov	w0, #0xd5                  	// #213
    cdd0:	ldr	x21, [sp, #32]
    cdd4:	ldp	x29, x30, [sp], #80
    cdd8:	b	e038 <lgammal@GLIBC_2.17+0x198>
    cddc:	ldp	x19, x20, [sp, #16]
    cde0:	mov	w0, #0xd4                  	// #212
    cde4:	ldr	x21, [sp, #32]
    cde8:	ldp	x29, x30, [sp], #80
    cdec:	b	e038 <lgammal@GLIBC_2.17+0x198>
    cdf0:	scvtf	d0, w21
    cdf4:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
    cdf8:	ldp	x19, x20, [sp, #16]
    cdfc:	mov	w0, #0xef                  	// #239
    ce00:	ldr	x21, [sp, #32]
    ce04:	ldr	q1, [sp, #48]
    ce08:	ldp	x29, x30, [sp], #80
    ce0c:	b	e038 <lgammal@GLIBC_2.17+0x198>

000000000000ce10 <log2f128@@GLIBC_2.27>:
    ce10:	movi	v1.2d, #0x0
    ce14:	stp	x29, x30, [sp, #-32]!
    ce18:	mov	x29, sp
    ce1c:	str	q0, [sp, #16]
    ce20:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    ce24:	cbnz	w0, ce3c <log2f128@@GLIBC_2.27+0x2c>
    ce28:	movi	v1.2d, #0x0
    ce2c:	ldr	q0, [sp, #16]
    ce30:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    ce34:	cmp	w0, #0x0
    ce38:	b.le	ce48 <log2f128@@GLIBC_2.27+0x38>
    ce3c:	ldr	q0, [sp, #16]
    ce40:	ldp	x29, x30, [sp], #32
    ce44:	b	239b0 <__log2l_finite@GLIBC_2.17>
    ce48:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ce4c:	ldr	x0, [x0, #4000]
    ce50:	ldr	w0, [x0]
    ce54:	cmn	w0, #0x1
    ce58:	b.eq	ce3c <log2f128@@GLIBC_2.27+0x2c>  // b.none
    ce5c:	movi	v1.2d, #0x0
    ce60:	ldr	q0, [sp, #16]
    ce64:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    ce68:	cbz	w0, ce88 <log2f128@@GLIBC_2.27+0x78>
    ce6c:	mov	w0, #0x1                   	// #1
    ce70:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    ce74:	mov	w0, #0xf9                  	// #249
    ce78:	ldr	q1, [sp, #16]
    ce7c:	ldp	x29, x30, [sp], #32
    ce80:	mov	v0.16b, v1.16b
    ce84:	b	e038 <lgammal@GLIBC_2.17+0x198>
    ce88:	mov	w0, #0x2                   	// #2
    ce8c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    ce90:	mov	w0, #0xf8                  	// #248
    ce94:	b	ce78 <log2f128@@GLIBC_2.27+0x68>

000000000000ce98 <log10f128@@GLIBC_2.27>:
    ce98:	movi	v1.2d, #0x0
    ce9c:	stp	x29, x30, [sp, #-32]!
    cea0:	mov	x29, sp
    cea4:	str	q0, [sp, #16]
    cea8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    ceac:	cbnz	w0, cec4 <log10f128@@GLIBC_2.27+0x2c>
    ceb0:	movi	v1.2d, #0x0
    ceb4:	ldr	q0, [sp, #16]
    ceb8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    cebc:	cmp	w0, #0x0
    cec0:	b.le	ced0 <log10f128@@GLIBC_2.27+0x38>
    cec4:	ldr	q0, [sp, #16]
    cec8:	ldp	x29, x30, [sp], #32
    cecc:	b	1cda0 <__log10l_finite@GLIBC_2.17>
    ced0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ced4:	ldr	x0, [x0, #4000]
    ced8:	ldr	w0, [x0]
    cedc:	cmn	w0, #0x1
    cee0:	b.eq	cec4 <log10f128@@GLIBC_2.27+0x2c>  // b.none
    cee4:	movi	v1.2d, #0x0
    cee8:	ldr	q0, [sp, #16]
    ceec:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    cef0:	cbz	w0, cf10 <log10f128@@GLIBC_2.27+0x78>
    cef4:	mov	w0, #0x1                   	// #1
    cef8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    cefc:	mov	w0, #0xdb                  	// #219
    cf00:	ldr	q1, [sp, #16]
    cf04:	ldp	x29, x30, [sp], #32
    cf08:	mov	v0.16b, v1.16b
    cf0c:	b	e038 <lgammal@GLIBC_2.17+0x198>
    cf10:	mov	w0, #0x2                   	// #2
    cf14:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    cf18:	mov	w0, #0xda                  	// #218
    cf1c:	b	cf00 <log10f128@@GLIBC_2.27+0x68>

000000000000cf20 <logf128@@GLIBC_2.27>:
    cf20:	movi	v1.2d, #0x0
    cf24:	stp	x29, x30, [sp, #-32]!
    cf28:	mov	x29, sp
    cf2c:	str	q0, [sp, #16]
    cf30:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    cf34:	cbnz	w0, cf4c <logf128@@GLIBC_2.27+0x2c>
    cf38:	movi	v1.2d, #0x0
    cf3c:	ldr	q0, [sp, #16]
    cf40:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    cf44:	cmp	w0, #0x0
    cf48:	b.le	cf58 <logf128@@GLIBC_2.27+0x38>
    cf4c:	ldr	q0, [sp, #16]
    cf50:	ldp	x29, x30, [sp], #32
    cf54:	b	1c928 <__logl_finite@GLIBC_2.17>
    cf58:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    cf5c:	ldr	x0, [x0, #4000]
    cf60:	ldr	w0, [x0]
    cf64:	cmn	w0, #0x1
    cf68:	b.eq	cf4c <logf128@@GLIBC_2.27+0x2c>  // b.none
    cf6c:	movi	v1.2d, #0x0
    cf70:	ldr	q0, [sp, #16]
    cf74:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    cf78:	cbz	w0, cf98 <logf128@@GLIBC_2.27+0x78>
    cf7c:	mov	w0, #0x1                   	// #1
    cf80:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    cf84:	mov	w0, #0xd9                  	// #217
    cf88:	ldr	q1, [sp, #16]
    cf8c:	ldp	x29, x30, [sp], #32
    cf90:	mov	v0.16b, v1.16b
    cf94:	b	e038 <lgammal@GLIBC_2.17+0x198>
    cf98:	mov	w0, #0x2                   	// #2
    cf9c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    cfa0:	mov	w0, #0xd8                  	// #216
    cfa4:	b	cf88 <logf128@@GLIBC_2.27+0x68>

000000000000cfa8 <powf128@@GLIBC_2.27>:
    cfa8:	stp	x29, x30, [sp, #-112]!
    cfac:	mov	x29, sp
    cfb0:	stp	x21, x22, [sp, #32]
    cfb4:	stp	x23, x24, [sp, #48]
    cfb8:	str	x25, [sp, #64]
    cfbc:	str	q0, [sp, #80]
    cfc0:	str	q1, [sp, #96]
    cfc4:	ldp	x22, x23, [sp, #80]
    cfc8:	stp	x19, x20, [sp, #16]
    cfcc:	ldr	x24, [sp, #96]
    cfd0:	str	x24, [sp, #80]
    cfd4:	ldr	x25, [sp, #104]
    cfd8:	str	x25, [sp, #88]
    cfdc:	str	x22, [sp, #96]
    cfe0:	str	x23, [sp, #104]
    cfe4:	ldr	q1, [sp, #80]
    cfe8:	ldr	q0, [sp, #96]
    cfec:	bl	1d280 <__powl_finite@GLIBC_2.17>
    cff0:	str	q0, [sp, #80]
    cff4:	ldp	x19, x20, [sp, #80]
    cff8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    cffc:	add	x0, x0, #0x300
    d000:	ldr	q1, [x0]
    d004:	and	x21, x20, #0x7fffffffffffffff
    d008:	str	x21, [sp, #88]
    d00c:	ldr	q0, [sp, #80]
    d010:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d014:	cbnz	w0, d06c <powf128@@GLIBC_2.27+0xc4>
    d018:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d01c:	add	x0, x0, #0x300
    d020:	stp	x19, x21, [sp, #80]
    d024:	ldr	q1, [x0]
    d028:	ldr	q0, [sp, #80]
    d02c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d030:	cmp	w0, #0x0
    d034:	b.gt	d06c <powf128@@GLIBC_2.27+0xc4>
    d038:	movi	v1.2d, #0x0
    d03c:	stp	x19, x20, [sp, #80]
    d040:	ldr	q0, [sp, #80]
    d044:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d048:	cbz	w0, d164 <powf128@@GLIBC_2.27+0x1bc>
    d04c:	stp	x19, x20, [sp, #80]
    d050:	ldp	x19, x20, [sp, #16]
    d054:	ldp	x21, x22, [sp, #32]
    d058:	ldp	x23, x24, [sp, #48]
    d05c:	ldr	x25, [sp, #64]
    d060:	ldr	q0, [sp, #80]
    d064:	ldp	x29, x30, [sp], #112
    d068:	ret
    d06c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d070:	ldr	x0, [x0, #4000]
    d074:	ldr	w0, [x0]
    d078:	cmn	w0, #0x1
    d07c:	b.eq	d04c <powf128@@GLIBC_2.27+0xa4>  // b.none
    d080:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d084:	add	x0, x0, #0x300
    d088:	and	x21, x23, #0x7fffffffffffffff
    d08c:	stp	x22, x21, [sp, #80]
    d090:	ldr	q1, [x0]
    d094:	ldr	q0, [sp, #80]
    d098:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d09c:	cbnz	w0, d04c <powf128@@GLIBC_2.27+0xa4>
    d0a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d0a4:	add	x0, x0, #0x300
    d0a8:	stp	x22, x21, [sp, #80]
    d0ac:	ldr	q1, [x0]
    d0b0:	ldr	q0, [sp, #80]
    d0b4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d0b8:	cmp	w0, #0x0
    d0bc:	b.gt	d04c <powf128@@GLIBC_2.27+0xa4>
    d0c0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d0c4:	add	x0, x0, #0x300
    d0c8:	and	x21, x25, #0x7fffffffffffffff
    d0cc:	stp	x24, x21, [sp, #80]
    d0d0:	ldr	q1, [x0]
    d0d4:	ldr	q0, [sp, #80]
    d0d8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d0dc:	cbnz	w0, d04c <powf128@@GLIBC_2.27+0xa4>
    d0e0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d0e4:	add	x0, x0, #0x300
    d0e8:	stp	x24, x21, [sp, #80]
    d0ec:	ldr	q1, [x0]
    d0f0:	ldr	q0, [sp, #80]
    d0f4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d0f8:	cmp	w0, #0x0
    d0fc:	b.gt	d04c <powf128@@GLIBC_2.27+0xa4>
    d100:	stp	x19, x20, [sp, #80]
    d104:	stp	x19, x20, [sp, #96]
    d108:	ldr	q1, [sp, #80]
    d10c:	ldr	q0, [sp, #96]
    d110:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d114:	cbnz	w0, d250 <powf128@@GLIBC_2.27+0x2a8>
    d118:	movi	v1.2d, #0x0
    d11c:	stp	x22, x23, [sp, #80]
    d120:	ldr	q0, [sp, #80]
    d124:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d128:	cbnz	w0, d238 <powf128@@GLIBC_2.27+0x290>
    d12c:	movi	v1.2d, #0x0
    d130:	stp	x24, x25, [sp, #80]
    d134:	ldr	q0, [sp, #80]
    d138:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    d13c:	tbz	w0, #31, d238 <powf128@@GLIBC_2.27+0x290>
    d140:	stp	x24, x25, [sp, #80]
    d144:	stp	x22, x23, [sp, #96]
    d148:	ldr	q1, [sp, #80]
    d14c:	ldr	q0, [sp, #96]
    d150:	tbz	x23, #63, d15c <powf128@@GLIBC_2.27+0x1b4>
    d154:	mov	w0, #0xdf                  	// #223
    d158:	tbnz	x20, #63, d220 <powf128@@GLIBC_2.27+0x278>
    d15c:	mov	w0, #0xf3                  	// #243
    d160:	b	d220 <powf128@@GLIBC_2.27+0x278>
    d164:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d168:	add	x0, x0, #0x300
    d16c:	and	x21, x23, #0x7fffffffffffffff
    d170:	stp	x22, x21, [sp, #80]
    d174:	ldr	q1, [x0]
    d178:	ldr	q0, [sp, #80]
    d17c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d180:	cbnz	w0, d04c <powf128@@GLIBC_2.27+0xa4>
    d184:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d188:	add	x0, x0, #0x300
    d18c:	stp	x22, x21, [sp, #80]
    d190:	ldr	q1, [x0]
    d194:	ldr	q0, [sp, #80]
    d198:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d19c:	cmp	w0, #0x0
    d1a0:	b.gt	d04c <powf128@@GLIBC_2.27+0xa4>
    d1a4:	movi	v1.2d, #0x0
    d1a8:	stp	x22, x23, [sp, #80]
    d1ac:	ldr	q0, [sp, #80]
    d1b0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d1b4:	cbz	w0, d04c <powf128@@GLIBC_2.27+0xa4>
    d1b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d1bc:	add	x0, x0, #0x300
    d1c0:	and	x21, x25, #0x7fffffffffffffff
    d1c4:	stp	x24, x21, [sp, #80]
    d1c8:	ldr	q1, [x0]
    d1cc:	ldr	q0, [sp, #80]
    d1d0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d1d4:	cbnz	w0, d04c <powf128@@GLIBC_2.27+0xa4>
    d1d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d1dc:	add	x0, x0, #0x300
    d1e0:	stp	x24, x21, [sp, #80]
    d1e4:	ldr	q1, [x0]
    d1e8:	ldr	q0, [sp, #80]
    d1ec:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d1f0:	cmp	w0, #0x0
    d1f4:	b.gt	d04c <powf128@@GLIBC_2.27+0xa4>
    d1f8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d1fc:	ldr	x0, [x0, #4000]
    d200:	ldr	w0, [x0]
    d204:	cmn	w0, #0x1
    d208:	b.eq	d04c <powf128@@GLIBC_2.27+0xa4>  // b.none
    d20c:	stp	x24, x25, [sp, #80]
    d210:	mov	w0, #0xde                  	// #222
    d214:	stp	x22, x23, [sp, #96]
    d218:	ldr	q1, [sp, #80]
    d21c:	ldr	q0, [sp, #96]
    d220:	ldp	x19, x20, [sp, #16]
    d224:	ldp	x21, x22, [sp, #32]
    d228:	ldp	x23, x24, [sp, #48]
    d22c:	ldr	x25, [sp, #64]
    d230:	ldp	x29, x30, [sp], #112
    d234:	b	e038 <lgammal@GLIBC_2.17+0x198>
    d238:	stp	x24, x25, [sp, #80]
    d23c:	mov	w0, #0xdd                  	// #221
    d240:	stp	x22, x23, [sp, #96]
    d244:	ldr	q1, [sp, #80]
    d248:	ldr	q0, [sp, #96]
    d24c:	b	d220 <powf128@@GLIBC_2.27+0x278>
    d250:	stp	x24, x25, [sp, #80]
    d254:	mov	w0, #0xe0                  	// #224
    d258:	stp	x22, x23, [sp, #96]
    d25c:	ldr	q1, [sp, #80]
    d260:	ldr	q0, [sp, #96]
    d264:	b	d220 <powf128@@GLIBC_2.27+0x278>

000000000000d268 <dreml@@GLIBC_2.17>:
    d268:	stp	x29, x30, [sp, #-96]!
    d26c:	mov	x29, sp
    d270:	stp	x19, x20, [sp, #16]
    d274:	str	q0, [sp, #48]
    d278:	ldp	x19, x20, [sp, #48]
    d27c:	stp	x19, x20, [sp, #64]
    d280:	str	q1, [sp, #80]
    d284:	mov	v1.16b, v0.16b
    d288:	ldr	q0, [sp, #64]
    d28c:	str	x21, [sp, #32]
    d290:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d294:	cmp	w0, #0x0
    d298:	movi	v1.2d, #0x0
    d29c:	ldr	q0, [sp, #80]
    d2a0:	cset	w21, eq  // eq = none
    d2a4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d2a8:	cmp	w0, #0x0
    d2ac:	cset	w0, eq  // eq = none
    d2b0:	tst	w0, w21
    d2b4:	b.ne	d308 <dreml@@GLIBC_2.17+0xa0>  // b.any
    d2b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d2bc:	add	x0, x0, #0x300
    d2c0:	and	x21, x20, #0x7fffffffffffffff
    d2c4:	stp	x19, x21, [sp, #48]
    d2c8:	ldr	q1, [x0]
    d2cc:	ldr	q0, [sp, #48]
    d2d0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d2d4:	cbnz	w0, d31c <dreml@@GLIBC_2.17+0xb4>
    d2d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d2dc:	add	x0, x0, #0x300
    d2e0:	stp	x19, x21, [sp, #48]
    d2e4:	ldr	q1, [x0]
    d2e8:	ldr	q0, [sp, #48]
    d2ec:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    d2f0:	cmp	w0, #0x0
    d2f4:	b.le	d31c <dreml@@GLIBC_2.17+0xb4>
    d2f8:	ldr	q0, [sp, #80]
    d2fc:	mov	v1.16b, v0.16b
    d300:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d304:	cbnz	w0, d31c <dreml@@GLIBC_2.17+0xb4>
    d308:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d30c:	ldr	x0, [x0, #4000]
    d310:	ldr	w0, [x0]
    d314:	cmn	w0, #0x1
    d318:	b.ne	d338 <dreml@@GLIBC_2.17+0xd0>  // b.any
    d31c:	stp	x19, x20, [sp, #48]
    d320:	ldr	q1, [sp, #80]
    d324:	ldp	x19, x20, [sp, #16]
    d328:	ldr	x21, [sp, #32]
    d32c:	ldr	q0, [sp, #48]
    d330:	ldp	x29, x30, [sp], #96
    d334:	b	1e280 <__remainderl_finite@GLIBC_2.17>
    d338:	stp	x19, x20, [sp, #48]
    d33c:	mov	w0, #0xe4                  	// #228
    d340:	ldr	q1, [sp, #80]
    d344:	ldp	x19, x20, [sp, #16]
    d348:	ldr	x21, [sp, #32]
    d34c:	ldr	q0, [sp, #48]
    d350:	ldp	x29, x30, [sp], #96
    d354:	b	e038 <lgammal@GLIBC_2.17+0x198>
    d358:	stp	x29, x30, [sp, #-112]!
    d35c:	mov	x29, sp
    d360:	str	q0, [sp, #64]
    d364:	ldr	q0, [sp, #64]
    d368:	stp	x19, x20, [sp, #16]
    d36c:	stp	x21, x22, [sp, #32]
    d370:	str	x23, [sp, #48]
    d374:	str	q1, [sp, #96]
    d378:	ldr	x22, [sp, #64]
    d37c:	ldr	x23, [sp, #72]
    d380:	bl	1e550 <__scalbl_finite@GLIBC_2.17>
    d384:	str	q0, [sp, #64]
    d388:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d38c:	ldp	x19, x20, [sp, #64]
    d390:	add	x0, x0, #0x300
    d394:	ldr	q1, [x0]
    d398:	and	x21, x20, #0x7fffffffffffffff
    d39c:	str	x21, [sp, #72]
    d3a0:	ldr	q0, [sp, #64]
    d3a4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d3a8:	cbnz	w0, d424 <dreml@@GLIBC_2.17+0x1bc>
    d3ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d3b0:	add	x0, x0, #0x300
    d3b4:	stp	x19, x21, [sp, #64]
    d3b8:	ldr	q1, [x0]
    d3bc:	ldr	q0, [sp, #64]
    d3c0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    d3c4:	cmp	w0, #0x0
    d3c8:	b.le	d424 <dreml@@GLIBC_2.17+0x1bc>
    d3cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d3d0:	add	x0, x0, #0x300
    d3d4:	and	x21, x23, #0x7fffffffffffffff
    d3d8:	stp	x22, x21, [sp, #64]
    d3dc:	ldr	q1, [x0]
    d3e0:	ldr	q0, [sp, #64]
    d3e4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d3e8:	cbnz	w0, d40c <dreml@@GLIBC_2.17+0x1a4>
    d3ec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d3f0:	add	x0, x0, #0x300
    d3f4:	stp	x22, x21, [sp, #64]
    d3f8:	ldr	q1, [x0]
    d3fc:	ldr	q0, [sp, #64]
    d400:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d404:	cmp	w0, #0x0
    d408:	b.le	d47c <dreml@@GLIBC_2.17+0x214>
    d40c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d410:	ldr	x0, [x0, #3976]
    d414:	mrs	x1, tpidr_el0
    d418:	mov	w2, #0x22                  	// #34
    d41c:	str	w2, [x1, x0]
    d420:	b	d460 <dreml@@GLIBC_2.17+0x1f8>
    d424:	stp	x19, x20, [sp, #64]
    d428:	stp	x22, x23, [sp, #80]
    d42c:	ldr	q1, [sp, #64]
    d430:	ldr	q0, [sp, #80]
    d434:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d438:	stp	x19, x20, [sp, #64]
    d43c:	cmp	w0, #0x0
    d440:	movi	v1.2d, #0x0
    d444:	ldr	q0, [sp, #64]
    d448:	cset	w21, ne  // ne = any
    d44c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d450:	cmp	w0, #0x0
    d454:	cset	w0, eq  // eq = none
    d458:	tst	w0, w21
    d45c:	b.ne	d4a0 <dreml@@GLIBC_2.17+0x238>  // b.any
    d460:	stp	x19, x20, [sp, #64]
    d464:	ldp	x19, x20, [sp, #16]
    d468:	ldp	x21, x22, [sp, #32]
    d46c:	ldr	x23, [sp, #48]
    d470:	ldr	q0, [sp, #64]
    d474:	ldp	x29, x30, [sp], #112
    d478:	ret
    d47c:	ldr	q1, [sp, #96]
    d480:	mov	w0, #0xe8                  	// #232
    d484:	stp	x22, x23, [sp, #64]
    d488:	ldr	q0, [sp, #64]
    d48c:	ldp	x19, x20, [sp, #16]
    d490:	ldp	x21, x22, [sp, #32]
    d494:	ldr	x23, [sp, #48]
    d498:	ldp	x29, x30, [sp], #112
    d49c:	b	e038 <lgammal@GLIBC_2.17+0x198>
    d4a0:	mov	w0, #0xe9                  	// #233
    d4a4:	stp	x22, x23, [sp, #64]
    d4a8:	ldr	q1, [sp, #96]
    d4ac:	b	d488 <dreml@@GLIBC_2.17+0x220>

000000000000d4b0 <scalbl@@GLIBC_2.17>:
    d4b0:	stp	x29, x30, [sp, #-112]!
    d4b4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d4b8:	mov	x29, sp
    d4bc:	ldr	x0, [x0, #4000]
    d4c0:	stp	x21, x22, [sp, #32]
    d4c4:	stp	x23, x24, [sp, #48]
    d4c8:	ldr	w0, [x0]
    d4cc:	str	x25, [sp, #64]
    d4d0:	str	q0, [sp, #80]
    d4d4:	str	q1, [sp, #96]
    d4d8:	ldp	x24, x21, [sp, #80]
    d4dc:	ldr	x25, [sp, #96]
    d4e0:	ldr	x22, [sp, #104]
    d4e4:	cbz	w0, d668 <scalbl@@GLIBC_2.17+0x1b8>
    d4e8:	stp	x25, x22, [sp, #80]
    d4ec:	stp	x24, x21, [sp, #96]
    d4f0:	ldr	q1, [sp, #80]
    d4f4:	ldr	q0, [sp, #96]
    d4f8:	stp	x19, x20, [sp, #16]
    d4fc:	bl	1e550 <__scalbl_finite@GLIBC_2.17>
    d500:	str	q0, [sp, #80]
    d504:	ldp	x19, x20, [sp, #80]
    d508:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d50c:	add	x0, x0, #0x300
    d510:	ldr	q1, [x0]
    d514:	and	x23, x20, #0x7fffffffffffffff
    d518:	str	x23, [sp, #88]
    d51c:	ldr	q0, [sp, #80]
    d520:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d524:	cbnz	w0, d57c <scalbl@@GLIBC_2.17+0xcc>
    d528:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d52c:	add	x0, x0, #0x300
    d530:	stp	x19, x23, [sp, #80]
    d534:	ldr	q1, [x0]
    d538:	ldr	q0, [sp, #80]
    d53c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d540:	cmp	w0, #0x0
    d544:	b.gt	d57c <scalbl@@GLIBC_2.17+0xcc>
    d548:	movi	v1.2d, #0x0
    d54c:	stp	x19, x20, [sp, #80]
    d550:	ldr	q0, [sp, #80]
    d554:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d558:	cbz	w0, d57c <scalbl@@GLIBC_2.17+0xcc>
    d55c:	stp	x19, x20, [sp, #80]
    d560:	ldp	x19, x20, [sp, #16]
    d564:	ldp	x21, x22, [sp, #32]
    d568:	ldp	x23, x24, [sp, #48]
    d56c:	ldr	x25, [sp, #64]
    d570:	ldr	q0, [sp, #80]
    d574:	ldp	x29, x30, [sp], #112
    d578:	ret
    d57c:	stp	x19, x20, [sp, #80]
    d580:	stp	x19, x20, [sp, #96]
    d584:	ldr	q1, [sp, #80]
    d588:	ldr	q0, [sp, #96]
    d58c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d590:	cbnz	w0, d6a4 <scalbl@@GLIBC_2.17+0x1f4>
    d594:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d598:	add	x0, x0, #0x300
    d59c:	stp	x19, x23, [sp, #80]
    d5a0:	ldr	q1, [x0]
    d5a4:	ldr	q0, [sp, #80]
    d5a8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d5ac:	cbnz	w0, d68c <scalbl@@GLIBC_2.17+0x1dc>
    d5b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d5b4:	add	x0, x0, #0x300
    d5b8:	stp	x19, x23, [sp, #80]
    d5bc:	ldr	q1, [x0]
    d5c0:	ldr	q0, [sp, #80]
    d5c4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    d5c8:	cmp	w0, #0x0
    d5cc:	b.le	d68c <scalbl@@GLIBC_2.17+0x1dc>
    d5d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d5d4:	add	x0, x0, #0x300
    d5d8:	and	x21, x21, #0x7fffffffffffffff
    d5dc:	stp	x24, x21, [sp, #80]
    d5e0:	ldr	q1, [x0]
    d5e4:	ldr	q0, [sp, #80]
    d5e8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d5ec:	cbnz	w0, d610 <scalbl@@GLIBC_2.17+0x160>
    d5f0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d5f4:	add	x0, x0, #0x300
    d5f8:	stp	x24, x21, [sp, #80]
    d5fc:	ldr	q1, [x0]
    d600:	ldr	q0, [sp, #80]
    d604:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    d608:	cmp	w0, #0x0
    d60c:	b.gt	d55c <scalbl@@GLIBC_2.17+0xac>
    d610:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d614:	add	x0, x0, #0x300
    d618:	and	x22, x22, #0x7fffffffffffffff
    d61c:	stp	x25, x22, [sp, #80]
    d620:	ldr	q1, [x0]
    d624:	ldr	q0, [sp, #80]
    d628:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d62c:	cbnz	w0, d650 <scalbl@@GLIBC_2.17+0x1a0>
    d630:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d634:	add	x0, x0, #0x300
    d638:	stp	x25, x22, [sp, #80]
    d63c:	ldr	q1, [x0]
    d640:	ldr	q0, [sp, #80]
    d644:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    d648:	cmp	w0, #0x0
    d64c:	b.gt	d55c <scalbl@@GLIBC_2.17+0xac>
    d650:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d654:	ldr	x0, [x0, #3976]
    d658:	mrs	x1, tpidr_el0
    d65c:	mov	w2, #0x22                  	// #34
    d660:	str	w2, [x1, x0]
    d664:	b	d55c <scalbl@@GLIBC_2.17+0xac>
    d668:	stp	x25, x22, [sp, #80]
    d66c:	stp	x24, x21, [sp, #96]
    d670:	ldr	q1, [sp, #80]
    d674:	ldp	x21, x22, [sp, #32]
    d678:	ldp	x23, x24, [sp, #48]
    d67c:	ldr	x25, [sp, #64]
    d680:	ldr	q0, [sp, #96]
    d684:	ldp	x29, x30, [sp], #112
    d688:	b	d358 <dreml@@GLIBC_2.17+0xf0>
    d68c:	movi	v1.2d, #0x0
    d690:	stp	x24, x21, [sp, #80]
    d694:	ldr	q0, [sp, #80]
    d698:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d69c:	cbz	w0, d55c <scalbl@@GLIBC_2.17+0xac>
    d6a0:	b	d610 <scalbl@@GLIBC_2.17+0x160>
    d6a4:	stp	x25, x22, [sp, #80]
    d6a8:	stp	x24, x21, [sp, #96]
    d6ac:	ldr	q1, [sp, #80]
    d6b0:	ldr	q0, [sp, #96]
    d6b4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d6b8:	cbnz	w0, d55c <scalbl@@GLIBC_2.17+0xac>
    d6bc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d6c0:	ldr	x0, [x0, #3976]
    d6c4:	mrs	x1, tpidr_el0
    d6c8:	mov	w2, #0x21                  	// #33
    d6cc:	str	w2, [x1, x0]
    d6d0:	b	d55c <scalbl@@GLIBC_2.17+0xac>
    d6d4:	nop

000000000000d6d8 <sinhf128@@GLIBC_2.27>:
    d6d8:	stp	x29, x30, [sp, #-96]!
    d6dc:	mov	x29, sp
    d6e0:	stp	x19, x20, [sp, #16]
    d6e4:	stp	x21, x22, [sp, #32]
    d6e8:	str	x23, [sp, #48]
    d6ec:	str	q0, [sp, #64]
    d6f0:	ldr	x22, [sp, #64]
    d6f4:	ldr	x23, [sp, #72]
    d6f8:	bl	1e700 <__sinhl_finite@GLIBC_2.17>
    d6fc:	str	q0, [sp, #64]
    d700:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d704:	ldp	x19, x20, [sp, #64]
    d708:	add	x0, x0, #0x300
    d70c:	ldr	q1, [x0]
    d710:	and	x21, x20, #0x7fffffffffffffff
    d714:	str	x21, [sp, #72]
    d718:	ldr	q0, [sp, #64]
    d71c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d720:	cbnz	w0, d760 <sinhf128@@GLIBC_2.27+0x88>
    d724:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d728:	add	x0, x0, #0x300
    d72c:	stp	x19, x21, [sp, #64]
    d730:	ldr	q1, [x0]
    d734:	ldr	q0, [sp, #64]
    d738:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d73c:	cmp	w0, #0x0
    d740:	b.gt	d760 <sinhf128@@GLIBC_2.27+0x88>
    d744:	stp	x19, x20, [sp, #64]
    d748:	ldp	x19, x20, [sp, #16]
    d74c:	ldp	x21, x22, [sp, #32]
    d750:	ldr	x23, [sp, #48]
    d754:	ldr	q0, [sp, #64]
    d758:	ldp	x29, x30, [sp], #96
    d75c:	ret
    d760:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d764:	add	x0, x0, #0x300
    d768:	and	x21, x23, #0x7fffffffffffffff
    d76c:	stp	x22, x21, [sp, #64]
    d770:	ldr	q1, [x0]
    d774:	ldr	q0, [sp, #64]
    d778:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d77c:	cbnz	w0, d744 <sinhf128@@GLIBC_2.27+0x6c>
    d780:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d784:	add	x0, x0, #0x300
    d788:	stp	x22, x21, [sp, #64]
    d78c:	ldr	q1, [x0]
    d790:	ldr	q0, [sp, #64]
    d794:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d798:	cmp	w0, #0x0
    d79c:	b.gt	d744 <sinhf128@@GLIBC_2.27+0x6c>
    d7a0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d7a4:	ldr	x0, [x0, #4000]
    d7a8:	ldr	w0, [x0]
    d7ac:	cmn	w0, #0x1
    d7b0:	b.eq	d744 <sinhf128@@GLIBC_2.27+0x6c>  // b.none
    d7b4:	stp	x22, x23, [sp, #64]
    d7b8:	mov	w0, #0xe1                  	// #225
    d7bc:	stp	x22, x23, [sp, #80]
    d7c0:	ldr	q1, [sp, #64]
    d7c4:	ldp	x19, x20, [sp, #16]
    d7c8:	ldp	x21, x22, [sp, #32]
    d7cc:	ldr	x23, [sp, #48]
    d7d0:	ldr	q0, [sp, #80]
    d7d4:	ldp	x29, x30, [sp], #96
    d7d8:	b	e038 <lgammal@GLIBC_2.17+0x198>
    d7dc:	nop

000000000000d7e0 <sqrtf128@@GLIBC_2.27>:
    d7e0:	movi	v1.2d, #0x0
    d7e4:	stp	x29, x30, [sp, #-32]!
    d7e8:	mov	x29, sp
    d7ec:	str	q0, [sp, #16]
    d7f0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d7f4:	ldr	q2, [sp, #16]
    d7f8:	cbnz	w0, d810 <sqrtf128@@GLIBC_2.27+0x30>
    d7fc:	movi	v1.2d, #0x0
    d800:	mov	v0.16b, v2.16b
    d804:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d808:	ldr	q2, [sp, #16]
    d80c:	tbnz	w0, #31, d81c <sqrtf128@@GLIBC_2.27+0x3c>
    d810:	ldp	x29, x30, [sp], #32
    d814:	mov	v0.16b, v2.16b
    d818:	b	1e998 <__sqrtl_finite@GLIBC_2.17>
    d81c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d820:	ldr	x0, [x0, #4000]
    d824:	ldr	w0, [x0]
    d828:	cmn	w0, #0x1
    d82c:	b.eq	d810 <sqrtf128@@GLIBC_2.27+0x30>  // b.none
    d830:	ldp	x29, x30, [sp], #32
    d834:	mov	v1.16b, v2.16b
    d838:	mov	v0.16b, v2.16b
    d83c:	mov	w0, #0xe2                  	// #226
    d840:	b	e038 <lgammal@GLIBC_2.17+0x198>
    d844:	nop

000000000000d848 <tgammaf128@@GLIBC_2.27>:
    d848:	stp	x29, x30, [sp, #-112]!
    d84c:	mov	x29, sp
    d850:	stp	x21, x22, [sp, #32]
    d854:	adrp	x22, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d858:	ldr	x0, [x22, #4032]
    d85c:	stp	x19, x20, [sp, #16]
    d860:	ldr	x1, [x0]
    d864:	str	x1, [sp, #104]
    d868:	mov	x1, #0x0                   	// #0
    d86c:	add	x0, sp, #0x64
    d870:	stp	x23, x24, [sp, #48]
    d874:	str	q0, [sp, #64]
    d878:	ldp	x23, x24, [sp, #64]
    d87c:	bl	1f0f0 <__gammal_r_finite@GLIBC_2.17>
    d880:	str	q0, [sp, #64]
    d884:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d888:	ldp	x19, x20, [sp, #64]
    d88c:	add	x0, x0, #0x300
    d890:	ldr	q1, [x0]
    d894:	and	x21, x20, #0x7fffffffffffffff
    d898:	str	x21, [sp, #72]
    d89c:	ldr	q0, [sp, #64]
    d8a0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d8a4:	cbnz	w0, d91c <tgammaf128@@GLIBC_2.27+0xd4>
    d8a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d8ac:	add	x0, x0, #0x300
    d8b0:	stp	x19, x21, [sp, #64]
    d8b4:	ldr	q1, [x0]
    d8b8:	ldr	q0, [sp, #64]
    d8bc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d8c0:	cmp	w0, #0x0
    d8c4:	b.gt	d91c <tgammaf128@@GLIBC_2.27+0xd4>
    d8c8:	movi	v1.2d, #0x0
    d8cc:	stp	x19, x20, [sp, #64]
    d8d0:	ldr	q0, [sp, #64]
    d8d4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d8d8:	cbz	w0, d91c <tgammaf128@@GLIBC_2.27+0xd4>
    d8dc:	ldr	w1, [sp, #100]
    d8e0:	eor	x0, x20, #0x8000000000000000
    d8e4:	cmp	w1, #0x0
    d8e8:	csel	x20, x0, x20, lt  // lt = tstop
    d8ec:	ldr	x0, [x22, #4032]
    d8f0:	ldr	x1, [sp, #104]
    d8f4:	ldr	x0, [x0]
    d8f8:	eor	x0, x1, x0
    d8fc:	cbnz	x0, dad0 <tgammaf128@@GLIBC_2.27+0x288>
    d900:	stp	x19, x20, [sp, #64]
    d904:	ldp	x19, x20, [sp, #16]
    d908:	ldp	x21, x22, [sp, #32]
    d90c:	ldp	x23, x24, [sp, #48]
    d910:	ldr	q0, [sp, #64]
    d914:	ldp	x29, x30, [sp], #112
    d918:	ret
    d91c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d920:	add	x0, x0, #0x300
    d924:	and	x21, x24, #0x7fffffffffffffff
    d928:	stp	x23, x21, [sp, #64]
    d92c:	ldr	q1, [x0]
    d930:	ldr	q0, [sp, #64]
    d934:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d938:	cbnz	w0, d95c <tgammaf128@@GLIBC_2.27+0x114>
    d93c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d940:	add	x0, x0, #0x300
    d944:	stp	x23, x21, [sp, #64]
    d948:	ldr	q1, [x0]
    d94c:	ldr	q0, [sp, #64]
    d950:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    d954:	cmp	w0, #0x0
    d958:	b.le	da0c <tgammaf128@@GLIBC_2.27+0x1c4>
    d95c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d960:	add	x0, x0, #0x300
    d964:	stp	x23, x21, [sp, #64]
    d968:	ldr	q1, [x0]
    d96c:	ldr	q0, [sp, #64]
    d970:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    d974:	cbnz	w0, d8dc <tgammaf128@@GLIBC_2.27+0x94>
    d978:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    d97c:	add	x0, x0, #0x300
    d980:	stp	x23, x21, [sp, #64]
    d984:	ldr	q1, [x0]
    d988:	ldr	q0, [sp, #64]
    d98c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    d990:	cmp	w0, #0x0
    d994:	b.le	d8dc <tgammaf128@@GLIBC_2.27+0x94>
    d998:	movi	v1.2d, #0x0
    d99c:	stp	x23, x24, [sp, #64]
    d9a0:	ldr	q0, [sp, #64]
    d9a4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    d9a8:	tbz	w0, #31, d8dc <tgammaf128@@GLIBC_2.27+0x94>
    d9ac:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d9b0:	ldr	x0, [x0, #4000]
    d9b4:	ldr	w0, [x0]
    d9b8:	cmn	w0, #0x1
    d9bc:	b.eq	d8dc <tgammaf128@@GLIBC_2.27+0x94>  // b.none
    d9c0:	stp	x23, x24, [sp, #64]
    d9c4:	ldr	q0, [sp, #64]
    d9c8:	bl	22250 <floorf128@@GLIBC_2.27>
    d9cc:	stp	x23, x24, [sp, #64]
    d9d0:	ldr	q1, [sp, #64]
    d9d4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d9d8:	cbz	w0, da64 <tgammaf128@@GLIBC_2.27+0x21c>
    d9dc:	nop
    d9e0:	movi	v1.2d, #0x0
    d9e4:	stp	x19, x20, [sp, #64]
    d9e8:	ldr	q0, [sp, #64]
    d9ec:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    d9f0:	cbnz	w0, daac <tgammaf128@@GLIBC_2.27+0x264>
    d9f4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    d9f8:	ldr	x0, [x0, #3976]
    d9fc:	mrs	x1, tpidr_el0
    da00:	mov	w2, #0x22                  	// #34
    da04:	str	w2, [x1, x0]
    da08:	b	d8dc <tgammaf128@@GLIBC_2.27+0x94>
    da0c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    da10:	ldr	x0, [x0, #4000]
    da14:	ldr	w0, [x0]
    da18:	cmn	w0, #0x1
    da1c:	b.eq	d8dc <tgammaf128@@GLIBC_2.27+0x94>  // b.none
    da20:	movi	v1.2d, #0x0
    da24:	stp	x23, x24, [sp, #64]
    da28:	ldr	q0, [sp, #64]
    da2c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    da30:	cbz	w0, da88 <tgammaf128@@GLIBC_2.27+0x240>
    da34:	stp	x23, x24, [sp, #64]
    da38:	ldr	q0, [sp, #64]
    da3c:	bl	22250 <floorf128@@GLIBC_2.27>
    da40:	stp	x23, x24, [sp, #64]
    da44:	ldr	q1, [sp, #64]
    da48:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    da4c:	cbnz	w0, d9e0 <tgammaf128@@GLIBC_2.27+0x198>
    da50:	movi	v1.2d, #0x0
    da54:	stp	x23, x24, [sp, #64]
    da58:	ldr	q0, [sp, #64]
    da5c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    da60:	tbz	w0, #31, d9e0 <tgammaf128@@GLIBC_2.27+0x198>
    da64:	stp	x23, x24, [sp, #64]
    da68:	mov	w0, #0xf1                  	// #241
    da6c:	stp	x23, x24, [sp, #80]
    da70:	ldr	q1, [sp, #64]
    da74:	ldr	q0, [sp, #80]
    da78:	bl	e038 <lgammal@GLIBC_2.17+0x198>
    da7c:	str	q0, [sp, #64]
    da80:	ldp	x19, x20, [sp, #64]
    da84:	b	d8ec <tgammaf128@@GLIBC_2.27+0xa4>
    da88:	stp	x23, x24, [sp, #64]
    da8c:	mov	w0, #0xfa                  	// #250
    da90:	stp	x23, x24, [sp, #80]
    da94:	ldr	q1, [sp, #64]
    da98:	ldr	q0, [sp, #80]
    da9c:	bl	e038 <lgammal@GLIBC_2.17+0x198>
    daa0:	str	q0, [sp, #64]
    daa4:	ldp	x19, x20, [sp, #64]
    daa8:	b	d8ec <tgammaf128@@GLIBC_2.27+0xa4>
    daac:	stp	x23, x24, [sp, #64]
    dab0:	mov	w0, #0xf0                  	// #240
    dab4:	stp	x23, x24, [sp, #80]
    dab8:	ldr	q1, [sp, #64]
    dabc:	ldr	q0, [sp, #80]
    dac0:	bl	e038 <lgammal@GLIBC_2.17+0x198>
    dac4:	str	q0, [sp, #64]
    dac8:	ldp	x19, x20, [sp, #64]
    dacc:	b	d8ec <tgammaf128@@GLIBC_2.27+0xa4>
    dad0:	bl	ba70 <__stack_chk_fail@plt>
    dad4:	nop

000000000000dad8 <lgammaf128_r@@GLIBC_2.27>:
    dad8:	stp	x29, x30, [sp, #-80]!
    dadc:	mov	x29, sp
    dae0:	stp	x19, x20, [sp, #16]
    dae4:	stp	x21, x22, [sp, #32]
    dae8:	str	x23, [sp, #48]
    daec:	str	q0, [sp, #64]
    daf0:	ldr	x22, [sp, #64]
    daf4:	ldr	x23, [sp, #72]
    daf8:	bl	1a718 <__lgammal_r_finite@GLIBC_2.17>
    dafc:	str	q0, [sp, #64]
    db00:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    db04:	ldp	x19, x20, [sp, #64]
    db08:	add	x0, x0, #0x300
    db0c:	ldr	q1, [x0]
    db10:	and	x21, x20, #0x7fffffffffffffff
    db14:	str	x21, [sp, #72]
    db18:	ldr	q0, [sp, #64]
    db1c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    db20:	cbnz	w0, db60 <lgammaf128_r@@GLIBC_2.27+0x88>
    db24:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    db28:	add	x0, x0, #0x300
    db2c:	stp	x19, x21, [sp, #64]
    db30:	ldr	q1, [x0]
    db34:	ldr	q0, [sp, #64]
    db38:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    db3c:	cmp	w0, #0x0
    db40:	b.gt	db60 <lgammaf128_r@@GLIBC_2.27+0x88>
    db44:	stp	x19, x20, [sp, #64]
    db48:	ldp	x19, x20, [sp, #16]
    db4c:	ldp	x21, x22, [sp, #32]
    db50:	ldr	x23, [sp, #48]
    db54:	ldr	q0, [sp, #64]
    db58:	ldp	x29, x30, [sp], #80
    db5c:	ret
    db60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    db64:	add	x0, x0, #0x300
    db68:	and	x21, x23, #0x7fffffffffffffff
    db6c:	stp	x22, x21, [sp, #64]
    db70:	ldr	q1, [x0]
    db74:	ldr	q0, [sp, #64]
    db78:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    db7c:	cbnz	w0, db44 <lgammaf128_r@@GLIBC_2.27+0x6c>
    db80:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    db84:	add	x0, x0, #0x300
    db88:	stp	x22, x21, [sp, #64]
    db8c:	ldr	q1, [x0]
    db90:	ldr	q0, [sp, #64]
    db94:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    db98:	cmp	w0, #0x0
    db9c:	b.gt	db44 <lgammaf128_r@@GLIBC_2.27+0x6c>
    dba0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    dba4:	ldr	x0, [x0, #4000]
    dba8:	ldr	w0, [x0]
    dbac:	cmn	w0, #0x1
    dbb0:	b.eq	db44 <lgammaf128_r@@GLIBC_2.27+0x6c>  // b.none
    dbb4:	stp	x22, x23, [sp, #64]
    dbb8:	ldr	q0, [sp, #64]
    dbbc:	str	d8, [sp, #56]
    dbc0:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
    dbc4:	stp	x22, x23, [sp, #64]
    dbc8:	fmov	d8, d0
    dbcc:	ldr	q0, [sp, #64]
    dbd0:	bl	22250 <floorf128@@GLIBC_2.27>
    dbd4:	stp	x22, x23, [sp, #64]
    dbd8:	mov	v1.16b, v0.16b
    dbdc:	ldr	q0, [sp, #64]
    dbe0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    dbe4:	cbnz	w0, dc24 <lgammaf128_r@@GLIBC_2.27+0x14c>
    dbe8:	movi	v1.2d, #0x0
    dbec:	stp	x22, x23, [sp, #64]
    dbf0:	ldr	q0, [sp, #64]
    dbf4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    dbf8:	cmp	w0, #0x0
    dbfc:	cset	w0, le
    dc00:	add	w0, w0, #0xd6
    dc04:	fmov	d1, d8
    dc08:	fmov	d0, d8
    dc0c:	bl	f218 <lgamma@GLIBC_2.17+0xe0>
    dc10:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
    dc14:	str	q0, [sp, #64]
    dc18:	ldr	d8, [sp, #56]
    dc1c:	ldp	x19, x20, [sp, #64]
    dc20:	b	db44 <lgammaf128_r@@GLIBC_2.27+0x6c>
    dc24:	mov	w0, #0xd6                  	// #214
    dc28:	b	dc04 <lgammaf128_r@@GLIBC_2.27+0x12c>
    dc2c:	nop

000000000000dc30 <lgammal@@GLIBC_2.23>:
    dc30:	stp	x29, x30, [sp, #-96]!
    dc34:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    dc38:	mov	x29, sp
    dc3c:	ldr	x0, [x0, #4048]
    dc40:	stp	x19, x20, [sp, #16]
    dc44:	stp	x21, x22, [sp, #32]
    dc48:	str	x23, [sp, #48]
    dc4c:	str	q0, [sp, #64]
    dc50:	ldr	x22, [sp, #64]
    dc54:	ldr	x23, [sp, #72]
    dc58:	bl	1a718 <__lgammal_r_finite@GLIBC_2.17>
    dc5c:	str	q0, [sp, #64]
    dc60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    dc64:	ldp	x19, x20, [sp, #64]
    dc68:	add	x0, x0, #0x300
    dc6c:	ldr	q1, [x0]
    dc70:	and	x21, x20, #0x7fffffffffffffff
    dc74:	str	x21, [sp, #72]
    dc78:	ldr	q0, [sp, #64]
    dc7c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    dc80:	cbnz	w0, dcc0 <lgammal@@GLIBC_2.23+0x90>
    dc84:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    dc88:	add	x0, x0, #0x300
    dc8c:	stp	x19, x21, [sp, #64]
    dc90:	ldr	q1, [x0]
    dc94:	ldr	q0, [sp, #64]
    dc98:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    dc9c:	cmp	w0, #0x0
    dca0:	b.gt	dcc0 <lgammal@@GLIBC_2.23+0x90>
    dca4:	stp	x19, x20, [sp, #64]
    dca8:	ldp	x19, x20, [sp, #16]
    dcac:	ldp	x21, x22, [sp, #32]
    dcb0:	ldr	x23, [sp, #48]
    dcb4:	ldr	q0, [sp, #64]
    dcb8:	ldp	x29, x30, [sp], #96
    dcbc:	ret
    dcc0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    dcc4:	add	x0, x0, #0x300
    dcc8:	and	x21, x23, #0x7fffffffffffffff
    dccc:	stp	x22, x21, [sp, #64]
    dcd0:	ldr	q1, [x0]
    dcd4:	ldr	q0, [sp, #64]
    dcd8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    dcdc:	cbnz	w0, dca4 <lgammal@@GLIBC_2.23+0x74>
    dce0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    dce4:	add	x0, x0, #0x300
    dce8:	stp	x22, x21, [sp, #64]
    dcec:	ldr	q1, [x0]
    dcf0:	ldr	q0, [sp, #64]
    dcf4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    dcf8:	cmp	w0, #0x0
    dcfc:	b.gt	dca4 <lgammal@@GLIBC_2.23+0x74>
    dd00:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    dd04:	ldr	x0, [x0, #4000]
    dd08:	ldr	w0, [x0]
    dd0c:	cmn	w0, #0x1
    dd10:	b.eq	dca4 <lgammal@@GLIBC_2.23+0x74>  // b.none
    dd14:	stp	x22, x23, [sp, #64]
    dd18:	ldr	q0, [sp, #64]
    dd1c:	bl	22250 <floorf128@@GLIBC_2.27>
    dd20:	stp	x22, x23, [sp, #64]
    dd24:	mov	v1.16b, v0.16b
    dd28:	ldr	q0, [sp, #64]
    dd2c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    dd30:	cbnz	w0, dd74 <lgammal@@GLIBC_2.23+0x144>
    dd34:	movi	v1.2d, #0x0
    dd38:	stp	x22, x23, [sp, #64]
    dd3c:	ldr	q0, [sp, #64]
    dd40:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    dd44:	cmp	w0, #0x0
    dd48:	cset	w0, le
    dd4c:	add	w0, w0, #0xd6
    dd50:	stp	x22, x23, [sp, #64]
    dd54:	stp	x22, x23, [sp, #80]
    dd58:	ldr	q1, [sp, #64]
    dd5c:	ldp	x19, x20, [sp, #16]
    dd60:	ldp	x21, x22, [sp, #32]
    dd64:	ldr	x23, [sp, #48]
    dd68:	ldr	q0, [sp, #80]
    dd6c:	ldp	x29, x30, [sp], #96
    dd70:	b	e038 <lgammal@GLIBC_2.17+0x198>
    dd74:	mov	w0, #0xd6                  	// #214
    dd78:	b	dd50 <lgammal@@GLIBC_2.23+0x120>
    dd7c:	nop

000000000000dd80 <expf128@@GLIBC_2.27>:
    dd80:	stp	x29, x30, [sp, #-96]!
    dd84:	mov	x29, sp
    dd88:	stp	x19, x20, [sp, #16]
    dd8c:	stp	x21, x22, [sp, #32]
    dd90:	str	x23, [sp, #48]
    dd94:	str	q0, [sp, #64]
    dd98:	ldr	x22, [sp, #64]
    dd9c:	ldr	x23, [sp, #72]
    dda0:	bl	141f0 <__expl_finite@GLIBC_2.17>
    dda4:	str	q0, [sp, #64]
    dda8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    ddac:	ldp	x19, x20, [sp, #64]
    ddb0:	add	x0, x0, #0x300
    ddb4:	ldr	q1, [x0]
    ddb8:	and	x21, x20, #0x7fffffffffffffff
    ddbc:	str	x21, [sp, #72]
    ddc0:	ldr	q0, [sp, #64]
    ddc4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    ddc8:	cbnz	w0, de1c <expf128@@GLIBC_2.27+0x9c>
    ddcc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    ddd0:	add	x0, x0, #0x300
    ddd4:	stp	x19, x21, [sp, #64]
    ddd8:	ldr	q1, [x0]
    dddc:	ldr	q0, [sp, #64]
    dde0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    dde4:	cmp	w0, #0x0
    dde8:	b.gt	de1c <expf128@@GLIBC_2.27+0x9c>
    ddec:	movi	v1.2d, #0x0
    ddf0:	stp	x19, x20, [sp, #64]
    ddf4:	ldr	q0, [sp, #64]
    ddf8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    ddfc:	cbz	w0, de1c <expf128@@GLIBC_2.27+0x9c>
    de00:	stp	x19, x20, [sp, #64]
    de04:	ldp	x19, x20, [sp, #16]
    de08:	ldp	x21, x22, [sp, #32]
    de0c:	ldr	x23, [sp, #48]
    de10:	ldr	q0, [sp, #64]
    de14:	ldp	x29, x30, [sp], #96
    de18:	ret
    de1c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    de20:	add	x0, x0, #0x300
    de24:	and	x21, x23, #0x7fffffffffffffff
    de28:	stp	x22, x21, [sp, #64]
    de2c:	ldr	q1, [x0]
    de30:	ldr	q0, [sp, #64]
    de34:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    de38:	cbnz	w0, de00 <expf128@@GLIBC_2.27+0x80>
    de3c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    de40:	add	x0, x0, #0x300
    de44:	stp	x22, x21, [sp, #64]
    de48:	ldr	q1, [x0]
    de4c:	ldr	q0, [sp, #64]
    de50:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    de54:	cmp	w0, #0x0
    de58:	b.gt	de00 <expf128@@GLIBC_2.27+0x80>
    de5c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    de60:	ldr	x0, [x0, #4000]
    de64:	ldr	w0, [x0]
    de68:	cmn	w0, #0x1
    de6c:	b.eq	de00 <expf128@@GLIBC_2.27+0x80>  // b.none
    de70:	stp	x22, x23, [sp, #64]
    de74:	cmp	x23, #0x0
    de78:	cset	w0, lt  // lt = tstop
    de7c:	stp	x22, x23, [sp, #80]
    de80:	add	w0, w0, #0xce
    de84:	ldr	q1, [sp, #64]
    de88:	ldp	x19, x20, [sp, #16]
    de8c:	ldp	x21, x22, [sp, #32]
    de90:	ldr	x23, [sp, #48]
    de94:	ldr	q0, [sp, #80]
    de98:	ldp	x29, x30, [sp], #96
    de9c:	b	e038 <lgammal@GLIBC_2.17+0x198>

000000000000dea0 <lgammal@GLIBC_2.17>:
    dea0:	stp	x29, x30, [sp, #-128]!
    dea4:	mov	x29, sp
    dea8:	stp	x21, x22, [sp, #32]
    deac:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    deb0:	ldr	x0, [x21, #4032]
    deb4:	stp	x19, x20, [sp, #16]
    deb8:	ldr	x1, [x0]
    debc:	str	x1, [sp, #120]
    dec0:	mov	x1, #0x0                   	// #0
    dec4:	add	x0, sp, #0x74
    dec8:	stp	x23, x24, [sp, #48]
    decc:	str	x25, [sp, #64]
    ded0:	str	q0, [sp, #80]
    ded4:	ldp	x22, x23, [sp, #80]
    ded8:	bl	1a718 <__lgammal_r_finite@GLIBC_2.17>
    dedc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    dee0:	str	q0, [sp, #80]
    dee4:	ldp	x19, x20, [sp, #80]
    dee8:	ldr	x0, [x0, #4000]
    deec:	ldr	w25, [x0]
    def0:	cmp	w25, #0x3
    def4:	b.eq	df14 <lgammal@GLIBC_2.17+0x74>  // b.none
    def8:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    defc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    df00:	ldr	w2, [sp, #116]
    df04:	ldr	x1, [x1, #4048]
    df08:	ldr	x0, [x0, #4040]
    df0c:	str	w2, [x1]
    df10:	str	w2, [x0]
    df14:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    df18:	add	x0, x0, #0x300
    df1c:	and	x24, x20, #0x7fffffffffffffff
    df20:	stp	x19, x24, [sp, #80]
    df24:	ldr	q1, [x0]
    df28:	ldr	q0, [sp, #80]
    df2c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    df30:	cbnz	w0, df88 <lgammal@GLIBC_2.17+0xe8>
    df34:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    df38:	add	x0, x0, #0x300
    df3c:	stp	x19, x24, [sp, #80]
    df40:	ldr	q1, [x0]
    df44:	ldr	q0, [sp, #80]
    df48:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    df4c:	cmp	w0, #0x0
    df50:	b.gt	df88 <lgammal@GLIBC_2.17+0xe8>
    df54:	ldr	x21, [x21, #4032]
    df58:	ldr	x1, [sp, #120]
    df5c:	ldr	x0, [x21]
    df60:	eor	x0, x1, x0
    df64:	cbnz	x0, e034 <lgammal@GLIBC_2.17+0x194>
    df68:	stp	x19, x20, [sp, #80]
    df6c:	ldp	x19, x20, [sp, #16]
    df70:	ldp	x21, x22, [sp, #32]
    df74:	ldp	x23, x24, [sp, #48]
    df78:	ldr	x25, [sp, #64]
    df7c:	ldr	q0, [sp, #80]
    df80:	ldp	x29, x30, [sp], #128
    df84:	ret
    df88:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    df8c:	add	x0, x0, #0x300
    df90:	and	x24, x23, #0x7fffffffffffffff
    df94:	stp	x22, x24, [sp, #80]
    df98:	ldr	q1, [x0]
    df9c:	ldr	q0, [sp, #80]
    dfa0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
    dfa4:	cbnz	w0, df54 <lgammal@GLIBC_2.17+0xb4>
    dfa8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    dfac:	add	x0, x0, #0x300
    dfb0:	stp	x22, x24, [sp, #80]
    dfb4:	ldr	q1, [x0]
    dfb8:	ldr	q0, [sp, #80]
    dfbc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
    dfc0:	cmp	w0, #0x0
    dfc4:	b.gt	df54 <lgammal@GLIBC_2.17+0xb4>
    dfc8:	cmn	w25, #0x1
    dfcc:	b.eq	df54 <lgammal@GLIBC_2.17+0xb4>  // b.none
    dfd0:	stp	x22, x23, [sp, #80]
    dfd4:	ldr	q0, [sp, #80]
    dfd8:	bl	22250 <floorf128@@GLIBC_2.27>
    dfdc:	stp	x22, x23, [sp, #80]
    dfe0:	mov	v1.16b, v0.16b
    dfe4:	ldr	q0, [sp, #80]
    dfe8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    dfec:	cbnz	w0, e02c <lgammal@GLIBC_2.17+0x18c>
    dff0:	movi	v1.2d, #0x0
    dff4:	stp	x22, x23, [sp, #80]
    dff8:	ldr	q0, [sp, #80]
    dffc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    e000:	cmp	w0, #0x0
    e004:	cset	w0, le
    e008:	add	w0, w0, #0xd6
    e00c:	stp	x22, x23, [sp, #80]
    e010:	stp	x22, x23, [sp, #96]
    e014:	ldr	q1, [sp, #80]
    e018:	ldr	q0, [sp, #96]
    e01c:	bl	e038 <lgammal@GLIBC_2.17+0x198>
    e020:	str	q0, [sp, #80]
    e024:	ldp	x19, x20, [sp, #80]
    e028:	b	df54 <lgammal@GLIBC_2.17+0xb4>
    e02c:	mov	w0, #0xd6                  	// #214
    e030:	b	e00c <lgammal@GLIBC_2.17+0x16c>
    e034:	bl	ba70 <__stack_chk_fail@plt>
    e038:	stp	x29, x30, [sp, #-160]!
    e03c:	mov	x29, sp
    e040:	str	x21, [sp, #32]
    e044:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e048:	stp	x19, x20, [sp, #16]
    e04c:	add	x20, sp, #0x68
    e050:	mov	w19, w0
    e054:	ldr	x1, [x21, #4032]
    e058:	stp	d8, d9, [sp, #48]
    e05c:	ldr	x0, [x1]
    e060:	str	x0, [sp, #152]
    e064:	mov	x0, #0x0                   	// #0
    e068:	str	q0, [sp, #64]
    e06c:	mov	x0, x20
    e070:	str	q1, [sp, #80]
    e074:	bl	bd58 <feholdexcept@@GLIBC_2.17>
    e078:	ldr	q0, [sp, #64]
    e07c:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
    e080:	fmov	d8, d0
    e084:	ldr	q0, [sp, #80]
    e088:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
    e08c:	fmov	d9, d0
    e090:	mov	x0, x20
    e094:	bl	bd90 <fesetenv@@GLIBC_2.17>
    e098:	cmp	w19, #0xdd
    e09c:	b.eq	e0e4 <lgammal@GLIBC_2.17+0x244>  // b.none
    e0a0:	cmp	w19, #0xde
    e0a4:	b.eq	e190 <lgammal@GLIBC_2.17+0x2f0>  // b.none
    e0a8:	fmov	d1, d9
    e0ac:	fmov	d0, d8
    e0b0:	mov	w0, w19
    e0b4:	bl	f218 <lgamma@GLIBC_2.17+0xe0>
    e0b8:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
    e0bc:	ldr	x21, [x21, #4032]
    e0c0:	ldr	x1, [sp, #152]
    e0c4:	ldr	x0, [x21]
    e0c8:	eor	x0, x1, x0
    e0cc:	cbnz	x0, e250 <lgammal@GLIBC_2.17+0x3b0>
    e0d0:	ldp	x19, x20, [sp, #16]
    e0d4:	ldr	x21, [sp, #32]
    e0d8:	ldp	d8, d9, [sp, #48]
    e0dc:	ldp	x29, x30, [sp], #160
    e0e0:	ret
    e0e4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e0e8:	adrp	x3, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e0ec:	add	x3, x3, #0x330
    e0f0:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e0f4:	ldr	x0, [x0, #4000]
    e0f8:	add	x1, x1, #0x320
    e0fc:	ldr	q1, [x3]
    e100:	mov	w2, #0x3                   	// #3
    e104:	ldr	q0, [sp, #80]
    e108:	ldr	w19, [x0]
    e10c:	str	w2, [sp, #112]
    e110:	str	x1, [sp, #120]
    e114:	stp	d8, d9, [sp, #128]
    e118:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
    e11c:	movi	v1.2d, #0x0
    e120:	str	q0, [sp, #80]
    e124:	cbnz	w19, e210 <lgammal@GLIBC_2.17+0x370>
    e128:	mov	x0, #0xffffe0000000        	// #281474439839744
    e12c:	ldr	q0, [sp, #64]
    e130:	movk	x0, #0x47ef, lsl #48
    e134:	str	x0, [sp, #144]
    e138:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    e13c:	tbz	w0, #31, e164 <lgammal@GLIBC_2.17+0x2c4>
    e140:	ldr	q0, [sp, #80]
    e144:	bl	22df0 <rintf128@@GLIBC_2.27>
    e148:	mov	v1.16b, v0.16b
    e14c:	ldr	q0, [sp, #80]
    e150:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    e154:	cbz	w0, e164 <lgammal@GLIBC_2.17+0x2c4>
    e158:	mov	x0, #0xffffe0000000        	// #281474439839744
    e15c:	movk	x0, #0xc7ef, lsl #48
    e160:	str	x0, [sp, #144]
    e164:	add	x0, sp, #0x70
    e168:	bl	ba60 <matherr@plt>
    e16c:	cbnz	w0, e184 <lgammal@GLIBC_2.17+0x2e4>
    e170:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e174:	ldr	x0, [x0, #3976]
    e178:	mrs	x1, tpidr_el0
    e17c:	mov	w2, #0x22                  	// #34
    e180:	str	w2, [x1, x0]
    e184:	ldr	d0, [sp, #144]
    e188:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
    e18c:	b	e0bc <lgammal@GLIBC_2.17+0x21c>
    e190:	movi	v1.2d, #0x0
    e194:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e198:	add	x0, x0, #0x320
    e19c:	ldr	q0, [sp, #64]
    e1a0:	mov	w1, #0x4                   	// #4
    e1a4:	str	w1, [sp, #112]
    e1a8:	str	x0, [sp, #120]
    e1ac:	stp	d8, d9, [sp, #128]
    e1b0:	str	xzr, [sp, #144]
    e1b4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    e1b8:	tbz	w0, #31, e1ec <lgammal@GLIBC_2.17+0x34c>
    e1bc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e1c0:	add	x0, x0, #0x330
    e1c4:	ldr	q0, [sp, #80]
    e1c8:	ldr	q1, [x0]
    e1cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
    e1d0:	str	q0, [sp, #64]
    e1d4:	bl	22df0 <rintf128@@GLIBC_2.27>
    e1d8:	ldr	q1, [sp, #64]
    e1dc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    e1e0:	cbz	w0, e1ec <lgammal@GLIBC_2.17+0x34c>
    e1e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e1e8:	str	x0, [sp, #144]
    e1ec:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e1f0:	ldr	x0, [x0, #4000]
    e1f4:	ldr	w0, [x0]
    e1f8:	cmp	w0, #0x2
    e1fc:	b.eq	e170 <lgammal@GLIBC_2.17+0x2d0>  // b.none
    e200:	add	x0, sp, #0x70
    e204:	bl	ba60 <matherr@plt>
    e208:	cbz	w0, e170 <lgammal@GLIBC_2.17+0x2d0>
    e20c:	b	e184 <lgammal@GLIBC_2.17+0x2e4>
    e210:	ldr	q0, [sp, #64]
    e214:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    e218:	str	x0, [sp, #144]
    e21c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
    e220:	tbz	w0, #31, e244 <lgammal@GLIBC_2.17+0x3a4>
    e224:	ldr	q0, [sp, #80]
    e228:	bl	22df0 <rintf128@@GLIBC_2.27>
    e22c:	mov	v1.16b, v0.16b
    e230:	ldr	q0, [sp, #80]
    e234:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
    e238:	cbz	w0, e244 <lgammal@GLIBC_2.17+0x3a4>
    e23c:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    e240:	str	x0, [sp, #144]
    e244:	cmp	w19, #0x2
    e248:	b.eq	e170 <lgammal@GLIBC_2.17+0x2d0>  // b.none
    e24c:	b	e164 <lgammal@GLIBC_2.17+0x2c4>
    e250:	bl	ba70 <__stack_chk_fail@plt>
    e254:	nop

000000000000e258 <acos@@GLIBC_2.17>:
    e258:	fabs	d2, d0
    e25c:	fmov	d1, #1.000000000000000000e+00
    e260:	fcmp	d2, d1
    e264:	b.gt	e26c <acos@@GLIBC_2.17+0x14>
    e268:	b	301d0 <__acos_finite@GLIBC_2.17>
    e26c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e270:	ldr	x0, [x0, #4000]
    e274:	ldr	w0, [x0]
    e278:	cmn	w0, #0x1
    e27c:	b.eq	e268 <acos@@GLIBC_2.17+0x10>  // b.none
    e280:	stp	x29, x30, [sp, #-32]!
    e284:	mov	w0, #0x1                   	// #1
    e288:	mov	x29, sp
    e28c:	str	d0, [sp, #24]
    e290:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e294:	ldr	d0, [sp, #24]
    e298:	ldp	x29, x30, [sp], #32
    e29c:	mov	w0, #0x1                   	// #1
    e2a0:	fmov	d1, d0
    e2a4:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000e2a8 <acosh@@GLIBC_2.17>:
    e2a8:	fmov	d2, #1.000000000000000000e+00
    e2ac:	fmov	d1, d0
    e2b0:	fcmp	d0, d2
    e2b4:	b.mi	e2c0 <acosh@@GLIBC_2.17+0x18>  // b.first
    e2b8:	fmov	d0, d1
    e2bc:	b	2f558 <__acosh_finite@GLIBC_2.17>
    e2c0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e2c4:	ldr	x0, [x0, #4000]
    e2c8:	ldr	w0, [x0]
    e2cc:	cmn	w0, #0x1
    e2d0:	b.eq	e2b8 <acosh@@GLIBC_2.17+0x10>  // b.none
    e2d4:	mov	w0, #0x1d                  	// #29
    e2d8:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e2dc:	nop

000000000000e2e0 <asin@@GLIBC_2.17>:
    e2e0:	fabs	d2, d0
    e2e4:	fmov	d1, #1.000000000000000000e+00
    e2e8:	fcmp	d2, d1
    e2ec:	b.gt	e2f4 <asin@@GLIBC_2.17+0x14>
    e2f0:	b	2f618 <__asin_finite@GLIBC_2.17>
    e2f4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e2f8:	ldr	x0, [x0, #4000]
    e2fc:	ldr	w0, [x0]
    e300:	cmn	w0, #0x1
    e304:	b.eq	e2f0 <asin@@GLIBC_2.17+0x10>  // b.none
    e308:	stp	x29, x30, [sp, #-32]!
    e30c:	mov	w0, #0x1                   	// #1
    e310:	mov	x29, sp
    e314:	str	d0, [sp, #24]
    e318:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e31c:	ldr	d0, [sp, #24]
    e320:	ldp	x29, x30, [sp], #32
    e324:	mov	w0, #0x2                   	// #2
    e328:	fmov	d1, d0
    e32c:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000e330 <atan2@@GLIBC_2.17>:
    e330:	movi	d2, #0x0
    e334:	stp	x29, x30, [sp, #-32]!
    e338:	mov	x29, sp
    e33c:	stp	d8, d9, [sp, #16]
    e340:	fmov	d9, d1
    e344:	fcmp	d1, d2
    e348:	fmov	d8, d0
    e34c:	fccmp	d0, d2, #0x0, eq  // eq = none
    e350:	b.eq	e37c <atan2@@GLIBC_2.17+0x4c>  // b.none
    e354:	fmov	d1, d9
    e358:	fmov	d0, d8
    e35c:	bl	311b0 <__atan2_finite@GLIBC_2.17>
    e360:	movi	d1, #0x0
    e364:	fcmp	d0, d1
    e368:	fccmp	d8, d1, #0x4, eq  // eq = none
    e36c:	b.ne	e39c <atan2@@GLIBC_2.17+0x6c>  // b.any
    e370:	ldp	d8, d9, [sp, #16]
    e374:	ldp	x29, x30, [sp], #32
    e378:	ret
    e37c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e380:	ldr	x0, [x0, #4000]
    e384:	ldr	w0, [x0]
    e388:	cbnz	w0, e354 <atan2@@GLIBC_2.17+0x24>
    e38c:	ldp	d8, d9, [sp, #16]
    e390:	mov	w0, #0x3                   	// #3
    e394:	ldp	x29, x30, [sp], #32
    e398:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e39c:	fabs	d9, d9
    e3a0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    e3a4:	fmov	d1, x0
    e3a8:	fcmp	d9, d1
    e3ac:	b.hi	e370 <atan2@@GLIBC_2.17+0x40>  // b.pmore
    e3b0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e3b4:	ldr	x0, [x0, #3976]
    e3b8:	mrs	x1, tpidr_el0
    e3bc:	mov	w2, #0x22                  	// #34
    e3c0:	str	w2, [x1, x0]
    e3c4:	b	e370 <atan2@@GLIBC_2.17+0x40>

000000000000e3c8 <atanh@@GLIBC_2.17>:
    e3c8:	fabs	d3, d0
    e3cc:	fmov	d2, #1.000000000000000000e+00
    e3d0:	fmov	d1, d0
    e3d4:	fcmp	d3, d2
    e3d8:	b.ge	e3e4 <atanh@@GLIBC_2.17+0x1c>  // b.tcont
    e3dc:	fmov	d0, d1
    e3e0:	b	331d8 <__atanh_finite@GLIBC_2.17>
    e3e4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e3e8:	ldr	x0, [x0, #4000]
    e3ec:	ldr	w0, [x0]
    e3f0:	cmn	w0, #0x1
    e3f4:	b.eq	e3dc <atanh@@GLIBC_2.17+0x14>  // b.none
    e3f8:	fcmp	d3, d2
    e3fc:	cset	w0, le
    e400:	add	w0, w0, #0x1e
    e404:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000e408 <cosh@@GLIBC_2.17>:
    e408:	stp	x29, x30, [sp, #-32]!
    e40c:	mov	x29, sp
    e410:	str	d8, [sp, #16]
    e414:	fmov	d8, d0
    e418:	bl	332b0 <__cosh_finite@GLIBC_2.17>
    e41c:	fabs	d2, d0
    e420:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    e424:	fmov	d1, x0
    e428:	fcmp	d2, d1
    e42c:	b.hi	e43c <cosh@@GLIBC_2.17+0x34>  // b.pmore
    e430:	ldr	d8, [sp, #16]
    e434:	ldp	x29, x30, [sp], #32
    e438:	ret
    e43c:	fabs	d2, d8
    e440:	fcmp	d2, d1
    e444:	b.hi	e430 <cosh@@GLIBC_2.17+0x28>  // b.pmore
    e448:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e44c:	ldr	x0, [x0, #4000]
    e450:	ldr	w0, [x0]
    e454:	cmn	w0, #0x1
    e458:	b.eq	e430 <cosh@@GLIBC_2.17+0x28>  // b.none
    e45c:	fmov	d1, d8
    e460:	fmov	d0, d8
    e464:	ldr	d8, [sp, #16]
    e468:	mov	w0, #0x5                   	// #5
    e46c:	ldp	x29, x30, [sp], #32
    e470:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e474:	nop

000000000000e478 <exp2@GLIBC_2.17>:
    e478:	stp	x29, x30, [sp, #-32]!
    e47c:	mov	x29, sp
    e480:	str	d8, [sp, #16]
    e484:	fmov	d8, d0
    e488:	bl	42150 <__exp2_finite@GLIBC_2.17>
    e48c:	fabs	d2, d0
    e490:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    e494:	fmov	d1, x0
    e498:	fcmp	d2, d1
    e49c:	b.hi	e4b4 <exp2@GLIBC_2.17+0x3c>  // b.pmore
    e4a0:	fcmp	d0, #0.0
    e4a4:	b.eq	e4b4 <exp2@GLIBC_2.17+0x3c>  // b.none
    e4a8:	ldr	d8, [sp, #16]
    e4ac:	ldp	x29, x30, [sp], #32
    e4b0:	ret
    e4b4:	fabs	d2, d8
    e4b8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    e4bc:	fmov	d1, x0
    e4c0:	fcmp	d2, d1
    e4c4:	b.hi	e4a8 <exp2@GLIBC_2.17+0x30>  // b.pmore
    e4c8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e4cc:	ldr	x0, [x0, #4000]
    e4d0:	ldr	w0, [x0]
    e4d4:	cmn	w0, #0x1
    e4d8:	b.eq	e4a8 <exp2@GLIBC_2.17+0x30>  // b.none
    e4dc:	fmov	x0, d8
    e4e0:	fmov	d1, d8
    e4e4:	fmov	d0, d8
    e4e8:	ldr	d8, [sp, #16]
    e4ec:	ldp	x29, x30, [sp], #32
    e4f0:	cmp	x0, #0x0
    e4f4:	cset	w0, lt  // lt = tstop
    e4f8:	add	w0, w0, #0x2c
    e4fc:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000e500 <pow10@GLIBC_2.17>:
    e500:	stp	x29, x30, [sp, #-32]!
    e504:	mov	x29, sp
    e508:	str	d8, [sp, #16]
    e50c:	fmov	d8, d0
    e510:	bl	3d790 <__exp10_finite@GLIBC_2.17>
    e514:	fabs	d2, d0
    e518:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    e51c:	fmov	d1, x0
    e520:	fcmp	d2, d1
    e524:	b.hi	e53c <pow10@GLIBC_2.17+0x3c>  // b.pmore
    e528:	fcmp	d0, #0.0
    e52c:	b.eq	e53c <pow10@GLIBC_2.17+0x3c>  // b.none
    e530:	ldr	d8, [sp, #16]
    e534:	ldp	x29, x30, [sp], #32
    e538:	ret
    e53c:	fabs	d2, d8
    e540:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    e544:	fmov	d1, x0
    e548:	fcmp	d2, d1
    e54c:	b.hi	e530 <pow10@GLIBC_2.17+0x30>  // b.pmore
    e550:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e554:	ldr	x0, [x0, #4000]
    e558:	ldr	w0, [x0]
    e55c:	cmn	w0, #0x1
    e560:	b.eq	e530 <pow10@GLIBC_2.17+0x30>  // b.none
    e564:	fmov	x0, d8
    e568:	fmov	d1, d8
    e56c:	fmov	d0, d8
    e570:	ldr	d8, [sp, #16]
    e574:	ldp	x29, x30, [sp], #32
    e578:	cmp	x0, #0x0
    e57c:	cset	w0, lt  // lt = tstop
    e580:	add	w0, w0, #0x2e
    e584:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000e588 <fmod@@GLIBC_2.17>:
    e588:	fabs	d5, d0
    e58c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    e590:	fmov	d4, x0
    e594:	fmov	d2, d0
    e598:	fmov	d3, d1
    e59c:	fcmp	d5, d4
    e5a0:	cset	w0, gt
    e5a4:	fcmp	d1, #0.0
    e5a8:	csinc	w0, w0, wzr, ne  // ne = any
    e5ac:	cbnz	w0, e5bc <fmod@@GLIBC_2.17+0x34>
    e5b0:	fmov	d1, d3
    e5b4:	fmov	d0, d2
    e5b8:	b	33558 <__fmod_finite@GLIBC_2.17>
    e5bc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e5c0:	fcmp	d0, d1
    e5c4:	ldr	x0, [x0, #4000]
    e5c8:	ldr	w0, [x0]
    e5cc:	ccmn	w0, #0x1, #0x4, vc
    e5d0:	b.eq	e5b0 <fmod@@GLIBC_2.17+0x28>  // b.none
    e5d4:	mov	w0, #0x1b                  	// #27
    e5d8:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e5dc:	nop

000000000000e5e0 <hypot@@GLIBC_2.17>:
    e5e0:	stp	x29, x30, [sp, #-32]!
    e5e4:	mov	x29, sp
    e5e8:	stp	d8, d9, [sp, #16]
    e5ec:	fmov	d8, d1
    e5f0:	fmov	d9, d0
    e5f4:	bl	336d8 <__hypot_finite@GLIBC_2.17>
    e5f8:	fabs	d1, d0
    e5fc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    e600:	fmov	d2, x0
    e604:	fcmp	d1, d2
    e608:	b.hi	e618 <hypot@@GLIBC_2.17+0x38>  // b.pmore
    e60c:	ldp	d8, d9, [sp, #16]
    e610:	ldp	x29, x30, [sp], #32
    e614:	ret
    e618:	fabs	d1, d9
    e61c:	fcmp	d1, d2
    e620:	b.hi	e60c <hypot@@GLIBC_2.17+0x2c>  // b.pmore
    e624:	fabs	d1, d8
    e628:	fcmp	d1, d2
    e62c:	b.hi	e60c <hypot@@GLIBC_2.17+0x2c>  // b.pmore
    e630:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e634:	ldr	x0, [x0, #4000]
    e638:	ldr	w0, [x0]
    e63c:	cmn	w0, #0x1
    e640:	b.eq	e60c <hypot@@GLIBC_2.17+0x2c>  // b.none
    e644:	fmov	d1, d8
    e648:	fmov	d0, d9
    e64c:	ldp	d8, d9, [sp, #16]
    e650:	mov	w0, #0x4                   	// #4
    e654:	ldp	x29, x30, [sp], #32
    e658:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e65c:	nop

000000000000e660 <j0@@GLIBC_2.17>:
    e660:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e664:	fabs	d3, d0
    e668:	fmov	d1, d0
    e66c:	ldr	d2, [x0, #832]
    e670:	fcmp	d3, d2
    e674:	b.gt	e680 <j0@@GLIBC_2.17+0x20>
    e678:	fmov	d0, d1
    e67c:	b	33db0 <__j0_finite@GLIBC_2.17>
    e680:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e684:	ldr	x0, [x0, #4000]
    e688:	ldr	w0, [x0]
    e68c:	cmp	w0, #0x2
    e690:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    e694:	b.eq	e678 <j0@@GLIBC_2.17+0x18>  // b.none
    e698:	mov	w0, #0x22                  	// #34
    e69c:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000e6a0 <y0@@GLIBC_2.17>:
    e6a0:	stp	x29, x30, [sp, #-32]!
    e6a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e6a8:	fcmp	d0, #0.0
    e6ac:	mov	x29, sp
    e6b0:	ldr	d1, [x0, #832]
    e6b4:	str	d8, [sp, #16]
    e6b8:	fmov	d8, d0
    e6bc:	fccmp	d0, d1, #0x0, hi  // hi = pmore
    e6c0:	b.gt	e6d4 <y0@@GLIBC_2.17+0x34>
    e6c4:	fmov	d0, d8
    e6c8:	ldr	d8, [sp, #16]
    e6cc:	ldp	x29, x30, [sp], #32
    e6d0:	b	33ff0 <__y0_finite@GLIBC_2.17>
    e6d4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e6d8:	ldr	x0, [x0, #4000]
    e6dc:	ldr	w0, [x0]
    e6e0:	cmn	w0, #0x1
    e6e4:	b.eq	e6c4 <y0@@GLIBC_2.17+0x24>  // b.none
    e6e8:	fcmpe	d0, #0.0
    e6ec:	b.mi	e734 <y0@@GLIBC_2.17+0x94>  // b.first
    e6f0:	fcmp	d0, #0.0
    e6f4:	b.eq	e714 <y0@@GLIBC_2.17+0x74>  // b.none
    e6f8:	cmp	w0, #0x2
    e6fc:	b.eq	e6c4 <y0@@GLIBC_2.17+0x24>  // b.none
    e700:	ldr	d8, [sp, #16]
    e704:	fmov	d1, d0
    e708:	ldp	x29, x30, [sp], #32
    e70c:	mov	w0, #0x23                  	// #35
    e710:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e714:	mov	w0, #0x2                   	// #2
    e718:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e71c:	fmov	d1, d8
    e720:	fmov	d0, d8
    e724:	ldr	d8, [sp, #16]
    e728:	mov	w0, #0x8                   	// #8
    e72c:	ldp	x29, x30, [sp], #32
    e730:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e734:	mov	w0, #0x1                   	// #1
    e738:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e73c:	fmov	d1, d8
    e740:	fmov	d0, d8
    e744:	ldr	d8, [sp, #16]
    e748:	mov	w0, #0x9                   	// #9
    e74c:	ldp	x29, x30, [sp], #32
    e750:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e754:	nop

000000000000e758 <j1@@GLIBC_2.17>:
    e758:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e75c:	fabs	d3, d0
    e760:	fmov	d1, d0
    e764:	ldr	d2, [x0, #832]
    e768:	fcmp	d3, d2
    e76c:	b.gt	e778 <j1@@GLIBC_2.17+0x20>
    e770:	fmov	d0, d1
    e774:	b	346b8 <__j1_finite@GLIBC_2.17>
    e778:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e77c:	ldr	x0, [x0, #4000]
    e780:	ldr	w0, [x0]
    e784:	cmp	w0, #0x2
    e788:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    e78c:	b.eq	e770 <j1@@GLIBC_2.17+0x18>  // b.none
    e790:	mov	w0, #0x24                  	// #36
    e794:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000e798 <y1@@GLIBC_2.17>:
    e798:	stp	x29, x30, [sp, #-32]!
    e79c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e7a0:	fcmp	d0, #0.0
    e7a4:	mov	x29, sp
    e7a8:	ldr	d1, [x0, #832]
    e7ac:	str	d8, [sp, #16]
    e7b0:	fmov	d8, d0
    e7b4:	fccmp	d0, d1, #0x0, hi  // hi = pmore
    e7b8:	b.gt	e7cc <y1@@GLIBC_2.17+0x34>
    e7bc:	fmov	d0, d8
    e7c0:	ldr	d8, [sp, #16]
    e7c4:	ldp	x29, x30, [sp], #32
    e7c8:	b	34900 <__y1_finite@GLIBC_2.17>
    e7cc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e7d0:	ldr	x0, [x0, #4000]
    e7d4:	ldr	w0, [x0]
    e7d8:	cmn	w0, #0x1
    e7dc:	b.eq	e7bc <y1@@GLIBC_2.17+0x24>  // b.none
    e7e0:	fcmpe	d0, #0.0
    e7e4:	b.mi	e82c <y1@@GLIBC_2.17+0x94>  // b.first
    e7e8:	fcmp	d0, #0.0
    e7ec:	b.eq	e80c <y1@@GLIBC_2.17+0x74>  // b.none
    e7f0:	cmp	w0, #0x2
    e7f4:	b.eq	e7bc <y1@@GLIBC_2.17+0x24>  // b.none
    e7f8:	ldr	d8, [sp, #16]
    e7fc:	fmov	d1, d0
    e800:	ldp	x29, x30, [sp], #32
    e804:	mov	w0, #0x25                  	// #37
    e808:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e80c:	mov	w0, #0x2                   	// #2
    e810:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e814:	fmov	d1, d8
    e818:	fmov	d0, d8
    e81c:	ldr	d8, [sp, #16]
    e820:	mov	w0, #0xa                   	// #10
    e824:	ldp	x29, x30, [sp], #32
    e828:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e82c:	mov	w0, #0x1                   	// #1
    e830:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e834:	fmov	d1, d8
    e838:	fmov	d0, d8
    e83c:	ldr	d8, [sp, #16]
    e840:	mov	w0, #0xb                   	// #11
    e844:	ldp	x29, x30, [sp], #32
    e848:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e84c:	nop

000000000000e850 <jn@@GLIBC_2.17>:
    e850:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e854:	fmov	d1, d0
    e858:	fabs	d0, d0
    e85c:	ldr	d2, [x1, #832]
    e860:	fcmp	d0, d2
    e864:	b.gt	e870 <jn@@GLIBC_2.17+0x20>
    e868:	fmov	d0, d1
    e86c:	b	34b60 <__jn_finite@GLIBC_2.17>
    e870:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e874:	ldr	x1, [x1, #4000]
    e878:	ldr	w1, [x1]
    e87c:	cmp	w1, #0x2
    e880:	ccmn	w1, #0x1, #0x4, ne  // ne = any
    e884:	b.eq	e868 <jn@@GLIBC_2.17+0x18>  // b.none
    e888:	scvtf	d0, w0
    e88c:	mov	w0, #0x26                  	// #38
    e890:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e894:	nop

000000000000e898 <yn@@GLIBC_2.17>:
    e898:	stp	x29, x30, [sp, #-32]!
    e89c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    e8a0:	fcmp	d0, #0.0
    e8a4:	mov	x29, sp
    e8a8:	ldr	d1, [x1, #832]
    e8ac:	str	x19, [sp, #16]
    e8b0:	mov	w19, w0
    e8b4:	str	d8, [sp, #24]
    e8b8:	fmov	d8, d0
    e8bc:	fccmp	d0, d1, #0x0, hi  // hi = pmore
    e8c0:	b.gt	e8dc <yn@@GLIBC_2.17+0x44>
    e8c4:	fmov	d0, d8
    e8c8:	mov	w0, w19
    e8cc:	ldr	x19, [sp, #16]
    e8d0:	ldr	d8, [sp, #24]
    e8d4:	ldp	x29, x30, [sp], #32
    e8d8:	b	34fb0 <__yn_finite@GLIBC_2.17>
    e8dc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e8e0:	ldr	x0, [x0, #4000]
    e8e4:	ldr	w0, [x0]
    e8e8:	cmn	w0, #0x1
    e8ec:	b.eq	e8c4 <yn@@GLIBC_2.17+0x2c>  // b.none
    e8f0:	fcmpe	d0, #0.0
    e8f4:	b.mi	e948 <yn@@GLIBC_2.17+0xb0>  // b.first
    e8f8:	fcmp	d0, #0.0
    e8fc:	b.eq	e924 <yn@@GLIBC_2.17+0x8c>  // b.none
    e900:	cmp	w0, #0x2
    e904:	b.eq	e8c4 <yn@@GLIBC_2.17+0x2c>  // b.none
    e908:	scvtf	d0, w19
    e90c:	fmov	d1, d8
    e910:	ldr	x19, [sp, #16]
    e914:	mov	w0, #0x27                  	// #39
    e918:	ldr	d8, [sp, #24]
    e91c:	ldp	x29, x30, [sp], #32
    e920:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e924:	mov	w0, #0x2                   	// #2
    e928:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e92c:	scvtf	d0, w19
    e930:	fmov	d1, d8
    e934:	ldr	x19, [sp, #16]
    e938:	mov	w0, #0xc                   	// #12
    e93c:	ldr	d8, [sp, #24]
    e940:	ldp	x29, x30, [sp], #32
    e944:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e948:	mov	w0, #0x1                   	// #1
    e94c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e950:	scvtf	d0, w19
    e954:	fmov	d1, d8
    e958:	ldr	x19, [sp, #16]
    e95c:	mov	w0, #0xd                   	// #13
    e960:	ldr	d8, [sp, #24]
    e964:	ldp	x29, x30, [sp], #32
    e968:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e96c:	nop

000000000000e970 <log2@GLIBC_2.17>:
    e970:	fcmp	d0, #0.0
    e974:	b.ls	e97c <log2@GLIBC_2.17+0xc>  // b.plast
    e978:	b	3cee8 <__log2_finite@GLIBC_2.17>
    e97c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e980:	ldr	x0, [x0, #4000]
    e984:	ldr	w0, [x0]
    e988:	cmn	w0, #0x1
    e98c:	b.eq	e978 <log2@GLIBC_2.17+0x8>  // b.none
    e990:	stp	x29, x30, [sp, #-32]!
    e994:	fcmp	d0, #0.0
    e998:	mov	x29, sp
    e99c:	str	d0, [sp, #24]
    e9a0:	b.ne	e9c0 <log2@GLIBC_2.17+0x50>  // b.any
    e9a4:	mov	w0, #0x2                   	// #2
    e9a8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e9ac:	ldr	d0, [sp, #24]
    e9b0:	ldp	x29, x30, [sp], #32
    e9b4:	mov	w0, #0x30                  	// #48
    e9b8:	fmov	d1, d0
    e9bc:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e9c0:	mov	w0, #0x1                   	// #1
    e9c4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    e9c8:	ldr	d0, [sp, #24]
    e9cc:	ldp	x29, x30, [sp], #32
    e9d0:	mov	w0, #0x31                  	// #49
    e9d4:	fmov	d1, d0
    e9d8:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    e9dc:	nop

000000000000e9e0 <log10@@GLIBC_2.17>:
    e9e0:	fcmp	d0, #0.0
    e9e4:	b.ls	e9ec <log10@@GLIBC_2.17+0xc>  // b.plast
    e9e8:	b	35c10 <__log10_finite@GLIBC_2.17>
    e9ec:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    e9f0:	ldr	x0, [x0, #4000]
    e9f4:	ldr	w0, [x0]
    e9f8:	cmn	w0, #0x1
    e9fc:	b.eq	e9e8 <log10@@GLIBC_2.17+0x8>  // b.none
    ea00:	stp	x29, x30, [sp, #-32]!
    ea04:	fcmp	d0, #0.0
    ea08:	mov	x29, sp
    ea0c:	str	d0, [sp, #24]
    ea10:	b.ne	ea30 <log10@@GLIBC_2.17+0x50>  // b.any
    ea14:	mov	w0, #0x2                   	// #2
    ea18:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    ea1c:	ldr	d0, [sp, #24]
    ea20:	ldp	x29, x30, [sp], #32
    ea24:	mov	w0, #0x12                  	// #18
    ea28:	fmov	d1, d0
    ea2c:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    ea30:	mov	w0, #0x1                   	// #1
    ea34:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    ea38:	ldr	d0, [sp, #24]
    ea3c:	ldp	x29, x30, [sp], #32
    ea40:	mov	w0, #0x13                  	// #19
    ea44:	fmov	d1, d0
    ea48:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    ea4c:	nop

000000000000ea50 <log@GLIBC_2.17>:
    ea50:	fcmp	d0, #0.0
    ea54:	b.ls	ea5c <log@GLIBC_2.17+0xc>  // b.plast
    ea58:	b	35a50 <__log_finite@GLIBC_2.17>
    ea5c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ea60:	ldr	x0, [x0, #4000]
    ea64:	ldr	w0, [x0]
    ea68:	cmn	w0, #0x1
    ea6c:	b.eq	ea58 <log@GLIBC_2.17+0x8>  // b.none
    ea70:	stp	x29, x30, [sp, #-32]!
    ea74:	fcmp	d0, #0.0
    ea78:	mov	x29, sp
    ea7c:	str	d0, [sp, #24]
    ea80:	b.ne	eaa0 <log@GLIBC_2.17+0x50>  // b.any
    ea84:	mov	w0, #0x2                   	// #2
    ea88:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    ea8c:	ldr	d0, [sp, #24]
    ea90:	ldp	x29, x30, [sp], #32
    ea94:	mov	w0, #0x10                  	// #16
    ea98:	fmov	d1, d0
    ea9c:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    eaa0:	mov	w0, #0x1                   	// #1
    eaa4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
    eaa8:	ldr	d0, [sp, #24]
    eaac:	ldp	x29, x30, [sp], #32
    eab0:	mov	w0, #0x11                  	// #17
    eab4:	fmov	d1, d0
    eab8:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    eabc:	nop

000000000000eac0 <pow@GLIBC_2.17>:
    eac0:	stp	x29, x30, [sp, #-32]!
    eac4:	mov	x29, sp
    eac8:	stp	d8, d9, [sp, #16]
    eacc:	fmov	d9, d0
    ead0:	fmov	d8, d1
    ead4:	bl	35ce8 <__pow_finite@GLIBC_2.17>
    ead8:	fabs	d3, d0
    eadc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    eae0:	fmov	d2, x0
    eae4:	fcmp	d3, d2
    eae8:	b.hi	eb00 <pow@GLIBC_2.17+0x40>  // b.pmore
    eaec:	fcmp	d0, #0.0
    eaf0:	b.eq	eb6c <pow@GLIBC_2.17+0xac>  // b.none
    eaf4:	ldp	d8, d9, [sp, #16]
    eaf8:	ldp	x29, x30, [sp], #32
    eafc:	ret
    eb00:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    eb04:	ldr	x0, [x0, #4000]
    eb08:	ldr	w0, [x0]
    eb0c:	cmn	w0, #0x1
    eb10:	b.eq	eaf4 <pow@GLIBC_2.17+0x34>  // b.none
    eb14:	fabs	d1, d9
    eb18:	fcmp	d1, d2
    eb1c:	b.hi	eaf4 <pow@GLIBC_2.17+0x34>  // b.pmore
    eb20:	fabs	d1, d8
    eb24:	fcmp	d1, d2
    eb28:	b.hi	eaf4 <pow@GLIBC_2.17+0x34>  // b.pmore
    eb2c:	fcmp	d0, d0
    eb30:	b.vs	ebe4 <pow@GLIBC_2.17+0x124>
    eb34:	fcmp	d9, #0.0
    eb38:	b.ne	ebb8 <pow@GLIBC_2.17+0xf8>  // b.any
    eb3c:	fcmpe	d8, #0.0
    eb40:	b.pl	ebb8 <pow@GLIBC_2.17+0xf8>  // b.nfrst
    eb44:	fmov	x0, d9
    eb48:	fmov	d1, d8
    eb4c:	tbz	x0, #63, eb58 <pow@GLIBC_2.17+0x98>
    eb50:	fmov	x0, d0
    eb54:	tbnz	x0, #63, ebd0 <pow@GLIBC_2.17+0x110>
    eb58:	fmov	d0, d9
    eb5c:	mov	w0, #0x2b                  	// #43
    eb60:	ldp	d8, d9, [sp, #16]
    eb64:	ldp	x29, x30, [sp], #32
    eb68:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    eb6c:	fabs	d1, d9
    eb70:	fcmp	d1, d2
    eb74:	b.hi	eaf4 <pow@GLIBC_2.17+0x34>  // b.pmore
    eb78:	fcmp	d9, #0.0
    eb7c:	b.eq	eaf4 <pow@GLIBC_2.17+0x34>  // b.none
    eb80:	fabs	d1, d8
    eb84:	fcmp	d1, d2
    eb88:	b.hi	eaf4 <pow@GLIBC_2.17+0x34>  // b.pmore
    eb8c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    eb90:	ldr	x0, [x0, #4000]
    eb94:	ldr	w0, [x0]
    eb98:	cmn	w0, #0x1
    eb9c:	b.eq	eaf4 <pow@GLIBC_2.17+0x34>  // b.none
    eba0:	fmov	d1, d8
    eba4:	fmov	d0, d9
    eba8:	ldp	d8, d9, [sp, #16]
    ebac:	mov	w0, #0x16                  	// #22
    ebb0:	ldp	x29, x30, [sp], #32
    ebb4:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    ebb8:	fmov	d1, d8
    ebbc:	fmov	d0, d9
    ebc0:	ldp	d8, d9, [sp, #16]
    ebc4:	mov	w0, #0x15                  	// #21
    ebc8:	ldp	x29, x30, [sp], #32
    ebcc:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    ebd0:	fmov	d0, d9
    ebd4:	mov	w0, #0x17                  	// #23
    ebd8:	ldp	d8, d9, [sp, #16]
    ebdc:	ldp	x29, x30, [sp], #32
    ebe0:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    ebe4:	fmov	d1, d8
    ebe8:	fmov	d0, d9
    ebec:	ldp	d8, d9, [sp, #16]
    ebf0:	mov	w0, #0x18                  	// #24
    ebf4:	ldp	x29, x30, [sp], #32
    ebf8:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    ebfc:	nop

000000000000ec00 <drem@@GLIBC_2.17>:
    ec00:	fcmp	d1, #0.0
    ec04:	fccmp	d0, d0, #0x1, eq  // eq = none
    ec08:	b.vc	ec28 <drem@@GLIBC_2.17+0x28>
    ec0c:	fabs	d3, d0
    ec10:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    ec14:	fmov	d2, x0
    ec18:	fcmp	d3, d2
    ec1c:	b.le	ec3c <drem@@GLIBC_2.17+0x3c>
    ec20:	fcmp	d1, d1
    ec24:	b.vs	ec3c <drem@@GLIBC_2.17+0x3c>
    ec28:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ec2c:	ldr	x0, [x0, #4000]
    ec30:	ldr	w0, [x0]
    ec34:	cmn	w0, #0x1
    ec38:	b.ne	ec40 <drem@@GLIBC_2.17+0x40>  // b.any
    ec3c:	b	36138 <__remainder_finite@GLIBC_2.17>
    ec40:	mov	w0, #0x1c                  	// #28
    ec44:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    ec48:	stp	x29, x30, [sp, #-32]!
    ec4c:	mov	x29, sp
    ec50:	stp	d8, d9, [sp, #16]
    ec54:	fmov	d9, d1
    ec58:	fmov	d8, d0
    ec5c:	bl	36510 <__scalb_finite@GLIBC_2.17>
    ec60:	fabs	d1, d0
    ec64:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    ec68:	fmov	d2, x0
    ec6c:	fcmp	d1, d2
    ec70:	b.le	ec98 <drem@@GLIBC_2.17+0x98>
    ec74:	fabs	d1, d8
    ec78:	fcmp	d1, d2
    ec7c:	b.ls	ecb0 <drem@@GLIBC_2.17+0xb0>  // b.plast
    ec80:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ec84:	ldr	x0, [x0, #3976]
    ec88:	mrs	x1, tpidr_el0
    ec8c:	mov	w2, #0x22                  	// #34
    ec90:	str	w2, [x1, x0]
    ec94:	b	eca4 <drem@@GLIBC_2.17+0xa4>
    ec98:	fcmp	d0, #0.0
    ec9c:	fccmp	d8, d0, #0x4, eq  // eq = none
    eca0:	b.ne	ecc8 <drem@@GLIBC_2.17+0xc8>  // b.any
    eca4:	ldp	d8, d9, [sp, #16]
    eca8:	ldp	x29, x30, [sp], #32
    ecac:	ret
    ecb0:	fmov	d1, d9
    ecb4:	fmov	d0, d8
    ecb8:	ldp	d8, d9, [sp, #16]
    ecbc:	mov	w0, #0x20                  	// #32
    ecc0:	ldp	x29, x30, [sp], #32
    ecc4:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    ecc8:	fmov	d1, d9
    eccc:	fmov	d0, d8
    ecd0:	ldp	d8, d9, [sp, #16]
    ecd4:	mov	w0, #0x21                  	// #33
    ecd8:	ldp	x29, x30, [sp], #32
    ecdc:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000ece0 <scalb@@GLIBC_2.17>:
    ece0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ece4:	ldr	x0, [x0, #4000]
    ece8:	ldr	w0, [x0]
    ecec:	cbz	w0, ed78 <scalb@@GLIBC_2.17+0x98>
    ecf0:	stp	x29, x30, [sp, #-32]!
    ecf4:	mov	x29, sp
    ecf8:	stp	d8, d9, [sp, #16]
    ecfc:	fmov	d9, d1
    ed00:	fmov	d8, d0
    ed04:	bl	36510 <__scalb_finite@GLIBC_2.17>
    ed08:	fabs	d1, d0
    ed0c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    ed10:	fmov	d2, x0
    ed14:	fcmp	d1, d2
    ed18:	b.hi	ed30 <scalb@@GLIBC_2.17+0x50>  // b.pmore
    ed1c:	fcmp	d0, #0.0
    ed20:	b.eq	ed30 <scalb@@GLIBC_2.17+0x50>  // b.none
    ed24:	ldp	d8, d9, [sp, #16]
    ed28:	ldp	x29, x30, [sp], #32
    ed2c:	ret
    ed30:	fcmp	d0, d0
    ed34:	b.vs	ed88 <scalb@@GLIBC_2.17+0xa8>
    ed38:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    ed3c:	fmov	d2, x0
    ed40:	fcmp	d1, d2
    ed44:	b.le	ed7c <scalb@@GLIBC_2.17+0x9c>
    ed48:	fabs	d8, d8
    ed4c:	fcmp	d8, d2
    ed50:	b.gt	ed24 <scalb@@GLIBC_2.17+0x44>
    ed54:	fabs	d1, d9
    ed58:	fcmp	d1, d2
    ed5c:	b.gt	ed24 <scalb@@GLIBC_2.17+0x44>
    ed60:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ed64:	ldr	x0, [x0, #3976]
    ed68:	mrs	x1, tpidr_el0
    ed6c:	mov	w2, #0x22                  	// #34
    ed70:	str	w2, [x1, x0]
    ed74:	b	ed24 <scalb@@GLIBC_2.17+0x44>
    ed78:	b	ec48 <drem@@GLIBC_2.17+0x48>
    ed7c:	fcmp	d8, #0.0
    ed80:	b.eq	ed24 <scalb@@GLIBC_2.17+0x44>  // b.none
    ed84:	b	ed54 <scalb@@GLIBC_2.17+0x74>
    ed88:	fcmp	d8, d9
    ed8c:	b.vs	ed24 <scalb@@GLIBC_2.17+0x44>
    ed90:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ed94:	ldr	x0, [x0, #3976]
    ed98:	mrs	x1, tpidr_el0
    ed9c:	mov	w2, #0x21                  	// #33
    eda0:	str	w2, [x1, x0]
    eda4:	b	ed24 <scalb@@GLIBC_2.17+0x44>

000000000000eda8 <sinh@@GLIBC_2.17>:
    eda8:	stp	x29, x30, [sp, #-32]!
    edac:	mov	x29, sp
    edb0:	str	d8, [sp, #16]
    edb4:	fmov	d8, d0
    edb8:	bl	36588 <__sinh_finite@GLIBC_2.17>
    edbc:	fabs	d2, d0
    edc0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    edc4:	fmov	d1, x0
    edc8:	fcmp	d2, d1
    edcc:	b.hi	eddc <sinh@@GLIBC_2.17+0x34>  // b.pmore
    edd0:	ldr	d8, [sp, #16]
    edd4:	ldp	x29, x30, [sp], #32
    edd8:	ret
    eddc:	fabs	d2, d8
    ede0:	fcmp	d2, d1
    ede4:	b.hi	edd0 <sinh@@GLIBC_2.17+0x28>  // b.pmore
    ede8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    edec:	ldr	x0, [x0, #4000]
    edf0:	ldr	w0, [x0]
    edf4:	cmn	w0, #0x1
    edf8:	b.eq	edd0 <sinh@@GLIBC_2.17+0x28>  // b.none
    edfc:	fmov	d1, d8
    ee00:	fmov	d0, d8
    ee04:	ldr	d8, [sp, #16]
    ee08:	mov	w0, #0x19                  	// #25
    ee0c:	ldp	x29, x30, [sp], #32
    ee10:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    ee14:	nop

000000000000ee18 <sqrt@@GLIBC_2.17>:
    ee18:	fcmp	d0, #0.0
    ee1c:	fmov	d1, d0
    ee20:	b.mi	ee2c <sqrt@@GLIBC_2.17+0x14>  // b.first
    ee24:	fmov	d0, d1
    ee28:	b	36720 <__sqrt_finite@GLIBC_2.17>
    ee2c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ee30:	ldr	x0, [x0, #4000]
    ee34:	ldr	w0, [x0]
    ee38:	cmn	w0, #0x1
    ee3c:	b.eq	ee24 <sqrt@@GLIBC_2.17+0xc>  // b.none
    ee40:	mov	w0, #0x1a                  	// #26
    ee44:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000ee48 <tgamma@@GLIBC_2.17>:
    ee48:	stp	x29, x30, [sp, #-48]!
    ee4c:	mov	x29, sp
    ee50:	str	x19, [sp, #16]
    ee54:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ee58:	str	d8, [sp, #24]
    ee5c:	fmov	d8, d0
    ee60:	ldr	x1, [x19, #4032]
    ee64:	add	x0, sp, #0x24
    ee68:	ldr	x2, [x1]
    ee6c:	str	x2, [sp, #40]
    ee70:	mov	x2, #0x0                   	// #0
    ee74:	bl	369a8 <__gamma_r_finite@GLIBC_2.17>
    ee78:	fabs	d2, d0
    ee7c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    ee80:	fmov	d1, x0
    ee84:	fcmp	d2, d1
    ee88:	b.hi	eec8 <tgamma@@GLIBC_2.17+0x80>  // b.pmore
    ee8c:	fcmp	d0, #0.0
    ee90:	b.eq	eec8 <tgamma@@GLIBC_2.17+0x80>  // b.none
    ee94:	ldr	w0, [sp, #36]
    ee98:	fneg	d1, d0
    ee9c:	cmp	w0, #0x0
    eea0:	fcsel	d0, d1, d0, lt  // lt = tstop
    eea4:	ldr	x19, [x19, #4032]
    eea8:	ldr	x1, [sp, #40]
    eeac:	ldr	x0, [x19]
    eeb0:	eor	x0, x1, x0
    eeb4:	cbnz	x0, ef94 <tgamma@@GLIBC_2.17+0x14c>
    eeb8:	ldr	x19, [sp, #16]
    eebc:	ldr	d8, [sp, #24]
    eec0:	ldp	x29, x30, [sp], #48
    eec4:	ret
    eec8:	fabs	d2, d8
    eecc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    eed0:	fmov	d1, x0
    eed4:	fcmp	d2, d1
    eed8:	b.ls	ef28 <tgamma@@GLIBC_2.17+0xe0>  // b.plast
    eedc:	b.le	ee94 <tgamma@@GLIBC_2.17+0x4c>
    eee0:	fcmpe	d8, #0.0
    eee4:	b.pl	ee94 <tgamma@@GLIBC_2.17+0x4c>  // b.nfrst
    eee8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    eeec:	ldr	x0, [x0, #4000]
    eef0:	ldr	w0, [x0]
    eef4:	cmn	w0, #0x1
    eef8:	b.eq	ee94 <tgamma@@GLIBC_2.17+0x4c>  // b.none
    eefc:	frintm	d1, d8
    ef00:	fcmp	d1, d8
    ef04:	b.eq	ef58 <tgamma@@GLIBC_2.17+0x110>  // b.none
    ef08:	fcmp	d0, #0.0
    ef0c:	b.ne	ef80 <tgamma@@GLIBC_2.17+0x138>  // b.any
    ef10:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ef14:	ldr	x0, [x0, #3976]
    ef18:	mrs	x1, tpidr_el0
    ef1c:	mov	w2, #0x22                  	// #34
    ef20:	str	w2, [x1, x0]
    ef24:	b	ee94 <tgamma@@GLIBC_2.17+0x4c>
    ef28:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ef2c:	ldr	x0, [x0, #4000]
    ef30:	ldr	w0, [x0]
    ef34:	cmn	w0, #0x1
    ef38:	b.eq	ee94 <tgamma@@GLIBC_2.17+0x4c>  // b.none
    ef3c:	fcmp	d8, #0.0
    ef40:	b.eq	ef6c <tgamma@@GLIBC_2.17+0x124>  // b.none
    ef44:	frintm	d1, d8
    ef48:	fcmp	d1, d8
    ef4c:	b.ne	ef08 <tgamma@@GLIBC_2.17+0xc0>  // b.any
    ef50:	fcmpe	d8, #0.0
    ef54:	b.pl	ef08 <tgamma@@GLIBC_2.17+0xc0>  // b.nfrst
    ef58:	fmov	d1, d8
    ef5c:	fmov	d0, d8
    ef60:	mov	w0, #0x29                  	// #41
    ef64:	bl	f218 <lgamma@GLIBC_2.17+0xe0>
    ef68:	b	eea4 <tgamma@@GLIBC_2.17+0x5c>
    ef6c:	fmov	d1, d8
    ef70:	fmov	d0, d8
    ef74:	mov	w0, #0x32                  	// #50
    ef78:	bl	f218 <lgamma@GLIBC_2.17+0xe0>
    ef7c:	b	eea4 <tgamma@@GLIBC_2.17+0x5c>
    ef80:	fmov	d1, d8
    ef84:	fmov	d0, d8
    ef88:	mov	w0, #0x28                  	// #40
    ef8c:	bl	f218 <lgamma@GLIBC_2.17+0xe0>
    ef90:	b	eea4 <tgamma@@GLIBC_2.17+0x5c>
    ef94:	bl	ba70 <__stack_chk_fail@plt>

000000000000ef98 <lgamma_r@@GLIBC_2.17>:
    ef98:	stp	x29, x30, [sp, #-32]!
    ef9c:	mov	x29, sp
    efa0:	str	d8, [sp, #16]
    efa4:	fmov	d8, d0
    efa8:	bl	35278 <__lgamma_r_finite@GLIBC_2.17>
    efac:	fabs	d2, d0
    efb0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    efb4:	fmov	d1, x0
    efb8:	fcmp	d2, d1
    efbc:	b.hi	efcc <lgamma_r@@GLIBC_2.17+0x34>  // b.pmore
    efc0:	ldr	d8, [sp, #16]
    efc4:	ldp	x29, x30, [sp], #32
    efc8:	ret
    efcc:	fabs	d2, d8
    efd0:	fcmp	d2, d1
    efd4:	b.hi	efc0 <lgamma_r@@GLIBC_2.17+0x28>  // b.pmore
    efd8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    efdc:	ldr	x0, [x0, #4000]
    efe0:	ldr	w0, [x0]
    efe4:	cmn	w0, #0x1
    efe8:	b.eq	efc0 <lgamma_r@@GLIBC_2.17+0x28>  // b.none
    efec:	frintm	d0, d8
    eff0:	mov	w0, #0xe                   	// #14
    eff4:	fcmp	d8, d0
    eff8:	b.ne	f008 <lgamma_r@@GLIBC_2.17+0x70>  // b.any
    effc:	fcmpe	d8, #0.0
    f000:	cset	w0, ls  // ls = plast
    f004:	add	w0, w0, #0xe
    f008:	fmov	d1, d8
    f00c:	fmov	d0, d8
    f010:	ldr	d8, [sp, #16]
    f014:	ldp	x29, x30, [sp], #32
    f018:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    f01c:	nop

000000000000f020 <lgamma@@GLIBC_2.23>:
    f020:	stp	x29, x30, [sp, #-32]!
    f024:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f028:	mov	x29, sp
    f02c:	ldr	x0, [x0, #4048]
    f030:	str	d8, [sp, #16]
    f034:	fmov	d8, d0
    f038:	bl	35278 <__lgamma_r_finite@GLIBC_2.17>
    f03c:	fabs	d2, d0
    f040:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    f044:	fmov	d1, x0
    f048:	fcmp	d2, d1
    f04c:	b.hi	f05c <lgamma@@GLIBC_2.23+0x3c>  // b.pmore
    f050:	ldr	d8, [sp, #16]
    f054:	ldp	x29, x30, [sp], #32
    f058:	ret
    f05c:	fabs	d2, d8
    f060:	fcmp	d2, d1
    f064:	b.hi	f050 <lgamma@@GLIBC_2.23+0x30>  // b.pmore
    f068:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f06c:	ldr	x0, [x0, #4000]
    f070:	ldr	w0, [x0]
    f074:	cmn	w0, #0x1
    f078:	b.eq	f050 <lgamma@@GLIBC_2.23+0x30>  // b.none
    f07c:	frintm	d0, d8
    f080:	mov	w0, #0xe                   	// #14
    f084:	fcmp	d8, d0
    f088:	b.ne	f098 <lgamma@@GLIBC_2.23+0x78>  // b.any
    f08c:	fcmpe	d8, #0.0
    f090:	cset	w0, ls  // ls = plast
    f094:	add	w0, w0, #0xe
    f098:	fmov	d1, d8
    f09c:	fmov	d0, d8
    f0a0:	ldr	d8, [sp, #16]
    f0a4:	ldp	x29, x30, [sp], #32
    f0a8:	b	f218 <lgamma@GLIBC_2.17+0xe0>
    f0ac:	nop

000000000000f0b0 <exp@GLIBC_2.17>:
    f0b0:	stp	x29, x30, [sp, #-32]!
    f0b4:	mov	x29, sp
    f0b8:	str	d8, [sp, #16]
    f0bc:	fmov	d8, d0
    f0c0:	bl	333e8 <__exp_finite@GLIBC_2.17>
    f0c4:	fabs	d2, d0
    f0c8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    f0cc:	fmov	d1, x0
    f0d0:	fcmp	d2, d1
    f0d4:	b.hi	f0ec <exp@GLIBC_2.17+0x3c>  // b.pmore
    f0d8:	fcmp	d0, #0.0
    f0dc:	b.eq	f0ec <exp@GLIBC_2.17+0x3c>  // b.none
    f0e0:	ldr	d8, [sp, #16]
    f0e4:	ldp	x29, x30, [sp], #32
    f0e8:	ret
    f0ec:	fabs	d2, d8
    f0f0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    f0f4:	fmov	d1, x0
    f0f8:	fcmp	d2, d1
    f0fc:	b.hi	f0e0 <exp@GLIBC_2.17+0x30>  // b.pmore
    f100:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f104:	ldr	x0, [x0, #4000]
    f108:	ldr	w0, [x0]
    f10c:	cmn	w0, #0x1
    f110:	b.eq	f0e0 <exp@GLIBC_2.17+0x30>  // b.none
    f114:	fmov	x0, d8
    f118:	fmov	d1, d8
    f11c:	fmov	d0, d8
    f120:	ldr	d8, [sp, #16]
    f124:	ldp	x29, x30, [sp], #32
    f128:	cmp	x0, #0x0
    f12c:	cset	w0, lt  // lt = tstop
    f130:	add	w0, w0, #0x6
    f134:	b	f218 <lgamma@GLIBC_2.17+0xe0>

000000000000f138 <lgamma@GLIBC_2.17>:
    f138:	stp	x29, x30, [sp, #-48]!
    f13c:	mov	x29, sp
    f140:	str	x19, [sp, #16]
    f144:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f148:	str	d8, [sp, #24]
    f14c:	fmov	d8, d0
    f150:	ldr	x1, [x19, #4032]
    f154:	add	x0, sp, #0x24
    f158:	ldr	x2, [x1]
    f15c:	str	x2, [sp, #40]
    f160:	mov	x2, #0x0                   	// #0
    f164:	bl	35278 <__lgamma_r_finite@GLIBC_2.17>
    f168:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f16c:	ldr	x0, [x0, #4000]
    f170:	ldr	w2, [x0]
    f174:	cmp	w2, #0x3
    f178:	b.eq	f198 <lgamma@GLIBC_2.17+0x60>  // b.none
    f17c:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f180:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f184:	ldr	w3, [sp, #36]
    f188:	ldr	x1, [x1, #4048]
    f18c:	ldr	x0, [x0, #4040]
    f190:	str	w3, [x1]
    f194:	str	w3, [x0]
    f198:	fabs	d2, d0
    f19c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    f1a0:	fmov	d1, x0
    f1a4:	fcmp	d2, d1
    f1a8:	b.hi	f1d0 <lgamma@GLIBC_2.17+0x98>  // b.pmore
    f1ac:	ldr	x19, [x19, #4032]
    f1b0:	ldr	x1, [sp, #40]
    f1b4:	ldr	x0, [x19]
    f1b8:	eor	x0, x1, x0
    f1bc:	cbnz	x0, f210 <lgamma@GLIBC_2.17+0xd8>
    f1c0:	ldr	x19, [sp, #16]
    f1c4:	ldr	d8, [sp, #24]
    f1c8:	ldp	x29, x30, [sp], #48
    f1cc:	ret
    f1d0:	fabs	d2, d8
    f1d4:	fcmp	d2, d1
    f1d8:	b.hi	f1ac <lgamma@GLIBC_2.17+0x74>  // b.pmore
    f1dc:	cmn	w2, #0x1
    f1e0:	b.eq	f1ac <lgamma@GLIBC_2.17+0x74>  // b.none
    f1e4:	frintm	d0, d8
    f1e8:	mov	w0, #0xe                   	// #14
    f1ec:	fcmp	d8, d0
    f1f0:	b.ne	f200 <lgamma@GLIBC_2.17+0xc8>  // b.any
    f1f4:	fcmpe	d8, #0.0
    f1f8:	cset	w0, ls  // ls = plast
    f1fc:	add	w0, w0, #0xe
    f200:	fmov	d1, d8
    f204:	fmov	d0, d8
    f208:	bl	f218 <lgamma@GLIBC_2.17+0xe0>
    f20c:	b	f1ac <lgamma@GLIBC_2.17+0x74>
    f210:	bl	ba70 <__stack_chk_fail@plt>
    f214:	nop
    f218:	stp	x29, x30, [sp, #-80]!
    f21c:	sub	w1, w0, #0x1
    f220:	cmp	w1, #0xf9
    f224:	mov	x29, sp
    f228:	stp	x19, x20, [sp, #16]
    f22c:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f230:	ldr	x2, [x19, #4032]
    f234:	stp	d0, d1, [sp, #48]
    f238:	ldr	x3, [x2]
    f23c:	str	x3, [sp, #72]
    f240:	mov	x3, #0x0                   	// #0
    f244:	b.ls	f2a8 <lgamma@GLIBC_2.17+0x170>  // b.plast
    f248:	mov	w1, #0x2                   	// #2
    f24c:	str	w1, [sp, #32]
    f250:	cmp	w0, #0x63
    f254:	b.gt	10468 <lgamma@GLIBC_2.17+0x1330>
    f258:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f25c:	add	x0, x0, #0x580
    f260:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f264:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
    f268:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    f26c:	fmov	d1, x1
    f270:	fmov	d2, x2
    f274:	str	x0, [sp, #40]
    f278:	ldr	x20, [x20, #4000]
    f27c:	bif	v0.8b, v1.8b, v2.8b
    f280:	ldr	w0, [x20]
    f284:	str	d0, [sp, #64]
    f288:	cmp	w0, #0x2
    f28c:	b.ne	10acc <lgamma@GLIBC_2.17+0x1994>  // b.any
    f290:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f294:	ldr	x0, [x0, #3976]
    f298:	mrs	x1, tpidr_el0
    f29c:	mov	w2, #0x22                  	// #34
    f2a0:	str	w2, [x1, x0]
    f2a4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f2a8:	adrp	x2, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f2ac:	add	x2, x2, #0x83c
    f2b0:	ldrh	w1, [x2, w1, uxtw #1]
    f2b4:	adr	x2, f2c0 <lgamma@GLIBC_2.17+0x188>
    f2b8:	add	x1, x2, w1, sxth #2
    f2bc:	br	x1
    f2c0:	mov	w1, #0x1                   	// #1
    f2c4:	str	w1, [sp, #32]
    f2c8:	cmp	w0, #0x63
    f2cc:	b.le	1080c <lgamma@GLIBC_2.17+0x16d4>
    f2d0:	cmp	w0, #0xc8
    f2d4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f2d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f2dc:	add	x1, x1, #0x5d8
    f2e0:	add	x0, x0, #0x5d0
    f2e4:	csel	x0, x0, x1, lt  // lt = tstop
    f2e8:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f2ec:	str	x0, [sp, #40]
    f2f0:	ldr	x0, [x1, #4000]
    f2f4:	ldr	w0, [x0]
    f2f8:	cbnz	w0, 104a0 <lgamma@GLIBC_2.17+0x1368>
    f2fc:	mov	x0, #0xffffe0000000        	// #281474439839744
    f300:	movk	x0, #0xc7ef, lsl #48
    f304:	str	x0, [sp, #64]
    f308:	add	x0, sp, #0x20
    f30c:	bl	ba60 <matherr@plt>
    f310:	cbz	w0, 10fd0 <lgamma@GLIBC_2.17+0x1e98>
    f314:	ldr	d0, [sp, #64]
    f318:	ldr	x0, [x19, #4032]
    f31c:	ldr	x1, [sp, #72]
    f320:	ldr	x0, [x0]
    f324:	eor	x0, x1, x0
    f328:	cbnz	x0, 11660 <lgamma@GLIBC_2.17+0x2528>
    f32c:	ldp	x19, x20, [sp, #16]
    f330:	ldp	x29, x30, [sp], #80
    f334:	ret
    f338:	mov	w1, #0x2                   	// #2
    f33c:	str	w1, [sp, #32]
    f340:	cmp	w0, #0x63
    f344:	b.le	10788 <lgamma@GLIBC_2.17+0x1650>
    f348:	cmp	w0, #0xc8
    f34c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f350:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f354:	add	x1, x1, #0x5d8
    f358:	add	x0, x0, #0x5d0
    f35c:	csel	x0, x0, x1, lt  // lt = tstop
    f360:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f364:	str	x0, [sp, #40]
    f368:	ldr	x0, [x1, #4000]
    f36c:	ldr	w1, [x0]
    f370:	cbnz	w1, 1075c <lgamma@GLIBC_2.17+0x1624>
    f374:	mov	x0, #0xffffe0000000        	// #281474439839744
    f378:	movk	x0, #0xc7ef, lsl #48
    f37c:	str	x0, [sp, #64]
    f380:	add	x0, sp, #0x20
    f384:	bl	ba60 <matherr@plt>
    f388:	cbz	w0, 10bdc <lgamma@GLIBC_2.17+0x1aa4>
    f38c:	ldr	d0, [sp, #64]
    f390:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f394:	mov	w1, #0x4                   	// #4
    f398:	str	w1, [sp, #32]
    f39c:	cmp	w0, #0x63
    f3a0:	b.le	109e0 <lgamma@GLIBC_2.17+0x18a8>
    f3a4:	cmp	w0, #0xc8
    f3a8:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f3ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f3b0:	add	x1, x1, #0x5c0
    f3b4:	add	x0, x0, #0x5b8
    f3b8:	csel	x0, x0, x1, lt  // lt = tstop
    f3bc:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f3c0:	str	x0, [sp, #40]
    f3c4:	str	xzr, [sp, #64]
    f3c8:	ldr	x0, [x1, #4000]
    f3cc:	ldr	w0, [x0]
    f3d0:	cmp	w0, #0x2
    f3d4:	b.eq	10484 <lgamma@GLIBC_2.17+0x134c>  // b.none
    f3d8:	add	x0, sp, #0x20
    f3dc:	bl	ba60 <matherr@plt>
    f3e0:	cbz	w0, 10b98 <lgamma@GLIBC_2.17+0x1a60>
    f3e4:	ldr	d0, [sp, #64]
    f3e8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f3ec:	mov	w1, #0x2                   	// #2
    f3f0:	str	w1, [sp, #32]
    f3f4:	cmp	w0, #0x63
    f3f8:	b.le	109ec <lgamma@GLIBC_2.17+0x18b4>
    f3fc:	cmp	w0, #0xc8
    f400:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f404:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f408:	add	x1, x1, #0x590
    f40c:	add	x0, x0, #0x588
    f410:	csel	x0, x0, x1, lt  // lt = tstop
    f414:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f418:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    f41c:	str	x0, [sp, #40]
    f420:	ldr	x20, [x20, #4000]
    f424:	str	x1, [sp, #64]
    f428:	ldr	w0, [x20]
    f42c:	cmp	w0, #0x2
    f430:	b.eq	104b0 <lgamma@GLIBC_2.17+0x1378>  // b.none
    f434:	add	x0, sp, #0x20
    f438:	bl	ba60 <matherr@plt>
    f43c:	cbz	w0, 10d70 <lgamma@GLIBC_2.17+0x1c38>
    f440:	ldr	d0, [sp, #64]
    f444:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f448:	mov	w1, #0x5                   	// #5
    f44c:	str	w1, [sp, #32]
    f450:	cmp	w0, #0x63
    f454:	b.le	109f8 <lgamma@GLIBC_2.17+0x18c0>
    f458:	cmp	w0, #0xc8
    f45c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f460:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f464:	add	x1, x1, #0x418
    f468:	add	x0, x0, #0x410
    f46c:	csel	x0, x0, x1, lt  // lt = tstop
    f470:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f474:	str	x0, [sp, #40]
    f478:	str	xzr, [sp, #64]
    f47c:	ldr	x20, [x20, #4000]
    f480:	ldr	w0, [x20]
    f484:	cmp	w0, #0x2
    f488:	b.eq	10484 <lgamma@GLIBC_2.17+0x134c>  // b.none
    f48c:	add	x0, sp, #0x20
    f490:	bl	ba60 <matherr@plt>
    f494:	cbz	w0, 10ce8 <lgamma@GLIBC_2.17+0x1bb0>
    f498:	ldr	d0, [sp, #64]
    f49c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f4a0:	mov	w1, #0x5                   	// #5
    f4a4:	str	w1, [sp, #32]
    f4a8:	cmp	w0, #0x63
    f4ac:	b.le	10818 <lgamma@GLIBC_2.17+0x16e0>
    f4b0:	cmp	w0, #0xc8
    f4b4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f4b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f4bc:	add	x1, x1, #0x578
    f4c0:	add	x0, x0, #0x570
    f4c4:	csel	x0, x0, x1, lt  // lt = tstop
    f4c8:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f4cc:	str	x0, [sp, #40]
    f4d0:	str	xzr, [sp, #64]
    f4d4:	ldr	x20, [x20, #4000]
    f4d8:	ldr	w0, [x20]
    f4dc:	cmp	w0, #0x2
    f4e0:	b.eq	10484 <lgamma@GLIBC_2.17+0x134c>  // b.none
    f4e4:	add	x0, sp, #0x20
    f4e8:	bl	ba60 <matherr@plt>
    f4ec:	cbz	w0, 10f1c <lgamma@GLIBC_2.17+0x1de4>
    f4f0:	ldr	d0, [sp, #64]
    f4f4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f4f8:	mov	w1, #0x3                   	// #3
    f4fc:	str	w1, [sp, #32]
    f500:	cmp	w0, #0x63
    f504:	b.le	109c8 <lgamma@GLIBC_2.17+0x1890>
    f508:	cmp	w0, #0xc8
    f50c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f510:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f514:	add	x1, x1, #0x5c0
    f518:	add	x0, x0, #0x5b8
    f51c:	csel	x0, x0, x1, lt  // lt = tstop
    f520:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f524:	str	x0, [sp, #40]
    f528:	ldr	x0, [x1, #4000]
    f52c:	ldr	w0, [x0]
    f530:	cbnz	w0, 10530 <lgamma@GLIBC_2.17+0x13f8>
    f534:	mov	x0, #0xffffe0000000        	// #281474439839744
    f538:	movk	x0, #0x47ef, lsl #48
    f53c:	str	x0, [sp, #64]
    f540:	add	x0, sp, #0x20
    f544:	bl	ba60 <matherr@plt>
    f548:	cbz	w0, 10c48 <lgamma@GLIBC_2.17+0x1b10>
    f54c:	ldr	d0, [sp, #64]
    f550:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f554:	mov	w1, #0x4                   	// #4
    f558:	str	w1, [sp, #32]
    f55c:	cmp	w0, #0x63
    f560:	b.le	10a54 <lgamma@GLIBC_2.17+0x191c>
    f564:	cmp	w0, #0xc8
    f568:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f56c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f570:	add	x1, x1, #0x5a8
    f574:	add	x0, x0, #0x5a0
    f578:	csel	x0, x0, x1, lt  // lt = tstop
    f57c:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f580:	str	x0, [sp, #40]
    f584:	str	xzr, [sp, #64]
    f588:	ldr	x0, [x1, #4000]
    f58c:	ldr	w0, [x0]
    f590:	cmp	w0, #0x2
    f594:	b.eq	10484 <lgamma@GLIBC_2.17+0x134c>  // b.none
    f598:	add	x0, sp, #0x20
    f59c:	bl	ba60 <matherr@plt>
    f5a0:	cbz	w0, 10c64 <lgamma@GLIBC_2.17+0x1b2c>
    f5a4:	ldr	d0, [sp, #64]
    f5a8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f5ac:	mov	w1, #0x5                   	// #5
    f5b0:	str	w1, [sp, #32]
    f5b4:	cmp	w0, #0x63
    f5b8:	b.le	10a78 <lgamma@GLIBC_2.17+0x1940>
    f5bc:	cmp	w0, #0xc8
    f5c0:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f5c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f5c8:	add	x1, x1, #0x400
    f5cc:	add	x0, x0, #0x3f8
    f5d0:	csel	x0, x0, x1, lt  // lt = tstop
    f5d4:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f5d8:	str	x0, [sp, #40]
    f5dc:	str	xzr, [sp, #64]
    f5e0:	ldr	x20, [x20, #4000]
    f5e4:	ldr	w0, [x20]
    f5e8:	cmp	w0, #0x2
    f5ec:	b.eq	10484 <lgamma@GLIBC_2.17+0x134c>  // b.none
    f5f0:	add	x0, sp, #0x20
    f5f4:	bl	ba60 <matherr@plt>
    f5f8:	cbz	w0, 10b58 <lgamma@GLIBC_2.17+0x1a20>
    f5fc:	ldr	d0, [sp, #64]
    f600:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f604:	mov	w1, #0x5                   	// #5
    f608:	str	w1, [sp, #32]
    f60c:	cmp	w0, #0x63
    f610:	b.le	10824 <lgamma@GLIBC_2.17+0x16ec>
    f614:	cmp	w0, #0xc8
    f618:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f61c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f620:	add	x1, x1, #0x560
    f624:	add	x0, x0, #0x558
    f628:	csel	x0, x0, x1, lt  // lt = tstop
    f62c:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f630:	str	x0, [sp, #40]
    f634:	str	xzr, [sp, #64]
    f638:	ldr	x20, [x20, #4000]
    f63c:	ldr	w0, [x20]
    f640:	cmp	w0, #0x2
    f644:	b.eq	10484 <lgamma@GLIBC_2.17+0x134c>  // b.none
    f648:	add	x0, sp, #0x20
    f64c:	bl	ba60 <matherr@plt>
    f650:	cbz	w0, 10e40 <lgamma@GLIBC_2.17+0x1d08>
    f654:	ldr	d0, [sp, #64]
    f658:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f65c:	mov	w1, #0x3                   	// #3
    f660:	str	w1, [sp, #32]
    f664:	cmp	w0, #0x63
    f668:	b.le	10830 <lgamma@GLIBC_2.17+0x16f8>
    f66c:	cmp	w0, #0xc8
    f670:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f674:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f678:	add	x1, x1, #0x5a8
    f67c:	add	x0, x0, #0x5a0
    f680:	csel	x0, x0, x1, lt  // lt = tstop
    f684:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f688:	str	x0, [sp, #40]
    f68c:	ldr	x0, [x1, #4000]
    f690:	ldr	w0, [x0]
    f694:	cbnz	w0, 10560 <lgamma@GLIBC_2.17+0x1428>
    f698:	mov	x0, #0xffffe0000000        	// #281474439839744
    f69c:	movk	x0, #0x47ef, lsl #48
    f6a0:	str	x0, [sp, #64]
    f6a4:	add	x0, sp, #0x20
    f6a8:	bl	ba60 <matherr@plt>
    f6ac:	cbz	w0, 10db0 <lgamma@GLIBC_2.17+0x1c78>
    f6b0:	ldr	d0, [sp, #64]
    f6b4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f6b8:	mov	w1, #0x1                   	// #1
    f6bc:	str	w1, [sp, #32]
    f6c0:	cmp	w0, #0x63
    f6c4:	b.le	10960 <lgamma@GLIBC_2.17+0x1828>
    f6c8:	cmp	w0, #0xc8
    f6cc:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f6d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f6d4:	add	x1, x1, #0x320
    f6d8:	add	x0, x0, #0x470
    f6dc:	csel	x0, x0, x1, lt  // lt = tstop
    f6e0:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f6e4:	str	x0, [sp, #40]
    f6e8:	ldr	x0, [x20, #4000]
    f6ec:	ldr	w0, [x0]
    f6f0:	cbnz	w0, 106b8 <lgamma@GLIBC_2.17+0x1580>
    f6f4:	str	xzr, [sp, #64]
    f6f8:	add	x0, sp, #0x20
    f6fc:	bl	ba60 <matherr@plt>
    f700:	cbz	w0, 10e18 <lgamma@GLIBC_2.17+0x1ce0>
    f704:	ldr	d0, [sp, #64]
    f708:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f70c:	mov	w1, #0x4                   	// #4
    f710:	str	w1, [sp, #32]
    f714:	cmp	w0, #0x63
    f718:	b.le	10a84 <lgamma@GLIBC_2.17+0x194c>
    f71c:	cmp	w0, #0xc8
    f720:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f724:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f728:	add	x1, x1, #0x530
    f72c:	add	x0, x0, #0x528
    f730:	csel	x0, x0, x1, lt  // lt = tstop
    f734:	movi	d1, #0x0
    f738:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f73c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    f740:	fmov	d2, x2
    f744:	str	x0, [sp, #40]
    f748:	ldr	x0, [x1, #4000]
    f74c:	bif	v0.8b, v1.8b, v2.8b
    f750:	ldr	w0, [x0]
    f754:	str	d0, [sp, #64]
    f758:	cmp	w0, #0x2
    f75c:	b.ne	10a90 <lgamma@GLIBC_2.17+0x1958>  // b.any
    f760:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f764:	ldr	x0, [x0, #3976]
    f768:	mrs	x1, tpidr_el0
    f76c:	mov	w2, #0x22                  	// #34
    f770:	str	w2, [x1, x0]
    f774:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f778:	mov	w1, #0x2                   	// #2
    f77c:	str	w1, [sp, #32]
    f780:	cmp	w0, #0x63
    f784:	b.le	10a48 <lgamma@GLIBC_2.17+0x1910>
    f788:	cmp	w0, #0xc8
    f78c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f790:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f794:	add	x1, x1, #0x518
    f798:	add	x0, x0, #0x510
    f79c:	csel	x0, x0, x1, lt  // lt = tstop
    f7a0:	movi	d1, #0x0
    f7a4:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f7a8:	str	x0, [sp, #40]
    f7ac:	ldr	x20, [x20, #4000]
    f7b0:	fdiv	d0, d0, d1
    f7b4:	ldr	w0, [x20]
    f7b8:	cmp	w0, #0x2
    f7bc:	str	d0, [sp, #64]
    f7c0:	b.ne	10ab8 <lgamma@GLIBC_2.17+0x1980>  // b.any
    f7c4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f7c8:	ldr	x0, [x0, #3976]
    f7cc:	mrs	x1, tpidr_el0
    f7d0:	mov	w2, #0x22                  	// #34
    f7d4:	str	w2, [x1, x0]
    f7d8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f7dc:	mov	w1, #0x1                   	// #1
    f7e0:	str	w1, [sp, #32]
    f7e4:	cmp	w0, #0x63
    f7e8:	b.le	109d4 <lgamma@GLIBC_2.17+0x189c>
    f7ec:	cmp	w0, #0xc8
    f7f0:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f7f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f7f8:	add	x1, x1, #0x518
    f7fc:	add	x0, x0, #0x510
    f800:	csel	x0, x0, x1, lt  // lt = tstop
    f804:	movi	d0, #0x0
    f808:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f80c:	str	x0, [sp, #40]
    f810:	ldr	x20, [x20, #4000]
    f814:	fdiv	d0, d0, d0
    f818:	ldr	w0, [x20]
    f81c:	cmp	w0, #0x2
    f820:	str	d0, [sp, #64]
    f824:	b.ne	10ae0 <lgamma@GLIBC_2.17+0x19a8>  // b.any
    f828:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f82c:	ldr	x0, [x0, #3976]
    f830:	mrs	x1, tpidr_el0
    f834:	mov	w2, #0x21                  	// #33
    f838:	str	w2, [x1, x0]
    f83c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f840:	mov	w1, #0x3                   	// #3
    f844:	str	w1, [sp, #32]
    f848:	cmp	w0, #0x63
    f84c:	b.le	107e8 <lgamma@GLIBC_2.17+0x16b0>
    f850:	cmp	w0, #0xc8
    f854:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f858:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f85c:	add	x1, x1, #0x590
    f860:	add	x0, x0, #0x588
    f864:	csel	x0, x0, x1, lt  // lt = tstop
    f868:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f86c:	mov	x2, #0x7ff0000000000000    	// #9218868437227405312
    f870:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
    f874:	fmov	d1, x2
    f878:	fmov	d2, x3
    f87c:	str	x0, [sp, #40]
    f880:	ldr	x1, [x1, #4000]
    f884:	bif	v0.8b, v1.8b, v2.8b
    f888:	ldr	w0, [x1]
    f88c:	str	d0, [sp, #64]
    f890:	cmp	w0, #0x2
    f894:	b.ne	10b44 <lgamma@GLIBC_2.17+0x1a0c>  // b.any
    f898:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f89c:	ldr	x0, [x0, #3976]
    f8a0:	mrs	x1, tpidr_el0
    f8a4:	mov	w2, #0x22                  	// #34
    f8a8:	str	w2, [x1, x0]
    f8ac:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f8b0:	mov	w1, #0x2                   	// #2
    f8b4:	str	w1, [sp, #32]
    f8b8:	cmp	w0, #0x63
    f8bc:	b.le	10a6c <lgamma@GLIBC_2.17+0x1934>
    f8c0:	cmp	w0, #0xc8
    f8c4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f8c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f8cc:	add	x1, x1, #0x448
    f8d0:	add	x0, x0, #0x440
    f8d4:	csel	x0, x0, x1, lt  // lt = tstop
    f8d8:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f8dc:	str	x0, [sp, #40]
    f8e0:	ldr	x0, [x20, #4000]
    f8e4:	ldr	w0, [x0]
    f8e8:	cbnz	w0, 10640 <lgamma@GLIBC_2.17+0x1508>
    f8ec:	mov	x0, #0xffffe0000000        	// #281474439839744
    f8f0:	movk	x0, #0xc7ef, lsl #48
    f8f4:	str	x0, [sp, #64]
    f8f8:	add	x0, sp, #0x20
    f8fc:	bl	ba60 <matherr@plt>
    f900:	cbz	w0, 10bb4 <lgamma@GLIBC_2.17+0x1a7c>
    f904:	ldr	d0, [sp, #64]
    f908:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f90c:	mov	w1, #0x2                   	// #2
    f910:	str	w1, [sp, #32]
    f914:	cmp	w0, #0x63
    f918:	b.le	10878 <lgamma@GLIBC_2.17+0x1740>
    f91c:	cmp	w0, #0xc8
    f920:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f924:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f928:	add	x1, x1, #0x430
    f92c:	add	x0, x0, #0x428
    f930:	csel	x0, x0, x1, lt  // lt = tstop
    f934:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f938:	str	x0, [sp, #40]
    f93c:	ldr	x0, [x20, #4000]
    f940:	ldr	w0, [x0]
    f944:	cbnz	w0, 10654 <lgamma@GLIBC_2.17+0x151c>
    f948:	mov	x0, #0xffffe0000000        	// #281474439839744
    f94c:	movk	x0, #0x47ef, lsl #48
    f950:	str	x0, [sp, #64]
    f954:	add	x0, sp, #0x20
    f958:	bl	ba60 <matherr@plt>
    f95c:	cbz	w0, 10bf8 <lgamma@GLIBC_2.17+0x1ac0>
    f960:	ldr	d0, [sp, #64]
    f964:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f968:	mov	w1, #0x5                   	// #5
    f96c:	str	w1, [sp, #32]
    f970:	cmp	w0, #0x63
    f974:	b.le	108f4 <lgamma@GLIBC_2.17+0x17bc>
    f978:	cmp	w0, #0xc8
    f97c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f980:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f984:	add	x1, x1, #0x3e8
    f988:	add	x0, x0, #0x3e0
    f98c:	csel	x0, x0, x1, lt  // lt = tstop
    f990:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f994:	str	x0, [sp, #40]
    f998:	str	xzr, [sp, #64]
    f99c:	ldr	x20, [x20, #4000]
    f9a0:	ldr	w0, [x20]
    f9a4:	cmp	w0, #0x2
    f9a8:	b.eq	10484 <lgamma@GLIBC_2.17+0x134c>  // b.none
    f9ac:	add	x0, sp, #0x20
    f9b0:	bl	ba60 <matherr@plt>
    f9b4:	cbz	w0, 110b8 <lgamma@GLIBC_2.17+0x1f80>
    f9b8:	ldr	d0, [sp, #64]
    f9bc:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    f9c0:	mov	w1, #0x3                   	// #3
    f9c4:	str	w1, [sp, #32]
    f9c8:	cmp	w0, #0x63
    f9cc:	b.le	10a3c <lgamma@GLIBC_2.17+0x1904>
    f9d0:	cmp	w0, #0xc8
    f9d4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f9d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    f9dc:	add	x1, x1, #0x488
    f9e0:	add	x0, x0, #0x480
    f9e4:	csel	x0, x0, x1, lt  // lt = tstop
    f9e8:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    f9ec:	str	x0, [sp, #40]
    f9f0:	fcmpe	d0, #0.0
    f9f4:	ldr	x0, [x1, #4000]
    f9f8:	ldr	w1, [x0]
    f9fc:	cbnz	w1, 10a04 <lgamma@GLIBC_2.17+0x18cc>
    fa00:	mov	x0, #0xffffe0000000        	// #281474439839744
    fa04:	mov	x1, #0xffffe0000000        	// #281474439839744
    fa08:	movk	x0, #0x47ef, lsl #48
    fa0c:	movk	x1, #0xc7ef, lsl #48
    fa10:	fmov	d0, x0
    fa14:	fmov	d1, x1
    fa18:	fcsel	d0, d0, d1, gt
    fa1c:	str	d0, [sp, #64]
    fa20:	add	x0, sp, #0x20
    fa24:	bl	ba60 <matherr@plt>
    fa28:	cbz	w0, 10e64 <lgamma@GLIBC_2.17+0x1d2c>
    fa2c:	ldr	d0, [sp, #64]
    fa30:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fa34:	mov	w1, #0x1                   	// #1
    fa38:	str	w1, [sp, #32]
    fa3c:	cmp	w0, #0x63
    fa40:	b.le	10800 <lgamma@GLIBC_2.17+0x16c8>
    fa44:	cmp	w0, #0xc8
    fa48:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fa4c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fa50:	add	x1, x1, #0x320
    fa54:	add	x0, x0, #0x470
    fa58:	csel	x0, x0, x1, lt  // lt = tstop
    fa5c:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fa60:	str	x0, [sp, #40]
    fa64:	ldr	x0, [x20, #4000]
    fa68:	ldr	w0, [x0]
    fa6c:	cbnz	w0, 104d0 <lgamma@GLIBC_2.17+0x1398>
    fa70:	str	xzr, [sp, #64]
    fa74:	add	x0, sp, #0x20
    fa78:	bl	ba60 <matherr@plt>
    fa7c:	cbz	w0, 10c20 <lgamma@GLIBC_2.17+0x1ae8>
    fa80:	ldr	d0, [sp, #64]
    fa84:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fa88:	mov	w1, #0x5                   	// #5
    fa8c:	str	w1, [sp, #32]
    fa90:	cmp	w0, #0x63
    fa94:	b.le	1093c <lgamma@GLIBC_2.17+0x1804>
    fa98:	cmp	w0, #0xc8
    fa9c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    faa0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    faa4:	add	x1, x1, #0x548
    faa8:	add	x0, x0, #0x540
    faac:	csel	x0, x0, x1, lt  // lt = tstop
    fab0:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fab4:	str	x0, [sp, #40]
    fab8:	str	xzr, [sp, #64]
    fabc:	ldr	x20, [x20, #4000]
    fac0:	ldr	w0, [x20]
    fac4:	cmp	w0, #0x2
    fac8:	b.eq	10484 <lgamma@GLIBC_2.17+0x134c>  // b.none
    facc:	add	x0, sp, #0x20
    fad0:	bl	ba60 <matherr@plt>
    fad4:	cbz	w0, 10d30 <lgamma@GLIBC_2.17+0x1bf8>
    fad8:	ldr	d0, [sp, #64]
    fadc:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fae0:	mov	w1, #0x1                   	// #1
    fae4:	str	w1, [sp, #32]
    fae8:	cmp	w0, #0x63
    faec:	b.le	10884 <lgamma@GLIBC_2.17+0x174c>
    faf0:	cmp	w0, #0xc8
    faf4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    faf8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fafc:	add	x1, x1, #0x3e8
    fb00:	add	x0, x0, #0x3e0
    fb04:	csel	x0, x0, x1, lt  // lt = tstop
    fb08:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fb0c:	str	x0, [sp, #40]
    fb10:	ldr	x0, [x20, #4000]
    fb14:	ldr	w0, [x0]
    fb18:	cbnz	w0, 10668 <lgamma@GLIBC_2.17+0x1530>
    fb1c:	mov	x0, #0xffffe0000000        	// #281474439839744
    fb20:	movk	x0, #0xc7ef, lsl #48
    fb24:	str	x0, [sp, #64]
    fb28:	add	x0, sp, #0x20
    fb2c:	bl	ba60 <matherr@plt>
    fb30:	cbz	w0, 11074 <lgamma@GLIBC_2.17+0x1f3c>
    fb34:	ldr	d0, [sp, #64]
    fb38:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fb3c:	mov	w1, #0x4                   	// #4
    fb40:	str	w1, [sp, #32]
    fb44:	cmp	w0, #0x63
    fb48:	b.le	10948 <lgamma@GLIBC_2.17+0x1810>
    fb4c:	cmp	w0, #0xc8
    fb50:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fb54:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fb58:	add	x1, x1, #0x3d0
    fb5c:	add	x0, x0, #0x3c8
    fb60:	csel	x0, x0, x1, lt  // lt = tstop
    fb64:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fb68:	str	x0, [sp, #40]
    fb6c:	str	xzr, [sp, #64]
    fb70:	ldr	x0, [x1, #4000]
    fb74:	ldr	w0, [x0]
    fb78:	cmp	w0, #0x2
    fb7c:	b.ne	10aa4 <lgamma@GLIBC_2.17+0x196c>  // b.any
    fb80:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fb84:	ldr	x0, [x0, #3976]
    fb88:	mrs	x1, tpidr_el0
    fb8c:	mov	w2, #0x22                  	// #34
    fb90:	movi	d0, #0x0
    fb94:	str	w2, [x1, x0]
    fb98:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fb9c:	mov	w1, #0x1                   	// #1
    fba0:	str	w1, [sp, #32]
    fba4:	cmp	w0, #0x63
    fba8:	b.le	108d0 <lgamma@GLIBC_2.17+0x1798>
    fbac:	cmp	w0, #0xc8
    fbb0:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fbb4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fbb8:	add	x1, x1, #0x500
    fbbc:	add	x0, x0, #0x4f8
    fbc0:	csel	x0, x0, x1, lt  // lt = tstop
    fbc4:	movi	d0, #0x0
    fbc8:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fbcc:	str	x0, [sp, #40]
    fbd0:	ldr	x20, [x20, #4000]
    fbd4:	fdiv	d0, d0, d0
    fbd8:	ldr	w0, [x20]
    fbdc:	cmp	w0, #0x2
    fbe0:	str	d0, [sp, #64]
    fbe4:	b.ne	10b30 <lgamma@GLIBC_2.17+0x19f8>  // b.any
    fbe8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fbec:	ldr	x0, [x0, #3976]
    fbf0:	mrs	x1, tpidr_el0
    fbf4:	mov	w2, #0x21                  	// #33
    fbf8:	str	w2, [x1, x0]
    fbfc:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fc00:	mov	w1, #0x1                   	// #1
    fc04:	str	w1, [sp, #32]
    fc08:	cmp	w0, #0x63
    fc0c:	b.le	10918 <lgamma@GLIBC_2.17+0x17e0>
    fc10:	cmp	w0, #0xc8
    fc14:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fc18:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fc1c:	add	x1, x1, #0x4e0
    fc20:	add	x0, x0, #0x4d0
    fc24:	csel	x0, x0, x1, lt  // lt = tstop
    fc28:	movi	d0, #0x0
    fc2c:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fc30:	str	x0, [sp, #40]
    fc34:	ldr	x20, [x20, #4000]
    fc38:	fdiv	d0, d0, d0
    fc3c:	ldr	w0, [x20]
    fc40:	cmp	w0, #0x2
    fc44:	str	d0, [sp, #64]
    fc48:	b.ne	10b08 <lgamma@GLIBC_2.17+0x19d0>  // b.any
    fc4c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fc50:	ldr	x0, [x0, #3976]
    fc54:	mrs	x1, tpidr_el0
    fc58:	mov	w2, #0x21                  	// #33
    fc5c:	str	w2, [x1, x0]
    fc60:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fc64:	mov	w1, #0x1                   	// #1
    fc68:	str	w1, [sp, #32]
    fc6c:	cmp	w0, #0x63
    fc70:	b.le	108c4 <lgamma@GLIBC_2.17+0x178c>
    fc74:	cmp	w0, #0xc8
    fc78:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fc7c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fc80:	add	x1, x1, #0x418
    fc84:	add	x0, x0, #0x410
    fc88:	csel	x0, x0, x1, lt  // lt = tstop
    fc8c:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fc90:	str	x0, [sp, #40]
    fc94:	ldr	x0, [x20, #4000]
    fc98:	ldr	w1, [x0]
    fc9c:	cbnz	w1, 10890 <lgamma@GLIBC_2.17+0x1758>
    fca0:	mov	x0, #0xffffe0000000        	// #281474439839744
    fca4:	movk	x0, #0xc7ef, lsl #48
    fca8:	str	x0, [sp, #64]
    fcac:	add	x0, sp, #0x20
    fcb0:	bl	ba60 <matherr@plt>
    fcb4:	cbz	w0, 1111c <lgamma@GLIBC_2.17+0x1fe4>
    fcb8:	ldr	d0, [sp, #64]
    fcbc:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fcc0:	mov	w1, #0x1                   	// #1
    fcc4:	str	w1, [sp, #32]
    fcc8:	cmp	w0, #0x63
    fccc:	b.le	1090c <lgamma@GLIBC_2.17+0x17d4>
    fcd0:	cmp	w0, #0xc8
    fcd4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fcd8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fcdc:	add	x1, x1, #0x400
    fce0:	add	x0, x0, #0x3f8
    fce4:	csel	x0, x0, x1, lt  // lt = tstop
    fce8:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fcec:	str	x0, [sp, #40]
    fcf0:	ldr	x0, [x20, #4000]
    fcf4:	ldr	w0, [x0]
    fcf8:	cbnz	w0, 106e0 <lgamma@GLIBC_2.17+0x15a8>
    fcfc:	mov	x0, #0xffffe0000000        	// #281474439839744
    fd00:	movk	x0, #0xc7ef, lsl #48
    fd04:	str	x0, [sp, #64]
    fd08:	add	x0, sp, #0x20
    fd0c:	bl	ba60 <matherr@plt>
    fd10:	cbz	w0, 10e80 <lgamma@GLIBC_2.17+0x1d48>
    fd14:	ldr	d0, [sp, #64]
    fd18:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fd1c:	mov	w1, #0x3                   	// #3
    fd20:	str	w1, [sp, #32]
    fd24:	cmp	w0, #0x63
    fd28:	b.le	109b0 <lgamma@GLIBC_2.17+0x1878>
    fd2c:	cmp	w0, #0xc8
    fd30:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fd34:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fd38:	add	x1, x1, #0x320
    fd3c:	add	x0, x0, #0x470
    fd40:	csel	x0, x0, x1, lt  // lt = tstop
    fd44:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fd48:	str	x0, [sp, #40]
    fd4c:	fmov	d2, #5.000000000000000000e-01
    fd50:	fcmpe	d0, #0.0
    fd54:	ldr	x0, [x1, #4000]
    fd58:	fmul	d1, d1, d2
    fd5c:	ldr	w0, [x0]
    fd60:	cbnz	w0, 1096c <lgamma@GLIBC_2.17+0x1834>
    fd64:	mov	x0, #0xffffe0000000        	// #281474439839744
    fd68:	movk	x0, #0x47ef, lsl #48
    fd6c:	str	x0, [sp, #64]
    fd70:	b.pl	fd8c <lgamma@GLIBC_2.17+0xc54>  // b.nfrst
    fd74:	frintx	d0, d1
    fd78:	fcmp	d0, d1
    fd7c:	b.eq	fd8c <lgamma@GLIBC_2.17+0xc54>  // b.none
    fd80:	mov	x0, #0xffffe0000000        	// #281474439839744
    fd84:	movk	x0, #0xc7ef, lsl #48
    fd88:	str	x0, [sp, #64]
    fd8c:	add	x0, sp, #0x20
    fd90:	bl	ba60 <matherr@plt>
    fd94:	cbz	w0, 1103c <lgamma@GLIBC_2.17+0x1f04>
    fd98:	ldr	d0, [sp, #64]
    fd9c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fda0:	mov	w1, #0x2                   	// #2
    fda4:	str	w1, [sp, #32]
    fda8:	cmp	w0, #0x63
    fdac:	b.le	10924 <lgamma@GLIBC_2.17+0x17ec>
    fdb0:	cmp	w0, #0xc8
    fdb4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fdb8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fdbc:	add	x1, x1, #0x460
    fdc0:	add	x0, x0, #0x458
    fdc4:	csel	x0, x0, x1, lt  // lt = tstop
    fdc8:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fdcc:	str	x0, [sp, #40]
    fdd0:	ldr	x0, [x20, #4000]
    fdd4:	ldr	w0, [x0]
    fdd8:	cbnz	w0, 1067c <lgamma@GLIBC_2.17+0x1544>
    fddc:	mov	x0, #0xffffe0000000        	// #281474439839744
    fde0:	movk	x0, #0xc7ef, lsl #48
    fde4:	str	x0, [sp, #64]
    fde8:	add	x0, sp, #0x20
    fdec:	bl	ba60 <matherr@plt>
    fdf0:	cbz	w0, 1116c <lgamma@GLIBC_2.17+0x2034>
    fdf4:	ldr	d0, [sp, #64]
    fdf8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fdfc:	mov	w1, #0x1                   	// #1
    fe00:	str	w1, [sp, #32]
    fe04:	cmp	w0, #0x63
    fe08:	b.le	108dc <lgamma@GLIBC_2.17+0x17a4>
    fe0c:	cmp	w0, #0xc8
    fe10:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fe14:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fe18:	add	x1, x1, #0x448
    fe1c:	add	x0, x0, #0x440
    fe20:	csel	x0, x0, x1, lt  // lt = tstop
    fe24:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fe28:	str	x0, [sp, #40]
    fe2c:	ldr	x0, [x20, #4000]
    fe30:	ldr	w0, [x0]
    fe34:	cbnz	w0, 106f4 <lgamma@GLIBC_2.17+0x15bc>
    fe38:	mov	x0, #0xffffe0000000        	// #281474439839744
    fe3c:	movk	x0, #0xc7ef, lsl #48
    fe40:	str	x0, [sp, #64]
    fe44:	add	x0, sp, #0x20
    fe48:	bl	ba60 <matherr@plt>
    fe4c:	cbz	w0, 10f80 <lgamma@GLIBC_2.17+0x1e48>
    fe50:	ldr	d0, [sp, #64]
    fe54:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    fe58:	mov	w1, #0x3                   	// #3
    fe5c:	str	w1, [sp, #32]
    fe60:	cmp	w0, #0x63
    fe64:	b.le	10954 <lgamma@GLIBC_2.17+0x181c>
    fe68:	cmp	w0, #0xc8
    fe6c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fe70:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fe74:	add	x1, x1, #0x3a0
    fe78:	add	x0, x0, #0x398
    fe7c:	csel	x0, x0, x1, lt  // lt = tstop
    fe80:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fe84:	str	x0, [sp, #40]
    fe88:	ldr	x0, [x1, #4000]
    fe8c:	ldr	w0, [x0]
    fe90:	cbnz	w0, 106a4 <lgamma@GLIBC_2.17+0x156c>
    fe94:	mov	x0, #0xffffe0000000        	// #281474439839744
    fe98:	movk	x0, #0x47ef, lsl #48
    fe9c:	str	x0, [sp, #64]
    fea0:	add	x0, sp, #0x20
    fea4:	bl	ba60 <matherr@plt>
    fea8:	cbz	w0, 10ef8 <lgamma@GLIBC_2.17+0x1dc0>
    feac:	ldr	d0, [sp, #64]
    feb0:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    feb4:	mov	w1, #0x1                   	// #1
    feb8:	str	w1, [sp, #32]
    febc:	cmp	w0, #0x63
    fec0:	b.le	10930 <lgamma@GLIBC_2.17+0x17f8>
    fec4:	cmp	w0, #0xc8
    fec8:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fecc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    fed0:	add	x1, x1, #0x370
    fed4:	add	x0, x0, #0x368
    fed8:	csel	x0, x0, x1, lt  // lt = tstop
    fedc:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    fee0:	str	x0, [sp, #40]
    fee4:	ldr	x0, [x20, #4000]
    fee8:	ldr	w0, [x0]
    feec:	cbnz	w0, 10690 <lgamma@GLIBC_2.17+0x1558>
    fef0:	mov	x0, #0xffffe0000000        	// #281474439839744
    fef4:	movk	x0, #0x47ef, lsl #48
    fef8:	str	x0, [sp, #64]
    fefc:	add	x0, sp, #0x20
    ff00:	bl	ba60 <matherr@plt>
    ff04:	cbz	w0, 11144 <lgamma@GLIBC_2.17+0x200c>
    ff08:	ldr	d0, [sp, #64]
    ff0c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    ff10:	mov	w1, #0x1                   	// #1
    ff14:	str	w1, [sp, #32]
    ff18:	cmp	w0, #0x63
    ff1c:	b.le	1083c <lgamma@GLIBC_2.17+0x1704>
    ff20:	cmp	w0, #0xc8
    ff24:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    ff28:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    ff2c:	add	x1, x1, #0x358
    ff30:	add	x0, x0, #0x350
    ff34:	csel	x0, x0, x1, lt  // lt = tstop
    ff38:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ff3c:	str	x0, [sp, #40]
    ff40:	ldr	x0, [x20, #4000]
    ff44:	ldr	w0, [x0]
    ff48:	cbnz	w0, 10574 <lgamma@GLIBC_2.17+0x143c>
    ff4c:	mov	x0, #0xffffe0000000        	// #281474439839744
    ff50:	movk	x0, #0x47ef, lsl #48
    ff54:	str	x0, [sp, #64]
    ff58:	add	x0, sp, #0x20
    ff5c:	bl	ba60 <matherr@plt>
    ff60:	cbnz	w0, 10f14 <lgamma@GLIBC_2.17+0x1ddc>
    ff64:	ldr	x20, [x20, #4000]
    ff68:	ldr	w0, [x20]
    ff6c:	cbz	w0, 1154c <lgamma@GLIBC_2.17+0x2414>
    ff70:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ff74:	ldr	x0, [x0, #3976]
    ff78:	mrs	x1, tpidr_el0
    ff7c:	mov	w2, #0x21                  	// #33
    ff80:	ldr	d0, [sp, #64]
    ff84:	str	w2, [x1, x0]
    ff88:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
    ff8c:	mov	w1, #0x3                   	// #3
    ff90:	str	w1, [sp, #32]
    ff94:	cmp	w0, #0x63
    ff98:	b.le	107f4 <lgamma@GLIBC_2.17+0x16bc>
    ff9c:	cmp	w0, #0xc8
    ffa0:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    ffa4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
    ffa8:	add	x1, x1, #0x528
    ffac:	add	x0, x0, #0x530
    ffb0:	csel	x1, x1, x0, lt  // lt = tstop
    ffb4:	fcmpe	d0, #0.0
    ffb8:	adrp	x2, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ffbc:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    ffc0:	mov	x3, #0xfff0000000000000    	// #-4503599627370496
    ffc4:	fmov	d0, x0
    ffc8:	fmov	d1, x3
    ffcc:	ldr	x0, [x2, #4000]
    ffd0:	fcsel	d0, d0, d1, gt
    ffd4:	str	x1, [sp, #40]
    ffd8:	ldr	w0, [x0]
    ffdc:	str	d0, [sp, #64]
    ffe0:	cmp	w0, #0x2
    ffe4:	b.ne	10b1c <lgamma@GLIBC_2.17+0x19e4>  // b.any
    ffe8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
    ffec:	ldr	x0, [x0, #3976]
    fff0:	mrs	x1, tpidr_el0
    fff4:	mov	w2, #0x22                  	// #34
    fff8:	str	w2, [x1, x0]
    fffc:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10000:	mov	w1, #0x3                   	// #3
   10004:	str	w1, [sp, #32]
   10008:	cmp	w0, #0x63
   1000c:	b.le	10900 <lgamma@GLIBC_2.17+0x17c8>
   10010:	cmp	w0, #0xc8
   10014:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10018:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1001c:	add	x1, x1, #0x430
   10020:	add	x0, x0, #0x428
   10024:	csel	x0, x0, x1, lt  // lt = tstop
   10028:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1002c:	str	x0, [sp, #40]
   10030:	ldr	x0, [x1, #4000]
   10034:	ldr	w0, [x0]
   10038:	cbnz	w0, 106cc <lgamma@GLIBC_2.17+0x1594>
   1003c:	mov	x0, #0xffffe0000000        	// #281474439839744
   10040:	movk	x0, #0x47ef, lsl #48
   10044:	str	x0, [sp, #64]
   10048:	add	x0, sp, #0x20
   1004c:	bl	ba60 <matherr@plt>
   10050:	cbz	w0, 1109c <lgamma@GLIBC_2.17+0x1f64>
   10054:	ldr	d0, [sp, #64]
   10058:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   1005c:	mov	w1, #0x1                   	// #1
   10060:	str	w1, [sp, #32]
   10064:	cmp	w0, #0x63
   10068:	b.le	107a0 <lgamma@GLIBC_2.17+0x1668>
   1006c:	cmp	w0, #0xc8
   10070:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10074:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10078:	add	x1, x1, #0x418
   1007c:	add	x0, x0, #0x410
   10080:	csel	x0, x0, x1, lt  // lt = tstop
   10084:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10088:	str	x0, [sp, #40]
   1008c:	ldr	x0, [x20, #4000]
   10090:	ldr	w0, [x0]
   10094:	cbnz	w0, 10748 <lgamma@GLIBC_2.17+0x1610>
   10098:	mov	x0, #0xffffe0000000        	// #281474439839744
   1009c:	movk	x0, #0xc7ef, lsl #48
   100a0:	str	x0, [sp, #64]
   100a4:	add	x0, sp, #0x20
   100a8:	bl	ba60 <matherr@plt>
   100ac:	cbz	w0, 10df0 <lgamma@GLIBC_2.17+0x1cb8>
   100b0:	ldr	d0, [sp, #64]
   100b4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   100b8:	mov	w1, #0x1                   	// #1
   100bc:	str	w1, [sp, #32]
   100c0:	cmp	w0, #0x63
   100c4:	b.le	10a60 <lgamma@GLIBC_2.17+0x1928>
   100c8:	cmp	w0, #0xc8
   100cc:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   100d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   100d4:	add	x1, x1, #0x320
   100d8:	add	x0, x0, #0x470
   100dc:	csel	x0, x0, x1, lt  // lt = tstop
   100e0:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   100e4:	str	x0, [sp, #40]
   100e8:	ldr	x0, [x20, #4000]
   100ec:	ldr	w0, [x0]
   100f0:	cbnz	w0, 1062c <lgamma@GLIBC_2.17+0x14f4>
   100f4:	str	xzr, [sp, #64]
   100f8:	add	x0, sp, #0x20
   100fc:	bl	ba60 <matherr@plt>
   10100:	cbz	w0, 10c9c <lgamma@GLIBC_2.17+0x1b64>
   10104:	ldr	d0, [sp, #64]
   10108:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   1010c:	mov	w1, #0x3                   	// #3
   10110:	str	w1, [sp, #32]
   10114:	cmp	w0, #0x63
   10118:	b.le	108e8 <lgamma@GLIBC_2.17+0x17b0>
   1011c:	cmp	w0, #0xc8
   10120:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10124:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10128:	add	x1, x1, #0x3d0
   1012c:	add	x0, x0, #0x3c8
   10130:	csel	x0, x0, x1, lt  // lt = tstop
   10134:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10138:	str	x0, [sp, #40]
   1013c:	ldr	x0, [x1, #4000]
   10140:	ldr	w0, [x0]
   10144:	cbnz	w0, 10708 <lgamma@GLIBC_2.17+0x15d0>
   10148:	mov	x0, #0xffffe0000000        	// #281474439839744
   1014c:	movk	x0, #0x47ef, lsl #48
   10150:	str	x0, [sp, #64]
   10154:	add	x0, sp, #0x20
   10158:	bl	ba60 <matherr@plt>
   1015c:	cbz	w0, 10f64 <lgamma@GLIBC_2.17+0x1e2c>
   10160:	ldr	d0, [sp, #64]
   10164:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10168:	mov	w1, #0x1                   	// #1
   1016c:	str	w1, [sp, #32]
   10170:	cmp	w0, #0x63
   10174:	b.le	10794 <lgamma@GLIBC_2.17+0x165c>
   10178:	cmp	w0, #0xc8
   1017c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10180:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10184:	add	x1, x1, #0x4b8
   10188:	add	x0, x0, #0x4b0
   1018c:	csel	x0, x0, x1, lt  // lt = tstop
   10190:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10194:	str	x0, [sp, #40]
   10198:	ldr	x0, [x20, #4000]
   1019c:	ldr	w0, [x0]
   101a0:	cbnz	w0, 1071c <lgamma@GLIBC_2.17+0x15e4>
   101a4:	str	d0, [sp, #64]
   101a8:	add	x0, sp, #0x20
   101ac:	bl	ba60 <matherr@plt>
   101b0:	cbz	w0, 10ed0 <lgamma@GLIBC_2.17+0x1d98>
   101b4:	ldr	d0, [sp, #64]
   101b8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   101bc:	mov	w1, #0x1                   	// #1
   101c0:	str	w1, [sp, #32]
   101c4:	cmp	w0, #0x63
   101c8:	b.le	107b8 <lgamma@GLIBC_2.17+0x1680>
   101cc:	cmp	w0, #0xc8
   101d0:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   101d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   101d8:	add	x1, x1, #0x400
   101dc:	add	x0, x0, #0x3f8
   101e0:	csel	x0, x0, x1, lt  // lt = tstop
   101e4:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   101e8:	str	x0, [sp, #40]
   101ec:	ldr	x0, [x20, #4000]
   101f0:	ldr	w0, [x0]
   101f4:	cbnz	w0, 105a8 <lgamma@GLIBC_2.17+0x1470>
   101f8:	mov	x0, #0xffffe0000000        	// #281474439839744
   101fc:	movk	x0, #0xc7ef, lsl #48
   10200:	str	x0, [sp, #64]
   10204:	add	x0, sp, #0x20
   10208:	bl	ba60 <matherr@plt>
   1020c:	cbz	w0, 10ea8 <lgamma@GLIBC_2.17+0x1d70>
   10210:	ldr	d0, [sp, #64]
   10214:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10218:	mov	w1, #0x1                   	// #1
   1021c:	str	w1, [sp, #32]
   10220:	cmp	w0, #0x63
   10224:	b.le	107dc <lgamma@GLIBC_2.17+0x16a4>
   10228:	cmp	w0, #0xc8
   1022c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10230:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10234:	add	x1, x1, #0x460
   10238:	add	x0, x0, #0x458
   1023c:	csel	x0, x0, x1, lt  // lt = tstop
   10240:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10244:	str	x0, [sp, #40]
   10248:	ldr	x0, [x20, #4000]
   1024c:	ldr	w0, [x0]
   10250:	cbnz	w0, 10618 <lgamma@GLIBC_2.17+0x14e0>
   10254:	mov	x0, #0xffffe0000000        	// #281474439839744
   10258:	movk	x0, #0xc7ef, lsl #48
   1025c:	str	x0, [sp, #64]
   10260:	add	x0, sp, #0x20
   10264:	bl	ba60 <matherr@plt>
   10268:	cbz	w0, 10fa8 <lgamma@GLIBC_2.17+0x1e70>
   1026c:	ldr	d0, [sp, #64]
   10270:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10274:	mov	w1, #0x1                   	// #1
   10278:	str	w1, [sp, #32]
   1027c:	stp	d1, d0, [sp, #48]
   10280:	cmp	w0, #0x63
   10284:	b.le	1086c <lgamma@GLIBC_2.17+0x1734>
   10288:	cmp	w0, #0xc8
   1028c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10290:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10294:	add	x1, x1, #0x388
   10298:	add	x0, x0, #0x380
   1029c:	csel	x0, x0, x1, lt  // lt = tstop
   102a0:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   102a4:	str	x0, [sp, #40]
   102a8:	ldr	x20, [x20, #4000]
   102ac:	ldr	w0, [x20]
   102b0:	cbnz	w0, 11664 <lgamma@GLIBC_2.17+0x252c>
   102b4:	mov	x0, #0xffffe0000000        	// #281474439839744
   102b8:	movk	x0, #0x47ef, lsl #48
   102bc:	fmov	d0, x0
   102c0:	add	x0, sp, #0x20
   102c4:	str	d0, [sp, #64]
   102c8:	bl	ba60 <matherr@plt>
   102cc:	cbz	w0, 10848 <lgamma@GLIBC_2.17+0x1710>
   102d0:	ldr	d0, [sp, #64]
   102d4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   102d8:	mov	w1, #0x1                   	// #1
   102dc:	str	w1, [sp, #32]
   102e0:	cmp	w0, #0x63
   102e4:	b.le	107d0 <lgamma@GLIBC_2.17+0x1698>
   102e8:	cmp	w0, #0xc8
   102ec:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   102f0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   102f4:	add	x1, x1, #0x4a0
   102f8:	add	x0, x0, #0x498
   102fc:	csel	x0, x0, x1, lt  // lt = tstop
   10300:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10304:	str	x0, [sp, #40]
   10308:	ldr	x0, [x20, #4000]
   1030c:	ldr	w0, [x0]
   10310:	cbnz	w0, 105ec <lgamma@GLIBC_2.17+0x14b4>
   10314:	str	xzr, [sp, #64]
   10318:	add	x0, sp, #0x20
   1031c:	bl	ba60 <matherr@plt>
   10320:	cbz	w0, 10fec <lgamma@GLIBC_2.17+0x1eb4>
   10324:	ldr	d0, [sp, #64]
   10328:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   1032c:	mov	w1, #0x1                   	// #1
   10330:	str	w1, [sp, #32]
   10334:	cmp	w0, #0x63
   10338:	b.le	107c4 <lgamma@GLIBC_2.17+0x168c>
   1033c:	cmp	w0, #0xc8
   10340:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10344:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10348:	add	x1, x1, #0x3e8
   1034c:	add	x0, x0, #0x3e0
   10350:	csel	x0, x0, x1, lt  // lt = tstop
   10354:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10358:	str	x0, [sp, #40]
   1035c:	ldr	x0, [x20, #4000]
   10360:	ldr	w0, [x0]
   10364:	cbnz	w0, 105d8 <lgamma@GLIBC_2.17+0x14a0>
   10368:	mov	x0, #0xffffe0000000        	// #281474439839744
   1036c:	movk	x0, #0xc7ef, lsl #48
   10370:	str	x0, [sp, #64]
   10374:	add	x0, sp, #0x20
   10378:	bl	ba60 <matherr@plt>
   1037c:	cbz	w0, 11014 <lgamma@GLIBC_2.17+0x1edc>
   10380:	ldr	d0, [sp, #64]
   10384:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10388:	mov	w1, #0x4                   	// #4
   1038c:	str	w1, [sp, #32]
   10390:	cmp	w0, #0x63
   10394:	b.le	107ac <lgamma@GLIBC_2.17+0x1674>
   10398:	cmp	w0, #0xc8
   1039c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   103a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   103a4:	add	x1, x1, #0x320
   103a8:	add	x0, x0, #0x470
   103ac:	csel	x0, x0, x1, lt  // lt = tstop
   103b0:	fcmpe	d0, #0.0
   103b4:	str	x0, [sp, #40]
   103b8:	str	xzr, [sp, #64]
   103bc:	b.pl	103dc <lgamma@GLIBC_2.17+0x12a4>  // b.nfrst
   103c0:	fmov	d0, #5.000000000000000000e-01
   103c4:	fmul	d1, d1, d0
   103c8:	frintx	d0, d1
   103cc:	fcmp	d0, d1
   103d0:	b.eq	103dc <lgamma@GLIBC_2.17+0x12a4>  // b.none
   103d4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   103d8:	str	x0, [sp, #64]
   103dc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   103e0:	ldr	x0, [x0, #4000]
   103e4:	ldr	w0, [x0]
   103e8:	cmp	w0, #0x2
   103ec:	b.ne	10af4 <lgamma@GLIBC_2.17+0x19bc>  // b.any
   103f0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   103f4:	ldr	x0, [x0, #3976]
   103f8:	mrs	x1, tpidr_el0
   103fc:	mov	w2, #0x22                  	// #34
   10400:	ldr	d0, [sp, #64]
   10404:	str	w2, [x1, x0]
   10408:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   1040c:	mov	w1, #0x3                   	// #3
   10410:	str	w1, [sp, #32]
   10414:	cmp	w0, #0x63
   10418:	b.le	109bc <lgamma@GLIBC_2.17+0x1884>
   1041c:	cmp	w0, #0xc8
   10420:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10424:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10428:	add	x1, x1, #0x3b8
   1042c:	add	x0, x0, #0x3b0
   10430:	csel	x0, x0, x1, lt  // lt = tstop
   10434:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10438:	str	x0, [sp, #40]
   1043c:	ldr	x0, [x1, #4000]
   10440:	ldr	w0, [x0]
   10444:	cbnz	w0, 104fc <lgamma@GLIBC_2.17+0x13c4>
   10448:	mov	x0, #0xffffe0000000        	// #281474439839744
   1044c:	movk	x0, #0x47ef, lsl #48
   10450:	str	x0, [sp, #64]
   10454:	add	x0, sp, #0x20
   10458:	bl	ba60 <matherr@plt>
   1045c:	cbz	w0, 10d54 <lgamma@GLIBC_2.17+0x1c1c>
   10460:	ldr	d0, [sp, #64]
   10464:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10468:	cmp	w0, #0xc8
   1046c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10470:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10474:	add	x1, x1, #0x590
   10478:	add	x0, x0, #0x588
   1047c:	csel	x0, x0, x1, lt  // lt = tstop
   10480:	b	f260 <lgamma@GLIBC_2.17+0x128>
   10484:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10488:	ldr	x0, [x0, #3976]
   1048c:	mrs	x1, tpidr_el0
   10490:	mov	w2, #0x22                  	// #34
   10494:	movi	d0, #0x0
   10498:	str	w2, [x1, x0]
   1049c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   104a0:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   104a4:	str	x1, [sp, #64]
   104a8:	cmp	w0, #0x2
   104ac:	b.ne	f308 <lgamma@GLIBC_2.17+0x1d0>  // b.any
   104b0:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   104b4:	ldr	x1, [x1, #3976]
   104b8:	mrs	x2, tpidr_el0
   104bc:	mov	w3, #0x21                  	// #33
   104c0:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   104c4:	fmov	d0, x0
   104c8:	str	w3, [x2, x1]
   104cc:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   104d0:	movi	d0, #0x0
   104d4:	cmp	w0, #0x2
   104d8:	fdiv	d0, d0, d0
   104dc:	str	d0, [sp, #64]
   104e0:	b.ne	fa74 <lgamma@GLIBC_2.17+0x93c>  // b.any
   104e4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   104e8:	ldr	x0, [x0, #3976]
   104ec:	mrs	x1, tpidr_el0
   104f0:	mov	w2, #0x21                  	// #33
   104f4:	str	w2, [x1, x0]
   104f8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   104fc:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   10500:	str	x1, [sp, #64]
   10504:	cmp	w0, #0x2
   10508:	b.ne	10454 <lgamma@GLIBC_2.17+0x131c>  // b.any
   1050c:	nop
   10510:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10514:	ldr	x1, [x1, #3976]
   10518:	mrs	x2, tpidr_el0
   1051c:	mov	w3, #0x22                  	// #34
   10520:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   10524:	fmov	d0, x0
   10528:	str	w3, [x2, x1]
   1052c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10530:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   10534:	str	x1, [sp, #64]
   10538:	cmp	w0, #0x2
   1053c:	b.ne	f540 <lgamma@GLIBC_2.17+0x408>  // b.any
   10540:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10544:	ldr	x1, [x1, #3976]
   10548:	mrs	x2, tpidr_el0
   1054c:	mov	w3, #0x22                  	// #34
   10550:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   10554:	fmov	d0, x0
   10558:	str	w3, [x2, x1]
   1055c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10560:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   10564:	str	x1, [sp, #64]
   10568:	cmp	w0, #0x2
   1056c:	b.eq	10540 <lgamma@GLIBC_2.17+0x1408>  // b.none
   10570:	b	f6a4 <lgamma@GLIBC_2.17+0x56c>
   10574:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   10578:	str	x1, [sp, #64]
   1057c:	cmp	w0, #0x2
   10580:	b.ne	ff58 <lgamma@GLIBC_2.17+0xe20>  // b.any
   10584:	nop
   10588:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1058c:	ldr	x1, [x1, #3976]
   10590:	mrs	x2, tpidr_el0
   10594:	mov	w3, #0x21                  	// #33
   10598:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   1059c:	fmov	d0, x0
   105a0:	str	w3, [x2, x1]
   105a4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   105a8:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
   105ac:	str	x1, [sp, #64]
   105b0:	cmp	w0, #0x2
   105b4:	b.ne	10204 <lgamma@GLIBC_2.17+0x10cc>  // b.any
   105b8:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   105bc:	ldr	x1, [x1, #3976]
   105c0:	mrs	x2, tpidr_el0
   105c4:	mov	w3, #0x22                  	// #34
   105c8:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
   105cc:	fmov	d0, x0
   105d0:	str	w3, [x2, x1]
   105d4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   105d8:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   105dc:	str	x1, [sp, #64]
   105e0:	cmp	w0, #0x2
   105e4:	b.eq	10588 <lgamma@GLIBC_2.17+0x1450>  // b.none
   105e8:	b	10374 <lgamma@GLIBC_2.17+0x123c>
   105ec:	movi	d0, #0x0
   105f0:	cmp	w0, #0x2
   105f4:	fdiv	d0, d0, d0
   105f8:	str	d0, [sp, #64]
   105fc:	b.ne	10318 <lgamma@GLIBC_2.17+0x11e0>  // b.any
   10600:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10604:	ldr	x0, [x0, #3976]
   10608:	mrs	x1, tpidr_el0
   1060c:	mov	w2, #0x21                  	// #33
   10610:	str	w2, [x1, x0]
   10614:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10618:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   1061c:	str	x1, [sp, #64]
   10620:	cmp	w0, #0x2
   10624:	b.eq	10588 <lgamma@GLIBC_2.17+0x1450>  // b.none
   10628:	b	10260 <lgamma@GLIBC_2.17+0x1128>
   1062c:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
   10630:	str	x1, [sp, #64]
   10634:	cmp	w0, #0x2
   10638:	b.eq	105b8 <lgamma@GLIBC_2.17+0x1480>  // b.none
   1063c:	b	100f8 <lgamma@GLIBC_2.17+0xfc0>
   10640:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
   10644:	str	x1, [sp, #64]
   10648:	cmp	w0, #0x2
   1064c:	b.eq	105b8 <lgamma@GLIBC_2.17+0x1480>  // b.none
   10650:	b	f8f8 <lgamma@GLIBC_2.17+0x7c0>
   10654:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   10658:	str	x1, [sp, #64]
   1065c:	cmp	w0, #0x2
   10660:	b.eq	10510 <lgamma@GLIBC_2.17+0x13d8>  // b.none
   10664:	b	f954 <lgamma@GLIBC_2.17+0x81c>
   10668:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
   1066c:	str	x1, [sp, #64]
   10670:	cmp	w0, #0x2
   10674:	b.eq	105b8 <lgamma@GLIBC_2.17+0x1480>  // b.none
   10678:	b	fb28 <lgamma@GLIBC_2.17+0x9f0>
   1067c:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
   10680:	str	x1, [sp, #64]
   10684:	cmp	w0, #0x2
   10688:	b.eq	105b8 <lgamma@GLIBC_2.17+0x1480>  // b.none
   1068c:	b	fde8 <lgamma@GLIBC_2.17+0xcb0>
   10690:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   10694:	str	x1, [sp, #64]
   10698:	cmp	w0, #0x2
   1069c:	b.eq	10588 <lgamma@GLIBC_2.17+0x1450>  // b.none
   106a0:	b	fefc <lgamma@GLIBC_2.17+0xdc4>
   106a4:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   106a8:	str	x1, [sp, #64]
   106ac:	cmp	w0, #0x2
   106b0:	b.eq	10510 <lgamma@GLIBC_2.17+0x13d8>  // b.none
   106b4:	b	fea0 <lgamma@GLIBC_2.17+0xd68>
   106b8:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   106bc:	str	x1, [sp, #64]
   106c0:	cmp	w0, #0x2
   106c4:	b.eq	10510 <lgamma@GLIBC_2.17+0x13d8>  // b.none
   106c8:	b	f6f8 <lgamma@GLIBC_2.17+0x5c0>
   106cc:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   106d0:	str	x1, [sp, #64]
   106d4:	cmp	w0, #0x2
   106d8:	b.eq	10510 <lgamma@GLIBC_2.17+0x13d8>  // b.none
   106dc:	b	10048 <lgamma@GLIBC_2.17+0xf10>
   106e0:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   106e4:	str	x1, [sp, #64]
   106e8:	cmp	w0, #0x2
   106ec:	b.eq	10588 <lgamma@GLIBC_2.17+0x1450>  // b.none
   106f0:	b	fd08 <lgamma@GLIBC_2.17+0xbd0>
   106f4:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   106f8:	str	x1, [sp, #64]
   106fc:	cmp	w0, #0x2
   10700:	b.eq	10588 <lgamma@GLIBC_2.17+0x1450>  // b.none
   10704:	b	fe44 <lgamma@GLIBC_2.17+0xd0c>
   10708:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   1070c:	str	x1, [sp, #64]
   10710:	cmp	w0, #0x2
   10714:	b.eq	10510 <lgamma@GLIBC_2.17+0x13d8>  // b.none
   10718:	b	10154 <lgamma@GLIBC_2.17+0x101c>
   1071c:	movi	d0, #0x0
   10720:	cmp	w0, #0x2
   10724:	fdiv	d0, d0, d0
   10728:	str	d0, [sp, #64]
   1072c:	b.ne	101a8 <lgamma@GLIBC_2.17+0x1070>  // b.any
   10730:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10734:	ldr	x0, [x0, #3976]
   10738:	mrs	x1, tpidr_el0
   1073c:	mov	w2, #0x21                  	// #33
   10740:	str	w2, [x1, x0]
   10744:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10748:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   1074c:	str	x1, [sp, #64]
   10750:	cmp	w0, #0x2
   10754:	b.eq	10588 <lgamma@GLIBC_2.17+0x1450>  // b.none
   10758:	b	100a4 <lgamma@GLIBC_2.17+0xf6c>
   1075c:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
   10760:	str	x0, [sp, #64]
   10764:	cmp	w1, #0x2
   10768:	fmov	d0, x0
   1076c:	b.ne	f380 <lgamma@GLIBC_2.17+0x248>  // b.any
   10770:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10774:	ldr	x0, [x0, #3976]
   10778:	mrs	x1, tpidr_el0
   1077c:	mov	w2, #0x22                  	// #34
   10780:	str	w2, [x1, x0]
   10784:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10788:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1078c:	add	x0, x0, #0x5c8
   10790:	b	f360 <lgamma@GLIBC_2.17+0x228>
   10794:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10798:	add	x0, x0, #0x4a8
   1079c:	b	10190 <lgamma@GLIBC_2.17+0x1058>
   107a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   107a4:	add	x0, x0, #0x408
   107a8:	b	10084 <lgamma@GLIBC_2.17+0xf4c>
   107ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   107b0:	add	x0, x0, #0x468
   107b4:	b	103b0 <lgamma@GLIBC_2.17+0x1278>
   107b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   107bc:	add	x0, x0, #0x3f0
   107c0:	b	101e4 <lgamma@GLIBC_2.17+0x10ac>
   107c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   107c8:	add	x0, x0, #0x3d8
   107cc:	b	10354 <lgamma@GLIBC_2.17+0x121c>
   107d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   107d4:	add	x0, x0, #0x490
   107d8:	b	10300 <lgamma@GLIBC_2.17+0x11c8>
   107dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   107e0:	add	x0, x0, #0x450
   107e4:	b	10240 <lgamma@GLIBC_2.17+0x1108>
   107e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   107ec:	add	x0, x0, #0x580
   107f0:	b	f868 <lgamma@GLIBC_2.17+0x730>
   107f4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   107f8:	add	x1, x1, #0x520
   107fc:	b	ffb4 <lgamma@GLIBC_2.17+0xe7c>
   10800:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10804:	add	x0, x0, #0x468
   10808:	b	fa5c <lgamma@GLIBC_2.17+0x924>
   1080c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10810:	add	x0, x0, #0x5c8
   10814:	b	f2e8 <lgamma@GLIBC_2.17+0x1b0>
   10818:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1081c:	add	x0, x0, #0x568
   10820:	b	f4c8 <lgamma@GLIBC_2.17+0x390>
   10824:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10828:	add	x0, x0, #0x550
   1082c:	b	f62c <lgamma@GLIBC_2.17+0x4f4>
   10830:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10834:	add	x0, x0, #0x598
   10838:	b	f684 <lgamma@GLIBC_2.17+0x54c>
   1083c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10840:	add	x0, x0, #0x348
   10844:	b	ff38 <lgamma@GLIBC_2.17+0xe00>
   10848:	ldr	w0, [x20]
   1084c:	cbz	w0, 111b4 <lgamma@GLIBC_2.17+0x207c>
   10850:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10854:	ldr	x0, [x0, #3976]
   10858:	mrs	x1, tpidr_el0
   1085c:	mov	w2, #0x21                  	// #33
   10860:	ldr	d0, [sp, #64]
   10864:	str	w2, [x1, x0]
   10868:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   1086c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10870:	add	x0, x0, #0x378
   10874:	b	102a0 <lgamma@GLIBC_2.17+0x1168>
   10878:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1087c:	add	x0, x0, #0x420
   10880:	b	f934 <lgamma@GLIBC_2.17+0x7fc>
   10884:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10888:	add	x0, x0, #0x3d8
   1088c:	b	fb08 <lgamma@GLIBC_2.17+0x9d0>
   10890:	fcmpe	d0, #0.0
   10894:	b.mi	11194 <lgamma@GLIBC_2.17+0x205c>  // b.first
   10898:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
   1089c:	fmov	d0, x0
   108a0:	str	d0, [sp, #64]
   108a4:	cmp	w1, #0x2
   108a8:	b.ne	fcac <lgamma@GLIBC_2.17+0xb74>  // b.any
   108ac:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   108b0:	ldr	x0, [x0, #3976]
   108b4:	mrs	x1, tpidr_el0
   108b8:	mov	w2, #0x22                  	// #34
   108bc:	str	w2, [x1, x0]
   108c0:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   108c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   108c8:	add	x0, x0, #0x408
   108cc:	b	fc8c <lgamma@GLIBC_2.17+0xb54>
   108d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   108d4:	add	x0, x0, #0x4f0
   108d8:	b	fbc4 <lgamma@GLIBC_2.17+0xa8c>
   108dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   108e0:	add	x0, x0, #0x438
   108e4:	b	fe24 <lgamma@GLIBC_2.17+0xcec>
   108e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   108ec:	add	x0, x0, #0x3c0
   108f0:	b	10134 <lgamma@GLIBC_2.17+0xffc>
   108f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   108f8:	add	x0, x0, #0x3d8
   108fc:	b	f990 <lgamma@GLIBC_2.17+0x858>
   10900:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10904:	add	x0, x0, #0x420
   10908:	b	10028 <lgamma@GLIBC_2.17+0xef0>
   1090c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10910:	add	x0, x0, #0x3f0
   10914:	b	fce8 <lgamma@GLIBC_2.17+0xbb0>
   10918:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1091c:	add	x0, x0, #0x4c0
   10920:	b	fc28 <lgamma@GLIBC_2.17+0xaf0>
   10924:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10928:	add	x0, x0, #0x450
   1092c:	b	fdc8 <lgamma@GLIBC_2.17+0xc90>
   10930:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10934:	add	x0, x0, #0x360
   10938:	b	fedc <lgamma@GLIBC_2.17+0xda4>
   1093c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10940:	add	x0, x0, #0x538
   10944:	b	fab0 <lgamma@GLIBC_2.17+0x978>
   10948:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1094c:	add	x0, x0, #0x3c0
   10950:	b	fb64 <lgamma@GLIBC_2.17+0xa2c>
   10954:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10958:	add	x0, x0, #0x390
   1095c:	b	fe80 <lgamma@GLIBC_2.17+0xd48>
   10960:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10964:	add	x0, x0, #0x468
   10968:	b	f6e0 <lgamma@GLIBC_2.17+0x5a8>
   1096c:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   10970:	str	x1, [sp, #64]
   10974:	b.pl	1098c <lgamma@GLIBC_2.17+0x1854>  // b.nfrst
   10978:	frintx	d0, d1
   1097c:	fcmp	d0, d1
   10980:	b.eq	1098c <lgamma@GLIBC_2.17+0x1854>  // b.none
   10984:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
   10988:	str	x1, [sp, #64]
   1098c:	cmp	w0, #0x2
   10990:	b.ne	fd8c <lgamma@GLIBC_2.17+0xc54>  // b.any
   10994:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10998:	ldr	x0, [x0, #3976]
   1099c:	mrs	x1, tpidr_el0
   109a0:	mov	w2, #0x22                  	// #34
   109a4:	ldr	d0, [sp, #64]
   109a8:	str	w2, [x1, x0]
   109ac:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   109b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   109b4:	add	x0, x0, #0x468
   109b8:	b	fd44 <lgamma@GLIBC_2.17+0xc0c>
   109bc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   109c0:	add	x0, x0, #0x3a8
   109c4:	b	10434 <lgamma@GLIBC_2.17+0x12fc>
   109c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   109cc:	add	x0, x0, #0x5b0
   109d0:	b	f520 <lgamma@GLIBC_2.17+0x3e8>
   109d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   109d8:	add	x0, x0, #0x508
   109dc:	b	f804 <lgamma@GLIBC_2.17+0x6cc>
   109e0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   109e4:	add	x0, x0, #0x5b0
   109e8:	b	f3bc <lgamma@GLIBC_2.17+0x284>
   109ec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   109f0:	add	x0, x0, #0x580
   109f4:	b	f414 <lgamma@GLIBC_2.17+0x2dc>
   109f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   109fc:	add	x0, x0, #0x408
   10a00:	b	f470 <lgamma@GLIBC_2.17+0x338>
   10a04:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   10a08:	mov	x2, #0xfff0000000000000    	// #-4503599627370496
   10a0c:	fmov	d0, x0
   10a10:	fmov	d1, x2
   10a14:	fcsel	d0, d0, d1, gt
   10a18:	cmp	w1, #0x2
   10a1c:	str	d0, [sp, #64]
   10a20:	b.ne	fa20 <lgamma@GLIBC_2.17+0x8e8>  // b.any
   10a24:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10a28:	ldr	x0, [x0, #3976]
   10a2c:	mrs	x1, tpidr_el0
   10a30:	mov	w2, #0x22                  	// #34
   10a34:	str	w2, [x1, x0]
   10a38:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10a3c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10a40:	add	x0, x0, #0x478
   10a44:	b	f9e8 <lgamma@GLIBC_2.17+0x8b0>
   10a48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10a4c:	add	x0, x0, #0x508
   10a50:	b	f7a0 <lgamma@GLIBC_2.17+0x668>
   10a54:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10a58:	add	x0, x0, #0x598
   10a5c:	b	f57c <lgamma@GLIBC_2.17+0x444>
   10a60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10a64:	add	x0, x0, #0x468
   10a68:	b	100e0 <lgamma@GLIBC_2.17+0xfa8>
   10a6c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10a70:	add	x0, x0, #0x438
   10a74:	b	f8d8 <lgamma@GLIBC_2.17+0x7a0>
   10a78:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10a7c:	add	x0, x0, #0x3f0
   10a80:	b	f5d4 <lgamma@GLIBC_2.17+0x49c>
   10a84:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   10a88:	add	x0, x0, #0x520
   10a8c:	b	f734 <lgamma@GLIBC_2.17+0x5fc>
   10a90:	add	x0, sp, #0x20
   10a94:	bl	ba60 <matherr@plt>
   10a98:	cbz	w0, 10d94 <lgamma@GLIBC_2.17+0x1c5c>
   10a9c:	ldr	d0, [sp, #64]
   10aa0:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10aa4:	add	x0, sp, #0x20
   10aa8:	bl	ba60 <matherr@plt>
   10aac:	cbz	w0, 10c80 <lgamma@GLIBC_2.17+0x1b48>
   10ab0:	ldr	d0, [sp, #64]
   10ab4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10ab8:	add	x0, sp, #0x20
   10abc:	bl	ba60 <matherr@plt>
   10ac0:	cbz	w0, 10dcc <lgamma@GLIBC_2.17+0x1c94>
   10ac4:	ldr	d0, [sp, #64]
   10ac8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10acc:	add	x0, sp, #0x20
   10ad0:	bl	ba60 <matherr@plt>
   10ad4:	cbz	w0, 10d0c <lgamma@GLIBC_2.17+0x1bd4>
   10ad8:	ldr	d0, [sp, #64]
   10adc:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10ae0:	add	x0, sp, #0x20
   10ae4:	bl	ba60 <matherr@plt>
   10ae8:	cbz	w0, 10cc4 <lgamma@GLIBC_2.17+0x1b8c>
   10aec:	ldr	d0, [sp, #64]
   10af0:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10af4:	add	x0, sp, #0x20
   10af8:	bl	ba60 <matherr@plt>
   10afc:	cbz	w0, 110dc <lgamma@GLIBC_2.17+0x1fa4>
   10b00:	ldr	d0, [sp, #64]
   10b04:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10b08:	add	x0, sp, #0x20
   10b0c:	bl	ba60 <matherr@plt>
   10b10:	cbz	w0, 10f40 <lgamma@GLIBC_2.17+0x1e08>
   10b14:	ldr	d0, [sp, #64]
   10b18:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10b1c:	add	x0, sp, #0x20
   10b20:	bl	ba60 <matherr@plt>
   10b24:	cbz	w0, 11058 <lgamma@GLIBC_2.17+0x1f20>
   10b28:	ldr	d0, [sp, #64]
   10b2c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10b30:	add	x0, sp, #0x20
   10b34:	bl	ba60 <matherr@plt>
   10b38:	cbz	w0, 110f8 <lgamma@GLIBC_2.17+0x1fc0>
   10b3c:	ldr	d0, [sp, #64]
   10b40:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10b44:	add	x0, sp, #0x20
   10b48:	bl	ba60 <matherr@plt>
   10b4c:	cbz	w0, 10b7c <lgamma@GLIBC_2.17+0x1a44>
   10b50:	ldr	d0, [sp, #64]
   10b54:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10b58:	ldr	w0, [x20]
   10b5c:	cbz	w0, 113e8 <lgamma@GLIBC_2.17+0x22b0>
   10b60:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10b64:	ldr	x0, [x0, #3976]
   10b68:	mrs	x1, tpidr_el0
   10b6c:	mov	w2, #0x22                  	// #34
   10b70:	ldr	d0, [sp, #64]
   10b74:	str	w2, [x1, x0]
   10b78:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10b7c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10b80:	ldr	x0, [x0, #3976]
   10b84:	mrs	x1, tpidr_el0
   10b88:	mov	w2, #0x22                  	// #34
   10b8c:	ldr	d0, [sp, #64]
   10b90:	str	w2, [x1, x0]
   10b94:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10b98:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10b9c:	ldr	x0, [x0, #3976]
   10ba0:	mrs	x1, tpidr_el0
   10ba4:	mov	w2, #0x22                  	// #34
   10ba8:	ldr	d0, [sp, #64]
   10bac:	str	w2, [x1, x0]
   10bb0:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10bb4:	ldr	x20, [x20, #4000]
   10bb8:	ldr	w0, [x20]
   10bbc:	cbz	w0, 114b4 <lgamma@GLIBC_2.17+0x237c>
   10bc0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10bc4:	ldr	x0, [x0, #3976]
   10bc8:	mrs	x1, tpidr_el0
   10bcc:	mov	w2, #0x21                  	// #33
   10bd0:	ldr	d0, [sp, #64]
   10bd4:	str	w2, [x1, x0]
   10bd8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10bdc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10be0:	ldr	x0, [x0, #3976]
   10be4:	mrs	x1, tpidr_el0
   10be8:	mov	w2, #0x21                  	// #33
   10bec:	ldr	d0, [sp, #64]
   10bf0:	str	w2, [x1, x0]
   10bf4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10bf8:	ldr	x20, [x20, #4000]
   10bfc:	ldr	w0, [x20]
   10c00:	cbz	w0, 11418 <lgamma@GLIBC_2.17+0x22e0>
   10c04:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10c08:	ldr	x0, [x0, #3976]
   10c0c:	mrs	x1, tpidr_el0
   10c10:	mov	w2, #0x21                  	// #33
   10c14:	ldr	d0, [sp, #64]
   10c18:	str	w2, [x1, x0]
   10c1c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10c20:	ldr	x20, [x20, #4000]
   10c24:	ldr	w0, [x20]
   10c28:	cbz	w0, 11570 <lgamma@GLIBC_2.17+0x2438>
   10c2c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10c30:	ldr	x0, [x0, #3976]
   10c34:	mrs	x1, tpidr_el0
   10c38:	mov	w2, #0x21                  	// #33
   10c3c:	ldr	d0, [sp, #64]
   10c40:	str	w2, [x1, x0]
   10c44:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10c48:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10c4c:	ldr	x0, [x0, #3976]
   10c50:	mrs	x1, tpidr_el0
   10c54:	mov	w2, #0x22                  	// #34
   10c58:	ldr	d0, [sp, #64]
   10c5c:	str	w2, [x1, x0]
   10c60:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10c64:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10c68:	ldr	x0, [x0, #3976]
   10c6c:	mrs	x1, tpidr_el0
   10c70:	mov	w2, #0x22                  	// #34
   10c74:	ldr	d0, [sp, #64]
   10c78:	str	w2, [x1, x0]
   10c7c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10c80:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10c84:	ldr	x0, [x0, #3976]
   10c88:	mrs	x1, tpidr_el0
   10c8c:	mov	w2, #0x22                  	// #34
   10c90:	ldr	d0, [sp, #64]
   10c94:	str	w2, [x1, x0]
   10c98:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10c9c:	ldr	x20, [x20, #4000]
   10ca0:	ldr	w0, [x20]
   10ca4:	cbz	w0, 11490 <lgamma@GLIBC_2.17+0x2358>
   10ca8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10cac:	ldr	x0, [x0, #3976]
   10cb0:	mrs	x1, tpidr_el0
   10cb4:	mov	w2, #0x21                  	// #33
   10cb8:	ldr	d0, [sp, #64]
   10cbc:	str	w2, [x1, x0]
   10cc0:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10cc4:	ldr	w0, [x20]
   10cc8:	cbz	w0, 1143c <lgamma@GLIBC_2.17+0x2304>
   10ccc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10cd0:	ldr	x0, [x0, #3976]
   10cd4:	mrs	x1, tpidr_el0
   10cd8:	mov	w2, #0x21                  	// #33
   10cdc:	ldr	d0, [sp, #64]
   10ce0:	str	w2, [x1, x0]
   10ce4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10ce8:	ldr	w0, [x20]
   10cec:	cbz	w0, 11460 <lgamma@GLIBC_2.17+0x2328>
   10cf0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10cf4:	ldr	x0, [x0, #3976]
   10cf8:	mrs	x1, tpidr_el0
   10cfc:	mov	w2, #0x22                  	// #34
   10d00:	ldr	d0, [sp, #64]
   10d04:	str	w2, [x1, x0]
   10d08:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10d0c:	ldr	w0, [x20]
   10d10:	cbz	w0, 114d8 <lgamma@GLIBC_2.17+0x23a0>
   10d14:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10d18:	ldr	x0, [x0, #3976]
   10d1c:	mrs	x1, tpidr_el0
   10d20:	mov	w2, #0x22                  	// #34
   10d24:	ldr	d0, [sp, #64]
   10d28:	str	w2, [x1, x0]
   10d2c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10d30:	ldr	w0, [x20]
   10d34:	cbz	w0, 11594 <lgamma@GLIBC_2.17+0x245c>
   10d38:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10d3c:	ldr	x0, [x0, #3976]
   10d40:	mrs	x1, tpidr_el0
   10d44:	mov	w2, #0x22                  	// #34
   10d48:	ldr	d0, [sp, #64]
   10d4c:	str	w2, [x1, x0]
   10d50:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10d54:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10d58:	ldr	x0, [x0, #3976]
   10d5c:	mrs	x1, tpidr_el0
   10d60:	mov	w2, #0x22                  	// #34
   10d64:	ldr	d0, [sp, #64]
   10d68:	str	w2, [x1, x0]
   10d6c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10d70:	ldr	w0, [x20]
   10d74:	cbz	w0, 114fc <lgamma@GLIBC_2.17+0x23c4>
   10d78:	ldr	d0, [sp, #64]
   10d7c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10d80:	ldr	x0, [x0, #3976]
   10d84:	mrs	x1, tpidr_el0
   10d88:	mov	w2, #0x21                  	// #33
   10d8c:	str	w2, [x1, x0]
   10d90:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10d94:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10d98:	ldr	x0, [x0, #3976]
   10d9c:	mrs	x1, tpidr_el0
   10da0:	mov	w2, #0x22                  	// #34
   10da4:	ldr	d0, [sp, #64]
   10da8:	str	w2, [x1, x0]
   10dac:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10db0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10db4:	ldr	x0, [x0, #3976]
   10db8:	mrs	x1, tpidr_el0
   10dbc:	mov	w2, #0x22                  	// #34
   10dc0:	ldr	d0, [sp, #64]
   10dc4:	str	w2, [x1, x0]
   10dc8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10dcc:	ldr	w0, [x20]
   10dd0:	cbz	w0, 11618 <lgamma@GLIBC_2.17+0x24e0>
   10dd4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10dd8:	ldr	x0, [x0, #3976]
   10ddc:	mrs	x1, tpidr_el0
   10de0:	mov	w2, #0x21                  	// #33
   10de4:	ldr	d0, [sp, #64]
   10de8:	str	w2, [x1, x0]
   10dec:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10df0:	ldr	x20, [x20, #4000]
   10df4:	ldr	w0, [x20]
   10df8:	cbz	w0, 11358 <lgamma@GLIBC_2.17+0x2220>
   10dfc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10e00:	ldr	x0, [x0, #3976]
   10e04:	mrs	x1, tpidr_el0
   10e08:	mov	w2, #0x21                  	// #33
   10e0c:	ldr	d0, [sp, #64]
   10e10:	str	w2, [x1, x0]
   10e14:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10e18:	ldr	x20, [x20, #4000]
   10e1c:	ldr	w0, [x20]
   10e20:	cbz	w0, 111fc <lgamma@GLIBC_2.17+0x20c4>
   10e24:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10e28:	ldr	x0, [x0, #3976]
   10e2c:	mrs	x1, tpidr_el0
   10e30:	mov	w2, #0x21                  	// #33
   10e34:	ldr	d0, [sp, #64]
   10e38:	str	w2, [x1, x0]
   10e3c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10e40:	ldr	w0, [x20]
   10e44:	cbz	w0, 112b0 <lgamma@GLIBC_2.17+0x2178>
   10e48:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10e4c:	ldr	x0, [x0, #3976]
   10e50:	mrs	x1, tpidr_el0
   10e54:	mov	w2, #0x22                  	// #34
   10e58:	ldr	d0, [sp, #64]
   10e5c:	str	w2, [x1, x0]
   10e60:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10e64:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10e68:	ldr	x0, [x0, #3976]
   10e6c:	mrs	x1, tpidr_el0
   10e70:	mov	w2, #0x22                  	// #34
   10e74:	ldr	d0, [sp, #64]
   10e78:	str	w2, [x1, x0]
   10e7c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10e80:	ldr	x20, [x20, #4000]
   10e84:	ldr	w0, [x20]
   10e88:	cbz	w0, 11528 <lgamma@GLIBC_2.17+0x23f0>
   10e8c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10e90:	ldr	x0, [x0, #3976]
   10e94:	mrs	x1, tpidr_el0
   10e98:	mov	w2, #0x21                  	// #33
   10e9c:	ldr	d0, [sp, #64]
   10ea0:	str	w2, [x1, x0]
   10ea4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10ea8:	ldr	x20, [x20, #4000]
   10eac:	ldr	w0, [x20]
   10eb0:	cbz	w0, 11268 <lgamma@GLIBC_2.17+0x2130>
   10eb4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10eb8:	ldr	x0, [x0, #3976]
   10ebc:	mrs	x1, tpidr_el0
   10ec0:	mov	w2, #0x21                  	// #33
   10ec4:	ldr	d0, [sp, #64]
   10ec8:	str	w2, [x1, x0]
   10ecc:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10ed0:	ldr	x20, [x20, #4000]
   10ed4:	ldr	w0, [x20]
   10ed8:	cbz	w0, 11310 <lgamma@GLIBC_2.17+0x21d8>
   10edc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10ee0:	ldr	x0, [x0, #3976]
   10ee4:	mrs	x1, tpidr_el0
   10ee8:	mov	w2, #0x21                  	// #33
   10eec:	ldr	d0, [sp, #64]
   10ef0:	str	w2, [x1, x0]
   10ef4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10ef8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10efc:	ldr	x0, [x0, #3976]
   10f00:	mrs	x1, tpidr_el0
   10f04:	mov	w2, #0x22                  	// #34
   10f08:	ldr	d0, [sp, #64]
   10f0c:	str	w2, [x1, x0]
   10f10:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10f14:	ldr	d0, [sp, #64]
   10f18:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10f1c:	ldr	w0, [x20]
   10f20:	cbz	w0, 115c4 <lgamma@GLIBC_2.17+0x248c>
   10f24:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10f28:	ldr	x0, [x0, #3976]
   10f2c:	mrs	x1, tpidr_el0
   10f30:	mov	w2, #0x22                  	// #34
   10f34:	ldr	d0, [sp, #64]
   10f38:	str	w2, [x1, x0]
   10f3c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10f40:	ldr	w0, [x20]
   10f44:	cbz	w0, 11220 <lgamma@GLIBC_2.17+0x20e8>
   10f48:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10f4c:	ldr	x0, [x0, #3976]
   10f50:	mrs	x1, tpidr_el0
   10f54:	mov	w2, #0x21                  	// #33
   10f58:	ldr	d0, [sp, #64]
   10f5c:	str	w2, [x1, x0]
   10f60:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10f64:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10f68:	ldr	x0, [x0, #3976]
   10f6c:	mrs	x1, tpidr_el0
   10f70:	mov	w2, #0x22                  	// #34
   10f74:	ldr	d0, [sp, #64]
   10f78:	str	w2, [x1, x0]
   10f7c:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10f80:	ldr	x20, [x20, #4000]
   10f84:	ldr	w0, [x20]
   10f88:	cbz	w0, 115f4 <lgamma@GLIBC_2.17+0x24bc>
   10f8c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10f90:	ldr	x0, [x0, #3976]
   10f94:	mrs	x1, tpidr_el0
   10f98:	mov	w2, #0x21                  	// #33
   10f9c:	ldr	d0, [sp, #64]
   10fa0:	str	w2, [x1, x0]
   10fa4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10fa8:	ldr	x20, [x20, #4000]
   10fac:	ldr	w0, [x20]
   10fb0:	cbz	w0, 11244 <lgamma@GLIBC_2.17+0x210c>
   10fb4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10fb8:	ldr	x0, [x0, #3976]
   10fbc:	mrs	x1, tpidr_el0
   10fc0:	mov	w2, #0x21                  	// #33
   10fc4:	ldr	d0, [sp, #64]
   10fc8:	str	w2, [x1, x0]
   10fcc:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10fd0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10fd4:	ldr	x0, [x0, #3976]
   10fd8:	mrs	x1, tpidr_el0
   10fdc:	mov	w2, #0x21                  	// #33
   10fe0:	ldr	d0, [sp, #64]
   10fe4:	str	w2, [x1, x0]
   10fe8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   10fec:	ldr	x20, [x20, #4000]
   10ff0:	ldr	w0, [x20]
   10ff4:	cbz	w0, 1163c <lgamma@GLIBC_2.17+0x2504>
   10ff8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   10ffc:	ldr	x0, [x0, #3976]
   11000:	mrs	x1, tpidr_el0
   11004:	mov	w2, #0x21                  	// #33
   11008:	ldr	d0, [sp, #64]
   1100c:	str	w2, [x1, x0]
   11010:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   11014:	ldr	x20, [x20, #4000]
   11018:	ldr	w0, [x20]
   1101c:	cbz	w0, 113a0 <lgamma@GLIBC_2.17+0x2268>
   11020:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11024:	ldr	x0, [x0, #3976]
   11028:	mrs	x1, tpidr_el0
   1102c:	mov	w2, #0x21                  	// #33
   11030:	ldr	d0, [sp, #64]
   11034:	str	w2, [x1, x0]
   11038:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   1103c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11040:	ldr	x0, [x0, #3976]
   11044:	mrs	x1, tpidr_el0
   11048:	mov	w2, #0x22                  	// #34
   1104c:	ldr	d0, [sp, #64]
   11050:	str	w2, [x1, x0]
   11054:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   11058:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1105c:	ldr	x0, [x0, #3976]
   11060:	mrs	x1, tpidr_el0
   11064:	mov	w2, #0x22                  	// #34
   11068:	ldr	d0, [sp, #64]
   1106c:	str	w2, [x1, x0]
   11070:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   11074:	ldr	x20, [x20, #4000]
   11078:	ldr	w0, [x20]
   1107c:	cbz	w0, 111d8 <lgamma@GLIBC_2.17+0x20a0>
   11080:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11084:	ldr	x0, [x0, #3976]
   11088:	mrs	x1, tpidr_el0
   1108c:	mov	w2, #0x21                  	// #33
   11090:	ldr	d0, [sp, #64]
   11094:	str	w2, [x1, x0]
   11098:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   1109c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   110a0:	ldr	x0, [x0, #3976]
   110a4:	mrs	x1, tpidr_el0
   110a8:	mov	w2, #0x22                  	// #34
   110ac:	ldr	d0, [sp, #64]
   110b0:	str	w2, [x1, x0]
   110b4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   110b8:	ldr	w0, [x20]
   110bc:	cbz	w0, 112e0 <lgamma@GLIBC_2.17+0x21a8>
   110c0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   110c4:	ldr	x0, [x0, #3976]
   110c8:	mrs	x1, tpidr_el0
   110cc:	mov	w2, #0x22                  	// #34
   110d0:	ldr	d0, [sp, #64]
   110d4:	str	w2, [x1, x0]
   110d8:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   110dc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   110e0:	ldr	x0, [x0, #3976]
   110e4:	mrs	x1, tpidr_el0
   110e8:	mov	w2, #0x22                  	// #34
   110ec:	ldr	d0, [sp, #64]
   110f0:	str	w2, [x1, x0]
   110f4:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   110f8:	ldr	w0, [x20]
   110fc:	cbz	w0, 1137c <lgamma@GLIBC_2.17+0x2244>
   11100:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11104:	ldr	x0, [x0, #3976]
   11108:	mrs	x1, tpidr_el0
   1110c:	mov	w2, #0x21                  	// #33
   11110:	ldr	d0, [sp, #64]
   11114:	str	w2, [x1, x0]
   11118:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   1111c:	ldr	x20, [x20, #4000]
   11120:	ldr	w0, [x20]
   11124:	cbz	w0, 11334 <lgamma@GLIBC_2.17+0x21fc>
   11128:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1112c:	ldr	x0, [x0, #3976]
   11130:	mrs	x1, tpidr_el0
   11134:	mov	w2, #0x21                  	// #33
   11138:	ldr	d0, [sp, #64]
   1113c:	str	w2, [x1, x0]
   11140:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   11144:	ldr	x20, [x20, #4000]
   11148:	ldr	w0, [x20]
   1114c:	cbz	w0, 113c4 <lgamma@GLIBC_2.17+0x228c>
   11150:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11154:	ldr	x0, [x0, #3976]
   11158:	mrs	x1, tpidr_el0
   1115c:	mov	w2, #0x21                  	// #33
   11160:	ldr	d0, [sp, #64]
   11164:	str	w2, [x1, x0]
   11168:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   1116c:	ldr	x20, [x20, #4000]
   11170:	ldr	w0, [x20]
   11174:	cbz	w0, 1128c <lgamma@GLIBC_2.17+0x2154>
   11178:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1117c:	ldr	x0, [x0, #3976]
   11180:	mrs	x1, tpidr_el0
   11184:	mov	w2, #0x21                  	// #33
   11188:	ldr	d0, [sp, #64]
   1118c:	str	w2, [x1, x0]
   11190:	b	f318 <lgamma@GLIBC_2.17+0x1e0>
   11194:	fcvtzs	w0, d0
   11198:	mov	x3, #0xfff0000000000000    	// #-4503599627370496
   1119c:	mov	x2, #0x7ff0000000000000    	// #9218868437227405312
   111a0:	fmov	d1, x3
   111a4:	fmov	d0, x2
   111a8:	tst	x0, #0x1
   111ac:	fcsel	d0, d1, d0, eq  // eq = none
   111b0:	b	108a0 <lgamma@GLIBC_2.17+0x1768>
   111b4:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   111b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   111bc:	mov	x2, #0x14                  	// #20
   111c0:	mov	x1, #0x1                   	// #1
   111c4:	ldr	x3, [x3, #3992]
   111c8:	add	x0, x0, #0x648
   111cc:	ldr	x3, [x3]
   111d0:	bl	ba90 <fwrite@plt>
   111d4:	b	10850 <lgamma@GLIBC_2.17+0x1718>
   111d8:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   111dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   111e0:	mov	x2, #0x11                  	// #17
   111e4:	mov	x1, #0x1                   	// #1
   111e8:	ldr	x3, [x3, #3992]
   111ec:	add	x0, x0, #0x660
   111f0:	ldr	x3, [x3]
   111f4:	bl	ba90 <fwrite@plt>
   111f8:	b	11080 <lgamma@GLIBC_2.17+0x1f48>
   111fc:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11200:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11204:	mov	x2, #0x19                  	// #25
   11208:	mov	x1, #0x1                   	// #1
   1120c:	ldr	x3, [x3, #3992]
   11210:	add	x0, x0, #0x720
   11214:	ldr	x3, [x3]
   11218:	bl	ba90 <fwrite@plt>
   1121c:	b	10e24 <lgamma@GLIBC_2.17+0x1cec>
   11220:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11224:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11228:	mov	x2, #0x18                  	// #24
   1122c:	mov	x1, #0x1                   	// #1
   11230:	ldr	x3, [x3, #3992]
   11234:	add	x0, x0, #0x798
   11238:	ldr	x3, [x3]
   1123c:	bl	ba90 <fwrite@plt>
   11240:	b	10f48 <lgamma@GLIBC_2.17+0x1e10>
   11244:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11248:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1124c:	mov	x2, #0x14                  	// #20
   11250:	mov	x1, #0x1                   	// #1
   11254:	ldr	x3, [x3, #3992]
   11258:	add	x0, x0, #0x708
   1125c:	ldr	x3, [x3]
   11260:	bl	ba90 <fwrite@plt>
   11264:	b	10fb4 <lgamma@GLIBC_2.17+0x1e7c>
   11268:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1126c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11270:	mov	x2, #0x11                  	// #17
   11274:	mov	x1, #0x1                   	// #1
   11278:	ldr	x3, [x3, #3992]
   1127c:	add	x0, x0, #0x678
   11280:	ldr	x3, [x3]
   11284:	bl	ba90 <fwrite@plt>
   11288:	b	10eb4 <lgamma@GLIBC_2.17+0x1d7c>
   1128c:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11290:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11294:	mov	x2, #0x12                  	// #18
   11298:	mov	x1, #0x1                   	// #1
   1129c:	ldr	x3, [x3, #3992]
   112a0:	add	x0, x0, #0x6f0
   112a4:	ldr	x3, [x3]
   112a8:	bl	ba90 <fwrite@plt>
   112ac:	b	11178 <lgamma@GLIBC_2.17+0x2040>
   112b0:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   112b4:	ldr	x0, [sp, #40]
   112b8:	ldr	x20, [x20, #3992]
   112bc:	ldr	x1, [x20]
   112c0:	bl	ba00 <fputs@plt>
   112c4:	ldr	x3, [x20]
   112c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   112cc:	mov	x2, #0xe                   	// #14
   112d0:	mov	x1, #0x1                   	// #1
   112d4:	add	x0, x0, #0x800
   112d8:	bl	ba90 <fwrite@plt>
   112dc:	b	10e48 <lgamma@GLIBC_2.17+0x1d10>
   112e0:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   112e4:	ldr	x0, [sp, #40]
   112e8:	ldr	x20, [x20, #3992]
   112ec:	ldr	x1, [x20]
   112f0:	bl	ba00 <fputs@plt>
   112f4:	ldr	x3, [x20]
   112f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   112fc:	mov	x2, #0xe                   	// #14
   11300:	mov	x1, #0x1                   	// #1
   11304:	add	x0, x0, #0x800
   11308:	bl	ba90 <fwrite@plt>
   1130c:	b	110c0 <lgamma@GLIBC_2.17+0x1f88>
   11310:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11314:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11318:	mov	x2, #0x14                  	// #20
   1131c:	mov	x1, #0x1                   	// #1
   11320:	ldr	x3, [x3, #3992]
   11324:	add	x0, x0, #0x780
   11328:	ldr	x3, [x3]
   1132c:	bl	ba90 <fwrite@plt>
   11330:	b	10edc <lgamma@GLIBC_2.17+0x1da4>
   11334:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11338:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1133c:	mov	x2, #0x11                  	// #17
   11340:	mov	x1, #0x1                   	// #1
   11344:	ldr	x3, [x3, #3992]
   11348:	add	x0, x0, #0x690
   1134c:	ldr	x3, [x3]
   11350:	bl	ba90 <fwrite@plt>
   11354:	b	11128 <lgamma@GLIBC_2.17+0x1ff0>
   11358:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1135c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11360:	mov	x2, #0x11                  	// #17
   11364:	mov	x1, #0x1                   	// #1
   11368:	ldr	x3, [x3, #3992]
   1136c:	add	x0, x0, #0x690
   11370:	ldr	x3, [x3]
   11374:	bl	ba90 <fwrite@plt>
   11378:	b	10dfc <lgamma@GLIBC_2.17+0x1cc4>
   1137c:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11380:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11384:	mov	x2, #0x14                  	// #20
   11388:	mov	x1, #0x1                   	// #1
   1138c:	ldr	x3, [x3, #3992]
   11390:	add	x0, x0, #0x7b8
   11394:	ldr	x3, [x3]
   11398:	bl	ba90 <fwrite@plt>
   1139c:	b	11100 <lgamma@GLIBC_2.17+0x1fc8>
   113a0:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   113a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   113a8:	mov	x2, #0x11                  	// #17
   113ac:	mov	x1, #0x1                   	// #1
   113b0:	ldr	x3, [x3, #3992]
   113b4:	add	x0, x0, #0x660
   113b8:	ldr	x3, [x3]
   113bc:	bl	ba90 <fwrite@plt>
   113c0:	b	11020 <lgamma@GLIBC_2.17+0x1ee8>
   113c4:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   113c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   113cc:	mov	x2, #0x13                  	// #19
   113d0:	mov	x1, #0x1                   	// #1
   113d4:	ldr	x3, [x3, #3992]
   113d8:	add	x0, x0, #0x5f8
   113dc:	ldr	x3, [x3]
   113e0:	bl	ba90 <fwrite@plt>
   113e4:	b	11150 <lgamma@GLIBC_2.17+0x2018>
   113e8:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   113ec:	ldr	x0, [sp, #40]
   113f0:	ldr	x20, [x20, #3992]
   113f4:	ldr	x1, [x20]
   113f8:	bl	ba00 <fputs@plt>
   113fc:	ldr	x3, [x20]
   11400:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11404:	mov	x2, #0xe                   	// #14
   11408:	mov	x1, #0x1                   	// #1
   1140c:	add	x0, x0, #0x800
   11410:	bl	ba90 <fwrite@plt>
   11414:	b	10b60 <lgamma@GLIBC_2.17+0x1a28>
   11418:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1141c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11420:	mov	x2, #0x13                  	// #19
   11424:	mov	x1, #0x1                   	// #1
   11428:	ldr	x3, [x3, #3992]
   1142c:	add	x0, x0, #0x6a8
   11430:	ldr	x3, [x3]
   11434:	bl	ba90 <fwrite@plt>
   11438:	b	10c04 <lgamma@GLIBC_2.17+0x1acc>
   1143c:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11440:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11444:	mov	x2, #0x14                  	// #20
   11448:	mov	x1, #0x1                   	// #1
   1144c:	ldr	x3, [x3, #3992]
   11450:	add	x0, x0, #0x7d0
   11454:	ldr	x3, [x3]
   11458:	bl	ba90 <fwrite@plt>
   1145c:	b	10ccc <lgamma@GLIBC_2.17+0x1b94>
   11460:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11464:	ldr	x0, [sp, #40]
   11468:	ldr	x20, [x20, #3992]
   1146c:	ldr	x1, [x20]
   11470:	bl	ba00 <fputs@plt>
   11474:	ldr	x3, [x20]
   11478:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1147c:	mov	x2, #0xe                   	// #14
   11480:	mov	x1, #0x1                   	// #1
   11484:	add	x0, x0, #0x800
   11488:	bl	ba90 <fwrite@plt>
   1148c:	b	10cf0 <lgamma@GLIBC_2.17+0x1bb8>
   11490:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11494:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11498:	mov	x2, #0x19                  	// #25
   1149c:	mov	x1, #0x1                   	// #1
   114a0:	ldr	x3, [x3, #3992]
   114a4:	add	x0, x0, #0x720
   114a8:	ldr	x3, [x3]
   114ac:	bl	ba90 <fwrite@plt>
   114b0:	b	10ca8 <lgamma@GLIBC_2.17+0x1b70>
   114b4:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   114b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   114bc:	mov	x2, #0x10                  	// #16
   114c0:	mov	x1, #0x1                   	// #1
   114c4:	ldr	x3, [x3, #3992]
   114c8:	add	x0, x0, #0x6c0
   114cc:	ldr	x3, [x3]
   114d0:	bl	ba90 <fwrite@plt>
   114d4:	b	10bc0 <lgamma@GLIBC_2.17+0x1a88>
   114d8:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   114dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   114e0:	mov	x2, #0x13                  	// #19
   114e4:	mov	x1, #0x1                   	// #1
   114e8:	ldr	x3, [x3, #3992]
   114ec:	add	x0, x0, #0x810
   114f0:	ldr	x3, [x3]
   114f4:	bl	ba90 <fwrite@plt>
   114f8:	b	10d14 <lgamma@GLIBC_2.17+0x1bdc>
   114fc:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11500:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11504:	mov	x2, #0x13                  	// #19
   11508:	add	x0, x0, #0x810
   1150c:	ldr	x3, [x3, #3992]
   11510:	mov	x1, #0x1                   	// #1
   11514:	ldr	x3, [x3]
   11518:	bl	ba90 <fwrite@plt>
   1151c:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   11520:	fmov	d0, x0
   11524:	b	10d7c <lgamma@GLIBC_2.17+0x1c44>
   11528:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1152c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11530:	mov	x2, #0x11                  	// #17
   11534:	mov	x1, #0x1                   	// #1
   11538:	ldr	x3, [x3, #3992]
   1153c:	add	x0, x0, #0x678
   11540:	ldr	x3, [x3]
   11544:	bl	ba90 <fwrite@plt>
   11548:	b	10e8c <lgamma@GLIBC_2.17+0x1d54>
   1154c:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11550:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11554:	mov	x2, #0x13                  	// #19
   11558:	mov	x1, #0x1                   	// #1
   1155c:	ldr	x3, [x3, #3992]
   11560:	add	x0, x0, #0x5e0
   11564:	ldr	x3, [x3]
   11568:	bl	ba90 <fwrite@plt>
   1156c:	b	ff70 <lgamma@GLIBC_2.17+0xe38>
   11570:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11574:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11578:	mov	x2, #0x20                  	// #32
   1157c:	mov	x1, #0x1                   	// #1
   11580:	ldr	x3, [x3, #3992]
   11584:	add	x0, x0, #0x740
   11588:	ldr	x3, [x3]
   1158c:	bl	ba90 <fwrite@plt>
   11590:	b	10c2c <lgamma@GLIBC_2.17+0x1af4>
   11594:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11598:	ldr	x0, [sp, #40]
   1159c:	ldr	x20, [x20, #3992]
   115a0:	ldr	x1, [x20]
   115a4:	bl	ba00 <fputs@plt>
   115a8:	ldr	x3, [x20]
   115ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   115b0:	mov	x2, #0xe                   	// #14
   115b4:	mov	x1, #0x1                   	// #1
   115b8:	add	x0, x0, #0x800
   115bc:	bl	ba90 <fwrite@plt>
   115c0:	b	10d38 <lgamma@GLIBC_2.17+0x1c00>
   115c4:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   115c8:	ldr	x0, [sp, #40]
   115cc:	ldr	x20, [x20, #3992]
   115d0:	ldr	x1, [x20]
   115d4:	bl	ba00 <fputs@plt>
   115d8:	ldr	x3, [x20]
   115dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   115e0:	mov	x2, #0xe                   	// #14
   115e4:	mov	x1, #0x1                   	// #1
   115e8:	add	x0, x0, #0x800
   115ec:	bl	ba90 <fwrite@plt>
   115f0:	b	10f24 <lgamma@GLIBC_2.17+0x1dec>
   115f4:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   115f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   115fc:	mov	x2, #0x12                  	// #18
   11600:	mov	x1, #0x1                   	// #1
   11604:	ldr	x3, [x3, #3992]
   11608:	add	x0, x0, #0x6d8
   1160c:	ldr	x3, [x3]
   11610:	bl	ba90 <fwrite@plt>
   11614:	b	10f8c <lgamma@GLIBC_2.17+0x1e54>
   11618:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1161c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11620:	mov	x2, #0x12                  	// #18
   11624:	mov	x1, #0x1                   	// #1
   11628:	ldr	x3, [x3, #3992]
   1162c:	add	x0, x0, #0x7e8
   11630:	ldr	x3, [x3]
   11634:	bl	ba90 <fwrite@plt>
   11638:	b	10dd4 <lgamma@GLIBC_2.17+0x1c9c>
   1163c:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11640:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11644:	mov	x2, #0x13                  	// #19
   11648:	mov	x1, #0x1                   	// #1
   1164c:	ldr	x3, [x3, #3992]
   11650:	add	x0, x0, #0x768
   11654:	ldr	x3, [x3]
   11658:	bl	ba90 <fwrite@plt>
   1165c:	b	10ff8 <lgamma@GLIBC_2.17+0x1ec0>
   11660:	bl	ba70 <__stack_chk_fail@plt>
   11664:	adrp	x3, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11668:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1166c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11670:	add	x3, x3, #0x828
   11674:	add	x1, x1, #0x610
   11678:	add	x0, x0, #0x630
   1167c:	mov	w2, #0xa6                  	// #166
   11680:	bl	bab0 <__assert_fail@plt>
   11684:	nop

0000000000011688 <acosf@@GLIBC_2.17>:
   11688:	fabs	s2, s0
   1168c:	fmov	s1, #1.000000000000000000e+00
   11690:	fcmp	s2, s1
   11694:	b.gt	1169c <acosf@@GLIBC_2.17+0x14>
   11698:	b	422d0 <__acosf_finite@GLIBC_2.17>
   1169c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   116a0:	ldr	x0, [x0, #4000]
   116a4:	ldr	w0, [x0]
   116a8:	cmn	w0, #0x1
   116ac:	b.eq	11698 <acosf@@GLIBC_2.17+0x10>  // b.none
   116b0:	stp	x29, x30, [sp, #-32]!
   116b4:	mov	w0, #0x1                   	// #1
   116b8:	mov	x29, sp
   116bc:	str	s0, [sp, #28]
   116c0:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   116c4:	ldr	s0, [sp, #28]
   116c8:	ldp	x29, x30, [sp], #32
   116cc:	mov	w0, #0x65                  	// #101
   116d0:	fmov	s1, s0
   116d4:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

00000000000116d8 <acoshf@@GLIBC_2.17>:
   116d8:	fmov	s2, #1.000000000000000000e+00
   116dc:	fmov	s1, s0
   116e0:	fcmp	s0, s2
   116e4:	b.mi	116f0 <acoshf@@GLIBC_2.17+0x18>  // b.first
   116e8:	fmov	s0, s1
   116ec:	b	425f0 <__acoshf_finite@GLIBC_2.17>
   116f0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   116f4:	ldr	x0, [x0, #4000]
   116f8:	ldr	w0, [x0]
   116fc:	cmn	w0, #0x1
   11700:	b.eq	116e8 <acoshf@@GLIBC_2.17+0x10>  // b.none
   11704:	mov	w0, #0x81                  	// #129
   11708:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   1170c:	nop

0000000000011710 <asinf@@GLIBC_2.17>:
   11710:	fabs	s2, s0
   11714:	fmov	s1, #1.000000000000000000e+00
   11718:	fcmp	s2, s1
   1171c:	b.gt	11724 <asinf@@GLIBC_2.17+0x14>
   11720:	b	426b8 <__asinf_finite@GLIBC_2.17>
   11724:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11728:	ldr	x0, [x0, #4000]
   1172c:	ldr	w0, [x0]
   11730:	cmn	w0, #0x1
   11734:	b.eq	11720 <asinf@@GLIBC_2.17+0x10>  // b.none
   11738:	stp	x29, x30, [sp, #-32]!
   1173c:	mov	w0, #0x1                   	// #1
   11740:	mov	x29, sp
   11744:	str	s0, [sp, #28]
   11748:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   1174c:	ldr	s0, [sp, #28]
   11750:	ldp	x29, x30, [sp], #32
   11754:	mov	w0, #0x66                  	// #102
   11758:	fmov	s1, s0
   1175c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000011760 <atan2f@@GLIBC_2.17>:
   11760:	movi	v2.2s, #0x0
   11764:	stp	x29, x30, [sp, #-32]!
   11768:	mov	x29, sp
   1176c:	stp	d8, d9, [sp, #16]
   11770:	fmov	s9, s1
   11774:	fcmp	s1, s2
   11778:	fmov	s8, s0
   1177c:	fccmp	s0, s2, #0x0, eq  // eq = none
   11780:	b.eq	117ac <atan2f@@GLIBC_2.17+0x4c>  // b.none
   11784:	fmov	s1, s9
   11788:	fmov	s0, s8
   1178c:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   11790:	movi	v1.2s, #0x0
   11794:	fcmp	s0, s1
   11798:	fccmp	s8, s1, #0x4, eq  // eq = none
   1179c:	b.ne	117cc <atan2f@@GLIBC_2.17+0x6c>  // b.any
   117a0:	ldp	d8, d9, [sp, #16]
   117a4:	ldp	x29, x30, [sp], #32
   117a8:	ret
   117ac:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   117b0:	ldr	x0, [x0, #4000]
   117b4:	ldr	w0, [x0]
   117b8:	cbnz	w0, 11784 <atan2f@@GLIBC_2.17+0x24>
   117bc:	ldp	d8, d9, [sp, #16]
   117c0:	mov	w0, #0x67                  	// #103
   117c4:	ldp	x29, x30, [sp], #32
   117c8:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   117cc:	fabs	s9, s9
   117d0:	mov	w0, #0x7f7fffff            	// #2139095039
   117d4:	fmov	s1, w0
   117d8:	fcmp	s9, s1
   117dc:	b.hi	117a0 <atan2f@@GLIBC_2.17+0x40>  // b.pmore
   117e0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   117e4:	ldr	x0, [x0, #3976]
   117e8:	mrs	x1, tpidr_el0
   117ec:	mov	w2, #0x22                  	// #34
   117f0:	str	w2, [x1, x0]
   117f4:	b	117a0 <atan2f@@GLIBC_2.17+0x40>

00000000000117f8 <atanhf@@GLIBC_2.17>:
   117f8:	fabs	s3, s0
   117fc:	fmov	s2, #1.000000000000000000e+00
   11800:	fmov	s1, s0
   11804:	fcmp	s3, s2
   11808:	b.ge	11814 <atanhf@@GLIBC_2.17+0x1c>  // b.tcont
   1180c:	fmov	s0, s1
   11810:	b	42b50 <__atanhf_finite@GLIBC_2.17>
   11814:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11818:	ldr	x0, [x0, #4000]
   1181c:	ldr	w0, [x0]
   11820:	cmn	w0, #0x1
   11824:	b.eq	1180c <atanhf@@GLIBC_2.17+0x14>  // b.none
   11828:	fcmp	s3, s2
   1182c:	cset	w0, le
   11830:	add	w0, w0, #0x82
   11834:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000011838 <coshf@@GLIBC_2.17>:
   11838:	stp	x29, x30, [sp, #-32]!
   1183c:	mov	x29, sp
   11840:	str	d8, [sp, #16]
   11844:	fmov	s8, s0
   11848:	bl	42c28 <__coshf_finite@GLIBC_2.17>
   1184c:	fabs	s2, s0
   11850:	mov	w0, #0x7f7fffff            	// #2139095039
   11854:	fmov	s1, w0
   11858:	fcmp	s2, s1
   1185c:	b.hi	1186c <coshf@@GLIBC_2.17+0x34>  // b.pmore
   11860:	ldr	d8, [sp, #16]
   11864:	ldp	x29, x30, [sp], #32
   11868:	ret
   1186c:	fabs	s2, s8
   11870:	fcmp	s2, s1
   11874:	b.hi	11860 <coshf@@GLIBC_2.17+0x28>  // b.pmore
   11878:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1187c:	ldr	x0, [x0, #4000]
   11880:	ldr	w0, [x0]
   11884:	cmn	w0, #0x1
   11888:	b.eq	11860 <coshf@@GLIBC_2.17+0x28>  // b.none
   1188c:	fmov	s1, s8
   11890:	fmov	s0, s8
   11894:	ldr	d8, [sp, #16]
   11898:	mov	w0, #0x69                  	// #105
   1189c:	ldp	x29, x30, [sp], #32
   118a0:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   118a4:	nop

00000000000118a8 <exp2f@GLIBC_2.17>:
   118a8:	stp	x29, x30, [sp, #-32]!
   118ac:	mov	x29, sp
   118b0:	str	d8, [sp, #16]
   118b4:	fmov	s8, s0
   118b8:	bl	4ca68 <__exp2f_finite@GLIBC_2.17>
   118bc:	fabs	s2, s0
   118c0:	mov	w0, #0x7f7fffff            	// #2139095039
   118c4:	fmov	s1, w0
   118c8:	fcmp	s2, s1
   118cc:	b.hi	118e4 <exp2f@GLIBC_2.17+0x3c>  // b.pmore
   118d0:	fcmp	s0, #0.0
   118d4:	b.eq	118e4 <exp2f@GLIBC_2.17+0x3c>  // b.none
   118d8:	ldr	d8, [sp, #16]
   118dc:	ldp	x29, x30, [sp], #32
   118e0:	ret
   118e4:	fabs	s2, s8
   118e8:	mov	w0, #0x7f7fffff            	// #2139095039
   118ec:	fmov	s1, w0
   118f0:	fcmp	s2, s1
   118f4:	b.hi	118d8 <exp2f@GLIBC_2.17+0x30>  // b.pmore
   118f8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   118fc:	ldr	x0, [x0, #4000]
   11900:	ldr	w0, [x0]
   11904:	cmn	w0, #0x1
   11908:	b.eq	118d8 <exp2f@GLIBC_2.17+0x30>  // b.none
   1190c:	fmov	w0, s8
   11910:	fmov	s1, s8
   11914:	fmov	s0, s8
   11918:	ldr	d8, [sp, #16]
   1191c:	ldp	x29, x30, [sp], #32
   11920:	cmp	w0, #0x0
   11924:	cset	w0, lt  // lt = tstop
   11928:	add	w0, w0, #0x90
   1192c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000011930 <pow10f@GLIBC_2.17>:
   11930:	stp	x29, x30, [sp, #-32]!
   11934:	mov	x29, sp
   11938:	str	d8, [sp, #16]
   1193c:	fmov	s8, s0
   11940:	bl	48678 <__exp10f_finite@GLIBC_2.17>
   11944:	fabs	s2, s0
   11948:	mov	w0, #0x7f7fffff            	// #2139095039
   1194c:	fmov	s1, w0
   11950:	fcmp	s2, s1
   11954:	b.hi	1196c <pow10f@GLIBC_2.17+0x3c>  // b.pmore
   11958:	fcmp	s0, #0.0
   1195c:	b.eq	1196c <pow10f@GLIBC_2.17+0x3c>  // b.none
   11960:	ldr	d8, [sp, #16]
   11964:	ldp	x29, x30, [sp], #32
   11968:	ret
   1196c:	fabs	s2, s8
   11970:	mov	w0, #0x7f7fffff            	// #2139095039
   11974:	fmov	s1, w0
   11978:	fcmp	s2, s1
   1197c:	b.hi	11960 <pow10f@GLIBC_2.17+0x30>  // b.pmore
   11980:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11984:	ldr	x0, [x0, #4000]
   11988:	ldr	w0, [x0]
   1198c:	cmn	w0, #0x1
   11990:	b.eq	11960 <pow10f@GLIBC_2.17+0x30>  // b.none
   11994:	fmov	w0, s8
   11998:	fmov	s1, s8
   1199c:	fmov	s0, s8
   119a0:	ldr	d8, [sp, #16]
   119a4:	ldp	x29, x30, [sp], #32
   119a8:	cmp	w0, #0x0
   119ac:	cset	w0, lt  // lt = tstop
   119b0:	add	w0, w0, #0x92
   119b4:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

00000000000119b8 <fmodf@@GLIBC_2.17>:
   119b8:	fabs	s5, s0
   119bc:	mov	w0, #0x7f7fffff            	// #2139095039
   119c0:	fmov	s4, w0
   119c4:	fmov	s2, s0
   119c8:	fmov	s3, s1
   119cc:	fcmp	s5, s4
   119d0:	cset	w0, gt
   119d4:	fcmp	s1, #0.0
   119d8:	csinc	w0, w0, wzr, ne  // ne = any
   119dc:	cbnz	w0, 119ec <fmodf@@GLIBC_2.17+0x34>
   119e0:	fmov	s1, s3
   119e4:	fmov	s0, s2
   119e8:	b	42e38 <__fmodf_finite@GLIBC_2.17>
   119ec:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   119f0:	fcmp	s0, s1
   119f4:	ldr	x0, [x0, #4000]
   119f8:	ldr	w0, [x0]
   119fc:	ccmn	w0, #0x1, #0x4, vc
   11a00:	b.eq	119e0 <fmodf@@GLIBC_2.17+0x28>  // b.none
   11a04:	mov	w0, #0x7f                  	// #127
   11a08:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11a0c:	nop

0000000000011a10 <hypotf@@GLIBC_2.17>:
   11a10:	stp	x29, x30, [sp, #-32]!
   11a14:	mov	x29, sp
   11a18:	stp	d8, d9, [sp, #16]
   11a1c:	fmov	s8, s1
   11a20:	fmov	s9, s0
   11a24:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   11a28:	fabs	s1, s0
   11a2c:	mov	w0, #0x7f7fffff            	// #2139095039
   11a30:	fmov	s2, w0
   11a34:	fcmp	s1, s2
   11a38:	b.hi	11a48 <hypotf@@GLIBC_2.17+0x38>  // b.pmore
   11a3c:	ldp	d8, d9, [sp, #16]
   11a40:	ldp	x29, x30, [sp], #32
   11a44:	ret
   11a48:	fabs	s1, s9
   11a4c:	fcmp	s1, s2
   11a50:	b.hi	11a3c <hypotf@@GLIBC_2.17+0x2c>  // b.pmore
   11a54:	fabs	s1, s8
   11a58:	fcmp	s1, s2
   11a5c:	b.hi	11a3c <hypotf@@GLIBC_2.17+0x2c>  // b.pmore
   11a60:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11a64:	ldr	x0, [x0, #4000]
   11a68:	ldr	w0, [x0]
   11a6c:	cmn	w0, #0x1
   11a70:	b.eq	11a3c <hypotf@@GLIBC_2.17+0x2c>  // b.none
   11a74:	fmov	s1, s8
   11a78:	fmov	s0, s9
   11a7c:	ldp	d8, d9, [sp, #16]
   11a80:	mov	w0, #0x68                  	// #104
   11a84:	ldp	x29, x30, [sp], #32
   11a88:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11a8c:	nop

0000000000011a90 <j0f@@GLIBC_2.17>:
   11a90:	fabs	s3, s0
   11a94:	mov	w0, #0xfdb                 	// #4059
   11a98:	movk	w0, #0x5a49, lsl #16
   11a9c:	fmov	s2, w0
   11aa0:	fmov	s1, s0
   11aa4:	fcmp	s3, s2
   11aa8:	b.gt	11ab4 <j0f@@GLIBC_2.17+0x24>
   11aac:	fmov	s0, s1
   11ab0:	b	435e8 <__j0f_finite@GLIBC_2.17>
   11ab4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11ab8:	ldr	x0, [x0, #4000]
   11abc:	ldr	w0, [x0]
   11ac0:	cmp	w0, #0x2
   11ac4:	ccmn	w0, #0x1, #0x4, ne  // ne = any
   11ac8:	b.eq	11aac <j0f@@GLIBC_2.17+0x1c>  // b.none
   11acc:	mov	w0, #0x86                  	// #134
   11ad0:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11ad4:	nop

0000000000011ad8 <y0f@@GLIBC_2.17>:
   11ad8:	fcmp	s0, #0.0
   11adc:	mov	w0, #0xfdb                 	// #4059
   11ae0:	movk	w0, #0x5a49, lsl #16
   11ae4:	fmov	s1, w0
   11ae8:	stp	x29, x30, [sp, #-32]!
   11aec:	fccmp	s0, s1, #0x0, hi  // hi = pmore
   11af0:	mov	x29, sp
   11af4:	str	d8, [sp, #16]
   11af8:	fmov	s8, s0
   11afc:	b.gt	11b10 <y0f@@GLIBC_2.17+0x38>
   11b00:	fmov	s0, s8
   11b04:	ldr	d8, [sp, #16]
   11b08:	ldp	x29, x30, [sp], #32
   11b0c:	b	43838 <__y0f_finite@GLIBC_2.17>
   11b10:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11b14:	ldr	x0, [x0, #4000]
   11b18:	ldr	w0, [x0]
   11b1c:	cmn	w0, #0x1
   11b20:	b.eq	11b00 <y0f@@GLIBC_2.17+0x28>  // b.none
   11b24:	fcmpe	s0, #0.0
   11b28:	b.mi	11b70 <y0f@@GLIBC_2.17+0x98>  // b.first
   11b2c:	fcmp	s0, #0.0
   11b30:	b.eq	11b50 <y0f@@GLIBC_2.17+0x78>  // b.none
   11b34:	cmp	w0, #0x2
   11b38:	b.eq	11b00 <y0f@@GLIBC_2.17+0x28>  // b.none
   11b3c:	ldr	d8, [sp, #16]
   11b40:	fmov	s1, s0
   11b44:	ldp	x29, x30, [sp], #32
   11b48:	mov	w0, #0x87                  	// #135
   11b4c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11b50:	mov	w0, #0x2                   	// #2
   11b54:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11b58:	fmov	s1, s8
   11b5c:	fmov	s0, s8
   11b60:	ldr	d8, [sp, #16]
   11b64:	mov	w0, #0x6c                  	// #108
   11b68:	ldp	x29, x30, [sp], #32
   11b6c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11b70:	mov	w0, #0x1                   	// #1
   11b74:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11b78:	fmov	s1, s8
   11b7c:	fmov	s0, s8
   11b80:	ldr	d8, [sp, #16]
   11b84:	mov	w0, #0x6d                  	// #109
   11b88:	ldp	x29, x30, [sp], #32
   11b8c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000011b90 <j1f@@GLIBC_2.17>:
   11b90:	fabs	s2, s0
   11b94:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   11b98:	fmov	s1, s0
   11b9c:	ldr	d3, [x0, #832]
   11ba0:	fcvt	d2, s2
   11ba4:	fcmp	d2, d3
   11ba8:	b.gt	11bb4 <j1f@@GLIBC_2.17+0x24>
   11bac:	fmov	s0, s1
   11bb0:	b	43ef0 <__j1f_finite@GLIBC_2.17>
   11bb4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11bb8:	ldr	x0, [x0, #4000]
   11bbc:	ldr	w0, [x0]
   11bc0:	cmp	w0, #0x2
   11bc4:	ccmn	w0, #0x1, #0x4, ne  // ne = any
   11bc8:	b.eq	11bac <j1f@@GLIBC_2.17+0x1c>  // b.none
   11bcc:	mov	w0, #0x88                  	// #136
   11bd0:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11bd4:	nop

0000000000011bd8 <y1f@@GLIBC_2.17>:
   11bd8:	fcmp	s0, #0.0
   11bdc:	mov	w0, #0xfdb                 	// #4059
   11be0:	movk	w0, #0x5a49, lsl #16
   11be4:	fmov	s1, w0
   11be8:	stp	x29, x30, [sp, #-32]!
   11bec:	fccmp	s0, s1, #0x0, hi  // hi = pmore
   11bf0:	mov	x29, sp
   11bf4:	str	d8, [sp, #16]
   11bf8:	fmov	s8, s0
   11bfc:	b.gt	11c10 <y1f@@GLIBC_2.17+0x38>
   11c00:	fmov	s0, s8
   11c04:	ldr	d8, [sp, #16]
   11c08:	ldp	x29, x30, [sp], #32
   11c0c:	b	44158 <__y1f_finite@GLIBC_2.17>
   11c10:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11c14:	ldr	x0, [x0, #4000]
   11c18:	ldr	w0, [x0]
   11c1c:	cmn	w0, #0x1
   11c20:	b.eq	11c00 <y1f@@GLIBC_2.17+0x28>  // b.none
   11c24:	fcmpe	s0, #0.0
   11c28:	b.mi	11c70 <y1f@@GLIBC_2.17+0x98>  // b.first
   11c2c:	fcmp	s0, #0.0
   11c30:	b.eq	11c50 <y1f@@GLIBC_2.17+0x78>  // b.none
   11c34:	cmp	w0, #0x2
   11c38:	b.eq	11c00 <y1f@@GLIBC_2.17+0x28>  // b.none
   11c3c:	ldr	d8, [sp, #16]
   11c40:	fmov	s1, s0
   11c44:	ldp	x29, x30, [sp], #32
   11c48:	mov	w0, #0x89                  	// #137
   11c4c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11c50:	mov	w0, #0x2                   	// #2
   11c54:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11c58:	fmov	s1, s8
   11c5c:	fmov	s0, s8
   11c60:	ldr	d8, [sp, #16]
   11c64:	mov	w0, #0x6e                  	// #110
   11c68:	ldp	x29, x30, [sp], #32
   11c6c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11c70:	mov	w0, #0x1                   	// #1
   11c74:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11c78:	fmov	s1, s8
   11c7c:	fmov	s0, s8
   11c80:	ldr	d8, [sp, #16]
   11c84:	mov	w0, #0x6f                  	// #111
   11c88:	ldp	x29, x30, [sp], #32
   11c8c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000011c90 <jnf@@GLIBC_2.17>:
   11c90:	fmov	s1, s0
   11c94:	fabs	s0, s0
   11c98:	mov	w1, #0xfdb                 	// #4059
   11c9c:	movk	w1, #0x5a49, lsl #16
   11ca0:	fmov	s2, w1
   11ca4:	fcmp	s0, s2
   11ca8:	b.gt	11cb4 <jnf@@GLIBC_2.17+0x24>
   11cac:	fmov	s0, s1
   11cb0:	b	44408 <__jnf_finite@GLIBC_2.17>
   11cb4:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11cb8:	ldr	x1, [x1, #4000]
   11cbc:	ldr	w1, [x1]
   11cc0:	cmp	w1, #0x2
   11cc4:	ccmn	w1, #0x1, #0x4, ne  // ne = any
   11cc8:	b.eq	11cac <jnf@@GLIBC_2.17+0x1c>  // b.none
   11ccc:	scvtf	s0, w0
   11cd0:	mov	w0, #0x8a                  	// #138
   11cd4:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000011cd8 <ynf@@GLIBC_2.17>:
   11cd8:	fcmp	s0, #0.0
   11cdc:	mov	w1, #0xfdb                 	// #4059
   11ce0:	movk	w1, #0x5a49, lsl #16
   11ce4:	fmov	s1, w1
   11ce8:	stp	x29, x30, [sp, #-32]!
   11cec:	fccmp	s0, s1, #0x0, hi  // hi = pmore
   11cf0:	mov	x29, sp
   11cf4:	str	x19, [sp, #16]
   11cf8:	mov	w19, w0
   11cfc:	str	d8, [sp, #24]
   11d00:	fmov	s8, s0
   11d04:	b.gt	11d20 <ynf@@GLIBC_2.17+0x48>
   11d08:	fmov	s0, s8
   11d0c:	mov	w0, w19
   11d10:	ldr	x19, [sp, #16]
   11d14:	ldr	d8, [sp, #24]
   11d18:	ldp	x29, x30, [sp], #32
   11d1c:	b	447e0 <__ynf_finite@GLIBC_2.17>
   11d20:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11d24:	ldr	x0, [x0, #4000]
   11d28:	ldr	w0, [x0]
   11d2c:	cmn	w0, #0x1
   11d30:	b.eq	11d08 <ynf@@GLIBC_2.17+0x30>  // b.none
   11d34:	fcmpe	s0, #0.0
   11d38:	b.mi	11d8c <ynf@@GLIBC_2.17+0xb4>  // b.first
   11d3c:	fcmp	s0, #0.0
   11d40:	b.eq	11d68 <ynf@@GLIBC_2.17+0x90>  // b.none
   11d44:	cmp	w0, #0x2
   11d48:	b.eq	11d08 <ynf@@GLIBC_2.17+0x30>  // b.none
   11d4c:	scvtf	s0, w19
   11d50:	fmov	s1, s8
   11d54:	ldr	x19, [sp, #16]
   11d58:	mov	w0, #0x8b                  	// #139
   11d5c:	ldr	d8, [sp, #24]
   11d60:	ldp	x29, x30, [sp], #32
   11d64:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11d68:	mov	w0, #0x2                   	// #2
   11d6c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11d70:	scvtf	s0, w19
   11d74:	fmov	s1, s8
   11d78:	ldr	x19, [sp, #16]
   11d7c:	mov	w0, #0x70                  	// #112
   11d80:	ldr	d8, [sp, #24]
   11d84:	ldp	x29, x30, [sp], #32
   11d88:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11d8c:	mov	w0, #0x1                   	// #1
   11d90:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11d94:	scvtf	s0, w19
   11d98:	fmov	s1, s8
   11d9c:	ldr	x19, [sp, #16]
   11da0:	mov	w0, #0x71                  	// #113
   11da4:	ldr	d8, [sp, #24]
   11da8:	ldp	x29, x30, [sp], #32
   11dac:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000011db0 <log2f@GLIBC_2.17>:
   11db0:	fcmp	s0, #0.0
   11db4:	b.ls	11dbc <log2f@GLIBC_2.17+0xc>  // b.plast
   11db8:	b	482f8 <__log2f_finite@GLIBC_2.17>
   11dbc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11dc0:	ldr	x0, [x0, #4000]
   11dc4:	ldr	w0, [x0]
   11dc8:	cmn	w0, #0x1
   11dcc:	b.eq	11db8 <log2f@GLIBC_2.17+0x8>  // b.none
   11dd0:	stp	x29, x30, [sp, #-32]!
   11dd4:	fcmp	s0, #0.0
   11dd8:	mov	x29, sp
   11ddc:	str	s0, [sp, #28]
   11de0:	b.ne	11e00 <log2f@GLIBC_2.17+0x50>  // b.any
   11de4:	mov	w0, #0x2                   	// #2
   11de8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11dec:	ldr	s0, [sp, #28]
   11df0:	ldp	x29, x30, [sp], #32
   11df4:	mov	w0, #0x94                  	// #148
   11df8:	fmov	s1, s0
   11dfc:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11e00:	mov	w0, #0x1                   	// #1
   11e04:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11e08:	ldr	s0, [sp, #28]
   11e0c:	ldp	x29, x30, [sp], #32
   11e10:	mov	w0, #0x95                  	// #149
   11e14:	fmov	s1, s0
   11e18:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11e1c:	nop

0000000000011e20 <log10f@@GLIBC_2.17>:
   11e20:	fcmp	s0, #0.0
   11e24:	b.ls	11e2c <log10f@@GLIBC_2.17+0xc>  // b.plast
   11e28:	b	45380 <__log10f_finite@GLIBC_2.17>
   11e2c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11e30:	ldr	x0, [x0, #4000]
   11e34:	ldr	w0, [x0]
   11e38:	cmn	w0, #0x1
   11e3c:	b.eq	11e28 <log10f@@GLIBC_2.17+0x8>  // b.none
   11e40:	stp	x29, x30, [sp, #-32]!
   11e44:	fcmp	s0, #0.0
   11e48:	mov	x29, sp
   11e4c:	str	s0, [sp, #28]
   11e50:	b.ne	11e70 <log10f@@GLIBC_2.17+0x50>  // b.any
   11e54:	mov	w0, #0x2                   	// #2
   11e58:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11e5c:	ldr	s0, [sp, #28]
   11e60:	ldp	x29, x30, [sp], #32
   11e64:	mov	w0, #0x76                  	// #118
   11e68:	fmov	s1, s0
   11e6c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11e70:	mov	w0, #0x1                   	// #1
   11e74:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11e78:	ldr	s0, [sp, #28]
   11e7c:	ldp	x29, x30, [sp], #32
   11e80:	mov	w0, #0x77                  	// #119
   11e84:	fmov	s1, s0
   11e88:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11e8c:	nop

0000000000011e90 <logf@GLIBC_2.17>:
   11e90:	fcmp	s0, #0.0
   11e94:	b.ls	11e9c <logf@GLIBC_2.17+0xc>  // b.plast
   11e98:	b	45298 <__logf_finite@GLIBC_2.17>
   11e9c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11ea0:	ldr	x0, [x0, #4000]
   11ea4:	ldr	w0, [x0]
   11ea8:	cmn	w0, #0x1
   11eac:	b.eq	11e98 <logf@GLIBC_2.17+0x8>  // b.none
   11eb0:	stp	x29, x30, [sp, #-32]!
   11eb4:	fcmp	s0, #0.0
   11eb8:	mov	x29, sp
   11ebc:	str	s0, [sp, #28]
   11ec0:	b.ne	11ee0 <logf@GLIBC_2.17+0x50>  // b.any
   11ec4:	mov	w0, #0x2                   	// #2
   11ec8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11ecc:	ldr	s0, [sp, #28]
   11ed0:	ldp	x29, x30, [sp], #32
   11ed4:	mov	w0, #0x74                  	// #116
   11ed8:	fmov	s1, s0
   11edc:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11ee0:	mov	w0, #0x1                   	// #1
   11ee4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   11ee8:	ldr	s0, [sp, #28]
   11eec:	ldp	x29, x30, [sp], #32
   11ef0:	mov	w0, #0x75                  	// #117
   11ef4:	fmov	s1, s0
   11ef8:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11efc:	nop

0000000000011f00 <powf@GLIBC_2.17>:
   11f00:	stp	x29, x30, [sp, #-32]!
   11f04:	mov	x29, sp
   11f08:	stp	d8, d9, [sp, #16]
   11f0c:	fmov	s9, s0
   11f10:	fmov	s8, s1
   11f14:	bl	45458 <__powf_finite@GLIBC_2.17>
   11f18:	fabs	s3, s0
   11f1c:	mov	w0, #0x7f7fffff            	// #2139095039
   11f20:	fmov	s2, w0
   11f24:	fcmp	s3, s2
   11f28:	b.hi	11f40 <powf@GLIBC_2.17+0x40>  // b.pmore
   11f2c:	fcmp	s0, #0.0
   11f30:	b.eq	11fac <powf@GLIBC_2.17+0xac>  // b.none
   11f34:	ldp	d8, d9, [sp, #16]
   11f38:	ldp	x29, x30, [sp], #32
   11f3c:	ret
   11f40:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11f44:	ldr	x0, [x0, #4000]
   11f48:	ldr	w0, [x0]
   11f4c:	cmn	w0, #0x1
   11f50:	b.eq	11f34 <powf@GLIBC_2.17+0x34>  // b.none
   11f54:	fabs	s1, s9
   11f58:	fcmp	s1, s2
   11f5c:	b.hi	11f34 <powf@GLIBC_2.17+0x34>  // b.pmore
   11f60:	fabs	s1, s8
   11f64:	fcmp	s1, s2
   11f68:	b.hi	11f34 <powf@GLIBC_2.17+0x34>  // b.pmore
   11f6c:	fcmp	s0, s0
   11f70:	b.vs	12024 <powf@GLIBC_2.17+0x124>
   11f74:	fcmp	s9, #0.0
   11f78:	b.ne	11ff8 <powf@GLIBC_2.17+0xf8>  // b.any
   11f7c:	fcmpe	s8, #0.0
   11f80:	b.pl	11ff8 <powf@GLIBC_2.17+0xf8>  // b.nfrst
   11f84:	fmov	w0, s9
   11f88:	fmov	s1, s8
   11f8c:	tbz	w0, #31, 11f98 <powf@GLIBC_2.17+0x98>
   11f90:	fmov	w0, s0
   11f94:	tbnz	w0, #31, 12010 <powf@GLIBC_2.17+0x110>
   11f98:	fmov	s0, s9
   11f9c:	mov	w0, #0x8f                  	// #143
   11fa0:	ldp	d8, d9, [sp, #16]
   11fa4:	ldp	x29, x30, [sp], #32
   11fa8:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11fac:	fabs	s1, s9
   11fb0:	fcmp	s1, s2
   11fb4:	b.hi	11f34 <powf@GLIBC_2.17+0x34>  // b.pmore
   11fb8:	fcmp	s9, #0.0
   11fbc:	b.eq	11f34 <powf@GLIBC_2.17+0x34>  // b.none
   11fc0:	fabs	s1, s8
   11fc4:	fcmp	s1, s2
   11fc8:	b.hi	11f34 <powf@GLIBC_2.17+0x34>  // b.pmore
   11fcc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   11fd0:	ldr	x0, [x0, #4000]
   11fd4:	ldr	w0, [x0]
   11fd8:	cmn	w0, #0x1
   11fdc:	b.eq	11f34 <powf@GLIBC_2.17+0x34>  // b.none
   11fe0:	fmov	s1, s8
   11fe4:	fmov	s0, s9
   11fe8:	ldp	d8, d9, [sp, #16]
   11fec:	mov	w0, #0x7a                  	// #122
   11ff0:	ldp	x29, x30, [sp], #32
   11ff4:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   11ff8:	fmov	s1, s8
   11ffc:	fmov	s0, s9
   12000:	ldp	d8, d9, [sp, #16]
   12004:	mov	w0, #0x79                  	// #121
   12008:	ldp	x29, x30, [sp], #32
   1200c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   12010:	fmov	s0, s9
   12014:	mov	w0, #0x7b                  	// #123
   12018:	ldp	d8, d9, [sp, #16]
   1201c:	ldp	x29, x30, [sp], #32
   12020:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   12024:	fmov	s1, s8
   12028:	fmov	s0, s9
   1202c:	ldp	d8, d9, [sp, #16]
   12030:	mov	w0, #0x7c                  	// #124
   12034:	ldp	x29, x30, [sp], #32
   12038:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   1203c:	nop

0000000000012040 <dremf@@GLIBC_2.17>:
   12040:	fcmp	s1, #0.0
   12044:	fccmp	s0, s0, #0x1, eq  // eq = none
   12048:	b.vc	12068 <dremf@@GLIBC_2.17+0x28>
   1204c:	fabs	s3, s0
   12050:	mov	w0, #0x7f7fffff            	// #2139095039
   12054:	fmov	s2, w0
   12058:	fcmp	s3, s2
   1205c:	b.le	1207c <dremf@@GLIBC_2.17+0x3c>
   12060:	fcmp	s1, s1
   12064:	b.vs	1207c <dremf@@GLIBC_2.17+0x3c>
   12068:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1206c:	ldr	x0, [x0, #4000]
   12070:	ldr	w0, [x0]
   12074:	cmn	w0, #0x1
   12078:	b.ne	12080 <dremf@@GLIBC_2.17+0x40>  // b.any
   1207c:	b	45780 <__remainderf_finite@GLIBC_2.17>
   12080:	mov	w0, #0x80                  	// #128
   12084:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   12088:	stp	x29, x30, [sp, #-32]!
   1208c:	mov	x29, sp
   12090:	stp	d8, d9, [sp, #16]
   12094:	fmov	s9, s1
   12098:	fmov	s8, s0
   1209c:	bl	458c8 <__scalbf_finite@GLIBC_2.17>
   120a0:	fabs	s1, s0
   120a4:	mov	w0, #0x7f7fffff            	// #2139095039
   120a8:	fmov	s2, w0
   120ac:	fcmp	s1, s2
   120b0:	b.le	120d8 <dremf@@GLIBC_2.17+0x98>
   120b4:	fabs	s1, s8
   120b8:	fcmp	s1, s2
   120bc:	b.ls	120f0 <dremf@@GLIBC_2.17+0xb0>  // b.plast
   120c0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   120c4:	ldr	x0, [x0, #3976]
   120c8:	mrs	x1, tpidr_el0
   120cc:	mov	w2, #0x22                  	// #34
   120d0:	str	w2, [x1, x0]
   120d4:	b	120e4 <dremf@@GLIBC_2.17+0xa4>
   120d8:	fcmp	s0, #0.0
   120dc:	fccmp	s8, s0, #0x4, eq  // eq = none
   120e0:	b.ne	12108 <dremf@@GLIBC_2.17+0xc8>  // b.any
   120e4:	ldp	d8, d9, [sp, #16]
   120e8:	ldp	x29, x30, [sp], #32
   120ec:	ret
   120f0:	fmov	s1, s9
   120f4:	fmov	s0, s8
   120f8:	ldp	d8, d9, [sp, #16]
   120fc:	mov	w0, #0x84                  	// #132
   12100:	ldp	x29, x30, [sp], #32
   12104:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   12108:	fmov	s1, s9
   1210c:	fmov	s0, s8
   12110:	ldp	d8, d9, [sp, #16]
   12114:	mov	w0, #0x85                  	// #133
   12118:	ldp	x29, x30, [sp], #32
   1211c:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000012120 <scalbf@@GLIBC_2.17>:
   12120:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   12124:	ldr	x0, [x0, #4000]
   12128:	ldr	w0, [x0]
   1212c:	cbz	w0, 121b8 <scalbf@@GLIBC_2.17+0x98>
   12130:	stp	x29, x30, [sp, #-32]!
   12134:	mov	x29, sp
   12138:	stp	d8, d9, [sp, #16]
   1213c:	fmov	s9, s1
   12140:	fmov	s8, s0
   12144:	bl	458c8 <__scalbf_finite@GLIBC_2.17>
   12148:	fabs	s1, s0
   1214c:	mov	w0, #0x7f7fffff            	// #2139095039
   12150:	fmov	s2, w0
   12154:	fcmp	s1, s2
   12158:	b.hi	12170 <scalbf@@GLIBC_2.17+0x50>  // b.pmore
   1215c:	fcmp	s0, #0.0
   12160:	b.eq	12170 <scalbf@@GLIBC_2.17+0x50>  // b.none
   12164:	ldp	d8, d9, [sp, #16]
   12168:	ldp	x29, x30, [sp], #32
   1216c:	ret
   12170:	fcmp	s0, s0
   12174:	b.vs	121c8 <scalbf@@GLIBC_2.17+0xa8>
   12178:	mov	w0, #0x7f7fffff            	// #2139095039
   1217c:	fmov	s2, w0
   12180:	fcmp	s1, s2
   12184:	b.le	121bc <scalbf@@GLIBC_2.17+0x9c>
   12188:	fabs	s8, s8
   1218c:	fcmp	s8, s2
   12190:	b.gt	12164 <scalbf@@GLIBC_2.17+0x44>
   12194:	fabs	s1, s9
   12198:	fcmp	s1, s2
   1219c:	b.gt	12164 <scalbf@@GLIBC_2.17+0x44>
   121a0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   121a4:	ldr	x0, [x0, #3976]
   121a8:	mrs	x1, tpidr_el0
   121ac:	mov	w2, #0x22                  	// #34
   121b0:	str	w2, [x1, x0]
   121b4:	b	12164 <scalbf@@GLIBC_2.17+0x44>
   121b8:	b	12088 <dremf@@GLIBC_2.17+0x48>
   121bc:	fcmp	s8, #0.0
   121c0:	b.eq	12164 <scalbf@@GLIBC_2.17+0x44>  // b.none
   121c4:	b	12194 <scalbf@@GLIBC_2.17+0x74>
   121c8:	fcmp	s8, s9
   121cc:	b.vs	12164 <scalbf@@GLIBC_2.17+0x44>
   121d0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   121d4:	ldr	x0, [x0, #3976]
   121d8:	mrs	x1, tpidr_el0
   121dc:	mov	w2, #0x21                  	// #33
   121e0:	str	w2, [x1, x0]
   121e4:	b	12164 <scalbf@@GLIBC_2.17+0x44>

00000000000121e8 <sinhf@@GLIBC_2.17>:
   121e8:	stp	x29, x30, [sp, #-32]!
   121ec:	mov	x29, sp
   121f0:	str	d8, [sp, #16]
   121f4:	fmov	s8, s0
   121f8:	bl	45940 <__sinhf_finite@GLIBC_2.17>
   121fc:	fabs	s2, s0
   12200:	mov	w0, #0x7f7fffff            	// #2139095039
   12204:	fmov	s1, w0
   12208:	fcmp	s2, s1
   1220c:	b.hi	1221c <sinhf@@GLIBC_2.17+0x34>  // b.pmore
   12210:	ldr	d8, [sp, #16]
   12214:	ldp	x29, x30, [sp], #32
   12218:	ret
   1221c:	fabs	s2, s8
   12220:	fcmp	s2, s1
   12224:	b.hi	12210 <sinhf@@GLIBC_2.17+0x28>  // b.pmore
   12228:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1222c:	ldr	x0, [x0, #4000]
   12230:	ldr	w0, [x0]
   12234:	cmn	w0, #0x1
   12238:	b.eq	12210 <sinhf@@GLIBC_2.17+0x28>  // b.none
   1223c:	fmov	s1, s8
   12240:	fmov	s0, s8
   12244:	ldr	d8, [sp, #16]
   12248:	mov	w0, #0x7d                  	// #125
   1224c:	ldp	x29, x30, [sp], #32
   12250:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   12254:	nop

0000000000012258 <sqrtf@@GLIBC_2.17>:
   12258:	fcmp	s0, #0.0
   1225c:	fmov	s1, s0
   12260:	b.mi	1226c <sqrtf@@GLIBC_2.17+0x14>  // b.first
   12264:	fmov	s0, s1
   12268:	b	45ab0 <__sqrtf_finite@GLIBC_2.17>
   1226c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   12270:	ldr	x0, [x0, #4000]
   12274:	ldr	w0, [x0]
   12278:	cmn	w0, #0x1
   1227c:	b.eq	12264 <sqrtf@@GLIBC_2.17+0xc>  // b.none
   12280:	mov	w0, #0x7e                  	// #126
   12284:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000012288 <tgammaf@@GLIBC_2.17>:
   12288:	stp	x29, x30, [sp, #-48]!
   1228c:	mov	x29, sp
   12290:	str	x19, [sp, #16]
   12294:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   12298:	str	d8, [sp, #24]
   1229c:	fmov	s8, s0
   122a0:	ldr	x1, [x19, #4032]
   122a4:	add	x0, sp, #0x24
   122a8:	ldr	x2, [x1]
   122ac:	str	x2, [sp, #40]
   122b0:	mov	x2, #0x0                   	// #0
   122b4:	bl	45cf0 <__gammaf_r_finite@GLIBC_2.17>
   122b8:	fabs	s2, s0
   122bc:	mov	w0, #0x7f7fffff            	// #2139095039
   122c0:	fmov	s1, w0
   122c4:	fcmp	s2, s1
   122c8:	b.hi	12308 <tgammaf@@GLIBC_2.17+0x80>  // b.pmore
   122cc:	fcmp	s0, #0.0
   122d0:	b.eq	12308 <tgammaf@@GLIBC_2.17+0x80>  // b.none
   122d4:	ldr	w0, [sp, #36]
   122d8:	fneg	s1, s0
   122dc:	cmp	w0, #0x0
   122e0:	fcsel	s0, s1, s0, lt  // lt = tstop
   122e4:	ldr	x19, [x19, #4032]
   122e8:	ldr	x1, [sp, #40]
   122ec:	ldr	x0, [x19]
   122f0:	eor	x0, x1, x0
   122f4:	cbnz	x0, 123d4 <tgammaf@@GLIBC_2.17+0x14c>
   122f8:	ldr	x19, [sp, #16]
   122fc:	ldr	d8, [sp, #24]
   12300:	ldp	x29, x30, [sp], #48
   12304:	ret
   12308:	fabs	s2, s8
   1230c:	mov	w0, #0x7f7fffff            	// #2139095039
   12310:	fmov	s1, w0
   12314:	fcmp	s2, s1
   12318:	b.ls	12368 <tgammaf@@GLIBC_2.17+0xe0>  // b.plast
   1231c:	b.le	122d4 <tgammaf@@GLIBC_2.17+0x4c>
   12320:	fcmpe	s8, #0.0
   12324:	b.pl	122d4 <tgammaf@@GLIBC_2.17+0x4c>  // b.nfrst
   12328:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1232c:	ldr	x0, [x0, #4000]
   12330:	ldr	w0, [x0]
   12334:	cmn	w0, #0x1
   12338:	b.eq	122d4 <tgammaf@@GLIBC_2.17+0x4c>  // b.none
   1233c:	frintm	s1, s8
   12340:	fcmp	s1, s8
   12344:	b.eq	12398 <tgammaf@@GLIBC_2.17+0x110>  // b.none
   12348:	fcmp	s0, #0.0
   1234c:	b.ne	123c0 <tgammaf@@GLIBC_2.17+0x138>  // b.any
   12350:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   12354:	ldr	x0, [x0, #3976]
   12358:	mrs	x1, tpidr_el0
   1235c:	mov	w2, #0x22                  	// #34
   12360:	str	w2, [x1, x0]
   12364:	b	122d4 <tgammaf@@GLIBC_2.17+0x4c>
   12368:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1236c:	ldr	x0, [x0, #4000]
   12370:	ldr	w0, [x0]
   12374:	cmn	w0, #0x1
   12378:	b.eq	122d4 <tgammaf@@GLIBC_2.17+0x4c>  // b.none
   1237c:	fcmp	s8, #0.0
   12380:	b.eq	123ac <tgammaf@@GLIBC_2.17+0x124>  // b.none
   12384:	frintm	s1, s8
   12388:	fcmp	s1, s8
   1238c:	b.ne	12348 <tgammaf@@GLIBC_2.17+0xc0>  // b.any
   12390:	fcmpe	s8, #0.0
   12394:	b.pl	12348 <tgammaf@@GLIBC_2.17+0xc0>  // b.nfrst
   12398:	fmov	s1, s8
   1239c:	fmov	s0, s8
   123a0:	mov	w0, #0x8d                  	// #141
   123a4:	bl	12658 <lgammaf@GLIBC_2.17+0xe0>
   123a8:	b	122e4 <tgammaf@@GLIBC_2.17+0x5c>
   123ac:	fmov	s1, s8
   123b0:	fmov	s0, s8
   123b4:	mov	w0, #0x96                  	// #150
   123b8:	bl	12658 <lgammaf@GLIBC_2.17+0xe0>
   123bc:	b	122e4 <tgammaf@@GLIBC_2.17+0x5c>
   123c0:	fmov	s1, s8
   123c4:	fmov	s0, s8
   123c8:	mov	w0, #0x8c                  	// #140
   123cc:	bl	12658 <lgammaf@GLIBC_2.17+0xe0>
   123d0:	b	122e4 <tgammaf@@GLIBC_2.17+0x5c>
   123d4:	bl	ba70 <__stack_chk_fail@plt>

00000000000123d8 <lgammaf32_r@@GLIBC_2.27>:
   123d8:	stp	x29, x30, [sp, #-32]!
   123dc:	mov	x29, sp
   123e0:	str	d8, [sp, #16]
   123e4:	fmov	s8, s0
   123e8:	bl	44a08 <__lgammaf_r_finite@GLIBC_2.17>
   123ec:	fabs	s2, s0
   123f0:	mov	w0, #0x7f7fffff            	// #2139095039
   123f4:	fmov	s1, w0
   123f8:	fcmp	s2, s1
   123fc:	b.hi	1240c <lgammaf32_r@@GLIBC_2.27+0x34>  // b.pmore
   12400:	ldr	d8, [sp, #16]
   12404:	ldp	x29, x30, [sp], #32
   12408:	ret
   1240c:	fabs	s2, s8
   12410:	fcmp	s2, s1
   12414:	b.hi	12400 <lgammaf32_r@@GLIBC_2.27+0x28>  // b.pmore
   12418:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1241c:	ldr	x0, [x0, #4000]
   12420:	ldr	w0, [x0]
   12424:	cmn	w0, #0x1
   12428:	b.eq	12400 <lgammaf32_r@@GLIBC_2.27+0x28>  // b.none
   1242c:	frintm	s0, s8
   12430:	mov	w0, #0x72                  	// #114
   12434:	fcmp	s8, s0
   12438:	b.ne	12448 <lgammaf32_r@@GLIBC_2.27+0x70>  // b.any
   1243c:	fcmpe	s8, #0.0
   12440:	cset	w0, ls  // ls = plast
   12444:	add	w0, w0, #0x72
   12448:	fmov	s1, s8
   1244c:	fmov	s0, s8
   12450:	ldr	d8, [sp, #16]
   12454:	ldp	x29, x30, [sp], #32
   12458:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   1245c:	nop

0000000000012460 <lgammaf@@GLIBC_2.23>:
   12460:	stp	x29, x30, [sp, #-32]!
   12464:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   12468:	mov	x29, sp
   1246c:	ldr	x0, [x0, #4048]
   12470:	str	d8, [sp, #16]
   12474:	fmov	s8, s0
   12478:	bl	44a08 <__lgammaf_r_finite@GLIBC_2.17>
   1247c:	fabs	s2, s0
   12480:	mov	w0, #0x7f7fffff            	// #2139095039
   12484:	fmov	s1, w0
   12488:	fcmp	s2, s1
   1248c:	b.hi	1249c <lgammaf@@GLIBC_2.23+0x3c>  // b.pmore
   12490:	ldr	d8, [sp, #16]
   12494:	ldp	x29, x30, [sp], #32
   12498:	ret
   1249c:	fabs	s2, s8
   124a0:	fcmp	s2, s1
   124a4:	b.hi	12490 <lgammaf@@GLIBC_2.23+0x30>  // b.pmore
   124a8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   124ac:	ldr	x0, [x0, #4000]
   124b0:	ldr	w0, [x0]
   124b4:	cmn	w0, #0x1
   124b8:	b.eq	12490 <lgammaf@@GLIBC_2.23+0x30>  // b.none
   124bc:	frintm	s0, s8
   124c0:	mov	w0, #0x72                  	// #114
   124c4:	fcmp	s8, s0
   124c8:	b.ne	124d8 <lgammaf@@GLIBC_2.23+0x78>  // b.any
   124cc:	fcmpe	s8, #0.0
   124d0:	cset	w0, ls  // ls = plast
   124d4:	add	w0, w0, #0x72
   124d8:	fmov	s1, s8
   124dc:	fmov	s0, s8
   124e0:	ldr	d8, [sp, #16]
   124e4:	ldp	x29, x30, [sp], #32
   124e8:	b	12658 <lgammaf@GLIBC_2.17+0xe0>
   124ec:	nop

00000000000124f0 <expf@GLIBC_2.17>:
   124f0:	stp	x29, x30, [sp, #-32]!
   124f4:	mov	x29, sp
   124f8:	str	d8, [sp, #16]
   124fc:	fmov	s8, s0
   12500:	bl	42d58 <__expf_finite@GLIBC_2.17>
   12504:	fabs	s2, s0
   12508:	mov	w0, #0x7f7fffff            	// #2139095039
   1250c:	fmov	s1, w0
   12510:	fcmp	s2, s1
   12514:	b.hi	1252c <expf@GLIBC_2.17+0x3c>  // b.pmore
   12518:	fcmp	s0, #0.0
   1251c:	b.eq	1252c <expf@GLIBC_2.17+0x3c>  // b.none
   12520:	ldr	d8, [sp, #16]
   12524:	ldp	x29, x30, [sp], #32
   12528:	ret
   1252c:	fabs	s2, s8
   12530:	mov	w0, #0x7f7fffff            	// #2139095039
   12534:	fmov	s1, w0
   12538:	fcmp	s2, s1
   1253c:	b.hi	12520 <expf@GLIBC_2.17+0x30>  // b.pmore
   12540:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   12544:	ldr	x0, [x0, #4000]
   12548:	ldr	w0, [x0]
   1254c:	cmn	w0, #0x1
   12550:	b.eq	12520 <expf@GLIBC_2.17+0x30>  // b.none
   12554:	fmov	w0, s8
   12558:	fmov	s1, s8
   1255c:	fmov	s0, s8
   12560:	ldr	d8, [sp, #16]
   12564:	ldp	x29, x30, [sp], #32
   12568:	cmp	w0, #0x0
   1256c:	cset	w0, lt  // lt = tstop
   12570:	add	w0, w0, #0x6a
   12574:	b	12658 <lgammaf@GLIBC_2.17+0xe0>

0000000000012578 <lgammaf@GLIBC_2.17>:
   12578:	stp	x29, x30, [sp, #-48]!
   1257c:	mov	x29, sp
   12580:	str	x19, [sp, #16]
   12584:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   12588:	str	d8, [sp, #24]
   1258c:	fmov	s8, s0
   12590:	ldr	x1, [x19, #4032]
   12594:	add	x0, sp, #0x24
   12598:	ldr	x2, [x1]
   1259c:	str	x2, [sp, #40]
   125a0:	mov	x2, #0x0                   	// #0
   125a4:	bl	44a08 <__lgammaf_r_finite@GLIBC_2.17>
   125a8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   125ac:	ldr	x0, [x0, #4000]
   125b0:	ldr	w2, [x0]
   125b4:	cmp	w2, #0x3
   125b8:	b.eq	125d8 <lgammaf@GLIBC_2.17+0x60>  // b.none
   125bc:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   125c0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   125c4:	ldr	w3, [sp, #36]
   125c8:	ldr	x1, [x1, #4048]
   125cc:	ldr	x0, [x0, #4040]
   125d0:	str	w3, [x1]
   125d4:	str	w3, [x0]
   125d8:	fabs	s2, s0
   125dc:	mov	w0, #0x7f7fffff            	// #2139095039
   125e0:	fmov	s1, w0
   125e4:	fcmp	s2, s1
   125e8:	b.hi	12610 <lgammaf@GLIBC_2.17+0x98>  // b.pmore
   125ec:	ldr	x19, [x19, #4032]
   125f0:	ldr	x1, [sp, #40]
   125f4:	ldr	x0, [x19]
   125f8:	eor	x0, x1, x0
   125fc:	cbnz	x0, 12650 <lgammaf@GLIBC_2.17+0xd8>
   12600:	ldr	x19, [sp, #16]
   12604:	ldr	d8, [sp, #24]
   12608:	ldp	x29, x30, [sp], #48
   1260c:	ret
   12610:	fabs	s2, s8
   12614:	fcmp	s2, s1
   12618:	b.hi	125ec <lgammaf@GLIBC_2.17+0x74>  // b.pmore
   1261c:	cmn	w2, #0x1
   12620:	b.eq	125ec <lgammaf@GLIBC_2.17+0x74>  // b.none
   12624:	frintm	s0, s8
   12628:	mov	w0, #0x72                  	// #114
   1262c:	fcmp	s8, s0
   12630:	b.ne	12640 <lgammaf@GLIBC_2.17+0xc8>  // b.any
   12634:	fcmpe	s8, #0.0
   12638:	cset	w0, ls  // ls = plast
   1263c:	add	w0, w0, #0x72
   12640:	fmov	s1, s8
   12644:	fmov	s0, s8
   12648:	bl	12658 <lgammaf@GLIBC_2.17+0xe0>
   1264c:	b	125ec <lgammaf@GLIBC_2.17+0x74>
   12650:	bl	ba70 <__stack_chk_fail@plt>
   12654:	nop
   12658:	fcvt	d1, s1
   1265c:	fcvt	d0, s0
   12660:	stp	x29, x30, [sp, #-16]!
   12664:	mov	x29, sp
   12668:	bl	f218 <lgamma@GLIBC_2.17+0xe0>
   1266c:	fcvt	s0, d0
   12670:	ldp	x29, x30, [sp], #16
   12674:	ret

0000000000012678 <__acosl_finite@GLIBC_2.17>:
   12678:	stp	x29, x30, [sp, #-112]!
   1267c:	mov	w4, #0x3ffeffff            	// #1073676287
   12680:	mov	x29, sp
   12684:	str	q0, [sp, #32]
   12688:	ldp	x2, x3, [sp, #32]
   1268c:	str	x19, [sp, #16]
   12690:	ldr	x1, [sp, #40]
   12694:	ubfx	x0, x1, #32, #31
   12698:	lsr	x19, x1, #32
   1269c:	cmp	w0, w4
   126a0:	bfi	x3, x0, #32, #32
   126a4:	b.le	12710 <__acosl_finite@GLIBC_2.17+0x98>
   126a8:	mov	w2, #0x3fff0000            	// #1073676288
   126ac:	cmp	w0, w2
   126b0:	b.eq	126d4 <__acosl_finite@GLIBC_2.17+0x5c>  // b.none
   126b4:	ldr	q1, [sp, #32]
   126b8:	mov	v0.16b, v1.16b
   126bc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   126c0:	mov	v1.16b, v0.16b
   126c4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   126c8:	ldr	x19, [sp, #16]
   126cc:	ldp	x29, x30, [sp], #112
   126d0:	ret
   126d4:	ldr	x0, [sp, #32]
   126d8:	lsr	x2, x0, #32
   126dc:	orr	w1, w1, w2
   126e0:	orr	w1, w1, w0
   126e4:	cbnz	w1, 126b4 <__acosl_finite@GLIBC_2.17+0x3c>
   126e8:	movi	v0.2d, #0x0
   126ec:	tbz	w19, #31, 126c8 <__acosl_finite@GLIBC_2.17+0x50>
   126f0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   126f4:	add	x0, x0, #0xa30
   126f8:	ldr	q1, [x0]
   126fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12700:	add	x0, x0, #0xa40
   12704:	ldr	q0, [x0]
   12708:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1270c:	b	126c8 <__acosl_finite@GLIBC_2.17+0x50>
   12710:	mov	w1, #0x3ffdffff            	// #1073610751
   12714:	cmp	w0, w1
   12718:	b.gt	1294c <__acosl_finite@GLIBC_2.17+0x2d4>
   1271c:	mov	w1, #0x3f8dffff            	// #1066270719
   12720:	cmp	w0, w1
   12724:	b.le	12ecc <__acosl_finite@GLIBC_2.17+0x854>
   12728:	mov	w1, #0xdfff                	// #57343
   1272c:	movk	w1, #0x3ffd, lsl #16
   12730:	cmp	w0, w1
   12734:	b.gt	12eec <__acosl_finite@GLIBC_2.17+0x874>
   12738:	ldr	q1, [sp, #32]
   1273c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12740:	str	q0, [sp, #48]
   12744:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12748:	add	x0, x0, #0xa70
   1274c:	ldr	q1, [x0]
   12750:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12754:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12758:	add	x0, x0, #0xa80
   1275c:	ldr	q1, [x0]
   12760:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12764:	ldr	q1, [sp, #48]
   12768:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1276c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12770:	add	x0, x0, #0xa90
   12774:	ldr	q1, [x0]
   12778:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1277c:	ldr	q1, [sp, #48]
   12780:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12784:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12788:	add	x0, x0, #0xaa0
   1278c:	ldr	q1, [x0]
   12790:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12794:	ldr	q1, [sp, #48]
   12798:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1279c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   127a0:	add	x0, x0, #0xab0
   127a4:	ldr	q1, [x0]
   127a8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   127ac:	ldr	q1, [sp, #48]
   127b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   127b4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   127b8:	add	x0, x0, #0xac0
   127bc:	ldr	q1, [x0]
   127c0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   127c4:	ldr	q1, [sp, #48]
   127c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   127cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   127d0:	add	x0, x0, #0xad0
   127d4:	ldr	q1, [x0]
   127d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   127dc:	ldr	q1, [sp, #48]
   127e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   127e4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   127e8:	add	x0, x0, #0xae0
   127ec:	ldr	q1, [x0]
   127f0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   127f4:	ldr	q1, [sp, #48]
   127f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   127fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12800:	add	x0, x0, #0xaf0
   12804:	ldr	q1, [x0]
   12808:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1280c:	ldr	q1, [sp, #48]
   12810:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12814:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12818:	add	x0, x0, #0xb00
   1281c:	ldr	q1, [x0]
   12820:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12824:	ldr	q1, [sp, #48]
   12828:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1282c:	ldr	q1, [sp, #32]
   12830:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12834:	str	q0, [sp, #64]
   12838:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1283c:	add	x0, x0, #0xb10
   12840:	ldr	q0, [sp, #48]
   12844:	ldr	q1, [x0]
   12848:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1284c:	ldr	q1, [sp, #48]
   12850:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12854:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12858:	add	x0, x0, #0xb20
   1285c:	ldr	q1, [x0]
   12860:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12864:	ldr	q1, [sp, #48]
   12868:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1286c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12870:	add	x0, x0, #0xb30
   12874:	ldr	q1, [x0]
   12878:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1287c:	ldr	q1, [sp, #48]
   12880:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12884:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12888:	add	x0, x0, #0xb40
   1288c:	ldr	q1, [x0]
   12890:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12894:	ldr	q1, [sp, #48]
   12898:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1289c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   128a0:	add	x0, x0, #0xb50
   128a4:	ldr	q1, [x0]
   128a8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   128ac:	ldr	q1, [sp, #48]
   128b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   128b4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   128b8:	add	x0, x0, #0xb60
   128bc:	ldr	q1, [x0]
   128c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   128c4:	ldr	q1, [sp, #48]
   128c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   128cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   128d0:	add	x0, x0, #0xb70
   128d4:	ldr	q1, [x0]
   128d8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   128dc:	ldr	q1, [sp, #48]
   128e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   128e4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   128e8:	add	x0, x0, #0xb80
   128ec:	ldr	q1, [x0]
   128f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   128f4:	ldr	q1, [sp, #48]
   128f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   128fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12900:	add	x0, x0, #0xb90
   12904:	ldr	q1, [x0]
   12908:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1290c:	mov	v1.16b, v0.16b
   12910:	ldr	q2, [sp, #64]
   12914:	mov	v0.16b, v2.16b
   12918:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1291c:	ldr	q1, [sp, #32]
   12920:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12924:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12928:	add	x0, x0, #0xa50
   1292c:	ldr	q1, [x0]
   12930:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12934:	mov	v1.16b, v0.16b
   12938:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1293c:	add	x0, x0, #0xa60
   12940:	ldr	q0, [x0]
   12944:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12948:	b	126c8 <__acosl_finite@GLIBC_2.17+0x50>
   1294c:	fmov	d0, x2
   12950:	mov	w1, #0x3fff                	// #16383
   12954:	movk	w1, #0x3ffe, lsl #16
   12958:	cmp	w0, w1
   1295c:	fmov	v0.d[1], x3
   12960:	b.le	12c9c <__acosl_finite@GLIBC_2.17+0x624>
   12964:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12968:	add	x0, x0, #0x2f0
   1296c:	mov	v1.16b, v0.16b
   12970:	ldr	q0, [x0]
   12974:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12978:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1297c:	add	x0, x0, #0x330
   12980:	ldr	q1, [x0]
   12984:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12988:	str	q0, [sp, #32]
   1298c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   12990:	fmov	x3, v0.d[1]
   12994:	mov	x2, #0x0                   	// #0
   12998:	fmov	d2, x2
   1299c:	str	q0, [sp, #96]
   129a0:	fmov	v2.d[1], x3
   129a4:	mov	v1.16b, v2.16b
   129a8:	str	q2, [sp, #48]
   129ac:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   129b0:	str	q0, [sp, #80]
   129b4:	ldr	q2, [sp, #48]
   129b8:	mov	v1.16b, v2.16b
   129bc:	mov	v0.16b, v2.16b
   129c0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   129c4:	mov	v1.16b, v0.16b
   129c8:	ldr	q0, [sp, #32]
   129cc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   129d0:	mov	v16.16b, v0.16b
   129d4:	ldr	q2, [sp, #48]
   129d8:	str	q16, [sp, #64]
   129dc:	mov	v1.16b, v2.16b
   129e0:	mov	v0.16b, v2.16b
   129e4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   129e8:	ldr	q6, [sp, #80]
   129ec:	mov	v1.16b, v6.16b
   129f0:	str	q6, [sp, #48]
   129f4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   129f8:	mov	v1.16b, v0.16b
   129fc:	ldr	q16, [sp, #64]
   12a00:	mov	v0.16b, v16.16b
   12a04:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12a08:	mov	v2.16b, v0.16b
   12a0c:	ldr	q6, [sp, #48]
   12a10:	mov	v1.16b, v6.16b
   12a14:	mov	v0.16b, v6.16b
   12a18:	str	q2, [sp, #48]
   12a1c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12a20:	ldr	q2, [sp, #48]
   12a24:	mov	v1.16b, v0.16b
   12a28:	mov	v0.16b, v2.16b
   12a2c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12a30:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12a34:	add	x0, x0, #0xa70
   12a38:	str	q0, [sp, #80]
   12a3c:	ldr	q0, [sp, #32]
   12a40:	ldr	q1, [x0]
   12a44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12a48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12a4c:	add	x0, x0, #0xa80
   12a50:	ldr	q1, [x0]
   12a54:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12a58:	ldr	q1, [sp, #32]
   12a5c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12a60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12a64:	add	x0, x0, #0xa90
   12a68:	ldr	q1, [x0]
   12a6c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12a70:	ldr	q1, [sp, #32]
   12a74:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12a78:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12a7c:	add	x0, x0, #0xaa0
   12a80:	ldr	q1, [x0]
   12a84:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12a88:	ldr	q1, [sp, #32]
   12a8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12a90:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12a94:	add	x0, x0, #0xab0
   12a98:	ldr	q1, [x0]
   12a9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12aa0:	ldr	q1, [sp, #32]
   12aa4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12aa8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12aac:	add	x0, x0, #0xac0
   12ab0:	ldr	q1, [x0]
   12ab4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12ab8:	ldr	q1, [sp, #32]
   12abc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12ac0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12ac4:	add	x0, x0, #0xad0
   12ac8:	ldr	q1, [x0]
   12acc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12ad0:	ldr	q1, [sp, #32]
   12ad4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12ad8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12adc:	add	x0, x0, #0xae0
   12ae0:	ldr	q1, [x0]
   12ae4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12ae8:	ldr	q1, [sp, #32]
   12aec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12af0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12af4:	add	x0, x0, #0xaf0
   12af8:	ldr	q1, [x0]
   12afc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12b00:	ldr	q1, [sp, #32]
   12b04:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12b08:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12b0c:	add	x0, x0, #0xb00
   12b10:	ldr	q1, [x0]
   12b14:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12b18:	ldr	q1, [sp, #32]
   12b1c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12b20:	ldr	q4, [sp, #96]
   12b24:	mov	v1.16b, v4.16b
   12b28:	str	q4, [sp, #64]
   12b2c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12b30:	str	q0, [sp, #48]
   12b34:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12b38:	add	x0, x0, #0xb10
   12b3c:	ldr	q0, [sp, #32]
   12b40:	ldr	q1, [x0]
   12b44:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12b48:	ldr	q1, [sp, #32]
   12b4c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12b50:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12b54:	add	x0, x0, #0xb20
   12b58:	ldr	q1, [x0]
   12b5c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12b60:	ldr	q1, [sp, #32]
   12b64:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12b68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12b6c:	add	x0, x0, #0xb30
   12b70:	ldr	q1, [x0]
   12b74:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12b78:	ldr	q1, [sp, #32]
   12b7c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12b80:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12b84:	add	x0, x0, #0xb40
   12b88:	ldr	q1, [x0]
   12b8c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12b90:	ldr	q1, [sp, #32]
   12b94:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12b98:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12b9c:	add	x0, x0, #0xb50
   12ba0:	ldr	q1, [x0]
   12ba4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12ba8:	ldr	q1, [sp, #32]
   12bac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12bb0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12bb4:	add	x0, x0, #0xb60
   12bb8:	ldr	q1, [x0]
   12bbc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12bc0:	ldr	q1, [sp, #32]
   12bc4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12bc8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12bcc:	add	x0, x0, #0xb70
   12bd0:	ldr	q1, [x0]
   12bd4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12bd8:	ldr	q1, [sp, #32]
   12bdc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12be0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12be4:	add	x0, x0, #0xb80
   12be8:	ldr	q1, [x0]
   12bec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12bf0:	ldr	q1, [sp, #32]
   12bf4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12bf8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12bfc:	add	x0, x0, #0xb90
   12c00:	ldr	q1, [x0]
   12c04:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12c08:	mov	v1.16b, v0.16b
   12c0c:	ldr	q2, [sp, #48]
   12c10:	mov	v0.16b, v2.16b
   12c14:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   12c18:	ldr	q4, [sp, #64]
   12c1c:	str	q0, [sp, #48]
   12c20:	mov	v1.16b, v4.16b
   12c24:	mov	v0.16b, v4.16b
   12c28:	str	q4, [sp, #32]
   12c2c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12c30:	ldr	q6, [sp, #80]
   12c34:	mov	v1.16b, v0.16b
   12c38:	mov	v0.16b, v6.16b
   12c3c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   12c40:	ldr	q2, [sp, #48]
   12c44:	mov	v1.16b, v0.16b
   12c48:	mov	v0.16b, v2.16b
   12c4c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12c50:	ldr	q4, [sp, #32]
   12c54:	mov	v1.16b, v4.16b
   12c58:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12c5c:	mov	v1.16b, v0.16b
   12c60:	tbz	w19, #31, 12c88 <__acosl_finite@GLIBC_2.17+0x610>
   12c64:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12c68:	add	x0, x0, #0xa50
   12c6c:	ldr	q0, [x0]
   12c70:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12c74:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12c78:	add	x0, x0, #0xa60
   12c7c:	ldr	q1, [x0]
   12c80:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12c84:	mov	v1.16b, v0.16b
   12c88:	mov	v0.16b, v1.16b
   12c8c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12c90:	ldr	x19, [sp, #16]
   12c94:	ldp	x29, x30, [sp], #112
   12c98:	ret
   12c9c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12ca0:	add	x0, x0, #0xd20
   12ca4:	ldr	q1, [x0]
   12ca8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12cac:	str	q0, [sp, #32]
   12cb0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12cb4:	add	x0, x0, #0xd30
   12cb8:	ldr	q1, [x0]
   12cbc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12cc0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12cc4:	add	x0, x0, #0xd40
   12cc8:	ldr	q1, [x0]
   12ccc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12cd0:	ldr	q1, [sp, #32]
   12cd4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12cd8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12cdc:	add	x0, x0, #0xd50
   12ce0:	ldr	q1, [x0]
   12ce4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12ce8:	ldr	q1, [sp, #32]
   12cec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12cf0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12cf4:	add	x0, x0, #0xd60
   12cf8:	ldr	q1, [x0]
   12cfc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12d00:	ldr	q1, [sp, #32]
   12d04:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12d08:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12d0c:	add	x0, x0, #0xd70
   12d10:	ldr	q1, [x0]
   12d14:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12d18:	ldr	q1, [sp, #32]
   12d1c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12d20:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12d24:	add	x0, x0, #0xd80
   12d28:	ldr	q1, [x0]
   12d2c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12d30:	ldr	q1, [sp, #32]
   12d34:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12d38:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12d3c:	add	x0, x0, #0xd90
   12d40:	ldr	q1, [x0]
   12d44:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12d48:	ldr	q1, [sp, #32]
   12d4c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12d50:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12d54:	add	x0, x0, #0xda0
   12d58:	ldr	q1, [x0]
   12d5c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12d60:	ldr	q1, [sp, #32]
   12d64:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12d68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12d6c:	add	x0, x0, #0xdb0
   12d70:	ldr	q1, [x0]
   12d74:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12d78:	ldr	q1, [sp, #32]
   12d7c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12d80:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12d84:	add	x0, x0, #0xdc0
   12d88:	ldr	q1, [x0]
   12d8c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12d90:	ldr	q1, [sp, #32]
   12d94:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12d98:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12d9c:	add	x0, x0, #0xdd0
   12da0:	ldr	q1, [x0]
   12da4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12da8:	ldr	q1, [sp, #32]
   12dac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12db0:	str	q0, [sp, #48]
   12db4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12db8:	add	x0, x0, #0xde0
   12dbc:	ldr	q0, [sp, #32]
   12dc0:	ldr	q1, [x0]
   12dc4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12dc8:	ldr	q1, [sp, #32]
   12dcc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12dd0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12dd4:	add	x0, x0, #0xdf0
   12dd8:	ldr	q1, [x0]
   12ddc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12de0:	ldr	q1, [sp, #32]
   12de4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12de8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12dec:	add	x0, x0, #0xe00
   12df0:	ldr	q1, [x0]
   12df4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12df8:	ldr	q1, [sp, #32]
   12dfc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12e00:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12e04:	add	x0, x0, #0xe10
   12e08:	ldr	q1, [x0]
   12e0c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12e10:	ldr	q1, [sp, #32]
   12e14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12e18:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12e1c:	add	x0, x0, #0xe20
   12e20:	ldr	q1, [x0]
   12e24:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12e28:	ldr	q1, [sp, #32]
   12e2c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12e30:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12e34:	add	x0, x0, #0xe30
   12e38:	ldr	q1, [x0]
   12e3c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12e40:	ldr	q1, [sp, #32]
   12e44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12e48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12e4c:	add	x0, x0, #0xe40
   12e50:	ldr	q1, [x0]
   12e54:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12e58:	ldr	q1, [sp, #32]
   12e5c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12e60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12e64:	add	x0, x0, #0xe50
   12e68:	ldr	q1, [x0]
   12e6c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12e70:	ldr	q1, [sp, #32]
   12e74:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12e78:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12e7c:	add	x0, x0, #0xe60
   12e80:	ldr	q1, [x0]
   12e84:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12e88:	ldr	q1, [sp, #32]
   12e8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12e90:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12e94:	add	x0, x0, #0xe70
   12e98:	ldr	q1, [x0]
   12e9c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12ea0:	mov	v1.16b, v0.16b
   12ea4:	ldr	q2, [sp, #48]
   12ea8:	mov	v0.16b, v2.16b
   12eac:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   12eb0:	mov	v1.16b, v0.16b
   12eb4:	tbnz	w19, #31, 13124 <__acosl_finite@GLIBC_2.17+0xaac>
   12eb8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12ebc:	add	x0, x0, #0xe90
   12ec0:	ldr	q1, [x0]
   12ec4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12ec8:	b	126c8 <__acosl_finite@GLIBC_2.17+0x50>
   12ecc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12ed0:	add	x0, x0, #0xa50
   12ed4:	ldr	q1, [x0]
   12ed8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12edc:	add	x0, x0, #0xa60
   12ee0:	ldr	q0, [x0]
   12ee4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12ee8:	b	126c8 <__acosl_finite@GLIBC_2.17+0x50>
   12eec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12ef0:	add	x0, x0, #0xba0
   12ef4:	fmov	d0, x2
   12ef8:	ldr	q1, [x0]
   12efc:	fmov	v0.d[1], x3
   12f00:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12f04:	str	q0, [sp, #32]
   12f08:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12f0c:	add	x0, x0, #0xbb0
   12f10:	ldr	q1, [x0]
   12f14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12f18:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12f1c:	add	x0, x0, #0xbc0
   12f20:	ldr	q1, [x0]
   12f24:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12f28:	ldr	q1, [sp, #32]
   12f2c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12f30:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12f34:	add	x0, x0, #0xbd0
   12f38:	ldr	q1, [x0]
   12f3c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12f40:	ldr	q1, [sp, #32]
   12f44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12f48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12f4c:	add	x0, x0, #0xbe0
   12f50:	ldr	q1, [x0]
   12f54:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12f58:	ldr	q1, [sp, #32]
   12f5c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12f60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12f64:	add	x0, x0, #0xbf0
   12f68:	ldr	q1, [x0]
   12f6c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12f70:	ldr	q1, [sp, #32]
   12f74:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12f78:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12f7c:	add	x0, x0, #0xc00
   12f80:	ldr	q1, [x0]
   12f84:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12f88:	ldr	q1, [sp, #32]
   12f8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12f90:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12f94:	add	x0, x0, #0xc10
   12f98:	ldr	q1, [x0]
   12f9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12fa0:	ldr	q1, [sp, #32]
   12fa4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12fa8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12fac:	add	x0, x0, #0xc20
   12fb0:	ldr	q1, [x0]
   12fb4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12fb8:	ldr	q1, [sp, #32]
   12fbc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12fc0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12fc4:	add	x0, x0, #0xc30
   12fc8:	ldr	q1, [x0]
   12fcc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   12fd0:	ldr	q1, [sp, #32]
   12fd4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12fd8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12fdc:	add	x0, x0, #0xc40
   12fe0:	ldr	q1, [x0]
   12fe4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   12fe8:	ldr	q1, [sp, #32]
   12fec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   12ff0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   12ff4:	add	x0, x0, #0xc50
   12ff8:	ldr	q1, [x0]
   12ffc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13000:	ldr	q1, [sp, #32]
   13004:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13008:	str	q0, [sp, #48]
   1300c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13010:	add	x0, x0, #0xc60
   13014:	ldr	q0, [sp, #32]
   13018:	ldr	q1, [x0]
   1301c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13020:	ldr	q1, [sp, #32]
   13024:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13028:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1302c:	add	x0, x0, #0xc70
   13030:	ldr	q1, [x0]
   13034:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13038:	ldr	q1, [sp, #32]
   1303c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13040:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13044:	add	x0, x0, #0xc80
   13048:	ldr	q1, [x0]
   1304c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13050:	ldr	q1, [sp, #32]
   13054:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13058:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1305c:	add	x0, x0, #0xc90
   13060:	ldr	q1, [x0]
   13064:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13068:	ldr	q1, [sp, #32]
   1306c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13070:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13074:	add	x0, x0, #0xca0
   13078:	ldr	q1, [x0]
   1307c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13080:	ldr	q1, [sp, #32]
   13084:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13088:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1308c:	add	x0, x0, #0xcb0
   13090:	ldr	q1, [x0]
   13094:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13098:	ldr	q1, [sp, #32]
   1309c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   130a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   130a4:	add	x0, x0, #0xcc0
   130a8:	ldr	q1, [x0]
   130ac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   130b0:	ldr	q1, [sp, #32]
   130b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   130b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   130bc:	add	x0, x0, #0xcd0
   130c0:	ldr	q1, [x0]
   130c4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   130c8:	ldr	q1, [sp, #32]
   130cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   130d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   130d4:	add	x0, x0, #0xce0
   130d8:	ldr	q1, [x0]
   130dc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   130e0:	ldr	q1, [sp, #32]
   130e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   130e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   130ec:	add	x0, x0, #0xcf0
   130f0:	ldr	q1, [x0]
   130f4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   130f8:	mov	v1.16b, v0.16b
   130fc:	ldr	q2, [sp, #48]
   13100:	mov	v0.16b, v2.16b
   13104:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13108:	mov	v1.16b, v0.16b
   1310c:	tbnz	w19, #31, 13138 <__acosl_finite@GLIBC_2.17+0xac0>
   13110:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13114:	add	x0, x0, #0xd10
   13118:	ldr	q1, [x0]
   1311c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13120:	b	126c8 <__acosl_finite@GLIBC_2.17+0x50>
   13124:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13128:	add	x0, x0, #0xe80
   1312c:	ldr	q0, [x0]
   13130:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13134:	b	126c8 <__acosl_finite@GLIBC_2.17+0x50>
   13138:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1313c:	add	x0, x0, #0xd00
   13140:	ldr	q0, [x0]
   13144:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13148:	b	126c8 <__acosl_finite@GLIBC_2.17+0x50>
   1314c:	nop

0000000000013150 <__acoshl_finite@GLIBC_2.17>:
   13150:	stp	x29, x30, [sp, #-80]!
   13154:	mov	x1, #0x3ffeffffffffffff    	// #4611404543450677247
   13158:	mov	x29, sp
   1315c:	stp	x19, x20, [sp, #16]
   13160:	str	q0, [sp, #32]
   13164:	ldp	x19, x20, [sp, #32]
   13168:	cmp	x20, x1
   1316c:	b.le	13240 <__acoshl_finite@GLIBC_2.17+0xf0>
   13170:	mov	x1, #0x4034ffffffffffff    	// #4626604192193052671
   13174:	cmp	x20, x1
   13178:	b.le	131a0 <__acoshl_finite@GLIBC_2.17+0x50>
   1317c:	mov	x1, #0x7ffeffffffffffff    	// #9223090561878065151
   13180:	cmp	x20, x1
   13184:	b.le	132c8 <__acoshl_finite@GLIBC_2.17+0x178>
   13188:	stp	x19, x20, [sp, #32]
   1318c:	ldr	q1, [sp, #32]
   13190:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13194:	ldp	x19, x20, [sp, #16]
   13198:	ldp	x29, x30, [sp], #80
   1319c:	ret
   131a0:	mov	x2, #0xc001000000000000    	// #-4611404543450677248
   131a4:	add	x2, x20, x2
   131a8:	orr	x1, x2, x19
   131ac:	cbz	x1, 132b8 <__acoshl_finite@GLIBC_2.17+0x168>
   131b0:	mov	x1, #0x4000000000000000    	// #4611686018427387904
   131b4:	cmp	x20, x1
   131b8:	b.le	1325c <__acoshl_finite@GLIBC_2.17+0x10c>
   131bc:	stp	x19, x20, [sp, #32]
   131c0:	ldr	q1, [sp, #32]
   131c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   131c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   131cc:	add	x0, x0, #0x2f0
   131d0:	ldr	q1, [x0]
   131d4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   131d8:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   131dc:	stp	x19, x20, [sp, #32]
   131e0:	stp	x19, x20, [sp, #48]
   131e4:	ldr	q1, [sp, #32]
   131e8:	str	q0, [sp, #64]
   131ec:	ldr	q0, [sp, #48]
   131f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   131f4:	stp	x19, x20, [sp, #32]
   131f8:	mov	v2.16b, v0.16b
   131fc:	ldr	q1, [sp, #32]
   13200:	ldr	q4, [sp, #64]
   13204:	str	q2, [sp, #48]
   13208:	mov	v0.16b, v4.16b
   1320c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13210:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13214:	add	x0, x0, #0x2f0
   13218:	mov	v1.16b, v0.16b
   1321c:	ldr	q0, [x0]
   13220:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13224:	mov	v1.16b, v0.16b
   13228:	ldr	q2, [sp, #48]
   1322c:	mov	v0.16b, v2.16b
   13230:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13234:	ldp	x19, x20, [sp, #16]
   13238:	ldp	x29, x30, [sp], #80
   1323c:	b	1c928 <__logl_finite@GLIBC_2.17>
   13240:	mov	v1.16b, v0.16b
   13244:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13248:	mov	v1.16b, v0.16b
   1324c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13250:	ldp	x19, x20, [sp, #16]
   13254:	ldp	x29, x30, [sp], #80
   13258:	ret
   1325c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13260:	add	x0, x0, #0x2f0
   13264:	ldr	q1, [x0]
   13268:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1326c:	mov	v1.16b, v0.16b
   13270:	str	q0, [sp, #32]
   13274:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13278:	ldr	q2, [sp, #32]
   1327c:	str	q0, [sp, #48]
   13280:	mov	v1.16b, v2.16b
   13284:	mov	v0.16b, v2.16b
   13288:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1328c:	mov	v1.16b, v0.16b
   13290:	ldr	q4, [sp, #48]
   13294:	mov	v0.16b, v4.16b
   13298:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1329c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   132a0:	ldr	q2, [sp, #32]
   132a4:	mov	v1.16b, v2.16b
   132a8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   132ac:	ldp	x19, x20, [sp, #16]
   132b0:	ldp	x29, x30, [sp], #80
   132b4:	b	22378 <floorf128@@GLIBC_2.27+0x128>
   132b8:	movi	v0.2d, #0x0
   132bc:	ldp	x19, x20, [sp, #16]
   132c0:	ldp	x29, x30, [sp], #80
   132c4:	ret
   132c8:	bl	1c928 <__logl_finite@GLIBC_2.17>
   132cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   132d0:	add	x0, x0, #0xea0
   132d4:	ldr	q1, [x0]
   132d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   132dc:	ldp	x19, x20, [sp, #16]
   132e0:	ldp	x29, x30, [sp], #80
   132e4:	ret

00000000000132e8 <__asinl_finite@GLIBC_2.17>:
   132e8:	stp	x29, x30, [sp, #-128]!
   132ec:	mov	w1, #0x3ffeffff            	// #1073676287
   132f0:	mov	x29, sp
   132f4:	str	q0, [sp, #64]
   132f8:	ldp	x2, x3, [sp, #64]
   132fc:	stp	x19, x20, [sp, #16]
   13300:	ldr	x0, [sp, #72]
   13304:	ubfx	x19, x0, #32, #31
   13308:	cmp	w19, w1
   1330c:	bfi	x3, x19, #32, #32
   13310:	b.le	13350 <__asinl_finite@GLIBC_2.17+0x68>
   13314:	mov	w1, #0x3fff0000            	// #1073676288
   13318:	cmp	w19, w1
   1331c:	b.eq	135e8 <__asinl_finite@GLIBC_2.17+0x300>  // b.none
   13320:	ldr	q1, [sp, #64]
   13324:	mov	v0.16b, v1.16b
   13328:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1332c:	mov	v1.16b, v0.16b
   13330:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13334:	str	q0, [sp, #48]
   13338:	ldp	x1, x0, [sp, #48]
   1333c:	stp	x1, x0, [sp, #48]
   13340:	ldp	x19, x20, [sp, #16]
   13344:	ldr	q0, [sp, #48]
   13348:	ldp	x29, x30, [sp], #128
   1334c:	ret
   13350:	str	x21, [sp, #32]
   13354:	lsr	x20, x0, #32
   13358:	mov	w0, #0x3ffdffff            	// #1073610751
   1335c:	cmp	w19, w0
   13360:	b.gt	13650 <__asinl_finite@GLIBC_2.17+0x368>
   13364:	mov	w0, #0x3fc5ffff            	// #1069940735
   13368:	cmp	w19, w0
   1336c:	b.le	138e8 <__asinl_finite@GLIBC_2.17+0x600>
   13370:	ldr	q1, [sp, #64]
   13374:	mov	w21, #0x1                   	// #1
   13378:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1337c:	str	q0, [sp, #48]
   13380:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13384:	add	x0, x0, #0xa70
   13388:	ldr	q0, [sp, #48]
   1338c:	ldr	q1, [x0]
   13390:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13394:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13398:	add	x0, x0, #0xa80
   1339c:	ldr	q1, [x0]
   133a0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   133a4:	ldr	q1, [sp, #48]
   133a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   133ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   133b0:	add	x0, x0, #0xa90
   133b4:	ldr	q1, [x0]
   133b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   133bc:	ldr	q1, [sp, #48]
   133c0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   133c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   133c8:	add	x0, x0, #0xaa0
   133cc:	ldr	q1, [x0]
   133d0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   133d4:	ldr	q1, [sp, #48]
   133d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   133dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   133e0:	add	x0, x0, #0xab0
   133e4:	ldr	q1, [x0]
   133e8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   133ec:	ldr	q1, [sp, #48]
   133f0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   133f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   133f8:	add	x0, x0, #0xac0
   133fc:	ldr	q1, [x0]
   13400:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13404:	ldr	q1, [sp, #48]
   13408:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1340c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13410:	add	x0, x0, #0xad0
   13414:	ldr	q1, [x0]
   13418:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1341c:	ldr	q1, [sp, #48]
   13420:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13424:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13428:	add	x0, x0, #0xae0
   1342c:	ldr	q1, [x0]
   13430:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13434:	ldr	q1, [sp, #48]
   13438:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1343c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13440:	add	x0, x0, #0xaf0
   13444:	ldr	q1, [x0]
   13448:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1344c:	ldr	q1, [sp, #48]
   13450:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13454:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13458:	add	x0, x0, #0xb00
   1345c:	ldr	q1, [x0]
   13460:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13464:	ldr	q1, [sp, #48]
   13468:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1346c:	str	q0, [sp, #80]
   13470:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13474:	add	x0, x0, #0xb10
   13478:	ldr	q0, [sp, #48]
   1347c:	ldr	q1, [x0]
   13480:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13484:	ldr	q1, [sp, #48]
   13488:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1348c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13490:	add	x0, x0, #0xb20
   13494:	ldr	q1, [x0]
   13498:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1349c:	ldr	q1, [sp, #48]
   134a0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   134a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   134a8:	add	x0, x0, #0xb30
   134ac:	ldr	q1, [x0]
   134b0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   134b4:	ldr	q1, [sp, #48]
   134b8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   134bc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   134c0:	add	x0, x0, #0xb40
   134c4:	ldr	q1, [x0]
   134c8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   134cc:	ldr	q1, [sp, #48]
   134d0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   134d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   134d8:	add	x0, x0, #0xb50
   134dc:	ldr	q1, [x0]
   134e0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   134e4:	ldr	q1, [sp, #48]
   134e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   134ec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   134f0:	add	x0, x0, #0xb60
   134f4:	ldr	q1, [x0]
   134f8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   134fc:	ldr	q1, [sp, #48]
   13500:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13504:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13508:	add	x0, x0, #0xb70
   1350c:	ldr	q1, [x0]
   13510:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13514:	ldr	q1, [sp, #48]
   13518:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1351c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13520:	add	x0, x0, #0xb80
   13524:	ldr	q1, [x0]
   13528:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1352c:	ldr	q1, [sp, #48]
   13530:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13534:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13538:	add	x0, x0, #0xb90
   1353c:	ldr	q1, [x0]
   13540:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13544:	cbnz	w21, 13940 <__asinl_finite@GLIBC_2.17+0x658>
   13548:	str	q0, [sp, #64]
   1354c:	ldr	q0, [sp, #48]
   13550:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   13554:	mov	w0, #0xf332                	// #62258
   13558:	ldr	q4, [sp, #64]
   1355c:	movk	w0, #0x3ffe, lsl #16
   13560:	cmp	w19, w0
   13564:	b.le	1396c <__asinl_finite@GLIBC_2.17+0x684>
   13568:	str	q0, [sp, #48]
   1356c:	mov	v1.16b, v4.16b
   13570:	ldr	q0, [sp, #80]
   13574:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13578:	ldr	q6, [sp, #48]
   1357c:	mov	v1.16b, v6.16b
   13580:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13584:	ldr	q6, [sp, #48]
   13588:	mov	v1.16b, v6.16b
   1358c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13590:	mov	v1.16b, v0.16b
   13594:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13598:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1359c:	add	x0, x0, #0xa50
   135a0:	ldr	q1, [x0]
   135a4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   135a8:	mov	v1.16b, v0.16b
   135ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   135b0:	add	x0, x0, #0xa60
   135b4:	ldr	q0, [x0]
   135b8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   135bc:	str	q0, [sp, #48]
   135c0:	ldp	x1, x0, [sp, #48]
   135c4:	cmp	w20, #0x0
   135c8:	ldp	x19, x20, [sp, #16]
   135cc:	ldr	x21, [sp, #32]
   135d0:	eor	x2, x0, #0x8000000000000000
   135d4:	csel	x0, x2, x0, lt  // lt = tstop
   135d8:	stp	x1, x0, [sp, #48]
   135dc:	ldr	q0, [sp, #48]
   135e0:	ldp	x29, x30, [sp], #128
   135e4:	ret
   135e8:	ldr	x1, [sp, #64]
   135ec:	lsr	x2, x1, #32
   135f0:	orr	w0, w0, w2
   135f4:	orr	w0, w0, w1
   135f8:	cbnz	w0, 13320 <__asinl_finite@GLIBC_2.17+0x38>
   135fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13600:	add	x0, x0, #0xa60
   13604:	ldr	q1, [x0]
   13608:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1360c:	str	q0, [sp, #48]
   13610:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13614:	add	x0, x0, #0xa50
   13618:	ldr	q0, [sp, #64]
   1361c:	ldr	q1, [x0]
   13620:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13624:	mov	v1.16b, v0.16b
   13628:	ldr	q2, [sp, #48]
   1362c:	mov	v0.16b, v2.16b
   13630:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13634:	str	q0, [sp, #48]
   13638:	ldp	x1, x0, [sp, #48]
   1363c:	stp	x1, x0, [sp, #48]
   13640:	ldp	x19, x20, [sp, #16]
   13644:	ldr	q0, [sp, #48]
   13648:	ldp	x29, x30, [sp], #128
   1364c:	ret
   13650:	fmov	d0, x2
   13654:	mov	w0, #0x3fff                	// #16383
   13658:	movk	w0, #0x3ffe, lsl #16
   1365c:	cmp	w19, w0
   13660:	fmov	v0.d[1], x3
   13664:	b.gt	138b8 <__asinl_finite@GLIBC_2.17+0x5d0>
   13668:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1366c:	add	x0, x0, #0xd20
   13670:	ldr	q1, [x0]
   13674:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13678:	str	q0, [sp, #48]
   1367c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13680:	add	x0, x0, #0xed0
   13684:	ldr	q1, [x0]
   13688:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1368c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13690:	add	x0, x0, #0xd40
   13694:	ldr	q1, [x0]
   13698:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1369c:	ldr	q1, [sp, #48]
   136a0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   136a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   136a8:	add	x0, x0, #0xd50
   136ac:	ldr	q1, [x0]
   136b0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   136b4:	ldr	q1, [sp, #48]
   136b8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   136bc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   136c0:	add	x0, x0, #0xd60
   136c4:	ldr	q1, [x0]
   136c8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   136cc:	ldr	q1, [sp, #48]
   136d0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   136d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   136d8:	add	x0, x0, #0xd70
   136dc:	ldr	q1, [x0]
   136e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   136e4:	ldr	q1, [sp, #48]
   136e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   136ec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   136f0:	add	x0, x0, #0xd80
   136f4:	ldr	q1, [x0]
   136f8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   136fc:	ldr	q1, [sp, #48]
   13700:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13704:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13708:	add	x0, x0, #0xd90
   1370c:	ldr	q1, [x0]
   13710:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13714:	ldr	q1, [sp, #48]
   13718:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1371c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13720:	add	x0, x0, #0xda0
   13724:	ldr	q1, [x0]
   13728:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1372c:	ldr	q1, [sp, #48]
   13730:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13734:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13738:	add	x0, x0, #0xdb0
   1373c:	ldr	q1, [x0]
   13740:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13744:	ldr	q1, [sp, #48]
   13748:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1374c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13750:	add	x0, x0, #0xdc0
   13754:	ldr	q1, [x0]
   13758:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1375c:	ldr	q1, [sp, #48]
   13760:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13764:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13768:	add	x0, x0, #0xdd0
   1376c:	ldr	q1, [x0]
   13770:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13774:	ldr	q1, [sp, #48]
   13778:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1377c:	str	q0, [sp, #64]
   13780:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13784:	add	x0, x0, #0xde0
   13788:	ldr	q0, [sp, #48]
   1378c:	ldr	q1, [x0]
   13790:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13794:	ldr	q1, [sp, #48]
   13798:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1379c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   137a0:	add	x0, x0, #0xdf0
   137a4:	ldr	q1, [x0]
   137a8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   137ac:	ldr	q1, [sp, #48]
   137b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   137b4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   137b8:	add	x0, x0, #0xe00
   137bc:	ldr	q1, [x0]
   137c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   137c4:	ldr	q1, [sp, #48]
   137c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   137cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   137d0:	add	x0, x0, #0xe10
   137d4:	ldr	q1, [x0]
   137d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   137dc:	ldr	q1, [sp, #48]
   137e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   137e4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   137e8:	add	x0, x0, #0xe20
   137ec:	ldr	q1, [x0]
   137f0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   137f4:	ldr	q1, [sp, #48]
   137f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   137fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13800:	add	x0, x0, #0xe30
   13804:	ldr	q1, [x0]
   13808:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1380c:	ldr	q1, [sp, #48]
   13810:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13814:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13818:	add	x0, x0, #0xe40
   1381c:	ldr	q1, [x0]
   13820:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13824:	ldr	q1, [sp, #48]
   13828:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1382c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13830:	add	x0, x0, #0xe50
   13834:	ldr	q1, [x0]
   13838:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1383c:	ldr	q1, [sp, #48]
   13840:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13844:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13848:	add	x0, x0, #0xe60
   1384c:	ldr	q1, [x0]
   13850:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13854:	ldr	q1, [sp, #48]
   13858:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1385c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13860:	add	x0, x0, #0xe70
   13864:	ldr	q1, [x0]
   13868:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1386c:	mov	v1.16b, v0.16b
   13870:	ldr	q2, [sp, #64]
   13874:	mov	v0.16b, v2.16b
   13878:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1387c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13880:	add	x0, x0, #0xee0
   13884:	ldr	q1, [x0]
   13888:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1388c:	str	q0, [sp, #48]
   13890:	ldp	x1, x0, [sp, #48]
   13894:	cmp	w20, #0x0
   13898:	ldp	x19, x20, [sp, #16]
   1389c:	ldr	x21, [sp, #32]
   138a0:	eor	x2, x0, #0x8000000000000000
   138a4:	csel	x0, x2, x0, lt  // lt = tstop
   138a8:	stp	x1, x0, [sp, #48]
   138ac:	ldr	q0, [sp, #48]
   138b0:	ldp	x29, x30, [sp], #128
   138b4:	ret
   138b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   138bc:	add	x0, x0, #0x2f0
   138c0:	mov	v1.16b, v0.16b
   138c4:	mov	w21, #0x0                   	// #0
   138c8:	ldr	q0, [x0]
   138cc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   138d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   138d4:	add	x0, x0, #0x330
   138d8:	ldr	q1, [x0]
   138dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   138e0:	str	q0, [sp, #48]
   138e4:	b	13380 <__asinl_finite@GLIBC_2.17+0x98>
   138e8:	ldr	x0, [sp, #64]
   138ec:	str	x0, [sp, #48]
   138f0:	ldr	x0, [sp, #72]
   138f4:	and	x0, x0, #0x7fffffffffffffff
   138f8:	str	x0, [sp, #56]
   138fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13900:	add	x0, x0, #0xeb0
   13904:	ldr	q0, [sp, #48]
   13908:	ldr	q1, [x0]
   1390c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   13910:	tbz	w0, #31, 13920 <__asinl_finite@GLIBC_2.17+0x638>
   13914:	ldr	q1, [sp, #64]
   13918:	mov	v0.16b, v1.16b
   1391c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13920:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13924:	add	x0, x0, #0xec0
   13928:	ldr	q0, [sp, #64]
   1392c:	ldr	q1, [x0]
   13930:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13934:	ldr	x21, [sp, #32]
   13938:	ldp	x1, x0, [sp, #64]
   1393c:	b	1333c <__asinl_finite@GLIBC_2.17+0x54>
   13940:	mov	v1.16b, v0.16b
   13944:	ldr	q0, [sp, #80]
   13948:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1394c:	ldr	q1, [sp, #64]
   13950:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13954:	ldr	q1, [sp, #64]
   13958:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1395c:	str	q0, [sp, #48]
   13960:	ldr	x21, [sp, #32]
   13964:	ldp	x1, x0, [sp, #48]
   13968:	b	1333c <__asinl_finite@GLIBC_2.17+0x54>
   1396c:	fmov	x3, v0.d[1]
   13970:	mov	x2, #0x0                   	// #0
   13974:	fmov	d2, x2
   13978:	mov	v1.16b, v0.16b
   1397c:	str	q4, [sp, #64]
   13980:	str	q0, [sp, #112]
   13984:	fmov	v2.d[1], x3
   13988:	str	q2, [sp, #96]
   1398c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13990:	ldr	q4, [sp, #64]
   13994:	str	q0, [sp, #64]
   13998:	ldr	q0, [sp, #80]
   1399c:	mov	v1.16b, v4.16b
   139a0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   139a4:	mov	v1.16b, v0.16b
   139a8:	ldr	q4, [sp, #64]
   139ac:	mov	v0.16b, v4.16b
   139b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   139b4:	ldr	q2, [sp, #96]
   139b8:	str	q0, [sp, #80]
   139bc:	mov	v1.16b, v2.16b
   139c0:	mov	v0.16b, v2.16b
   139c4:	str	q2, [sp, #64]
   139c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   139cc:	mov	v1.16b, v0.16b
   139d0:	ldr	q0, [sp, #48]
   139d4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   139d8:	str	q0, [sp, #48]
   139dc:	ldr	q2, [sp, #64]
   139e0:	ldr	q6, [sp, #112]
   139e4:	mov	v1.16b, v2.16b
   139e8:	mov	v0.16b, v6.16b
   139ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   139f0:	ldr	q16, [sp, #48]
   139f4:	mov	v1.16b, v0.16b
   139f8:	mov	v0.16b, v16.16b
   139fc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13a00:	mov	v1.16b, v0.16b
   13a04:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13a08:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13a0c:	add	x0, x0, #0xa50
   13a10:	mov	v1.16b, v0.16b
   13a14:	ldr	q0, [x0]
   13a18:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13a1c:	mov	v1.16b, v0.16b
   13a20:	ldr	q4, [sp, #80]
   13a24:	mov	v0.16b, v4.16b
   13a28:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13a2c:	mov	v4.16b, v0.16b
   13a30:	ldr	q2, [sp, #64]
   13a34:	mov	v1.16b, v2.16b
   13a38:	mov	v0.16b, v2.16b
   13a3c:	str	q4, [sp, #48]
   13a40:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13a44:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13a48:	add	x0, x0, #0xef0
   13a4c:	mov	v1.16b, v0.16b
   13a50:	ldr	q0, [x0]
   13a54:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13a58:	mov	v1.16b, v0.16b
   13a5c:	ldr	q4, [sp, #48]
   13a60:	mov	v0.16b, v4.16b
   13a64:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13a68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13a6c:	mov	v1.16b, v0.16b
   13a70:	add	x0, x0, #0xef0
   13a74:	b	135b4 <__asinl_finite@GLIBC_2.17+0x2cc>

0000000000013a78 <__atan2l_finite@GLIBC_2.17>:
   13a78:	stp	x29, x30, [sp, #-64]!
   13a7c:	mov	x3, #0x7fff000000000000    	// #9223090561878065152
   13a80:	mov	x29, sp
   13a84:	str	q1, [sp, #48]
   13a88:	ldp	x6, x5, [sp, #48]
   13a8c:	str	q0, [sp, #32]
   13a90:	ldp	x9, x8, [sp, #32]
   13a94:	neg	x0, x6
   13a98:	and	x7, x5, #0x7fffffffffffffff
   13a9c:	orr	x0, x0, x6
   13aa0:	orr	x0, x7, x0, lsr #63
   13aa4:	cmp	x0, x3
   13aa8:	b.hi	13b70 <__atan2l_finite@GLIBC_2.17+0xf8>  // b.pmore
   13aac:	neg	x0, x9
   13ab0:	and	x10, x8, #0x7fffffffffffffff
   13ab4:	orr	x0, x0, x9
   13ab8:	mov	x11, x8
   13abc:	orr	x0, x10, x0, lsr #63
   13ac0:	cmp	x0, x3
   13ac4:	b.hi	13b70 <__atan2l_finite@GLIBC_2.17+0xf8>  // b.pmore
   13ac8:	mov	x0, #0xc001000000000000    	// #-4611404543450677248
   13acc:	add	x0, x5, x0
   13ad0:	orr	x0, x0, x6
   13ad4:	cbz	x0, 13bcc <__atan2l_finite@GLIBC_2.17+0x154>
   13ad8:	str	x19, [sp, #16]
   13adc:	asr	x19, x5, #62
   13ae0:	and	x19, x19, #0x2
   13ae4:	orr	x2, x10, x9
   13ae8:	orr	x19, x19, x8, lsr #63
   13aec:	cbz	x2, 13b94 <__atan2l_finite@GLIBC_2.17+0x11c>
   13af0:	orr	x1, x7, x6
   13af4:	cbz	x1, 13be8 <__atan2l_finite@GLIBC_2.17+0x170>
   13af8:	cmp	x7, x3
   13afc:	b.eq	13c7c <__atan2l_finite@GLIBC_2.17+0x204>  // b.none
   13b00:	cmp	x10, x3
   13b04:	b.eq	13be8 <__atan2l_finite@GLIBC_2.17+0x170>  // b.none
   13b08:	sub	x7, x10, x7
   13b0c:	asr	x7, x7, #48
   13b10:	cmp	x7, #0x78
   13b14:	b.gt	13c58 <__atan2l_finite@GLIBC_2.17+0x1e0>
   13b18:	stp	xzr, xzr, [sp, #32]
   13b1c:	cmp	x5, #0x0
   13b20:	mov	x0, #0xffffffffffffff88    	// #-120
   13b24:	ccmp	x7, x0, #0x0, lt  // lt = tstop
   13b28:	b.ge	13d50 <__atan2l_finite@GLIBC_2.17+0x2d8>  // b.tcont
   13b2c:	cmp	x19, #0x1
   13b30:	b.eq	13cf4 <__atan2l_finite@GLIBC_2.17+0x27c>  // b.none
   13b34:	cmp	x19, #0x2
   13b38:	b.eq	13cc0 <__atan2l_finite@GLIBC_2.17+0x248>  // b.none
   13b3c:	cbz	x19, 13ca0 <__atan2l_finite@GLIBC_2.17+0x228>
   13b40:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13b44:	add	x0, x0, #0xa30
   13b48:	ldr	q0, [sp, #32]
   13b4c:	ldr	q1, [x0]
   13b50:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13b54:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13b58:	add	x0, x0, #0xa40
   13b5c:	ldr	q1, [x0]
   13b60:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13b64:	str	q0, [sp, #32]
   13b68:	ldr	x19, [sp, #16]
   13b6c:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13b70:	stp	x9, x8, [sp, #32]
   13b74:	stp	x6, x5, [sp, #48]
   13b78:	ldr	q1, [sp, #32]
   13b7c:	ldr	q0, [sp, #48]
   13b80:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13b84:	str	q0, [sp, #32]
   13b88:	ldr	q0, [sp, #32]
   13b8c:	ldp	x29, x30, [sp], #64
   13b90:	ret
   13b94:	cmp	x19, #0x2
   13b98:	b.eq	13c14 <__atan2l_finite@GLIBC_2.17+0x19c>  // b.none
   13b9c:	cmp	x19, #0x3
   13ba0:	b.ne	13bd4 <__atan2l_finite@GLIBC_2.17+0x15c>  // b.any
   13ba4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13ba8:	add	x0, x0, #0xf00
   13bac:	ldr	q1, [x0]
   13bb0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13bb4:	add	x0, x0, #0xf10
   13bb8:	ldr	q0, [x0]
   13bbc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13bc0:	str	q0, [sp, #32]
   13bc4:	ldr	x19, [sp, #16]
   13bc8:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13bcc:	ldp	x29, x30, [sp], #64
   13bd0:	b	1fdc0 <atanf128@@GLIBC_2.27>
   13bd4:	mov	x0, x9
   13bd8:	mov	x1, x8
   13bdc:	stp	x0, x1, [sp, #32]
   13be0:	ldr	x19, [sp, #16]
   13be4:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13be8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13bec:	add	x0, x0, #0xf00
   13bf0:	ldr	q1, [x0]
   13bf4:	tbnz	x11, #63, 13c3c <__atan2l_finite@GLIBC_2.17+0x1c4>
   13bf8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13bfc:	add	x0, x0, #0xa60
   13c00:	ldr	q0, [x0]
   13c04:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13c08:	str	q0, [sp, #32]
   13c0c:	ldr	x19, [sp, #16]
   13c10:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13c14:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13c18:	add	x0, x0, #0xf00
   13c1c:	ldr	q1, [x0]
   13c20:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13c24:	add	x0, x0, #0xa40
   13c28:	ldr	q0, [x0]
   13c2c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13c30:	str	q0, [sp, #32]
   13c34:	ldr	x19, [sp, #16]
   13c38:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13c3c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13c40:	add	x0, x0, #0xf20
   13c44:	ldr	q0, [x0]
   13c48:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13c4c:	str	q0, [sp, #32]
   13c50:	ldr	x19, [sp, #16]
   13c54:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13c58:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13c5c:	add	x0, x0, #0xa50
   13c60:	ldr	q1, [x0]
   13c64:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13c68:	add	x0, x0, #0xa60
   13c6c:	ldr	q0, [x0]
   13c70:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13c74:	str	q0, [sp, #32]
   13c78:	b	13b2c <__atan2l_finite@GLIBC_2.17+0xb4>
   13c7c:	cmp	x10, x7
   13c80:	b.eq	13d10 <__atan2l_finite@GLIBC_2.17+0x298>  // b.none
   13c84:	cmp	x19, #0x2
   13c88:	b.eq	13c14 <__atan2l_finite@GLIBC_2.17+0x19c>  // b.none
   13c8c:	cmp	x19, #0x3
   13c90:	b.eq	13ba4 <__atan2l_finite@GLIBC_2.17+0x12c>  // b.none
   13c94:	stp	xzr, xzr, [sp, #32]
   13c98:	cmp	x19, #0x1
   13c9c:	b.eq	13ca8 <__atan2l_finite@GLIBC_2.17+0x230>  // b.none
   13ca0:	ldr	x19, [sp, #16]
   13ca4:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13ca8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13cac:	add	x0, x0, #0xf60
   13cb0:	ldr	x19, [sp, #16]
   13cb4:	ldr	q0, [x0]
   13cb8:	str	q0, [sp, #32]
   13cbc:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13cc0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13cc4:	add	x0, x0, #0xa30
   13cc8:	ldr	q0, [sp, #32]
   13ccc:	ldr	q1, [x0]
   13cd0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13cd4:	mov	v1.16b, v0.16b
   13cd8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13cdc:	add	x0, x0, #0xa40
   13ce0:	ldr	q0, [x0]
   13ce4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13ce8:	str	q0, [sp, #32]
   13cec:	ldr	x19, [sp, #16]
   13cf0:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13cf4:	ldr	x0, [sp, #40]
   13cf8:	ldp	x2, x3, [sp, #32]
   13cfc:	eor	x0, x0, #0x8000000000000000
   13d00:	ldr	x19, [sp, #16]
   13d04:	mov	x3, x0
   13d08:	stp	x2, x3, [sp, #32]
   13d0c:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13d10:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13d14:	add	x0, x0, #0xf00
   13d18:	cmp	x19, #0x2
   13d1c:	ldr	q1, [x0]
   13d20:	b.eq	13dac <__atan2l_finite@GLIBC_2.17+0x334>  // b.none
   13d24:	cmp	x19, #0x3
   13d28:	b.eq	13d90 <__atan2l_finite@GLIBC_2.17+0x318>  // b.none
   13d2c:	cmp	x19, #0x1
   13d30:	b.eq	13d74 <__atan2l_finite@GLIBC_2.17+0x2fc>  // b.none
   13d34:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13d38:	add	x0, x0, #0xef0
   13d3c:	ldr	q0, [x0]
   13d40:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13d44:	str	q0, [sp, #32]
   13d48:	ldr	x19, [sp, #16]
   13d4c:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13d50:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13d54:	str	q0, [sp, #32]
   13d58:	ldr	x0, [sp, #40]
   13d5c:	and	x0, x0, #0x7fffffffffffffff
   13d60:	str	x0, [sp, #40]
   13d64:	ldr	q0, [sp, #32]
   13d68:	bl	1fdc0 <atanf128@@GLIBC_2.27>
   13d6c:	str	q0, [sp, #32]
   13d70:	b	13b2c <__atan2l_finite@GLIBC_2.17+0xb4>
   13d74:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13d78:	add	x0, x0, #0xf30
   13d7c:	ldr	q0, [x0]
   13d80:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13d84:	str	q0, [sp, #32]
   13d88:	ldr	x19, [sp, #16]
   13d8c:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13d90:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13d94:	add	x0, x0, #0xf50
   13d98:	ldr	q0, [x0]
   13d9c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13da0:	str	q0, [sp, #32]
   13da4:	ldr	x19, [sp, #16]
   13da8:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>
   13dac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13db0:	add	x0, x0, #0xf40
   13db4:	ldr	q0, [x0]
   13db8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13dbc:	str	q0, [sp, #32]
   13dc0:	ldr	x19, [sp, #16]
   13dc4:	b	13b88 <__atan2l_finite@GLIBC_2.17+0x110>

0000000000013dc8 <__atanhl_finite@GLIBC_2.17>:
   13dc8:	stp	x29, x30, [sp, #-96]!
   13dcc:	mov	w0, #0x3ffeffff            	// #1073676287
   13dd0:	mov	x29, sp
   13dd4:	stp	x19, x20, [sp, #16]
   13dd8:	stp	x21, x22, [sp, #32]
   13ddc:	str	x23, [sp, #48]
   13de0:	str	q0, [sp, #64]
   13de4:	ldp	x22, x23, [sp, #64]
   13de8:	ldr	x19, [sp, #72]
   13dec:	ubfx	x20, x19, #32, #31
   13df0:	cmp	w20, w0
   13df4:	bfi	x23, x20, #32, #32
   13df8:	b.ls	13e80 <__atanhl_finite@GLIBC_2.17+0xb8>  // b.plast
   13dfc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13e00:	add	x0, x0, #0x2f0
   13e04:	fmov	d0, x22
   13e08:	ldr	q1, [x0]
   13e0c:	fmov	v0.d[1], x23
   13e10:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   13e14:	cbz	w0, 13e50 <__atanhl_finite@GLIBC_2.17+0x88>
   13e18:	ldr	q1, [sp, #64]
   13e1c:	mov	v0.16b, v1.16b
   13e20:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13e24:	mov	v1.16b, v0.16b
   13e28:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13e2c:	str	q0, [sp, #64]
   13e30:	ldp	x1, x0, [sp, #64]
   13e34:	stp	x1, x0, [sp, #64]
   13e38:	ldp	x19, x20, [sp, #16]
   13e3c:	ldp	x21, x22, [sp, #32]
   13e40:	ldr	x23, [sp, #48]
   13e44:	ldr	q0, [sp, #64]
   13e48:	ldp	x29, x30, [sp], #96
   13e4c:	ret
   13e50:	movi	v1.2d, #0x0
   13e54:	ldr	q0, [sp, #64]
   13e58:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13e5c:	str	q0, [sp, #64]
   13e60:	ldp	x1, x0, [sp, #64]
   13e64:	stp	x1, x0, [sp, #64]
   13e68:	ldp	x19, x20, [sp, #16]
   13e6c:	ldp	x21, x22, [sp, #32]
   13e70:	ldr	x23, [sp, #48]
   13e74:	ldr	q0, [sp, #64]
   13e78:	ldp	x29, x30, [sp], #96
   13e7c:	ret
   13e80:	mov	w0, #0x3fc5ffff            	// #1069940735
   13e84:	lsr	x21, x19, #32
   13e88:	cmp	w20, w0
   13e8c:	b.hi	13f18 <__atanhl_finite@GLIBC_2.17+0x150>  // b.pmore
   13e90:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13e94:	add	x0, x0, #0xf70
   13e98:	ldr	q1, [x0]
   13e9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13ea0:	movi	v1.2d, #0x0
   13ea4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   13ea8:	cmp	w0, #0x0
   13eac:	b.gt	13fb4 <__atanhl_finite@GLIBC_2.17+0x1ec>
   13eb0:	fmov	d1, x22
   13eb4:	fmov	v1.d[1], x23
   13eb8:	mov	v0.16b, v1.16b
   13ebc:	str	q1, [sp, #64]
   13ec0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13ec4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13ec8:	add	x0, x0, #0x2f0
   13ecc:	ldr	q1, [sp, #64]
   13ed0:	str	q0, [sp, #64]
   13ed4:	ldr	q0, [x0]
   13ed8:	str	q1, [sp, #80]
   13edc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13ee0:	mov	v16.16b, v0.16b
   13ee4:	ldr	q6, [sp, #64]
   13ee8:	ldr	q1, [sp, #80]
   13eec:	mov	v0.16b, v6.16b
   13ef0:	str	q6, [sp, #64]
   13ef4:	str	q16, [sp, #80]
   13ef8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13efc:	ldr	q16, [sp, #80]
   13f00:	mov	v1.16b, v16.16b
   13f04:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13f08:	ldr	q6, [sp, #64]
   13f0c:	mov	v1.16b, v6.16b
   13f10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13f14:	b	13f70 <__atanhl_finite@GLIBC_2.17+0x1a8>
   13f18:	fmov	d1, x22
   13f1c:	fmov	v1.d[1], x23
   13f20:	mov	v0.16b, v1.16b
   13f24:	str	q1, [sp, #64]
   13f28:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   13f2c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13f30:	add	x0, x0, #0x2f0
   13f34:	ldr	q1, [sp, #64]
   13f38:	str	q0, [sp, #64]
   13f3c:	ldr	q0, [x0]
   13f40:	str	q1, [sp, #80]
   13f44:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   13f48:	mov	v16.16b, v0.16b
   13f4c:	ldr	q4, [sp, #64]
   13f50:	mov	w0, #0x3ffdffff            	// #1073610751
   13f54:	cmp	w20, w0
   13f58:	ldr	q1, [sp, #80]
   13f5c:	mov	v6.16b, v4.16b
   13f60:	b.ls	13eec <__atanhl_finite@GLIBC_2.17+0x124>  // b.plast
   13f64:	mov	v1.16b, v0.16b
   13f68:	mov	v0.16b, v4.16b
   13f6c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   13f70:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   13f74:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13f78:	add	x0, x0, #0x330
   13f7c:	ldr	q1, [x0]
   13f80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13f84:	str	q0, [sp, #64]
   13f88:	ldp	x1, x0, [sp, #64]
   13f8c:	cmp	w21, #0x0
   13f90:	ldp	x19, x20, [sp, #16]
   13f94:	ldp	x21, x22, [sp, #32]
   13f98:	eor	x2, x0, #0x8000000000000000
   13f9c:	csel	x0, x2, x0, lt  // lt = tstop
   13fa0:	stp	x1, x0, [sp, #64]
   13fa4:	ldr	x23, [sp, #48]
   13fa8:	ldr	q0, [sp, #64]
   13fac:	ldp	x29, x30, [sp], #96
   13fb0:	ret
   13fb4:	ldp	x20, x0, [sp, #64]
   13fb8:	and	x0, x0, #0x7fffffffffffffff
   13fbc:	stp	x20, x0, [sp, #80]
   13fc0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   13fc4:	add	x0, x0, #0xeb0
   13fc8:	ldr	q0, [sp, #80]
   13fcc:	ldr	q1, [x0]
   13fd0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   13fd4:	tbz	w0, #31, 13ff0 <__atanhl_finite@GLIBC_2.17+0x228>
   13fd8:	ldr	q1, [sp, #64]
   13fdc:	mov	v0.16b, v1.16b
   13fe0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   13fe4:	mov	x1, x20
   13fe8:	mov	x0, x19
   13fec:	b	13e34 <__atanhl_finite@GLIBC_2.17+0x6c>
   13ff0:	mov	x1, x20
   13ff4:	mov	x0, x19
   13ff8:	b	13e34 <__atanhl_finite@GLIBC_2.17+0x6c>
   13ffc:	nop

0000000000014000 <__coshl_finite@GLIBC_2.17>:
   14000:	stp	x29, x30, [sp, #-48]!
   14004:	mov	w1, #0x7ffeffff            	// #2147418111
   14008:	mov	x29, sp
   1400c:	str	q0, [sp, #16]
   14010:	ldp	x2, x3, [sp, #16]
   14014:	ldr	x0, [sp, #24]
   14018:	ubfx	x0, x0, #32, #31
   1401c:	cmp	w0, w1
   14020:	bfi	x3, x0, #32, #32
   14024:	b.gt	140c8 <__coshl_finite@GLIBC_2.17+0xc8>
   14028:	mov	w1, #0x62e3                	// #25315
   1402c:	movk	w1, #0x3ffd, lsl #16
   14030:	cmp	w0, w1
   14034:	b.le	140a4 <__coshl_finite@GLIBC_2.17+0xa4>
   14038:	fmov	d0, x2
   1403c:	mov	w1, #0x3fff                	// #16383
   14040:	movk	w1, #0x4004, lsl #16
   14044:	cmp	w0, w1
   14048:	fmov	v0.d[1], x3
   1404c:	b.le	1414c <__coshl_finite@GLIBC_2.17+0x14c>
   14050:	mov	w1, #0x62e3                	// #25315
   14054:	movk	w1, #0x400c, lsl #16
   14058:	cmp	w0, w1
   1405c:	b.le	14198 <__coshl_finite@GLIBC_2.17+0x198>
   14060:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14064:	add	x0, x0, #0xf80
   14068:	str	q0, [sp, #16]
   1406c:	ldr	q1, [x0]
   14070:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   14074:	cmp	w0, #0x0
   14078:	ldr	q0, [sp, #16]
   1407c:	b.le	141b4 <__coshl_finite@GLIBC_2.17+0x1b4>
   14080:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14084:	add	x0, x0, #0xf70
   14088:	ldr	q1, [x0]
   1408c:	mov	v0.16b, v1.16b
   14090:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14094:	mov	v2.16b, v0.16b
   14098:	mov	v0.16b, v2.16b
   1409c:	ldp	x29, x30, [sp], #48
   140a0:	ret
   140a4:	adrp	x4, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   140a8:	add	x4, x4, #0x2f0
   140ac:	mov	w1, #0x3fb7ffff            	// #1069023231
   140b0:	cmp	w0, w1
   140b4:	ldr	q2, [x4]
   140b8:	b.gt	140e0 <__coshl_finite@GLIBC_2.17+0xe0>
   140bc:	mov	v0.16b, v2.16b
   140c0:	ldp	x29, x30, [sp], #48
   140c4:	ret
   140c8:	mov	v1.16b, v0.16b
   140cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   140d0:	mov	v2.16b, v0.16b
   140d4:	mov	v0.16b, v2.16b
   140d8:	ldp	x29, x30, [sp], #48
   140dc:	ret
   140e0:	fmov	d0, x2
   140e4:	str	q2, [sp, #32]
   140e8:	fmov	v0.d[1], x3
   140ec:	bl	21db8 <expm1f128@@GLIBC_2.27>
   140f0:	mov	v1.16b, v0.16b
   140f4:	str	q0, [sp, #16]
   140f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   140fc:	ldr	q2, [sp, #32]
   14100:	mov	v6.16b, v0.16b
   14104:	ldr	q4, [sp, #16]
   14108:	mov	v1.16b, v2.16b
   1410c:	str	q6, [sp, #16]
   14110:	mov	v0.16b, v4.16b
   14114:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14118:	mov	v1.16b, v0.16b
   1411c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14120:	ldr	q6, [sp, #16]
   14124:	mov	v1.16b, v0.16b
   14128:	mov	v0.16b, v6.16b
   1412c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   14130:	ldr	q2, [sp, #32]
   14134:	mov	v1.16b, v2.16b
   14138:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1413c:	mov	v2.16b, v0.16b
   14140:	mov	v0.16b, v2.16b
   14144:	ldp	x29, x30, [sp], #48
   14148:	ret
   1414c:	bl	141f0 <__expl_finite@GLIBC_2.17>
   14150:	str	q0, [sp, #16]
   14154:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14158:	add	x0, x0, #0x330
   1415c:	ldr	q1, [x0]
   14160:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14164:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14168:	add	x0, x0, #0x330
   1416c:	ldr	q2, [sp, #16]
   14170:	str	q0, [sp, #16]
   14174:	ldr	q0, [x0]
   14178:	mov	v1.16b, v2.16b
   1417c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   14180:	mov	v1.16b, v0.16b
   14184:	ldr	q2, [sp, #16]
   14188:	mov	v0.16b, v2.16b
   1418c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14190:	mov	v2.16b, v0.16b
   14194:	b	140bc <__coshl_finite@GLIBC_2.17+0xbc>
   14198:	bl	141f0 <__expl_finite@GLIBC_2.17>
   1419c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   141a0:	add	x0, x0, #0x330
   141a4:	ldr	q1, [x0]
   141a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   141ac:	mov	v2.16b, v0.16b
   141b0:	b	140bc <__coshl_finite@GLIBC_2.17+0xbc>
   141b4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   141b8:	add	x0, x0, #0x330
   141bc:	ldr	q1, [x0]
   141c0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   141c4:	bl	141f0 <__expl_finite@GLIBC_2.17>
   141c8:	str	q0, [sp, #16]
   141cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   141d0:	add	x0, x0, #0x330
   141d4:	ldr	q1, [x0]
   141d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   141dc:	ldr	q2, [sp, #16]
   141e0:	mov	v1.16b, v2.16b
   141e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   141e8:	mov	v2.16b, v0.16b
   141ec:	b	140bc <__coshl_finite@GLIBC_2.17+0xbc>

00000000000141f0 <__expl_finite@GLIBC_2.17>:
   141f0:	stp	x29, x30, [sp, #-160]!
   141f4:	mov	x29, sp
   141f8:	stp	x19, x20, [sp, #16]
   141fc:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   14200:	str	q0, [sp, #96]
   14204:	ldp	x1, x19, [sp, #96]
   14208:	stp	x21, x22, [sp, #32]
   1420c:	ldr	x0, [x20, #4032]
   14210:	mov	x21, x1
   14214:	ldr	x1, [x0]
   14218:	str	x1, [sp, #152]
   1421c:	mov	x1, #0x0                   	// #0
   14220:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14224:	add	x0, x0, #0xf90
   14228:	ldr	q1, [x0]
   1422c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   14230:	cbnz	w0, 14314 <__expl_finite@GLIBC_2.17+0x124>
   14234:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14238:	add	x0, x0, #0xf90
   1423c:	stp	x21, x19, [sp, #96]
   14240:	ldr	q1, [x0]
   14244:	ldr	q0, [sp, #96]
   14248:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1424c:	tbz	w0, #31, 14314 <__expl_finite@GLIBC_2.17+0x124>
   14250:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14254:	add	x0, x0, #0xfa0
   14258:	stp	x21, x19, [sp, #96]
   1425c:	ldr	q1, [x0]
   14260:	ldr	q0, [sp, #96]
   14264:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   14268:	cbnz	w0, 1428c <__expl_finite@GLIBC_2.17+0x9c>
   1426c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14270:	add	x0, x0, #0xfa0
   14274:	stp	x21, x19, [sp, #96]
   14278:	ldr	q1, [x0]
   1427c:	ldr	q0, [sp, #96]
   14280:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   14284:	cmp	w0, #0x0
   14288:	b.gt	14334 <__expl_finite@GLIBC_2.17+0x144>
   1428c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14290:	add	x0, x0, #0x300
   14294:	and	x19, x19, #0x7fffffffffffffff
   14298:	stp	x21, x19, [sp, #96]
   1429c:	ldr	q1, [x0]
   142a0:	ldr	q0, [sp, #96]
   142a4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   142a8:	cbnz	w0, 142f8 <__expl_finite@GLIBC_2.17+0x108>
   142ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   142b0:	add	x0, x0, #0x300
   142b4:	stp	x21, x19, [sp, #96]
   142b8:	ldr	q1, [x0]
   142bc:	ldr	q0, [sp, #96]
   142c0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   142c4:	cmp	w0, #0x0
   142c8:	movi	v2.2d, #0x0
   142cc:	b.le	142f8 <__expl_finite@GLIBC_2.17+0x108>
   142d0:	ldr	x0, [x20, #4032]
   142d4:	ldr	x1, [sp, #152]
   142d8:	ldr	x0, [x0]
   142dc:	eor	x0, x1, x0
   142e0:	cbnz	x0, 1469c <__expl_finite@GLIBC_2.17+0x4ac>
   142e4:	mov	v0.16b, v2.16b
   142e8:	ldp	x19, x20, [sp, #16]
   142ec:	ldp	x21, x22, [sp, #32]
   142f0:	ldp	x29, x30, [sp], #160
   142f4:	ret
   142f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   142fc:	add	x0, x0, #0xf00
   14300:	ldr	q1, [x0]
   14304:	mov	v0.16b, v1.16b
   14308:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1430c:	mov	v2.16b, v0.16b
   14310:	b	142d0 <__expl_finite@GLIBC_2.17+0xe0>
   14314:	adrp	x0, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   14318:	add	x0, x0, #0x80
   1431c:	stp	x21, x19, [sp, #96]
   14320:	ldr	q1, [x0]
   14324:	ldr	q0, [sp, #96]
   14328:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1432c:	mov	v2.16b, v0.16b
   14330:	b	142d0 <__expl_finite@GLIBC_2.17+0xe0>
   14334:	stp	x25, x26, [sp, #64]
   14338:	add	x25, sp, #0x90
   1433c:	mov	x0, x25
   14340:	stp	x23, x24, [sp, #48]
   14344:	mov	w24, #0x3a97                	// #14999
   14348:	mov	x26, #0x0                   	// #0
   1434c:	str	x27, [sp, #80]
   14350:	bl	bd58 <feholdexcept@@GLIBC_2.17>
   14354:	mov	w0, #0x0                   	// #0
   14358:	bl	bd08 <fesetround@@GLIBC_2.17>
   1435c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14360:	add	x0, x0, #0xfb0
   14364:	stp	x21, x19, [sp, #96]
   14368:	mov	x27, #0x3fff000000000000    	// #4611404543450677248
   1436c:	ldr	q1, [x0]
   14370:	ldr	q0, [sp, #96]
   14374:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14378:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1437c:	add	x0, x0, #0xfc0
   14380:	ldr	q1, [x0]
   14384:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14388:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1438c:	add	x0, x0, #0xfc0
   14390:	ldr	q1, [x0]
   14394:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14398:	str	q0, [sp, #112]
   1439c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   143a0:	add	x0, x0, #0xfd0
   143a4:	ldr	q1, [x0]
   143a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   143ac:	stp	x21, x19, [sp, #96]
   143b0:	mov	v1.16b, v0.16b
   143b4:	ldr	q0, [sp, #96]
   143b8:	adrp	x19, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   143bc:	add	x22, x19, #0x90
   143c0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   143c4:	str	q0, [sp, #96]
   143c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   143cc:	add	x0, x0, #0xfe0
   143d0:	ldr	q2, [sp, #112]
   143d4:	ldr	q1, [x0]
   143d8:	mov	v0.16b, v2.16b
   143dc:	str	q2, [sp, #128]
   143e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   143e4:	str	q0, [sp, #112]
   143e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   143ec:	add	x0, x0, #0xff0
   143f0:	ldr	q4, [sp, #96]
   143f4:	ldr	q1, [x0]
   143f8:	mov	v0.16b, v4.16b
   143fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14400:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14404:	add	x0, x0, #0xff0
   14408:	ldr	q1, [x0]
   1440c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14410:	adrp	x0, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   14414:	add	x0, x0, #0x0
   14418:	ldr	q1, [x0]
   1441c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14420:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   14424:	mov	w21, w0
   14428:	add	w0, w0, #0x59
   1442c:	ldr	q4, [sp, #96]
   14430:	add	w21, w21, #0x2c5
   14434:	lsl	w19, w0, #1
   14438:	mov	v0.16b, v4.16b
   1443c:	add	x21, x22, w21, sxtw #4
   14440:	add	x0, x22, w19, sxtw #4
   14444:	add	w19, w19, #0x1
   14448:	add	x19, x22, w19, sxtw #4
   1444c:	ldr	q1, [x0]
   14450:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14454:	mov	v4.16b, v0.16b
   14458:	ldr	q1, [x19]
   1445c:	ldr	q6, [sp, #112]
   14460:	str	q4, [sp, #96]
   14464:	mov	v0.16b, v6.16b
   14468:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1446c:	adrp	x0, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   14470:	add	x0, x0, #0x10
   14474:	ldr	q4, [sp, #96]
   14478:	str	q0, [sp, #112]
   1447c:	ldr	q1, [x0]
   14480:	mov	v0.16b, v4.16b
   14484:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14488:	adrp	x0, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   1448c:	add	x0, x0, #0x10
   14490:	ldr	q1, [x0]
   14494:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14498:	adrp	x0, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   1449c:	add	x0, x0, #0x20
   144a0:	ldr	q1, [x0]
   144a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   144a8:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   144ac:	add	w23, w0, #0xf4
   144b0:	mov	w19, w0
   144b4:	ldr	q4, [sp, #96]
   144b8:	lsl	w23, w23, #1
   144bc:	add	w19, w19, #0x360
   144c0:	add	x0, x22, w23, sxtw #4
   144c4:	add	w23, w23, #0x1
   144c8:	mov	v0.16b, v4.16b
   144cc:	add	x19, x22, w19, sxtw #4
   144d0:	add	x23, x22, w23, sxtw #4
   144d4:	ldr	q1, [x0]
   144d8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   144dc:	mov	v4.16b, v0.16b
   144e0:	ldr	q1, [x23]
   144e4:	ldr	q6, [sp, #112]
   144e8:	str	q4, [sp, #96]
   144ec:	mov	v0.16b, v6.16b
   144f0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   144f4:	ldr	q4, [sp, #96]
   144f8:	mov	v1.16b, v4.16b
   144fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14500:	str	q0, [sp, #96]
   14504:	ldr	q1, [x19]
   14508:	ldr	q0, [x21]
   1450c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14510:	fmov	x23, v0.d[1]
   14514:	ldr	q2, [sp, #128]
   14518:	fmov	x22, d0
   1451c:	mov	v0.16b, v2.16b
   14520:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   14524:	adrp	x3, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   14528:	cmp	w0, #0x0
   1452c:	add	x3, x3, #0x30
   14530:	cneg	w19, w0, lt  // lt = tstop
   14534:	cmp	w19, w24
   14538:	ubfx	x2, x23, #48, #15
   1453c:	mov	w1, #0x3fff                	// #16383
   14540:	add	w1, w0, w1
   14544:	ldr	q1, [x3]
   14548:	cset	w3, gt
   1454c:	ldr	q0, [sp, #96]
   14550:	asr	w0, w0, w3
   14554:	sub	w1, w1, w0, uxth
   14558:	add	w0, w2, w0, uxth
   1455c:	bfi	x27, x1, #48, #15
   14560:	bfi	x23, x0, #48, #15
   14564:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14568:	adrp	x0, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   1456c:	add	x0, x0, #0x40
   14570:	ldr	q1, [x0]
   14574:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14578:	ldr	q1, [sp, #96]
   1457c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14580:	adrp	x0, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   14584:	add	x0, x0, #0x50
   14588:	ldr	q1, [x0]
   1458c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14590:	ldr	q1, [sp, #96]
   14594:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14598:	adrp	x0, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   1459c:	add	x0, x0, #0x60
   145a0:	ldr	q1, [x0]
   145a4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   145a8:	ldr	q1, [sp, #96]
   145ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   145b0:	adrp	x0, 59000 <f64xsubf128@@GLIBC_2.28+0x5280>
   145b4:	add	x0, x0, #0x70
   145b8:	ldr	q1, [x0]
   145bc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   145c0:	ldr	q1, [sp, #96]
   145c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   145c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   145cc:	add	x0, x0, #0x330
   145d0:	ldr	q1, [x0]
   145d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   145d8:	str	q0, [sp, #112]
   145dc:	ldr	q1, [sp, #96]
   145e0:	mov	v0.16b, v1.16b
   145e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   145e8:	ldr	q2, [sp, #112]
   145ec:	mov	v1.16b, v0.16b
   145f0:	mov	v0.16b, v2.16b
   145f4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   145f8:	ldr	q1, [sp, #96]
   145fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14600:	fmov	d2, x22
   14604:	mov	x0, x25
   14608:	str	q0, [sp, #112]
   1460c:	fmov	v2.d[1], x23
   14610:	str	q2, [sp, #96]
   14614:	bl	bd90 <fesetenv@@GLIBC_2.17>
   14618:	ldr	q2, [sp, #96]
   1461c:	ldr	q0, [sp, #112]
   14620:	mov	v1.16b, v0.16b
   14624:	mov	v0.16b, v2.16b
   14628:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1462c:	ldr	q2, [sp, #96]
   14630:	mov	v1.16b, v2.16b
   14634:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14638:	cmp	w19, w24
   1463c:	mov	v2.16b, v0.16b
   14640:	b.le	1468c <__expl_finite@GLIBC_2.17+0x49c>
   14644:	fmov	d1, x26
   14648:	fmov	v1.d[1], x27
   1464c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14650:	str	q0, [sp, #96]
   14654:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14658:	add	x0, x0, #0xeb0
   1465c:	ldr	q1, [x0]
   14660:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   14664:	ldr	q2, [sp, #96]
   14668:	tbz	w0, #31, 1468c <__expl_finite@GLIBC_2.17+0x49c>
   1466c:	mov	v1.16b, v2.16b
   14670:	mov	v0.16b, v2.16b
   14674:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14678:	ldp	x23, x24, [sp, #48]
   1467c:	ldp	x25, x26, [sp, #64]
   14680:	ldr	x27, [sp, #80]
   14684:	ldr	q2, [sp, #96]
   14688:	b	142d0 <__expl_finite@GLIBC_2.17+0xe0>
   1468c:	ldp	x23, x24, [sp, #48]
   14690:	ldp	x25, x26, [sp, #64]
   14694:	ldr	x27, [sp, #80]
   14698:	b	142d0 <__expl_finite@GLIBC_2.17+0xe0>
   1469c:	stp	x23, x24, [sp, #48]
   146a0:	stp	x25, x26, [sp, #64]
   146a4:	str	x27, [sp, #80]
   146a8:	bl	ba70 <__stack_chk_fail@plt>
   146ac:	nop

00000000000146b0 <__fmodl_finite@GLIBC_2.17>:
   146b0:	stp	x29, x30, [sp, #-48]!
   146b4:	mov	x29, sp
   146b8:	str	q0, [sp, #16]
   146bc:	str	q1, [sp, #32]
   146c0:	ldp	x4, x3, [sp, #24]
   146c4:	ldr	x9, [sp, #40]
   146c8:	and	x7, x9, #0x7fffffffffffffff
   146cc:	orr	x0, x7, x3
   146d0:	and	x11, x4, #0x7fffffffffffffff
   146d4:	cmp	x0, #0x0
   146d8:	mov	x0, #0x7ffeffffffffffff    	// #9223090561878065151
   146dc:	ccmp	x11, x0, #0x0, ne  // ne = any
   146e0:	ldr	x0, [sp, #16]
   146e4:	b.le	1471c <__fmodl_finite@GLIBC_2.17+0x6c>
   146e8:	stp	x3, x9, [sp, #16]
   146ec:	stp	x0, x4, [sp, #32]
   146f0:	ldr	q1, [sp, #16]
   146f4:	ldr	q0, [sp, #32]
   146f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   146fc:	mov	v1.16b, v0.16b
   14700:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   14704:	str	q0, [sp, #16]
   14708:	ldp	x3, x4, [sp, #16]
   1470c:	stp	x3, x4, [sp, #16]
   14710:	ldr	q0, [sp, #16]
   14714:	ldp	x29, x30, [sp], #48
   14718:	ret
   1471c:	neg	x1, x3
   14720:	mov	x10, #0x7fff000000000000    	// #9223090561878065152
   14724:	orr	x1, x1, x3
   14728:	mov	x5, x3
   1472c:	orr	x1, x7, x1, lsr #63
   14730:	cmp	x1, x10
   14734:	b.hi	146e8 <__fmodl_finite@GLIBC_2.17+0x38>  // b.pmore
   14738:	mov	x6, x9
   1473c:	mov	x2, x4
   14740:	mov	x8, x3
   14744:	mov	x12, x0
   14748:	cmp	x11, x7
   1474c:	mov	x1, x0
   14750:	and	x10, x4, #0x8000000000000000
   14754:	b.gt	1476c <__fmodl_finite@GLIBC_2.17+0xbc>
   14758:	ccmp	x0, x3, #0x0, ge  // ge = tcont
   1475c:	mov	x3, x0
   14760:	b.cc	1470c <__fmodl_finite@GLIBC_2.17+0x5c>  // b.lo, b.ul, b.last
   14764:	cmp	x0, x5
   14768:	b.eq	148ec <__fmodl_finite@GLIBC_2.17+0x23c>  // b.none
   1476c:	tst	x2, #0x7fff000000000000
   14770:	b.eq	148b4 <__fmodl_finite@GLIBC_2.17+0x204>  // b.none
   14774:	mov	x3, #0xffffffffffffc001    	// #-16383
   14778:	add	x3, x3, x11, lsr #48
   1477c:	tst	x6, #0x7fff000000000000
   14780:	b.ne	14934 <__fmodl_finite@GLIBC_2.17+0x284>  // b.any
   14784:	cbnz	x7, 14968 <__fmodl_finite@GLIBC_2.17+0x2b8>
   14788:	cmp	x5, #0x0
   1478c:	mov	x0, x5
   14790:	mov	x9, #0xffffffffffffbfd1    	// #-16431
   14794:	b.le	147a8 <__fmodl_finite@GLIBC_2.17+0xf8>
   14798:	lsl	x0, x0, #1
   1479c:	sub	x9, x9, #0x1
   147a0:	cmp	x0, #0x0
   147a4:	b.gt	14798 <__fmodl_finite@GLIBC_2.17+0xe8>
   147a8:	mov	x0, #0xffffffffffffc002    	// #-16382
   147ac:	cmp	x3, x0
   147b0:	b.lt	14910 <__fmodl_finite@GLIBC_2.17+0x260>  // b.tstop
   147b4:	and	x2, x2, #0xffffffffffff
   147b8:	orr	x2, x2, #0x1000000000000
   147bc:	mov	x0, #0xffffffffffffc002    	// #-16382
   147c0:	cmp	x9, x0
   147c4:	b.lt	14940 <__fmodl_finite@GLIBC_2.17+0x290>  // b.tstop
   147c8:	and	x6, x6, #0xffffffffffff
   147cc:	sub	x4, x1, x5
   147d0:	orr	x6, x6, #0x1000000000000
   147d4:	subs	x3, x3, x9
   147d8:	b.ne	147f8 <__fmodl_finite@GLIBC_2.17+0x148>  // b.any
   147dc:	b	1482c <__fmodl_finite@GLIBC_2.17+0x17c>
   147e0:	add	x2, x5, x0, lsl #1
   147e4:	lsl	x1, x4, #1
   147e8:	orr	x0, x0, x4
   147ec:	cbz	x0, 148ec <__fmodl_finite@GLIBC_2.17+0x23c>
   147f0:	subs	x3, x3, #0x1
   147f4:	b.eq	14828 <__fmodl_finite@GLIBC_2.17+0x178>  // b.none
   147f8:	cmp	x8, x1
   147fc:	sub	x4, x1, x8
   14800:	cset	x5, hi  // hi = pmore
   14804:	sub	x0, x2, x6
   14808:	subs	x0, x0, x5
   1480c:	lsr	x7, x1, #63
   14810:	lsr	x5, x4, #63
   14814:	b.pl	147e0 <__fmodl_finite@GLIBC_2.17+0x130>  // b.nfrst
   14818:	add	x2, x7, x2, lsl #1
   1481c:	lsl	x1, x1, #1
   14820:	subs	x3, x3, #0x1
   14824:	b.ne	147f8 <__fmodl_finite@GLIBC_2.17+0x148>  // b.any
   14828:	sub	x4, x1, x8
   1482c:	cmp	x8, x1
   14830:	sub	x6, x2, x6
   14834:	cset	x0, hi  // hi = pmore
   14838:	sub	x6, x6, x0
   1483c:	cmp	x6, #0x0
   14840:	csel	x1, x1, x4, lt  // lt = tstop
   14844:	csel	x2, x2, x6, lt  // lt = tstop
   14848:	orr	x0, x2, x1
   1484c:	cbz	x0, 148ec <__fmodl_finite@GLIBC_2.17+0x23c>
   14850:	mov	x3, #0xffffffffffff        	// #281474976710655
   14854:	cmp	x2, x3
   14858:	b.gt	14878 <__fmodl_finite@GLIBC_2.17+0x1c8>
   1485c:	nop
   14860:	lsr	x0, x1, #63
   14864:	sub	x9, x9, #0x1
   14868:	add	x2, x0, x2, lsl #1
   1486c:	lsl	x1, x1, #1
   14870:	cmp	x2, x3
   14874:	b.le	14860 <__fmodl_finite@GLIBC_2.17+0x1b0>
   14878:	mov	x0, #0xffffffffffffc002    	// #-16382
   1487c:	cmp	x9, x0
   14880:	b.ge	14a04 <__fmodl_finite@GLIBC_2.17+0x354>  // b.tcont
   14884:	sub	x0, x0, x9
   14888:	cmp	x0, #0x30
   1488c:	b.gt	14a28 <__fmodl_finite@GLIBC_2.17+0x378>
   14890:	neg	w3, w0
   14894:	lsr	x1, x1, x0
   14898:	asr	x0, x2, x0
   1489c:	orr	x10, x10, x0
   148a0:	lsl	x2, x2, x3
   148a4:	orr	x2, x2, x1
   148a8:	mov	x3, x2
   148ac:	mov	x4, x10
   148b0:	b	1470c <__fmodl_finite@GLIBC_2.17+0x5c>
   148b4:	cbnz	x11, 149bc <__fmodl_finite@GLIBC_2.17+0x30c>
   148b8:	cmp	x12, #0x0
   148bc:	mov	x0, x12
   148c0:	mov	x3, #0xffffffffffffbfd1    	// #-16431
   148c4:	b.le	1477c <__fmodl_finite@GLIBC_2.17+0xcc>
   148c8:	lsl	x0, x0, #1
   148cc:	sub	x3, x3, #0x1
   148d0:	cmp	x0, #0x0
   148d4:	b.le	1477c <__fmodl_finite@GLIBC_2.17+0xcc>
   148d8:	lsl	x0, x0, #1
   148dc:	sub	x3, x3, #0x1
   148e0:	cmp	x0, #0x0
   148e4:	b.gt	148c8 <__fmodl_finite@GLIBC_2.17+0x218>
   148e8:	b	1477c <__fmodl_finite@GLIBC_2.17+0xcc>
   148ec:	lsr	x1, x10, #63
   148f0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   148f4:	add	x0, x0, #0xab0
   148f8:	add	x1, x0, x1, lsl #4
   148fc:	ldp	x3, x4, [x1]
   14900:	stp	x3, x4, [sp, #16]
   14904:	ldr	q0, [sp, #16]
   14908:	ldp	x29, x30, [sp], #48
   1490c:	ret
   14910:	sub	x0, x0, x3
   14914:	cmp	x0, #0x3f
   14918:	b.gt	149f4 <__fmodl_finite@GLIBC_2.17+0x344>
   1491c:	neg	w4, w0
   14920:	lsl	x2, x11, x0
   14924:	lsl	x1, x12, x0
   14928:	lsr	x12, x12, x4
   1492c:	orr	x2, x12, x2
   14930:	b	147bc <__fmodl_finite@GLIBC_2.17+0x10c>
   14934:	mov	x9, #0xffffffffffffc001    	// #-16383
   14938:	add	x9, x9, x7, lsr #48
   1493c:	b	147a8 <__fmodl_finite@GLIBC_2.17+0xf8>
   14940:	sub	x8, x0, x9
   14944:	cmp	x8, #0x3f
   14948:	b.gt	1499c <__fmodl_finite@GLIBC_2.17+0x2ec>
   1494c:	neg	w6, w8
   14950:	lsl	x0, x7, x8
   14954:	lsl	x8, x5, x8
   14958:	sub	x4, x1, x8
   1495c:	lsr	x6, x5, x6
   14960:	orr	x6, x6, x0
   14964:	b	147d4 <__fmodl_finite@GLIBC_2.17+0x124>
   14968:	cmp	xzr, x7, lsl #15
   1496c:	lsl	x0, x7, #15
   14970:	mov	x9, #0xffffffffffffc002    	// #-16382
   14974:	b.ge	147a8 <__fmodl_finite@GLIBC_2.17+0xf8>  // b.tcont
   14978:	lsl	x0, x0, #1
   1497c:	sub	x9, x9, #0x1
   14980:	cmp	x0, #0x0
   14984:	b.le	147a8 <__fmodl_finite@GLIBC_2.17+0xf8>
   14988:	lsl	x0, x0, #1
   1498c:	sub	x9, x9, #0x1
   14990:	cmp	x0, #0x0
   14994:	b.gt	14978 <__fmodl_finite@GLIBC_2.17+0x2c8>
   14998:	b	147a8 <__fmodl_finite@GLIBC_2.17+0xf8>
   1499c:	sub	w0, w8, #0x40
   149a0:	subs	x3, x3, x9
   149a4:	mov	x8, #0x0                   	// #0
   149a8:	lsl	x6, x5, x0
   149ac:	b.ne	147f8 <__fmodl_finite@GLIBC_2.17+0x148>  // b.any
   149b0:	sub	x6, x2, x6
   149b4:	mov	x4, x1
   149b8:	b	1483c <__fmodl_finite@GLIBC_2.17+0x18c>
   149bc:	cmp	xzr, x11, lsl #15
   149c0:	lsl	x0, x11, #15
   149c4:	mov	x3, #0xffffffffffffc002    	// #-16382
   149c8:	b.ge	1477c <__fmodl_finite@GLIBC_2.17+0xcc>  // b.tcont
   149cc:	nop
   149d0:	lsl	x0, x0, #1
   149d4:	sub	x3, x3, #0x1
   149d8:	cmp	x0, #0x0
   149dc:	b.le	1477c <__fmodl_finite@GLIBC_2.17+0xcc>
   149e0:	lsl	x0, x0, #1
   149e4:	sub	x3, x3, #0x1
   149e8:	cmp	x0, #0x0
   149ec:	b.gt	149d0 <__fmodl_finite@GLIBC_2.17+0x320>
   149f0:	b	1477c <__fmodl_finite@GLIBC_2.17+0xcc>
   149f4:	sub	w0, w0, #0x40
   149f8:	mov	x1, #0x0                   	// #0
   149fc:	lsl	x2, x12, x0
   14a00:	b	147bc <__fmodl_finite@GLIBC_2.17+0x10c>
   14a04:	mov	x0, #0x3fff                	// #16383
   14a08:	add	x9, x9, x0
   14a0c:	mov	x0, #0xffff000000000000    	// #-281474976710656
   14a10:	add	x2, x2, x0
   14a14:	orr	x10, x2, x10
   14a18:	mov	x3, x1
   14a1c:	orr	x5, x10, x9, lsl #48
   14a20:	mov	x4, x5
   14a24:	b	1470c <__fmodl_finite@GLIBC_2.17+0x5c>
   14a28:	cmp	x0, #0x3f
   14a2c:	b.gt	14a44 <__fmodl_finite@GLIBC_2.17+0x394>
   14a30:	neg	w3, w0
   14a34:	lsr	x0, x1, x0
   14a38:	lsl	x2, x2, x3
   14a3c:	orr	x2, x2, x0
   14a40:	b	148a8 <__fmodl_finite@GLIBC_2.17+0x1f8>
   14a44:	sub	w0, w0, #0x40
   14a48:	asr	x2, x2, x0
   14a4c:	b	148a8 <__fmodl_finite@GLIBC_2.17+0x1f8>

0000000000014a50 <__hypotl_finite@GLIBC_2.17>:
   14a50:	stp	x29, x30, [sp, #-176]!
   14a54:	fmov	x3, v0.d[1]
   14a58:	fmov	x1, v1.d[1]
   14a5c:	mov	x29, sp
   14a60:	stp	x19, x20, [sp, #16]
   14a64:	fmov	x2, d0
   14a68:	and	x19, x3, #0x7fffffffffffffff
   14a6c:	and	x20, x1, #0x7fffffffffffffff
   14a70:	fmov	x0, d1
   14a74:	cmp	x19, x20
   14a78:	b.ge	14a98 <__hypotl_finite@GLIBC_2.17+0x48>  // b.tcont
   14a7c:	fmov	d0, x2
   14a80:	mov	x4, x19
   14a84:	mov	x2, x0
   14a88:	mov	x19, x20
   14a8c:	fmov	v0.d[1], x3
   14a90:	mov	x20, x4
   14a94:	fmov	x0, d0
   14a98:	mov	x3, x19
   14a9c:	mov	x1, x20
   14aa0:	stp	x0, x1, [sp, #64]
   14aa4:	sub	x4, x19, x20
   14aa8:	mov	x0, #0x78000000000000      	// #33776997205278720
   14aac:	stp	x2, x3, [sp, #80]
   14ab0:	cmp	x4, x0
   14ab4:	b.gt	14bc8 <__hypotl_finite@GLIBC_2.17+0x178>
   14ab8:	str	x23, [sp, #48]
   14abc:	mov	x0, #0x5f3f000000000000    	// #6863204357135925248
   14ac0:	cmp	x19, x0
   14ac4:	b.gt	14b5c <__hypotl_finite@GLIBC_2.17+0x10c>
   14ac8:	mov	x23, #0x0                   	// #0
   14acc:	mov	x0, #0x20beffffffffffff    	// #2359604729765429247
   14ad0:	cmp	x20, x0
   14ad4:	b.gt	14be8 <__hypotl_finite@GLIBC_2.17+0x198>
   14ad8:	mov	x0, #0xffffffffffff        	// #281474976710655
   14adc:	cmp	x20, x0
   14ae0:	b.gt	14e28 <__hypotl_finite@GLIBC_2.17+0x3d8>
   14ae4:	ldr	x0, [sp, #64]
   14ae8:	ldr	q2, [sp, #80]
   14aec:	orr	x20, x20, x0
   14af0:	cbz	x20, 14d14 <__hypotl_finite@GLIBC_2.17+0x2c4>
   14af4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   14af8:	add	x0, x0, #0xad0
   14afc:	ldr	q0, [sp, #64]
   14b00:	stp	x21, x22, [sp, #32]
   14b04:	ldr	q1, [x0]
   14b08:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14b0c:	str	q0, [sp, #64]
   14b10:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   14b14:	add	x0, x0, #0xad0
   14b18:	ldr	q0, [sp, #80]
   14b1c:	ldr	q1, [x0]
   14b20:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14b24:	str	q0, [sp, #80]
   14b28:	ldr	x20, [sp, #72]
   14b2c:	mov	x5, #0xffffffffffffc002    	// #-16382
   14b30:	ldr	x19, [sp, #88]
   14b34:	add	x23, x23, x5
   14b38:	cmp	x19, x20
   14b3c:	mov	x0, x19
   14b40:	b.ge	14bec <__hypotl_finite@GLIBC_2.17+0x19c>  // b.tcont
   14b44:	ldr	q1, [sp, #64]
   14b48:	mov	x19, x20
   14b4c:	mov	x20, x0
   14b50:	str	q0, [sp, #64]
   14b54:	str	q1, [sp, #80]
   14b58:	b	14bec <__hypotl_finite@GLIBC_2.17+0x19c>
   14b5c:	mov	x0, #0x7ffeffffffffffff    	// #9223090561878065151
   14b60:	cmp	x19, x0
   14b64:	b.le	14dfc <__hypotl_finite@GLIBC_2.17+0x3ac>
   14b68:	ldr	q1, [sp, #64]
   14b6c:	ldr	q0, [sp, #80]
   14b70:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14b74:	str	q0, [sp, #96]
   14b78:	ldr	q0, [sp, #80]
   14b7c:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   14b80:	ldr	q2, [sp, #96]
   14b84:	cbnz	w0, 14d14 <__hypotl_finite@GLIBC_2.17+0x2c4>
   14b88:	ldr	q0, [sp, #64]
   14b8c:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   14b90:	ldr	q2, [sp, #96]
   14b94:	cbnz	w0, 14d14 <__hypotl_finite@GLIBC_2.17+0x2c4>
   14b98:	ldr	x0, [sp, #80]
   14b9c:	and	x19, x19, #0xffffffffffff
   14ba0:	orr	x19, x19, x0
   14ba4:	cbnz	x19, 14bac <__hypotl_finite@GLIBC_2.17+0x15c>
   14ba8:	ldr	q2, [sp, #80]
   14bac:	ldr	x0, [sp, #64]
   14bb0:	eor	x20, x20, #0x7fff000000000000
   14bb4:	orr	x20, x20, x0
   14bb8:	cbnz	x20, 14d14 <__hypotl_finite@GLIBC_2.17+0x2c4>
   14bbc:	ldr	x23, [sp, #48]
   14bc0:	ldr	q2, [sp, #64]
   14bc4:	b	14bd8 <__hypotl_finite@GLIBC_2.17+0x188>
   14bc8:	ldr	q1, [sp, #64]
   14bcc:	ldr	q0, [sp, #80]
   14bd0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14bd4:	mov	v2.16b, v0.16b
   14bd8:	mov	v0.16b, v2.16b
   14bdc:	ldp	x19, x20, [sp, #16]
   14be0:	ldp	x29, x30, [sp], #176
   14be4:	ret
   14be8:	stp	x21, x22, [sp, #32]
   14bec:	ldr	q1, [sp, #64]
   14bf0:	ldr	q0, [sp, #80]
   14bf4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14bf8:	str	q0, [sp, #96]
   14bfc:	ldr	q0, [sp, #64]
   14c00:	ldr	q1, [sp, #96]
   14c04:	ldp	x22, x21, [sp, #96]
   14c08:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   14c0c:	tbz	w0, #31, 14d28 <__hypotl_finite@GLIBC_2.17+0x2d8>
   14c10:	mov	x0, #0x0                   	// #0
   14c14:	fmov	d2, x0
   14c18:	fmov	v2.d[1], x19
   14c1c:	mov	v1.16b, v2.16b
   14c20:	mov	v0.16b, v2.16b
   14c24:	str	q2, [sp, #128]
   14c28:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14c2c:	ldp	x1, x0, [sp, #64]
   14c30:	str	q0, [sp, #112]
   14c34:	ldr	q1, [sp, #64]
   14c38:	eor	x0, x0, #0x8000000000000000
   14c3c:	stp	x1, x0, [sp, #96]
   14c40:	ldr	q0, [sp, #96]
   14c44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14c48:	str	q0, [sp, #96]
   14c4c:	ldr	q0, [sp, #80]
   14c50:	ldr	q2, [sp, #128]
   14c54:	mov	v1.16b, v2.16b
   14c58:	str	q2, [sp, #64]
   14c5c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14c60:	ldr	q2, [sp, #64]
   14c64:	str	q0, [sp, #64]
   14c68:	ldr	q0, [sp, #80]
   14c6c:	mov	v1.16b, v2.16b
   14c70:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14c74:	mov	v1.16b, v0.16b
   14c78:	ldr	q2, [sp, #64]
   14c7c:	mov	v0.16b, v2.16b
   14c80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14c84:	ldr	q6, [sp, #96]
   14c88:	mov	v1.16b, v0.16b
   14c8c:	mov	v0.16b, v6.16b
   14c90:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14c94:	ldr	q4, [sp, #112]
   14c98:	mov	v1.16b, v0.16b
   14c9c:	mov	v0.16b, v4.16b
   14ca0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14ca4:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   14ca8:	mov	v2.16b, v0.16b
   14cac:	cbz	x23, 14d10 <__hypotl_finite@GLIBC_2.17+0x2c0>
   14cb0:	mov	x0, #0x0                   	// #0
   14cb4:	mov	x2, #0x3fff000000000000    	// #4611404543450677248
   14cb8:	fmov	d1, x0
   14cbc:	add	x1, x2, x23, lsl #48
   14cc0:	mov	v0.16b, v2.16b
   14cc4:	fmov	v1.d[1], x1
   14cc8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14ccc:	str	q0, [sp, #64]
   14cd0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14cd4:	add	x0, x0, #0xeb0
   14cd8:	ldr	q1, [x0]
   14cdc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   14ce0:	ldr	q2, [sp, #64]
   14ce4:	tbz	w0, #31, 14d10 <__hypotl_finite@GLIBC_2.17+0x2c0>
   14ce8:	mov	v1.16b, v2.16b
   14cec:	mov	v0.16b, v2.16b
   14cf0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14cf4:	ldr	q2, [sp, #64]
   14cf8:	ldp	x19, x20, [sp, #16]
   14cfc:	mov	v0.16b, v2.16b
   14d00:	ldp	x21, x22, [sp, #32]
   14d04:	ldr	x23, [sp, #48]
   14d08:	ldp	x29, x30, [sp], #176
   14d0c:	ret
   14d10:	ldp	x21, x22, [sp, #32]
   14d14:	mov	v0.16b, v2.16b
   14d18:	ldp	x19, x20, [sp, #16]
   14d1c:	ldr	x23, [sp, #48]
   14d20:	ldp	x29, x30, [sp], #176
   14d24:	ret
   14d28:	mov	x2, #0x0                   	// #0
   14d2c:	mov	x0, #0x0                   	// #0
   14d30:	fmov	d2, x2
   14d34:	fmov	d4, x0
   14d38:	mov	x4, #0x1000000000000       	// #281474976710656
   14d3c:	add	x3, x19, x4
   14d40:	fmov	v4.d[1], x20
   14d44:	fmov	v2.d[1], x3
   14d48:	mov	v0.16b, v4.16b
   14d4c:	mov	v1.16b, v2.16b
   14d50:	str	q2, [sp, #144]
   14d54:	str	q4, [sp, #160]
   14d58:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14d5c:	eor	x0, x21, #0x8000000000000000
   14d60:	stp	x22, x21, [sp, #96]
   14d64:	stp	x22, x0, [sp, #112]
   14d68:	ldr	q1, [sp, #96]
   14d6c:	str	q0, [sp, #128]
   14d70:	ldr	q0, [sp, #112]
   14d74:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14d78:	str	q0, [sp, #112]
   14d7c:	ldr	q1, [sp, #80]
   14d80:	mov	v0.16b, v1.16b
   14d84:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14d88:	ldr	q2, [sp, #144]
   14d8c:	mov	v1.16b, v2.16b
   14d90:	str	q2, [sp, #96]
   14d94:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14d98:	ldr	q1, [sp, #64]
   14d9c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14da0:	str	q0, [sp, #80]
   14da4:	ldr	q0, [sp, #64]
   14da8:	ldr	q4, [sp, #160]
   14dac:	mov	v1.16b, v4.16b
   14db0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14db4:	ldr	q2, [sp, #96]
   14db8:	mov	v1.16b, v2.16b
   14dbc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14dc0:	ldr	q4, [sp, #80]
   14dc4:	mov	v1.16b, v0.16b
   14dc8:	mov	v0.16b, v4.16b
   14dcc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14dd0:	ldr	q16, [sp, #112]
   14dd4:	mov	v1.16b, v0.16b
   14dd8:	mov	v0.16b, v16.16b
   14ddc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14de0:	ldr	q6, [sp, #128]
   14de4:	mov	v1.16b, v0.16b
   14de8:	mov	v0.16b, v6.16b
   14dec:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   14df0:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   14df4:	mov	v2.16b, v0.16b
   14df8:	b	14cac <__hypotl_finite@GLIBC_2.17+0x25c>
   14dfc:	mov	x0, #0xda80000000000000    	// #-2702159776422297600
   14e00:	add	x19, x19, x0
   14e04:	add	x20, x20, x0
   14e08:	mov	x23, #0x2580                	// #9600
   14e0c:	ldp	x0, x1, [sp, #64]
   14e10:	ldp	x2, x3, [sp, #80]
   14e14:	mov	x1, x20
   14e18:	stp	x0, x1, [sp, #64]
   14e1c:	mov	x3, x19
   14e20:	stp	x2, x3, [sp, #80]
   14e24:	b	14acc <__hypotl_finite@GLIBC_2.17+0x7c>
   14e28:	mov	x0, #0x2580000000000000    	// #2702159776422297600
   14e2c:	add	x19, x19, x0
   14e30:	add	x20, x20, x0
   14e34:	mov	x4, #0xffffffffffffda80    	// #-9600
   14e38:	ldp	x0, x1, [sp, #64]
   14e3c:	add	x23, x23, x4
   14e40:	ldp	x2, x3, [sp, #80]
   14e44:	mov	x1, x20
   14e48:	stp	x21, x22, [sp, #32]
   14e4c:	mov	x3, x19
   14e50:	stp	x0, x1, [sp, #64]
   14e54:	stp	x2, x3, [sp, #80]
   14e58:	b	14bec <__hypotl_finite@GLIBC_2.17+0x19c>
   14e5c:	nop

0000000000014e60 <__j0l_finite@GLIBC_2.17>:
   14e60:	stp	x29, x30, [sp, #-240]!
   14e64:	mov	x29, sp
   14e68:	stp	x19, x20, [sp, #16]
   14e6c:	stp	x21, x22, [sp, #32]
   14e70:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   14e74:	str	q0, [sp, #64]
   14e78:	ldp	x19, x20, [sp, #64]
   14e7c:	ldr	x0, [x21, #4032]
   14e80:	ldr	x1, [x0]
   14e84:	str	x1, [sp, #232]
   14e88:	mov	x1, #0x0                   	// #0
   14e8c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14e90:	add	x0, x0, #0x300
   14e94:	and	x22, x20, #0x7fffffffffffffff
   14e98:	str	x22, [sp, #72]
   14e9c:	ldr	q1, [x0]
   14ea0:	ldr	q0, [sp, #64]
   14ea4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   14ea8:	cbnz	w0, 15098 <__j0l_finite@GLIBC_2.17+0x238>
   14eac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14eb0:	add	x0, x0, #0x300
   14eb4:	stp	x19, x22, [sp, #64]
   14eb8:	ldr	q1, [x0]
   14ebc:	ldr	q0, [sp, #64]
   14ec0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   14ec4:	cmp	w0, #0x0
   14ec8:	b.gt	15098 <__j0l_finite@GLIBC_2.17+0x238>
   14ecc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   14ed0:	add	x0, x0, #0x2f0
   14ed4:	movi	v1.2d, #0x0
   14ed8:	stp	x19, x20, [sp, #64]
   14edc:	ldr	q2, [x0]
   14ee0:	ldr	q0, [sp, #64]
   14ee4:	str	q2, [sp, #80]
   14ee8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   14eec:	ldr	q2, [sp, #80]
   14ef0:	cbz	w0, 15070 <__j0l_finite@GLIBC_2.17+0x210>
   14ef4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   14ef8:	add	x0, x0, #0xae0
   14efc:	stp	x19, x22, [sp, #64]
   14f00:	ldr	q1, [x0]
   14f04:	ldr	q0, [sp, #64]
   14f08:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   14f0c:	str	x19, [sp, #64]
   14f10:	cmp	w0, #0x0
   14f14:	b.gt	150d0 <__j0l_finite@GLIBC_2.17+0x270>
   14f18:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   14f1c:	add	x0, x0, #0xaf0
   14f20:	str	x22, [sp, #72]
   14f24:	ldr	q1, [x0]
   14f28:	ldr	q0, [sp, #64]
   14f2c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   14f30:	ldr	q2, [sp, #80]
   14f34:	tbnz	w0, #31, 15070 <__j0l_finite@GLIBC_2.17+0x210>
   14f38:	stp	x19, x20, [sp, #64]
   14f3c:	adrp	x22, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   14f40:	stp	x19, x20, [sp, #80]
   14f44:	add	x20, x22, #0x40
   14f48:	ldr	q1, [sp, #64]
   14f4c:	ldr	q0, [sp, #80]
   14f50:	mov	x19, x20
   14f54:	str	x23, [sp, #48]
   14f58:	add	x20, x20, #0x50
   14f5c:	sub	x23, x19, #0x10
   14f60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14f64:	mov	v1.16b, v0.16b
   14f68:	str	q0, [sp, #64]
   14f6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14f70:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   14f74:	add	x0, x0, #0xb00
   14f78:	str	q0, [sp, #96]
   14f7c:	ldr	q2, [x0]
   14f80:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   14f84:	add	x0, x0, #0xb10
   14f88:	ldr	q0, [x0]
   14f8c:	b	14f94 <__j0l_finite@GLIBC_2.17+0x134>
   14f90:	ldr	q2, [x20]
   14f94:	ldr	q1, [sp, #64]
   14f98:	sub	x20, x20, #0x10
   14f9c:	str	q2, [sp, #80]
   14fa0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14fa4:	ldr	q2, [sp, #80]
   14fa8:	mov	v1.16b, v2.16b
   14fac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14fb0:	cmp	x20, x23
   14fb4:	b.ne	14f90 <__j0l_finite@GLIBC_2.17+0x130>  // b.any
   14fb8:	mov	v1.16b, v0.16b
   14fbc:	ldr	q0, [sp, #96]
   14fc0:	add	x20, x22, #0x40
   14fc4:	add	x19, x19, #0xc0
   14fc8:	add	x20, x20, #0x60
   14fcc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   14fd0:	str	q0, [sp, #96]
   14fd4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   14fd8:	add	x0, x0, #0xb20
   14fdc:	ldr	q0, [sp, #64]
   14fe0:	ldr	q1, [x0]
   14fe4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   14fe8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   14fec:	add	x0, x0, #0xb30
   14ff0:	ldr	q2, [x0]
   14ff4:	b	14ffc <__j0l_finite@GLIBC_2.17+0x19c>
   14ff8:	ldr	q2, [x19]
   14ffc:	ldr	q1, [sp, #64]
   15000:	sub	x19, x19, #0x10
   15004:	str	q2, [sp, #80]
   15008:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1500c:	ldr	q2, [sp, #80]
   15010:	mov	v1.16b, v2.16b
   15014:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15018:	cmp	x19, x20
   1501c:	b.ne	14ff8 <__j0l_finite@GLIBC_2.17+0x198>  // b.any
   15020:	mov	v1.16b, v0.16b
   15024:	ldr	q0, [sp, #96]
   15028:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1502c:	str	q0, [sp, #80]
   15030:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15034:	add	x0, x0, #0xb40
   15038:	ldr	q0, [sp, #64]
   1503c:	ldr	q1, [x0]
   15040:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15044:	mov	v1.16b, v0.16b
   15048:	ldr	q2, [sp, #80]
   1504c:	mov	v0.16b, v2.16b
   15050:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   15054:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   15058:	add	x0, x0, #0x2f0
   1505c:	ldr	q1, [x0]
   15060:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15064:	mov	v2.16b, v0.16b
   15068:	ldr	x23, [sp, #48]
   1506c:	nop
   15070:	ldr	x0, [x21, #4032]
   15074:	ldr	x1, [sp, #232]
   15078:	ldr	x0, [x0]
   1507c:	eor	x0, x1, x0
   15080:	cbnz	x0, 160d4 <__j0l_finite@GLIBC_2.17+0x1274>
   15084:	mov	v0.16b, v2.16b
   15088:	ldp	x19, x20, [sp, #16]
   1508c:	ldp	x21, x22, [sp, #32]
   15090:	ldp	x29, x30, [sp], #240
   15094:	ret
   15098:	stp	x19, x20, [sp, #64]
   1509c:	stp	x19, x20, [sp, #80]
   150a0:	ldr	q1, [sp, #64]
   150a4:	ldr	q0, [sp, #80]
   150a8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   150ac:	movi	v2.2d, #0x0
   150b0:	cbz	w0, 15070 <__j0l_finite@GLIBC_2.17+0x210>
   150b4:	stp	x19, x20, [sp, #64]
   150b8:	stp	x19, x20, [sp, #80]
   150bc:	ldr	q1, [sp, #64]
   150c0:	ldr	q0, [sp, #80]
   150c4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   150c8:	mov	v2.16b, v0.16b
   150cc:	b	15070 <__j0l_finite@GLIBC_2.17+0x210>
   150d0:	str	x22, [sp, #72]
   150d4:	add	x1, sp, #0xc0
   150d8:	add	x0, sp, #0xd0
   150dc:	ldr	q0, [sp, #64]
   150e0:	bl	24048 <sincosf128@@GLIBC_2.27>
   150e4:	ldr	q1, [sp, #192]
   150e8:	ldr	q2, [sp, #208]
   150ec:	str	q1, [sp, #80]
   150f0:	mov	v0.16b, v2.16b
   150f4:	str	q2, [sp, #64]
   150f8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   150fc:	mov	v4.16b, v0.16b
   15100:	ldr	q2, [sp, #64]
   15104:	ldr	q1, [sp, #80]
   15108:	str	q4, [sp, #128]
   1510c:	mov	v0.16b, v2.16b
   15110:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15114:	stp	x19, x22, [sp, #64]
   15118:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1511c:	add	x0, x0, #0xb50
   15120:	str	q0, [sp, #96]
   15124:	ldr	q0, [sp, #64]
   15128:	ldr	q1, [x0]
   1512c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   15130:	cmp	w0, #0x0
   15134:	b.le	15654 <__j0l_finite@GLIBC_2.17+0x7f4>
   15138:	stp	x19, x22, [sp, #64]
   1513c:	ldr	q0, [sp, #64]
   15140:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   15144:	stp	x19, x22, [sp, #64]
   15148:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1514c:	add	x0, x0, #0xb60
   15150:	str	q0, [sp, #112]
   15154:	ldr	q0, [sp, #64]
   15158:	ldr	q1, [x0]
   1515c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   15160:	cmp	w0, #0x0
   15164:	b.gt	15630 <__j0l_finite@GLIBC_2.17+0x7d0>
   15168:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1516c:	add	x0, x0, #0x2f0
   15170:	stp	x19, x22, [sp, #64]
   15174:	ldr	q0, [x0]
   15178:	ldr	q1, [sp, #64]
   1517c:	str	x23, [sp, #48]
   15180:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   15184:	mov	v1.16b, v0.16b
   15188:	str	q0, [sp, #80]
   1518c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15190:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15194:	add	x0, x0, #0xb40
   15198:	str	q0, [sp, #64]
   1519c:	ldr	q0, [sp, #80]
   151a0:	ldr	q1, [x0]
   151a4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   151a8:	cmp	w0, #0x0
   151ac:	b.gt	15450 <__j0l_finite@GLIBC_2.17+0x5f0>
   151b0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   151b4:	add	x0, x0, #0xb80
   151b8:	ldr	q0, [sp, #80]
   151bc:	ldr	q1, [x0]
   151c0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   151c4:	cmp	w0, #0x0
   151c8:	b.gt	15878 <__j0l_finite@GLIBC_2.17+0xa18>
   151cc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   151d0:	add	x0, x0, #0xb90
   151d4:	ldr	q0, [sp, #80]
   151d8:	adrp	x22, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   151dc:	add	x20, x22, #0x40
   151e0:	ldr	q1, [x0]
   151e4:	mov	x19, x20
   151e8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   151ec:	cmp	w0, #0x0
   151f0:	b.gt	15d9c <__j0l_finite@GLIBC_2.17+0xf3c>
   151f4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   151f8:	add	x0, x0, #0xba0
   151fc:	add	x20, x20, #0x160
   15200:	add	x23, x19, #0xd0
   15204:	ldr	q4, [x0]
   15208:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1520c:	add	x0, x0, #0xbb0
   15210:	ldr	q2, [x0]
   15214:	b	1521c <__j0l_finite@GLIBC_2.17+0x3bc>
   15218:	ldr	q4, [x20]
   1521c:	ldr	q0, [sp, #64]
   15220:	mov	v1.16b, v2.16b
   15224:	str	q4, [sp, #144]
   15228:	sub	x20, x20, #0x10
   1522c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15230:	ldr	q4, [sp, #144]
   15234:	mov	v1.16b, v4.16b
   15238:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1523c:	cmp	x20, x23
   15240:	mov	v2.16b, v0.16b
   15244:	b.ne	15218 <__j0l_finite@GLIBC_2.17+0x3b8>  // b.any
   15248:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1524c:	add	x0, x0, #0xbc0
   15250:	str	q0, [sp, #144]
   15254:	add	x20, x22, #0x40
   15258:	ldr	q0, [sp, #64]
   1525c:	add	x19, x19, #0x200
   15260:	ldr	q1, [x0]
   15264:	add	x23, x20, #0x170
   15268:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1526c:	mov	v1.16b, v0.16b
   15270:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15274:	add	x0, x0, #0xbd0
   15278:	ldr	q2, [sp, #144]
   1527c:	ldr	q4, [x0]
   15280:	b	15288 <__j0l_finite@GLIBC_2.17+0x428>
   15284:	ldr	q4, [x19]
   15288:	ldr	q0, [sp, #64]
   1528c:	sub	x19, x19, #0x10
   15290:	str	q2, [sp, #144]
   15294:	str	q4, [sp, #160]
   15298:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1529c:	ldr	q4, [sp, #160]
   152a0:	mov	v1.16b, v4.16b
   152a4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   152a8:	cmp	x19, x23
   152ac:	mov	v1.16b, v0.16b
   152b0:	ldr	q2, [sp, #144]
   152b4:	b.ne	15284 <__j0l_finite@GLIBC_2.17+0x424>  // b.any
   152b8:	mov	v0.16b, v2.16b
   152bc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   152c0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   152c4:	add	x0, x0, #0xbe0
   152c8:	add	x19, x22, #0x40
   152cc:	add	x20, x20, #0x2b0
   152d0:	add	x23, x19, #0x210
   152d4:	str	q0, [sp, #176]
   152d8:	ldr	q4, [x0]
   152dc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   152e0:	add	x0, x0, #0xbf0
   152e4:	ldr	q2, [x0]
   152e8:	b	152f0 <__j0l_finite@GLIBC_2.17+0x490>
   152ec:	ldr	q4, [x20]
   152f0:	ldr	q0, [sp, #64]
   152f4:	mov	v1.16b, v2.16b
   152f8:	str	q4, [sp, #144]
   152fc:	sub	x20, x20, #0x10
   15300:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15304:	ldr	q4, [sp, #144]
   15308:	mov	v1.16b, v4.16b
   1530c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15310:	cmp	x20, x23
   15314:	mov	v2.16b, v0.16b
   15318:	b.ne	152ec <__j0l_finite@GLIBC_2.17+0x48c>  // b.any
   1531c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15320:	add	x0, x0, #0xc00
   15324:	str	q0, [sp, #144]
   15328:	add	x20, x22, #0x40
   1532c:	ldr	q0, [sp, #64]
   15330:	add	x19, x19, #0x350
   15334:	ldr	q1, [x0]
   15338:	add	x20, x20, #0x2c0
   1533c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15340:	mov	v1.16b, v0.16b
   15344:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15348:	add	x0, x0, #0xc10
   1534c:	ldr	q2, [sp, #144]
   15350:	ldr	q4, [x0]
   15354:	b	1535c <__j0l_finite@GLIBC_2.17+0x4fc>
   15358:	ldr	q4, [x19]
   1535c:	ldr	q0, [sp, #64]
   15360:	sub	x19, x19, #0x10
   15364:	str	q2, [sp, #144]
   15368:	str	q4, [sp, #160]
   1536c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15370:	ldr	q4, [sp, #160]
   15374:	mov	v1.16b, v4.16b
   15378:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1537c:	cmp	x19, x20
   15380:	mov	v1.16b, v0.16b
   15384:	ldr	q2, [sp, #144]
   15388:	b.ne	15358 <__j0l_finite@GLIBC_2.17+0x4f8>  // b.any
   1538c:	nop
   15390:	mov	v0.16b, v2.16b
   15394:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   15398:	str	q0, [sp, #144]
   1539c:	ldr	q1, [sp, #64]
   153a0:	ldr	q0, [sp, #176]
   153a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   153a8:	ldr	q1, [sp, #64]
   153ac:	str	q0, [sp, #64]
   153b0:	ldr	q0, [sp, #80]
   153b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   153b8:	ldr	q4, [sp, #144]
   153bc:	mov	v1.16b, v4.16b
   153c0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   153c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   153c8:	add	x0, x0, #0x2f0
   153cc:	mov	v4.16b, v0.16b
   153d0:	ldr	q2, [sp, #64]
   153d4:	ldr	q1, [x0]
   153d8:	mov	v0.16b, v2.16b
   153dc:	str	q4, [sp, #144]
   153e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   153e4:	ldr	q1, [sp, #96]
   153e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   153ec:	str	q0, [sp, #64]
   153f0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   153f4:	add	x0, x0, #0xb80
   153f8:	ldr	q0, [sp, #80]
   153fc:	ldr	q1, [x0]
   15400:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15404:	mov	v1.16b, v0.16b
   15408:	ldr	q4, [sp, #144]
   1540c:	mov	v0.16b, v4.16b
   15410:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   15414:	ldr	q1, [sp, #128]
   15418:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1541c:	mov	v1.16b, v0.16b
   15420:	ldr	q2, [sp, #64]
   15424:	mov	v0.16b, v2.16b
   15428:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1542c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15430:	add	x0, x0, #0xb70
   15434:	ldr	q1, [x0]
   15438:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1543c:	ldr	q1, [sp, #112]
   15440:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   15444:	mov	v2.16b, v0.16b
   15448:	ldr	x23, [sp, #48]
   1544c:	b	15070 <__j0l_finite@GLIBC_2.17+0x210>
   15450:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15454:	add	x0, x0, #0xdb0
   15458:	ldr	q0, [sp, #80]
   1545c:	ldr	q1, [x0]
   15460:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   15464:	cmp	w0, #0x0
   15468:	b.gt	156b4 <__j0l_finite@GLIBC_2.17+0x854>
   1546c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15470:	add	x0, x0, #0xdc0
   15474:	ldr	q0, [sp, #80]
   15478:	adrp	x22, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   1547c:	ldr	q1, [x0]
   15480:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   15484:	cmp	w0, #0x0
   15488:	b.gt	15a58 <__j0l_finite@GLIBC_2.17+0xbf8>
   1548c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15490:	add	x0, x0, #0xdd0
   15494:	add	x20, x22, #0x40
   15498:	mov	x19, x20
   1549c:	add	x20, x20, #0xc10
   154a0:	ldr	q4, [x0]
   154a4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   154a8:	add	x0, x0, #0xde0
   154ac:	add	x23, x19, #0xb80
   154b0:	ldr	q2, [x0]
   154b4:	b	154bc <__j0l_finite@GLIBC_2.17+0x65c>
   154b8:	ldr	q4, [x20]
   154bc:	ldr	q0, [sp, #64]
   154c0:	mov	v1.16b, v2.16b
   154c4:	str	q4, [sp, #144]
   154c8:	sub	x20, x20, #0x10
   154cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   154d0:	ldr	q4, [sp, #144]
   154d4:	mov	v1.16b, v4.16b
   154d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   154dc:	cmp	x20, x23
   154e0:	mov	v2.16b, v0.16b
   154e4:	b.ne	154b8 <__j0l_finite@GLIBC_2.17+0x658>  // b.any
   154e8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   154ec:	add	x0, x0, #0xdf0
   154f0:	str	q0, [sp, #144]
   154f4:	add	x20, x22, #0x40
   154f8:	ldr	q0, [sp, #64]
   154fc:	add	x19, x19, #0xcb0
   15500:	ldr	q1, [x0]
   15504:	add	x23, x20, #0xc20
   15508:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1550c:	mov	v1.16b, v0.16b
   15510:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15514:	add	x0, x0, #0xe00
   15518:	ldr	q2, [sp, #144]
   1551c:	ldr	q4, [x0]
   15520:	b	15528 <__j0l_finite@GLIBC_2.17+0x6c8>
   15524:	ldr	q4, [x19]
   15528:	ldr	q0, [sp, #64]
   1552c:	sub	x19, x19, #0x10
   15530:	str	q2, [sp, #144]
   15534:	str	q4, [sp, #160]
   15538:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1553c:	ldr	q4, [sp, #160]
   15540:	mov	v1.16b, v4.16b
   15544:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15548:	cmp	x19, x23
   1554c:	mov	v1.16b, v0.16b
   15550:	ldr	q2, [sp, #144]
   15554:	b.ne	15524 <__j0l_finite@GLIBC_2.17+0x6c4>  // b.any
   15558:	mov	v0.16b, v2.16b
   1555c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   15560:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15564:	add	x0, x0, #0xe10
   15568:	add	x19, x22, #0x40
   1556c:	add	x20, x20, #0xd60
   15570:	add	x23, x19, #0xcc0
   15574:	str	q0, [sp, #176]
   15578:	ldr	q4, [x0]
   1557c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15580:	add	x0, x0, #0xe20
   15584:	ldr	q2, [x0]
   15588:	b	15590 <__j0l_finite@GLIBC_2.17+0x730>
   1558c:	ldr	q4, [x20]
   15590:	ldr	q0, [sp, #64]
   15594:	mov	v1.16b, v2.16b
   15598:	str	q4, [sp, #144]
   1559c:	sub	x20, x20, #0x10
   155a0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   155a4:	ldr	q4, [sp, #144]
   155a8:	mov	v1.16b, v4.16b
   155ac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   155b0:	cmp	x20, x23
   155b4:	mov	v2.16b, v0.16b
   155b8:	b.ne	1558c <__j0l_finite@GLIBC_2.17+0x72c>  // b.any
   155bc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   155c0:	add	x0, x0, #0xe30
   155c4:	str	q0, [sp, #144]
   155c8:	add	x20, x22, #0x40
   155cc:	ldr	q0, [sp, #64]
   155d0:	add	x19, x19, #0xe00
   155d4:	ldr	q1, [x0]
   155d8:	add	x20, x20, #0xd70
   155dc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   155e0:	mov	v1.16b, v0.16b
   155e4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   155e8:	add	x0, x0, #0xe40
   155ec:	ldr	q2, [sp, #144]
   155f0:	ldr	q4, [x0]
   155f4:	b	155fc <__j0l_finite@GLIBC_2.17+0x79c>
   155f8:	ldr	q4, [x19]
   155fc:	ldr	q0, [sp, #64]
   15600:	sub	x19, x19, #0x10
   15604:	str	q2, [sp, #144]
   15608:	str	q4, [sp, #160]
   1560c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15610:	ldr	q4, [sp, #160]
   15614:	mov	v1.16b, v4.16b
   15618:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1561c:	cmp	x19, x20
   15620:	mov	v1.16b, v0.16b
   15624:	ldr	q2, [sp, #144]
   15628:	b.ne	155f8 <__j0l_finite@GLIBC_2.17+0x798>  // b.any
   1562c:	b	15390 <__j0l_finite@GLIBC_2.17+0x530>
   15630:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15634:	add	x0, x0, #0xb70
   15638:	ldr	q0, [sp, #96]
   1563c:	ldr	q1, [x0]
   15640:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15644:	ldr	q1, [sp, #112]
   15648:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1564c:	mov	v2.16b, v0.16b
   15650:	b	15070 <__j0l_finite@GLIBC_2.17+0x210>
   15654:	stp	x19, x22, [sp, #64]
   15658:	stp	x19, x22, [sp, #80]
   1565c:	ldr	q1, [sp, #64]
   15660:	ldr	q0, [sp, #80]
   15664:	str	x23, [sp, #48]
   15668:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1566c:	bl	205f0 <cosf128@@GLIBC_2.27>
   15670:	str	q0, [sp, #64]
   15674:	ldr	q1, [sp, #192]
   15678:	ldr	q0, [sp, #208]
   1567c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15680:	movi	v1.2d, #0x0
   15684:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   15688:	ldp	x20, x23, [sp, #64]
   1568c:	str	x20, [sp, #64]
   15690:	eor	x23, x23, #0x8000000000000000
   15694:	tbnz	w0, #31, 15a3c <__j0l_finite@GLIBC_2.17+0xbdc>
   15698:	str	x23, [sp, #72]
   1569c:	ldr	q1, [sp, #96]
   156a0:	ldr	q0, [sp, #64]
   156a4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   156a8:	str	q0, [sp, #128]
   156ac:	ldr	x23, [sp, #48]
   156b0:	b	15138 <__j0l_finite@GLIBC_2.17+0x2d8>
   156b4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   156b8:	add	x0, x0, #0xba0
   156bc:	ldr	q0, [sp, #80]
   156c0:	adrp	x22, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   156c4:	add	x20, x22, #0x140
   156c8:	ldr	q1, [x0]
   156cc:	mov	x19, x20
   156d0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   156d4:	cmp	w0, #0x0
   156d8:	b.gt	15f38 <__j0l_finite@GLIBC_2.17+0x10d8>
   156dc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   156e0:	add	x0, x0, #0xed0
   156e4:	add	x20, x20, #0x10
   156e8:	sub	x23, x19, #0x80
   156ec:	ldr	q4, [x0]
   156f0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   156f4:	add	x0, x0, #0xee0
   156f8:	ldr	q2, [x0]
   156fc:	b	15704 <__j0l_finite@GLIBC_2.17+0x8a4>
   15700:	ldr	q4, [x20]
   15704:	ldr	q0, [sp, #64]
   15708:	mov	v1.16b, v2.16b
   1570c:	str	q4, [sp, #144]
   15710:	sub	x20, x20, #0x10
   15714:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15718:	ldr	q4, [sp, #144]
   1571c:	mov	v1.16b, v4.16b
   15720:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15724:	cmp	x20, x23
   15728:	mov	v2.16b, v0.16b
   1572c:	b.ne	15700 <__j0l_finite@GLIBC_2.17+0x8a0>  // b.any
   15730:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15734:	add	x0, x0, #0xef0
   15738:	str	q0, [sp, #144]
   1573c:	add	x20, x22, #0x140
   15740:	ldr	q0, [sp, #64]
   15744:	add	x19, x19, #0xa0
   15748:	ldr	q1, [x0]
   1574c:	add	x23, x20, #0x20
   15750:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15754:	mov	v1.16b, v0.16b
   15758:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1575c:	add	x0, x0, #0xf00
   15760:	ldr	q2, [sp, #144]
   15764:	ldr	q4, [x0]
   15768:	b	15770 <__j0l_finite@GLIBC_2.17+0x910>
   1576c:	ldr	q4, [x19]
   15770:	ldr	q0, [sp, #64]
   15774:	sub	x19, x19, #0x10
   15778:	str	q2, [sp, #144]
   1577c:	str	q4, [sp, #160]
   15780:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15784:	ldr	q4, [sp, #160]
   15788:	mov	v1.16b, v4.16b
   1578c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15790:	cmp	x19, x23
   15794:	mov	v1.16b, v0.16b
   15798:	ldr	q2, [sp, #144]
   1579c:	b.ne	1576c <__j0l_finite@GLIBC_2.17+0x90c>  // b.any
   157a0:	mov	v0.16b, v2.16b
   157a4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   157a8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   157ac:	add	x0, x0, #0xf10
   157b0:	add	x19, x22, #0x140
   157b4:	add	x20, x20, #0x140
   157b8:	add	x23, x19, #0xb0
   157bc:	str	q0, [sp, #176]
   157c0:	ldr	q4, [x0]
   157c4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   157c8:	add	x0, x0, #0xf20
   157cc:	ldr	q2, [x0]
   157d0:	b	157d8 <__j0l_finite@GLIBC_2.17+0x978>
   157d4:	ldr	q4, [x20]
   157d8:	ldr	q0, [sp, #64]
   157dc:	mov	v1.16b, v2.16b
   157e0:	str	q4, [sp, #144]
   157e4:	sub	x20, x20, #0x10
   157e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   157ec:	ldr	q4, [sp, #144]
   157f0:	mov	v1.16b, v4.16b
   157f4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   157f8:	cmp	x20, x23
   157fc:	mov	v2.16b, v0.16b
   15800:	b.ne	157d4 <__j0l_finite@GLIBC_2.17+0x974>  // b.any
   15804:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15808:	add	x0, x0, #0xf30
   1580c:	str	q0, [sp, #144]
   15810:	add	x20, x22, #0x140
   15814:	ldr	q0, [sp, #64]
   15818:	add	x19, x19, #0x1d0
   1581c:	ldr	q1, [x0]
   15820:	add	x20, x20, #0x150
   15824:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15828:	mov	v1.16b, v0.16b
   1582c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15830:	add	x0, x0, #0xf40
   15834:	ldr	q2, [sp, #144]
   15838:	ldr	q4, [x0]
   1583c:	b	15844 <__j0l_finite@GLIBC_2.17+0x9e4>
   15840:	ldr	q4, [x19]
   15844:	ldr	q0, [sp, #64]
   15848:	sub	x19, x19, #0x10
   1584c:	str	q2, [sp, #144]
   15850:	str	q4, [sp, #160]
   15854:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15858:	ldr	q4, [sp, #160]
   1585c:	mov	v1.16b, v4.16b
   15860:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15864:	cmp	x19, x20
   15868:	mov	v1.16b, v0.16b
   1586c:	ldr	q2, [sp, #144]
   15870:	b.ne	15840 <__j0l_finite@GLIBC_2.17+0x9e0>  // b.any
   15874:	b	15390 <__j0l_finite@GLIBC_2.17+0x530>
   15878:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1587c:	add	x0, x0, #0xca0
   15880:	ldr	q0, [sp, #80]
   15884:	adrp	x22, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   15888:	add	x20, x22, #0x40
   1588c:	ldr	q1, [x0]
   15890:	mov	x19, x20
   15894:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   15898:	cmp	w0, #0x0
   1589c:	b.gt	15c00 <__j0l_finite@GLIBC_2.17+0xda0>
   158a0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   158a4:	add	x0, x0, #0xcb0
   158a8:	add	x20, x20, #0x6e0
   158ac:	add	x23, x19, #0x640
   158b0:	ldr	q4, [x0]
   158b4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   158b8:	add	x0, x0, #0xcc0
   158bc:	ldr	q2, [x0]
   158c0:	b	158c8 <__j0l_finite@GLIBC_2.17+0xa68>
   158c4:	ldr	q4, [x20]
   158c8:	ldr	q0, [sp, #64]
   158cc:	mov	v1.16b, v2.16b
   158d0:	str	q4, [sp, #144]
   158d4:	sub	x20, x20, #0x10
   158d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   158dc:	ldr	q4, [sp, #144]
   158e0:	mov	v1.16b, v4.16b
   158e4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   158e8:	cmp	x20, x23
   158ec:	mov	v2.16b, v0.16b
   158f0:	b.ne	158c4 <__j0l_finite@GLIBC_2.17+0xa64>  // b.any
   158f4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   158f8:	add	x0, x0, #0xcd0
   158fc:	str	q0, [sp, #144]
   15900:	add	x20, x22, #0x40
   15904:	ldr	q0, [sp, #64]
   15908:	add	x19, x19, #0x780
   1590c:	ldr	q1, [x0]
   15910:	add	x23, x20, #0x6f0
   15914:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15918:	mov	v1.16b, v0.16b
   1591c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15920:	add	x0, x0, #0xce0
   15924:	ldr	q2, [sp, #144]
   15928:	ldr	q4, [x0]
   1592c:	b	15934 <__j0l_finite@GLIBC_2.17+0xad4>
   15930:	ldr	q4, [x19]
   15934:	ldr	q0, [sp, #64]
   15938:	sub	x19, x19, #0x10
   1593c:	str	q2, [sp, #144]
   15940:	str	q4, [sp, #160]
   15944:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15948:	ldr	q4, [sp, #160]
   1594c:	mov	v1.16b, v4.16b
   15950:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15954:	cmp	x19, x23
   15958:	mov	v1.16b, v0.16b
   1595c:	ldr	q2, [sp, #144]
   15960:	b.ne	15930 <__j0l_finite@GLIBC_2.17+0xad0>  // b.any
   15964:	mov	v0.16b, v2.16b
   15968:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1596c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15970:	add	x0, x0, #0xcf0
   15974:	add	x19, x22, #0x40
   15978:	add	x20, x20, #0x830
   1597c:	add	x23, x19, #0x790
   15980:	str	q0, [sp, #176]
   15984:	ldr	q4, [x0]
   15988:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1598c:	add	x0, x0, #0xd00
   15990:	ldr	q2, [x0]
   15994:	b	1599c <__j0l_finite@GLIBC_2.17+0xb3c>
   15998:	ldr	q4, [x20]
   1599c:	ldr	q0, [sp, #64]
   159a0:	mov	v1.16b, v2.16b
   159a4:	str	q4, [sp, #144]
   159a8:	sub	x20, x20, #0x10
   159ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   159b0:	ldr	q4, [sp, #144]
   159b4:	mov	v1.16b, v4.16b
   159b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   159bc:	cmp	x20, x23
   159c0:	mov	v2.16b, v0.16b
   159c4:	b.ne	15998 <__j0l_finite@GLIBC_2.17+0xb38>  // b.any
   159c8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   159cc:	add	x0, x0, #0xd10
   159d0:	str	q0, [sp, #144]
   159d4:	add	x20, x22, #0x40
   159d8:	ldr	q0, [sp, #64]
   159dc:	add	x19, x19, #0x8e0
   159e0:	ldr	q1, [x0]
   159e4:	add	x20, x20, #0x840
   159e8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   159ec:	mov	v1.16b, v0.16b
   159f0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   159f4:	add	x0, x0, #0xd20
   159f8:	ldr	q2, [sp, #144]
   159fc:	ldr	q4, [x0]
   15a00:	b	15a08 <__j0l_finite@GLIBC_2.17+0xba8>
   15a04:	ldr	q4, [x19]
   15a08:	ldr	q0, [sp, #64]
   15a0c:	sub	x19, x19, #0x10
   15a10:	str	q2, [sp, #144]
   15a14:	str	q4, [sp, #160]
   15a18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15a1c:	ldr	q4, [sp, #160]
   15a20:	mov	v1.16b, v4.16b
   15a24:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15a28:	cmp	x19, x20
   15a2c:	mov	v1.16b, v0.16b
   15a30:	ldr	q2, [sp, #144]
   15a34:	b.ne	15a04 <__j0l_finite@GLIBC_2.17+0xba4>  // b.any
   15a38:	b	15390 <__j0l_finite@GLIBC_2.17+0x530>
   15a3c:	str	x23, [sp, #72]
   15a40:	ldr	q1, [sp, #128]
   15a44:	ldr	q0, [sp, #64]
   15a48:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   15a4c:	str	q0, [sp, #96]
   15a50:	ldr	x23, [sp, #48]
   15a54:	b	15138 <__j0l_finite@GLIBC_2.17+0x2d8>
   15a58:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15a5c:	add	x0, x0, #0xe50
   15a60:	add	x19, x22, #0x40
   15a64:	mov	x20, x19
   15a68:	add	x19, x19, #0xea0
   15a6c:	ldr	q4, [x0]
   15a70:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15a74:	add	x0, x0, #0xe60
   15a78:	add	x23, x20, #0xe10
   15a7c:	ldr	q2, [x0]
   15a80:	b	15a88 <__j0l_finite@GLIBC_2.17+0xc28>
   15a84:	ldr	q4, [x19]
   15a88:	ldr	q0, [sp, #64]
   15a8c:	mov	v1.16b, v2.16b
   15a90:	str	q4, [sp, #144]
   15a94:	sub	x19, x19, #0x10
   15a98:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15a9c:	ldr	q4, [sp, #144]
   15aa0:	mov	v1.16b, v4.16b
   15aa4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15aa8:	cmp	x19, x23
   15aac:	mov	v2.16b, v0.16b
   15ab0:	b.ne	15a84 <__j0l_finite@GLIBC_2.17+0xc24>  // b.any
   15ab4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15ab8:	add	x0, x0, #0xe70
   15abc:	str	q0, [sp, #144]
   15ac0:	add	x19, x22, #0x40
   15ac4:	ldr	q0, [sp, #64]
   15ac8:	add	x20, x20, #0xf30
   15acc:	ldr	q1, [x0]
   15ad0:	add	x23, x19, #0xeb0
   15ad4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15ad8:	mov	v1.16b, v0.16b
   15adc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15ae0:	add	x0, x0, #0xe80
   15ae4:	ldr	q2, [sp, #144]
   15ae8:	ldr	q4, [x0]
   15aec:	b	15af4 <__j0l_finite@GLIBC_2.17+0xc94>
   15af0:	ldr	q4, [x20]
   15af4:	ldr	q0, [sp, #64]
   15af8:	sub	x20, x20, #0x10
   15afc:	str	q2, [sp, #144]
   15b00:	str	q4, [sp, #160]
   15b04:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15b08:	ldr	q4, [sp, #160]
   15b0c:	mov	v1.16b, v4.16b
   15b10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15b14:	cmp	x20, x23
   15b18:	mov	v1.16b, v0.16b
   15b1c:	ldr	q2, [sp, #144]
   15b20:	b.ne	15af0 <__j0l_finite@GLIBC_2.17+0xc90>  // b.any
   15b24:	mov	v0.16b, v2.16b
   15b28:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   15b2c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15b30:	add	x0, x0, #0xe90
   15b34:	add	x20, x22, #0x40
   15b38:	add	x19, x19, #0xfd0
   15b3c:	add	x23, x20, #0xf40
   15b40:	str	q0, [sp, #176]
   15b44:	ldr	q4, [x0]
   15b48:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15b4c:	add	x0, x0, #0xea0
   15b50:	ldr	q2, [x0]
   15b54:	b	15b5c <__j0l_finite@GLIBC_2.17+0xcfc>
   15b58:	ldr	q4, [x19]
   15b5c:	ldr	q0, [sp, #64]
   15b60:	mov	v1.16b, v2.16b
   15b64:	str	q4, [sp, #144]
   15b68:	sub	x19, x19, #0x10
   15b6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15b70:	ldr	q4, [sp, #144]
   15b74:	mov	v1.16b, v4.16b
   15b78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15b7c:	cmp	x19, x23
   15b80:	mov	v2.16b, v0.16b
   15b84:	b.ne	15b58 <__j0l_finite@GLIBC_2.17+0xcf8>  // b.any
   15b88:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15b8c:	add	x0, x0, #0xeb0
   15b90:	str	q0, [sp, #144]
   15b94:	add	x19, x22, #0x40
   15b98:	ldr	q0, [sp, #64]
   15b9c:	add	x19, x19, #0xfe0
   15ba0:	ldr	q1, [x0]
   15ba4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15ba8:	mov	v1.16b, v0.16b
   15bac:	mov	x0, #0x1070                	// #4208
   15bb0:	add	x20, x20, x0
   15bb4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15bb8:	add	x0, x0, #0xec0
   15bbc:	ldr	q2, [sp, #144]
   15bc0:	ldr	q4, [x0]
   15bc4:	b	15bcc <__j0l_finite@GLIBC_2.17+0xd6c>
   15bc8:	ldr	q4, [x20]
   15bcc:	ldr	q0, [sp, #64]
   15bd0:	sub	x20, x20, #0x10
   15bd4:	str	q2, [sp, #144]
   15bd8:	str	q4, [sp, #160]
   15bdc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15be0:	ldr	q4, [sp, #160]
   15be4:	mov	v1.16b, v4.16b
   15be8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15bec:	cmp	x20, x19
   15bf0:	mov	v1.16b, v0.16b
   15bf4:	ldr	q2, [sp, #144]
   15bf8:	b.ne	15bc8 <__j0l_finite@GLIBC_2.17+0xd68>  // b.any
   15bfc:	b	15390 <__j0l_finite@GLIBC_2.17+0x530>
   15c00:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15c04:	add	x0, x0, #0xd30
   15c08:	add	x20, x20, #0x980
   15c0c:	add	x23, x19, #0x8f0
   15c10:	ldr	q4, [x0]
   15c14:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15c18:	add	x0, x0, #0xd40
   15c1c:	ldr	q2, [x0]
   15c20:	b	15c28 <__j0l_finite@GLIBC_2.17+0xdc8>
   15c24:	ldr	q4, [x20]
   15c28:	ldr	q0, [sp, #64]
   15c2c:	mov	v1.16b, v2.16b
   15c30:	str	q4, [sp, #144]
   15c34:	sub	x20, x20, #0x10
   15c38:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15c3c:	ldr	q4, [sp, #144]
   15c40:	mov	v1.16b, v4.16b
   15c44:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15c48:	cmp	x20, x23
   15c4c:	mov	v2.16b, v0.16b
   15c50:	b.ne	15c24 <__j0l_finite@GLIBC_2.17+0xdc4>  // b.any
   15c54:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15c58:	add	x0, x0, #0xd50
   15c5c:	str	q0, [sp, #144]
   15c60:	add	x20, x22, #0x40
   15c64:	ldr	q0, [sp, #64]
   15c68:	add	x19, x19, #0xa20
   15c6c:	ldr	q1, [x0]
   15c70:	add	x23, x20, #0x990
   15c74:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15c78:	mov	v1.16b, v0.16b
   15c7c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15c80:	add	x0, x0, #0xd60
   15c84:	ldr	q2, [sp, #144]
   15c88:	ldr	q4, [x0]
   15c8c:	b	15c94 <__j0l_finite@GLIBC_2.17+0xe34>
   15c90:	ldr	q4, [x19]
   15c94:	ldr	q0, [sp, #64]
   15c98:	sub	x19, x19, #0x10
   15c9c:	str	q2, [sp, #144]
   15ca0:	str	q4, [sp, #160]
   15ca4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15ca8:	ldr	q4, [sp, #160]
   15cac:	mov	v1.16b, v4.16b
   15cb0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15cb4:	cmp	x19, x23
   15cb8:	mov	v1.16b, v0.16b
   15cbc:	ldr	q2, [sp, #144]
   15cc0:	b.ne	15c90 <__j0l_finite@GLIBC_2.17+0xe30>  // b.any
   15cc4:	mov	v0.16b, v2.16b
   15cc8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   15ccc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15cd0:	add	x0, x0, #0xd70
   15cd4:	add	x19, x22, #0x40
   15cd8:	add	x20, x20, #0xad0
   15cdc:	add	x23, x19, #0xa30
   15ce0:	str	q0, [sp, #176]
   15ce4:	ldr	q4, [x0]
   15ce8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15cec:	add	x0, x0, #0xd80
   15cf0:	ldr	q2, [x0]
   15cf4:	b	15cfc <__j0l_finite@GLIBC_2.17+0xe9c>
   15cf8:	ldr	q4, [x20]
   15cfc:	ldr	q0, [sp, #64]
   15d00:	mov	v1.16b, v2.16b
   15d04:	str	q4, [sp, #144]
   15d08:	sub	x20, x20, #0x10
   15d0c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15d10:	ldr	q4, [sp, #144]
   15d14:	mov	v1.16b, v4.16b
   15d18:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15d1c:	cmp	x20, x23
   15d20:	mov	v2.16b, v0.16b
   15d24:	b.ne	15cf8 <__j0l_finite@GLIBC_2.17+0xe98>  // b.any
   15d28:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15d2c:	add	x0, x0, #0xd90
   15d30:	str	q0, [sp, #144]
   15d34:	add	x20, x22, #0x40
   15d38:	ldr	q0, [sp, #64]
   15d3c:	add	x19, x19, #0xb70
   15d40:	ldr	q1, [x0]
   15d44:	add	x20, x20, #0xae0
   15d48:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15d4c:	mov	v1.16b, v0.16b
   15d50:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15d54:	add	x0, x0, #0xda0
   15d58:	ldr	q2, [sp, #144]
   15d5c:	ldr	q4, [x0]
   15d60:	b	15d68 <__j0l_finite@GLIBC_2.17+0xf08>
   15d64:	ldr	q4, [x19]
   15d68:	ldr	q0, [sp, #64]
   15d6c:	sub	x19, x19, #0x10
   15d70:	str	q2, [sp, #144]
   15d74:	str	q4, [sp, #160]
   15d78:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15d7c:	ldr	q4, [sp, #160]
   15d80:	mov	v1.16b, v4.16b
   15d84:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15d88:	cmp	x19, x20
   15d8c:	mov	v1.16b, v0.16b
   15d90:	ldr	q2, [sp, #144]
   15d94:	b.ne	15d64 <__j0l_finite@GLIBC_2.17+0xf04>  // b.any
   15d98:	b	15390 <__j0l_finite@GLIBC_2.17+0x530>
   15d9c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15da0:	add	x0, x0, #0xc20
   15da4:	add	x20, x20, #0x400
   15da8:	add	x23, x19, #0x360
   15dac:	ldr	q4, [x0]
   15db0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15db4:	add	x0, x0, #0xc30
   15db8:	ldr	q2, [x0]
   15dbc:	b	15dc4 <__j0l_finite@GLIBC_2.17+0xf64>
   15dc0:	ldr	q4, [x20]
   15dc4:	ldr	q0, [sp, #64]
   15dc8:	mov	v1.16b, v2.16b
   15dcc:	str	q4, [sp, #144]
   15dd0:	sub	x20, x20, #0x10
   15dd4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15dd8:	ldr	q4, [sp, #144]
   15ddc:	mov	v1.16b, v4.16b
   15de0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15de4:	cmp	x20, x23
   15de8:	mov	v2.16b, v0.16b
   15dec:	b.ne	15dc0 <__j0l_finite@GLIBC_2.17+0xf60>  // b.any
   15df0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15df4:	add	x0, x0, #0xc40
   15df8:	str	q0, [sp, #144]
   15dfc:	add	x20, x22, #0x40
   15e00:	ldr	q0, [sp, #64]
   15e04:	add	x19, x19, #0x4b0
   15e08:	ldr	q1, [x0]
   15e0c:	add	x23, x20, #0x410
   15e10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15e14:	mov	v1.16b, v0.16b
   15e18:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15e1c:	add	x0, x0, #0xc50
   15e20:	ldr	q2, [sp, #144]
   15e24:	ldr	q4, [x0]
   15e28:	b	15e30 <__j0l_finite@GLIBC_2.17+0xfd0>
   15e2c:	ldr	q4, [x19]
   15e30:	ldr	q0, [sp, #64]
   15e34:	sub	x19, x19, #0x10
   15e38:	str	q2, [sp, #144]
   15e3c:	str	q4, [sp, #160]
   15e40:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15e44:	ldr	q4, [sp, #160]
   15e48:	mov	v1.16b, v4.16b
   15e4c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15e50:	cmp	x19, x23
   15e54:	mov	v1.16b, v0.16b
   15e58:	ldr	q2, [sp, #144]
   15e5c:	b.ne	15e2c <__j0l_finite@GLIBC_2.17+0xfcc>  // b.any
   15e60:	mov	v0.16b, v2.16b
   15e64:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   15e68:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15e6c:	add	x0, x0, #0xc60
   15e70:	add	x19, x22, #0x40
   15e74:	add	x20, x20, #0x570
   15e78:	add	x23, x19, #0x4c0
   15e7c:	str	q0, [sp, #176]
   15e80:	ldr	q4, [x0]
   15e84:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15e88:	add	x0, x0, #0xc70
   15e8c:	ldr	q2, [x0]
   15e90:	b	15e98 <__j0l_finite@GLIBC_2.17+0x1038>
   15e94:	ldr	q4, [x20]
   15e98:	ldr	q0, [sp, #64]
   15e9c:	mov	v1.16b, v2.16b
   15ea0:	str	q4, [sp, #144]
   15ea4:	sub	x20, x20, #0x10
   15ea8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15eac:	ldr	q4, [sp, #144]
   15eb0:	mov	v1.16b, v4.16b
   15eb4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15eb8:	cmp	x20, x23
   15ebc:	mov	v2.16b, v0.16b
   15ec0:	b.ne	15e94 <__j0l_finite@GLIBC_2.17+0x1034>  // b.any
   15ec4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15ec8:	add	x0, x0, #0xc80
   15ecc:	str	q0, [sp, #144]
   15ed0:	add	x20, x22, #0x40
   15ed4:	ldr	q0, [sp, #64]
   15ed8:	add	x19, x19, #0x630
   15edc:	ldr	q1, [x0]
   15ee0:	add	x20, x20, #0x580
   15ee4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15ee8:	mov	v1.16b, v0.16b
   15eec:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15ef0:	add	x0, x0, #0xc90
   15ef4:	ldr	q2, [sp, #144]
   15ef8:	ldr	q4, [x0]
   15efc:	b	15f04 <__j0l_finite@GLIBC_2.17+0x10a4>
   15f00:	ldr	q4, [x19]
   15f04:	ldr	q0, [sp, #64]
   15f08:	sub	x19, x19, #0x10
   15f0c:	str	q2, [sp, #144]
   15f10:	str	q4, [sp, #160]
   15f14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15f18:	ldr	q4, [sp, #160]
   15f1c:	mov	v1.16b, v4.16b
   15f20:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15f24:	cmp	x19, x20
   15f28:	mov	v1.16b, v0.16b
   15f2c:	ldr	q2, [sp, #144]
   15f30:	b.ne	15f00 <__j0l_finite@GLIBC_2.17+0x10a0>  // b.any
   15f34:	b	15390 <__j0l_finite@GLIBC_2.17+0x530>
   15f38:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15f3c:	add	x0, x0, #0xf50
   15f40:	add	x20, x20, #0x260
   15f44:	add	x23, x19, #0x1e0
   15f48:	ldr	q4, [x0]
   15f4c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15f50:	add	x0, x0, #0xf60
   15f54:	ldr	q2, [x0]
   15f58:	b	15f60 <__j0l_finite@GLIBC_2.17+0x1100>
   15f5c:	ldr	q4, [x20]
   15f60:	ldr	q0, [sp, #64]
   15f64:	mov	v1.16b, v2.16b
   15f68:	str	q4, [sp, #144]
   15f6c:	sub	x20, x20, #0x10
   15f70:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15f74:	ldr	q4, [sp, #144]
   15f78:	mov	v1.16b, v4.16b
   15f7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15f80:	cmp	x20, x23
   15f84:	mov	v2.16b, v0.16b
   15f88:	b.ne	15f5c <__j0l_finite@GLIBC_2.17+0x10fc>  // b.any
   15f8c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15f90:	add	x0, x0, #0xf70
   15f94:	str	q0, [sp, #144]
   15f98:	add	x20, x22, #0x140
   15f9c:	ldr	q0, [sp, #64]
   15fa0:	add	x19, x19, #0x2f0
   15fa4:	ldr	q1, [x0]
   15fa8:	add	x23, x20, #0x270
   15fac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15fb0:	mov	v1.16b, v0.16b
   15fb4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   15fb8:	add	x0, x0, #0xf80
   15fbc:	ldr	q2, [sp, #144]
   15fc0:	ldr	q4, [x0]
   15fc4:	b	15fcc <__j0l_finite@GLIBC_2.17+0x116c>
   15fc8:	ldr	q4, [x19]
   15fcc:	ldr	q0, [sp, #64]
   15fd0:	sub	x19, x19, #0x10
   15fd4:	str	q2, [sp, #144]
   15fd8:	str	q4, [sp, #160]
   15fdc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   15fe0:	ldr	q4, [sp, #160]
   15fe4:	mov	v1.16b, v4.16b
   15fe8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   15fec:	cmp	x19, x23
   15ff0:	mov	v1.16b, v0.16b
   15ff4:	ldr	q2, [sp, #144]
   15ff8:	b.ne	15fc8 <__j0l_finite@GLIBC_2.17+0x1168>  // b.any
   15ffc:	mov	v0.16b, v2.16b
   16000:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16004:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16008:	add	x0, x0, #0xf90
   1600c:	add	x19, x22, #0x140
   16010:	add	x20, x20, #0x390
   16014:	add	x23, x19, #0x300
   16018:	str	q0, [sp, #176]
   1601c:	ldr	q4, [x0]
   16020:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16024:	add	x0, x0, #0xfa0
   16028:	ldr	q2, [x0]
   1602c:	b	16034 <__j0l_finite@GLIBC_2.17+0x11d4>
   16030:	ldr	q4, [x20]
   16034:	ldr	q0, [sp, #64]
   16038:	mov	v1.16b, v2.16b
   1603c:	str	q4, [sp, #144]
   16040:	sub	x20, x20, #0x10
   16044:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16048:	ldr	q4, [sp, #144]
   1604c:	mov	v1.16b, v4.16b
   16050:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16054:	cmp	x20, x23
   16058:	mov	v2.16b, v0.16b
   1605c:	b.ne	16030 <__j0l_finite@GLIBC_2.17+0x11d0>  // b.any
   16060:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16064:	add	x0, x0, #0xfb0
   16068:	str	q0, [sp, #144]
   1606c:	add	x20, x22, #0x140
   16070:	ldr	q0, [sp, #64]
   16074:	add	x19, x19, #0x420
   16078:	ldr	q1, [x0]
   1607c:	add	x20, x20, #0x3a0
   16080:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16084:	mov	v1.16b, v0.16b
   16088:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1608c:	add	x0, x0, #0xfc0
   16090:	ldr	q2, [sp, #144]
   16094:	ldr	q4, [x0]
   16098:	b	160a0 <__j0l_finite@GLIBC_2.17+0x1240>
   1609c:	ldr	q4, [x19]
   160a0:	ldr	q0, [sp, #64]
   160a4:	sub	x19, x19, #0x10
   160a8:	str	q2, [sp, #144]
   160ac:	str	q4, [sp, #160]
   160b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   160b4:	ldr	q4, [sp, #160]
   160b8:	mov	v1.16b, v4.16b
   160bc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   160c0:	cmp	x19, x20
   160c4:	mov	v1.16b, v0.16b
   160c8:	ldr	q2, [sp, #144]
   160cc:	b.ne	1609c <__j0l_finite@GLIBC_2.17+0x123c>  // b.any
   160d0:	b	15390 <__j0l_finite@GLIBC_2.17+0x530>
   160d4:	str	x23, [sp, #48]
   160d8:	bl	ba70 <__stack_chk_fail@plt>
   160dc:	nop

00000000000160e0 <__y0l_finite@GLIBC_2.17>:
   160e0:	stp	x29, x30, [sp, #-256]!
   160e4:	mov	x29, sp
   160e8:	stp	x19, x20, [sp, #16]
   160ec:	stp	x21, x22, [sp, #32]
   160f0:	stp	x23, x24, [sp, #48]
   160f4:	adrp	x23, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   160f8:	str	q0, [sp, #80]
   160fc:	ldp	x19, x22, [sp, #80]
   16100:	ldr	x0, [x23, #4032]
   16104:	ldr	x1, [x0]
   16108:	str	x1, [sp, #248]
   1610c:	mov	x1, #0x0                   	// #0
   16110:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   16114:	add	x0, x0, #0x300
   16118:	and	x20, x22, #0x7fffffffffffffff
   1611c:	str	x20, [sp, #88]
   16120:	ldr	q1, [x0]
   16124:	ldr	q0, [sp, #80]
   16128:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   1612c:	cbnz	w0, 16328 <__y0l_finite@GLIBC_2.17+0x248>
   16130:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   16134:	add	x0, x0, #0x300
   16138:	stp	x19, x20, [sp, #80]
   1613c:	ldr	q1, [x0]
   16140:	ldr	q0, [sp, #80]
   16144:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   16148:	cmp	w0, #0x0
   1614c:	b.gt	16328 <__y0l_finite@GLIBC_2.17+0x248>
   16150:	movi	v1.2d, #0x0
   16154:	stp	x19, x22, [sp, #80]
   16158:	ldr	q0, [sp, #80]
   1615c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   16160:	cmp	w0, #0x0
   16164:	b.le	162fc <__y0l_finite@GLIBC_2.17+0x21c>
   16168:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1616c:	add	x0, x0, #0xaf0
   16170:	stp	x19, x20, [sp, #80]
   16174:	ldr	q1, [x0]
   16178:	ldr	q0, [sp, #80]
   1617c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   16180:	str	x19, [sp, #80]
   16184:	cmp	w0, #0x0
   16188:	b.le	16710 <__y0l_finite@GLIBC_2.17+0x630>
   1618c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16190:	add	x0, x0, #0xae0
   16194:	str	x20, [sp, #88]
   16198:	ldr	q1, [x0]
   1619c:	ldr	q0, [sp, #80]
   161a0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   161a4:	cmp	w0, #0x0
   161a8:	b.gt	16384 <__y0l_finite@GLIBC_2.17+0x2a4>
   161ac:	stp	x19, x22, [sp, #80]
   161b0:	adrp	x24, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   161b4:	add	x21, x24, #0x140
   161b8:	stp	x19, x22, [sp, #96]
   161bc:	mov	x20, x21
   161c0:	ldr	q1, [sp, #80]
   161c4:	ldr	q0, [sp, #96]
   161c8:	add	x21, x21, #0x4a0
   161cc:	str	x25, [sp, #64]
   161d0:	add	x25, x20, #0x430
   161d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   161d8:	str	q0, [sp, #80]
   161dc:	adrp	x0, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   161e0:	add	x0, x0, #0x0
   161e4:	ldr	q4, [x0]
   161e8:	adrp	x0, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   161ec:	add	x0, x0, #0x10
   161f0:	ldr	q2, [x0]
   161f4:	b	161fc <__y0l_finite@GLIBC_2.17+0x11c>
   161f8:	ldr	q4, [x21]
   161fc:	ldr	q1, [sp, #80]
   16200:	mov	v0.16b, v2.16b
   16204:	str	q4, [sp, #96]
   16208:	sub	x21, x21, #0x10
   1620c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16210:	ldr	q4, [sp, #96]
   16214:	mov	v1.16b, v4.16b
   16218:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1621c:	cmp	x21, x25
   16220:	mov	v2.16b, v0.16b
   16224:	b.ne	161f8 <__y0l_finite@GLIBC_2.17+0x118>  // b.any
   16228:	adrp	x0, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   1622c:	add	x0, x0, #0x20
   16230:	str	q0, [sp, #96]
   16234:	add	x21, x24, #0x140
   16238:	ldr	q0, [sp, #80]
   1623c:	add	x20, x20, #0x520
   16240:	ldr	q1, [x0]
   16244:	add	x21, x21, #0x4b0
   16248:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1624c:	adrp	x0, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   16250:	add	x0, x0, #0x30
   16254:	ldr	q2, [sp, #96]
   16258:	ldr	q4, [x0]
   1625c:	b	16264 <__y0l_finite@GLIBC_2.17+0x184>
   16260:	ldr	q4, [x20]
   16264:	ldr	q1, [sp, #80]
   16268:	sub	x20, x20, #0x10
   1626c:	str	q2, [sp, #96]
   16270:	str	q4, [sp, #112]
   16274:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16278:	ldr	q4, [sp, #112]
   1627c:	mov	v1.16b, v4.16b
   16280:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16284:	cmp	x20, x21
   16288:	ldr	q2, [sp, #96]
   1628c:	b.ne	16260 <__y0l_finite@GLIBC_2.17+0x180>  // b.any
   16290:	mov	v1.16b, v0.16b
   16294:	mov	v0.16b, v2.16b
   16298:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1629c:	stp	x19, x22, [sp, #80]
   162a0:	str	q0, [sp, #112]
   162a4:	ldr	q0, [sp, #80]
   162a8:	bl	1c928 <__logl_finite@GLIBC_2.17>
   162ac:	stp	x19, x22, [sp, #80]
   162b0:	str	q0, [sp, #96]
   162b4:	ldr	q0, [sp, #80]
   162b8:	bl	14e60 <__j0l_finite@GLIBC_2.17>
   162bc:	mov	v4.16b, v0.16b
   162c0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   162c4:	add	x0, x0, #0xfe0
   162c8:	ldr	q6, [sp, #96]
   162cc:	str	q4, [sp, #80]
   162d0:	ldr	q1, [x0]
   162d4:	mov	v0.16b, v6.16b
   162d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   162dc:	ldr	q4, [sp, #80]
   162e0:	mov	v1.16b, v4.16b
   162e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   162e8:	ldr	q2, [sp, #112]
   162ec:	mov	v1.16b, v2.16b
   162f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   162f4:	ldr	x25, [sp, #64]
   162f8:	b	1635c <__y0l_finite@GLIBC_2.17+0x27c>
   162fc:	movi	v1.2d, #0x0
   16300:	stp	x19, x22, [sp, #80]
   16304:	ldr	q0, [sp, #80]
   16308:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1630c:	movi	v1.2d, #0x0
   16310:	tbnz	w0, #31, 166f4 <__y0l_finite@GLIBC_2.17+0x614>
   16314:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16318:	add	x0, x0, #0xfd0
   1631c:	ldr	q0, [x0]
   16320:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16324:	b	1635c <__y0l_finite@GLIBC_2.17+0x27c>
   16328:	stp	x19, x22, [sp, #80]
   1632c:	stp	x19, x22, [sp, #96]
   16330:	ldr	q1, [sp, #80]
   16334:	ldr	q0, [sp, #96]
   16338:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1633c:	stp	x19, x22, [sp, #80]
   16340:	ldr	q1, [sp, #80]
   16344:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16348:	mov	v1.16b, v0.16b
   1634c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   16350:	add	x0, x0, #0x2f0
   16354:	ldr	q0, [x0]
   16358:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1635c:	ldr	x0, [x23, #4032]
   16360:	ldr	x1, [sp, #248]
   16364:	ldr	x0, [x0]
   16368:	eor	x0, x1, x0
   1636c:	cbnz	x0, 17394 <__y0l_finite@GLIBC_2.17+0x12b4>
   16370:	ldp	x19, x20, [sp, #16]
   16374:	ldp	x21, x22, [sp, #32]
   16378:	ldp	x23, x24, [sp, #48]
   1637c:	ldp	x29, x30, [sp], #256
   16380:	ret
   16384:	stp	x19, x22, [sp, #80]
   16388:	add	x1, sp, #0xd0
   1638c:	add	x0, sp, #0xe0
   16390:	ldr	q0, [sp, #80]
   16394:	bl	24048 <sincosf128@@GLIBC_2.27>
   16398:	ldr	q1, [sp, #208]
   1639c:	ldr	q2, [sp, #224]
   163a0:	str	q1, [sp, #96]
   163a4:	mov	v0.16b, v2.16b
   163a8:	str	q2, [sp, #80]
   163ac:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   163b0:	mov	v4.16b, v0.16b
   163b4:	ldr	q2, [sp, #80]
   163b8:	ldr	q1, [sp, #96]
   163bc:	str	q4, [sp, #112]
   163c0:	mov	v0.16b, v2.16b
   163c4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   163c8:	stp	x19, x20, [sp, #80]
   163cc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   163d0:	add	x0, x0, #0xb50
   163d4:	str	q0, [sp, #144]
   163d8:	ldr	q0, [sp, #80]
   163dc:	ldr	q1, [x0]
   163e0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   163e4:	cmp	w0, #0x0
   163e8:	b.le	16920 <__y0l_finite@GLIBC_2.17+0x840>
   163ec:	stp	x19, x22, [sp, #80]
   163f0:	ldr	q0, [sp, #80]
   163f4:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   163f8:	stp	x19, x20, [sp, #80]
   163fc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16400:	add	x0, x0, #0xb60
   16404:	str	q0, [sp, #128]
   16408:	ldr	q0, [sp, #80]
   1640c:	ldr	q1, [x0]
   16410:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   16414:	cmp	w0, #0x0
   16418:	ldr	q0, [sp, #112]
   1641c:	b.gt	166d8 <__y0l_finite@GLIBC_2.17+0x5f8>
   16420:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   16424:	add	x0, x0, #0x2f0
   16428:	stp	x19, x20, [sp, #80]
   1642c:	ldr	q0, [x0]
   16430:	ldr	q1, [sp, #80]
   16434:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16438:	mov	v1.16b, v0.16b
   1643c:	str	q0, [sp, #96]
   16440:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16444:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16448:	add	x0, x0, #0xb40
   1644c:	str	q0, [sp, #80]
   16450:	ldr	q0, [sp, #96]
   16454:	ldr	q1, [x0]
   16458:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1645c:	cmp	w0, #0x0
   16460:	b.gt	16740 <__y0l_finite@GLIBC_2.17+0x660>
   16464:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16468:	add	x0, x0, #0xb80
   1646c:	ldr	q0, [sp, #96]
   16470:	ldr	q1, [x0]
   16474:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   16478:	cmp	w0, #0x0
   1647c:	b.gt	16b3c <__y0l_finite@GLIBC_2.17+0xa5c>
   16480:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16484:	add	x0, x0, #0xb90
   16488:	ldr	q0, [sp, #96]
   1648c:	adrp	x19, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   16490:	add	x21, x19, #0x40
   16494:	ldr	q1, [x0]
   16498:	mov	x20, x21
   1649c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   164a0:	cmp	w0, #0x0
   164a4:	b.gt	16d18 <__y0l_finite@GLIBC_2.17+0xc38>
   164a8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   164ac:	add	x0, x0, #0xba0
   164b0:	add	x21, x21, #0x160
   164b4:	add	x22, x20, #0xd0
   164b8:	ldr	q4, [x0]
   164bc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   164c0:	add	x0, x0, #0xbb0
   164c4:	ldr	q2, [x0]
   164c8:	b	164d0 <__y0l_finite@GLIBC_2.17+0x3f0>
   164cc:	ldr	q4, [x21]
   164d0:	ldr	q0, [sp, #80]
   164d4:	mov	v1.16b, v2.16b
   164d8:	str	q4, [sp, #160]
   164dc:	sub	x21, x21, #0x10
   164e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   164e4:	ldr	q4, [sp, #160]
   164e8:	mov	v1.16b, v4.16b
   164ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   164f0:	cmp	x21, x22
   164f4:	mov	v2.16b, v0.16b
   164f8:	b.ne	164cc <__y0l_finite@GLIBC_2.17+0x3ec>  // b.any
   164fc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16500:	add	x0, x0, #0xbc0
   16504:	str	q0, [sp, #160]
   16508:	add	x21, x19, #0x40
   1650c:	ldr	q0, [sp, #80]
   16510:	add	x20, x20, #0x200
   16514:	ldr	q1, [x0]
   16518:	add	x22, x21, #0x170
   1651c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16520:	mov	v1.16b, v0.16b
   16524:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16528:	add	x0, x0, #0xbd0
   1652c:	ldr	q2, [sp, #160]
   16530:	ldr	q4, [x0]
   16534:	b	1653c <__y0l_finite@GLIBC_2.17+0x45c>
   16538:	ldr	q4, [x20]
   1653c:	ldr	q0, [sp, #80]
   16540:	sub	x20, x20, #0x10
   16544:	str	q2, [sp, #160]
   16548:	str	q4, [sp, #176]
   1654c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16550:	ldr	q4, [sp, #176]
   16554:	mov	v1.16b, v4.16b
   16558:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1655c:	cmp	x20, x22
   16560:	mov	v1.16b, v0.16b
   16564:	ldr	q2, [sp, #160]
   16568:	b.ne	16538 <__y0l_finite@GLIBC_2.17+0x458>  // b.any
   1656c:	mov	v0.16b, v2.16b
   16570:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16574:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16578:	add	x0, x0, #0xbe0
   1657c:	add	x20, x19, #0x40
   16580:	add	x21, x21, #0x2b0
   16584:	add	x22, x20, #0x210
   16588:	str	q0, [sp, #192]
   1658c:	ldr	q4, [x0]
   16590:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16594:	add	x0, x0, #0xbf0
   16598:	ldr	q2, [x0]
   1659c:	b	165a4 <__y0l_finite@GLIBC_2.17+0x4c4>
   165a0:	ldr	q4, [x21]
   165a4:	ldr	q0, [sp, #80]
   165a8:	mov	v1.16b, v2.16b
   165ac:	str	q4, [sp, #160]
   165b0:	sub	x21, x21, #0x10
   165b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   165b8:	ldr	q4, [sp, #160]
   165bc:	mov	v1.16b, v4.16b
   165c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   165c4:	cmp	x21, x22
   165c8:	mov	v2.16b, v0.16b
   165cc:	b.ne	165a0 <__y0l_finite@GLIBC_2.17+0x4c0>  // b.any
   165d0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   165d4:	add	x0, x0, #0xc00
   165d8:	str	q0, [sp, #160]
   165dc:	add	x19, x19, #0x40
   165e0:	ldr	q0, [sp, #80]
   165e4:	add	x20, x20, #0x350
   165e8:	ldr	q1, [x0]
   165ec:	add	x19, x19, #0x2c0
   165f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   165f4:	mov	v1.16b, v0.16b
   165f8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   165fc:	add	x0, x0, #0xc10
   16600:	ldr	q2, [sp, #160]
   16604:	ldr	q4, [x0]
   16608:	b	16610 <__y0l_finite@GLIBC_2.17+0x530>
   1660c:	ldr	q4, [x20]
   16610:	ldr	q0, [sp, #80]
   16614:	sub	x20, x20, #0x10
   16618:	str	q2, [sp, #160]
   1661c:	str	q4, [sp, #176]
   16620:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16624:	ldr	q4, [sp, #176]
   16628:	mov	v1.16b, v4.16b
   1662c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16630:	cmp	x20, x19
   16634:	mov	v1.16b, v0.16b
   16638:	ldr	q2, [sp, #160]
   1663c:	b.ne	1660c <__y0l_finite@GLIBC_2.17+0x52c>  // b.any
   16640:	mov	v0.16b, v2.16b
   16644:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16648:	str	q0, [sp, #176]
   1664c:	ldr	q1, [sp, #80]
   16650:	ldr	q0, [sp, #192]
   16654:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16658:	str	q0, [sp, #160]
   1665c:	ldr	q1, [sp, #80]
   16660:	ldr	q0, [sp, #96]
   16664:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16668:	ldr	q2, [sp, #176]
   1666c:	mov	v1.16b, v2.16b
   16670:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16674:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16678:	add	x0, x0, #0xb80
   1667c:	str	q0, [sp, #80]
   16680:	ldr	q0, [sp, #96]
   16684:	ldr	q1, [x0]
   16688:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1668c:	mov	v1.16b, v0.16b
   16690:	ldr	q2, [sp, #80]
   16694:	mov	v0.16b, v2.16b
   16698:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1669c:	ldr	q1, [sp, #144]
   166a0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   166a4:	str	q0, [sp, #80]
   166a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   166ac:	add	x0, x0, #0x2f0
   166b0:	ldr	q4, [sp, #160]
   166b4:	ldr	q1, [x0]
   166b8:	mov	v0.16b, v4.16b
   166bc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   166c0:	ldr	q1, [sp, #112]
   166c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   166c8:	mov	v1.16b, v0.16b
   166cc:	ldr	q2, [sp, #80]
   166d0:	mov	v0.16b, v2.16b
   166d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   166d8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   166dc:	add	x0, x0, #0xb70
   166e0:	ldr	q1, [x0]
   166e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   166e8:	ldr	q1, [sp, #128]
   166ec:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   166f0:	b	1635c <__y0l_finite@GLIBC_2.17+0x27c>
   166f4:	stp	x19, x22, [sp, #80]
   166f8:	ldr	q0, [sp, #80]
   166fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16700:	mov	v1.16b, v0.16b
   16704:	movi	v0.2d, #0x0
   16708:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1670c:	b	1635c <__y0l_finite@GLIBC_2.17+0x27c>
   16710:	str	x22, [sp, #88]
   16714:	ldr	q0, [sp, #80]
   16718:	bl	1c928 <__logl_finite@GLIBC_2.17>
   1671c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16720:	add	x0, x0, #0xfe0
   16724:	ldr	q1, [x0]
   16728:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1672c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16730:	add	x0, x0, #0xff0
   16734:	ldr	q1, [x0]
   16738:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1673c:	b	1635c <__y0l_finite@GLIBC_2.17+0x27c>
   16740:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16744:	add	x0, x0, #0xdb0
   16748:	ldr	q0, [sp, #96]
   1674c:	ldr	q1, [x0]
   16750:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   16754:	cmp	w0, #0x0
   16758:	b.gt	16978 <__y0l_finite@GLIBC_2.17+0x898>
   1675c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16760:	add	x0, x0, #0xdc0
   16764:	ldr	q0, [sp, #96]
   16768:	adrp	x19, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   1676c:	add	x21, x19, #0x40
   16770:	ldr	q1, [x0]
   16774:	mov	x20, x21
   16778:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1677c:	cmp	w0, #0x0
   16780:	b.gt	171f4 <__y0l_finite@GLIBC_2.17+0x1114>
   16784:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16788:	add	x0, x0, #0xdd0
   1678c:	add	x21, x21, #0xc10
   16790:	add	x22, x20, #0xb80
   16794:	ldr	q4, [x0]
   16798:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1679c:	add	x0, x0, #0xde0
   167a0:	ldr	q2, [x0]
   167a4:	b	167ac <__y0l_finite@GLIBC_2.17+0x6cc>
   167a8:	ldr	q4, [x21]
   167ac:	ldr	q0, [sp, #80]
   167b0:	mov	v1.16b, v2.16b
   167b4:	str	q4, [sp, #160]
   167b8:	sub	x21, x21, #0x10
   167bc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   167c0:	ldr	q4, [sp, #160]
   167c4:	mov	v1.16b, v4.16b
   167c8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   167cc:	cmp	x21, x22
   167d0:	mov	v2.16b, v0.16b
   167d4:	b.ne	167a8 <__y0l_finite@GLIBC_2.17+0x6c8>  // b.any
   167d8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   167dc:	add	x0, x0, #0xdf0
   167e0:	str	q0, [sp, #160]
   167e4:	add	x21, x19, #0x40
   167e8:	ldr	q0, [sp, #80]
   167ec:	add	x20, x20, #0xcb0
   167f0:	ldr	q1, [x0]
   167f4:	add	x22, x21, #0xc20
   167f8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   167fc:	mov	v1.16b, v0.16b
   16800:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16804:	add	x0, x0, #0xe00
   16808:	ldr	q2, [sp, #160]
   1680c:	ldr	q4, [x0]
   16810:	b	16818 <__y0l_finite@GLIBC_2.17+0x738>
   16814:	ldr	q4, [x20]
   16818:	ldr	q0, [sp, #80]
   1681c:	sub	x20, x20, #0x10
   16820:	str	q2, [sp, #160]
   16824:	str	q4, [sp, #176]
   16828:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1682c:	ldr	q4, [sp, #176]
   16830:	mov	v1.16b, v4.16b
   16834:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16838:	cmp	x20, x22
   1683c:	mov	v1.16b, v0.16b
   16840:	ldr	q2, [sp, #160]
   16844:	b.ne	16814 <__y0l_finite@GLIBC_2.17+0x734>  // b.any
   16848:	mov	v0.16b, v2.16b
   1684c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16850:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16854:	add	x0, x0, #0xe10
   16858:	add	x20, x19, #0x40
   1685c:	add	x21, x21, #0xd60
   16860:	add	x22, x20, #0xcc0
   16864:	str	q0, [sp, #192]
   16868:	ldr	q4, [x0]
   1686c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16870:	add	x0, x0, #0xe20
   16874:	ldr	q2, [x0]
   16878:	b	16880 <__y0l_finite@GLIBC_2.17+0x7a0>
   1687c:	ldr	q4, [x21]
   16880:	ldr	q0, [sp, #80]
   16884:	mov	v1.16b, v2.16b
   16888:	str	q4, [sp, #160]
   1688c:	sub	x21, x21, #0x10
   16890:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16894:	ldr	q4, [sp, #160]
   16898:	mov	v1.16b, v4.16b
   1689c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   168a0:	cmp	x21, x22
   168a4:	mov	v2.16b, v0.16b
   168a8:	b.ne	1687c <__y0l_finite@GLIBC_2.17+0x79c>  // b.any
   168ac:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   168b0:	add	x0, x0, #0xe30
   168b4:	str	q0, [sp, #160]
   168b8:	add	x19, x19, #0x40
   168bc:	ldr	q0, [sp, #80]
   168c0:	add	x20, x20, #0xe00
   168c4:	ldr	q1, [x0]
   168c8:	add	x19, x19, #0xd70
   168cc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   168d0:	mov	v1.16b, v0.16b
   168d4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   168d8:	add	x0, x0, #0xe40
   168dc:	ldr	q2, [sp, #160]
   168e0:	ldr	q4, [x0]
   168e4:	b	168ec <__y0l_finite@GLIBC_2.17+0x80c>
   168e8:	ldr	q4, [x20]
   168ec:	ldr	q0, [sp, #80]
   168f0:	sub	x20, x20, #0x10
   168f4:	str	q2, [sp, #160]
   168f8:	str	q4, [sp, #176]
   168fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16900:	ldr	q4, [sp, #176]
   16904:	mov	v1.16b, v4.16b
   16908:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1690c:	cmp	x20, x19
   16910:	mov	v1.16b, v0.16b
   16914:	ldr	q2, [sp, #160]
   16918:	b.ne	168e8 <__y0l_finite@GLIBC_2.17+0x808>  // b.any
   1691c:	b	16640 <__y0l_finite@GLIBC_2.17+0x560>
   16920:	stp	x19, x22, [sp, #80]
   16924:	stp	x19, x22, [sp, #96]
   16928:	ldr	q1, [sp, #80]
   1692c:	ldr	q0, [sp, #96]
   16930:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16934:	bl	205f0 <cosf128@@GLIBC_2.27>
   16938:	str	q0, [sp, #80]
   1693c:	ldr	q1, [sp, #208]
   16940:	ldr	q0, [sp, #224]
   16944:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16948:	movi	v1.2d, #0x0
   1694c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   16950:	ldp	x21, x24, [sp, #80]
   16954:	str	x21, [sp, #80]
   16958:	eor	x24, x24, #0x8000000000000000
   1695c:	tbnz	w0, #31, 16d00 <__y0l_finite@GLIBC_2.17+0xc20>
   16960:	str	x24, [sp, #88]
   16964:	ldr	q1, [sp, #144]
   16968:	ldr	q0, [sp, #80]
   1696c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16970:	str	q0, [sp, #112]
   16974:	b	163ec <__y0l_finite@GLIBC_2.17+0x30c>
   16978:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1697c:	add	x0, x0, #0xba0
   16980:	ldr	q0, [sp, #96]
   16984:	adrp	x24, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   16988:	ldr	q1, [x0]
   1698c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   16990:	cmp	w0, #0x0
   16994:	b.gt	16eb4 <__y0l_finite@GLIBC_2.17+0xdd4>
   16998:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1699c:	add	x0, x0, #0xed0
   169a0:	add	x20, x24, #0x140
   169a4:	mov	x19, x20
   169a8:	add	x20, x20, #0x10
   169ac:	ldr	q4, [x0]
   169b0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   169b4:	add	x0, x0, #0xee0
   169b8:	sub	x21, x19, #0x80
   169bc:	ldr	q2, [x0]
   169c0:	b	169c8 <__y0l_finite@GLIBC_2.17+0x8e8>
   169c4:	ldr	q4, [x20]
   169c8:	ldr	q0, [sp, #80]
   169cc:	mov	v1.16b, v2.16b
   169d0:	str	q4, [sp, #160]
   169d4:	sub	x20, x20, #0x10
   169d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   169dc:	ldr	q4, [sp, #160]
   169e0:	mov	v1.16b, v4.16b
   169e4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   169e8:	cmp	x20, x21
   169ec:	mov	v2.16b, v0.16b
   169f0:	b.ne	169c4 <__y0l_finite@GLIBC_2.17+0x8e4>  // b.any
   169f4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   169f8:	add	x0, x0, #0xef0
   169fc:	str	q0, [sp, #160]
   16a00:	add	x20, x24, #0x140
   16a04:	ldr	q0, [sp, #80]
   16a08:	add	x19, x19, #0xa0
   16a0c:	ldr	q1, [x0]
   16a10:	add	x21, x20, #0x20
   16a14:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16a18:	mov	v1.16b, v0.16b
   16a1c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16a20:	add	x0, x0, #0xf00
   16a24:	ldr	q2, [sp, #160]
   16a28:	ldr	q4, [x0]
   16a2c:	b	16a34 <__y0l_finite@GLIBC_2.17+0x954>
   16a30:	ldr	q4, [x19]
   16a34:	ldr	q0, [sp, #80]
   16a38:	sub	x19, x19, #0x10
   16a3c:	str	q2, [sp, #160]
   16a40:	str	q4, [sp, #176]
   16a44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16a48:	ldr	q4, [sp, #176]
   16a4c:	mov	v1.16b, v4.16b
   16a50:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16a54:	cmp	x19, x21
   16a58:	mov	v1.16b, v0.16b
   16a5c:	ldr	q2, [sp, #160]
   16a60:	b.ne	16a30 <__y0l_finite@GLIBC_2.17+0x950>  // b.any
   16a64:	mov	v0.16b, v2.16b
   16a68:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16a6c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16a70:	add	x0, x0, #0xf10
   16a74:	add	x19, x24, #0x140
   16a78:	add	x20, x20, #0x140
   16a7c:	add	x21, x19, #0xb0
   16a80:	str	q0, [sp, #192]
   16a84:	ldr	q4, [x0]
   16a88:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16a8c:	add	x0, x0, #0xf20
   16a90:	ldr	q2, [x0]
   16a94:	b	16a9c <__y0l_finite@GLIBC_2.17+0x9bc>
   16a98:	ldr	q4, [x20]
   16a9c:	ldr	q0, [sp, #80]
   16aa0:	mov	v1.16b, v2.16b
   16aa4:	str	q4, [sp, #160]
   16aa8:	sub	x20, x20, #0x10
   16aac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16ab0:	ldr	q4, [sp, #160]
   16ab4:	mov	v1.16b, v4.16b
   16ab8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16abc:	cmp	x20, x21
   16ac0:	mov	v2.16b, v0.16b
   16ac4:	b.ne	16a98 <__y0l_finite@GLIBC_2.17+0x9b8>  // b.any
   16ac8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16acc:	add	x0, x0, #0xf30
   16ad0:	str	q0, [sp, #160]
   16ad4:	add	x20, x24, #0x140
   16ad8:	ldr	q0, [sp, #80]
   16adc:	add	x19, x19, #0x1d0
   16ae0:	ldr	q1, [x0]
   16ae4:	add	x20, x20, #0x150
   16ae8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16aec:	mov	v1.16b, v0.16b
   16af0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16af4:	add	x0, x0, #0xf40
   16af8:	ldr	q2, [sp, #160]
   16afc:	ldr	q4, [x0]
   16b00:	b	16b08 <__y0l_finite@GLIBC_2.17+0xa28>
   16b04:	ldr	q4, [x19]
   16b08:	ldr	q0, [sp, #80]
   16b0c:	sub	x19, x19, #0x10
   16b10:	str	q2, [sp, #160]
   16b14:	str	q4, [sp, #176]
   16b18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16b1c:	ldr	q4, [sp, #176]
   16b20:	mov	v1.16b, v4.16b
   16b24:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16b28:	cmp	x19, x20
   16b2c:	mov	v1.16b, v0.16b
   16b30:	ldr	q2, [sp, #160]
   16b34:	b.ne	16b04 <__y0l_finite@GLIBC_2.17+0xa24>  // b.any
   16b38:	b	16640 <__y0l_finite@GLIBC_2.17+0x560>
   16b3c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16b40:	add	x0, x0, #0xca0
   16b44:	ldr	q0, [sp, #96]
   16b48:	adrp	x19, 5d000 <f64xsubf128@@GLIBC_2.28+0x9280>
   16b4c:	add	x21, x19, #0x40
   16b50:	ldr	q1, [x0]
   16b54:	mov	x20, x21
   16b58:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   16b5c:	cmp	w0, #0x0
   16b60:	b.gt	17058 <__y0l_finite@GLIBC_2.17+0xf78>
   16b64:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16b68:	add	x0, x0, #0xcb0
   16b6c:	add	x21, x21, #0x6e0
   16b70:	add	x22, x20, #0x640
   16b74:	ldr	q4, [x0]
   16b78:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16b7c:	add	x0, x0, #0xcc0
   16b80:	ldr	q2, [x0]
   16b84:	b	16b8c <__y0l_finite@GLIBC_2.17+0xaac>
   16b88:	ldr	q4, [x21]
   16b8c:	ldr	q0, [sp, #80]
   16b90:	mov	v1.16b, v2.16b
   16b94:	str	q4, [sp, #160]
   16b98:	sub	x21, x21, #0x10
   16b9c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16ba0:	ldr	q4, [sp, #160]
   16ba4:	mov	v1.16b, v4.16b
   16ba8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16bac:	cmp	x21, x22
   16bb0:	mov	v2.16b, v0.16b
   16bb4:	b.ne	16b88 <__y0l_finite@GLIBC_2.17+0xaa8>  // b.any
   16bb8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16bbc:	add	x0, x0, #0xcd0
   16bc0:	str	q0, [sp, #160]
   16bc4:	add	x21, x19, #0x40
   16bc8:	ldr	q0, [sp, #80]
   16bcc:	add	x20, x20, #0x780
   16bd0:	ldr	q1, [x0]
   16bd4:	add	x22, x21, #0x6f0
   16bd8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16bdc:	mov	v1.16b, v0.16b
   16be0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16be4:	add	x0, x0, #0xce0
   16be8:	ldr	q2, [sp, #160]
   16bec:	ldr	q4, [x0]
   16bf0:	b	16bf8 <__y0l_finite@GLIBC_2.17+0xb18>
   16bf4:	ldr	q4, [x20]
   16bf8:	ldr	q0, [sp, #80]
   16bfc:	sub	x20, x20, #0x10
   16c00:	str	q2, [sp, #160]
   16c04:	str	q4, [sp, #176]
   16c08:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16c0c:	ldr	q4, [sp, #176]
   16c10:	mov	v1.16b, v4.16b
   16c14:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16c18:	cmp	x20, x22
   16c1c:	mov	v1.16b, v0.16b
   16c20:	ldr	q2, [sp, #160]
   16c24:	b.ne	16bf4 <__y0l_finite@GLIBC_2.17+0xb14>  // b.any
   16c28:	mov	v0.16b, v2.16b
   16c2c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16c30:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16c34:	add	x0, x0, #0xcf0
   16c38:	add	x20, x19, #0x40
   16c3c:	add	x21, x21, #0x830
   16c40:	add	x22, x20, #0x790
   16c44:	str	q0, [sp, #192]
   16c48:	ldr	q4, [x0]
   16c4c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16c50:	add	x0, x0, #0xd00
   16c54:	ldr	q2, [x0]
   16c58:	b	16c60 <__y0l_finite@GLIBC_2.17+0xb80>
   16c5c:	ldr	q4, [x21]
   16c60:	ldr	q0, [sp, #80]
   16c64:	mov	v1.16b, v2.16b
   16c68:	str	q4, [sp, #160]
   16c6c:	sub	x21, x21, #0x10
   16c70:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16c74:	ldr	q4, [sp, #160]
   16c78:	mov	v1.16b, v4.16b
   16c7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16c80:	cmp	x21, x22
   16c84:	mov	v2.16b, v0.16b
   16c88:	b.ne	16c5c <__y0l_finite@GLIBC_2.17+0xb7c>  // b.any
   16c8c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16c90:	add	x0, x0, #0xd10
   16c94:	str	q0, [sp, #160]
   16c98:	add	x19, x19, #0x40
   16c9c:	ldr	q0, [sp, #80]
   16ca0:	add	x20, x20, #0x8e0
   16ca4:	ldr	q1, [x0]
   16ca8:	add	x19, x19, #0x840
   16cac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16cb0:	mov	v1.16b, v0.16b
   16cb4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16cb8:	add	x0, x0, #0xd20
   16cbc:	ldr	q2, [sp, #160]
   16cc0:	ldr	q4, [x0]
   16cc4:	b	16ccc <__y0l_finite@GLIBC_2.17+0xbec>
   16cc8:	ldr	q4, [x20]
   16ccc:	ldr	q0, [sp, #80]
   16cd0:	sub	x20, x20, #0x10
   16cd4:	str	q2, [sp, #160]
   16cd8:	str	q4, [sp, #176]
   16cdc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16ce0:	ldr	q4, [sp, #176]
   16ce4:	mov	v1.16b, v4.16b
   16ce8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16cec:	cmp	x20, x19
   16cf0:	mov	v1.16b, v0.16b
   16cf4:	ldr	q2, [sp, #160]
   16cf8:	b.ne	16cc8 <__y0l_finite@GLIBC_2.17+0xbe8>  // b.any
   16cfc:	b	16640 <__y0l_finite@GLIBC_2.17+0x560>
   16d00:	str	x24, [sp, #88]
   16d04:	ldr	q1, [sp, #112]
   16d08:	ldr	q0, [sp, #80]
   16d0c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16d10:	str	q0, [sp, #144]
   16d14:	b	163ec <__y0l_finite@GLIBC_2.17+0x30c>
   16d18:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16d1c:	add	x0, x0, #0xc20
   16d20:	add	x21, x21, #0x400
   16d24:	add	x22, x20, #0x360
   16d28:	ldr	q4, [x0]
   16d2c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16d30:	add	x0, x0, #0xc30
   16d34:	ldr	q2, [x0]
   16d38:	b	16d40 <__y0l_finite@GLIBC_2.17+0xc60>
   16d3c:	ldr	q4, [x21]
   16d40:	ldr	q0, [sp, #80]
   16d44:	mov	v1.16b, v2.16b
   16d48:	str	q4, [sp, #160]
   16d4c:	sub	x21, x21, #0x10
   16d50:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16d54:	ldr	q4, [sp, #160]
   16d58:	mov	v1.16b, v4.16b
   16d5c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16d60:	cmp	x21, x22
   16d64:	mov	v2.16b, v0.16b
   16d68:	b.ne	16d3c <__y0l_finite@GLIBC_2.17+0xc5c>  // b.any
   16d6c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16d70:	add	x0, x0, #0xc40
   16d74:	str	q0, [sp, #160]
   16d78:	add	x21, x19, #0x40
   16d7c:	ldr	q0, [sp, #80]
   16d80:	add	x20, x20, #0x4b0
   16d84:	ldr	q1, [x0]
   16d88:	add	x22, x21, #0x410
   16d8c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16d90:	mov	v1.16b, v0.16b
   16d94:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16d98:	add	x0, x0, #0xc50
   16d9c:	ldr	q2, [sp, #160]
   16da0:	ldr	q4, [x0]
   16da4:	b	16dac <__y0l_finite@GLIBC_2.17+0xccc>
   16da8:	ldr	q4, [x20]
   16dac:	ldr	q0, [sp, #80]
   16db0:	sub	x20, x20, #0x10
   16db4:	str	q2, [sp, #160]
   16db8:	str	q4, [sp, #176]
   16dbc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16dc0:	ldr	q4, [sp, #176]
   16dc4:	mov	v1.16b, v4.16b
   16dc8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16dcc:	cmp	x20, x22
   16dd0:	mov	v1.16b, v0.16b
   16dd4:	ldr	q2, [sp, #160]
   16dd8:	b.ne	16da8 <__y0l_finite@GLIBC_2.17+0xcc8>  // b.any
   16ddc:	mov	v0.16b, v2.16b
   16de0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16de4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16de8:	add	x0, x0, #0xc60
   16dec:	add	x20, x19, #0x40
   16df0:	add	x21, x21, #0x570
   16df4:	add	x22, x20, #0x4c0
   16df8:	str	q0, [sp, #192]
   16dfc:	ldr	q4, [x0]
   16e00:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16e04:	add	x0, x0, #0xc70
   16e08:	ldr	q2, [x0]
   16e0c:	b	16e14 <__y0l_finite@GLIBC_2.17+0xd34>
   16e10:	ldr	q4, [x21]
   16e14:	ldr	q0, [sp, #80]
   16e18:	mov	v1.16b, v2.16b
   16e1c:	str	q4, [sp, #160]
   16e20:	sub	x21, x21, #0x10
   16e24:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16e28:	ldr	q4, [sp, #160]
   16e2c:	mov	v1.16b, v4.16b
   16e30:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16e34:	cmp	x21, x22
   16e38:	mov	v2.16b, v0.16b
   16e3c:	b.ne	16e10 <__y0l_finite@GLIBC_2.17+0xd30>  // b.any
   16e40:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16e44:	add	x0, x0, #0xc80
   16e48:	str	q0, [sp, #160]
   16e4c:	add	x19, x19, #0x40
   16e50:	ldr	q0, [sp, #80]
   16e54:	add	x20, x20, #0x630
   16e58:	ldr	q1, [x0]
   16e5c:	add	x19, x19, #0x580
   16e60:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16e64:	mov	v1.16b, v0.16b
   16e68:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16e6c:	add	x0, x0, #0xc90
   16e70:	ldr	q2, [sp, #160]
   16e74:	ldr	q4, [x0]
   16e78:	b	16e80 <__y0l_finite@GLIBC_2.17+0xda0>
   16e7c:	ldr	q4, [x20]
   16e80:	ldr	q0, [sp, #80]
   16e84:	sub	x20, x20, #0x10
   16e88:	str	q2, [sp, #160]
   16e8c:	str	q4, [sp, #176]
   16e90:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16e94:	ldr	q4, [sp, #176]
   16e98:	mov	v1.16b, v4.16b
   16e9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16ea0:	cmp	x20, x19
   16ea4:	mov	v1.16b, v0.16b
   16ea8:	ldr	q2, [sp, #160]
   16eac:	b.ne	16e7c <__y0l_finite@GLIBC_2.17+0xd9c>  // b.any
   16eb0:	b	16640 <__y0l_finite@GLIBC_2.17+0x560>
   16eb4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16eb8:	add	x0, x0, #0xf50
   16ebc:	add	x19, x24, #0x140
   16ec0:	mov	x20, x19
   16ec4:	add	x19, x19, #0x260
   16ec8:	ldr	q4, [x0]
   16ecc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16ed0:	add	x0, x0, #0xf60
   16ed4:	add	x21, x20, #0x1e0
   16ed8:	ldr	q2, [x0]
   16edc:	b	16ee4 <__y0l_finite@GLIBC_2.17+0xe04>
   16ee0:	ldr	q4, [x19]
   16ee4:	ldr	q0, [sp, #80]
   16ee8:	mov	v1.16b, v2.16b
   16eec:	str	q4, [sp, #160]
   16ef0:	sub	x19, x19, #0x10
   16ef4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16ef8:	ldr	q4, [sp, #160]
   16efc:	mov	v1.16b, v4.16b
   16f00:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16f04:	cmp	x19, x21
   16f08:	mov	v2.16b, v0.16b
   16f0c:	b.ne	16ee0 <__y0l_finite@GLIBC_2.17+0xe00>  // b.any
   16f10:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16f14:	add	x0, x0, #0xf70
   16f18:	str	q0, [sp, #160]
   16f1c:	add	x19, x24, #0x140
   16f20:	ldr	q0, [sp, #80]
   16f24:	add	x20, x20, #0x2f0
   16f28:	ldr	q1, [x0]
   16f2c:	add	x21, x19, #0x270
   16f30:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16f34:	mov	v1.16b, v0.16b
   16f38:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16f3c:	add	x0, x0, #0xf80
   16f40:	ldr	q2, [sp, #160]
   16f44:	ldr	q4, [x0]
   16f48:	b	16f50 <__y0l_finite@GLIBC_2.17+0xe70>
   16f4c:	ldr	q4, [x20]
   16f50:	ldr	q0, [sp, #80]
   16f54:	sub	x20, x20, #0x10
   16f58:	str	q2, [sp, #160]
   16f5c:	str	q4, [sp, #176]
   16f60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16f64:	ldr	q4, [sp, #176]
   16f68:	mov	v1.16b, v4.16b
   16f6c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16f70:	cmp	x20, x21
   16f74:	mov	v1.16b, v0.16b
   16f78:	ldr	q2, [sp, #160]
   16f7c:	b.ne	16f4c <__y0l_finite@GLIBC_2.17+0xe6c>  // b.any
   16f80:	mov	v0.16b, v2.16b
   16f84:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   16f88:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16f8c:	add	x0, x0, #0xf90
   16f90:	add	x20, x24, #0x140
   16f94:	add	x19, x19, #0x390
   16f98:	add	x21, x20, #0x300
   16f9c:	str	q0, [sp, #192]
   16fa0:	ldr	q4, [x0]
   16fa4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16fa8:	add	x0, x0, #0xfa0
   16fac:	ldr	q2, [x0]
   16fb0:	b	16fb8 <__y0l_finite@GLIBC_2.17+0xed8>
   16fb4:	ldr	q4, [x19]
   16fb8:	ldr	q0, [sp, #80]
   16fbc:	mov	v1.16b, v2.16b
   16fc0:	str	q4, [sp, #160]
   16fc4:	sub	x19, x19, #0x10
   16fc8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   16fcc:	ldr	q4, [sp, #160]
   16fd0:	mov	v1.16b, v4.16b
   16fd4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   16fd8:	cmp	x19, x21
   16fdc:	mov	v2.16b, v0.16b
   16fe0:	b.ne	16fb4 <__y0l_finite@GLIBC_2.17+0xed4>  // b.any
   16fe4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   16fe8:	add	x0, x0, #0xfb0
   16fec:	str	q0, [sp, #160]
   16ff0:	add	x19, x24, #0x140
   16ff4:	ldr	q0, [sp, #80]
   16ff8:	add	x20, x20, #0x420
   16ffc:	ldr	q1, [x0]
   17000:	add	x19, x19, #0x3a0
   17004:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17008:	mov	v1.16b, v0.16b
   1700c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17010:	add	x0, x0, #0xfc0
   17014:	ldr	q2, [sp, #160]
   17018:	ldr	q4, [x0]
   1701c:	b	17024 <__y0l_finite@GLIBC_2.17+0xf44>
   17020:	ldr	q4, [x20]
   17024:	ldr	q0, [sp, #80]
   17028:	sub	x20, x20, #0x10
   1702c:	str	q2, [sp, #160]
   17030:	str	q4, [sp, #176]
   17034:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17038:	ldr	q4, [sp, #176]
   1703c:	mov	v1.16b, v4.16b
   17040:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17044:	cmp	x20, x19
   17048:	mov	v1.16b, v0.16b
   1704c:	ldr	q2, [sp, #160]
   17050:	b.ne	17020 <__y0l_finite@GLIBC_2.17+0xf40>  // b.any
   17054:	b	16640 <__y0l_finite@GLIBC_2.17+0x560>
   17058:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1705c:	add	x0, x0, #0xd30
   17060:	add	x21, x21, #0x980
   17064:	add	x22, x20, #0x8f0
   17068:	ldr	q4, [x0]
   1706c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17070:	add	x0, x0, #0xd40
   17074:	ldr	q2, [x0]
   17078:	b	17080 <__y0l_finite@GLIBC_2.17+0xfa0>
   1707c:	ldr	q4, [x21]
   17080:	ldr	q0, [sp, #80]
   17084:	mov	v1.16b, v2.16b
   17088:	str	q4, [sp, #160]
   1708c:	sub	x21, x21, #0x10
   17090:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17094:	ldr	q4, [sp, #160]
   17098:	mov	v1.16b, v4.16b
   1709c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   170a0:	cmp	x21, x22
   170a4:	mov	v2.16b, v0.16b
   170a8:	b.ne	1707c <__y0l_finite@GLIBC_2.17+0xf9c>  // b.any
   170ac:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   170b0:	add	x0, x0, #0xd50
   170b4:	str	q0, [sp, #160]
   170b8:	add	x21, x19, #0x40
   170bc:	ldr	q0, [sp, #80]
   170c0:	add	x20, x20, #0xa20
   170c4:	ldr	q1, [x0]
   170c8:	add	x22, x21, #0x990
   170cc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   170d0:	mov	v1.16b, v0.16b
   170d4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   170d8:	add	x0, x0, #0xd60
   170dc:	ldr	q2, [sp, #160]
   170e0:	ldr	q4, [x0]
   170e4:	b	170ec <__y0l_finite@GLIBC_2.17+0x100c>
   170e8:	ldr	q4, [x20]
   170ec:	ldr	q0, [sp, #80]
   170f0:	sub	x20, x20, #0x10
   170f4:	str	q2, [sp, #160]
   170f8:	str	q4, [sp, #176]
   170fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17100:	ldr	q4, [sp, #176]
   17104:	mov	v1.16b, v4.16b
   17108:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1710c:	cmp	x20, x22
   17110:	mov	v1.16b, v0.16b
   17114:	ldr	q2, [sp, #160]
   17118:	b.ne	170e8 <__y0l_finite@GLIBC_2.17+0x1008>  // b.any
   1711c:	mov	v0.16b, v2.16b
   17120:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   17124:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17128:	add	x0, x0, #0xd70
   1712c:	add	x20, x19, #0x40
   17130:	add	x21, x21, #0xad0
   17134:	add	x22, x20, #0xa30
   17138:	str	q0, [sp, #192]
   1713c:	ldr	q4, [x0]
   17140:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17144:	add	x0, x0, #0xd80
   17148:	ldr	q2, [x0]
   1714c:	b	17154 <__y0l_finite@GLIBC_2.17+0x1074>
   17150:	ldr	q4, [x21]
   17154:	ldr	q0, [sp, #80]
   17158:	mov	v1.16b, v2.16b
   1715c:	str	q4, [sp, #160]
   17160:	sub	x21, x21, #0x10
   17164:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17168:	ldr	q4, [sp, #160]
   1716c:	mov	v1.16b, v4.16b
   17170:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17174:	cmp	x21, x22
   17178:	mov	v2.16b, v0.16b
   1717c:	b.ne	17150 <__y0l_finite@GLIBC_2.17+0x1070>  // b.any
   17180:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17184:	add	x0, x0, #0xd90
   17188:	str	q0, [sp, #160]
   1718c:	add	x19, x19, #0x40
   17190:	ldr	q0, [sp, #80]
   17194:	add	x20, x20, #0xb70
   17198:	ldr	q1, [x0]
   1719c:	add	x19, x19, #0xae0
   171a0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   171a4:	mov	v1.16b, v0.16b
   171a8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   171ac:	add	x0, x0, #0xda0
   171b0:	ldr	q2, [sp, #160]
   171b4:	ldr	q4, [x0]
   171b8:	b	171c0 <__y0l_finite@GLIBC_2.17+0x10e0>
   171bc:	ldr	q4, [x20]
   171c0:	ldr	q0, [sp, #80]
   171c4:	sub	x20, x20, #0x10
   171c8:	str	q2, [sp, #160]
   171cc:	str	q4, [sp, #176]
   171d0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   171d4:	ldr	q4, [sp, #176]
   171d8:	mov	v1.16b, v4.16b
   171dc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   171e0:	cmp	x20, x19
   171e4:	mov	v1.16b, v0.16b
   171e8:	ldr	q2, [sp, #160]
   171ec:	b.ne	171bc <__y0l_finite@GLIBC_2.17+0x10dc>  // b.any
   171f0:	b	16640 <__y0l_finite@GLIBC_2.17+0x560>
   171f4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   171f8:	add	x0, x0, #0xe50
   171fc:	add	x21, x21, #0xea0
   17200:	add	x22, x20, #0xe10
   17204:	ldr	q4, [x0]
   17208:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1720c:	add	x0, x0, #0xe60
   17210:	ldr	q2, [x0]
   17214:	b	1721c <__y0l_finite@GLIBC_2.17+0x113c>
   17218:	ldr	q4, [x21]
   1721c:	ldr	q0, [sp, #80]
   17220:	mov	v1.16b, v2.16b
   17224:	str	q4, [sp, #160]
   17228:	sub	x21, x21, #0x10
   1722c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17230:	ldr	q4, [sp, #160]
   17234:	mov	v1.16b, v4.16b
   17238:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1723c:	cmp	x21, x22
   17240:	mov	v2.16b, v0.16b
   17244:	b.ne	17218 <__y0l_finite@GLIBC_2.17+0x1138>  // b.any
   17248:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1724c:	add	x0, x0, #0xe70
   17250:	str	q0, [sp, #160]
   17254:	add	x21, x19, #0x40
   17258:	ldr	q0, [sp, #80]
   1725c:	add	x20, x20, #0xf30
   17260:	ldr	q1, [x0]
   17264:	add	x22, x21, #0xeb0
   17268:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1726c:	mov	v1.16b, v0.16b
   17270:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17274:	add	x0, x0, #0xe80
   17278:	ldr	q2, [sp, #160]
   1727c:	ldr	q4, [x0]
   17280:	b	17288 <__y0l_finite@GLIBC_2.17+0x11a8>
   17284:	ldr	q4, [x20]
   17288:	ldr	q0, [sp, #80]
   1728c:	sub	x20, x20, #0x10
   17290:	str	q2, [sp, #160]
   17294:	str	q4, [sp, #176]
   17298:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1729c:	ldr	q4, [sp, #176]
   172a0:	mov	v1.16b, v4.16b
   172a4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   172a8:	cmp	x20, x22
   172ac:	mov	v1.16b, v0.16b
   172b0:	ldr	q2, [sp, #160]
   172b4:	b.ne	17284 <__y0l_finite@GLIBC_2.17+0x11a4>  // b.any
   172b8:	mov	v0.16b, v2.16b
   172bc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   172c0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   172c4:	add	x0, x0, #0xe90
   172c8:	add	x20, x19, #0x40
   172cc:	add	x21, x21, #0xfd0
   172d0:	add	x22, x20, #0xf40
   172d4:	str	q0, [sp, #192]
   172d8:	ldr	q4, [x0]
   172dc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   172e0:	add	x0, x0, #0xea0
   172e4:	ldr	q2, [x0]
   172e8:	b	172f0 <__y0l_finite@GLIBC_2.17+0x1210>
   172ec:	ldr	q4, [x21]
   172f0:	ldr	q0, [sp, #80]
   172f4:	mov	v1.16b, v2.16b
   172f8:	str	q4, [sp, #160]
   172fc:	sub	x21, x21, #0x10
   17300:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17304:	ldr	q4, [sp, #160]
   17308:	mov	v1.16b, v4.16b
   1730c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17310:	cmp	x21, x22
   17314:	mov	v2.16b, v0.16b
   17318:	b.ne	172ec <__y0l_finite@GLIBC_2.17+0x120c>  // b.any
   1731c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17320:	add	x0, x0, #0xeb0
   17324:	str	q0, [sp, #160]
   17328:	add	x19, x19, #0x40
   1732c:	ldr	q0, [sp, #80]
   17330:	add	x19, x19, #0xfe0
   17334:	ldr	q1, [x0]
   17338:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1733c:	mov	v1.16b, v0.16b
   17340:	mov	x0, #0x1070                	// #4208
   17344:	add	x20, x20, x0
   17348:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1734c:	add	x0, x0, #0xec0
   17350:	ldr	q2, [sp, #160]
   17354:	ldr	q4, [x0]
   17358:	b	17360 <__y0l_finite@GLIBC_2.17+0x1280>
   1735c:	ldr	q4, [x20]
   17360:	ldr	q0, [sp, #80]
   17364:	sub	x20, x20, #0x10
   17368:	str	q2, [sp, #160]
   1736c:	str	q4, [sp, #176]
   17370:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17374:	ldr	q4, [sp, #176]
   17378:	mov	v1.16b, v4.16b
   1737c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17380:	cmp	x20, x19
   17384:	mov	v1.16b, v0.16b
   17388:	ldr	q2, [sp, #160]
   1738c:	b.ne	1735c <__y0l_finite@GLIBC_2.17+0x127c>  // b.any
   17390:	b	16640 <__y0l_finite@GLIBC_2.17+0x560>
   17394:	str	x25, [sp, #64]
   17398:	bl	ba70 <__stack_chk_fail@plt>
   1739c:	nop

00000000000173a0 <__j1l_finite@GLIBC_2.17>:
   173a0:	stp	x29, x30, [sp, #-256]!
   173a4:	mov	x29, sp
   173a8:	stp	x19, x20, [sp, #16]
   173ac:	stp	x21, x22, [sp, #32]
   173b0:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   173b4:	str	q0, [sp, #80]
   173b8:	ldp	x19, x20, [sp, #80]
   173bc:	stp	x23, x24, [sp, #48]
   173c0:	ldr	x0, [x21, #4032]
   173c4:	ldr	x1, [x0]
   173c8:	str	x1, [sp, #248]
   173cc:	mov	x1, #0x0                   	// #0
   173d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   173d4:	add	x0, x0, #0x300
   173d8:	and	x24, x20, #0x7fffffffffffffff
   173dc:	str	x24, [sp, #88]
   173e0:	ldr	q1, [x0]
   173e4:	ldr	q0, [sp, #80]
   173e8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   173ec:	cbnz	w0, 175e8 <__j1l_finite@GLIBC_2.17+0x248>
   173f0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   173f4:	add	x0, x0, #0x300
   173f8:	stp	x19, x24, [sp, #80]
   173fc:	ldr	q1, [x0]
   17400:	ldr	q0, [sp, #80]
   17404:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   17408:	cmp	w0, #0x0
   1740c:	b.gt	175e8 <__j1l_finite@GLIBC_2.17+0x248>
   17410:	movi	v1.2d, #0x0
   17414:	stp	x19, x20, [sp, #80]
   17418:	ldr	q0, [sp, #80]
   1741c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   17420:	cbz	w0, 175b8 <__j1l_finite@GLIBC_2.17+0x218>
   17424:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17428:	add	x0, x0, #0x680
   1742c:	stp	x19, x24, [sp, #80]
   17430:	ldr	q1, [x0]
   17434:	ldr	q0, [sp, #80]
   17438:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1743c:	str	x19, [sp, #80]
   17440:	cmp	w0, #0x0
   17444:	b.le	1799c <__j1l_finite@GLIBC_2.17+0x5fc>
   17448:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1744c:	add	x0, x0, #0xae0
   17450:	str	x24, [sp, #88]
   17454:	ldr	q1, [x0]
   17458:	ldr	q0, [sp, #80]
   1745c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   17460:	cmp	w0, #0x0
   17464:	b.gt	1762c <__j1l_finite@GLIBC_2.17+0x28c>
   17468:	stp	x19, x20, [sp, #80]
   1746c:	stp	x19, x20, [sp, #96]
   17470:	ldr	q1, [sp, #80]
   17474:	ldr	q0, [sp, #96]
   17478:	stp	x25, x26, [sp, #64]
   1747c:	adrp	x25, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17480:	add	x23, x25, #0xb30
   17484:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17488:	stp	x19, x24, [sp, #96]
   1748c:	mov	v1.16b, v0.16b
   17490:	str	q0, [sp, #80]
   17494:	mov	x22, x23
   17498:	ldr	q0, [sp, #96]
   1749c:	add	x23, x23, #0x50
   174a0:	sub	x26, x22, #0x10
   174a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   174a8:	str	q0, [sp, #112]
   174ac:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   174b0:	add	x0, x0, #0x690
   174b4:	ldr	q2, [x0]
   174b8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   174bc:	add	x0, x0, #0x6a0
   174c0:	ldr	q0, [x0]
   174c4:	b	174cc <__j1l_finite@GLIBC_2.17+0x12c>
   174c8:	ldr	q2, [x23]
   174cc:	ldr	q1, [sp, #80]
   174d0:	sub	x23, x23, #0x10
   174d4:	str	q2, [sp, #96]
   174d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   174dc:	ldr	q2, [sp, #96]
   174e0:	mov	v1.16b, v2.16b
   174e4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   174e8:	cmp	x23, x26
   174ec:	b.ne	174c8 <__j1l_finite@GLIBC_2.17+0x128>  // b.any
   174f0:	mov	v1.16b, v0.16b
   174f4:	ldr	q0, [sp, #112]
   174f8:	add	x23, x25, #0xb30
   174fc:	add	x22, x22, #0xc0
   17500:	add	x23, x23, #0x60
   17504:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17508:	str	q0, [sp, #112]
   1750c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17510:	add	x0, x0, #0x6b0
   17514:	ldr	q0, [sp, #80]
   17518:	ldr	q1, [x0]
   1751c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17520:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17524:	add	x0, x0, #0x6c0
   17528:	ldr	q2, [x0]
   1752c:	b	17534 <__j1l_finite@GLIBC_2.17+0x194>
   17530:	ldr	q2, [x22]
   17534:	ldr	q1, [sp, #80]
   17538:	sub	x22, x22, #0x10
   1753c:	str	q2, [sp, #96]
   17540:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17544:	ldr	q2, [sp, #96]
   17548:	mov	v1.16b, v2.16b
   1754c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17550:	cmp	x22, x23
   17554:	b.ne	17530 <__j1l_finite@GLIBC_2.17+0x190>  // b.any
   17558:	mov	v1.16b, v0.16b
   1755c:	ldr	q0, [sp, #112]
   17560:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   17564:	stp	x19, x24, [sp, #80]
   17568:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1756c:	add	x0, x0, #0x330
   17570:	str	q0, [sp, #96]
   17574:	ldr	q0, [sp, #80]
   17578:	ldr	q1, [x0]
   1757c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17580:	ldr	q2, [sp, #96]
   17584:	mov	v1.16b, v2.16b
   17588:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1758c:	movi	v1.2d, #0x0
   17590:	stp	x19, x20, [sp, #80]
   17594:	str	q0, [sp, #96]
   17598:	ldr	q0, [sp, #80]
   1759c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   175a0:	cmp	w0, #0x0
   175a4:	ldp	x19, x20, [sp, #96]
   175a8:	ldp	x25, x26, [sp, #64]
   175ac:	eor	x0, x20, #0x8000000000000000
   175b0:	csel	x20, x0, x20, lt  // lt = tstop
   175b4:	nop
   175b8:	ldr	x21, [x21, #4032]
   175bc:	ldr	x1, [sp, #248]
   175c0:	ldr	x0, [x21]
   175c4:	eor	x0, x1, x0
   175c8:	cbnz	x0, 1869c <__j1l_finite@GLIBC_2.17+0x12fc>
   175cc:	stp	x19, x20, [sp, #80]
   175d0:	ldp	x19, x20, [sp, #16]
   175d4:	ldp	x21, x22, [sp, #32]
   175d8:	ldp	x23, x24, [sp, #48]
   175dc:	ldr	q0, [sp, #80]
   175e0:	ldp	x29, x30, [sp], #256
   175e4:	ret
   175e8:	stp	x19, x20, [sp, #80]
   175ec:	stp	x19, x20, [sp, #96]
   175f0:	ldr	q1, [sp, #80]
   175f4:	ldr	q0, [sp, #96]
   175f8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   175fc:	cbz	w0, 17620 <__j1l_finite@GLIBC_2.17+0x280>
   17600:	stp	x19, x20, [sp, #80]
   17604:	stp	x19, x20, [sp, #96]
   17608:	ldr	q1, [sp, #80]
   1760c:	ldr	q0, [sp, #96]
   17610:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17614:	str	q0, [sp, #80]
   17618:	ldp	x19, x20, [sp, #80]
   1761c:	b	175b8 <__j1l_finite@GLIBC_2.17+0x218>
   17620:	mov	x19, #0x0                   	// #0
   17624:	mov	x20, #0x0                   	// #0
   17628:	b	175b8 <__j1l_finite@GLIBC_2.17+0x218>
   1762c:	stp	x19, x24, [sp, #80]
   17630:	add	x1, sp, #0xd0
   17634:	add	x0, sp, #0xe0
   17638:	ldr	q0, [sp, #80]
   1763c:	bl	24048 <sincosf128@@GLIBC_2.27>
   17640:	ldp	x23, x22, [sp, #224]
   17644:	ldr	q1, [sp, #208]
   17648:	str	q1, [sp, #96]
   1764c:	eor	x0, x22, #0x8000000000000000
   17650:	stp	x23, x0, [sp, #80]
   17654:	ldr	q0, [sp, #80]
   17658:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1765c:	stp	x23, x22, [sp, #80]
   17660:	ldr	q1, [sp, #96]
   17664:	str	q0, [sp, #144]
   17668:	ldr	q0, [sp, #80]
   1766c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   17670:	stp	x19, x24, [sp, #80]
   17674:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17678:	add	x0, x0, #0xb50
   1767c:	str	q0, [sp, #112]
   17680:	ldr	q0, [sp, #80]
   17684:	ldr	q1, [x0]
   17688:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1768c:	cmp	w0, #0x0
   17690:	b.le	17c40 <__j1l_finite@GLIBC_2.17+0x8a0>
   17694:	stp	x19, x24, [sp, #80]
   17698:	ldr	q0, [sp, #80]
   1769c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   176a0:	stp	x19, x24, [sp, #80]
   176a4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   176a8:	add	x0, x0, #0xb60
   176ac:	str	q0, [sp, #128]
   176b0:	ldr	q0, [sp, #80]
   176b4:	ldr	q1, [x0]
   176b8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   176bc:	cmp	w0, #0x0
   176c0:	b.gt	17bfc <__j1l_finite@GLIBC_2.17+0x85c>
   176c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   176c8:	add	x0, x0, #0x2f0
   176cc:	stp	x19, x24, [sp, #80]
   176d0:	ldr	q0, [x0]
   176d4:	ldr	q1, [sp, #80]
   176d8:	stp	x25, x26, [sp, #64]
   176dc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   176e0:	mov	v1.16b, v0.16b
   176e4:	str	q0, [sp, #96]
   176e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   176ec:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   176f0:	add	x0, x0, #0xb40
   176f4:	str	q0, [sp, #80]
   176f8:	ldr	q0, [sp, #96]
   176fc:	ldr	q1, [x0]
   17700:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   17704:	cmp	w0, #0x0
   17708:	b.gt	17a1c <__j1l_finite@GLIBC_2.17+0x67c>
   1770c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17710:	add	x0, x0, #0xb80
   17714:	ldr	q0, [sp, #96]
   17718:	ldr	q1, [x0]
   1771c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   17720:	cmp	w0, #0x0
   17724:	b.gt	17e54 <__j1l_finite@GLIBC_2.17+0xab4>
   17728:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1772c:	add	x0, x0, #0xb90
   17730:	ldr	q0, [sp, #96]
   17734:	adrp	x25, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17738:	add	x23, x25, #0xb30
   1773c:	ldr	q1, [x0]
   17740:	mov	x22, x23
   17744:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   17748:	cmp	w0, #0x0
   1774c:	b.gt	18364 <__j1l_finite@GLIBC_2.17+0xfc4>
   17750:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17754:	add	x0, x0, #0x6d0
   17758:	add	x23, x23, #0x160
   1775c:	add	x24, x22, #0xd0
   17760:	ldr	q4, [x0]
   17764:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17768:	add	x0, x0, #0x6e0
   1776c:	ldr	q2, [x0]
   17770:	b	17778 <__j1l_finite@GLIBC_2.17+0x3d8>
   17774:	ldr	q4, [x23]
   17778:	ldr	q0, [sp, #80]
   1777c:	mov	v1.16b, v2.16b
   17780:	str	q4, [sp, #160]
   17784:	sub	x23, x23, #0x10
   17788:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1778c:	ldr	q4, [sp, #160]
   17790:	mov	v1.16b, v4.16b
   17794:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17798:	cmp	x23, x24
   1779c:	mov	v2.16b, v0.16b
   177a0:	b.ne	17774 <__j1l_finite@GLIBC_2.17+0x3d4>  // b.any
   177a4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   177a8:	add	x0, x0, #0x6f0
   177ac:	str	q0, [sp, #160]
   177b0:	add	x23, x25, #0xb30
   177b4:	ldr	q0, [sp, #80]
   177b8:	add	x22, x22, #0x200
   177bc:	ldr	q1, [x0]
   177c0:	add	x24, x23, #0x170
   177c4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   177c8:	mov	v1.16b, v0.16b
   177cc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   177d0:	add	x0, x0, #0x700
   177d4:	ldr	q2, [sp, #160]
   177d8:	ldr	q4, [x0]
   177dc:	b	177e4 <__j1l_finite@GLIBC_2.17+0x444>
   177e0:	ldr	q4, [x22]
   177e4:	ldr	q0, [sp, #80]
   177e8:	sub	x22, x22, #0x10
   177ec:	str	q2, [sp, #160]
   177f0:	str	q4, [sp, #176]
   177f4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   177f8:	ldr	q4, [sp, #176]
   177fc:	mov	v1.16b, v4.16b
   17800:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17804:	cmp	x22, x24
   17808:	mov	v1.16b, v0.16b
   1780c:	ldr	q2, [sp, #160]
   17810:	b.ne	177e0 <__j1l_finite@GLIBC_2.17+0x440>  // b.any
   17814:	mov	v0.16b, v2.16b
   17818:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1781c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17820:	add	x0, x0, #0x710
   17824:	add	x22, x25, #0xb30
   17828:	add	x23, x23, #0x2b0
   1782c:	add	x24, x22, #0x210
   17830:	str	q0, [sp, #192]
   17834:	ldr	q4, [x0]
   17838:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1783c:	add	x0, x0, #0x720
   17840:	ldr	q2, [x0]
   17844:	b	1784c <__j1l_finite@GLIBC_2.17+0x4ac>
   17848:	ldr	q4, [x23]
   1784c:	ldr	q0, [sp, #80]
   17850:	mov	v1.16b, v2.16b
   17854:	str	q4, [sp, #160]
   17858:	sub	x23, x23, #0x10
   1785c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17860:	ldr	q4, [sp, #160]
   17864:	mov	v1.16b, v4.16b
   17868:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1786c:	cmp	x23, x24
   17870:	mov	v2.16b, v0.16b
   17874:	b.ne	17848 <__j1l_finite@GLIBC_2.17+0x4a8>  // b.any
   17878:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1787c:	add	x0, x0, #0x730
   17880:	str	q0, [sp, #160]
   17884:	add	x23, x25, #0xb30
   17888:	ldr	q0, [sp, #80]
   1788c:	add	x22, x22, #0x350
   17890:	ldr	q1, [x0]
   17894:	add	x23, x23, #0x2c0
   17898:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1789c:	mov	v1.16b, v0.16b
   178a0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   178a4:	add	x0, x0, #0x740
   178a8:	ldr	q2, [sp, #160]
   178ac:	ldr	q4, [x0]
   178b0:	b	178b8 <__j1l_finite@GLIBC_2.17+0x518>
   178b4:	ldr	q4, [x22]
   178b8:	ldr	q0, [sp, #80]
   178bc:	sub	x22, x22, #0x10
   178c0:	str	q2, [sp, #160]
   178c4:	str	q4, [sp, #176]
   178c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   178cc:	ldr	q4, [sp, #176]
   178d0:	mov	v1.16b, v4.16b
   178d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   178d8:	cmp	x22, x23
   178dc:	mov	v1.16b, v0.16b
   178e0:	ldr	q2, [sp, #160]
   178e4:	b.ne	178b4 <__j1l_finite@GLIBC_2.17+0x514>  // b.any
   178e8:	mov	v0.16b, v2.16b
   178ec:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   178f0:	str	q0, [sp, #160]
   178f4:	ldr	q1, [sp, #80]
   178f8:	ldr	q0, [sp, #192]
   178fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17900:	ldr	q1, [sp, #80]
   17904:	ldr	q4, [sp, #160]
   17908:	str	q0, [sp, #80]
   1790c:	mov	v0.16b, v4.16b
   17910:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17914:	ldr	q1, [sp, #96]
   17918:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1791c:	mov	v4.16b, v0.16b
   17920:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   17924:	add	x0, x0, #0x2f0
   17928:	ldr	q2, [sp, #80]
   1792c:	str	q4, [sp, #160]
   17930:	ldr	q1, [x0]
   17934:	mov	v0.16b, v2.16b
   17938:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1793c:	ldr	q1, [sp, #112]
   17940:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17944:	str	q0, [sp, #80]
   17948:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1794c:	add	x0, x0, #0xdb0
   17950:	ldr	q0, [sp, #96]
   17954:	ldr	q1, [x0]
   17958:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1795c:	ldr	q4, [sp, #160]
   17960:	mov	v1.16b, v4.16b
   17964:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17968:	ldr	q1, [sp, #144]
   1796c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17970:	mov	v1.16b, v0.16b
   17974:	ldr	q2, [sp, #80]
   17978:	mov	v0.16b, v2.16b
   1797c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   17980:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17984:	add	x0, x0, #0xb70
   17988:	ldr	q1, [x0]
   1798c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17990:	ldr	q1, [sp, #128]
   17994:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   17998:	b	1758c <__j1l_finite@GLIBC_2.17+0x1ec>
   1799c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   179a0:	add	x0, x0, #0x330
   179a4:	str	x20, [sp, #88]
   179a8:	ldr	q1, [x0]
   179ac:	ldr	q0, [sp, #80]
   179b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   179b4:	str	q0, [sp, #80]
   179b8:	ldp	x19, x20, [sp, #80]
   179bc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   179c0:	add	x0, x0, #0xeb0
   179c4:	ldr	q1, [x0]
   179c8:	and	x0, x20, #0x7fffffffffffffff
   179cc:	str	x0, [sp, #88]
   179d0:	ldr	q0, [sp, #80]
   179d4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   179d8:	tbz	w0, #31, 179f0 <__j1l_finite@GLIBC_2.17+0x650>
   179dc:	stp	x19, x20, [sp, #80]
   179e0:	stp	x19, x20, [sp, #96]
   179e4:	ldr	q1, [sp, #80]
   179e8:	ldr	q0, [sp, #96]
   179ec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   179f0:	movi	v1.2d, #0x0
   179f4:	stp	x19, x20, [sp, #80]
   179f8:	ldr	q0, [sp, #80]
   179fc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   17a00:	cbnz	w0, 175b8 <__j1l_finite@GLIBC_2.17+0x218>
   17a04:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   17a08:	ldr	x0, [x0, #3976]
   17a0c:	mrs	x1, tpidr_el0
   17a10:	mov	w2, #0x22                  	// #34
   17a14:	str	w2, [x1, x0]
   17a18:	b	175b8 <__j1l_finite@GLIBC_2.17+0x218>
   17a1c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17a20:	add	x0, x0, #0xdb0
   17a24:	ldr	q0, [sp, #96]
   17a28:	ldr	q1, [x0]
   17a2c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   17a30:	cmp	w0, #0x0
   17a34:	b.gt	17c90 <__j1l_finite@GLIBC_2.17+0x8f0>
   17a38:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17a3c:	add	x0, x0, #0xdc0
   17a40:	ldr	q0, [sp, #96]
   17a44:	adrp	x25, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17a48:	add	x23, x25, #0xb30
   17a4c:	ldr	q1, [x0]
   17a50:	mov	x22, x23
   17a54:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   17a58:	cmp	w0, #0x0
   17a5c:	b.gt	18028 <__j1l_finite@GLIBC_2.17+0xc88>
   17a60:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17a64:	add	x0, x0, #0x8d0
   17a68:	add	x23, x23, #0xc40
   17a6c:	add	x24, x22, #0xbb0
   17a70:	ldr	q4, [x0]
   17a74:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17a78:	add	x0, x0, #0x8e0
   17a7c:	ldr	q2, [x0]
   17a80:	b	17a88 <__j1l_finite@GLIBC_2.17+0x6e8>
   17a84:	ldr	q4, [x23]
   17a88:	ldr	q0, [sp, #80]
   17a8c:	mov	v1.16b, v2.16b
   17a90:	str	q4, [sp, #160]
   17a94:	sub	x23, x23, #0x10
   17a98:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17a9c:	ldr	q4, [sp, #160]
   17aa0:	mov	v1.16b, v4.16b
   17aa4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17aa8:	cmp	x23, x24
   17aac:	mov	v2.16b, v0.16b
   17ab0:	b.ne	17a84 <__j1l_finite@GLIBC_2.17+0x6e4>  // b.any
   17ab4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17ab8:	add	x0, x0, #0x8f0
   17abc:	str	q0, [sp, #160]
   17ac0:	add	x23, x25, #0xb30
   17ac4:	ldr	q0, [sp, #80]
   17ac8:	add	x22, x22, #0xce0
   17acc:	ldr	q1, [x0]
   17ad0:	add	x24, x23, #0xc50
   17ad4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17ad8:	mov	v1.16b, v0.16b
   17adc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17ae0:	add	x0, x0, #0x900
   17ae4:	ldr	q2, [sp, #160]
   17ae8:	ldr	q4, [x0]
   17aec:	b	17af4 <__j1l_finite@GLIBC_2.17+0x754>
   17af0:	ldr	q4, [x22]
   17af4:	ldr	q0, [sp, #80]
   17af8:	sub	x22, x22, #0x10
   17afc:	str	q2, [sp, #160]
   17b00:	str	q4, [sp, #176]
   17b04:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17b08:	ldr	q4, [sp, #176]
   17b0c:	mov	v1.16b, v4.16b
   17b10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17b14:	cmp	x22, x24
   17b18:	mov	v1.16b, v0.16b
   17b1c:	ldr	q2, [sp, #160]
   17b20:	b.ne	17af0 <__j1l_finite@GLIBC_2.17+0x750>  // b.any
   17b24:	mov	v0.16b, v2.16b
   17b28:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   17b2c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17b30:	add	x0, x0, #0x910
   17b34:	add	x22, x25, #0xb30
   17b38:	add	x23, x23, #0xd80
   17b3c:	add	x24, x22, #0xcf0
   17b40:	str	q0, [sp, #192]
   17b44:	ldr	q4, [x0]
   17b48:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17b4c:	add	x0, x0, #0x920
   17b50:	ldr	q2, [x0]
   17b54:	b	17b5c <__j1l_finite@GLIBC_2.17+0x7bc>
   17b58:	ldr	q4, [x23]
   17b5c:	ldr	q0, [sp, #80]
   17b60:	mov	v1.16b, v2.16b
   17b64:	str	q4, [sp, #160]
   17b68:	sub	x23, x23, #0x10
   17b6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17b70:	ldr	q4, [sp, #160]
   17b74:	mov	v1.16b, v4.16b
   17b78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17b7c:	cmp	x23, x24
   17b80:	mov	v2.16b, v0.16b
   17b84:	b.ne	17b58 <__j1l_finite@GLIBC_2.17+0x7b8>  // b.any
   17b88:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17b8c:	add	x0, x0, #0x930
   17b90:	str	q0, [sp, #160]
   17b94:	add	x23, x25, #0xb30
   17b98:	ldr	q0, [sp, #80]
   17b9c:	add	x22, x22, #0xe20
   17ba0:	ldr	q1, [x0]
   17ba4:	add	x23, x23, #0xd90
   17ba8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17bac:	mov	v1.16b, v0.16b
   17bb0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17bb4:	add	x0, x0, #0x940
   17bb8:	ldr	q2, [sp, #160]
   17bbc:	ldr	q4, [x0]
   17bc0:	b	17bc8 <__j1l_finite@GLIBC_2.17+0x828>
   17bc4:	ldr	q4, [x22]
   17bc8:	ldr	q0, [sp, #80]
   17bcc:	sub	x22, x22, #0x10
   17bd0:	str	q2, [sp, #160]
   17bd4:	str	q4, [sp, #176]
   17bd8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17bdc:	ldr	q4, [sp, #176]
   17be0:	mov	v1.16b, v4.16b
   17be4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17be8:	cmp	x22, x23
   17bec:	mov	v1.16b, v0.16b
   17bf0:	ldr	q2, [sp, #160]
   17bf4:	b.ne	17bc4 <__j1l_finite@GLIBC_2.17+0x824>  // b.any
   17bf8:	b	178e8 <__j1l_finite@GLIBC_2.17+0x548>
   17bfc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17c00:	add	x0, x0, #0xb70
   17c04:	ldr	q0, [sp, #112]
   17c08:	ldr	q1, [x0]
   17c0c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17c10:	ldr	q1, [sp, #128]
   17c14:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   17c18:	stp	x19, x20, [sp, #80]
   17c1c:	movi	v1.2d, #0x0
   17c20:	str	q0, [sp, #96]
   17c24:	ldr	q0, [sp, #80]
   17c28:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   17c2c:	cmp	w0, #0x0
   17c30:	ldp	x19, x20, [sp, #96]
   17c34:	eor	x0, x20, #0x8000000000000000
   17c38:	csel	x20, x0, x20, lt  // lt = tstop
   17c3c:	b	175b8 <__j1l_finite@GLIBC_2.17+0x218>
   17c40:	stp	x19, x24, [sp, #80]
   17c44:	stp	x19, x24, [sp, #96]
   17c48:	ldr	q1, [sp, #80]
   17c4c:	ldr	q0, [sp, #96]
   17c50:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17c54:	bl	205f0 <cosf128@@GLIBC_2.27>
   17c58:	str	q0, [sp, #80]
   17c5c:	ldr	q1, [sp, #208]
   17c60:	ldr	q0, [sp, #224]
   17c64:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17c68:	movi	v1.2d, #0x0
   17c6c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   17c70:	cmp	w0, #0x0
   17c74:	ldr	q2, [sp, #80]
   17c78:	mov	v0.16b, v2.16b
   17c7c:	b.le	18018 <__j1l_finite@GLIBC_2.17+0xc78>
   17c80:	ldr	q1, [sp, #144]
   17c84:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   17c88:	str	q0, [sp, #112]
   17c8c:	b	17694 <__j1l_finite@GLIBC_2.17+0x2f4>
   17c90:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   17c94:	add	x0, x0, #0xba0
   17c98:	ldr	q0, [sp, #96]
   17c9c:	adrp	x22, 5f000 <f64xsubf128@@GLIBC_2.28+0xb280>
   17ca0:	add	x24, x22, #0xc30
   17ca4:	ldr	q1, [x0]
   17ca8:	mov	x23, x24
   17cac:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   17cb0:	cmp	w0, #0x0
   17cb4:	b.gt	18500 <__j1l_finite@GLIBC_2.17+0x1160>
   17cb8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17cbc:	add	x0, x0, #0x9d0
   17cc0:	add	x24, x24, #0x30
   17cc4:	sub	x25, x23, #0x60
   17cc8:	ldr	q4, [x0]
   17ccc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17cd0:	add	x0, x0, #0x9e0
   17cd4:	ldr	q2, [x0]
   17cd8:	b	17ce0 <__j1l_finite@GLIBC_2.17+0x940>
   17cdc:	ldr	q4, [x24]
   17ce0:	ldr	q0, [sp, #80]
   17ce4:	mov	v1.16b, v2.16b
   17ce8:	str	q4, [sp, #160]
   17cec:	sub	x24, x24, #0x10
   17cf0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17cf4:	ldr	q4, [sp, #160]
   17cf8:	mov	v1.16b, v4.16b
   17cfc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17d00:	cmp	x24, x25
   17d04:	mov	v2.16b, v0.16b
   17d08:	b.ne	17cdc <__j1l_finite@GLIBC_2.17+0x93c>  // b.any
   17d0c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17d10:	add	x0, x0, #0x9f0
   17d14:	str	q0, [sp, #160]
   17d18:	add	x24, x22, #0xc30
   17d1c:	ldr	q0, [sp, #80]
   17d20:	add	x23, x23, #0xc0
   17d24:	ldr	q1, [x0]
   17d28:	add	x25, x24, #0x40
   17d2c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17d30:	mov	v1.16b, v0.16b
   17d34:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17d38:	add	x0, x0, #0xa00
   17d3c:	ldr	q2, [sp, #160]
   17d40:	ldr	q4, [x0]
   17d44:	b	17d4c <__j1l_finite@GLIBC_2.17+0x9ac>
   17d48:	ldr	q4, [x23]
   17d4c:	ldr	q0, [sp, #80]
   17d50:	sub	x23, x23, #0x10
   17d54:	str	q2, [sp, #160]
   17d58:	str	q4, [sp, #176]
   17d5c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17d60:	ldr	q4, [sp, #176]
   17d64:	mov	v1.16b, v4.16b
   17d68:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17d6c:	cmp	x23, x25
   17d70:	mov	v1.16b, v0.16b
   17d74:	ldr	q2, [sp, #160]
   17d78:	b.ne	17d48 <__j1l_finite@GLIBC_2.17+0x9a8>  // b.any
   17d7c:	mov	v0.16b, v2.16b
   17d80:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   17d84:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17d88:	add	x0, x0, #0xa10
   17d8c:	add	x23, x22, #0xc30
   17d90:	add	x24, x24, #0x160
   17d94:	add	x25, x23, #0xd0
   17d98:	str	q0, [sp, #192]
   17d9c:	ldr	q4, [x0]
   17da0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17da4:	add	x0, x0, #0xa20
   17da8:	ldr	q2, [x0]
   17dac:	b	17db4 <__j1l_finite@GLIBC_2.17+0xa14>
   17db0:	ldr	q4, [x24]
   17db4:	ldr	q0, [sp, #80]
   17db8:	mov	v1.16b, v2.16b
   17dbc:	str	q4, [sp, #160]
   17dc0:	sub	x24, x24, #0x10
   17dc4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17dc8:	ldr	q4, [sp, #160]
   17dcc:	mov	v1.16b, v4.16b
   17dd0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17dd4:	cmp	x24, x25
   17dd8:	mov	v2.16b, v0.16b
   17ddc:	b.ne	17db0 <__j1l_finite@GLIBC_2.17+0xa10>  // b.any
   17de0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17de4:	add	x0, x0, #0xa30
   17de8:	str	q0, [sp, #160]
   17dec:	add	x22, x22, #0xc30
   17df0:	ldr	q0, [sp, #80]
   17df4:	add	x23, x23, #0x1f0
   17df8:	ldr	q1, [x0]
   17dfc:	add	x22, x22, #0x170
   17e00:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17e04:	mov	v1.16b, v0.16b
   17e08:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17e0c:	add	x0, x0, #0xa40
   17e10:	ldr	q2, [sp, #160]
   17e14:	ldr	q4, [x0]
   17e18:	b	17e20 <__j1l_finite@GLIBC_2.17+0xa80>
   17e1c:	ldr	q4, [x23]
   17e20:	ldr	q0, [sp, #80]
   17e24:	sub	x23, x23, #0x10
   17e28:	str	q2, [sp, #160]
   17e2c:	str	q4, [sp, #176]
   17e30:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17e34:	ldr	q4, [sp, #176]
   17e38:	mov	v1.16b, v4.16b
   17e3c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17e40:	cmp	x23, x22
   17e44:	mov	v1.16b, v0.16b
   17e48:	ldr	q2, [sp, #160]
   17e4c:	b.ne	17e1c <__j1l_finite@GLIBC_2.17+0xa7c>  // b.any
   17e50:	b	178e8 <__j1l_finite@GLIBC_2.17+0x548>
   17e54:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   17e58:	add	x0, x0, #0xca0
   17e5c:	ldr	q0, [sp, #96]
   17e60:	adrp	x25, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17e64:	add	x23, x25, #0xb30
   17e68:	ldr	q1, [x0]
   17e6c:	mov	x22, x23
   17e70:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   17e74:	cmp	w0, #0x0
   17e78:	b.gt	181c8 <__j1l_finite@GLIBC_2.17+0xe28>
   17e7c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17e80:	add	x0, x0, #0x7d0
   17e84:	add	x23, x23, #0x6f0
   17e88:	add	x24, x22, #0x650
   17e8c:	ldr	q4, [x0]
   17e90:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17e94:	add	x0, x0, #0x7e0
   17e98:	ldr	q2, [x0]
   17e9c:	b	17ea4 <__j1l_finite@GLIBC_2.17+0xb04>
   17ea0:	ldr	q4, [x23]
   17ea4:	ldr	q0, [sp, #80]
   17ea8:	mov	v1.16b, v2.16b
   17eac:	str	q4, [sp, #160]
   17eb0:	sub	x23, x23, #0x10
   17eb4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17eb8:	ldr	q4, [sp, #160]
   17ebc:	mov	v1.16b, v4.16b
   17ec0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17ec4:	cmp	x23, x24
   17ec8:	mov	v2.16b, v0.16b
   17ecc:	b.ne	17ea0 <__j1l_finite@GLIBC_2.17+0xb00>  // b.any
   17ed0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17ed4:	add	x0, x0, #0x7f0
   17ed8:	str	q0, [sp, #160]
   17edc:	add	x23, x25, #0xb30
   17ee0:	ldr	q0, [sp, #80]
   17ee4:	add	x22, x22, #0x7a0
   17ee8:	ldr	q1, [x0]
   17eec:	add	x24, x23, #0x700
   17ef0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17ef4:	mov	v1.16b, v0.16b
   17ef8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17efc:	add	x0, x0, #0x800
   17f00:	ldr	q2, [sp, #160]
   17f04:	ldr	q4, [x0]
   17f08:	b	17f10 <__j1l_finite@GLIBC_2.17+0xb70>
   17f0c:	ldr	q4, [x22]
   17f10:	ldr	q0, [sp, #80]
   17f14:	sub	x22, x22, #0x10
   17f18:	str	q2, [sp, #160]
   17f1c:	str	q4, [sp, #176]
   17f20:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17f24:	ldr	q4, [sp, #176]
   17f28:	mov	v1.16b, v4.16b
   17f2c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17f30:	cmp	x22, x24
   17f34:	mov	v1.16b, v0.16b
   17f38:	ldr	q2, [sp, #160]
   17f3c:	b.ne	17f0c <__j1l_finite@GLIBC_2.17+0xb6c>  // b.any
   17f40:	mov	v0.16b, v2.16b
   17f44:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   17f48:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17f4c:	add	x0, x0, #0x810
   17f50:	add	x22, x25, #0xb30
   17f54:	add	x23, x23, #0x850
   17f58:	add	x24, x22, #0x7b0
   17f5c:	str	q0, [sp, #192]
   17f60:	ldr	q4, [x0]
   17f64:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17f68:	add	x0, x0, #0x820
   17f6c:	ldr	q2, [x0]
   17f70:	b	17f78 <__j1l_finite@GLIBC_2.17+0xbd8>
   17f74:	ldr	q4, [x23]
   17f78:	ldr	q0, [sp, #80]
   17f7c:	mov	v1.16b, v2.16b
   17f80:	str	q4, [sp, #160]
   17f84:	sub	x23, x23, #0x10
   17f88:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17f8c:	ldr	q4, [sp, #160]
   17f90:	mov	v1.16b, v4.16b
   17f94:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17f98:	cmp	x23, x24
   17f9c:	mov	v2.16b, v0.16b
   17fa0:	b.ne	17f74 <__j1l_finite@GLIBC_2.17+0xbd4>  // b.any
   17fa4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17fa8:	add	x0, x0, #0x830
   17fac:	str	q0, [sp, #160]
   17fb0:	add	x23, x25, #0xb30
   17fb4:	ldr	q0, [sp, #80]
   17fb8:	add	x22, x22, #0x900
   17fbc:	ldr	q1, [x0]
   17fc0:	add	x23, x23, #0x860
   17fc4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   17fc8:	mov	v1.16b, v0.16b
   17fcc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   17fd0:	add	x0, x0, #0x840
   17fd4:	ldr	q2, [sp, #160]
   17fd8:	ldr	q4, [x0]
   17fdc:	b	17fe4 <__j1l_finite@GLIBC_2.17+0xc44>
   17fe0:	ldr	q4, [x22]
   17fe4:	ldr	q0, [sp, #80]
   17fe8:	sub	x22, x22, #0x10
   17fec:	str	q2, [sp, #160]
   17ff0:	str	q4, [sp, #176]
   17ff4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   17ff8:	ldr	q4, [sp, #176]
   17ffc:	mov	v1.16b, v4.16b
   18000:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18004:	cmp	x22, x23
   18008:	mov	v1.16b, v0.16b
   1800c:	ldr	q2, [sp, #160]
   18010:	b.ne	17fe0 <__j1l_finite@GLIBC_2.17+0xc40>  // b.any
   18014:	b	178e8 <__j1l_finite@GLIBC_2.17+0x548>
   18018:	ldr	q1, [sp, #112]
   1801c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18020:	str	q0, [sp, #144]
   18024:	b	17694 <__j1l_finite@GLIBC_2.17+0x2f4>
   18028:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1802c:	add	x0, x0, #0x950
   18030:	add	x23, x23, #0xec0
   18034:	add	x24, x22, #0xe30
   18038:	ldr	q4, [x0]
   1803c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18040:	add	x0, x0, #0x960
   18044:	ldr	q2, [x0]
   18048:	b	18050 <__j1l_finite@GLIBC_2.17+0xcb0>
   1804c:	ldr	q4, [x23]
   18050:	ldr	q0, [sp, #80]
   18054:	mov	v1.16b, v2.16b
   18058:	str	q4, [sp, #160]
   1805c:	sub	x23, x23, #0x10
   18060:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18064:	ldr	q4, [sp, #160]
   18068:	mov	v1.16b, v4.16b
   1806c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18070:	cmp	x23, x24
   18074:	mov	v2.16b, v0.16b
   18078:	b.ne	1804c <__j1l_finite@GLIBC_2.17+0xcac>  // b.any
   1807c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18080:	add	x0, x0, #0x970
   18084:	str	q0, [sp, #160]
   18088:	add	x23, x25, #0xb30
   1808c:	ldr	q0, [sp, #80]
   18090:	add	x22, x22, #0xf50
   18094:	ldr	q1, [x0]
   18098:	add	x24, x23, #0xed0
   1809c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   180a0:	mov	v1.16b, v0.16b
   180a4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   180a8:	add	x0, x0, #0x980
   180ac:	ldr	q2, [sp, #160]
   180b0:	ldr	q4, [x0]
   180b4:	b	180bc <__j1l_finite@GLIBC_2.17+0xd1c>
   180b8:	ldr	q4, [x22]
   180bc:	ldr	q0, [sp, #80]
   180c0:	sub	x22, x22, #0x10
   180c4:	str	q2, [sp, #160]
   180c8:	str	q4, [sp, #176]
   180cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   180d0:	ldr	q4, [sp, #176]
   180d4:	mov	v1.16b, v4.16b
   180d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   180dc:	cmp	x22, x24
   180e0:	mov	v1.16b, v0.16b
   180e4:	ldr	q2, [sp, #160]
   180e8:	b.ne	180b8 <__j1l_finite@GLIBC_2.17+0xd18>  // b.any
   180ec:	mov	v0.16b, v2.16b
   180f0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   180f4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   180f8:	add	x0, x0, #0x990
   180fc:	add	x22, x25, #0xb30
   18100:	add	x23, x23, #0xff0
   18104:	add	x22, x22, #0xf60
   18108:	str	q0, [sp, #192]
   1810c:	ldr	q4, [x0]
   18110:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18114:	add	x0, x0, #0x9a0
   18118:	ldr	q2, [x0]
   1811c:	b	18124 <__j1l_finite@GLIBC_2.17+0xd84>
   18120:	ldr	q4, [x23]
   18124:	ldr	q0, [sp, #80]
   18128:	mov	v1.16b, v2.16b
   1812c:	str	q4, [sp, #160]
   18130:	sub	x23, x23, #0x10
   18134:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18138:	ldr	q4, [sp, #160]
   1813c:	mov	v1.16b, v4.16b
   18140:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18144:	cmp	x23, x22
   18148:	mov	v2.16b, v0.16b
   1814c:	b.ne	18120 <__j1l_finite@GLIBC_2.17+0xd80>  // b.any
   18150:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18154:	add	x0, x0, #0x9b0
   18158:	str	q0, [sp, #160]
   1815c:	adrp	x22, 5f000 <f64xsubf128@@GLIBC_2.28+0xb280>
   18160:	ldr	q0, [sp, #80]
   18164:	add	x22, x22, #0xc30
   18168:	ldr	q1, [x0]
   1816c:	sub	x23, x22, #0x70
   18170:	sub	x22, x22, #0x100
   18174:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18178:	mov	v1.16b, v0.16b
   1817c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18180:	add	x0, x0, #0x9c0
   18184:	ldr	q2, [sp, #160]
   18188:	ldr	q4, [x0]
   1818c:	b	18194 <__j1l_finite@GLIBC_2.17+0xdf4>
   18190:	ldr	q4, [x23]
   18194:	ldr	q0, [sp, #80]
   18198:	sub	x23, x23, #0x10
   1819c:	str	q2, [sp, #160]
   181a0:	str	q4, [sp, #176]
   181a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   181a8:	ldr	q4, [sp, #176]
   181ac:	mov	v1.16b, v4.16b
   181b0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   181b4:	cmp	x23, x22
   181b8:	mov	v1.16b, v0.16b
   181bc:	ldr	q2, [sp, #160]
   181c0:	b.ne	18190 <__j1l_finite@GLIBC_2.17+0xdf0>  // b.any
   181c4:	b	178e8 <__j1l_finite@GLIBC_2.17+0x548>
   181c8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   181cc:	add	x0, x0, #0x850
   181d0:	add	x23, x23, #0x9b0
   181d4:	add	x24, x22, #0x910
   181d8:	ldr	q4, [x0]
   181dc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   181e0:	add	x0, x0, #0x860
   181e4:	ldr	q2, [x0]
   181e8:	b	181f0 <__j1l_finite@GLIBC_2.17+0xe50>
   181ec:	ldr	q4, [x23]
   181f0:	ldr	q0, [sp, #80]
   181f4:	mov	v1.16b, v2.16b
   181f8:	str	q4, [sp, #160]
   181fc:	sub	x23, x23, #0x10
   18200:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18204:	ldr	q4, [sp, #160]
   18208:	mov	v1.16b, v4.16b
   1820c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18210:	cmp	x23, x24
   18214:	mov	v2.16b, v0.16b
   18218:	b.ne	181ec <__j1l_finite@GLIBC_2.17+0xe4c>  // b.any
   1821c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18220:	add	x0, x0, #0x870
   18224:	str	q0, [sp, #160]
   18228:	add	x23, x25, #0xb30
   1822c:	ldr	q0, [sp, #80]
   18230:	add	x22, x22, #0xa50
   18234:	ldr	q1, [x0]
   18238:	add	x24, x23, #0x9c0
   1823c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18240:	mov	v1.16b, v0.16b
   18244:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18248:	add	x0, x0, #0x880
   1824c:	ldr	q2, [sp, #160]
   18250:	ldr	q4, [x0]
   18254:	b	1825c <__j1l_finite@GLIBC_2.17+0xebc>
   18258:	ldr	q4, [x22]
   1825c:	ldr	q0, [sp, #80]
   18260:	sub	x22, x22, #0x10
   18264:	str	q2, [sp, #160]
   18268:	str	q4, [sp, #176]
   1826c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18270:	ldr	q4, [sp, #176]
   18274:	mov	v1.16b, v4.16b
   18278:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1827c:	cmp	x22, x24
   18280:	mov	v1.16b, v0.16b
   18284:	ldr	q2, [sp, #160]
   18288:	b.ne	18258 <__j1l_finite@GLIBC_2.17+0xeb8>  // b.any
   1828c:	mov	v0.16b, v2.16b
   18290:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18294:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18298:	add	x0, x0, #0x890
   1829c:	add	x22, x25, #0xb30
   182a0:	add	x23, x23, #0xb00
   182a4:	add	x24, x22, #0xa60
   182a8:	str	q0, [sp, #192]
   182ac:	ldr	q4, [x0]
   182b0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   182b4:	add	x0, x0, #0x8a0
   182b8:	ldr	q2, [x0]
   182bc:	b	182c4 <__j1l_finite@GLIBC_2.17+0xf24>
   182c0:	ldr	q4, [x23]
   182c4:	ldr	q0, [sp, #80]
   182c8:	mov	v1.16b, v2.16b
   182cc:	str	q4, [sp, #160]
   182d0:	sub	x23, x23, #0x10
   182d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   182d8:	ldr	q4, [sp, #160]
   182dc:	mov	v1.16b, v4.16b
   182e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   182e4:	cmp	x23, x24
   182e8:	mov	v2.16b, v0.16b
   182ec:	b.ne	182c0 <__j1l_finite@GLIBC_2.17+0xf20>  // b.any
   182f0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   182f4:	add	x0, x0, #0x8b0
   182f8:	str	q0, [sp, #160]
   182fc:	add	x23, x25, #0xb30
   18300:	ldr	q0, [sp, #80]
   18304:	add	x22, x22, #0xba0
   18308:	ldr	q1, [x0]
   1830c:	add	x23, x23, #0xb10
   18310:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18314:	mov	v1.16b, v0.16b
   18318:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1831c:	add	x0, x0, #0x8c0
   18320:	ldr	q2, [sp, #160]
   18324:	ldr	q4, [x0]
   18328:	b	18330 <__j1l_finite@GLIBC_2.17+0xf90>
   1832c:	ldr	q4, [x22]
   18330:	ldr	q0, [sp, #80]
   18334:	sub	x22, x22, #0x10
   18338:	str	q2, [sp, #160]
   1833c:	str	q4, [sp, #176]
   18340:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18344:	ldr	q4, [sp, #176]
   18348:	mov	v1.16b, v4.16b
   1834c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18350:	cmp	x22, x23
   18354:	mov	v1.16b, v0.16b
   18358:	ldr	q2, [sp, #160]
   1835c:	b.ne	1832c <__j1l_finite@GLIBC_2.17+0xf8c>  // b.any
   18360:	b	178e8 <__j1l_finite@GLIBC_2.17+0x548>
   18364:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18368:	add	x0, x0, #0x750
   1836c:	add	x23, x23, #0x410
   18370:	add	x24, x22, #0x360
   18374:	ldr	q4, [x0]
   18378:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1837c:	add	x0, x0, #0x760
   18380:	ldr	q2, [x0]
   18384:	b	1838c <__j1l_finite@GLIBC_2.17+0xfec>
   18388:	ldr	q4, [x23]
   1838c:	ldr	q0, [sp, #80]
   18390:	mov	v1.16b, v2.16b
   18394:	str	q4, [sp, #160]
   18398:	sub	x23, x23, #0x10
   1839c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   183a0:	ldr	q4, [sp, #160]
   183a4:	mov	v1.16b, v4.16b
   183a8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   183ac:	cmp	x23, x24
   183b0:	mov	v2.16b, v0.16b
   183b4:	b.ne	18388 <__j1l_finite@GLIBC_2.17+0xfe8>  // b.any
   183b8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   183bc:	add	x0, x0, #0x770
   183c0:	str	q0, [sp, #160]
   183c4:	add	x23, x25, #0xb30
   183c8:	ldr	q0, [sp, #80]
   183cc:	add	x22, x22, #0x4c0
   183d0:	ldr	q1, [x0]
   183d4:	add	x24, x23, #0x420
   183d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   183dc:	mov	v1.16b, v0.16b
   183e0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   183e4:	add	x0, x0, #0x780
   183e8:	ldr	q2, [sp, #160]
   183ec:	ldr	q4, [x0]
   183f0:	b	183f8 <__j1l_finite@GLIBC_2.17+0x1058>
   183f4:	ldr	q4, [x22]
   183f8:	ldr	q0, [sp, #80]
   183fc:	sub	x22, x22, #0x10
   18400:	str	q2, [sp, #160]
   18404:	str	q4, [sp, #176]
   18408:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1840c:	ldr	q4, [sp, #176]
   18410:	mov	v1.16b, v4.16b
   18414:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18418:	cmp	x22, x24
   1841c:	mov	v1.16b, v0.16b
   18420:	ldr	q2, [sp, #160]
   18424:	b.ne	183f4 <__j1l_finite@GLIBC_2.17+0x1054>  // b.any
   18428:	mov	v0.16b, v2.16b
   1842c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18430:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18434:	add	x0, x0, #0x790
   18438:	add	x22, x25, #0xb30
   1843c:	add	x23, x23, #0x580
   18440:	add	x24, x22, #0x4d0
   18444:	str	q0, [sp, #192]
   18448:	ldr	q4, [x0]
   1844c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18450:	add	x0, x0, #0x7a0
   18454:	ldr	q2, [x0]
   18458:	b	18460 <__j1l_finite@GLIBC_2.17+0x10c0>
   1845c:	ldr	q4, [x23]
   18460:	ldr	q0, [sp, #80]
   18464:	mov	v1.16b, v2.16b
   18468:	str	q4, [sp, #160]
   1846c:	sub	x23, x23, #0x10
   18470:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18474:	ldr	q4, [sp, #160]
   18478:	mov	v1.16b, v4.16b
   1847c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18480:	cmp	x23, x24
   18484:	mov	v2.16b, v0.16b
   18488:	b.ne	1845c <__j1l_finite@GLIBC_2.17+0x10bc>  // b.any
   1848c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18490:	add	x0, x0, #0x7b0
   18494:	str	q0, [sp, #160]
   18498:	add	x23, x25, #0xb30
   1849c:	ldr	q0, [sp, #80]
   184a0:	add	x22, x22, #0x640
   184a4:	ldr	q1, [x0]
   184a8:	add	x23, x23, #0x590
   184ac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   184b0:	mov	v1.16b, v0.16b
   184b4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   184b8:	add	x0, x0, #0x7c0
   184bc:	ldr	q2, [sp, #160]
   184c0:	ldr	q4, [x0]
   184c4:	b	184cc <__j1l_finite@GLIBC_2.17+0x112c>
   184c8:	ldr	q4, [x22]
   184cc:	ldr	q0, [sp, #80]
   184d0:	sub	x22, x22, #0x10
   184d4:	str	q2, [sp, #160]
   184d8:	str	q4, [sp, #176]
   184dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   184e0:	ldr	q4, [sp, #176]
   184e4:	mov	v1.16b, v4.16b
   184e8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   184ec:	cmp	x22, x23
   184f0:	mov	v1.16b, v0.16b
   184f4:	ldr	q2, [sp, #160]
   184f8:	b.ne	184c8 <__j1l_finite@GLIBC_2.17+0x1128>  // b.any
   184fc:	b	178e8 <__j1l_finite@GLIBC_2.17+0x548>
   18500:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18504:	add	x0, x0, #0xa50
   18508:	add	x24, x24, #0x280
   1850c:	add	x25, x23, #0x200
   18510:	ldr	q4, [x0]
   18514:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18518:	add	x0, x0, #0xa60
   1851c:	ldr	q2, [x0]
   18520:	b	18528 <__j1l_finite@GLIBC_2.17+0x1188>
   18524:	ldr	q4, [x24]
   18528:	ldr	q0, [sp, #80]
   1852c:	mov	v1.16b, v2.16b
   18530:	str	q4, [sp, #160]
   18534:	sub	x24, x24, #0x10
   18538:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1853c:	ldr	q4, [sp, #160]
   18540:	mov	v1.16b, v4.16b
   18544:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18548:	cmp	x24, x25
   1854c:	mov	v2.16b, v0.16b
   18550:	b.ne	18524 <__j1l_finite@GLIBC_2.17+0x1184>  // b.any
   18554:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18558:	add	x0, x0, #0xa70
   1855c:	str	q0, [sp, #160]
   18560:	add	x24, x22, #0xc30
   18564:	ldr	q0, [sp, #80]
   18568:	add	x23, x23, #0x310
   1856c:	ldr	q1, [x0]
   18570:	add	x25, x24, #0x290
   18574:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18578:	mov	v1.16b, v0.16b
   1857c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18580:	add	x0, x0, #0xa80
   18584:	ldr	q2, [sp, #160]
   18588:	ldr	q4, [x0]
   1858c:	b	18594 <__j1l_finite@GLIBC_2.17+0x11f4>
   18590:	ldr	q4, [x23]
   18594:	ldr	q0, [sp, #80]
   18598:	sub	x23, x23, #0x10
   1859c:	str	q2, [sp, #160]
   185a0:	str	q4, [sp, #176]
   185a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   185a8:	ldr	q4, [sp, #176]
   185ac:	mov	v1.16b, v4.16b
   185b0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   185b4:	cmp	x23, x25
   185b8:	mov	v1.16b, v0.16b
   185bc:	ldr	q2, [sp, #160]
   185c0:	b.ne	18590 <__j1l_finite@GLIBC_2.17+0x11f0>  // b.any
   185c4:	mov	v0.16b, v2.16b
   185c8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   185cc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   185d0:	add	x0, x0, #0xa90
   185d4:	add	x23, x22, #0xc30
   185d8:	add	x24, x24, #0x3b0
   185dc:	add	x25, x23, #0x320
   185e0:	str	q0, [sp, #192]
   185e4:	ldr	q4, [x0]
   185e8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   185ec:	add	x0, x0, #0xaa0
   185f0:	ldr	q2, [x0]
   185f4:	b	185fc <__j1l_finite@GLIBC_2.17+0x125c>
   185f8:	ldr	q4, [x24]
   185fc:	ldr	q0, [sp, #80]
   18600:	mov	v1.16b, v2.16b
   18604:	str	q4, [sp, #160]
   18608:	sub	x24, x24, #0x10
   1860c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18610:	ldr	q4, [sp, #160]
   18614:	mov	v1.16b, v4.16b
   18618:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1861c:	cmp	x24, x25
   18620:	mov	v2.16b, v0.16b
   18624:	b.ne	185f8 <__j1l_finite@GLIBC_2.17+0x1258>  // b.any
   18628:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1862c:	add	x0, x0, #0xab0
   18630:	str	q0, [sp, #160]
   18634:	add	x22, x22, #0xc30
   18638:	ldr	q0, [sp, #80]
   1863c:	add	x23, x23, #0x440
   18640:	ldr	q1, [x0]
   18644:	add	x22, x22, #0x3c0
   18648:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1864c:	mov	v1.16b, v0.16b
   18650:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18654:	add	x0, x0, #0xac0
   18658:	ldr	q2, [sp, #160]
   1865c:	ldr	q4, [x0]
   18660:	b	18668 <__j1l_finite@GLIBC_2.17+0x12c8>
   18664:	ldr	q4, [x23]
   18668:	ldr	q0, [sp, #80]
   1866c:	sub	x23, x23, #0x10
   18670:	str	q2, [sp, #160]
   18674:	str	q4, [sp, #176]
   18678:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1867c:	ldr	q4, [sp, #176]
   18680:	mov	v1.16b, v4.16b
   18684:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18688:	cmp	x23, x22
   1868c:	mov	v1.16b, v0.16b
   18690:	ldr	q2, [sp, #160]
   18694:	b.ne	18664 <__j1l_finite@GLIBC_2.17+0x12c4>  // b.any
   18698:	b	178e8 <__j1l_finite@GLIBC_2.17+0x548>
   1869c:	stp	x25, x26, [sp, #64]
   186a0:	bl	ba70 <__stack_chk_fail@plt>
   186a4:	nop

00000000000186a8 <__y1l_finite@GLIBC_2.17>:
   186a8:	stp	x29, x30, [sp, #-272]!
   186ac:	mov	x29, sp
   186b0:	stp	x19, x20, [sp, #16]
   186b4:	stp	x23, x24, [sp, #48]
   186b8:	adrp	x23, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   186bc:	str	q0, [sp, #96]
   186c0:	ldp	x19, x20, [sp, #96]
   186c4:	ldr	x0, [x23, #4032]
   186c8:	ldr	x1, [x0]
   186cc:	str	x1, [sp, #264]
   186d0:	mov	x1, #0x0                   	// #0
   186d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   186d8:	add	x0, x0, #0x300
   186dc:	and	x24, x20, #0x7fffffffffffffff
   186e0:	str	x24, [sp, #104]
   186e4:	ldr	q1, [x0]
   186e8:	ldr	q0, [sp, #96]
   186ec:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   186f0:	cbnz	w0, 18930 <__y1l_finite@GLIBC_2.17+0x288>
   186f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   186f8:	add	x0, x0, #0x300
   186fc:	stp	x19, x24, [sp, #96]
   18700:	ldr	q1, [x0]
   18704:	ldr	q0, [sp, #96]
   18708:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1870c:	cmp	w0, #0x0
   18710:	b.gt	18930 <__y1l_finite@GLIBC_2.17+0x288>
   18714:	movi	v1.2d, #0x0
   18718:	stp	x19, x20, [sp, #96]
   1871c:	ldr	q0, [sp, #96]
   18720:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   18724:	cmp	w0, #0x0
   18728:	b.le	1890c <__y1l_finite@GLIBC_2.17+0x264>
   1872c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18730:	add	x0, x0, #0xad0
   18734:	stp	x19, x24, [sp, #96]
   18738:	ldr	q1, [x0]
   1873c:	ldr	q0, [sp, #96]
   18740:	stp	x21, x22, [sp, #32]
   18744:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   18748:	str	x19, [sp, #96]
   1874c:	cmp	w0, #0x0
   18750:	b.le	18d38 <__y1l_finite@GLIBC_2.17+0x690>
   18754:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18758:	add	x0, x0, #0xae0
   1875c:	str	x24, [sp, #104]
   18760:	ldr	q1, [x0]
   18764:	ldr	q0, [sp, #96]
   18768:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1876c:	cmp	w0, #0x0
   18770:	b.gt	18998 <__y1l_finite@GLIBC_2.17+0x2f0>
   18774:	stp	x25, x26, [sp, #64]
   18778:	stp	x27, x28, [sp, #80]
   1877c:	mrs	x26, fpcr
   18780:	ands	w27, w26, #0xc00000
   18784:	b.ne	193a4 <__y1l_finite@GLIBC_2.17+0xcfc>  // b.any
   18788:	stp	x19, x20, [sp, #96]
   1878c:	adrp	x25, 5f000 <f64xsubf128@@GLIBC_2.28+0xb280>
   18790:	add	x22, x25, #0xc30
   18794:	stp	x19, x20, [sp, #112]
   18798:	mov	x21, x22
   1879c:	ldr	q1, [sp, #96]
   187a0:	ldr	q0, [sp, #112]
   187a4:	add	x22, x22, #0x4c0
   187a8:	add	x28, x21, #0x450
   187ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   187b0:	str	q0, [sp, #96]
   187b4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   187b8:	add	x0, x0, #0xaf0
   187bc:	ldr	q2, [x0]
   187c0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   187c4:	add	x0, x0, #0xb00
   187c8:	ldr	q1, [x0]
   187cc:	b	187d4 <__y1l_finite@GLIBC_2.17+0x12c>
   187d0:	ldr	q2, [x22]
   187d4:	ldr	q0, [sp, #96]
   187d8:	sub	x22, x22, #0x10
   187dc:	str	q2, [sp, #112]
   187e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   187e4:	ldr	q2, [sp, #112]
   187e8:	mov	v1.16b, v2.16b
   187ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   187f0:	cmp	x22, x28
   187f4:	mov	v1.16b, v0.16b
   187f8:	b.ne	187d0 <__y1l_finite@GLIBC_2.17+0x128>  // b.any
   187fc:	stp	x19, x24, [sp, #112]
   18800:	add	x25, x25, #0xc30
   18804:	add	x21, x21, #0x540
   18808:	ldr	q0, [sp, #112]
   1880c:	add	x25, x25, #0x4d0
   18810:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18814:	str	q0, [sp, #128]
   18818:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1881c:	add	x0, x0, #0xb10
   18820:	ldr	q0, [sp, #96]
   18824:	ldr	q1, [x0]
   18828:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1882c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18830:	add	x0, x0, #0xb20
   18834:	ldr	q2, [x0]
   18838:	b	18840 <__y1l_finite@GLIBC_2.17+0x198>
   1883c:	ldr	q2, [x21]
   18840:	ldr	q1, [sp, #96]
   18844:	sub	x21, x21, #0x10
   18848:	str	q2, [sp, #112]
   1884c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18850:	ldr	q2, [sp, #112]
   18854:	mov	v1.16b, v2.16b
   18858:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1885c:	cmp	x21, x25
   18860:	b.ne	1883c <__y1l_finite@GLIBC_2.17+0x194>  // b.any
   18864:	mov	v1.16b, v0.16b
   18868:	ldr	q0, [sp, #128]
   1886c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18870:	stp	x19, x24, [sp, #96]
   18874:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18878:	add	x0, x0, #0xae0
   1887c:	str	q0, [sp, #112]
   18880:	ldr	q1, [sp, #96]
   18884:	ldr	q0, [x0]
   18888:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1888c:	ldr	q2, [sp, #112]
   18890:	mov	v1.16b, v2.16b
   18894:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18898:	stp	x19, x20, [sp, #96]
   1889c:	str	q0, [sp, #128]
   188a0:	ldr	q0, [sp, #96]
   188a4:	bl	1c928 <__logl_finite@GLIBC_2.17>
   188a8:	stp	x19, x20, [sp, #96]
   188ac:	str	q0, [sp, #112]
   188b0:	ldr	q0, [sp, #96]
   188b4:	bl	173a0 <__j1l_finite@GLIBC_2.17>
   188b8:	mov	v4.16b, v0.16b
   188bc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   188c0:	add	x0, x0, #0xfe0
   188c4:	ldr	q6, [sp, #112]
   188c8:	str	q4, [sp, #96]
   188cc:	ldr	q1, [x0]
   188d0:	mov	v0.16b, v6.16b
   188d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   188d8:	ldr	q4, [sp, #96]
   188dc:	mov	v1.16b, v4.16b
   188e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   188e4:	ldr	q2, [sp, #128]
   188e8:	mov	v1.16b, v2.16b
   188ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   188f0:	str	q0, [sp, #96]
   188f4:	ldp	x19, x20, [sp, #96]
   188f8:	cbnz	w27, 19390 <__y1l_finite@GLIBC_2.17+0xce8>
   188fc:	ldp	x21, x22, [sp, #32]
   18900:	ldp	x25, x26, [sp, #64]
   18904:	ldp	x27, x28, [sp, #80]
   18908:	b	1896c <__y1l_finite@GLIBC_2.17+0x2c4>
   1890c:	movi	v1.2d, #0x0
   18910:	stp	x19, x20, [sp, #96]
   18914:	ldr	q0, [sp, #96]
   18918:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1891c:	movi	v1.2d, #0x0
   18920:	tbnz	w0, #31, 18d14 <__y1l_finite@GLIBC_2.17+0x66c>
   18924:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18928:	add	x0, x0, #0xfd0
   1892c:	b	1895c <__y1l_finite@GLIBC_2.17+0x2b4>
   18930:	stp	x19, x20, [sp, #96]
   18934:	stp	x19, x20, [sp, #112]
   18938:	ldr	q1, [sp, #96]
   1893c:	ldr	q0, [sp, #112]
   18940:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18944:	stp	x19, x20, [sp, #96]
   18948:	ldr	q1, [sp, #96]
   1894c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18950:	mov	v1.16b, v0.16b
   18954:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   18958:	add	x0, x0, #0x2f0
   1895c:	ldr	q0, [x0]
   18960:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18964:	str	q0, [sp, #96]
   18968:	ldp	x19, x20, [sp, #96]
   1896c:	ldr	x23, [x23, #4032]
   18970:	ldr	x1, [sp, #264]
   18974:	ldr	x0, [x23]
   18978:	eor	x0, x1, x0
   1897c:	cbnz	x0, 19a3c <__y1l_finite@GLIBC_2.17+0x1394>
   18980:	stp	x19, x20, [sp, #96]
   18984:	ldp	x19, x20, [sp, #16]
   18988:	ldp	x23, x24, [sp, #48]
   1898c:	ldr	q0, [sp, #96]
   18990:	ldp	x29, x30, [sp], #272
   18994:	ret
   18998:	stp	x19, x24, [sp, #96]
   1899c:	add	x1, sp, #0xe0
   189a0:	add	x0, sp, #0xf0
   189a4:	ldr	q0, [sp, #96]
   189a8:	bl	24048 <sincosf128@@GLIBC_2.27>
   189ac:	ldp	x21, x20, [sp, #240]
   189b0:	ldr	q1, [sp, #224]
   189b4:	str	q1, [sp, #112]
   189b8:	eor	x0, x20, #0x8000000000000000
   189bc:	stp	x21, x0, [sp, #96]
   189c0:	ldr	q0, [sp, #96]
   189c4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   189c8:	stp	x21, x20, [sp, #96]
   189cc:	ldr	q1, [sp, #112]
   189d0:	str	q0, [sp, #128]
   189d4:	ldr	q0, [sp, #96]
   189d8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   189dc:	stp	x19, x24, [sp, #96]
   189e0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   189e4:	add	x0, x0, #0xb50
   189e8:	str	q0, [sp, #160]
   189ec:	ldr	q0, [sp, #96]
   189f0:	ldr	q1, [x0]
   189f4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   189f8:	cmp	w0, #0x0
   189fc:	b.le	18f94 <__y1l_finite@GLIBC_2.17+0x8ec>
   18a00:	stp	x19, x24, [sp, #96]
   18a04:	ldr	q0, [sp, #96]
   18a08:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   18a0c:	stp	x19, x24, [sp, #96]
   18a10:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18a14:	add	x0, x0, #0xb60
   18a18:	str	q0, [sp, #144]
   18a1c:	ldr	q0, [sp, #96]
   18a20:	ldr	q1, [x0]
   18a24:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   18a28:	cmp	w0, #0x0
   18a2c:	ldr	q0, [sp, #128]
   18a30:	b.gt	18cec <__y1l_finite@GLIBC_2.17+0x644>
   18a34:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   18a38:	add	x0, x0, #0x2f0
   18a3c:	stp	x19, x24, [sp, #96]
   18a40:	ldr	q0, [x0]
   18a44:	ldr	q1, [sp, #96]
   18a48:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18a4c:	mov	v1.16b, v0.16b
   18a50:	str	q0, [sp, #112]
   18a54:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18a58:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18a5c:	add	x0, x0, #0xb40
   18a60:	str	q0, [sp, #96]
   18a64:	ldr	q0, [sp, #112]
   18a68:	ldr	q1, [x0]
   18a6c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   18a70:	cmp	w0, #0x0
   18a74:	b.gt	18db4 <__y1l_finite@GLIBC_2.17+0x70c>
   18a78:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18a7c:	add	x0, x0, #0xb80
   18a80:	ldr	q0, [sp, #112]
   18a84:	ldr	q1, [x0]
   18a88:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   18a8c:	cmp	w0, #0x0
   18a90:	b.gt	18fe4 <__y1l_finite@GLIBC_2.17+0x93c>
   18a94:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18a98:	add	x0, x0, #0xb90
   18a9c:	ldr	q0, [sp, #112]
   18aa0:	adrp	x19, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18aa4:	add	x21, x19, #0xb30
   18aa8:	ldr	q1, [x0]
   18aac:	mov	x20, x21
   18ab0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   18ab4:	cmp	w0, #0x0
   18ab8:	b.gt	19704 <__y1l_finite@GLIBC_2.17+0x105c>
   18abc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18ac0:	add	x0, x0, #0x6d0
   18ac4:	add	x21, x21, #0x160
   18ac8:	add	x22, x20, #0xd0
   18acc:	ldr	q4, [x0]
   18ad0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18ad4:	add	x0, x0, #0x6e0
   18ad8:	ldr	q2, [x0]
   18adc:	b	18ae4 <__y1l_finite@GLIBC_2.17+0x43c>
   18ae0:	ldr	q4, [x21]
   18ae4:	ldr	q0, [sp, #96]
   18ae8:	mov	v1.16b, v2.16b
   18aec:	str	q4, [sp, #176]
   18af0:	sub	x21, x21, #0x10
   18af4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18af8:	ldr	q4, [sp, #176]
   18afc:	mov	v1.16b, v4.16b
   18b00:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18b04:	cmp	x21, x22
   18b08:	mov	v2.16b, v0.16b
   18b0c:	b.ne	18ae0 <__y1l_finite@GLIBC_2.17+0x438>  // b.any
   18b10:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18b14:	add	x0, x0, #0x6f0
   18b18:	str	q0, [sp, #176]
   18b1c:	add	x21, x19, #0xb30
   18b20:	ldr	q0, [sp, #96]
   18b24:	add	x20, x20, #0x200
   18b28:	ldr	q1, [x0]
   18b2c:	add	x22, x21, #0x170
   18b30:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18b34:	mov	v1.16b, v0.16b
   18b38:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18b3c:	add	x0, x0, #0x700
   18b40:	ldr	q2, [sp, #176]
   18b44:	ldr	q4, [x0]
   18b48:	b	18b50 <__y1l_finite@GLIBC_2.17+0x4a8>
   18b4c:	ldr	q4, [x20]
   18b50:	ldr	q0, [sp, #96]
   18b54:	sub	x20, x20, #0x10
   18b58:	str	q2, [sp, #176]
   18b5c:	str	q4, [sp, #192]
   18b60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18b64:	ldr	q4, [sp, #192]
   18b68:	mov	v1.16b, v4.16b
   18b6c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18b70:	cmp	x20, x22
   18b74:	mov	v1.16b, v0.16b
   18b78:	ldr	q2, [sp, #176]
   18b7c:	b.ne	18b4c <__y1l_finite@GLIBC_2.17+0x4a4>  // b.any
   18b80:	mov	v0.16b, v2.16b
   18b84:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18b88:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18b8c:	add	x0, x0, #0x710
   18b90:	add	x20, x19, #0xb30
   18b94:	add	x21, x21, #0x2b0
   18b98:	add	x22, x20, #0x210
   18b9c:	str	q0, [sp, #208]
   18ba0:	ldr	q4, [x0]
   18ba4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18ba8:	add	x0, x0, #0x720
   18bac:	ldr	q2, [x0]
   18bb0:	b	18bb8 <__y1l_finite@GLIBC_2.17+0x510>
   18bb4:	ldr	q4, [x21]
   18bb8:	ldr	q0, [sp, #96]
   18bbc:	mov	v1.16b, v2.16b
   18bc0:	str	q4, [sp, #176]
   18bc4:	sub	x21, x21, #0x10
   18bc8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18bcc:	ldr	q4, [sp, #176]
   18bd0:	mov	v1.16b, v4.16b
   18bd4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18bd8:	cmp	x21, x22
   18bdc:	mov	v2.16b, v0.16b
   18be0:	b.ne	18bb4 <__y1l_finite@GLIBC_2.17+0x50c>  // b.any
   18be4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18be8:	add	x0, x0, #0x730
   18bec:	str	q0, [sp, #176]
   18bf0:	add	x19, x19, #0xb30
   18bf4:	ldr	q0, [sp, #96]
   18bf8:	add	x20, x20, #0x350
   18bfc:	ldr	q1, [x0]
   18c00:	add	x19, x19, #0x2c0
   18c04:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18c08:	mov	v1.16b, v0.16b
   18c0c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18c10:	add	x0, x0, #0x740
   18c14:	ldr	q2, [sp, #176]
   18c18:	ldr	q4, [x0]
   18c1c:	b	18c24 <__y1l_finite@GLIBC_2.17+0x57c>
   18c20:	ldr	q4, [x20]
   18c24:	ldr	q0, [sp, #96]
   18c28:	sub	x20, x20, #0x10
   18c2c:	str	q2, [sp, #176]
   18c30:	str	q4, [sp, #192]
   18c34:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18c38:	ldr	q4, [sp, #192]
   18c3c:	mov	v1.16b, v4.16b
   18c40:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18c44:	cmp	x20, x19
   18c48:	mov	v1.16b, v0.16b
   18c4c:	ldr	q2, [sp, #176]
   18c50:	b.ne	18c20 <__y1l_finite@GLIBC_2.17+0x578>  // b.any
   18c54:	mov	v0.16b, v2.16b
   18c58:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18c5c:	mov	v2.16b, v0.16b
   18c60:	ldr	q1, [sp, #96]
   18c64:	ldr	q0, [sp, #208]
   18c68:	str	q2, [sp, #192]
   18c6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18c70:	str	q0, [sp, #176]
   18c74:	ldr	q1, [sp, #96]
   18c78:	ldr	q2, [sp, #192]
   18c7c:	mov	v0.16b, v2.16b
   18c80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18c84:	ldr	q1, [sp, #112]
   18c88:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18c8c:	str	q0, [sp, #96]
   18c90:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18c94:	add	x0, x0, #0xdb0
   18c98:	ldr	q0, [sp, #112]
   18c9c:	ldr	q1, [x0]
   18ca0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18ca4:	ldr	q2, [sp, #96]
   18ca8:	mov	v1.16b, v2.16b
   18cac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18cb0:	ldr	q1, [sp, #160]
   18cb4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18cb8:	str	q0, [sp, #96]
   18cbc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   18cc0:	add	x0, x0, #0x2f0
   18cc4:	ldr	q4, [sp, #176]
   18cc8:	ldr	q1, [x0]
   18ccc:	mov	v0.16b, v4.16b
   18cd0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18cd4:	ldr	q1, [sp, #128]
   18cd8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18cdc:	mov	v1.16b, v0.16b
   18ce0:	ldr	q2, [sp, #96]
   18ce4:	mov	v0.16b, v2.16b
   18ce8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18cec:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18cf0:	add	x0, x0, #0xb70
   18cf4:	ldr	q1, [x0]
   18cf8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18cfc:	ldr	q1, [sp, #144]
   18d00:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18d04:	str	q0, [sp, #96]
   18d08:	ldp	x19, x20, [sp, #96]
   18d0c:	ldp	x21, x22, [sp, #32]
   18d10:	b	1896c <__y1l_finite@GLIBC_2.17+0x2c4>
   18d14:	stp	x19, x20, [sp, #96]
   18d18:	ldr	q0, [sp, #96]
   18d1c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18d20:	mov	v1.16b, v0.16b
   18d24:	movi	v0.2d, #0x0
   18d28:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18d2c:	str	q0, [sp, #96]
   18d30:	ldp	x19, x20, [sp, #96]
   18d34:	b	1896c <__y1l_finite@GLIBC_2.17+0x2c4>
   18d38:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18d3c:	add	x0, x0, #0xae0
   18d40:	str	x20, [sp, #104]
   18d44:	ldr	q0, [x0]
   18d48:	ldr	q1, [sp, #96]
   18d4c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18d50:	str	q0, [sp, #96]
   18d54:	ldp	x19, x20, [sp, #96]
   18d58:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   18d5c:	add	x0, x0, #0x300
   18d60:	ldr	q1, [x0]
   18d64:	and	x21, x20, #0x7fffffffffffffff
   18d68:	str	x21, [sp, #104]
   18d6c:	ldr	q0, [sp, #96]
   18d70:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   18d74:	cbnz	w0, 18d0c <__y1l_finite@GLIBC_2.17+0x664>
   18d78:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   18d7c:	add	x0, x0, #0x300
   18d80:	stp	x19, x21, [sp, #96]
   18d84:	ldr	q1, [x0]
   18d88:	ldr	q0, [sp, #96]
   18d8c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   18d90:	cmp	w0, #0x0
   18d94:	b.le	18d0c <__y1l_finite@GLIBC_2.17+0x664>
   18d98:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   18d9c:	ldr	x0, [x0, #3976]
   18da0:	mrs	x1, tpidr_el0
   18da4:	mov	w2, #0x22                  	// #34
   18da8:	ldp	x21, x22, [sp, #32]
   18dac:	str	w2, [x1, x0]
   18db0:	b	1896c <__y1l_finite@GLIBC_2.17+0x2c4>
   18db4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18db8:	add	x0, x0, #0xdb0
   18dbc:	ldr	q0, [sp, #112]
   18dc0:	ldr	q1, [x0]
   18dc4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   18dc8:	cmp	w0, #0x0
   18dcc:	b.gt	191a8 <__y1l_finite@GLIBC_2.17+0xb00>
   18dd0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18dd4:	add	x0, x0, #0xdc0
   18dd8:	ldr	q0, [sp, #112]
   18ddc:	ldr	q1, [x0]
   18de0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   18de4:	cmp	w0, #0x0
   18de8:	b.gt	19554 <__y1l_finite@GLIBC_2.17+0xeac>
   18dec:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18df0:	add	x0, x0, #0x8d0
   18df4:	adrp	x19, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18df8:	add	x21, x19, #0xb30
   18dfc:	mov	x20, x21
   18e00:	add	x21, x21, #0xc40
   18e04:	ldr	q4, [x0]
   18e08:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18e0c:	add	x0, x0, #0x8e0
   18e10:	add	x22, x20, #0xbb0
   18e14:	ldr	q2, [x0]
   18e18:	b	18e20 <__y1l_finite@GLIBC_2.17+0x778>
   18e1c:	ldr	q4, [x21]
   18e20:	ldr	q0, [sp, #96]
   18e24:	mov	v1.16b, v2.16b
   18e28:	str	q4, [sp, #176]
   18e2c:	sub	x21, x21, #0x10
   18e30:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18e34:	ldr	q4, [sp, #176]
   18e38:	mov	v1.16b, v4.16b
   18e3c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18e40:	cmp	x21, x22
   18e44:	mov	v2.16b, v0.16b
   18e48:	b.ne	18e1c <__y1l_finite@GLIBC_2.17+0x774>  // b.any
   18e4c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18e50:	add	x0, x0, #0x8f0
   18e54:	str	q0, [sp, #176]
   18e58:	add	x21, x19, #0xb30
   18e5c:	ldr	q0, [sp, #96]
   18e60:	add	x20, x20, #0xce0
   18e64:	ldr	q1, [x0]
   18e68:	add	x22, x21, #0xc50
   18e6c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18e70:	mov	v1.16b, v0.16b
   18e74:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18e78:	add	x0, x0, #0x900
   18e7c:	ldr	q2, [sp, #176]
   18e80:	ldr	q4, [x0]
   18e84:	b	18e8c <__y1l_finite@GLIBC_2.17+0x7e4>
   18e88:	ldr	q4, [x20]
   18e8c:	ldr	q0, [sp, #96]
   18e90:	sub	x20, x20, #0x10
   18e94:	str	q2, [sp, #176]
   18e98:	str	q4, [sp, #192]
   18e9c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18ea0:	ldr	q4, [sp, #192]
   18ea4:	mov	v1.16b, v4.16b
   18ea8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18eac:	cmp	x20, x22
   18eb0:	mov	v1.16b, v0.16b
   18eb4:	ldr	q2, [sp, #176]
   18eb8:	b.ne	18e88 <__y1l_finite@GLIBC_2.17+0x7e0>  // b.any
   18ebc:	mov	v0.16b, v2.16b
   18ec0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18ec4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18ec8:	add	x0, x0, #0x910
   18ecc:	add	x20, x19, #0xb30
   18ed0:	add	x21, x21, #0xd80
   18ed4:	add	x22, x20, #0xcf0
   18ed8:	str	q0, [sp, #208]
   18edc:	ldr	q4, [x0]
   18ee0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18ee4:	add	x0, x0, #0x920
   18ee8:	ldr	q2, [x0]
   18eec:	b	18ef4 <__y1l_finite@GLIBC_2.17+0x84c>
   18ef0:	ldr	q4, [x21]
   18ef4:	ldr	q0, [sp, #96]
   18ef8:	mov	v1.16b, v2.16b
   18efc:	str	q4, [sp, #176]
   18f00:	sub	x21, x21, #0x10
   18f04:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18f08:	ldr	q4, [sp, #176]
   18f0c:	mov	v1.16b, v4.16b
   18f10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18f14:	cmp	x21, x22
   18f18:	mov	v2.16b, v0.16b
   18f1c:	b.ne	18ef0 <__y1l_finite@GLIBC_2.17+0x848>  // b.any
   18f20:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18f24:	add	x0, x0, #0x930
   18f28:	str	q0, [sp, #176]
   18f2c:	add	x19, x19, #0xb30
   18f30:	ldr	q0, [sp, #96]
   18f34:	add	x20, x20, #0xe20
   18f38:	ldr	q1, [x0]
   18f3c:	add	x19, x19, #0xd90
   18f40:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18f44:	mov	v1.16b, v0.16b
   18f48:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18f4c:	add	x0, x0, #0x940
   18f50:	ldr	q2, [sp, #176]
   18f54:	ldr	q4, [x0]
   18f58:	b	18f60 <__y1l_finite@GLIBC_2.17+0x8b8>
   18f5c:	ldr	q4, [x20]
   18f60:	ldr	q0, [sp, #96]
   18f64:	sub	x20, x20, #0x10
   18f68:	str	q2, [sp, #176]
   18f6c:	str	q4, [sp, #192]
   18f70:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18f74:	ldr	q4, [sp, #192]
   18f78:	mov	v1.16b, v4.16b
   18f7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18f80:	cmp	x20, x19
   18f84:	mov	v1.16b, v0.16b
   18f88:	ldr	q2, [sp, #176]
   18f8c:	b.ne	18f5c <__y1l_finite@GLIBC_2.17+0x8b4>  // b.any
   18f90:	b	18c54 <__y1l_finite@GLIBC_2.17+0x5ac>
   18f94:	stp	x19, x24, [sp, #96]
   18f98:	stp	x19, x24, [sp, #112]
   18f9c:	ldr	q1, [sp, #96]
   18fa0:	ldr	q0, [sp, #112]
   18fa4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   18fa8:	bl	205f0 <cosf128@@GLIBC_2.27>
   18fac:	str	q0, [sp, #96]
   18fb0:	ldr	q1, [sp, #224]
   18fb4:	ldr	q0, [sp, #240]
   18fb8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   18fbc:	movi	v1.2d, #0x0
   18fc0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   18fc4:	cmp	w0, #0x0
   18fc8:	ldr	q2, [sp, #96]
   18fcc:	mov	v0.16b, v2.16b
   18fd0:	b.le	19380 <__y1l_finite@GLIBC_2.17+0xcd8>
   18fd4:	ldr	q1, [sp, #128]
   18fd8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   18fdc:	str	q0, [sp, #160]
   18fe0:	b	18a00 <__y1l_finite@GLIBC_2.17+0x358>
   18fe4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   18fe8:	add	x0, x0, #0xca0
   18fec:	ldr	q0, [sp, #112]
   18ff0:	adrp	x19, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   18ff4:	add	x21, x19, #0xb30
   18ff8:	ldr	q1, [x0]
   18ffc:	mov	x20, x21
   19000:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   19004:	cmp	w0, #0x0
   19008:	b.gt	198a0 <__y1l_finite@GLIBC_2.17+0x11f8>
   1900c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19010:	add	x0, x0, #0x7d0
   19014:	add	x21, x21, #0x6f0
   19018:	add	x22, x20, #0x650
   1901c:	ldr	q4, [x0]
   19020:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19024:	add	x0, x0, #0x7e0
   19028:	ldr	q2, [x0]
   1902c:	b	19034 <__y1l_finite@GLIBC_2.17+0x98c>
   19030:	ldr	q4, [x21]
   19034:	ldr	q0, [sp, #96]
   19038:	mov	v1.16b, v2.16b
   1903c:	str	q4, [sp, #176]
   19040:	sub	x21, x21, #0x10
   19044:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19048:	ldr	q4, [sp, #176]
   1904c:	mov	v1.16b, v4.16b
   19050:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19054:	cmp	x21, x22
   19058:	mov	v2.16b, v0.16b
   1905c:	b.ne	19030 <__y1l_finite@GLIBC_2.17+0x988>  // b.any
   19060:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19064:	add	x0, x0, #0x7f0
   19068:	str	q0, [sp, #176]
   1906c:	add	x21, x19, #0xb30
   19070:	ldr	q0, [sp, #96]
   19074:	add	x20, x20, #0x7a0
   19078:	ldr	q1, [x0]
   1907c:	add	x22, x21, #0x700
   19080:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19084:	mov	v1.16b, v0.16b
   19088:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1908c:	add	x0, x0, #0x800
   19090:	ldr	q2, [sp, #176]
   19094:	ldr	q4, [x0]
   19098:	b	190a0 <__y1l_finite@GLIBC_2.17+0x9f8>
   1909c:	ldr	q4, [x20]
   190a0:	ldr	q0, [sp, #96]
   190a4:	sub	x20, x20, #0x10
   190a8:	str	q2, [sp, #176]
   190ac:	str	q4, [sp, #192]
   190b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   190b4:	ldr	q4, [sp, #192]
   190b8:	mov	v1.16b, v4.16b
   190bc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   190c0:	cmp	x20, x22
   190c4:	mov	v1.16b, v0.16b
   190c8:	ldr	q2, [sp, #176]
   190cc:	b.ne	1909c <__y1l_finite@GLIBC_2.17+0x9f4>  // b.any
   190d0:	mov	v0.16b, v2.16b
   190d4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   190d8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   190dc:	add	x0, x0, #0x810
   190e0:	add	x20, x19, #0xb30
   190e4:	add	x21, x21, #0x850
   190e8:	add	x22, x20, #0x7b0
   190ec:	str	q0, [sp, #208]
   190f0:	ldr	q4, [x0]
   190f4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   190f8:	add	x0, x0, #0x820
   190fc:	ldr	q2, [x0]
   19100:	b	19108 <__y1l_finite@GLIBC_2.17+0xa60>
   19104:	ldr	q4, [x21]
   19108:	ldr	q0, [sp, #96]
   1910c:	mov	v1.16b, v2.16b
   19110:	str	q4, [sp, #176]
   19114:	sub	x21, x21, #0x10
   19118:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1911c:	ldr	q4, [sp, #176]
   19120:	mov	v1.16b, v4.16b
   19124:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19128:	cmp	x21, x22
   1912c:	mov	v2.16b, v0.16b
   19130:	b.ne	19104 <__y1l_finite@GLIBC_2.17+0xa5c>  // b.any
   19134:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19138:	add	x0, x0, #0x830
   1913c:	str	q0, [sp, #176]
   19140:	add	x19, x19, #0xb30
   19144:	ldr	q0, [sp, #96]
   19148:	add	x20, x20, #0x900
   1914c:	ldr	q1, [x0]
   19150:	add	x19, x19, #0x860
   19154:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19158:	mov	v1.16b, v0.16b
   1915c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19160:	add	x0, x0, #0x840
   19164:	ldr	q2, [sp, #176]
   19168:	ldr	q4, [x0]
   1916c:	b	19174 <__y1l_finite@GLIBC_2.17+0xacc>
   19170:	ldr	q4, [x20]
   19174:	ldr	q0, [sp, #96]
   19178:	sub	x20, x20, #0x10
   1917c:	str	q2, [sp, #176]
   19180:	str	q4, [sp, #192]
   19184:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19188:	ldr	q4, [sp, #192]
   1918c:	mov	v1.16b, v4.16b
   19190:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19194:	cmp	x20, x19
   19198:	mov	v1.16b, v0.16b
   1919c:	ldr	q2, [sp, #176]
   191a0:	b.ne	19170 <__y1l_finite@GLIBC_2.17+0xac8>  // b.any
   191a4:	b	18c54 <__y1l_finite@GLIBC_2.17+0x5ac>
   191a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   191ac:	add	x0, x0, #0xba0
   191b0:	ldr	q0, [sp, #112]
   191b4:	stp	x25, x26, [sp, #64]
   191b8:	adrp	x25, 5f000 <f64xsubf128@@GLIBC_2.28+0xb280>
   191bc:	ldr	q1, [x0]
   191c0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   191c4:	cmp	w0, #0x0
   191c8:	b.gt	193b0 <__y1l_finite@GLIBC_2.17+0xd08>
   191cc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   191d0:	add	x0, x0, #0x9d0
   191d4:	add	x20, x25, #0xc30
   191d8:	mov	x19, x20
   191dc:	add	x20, x20, #0x30
   191e0:	ldr	q4, [x0]
   191e4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   191e8:	add	x0, x0, #0x9e0
   191ec:	sub	x21, x19, #0x60
   191f0:	ldr	q2, [x0]
   191f4:	b	191fc <__y1l_finite@GLIBC_2.17+0xb54>
   191f8:	ldr	q4, [x20]
   191fc:	ldr	q0, [sp, #96]
   19200:	mov	v1.16b, v2.16b
   19204:	str	q4, [sp, #176]
   19208:	sub	x20, x20, #0x10
   1920c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19210:	ldr	q4, [sp, #176]
   19214:	mov	v1.16b, v4.16b
   19218:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1921c:	cmp	x20, x21
   19220:	mov	v2.16b, v0.16b
   19224:	b.ne	191f8 <__y1l_finite@GLIBC_2.17+0xb50>  // b.any
   19228:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1922c:	add	x0, x0, #0x9f0
   19230:	str	q0, [sp, #176]
   19234:	add	x20, x25, #0xc30
   19238:	ldr	q0, [sp, #96]
   1923c:	add	x19, x19, #0xc0
   19240:	ldr	q1, [x0]
   19244:	add	x21, x20, #0x40
   19248:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1924c:	mov	v1.16b, v0.16b
   19250:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19254:	add	x0, x0, #0xa00
   19258:	ldr	q2, [sp, #176]
   1925c:	ldr	q4, [x0]
   19260:	b	19268 <__y1l_finite@GLIBC_2.17+0xbc0>
   19264:	ldr	q4, [x19]
   19268:	ldr	q0, [sp, #96]
   1926c:	sub	x19, x19, #0x10
   19270:	str	q2, [sp, #176]
   19274:	str	q4, [sp, #192]
   19278:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1927c:	ldr	q4, [sp, #192]
   19280:	mov	v1.16b, v4.16b
   19284:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19288:	cmp	x19, x21
   1928c:	mov	v1.16b, v0.16b
   19290:	ldr	q2, [sp, #176]
   19294:	b.ne	19264 <__y1l_finite@GLIBC_2.17+0xbbc>  // b.any
   19298:	mov	v0.16b, v2.16b
   1929c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   192a0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   192a4:	add	x0, x0, #0xa10
   192a8:	add	x19, x25, #0xc30
   192ac:	add	x20, x20, #0x160
   192b0:	add	x21, x19, #0xd0
   192b4:	str	q0, [sp, #208]
   192b8:	ldr	q4, [x0]
   192bc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   192c0:	add	x0, x0, #0xa20
   192c4:	ldr	q2, [x0]
   192c8:	b	192d0 <__y1l_finite@GLIBC_2.17+0xc28>
   192cc:	ldr	q4, [x20]
   192d0:	ldr	q0, [sp, #96]
   192d4:	mov	v1.16b, v2.16b
   192d8:	str	q4, [sp, #176]
   192dc:	sub	x20, x20, #0x10
   192e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   192e4:	ldr	q4, [sp, #176]
   192e8:	mov	v1.16b, v4.16b
   192ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   192f0:	cmp	x20, x21
   192f4:	mov	v2.16b, v0.16b
   192f8:	b.ne	192cc <__y1l_finite@GLIBC_2.17+0xc24>  // b.any
   192fc:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19300:	add	x0, x0, #0xa30
   19304:	str	q0, [sp, #176]
   19308:	add	x20, x25, #0xc30
   1930c:	ldr	q0, [sp, #96]
   19310:	add	x19, x19, #0x1f0
   19314:	ldr	q1, [x0]
   19318:	add	x20, x20, #0x170
   1931c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19320:	mov	v1.16b, v0.16b
   19324:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19328:	add	x0, x0, #0xa40
   1932c:	ldr	q2, [sp, #176]
   19330:	ldr	q4, [x0]
   19334:	b	1933c <__y1l_finite@GLIBC_2.17+0xc94>
   19338:	ldr	q4, [x19]
   1933c:	ldr	q0, [sp, #96]
   19340:	sub	x19, x19, #0x10
   19344:	str	q2, [sp, #176]
   19348:	str	q4, [sp, #192]
   1934c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19350:	ldr	q4, [sp, #192]
   19354:	mov	v1.16b, v4.16b
   19358:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1935c:	cmp	x19, x20
   19360:	mov	v1.16b, v0.16b
   19364:	ldr	q2, [sp, #176]
   19368:	b.ne	19338 <__y1l_finite@GLIBC_2.17+0xc90>  // b.any
   1936c:	mov	v0.16b, v2.16b
   19370:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19374:	mov	v2.16b, v0.16b
   19378:	ldp	x25, x26, [sp, #64]
   1937c:	b	18c60 <__y1l_finite@GLIBC_2.17+0x5b8>
   19380:	ldr	q1, [sp, #160]
   19384:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19388:	str	q0, [sp, #128]
   1938c:	b	18a00 <__y1l_finite@GLIBC_2.17+0x358>
   19390:	msr	fpcr, x26
   19394:	ldp	x21, x22, [sp, #32]
   19398:	ldp	x25, x26, [sp, #64]
   1939c:	ldp	x27, x28, [sp, #80]
   193a0:	b	1896c <__y1l_finite@GLIBC_2.17+0x2c4>
   193a4:	eor	w0, w27, w26
   193a8:	msr	fpcr, x0
   193ac:	b	18788 <__y1l_finite@GLIBC_2.17+0xe0>
   193b0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   193b4:	add	x0, x0, #0xa50
   193b8:	add	x19, x25, #0xc30
   193bc:	mov	x20, x19
   193c0:	add	x19, x19, #0x280
   193c4:	ldr	q4, [x0]
   193c8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   193cc:	add	x0, x0, #0xa60
   193d0:	add	x21, x20, #0x200
   193d4:	ldr	q2, [x0]
   193d8:	b	193e0 <__y1l_finite@GLIBC_2.17+0xd38>
   193dc:	ldr	q4, [x19]
   193e0:	ldr	q0, [sp, #96]
   193e4:	mov	v1.16b, v2.16b
   193e8:	str	q4, [sp, #176]
   193ec:	sub	x19, x19, #0x10
   193f0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   193f4:	ldr	q4, [sp, #176]
   193f8:	mov	v1.16b, v4.16b
   193fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19400:	cmp	x19, x21
   19404:	mov	v2.16b, v0.16b
   19408:	b.ne	193dc <__y1l_finite@GLIBC_2.17+0xd34>  // b.any
   1940c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19410:	add	x0, x0, #0xa70
   19414:	str	q0, [sp, #176]
   19418:	add	x19, x25, #0xc30
   1941c:	ldr	q0, [sp, #96]
   19420:	add	x20, x20, #0x310
   19424:	ldr	q1, [x0]
   19428:	add	x21, x19, #0x290
   1942c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19430:	mov	v1.16b, v0.16b
   19434:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19438:	add	x0, x0, #0xa80
   1943c:	ldr	q2, [sp, #176]
   19440:	ldr	q4, [x0]
   19444:	b	1944c <__y1l_finite@GLIBC_2.17+0xda4>
   19448:	ldr	q4, [x20]
   1944c:	ldr	q0, [sp, #96]
   19450:	sub	x20, x20, #0x10
   19454:	str	q2, [sp, #176]
   19458:	str	q4, [sp, #192]
   1945c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19460:	ldr	q4, [sp, #192]
   19464:	mov	v1.16b, v4.16b
   19468:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1946c:	cmp	x20, x21
   19470:	mov	v1.16b, v0.16b
   19474:	ldr	q2, [sp, #176]
   19478:	b.ne	19448 <__y1l_finite@GLIBC_2.17+0xda0>  // b.any
   1947c:	mov	v0.16b, v2.16b
   19480:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19484:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19488:	add	x0, x0, #0xa90
   1948c:	add	x20, x25, #0xc30
   19490:	add	x19, x19, #0x3b0
   19494:	add	x21, x20, #0x320
   19498:	str	q0, [sp, #208]
   1949c:	ldr	q4, [x0]
   194a0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   194a4:	add	x0, x0, #0xaa0
   194a8:	ldr	q2, [x0]
   194ac:	b	194b4 <__y1l_finite@GLIBC_2.17+0xe0c>
   194b0:	ldr	q4, [x19]
   194b4:	ldr	q0, [sp, #96]
   194b8:	mov	v1.16b, v2.16b
   194bc:	str	q4, [sp, #176]
   194c0:	sub	x19, x19, #0x10
   194c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   194c8:	ldr	q4, [sp, #176]
   194cc:	mov	v1.16b, v4.16b
   194d0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   194d4:	cmp	x19, x21
   194d8:	mov	v2.16b, v0.16b
   194dc:	b.ne	194b0 <__y1l_finite@GLIBC_2.17+0xe08>  // b.any
   194e0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   194e4:	add	x0, x0, #0xab0
   194e8:	str	q0, [sp, #176]
   194ec:	add	x19, x25, #0xc30
   194f0:	ldr	q0, [sp, #96]
   194f4:	add	x20, x20, #0x440
   194f8:	ldr	q1, [x0]
   194fc:	add	x19, x19, #0x3c0
   19500:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19504:	mov	v1.16b, v0.16b
   19508:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1950c:	add	x0, x0, #0xac0
   19510:	ldr	q2, [sp, #176]
   19514:	ldr	q4, [x0]
   19518:	b	19520 <__y1l_finite@GLIBC_2.17+0xe78>
   1951c:	ldr	q4, [x20]
   19520:	ldr	q0, [sp, #96]
   19524:	sub	x20, x20, #0x10
   19528:	str	q2, [sp, #176]
   1952c:	str	q4, [sp, #192]
   19530:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19534:	ldr	q4, [sp, #192]
   19538:	mov	v1.16b, v4.16b
   1953c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19540:	cmp	x20, x19
   19544:	mov	v1.16b, v0.16b
   19548:	ldr	q2, [sp, #176]
   1954c:	b.ne	1951c <__y1l_finite@GLIBC_2.17+0xe74>  // b.any
   19550:	b	1936c <__y1l_finite@GLIBC_2.17+0xcc4>
   19554:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19558:	add	x0, x0, #0x950
   1955c:	adrp	x19, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19560:	add	x20, x19, #0xb30
   19564:	mov	x21, x20
   19568:	add	x20, x20, #0xec0
   1956c:	ldr	q4, [x0]
   19570:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19574:	add	x0, x0, #0x960
   19578:	add	x22, x21, #0xe30
   1957c:	stp	x25, x26, [sp, #64]
   19580:	ldr	q2, [x0]
   19584:	b	1958c <__y1l_finite@GLIBC_2.17+0xee4>
   19588:	ldr	q4, [x20]
   1958c:	ldr	q0, [sp, #96]
   19590:	mov	v1.16b, v2.16b
   19594:	str	q4, [sp, #176]
   19598:	sub	x20, x20, #0x10
   1959c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   195a0:	ldr	q4, [sp, #176]
   195a4:	mov	v1.16b, v4.16b
   195a8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   195ac:	cmp	x20, x22
   195b0:	mov	v2.16b, v0.16b
   195b4:	b.ne	19588 <__y1l_finite@GLIBC_2.17+0xee0>  // b.any
   195b8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   195bc:	add	x0, x0, #0x970
   195c0:	str	q0, [sp, #176]
   195c4:	add	x20, x19, #0xb30
   195c8:	ldr	q0, [sp, #96]
   195cc:	add	x21, x21, #0xf50
   195d0:	ldr	q1, [x0]
   195d4:	add	x22, x20, #0xed0
   195d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   195dc:	mov	v1.16b, v0.16b
   195e0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   195e4:	add	x0, x0, #0x980
   195e8:	ldr	q2, [sp, #176]
   195ec:	ldr	q4, [x0]
   195f0:	b	195f8 <__y1l_finite@GLIBC_2.17+0xf50>
   195f4:	ldr	q4, [x21]
   195f8:	ldr	q0, [sp, #96]
   195fc:	sub	x21, x21, #0x10
   19600:	str	q2, [sp, #176]
   19604:	str	q4, [sp, #192]
   19608:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1960c:	ldr	q4, [sp, #192]
   19610:	mov	v1.16b, v4.16b
   19614:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19618:	cmp	x21, x22
   1961c:	mov	v1.16b, v0.16b
   19620:	ldr	q2, [sp, #176]
   19624:	b.ne	195f4 <__y1l_finite@GLIBC_2.17+0xf4c>  // b.any
   19628:	mov	v0.16b, v2.16b
   1962c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19630:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19634:	add	x0, x0, #0x990
   19638:	add	x19, x19, #0xb30
   1963c:	add	x20, x20, #0xff0
   19640:	add	x19, x19, #0xf60
   19644:	str	q0, [sp, #208]
   19648:	ldr	q4, [x0]
   1964c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19650:	add	x0, x0, #0x9a0
   19654:	ldr	q2, [x0]
   19658:	b	19660 <__y1l_finite@GLIBC_2.17+0xfb8>
   1965c:	ldr	q4, [x20]
   19660:	ldr	q0, [sp, #96]
   19664:	mov	v1.16b, v2.16b
   19668:	str	q4, [sp, #176]
   1966c:	sub	x20, x20, #0x10
   19670:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19674:	ldr	q4, [sp, #176]
   19678:	mov	v1.16b, v4.16b
   1967c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19680:	cmp	x20, x19
   19684:	mov	v2.16b, v0.16b
   19688:	b.ne	1965c <__y1l_finite@GLIBC_2.17+0xfb4>  // b.any
   1968c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19690:	add	x0, x0, #0x9b0
   19694:	str	q0, [sp, #176]
   19698:	adrp	x25, 5f000 <f64xsubf128@@GLIBC_2.28+0xb280>
   1969c:	ldr	q0, [sp, #96]
   196a0:	add	x20, x25, #0xc30
   196a4:	ldr	q1, [x0]
   196a8:	sub	x19, x20, #0x70
   196ac:	sub	x20, x20, #0x100
   196b0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   196b4:	mov	v1.16b, v0.16b
   196b8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   196bc:	add	x0, x0, #0x9c0
   196c0:	ldr	q2, [sp, #176]
   196c4:	ldr	q4, [x0]
   196c8:	b	196d0 <__y1l_finite@GLIBC_2.17+0x1028>
   196cc:	ldr	q4, [x19]
   196d0:	ldr	q0, [sp, #96]
   196d4:	sub	x19, x19, #0x10
   196d8:	str	q2, [sp, #176]
   196dc:	str	q4, [sp, #192]
   196e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   196e4:	ldr	q4, [sp, #192]
   196e8:	mov	v1.16b, v4.16b
   196ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   196f0:	cmp	x19, x20
   196f4:	mov	v1.16b, v0.16b
   196f8:	ldr	q2, [sp, #176]
   196fc:	b.ne	196cc <__y1l_finite@GLIBC_2.17+0x1024>  // b.any
   19700:	b	1936c <__y1l_finite@GLIBC_2.17+0xcc4>
   19704:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19708:	add	x0, x0, #0x750
   1970c:	add	x21, x21, #0x410
   19710:	add	x22, x20, #0x360
   19714:	ldr	q4, [x0]
   19718:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1971c:	add	x0, x0, #0x760
   19720:	ldr	q2, [x0]
   19724:	b	1972c <__y1l_finite@GLIBC_2.17+0x1084>
   19728:	ldr	q4, [x21]
   1972c:	ldr	q0, [sp, #96]
   19730:	mov	v1.16b, v2.16b
   19734:	str	q4, [sp, #176]
   19738:	sub	x21, x21, #0x10
   1973c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19740:	ldr	q4, [sp, #176]
   19744:	mov	v1.16b, v4.16b
   19748:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1974c:	cmp	x21, x22
   19750:	mov	v2.16b, v0.16b
   19754:	b.ne	19728 <__y1l_finite@GLIBC_2.17+0x1080>  // b.any
   19758:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1975c:	add	x0, x0, #0x770
   19760:	str	q0, [sp, #176]
   19764:	add	x21, x19, #0xb30
   19768:	ldr	q0, [sp, #96]
   1976c:	add	x20, x20, #0x4c0
   19770:	ldr	q1, [x0]
   19774:	add	x22, x21, #0x420
   19778:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1977c:	mov	v1.16b, v0.16b
   19780:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19784:	add	x0, x0, #0x780
   19788:	ldr	q2, [sp, #176]
   1978c:	ldr	q4, [x0]
   19790:	b	19798 <__y1l_finite@GLIBC_2.17+0x10f0>
   19794:	ldr	q4, [x20]
   19798:	ldr	q0, [sp, #96]
   1979c:	sub	x20, x20, #0x10
   197a0:	str	q2, [sp, #176]
   197a4:	str	q4, [sp, #192]
   197a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   197ac:	ldr	q4, [sp, #192]
   197b0:	mov	v1.16b, v4.16b
   197b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   197b8:	cmp	x20, x22
   197bc:	mov	v1.16b, v0.16b
   197c0:	ldr	q2, [sp, #176]
   197c4:	b.ne	19794 <__y1l_finite@GLIBC_2.17+0x10ec>  // b.any
   197c8:	mov	v0.16b, v2.16b
   197cc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   197d0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   197d4:	add	x0, x0, #0x790
   197d8:	add	x20, x19, #0xb30
   197dc:	add	x21, x21, #0x580
   197e0:	add	x22, x20, #0x4d0
   197e4:	str	q0, [sp, #208]
   197e8:	ldr	q4, [x0]
   197ec:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   197f0:	add	x0, x0, #0x7a0
   197f4:	ldr	q2, [x0]
   197f8:	b	19800 <__y1l_finite@GLIBC_2.17+0x1158>
   197fc:	ldr	q4, [x21]
   19800:	ldr	q0, [sp, #96]
   19804:	mov	v1.16b, v2.16b
   19808:	str	q4, [sp, #176]
   1980c:	sub	x21, x21, #0x10
   19810:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19814:	ldr	q4, [sp, #176]
   19818:	mov	v1.16b, v4.16b
   1981c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19820:	cmp	x21, x22
   19824:	mov	v2.16b, v0.16b
   19828:	b.ne	197fc <__y1l_finite@GLIBC_2.17+0x1154>  // b.any
   1982c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19830:	add	x0, x0, #0x7b0
   19834:	str	q0, [sp, #176]
   19838:	add	x19, x19, #0xb30
   1983c:	ldr	q0, [sp, #96]
   19840:	add	x20, x20, #0x640
   19844:	ldr	q1, [x0]
   19848:	add	x19, x19, #0x590
   1984c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19850:	mov	v1.16b, v0.16b
   19854:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19858:	add	x0, x0, #0x7c0
   1985c:	ldr	q2, [sp, #176]
   19860:	ldr	q4, [x0]
   19864:	b	1986c <__y1l_finite@GLIBC_2.17+0x11c4>
   19868:	ldr	q4, [x20]
   1986c:	ldr	q0, [sp, #96]
   19870:	sub	x20, x20, #0x10
   19874:	str	q2, [sp, #176]
   19878:	str	q4, [sp, #192]
   1987c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19880:	ldr	q4, [sp, #192]
   19884:	mov	v1.16b, v4.16b
   19888:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1988c:	cmp	x20, x19
   19890:	mov	v1.16b, v0.16b
   19894:	ldr	q2, [sp, #176]
   19898:	b.ne	19868 <__y1l_finite@GLIBC_2.17+0x11c0>  // b.any
   1989c:	b	18c54 <__y1l_finite@GLIBC_2.17+0x5ac>
   198a0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   198a4:	add	x0, x0, #0x850
   198a8:	add	x21, x21, #0x9b0
   198ac:	add	x22, x20, #0x910
   198b0:	ldr	q4, [x0]
   198b4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   198b8:	add	x0, x0, #0x860
   198bc:	ldr	q2, [x0]
   198c0:	b	198c8 <__y1l_finite@GLIBC_2.17+0x1220>
   198c4:	ldr	q4, [x21]
   198c8:	ldr	q0, [sp, #96]
   198cc:	mov	v1.16b, v2.16b
   198d0:	str	q4, [sp, #176]
   198d4:	sub	x21, x21, #0x10
   198d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   198dc:	ldr	q4, [sp, #176]
   198e0:	mov	v1.16b, v4.16b
   198e4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   198e8:	cmp	x21, x22
   198ec:	mov	v2.16b, v0.16b
   198f0:	b.ne	198c4 <__y1l_finite@GLIBC_2.17+0x121c>  // b.any
   198f4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   198f8:	add	x0, x0, #0x870
   198fc:	str	q0, [sp, #176]
   19900:	add	x21, x19, #0xb30
   19904:	ldr	q0, [sp, #96]
   19908:	add	x20, x20, #0xa50
   1990c:	ldr	q1, [x0]
   19910:	add	x22, x21, #0x9c0
   19914:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19918:	mov	v1.16b, v0.16b
   1991c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19920:	add	x0, x0, #0x880
   19924:	ldr	q2, [sp, #176]
   19928:	ldr	q4, [x0]
   1992c:	b	19934 <__y1l_finite@GLIBC_2.17+0x128c>
   19930:	ldr	q4, [x20]
   19934:	ldr	q0, [sp, #96]
   19938:	sub	x20, x20, #0x10
   1993c:	str	q2, [sp, #176]
   19940:	str	q4, [sp, #192]
   19944:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19948:	ldr	q4, [sp, #192]
   1994c:	mov	v1.16b, v4.16b
   19950:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19954:	cmp	x20, x22
   19958:	mov	v1.16b, v0.16b
   1995c:	ldr	q2, [sp, #176]
   19960:	b.ne	19930 <__y1l_finite@GLIBC_2.17+0x1288>  // b.any
   19964:	mov	v0.16b, v2.16b
   19968:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1996c:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   19970:	add	x0, x0, #0x890
   19974:	add	x20, x19, #0xb30
   19978:	add	x21, x21, #0xb00
   1997c:	add	x22, x20, #0xa60
   19980:	str	q0, [sp, #208]
   19984:	ldr	q4, [x0]
   19988:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   1998c:	add	x0, x0, #0x8a0
   19990:	ldr	q2, [x0]
   19994:	b	1999c <__y1l_finite@GLIBC_2.17+0x12f4>
   19998:	ldr	q4, [x21]
   1999c:	ldr	q0, [sp, #96]
   199a0:	mov	v1.16b, v2.16b
   199a4:	str	q4, [sp, #176]
   199a8:	sub	x21, x21, #0x10
   199ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   199b0:	ldr	q4, [sp, #176]
   199b4:	mov	v1.16b, v4.16b
   199b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   199bc:	cmp	x21, x22
   199c0:	mov	v2.16b, v0.16b
   199c4:	b.ne	19998 <__y1l_finite@GLIBC_2.17+0x12f0>  // b.any
   199c8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   199cc:	add	x0, x0, #0x8b0
   199d0:	str	q0, [sp, #176]
   199d4:	add	x19, x19, #0xb30
   199d8:	ldr	q0, [sp, #96]
   199dc:	add	x20, x20, #0xba0
   199e0:	ldr	q1, [x0]
   199e4:	add	x19, x19, #0xb10
   199e8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   199ec:	mov	v1.16b, v0.16b
   199f0:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   199f4:	add	x0, x0, #0x8c0
   199f8:	ldr	q2, [sp, #176]
   199fc:	ldr	q4, [x0]
   19a00:	b	19a08 <__y1l_finite@GLIBC_2.17+0x1360>
   19a04:	ldr	q4, [x20]
   19a08:	ldr	q0, [sp, #96]
   19a0c:	sub	x20, x20, #0x10
   19a10:	str	q2, [sp, #176]
   19a14:	str	q4, [sp, #192]
   19a18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19a1c:	ldr	q4, [sp, #192]
   19a20:	mov	v1.16b, v4.16b
   19a24:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19a28:	cmp	x20, x19
   19a2c:	mov	v1.16b, v0.16b
   19a30:	ldr	q2, [sp, #176]
   19a34:	b.ne	19a04 <__y1l_finite@GLIBC_2.17+0x135c>  // b.any
   19a38:	b	18c54 <__y1l_finite@GLIBC_2.17+0x5ac>
   19a3c:	stp	x21, x22, [sp, #32]
   19a40:	stp	x25, x26, [sp, #64]
   19a44:	stp	x27, x28, [sp, #80]
   19a48:	bl	ba70 <__stack_chk_fail@plt>
   19a4c:	nop

0000000000019a50 <__jnl_finite@GLIBC_2.17>:
   19a50:	stp	x29, x30, [sp, #-240]!
   19a54:	mov	w2, #0x7ffeffff            	// #2147418111
   19a58:	mov	x29, sp
   19a5c:	stp	x19, x20, [sp, #16]
   19a60:	mov	w20, w0
   19a64:	stp	x21, x22, [sp, #32]
   19a68:	stp	x23, x24, [sp, #48]
   19a6c:	adrp	x23, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   19a70:	str	q0, [sp, #96]
   19a74:	ldp	x19, x22, [sp, #96]
   19a78:	ldr	x3, [x23, #4032]
   19a7c:	ldr	x0, [x3]
   19a80:	str	x0, [sp, #232]
   19a84:	mov	x0, #0x0                   	// #0
   19a88:	lsr	x0, x22, #32
   19a8c:	and	w21, w0, #0x7fffffff
   19a90:	mov	w24, w0
   19a94:	cmp	w21, w2
   19a98:	b.le	19ab4 <__jnl_finite@GLIBC_2.17+0x64>
   19a9c:	and	w0, w0, #0xffff
   19aa0:	lsr	x2, x19, #32
   19aa4:	orr	w0, w0, w19
   19aa8:	orr	w1, w22, w2
   19aac:	orr	w0, w0, w1
   19ab0:	cbnz	w0, 19ce4 <__jnl_finite@GLIBC_2.17+0x294>
   19ab4:	cmp	w20, #0x0
   19ab8:	b.lt	19c44 <__jnl_finite@GLIBC_2.17+0x1f4>  // b.tstop
   19abc:	b.eq	19d88 <__jnl_finite@GLIBC_2.17+0x338>  // b.none
   19ac0:	cmp	w20, #0x1
   19ac4:	b.eq	1a078 <__jnl_finite@GLIBC_2.17+0x628>  // b.none
   19ac8:	and	w0, w20, w24, lsr #31
   19acc:	stp	x25, x26, [sp, #64]
   19ad0:	str	w0, [sp, #168]
   19ad4:	mrs	x25, fpcr
   19ad8:	ands	w0, w25, #0xc00000
   19adc:	str	w0, [sp, #172]
   19ae0:	b.ne	1a094 <__jnl_finite@GLIBC_2.17+0x644>  // b.any
   19ae4:	movi	v1.2d, #0x0
   19ae8:	stp	x19, x22, [sp, #96]
   19aec:	ldr	q0, [sp, #96]
   19af0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   19af4:	cmp	w0, #0x0
   19af8:	cset	w1, eq  // eq = none
   19afc:	mov	w0, #0x7ffeffff            	// #2147418111
   19b00:	cmp	w21, w0
   19b04:	cset	w0, gt
   19b08:	orr	w0, w0, w1
   19b0c:	tbnz	w0, #0, 19d28 <__jnl_finite@GLIBC_2.17+0x2d8>
   19b10:	mov	w0, w20
   19b14:	and	x22, x22, #0x7fffffffffffffff
   19b18:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   19b1c:	stp	x19, x22, [sp, #96]
   19b20:	ldr	q1, [sp, #96]
   19b24:	str	q0, [sp, #176]
   19b28:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   19b2c:	cmp	w0, #0x0
   19b30:	b.gt	19c54 <__jnl_finite@GLIBC_2.17+0x204>
   19b34:	mov	w0, #0x412cffff            	// #1093468159
   19b38:	cmp	w21, w0
   19b3c:	b.le	19fe0 <__jnl_finite@GLIBC_2.17+0x590>
   19b40:	stp	x19, x22, [sp, #96]
   19b44:	add	x1, sp, #0xd0
   19b48:	add	x0, sp, #0xc0
   19b4c:	ldr	q0, [sp, #96]
   19b50:	and	w20, w20, #0x3
   19b54:	bl	24048 <sincosf128@@GLIBC_2.27>
   19b58:	cmp	w20, #0x2
   19b5c:	b.eq	1a208 <__jnl_finite@GLIBC_2.17+0x7b8>  // b.none
   19b60:	cmp	w20, #0x3
   19b64:	b.eq	1a1f4 <__jnl_finite@GLIBC_2.17+0x7a4>  // b.none
   19b68:	cmp	w20, #0x1
   19b6c:	b.eq	1a1e0 <__jnl_finite@GLIBC_2.17+0x790>  // b.none
   19b70:	ldr	q1, [sp, #192]
   19b74:	ldr	q0, [sp, #208]
   19b78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19b7c:	mov	v4.16b, v0.16b
   19b80:	stp	x19, x22, [sp, #96]
   19b84:	ldr	q0, [sp, #96]
   19b88:	str	q4, [sp, #112]
   19b8c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   19b90:	str	q0, [sp, #96]
   19b94:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   19b98:	add	x0, x0, #0xb70
   19b9c:	ldr	q4, [sp, #112]
   19ba0:	ldr	q1, [x0]
   19ba4:	mov	v0.16b, v4.16b
   19ba8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19bac:	ldr	q2, [sp, #96]
   19bb0:	mov	v1.16b, v2.16b
   19bb4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19bb8:	str	q0, [sp, #96]
   19bbc:	ldp	x1, x21, [sp, #96]
   19bc0:	mov	x20, x1
   19bc4:	ldr	w0, [sp, #168]
   19bc8:	cmp	w0, #0x1
   19bcc:	eor	x0, x21, #0x8000000000000000
   19bd0:	csel	x21, x0, x21, eq  // eq = none
   19bd4:	ldr	w0, [sp, #172]
   19bd8:	cbnz	w0, 1a1d8 <__jnl_finite@GLIBC_2.17+0x788>
   19bdc:	movi	v1.2d, #0x0
   19be0:	stp	x20, x21, [sp, #96]
   19be4:	ldr	q0, [sp, #96]
   19be8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   19bec:	cbnz	w0, 19d4c <__jnl_finite@GLIBC_2.17+0x2fc>
   19bf0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19bf4:	add	x0, x0, #0xeb0
   19bf8:	ldr	q0, [x0]
   19bfc:	tbz	x21, #63, 19c0c <__jnl_finite@GLIBC_2.17+0x1bc>
   19c00:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   19c04:	add	x0, x0, #0x1b0
   19c08:	ldr	q0, [x0]
   19c0c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19c10:	add	x0, x0, #0xeb0
   19c14:	ldr	q1, [x0]
   19c18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19c1c:	str	q0, [sp, #96]
   19c20:	ldp	x1, x21, [sp, #96]
   19c24:	mrs	x2, tpidr_el0
   19c28:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   19c2c:	ldr	x0, [x0, #3976]
   19c30:	mov	w3, #0x22                  	// #34
   19c34:	ldp	x25, x26, [sp, #64]
   19c38:	mov	x20, x1
   19c3c:	str	w3, [x2, x0]
   19c40:	b	19cf8 <__jnl_finite@GLIBC_2.17+0x2a8>
   19c44:	eor	x22, x22, #0x8000000000000000
   19c48:	neg	w20, w20
   19c4c:	eor	w24, w24, #0x80000000
   19c50:	b	19ac0 <__jnl_finite@GLIBC_2.17+0x70>
   19c54:	mov	w0, #0x3fc5ffff            	// #1069940735
   19c58:	cmp	w21, w0
   19c5c:	b.gt	19da4 <__jnl_finite@GLIBC_2.17+0x354>
   19c60:	cmp	w20, #0x18f
   19c64:	b.gt	1a1a0 <__jnl_finite@GLIBC_2.17+0x750>
   19c68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19c6c:	add	x0, x0, #0x330
   19c70:	stp	x19, x22, [sp, #96]
   19c74:	add	w20, w20, #0x1
   19c78:	mov	w19, #0x2                   	// #2
   19c7c:	ldr	q1, [x0]
   19c80:	ldr	q0, [sp, #96]
   19c84:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19c88:	mov	v2.16b, v0.16b
   19c8c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19c90:	add	x0, x0, #0x2f0
   19c94:	str	q0, [sp, #128]
   19c98:	ldr	q1, [x0]
   19c9c:	str	q1, [sp, #96]
   19ca0:	mov	w0, w19
   19ca4:	str	q2, [sp, #112]
   19ca8:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   19cac:	mov	v1.16b, v0.16b
   19cb0:	ldr	q0, [sp, #96]
   19cb4:	add	w19, w19, #0x1
   19cb8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19cbc:	str	q0, [sp, #96]
   19cc0:	ldr	q2, [sp, #112]
   19cc4:	ldr	q1, [sp, #128]
   19cc8:	mov	v0.16b, v2.16b
   19ccc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19cd0:	mov	v2.16b, v0.16b
   19cd4:	cmp	w20, w19
   19cd8:	b.ne	19ca0 <__jnl_finite@GLIBC_2.17+0x250>  // b.any
   19cdc:	ldr	q1, [sp, #96]
   19ce0:	b	19bb4 <__jnl_finite@GLIBC_2.17+0x164>
   19ce4:	mov	v1.16b, v0.16b
   19ce8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19cec:	str	q0, [sp, #96]
   19cf0:	ldp	x1, x21, [sp, #96]
   19cf4:	mov	x20, x1
   19cf8:	ldr	x23, [x23, #4032]
   19cfc:	ldr	x1, [sp, #232]
   19d00:	ldr	x0, [x23]
   19d04:	eor	x0, x1, x0
   19d08:	cbnz	x0, 1a234 <__jnl_finite@GLIBC_2.17+0x7e4>
   19d0c:	stp	x20, x21, [sp, #96]
   19d10:	ldp	x19, x20, [sp, #16]
   19d14:	ldp	x21, x22, [sp, #32]
   19d18:	ldp	x23, x24, [sp, #48]
   19d1c:	ldr	q0, [sp, #96]
   19d20:	ldp	x29, x30, [sp], #240
   19d24:	ret
   19d28:	ldr	w0, [sp, #168]
   19d2c:	mov	x21, #0x8000000000000000    	// #-9223372036854775808
   19d30:	mov	x20, #0x0                   	// #0
   19d34:	cmp	w0, #0x1
   19d38:	csel	x21, x21, xzr, eq  // eq = none
   19d3c:	ands	w0, w25, #0xc00000
   19d40:	cbnz	w0, 1a1ac <__jnl_finite@GLIBC_2.17+0x75c>
   19d44:	ldp	x25, x26, [sp, #64]
   19d48:	b	19cf8 <__jnl_finite@GLIBC_2.17+0x2a8>
   19d4c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19d50:	add	x0, x0, #0xeb0
   19d54:	ldr	q1, [x0]
   19d58:	and	x0, x21, #0x7fffffffffffffff
   19d5c:	stp	x20, x0, [sp, #96]
   19d60:	ldr	q0, [sp, #96]
   19d64:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   19d68:	tbz	w0, #31, 19d44 <__jnl_finite@GLIBC_2.17+0x2f4>
   19d6c:	stp	x20, x21, [sp, #96]
   19d70:	stp	x20, x21, [sp, #112]
   19d74:	ldr	q1, [sp, #96]
   19d78:	ldr	q0, [sp, #112]
   19d7c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19d80:	ldp	x25, x26, [sp, #64]
   19d84:	b	19cf8 <__jnl_finite@GLIBC_2.17+0x2a8>
   19d88:	stp	x19, x22, [sp, #96]
   19d8c:	ldr	q0, [sp, #96]
   19d90:	bl	14e60 <__j0l_finite@GLIBC_2.17>
   19d94:	str	q0, [sp, #96]
   19d98:	ldp	x1, x21, [sp, #96]
   19d9c:	mov	x20, x1
   19da0:	b	19cf8 <__jnl_finite@GLIBC_2.17+0x2a8>
   19da4:	lsl	w26, w20, #1
   19da8:	mov	w21, #0x1                   	// #1
   19dac:	mov	w0, w26
   19db0:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   19db4:	stp	x19, x22, [sp, #96]
   19db8:	ldr	q1, [sp, #96]
   19dbc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19dc0:	stp	x19, x22, [sp, #96]
   19dc4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   19dc8:	add	x0, x0, #0xae0
   19dcc:	str	q0, [sp, #112]
   19dd0:	ldr	q1, [sp, #96]
   19dd4:	ldr	q0, [x0]
   19dd8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19ddc:	mov	v1.16b, v0.16b
   19de0:	str	q0, [sp, #144]
   19de4:	ldr	q0, [sp, #112]
   19de8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19dec:	mov	v2.16b, v0.16b
   19df0:	ldr	q0, [sp, #112]
   19df4:	mov	v1.16b, v2.16b
   19df8:	str	q2, [sp, #128]
   19dfc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19e00:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19e04:	add	x0, x0, #0x2f0
   19e08:	ldr	q1, [x0]
   19e0c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   19e10:	str	q0, [sp, #96]
   19e14:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   19e18:	add	x0, x0, #0x190
   19e1c:	ldr	q1, [x0]
   19e20:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   19e24:	tbz	w0, #31, 1a228 <__jnl_finite@GLIBC_2.17+0x7d8>
   19e28:	ldr	q2, [sp, #128]
   19e2c:	nop
   19e30:	ldr	q1, [sp, #144]
   19e34:	mov	v0.16b, v2.16b
   19e38:	add	w21, w21, #0x1
   19e3c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   19e40:	str	q0, [sp, #128]
   19e44:	ldr	q1, [sp, #96]
   19e48:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19e4c:	ldr	q1, [sp, #112]
   19e50:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   19e54:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   19e58:	add	x0, x0, #0x190
   19e5c:	ldr	q1, [sp, #96]
   19e60:	str	q0, [sp, #96]
   19e64:	str	q1, [sp, #112]
   19e68:	ldr	q1, [x0]
   19e6c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   19e70:	ldr	q2, [sp, #128]
   19e74:	tbnz	w0, #31, 19e30 <__jnl_finite@GLIBC_2.17+0x3e0>
   19e78:	add	w21, w21, w20
   19e7c:	lsl	w21, w21, #1
   19e80:	stp	xzr, xzr, [sp, #112]
   19e84:	nop
   19e88:	mov	w0, w21
   19e8c:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   19e90:	stp	x19, x22, [sp, #96]
   19e94:	sub	w21, w21, #0x2
   19e98:	ldr	q1, [sp, #96]
   19e9c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19ea0:	ldr	q1, [sp, #112]
   19ea4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   19ea8:	mov	v1.16b, v0.16b
   19eac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19eb0:	add	x0, x0, #0x2f0
   19eb4:	ldr	q0, [x0]
   19eb8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19ebc:	str	q0, [sp, #112]
   19ec0:	cmp	w26, w21
   19ec4:	b.le	19e88 <__jnl_finite@GLIBC_2.17+0x438>
   19ec8:	ldr	q1, [sp, #144]
   19ecc:	sub	w20, w20, #0x1
   19ed0:	ldr	q0, [sp, #176]
   19ed4:	sub	w26, w26, #0x2
   19ed8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19edc:	str	q0, [sp, #96]
   19ee0:	ldr	x0, [sp, #104]
   19ee4:	and	x0, x0, #0x7fffffffffffffff
   19ee8:	str	x0, [sp, #104]
   19eec:	ldr	q0, [sp, #96]
   19ef0:	bl	1c928 <__logl_finite@GLIBC_2.17>
   19ef4:	mov	v1.16b, v0.16b
   19ef8:	ldr	q0, [sp, #176]
   19efc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19f00:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19f04:	add	x0, x0, #0xf90
   19f08:	ldr	q1, [x0]
   19f0c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   19f10:	tbnz	w0, #31, 1a0a0 <__jnl_finite@GLIBC_2.17+0x650>
   19f14:	mov	w0, w26
   19f18:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   19f1c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19f20:	add	x0, x0, #0x2f0
   19f24:	str	q0, [sp, #128]
   19f28:	ldr	q2, [sp, #112]
   19f2c:	ldr	q16, [x0]
   19f30:	b	19f6c <__jnl_finite@GLIBC_2.17+0x51c>
   19f34:	ldr	q1, [sp, #96]
   19f38:	mov	v0.16b, v16.16b
   19f3c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19f40:	ldr	q1, [sp, #96]
   19f44:	str	q0, [sp, #96]
   19f48:	ldr	q0, [sp, #112]
   19f4c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19f50:	str	q0, [sp, #112]
   19f54:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   19f58:	add	x0, x0, #0x2f0
   19f5c:	ldr	q2, [sp, #96]
   19f60:	ldr	q16, [x0]
   19f64:	subs	w20, w20, #0x1
   19f68:	b.eq	1a12c <__jnl_finite@GLIBC_2.17+0x6dc>  // b.none
   19f6c:	ldr	q1, [sp, #128]
   19f70:	mov	v0.16b, v16.16b
   19f74:	str	q16, [sp, #144]
   19f78:	str	q2, [sp, #176]
   19f7c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   19f80:	stp	x19, x22, [sp, #96]
   19f84:	ldr	q1, [sp, #96]
   19f88:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   19f8c:	ldr	q2, [sp, #176]
   19f90:	mov	v1.16b, v2.16b
   19f94:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   19f98:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   19f9c:	add	x0, x0, #0xae0
   19fa0:	str	q0, [sp, #96]
   19fa4:	ldr	q0, [sp, #128]
   19fa8:	ldr	q1, [x0]
   19fac:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   19fb0:	str	q0, [sp, #128]
   19fb4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   19fb8:	add	x0, x0, #0x1a0
   19fbc:	ldr	q0, [sp, #96]
   19fc0:	ldr	q1, [x0]
   19fc4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   19fc8:	cmp	w0, #0x0
   19fcc:	ldr	q16, [sp, #144]
   19fd0:	b.gt	19f34 <__jnl_finite@GLIBC_2.17+0x4e4>
   19fd4:	mov	v2.16b, v16.16b
   19fd8:	ldr	q16, [sp, #96]
   19fdc:	b	19f64 <__jnl_finite@GLIBC_2.17+0x514>
   19fe0:	stp	x19, x22, [sp, #96]
   19fe4:	lsl	w0, w20, #1
   19fe8:	mov	w24, #0x2                   	// #2
   19fec:	ldr	q0, [sp, #96]
   19ff0:	stp	x27, x28, [sp, #80]
   19ff4:	str	w0, [sp, #112]
   19ff8:	bl	14e60 <__j0l_finite@GLIBC_2.17>
   19ffc:	stp	x19, x22, [sp, #96]
   1a000:	str	q0, [sp, #128]
   1a004:	ldr	q0, [sp, #96]
   1a008:	ldp	x27, x26, [sp, #128]
   1a00c:	bl	173a0 <__j1l_finite@GLIBC_2.17>
   1a010:	str	q0, [sp, #96]
   1a014:	ldp	x1, x21, [sp, #96]
   1a018:	mov	x20, x1
   1a01c:	nop
   1a020:	mov	w0, w24
   1a024:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1a028:	stp	x19, x22, [sp, #96]
   1a02c:	add	w24, w24, #0x2
   1a030:	ldr	q1, [sp, #96]
   1a034:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1a038:	stp	x20, x21, [sp, #96]
   1a03c:	ldr	q1, [sp, #96]
   1a040:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a044:	stp	x27, x26, [sp, #96]
   1a048:	mov	x26, x21
   1a04c:	ldr	q1, [sp, #96]
   1a050:	mov	x27, x20
   1a054:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a058:	str	q0, [sp, #96]
   1a05c:	ldp	x1, x21, [sp, #96]
   1a060:	ldr	w0, [sp, #112]
   1a064:	cmp	w0, w24
   1a068:	mov	x20, x1
   1a06c:	b.ne	1a020 <__jnl_finite@GLIBC_2.17+0x5d0>  // b.any
   1a070:	ldp	x27, x28, [sp, #80]
   1a074:	b	19bc4 <__jnl_finite@GLIBC_2.17+0x174>
   1a078:	stp	x19, x22, [sp, #96]
   1a07c:	ldr	q0, [sp, #96]
   1a080:	bl	173a0 <__j1l_finite@GLIBC_2.17>
   1a084:	str	q0, [sp, #96]
   1a088:	ldp	x1, x21, [sp, #96]
   1a08c:	mov	x20, x1
   1a090:	b	19cf8 <__jnl_finite@GLIBC_2.17+0x2a8>
   1a094:	eor	w0, w0, w25
   1a098:	msr	fpcr, x0
   1a09c:	b	19ae4 <__jnl_finite@GLIBC_2.17+0x94>
   1a0a0:	mov	w0, w26
   1a0a4:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1a0a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a0ac:	add	x0, x0, #0x2f0
   1a0b0:	mov	v4.16b, v0.16b
   1a0b4:	ldr	q18, [sp, #112]
   1a0b8:	ldr	q2, [x0]
   1a0bc:	b	1a0c4 <__jnl_finite@GLIBC_2.17+0x674>
   1a0c0:	mov	v2.16b, v6.16b
   1a0c4:	mov	v1.16b, v4.16b
   1a0c8:	mov	v0.16b, v2.16b
   1a0cc:	str	q2, [sp, #128]
   1a0d0:	str	q4, [sp, #144]
   1a0d4:	str	q18, [sp, #176]
   1a0d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a0dc:	stp	x19, x22, [sp, #96]
   1a0e0:	ldr	q1, [sp, #96]
   1a0e4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1a0e8:	ldr	q18, [sp, #176]
   1a0ec:	mov	v1.16b, v18.16b
   1a0f0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a0f4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1a0f8:	add	x0, x0, #0xae0
   1a0fc:	ldr	q4, [sp, #144]
   1a100:	str	q0, [sp, #96]
   1a104:	ldr	q1, [x0]
   1a108:	mov	v0.16b, v4.16b
   1a10c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a110:	mov	v4.16b, v0.16b
   1a114:	ldr	q6, [sp, #96]
   1a118:	subs	w20, w20, #0x1
   1a11c:	ldr	q2, [sp, #128]
   1a120:	mov	v16.16b, v6.16b
   1a124:	mov	v18.16b, v2.16b
   1a128:	b.ne	1a0c0 <__jnl_finite@GLIBC_2.17+0x670>  // b.any
   1a12c:	stp	x19, x22, [sp, #96]
   1a130:	ldr	q0, [sp, #96]
   1a134:	str	q2, [sp, #144]
   1a138:	str	q16, [sp, #176]
   1a13c:	bl	14e60 <__j0l_finite@GLIBC_2.17>
   1a140:	stp	x19, x22, [sp, #96]
   1a144:	str	q0, [sp, #128]
   1a148:	ldr	q0, [sp, #96]
   1a14c:	ldr	x22, [sp, #128]
   1a150:	ldr	x21, [sp, #136]
   1a154:	bl	173a0 <__j1l_finite@GLIBC_2.17>
   1a158:	str	q0, [sp, #96]
   1a15c:	ldp	x20, x19, [sp, #96]
   1a160:	and	x0, x21, #0x7fffffffffffffff
   1a164:	stp	x22, x0, [sp, #128]
   1a168:	ldr	q0, [sp, #128]
   1a16c:	and	x0, x19, #0x7fffffffffffffff
   1a170:	str	x0, [sp, #104]
   1a174:	ldr	q1, [sp, #96]
   1a178:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1a17c:	ldr	q2, [sp, #144]
   1a180:	tbnz	w0, #31, 1a1b8 <__jnl_finite@GLIBC_2.17+0x768>
   1a184:	stp	x22, x21, [sp, #96]
   1a188:	ldr	q0, [sp, #112]
   1a18c:	ldr	q1, [sp, #96]
   1a190:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a194:	ldr	q16, [sp, #176]
   1a198:	mov	v1.16b, v16.16b
   1a19c:	b	19bb4 <__jnl_finite@GLIBC_2.17+0x164>
   1a1a0:	mov	x20, #0x0                   	// #0
   1a1a4:	mov	x21, #0x0                   	// #0
   1a1a8:	b	19bc4 <__jnl_finite@GLIBC_2.17+0x174>
   1a1ac:	msr	fpcr, x25
   1a1b0:	ldp	x25, x26, [sp, #64]
   1a1b4:	b	19cf8 <__jnl_finite@GLIBC_2.17+0x2a8>
   1a1b8:	stp	x20, x19, [sp, #96]
   1a1bc:	ldr	q0, [sp, #112]
   1a1c0:	ldr	q1, [sp, #96]
   1a1c4:	str	q2, [sp, #128]
   1a1c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a1cc:	ldr	q2, [sp, #128]
   1a1d0:	mov	v1.16b, v2.16b
   1a1d4:	b	19bb4 <__jnl_finite@GLIBC_2.17+0x164>
   1a1d8:	msr	fpcr, x25
   1a1dc:	b	19bdc <__jnl_finite@GLIBC_2.17+0x18c>
   1a1e0:	ldr	q0, [sp, #192]
   1a1e4:	ldr	q1, [sp, #208]
   1a1e8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a1ec:	mov	v4.16b, v0.16b
   1a1f0:	b	19b80 <__jnl_finite@GLIBC_2.17+0x130>
   1a1f4:	ldr	q1, [sp, #192]
   1a1f8:	ldr	q0, [sp, #208]
   1a1fc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a200:	mov	v4.16b, v0.16b
   1a204:	b	19b80 <__jnl_finite@GLIBC_2.17+0x130>
   1a208:	ldp	x1, x0, [sp, #208]
   1a20c:	ldr	q1, [sp, #192]
   1a210:	eor	x0, x0, #0x8000000000000000
   1a214:	stp	x1, x0, [sp, #96]
   1a218:	ldr	q0, [sp, #96]
   1a21c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a220:	mov	v4.16b, v0.16b
   1a224:	b	19b80 <__jnl_finite@GLIBC_2.17+0x130>
   1a228:	add	w21, w20, #0x1
   1a22c:	lsl	w21, w21, #1
   1a230:	b	19e80 <__jnl_finite@GLIBC_2.17+0x430>
   1a234:	stp	x25, x26, [sp, #64]
   1a238:	stp	x27, x28, [sp, #80]
   1a23c:	bl	ba70 <__stack_chk_fail@plt>

000000000001a240 <__ynl_finite@GLIBC_2.17>:
   1a240:	stp	x29, x30, [sp, #-192]!
   1a244:	mov	x29, sp
   1a248:	stp	x23, x24, [sp, #48]
   1a24c:	adrp	x24, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1a250:	stp	x21, x22, [sp, #32]
   1a254:	mov	w22, w0
   1a258:	mov	w0, #0x7ffeffff            	// #2147418111
   1a25c:	str	q0, [sp, #96]
   1a260:	ldp	x21, x23, [sp, #96]
   1a264:	stp	x19, x20, [sp, #16]
   1a268:	ldr	x2, [x24, #4032]
   1a26c:	stp	x25, x26, [sp, #64]
   1a270:	ldr	x3, [x2]
   1a274:	str	x3, [sp, #184]
   1a278:	mov	x3, #0x0                   	// #0
   1a27c:	stp	x27, x28, [sp, #80]
   1a280:	ubfx	x25, x23, #32, #31
   1a284:	cmp	w25, w0
   1a288:	lsr	x19, x23, #32
   1a28c:	b.le	1a2a8 <__ynl_finite@GLIBC_2.17+0x68>
   1a290:	and	w2, w19, #0xffff
   1a294:	lsr	x0, x21, #32
   1a298:	orr	w2, w2, w21
   1a29c:	orr	w0, w0, w23
   1a2a0:	orr	w0, w2, w0
   1a2a4:	cbnz	w0, 1a508 <__ynl_finite@GLIBC_2.17+0x2c8>
   1a2a8:	movi	v1.2d, #0x0
   1a2ac:	stp	x21, x23, [sp, #96]
   1a2b0:	ldr	q0, [sp, #96]
   1a2b4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1a2b8:	cmp	w0, #0x0
   1a2bc:	b.le	1a4b0 <__ynl_finite@GLIBC_2.17+0x270>
   1a2c0:	cmp	w22, #0x0
   1a2c4:	b.lt	1a4f0 <__ynl_finite@GLIBC_2.17+0x2b0>  // b.tstop
   1a2c8:	mov	w0, #0x1                   	// #1
   1a2cc:	str	w0, [sp, #116]
   1a2d0:	b.eq	1a5c4 <__ynl_finite@GLIBC_2.17+0x384>  // b.none
   1a2d4:	mrs	x0, fpcr
   1a2d8:	str	w0, [sp, #124]
   1a2dc:	ands	w0, w0, #0xc00000
   1a2e0:	str	w0, [sp, #120]
   1a2e4:	b.ne	1a634 <__ynl_finite@GLIBC_2.17+0x3f4>  // b.any
   1a2e8:	cmp	w22, #0x1
   1a2ec:	b.eq	1a600 <__ynl_finite@GLIBC_2.17+0x3c0>  // b.none
   1a2f0:	mov	w0, #0x7ffeffff            	// #2147418111
   1a2f4:	mov	x28, #0x0                   	// #0
   1a2f8:	cmp	w25, w0
   1a2fc:	mov	x20, #0x0                   	// #0
   1a300:	b.gt	1a478 <__ynl_finite@GLIBC_2.17+0x238>
   1a304:	str	x21, [sp, #96]
   1a308:	mov	w0, #0x412cffff            	// #1093468159
   1a30c:	cmp	w25, w0
   1a310:	b.le	1a51c <__ynl_finite@GLIBC_2.17+0x2dc>
   1a314:	str	x23, [sp, #104]
   1a318:	add	x1, sp, #0xa0
   1a31c:	add	x0, sp, #0x90
   1a320:	and	w22, w22, #0x3
   1a324:	ldr	q0, [sp, #96]
   1a328:	bl	24048 <sincosf128@@GLIBC_2.27>
   1a32c:	cmp	w22, #0x2
   1a330:	b.eq	1a6b8 <__ynl_finite@GLIBC_2.17+0x478>  // b.none
   1a334:	cmp	w22, #0x3
   1a338:	b.eq	1a6cc <__ynl_finite@GLIBC_2.17+0x48c>  // b.none
   1a33c:	cmp	w22, #0x1
   1a340:	b.eq	1a6e0 <__ynl_finite@GLIBC_2.17+0x4a0>  // b.none
   1a344:	ldr	q0, [sp, #144]
   1a348:	ldr	q1, [sp, #160]
   1a34c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a350:	mov	v4.16b, v0.16b
   1a354:	stp	x21, x23, [sp, #96]
   1a358:	ldr	q0, [sp, #96]
   1a35c:	str	q4, [sp, #128]
   1a360:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   1a364:	str	q0, [sp, #96]
   1a368:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1a36c:	add	x0, x0, #0xb70
   1a370:	ldr	q4, [sp, #128]
   1a374:	ldr	q1, [x0]
   1a378:	mov	v0.16b, v4.16b
   1a37c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a380:	ldr	q2, [sp, #96]
   1a384:	mov	v1.16b, v2.16b
   1a388:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1a38c:	str	q0, [sp, #96]
   1a390:	ldp	x28, x20, [sp, #96]
   1a394:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a398:	add	x0, x0, #0x300
   1a39c:	and	x21, x20, #0x7fffffffffffffff
   1a3a0:	stp	x28, x21, [sp, #96]
   1a3a4:	mov	x22, x28
   1a3a8:	ldr	q1, [x0]
   1a3ac:	ldr	q0, [sp, #96]
   1a3b0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   1a3b4:	cbnz	w0, 1a3d8 <__ynl_finite@GLIBC_2.17+0x198>
   1a3b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a3bc:	add	x0, x0, #0x300
   1a3c0:	stp	x28, x21, [sp, #96]
   1a3c4:	ldr	q1, [x0]
   1a3c8:	ldr	q0, [sp, #96]
   1a3cc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1a3d0:	cmp	w0, #0x0
   1a3d4:	b.le	1a3ec <__ynl_finite@GLIBC_2.17+0x1ac>
   1a3d8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1a3dc:	ldr	x0, [x0, #3976]
   1a3e0:	mrs	x1, tpidr_el0
   1a3e4:	mov	w2, #0x22                  	// #34
   1a3e8:	str	w2, [x1, x0]
   1a3ec:	ldr	w0, [sp, #116]
   1a3f0:	cmp	w0, #0x1
   1a3f4:	b.eq	1a3fc <__ynl_finite@GLIBC_2.17+0x1bc>  // b.none
   1a3f8:	eor	x20, x20, #0x8000000000000000
   1a3fc:	ldr	w0, [sp, #120]
   1a400:	cbnz	w0, 1a700 <__ynl_finite@GLIBC_2.17+0x4c0>
   1a404:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a408:	add	x0, x0, #0x300
   1a40c:	stp	x22, x21, [sp, #96]
   1a410:	ldr	q1, [x0]
   1a414:	ldr	q0, [sp, #96]
   1a418:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   1a41c:	cbnz	w0, 1a478 <__ynl_finite@GLIBC_2.17+0x238>
   1a420:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a424:	add	x0, x0, #0x300
   1a428:	stp	x22, x21, [sp, #96]
   1a42c:	ldr	q1, [x0]
   1a430:	ldr	q0, [sp, #96]
   1a434:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1a438:	cmp	w0, #0x0
   1a43c:	b.le	1a478 <__ynl_finite@GLIBC_2.17+0x238>
   1a440:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a444:	add	x0, x0, #0x300
   1a448:	ldr	q0, [x0]
   1a44c:	tbz	x20, #63, 1a45c <__ynl_finite@GLIBC_2.17+0x21c>
   1a450:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1a454:	add	x0, x0, #0x1c0
   1a458:	ldr	q0, [x0]
   1a45c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a460:	add	x0, x0, #0x300
   1a464:	ldr	q1, [x0]
   1a468:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a46c:	str	q0, [sp, #96]
   1a470:	ldp	x28, x20, [sp, #96]
   1a474:	nop
   1a478:	ldr	x24, [x24, #4032]
   1a47c:	ldr	x1, [sp, #184]
   1a480:	ldr	x0, [x24]
   1a484:	eor	x0, x1, x0
   1a488:	cbnz	x0, 1a714 <__ynl_finite@GLIBC_2.17+0x4d4>
   1a48c:	stp	x28, x20, [sp, #96]
   1a490:	ldp	x19, x20, [sp, #16]
   1a494:	ldp	x21, x22, [sp, #32]
   1a498:	ldp	x23, x24, [sp, #48]
   1a49c:	ldp	x25, x26, [sp, #64]
   1a4a0:	ldp	x27, x28, [sp, #80]
   1a4a4:	ldr	q0, [sp, #96]
   1a4a8:	ldp	x29, x30, [sp], #192
   1a4ac:	ret
   1a4b0:	movi	v1.2d, #0x0
   1a4b4:	stp	x21, x23, [sp, #96]
   1a4b8:	ldr	q0, [sp, #96]
   1a4bc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1a4c0:	cbz	w0, 1a5dc <__ynl_finite@GLIBC_2.17+0x39c>
   1a4c4:	tbz	w19, #31, 1a2c0 <__ynl_finite@GLIBC_2.17+0x80>
   1a4c8:	movi	v1.2d, #0x0
   1a4cc:	stp	x21, x23, [sp, #96]
   1a4d0:	ldr	q0, [sp, #96]
   1a4d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a4d8:	mov	v1.16b, v0.16b
   1a4dc:	movi	v0.2d, #0x0
   1a4e0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1a4e4:	str	q0, [sp, #96]
   1a4e8:	ldp	x28, x20, [sp, #96]
   1a4ec:	b	1a478 <__ynl_finite@GLIBC_2.17+0x238>
   1a4f0:	neg	w22, w22
   1a4f4:	mov	w28, #0x1                   	// #1
   1a4f8:	ubfiz	w0, w22, #1, #1
   1a4fc:	sub	w0, w28, w0
   1a500:	str	w0, [sp, #116]
   1a504:	b	1a2d4 <__ynl_finite@GLIBC_2.17+0x94>
   1a508:	mov	v1.16b, v0.16b
   1a50c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1a510:	str	q0, [sp, #96]
   1a514:	ldp	x28, x20, [sp, #96]
   1a518:	b	1a478 <__ynl_finite@GLIBC_2.17+0x238>
   1a51c:	str	x23, [sp, #104]
   1a520:	ldr	q0, [sp, #96]
   1a524:	bl	160e0 <__y0l_finite@GLIBC_2.17>
   1a528:	stp	x21, x23, [sp, #96]
   1a52c:	str	q0, [sp, #128]
   1a530:	ldr	q0, [sp, #96]
   1a534:	ldp	x25, x26, [sp, #128]
   1a538:	bl	186a8 <__y1l_finite@GLIBC_2.17>
   1a53c:	str	q0, [sp, #96]
   1a540:	ldp	x19, x20, [sp, #96]
   1a544:	lsr	x0, x20, #32
   1a548:	and	w0, w0, #0xffff0000
   1a54c:	cmn	w0, #0x10, lsl #12
   1a550:	ccmp	w22, #0x1, #0x4, ne  // ne = any
   1a554:	b.le	1a70c <__ynl_finite@GLIBC_2.17+0x4cc>
   1a558:	mov	w27, #0x1                   	// #1
   1a55c:	b	1a564 <__ynl_finite@GLIBC_2.17+0x324>
   1a560:	mov	x20, x2
   1a564:	lsl	w0, w27, #1
   1a568:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1a56c:	stp	x21, x23, [sp, #96]
   1a570:	add	w27, w27, #0x1
   1a574:	ldr	q1, [sp, #96]
   1a578:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1a57c:	stp	x19, x20, [sp, #96]
   1a580:	ldr	q1, [sp, #96]
   1a584:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a588:	stp	x25, x26, [sp, #96]
   1a58c:	mov	x25, x19
   1a590:	ldr	q1, [sp, #96]
   1a594:	mov	x26, x20
   1a598:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a59c:	str	q0, [sp, #96]
   1a5a0:	ldp	x19, x2, [sp, #96]
   1a5a4:	lsr	x0, x2, #32
   1a5a8:	mov	x20, x2
   1a5ac:	and	w0, w0, #0xffff0000
   1a5b0:	mov	x28, x19
   1a5b4:	cmn	w0, #0x10, lsl #12
   1a5b8:	ccmp	w27, w22, #0x0, ne  // ne = any
   1a5bc:	b.lt	1a560 <__ynl_finite@GLIBC_2.17+0x320>  // b.tstop
   1a5c0:	b	1a394 <__ynl_finite@GLIBC_2.17+0x154>
   1a5c4:	stp	x21, x23, [sp, #96]
   1a5c8:	ldr	q0, [sp, #96]
   1a5cc:	bl	160e0 <__y0l_finite@GLIBC_2.17>
   1a5d0:	str	q0, [sp, #96]
   1a5d4:	ldp	x28, x20, [sp, #96]
   1a5d8:	b	1a478 <__ynl_finite@GLIBC_2.17+0x238>
   1a5dc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1a5e0:	add	x0, x0, #0xfd0
   1a5e4:	ldr	q0, [x0]
   1a5e8:	tbnz	w22, #31, 1a6a4 <__ynl_finite@GLIBC_2.17+0x464>
   1a5ec:	movi	v1.2d, #0x0
   1a5f0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1a5f4:	str	q0, [sp, #96]
   1a5f8:	ldp	x28, x20, [sp, #96]
   1a5fc:	b	1a478 <__ynl_finite@GLIBC_2.17+0x238>
   1a600:	stp	x21, x23, [sp, #96]
   1a604:	ldr	q0, [sp, #96]
   1a608:	bl	186a8 <__y1l_finite@GLIBC_2.17>
   1a60c:	str	q0, [sp, #96]
   1a610:	ldr	w0, [sp, #116]
   1a614:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1a618:	ldr	q1, [sp, #96]
   1a61c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a620:	str	q0, [sp, #96]
   1a624:	ldp	x28, x20, [sp, #96]
   1a628:	mov	x22, x28
   1a62c:	and	x21, x20, #0x7fffffffffffffff
   1a630:	b	1a404 <__ynl_finite@GLIBC_2.17+0x1c4>
   1a634:	ldr	w1, [sp, #124]
   1a638:	eor	w0, w0, w1
   1a63c:	msr	fpcr, x0
   1a640:	cmp	w22, #0x1
   1a644:	b.eq	1a668 <__ynl_finite@GLIBC_2.17+0x428>  // b.none
   1a648:	mov	w0, #0x7ffeffff            	// #2147418111
   1a64c:	cmp	w25, w0
   1a650:	b.le	1a304 <__ynl_finite@GLIBC_2.17+0xc4>
   1a654:	ldr	w0, [sp, #124]
   1a658:	msr	fpcr, x0
   1a65c:	mov	x28, #0x0                   	// #0
   1a660:	mov	x20, #0x0                   	// #0
   1a664:	b	1a478 <__ynl_finite@GLIBC_2.17+0x238>
   1a668:	stp	x21, x23, [sp, #96]
   1a66c:	ldr	q0, [sp, #96]
   1a670:	bl	186a8 <__y1l_finite@GLIBC_2.17>
   1a674:	str	q0, [sp, #96]
   1a678:	ldr	w0, [sp, #116]
   1a67c:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1a680:	ldr	q1, [sp, #96]
   1a684:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a688:	str	q0, [sp, #96]
   1a68c:	ldp	x28, x20, [sp, #96]
   1a690:	ldr	w0, [sp, #124]
   1a694:	msr	fpcr, x0
   1a698:	mov	x22, x28
   1a69c:	and	x21, x20, #0x7fffffffffffffff
   1a6a0:	b	1a404 <__ynl_finite@GLIBC_2.17+0x1c4>
   1a6a4:	tbz	w22, #0, 1a5ec <__ynl_finite@GLIBC_2.17+0x3ac>
   1a6a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a6ac:	add	x0, x0, #0x2f0
   1a6b0:	ldr	q0, [x0]
   1a6b4:	b	1a5ec <__ynl_finite@GLIBC_2.17+0x3ac>
   1a6b8:	ldr	q1, [sp, #144]
   1a6bc:	ldr	q0, [sp, #160]
   1a6c0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a6c4:	mov	v4.16b, v0.16b
   1a6c8:	b	1a354 <__ynl_finite@GLIBC_2.17+0x114>
   1a6cc:	ldr	q0, [sp, #144]
   1a6d0:	ldr	q1, [sp, #160]
   1a6d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1a6d8:	mov	v4.16b, v0.16b
   1a6dc:	b	1a354 <__ynl_finite@GLIBC_2.17+0x114>
   1a6e0:	ldp	x1, x0, [sp, #144]
   1a6e4:	ldr	q1, [sp, #160]
   1a6e8:	eor	x0, x0, #0x8000000000000000
   1a6ec:	stp	x1, x0, [sp, #96]
   1a6f0:	ldr	q0, [sp, #96]
   1a6f4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a6f8:	mov	v4.16b, v0.16b
   1a6fc:	b	1a354 <__ynl_finite@GLIBC_2.17+0x114>
   1a700:	ldr	w0, [sp, #124]
   1a704:	msr	fpcr, x0
   1a708:	b	1a404 <__ynl_finite@GLIBC_2.17+0x1c4>
   1a70c:	mov	x28, x19
   1a710:	b	1a394 <__ynl_finite@GLIBC_2.17+0x154>
   1a714:	bl	ba70 <__stack_chk_fail@plt>

000000000001a718 <__lgammal_r_finite@GLIBC_2.17>:
   1a718:	stp	x29, x30, [sp, #-144]!
   1a71c:	mov	x29, sp
   1a720:	stp	x21, x22, [sp, #32]
   1a724:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1a728:	mov	x22, x0
   1a72c:	stp	x19, x20, [sp, #16]
   1a730:	str	q0, [sp, #80]
   1a734:	ldp	x19, x20, [sp, #80]
   1a738:	stp	x23, x24, [sp, #48]
   1a73c:	ldr	x0, [x21, #4032]
   1a740:	ldr	x1, [x0]
   1a744:	str	x1, [sp, #136]
   1a748:	mov	x1, #0x0                   	// #0
   1a74c:	mov	w0, #0x1                   	// #1
   1a750:	str	w0, [x22]
   1a754:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a758:	add	x0, x0, #0x300
   1a75c:	and	x23, x20, #0x7fffffffffffffff
   1a760:	str	x23, [sp, #88]
   1a764:	ldr	q1, [x0]
   1a768:	ldr	q0, [sp, #80]
   1a76c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   1a770:	cbnz	w0, 1aa10 <__lgammal_r_finite@GLIBC_2.17+0x2f8>
   1a774:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a778:	add	x0, x0, #0x300
   1a77c:	stp	x19, x23, [sp, #80]
   1a780:	ldr	q1, [x0]
   1a784:	ldr	q0, [sp, #80]
   1a788:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1a78c:	cmp	w0, #0x0
   1a790:	b.gt	1aa10 <__lgammal_r_finite@GLIBC_2.17+0x2f8>
   1a794:	movi	v1.2d, #0x0
   1a798:	stp	x19, x20, [sp, #80]
   1a79c:	ldr	q0, [sp, #80]
   1a7a0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1a7a4:	cbnz	w0, 1a7b4 <__lgammal_r_finite@GLIBC_2.17+0x9c>
   1a7a8:	tbz	x20, #63, 1a7b4 <__lgammal_r_finite@GLIBC_2.17+0x9c>
   1a7ac:	mov	w0, #0xffffffff            	// #-1
   1a7b0:	str	w0, [x22]
   1a7b4:	movi	v1.2d, #0x0
   1a7b8:	stp	x19, x20, [sp, #80]
   1a7bc:	ldr	q0, [sp, #80]
   1a7c0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1a7c4:	str	x19, [sp, #80]
   1a7c8:	tbnz	w0, #31, 1a87c <__lgammal_r_finite@GLIBC_2.17+0x164>
   1a7cc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1a7d0:	add	x0, x0, #0x200
   1a7d4:	str	x20, [sp, #88]
   1a7d8:	ldr	q1, [x0]
   1a7dc:	ldr	q0, [sp, #80]
   1a7e0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1a7e4:	tbz	w0, #31, 1aa5c <__lgammal_r_finite@GLIBC_2.17+0x344>
   1a7e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a7ec:	add	x0, x0, #0x330
   1a7f0:	stp	x19, x20, [sp, #80]
   1a7f4:	ldr	q1, [x0]
   1a7f8:	ldr	q0, [sp, #80]
   1a7fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1a800:	bl	22250 <floorf128@@GLIBC_2.27>
   1a804:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   1a808:	cmp	w0, #0x7
   1a80c:	b.eq	1b5ec <__lgammal_r_finite@GLIBC_2.17+0xed4>  // b.none
   1a810:	b.gt	1af38 <__lgammal_r_finite@GLIBC_2.17+0x820>
   1a814:	cmp	w0, #0x3
   1a818:	b.eq	1b6f4 <__lgammal_r_finite@GLIBC_2.17+0xfdc>  // b.none
   1a81c:	b.le	1ade0 <__lgammal_r_finite@GLIBC_2.17+0x6c8>
   1a820:	cmp	w0, #0x5
   1a824:	b.eq	1ba34 <__lgammal_r_finite@GLIBC_2.17+0x131c>  // b.none
   1a828:	cmp	w0, #0x6
   1a82c:	b.ne	1acd0 <__lgammal_r_finite@GLIBC_2.17+0x5b8>  // b.any
   1a830:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1a834:	add	x0, x0, #0x680
   1a838:	stp	x19, x20, [sp, #80]
   1a83c:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1a840:	add	x20, x22, #0xa60
   1a844:	ldr	q1, [x0]
   1a848:	mov	x19, x20
   1a84c:	ldr	q0, [sp, #80]
   1a850:	add	x20, x20, #0xc20
   1a854:	add	x23, x19, #0xba0
   1a858:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a85c:	str	q0, [sp, #80]
   1a860:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1a864:	add	x0, x0, #0x690
   1a868:	ldr	q2, [x0]
   1a86c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1a870:	add	x0, x0, #0x6a0
   1a874:	ldr	q1, [x0]
   1a878:	b	1abdc <__lgammal_r_finite@GLIBC_2.17+0x4c4>
   1a87c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1a880:	add	x0, x0, #0x1d0
   1a884:	str	x20, [sp, #88]
   1a888:	ldr	q1, [x0]
   1a88c:	ldr	q0, [sp, #80]
   1a890:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1a894:	tbz	w0, #31, 1a8b8 <__lgammal_r_finite@GLIBC_2.17+0x1a0>
   1a898:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1a89c:	add	x0, x0, #0x1e0
   1a8a0:	stp	x19, x20, [sp, #80]
   1a8a4:	ldr	q1, [x0]
   1a8a8:	ldr	q0, [sp, #80]
   1a8ac:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1a8b0:	cmp	w0, #0x0
   1a8b4:	b.gt	1b454 <__lgammal_r_finite@GLIBC_2.17+0xd3c>
   1a8b8:	eor	x23, x20, #0x8000000000000000
   1a8bc:	stp	x19, x23, [sp, #80]
   1a8c0:	ldr	q0, [sp, #80]
   1a8c4:	bl	22250 <floorf128@@GLIBC_2.27>
   1a8c8:	stp	x19, x23, [sp, #80]
   1a8cc:	mov	v2.16b, v0.16b
   1a8d0:	mov	v1.16b, v0.16b
   1a8d4:	ldr	q0, [sp, #80]
   1a8d8:	str	q2, [sp, #80]
   1a8dc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1a8e0:	ldr	q2, [sp, #80]
   1a8e4:	cbz	w0, 1ac94 <__lgammal_r_finite@GLIBC_2.17+0x57c>
   1a8e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a8ec:	add	x0, x0, #0x330
   1a8f0:	mov	v0.16b, v2.16b
   1a8f4:	str	q2, [sp, #96]
   1a8f8:	ldr	q1, [x0]
   1a8fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a900:	str	q0, [sp, #80]
   1a904:	bl	22250 <floorf128@@GLIBC_2.27>
   1a908:	ldr	q1, [sp, #80]
   1a90c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1a910:	cmp	w0, #0x0
   1a914:	mov	w0, #0x1                   	// #1
   1a918:	cneg	w0, w0, eq  // eq = none
   1a91c:	str	w0, [x22]
   1a920:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1a924:	add	x0, x0, #0x1f0
   1a928:	stp	x19, x20, [sp, #80]
   1a92c:	ldr	q0, [sp, #80]
   1a930:	ldr	q1, [x0]
   1a934:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1a938:	str	x19, [sp, #80]
   1a93c:	cmp	w0, #0x0
   1a940:	ldr	q2, [sp, #96]
   1a944:	b.gt	1b438 <__lgammal_r_finite@GLIBC_2.17+0xd20>
   1a948:	str	x23, [sp, #88]
   1a94c:	mov	v1.16b, v2.16b
   1a950:	str	q2, [sp, #96]
   1a954:	ldr	q0, [sp, #80]
   1a958:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1a95c:	str	q0, [sp, #80]
   1a960:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a964:	add	x0, x0, #0x330
   1a968:	ldr	q1, [x0]
   1a96c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1a970:	cmp	w0, #0x0
   1a974:	ldr	q4, [sp, #80]
   1a978:	b.le	1a9a4 <__lgammal_r_finite@GLIBC_2.17+0x28c>
   1a97c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a980:	add	x0, x0, #0x2f0
   1a984:	ldr	q2, [sp, #96]
   1a988:	ldr	q1, [x0]
   1a98c:	mov	v0.16b, v2.16b
   1a990:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1a994:	stp	x19, x20, [sp, #80]
   1a998:	ldr	q1, [sp, #80]
   1a99c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1a9a0:	mov	v4.16b, v0.16b
   1a9a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a9a8:	add	x0, x0, #0xa40
   1a9ac:	mov	v0.16b, v4.16b
   1a9b0:	ldr	q1, [x0]
   1a9b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a9b8:	bl	23068 <sinf128@@GLIBC_2.27>
   1a9bc:	stp	x19, x23, [sp, #80]
   1a9c0:	ldr	q1, [sp, #80]
   1a9c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1a9c8:	stp	x19, x23, [sp, #80]
   1a9cc:	add	x0, sp, #0x84
   1a9d0:	str	q0, [sp, #96]
   1a9d4:	ldr	q0, [sp, #80]
   1a9d8:	bl	1a718 <__lgammal_r_finite@GLIBC_2.17>
   1a9dc:	str	q0, [sp, #80]
   1a9e0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1a9e4:	add	x0, x0, #0xa40
   1a9e8:	ldr	q1, [sp, #96]
   1a9ec:	ldr	q0, [x0]
   1a9f0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1a9f4:	bl	cf20 <logf128@@GLIBC_2.27>
   1a9f8:	ldr	q2, [sp, #80]
   1a9fc:	mov	v1.16b, v2.16b
   1aa00:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1aa04:	str	q0, [sp, #80]
   1aa08:	ldp	x23, x22, [sp, #80]
   1aa0c:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1aa10:	stp	x19, x20, [sp, #80]
   1aa14:	stp	x19, x20, [sp, #96]
   1aa18:	ldr	q1, [sp, #80]
   1aa1c:	ldr	q0, [sp, #96]
   1aa20:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1aa24:	str	q0, [sp, #80]
   1aa28:	ldp	x23, x22, [sp, #80]
   1aa2c:	ldr	x0, [x21, #4032]
   1aa30:	ldr	x1, [sp, #136]
   1aa34:	ldr	x0, [x0]
   1aa38:	eor	x0, x1, x0
   1aa3c:	cbnz	x0, 1c91c <__lgammal_r_finite@GLIBC_2.17+0x2204>
   1aa40:	stp	x23, x22, [sp, #80]
   1aa44:	ldp	x19, x20, [sp, #16]
   1aa48:	ldp	x21, x22, [sp, #32]
   1aa4c:	ldp	x23, x24, [sp, #48]
   1aa50:	ldr	q0, [sp, #80]
   1aa54:	ldp	x29, x30, [sp], #144
   1aa58:	ret
   1aa5c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1aa60:	add	x0, x0, #0xa00
   1aa64:	stp	x19, x20, [sp, #80]
   1aa68:	ldr	q1, [x0]
   1aa6c:	ldr	q0, [sp, #80]
   1aa70:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1aa74:	cmp	w0, #0x0
   1aa78:	b.gt	1b404 <__lgammal_r_finite@GLIBC_2.17+0xcec>
   1aa7c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1aa80:	add	x0, x0, #0xa10
   1aa84:	stp	x19, x20, [sp, #80]
   1aa88:	ldr	q1, [x0]
   1aa8c:	ldr	q0, [sp, #80]
   1aa90:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1aa94:	str	x19, [sp, #80]
   1aa98:	cmp	w0, #0x0
   1aa9c:	b.gt	1b5b8 <__lgammal_r_finite@GLIBC_2.17+0xea0>
   1aaa0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1aaa4:	add	x0, x0, #0xa20
   1aaa8:	str	x20, [sp, #88]
   1aaac:	ldr	q0, [x0]
   1aab0:	ldr	q1, [sp, #80]
   1aab4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1aab8:	stp	x19, x20, [sp, #80]
   1aabc:	str	q0, [sp, #112]
   1aac0:	ldr	q0, [sp, #80]
   1aac4:	bl	cf20 <logf128@@GLIBC_2.27>
   1aac8:	stp	x19, x20, [sp, #80]
   1aacc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1aad0:	add	x0, x0, #0x330
   1aad4:	str	q0, [sp, #96]
   1aad8:	ldr	q0, [sp, #80]
   1aadc:	ldr	q1, [x0]
   1aae0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1aae4:	ldr	q4, [sp, #96]
   1aae8:	mov	v1.16b, v4.16b
   1aaec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1aaf0:	ldr	q2, [sp, #112]
   1aaf4:	mov	v1.16b, v2.16b
   1aaf8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1aafc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ab00:	add	x0, x0, #0xa30
   1ab04:	stp	x19, x20, [sp, #80]
   1ab08:	str	q0, [sp, #96]
   1ab0c:	ldr	q1, [x0]
   1ab10:	ldr	q0, [sp, #80]
   1ab14:	ldp	x23, x22, [sp, #96]
   1ab18:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1ab1c:	cmp	w0, #0x0
   1ab20:	b.gt	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1ab24:	stp	x19, x20, [sp, #80]
   1ab28:	stp	x19, x20, [sp, #96]
   1ab2c:	ldr	q1, [sp, #80]
   1ab30:	ldr	q0, [sp, #96]
   1ab34:	str	x25, [sp, #64]
   1ab38:	adrp	x25, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1ab3c:	add	x25, x25, #0xb60
   1ab40:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ab44:	mov	v1.16b, v0.16b
   1ab48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1ab4c:	add	x0, x0, #0x2f0
   1ab50:	add	x24, x25, #0x370
   1ab54:	add	x25, x25, #0x2b0
   1ab58:	ldr	q0, [x0]
   1ab5c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ab60:	str	q0, [sp, #96]
   1ab64:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ab68:	add	x0, x0, #0xa40
   1ab6c:	ldr	q2, [x0]
   1ab70:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ab74:	add	x0, x0, #0xa50
   1ab78:	ldr	q1, [x0]
   1ab7c:	b	1ab84 <__lgammal_r_finite@GLIBC_2.17+0x46c>
   1ab80:	ldr	q2, [x24]
   1ab84:	ldr	q0, [sp, #96]
   1ab88:	sub	x24, x24, #0x10
   1ab8c:	str	q2, [sp, #80]
   1ab90:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ab94:	ldr	q2, [sp, #80]
   1ab98:	mov	v1.16b, v2.16b
   1ab9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1aba0:	cmp	x24, x25
   1aba4:	mov	v1.16b, v0.16b
   1aba8:	b.ne	1ab80 <__lgammal_r_finite@GLIBC_2.17+0x468>  // b.any
   1abac:	stp	x19, x20, [sp, #80]
   1abb0:	ldr	q1, [sp, #80]
   1abb4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1abb8:	stp	x23, x22, [sp, #80]
   1abbc:	mov	v1.16b, v0.16b
   1abc0:	ldr	q0, [sp, #80]
   1abc4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1abc8:	str	q0, [sp, #80]
   1abcc:	ldr	x25, [sp, #64]
   1abd0:	ldp	x23, x22, [sp, #80]
   1abd4:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1abd8:	ldr	q2, [x20]
   1abdc:	ldr	q0, [sp, #80]
   1abe0:	sub	x20, x20, #0x10
   1abe4:	str	q2, [sp, #96]
   1abe8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1abec:	ldr	q2, [sp, #96]
   1abf0:	mov	v1.16b, v2.16b
   1abf4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1abf8:	cmp	x20, x23
   1abfc:	mov	v1.16b, v0.16b
   1ac00:	b.ne	1abd8 <__lgammal_r_finite@GLIBC_2.17+0x4c0>  // b.any
   1ac04:	ldr	q0, [sp, #80]
   1ac08:	add	x20, x22, #0xa60
   1ac0c:	add	x19, x19, #0xcb0
   1ac10:	add	x20, x20, #0xc30
   1ac14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ac18:	str	q0, [sp, #112]
   1ac1c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ac20:	add	x0, x0, #0x6b0
   1ac24:	ldr	q0, [sp, #80]
   1ac28:	ldr	q1, [x0]
   1ac2c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ac30:	mov	v1.16b, v0.16b
   1ac34:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ac38:	add	x0, x0, #0x6c0
   1ac3c:	ldr	q2, [x0]
   1ac40:	b	1ac48 <__lgammal_r_finite@GLIBC_2.17+0x530>
   1ac44:	ldr	q2, [x19]
   1ac48:	ldr	q0, [sp, #80]
   1ac4c:	sub	x19, x19, #0x10
   1ac50:	str	q2, [sp, #96]
   1ac54:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ac58:	ldr	q2, [sp, #96]
   1ac5c:	mov	v1.16b, v2.16b
   1ac60:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ac64:	cmp	x19, x20
   1ac68:	mov	v1.16b, v0.16b
   1ac6c:	b.ne	1ac44 <__lgammal_r_finite@GLIBC_2.17+0x52c>  // b.any
   1ac70:	ldr	q0, [sp, #112]
   1ac74:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ac78:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ac7c:	add	x0, x0, #0x6d0
   1ac80:	ldr	q1, [x0]
   1ac84:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ac88:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ac8c:	add	x0, x0, #0x6e0
   1ac90:	b	1b298 <__lgammal_r_finite@GLIBC_2.17+0xb80>
   1ac94:	mov	v1.16b, v2.16b
   1ac98:	mov	v0.16b, v2.16b
   1ac9c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1aca0:	str	q0, [sp, #80]
   1aca4:	ldr	x0, [sp, #88]
   1aca8:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1acac:	add	x1, x1, #0x2f0
   1acb0:	and	x0, x0, #0x7fffffffffffffff
   1acb4:	str	x0, [sp, #88]
   1acb8:	ldr	q0, [x1]
   1acbc:	ldr	q1, [sp, #80]
   1acc0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1acc4:	str	q0, [sp, #80]
   1acc8:	ldp	x23, x22, [sp, #80]
   1accc:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1acd0:	cmp	w0, #0x4
   1acd4:	b.ne	1c0f8 <__lgammal_r_finite@GLIBC_2.17+0x19e0>  // b.any
   1acd8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1acdc:	add	x0, x0, #0x5a0
   1ace0:	stp	x19, x20, [sp, #80]
   1ace4:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ace8:	add	x20, x22, #0xa60
   1acec:	ldr	q1, [x0]
   1acf0:	mov	x19, x20
   1acf4:	ldr	q0, [sp, #80]
   1acf8:	add	x20, x20, #0x9c0
   1acfc:	add	x23, x19, #0x930
   1ad00:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ad04:	str	q0, [sp, #80]
   1ad08:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ad0c:	add	x0, x0, #0x5b0
   1ad10:	ldr	q2, [x0]
   1ad14:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ad18:	add	x0, x0, #0x5c0
   1ad1c:	ldr	q1, [x0]
   1ad20:	b	1ad28 <__lgammal_r_finite@GLIBC_2.17+0x610>
   1ad24:	ldr	q2, [x20]
   1ad28:	ldr	q0, [sp, #80]
   1ad2c:	sub	x20, x20, #0x10
   1ad30:	str	q2, [sp, #96]
   1ad34:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ad38:	ldr	q2, [sp, #96]
   1ad3c:	mov	v1.16b, v2.16b
   1ad40:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ad44:	cmp	x20, x23
   1ad48:	mov	v1.16b, v0.16b
   1ad4c:	b.ne	1ad24 <__lgammal_r_finite@GLIBC_2.17+0x60c>  // b.any
   1ad50:	ldr	q0, [sp, #80]
   1ad54:	add	x20, x22, #0xa60
   1ad58:	add	x19, x19, #0xa60
   1ad5c:	add	x20, x20, #0x9d0
   1ad60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ad64:	str	q0, [sp, #112]
   1ad68:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ad6c:	add	x0, x0, #0x5d0
   1ad70:	ldr	q0, [sp, #80]
   1ad74:	ldr	q1, [x0]
   1ad78:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ad7c:	mov	v1.16b, v0.16b
   1ad80:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ad84:	add	x0, x0, #0x5e0
   1ad88:	ldr	q2, [x0]
   1ad8c:	b	1ad94 <__lgammal_r_finite@GLIBC_2.17+0x67c>
   1ad90:	ldr	q2, [x19]
   1ad94:	ldr	q0, [sp, #80]
   1ad98:	sub	x19, x19, #0x10
   1ad9c:	str	q2, [sp, #96]
   1ada0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ada4:	ldr	q2, [sp, #96]
   1ada8:	mov	v1.16b, v2.16b
   1adac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1adb0:	cmp	x19, x20
   1adb4:	mov	v1.16b, v0.16b
   1adb8:	b.ne	1ad90 <__lgammal_r_finite@GLIBC_2.17+0x678>  // b.any
   1adbc:	ldr	q0, [sp, #112]
   1adc0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1adc4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1adc8:	add	x0, x0, #0x5f0
   1adcc:	ldr	q1, [x0]
   1add0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1add4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1add8:	add	x0, x0, #0x600
   1addc:	b	1b298 <__lgammal_r_finite@GLIBC_2.17+0xb80>
   1ade0:	cmp	w0, #0x1
   1ade4:	b.eq	1bb3c <__lgammal_r_finite@GLIBC_2.17+0x1424>  // b.none
   1ade8:	cmp	w0, #0x2
   1adec:	b.ne	1b2ac <__lgammal_r_finite@GLIBC_2.17+0xb94>  // b.any
   1adf0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1adf4:	add	x0, x0, #0x470
   1adf8:	stp	x19, x20, [sp, #80]
   1adfc:	ldr	q1, [x0]
   1ae00:	ldr	q0, [sp, #80]
   1ae04:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1ae08:	str	x19, [sp, #80]
   1ae0c:	tbnz	w0, #31, 1b470 <__lgammal_r_finite@GLIBC_2.17+0xd58>
   1ae10:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ae14:	add	x0, x0, #0x480
   1ae18:	str	x20, [sp, #88]
   1ae1c:	ldr	q1, [x0]
   1ae20:	ldr	q0, [sp, #80]
   1ae24:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1ae28:	str	x19, [sp, #80]
   1ae2c:	tbz	w0, #31, 1c104 <__lgammal_r_finite@GLIBC_2.17+0x19ec>
   1ae30:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ae34:	add	x0, x0, #0x490
   1ae38:	str	x20, [sp, #88]
   1ae3c:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ae40:	add	x20, x22, #0xa60
   1ae44:	ldr	q1, [x0]
   1ae48:	mov	x19, x20
   1ae4c:	ldr	q0, [sp, #80]
   1ae50:	add	x20, x20, #0x3d0
   1ae54:	add	x23, x19, #0x350
   1ae58:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ae5c:	str	q0, [sp, #80]
   1ae60:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ae64:	add	x0, x0, #0x3d0
   1ae68:	ldr	q2, [x0]
   1ae6c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ae70:	add	x0, x0, #0x370
   1ae74:	ldr	q1, [x0]
   1ae78:	b	1ae80 <__lgammal_r_finite@GLIBC_2.17+0x768>
   1ae7c:	ldr	q2, [x20]
   1ae80:	ldr	q0, [sp, #80]
   1ae84:	sub	x20, x20, #0x10
   1ae88:	str	q2, [sp, #96]
   1ae8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ae90:	ldr	q2, [sp, #96]
   1ae94:	mov	v1.16b, v2.16b
   1ae98:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ae9c:	cmp	x20, x23
   1aea0:	mov	v1.16b, v0.16b
   1aea4:	b.ne	1ae7c <__lgammal_r_finite@GLIBC_2.17+0x764>  // b.any
   1aea8:	ldr	q0, [sp, #80]
   1aeac:	add	x20, x22, #0xa60
   1aeb0:	add	x19, x19, #0x460
   1aeb4:	add	x20, x20, #0x3e0
   1aeb8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1aebc:	str	q0, [sp, #112]
   1aec0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1aec4:	add	x0, x0, #0x380
   1aec8:	ldr	q0, [sp, #80]
   1aecc:	ldr	q1, [x0]
   1aed0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1aed4:	mov	v1.16b, v0.16b
   1aed8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1aedc:	add	x0, x0, #0x3e0
   1aee0:	ldr	q2, [x0]
   1aee4:	b	1aeec <__lgammal_r_finite@GLIBC_2.17+0x7d4>
   1aee8:	ldr	q2, [x19]
   1aeec:	ldr	q0, [sp, #80]
   1aef0:	sub	x19, x19, #0x10
   1aef4:	str	q2, [sp, #96]
   1aef8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1aefc:	ldr	q2, [sp, #96]
   1af00:	mov	v1.16b, v2.16b
   1af04:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1af08:	cmp	x19, x20
   1af0c:	mov	v1.16b, v0.16b
   1af10:	b.ne	1aee8 <__lgammal_r_finite@GLIBC_2.17+0x7d0>  // b.any
   1af14:	ldr	q0, [sp, #112]
   1af18:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1af1c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1af20:	add	x0, x0, #0x390
   1af24:	ldr	q1, [x0]
   1af28:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1af2c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1af30:	add	x0, x0, #0x3a0
   1af34:	b	1b59c <__lgammal_r_finite@GLIBC_2.17+0xe84>
   1af38:	cmp	w0, #0xb
   1af3c:	b.eq	1b924 <__lgammal_r_finite@GLIBC_2.17+0x120c>  // b.none
   1af40:	b.le	1b064 <__lgammal_r_finite@GLIBC_2.17+0x94c>
   1af44:	cmp	w0, #0xc
   1af48:	b.eq	1bc94 <__lgammal_r_finite@GLIBC_2.17+0x157c>  // b.none
   1af4c:	cmp	w0, #0xd
   1af50:	b.ne	1c0f8 <__lgammal_r_finite@GLIBC_2.17+0x19e0>  // b.any
   1af54:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1af58:	add	x0, x0, #0x990
   1af5c:	stp	x19, x20, [sp, #80]
   1af60:	ldr	q1, [x0]
   1af64:	ldr	q0, [sp, #80]
   1af68:	str	x25, [sp, #64]
   1af6c:	adrp	x25, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1af70:	add	x20, x25, #0xb60
   1af74:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1af78:	mov	x19, x20
   1af7c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1af80:	add	x0, x0, #0x9a0
   1af84:	add	x20, x20, #0x230
   1af88:	add	x22, x19, #0x1c0
   1af8c:	str	q0, [sp, #80]
   1af90:	ldr	q2, [x0]
   1af94:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1af98:	add	x0, x0, #0x9b0
   1af9c:	ldr	q1, [x0]
   1afa0:	b	1afa8 <__lgammal_r_finite@GLIBC_2.17+0x890>
   1afa4:	ldr	q2, [x20]
   1afa8:	ldr	q0, [sp, #80]
   1afac:	sub	x20, x20, #0x10
   1afb0:	str	q2, [sp, #96]
   1afb4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1afb8:	ldr	q2, [sp, #96]
   1afbc:	mov	v1.16b, v2.16b
   1afc0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1afc4:	cmp	x20, x22
   1afc8:	mov	v1.16b, v0.16b
   1afcc:	b.ne	1afa4 <__lgammal_r_finite@GLIBC_2.17+0x88c>  // b.any
   1afd0:	ldr	q0, [sp, #80]
   1afd4:	add	x25, x25, #0xb60
   1afd8:	add	x19, x19, #0x2a0
   1afdc:	add	x25, x25, #0x240
   1afe0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1afe4:	str	q0, [sp, #112]
   1afe8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1afec:	add	x0, x0, #0x9c0
   1aff0:	ldr	q0, [sp, #80]
   1aff4:	ldr	q1, [x0]
   1aff8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1affc:	mov	v1.16b, v0.16b
   1b000:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b004:	add	x0, x0, #0x9d0
   1b008:	ldr	q2, [x0]
   1b00c:	b	1b014 <__lgammal_r_finite@GLIBC_2.17+0x8fc>
   1b010:	ldr	q2, [x19]
   1b014:	ldr	q0, [sp, #80]
   1b018:	sub	x19, x19, #0x10
   1b01c:	str	q2, [sp, #96]
   1b020:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b024:	ldr	q2, [sp, #96]
   1b028:	mov	v1.16b, v2.16b
   1b02c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b030:	cmp	x19, x25
   1b034:	mov	v1.16b, v0.16b
   1b038:	b.ne	1b010 <__lgammal_r_finite@GLIBC_2.17+0x8f8>  // b.any
   1b03c:	ldr	q0, [sp, #112]
   1b040:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1b044:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b048:	add	x0, x0, #0x9e0
   1b04c:	ldr	q1, [x0]
   1b050:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b054:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b058:	add	x0, x0, #0x9f0
   1b05c:	ldr	q1, [x0]
   1b060:	b	1abc4 <__lgammal_r_finite@GLIBC_2.17+0x4ac>
   1b064:	cmp	w0, #0x9
   1b068:	b.eq	1b81c <__lgammal_r_finite@GLIBC_2.17+0x1104>  // b.none
   1b06c:	cmp	w0, #0xa
   1b070:	b.ne	1b188 <__lgammal_r_finite@GLIBC_2.17+0xa70>  // b.any
   1b074:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b078:	add	x0, x0, #0x840
   1b07c:	stp	x19, x20, [sp, #80]
   1b080:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b084:	add	x19, x22, #0xa60
   1b088:	ldr	q1, [x0]
   1b08c:	ldr	q0, [sp, #80]
   1b090:	str	x25, [sp, #64]
   1b094:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b098:	str	q0, [sp, #80]
   1b09c:	mov	x0, #0x1050                	// #4176
   1b0a0:	add	x20, x19, x0
   1b0a4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b0a8:	add	x0, x0, #0x850
   1b0ac:	add	x19, x19, #0xfe0
   1b0b0:	ldr	q2, [x0]
   1b0b4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b0b8:	add	x0, x0, #0x860
   1b0bc:	ldr	q1, [x0]
   1b0c0:	b	1b0c8 <__lgammal_r_finite@GLIBC_2.17+0x9b0>
   1b0c4:	ldr	q2, [x20]
   1b0c8:	ldr	q0, [sp, #80]
   1b0cc:	sub	x20, x20, #0x10
   1b0d0:	str	q2, [sp, #96]
   1b0d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b0d8:	ldr	q2, [sp, #96]
   1b0dc:	mov	v1.16b, v2.16b
   1b0e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b0e4:	cmp	x20, x19
   1b0e8:	mov	v1.16b, v0.16b
   1b0ec:	b.ne	1b0c4 <__lgammal_r_finite@GLIBC_2.17+0x9ac>  // b.any
   1b0f0:	ldr	q0, [sp, #80]
   1b0f4:	adrp	x25, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1b0f8:	add	x25, x25, #0xb60
   1b0fc:	sub	x19, x25, #0x30
   1b100:	sub	x25, x25, #0xa0
   1b104:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b108:	str	q0, [sp, #112]
   1b10c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b110:	add	x0, x0, #0x870
   1b114:	ldr	q0, [sp, #80]
   1b118:	ldr	q1, [x0]
   1b11c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b120:	mov	v1.16b, v0.16b
   1b124:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b128:	add	x0, x0, #0x880
   1b12c:	ldr	q2, [x0]
   1b130:	b	1b138 <__lgammal_r_finite@GLIBC_2.17+0xa20>
   1b134:	ldr	q2, [x19]
   1b138:	ldr	q0, [sp, #80]
   1b13c:	sub	x19, x19, #0x10
   1b140:	str	q2, [sp, #96]
   1b144:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b148:	ldr	q2, [sp, #96]
   1b14c:	mov	v1.16b, v2.16b
   1b150:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b154:	cmp	x19, x25
   1b158:	mov	v1.16b, v0.16b
   1b15c:	b.ne	1b134 <__lgammal_r_finite@GLIBC_2.17+0xa1c>  // b.any
   1b160:	ldr	q0, [sp, #112]
   1b164:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1b168:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b16c:	add	x0, x0, #0x890
   1b170:	ldr	q1, [x0]
   1b174:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b178:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b17c:	add	x0, x0, #0x8a0
   1b180:	ldr	q1, [x0]
   1b184:	b	1abc4 <__lgammal_r_finite@GLIBC_2.17+0x4ac>
   1b188:	cmp	w0, #0x8
   1b18c:	b.ne	1c0f8 <__lgammal_r_finite@GLIBC_2.17+0x19e0>  // b.any
   1b190:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b194:	add	x0, x0, #0x760
   1b198:	stp	x19, x20, [sp, #80]
   1b19c:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b1a0:	add	x20, x22, #0xa60
   1b1a4:	ldr	q1, [x0]
   1b1a8:	mov	x19, x20
   1b1ac:	ldr	q0, [sp, #80]
   1b1b0:	add	x20, x20, #0xe50
   1b1b4:	add	x23, x19, #0xdd0
   1b1b8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b1bc:	str	q0, [sp, #80]
   1b1c0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b1c4:	add	x0, x0, #0x770
   1b1c8:	ldr	q2, [x0]
   1b1cc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b1d0:	add	x0, x0, #0x780
   1b1d4:	ldr	q1, [x0]
   1b1d8:	b	1b1e0 <__lgammal_r_finite@GLIBC_2.17+0xac8>
   1b1dc:	ldr	q2, [x20]
   1b1e0:	ldr	q0, [sp, #80]
   1b1e4:	sub	x20, x20, #0x10
   1b1e8:	str	q2, [sp, #96]
   1b1ec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b1f0:	ldr	q2, [sp, #96]
   1b1f4:	mov	v1.16b, v2.16b
   1b1f8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b1fc:	cmp	x20, x23
   1b200:	mov	v1.16b, v0.16b
   1b204:	b.ne	1b1dc <__lgammal_r_finite@GLIBC_2.17+0xac4>  // b.any
   1b208:	ldr	q0, [sp, #80]
   1b20c:	add	x20, x22, #0xa60
   1b210:	add	x19, x19, #0xed0
   1b214:	add	x20, x20, #0xe60
   1b218:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b21c:	str	q0, [sp, #112]
   1b220:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b224:	add	x0, x0, #0x790
   1b228:	ldr	q0, [sp, #80]
   1b22c:	ldr	q1, [x0]
   1b230:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b234:	mov	v1.16b, v0.16b
   1b238:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b23c:	add	x0, x0, #0x7a0
   1b240:	ldr	q2, [x0]
   1b244:	b	1b24c <__lgammal_r_finite@GLIBC_2.17+0xb34>
   1b248:	ldr	q2, [x19]
   1b24c:	ldr	q0, [sp, #80]
   1b250:	sub	x19, x19, #0x10
   1b254:	str	q2, [sp, #96]
   1b258:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b25c:	ldr	q2, [sp, #96]
   1b260:	mov	v1.16b, v2.16b
   1b264:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b268:	cmp	x19, x20
   1b26c:	mov	v1.16b, v0.16b
   1b270:	b.ne	1b248 <__lgammal_r_finite@GLIBC_2.17+0xb30>  // b.any
   1b274:	ldr	q0, [sp, #112]
   1b278:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1b27c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b280:	add	x0, x0, #0x7b0
   1b284:	ldr	q1, [x0]
   1b288:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b28c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b290:	add	x0, x0, #0x7c0
   1b294:	nop
   1b298:	ldr	q1, [x0]
   1b29c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b2a0:	str	q0, [sp, #80]
   1b2a4:	ldp	x23, x22, [sp, #80]
   1b2a8:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1b2ac:	cbnz	w0, 1c0f8 <__lgammal_r_finite@GLIBC_2.17+0x19e0>
   1b2b0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b2b4:	add	x0, x0, #0x210
   1b2b8:	stp	x19, x20, [sp, #80]
   1b2bc:	ldr	q1, [x0]
   1b2c0:	ldr	q0, [sp, #80]
   1b2c4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1b2c8:	tbnz	w0, #31, 1b5b0 <__lgammal_r_finite@GLIBC_2.17+0xe98>
   1b2cc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1b2d0:	add	x0, x0, #0xb80
   1b2d4:	stp	x19, x20, [sp, #80]
   1b2d8:	ldr	q1, [x0]
   1b2dc:	ldr	q0, [sp, #80]
   1b2e0:	str	x25, [sp, #64]
   1b2e4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1b2e8:	cmp	w0, #0x0
   1b2ec:	b.gt	1bfc4 <__lgammal_r_finite@GLIBC_2.17+0x18ac>
   1b2f0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b2f4:	add	x0, x0, #0x220
   1b2f8:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b2fc:	add	x24, x22, #0xa60
   1b300:	mov	x23, x24
   1b304:	add	x24, x24, #0x70
   1b308:	ldr	q2, [x0]
   1b30c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b310:	add	x0, x0, #0x230
   1b314:	sub	x25, x23, #0x10
   1b318:	ldr	q1, [x0]
   1b31c:	b	1b324 <__lgammal_r_finite@GLIBC_2.17+0xc0c>
   1b320:	ldr	q2, [x24]
   1b324:	stp	x19, x20, [sp, #80]
   1b328:	sub	x24, x24, #0x10
   1b32c:	ldr	q0, [sp, #80]
   1b330:	str	q2, [sp, #96]
   1b334:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b338:	ldr	q2, [sp, #96]
   1b33c:	mov	v1.16b, v2.16b
   1b340:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b344:	cmp	x24, x25
   1b348:	mov	v1.16b, v0.16b
   1b34c:	b.ne	1b320 <__lgammal_r_finite@GLIBC_2.17+0xc08>  // b.any
   1b350:	stp	x19, x20, [sp, #80]
   1b354:	add	x22, x22, #0xa60
   1b358:	add	x23, x23, #0xf0
   1b35c:	ldr	q0, [sp, #80]
   1b360:	add	x22, x22, #0x80
   1b364:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b368:	stp	x19, x20, [sp, #80]
   1b36c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b370:	add	x0, x0, #0x240
   1b374:	str	q0, [sp, #112]
   1b378:	ldr	q0, [sp, #80]
   1b37c:	ldr	q1, [x0]
   1b380:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b384:	mov	v1.16b, v0.16b
   1b388:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b38c:	add	x0, x0, #0x250
   1b390:	ldr	q2, [x0]
   1b394:	b	1b39c <__lgammal_r_finite@GLIBC_2.17+0xc84>
   1b398:	ldr	q2, [x23]
   1b39c:	stp	x19, x20, [sp, #80]
   1b3a0:	sub	x23, x23, #0x10
   1b3a4:	ldr	q0, [sp, #80]
   1b3a8:	str	q2, [sp, #96]
   1b3ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b3b0:	ldr	q2, [sp, #96]
   1b3b4:	mov	v1.16b, v2.16b
   1b3b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b3bc:	cmp	x23, x22
   1b3c0:	mov	v1.16b, v0.16b
   1b3c4:	b.ne	1b398 <__lgammal_r_finite@GLIBC_2.17+0xc80>  // b.any
   1b3c8:	ldr	q0, [sp, #112]
   1b3cc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1b3d0:	mov	v2.16b, v0.16b
   1b3d4:	stp	x19, x20, [sp, #80]
   1b3d8:	ldr	q0, [sp, #80]
   1b3dc:	str	q2, [sp, #96]
   1b3e0:	bl	cf20 <logf128@@GLIBC_2.27>
   1b3e4:	mov	v1.16b, v0.16b
   1b3e8:	ldr	q2, [sp, #96]
   1b3ec:	mov	v0.16b, v2.16b
   1b3f0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b3f4:	str	q0, [sp, #80]
   1b3f8:	ldr	x25, [sp, #64]
   1b3fc:	ldp	x23, x22, [sp, #80]
   1b400:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1b404:	ldr	w0, [x22]
   1b408:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1b40c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1b410:	add	x0, x0, #0x300
   1b414:	ldr	q1, [x0]
   1b418:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b41c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1b420:	add	x0, x0, #0x300
   1b424:	ldr	q1, [x0]
   1b428:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b42c:	str	q0, [sp, #80]
   1b430:	ldp	x23, x22, [sp, #80]
   1b434:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1b438:	str	x23, [sp, #88]
   1b43c:	ldr	q0, [sp, #80]
   1b440:	bl	cf20 <logf128@@GLIBC_2.27>
   1b444:	str	q0, [sp, #80]
   1b448:	ldp	x23, x22, [sp, #80]
   1b44c:	eor	x22, x22, #0x8000000000000000
   1b450:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1b454:	stp	x19, x20, [sp, #80]
   1b458:	mov	x0, x22
   1b45c:	ldr	q0, [sp, #80]
   1b460:	bl	26258 <ldexpf128@@GLIBC_2.27+0x878>
   1b464:	str	q0, [sp, #80]
   1b468:	ldp	x23, x22, [sp, #80]
   1b46c:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1b470:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b474:	add	x0, x0, #0x460
   1b478:	str	x20, [sp, #88]
   1b47c:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b480:	add	x20, x22, #0xa60
   1b484:	ldr	q1, [x0]
   1b488:	mov	x19, x20
   1b48c:	ldr	q0, [sp, #80]
   1b490:	add	x20, x20, #0x2b0
   1b494:	add	x23, x19, #0x230
   1b498:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b49c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b4a0:	add	x0, x0, #0x2e0
   1b4a4:	ldr	q1, [x0]
   1b4a8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b4ac:	str	q0, [sp, #80]
   1b4b0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b4b4:	add	x0, x0, #0x2f0
   1b4b8:	ldr	q4, [x0]
   1b4bc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b4c0:	add	x0, x0, #0x300
   1b4c4:	ldr	q2, [x0]
   1b4c8:	b	1b4d0 <__lgammal_r_finite@GLIBC_2.17+0xdb8>
   1b4cc:	ldr	q4, [x20]
   1b4d0:	ldr	q0, [sp, #80]
   1b4d4:	mov	v1.16b, v2.16b
   1b4d8:	str	q4, [sp, #96]
   1b4dc:	sub	x20, x20, #0x10
   1b4e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b4e4:	ldr	q4, [sp, #96]
   1b4e8:	mov	v1.16b, v4.16b
   1b4ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b4f0:	cmp	x20, x23
   1b4f4:	mov	v2.16b, v0.16b
   1b4f8:	b.ne	1b4cc <__lgammal_r_finite@GLIBC_2.17+0xdb4>  // b.any
   1b4fc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b500:	add	x0, x0, #0x310
   1b504:	str	q0, [sp, #96]
   1b508:	add	x20, x22, #0xa60
   1b50c:	ldr	q0, [sp, #80]
   1b510:	add	x19, x19, #0x340
   1b514:	ldr	q1, [x0]
   1b518:	add	x20, x20, #0x2c0
   1b51c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b520:	mov	v1.16b, v0.16b
   1b524:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b528:	add	x0, x0, #0x320
   1b52c:	ldr	q2, [sp, #96]
   1b530:	ldr	q4, [x0]
   1b534:	b	1b53c <__lgammal_r_finite@GLIBC_2.17+0xe24>
   1b538:	ldr	q4, [x19]
   1b53c:	ldr	q0, [sp, #80]
   1b540:	sub	x19, x19, #0x10
   1b544:	str	q2, [sp, #96]
   1b548:	str	q4, [sp, #112]
   1b54c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b550:	ldr	q4, [sp, #112]
   1b554:	mov	v1.16b, v4.16b
   1b558:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b55c:	cmp	x19, x20
   1b560:	mov	v1.16b, v0.16b
   1b564:	ldr	q2, [sp, #96]
   1b568:	b.ne	1b538 <__lgammal_r_finite@GLIBC_2.17+0xe20>  // b.any
   1b56c:	mov	v0.16b, v2.16b
   1b570:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1b574:	ldr	q1, [sp, #80]
   1b578:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b57c:	ldr	q1, [sp, #80]
   1b580:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b584:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b588:	add	x0, x0, #0x330
   1b58c:	ldr	q1, [x0]
   1b590:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b594:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b598:	add	x0, x0, #0x340
   1b59c:	ldr	q1, [x0]
   1b5a0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b5a4:	str	q0, [sp, #80]
   1b5a8:	ldp	x23, x22, [sp, #80]
   1b5ac:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1b5b0:	stp	x19, x20, [sp, #80]
   1b5b4:	b	1b43c <__lgammal_r_finite@GLIBC_2.17+0xd24>
   1b5b8:	str	x20, [sp, #88]
   1b5bc:	ldr	q0, [sp, #80]
   1b5c0:	bl	cf20 <logf128@@GLIBC_2.27>
   1b5c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1b5c8:	add	x0, x0, #0x2f0
   1b5cc:	ldr	q1, [x0]
   1b5d0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b5d4:	stp	x19, x20, [sp, #80]
   1b5d8:	ldr	q1, [sp, #80]
   1b5dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b5e0:	str	q0, [sp, #80]
   1b5e4:	ldp	x23, x22, [sp, #80]
   1b5e8:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1b5ec:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b5f0:	add	x0, x0, #0x6f0
   1b5f4:	stp	x19, x20, [sp, #80]
   1b5f8:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b5fc:	add	x20, x22, #0xa60
   1b600:	ldr	q1, [x0]
   1b604:	mov	x19, x20
   1b608:	ldr	q0, [sp, #80]
   1b60c:	add	x20, x20, #0xd40
   1b610:	add	x23, x19, #0xcc0
   1b614:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b618:	str	q0, [sp, #80]
   1b61c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b620:	add	x0, x0, #0x700
   1b624:	ldr	q2, [x0]
   1b628:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b62c:	add	x0, x0, #0x710
   1b630:	ldr	q1, [x0]
   1b634:	b	1b63c <__lgammal_r_finite@GLIBC_2.17+0xf24>
   1b638:	ldr	q2, [x20]
   1b63c:	ldr	q0, [sp, #80]
   1b640:	sub	x20, x20, #0x10
   1b644:	str	q2, [sp, #96]
   1b648:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b64c:	ldr	q2, [sp, #96]
   1b650:	mov	v1.16b, v2.16b
   1b654:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b658:	cmp	x20, x23
   1b65c:	mov	v1.16b, v0.16b
   1b660:	b.ne	1b638 <__lgammal_r_finite@GLIBC_2.17+0xf20>  // b.any
   1b664:	ldr	q0, [sp, #80]
   1b668:	add	x20, x22, #0xa60
   1b66c:	add	x19, x19, #0xdc0
   1b670:	add	x20, x20, #0xd50
   1b674:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b678:	str	q0, [sp, #112]
   1b67c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b680:	add	x0, x0, #0x720
   1b684:	ldr	q0, [sp, #80]
   1b688:	ldr	q1, [x0]
   1b68c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b690:	mov	v1.16b, v0.16b
   1b694:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b698:	add	x0, x0, #0x730
   1b69c:	ldr	q2, [x0]
   1b6a0:	b	1b6a8 <__lgammal_r_finite@GLIBC_2.17+0xf90>
   1b6a4:	ldr	q2, [x19]
   1b6a8:	ldr	q0, [sp, #80]
   1b6ac:	sub	x19, x19, #0x10
   1b6b0:	str	q2, [sp, #96]
   1b6b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b6b8:	ldr	q2, [sp, #96]
   1b6bc:	mov	v1.16b, v2.16b
   1b6c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b6c4:	cmp	x19, x20
   1b6c8:	mov	v1.16b, v0.16b
   1b6cc:	b.ne	1b6a4 <__lgammal_r_finite@GLIBC_2.17+0xf8c>  // b.any
   1b6d0:	ldr	q0, [sp, #112]
   1b6d4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1b6d8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b6dc:	add	x0, x0, #0x740
   1b6e0:	ldr	q1, [x0]
   1b6e4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b6e8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b6ec:	add	x0, x0, #0x750
   1b6f0:	b	1b298 <__lgammal_r_finite@GLIBC_2.17+0xb80>
   1b6f4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b6f8:	add	x0, x0, #0x500
   1b6fc:	stp	x19, x20, [sp, #80]
   1b700:	ldr	q1, [x0]
   1b704:	ldr	q0, [sp, #80]
   1b708:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1b70c:	str	x19, [sp, #80]
   1b710:	tbz	w0, #31, 1bebc <__lgammal_r_finite@GLIBC_2.17+0x17a4>
   1b714:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b718:	add	x0, x0, #0x4b0
   1b71c:	str	x20, [sp, #88]
   1b720:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b724:	add	x20, x22, #0xa60
   1b728:	ldr	q1, [x0]
   1b72c:	mov	x19, x20
   1b730:	ldr	q0, [sp, #80]
   1b734:	add	x20, x20, #0x750
   1b738:	add	x23, x19, #0x6d0
   1b73c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b740:	str	q0, [sp, #80]
   1b744:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b748:	add	x0, x0, #0x510
   1b74c:	ldr	q2, [x0]
   1b750:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b754:	add	x0, x0, #0x4c0
   1b758:	ldr	q1, [x0]
   1b75c:	b	1b764 <__lgammal_r_finite@GLIBC_2.17+0x104c>
   1b760:	ldr	q2, [x20]
   1b764:	ldr	q0, [sp, #80]
   1b768:	sub	x20, x20, #0x10
   1b76c:	str	q2, [sp, #96]
   1b770:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b774:	ldr	q2, [sp, #96]
   1b778:	mov	v1.16b, v2.16b
   1b77c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b780:	cmp	x20, x23
   1b784:	mov	v1.16b, v0.16b
   1b788:	b.ne	1b760 <__lgammal_r_finite@GLIBC_2.17+0x1048>  // b.any
   1b78c:	ldr	q0, [sp, #80]
   1b790:	add	x20, x22, #0xa60
   1b794:	add	x19, x19, #0x7e0
   1b798:	add	x20, x20, #0x760
   1b79c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b7a0:	str	q0, [sp, #112]
   1b7a4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b7a8:	add	x0, x0, #0x4d0
   1b7ac:	ldr	q0, [sp, #80]
   1b7b0:	ldr	q1, [x0]
   1b7b4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b7b8:	mov	v1.16b, v0.16b
   1b7bc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b7c0:	add	x0, x0, #0x520
   1b7c4:	ldr	q2, [x0]
   1b7c8:	b	1b7d0 <__lgammal_r_finite@GLIBC_2.17+0x10b8>
   1b7cc:	ldr	q2, [x19]
   1b7d0:	ldr	q0, [sp, #80]
   1b7d4:	sub	x19, x19, #0x10
   1b7d8:	str	q2, [sp, #96]
   1b7dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b7e0:	ldr	q2, [sp, #96]
   1b7e4:	mov	v1.16b, v2.16b
   1b7e8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b7ec:	cmp	x19, x20
   1b7f0:	mov	v1.16b, v0.16b
   1b7f4:	b.ne	1b7cc <__lgammal_r_finite@GLIBC_2.17+0x10b4>  // b.any
   1b7f8:	ldr	q0, [sp, #112]
   1b7fc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1b800:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b804:	add	x0, x0, #0x4e0
   1b808:	ldr	q1, [x0]
   1b80c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b810:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b814:	add	x0, x0, #0x4f0
   1b818:	b	1b298 <__lgammal_r_finite@GLIBC_2.17+0xb80>
   1b81c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b820:	add	x0, x0, #0x7d0
   1b824:	stp	x19, x20, [sp, #80]
   1b828:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b82c:	add	x20, x22, #0xa60
   1b830:	ldr	q1, [x0]
   1b834:	mov	x19, x20
   1b838:	ldr	q0, [sp, #80]
   1b83c:	add	x20, x20, #0xf50
   1b840:	add	x23, x19, #0xee0
   1b844:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b848:	str	q0, [sp, #80]
   1b84c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b850:	add	x0, x0, #0x7e0
   1b854:	ldr	q2, [x0]
   1b858:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b85c:	add	x0, x0, #0x7f0
   1b860:	ldr	q1, [x0]
   1b864:	b	1b86c <__lgammal_r_finite@GLIBC_2.17+0x1154>
   1b868:	ldr	q2, [x20]
   1b86c:	ldr	q0, [sp, #80]
   1b870:	sub	x20, x20, #0x10
   1b874:	str	q2, [sp, #96]
   1b878:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b87c:	ldr	q2, [sp, #96]
   1b880:	mov	v1.16b, v2.16b
   1b884:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b888:	cmp	x20, x23
   1b88c:	mov	v1.16b, v0.16b
   1b890:	b.ne	1b868 <__lgammal_r_finite@GLIBC_2.17+0x1150>  // b.any
   1b894:	ldr	q0, [sp, #80]
   1b898:	add	x20, x22, #0xa60
   1b89c:	add	x19, x19, #0xfd0
   1b8a0:	add	x20, x20, #0xf60
   1b8a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b8a8:	str	q0, [sp, #112]
   1b8ac:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b8b0:	add	x0, x0, #0x800
   1b8b4:	ldr	q0, [sp, #80]
   1b8b8:	ldr	q1, [x0]
   1b8bc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b8c0:	mov	v1.16b, v0.16b
   1b8c4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b8c8:	add	x0, x0, #0x810
   1b8cc:	ldr	q2, [x0]
   1b8d0:	b	1b8d8 <__lgammal_r_finite@GLIBC_2.17+0x11c0>
   1b8d4:	ldr	q2, [x19]
   1b8d8:	ldr	q0, [sp, #80]
   1b8dc:	sub	x19, x19, #0x10
   1b8e0:	str	q2, [sp, #96]
   1b8e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b8e8:	ldr	q2, [sp, #96]
   1b8ec:	mov	v1.16b, v2.16b
   1b8f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b8f4:	cmp	x19, x20
   1b8f8:	mov	v1.16b, v0.16b
   1b8fc:	b.ne	1b8d4 <__lgammal_r_finite@GLIBC_2.17+0x11bc>  // b.any
   1b900:	ldr	q0, [sp, #112]
   1b904:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1b908:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b90c:	add	x0, x0, #0x820
   1b910:	ldr	q1, [x0]
   1b914:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b918:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b91c:	add	x0, x0, #0x830
   1b920:	b	1b298 <__lgammal_r_finite@GLIBC_2.17+0xb80>
   1b924:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b928:	add	x0, x0, #0x8b0
   1b92c:	stp	x19, x20, [sp, #80]
   1b930:	ldr	q1, [x0]
   1b934:	ldr	q0, [sp, #80]
   1b938:	str	x25, [sp, #64]
   1b93c:	adrp	x25, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1b940:	add	x20, x25, #0xb60
   1b944:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1b948:	mov	x19, x20
   1b94c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b950:	add	x0, x0, #0x8c0
   1b954:	add	x20, x20, #0x50
   1b958:	sub	x22, x19, #0x20
   1b95c:	str	q0, [sp, #80]
   1b960:	ldr	q2, [x0]
   1b964:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b968:	add	x0, x0, #0x8d0
   1b96c:	ldr	q1, [x0]
   1b970:	b	1b978 <__lgammal_r_finite@GLIBC_2.17+0x1260>
   1b974:	ldr	q2, [x20]
   1b978:	ldr	q0, [sp, #80]
   1b97c:	sub	x20, x20, #0x10
   1b980:	str	q2, [sp, #96]
   1b984:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b988:	ldr	q2, [sp, #96]
   1b98c:	mov	v1.16b, v2.16b
   1b990:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b994:	cmp	x20, x22
   1b998:	mov	v1.16b, v0.16b
   1b99c:	b.ne	1b974 <__lgammal_r_finite@GLIBC_2.17+0x125c>  // b.any
   1b9a0:	ldr	q0, [sp, #80]
   1b9a4:	add	x25, x25, #0xb60
   1b9a8:	add	x19, x19, #0xc0
   1b9ac:	add	x25, x25, #0x60
   1b9b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b9b4:	str	q0, [sp, #112]
   1b9b8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b9bc:	add	x0, x0, #0x8e0
   1b9c0:	ldr	q0, [sp, #80]
   1b9c4:	ldr	q1, [x0]
   1b9c8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1b9cc:	mov	v1.16b, v0.16b
   1b9d0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1b9d4:	add	x0, x0, #0x8f0
   1b9d8:	ldr	q2, [x0]
   1b9dc:	b	1b9e4 <__lgammal_r_finite@GLIBC_2.17+0x12cc>
   1b9e0:	ldr	q2, [x19]
   1b9e4:	ldr	q0, [sp, #80]
   1b9e8:	sub	x19, x19, #0x10
   1b9ec:	str	q2, [sp, #96]
   1b9f0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1b9f4:	ldr	q2, [sp, #96]
   1b9f8:	mov	v1.16b, v2.16b
   1b9fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ba00:	cmp	x19, x25
   1ba04:	mov	v1.16b, v0.16b
   1ba08:	b.ne	1b9e0 <__lgammal_r_finite@GLIBC_2.17+0x12c8>  // b.any
   1ba0c:	ldr	q0, [sp, #112]
   1ba10:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ba14:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ba18:	add	x0, x0, #0x900
   1ba1c:	ldr	q1, [x0]
   1ba20:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ba24:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ba28:	add	x0, x0, #0x910
   1ba2c:	ldr	q1, [x0]
   1ba30:	b	1abc4 <__lgammal_r_finite@GLIBC_2.17+0x4ac>
   1ba34:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ba38:	add	x0, x0, #0x610
   1ba3c:	stp	x19, x20, [sp, #80]
   1ba40:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ba44:	add	x20, x22, #0xa60
   1ba48:	ldr	q1, [x0]
   1ba4c:	mov	x19, x20
   1ba50:	ldr	q0, [sp, #80]
   1ba54:	add	x20, x20, #0xb00
   1ba58:	add	x23, x19, #0xa70
   1ba5c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ba60:	str	q0, [sp, #80]
   1ba64:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ba68:	add	x0, x0, #0x620
   1ba6c:	ldr	q2, [x0]
   1ba70:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ba74:	add	x0, x0, #0x630
   1ba78:	ldr	q1, [x0]
   1ba7c:	b	1ba84 <__lgammal_r_finite@GLIBC_2.17+0x136c>
   1ba80:	ldr	q2, [x20]
   1ba84:	ldr	q0, [sp, #80]
   1ba88:	sub	x20, x20, #0x10
   1ba8c:	str	q2, [sp, #96]
   1ba90:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ba94:	ldr	q2, [sp, #96]
   1ba98:	mov	v1.16b, v2.16b
   1ba9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1baa0:	cmp	x20, x23
   1baa4:	mov	v1.16b, v0.16b
   1baa8:	b.ne	1ba80 <__lgammal_r_finite@GLIBC_2.17+0x1368>  // b.any
   1baac:	ldr	q0, [sp, #80]
   1bab0:	add	x20, x22, #0xa60
   1bab4:	add	x19, x19, #0xb90
   1bab8:	add	x20, x20, #0xb10
   1babc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bac0:	str	q0, [sp, #112]
   1bac4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bac8:	add	x0, x0, #0x640
   1bacc:	ldr	q0, [sp, #80]
   1bad0:	ldr	q1, [x0]
   1bad4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bad8:	mov	v1.16b, v0.16b
   1badc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bae0:	add	x0, x0, #0x650
   1bae4:	ldr	q2, [x0]
   1bae8:	b	1baf0 <__lgammal_r_finite@GLIBC_2.17+0x13d8>
   1baec:	ldr	q2, [x19]
   1baf0:	ldr	q0, [sp, #80]
   1baf4:	sub	x19, x19, #0x10
   1baf8:	str	q2, [sp, #96]
   1bafc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bb00:	ldr	q2, [sp, #96]
   1bb04:	mov	v1.16b, v2.16b
   1bb08:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bb0c:	cmp	x19, x20
   1bb10:	mov	v1.16b, v0.16b
   1bb14:	b.ne	1baec <__lgammal_r_finite@GLIBC_2.17+0x13d4>  // b.any
   1bb18:	ldr	q0, [sp, #112]
   1bb1c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1bb20:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bb24:	add	x0, x0, #0x660
   1bb28:	ldr	q1, [x0]
   1bb2c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bb30:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bb34:	add	x0, x0, #0x670
   1bb38:	b	1b298 <__lgammal_r_finite@GLIBC_2.17+0xb80>
   1bb3c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bb40:	add	x0, x0, #0x350
   1bb44:	stp	x19, x20, [sp, #80]
   1bb48:	ldr	q1, [x0]
   1bb4c:	ldr	q0, [sp, #80]
   1bb50:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1bb54:	tbz	w0, #31, 1bda4 <__lgammal_r_finite@GLIBC_2.17+0x168c>
   1bb58:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bb5c:	add	x0, x0, #0x2c0
   1bb60:	stp	x19, x20, [sp, #80]
   1bb64:	ldr	q1, [x0]
   1bb68:	ldr	q0, [sp, #80]
   1bb6c:	str	x25, [sp, #64]
   1bb70:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1bb74:	str	x19, [sp, #80]
   1bb78:	cmp	w0, #0x0
   1bb7c:	b.le	1c1e8 <__lgammal_r_finite@GLIBC_2.17+0x1ad0>
   1bb80:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bb84:	add	x0, x0, #0x360
   1bb88:	str	x20, [sp, #88]
   1bb8c:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bb90:	add	x24, x22, #0xa60
   1bb94:	ldr	q1, [x0]
   1bb98:	mov	x23, x24
   1bb9c:	ldr	q0, [sp, #80]
   1bba0:	add	x24, x24, #0x3d0
   1bba4:	add	x25, x23, #0x350
   1bba8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1bbac:	str	q0, [sp, #80]
   1bbb0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bbb4:	add	x0, x0, #0x3d0
   1bbb8:	ldr	q2, [x0]
   1bbbc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bbc0:	add	x0, x0, #0x370
   1bbc4:	ldr	q1, [x0]
   1bbc8:	b	1bbd0 <__lgammal_r_finite@GLIBC_2.17+0x14b8>
   1bbcc:	ldr	q2, [x24]
   1bbd0:	ldr	q0, [sp, #80]
   1bbd4:	sub	x24, x24, #0x10
   1bbd8:	str	q2, [sp, #96]
   1bbdc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bbe0:	ldr	q2, [sp, #96]
   1bbe4:	mov	v1.16b, v2.16b
   1bbe8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bbec:	cmp	x24, x25
   1bbf0:	mov	v1.16b, v0.16b
   1bbf4:	b.ne	1bbcc <__lgammal_r_finite@GLIBC_2.17+0x14b4>  // b.any
   1bbf8:	ldr	q0, [sp, #80]
   1bbfc:	add	x22, x22, #0xa60
   1bc00:	add	x23, x23, #0x460
   1bc04:	add	x22, x22, #0x3e0
   1bc08:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bc0c:	str	q0, [sp, #112]
   1bc10:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bc14:	add	x0, x0, #0x380
   1bc18:	ldr	q0, [sp, #80]
   1bc1c:	ldr	q1, [x0]
   1bc20:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1bc24:	mov	v1.16b, v0.16b
   1bc28:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bc2c:	add	x0, x0, #0x3e0
   1bc30:	ldr	q2, [x0]
   1bc34:	b	1bc3c <__lgammal_r_finite@GLIBC_2.17+0x1524>
   1bc38:	ldr	q2, [x23]
   1bc3c:	ldr	q0, [sp, #80]
   1bc40:	sub	x23, x23, #0x10
   1bc44:	str	q2, [sp, #96]
   1bc48:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bc4c:	ldr	q2, [sp, #96]
   1bc50:	mov	v1.16b, v2.16b
   1bc54:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bc58:	cmp	x23, x22
   1bc5c:	mov	v1.16b, v0.16b
   1bc60:	b.ne	1bc38 <__lgammal_r_finite@GLIBC_2.17+0x1520>  // b.any
   1bc64:	ldr	q0, [sp, #112]
   1bc68:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1bc6c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bc70:	add	x0, x0, #0x390
   1bc74:	ldr	q1, [x0]
   1bc78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bc7c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bc80:	add	x0, x0, #0x3a0
   1bc84:	ldr	q1, [x0]
   1bc88:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1bc8c:	mov	v2.16b, v0.16b
   1bc90:	b	1b3d4 <__lgammal_r_finite@GLIBC_2.17+0xcbc>
   1bc94:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bc98:	add	x0, x0, #0x920
   1bc9c:	stp	x19, x20, [sp, #80]
   1bca0:	ldr	q1, [x0]
   1bca4:	ldr	q0, [sp, #80]
   1bca8:	str	x25, [sp, #64]
   1bcac:	adrp	x25, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1bcb0:	add	x20, x25, #0xb60
   1bcb4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1bcb8:	mov	x19, x20
   1bcbc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bcc0:	add	x0, x0, #0x930
   1bcc4:	add	x20, x20, #0x140
   1bcc8:	add	x22, x19, #0xd0
   1bccc:	str	q0, [sp, #80]
   1bcd0:	ldr	q2, [x0]
   1bcd4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bcd8:	add	x0, x0, #0x940
   1bcdc:	ldr	q1, [x0]
   1bce0:	b	1bce8 <__lgammal_r_finite@GLIBC_2.17+0x15d0>
   1bce4:	ldr	q2, [x20]
   1bce8:	ldr	q0, [sp, #80]
   1bcec:	sub	x20, x20, #0x10
   1bcf0:	str	q2, [sp, #96]
   1bcf4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bcf8:	ldr	q2, [sp, #96]
   1bcfc:	mov	v1.16b, v2.16b
   1bd00:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bd04:	cmp	x20, x22
   1bd08:	mov	v1.16b, v0.16b
   1bd0c:	b.ne	1bce4 <__lgammal_r_finite@GLIBC_2.17+0x15cc>  // b.any
   1bd10:	ldr	q0, [sp, #80]
   1bd14:	add	x25, x25, #0xb60
   1bd18:	add	x19, x19, #0x1b0
   1bd1c:	add	x25, x25, #0x150
   1bd20:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bd24:	str	q0, [sp, #112]
   1bd28:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bd2c:	add	x0, x0, #0x950
   1bd30:	ldr	q0, [sp, #80]
   1bd34:	ldr	q1, [x0]
   1bd38:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bd3c:	mov	v1.16b, v0.16b
   1bd40:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bd44:	add	x0, x0, #0x960
   1bd48:	ldr	q2, [x0]
   1bd4c:	b	1bd54 <__lgammal_r_finite@GLIBC_2.17+0x163c>
   1bd50:	ldr	q2, [x19]
   1bd54:	ldr	q0, [sp, #80]
   1bd58:	sub	x19, x19, #0x10
   1bd5c:	str	q2, [sp, #96]
   1bd60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bd64:	ldr	q2, [sp, #96]
   1bd68:	mov	v1.16b, v2.16b
   1bd6c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bd70:	cmp	x19, x25
   1bd74:	mov	v1.16b, v0.16b
   1bd78:	b.ne	1bd50 <__lgammal_r_finite@GLIBC_2.17+0x1638>  // b.any
   1bd7c:	ldr	q0, [sp, #112]
   1bd80:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1bd84:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bd88:	add	x0, x0, #0x970
   1bd8c:	ldr	q1, [x0]
   1bd90:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bd94:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bd98:	add	x0, x0, #0x980
   1bd9c:	ldr	q1, [x0]
   1bda0:	b	1abc4 <__lgammal_r_finite@GLIBC_2.17+0x4ac>
   1bda4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1bda8:	add	x0, x0, #0x2f0
   1bdac:	stp	x19, x20, [sp, #80]
   1bdb0:	ldr	q1, [x0]
   1bdb4:	ldr	q0, [sp, #80]
   1bdb8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1bdbc:	str	x19, [sp, #80]
   1bdc0:	tbnz	w0, #31, 1c324 <__lgammal_r_finite@GLIBC_2.17+0x1c0c>
   1bdc4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1bdc8:	add	x0, x0, #0x2f0
   1bdcc:	str	x20, [sp, #88]
   1bdd0:	ldr	q1, [x0]
   1bdd4:	ldr	q0, [sp, #80]
   1bdd8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1bddc:	cbz	w0, 1c0f8 <__lgammal_r_finite@GLIBC_2.17+0x19e0>
   1bde0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bde4:	add	x0, x0, #0x430
   1bde8:	stp	x19, x20, [sp, #80]
   1bdec:	ldr	q1, [x0]
   1bdf0:	ldr	q0, [sp, #80]
   1bdf4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1bdf8:	str	x19, [sp, #80]
   1bdfc:	cmp	w0, #0x0
   1be00:	b.gt	1c610 <__lgammal_r_finite@GLIBC_2.17+0x1ef8>
   1be04:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1be08:	add	x0, x0, #0x2f0
   1be0c:	str	x20, [sp, #88]
   1be10:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1be14:	add	x20, x22, #0xa60
   1be18:	ldr	q1, [x0]
   1be1c:	mov	x19, x20
   1be20:	ldr	q0, [sp, #80]
   1be24:	add	x20, x20, #0x70
   1be28:	sub	x23, x19, #0x10
   1be2c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1be30:	str	q0, [sp, #80]
   1be34:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1be38:	add	x0, x0, #0x230
   1be3c:	ldr	q1, [x0]
   1be40:	ldr	q0, [sp, #80]
   1be44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1be48:	ldr	q1, [x20], #-16
   1be4c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1be50:	mov	v1.16b, v0.16b
   1be54:	cmp	x20, x23
   1be58:	b.ne	1be40 <__lgammal_r_finite@GLIBC_2.17+0x1728>  // b.any
   1be5c:	ldr	q0, [sp, #80]
   1be60:	add	x20, x22, #0xa60
   1be64:	add	x19, x19, #0xf0
   1be68:	add	x20, x20, #0x80
   1be6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1be70:	str	q0, [sp, #96]
   1be74:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1be78:	add	x0, x0, #0x240
   1be7c:	ldr	q0, [sp, #80]
   1be80:	ldr	q1, [x0]
   1be84:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1be88:	mov	v1.16b, v0.16b
   1be8c:	ldr	q0, [sp, #80]
   1be90:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1be94:	ldr	q1, [x19], #-16
   1be98:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1be9c:	mov	v1.16b, v0.16b
   1bea0:	cmp	x19, x20
   1bea4:	b.ne	1be8c <__lgammal_r_finite@GLIBC_2.17+0x1774>  // b.any
   1bea8:	ldr	q0, [sp, #96]
   1beac:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1beb0:	str	q0, [sp, #80]
   1beb4:	ldp	x23, x22, [sp, #80]
   1beb8:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1bebc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bec0:	add	x0, x0, #0x530
   1bec4:	str	x20, [sp, #88]
   1bec8:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1becc:	add	x20, x22, #0xa60
   1bed0:	ldr	q1, [x0]
   1bed4:	mov	x19, x20
   1bed8:	ldr	q0, [sp, #80]
   1bedc:	add	x20, x20, #0x880
   1bee0:	add	x23, x19, #0x7f0
   1bee4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1bee8:	str	q0, [sp, #80]
   1beec:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bef0:	add	x0, x0, #0x540
   1bef4:	ldr	q2, [x0]
   1bef8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1befc:	add	x0, x0, #0x550
   1bf00:	ldr	q1, [x0]
   1bf04:	b	1bf0c <__lgammal_r_finite@GLIBC_2.17+0x17f4>
   1bf08:	ldr	q2, [x20]
   1bf0c:	ldr	q0, [sp, #80]
   1bf10:	sub	x20, x20, #0x10
   1bf14:	str	q2, [sp, #96]
   1bf18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bf1c:	ldr	q2, [sp, #96]
   1bf20:	mov	v1.16b, v2.16b
   1bf24:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bf28:	cmp	x20, x23
   1bf2c:	mov	v1.16b, v0.16b
   1bf30:	b.ne	1bf08 <__lgammal_r_finite@GLIBC_2.17+0x17f0>  // b.any
   1bf34:	ldr	q0, [sp, #80]
   1bf38:	add	x20, x22, #0xa60
   1bf3c:	add	x19, x19, #0x920
   1bf40:	add	x20, x20, #0x890
   1bf44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bf48:	str	q0, [sp, #112]
   1bf4c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bf50:	add	x0, x0, #0x560
   1bf54:	ldr	q0, [sp, #80]
   1bf58:	ldr	q1, [x0]
   1bf5c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1bf60:	mov	v1.16b, v0.16b
   1bf64:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bf68:	add	x0, x0, #0x570
   1bf6c:	ldr	q2, [x0]
   1bf70:	b	1bf78 <__lgammal_r_finite@GLIBC_2.17+0x1860>
   1bf74:	ldr	q2, [x19]
   1bf78:	ldr	q0, [sp, #80]
   1bf7c:	sub	x19, x19, #0x10
   1bf80:	str	q2, [sp, #96]
   1bf84:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1bf88:	ldr	q2, [sp, #96]
   1bf8c:	mov	v1.16b, v2.16b
   1bf90:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bf94:	cmp	x19, x20
   1bf98:	mov	v1.16b, v0.16b
   1bf9c:	b.ne	1bf74 <__lgammal_r_finite@GLIBC_2.17+0x185c>  // b.any
   1bfa0:	ldr	q0, [sp, #112]
   1bfa4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1bfa8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bfac:	add	x0, x0, #0x580
   1bfb0:	ldr	q1, [x0]
   1bfb4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1bfb8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bfbc:	add	x0, x0, #0x590
   1bfc0:	b	1b298 <__lgammal_r_finite@GLIBC_2.17+0xb80>
   1bfc4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1bfc8:	add	x0, x0, #0xdb0
   1bfcc:	stp	x19, x20, [sp, #80]
   1bfd0:	ldr	q1, [x0]
   1bfd4:	ldr	q0, [sp, #80]
   1bfd8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1bfdc:	str	x19, [sp, #80]
   1bfe0:	cmp	w0, #0x0
   1bfe4:	b.gt	1c41c <__lgammal_r_finite@GLIBC_2.17+0x1d04>
   1bfe8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1bfec:	add	x0, x0, #0xb40
   1bff0:	str	x20, [sp, #88]
   1bff4:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1bff8:	add	x24, x22, #0xa60
   1bffc:	ldr	q1, [x0]
   1c000:	mov	x23, x24
   1c004:	ldr	q0, [sp, #80]
   1c008:	add	x24, x24, #0x190
   1c00c:	add	x25, x23, #0x100
   1c010:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c014:	str	q0, [sp, #80]
   1c018:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c01c:	add	x0, x0, #0x260
   1c020:	ldr	q2, [x0]
   1c024:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c028:	add	x0, x0, #0x270
   1c02c:	ldr	q0, [x0]
   1c030:	b	1c038 <__lgammal_r_finite@GLIBC_2.17+0x1920>
   1c034:	ldr	q2, [x24]
   1c038:	ldr	q1, [sp, #80]
   1c03c:	sub	x24, x24, #0x10
   1c040:	str	q2, [sp, #96]
   1c044:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c048:	ldr	q2, [sp, #96]
   1c04c:	mov	v1.16b, v2.16b
   1c050:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c054:	cmp	x24, x25
   1c058:	b.ne	1c034 <__lgammal_r_finite@GLIBC_2.17+0x191c>  // b.any
   1c05c:	mov	v1.16b, v0.16b
   1c060:	ldr	q0, [sp, #80]
   1c064:	add	x22, x22, #0xa60
   1c068:	add	x23, x23, #0x220
   1c06c:	add	x22, x22, #0x1a0
   1c070:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c074:	str	q0, [sp, #112]
   1c078:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c07c:	add	x0, x0, #0x280
   1c080:	ldr	q0, [sp, #80]
   1c084:	ldr	q1, [x0]
   1c088:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c08c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c090:	add	x0, x0, #0x290
   1c094:	ldr	q2, [x0]
   1c098:	b	1c0a0 <__lgammal_r_finite@GLIBC_2.17+0x1988>
   1c09c:	ldr	q2, [x23]
   1c0a0:	ldr	q1, [sp, #80]
   1c0a4:	sub	x23, x23, #0x10
   1c0a8:	str	q2, [sp, #96]
   1c0ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c0b0:	ldr	q2, [sp, #96]
   1c0b4:	mov	v1.16b, v2.16b
   1c0b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c0bc:	cmp	x23, x22
   1c0c0:	b.ne	1c09c <__lgammal_r_finite@GLIBC_2.17+0x1984>  // b.any
   1c0c4:	mov	v1.16b, v0.16b
   1c0c8:	ldr	q0, [sp, #112]
   1c0cc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1c0d0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c0d4:	add	x0, x0, #0x2a0
   1c0d8:	ldr	q1, [x0]
   1c0dc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c0e0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c0e4:	add	x0, x0, #0x2b0
   1c0e8:	ldr	q1, [x0]
   1c0ec:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c0f0:	mov	v2.16b, v0.16b
   1c0f4:	b	1b3d4 <__lgammal_r_finite@GLIBC_2.17+0xcbc>
   1c0f8:	mov	x23, #0x0                   	// #0
   1c0fc:	mov	x22, #0x0                   	// #0
   1c100:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1c104:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1c108:	add	x0, x0, #0xae0
   1c10c:	str	x20, [sp, #88]
   1c110:	ldr	q1, [x0]
   1c114:	ldr	q0, [sp, #80]
   1c118:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1c11c:	cbz	w0, 1c0f8 <__lgammal_r_finite@GLIBC_2.17+0x19e0>
   1c120:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c124:	add	x0, x0, #0x4a0
   1c128:	stp	x19, x20, [sp, #80]
   1c12c:	ldr	q1, [x0]
   1c130:	ldr	q0, [sp, #80]
   1c134:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1c138:	str	x19, [sp, #80]
   1c13c:	tbz	w0, #31, 1c6fc <__lgammal_r_finite@GLIBC_2.17+0x1fe4>
   1c140:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1c144:	add	x0, x0, #0xae0
   1c148:	str	x20, [sp, #88]
   1c14c:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c150:	add	x20, x22, #0xa60
   1c154:	ldr	q1, [x0]
   1c158:	mov	x19, x20
   1c15c:	ldr	q0, [sp, #80]
   1c160:	add	x20, x20, #0x500
   1c164:	add	x23, x19, #0x470
   1c168:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c16c:	str	q0, [sp, #80]
   1c170:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c174:	add	x0, x0, #0x3b0
   1c178:	ldr	q1, [x0]
   1c17c:	ldr	q0, [sp, #80]
   1c180:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c184:	ldr	q1, [x20], #-16
   1c188:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c18c:	mov	v1.16b, v0.16b
   1c190:	cmp	x20, x23
   1c194:	b.ne	1c17c <__lgammal_r_finite@GLIBC_2.17+0x1a64>  // b.any
   1c198:	ldr	q0, [sp, #80]
   1c19c:	add	x20, x22, #0xa60
   1c1a0:	add	x19, x19, #0x5a0
   1c1a4:	add	x20, x20, #0x510
   1c1a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c1ac:	str	q0, [sp, #96]
   1c1b0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c1b4:	add	x0, x0, #0x3c0
   1c1b8:	ldr	q0, [sp, #80]
   1c1bc:	ldr	q1, [x0]
   1c1c0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c1c4:	mov	v1.16b, v0.16b
   1c1c8:	ldr	q0, [sp, #80]
   1c1cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c1d0:	ldr	q1, [x19], #-16
   1c1d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c1d8:	mov	v1.16b, v0.16b
   1c1dc:	cmp	x19, x20
   1c1e0:	b.ne	1c1c8 <__lgammal_r_finite@GLIBC_2.17+0x1ab0>  // b.any
   1c1e4:	b	1bea8 <__lgammal_r_finite@GLIBC_2.17+0x1790>
   1c1e8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c1ec:	add	x0, x0, #0x2d0
   1c1f0:	str	x20, [sp, #88]
   1c1f4:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c1f8:	add	x24, x22, #0xa60
   1c1fc:	ldr	q1, [x0]
   1c200:	mov	x23, x24
   1c204:	ldr	q0, [sp, #80]
   1c208:	add	x24, x24, #0x2b0
   1c20c:	add	x25, x23, #0x230
   1c210:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c214:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c218:	add	x0, x0, #0x2e0
   1c21c:	ldr	q1, [x0]
   1c220:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c224:	str	q0, [sp, #80]
   1c228:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c22c:	add	x0, x0, #0x2f0
   1c230:	ldr	q4, [x0]
   1c234:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c238:	add	x0, x0, #0x300
   1c23c:	ldr	q2, [x0]
   1c240:	b	1c248 <__lgammal_r_finite@GLIBC_2.17+0x1b30>
   1c244:	ldr	q4, [x24]
   1c248:	ldr	q0, [sp, #80]
   1c24c:	mov	v1.16b, v2.16b
   1c250:	str	q4, [sp, #96]
   1c254:	sub	x24, x24, #0x10
   1c258:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c25c:	ldr	q4, [sp, #96]
   1c260:	mov	v1.16b, v4.16b
   1c264:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c268:	cmp	x24, x25
   1c26c:	mov	v2.16b, v0.16b
   1c270:	b.ne	1c244 <__lgammal_r_finite@GLIBC_2.17+0x1b2c>  // b.any
   1c274:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c278:	add	x0, x0, #0x310
   1c27c:	str	q0, [sp, #96]
   1c280:	add	x22, x22, #0xa60
   1c284:	ldr	q0, [sp, #80]
   1c288:	add	x23, x23, #0x340
   1c28c:	ldr	q1, [x0]
   1c290:	add	x22, x22, #0x2c0
   1c294:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c298:	mov	v1.16b, v0.16b
   1c29c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c2a0:	add	x0, x0, #0x320
   1c2a4:	ldr	q2, [sp, #96]
   1c2a8:	ldr	q4, [x0]
   1c2ac:	b	1c2b4 <__lgammal_r_finite@GLIBC_2.17+0x1b9c>
   1c2b0:	ldr	q4, [x23]
   1c2b4:	ldr	q0, [sp, #80]
   1c2b8:	sub	x23, x23, #0x10
   1c2bc:	str	q2, [sp, #96]
   1c2c0:	str	q4, [sp, #112]
   1c2c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c2c8:	ldr	q4, [sp, #112]
   1c2cc:	mov	v1.16b, v4.16b
   1c2d0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c2d4:	cmp	x23, x22
   1c2d8:	mov	v1.16b, v0.16b
   1c2dc:	ldr	q2, [sp, #96]
   1c2e0:	b.ne	1c2b0 <__lgammal_r_finite@GLIBC_2.17+0x1b98>  // b.any
   1c2e4:	mov	v0.16b, v2.16b
   1c2e8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1c2ec:	ldr	q1, [sp, #80]
   1c2f0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c2f4:	ldr	q1, [sp, #80]
   1c2f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c2fc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c300:	add	x0, x0, #0x330
   1c304:	ldr	q1, [x0]
   1c308:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c30c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c310:	add	x0, x0, #0x340
   1c314:	ldr	q1, [x0]
   1c318:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c31c:	mov	v2.16b, v0.16b
   1c320:	b	1b3d4 <__lgammal_r_finite@GLIBC_2.17+0xcbc>
   1c324:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1c328:	add	x0, x0, #0x2f0
   1c32c:	str	x20, [sp, #88]
   1c330:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c334:	add	x20, x22, #0xa60
   1c338:	ldr	q1, [x0]
   1c33c:	mov	x19, x20
   1c340:	ldr	q0, [sp, #80]
   1c344:	add	x20, x20, #0x630
   1c348:	add	x23, x19, #0x5b0
   1c34c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c350:	str	q0, [sp, #80]
   1c354:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c358:	add	x0, x0, #0x3f0
   1c35c:	ldr	q2, [x0]
   1c360:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c364:	add	x0, x0, #0x400
   1c368:	ldr	q1, [x0]
   1c36c:	b	1c374 <__lgammal_r_finite@GLIBC_2.17+0x1c5c>
   1c370:	ldr	q2, [x20]
   1c374:	ldr	q0, [sp, #80]
   1c378:	sub	x20, x20, #0x10
   1c37c:	str	q2, [sp, #96]
   1c380:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c384:	ldr	q2, [sp, #96]
   1c388:	mov	v1.16b, v2.16b
   1c38c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c390:	cmp	x20, x23
   1c394:	mov	v1.16b, v0.16b
   1c398:	b.ne	1c370 <__lgammal_r_finite@GLIBC_2.17+0x1c58>  // b.any
   1c39c:	ldr	q0, [sp, #80]
   1c3a0:	add	x20, x22, #0xa60
   1c3a4:	add	x19, x19, #0x6c0
   1c3a8:	add	x20, x20, #0x640
   1c3ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c3b0:	str	q0, [sp, #112]
   1c3b4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c3b8:	add	x0, x0, #0x410
   1c3bc:	ldr	q0, [sp, #80]
   1c3c0:	ldr	q1, [x0]
   1c3c4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c3c8:	mov	v1.16b, v0.16b
   1c3cc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c3d0:	add	x0, x0, #0x420
   1c3d4:	ldr	q2, [x0]
   1c3d8:	b	1c3e0 <__lgammal_r_finite@GLIBC_2.17+0x1cc8>
   1c3dc:	ldr	q2, [x19]
   1c3e0:	ldr	q0, [sp, #80]
   1c3e4:	sub	x19, x19, #0x10
   1c3e8:	str	q2, [sp, #96]
   1c3ec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c3f0:	ldr	q2, [sp, #96]
   1c3f4:	mov	v1.16b, v2.16b
   1c3f8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c3fc:	cmp	x19, x20
   1c400:	mov	v1.16b, v0.16b
   1c404:	b.ne	1c3dc <__lgammal_r_finite@GLIBC_2.17+0x1cc4>  // b.any
   1c408:	ldr	q0, [sp, #112]
   1c40c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1c410:	str	q0, [sp, #80]
   1c414:	ldp	x23, x22, [sp, #80]
   1c418:	b	1aa2c <__lgammal_r_finite@GLIBC_2.17+0x314>
   1c41c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c420:	add	x0, x0, #0x2c0
   1c424:	str	x20, [sp, #88]
   1c428:	ldr	q1, [x0]
   1c42c:	ldr	q0, [sp, #80]
   1c430:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1c434:	str	x19, [sp, #80]
   1c438:	cmp	w0, #0x0
   1c43c:	b.gt	1c540 <__lgammal_r_finite@GLIBC_2.17+0x1e28>
   1c440:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c444:	add	x0, x0, #0x2d0
   1c448:	str	x20, [sp, #88]
   1c44c:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c450:	add	x24, x22, #0xa60
   1c454:	ldr	q1, [x0]
   1c458:	mov	x23, x24
   1c45c:	ldr	q0, [sp, #80]
   1c460:	add	x24, x24, #0x2b0
   1c464:	add	x25, x23, #0x230
   1c468:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c46c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c470:	add	x0, x0, #0x2e0
   1c474:	ldr	q1, [x0]
   1c478:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c47c:	str	q0, [sp, #80]
   1c480:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c484:	add	x0, x0, #0x2f0
   1c488:	ldr	q4, [x0]
   1c48c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c490:	add	x0, x0, #0x300
   1c494:	ldr	q2, [x0]
   1c498:	b	1c4a0 <__lgammal_r_finite@GLIBC_2.17+0x1d88>
   1c49c:	ldr	q4, [x24]
   1c4a0:	ldr	q0, [sp, #80]
   1c4a4:	mov	v1.16b, v2.16b
   1c4a8:	str	q4, [sp, #96]
   1c4ac:	sub	x24, x24, #0x10
   1c4b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c4b4:	ldr	q4, [sp, #96]
   1c4b8:	mov	v1.16b, v4.16b
   1c4bc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c4c0:	cmp	x24, x25
   1c4c4:	mov	v2.16b, v0.16b
   1c4c8:	b.ne	1c49c <__lgammal_r_finite@GLIBC_2.17+0x1d84>  // b.any
   1c4cc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c4d0:	add	x0, x0, #0x310
   1c4d4:	str	q0, [sp, #96]
   1c4d8:	add	x22, x22, #0xa60
   1c4dc:	ldr	q0, [sp, #80]
   1c4e0:	add	x23, x23, #0x340
   1c4e4:	ldr	q1, [x0]
   1c4e8:	add	x22, x22, #0x2c0
   1c4ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c4f0:	mov	v1.16b, v0.16b
   1c4f4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c4f8:	add	x0, x0, #0x320
   1c4fc:	ldr	q2, [sp, #96]
   1c500:	ldr	q4, [x0]
   1c504:	b	1c50c <__lgammal_r_finite@GLIBC_2.17+0x1df4>
   1c508:	ldr	q4, [x23]
   1c50c:	ldr	q0, [sp, #80]
   1c510:	sub	x23, x23, #0x10
   1c514:	str	q2, [sp, #96]
   1c518:	str	q4, [sp, #112]
   1c51c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c520:	ldr	q4, [sp, #112]
   1c524:	mov	v1.16b, v4.16b
   1c528:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c52c:	cmp	x23, x22
   1c530:	mov	v1.16b, v0.16b
   1c534:	ldr	q2, [sp, #96]
   1c538:	b.ne	1c508 <__lgammal_r_finite@GLIBC_2.17+0x1df0>  // b.any
   1c53c:	b	1c2e4 <__lgammal_r_finite@GLIBC_2.17+0x1bcc>
   1c540:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c544:	add	x0, x0, #0x350
   1c548:	str	x20, [sp, #88]
   1c54c:	ldr	q1, [x0]
   1c550:	ldr	q0, [sp, #80]
   1c554:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1c558:	str	x19, [sp, #80]
   1c55c:	cmp	w0, #0x0
   1c560:	b.gt	1c7a8 <__lgammal_r_finite@GLIBC_2.17+0x2090>
   1c564:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c568:	add	x0, x0, #0x360
   1c56c:	str	x20, [sp, #88]
   1c570:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c574:	add	x24, x22, #0xa60
   1c578:	ldr	q1, [x0]
   1c57c:	mov	x23, x24
   1c580:	ldr	q0, [sp, #80]
   1c584:	add	x24, x24, #0x3d0
   1c588:	add	x25, x23, #0x350
   1c58c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c590:	str	q0, [sp, #80]
   1c594:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c598:	add	x0, x0, #0x370
   1c59c:	ldr	q1, [x0]
   1c5a0:	ldr	q0, [sp, #80]
   1c5a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c5a8:	ldr	q1, [x24], #-16
   1c5ac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c5b0:	mov	v1.16b, v0.16b
   1c5b4:	cmp	x24, x25
   1c5b8:	b.ne	1c5a0 <__lgammal_r_finite@GLIBC_2.17+0x1e88>  // b.any
   1c5bc:	ldr	q0, [sp, #80]
   1c5c0:	add	x22, x22, #0xa60
   1c5c4:	add	x23, x23, #0x460
   1c5c8:	add	x22, x22, #0x3e0
   1c5cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c5d0:	str	q0, [sp, #96]
   1c5d4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c5d8:	add	x0, x0, #0x380
   1c5dc:	ldr	q0, [sp, #80]
   1c5e0:	ldr	q1, [x0]
   1c5e4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c5e8:	mov	v1.16b, v0.16b
   1c5ec:	ldr	q0, [sp, #80]
   1c5f0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c5f4:	ldr	q1, [x23], #-16
   1c5f8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c5fc:	mov	v1.16b, v0.16b
   1c600:	cmp	x23, x22
   1c604:	b.ne	1c5ec <__lgammal_r_finite@GLIBC_2.17+0x1ed4>  // b.any
   1c608:	ldr	q0, [sp, #96]
   1c60c:	b	1bc68 <__lgammal_r_finite@GLIBC_2.17+0x1550>
   1c610:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c614:	add	x0, x0, #0x440
   1c618:	str	x20, [sp, #88]
   1c61c:	ldr	q1, [x0]
   1c620:	ldr	q0, [sp, #80]
   1c624:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1c628:	str	x19, [sp, #80]
   1c62c:	cmp	w0, #0x0
   1c630:	b.gt	1c85c <__lgammal_r_finite@GLIBC_2.17+0x2144>
   1c634:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c638:	add	x0, x0, #0x450
   1c63c:	str	x20, [sp, #88]
   1c640:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c644:	add	x20, x22, #0xa60
   1c648:	ldr	q1, [x0]
   1c64c:	mov	x19, x20
   1c650:	ldr	q0, [sp, #80]
   1c654:	add	x20, x20, #0x190
   1c658:	add	x23, x19, #0x100
   1c65c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c660:	str	q0, [sp, #80]
   1c664:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c668:	add	x0, x0, #0x270
   1c66c:	ldr	q1, [x0]
   1c670:	ldr	q0, [sp, #80]
   1c674:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c678:	ldr	q1, [x20], #-16
   1c67c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c680:	mov	v1.16b, v0.16b
   1c684:	cmp	x20, x23
   1c688:	b.ne	1c670 <__lgammal_r_finite@GLIBC_2.17+0x1f58>  // b.any
   1c68c:	ldr	q0, [sp, #80]
   1c690:	add	x20, x22, #0xa60
   1c694:	add	x19, x19, #0x220
   1c698:	add	x20, x20, #0x1a0
   1c69c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c6a0:	str	q0, [sp, #96]
   1c6a4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c6a8:	add	x0, x0, #0x280
   1c6ac:	ldr	q0, [sp, #80]
   1c6b0:	ldr	q1, [x0]
   1c6b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c6b8:	mov	v1.16b, v0.16b
   1c6bc:	ldr	q0, [sp, #80]
   1c6c0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c6c4:	ldr	q1, [x19], #-16
   1c6c8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c6cc:	mov	v1.16b, v0.16b
   1c6d0:	cmp	x19, x20
   1c6d4:	b.ne	1c6bc <__lgammal_r_finite@GLIBC_2.17+0x1fa4>  // b.any
   1c6d8:	ldr	q0, [sp, #96]
   1c6dc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1c6e0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c6e4:	add	x0, x0, #0x2a0
   1c6e8:	ldr	q1, [x0]
   1c6ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c6f0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c6f4:	add	x0, x0, #0x2b0
   1c6f8:	b	1b59c <__lgammal_r_finite@GLIBC_2.17+0xe84>
   1c6fc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c700:	add	x0, x0, #0x4b0
   1c704:	str	x20, [sp, #88]
   1c708:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c70c:	add	x20, x22, #0xa60
   1c710:	ldr	q1, [x0]
   1c714:	mov	x19, x20
   1c718:	ldr	q0, [sp, #80]
   1c71c:	add	x20, x20, #0x750
   1c720:	add	x23, x19, #0x6d0
   1c724:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c728:	str	q0, [sp, #80]
   1c72c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c730:	add	x0, x0, #0x4c0
   1c734:	ldr	q1, [x0]
   1c738:	ldr	q0, [sp, #80]
   1c73c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c740:	ldr	q1, [x20], #-16
   1c744:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c748:	mov	v1.16b, v0.16b
   1c74c:	cmp	x20, x23
   1c750:	b.ne	1c738 <__lgammal_r_finite@GLIBC_2.17+0x2020>  // b.any
   1c754:	ldr	q0, [sp, #80]
   1c758:	add	x20, x22, #0xa60
   1c75c:	add	x19, x19, #0x7e0
   1c760:	add	x20, x20, #0x760
   1c764:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c768:	str	q0, [sp, #96]
   1c76c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c770:	add	x0, x0, #0x4d0
   1c774:	ldr	q0, [sp, #80]
   1c778:	ldr	q1, [x0]
   1c77c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c780:	mov	v1.16b, v0.16b
   1c784:	ldr	q0, [sp, #80]
   1c788:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c78c:	ldr	q1, [x19], #-16
   1c790:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c794:	mov	v1.16b, v0.16b
   1c798:	cmp	x19, x20
   1c79c:	b.ne	1c784 <__lgammal_r_finite@GLIBC_2.17+0x206c>  // b.any
   1c7a0:	ldr	q0, [sp, #96]
   1c7a4:	b	1b7fc <__lgammal_r_finite@GLIBC_2.17+0x10e4>
   1c7a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1c7ac:	add	x0, x0, #0x2f0
   1c7b0:	str	x20, [sp, #88]
   1c7b4:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c7b8:	add	x24, x22, #0xa60
   1c7bc:	ldr	q1, [x0]
   1c7c0:	mov	x23, x24
   1c7c4:	ldr	q0, [sp, #80]
   1c7c8:	add	x24, x24, #0x500
   1c7cc:	add	x25, x23, #0x470
   1c7d0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c7d4:	str	q0, [sp, #80]
   1c7d8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c7dc:	add	x0, x0, #0x3b0
   1c7e0:	ldr	q1, [x0]
   1c7e4:	ldr	q0, [sp, #80]
   1c7e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c7ec:	ldr	q1, [x24], #-16
   1c7f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c7f4:	mov	v1.16b, v0.16b
   1c7f8:	cmp	x24, x25
   1c7fc:	b.ne	1c7e4 <__lgammal_r_finite@GLIBC_2.17+0x20cc>  // b.any
   1c800:	ldr	q0, [sp, #80]
   1c804:	add	x22, x22, #0xa60
   1c808:	add	x23, x23, #0x5a0
   1c80c:	add	x22, x22, #0x510
   1c810:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c814:	str	q0, [sp, #96]
   1c818:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c81c:	add	x0, x0, #0x3c0
   1c820:	ldr	q0, [sp, #80]
   1c824:	ldr	q1, [x0]
   1c828:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c82c:	mov	v1.16b, v0.16b
   1c830:	ldr	q0, [sp, #80]
   1c834:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c838:	ldr	q1, [x23], #-16
   1c83c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c840:	mov	v1.16b, v0.16b
   1c844:	cmp	x23, x22
   1c848:	b.ne	1c830 <__lgammal_r_finite@GLIBC_2.17+0x2118>  // b.any
   1c84c:	ldr	q0, [sp, #96]
   1c850:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1c854:	mov	v2.16b, v0.16b
   1c858:	b	1b3d4 <__lgammal_r_finite@GLIBC_2.17+0xcbc>
   1c85c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c860:	add	x0, x0, #0x460
   1c864:	str	x20, [sp, #88]
   1c868:	adrp	x22, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c86c:	add	x20, x22, #0xa60
   1c870:	ldr	q1, [x0]
   1c874:	mov	x19, x20
   1c878:	ldr	q0, [sp, #80]
   1c87c:	add	x20, x20, #0x2b0
   1c880:	add	x23, x19, #0x230
   1c884:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c888:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c88c:	add	x0, x0, #0x2e0
   1c890:	ldr	q1, [x0]
   1c894:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1c898:	str	q0, [sp, #80]
   1c89c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c8a0:	add	x0, x0, #0x300
   1c8a4:	ldr	q2, [x0]
   1c8a8:	ldr	q0, [sp, #80]
   1c8ac:	mov	v1.16b, v2.16b
   1c8b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c8b4:	ldr	q1, [x20], #-16
   1c8b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c8bc:	mov	v2.16b, v0.16b
   1c8c0:	cmp	x20, x23
   1c8c4:	b.ne	1c8a8 <__lgammal_r_finite@GLIBC_2.17+0x2190>  // b.any
   1c8c8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1c8cc:	add	x0, x0, #0x310
   1c8d0:	str	q0, [sp, #96]
   1c8d4:	add	x20, x22, #0xa60
   1c8d8:	ldr	q0, [sp, #80]
   1c8dc:	add	x19, x19, #0x340
   1c8e0:	ldr	q1, [x0]
   1c8e4:	add	x20, x20, #0x2c0
   1c8e8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c8ec:	mov	v1.16b, v0.16b
   1c8f0:	ldr	q2, [sp, #96]
   1c8f4:	ldr	q0, [sp, #80]
   1c8f8:	str	q2, [sp, #96]
   1c8fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1c900:	ldr	q1, [x19], #-16
   1c904:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c908:	mov	v1.16b, v0.16b
   1c90c:	cmp	x19, x20
   1c910:	ldr	q2, [sp, #96]
   1c914:	b.ne	1c8f4 <__lgammal_r_finite@GLIBC_2.17+0x21dc>  // b.any
   1c918:	b	1b56c <__lgammal_r_finite@GLIBC_2.17+0xe54>
   1c91c:	str	x25, [sp, #64]
   1c920:	bl	ba70 <__stack_chk_fail@plt>
   1c924:	nop

000000000001c928 <__logl_finite@GLIBC_2.17>:
   1c928:	stp	x29, x30, [sp, #-192]!
   1c92c:	mov	x29, sp
   1c930:	stp	x19, x20, [sp, #16]
   1c934:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1c938:	stp	x21, x22, [sp, #32]
   1c93c:	stp	x23, x24, [sp, #48]
   1c940:	str	q0, [sp, #80]
   1c944:	ldp	x24, x21, [sp, #80]
   1c948:	ldr	x0, [x19, #4032]
   1c94c:	ldr	x3, [x0]
   1c950:	str	x3, [sp, #184]
   1c954:	mov	x3, #0x0                   	// #0
   1c958:	ubfx	x3, x21, #32, #31
   1c95c:	lsr	x0, x24, #32
   1c960:	orr	w0, w21, w0
   1c964:	orr	w2, w3, w24
   1c968:	orr	w0, w0, w2
   1c96c:	cbz	w0, 1c9b8 <__logl_finite@GLIBC_2.17+0x90>
   1c970:	lsr	x1, x21, #32
   1c974:	tbnz	w1, #31, 1cab4 <__logl_finite@GLIBC_2.17+0x18c>
   1c978:	mov	w0, #0x7ffeffff            	// #2147418111
   1c97c:	cmp	w3, w0
   1c980:	b.le	1c9d0 <__logl_finite@GLIBC_2.17+0xa8>
   1c984:	stp	x24, x21, [sp, #80]
   1c988:	ldr	q1, [sp, #80]
   1c98c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1c990:	ldr	x19, [x19, #4032]
   1c994:	ldr	x1, [sp, #184]
   1c998:	ldr	x0, [x19]
   1c99c:	eor	x0, x1, x0
   1c9a0:	cbnz	x0, 1cd98 <__logl_finite@GLIBC_2.17+0x470>
   1c9a4:	ldp	x19, x20, [sp, #16]
   1c9a8:	ldp	x21, x22, [sp, #32]
   1c9ac:	ldp	x23, x24, [sp, #48]
   1c9b0:	ldp	x29, x30, [sp], #192
   1c9b4:	ret
   1c9b8:	movi	v1.2d, #0x0
   1c9bc:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1c9c0:	add	x0, x0, #0xef0
   1c9c4:	ldr	q0, [x0]
   1c9c8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1c9cc:	b	1c990 <__logl_finite@GLIBC_2.17+0x68>
   1c9d0:	add	x0, sp, #0xb4
   1c9d4:	stp	x26, x27, [sp, #64]
   1c9d8:	bl	25920 <frexpf128@@GLIBC_2.27>
   1c9dc:	fmov	x23, v0.d[1]
   1c9e0:	mov	w2, #0x67ff                	// #26623
   1c9e4:	movk	w2, #0x1, lsl #16
   1c9e8:	fmov	x22, d0
   1c9ec:	ubfx	x0, x23, #32, #16
   1c9f0:	lsr	x1, x23, #32
   1c9f4:	orr	w0, w0, #0x10000
   1c9f8:	cmp	w0, w2
   1c9fc:	b.ls	1cacc <__logl_finite@GLIBC_2.17+0x1a4>  // b.plast
   1ca00:	mov	w1, #0xffff0200            	// #-65024
   1ca04:	add	w0, w0, w1
   1ca08:	and	w1, w0, #0xfffffc00
   1ca0c:	stp	x24, x21, [sp, #80]
   1ca10:	lsr	w20, w0, #10
   1ca14:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1ca18:	add	x0, x0, #0xf00
   1ca1c:	mov	w2, #0x3ffe0000            	// #1073610752
   1ca20:	add	w1, w1, w2
   1ca24:	ldr	q0, [sp, #80]
   1ca28:	mov	x27, #0x0                   	// #0
   1ca2c:	ldr	q1, [x0]
   1ca30:	bfi	x27, x1, #32, #32
   1ca34:	and	x27, x27, #0xffffffff00000000
   1ca38:	mov	x26, #0x0                   	// #0
   1ca3c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1ca40:	cmp	w0, #0x0
   1ca44:	b.gt	1cb2c <__logl_finite@GLIBC_2.17+0x204>
   1ca48:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1ca4c:	add	x0, x0, #0xf10
   1ca50:	stp	x24, x21, [sp, #80]
   1ca54:	ldr	q1, [x0]
   1ca58:	ldr	q0, [sp, #80]
   1ca5c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1ca60:	tbnz	w0, #31, 1cb2c <__logl_finite@GLIBC_2.17+0x204>
   1ca64:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1ca68:	add	x0, x0, #0x2f0
   1ca6c:	stp	x24, x21, [sp, #80]
   1ca70:	ldr	q1, [x0]
   1ca74:	ldr	q0, [sp, #80]
   1ca78:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1ca7c:	movi	v0.2d, #0x0
   1ca80:	cbz	w0, 1cd90 <__logl_finite@GLIBC_2.17+0x468>
   1ca84:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1ca88:	add	x0, x0, #0x2f0
   1ca8c:	stp	x24, x21, [sp, #80]
   1ca90:	str	q0, [sp, #96]
   1ca94:	ldr	q1, [x0]
   1ca98:	ldr	q0, [sp, #80]
   1ca9c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1caa0:	str	q0, [sp, #80]
   1caa4:	ldr	q2, [sp, #96]
   1caa8:	str	q2, [sp, #112]
   1caac:	str	q2, [sp, #128]
   1cab0:	b	1cbd4 <__logl_finite@GLIBC_2.17+0x2ac>
   1cab4:	stp	x24, x21, [sp, #80]
   1cab8:	ldr	q1, [sp, #80]
   1cabc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cac0:	movi	v1.2d, #0x0
   1cac4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1cac8:	b	1c990 <__logl_finite@GLIBC_2.17+0x68>
   1cacc:	mov	w2, #0xffff0100            	// #-65280
   1cad0:	add	w0, w0, w2
   1cad4:	and	w3, w0, #0xfffffe00
   1cad8:	mov	w2, #0x3fff0000            	// #1073676288
   1cadc:	add	w3, w3, w2
   1cae0:	ldr	w2, [sp, #180]
   1cae4:	lsr	w0, w0, #9
   1cae8:	stp	x24, x21, [sp, #80]
   1caec:	add	w20, w0, #0x40
   1caf0:	sub	w0, w2, #0x1
   1caf4:	str	w0, [sp, #180]
   1caf8:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cafc:	add	x0, x0, #0xf00
   1cb00:	add	w1, w1, #0x10, lsl #12
   1cb04:	ldr	q0, [sp, #80]
   1cb08:	mov	x27, #0x0                   	// #0
   1cb0c:	mov	x26, #0x0                   	// #0
   1cb10:	ldr	q1, [x0]
   1cb14:	bfi	x27, x3, #32, #32
   1cb18:	bfi	x23, x1, #32, #32
   1cb1c:	and	x27, x27, #0xffffffff00000000
   1cb20:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1cb24:	cmp	w0, #0x0
   1cb28:	b.le	1ca48 <__logl_finite@GLIBC_2.17+0x120>
   1cb2c:	fmov	d2, x26
   1cb30:	fmov	d0, x22
   1cb34:	sub	w20, w20, #0x1a
   1cb38:	fmov	v2.d[1], x27
   1cb3c:	fmov	v0.d[1], x23
   1cb40:	mov	v1.16b, v2.16b
   1cb44:	str	q2, [sp, #80]
   1cb48:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cb4c:	ldr	q2, [sp, #80]
   1cb50:	mov	v1.16b, v2.16b
   1cb54:	str	q2, [sp, #96]
   1cb58:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1cb5c:	str	q0, [sp, #80]
   1cb60:	ldr	w0, [sp, #180]
   1cb64:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1cb68:	str	q0, [sp, #128]
   1cb6c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1cb70:	add	x0, x0, #0x580
   1cb74:	ldr	q1, [x0]
   1cb78:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cb7c:	mov	v6.16b, v0.16b
   1cb80:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cb84:	add	x0, x0, #0xff0
   1cb88:	add	x20, x0, w20, sxtw #4
   1cb8c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1cb90:	add	x0, x0, #0x2f0
   1cb94:	ldr	q2, [sp, #96]
   1cb98:	str	q6, [sp, #96]
   1cb9c:	mov	v0.16b, v2.16b
   1cba0:	ldr	q1, [x0]
   1cba4:	ldr	q2, [x20]
   1cba8:	str	q2, [sp, #112]
   1cbac:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cbb0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1cbb4:	add	x0, x0, #0x590
   1cbb8:	mov	v2.16b, v0.16b
   1cbbc:	ldr	q4, [sp, #128]
   1cbc0:	ldr	q1, [x0]
   1cbc4:	mov	v0.16b, v4.16b
   1cbc8:	str	q2, [sp, #128]
   1cbcc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cbd0:	mov	v2.16b, v0.16b
   1cbd4:	ldr	q1, [sp, #80]
   1cbd8:	str	q2, [sp, #160]
   1cbdc:	mov	v0.16b, v1.16b
   1cbe0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cbe4:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cbe8:	add	x0, x0, #0xf20
   1cbec:	str	q0, [sp, #144]
   1cbf0:	ldr	q0, [sp, #80]
   1cbf4:	ldr	q1, [x0]
   1cbf8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cbfc:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cc00:	add	x0, x0, #0xf30
   1cc04:	ldr	q1, [x0]
   1cc08:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cc0c:	ldr	q1, [sp, #80]
   1cc10:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cc14:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cc18:	add	x0, x0, #0xf40
   1cc1c:	ldr	q1, [x0]
   1cc20:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cc24:	ldr	q1, [sp, #80]
   1cc28:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cc2c:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cc30:	add	x0, x0, #0xf50
   1cc34:	ldr	q1, [x0]
   1cc38:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cc3c:	ldr	q1, [sp, #80]
   1cc40:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cc44:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cc48:	add	x0, x0, #0xf60
   1cc4c:	ldr	q1, [x0]
   1cc50:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cc54:	ldr	q1, [sp, #80]
   1cc58:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cc5c:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cc60:	add	x0, x0, #0xf70
   1cc64:	ldr	q1, [x0]
   1cc68:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cc6c:	ldr	q1, [sp, #80]
   1cc70:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cc74:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cc78:	add	x0, x0, #0xf80
   1cc7c:	ldr	q1, [x0]
   1cc80:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cc84:	ldr	q1, [sp, #80]
   1cc88:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cc8c:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cc90:	add	x0, x0, #0xf90
   1cc94:	ldr	q1, [x0]
   1cc98:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cc9c:	ldr	q1, [sp, #80]
   1cca0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cca4:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cca8:	add	x0, x0, #0xfa0
   1ccac:	ldr	q1, [x0]
   1ccb0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ccb4:	ldr	q1, [sp, #80]
   1ccb8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ccbc:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1ccc0:	add	x0, x0, #0xfb0
   1ccc4:	ldr	q1, [x0]
   1ccc8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cccc:	ldr	q1, [sp, #80]
   1ccd0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ccd4:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1ccd8:	add	x0, x0, #0xfc0
   1ccdc:	ldr	q1, [x0]
   1cce0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cce4:	ldr	q1, [sp, #80]
   1cce8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ccec:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1ccf0:	add	x0, x0, #0xfd0
   1ccf4:	ldr	q1, [x0]
   1ccf8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ccfc:	ldr	q1, [sp, #80]
   1cd00:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cd04:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1cd08:	add	x0, x0, #0xfe0
   1cd0c:	ldr	q1, [x0]
   1cd10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cd14:	ldr	q1, [sp, #80]
   1cd18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cd1c:	ldr	q4, [sp, #144]
   1cd20:	mov	v1.16b, v4.16b
   1cd24:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cd28:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1cd2c:	add	x0, x0, #0x330
   1cd30:	mov	v6.16b, v0.16b
   1cd34:	ldr	q4, [sp, #144]
   1cd38:	ldr	q1, [x0]
   1cd3c:	mov	v0.16b, v4.16b
   1cd40:	str	q6, [sp, #144]
   1cd44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cd48:	mov	v1.16b, v0.16b
   1cd4c:	ldr	q6, [sp, #144]
   1cd50:	mov	v0.16b, v6.16b
   1cd54:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cd58:	ldr	q1, [sp, #96]
   1cd5c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cd60:	mov	v1.16b, v0.16b
   1cd64:	ldr	q0, [sp, #80]
   1cd68:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cd6c:	ldr	q1, [sp, #112]
   1cd70:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cd74:	ldr	q1, [sp, #128]
   1cd78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cd7c:	ldr	q2, [sp, #160]
   1cd80:	mov	v1.16b, v2.16b
   1cd84:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cd88:	ldp	x26, x27, [sp, #64]
   1cd8c:	b	1c990 <__logl_finite@GLIBC_2.17+0x68>
   1cd90:	ldp	x26, x27, [sp, #64]
   1cd94:	b	1c990 <__logl_finite@GLIBC_2.17+0x68>
   1cd98:	stp	x26, x27, [sp, #64]
   1cd9c:	bl	ba70 <__stack_chk_fail@plt>

000000000001cda0 <__log10l_finite@GLIBC_2.17>:
   1cda0:	stp	x29, x30, [sp, #-144]!
   1cda4:	mov	x29, sp
   1cda8:	stp	x19, x20, [sp, #16]
   1cdac:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1cdb0:	stp	x21, x22, [sp, #32]
   1cdb4:	str	q0, [sp, #64]
   1cdb8:	ldp	x19, x21, [sp, #64]
   1cdbc:	ldr	x3, [x20, #4032]
   1cdc0:	ldr	x4, [x3]
   1cdc4:	str	x4, [sp, #136]
   1cdc8:	mov	x4, #0x0                   	// #0
   1cdcc:	and	x0, x21, #0x7fffffffffffffff
   1cdd0:	orr	x0, x0, x19
   1cdd4:	cbz	x0, 1ce24 <__log10l_finite@GLIBC_2.17+0x84>
   1cdd8:	tbnz	x21, #63, 1ce44 <__log10l_finite@GLIBC_2.17+0xa4>
   1cddc:	mov	x0, #0x7ffeffffffffffff    	// #9223090561878065151
   1cde0:	cmp	x21, x0
   1cde4:	b.gt	1d0bc <__log10l_finite@GLIBC_2.17+0x31c>
   1cde8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1cdec:	add	x0, x0, #0x2f0
   1cdf0:	ldr	q1, [x0]
   1cdf4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1cdf8:	movi	v0.2d, #0x0
   1cdfc:	cbnz	w0, 1ce5c <__log10l_finite@GLIBC_2.17+0xbc>
   1ce00:	ldr	x20, [x20, #4032]
   1ce04:	ldr	x1, [sp, #136]
   1ce08:	ldr	x0, [x20]
   1ce0c:	eor	x0, x1, x0
   1ce10:	cbnz	x0, 1d278 <__log10l_finite@GLIBC_2.17+0x4d8>
   1ce14:	ldp	x19, x20, [sp, #16]
   1ce18:	ldp	x21, x22, [sp, #32]
   1ce1c:	ldp	x29, x30, [sp], #144
   1ce20:	ret
   1ce24:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1ce28:	add	x0, x0, #0xfd0
   1ce2c:	ldr	q0, [x0]
   1ce30:	and	x0, x21, #0x7fffffffffffffff
   1ce34:	str	x0, [sp, #72]
   1ce38:	ldr	q1, [sp, #64]
   1ce3c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ce40:	b	1ce00 <__log10l_finite@GLIBC_2.17+0x60>
   1ce44:	stp	x19, x21, [sp, #64]
   1ce48:	ldr	q1, [sp, #64]
   1ce4c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ce50:	mov	v1.16b, v0.16b
   1ce54:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ce58:	b	1ce00 <__log10l_finite@GLIBC_2.17+0x60>
   1ce5c:	stp	x19, x21, [sp, #64]
   1ce60:	add	x0, sp, #0x84
   1ce64:	ldr	q0, [sp, #64]
   1ce68:	stp	x23, x24, [sp, #48]
   1ce6c:	bl	25920 <frexpf128@@GLIBC_2.27>
   1ce70:	ldr	w23, [sp, #132]
   1ce74:	str	q0, [sp, #64]
   1ce78:	add	w0, w23, #0x2
   1ce7c:	mov	w24, w23
   1ce80:	cmp	w0, #0x4
   1ce84:	b.hi	1d0cc <__log10l_finite@GLIBC_2.17+0x32c>  // b.pmore
   1ce88:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1ce8c:	add	x0, x0, #0x5b0
   1ce90:	ldr	q1, [x0]
   1ce94:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1ce98:	ldr	q0, [sp, #64]
   1ce9c:	tbz	w0, #31, 1ceb0 <__log10l_finite@GLIBC_2.17+0x110>
   1cea0:	sub	w24, w23, #0x1
   1cea4:	ldr	q1, [sp, #64]
   1cea8:	mov	v0.16b, v1.16b
   1ceac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ceb0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1ceb4:	add	x0, x0, #0x2f0
   1ceb8:	adrp	x22, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1cebc:	add	x21, x22, #0x660
   1cec0:	mov	x19, x21
   1cec4:	add	x21, x21, #0x170
   1cec8:	ldr	q1, [x0]
   1cecc:	add	x23, x19, #0xb0
   1ced0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ced4:	str	q0, [sp, #64]
   1ced8:	ldr	q0, [sp, #64]
   1cedc:	mov	v1.16b, v0.16b
   1cee0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cee4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1cee8:	add	x0, x0, #0x600
   1ceec:	str	q0, [sp, #96]
   1cef0:	ldr	q2, [x0]
   1cef4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1cef8:	add	x0, x0, #0x610
   1cefc:	ldr	q1, [x0]
   1cf00:	b	1cf08 <__log10l_finite@GLIBC_2.17+0x168>
   1cf04:	ldr	q2, [x21]
   1cf08:	ldr	q0, [sp, #64]
   1cf0c:	sub	x21, x21, #0x10
   1cf10:	str	q2, [sp, #80]
   1cf14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cf18:	ldr	q2, [sp, #80]
   1cf1c:	mov	v1.16b, v2.16b
   1cf20:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cf24:	cmp	x21, x23
   1cf28:	mov	v1.16b, v0.16b
   1cf2c:	b.ne	1cf04 <__log10l_finite@GLIBC_2.17+0x164>  // b.any
   1cf30:	ldr	q0, [sp, #96]
   1cf34:	add	x21, x22, #0x660
   1cf38:	add	x19, x19, #0x230
   1cf3c:	add	x21, x21, #0x180
   1cf40:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cf44:	str	q0, [sp, #112]
   1cf48:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1cf4c:	add	x0, x0, #0x620
   1cf50:	ldr	q0, [sp, #64]
   1cf54:	ldr	q1, [x0]
   1cf58:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cf5c:	mov	v1.16b, v0.16b
   1cf60:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1cf64:	add	x0, x0, #0x630
   1cf68:	ldr	q2, [x0]
   1cf6c:	b	1cf74 <__log10l_finite@GLIBC_2.17+0x1d4>
   1cf70:	ldr	q2, [x19]
   1cf74:	ldr	q0, [sp, #64]
   1cf78:	sub	x19, x19, #0x10
   1cf7c:	str	q2, [sp, #80]
   1cf80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cf84:	ldr	q2, [sp, #80]
   1cf88:	mov	v1.16b, v2.16b
   1cf8c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1cf90:	cmp	x19, x21
   1cf94:	mov	v1.16b, v0.16b
   1cf98:	b.ne	1cf70 <__log10l_finite@GLIBC_2.17+0x1d0>  // b.any
   1cf9c:	ldr	q0, [sp, #112]
   1cfa0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1cfa4:	ldr	q1, [sp, #64]
   1cfa8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cfac:	str	q0, [sp, #80]
   1cfb0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1cfb4:	add	x0, x0, #0x330
   1cfb8:	ldr	q0, [sp, #96]
   1cfbc:	ldr	q1, [x0]
   1cfc0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cfc4:	mov	v1.16b, v0.16b
   1cfc8:	ldr	q2, [sp, #80]
   1cfcc:	mov	v0.16b, v2.16b
   1cfd0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1cfd4:	mov	v2.16b, v0.16b
   1cfd8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1cfdc:	add	x0, x0, #0x640
   1cfe0:	mov	v0.16b, v2.16b
   1cfe4:	str	q2, [sp, #112]
   1cfe8:	ldr	q1, [x0]
   1cfec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1cff0:	str	q0, [sp, #80]
   1cff4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1cff8:	add	x0, x0, #0x640
   1cffc:	ldr	q0, [sp, #64]
   1d000:	ldr	q1, [x0]
   1d004:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d008:	ldr	q4, [sp, #80]
   1d00c:	mov	v1.16b, v4.16b
   1d010:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d014:	mov	w0, w24
   1d018:	str	q0, [sp, #80]
   1d01c:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1d020:	str	q0, [sp, #96]
   1d024:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d028:	add	x0, x0, #0x650
   1d02c:	ldr	q1, [x0]
   1d030:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d034:	ldr	q6, [sp, #80]
   1d038:	mov	v1.16b, v6.16b
   1d03c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d040:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d044:	add	x0, x0, #0x330
   1d048:	ldr	q2, [sp, #112]
   1d04c:	str	q0, [sp, #80]
   1d050:	ldr	q1, [x0]
   1d054:	mov	v0.16b, v2.16b
   1d058:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d05c:	ldr	q6, [sp, #80]
   1d060:	mov	v1.16b, v6.16b
   1d064:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d068:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d06c:	add	x0, x0, #0x330
   1d070:	str	q0, [sp, #80]
   1d074:	ldr	q0, [sp, #64]
   1d078:	ldr	q1, [x0]
   1d07c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d080:	ldr	q2, [sp, #80]
   1d084:	mov	v1.16b, v2.16b
   1d088:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d08c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1d090:	add	x0, x0, #0xdc0
   1d094:	ldr	q4, [sp, #96]
   1d098:	str	q0, [sp, #64]
   1d09c:	ldr	q1, [x0]
   1d0a0:	mov	v0.16b, v4.16b
   1d0a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d0a8:	ldr	q2, [sp, #64]
   1d0ac:	mov	v1.16b, v2.16b
   1d0b0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d0b4:	ldp	x23, x24, [sp, #48]
   1d0b8:	b	1ce00 <__log10l_finite@GLIBC_2.17+0x60>
   1d0bc:	stp	x19, x21, [sp, #64]
   1d0c0:	ldr	q1, [sp, #64]
   1d0c4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d0c8:	b	1ce00 <__log10l_finite@GLIBC_2.17+0x60>
   1d0cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d0d0:	add	x0, x0, #0x330
   1d0d4:	ldr	q1, [x0]
   1d0d8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d0dc:	str	q0, [sp, #80]
   1d0e0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d0e4:	add	x0, x0, #0x5b0
   1d0e8:	ldr	q0, [sp, #64]
   1d0ec:	ldr	q1, [x0]
   1d0f0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1d0f4:	ldr	q2, [sp, #80]
   1d0f8:	tbnz	w0, #31, 1d23c <__log10l_finite@GLIBC_2.17+0x49c>
   1d0fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d100:	add	x0, x0, #0x330
   1d104:	mov	v0.16b, v2.16b
   1d108:	ldr	q1, [x0]
   1d10c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d110:	str	q0, [sp, #80]
   1d114:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d118:	add	x0, x0, #0x330
   1d11c:	ldr	q0, [sp, #64]
   1d120:	ldr	q1, [x0]
   1d124:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d128:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d12c:	add	x0, x0, #0x330
   1d130:	ldr	q1, [x0]
   1d134:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d138:	mov	v1.16b, v0.16b
   1d13c:	ldr	q2, [sp, #80]
   1d140:	mov	v0.16b, v2.16b
   1d144:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1d148:	mov	v1.16b, v0.16b
   1d14c:	str	q0, [sp, #64]
   1d150:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d154:	adrp	x22, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d158:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d15c:	add	x0, x0, #0x5c0
   1d160:	add	x21, x22, #0x660
   1d164:	str	q0, [sp, #80]
   1d168:	mov	x19, x21
   1d16c:	add	x21, x21, #0x40
   1d170:	ldr	q2, [x0]
   1d174:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d178:	add	x0, x0, #0x5d0
   1d17c:	sub	x24, x19, #0x10
   1d180:	ldr	q1, [x0]
   1d184:	b	1d18c <__log10l_finite@GLIBC_2.17+0x3ec>
   1d188:	ldr	q2, [x21]
   1d18c:	ldr	q0, [sp, #80]
   1d190:	sub	x21, x21, #0x10
   1d194:	str	q2, [sp, #96]
   1d198:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d19c:	ldr	q2, [sp, #96]
   1d1a0:	mov	v1.16b, v2.16b
   1d1a4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d1a8:	cmp	x21, x24
   1d1ac:	mov	v1.16b, v0.16b
   1d1b0:	b.ne	1d188 <__log10l_finite@GLIBC_2.17+0x3e8>  // b.any
   1d1b4:	ldr	q0, [sp, #80]
   1d1b8:	add	x22, x22, #0x660
   1d1bc:	add	x19, x19, #0xa0
   1d1c0:	add	x22, x22, #0x50
   1d1c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d1c8:	str	q0, [sp, #112]
   1d1cc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d1d0:	add	x0, x0, #0x5e0
   1d1d4:	ldr	q0, [sp, #80]
   1d1d8:	ldr	q1, [x0]
   1d1dc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d1e0:	mov	v1.16b, v0.16b
   1d1e4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d1e8:	add	x0, x0, #0x5f0
   1d1ec:	ldr	q2, [x0]
   1d1f0:	b	1d1f8 <__log10l_finite@GLIBC_2.17+0x458>
   1d1f4:	ldr	q2, [x19]
   1d1f8:	ldr	q0, [sp, #80]
   1d1fc:	sub	x19, x19, #0x10
   1d200:	str	q2, [sp, #96]
   1d204:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d208:	ldr	q2, [sp, #96]
   1d20c:	mov	v1.16b, v2.16b
   1d210:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d214:	cmp	x19, x22
   1d218:	mov	v1.16b, v0.16b
   1d21c:	b.ne	1d1f4 <__log10l_finite@GLIBC_2.17+0x454>  // b.any
   1d220:	ldr	q0, [sp, #112]
   1d224:	mov	w24, w23
   1d228:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1d22c:	ldr	q1, [sp, #64]
   1d230:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d234:	mov	v2.16b, v0.16b
   1d238:	b	1cfd8 <__log10l_finite@GLIBC_2.17+0x238>
   1d23c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d240:	add	x0, x0, #0x330
   1d244:	mov	v0.16b, v2.16b
   1d248:	sub	w23, w23, #0x1
   1d24c:	str	q2, [sp, #64]
   1d250:	ldr	q1, [x0]
   1d254:	str	w23, [sp, #132]
   1d258:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d25c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d260:	add	x0, x0, #0x330
   1d264:	ldr	q1, [x0]
   1d268:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d26c:	mov	v1.16b, v0.16b
   1d270:	ldr	q2, [sp, #64]
   1d274:	b	1d140 <__log10l_finite@GLIBC_2.17+0x3a0>
   1d278:	stp	x23, x24, [sp, #48]
   1d27c:	bl	ba70 <__stack_chk_fail@plt>

000000000001d280 <__powl_finite@GLIBC_2.17>:
   1d280:	stp	x29, x30, [sp, #-272]!
   1d284:	mov	x29, sp
   1d288:	stp	x19, x20, [sp, #16]
   1d28c:	str	q1, [sp, #96]
   1d290:	ldp	x20, x0, [sp, #96]
   1d294:	stp	x25, x26, [sp, #64]
   1d298:	stp	x21, x22, [sp, #32]
   1d29c:	stp	x23, x24, [sp, #48]
   1d2a0:	lsr	x25, x20, #32
   1d2a4:	ubfx	x21, x0, #32, #31
   1d2a8:	orr	w23, w25, w0
   1d2ac:	stp	x27, x28, [sp, #80]
   1d2b0:	lsr	x19, x0, #32
   1d2b4:	orr	w0, w21, w23
   1d2b8:	str	q0, [sp, #112]
   1d2bc:	orr	w0, w0, w20
   1d2c0:	ldp	x24, x22, [sp, #112]
   1d2c4:	cbnz	w0, 1d350 <__powl_finite@GLIBC_2.17+0xd0>
   1d2c8:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   1d2cc:	cbz	w0, 1de4c <__powl_finite@GLIBC_2.17+0xbcc>
   1d2d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d2d4:	add	x0, x0, #0x2f0
   1d2d8:	stp	x24, x22, [sp, #112]
   1d2dc:	mov	w27, #0x0                   	// #0
   1d2e0:	ldr	q1, [x0]
   1d2e4:	ldr	q0, [sp, #112]
   1d2e8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1d2ec:	cbnz	w0, 1d39c <__powl_finite@GLIBC_2.17+0x11c>
   1d2f0:	ldr	q0, [sp, #96]
   1d2f4:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   1d2f8:	cbz	w0, 1de4c <__powl_finite@GLIBC_2.17+0xbcc>
   1d2fc:	ubfx	x26, x22, #32, #31
   1d300:	mov	w0, #0x7fff0000            	// #2147418112
   1d304:	cmp	w21, w0
   1d308:	mov	w1, #0x7fff0000            	// #2147418112
   1d30c:	cset	w27, eq  // eq = none
   1d310:	lsr	x28, x22, #32
   1d314:	cmp	w26, w1
   1d318:	b.ls	1d3b0 <__powl_finite@GLIBC_2.17+0x130>  // b.plast
   1d31c:	stp	x24, x22, [sp, #112]
   1d320:	ldr	q1, [sp, #96]
   1d324:	ldr	q0, [sp, #112]
   1d328:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d32c:	str	q0, [sp, #112]
   1d330:	ldp	x19, x20, [sp, #16]
   1d334:	ldp	x21, x22, [sp, #32]
   1d338:	ldp	x23, x24, [sp, #48]
   1d33c:	ldp	x25, x26, [sp, #64]
   1d340:	ldp	x27, x28, [sp, #80]
   1d344:	ldr	q0, [sp, #112]
   1d348:	ldp	x29, x30, [sp], #272
   1d34c:	ret
   1d350:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d354:	add	x0, x0, #0x2f0
   1d358:	ldr	q1, [x0]
   1d35c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1d360:	cbz	w0, 1d2f0 <__powl_finite@GLIBC_2.17+0x70>
   1d364:	mov	w0, #0x7fff0000            	// #2147418112
   1d368:	cmp	w21, w0
   1d36c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1d370:	add	x0, x0, #0xfd0
   1d374:	stp	x24, x22, [sp, #112]
   1d378:	cset	w26, eq  // eq = none
   1d37c:	ldr	q1, [x0]
   1d380:	ldr	q0, [sp, #112]
   1d384:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1d388:	cmp	w0, #0x0
   1d38c:	csel	w27, w26, wzr, eq  // eq = none
   1d390:	cbz	w27, 1e278 <__powl_finite@GLIBC_2.17+0xff8>
   1d394:	orr	w0, w23, w20
   1d398:	cbz	w0, 1de4c <__powl_finite@GLIBC_2.17+0xbcc>
   1d39c:	ubfx	x26, x22, #32, #31
   1d3a0:	mov	w1, #0x7fff0000            	// #2147418112
   1d3a4:	lsr	x28, x22, #32
   1d3a8:	cmp	w26, w1
   1d3ac:	b.hi	1d31c <__powl_finite@GLIBC_2.17+0x9c>  // b.pmore
   1d3b0:	b.eq	1dec8 <__powl_finite@GLIBC_2.17+0xc48>  // b.none
   1d3b4:	mov	w0, #0x7fff0000            	// #2147418112
   1d3b8:	cmp	w21, w0
   1d3bc:	b.hi	1d31c <__powl_finite@GLIBC_2.17+0x9c>  // b.pmore
   1d3c0:	orr	w20, w23, w20
   1d3c4:	cbnz	w27, 1de7c <__powl_finite@GLIBC_2.17+0xbfc>
   1d3c8:	mov	w3, w28
   1d3cc:	tbnz	w28, #31, 1dedc <__powl_finite@GLIBC_2.17+0xc5c>
   1d3d0:	mov	w0, w19
   1d3d4:	mov	w23, #0x0                   	// #0
   1d3d8:	cbz	w20, 1df5c <__powl_finite@GLIBC_2.17+0xcdc>
   1d3dc:	lsr	x4, x24, #32
   1d3e0:	and	x2, x22, #0x7fffffffffffffff
   1d3e4:	stp	x24, x2, [sp, #112]
   1d3e8:	orr	w1, w22, w4
   1d3ec:	orr	w1, w1, w24
   1d3f0:	cbnz	w1, 1d408 <__powl_finite@GLIBC_2.17+0x188>
   1d3f4:	cmp	w26, #0x0
   1d3f8:	and	w1, w28, #0x3fffffff
   1d3fc:	mov	w2, #0x3fff0000            	// #1073676288
   1d400:	ccmp	w1, w2, #0x4, ne  // ne = any
   1d404:	b.eq	1dfe0 <__powl_finite@GLIBC_2.17+0xd60>  // b.none
   1d408:	lsr	w1, w28, #31
   1d40c:	sub	w1, w1, #0x1
   1d410:	orr	w2, w23, w1
   1d414:	cbz	w2, 1e064 <__powl_finite@GLIBC_2.17+0xde4>
   1d418:	adrp	x2, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d41c:	add	x2, x2, #0x2f0
   1d420:	sub	w23, w23, #0x1
   1d424:	orr	w1, w23, w1
   1d428:	ldr	q0, [x2]
   1d42c:	str	q0, [sp, #144]
   1d430:	cbnz	w1, 1d444 <__powl_finite@GLIBC_2.17+0x1c4>
   1d434:	adrp	x1, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1d438:	add	x1, x1, #0xfd0
   1d43c:	ldr	q0, [x1]
   1d440:	str	q0, [sp, #144]
   1d444:	mov	w1, #0x654b                	// #25931
   1d448:	movk	w1, #0x401d, lsl #16
   1d44c:	cmp	w21, w1
   1d450:	b.hi	1dfa8 <__powl_finite@GLIBC_2.17+0xd28>  // b.pmore
   1d454:	movi	v1.2d, #0x0
   1d458:	ldr	q0, [sp, #96]
   1d45c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1d460:	cmp	w0, #0x0
   1d464:	ldp	x1, x0, [sp, #96]
   1d468:	b.gt	1d470 <__powl_finite@GLIBC_2.17+0x1f0>
   1d46c:	eor	x0, x0, #0x8000000000000000
   1d470:	stp	x1, x0, [sp, #128]
   1d474:	adrp	x1, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d478:	add	x1, x1, #0x8d0
   1d47c:	ldr	q0, [sp, #128]
   1d480:	and	w25, w25, #0xf8000000
   1d484:	ldr	q1, [x1]
   1d488:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1d48c:	tbz	w0, #31, 1d4b4 <__powl_finite@GLIBC_2.17+0x234>
   1d490:	movi	v1.2d, #0x0
   1d494:	ldr	q0, [sp, #96]
   1d498:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1d49c:	tbnz	w0, #31, 1e1f4 <__powl_finite@GLIBC_2.17+0xf74>
   1d4a0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d4a4:	add	x0, x0, #0x8d0
   1d4a8:	mov	w25, #0x0                   	// #0
   1d4ac:	ldr	q0, [x0]
   1d4b0:	str	q0, [sp, #96]
   1d4b4:	tst	x28, #0x7fff0000
   1d4b8:	mov	w0, #0x0                   	// #0
   1d4bc:	b.ne	1d4e4 <__powl_finite@GLIBC_2.17+0x264>  // b.any
   1d4c0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d4c4:	add	x0, x0, #0x8f0
   1d4c8:	ldr	q0, [sp, #112]
   1d4cc:	ldr	q1, [x0]
   1d4d0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d4d4:	str	q0, [sp, #112]
   1d4d8:	ldr	x26, [sp, #120]
   1d4dc:	mov	w0, #0xffffff8f            	// #-113
   1d4e0:	lsr	x26, x26, #32
   1d4e4:	add	w1, w0, w26, lsr #16
   1d4e8:	and	w26, w26, #0xffff
   1d4ec:	mov	w0, #0x3988                	// #14728
   1d4f0:	mov	w2, #0xffffc001            	// #-16383
   1d4f4:	cmp	w26, w0
   1d4f8:	add	w19, w1, w2
   1d4fc:	orr	w4, w26, #0x3fff0000
   1d500:	b.le	1e100 <__powl_finite@GLIBC_2.17+0xe80>
   1d504:	mov	w0, #0xbb66                	// #47974
   1d508:	cmp	w26, w0
   1d50c:	b.le	1e1b0 <__powl_finite@GLIBC_2.17+0xf30>
   1d510:	mov	w0, #0xffffc002            	// #-16382
   1d514:	add	w19, w1, w0
   1d518:	movi	v6.2d, #0x0
   1d51c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d520:	add	x0, x0, #0x2f0
   1d524:	sub	w4, w4, #0x10, lsl #12
   1d528:	mov	v26.16b, v6.16b
   1d52c:	ldr	q22, [x0]
   1d530:	ldp	x2, x3, [sp, #112]
   1d534:	mov	v1.16b, v22.16b
   1d538:	str	q22, [sp, #128]
   1d53c:	str	q26, [sp, #240]
   1d540:	str	q6, [sp, #256]
   1d544:	fmov	d20, x2
   1d548:	bfi	x3, x4, #32, #32
   1d54c:	fmov	v20.d[1], x3
   1d550:	mov	v0.16b, v20.16b
   1d554:	str	q20, [sp, #112]
   1d558:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d55c:	ldr	q20, [sp, #112]
   1d560:	ldr	q22, [sp, #128]
   1d564:	str	q0, [sp, #128]
   1d568:	mov	v0.16b, v20.16b
   1d56c:	str	q20, [sp, #208]
   1d570:	mov	v1.16b, v22.16b
   1d574:	str	q22, [sp, #224]
   1d578:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d57c:	mov	v2.16b, v0.16b
   1d580:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1d584:	add	x0, x0, #0x2f0
   1d588:	mov	v1.16b, v2.16b
   1d58c:	str	q2, [sp, #112]
   1d590:	ldr	q0, [x0]
   1d594:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1d598:	mov	v24.16b, v0.16b
   1d59c:	ldr	q16, [sp, #128]
   1d5a0:	mov	v1.16b, v24.16b
   1d5a4:	str	q24, [sp, #176]
   1d5a8:	mov	v0.16b, v16.16b
   1d5ac:	str	q16, [sp, #192]
   1d5b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d5b4:	fmov	x4, d0
   1d5b8:	fmov	x2, d0
   1d5bc:	ldr	q2, [sp, #112]
   1d5c0:	fmov	x3, v0.d[1]
   1d5c4:	str	q0, [sp, #160]
   1d5c8:	lsr	x4, x4, #32
   1d5cc:	fmov	x1, d2
   1d5d0:	and	w4, w4, #0xf8000000
   1d5d4:	and	x2, x2, #0xffffffff00000000
   1d5d8:	bfi	x2, x4, #32, #32
   1d5dc:	fmov	d18, x2
   1d5e0:	fmov	x2, d2
   1d5e4:	lsr	x1, x1, #32
   1d5e8:	and	w1, w1, #0xf8000000
   1d5ec:	fmov	v18.d[1], x3
   1d5f0:	fmov	x3, v2.d[1]
   1d5f4:	mov	v0.16b, v18.16b
   1d5f8:	str	q18, [sp, #128]
   1d5fc:	and	x2, x2, #0xffffffff00000000
   1d600:	bfi	x2, x1, #32, #32
   1d604:	fmov	d2, x2
   1d608:	fmov	v2.d[1], x3
   1d60c:	mov	v1.16b, v2.16b
   1d610:	str	q2, [sp, #112]
   1d614:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d618:	mov	v1.16b, v0.16b
   1d61c:	ldr	q16, [sp, #192]
   1d620:	mov	v0.16b, v16.16b
   1d624:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d628:	mov	v16.16b, v0.16b
   1d62c:	ldr	q2, [sp, #112]
   1d630:	ldr	q22, [sp, #224]
   1d634:	mov	v0.16b, v2.16b
   1d638:	str	q16, [sp, #112]
   1d63c:	mov	v1.16b, v22.16b
   1d640:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d644:	ldr	q20, [sp, #208]
   1d648:	mov	v1.16b, v0.16b
   1d64c:	mov	v0.16b, v20.16b
   1d650:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d654:	ldr	q18, [sp, #128]
   1d658:	mov	v1.16b, v18.16b
   1d65c:	str	q18, [sp, #192]
   1d660:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d664:	mov	v1.16b, v0.16b
   1d668:	ldr	q16, [sp, #112]
   1d66c:	mov	v0.16b, v16.16b
   1d670:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d674:	ldr	q24, [sp, #176]
   1d678:	mov	v1.16b, v24.16b
   1d67c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d680:	ldr	q4, [sp, #160]
   1d684:	str	q0, [sp, #176]
   1d688:	mov	v1.16b, v4.16b
   1d68c:	mov	v0.16b, v4.16b
   1d690:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d694:	str	q0, [sp, #112]
   1d698:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d69c:	add	x0, x0, #0x930
   1d6a0:	ldr	q1, [x0]
   1d6a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d6a8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d6ac:	add	x0, x0, #0x940
   1d6b0:	ldr	q1, [x0]
   1d6b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d6b8:	ldr	q1, [sp, #112]
   1d6bc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d6c0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d6c4:	add	x0, x0, #0x950
   1d6c8:	ldr	q1, [x0]
   1d6cc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d6d0:	ldr	q1, [sp, #112]
   1d6d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d6d8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d6dc:	add	x0, x0, #0x960
   1d6e0:	ldr	q1, [x0]
   1d6e4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d6e8:	ldr	q1, [sp, #112]
   1d6ec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d6f0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d6f4:	add	x0, x0, #0x970
   1d6f8:	ldr	q1, [x0]
   1d6fc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d700:	str	q0, [sp, #128]
   1d704:	ldr	q1, [sp, #112]
   1d708:	mov	v0.16b, v1.16b
   1d70c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d710:	ldr	q16, [sp, #128]
   1d714:	mov	v1.16b, v0.16b
   1d718:	mov	v0.16b, v16.16b
   1d71c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d720:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d724:	add	x0, x0, #0x980
   1d728:	str	q0, [sp, #128]
   1d72c:	ldr	q0, [sp, #112]
   1d730:	ldr	q1, [x0]
   1d734:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d738:	ldr	q1, [sp, #112]
   1d73c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d740:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d744:	add	x0, x0, #0x990
   1d748:	ldr	q1, [x0]
   1d74c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d750:	ldr	q1, [sp, #112]
   1d754:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d758:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d75c:	add	x0, x0, #0x9a0
   1d760:	ldr	q1, [x0]
   1d764:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d768:	ldr	q1, [sp, #112]
   1d76c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d770:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d774:	add	x0, x0, #0x9b0
   1d778:	ldr	q1, [x0]
   1d77c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d780:	ldr	q1, [sp, #112]
   1d784:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d788:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d78c:	add	x0, x0, #0x9c0
   1d790:	ldr	q1, [x0]
   1d794:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d798:	mov	v1.16b, v0.16b
   1d79c:	ldr	q16, [sp, #128]
   1d7a0:	mov	v0.16b, v16.16b
   1d7a4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1d7a8:	ldr	q4, [sp, #160]
   1d7ac:	ldr	q18, [sp, #192]
   1d7b0:	str	q0, [sp, #112]
   1d7b4:	mov	v0.16b, v4.16b
   1d7b8:	str	q4, [sp, #208]
   1d7bc:	mov	v1.16b, v18.16b
   1d7c0:	str	q18, [sp, #128]
   1d7c4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d7c8:	ldr	q2, [sp, #176]
   1d7cc:	mov	v1.16b, v2.16b
   1d7d0:	str	q2, [sp, #192]
   1d7d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d7d8:	ldr	q16, [sp, #112]
   1d7dc:	mov	v1.16b, v16.16b
   1d7e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d7e4:	ldr	q18, [sp, #128]
   1d7e8:	str	q0, [sp, #128]
   1d7ec:	mov	v1.16b, v18.16b
   1d7f0:	mov	v0.16b, v18.16b
   1d7f4:	str	q18, [sp, #112]
   1d7f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d7fc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1d800:	add	x0, x0, #0x530
   1d804:	str	q0, [sp, #176]
   1d808:	ldr	q1, [x0]
   1d80c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d810:	ldr	q16, [sp, #128]
   1d814:	mov	v1.16b, v16.16b
   1d818:	str	q16, [sp, #160]
   1d81c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d820:	mov	v22.16b, v0.16b
   1d824:	ldr	q18, [sp, #112]
   1d828:	fmov	x1, d22
   1d82c:	fmov	x2, d22
   1d830:	fmov	x3, v22.d[1]
   1d834:	mov	v0.16b, v18.16b
   1d838:	lsr	x1, x1, #32
   1d83c:	and	x2, x2, #0xffffffff00000000
   1d840:	and	w1, w1, #0xf8000000
   1d844:	bfi	x2, x1, #32, #32
   1d848:	fmov	d22, x2
   1d84c:	fmov	v22.d[1], x3
   1d850:	mov	v1.16b, v22.16b
   1d854:	str	q22, [sp, #112]
   1d858:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d85c:	str	q0, [sp, #128]
   1d860:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1d864:	add	x0, x0, #0x530
   1d868:	ldr	q22, [sp, #112]
   1d86c:	ldr	q1, [x0]
   1d870:	mov	v0.16b, v22.16b
   1d874:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d878:	ldr	q20, [sp, #176]
   1d87c:	mov	v1.16b, v20.16b
   1d880:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d884:	ldr	q16, [sp, #160]
   1d888:	mov	v1.16b, v0.16b
   1d88c:	mov	v0.16b, v16.16b
   1d890:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d894:	ldr	q4, [sp, #208]
   1d898:	mov	v1.16b, v4.16b
   1d89c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d8a0:	mov	v4.16b, v0.16b
   1d8a4:	ldr	q22, [sp, #112]
   1d8a8:	ldr	q2, [sp, #192]
   1d8ac:	mov	v1.16b, v22.16b
   1d8b0:	str	q4, [sp, #112]
   1d8b4:	mov	v0.16b, v2.16b
   1d8b8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d8bc:	ldr	q4, [sp, #112]
   1d8c0:	mov	v1.16b, v0.16b
   1d8c4:	mov	v0.16b, v4.16b
   1d8c8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d8cc:	mov	v2.16b, v0.16b
   1d8d0:	ldr	q18, [sp, #128]
   1d8d4:	mov	v1.16b, v2.16b
   1d8d8:	mov	v0.16b, v18.16b
   1d8dc:	str	q2, [sp, #160]
   1d8e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d8e4:	fmov	x1, d0
   1d8e8:	fmov	x2, d0
   1d8ec:	fmov	x3, v0.d[1]
   1d8f0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d8f4:	add	x0, x0, #0x9d0
   1d8f8:	lsr	x1, x1, #32
   1d8fc:	and	w1, w1, #0xf8000000
   1d900:	and	x2, x2, #0xffffffff00000000
   1d904:	ldr	q1, [x0]
   1d908:	bfi	x2, x1, #32, #32
   1d90c:	fmov	d16, x2
   1d910:	fmov	v16.d[1], x3
   1d914:	mov	v0.16b, v16.16b
   1d918:	str	q16, [sp, #112]
   1d91c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d920:	ldr	q16, [sp, #112]
   1d924:	ldr	q18, [sp, #128]
   1d928:	str	q0, [sp, #128]
   1d92c:	mov	v0.16b, v16.16b
   1d930:	mov	v1.16b, v18.16b
   1d934:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d938:	ldr	q2, [sp, #160]
   1d93c:	mov	v1.16b, v0.16b
   1d940:	mov	v0.16b, v2.16b
   1d944:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1d948:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d94c:	add	x0, x0, #0x9e0
   1d950:	ldr	q1, [x0]
   1d954:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d958:	mov	v2.16b, v0.16b
   1d95c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1d960:	add	x0, x0, #0x9f0
   1d964:	ldr	q16, [sp, #112]
   1d968:	str	q2, [sp, #112]
   1d96c:	ldr	q1, [x0]
   1d970:	mov	v0.16b, v16.16b
   1d974:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1d978:	mov	v1.16b, v0.16b
   1d97c:	ldr	q2, [sp, #112]
   1d980:	mov	v0.16b, v2.16b
   1d984:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d988:	ldr	q26, [sp, #240]
   1d98c:	mov	v1.16b, v26.16b
   1d990:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d994:	mov	w0, w19
   1d998:	str	q0, [sp, #112]
   1d99c:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1d9a0:	ldr	q2, [sp, #112]
   1d9a4:	ldr	q4, [sp, #128]
   1d9a8:	str	q0, [sp, #112]
   1d9ac:	mov	v1.16b, v2.16b
   1d9b0:	str	q2, [sp, #192]
   1d9b4:	mov	v0.16b, v4.16b
   1d9b8:	str	q4, [sp, #176]
   1d9bc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d9c0:	ldr	q6, [sp, #256]
   1d9c4:	mov	v1.16b, v6.16b
   1d9c8:	str	q6, [sp, #128]
   1d9cc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d9d0:	ldr	q16, [sp, #112]
   1d9d4:	mov	v1.16b, v16.16b
   1d9d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1d9dc:	fmov	x0, d0
   1d9e0:	fmov	x2, d0
   1d9e4:	fmov	x3, v0.d[1]
   1d9e8:	ldr	q16, [sp, #112]
   1d9ec:	lsr	x0, x0, #32
   1d9f0:	and	x2, x2, #0xffffffff00000000
   1d9f4:	and	w0, w0, #0xf8000000
   1d9f8:	mov	v1.16b, v16.16b
   1d9fc:	bfi	x2, x0, #32, #32
   1da00:	fmov	d18, x2
   1da04:	fmov	v18.d[1], x3
   1da08:	ldp	x2, x3, [sp, #96]
   1da0c:	mov	v0.16b, v18.16b
   1da10:	str	q18, [sp, #160]
   1da14:	and	x2, x2, #0xffffffff00000000
   1da18:	bfi	x2, x25, #32, #32
   1da1c:	fmov	d16, x2
   1da20:	fmov	v16.d[1], x3
   1da24:	str	q16, [sp, #112]
   1da28:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1da2c:	ldr	q6, [sp, #128]
   1da30:	mov	v1.16b, v6.16b
   1da34:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1da38:	ldr	q4, [sp, #176]
   1da3c:	mov	v1.16b, v4.16b
   1da40:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1da44:	ldr	q2, [sp, #192]
   1da48:	mov	v1.16b, v0.16b
   1da4c:	mov	v0.16b, v2.16b
   1da50:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1da54:	ldr	q1, [sp, #96]
   1da58:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1da5c:	ldr	q16, [sp, #112]
   1da60:	str	q0, [sp, #112]
   1da64:	ldr	q0, [sp, #96]
   1da68:	mov	v1.16b, v16.16b
   1da6c:	str	q16, [sp, #128]
   1da70:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1da74:	ldr	q18, [sp, #160]
   1da78:	mov	v1.16b, v18.16b
   1da7c:	str	q18, [sp, #96]
   1da80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1da84:	mov	v1.16b, v0.16b
   1da88:	ldr	q2, [sp, #112]
   1da8c:	mov	v0.16b, v2.16b
   1da90:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1da94:	mov	v2.16b, v0.16b
   1da98:	ldr	q18, [sp, #96]
   1da9c:	ldr	q16, [sp, #128]
   1daa0:	mov	v0.16b, v18.16b
   1daa4:	str	q2, [sp, #112]
   1daa8:	mov	v1.16b, v16.16b
   1daac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dab0:	mov	v2.16b, v0.16b
   1dab4:	ldr	q0, [sp, #112]
   1dab8:	mov	v1.16b, v2.16b
   1dabc:	str	q2, [sp, #128]
   1dac0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dac4:	str	q0, [sp, #96]
   1dac8:	mov	w1, #0x400cffff            	// #1074593791
   1dacc:	ldr	x0, [sp, #104]
   1dad0:	lsr	x3, x0, #32
   1dad4:	cmp	w3, w1
   1dad8:	b.le	1e088 <__powl_finite@GLIBC_2.17+0xe08>
   1dadc:	ldr	x1, [sp, #96]
   1dae0:	mov	w2, #0xbff30000            	// #-1074593792
   1dae4:	add	w2, w2, w3
   1dae8:	lsr	x3, x1, #32
   1daec:	orr	w1, w2, w1
   1daf0:	orr	w0, w0, w3
   1daf4:	orr	w0, w1, w0
   1daf8:	cbnz	w0, 1e18c <__powl_finite@GLIBC_2.17+0xf0c>
   1dafc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1db00:	add	x0, x0, #0xa00
   1db04:	ldr	q0, [sp, #112]
   1db08:	ldr	q1, [x0]
   1db0c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1db10:	str	q0, [sp, #160]
   1db14:	ldr	q0, [sp, #96]
   1db18:	ldr	q1, [sp, #128]
   1db1c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1db20:	mov	v1.16b, v0.16b
   1db24:	ldr	q2, [sp, #160]
   1db28:	mov	v0.16b, v2.16b
   1db2c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1db30:	cmp	w0, #0x0
   1db34:	b.gt	1e18c <__powl_finite@GLIBC_2.17+0xf0c>
   1db38:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1db3c:	add	x0, x0, #0x330
   1db40:	ldr	q0, [sp, #96]
   1db44:	ldr	q1, [x0]
   1db48:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1db4c:	bl	22250 <floorf128@@GLIBC_2.27>
   1db50:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   1db54:	mov	w20, w0
   1db58:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1db5c:	mov	v1.16b, v0.16b
   1db60:	ldr	q0, [sp, #128]
   1db64:	lsl	w19, w20, #16
   1db68:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1db6c:	mov	v2.16b, v0.16b
   1db70:	ldr	q0, [sp, #112]
   1db74:	mov	v1.16b, v2.16b
   1db78:	str	q2, [sp, #128]
   1db7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1db80:	str	q0, [sp, #96]
   1db84:	ldp	x2, x3, [sp, #96]
   1db88:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1db8c:	ldr	x1, [sp, #96]
   1db90:	add	x0, x0, #0xa10
   1db94:	lsr	x1, x1, #32
   1db98:	and	x2, x2, #0xffffffff00000000
   1db9c:	and	w1, w1, #0xf8000000
   1dba0:	ldr	q1, [x0]
   1dba4:	bfi	x2, x1, #32, #32
   1dba8:	fmov	d4, x2
   1dbac:	fmov	v4.d[1], x3
   1dbb0:	mov	v0.16b, v4.16b
   1dbb4:	str	q4, [sp, #96]
   1dbb8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dbbc:	ldr	q4, [sp, #96]
   1dbc0:	ldr	q1, [sp, #128]
   1dbc4:	str	q0, [sp, #128]
   1dbc8:	mov	v0.16b, v4.16b
   1dbcc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1dbd0:	mov	v1.16b, v0.16b
   1dbd4:	ldr	q0, [sp, #112]
   1dbd8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1dbdc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1dbe0:	add	x0, x0, #0xea0
   1dbe4:	ldr	q1, [x0]
   1dbe8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dbec:	mov	v2.16b, v0.16b
   1dbf0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dbf4:	add	x0, x0, #0xa20
   1dbf8:	ldr	q4, [sp, #96]
   1dbfc:	str	q2, [sp, #96]
   1dc00:	ldr	q1, [x0]
   1dc04:	mov	v0.16b, v4.16b
   1dc08:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dc0c:	mov	v1.16b, v0.16b
   1dc10:	ldr	q2, [sp, #96]
   1dc14:	mov	v0.16b, v2.16b
   1dc18:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dc1c:	mov	v4.16b, v0.16b
   1dc20:	ldr	q6, [sp, #128]
   1dc24:	mov	v1.16b, v4.16b
   1dc28:	mov	v0.16b, v6.16b
   1dc2c:	str	q6, [sp, #96]
   1dc30:	str	q4, [sp, #112]
   1dc34:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dc38:	ldr	q6, [sp, #96]
   1dc3c:	str	q0, [sp, #96]
   1dc40:	mov	v1.16b, v6.16b
   1dc44:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1dc48:	ldr	q4, [sp, #112]
   1dc4c:	mov	v1.16b, v0.16b
   1dc50:	mov	v0.16b, v4.16b
   1dc54:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1dc58:	ldr	q2, [sp, #96]
   1dc5c:	str	q0, [sp, #176]
   1dc60:	mov	v1.16b, v2.16b
   1dc64:	mov	v0.16b, v2.16b
   1dc68:	str	q2, [sp, #128]
   1dc6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dc70:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dc74:	add	x0, x0, #0xa30
   1dc78:	str	q0, [sp, #96]
   1dc7c:	ldr	q1, [x0]
   1dc80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dc84:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dc88:	add	x0, x0, #0xa40
   1dc8c:	ldr	q1, [x0]
   1dc90:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dc94:	ldr	q1, [sp, #96]
   1dc98:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dc9c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dca0:	add	x0, x0, #0xa50
   1dca4:	ldr	q1, [x0]
   1dca8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dcac:	ldr	q1, [sp, #96]
   1dcb0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dcb4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dcb8:	add	x0, x0, #0xa60
   1dcbc:	ldr	q1, [x0]
   1dcc0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dcc4:	ldr	q1, [sp, #96]
   1dcc8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dccc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dcd0:	add	x0, x0, #0xa70
   1dcd4:	ldr	q1, [x0]
   1dcd8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dcdc:	ldr	q1, [sp, #96]
   1dce0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dce4:	str	q0, [sp, #112]
   1dce8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dcec:	add	x0, x0, #0xa80
   1dcf0:	ldr	q0, [sp, #96]
   1dcf4:	ldr	q1, [x0]
   1dcf8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dcfc:	ldr	q1, [sp, #96]
   1dd00:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dd04:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dd08:	add	x0, x0, #0xa90
   1dd0c:	ldr	q1, [x0]
   1dd10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dd14:	ldr	q1, [sp, #96]
   1dd18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dd1c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dd20:	add	x0, x0, #0xaa0
   1dd24:	ldr	q1, [x0]
   1dd28:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dd2c:	ldr	q1, [sp, #96]
   1dd30:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dd34:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dd38:	add	x0, x0, #0xab0
   1dd3c:	ldr	q1, [x0]
   1dd40:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dd44:	mov	v1.16b, v0.16b
   1dd48:	ldr	q6, [sp, #112]
   1dd4c:	mov	v0.16b, v6.16b
   1dd50:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1dd54:	ldr	q2, [sp, #128]
   1dd58:	mov	v1.16b, v0.16b
   1dd5c:	mov	v0.16b, v2.16b
   1dd60:	str	q2, [sp, #96]
   1dd64:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1dd68:	mov	v6.16b, v0.16b
   1dd6c:	ldr	q2, [sp, #96]
   1dd70:	mov	v1.16b, v6.16b
   1dd74:	str	q6, [sp, #96]
   1dd78:	mov	v0.16b, v2.16b
   1dd7c:	str	q2, [sp, #160]
   1dd80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dd84:	mov	v16.16b, v0.16b
   1dd88:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1dd8c:	add	x0, x0, #0xae0
   1dd90:	ldr	q6, [sp, #96]
   1dd94:	str	q16, [sp, #96]
   1dd98:	ldr	q1, [x0]
   1dd9c:	mov	v0.16b, v6.16b
   1dda0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1dda4:	mov	v1.16b, v0.16b
   1dda8:	ldr	q16, [sp, #96]
   1ddac:	mov	v0.16b, v16.16b
   1ddb0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ddb4:	ldr	q2, [sp, #160]
   1ddb8:	ldr	q4, [sp, #176]
   1ddbc:	str	q0, [sp, #112]
   1ddc0:	mov	v0.16b, v2.16b
   1ddc4:	str	q2, [sp, #96]
   1ddc8:	mov	v1.16b, v4.16b
   1ddcc:	str	q4, [sp, #128]
   1ddd0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ddd4:	ldr	q4, [sp, #128]
   1ddd8:	mov	v1.16b, v4.16b
   1dddc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1dde0:	ldr	q6, [sp, #112]
   1dde4:	mov	v1.16b, v0.16b
   1dde8:	mov	v0.16b, v6.16b
   1ddec:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ddf0:	ldr	q2, [sp, #96]
   1ddf4:	mov	v1.16b, v2.16b
   1ddf8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ddfc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1de00:	add	x0, x0, #0x2f0
   1de04:	mov	v1.16b, v0.16b
   1de08:	ldr	q0, [x0]
   1de0c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1de10:	fmov	x3, v0.d[1]
   1de14:	fmov	x2, d0
   1de18:	lsr	x1, x3, #32
   1de1c:	add	w1, w19, w1
   1de20:	asr	w0, w1, #16
   1de24:	cmp	w0, #0x0
   1de28:	b.le	1e250 <__powl_finite@GLIBC_2.17+0xfd0>
   1de2c:	fmov	d2, x2
   1de30:	bfi	x3, x1, #32, #32
   1de34:	fmov	v2.d[1], x3
   1de38:	ldr	q1, [sp, #144]
   1de3c:	mov	v0.16b, v2.16b
   1de40:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1de44:	str	q0, [sp, #112]
   1de48:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1de4c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1de50:	add	x0, x0, #0x2f0
   1de54:	ldr	q0, [x0]
   1de58:	str	q0, [sp, #112]
   1de5c:	ldp	x19, x20, [sp, #16]
   1de60:	ldp	x21, x22, [sp, #32]
   1de64:	ldp	x23, x24, [sp, #48]
   1de68:	ldp	x25, x26, [sp, #64]
   1de6c:	ldp	x27, x28, [sp, #80]
   1de70:	ldr	q0, [sp, #112]
   1de74:	ldp	x29, x30, [sp], #272
   1de78:	ret
   1de7c:	cbnz	w20, 1d31c <__powl_finite@GLIBC_2.17+0x9c>
   1de80:	mov	w3, w28
   1de84:	mov	w0, w19
   1de88:	tbnz	w28, #31, 1dedc <__powl_finite@GLIBC_2.17+0xc5c>
   1de8c:	lsr	x2, x24, #32
   1de90:	mov	w1, #0xc0010000            	// #-1073676288
   1de94:	add	w1, w26, w1
   1de98:	orr	w22, w22, w2
   1de9c:	orr	w1, w1, w24
   1dea0:	orr	w1, w1, w22
   1dea4:	cbz	w1, 1e160 <__powl_finite@GLIBC_2.17+0xee0>
   1dea8:	stp	xzr, xzr, [sp, #112]
   1deac:	mov	w1, #0x3ffeffff            	// #1073676287
   1deb0:	cmp	w26, w1
   1deb4:	b.ls	1e194 <__powl_finite@GLIBC_2.17+0xf14>  // b.plast
   1deb8:	tbnz	w0, #31, 1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1debc:	ldr	q0, [sp, #96]
   1dec0:	str	q0, [sp, #112]
   1dec4:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1dec8:	lsr	x2, x24, #32
   1decc:	orr	w0, w22, w2
   1ded0:	orr	w0, w0, w24
   1ded4:	cbz	w0, 1d3b4 <__powl_finite@GLIBC_2.17+0x134>
   1ded8:	b	1d31c <__powl_finite@GLIBC_2.17+0x9c>
   1dedc:	mov	w0, #0x406fffff            	// #1081081855
   1dee0:	mov	w23, #0x2                   	// #2
   1dee4:	cmp	w21, w0
   1dee8:	b.hi	1df50 <__powl_finite@GLIBC_2.17+0xcd0>  // b.pmore
   1deec:	mov	w0, #0x3ffeffff            	// #1073676287
   1def0:	mov	w23, #0x0                   	// #0
   1def4:	cmp	w21, w0
   1def8:	b.ls	1df50 <__powl_finite@GLIBC_2.17+0xcd0>  // b.plast
   1defc:	ldr	q0, [sp, #96]
   1df00:	str	w3, [sp, #112]
   1df04:	bl	22250 <floorf128@@GLIBC_2.27>
   1df08:	ldr	q1, [sp, #96]
   1df0c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1df10:	ldr	w3, [sp, #112]
   1df14:	cbnz	w0, 1df50 <__powl_finite@GLIBC_2.17+0xcd0>
   1df18:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1df1c:	add	x0, x0, #0x330
   1df20:	ldr	q0, [sp, #96]
   1df24:	str	w3, [sp, #128]
   1df28:	ldr	q1, [x0]
   1df2c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1df30:	str	q0, [sp, #112]
   1df34:	bl	22250 <floorf128@@GLIBC_2.27>
   1df38:	ldr	q1, [sp, #112]
   1df3c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1df40:	cmp	w0, #0x0
   1df44:	cset	w23, eq  // eq = none
   1df48:	ldr	w3, [sp, #128]
   1df4c:	add	w23, w23, #0x1
   1df50:	mov	w0, w19
   1df54:	cbnz	w20, 1d3dc <__powl_finite@GLIBC_2.17+0x15c>
   1df58:	cbnz	w27, 1de8c <__powl_finite@GLIBC_2.17+0xc0c>
   1df5c:	mov	w1, #0x3fff0000            	// #1073676288
   1df60:	cmp	w21, w1
   1df64:	b.eq	1e014 <__powl_finite@GLIBC_2.17+0xd94>  // b.none
   1df68:	mov	w1, #0x40000000            	// #1073741824
   1df6c:	cmp	w0, w1
   1df70:	b.eq	1e1d8 <__powl_finite@GLIBC_2.17+0xf58>  // b.none
   1df74:	cmp	w3, #0x0
   1df78:	mov	w1, #0x3ffe0000            	// #1073610752
   1df7c:	ccmp	w0, w1, #0x0, ge  // ge = tcont
   1df80:	b.ne	1d3dc <__powl_finite@GLIBC_2.17+0x15c>  // b.any
   1df84:	stp	x24, x22, [sp, #96]
   1df88:	ldp	x19, x20, [sp, #16]
   1df8c:	ldp	x21, x22, [sp, #32]
   1df90:	ldp	x23, x24, [sp, #48]
   1df94:	ldp	x25, x26, [sp, #64]
   1df98:	ldp	x27, x28, [sp, #80]
   1df9c:	ldr	q0, [sp, #96]
   1dfa0:	ldp	x29, x30, [sp], #272
   1dfa4:	b	1e998 <__sqrtl_finite@GLIBC_2.17>
   1dfa8:	add	w1, w1, #0x600, lsl #12
   1dfac:	cmp	w21, w1
   1dfb0:	mov	w1, #0x3ffeffff            	// #1073676287
   1dfb4:	b.ls	1e118 <__powl_finite@GLIBC_2.17+0xe98>  // b.plast
   1dfb8:	cmp	w26, w1
   1dfbc:	b.hi	1e20c <__powl_finite@GLIBC_2.17+0xf8c>  // b.pmore
   1dfc0:	tbnz	w0, #31, 1e214 <__powl_finite@GLIBC_2.17+0xf94>
   1dfc4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1dfc8:	add	x0, x0, #0x8c0
   1dfcc:	ldr	q1, [x0]
   1dfd0:	mov	v0.16b, v1.16b
   1dfd4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1dfd8:	str	q0, [sp, #112]
   1dfdc:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1dfe0:	tbnz	w0, #31, 1e040 <__powl_finite@GLIBC_2.17+0xdc0>
   1dfe4:	tbz	w3, #31, 1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1dfe8:	mov	w0, #0xc0010000            	// #-1073676288
   1dfec:	add	w0, w26, w0
   1dff0:	orr	w0, w0, w23
   1dff4:	cbnz	w0, 1e230 <__powl_finite@GLIBC_2.17+0xfb0>
   1dff8:	ldr	q1, [sp, #112]
   1dffc:	mov	v0.16b, v1.16b
   1e000:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1e004:	mov	v1.16b, v0.16b
   1e008:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e00c:	str	q0, [sp, #112]
   1e010:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e014:	mov	x2, x24
   1e018:	mov	x3, x22
   1e01c:	stp	x2, x3, [sp, #112]
   1e020:	tbz	w0, #31, 1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e024:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e028:	add	x0, x0, #0x2f0
   1e02c:	ldr	q1, [sp, #112]
   1e030:	ldr	q0, [x0]
   1e034:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e038:	str	q0, [sp, #112]
   1e03c:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e040:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e044:	add	x0, x0, #0x2f0
   1e048:	ldr	q1, [sp, #112]
   1e04c:	str	w3, [sp, #96]
   1e050:	ldr	q0, [x0]
   1e054:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e058:	str	q0, [sp, #112]
   1e05c:	ldr	w3, [sp, #96]
   1e060:	b	1dfe4 <__powl_finite@GLIBC_2.17+0xd64>
   1e064:	stp	x24, x22, [sp, #96]
   1e068:	stp	x24, x22, [sp, #112]
   1e06c:	ldr	q1, [sp, #96]
   1e070:	ldr	q0, [sp, #112]
   1e074:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1e078:	mov	v1.16b, v0.16b
   1e07c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e080:	str	q0, [sp, #112]
   1e084:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e088:	and	w1, w3, #0x7fffffff
   1e08c:	mov	w2, #0x1b8                 	// #440
   1e090:	movk	w2, #0x400d, lsl #16
   1e094:	cmp	w1, w2
   1e098:	b.le	1e174 <__powl_finite@GLIBC_2.17+0xef4>
   1e09c:	ldr	x1, [sp, #96]
   1e0a0:	mov	w2, #0xfe44                	// #65092
   1e0a4:	movk	w2, #0x3ff2, lsl #16
   1e0a8:	add	w2, w2, w3
   1e0ac:	lsr	x3, x1, #32
   1e0b0:	orr	w1, w2, w1
   1e0b4:	orr	w0, w0, w3
   1e0b8:	orr	w0, w1, w0
   1e0bc:	cbnz	w0, 1e0d4 <__powl_finite@GLIBC_2.17+0xe54>
   1e0c0:	ldr	q1, [sp, #128]
   1e0c4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1e0c8:	ldr	q1, [sp, #112]
   1e0cc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1e0d0:	tbnz	w0, #31, 1db38 <__powl_finite@GLIBC_2.17+0x8b8>
   1e0d4:	ldr	q0, [sp, #144]
   1e0d8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e0dc:	add	x0, x0, #0x8c0
   1e0e0:	ldr	q1, [x0]
   1e0e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e0e8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e0ec:	add	x0, x0, #0x8c0
   1e0f0:	ldr	q1, [x0]
   1e0f4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e0f8:	str	q0, [sp, #112]
   1e0fc:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e100:	movi	v6.2d, #0x0
   1e104:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e108:	add	x0, x0, #0x2f0
   1e10c:	mov	v26.16b, v6.16b
   1e110:	ldr	q22, [x0]
   1e114:	b	1d530 <__powl_finite@GLIBC_2.17+0x2b0>
   1e118:	cmp	w26, w1
   1e11c:	b.cc	1e26c <__powl_finite@GLIBC_2.17+0xfec>  // b.lo, b.ul, b.last
   1e120:	mov	w1, #0x3fff0000            	// #1073676288
   1e124:	cmp	w26, w1
   1e128:	b.ls	1d454 <__powl_finite@GLIBC_2.17+0x1d4>  // b.plast
   1e12c:	cmp	w0, #0x0
   1e130:	ldr	q0, [sp, #144]
   1e134:	b.le	1e0d8 <__powl_finite@GLIBC_2.17+0xe58>
   1e138:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e13c:	add	x0, x0, #0x8b0
   1e140:	ldr	q1, [x0]
   1e144:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e148:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e14c:	add	x0, x0, #0x8b0
   1e150:	ldr	q1, [x0]
   1e154:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e158:	str	q0, [sp, #112]
   1e15c:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e160:	ldr	q1, [sp, #96]
   1e164:	mov	v0.16b, v1.16b
   1e168:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1e16c:	str	q0, [sp, #112]
   1e170:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e174:	mov	w0, #0x3ffe0000            	// #1073610752
   1e178:	cmp	w1, w0
   1e17c:	b.gt	1db38 <__powl_finite@GLIBC_2.17+0x8b8>
   1e180:	mov	w19, #0x0                   	// #0
   1e184:	mov	w20, #0x0                   	// #0
   1e188:	b	1db84 <__powl_finite@GLIBC_2.17+0x904>
   1e18c:	ldr	q0, [sp, #144]
   1e190:	b	1e138 <__powl_finite@GLIBC_2.17+0xeb8>
   1e194:	tbz	w0, #31, 1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e198:	ldr	x0, [sp, #96]
   1e19c:	str	x0, [sp, #112]
   1e1a0:	ldr	x0, [sp, #104]
   1e1a4:	eor	x0, x0, #0x8000000000000000
   1e1a8:	str	x0, [sp, #120]
   1e1ac:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e1b0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e1b4:	add	x0, x0, #0x900
   1e1b8:	ldr	q6, [x0]
   1e1bc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e1c0:	add	x0, x0, #0x910
   1e1c4:	ldr	q26, [x0]
   1e1c8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e1cc:	add	x0, x0, #0x920
   1e1d0:	ldr	q22, [x0]
   1e1d4:	b	1d530 <__powl_finite@GLIBC_2.17+0x2b0>
   1e1d8:	stp	x24, x22, [sp, #96]
   1e1dc:	stp	x24, x22, [sp, #112]
   1e1e0:	ldr	q1, [sp, #96]
   1e1e4:	ldr	q0, [sp, #112]
   1e1e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e1ec:	str	q0, [sp, #112]
   1e1f0:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e1f4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e1f8:	add	x0, x0, #0x8e0
   1e1fc:	mov	w25, #0x0                   	// #0
   1e200:	ldr	q0, [x0]
   1e204:	str	q0, [sp, #96]
   1e208:	b	1d4b4 <__powl_finite@GLIBC_2.17+0x234>
   1e20c:	cmp	w0, #0x0
   1e210:	b.le	1dfc4 <__powl_finite@GLIBC_2.17+0xd44>
   1e214:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e218:	add	x0, x0, #0x8b0
   1e21c:	ldr	q1, [x0]
   1e220:	mov	v0.16b, v1.16b
   1e224:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e228:	str	q0, [sp, #112]
   1e22c:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e230:	cmp	w23, #0x1
   1e234:	b.ne	1de5c <__powl_finite@GLIBC_2.17+0xbdc>  // b.any
   1e238:	ldp	x3, x0, [sp, #112]
   1e23c:	eor	x2, x0, #0x8000000000000000
   1e240:	mov	x0, x3
   1e244:	mov	x1, x2
   1e248:	stp	x0, x1, [sp, #112]
   1e24c:	b	1de5c <__powl_finite@GLIBC_2.17+0xbdc>
   1e250:	mov	w0, w20
   1e254:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   1e258:	mov	v1.16b, v0.16b
   1e25c:	str	q0, [sp, #96]
   1e260:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e264:	ldr	q2, [sp, #96]
   1e268:	b	1de38 <__powl_finite@GLIBC_2.17+0xbb8>
   1e26c:	ldr	q0, [sp, #144]
   1e270:	tbz	w0, #31, 1e0d8 <__powl_finite@GLIBC_2.17+0xe58>
   1e274:	b	1e138 <__powl_finite@GLIBC_2.17+0xeb8>
   1e278:	mov	w27, w26
   1e27c:	b	1d39c <__powl_finite@GLIBC_2.17+0x11c>

000000000001e280 <__remainderl_finite@GLIBC_2.17>:
   1e280:	stp	x29, x30, [sp, #-144]!
   1e284:	mov	x29, sp
   1e288:	stp	x19, x20, [sp, #16]
   1e28c:	stp	x21, x22, [sp, #32]
   1e290:	str	q1, [sp, #112]
   1e294:	ldp	x19, x21, [sp, #112]
   1e298:	stp	x23, x24, [sp, #48]
   1e29c:	str	q0, [sp, #96]
   1e2a0:	ldp	x22, x23, [sp, #96]
   1e2a4:	and	x20, x21, #0x7fffffffffffffff
   1e2a8:	orr	x0, x20, x19
   1e2ac:	cbz	x0, 1e3cc <__remainderl_finite@GLIBC_2.17+0x14c>
   1e2b0:	stp	x25, x26, [sp, #64]
   1e2b4:	and	x25, x23, #0x7fffffffffffffff
   1e2b8:	mov	x0, #0x7ffeffffffffffff    	// #9223090561878065151
   1e2bc:	str	x27, [sp, #80]
   1e2c0:	cmp	x25, x0
   1e2c4:	mov	x27, x23
   1e2c8:	b.gt	1e394 <__remainderl_finite@GLIBC_2.17+0x114>
   1e2cc:	mov	x26, x21
   1e2d0:	mov	x24, x19
   1e2d4:	cmp	x20, x0
   1e2d8:	b.le	1e3ec <__remainderl_finite@GLIBC_2.17+0x16c>
   1e2dc:	mov	x0, #0x8001000000000000    	// #-9223090561878065152
   1e2e0:	add	x20, x20, x0
   1e2e4:	orr	x20, x20, x19
   1e2e8:	cbnz	x20, 1e394 <__remainderl_finite@GLIBC_2.17+0x114>
   1e2ec:	and	x0, x23, #0x7fffffffffffffff
   1e2f0:	stp	x22, x0, [sp, #96]
   1e2f4:	and	x21, x21, #0x7fffffffffffffff
   1e2f8:	tst	x26, #0x7ffe000000000000
   1e2fc:	b.ne	1e460 <__remainderl_finite@GLIBC_2.17+0x1e0>  // b.any
   1e300:	ldr	q1, [sp, #96]
   1e304:	mov	v0.16b, v1.16b
   1e308:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1e30c:	stp	x19, x21, [sp, #112]
   1e310:	ldr	q1, [sp, #112]
   1e314:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1e318:	cmp	w0, #0x0
   1e31c:	b.le	1e360 <__remainderl_finite@GLIBC_2.17+0xe0>
   1e320:	stp	x19, x21, [sp, #112]
   1e324:	ldr	q0, [sp, #96]
   1e328:	ldr	q1, [sp, #112]
   1e32c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1e330:	mov	v1.16b, v0.16b
   1e334:	str	q0, [sp, #96]
   1e338:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1e33c:	stp	x19, x21, [sp, #112]
   1e340:	ldr	q1, [sp, #112]
   1e344:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1e348:	tbnz	w0, #31, 1e360 <__remainderl_finite@GLIBC_2.17+0xe0>
   1e34c:	stp	x19, x21, [sp, #112]
   1e350:	ldr	q0, [sp, #96]
   1e354:	ldr	q1, [sp, #112]
   1e358:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1e35c:	str	q0, [sp, #96]
   1e360:	ldp	x0, x1, [sp, #96]
   1e364:	and	x27, x27, #0x8000000000000000
   1e368:	ldr	x2, [sp, #104]
   1e36c:	ldp	x19, x20, [sp, #16]
   1e370:	eor	x1, x27, x2
   1e374:	fmov	d0, x0
   1e378:	ldp	x21, x22, [sp, #32]
   1e37c:	fmov	v0.d[1], x1
   1e380:	ldp	x23, x24, [sp, #48]
   1e384:	ldp	x25, x26, [sp, #64]
   1e388:	ldr	x27, [sp, #80]
   1e38c:	ldp	x29, x30, [sp], #144
   1e390:	ret
   1e394:	stp	x19, x21, [sp, #96]
   1e398:	stp	x22, x23, [sp, #112]
   1e39c:	ldr	q1, [sp, #96]
   1e3a0:	ldr	q0, [sp, #112]
   1e3a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e3a8:	mov	v1.16b, v0.16b
   1e3ac:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e3b0:	ldp	x19, x20, [sp, #16]
   1e3b4:	ldp	x21, x22, [sp, #32]
   1e3b8:	ldp	x23, x24, [sp, #48]
   1e3bc:	ldp	x25, x26, [sp, #64]
   1e3c0:	ldr	x27, [sp, #80]
   1e3c4:	ldp	x29, x30, [sp], #144
   1e3c8:	ret
   1e3cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e3d0:	mov	v1.16b, v0.16b
   1e3d4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e3d8:	ldp	x19, x20, [sp, #16]
   1e3dc:	ldp	x21, x22, [sp, #32]
   1e3e0:	ldp	x23, x24, [sp, #48]
   1e3e4:	ldp	x29, x30, [sp], #144
   1e3e8:	ret
   1e3ec:	mov	x0, #0x7ffdffffffffffff    	// #9222809086901354495
   1e3f0:	mov	x1, x22
   1e3f4:	cmp	x20, x0
   1e3f8:	mov	x0, x23
   1e3fc:	b.gt	1e424 <__remainderl_finite@GLIBC_2.17+0x1a4>
   1e400:	stp	x19, x21, [sp, #96]
   1e404:	ldr	q0, [sp, #96]
   1e408:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1e40c:	stp	x22, x23, [sp, #96]
   1e410:	mov	v1.16b, v0.16b
   1e414:	ldr	q0, [sp, #96]
   1e418:	bl	146b0 <__fmodl_finite@GLIBC_2.17>
   1e41c:	str	q0, [sp, #96]
   1e420:	ldp	x1, x0, [sp, #96]
   1e424:	sub	x20, x25, x20
   1e428:	sub	x22, x22, x24
   1e42c:	orr	x22, x20, x22
   1e430:	cbnz	x22, 1e4c8 <__remainderl_finite@GLIBC_2.17+0x248>
   1e434:	movi	v1.2d, #0x0
   1e438:	stp	x1, x0, [sp, #96]
   1e43c:	ldr	q0, [sp, #96]
   1e440:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e444:	ldp	x19, x20, [sp, #16]
   1e448:	ldp	x21, x22, [sp, #32]
   1e44c:	ldp	x23, x24, [sp, #48]
   1e450:	ldp	x25, x26, [sp, #64]
   1e454:	ldr	x27, [sp, #80]
   1e458:	ldp	x29, x30, [sp], #144
   1e45c:	ret
   1e460:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e464:	add	x0, x0, #0x330
   1e468:	stp	x19, x21, [sp, #112]
   1e46c:	ldr	q1, [x0]
   1e470:	ldr	q0, [sp, #112]
   1e474:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e478:	mov	v2.16b, v0.16b
   1e47c:	ldr	q0, [sp, #96]
   1e480:	mov	v1.16b, v2.16b
   1e484:	str	q2, [sp, #128]
   1e488:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1e48c:	cmp	w0, #0x0
   1e490:	b.le	1e360 <__remainderl_finite@GLIBC_2.17+0xe0>
   1e494:	stp	x19, x21, [sp, #112]
   1e498:	ldr	q0, [sp, #96]
   1e49c:	ldr	q1, [sp, #112]
   1e4a0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1e4a4:	mov	v4.16b, v0.16b
   1e4a8:	ldr	q2, [sp, #128]
   1e4ac:	mov	v1.16b, v4.16b
   1e4b0:	str	q4, [sp, #96]
   1e4b4:	mov	v0.16b, v2.16b
   1e4b8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1e4bc:	cmp	w0, #0x0
   1e4c0:	b.gt	1e360 <__remainderl_finite@GLIBC_2.17+0xe0>
   1e4c4:	b	1e34c <__remainderl_finite@GLIBC_2.17+0xcc>
   1e4c8:	mov	x22, x1
   1e4cc:	mov	x23, x0
   1e4d0:	b	1e2ec <__remainderl_finite@GLIBC_2.17+0x6c>
   1e4d4:	nop
   1e4d8:	stp	x29, x30, [sp, #-48]!
   1e4dc:	mov	x29, sp
   1e4e0:	str	q1, [sp, #16]
   1e4e4:	str	q0, [sp, #32]
   1e4e8:	mov	v0.16b, v1.16b
   1e4ec:	bl	22df0 <rintf128@@GLIBC_2.27>
   1e4f0:	ldr	q1, [sp, #16]
   1e4f4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1e4f8:	ldr	q1, [sp, #16]
   1e4fc:	mov	v0.16b, v1.16b
   1e500:	cbnz	w0, 1e538 <__remainderl_finite@GLIBC_2.17+0x2b8>
   1e504:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e508:	add	x0, x0, #0xac0
   1e50c:	ldr	q1, [x0]
   1e510:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1e514:	cmp	w0, #0x0
   1e518:	ldr	q0, [sp, #32]
   1e51c:	b.le	1e52c <__remainderl_finite@GLIBC_2.17+0x2ac>
   1e520:	ldp	x29, x30, [sp], #48
   1e524:	mov	w0, #0xfde8                	// #65000
   1e528:	b	25760 <modff128@@GLIBC_2.27+0x178>
   1e52c:	ldp	x29, x30, [sp], #48
   1e530:	mov	w0, #0xffff0218            	// #-65000
   1e534:	b	25760 <modff128@@GLIBC_2.27+0x178>
   1e538:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1e53c:	mov	v1.16b, v0.16b
   1e540:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e544:	ldp	x29, x30, [sp], #48
   1e548:	ret
   1e54c:	nop

000000000001e550 <__scalbl_finite@GLIBC_2.17>:
   1e550:	stp	x29, x30, [sp, #-112]!
   1e554:	mov	x29, sp
   1e558:	str	q0, [sp, #64]
   1e55c:	ldp	x1, x0, [sp, #64]
   1e560:	stp	x1, x0, [sp, #80]
   1e564:	str	q1, [sp, #96]
   1e568:	mov	v1.16b, v0.16b
   1e56c:	ldr	q0, [sp, #80]
   1e570:	stp	x19, x20, [sp, #16]
   1e574:	stp	x21, x22, [sp, #32]
   1e578:	mov	x22, x0
   1e57c:	str	x23, [sp, #48]
   1e580:	mov	x23, x1
   1e584:	ldp	x19, x20, [sp, #96]
   1e588:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   1e58c:	cbnz	w0, 1e684 <__scalbl_finite@GLIBC_2.17+0x134>
   1e590:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e594:	add	x0, x0, #0x300
   1e598:	and	x21, x20, #0x7fffffffffffffff
   1e59c:	stp	x19, x21, [sp, #64]
   1e5a0:	ldr	q1, [x0]
   1e5a4:	ldr	q0, [sp, #64]
   1e5a8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   1e5ac:	cbnz	w0, 1e654 <__scalbl_finite@GLIBC_2.17+0x104>
   1e5b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e5b4:	add	x0, x0, #0x300
   1e5b8:	stp	x19, x21, [sp, #64]
   1e5bc:	ldr	q1, [x0]
   1e5c0:	ldr	q0, [sp, #64]
   1e5c4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1e5c8:	cmp	w0, #0x0
   1e5cc:	b.gt	1e654 <__scalbl_finite@GLIBC_2.17+0x104>
   1e5d0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e5d4:	add	x0, x0, #0xad0
   1e5d8:	stp	x19, x21, [sp, #64]
   1e5dc:	ldr	q1, [x0]
   1e5e0:	ldr	q0, [sp, #64]
   1e5e4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1e5e8:	tbz	w0, #31, 1e630 <__scalbl_finite@GLIBC_2.17+0xe0>
   1e5ec:	stp	x19, x20, [sp, #64]
   1e5f0:	ldr	q0, [sp, #64]
   1e5f4:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   1e5f8:	mov	w21, w0
   1e5fc:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1e600:	stp	x19, x20, [sp, #64]
   1e604:	ldr	q1, [sp, #64]
   1e608:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1e60c:	cbnz	w0, 1e630 <__scalbl_finite@GLIBC_2.17+0xe0>
   1e610:	stp	x23, x22, [sp, #64]
   1e614:	mov	w0, w21
   1e618:	ldp	x19, x20, [sp, #16]
   1e61c:	ldp	x21, x22, [sp, #32]
   1e620:	ldr	x23, [sp, #48]
   1e624:	ldr	q0, [sp, #64]
   1e628:	ldp	x29, x30, [sp], #112
   1e62c:	b	25760 <modff128@@GLIBC_2.27+0x178>
   1e630:	stp	x19, x20, [sp, #64]
   1e634:	stp	x23, x22, [sp, #80]
   1e638:	ldr	q1, [sp, #64]
   1e63c:	ldp	x19, x20, [sp, #16]
   1e640:	ldp	x21, x22, [sp, #32]
   1e644:	ldr	x23, [sp, #48]
   1e648:	ldr	q0, [sp, #80]
   1e64c:	ldp	x29, x30, [sp], #112
   1e650:	b	1e4d8 <__remainderl_finite@GLIBC_2.17+0x258>
   1e654:	stp	x19, x20, [sp, #64]
   1e658:	stp	x19, x20, [sp, #80]
   1e65c:	ldr	q1, [sp, #64]
   1e660:	ldr	q0, [sp, #80]
   1e664:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   1e668:	cbnz	w0, 1e684 <__scalbl_finite@GLIBC_2.17+0x134>
   1e66c:	movi	v1.2d, #0x0
   1e670:	stp	x19, x20, [sp, #64]
   1e674:	ldr	q0, [sp, #64]
   1e678:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1e67c:	cmp	w0, #0x0
   1e680:	b.le	1e6bc <__scalbl_finite@GLIBC_2.17+0x16c>
   1e684:	stp	x19, x20, [sp, #64]
   1e688:	stp	x23, x22, [sp, #80]
   1e68c:	ldr	q1, [sp, #64]
   1e690:	ldr	q0, [sp, #80]
   1e694:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e698:	str	q0, [sp, #64]
   1e69c:	ldp	x1, x0, [sp, #64]
   1e6a0:	stp	x1, x0, [sp, #64]
   1e6a4:	ldp	x19, x20, [sp, #16]
   1e6a8:	ldp	x21, x22, [sp, #32]
   1e6ac:	ldr	x23, [sp, #48]
   1e6b0:	ldr	q0, [sp, #64]
   1e6b4:	ldp	x29, x30, [sp], #112
   1e6b8:	ret
   1e6bc:	movi	v1.2d, #0x0
   1e6c0:	stp	x23, x22, [sp, #64]
   1e6c4:	ldr	q0, [sp, #64]
   1e6c8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1e6cc:	cbz	w0, 1e6f4 <__scalbl_finite@GLIBC_2.17+0x1a4>
   1e6d0:	eor	x0, x22, #0x8000000000000000
   1e6d4:	stp	x19, x20, [sp, #64]
   1e6d8:	stp	x23, x0, [sp, #80]
   1e6dc:	ldr	q1, [sp, #64]
   1e6e0:	ldr	q0, [sp, #80]
   1e6e4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e6e8:	str	q0, [sp, #64]
   1e6ec:	ldp	x1, x0, [sp, #64]
   1e6f0:	b	1e6a0 <__scalbl_finite@GLIBC_2.17+0x150>
   1e6f4:	mov	x1, x23
   1e6f8:	mov	x0, x22
   1e6fc:	b	1e6a0 <__scalbl_finite@GLIBC_2.17+0x150>

000000000001e700 <__sinhl_finite@GLIBC_2.17>:
   1e700:	stp	x29, x30, [sp, #-112]!
   1e704:	mov	w1, #0x7ffeffff            	// #2147418111
   1e708:	mov	x29, sp
   1e70c:	str	q0, [sp, #48]
   1e710:	ldr	x0, [sp, #56]
   1e714:	stp	x19, x20, [sp, #16]
   1e718:	str	x21, [sp, #32]
   1e71c:	ubfx	x19, x0, #32, #31
   1e720:	cmp	w19, w1
   1e724:	ldp	x20, x21, [sp, #48]
   1e728:	b.hi	1e8dc <__sinhl_finite@GLIBC_2.17+0x1dc>  // b.pmore
   1e72c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e730:	add	x1, x1, #0x330
   1e734:	lsr	x0, x0, #32
   1e738:	ldr	q0, [x1]
   1e73c:	str	q0, [sp, #64]
   1e740:	tbnz	w0, #31, 1e8b4 <__sinhl_finite@GLIBC_2.17+0x1b4>
   1e744:	mov	w0, #0x4000                	// #16384
   1e748:	bfi	x21, x19, #32, #32
   1e74c:	movk	w0, #0x4004, lsl #16
   1e750:	cmp	w19, w0
   1e754:	b.ls	1e7b4 <__sinhl_finite@GLIBC_2.17+0xb4>  // b.plast
   1e758:	fmov	d0, x20
   1e75c:	mov	w0, #0x62e3                	// #25315
   1e760:	movk	w0, #0x400c, lsl #16
   1e764:	cmp	w19, w0
   1e768:	fmov	v0.d[1], x21
   1e76c:	b.ls	1e958 <__sinhl_finite@GLIBC_2.17+0x258>  // b.plast
   1e770:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e774:	add	x0, x0, #0xf80
   1e778:	str	q0, [sp, #80]
   1e77c:	ldr	q1, [x0]
   1e780:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1e784:	cmp	w0, #0x0
   1e788:	ldr	q0, [sp, #80]
   1e78c:	b.le	1e968 <__sinhl_finite@GLIBC_2.17+0x268>
   1e790:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e794:	add	x0, x0, #0xae0
   1e798:	ldr	q0, [sp, #48]
   1e79c:	ldr	q1, [x0]
   1e7a0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e7a4:	ldp	x19, x20, [sp, #16]
   1e7a8:	ldr	x21, [sp, #32]
   1e7ac:	ldp	x29, x30, [sp], #112
   1e7b0:	ret
   1e7b4:	mov	w0, #0x3fc5ffff            	// #1069940735
   1e7b8:	cmp	w19, w0
   1e7bc:	b.hi	1e8f4 <__sinhl_finite@GLIBC_2.17+0x1f4>  // b.pmore
   1e7c0:	ldr	x0, [sp, #48]
   1e7c4:	str	x0, [sp, #80]
   1e7c8:	ldr	x0, [sp, #56]
   1e7cc:	and	x0, x0, #0x7fffffffffffffff
   1e7d0:	str	x0, [sp, #88]
   1e7d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e7d8:	add	x0, x0, #0xeb0
   1e7dc:	ldr	q0, [sp, #80]
   1e7e0:	ldr	q1, [x0]
   1e7e4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1e7e8:	tbz	w0, #31, 1e7f8 <__sinhl_finite@GLIBC_2.17+0xf8>
   1e7ec:	ldr	q1, [sp, #48]
   1e7f0:	mov	v0.16b, v1.16b
   1e7f4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e7f8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1e7fc:	add	x0, x0, #0xae0
   1e800:	ldr	q0, [sp, #48]
   1e804:	ldr	q1, [x0]
   1e808:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1e80c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e810:	add	x0, x0, #0x2f0
   1e814:	ldr	q1, [x0]
   1e818:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1e81c:	cmp	w0, #0x0
   1e820:	ldr	q0, [sp, #48]
   1e824:	b.gt	1e7a4 <__sinhl_finite@GLIBC_2.17+0xa4>
   1e828:	fmov	d0, x20
   1e82c:	fmov	v0.d[1], x21
   1e830:	bl	21db8 <expm1f128@@GLIBC_2.27>
   1e834:	mov	v2.16b, v0.16b
   1e838:	mov	v1.16b, v2.16b
   1e83c:	mov	v0.16b, v2.16b
   1e840:	str	q2, [sp, #48]
   1e844:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1e848:	ldr	q2, [sp, #48]
   1e84c:	str	q0, [sp, #96]
   1e850:	mov	v1.16b, v2.16b
   1e854:	mov	v0.16b, v2.16b
   1e858:	str	q2, [sp, #80]
   1e85c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e860:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e864:	add	x0, x0, #0x2f0
   1e868:	ldr	q2, [sp, #80]
   1e86c:	str	q0, [sp, #48]
   1e870:	ldr	q1, [x0]
   1e874:	mov	v0.16b, v2.16b
   1e878:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1e87c:	mov	v1.16b, v0.16b
   1e880:	ldr	q6, [sp, #48]
   1e884:	mov	v0.16b, v6.16b
   1e888:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e88c:	ldr	q4, [sp, #96]
   1e890:	mov	v1.16b, v0.16b
   1e894:	mov	v0.16b, v4.16b
   1e898:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1e89c:	ldr	q1, [sp, #64]
   1e8a0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e8a4:	ldp	x19, x20, [sp, #16]
   1e8a8:	ldr	x21, [sp, #32]
   1e8ac:	ldp	x29, x30, [sp], #112
   1e8b0:	ret
   1e8b4:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   1e8b8:	add	x0, x0, #0xef0
   1e8bc:	bfi	x21, x19, #32, #32
   1e8c0:	ldr	q0, [x0]
   1e8c4:	mov	w0, #0x4000                	// #16384
   1e8c8:	movk	w0, #0x4004, lsl #16
   1e8cc:	cmp	w19, w0
   1e8d0:	str	q0, [sp, #64]
   1e8d4:	b.hi	1e758 <__sinhl_finite@GLIBC_2.17+0x58>  // b.pmore
   1e8d8:	b	1e7b4 <__sinhl_finite@GLIBC_2.17+0xb4>
   1e8dc:	mov	v1.16b, v0.16b
   1e8e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1e8e4:	ldp	x19, x20, [sp, #16]
   1e8e8:	ldr	x21, [sp, #32]
   1e8ec:	ldp	x29, x30, [sp], #112
   1e8f0:	ret
   1e8f4:	fmov	d0, x20
   1e8f8:	fmov	v0.d[1], x21
   1e8fc:	bl	21db8 <expm1f128@@GLIBC_2.27>
   1e900:	mov	v2.16b, v0.16b
   1e904:	mov	w0, #0x3ffeffff            	// #1073676287
   1e908:	cmp	w19, w0
   1e90c:	b.ls	1e838 <__sinhl_finite@GLIBC_2.17+0x138>  // b.plast
   1e910:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e914:	add	x0, x0, #0x2f0
   1e918:	str	q0, [sp, #48]
   1e91c:	ldr	q1, [x0]
   1e920:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1e924:	mov	v1.16b, v0.16b
   1e928:	ldr	q2, [sp, #48]
   1e92c:	mov	v0.16b, v2.16b
   1e930:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1e934:	ldr	q2, [sp, #48]
   1e938:	mov	v1.16b, v2.16b
   1e93c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1e940:	ldr	q1, [sp, #64]
   1e944:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e948:	ldp	x19, x20, [sp, #16]
   1e94c:	ldr	x21, [sp, #32]
   1e950:	ldp	x29, x30, [sp], #112
   1e954:	ret
   1e958:	bl	141f0 <__expl_finite@GLIBC_2.17>
   1e95c:	ldr	q1, [sp, #64]
   1e960:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e964:	b	1e7a4 <__sinhl_finite@GLIBC_2.17+0xa4>
   1e968:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1e96c:	add	x0, x0, #0x330
   1e970:	ldr	q1, [x0]
   1e974:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e978:	bl	141f0 <__expl_finite@GLIBC_2.17>
   1e97c:	mov	v1.16b, v0.16b
   1e980:	ldr	q0, [sp, #64]
   1e984:	str	q1, [sp, #48]
   1e988:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e98c:	ldr	q1, [sp, #48]
   1e990:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1e994:	b	1e7a4 <__sinhl_finite@GLIBC_2.17+0xa4>

000000000001e998 <__sqrtl_finite@GLIBC_2.17>:
   1e998:	sub	sp, sp, #0x10
   1e99c:	str	q0, [sp]
   1e9a0:	ldp	x5, x1, [sp]
   1e9a4:	mrs	x11, fpcr
   1e9a8:	lsr	x2, x1, #63
   1e9ac:	and	w6, w2, #0xff
   1e9b0:	mov	x4, x2
   1e9b4:	ubfx	x0, x1, #0, #48
   1e9b8:	ubfx	x2, x1, #48, #15
   1e9bc:	cbz	w2, 1eb4c <__sqrtl_finite@GLIBC_2.17+0x1b4>
   1e9c0:	mov	w3, #0x7fff                	// #32767
   1e9c4:	cmp	w2, w3
   1e9c8:	b.eq	1eb1c <__sqrtl_finite@GLIBC_2.17+0x184>  // b.none
   1e9cc:	mov	x1, #0xffffffffffffc001    	// #-16383
   1e9d0:	extr	x0, x0, x5, #61
   1e9d4:	and	x2, x2, #0xffff
   1e9d8:	orr	x0, x0, #0x8000000000000
   1e9dc:	add	x2, x2, x1
   1e9e0:	lsl	x1, x5, #3
   1e9e4:	cbnz	x4, 1eb28 <__sqrtl_finite@GLIBC_2.17+0x190>
   1e9e8:	tbz	w2, #0, 1e9f8 <__sqrtl_finite@GLIBC_2.17+0x60>
   1e9ec:	lsr	x3, x1, #63
   1e9f0:	lsl	x1, x1, #1
   1e9f4:	add	x0, x3, x0, lsl #1
   1e9f8:	asr	x10, x2, #1
   1e9fc:	mov	w3, #0x34                  	// #52
   1ea00:	mov	x2, #0x8000000000000       	// #2251799813685248
   1ea04:	mov	x4, #0x0                   	// #0
   1ea08:	mov	x9, #0x0                   	// #0
   1ea0c:	nop
   1ea10:	add	x5, x4, x2
   1ea14:	lsr	x6, x1, #63
   1ea18:	cmp	x5, x0
   1ea1c:	b.hi	1ea2c <__sqrtl_finite@GLIBC_2.17+0x94>  // b.pmore
   1ea20:	sub	x0, x0, x5
   1ea24:	add	x4, x5, x2
   1ea28:	add	x9, x9, x2
   1ea2c:	add	x0, x6, x0, lsl #1
   1ea30:	lsl	x1, x1, #1
   1ea34:	lsr	x2, x2, #1
   1ea38:	subs	w3, w3, #0x1
   1ea3c:	b.ne	1ea10 <__sqrtl_finite@GLIBC_2.17+0x78>  // b.any
   1ea40:	mov	w6, #0x3d                  	// #61
   1ea44:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   1ea48:	mov	x5, #0x0                   	// #0
   1ea4c:	mov	x7, #0x0                   	// #0
   1ea50:	cmp	x0, x4
   1ea54:	add	x3, x5, x2
   1ea58:	b.hi	1ea64 <__sqrtl_finite@GLIBC_2.17+0xcc>  // b.pmore
   1ea5c:	ccmp	x3, x1, #0x2, eq  // eq = none
   1ea60:	b.hi	1ea80 <__sqrtl_finite@GLIBC_2.17+0xe8>  // b.pmore
   1ea64:	adds	x5, x3, x2
   1ea68:	add	x7, x7, x2
   1ea6c:	cinc	x8, x4, cs  // cs = hs, nlast
   1ea70:	cmp	x1, x3
   1ea74:	sbc	x0, x0, x4
   1ea78:	sub	x1, x1, x3
   1ea7c:	mov	x4, x8
   1ea80:	lsr	x3, x1, #63
   1ea84:	lsr	x2, x2, #1
   1ea88:	subs	w6, w6, #0x1
   1ea8c:	add	x0, x3, x0, lsl #1
   1ea90:	lsl	x1, x1, #1
   1ea94:	b.ne	1ea50 <__sqrtl_finite@GLIBC_2.17+0xb8>  // b.any
   1ea98:	orr	x2, x0, x1
   1ea9c:	cbz	x2, 1eab0 <__sqrtl_finite@GLIBC_2.17+0x118>
   1eaa0:	cmp	x4, x0
   1eaa4:	b.cs	1ec14 <__sqrtl_finite@GLIBC_2.17+0x27c>  // b.hs, b.nlast
   1eaa8:	orr	x7, x7, #0x4
   1eaac:	orr	x7, x7, #0x1
   1eab0:	tst	x7, #0x7
   1eab4:	mov	w4, #0x0                   	// #0
   1eab8:	b.eq	1ead0 <__sqrtl_finite@GLIBC_2.17+0x138>  // b.none
   1eabc:	ands	w11, w11, #0xc00000
   1eac0:	b.eq	1ec24 <__sqrtl_finite@GLIBC_2.17+0x28c>  // b.none
   1eac4:	cmp	w11, #0x400, lsl #12
   1eac8:	mov	w4, #0x10                  	// #16
   1eacc:	b.eq	1ec04 <__sqrtl_finite@GLIBC_2.17+0x26c>  // b.none
   1ead0:	tbz	x9, #52, 1ebd4 <__sqrtl_finite@GLIBC_2.17+0x23c>
   1ead4:	and	x9, x9, #0xffefffffffffffff
   1ead8:	add	x0, x10, #0x4, lsl #12
   1eadc:	lsr	x1, x9, #3
   1eae0:	mov	x3, #0x0                   	// #0
   1eae4:	extr	x2, x9, x7, #3
   1eae8:	bfxil	x3, x1, #0, #48
   1eaec:	fmov	d2, x2
   1eaf0:	bfi	x3, x0, #48, #16
   1eaf4:	fmov	v2.d[1], x3
   1eaf8:	cbz	w4, 1eb40 <__sqrtl_finite@GLIBC_2.17+0x1a8>
   1eafc:	mov	w0, #0x7f7fffff            	// #2139095039
   1eb00:	fmov	s3, #1.000000000000000000e+00
   1eb04:	fmov	s1, w0
   1eb08:	fsub	s0, s1, s3
   1eb0c:	mrs	x0, fpsr
   1eb10:	mov	v0.16b, v2.16b
   1eb14:	add	sp, sp, #0x10
   1eb18:	ret
   1eb1c:	orr	x1, x0, x5
   1eb20:	cbnz	x1, 1ebac <__sqrtl_finite@GLIBC_2.17+0x214>
   1eb24:	cbz	x4, 1eb8c <__sqrtl_finite@GLIBC_2.17+0x1f4>
   1eb28:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1eb2c:	add	x0, x0, #0xaf0
   1eb30:	ldr	q2, [x0]
   1eb34:	movi	v1.2s, #0x0
   1eb38:	fdiv	s0, s1, s1
   1eb3c:	mrs	x0, fpsr
   1eb40:	mov	v0.16b, v2.16b
   1eb44:	add	sp, sp, #0x10
   1eb48:	ret
   1eb4c:	orr	x1, x0, x5
   1eb50:	cbz	x1, 1eb8c <__sqrtl_finite@GLIBC_2.17+0x1f4>
   1eb54:	cbz	x0, 1ebe0 <__sqrtl_finite@GLIBC_2.17+0x248>
   1eb58:	clz	x3, x0
   1eb5c:	sub	x6, x3, #0xf
   1eb60:	add	w1, w6, #0x3
   1eb64:	mov	w2, #0x3d                  	// #61
   1eb68:	sub	w2, w2, w6
   1eb6c:	lsl	x0, x0, x1
   1eb70:	lsr	x2, x5, x2
   1eb74:	orr	x0, x2, x0
   1eb78:	lsl	x1, x5, x1
   1eb7c:	mov	x2, #0xffffffffffffc011    	// #-16367
   1eb80:	sub	x2, x2, x3
   1eb84:	cbnz	x4, 1eb28 <__sqrtl_finite@GLIBC_2.17+0x190>
   1eb88:	b	1e9e8 <__sqrtl_finite@GLIBC_2.17+0x50>
   1eb8c:	lsl	x0, x2, #48
   1eb90:	mov	x2, #0x0                   	// #0
   1eb94:	fmov	d2, x2
   1eb98:	orr	x3, x0, x4, lsl #63
   1eb9c:	add	sp, sp, #0x10
   1eba0:	fmov	v2.d[1], x3
   1eba4:	mov	v0.16b, v2.16b
   1eba8:	ret
   1ebac:	orr	x1, x0, #0x800000000000
   1ebb0:	mov	x3, #0x0                   	// #0
   1ebb4:	fmov	d2, x5
   1ebb8:	tst	x0, #0x800000000000
   1ebbc:	bfxil	x3, x1, #0, #48
   1ebc0:	orr	x3, x3, #0x7fff000000000000
   1ebc4:	bfi	x3, x6, #63, #1
   1ebc8:	fmov	v2.d[1], x3
   1ebcc:	b.eq	1eb34 <__sqrtl_finite@GLIBC_2.17+0x19c>  // b.none
   1ebd0:	b	1eb40 <__sqrtl_finite@GLIBC_2.17+0x1a8>
   1ebd4:	mov	x0, #0x3fff                	// #16383
   1ebd8:	add	x0, x10, x0
   1ebdc:	b	1eadc <__sqrtl_finite@GLIBC_2.17+0x144>
   1ebe0:	clz	x2, x5
   1ebe4:	add	x6, x2, #0x31
   1ebe8:	add	x3, x2, #0x40
   1ebec:	cmp	x6, #0x3c
   1ebf0:	b.le	1eb60 <__sqrtl_finite@GLIBC_2.17+0x1c8>
   1ebf4:	sub	w0, w6, #0x3d
   1ebf8:	mov	x1, #0x0                   	// #0
   1ebfc:	lsl	x0, x5, x0
   1ec00:	b	1eb7c <__sqrtl_finite@GLIBC_2.17+0x1e4>
   1ec04:	adds	x7, x7, #0x8
   1ec08:	mov	w4, #0x10                  	// #16
   1ec0c:	cinc	x9, x9, cs  // cs = hs, nlast
   1ec10:	b	1ead0 <__sqrtl_finite@GLIBC_2.17+0x138>
   1ec14:	ccmp	x5, x1, #0x2, eq  // eq = none
   1ec18:	b.cs	1eaac <__sqrtl_finite@GLIBC_2.17+0x114>  // b.hs, b.nlast
   1ec1c:	orr	x7, x7, #0x4
   1ec20:	b	1eaac <__sqrtl_finite@GLIBC_2.17+0x114>
   1ec24:	and	x0, x7, #0xf
   1ec28:	mov	w4, #0x10                  	// #16
   1ec2c:	cmp	x0, #0x4
   1ec30:	b.eq	1ead0 <__sqrtl_finite@GLIBC_2.17+0x138>  // b.none
   1ec34:	adds	x7, x7, #0x4
   1ec38:	cinc	x9, x9, cs  // cs = hs, nlast
   1ec3c:	b	1ead0 <__sqrtl_finite@GLIBC_2.17+0x138>
   1ec40:	stp	x29, x30, [sp, #-240]!
   1ec44:	mov	x29, sp
   1ec48:	stp	x23, x24, [sp, #48]
   1ec4c:	adrp	x23, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1ec50:	ldr	x1, [x23, #4032]
   1ec54:	stp	x19, x20, [sp, #16]
   1ec58:	mov	x19, x0
   1ec5c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1ec60:	add	x0, x0, #0x330
   1ec64:	ldr	x2, [x1]
   1ec68:	str	x2, [sp, #232]
   1ec6c:	mov	x2, #0x0                   	// #0
   1ec70:	stp	x21, x22, [sp, #32]
   1ec74:	ldr	q1, [x0]
   1ec78:	str	q0, [sp, #80]
   1ec7c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1ec80:	ldp	x21, x20, [sp, #80]
   1ec84:	str	x21, [sp, #80]
   1ec88:	tbnz	w0, #31, 1efe4 <__sqrtl_finite@GLIBC_2.17+0x64c>
   1ec8c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1ec90:	add	x0, x0, #0x920
   1ec94:	str	x20, [sp, #88]
   1ec98:	ldr	q1, [x0]
   1ec9c:	ldr	q0, [sp, #80]
   1eca0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1eca4:	cmp	w0, #0x0
   1eca8:	b.le	1f020 <__sqrtl_finite@GLIBC_2.17+0x688>
   1ecac:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1ecb0:	add	x0, x0, #0xb00
   1ecb4:	stp	x21, x20, [sp, #80]
   1ecb8:	ldr	q1, [x0]
   1ecbc:	ldr	q0, [sp, #80]
   1ecc0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1ecc4:	tbnz	w0, #31, 1eef4 <__sqrtl_finite@GLIBC_2.17+0x55c>
   1ecc8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1eccc:	add	x0, x0, #0xb10
   1ecd0:	stp	x21, x20, [sp, #80]
   1ecd4:	ldr	q1, [x0]
   1ecd8:	ldr	q0, [sp, #80]
   1ecdc:	stp	xzr, xzr, [sp, #208]
   1ece0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1ece4:	tbnz	w0, #31, 1f03c <__sqrtl_finite@GLIBC_2.17+0x6a4>
   1ece8:	movi	v0.2d, #0x0
   1ecec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1ecf0:	add	x0, x0, #0x2f0
   1ecf4:	ldr	q1, [x0]
   1ecf8:	str	q0, [sp, #128]
   1ecfc:	str	q0, [sp, #176]
   1ed00:	str	q1, [sp, #160]
   1ed04:	stp	x21, x20, [sp, #80]
   1ed08:	ldr	q0, [sp, #80]
   1ed0c:	bl	23e20 <roundf128@@GLIBC_2.27>
   1ed10:	stp	x21, x20, [sp, #80]
   1ed14:	mov	v1.16b, v0.16b
   1ed18:	str	q0, [sp, #144]
   1ed1c:	ldr	q0, [sp, #80]
   1ed20:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ed24:	stp	x21, x20, [sp, #80]
   1ed28:	add	x0, sp, #0xcc
   1ed2c:	str	q0, [sp, #112]
   1ed30:	ldr	q0, [sp, #80]
   1ed34:	bl	25920 <frexpf128@@GLIBC_2.27>
   1ed38:	str	q0, [sp, #96]
   1ed3c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1ed40:	add	x0, x0, #0x5b0
   1ed44:	ldr	q1, [x0]
   1ed48:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1ed4c:	ldr	q2, [sp, #144]
   1ed50:	tbnz	w0, #31, 1efbc <__sqrtl_finite@GLIBC_2.17+0x624>
   1ed54:	ldr	w22, [sp, #204]
   1ed58:	mov	v0.16b, v2.16b
   1ed5c:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   1ed60:	adrp	x1, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1ed64:	add	x1, x1, #0xb20
   1ed68:	stp	x21, x20, [sp, #80]
   1ed6c:	mul	w0, w0, w22
   1ed70:	ldr	q0, [sp, #96]
   1ed74:	ldr	q4, [x1]
   1ed78:	ldr	q1, [sp, #80]
   1ed7c:	str	w0, [x19]
   1ed80:	adrp	x19, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1ed84:	str	q4, [sp, #144]
   1ed88:	add	x19, x19, #0xb80
   1ed8c:	bl	1d280 <__powl_finite@GLIBC_2.17>
   1ed90:	str	q0, [sp, #80]
   1ed94:	ldr	w0, [sp, #204]
   1ed98:	sub	x22, x19, #0xd0
   1ed9c:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1eda0:	ldr	q1, [sp, #112]
   1eda4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1eda8:	bl	2f338 <__exp2l_finite@GLIBC_2.17>
   1edac:	mov	v1.16b, v0.16b
   1edb0:	ldr	q2, [sp, #80]
   1edb4:	mov	v0.16b, v2.16b
   1edb8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1edbc:	eor	x0, x20, #0x8000000000000000
   1edc0:	stp	x21, x0, [sp, #80]
   1edc4:	str	q0, [sp, #112]
   1edc8:	ldr	q0, [sp, #80]
   1edcc:	bl	141f0 <__expl_finite@GLIBC_2.17>
   1edd0:	stp	x21, x20, [sp, #80]
   1edd4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1edd8:	add	x0, x0, #0xb30
   1eddc:	str	q0, [sp, #96]
   1ede0:	ldr	q1, [sp, #80]
   1ede4:	ldr	q0, [x0]
   1ede8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1edec:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   1edf0:	mov	v2.16b, v0.16b
   1edf4:	ldr	q16, [sp, #96]
   1edf8:	ldr	q6, [sp, #112]
   1edfc:	str	q2, [sp, #80]
   1ee00:	mov	v1.16b, v16.16b
   1ee04:	mov	v0.16b, v6.16b
   1ee08:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ee0c:	ldr	q2, [sp, #80]
   1ee10:	mov	v1.16b, v2.16b
   1ee14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ee18:	ldr	q1, [sp, #160]
   1ee1c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ee20:	stp	x21, x20, [sp, #80]
   1ee24:	str	q0, [sp, #112]
   1ee28:	ldr	q0, [sp, #80]
   1ee2c:	bl	1c928 <__logl_finite@GLIBC_2.17>
   1ee30:	ldr	q1, [sp, #128]
   1ee34:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ee38:	ldr	q1, [sp, #176]
   1ee3c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ee40:	stp	x21, x20, [sp, #80]
   1ee44:	stp	x21, x20, [sp, #96]
   1ee48:	ldr	q1, [sp, #80]
   1ee4c:	str	q0, [sp, #128]
   1ee50:	ldr	q0, [sp, #96]
   1ee54:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ee58:	str	q0, [sp, #96]
   1ee5c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1ee60:	add	x0, x0, #0xb40
   1ee64:	ldr	q4, [sp, #144]
   1ee68:	ldr	q2, [x0]
   1ee6c:	b	1ee74 <__sqrtl_finite@GLIBC_2.17+0x4dc>
   1ee70:	ldr	q4, [x19, #192]
   1ee74:	ldr	q1, [sp, #96]
   1ee78:	mov	v0.16b, v2.16b
   1ee7c:	str	q4, [sp, #80]
   1ee80:	sub	x19, x19, #0x10
   1ee84:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ee88:	ldr	q4, [sp, #80]
   1ee8c:	mov	v1.16b, v4.16b
   1ee90:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ee94:	cmp	x22, x19
   1ee98:	mov	v2.16b, v0.16b
   1ee9c:	b.ne	1ee70 <__sqrtl_finite@GLIBC_2.17+0x4d8>  // b.any
   1eea0:	stp	x21, x20, [sp, #80]
   1eea4:	ldr	q1, [sp, #80]
   1eea8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1eeac:	ldr	q1, [sp, #128]
   1eeb0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1eeb4:	bl	21db8 <expm1f128@@GLIBC_2.27>
   1eeb8:	mov	v1.16b, v0.16b
   1eebc:	ldr	q0, [sp, #112]
   1eec0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1eec4:	ldr	q1, [sp, #112]
   1eec8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1eecc:	ldr	x23, [x23, #4032]
   1eed0:	ldr	x1, [sp, #232]
   1eed4:	ldr	x0, [x23]
   1eed8:	eor	x0, x1, x0
   1eedc:	cbnz	x0, 1f0e4 <__sqrtl_finite@GLIBC_2.17+0x74c>
   1eee0:	ldp	x19, x20, [sp, #16]
   1eee4:	ldp	x21, x22, [sp, #32]
   1eee8:	ldp	x23, x24, [sp, #48]
   1eeec:	ldp	x29, x30, [sp], #240
   1eef0:	ret
   1eef4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1eef8:	add	x0, x0, #0x920
   1eefc:	stp	x21, x20, [sp, #80]
   1ef00:	ldr	q1, [x0]
   1ef04:	ldr	q0, [sp, #80]
   1ef08:	str	wzr, [x19]
   1ef0c:	add	x19, sp, #0xd0
   1ef10:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ef14:	bl	204d0 <ceilf128@@GLIBC_2.27>
   1ef18:	stp	x21, x20, [sp, #80]
   1ef1c:	mov	v1.16b, v0.16b
   1ef20:	str	q0, [sp, #96]
   1ef24:	ldr	q0, [sp, #80]
   1ef28:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ef2c:	mov	v2.16b, v0.16b
   1ef30:	ldr	q4, [sp, #96]
   1ef34:	str	q2, [sp, #80]
   1ef38:	mov	v0.16b, v4.16b
   1ef3c:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   1ef40:	movi	v1.2d, #0x0
   1ef44:	ldr	q2, [sp, #80]
   1ef48:	mov	x1, x19
   1ef4c:	mov	v0.16b, v2.16b
   1ef50:	bl	25ee0 <ldexpf128@@GLIBC_2.27+0x500>
   1ef54:	mov	v4.16b, v0.16b
   1ef58:	add	x0, sp, #0xcc
   1ef5c:	ldr	q2, [sp, #80]
   1ef60:	str	q4, [sp, #96]
   1ef64:	mov	v0.16b, v2.16b
   1ef68:	bl	1a718 <__lgammal_r_finite@GLIBC_2.17>
   1ef6c:	bl	141f0 <__expl_finite@GLIBC_2.17>
   1ef70:	mov	v6.16b, v0.16b
   1ef74:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1ef78:	add	x0, x0, #0x2f0
   1ef7c:	ldr	q0, [sp, #208]
   1ef80:	str	q6, [sp, #80]
   1ef84:	ldr	q1, [x0]
   1ef88:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ef8c:	mov	v2.16b, v0.16b
   1ef90:	ldr	q6, [sp, #80]
   1ef94:	ldr	q4, [sp, #96]
   1ef98:	str	q2, [sp, #80]
   1ef9c:	mov	v1.16b, v6.16b
   1efa0:	mov	v0.16b, v4.16b
   1efa4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1efa8:	ldr	q2, [sp, #80]
   1efac:	mov	v1.16b, v0.16b
   1efb0:	mov	v0.16b, v2.16b
   1efb4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1efb8:	b	1eecc <__sqrtl_finite@GLIBC_2.17+0x534>
   1efbc:	ldr	w0, [sp, #204]
   1efc0:	ldr	q1, [sp, #96]
   1efc4:	sub	w22, w0, #0x1
   1efc8:	str	q2, [sp, #80]
   1efcc:	str	w22, [sp, #204]
   1efd0:	mov	v0.16b, v1.16b
   1efd4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1efd8:	str	q0, [sp, #96]
   1efdc:	ldr	q2, [sp, #80]
   1efe0:	b	1ed58 <__sqrtl_finite@GLIBC_2.17+0x3c0>
   1efe4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1efe8:	add	x0, x0, #0x2f0
   1efec:	str	x20, [sp, #88]
   1eff0:	str	wzr, [x19]
   1eff4:	add	x19, sp, #0xd0
   1eff8:	ldr	q1, [x0]
   1effc:	ldr	q0, [sp, #80]
   1f000:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f004:	mov	x0, x19
   1f008:	bl	1a718 <__lgammal_r_finite@GLIBC_2.17>
   1f00c:	bl	141f0 <__expl_finite@GLIBC_2.17>
   1f010:	stp	x21, x20, [sp, #80]
   1f014:	ldr	q1, [sp, #80]
   1f018:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1f01c:	b	1eecc <__sqrtl_finite@GLIBC_2.17+0x534>
   1f020:	stp	x21, x20, [sp, #80]
   1f024:	add	x0, sp, #0xd0
   1f028:	ldr	q0, [sp, #80]
   1f02c:	str	wzr, [x19]
   1f030:	bl	1a718 <__lgammal_r_finite@GLIBC_2.17>
   1f034:	bl	141f0 <__expl_finite@GLIBC_2.17>
   1f038:	b	1eecc <__sqrtl_finite@GLIBC_2.17+0x534>
   1f03c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f040:	add	x0, x0, #0xb10
   1f044:	stp	x21, x20, [sp, #80]
   1f048:	add	x22, sp, #0xd0
   1f04c:	ldr	q0, [x0]
   1f050:	ldr	q1, [sp, #80]
   1f054:	str	x25, [sp, #64]
   1f058:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f05c:	bl	204d0 <ceilf128@@GLIBC_2.27>
   1f060:	stp	x21, x20, [sp, #80]
   1f064:	mov	v1.16b, v0.16b
   1f068:	str	q0, [sp, #96]
   1f06c:	ldr	q0, [sp, #80]
   1f070:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f074:	str	q0, [sp, #80]
   1f078:	ldr	q2, [sp, #96]
   1f07c:	mov	v1.16b, v2.16b
   1f080:	str	q2, [sp, #112]
   1f084:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f088:	mov	v1.16b, v0.16b
   1f08c:	ldp	x25, x24, [sp, #80]
   1f090:	stp	x21, x20, [sp, #80]
   1f094:	str	q0, [sp, #96]
   1f098:	ldr	q0, [sp, #80]
   1f09c:	mov	x21, x25
   1f0a0:	mov	x20, x24
   1f0a4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f0a8:	mov	v6.16b, v0.16b
   1f0ac:	ldr	q2, [sp, #112]
   1f0b0:	str	q6, [sp, #128]
   1f0b4:	mov	v0.16b, v2.16b
   1f0b8:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   1f0bc:	ldr	q4, [sp, #96]
   1f0c0:	mov	x1, x22
   1f0c4:	ldr	q1, [sp, #128]
   1f0c8:	mov	v0.16b, v4.16b
   1f0cc:	bl	25ee0 <ldexpf128@@GLIBC_2.27+0x500>
   1f0d0:	str	q0, [sp, #160]
   1f0d4:	ldr	q0, [sp, #208]
   1f0d8:	ldr	x25, [sp, #64]
   1f0dc:	str	q0, [sp, #176]
   1f0e0:	b	1ed04 <__sqrtl_finite@GLIBC_2.17+0x36c>
   1f0e4:	str	x25, [sp, #64]
   1f0e8:	bl	ba70 <__stack_chk_fail@plt>
   1f0ec:	nop

000000000001f0f0 <__gammal_r_finite@GLIBC_2.17>:
   1f0f0:	stp	x29, x30, [sp, #-144]!
   1f0f4:	mov	x29, sp
   1f0f8:	stp	x21, x22, [sp, #32]
   1f0fc:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   1f100:	mov	x22, x0
   1f104:	stp	x19, x20, [sp, #16]
   1f108:	stp	x25, x26, [sp, #64]
   1f10c:	str	q0, [sp, #96]
   1f110:	ldp	x19, x26, [sp, #96]
   1f114:	ldr	x2, [x21, #4032]
   1f118:	ldr	x3, [x2]
   1f11c:	str	x3, [sp, #136]
   1f120:	mov	x3, #0x0                   	// #0
   1f124:	and	x1, x26, #0x7fffffffffffffff
   1f128:	orr	x1, x1, x19
   1f12c:	cbz	x1, 1f2d8 <__gammal_r_finite@GLIBC_2.17+0x1e8>
   1f130:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1f134:	add	x0, x26, x0
   1f138:	mov	x1, #0x7ffeffffffffffff    	// #9223090561878065151
   1f13c:	mov	x20, x26
   1f140:	cmp	x0, x1
   1f144:	b.hi	1f2ac <__gammal_r_finite@GLIBC_2.17+0x1bc>  // b.pmore
   1f148:	bl	22df0 <rintf128@@GLIBC_2.27>
   1f14c:	stp	x19, x26, [sp, #96]
   1f150:	ldr	q1, [sp, #96]
   1f154:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1f158:	cbz	w0, 1f34c <__gammal_r_finite@GLIBC_2.17+0x25c>
   1f15c:	and	x20, x20, #0x7fff000000000000
   1f160:	mov	x0, #0x7fff000000000000    	// #9223090561878065152
   1f164:	cmp	x20, x0
   1f168:	b.eq	1f3a4 <__gammal_r_finite@GLIBC_2.17+0x2b4>  // b.none
   1f16c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f170:	add	x0, x0, #0xb50
   1f174:	stp	x19, x26, [sp, #96]
   1f178:	ldr	q1, [x0]
   1f17c:	ldr	q0, [sp, #96]
   1f180:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1f184:	tbz	w0, #31, 1f328 <__gammal_r_finite@GLIBC_2.17+0x238>
   1f188:	stp	x23, x24, [sp, #48]
   1f18c:	str	x27, [sp, #80]
   1f190:	mrs	x23, fpcr
   1f194:	ands	w24, w23, #0xc00000
   1f198:	b.ne	1f5f8 <__gammal_r_finite@GLIBC_2.17+0x508>  // b.any
   1f19c:	movi	v1.2d, #0x0
   1f1a0:	stp	x19, x26, [sp, #96]
   1f1a4:	ldr	q0, [sp, #96]
   1f1a8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1f1ac:	str	x19, [sp, #96]
   1f1b0:	cmp	w0, #0x0
   1f1b4:	b.gt	1f378 <__gammal_r_finite@GLIBC_2.17+0x288>
   1f1b8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f1bc:	add	x0, x0, #0xb60
   1f1c0:	str	x26, [sp, #104]
   1f1c4:	ldr	q1, [x0]
   1f1c8:	ldr	q0, [sp, #96]
   1f1cc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1f1d0:	str	x19, [sp, #96]
   1f1d4:	tbnz	w0, #31, 1f3c8 <__gammal_r_finite@GLIBC_2.17+0x2d8>
   1f1d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f1dc:	add	x0, x0, #0x2f0
   1f1e0:	str	x26, [sp, #104]
   1f1e4:	str	wzr, [x22]
   1f1e8:	ldr	q0, [x0]
   1f1ec:	ldr	q1, [sp, #96]
   1f1f0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1f1f4:	str	q0, [sp, #96]
   1f1f8:	ldp	x20, x25, [sp, #96]
   1f1fc:	and	x27, x25, #0x7fffffffffffffff
   1f200:	cbnz	w24, 1f5f0 <__gammal_r_finite@GLIBC_2.17+0x500>
   1f204:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f208:	add	x0, x0, #0x300
   1f20c:	stp	x20, x27, [sp, #96]
   1f210:	ldr	q1, [x0]
   1f214:	ldr	q0, [sp, #96]
   1f218:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   1f21c:	cbnz	w0, 1f254 <__gammal_r_finite@GLIBC_2.17+0x164>
   1f220:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f224:	add	x0, x0, #0x300
   1f228:	stp	x20, x27, [sp, #96]
   1f22c:	ldr	q1, [x0]
   1f230:	ldr	q0, [sp, #96]
   1f234:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1f238:	cmp	w0, #0x0
   1f23c:	b.le	1f254 <__gammal_r_finite@GLIBC_2.17+0x164>
   1f240:	movi	v1.2d, #0x0
   1f244:	stp	x19, x26, [sp, #96]
   1f248:	ldr	q0, [sp, #96]
   1f24c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1f250:	cbnz	w0, 1f544 <__gammal_r_finite@GLIBC_2.17+0x454>
   1f254:	movi	v1.2d, #0x0
   1f258:	stp	x20, x25, [sp, #96]
   1f25c:	ldr	q0, [sp, #96]
   1f260:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1f264:	cbnz	w0, 1f598 <__gammal_r_finite@GLIBC_2.17+0x4a8>
   1f268:	ldr	w1, [x22]
   1f26c:	cmp	x25, #0x0
   1f270:	mov	x0, #0x1000000000000       	// #281474976710656
   1f274:	mov	x2, #0x8001000000000000    	// #-9223090561878065152
   1f278:	csel	x0, x0, x2, ge  // ge = tcont
   1f27c:	tbnz	w1, #31, 1f5a4 <__gammal_r_finite@GLIBC_2.17+0x4b4>
   1f280:	stp	xzr, x0, [sp, #96]
   1f284:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f288:	add	x0, x0, #0xeb0
   1f28c:	ldr	q0, [sp, #96]
   1f290:	ldr	q1, [x0]
   1f294:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f298:	str	q0, [sp, #96]
   1f29c:	ldp	x23, x24, [sp, #48]
   1f2a0:	ldr	x27, [sp, #80]
   1f2a4:	ldp	x20, x25, [sp, #96]
   1f2a8:	b	1f2f8 <__gammal_r_finite@GLIBC_2.17+0x208>
   1f2ac:	cmp	x19, #0x0
   1f2b0:	mov	x0, #0xffff000000000000    	// #-281474976710656
   1f2b4:	ccmp	x26, x0, #0x0, eq  // eq = none
   1f2b8:	b.ne	1f15c <__gammal_r_finite@GLIBC_2.17+0x6c>  // b.any
   1f2bc:	stp	x19, x26, [sp, #96]
   1f2c0:	ldr	q1, [sp, #96]
   1f2c4:	str	wzr, [x22]
   1f2c8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f2cc:	str	q0, [sp, #96]
   1f2d0:	ldp	x20, x25, [sp, #96]
   1f2d4:	b	1f2f8 <__gammal_r_finite@GLIBC_2.17+0x208>
   1f2d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f2dc:	add	x0, x0, #0x2f0
   1f2e0:	ldr	q1, [sp, #96]
   1f2e4:	str	wzr, [x22]
   1f2e8:	ldr	q0, [x0]
   1f2ec:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1f2f0:	str	q0, [sp, #96]
   1f2f4:	ldp	x20, x25, [sp, #96]
   1f2f8:	ldr	x21, [x21, #4032]
   1f2fc:	ldr	x1, [sp, #136]
   1f300:	ldr	x0, [x21]
   1f304:	eor	x0, x1, x0
   1f308:	cbnz	x0, 1f634 <__gammal_r_finite@GLIBC_2.17+0x544>
   1f30c:	stp	x20, x25, [sp, #96]
   1f310:	ldp	x19, x20, [sp, #16]
   1f314:	ldp	x21, x22, [sp, #32]
   1f318:	ldp	x25, x26, [sp, #64]
   1f31c:	ldr	q0, [sp, #96]
   1f320:	ldp	x29, x30, [sp], #144
   1f324:	ret
   1f328:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f32c:	add	x0, x0, #0x300
   1f330:	str	wzr, [x22]
   1f334:	ldr	q1, [x0]
   1f338:	mov	v0.16b, v1.16b
   1f33c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f340:	str	q0, [sp, #96]
   1f344:	ldp	x20, x25, [sp, #96]
   1f348:	b	1f2f8 <__gammal_r_finite@GLIBC_2.17+0x208>
   1f34c:	stp	x19, x26, [sp, #96]
   1f350:	stp	x19, x26, [sp, #112]
   1f354:	ldr	q1, [sp, #96]
   1f358:	ldr	q0, [sp, #112]
   1f35c:	str	wzr, [x22]
   1f360:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f364:	mov	v1.16b, v0.16b
   1f368:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1f36c:	str	q0, [sp, #96]
   1f370:	ldp	x20, x25, [sp, #96]
   1f374:	b	1f2f8 <__gammal_r_finite@GLIBC_2.17+0x208>
   1f378:	str	x26, [sp, #104]
   1f37c:	add	x0, sp, #0x84
   1f380:	str	wzr, [x22]
   1f384:	ldr	q0, [sp, #96]
   1f388:	bl	1ec40 <__sqrtl_finite@GLIBC_2.17+0x2a8>
   1f38c:	ldr	w0, [sp, #132]
   1f390:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   1f394:	str	q0, [sp, #96]
   1f398:	ldp	x20, x25, [sp, #96]
   1f39c:	and	x27, x25, #0x7fffffffffffffff
   1f3a0:	b	1f200 <__gammal_r_finite@GLIBC_2.17+0x110>
   1f3a4:	stp	x19, x26, [sp, #96]
   1f3a8:	stp	x19, x26, [sp, #112]
   1f3ac:	ldr	q1, [sp, #96]
   1f3b0:	ldr	q0, [sp, #112]
   1f3b4:	str	wzr, [x22]
   1f3b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f3bc:	str	q0, [sp, #96]
   1f3c0:	ldp	x20, x25, [sp, #96]
   1f3c4:	b	1f2f8 <__gammal_r_finite@GLIBC_2.17+0x208>
   1f3c8:	str	x26, [sp, #104]
   1f3cc:	ldr	q0, [sp, #96]
   1f3d0:	bl	23530 <truncf128@@GLIBC_2.27>
   1f3d4:	str	q0, [sp, #112]
   1f3d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f3dc:	add	x0, x0, #0x330
   1f3e0:	ldr	q1, [x0]
   1f3e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f3e8:	bl	23530 <truncf128@@GLIBC_2.27>
   1f3ec:	mov	v1.16b, v0.16b
   1f3f0:	str	q0, [sp, #96]
   1f3f4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f3f8:	ldr	q1, [sp, #112]
   1f3fc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   1f400:	cmp	w0, #0x0
   1f404:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f408:	add	x0, x0, #0xb70
   1f40c:	stp	x19, x26, [sp, #96]
   1f410:	mov	w1, #0x1                   	// #1
   1f414:	cneg	w1, w1, eq  // eq = none
   1f418:	ldr	q1, [x0]
   1f41c:	ldr	q0, [sp, #96]
   1f420:	str	w1, [x22]
   1f424:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1f428:	cmp	w0, #0x0
   1f42c:	b.le	1f574 <__gammal_r_finite@GLIBC_2.17+0x484>
   1f430:	stp	x19, x26, [sp, #96]
   1f434:	ldr	q0, [sp, #112]
   1f438:	ldr	q1, [sp, #96]
   1f43c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f440:	str	q0, [sp, #96]
   1f444:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f448:	add	x0, x0, #0x330
   1f44c:	ldr	q1, [x0]
   1f450:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1f454:	cmp	w0, #0x0
   1f458:	ldr	q2, [sp, #96]
   1f45c:	b.le	1f478 <__gammal_r_finite@GLIBC_2.17+0x388>
   1f460:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f464:	add	x0, x0, #0x2f0
   1f468:	mov	v1.16b, v2.16b
   1f46c:	ldr	q0, [x0]
   1f470:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f474:	mov	v2.16b, v0.16b
   1f478:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1f47c:	add	x0, x0, #0xb40
   1f480:	mov	v0.16b, v2.16b
   1f484:	str	q2, [sp, #96]
   1f488:	ldr	q1, [x0]
   1f48c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1f490:	cmp	w0, #0x0
   1f494:	ldr	q2, [sp, #96]
   1f498:	b.gt	1f604 <__gammal_r_finite@GLIBC_2.17+0x514>
   1f49c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f4a0:	add	x0, x0, #0xa40
   1f4a4:	mov	v0.16b, v2.16b
   1f4a8:	ldr	q1, [x0]
   1f4ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f4b0:	bl	23068 <sinf128@@GLIBC_2.27>
   1f4b4:	mov	v1.16b, v0.16b
   1f4b8:	eor	x20, x26, #0x8000000000000000
   1f4bc:	stp	x19, x20, [sp, #96]
   1f4c0:	ldr	q0, [sp, #96]
   1f4c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f4c8:	stp	x19, x20, [sp, #96]
   1f4cc:	add	x0, sp, #0x84
   1f4d0:	str	q0, [sp, #112]
   1f4d4:	ldr	q0, [sp, #96]
   1f4d8:	bl	1ec40 <__sqrtl_finite@GLIBC_2.17+0x2a8>
   1f4dc:	mov	v1.16b, v0.16b
   1f4e0:	ldr	q2, [sp, #112]
   1f4e4:	mov	v0.16b, v2.16b
   1f4e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f4ec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f4f0:	add	x0, x0, #0xa40
   1f4f4:	mov	v1.16b, v0.16b
   1f4f8:	ldr	q0, [x0]
   1f4fc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1f500:	ldr	w0, [sp, #132]
   1f504:	neg	w0, w0
   1f508:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   1f50c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f510:	add	x0, x0, #0xeb0
   1f514:	str	q0, [sp, #96]
   1f518:	ldp	x20, x25, [sp, #96]
   1f51c:	ldr	q1, [x0]
   1f520:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1f524:	tbz	w0, #31, 1f53c <__gammal_r_finite@GLIBC_2.17+0x44c>
   1f528:	stp	x20, x25, [sp, #96]
   1f52c:	stp	x20, x25, [sp, #112]
   1f530:	ldr	q1, [sp, #96]
   1f534:	ldr	q0, [sp, #112]
   1f538:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f53c:	and	x27, x25, #0x7fffffffffffffff
   1f540:	b	1f200 <__gammal_r_finite@GLIBC_2.17+0x110>
   1f544:	ldr	w1, [x22]
   1f548:	cmp	x25, #0x0
   1f54c:	mov	x0, #0x7ffeffffffffffff    	// #9223090561878065151
   1f550:	mov	x2, #0xfffeffffffffffff    	// #-281474976710657
   1f554:	csel	x0, x0, x2, ge  // ge = tcont
   1f558:	tbnz	w1, #31, 1f5d8 <__gammal_r_finite@GLIBC_2.17+0x4e8>
   1f55c:	mov	x1, #0xffffffffffffffff    	// #-1
   1f560:	stp	x1, x0, [sp, #96]
   1f564:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f568:	add	x0, x0, #0x300
   1f56c:	ldr	q0, [sp, #96]
   1f570:	b	1f290 <__gammal_r_finite@GLIBC_2.17+0x1a0>
   1f574:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f578:	add	x0, x0, #0xeb0
   1f57c:	ldr	q1, [x0]
   1f580:	mov	v0.16b, v1.16b
   1f584:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f588:	str	q0, [sp, #96]
   1f58c:	ldp	x20, x25, [sp, #96]
   1f590:	mov	x27, x25
   1f594:	b	1f200 <__gammal_r_finite@GLIBC_2.17+0x110>
   1f598:	ldp	x23, x24, [sp, #48]
   1f59c:	ldr	x27, [sp, #80]
   1f5a0:	b	1f2f8 <__gammal_r_finite@GLIBC_2.17+0x208>
   1f5a4:	eor	x0, x0, #0x8000000000000000
   1f5a8:	stp	xzr, x0, [sp, #96]
   1f5ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f5b0:	add	x0, x0, #0xeb0
   1f5b4:	ldr	q1, [x0]
   1f5b8:	ldr	q0, [sp, #96]
   1f5bc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f5c0:	str	q0, [sp, #96]
   1f5c4:	ldp	x20, x25, [sp, #96]
   1f5c8:	ldp	x23, x24, [sp, #48]
   1f5cc:	ldr	x27, [sp, #80]
   1f5d0:	eor	x25, x25, #0x8000000000000000
   1f5d4:	b	1f2f8 <__gammal_r_finite@GLIBC_2.17+0x208>
   1f5d8:	eor	x0, x0, #0x8000000000000000
   1f5dc:	mov	x1, #0xffffffffffffffff    	// #-1
   1f5e0:	stp	x1, x0, [sp, #96]
   1f5e4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f5e8:	add	x0, x0, #0x300
   1f5ec:	b	1f5b4 <__gammal_r_finite@GLIBC_2.17+0x4c4>
   1f5f0:	msr	fpcr, x23
   1f5f4:	b	1f204 <__gammal_r_finite@GLIBC_2.17+0x114>
   1f5f8:	eor	w0, w24, w23
   1f5fc:	msr	fpcr, x0
   1f600:	b	1f19c <__gammal_r_finite@GLIBC_2.17+0xac>
   1f604:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f608:	add	x0, x0, #0x330
   1f60c:	mov	v1.16b, v2.16b
   1f610:	ldr	q0, [x0]
   1f614:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f618:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f61c:	add	x0, x0, #0xa40
   1f620:	ldr	q1, [x0]
   1f624:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f628:	bl	205f0 <cosf128@@GLIBC_2.27>
   1f62c:	mov	v1.16b, v0.16b
   1f630:	b	1f4b8 <__gammal_r_finite@GLIBC_2.17+0x3c8>
   1f634:	stp	x23, x24, [sp, #48]
   1f638:	str	x27, [sp, #80]
   1f63c:	bl	ba70 <__stack_chk_fail@plt>
   1f640:	sub	sp, sp, #0x10
   1f644:	mov	x0, #0x1000000000000       	// #281474976710656
   1f648:	str	q0, [sp]
   1f64c:	ldp	x2, x1, [sp]
   1f650:	and	x1, x1, #0x7fffffffffffffff
   1f654:	cmp	x1, x0
   1f658:	b.gt	1f690 <__gammal_r_finite@GLIBC_2.17+0x5a0>
   1f65c:	orr	x0, x2, x1
   1f660:	cbz	x0, 1f6e0 <__gammal_r_finite@GLIBC_2.17+0x5f0>
   1f664:	cbnz	x1, 1f6b4 <__gammal_r_finite@GLIBC_2.17+0x5c4>
   1f668:	cmp	x2, #0x0
   1f66c:	mov	w0, #0xffffbfd1            	// #-16431
   1f670:	b.le	1f6ac <__gammal_r_finite@GLIBC_2.17+0x5bc>
   1f674:	nop
   1f678:	lsl	x2, x2, #1
   1f67c:	sub	w0, w0, #0x1
   1f680:	cmp	x2, #0x0
   1f684:	b.gt	1f678 <__gammal_r_finite@GLIBC_2.17+0x588>
   1f688:	add	sp, sp, #0x10
   1f68c:	ret
   1f690:	asr	x0, x1, #48
   1f694:	mov	x2, #0x7ffeffffffffffff    	// #9223090561878065151
   1f698:	mov	w3, #0xffffc001            	// #-16383
   1f69c:	cmp	x1, x2
   1f6a0:	add	w0, w0, w3
   1f6a4:	mov	w1, #0x7fffffff            	// #2147483647
   1f6a8:	csel	w0, w0, w1, le
   1f6ac:	add	sp, sp, #0x10
   1f6b0:	ret
   1f6b4:	cmp	xzr, x1, lsl #15
   1f6b8:	mov	w0, #0xffffc002            	// #-16382
   1f6bc:	lsl	x1, x1, #15
   1f6c0:	b.ge	1f6ac <__gammal_r_finite@GLIBC_2.17+0x5bc>  // b.tcont
   1f6c4:	nop
   1f6c8:	lsl	x1, x1, #1
   1f6cc:	sub	w0, w0, #0x1
   1f6d0:	cmp	x1, #0x0
   1f6d4:	b.gt	1f6c8 <__gammal_r_finite@GLIBC_2.17+0x5d8>
   1f6d8:	add	sp, sp, #0x10
   1f6dc:	ret
   1f6e0:	mov	w0, #0x80000001            	// #-2147483647
   1f6e4:	b	1f6ac <__gammal_r_finite@GLIBC_2.17+0x5bc>
   1f6e8:	stp	x29, x30, [sp, #-144]!
   1f6ec:	mov	x29, sp
   1f6f0:	stp	x19, x20, [sp, #16]
   1f6f4:	str	q0, [sp, #80]
   1f6f8:	ldp	x19, x20, [sp, #80]
   1f6fc:	stp	x21, x22, [sp, #32]
   1f700:	mov	w22, w0
   1f704:	stp	x23, x24, [sp, #48]
   1f708:	mov	w0, #0x3fc5ffff            	// #1069940735
   1f70c:	stp	x25, x26, [sp, #64]
   1f710:	ubfx	x24, x20, #32, #31
   1f714:	str	q1, [sp, #96]
   1f718:	cmp	w24, w0
   1f71c:	ldp	x25, x21, [sp, #96]
   1f720:	b.gt	1f788 <__gammal_r_finite@GLIBC_2.17+0x698>
   1f724:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   1f728:	cbnz	w0, 1f800 <__gammal_r_finite@GLIBC_2.17+0x710>
   1f72c:	add	w0, w22, #0x1
   1f730:	lsr	x2, x19, #32
   1f734:	orr	w0, w0, w19
   1f738:	orr	w23, w20, w2
   1f73c:	orr	w23, w0, w23
   1f740:	orr	w24, w23, w24
   1f744:	cbz	w24, 1fb18 <__gammal_r_finite@GLIBC_2.17+0xa28>
   1f748:	cmp	w22, #0x1
   1f74c:	b.eq	1fb3c <__gammal_r_finite@GLIBC_2.17+0xa4c>  // b.none
   1f750:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1f754:	add	x0, x0, #0xfd0
   1f758:	stp	x19, x20, [sp, #80]
   1f75c:	ldr	q0, [x0]
   1f760:	ldr	q1, [sp, #80]
   1f764:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1f768:	str	q0, [sp, #80]
   1f76c:	ldp	x19, x20, [sp, #16]
   1f770:	ldp	x21, x22, [sp, #32]
   1f774:	ldp	x23, x24, [sp, #48]
   1f778:	ldp	x25, x26, [sp, #64]
   1f77c:	ldr	q0, [sp, #80]
   1f780:	ldp	x29, x30, [sp], #144
   1f784:	ret
   1f788:	mov	w0, #0x5941                	// #22849
   1f78c:	movk	w0, #0x3ffe, lsl #16
   1f790:	cmp	w24, w0
   1f794:	b.le	1f800 <__gammal_r_finite@GLIBC_2.17+0x710>
   1f798:	lsr	x1, x20, #32
   1f79c:	mov	w26, #0x1                   	// #1
   1f7a0:	tbz	w1, #31, 1f7b0 <__gammal_r_finite@GLIBC_2.17+0x6c0>
   1f7a4:	eor	x20, x20, #0x8000000000000000
   1f7a8:	eor	x21, x21, #0x8000000000000000
   1f7ac:	mov	w26, #0xffffffff            	// #-1
   1f7b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1f7b4:	add	x0, x0, #0xef0
   1f7b8:	stp	x19, x20, [sp, #80]
   1f7bc:	ldr	q0, [x0]
   1f7c0:	ldr	q1, [sp, #80]
   1f7c4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f7c8:	stp	x25, x21, [sp, #80]
   1f7cc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f7d0:	add	x0, x0, #0xc60
   1f7d4:	str	q0, [sp, #96]
   1f7d8:	ldr	q1, [sp, #80]
   1f7dc:	mov	x25, #0x0                   	// #0
   1f7e0:	mov	x21, #0x0                   	// #0
   1f7e4:	ldr	q0, [x0]
   1f7e8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f7ec:	ldr	q2, [sp, #96]
   1f7f0:	mov	v1.16b, v2.16b
   1f7f4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f7f8:	str	q0, [sp, #80]
   1f7fc:	ldp	x19, x20, [sp, #80]
   1f800:	stp	x19, x20, [sp, #80]
   1f804:	stp	x19, x20, [sp, #96]
   1f808:	ldr	q1, [sp, #80]
   1f80c:	ldr	q0, [sp, #96]
   1f810:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f814:	str	q0, [sp, #80]
   1f818:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f81c:	add	x0, x0, #0xc70
   1f820:	ldr	q1, [x0]
   1f824:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f828:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f82c:	add	x0, x0, #0xc80
   1f830:	ldr	q1, [x0]
   1f834:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f838:	ldr	q1, [sp, #80]
   1f83c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f840:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f844:	add	x0, x0, #0xc90
   1f848:	ldr	q1, [x0]
   1f84c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f850:	ldr	q1, [sp, #80]
   1f854:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f858:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f85c:	add	x0, x0, #0xca0
   1f860:	ldr	q1, [x0]
   1f864:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f868:	ldr	q1, [sp, #80]
   1f86c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f870:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f874:	add	x0, x0, #0xcb0
   1f878:	ldr	q1, [x0]
   1f87c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f880:	stp	x19, x20, [sp, #96]
   1f884:	ldr	q1, [sp, #80]
   1f888:	str	q0, [sp, #112]
   1f88c:	ldr	q0, [sp, #96]
   1f890:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f894:	str	q0, [sp, #96]
   1f898:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f89c:	add	x0, x0, #0xcc0
   1f8a0:	ldr	q0, [sp, #80]
   1f8a4:	ldr	q1, [x0]
   1f8a8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f8ac:	ldr	q1, [sp, #80]
   1f8b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f8b4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f8b8:	add	x0, x0, #0xcd0
   1f8bc:	ldr	q1, [x0]
   1f8c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f8c4:	ldr	q1, [sp, #80]
   1f8c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f8cc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f8d0:	add	x0, x0, #0xce0
   1f8d4:	ldr	q1, [x0]
   1f8d8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f8dc:	ldr	q1, [sp, #80]
   1f8e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f8e4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f8e8:	add	x0, x0, #0xcf0
   1f8ec:	ldr	q1, [x0]
   1f8f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f8f4:	ldr	q1, [sp, #80]
   1f8f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f8fc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f900:	add	x0, x0, #0xd00
   1f904:	ldr	q1, [x0]
   1f908:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f90c:	mov	v1.16b, v0.16b
   1f910:	ldr	q4, [sp, #112]
   1f914:	mov	v0.16b, v4.16b
   1f918:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1f91c:	ldr	q2, [sp, #96]
   1f920:	mov	v1.16b, v2.16b
   1f924:	str	q2, [sp, #112]
   1f928:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f92c:	stp	x25, x21, [sp, #96]
   1f930:	ldr	q1, [sp, #96]
   1f934:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f938:	ldr	q1, [sp, #80]
   1f93c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f940:	stp	x25, x21, [sp, #80]
   1f944:	ldr	q1, [sp, #80]
   1f948:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f94c:	mov	v4.16b, v0.16b
   1f950:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1f954:	add	x0, x0, #0xd10
   1f958:	ldr	q2, [sp, #112]
   1f95c:	str	q4, [sp, #80]
   1f960:	ldr	q1, [x0]
   1f964:	mov	v0.16b, v2.16b
   1f968:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1f96c:	ldr	q4, [sp, #80]
   1f970:	mov	v1.16b, v4.16b
   1f974:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f978:	stp	x19, x20, [sp, #80]
   1f97c:	mov	v1.16b, v0.16b
   1f980:	str	q0, [sp, #96]
   1f984:	ldr	q0, [sp, #80]
   1f988:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1f98c:	str	q0, [sp, #80]
   1f990:	mov	w0, #0x5941                	// #22849
   1f994:	ldr	q2, [sp, #96]
   1f998:	movk	w0, #0x3ffe, lsl #16
   1f99c:	cmp	w24, w0
   1f9a0:	b.gt	1fa7c <__gammal_r_finite@GLIBC_2.17+0x98c>
   1f9a4:	str	q2, [sp, #96]
   1f9a8:	cmp	w22, #0x1
   1f9ac:	b.eq	1fa60 <__gammal_r_finite@GLIBC_2.17+0x970>  // b.none
   1f9b0:	ldp	x0, x1, [sp, #80]
   1f9b4:	adrp	x2, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1f9b8:	add	x2, x2, #0xfd0
   1f9bc:	ldr	q1, [sp, #80]
   1f9c0:	mov	x0, #0x0                   	// #0
   1f9c4:	fmov	d4, x0
   1f9c8:	ldr	q0, [x2]
   1f9cc:	fmov	v4.d[1], x1
   1f9d0:	str	q4, [sp, #112]
   1f9d4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1f9d8:	stp	x19, x20, [sp, #80]
   1f9dc:	fmov	x1, v0.d[1]
   1f9e0:	ldr	q4, [sp, #112]
   1f9e4:	ldr	q1, [sp, #80]
   1f9e8:	mov	x0, #0x0                   	// #0
   1f9ec:	str	q0, [sp, #128]
   1f9f0:	mov	v0.16b, v4.16b
   1f9f4:	stp	x0, x1, [sp, #80]
   1f9f8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1f9fc:	ldr	q2, [sp, #96]
   1fa00:	mov	v1.16b, v0.16b
   1fa04:	mov	v0.16b, v2.16b
   1fa08:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1fa0c:	ldr	q1, [sp, #80]
   1fa10:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fa14:	str	q0, [sp, #96]
   1fa18:	ldr	q1, [sp, #80]
   1fa1c:	ldr	q4, [sp, #112]
   1fa20:	mov	v0.16b, v4.16b
   1fa24:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fa28:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fa2c:	add	x0, x0, #0x2f0
   1fa30:	ldr	q1, [x0]
   1fa34:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fa38:	mov	v1.16b, v0.16b
   1fa3c:	ldr	q2, [sp, #96]
   1fa40:	mov	v0.16b, v2.16b
   1fa44:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fa48:	ldr	q6, [sp, #128]
   1fa4c:	mov	v1.16b, v6.16b
   1fa50:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fa54:	ldr	q1, [sp, #80]
   1fa58:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fa5c:	str	q0, [sp, #80]
   1fa60:	ldp	x19, x20, [sp, #16]
   1fa64:	ldp	x21, x22, [sp, #32]
   1fa68:	ldp	x23, x24, [sp, #48]
   1fa6c:	ldp	x25, x26, [sp, #64]
   1fa70:	ldr	q0, [sp, #80]
   1fa74:	ldp	x29, x30, [sp], #144
   1fa78:	ret
   1fa7c:	mov	w0, w22
   1fa80:	str	q2, [sp, #128]
   1fa84:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1fa88:	str	q0, [sp, #96]
   1fa8c:	ldr	q1, [sp, #80]
   1fa90:	mov	v0.16b, v1.16b
   1fa94:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fa98:	ldr	q4, [sp, #96]
   1fa9c:	str	q0, [sp, #96]
   1faa0:	ldr	q0, [sp, #80]
   1faa4:	mov	v1.16b, v4.16b
   1faa8:	str	q4, [sp, #112]
   1faac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fab0:	mov	v1.16b, v0.16b
   1fab4:	ldr	q6, [sp, #96]
   1fab8:	mov	v0.16b, v6.16b
   1fabc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1fac0:	ldr	q2, [sp, #128]
   1fac4:	mov	v1.16b, v2.16b
   1fac8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1facc:	stp	x19, x20, [sp, #80]
   1fad0:	mov	v1.16b, v0.16b
   1fad4:	ldr	q0, [sp, #80]
   1fad8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1fadc:	mov	v1.16b, v0.16b
   1fae0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fae4:	mov	v1.16b, v0.16b
   1fae8:	ldr	q4, [sp, #112]
   1faec:	mov	v0.16b, v4.16b
   1faf0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1faf4:	str	q0, [sp, #80]
   1faf8:	cmn	w26, #0x1
   1fafc:	b.ne	1fa60 <__gammal_r_finite@GLIBC_2.17+0x970>  // b.any
   1fb00:	ldp	x3, x0, [sp, #80]
   1fb04:	eor	x2, x0, #0x8000000000000000
   1fb08:	mov	x0, x3
   1fb0c:	mov	x1, x2
   1fb10:	stp	x0, x1, [sp, #80]
   1fb14:	b	1fa60 <__gammal_r_finite@GLIBC_2.17+0x970>
   1fb18:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fb1c:	add	x0, x0, #0x2f0
   1fb20:	ldr	q0, [x0]
   1fb24:	and	x0, x20, #0x7fffffffffffffff
   1fb28:	stp	x19, x0, [sp, #80]
   1fb2c:	ldr	q1, [sp, #80]
   1fb30:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1fb34:	str	q0, [sp, #80]
   1fb38:	b	1fa60 <__gammal_r_finite@GLIBC_2.17+0x970>
   1fb3c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fb40:	add	x0, x0, #0xeb0
   1fb44:	ldr	q1, [x0]
   1fb48:	and	x0, x20, #0x7fffffffffffffff
   1fb4c:	stp	x19, x0, [sp, #80]
   1fb50:	ldr	q0, [sp, #80]
   1fb54:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1fb58:	tbz	w0, #31, 1fb80 <__gammal_r_finite@GLIBC_2.17+0xa90>
   1fb5c:	stp	x19, x20, [sp, #80]
   1fb60:	stp	x19, x20, [sp, #96]
   1fb64:	ldr	q1, [sp, #80]
   1fb68:	ldr	q0, [sp, #96]
   1fb6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fb70:	mov	x0, x19
   1fb74:	mov	x1, x20
   1fb78:	stp	x0, x1, [sp, #80]
   1fb7c:	b	1fa60 <__gammal_r_finite@GLIBC_2.17+0x970>
   1fb80:	mov	x0, x19
   1fb84:	mov	x1, x20
   1fb88:	stp	x0, x1, [sp, #80]
   1fb8c:	b	1fa60 <__gammal_r_finite@GLIBC_2.17+0x970>

000000000001fb90 <asinhf128@@GLIBC_2.27>:
   1fb90:	stp	x29, x30, [sp, #-80]!
   1fb94:	mov	w1, #0x7fff0000            	// #2147418112
   1fb98:	mov	x29, sp
   1fb9c:	str	q0, [sp, #48]
   1fba0:	ldr	x0, [sp, #56]
   1fba4:	stp	x19, x20, [sp, #16]
   1fba8:	stp	x22, x23, [sp, #32]
   1fbac:	ubfx	x19, x0, #32, #31
   1fbb0:	cmp	w19, w1
   1fbb4:	ldp	x22, x23, [sp, #48]
   1fbb8:	b.eq	1fce0 <asinhf128@@GLIBC_2.27+0x150>  // b.none
   1fbbc:	lsr	x20, x0, #32
   1fbc0:	mov	w0, #0x3fc6ffff            	// #1070006271
   1fbc4:	cmp	w19, w0
   1fbc8:	b.le	1fc24 <asinhf128@@GLIBC_2.27+0x94>
   1fbcc:	mov	w0, #0x40350000            	// #1077215232
   1fbd0:	bfi	x23, x19, #32, #32
   1fbd4:	cmp	w19, w0
   1fbd8:	b.le	1fd08 <asinhf128@@GLIBC_2.27+0x178>
   1fbdc:	fmov	d0, x22
   1fbe0:	fmov	v0.d[1], x23
   1fbe4:	bl	1c928 <__logl_finite@GLIBC_2.17>
   1fbe8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fbec:	add	x0, x0, #0xea0
   1fbf0:	ldr	q1, [x0]
   1fbf4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fbf8:	str	q0, [sp, #48]
   1fbfc:	ldp	x1, x0, [sp, #48]
   1fc00:	cmp	w20, #0x0
   1fc04:	eor	x2, x0, #0x8000000000000000
   1fc08:	csel	x0, x2, x0, lt  // lt = tstop
   1fc0c:	stp	x1, x0, [sp, #48]
   1fc10:	ldp	x19, x20, [sp, #16]
   1fc14:	ldp	x22, x23, [sp, #32]
   1fc18:	ldr	q0, [sp, #48]
   1fc1c:	ldp	x29, x30, [sp], #80
   1fc20:	ret
   1fc24:	ldr	x0, [sp, #48]
   1fc28:	str	x0, [sp, #64]
   1fc2c:	ldr	x0, [sp, #56]
   1fc30:	and	x0, x0, #0x7fffffffffffffff
   1fc34:	str	x0, [sp, #72]
   1fc38:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fc3c:	add	x0, x0, #0xeb0
   1fc40:	ldr	q0, [sp, #64]
   1fc44:	ldr	q1, [x0]
   1fc48:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1fc4c:	tbnz	w0, #31, 1fd94 <asinhf128@@GLIBC_2.27+0x204>
   1fc50:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fc54:	add	x0, x0, #0xf70
   1fc58:	ldr	q0, [sp, #48]
   1fc5c:	bfi	x23, x19, #32, #32
   1fc60:	ldr	q1, [x0]
   1fc64:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fc68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fc6c:	add	x0, x0, #0x2f0
   1fc70:	ldr	q1, [x0]
   1fc74:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1fc78:	cmp	w0, #0x0
   1fc7c:	b.gt	1fda4 <asinhf128@@GLIBC_2.27+0x214>
   1fc80:	ldr	q1, [sp, #48]
   1fc84:	mov	v0.16b, v1.16b
   1fc88:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fc8c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fc90:	add	x0, x0, #0x2f0
   1fc94:	str	q0, [sp, #48]
   1fc98:	ldr	q1, [x0]
   1fc9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fca0:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   1fca4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fca8:	add	x0, x0, #0x2f0
   1fcac:	ldr	q1, [x0]
   1fcb0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fcb4:	mov	v1.16b, v0.16b
   1fcb8:	ldr	q2, [sp, #48]
   1fcbc:	mov	v0.16b, v2.16b
   1fcc0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1fcc4:	fmov	d1, x22
   1fcc8:	fmov	v1.d[1], x23
   1fccc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fcd0:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   1fcd4:	str	q0, [sp, #48]
   1fcd8:	ldp	x1, x0, [sp, #48]
   1fcdc:	b	1fc00 <asinhf128@@GLIBC_2.27+0x70>
   1fce0:	mov	v1.16b, v0.16b
   1fce4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fce8:	str	q0, [sp, #48]
   1fcec:	ldp	x1, x0, [sp, #48]
   1fcf0:	stp	x1, x0, [sp, #48]
   1fcf4:	ldp	x19, x20, [sp, #16]
   1fcf8:	ldp	x22, x23, [sp, #32]
   1fcfc:	ldr	q0, [sp, #48]
   1fd00:	ldp	x29, x30, [sp], #80
   1fd04:	ret
   1fd08:	ldr	q1, [sp, #48]
   1fd0c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fd10:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fd14:	add	x0, x0, #0x2f0
   1fd18:	ldr	q1, [x0]
   1fd1c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fd20:	fmov	d4, x22
   1fd24:	fmov	v4.d[1], x23
   1fd28:	str	q4, [sp, #64]
   1fd2c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   1fd30:	mov	w0, #0x40000000            	// #1073741824
   1fd34:	mov	v1.16b, v0.16b
   1fd38:	cmp	w19, w0
   1fd3c:	b.le	1fc80 <asinhf128@@GLIBC_2.27+0xf0>
   1fd40:	ldr	q4, [sp, #64]
   1fd44:	mov	v0.16b, v4.16b
   1fd48:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fd4c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fd50:	add	x0, x0, #0x2f0
   1fd54:	mov	v1.16b, v0.16b
   1fd58:	ldr	q0, [x0]
   1fd5c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1fd60:	str	q0, [sp, #48]
   1fd64:	ldr	q4, [sp, #64]
   1fd68:	mov	v1.16b, v4.16b
   1fd6c:	mov	v0.16b, v4.16b
   1fd70:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fd74:	mov	v1.16b, v0.16b
   1fd78:	ldr	q2, [sp, #48]
   1fd7c:	mov	v0.16b, v2.16b
   1fd80:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1fd84:	bl	1c928 <__logl_finite@GLIBC_2.17>
   1fd88:	str	q0, [sp, #48]
   1fd8c:	ldp	x1, x0, [sp, #48]
   1fd90:	b	1fc00 <asinhf128@@GLIBC_2.27+0x70>
   1fd94:	ldr	q1, [sp, #48]
   1fd98:	mov	v0.16b, v1.16b
   1fd9c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fda0:	b	1fc50 <asinhf128@@GLIBC_2.27+0xc0>
   1fda4:	ldp	x1, x0, [sp, #48]
   1fda8:	stp	x1, x0, [sp, #48]
   1fdac:	ldp	x19, x20, [sp, #16]
   1fdb0:	ldp	x22, x23, [sp, #32]
   1fdb4:	ldr	q0, [sp, #48]
   1fdb8:	ldp	x29, x30, [sp], #80
   1fdbc:	ret

000000000001fdc0 <atanf128@@GLIBC_2.27>:
   1fdc0:	stp	x29, x30, [sp, #-112]!
   1fdc4:	mov	w1, #0x7ffeffff            	// #2147418111
   1fdc8:	mov	x29, sp
   1fdcc:	stp	x19, x20, [sp, #16]
   1fdd0:	str	q0, [sp, #48]
   1fdd4:	ldp	x19, x20, [sp, #48]
   1fdd8:	stp	x21, x22, [sp, #32]
   1fddc:	ubfx	x21, x20, #32, #31
   1fde0:	lsr	x22, x20, #32
   1fde4:	cmp	w21, w1
   1fde8:	b.le	1fe54 <atanf128@@GLIBC_2.27+0x94>
   1fdec:	and	w2, w22, #0xffff
   1fdf0:	lsr	x1, x19, #32
   1fdf4:	orr	w2, w2, w19
   1fdf8:	orr	w0, w20, w1
   1fdfc:	orr	w0, w2, w0
   1fe00:	cbnz	w0, 1ff1c <atanf128@@GLIBC_2.27+0x15c>
   1fe04:	mov	x20, #0x42d1                	// #17105
   1fe08:	mov	x0, #0x42d1                	// #17105
   1fe0c:	movk	x20, #0xb544, lsl #16
   1fe10:	movk	x0, #0xb544, lsl #16
   1fe14:	mov	x19, #0x1b8                 	// #440
   1fe18:	cmp	w22, #0x0
   1fe1c:	movk	x20, #0x921f, lsl #32
   1fe20:	movk	x0, #0x921f, lsl #32
   1fe24:	movk	x19, #0xc517, lsl #16
   1fe28:	movk	x20, #0x3fff, lsl #48
   1fe2c:	movk	x0, #0xbfff, lsl #48
   1fe30:	movk	x19, #0x898c, lsl #32
   1fe34:	csel	x20, x20, x0, ge  // ge = tcont
   1fe38:	movk	x19, #0x8469, lsl #48
   1fe3c:	stp	x19, x20, [sp, #48]
   1fe40:	ldp	x19, x20, [sp, #16]
   1fe44:	ldp	x21, x22, [sp, #32]
   1fe48:	ldr	q0, [sp, #48]
   1fe4c:	ldp	x29, x30, [sp], #112
   1fe50:	ret
   1fe54:	mov	w0, #0x3fc50000            	// #1069875200
   1fe58:	cmp	w21, w0
   1fe5c:	b.gt	1ff08 <atanf128@@GLIBC_2.27+0x148>
   1fe60:	and	x0, x20, #0x7fffffffffffffff
   1fe64:	str	x0, [sp, #56]
   1fe68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1fe6c:	add	x0, x0, #0xeb0
   1fe70:	str	x19, [sp, #48]
   1fe74:	ldr	q1, [x0]
   1fe78:	ldr	q0, [sp, #48]
   1fe7c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   1fe80:	tbz	w0, #31, 1fe98 <atanf128@@GLIBC_2.27+0xd8>
   1fe84:	stp	x19, x20, [sp, #48]
   1fe88:	stp	x19, x20, [sp, #64]
   1fe8c:	ldr	q1, [sp, #48]
   1fe90:	ldr	q0, [sp, #64]
   1fe94:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fe98:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1fe9c:	add	x0, x0, #0xd20
   1fea0:	stp	x19, x20, [sp, #48]
   1fea4:	ldr	q1, [x0]
   1fea8:	ldr	q0, [sp, #48]
   1feac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1feb0:	movi	v1.2d, #0x0
   1feb4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   1feb8:	cmp	w0, #0x0
   1febc:	b.gt	1fe3c <atanf128@@GLIBC_2.27+0x7c>
   1fec0:	tbz	w22, #31, 1ff44 <atanf128@@GLIBC_2.27+0x184>
   1fec4:	eor	x20, x20, #0x8000000000000000
   1fec8:	mov	w0, #0x47ff                	// #18431
   1fecc:	movk	w0, #0x4002, lsl #16
   1fed0:	cmp	w21, w0
   1fed4:	b.le	1ff44 <atanf128@@GLIBC_2.27+0x184>
   1fed8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1fedc:	add	x0, x0, #0xfd0
   1fee0:	stp	x19, x20, [sp, #48]
   1fee4:	ldr	q0, [x0]
   1fee8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1feec:	add	x0, x0, #0xa60
   1fef0:	ldr	q1, [x0]
   1fef4:	str	q1, [sp, #64]
   1fef8:	ldr	q1, [sp, #48]
   1fefc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ff00:	mov	v2.16b, v0.16b
   1ff04:	b	1ffe8 <atanf128@@GLIBC_2.27+0x228>
   1ff08:	mov	w0, #0x4071ffff            	// #1081212927
   1ff0c:	cmp	w21, w0
   1ff10:	b.gt	1fe04 <atanf128@@GLIBC_2.27+0x44>
   1ff14:	tbz	w22, #31, 1fec8 <atanf128@@GLIBC_2.27+0x108>
   1ff18:	b	1fec4 <atanf128@@GLIBC_2.27+0x104>
   1ff1c:	mov	v1.16b, v0.16b
   1ff20:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ff24:	str	q0, [sp, #48]
   1ff28:	ldp	x19, x20, [sp, #48]
   1ff2c:	stp	x19, x20, [sp, #48]
   1ff30:	ldp	x19, x20, [sp, #16]
   1ff34:	ldp	x21, x22, [sp, #32]
   1ff38:	ldr	q0, [sp, #48]
   1ff3c:	ldp	x29, x30, [sp], #112
   1ff40:	ret
   1ff44:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   1ff48:	add	x0, x0, #0x760
   1ff4c:	stp	x19, x20, [sp, #48]
   1ff50:	ldr	q1, [x0]
   1ff54:	ldr	q0, [sp, #48]
   1ff58:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ff5c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1ff60:	add	x0, x0, #0xb40
   1ff64:	ldr	q1, [x0]
   1ff68:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ff6c:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   1ff70:	mov	w21, w0
   1ff74:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   1ff78:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   1ff7c:	add	x0, x0, #0xb80
   1ff80:	ldr	q1, [x0]
   1ff84:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ff88:	stp	x19, x20, [sp, #48]
   1ff8c:	mov	v1.16b, v0.16b
   1ff90:	str	q0, [sp, #64]
   1ff94:	ldr	q0, [sp, #48]
   1ff98:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   1ff9c:	stp	x19, x20, [sp, #48]
   1ffa0:	ldr	q1, [sp, #64]
   1ffa4:	str	q0, [sp, #64]
   1ffa8:	ldr	q0, [sp, #48]
   1ffac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1ffb0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   1ffb4:	add	x0, x0, #0x2f0
   1ffb8:	ldr	q1, [x0]
   1ffbc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   1ffc0:	mov	v1.16b, v0.16b
   1ffc4:	ldr	q2, [sp, #64]
   1ffc8:	mov	v0.16b, v2.16b
   1ffcc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   1ffd0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1ffd4:	add	x0, x0, #0xdd0
   1ffd8:	add	x21, x0, w21, sxtw #4
   1ffdc:	mov	v2.16b, v0.16b
   1ffe0:	ldr	q0, [x21]
   1ffe4:	str	q0, [sp, #64]
   1ffe8:	mov	v1.16b, v2.16b
   1ffec:	mov	v0.16b, v2.16b
   1fff0:	str	q2, [sp, #96]
   1fff4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   1fff8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   1fffc:	add	x0, x0, #0xd30
   20000:	str	q0, [sp, #48]
   20004:	ldr	q1, [x0]
   20008:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2000c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   20010:	add	x0, x0, #0xd40
   20014:	ldr	q1, [x0]
   20018:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2001c:	ldr	q1, [sp, #48]
   20020:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20024:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   20028:	add	x0, x0, #0xd50
   2002c:	ldr	q1, [x0]
   20030:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20034:	ldr	q1, [sp, #48]
   20038:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2003c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   20040:	add	x0, x0, #0xd60
   20044:	ldr	q1, [x0]
   20048:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2004c:	ldr	q1, [sp, #48]
   20050:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20054:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   20058:	add	x0, x0, #0xd70
   2005c:	ldr	q1, [x0]
   20060:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20064:	str	q0, [sp, #80]
   20068:	ldr	q1, [sp, #48]
   2006c:	ldr	q2, [sp, #96]
   20070:	mov	v0.16b, v2.16b
   20074:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20078:	ldr	q4, [sp, #80]
   2007c:	mov	v1.16b, v0.16b
   20080:	mov	v0.16b, v4.16b
   20084:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20088:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   2008c:	add	x0, x0, #0xd80
   20090:	str	q0, [sp, #80]
   20094:	ldr	q0, [sp, #48]
   20098:	ldr	q1, [x0]
   2009c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   200a0:	ldr	q1, [sp, #48]
   200a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   200a8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   200ac:	add	x0, x0, #0xd90
   200b0:	ldr	q1, [x0]
   200b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   200b8:	ldr	q1, [sp, #48]
   200bc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   200c0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   200c4:	add	x0, x0, #0xda0
   200c8:	ldr	q1, [x0]
   200cc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   200d0:	ldr	q1, [sp, #48]
   200d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   200d8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   200dc:	add	x0, x0, #0xdb0
   200e0:	ldr	q1, [x0]
   200e4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   200e8:	ldr	q1, [sp, #48]
   200ec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   200f0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   200f4:	add	x0, x0, #0xdc0
   200f8:	ldr	q1, [x0]
   200fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20100:	mov	v1.16b, v0.16b
   20104:	ldr	q4, [sp, #80]
   20108:	mov	v0.16b, v4.16b
   2010c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20110:	ldr	q2, [sp, #96]
   20114:	mov	v1.16b, v2.16b
   20118:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2011c:	ldr	q1, [sp, #64]
   20120:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20124:	str	q0, [sp, #48]
   20128:	ldp	x19, x20, [sp, #48]
   2012c:	cmp	w22, #0x0
   20130:	ldp	x21, x22, [sp, #32]
   20134:	eor	x0, x20, #0x8000000000000000
   20138:	csel	x20, x0, x20, lt  // lt = tstop
   2013c:	stp	x19, x20, [sp, #48]
   20140:	ldp	x19, x20, [sp, #16]
   20144:	ldr	q0, [sp, #48]
   20148:	ldp	x29, x30, [sp], #112
   2014c:	ret

0000000000020150 <cbrtf128@@GLIBC_2.27>:
   20150:	stp	x29, x30, [sp, #-112]!
   20154:	mov	x29, sp
   20158:	stp	x19, x20, [sp, #16]
   2015c:	str	q0, [sp, #64]
   20160:	ldp	x19, x0, [sp, #64]
   20164:	stp	x21, x22, [sp, #32]
   20168:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2016c:	ldr	x1, [x21, #4032]
   20170:	and	x22, x0, #0x7fffffffffffffff
   20174:	mov	x20, x0
   20178:	ldr	x0, [x1]
   2017c:	str	x0, [sp, #104]
   20180:	mov	x0, #0x0                   	// #0
   20184:	str	x22, [sp, #72]
   20188:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2018c:	add	x0, x0, #0x300
   20190:	ldr	q0, [sp, #64]
   20194:	ldr	q1, [x0]
   20198:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2019c:	cbnz	w0, 20428 <cbrtf128@@GLIBC_2.27+0x2d8>
   201a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   201a4:	add	x0, x0, #0x300
   201a8:	stp	x19, x22, [sp, #64]
   201ac:	ldr	q1, [x0]
   201b0:	ldr	q0, [sp, #64]
   201b4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   201b8:	cmp	w0, #0x0
   201bc:	b.gt	20428 <cbrtf128@@GLIBC_2.27+0x2d8>
   201c0:	movi	v1.2d, #0x0
   201c4:	stp	x19, x20, [sp, #64]
   201c8:	ldr	q0, [sp, #64]
   201cc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   201d0:	cbz	w0, 203f8 <cbrtf128@@GLIBC_2.27+0x2a8>
   201d4:	movi	v1.2d, #0x0
   201d8:	stp	x19, x20, [sp, #64]
   201dc:	ldr	q0, [sp, #64]
   201e0:	str	x23, [sp, #48]
   201e4:	mov	w23, #0x1                   	// #1
   201e8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   201ec:	cmp	w0, #0x0
   201f0:	b.gt	201fc <cbrtf128@@GLIBC_2.27+0xac>
   201f4:	eor	x20, x20, #0x8000000000000000
   201f8:	mov	w23, #0xffffffff            	// #-1
   201fc:	stp	x19, x20, [sp, #64]
   20200:	add	x0, sp, #0x64
   20204:	ldr	q0, [sp, #64]
   20208:	bl	25920 <frexpf128@@GLIBC_2.27>
   2020c:	str	q0, [sp, #64]
   20210:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20214:	add	x0, x0, #0x310
   20218:	ldr	q1, [x0]
   2021c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20220:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20224:	add	x0, x0, #0x320
   20228:	ldr	q1, [x0]
   2022c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20230:	ldr	q1, [sp, #64]
   20234:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20238:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2023c:	add	x0, x0, #0x330
   20240:	ldr	q1, [x0]
   20244:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20248:	ldr	q1, [sp, #64]
   2024c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20250:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20254:	add	x0, x0, #0x340
   20258:	ldr	q1, [x0]
   2025c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20260:	ldr	q1, [sp, #64]
   20264:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20268:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2026c:	add	x0, x0, #0x350
   20270:	ldr	q1, [x0]
   20274:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20278:	ldr	q1, [sp, #64]
   2027c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20280:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20284:	add	x0, x0, #0x360
   20288:	ldr	q1, [x0]
   2028c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20290:	mov	v2.16b, v0.16b
   20294:	ldr	w0, [sp, #100]
   20298:	tbnz	w0, #31, 20460 <cbrtf128@@GLIBC_2.27+0x310>
   2029c:	mov	w22, #0x5556                	// #21846
   202a0:	movk	w22, #0x5555, lsl #16
   202a4:	smull	x22, w0, w22
   202a8:	lsr	x22, x22, #32
   202ac:	sub	w22, w22, w0, asr #31
   202b0:	str	w22, [sp, #100]
   202b4:	sub	w1, w22, w22, lsl #2
   202b8:	add	w0, w1, w0
   202bc:	cmp	w0, #0x1
   202c0:	b.eq	20448 <cbrtf128@@GLIBC_2.27+0x2f8>  // b.none
   202c4:	cmp	w0, #0x2
   202c8:	b.ne	202e0 <cbrtf128@@GLIBC_2.27+0x190>  // b.any
   202cc:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   202d0:	add	x0, x0, #0x380
   202d4:	ldr	q1, [x0]
   202d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   202dc:	mov	v2.16b, v0.16b
   202e0:	mov	w0, w22
   202e4:	mov	v0.16b, v2.16b
   202e8:	bl	259e0 <ldexpf128@@GLIBC_2.27>
   202ec:	mov	v1.16b, v0.16b
   202f0:	str	q0, [sp, #80]
   202f4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   202f8:	stp	x19, x20, [sp, #64]
   202fc:	mov	v1.16b, v0.16b
   20300:	ldr	q0, [sp, #64]
   20304:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20308:	mov	v1.16b, v0.16b
   2030c:	ldr	q2, [sp, #80]
   20310:	mov	v0.16b, v2.16b
   20314:	str	q2, [sp, #64]
   20318:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2031c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   20320:	add	x0, x0, #0xd10
   20324:	ldr	q1, [x0]
   20328:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2032c:	mov	v1.16b, v0.16b
   20330:	ldr	q2, [sp, #64]
   20334:	mov	v0.16b, v2.16b
   20338:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2033c:	mov	v1.16b, v0.16b
   20340:	str	q0, [sp, #80]
   20344:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20348:	stp	x19, x20, [sp, #64]
   2034c:	mov	v1.16b, v0.16b
   20350:	ldr	q0, [sp, #64]
   20354:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20358:	mov	v1.16b, v0.16b
   2035c:	ldr	q2, [sp, #80]
   20360:	mov	v0.16b, v2.16b
   20364:	str	q2, [sp, #64]
   20368:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2036c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   20370:	add	x0, x0, #0xd10
   20374:	ldr	q1, [x0]
   20378:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2037c:	mov	v1.16b, v0.16b
   20380:	ldr	q2, [sp, #64]
   20384:	mov	v0.16b, v2.16b
   20388:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2038c:	mov	v1.16b, v0.16b
   20390:	str	q0, [sp, #80]
   20394:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20398:	stp	x19, x20, [sp, #64]
   2039c:	mov	v1.16b, v0.16b
   203a0:	ldr	q0, [sp, #64]
   203a4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   203a8:	mov	v1.16b, v0.16b
   203ac:	ldr	q2, [sp, #80]
   203b0:	mov	v0.16b, v2.16b
   203b4:	str	q2, [sp, #64]
   203b8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   203bc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   203c0:	add	x0, x0, #0xd10
   203c4:	ldr	q1, [x0]
   203c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   203cc:	mov	v1.16b, v0.16b
   203d0:	ldr	q2, [sp, #64]
   203d4:	mov	v0.16b, v2.16b
   203d8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   203dc:	str	q0, [sp, #64]
   203e0:	cmn	w23, #0x1
   203e4:	ldp	x19, x0, [sp, #64]
   203e8:	ldr	x23, [sp, #48]
   203ec:	eor	x1, x0, #0x8000000000000000
   203f0:	csel	x0, x1, x0, eq  // eq = none
   203f4:	b	203fc <cbrtf128@@GLIBC_2.27+0x2ac>
   203f8:	mov	x0, x20
   203fc:	ldr	x1, [x21, #4032]
   20400:	ldr	x2, [sp, #104]
   20404:	ldr	x1, [x1]
   20408:	eor	x1, x2, x1
   2040c:	cbnz	x1, 204c4 <cbrtf128@@GLIBC_2.27+0x374>
   20410:	stp	x19, x0, [sp, #64]
   20414:	ldp	x19, x20, [sp, #16]
   20418:	ldp	x21, x22, [sp, #32]
   2041c:	ldr	q0, [sp, #64]
   20420:	ldp	x29, x30, [sp], #112
   20424:	ret
   20428:	stp	x19, x20, [sp, #64]
   2042c:	stp	x19, x20, [sp, #80]
   20430:	ldr	q1, [sp, #64]
   20434:	ldr	q0, [sp, #80]
   20438:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2043c:	str	q0, [sp, #64]
   20440:	ldp	x19, x0, [sp, #64]
   20444:	b	203fc <cbrtf128@@GLIBC_2.27+0x2ac>
   20448:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2044c:	add	x0, x0, #0x370
   20450:	ldr	q1, [x0]
   20454:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20458:	mov	v2.16b, v0.16b
   2045c:	b	202e0 <cbrtf128@@GLIBC_2.27+0x190>
   20460:	neg	w22, w0
   20464:	mov	w1, #0xaaab                	// #43691
   20468:	movk	w1, #0xaaaa, lsl #16
   2046c:	umull	x22, w22, w1
   20470:	lsr	x22, x22, #33
   20474:	sub	w1, w22, w22, lsl #2
   20478:	sub	w0, w1, w0
   2047c:	cmp	w0, #0x1
   20480:	b.eq	204ac <cbrtf128@@GLIBC_2.27+0x35c>  // b.none
   20484:	cmp	w0, #0x2
   20488:	b.ne	204a0 <cbrtf128@@GLIBC_2.27+0x350>  // b.any
   2048c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20490:	add	x0, x0, #0x3a0
   20494:	ldr	q1, [x0]
   20498:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2049c:	mov	v2.16b, v0.16b
   204a0:	neg	w22, w22
   204a4:	str	w22, [sp, #100]
   204a8:	b	202e0 <cbrtf128@@GLIBC_2.27+0x190>
   204ac:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   204b0:	add	x0, x0, #0x390
   204b4:	ldr	q1, [x0]
   204b8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   204bc:	mov	v2.16b, v0.16b
   204c0:	b	204a0 <cbrtf128@@GLIBC_2.27+0x350>
   204c4:	str	x23, [sp, #48]
   204c8:	bl	ba70 <__stack_chk_fail@plt>
   204cc:	nop

00000000000204d0 <ceilf128@@GLIBC_2.27>:
   204d0:	stp	x29, x30, [sp, #-32]!
   204d4:	mov	x4, #0xffffffffffffc001    	// #-16383
   204d8:	mov	x29, sp
   204dc:	str	q0, [sp, #16]
   204e0:	ldp	x0, x2, [sp, #16]
   204e4:	ubfx	x1, x2, #48, #15
   204e8:	mov	x3, x2
   204ec:	add	x1, x1, x4
   204f0:	mov	x5, x0
   204f4:	cmp	x1, #0x2f
   204f8:	b.gt	20548 <ceilf128@@GLIBC_2.27+0x78>
   204fc:	tbnz	x1, #63, 205bc <ceilf128@@GLIBC_2.27+0xec>
   20500:	mov	x4, #0xffffffffffff        	// #281474976710655
   20504:	lsr	x4, x4, x1
   20508:	and	x6, x2, x4
   2050c:	orr	x5, x6, x0
   20510:	cbz	x5, 20538 <ceilf128@@GLIBC_2.27+0x68>
   20514:	mov	x0, #0x1000000000000       	// #281474976710656
   20518:	cmp	x2, #0x0
   2051c:	asr	x1, x0, x1
   20520:	add	x1, x1, x2
   20524:	csel	x3, x1, x2, gt
   20528:	mov	x2, #0x0                   	// #0
   2052c:	bic	x3, x3, x4
   20530:	mov	x0, x2
   20534:	mov	x2, x3
   20538:	stp	x0, x2, [sp, #16]
   2053c:	ldr	q0, [sp, #16]
   20540:	ldp	x29, x30, [sp], #32
   20544:	ret
   20548:	cmp	x1, #0x6f
   2054c:	b.le	20570 <ceilf128@@GLIBC_2.27+0xa0>
   20550:	cmp	x1, #0x4, lsl #12
   20554:	b.ne	20538 <ceilf128@@GLIBC_2.27+0x68>  // b.any
   20558:	stp	x0, x2, [sp, #16]
   2055c:	ldr	q1, [sp, #16]
   20560:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20564:	str	q0, [sp, #16]
   20568:	ldp	x0, x2, [sp, #16]
   2056c:	b	20538 <ceilf128@@GLIBC_2.27+0x68>
   20570:	sub	w6, w1, #0x30
   20574:	mov	x4, #0xffffffffffffffff    	// #-1
   20578:	lsr	x4, x4, x6
   2057c:	tst	x4, x0
   20580:	b.eq	20538 <ceilf128@@GLIBC_2.27+0x68>  // b.none
   20584:	cmp	x2, #0x0
   20588:	b.le	205b4 <ceilf128@@GLIBC_2.27+0xe4>
   2058c:	cmp	x1, #0x30
   20590:	b.eq	205e4 <ceilf128@@GLIBC_2.27+0x114>  // b.none
   20594:	mov	w2, #0x70                  	// #112
   20598:	sub	w1, w2, w1
   2059c:	mov	x2, #0x1                   	// #1
   205a0:	lsl	x2, x2, x1
   205a4:	adds	x2, x2, x0
   205a8:	mov	x5, x2
   205ac:	b.cc	205b4 <ceilf128@@GLIBC_2.27+0xe4>  // b.lo, b.ul, b.last
   205b0:	add	x3, x3, #0x1
   205b4:	bic	x2, x5, x4
   205b8:	b	20530 <ceilf128@@GLIBC_2.27+0x60>
   205bc:	tbnz	x2, #63, 205d8 <ceilf128@@GLIBC_2.27+0x108>
   205c0:	orr	x3, x2, x0
   205c4:	mov	x0, #0x3fff000000000000    	// #4611404543450677248
   205c8:	cmp	x3, #0x0
   205cc:	mov	x2, #0x0                   	// #0
   205d0:	csel	x3, x0, xzr, ne  // ne = any
   205d4:	b	20530 <ceilf128@@GLIBC_2.27+0x60>
   205d8:	mov	x2, #0x0                   	// #0
   205dc:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   205e0:	b	20530 <ceilf128@@GLIBC_2.27+0x60>
   205e4:	add	x3, x2, #0x1
   205e8:	bic	x2, x5, x4
   205ec:	b	20530 <ceilf128@@GLIBC_2.27+0x60>

00000000000205f0 <cosf128@@GLIBC_2.27>:
   205f0:	stp	x29, x30, [sp, #-112]!
   205f4:	mov	x3, #0x42d1                	// #17105
   205f8:	movk	x3, #0xb544, lsl #16
   205fc:	mov	x29, sp
   20600:	str	x19, [sp, #16]
   20604:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   20608:	str	q0, [sp, #32]
   2060c:	movk	x3, #0x921f, lsl #32
   20610:	ldp	x1, x2, [sp, #32]
   20614:	movk	x3, #0x3ffe, lsl #48
   20618:	ldr	x4, [x19, #4032]
   2061c:	ldr	x5, [x4]
   20620:	str	x5, [sp, #104]
   20624:	mov	x5, #0x0                   	// #0
   20628:	and	x0, x2, #0x7fffffffffffffff
   2062c:	cmp	x0, x3
   20630:	b.le	206cc <cosf128@@GLIBC_2.27+0xdc>
   20634:	mov	x3, #0x7ffeffffffffffff    	// #9223090561878065151
   20638:	cmp	x0, x3
   2063c:	b.le	20690 <cosf128@@GLIBC_2.27+0xa0>
   20640:	mov	x3, #0x7fff000000000000    	// #9223090561878065152
   20644:	cmp	x0, x3
   20648:	b.eq	206e0 <cosf128@@GLIBC_2.27+0xf0>  // b.none
   2064c:	stp	x1, x2, [sp, #32]
   20650:	stp	x1, x2, [sp, #48]
   20654:	ldr	q1, [sp, #32]
   20658:	ldr	q0, [sp, #48]
   2065c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20660:	str	q0, [sp, #32]
   20664:	ldp	x1, x0, [sp, #32]
   20668:	ldr	x19, [x19, #4032]
   2066c:	ldr	x3, [sp, #104]
   20670:	ldr	x2, [x19]
   20674:	eor	x2, x3, x2
   20678:	cbnz	x2, 20740 <cosf128@@GLIBC_2.27+0x150>
   2067c:	stp	x1, x0, [sp, #32]
   20680:	ldr	x19, [sp, #16]
   20684:	ldr	q0, [sp, #32]
   20688:	ldp	x29, x30, [sp], #112
   2068c:	ret
   20690:	add	x0, sp, #0x40
   20694:	bl	4d878 <__exp2f_finite@GLIBC_2.17+0xe10>
   20698:	and	w0, w0, #0x3
   2069c:	ldr	q0, [sp, #64]
   206a0:	cmp	w0, #0x1
   206a4:	b.eq	20728 <cosf128@@GLIBC_2.27+0x138>  // b.none
   206a8:	cmp	w0, #0x2
   206ac:	b.eq	20710 <cosf128@@GLIBC_2.27+0x120>  // b.none
   206b0:	cbz	w0, 206fc <cosf128@@GLIBC_2.27+0x10c>
   206b4:	ldr	q1, [sp, #80]
   206b8:	mov	w0, #0x1                   	// #1
   206bc:	bl	4cb30 <__exp2f_finite@GLIBC_2.17+0xc8>
   206c0:	str	q0, [sp, #32]
   206c4:	ldp	x1, x0, [sp, #32]
   206c8:	b	20668 <cosf128@@GLIBC_2.27+0x78>
   206cc:	movi	v1.2d, #0x0
   206d0:	bl	4cf50 <__exp2f_finite@GLIBC_2.17+0x4e8>
   206d4:	str	q0, [sp, #32]
   206d8:	ldp	x1, x0, [sp, #32]
   206dc:	b	20668 <cosf128@@GLIBC_2.27+0x78>
   206e0:	cbnz	x1, 2064c <cosf128@@GLIBC_2.27+0x5c>
   206e4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   206e8:	ldr	x0, [x0, #3976]
   206ec:	mrs	x3, tpidr_el0
   206f0:	mov	w4, #0x21                  	// #33
   206f4:	str	w4, [x3, x0]
   206f8:	b	2064c <cosf128@@GLIBC_2.27+0x5c>
   206fc:	ldr	q1, [sp, #80]
   20700:	bl	4cf50 <__exp2f_finite@GLIBC_2.17+0x4e8>
   20704:	str	q0, [sp, #32]
   20708:	ldp	x1, x0, [sp, #32]
   2070c:	b	20668 <cosf128@@GLIBC_2.27+0x78>
   20710:	ldr	q1, [sp, #80]
   20714:	bl	4cf50 <__exp2f_finite@GLIBC_2.17+0x4e8>
   20718:	str	q0, [sp, #32]
   2071c:	ldp	x1, x0, [sp, #32]
   20720:	eor	x0, x0, #0x8000000000000000
   20724:	b	20668 <cosf128@@GLIBC_2.27+0x78>
   20728:	ldr	q1, [sp, #80]
   2072c:	bl	4cb30 <__exp2f_finite@GLIBC_2.17+0xc8>
   20730:	str	q0, [sp, #32]
   20734:	ldp	x1, x0, [sp, #32]
   20738:	eor	x0, x0, #0x8000000000000000
   2073c:	b	20668 <cosf128@@GLIBC_2.27+0x78>
   20740:	bl	ba70 <__stack_chk_fail@plt>
   20744:	nop

0000000000020748 <erfcf128@@GLIBC_2.27>:
   20748:	stp	x29, x30, [sp, #-144]!
   2074c:	mov	w2, #0x7ffeffff            	// #2147418111
   20750:	mov	x29, sp
   20754:	stp	x19, x20, [sp, #16]
   20758:	stp	x21, x22, [sp, #32]
   2075c:	str	q0, [sp, #64]
   20760:	ldp	x20, x21, [sp, #64]
   20764:	ldr	x0, [sp, #72]
   20768:	ubfx	x1, x0, #32, #31
   2076c:	lsr	x19, x0, #32
   20770:	cmp	w1, w2
   20774:	bfi	x21, x1, #32, #32
   20778:	b.gt	20a18 <erfcf128@@GLIBC_2.27+0x2d0>
   2077c:	mov	w0, #0x3ffcffff            	// #1073545215
   20780:	cmp	w1, w0
   20784:	b.gt	207c0 <erfcf128@@GLIBC_2.27+0x78>
   20788:	mov	w0, #0x3f8cffff            	// #1066205183
   2078c:	cmp	w1, w0
   20790:	ldr	q1, [sp, #64]
   20794:	b.gt	21030 <erfcf128@@GLIBC_2.27+0x8e8>
   20798:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2079c:	add	x0, x0, #0x2f0
   207a0:	ldr	q0, [x0]
   207a4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   207a8:	mov	v2.16b, v0.16b
   207ac:	mov	v0.16b, v2.16b
   207b0:	ldp	x19, x20, [sp, #16]
   207b4:	ldp	x21, x22, [sp, #32]
   207b8:	ldp	x29, x30, [sp], #144
   207bc:	ret
   207c0:	mov	w0, #0x3fff3fff            	// #1073692671
   207c4:	cmp	w1, w0
   207c8:	b.le	20b7c <erfcf128@@GLIBC_2.27+0x434>
   207cc:	mov	w0, #0xabff                	// #44031
   207d0:	movk	w0, #0x4005, lsl #16
   207d4:	cmp	w1, w0
   207d8:	b.gt	20a64 <erfcf128@@GLIBC_2.27+0x31c>
   207dc:	cmp	w19, #0x0
   207e0:	mov	w0, #0x1fff                	// #8191
   207e4:	movk	w0, #0x4002, lsl #16
   207e8:	ccmp	w1, w0, #0x4, lt  // lt = tstop
   207ec:	b.gt	2103c <erfcf128@@GLIBC_2.27+0x8f4>
   207f0:	ldr	q1, [sp, #64]
   207f4:	str	x23, [sp, #48]
   207f8:	stp	xzr, xzr, [sp, #96]
   207fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20800:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   20804:	add	x0, x0, #0x2f0
   20808:	mov	v1.16b, v0.16b
   2080c:	ldr	q0, [x0]
   20810:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20814:	str	q0, [sp, #80]
   20818:	ldr	x0, [sp, #64]
   2081c:	str	x0, [sp, #96]
   20820:	ldr	x0, [sp, #72]
   20824:	and	x0, x0, #0x7fffffffffffffff
   20828:	str	x0, [sp, #104]
   2082c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   20830:	add	x0, x0, #0x760
   20834:	ldr	q1, [sp, #96]
   20838:	ldr	q0, [x0]
   2083c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20840:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   20844:	cmp	w0, #0x4
   20848:	b.eq	218e0 <erfcf128@@GLIBC_2.27+0x1198>  // b.none
   2084c:	b.gt	20a98 <erfcf128@@GLIBC_2.27+0x350>
   20850:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20854:	cmp	w0, #0x2
   20858:	add	x21, x20, #0x980
   2085c:	b.eq	213d4 <erfcf128@@GLIBC_2.27+0xc8c>  // b.none
   20860:	cmp	w0, #0x3
   20864:	b.ne	21060 <erfcf128@@GLIBC_2.27+0x918>  // b.any
   20868:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2086c:	add	x0, x0, #0x780
   20870:	mov	x22, x21
   20874:	add	x21, x21, #0xd20
   20878:	add	x23, x22, #0xc80
   2087c:	ldr	q4, [x0]
   20880:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20884:	add	x0, x0, #0x790
   20888:	ldr	q2, [x0]
   2088c:	b	20894 <erfcf128@@GLIBC_2.27+0x14c>
   20890:	ldr	q4, [x21]
   20894:	ldr	q0, [sp, #80]
   20898:	mov	v1.16b, v2.16b
   2089c:	str	q4, [sp, #64]
   208a0:	sub	x21, x21, #0x10
   208a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   208a8:	ldr	q4, [sp, #64]
   208ac:	mov	v1.16b, v4.16b
   208b0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   208b4:	cmp	x21, x23
   208b8:	mov	v2.16b, v0.16b
   208bc:	b.ne	20890 <erfcf128@@GLIBC_2.27+0x148>  // b.any
   208c0:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   208c4:	add	x0, x0, #0x7a0
   208c8:	str	q0, [sp, #64]
   208cc:	add	x20, x20, #0x980
   208d0:	ldr	q0, [sp, #80]
   208d4:	add	x22, x22, #0xdd0
   208d8:	ldr	q1, [x0]
   208dc:	add	x20, x20, #0xd30
   208e0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   208e4:	mov	v1.16b, v0.16b
   208e8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   208ec:	add	x0, x0, #0x7b0
   208f0:	ldr	q2, [sp, #64]
   208f4:	ldr	q4, [x0]
   208f8:	b	20900 <erfcf128@@GLIBC_2.27+0x1b8>
   208fc:	ldr	q4, [x22]
   20900:	ldr	q0, [sp, #80]
   20904:	sub	x22, x22, #0x10
   20908:	str	q2, [sp, #64]
   2090c:	str	q4, [sp, #112]
   20910:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20914:	ldr	q4, [sp, #112]
   20918:	mov	v1.16b, v4.16b
   2091c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20920:	cmp	x22, x20
   20924:	mov	v1.16b, v0.16b
   20928:	ldr	q2, [sp, #64]
   2092c:	b.ne	208fc <erfcf128@@GLIBC_2.27+0x1b4>  // b.any
   20930:	mov	v0.16b, v2.16b
   20934:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20938:	ldp	x20, x21, [sp, #96]
   2093c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   20940:	ldr	x0, [sp, #96]
   20944:	str	q0, [sp, #128]
   20948:	lsr	x0, x0, #32
   2094c:	and	x20, x20, #0xffffffff00000000
   20950:	and	w0, w0, #0xfe000000
   20954:	bfi	x20, x0, #32, #32
   20958:	add	x0, x21, x1
   2095c:	stp	x20, x21, [sp, #64]
   20960:	stp	x20, x0, [sp, #80]
   20964:	ldr	q1, [sp, #64]
   20968:	ldr	q0, [sp, #80]
   2096c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20970:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   20974:	add	x0, x0, #0xd20
   20978:	ldr	q1, [x0]
   2097c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20980:	bl	141f0 <__expl_finite@GLIBC_2.17>
   20984:	stp	x20, x21, [sp, #64]
   20988:	ldr	q1, [sp, #96]
   2098c:	str	q0, [sp, #112]
   20990:	ldr	q0, [sp, #64]
   20994:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20998:	stp	x20, x21, [sp, #64]
   2099c:	str	q0, [sp, #80]
   209a0:	ldr	q1, [sp, #64]
   209a4:	ldr	q0, [sp, #96]
   209a8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   209ac:	mov	v1.16b, v0.16b
   209b0:	ldr	q6, [sp, #80]
   209b4:	mov	v0.16b, v6.16b
   209b8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   209bc:	ldr	q2, [sp, #128]
   209c0:	mov	v1.16b, v2.16b
   209c4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   209c8:	bl	141f0 <__expl_finite@GLIBC_2.17>
   209cc:	mov	v1.16b, v0.16b
   209d0:	ldr	q4, [sp, #112]
   209d4:	mov	v0.16b, v4.16b
   209d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   209dc:	ldr	q1, [sp, #96]
   209e0:	tbnz	w19, #31, 21214 <erfcf128@@GLIBC_2.27+0xacc>
   209e4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   209e8:	str	q0, [sp, #64]
   209ec:	movi	v1.2d, #0x0
   209f0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   209f4:	ldr	q2, [sp, #64]
   209f8:	cbnz	w0, 21028 <erfcf128@@GLIBC_2.27+0x8e0>
   209fc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   20a00:	ldr	x0, [x0, #3976]
   20a04:	mrs	x1, tpidr_el0
   20a08:	mov	w2, #0x22                  	// #34
   20a0c:	ldr	x23, [sp, #48]
   20a10:	str	w2, [x1, x0]
   20a14:	b	207ac <erfcf128@@GLIBC_2.27+0x64>
   20a18:	lsr	w0, w19, #31
   20a1c:	lsl	w0, w0, #1
   20a20:	bl	577b8 <f64xsubf128@@GLIBC_2.28+0x3a38>
   20a24:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   20a28:	add	x0, x0, #0x2f0
   20a2c:	ldr	q1, [sp, #64]
   20a30:	str	q0, [sp, #64]
   20a34:	ldr	q0, [x0]
   20a38:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20a3c:	mov	v1.16b, v0.16b
   20a40:	ldr	q2, [sp, #64]
   20a44:	mov	v0.16b, v2.16b
   20a48:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20a4c:	mov	v2.16b, v0.16b
   20a50:	mov	v0.16b, v2.16b
   20a54:	ldp	x19, x20, [sp, #16]
   20a58:	ldp	x21, x22, [sp, #32]
   20a5c:	ldp	x29, x30, [sp], #144
   20a60:	ret
   20a64:	tbnz	w19, #31, 2103c <erfcf128@@GLIBC_2.27+0x8f4>
   20a68:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   20a6c:	ldr	x0, [x0, #3976]
   20a70:	adrp	x3, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20a74:	add	x3, x3, #0x6b0
   20a78:	mrs	x1, tpidr_el0
   20a7c:	mov	w2, #0x22                  	// #34
   20a80:	ldr	q1, [x3]
   20a84:	str	w2, [x1, x0]
   20a88:	mov	v0.16b, v1.16b
   20a8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20a90:	mov	v2.16b, v0.16b
   20a94:	b	207ac <erfcf128@@GLIBC_2.27+0x64>
   20a98:	cmp	w0, #0x6
   20a9c:	b.eq	21304 <erfcf128@@GLIBC_2.27+0xbbc>  // b.none
   20aa0:	cmp	w0, #0x7
   20aa4:	b.ne	21134 <erfcf128@@GLIBC_2.27+0x9ec>  // b.any
   20aa8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20aac:	add	x0, x0, #0x880
   20ab0:	adrp	x22, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   20ab4:	add	x20, x22, #0xa80
   20ab8:	mov	x21, x20
   20abc:	add	x20, x20, #0x140
   20ac0:	ldr	q4, [x0]
   20ac4:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20ac8:	add	x0, x0, #0x890
   20acc:	add	x23, x21, #0xb0
   20ad0:	ldr	q2, [x0]
   20ad4:	b	20adc <erfcf128@@GLIBC_2.27+0x394>
   20ad8:	ldr	q4, [x20]
   20adc:	ldr	q0, [sp, #80]
   20ae0:	mov	v1.16b, v2.16b
   20ae4:	str	q4, [sp, #64]
   20ae8:	sub	x20, x20, #0x10
   20aec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20af0:	ldr	q4, [sp, #64]
   20af4:	mov	v1.16b, v4.16b
   20af8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20afc:	cmp	x20, x23
   20b00:	mov	v2.16b, v0.16b
   20b04:	b.ne	20ad8 <erfcf128@@GLIBC_2.27+0x390>  // b.any
   20b08:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20b0c:	add	x0, x0, #0x8a0
   20b10:	str	q0, [sp, #64]
   20b14:	add	x22, x22, #0xa80
   20b18:	ldr	q0, [sp, #80]
   20b1c:	add	x21, x21, #0x1d0
   20b20:	ldr	q1, [x0]
   20b24:	add	x22, x22, #0x150
   20b28:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20b2c:	mov	v1.16b, v0.16b
   20b30:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20b34:	add	x0, x0, #0x8b0
   20b38:	ldr	q2, [sp, #64]
   20b3c:	ldr	q4, [x0]
   20b40:	b	20b48 <erfcf128@@GLIBC_2.27+0x400>
   20b44:	ldr	q4, [x21]
   20b48:	ldr	q0, [sp, #80]
   20b4c:	sub	x21, x21, #0x10
   20b50:	str	q2, [sp, #64]
   20b54:	str	q4, [sp, #112]
   20b58:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20b5c:	ldr	q4, [sp, #112]
   20b60:	mov	v1.16b, v4.16b
   20b64:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20b68:	cmp	x21, x22
   20b6c:	mov	v1.16b, v0.16b
   20b70:	ldr	q2, [sp, #64]
   20b74:	b.ne	20b44 <erfcf128@@GLIBC_2.27+0x3fc>  // b.any
   20b78:	b	20930 <erfcf128@@GLIBC_2.27+0x1e8>
   20b7c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   20b80:	add	x0, x0, #0x760
   20b84:	fmov	d2, x20
   20b88:	str	x23, [sp, #48]
   20b8c:	ldr	q1, [x0]
   20b90:	fmov	v2.d[1], x21
   20b94:	mov	v0.16b, v2.16b
   20b98:	str	q2, [sp, #64]
   20b9c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20ba0:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   20ba4:	cmp	w0, #0x5
   20ba8:	ldr	q2, [sp, #64]
   20bac:	b.eq	217d0 <erfcf128@@GLIBC_2.27+0x1088>  // b.none
   20bb0:	b.gt	20dec <erfcf128@@GLIBC_2.27+0x6a4>
   20bb4:	cmp	w0, #0x3
   20bb8:	b.eq	216c0 <erfcf128@@GLIBC_2.27+0xf78>  // b.none
   20bbc:	cmp	w0, #0x4
   20bc0:	b.ne	20cd4 <erfcf128@@GLIBC_2.27+0x58c>  // b.any
   20bc4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   20bc8:	add	x0, x0, #0x330
   20bcc:	mov	v0.16b, v2.16b
   20bd0:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20bd4:	add	x22, x20, #0x980
   20bd8:	ldr	q1, [x0]
   20bdc:	mov	x21, x22
   20be0:	add	x23, x21, #0x210
   20be4:	add	x22, x22, #0x290
   20be8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20bec:	str	q0, [sp, #64]
   20bf0:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20bf4:	add	x0, x0, #0x470
   20bf8:	ldr	q2, [x0]
   20bfc:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20c00:	add	x0, x0, #0x480
   20c04:	ldr	q1, [x0]
   20c08:	b	20c10 <erfcf128@@GLIBC_2.27+0x4c8>
   20c0c:	ldr	q2, [x22]
   20c10:	ldr	q0, [sp, #64]
   20c14:	sub	x22, x22, #0x10
   20c18:	str	q2, [sp, #80]
   20c1c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20c20:	ldr	q2, [sp, #80]
   20c24:	mov	v1.16b, v2.16b
   20c28:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20c2c:	cmp	x22, x23
   20c30:	mov	v1.16b, v0.16b
   20c34:	b.ne	20c0c <erfcf128@@GLIBC_2.27+0x4c4>  // b.any
   20c38:	ldr	q0, [sp, #64]
   20c3c:	add	x20, x20, #0x980
   20c40:	add	x21, x21, #0x310
   20c44:	add	x20, x20, #0x2a0
   20c48:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20c4c:	str	q0, [sp, #96]
   20c50:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20c54:	add	x0, x0, #0x490
   20c58:	ldr	q0, [sp, #64]
   20c5c:	ldr	q1, [x0]
   20c60:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20c64:	mov	v1.16b, v0.16b
   20c68:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20c6c:	add	x0, x0, #0x4a0
   20c70:	ldr	q2, [x0]
   20c74:	b	20c7c <erfcf128@@GLIBC_2.27+0x534>
   20c78:	ldr	q2, [x21]
   20c7c:	ldr	q0, [sp, #64]
   20c80:	sub	x21, x21, #0x10
   20c84:	str	q2, [sp, #80]
   20c88:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20c8c:	ldr	q2, [sp, #80]
   20c90:	mov	v1.16b, v2.16b
   20c94:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20c98:	cmp	x21, x20
   20c9c:	mov	v1.16b, v0.16b
   20ca0:	b.ne	20c78 <erfcf128@@GLIBC_2.27+0x530>  // b.any
   20ca4:	ldr	q0, [sp, #96]
   20ca8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20cac:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20cb0:	add	x0, x0, #0x4b0
   20cb4:	ldr	q1, [x0]
   20cb8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20cbc:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20cc0:	add	x0, x0, #0x4c0
   20cc4:	ldr	q1, [x0]
   20cc8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20ccc:	mov	v2.16b, v0.16b
   20cd0:	b	21020 <erfcf128@@GLIBC_2.27+0x8d8>
   20cd4:	cmp	w0, #0x2
   20cd8:	b.ne	215b0 <erfcf128@@GLIBC_2.27+0xe68>  // b.any
   20cdc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   20ce0:	add	x0, x0, #0xb40
   20ce4:	mov	v0.16b, v2.16b
   20ce8:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20cec:	add	x22, x20, #0x980
   20cf0:	ldr	q1, [x0]
   20cf4:	mov	x21, x22
   20cf8:	sub	x23, x21, #0x10
   20cfc:	add	x22, x22, #0x70
   20d00:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20d04:	str	q0, [sp, #64]
   20d08:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20d0c:	add	x0, x0, #0x3b0
   20d10:	ldr	q4, [x0]
   20d14:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20d18:	add	x0, x0, #0x3c0
   20d1c:	ldr	q2, [x0]
   20d20:	b	20d28 <erfcf128@@GLIBC_2.27+0x5e0>
   20d24:	ldr	q4, [x22]
   20d28:	ldr	q1, [sp, #64]
   20d2c:	mov	v0.16b, v2.16b
   20d30:	str	q4, [sp, #80]
   20d34:	sub	x22, x22, #0x10
   20d38:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20d3c:	ldr	q4, [sp, #80]
   20d40:	mov	v1.16b, v4.16b
   20d44:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20d48:	cmp	x22, x23
   20d4c:	mov	v2.16b, v0.16b
   20d50:	b.ne	20d24 <erfcf128@@GLIBC_2.27+0x5dc>  // b.any
   20d54:	ldr	q1, [sp, #64]
   20d58:	add	x20, x20, #0x980
   20d5c:	add	x21, x21, #0xf0
   20d60:	add	x20, x20, #0x80
   20d64:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20d68:	str	q0, [sp, #96]
   20d6c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20d70:	add	x0, x0, #0x3d0
   20d74:	ldr	q0, [sp, #64]
   20d78:	ldr	q1, [x0]
   20d7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20d80:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20d84:	add	x0, x0, #0x3e0
   20d88:	ldr	q2, [x0]
   20d8c:	b	20d94 <erfcf128@@GLIBC_2.27+0x64c>
   20d90:	ldr	q2, [x21]
   20d94:	ldr	q1, [sp, #64]
   20d98:	sub	x21, x21, #0x10
   20d9c:	str	q2, [sp, #80]
   20da0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20da4:	ldr	q2, [sp, #80]
   20da8:	mov	v1.16b, v2.16b
   20dac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20db0:	cmp	x21, x20
   20db4:	b.ne	20d90 <erfcf128@@GLIBC_2.27+0x648>  // b.any
   20db8:	mov	v1.16b, v0.16b
   20dbc:	ldr	q0, [sp, #96]
   20dc0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20dc4:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20dc8:	add	x0, x0, #0x3f0
   20dcc:	ldr	q1, [x0]
   20dd0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20dd4:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20dd8:	add	x0, x0, #0x400
   20ddc:	ldr	q1, [x0]
   20de0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20de4:	mov	v2.16b, v0.16b
   20de8:	b	21020 <erfcf128@@GLIBC_2.27+0x8d8>
   20dec:	cmp	w0, #0x7
   20df0:	b.eq	214a0 <erfcf128@@GLIBC_2.27+0xd58>  // b.none
   20df4:	cmp	w0, #0x8
   20df8:	b.ne	20f0c <erfcf128@@GLIBC_2.27+0x7c4>  // b.any
   20dfc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   20e00:	add	x0, x0, #0x2f0
   20e04:	mov	v0.16b, v2.16b
   20e08:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20e0c:	add	x22, x20, #0x980
   20e10:	ldr	q1, [x0]
   20e14:	mov	x21, x22
   20e18:	add	x23, x21, #0x650
   20e1c:	add	x22, x22, #0x6d0
   20e20:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20e24:	str	q0, [sp, #64]
   20e28:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20e2c:	add	x0, x0, #0x5f0
   20e30:	ldr	q2, [x0]
   20e34:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20e38:	add	x0, x0, #0x600
   20e3c:	ldr	q1, [x0]
   20e40:	b	20e48 <erfcf128@@GLIBC_2.27+0x700>
   20e44:	ldr	q2, [x22]
   20e48:	ldr	q0, [sp, #64]
   20e4c:	sub	x22, x22, #0x10
   20e50:	str	q2, [sp, #80]
   20e54:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20e58:	ldr	q2, [sp, #80]
   20e5c:	mov	v1.16b, v2.16b
   20e60:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20e64:	cmp	x22, x23
   20e68:	mov	v1.16b, v0.16b
   20e6c:	b.ne	20e44 <erfcf128@@GLIBC_2.27+0x6fc>  // b.any
   20e70:	ldr	q0, [sp, #64]
   20e74:	add	x20, x20, #0x980
   20e78:	add	x21, x21, #0x750
   20e7c:	add	x20, x20, #0x6e0
   20e80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20e84:	str	q0, [sp, #96]
   20e88:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20e8c:	add	x0, x0, #0x610
   20e90:	ldr	q0, [sp, #64]
   20e94:	ldr	q1, [x0]
   20e98:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20e9c:	mov	v1.16b, v0.16b
   20ea0:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20ea4:	add	x0, x0, #0x620
   20ea8:	ldr	q2, [x0]
   20eac:	b	20eb4 <erfcf128@@GLIBC_2.27+0x76c>
   20eb0:	ldr	q2, [x21]
   20eb4:	ldr	q0, [sp, #64]
   20eb8:	sub	x21, x21, #0x10
   20ebc:	str	q2, [sp, #80]
   20ec0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20ec4:	ldr	q2, [sp, #80]
   20ec8:	mov	v1.16b, v2.16b
   20ecc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20ed0:	cmp	x21, x20
   20ed4:	mov	v1.16b, v0.16b
   20ed8:	b.ne	20eb0 <erfcf128@@GLIBC_2.27+0x768>  // b.any
   20edc:	ldr	q0, [sp, #96]
   20ee0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20ee4:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20ee8:	add	x0, x0, #0x630
   20eec:	ldr	q1, [x0]
   20ef0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20ef4:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20ef8:	add	x0, x0, #0x640
   20efc:	ldr	q1, [x0]
   20f00:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20f04:	mov	v2.16b, v0.16b
   20f08:	b	21020 <erfcf128@@GLIBC_2.27+0x8d8>
   20f0c:	cmp	w0, #0x6
   20f10:	b.ne	215b0 <erfcf128@@GLIBC_2.27+0xe68>  // b.any
   20f14:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   20f18:	add	x0, x0, #0x360
   20f1c:	mov	v0.16b, v2.16b
   20f20:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20f24:	add	x22, x20, #0x980
   20f28:	ldr	q1, [x0]
   20f2c:	mov	x21, x22
   20f30:	add	x23, x21, #0x430
   20f34:	add	x22, x22, #0x4b0
   20f38:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   20f3c:	str	q0, [sp, #64]
   20f40:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20f44:	add	x0, x0, #0x530
   20f48:	ldr	q2, [x0]
   20f4c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20f50:	add	x0, x0, #0x540
   20f54:	ldr	q1, [x0]
   20f58:	b	20f60 <erfcf128@@GLIBC_2.27+0x818>
   20f5c:	ldr	q2, [x22]
   20f60:	ldr	q0, [sp, #64]
   20f64:	sub	x22, x22, #0x10
   20f68:	str	q2, [sp, #80]
   20f6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20f70:	ldr	q2, [sp, #80]
   20f74:	mov	v1.16b, v2.16b
   20f78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20f7c:	cmp	x22, x23
   20f80:	mov	v1.16b, v0.16b
   20f84:	b.ne	20f5c <erfcf128@@GLIBC_2.27+0x814>  // b.any
   20f88:	ldr	q0, [sp, #64]
   20f8c:	add	x20, x20, #0x980
   20f90:	add	x21, x21, #0x530
   20f94:	add	x20, x20, #0x4c0
   20f98:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20f9c:	str	q0, [sp, #96]
   20fa0:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20fa4:	add	x0, x0, #0x550
   20fa8:	ldr	q0, [sp, #64]
   20fac:	ldr	q1, [x0]
   20fb0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20fb4:	mov	v1.16b, v0.16b
   20fb8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   20fbc:	add	x0, x0, #0x560
   20fc0:	ldr	q2, [x0]
   20fc4:	b	20fcc <erfcf128@@GLIBC_2.27+0x884>
   20fc8:	ldr	q2, [x21]
   20fcc:	ldr	q0, [sp, #64]
   20fd0:	sub	x21, x21, #0x10
   20fd4:	str	q2, [sp, #80]
   20fd8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   20fdc:	ldr	q2, [sp, #80]
   20fe0:	mov	v1.16b, v2.16b
   20fe4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   20fe8:	cmp	x21, x20
   20fec:	mov	v1.16b, v0.16b
   20ff0:	b.ne	20fc8 <erfcf128@@GLIBC_2.27+0x880>  // b.any
   20ff4:	ldr	q0, [sp, #96]
   20ff8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   20ffc:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21000:	add	x0, x0, #0x570
   21004:	ldr	q1, [x0]
   21008:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2100c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21010:	add	x0, x0, #0x580
   21014:	ldr	q1, [x0]
   21018:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2101c:	mov	v2.16b, v0.16b
   21020:	mov	v1.16b, v2.16b
   21024:	tbnz	w19, #31, 2121c <erfcf128@@GLIBC_2.27+0xad4>
   21028:	ldr	x23, [sp, #48]
   2102c:	b	207ac <erfcf128@@GLIBC_2.27+0x64>
   21030:	bl	219b8 <erff128@@GLIBC_2.27>
   21034:	mov	v1.16b, v0.16b
   21038:	b	20798 <erfcf128@@GLIBC_2.27+0x50>
   2103c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21040:	add	x0, x0, #0x6b0
   21044:	ldr	q1, [x0]
   21048:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2104c:	add	x0, x0, #0xae0
   21050:	ldr	q0, [x0]
   21054:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   21058:	mov	v2.16b, v0.16b
   2105c:	b	207ac <erfcf128@@GLIBC_2.27+0x64>
   21060:	cmp	w0, #0x1
   21064:	b.ne	21238 <erfcf128@@GLIBC_2.27+0xaf0>  // b.any
   21068:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2106c:	add	x0, x0, #0x700
   21070:	mov	x22, x21
   21074:	add	x21, x21, #0xa50
   21078:	add	x23, x22, #0x9a0
   2107c:	ldr	q4, [x0]
   21080:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21084:	add	x0, x0, #0x710
   21088:	ldr	q2, [x0]
   2108c:	b	21094 <erfcf128@@GLIBC_2.27+0x94c>
   21090:	ldr	q4, [x21]
   21094:	ldr	q0, [sp, #80]
   21098:	mov	v1.16b, v2.16b
   2109c:	str	q4, [sp, #64]
   210a0:	sub	x21, x21, #0x10
   210a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   210a8:	ldr	q4, [sp, #64]
   210ac:	mov	v1.16b, v4.16b
   210b0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   210b4:	cmp	x21, x23
   210b8:	mov	v2.16b, v0.16b
   210bc:	b.ne	21090 <erfcf128@@GLIBC_2.27+0x948>  // b.any
   210c0:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   210c4:	add	x0, x0, #0x720
   210c8:	str	q0, [sp, #64]
   210cc:	add	x20, x20, #0x980
   210d0:	ldr	q0, [sp, #80]
   210d4:	add	x22, x22, #0xb00
   210d8:	ldr	q1, [x0]
   210dc:	add	x20, x20, #0xa60
   210e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   210e4:	mov	v1.16b, v0.16b
   210e8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   210ec:	add	x0, x0, #0x730
   210f0:	ldr	q2, [sp, #64]
   210f4:	ldr	q4, [x0]
   210f8:	b	21100 <erfcf128@@GLIBC_2.27+0x9b8>
   210fc:	ldr	q4, [x22]
   21100:	ldr	q0, [sp, #80]
   21104:	sub	x22, x22, #0x10
   21108:	str	q2, [sp, #64]
   2110c:	str	q4, [sp, #112]
   21110:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21114:	ldr	q4, [sp, #112]
   21118:	mov	v1.16b, v4.16b
   2111c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21120:	cmp	x22, x20
   21124:	mov	v1.16b, v0.16b
   21128:	ldr	q2, [sp, #64]
   2112c:	b.ne	210fc <erfcf128@@GLIBC_2.27+0x9b4>  // b.any
   21130:	b	20930 <erfcf128@@GLIBC_2.27+0x1e8>
   21134:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21138:	cmp	w0, #0x5
   2113c:	add	x21, x20, #0x980
   21140:	b.ne	21238 <erfcf128@@GLIBC_2.27+0xaf0>  // b.any
   21144:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21148:	add	x0, x0, #0x800
   2114c:	mov	x22, x21
   21150:	add	x21, x21, #0xfc0
   21154:	add	x23, x22, #0xf30
   21158:	ldr	q4, [x0]
   2115c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21160:	add	x0, x0, #0x810
   21164:	ldr	q2, [x0]
   21168:	b	21170 <erfcf128@@GLIBC_2.27+0xa28>
   2116c:	ldr	q4, [x21]
   21170:	ldr	q0, [sp, #80]
   21174:	mov	v1.16b, v2.16b
   21178:	str	q4, [sp, #64]
   2117c:	sub	x21, x21, #0x10
   21180:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21184:	ldr	q4, [sp, #64]
   21188:	mov	v1.16b, v4.16b
   2118c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21190:	cmp	x21, x23
   21194:	mov	v2.16b, v0.16b
   21198:	b.ne	2116c <erfcf128@@GLIBC_2.27+0xa24>  // b.any
   2119c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   211a0:	add	x0, x0, #0x820
   211a4:	str	q0, [sp, #64]
   211a8:	add	x20, x20, #0x980
   211ac:	ldr	q0, [sp, #80]
   211b0:	add	x20, x20, #0xfd0
   211b4:	ldr	q1, [x0]
   211b8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   211bc:	mov	v1.16b, v0.16b
   211c0:	mov	x0, #0x1060                	// #4192
   211c4:	add	x22, x22, x0
   211c8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   211cc:	add	x0, x0, #0x830
   211d0:	ldr	q2, [sp, #64]
   211d4:	ldr	q4, [x0]
   211d8:	b	211e0 <erfcf128@@GLIBC_2.27+0xa98>
   211dc:	ldr	q4, [x22]
   211e0:	ldr	q0, [sp, #80]
   211e4:	sub	x22, x22, #0x10
   211e8:	str	q2, [sp, #64]
   211ec:	str	q4, [sp, #112]
   211f0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   211f4:	ldr	q4, [sp, #112]
   211f8:	mov	v1.16b, v4.16b
   211fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21200:	cmp	x22, x20
   21204:	mov	v1.16b, v0.16b
   21208:	ldr	q2, [sp, #64]
   2120c:	b.ne	211dc <erfcf128@@GLIBC_2.27+0xa94>  // b.any
   21210:	b	20930 <erfcf128@@GLIBC_2.27+0x1e8>
   21214:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   21218:	mov	v1.16b, v0.16b
   2121c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   21220:	add	x0, x0, #0xae0
   21224:	ldr	q0, [x0]
   21228:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2122c:	mov	v2.16b, v0.16b
   21230:	ldr	x23, [sp, #48]
   21234:	b	207ac <erfcf128@@GLIBC_2.27+0x64>
   21238:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2123c:	add	x0, x0, #0x6c0
   21240:	add	x22, x20, #0x980
   21244:	add	x21, x21, #0x900
   21248:	add	x23, x22, #0x870
   2124c:	ldr	q4, [x0]
   21250:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21254:	add	x0, x0, #0x6d0
   21258:	ldr	q2, [x0]
   2125c:	b	21264 <erfcf128@@GLIBC_2.27+0xb1c>
   21260:	ldr	q4, [x21]
   21264:	ldr	q0, [sp, #80]
   21268:	mov	v1.16b, v2.16b
   2126c:	str	q4, [sp, #64]
   21270:	sub	x21, x21, #0x10
   21274:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21278:	ldr	q4, [sp, #64]
   2127c:	mov	v1.16b, v4.16b
   21280:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21284:	cmp	x21, x23
   21288:	mov	v2.16b, v0.16b
   2128c:	b.ne	21260 <erfcf128@@GLIBC_2.27+0xb18>  // b.any
   21290:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21294:	add	x0, x0, #0x6e0
   21298:	str	q0, [sp, #64]
   2129c:	add	x20, x20, #0x980
   212a0:	ldr	q0, [sp, #80]
   212a4:	add	x22, x22, #0x990
   212a8:	ldr	q1, [x0]
   212ac:	add	x20, x20, #0x910
   212b0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   212b4:	mov	v1.16b, v0.16b
   212b8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   212bc:	add	x0, x0, #0x6f0
   212c0:	ldr	q2, [sp, #64]
   212c4:	ldr	q4, [x0]
   212c8:	b	212d0 <erfcf128@@GLIBC_2.27+0xb88>
   212cc:	ldr	q4, [x22]
   212d0:	ldr	q0, [sp, #80]
   212d4:	sub	x22, x22, #0x10
   212d8:	str	q2, [sp, #64]
   212dc:	str	q4, [sp, #112]
   212e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   212e4:	ldr	q4, [sp, #112]
   212e8:	mov	v1.16b, v4.16b
   212ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   212f0:	cmp	x22, x20
   212f4:	mov	v1.16b, v0.16b
   212f8:	ldr	q2, [sp, #64]
   212fc:	b.ne	212cc <erfcf128@@GLIBC_2.27+0xb84>  // b.any
   21300:	b	20930 <erfcf128@@GLIBC_2.27+0x1e8>
   21304:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21308:	add	x0, x0, #0x840
   2130c:	adrp	x22, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   21310:	add	x20, x22, #0xa80
   21314:	mov	x21, x20
   21318:	sub	x23, x20, #0x90
   2131c:	ldr	q4, [x0]
   21320:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21324:	add	x0, x0, #0x850
   21328:	ldr	q2, [x0]
   2132c:	b	21334 <erfcf128@@GLIBC_2.27+0xbec>
   21330:	ldr	q4, [x20]
   21334:	ldr	q0, [sp, #80]
   21338:	mov	v1.16b, v2.16b
   2133c:	str	q4, [sp, #64]
   21340:	sub	x20, x20, #0x10
   21344:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21348:	ldr	q4, [sp, #64]
   2134c:	mov	v1.16b, v4.16b
   21350:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21354:	cmp	x20, x23
   21358:	mov	v2.16b, v0.16b
   2135c:	b.ne	21330 <erfcf128@@GLIBC_2.27+0xbe8>  // b.any
   21360:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21364:	add	x0, x0, #0x860
   21368:	str	q0, [sp, #64]
   2136c:	add	x20, x22, #0xa80
   21370:	ldr	q0, [sp, #80]
   21374:	add	x21, x21, #0xa0
   21378:	ldr	q1, [x0]
   2137c:	add	x20, x20, #0x10
   21380:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   21384:	mov	v1.16b, v0.16b
   21388:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2138c:	add	x0, x0, #0x870
   21390:	ldr	q2, [sp, #64]
   21394:	ldr	q4, [x0]
   21398:	b	213a0 <erfcf128@@GLIBC_2.27+0xc58>
   2139c:	ldr	q4, [x21]
   213a0:	ldr	q0, [sp, #80]
   213a4:	sub	x21, x21, #0x10
   213a8:	str	q2, [sp, #64]
   213ac:	str	q4, [sp, #112]
   213b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   213b4:	ldr	q4, [sp, #112]
   213b8:	mov	v1.16b, v4.16b
   213bc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   213c0:	cmp	x21, x20
   213c4:	mov	v1.16b, v0.16b
   213c8:	ldr	q2, [sp, #64]
   213cc:	b.ne	2139c <erfcf128@@GLIBC_2.27+0xc54>  // b.any
   213d0:	b	20930 <erfcf128@@GLIBC_2.27+0x1e8>
   213d4:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   213d8:	add	x0, x0, #0x740
   213dc:	mov	x22, x21
   213e0:	add	x21, x21, #0xbc0
   213e4:	add	x23, x22, #0xb10
   213e8:	ldr	q4, [x0]
   213ec:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   213f0:	add	x0, x0, #0x750
   213f4:	ldr	q2, [x0]
   213f8:	b	21400 <erfcf128@@GLIBC_2.27+0xcb8>
   213fc:	ldr	q4, [x21]
   21400:	ldr	q0, [sp, #80]
   21404:	mov	v1.16b, v2.16b
   21408:	str	q4, [sp, #64]
   2140c:	sub	x21, x21, #0x10
   21410:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21414:	ldr	q4, [sp, #64]
   21418:	mov	v1.16b, v4.16b
   2141c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21420:	cmp	x21, x23
   21424:	mov	v2.16b, v0.16b
   21428:	b.ne	213fc <erfcf128@@GLIBC_2.27+0xcb4>  // b.any
   2142c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21430:	add	x0, x0, #0x760
   21434:	str	q0, [sp, #64]
   21438:	add	x20, x20, #0x980
   2143c:	ldr	q0, [sp, #80]
   21440:	add	x22, x22, #0xc70
   21444:	ldr	q1, [x0]
   21448:	add	x20, x20, #0xbd0
   2144c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21450:	mov	v1.16b, v0.16b
   21454:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21458:	add	x0, x0, #0x770
   2145c:	ldr	q2, [sp, #64]
   21460:	ldr	q4, [x0]
   21464:	b	2146c <erfcf128@@GLIBC_2.27+0xd24>
   21468:	ldr	q4, [x22]
   2146c:	ldr	q0, [sp, #80]
   21470:	sub	x22, x22, #0x10
   21474:	str	q2, [sp, #64]
   21478:	str	q4, [sp, #112]
   2147c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21480:	ldr	q4, [sp, #112]
   21484:	mov	v1.16b, v4.16b
   21488:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2148c:	cmp	x22, x20
   21490:	mov	v1.16b, v0.16b
   21494:	ldr	q2, [sp, #64]
   21498:	b.ne	21468 <erfcf128@@GLIBC_2.27+0xd20>  // b.any
   2149c:	b	20930 <erfcf128@@GLIBC_2.27+0x1e8>
   214a0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   214a4:	add	x0, x0, #0x350
   214a8:	mov	v0.16b, v2.16b
   214ac:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   214b0:	add	x22, x20, #0x980
   214b4:	ldr	q1, [x0]
   214b8:	mov	x21, x22
   214bc:	add	x23, x21, #0x540
   214c0:	add	x22, x22, #0x5c0
   214c4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   214c8:	str	q0, [sp, #64]
   214cc:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   214d0:	add	x0, x0, #0x590
   214d4:	ldr	q2, [x0]
   214d8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   214dc:	add	x0, x0, #0x5a0
   214e0:	ldr	q1, [x0]
   214e4:	b	214ec <erfcf128@@GLIBC_2.27+0xda4>
   214e8:	ldr	q2, [x22]
   214ec:	ldr	q0, [sp, #64]
   214f0:	sub	x22, x22, #0x10
   214f4:	str	q2, [sp, #80]
   214f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   214fc:	ldr	q2, [sp, #80]
   21500:	mov	v1.16b, v2.16b
   21504:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21508:	cmp	x22, x23
   2150c:	mov	v1.16b, v0.16b
   21510:	b.ne	214e8 <erfcf128@@GLIBC_2.27+0xda0>  // b.any
   21514:	ldr	q0, [sp, #64]
   21518:	add	x20, x20, #0x980
   2151c:	add	x21, x21, #0x640
   21520:	add	x20, x20, #0x5d0
   21524:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21528:	str	q0, [sp, #96]
   2152c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21530:	add	x0, x0, #0x5b0
   21534:	ldr	q0, [sp, #64]
   21538:	ldr	q1, [x0]
   2153c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21540:	mov	v1.16b, v0.16b
   21544:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21548:	add	x0, x0, #0x5c0
   2154c:	ldr	q2, [x0]
   21550:	b	21558 <erfcf128@@GLIBC_2.27+0xe10>
   21554:	ldr	q2, [x21]
   21558:	ldr	q0, [sp, #64]
   2155c:	sub	x21, x21, #0x10
   21560:	str	q2, [sp, #80]
   21564:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21568:	ldr	q2, [sp, #80]
   2156c:	mov	v1.16b, v2.16b
   21570:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21574:	cmp	x21, x20
   21578:	mov	v1.16b, v0.16b
   2157c:	b.ne	21554 <erfcf128@@GLIBC_2.27+0xe0c>  // b.any
   21580:	ldr	q0, [sp, #96]
   21584:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   21588:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2158c:	add	x0, x0, #0x5d0
   21590:	ldr	q1, [x0]
   21594:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21598:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2159c:	add	x0, x0, #0x5e0
   215a0:	ldr	q1, [x0]
   215a4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   215a8:	mov	v2.16b, v0.16b
   215ac:	b	21020 <erfcf128@@GLIBC_2.27+0x8d8>
   215b0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   215b4:	add	x0, x0, #0x430
   215b8:	mov	v0.16b, v2.16b
   215bc:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   215c0:	add	x22, x20, #0x980
   215c4:	ldr	q1, [x0]
   215c8:	mov	x21, x22
   215cc:	add	x23, x21, #0x760
   215d0:	add	x22, x22, #0x7e0
   215d4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   215d8:	str	q0, [sp, #64]
   215dc:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   215e0:	add	x0, x0, #0x650
   215e4:	ldr	q2, [x0]
   215e8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   215ec:	add	x0, x0, #0x660
   215f0:	ldr	q1, [x0]
   215f4:	b	215fc <erfcf128@@GLIBC_2.27+0xeb4>
   215f8:	ldr	q2, [x22]
   215fc:	ldr	q0, [sp, #64]
   21600:	sub	x22, x22, #0x10
   21604:	str	q2, [sp, #80]
   21608:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2160c:	ldr	q2, [sp, #80]
   21610:	mov	v1.16b, v2.16b
   21614:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21618:	cmp	x22, x23
   2161c:	mov	v1.16b, v0.16b
   21620:	b.ne	215f8 <erfcf128@@GLIBC_2.27+0xeb0>  // b.any
   21624:	ldr	q0, [sp, #64]
   21628:	add	x20, x20, #0x980
   2162c:	add	x21, x21, #0x860
   21630:	add	x20, x20, #0x7f0
   21634:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21638:	str	q0, [sp, #96]
   2163c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21640:	add	x0, x0, #0x670
   21644:	ldr	q0, [sp, #64]
   21648:	ldr	q1, [x0]
   2164c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21650:	mov	v1.16b, v0.16b
   21654:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21658:	add	x0, x0, #0x680
   2165c:	ldr	q2, [x0]
   21660:	b	21668 <erfcf128@@GLIBC_2.27+0xf20>
   21664:	ldr	q2, [x21]
   21668:	ldr	q0, [sp, #64]
   2166c:	sub	x21, x21, #0x10
   21670:	str	q2, [sp, #80]
   21674:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21678:	ldr	q2, [sp, #80]
   2167c:	mov	v1.16b, v2.16b
   21680:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21684:	cmp	x21, x20
   21688:	mov	v1.16b, v0.16b
   2168c:	b.ne	21664 <erfcf128@@GLIBC_2.27+0xf1c>  // b.any
   21690:	ldr	q0, [sp, #96]
   21694:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   21698:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2169c:	add	x0, x0, #0x690
   216a0:	ldr	q1, [x0]
   216a4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   216a8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   216ac:	add	x0, x0, #0x6a0
   216b0:	ldr	q1, [x0]
   216b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   216b8:	mov	v2.16b, v0.16b
   216bc:	b	21020 <erfcf128@@GLIBC_2.27+0x8d8>
   216c0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   216c4:	add	x0, x0, #0xdb0
   216c8:	mov	v0.16b, v2.16b
   216cc:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   216d0:	add	x22, x20, #0x980
   216d4:	ldr	q1, [x0]
   216d8:	mov	x21, x22
   216dc:	add	x23, x21, #0x100
   216e0:	add	x22, x22, #0x180
   216e4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   216e8:	str	q0, [sp, #64]
   216ec:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   216f0:	add	x0, x0, #0x410
   216f4:	ldr	q2, [x0]
   216f8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   216fc:	add	x0, x0, #0x420
   21700:	ldr	q1, [x0]
   21704:	b	2170c <erfcf128@@GLIBC_2.27+0xfc4>
   21708:	ldr	q2, [x22]
   2170c:	ldr	q0, [sp, #64]
   21710:	sub	x22, x22, #0x10
   21714:	str	q2, [sp, #80]
   21718:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2171c:	ldr	q2, [sp, #80]
   21720:	mov	v1.16b, v2.16b
   21724:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21728:	cmp	x22, x23
   2172c:	mov	v1.16b, v0.16b
   21730:	b.ne	21708 <erfcf128@@GLIBC_2.27+0xfc0>  // b.any
   21734:	ldr	q0, [sp, #64]
   21738:	add	x20, x20, #0x980
   2173c:	add	x21, x21, #0x200
   21740:	add	x20, x20, #0x190
   21744:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21748:	str	q0, [sp, #96]
   2174c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21750:	add	x0, x0, #0x430
   21754:	ldr	q0, [sp, #64]
   21758:	ldr	q1, [x0]
   2175c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21760:	mov	v1.16b, v0.16b
   21764:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21768:	add	x0, x0, #0x440
   2176c:	ldr	q2, [x0]
   21770:	b	21778 <erfcf128@@GLIBC_2.27+0x1030>
   21774:	ldr	q2, [x21]
   21778:	ldr	q0, [sp, #64]
   2177c:	sub	x21, x21, #0x10
   21780:	str	q2, [sp, #80]
   21784:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21788:	ldr	q2, [sp, #80]
   2178c:	mov	v1.16b, v2.16b
   21790:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21794:	cmp	x21, x20
   21798:	mov	v1.16b, v0.16b
   2179c:	b.ne	21774 <erfcf128@@GLIBC_2.27+0x102c>  // b.any
   217a0:	ldr	q0, [sp, #96]
   217a4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   217a8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   217ac:	add	x0, x0, #0x450
   217b0:	ldr	q1, [x0]
   217b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   217b8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   217bc:	add	x0, x0, #0x460
   217c0:	ldr	q1, [x0]
   217c4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   217c8:	mov	v2.16b, v0.16b
   217cc:	b	21020 <erfcf128@@GLIBC_2.27+0x8d8>
   217d0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   217d4:	add	x0, x0, #0x2c0
   217d8:	mov	v0.16b, v2.16b
   217dc:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   217e0:	add	x22, x20, #0x980
   217e4:	ldr	q1, [x0]
   217e8:	mov	x21, x22
   217ec:	add	x23, x21, #0x320
   217f0:	add	x22, x22, #0x3a0
   217f4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   217f8:	str	q0, [sp, #64]
   217fc:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21800:	add	x0, x0, #0x4d0
   21804:	ldr	q2, [x0]
   21808:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2180c:	add	x0, x0, #0x4e0
   21810:	ldr	q1, [x0]
   21814:	b	2181c <erfcf128@@GLIBC_2.27+0x10d4>
   21818:	ldr	q2, [x22]
   2181c:	ldr	q0, [sp, #64]
   21820:	sub	x22, x22, #0x10
   21824:	str	q2, [sp, #80]
   21828:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2182c:	ldr	q2, [sp, #80]
   21830:	mov	v1.16b, v2.16b
   21834:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21838:	cmp	x22, x23
   2183c:	mov	v1.16b, v0.16b
   21840:	b.ne	21818 <erfcf128@@GLIBC_2.27+0x10d0>  // b.any
   21844:	ldr	q0, [sp, #64]
   21848:	add	x20, x20, #0x980
   2184c:	add	x21, x21, #0x420
   21850:	add	x20, x20, #0x3b0
   21854:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21858:	str	q0, [sp, #96]
   2185c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21860:	add	x0, x0, #0x4f0
   21864:	ldr	q0, [sp, #64]
   21868:	ldr	q1, [x0]
   2186c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21870:	mov	v1.16b, v0.16b
   21874:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21878:	add	x0, x0, #0x500
   2187c:	ldr	q2, [x0]
   21880:	b	21888 <erfcf128@@GLIBC_2.27+0x1140>
   21884:	ldr	q2, [x21]
   21888:	ldr	q0, [sp, #64]
   2188c:	sub	x21, x21, #0x10
   21890:	str	q2, [sp, #80]
   21894:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21898:	ldr	q2, [sp, #80]
   2189c:	mov	v1.16b, v2.16b
   218a0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   218a4:	cmp	x21, x20
   218a8:	mov	v1.16b, v0.16b
   218ac:	b.ne	21884 <erfcf128@@GLIBC_2.27+0x113c>  // b.any
   218b0:	ldr	q0, [sp, #96]
   218b4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   218b8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   218bc:	add	x0, x0, #0x510
   218c0:	ldr	q1, [x0]
   218c4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   218c8:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   218cc:	add	x0, x0, #0x520
   218d0:	ldr	q1, [x0]
   218d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   218d8:	mov	v2.16b, v0.16b
   218dc:	b	21020 <erfcf128@@GLIBC_2.27+0x8d8>
   218e0:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   218e4:	add	x0, x0, #0x7c0
   218e8:	adrp	x20, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   218ec:	add	x22, x20, #0x980
   218f0:	mov	x21, x22
   218f4:	add	x22, x22, #0xe80
   218f8:	ldr	q4, [x0]
   218fc:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21900:	add	x0, x0, #0x7d0
   21904:	add	x23, x21, #0xde0
   21908:	ldr	q2, [x0]
   2190c:	b	21914 <erfcf128@@GLIBC_2.27+0x11cc>
   21910:	ldr	q4, [x22]
   21914:	ldr	q0, [sp, #80]
   21918:	mov	v1.16b, v2.16b
   2191c:	str	q4, [sp, #64]
   21920:	sub	x22, x22, #0x10
   21924:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21928:	ldr	q4, [sp, #64]
   2192c:	mov	v1.16b, v4.16b
   21930:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21934:	cmp	x22, x23
   21938:	mov	v2.16b, v0.16b
   2193c:	b.ne	21910 <erfcf128@@GLIBC_2.27+0x11c8>  // b.any
   21940:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21944:	add	x0, x0, #0x7e0
   21948:	str	q0, [sp, #64]
   2194c:	add	x20, x20, #0x980
   21950:	ldr	q0, [sp, #80]
   21954:	add	x21, x21, #0xf20
   21958:	ldr	q1, [x0]
   2195c:	add	x20, x20, #0xe90
   21960:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21964:	mov	v1.16b, v0.16b
   21968:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   2196c:	add	x0, x0, #0x7f0
   21970:	ldr	q2, [sp, #64]
   21974:	ldr	q4, [x0]
   21978:	b	21980 <erfcf128@@GLIBC_2.27+0x1238>
   2197c:	ldr	q4, [x21]
   21980:	ldr	q0, [sp, #80]
   21984:	sub	x21, x21, #0x10
   21988:	str	q2, [sp, #64]
   2198c:	str	q4, [sp, #112]
   21990:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21994:	ldr	q4, [sp, #112]
   21998:	mov	v1.16b, v4.16b
   2199c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   219a0:	cmp	x21, x20
   219a4:	mov	v1.16b, v0.16b
   219a8:	ldr	q2, [sp, #64]
   219ac:	b.ne	2197c <erfcf128@@GLIBC_2.27+0x1234>  // b.any
   219b0:	b	20930 <erfcf128@@GLIBC_2.27+0x1e8>
   219b4:	nop

00000000000219b8 <erff128@@GLIBC_2.27>:
   219b8:	stp	x29, x30, [sp, #-128]!
   219bc:	mov	w0, #0x7ffeffff            	// #2147418111
   219c0:	mov	x29, sp
   219c4:	stp	x21, x22, [sp, #32]
   219c8:	str	q0, [sp, #64]
   219cc:	ldr	x21, [sp, #72]
   219d0:	stp	x19, x20, [sp, #16]
   219d4:	ldp	x2, x3, [sp, #64]
   219d8:	ubfx	x1, x21, #32, #31
   219dc:	cmp	w1, w0
   219e0:	lsr	x21, x21, #32
   219e4:	b.gt	21b3c <erff128@@GLIBC_2.27+0x184>
   219e8:	mov	w0, #0x3ffeffff            	// #1073676287
   219ec:	cmp	w1, w0
   219f0:	b.le	21a24 <erff128@@GLIBC_2.27+0x6c>
   219f4:	cmp	w21, #0x0
   219f8:	mov	w0, #0x4002ffff            	// #1073938431
   219fc:	mov	x20, #0x0                   	// #0
   21a00:	ccmp	w1, w0, #0x4, gt
   21a04:	mov	x19, #0x3fff000000000000    	// #4611404543450677248
   21a08:	b.le	21cc8 <erff128@@GLIBC_2.27+0x310>
   21a0c:	stp	x20, x19, [sp, #64]
   21a10:	ldp	x19, x20, [sp, #16]
   21a14:	ldp	x21, x22, [sp, #32]
   21a18:	ldr	q0, [sp, #64]
   21a1c:	ldp	x29, x30, [sp], #128
   21a20:	ret
   21a24:	bfi	x3, x1, #32, #32
   21a28:	stp	x2, x3, [sp, #96]
   21a2c:	mov	w0, #0xbfff                	// #49151
   21a30:	movk	w0, #0x3ffe, lsl #16
   21a34:	cmp	w1, w0
   21a38:	b.gt	21b94 <erff128@@GLIBC_2.27+0x1dc>
   21a3c:	mov	w0, #0x3fc5ffff            	// #1069940735
   21a40:	cmp	w1, w0
   21a44:	b.le	21d00 <erff128@@GLIBC_2.27+0x348>
   21a48:	ldr	q1, [sp, #64]
   21a4c:	adrp	x22, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   21a50:	str	x23, [sp, #48]
   21a54:	add	x19, x22, #0xa80
   21a58:	mov	x20, x19
   21a5c:	add	x19, x19, #0x260
   21a60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21a64:	add	x23, x20, #0x1e0
   21a68:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21a6c:	add	x0, x0, #0x8c0
   21a70:	str	q0, [sp, #64]
   21a74:	ldr	q2, [x0]
   21a78:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21a7c:	add	x0, x0, #0x8d0
   21a80:	ldr	q1, [x0]
   21a84:	b	21a8c <erff128@@GLIBC_2.27+0xd4>
   21a88:	ldr	q2, [x19]
   21a8c:	ldr	q0, [sp, #64]
   21a90:	sub	x19, x19, #0x10
   21a94:	str	q2, [sp, #80]
   21a98:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21a9c:	ldr	q2, [sp, #80]
   21aa0:	mov	v1.16b, v2.16b
   21aa4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21aa8:	cmp	x19, x23
   21aac:	mov	v1.16b, v0.16b
   21ab0:	b.ne	21a88 <erff128@@GLIBC_2.27+0xd0>  // b.any
   21ab4:	ldr	q0, [sp, #96]
   21ab8:	add	x19, x22, #0xa80
   21abc:	add	x20, x20, #0x2f0
   21ac0:	add	x19, x19, #0x270
   21ac4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21ac8:	str	q0, [sp, #112]
   21acc:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21ad0:	add	x0, x0, #0x910
   21ad4:	ldr	q0, [sp, #64]
   21ad8:	ldr	q1, [x0]
   21adc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   21ae0:	mov	v1.16b, v0.16b
   21ae4:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21ae8:	add	x0, x0, #0x920
   21aec:	ldr	q2, [x0]
   21af0:	b	21af8 <erff128@@GLIBC_2.27+0x140>
   21af4:	ldr	q2, [x20]
   21af8:	ldr	q0, [sp, #64]
   21afc:	sub	x20, x20, #0x10
   21b00:	str	q2, [sp, #80]
   21b04:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21b08:	ldr	q2, [sp, #80]
   21b0c:	mov	v1.16b, v2.16b
   21b10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21b14:	cmp	x20, x19
   21b18:	mov	v1.16b, v0.16b
   21b1c:	b.ne	21af4 <erff128@@GLIBC_2.27+0x13c>  // b.any
   21b20:	ldr	q0, [sp, #112]
   21b24:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   21b28:	ldr	q1, [sp, #96]
   21b2c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21b30:	str	q0, [sp, #64]
   21b34:	ldp	x20, x19, [sp, #64]
   21b38:	b	21ca0 <erff128@@GLIBC_2.27+0x2e8>
   21b3c:	lsr	w21, w21, #31
   21b40:	mov	w0, #0x1                   	// #1
   21b44:	sub	w0, w0, w21, lsl #1
   21b48:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   21b4c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   21b50:	add	x0, x0, #0x2f0
   21b54:	ldr	q1, [sp, #64]
   21b58:	str	q0, [sp, #64]
   21b5c:	ldr	q0, [x0]
   21b60:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   21b64:	mov	v1.16b, v0.16b
   21b68:	ldr	q2, [sp, #64]
   21b6c:	mov	v0.16b, v2.16b
   21b70:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21b74:	str	q0, [sp, #64]
   21b78:	ldp	x20, x19, [sp, #64]
   21b7c:	stp	x20, x19, [sp, #64]
   21b80:	ldp	x19, x20, [sp, #16]
   21b84:	ldp	x21, x22, [sp, #32]
   21b88:	ldr	q0, [sp, #64]
   21b8c:	ldp	x29, x30, [sp], #128
   21b90:	ret
   21b94:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   21b98:	add	x0, x0, #0x2f0
   21b9c:	ldr	q0, [sp, #96]
   21ba0:	adrp	x22, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   21ba4:	str	x23, [sp, #48]
   21ba8:	add	x20, x22, #0xa80
   21bac:	ldr	q1, [x0]
   21bb0:	mov	x19, x20
   21bb4:	add	x23, x19, #0x300
   21bb8:	add	x20, x20, #0x380
   21bbc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   21bc0:	str	q0, [sp, #64]
   21bc4:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21bc8:	add	x0, x0, #0x930
   21bcc:	ldr	q4, [x0]
   21bd0:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21bd4:	add	x0, x0, #0x940
   21bd8:	ldr	q2, [x0]
   21bdc:	b	21be4 <erff128@@GLIBC_2.27+0x22c>
   21be0:	ldr	q4, [x20]
   21be4:	ldr	q0, [sp, #64]
   21be8:	mov	v1.16b, v2.16b
   21bec:	str	q4, [sp, #80]
   21bf0:	sub	x20, x20, #0x10
   21bf4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21bf8:	ldr	q4, [sp, #80]
   21bfc:	mov	v1.16b, v4.16b
   21c00:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21c04:	cmp	x20, x23
   21c08:	mov	v2.16b, v0.16b
   21c0c:	b.ne	21be0 <erff128@@GLIBC_2.27+0x228>  // b.any
   21c10:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21c14:	add	x0, x0, #0x950
   21c18:	str	q0, [sp, #80]
   21c1c:	add	x20, x22, #0xa80
   21c20:	ldr	q0, [sp, #64]
   21c24:	add	x19, x19, #0x410
   21c28:	ldr	q1, [x0]
   21c2c:	add	x20, x20, #0x390
   21c30:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21c34:	mov	v1.16b, v0.16b
   21c38:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21c3c:	add	x0, x0, #0x960
   21c40:	ldr	q2, [sp, #80]
   21c44:	ldr	q4, [x0]
   21c48:	b	21c50 <erff128@@GLIBC_2.27+0x298>
   21c4c:	ldr	q4, [x19]
   21c50:	ldr	q0, [sp, #64]
   21c54:	sub	x19, x19, #0x10
   21c58:	str	q2, [sp, #80]
   21c5c:	str	q4, [sp, #96]
   21c60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21c64:	ldr	q4, [sp, #96]
   21c68:	mov	v1.16b, v4.16b
   21c6c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21c70:	cmp	x19, x20
   21c74:	mov	v1.16b, v0.16b
   21c78:	ldr	q2, [sp, #80]
   21c7c:	b.ne	21c4c <erff128@@GLIBC_2.27+0x294>  // b.any
   21c80:	mov	v0.16b, v2.16b
   21c84:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   21c88:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21c8c:	add	x0, x0, #0x970
   21c90:	ldr	q1, [x0]
   21c94:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21c98:	str	q0, [sp, #64]
   21c9c:	ldp	x20, x19, [sp, #64]
   21ca0:	cmp	w21, #0x0
   21ca4:	eor	x0, x19, #0x8000000000000000
   21ca8:	csel	x19, x0, x19, lt  // lt = tstop
   21cac:	stp	x20, x19, [sp, #64]
   21cb0:	ldp	x19, x20, [sp, #16]
   21cb4:	ldp	x21, x22, [sp, #32]
   21cb8:	ldr	x23, [sp, #48]
   21cbc:	ldr	q0, [sp, #64]
   21cc0:	ldp	x29, x30, [sp], #128
   21cc4:	ret
   21cc8:	bl	20748 <erfcf128@@GLIBC_2.27>
   21ccc:	mov	v1.16b, v0.16b
   21cd0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   21cd4:	add	x0, x0, #0x2f0
   21cd8:	ldr	q0, [x0]
   21cdc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   21ce0:	str	q0, [sp, #64]
   21ce4:	ldp	x20, x19, [sp, #64]
   21ce8:	stp	x20, x19, [sp, #64]
   21cec:	ldp	x19, x20, [sp, #16]
   21cf0:	ldp	x21, x22, [sp, #32]
   21cf4:	ldr	q0, [sp, #64]
   21cf8:	ldp	x29, x30, [sp], #128
   21cfc:	ret
   21d00:	tst	x21, #0x7ff80000
   21d04:	b.ne	21d90 <erff128@@GLIBC_2.27+0x3d8>  // b.any
   21d08:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21d0c:	add	x0, x0, #0x8e0
   21d10:	ldr	q1, [x0]
   21d14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21d18:	str	q0, [sp, #80]
   21d1c:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21d20:	add	x0, x0, #0x8f0
   21d24:	ldr	q0, [sp, #64]
   21d28:	ldr	q1, [x0]
   21d2c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21d30:	mov	v1.16b, v0.16b
   21d34:	ldr	q2, [sp, #80]
   21d38:	mov	v0.16b, v2.16b
   21d3c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21d40:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   21d44:	add	x0, x0, #0xb90
   21d48:	ldr	q1, [x0]
   21d4c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21d50:	str	q0, [sp, #64]
   21d54:	ldp	x20, x19, [sp, #64]
   21d58:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   21d5c:	add	x0, x0, #0xeb0
   21d60:	ldr	q1, [x0]
   21d64:	and	x0, x19, #0x7fffffffffffffff
   21d68:	str	x0, [sp, #72]
   21d6c:	ldr	q0, [sp, #64]
   21d70:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   21d74:	tbz	w0, #31, 21a0c <erff128@@GLIBC_2.27+0x54>
   21d78:	stp	x20, x19, [sp, #64]
   21d7c:	stp	x20, x19, [sp, #80]
   21d80:	ldr	q1, [sp, #64]
   21d84:	ldr	q0, [sp, #80]
   21d88:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21d8c:	b	21a0c <erff128@@GLIBC_2.27+0x54>
   21d90:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   21d94:	add	x0, x0, #0x900
   21d98:	ldr	q1, [x0]
   21d9c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21da0:	ldr	q1, [sp, #64]
   21da4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21da8:	str	q0, [sp, #64]
   21dac:	ldp	x20, x19, [sp, #64]
   21db0:	b	21a0c <erff128@@GLIBC_2.27+0x54>
   21db4:	nop

0000000000021db8 <expm1f128@@GLIBC_2.27>:
   21db8:	stp	x29, x30, [sp, #-96]!
   21dbc:	mov	w5, #0x4005ffff            	// #1074135039
   21dc0:	mov	x29, sp
   21dc4:	str	q0, [sp, #48]
   21dc8:	ldp	x1, x4, [sp, #48]
   21dcc:	lsr	x2, x4, #32
   21dd0:	ubfx	x3, x4, #32, #31
   21dd4:	cmp	w2, #0x0
   21dd8:	ccmp	w3, w5, #0x4, ge  // ge = tcont
   21ddc:	b.gt	21ed4 <expm1f128@@GLIBC_2.27+0x11c>
   21de0:	mov	w5, #0x7ffeffff            	// #2147418111
   21de4:	stp	x19, x20, [sp, #16]
   21de8:	cmp	w3, w5
   21dec:	stp	x21, x22, [sp, #32]
   21df0:	lsr	x5, x1, #32
   21df4:	mov	x19, x1
   21df8:	orr	w0, w4, w5
   21dfc:	b.gt	21e90 <expm1f128@@GLIBC_2.27+0xd8>
   21e00:	orr	w0, w0, w1
   21e04:	mov	x21, x1
   21e08:	orr	w0, w0, w3
   21e0c:	mov	x20, x4
   21e10:	cbz	w0, 21e78 <expm1f128@@GLIBC_2.27+0xc0>
   21e14:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   21e18:	add	x0, x0, #0xeb0
   21e1c:	ldr	q1, [x0]
   21e20:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   21e24:	tbnz	w0, #31, 21edc <expm1f128@@GLIBC_2.27+0x124>
   21e28:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   21e2c:	add	x0, x0, #0xec0
   21e30:	and	x22, x20, #0x7fffffffffffffff
   21e34:	stp	x19, x22, [sp, #48]
   21e38:	ldr	q1, [x0]
   21e3c:	ldr	q0, [sp, #48]
   21e40:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   21e44:	tbz	w0, #31, 21f28 <expm1f128@@GLIBC_2.27+0x170>
   21e48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   21e4c:	add	x0, x0, #0xeb0
   21e50:	stp	x19, x22, [sp, #48]
   21e54:	ldr	q1, [x0]
   21e58:	ldr	q0, [sp, #48]
   21e5c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   21e60:	tbz	w0, #31, 21e78 <expm1f128@@GLIBC_2.27+0xc0>
   21e64:	stp	x19, x20, [sp, #48]
   21e68:	stp	x19, x20, [sp, #64]
   21e6c:	ldr	q1, [sp, #48]
   21e70:	ldr	q0, [sp, #64]
   21e74:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21e78:	stp	x21, x20, [sp, #48]
   21e7c:	ldp	x19, x20, [sp, #16]
   21e80:	ldp	x21, x22, [sp, #32]
   21e84:	ldr	q0, [sp, #48]
   21e88:	ldp	x29, x30, [sp], #96
   21e8c:	ret
   21e90:	and	w2, w2, #0xffff
   21e94:	orr	w0, w0, w1
   21e98:	orr	w0, w2, w0
   21e9c:	mov	x21, #0x0                   	// #0
   21ea0:	mov	x20, #0xbfff000000000000    	// #-4611967493404098560
   21ea4:	cbz	w0, 21e78 <expm1f128@@GLIBC_2.27+0xc0>
   21ea8:	stp	x1, x4, [sp, #48]
   21eac:	ldr	q1, [sp, #48]
   21eb0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21eb4:	str	q0, [sp, #48]
   21eb8:	ldp	x21, x20, [sp, #48]
   21ebc:	stp	x21, x20, [sp, #48]
   21ec0:	ldp	x19, x20, [sp, #16]
   21ec4:	ldp	x21, x22, [sp, #32]
   21ec8:	ldr	q0, [sp, #48]
   21ecc:	ldp	x29, x30, [sp], #96
   21ed0:	ret
   21ed4:	ldp	x29, x30, [sp], #96
   21ed8:	b	dd80 <expf128@@GLIBC_2.27>
   21edc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   21ee0:	add	x0, x0, #0xec0
   21ee4:	ldr	q1, [x0]
   21ee8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   21eec:	add	x0, x0, #0x5a0
   21ef0:	ldr	q0, [x0]
   21ef4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   21ef8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   21efc:	add	x0, x0, #0x2f0
   21f00:	ldr	q1, [x0]
   21f04:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   21f08:	str	q0, [sp, #48]
   21f0c:	ldp	x21, x20, [sp, #48]
   21f10:	stp	x21, x20, [sp, #48]
   21f14:	ldp	x19, x20, [sp, #16]
   21f18:	ldp	x21, x22, [sp, #32]
   21f1c:	ldr	q0, [sp, #48]
   21f20:	ldp	x29, x30, [sp], #96
   21f24:	ret
   21f28:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   21f2c:	add	x0, x0, #0x580
   21f30:	ldr	q1, [x0]
   21f34:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   21f38:	add	x0, x0, #0x590
   21f3c:	ldr	q0, [x0]
   21f40:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21f44:	stp	x19, x20, [sp, #48]
   21f48:	mov	v1.16b, v0.16b
   21f4c:	ldr	q0, [sp, #48]
   21f50:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   21f54:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   21f58:	add	x0, x0, #0x330
   21f5c:	ldr	q1, [x0]
   21f60:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   21f64:	bl	22250 <floorf128@@GLIBC_2.27>
   21f68:	str	q0, [sp, #48]
   21f6c:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   21f70:	mov	w19, w0
   21f74:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   21f78:	add	x0, x0, #0x590
   21f7c:	ldr	q2, [sp, #48]
   21f80:	ldr	q1, [x0]
   21f84:	mov	v0.16b, v2.16b
   21f88:	str	q2, [sp, #64]
   21f8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21f90:	stp	x21, x20, [sp, #48]
   21f94:	mov	v1.16b, v0.16b
   21f98:	ldr	q0, [sp, #48]
   21f9c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   21fa0:	mov	v4.16b, v0.16b
   21fa4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   21fa8:	add	x0, x0, #0x580
   21fac:	ldr	q2, [sp, #64]
   21fb0:	str	q4, [sp, #48]
   21fb4:	ldr	q1, [x0]
   21fb8:	mov	v0.16b, v2.16b
   21fbc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21fc0:	mov	v1.16b, v0.16b
   21fc4:	ldr	q4, [sp, #48]
   21fc8:	mov	v0.16b, v4.16b
   21fcc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   21fd0:	mov	v1.16b, v0.16b
   21fd4:	str	q0, [sp, #48]
   21fd8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21fdc:	str	q0, [sp, #64]
   21fe0:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   21fe4:	add	x0, x0, #0xed0
   21fe8:	ldr	q0, [sp, #48]
   21fec:	ldr	q1, [x0]
   21ff0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   21ff4:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   21ff8:	add	x0, x0, #0xee0
   21ffc:	ldr	q1, [x0]
   22000:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22004:	ldr	q1, [sp, #48]
   22008:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2200c:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22010:	add	x0, x0, #0xef0
   22014:	ldr	q1, [x0]
   22018:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2201c:	ldr	q1, [sp, #48]
   22020:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22024:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22028:	add	x0, x0, #0xf00
   2202c:	ldr	q1, [x0]
   22030:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22034:	ldr	q1, [sp, #48]
   22038:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2203c:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22040:	add	x0, x0, #0xf10
   22044:	ldr	q1, [x0]
   22048:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2204c:	ldr	q1, [sp, #48]
   22050:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22054:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22058:	add	x0, x0, #0xf20
   2205c:	ldr	q1, [x0]
   22060:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22064:	ldr	q1, [sp, #48]
   22068:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2206c:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22070:	add	x0, x0, #0xf30
   22074:	ldr	q1, [x0]
   22078:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2207c:	ldr	q1, [sp, #48]
   22080:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22084:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22088:	add	x0, x0, #0xf40
   2208c:	ldr	q1, [x0]
   22090:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22094:	ldr	q1, [sp, #48]
   22098:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2209c:	ldr	q2, [sp, #64]
   220a0:	mov	v1.16b, v2.16b
   220a4:	str	q2, [sp, #80]
   220a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   220ac:	str	q0, [sp, #64]
   220b0:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   220b4:	add	x0, x0, #0xf50
   220b8:	ldr	q0, [sp, #48]
   220bc:	ldr	q1, [x0]
   220c0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   220c4:	ldr	q1, [sp, #48]
   220c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   220cc:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   220d0:	add	x0, x0, #0xf60
   220d4:	ldr	q1, [x0]
   220d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   220dc:	ldr	q1, [sp, #48]
   220e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   220e4:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   220e8:	add	x0, x0, #0xf70
   220ec:	ldr	q1, [x0]
   220f0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   220f4:	ldr	q1, [sp, #48]
   220f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   220fc:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22100:	add	x0, x0, #0xf80
   22104:	ldr	q1, [x0]
   22108:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2210c:	ldr	q1, [sp, #48]
   22110:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22114:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22118:	add	x0, x0, #0xf90
   2211c:	ldr	q1, [x0]
   22120:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22124:	ldr	q1, [sp, #48]
   22128:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2212c:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22130:	add	x0, x0, #0xfa0
   22134:	ldr	q1, [x0]
   22138:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2213c:	ldr	q1, [sp, #48]
   22140:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22144:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22148:	add	x0, x0, #0xfb0
   2214c:	ldr	q1, [x0]
   22150:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22154:	ldr	q1, [sp, #48]
   22158:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2215c:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22160:	add	x0, x0, #0xfc0
   22164:	ldr	q1, [x0]
   22168:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2216c:	mov	v1.16b, v0.16b
   22170:	ldr	q4, [sp, #64]
   22174:	mov	v0.16b, v4.16b
   22178:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2217c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22180:	add	x0, x0, #0x330
   22184:	mov	v4.16b, v0.16b
   22188:	ldr	q2, [sp, #80]
   2218c:	ldr	q1, [x0]
   22190:	mov	v0.16b, v2.16b
   22194:	str	q4, [sp, #64]
   22198:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2219c:	mov	v1.16b, v0.16b
   221a0:	ldr	q4, [sp, #64]
   221a4:	mov	v0.16b, v4.16b
   221a8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   221ac:	mov	v1.16b, v0.16b
   221b0:	ldr	q0, [sp, #48]
   221b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   221b8:	str	q0, [sp, #48]
   221bc:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   221c0:	add	x1, x1, #0x2f0
   221c4:	mov	w0, w19
   221c8:	ldr	q0, [x1]
   221cc:	bl	259e0 <ldexpf128@@GLIBC_2.27>
   221d0:	mov	v2.16b, v0.16b
   221d4:	ldr	q4, [sp, #48]
   221d8:	mov	v1.16b, v2.16b
   221dc:	str	q2, [sp, #48]
   221e0:	mov	v0.16b, v4.16b
   221e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   221e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   221ec:	add	x0, x0, #0x2f0
   221f0:	mov	v4.16b, v0.16b
   221f4:	ldr	q2, [sp, #48]
   221f8:	ldr	q1, [x0]
   221fc:	mov	v0.16b, v2.16b
   22200:	str	q4, [sp, #48]
   22204:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22208:	mov	v1.16b, v0.16b
   2220c:	ldr	q4, [sp, #48]
   22210:	mov	v0.16b, v4.16b
   22214:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22218:	str	q0, [sp, #48]
   2221c:	ldp	x21, x20, [sp, #48]
   22220:	stp	x21, x20, [sp, #48]
   22224:	ldp	x19, x20, [sp, #16]
   22228:	ldp	x21, x22, [sp, #32]
   2222c:	ldr	q0, [sp, #48]
   22230:	ldp	x29, x30, [sp], #96
   22234:	ret

0000000000022238 <fabsf128@@GLIBC_2.27>:
   22238:	fmov	x2, d0
   2223c:	fmov	x3, v0.d[1]
   22240:	fmov	d0, x2
   22244:	and	x1, x3, #0x7fffffffffffffff
   22248:	fmov	v0.d[1], x1
   2224c:	ret

0000000000022250 <floorf128@@GLIBC_2.27>:
   22250:	stp	x29, x30, [sp, #-32]!
   22254:	mov	x4, #0xffffffffffffc001    	// #-16383
   22258:	mov	x29, sp
   2225c:	str	q0, [sp, #16]
   22260:	ldp	x0, x2, [sp, #16]
   22264:	ubfx	x1, x2, #48, #15
   22268:	mov	x3, x2
   2226c:	add	x1, x1, x4
   22270:	mov	x5, x0
   22274:	cmp	x1, #0x2f
   22278:	b.gt	222c8 <floorf128@@GLIBC_2.27+0x78>
   2227c:	tbnz	x1, #63, 22310 <floorf128@@GLIBC_2.27+0xc0>
   22280:	mov	x4, #0xffffffffffff        	// #281474976710655
   22284:	lsr	x4, x4, x1
   22288:	and	x6, x2, x4
   2228c:	orr	x5, x6, x0
   22290:	cbz	x5, 222b8 <floorf128@@GLIBC_2.27+0x68>
   22294:	mov	x0, #0x1000000000000       	// #281474976710656
   22298:	cmp	x2, #0x0
   2229c:	asr	x1, x0, x1
   222a0:	add	x1, x1, x2
   222a4:	csel	x3, x1, x2, lt  // lt = tstop
   222a8:	mov	x2, #0x0                   	// #0
   222ac:	bic	x3, x3, x4
   222b0:	mov	x0, x2
   222b4:	mov	x2, x3
   222b8:	stp	x0, x2, [sp, #16]
   222bc:	ldr	q0, [sp, #16]
   222c0:	ldp	x29, x30, [sp], #32
   222c4:	ret
   222c8:	cmp	x1, #0x6f
   222cc:	b.le	222f0 <floorf128@@GLIBC_2.27+0xa0>
   222d0:	cmp	x1, #0x4, lsl #12
   222d4:	b.ne	222b8 <floorf128@@GLIBC_2.27+0x68>  // b.any
   222d8:	stp	x0, x2, [sp, #16]
   222dc:	ldr	q1, [sp, #16]
   222e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   222e4:	str	q0, [sp, #16]
   222e8:	ldp	x0, x2, [sp, #16]
   222ec:	b	222b8 <floorf128@@GLIBC_2.27+0x68>
   222f0:	sub	w6, w1, #0x30
   222f4:	mov	x4, #0xffffffffffffffff    	// #-1
   222f8:	lsr	x4, x4, x6
   222fc:	tst	x4, x0
   22300:	b.eq	222b8 <floorf128@@GLIBC_2.27+0x68>  // b.none
   22304:	tbnz	x2, #63, 2233c <floorf128@@GLIBC_2.27+0xec>
   22308:	bic	x2, x5, x4
   2230c:	b	222b0 <floorf128@@GLIBC_2.27+0x60>
   22310:	tbnz	x2, #63, 22320 <floorf128@@GLIBC_2.27+0xd0>
   22314:	mov	x2, #0x0                   	// #0
   22318:	mov	x3, #0x0                   	// #0
   2231c:	b	222b0 <floorf128@@GLIBC_2.27+0x60>
   22320:	and	x2, x2, #0x7fffffffffffffff
   22324:	mov	x0, #0xbfff000000000000    	// #-4611967493404098560
   22328:	orr	x5, x2, x5
   2232c:	mov	x2, #0x0                   	// #0
   22330:	cmp	x5, #0x0
   22334:	csel	x3, x3, x0, eq  // eq = none
   22338:	b	222b0 <floorf128@@GLIBC_2.27+0x60>
   2233c:	cmp	x1, #0x30
   22340:	b.eq	2236c <floorf128@@GLIBC_2.27+0x11c>  // b.none
   22344:	mov	w2, #0x70                  	// #112
   22348:	sub	w1, w2, w1
   2234c:	mov	x2, #0x1                   	// #1
   22350:	lsl	x2, x2, x1
   22354:	adds	x2, x2, x0
   22358:	mov	x5, x2
   2235c:	b.cc	22308 <floorf128@@GLIBC_2.27+0xb8>  // b.lo, b.ul, b.last
   22360:	add	x3, x3, #0x1
   22364:	bic	x2, x5, x4
   22368:	b	222b0 <floorf128@@GLIBC_2.27+0x60>
   2236c:	add	x3, x2, #0x1
   22370:	bic	x2, x5, x4
   22374:	b	222b0 <floorf128@@GLIBC_2.27+0x60>
   22378:	stp	x29, x30, [sp, #-144]!
   2237c:	mov	w2, #0x7ffeffff            	// #2147418111
   22380:	mov	x29, sp
   22384:	stp	x21, x22, [sp, #32]
   22388:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2238c:	stp	x19, x20, [sp, #16]
   22390:	str	q0, [sp, #64]
   22394:	ldp	x19, x20, [sp, #64]
   22398:	ldr	x1, [x21, #4032]
   2239c:	ldr	x3, [x1]
   223a0:	str	x3, [sp, #136]
   223a4:	mov	x3, #0x0                   	// #0
   223a8:	ubfx	x1, x20, #32, #31
   223ac:	cmp	w1, w2
   223b0:	b.gt	224fc <floorf128@@GLIBC_2.27+0x2ac>
   223b4:	cbz	w1, 22490 <floorf128@@GLIBC_2.27+0x240>
   223b8:	mov	w0, #0x3f8dffff            	// #1066270719
   223bc:	cmp	w1, w0
   223c0:	b.le	224a8 <floorf128@@GLIBC_2.27+0x258>
   223c4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   223c8:	add	x0, x0, #0x8f0
   223cc:	stp	x19, x20, [sp, #64]
   223d0:	mov	x22, x20
   223d4:	ldr	q1, [x0]
   223d8:	ldr	q0, [sp, #64]
   223dc:	str	x23, [sp, #48]
   223e0:	mov	x23, x19
   223e4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   223e8:	tbz	w0, #31, 2240c <floorf128@@GLIBC_2.27+0x1bc>
   223ec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   223f0:	add	x0, x0, #0x2f0
   223f4:	stp	x19, x20, [sp, #64]
   223f8:	ldr	q1, [x0]
   223fc:	ldr	q0, [sp, #64]
   22400:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22404:	str	q0, [sp, #64]
   22408:	ldp	x23, x22, [sp, #64]
   2240c:	stp	x23, x22, [sp, #64]
   22410:	movi	v1.2d, #0x0
   22414:	ldr	q0, [sp, #64]
   22418:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2241c:	cmp	w0, #0x0
   22420:	b.gt	22534 <floorf128@@GLIBC_2.27+0x2e4>
   22424:	movi	v1.2d, #0x0
   22428:	stp	x23, x22, [sp, #64]
   2242c:	ldr	q0, [sp, #64]
   22430:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   22434:	cbz	w0, 22520 <floorf128@@GLIBC_2.27+0x2d0>
   22438:	stp	x23, x22, [sp, #64]
   2243c:	stp	x23, x22, [sp, #80]
   22440:	ldr	q1, [sp, #64]
   22444:	ldr	q0, [sp, #80]
   22448:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2244c:	mov	v1.16b, v0.16b
   22450:	movi	v0.2d, #0x0
   22454:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   22458:	str	q0, [sp, #64]
   2245c:	ldp	x2, x1, [sp, #64]
   22460:	ldr	x23, [sp, #48]
   22464:	ldr	x21, [x21, #4032]
   22468:	ldr	x3, [sp, #136]
   2246c:	ldr	x0, [x21]
   22470:	eor	x0, x3, x0
   22474:	cbnz	x0, 22b98 <floorf128@@GLIBC_2.27+0x948>
   22478:	stp	x2, x1, [sp, #64]
   2247c:	ldp	x19, x20, [sp, #16]
   22480:	ldp	x21, x22, [sp, #32]
   22484:	ldr	q0, [sp, #64]
   22488:	ldp	x29, x30, [sp], #144
   2248c:	ret
   22490:	lsr	x4, x19, #32
   22494:	mov	x2, x19
   22498:	orr	w0, w20, w4
   2249c:	mov	x1, x20
   224a0:	orr	w0, w0, w19
   224a4:	cbz	w0, 22464 <floorf128@@GLIBC_2.27+0x214>
   224a8:	and	x0, x20, #0x7fffffffffffffff
   224ac:	str	x0, [sp, #72]
   224b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   224b4:	add	x0, x0, #0xeb0
   224b8:	str	x19, [sp, #64]
   224bc:	ldr	q1, [x0]
   224c0:	ldr	q0, [sp, #64]
   224c4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   224c8:	tbz	w0, #31, 224e0 <floorf128@@GLIBC_2.27+0x290>
   224cc:	stp	x19, x20, [sp, #64]
   224d0:	stp	x19, x20, [sp, #80]
   224d4:	ldr	q1, [sp, #64]
   224d8:	ldr	q0, [sp, #80]
   224dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   224e0:	stp	x19, x20, [sp, #64]
   224e4:	ldr	q0, [sp, #64]
   224e8:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   224ec:	mov	x2, x19
   224f0:	mov	x1, x20
   224f4:	cbnz	w0, 223c4 <floorf128@@GLIBC_2.27+0x174>
   224f8:	b	22464 <floorf128@@GLIBC_2.27+0x214>
   224fc:	and	x0, x20, #0x7fffffffffffffff
   22500:	stp	x0, x19, [sp, #72]
   22504:	str	x20, [sp, #88]
   22508:	ldr	q0, [sp, #64]
   2250c:	ldr	q1, [sp, #80]
   22510:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22514:	str	q0, [sp, #64]
   22518:	ldp	x2, x1, [sp, #64]
   2251c:	b	22464 <floorf128@@GLIBC_2.27+0x214>
   22520:	movi	v1.2d, #0x0
   22524:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   22528:	add	x0, x0, #0xfd0
   2252c:	ldr	q0, [x0]
   22530:	b	22454 <floorf128@@GLIBC_2.27+0x204>
   22534:	stp	x23, x22, [sp, #64]
   22538:	add	x0, sp, #0x84
   2253c:	ldr	q0, [sp, #64]
   22540:	bl	25920 <frexpf128@@GLIBC_2.27>
   22544:	ldr	w22, [sp, #132]
   22548:	str	q0, [sp, #64]
   2254c:	add	w0, w22, #0x2
   22550:	cmp	w0, #0x4
   22554:	b.hi	22930 <floorf128@@GLIBC_2.27+0x6e0>  // b.pmore
   22558:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   2255c:	add	x0, x0, #0x5b0
   22560:	ldr	q1, [x0]
   22564:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   22568:	tbz	w0, #31, 22b54 <floorf128@@GLIBC_2.27+0x904>
   2256c:	subs	w22, w22, #0x1
   22570:	b.eq	22598 <floorf128@@GLIBC_2.27+0x348>  // b.none
   22574:	ldr	q1, [sp, #64]
   22578:	mov	v0.16b, v1.16b
   2257c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22580:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22584:	add	x0, x0, #0x2f0
   22588:	ldr	q1, [x0]
   2258c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22590:	str	q0, [sp, #64]
   22594:	ldp	x19, x20, [sp, #64]
   22598:	stp	x19, x20, [sp, #64]
   2259c:	stp	x19, x20, [sp, #80]
   225a0:	ldr	q1, [sp, #64]
   225a4:	ldr	q0, [sp, #80]
   225a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   225ac:	stp	x19, x20, [sp, #64]
   225b0:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   225b4:	add	x0, x0, #0x610
   225b8:	str	q0, [sp, #80]
   225bc:	ldr	q0, [sp, #64]
   225c0:	ldr	q1, [x0]
   225c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   225c8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   225cc:	add	x0, x0, #0x600
   225d0:	ldr	q1, [x0]
   225d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   225d8:	stp	x19, x20, [sp, #64]
   225dc:	ldr	q1, [sp, #64]
   225e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   225e4:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   225e8:	add	x0, x0, #0x50
   225ec:	ldr	q1, [x0]
   225f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   225f4:	stp	x19, x20, [sp, #64]
   225f8:	ldr	q1, [sp, #64]
   225fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22600:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22604:	add	x0, x0, #0x60
   22608:	ldr	q1, [x0]
   2260c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22610:	stp	x19, x20, [sp, #64]
   22614:	ldr	q1, [sp, #64]
   22618:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2261c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22620:	add	x0, x0, #0x70
   22624:	ldr	q1, [x0]
   22628:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2262c:	stp	x19, x20, [sp, #64]
   22630:	ldr	q1, [sp, #64]
   22634:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22638:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   2263c:	add	x0, x0, #0x80
   22640:	ldr	q1, [x0]
   22644:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22648:	stp	x19, x20, [sp, #64]
   2264c:	ldr	q1, [sp, #64]
   22650:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22654:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22658:	add	x0, x0, #0x90
   2265c:	ldr	q1, [x0]
   22660:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22664:	stp	x19, x20, [sp, #64]
   22668:	ldr	q1, [sp, #64]
   2266c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22670:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22674:	add	x0, x0, #0xa0
   22678:	ldr	q1, [x0]
   2267c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22680:	stp	x19, x20, [sp, #64]
   22684:	ldr	q1, [sp, #64]
   22688:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2268c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22690:	add	x0, x0, #0xb0
   22694:	ldr	q1, [x0]
   22698:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2269c:	stp	x19, x20, [sp, #64]
   226a0:	ldr	q1, [sp, #64]
   226a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   226a8:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   226ac:	add	x0, x0, #0xc0
   226b0:	ldr	q1, [x0]
   226b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   226b8:	stp	x19, x20, [sp, #64]
   226bc:	ldr	q1, [sp, #64]
   226c0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   226c4:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   226c8:	add	x0, x0, #0xd0
   226cc:	ldr	q1, [x0]
   226d0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   226d4:	stp	x19, x20, [sp, #64]
   226d8:	ldr	q1, [sp, #64]
   226dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   226e0:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   226e4:	add	x0, x0, #0xe0
   226e8:	ldr	q1, [x0]
   226ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   226f0:	stp	x19, x20, [sp, #64]
   226f4:	ldr	q1, [sp, #64]
   226f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   226fc:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22700:	add	x0, x0, #0xf0
   22704:	ldr	q1, [x0]
   22708:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2270c:	ldr	q4, [sp, #80]
   22710:	mov	v1.16b, v4.16b
   22714:	str	q4, [sp, #112]
   22718:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2271c:	stp	x19, x20, [sp, #64]
   22720:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   22724:	add	x0, x0, #0x620
   22728:	str	q0, [sp, #80]
   2272c:	ldr	q0, [sp, #64]
   22730:	ldr	q1, [x0]
   22734:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22738:	stp	x19, x20, [sp, #64]
   2273c:	ldr	q1, [sp, #64]
   22740:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22744:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   22748:	add	x0, x0, #0x630
   2274c:	ldr	q1, [x0]
   22750:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22754:	stp	x19, x20, [sp, #64]
   22758:	ldr	q1, [sp, #64]
   2275c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22760:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22764:	add	x0, x0, #0x100
   22768:	ldr	q1, [x0]
   2276c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22770:	stp	x19, x20, [sp, #64]
   22774:	ldr	q1, [sp, #64]
   22778:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2277c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22780:	add	x0, x0, #0x110
   22784:	ldr	q1, [x0]
   22788:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2278c:	stp	x19, x20, [sp, #64]
   22790:	ldr	q1, [sp, #64]
   22794:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22798:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   2279c:	add	x0, x0, #0x120
   227a0:	ldr	q1, [x0]
   227a4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   227a8:	stp	x19, x20, [sp, #64]
   227ac:	ldr	q1, [sp, #64]
   227b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   227b4:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   227b8:	add	x0, x0, #0x130
   227bc:	ldr	q1, [x0]
   227c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   227c4:	stp	x19, x20, [sp, #64]
   227c8:	ldr	q1, [sp, #64]
   227cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   227d0:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   227d4:	add	x0, x0, #0x140
   227d8:	ldr	q1, [x0]
   227dc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   227e0:	stp	x19, x20, [sp, #64]
   227e4:	ldr	q1, [sp, #64]
   227e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   227ec:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   227f0:	add	x0, x0, #0x150
   227f4:	ldr	q1, [x0]
   227f8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   227fc:	stp	x19, x20, [sp, #64]
   22800:	ldr	q1, [sp, #64]
   22804:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22808:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   2280c:	add	x0, x0, #0x160
   22810:	ldr	q1, [x0]
   22814:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22818:	stp	x19, x20, [sp, #64]
   2281c:	ldr	q1, [sp, #64]
   22820:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22824:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22828:	add	x0, x0, #0x170
   2282c:	ldr	q1, [x0]
   22830:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22834:	stp	x19, x20, [sp, #64]
   22838:	ldr	q1, [sp, #64]
   2283c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22840:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22844:	add	x0, x0, #0x180
   22848:	ldr	q1, [x0]
   2284c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22850:	stp	x19, x20, [sp, #64]
   22854:	ldr	q1, [sp, #64]
   22858:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2285c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22860:	add	x0, x0, #0x190
   22864:	ldr	q1, [x0]
   22868:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2286c:	mov	v1.16b, v0.16b
   22870:	ldr	q2, [sp, #80]
   22874:	mov	v0.16b, v2.16b
   22878:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2287c:	stp	x19, x20, [sp, #64]
   22880:	ldr	q1, [sp, #64]
   22884:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22888:	str	q0, [sp, #96]
   2288c:	mov	w0, w22
   22890:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   22894:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22898:	add	x0, x0, #0x330
   2289c:	ldr	q4, [sp, #112]
   228a0:	str	q0, [sp, #80]
   228a4:	ldr	q1, [x0]
   228a8:	mov	v0.16b, v4.16b
   228ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   228b0:	str	q0, [sp, #64]
   228b4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   228b8:	add	x0, x0, #0x580
   228bc:	ldr	q2, [sp, #80]
   228c0:	ldr	q1, [x0]
   228c4:	mov	v0.16b, v2.16b
   228c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   228cc:	ldr	q6, [sp, #96]
   228d0:	mov	v1.16b, v6.16b
   228d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   228d8:	ldr	q4, [sp, #64]
   228dc:	mov	v1.16b, v4.16b
   228e0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   228e4:	stp	x19, x20, [sp, #64]
   228e8:	mov	v1.16b, v0.16b
   228ec:	ldr	q0, [sp, #64]
   228f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   228f4:	mov	v4.16b, v0.16b
   228f8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   228fc:	add	x0, x0, #0x590
   22900:	ldr	q2, [sp, #80]
   22904:	str	q4, [sp, #64]
   22908:	ldr	q1, [x0]
   2290c:	mov	v0.16b, v2.16b
   22910:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22914:	ldr	q4, [sp, #64]
   22918:	mov	v1.16b, v4.16b
   2291c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22920:	str	q0, [sp, #64]
   22924:	ldr	x23, [sp, #48]
   22928:	ldp	x2, x1, [sp, #64]
   2292c:	b	22464 <floorf128@@GLIBC_2.27+0x214>
   22930:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22934:	add	x0, x0, #0x330
   22938:	ldr	q1, [x0]
   2293c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22940:	str	q0, [sp, #80]
   22944:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   22948:	add	x0, x0, #0x5b0
   2294c:	ldr	q0, [sp, #64]
   22950:	ldr	q1, [x0]
   22954:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   22958:	ldr	q2, [sp, #80]
   2295c:	tbnz	w0, #31, 22b60 <floorf128@@GLIBC_2.27+0x910>
   22960:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22964:	add	x0, x0, #0x330
   22968:	mov	v0.16b, v2.16b
   2296c:	ldr	q1, [x0]
   22970:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22974:	str	q0, [sp, #80]
   22978:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2297c:	add	x0, x0, #0x330
   22980:	ldr	q0, [sp, #64]
   22984:	ldr	q1, [x0]
   22988:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2298c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22990:	add	x0, x0, #0x330
   22994:	ldr	q1, [x0]
   22998:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2299c:	mov	v1.16b, v0.16b
   229a0:	ldr	q2, [sp, #80]
   229a4:	mov	v0.16b, v2.16b
   229a8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   229ac:	mov	v1.16b, v0.16b
   229b0:	str	q0, [sp, #96]
   229b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   229b8:	str	q0, [sp, #64]
   229bc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   229c0:	add	x0, x0, #0x5d0
   229c4:	ldr	q1, [x0]
   229c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   229cc:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   229d0:	add	x0, x0, #0x5c0
   229d4:	ldr	q1, [x0]
   229d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   229dc:	ldr	q1, [sp, #64]
   229e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   229e4:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   229e8:	add	x0, x0, #0xfd0
   229ec:	ldr	q1, [x0]
   229f0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   229f4:	ldr	q1, [sp, #64]
   229f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   229fc:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22a00:	add	x0, x0, #0xfe0
   22a04:	ldr	q1, [x0]
   22a08:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22a0c:	ldr	q1, [sp, #64]
   22a10:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22a14:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   22a18:	add	x0, x0, #0xff0
   22a1c:	ldr	q1, [x0]
   22a20:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22a24:	ldr	q1, [sp, #64]
   22a28:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22a2c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22a30:	add	x0, x0, #0x0
   22a34:	ldr	q1, [x0]
   22a38:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22a3c:	ldr	q1, [sp, #64]
   22a40:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22a44:	str	q0, [sp, #80]
   22a48:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   22a4c:	add	x0, x0, #0x5e0
   22a50:	ldr	q0, [sp, #64]
   22a54:	ldr	q1, [x0]
   22a58:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22a5c:	ldr	q1, [sp, #64]
   22a60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22a64:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   22a68:	add	x0, x0, #0x5f0
   22a6c:	ldr	q1, [x0]
   22a70:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22a74:	ldr	q1, [sp, #64]
   22a78:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22a7c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22a80:	add	x0, x0, #0x10
   22a84:	ldr	q1, [x0]
   22a88:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22a8c:	ldr	q1, [sp, #64]
   22a90:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22a94:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22a98:	add	x0, x0, #0x20
   22a9c:	ldr	q1, [x0]
   22aa0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22aa4:	ldr	q1, [sp, #64]
   22aa8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22aac:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22ab0:	add	x0, x0, #0x30
   22ab4:	ldr	q1, [x0]
   22ab8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22abc:	ldr	q1, [sp, #64]
   22ac0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22ac4:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22ac8:	add	x0, x0, #0x40
   22acc:	ldr	q1, [x0]
   22ad0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22ad4:	mov	v1.16b, v0.16b
   22ad8:	ldr	q4, [sp, #80]
   22adc:	mov	v0.16b, v4.16b
   22ae0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   22ae4:	ldr	q2, [sp, #96]
   22ae8:	mov	v1.16b, v2.16b
   22aec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22af0:	mov	w0, w22
   22af4:	str	q0, [sp, #64]
   22af8:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   22afc:	str	q0, [sp, #80]
   22b00:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   22b04:	add	x0, x0, #0x580
   22b08:	ldr	q1, [x0]
   22b0c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22b10:	ldr	q6, [sp, #64]
   22b14:	mov	v1.16b, v6.16b
   22b18:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22b1c:	ldr	q2, [sp, #96]
   22b20:	mov	v1.16b, v0.16b
   22b24:	mov	v0.16b, v2.16b
   22b28:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22b2c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   22b30:	add	x0, x0, #0x590
   22b34:	ldr	q4, [sp, #80]
   22b38:	str	q0, [sp, #64]
   22b3c:	ldr	q1, [x0]
   22b40:	mov	v0.16b, v4.16b
   22b44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22b48:	ldr	q2, [sp, #64]
   22b4c:	mov	v1.16b, v2.16b
   22b50:	b	2291c <floorf128@@GLIBC_2.27+0x6cc>
   22b54:	cbz	w22, 22598 <floorf128@@GLIBC_2.27+0x348>
   22b58:	ldr	q0, [sp, #64]
   22b5c:	b	22580 <floorf128@@GLIBC_2.27+0x330>
   22b60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22b64:	add	x0, x0, #0x330
   22b68:	mov	v0.16b, v2.16b
   22b6c:	str	q2, [sp, #64]
   22b70:	sub	w22, w22, #0x1
   22b74:	ldr	q1, [x0]
   22b78:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22b7c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22b80:	add	x0, x0, #0x330
   22b84:	ldr	q1, [x0]
   22b88:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22b8c:	mov	v1.16b, v0.16b
   22b90:	ldr	q2, [sp, #64]
   22b94:	b	229a4 <floorf128@@GLIBC_2.27+0x754>
   22b98:	str	x23, [sp, #48]
   22b9c:	bl	ba70 <__stack_chk_fail@plt>

0000000000022ba0 <logbf128@@GLIBC_2.27>:
   22ba0:	stp	x29, x30, [sp, #-32]!
   22ba4:	mov	x29, sp
   22ba8:	str	q0, [sp, #16]
   22bac:	ldp	x0, x3, [sp, #16]
   22bb0:	and	x1, x3, #0x7fffffffffffffff
   22bb4:	orr	x4, x0, x1
   22bb8:	cbz	x4, 22c20 <logbf128@@GLIBC_2.27+0x80>
   22bbc:	mov	x4, #0x7ffeffffffffffff    	// #9223090561878065151
   22bc0:	cmp	x1, x4
   22bc4:	b.gt	22c0c <logbf128@@GLIBC_2.27+0x6c>
   22bc8:	mov	x2, x0
   22bcc:	cmp	xzr, x1, asr #48
   22bd0:	asr	x0, x1, #48
   22bd4:	b.ne	22bf8 <logbf128@@GLIBC_2.27+0x58>  // b.any
   22bd8:	clz	x0, x2
   22bdc:	cmp	x1, #0x0
   22be0:	add	w0, w0, #0x40
   22be4:	clz	x1, x1
   22be8:	csel	w1, w0, w1, eq  // eq = none
   22bec:	sub	w0, w1, #0x10
   22bf0:	sxtw	x0, w0
   22bf4:	neg	x0, x0
   22bf8:	mov	x1, #0xffffffffffffc001    	// #-16383
   22bfc:	add	x0, x0, x1
   22c00:	bl	57958 <f64xsubf128@@GLIBC_2.28+0x3bd8>
   22c04:	ldp	x29, x30, [sp], #32
   22c08:	ret
   22c0c:	stp	x0, x3, [sp, #16]
   22c10:	ldr	q1, [sp, #16]
   22c14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22c18:	ldp	x29, x30, [sp], #32
   22c1c:	ret
   22c20:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   22c24:	add	x0, x0, #0xfd0
   22c28:	str	x1, [sp, #24]
   22c2c:	ldr	q0, [x0]
   22c30:	ldr	q1, [sp, #16]
   22c34:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   22c38:	ldp	x29, x30, [sp], #32
   22c3c:	ret

0000000000022c40 <nextafterf128@@GLIBC_2.27>:
   22c40:	stp	x29, x30, [sp, #-128]!
   22c44:	mov	x1, #0x7ffeffffffffffff    	// #9223090561878065151
   22c48:	mov	x29, sp
   22c4c:	stp	x19, x20, [sp, #16]
   22c50:	stp	x23, x24, [sp, #48]
   22c54:	str	q0, [sp, #96]
   22c58:	ldp	x20, x24, [sp, #96]
   22c5c:	stp	x21, x22, [sp, #32]
   22c60:	str	q1, [sp, #112]
   22c64:	ldp	x19, x22, [sp, #112]
   22c68:	stp	x25, x26, [sp, #64]
   22c6c:	and	x21, x24, #0x7fffffffffffffff
   22c70:	stp	x27, x28, [sp, #80]
   22c74:	mov	x23, x24
   22c78:	cmp	x21, x1
   22c7c:	mov	x25, x20
   22c80:	mov	x26, x22
   22c84:	and	x0, x22, #0x7fffffffffffffff
   22c88:	mov	x2, x19
   22c8c:	b.le	22ca0 <nextafterf128@@GLIBC_2.27+0x60>
   22c90:	mov	x1, #0x8001000000000000    	// #-9223090561878065152
   22c94:	add	x1, x21, x1
   22c98:	orr	x1, x1, x20
   22c9c:	cbnz	x1, 22d68 <nextafterf128@@GLIBC_2.27+0x128>
   22ca0:	mov	x1, #0x7ffeffffffffffff    	// #9223090561878065151
   22ca4:	cmp	x0, x1
   22ca8:	b.le	22cbc <nextafterf128@@GLIBC_2.27+0x7c>
   22cac:	mov	x1, #0x8001000000000000    	// #-9223090561878065152
   22cb0:	add	x0, x0, x1
   22cb4:	orr	x0, x0, x2
   22cb8:	cbnz	x0, 22d68 <nextafterf128@@GLIBC_2.27+0x128>
   22cbc:	stp	x19, x22, [sp, #96]
   22cc0:	mov	x28, x19
   22cc4:	mov	x27, x22
   22cc8:	stp	x20, x24, [sp, #112]
   22ccc:	ldr	q1, [sp, #96]
   22cd0:	ldr	q0, [sp, #112]
   22cd4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   22cd8:	cbz	w0, 22d44 <nextafterf128@@GLIBC_2.27+0x104>
   22cdc:	orr	x21, x21, x25
   22ce0:	cbz	x21, 22db0 <nextafterf128@@GLIBC_2.27+0x170>
   22ce4:	tbnz	x23, #63, 22d88 <nextafterf128@@GLIBC_2.27+0x148>
   22ce8:	cmp	x23, x26
   22cec:	b.le	22d98 <nextafterf128@@GLIBC_2.27+0x158>
   22cf0:	cmp	x25, #0x0
   22cf4:	cset	w0, eq  // eq = none
   22cf8:	sub	x23, x23, x0
   22cfc:	sub	x25, x25, #0x1
   22d00:	and	x0, x23, #0x7fff000000000000
   22d04:	mov	x1, #0x7fff000000000000    	// #9223090561878065152
   22d08:	cmp	x0, x1
   22d0c:	b.eq	22dd4 <nextafterf128@@GLIBC_2.27+0x194>  // b.none
   22d10:	cbnz	x0, 22d3c <nextafterf128@@GLIBC_2.27+0xfc>
   22d14:	stp	x20, x24, [sp, #96]
   22d18:	stp	x20, x24, [sp, #112]
   22d1c:	ldr	q1, [sp, #96]
   22d20:	ldr	q0, [sp, #112]
   22d24:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22d28:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   22d2c:	ldr	x0, [x0, #3976]
   22d30:	mrs	x1, tpidr_el0
   22d34:	mov	w2, #0x22                  	// #34
   22d38:	str	w2, [x1, x0]
   22d3c:	mov	x28, x25
   22d40:	mov	x27, x23
   22d44:	stp	x28, x27, [sp, #96]
   22d48:	ldp	x19, x20, [sp, #16]
   22d4c:	ldp	x21, x22, [sp, #32]
   22d50:	ldp	x23, x24, [sp, #48]
   22d54:	ldp	x25, x26, [sp, #64]
   22d58:	ldp	x27, x28, [sp, #80]
   22d5c:	ldr	q0, [sp, #96]
   22d60:	ldp	x29, x30, [sp], #128
   22d64:	ret
   22d68:	stp	x19, x22, [sp, #96]
   22d6c:	stp	x20, x24, [sp, #112]
   22d70:	ldr	q1, [sp, #96]
   22d74:	ldr	q0, [sp, #112]
   22d78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22d7c:	str	q0, [sp, #96]
   22d80:	ldp	x28, x27, [sp, #96]
   22d84:	b	22d44 <nextafterf128@@GLIBC_2.27+0x104>
   22d88:	cmp	x26, #0x0
   22d8c:	ccmp	x23, x22, #0x0, lt  // lt = tstop
   22d90:	b.gt	22cf0 <nextafterf128@@GLIBC_2.27+0xb0>
   22d94:	cmp	x23, x26
   22d98:	ccmp	x20, x19, #0x0, eq  // eq = none
   22d9c:	b.hi	22cfc <nextafterf128@@GLIBC_2.27+0xbc>  // b.pmore
   22da0:	adds	x25, x25, #0x1
   22da4:	cset	x0, eq  // eq = none
   22da8:	add	x23, x23, x0
   22dac:	b	22d00 <nextafterf128@@GLIBC_2.27+0xc0>
   22db0:	and	x1, x26, #0x8000000000000000
   22db4:	mov	x0, #0x1                   	// #1
   22db8:	fmov	d0, x0
   22dbc:	mov	x28, x0
   22dc0:	mov	x27, x1
   22dc4:	fmov	v0.d[1], x1
   22dc8:	mov	v1.16b, v0.16b
   22dcc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22dd0:	b	22d44 <nextafterf128@@GLIBC_2.27+0x104>
   22dd4:	stp	x20, x24, [sp, #96]
   22dd8:	stp	x20, x24, [sp, #112]
   22ddc:	ldr	q1, [sp, #96]
   22de0:	ldr	q0, [sp, #112]
   22de4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22de8:	b	22d28 <nextafterf128@@GLIBC_2.27+0xe8>
   22dec:	nop

0000000000022df0 <rintf128@@GLIBC_2.27>:
   22df0:	stp	x29, x30, [sp, #-48]!
   22df4:	mov	x1, #0xffffffffffffc001    	// #-16383
   22df8:	mov	x29, sp
   22dfc:	str	q0, [sp, #32]
   22e00:	ldp	x0, x2, [sp, #32]
   22e04:	stp	x19, x20, [sp, #16]
   22e08:	ubfx	x19, x2, #48, #15
   22e0c:	add	x19, x19, x1
   22e10:	cmp	x19, #0x6f
   22e14:	b.gt	22e54 <rintf128@@GLIBC_2.27+0x64>
   22e18:	lsr	x20, x2, #63
   22e1c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22e20:	add	x0, x0, #0x1a0
   22e24:	add	x0, x0, x20, lsl #4
   22e28:	ldr	q1, [x0]
   22e2c:	str	q1, [sp, #32]
   22e30:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22e34:	ldr	q1, [sp, #32]
   22e38:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   22e3c:	str	q0, [sp, #32]
   22e40:	tbnz	x19, #63, 22e84 <rintf128@@GLIBC_2.27+0x94>
   22e44:	ldp	x19, x20, [sp, #16]
   22e48:	ldr	q0, [sp, #32]
   22e4c:	ldp	x29, x30, [sp], #48
   22e50:	ret
   22e54:	mov	x4, x0
   22e58:	mov	x5, x2
   22e5c:	stp	x4, x5, [sp, #32]
   22e60:	cmp	x19, #0x4, lsl #12
   22e64:	b.ne	22e44 <rintf128@@GLIBC_2.27+0x54>  // b.any
   22e68:	ldr	q1, [sp, #32]
   22e6c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22e70:	str	q0, [sp, #32]
   22e74:	ldp	x19, x20, [sp, #16]
   22e78:	ldr	q0, [sp, #32]
   22e7c:	ldp	x29, x30, [sp], #48
   22e80:	ret
   22e84:	ldr	x2, [sp, #40]
   22e88:	ldp	x0, x1, [sp, #32]
   22e8c:	bfi	x2, x20, #63, #1
   22e90:	mov	x1, x2
   22e94:	stp	x0, x1, [sp, #32]
   22e98:	ldp	x19, x20, [sp, #16]
   22e9c:	ldr	q0, [sp, #32]
   22ea0:	ldp	x29, x30, [sp], #48
   22ea4:	ret
   22ea8:	stp	x29, x30, [sp, #-32]!
   22eac:	fmov	x3, v0.d[1]
   22eb0:	fmov	x2, d0
   22eb4:	mov	x29, sp
   22eb8:	str	x19, [sp, #16]
   22ebc:	mov	x19, x0
   22ec0:	mov	x1, x3
   22ec4:	tst	x3, #0x7fff000000000000
   22ec8:	ubfx	x0, x3, #48, #15
   22ecc:	b.ne	22f78 <rintf128@@GLIBC_2.27+0x188>  // b.any
   22ed0:	fmov	d2, x2
   22ed4:	and	x1, x3, #0x7fffffffffffffff
   22ed8:	orr	x1, x1, x2
   22edc:	fmov	v2.d[1], x3
   22ee0:	cbz	x1, 22f68 <rintf128@@GLIBC_2.27+0x178>
   22ee4:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   22ee8:	add	x0, x0, #0x1c0
   22eec:	ldr	q1, [x0]
   22ef0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22ef4:	fmov	x3, v0.d[1]
   22ef8:	fmov	x2, d0
   22efc:	ubfx	x0, x3, #48, #15
   22f00:	mov	x1, x3
   22f04:	sub	x0, x0, #0x72
   22f08:	mov	x4, #0xffffffffffff3cb0    	// #-50000
   22f0c:	cmp	x19, x4
   22f10:	b.lt	22fa4 <rintf128@@GLIBC_2.27+0x1b4>  // b.tstop
   22f14:	mov	x4, #0xc350                	// #50000
   22f18:	cmp	x19, x4
   22f1c:	b.gt	22fd8 <rintf128@@GLIBC_2.27+0x1e8>
   22f20:	add	x19, x19, x0
   22f24:	mov	x0, #0x7ffe                	// #32766
   22f28:	cmp	x19, x0
   22f2c:	b.gt	22fd8 <rintf128@@GLIBC_2.27+0x1e8>
   22f30:	cmp	x19, #0x0
   22f34:	b.gt	23054 <rintf128@@GLIBC_2.27+0x264>
   22f38:	cmn	x19, #0x71
   22f3c:	b.lt	22fa4 <rintf128@@GLIBC_2.27+0x1b4>  // b.tstop
   22f40:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   22f44:	add	x0, x0, #0xad0
   22f48:	add	x19, x19, #0x72
   22f4c:	and	x1, x1, #0x8000ffffffffffff
   22f50:	fmov	d0, x2
   22f54:	orr	x3, x1, x19, lsl #48
   22f58:	ldr	q1, [x0]
   22f5c:	fmov	v0.d[1], x3
   22f60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22f64:	mov	v2.16b, v0.16b
   22f68:	mov	v0.16b, v2.16b
   22f6c:	ldr	x19, [sp, #16]
   22f70:	ldp	x29, x30, [sp], #32
   22f74:	ret
   22f78:	mov	x4, #0x7fff                	// #32767
   22f7c:	cmp	x0, x4
   22f80:	b.ne	22f08 <rintf128@@GLIBC_2.27+0x118>  // b.any
   22f84:	fmov	d1, x2
   22f88:	fmov	v1.d[1], x3
   22f8c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   22f90:	mov	v2.16b, v0.16b
   22f94:	mov	v0.16b, v2.16b
   22f98:	ldr	x19, [sp, #16]
   22f9c:	ldp	x29, x30, [sp], #32
   22fa0:	ret
   22fa4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22fa8:	add	x0, x0, #0xf00
   22fac:	ldr	q0, [x0]
   22fb0:	tbnz	x3, #63, 2300c <rintf128@@GLIBC_2.27+0x21c>
   22fb4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22fb8:	add	x0, x0, #0xf00
   22fbc:	ldr	q1, [x0]
   22fc0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22fc4:	mov	v2.16b, v0.16b
   22fc8:	mov	v0.16b, v2.16b
   22fcc:	ldr	x19, [sp, #16]
   22fd0:	ldp	x29, x30, [sp], #32
   22fd4:	ret
   22fd8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22fdc:	add	x0, x0, #0xf70
   22fe0:	ldr	q0, [x0]
   22fe4:	tbnz	x3, #63, 23030 <rintf128@@GLIBC_2.27+0x240>
   22fe8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   22fec:	add	x0, x0, #0xf70
   22ff0:	ldr	q1, [x0]
   22ff4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   22ff8:	mov	v2.16b, v0.16b
   22ffc:	mov	v0.16b, v2.16b
   23000:	ldr	x19, [sp, #16]
   23004:	ldp	x29, x30, [sp], #32
   23008:	ret
   2300c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   23010:	add	x0, x0, #0x1d0
   23014:	ldr	q0, [x0]
   23018:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2301c:	add	x0, x0, #0xf00
   23020:	ldr	q1, [x0]
   23024:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23028:	mov	v2.16b, v0.16b
   2302c:	b	22fc8 <rintf128@@GLIBC_2.27+0x1d8>
   23030:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   23034:	add	x0, x0, #0x1e0
   23038:	ldr	q0, [x0]
   2303c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23040:	add	x0, x0, #0xf70
   23044:	ldr	q1, [x0]
   23048:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2304c:	mov	v2.16b, v0.16b
   23050:	b	22ffc <rintf128@@GLIBC_2.27+0x20c>
   23054:	fmov	d2, x2
   23058:	and	x1, x1, #0x8000ffffffffffff
   2305c:	orr	x3, x1, x19, lsl #48
   23060:	fmov	v2.d[1], x3
   23064:	b	22f68 <rintf128@@GLIBC_2.27+0x178>

0000000000023068 <sinf128@@GLIBC_2.27>:
   23068:	stp	x29, x30, [sp, #-112]!
   2306c:	mov	x3, #0x42d1                	// #17105
   23070:	movk	x3, #0xb544, lsl #16
   23074:	mov	x29, sp
   23078:	str	x19, [sp, #16]
   2307c:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   23080:	str	q0, [sp, #32]
   23084:	movk	x3, #0x921f, lsl #32
   23088:	ldp	x1, x2, [sp, #32]
   2308c:	movk	x3, #0x3ffe, lsl #48
   23090:	ldr	x4, [x19, #4032]
   23094:	ldr	x5, [x4]
   23098:	str	x5, [sp, #104]
   2309c:	mov	x5, #0x0                   	// #0
   230a0:	and	x0, x2, #0x7fffffffffffffff
   230a4:	cmp	x0, x3
   230a8:	b.le	23144 <sinf128@@GLIBC_2.27+0xdc>
   230ac:	mov	x3, #0x7ffeffffffffffff    	// #9223090561878065151
   230b0:	cmp	x0, x3
   230b4:	b.le	23108 <sinf128@@GLIBC_2.27+0xa0>
   230b8:	mov	x3, #0x7fff000000000000    	// #9223090561878065152
   230bc:	cmp	x0, x3
   230c0:	b.eq	2315c <sinf128@@GLIBC_2.27+0xf4>  // b.none
   230c4:	stp	x1, x2, [sp, #32]
   230c8:	stp	x1, x2, [sp, #48]
   230cc:	ldr	q1, [sp, #32]
   230d0:	ldr	q0, [sp, #48]
   230d4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   230d8:	str	q0, [sp, #32]
   230dc:	ldp	x1, x0, [sp, #32]
   230e0:	ldr	x19, [x19, #4032]
   230e4:	ldr	x3, [sp, #104]
   230e8:	ldr	x2, [x19]
   230ec:	eor	x2, x3, x2
   230f0:	cbnz	x2, 231c0 <sinf128@@GLIBC_2.27+0x158>
   230f4:	stp	x1, x0, [sp, #32]
   230f8:	ldr	x19, [sp, #16]
   230fc:	ldr	q0, [sp, #32]
   23100:	ldp	x29, x30, [sp], #112
   23104:	ret
   23108:	add	x0, sp, #0x40
   2310c:	bl	4d878 <__exp2f_finite@GLIBC_2.17+0xe10>
   23110:	and	w0, w0, #0x3
   23114:	ldr	q0, [sp, #64]
   23118:	cmp	w0, #0x1
   2311c:	b.eq	231ac <sinf128@@GLIBC_2.27+0x144>  // b.none
   23120:	cmp	w0, #0x2
   23124:	b.eq	23190 <sinf128@@GLIBC_2.27+0x128>  // b.none
   23128:	cbz	w0, 23178 <sinf128@@GLIBC_2.27+0x110>
   2312c:	ldr	q1, [sp, #80]
   23130:	bl	4cf50 <__exp2f_finite@GLIBC_2.17+0x4e8>
   23134:	str	q0, [sp, #32]
   23138:	ldp	x1, x0, [sp, #32]
   2313c:	eor	x0, x0, #0x8000000000000000
   23140:	b	230e0 <sinf128@@GLIBC_2.27+0x78>
   23144:	movi	v1.2d, #0x0
   23148:	mov	w0, #0x0                   	// #0
   2314c:	bl	4cb30 <__exp2f_finite@GLIBC_2.17+0xc8>
   23150:	str	q0, [sp, #32]
   23154:	ldp	x1, x0, [sp, #32]
   23158:	b	230e0 <sinf128@@GLIBC_2.27+0x78>
   2315c:	cbnz	x1, 230c4 <sinf128@@GLIBC_2.27+0x5c>
   23160:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   23164:	ldr	x0, [x0, #3976]
   23168:	mrs	x3, tpidr_el0
   2316c:	mov	w4, #0x21                  	// #33
   23170:	str	w4, [x3, x0]
   23174:	b	230c4 <sinf128@@GLIBC_2.27+0x5c>
   23178:	ldr	q1, [sp, #80]
   2317c:	mov	w0, #0x1                   	// #1
   23180:	bl	4cb30 <__exp2f_finite@GLIBC_2.17+0xc8>
   23184:	str	q0, [sp, #32]
   23188:	ldp	x1, x0, [sp, #32]
   2318c:	b	230e0 <sinf128@@GLIBC_2.27+0x78>
   23190:	ldr	q1, [sp, #80]
   23194:	mov	w0, #0x1                   	// #1
   23198:	bl	4cb30 <__exp2f_finite@GLIBC_2.17+0xc8>
   2319c:	str	q0, [sp, #32]
   231a0:	ldp	x1, x0, [sp, #32]
   231a4:	eor	x0, x0, #0x8000000000000000
   231a8:	b	230e0 <sinf128@@GLIBC_2.27+0x78>
   231ac:	ldr	q1, [sp, #80]
   231b0:	bl	4cf50 <__exp2f_finite@GLIBC_2.17+0x4e8>
   231b4:	str	q0, [sp, #32]
   231b8:	ldp	x1, x0, [sp, #32]
   231bc:	b	230e0 <sinf128@@GLIBC_2.27+0x78>
   231c0:	bl	ba70 <__stack_chk_fail@plt>
   231c4:	nop

00000000000231c8 <tanf128@@GLIBC_2.27>:
   231c8:	stp	x29, x30, [sp, #-112]!
   231cc:	mov	x3, #0x42d1                	// #17105
   231d0:	movk	x3, #0xb544, lsl #16
   231d4:	mov	x29, sp
   231d8:	str	x19, [sp, #16]
   231dc:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   231e0:	str	q0, [sp, #32]
   231e4:	movk	x3, #0x921f, lsl #32
   231e8:	ldp	x1, x2, [sp, #32]
   231ec:	movk	x3, #0x3ffe, lsl #48
   231f0:	ldr	x4, [x19, #4032]
   231f4:	ldr	x5, [x4]
   231f8:	str	x5, [sp, #104]
   231fc:	mov	x5, #0x0                   	// #0
   23200:	and	x0, x2, #0x7fffffffffffffff
   23204:	cmp	x0, x3
   23208:	b.le	2327c <tanf128@@GLIBC_2.27+0xb4>
   2320c:	mov	x3, #0x7ffeffffffffffff    	// #9223090561878065151
   23210:	cmp	x0, x3
   23214:	b.le	23258 <tanf128@@GLIBC_2.27+0x90>
   23218:	mov	x3, #0x7fff000000000000    	// #9223090561878065152
   2321c:	cmp	x0, x3
   23220:	b.eq	2328c <tanf128@@GLIBC_2.27+0xc4>  // b.none
   23224:	stp	x1, x2, [sp, #32]
   23228:	stp	x1, x2, [sp, #48]
   2322c:	ldr	q1, [sp, #32]
   23230:	ldr	q0, [sp, #48]
   23234:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23238:	ldr	x19, [x19, #4032]
   2323c:	ldr	x1, [sp, #104]
   23240:	ldr	x0, [x19]
   23244:	eor	x0, x1, x0
   23248:	cbnz	x0, 232a8 <tanf128@@GLIBC_2.27+0xe0>
   2324c:	ldr	x19, [sp, #16]
   23250:	ldp	x29, x30, [sp], #112
   23254:	ret
   23258:	add	x0, sp, #0x40
   2325c:	bl	4d878 <__exp2f_finite@GLIBC_2.17+0xe10>
   23260:	ldr	q0, [sp, #64]
   23264:	mov	w1, #0x1                   	// #1
   23268:	ldr	q1, [sp, #80]
   2326c:	ubfiz	w0, w0, #1, #1
   23270:	sub	w0, w1, w0
   23274:	bl	1f6e8 <__gammal_r_finite@GLIBC_2.17+0x5f8>
   23278:	b	23238 <tanf128@@GLIBC_2.27+0x70>
   2327c:	movi	v1.2d, #0x0
   23280:	mov	w0, #0x1                   	// #1
   23284:	bl	1f6e8 <__gammal_r_finite@GLIBC_2.17+0x5f8>
   23288:	b	23238 <tanf128@@GLIBC_2.27+0x70>
   2328c:	cbnz	x1, 23224 <tanf128@@GLIBC_2.27+0x5c>
   23290:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   23294:	ldr	x0, [x0, #3976]
   23298:	mrs	x3, tpidr_el0
   2329c:	mov	w4, #0x21                  	// #33
   232a0:	str	w4, [x3, x0]
   232a4:	b	23224 <tanf128@@GLIBC_2.27+0x5c>
   232a8:	bl	ba70 <__stack_chk_fail@plt>
   232ac:	nop

00000000000232b0 <tanhf128@@GLIBC_2.27>:
   232b0:	stp	x29, x30, [sp, #-96]!
   232b4:	mov	w0, #0x7ffeffff            	// #2147418111
   232b8:	mov	x29, sp
   232bc:	stp	x19, x20, [sp, #16]
   232c0:	str	q0, [sp, #64]
   232c4:	ldr	x19, [sp, #72]
   232c8:	stp	x21, x22, [sp, #32]
   232cc:	str	x23, [sp, #48]
   232d0:	ubfx	x21, x19, #32, #31
   232d4:	lsr	x20, x19, #32
   232d8:	cmp	w21, w0
   232dc:	ldp	x22, x23, [sp, #64]
   232e0:	b.ls	23330 <tanhf128@@GLIBC_2.27+0x80>  // b.plast
   232e4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   232e8:	add	x0, x0, #0x2f0
   232ec:	mov	v1.16b, v0.16b
   232f0:	ldr	q0, [x0]
   232f4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   232f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   232fc:	add	x0, x0, #0x2f0
   23300:	ldr	q1, [x0]
   23304:	tbnz	w20, #31, 233f4 <tanhf128@@GLIBC_2.27+0x144>
   23308:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2330c:	str	q0, [sp, #64]
   23310:	ldp	x0, x19, [sp, #64]
   23314:	stp	x0, x19, [sp, #64]
   23318:	ldp	x19, x20, [sp, #16]
   2331c:	ldp	x21, x22, [sp, #32]
   23320:	ldr	x23, [sp, #48]
   23324:	ldr	q0, [sp, #64]
   23328:	ldp	x29, x30, [sp], #96
   2332c:	ret
   23330:	mov	w0, #0x3fff                	// #16383
   23334:	movk	w0, #0x4004, lsl #16
   23338:	cmp	w21, w0
   2333c:	b.ls	2338c <tanhf128@@GLIBC_2.27+0xdc>  // b.plast
   23340:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23344:	add	x0, x0, #0xf00
   23348:	ldr	q1, [x0]
   2334c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23350:	add	x0, x0, #0x2f0
   23354:	ldr	q0, [x0]
   23358:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2335c:	str	q0, [sp, #64]
   23360:	ldp	x0, x19, [sp, #64]
   23364:	cmp	w20, #0x0
   23368:	eor	x1, x19, #0x8000000000000000
   2336c:	csel	x19, x1, x19, lt  // lt = tstop
   23370:	stp	x0, x19, [sp, #64]
   23374:	ldp	x19, x20, [sp, #16]
   23378:	ldp	x21, x22, [sp, #32]
   2337c:	ldr	x23, [sp, #48]
   23380:	ldr	q0, [sp, #64]
   23384:	ldp	x29, x30, [sp], #96
   23388:	ret
   2338c:	movi	v1.2d, #0x0
   23390:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   23394:	cbz	w0, 2341c <tanhf128@@GLIBC_2.27+0x16c>
   23398:	mov	w0, #0x3fc5ffff            	// #1069940735
   2339c:	cmp	w21, w0
   233a0:	b.ls	23424 <tanhf128@@GLIBC_2.27+0x174>  // b.plast
   233a4:	mov	w0, #0x3ffeffff            	// #1073676287
   233a8:	bfi	x23, x21, #32, #32
   233ac:	cmp	w21, w0
   233b0:	b.ls	2348c <tanhf128@@GLIBC_2.27+0x1dc>  // b.plast
   233b4:	fmov	d1, x22
   233b8:	fmov	v1.d[1], x23
   233bc:	mov	v0.16b, v1.16b
   233c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   233c4:	bl	21db8 <expm1f128@@GLIBC_2.27>
   233c8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   233cc:	add	x0, x0, #0xae0
   233d0:	ldr	q1, [x0]
   233d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   233d8:	mov	v1.16b, v0.16b
   233dc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   233e0:	add	x0, x0, #0xae0
   233e4:	ldr	q0, [x0]
   233e8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   233ec:	mov	v1.16b, v0.16b
   233f0:	b	2334c <tanhf128@@GLIBC_2.27+0x9c>
   233f4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   233f8:	str	q0, [sp, #64]
   233fc:	ldp	x0, x19, [sp, #64]
   23400:	stp	x0, x19, [sp, #64]
   23404:	ldp	x19, x20, [sp, #16]
   23408:	ldp	x21, x22, [sp, #32]
   2340c:	ldr	x23, [sp, #48]
   23410:	ldr	q0, [sp, #64]
   23414:	ldp	x29, x30, [sp], #96
   23418:	ret
   2341c:	ldr	x0, [sp, #64]
   23420:	b	23314 <tanhf128@@GLIBC_2.27+0x64>
   23424:	ldr	x0, [sp, #64]
   23428:	str	x0, [sp, #80]
   2342c:	ldr	x0, [sp, #72]
   23430:	and	x0, x0, #0x7fffffffffffffff
   23434:	str	x0, [sp, #88]
   23438:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2343c:	add	x0, x0, #0xeb0
   23440:	ldr	q0, [sp, #80]
   23444:	ldr	q1, [x0]
   23448:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2344c:	tbz	w0, #31, 2345c <tanhf128@@GLIBC_2.27+0x1ac>
   23450:	ldr	q1, [sp, #64]
   23454:	mov	v0.16b, v1.16b
   23458:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2345c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23460:	add	x0, x0, #0xf00
   23464:	ldr	q1, [x0]
   23468:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2346c:	add	x0, x0, #0x2f0
   23470:	ldr	q0, [x0]
   23474:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23478:	ldr	q1, [sp, #64]
   2347c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23480:	str	q0, [sp, #64]
   23484:	ldp	x0, x19, [sp, #64]
   23488:	b	23314 <tanhf128@@GLIBC_2.27+0x64>
   2348c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   23490:	add	x0, x0, #0x1d0
   23494:	fmov	d0, x22
   23498:	ldr	q1, [x0]
   2349c:	fmov	v0.d[1], x23
   234a0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   234a4:	bl	21db8 <expm1f128@@GLIBC_2.27>
   234a8:	str	q0, [sp, #64]
   234ac:	ldp	x19, x0, [sp, #64]
   234b0:	eor	x21, x0, #0x8000000000000000
   234b4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   234b8:	add	x0, x0, #0xae0
   234bc:	ldr	q1, [x0]
   234c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   234c4:	stp	x19, x21, [sp, #64]
   234c8:	mov	v1.16b, v0.16b
   234cc:	ldr	q0, [sp, #64]
   234d0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   234d4:	str	q0, [sp, #64]
   234d8:	ldp	x0, x19, [sp, #64]
   234dc:	b	23364 <tanhf128@@GLIBC_2.27+0xb4>

00000000000234e0 <__fpclassifyl@@GLIBC_2.17>:
   234e0:	sub	sp, sp, #0x10
   234e4:	mov	w0, #0x2                   	// #2
   234e8:	str	q0, [sp]
   234ec:	ldp	x2, x1, [sp]
   234f0:	and	x3, x1, #0xffffffffffff
   234f4:	and	x1, x1, #0x7fff000000000000
   234f8:	orr	x2, x3, x2
   234fc:	orr	x3, x2, x1
   23500:	cbz	x3, 23524 <__fpclassifyl@@GLIBC_2.17+0x44>
   23504:	mov	w0, #0x3                   	// #3
   23508:	cbz	x1, 23524 <__fpclassifyl@@GLIBC_2.17+0x44>
   2350c:	mov	x3, #0x7fff000000000000    	// #9223090561878065152
   23510:	mov	w0, #0x4                   	// #4
   23514:	cmp	x1, x3
   23518:	b.ne	23524 <__fpclassifyl@@GLIBC_2.17+0x44>  // b.any
   2351c:	cmp	x2, #0x0
   23520:	cset	w0, eq  // eq = none
   23524:	add	sp, sp, #0x10
   23528:	ret
   2352c:	nop

0000000000023530 <truncf128@@GLIBC_2.27>:
   23530:	stp	x29, x30, [sp, #-32]!
   23534:	mov	w2, #0xffffc001            	// #-16383
   23538:	mov	x29, sp
   2353c:	str	q0, [sp, #16]
   23540:	ldp	x0, x1, [sp, #16]
   23544:	ubfx	x3, x1, #48, #15
   23548:	mov	x4, x1
   2354c:	add	w2, w3, w2
   23550:	cmp	w2, #0x2f
   23554:	b.gt	23580 <truncf128@@GLIBC_2.27+0x50>
   23558:	tbnz	w2, #31, 235d8 <truncf128@@GLIBC_2.27+0xa8>
   2355c:	mov	x3, #0xffffffffffff        	// #281474976710655
   23560:	mov	x0, #0x0                   	// #0
   23564:	asr	x2, x3, x2
   23568:	mov	x3, x0
   2356c:	bic	x1, x1, x2
   23570:	stp	x3, x1, [sp, #16]
   23574:	ldr	q0, [sp, #16]
   23578:	ldp	x29, x30, [sp], #32
   2357c:	ret
   23580:	cmp	w2, #0x6f
   23584:	b.le	235ac <truncf128@@GLIBC_2.27+0x7c>
   23588:	mov	x3, x0
   2358c:	cmp	w2, #0x4, lsl #12
   23590:	b.ne	23570 <truncf128@@GLIBC_2.27+0x40>  // b.any
   23594:	stp	x0, x1, [sp, #16]
   23598:	ldr	q1, [sp, #16]
   2359c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   235a0:	str	q0, [sp, #16]
   235a4:	ldp	x3, x1, [sp, #16]
   235a8:	b	23570 <truncf128@@GLIBC_2.27+0x40>
   235ac:	mov	w1, #0xffffbfd1            	// #-16431
   235b0:	add	w3, w3, w1
   235b4:	mov	x1, #0xffffffffffffffff    	// #-1
   235b8:	lsr	x3, x1, x3
   235bc:	bic	x6, x0, x3
   235c0:	mov	x3, x6
   235c4:	mov	x1, x4
   235c8:	stp	x3, x1, [sp, #16]
   235cc:	ldr	q0, [sp, #16]
   235d0:	ldp	x29, x30, [sp], #32
   235d4:	ret
   235d8:	and	x1, x1, #0x8000000000000000
   235dc:	mov	x0, #0x0                   	// #0
   235e0:	mov	x3, x0
   235e4:	stp	x3, x1, [sp, #16]
   235e8:	ldr	q0, [sp, #16]
   235ec:	ldp	x29, x30, [sp], #32
   235f0:	ret
   235f4:	nop

00000000000235f8 <remquof128@@GLIBC_2.27>:
   235f8:	stp	x29, x30, [sp, #-144]!
   235fc:	mov	x29, sp
   23600:	stp	x23, x24, [sp, #48]
   23604:	str	q1, [sp, #112]
   23608:	ldp	x1, x24, [sp, #112]
   2360c:	stp	x19, x20, [sp, #16]
   23610:	mov	x20, x0
   23614:	str	q0, [sp, #96]
   23618:	ldp	x23, x19, [sp, #96]
   2361c:	and	x2, x24, #0x7fffffffffffffff
   23620:	orr	x0, x2, x1
   23624:	cbz	x0, 23788 <remquof128@@GLIBC_2.27+0x190>
   23628:	stp	x21, x22, [sp, #32]
   2362c:	and	x0, x19, #0x7fffffffffffffff
   23630:	mov	x3, #0x7ffeffffffffffff    	// #9223090561878065151
   23634:	mov	x21, x19
   23638:	cmp	x0, x3
   2363c:	b.gt	23748 <remquof128@@GLIBC_2.27+0x150>
   23640:	stp	x25, x26, [sp, #64]
   23644:	cmp	x2, x3
   23648:	mov	x26, x1
   2364c:	str	x27, [sp, #80]
   23650:	eor	x22, x19, x24
   23654:	mov	x27, x24
   23658:	b.le	237b4 <remquof128@@GLIBC_2.27+0x1bc>
   2365c:	mov	x0, #0x8001000000000000    	// #-9223090561878065152
   23660:	add	x2, x2, x0
   23664:	orr	x2, x2, x1
   23668:	cbnz	x2, 23740 <remquof128@@GLIBC_2.27+0x148>
   2366c:	and	x19, x19, #0x7fffffffffffffff
   23670:	and	x24, x24, #0x7fffffffffffffff
   23674:	mov	w25, #0x0                   	// #0
   23678:	tst	x27, #0x7ffe000000000000
   2367c:	b.ne	23900 <remquof128@@GLIBC_2.27+0x308>  // b.any
   23680:	stp	x23, x19, [sp, #96]
   23684:	stp	x23, x19, [sp, #112]
   23688:	ldr	q1, [sp, #96]
   2368c:	ldr	q0, [sp, #112]
   23690:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23694:	stp	x26, x24, [sp, #96]
   23698:	ldr	q1, [sp, #96]
   2369c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   236a0:	cmp	w0, #0x0
   236a4:	b.le	236e8 <remquof128@@GLIBC_2.27+0xf0>
   236a8:	stp	x26, x24, [sp, #96]
   236ac:	stp	x23, x19, [sp, #112]
   236b0:	ldr	q1, [sp, #96]
   236b4:	ldr	q0, [sp, #112]
   236b8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   236bc:	str	q0, [sp, #96]
   236c0:	ldp	x23, x19, [sp, #96]
   236c4:	stp	x23, x19, [sp, #112]
   236c8:	mov	v1.16b, v0.16b
   236cc:	ldr	q0, [sp, #112]
   236d0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   236d4:	stp	x26, x24, [sp, #96]
   236d8:	ldr	q1, [sp, #96]
   236dc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   236e0:	tbz	w0, #31, 23968 <remquof128@@GLIBC_2.27+0x370>
   236e4:	add	w25, w25, #0x1
   236e8:	stp	x23, x19, [sp, #96]
   236ec:	cmp	x22, #0x0
   236f0:	cneg	w25, w25, lt  // lt = tstop
   236f4:	movi	v1.2d, #0x0
   236f8:	ldr	q0, [sp, #96]
   236fc:	str	w25, [x20]
   23700:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   23704:	cmp	w0, #0x0
   23708:	csel	x19, x19, xzr, ne  // ne = any
   2370c:	csel	x23, x23, xzr, ne  // ne = any
   23710:	eor	x0, x19, #0x8000000000000000
   23714:	cmp	x21, #0x0
   23718:	csel	x19, x0, x19, lt  // lt = tstop
   2371c:	stp	x23, x19, [sp, #96]
   23720:	ldp	x19, x20, [sp, #16]
   23724:	ldp	x21, x22, [sp, #32]
   23728:	ldp	x23, x24, [sp, #48]
   2372c:	ldp	x25, x26, [sp, #64]
   23730:	ldr	x27, [sp, #80]
   23734:	ldr	q0, [sp, #96]
   23738:	ldp	x29, x30, [sp], #144
   2373c:	ret
   23740:	ldp	x25, x26, [sp, #64]
   23744:	ldr	x27, [sp, #80]
   23748:	stp	x1, x24, [sp, #96]
   2374c:	stp	x23, x19, [sp, #112]
   23750:	ldr	q1, [sp, #96]
   23754:	ldr	q0, [sp, #112]
   23758:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2375c:	mov	v1.16b, v0.16b
   23760:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   23764:	str	q0, [sp, #96]
   23768:	ldp	x23, x19, [sp, #96]
   2376c:	stp	x23, x19, [sp, #96]
   23770:	ldp	x19, x20, [sp, #16]
   23774:	ldp	x21, x22, [sp, #32]
   23778:	ldp	x23, x24, [sp, #48]
   2377c:	ldr	q0, [sp, #96]
   23780:	ldp	x29, x30, [sp], #144
   23784:	ret
   23788:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2378c:	mov	v1.16b, v0.16b
   23790:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   23794:	str	q0, [sp, #96]
   23798:	ldp	x23, x19, [sp, #96]
   2379c:	stp	x23, x19, [sp, #96]
   237a0:	ldp	x19, x20, [sp, #16]
   237a4:	ldp	x23, x24, [sp, #48]
   237a8:	ldr	q0, [sp, #96]
   237ac:	ldp	x29, x30, [sp], #144
   237b0:	ret
   237b4:	sub	x0, x0, x2
   237b8:	sub	x25, x23, x1
   237bc:	mov	x4, #0x7ffbffffffffffff    	// #9222246136947933183
   237c0:	orr	x25, x0, x25
   237c4:	cmp	x2, x4
   237c8:	b.gt	2384c <remquof128@@GLIBC_2.27+0x254>
   237cc:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   237d0:	add	x0, x0, #0x760
   237d4:	stp	x1, x24, [sp, #96]
   237d8:	ldr	q1, [x0]
   237dc:	ldr	q0, [sp, #96]
   237e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   237e4:	stp	x23, x19, [sp, #96]
   237e8:	mov	v1.16b, v0.16b
   237ec:	ldr	q0, [sp, #96]
   237f0:	bl	146b0 <__fmodl_finite@GLIBC_2.17>
   237f4:	str	q0, [sp, #96]
   237f8:	ldp	x23, x19, [sp, #96]
   237fc:	cbnz	x25, 2398c <remquof128@@GLIBC_2.27+0x394>
   23800:	stp	x23, x19, [sp, #96]
   23804:	cmp	x22, #0x0
   23808:	mov	w0, #0x1                   	// #1
   2380c:	movi	v1.2d, #0x0
   23810:	cneg	w0, w0, lt  // lt = tstop
   23814:	ldr	q0, [sp, #96]
   23818:	str	w0, [x20]
   2381c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23820:	str	q0, [sp, #96]
   23824:	ldp	x23, x19, [sp, #96]
   23828:	stp	x23, x19, [sp, #96]
   2382c:	ldp	x19, x20, [sp, #16]
   23830:	ldp	x21, x22, [sp, #32]
   23834:	ldp	x23, x24, [sp, #48]
   23838:	ldp	x25, x26, [sp, #64]
   2383c:	ldr	x27, [sp, #80]
   23840:	ldr	q0, [sp, #96]
   23844:	ldp	x29, x30, [sp], #144
   23848:	ret
   2384c:	cbz	x25, 23800 <remquof128@@GLIBC_2.27+0x208>
   23850:	mov	x0, #0x7ffcffffffffffff    	// #9222527611924643839
   23854:	and	x19, x19, #0x7fffffffffffffff
   23858:	and	x24, x24, #0x7fffffffffffffff
   2385c:	cmp	x2, x0
   23860:	b.gt	23998 <remquof128@@GLIBC_2.27+0x3a0>
   23864:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   23868:	add	x0, x0, #0x5a0
   2386c:	stp	x26, x24, [sp, #96]
   23870:	mov	w25, #0x0                   	// #0
   23874:	ldr	q1, [x0]
   23878:	ldr	q0, [sp, #96]
   2387c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23880:	stp	x23, x19, [sp, #96]
   23884:	ldr	q1, [sp, #96]
   23888:	str	q0, [sp, #112]
   2388c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   23890:	cmp	w0, #0x0
   23894:	b.gt	238b4 <remquof128@@GLIBC_2.27+0x2bc>
   23898:	stp	x23, x19, [sp, #96]
   2389c:	mov	w25, #0x4                   	// #4
   238a0:	ldr	q1, [sp, #112]
   238a4:	ldr	q0, [sp, #96]
   238a8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   238ac:	str	q0, [sp, #96]
   238b0:	ldp	x23, x19, [sp, #96]
   238b4:	stp	x26, x24, [sp, #96]
   238b8:	stp	x26, x24, [sp, #112]
   238bc:	ldr	q1, [sp, #96]
   238c0:	ldr	q0, [sp, #112]
   238c4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   238c8:	stp	x23, x19, [sp, #96]
   238cc:	ldr	q1, [sp, #96]
   238d0:	str	q0, [sp, #112]
   238d4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   238d8:	cmp	w0, #0x0
   238dc:	b.gt	23678 <remquof128@@GLIBC_2.27+0x80>
   238e0:	stp	x23, x19, [sp, #96]
   238e4:	add	w25, w25, #0x2
   238e8:	ldr	q1, [sp, #112]
   238ec:	ldr	q0, [sp, #96]
   238f0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   238f4:	str	q0, [sp, #96]
   238f8:	ldp	x23, x19, [sp, #96]
   238fc:	b	23678 <remquof128@@GLIBC_2.27+0x80>
   23900:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23904:	add	x0, x0, #0x330
   23908:	stp	x26, x24, [sp, #96]
   2390c:	ldr	q1, [x0]
   23910:	ldr	q0, [sp, #96]
   23914:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23918:	stp	x23, x19, [sp, #96]
   2391c:	mov	v1.16b, v0.16b
   23920:	str	q0, [sp, #128]
   23924:	ldr	q0, [sp, #96]
   23928:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2392c:	cmp	w0, #0x0
   23930:	b.le	236e8 <remquof128@@GLIBC_2.27+0xf0>
   23934:	stp	x26, x24, [sp, #96]
   23938:	stp	x23, x19, [sp, #112]
   2393c:	ldr	q1, [sp, #96]
   23940:	ldr	q0, [sp, #112]
   23944:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23948:	str	q0, [sp, #96]
   2394c:	ldr	q1, [sp, #96]
   23950:	ldr	q2, [sp, #128]
   23954:	mov	v0.16b, v2.16b
   23958:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2395c:	cmp	w0, #0x0
   23960:	ldp	x23, x19, [sp, #96]
   23964:	b.gt	236e4 <remquof128@@GLIBC_2.27+0xec>
   23968:	stp	x26, x24, [sp, #96]
   2396c:	add	w25, w25, #0x2
   23970:	stp	x23, x19, [sp, #112]
   23974:	ldr	q1, [sp, #96]
   23978:	ldr	q0, [sp, #112]
   2397c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23980:	str	q0, [sp, #96]
   23984:	ldp	x23, x19, [sp, #96]
   23988:	b	236e8 <remquof128@@GLIBC_2.27+0xf0>
   2398c:	and	x19, x19, #0x7fffffffffffffff
   23990:	and	x24, x24, #0x7fffffffffffffff
   23994:	b	23864 <remquof128@@GLIBC_2.27+0x26c>
   23998:	mov	x0, #0x7ffdffffffffffff    	// #9222809086901354495
   2399c:	mov	w25, #0x0                   	// #0
   239a0:	cmp	x2, x0
   239a4:	b.gt	23678 <remquof128@@GLIBC_2.27+0x80>
   239a8:	b	238b4 <remquof128@@GLIBC_2.27+0x2bc>
   239ac:	nop

00000000000239b0 <__log2l_finite@GLIBC_2.17>:
   239b0:	stp	x29, x30, [sp, #-144]!
   239b4:	mov	x29, sp
   239b8:	stp	x19, x20, [sp, #16]
   239bc:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   239c0:	stp	x21, x22, [sp, #32]
   239c4:	str	q0, [sp, #64]
   239c8:	ldp	x19, x21, [sp, #64]
   239cc:	ldr	x3, [x20, #4032]
   239d0:	ldr	x4, [x3]
   239d4:	str	x4, [sp, #136]
   239d8:	mov	x4, #0x0                   	// #0
   239dc:	and	x0, x21, #0x7fffffffffffffff
   239e0:	orr	x0, x0, x19
   239e4:	cbz	x0, 23a34 <__log2l_finite@GLIBC_2.17+0x84>
   239e8:	tbnz	x21, #63, 23a54 <__log2l_finite@GLIBC_2.17+0xa4>
   239ec:	mov	x0, #0x7ffeffffffffffff    	// #9223090561878065151
   239f0:	cmp	x21, x0
   239f4:	b.gt	23c5c <__log2l_finite@GLIBC_2.17+0x2ac>
   239f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   239fc:	add	x0, x0, #0x2f0
   23a00:	ldr	q1, [x0]
   23a04:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   23a08:	movi	v0.2d, #0x0
   23a0c:	cbnz	w0, 23a6c <__log2l_finite@GLIBC_2.17+0xbc>
   23a10:	ldr	x20, [x20, #4032]
   23a14:	ldr	x1, [sp, #136]
   23a18:	ldr	x0, [x20]
   23a1c:	eor	x0, x1, x0
   23a20:	cbnz	x0, 23e18 <__log2l_finite@GLIBC_2.17+0x468>
   23a24:	ldp	x19, x20, [sp, #16]
   23a28:	ldp	x21, x22, [sp, #32]
   23a2c:	ldp	x29, x30, [sp], #144
   23a30:	ret
   23a34:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   23a38:	add	x0, x0, #0xfd0
   23a3c:	ldr	q0, [x0]
   23a40:	and	x0, x21, #0x7fffffffffffffff
   23a44:	str	x0, [sp, #72]
   23a48:	ldr	q1, [sp, #64]
   23a4c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   23a50:	b	23a10 <__log2l_finite@GLIBC_2.17+0x60>
   23a54:	stp	x19, x21, [sp, #64]
   23a58:	ldr	q1, [sp, #64]
   23a5c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23a60:	mov	v1.16b, v0.16b
   23a64:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   23a68:	b	23a10 <__log2l_finite@GLIBC_2.17+0x60>
   23a6c:	stp	x19, x21, [sp, #64]
   23a70:	add	x0, sp, #0x84
   23a74:	ldr	q0, [sp, #64]
   23a78:	stp	x23, x24, [sp, #48]
   23a7c:	bl	25920 <frexpf128@@GLIBC_2.27>
   23a80:	ldr	w23, [sp, #132]
   23a84:	str	q0, [sp, #64]
   23a88:	add	w0, w23, #0x2
   23a8c:	mov	w24, w23
   23a90:	cmp	w0, #0x4
   23a94:	b.hi	23c6c <__log2l_finite@GLIBC_2.17+0x2bc>  // b.pmore
   23a98:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23a9c:	add	x0, x0, #0x5b0
   23aa0:	ldr	q1, [x0]
   23aa4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   23aa8:	ldr	q0, [sp, #64]
   23aac:	tbz	w0, #31, 23ac0 <__log2l_finite@GLIBC_2.17+0x110>
   23ab0:	sub	w24, w23, #0x1
   23ab4:	ldr	q1, [sp, #64]
   23ab8:	mov	v0.16b, v1.16b
   23abc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23ac0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23ac4:	add	x0, x0, #0x2f0
   23ac8:	adrp	x22, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   23acc:	add	x21, x22, #0x200
   23ad0:	mov	x19, x21
   23ad4:	add	x21, x21, #0x170
   23ad8:	ldr	q1, [x0]
   23adc:	add	x23, x19, #0xb0
   23ae0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23ae4:	str	q0, [sp, #64]
   23ae8:	ldr	q0, [sp, #64]
   23aec:	mov	v1.16b, v0.16b
   23af0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23af4:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23af8:	add	x0, x0, #0x600
   23afc:	str	q0, [sp, #96]
   23b00:	ldr	q2, [x0]
   23b04:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23b08:	add	x0, x0, #0x610
   23b0c:	ldr	q1, [x0]
   23b10:	b	23b18 <__log2l_finite@GLIBC_2.17+0x168>
   23b14:	ldr	q2, [x21]
   23b18:	ldr	q0, [sp, #64]
   23b1c:	sub	x21, x21, #0x10
   23b20:	str	q2, [sp, #80]
   23b24:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23b28:	ldr	q2, [sp, #80]
   23b2c:	mov	v1.16b, v2.16b
   23b30:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23b34:	cmp	x21, x23
   23b38:	mov	v1.16b, v0.16b
   23b3c:	b.ne	23b14 <__log2l_finite@GLIBC_2.17+0x164>  // b.any
   23b40:	ldr	q0, [sp, #96]
   23b44:	add	x21, x22, #0x200
   23b48:	add	x19, x19, #0x230
   23b4c:	add	x21, x21, #0x180
   23b50:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23b54:	str	q0, [sp, #112]
   23b58:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23b5c:	add	x0, x0, #0x620
   23b60:	ldr	q0, [sp, #64]
   23b64:	ldr	q1, [x0]
   23b68:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23b6c:	mov	v1.16b, v0.16b
   23b70:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23b74:	add	x0, x0, #0x630
   23b78:	ldr	q2, [x0]
   23b7c:	b	23b84 <__log2l_finite@GLIBC_2.17+0x1d4>
   23b80:	ldr	q2, [x19]
   23b84:	ldr	q0, [sp, #64]
   23b88:	sub	x19, x19, #0x10
   23b8c:	str	q2, [sp, #80]
   23b90:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23b94:	ldr	q2, [sp, #80]
   23b98:	mov	v1.16b, v2.16b
   23b9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23ba0:	cmp	x19, x21
   23ba4:	mov	v1.16b, v0.16b
   23ba8:	b.ne	23b80 <__log2l_finite@GLIBC_2.17+0x1d0>  // b.any
   23bac:	ldr	q0, [sp, #112]
   23bb0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   23bb4:	ldr	q1, [sp, #64]
   23bb8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23bbc:	str	q0, [sp, #80]
   23bc0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23bc4:	add	x0, x0, #0x330
   23bc8:	ldr	q0, [sp, #96]
   23bcc:	ldr	q1, [x0]
   23bd0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23bd4:	mov	v1.16b, v0.16b
   23bd8:	ldr	q2, [sp, #80]
   23bdc:	mov	v0.16b, v2.16b
   23be0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23be4:	mov	v2.16b, v0.16b
   23be8:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   23bec:	add	x0, x0, #0x1f0
   23bf0:	mov	v0.16b, v2.16b
   23bf4:	str	q2, [sp, #96]
   23bf8:	ldr	q1, [x0]
   23bfc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23c00:	str	q0, [sp, #80]
   23c04:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   23c08:	add	x0, x0, #0x1f0
   23c0c:	ldr	q0, [sp, #64]
   23c10:	ldr	q1, [x0]
   23c14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23c18:	ldr	q4, [sp, #80]
   23c1c:	mov	v1.16b, v4.16b
   23c20:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23c24:	ldr	q2, [sp, #96]
   23c28:	mov	v1.16b, v0.16b
   23c2c:	mov	v0.16b, v2.16b
   23c30:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23c34:	mov	v1.16b, v0.16b
   23c38:	ldr	q0, [sp, #64]
   23c3c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23c40:	str	q0, [sp, #64]
   23c44:	mov	w0, w24
   23c48:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   23c4c:	ldr	q1, [sp, #64]
   23c50:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23c54:	ldp	x23, x24, [sp, #48]
   23c58:	b	23a10 <__log2l_finite@GLIBC_2.17+0x60>
   23c5c:	stp	x19, x21, [sp, #64]
   23c60:	ldr	q1, [sp, #64]
   23c64:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23c68:	b	23a10 <__log2l_finite@GLIBC_2.17+0x60>
   23c6c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23c70:	add	x0, x0, #0x330
   23c74:	ldr	q1, [x0]
   23c78:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23c7c:	str	q0, [sp, #80]
   23c80:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23c84:	add	x0, x0, #0x5b0
   23c88:	ldr	q0, [sp, #64]
   23c8c:	ldr	q1, [x0]
   23c90:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   23c94:	ldr	q2, [sp, #80]
   23c98:	tbnz	w0, #31, 23ddc <__log2l_finite@GLIBC_2.17+0x42c>
   23c9c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23ca0:	add	x0, x0, #0x330
   23ca4:	mov	v0.16b, v2.16b
   23ca8:	ldr	q1, [x0]
   23cac:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23cb0:	str	q0, [sp, #80]
   23cb4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23cb8:	add	x0, x0, #0x330
   23cbc:	ldr	q0, [sp, #64]
   23cc0:	ldr	q1, [x0]
   23cc4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23cc8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23ccc:	add	x0, x0, #0x330
   23cd0:	ldr	q1, [x0]
   23cd4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23cd8:	mov	v1.16b, v0.16b
   23cdc:	ldr	q2, [sp, #80]
   23ce0:	mov	v0.16b, v2.16b
   23ce4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   23ce8:	mov	v1.16b, v0.16b
   23cec:	str	q0, [sp, #64]
   23cf0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23cf4:	adrp	x22, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   23cf8:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23cfc:	add	x0, x0, #0x5c0
   23d00:	add	x21, x22, #0x200
   23d04:	str	q0, [sp, #80]
   23d08:	mov	x19, x21
   23d0c:	add	x21, x21, #0x40
   23d10:	ldr	q2, [x0]
   23d14:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23d18:	add	x0, x0, #0x5d0
   23d1c:	sub	x24, x19, #0x10
   23d20:	ldr	q1, [x0]
   23d24:	b	23d2c <__log2l_finite@GLIBC_2.17+0x37c>
   23d28:	ldr	q2, [x21]
   23d2c:	ldr	q0, [sp, #80]
   23d30:	sub	x21, x21, #0x10
   23d34:	str	q2, [sp, #96]
   23d38:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23d3c:	ldr	q2, [sp, #96]
   23d40:	mov	v1.16b, v2.16b
   23d44:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23d48:	cmp	x21, x24
   23d4c:	mov	v1.16b, v0.16b
   23d50:	b.ne	23d28 <__log2l_finite@GLIBC_2.17+0x378>  // b.any
   23d54:	ldr	q0, [sp, #80]
   23d58:	add	x22, x22, #0x200
   23d5c:	add	x19, x19, #0xa0
   23d60:	add	x22, x22, #0x50
   23d64:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23d68:	str	q0, [sp, #112]
   23d6c:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23d70:	add	x0, x0, #0x5e0
   23d74:	ldr	q0, [sp, #80]
   23d78:	ldr	q1, [x0]
   23d7c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23d80:	mov	v1.16b, v0.16b
   23d84:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   23d88:	add	x0, x0, #0x5f0
   23d8c:	ldr	q2, [x0]
   23d90:	b	23d98 <__log2l_finite@GLIBC_2.17+0x3e8>
   23d94:	ldr	q2, [x19]
   23d98:	ldr	q0, [sp, #80]
   23d9c:	sub	x19, x19, #0x10
   23da0:	str	q2, [sp, #96]
   23da4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23da8:	ldr	q2, [sp, #96]
   23dac:	mov	v1.16b, v2.16b
   23db0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23db4:	cmp	x19, x22
   23db8:	mov	v1.16b, v0.16b
   23dbc:	b.ne	23d94 <__log2l_finite@GLIBC_2.17+0x3e4>  // b.any
   23dc0:	ldr	q0, [sp, #112]
   23dc4:	mov	w24, w23
   23dc8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   23dcc:	ldr	q1, [sp, #64]
   23dd0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23dd4:	mov	v2.16b, v0.16b
   23dd8:	b	23be8 <__log2l_finite@GLIBC_2.17+0x238>
   23ddc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23de0:	add	x0, x0, #0x330
   23de4:	mov	v0.16b, v2.16b
   23de8:	sub	w23, w23, #0x1
   23dec:	str	q2, [sp, #64]
   23df0:	ldr	q1, [x0]
   23df4:	str	w23, [sp, #132]
   23df8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   23dfc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   23e00:	add	x0, x0, #0x330
   23e04:	ldr	q1, [x0]
   23e08:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23e0c:	mov	v1.16b, v0.16b
   23e10:	ldr	q2, [sp, #64]
   23e14:	b	23ce0 <__log2l_finite@GLIBC_2.17+0x330>
   23e18:	stp	x23, x24, [sp, #48]
   23e1c:	bl	ba70 <__stack_chk_fail@plt>

0000000000023e20 <roundf128@@GLIBC_2.27>:
   23e20:	stp	x29, x30, [sp, #-32]!
   23e24:	mov	w7, #0xffffc001            	// #-16383
   23e28:	mov	x29, sp
   23e2c:	str	q0, [sp, #16]
   23e30:	ldp	x0, x2, [sp, #16]
   23e34:	ubfx	x4, x2, #48, #15
   23e38:	mov	x6, x0
   23e3c:	add	w3, w4, w7
   23e40:	cmp	w3, #0x2f
   23e44:	b.gt	23e78 <roundf128@@GLIBC_2.27+0x58>
   23e48:	tbnz	w3, #31, 23edc <roundf128@@GLIBC_2.27+0xbc>
   23e4c:	mov	x5, #0xffffffffffff        	// #281474976710655
   23e50:	asr	x5, x5, x3
   23e54:	and	x4, x5, x2
   23e58:	orr	x6, x4, x0
   23e5c:	cbz	x6, 23ef8 <roundf128@@GLIBC_2.27+0xd8>
   23e60:	mov	x0, #0x800000000000        	// #140737488355328
   23e64:	mov	x4, #0x0                   	// #0
   23e68:	asr	x3, x0, x3
   23e6c:	add	x1, x3, x2
   23e70:	bic	x1, x1, x5
   23e74:	b	23ef0 <roundf128@@GLIBC_2.27+0xd0>
   23e78:	cmp	w3, #0x6f
   23e7c:	b.le	23ea0 <roundf128@@GLIBC_2.27+0x80>
   23e80:	cmp	w3, #0x4, lsl #12
   23e84:	b.ne	23ef8 <roundf128@@GLIBC_2.27+0xd8>  // b.any
   23e88:	stp	x0, x2, [sp, #16]
   23e8c:	ldr	q1, [sp, #16]
   23e90:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23e94:	str	q0, [sp, #16]
   23e98:	ldp	x0, x2, [sp, #16]
   23e9c:	b	23ef8 <roundf128@@GLIBC_2.27+0xd8>
   23ea0:	mov	w5, #0xffffbfd1            	// #-16431
   23ea4:	add	w4, w4, w5
   23ea8:	mov	x5, #0xffffffffffffffff    	// #-1
   23eac:	lsr	x4, x5, x4
   23eb0:	tst	x4, x0
   23eb4:	b.eq	23ef8 <roundf128@@GLIBC_2.27+0xd8>  // b.none
   23eb8:	mov	w0, #0x6f                  	// #111
   23ebc:	sub	w0, w0, w3
   23ec0:	mov	x3, #0x1                   	// #1
   23ec4:	lsl	x3, x3, x0
   23ec8:	adds	x3, x3, x6
   23ecc:	cset	x0, cs  // cs = hs, nlast
   23ed0:	bic	x4, x3, x4
   23ed4:	add	x1, x2, x0
   23ed8:	b	23ef0 <roundf128@@GLIBC_2.27+0xd0>
   23edc:	and	x1, x2, #0x8000000000000000
   23ee0:	cmn	w3, #0x1
   23ee4:	orr	x0, x1, #0x3fff000000000000
   23ee8:	mov	x4, #0x0                   	// #0
   23eec:	csel	x1, x0, x1, eq  // eq = none
   23ef0:	mov	x0, x4
   23ef4:	mov	x2, x1
   23ef8:	stp	x0, x2, [sp, #16]
   23efc:	ldr	q0, [sp, #16]
   23f00:	ldp	x29, x30, [sp], #32
   23f04:	ret

0000000000023f08 <nearbyintf128@@GLIBC_2.27>:
   23f08:	stp	x29, x30, [sp, #-80]!
   23f0c:	mov	x29, sp
   23f10:	stp	x19, x20, [sp, #16]
   23f14:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   23f18:	ldr	x0, [x19, #4032]
   23f1c:	str	q0, [sp, #48]
   23f20:	ldr	x1, [sp, #56]
   23f24:	ldr	x2, [x0]
   23f28:	str	x2, [sp, #72]
   23f2c:	mov	x2, #0x0                   	// #0
   23f30:	mov	x2, #0xffffffffffffc001    	// #-16383
   23f34:	ubfx	x0, x1, #48, #15
   23f38:	add	x0, x0, x2
   23f3c:	cmp	x0, #0x6f
   23f40:	b.gt	23fc4 <nearbyintf128@@GLIBC_2.27+0xbc>
   23f44:	str	x21, [sp, #32]
   23f48:	lsr	x20, x1, #63
   23f4c:	add	x21, sp, #0x40
   23f50:	tbnz	x0, #63, 23fe0 <nearbyintf128@@GLIBC_2.27+0xd8>
   23f54:	mov	x0, x21
   23f58:	bl	bd58 <feholdexcept@@GLIBC_2.17>
   23f5c:	adrp	x1, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   23f60:	add	x1, x1, #0x450
   23f64:	add	x1, x1, x20, lsl #4
   23f68:	ldr	q0, [sp, #48]
   23f6c:	mov	v1.16b, v0.16b
   23f70:	ldr	q2, [x1]
   23f74:	mov	v0.16b, v2.16b
   23f78:	str	q2, [sp, #48]
   23f7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23f80:	ldr	q2, [sp, #48]
   23f84:	mov	v1.16b, v2.16b
   23f88:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   23f8c:	mov	x0, x21
   23f90:	str	q0, [sp, #48]
   23f94:	bl	bd90 <fesetenv@@GLIBC_2.17>
   23f98:	ldr	x21, [sp, #32]
   23f9c:	ldr	q2, [sp, #48]
   23fa0:	ldr	x19, [x19, #4032]
   23fa4:	ldr	x1, [sp, #72]
   23fa8:	ldr	x0, [x19]
   23fac:	eor	x0, x1, x0
   23fb0:	cbnz	x0, 24040 <nearbyintf128@@GLIBC_2.27+0x138>
   23fb4:	mov	v0.16b, v2.16b
   23fb8:	ldp	x19, x20, [sp, #16]
   23fbc:	ldp	x29, x30, [sp], #80
   23fc0:	ret
   23fc4:	cmp	x0, #0x4, lsl #12
   23fc8:	ldr	q2, [sp, #48]
   23fcc:	b.ne	23fa0 <nearbyintf128@@GLIBC_2.27+0x98>  // b.any
   23fd0:	mov	v1.16b, v2.16b
   23fd4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   23fd8:	mov	v2.16b, v0.16b
   23fdc:	b	23fa0 <nearbyintf128@@GLIBC_2.27+0x98>
   23fe0:	mov	x0, x21
   23fe4:	bl	bd58 <feholdexcept@@GLIBC_2.17>
   23fe8:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   23fec:	add	x0, x0, #0x450
   23ff0:	add	x0, x0, x20, lsl #4
   23ff4:	ldr	q0, [sp, #48]
   23ff8:	mov	v1.16b, v0.16b
   23ffc:	ldr	q2, [x0]
   24000:	mov	v0.16b, v2.16b
   24004:	str	q2, [sp, #48]
   24008:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2400c:	ldr	q2, [sp, #48]
   24010:	mov	v1.16b, v2.16b
   24014:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   24018:	str	q0, [sp, #48]
   2401c:	mov	x0, x21
   24020:	bl	bd90 <fesetenv@@GLIBC_2.17>
   24024:	ldp	x0, x1, [sp, #48]
   24028:	ldr	x2, [sp, #56]
   2402c:	ldr	x21, [sp, #32]
   24030:	fmov	d2, x0
   24034:	bfi	x2, x20, #63, #1
   24038:	fmov	v2.d[1], x2
   2403c:	b	23fa0 <nearbyintf128@@GLIBC_2.27+0x98>
   24040:	str	x21, [sp, #32]
   24044:	bl	ba70 <__stack_chk_fail@plt>

0000000000024048 <sincosf128@@GLIBC_2.27>:
   24048:	stp	x29, x30, [sp, #-128]!
   2404c:	mov	x29, sp
   24050:	stp	x19, x20, [sp, #16]
   24054:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   24058:	ldr	x2, [x20, #4032]
   2405c:	str	q0, [sp, #64]
   24060:	ldr	x5, [x2]
   24064:	str	x5, [sp, #120]
   24068:	mov	x5, #0x0                   	// #0
   2406c:	ldp	x2, x4, [sp, #64]
   24070:	mov	x5, #0x42d1                	// #17105
   24074:	movk	x5, #0xb544, lsl #16
   24078:	movk	x5, #0x921f, lsl #32
   2407c:	movk	x5, #0x3ffe, lsl #48
   24080:	and	x3, x4, #0x7fffffffffffffff
   24084:	cmp	x3, x5
   24088:	b.le	2418c <sincosf128@@GLIBC_2.27+0x144>
   2408c:	stp	x21, x22, [sp, #32]
   24090:	mov	x22, x0
   24094:	mov	x0, #0x7ffeffffffffffff    	// #9223090561878065151
   24098:	str	x23, [sp, #48]
   2409c:	cmp	x3, x0
   240a0:	mov	x23, x1
   240a4:	b.le	2413c <sincosf128@@GLIBC_2.27+0xf4>
   240a8:	stp	x2, x4, [sp, #64]
   240ac:	mov	x19, x2
   240b0:	and	x21, x4, #0x7fffffffffffffff
   240b4:	ldr	q1, [sp, #64]
   240b8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   240bc:	stp	x19, x21, [sp, #64]
   240c0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   240c4:	add	x0, x0, #0x300
   240c8:	str	q0, [x23]
   240cc:	str	q0, [x22]
   240d0:	ldr	q0, [sp, #64]
   240d4:	ldr	q1, [x0]
   240d8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   240dc:	cbnz	w0, 2419c <sincosf128@@GLIBC_2.27+0x154>
   240e0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   240e4:	add	x0, x0, #0x300
   240e8:	stp	x19, x21, [sp, #64]
   240ec:	ldr	q1, [x0]
   240f0:	ldr	q0, [sp, #64]
   240f4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   240f8:	cmp	w0, #0x0
   240fc:	b.le	2419c <sincosf128@@GLIBC_2.27+0x154>
   24100:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   24104:	ldr	x0, [x0, #3976]
   24108:	mrs	x1, tpidr_el0
   2410c:	ldp	x21, x22, [sp, #32]
   24110:	mov	w2, #0x21                  	// #33
   24114:	ldr	x23, [sp, #48]
   24118:	str	w2, [x1, x0]
   2411c:	ldr	x20, [x20, #4032]
   24120:	ldr	x1, [sp, #120]
   24124:	ldr	x0, [x20]
   24128:	eor	x0, x1, x0
   2412c:	cbnz	x0, 24214 <sincosf128@@GLIBC_2.27+0x1cc>
   24130:	ldp	x19, x20, [sp, #16]
   24134:	ldp	x29, x30, [sp], #128
   24138:	ret
   2413c:	add	x0, sp, #0x50
   24140:	bl	4d878 <__exp2f_finite@GLIBC_2.17+0xe10>
   24144:	and	w2, w0, #0x3
   24148:	ldr	q0, [sp, #80]
   2414c:	cmp	w2, #0x1
   24150:	b.eq	24200 <sincosf128@@GLIBC_2.27+0x1b8>  // b.none
   24154:	cmp	w2, #0x2
   24158:	b.eq	241a8 <sincosf128@@GLIBC_2.27+0x160>  // b.none
   2415c:	cbz	w2, 241e0 <sincosf128@@GLIBC_2.27+0x198>
   24160:	ldr	q1, [sp, #96]
   24164:	mov	x0, x23
   24168:	mov	x1, x22
   2416c:	mov	w2, #0x1                   	// #1
   24170:	bl	4d2e0 <__exp2f_finite@GLIBC_2.17+0x878>
   24174:	ldr	x0, [x22, #8]
   24178:	ldr	x23, [sp, #48]
   2417c:	eor	x0, x0, #0x8000000000000000
   24180:	str	x0, [x22, #8]
   24184:	ldp	x21, x22, [sp, #32]
   24188:	b	2411c <sincosf128@@GLIBC_2.27+0xd4>
   2418c:	movi	v1.2d, #0x0
   24190:	mov	w2, #0x0                   	// #0
   24194:	bl	4d2e0 <__exp2f_finite@GLIBC_2.17+0x878>
   24198:	b	2411c <sincosf128@@GLIBC_2.27+0xd4>
   2419c:	ldp	x21, x22, [sp, #32]
   241a0:	ldr	x23, [sp, #48]
   241a4:	b	2411c <sincosf128@@GLIBC_2.27+0xd4>
   241a8:	ldr	q1, [sp, #96]
   241ac:	mov	x0, x22
   241b0:	mov	x1, x23
   241b4:	mov	w2, #0x1                   	// #1
   241b8:	bl	4d2e0 <__exp2f_finite@GLIBC_2.17+0x878>
   241bc:	ldr	x0, [x22, #8]
   241c0:	eor	x0, x0, #0x8000000000000000
   241c4:	str	x0, [x22, #8]
   241c8:	ldr	x0, [x23, #8]
   241cc:	ldp	x21, x22, [sp, #32]
   241d0:	eor	x0, x0, #0x8000000000000000
   241d4:	str	x0, [x23, #8]
   241d8:	ldr	x23, [sp, #48]
   241dc:	b	2411c <sincosf128@@GLIBC_2.27+0xd4>
   241e0:	ldr	q1, [sp, #96]
   241e4:	mov	x1, x23
   241e8:	mov	x0, x22
   241ec:	mov	w2, #0x1                   	// #1
   241f0:	bl	4d2e0 <__exp2f_finite@GLIBC_2.17+0x878>
   241f4:	ldp	x21, x22, [sp, #32]
   241f8:	ldr	x23, [sp, #48]
   241fc:	b	2411c <sincosf128@@GLIBC_2.27+0xd4>
   24200:	ldr	q1, [sp, #96]
   24204:	mov	x1, x22
   24208:	mov	x0, x23
   2420c:	bl	4d2e0 <__exp2f_finite@GLIBC_2.17+0x878>
   24210:	b	241c8 <sincosf128@@GLIBC_2.27+0x180>
   24214:	stp	x21, x22, [sp, #32]
   24218:	str	x23, [sp, #48]
   2421c:	bl	ba70 <__stack_chk_fail@plt>

0000000000024220 <fmaf128@@GLIBC_2.27>:
   24220:	stp	x29, x30, [sp, #-272]!
   24224:	mov	w0, #0x7f8d                	// #32653
   24228:	mov	w1, #0xbf8c                	// #49036
   2422c:	mov	x29, sp
   24230:	stp	x25, x26, [sp, #64]
   24234:	stp	x27, x28, [sp, #80]
   24238:	str	q1, [sp, #112]
   2423c:	ldp	x26, x27, [sp, #112]
   24240:	stp	x23, x24, [sp, #48]
   24244:	adrp	x23, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   24248:	stp	x19, x20, [sp, #16]
   2424c:	str	q0, [sp, #240]
   24250:	ldrh	w19, [sp, #254]
   24254:	ubfx	x25, x27, #48, #15
   24258:	ldr	x2, [x23, #4032]
   2425c:	and	w19, w19, #0x7fff
   24260:	cmp	w19, w0
   24264:	add	w28, w19, w25
   24268:	cset	w20, hi  // hi = pmore
   2426c:	ldr	x3, [x2]
   24270:	str	x3, [sp, #264]
   24274:	mov	x3, #0x0                   	// #0
   24278:	cmp	w28, w1
   2427c:	stp	x21, x22, [sp, #32]
   24280:	cset	w1, gt
   24284:	cmp	w25, w0
   24288:	orr	w20, w20, w1
   2428c:	cset	w21, hi  // hi = pmore
   24290:	str	q2, [sp, #96]
   24294:	str	q0, [sp, #128]
   24298:	orr	w21, w20, w21
   2429c:	ldp	x2, x3, [sp, #96]
   242a0:	cbnz	w21, 245b4 <fmaf128@@GLIBC_2.27+0x394>
   242a4:	ubfx	x4, x3, #48, #15
   242a8:	mov	w1, #0x4070                	// #16496
   242ac:	cmp	w4, w0
   242b0:	ccmp	w28, w1, #0x4, ls  // ls = plast
   242b4:	b.le	245b4 <fmaf128@@GLIBC_2.27+0x394>
   242b8:	movi	v1.2d, #0x0
   242bc:	mov	w20, #0x0                   	// #0
   242c0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   242c4:	cmp	w0, #0x0
   242c8:	movi	v1.2d, #0x0
   242cc:	ldr	q0, [sp, #112]
   242d0:	cset	w22, eq  // eq = none
   242d4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   242d8:	cmp	w0, #0x0
   242dc:	cset	w0, eq  // eq = none
   242e0:	orr	w22, w22, w0
   242e4:	and	w22, w22, #0xff
   242e8:	movi	v1.2d, #0x0
   242ec:	ldr	q0, [sp, #96]
   242f0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   242f4:	cmp	w0, #0x0
   242f8:	cset	w0, eq  // eq = none
   242fc:	tst	w22, w0
   24300:	b.ne	24a04 <fmaf128@@GLIBC_2.27+0x7e4>  // b.any
   24304:	add	x19, sp, #0xe8
   24308:	mov	x0, x19
   2430c:	bl	bd58 <feholdexcept@@GLIBC_2.17>
   24310:	mov	w0, #0x0                   	// #0
   24314:	bl	bd08 <fesetround@@GLIBC_2.17>
   24318:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   2431c:	add	x0, x0, #0x4a0
   24320:	ldr	q0, [sp, #128]
   24324:	ldr	q1, [x0]
   24328:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2432c:	str	q0, [sp, #144]
   24330:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24334:	add	x0, x0, #0x4a0
   24338:	ldr	q0, [sp, #112]
   2433c:	ldr	q1, [x0]
   24340:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24344:	str	q0, [sp, #176]
   24348:	ldr	q0, [sp, #112]
   2434c:	ldr	q1, [sp, #128]
   24350:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24354:	ldr	q4, [sp, #144]
   24358:	str	q0, [sp, #144]
   2435c:	ldr	q0, [sp, #128]
   24360:	mov	v1.16b, v4.16b
   24364:	str	q4, [sp, #160]
   24368:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2436c:	ldr	q4, [sp, #160]
   24370:	mov	v1.16b, v4.16b
   24374:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24378:	str	q0, [sp, #160]
   2437c:	ldr	q0, [sp, #112]
   24380:	ldr	q2, [sp, #176]
   24384:	mov	v1.16b, v2.16b
   24388:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2438c:	ldr	q2, [sp, #176]
   24390:	mov	v1.16b, v2.16b
   24394:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24398:	str	q0, [sp, #176]
   2439c:	ldr	q0, [sp, #128]
   243a0:	ldr	q1, [sp, #160]
   243a4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   243a8:	str	q0, [sp, #208]
   243ac:	ldr	q0, [sp, #112]
   243b0:	ldr	q1, [sp, #176]
   243b4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   243b8:	str	q0, [sp, #112]
   243bc:	ldr	q0, [sp, #160]
   243c0:	ldr	q1, [sp, #176]
   243c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   243c8:	ldr	q1, [sp, #144]
   243cc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   243d0:	mov	v6.16b, v0.16b
   243d4:	ldr	q4, [sp, #112]
   243d8:	str	q4, [sp, #192]
   243dc:	mov	v1.16b, v4.16b
   243e0:	ldr	q0, [sp, #160]
   243e4:	str	q6, [sp, #112]
   243e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   243ec:	mov	v1.16b, v0.16b
   243f0:	ldr	q6, [sp, #112]
   243f4:	mov	v0.16b, v6.16b
   243f8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   243fc:	str	q0, [sp, #128]
   24400:	ldr	q0, [sp, #176]
   24404:	ldr	q2, [sp, #208]
   24408:	mov	v1.16b, v2.16b
   2440c:	str	q2, [sp, #112]
   24410:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24414:	mov	v1.16b, v0.16b
   24418:	ldr	q6, [sp, #128]
   2441c:	mov	v0.16b, v6.16b
   24420:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24424:	mov	v6.16b, v0.16b
   24428:	ldr	q2, [sp, #112]
   2442c:	ldr	q4, [sp, #192]
   24430:	mov	v0.16b, v2.16b
   24434:	str	q6, [sp, #112]
   24438:	mov	v1.16b, v4.16b
   2443c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24440:	ldr	q6, [sp, #112]
   24444:	mov	v1.16b, v0.16b
   24448:	mov	v0.16b, v6.16b
   2444c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24450:	str	q0, [sp, #112]
   24454:	ldr	q0, [sp, #96]
   24458:	ldr	q1, [sp, #144]
   2445c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24460:	str	q0, [sp, #128]
   24464:	ldr	q1, [sp, #96]
   24468:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2446c:	mov	v1.16b, v0.16b
   24470:	ldr	q0, [sp, #128]
   24474:	str	q1, [sp, #160]
   24478:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2447c:	ldr	q1, [sp, #160]
   24480:	str	q0, [sp, #160]
   24484:	ldr	q0, [sp, #144]
   24488:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2448c:	ldr	q2, [sp, #160]
   24490:	str	q0, [sp, #160]
   24494:	ldr	q0, [sp, #96]
   24498:	mov	v1.16b, v2.16b
   2449c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   244a0:	mov	v1.16b, v0.16b
   244a4:	ldr	q2, [sp, #160]
   244a8:	mov	v0.16b, v2.16b
   244ac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   244b0:	str	q0, [sp, #160]
   244b4:	ldr	q1, [sp, #112]
   244b8:	mov	w0, #0x10                  	// #16
   244bc:	bl	bba0 <feclearexcept@@GLIBC_2.17>
   244c0:	movi	v1.2d, #0x0
   244c4:	ldr	q0, [sp, #128]
   244c8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   244cc:	cmp	w0, #0x0
   244d0:	movi	v1.2d, #0x0
   244d4:	ldr	q0, [sp, #112]
   244d8:	cset	w21, eq  // eq = none
   244dc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   244e0:	cmp	w0, #0x0
   244e4:	cset	w0, eq  // eq = none
   244e8:	tst	w0, w21
   244ec:	b.ne	24568 <fmaf128@@GLIBC_2.27+0x348>  // b.any
   244f0:	mov	w0, #0xc00000              	// #12582912
   244f4:	bl	bd08 <fesetround@@GLIBC_2.17>
   244f8:	ldr	q0, [sp, #112]
   244fc:	ldr	q1, [sp, #160]
   24500:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24504:	str	q0, [sp, #96]
   24508:	ldp	x4, x2, [sp, #96]
   2450c:	fmov	d0, x4
   24510:	and	w3, w4, #0x1
   24514:	fmov	v0.d[1], x2
   24518:	str	q0, [sp, #240]
   2451c:	cbnz	w20, 2480c <fmaf128@@GLIBC_2.27+0x5ec>
   24520:	cbnz	w3, 24550 <fmaf128@@GLIBC_2.27+0x330>
   24524:	ubfx	x2, x2, #48, #15
   24528:	mov	w0, #0x7fff                	// #32767
   2452c:	cmp	w2, w0
   24530:	b.eq	24550 <fmaf128@@GLIBC_2.27+0x330>  // b.none
   24534:	mov	w0, #0x10                  	// #16
   24538:	bl	bce8 <fetestexcept@@GLIBC_2.17>
   2453c:	ldr	w1, [sp, #240]
   24540:	cmp	w0, #0x0
   24544:	cset	w0, ne  // ne = any
   24548:	orr	w1, w1, w0
   2454c:	str	w1, [sp, #240]
   24550:	mov	x0, x19
   24554:	bl	be00 <feupdateenv@@GLIBC_2.17>
   24558:	ldr	q0, [sp, #128]
   2455c:	ldr	q1, [sp, #240]
   24560:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24564:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   24568:	mov	x0, x19
   2456c:	bl	be00 <feupdateenv@@GLIBC_2.17>
   24570:	ldr	q0, [sp, #96]
   24574:	str	q0, [sp, #96]
   24578:	ldr	q1, [sp, #96]
   2457c:	ldr	q0, [sp, #144]
   24580:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24584:	ldr	x23, [x23, #4032]
   24588:	ldr	x1, [sp, #264]
   2458c:	ldr	x0, [x23]
   24590:	eor	x0, x1, x0
   24594:	cbnz	x0, 24d44 <fmaf128@@GLIBC_2.27+0xb24>
   24598:	ldp	x19, x20, [sp, #16]
   2459c:	ldp	x21, x22, [sp, #32]
   245a0:	ldp	x23, x24, [sp, #48]
   245a4:	ldp	x25, x26, [sp, #64]
   245a8:	ldp	x27, x28, [sp, #80]
   245ac:	ldp	x29, x30, [sp], #272
   245b0:	ret
   245b4:	ldr	x24, [sp, #104]
   245b8:	mov	w22, #0x7fff                	// #32767
   245bc:	ubfx	x24, x24, #48, #15
   245c0:	cmp	w24, w22
   245c4:	b.eq	246f8 <fmaf128@@GLIBC_2.27+0x4d8>  // b.none
   245c8:	movi	v1.2d, #0x0
   245cc:	ldr	q0, [sp, #112]
   245d0:	stp	x2, x3, [sp, #176]
   245d4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   245d8:	cmp	w0, #0x0
   245dc:	movi	v1.2d, #0x0
   245e0:	cset	w4, ne  // ne = any
   245e4:	ldr	q0, [sp, #96]
   245e8:	str	w4, [sp, #144]
   245ec:	str	w0, [sp, #160]
   245f0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   245f4:	cmp	w0, #0x0
   245f8:	ldr	w4, [sp, #144]
   245fc:	cset	w0, eq  // eq = none
   24600:	movi	v1.2d, #0x0
   24604:	ldr	q0, [sp, #128]
   24608:	and	w4, w4, w0
   2460c:	str	w4, [sp, #144]
   24610:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24614:	cmp	w0, #0x0
   24618:	ldr	w4, [sp, #144]
   2461c:	cset	w5, ne  // ne = any
   24620:	ldr	w1, [sp, #160]
   24624:	tst	w5, w4
   24628:	ldp	x2, x3, [sp, #176]
   2462c:	b.ne	24778 <fmaf128@@GLIBC_2.27+0x558>  // b.any
   24630:	ldr	x4, [sp, #136]
   24634:	ubfx	x4, x4, #48, #15
   24638:	cmp	w4, w22
   2463c:	b.eq	24760 <fmaf128@@GLIBC_2.27+0x540>  // b.none
   24640:	ldr	x5, [sp, #120]
   24644:	ubfx	x5, x5, #48, #15
   24648:	cmp	w5, w22
   2464c:	b.eq	24760 <fmaf128@@GLIBC_2.27+0x540>  // b.none
   24650:	cmp	w0, #0x0
   24654:	cset	w0, eq  // eq = none
   24658:	cmp	w1, #0x0
   2465c:	cset	w1, eq  // eq = none
   24660:	orr	w0, w0, w1
   24664:	and	w22, w0, #0xff
   24668:	tbnz	w0, #0, 24760 <fmaf128@@GLIBC_2.27+0x540>
   2466c:	mov	w0, #0xbffe                	// #49150
   24670:	cmp	w28, w0
   24674:	b.gt	24778 <fmaf128@@GLIBC_2.27+0x558>
   24678:	mov	w0, #0x3f8b                	// #16267
   2467c:	ubfx	x1, x3, #48, #15
   24680:	cmp	w28, w0
   24684:	b.le	247a0 <fmaf128@@GLIBC_2.27+0x580>
   24688:	mov	w0, #0xbf8c                	// #49036
   2468c:	cmp	w28, w0
   24690:	b.le	248d0 <fmaf128@@GLIBC_2.27+0x6b0>
   24694:	str	w1, [sp, #144]
   24698:	cmp	w19, w25
   2469c:	stp	x2, x3, [sp, #160]
   246a0:	b.ls	249d4 <fmaf128@@GLIBC_2.27+0x7b4>  // b.plast
   246a4:	ldrh	w0, [sp, #254]
   246a8:	sub	w19, w19, #0x71
   246ac:	movi	v1.2d, #0x0
   246b0:	bfxil	w0, w19, #0, #15
   246b4:	strh	w0, [sp, #254]
   246b8:	ldr	q0, [sp, #240]
   246bc:	str	q0, [sp, #128]
   246c0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   246c4:	ldp	x2, x3, [sp, #160]
   246c8:	cmp	w0, #0x0
   246cc:	ldr	w1, [sp, #144]
   246d0:	cset	w22, eq  // eq = none
   246d4:	mov	w4, #0x0                   	// #0
   246d8:	orr	w22, w22, w4
   246dc:	cmp	w1, #0x71
   246e0:	mov	w20, #0x1                   	// #1
   246e4:	b.ls	242e8 <fmaf128@@GLIBC_2.27+0xc8>  // b.plast
   246e8:	sub	w1, w1, #0x71
   246ec:	bfi	x3, x1, #48, #15
   246f0:	stp	x2, x3, [sp, #96]
   246f4:	b	242e8 <fmaf128@@GLIBC_2.27+0xc8>
   246f8:	ldr	x0, [sp, #136]
   246fc:	ubfx	x0, x0, #48, #15
   24700:	cmp	w0, w24
   24704:	b.eq	247dc <fmaf128@@GLIBC_2.27+0x5bc>  // b.none
   24708:	ldr	x0, [sp, #120]
   2470c:	ubfx	x0, x0, #48, #15
   24710:	cmp	w0, w24
   24714:	b.ne	24788 <fmaf128@@GLIBC_2.27+0x568>  // b.any
   24718:	movi	v1.2d, #0x0
   2471c:	ldr	q0, [sp, #112]
   24720:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24724:	cmp	w0, #0x0
   24728:	movi	v1.2d, #0x0
   2472c:	ldr	q0, [sp, #96]
   24730:	cset	w19, ne  // ne = any
   24734:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24738:	cmp	w0, #0x0
   2473c:	movi	v1.2d, #0x0
   24740:	cset	w0, eq  // eq = none
   24744:	ldr	q0, [sp, #128]
   24748:	and	w19, w19, w0
   2474c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24750:	cmp	w0, #0x0
   24754:	cset	w0, ne  // ne = any
   24758:	tst	w0, w19
   2475c:	b.ne	24778 <fmaf128@@GLIBC_2.27+0x558>  // b.any
   24760:	ldr	q1, [sp, #112]
   24764:	ldr	q0, [sp, #128]
   24768:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2476c:	ldr	q1, [sp, #96]
   24770:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24774:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   24778:	ldr	q1, [sp, #112]
   2477c:	ldr	q0, [sp, #128]
   24780:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24784:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   24788:	ldr	q1, [sp, #96]
   2478c:	ldr	q0, [sp, #128]
   24790:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24794:	ldr	q1, [sp, #112]
   24798:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2479c:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   247a0:	ldrb	w19, [sp, #255]
   247a4:	lsr	x0, x27, #63
   247a8:	and	w20, w0, #0xff
   247ac:	ubfx	x19, x19, #7, #1
   247b0:	cmp	w19, w0
   247b4:	b.eq	248c0 <fmaf128@@GLIBC_2.27+0x6a0>  // b.none
   247b8:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   247bc:	add	x0, x0, #0x470
   247c0:	ldr	q2, [x0]
   247c4:	cmp	w1, #0x2
   247c8:	b.ls	2486c <fmaf128@@GLIBC_2.27+0x64c>  // b.plast
   247cc:	ldr	q1, [sp, #96]
   247d0:	mov	v0.16b, v2.16b
   247d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   247d8:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   247dc:	movi	v1.2d, #0x0
   247e0:	ldr	q0, [sp, #96]
   247e4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   247e8:	cmp	w0, #0x0
   247ec:	movi	v1.2d, #0x0
   247f0:	ldr	q0, [sp, #112]
   247f4:	cset	w19, eq  // eq = none
   247f8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   247fc:	cmp	w0, #0x0
   24800:	movi	v1.2d, #0x0
   24804:	cset	w0, ne  // ne = any
   24808:	b	24744 <fmaf128@@GLIBC_2.27+0x524>
   2480c:	cmp	w20, #0x1
   24810:	b.ne	24a94 <fmaf128@@GLIBC_2.27+0x874>  // b.any
   24814:	cbnz	w3, 24844 <fmaf128@@GLIBC_2.27+0x624>
   24818:	ubfx	x0, x2, #48, #15
   2481c:	mov	w1, #0x7fff                	// #32767
   24820:	cmp	w0, w1
   24824:	b.eq	24844 <fmaf128@@GLIBC_2.27+0x624>  // b.none
   24828:	mov	w0, #0x10                  	// #16
   2482c:	bl	bce8 <fetestexcept@@GLIBC_2.17>
   24830:	ldr	w1, [sp, #240]
   24834:	cmp	w0, #0x0
   24838:	cset	w0, ne  // ne = any
   2483c:	orr	w1, w1, w0
   24840:	str	w1, [sp, #240]
   24844:	mov	x0, x19
   24848:	bl	be00 <feupdateenv@@GLIBC_2.17>
   2484c:	ldr	q0, [sp, #128]
   24850:	ldr	q1, [sp, #240]
   24854:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24858:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   2485c:	add	x0, x0, #0x8f0
   24860:	ldr	q1, [x0]
   24864:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24868:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   2486c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24870:	add	x0, x0, #0x1c0
   24874:	ldr	q0, [sp, #96]
   24878:	str	q2, [sp, #144]
   2487c:	ldr	q1, [x0]
   24880:	stp	x2, x3, [sp, #160]
   24884:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24888:	ldr	q2, [sp, #144]
   2488c:	mov	v1.16b, v2.16b
   24890:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24894:	mov	v2.16b, v0.16b
   24898:	cbz	w24, 2495c <fmaf128@@GLIBC_2.27+0x73c>
   2489c:	cmp	w24, #0x1
   248a0:	ldp	x2, x3, [sp, #160]
   248a4:	b.eq	2493c <fmaf128@@GLIBC_2.27+0x71c>  // b.none
   248a8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   248ac:	add	x0, x0, #0xad0
   248b0:	mov	v0.16b, v2.16b
   248b4:	ldr	q1, [x0]
   248b8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   248bc:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   248c0:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   248c4:	add	x0, x0, #0x480
   248c8:	ldr	q2, [x0]
   248cc:	b	247c4 <fmaf128@@GLIBC_2.27+0x5a4>
   248d0:	mov	w0, #0x7f8d                	// #32653
   248d4:	cmp	w1, w0
   248d8:	b.ls	24974 <fmaf128@@GLIBC_2.27+0x754>  // b.plast
   248dc:	mov	w0, #0x40e1                	// #16609
   248e0:	cmp	w28, w0
   248e4:	b.gt	24a70 <fmaf128@@GLIBC_2.27+0x850>
   248e8:	str	w1, [sp, #96]
   248ec:	cmp	w19, w25
   248f0:	stp	x2, x3, [sp, #144]
   248f4:	b.ls	24ba8 <fmaf128@@GLIBC_2.27+0x988>  // b.plast
   248f8:	ldrh	w0, [sp, #254]
   248fc:	add	w19, w19, #0xe4
   24900:	movi	v1.2d, #0x0
   24904:	bfxil	w0, w19, #0, #15
   24908:	strh	w0, [sp, #254]
   2490c:	ldr	q0, [sp, #240]
   24910:	str	q0, [sp, #128]
   24914:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24918:	cmp	w0, #0x0
   2491c:	ldp	x2, x3, [sp, #144]
   24920:	cset	w22, eq  // eq = none
   24924:	ldr	w1, [sp, #96]
   24928:	sub	w1, w1, #0x71
   2492c:	mov	w20, #0x1                   	// #1
   24930:	bfi	x3, x1, #48, #15
   24934:	stp	x2, x3, [sp, #96]
   24938:	b	242e8 <fmaf128@@GLIBC_2.27+0xc8>
   2493c:	lsr	x0, x3, #63
   24940:	eor	w19, w19, w20
   24944:	cmp	w19, w0
   24948:	b.eq	248a8 <fmaf128@@GLIBC_2.27+0x688>  // b.none
   2494c:	ldp	x1, x0, [sp, #96]
   24950:	and	x0, x0, #0xffffffffffff
   24954:	orr	x0, x0, x1
   24958:	cbnz	x0, 248a8 <fmaf128@@GLIBC_2.27+0x688>
   2495c:	ldr	q1, [sp, #112]
   24960:	ldr	q0, [sp, #128]
   24964:	str	q2, [sp, #96]
   24968:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2496c:	ldr	q2, [sp, #96]
   24970:	b	248a8 <fmaf128@@GLIBC_2.27+0x688>
   24974:	cbz	w20, 24a24 <fmaf128@@GLIBC_2.27+0x804>
   24978:	ldrh	w0, [sp, #254]
   2497c:	sub	w19, w19, #0x71
   24980:	bfxil	w0, w19, #0, #15
   24984:	strh	w0, [sp, #254]
   24988:	cbz	w5, 24b30 <fmaf128@@GLIBC_2.27+0x910>
   2498c:	movi	v1.2d, #0x0
   24990:	add	w0, w25, #0x71
   24994:	ldr	q0, [sp, #240]
   24998:	mov	w20, #0x0                   	// #0
   2499c:	bfi	x27, x0, #48, #15
   249a0:	str	q0, [sp, #128]
   249a4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   249a8:	movi	v1.2d, #0x0
   249ac:	cmp	w0, #0x0
   249b0:	stp	x26, x27, [sp, #112]
   249b4:	cset	w19, eq  // eq = none
   249b8:	ldr	q0, [sp, #112]
   249bc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   249c0:	cmp	w0, #0x0
   249c4:	cset	w22, eq  // eq = none
   249c8:	orr	w19, w19, w22
   249cc:	and	w22, w19, #0xff
   249d0:	b	242e8 <fmaf128@@GLIBC_2.27+0xc8>
   249d4:	sub	w0, w25, #0x71
   249d8:	mov	w22, #0x0                   	// #0
   249dc:	movi	v1.2d, #0x0
   249e0:	bfi	x27, x0, #48, #15
   249e4:	stp	x26, x27, [sp, #112]
   249e8:	ldr	q0, [sp, #112]
   249ec:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   249f0:	cmp	w0, #0x0
   249f4:	ldr	w1, [sp, #144]
   249f8:	cset	w4, eq  // eq = none
   249fc:	ldp	x2, x3, [sp, #160]
   24a00:	b	246d8 <fmaf128@@GLIBC_2.27+0x4b8>
   24a04:	ldr	q0, [sp, #128]
   24a08:	str	q0, [sp, #128]
   24a0c:	ldr	q0, [sp, #112]
   24a10:	ldr	q1, [sp, #128]
   24a14:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24a18:	ldr	q1, [sp, #96]
   24a1c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24a20:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   24a24:	cbz	w21, 24bc0 <fmaf128@@GLIBC_2.27+0x9a0>
   24a28:	sub	w0, w25, #0x71
   24a2c:	bfi	x27, x0, #48, #15
   24a30:	cbz	w4, 24c54 <fmaf128@@GLIBC_2.27+0xa34>
   24a34:	ldrh	w0, [sp, #254]
   24a38:	add	w19, w19, #0x71
   24a3c:	movi	v1.2d, #0x0
   24a40:	stp	x26, x27, [sp, #112]
   24a44:	mov	w20, #0x0                   	// #0
   24a48:	bfxil	w0, w19, #0, #15
   24a4c:	strh	w0, [sp, #254]
   24a50:	ldr	q0, [sp, #240]
   24a54:	str	q0, [sp, #128]
   24a58:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24a5c:	cmp	w0, #0x0
   24a60:	ldr	q0, [sp, #112]
   24a64:	movi	v1.2d, #0x0
   24a68:	cset	w19, eq  // eq = none
   24a6c:	b	249bc <fmaf128@@GLIBC_2.27+0x79c>
   24a70:	cmp	w19, w25
   24a74:	b.ls	24b6c <fmaf128@@GLIBC_2.27+0x94c>  // b.plast
   24a78:	cmp	w19, #0x71
   24a7c:	b.ls	24928 <fmaf128@@GLIBC_2.27+0x708>  // b.plast
   24a80:	ldrh	w0, [sp, #254]
   24a84:	sub	w19, w19, #0x71
   24a88:	str	w1, [sp, #96]
   24a8c:	stp	x2, x3, [sp, #144]
   24a90:	b	24900 <fmaf128@@GLIBC_2.27+0x6e0>
   24a94:	cbz	w3, 24c2c <fmaf128@@GLIBC_2.27+0xa0c>
   24a98:	stp	x4, x2, [sp, #96]
   24a9c:	ldr	q0, [sp, #128]
   24aa0:	ldr	q1, [sp, #96]
   24aa4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24aa8:	fmov	x26, d0
   24aac:	fmov	x27, v0.d[1]
   24ab0:	mov	w0, #0x10                  	// #16
   24ab4:	str	q0, [sp, #96]
   24ab8:	bl	bce8 <fetestexcept@@GLIBC_2.17>
   24abc:	mov	w1, w0
   24ac0:	mov	x0, x19
   24ac4:	mov	w19, w1
   24ac8:	bl	be00 <feupdateenv@@GLIBC_2.17>
   24acc:	ldr	q0, [sp, #96]
   24ad0:	cbz	w19, 24b1c <fmaf128@@GLIBC_2.27+0x8fc>
   24ad4:	ubfx	x0, x27, #48, #15
   24ad8:	cmp	w0, #0xe4
   24adc:	b.hi	24b10 <fmaf128@@GLIBC_2.27+0x8f0>  // b.pmore
   24ae0:	ubfx	x0, x27, #48, #15
   24ae4:	cmp	w0, #0xe4
   24ae8:	b.eq	24cb0 <fmaf128@@GLIBC_2.27+0xa90>  // b.none
   24aec:	orr	w0, w26, #0x1
   24af0:	adrp	x1, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24af4:	add	x1, x1, #0x4b0
   24af8:	bfxil	x26, x0, #0, #32
   24afc:	fmov	d0, x26
   24b00:	ldr	q1, [x1]
   24b04:	fmov	v0.d[1], x27
   24b08:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24b0c:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   24b10:	ldr	q0, [sp, #128]
   24b14:	ldr	q1, [sp, #240]
   24b18:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24b1c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24b20:	add	x0, x0, #0x4b0
   24b24:	ldr	q1, [x0]
   24b28:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24b2c:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   24b30:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   24b34:	add	x0, x0, #0x8f0
   24b38:	ldr	q0, [sp, #112]
   24b3c:	mov	w20, #0x0                   	// #0
   24b40:	ldr	q1, [x0]
   24b44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24b48:	str	q0, [sp, #112]
   24b4c:	movi	v1.2d, #0x0
   24b50:	ldr	q2, [sp, #240]
   24b54:	mov	v0.16b, v2.16b
   24b58:	str	q2, [sp, #128]
   24b5c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24b60:	cmp	w0, #0x0
   24b64:	movi	v1.2d, #0x0
   24b68:	b	249b4 <fmaf128@@GLIBC_2.27+0x794>
   24b6c:	cmp	w25, #0x71
   24b70:	b.ls	24928 <fmaf128@@GLIBC_2.27+0x708>  // b.plast
   24b74:	sub	w0, w25, #0x71
   24b78:	str	w1, [sp, #96]
   24b7c:	movi	v1.2d, #0x0
   24b80:	stp	x2, x3, [sp, #144]
   24b84:	bfi	x27, x0, #48, #15
   24b88:	stp	x26, x27, [sp, #112]
   24b8c:	ldr	q0, [sp, #112]
   24b90:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24b94:	cmp	w0, #0x0
   24b98:	ldr	w1, [sp, #96]
   24b9c:	cset	w22, eq  // eq = none
   24ba0:	ldp	x2, x3, [sp, #144]
   24ba4:	b	24928 <fmaf128@@GLIBC_2.27+0x708>
   24ba8:	movi	v1.2d, #0x0
   24bac:	add	w0, w25, #0xe4
   24bb0:	bfi	x27, x0, #48, #15
   24bb4:	stp	x26, x27, [sp, #112]
   24bb8:	ldr	q0, [sp, #112]
   24bbc:	b	24914 <fmaf128@@GLIBC_2.27+0x6f4>
   24bc0:	str	w1, [sp, #144]
   24bc4:	cmp	w19, w25
   24bc8:	stp	x2, x3, [sp, #160]
   24bcc:	b.ls	24c80 <fmaf128@@GLIBC_2.27+0xa60>  // b.plast
   24bd0:	ldrh	w0, [sp, #254]
   24bd4:	add	w19, w19, #0xe4
   24bd8:	movi	v1.2d, #0x0
   24bdc:	bfxil	w0, w19, #0, #15
   24be0:	strh	w0, [sp, #254]
   24be4:	ldr	q0, [sp, #240]
   24be8:	str	q0, [sp, #128]
   24bec:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24bf0:	ldp	x2, x3, [sp, #160]
   24bf4:	cmp	w0, #0x0
   24bf8:	ldr	w1, [sp, #144]
   24bfc:	cset	w22, eq  // eq = none
   24c00:	mov	w4, #0x0                   	// #0
   24c04:	orr	w22, w22, w4
   24c08:	cmp	w1, #0x1ca
   24c0c:	mov	w20, #0x0                   	// #0
   24c10:	b.hi	242e8 <fmaf128@@GLIBC_2.27+0xc8>  // b.pmore
   24c14:	cbz	w24, 24d24 <fmaf128@@GLIBC_2.27+0xb04>
   24c18:	add	w1, w1, #0xe4
   24c1c:	mov	w20, #0xffffffff            	// #-1
   24c20:	bfi	x3, x1, #48, #15
   24c24:	stp	x2, x3, [sp, #96]
   24c28:	b	242e8 <fmaf128@@GLIBC_2.27+0xc8>
   24c2c:	mov	w0, #0x10                  	// #16
   24c30:	bl	bce8 <fetestexcept@@GLIBC_2.17>
   24c34:	ldr	w1, [sp, #240]
   24c38:	cmp	w0, #0x0
   24c3c:	cset	w0, ne  // ne = any
   24c40:	orr	w1, w1, w0
   24c44:	str	w1, [sp, #240]
   24c48:	ldr	x2, [sp, #248]
   24c4c:	ldr	x4, [sp, #240]
   24c50:	b	24a98 <fmaf128@@GLIBC_2.27+0x878>
   24c54:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   24c58:	add	x0, x0, #0x8f0
   24c5c:	ldr	q0, [sp, #128]
   24c60:	mov	w20, #0x0                   	// #0
   24c64:	ldr	q1, [x0]
   24c68:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24c6c:	stp	x26, x27, [sp, #112]
   24c70:	movi	v1.2d, #0x0
   24c74:	str	q0, [sp, #128]
   24c78:	str	q0, [sp, #240]
   24c7c:	b	24b5c <fmaf128@@GLIBC_2.27+0x93c>
   24c80:	add	w0, w25, #0xe4
   24c84:	mov	w22, #0x0                   	// #0
   24c88:	movi	v1.2d, #0x0
   24c8c:	bfi	x27, x0, #48, #15
   24c90:	stp	x26, x27, [sp, #112]
   24c94:	ldr	q0, [sp, #112]
   24c98:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24c9c:	cmp	w0, #0x0
   24ca0:	ldr	w1, [sp, #144]
   24ca4:	cset	w4, eq  // eq = none
   24ca8:	ldp	x2, x3, [sp, #160]
   24cac:	b	24c04 <fmaf128@@GLIBC_2.27+0x9e4>
   24cb0:	and	w4, w26, #0xfffffffc
   24cb4:	ubfiz	w0, w26, #1, #2
   24cb8:	adrp	x5, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24cbc:	add	x5, x5, #0x4b0
   24cc0:	lsr	x1, x27, #63
   24cc4:	orr	w0, w0, #0x1
   24cc8:	bfxil	x26, x4, #0, #32
   24ccc:	mov	x2, #0x0                   	// #0
   24cd0:	fmov	d0, x26
   24cd4:	mov	x3, #0x0                   	// #0
   24cd8:	bfi	x3, x1, #63, #1
   24cdc:	bfxil	x2, x0, #0, #32
   24ce0:	ldr	q1, [x5]
   24ce4:	fmov	v0.d[1], x27
   24ce8:	stp	x2, x3, [sp, #112]
   24cec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24cf0:	str	q0, [sp, #96]
   24cf4:	ldp	x2, x3, [sp, #112]
   24cf8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   24cfc:	add	x0, x0, #0xb40
   24d00:	ldr	q1, [x0]
   24d04:	fmov	d0, x2
   24d08:	fmov	v0.d[1], x3
   24d0c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24d10:	mov	v1.16b, v0.16b
   24d14:	ldr	q2, [sp, #96]
   24d18:	mov	v0.16b, v2.16b
   24d1c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24d20:	b	24584 <fmaf128@@GLIBC_2.27+0x364>
   24d24:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24d28:	add	x0, x0, #0x490
   24d2c:	ldr	q0, [sp, #96]
   24d30:	mov	w20, #0xffffffff            	// #-1
   24d34:	ldr	q1, [x0]
   24d38:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   24d3c:	str	q0, [sp, #96]
   24d40:	b	242e8 <fmaf128@@GLIBC_2.27+0xc8>
   24d44:	bl	ba70 <__stack_chk_fail@plt>

0000000000024d48 <lrintf128@@GLIBC_2.27>:
   24d48:	stp	x29, x30, [sp, #-64]!
   24d4c:	mov	x29, sp
   24d50:	stp	x19, x20, [sp, #16]
   24d54:	stp	x21, x22, [sp, #32]
   24d58:	mov	w22, #0xffffc001            	// #-16383
   24d5c:	str	q0, [sp, #48]
   24d60:	ldp	x19, x21, [sp, #48]
   24d64:	ubfx	x0, x21, #48, #15
   24d68:	add	w0, w0, w22
   24d6c:	cmp	w0, #0x3e
   24d70:	b.gt	24dec <lrintf128@@GLIBC_2.27+0xa4>
   24d74:	lsr	x20, x21, #63
   24d78:	cmp	w0, #0x2f
   24d7c:	b.gt	24e3c <lrintf128@@GLIBC_2.27+0xf4>
   24d80:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24d84:	add	x0, x0, #0x4f0
   24d88:	add	x0, x0, x20, lsl #4
   24d8c:	mov	v1.16b, v0.16b
   24d90:	ldr	q2, [x0]
   24d94:	mov	v0.16b, v2.16b
   24d98:	str	q2, [sp, #48]
   24d9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24da0:	ldr	q2, [sp, #48]
   24da4:	mov	v1.16b, v2.16b
   24da8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   24dac:	str	q0, [sp, #48]
   24db0:	mov	w2, #0x30                  	// #48
   24db4:	ldr	x1, [sp, #56]
   24db8:	and	x0, x1, #0xffffffffffff
   24dbc:	ubfx	x1, x1, #48, #15
   24dc0:	orr	x0, x0, #0x1000000000000
   24dc4:	adds	w1, w1, w22
   24dc8:	sub	w2, w2, w1
   24dcc:	lsr	x0, x0, x2
   24dd0:	csel	x0, x0, xzr, pl  // pl = nfrst
   24dd4:	cmp	x20, #0x0
   24dd8:	cneg	x0, x0, ne  // ne = any
   24ddc:	ldp	x19, x20, [sp, #16]
   24de0:	ldp	x21, x22, [sp, #32]
   24de4:	ldp	x29, x30, [sp], #64
   24de8:	ret
   24dec:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24df0:	add	x0, x0, #0x4d0
   24df4:	ldr	q1, [x0]
   24df8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   24dfc:	tbz	w0, #31, 24e20 <lrintf128@@GLIBC_2.27+0xd8>
   24e00:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24e04:	add	x0, x0, #0x4e0
   24e08:	stp	x19, x21, [sp, #48]
   24e0c:	ldr	q1, [x0]
   24e10:	ldr	q0, [sp, #48]
   24e14:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   24e18:	cmp	w0, #0x0
   24e1c:	b.gt	24f00 <lrintf128@@GLIBC_2.27+0x1b8>
   24e20:	stp	x19, x21, [sp, #48]
   24e24:	ldr	q0, [sp, #48]
   24e28:	bl	57820 <f64xsubf128@@GLIBC_2.28+0x3aa0>
   24e2c:	ldp	x19, x20, [sp, #16]
   24e30:	ldp	x21, x22, [sp, #32]
   24e34:	ldp	x29, x30, [sp], #64
   24e38:	ret
   24e3c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24e40:	add	x0, x0, #0x4c0
   24e44:	ldr	q1, [x0]
   24e48:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   24e4c:	cmp	w0, #0x0
   24e50:	b.gt	24ec8 <lrintf128@@GLIBC_2.27+0x180>
   24e54:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24e58:	add	x0, x0, #0x4f0
   24e5c:	add	x0, x0, x20, lsl #4
   24e60:	stp	x19, x21, [sp, #48]
   24e64:	ldr	q1, [sp, #48]
   24e68:	ldr	q2, [x0]
   24e6c:	mov	v0.16b, v2.16b
   24e70:	str	q2, [sp, #48]
   24e74:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24e78:	ldr	q2, [sp, #48]
   24e7c:	mov	v1.16b, v2.16b
   24e80:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   24e84:	str	q0, [sp, #48]
   24e88:	ldp	x21, x19, [sp, #48]
   24e8c:	ubfx	x1, x19, #48, #15
   24e90:	and	x0, x19, #0xffffffffffff
   24e94:	mov	w4, #0xffffc001            	// #-16383
   24e98:	add	w2, w1, w4
   24e9c:	orr	x0, x0, #0x1000000000000
   24ea0:	cmp	w2, #0x30
   24ea4:	b.eq	24dd4 <lrintf128@@GLIBC_2.27+0x8c>  // b.none
   24ea8:	mov	w3, #0xffffbfd1            	// #-16431
   24eac:	add	w1, w1, w3
   24eb0:	mov	w3, #0x70                  	// #112
   24eb4:	sub	w2, w3, w2
   24eb8:	lsl	x0, x0, x1
   24ebc:	lsr	x21, x21, x2
   24ec0:	orr	x0, x0, x21
   24ec4:	b	24dd4 <lrintf128@@GLIBC_2.27+0x8c>
   24ec8:	stp	x19, x21, [sp, #48]
   24ecc:	ldr	q0, [sp, #48]
   24ed0:	bl	23f08 <nearbyintf128@@GLIBC_2.27>
   24ed4:	str	q0, [sp, #48]
   24ed8:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24edc:	add	x0, x0, #0x4c0
   24ee0:	ldr	q1, [x0]
   24ee4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24ee8:	cmp	w0, #0x0
   24eec:	mov	w0, #0x10                  	// #16
   24ef0:	csinc	w0, w0, wzr, eq  // eq = none
   24ef4:	ldp	x21, x19, [sp, #48]
   24ef8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   24efc:	b	24e8c <lrintf128@@GLIBC_2.27+0x144>
   24f00:	stp	x19, x21, [sp, #48]
   24f04:	ldr	q0, [sp, #48]
   24f08:	bl	23f08 <nearbyintf128@@GLIBC_2.27>
   24f0c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24f10:	add	x0, x0, #0x4d0
   24f14:	ldr	q1, [x0]
   24f18:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   24f1c:	cmp	w0, #0x0
   24f20:	mov	w1, #0x10                  	// #16
   24f24:	csinc	w0, w1, wzr, eq  // eq = none
   24f28:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   24f2c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   24f30:	b	24e2c <lrintf128@@GLIBC_2.27+0xe4>
   24f34:	nop

0000000000024f38 <llrintf128@@GLIBC_2.27>:
   24f38:	stp	x29, x30, [sp, #-64]!
   24f3c:	mov	w3, #0xffffc001            	// #-16383
   24f40:	mov	x29, sp
   24f44:	str	x21, [sp, #32]
   24f48:	str	q0, [sp, #48]
   24f4c:	ldr	x21, [sp, #56]
   24f50:	stp	x19, x20, [sp, #16]
   24f54:	ldr	x19, [sp, #48]
   24f58:	ubfx	x0, x21, #48, #15
   24f5c:	add	w0, w0, w3
   24f60:	cmp	w0, #0x3e
   24f64:	b.gt	25004 <llrintf128@@GLIBC_2.27+0xcc>
   24f68:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24f6c:	add	x0, x0, #0x4c0
   24f70:	lsr	x20, x21, #63
   24f74:	ldr	q1, [x0]
   24f78:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   24f7c:	cmp	w0, #0x0
   24f80:	b.gt	25054 <llrintf128@@GLIBC_2.27+0x11c>
   24f84:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   24f88:	add	x0, x0, #0x510
   24f8c:	add	x0, x0, x20, lsl #4
   24f90:	stp	x19, x21, [sp, #48]
   24f94:	ldr	q1, [sp, #48]
   24f98:	ldr	q2, [x0]
   24f9c:	mov	v0.16b, v2.16b
   24fa0:	str	q2, [sp, #48]
   24fa4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   24fa8:	ldr	q2, [sp, #48]
   24fac:	mov	v1.16b, v2.16b
   24fb0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   24fb4:	str	q0, [sp, #48]
   24fb8:	ldp	x21, x19, [sp, #48]
   24fbc:	ubfx	x3, x19, #48, #15
   24fc0:	mov	w2, #0xffffc001            	// #-16383
   24fc4:	mov	x0, #0x0                   	// #0
   24fc8:	add	w2, w3, w2
   24fcc:	tbnz	w2, #31, 24fec <llrintf128@@GLIBC_2.27+0xb4>
   24fd0:	and	x1, x19, #0xffffffffffff
   24fd4:	cmp	w2, #0x30
   24fd8:	orr	x1, x1, #0x1000000000000
   24fdc:	b.gt	2508c <llrintf128@@GLIBC_2.27+0x154>
   24fe0:	mov	w0, #0x30                  	// #48
   24fe4:	sub	w0, w0, w2
   24fe8:	lsr	x0, x1, x0
   24fec:	cmp	x20, #0x0
   24ff0:	cneg	x0, x0, ne  // ne = any
   24ff4:	ldp	x19, x20, [sp, #16]
   24ff8:	ldr	x21, [sp, #32]
   24ffc:	ldp	x29, x30, [sp], #64
   25000:	ret
   25004:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25008:	add	x0, x0, #0x4d0
   2500c:	ldr	q1, [x0]
   25010:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   25014:	tbz	w0, #31, 25038 <llrintf128@@GLIBC_2.27+0x100>
   25018:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   2501c:	add	x0, x0, #0x4e0
   25020:	stp	x19, x21, [sp, #48]
   25024:	ldr	q1, [x0]
   25028:	ldr	q0, [sp, #48]
   2502c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   25030:	cmp	w0, #0x0
   25034:	b.gt	250b4 <llrintf128@@GLIBC_2.27+0x17c>
   25038:	stp	x19, x21, [sp, #48]
   2503c:	ldr	q0, [sp, #48]
   25040:	bl	57820 <f64xsubf128@@GLIBC_2.28+0x3aa0>
   25044:	ldp	x19, x20, [sp, #16]
   25048:	ldr	x21, [sp, #32]
   2504c:	ldp	x29, x30, [sp], #64
   25050:	ret
   25054:	stp	x19, x21, [sp, #48]
   25058:	ldr	q0, [sp, #48]
   2505c:	bl	23f08 <nearbyintf128@@GLIBC_2.27>
   25060:	str	q0, [sp, #48]
   25064:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25068:	add	x0, x0, #0x4c0
   2506c:	ldr	q1, [x0]
   25070:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   25074:	cmp	w0, #0x0
   25078:	mov	w0, #0x10                  	// #16
   2507c:	csinc	w0, w0, wzr, eq  // eq = none
   25080:	ldp	x21, x19, [sp, #48]
   25084:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   25088:	b	24fbc <llrintf128@@GLIBC_2.27+0x84>
   2508c:	mov	w0, #0xffffbfd1            	// #-16431
   25090:	add	w3, w3, w0
   25094:	mov	w0, #0x70                  	// #112
   25098:	sub	w0, w0, w2
   2509c:	cmp	x20, #0x0
   250a0:	lsl	x1, x1, x3
   250a4:	lsr	x0, x21, x0
   250a8:	orr	x0, x1, x0
   250ac:	cneg	x0, x0, ne  // ne = any
   250b0:	b	24ff4 <llrintf128@@GLIBC_2.27+0xbc>
   250b4:	stp	x19, x21, [sp, #48]
   250b8:	ldr	q0, [sp, #48]
   250bc:	bl	23f08 <nearbyintf128@@GLIBC_2.27>
   250c0:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   250c4:	add	x0, x0, #0x4d0
   250c8:	ldr	q1, [x0]
   250cc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   250d0:	cmp	w0, #0x0
   250d4:	mov	w1, #0x10                  	// #16
   250d8:	csinc	w0, w1, wzr, eq  // eq = none
   250dc:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   250e0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   250e4:	b	25044 <llrintf128@@GLIBC_2.27+0x10c>

00000000000250e8 <lroundf128@@GLIBC_2.27>:
   250e8:	stp	x29, x30, [sp, #-64]!
   250ec:	mov	x0, #0xffffffffffffc001    	// #-16383
   250f0:	mov	x29, sp
   250f4:	stp	x19, x20, [sp, #16]
   250f8:	stp	x21, x22, [sp, #32]
   250fc:	mov	w22, #0x1                   	// #1
   25100:	str	q0, [sp, #48]
   25104:	ldp	x21, x19, [sp, #48]
   25108:	ubfx	x2, x19, #48, #15
   2510c:	cmp	x19, #0x0
   25110:	add	x2, x2, x0
   25114:	cneg	w20, w22, lt  // lt = tstop
   25118:	cmp	x2, #0x3e
   2511c:	b.gt	25164 <lroundf128@@GLIBC_2.27+0x7c>
   25120:	and	x1, x19, #0xffffffffffff
   25124:	cmp	x2, #0x2f
   25128:	orr	x1, x1, #0x1000000000000
   2512c:	b.gt	25198 <lroundf128@@GLIBC_2.27+0xb0>
   25130:	tbnz	x2, #63, 251e0 <lroundf128@@GLIBC_2.27+0xf8>
   25134:	mov	x19, #0x800000000000        	// #140737488355328
   25138:	mov	w0, #0x30                  	// #48
   2513c:	asr	x19, x19, x2
   25140:	sub	w2, w0, w2
   25144:	add	x1, x19, x1
   25148:	lsr	x19, x1, x2
   2514c:	sxtw	x0, w20
   25150:	ldp	x21, x22, [sp, #32]
   25154:	mul	x0, x0, x19
   25158:	ldp	x19, x20, [sp, #16]
   2515c:	ldp	x29, x30, [sp], #64
   25160:	ret
   25164:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25168:	add	x0, x0, #0x530
   2516c:	ldr	q1, [x0]
   25170:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   25174:	cmp	w0, #0x0
   25178:	b.le	251f0 <lroundf128@@GLIBC_2.27+0x108>
   2517c:	stp	x21, x19, [sp, #48]
   25180:	ldr	q0, [sp, #48]
   25184:	bl	57820 <f64xsubf128@@GLIBC_2.28+0x3aa0>
   25188:	ldp	x19, x20, [sp, #16]
   2518c:	ldp	x21, x22, [sp, #32]
   25190:	ldp	x29, x30, [sp], #64
   25194:	ret
   25198:	sub	w4, w2, #0x30
   2519c:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   251a0:	lsr	x0, x3, x4
   251a4:	adds	x21, x0, x21
   251a8:	cinc	x19, x1, cs  // cs = hs, nlast
   251ac:	cmp	x2, #0x30
   251b0:	b.eq	2514c <lroundf128@@GLIBC_2.27+0x64>  // b.none
   251b4:	mov	w0, #0x70                  	// #112
   251b8:	sub	w2, w0, w2
   251bc:	cmp	w20, #0x1
   251c0:	lsl	x19, x19, x4
   251c4:	lsr	x21, x21, x2
   251c8:	orr	x19, x21, x19
   251cc:	ccmp	x19, x3, #0x0, eq  // eq = none
   251d0:	b.ne	2514c <lroundf128@@GLIBC_2.27+0x64>  // b.any
   251d4:	mov	w0, w22
   251d8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   251dc:	b	2514c <lroundf128@@GLIBC_2.27+0x64>
   251e0:	cmn	x2, #0x1
   251e4:	csel	w20, w20, wzr, eq  // eq = none
   251e8:	sxtw	x0, w20
   251ec:	b	25188 <lroundf128@@GLIBC_2.27+0xa0>
   251f0:	mov	w0, w22
   251f4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   251f8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   251fc:	b	25188 <lroundf128@@GLIBC_2.27+0xa0>

0000000000025200 <llroundf128@@GLIBC_2.27>:
   25200:	stp	x29, x30, [sp, #-80]!
   25204:	mov	x2, #0xffffffffffffc001    	// #-16383
   25208:	mov	x29, sp
   2520c:	str	x23, [sp, #48]
   25210:	str	q0, [sp, #64]
   25214:	ldr	x23, [sp, #72]
   25218:	stp	x19, x20, [sp, #16]
   2521c:	stp	x21, x22, [sp, #32]
   25220:	cmp	x23, #0x0
   25224:	ubfx	x1, x23, #48, #15
   25228:	and	x0, x23, #0xffffffffffff
   2522c:	add	x1, x1, x2
   25230:	mov	w22, #0x1                   	// #1
   25234:	orr	x21, x0, #0x1000000000000
   25238:	cneg	w19, w22, lt  // lt = tstop
   2523c:	cmp	x1, #0x2f
   25240:	ldr	x20, [sp, #64]
   25244:	b.gt	25280 <llroundf128@@GLIBC_2.27+0x80>
   25248:	tbnz	x1, #63, 25308 <llroundf128@@GLIBC_2.27+0x108>
   2524c:	mov	x0, #0x800000000000        	// #140737488355328
   25250:	mov	w2, #0x30                  	// #48
   25254:	asr	x0, x0, x1
   25258:	sub	w1, w2, w1
   2525c:	add	x0, x0, x21
   25260:	lsr	x21, x0, x1
   25264:	sxtw	x19, w19
   25268:	mul	x0, x19, x21
   2526c:	ldp	x19, x20, [sp, #16]
   25270:	ldp	x21, x22, [sp, #32]
   25274:	ldr	x23, [sp, #48]
   25278:	ldp	x29, x30, [sp], #80
   2527c:	ret
   25280:	cmp	x1, #0x3e
   25284:	b.le	252c0 <llroundf128@@GLIBC_2.27+0xc0>
   25288:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   2528c:	add	x0, x0, #0x530
   25290:	ldr	q1, [x0]
   25294:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   25298:	cmp	w0, #0x0
   2529c:	b.le	25328 <llroundf128@@GLIBC_2.27+0x128>
   252a0:	stp	x20, x23, [sp, #64]
   252a4:	ldr	q0, [sp, #64]
   252a8:	bl	57820 <f64xsubf128@@GLIBC_2.28+0x3aa0>
   252ac:	ldp	x19, x20, [sp, #16]
   252b0:	ldp	x21, x22, [sp, #32]
   252b4:	ldr	x23, [sp, #48]
   252b8:	ldp	x29, x30, [sp], #80
   252bc:	ret
   252c0:	sub	w0, w1, #0x30
   252c4:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   252c8:	lsr	x2, x3, x0
   252cc:	adds	x20, x2, x20
   252d0:	cinc	x21, x21, cs  // cs = hs, nlast
   252d4:	cmp	x1, #0x30
   252d8:	b.eq	25264 <llroundf128@@GLIBC_2.27+0x64>  // b.none
   252dc:	mov	w2, #0x70                  	// #112
   252e0:	sub	w1, w2, w1
   252e4:	cmp	w19, #0x1
   252e8:	lsl	x0, x21, x0
   252ec:	lsr	x20, x20, x1
   252f0:	orr	x21, x20, x0
   252f4:	ccmp	x21, x3, #0x0, eq  // eq = none
   252f8:	b.ne	25264 <llroundf128@@GLIBC_2.27+0x64>  // b.any
   252fc:	mov	w0, w22
   25300:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   25304:	b	25264 <llroundf128@@GLIBC_2.27+0x64>
   25308:	cmn	x1, #0x1
   2530c:	csel	w19, w19, wzr, eq  // eq = none
   25310:	ldp	x21, x22, [sp, #32]
   25314:	sxtw	x0, w19
   25318:	ldp	x19, x20, [sp, #16]
   2531c:	ldr	x23, [sp, #48]
   25320:	ldp	x29, x30, [sp], #80
   25324:	ret
   25328:	mov	w0, w22
   2532c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   25330:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   25334:	b	2526c <llroundf128@@GLIBC_2.27+0x6c>

0000000000025338 <__exp10l_finite@GLIBC_2.17>:
   25338:	stp	x29, x30, [sp, #-64]!
   2533c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25340:	add	x0, x0, #0x300
   25344:	mov	x29, sp
   25348:	stp	x19, x20, [sp, #16]
   2534c:	ldr	q1, [x0]
   25350:	str	q0, [sp, #32]
   25354:	ldp	x19, x0, [sp, #32]
   25358:	and	x20, x0, #0x7fffffffffffffff
   2535c:	stp	x19, x20, [sp, #48]
   25360:	ldr	q0, [sp, #48]
   25364:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   25368:	cbnz	w0, 25414 <__exp10l_finite@GLIBC_2.17+0xdc>
   2536c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25370:	add	x0, x0, #0x300
   25374:	stp	x19, x20, [sp, #48]
   25378:	ldr	q1, [x0]
   2537c:	ldr	q0, [sp, #48]
   25380:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   25384:	cmp	w0, #0x0
   25388:	b.gt	25414 <__exp10l_finite@GLIBC_2.17+0xdc>
   2538c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25390:	add	x0, x0, #0x540
   25394:	ldr	q0, [sp, #32]
   25398:	ldr	q1, [x0]
   2539c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   253a0:	tbnz	w0, #31, 253f4 <__exp10l_finite@GLIBC_2.17+0xbc>
   253a4:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   253a8:	add	x0, x0, #0x550
   253ac:	ldr	q0, [sp, #32]
   253b0:	ldr	q1, [x0]
   253b4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   253b8:	cmp	w0, #0x0
   253bc:	b.gt	25424 <__exp10l_finite@GLIBC_2.17+0xec>
   253c0:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   253c4:	add	x0, x0, #0x560
   253c8:	stp	x19, x20, [sp, #48]
   253cc:	ldr	q1, [x0]
   253d0:	ldr	q0, [sp, #48]
   253d4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   253d8:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   253dc:	add	x1, x1, #0x2f0
   253e0:	ldr	q0, [x1]
   253e4:	tbz	w0, #31, 25444 <__exp10l_finite@GLIBC_2.17+0x10c>
   253e8:	ldp	x19, x20, [sp, #16]
   253ec:	ldp	x29, x30, [sp], #64
   253f0:	ret
   253f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   253f8:	add	x0, x0, #0xeb0
   253fc:	ldr	q1, [x0]
   25400:	mov	v0.16b, v1.16b
   25404:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25408:	ldp	x19, x20, [sp, #16]
   2540c:	ldp	x29, x30, [sp], #64
   25410:	ret
   25414:	ldp	x19, x20, [sp, #16]
   25418:	ldr	q0, [sp, #32]
   2541c:	ldp	x29, x30, [sp], #64
   25420:	b	141f0 <__expl_finite@GLIBC_2.17>
   25424:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25428:	add	x0, x0, #0x300
   2542c:	ldr	q1, [x0]
   25430:	mov	v0.16b, v1.16b
   25434:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25438:	ldp	x19, x20, [sp, #16]
   2543c:	ldp	x29, x30, [sp], #64
   25440:	ret
   25444:	ldp	x0, x1, [sp, #32]
   25448:	ldr	q0, [sp, #32]
   2544c:	and	x0, x19, #0xfe00000000000000
   25450:	fmov	d2, x0
   25454:	fmov	v2.d[1], x1
   25458:	mov	v1.16b, v2.16b
   2545c:	str	q2, [sp, #32]
   25460:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25464:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25468:	add	x0, x0, #0x570
   2546c:	ldr	q1, [x0]
   25470:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25474:	str	q0, [sp, #48]
   25478:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   2547c:	add	x0, x0, #0x580
   25480:	ldr	q2, [sp, #32]
   25484:	ldr	q1, [x0]
   25488:	mov	v0.16b, v2.16b
   2548c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25490:	mov	v1.16b, v0.16b
   25494:	ldr	q4, [sp, #48]
   25498:	mov	v0.16b, v4.16b
   2549c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   254a0:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   254a4:	add	x0, x0, #0x590
   254a8:	mov	v4.16b, v0.16b
   254ac:	ldr	q2, [sp, #32]
   254b0:	ldr	q1, [x0]
   254b4:	mov	v0.16b, v2.16b
   254b8:	str	q4, [sp, #48]
   254bc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   254c0:	bl	141f0 <__expl_finite@GLIBC_2.17>
   254c4:	str	q0, [sp, #32]
   254c8:	ldr	q4, [sp, #48]
   254cc:	mov	v0.16b, v4.16b
   254d0:	bl	141f0 <__expl_finite@GLIBC_2.17>
   254d4:	ldr	q2, [sp, #32]
   254d8:	mov	v1.16b, v0.16b
   254dc:	mov	v0.16b, v2.16b
   254e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   254e4:	ldp	x19, x20, [sp, #16]
   254e8:	ldp	x29, x30, [sp], #64
   254ec:	ret

00000000000254f0 <__issignalingl@@GLIBC_2.18>:
   254f0:	sub	sp, sp, #0x10
   254f4:	mov	x3, #0x7fff800000000000    	// #9223231299366420480
   254f8:	str	q0, [sp]
   254fc:	ldp	x0, x1, [sp]
   25500:	add	sp, sp, #0x10
   25504:	mov	x2, x0
   25508:	neg	x0, x0
   2550c:	orr	x0, x0, x2
   25510:	eor	x1, x1, #0x800000000000
   25514:	orr	x0, x1, x0, lsr #63
   25518:	and	x0, x0, #0x7fffffffffffffff
   2551c:	cmp	x0, x3
   25520:	cset	w0, hi  // hi = pmore
   25524:	ret
   25528:	sub	sp, sp, #0x10
   2552c:	str	q0, [sp]
   25530:	ldp	x2, x1, [sp]
   25534:	add	sp, sp, #0x10
   25538:	and	x0, x1, #0x7fffffffffffffff
   2553c:	asr	x1, x1, #62
   25540:	eor	x0, x0, #0x7fff000000000000
   25544:	orr	x2, x0, x2
   25548:	neg	x0, x2
   2554c:	orr	x0, x0, x2
   25550:	asr	x0, x0, #63
   25554:	bic	w0, w1, w0
   25558:	ret
   2555c:	nop
   25560:	sub	sp, sp, #0x10
   25564:	mov	x3, #0x7fff000000000000    	// #9223090561878065152
   25568:	str	q0, [sp]
   2556c:	ldp	x0, x1, [sp]
   25570:	add	sp, sp, #0x10
   25574:	mov	x2, x0
   25578:	neg	x0, x0
   2557c:	orr	x0, x0, x2
   25580:	and	x1, x1, #0x7fffffffffffffff
   25584:	orr	x0, x1, x0, lsr #63
   25588:	sub	x0, x3, x0
   2558c:	lsr	x0, x0, #63
   25590:	ret
   25594:	nop

0000000000025598 <__finitel@@GLIBC_2.17>:
   25598:	sub	sp, sp, #0x10
   2559c:	mov	x1, #0x8001000000000000    	// #-9223090561878065152
   255a0:	str	q0, [sp]
   255a4:	ldr	x0, [sp, #8]
   255a8:	add	sp, sp, #0x10
   255ac:	and	x0, x0, #0x7fff000000000000
   255b0:	add	x0, x0, x1
   255b4:	lsr	x0, x0, #63
   255b8:	ret
   255bc:	nop

00000000000255c0 <copysignf128@@GLIBC_2.27>:
   255c0:	sub	sp, sp, #0x20
   255c4:	str	q0, [sp]
   255c8:	str	q1, [sp, #16]
   255cc:	ldr	x0, [sp, #8]
   255d0:	ldr	x1, [sp, #24]
   255d4:	bfxil	x1, x0, #0, #63
   255d8:	str	x1, [sp, #8]
   255dc:	ldr	q0, [sp]
   255e0:	add	sp, sp, #0x20
   255e4:	ret

00000000000255e8 <modff128@@GLIBC_2.27>:
   255e8:	stp	x29, x30, [sp, #-64]!
   255ec:	mov	x29, sp
   255f0:	str	q0, [sp, #48]
   255f4:	ldp	x1, x2, [sp, #48]
   255f8:	stp	x19, x20, [sp, #16]
   255fc:	mov	x20, x0
   25600:	stp	x21, x22, [sp, #32]
   25604:	mov	x0, #0xffffffffffffc001    	// #-16383
   25608:	ubfx	x19, x2, #48, #15
   2560c:	mov	x21, x2
   25610:	add	x19, x19, x0
   25614:	mov	x22, x1
   25618:	cmp	x19, #0x2f
   2561c:	b.gt	2566c <modff128@@GLIBC_2.27+0x84>
   25620:	tbnz	x19, #63, 25730 <modff128@@GLIBC_2.27+0x148>
   25624:	mov	x0, #0xffffffffffff        	// #281474976710655
   25628:	asr	x19, x0, x19
   2562c:	and	x0, x2, x19
   25630:	orr	x22, x0, x1
   25634:	cbnz	x22, 256f4 <modff128@@GLIBC_2.27+0x10c>
   25638:	fmov	d0, x1
   2563c:	and	x7, x21, #0x8000000000000000
   25640:	mov	x6, #0x0                   	// #0
   25644:	mov	x1, x6
   25648:	fmov	v0.d[1], x2
   2564c:	mov	x2, x7
   25650:	str	q0, [x20]
   25654:	stp	x1, x2, [sp, #48]
   25658:	ldp	x19, x20, [sp, #16]
   2565c:	ldp	x21, x22, [sp, #32]
   25660:	ldr	q0, [sp, #48]
   25664:	ldp	x29, x30, [sp], #64
   25668:	ret
   2566c:	cmp	x19, #0x6f
   25670:	b.le	256d4 <modff128@@GLIBC_2.27+0xec>
   25674:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25678:	add	x0, x0, #0x2f0
   2567c:	ldr	q1, [x0]
   25680:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25684:	str	q0, [sp, #48]
   25688:	ldp	x1, x2, [sp, #48]
   2568c:	cmp	x19, #0x4, lsl #12
   25690:	fmov	d0, x1
   25694:	fmov	v0.d[1], x2
   25698:	str	q0, [x20]
   2569c:	b.ne	256ac <modff128@@GLIBC_2.27+0xc4>  // b.any
   256a0:	and	x0, x21, #0xffffffffffff
   256a4:	orr	x22, x0, x22
   256a8:	cbnz	x22, 25654 <modff128@@GLIBC_2.27+0x6c>
   256ac:	and	x3, x21, #0x8000000000000000
   256b0:	mov	x2, #0x0                   	// #0
   256b4:	mov	x1, x2
   256b8:	mov	x2, x3
   256bc:	stp	x1, x2, [sp, #48]
   256c0:	ldp	x19, x20, [sp, #16]
   256c4:	ldp	x21, x22, [sp, #32]
   256c8:	ldr	q0, [sp, #48]
   256cc:	ldp	x29, x30, [sp], #64
   256d0:	ret
   256d4:	sub	w19, w19, #0x30
   256d8:	mov	x0, #0xffffffffffffffff    	// #-1
   256dc:	lsr	x19, x0, x19
   256e0:	tst	x1, x19
   256e4:	b.eq	25638 <modff128@@GLIBC_2.27+0x50>  // b.none
   256e8:	mov	x1, x2
   256ec:	bic	x0, x22, x19
   256f0:	b	256fc <modff128@@GLIBC_2.27+0x114>
   256f4:	bic	x1, x2, x19
   256f8:	mov	x0, #0x0                   	// #0
   256fc:	fmov	d2, x0
   25700:	fmov	v2.d[1], x1
   25704:	mov	v1.16b, v2.16b
   25708:	str	q2, [x20]
   2570c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25710:	str	q0, [sp, #48]
   25714:	ldp	x1, x2, [sp, #48]
   25718:	stp	x1, x2, [sp, #48]
   2571c:	ldp	x19, x20, [sp, #16]
   25720:	ldp	x21, x22, [sp, #32]
   25724:	ldr	q0, [sp, #48]
   25728:	ldp	x29, x30, [sp], #64
   2572c:	ret
   25730:	mov	x4, #0x0                   	// #0
   25734:	fmov	d0, x4
   25738:	and	x5, x2, #0x8000000000000000
   2573c:	stp	x1, x2, [sp, #48]
   25740:	fmov	v0.d[1], x5
   25744:	ldp	x21, x22, [sp, #32]
   25748:	str	q0, [x20]
   2574c:	ldp	x19, x20, [sp, #16]
   25750:	ldr	q0, [sp, #48]
   25754:	ldp	x29, x30, [sp], #64
   25758:	ret
   2575c:	nop
   25760:	stp	x29, x30, [sp, #-32]!
   25764:	fmov	x3, v0.d[1]
   25768:	fmov	x2, d0
   2576c:	mov	x29, sp
   25770:	str	x19, [sp, #16]
   25774:	mov	w19, w0
   25778:	mov	x1, x3
   2577c:	tst	x3, #0x7fff000000000000
   25780:	ubfx	x0, x3, #48, #15
   25784:	b.ne	25830 <modff128@@GLIBC_2.27+0x248>  // b.any
   25788:	fmov	d2, x2
   2578c:	and	x1, x3, #0x7fffffffffffffff
   25790:	orr	x1, x1, x2
   25794:	fmov	v2.d[1], x3
   25798:	cbz	x1, 25820 <modff128@@GLIBC_2.27+0x238>
   2579c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   257a0:	add	x0, x0, #0x1c0
   257a4:	ldr	q1, [x0]
   257a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   257ac:	fmov	x3, v0.d[1]
   257b0:	fmov	x2, d0
   257b4:	ubfx	x0, x3, #48, #15
   257b8:	mov	x1, x3
   257bc:	sub	x0, x0, #0x72
   257c0:	mov	w4, #0xffff3cb0            	// #-50000
   257c4:	cmp	w19, w4
   257c8:	b.lt	2585c <modff128@@GLIBC_2.27+0x274>  // b.tstop
   257cc:	mov	w4, #0xc350                	// #50000
   257d0:	cmp	w19, w4
   257d4:	b.gt	25890 <modff128@@GLIBC_2.27+0x2a8>
   257d8:	add	x19, x0, w19, sxtw
   257dc:	mov	x0, #0x7ffe                	// #32766
   257e0:	cmp	x19, x0
   257e4:	b.gt	25890 <modff128@@GLIBC_2.27+0x2a8>
   257e8:	cmp	x19, #0x0
   257ec:	b.gt	2590c <modff128@@GLIBC_2.27+0x324>
   257f0:	cmn	x19, #0x71
   257f4:	b.lt	2585c <modff128@@GLIBC_2.27+0x274>  // b.tstop
   257f8:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   257fc:	add	x0, x0, #0xad0
   25800:	add	x19, x19, #0x72
   25804:	and	x1, x1, #0x8000ffffffffffff
   25808:	fmov	d0, x2
   2580c:	orr	x3, x1, x19, lsl #48
   25810:	ldr	q1, [x0]
   25814:	fmov	v0.d[1], x3
   25818:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2581c:	mov	v2.16b, v0.16b
   25820:	mov	v0.16b, v2.16b
   25824:	ldr	x19, [sp, #16]
   25828:	ldp	x29, x30, [sp], #32
   2582c:	ret
   25830:	mov	x4, #0x7fff                	// #32767
   25834:	cmp	x0, x4
   25838:	b.ne	257c0 <modff128@@GLIBC_2.27+0x1d8>  // b.any
   2583c:	fmov	d1, x2
   25840:	fmov	v1.d[1], x3
   25844:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25848:	mov	v2.16b, v0.16b
   2584c:	mov	v0.16b, v2.16b
   25850:	ldr	x19, [sp, #16]
   25854:	ldp	x29, x30, [sp], #32
   25858:	ret
   2585c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25860:	add	x0, x0, #0xf00
   25864:	ldr	q0, [x0]
   25868:	tbnz	x3, #63, 258c4 <modff128@@GLIBC_2.27+0x2dc>
   2586c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25870:	add	x0, x0, #0xf00
   25874:	ldr	q1, [x0]
   25878:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2587c:	mov	v2.16b, v0.16b
   25880:	mov	v0.16b, v2.16b
   25884:	ldr	x19, [sp, #16]
   25888:	ldp	x29, x30, [sp], #32
   2588c:	ret
   25890:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25894:	add	x0, x0, #0xf70
   25898:	ldr	q0, [x0]
   2589c:	tbnz	x3, #63, 258e8 <modff128@@GLIBC_2.27+0x300>
   258a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   258a4:	add	x0, x0, #0xf70
   258a8:	ldr	q1, [x0]
   258ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   258b0:	mov	v2.16b, v0.16b
   258b4:	mov	v0.16b, v2.16b
   258b8:	ldr	x19, [sp, #16]
   258bc:	ldp	x29, x30, [sp], #32
   258c0:	ret
   258c4:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   258c8:	add	x0, x0, #0x1d0
   258cc:	ldr	q0, [x0]
   258d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   258d4:	add	x0, x0, #0xf00
   258d8:	ldr	q1, [x0]
   258dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   258e0:	mov	v2.16b, v0.16b
   258e4:	b	25880 <modff128@@GLIBC_2.27+0x298>
   258e8:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   258ec:	add	x0, x0, #0x1e0
   258f0:	ldr	q0, [x0]
   258f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   258f8:	add	x0, x0, #0xf70
   258fc:	ldr	q1, [x0]
   25900:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25904:	mov	v2.16b, v0.16b
   25908:	b	258b4 <modff128@@GLIBC_2.27+0x2cc>
   2590c:	fmov	d2, x2
   25910:	and	x1, x1, #0x8000ffffffffffff
   25914:	orr	x3, x1, x19, lsl #48
   25918:	fmov	v2.d[1], x3
   2591c:	b	25820 <modff128@@GLIBC_2.27+0x238>

0000000000025920 <frexpf128@@GLIBC_2.27>:
   25920:	stp	x29, x30, [sp, #-48]!
   25924:	mov	x2, #0x7ffeffffffffffff    	// #9223090561878065151
   25928:	mov	x29, sp
   2592c:	str	x19, [sp, #16]
   25930:	mov	x19, x0
   25934:	str	q0, [sp, #32]
   25938:	ldr	x1, [sp, #40]
   2593c:	str	wzr, [x19]
   25940:	and	x0, x1, #0x7fffffffffffffff
   25944:	cmp	x0, x2
   25948:	b.hi	259b0 <frexpf128@@GLIBC_2.27+0x90>  // b.pmore
   2594c:	ldr	x2, [sp, #32]
   25950:	orr	x2, x0, x2
   25954:	cbz	x2, 259b0 <frexpf128@@GLIBC_2.27+0x90>
   25958:	tst	x1, #0x7fff000000000000
   2595c:	mov	w4, #0xffffc002            	// #-16382
   25960:	b.ne	25984 <frexpf128@@GLIBC_2.27+0x64>  // b.any
   25964:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25968:	add	x0, x0, #0x1c0
   2596c:	ldr	q1, [x0]
   25970:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25974:	str	q0, [sp, #32]
   25978:	ldr	x1, [sp, #40]
   2597c:	mov	w4, #0xffffbf90            	// #-16496
   25980:	and	x0, x1, #0x7fffffffffffffff
   25984:	ldp	x2, x3, [sp, #32]
   25988:	lsr	x0, x0, #48
   2598c:	add	w0, w4, w0
   25990:	str	w0, [x19]
   25994:	and	x1, x1, #0x8000ffffffffffff
   25998:	orr	x3, x1, #0x3ffe000000000000
   2599c:	ldr	x19, [sp, #16]
   259a0:	fmov	d0, x2
   259a4:	ldp	x29, x30, [sp], #48
   259a8:	fmov	v0.d[1], x3
   259ac:	ret
   259b0:	ldr	q1, [sp, #32]
   259b4:	mov	v0.16b, v1.16b
   259b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   259bc:	ldr	x19, [sp, #16]
   259c0:	ldp	x29, x30, [sp], #48
   259c4:	ret

00000000000259c8 <__signbitl@@GLIBC_2.17>:
   259c8:	sub	sp, sp, #0x10
   259cc:	str	q0, [sp]
   259d0:	ldr	x0, [sp, #8]
   259d4:	add	sp, sp, #0x10
   259d8:	lsr	x0, x0, #63
   259dc:	ret

00000000000259e0 <ldexpf128@@GLIBC_2.27>:
   259e0:	stp	x29, x30, [sp, #-80]!
   259e4:	mov	x29, sp
   259e8:	stp	x19, x20, [sp, #16]
   259ec:	str	q0, [sp, #48]
   259f0:	ldp	x19, x20, [sp, #48]
   259f4:	stp	x21, x22, [sp, #32]
   259f8:	mov	w21, w0
   259fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25a00:	add	x0, x0, #0x300
   25a04:	and	x22, x20, #0x7fffffffffffffff
   25a08:	str	x22, [sp, #56]
   25a0c:	ldr	q1, [x0]
   25a10:	ldr	q0, [sp, #48]
   25a14:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   25a18:	cbnz	w0, 25a50 <ldexpf128@@GLIBC_2.27+0x70>
   25a1c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25a20:	add	x0, x0, #0x300
   25a24:	stp	x19, x22, [sp, #48]
   25a28:	ldr	q1, [x0]
   25a2c:	ldr	q0, [sp, #48]
   25a30:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   25a34:	cmp	w0, #0x0
   25a38:	b.gt	25a50 <ldexpf128@@GLIBC_2.27+0x70>
   25a3c:	movi	v1.2d, #0x0
   25a40:	stp	x19, x20, [sp, #48]
   25a44:	ldr	q0, [sp, #48]
   25a48:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   25a4c:	cbnz	w0, 25a84 <ldexpf128@@GLIBC_2.27+0xa4>
   25a50:	stp	x19, x20, [sp, #48]
   25a54:	stp	x19, x20, [sp, #64]
   25a58:	ldr	q1, [sp, #48]
   25a5c:	ldr	q0, [sp, #64]
   25a60:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25a64:	str	q0, [sp, #48]
   25a68:	ldp	x19, x20, [sp, #48]
   25a6c:	stp	x19, x20, [sp, #48]
   25a70:	ldp	x19, x20, [sp, #16]
   25a74:	ldp	x21, x22, [sp, #32]
   25a78:	ldr	q0, [sp, #48]
   25a7c:	ldp	x29, x30, [sp], #80
   25a80:	ret
   25a84:	stp	x19, x20, [sp, #48]
   25a88:	mov	w0, w21
   25a8c:	ldr	q0, [sp, #48]
   25a90:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   25a94:	str	q0, [sp, #48]
   25a98:	ldp	x19, x20, [sp, #48]
   25a9c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25aa0:	add	x0, x0, #0x300
   25aa4:	ldr	q1, [x0]
   25aa8:	and	x21, x20, #0x7fffffffffffffff
   25aac:	str	x21, [sp, #56]
   25ab0:	ldr	q0, [sp, #48]
   25ab4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   25ab8:	cbnz	w0, 25af0 <ldexpf128@@GLIBC_2.27+0x110>
   25abc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   25ac0:	add	x0, x0, #0x300
   25ac4:	stp	x19, x21, [sp, #48]
   25ac8:	ldr	q1, [x0]
   25acc:	ldr	q0, [sp, #48]
   25ad0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   25ad4:	cmp	w0, #0x0
   25ad8:	b.gt	25af0 <ldexpf128@@GLIBC_2.27+0x110>
   25adc:	movi	v1.2d, #0x0
   25ae0:	stp	x19, x20, [sp, #48]
   25ae4:	ldr	q0, [sp, #48]
   25ae8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   25aec:	cbnz	w0, 25a6c <ldexpf128@@GLIBC_2.27+0x8c>
   25af0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   25af4:	ldr	x0, [x0, #3976]
   25af8:	mrs	x1, tpidr_el0
   25afc:	mov	w2, #0x22                  	// #34
   25b00:	stp	x19, x20, [sp, #48]
   25b04:	ldp	x19, x20, [sp, #16]
   25b08:	str	w2, [x1, x0]
   25b0c:	ldp	x21, x22, [sp, #32]
   25b10:	ldr	q0, [sp, #48]
   25b14:	ldp	x29, x30, [sp], #80
   25b18:	ret
   25b1c:	nop
   25b20:	stp	x29, x30, [sp, #-80]!
   25b24:	mov	x29, sp
   25b28:	stp	x19, x20, [sp, #16]
   25b2c:	stp	x21, x22, [sp, #32]
   25b30:	ldp	x21, x19, [x0]
   25b34:	ldp	x22, x20, [x1]
   25b38:	and	x19, x19, #0x7fffffffffffffff
   25b3c:	stp	x21, x19, [sp, #64]
   25b40:	and	x20, x20, #0x7fffffffffffffff
   25b44:	stp	x22, x20, [sp, #48]
   25b48:	ldr	q0, [sp, #64]
   25b4c:	ldr	q1, [sp, #48]
   25b50:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   25b54:	tbnz	w0, #31, 25b84 <ldexpf128@@GLIBC_2.27+0x1a4>
   25b58:	stp	x22, x20, [sp, #48]
   25b5c:	stp	x21, x19, [sp, #64]
   25b60:	ldr	q1, [sp, #48]
   25b64:	ldr	q0, [sp, #64]
   25b68:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   25b6c:	cmp	w0, #0x0
   25b70:	cset	w0, ne  // ne = any
   25b74:	ldp	x19, x20, [sp, #16]
   25b78:	ldp	x21, x22, [sp, #32]
   25b7c:	ldp	x29, x30, [sp], #80
   25b80:	ret
   25b84:	mov	w0, #0xffffffff            	// #-1
   25b88:	ldp	x19, x20, [sp, #16]
   25b8c:	ldp	x21, x22, [sp, #32]
   25b90:	ldp	x29, x30, [sp], #80
   25b94:	ret
   25b98:	stp	x29, x30, [sp, #-240]!
   25b9c:	mov	v4.16b, v0.16b
   25ba0:	mov	v2.16b, v1.16b
   25ba4:	mov	x29, sp
   25ba8:	stp	x21, x22, [sp, #32]
   25bac:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   25bb0:	ldr	x0, [x21, #4032]
   25bb4:	stp	x19, x20, [sp, #16]
   25bb8:	ldr	x1, [x0]
   25bbc:	str	x1, [sp, #232]
   25bc0:	mov	x1, #0x0                   	// #0
   25bc4:	stp	x23, x24, [sp, #48]
   25bc8:	str	x25, [sp, #64]
   25bcc:	mrs	x23, fpcr
   25bd0:	ands	w25, w23, #0xc00000
   25bd4:	b.ne	25ec4 <ldexpf128@@GLIBC_2.27+0x4e4>  // b.any
   25bd8:	mov	v1.16b, v4.16b
   25bdc:	mov	v0.16b, v4.16b
   25be0:	str	q4, [sp, #80]
   25be4:	add	x24, sp, #0x90
   25be8:	str	q2, [sp, #128]
   25bec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25bf0:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25bf4:	add	x0, x0, #0x4a0
   25bf8:	mov	v16.16b, v0.16b
   25bfc:	ldr	q4, [sp, #80]
   25c00:	add	x19, sp, #0xa0
   25c04:	mov	x20, #0x4                   	// #4
   25c08:	ldr	q1, [x0]
   25c0c:	mov	v0.16b, v4.16b
   25c10:	str	q16, [sp, #112]
   25c14:	str	q16, [sp, #160]
   25c18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25c1c:	mov	v6.16b, v0.16b
   25c20:	ldr	q4, [sp, #80]
   25c24:	mov	v1.16b, v6.16b
   25c28:	str	q6, [sp, #80]
   25c2c:	mov	v0.16b, v4.16b
   25c30:	str	q4, [sp, #96]
   25c34:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25c38:	mov	v1.16b, v0.16b
   25c3c:	ldr	q6, [sp, #80]
   25c40:	mov	v0.16b, v6.16b
   25c44:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25c48:	mov	v6.16b, v0.16b
   25c4c:	ldr	q4, [sp, #96]
   25c50:	mov	v1.16b, v6.16b
   25c54:	mov	v0.16b, v4.16b
   25c58:	str	q6, [sp, #80]
   25c5c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25c60:	mov	v6.16b, v0.16b
   25c64:	ldr	q4, [sp, #80]
   25c68:	mov	v1.16b, v6.16b
   25c6c:	str	q6, [sp, #96]
   25c70:	mov	v0.16b, v4.16b
   25c74:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25c78:	mov	v18.16b, v0.16b
   25c7c:	ldr	q4, [sp, #80]
   25c80:	mov	v1.16b, v4.16b
   25c84:	mov	v0.16b, v4.16b
   25c88:	str	q18, [sp, #80]
   25c8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25c90:	ldr	q16, [sp, #112]
   25c94:	mov	v1.16b, v16.16b
   25c98:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25c9c:	ldr	q18, [sp, #80]
   25ca0:	mov	v1.16b, v18.16b
   25ca4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25ca8:	ldr	q18, [sp, #80]
   25cac:	mov	v1.16b, v18.16b
   25cb0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25cb4:	mov	v4.16b, v0.16b
   25cb8:	ldr	q6, [sp, #96]
   25cbc:	mov	v1.16b, v6.16b
   25cc0:	mov	v0.16b, v6.16b
   25cc4:	str	q4, [sp, #80]
   25cc8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25ccc:	ldr	q4, [sp, #80]
   25cd0:	mov	v1.16b, v0.16b
   25cd4:	mov	v0.16b, v4.16b
   25cd8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25cdc:	mov	v4.16b, v0.16b
   25ce0:	ldr	q2, [sp, #128]
   25ce4:	mov	v1.16b, v2.16b
   25ce8:	mov	v0.16b, v2.16b
   25cec:	str	q2, [sp, #80]
   25cf0:	str	q4, [sp, #144]
   25cf4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25cf8:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25cfc:	add	x0, x0, #0x4a0
   25d00:	mov	v6.16b, v0.16b
   25d04:	ldr	q2, [sp, #80]
   25d08:	ldr	q1, [x0]
   25d0c:	mov	v0.16b, v2.16b
   25d10:	str	q6, [sp, #112]
   25d14:	str	q6, [sp, #192]
   25d18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25d1c:	mov	v4.16b, v0.16b
   25d20:	ldr	q2, [sp, #80]
   25d24:	mov	v1.16b, v4.16b
   25d28:	str	q4, [sp, #80]
   25d2c:	mov	v0.16b, v2.16b
   25d30:	str	q2, [sp, #96]
   25d34:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25d38:	mov	v1.16b, v0.16b
   25d3c:	ldr	q4, [sp, #80]
   25d40:	mov	v0.16b, v4.16b
   25d44:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25d48:	mov	v4.16b, v0.16b
   25d4c:	ldr	q2, [sp, #96]
   25d50:	mov	v1.16b, v4.16b
   25d54:	mov	v0.16b, v2.16b
   25d58:	str	q4, [sp, #80]
   25d5c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25d60:	mov	v4.16b, v0.16b
   25d64:	ldr	q2, [sp, #80]
   25d68:	mov	v1.16b, v4.16b
   25d6c:	str	q4, [sp, #96]
   25d70:	mov	v0.16b, v2.16b
   25d74:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25d78:	mov	v16.16b, v0.16b
   25d7c:	ldr	q2, [sp, #80]
   25d80:	mov	v1.16b, v2.16b
   25d84:	mov	v0.16b, v2.16b
   25d88:	str	q16, [sp, #80]
   25d8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25d90:	ldr	q6, [sp, #112]
   25d94:	mov	v1.16b, v6.16b
   25d98:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25d9c:	ldr	q16, [sp, #80]
   25da0:	mov	v1.16b, v16.16b
   25da4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25da8:	ldr	q16, [sp, #80]
   25dac:	mov	v1.16b, v16.16b
   25db0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25db4:	mov	v2.16b, v0.16b
   25db8:	ldr	q4, [sp, #96]
   25dbc:	mov	v1.16b, v4.16b
   25dc0:	mov	v0.16b, v4.16b
   25dc4:	str	q2, [sp, #80]
   25dc8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25dcc:	ldr	q2, [sp, #80]
   25dd0:	mov	v1.16b, v0.16b
   25dd4:	mov	v0.16b, v2.16b
   25dd8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25ddc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   25de0:	add	x0, x0, #0xfd0
   25de4:	adrp	x3, 25000 <llrintf128@@GLIBC_2.27+0xc8>
   25de8:	add	x3, x3, #0xb20
   25dec:	mov	x22, x3
   25df0:	mov	x2, #0x10                  	// #16
   25df4:	ldr	q2, [x0]
   25df8:	mov	x1, #0x5                   	// #5
   25dfc:	mov	x0, x24
   25e00:	str	q0, [sp, #176]
   25e04:	str	q2, [sp, #208]
   25e08:	bl	ba30 <qsort@plt>
   25e0c:	ldur	q4, [x19, #-16]
   25e10:	ldr	q6, [x19]
   25e14:	mov	v1.16b, v4.16b
   25e18:	str	q4, [sp, #96]
   25e1c:	mov	v0.16b, v6.16b
   25e20:	str	q6, [sp, #80]
   25e24:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25e28:	mov	v2.16b, v0.16b
   25e2c:	ldr	q6, [sp, #80]
   25e30:	mov	v1.16b, v2.16b
   25e34:	str	q2, [x19]
   25e38:	mov	v0.16b, v6.16b
   25e3c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25e40:	ldr	q4, [sp, #96]
   25e44:	mov	v1.16b, v4.16b
   25e48:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25e4c:	mov	x1, x20
   25e50:	mov	x0, x19
   25e54:	mov	x3, x22
   25e58:	mov	x2, #0x10                  	// #16
   25e5c:	stur	q0, [x19, #-16]
   25e60:	bl	ba30 <qsort@plt>
   25e64:	add	x19, x19, #0x10
   25e68:	subs	x20, x20, #0x1
   25e6c:	b.ne	25e0c <ldexpf128@@GLIBC_2.27+0x42c>  // b.any
   25e70:	ldr	q1, [sp, #192]
   25e74:	ldr	q0, [sp, #208]
   25e78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25e7c:	ldr	q1, [sp, #176]
   25e80:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25e84:	ldr	q1, [sp, #160]
   25e88:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25e8c:	ldr	q1, [sp, #144]
   25e90:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25e94:	cbnz	w25, 25ed0 <ldexpf128@@GLIBC_2.27+0x4f0>
   25e98:	ldr	x21, [x21, #4032]
   25e9c:	ldr	x1, [sp, #232]
   25ea0:	ldr	x0, [x21]
   25ea4:	eor	x0, x1, x0
   25ea8:	cbnz	x0, 25ed8 <ldexpf128@@GLIBC_2.27+0x4f8>
   25eac:	ldp	x19, x20, [sp, #16]
   25eb0:	ldp	x21, x22, [sp, #32]
   25eb4:	ldp	x23, x24, [sp, #48]
   25eb8:	ldr	x25, [sp, #64]
   25ebc:	ldp	x29, x30, [sp], #240
   25ec0:	ret
   25ec4:	eor	w0, w25, w23
   25ec8:	msr	fpcr, x0
   25ecc:	b	25bd8 <ldexpf128@@GLIBC_2.27+0x1f8>
   25ed0:	msr	fpcr, x23
   25ed4:	b	25e98 <ldexpf128@@GLIBC_2.27+0x4b8>
   25ed8:	bl	ba70 <__stack_chk_fail@plt>
   25edc:	nop
   25ee0:	stp	x29, x30, [sp, #-224]!
   25ee4:	mov	x29, sp
   25ee8:	stp	x19, x20, [sp, #16]
   25eec:	mov	w20, w0
   25ef0:	stp	x21, x22, [sp, #32]
   25ef4:	mov	x21, x1
   25ef8:	str	x23, [sp, #48]
   25efc:	str	q0, [sp, #192]
   25f00:	str	q1, [sp, #208]
   25f04:	mrs	x22, fpcr
   25f08:	ands	w23, w22, #0xc00000
   25f0c:	b.ne	26120 <ldexpf128@@GLIBC_2.27+0x740>  // b.any
   25f10:	ldr	q1, [sp, #192]
   25f14:	ldr	q0, [sp, #208]
   25f18:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   25f1c:	str	q0, [x21]
   25f20:	mov	v16.16b, v0.16b
   25f24:	cmp	w20, #0x1
   25f28:	b.le	26168 <ldexpf128@@GLIBC_2.27+0x788>
   25f2c:	ldr	q0, [sp, #192]
   25f30:	mov	w19, #0x1                   	// #1
   25f34:	str	q0, [sp, #80]
   25f38:	mov	w0, w19
   25f3c:	str	q16, [sp, #176]
   25f40:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   25f44:	add	w19, w19, #0x1
   25f48:	ldr	q2, [sp, #80]
   25f4c:	ldr	q1, [sp, #192]
   25f50:	str	q2, [sp, #64]
   25f54:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25f58:	mov	v2.16b, v0.16b
   25f5c:	ldr	q0, [sp, #64]
   25f60:	mov	v1.16b, v2.16b
   25f64:	str	q2, [sp, #112]
   25f68:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25f6c:	str	q0, [sp, #80]
   25f70:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25f74:	add	x0, x0, #0x4a0
   25f78:	ldr	q0, [sp, #64]
   25f7c:	ldr	q1, [x0]
   25f80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25f84:	str	q0, [sp, #96]
   25f88:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   25f8c:	add	x0, x0, #0x4a0
   25f90:	ldr	q2, [sp, #112]
   25f94:	ldr	q1, [x0]
   25f98:	mov	v0.16b, v2.16b
   25f9c:	str	q2, [sp, #144]
   25fa0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   25fa4:	ldr	q6, [sp, #96]
   25fa8:	str	q0, [sp, #96]
   25fac:	ldr	q0, [sp, #64]
   25fb0:	mov	v1.16b, v6.16b
   25fb4:	str	q6, [sp, #112]
   25fb8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25fbc:	mov	v1.16b, v0.16b
   25fc0:	ldr	q6, [sp, #112]
   25fc4:	mov	v0.16b, v6.16b
   25fc8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25fcc:	ldr	q4, [sp, #96]
   25fd0:	ldr	q2, [sp, #144]
   25fd4:	str	q0, [sp, #96]
   25fd8:	mov	v1.16b, v4.16b
   25fdc:	str	q4, [sp, #128]
   25fe0:	mov	v0.16b, v2.16b
   25fe4:	str	q2, [sp, #112]
   25fe8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   25fec:	mov	v1.16b, v0.16b
   25ff0:	ldr	q4, [sp, #128]
   25ff4:	mov	v0.16b, v4.16b
   25ff8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   25ffc:	mov	v4.16b, v0.16b
   26000:	ldr	q0, [sp, #64]
   26004:	ldr	q1, [sp, #96]
   26008:	str	q4, [sp, #64]
   2600c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26010:	str	q0, [sp, #160]
   26014:	ldr	q1, [sp, #64]
   26018:	ldr	q2, [sp, #112]
   2601c:	mov	v0.16b, v2.16b
   26020:	str	q2, [sp, #144]
   26024:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26028:	str	q0, [sp, #112]
   2602c:	ldr	q1, [sp, #64]
   26030:	ldr	q0, [sp, #96]
   26034:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26038:	ldr	q1, [sp, #80]
   2603c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26040:	str	q0, [sp, #128]
   26044:	ldr	q0, [sp, #96]
   26048:	ldr	q6, [sp, #112]
   2604c:	mov	v1.16b, v6.16b
   26050:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26054:	ldr	q18, [sp, #128]
   26058:	mov	v1.16b, v0.16b
   2605c:	mov	v0.16b, v18.16b
   26060:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26064:	mov	v18.16b, v0.16b
   26068:	ldr	q0, [sp, #64]
   2606c:	ldr	q4, [sp, #160]
   26070:	str	q18, [sp, #64]
   26074:	mov	v1.16b, v4.16b
   26078:	str	q4, [sp, #96]
   2607c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26080:	mov	v1.16b, v0.16b
   26084:	ldr	q18, [sp, #64]
   26088:	mov	v0.16b, v18.16b
   2608c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26090:	mov	v18.16b, v0.16b
   26094:	ldr	q4, [sp, #96]
   26098:	ldr	q6, [sp, #112]
   2609c:	mov	v0.16b, v4.16b
   260a0:	str	q18, [sp, #64]
   260a4:	mov	v1.16b, v6.16b
   260a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   260ac:	ldr	q18, [sp, #64]
   260b0:	mov	v1.16b, v0.16b
   260b4:	mov	v0.16b, v18.16b
   260b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   260bc:	ldr	q1, [sp, #80]
   260c0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   260c4:	str	q0, [sp, #64]
   260c8:	ldr	q2, [sp, #144]
   260cc:	ldr	q0, [sp, #208]
   260d0:	mov	v1.16b, v2.16b
   260d4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   260d8:	ldr	q16, [sp, #176]
   260dc:	mov	v1.16b, v16.16b
   260e0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   260e4:	ldr	q2, [sp, #64]
   260e8:	mov	v1.16b, v0.16b
   260ec:	mov	v0.16b, v2.16b
   260f0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   260f4:	cmp	w20, w19
   260f8:	mov	v16.16b, v0.16b
   260fc:	b.ne	25f38 <ldexpf128@@GLIBC_2.27+0x558>  // b.any
   26100:	str	q0, [x21]
   26104:	cbnz	w23, 2614c <ldexpf128@@GLIBC_2.27+0x76c>
   26108:	ldp	x19, x20, [sp, #16]
   2610c:	ldp	x21, x22, [sp, #32]
   26110:	ldr	x23, [sp, #48]
   26114:	ldr	q0, [sp, #80]
   26118:	ldp	x29, x30, [sp], #224
   2611c:	ret
   26120:	eor	w0, w23, w22
   26124:	msr	fpcr, x0
   26128:	mov	v1.16b, v0.16b
   2612c:	ldr	q0, [sp, #208]
   26130:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   26134:	str	q0, [x21]
   26138:	mov	v16.16b, v0.16b
   2613c:	cmp	w20, #0x1
   26140:	b.gt	25f2c <ldexpf128@@GLIBC_2.27+0x54c>
   26144:	ldr	q0, [sp, #192]
   26148:	str	q0, [sp, #80]
   2614c:	msr	fpcr, x22
   26150:	ldp	x19, x20, [sp, #16]
   26154:	ldp	x21, x22, [sp, #32]
   26158:	ldr	x23, [sp, #48]
   2615c:	ldr	q0, [sp, #80]
   26160:	ldp	x29, x30, [sp], #224
   26164:	ret
   26168:	ldr	q0, [sp, #192]
   2616c:	str	q0, [sp, #80]
   26170:	b	26108 <ldexpf128@@GLIBC_2.27+0x728>
   26174:	nop
   26178:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2617c:	add	x0, x0, #0xb40
   26180:	stp	x29, x30, [sp, #-32]!
   26184:	mov	x29, sp
   26188:	ldr	q1, [x0]
   2618c:	str	q0, [sp, #16]
   26190:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   26194:	cmp	w0, #0x0
   26198:	ldr	q2, [sp, #16]
   2619c:	b.gt	261bc <ldexpf128@@GLIBC_2.27+0x7dc>
   261a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   261a4:	add	x0, x0, #0xa40
   261a8:	mov	v0.16b, v2.16b
   261ac:	ldr	q1, [x0]
   261b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   261b4:	ldp	x29, x30, [sp], #32
   261b8:	b	23068 <sinf128@@GLIBC_2.27>
   261bc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   261c0:	add	x0, x0, #0x330
   261c4:	mov	v1.16b, v2.16b
   261c8:	ldr	q0, [x0]
   261cc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   261d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   261d4:	add	x0, x0, #0xa40
   261d8:	ldr	q1, [x0]
   261dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   261e0:	ldp	x29, x30, [sp], #32
   261e4:	b	205f0 <cosf128@@GLIBC_2.27>
   261e8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   261ec:	add	x0, x0, #0xb40
   261f0:	stp	x29, x30, [sp, #-32]!
   261f4:	mov	x29, sp
   261f8:	ldr	q1, [x0]
   261fc:	str	q0, [sp, #16]
   26200:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   26204:	cmp	w0, #0x0
   26208:	ldr	q2, [sp, #16]
   2620c:	b.gt	2622c <ldexpf128@@GLIBC_2.27+0x84c>
   26210:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   26214:	add	x0, x0, #0xa40
   26218:	mov	v0.16b, v2.16b
   2621c:	ldr	q1, [x0]
   26220:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26224:	ldp	x29, x30, [sp], #32
   26228:	b	205f0 <cosf128@@GLIBC_2.27>
   2622c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   26230:	add	x0, x0, #0x330
   26234:	mov	v1.16b, v2.16b
   26238:	ldr	q0, [x0]
   2623c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26240:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   26244:	add	x0, x0, #0xa40
   26248:	ldr	q1, [x0]
   2624c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26250:	ldp	x29, x30, [sp], #32
   26254:	b	23068 <sinf128@@GLIBC_2.27>
   26258:	sub	sp, sp, #0x2c0
   2625c:	adrp	x1, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   26260:	add	x1, x1, #0x1d0
   26264:	stp	x29, x30, [sp]
   26268:	mov	x29, sp
   2626c:	ldr	q1, [x1]
   26270:	stp	x23, x24, [sp, #48]
   26274:	adrp	x23, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   26278:	ldr	x1, [x23, #4032]
   2627c:	stp	x19, x20, [sp, #16]
   26280:	mov	x20, x0
   26284:	ldr	x0, [x1]
   26288:	str	x0, [sp, #696]
   2628c:	mov	x0, #0x0                   	// #0
   26290:	str	q0, [sp, #96]
   26294:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26298:	str	q0, [sp, #112]
   2629c:	bl	22250 <floorf128@@GLIBC_2.27>
   262a0:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   262a4:	mov	w19, w0
   262a8:	tbz	w19, #0, 26788 <ldexpf128@@GLIBC_2.27+0xda8>
   262ac:	mvn	w1, w0
   262b0:	stp	x21, x22, [sp, #32]
   262b4:	add	w1, w1, w1, lsr #31
   262b8:	stp	x25, x26, [sp, #64]
   262bc:	asr	w0, w1, #1
   262c0:	stp	x27, x28, [sp, #80]
   262c4:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   262c8:	str	q0, [sp, #160]
   262cc:	tst	x19, #0x2
   262d0:	mov	w1, #0x1                   	// #1
   262d4:	sub	w19, w19, #0x4
   262d8:	cneg	w1, w1, eq  // eq = none
   262dc:	str	w1, [x20]
   262e0:	mrs	x26, fpcr
   262e4:	ands	w27, w26, #0xc00000
   262e8:	b.ne	269e0 <ldexpf128@@GLIBC_2.27+0x1000>  // b.any
   262ec:	sbfiz	x0, x19, #5, #32
   262f0:	adrp	x20, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   262f4:	add	x20, x20, #0x5f0
   262f8:	ldr	q0, [sp, #96]
   262fc:	add	x0, x20, x0
   26300:	ldr	q1, [x0]
   26304:	ldr	q2, [x0, #16]
   26308:	str	q1, [sp, #128]
   2630c:	str	q2, [sp, #112]
   26310:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26314:	ldr	q1, [sp, #112]
   26318:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2631c:	str	q0, [sp, #144]
   26320:	cmp	w19, #0x1
   26324:	ldp	x21, x22, [sp, #144]
   26328:	b.le	267f8 <ldexpf128@@GLIBC_2.27+0xe18>
   2632c:	ldr	q1, [sp, #96]
   26330:	ldr	q0, [sp, #160]
   26334:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26338:	str	q0, [sp, #144]
   2633c:	ldr	q1, [sp, #128]
   26340:	ldr	q0, [sp, #160]
   26344:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26348:	ldr	q1, [sp, #112]
   2634c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26350:	str	q0, [sp, #160]
   26354:	ldp	x25, x0, [sp, #160]
   26358:	ldp	x20, x24, [sp, #144]
   2635c:	and	x28, x0, #0x7fffffffffffffff
   26360:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   26364:	add	x0, x0, #0x330
   26368:	str	x28, [sp, #160]
   2636c:	and	x24, x24, #0x7fffffffffffffff
   26370:	stp	x20, x24, [sp, #144]
   26374:	ldr	q1, [x0]
   26378:	ldr	q0, [sp, #144]
   2637c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26380:	stp	x25, x28, [sp, #144]
   26384:	eor	x28, x22, #0x8000000000000000
   26388:	ldr	q1, [sp, #144]
   2638c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   26390:	cmp	w0, #0x0
   26394:	b.gt	267bc <ldexpf128@@GLIBC_2.27+0xddc>
   26398:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2639c:	add	x0, x0, #0x330
   263a0:	tst	x19, #0x1
   263a4:	ldr	q1, [x0]
   263a8:	csel	x0, x28, x22, ne  // ne = any
   263ac:	stp	x21, x0, [sp, #144]
   263b0:	ldr	q0, [sp, #144]
   263b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   263b8:	str	q0, [sp, #144]
   263bc:	bl	26178 <ldexpf128@@GLIBC_2.27+0x798>
   263c0:	mov	v2.16b, v0.16b
   263c4:	ldr	q4, [sp, #144]
   263c8:	str	q2, [sp, #192]
   263cc:	mov	v0.16b, v4.16b
   263d0:	bl	261e8 <ldexpf128@@GLIBC_2.27+0x808>
   263d4:	stp	x20, x24, [sp, #144]
   263d8:	str	q0, [sp, #176]
   263dc:	ldr	q0, [sp, #144]
   263e0:	bl	261e8 <ldexpf128@@GLIBC_2.27+0x808>
   263e4:	stp	x20, x24, [sp, #144]
   263e8:	str	q0, [sp, #160]
   263ec:	ldr	q0, [sp, #144]
   263f0:	bl	26178 <ldexpf128@@GLIBC_2.27+0x798>
   263f4:	mov	v1.16b, v0.16b
   263f8:	ldr	q6, [sp, #160]
   263fc:	mov	v0.16b, v6.16b
   26400:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   26404:	ldr	q4, [sp, #176]
   26408:	mov	v1.16b, v4.16b
   2640c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26410:	ldr	q2, [sp, #192]
   26414:	mov	v1.16b, v2.16b
   26418:	str	q2, [sp, #144]
   2641c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26420:	mov	v4.16b, v0.16b
   26424:	ldr	q2, [sp, #144]
   26428:	str	q4, [sp, #144]
   2642c:	mov	v1.16b, v2.16b
   26430:	mov	v0.16b, v2.16b
   26434:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26438:	mov	v1.16b, v0.16b
   2643c:	ldr	q4, [sp, #144]
   26440:	mov	v0.16b, v4.16b
   26444:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26448:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2644c:	str	q0, [sp, #240]
   26450:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   26454:	add	x0, x0, #0x2f0
   26458:	ldr	q1, [sp, #128]
   2645c:	mov	x25, #0x0                   	// #0
   26460:	ldr	q0, [x0]
   26464:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26468:	mov	v6.16b, v0.16b
   2646c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   26470:	add	x0, x0, #0x2f0
   26474:	mov	v1.16b, v6.16b
   26478:	str	q6, [sp, #144]
   2647c:	ldr	q0, [x0]
   26480:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26484:	ldr	q1, [sp, #128]
   26488:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2648c:	ldr	q1, [sp, #112]
   26490:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26494:	str	q0, [sp, #128]
   26498:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2649c:	add	x0, x0, #0x2f0
   264a0:	ldr	q1, [sp, #96]
   264a4:	ldr	q0, [x0]
   264a8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   264ac:	mov	v2.16b, v0.16b
   264b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   264b4:	add	x0, x0, #0x2f0
   264b8:	str	q0, [sp, #112]
   264bc:	mov	v1.16b, v2.16b
   264c0:	ldr	q0, [x0]
   264c4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   264c8:	ldr	q1, [sp, #96]
   264cc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   264d0:	mov	v2.16b, v0.16b
   264d4:	cmp	w19, #0x13
   264d8:	mov	x0, #0x0                   	// #0
   264dc:	ldr	q6, [sp, #144]
   264e0:	b.le	268d0 <ldexpf128@@GLIBC_2.27+0xef0>
   264e4:	str	x0, [sp, #192]
   264e8:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   264ec:	add	x0, x0, #0x5b0
   264f0:	mov	v0.16b, v6.16b
   264f4:	str	q6, [sp, #160]
   264f8:	add	x19, sp, #0x100
   264fc:	str	q2, [sp, #176]
   26500:	add	x24, x19, #0x1a0
   26504:	ldr	q1, [x0]
   26508:	mov	x20, x19
   2650c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26510:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   26514:	add	x0, x0, #0x5c0
   26518:	ldr	q1, [x0]
   2651c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26520:	ldr	q1, [sp, #128]
   26524:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26528:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   2652c:	add	x0, x0, #0x5b0
   26530:	ldr	q1, [x0]
   26534:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   26538:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   2653c:	add	x0, x0, #0x5d0
   26540:	ldr	q4, [x0]
   26544:	str	q4, [sp, #224]
   26548:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2654c:	stp	x21, x22, [sp, #96]
   26550:	ldr	q1, [sp, #96]
   26554:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26558:	str	q0, [sp, #144]
   2655c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   26560:	add	x0, x0, #0x330
   26564:	ldr	q0, [sp, #112]
   26568:	ldr	q1, [x0]
   2656c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26570:	ldr	q2, [sp, #176]
   26574:	mov	v1.16b, v2.16b
   26578:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2657c:	stp	x21, x22, [sp, #96]
   26580:	ldr	q1, [sp, #112]
   26584:	str	q0, [sp, #128]
   26588:	ldr	q0, [sp, #96]
   2658c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   26590:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   26594:	mov	v1.16b, v0.16b
   26598:	ldr	q2, [sp, #128]
   2659c:	mov	v0.16b, v2.16b
   265a0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   265a4:	ldr	q16, [sp, #144]
   265a8:	mov	v1.16b, v16.16b
   265ac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   265b0:	ldr	x0, [sp, #192]
   265b4:	stp	x0, x25, [sp, #96]
   265b8:	ldr	q1, [sp, #96]
   265bc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   265c0:	str	q0, [sp, #176]
   265c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   265c8:	add	x0, x0, #0x2f0
   265cc:	ldr	q6, [sp, #160]
   265d0:	ldr	q0, [x0]
   265d4:	mov	v1.16b, v6.16b
   265d8:	str	q6, [sp, #208]
   265dc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   265e0:	str	q0, [sp, #96]
   265e4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   265e8:	add	x0, x0, #0x2f0
   265ec:	ldr	q1, [sp, #112]
   265f0:	ldr	q0, [x0]
   265f4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   265f8:	ldr	q18, [sp, #96]
   265fc:	str	q0, [sp, #96]
   26600:	mov	v1.16b, v18.16b
   26604:	mov	v0.16b, v18.16b
   26608:	str	q18, [sp, #192]
   2660c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26610:	ldr	q16, [sp, #96]
   26614:	str	q0, [sp, #144]
   26618:	mov	v1.16b, v16.16b
   2661c:	mov	v0.16b, v16.16b
   26620:	str	q16, [sp, #128]
   26624:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26628:	ldr	q1, [sp, #112]
   2662c:	ldr	q6, [sp, #208]
   26630:	str	q0, [sp, #160]
   26634:	mov	v0.16b, v6.16b
   26638:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2663c:	stp	x21, x28, [sp, #96]
   26640:	mov	v1.16b, v0.16b
   26644:	adrp	x21, 66000 <f64xsubf128@@GLIBC_2.28+0x12280>
   26648:	ldr	q0, [sp, #96]
   2664c:	add	x21, x21, #0x6f0
   26650:	add	x21, x21, #0x8a0
   26654:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   26658:	mov	v2.16b, v0.16b
   2665c:	ldr	q16, [sp, #128]
   26660:	mov	v1.16b, v2.16b
   26664:	str	q2, [sp, #112]
   26668:	mov	v0.16b, v16.16b
   2666c:	str	q16, [sp, #96]
   26670:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26674:	mov	v6.16b, v0.16b
   26678:	ldr	q16, [sp, #96]
   2667c:	ldr	q18, [sp, #192]
   26680:	str	q6, [sp, #96]
   26684:	mov	v1.16b, v16.16b
   26688:	mov	v0.16b, v18.16b
   2668c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26690:	ldr	q6, [sp, #96]
   26694:	mov	v1.16b, v0.16b
   26698:	mov	v0.16b, v6.16b
   2669c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   266a0:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   266a4:	add	x0, x0, #0x5e0
   266a8:	ldr	q2, [sp, #112]
   266ac:	str	q0, [sp, #96]
   266b0:	ldr	q1, [x0]
   266b4:	mov	v0.16b, v2.16b
   266b8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   266bc:	str	q0, [sp, #256]
   266c0:	ldr	q2, [sp, #112]
   266c4:	ldr	q4, [sp, #224]
   266c8:	b	266d4 <ldexpf128@@GLIBC_2.27+0xcf4>
   266cc:	ldr	q4, [x21], #16
   266d0:	ldr	q2, [sp, #112]
   266d4:	ldr	q0, [sp, #144]
   266d8:	mov	v1.16b, v2.16b
   266dc:	str	q4, [sp, #128]
   266e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   266e4:	ldr	q1, [sp, #96]
   266e8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   266ec:	str	q0, [sp, #112]
   266f0:	ldr	q0, [sp, #96]
   266f4:	ldr	q1, [sp, #160]
   266f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   266fc:	str	q0, [sp, #96]
   26700:	ldr	q2, [sp, #112]
   26704:	ldr	q4, [sp, #128]
   26708:	mov	v0.16b, v2.16b
   2670c:	mov	v1.16b, v4.16b
   26710:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26714:	str	q0, [x20, #16]!
   26718:	cmp	x20, x24
   2671c:	b.ne	266cc <ldexpf128@@GLIBC_2.27+0xcec>  // b.any
   26720:	movi	v0.2d, #0x0
   26724:	sub	x20, x19, #0x1b0
   26728:	ldr	q1, [x19, #416]
   2672c:	sub	x19, x19, #0x10
   26730:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26734:	cmp	x20, x19
   26738:	b.ne	26728 <ldexpf128@@GLIBC_2.27+0xd48>  // b.any
   2673c:	mov	v1.16b, v0.16b
   26740:	ldr	q0, [sp, #176]
   26744:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26748:	ldr	q1, [sp, #240]
   2674c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26750:	cbnz	w27, 269cc <ldexpf128@@GLIBC_2.27+0xfec>
   26754:	ldp	x21, x22, [sp, #32]
   26758:	ldp	x25, x26, [sp, #64]
   2675c:	ldp	x27, x28, [sp, #80]
   26760:	ldr	x23, [x23, #4032]
   26764:	ldr	x1, [sp, #696]
   26768:	ldr	x0, [x23]
   2676c:	eor	x0, x1, x0
   26770:	cbnz	x0, 269ec <ldexpf128@@GLIBC_2.27+0x100c>
   26774:	ldp	x29, x30, [sp]
   26778:	ldp	x19, x20, [sp, #16]
   2677c:	ldp	x23, x24, [sp, #48]
   26780:	add	sp, sp, #0x2c0
   26784:	ret
   26788:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2678c:	mov	v1.16b, v0.16b
   26790:	ldr	q0, [sp, #112]
   26794:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   26798:	cbz	w0, 269b4 <ldexpf128@@GLIBC_2.27+0xfd4>
   2679c:	add	w0, w19, w19, lsr #31
   267a0:	stp	x21, x22, [sp, #32]
   267a4:	neg	w0, w0, asr #1
   267a8:	stp	x25, x26, [sp, #64]
   267ac:	stp	x27, x28, [sp, #80]
   267b0:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   267b4:	str	q0, [sp, #160]
   267b8:	b	262cc <ldexpf128@@GLIBC_2.27+0x8ec>
   267bc:	ldr	x0, [sp, #160]
   267c0:	stp	x25, x0, [sp, #144]
   267c4:	ldr	q0, [sp, #144]
   267c8:	bl	26178 <ldexpf128@@GLIBC_2.27+0x798>
   267cc:	stp	x20, x24, [sp, #144]
   267d0:	str	q0, [sp, #160]
   267d4:	ldr	q0, [sp, #144]
   267d8:	bl	26178 <ldexpf128@@GLIBC_2.27+0x798>
   267dc:	mov	v1.16b, v0.16b
   267e0:	ldr	q2, [sp, #160]
   267e4:	mov	v0.16b, v2.16b
   267e8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   267ec:	bl	1c928 <__logl_finite@GLIBC_2.17>
   267f0:	str	q0, [sp, #240]
   267f4:	b	26450 <ldexpf128@@GLIBC_2.27+0xa70>
   267f8:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   267fc:	add	x0, x0, #0x5a0
   26800:	ldr	q0, [sp, #96]
   26804:	ldr	q1, [x0]
   26808:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2680c:	bl	22250 <floorf128@@GLIBC_2.27>
   26810:	adrp	x0, 63000 <f64xsubf128@@GLIBC_2.28+0xf280>
   26814:	add	x0, x0, #0x8e0
   26818:	ldr	q1, [x0]
   2681c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26820:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   26824:	sxtw	x19, w0
   26828:	mov	w0, #0xffffffdf            	// #-33
   2682c:	sub	w0, w0, w19, lsl #1
   26830:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   26834:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   26838:	add	x0, x0, #0xb90
   2683c:	ldr	q1, [x0]
   26840:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26844:	mov	v1.16b, v0.16b
   26848:	ldr	q0, [sp, #96]
   2684c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26850:	str	q0, [sp, #112]
   26854:	add	x0, x20, #0xc40
   26858:	add	x1, x20, #0xc00
   2685c:	add	x20, x20, #0xc80
   26860:	ldr	x0, [x0, x19, lsl #3]
   26864:	ldr	x1, [x1, x19, lsl #3]
   26868:	add	x19, x20, x0, lsl #4
   2686c:	ldr	q0, [x19]
   26870:	cbz	x1, 26898 <ldexpf128@@GLIBC_2.27+0xeb8>
   26874:	sub	x0, x0, x1
   26878:	add	x20, x20, x0, lsl #4
   2687c:	nop
   26880:	ldr	q1, [sp, #112]
   26884:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26888:	ldr	q1, [x19, #-16]!
   2688c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26890:	cmp	x20, x19
   26894:	b.ne	26880 <ldexpf128@@GLIBC_2.27+0xea0>  // b.any
   26898:	stp	x21, x22, [sp, #112]
   2689c:	mov	v1.16b, v0.16b
   268a0:	ldr	q0, [sp, #112]
   268a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   268a8:	str	q0, [sp, #112]
   268ac:	ldr	q0, [sp, #96]
   268b0:	ldr	q1, [sp, #160]
   268b4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   268b8:	mov	v1.16b, v0.16b
   268bc:	ldr	q2, [sp, #112]
   268c0:	mov	v0.16b, v2.16b
   268c4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   268c8:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   268cc:	b	26750 <ldexpf128@@GLIBC_2.27+0xd70>
   268d0:	mov	w0, #0x15                  	// #21
   268d4:	sub	w19, w0, w19
   268d8:	str	q6, [sp, #96]
   268dc:	asr	w19, w19, #1
   268e0:	str	q0, [sp, #192]
   268e4:	mov	w0, w19
   268e8:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   268ec:	ldr	q6, [sp, #96]
   268f0:	str	q0, [sp, #96]
   268f4:	mov	v1.16b, v6.16b
   268f8:	str	q6, [sp, #160]
   268fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26900:	str	q0, [sp, #144]
   26904:	ldr	q1, [sp, #96]
   26908:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2690c:	mov	v1.16b, v0.16b
   26910:	ldr	q6, [sp, #160]
   26914:	mov	v0.16b, v6.16b
   26918:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2691c:	mov	v1.16b, v0.16b
   26920:	ldr	q0, [sp, #128]
   26924:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26928:	str	q0, [sp, #128]
   2692c:	ldr	q0, [sp, #96]
   26930:	ldr	q1, [sp, #112]
   26934:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26938:	str	q0, [sp, #176]
   2693c:	ldr	q1, [sp, #96]
   26940:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26944:	mov	v18.16b, v0.16b
   26948:	ldr	q0, [sp, #112]
   2694c:	mov	v1.16b, v18.16b
   26950:	ldr	q16, [sp, #144]
   26954:	str	q18, [sp, #96]
   26958:	str	q16, [sp, #160]
   2695c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26960:	ldr	q2, [sp, #192]
   26964:	mov	v1.16b, v0.16b
   26968:	mov	v0.16b, v2.16b
   2696c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26970:	ldr	q18, [sp, #96]
   26974:	mov	v2.16b, v0.16b
   26978:	stp	x21, x22, [sp, #96]
   2697c:	mov	w0, w19
   26980:	ldr	q4, [sp, #176]
   26984:	mov	v1.16b, v18.16b
   26988:	str	q0, [sp, #144]
   2698c:	ldr	q0, [sp, #96]
   26990:	str	q4, [sp, #112]
   26994:	bl	26a00 <ldexpf128@@GLIBC_2.27+0x1020>
   26998:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2699c:	str	q0, [sp, #96]
   269a0:	ldp	x0, x25, [sp, #96]
   269a4:	ldr	q2, [sp, #144]
   269a8:	ldr	q6, [sp, #160]
   269ac:	eor	x25, x25, #0x8000000000000000
   269b0:	b	264e4 <ldexpf128@@GLIBC_2.27+0xb04>
   269b4:	movi	v1.2d, #0x0
   269b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   269bc:	add	x0, x0, #0x2f0
   269c0:	ldr	q0, [x0]
   269c4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   269c8:	b	26760 <ldexpf128@@GLIBC_2.27+0xd80>
   269cc:	msr	fpcr, x26
   269d0:	ldp	x21, x22, [sp, #32]
   269d4:	ldp	x25, x26, [sp, #64]
   269d8:	ldp	x27, x28, [sp, #80]
   269dc:	b	26760 <ldexpf128@@GLIBC_2.27+0xd80>
   269e0:	eor	w0, w27, w26
   269e4:	msr	fpcr, x0
   269e8:	b	262ec <ldexpf128@@GLIBC_2.27+0x90c>
   269ec:	stp	x21, x22, [sp, #32]
   269f0:	stp	x25, x26, [sp, #64]
   269f4:	stp	x27, x28, [sp, #80]
   269f8:	bl	ba70 <__stack_chk_fail@plt>
   269fc:	nop
   26a00:	stp	x29, x30, [sp, #-272]!
   26a04:	cmp	w0, #0x0
   26a08:	mov	x29, sp
   26a0c:	str	q0, [sp, #144]
   26a10:	str	q1, [sp, #240]
   26a14:	b.le	26e10 <ldexpf128@@GLIBC_2.27+0x1430>
   26a18:	mov	v1.16b, v2.16b
   26a1c:	stp	x19, x20, [sp, #16]
   26a20:	mov	w20, w0
   26a24:	stp	xzr, xzr, [sp, #112]
   26a28:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26a2c:	mov	w19, #0x0                   	// #0
   26a30:	str	q0, [sp, #256]
   26a34:	movi	v0.2d, #0x0
   26a38:	str	q0, [sp, #32]
   26a3c:	nop
   26a40:	mov	w0, w19
   26a44:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   26a48:	ldr	q18, [sp, #32]
   26a4c:	add	w19, w19, #0x1
   26a50:	ldr	q1, [sp, #240]
   26a54:	str	q18, [sp, #224]
   26a58:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26a5c:	mov	v1.16b, v0.16b
   26a60:	ldr	q0, [sp, #144]
   26a64:	str	q1, [sp, #64]
   26a68:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   26a6c:	mov	v2.16b, v0.16b
   26a70:	ldr	q0, [sp, #64]
   26a74:	mov	v1.16b, v2.16b
   26a78:	str	q2, [sp, #48]
   26a7c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26a80:	str	q0, [sp, #160]
   26a84:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   26a88:	add	x0, x0, #0x4a0
   26a8c:	ldr	q0, [sp, #48]
   26a90:	ldr	q3, [x0]
   26a94:	mov	v1.16b, v3.16b
   26a98:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26a9c:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   26aa0:	add	x0, x0, #0x4a0
   26aa4:	str	q0, [sp, #80]
   26aa8:	ldr	q0, [sp, #64]
   26aac:	ldr	q1, [x0]
   26ab0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26ab4:	ldr	q6, [sp, #80]
   26ab8:	str	q0, [sp, #80]
   26abc:	ldr	q0, [sp, #48]
   26ac0:	mov	v1.16b, v6.16b
   26ac4:	str	q6, [sp, #96]
   26ac8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26acc:	mov	v1.16b, v0.16b
   26ad0:	ldr	q6, [sp, #96]
   26ad4:	mov	v0.16b, v6.16b
   26ad8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26adc:	ldr	q2, [sp, #80]
   26ae0:	str	q0, [sp, #80]
   26ae4:	ldr	q0, [sp, #64]
   26ae8:	mov	v1.16b, v2.16b
   26aec:	str	q2, [sp, #96]
   26af0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26af4:	mov	v1.16b, v0.16b
   26af8:	ldr	q2, [sp, #96]
   26afc:	mov	v0.16b, v2.16b
   26b00:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26b04:	str	q0, [sp, #128]
   26b08:	ldr	q0, [sp, #48]
   26b0c:	ldr	q1, [sp, #80]
   26b10:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26b14:	str	q0, [sp, #96]
   26b18:	ldr	q0, [sp, #64]
   26b1c:	ldr	q1, [sp, #128]
   26b20:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26b24:	ldr	q4, [sp, #160]
   26b28:	str	q4, [sp, #176]
   26b2c:	mov	v1.16b, v4.16b
   26b30:	str	q0, [sp, #160]
   26b34:	ldr	q0, [sp, #144]
   26b38:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26b3c:	str	q0, [sp, #192]
   26b40:	ldr	q0, [sp, #80]
   26b44:	ldr	q1, [sp, #128]
   26b48:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26b4c:	ldr	q4, [sp, #176]
   26b50:	mov	v1.16b, v4.16b
   26b54:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26b58:	ldr	q2, [sp, #160]
   26b5c:	str	q0, [sp, #160]
   26b60:	ldr	q0, [sp, #80]
   26b64:	mov	v1.16b, v2.16b
   26b68:	str	q2, [sp, #176]
   26b6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26b70:	mov	v1.16b, v0.16b
   26b74:	ldr	q4, [sp, #160]
   26b78:	mov	v0.16b, v4.16b
   26b7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26b80:	str	q0, [sp, #160]
   26b84:	ldr	q1, [sp, #96]
   26b88:	ldr	q0, [sp, #128]
   26b8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26b90:	mov	v1.16b, v0.16b
   26b94:	ldr	q4, [sp, #160]
   26b98:	mov	v0.16b, v4.16b
   26b9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26ba0:	str	q0, [sp, #128]
   26ba4:	ldr	q0, [sp, #96]
   26ba8:	ldr	q2, [sp, #176]
   26bac:	mov	v1.16b, v2.16b
   26bb0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26bb4:	ldr	q2, [sp, #128]
   26bb8:	mov	v1.16b, v0.16b
   26bbc:	mov	v0.16b, v2.16b
   26bc0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26bc4:	ldr	q6, [sp, #192]
   26bc8:	mov	v1.16b, v0.16b
   26bcc:	mov	v0.16b, v6.16b
   26bd0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26bd4:	ldr	q1, [sp, #64]
   26bd8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   26bdc:	mov	v2.16b, v0.16b
   26be0:	ldr	q1, [sp, #64]
   26be4:	str	q2, [sp, #64]
   26be8:	mov	v0.16b, v1.16b
   26bec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26bf0:	mov	v1.16b, v0.16b
   26bf4:	ldr	q0, [sp, #256]
   26bf8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   26bfc:	mov	v1.16b, v0.16b
   26c00:	ldr	q2, [sp, #64]
   26c04:	mov	v0.16b, v2.16b
   26c08:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26c0c:	ldr	q1, [sp, #32]
   26c10:	str	q0, [sp, #208]
   26c14:	ldr	q0, [sp, #48]
   26c18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26c1c:	str	q0, [sp, #64]
   26c20:	adrp	x0, 65000 <f64xsubf128@@GLIBC_2.28+0x11280>
   26c24:	add	x0, x0, #0x4a0
   26c28:	ldr	q0, [sp, #32]
   26c2c:	ldr	q1, [x0]
   26c30:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26c34:	mov	v2.16b, v0.16b
   26c38:	ldr	q0, [sp, #32]
   26c3c:	mov	v1.16b, v2.16b
   26c40:	str	q2, [sp, #128]
   26c44:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26c48:	mov	v1.16b, v0.16b
   26c4c:	ldr	q2, [sp, #128]
   26c50:	mov	v0.16b, v2.16b
   26c54:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26c58:	mov	v4.16b, v0.16b
   26c5c:	ldr	q0, [sp, #32]
   26c60:	mov	v1.16b, v4.16b
   26c64:	str	q4, [sp, #128]
   26c68:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26c6c:	str	q0, [sp, #192]
   26c70:	ldr	q1, [sp, #32]
   26c74:	ldr	q0, [sp, #48]
   26c78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26c7c:	mov	v2.16b, v0.16b
   26c80:	ldr	q0, [sp, #32]
   26c84:	mov	v1.16b, v2.16b
   26c88:	str	q2, [sp, #32]
   26c8c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26c90:	ldr	q1, [sp, #48]
   26c94:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26c98:	str	q0, [sp, #176]
   26c9c:	ldr	q2, [sp, #32]
   26ca0:	ldr	q1, [sp, #64]
   26ca4:	mov	v0.16b, v2.16b
   26ca8:	str	q2, [sp, #160]
   26cac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26cb0:	str	q0, [sp, #32]
   26cb4:	ldr	q1, [sp, #80]
   26cb8:	ldr	q4, [sp, #128]
   26cbc:	mov	v0.16b, v4.16b
   26cc0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26cc4:	ldr	q1, [sp, #64]
   26cc8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26ccc:	mov	v22.16b, v0.16b
   26cd0:	ldr	q1, [sp, #96]
   26cd4:	ldr	q4, [sp, #128]
   26cd8:	str	q22, [sp, #128]
   26cdc:	mov	v0.16b, v4.16b
   26ce0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26ce4:	ldr	q22, [sp, #128]
   26ce8:	mov	v1.16b, v0.16b
   26cec:	mov	v0.16b, v22.16b
   26cf0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26cf4:	ldr	q1, [sp, #80]
   26cf8:	ldr	q16, [sp, #192]
   26cfc:	str	q0, [sp, #128]
   26d00:	mov	v0.16b, v16.16b
   26d04:	str	q16, [sp, #80]
   26d08:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26d0c:	mov	v1.16b, v0.16b
   26d10:	ldr	q4, [sp, #128]
   26d14:	mov	v0.16b, v4.16b
   26d18:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26d1c:	mov	v4.16b, v0.16b
   26d20:	ldr	q16, [sp, #80]
   26d24:	ldr	q1, [sp, #96]
   26d28:	mov	v0.16b, v16.16b
   26d2c:	str	q4, [sp, #80]
   26d30:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26d34:	mov	v1.16b, v0.16b
   26d38:	ldr	q4, [sp, #80]
   26d3c:	mov	v0.16b, v4.16b
   26d40:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26d44:	ldr	q1, [sp, #32]
   26d48:	ldr	q2, [sp, #160]
   26d4c:	str	q0, [sp, #80]
   26d50:	mov	v0.16b, v2.16b
   26d54:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   26d58:	ldr	q1, [sp, #64]
   26d5c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26d60:	ldr	q20, [sp, #176]
   26d64:	mov	v1.16b, v20.16b
   26d68:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26d6c:	ldr	q4, [sp, #80]
   26d70:	mov	v1.16b, v0.16b
   26d74:	mov	v0.16b, v4.16b
   26d78:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26d7c:	mov	v2.16b, v0.16b
   26d80:	ldr	q0, [sp, #48]
   26d84:	ldr	q1, [sp, #112]
   26d88:	str	q2, [sp, #48]
   26d8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26d90:	mov	v1.16b, v0.16b
   26d94:	ldr	q2, [sp, #48]
   26d98:	mov	v0.16b, v2.16b
   26d9c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26da0:	ldr	q6, [sp, #208]
   26da4:	mov	v1.16b, v6.16b
   26da8:	str	q6, [sp, #64]
   26dac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26db0:	str	q0, [sp, #48]
   26db4:	ldr	q1, [sp, #112]
   26db8:	ldr	q18, [sp, #224]
   26dbc:	mov	v0.16b, v18.16b
   26dc0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26dc4:	ldr	q6, [sp, #64]
   26dc8:	mov	v1.16b, v6.16b
   26dcc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   26dd0:	ldr	q2, [sp, #48]
   26dd4:	mov	v1.16b, v0.16b
   26dd8:	mov	v0.16b, v2.16b
   26ddc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26de0:	mov	v1.16b, v0.16b
   26de4:	ldr	q0, [sp, #112]
   26de8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26dec:	str	q0, [sp, #112]
   26df0:	cmp	w20, w19
   26df4:	b.ne	26a40 <ldexpf128@@GLIBC_2.27+0x1060>  // b.any
   26df8:	mov	v1.16b, v0.16b
   26dfc:	ldr	q0, [sp, #32]
   26e00:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26e04:	ldp	x19, x20, [sp, #16]
   26e08:	ldp	x29, x30, [sp], #272
   26e0c:	ret
   26e10:	movi	v0.2d, #0x0
   26e14:	ldp	x29, x30, [sp], #272
   26e18:	ret
   26e1c:	nop

0000000000026e20 <nextupf128@@GLIBC_2.27>:
   26e20:	stp	x29, x30, [sp, #-80]!
   26e24:	mov	x1, #0x7ffeffffffffffff    	// #9223090561878065151
   26e28:	mov	x29, sp
   26e2c:	stp	x19, x20, [sp, #16]
   26e30:	str	q0, [sp, #64]
   26e34:	ldp	x19, x20, [sp, #64]
   26e38:	stp	x21, x22, [sp, #32]
   26e3c:	and	x0, x20, #0x7fffffffffffffff
   26e40:	mov	x22, x20
   26e44:	mov	x21, x19
   26e48:	cmp	x0, x1
   26e4c:	b.le	26ed4 <nextupf128@@GLIBC_2.27+0xb4>
   26e50:	mov	x1, #0x8001000000000000    	// #-9223090561878065152
   26e54:	add	x0, x0, x1
   26e58:	orr	x0, x0, x19
   26e5c:	cbnz	x0, 26f0c <nextupf128@@GLIBC_2.27+0xec>
   26e60:	tbnz	x20, #63, 26f34 <nextupf128@@GLIBC_2.27+0x114>
   26e64:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   26e68:	add	x0, x0, #0x300
   26e6c:	stp	x23, x24, [sp, #48]
   26e70:	and	x23, x20, #0x7fffffffffffffff
   26e74:	stp	x19, x23, [sp, #64]
   26e78:	ldr	q1, [x0]
   26e7c:	ldr	q0, [sp, #64]
   26e80:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   26e84:	cbnz	w0, 26ea8 <nextupf128@@GLIBC_2.27+0x88>
   26e88:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   26e8c:	add	x0, x0, #0x300
   26e90:	stp	x19, x23, [sp, #64]
   26e94:	ldr	q1, [x0]
   26e98:	ldr	q0, [sp, #64]
   26e9c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   26ea0:	cmp	w0, #0x0
   26ea4:	b.gt	26f40 <nextupf128@@GLIBC_2.27+0x120>
   26ea8:	ldp	x23, x24, [sp, #48]
   26eac:	adds	x21, x21, #0x1
   26eb0:	cinc	x22, x22, eq  // eq = none
   26eb4:	mov	x19, x21
   26eb8:	mov	x20, x22
   26ebc:	stp	x19, x20, [sp, #64]
   26ec0:	ldp	x19, x20, [sp, #16]
   26ec4:	ldp	x21, x22, [sp, #32]
   26ec8:	ldr	q0, [sp, #64]
   26ecc:	ldp	x29, x30, [sp], #80
   26ed0:	ret
   26ed4:	orr	x0, x0, x19
   26ed8:	cbnz	x0, 26efc <nextupf128@@GLIBC_2.27+0xdc>
   26edc:	mov	x19, #0x1                   	// #1
   26ee0:	mov	x20, #0x0                   	// #0
   26ee4:	stp	x19, x20, [sp, #64]
   26ee8:	ldp	x19, x20, [sp, #16]
   26eec:	ldp	x21, x22, [sp, #32]
   26ef0:	ldr	q0, [sp, #64]
   26ef4:	ldp	x29, x30, [sp], #80
   26ef8:	ret
   26efc:	tbz	x20, #63, 26e64 <nextupf128@@GLIBC_2.27+0x44>
   26f00:	cbz	x19, 26f34 <nextupf128@@GLIBC_2.27+0x114>
   26f04:	sub	x21, x21, #0x1
   26f08:	b	26eb4 <nextupf128@@GLIBC_2.27+0x94>
   26f0c:	mov	v1.16b, v0.16b
   26f10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   26f14:	str	q0, [sp, #64]
   26f18:	ldp	x19, x20, [sp, #64]
   26f1c:	stp	x19, x20, [sp, #64]
   26f20:	ldp	x19, x20, [sp, #16]
   26f24:	ldp	x21, x22, [sp, #32]
   26f28:	ldr	q0, [sp, #64]
   26f2c:	ldp	x29, x30, [sp], #80
   26f30:	ret
   26f34:	sub	x22, x22, #0x1
   26f38:	sub	x21, x21, #0x1
   26f3c:	b	26eb4 <nextupf128@@GLIBC_2.27+0x94>
   26f40:	stp	x19, x20, [sp, #64]
   26f44:	ldp	x19, x20, [sp, #16]
   26f48:	ldp	x21, x22, [sp, #32]
   26f4c:	ldp	x23, x24, [sp, #48]
   26f50:	ldr	q0, [sp, #64]
   26f54:	ldp	x29, x30, [sp], #80
   26f58:	ret
   26f5c:	nop

0000000000026f60 <totalorderf128@@GLIBC_2.31>:
   26f60:	ldp	x5, x3, [x0]
   26f64:	ldr	x2, [x1, #8]
   26f68:	ldr	x1, [x1]
   26f6c:	mov	x0, x2
   26f70:	asr	x4, x3, #63
   26f74:	asr	x2, x2, #63
   26f78:	eor	x3, x3, x4, lsr #1
   26f7c:	eor	x0, x0, x2, lsr #1
   26f80:	cmp	x3, x0
   26f84:	b.lt	26fa0 <totalorderf128@@GLIBC_2.31+0x40>  // b.tstop
   26f88:	eor	x4, x4, x5
   26f8c:	eor	x2, x2, x1
   26f90:	cmp	x4, x2
   26f94:	ccmp	x3, x0, #0x0, ls  // ls = plast
   26f98:	cset	w0, eq  // eq = none
   26f9c:	ret
   26fa0:	mov	w0, #0x1                   	// #1
   26fa4:	ret

0000000000026fa8 <totalorderf128@GLIBC_2.27>:
   26fa8:	stp	x29, x30, [sp, #-48]!
   26fac:	mov	x29, sp
   26fb0:	add	x1, sp, #0x10
   26fb4:	add	x0, sp, #0x20
   26fb8:	str	q1, [sp, #16]
   26fbc:	str	q0, [sp, #32]
   26fc0:	bl	26f60 <totalorderf128@@GLIBC_2.31>
   26fc4:	ldp	x29, x30, [sp], #48
   26fc8:	ret
   26fcc:	nop

0000000000026fd0 <totalordermagf128@@GLIBC_2.31>:
   26fd0:	ldr	x3, [x0, #8]
   26fd4:	ldr	x2, [x1, #8]
   26fd8:	and	x3, x3, #0x7fffffffffffffff
   26fdc:	and	x2, x2, #0x7fffffffffffffff
   26fe0:	cmp	x3, x2
   26fe4:	ldr	x2, [x0]
   26fe8:	ldr	x0, [x1]
   26fec:	b.cc	26ffc <totalordermagf128@@GLIBC_2.31+0x2c>  // b.lo, b.ul, b.last
   26ff0:	ccmp	x2, x0, #0x2, eq  // eq = none
   26ff4:	cset	w0, ls  // ls = plast
   26ff8:	ret
   26ffc:	mov	w0, #0x1                   	// #1
   27000:	ret
   27004:	nop

0000000000027008 <totalordermagf128@GLIBC_2.27>:
   27008:	stp	x29, x30, [sp, #-48]!
   2700c:	mov	x29, sp
   27010:	add	x1, sp, #0x10
   27014:	add	x0, sp, #0x20
   27018:	str	q1, [sp, #16]
   2701c:	str	q0, [sp, #32]
   27020:	bl	26fd0 <totalordermagf128@@GLIBC_2.31>
   27024:	ldp	x29, x30, [sp], #48
   27028:	ret
   2702c:	nop

0000000000027030 <getpayloadf128@@GLIBC_2.27>:
   27030:	mov	x1, x0
   27034:	ldr	x0, [x0, #8]
   27038:	ldr	x1, [x1]
   2703c:	ands	x0, x0, #0x7fffffffffff
   27040:	b.ne	27080 <getpayloadf128@@GLIBC_2.27+0x50>  // b.any
   27044:	movi	v0.2d, #0x0
   27048:	cbz	x1, 2707c <getpayloadf128@@GLIBC_2.27+0x4c>
   2704c:	clz	x3, x1
   27050:	add	w2, w3, #0x31
   27054:	add	w5, w3, #0x40
   27058:	cmp	w2, #0x3f
   2705c:	b.le	2708c <getpayloadf128@@GLIBC_2.27+0x5c>
   27060:	sub	w3, w3, #0xf
   27064:	mov	x4, #0x407e                	// #16510
   27068:	sub	x4, x4, w5, sxtw
   2706c:	fmov	d0, x0
   27070:	lsl	x1, x1, x3
   27074:	bfi	x1, x4, #48, #16
   27078:	fmov	v0.d[1], x1
   2707c:	ret
   27080:	clz	x2, x0
   27084:	mov	w5, w2
   27088:	sub	w2, w2, #0xf
   2708c:	neg	w4, w2
   27090:	lsl	x3, x0, x2
   27094:	lsl	x0, x1, x2
   27098:	fmov	d0, x0
   2709c:	lsr	x1, x1, x4
   270a0:	mov	x4, #0x407e                	// #16510
   270a4:	sub	x4, x4, w5, sxtw
   270a8:	orr	x1, x1, x3
   270ac:	bfi	x1, x4, #48, #16
   270b0:	fmov	v0.d[1], x1
   270b4:	b	2707c <getpayloadf128@@GLIBC_2.27+0x4c>

00000000000270b8 <setpayloadf128@@GLIBC_2.27>:
   270b8:	sub	sp, sp, #0x10
   270bc:	mov	x4, #0x406d                	// #16493
   270c0:	mov	x3, x0
   270c4:	str	q0, [sp]
   270c8:	ldp	x2, x1, [sp]
   270cc:	cmp	x4, x1, lsr #48
   270d0:	b.cc	27120 <setpayloadf128@@GLIBC_2.27+0x68>  // b.lo, b.ul, b.last
   270d4:	lsr	x0, x1, #48
   270d8:	mov	x4, #0x3ffe                	// #16382
   270dc:	cmp	x0, x4
   270e0:	b.hi	2710c <setpayloadf128@@GLIBC_2.27+0x54>  // b.pmore
   270e4:	orr	x4, x1, x2
   270e8:	cbnz	x4, 27120 <setpayloadf128@@GLIBC_2.27+0x68>
   270ec:	cbnz	x0, 27168 <setpayloadf128@@GLIBC_2.27+0xb0>
   270f0:	orr	x1, x1, #0x7fff800000000000
   270f4:	fmov	d0, x2
   270f8:	mov	w0, #0x0                   	// #0
   270fc:	fmov	v0.d[1], x1
   27100:	str	q0, [x3]
   27104:	add	sp, sp, #0x10
   27108:	ret
   2710c:	mov	w4, #0x406f                	// #16495
   27110:	sub	w4, w4, w0
   27114:	cmp	w4, #0x3f
   27118:	b.le	27130 <setpayloadf128@@GLIBC_2.27+0x78>
   2711c:	cbz	x2, 27184 <setpayloadf128@@GLIBC_2.27+0xcc>
   27120:	stp	xzr, xzr, [x3]
   27124:	mov	w0, #0x1                   	// #1
   27128:	add	sp, sp, #0x10
   2712c:	ret
   27130:	mov	x5, #0xffffffffffffffff    	// #-1
   27134:	lsl	x5, x5, x4
   27138:	bics	xzr, x2, x5
   2713c:	b.ne	27120 <setpayloadf128@@GLIBC_2.27+0x68>  // b.any
   27140:	and	x1, x1, #0xffffffffffff
   27144:	mov	w5, #0xffffbfd1            	// #-16431
   27148:	orr	x1, x1, #0x1000000000000
   2714c:	add	w0, w0, w5
   27150:	lsr	x2, x2, x4
   27154:	lsl	x0, x1, x0
   27158:	orr	x2, x0, x2
   2715c:	lsr	x1, x1, x4
   27160:	orr	x1, x1, #0x7fff800000000000
   27164:	b	270f4 <setpayloadf128@@GLIBC_2.27+0x3c>
   27168:	and	x1, x1, #0xffffffffffff
   2716c:	mov	w4, #0x402f                	// #16431
   27170:	orr	x2, x1, #0x1000000000000
   27174:	sub	w0, w4, w0
   27178:	mov	x1, #0x7fff800000000000    	// #9223231299366420480
   2717c:	lsr	x2, x2, x0
   27180:	b	270f4 <setpayloadf128@@GLIBC_2.27+0x3c>
   27184:	mov	w4, #0x402f                	// #16431
   27188:	sub	w5, w4, w0
   2718c:	mov	x4, #0xffffffffffffffff    	// #-1
   27190:	lsl	x4, x4, x5
   27194:	bics	xzr, x1, x4
   27198:	b.eq	270ec <setpayloadf128@@GLIBC_2.27+0x34>  // b.none
   2719c:	b	27120 <setpayloadf128@@GLIBC_2.27+0x68>

00000000000271a0 <setpayloadsigf128@@GLIBC_2.27>:
   271a0:	sub	sp, sp, #0x10
   271a4:	mov	x3, x0
   271a8:	mov	w4, #0xffffc001            	// #-16383
   271ac:	str	q0, [sp]
   271b0:	ldp	x1, x2, [sp]
   271b4:	lsr	x0, x2, #48
   271b8:	add	w4, w0, w4
   271bc:	cmp	w4, #0x6e
   271c0:	b.hi	27220 <setpayloadsigf128@@GLIBC_2.27+0x80>  // b.pmore
   271c4:	mov	w4, #0x406f                	// #16495
   271c8:	sub	w4, w4, w0
   271cc:	cmp	w4, #0x3f
   271d0:	b.gt	27230 <setpayloadsigf128@@GLIBC_2.27+0x90>
   271d4:	mov	x5, #0xffffffffffffffff    	// #-1
   271d8:	lsl	x5, x5, x4
   271dc:	bics	xzr, x1, x5
   271e0:	cset	w5, ne  // ne = any
   271e4:	cbnz	w5, 27220 <setpayloadsigf128@@GLIBC_2.27+0x80>
   271e8:	cbz	x0, 27254 <setpayloadsigf128@@GLIBC_2.27+0xb4>
   271ec:	and	x2, x2, #0xffffffffffff
   271f0:	cmp	w4, #0x3f
   271f4:	orr	x5, x2, #0x1000000000000
   271f8:	b.gt	27270 <setpayloadsigf128@@GLIBC_2.27+0xd0>
   271fc:	cbz	w4, 27254 <setpayloadsigf128@@GLIBC_2.27+0xb4>
   27200:	mov	w2, #0xffffbfd1            	// #-16431
   27204:	add	w0, w0, w2
   27208:	lsr	x1, x1, x4
   2720c:	lsr	x2, x5, x4
   27210:	orr	x2, x2, #0x7fff000000000000
   27214:	lsl	x0, x5, x0
   27218:	orr	x1, x0, x1
   2721c:	b	27258 <setpayloadsigf128@@GLIBC_2.27+0xb8>
   27220:	stp	xzr, xzr, [x3]
   27224:	mov	w0, #0x1                   	// #1
   27228:	add	sp, sp, #0x10
   2722c:	ret
   27230:	mov	w5, #0x402f                	// #16431
   27234:	sub	w6, w5, w0
   27238:	mov	x5, #0xffffffffffffffff    	// #-1
   2723c:	lsl	x5, x5, x6
   27240:	bic	x5, x2, x5
   27244:	orr	x5, x5, x1
   27248:	cmp	x5, #0x0
   2724c:	cset	w5, ne  // ne = any
   27250:	b	271e4 <setpayloadsigf128@@GLIBC_2.27+0x44>
   27254:	orr	x2, x2, #0x7fff000000000000
   27258:	fmov	d0, x1
   2725c:	mov	w0, #0x0                   	// #0
   27260:	fmov	v0.d[1], x2
   27264:	str	q0, [x3]
   27268:	add	sp, sp, #0x10
   2726c:	ret
   27270:	mov	w1, #0x402f                	// #16431
   27274:	sub	w1, w1, w0
   27278:	mov	x2, #0x7fff000000000000    	// #9223090561878065152
   2727c:	lsr	x1, x5, x1
   27280:	b	27258 <setpayloadsigf128@@GLIBC_2.27+0xb8>
   27284:	nop

0000000000027288 <roundevenf128@@GLIBC_2.27>:
   27288:	stp	x29, x30, [sp, #-32]!
   2728c:	mov	x4, #0x406e                	// #16494
   27290:	mov	x29, sp
   27294:	str	q0, [sp, #16]
   27298:	ldp	x0, x1, [sp, #16]
   2729c:	ubfx	x3, x1, #48, #15
   272a0:	cmp	x3, x4
   272a4:	b.ls	272c4 <roundevenf128@@GLIBC_2.27+0x3c>  // b.plast
   272a8:	mov	x2, #0x7fff                	// #32767
   272ac:	cmp	x3, x2
   272b0:	b.eq	27384 <roundevenf128@@GLIBC_2.27+0xfc>  // b.none
   272b4:	stp	x0, x1, [sp, #16]
   272b8:	ldr	q0, [sp, #16]
   272bc:	ldp	x29, x30, [sp], #32
   272c0:	ret
   272c4:	mov	x2, x1
   272c8:	and	x5, x1, #0x7fffffffffffffff
   272cc:	mov	x6, x0
   272d0:	mov	x1, #0x402f                	// #16431
   272d4:	cmp	x3, x1
   272d8:	b.ls	27328 <roundevenf128@@GLIBC_2.27+0xa0>  // b.plast
   272dc:	sub	w4, w4, w3
   272e0:	mov	x1, #0x1                   	// #1
   272e4:	mov	w5, #0x406f                	// #16495
   272e8:	sub	w3, w5, w3
   272ec:	lsl	x4, x1, x4
   272f0:	sub	x5, x4, #0x1
   272f4:	lsl	x3, x1, x3
   272f8:	orr	x1, x5, x3
   272fc:	tst	x1, x0
   27300:	b.eq	2730c <roundevenf128@@GLIBC_2.27+0x84>  // b.none
   27304:	adds	x0, x0, x4
   27308:	cinc	x2, x2, cs  // cs = hs, nlast
   2730c:	neg	x3, x3
   27310:	and	x0, x3, x0
   27314:	mov	x1, x2
   27318:	stp	x0, x1, [sp, #16]
   2731c:	ldr	q0, [sp, #16]
   27320:	ldp	x29, x30, [sp], #32
   27324:	ret
   27328:	cmp	w3, w1
   2732c:	b.eq	273a4 <roundevenf128@@GLIBC_2.27+0x11c>  // b.none
   27330:	mov	w0, #0x3ffe                	// #16382
   27334:	cmp	w3, w0
   27338:	b.le	273c4 <roundevenf128@@GLIBC_2.27+0x13c>
   2733c:	mov	w0, #0x402e                	// #16430
   27340:	sub	w0, w0, w3
   27344:	sub	w3, w1, w3
   27348:	mov	x1, #0x1                   	// #1
   2734c:	lsl	x0, x1, x0
   27350:	sub	x4, x0, #0x1
   27354:	lsl	x3, x1, x3
   27358:	orr	x1, x4, x3
   2735c:	and	x1, x1, x2
   27360:	add	x4, x2, x0
   27364:	orr	x6, x1, x6
   27368:	neg	x3, x3
   2736c:	cmp	x6, #0x0
   27370:	mov	x0, #0x0                   	// #0
   27374:	csel	x2, x4, x2, ne  // ne = any
   27378:	and	x2, x2, x3
   2737c:	mov	x1, x2
   27380:	b	27318 <roundevenf128@@GLIBC_2.27+0x90>
   27384:	mov	v1.16b, v0.16b
   27388:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2738c:	str	q0, [sp, #16]
   27390:	ldp	x0, x1, [sp, #16]
   27394:	stp	x0, x1, [sp, #16]
   27398:	ldr	q0, [sp, #16]
   2739c:	ldp	x29, x30, [sp], #32
   273a0:	ret
   273a4:	and	x0, x2, #0x1
   273a8:	and	x1, x6, #0x7fffffffffffffff
   273ac:	orr	x0, x0, x1
   273b0:	cbz	x0, 27314 <roundevenf128@@GLIBC_2.27+0x8c>
   273b4:	add	x2, x2, x6, lsr #63
   273b8:	mov	x0, #0x0                   	// #0
   273bc:	mov	x1, x2
   273c0:	b	27318 <roundevenf128@@GLIBC_2.27+0x90>
   273c4:	and	x2, x2, #0x8000000000000000
   273c8:	mov	x0, #0x0                   	// #0
   273cc:	b.ne	27314 <roundevenf128@@GLIBC_2.27+0x8c>  // b.any
   273d0:	mov	x1, #0x3ffe000000000000    	// #4611123068473966592
   273d4:	cmp	x6, #0x0
   273d8:	ccmp	x5, x1, #0x2, eq  // eq = none
   273dc:	orr	x1, x2, #0x3fff000000000000
   273e0:	csel	x2, x1, x2, hi  // hi = pmore
   273e4:	mov	x1, x2
   273e8:	b	27318 <roundevenf128@@GLIBC_2.27+0x90>
   273ec:	nop
   273f0:	stp	x29, x30, [sp, #-32]!
   273f4:	mov	x29, sp
   273f8:	stp	x19, x20, [sp, #16]
   273fc:	mov	w19, w1
   27400:	and	w20, w0, #0xff
   27404:	mov	w0, #0x1                   	// #1
   27408:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   2740c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   27410:	ldr	x0, [x0, #3976]
   27414:	mrs	x1, tpidr_el0
   27418:	mov	w2, #0x21                  	// #33
   2741c:	str	w2, [x1, x0]
   27420:	mov	x0, #0x0                   	// #0
   27424:	cbz	w19, 27440 <roundevenf128@@GLIBC_2.27+0x1b8>
   27428:	sub	w19, w19, #0x1
   2742c:	mov	x0, #0x1                   	// #1
   27430:	cmp	w20, #0x0
   27434:	lsl	x19, x0, x19
   27438:	sub	x0, x19, #0x1
   2743c:	csneg	x0, x0, x19, eq  // eq = none
   27440:	ldp	x19, x20, [sp, #16]
   27444:	ldp	x29, x30, [sp], #32
   27448:	ret
   2744c:	nop

0000000000027450 <fromfpf128@@GLIBC_2.27>:
   27450:	stp	x29, x30, [sp, #-32]!
   27454:	mov	x29, sp
   27458:	str	q0, [sp, #16]
   2745c:	ldp	x4, x3, [sp, #16]
   27460:	cbz	w1, 27584 <fromfpf128@@GLIBC_2.27+0x134>
   27464:	and	x2, x3, #0x7fffffffffffffff
   27468:	orr	x5, x2, x4
   2746c:	cbz	x5, 27578 <fromfpf128@@GLIBC_2.27+0x128>
   27470:	cmp	w1, #0x40
   27474:	lsr	x6, x3, #63
   27478:	mov	w5, #0x40                  	// #64
   2747c:	csel	w1, w1, w5, ls  // ls = plast
   27480:	lsr	x5, x2, #48
   27484:	mov	x2, x6
   27488:	add	w6, w1, w6
   2748c:	mov	w13, #0xffffc001            	// #-16383
   27490:	sub	w6, w6, #0x2
   27494:	add	w9, w5, w13
   27498:	and	w7, w2, #0xff
   2749c:	cmp	w9, w6
   274a0:	b.gt	2756c <fromfpf128@@GLIBC_2.27+0x11c>
   274a4:	cmn	w9, #0x1
   274a8:	b.lt	27640 <fromfpf128@@GLIBC_2.27+0x1f0>  // b.tstop
   274ac:	and	x2, x3, #0xffffffffffff
   274b0:	mov	w8, #0x70                  	// #112
   274b4:	sub	w8, w8, w9
   274b8:	orr	x2, x2, #0x1000000000000
   274bc:	cmp	w8, #0x40
   274c0:	b.le	275ac <fromfpf128@@GLIBC_2.27+0x15c>
   274c4:	mov	w8, #0x2f                  	// #47
   274c8:	sub	w5, w8, w9
   274cc:	mov	x8, #0x1                   	// #1
   274d0:	mov	w10, #0x30                  	// #48
   274d4:	lsl	x8, x8, x5
   274d8:	sub	x5, x8, #0x1
   274dc:	and	x5, x5, x2
   274e0:	tst	x2, x8
   274e4:	orr	x4, x5, x4
   274e8:	cset	w11, ne  // ne = any
   274ec:	sub	w8, w10, w9
   274f0:	cmp	x4, #0x0
   274f4:	cset	w5, ne  // ne = any
   274f8:	lsr	x2, x2, x8
   274fc:	cmp	w0, #0x3
   27500:	b.eq	27674 <fromfpf128@@GLIBC_2.27+0x224>  // b.none
   27504:	b.gt	27530 <fromfpf128@@GLIBC_2.27+0xe0>
   27508:	cbz	w0, 27610 <fromfpf128@@GLIBC_2.27+0x1c0>
   2750c:	cmp	w0, #0x1
   27510:	b.ne	27550 <fromfpf128@@GLIBC_2.27+0x100>  // b.any
   27514:	tbz	x3, #63, 27620 <fromfpf128@@GLIBC_2.27+0x1d0>
   27518:	cmp	w11, #0x0
   2751c:	ccmp	w5, #0x0, #0x0, eq  // eq = none
   27520:	b.eq	27554 <fromfpf128@@GLIBC_2.27+0x104>  // b.none
   27524:	nop
   27528:	add	x2, x2, #0x1
   2752c:	b	27554 <fromfpf128@@GLIBC_2.27+0x104>
   27530:	cmp	w0, #0x4
   27534:	b.ne	27550 <fromfpf128@@GLIBC_2.27+0x100>  // b.any
   27538:	orr	x0, x2, x5
   2753c:	cmp	w11, #0x0
   27540:	and	x0, x0, #0x1
   27544:	add	x0, x2, x0
   27548:	csel	x2, x0, x2, ne  // ne = any
   2754c:	nop
   27550:	tbz	x3, #63, 27620 <fromfpf128@@GLIBC_2.27+0x1d0>
   27554:	cmp	w9, w6
   27558:	b.ne	27604 <fromfpf128@@GLIBC_2.27+0x1b4>  // b.any
   2755c:	mov	x0, #0x1                   	// #1
   27560:	lsl	x9, x0, x9
   27564:	cmp	x9, x2
   27568:	b.eq	27604 <fromfpf128@@GLIBC_2.27+0x1b4>  // b.none
   2756c:	ldp	x29, x30, [sp], #32
   27570:	mov	w0, w7
   27574:	b	273f0 <roundevenf128@@GLIBC_2.27+0x168>
   27578:	mov	x0, #0x0                   	// #0
   2757c:	ldp	x29, x30, [sp], #32
   27580:	ret
   27584:	mov	w0, #0x1                   	// #1
   27588:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   2758c:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   27590:	ldr	x1, [x1, #3976]
   27594:	mrs	x2, tpidr_el0
   27598:	mov	w3, #0x21                  	// #33
   2759c:	mov	x0, #0x0                   	// #0
   275a0:	str	w3, [x2, x1]
   275a4:	ldp	x29, x30, [sp], #32
   275a8:	ret
   275ac:	mov	w10, #0x6f                  	// #111
   275b0:	sub	w11, w10, w9
   275b4:	mov	x10, #0x1                   	// #1
   275b8:	mov	w12, #0xffffbfd1            	// #-16431
   275bc:	lsl	x10, x10, x11
   275c0:	add	w5, w5, w12
   275c4:	tst	x4, x10
   275c8:	sub	x10, x10, #0x1
   275cc:	cset	w11, ne  // ne = any
   275d0:	tst	x10, x4
   275d4:	lsl	x2, x2, x5
   275d8:	cset	w5, ne  // ne = any
   275dc:	lsr	x4, x4, x8
   275e0:	cmp	w8, #0x40
   275e4:	orr	x4, x2, x4
   275e8:	csel	x2, x4, x2, ne  // ne = any
   275ec:	b	274fc <fromfpf128@@GLIBC_2.27+0xac>
   275f0:	cmp	w0, #0x4
   275f4:	mov	x2, #0x0                   	// #0
   275f8:	b.eq	27550 <fromfpf128@@GLIBC_2.27+0x100>  // b.none
   275fc:	mov	x2, #0x0                   	// #0
   27600:	tbz	x3, #63, 27620 <fromfpf128@@GLIBC_2.27+0x1d0>
   27604:	neg	x0, x2
   27608:	ldp	x29, x30, [sp], #32
   2760c:	ret
   27610:	tbnz	x3, #63, 27554 <fromfpf128@@GLIBC_2.27+0x104>
   27614:	cmp	w11, #0x0
   27618:	ccmp	w5, #0x0, #0x0, eq  // eq = none
   2761c:	b.ne	2766c <fromfpf128@@GLIBC_2.27+0x21c>  // b.any
   27620:	add	w6, w6, #0x1
   27624:	mov	x0, x2
   27628:	mov	x2, #0x1                   	// #1
   2762c:	lsl	x6, x2, x6
   27630:	cmp	x6, x0
   27634:	b.eq	2756c <fromfpf128@@GLIBC_2.27+0x11c>  // b.none
   27638:	ldp	x29, x30, [sp], #32
   2763c:	ret
   27640:	cmp	w0, #0x3
   27644:	b.eq	27680 <fromfpf128@@GLIBC_2.27+0x230>  // b.none
   27648:	b.gt	275f0 <fromfpf128@@GLIBC_2.27+0x1a0>
   2764c:	cbz	w0, 27664 <fromfpf128@@GLIBC_2.27+0x214>
   27650:	cmp	w0, #0x1
   27654:	b.ne	275fc <fromfpf128@@GLIBC_2.27+0x1ac>  // b.any
   27658:	mov	x2, #0x0                   	// #0
   2765c:	tbz	x3, #63, 27620 <fromfpf128@@GLIBC_2.27+0x1d0>
   27660:	b	27528 <fromfpf128@@GLIBC_2.27+0xd8>
   27664:	mov	x2, #0x0                   	// #0
   27668:	tbnz	x3, #63, 27554 <fromfpf128@@GLIBC_2.27+0x104>
   2766c:	add	x2, x2, #0x1
   27670:	b	27620 <fromfpf128@@GLIBC_2.27+0x1d0>
   27674:	and	x11, x11, #0xff
   27678:	add	x2, x2, x11
   2767c:	b	27550 <fromfpf128@@GLIBC_2.27+0x100>
   27680:	mov	x2, #0x0                   	// #0
   27684:	b	27550 <fromfpf128@@GLIBC_2.27+0x100>

0000000000027688 <ufromfpf128@@GLIBC_2.27>:
   27688:	stp	x29, x30, [sp, #-48]!
   2768c:	mov	x29, sp
   27690:	stp	x19, x20, [sp, #16]
   27694:	mov	w19, w1
   27698:	str	q0, [sp, #32]
   2769c:	ldp	x3, x2, [sp, #32]
   276a0:	cbz	w1, 2778c <ufromfpf128@@GLIBC_2.27+0x104>
   276a4:	mov	x1, x2
   276a8:	and	x2, x2, #0x7fffffffffffffff
   276ac:	mov	w5, w0
   276b0:	orr	x0, x2, x3
   276b4:	cbz	x0, 27778 <ufromfpf128@@GLIBC_2.27+0xf0>
   276b8:	cmp	w19, #0x40
   276bc:	lsr	x4, x2, #48
   276c0:	mov	w0, #0x40                  	// #64
   276c4:	mov	w11, #0xffffc001            	// #-16383
   276c8:	csel	w20, w19, w0, ls  // ls = plast
   276cc:	add	w6, w4, w11
   276d0:	tbnz	x1, #63, 27784 <ufromfpf128@@GLIBC_2.27+0xfc>
   276d4:	sub	w7, w20, #0x1
   276d8:	cmp	w6, w7
   276dc:	b.gt	277fc <ufromfpf128@@GLIBC_2.27+0x174>
   276e0:	cmn	w6, #0x1
   276e4:	b.lt	27860 <ufromfpf128@@GLIBC_2.27+0x1d8>  // b.tstop
   276e8:	and	x2, x1, #0xffffffffffff
   276ec:	mov	w8, #0x70                  	// #112
   276f0:	sub	w8, w8, w6
   276f4:	orr	x2, x2, #0x1000000000000
   276f8:	cmp	w8, #0x40
   276fc:	b.le	277b8 <ufromfpf128@@GLIBC_2.27+0x130>
   27700:	mov	w8, #0x2f                  	// #47
   27704:	sub	w4, w8, w6
   27708:	mov	x8, #0x1                   	// #1
   2770c:	mov	w0, #0x30                  	// #48
   27710:	lsl	x8, x8, x4
   27714:	sub	x4, x8, #0x1
   27718:	and	x4, x4, x2
   2771c:	tst	x2, x8
   27720:	orr	x3, x4, x3
   27724:	cset	w9, ne  // ne = any
   27728:	sub	w0, w0, w6
   2772c:	cmp	x3, #0x0
   27730:	cset	w4, ne  // ne = any
   27734:	lsr	x0, x2, x0
   27738:	cmp	w5, #0x3
   2773c:	b.eq	278bc <ufromfpf128@@GLIBC_2.27+0x234>  // b.none
   27740:	b.gt	27838 <ufromfpf128@@GLIBC_2.27+0x1b0>
   27744:	cbz	w5, 278e8 <ufromfpf128@@GLIBC_2.27+0x260>
   27748:	cmp	w5, #0x1
   2774c:	b.ne	27854 <ufromfpf128@@GLIBC_2.27+0x1cc>  // b.any
   27750:	tbnz	x1, #63, 278d4 <ufromfpf128@@GLIBC_2.27+0x24c>
   27754:	nop
   27758:	cmp	w7, #0x3f
   2775c:	b.eq	27898 <ufromfpf128@@GLIBC_2.27+0x210>  // b.none
   27760:	add	w7, w7, #0x1
   27764:	mov	x1, #0x1                   	// #1
   27768:	lsl	x7, x1, x7
   2776c:	cmp	x7, x0
   27770:	cset	w1, eq  // eq = none
   27774:	cbnz	w1, 277fc <ufromfpf128@@GLIBC_2.27+0x174>
   27778:	ldp	x19, x20, [sp, #16]
   2777c:	ldp	x29, x30, [sp], #48
   27780:	ret
   27784:	mov	w7, #0xffffffff            	// #-1
   27788:	tbnz	w6, #31, 276e0 <ufromfpf128@@GLIBC_2.27+0x58>
   2778c:	mov	w0, #0x1                   	// #1
   27790:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   27794:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   27798:	ldr	x1, [x1, #3976]
   2779c:	mrs	x2, tpidr_el0
   277a0:	mov	w3, #0x21                  	// #33
   277a4:	mov	x0, #0x0                   	// #0
   277a8:	ldp	x19, x20, [sp, #16]
   277ac:	str	w3, [x2, x1]
   277b0:	ldp	x29, x30, [sp], #48
   277b4:	ret
   277b8:	mov	w0, #0x6f                  	// #111
   277bc:	sub	w9, w0, w6
   277c0:	mov	x0, #0x1                   	// #1
   277c4:	mov	w10, #0xffffbfd1            	// #-16431
   277c8:	lsl	x0, x0, x9
   277cc:	add	w4, w4, w10
   277d0:	tst	x3, x0
   277d4:	sub	x0, x0, #0x1
   277d8:	cset	w9, ne  // ne = any
   277dc:	tst	x0, x3
   277e0:	lsl	x0, x2, x4
   277e4:	cset	w4, ne  // ne = any
   277e8:	lsr	x3, x3, x8
   277ec:	cmp	w8, #0x40
   277f0:	orr	x3, x0, x3
   277f4:	csel	x0, x3, x0, ne  // ne = any
   277f8:	b	27738 <ufromfpf128@@GLIBC_2.27+0xb0>
   277fc:	mov	w0, #0x1                   	// #1
   27800:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   27804:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   27808:	ldr	x0, [x0, #3976]
   2780c:	mrs	x1, tpidr_el0
   27810:	mov	w2, #0x21                  	// #33
   27814:	cmp	w19, #0x3f
   27818:	str	w2, [x1, x0]
   2781c:	b.hi	278cc <ufromfpf128@@GLIBC_2.27+0x244>  // b.pmore
   27820:	mov	x0, #0x1                   	// #1
   27824:	lsl	x0, x0, x20
   27828:	sub	x0, x0, #0x1
   2782c:	ldp	x19, x20, [sp, #16]
   27830:	ldp	x29, x30, [sp], #48
   27834:	ret
   27838:	cmp	w5, #0x4
   2783c:	b.ne	27854 <ufromfpf128@@GLIBC_2.27+0x1cc>  // b.any
   27840:	orr	x4, x0, x4
   27844:	cmp	w9, #0x0
   27848:	and	x4, x4, #0x1
   2784c:	add	x4, x0, x4
   27850:	csel	x0, x4, x0, ne  // ne = any
   27854:	tbz	x1, #63, 27758 <ufromfpf128@@GLIBC_2.27+0xd0>
   27858:	cbnz	x0, 2778c <ufromfpf128@@GLIBC_2.27+0x104>
   2785c:	b	27778 <ufromfpf128@@GLIBC_2.27+0xf0>
   27860:	cmp	w5, #0x3
   27864:	mov	x0, #0x0                   	// #0
   27868:	b.eq	27890 <ufromfpf128@@GLIBC_2.27+0x208>  // b.none
   2786c:	b.gt	27890 <ufromfpf128@@GLIBC_2.27+0x208>
   27870:	cbz	w5, 278b0 <ufromfpf128@@GLIBC_2.27+0x228>
   27874:	cmp	w5, #0x1
   27878:	b.ne	27890 <ufromfpf128@@GLIBC_2.27+0x208>  // b.any
   2787c:	tbz	x1, #63, 27758 <ufromfpf128@@GLIBC_2.27+0xd0>
   27880:	add	x0, x0, #0x1
   27884:	nop
   27888:	tbz	x1, #63, 27758 <ufromfpf128@@GLIBC_2.27+0xd0>
   2788c:	b	27858 <ufromfpf128@@GLIBC_2.27+0x1d0>
   27890:	tbz	x1, #63, 27758 <ufromfpf128@@GLIBC_2.27+0xd0>
   27894:	b	27778 <ufromfpf128@@GLIBC_2.27+0xf0>
   27898:	cmp	w6, #0x3f
   2789c:	cset	w1, eq  // eq = none
   278a0:	cmp	x0, #0x0
   278a4:	csel	w1, w1, wzr, eq  // eq = none
   278a8:	cbz	w1, 27778 <ufromfpf128@@GLIBC_2.27+0xf0>
   278ac:	b	277fc <ufromfpf128@@GLIBC_2.27+0x174>
   278b0:	tbnz	x1, #63, 27778 <ufromfpf128@@GLIBC_2.27+0xf0>
   278b4:	add	x0, x0, #0x1
   278b8:	b	27888 <ufromfpf128@@GLIBC_2.27+0x200>
   278bc:	and	x9, x9, #0xff
   278c0:	add	x0, x0, x9
   278c4:	tbz	x1, #63, 27758 <ufromfpf128@@GLIBC_2.27+0xd0>
   278c8:	b	27858 <ufromfpf128@@GLIBC_2.27+0x1d0>
   278cc:	mov	x0, #0xffffffffffffffff    	// #-1
   278d0:	b	27778 <ufromfpf128@@GLIBC_2.27+0xf0>
   278d4:	cmp	w9, #0x0
   278d8:	ccmp	w4, #0x0, #0x0, eq  // eq = none
   278dc:	b.ne	27880 <ufromfpf128@@GLIBC_2.27+0x1f8>  // b.any
   278e0:	cbnz	x0, 2778c <ufromfpf128@@GLIBC_2.27+0x104>
   278e4:	b	27778 <ufromfpf128@@GLIBC_2.27+0xf0>
   278e8:	tbnz	x1, #63, 27858 <ufromfpf128@@GLIBC_2.27+0x1d0>
   278ec:	cmp	w9, #0x0
   278f0:	ccmp	w4, #0x0, #0x0, eq  // eq = none
   278f4:	b.eq	27758 <ufromfpf128@@GLIBC_2.27+0xd0>  // b.none
   278f8:	add	x0, x0, #0x1
   278fc:	b	27888 <ufromfpf128@@GLIBC_2.27+0x200>
   27900:	stp	x29, x30, [sp, #-32]!
   27904:	mov	x29, sp
   27908:	stp	x19, x20, [sp, #16]
   2790c:	mov	w19, w1
   27910:	and	w20, w0, #0xff
   27914:	mov	w0, #0x1                   	// #1
   27918:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   2791c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   27920:	ldr	x0, [x0, #3976]
   27924:	mrs	x1, tpidr_el0
   27928:	mov	w2, #0x21                  	// #33
   2792c:	str	w2, [x1, x0]
   27930:	mov	x0, #0x0                   	// #0
   27934:	cbz	w19, 27950 <ufromfpf128@@GLIBC_2.27+0x2c8>
   27938:	sub	w19, w19, #0x1
   2793c:	mov	x0, #0x1                   	// #1
   27940:	cmp	w20, #0x0
   27944:	lsl	x19, x0, x19
   27948:	sub	x0, x19, #0x1
   2794c:	csneg	x0, x0, x19, eq  // eq = none
   27950:	ldp	x19, x20, [sp, #16]
   27954:	ldp	x29, x30, [sp], #32
   27958:	ret
   2795c:	nop

0000000000027960 <fromfpxf128@@GLIBC_2.27>:
   27960:	stp	x29, x30, [sp, #-32]!
   27964:	mov	x29, sp
   27968:	str	q0, [sp, #16]
   2796c:	ldp	x3, x2, [sp, #16]
   27970:	cbz	w1, 27a50 <fromfpxf128@@GLIBC_2.27+0xf0>
   27974:	and	x4, x2, #0x7fffffffffffffff
   27978:	orr	x5, x4, x3
   2797c:	cbz	x5, 27a44 <fromfpxf128@@GLIBC_2.27+0xe4>
   27980:	cmp	w1, #0x40
   27984:	lsr	x6, x2, #63
   27988:	mov	w5, #0x40                  	// #64
   2798c:	csel	w1, w1, w5, ls  // ls = plast
   27990:	lsr	x5, x4, #48
   27994:	mov	x4, x6
   27998:	add	w6, w1, w6
   2799c:	mov	w13, #0xffffc001            	// #-16383
   279a0:	sub	w6, w6, #0x2
   279a4:	add	w10, w5, w13
   279a8:	and	w7, w4, #0xff
   279ac:	cmp	w10, w6
   279b0:	b.gt	27a38 <fromfpxf128@@GLIBC_2.27+0xd8>
   279b4:	cmn	w10, #0x1
   279b8:	b.lt	27b58 <fromfpxf128@@GLIBC_2.27+0x1f8>  // b.tstop
   279bc:	and	x4, x2, #0xffffffffffff
   279c0:	mov	w8, #0x70                  	// #112
   279c4:	sub	w8, w8, w10
   279c8:	orr	x4, x4, #0x1000000000000
   279cc:	cmp	w8, #0x40
   279d0:	b.le	27a78 <fromfpxf128@@GLIBC_2.27+0x118>
   279d4:	mov	w8, #0x2f                  	// #47
   279d8:	sub	w5, w8, w10
   279dc:	mov	x8, #0x1                   	// #1
   279e0:	mov	w11, #0x30                  	// #48
   279e4:	lsl	x8, x8, x5
   279e8:	sub	x5, x8, #0x1
   279ec:	and	x5, x5, x4
   279f0:	tst	x4, x8
   279f4:	orr	x3, x5, x3
   279f8:	cset	w9, ne  // ne = any
   279fc:	sub	w8, w11, w10
   27a00:	cmp	x3, #0x0
   27a04:	cset	w5, ne  // ne = any
   27a08:	lsr	x4, x4, x8
   27a0c:	cmp	w0, #0x3
   27a10:	b.eq	27bc4 <fromfpxf128@@GLIBC_2.27+0x264>  // b.none
   27a14:	b.gt	27b1c <fromfpxf128@@GLIBC_2.27+0x1bc>
   27a18:	cbz	w0, 27ac8 <fromfpxf128@@GLIBC_2.27+0x168>
   27a1c:	cmp	w0, #0x1
   27a20:	b.ne	27b38 <fromfpxf128@@GLIBC_2.27+0x1d8>  // b.any
   27a24:	tbz	x2, #63, 27ad8 <fromfpxf128@@GLIBC_2.27+0x178>
   27a28:	cmp	w9, #0x0
   27a2c:	ccmp	w5, #0x0, #0x0, eq  // eq = none
   27a30:	cinc	x4, x4, ne  // ne = any
   27a34:	b	27b3c <fromfpxf128@@GLIBC_2.27+0x1dc>
   27a38:	ldp	x29, x30, [sp], #32
   27a3c:	mov	w0, w7
   27a40:	b	27900 <ufromfpf128@@GLIBC_2.27+0x278>
   27a44:	mov	x0, #0x0                   	// #0
   27a48:	ldp	x29, x30, [sp], #32
   27a4c:	ret
   27a50:	mov	w0, #0x1                   	// #1
   27a54:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   27a58:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   27a5c:	ldr	x1, [x1, #3976]
   27a60:	mrs	x2, tpidr_el0
   27a64:	mov	w3, #0x21                  	// #33
   27a68:	mov	x0, #0x0                   	// #0
   27a6c:	str	w3, [x2, x1]
   27a70:	ldp	x29, x30, [sp], #32
   27a74:	ret
   27a78:	mov	w9, #0x6f                  	// #111
   27a7c:	sub	w11, w9, w10
   27a80:	mov	x9, #0x1                   	// #1
   27a84:	mov	w12, #0xffffbfd1            	// #-16431
   27a88:	lsl	x9, x9, x11
   27a8c:	add	w5, w5, w12
   27a90:	tst	x3, x9
   27a94:	sub	x11, x9, #0x1
   27a98:	cset	w9, ne  // ne = any
   27a9c:	tst	x11, x3
   27aa0:	lsl	x4, x4, x5
   27aa4:	cset	w5, ne  // ne = any
   27aa8:	lsr	x3, x3, x8
   27aac:	cmp	w8, #0x40
   27ab0:	orr	x3, x4, x3
   27ab4:	csel	x4, x3, x4, ne  // ne = any
   27ab8:	b	27a0c <fromfpxf128@@GLIBC_2.27+0xac>
   27abc:	mov	w5, #0x1                   	// #1
   27ac0:	mov	w9, #0x0                   	// #0
   27ac4:	mov	x4, #0x0                   	// #0
   27ac8:	tbnz	x2, #63, 27b3c <fromfpxf128@@GLIBC_2.27+0x1dc>
   27acc:	cmp	w9, #0x0
   27ad0:	ccmp	w5, #0x0, #0x0, eq  // eq = none
   27ad4:	cinc	x4, x4, ne  // ne = any
   27ad8:	add	w6, w6, #0x1
   27adc:	mov	x0, #0x1                   	// #1
   27ae0:	lsl	x6, x0, x6
   27ae4:	cmp	x6, x4
   27ae8:	cset	w0, eq  // eq = none
   27aec:	cbnz	w0, 27a38 <fromfpxf128@@GLIBC_2.27+0xd8>
   27af0:	cmp	w5, #0x0
   27af4:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   27af8:	b.eq	27b08 <fromfpxf128@@GLIBC_2.27+0x1a8>  // b.none
   27afc:	movi	v1.2s, #0x80, lsl #16
   27b00:	fmov	s0, #1.000000000000000000e+00
   27b04:	fadd	s0, s0, s1
   27b08:	mov	x0, x4
   27b0c:	tbz	x2, #63, 27a48 <fromfpxf128@@GLIBC_2.27+0xe8>
   27b10:	neg	x0, x4
   27b14:	ldp	x29, x30, [sp], #32
   27b18:	ret
   27b1c:	cmp	w0, #0x4
   27b20:	b.ne	27b38 <fromfpxf128@@GLIBC_2.27+0x1d8>  // b.any
   27b24:	orr	x0, x4, x5
   27b28:	cmp	w9, #0x0
   27b2c:	and	x0, x0, #0x1
   27b30:	add	x0, x4, x0
   27b34:	csel	x4, x0, x4, ne  // ne = any
   27b38:	tbz	x2, #63, 27ad8 <fromfpxf128@@GLIBC_2.27+0x178>
   27b3c:	cmp	w10, w6
   27b40:	b.eq	27b9c <fromfpxf128@@GLIBC_2.27+0x23c>  // b.none
   27b44:	cmp	w9, #0x0
   27b48:	ccmp	w5, #0x0, #0x0, eq  // eq = none
   27b4c:	b.ne	27afc <fromfpxf128@@GLIBC_2.27+0x19c>  // b.any
   27b50:	neg	x0, x4
   27b54:	b	27b14 <fromfpxf128@@GLIBC_2.27+0x1b4>
   27b58:	cmp	w0, #0x3
   27b5c:	b.eq	27b8c <fromfpxf128@@GLIBC_2.27+0x22c>  // b.none
   27b60:	b.gt	27b84 <fromfpxf128@@GLIBC_2.27+0x224>
   27b64:	cbz	w0, 27abc <fromfpxf128@@GLIBC_2.27+0x15c>
   27b68:	cmp	w0, #0x1
   27b6c:	b.ne	27bb0 <fromfpxf128@@GLIBC_2.27+0x250>  // b.any
   27b70:	mov	w5, w0
   27b74:	mov	w9, #0x0                   	// #0
   27b78:	mov	x4, #0x0                   	// #0
   27b7c:	tbz	x2, #63, 27ad8 <fromfpxf128@@GLIBC_2.27+0x178>
   27b80:	b	27a28 <fromfpxf128@@GLIBC_2.27+0xc8>
   27b84:	cmp	w0, #0x4
   27b88:	b.ne	27bb0 <fromfpxf128@@GLIBC_2.27+0x250>  // b.any
   27b8c:	mov	x4, #0x0                   	// #0
   27b90:	mov	w5, #0x1                   	// #1
   27b94:	mov	w9, #0x0                   	// #0
   27b98:	b	27b38 <fromfpxf128@@GLIBC_2.27+0x1d8>
   27b9c:	mov	x0, #0x1                   	// #1
   27ba0:	lsl	x10, x0, x10
   27ba4:	cmp	x10, x4
   27ba8:	cset	w0, ne  // ne = any
   27bac:	b	27aec <fromfpxf128@@GLIBC_2.27+0x18c>
   27bb0:	mov	x4, #0x0                   	// #0
   27bb4:	tbnz	x2, #63, 27afc <fromfpxf128@@GLIBC_2.27+0x19c>
   27bb8:	mov	w5, #0x1                   	// #1
   27bbc:	mov	w9, #0x0                   	// #0
   27bc0:	b	27ad8 <fromfpxf128@@GLIBC_2.27+0x178>
   27bc4:	and	x0, x9, #0xff
   27bc8:	add	x4, x4, x0
   27bcc:	b	27b38 <fromfpxf128@@GLIBC_2.27+0x1d8>

0000000000027bd0 <ufromfpxf128@@GLIBC_2.27>:
   27bd0:	stp	x29, x30, [sp, #-48]!
   27bd4:	mov	x29, sp
   27bd8:	stp	x19, x20, [sp, #16]
   27bdc:	mov	w19, w1
   27be0:	str	q0, [sp, #32]
   27be4:	ldp	x3, x2, [sp, #32]
   27be8:	cbz	w1, 27ce0 <ufromfpxf128@@GLIBC_2.27+0x110>
   27bec:	mov	x1, x2
   27bf0:	and	x2, x2, #0x7fffffffffffffff
   27bf4:	mov	w5, w0
   27bf8:	orr	x0, x2, x3
   27bfc:	cbz	x0, 27ccc <ufromfpxf128@@GLIBC_2.27+0xfc>
   27c00:	cmp	w19, #0x40
   27c04:	lsr	x4, x2, #48
   27c08:	mov	w0, #0x40                  	// #64
   27c0c:	mov	w11, #0xffffc001            	// #-16383
   27c10:	csel	w20, w19, w0, ls  // ls = plast
   27c14:	add	w8, w4, w11
   27c18:	tbnz	x1, #63, 27cd8 <ufromfpxf128@@GLIBC_2.27+0x108>
   27c1c:	sub	w9, w20, #0x1
   27c20:	cmp	w8, w9
   27c24:	b.gt	27d50 <ufromfpxf128@@GLIBC_2.27+0x180>
   27c28:	cmn	w8, #0x1
   27c2c:	b.lt	27dd4 <ufromfpxf128@@GLIBC_2.27+0x204>  // b.tstop
   27c30:	and	x2, x1, #0xffffffffffff
   27c34:	mov	w6, #0x70                  	// #112
   27c38:	sub	w6, w6, w8
   27c3c:	orr	x2, x2, #0x1000000000000
   27c40:	cmp	w6, #0x40
   27c44:	b.le	27d0c <ufromfpxf128@@GLIBC_2.27+0x13c>
   27c48:	mov	w6, #0x2f                  	// #47
   27c4c:	sub	w4, w6, w8
   27c50:	mov	x6, #0x1                   	// #1
   27c54:	mov	w0, #0x30                  	// #48
   27c58:	lsl	x6, x6, x4
   27c5c:	sub	x4, x6, #0x1
   27c60:	and	x4, x4, x2
   27c64:	tst	x2, x6
   27c68:	orr	x3, x4, x3
   27c6c:	cset	w7, ne  // ne = any
   27c70:	sub	w0, w0, w8
   27c74:	cmp	x3, #0x0
   27c78:	cset	w4, ne  // ne = any
   27c7c:	lsr	x0, x2, x0
   27c80:	cmp	w5, #0x3
   27c84:	b.eq	27e58 <ufromfpxf128@@GLIBC_2.27+0x288>  // b.none
   27c88:	b.gt	27dac <ufromfpxf128@@GLIBC_2.27+0x1dc>
   27c8c:	cbz	w5, 27e70 <ufromfpxf128@@GLIBC_2.27+0x2a0>
   27c90:	cmp	w5, #0x1
   27c94:	b.ne	27dc8 <ufromfpxf128@@GLIBC_2.27+0x1f8>  // b.any
   27c98:	tbnz	x1, #63, 27e28 <ufromfpxf128@@GLIBC_2.27+0x258>
   27c9c:	nop
   27ca0:	cmp	w9, #0x3f
   27ca4:	b.eq	27e14 <ufromfpxf128@@GLIBC_2.27+0x244>  // b.none
   27ca8:	add	w9, w9, #0x1
   27cac:	mov	x1, #0x1                   	// #1
   27cb0:	lsl	x1, x1, x9
   27cb4:	cmp	x1, x0
   27cb8:	cset	w1, eq  // eq = none
   27cbc:	cbnz	w1, 27d50 <ufromfpxf128@@GLIBC_2.27+0x180>
   27cc0:	cmp	w4, #0x0
   27cc4:	ccmp	w7, #0x0, #0x0, eq  // eq = none
   27cc8:	b.ne	27d94 <ufromfpxf128@@GLIBC_2.27+0x1c4>  // b.any
   27ccc:	ldp	x19, x20, [sp, #16]
   27cd0:	ldp	x29, x30, [sp], #48
   27cd4:	ret
   27cd8:	mov	w9, #0xffffffff            	// #-1
   27cdc:	tbnz	w8, #31, 27c28 <ufromfpxf128@@GLIBC_2.27+0x58>
   27ce0:	mov	w0, #0x1                   	// #1
   27ce4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   27ce8:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   27cec:	ldr	x1, [x1, #3976]
   27cf0:	mrs	x2, tpidr_el0
   27cf4:	mov	w3, #0x21                  	// #33
   27cf8:	mov	x0, #0x0                   	// #0
   27cfc:	ldp	x19, x20, [sp, #16]
   27d00:	str	w3, [x2, x1]
   27d04:	ldp	x29, x30, [sp], #48
   27d08:	ret
   27d0c:	mov	w0, #0x6f                  	// #111
   27d10:	sub	w7, w0, w8
   27d14:	mov	x0, #0x1                   	// #1
   27d18:	mov	w10, #0xffffbfd1            	// #-16431
   27d1c:	lsl	x0, x0, x7
   27d20:	add	w4, w4, w10
   27d24:	tst	x3, x0
   27d28:	sub	x0, x0, #0x1
   27d2c:	cset	w7, ne  // ne = any
   27d30:	tst	x0, x3
   27d34:	lsl	x0, x2, x4
   27d38:	cset	w4, ne  // ne = any
   27d3c:	lsr	x3, x3, x6
   27d40:	cmp	w6, #0x40
   27d44:	orr	x3, x0, x3
   27d48:	csel	x0, x3, x0, ne  // ne = any
   27d4c:	b	27c80 <ufromfpxf128@@GLIBC_2.27+0xb0>
   27d50:	mov	w0, #0x1                   	// #1
   27d54:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   27d58:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   27d5c:	ldr	x0, [x0, #3976]
   27d60:	mrs	x1, tpidr_el0
   27d64:	mov	w2, #0x21                  	// #33
   27d68:	cmp	w19, #0x3f
   27d6c:	str	w2, [x1, x0]
   27d70:	b.hi	27e68 <ufromfpxf128@@GLIBC_2.27+0x298>  // b.pmore
   27d74:	mov	x0, #0x1                   	// #1
   27d78:	lsl	x0, x0, x20
   27d7c:	sub	x0, x0, #0x1
   27d80:	ldp	x19, x20, [sp, #16]
   27d84:	ldp	x29, x30, [sp], #48
   27d88:	ret
   27d8c:	tbz	x1, #63, 27e3c <ufromfpxf128@@GLIBC_2.27+0x26c>
   27d90:	mov	x0, #0x0                   	// #0
   27d94:	movi	v1.2s, #0x80, lsl #16
   27d98:	fmov	s0, #1.000000000000000000e+00
   27d9c:	fadd	s0, s0, s1
   27da0:	ldp	x19, x20, [sp, #16]
   27da4:	ldp	x29, x30, [sp], #48
   27da8:	ret
   27dac:	cmp	w5, #0x4
   27db0:	b.ne	27dc8 <ufromfpxf128@@GLIBC_2.27+0x1f8>  // b.any
   27db4:	orr	x2, x0, x4
   27db8:	cmp	w7, #0x0
   27dbc:	and	x2, x2, #0x1
   27dc0:	add	x2, x0, x2
   27dc4:	csel	x0, x2, x0, ne  // ne = any
   27dc8:	tbz	x1, #63, 27ca0 <ufromfpxf128@@GLIBC_2.27+0xd0>
   27dcc:	cbnz	x0, 27ce0 <ufromfpxf128@@GLIBC_2.27+0x110>
   27dd0:	b	27cc0 <ufromfpxf128@@GLIBC_2.27+0xf0>
   27dd4:	cmp	w5, #0x3
   27dd8:	b.eq	27e00 <ufromfpxf128@@GLIBC_2.27+0x230>  // b.none
   27ddc:	b.gt	27e00 <ufromfpxf128@@GLIBC_2.27+0x230>
   27de0:	cbz	w5, 27d8c <ufromfpxf128@@GLIBC_2.27+0x1bc>
   27de4:	cmp	w5, #0x1
   27de8:	b.ne	27e00 <ufromfpxf128@@GLIBC_2.27+0x230>  // b.any
   27dec:	mov	w4, w5
   27df0:	mov	w7, #0x0                   	// #0
   27df4:	mov	x0, #0x0                   	// #0
   27df8:	tbz	x1, #63, 27ca0 <ufromfpxf128@@GLIBC_2.27+0xd0>
   27dfc:	b	27e28 <ufromfpxf128@@GLIBC_2.27+0x258>
   27e00:	tbnz	x1, #63, 27d90 <ufromfpxf128@@GLIBC_2.27+0x1c0>
   27e04:	mov	w4, #0x1                   	// #1
   27e08:	mov	w7, #0x0                   	// #0
   27e0c:	mov	x0, #0x0                   	// #0
   27e10:	b	27ca0 <ufromfpxf128@@GLIBC_2.27+0xd0>
   27e14:	cmp	w8, #0x3f
   27e18:	cset	w1, eq  // eq = none
   27e1c:	cmp	x0, #0x0
   27e20:	csel	w1, w1, wzr, eq  // eq = none
   27e24:	b	27cbc <ufromfpxf128@@GLIBC_2.27+0xec>
   27e28:	cmp	w7, #0x0
   27e2c:	ccmp	w4, #0x0, #0x0, eq  // eq = none
   27e30:	cinc	x0, x0, ne  // ne = any
   27e34:	cbnz	x0, 27ce0 <ufromfpxf128@@GLIBC_2.27+0x110>
   27e38:	b	27cc0 <ufromfpxf128@@GLIBC_2.27+0xf0>
   27e3c:	mov	w4, #0x1                   	// #1
   27e40:	mov	w7, #0x0                   	// #0
   27e44:	mov	x0, #0x0                   	// #0
   27e48:	cmp	w7, #0x0
   27e4c:	ccmp	w4, #0x0, #0x0, eq  // eq = none
   27e50:	cinc	x0, x0, ne  // ne = any
   27e54:	b	27ca0 <ufromfpxf128@@GLIBC_2.27+0xd0>
   27e58:	and	x2, x7, #0xff
   27e5c:	add	x0, x0, x2
   27e60:	tbz	x1, #63, 27ca0 <ufromfpxf128@@GLIBC_2.27+0xd0>
   27e64:	b	27dcc <ufromfpxf128@@GLIBC_2.27+0x1fc>
   27e68:	mov	x0, #0xffffffffffffffff    	// #-1
   27e6c:	b	27ccc <ufromfpxf128@@GLIBC_2.27+0xfc>
   27e70:	tbz	x1, #63, 27e48 <ufromfpxf128@@GLIBC_2.27+0x278>
   27e74:	cbnz	x0, 27ce0 <ufromfpxf128@@GLIBC_2.27+0x110>
   27e78:	b	27cc0 <ufromfpxf128@@GLIBC_2.27+0xf0>
   27e7c:	nop

0000000000027e80 <cargf128@@GLIBC_2.27>:
   27e80:	mov	v2.16b, v0.16b
   27e84:	mov	v0.16b, v1.16b
   27e88:	mov	v1.16b, v2.16b
   27e8c:	b	c148 <atan2f128@@GLIBC_2.27>

0000000000027e90 <conjf128@@GLIBC_2.27>:
   27e90:	sub	sp, sp, #0x10
   27e94:	str	q1, [sp]
   27e98:	ldr	x1, [sp, #8]
   27e9c:	eor	x1, x1, #0x8000000000000000
   27ea0:	str	x1, [sp, #8]
   27ea4:	ldr	q1, [sp]
   27ea8:	add	sp, sp, #0x10
   27eac:	ret

0000000000027eb0 <cimagf128@@GLIBC_2.27>:
   27eb0:	mov	v0.16b, v1.16b
   27eb4:	ret

0000000000027eb8 <crealf128@@GLIBC_2.27>:
   27eb8:	ret
   27ebc:	nop

0000000000027ec0 <cabsf128@@GLIBC_2.27>:
   27ec0:	b	c788 <hypotf128@@GLIBC_2.27>
   27ec4:	nop

0000000000027ec8 <cacosf128@@GLIBC_2.27>:
   27ec8:	stp	x29, x30, [sp, #-144]!
   27ecc:	mov	x29, sp
   27ed0:	stp	x19, x20, [sp, #16]
   27ed4:	stp	x23, x24, [sp, #48]
   27ed8:	str	q0, [sp, #96]
   27edc:	ldp	x19, x24, [sp, #96]
   27ee0:	stp	x25, x26, [sp, #64]
   27ee4:	str	q1, [sp, #128]
   27ee8:	ldp	x25, x26, [sp, #128]
   27eec:	stp	x21, x22, [sp, #32]
   27ef0:	and	x22, x24, #0x7fffffffffffffff
   27ef4:	stp	x22, x19, [sp, #104]
   27ef8:	mov	x20, x19
   27efc:	str	x22, [sp, #120]
   27f00:	ldr	q1, [sp, #96]
   27f04:	mov	x21, x25
   27f08:	ldr	q0, [sp, #112]
   27f0c:	mov	x23, x26
   27f10:	stp	x27, x28, [sp, #80]
   27f14:	mov	x28, x24
   27f18:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   27f1c:	cbnz	w0, 2810c <cacosf128@@GLIBC_2.27+0x244>
   27f20:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   27f24:	add	x0, x0, #0x300
   27f28:	stp	x19, x22, [sp, #96]
   27f2c:	ldr	q1, [x0]
   27f30:	ldr	q0, [sp, #96]
   27f34:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   27f38:	cbnz	w0, 2804c <cacosf128@@GLIBC_2.27+0x184>
   27f3c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   27f40:	add	x0, x0, #0x300
   27f44:	stp	x19, x22, [sp, #96]
   27f48:	ldr	q1, [x0]
   27f4c:	ldr	q0, [sp, #96]
   27f50:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   27f54:	cmp	w0, #0x0
   27f58:	b.le	2804c <cacosf128@@GLIBC_2.27+0x184>
   27f5c:	mov	w0, #0x1                   	// #1
   27f60:	str	w0, [sp, #128]
   27f64:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   27f68:	add	x0, x0, #0x300
   27f6c:	and	x22, x23, #0x7fffffffffffffff
   27f70:	stp	x21, x22, [sp, #96]
   27f74:	mov	w27, #0x1                   	// #1
   27f78:	ldr	q1, [x0]
   27f7c:	ldr	q0, [sp, #96]
   27f80:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   27f84:	cbnz	w0, 27fa8 <cacosf128@@GLIBC_2.27+0xe0>
   27f88:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   27f8c:	add	x0, x0, #0x300
   27f90:	stp	x21, x22, [sp, #96]
   27f94:	ldr	q1, [x0]
   27f98:	ldr	q0, [sp, #96]
   27f9c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   27fa0:	cmp	w0, #0x0
   27fa4:	cset	w27, le
   27fa8:	stp	x21, x22, [sp, #96]
   27fac:	stp	x21, x22, [sp, #112]
   27fb0:	ldr	q1, [sp, #96]
   27fb4:	ldr	q0, [sp, #112]
   27fb8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   27fbc:	cmp	w0, #0x0
   27fc0:	cset	w0, eq  // eq = none
   27fc4:	tst	w0, w27
   27fc8:	b.ne	28094 <cacosf128@@GLIBC_2.27+0x1cc>  // b.any
   27fcc:	stp	x19, x24, [sp, #96]
   27fd0:	stp	x25, x26, [sp, #112]
   27fd4:	ldr	q0, [sp, #96]
   27fd8:	ldr	q1, [sp, #112]
   27fdc:	bl	28c68 <casinf128@@GLIBC_2.27>
   27fe0:	str	q1, [sp, #96]
   27fe4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   27fe8:	add	x0, x0, #0xa60
   27fec:	ldp	x1, x19, [sp, #96]
   27ff0:	mov	v2.16b, v0.16b
   27ff4:	ldr	q0, [x0]
   27ff8:	mov	v1.16b, v2.16b
   27ffc:	mov	x20, x1
   28000:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   28004:	movi	v1.2d, #0x0
   28008:	str	q0, [sp, #96]
   2800c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   28010:	ldr	q2, [sp, #96]
   28014:	cbnz	w0, 2801c <cacosf128@@GLIBC_2.27+0x154>
   28018:	movi	v2.2d, #0x0
   2801c:	eor	x0, x19, #0x8000000000000000
   28020:	mov	v0.16b, v2.16b
   28024:	mov	x1, x20
   28028:	stp	x1, x0, [sp, #96]
   2802c:	ldp	x19, x20, [sp, #16]
   28030:	ldp	x21, x22, [sp, #32]
   28034:	ldp	x23, x24, [sp, #48]
   28038:	ldp	x25, x26, [sp, #64]
   2803c:	ldp	x27, x28, [sp, #80]
   28040:	ldr	q1, [sp, #96]
   28044:	ldp	x29, x30, [sp], #144
   28048:	ret
   2804c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28050:	add	x0, x0, #0xeb0
   28054:	stp	x20, x22, [sp, #96]
   28058:	ldr	q1, [x0]
   2805c:	mov	w0, #0x4                   	// #4
   28060:	ldr	q0, [sp, #96]
   28064:	str	w0, [sp, #128]
   28068:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2806c:	tbz	w0, #31, 27f64 <cacosf128@@GLIBC_2.27+0x9c>
   28070:	movi	v1.2d, #0x0
   28074:	stp	x20, x28, [sp, #96]
   28078:	ldr	q0, [sp, #96]
   2807c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   28080:	cmp	w0, #0x0
   28084:	cset	w0, ne  // ne = any
   28088:	add	w0, w0, #0x2
   2808c:	str	w0, [sp, #128]
   28090:	b	27f64 <cacosf128@@GLIBC_2.27+0x9c>
   28094:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28098:	add	x0, x0, #0xeb0
   2809c:	stp	x21, x22, [sp, #96]
   280a0:	ldr	q1, [x0]
   280a4:	ldr	q0, [sp, #96]
   280a8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   280ac:	tbz	w0, #31, 280c4 <cacosf128@@GLIBC_2.27+0x1fc>
   280b0:	movi	v1.2d, #0x0
   280b4:	stp	x21, x23, [sp, #96]
   280b8:	ldr	q0, [sp, #96]
   280bc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   280c0:	cbz	w0, 280fc <cacosf128@@GLIBC_2.27+0x234>
   280c4:	ldr	w0, [sp, #128]
   280c8:	cmp	w0, #0x1
   280cc:	b.le	27fcc <cacosf128@@GLIBC_2.27+0x104>
   280d0:	eor	x23, x23, #0x8000000000000000
   280d4:	stp	x21, x23, [sp, #96]
   280d8:	mov	w0, #0x1                   	// #1
   280dc:	stp	x20, x28, [sp, #112]
   280e0:	ldr	q0, [sp, #96]
   280e4:	ldr	q1, [sp, #112]
   280e8:	bl	297e0 <casinhf128@@GLIBC_2.27+0x3b0>
   280ec:	str	q0, [sp, #96]
   280f0:	mov	v0.16b, v1.16b
   280f4:	ldp	x1, x0, [sp, #96]
   280f8:	b	28028 <cacosf128@@GLIBC_2.27+0x160>
   280fc:	ldr	w0, [sp, #128]
   28100:	cmp	w0, #0x2
   28104:	b.gt	280d0 <cacosf128@@GLIBC_2.27+0x208>
   28108:	b	27fcc <cacosf128@@GLIBC_2.27+0x104>
   2810c:	str	wzr, [sp, #128]
   28110:	b	27f64 <cacosf128@@GLIBC_2.27+0x9c>
   28114:	nop

0000000000028118 <cacoshf128@@GLIBC_2.27>:
   28118:	stp	x29, x30, [sp, #-112]!
   2811c:	mov	x29, sp
   28120:	stp	x19, x20, [sp, #16]
   28124:	stp	x23, x24, [sp, #48]
   28128:	str	q0, [sp, #64]
   2812c:	ldp	x19, x24, [sp, #64]
   28130:	stp	x21, x22, [sp, #32]
   28134:	str	q1, [sp, #96]
   28138:	ldp	x20, x22, [sp, #96]
   2813c:	and	x21, x24, #0x7fffffffffffffff
   28140:	stp	x21, x19, [sp, #72]
   28144:	str	x21, [sp, #88]
   28148:	ldr	q1, [sp, #64]
   2814c:	ldr	q0, [sp, #80]
   28150:	and	x23, x22, #0x7fffffffffffffff
   28154:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28158:	cbnz	w0, 283ec <cacoshf128@@GLIBC_2.27+0x2d4>
   2815c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28160:	add	x0, x0, #0x300
   28164:	stp	x19, x21, [sp, #64]
   28168:	ldr	q1, [x0]
   2816c:	ldr	q0, [sp, #64]
   28170:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28174:	cbnz	w0, 2824c <cacoshf128@@GLIBC_2.27+0x134>
   28178:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2817c:	add	x0, x0, #0x300
   28180:	stp	x19, x21, [sp, #64]
   28184:	ldr	q1, [x0]
   28188:	ldr	q0, [sp, #64]
   2818c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28190:	cmp	w0, #0x0
   28194:	b.le	2824c <cacoshf128@@GLIBC_2.27+0x134>
   28198:	stp	x20, x23, [sp, #64]
   2819c:	stp	x20, x23, [sp, #80]
   281a0:	ldr	q1, [sp, #64]
   281a4:	ldr	q0, [sp, #80]
   281a8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   281ac:	cbnz	w0, 28440 <cacoshf128@@GLIBC_2.27+0x328>
   281b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   281b4:	add	x0, x0, #0x300
   281b8:	stp	x20, x23, [sp, #64]
   281bc:	ldr	q1, [x0]
   281c0:	ldr	q0, [sp, #64]
   281c4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   281c8:	cbnz	w0, 28460 <cacoshf128@@GLIBC_2.27+0x348>
   281cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   281d0:	add	x0, x0, #0x300
   281d4:	stp	x20, x23, [sp, #64]
   281d8:	ldr	q1, [x0]
   281dc:	ldr	q0, [sp, #64]
   281e0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   281e4:	cmp	w0, #0x0
   281e8:	b.le	28460 <cacoshf128@@GLIBC_2.27+0x348>
   281ec:	movi	v1.2d, #0x0
   281f0:	stp	x19, x24, [sp, #64]
   281f4:	ldr	q0, [sp, #64]
   281f8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   281fc:	cmp	w0, #0x0
   28200:	mov	x2, #0x1b8                 	// #440
   28204:	mov	x1, #0x414a                	// #16714
   28208:	movk	x2, #0xc517, lsl #16
   2820c:	movk	x1, #0x93d1, lsl #16
   28210:	movk	x2, #0x898c, lsl #32
   28214:	movk	x1, #0x2729, lsl #32
   28218:	movk	x2, #0x8469, lsl #48
   2821c:	movk	x1, #0x234f, lsl #48
   28220:	mov	x0, #0x321d                	// #12829
   28224:	csel	x1, x1, x2, lt  // lt = tstop
   28228:	mov	x2, #0x42d1                	// #17105
   2822c:	movk	x0, #0xc7f3, lsl #16
   28230:	movk	x2, #0xb544, lsl #16
   28234:	movk	x0, #0x2d97, lsl #32
   28238:	movk	x2, #0x921f, lsl #32
   2823c:	movk	x0, #0x4000, lsl #48
   28240:	movk	x2, #0x3ffe, lsl #48
   28244:	csel	x0, x0, x2, lt  // lt = tstop
   28248:	b	282dc <cacoshf128@@GLIBC_2.27+0x1c4>
   2824c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28250:	add	x0, x0, #0xeb0
   28254:	stp	x19, x21, [sp, #64]
   28258:	ldr	q1, [x0]
   2825c:	ldr	q0, [sp, #64]
   28260:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   28264:	tbnz	w0, #31, 28310 <cacoshf128@@GLIBC_2.27+0x1f8>
   28268:	stp	x20, x23, [sp, #64]
   2826c:	stp	x20, x23, [sp, #80]
   28270:	ldr	q1, [sp, #64]
   28274:	ldr	q0, [sp, #80]
   28278:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2827c:	cbnz	w0, 283d8 <cacoshf128@@GLIBC_2.27+0x2c0>
   28280:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28284:	add	x0, x0, #0x300
   28288:	stp	x20, x23, [sp, #64]
   2828c:	ldr	q1, [x0]
   28290:	ldr	q0, [sp, #64]
   28294:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28298:	cbnz	w0, 28398 <cacoshf128@@GLIBC_2.27+0x280>
   2829c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   282a0:	add	x0, x0, #0x300
   282a4:	stp	x20, x23, [sp, #64]
   282a8:	ldr	q1, [x0]
   282ac:	ldr	q0, [sp, #64]
   282b0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   282b4:	cmp	w0, #0x0
   282b8:	b.le	28398 <cacoshf128@@GLIBC_2.27+0x280>
   282bc:	mov	x1, #0x1b8                 	// #440
   282c0:	mov	x0, #0x42d1                	// #17105
   282c4:	movk	x1, #0xc517, lsl #16
   282c8:	movk	x0, #0xb544, lsl #16
   282cc:	movk	x1, #0x898c, lsl #32
   282d0:	movk	x0, #0x921f, lsl #32
   282d4:	movk	x1, #0x8469, lsl #48
   282d8:	movk	x0, #0x3fff, lsl #48
   282dc:	and	x22, x22, #0x8000000000000000
   282e0:	mov	x3, #0x0                   	// #0
   282e4:	orr	x22, x0, x22
   282e8:	mov	x2, #0x7fff000000000000    	// #9223090561878065152
   282ec:	stp	x3, x2, [sp, #64]
   282f0:	stp	x1, x22, [sp, #80]
   282f4:	ldr	q0, [sp, #64]
   282f8:	ldp	x19, x20, [sp, #16]
   282fc:	ldp	x21, x22, [sp, #32]
   28300:	ldp	x23, x24, [sp, #48]
   28304:	ldr	q1, [sp, #80]
   28308:	ldp	x29, x30, [sp], #112
   2830c:	ret
   28310:	movi	v1.2d, #0x0
   28314:	stp	x19, x24, [sp, #64]
   28318:	ldr	q0, [sp, #64]
   2831c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   28320:	stp	x20, x23, [sp, #64]
   28324:	stp	x20, x23, [sp, #80]
   28328:	ldr	q1, [sp, #64]
   2832c:	ldr	q0, [sp, #80]
   28330:	cbnz	w0, 283d0 <cacoshf128@@GLIBC_2.27+0x2b8>
   28334:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28338:	cbnz	w0, 284fc <cacoshf128@@GLIBC_2.27+0x3e4>
   2833c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28340:	add	x0, x0, #0x300
   28344:	stp	x20, x23, [sp, #64]
   28348:	ldr	q1, [x0]
   2834c:	ldr	q0, [sp, #64]
   28350:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28354:	cbnz	w0, 28378 <cacoshf128@@GLIBC_2.27+0x260>
   28358:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2835c:	add	x0, x0, #0x300
   28360:	stp	x20, x23, [sp, #64]
   28364:	ldr	q1, [x0]
   28368:	ldr	q0, [sp, #64]
   2836c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28370:	cmp	w0, #0x0
   28374:	b.gt	282bc <cacoshf128@@GLIBC_2.27+0x1a4>
   28378:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2837c:	add	x0, x0, #0xeb0
   28380:	stp	x20, x23, [sp, #64]
   28384:	ldr	q1, [x0]
   28388:	ldr	q0, [sp, #64]
   2838c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   28390:	tbnz	w0, #31, 284a4 <cacoshf128@@GLIBC_2.27+0x38c>
   28394:	nop
   28398:	eor	x0, x22, #0x8000000000000000
   2839c:	stp	x20, x0, [sp, #64]
   283a0:	mov	w0, #0x1                   	// #1
   283a4:	stp	x19, x24, [sp, #80]
   283a8:	ldr	q0, [sp, #64]
   283ac:	ldr	q1, [sp, #80]
   283b0:	bl	297e0 <casinhf128@@GLIBC_2.27+0x3b0>
   283b4:	str	q0, [sp, #64]
   283b8:	str	q1, [sp, #80]
   283bc:	ldp	x3, x2, [sp, #64]
   283c0:	ldp	x1, x0, [sp, #80]
   283c4:	tbz	x22, #63, 28454 <cacoshf128@@GLIBC_2.27+0x33c>
   283c8:	eor	x22, x0, #0x8000000000000000
   283cc:	b	282ec <cacoshf128@@GLIBC_2.27+0x1d4>
   283d0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   283d4:	cbz	w0, 28280 <cacoshf128@@GLIBC_2.27+0x168>
   283d8:	mov	x2, #0x7fff800000000000    	// #9223231299366420480
   283dc:	mov	x3, #0x0                   	// #0
   283e0:	mov	x22, x2
   283e4:	mov	x1, #0x0                   	// #0
   283e8:	b	282ec <cacoshf128@@GLIBC_2.27+0x1d4>
   283ec:	stp	x20, x23, [sp, #64]
   283f0:	stp	x20, x23, [sp, #80]
   283f4:	ldr	q1, [sp, #64]
   283f8:	ldr	q0, [sp, #80]
   283fc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28400:	cbnz	w0, 283d8 <cacoshf128@@GLIBC_2.27+0x2c0>
   28404:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28408:	add	x0, x0, #0x300
   2840c:	stp	x20, x23, [sp, #64]
   28410:	ldr	q1, [x0]
   28414:	ldr	q0, [sp, #64]
   28418:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2841c:	cbnz	w0, 283d8 <cacoshf128@@GLIBC_2.27+0x2c0>
   28420:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28424:	add	x0, x0, #0x300
   28428:	stp	x20, x23, [sp, #64]
   2842c:	ldr	q1, [x0]
   28430:	ldr	q0, [sp, #64]
   28434:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28438:	cmp	w0, #0x0
   2843c:	b.le	283d8 <cacoshf128@@GLIBC_2.27+0x2c0>
   28440:	mov	x3, #0x0                   	// #0
   28444:	mov	x2, #0x7fff000000000000    	// #9223090561878065152
   28448:	mov	x1, #0x0                   	// #0
   2844c:	mov	x22, #0x7fff800000000000    	// #9223231299366420480
   28450:	b	282ec <cacoshf128@@GLIBC_2.27+0x1d4>
   28454:	eor	x2, x2, #0x8000000000000000
   28458:	mov	x22, x0
   2845c:	b	282ec <cacoshf128@@GLIBC_2.27+0x1d4>
   28460:	and	x0, x22, #0x8000000000000000
   28464:	mov	x22, #0x42d1                	// #17105
   28468:	lsr	x24, x24, #63
   2846c:	mov	x1, #0x1b8                 	// #440
   28470:	movk	x22, #0xb544, lsl #16
   28474:	cmp	w24, #0x0
   28478:	movk	x1, #0xc517, lsl #16
   2847c:	movk	x22, #0x921f, lsl #32
   28480:	movk	x1, #0x898c, lsl #32
   28484:	movk	x22, #0x4000, lsl #48
   28488:	csel	x22, x22, xzr, ne  // ne = any
   2848c:	movk	x1, #0x8469, lsl #48
   28490:	orr	x22, x22, x0
   28494:	csel	x1, x1, xzr, ne  // ne = any
   28498:	mov	x3, #0x0                   	// #0
   2849c:	mov	x2, #0x7fff000000000000    	// #9223090561878065152
   284a0:	b	282ec <cacoshf128@@GLIBC_2.27+0x1d4>
   284a4:	movi	v1.2d, #0x0
   284a8:	stp	x20, x22, [sp, #64]
   284ac:	ldr	q0, [sp, #64]
   284b0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   284b4:	cbnz	w0, 28398 <cacoshf128@@GLIBC_2.27+0x280>
   284b8:	mov	x1, #0x1b8                 	// #440
   284bc:	mov	x0, #0x42d1                	// #17105
   284c0:	movk	x1, #0xc517, lsl #16
   284c4:	movk	x0, #0xb544, lsl #16
   284c8:	movk	x1, #0x898c, lsl #32
   284cc:	movk	x0, #0x921f, lsl #32
   284d0:	movk	x1, #0x8469, lsl #48
   284d4:	movk	x0, #0x3fff, lsl #48
   284d8:	tbz	x22, #63, 284ec <cacoshf128@@GLIBC_2.27+0x3d4>
   284dc:	mov	x0, #0x42d1                	// #17105
   284e0:	movk	x0, #0xb544, lsl #16
   284e4:	movk	x0, #0x921f, lsl #32
   284e8:	movk	x0, #0xbfff, lsl #48
   284ec:	mov	x22, x0
   284f0:	mov	x3, #0x0                   	// #0
   284f4:	mov	x2, #0x0                   	// #0
   284f8:	b	282ec <cacoshf128@@GLIBC_2.27+0x1d4>
   284fc:	mov	x1, #0x1b8                 	// #440
   28500:	mov	x22, #0x42d1                	// #17105
   28504:	movk	x1, #0xc517, lsl #16
   28508:	movk	x22, #0xb544, lsl #16
   2850c:	movk	x1, #0x898c, lsl #32
   28510:	movk	x22, #0x921f, lsl #32
   28514:	mov	x3, #0x0                   	// #0
   28518:	mov	x2, #0x7fff800000000000    	// #9223231299366420480
   2851c:	movk	x1, #0x8469, lsl #48
   28520:	movk	x22, #0x3fff, lsl #48
   28524:	b	282ec <cacoshf128@@GLIBC_2.27+0x1d4>

0000000000028528 <ccosf128@@GLIBC_2.27>:
   28528:	sub	sp, sp, #0x10
   2852c:	str	q1, [sp]
   28530:	mov	v1.16b, v0.16b
   28534:	ldr	x1, [sp, #8]
   28538:	eor	x1, x1, #0x8000000000000000
   2853c:	str	x1, [sp, #8]
   28540:	ldr	q0, [sp]
   28544:	add	sp, sp, #0x10
   28548:	b	28550 <ccoshf128@@GLIBC_2.27>
   2854c:	nop

0000000000028550 <ccoshf128@@GLIBC_2.27>:
   28550:	stp	x29, x30, [sp, #-224]!
   28554:	mov	x29, sp
   28558:	stp	x19, x20, [sp, #16]
   2855c:	stp	x23, x24, [sp, #48]
   28560:	str	q0, [sp, #96]
   28564:	ldp	x19, x23, [sp, #96]
   28568:	stp	x25, x26, [sp, #64]
   2856c:	adrp	x25, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   28570:	str	q1, [sp, #128]
   28574:	ldr	x0, [x25, #4032]
   28578:	stp	x21, x22, [sp, #32]
   2857c:	and	x22, x23, #0x7fffffffffffffff
   28580:	ldp	x20, x24, [sp, #128]
   28584:	stp	x22, x19, [sp, #104]
   28588:	ldr	x1, [x0]
   2858c:	str	x1, [sp, #216]
   28590:	mov	x1, #0x0                   	// #0
   28594:	str	x22, [sp, #120]
   28598:	ldr	q1, [sp, #96]
   2859c:	ldr	q0, [sp, #112]
   285a0:	and	x21, x24, #0x7fffffffffffffff
   285a4:	str	x27, [sp, #80]
   285a8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   285ac:	cbnz	w0, 28b80 <ccoshf128@@GLIBC_2.27+0x630>
   285b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   285b4:	add	x0, x0, #0x300
   285b8:	stp	x19, x22, [sp, #96]
   285bc:	ldr	q1, [x0]
   285c0:	ldr	q0, [sp, #96]
   285c4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   285c8:	cbnz	w0, 286f0 <ccoshf128@@GLIBC_2.27+0x1a0>
   285cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   285d0:	add	x0, x0, #0x300
   285d4:	stp	x19, x22, [sp, #96]
   285d8:	ldr	q1, [x0]
   285dc:	ldr	q0, [sp, #96]
   285e0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   285e4:	cmp	w0, #0x0
   285e8:	b.le	286f0 <ccoshf128@@GLIBC_2.27+0x1a0>
   285ec:	stp	x20, x21, [sp, #96]
   285f0:	stp	x20, x21, [sp, #112]
   285f4:	ldr	q1, [sp, #96]
   285f8:	ldr	q0, [sp, #112]
   285fc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28600:	cbnz	w0, 28c38 <ccoshf128@@GLIBC_2.27+0x6e8>
   28604:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28608:	add	x0, x0, #0x300
   2860c:	stp	x20, x21, [sp, #96]
   28610:	ldr	q1, [x0]
   28614:	ldr	q0, [sp, #96]
   28618:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2861c:	cbnz	w0, 28640 <ccoshf128@@GLIBC_2.27+0xf0>
   28620:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28624:	add	x0, x0, #0x300
   28628:	stp	x20, x21, [sp, #96]
   2862c:	ldr	q1, [x0]
   28630:	ldr	q0, [sp, #96]
   28634:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28638:	cmp	w0, #0x0
   2863c:	b.gt	28c38 <ccoshf128@@GLIBC_2.27+0x6e8>
   28640:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28644:	add	x0, x0, #0xeb0
   28648:	stp	x20, x21, [sp, #96]
   2864c:	ldr	q1, [x0]
   28650:	ldr	q0, [sp, #96]
   28654:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   28658:	tbnz	w0, #31, 28858 <ccoshf128@@GLIBC_2.27+0x308>
   2865c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28660:	add	x0, x0, #0xeb0
   28664:	stp	x20, x21, [sp, #96]
   28668:	ldr	q1, [x0]
   2866c:	ldr	q0, [sp, #96]
   28670:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   28674:	cmp	w0, #0x0
   28678:	b.le	28c2c <ccoshf128@@GLIBC_2.27+0x6dc>
   2867c:	stp	x20, x24, [sp, #96]
   28680:	add	x0, sp, #0xb0
   28684:	add	x1, sp, #0xc0
   28688:	ldr	q0, [sp, #96]
   2868c:	mov	x27, #0x0                   	// #0
   28690:	mov	x26, #0x7fff000000000000    	// #9223090561878065152
   28694:	bl	24048 <sincosf128@@GLIBC_2.27>
   28698:	ldr	x0, [sp, #200]
   2869c:	tbz	x0, #63, 286a4 <ccoshf128@@GLIBC_2.27+0x154>
   286a0:	mov	x26, #0xffff000000000000    	// #-281474976710656
   286a4:	ldr	x24, [sp, #184]
   286a8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   286ac:	add	x0, x0, #0x130
   286b0:	ldr	q0, [x0]
   286b4:	tbz	x24, #63, 286c4 <ccoshf128@@GLIBC_2.27+0x174>
   286b8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   286bc:	add	x0, x0, #0x140
   286c0:	ldr	q0, [x0]
   286c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   286c8:	add	x0, x0, #0x2f0
   286cc:	ldr	q1, [x0]
   286d0:	tbz	x23, #63, 286e0 <ccoshf128@@GLIBC_2.27+0x190>
   286d4:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   286d8:	add	x0, x0, #0xfd0
   286dc:	ldr	q1, [x0]
   286e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   286e4:	str	q0, [sp, #96]
   286e8:	ldp	x20, x24, [sp, #96]
   286ec:	b	287a0 <ccoshf128@@GLIBC_2.27+0x250>
   286f0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   286f4:	add	x0, x0, #0xeb0
   286f8:	stp	x19, x22, [sp, #96]
   286fc:	ldr	q1, [x0]
   28700:	ldr	q0, [sp, #96]
   28704:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   28708:	tbz	w0, #31, 287e0 <ccoshf128@@GLIBC_2.27+0x290>
   2870c:	movi	v1.2d, #0x0
   28710:	stp	x19, x23, [sp, #96]
   28714:	ldr	q0, [sp, #96]
   28718:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2871c:	cbz	w0, 288a8 <ccoshf128@@GLIBC_2.27+0x358>
   28720:	stp	x20, x21, [sp, #96]
   28724:	stp	x20, x21, [sp, #112]
   28728:	ldr	q1, [sp, #96]
   2872c:	ldr	q0, [sp, #112]
   28730:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28734:	cbnz	w0, 28774 <ccoshf128@@GLIBC_2.27+0x224>
   28738:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2873c:	add	x0, x0, #0x300
   28740:	stp	x20, x21, [sp, #96]
   28744:	ldr	q1, [x0]
   28748:	ldr	q0, [sp, #96]
   2874c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28750:	cbnz	w0, 28908 <ccoshf128@@GLIBC_2.27+0x3b8>
   28754:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28758:	add	x0, x0, #0x300
   2875c:	stp	x20, x21, [sp, #96]
   28760:	ldr	q1, [x0]
   28764:	ldr	q0, [sp, #96]
   28768:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2876c:	cmp	w0, #0x0
   28770:	b.le	28908 <ccoshf128@@GLIBC_2.27+0x3b8>
   28774:	mov	x21, #0x0                   	// #0
   28778:	mov	x19, #0x7fff800000000000    	// #9223231299366420480
   2877c:	stp	x20, x24, [sp, #96]
   28780:	stp	x20, x24, [sp, #112]
   28784:	mov	x20, x21
   28788:	ldr	q1, [sp, #96]
   2878c:	ldr	q0, [sp, #112]
   28790:	mov	x24, x19
   28794:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   28798:	str	q0, [sp, #96]
   2879c:	ldp	x27, x26, [sp, #96]
   287a0:	ldr	x0, [x25, #4032]
   287a4:	ldr	x1, [sp, #216]
   287a8:	ldr	x0, [x0]
   287ac:	eor	x0, x1, x0
   287b0:	cbnz	x0, 28c60 <ccoshf128@@GLIBC_2.27+0x710>
   287b4:	stp	x27, x26, [sp, #96]
   287b8:	stp	x20, x24, [sp, #112]
   287bc:	ldr	q0, [sp, #96]
   287c0:	ldp	x19, x20, [sp, #16]
   287c4:	ldp	x21, x22, [sp, #32]
   287c8:	ldp	x23, x24, [sp, #48]
   287cc:	ldp	x25, x26, [sp, #64]
   287d0:	ldr	x27, [sp, #80]
   287d4:	ldr	q1, [sp, #112]
   287d8:	ldp	x29, x30, [sp], #224
   287dc:	ret
   287e0:	stp	x20, x21, [sp, #96]
   287e4:	stp	x20, x21, [sp, #112]
   287e8:	ldr	q1, [sp, #96]
   287ec:	ldr	q0, [sp, #112]
   287f0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   287f4:	cbnz	w0, 28834 <ccoshf128@@GLIBC_2.27+0x2e4>
   287f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   287fc:	add	x0, x0, #0x300
   28800:	stp	x20, x21, [sp, #96]
   28804:	ldr	q1, [x0]
   28808:	ldr	q0, [sp, #96]
   2880c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28810:	cbnz	w0, 28908 <ccoshf128@@GLIBC_2.27+0x3b8>
   28814:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28818:	add	x0, x0, #0x300
   2881c:	stp	x20, x21, [sp, #96]
   28820:	ldr	q1, [x0]
   28824:	ldr	q0, [sp, #96]
   28828:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2882c:	cmp	w0, #0x0
   28830:	b.le	28908 <ccoshf128@@GLIBC_2.27+0x3b8>
   28834:	stp	x19, x23, [sp, #96]
   28838:	mov	x21, #0x0                   	// #0
   2883c:	mov	x19, #0x7fff800000000000    	// #9223231299366420480
   28840:	movi	v1.2d, #0x0
   28844:	ldr	q0, [sp, #96]
   28848:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2884c:	cbnz	w0, 2877c <ccoshf128@@GLIBC_2.27+0x22c>
   28850:	mov	x19, #0x0                   	// #0
   28854:	b	2877c <ccoshf128@@GLIBC_2.27+0x22c>
   28858:	movi	v1.2d, #0x0
   2885c:	stp	x20, x24, [sp, #96]
   28860:	ldr	q0, [sp, #96]
   28864:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   28868:	cbnz	w0, 2865c <ccoshf128@@GLIBC_2.27+0x10c>
   2886c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28870:	add	x0, x0, #0x2f0
   28874:	ldr	q0, [x0]
   28878:	tbz	x23, #63, 28888 <ccoshf128@@GLIBC_2.27+0x338>
   2887c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   28880:	add	x0, x0, #0xfd0
   28884:	ldr	q0, [x0]
   28888:	stp	x20, x24, [sp, #96]
   2888c:	mov	x27, #0x0                   	// #0
   28890:	mov	x26, #0x7fff000000000000    	// #9223090561878065152
   28894:	ldr	q1, [sp, #96]
   28898:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2889c:	str	q0, [sp, #96]
   288a0:	ldp	x20, x24, [sp, #96]
   288a4:	b	287a0 <ccoshf128@@GLIBC_2.27+0x250>
   288a8:	stp	x20, x21, [sp, #96]
   288ac:	stp	x20, x21, [sp, #112]
   288b0:	ldr	q1, [sp, #96]
   288b4:	ldr	q0, [sp, #112]
   288b8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   288bc:	cbnz	w0, 288fc <ccoshf128@@GLIBC_2.27+0x3ac>
   288c0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   288c4:	add	x0, x0, #0x300
   288c8:	stp	x20, x21, [sp, #96]
   288cc:	ldr	q1, [x0]
   288d0:	ldr	q0, [sp, #96]
   288d4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   288d8:	cbnz	w0, 28908 <ccoshf128@@GLIBC_2.27+0x3b8>
   288dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   288e0:	add	x0, x0, #0x300
   288e4:	stp	x20, x21, [sp, #96]
   288e8:	ldr	q1, [x0]
   288ec:	ldr	q0, [sp, #96]
   288f0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   288f4:	cmp	w0, #0x0
   288f8:	b.le	28908 <ccoshf128@@GLIBC_2.27+0x3b8>
   288fc:	mov	x21, #0x0                   	// #0
   28900:	mov	x19, #0x0                   	// #0
   28904:	b	2877c <ccoshf128@@GLIBC_2.27+0x22c>
   28908:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2890c:	add	x0, x0, #0x120
   28910:	ldr	q1, [x0]
   28914:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28918:	add	x0, x0, #0xea0
   2891c:	ldr	q0, [x0]
   28920:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28924:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   28928:	mov	w26, w0
   2892c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28930:	add	x0, x0, #0xeb0
   28934:	stp	x20, x21, [sp, #96]
   28938:	ldr	q1, [x0]
   2893c:	ldr	q0, [sp, #96]
   28940:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   28944:	cmp	w0, #0x0
   28948:	b.le	28bf8 <ccoshf128@@GLIBC_2.27+0x6a8>
   2894c:	stp	x20, x24, [sp, #96]
   28950:	add	x1, sp, #0xc0
   28954:	add	x0, sp, #0xb0
   28958:	ldr	q0, [sp, #96]
   2895c:	bl	24048 <sincosf128@@GLIBC_2.27>
   28960:	mov	w0, w26
   28964:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   28968:	stp	x19, x22, [sp, #96]
   2896c:	ldr	q1, [sp, #96]
   28970:	str	q0, [sp, #112]
   28974:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28978:	tbz	w0, #31, 28af8 <ccoshf128@@GLIBC_2.27+0x5a8>
   2897c:	ldr	q0, [sp, #112]
   28980:	bl	141f0 <__expl_finite@GLIBC_2.17>
   28984:	str	q0, [sp, #144]
   28988:	tbnz	x23, #63, 28b48 <ccoshf128@@GLIBC_2.27+0x5f8>
   2898c:	ldp	x21, x20, [sp, #176]
   28990:	stp	x19, x22, [sp, #96]
   28994:	ldr	q1, [sp, #112]
   28998:	ldr	q0, [sp, #96]
   2899c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   289a0:	str	q0, [sp, #96]
   289a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   289a8:	add	x0, x0, #0x330
   289ac:	ldr	q0, [sp, #144]
   289b0:	ldr	q1, [x0]
   289b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   289b8:	stp	x21, x20, [sp, #128]
   289bc:	ldr	q1, [sp, #128]
   289c0:	str	q0, [sp, #160]
   289c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   289c8:	mov	v3.16b, v0.16b
   289cc:	ldr	q2, [sp, #160]
   289d0:	ldr	q1, [sp, #192]
   289d4:	str	q3, [sp, #128]
   289d8:	mov	v0.16b, v2.16b
   289dc:	str	q3, [sp, #176]
   289e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   289e4:	mov	v2.16b, v0.16b
   289e8:	ldr	q1, [sp, #96]
   289ec:	ldr	q0, [sp, #112]
   289f0:	str	q2, [sp, #160]
   289f4:	str	q2, [sp, #192]
   289f8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   289fc:	tbz	w0, #31, 28a34 <ccoshf128@@GLIBC_2.27+0x4e4>
   28a00:	ldr	q0, [sp, #96]
   28a04:	ldr	q1, [sp, #112]
   28a08:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   28a0c:	str	q0, [sp, #96]
   28a10:	ldr	q0, [sp, #128]
   28a14:	ldr	q1, [sp, #144]
   28a18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28a1c:	mov	v2.16b, v0.16b
   28a20:	ldr	q1, [sp, #144]
   28a24:	ldr	q0, [sp, #160]
   28a28:	str	q2, [sp, #176]
   28a2c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28a30:	str	q0, [sp, #192]
   28a34:	ldr	q1, [sp, #96]
   28a38:	ldr	q0, [sp, #112]
   28a3c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28a40:	tbz	w0, #31, 28b54 <ccoshf128@@GLIBC_2.27+0x604>
   28a44:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28a48:	add	x0, x0, #0x300
   28a4c:	ldr	q0, [sp, #192]
   28a50:	ldr	q1, [x0]
   28a54:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28a58:	str	q0, [sp, #96]
   28a5c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28a60:	add	x0, x0, #0x300
   28a64:	ldp	x23, x22, [sp, #96]
   28a68:	ldr	q1, [x0]
   28a6c:	ldr	q0, [sp, #176]
   28a70:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28a74:	str	q0, [sp, #96]
   28a78:	ldp	x21, x19, [sp, #96]
   28a7c:	mov	x27, x23
   28a80:	mov	x26, x22
   28a84:	mov	x20, x21
   28a88:	mov	x24, x19
   28a8c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28a90:	add	x0, x0, #0xeb0
   28a94:	ldr	q1, [x0]
   28a98:	and	x0, x22, #0x7fffffffffffffff
   28a9c:	stp	x23, x0, [sp, #96]
   28aa0:	ldr	q0, [sp, #96]
   28aa4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28aa8:	tbz	w0, #31, 28ac0 <ccoshf128@@GLIBC_2.27+0x570>
   28aac:	stp	x23, x22, [sp, #96]
   28ab0:	stp	x23, x22, [sp, #112]
   28ab4:	ldr	q1, [sp, #96]
   28ab8:	ldr	q0, [sp, #112]
   28abc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28ac0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28ac4:	add	x0, x0, #0xeb0
   28ac8:	ldr	q1, [x0]
   28acc:	and	x0, x19, #0x7fffffffffffffff
   28ad0:	stp	x21, x0, [sp, #96]
   28ad4:	ldr	q0, [sp, #96]
   28ad8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28adc:	tbz	w0, #31, 287a0 <ccoshf128@@GLIBC_2.27+0x250>
   28ae0:	stp	x21, x19, [sp, #96]
   28ae4:	stp	x21, x19, [sp, #112]
   28ae8:	ldr	q1, [sp, #96]
   28aec:	ldr	q0, [sp, #112]
   28af0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28af4:	b	287a0 <ccoshf128@@GLIBC_2.27+0x250>
   28af8:	stp	x19, x23, [sp, #96]
   28afc:	ldr	q0, [sp, #96]
   28b00:	bl	14000 <__coshl_finite@GLIBC_2.17>
   28b04:	ldr	q1, [sp, #192]
   28b08:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28b0c:	str	q0, [sp, #112]
   28b10:	ldp	x0, x22, [sp, #112]
   28b14:	stp	x19, x23, [sp, #96]
   28b18:	ldr	q0, [sp, #96]
   28b1c:	mov	x23, x0
   28b20:	bl	1e700 <__sinhl_finite@GLIBC_2.17>
   28b24:	ldr	q1, [sp, #176]
   28b28:	mov	x26, x22
   28b2c:	mov	x27, x23
   28b30:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28b34:	str	q0, [sp, #96]
   28b38:	ldp	x21, x19, [sp, #96]
   28b3c:	mov	x20, x21
   28b40:	mov	x24, x19
   28b44:	b	28a8c <ccoshf128@@GLIBC_2.27+0x53c>
   28b48:	ldp	x21, x20, [sp, #176]
   28b4c:	eor	x20, x20, #0x8000000000000000
   28b50:	b	28990 <ccoshf128@@GLIBC_2.27+0x440>
   28b54:	ldr	q0, [sp, #96]
   28b58:	bl	141f0 <__expl_finite@GLIBC_2.17>
   28b5c:	str	q0, [sp, #112]
   28b60:	ldr	q1, [sp, #192]
   28b64:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   28b68:	str	q0, [sp, #96]
   28b6c:	ldr	q2, [sp, #112]
   28b70:	ldp	x23, x22, [sp, #96]
   28b74:	mov	v0.16b, v2.16b
   28b78:	ldr	q1, [sp, #176]
   28b7c:	b	28a70 <ccoshf128@@GLIBC_2.27+0x520>
   28b80:	stp	x20, x21, [sp, #96]
   28b84:	stp	x20, x21, [sp, #112]
   28b88:	ldr	q1, [sp, #96]
   28b8c:	ldr	q0, [sp, #112]
   28b90:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28b94:	cbnz	w0, 28bd8 <ccoshf128@@GLIBC_2.27+0x688>
   28b98:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28b9c:	add	x0, x0, #0x300
   28ba0:	stp	x20, x21, [sp, #96]
   28ba4:	ldr	q1, [x0]
   28ba8:	ldr	q0, [sp, #96]
   28bac:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28bb0:	cbnz	w0, 28bd4 <ccoshf128@@GLIBC_2.27+0x684>
   28bb4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28bb8:	add	x0, x0, #0x300
   28bbc:	stp	x20, x21, [sp, #96]
   28bc0:	ldr	q1, [x0]
   28bc4:	ldr	q0, [sp, #96]
   28bc8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28bcc:	cmp	w0, #0x0
   28bd0:	b.gt	28bd8 <ccoshf128@@GLIBC_2.27+0x688>
   28bd4:	stp	x20, x21, [sp, #96]
   28bd8:	movi	v1.2d, #0x0
   28bdc:	stp	x20, x24, [sp, #96]
   28be0:	ldr	q0, [sp, #96]
   28be4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   28be8:	cbnz	w0, 28c18 <ccoshf128@@GLIBC_2.27+0x6c8>
   28bec:	mov	x27, #0x0                   	// #0
   28bf0:	mov	x26, #0x7fff800000000000    	// #9223231299366420480
   28bf4:	b	287a0 <ccoshf128@@GLIBC_2.27+0x250>
   28bf8:	adrp	x2, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28bfc:	add	x2, x2, #0x2f0
   28c00:	fmov	d0, x20
   28c04:	ldr	q2, [x2]
   28c08:	fmov	v0.d[1], x24
   28c0c:	str	q0, [sp, #176]
   28c10:	str	q2, [sp, #192]
   28c14:	b	28960 <ccoshf128@@GLIBC_2.27+0x410>
   28c18:	mov	x26, #0x7fff800000000000    	// #9223231299366420480
   28c1c:	mov	x27, #0x0                   	// #0
   28c20:	mov	x24, x26
   28c24:	mov	x20, #0x0                   	// #0
   28c28:	b	287a0 <ccoshf128@@GLIBC_2.27+0x250>
   28c2c:	mov	x27, #0x0                   	// #0
   28c30:	mov	x26, #0x7fff000000000000    	// #9223090561878065152
   28c34:	b	286a8 <ccoshf128@@GLIBC_2.27+0x158>
   28c38:	stp	x20, x24, [sp, #96]
   28c3c:	mov	x27, #0x0                   	// #0
   28c40:	mov	x26, #0x7fff000000000000    	// #9223090561878065152
   28c44:	stp	x20, x24, [sp, #112]
   28c48:	ldr	q1, [sp, #96]
   28c4c:	ldr	q0, [sp, #112]
   28c50:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   28c54:	str	q0, [sp, #96]
   28c58:	ldp	x20, x24, [sp, #96]
   28c5c:	b	287a0 <ccoshf128@@GLIBC_2.27+0x250>
   28c60:	bl	ba70 <__stack_chk_fail@plt>
   28c64:	nop

0000000000028c68 <casinf128@@GLIBC_2.27>:
   28c68:	stp	x29, x30, [sp, #-128]!
   28c6c:	mov	x29, sp
   28c70:	stp	x23, x24, [sp, #48]
   28c74:	stp	x25, x26, [sp, #64]
   28c78:	str	q0, [sp, #80]
   28c7c:	ldp	x25, x24, [sp, #80]
   28c80:	stp	x25, x24, [sp, #96]
   28c84:	str	q1, [sp, #112]
   28c88:	mov	v1.16b, v0.16b
   28c8c:	ldr	q0, [sp, #96]
   28c90:	stp	x19, x20, [sp, #16]
   28c94:	mov	x23, x25
   28c98:	stp	x21, x22, [sp, #32]
   28c9c:	mov	x22, x24
   28ca0:	ldp	x19, x20, [sp, #112]
   28ca4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28ca8:	cbnz	w0, 28d18 <casinf128@@GLIBC_2.27+0xb0>
   28cac:	stp	x19, x20, [sp, #80]
   28cb0:	stp	x19, x20, [sp, #96]
   28cb4:	ldr	q1, [sp, #80]
   28cb8:	ldr	q0, [sp, #96]
   28cbc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28cc0:	cbnz	w0, 28d18 <casinf128@@GLIBC_2.27+0xb0>
   28cc4:	eor	x21, x20, #0x8000000000000000
   28cc8:	stp	x19, x21, [sp, #80]
   28ccc:	stp	x25, x24, [sp, #96]
   28cd0:	ldr	q0, [sp, #80]
   28cd4:	ldr	q1, [sp, #96]
   28cd8:	bl	29430 <casinhf128@@GLIBC_2.27>
   28cdc:	str	q0, [sp, #80]
   28ce0:	ldp	x19, x20, [sp, #80]
   28ce4:	str	q1, [sp, #96]
   28ce8:	ldp	x25, x24, [sp, #96]
   28cec:	eor	x20, x20, #0x8000000000000000
   28cf0:	stp	x19, x20, [sp, #80]
   28cf4:	stp	x25, x24, [sp, #96]
   28cf8:	ldr	q1, [sp, #80]
   28cfc:	ldp	x19, x20, [sp, #16]
   28d00:	ldp	x21, x22, [sp, #32]
   28d04:	ldp	x23, x24, [sp, #48]
   28d08:	ldp	x25, x26, [sp, #64]
   28d0c:	ldr	q0, [sp, #96]
   28d10:	ldp	x29, x30, [sp], #128
   28d14:	ret
   28d18:	movi	v1.2d, #0x0
   28d1c:	stp	x23, x22, [sp, #80]
   28d20:	ldr	q0, [sp, #80]
   28d24:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   28d28:	cbz	w0, 28cf0 <casinf128@@GLIBC_2.27+0x88>
   28d2c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28d30:	add	x0, x0, #0x300
   28d34:	and	x22, x22, #0x7fffffffffffffff
   28d38:	stp	x23, x22, [sp, #80]
   28d3c:	mov	x21, x20
   28d40:	ldr	q1, [x0]
   28d44:	ldr	q0, [sp, #80]
   28d48:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28d4c:	cbnz	w0, 28d70 <casinf128@@GLIBC_2.27+0x108>
   28d50:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28d54:	add	x0, x0, #0x300
   28d58:	stp	x23, x22, [sp, #80]
   28d5c:	ldr	q1, [x0]
   28d60:	ldr	q0, [sp, #80]
   28d64:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28d68:	cmp	w0, #0x0
   28d6c:	b.gt	28db0 <casinf128@@GLIBC_2.27+0x148>
   28d70:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28d74:	add	x0, x0, #0x300
   28d78:	and	x20, x21, #0x7fffffffffffffff
   28d7c:	stp	x19, x20, [sp, #80]
   28d80:	ldr	q1, [x0]
   28d84:	ldr	q0, [sp, #80]
   28d88:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28d8c:	cbnz	w0, 28dd0 <casinf128@@GLIBC_2.27+0x168>
   28d90:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28d94:	add	x0, x0, #0x300
   28d98:	stp	x19, x20, [sp, #80]
   28d9c:	ldr	q1, [x0]
   28da0:	ldr	q0, [sp, #80]
   28da4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28da8:	cmp	w0, #0x0
   28dac:	b.le	28dd0 <casinf128@@GLIBC_2.27+0x168>
   28db0:	mov	x19, #0x0                   	// #0
   28db4:	mov	x20, #0x7fff000000000000    	// #9223090561878065152
   28db8:	tbnz	x21, #63, 28dc8 <casinf128@@GLIBC_2.27+0x160>
   28dbc:	mov	x25, #0x0                   	// #0
   28dc0:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   28dc4:	b	28cf0 <casinf128@@GLIBC_2.27+0x88>
   28dc8:	mov	x20, #0xffff000000000000    	// #-281474976710656
   28dcc:	b	28dbc <casinf128@@GLIBC_2.27+0x154>
   28dd0:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   28dd4:	mov	x25, #0x0                   	// #0
   28dd8:	mov	x20, x24
   28ddc:	mov	x19, #0x0                   	// #0
   28de0:	b	28cf0 <casinf128@@GLIBC_2.27+0x88>
   28de4:	nop

0000000000028de8 <csinf128@@GLIBC_2.27>:
   28de8:	stp	x29, x30, [sp, #-224]!
   28dec:	mov	x29, sp
   28df0:	stp	x19, x20, [sp, #16]
   28df4:	stp	x23, x24, [sp, #48]
   28df8:	str	q0, [sp, #96]
   28dfc:	ldp	x20, x24, [sp, #96]
   28e00:	stp	x25, x26, [sp, #64]
   28e04:	adrp	x25, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   28e08:	str	q1, [sp, #128]
   28e0c:	ldr	x0, [x25, #4032]
   28e10:	stp	x21, x22, [sp, #32]
   28e14:	and	x21, x24, #0x7fffffffffffffff
   28e18:	ldp	x19, x23, [sp, #128]
   28e1c:	stp	x21, x20, [sp, #104]
   28e20:	ldr	x1, [x0]
   28e24:	str	x1, [sp, #216]
   28e28:	mov	x1, #0x0                   	// #0
   28e2c:	str	x21, [sp, #120]
   28e30:	ldr	q1, [sp, #96]
   28e34:	ldr	q0, [sp, #112]
   28e38:	and	x22, x23, #0x7fffffffffffffff
   28e3c:	str	x27, [sp, #80]
   28e40:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28e44:	cbnz	w0, 28e88 <csinf128@@GLIBC_2.27+0xa0>
   28e48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28e4c:	add	x0, x0, #0x300
   28e50:	stp	x20, x21, [sp, #96]
   28e54:	lsr	x26, x24, #63
   28e58:	ldr	q1, [x0]
   28e5c:	ldr	q0, [sp, #96]
   28e60:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28e64:	cbnz	w0, 28f04 <csinf128@@GLIBC_2.27+0x11c>
   28e68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28e6c:	add	x0, x0, #0x300
   28e70:	stp	x20, x21, [sp, #96]
   28e74:	ldr	q1, [x0]
   28e78:	ldr	q0, [sp, #96]
   28e7c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28e80:	cmp	w0, #0x0
   28e84:	b.le	28f04 <csinf128@@GLIBC_2.27+0x11c>
   28e88:	stp	x19, x22, [sp, #96]
   28e8c:	stp	x19, x22, [sp, #112]
   28e90:	ldr	q1, [sp, #96]
   28e94:	ldr	q0, [sp, #112]
   28e98:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28e9c:	cbnz	w0, 29410 <csinf128@@GLIBC_2.27+0x628>
   28ea0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28ea4:	add	x0, x0, #0x300
   28ea8:	stp	x19, x22, [sp, #96]
   28eac:	ldr	q1, [x0]
   28eb0:	ldr	q0, [sp, #96]
   28eb4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28eb8:	cbnz	w0, 28f9c <csinf128@@GLIBC_2.27+0x1b4>
   28ebc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28ec0:	add	x0, x0, #0x300
   28ec4:	stp	x19, x22, [sp, #96]
   28ec8:	ldr	q1, [x0]
   28ecc:	ldr	q0, [sp, #96]
   28ed0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28ed4:	cmp	w0, #0x0
   28ed8:	b.le	28f9c <csinf128@@GLIBC_2.27+0x1b4>
   28edc:	stp	x20, x21, [sp, #96]
   28ee0:	mov	x19, #0x0                   	// #0
   28ee4:	mov	x27, #0x7fff000000000000    	// #9223090561878065152
   28ee8:	stp	x20, x21, [sp, #112]
   28eec:	ldr	q1, [sp, #96]
   28ef0:	ldr	q0, [sp, #112]
   28ef4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   28ef8:	str	q0, [sp, #96]
   28efc:	ldp	x26, x24, [sp, #96]
   28f00:	b	292c0 <csinf128@@GLIBC_2.27+0x4d8>
   28f04:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28f08:	add	x0, x0, #0xeb0
   28f0c:	stp	x20, x21, [sp, #96]
   28f10:	ldr	q1, [x0]
   28f14:	ldr	q0, [sp, #96]
   28f18:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   28f1c:	tbz	w0, #31, 28fe8 <csinf128@@GLIBC_2.27+0x200>
   28f20:	movi	v1.2d, #0x0
   28f24:	stp	x20, x24, [sp, #96]
   28f28:	ldr	q0, [sp, #96]
   28f2c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   28f30:	cbnz	w0, 28fe8 <csinf128@@GLIBC_2.27+0x200>
   28f34:	stp	x19, x22, [sp, #96]
   28f38:	stp	x19, x22, [sp, #112]
   28f3c:	ldr	q1, [sp, #96]
   28f40:	ldr	q0, [sp, #112]
   28f44:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28f48:	cbnz	w0, 293dc <csinf128@@GLIBC_2.27+0x5f4>
   28f4c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28f50:	add	x0, x0, #0x300
   28f54:	stp	x19, x22, [sp, #96]
   28f58:	ldr	q1, [x0]
   28f5c:	ldr	q0, [sp, #96]
   28f60:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28f64:	cbnz	w0, 290c4 <csinf128@@GLIBC_2.27+0x2dc>
   28f68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28f6c:	add	x0, x0, #0x300
   28f70:	stp	x19, x22, [sp, #96]
   28f74:	ldr	q1, [x0]
   28f78:	ldr	q0, [sp, #96]
   28f7c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   28f80:	cmp	w0, #0x0
   28f84:	b.le	290c4 <csinf128@@GLIBC_2.27+0x2dc>
   28f88:	cbz	w26, 293a8 <csinf128@@GLIBC_2.27+0x5c0>
   28f8c:	mov	x27, x23
   28f90:	mov	x26, #0x0                   	// #0
   28f94:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   28f98:	b	292c0 <csinf128@@GLIBC_2.27+0x4d8>
   28f9c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   28fa0:	add	x0, x0, #0xeb0
   28fa4:	stp	x19, x22, [sp, #96]
   28fa8:	ldr	q1, [x0]
   28fac:	ldr	q0, [sp, #96]
   28fb0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   28fb4:	tbz	w0, #31, 28fcc <csinf128@@GLIBC_2.27+0x1e4>
   28fb8:	movi	v1.2d, #0x0
   28fbc:	stp	x19, x23, [sp, #96]
   28fc0:	ldr	q0, [sp, #96]
   28fc4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   28fc8:	cbz	w0, 293b8 <csinf128@@GLIBC_2.27+0x5d0>
   28fcc:	mov	w0, #0x1                   	// #1
   28fd0:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   28fd4:	mov	x26, #0x0                   	// #0
   28fd8:	mov	x27, x24
   28fdc:	mov	x19, #0x0                   	// #0
   28fe0:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   28fe4:	b	292c0 <csinf128@@GLIBC_2.27+0x4d8>
   28fe8:	stp	x19, x22, [sp, #96]
   28fec:	stp	x19, x22, [sp, #112]
   28ff0:	ldr	q1, [sp, #96]
   28ff4:	ldr	q0, [sp, #112]
   28ff8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   28ffc:	cbnz	w0, 29410 <csinf128@@GLIBC_2.27+0x628>
   29000:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29004:	add	x0, x0, #0x300
   29008:	stp	x19, x22, [sp, #96]
   2900c:	ldr	q1, [x0]
   29010:	ldr	q0, [sp, #96]
   29014:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   29018:	cbnz	w0, 290c4 <csinf128@@GLIBC_2.27+0x2dc>
   2901c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29020:	add	x0, x0, #0x300
   29024:	stp	x19, x22, [sp, #96]
   29028:	ldr	q1, [x0]
   2902c:	ldr	q0, [sp, #96]
   29030:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29034:	cmp	w0, #0x0
   29038:	b.le	290c4 <csinf128@@GLIBC_2.27+0x2dc>
   2903c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29040:	add	x0, x0, #0xeb0
   29044:	stp	x20, x21, [sp, #96]
   29048:	ldr	q1, [x0]
   2904c:	ldr	q0, [sp, #96]
   29050:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   29054:	cmp	w0, #0x0
   29058:	b.le	29424 <csinf128@@GLIBC_2.27+0x63c>
   2905c:	stp	x20, x21, [sp, #96]
   29060:	add	x1, sp, #0xc0
   29064:	add	x0, sp, #0xb0
   29068:	ldr	q0, [sp, #96]
   2906c:	bl	24048 <sincosf128@@GLIBC_2.27>
   29070:	ldr	x2, [sp, #200]
   29074:	mov	x1, #0x7fff000000000000    	// #9223090561878065152
   29078:	ldr	x21, [sp, #184]
   2907c:	cmp	x2, #0x0
   29080:	mov	x0, #0xffff000000000000    	// #-281474976710656
   29084:	csel	x1, x1, x0, ge  // ge = tcont
   29088:	cmp	x21, #0x0
   2908c:	mov	x0, #0x7fff000000000000    	// #9223090561878065152
   29090:	mov	x2, #0xffff000000000000    	// #-281474976710656
   29094:	csel	x0, x0, x2, ge  // ge = tcont
   29098:	cbnz	w26, 293f8 <csinf128@@GLIBC_2.27+0x610>
   2909c:	mov	x24, x0
   290a0:	mov	x27, x1
   290a4:	mov	x26, #0x0                   	// #0
   290a8:	mov	x19, #0x0                   	// #0
   290ac:	tbz	x23, #63, 292c0 <csinf128@@GLIBC_2.27+0x4d8>
   290b0:	eor	x27, x1, #0x8000000000000000
   290b4:	mov	x24, x0
   290b8:	mov	x26, #0x0                   	// #0
   290bc:	mov	x19, #0x0                   	// #0
   290c0:	b	292c0 <csinf128@@GLIBC_2.27+0x4d8>
   290c4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   290c8:	add	x0, x0, #0x120
   290cc:	ldr	q1, [x0]
   290d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   290d4:	add	x0, x0, #0xea0
   290d8:	ldr	q0, [x0]
   290dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   290e0:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   290e4:	mov	w24, w0
   290e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   290ec:	add	x0, x0, #0xeb0
   290f0:	stp	x20, x21, [sp, #96]
   290f4:	ldr	q1, [x0]
   290f8:	ldr	q0, [sp, #96]
   290fc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   29100:	cmp	w0, #0x0
   29104:	b.le	29388 <csinf128@@GLIBC_2.27+0x5a0>
   29108:	stp	x20, x21, [sp, #96]
   2910c:	add	x1, sp, #0xc0
   29110:	add	x0, sp, #0xb0
   29114:	ldr	q0, [sp, #96]
   29118:	bl	24048 <sincosf128@@GLIBC_2.27>
   2911c:	cbz	w26, 2912c <csinf128@@GLIBC_2.27+0x344>
   29120:	ldr	x0, [sp, #184]
   29124:	eor	x0, x0, #0x8000000000000000
   29128:	str	x0, [sp, #184]
   2912c:	mov	w0, w24
   29130:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   29134:	stp	x19, x22, [sp, #96]
   29138:	ldr	q1, [sp, #96]
   2913c:	str	q0, [sp, #112]
   29140:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29144:	tbz	w0, #31, 29300 <csinf128@@GLIBC_2.27+0x518>
   29148:	ldr	q0, [sp, #112]
   2914c:	bl	141f0 <__expl_finite@GLIBC_2.17>
   29150:	str	q0, [sp, #144]
   29154:	tbnz	x23, #63, 29350 <csinf128@@GLIBC_2.27+0x568>
   29158:	ldp	x21, x20, [sp, #192]
   2915c:	stp	x19, x22, [sp, #96]
   29160:	ldr	q1, [sp, #112]
   29164:	ldr	q0, [sp, #96]
   29168:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2916c:	str	q0, [sp, #96]
   29170:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29174:	add	x0, x0, #0x330
   29178:	ldr	q0, [sp, #144]
   2917c:	ldr	q1, [x0]
   29180:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29184:	str	q0, [sp, #160]
   29188:	ldr	q1, [sp, #176]
   2918c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29190:	stp	x21, x20, [sp, #128]
   29194:	mov	v3.16b, v0.16b
   29198:	ldr	q1, [sp, #128]
   2919c:	ldr	q2, [sp, #160]
   291a0:	str	q3, [sp, #128]
   291a4:	str	q3, [sp, #176]
   291a8:	mov	v0.16b, v2.16b
   291ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   291b0:	mov	v2.16b, v0.16b
   291b4:	ldr	q1, [sp, #96]
   291b8:	ldr	q0, [sp, #112]
   291bc:	str	q2, [sp, #160]
   291c0:	str	q2, [sp, #192]
   291c4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   291c8:	tbz	w0, #31, 29200 <csinf128@@GLIBC_2.27+0x418>
   291cc:	ldr	q0, [sp, #96]
   291d0:	ldr	q1, [sp, #112]
   291d4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   291d8:	str	q0, [sp, #96]
   291dc:	ldr	q0, [sp, #128]
   291e0:	ldr	q1, [sp, #144]
   291e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   291e8:	mov	v2.16b, v0.16b
   291ec:	ldr	q1, [sp, #144]
   291f0:	ldr	q0, [sp, #160]
   291f4:	str	q2, [sp, #176]
   291f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   291fc:	str	q0, [sp, #192]
   29200:	ldr	q1, [sp, #96]
   29204:	ldr	q0, [sp, #112]
   29208:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2920c:	tbz	w0, #31, 2935c <csinf128@@GLIBC_2.27+0x574>
   29210:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29214:	add	x0, x0, #0x300
   29218:	ldr	q0, [sp, #176]
   2921c:	ldr	q1, [x0]
   29220:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29224:	str	q0, [sp, #96]
   29228:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2922c:	add	x0, x0, #0x300
   29230:	ldp	x23, x22, [sp, #96]
   29234:	ldr	q1, [x0]
   29238:	ldr	q0, [sp, #192]
   2923c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29240:	str	q0, [sp, #96]
   29244:	ldp	x21, x20, [sp, #96]
   29248:	mov	x26, x23
   2924c:	mov	x24, x22
   29250:	mov	x19, x21
   29254:	mov	x27, x20
   29258:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2925c:	add	x0, x0, #0xeb0
   29260:	ldr	q1, [x0]
   29264:	and	x0, x22, #0x7fffffffffffffff
   29268:	stp	x23, x0, [sp, #96]
   2926c:	ldr	q0, [sp, #96]
   29270:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29274:	tbz	w0, #31, 2928c <csinf128@@GLIBC_2.27+0x4a4>
   29278:	stp	x23, x22, [sp, #96]
   2927c:	stp	x23, x22, [sp, #112]
   29280:	ldr	q1, [sp, #96]
   29284:	ldr	q0, [sp, #112]
   29288:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2928c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29290:	add	x0, x0, #0xeb0
   29294:	ldr	q1, [x0]
   29298:	and	x0, x20, #0x7fffffffffffffff
   2929c:	stp	x21, x0, [sp, #96]
   292a0:	ldr	q0, [sp, #96]
   292a4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   292a8:	tbz	w0, #31, 292c0 <csinf128@@GLIBC_2.27+0x4d8>
   292ac:	stp	x21, x20, [sp, #96]
   292b0:	stp	x21, x20, [sp, #112]
   292b4:	ldr	q1, [sp, #96]
   292b8:	ldr	q0, [sp, #112]
   292bc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   292c0:	ldr	x0, [x25, #4032]
   292c4:	ldr	x1, [sp, #216]
   292c8:	ldr	x0, [x0]
   292cc:	eor	x0, x1, x0
   292d0:	cbnz	x0, 2942c <csinf128@@GLIBC_2.27+0x644>
   292d4:	stp	x26, x24, [sp, #96]
   292d8:	stp	x19, x27, [sp, #112]
   292dc:	ldr	q0, [sp, #96]
   292e0:	ldp	x19, x20, [sp, #16]
   292e4:	ldp	x21, x22, [sp, #32]
   292e8:	ldp	x23, x24, [sp, #48]
   292ec:	ldp	x25, x26, [sp, #64]
   292f0:	ldr	x27, [sp, #80]
   292f4:	ldr	q1, [sp, #112]
   292f8:	ldp	x29, x30, [sp], #224
   292fc:	ret
   29300:	stp	x19, x23, [sp, #96]
   29304:	ldr	q0, [sp, #96]
   29308:	bl	14000 <__coshl_finite@GLIBC_2.17>
   2930c:	ldr	q1, [sp, #176]
   29310:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29314:	str	q0, [sp, #112]
   29318:	ldp	x0, x22, [sp, #112]
   2931c:	stp	x19, x23, [sp, #96]
   29320:	ldr	q0, [sp, #96]
   29324:	mov	x23, x0
   29328:	bl	1e700 <__sinhl_finite@GLIBC_2.17>
   2932c:	ldr	q1, [sp, #192]
   29330:	mov	x24, x22
   29334:	mov	x26, x23
   29338:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2933c:	str	q0, [sp, #96]
   29340:	ldp	x21, x20, [sp, #96]
   29344:	mov	x19, x21
   29348:	mov	x27, x20
   2934c:	b	29258 <csinf128@@GLIBC_2.27+0x470>
   29350:	ldp	x21, x20, [sp, #192]
   29354:	eor	x20, x20, #0x8000000000000000
   29358:	b	2915c <csinf128@@GLIBC_2.27+0x374>
   2935c:	ldr	q0, [sp, #96]
   29360:	bl	141f0 <__expl_finite@GLIBC_2.17>
   29364:	str	q0, [sp, #112]
   29368:	ldr	q1, [sp, #176]
   2936c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29370:	str	q0, [sp, #96]
   29374:	ldr	q2, [sp, #112]
   29378:	ldp	x23, x22, [sp, #96]
   2937c:	mov	v0.16b, v2.16b
   29380:	ldr	q1, [sp, #192]
   29384:	b	2923c <csinf128@@GLIBC_2.27+0x454>
   29388:	adrp	x2, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2938c:	add	x2, x2, #0x2f0
   29390:	fmov	d0, x20
   29394:	ldr	q2, [x2]
   29398:	fmov	v0.d[1], x21
   2939c:	str	q0, [sp, #176]
   293a0:	str	q2, [sp, #192]
   293a4:	b	2911c <csinf128@@GLIBC_2.27+0x334>
   293a8:	mov	x27, x23
   293ac:	mov	x26, #0x0                   	// #0
   293b0:	mov	x24, #0x0                   	// #0
   293b4:	b	292c0 <csinf128@@GLIBC_2.27+0x4d8>
   293b8:	stp	x20, x21, [sp, #96]
   293bc:	mov	x27, x23
   293c0:	stp	x20, x21, [sp, #112]
   293c4:	ldr	q1, [sp, #96]
   293c8:	ldr	q0, [sp, #112]
   293cc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   293d0:	str	q0, [sp, #96]
   293d4:	ldp	x26, x24, [sp, #96]
   293d8:	b	292c0 <csinf128@@GLIBC_2.27+0x4d8>
   293dc:	cmp	w26, #0x0
   293e0:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   293e4:	mov	x26, #0x0                   	// #0
   293e8:	csel	x24, x24, xzr, ne  // ne = any
   293ec:	mov	x19, #0x0                   	// #0
   293f0:	mov	x27, #0x7fff800000000000    	// #9223231299366420480
   293f4:	b	292c0 <csinf128@@GLIBC_2.27+0x4d8>
   293f8:	eor	x0, x0, #0x8000000000000000
   293fc:	mov	x27, x1
   29400:	mov	x24, x0
   29404:	mov	x26, #0x0                   	// #0
   29408:	mov	x19, #0x0                   	// #0
   2940c:	b	290ac <csinf128@@GLIBC_2.27+0x2c4>
   29410:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   29414:	mov	x26, #0x0                   	// #0
   29418:	mov	x27, x24
   2941c:	mov	x19, #0x0                   	// #0
   29420:	b	292c0 <csinf128@@GLIBC_2.27+0x4d8>
   29424:	mov	x1, #0x7fff000000000000    	// #9223090561878065152
   29428:	b	29088 <csinf128@@GLIBC_2.27+0x2a0>
   2942c:	bl	ba70 <__stack_chk_fail@plt>

0000000000029430 <casinhf128@@GLIBC_2.27>:
   29430:	stp	x29, x30, [sp, #-144]!
   29434:	mov	x29, sp
   29438:	stp	x21, x22, [sp, #32]
   2943c:	stp	x27, x28, [sp, #80]
   29440:	str	q0, [sp, #96]
   29444:	ldp	x22, x27, [sp, #96]
   29448:	stp	x19, x20, [sp, #16]
   2944c:	stp	x23, x24, [sp, #48]
   29450:	str	q1, [sp, #128]
   29454:	ldp	x20, x24, [sp, #128]
   29458:	and	x21, x27, #0x7fffffffffffffff
   2945c:	stp	x21, x22, [sp, #104]
   29460:	mov	x19, x22
   29464:	str	x21, [sp, #120]
   29468:	ldr	q1, [sp, #96]
   2946c:	ldr	q0, [sp, #112]
   29470:	and	x28, x24, #0x7fffffffffffffff
   29474:	mov	x23, x20
   29478:	stp	x25, x26, [sp, #64]
   2947c:	mov	x25, x27
   29480:	mov	x26, x24
   29484:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   29488:	cbnz	w0, 296bc <casinhf128@@GLIBC_2.27+0x28c>
   2948c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29490:	add	x0, x0, #0x300
   29494:	stp	x22, x21, [sp, #96]
   29498:	ldr	q1, [x0]
   2949c:	ldr	q0, [sp, #96]
   294a0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   294a4:	cbnz	w0, 29554 <casinhf128@@GLIBC_2.27+0x124>
   294a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   294ac:	add	x0, x0, #0x300
   294b0:	stp	x22, x21, [sp, #96]
   294b4:	ldr	q1, [x0]
   294b8:	ldr	q0, [sp, #96]
   294bc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   294c0:	cmp	w0, #0x0
   294c4:	b.le	29554 <casinhf128@@GLIBC_2.27+0x124>
   294c8:	stp	x20, x28, [sp, #96]
   294cc:	stp	x20, x28, [sp, #112]
   294d0:	ldr	q1, [sp, #96]
   294d4:	ldr	q0, [sp, #112]
   294d8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   294dc:	cbnz	w0, 29724 <casinhf128@@GLIBC_2.27+0x2f4>
   294e0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   294e4:	add	x0, x0, #0x300
   294e8:	stp	x20, x28, [sp, #96]
   294ec:	ldr	q1, [x0]
   294f0:	ldr	q0, [sp, #96]
   294f4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   294f8:	cbnz	w0, 2951c <casinhf128@@GLIBC_2.27+0xec>
   294fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29500:	add	x0, x0, #0x300
   29504:	stp	x20, x28, [sp, #96]
   29508:	ldr	q1, [x0]
   2950c:	ldr	q0, [sp, #96]
   29510:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29514:	cmp	w0, #0x0
   29518:	b.gt	29774 <casinhf128@@GLIBC_2.27+0x344>
   2951c:	mov	x20, #0x0                   	// #0
   29520:	mov	x24, #0x0                   	// #0
   29524:	tbnz	x26, #63, 296b4 <casinhf128@@GLIBC_2.27+0x284>
   29528:	stp	x19, x25, [sp, #96]
   2952c:	stp	x20, x24, [sp, #112]
   29530:	ldr	q0, [sp, #96]
   29534:	ldp	x19, x20, [sp, #16]
   29538:	ldp	x21, x22, [sp, #32]
   2953c:	ldp	x23, x24, [sp, #48]
   29540:	ldp	x25, x26, [sp, #64]
   29544:	ldp	x27, x28, [sp, #80]
   29548:	ldr	q1, [sp, #112]
   2954c:	ldp	x29, x30, [sp], #144
   29550:	ret
   29554:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29558:	add	x0, x0, #0xeb0
   2955c:	stp	x19, x21, [sp, #96]
   29560:	ldr	q1, [x0]
   29564:	ldr	q0, [sp, #96]
   29568:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2956c:	tbnz	w0, #31, 295f4 <casinhf128@@GLIBC_2.27+0x1c4>
   29570:	stp	x23, x28, [sp, #96]
   29574:	stp	x23, x28, [sp, #112]
   29578:	ldr	q1, [sp, #96]
   2957c:	ldr	q0, [sp, #112]
   29580:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   29584:	cbnz	w0, 296a0 <casinhf128@@GLIBC_2.27+0x270>
   29588:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2958c:	add	x0, x0, #0x300
   29590:	stp	x23, x28, [sp, #96]
   29594:	ldr	q1, [x0]
   29598:	ldr	q0, [sp, #96]
   2959c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   295a0:	cbnz	w0, 295c4 <casinhf128@@GLIBC_2.27+0x194>
   295a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   295a8:	add	x0, x0, #0x300
   295ac:	stp	x23, x28, [sp, #96]
   295b0:	ldr	q1, [x0]
   295b4:	ldr	q0, [sp, #96]
   295b8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   295bc:	cmp	w0, #0x0
   295c0:	b.gt	29730 <casinhf128@@GLIBC_2.27+0x300>
   295c4:	stp	x22, x27, [sp, #96]
   295c8:	mov	w0, #0x0                   	// #0
   295cc:	stp	x20, x24, [sp, #112]
   295d0:	ldr	q0, [sp, #96]
   295d4:	ldp	x19, x20, [sp, #16]
   295d8:	ldp	x21, x22, [sp, #32]
   295dc:	ldp	x23, x24, [sp, #48]
   295e0:	ldp	x25, x26, [sp, #64]
   295e4:	ldp	x27, x28, [sp, #80]
   295e8:	ldr	q1, [sp, #112]
   295ec:	ldp	x29, x30, [sp], #144
   295f0:	b	297e0 <casinhf128@@GLIBC_2.27+0x3b0>
   295f4:	movi	v1.2d, #0x0
   295f8:	stp	x19, x25, [sp, #96]
   295fc:	ldr	q0, [sp, #96]
   29600:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   29604:	stp	x23, x28, [sp, #96]
   29608:	stp	x23, x28, [sp, #112]
   2960c:	ldr	q1, [sp, #96]
   29610:	ldr	q0, [sp, #112]
   29614:	cbnz	w0, 29698 <casinhf128@@GLIBC_2.27+0x268>
   29618:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2961c:	cbnz	w0, 296a0 <casinhf128@@GLIBC_2.27+0x270>
   29620:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29624:	add	x0, x0, #0x300
   29628:	stp	x23, x28, [sp, #96]
   2962c:	ldr	q1, [x0]
   29630:	ldr	q0, [sp, #96]
   29634:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   29638:	cbnz	w0, 2965c <casinhf128@@GLIBC_2.27+0x22c>
   2963c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29640:	add	x0, x0, #0x300
   29644:	stp	x23, x28, [sp, #96]
   29648:	ldr	q1, [x0]
   2964c:	ldr	q0, [sp, #96]
   29650:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29654:	cmp	w0, #0x0
   29658:	b.gt	29730 <casinhf128@@GLIBC_2.27+0x300>
   2965c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29660:	add	x0, x0, #0xeb0
   29664:	stp	x23, x28, [sp, #96]
   29668:	ldr	q1, [x0]
   2966c:	ldr	q0, [sp, #96]
   29670:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   29674:	tbz	w0, #31, 295c4 <casinhf128@@GLIBC_2.27+0x194>
   29678:	movi	v1.2d, #0x0
   2967c:	stp	x23, x26, [sp, #96]
   29680:	ldr	q0, [sp, #96]
   29684:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   29688:	cbnz	w0, 295c4 <casinhf128@@GLIBC_2.27+0x194>
   2968c:	mov	x19, x22
   29690:	mov	x25, x27
   29694:	b	29528 <casinhf128@@GLIBC_2.27+0xf8>
   29698:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2969c:	cbz	w0, 29588 <casinhf128@@GLIBC_2.27+0x158>
   296a0:	mov	x25, #0x7fff800000000000    	// #9223231299366420480
   296a4:	mov	x19, #0x0                   	// #0
   296a8:	mov	x24, x25
   296ac:	mov	x20, #0x0                   	// #0
   296b0:	b	29528 <casinhf128@@GLIBC_2.27+0xf8>
   296b4:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   296b8:	b	29528 <casinhf128@@GLIBC_2.27+0xf8>
   296bc:	stp	x20, x28, [sp, #96]
   296c0:	stp	x20, x28, [sp, #112]
   296c4:	ldr	q1, [sp, #96]
   296c8:	ldr	q0, [sp, #112]
   296cc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   296d0:	cbnz	w0, 29724 <casinhf128@@GLIBC_2.27+0x2f4>
   296d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   296d8:	add	x0, x0, #0x300
   296dc:	stp	x20, x28, [sp, #96]
   296e0:	ldr	q1, [x0]
   296e4:	ldr	q0, [sp, #96]
   296e8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   296ec:	cbnz	w0, 297a8 <casinhf128@@GLIBC_2.27+0x378>
   296f0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   296f4:	add	x0, x0, #0x300
   296f8:	stp	x20, x28, [sp, #96]
   296fc:	ldr	q1, [x0]
   29700:	ldr	q0, [sp, #96]
   29704:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29708:	cmp	w0, #0x0
   2970c:	b.le	297a8 <casinhf128@@GLIBC_2.27+0x378>
   29710:	mov	x19, #0x0                   	// #0
   29714:	mov	x27, #0x7fff000000000000    	// #9223090561878065152
   29718:	tbz	x25, #63, 29720 <casinhf128@@GLIBC_2.27+0x2f0>
   2971c:	mov	x27, #0xffff000000000000    	// #-281474976710656
   29720:	mov	x25, x27
   29724:	mov	x20, #0x0                   	// #0
   29728:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2972c:	b	29528 <casinhf128@@GLIBC_2.27+0xf8>
   29730:	mov	x19, #0x0                   	// #0
   29734:	mov	x27, #0x7fff000000000000    	// #9223090561878065152
   29738:	tbnz	x25, #63, 2976c <casinhf128@@GLIBC_2.27+0x33c>
   2973c:	mov	x20, #0x1b8                 	// #440
   29740:	mov	x24, #0x42d1                	// #17105
   29744:	movk	x20, #0xc517, lsl #16
   29748:	movk	x24, #0xb544, lsl #16
   2974c:	movk	x20, #0x898c, lsl #32
   29750:	movk	x24, #0x921f, lsl #32
   29754:	movk	x20, #0x8469, lsl #48
   29758:	movk	x24, #0x3fff, lsl #48
   2975c:	and	x26, x26, #0x8000000000000000
   29760:	mov	x25, x27
   29764:	orr	x24, x24, x26
   29768:	b	29528 <casinhf128@@GLIBC_2.27+0xf8>
   2976c:	mov	x27, #0xffff000000000000    	// #-281474976710656
   29770:	b	2973c <casinhf128@@GLIBC_2.27+0x30c>
   29774:	mov	x19, #0x0                   	// #0
   29778:	mov	x27, #0x7fff000000000000    	// #9223090561878065152
   2977c:	tbz	x25, #63, 29784 <casinhf128@@GLIBC_2.27+0x354>
   29780:	mov	x27, #0xffff000000000000    	// #-281474976710656
   29784:	mov	x20, #0x1b8                 	// #440
   29788:	mov	x24, #0x42d1                	// #17105
   2978c:	movk	x20, #0xc517, lsl #16
   29790:	movk	x24, #0xb544, lsl #16
   29794:	movk	x20, #0x898c, lsl #32
   29798:	movk	x24, #0x921f, lsl #32
   2979c:	movk	x20, #0x8469, lsl #48
   297a0:	movk	x24, #0x3ffe, lsl #48
   297a4:	b	2975c <casinhf128@@GLIBC_2.27+0x32c>
   297a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   297ac:	add	x0, x0, #0xeb0
   297b0:	stp	x23, x28, [sp, #96]
   297b4:	ldr	q1, [x0]
   297b8:	ldr	q0, [sp, #96]
   297bc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   297c0:	tbz	w0, #31, 29724 <casinhf128@@GLIBC_2.27+0x2f4>
   297c4:	movi	v1.2d, #0x0
   297c8:	stp	x23, x26, [sp, #96]
   297cc:	ldr	q0, [sp, #96]
   297d0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   297d4:	cbz	w0, 2951c <casinhf128@@GLIBC_2.27+0xec>
   297d8:	b	29724 <casinhf128@@GLIBC_2.27+0x2f4>
   297dc:	nop
   297e0:	stp	x29, x30, [sp, #-208]!
   297e4:	mov	x29, sp
   297e8:	stp	x19, x20, [sp, #16]
   297ec:	stp	x23, x24, [sp, #48]
   297f0:	str	q0, [sp, #96]
   297f4:	ldp	x23, x20, [sp, #96]
   297f8:	stp	x21, x22, [sp, #32]
   297fc:	mov	w22, w0
   29800:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   29804:	add	x0, x0, #0x150
   29808:	str	q1, [sp, #112]
   2980c:	ldp	x19, x21, [sp, #112]
   29810:	stp	x25, x26, [sp, #64]
   29814:	and	x25, x20, #0x7fffffffffffffff
   29818:	str	x25, [sp, #104]
   2981c:	ldr	q1, [x0]
   29820:	ldr	q0, [sp, #96]
   29824:	and	x26, x21, #0x7fffffffffffffff
   29828:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2982c:	tbz	w0, #31, 2984c <casinhf128@@GLIBC_2.27+0x41c>
   29830:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   29834:	add	x0, x0, #0x150
   29838:	stp	x19, x26, [sp, #96]
   2983c:	ldr	q1, [x0]
   29840:	ldr	q0, [sp, #96]
   29844:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   29848:	tbnz	w0, #31, 298dc <casinhf128@@GLIBC_2.27+0x4ac>
   2984c:	mov	x0, x23
   29850:	cbnz	w22, 298c8 <casinhf128@@GLIBC_2.27+0x498>
   29854:	stp	x0, x25, [sp, #96]
   29858:	stp	x19, x26, [sp, #112]
   2985c:	ldr	q0, [sp, #96]
   29860:	ldr	q1, [sp, #112]
   29864:	bl	2cf40 <clogf128@@GLIBC_2.27>
   29868:	str	q1, [sp, #96]
   2986c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29870:	add	x0, x0, #0xea0
   29874:	ldr	q1, [x0]
   29878:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2987c:	ldp	x23, x25, [sp, #96]
   29880:	str	q0, [sp, #96]
   29884:	ldp	x19, x0, [sp, #96]
   29888:	bfxil	x20, x0, #0, #63
   2988c:	cmp	w22, #0x0
   29890:	mov	x0, #0x3fff000000000000    	// #4611404543450677248
   29894:	csel	x21, x21, x0, eq  // eq = none
   29898:	mov	x0, x21
   2989c:	stp	x19, x20, [sp, #96]
   298a0:	bfxil	x0, x25, #0, #63
   298a4:	stp	x23, x0, [sp, #112]
   298a8:	ldr	q0, [sp, #96]
   298ac:	ldp	x19, x20, [sp, #16]
   298b0:	ldp	x21, x22, [sp, #32]
   298b4:	ldp	x23, x24, [sp, #48]
   298b8:	ldp	x25, x26, [sp, #64]
   298bc:	ldr	q1, [sp, #112]
   298c0:	ldp	x29, x30, [sp], #208
   298c4:	ret
   298c8:	mov	x0, x19
   298cc:	mov	x26, x25
   298d0:	mov	x19, x23
   298d4:	mov	x25, x21
   298d8:	b	29854 <casinhf128@@GLIBC_2.27+0x424>
   298dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   298e0:	add	x0, x0, #0x330
   298e4:	stp	x23, x25, [sp, #96]
   298e8:	ldr	q1, [x0]
   298ec:	ldr	q0, [sp, #96]
   298f0:	stp	x27, x28, [sp, #80]
   298f4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   298f8:	tbnz	w0, #31, 29918 <casinhf128@@GLIBC_2.27+0x4e8>
   298fc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   29900:	add	x0, x0, #0x160
   29904:	stp	x19, x26, [sp, #96]
   29908:	ldr	q1, [x0]
   2990c:	ldr	q0, [sp, #96]
   29910:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29914:	tbnz	w0, #31, 29d90 <casinhf128@@GLIBC_2.27+0x960>
   29918:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2991c:	add	x0, x0, #0x160
   29920:	stp	x23, x25, [sp, #96]
   29924:	ldr	q1, [x0]
   29928:	ldr	q0, [sp, #96]
   2992c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29930:	tbnz	w0, #31, 29a50 <casinhf128@@GLIBC_2.27+0x620>
   29934:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29938:	add	x0, x0, #0x2f0
   2993c:	stp	x19, x26, [sp, #96]
   29940:	ldr	q1, [x0]
   29944:	ldr	q0, [sp, #96]
   29948:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2994c:	str	x19, [sp, #96]
   29950:	cmp	w0, #0x0
   29954:	b.le	29c5c <casinhf128@@GLIBC_2.27+0x82c>
   29958:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   2995c:	add	x0, x0, #0x920
   29960:	str	x26, [sp, #104]
   29964:	ldr	q1, [x0]
   29968:	ldr	q0, [sp, #96]
   2996c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29970:	tbz	w0, #31, 29b04 <casinhf128@@GLIBC_2.27+0x6d4>
   29974:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29978:	add	x0, x0, #0x330
   2997c:	stp	x23, x25, [sp, #96]
   29980:	ldr	q1, [x0]
   29984:	ldr	q0, [sp, #96]
   29988:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2998c:	tbz	w0, #31, 29b04 <casinhf128@@GLIBC_2.27+0x6d4>
   29990:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29994:	add	x0, x0, #0x2f0
   29998:	stp	x19, x26, [sp, #96]
   2999c:	ldr	q1, [x0]
   299a0:	ldr	q0, [sp, #96]
   299a4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   299a8:	stp	x19, x26, [sp, #96]
   299ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   299b0:	add	x0, x0, #0x2f0
   299b4:	str	q0, [sp, #112]
   299b8:	ldr	q0, [sp, #96]
   299bc:	ldr	q1, [x0]
   299c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   299c4:	mov	v1.16b, v0.16b
   299c8:	ldr	q2, [sp, #112]
   299cc:	mov	v0.16b, v2.16b
   299d0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   299d4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   299d8:	add	x0, x0, #0x170
   299dc:	stp	x23, x25, [sp, #96]
   299e0:	str	q0, [sp, #112]
   299e4:	ldr	q1, [x0]
   299e8:	ldr	q0, [sp, #96]
   299ec:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   299f0:	tbz	w0, #31, 2a028 <casinhf128@@GLIBC_2.27+0xbf8>
   299f4:	ldr	q0, [sp, #112]
   299f8:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   299fc:	stp	x19, x26, [sp, #128]
   29a00:	str	q0, [sp, #96]
   29a04:	ldr	q1, [sp, #96]
   29a08:	ldr	q0, [sp, #128]
   29a0c:	ldr	x28, [sp, #104]
   29a10:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29a14:	ldr	q1, [sp, #112]
   29a18:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29a1c:	mov	v1.16b, v0.16b
   29a20:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29a24:	ldr	x19, [sp, #96]
   29a28:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   29a2c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29a30:	add	x0, x0, #0x330
   29a34:	ldr	q1, [x0]
   29a38:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29a3c:	str	q0, [sp, #96]
   29a40:	ldp	x24, x27, [sp, #96]
   29a44:	cbz	w22, 2a494 <casinhf128@@GLIBC_2.27+0x1064>
   29a48:	str	x19, [sp, #96]
   29a4c:	b	29aec <casinhf128@@GLIBC_2.27+0x6bc>
   29a50:	adrp	x0, 62000 <f64xsubf128@@GLIBC_2.28+0xe280>
   29a54:	add	x0, x0, #0x920
   29a58:	stp	x19, x26, [sp, #96]
   29a5c:	ldr	q1, [x0]
   29a60:	ldr	q0, [sp, #96]
   29a64:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   29a68:	tbnz	w0, #31, 29934 <casinhf128@@GLIBC_2.27+0x504>
   29a6c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29a70:	add	x0, x0, #0x2f0
   29a74:	stp	x19, x26, [sp, #96]
   29a78:	ldr	q1, [x0]
   29a7c:	ldr	q0, [sp, #96]
   29a80:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29a84:	stp	x19, x26, [sp, #96]
   29a88:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29a8c:	add	x0, x0, #0x2f0
   29a90:	str	q0, [sp, #112]
   29a94:	ldr	q0, [sp, #96]
   29a98:	ldr	q1, [x0]
   29a9c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   29aa0:	mov	v1.16b, v0.16b
   29aa4:	ldr	q2, [sp, #112]
   29aa8:	mov	v0.16b, v2.16b
   29aac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29ab0:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   29ab4:	str	q0, [sp, #96]
   29ab8:	ldp	x0, x28, [sp, #96]
   29abc:	stp	x19, x26, [sp, #112]
   29ac0:	mov	v1.16b, v0.16b
   29ac4:	ldr	q0, [sp, #112]
   29ac8:	str	x0, [sp, #128]
   29acc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29ad0:	bl	1c928 <__logl_finite@GLIBC_2.17>
   29ad4:	str	q0, [sp, #96]
   29ad8:	ldp	x19, x27, [sp, #96]
   29adc:	ldr	x0, [sp, #128]
   29ae0:	mov	x24, x19
   29ae4:	cbz	w22, 29fe4 <casinhf128@@GLIBC_2.27+0xbb4>
   29ae8:	str	x0, [sp, #96]
   29aec:	bfxil	x21, x28, #0, #63
   29af0:	stp	x21, x23, [sp, #104]
   29af4:	str	x25, [sp, #120]
   29af8:	ldr	q1, [sp, #96]
   29afc:	ldr	q0, [sp, #112]
   29b00:	b	29e98 <casinhf128@@GLIBC_2.27+0xa68>
   29b04:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29b08:	add	x0, x0, #0x2f0
   29b0c:	stp	x19, x26, [sp, #96]
   29b10:	ldr	q1, [x0]
   29b14:	ldr	q0, [sp, #96]
   29b18:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29b1c:	tbz	w0, #31, 29c94 <casinhf128@@GLIBC_2.27+0x864>
   29b20:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29b24:	add	x0, x0, #0x330
   29b28:	stp	x23, x25, [sp, #96]
   29b2c:	ldr	q1, [x0]
   29b30:	ldr	q0, [sp, #96]
   29b34:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29b38:	tbz	w0, #31, 29c94 <casinhf128@@GLIBC_2.27+0x864>
   29b3c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   29b40:	add	x0, x0, #0x180
   29b44:	stp	x19, x26, [sp, #96]
   29b48:	ldr	q1, [x0]
   29b4c:	ldr	q0, [sp, #96]
   29b50:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   29b54:	tbnz	w0, #31, 2a36c <casinhf128@@GLIBC_2.27+0xf3c>
   29b58:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29b5c:	add	x0, x0, #0x2f0
   29b60:	stp	x19, x26, [sp, #96]
   29b64:	ldr	q1, [x0]
   29b68:	ldr	q0, [sp, #96]
   29b6c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29b70:	stp	x19, x26, [sp, #96]
   29b74:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29b78:	add	x0, x0, #0x2f0
   29b7c:	str	q0, [sp, #112]
   29b80:	ldr	q1, [sp, #96]
   29b84:	ldr	q0, [x0]
   29b88:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   29b8c:	mov	v1.16b, v0.16b
   29b90:	ldr	q2, [sp, #112]
   29b94:	mov	v0.16b, v2.16b
   29b98:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29b9c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   29ba0:	add	x0, x0, #0x170
   29ba4:	stp	x23, x25, [sp, #96]
   29ba8:	str	q0, [sp, #112]
   29bac:	ldr	q1, [x0]
   29bb0:	ldr	q0, [sp, #96]
   29bb4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29bb8:	tbz	w0, #31, 2a1c4 <casinhf128@@GLIBC_2.27+0xd94>
   29bbc:	ldr	q0, [sp, #112]
   29bc0:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   29bc4:	stp	x23, x25, [sp, #96]
   29bc8:	stp	x23, x25, [sp, #112]
   29bcc:	ldr	q1, [sp, #96]
   29bd0:	str	q0, [sp, #96]
   29bd4:	ldr	q0, [sp, #112]
   29bd8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29bdc:	ldr	q2, [sp, #96]
   29be0:	mov	v1.16b, v2.16b
   29be4:	str	q2, [sp, #112]
   29be8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   29bec:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   29bf0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29bf4:	add	x0, x0, #0x330
   29bf8:	ldr	q1, [x0]
   29bfc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29c00:	str	q0, [sp, #96]
   29c04:	ldp	x24, x27, [sp, #96]
   29c08:	str	x19, [sp, #96]
   29c0c:	ldr	q2, [sp, #112]
   29c10:	cbz	w22, 2a3ec <casinhf128@@GLIBC_2.27+0xfbc>
   29c14:	mov	v0.16b, v2.16b
   29c18:	str	x21, [sp, #104]
   29c1c:	ldr	q1, [sp, #96]
   29c20:	mov	x19, x24
   29c24:	bfxil	x20, x27, #0, #63
   29c28:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   29c2c:	str	q0, [sp, #96]
   29c30:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29c34:	add	x0, x0, #0xeb0
   29c38:	ldp	x23, x25, [sp, #96]
   29c3c:	stp	x24, x27, [sp, #96]
   29c40:	ldr	q1, [x0]
   29c44:	ldr	q0, [sp, #96]
   29c48:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29c4c:	tbnz	w0, #31, 2a00c <casinhf128@@GLIBC_2.27+0xbdc>
   29c50:	mov	x21, #0x3fff000000000000    	// #4611404543450677248
   29c54:	ldp	x27, x28, [sp, #80]
   29c58:	b	29898 <casinhf128@@GLIBC_2.27+0x468>
   29c5c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29c60:	add	x0, x0, #0x2f0
   29c64:	str	x26, [sp, #104]
   29c68:	ldr	q1, [x0]
   29c6c:	ldr	q0, [sp, #96]
   29c70:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   29c74:	cbnz	w0, 29b04 <casinhf128@@GLIBC_2.27+0x6d4>
   29c78:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29c7c:	add	x0, x0, #0x330
   29c80:	stp	x23, x25, [sp, #96]
   29c84:	ldr	q1, [x0]
   29c88:	ldr	q0, [sp, #96]
   29c8c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29c90:	tbnz	w0, #31, 29e0c <casinhf128@@GLIBC_2.27+0x9dc>
   29c94:	stp	x19, x26, [sp, #96]
   29c98:	stp	x23, x25, [sp, #112]
   29c9c:	ldr	q1, [sp, #96]
   29ca0:	ldr	q0, [sp, #112]
   29ca4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   29ca8:	stp	x19, x26, [sp, #96]
   29cac:	stp	x23, x25, [sp, #112]
   29cb0:	ldr	q1, [sp, #96]
   29cb4:	str	q0, [sp, #96]
   29cb8:	ldr	q0, [sp, #112]
   29cbc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29cc0:	mov	v1.16b, v0.16b
   29cc4:	ldr	q2, [sp, #96]
   29cc8:	mov	v0.16b, v2.16b
   29ccc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29cd0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29cd4:	add	x0, x0, #0x2f0
   29cd8:	ldr	q1, [x0]
   29cdc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29ce0:	stp	x23, x25, [sp, #96]
   29ce4:	stp	x23, x25, [sp, #112]
   29ce8:	ldr	q1, [sp, #96]
   29cec:	str	q0, [sp, #128]
   29cf0:	ldr	q0, [sp, #112]
   29cf4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29cf8:	stp	x19, x26, [sp, #96]
   29cfc:	ldr	q1, [sp, #96]
   29d00:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29d04:	mov	v1.16b, v0.16b
   29d08:	ldr	q2, [sp, #128]
   29d0c:	mov	v0.16b, v2.16b
   29d10:	bl	2d7a8 <csqrtf128@@GLIBC_2.27>
   29d14:	stp	x23, x25, [sp, #96]
   29d18:	str	q1, [sp, #128]
   29d1c:	ldr	q1, [sp, #96]
   29d20:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29d24:	stp	x19, x26, [sp, #96]
   29d28:	ldr	q2, [sp, #128]
   29d2c:	ldr	q1, [sp, #96]
   29d30:	str	q0, [sp, #112]
   29d34:	mov	v0.16b, v2.16b
   29d38:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29d3c:	str	q0, [sp, #96]
   29d40:	ldp	x1, x0, [sp, #96]
   29d44:	ldr	x23, [sp, #112]
   29d48:	ldr	x19, [sp, #120]
   29d4c:	cbnz	w22, 29dfc <casinhf128@@GLIBC_2.27+0x9cc>
   29d50:	mov	x3, x23
   29d54:	mov	x2, x19
   29d58:	mov	x23, x1
   29d5c:	mov	x19, x0
   29d60:	stp	x3, x2, [sp, #96]
   29d64:	stp	x23, x19, [sp, #112]
   29d68:	ldr	q0, [sp, #96]
   29d6c:	ldr	q1, [sp, #112]
   29d70:	bl	2cf40 <clogf128@@GLIBC_2.27>
   29d74:	str	q0, [sp, #96]
   29d78:	ldp	x19, x0, [sp, #96]
   29d7c:	str	q1, [sp, #112]
   29d80:	ldp	x27, x28, [sp, #80]
   29d84:	ldp	x23, x25, [sp, #112]
   29d88:	bfxil	x20, x0, #0, #63
   29d8c:	b	2988c <casinhf128@@GLIBC_2.27+0x45c>
   29d90:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29d94:	add	x0, x0, #0x2f0
   29d98:	stp	x23, x25, [sp, #96]
   29d9c:	ldr	q0, [x0]
   29da0:	ldr	q1, [sp, #96]
   29da4:	bl	14a50 <__hypotl_finite@GLIBC_2.17>
   29da8:	stp	x23, x25, [sp, #96]
   29dac:	mov	v1.16b, v0.16b
   29db0:	str	q0, [sp, #112]
   29db4:	ldr	q0, [sp, #96]
   29db8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29dbc:	bl	1c928 <__logl_finite@GLIBC_2.17>
   29dc0:	str	q0, [sp, #96]
   29dc4:	ldr	q1, [sp, #112]
   29dc8:	ldp	x24, x27, [sp, #96]
   29dcc:	str	x19, [sp, #96]
   29dd0:	mov	v0.16b, v1.16b
   29dd4:	cbnz	w22, 29fd8 <casinhf128@@GLIBC_2.27+0xba8>
   29dd8:	str	x26, [sp, #104]
   29ddc:	ldr	q0, [sp, #96]
   29de0:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   29de4:	str	q0, [sp, #96]
   29de8:	ldp	x23, x25, [sp, #96]
   29dec:	bfxil	x20, x27, #0, #63
   29df0:	mov	x19, x24
   29df4:	ldp	x27, x28, [sp, #80]
   29df8:	b	29898 <casinhf128@@GLIBC_2.27+0x468>
   29dfc:	mov	x2, x21
   29e00:	mov	x3, x1
   29e04:	bfxil	x2, x0, #0, #63
   29e08:	b	29d60 <casinhf128@@GLIBC_2.27+0x930>
   29e0c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   29e10:	add	x0, x0, #0x160
   29e14:	stp	x23, x25, [sp, #96]
   29e18:	ldr	q1, [x0]
   29e1c:	ldr	q0, [sp, #96]
   29e20:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   29e24:	tbz	w0, #31, 29eb8 <casinhf128@@GLIBC_2.27+0xa88>
   29e28:	stp	x23, x25, [sp, #96]
   29e2c:	ldr	q0, [sp, #96]
   29e30:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   29e34:	stp	x23, x25, [sp, #96]
   29e38:	ldr	q1, [sp, #96]
   29e3c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29e40:	mov	v1.16b, v0.16b
   29e44:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29e48:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   29e4c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29e50:	add	x0, x0, #0x330
   29e54:	ldr	q1, [x0]
   29e58:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29e5c:	str	q0, [sp, #96]
   29e60:	ldp	x19, x27, [sp, #96]
   29e64:	stp	x23, x25, [sp, #96]
   29e68:	ldr	q0, [sp, #96]
   29e6c:	mov	x24, x19
   29e70:	cbz	w22, 2a430 <casinhf128@@GLIBC_2.27+0x1000>
   29e74:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   29e78:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29e7c:	add	x0, x0, #0x2f0
   29e80:	ldr	q1, [x0]
   29e84:	tbz	x21, #63, 29e98 <casinhf128@@GLIBC_2.27+0xa68>
   29e88:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   29e8c:	add	x0, x0, #0xfd0
   29e90:	ldr	q1, [x0]
   29e94:	nop
   29e98:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   29e9c:	bfxil	x20, x27, #0, #63
   29ea0:	mov	x19, x24
   29ea4:	mov	x21, #0x3fff000000000000    	// #4611404543450677248
   29ea8:	str	q0, [sp, #96]
   29eac:	ldp	x27, x28, [sp, #80]
   29eb0:	ldp	x23, x25, [sp, #96]
   29eb4:	b	29898 <casinhf128@@GLIBC_2.27+0x468>
   29eb8:	stp	x23, x20, [sp, #96]
   29ebc:	stp	x23, x20, [sp, #112]
   29ec0:	ldr	q1, [sp, #96]
   29ec4:	ldr	q0, [sp, #112]
   29ec8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29ecc:	str	q0, [sp, #112]
   29ed0:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   29ed4:	add	x0, x0, #0x5a0
   29ed8:	ldr	q1, [x0]
   29edc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29ee0:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   29ee4:	stp	x23, x25, [sp, #96]
   29ee8:	ldr	q1, [sp, #96]
   29eec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29ef0:	mov	v2.16b, v0.16b
   29ef4:	ldr	q4, [sp, #112]
   29ef8:	mov	v1.16b, v2.16b
   29efc:	str	q2, [sp, #96]
   29f00:	mov	v0.16b, v4.16b
   29f04:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29f08:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29f0c:	add	x0, x0, #0x330
   29f10:	str	q0, [sp, #144]
   29f14:	ldr	q1, [x0]
   29f18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29f1c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   29f20:	mov	v16.16b, v0.16b
   29f24:	ldr	q2, [sp, #96]
   29f28:	ldr	q4, [sp, #112]
   29f2c:	str	q16, [sp, #112]
   29f30:	mov	v0.16b, v2.16b
   29f34:	mov	v1.16b, v4.16b
   29f38:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   29f3c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29f40:	add	x0, x0, #0x330
   29f44:	ldr	q1, [x0]
   29f48:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29f4c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   29f50:	stp	x23, x25, [sp, #96]
   29f54:	ldr	q1, [sp, #112]
   29f58:	str	q0, [sp, #128]
   29f5c:	ldr	q0, [sp, #96]
   29f60:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29f64:	ldr	q1, [sp, #128]
   29f68:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29f6c:	mov	v1.16b, v0.16b
   29f70:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29f74:	ldr	q6, [sp, #144]
   29f78:	mov	v1.16b, v6.16b
   29f7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29f80:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   29f84:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29f88:	add	x0, x0, #0x330
   29f8c:	ldr	q1, [x0]
   29f90:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   29f94:	str	q0, [sp, #96]
   29f98:	ldp	x19, x27, [sp, #96]
   29f9c:	mov	x24, x19
   29fa0:	cbz	w22, 2a454 <casinhf128@@GLIBC_2.27+0x1024>
   29fa4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   29fa8:	add	x0, x0, #0x2f0
   29fac:	ldr	q0, [sp, #128]
   29fb0:	ldr	q1, [x0]
   29fb4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29fb8:	str	q0, [sp, #128]
   29fbc:	ldp	x19, x0, [sp, #128]
   29fc0:	stp	x23, x25, [sp, #96]
   29fc4:	ldr	q1, [sp, #112]
   29fc8:	ldr	q0, [sp, #96]
   29fcc:	bfxil	x21, x0, #0, #63
   29fd0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   29fd4:	str	x19, [sp, #96]
   29fd8:	str	x21, [sp, #104]
   29fdc:	ldr	q1, [sp, #96]
   29fe0:	b	29e98 <casinhf128@@GLIBC_2.27+0xa68>
   29fe4:	str	x23, [sp, #96]
   29fe8:	str	x0, [sp, #112]
   29fec:	str	x25, [sp, #104]
   29ff0:	str	x28, [sp, #120]
   29ff4:	ldr	q1, [sp, #96]
   29ff8:	ldr	q0, [sp, #112]
   29ffc:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   2a000:	str	q0, [sp, #96]
   2a004:	ldp	x23, x25, [sp, #96]
   2a008:	b	29dec <casinhf128@@GLIBC_2.27+0x9bc>
   2a00c:	stp	x24, x27, [sp, #96]
   2a010:	stp	x24, x27, [sp, #112]
   2a014:	ldr	q1, [sp, #96]
   2a018:	ldr	q0, [sp, #112]
   2a01c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a020:	ldp	x27, x28, [sp, #80]
   2a024:	b	2988c <casinhf128@@GLIBC_2.27+0x45c>
   2a028:	stp	x23, x20, [sp, #96]
   2a02c:	stp	x23, x20, [sp, #128]
   2a030:	ldr	q1, [sp, #96]
   2a034:	ldr	q0, [sp, #128]
   2a038:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a03c:	stp	x19, x26, [sp, #96]
   2a040:	stp	x19, x26, [sp, #128]
   2a044:	ldr	q1, [sp, #96]
   2a048:	str	q0, [sp, #96]
   2a04c:	ldr	q0, [sp, #128]
   2a050:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a054:	stp	x19, x26, [sp, #128]
   2a058:	ldr	q1, [sp, #128]
   2a05c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a060:	str	q0, [sp, #128]
   2a064:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2a068:	add	x0, x0, #0xae0
   2a06c:	ldr	q0, [sp, #96]
   2a070:	ldr	q1, [x0]
   2a074:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a078:	mov	v1.16b, v0.16b
   2a07c:	ldr	q2, [sp, #128]
   2a080:	mov	v0.16b, v2.16b
   2a084:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a088:	ldr	q1, [sp, #96]
   2a08c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a090:	str	q0, [sp, #128]
   2a094:	ldr	q0, [sp, #112]
   2a098:	mov	v1.16b, v0.16b
   2a09c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a0a0:	ldr	q4, [sp, #128]
   2a0a4:	mov	v1.16b, v4.16b
   2a0a8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a0ac:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2a0b0:	ldr	q1, [sp, #112]
   2a0b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a0b8:	mov	v2.16b, v0.16b
   2a0bc:	ldr	q4, [sp, #128]
   2a0c0:	mov	v1.16b, v2.16b
   2a0c4:	str	q2, [sp, #176]
   2a0c8:	mov	v0.16b, v4.16b
   2a0cc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2a0d0:	ldr	q1, [sp, #96]
   2a0d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a0d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a0dc:	add	x0, x0, #0x330
   2a0e0:	ldr	q1, [x0]
   2a0e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a0e8:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2a0ec:	str	x19, [sp, #112]
   2a0f0:	stp	x26, x23, [sp, #120]
   2a0f4:	str	x25, [sp, #136]
   2a0f8:	ldr	q1, [sp, #112]
   2a0fc:	str	q0, [sp, #112]
   2a100:	ldr	q0, [sp, #128]
   2a104:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a108:	ldr	q1, [sp, #112]
   2a10c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2a110:	stp	x23, x25, [sp, #128]
   2a114:	ldr	q1, [sp, #112]
   2a118:	str	q0, [sp, #144]
   2a11c:	ldr	q0, [sp, #128]
   2a120:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a124:	stp	x19, x26, [sp, #128]
   2a128:	ldr	q1, [sp, #144]
   2a12c:	str	q0, [sp, #160]
   2a130:	ldr	q0, [sp, #128]
   2a134:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a138:	mov	v1.16b, v0.16b
   2a13c:	ldr	q4, [sp, #160]
   2a140:	mov	v0.16b, v4.16b
   2a144:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a148:	mov	v1.16b, v0.16b
   2a14c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a150:	mov	v4.16b, v0.16b
   2a154:	ldr	q0, [sp, #96]
   2a158:	ldr	q2, [sp, #176]
   2a15c:	str	q4, [sp, #96]
   2a160:	mov	v1.16b, v2.16b
   2a164:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a168:	mov	v1.16b, v0.16b
   2a16c:	ldr	q4, [sp, #96]
   2a170:	mov	v0.16b, v4.16b
   2a174:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a178:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2a17c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a180:	add	x0, x0, #0x330
   2a184:	ldr	q1, [x0]
   2a188:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a18c:	str	q0, [sp, #96]
   2a190:	ldp	x24, x27, [sp, #96]
   2a194:	cbz	w22, 2a4a0 <casinhf128@@GLIBC_2.27+0x1070>
   2a198:	stp	x19, x26, [sp, #96]
   2a19c:	ldr	q1, [sp, #144]
   2a1a0:	ldr	q0, [sp, #96]
   2a1a4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a1a8:	str	q0, [sp, #128]
   2a1ac:	ldp	x19, x0, [sp, #128]
   2a1b0:	stp	x23, x25, [sp, #96]
   2a1b4:	ldr	q1, [sp, #112]
   2a1b8:	ldr	q0, [sp, #96]
   2a1bc:	bfxil	x21, x0, #0, #63
   2a1c0:	b	29fd0 <casinhf128@@GLIBC_2.27+0xba0>
   2a1c4:	stp	x23, x20, [sp, #96]
   2a1c8:	stp	x23, x20, [sp, #128]
   2a1cc:	ldr	q1, [sp, #96]
   2a1d0:	ldr	q0, [sp, #128]
   2a1d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a1d8:	stp	x19, x26, [sp, #96]
   2a1dc:	stp	x19, x26, [sp, #128]
   2a1e0:	ldr	q1, [sp, #96]
   2a1e4:	str	q0, [sp, #96]
   2a1e8:	ldr	q0, [sp, #128]
   2a1ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a1f0:	stp	x19, x26, [sp, #128]
   2a1f4:	ldr	q1, [sp, #128]
   2a1f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a1fc:	str	q0, [sp, #128]
   2a200:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2a204:	add	x0, x0, #0xae0
   2a208:	ldr	q0, [sp, #96]
   2a20c:	ldr	q1, [x0]
   2a210:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a214:	mov	v1.16b, v0.16b
   2a218:	ldr	q2, [sp, #128]
   2a21c:	mov	v0.16b, v2.16b
   2a220:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a224:	ldr	q1, [sp, #96]
   2a228:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a22c:	str	q0, [sp, #128]
   2a230:	ldr	q0, [sp, #112]
   2a234:	mov	v1.16b, v0.16b
   2a238:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a23c:	ldr	q4, [sp, #128]
   2a240:	mov	v1.16b, v4.16b
   2a244:	str	q4, [sp, #192]
   2a248:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a24c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2a250:	ldr	q1, [sp, #112]
   2a254:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a258:	mov	v6.16b, v0.16b
   2a25c:	ldr	q0, [sp, #96]
   2a260:	mov	v1.16b, v6.16b
   2a264:	str	q6, [sp, #176]
   2a268:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a26c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a270:	add	x0, x0, #0x330
   2a274:	ldr	q1, [x0]
   2a278:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a27c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2a280:	stp	x19, x26, [sp, #112]
   2a284:	stp	x23, x25, [sp, #128]
   2a288:	ldr	q1, [sp, #112]
   2a28c:	str	q0, [sp, #112]
   2a290:	ldr	q0, [sp, #128]
   2a294:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a298:	ldr	q1, [sp, #112]
   2a29c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2a2a0:	stp	x23, x25, [sp, #128]
   2a2a4:	ldr	q1, [sp, #112]
   2a2a8:	str	q0, [sp, #144]
   2a2ac:	ldr	q0, [sp, #128]
   2a2b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a2b4:	stp	x19, x26, [sp, #128]
   2a2b8:	ldr	q1, [sp, #144]
   2a2bc:	str	q0, [sp, #160]
   2a2c0:	ldr	q0, [sp, #128]
   2a2c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a2c8:	mov	v1.16b, v0.16b
   2a2cc:	ldr	q2, [sp, #160]
   2a2d0:	mov	v0.16b, v2.16b
   2a2d4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a2d8:	mov	v1.16b, v0.16b
   2a2dc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a2e0:	mov	v2.16b, v0.16b
   2a2e4:	ldr	q6, [sp, #176]
   2a2e8:	ldr	q4, [sp, #192]
   2a2ec:	mov	v1.16b, v6.16b
   2a2f0:	str	q2, [sp, #128]
   2a2f4:	mov	v0.16b, v4.16b
   2a2f8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2a2fc:	ldr	q1, [sp, #96]
   2a300:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a304:	mov	v1.16b, v0.16b
   2a308:	ldr	q2, [sp, #128]
   2a30c:	mov	v0.16b, v2.16b
   2a310:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a314:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2a318:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a31c:	add	x0, x0, #0x330
   2a320:	ldr	q1, [x0]
   2a324:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a328:	str	q0, [sp, #96]
   2a32c:	ldp	x24, x27, [sp, #96]
   2a330:	cbz	w22, 2a4cc <casinhf128@@GLIBC_2.27+0x109c>
   2a334:	stp	x19, x26, [sp, #96]
   2a338:	ldr	q1, [sp, #144]
   2a33c:	ldr	q0, [sp, #96]
   2a340:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a344:	str	q0, [sp, #128]
   2a348:	ldp	x19, x0, [sp, #128]
   2a34c:	stp	x23, x25, [sp, #96]
   2a350:	ldr	q1, [sp, #112]
   2a354:	ldr	q0, [sp, #96]
   2a358:	mov	x23, x21
   2a35c:	bfxil	x23, x0, #0, #63
   2a360:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a364:	stp	x19, x23, [sp, #96]
   2a368:	b	29c1c <casinhf128@@GLIBC_2.27+0x7ec>
   2a36c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a370:	add	x0, x0, #0x2f0
   2a374:	stp	x23, x25, [sp, #96]
   2a378:	ldr	q0, [x0]
   2a37c:	ldr	q1, [sp, #96]
   2a380:	bl	14a50 <__hypotl_finite@GLIBC_2.17>
   2a384:	stp	x23, x25, [sp, #96]
   2a388:	stp	x23, x25, [sp, #112]
   2a38c:	ldr	q1, [sp, #96]
   2a390:	str	q0, [sp, #128]
   2a394:	ldr	q0, [sp, #112]
   2a398:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a39c:	stp	x23, x25, [sp, #96]
   2a3a0:	ldr	q2, [sp, #128]
   2a3a4:	str	q0, [sp, #112]
   2a3a8:	ldr	q0, [sp, #96]
   2a3ac:	mov	v1.16b, v2.16b
   2a3b0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a3b4:	mov	v1.16b, v0.16b
   2a3b8:	ldr	q4, [sp, #112]
   2a3bc:	mov	v0.16b, v4.16b
   2a3c0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a3c4:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2a3c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a3cc:	add	x0, x0, #0x330
   2a3d0:	ldr	q1, [x0]
   2a3d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a3d8:	str	q0, [sp, #96]
   2a3dc:	ldp	x24, x27, [sp, #96]
   2a3e0:	str	x19, [sp, #96]
   2a3e4:	ldr	q2, [sp, #128]
   2a3e8:	cbnz	w22, 29c14 <casinhf128@@GLIBC_2.27+0x7e4>
   2a3ec:	str	x26, [sp, #104]
   2a3f0:	mov	v1.16b, v2.16b
   2a3f4:	ldr	q0, [sp, #96]
   2a3f8:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   2a3fc:	str	q0, [sp, #96]
   2a400:	ldp	x23, x25, [sp, #96]
   2a404:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a408:	add	x0, x0, #0xeb0
   2a40c:	stp	x24, x27, [sp, #96]
   2a410:	bfxil	x20, x27, #0, #63
   2a414:	ldr	q0, [sp, #96]
   2a418:	mov	x19, x24
   2a41c:	ldr	q1, [x0]
   2a420:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a424:	tbnz	w0, #31, 2a00c <casinhf128@@GLIBC_2.27+0xbdc>
   2a428:	ldp	x27, x28, [sp, #80]
   2a42c:	b	29898 <casinhf128@@GLIBC_2.27+0x468>
   2a430:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2a434:	mov	v1.16b, v0.16b
   2a438:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a43c:	add	x0, x0, #0x2f0
   2a440:	ldr	q0, [x0]
   2a444:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   2a448:	str	q0, [sp, #96]
   2a44c:	ldp	x23, x25, [sp, #96]
   2a450:	b	29dec <casinhf128@@GLIBC_2.27+0x9bc>
   2a454:	stp	x23, x25, [sp, #96]
   2a458:	ldr	q1, [sp, #112]
   2a45c:	ldr	q0, [sp, #96]
   2a460:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a464:	str	q0, [sp, #96]
   2a468:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a46c:	add	x0, x0, #0x2f0
   2a470:	ldr	q0, [sp, #128]
   2a474:	ldr	q1, [x0]
   2a478:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a47c:	ldr	q2, [sp, #96]
   2a480:	mov	v1.16b, v2.16b
   2a484:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   2a488:	str	q0, [sp, #96]
   2a48c:	ldp	x23, x25, [sp, #96]
   2a490:	b	29dec <casinhf128@@GLIBC_2.27+0x9bc>
   2a494:	str	x23, [sp, #96]
   2a498:	str	x19, [sp, #112]
   2a49c:	b	29fec <casinhf128@@GLIBC_2.27+0xbbc>
   2a4a0:	stp	x23, x25, [sp, #96]
   2a4a4:	ldr	q1, [sp, #112]
   2a4a8:	ldr	q0, [sp, #96]
   2a4ac:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a4b0:	stp	x19, x26, [sp, #96]
   2a4b4:	ldr	q1, [sp, #144]
   2a4b8:	str	q0, [sp, #112]
   2a4bc:	ldr	q0, [sp, #96]
   2a4c0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a4c4:	ldr	q2, [sp, #112]
   2a4c8:	b	2a480 <casinhf128@@GLIBC_2.27+0x1050>
   2a4cc:	stp	x23, x25, [sp, #96]
   2a4d0:	ldr	q1, [sp, #112]
   2a4d4:	ldr	q0, [sp, #96]
   2a4d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a4dc:	stp	x19, x26, [sp, #96]
   2a4e0:	ldr	q1, [sp, #144]
   2a4e4:	str	q0, [sp, #112]
   2a4e8:	ldr	q0, [sp, #96]
   2a4ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2a4f0:	ldr	q2, [sp, #112]
   2a4f4:	mov	v1.16b, v2.16b
   2a4f8:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   2a4fc:	str	q0, [sp, #96]
   2a500:	ldp	x23, x25, [sp, #96]
   2a504:	b	2a404 <casinhf128@@GLIBC_2.27+0xfd4>

000000000002a508 <csinhf128@@GLIBC_2.27>:
   2a508:	stp	x29, x30, [sp, #-224]!
   2a50c:	mov	x29, sp
   2a510:	stp	x19, x20, [sp, #16]
   2a514:	stp	x23, x24, [sp, #48]
   2a518:	stp	x25, x26, [sp, #64]
   2a51c:	adrp	x25, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2a520:	str	q0, [sp, #96]
   2a524:	ldp	x19, x24, [sp, #96]
   2a528:	str	q1, [sp, #128]
   2a52c:	ldr	x0, [x25, #4032]
   2a530:	stp	x21, x22, [sp, #32]
   2a534:	ldr	x1, [x0]
   2a538:	str	x1, [sp, #216]
   2a53c:	mov	x1, #0x0                   	// #0
   2a540:	ldp	x0, x23, [sp, #128]
   2a544:	and	x20, x24, #0x7fffffffffffffff
   2a548:	stp	x20, x19, [sp, #104]
   2a54c:	str	x20, [sp, #120]
   2a550:	ldr	q1, [sp, #96]
   2a554:	ldr	q0, [sp, #112]
   2a558:	mov	x22, x0
   2a55c:	and	x21, x23, #0x7fffffffffffffff
   2a560:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2a564:	cbnz	w0, 2aa9c <csinhf128@@GLIBC_2.27+0x594>
   2a568:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a56c:	add	x0, x0, #0x300
   2a570:	stp	x19, x20, [sp, #96]
   2a574:	ldr	q1, [x0]
   2a578:	ldr	q0, [sp, #96]
   2a57c:	str	x27, [sp, #80]
   2a580:	lsr	x27, x24, #63
   2a584:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2a588:	cbnz	w0, 2a6cc <csinhf128@@GLIBC_2.27+0x1c4>
   2a58c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a590:	add	x0, x0, #0x300
   2a594:	stp	x19, x20, [sp, #96]
   2a598:	ldr	q1, [x0]
   2a59c:	ldr	q0, [sp, #96]
   2a5a0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a5a4:	cmp	w0, #0x0
   2a5a8:	b.le	2a6cc <csinhf128@@GLIBC_2.27+0x1c4>
   2a5ac:	stp	x22, x21, [sp, #96]
   2a5b0:	stp	x22, x21, [sp, #112]
   2a5b4:	ldr	q1, [sp, #96]
   2a5b8:	ldr	q0, [sp, #112]
   2a5bc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2a5c0:	cbnz	w0, 2ab58 <csinhf128@@GLIBC_2.27+0x650>
   2a5c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a5c8:	add	x0, x0, #0x300
   2a5cc:	stp	x22, x21, [sp, #96]
   2a5d0:	ldr	q1, [x0]
   2a5d4:	ldr	q0, [sp, #96]
   2a5d8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2a5dc:	cbnz	w0, 2a600 <csinhf128@@GLIBC_2.27+0xf8>
   2a5e0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a5e4:	add	x0, x0, #0x300
   2a5e8:	stp	x22, x21, [sp, #96]
   2a5ec:	ldr	q1, [x0]
   2a5f0:	ldr	q0, [sp, #96]
   2a5f4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a5f8:	cmp	w0, #0x0
   2a5fc:	b.gt	2ab58 <csinhf128@@GLIBC_2.27+0x650>
   2a600:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a604:	add	x0, x0, #0xeb0
   2a608:	stp	x22, x21, [sp, #96]
   2a60c:	ldr	q1, [x0]
   2a610:	ldr	q0, [sp, #96]
   2a614:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2a618:	tbnz	w0, #31, 2aa40 <csinhf128@@GLIBC_2.27+0x538>
   2a61c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a620:	add	x0, x0, #0xeb0
   2a624:	stp	x22, x21, [sp, #96]
   2a628:	ldr	q1, [x0]
   2a62c:	ldr	q0, [sp, #96]
   2a630:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2a634:	cmp	w0, #0x0
   2a638:	b.le	2ab50 <csinhf128@@GLIBC_2.27+0x648>
   2a63c:	stp	x22, x23, [sp, #96]
   2a640:	add	x1, sp, #0xc0
   2a644:	add	x0, sp, #0xb0
   2a648:	ldr	q0, [sp, #96]
   2a64c:	mov	x24, #0x7fff000000000000    	// #9223090561878065152
   2a650:	bl	24048 <sincosf128@@GLIBC_2.27>
   2a654:	ldr	x1, [sp, #200]
   2a658:	mov	x0, #0xffff000000000000    	// #-281474976710656
   2a65c:	ldr	x23, [sp, #184]
   2a660:	cmp	x1, #0x0
   2a664:	csel	x24, x24, x0, ge  // ge = tcont
   2a668:	mov	x22, #0x0                   	// #0
   2a66c:	mov	x1, #0x7fff000000000000    	// #9223090561878065152
   2a670:	tbz	x23, #63, 2a678 <csinhf128@@GLIBC_2.27+0x170>
   2a674:	mov	x1, #0xffff000000000000    	// #-281474976710656
   2a678:	cbz	w27, 2a680 <csinhf128@@GLIBC_2.27+0x178>
   2a67c:	eor	x24, x24, #0x8000000000000000
   2a680:	ldr	x27, [sp, #80]
   2a684:	mov	x23, x1
   2a688:	mov	x26, #0x0                   	// #0
   2a68c:	nop
   2a690:	ldr	x0, [x25, #4032]
   2a694:	ldr	x1, [sp, #216]
   2a698:	ldr	x0, [x0]
   2a69c:	eor	x0, x1, x0
   2a6a0:	cbnz	x0, 2ab78 <csinhf128@@GLIBC_2.27+0x670>
   2a6a4:	stp	x26, x24, [sp, #96]
   2a6a8:	stp	x22, x23, [sp, #112]
   2a6ac:	ldr	q0, [sp, #96]
   2a6b0:	ldp	x19, x20, [sp, #16]
   2a6b4:	ldp	x21, x22, [sp, #32]
   2a6b8:	ldp	x23, x24, [sp, #48]
   2a6bc:	ldp	x25, x26, [sp, #64]
   2a6c0:	ldr	q1, [sp, #112]
   2a6c4:	ldp	x29, x30, [sp], #224
   2a6c8:	ret
   2a6cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a6d0:	add	x0, x0, #0xeb0
   2a6d4:	stp	x19, x20, [sp, #96]
   2a6d8:	ldr	q1, [x0]
   2a6dc:	ldr	q0, [sp, #96]
   2a6e0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2a6e4:	tbz	w0, #31, 2a780 <csinhf128@@GLIBC_2.27+0x278>
   2a6e8:	movi	v1.2d, #0x0
   2a6ec:	stp	x19, x24, [sp, #96]
   2a6f0:	ldr	q0, [sp, #96]
   2a6f4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2a6f8:	cbnz	w0, 2a780 <csinhf128@@GLIBC_2.27+0x278>
   2a6fc:	stp	x22, x21, [sp, #96]
   2a700:	stp	x22, x21, [sp, #112]
   2a704:	ldr	q1, [sp, #96]
   2a708:	ldr	q0, [sp, #112]
   2a70c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2a710:	cbnz	w0, 2a750 <csinhf128@@GLIBC_2.27+0x248>
   2a714:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a718:	add	x0, x0, #0x300
   2a71c:	stp	x22, x21, [sp, #96]
   2a720:	ldr	q1, [x0]
   2a724:	ldr	q0, [sp, #96]
   2a728:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2a72c:	cbnz	w0, 2a7f4 <csinhf128@@GLIBC_2.27+0x2ec>
   2a730:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a734:	add	x0, x0, #0x300
   2a738:	stp	x22, x21, [sp, #96]
   2a73c:	ldr	q1, [x0]
   2a740:	ldr	q0, [sp, #96]
   2a744:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a748:	cmp	w0, #0x0
   2a74c:	b.le	2a7f4 <csinhf128@@GLIBC_2.27+0x2ec>
   2a750:	mov	x26, #0x0                   	// #0
   2a754:	mov	x24, #0x0                   	// #0
   2a758:	cbnz	w27, 2ab48 <csinhf128@@GLIBC_2.27+0x640>
   2a75c:	stp	x22, x23, [sp, #96]
   2a760:	stp	x22, x23, [sp, #112]
   2a764:	ldr	q1, [sp, #96]
   2a768:	ldr	q0, [sp, #112]
   2a76c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2a770:	str	q0, [sp, #96]
   2a774:	ldr	x27, [sp, #80]
   2a778:	ldp	x22, x23, [sp, #96]
   2a77c:	b	2a690 <csinhf128@@GLIBC_2.27+0x188>
   2a780:	stp	x22, x21, [sp, #96]
   2a784:	stp	x22, x21, [sp, #112]
   2a788:	ldr	q1, [sp, #96]
   2a78c:	ldr	q0, [sp, #112]
   2a790:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2a794:	cbnz	w0, 2a7d4 <csinhf128@@GLIBC_2.27+0x2cc>
   2a798:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a79c:	add	x0, x0, #0x300
   2a7a0:	stp	x22, x21, [sp, #96]
   2a7a4:	ldr	q1, [x0]
   2a7a8:	ldr	q0, [sp, #96]
   2a7ac:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2a7b0:	cbnz	w0, 2a7f4 <csinhf128@@GLIBC_2.27+0x2ec>
   2a7b4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a7b8:	add	x0, x0, #0x300
   2a7bc:	stp	x22, x21, [sp, #96]
   2a7c0:	ldr	q1, [x0]
   2a7c4:	ldr	q0, [sp, #96]
   2a7c8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a7cc:	cmp	w0, #0x0
   2a7d0:	b.le	2a7f4 <csinhf128@@GLIBC_2.27+0x2ec>
   2a7d4:	mov	w0, #0x1                   	// #1
   2a7d8:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2a7dc:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   2a7e0:	mov	x23, x24
   2a7e4:	mov	x26, #0x0                   	// #0
   2a7e8:	mov	x22, #0x0                   	// #0
   2a7ec:	ldr	x27, [sp, #80]
   2a7f0:	b	2a690 <csinhf128@@GLIBC_2.27+0x188>
   2a7f4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2a7f8:	add	x0, x0, #0x120
   2a7fc:	ldr	q1, [x0]
   2a800:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a804:	add	x0, x0, #0xea0
   2a808:	ldr	q0, [x0]
   2a80c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a810:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   2a814:	mov	w24, w0
   2a818:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a81c:	add	x0, x0, #0xeb0
   2a820:	stp	x22, x21, [sp, #96]
   2a824:	ldr	q1, [x0]
   2a828:	ldr	q0, [sp, #96]
   2a82c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2a830:	cmp	w0, #0x0
   2a834:	b.le	2ab14 <csinhf128@@GLIBC_2.27+0x60c>
   2a838:	stp	x22, x23, [sp, #96]
   2a83c:	add	x1, sp, #0xc0
   2a840:	add	x0, sp, #0xb0
   2a844:	ldr	q0, [sp, #96]
   2a848:	bl	24048 <sincosf128@@GLIBC_2.27>
   2a84c:	cbz	w27, 2a85c <csinhf128@@GLIBC_2.27+0x354>
   2a850:	ldr	x0, [sp, #200]
   2a854:	eor	x0, x0, #0x8000000000000000
   2a858:	str	x0, [sp, #200]
   2a85c:	mov	w0, w24
   2a860:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2a864:	stp	x19, x20, [sp, #96]
   2a868:	ldr	q1, [sp, #96]
   2a86c:	str	q0, [sp, #112]
   2a870:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a874:	tbz	w0, #31, 2a9f4 <csinhf128@@GLIBC_2.27+0x4ec>
   2a878:	ldr	q0, [sp, #112]
   2a87c:	bl	141f0 <__expl_finite@GLIBC_2.17>
   2a880:	stp	x19, x20, [sp, #96]
   2a884:	ldr	q1, [sp, #112]
   2a888:	str	q0, [sp, #128]
   2a88c:	ldr	q0, [sp, #96]
   2a890:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2a894:	str	q0, [sp, #96]
   2a898:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a89c:	add	x0, x0, #0x330
   2a8a0:	ldr	q0, [sp, #128]
   2a8a4:	ldr	q1, [x0]
   2a8a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a8ac:	str	q0, [sp, #144]
   2a8b0:	ldr	q1, [sp, #176]
   2a8b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a8b8:	mov	v3.16b, v0.16b
   2a8bc:	ldr	q2, [sp, #144]
   2a8c0:	ldr	q1, [sp, #192]
   2a8c4:	str	q3, [sp, #144]
   2a8c8:	mov	v0.16b, v2.16b
   2a8cc:	str	q3, [sp, #176]
   2a8d0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a8d4:	mov	v2.16b, v0.16b
   2a8d8:	ldr	q1, [sp, #96]
   2a8dc:	ldr	q0, [sp, #112]
   2a8e0:	str	q2, [sp, #160]
   2a8e4:	str	q2, [sp, #192]
   2a8e8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a8ec:	tbz	w0, #31, 2a924 <csinhf128@@GLIBC_2.27+0x41c>
   2a8f0:	ldr	q0, [sp, #96]
   2a8f4:	ldr	q1, [sp, #112]
   2a8f8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2a8fc:	str	q0, [sp, #96]
   2a900:	ldr	q1, [sp, #128]
   2a904:	ldr	q0, [sp, #144]
   2a908:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a90c:	mov	v2.16b, v0.16b
   2a910:	ldr	q1, [sp, #128]
   2a914:	ldr	q0, [sp, #160]
   2a918:	str	q2, [sp, #176]
   2a91c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a920:	str	q0, [sp, #192]
   2a924:	ldr	q1, [sp, #96]
   2a928:	ldr	q0, [sp, #112]
   2a92c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a930:	tbz	w0, #31, 2aa70 <csinhf128@@GLIBC_2.27+0x568>
   2a934:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a938:	add	x0, x0, #0x300
   2a93c:	ldr	q0, [sp, #192]
   2a940:	ldr	q1, [x0]
   2a944:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a948:	str	q0, [sp, #96]
   2a94c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a950:	add	x0, x0, #0x300
   2a954:	ldp	x27, x21, [sp, #96]
   2a958:	ldr	q1, [x0]
   2a95c:	ldr	q0, [sp, #176]
   2a960:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a964:	str	q0, [sp, #96]
   2a968:	ldp	x20, x19, [sp, #96]
   2a96c:	mov	x26, x27
   2a970:	mov	x24, x21
   2a974:	mov	x22, x20
   2a978:	mov	x23, x19
   2a97c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a980:	add	x0, x0, #0xeb0
   2a984:	ldr	q1, [x0]
   2a988:	and	x0, x21, #0x7fffffffffffffff
   2a98c:	stp	x27, x0, [sp, #96]
   2a990:	ldr	q0, [sp, #96]
   2a994:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a998:	tbz	w0, #31, 2a9b0 <csinhf128@@GLIBC_2.27+0x4a8>
   2a99c:	stp	x27, x21, [sp, #96]
   2a9a0:	stp	x27, x21, [sp, #112]
   2a9a4:	ldr	q1, [sp, #96]
   2a9a8:	ldr	q0, [sp, #112]
   2a9ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a9b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2a9b4:	add	x0, x0, #0xeb0
   2a9b8:	ldr	q1, [x0]
   2a9bc:	and	x0, x19, #0x7fffffffffffffff
   2a9c0:	stp	x20, x0, [sp, #96]
   2a9c4:	ldr	q0, [sp, #96]
   2a9c8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2a9cc:	tbz	w0, #31, 2a9ec <csinhf128@@GLIBC_2.27+0x4e4>
   2a9d0:	stp	x20, x19, [sp, #96]
   2a9d4:	stp	x20, x19, [sp, #112]
   2a9d8:	ldr	q1, [sp, #96]
   2a9dc:	ldr	q0, [sp, #112]
   2a9e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2a9e4:	ldr	x27, [sp, #80]
   2a9e8:	b	2a690 <csinhf128@@GLIBC_2.27+0x188>
   2a9ec:	ldr	x27, [sp, #80]
   2a9f0:	b	2a690 <csinhf128@@GLIBC_2.27+0x188>
   2a9f4:	stp	x19, x20, [sp, #96]
   2a9f8:	ldr	q0, [sp, #96]
   2a9fc:	bl	1e700 <__sinhl_finite@GLIBC_2.17>
   2aa00:	ldr	q1, [sp, #192]
   2aa04:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2aa08:	stp	x19, x20, [sp, #96]
   2aa0c:	str	q0, [sp, #112]
   2aa10:	ldr	q0, [sp, #96]
   2aa14:	ldp	x27, x21, [sp, #112]
   2aa18:	bl	14000 <__coshl_finite@GLIBC_2.17>
   2aa1c:	ldr	q1, [sp, #176]
   2aa20:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2aa24:	str	q0, [sp, #96]
   2aa28:	ldp	x20, x19, [sp, #96]
   2aa2c:	mov	x26, x27
   2aa30:	mov	x24, x21
   2aa34:	mov	x22, x20
   2aa38:	mov	x23, x19
   2aa3c:	b	2a97c <csinhf128@@GLIBC_2.27+0x474>
   2aa40:	movi	v1.2d, #0x0
   2aa44:	stp	x22, x23, [sp, #96]
   2aa48:	ldr	q0, [sp, #96]
   2aa4c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2aa50:	cbnz	w0, 2a61c <csinhf128@@GLIBC_2.27+0x114>
   2aa54:	mov	x26, #0x0                   	// #0
   2aa58:	mov	x24, #0xffff000000000000    	// #-281474976710656
   2aa5c:	cbnz	w27, 2a9ec <csinhf128@@GLIBC_2.27+0x4e4>
   2aa60:	mov	x26, #0x0                   	// #0
   2aa64:	mov	x24, #0x7fff000000000000    	// #9223090561878065152
   2aa68:	ldr	x27, [sp, #80]
   2aa6c:	b	2a690 <csinhf128@@GLIBC_2.27+0x188>
   2aa70:	ldr	q0, [sp, #96]
   2aa74:	bl	141f0 <__expl_finite@GLIBC_2.17>
   2aa78:	str	q0, [sp, #112]
   2aa7c:	ldr	q1, [sp, #192]
   2aa80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2aa84:	str	q0, [sp, #96]
   2aa88:	ldr	q2, [sp, #112]
   2aa8c:	ldp	x27, x21, [sp, #96]
   2aa90:	mov	v0.16b, v2.16b
   2aa94:	ldr	q1, [sp, #176]
   2aa98:	b	2a960 <csinhf128@@GLIBC_2.27+0x458>
   2aa9c:	stp	x22, x21, [sp, #96]
   2aaa0:	stp	x22, x21, [sp, #112]
   2aaa4:	ldr	q1, [sp, #96]
   2aaa8:	ldr	q0, [sp, #112]
   2aaac:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2aab0:	cbnz	w0, 2aaf4 <csinhf128@@GLIBC_2.27+0x5ec>
   2aab4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2aab8:	add	x0, x0, #0x300
   2aabc:	stp	x22, x21, [sp, #96]
   2aac0:	ldr	q1, [x0]
   2aac4:	ldr	q0, [sp, #96]
   2aac8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2aacc:	cbnz	w0, 2aaf0 <csinhf128@@GLIBC_2.27+0x5e8>
   2aad0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2aad4:	add	x0, x0, #0x300
   2aad8:	stp	x22, x21, [sp, #96]
   2aadc:	ldr	q1, [x0]
   2aae0:	ldr	q0, [sp, #96]
   2aae4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2aae8:	cmp	w0, #0x0
   2aaec:	b.gt	2aaf4 <csinhf128@@GLIBC_2.27+0x5ec>
   2aaf0:	stp	x22, x21, [sp, #96]
   2aaf4:	movi	v1.2d, #0x0
   2aaf8:	stp	x22, x23, [sp, #96]
   2aafc:	ldr	q0, [sp, #96]
   2ab00:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2ab04:	cbnz	w0, 2ab34 <csinhf128@@GLIBC_2.27+0x62c>
   2ab08:	mov	x26, #0x0                   	// #0
   2ab0c:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2ab10:	b	2a690 <csinhf128@@GLIBC_2.27+0x188>
   2ab14:	adrp	x2, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ab18:	add	x2, x2, #0x2f0
   2ab1c:	fmov	d0, x22
   2ab20:	ldr	q2, [x2]
   2ab24:	fmov	v0.d[1], x23
   2ab28:	str	q0, [sp, #176]
   2ab2c:	str	q2, [sp, #192]
   2ab30:	b	2a84c <csinhf128@@GLIBC_2.27+0x344>
   2ab34:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2ab38:	mov	x26, #0x0                   	// #0
   2ab3c:	mov	x23, x24
   2ab40:	mov	x22, #0x0                   	// #0
   2ab44:	b	2a690 <csinhf128@@GLIBC_2.27+0x188>
   2ab48:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   2ab4c:	b	2a75c <csinhf128@@GLIBC_2.27+0x254>
   2ab50:	mov	x24, #0x7fff000000000000    	// #9223090561878065152
   2ab54:	b	2a668 <csinhf128@@GLIBC_2.27+0x160>
   2ab58:	stp	x22, x23, [sp, #96]
   2ab5c:	stp	x22, x23, [sp, #112]
   2ab60:	ldr	q1, [sp, #96]
   2ab64:	ldr	q0, [sp, #112]
   2ab68:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2ab6c:	str	q0, [sp, #96]
   2ab70:	ldp	x22, x23, [sp, #96]
   2ab74:	b	2aa60 <csinhf128@@GLIBC_2.27+0x558>
   2ab78:	str	x27, [sp, #80]
   2ab7c:	bl	ba70 <__stack_chk_fail@plt>

000000000002ab80 <catanhf128@@GLIBC_2.27>:
   2ab80:	stp	x29, x30, [sp, #-160]!
   2ab84:	mov	x29, sp
   2ab88:	stp	x21, x22, [sp, #32]
   2ab8c:	stp	x23, x24, [sp, #48]
   2ab90:	str	q0, [sp, #96]
   2ab94:	ldp	x21, x24, [sp, #96]
   2ab98:	stp	x25, x26, [sp, #64]
   2ab9c:	str	q1, [sp, #128]
   2aba0:	ldp	x26, x25, [sp, #128]
   2aba4:	stp	x19, x20, [sp, #16]
   2aba8:	and	x22, x24, #0x7fffffffffffffff
   2abac:	stp	x22, x21, [sp, #104]
   2abb0:	mov	x19, x21
   2abb4:	str	x22, [sp, #120]
   2abb8:	ldr	q1, [sp, #96]
   2abbc:	mov	x20, x26
   2abc0:	ldr	q0, [sp, #112]
   2abc4:	stp	x27, x28, [sp, #80]
   2abc8:	mov	x28, x24
   2abcc:	mov	x27, x25
   2abd0:	str	x21, [sp, #144]
   2abd4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2abd8:	cbnz	w0, 2b2dc <catanhf128@@GLIBC_2.27+0x75c>
   2abdc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2abe0:	add	x0, x0, #0x300
   2abe4:	stp	x21, x22, [sp, #96]
   2abe8:	ldr	q1, [x0]
   2abec:	ldr	q0, [sp, #96]
   2abf0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2abf4:	cbnz	w0, 2aedc <catanhf128@@GLIBC_2.27+0x35c>
   2abf8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2abfc:	add	x0, x0, #0x300
   2ac00:	stp	x21, x22, [sp, #96]
   2ac04:	ldr	q1, [x0]
   2ac08:	ldr	q0, [sp, #96]
   2ac0c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ac10:	cmp	w0, #0x0
   2ac14:	b.le	2aedc <catanhf128@@GLIBC_2.27+0x35c>
   2ac18:	and	x23, x27, #0x7fffffffffffffff
   2ac1c:	stp	x20, x23, [sp, #96]
   2ac20:	mov	w0, #0x1                   	// #1
   2ac24:	stp	x20, x23, [sp, #112]
   2ac28:	ldr	q1, [sp, #96]
   2ac2c:	ldr	q0, [sp, #112]
   2ac30:	str	w0, [sp, #128]
   2ac34:	str	x20, [sp, #152]
   2ac38:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ac3c:	cbnz	w0, 2af34 <catanhf128@@GLIBC_2.27+0x3b4>
   2ac40:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ac44:	add	x0, x0, #0x300
   2ac48:	stp	x20, x23, [sp, #96]
   2ac4c:	ldr	q1, [x0]
   2ac50:	ldr	q0, [sp, #96]
   2ac54:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ac58:	cbnz	w0, 2ac7c <catanhf128@@GLIBC_2.27+0xfc>
   2ac5c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ac60:	add	x0, x0, #0x300
   2ac64:	stp	x20, x23, [sp, #96]
   2ac68:	ldr	q1, [x0]
   2ac6c:	ldr	q0, [sp, #96]
   2ac70:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ac74:	cmp	w0, #0x0
   2ac78:	b.gt	2b098 <catanhf128@@GLIBC_2.27+0x518>
   2ac7c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ac80:	add	x0, x0, #0xeb0
   2ac84:	stp	x20, x23, [sp, #96]
   2ac88:	ldr	q1, [x0]
   2ac8c:	ldr	q0, [sp, #96]
   2ac90:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2ac94:	tbz	w0, #31, 2acac <catanhf128@@GLIBC_2.27+0x12c>
   2ac98:	movi	v1.2d, #0x0
   2ac9c:	stp	x20, x27, [sp, #96]
   2aca0:	ldr	q0, [sp, #96]
   2aca4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2aca8:	cbz	w0, 2b12c <catanhf128@@GLIBC_2.27+0x5ac>
   2acac:	ldr	w0, [sp, #128]
   2acb0:	cmp	w0, #0x1
   2acb4:	b.le	2b3a4 <catanhf128@@GLIBC_2.27+0x824>
   2acb8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2acbc:	add	x0, x0, #0x190
   2acc0:	stp	x19, x22, [sp, #96]
   2acc4:	ldr	q1, [x0]
   2acc8:	ldr	q0, [sp, #96]
   2accc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2acd0:	tbz	w0, #31, 2af50 <catanhf128@@GLIBC_2.27+0x3d0>
   2acd4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2acd8:	add	x0, x0, #0x190
   2acdc:	stp	x20, x23, [sp, #96]
   2ace0:	ldr	q1, [x0]
   2ace4:	ldr	q0, [sp, #96]
   2ace8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2acec:	tbz	w0, #31, 2af50 <catanhf128@@GLIBC_2.27+0x3d0>
   2acf0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2acf4:	add	x0, x0, #0x2f0
   2acf8:	stp	x19, x22, [sp, #96]
   2acfc:	ldr	q1, [x0]
   2ad00:	ldr	q0, [sp, #96]
   2ad04:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2ad08:	cbz	w0, 2b148 <catanhf128@@GLIBC_2.27+0x5c8>
   2ad0c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ad10:	add	x0, x0, #0x170
   2ad14:	stp	x20, x23, [sp, #96]
   2ad18:	ldr	q1, [x0]
   2ad1c:	ldr	q0, [sp, #96]
   2ad20:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2ad24:	tbnz	w0, #31, 2b30c <catanhf128@@GLIBC_2.27+0x78c>
   2ad28:	stp	x20, x27, [sp, #96]
   2ad2c:	stp	x20, x27, [sp, #112]
   2ad30:	ldr	q1, [sp, #96]
   2ad34:	ldr	q0, [sp, #112]
   2ad38:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2ad3c:	str	q0, [sp, #112]
   2ad40:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ad44:	add	x0, x0, #0x2f0
   2ad48:	stp	x19, x28, [sp, #96]
   2ad4c:	ldr	q1, [x0]
   2ad50:	ldr	q0, [sp, #96]
   2ad54:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2ad58:	mov	v1.16b, v0.16b
   2ad5c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2ad60:	stp	x19, x28, [sp, #96]
   2ad64:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ad68:	add	x0, x0, #0x2f0
   2ad6c:	str	q0, [sp, #128]
   2ad70:	ldr	q1, [sp, #96]
   2ad74:	ldr	q0, [x0]
   2ad78:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2ad7c:	mov	v1.16b, v0.16b
   2ad80:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2ad84:	ldr	q1, [sp, #112]
   2ad88:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2ad8c:	mov	v4.16b, v0.16b
   2ad90:	ldr	q1, [sp, #112]
   2ad94:	ldr	q2, [sp, #128]
   2ad98:	str	q4, [sp, #96]
   2ad9c:	mov	v0.16b, v2.16b
   2ada0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2ada4:	ldr	q1, [sp, #96]
   2ada8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2adac:	str	q0, [sp, #112]
   2adb0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2adb4:	add	x0, x0, #0x330
   2adb8:	ldr	q1, [x0]
   2adbc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2adc0:	tbz	w0, #31, 2b2e4 <catanhf128@@GLIBC_2.27+0x764>
   2adc4:	ldr	q0, [sp, #112]
   2adc8:	bl	1c928 <__logl_finite@GLIBC_2.17>
   2adcc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2add0:	add	x0, x0, #0xb40
   2add4:	ldr	q1, [x0]
   2add8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2addc:	str	q0, [sp, #96]
   2ade0:	stp	x19, x22, [sp, #112]
   2ade4:	ldp	x28, x25, [sp, #96]
   2ade8:	stp	x20, x23, [sp, #96]
   2adec:	ldr	q0, [sp, #112]
   2adf0:	ldr	q1, [sp, #96]
   2adf4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2adf8:	tbz	w0, #31, 2ae0c <catanhf128@@GLIBC_2.27+0x28c>
   2adfc:	mov	x0, x22
   2ae00:	mov	x22, x23
   2ae04:	mov	x23, x0
   2ae08:	stp	x20, x19, [sp, #144]
   2ae0c:	ldr	x0, [sp, #152]
   2ae10:	stp	x0, x23, [sp, #96]
   2ae14:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   2ae18:	add	x0, x0, #0xec0
   2ae1c:	ldr	q0, [sp, #96]
   2ae20:	ldr	q1, [x0]
   2ae24:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ae28:	tbz	w0, #31, 2b314 <catanhf128@@GLIBC_2.27+0x794>
   2ae2c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ae30:	add	x0, x0, #0x2f0
   2ae34:	ldr	x19, [sp, #144]
   2ae38:	stp	x19, x22, [sp, #96]
   2ae3c:	ldr	q0, [x0]
   2ae40:	ldr	q1, [sp, #96]
   2ae44:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2ae48:	stp	x19, x22, [sp, #96]
   2ae4c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ae50:	add	x0, x0, #0x2f0
   2ae54:	str	q0, [sp, #112]
   2ae58:	ldr	q0, [sp, #96]
   2ae5c:	ldr	q1, [x0]
   2ae60:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2ae64:	mov	v1.16b, v0.16b
   2ae68:	ldr	q2, [sp, #112]
   2ae6c:	mov	v0.16b, v2.16b
   2ae70:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2ae74:	movi	v1.2d, #0x0
   2ae78:	str	q0, [sp, #96]
   2ae7c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2ae80:	cmp	w0, #0x0
   2ae84:	ldp	x21, x19, [sp, #96]
   2ae88:	csel	x21, x21, xzr, ne  // ne = any
   2ae8c:	csel	x19, x19, xzr, ne  // ne = any
   2ae90:	stp	x20, x27, [sp, #96]
   2ae94:	mov	x24, x25
   2ae98:	stp	x20, x27, [sp, #112]
   2ae9c:	ldr	q1, [sp, #96]
   2aea0:	ldr	q0, [sp, #112]
   2aea4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2aea8:	stp	x21, x19, [sp, #96]
   2aeac:	mov	x21, x28
   2aeb0:	ldr	q1, [sp, #96]
   2aeb4:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   2aeb8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2aebc:	add	x0, x0, #0x330
   2aec0:	ldr	q1, [x0]
   2aec4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2aec8:	str	q0, [sp, #96]
   2aecc:	ldp	x26, x23, [sp, #96]
   2aed0:	mov	x20, x26
   2aed4:	mov	x19, x23
   2aed8:	b	2b004 <catanhf128@@GLIBC_2.27+0x484>
   2aedc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2aee0:	add	x0, x0, #0xeb0
   2aee4:	stp	x19, x22, [sp, #96]
   2aee8:	ldr	q1, [x0]
   2aeec:	ldr	q0, [sp, #96]
   2aef0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2aef4:	tbz	w0, #31, 2b0f4 <catanhf128@@GLIBC_2.27+0x574>
   2aef8:	movi	v1.2d, #0x0
   2aefc:	stp	x19, x28, [sp, #96]
   2af00:	ldr	q0, [sp, #96]
   2af04:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2af08:	cbnz	w0, 2b120 <catanhf128@@GLIBC_2.27+0x5a0>
   2af0c:	and	x23, x27, #0x7fffffffffffffff
   2af10:	stp	x20, x23, [sp, #96]
   2af14:	mov	w0, #0x2                   	// #2
   2af18:	stp	x20, x23, [sp, #112]
   2af1c:	ldr	q1, [sp, #96]
   2af20:	ldr	q0, [sp, #112]
   2af24:	str	w0, [sp, #128]
   2af28:	str	x20, [sp, #152]
   2af2c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2af30:	cbz	w0, 2ac40 <catanhf128@@GLIBC_2.27+0xc0>
   2af34:	mov	x21, #0x0                   	// #0
   2af38:	mov	x24, #0x0                   	// #0
   2af3c:	tbz	x28, #63, 2af44 <catanhf128@@GLIBC_2.27+0x3c4>
   2af40:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   2af44:	mov	x20, #0x0                   	// #0
   2af48:	mov	x19, #0x7fff800000000000    	// #9223231299366420480
   2af4c:	b	2b06c <catanhf128@@GLIBC_2.27+0x4ec>
   2af50:	mov	x0, #0x42d1                	// #17105
   2af54:	stp	x20, x23, [sp, #96]
   2af58:	movk	x0, #0xb544, lsl #16
   2af5c:	mov	x23, #0x42d1                	// #17105
   2af60:	movk	x0, #0x921f, lsl #32
   2af64:	movk	x23, #0xb544, lsl #16
   2af68:	cmp	x27, #0x0
   2af6c:	movk	x0, #0xbfff, lsl #48
   2af70:	movk	x23, #0x921f, lsl #32
   2af74:	movk	x23, #0x3fff, lsl #48
   2af78:	csel	x23, x23, x0, ge  // ge = tcont
   2af7c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2af80:	add	x0, x0, #0x2f0
   2af84:	ldr	q0, [sp, #96]
   2af88:	mov	x26, #0x1b8                 	// #440
   2af8c:	movk	x26, #0xc517, lsl #16
   2af90:	ldr	q1, [x0]
   2af94:	movk	x26, #0x898c, lsl #32
   2af98:	movk	x26, #0x8469, lsl #48
   2af9c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2afa0:	str	x19, [sp, #96]
   2afa4:	cmp	w0, #0x0
   2afa8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2afac:	add	x0, x0, #0x2f0
   2afb0:	b.le	2b0e8 <catanhf128@@GLIBC_2.27+0x568>
   2afb4:	str	x22, [sp, #104]
   2afb8:	ldr	q1, [x0]
   2afbc:	ldr	q0, [sp, #96]
   2afc0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2afc4:	cmp	w0, #0x0
   2afc8:	b.gt	2b268 <catanhf128@@GLIBC_2.27+0x6e8>
   2afcc:	stp	x20, x27, [sp, #96]
   2afd0:	stp	x19, x28, [sp, #112]
   2afd4:	ldr	q1, [sp, #96]
   2afd8:	ldr	q0, [sp, #112]
   2afdc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2afe0:	stp	x20, x27, [sp, #96]
   2afe4:	ldr	q1, [sp, #96]
   2afe8:	mov	x20, x26
   2afec:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2aff0:	str	q0, [sp, #96]
   2aff4:	mov	x19, x23
   2aff8:	ldp	x28, x25, [sp, #96]
   2affc:	mov	x21, x28
   2b000:	mov	x24, x25
   2b004:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b008:	add	x0, x0, #0xeb0
   2b00c:	ldr	q1, [x0]
   2b010:	and	x0, x25, #0x7fffffffffffffff
   2b014:	stp	x28, x0, [sp, #96]
   2b018:	ldr	q0, [sp, #96]
   2b01c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b020:	tbz	w0, #31, 2b038 <catanhf128@@GLIBC_2.27+0x4b8>
   2b024:	stp	x28, x25, [sp, #96]
   2b028:	stp	x28, x25, [sp, #112]
   2b02c:	ldr	q1, [sp, #96]
   2b030:	ldr	q0, [sp, #112]
   2b034:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b038:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b03c:	add	x0, x0, #0xeb0
   2b040:	ldr	q1, [x0]
   2b044:	and	x0, x23, #0x7fffffffffffffff
   2b048:	stp	x26, x0, [sp, #96]
   2b04c:	ldr	q0, [sp, #96]
   2b050:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b054:	tbz	w0, #31, 2b06c <catanhf128@@GLIBC_2.27+0x4ec>
   2b058:	stp	x26, x23, [sp, #96]
   2b05c:	stp	x26, x23, [sp, #112]
   2b060:	ldr	q1, [sp, #96]
   2b064:	ldr	q0, [sp, #112]
   2b068:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b06c:	stp	x21, x24, [sp, #96]
   2b070:	stp	x20, x19, [sp, #112]
   2b074:	ldr	q0, [sp, #96]
   2b078:	ldp	x19, x20, [sp, #16]
   2b07c:	ldp	x21, x22, [sp, #32]
   2b080:	ldp	x23, x24, [sp, #48]
   2b084:	ldp	x25, x26, [sp, #64]
   2b088:	ldp	x27, x28, [sp, #80]
   2b08c:	ldr	q1, [sp, #112]
   2b090:	ldp	x29, x30, [sp], #160
   2b094:	ret
   2b098:	mov	x21, #0x0                   	// #0
   2b09c:	mov	x24, #0x0                   	// #0
   2b0a0:	tbz	x28, #63, 2b0a8 <catanhf128@@GLIBC_2.27+0x528>
   2b0a4:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   2b0a8:	mov	x26, #0x1b8                 	// #440
   2b0ac:	mov	x25, #0x42d1                	// #17105
   2b0b0:	movk	x26, #0xc517, lsl #16
   2b0b4:	movk	x25, #0xb544, lsl #16
   2b0b8:	movk	x26, #0x898c, lsl #32
   2b0bc:	movk	x25, #0x921f, lsl #32
   2b0c0:	movk	x26, #0x8469, lsl #48
   2b0c4:	movk	x25, #0x3fff, lsl #48
   2b0c8:	tbz	x27, #63, 2b0dc <catanhf128@@GLIBC_2.27+0x55c>
   2b0cc:	mov	x25, #0x42d1                	// #17105
   2b0d0:	movk	x25, #0xb544, lsl #16
   2b0d4:	movk	x25, #0x921f, lsl #32
   2b0d8:	movk	x25, #0xbfff, lsl #48
   2b0dc:	mov	x20, x26
   2b0e0:	mov	x19, x25
   2b0e4:	b	2b06c <catanhf128@@GLIBC_2.27+0x4ec>
   2b0e8:	str	x28, [sp, #104]
   2b0ec:	ldr	q0, [x0]
   2b0f0:	b	2afe4 <catanhf128@@GLIBC_2.27+0x464>
   2b0f4:	mov	w0, #0x4                   	// #4
   2b0f8:	str	w0, [sp, #128]
   2b0fc:	and	x23, x27, #0x7fffffffffffffff
   2b100:	stp	x20, x23, [sp, #96]
   2b104:	stp	x20, x23, [sp, #112]
   2b108:	ldr	q1, [sp, #96]
   2b10c:	ldr	q0, [sp, #112]
   2b110:	str	x20, [sp, #152]
   2b114:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b118:	cbz	w0, 2ac40 <catanhf128@@GLIBC_2.27+0xc0>
   2b11c:	b	2b3ac <catanhf128@@GLIBC_2.27+0x82c>
   2b120:	mov	w0, #0x3                   	// #3
   2b124:	str	w0, [sp, #128]
   2b128:	b	2b0fc <catanhf128@@GLIBC_2.27+0x57c>
   2b12c:	ldr	w0, [sp, #128]
   2b130:	cmp	w0, #0x1
   2b134:	b.le	2b3a4 <catanhf128@@GLIBC_2.27+0x824>
   2b138:	ldr	w0, [sp, #128]
   2b13c:	cmp	w0, #0x2
   2b140:	b.eq	2b0dc <catanhf128@@GLIBC_2.27+0x55c>  // b.none
   2b144:	b	2acb8 <catanhf128@@GLIBC_2.27+0x138>
   2b148:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2b14c:	add	x0, x0, #0x170
   2b150:	stp	x20, x23, [sp, #96]
   2b154:	ldr	q1, [x0]
   2b158:	ldr	q0, [sp, #96]
   2b15c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b160:	tbz	w0, #31, 2ad0c <catanhf128@@GLIBC_2.27+0x18c>
   2b164:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b168:	add	x0, x0, #0x330
   2b16c:	ldr	q2, [x0]
   2b170:	tbz	x28, #63, 2b180 <catanhf128@@GLIBC_2.27+0x600>
   2b174:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   2b178:	add	x0, x0, #0xef0
   2b17c:	ldr	q2, [x0]
   2b180:	stp	x20, x23, [sp, #96]
   2b184:	ldr	q0, [sp, #96]
   2b188:	str	q2, [sp, #112]
   2b18c:	bl	1c928 <__logl_finite@GLIBC_2.17>
   2b190:	mov	v1.16b, v0.16b
   2b194:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b198:	add	x0, x0, #0xea0
   2b19c:	ldr	q0, [x0]
   2b1a0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2b1a4:	ldr	q2, [sp, #112]
   2b1a8:	mov	v1.16b, v2.16b
   2b1ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b1b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b1b4:	add	x0, x0, #0x2f0
   2b1b8:	stp	x20, x23, [sp, #96]
   2b1bc:	str	q0, [sp, #112]
   2b1c0:	ldr	q1, [x0]
   2b1c4:	ldr	q0, [sp, #96]
   2b1c8:	ldp	x28, x25, [sp, #112]
   2b1cc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b1d0:	cmp	w0, #0x0
   2b1d4:	b.le	2b3c0 <catanhf128@@GLIBC_2.27+0x840>
   2b1d8:	mov	x0, x23
   2b1dc:	mov	x23, x22
   2b1e0:	mov	x22, x0
   2b1e4:	stp	x20, x19, [sp, #144]
   2b1e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b1ec:	add	x0, x0, #0x2f0
   2b1f0:	ldr	x19, [sp, #144]
   2b1f4:	stp	x19, x22, [sp, #96]
   2b1f8:	ldr	q0, [x0]
   2b1fc:	ldr	q1, [sp, #96]
   2b200:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2b204:	stp	x19, x22, [sp, #96]
   2b208:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b20c:	add	x0, x0, #0x2f0
   2b210:	str	q0, [sp, #112]
   2b214:	ldr	q0, [sp, #96]
   2b218:	ldr	q1, [x0]
   2b21c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2b220:	mov	v1.16b, v0.16b
   2b224:	ldr	q2, [sp, #112]
   2b228:	mov	v0.16b, v2.16b
   2b22c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b230:	ldr	x0, [sp, #152]
   2b234:	stp	x0, x23, [sp, #96]
   2b238:	stp	x0, x23, [sp, #112]
   2b23c:	ldr	q1, [sp, #96]
   2b240:	str	q0, [sp, #96]
   2b244:	ldr	q0, [sp, #112]
   2b248:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b24c:	mov	v1.16b, v0.16b
   2b250:	ldr	q2, [sp, #96]
   2b254:	mov	v0.16b, v2.16b
   2b258:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2b25c:	str	q0, [sp, #96]
   2b260:	ldp	x21, x19, [sp, #96]
   2b264:	b	2ae90 <catanhf128@@GLIBC_2.27+0x310>
   2b268:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b26c:	add	x0, x0, #0x330
   2b270:	stp	x20, x27, [sp, #96]
   2b274:	mov	x20, x26
   2b278:	ldr	q1, [x0]
   2b27c:	ldr	q0, [sp, #96]
   2b280:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b284:	stp	x19, x28, [sp, #96]
   2b288:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b28c:	add	x0, x0, #0x330
   2b290:	str	q0, [sp, #112]
   2b294:	ldr	q0, [sp, #96]
   2b298:	ldr	q1, [x0]
   2b29c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b2a0:	ldr	q2, [sp, #112]
   2b2a4:	mov	v1.16b, v2.16b
   2b2a8:	bl	14a50 <__hypotl_finite@GLIBC_2.17>
   2b2ac:	stp	x19, x28, [sp, #96]
   2b2b0:	mov	v1.16b, v0.16b
   2b2b4:	str	q0, [sp, #112]
   2b2b8:	ldr	q0, [sp, #96]
   2b2bc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2b2c0:	ldr	q1, [sp, #112]
   2b2c4:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2b2c8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2b2cc:	add	x0, x0, #0xb40
   2b2d0:	ldr	q1, [x0]
   2b2d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b2d8:	b	2aff0 <catanhf128@@GLIBC_2.27+0x470>
   2b2dc:	str	wzr, [sp, #128]
   2b2e0:	b	2b0fc <catanhf128@@GLIBC_2.27+0x57c>
   2b2e4:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   2b2e8:	add	x0, x0, #0x5a0
   2b2ec:	stp	x19, x28, [sp, #112]
   2b2f0:	ldr	q1, [x0]
   2b2f4:	ldr	q0, [sp, #112]
   2b2f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b2fc:	ldr	q1, [sp, #96]
   2b300:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2b304:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2b308:	b	2adcc <catanhf128@@GLIBC_2.27+0x24c>
   2b30c:	stp	xzr, xzr, [sp, #112]
   2b310:	b	2ad40 <catanhf128@@GLIBC_2.27+0x1c0>
   2b314:	ldr	x0, [sp, #144]
   2b318:	stp	x0, x22, [sp, #96]
   2b31c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b320:	add	x0, x0, #0x2f0
   2b324:	ldr	q0, [sp, #96]
   2b328:	ldr	q1, [x0]
   2b32c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b330:	tbz	w0, #31, 2b1e8 <catanhf128@@GLIBC_2.27+0x668>
   2b334:	ldr	x0, [sp, #144]
   2b338:	stp	x0, x22, [sp, #96]
   2b33c:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   2b340:	add	x0, x0, #0x360
   2b344:	ldr	q0, [sp, #96]
   2b348:	ldr	q1, [x0]
   2b34c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b350:	tbz	w0, #31, 2b374 <catanhf128@@GLIBC_2.27+0x7f4>
   2b354:	ldr	x0, [sp, #152]
   2b358:	stp	x0, x23, [sp, #96]
   2b35c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b360:	add	x0, x0, #0x330
   2b364:	ldr	q0, [sp, #96]
   2b368:	ldr	q1, [x0]
   2b36c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b370:	tbnz	w0, #31, 2b1e8 <catanhf128@@GLIBC_2.27+0x668>
   2b374:	ldr	x0, [sp, #152]
   2b378:	stp	x0, x23, [sp, #96]
   2b37c:	ldr	x0, [sp, #144]
   2b380:	str	x0, [sp, #112]
   2b384:	str	x22, [sp, #120]
   2b388:	ldr	q1, [sp, #96]
   2b38c:	ldr	q0, [sp, #112]
   2b390:	bl	25b98 <ldexpf128@@GLIBC_2.27+0x1b8>
   2b394:	str	q0, [sp, #96]
   2b398:	ldp	x21, x19, [sp, #96]
   2b39c:	eor	x19, x19, #0x8000000000000000
   2b3a0:	b	2ae90 <catanhf128@@GLIBC_2.27+0x310>
   2b3a4:	ldr	w0, [sp, #128]
   2b3a8:	cbnz	w0, 2b098 <catanhf128@@GLIBC_2.27+0x518>
   2b3ac:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2b3b0:	mov	x21, #0x0                   	// #0
   2b3b4:	mov	x19, x24
   2b3b8:	mov	x20, #0x0                   	// #0
   2b3bc:	b	2b06c <catanhf128@@GLIBC_2.27+0x4ec>
   2b3c0:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   2b3c4:	add	x0, x0, #0xec0
   2b3c8:	stp	x20, x23, [sp, #96]
   2b3cc:	mov	x21, #0x0                   	// #0
   2b3d0:	mov	x19, #0x0                   	// #0
   2b3d4:	ldr	q1, [x0]
   2b3d8:	ldr	q0, [sp, #96]
   2b3dc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b3e0:	tbnz	w0, #31, 2ae90 <catanhf128@@GLIBC_2.27+0x310>
   2b3e4:	b	2b1e8 <catanhf128@@GLIBC_2.27+0x668>

000000000002b3e8 <catanf128@@GLIBC_2.27>:
   2b3e8:	stp	x29, x30, [sp, #-144]!
   2b3ec:	mov	x29, sp
   2b3f0:	stp	x23, x24, [sp, #48]
   2b3f4:	stp	x25, x26, [sp, #64]
   2b3f8:	str	q0, [sp, #96]
   2b3fc:	ldp	x23, x25, [sp, #96]
   2b400:	stp	x21, x22, [sp, #32]
   2b404:	str	q1, [sp, #128]
   2b408:	ldp	x21, x24, [sp, #128]
   2b40c:	stp	x19, x20, [sp, #16]
   2b410:	and	x22, x25, #0x7fffffffffffffff
   2b414:	stp	x22, x23, [sp, #104]
   2b418:	str	x22, [sp, #120]
   2b41c:	ldr	q1, [sp, #96]
   2b420:	mov	x20, x21
   2b424:	ldr	q0, [sp, #112]
   2b428:	stp	x27, x28, [sp, #80]
   2b42c:	mov	x27, x24
   2b430:	and	x28, x24, #0x7fffffffffffffff
   2b434:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b438:	cbnz	w0, 2bb38 <catanf128@@GLIBC_2.27+0x750>
   2b43c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b440:	add	x0, x0, #0x300
   2b444:	stp	x23, x22, [sp, #96]
   2b448:	mov	x26, x25
   2b44c:	mov	x19, x23
   2b450:	ldr	q1, [x0]
   2b454:	ldr	q0, [sp, #96]
   2b458:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b45c:	cbnz	w0, 2b534 <catanf128@@GLIBC_2.27+0x14c>
   2b460:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b464:	add	x0, x0, #0x300
   2b468:	stp	x23, x22, [sp, #96]
   2b46c:	ldr	q1, [x0]
   2b470:	ldr	q0, [sp, #96]
   2b474:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b478:	cmp	w0, #0x0
   2b47c:	b.le	2b534 <catanf128@@GLIBC_2.27+0x14c>
   2b480:	stp	x21, x28, [sp, #96]
   2b484:	stp	x21, x28, [sp, #112]
   2b488:	ldr	q1, [sp, #96]
   2b48c:	ldr	q0, [sp, #112]
   2b490:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b494:	cbnz	w0, 2b4f4 <catanf128@@GLIBC_2.27+0x10c>
   2b498:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b49c:	add	x0, x0, #0x300
   2b4a0:	stp	x21, x28, [sp, #96]
   2b4a4:	ldr	q1, [x0]
   2b4a8:	ldr	q0, [sp, #96]
   2b4ac:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b4b0:	cbnz	w0, 2b4d4 <catanf128@@GLIBC_2.27+0xec>
   2b4b4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b4b8:	add	x0, x0, #0x300
   2b4bc:	stp	x21, x28, [sp, #96]
   2b4c0:	ldr	q1, [x0]
   2b4c4:	ldr	q0, [sp, #96]
   2b4c8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b4cc:	cmp	w0, #0x0
   2b4d0:	b.gt	2b4f4 <catanf128@@GLIBC_2.27+0x10c>
   2b4d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b4d8:	add	x0, x0, #0xeb0
   2b4dc:	stp	x20, x28, [sp, #96]
   2b4e0:	ldr	q1, [x0]
   2b4e4:	ldr	q0, [sp, #96]
   2b4e8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b4ec:	tbz	w0, #31, 2b4f4 <catanf128@@GLIBC_2.27+0x10c>
   2b4f0:	stp	x20, x27, [sp, #96]
   2b4f4:	mov	x21, #0x0                   	// #0
   2b4f8:	mov	x24, #0x0                   	// #0
   2b4fc:	tbz	x27, #63, 2b504 <catanf128@@GLIBC_2.27+0x11c>
   2b500:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   2b504:	mov	x23, #0x1b8                 	// #440
   2b508:	mov	x25, #0x42d1                	// #17105
   2b50c:	movk	x23, #0xc517, lsl #16
   2b510:	movk	x25, #0xb544, lsl #16
   2b514:	movk	x23, #0x898c, lsl #32
   2b518:	movk	x25, #0x921f, lsl #32
   2b51c:	movk	x23, #0x8469, lsl #48
   2b520:	movk	x25, #0x3fff, lsl #48
   2b524:	tbnz	x26, #63, 2bc40 <catanf128@@GLIBC_2.27+0x858>
   2b528:	mov	x26, x21
   2b52c:	mov	x22, x24
   2b530:	b	2b900 <catanf128@@GLIBC_2.27+0x518>
   2b534:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b538:	add	x0, x0, #0xeb0
   2b53c:	stp	x19, x22, [sp, #96]
   2b540:	ldr	q1, [x0]
   2b544:	ldr	q0, [sp, #96]
   2b548:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b54c:	tbnz	w0, #31, 2b944 <catanf128@@GLIBC_2.27+0x55c>
   2b550:	stp	x20, x28, [sp, #96]
   2b554:	stp	x20, x28, [sp, #112]
   2b558:	ldr	q1, [sp, #96]
   2b55c:	ldr	q0, [sp, #112]
   2b560:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b564:	cbnz	w0, 2b9e8 <catanf128@@GLIBC_2.27+0x600>
   2b568:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b56c:	add	x0, x0, #0x300
   2b570:	stp	x20, x28, [sp, #96]
   2b574:	ldr	q1, [x0]
   2b578:	ldr	q0, [sp, #96]
   2b57c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b580:	cbnz	w0, 2b5a4 <catanf128@@GLIBC_2.27+0x1bc>
   2b584:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b588:	add	x0, x0, #0x300
   2b58c:	stp	x20, x28, [sp, #96]
   2b590:	ldr	q1, [x0]
   2b594:	ldr	q0, [sp, #96]
   2b598:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b59c:	cmp	w0, #0x0
   2b5a0:	b.gt	2bd0c <catanf128@@GLIBC_2.27+0x924>
   2b5a4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2b5a8:	add	x0, x0, #0x190
   2b5ac:	stp	x19, x22, [sp, #96]
   2b5b0:	ldr	q1, [x0]
   2b5b4:	ldr	q0, [sp, #96]
   2b5b8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b5bc:	tbz	w0, #31, 2b7e4 <catanf128@@GLIBC_2.27+0x3fc>
   2b5c0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2b5c4:	add	x0, x0, #0x190
   2b5c8:	stp	x20, x28, [sp, #96]
   2b5cc:	ldr	q1, [x0]
   2b5d0:	ldr	q0, [sp, #96]
   2b5d4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b5d8:	tbz	w0, #31, 2b7e4 <catanf128@@GLIBC_2.27+0x3fc>
   2b5dc:	stp	x19, x22, [sp, #96]
   2b5e0:	stp	x20, x28, [sp, #112]
   2b5e4:	ldr	q1, [sp, #96]
   2b5e8:	ldr	q0, [sp, #112]
   2b5ec:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b5f0:	cmp	w0, #0x0
   2b5f4:	b.gt	2b9fc <catanf128@@GLIBC_2.27+0x614>
   2b5f8:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   2b5fc:	add	x0, x0, #0xec0
   2b600:	mov	x25, x20
   2b604:	mov	x24, x28
   2b608:	stp	x25, x24, [sp, #96]
   2b60c:	mov	x23, x19
   2b610:	ldr	q1, [x0]
   2b614:	ldr	q0, [sp, #96]
   2b618:	mov	x21, x22
   2b61c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b620:	str	x23, [sp, #96]
   2b624:	tbz	w0, #31, 2ba2c <catanf128@@GLIBC_2.27+0x644>
   2b628:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b62c:	add	x0, x0, #0x2f0
   2b630:	str	x21, [sp, #104]
   2b634:	ldr	q0, [x0]
   2b638:	ldr	q1, [sp, #96]
   2b63c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2b640:	stp	x23, x21, [sp, #96]
   2b644:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b648:	add	x0, x0, #0x2f0
   2b64c:	str	q0, [sp, #112]
   2b650:	ldr	q0, [sp, #96]
   2b654:	ldr	q1, [x0]
   2b658:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2b65c:	mov	v1.16b, v0.16b
   2b660:	ldr	q2, [sp, #112]
   2b664:	mov	v0.16b, v2.16b
   2b668:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b66c:	movi	v1.2d, #0x0
   2b670:	str	q0, [sp, #96]
   2b674:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2b678:	cmp	w0, #0x0
   2b67c:	ldp	x23, x21, [sp, #96]
   2b680:	csel	x23, x23, xzr, ne  // ne = any
   2b684:	csel	x21, x21, xzr, ne  // ne = any
   2b688:	stp	x19, x26, [sp, #96]
   2b68c:	stp	x19, x26, [sp, #112]
   2b690:	ldr	q1, [sp, #96]
   2b694:	ldr	q0, [sp, #112]
   2b698:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2b69c:	stp	x23, x21, [sp, #96]
   2b6a0:	ldr	q1, [sp, #96]
   2b6a4:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   2b6a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b6ac:	add	x0, x0, #0x330
   2b6b0:	ldr	q1, [x0]
   2b6b4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b6b8:	stp	x20, x28, [sp, #96]
   2b6bc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b6c0:	add	x0, x0, #0x2f0
   2b6c4:	str	q0, [sp, #112]
   2b6c8:	ldr	q0, [sp, #96]
   2b6cc:	ldp	x24, x21, [sp, #112]
   2b6d0:	ldr	q1, [x0]
   2b6d4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2b6d8:	cbnz	w0, 2b6f8 <catanf128@@GLIBC_2.27+0x310>
   2b6dc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2b6e0:	add	x0, x0, #0x170
   2b6e4:	stp	x19, x22, [sp, #96]
   2b6e8:	ldr	q1, [x0]
   2b6ec:	ldr	q0, [sp, #96]
   2b6f0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b6f4:	tbnz	w0, #31, 2bc94 <catanf128@@GLIBC_2.27+0x8ac>
   2b6f8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2b6fc:	add	x0, x0, #0x170
   2b700:	stp	x19, x22, [sp, #96]
   2b704:	ldr	q1, [x0]
   2b708:	ldr	q0, [sp, #96]
   2b70c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b710:	tbnz	w0, #31, 2bc38 <catanf128@@GLIBC_2.27+0x850>
   2b714:	stp	x19, x26, [sp, #96]
   2b718:	stp	x19, x26, [sp, #112]
   2b71c:	ldr	q1, [sp, #96]
   2b720:	ldr	q0, [sp, #112]
   2b724:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b728:	str	q0, [sp, #112]
   2b72c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b730:	add	x0, x0, #0x2f0
   2b734:	stp	x20, x27, [sp, #96]
   2b738:	ldr	q1, [x0]
   2b73c:	ldr	q0, [sp, #96]
   2b740:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2b744:	mov	v1.16b, v0.16b
   2b748:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b74c:	stp	x20, x27, [sp, #96]
   2b750:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b754:	add	x0, x0, #0x2f0
   2b758:	str	q0, [sp, #128]
   2b75c:	ldr	q0, [sp, #96]
   2b760:	ldr	q1, [x0]
   2b764:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2b768:	mov	v1.16b, v0.16b
   2b76c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b770:	ldr	q1, [sp, #112]
   2b774:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2b778:	mov	v4.16b, v0.16b
   2b77c:	ldr	q1, [sp, #112]
   2b780:	ldr	q2, [sp, #128]
   2b784:	str	q4, [sp, #96]
   2b788:	mov	v0.16b, v2.16b
   2b78c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2b790:	ldr	q1, [sp, #96]
   2b794:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2b798:	str	q0, [sp, #112]
   2b79c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b7a0:	add	x0, x0, #0x330
   2b7a4:	ldr	q1, [x0]
   2b7a8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b7ac:	tbz	w0, #31, 2bbe8 <catanf128@@GLIBC_2.27+0x800>
   2b7b0:	ldr	q0, [sp, #112]
   2b7b4:	mov	x23, x24
   2b7b8:	mov	x25, x21
   2b7bc:	bl	1c928 <__logl_finite@GLIBC_2.17>
   2b7c0:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2b7c4:	add	x0, x0, #0xb40
   2b7c8:	ldr	q1, [x0]
   2b7cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b7d0:	str	q0, [sp, #96]
   2b7d4:	ldp	x20, x19, [sp, #96]
   2b7d8:	mov	x26, x20
   2b7dc:	mov	x22, x19
   2b7e0:	b	2b898 <catanf128@@GLIBC_2.27+0x4b0>
   2b7e4:	mov	x0, #0x42d1                	// #17105
   2b7e8:	mov	x21, #0x42d1                	// #17105
   2b7ec:	movk	x0, #0xb544, lsl #16
   2b7f0:	movk	x21, #0xb544, lsl #16
   2b7f4:	movk	x0, #0x921f, lsl #32
   2b7f8:	cmp	x26, #0x0
   2b7fc:	movk	x0, #0xbfff, lsl #48
   2b800:	movk	x21, #0x921f, lsl #32
   2b804:	movk	x21, #0x3fff, lsl #48
   2b808:	csel	x21, x21, x0, ge  // ge = tcont
   2b80c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b810:	add	x0, x0, #0x2f0
   2b814:	stp	x19, x22, [sp, #96]
   2b818:	mov	x24, #0x1b8                 	// #440
   2b81c:	movk	x24, #0xc517, lsl #16
   2b820:	ldr	q1, [x0]
   2b824:	movk	x24, #0x898c, lsl #32
   2b828:	ldr	q0, [sp, #96]
   2b82c:	movk	x24, #0x8469, lsl #48
   2b830:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b834:	str	x20, [sp, #96]
   2b838:	cmp	w0, #0x0
   2b83c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b840:	add	x0, x0, #0x2f0
   2b844:	b.le	2b92c <catanf128@@GLIBC_2.27+0x544>
   2b848:	str	x28, [sp, #104]
   2b84c:	ldr	q1, [x0]
   2b850:	ldr	q0, [sp, #96]
   2b854:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b858:	cmp	w0, #0x0
   2b85c:	b.gt	2bac4 <catanf128@@GLIBC_2.27+0x6dc>
   2b860:	stp	x19, x26, [sp, #96]
   2b864:	mov	x23, x24
   2b868:	stp	x20, x27, [sp, #112]
   2b86c:	ldr	q1, [sp, #96]
   2b870:	ldr	q0, [sp, #112]
   2b874:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2b878:	stp	x19, x26, [sp, #96]
   2b87c:	ldr	q1, [sp, #96]
   2b880:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2b884:	str	q0, [sp, #96]
   2b888:	mov	x25, x21
   2b88c:	ldp	x20, x19, [sp, #96]
   2b890:	mov	x26, x20
   2b894:	mov	x22, x19
   2b898:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b89c:	add	x0, x0, #0xeb0
   2b8a0:	ldr	q1, [x0]
   2b8a4:	and	x0, x21, #0x7fffffffffffffff
   2b8a8:	stp	x24, x0, [sp, #96]
   2b8ac:	ldr	q0, [sp, #96]
   2b8b0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b8b4:	tbz	w0, #31, 2b8cc <catanf128@@GLIBC_2.27+0x4e4>
   2b8b8:	stp	x24, x21, [sp, #96]
   2b8bc:	stp	x24, x21, [sp, #112]
   2b8c0:	ldr	q1, [sp, #96]
   2b8c4:	ldr	q0, [sp, #112]
   2b8c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b8cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b8d0:	add	x0, x0, #0xeb0
   2b8d4:	ldr	q1, [x0]
   2b8d8:	and	x0, x19, #0x7fffffffffffffff
   2b8dc:	stp	x20, x0, [sp, #96]
   2b8e0:	ldr	q0, [sp, #96]
   2b8e4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b8e8:	tbz	w0, #31, 2b900 <catanf128@@GLIBC_2.27+0x518>
   2b8ec:	stp	x20, x19, [sp, #96]
   2b8f0:	stp	x20, x19, [sp, #112]
   2b8f4:	ldr	q1, [sp, #96]
   2b8f8:	ldr	q0, [sp, #112]
   2b8fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2b900:	stp	x23, x25, [sp, #96]
   2b904:	stp	x26, x22, [sp, #112]
   2b908:	ldr	q0, [sp, #96]
   2b90c:	ldp	x19, x20, [sp, #16]
   2b910:	ldp	x21, x22, [sp, #32]
   2b914:	ldp	x23, x24, [sp, #48]
   2b918:	ldp	x25, x26, [sp, #64]
   2b91c:	ldp	x27, x28, [sp, #80]
   2b920:	ldr	q1, [sp, #112]
   2b924:	ldp	x29, x30, [sp], #144
   2b928:	ret
   2b92c:	str	x27, [sp, #104]
   2b930:	mov	x23, x24
   2b934:	ldr	q0, [x0]
   2b938:	ldr	q1, [sp, #96]
   2b93c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2b940:	b	2b884 <catanf128@@GLIBC_2.27+0x49c>
   2b944:	movi	v1.2d, #0x0
   2b948:	stp	x19, x26, [sp, #96]
   2b94c:	ldr	q0, [sp, #96]
   2b950:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2b954:	stp	x20, x28, [sp, #96]
   2b958:	stp	x20, x28, [sp, #112]
   2b95c:	ldr	q1, [sp, #96]
   2b960:	ldr	q0, [sp, #112]
   2b964:	cbnz	w0, 2b9e0 <catanf128@@GLIBC_2.27+0x5f8>
   2b968:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b96c:	cbnz	w0, 2b9e8 <catanf128@@GLIBC_2.27+0x600>
   2b970:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b974:	add	x0, x0, #0x300
   2b978:	stp	x20, x28, [sp, #96]
   2b97c:	ldr	q1, [x0]
   2b980:	ldr	q0, [sp, #96]
   2b984:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b988:	cbnz	w0, 2b9ac <catanf128@@GLIBC_2.27+0x5c4>
   2b98c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b990:	add	x0, x0, #0x300
   2b994:	stp	x20, x28, [sp, #96]
   2b998:	ldr	q1, [x0]
   2b99c:	ldr	q0, [sp, #96]
   2b9a0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2b9a4:	cmp	w0, #0x0
   2b9a8:	b.gt	2bd0c <catanf128@@GLIBC_2.27+0x924>
   2b9ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2b9b0:	add	x0, x0, #0xeb0
   2b9b4:	stp	x20, x28, [sp, #96]
   2b9b8:	ldr	q1, [x0]
   2b9bc:	ldr	q0, [sp, #96]
   2b9c0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2b9c4:	tbz	w0, #31, 2b5a4 <catanf128@@GLIBC_2.27+0x1bc>
   2b9c8:	movi	v1.2d, #0x0
   2b9cc:	stp	x20, x27, [sp, #96]
   2b9d0:	ldr	q0, [sp, #96]
   2b9d4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2b9d8:	cbz	w0, 2b528 <catanf128@@GLIBC_2.27+0x140>
   2b9dc:	b	2b5a4 <catanf128@@GLIBC_2.27+0x1bc>
   2b9e0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2b9e4:	cbz	w0, 2b568 <catanf128@@GLIBC_2.27+0x180>
   2b9e8:	mov	x25, #0x7fff800000000000    	// #9223231299366420480
   2b9ec:	mov	x23, #0x0                   	// #0
   2b9f0:	mov	x22, x25
   2b9f4:	mov	x26, #0x0                   	// #0
   2b9f8:	b	2b900 <catanf128@@GLIBC_2.27+0x518>
   2b9fc:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   2ba00:	add	x0, x0, #0xec0
   2ba04:	mov	x25, x19
   2ba08:	mov	x24, x22
   2ba0c:	stp	x25, x24, [sp, #96]
   2ba10:	mov	x23, x20
   2ba14:	ldr	q1, [x0]
   2ba18:	ldr	q0, [sp, #96]
   2ba1c:	mov	x21, x28
   2ba20:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ba24:	str	x23, [sp, #96]
   2ba28:	tbnz	w0, #31, 2b628 <catanf128@@GLIBC_2.27+0x240>
   2ba2c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ba30:	add	x0, x0, #0x2f0
   2ba34:	str	x21, [sp, #104]
   2ba38:	ldr	q1, [x0]
   2ba3c:	ldr	q0, [sp, #96]
   2ba40:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2ba44:	str	x23, [sp, #96]
   2ba48:	tbnz	w0, #31, 2bc54 <catanf128@@GLIBC_2.27+0x86c>
   2ba4c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ba50:	add	x0, x0, #0x2f0
   2ba54:	str	x21, [sp, #104]
   2ba58:	ldr	q0, [x0]
   2ba5c:	ldr	q1, [sp, #96]
   2ba60:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2ba64:	stp	x23, x21, [sp, #96]
   2ba68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ba6c:	add	x0, x0, #0x2f0
   2ba70:	str	q0, [sp, #112]
   2ba74:	ldr	q0, [sp, #96]
   2ba78:	ldr	q1, [x0]
   2ba7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2ba80:	mov	v1.16b, v0.16b
   2ba84:	ldr	q2, [sp, #112]
   2ba88:	mov	v0.16b, v2.16b
   2ba8c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2ba90:	stp	x25, x24, [sp, #96]
   2ba94:	stp	x25, x24, [sp, #112]
   2ba98:	ldr	q1, [sp, #96]
   2ba9c:	str	q0, [sp, #96]
   2baa0:	ldr	q0, [sp, #112]
   2baa4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2baa8:	mov	v1.16b, v0.16b
   2baac:	ldr	q2, [sp, #96]
   2bab0:	mov	v0.16b, v2.16b
   2bab4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2bab8:	str	q0, [sp, #96]
   2babc:	ldp	x23, x21, [sp, #96]
   2bac0:	b	2b688 <catanf128@@GLIBC_2.27+0x2a0>
   2bac4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bac8:	add	x0, x0, #0x330
   2bacc:	stp	x20, x27, [sp, #96]
   2bad0:	mov	x23, x24
   2bad4:	ldr	q1, [x0]
   2bad8:	ldr	q0, [sp, #96]
   2badc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2bae0:	stp	x19, x26, [sp, #96]
   2bae4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bae8:	add	x0, x0, #0x330
   2baec:	str	q0, [sp, #112]
   2baf0:	ldr	q0, [sp, #96]
   2baf4:	ldr	q1, [x0]
   2baf8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2bafc:	ldr	q2, [sp, #112]
   2bb00:	mov	v1.16b, v2.16b
   2bb04:	bl	14a50 <__hypotl_finite@GLIBC_2.17>
   2bb08:	stp	x20, x27, [sp, #96]
   2bb0c:	mov	v1.16b, v0.16b
   2bb10:	str	q0, [sp, #112]
   2bb14:	ldr	q0, [sp, #96]
   2bb18:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2bb1c:	ldr	q1, [sp, #112]
   2bb20:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2bb24:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2bb28:	add	x0, x0, #0xb40
   2bb2c:	ldr	q1, [x0]
   2bb30:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2bb34:	b	2b884 <catanf128@@GLIBC_2.27+0x49c>
   2bb38:	stp	x21, x28, [sp, #96]
   2bb3c:	stp	x21, x28, [sp, #112]
   2bb40:	ldr	q1, [sp, #96]
   2bb44:	ldr	q0, [sp, #112]
   2bb48:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2bb4c:	cbnz	w0, 2b9e8 <catanf128@@GLIBC_2.27+0x600>
   2bb50:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bb54:	add	x0, x0, #0x300
   2bb58:	stp	x21, x28, [sp, #96]
   2bb5c:	ldr	q1, [x0]
   2bb60:	ldr	q0, [sp, #96]
   2bb64:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2bb68:	cbnz	w0, 2bb94 <catanf128@@GLIBC_2.27+0x7ac>
   2bb6c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bb70:	add	x0, x0, #0x300
   2bb74:	stp	x21, x28, [sp, #96]
   2bb78:	mov	x23, #0x0                   	// #0
   2bb7c:	mov	x25, #0x7fff800000000000    	// #9223231299366420480
   2bb80:	ldr	q1, [x0]
   2bb84:	ldr	q0, [sp, #96]
   2bb88:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2bb8c:	cmp	w0, #0x0
   2bb90:	b.gt	2bd40 <catanf128@@GLIBC_2.27+0x958>
   2bb94:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bb98:	add	x0, x0, #0xeb0
   2bb9c:	stp	x20, x28, [sp, #96]
   2bba0:	ldr	q1, [x0]
   2bba4:	ldr	q0, [sp, #96]
   2bba8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2bbac:	tbz	w0, #31, 2b9e8 <catanf128@@GLIBC_2.27+0x600>
   2bbb0:	movi	v1.2d, #0x0
   2bbb4:	stp	x20, x27, [sp, #96]
   2bbb8:	ldr	q0, [sp, #96]
   2bbbc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2bbc0:	cbnz	w0, 2b9e8 <catanf128@@GLIBC_2.27+0x600>
   2bbc4:	mov	x21, #0x0                   	// #0
   2bbc8:	mov	x24, #0x0                   	// #0
   2bbcc:	tbz	x27, #63, 2bbd4 <catanf128@@GLIBC_2.27+0x7ec>
   2bbd0:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   2bbd4:	mov	x26, x21
   2bbd8:	mov	x22, x24
   2bbdc:	mov	x23, #0x0                   	// #0
   2bbe0:	mov	x25, #0x7fff800000000000    	// #9223231299366420480
   2bbe4:	b	2b900 <catanf128@@GLIBC_2.27+0x518>
   2bbe8:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   2bbec:	add	x0, x0, #0x5a0
   2bbf0:	stp	x20, x27, [sp, #112]
   2bbf4:	mov	x23, x24
   2bbf8:	mov	x25, x21
   2bbfc:	ldr	q1, [x0]
   2bc00:	ldr	q0, [sp, #112]
   2bc04:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2bc08:	ldr	q1, [sp, #96]
   2bc0c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2bc10:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2bc14:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2bc18:	add	x0, x0, #0xb40
   2bc1c:	ldr	q1, [x0]
   2bc20:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2bc24:	str	q0, [sp, #96]
   2bc28:	ldp	x20, x19, [sp, #96]
   2bc2c:	mov	x26, x20
   2bc30:	mov	x22, x19
   2bc34:	b	2b898 <catanf128@@GLIBC_2.27+0x4b0>
   2bc38:	stp	xzr, xzr, [sp, #112]
   2bc3c:	b	2b72c <catanf128@@GLIBC_2.27+0x344>
   2bc40:	mov	x25, #0x42d1                	// #17105
   2bc44:	movk	x25, #0xb544, lsl #16
   2bc48:	movk	x25, #0x921f, lsl #32
   2bc4c:	movk	x25, #0xbfff, lsl #48
   2bc50:	b	2b528 <catanf128@@GLIBC_2.27+0x140>
   2bc54:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   2bc58:	add	x0, x0, #0x360
   2bc5c:	str	x21, [sp, #104]
   2bc60:	ldr	q1, [x0]
   2bc64:	ldr	q0, [sp, #96]
   2bc68:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2bc6c:	tbz	w0, #31, 2bce8 <catanf128@@GLIBC_2.27+0x900>
   2bc70:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bc74:	add	x0, x0, #0x330
   2bc78:	stp	x25, x24, [sp, #96]
   2bc7c:	ldr	q1, [x0]
   2bc80:	ldr	q0, [sp, #96]
   2bc84:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2bc88:	tbz	w0, #31, 2bce8 <catanf128@@GLIBC_2.27+0x900>
   2bc8c:	str	x23, [sp, #96]
   2bc90:	b	2ba4c <catanf128@@GLIBC_2.27+0x664>
   2bc94:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bc98:	add	x0, x0, #0x330
   2bc9c:	ldr	q2, [x0]
   2bca0:	tbz	x27, #63, 2bcb0 <catanf128@@GLIBC_2.27+0x8c8>
   2bca4:	adrp	x0, 61000 <f64xsubf128@@GLIBC_2.28+0xd280>
   2bca8:	add	x0, x0, #0xef0
   2bcac:	ldr	q2, [x0]
   2bcb0:	stp	x19, x22, [sp, #96]
   2bcb4:	mov	x23, x24
   2bcb8:	mov	x25, x21
   2bcbc:	ldr	q0, [sp, #96]
   2bcc0:	str	q2, [sp, #112]
   2bcc4:	bl	1c928 <__logl_finite@GLIBC_2.17>
   2bcc8:	mov	v1.16b, v0.16b
   2bccc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bcd0:	add	x0, x0, #0xea0
   2bcd4:	ldr	q0, [x0]
   2bcd8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2bcdc:	ldr	q2, [sp, #112]
   2bce0:	mov	v1.16b, v2.16b
   2bce4:	b	2bc20 <catanf128@@GLIBC_2.27+0x838>
   2bce8:	stp	x25, x24, [sp, #96]
   2bcec:	stp	x23, x21, [sp, #112]
   2bcf0:	ldr	q1, [sp, #96]
   2bcf4:	ldr	q0, [sp, #112]
   2bcf8:	bl	25b98 <ldexpf128@@GLIBC_2.27+0x1b8>
   2bcfc:	str	q0, [sp, #96]
   2bd00:	ldp	x23, x21, [sp, #96]
   2bd04:	eor	x21, x21, #0x8000000000000000
   2bd08:	b	2b688 <catanf128@@GLIBC_2.27+0x2a0>
   2bd0c:	mov	x23, #0x1b8                 	// #440
   2bd10:	mov	x25, #0x42d1                	// #17105
   2bd14:	movk	x23, #0xc517, lsl #16
   2bd18:	movk	x25, #0xb544, lsl #16
   2bd1c:	movk	x23, #0x898c, lsl #32
   2bd20:	movk	x25, #0x921f, lsl #32
   2bd24:	movk	x23, #0x8469, lsl #48
   2bd28:	movk	x25, #0x3fff, lsl #48
   2bd2c:	tbz	x26, #63, 2bd40 <catanf128@@GLIBC_2.27+0x958>
   2bd30:	mov	x25, #0x42d1                	// #17105
   2bd34:	movk	x25, #0xb544, lsl #16
   2bd38:	movk	x25, #0x921f, lsl #32
   2bd3c:	movk	x25, #0xbfff, lsl #48
   2bd40:	mov	x21, #0x0                   	// #0
   2bd44:	mov	x24, #0x0                   	// #0
   2bd48:	tbz	x27, #63, 2b528 <catanf128@@GLIBC_2.27+0x140>
   2bd4c:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   2bd50:	b	2b528 <catanf128@@GLIBC_2.27+0x140>
   2bd54:	nop

000000000002bd58 <ctanf128@@GLIBC_2.27>:
   2bd58:	stp	x29, x30, [sp, #-208]!
   2bd5c:	mov	x29, sp
   2bd60:	stp	x21, x22, [sp, #32]
   2bd64:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2bd68:	stp	x23, x24, [sp, #48]
   2bd6c:	stp	x27, x28, [sp, #80]
   2bd70:	str	q0, [sp, #96]
   2bd74:	ldp	x23, x27, [sp, #96]
   2bd78:	stp	x25, x26, [sp, #64]
   2bd7c:	ldr	x0, [x21, #4032]
   2bd80:	str	q1, [sp, #112]
   2bd84:	ldp	x25, x24, [sp, #112]
   2bd88:	ldr	x1, [x0]
   2bd8c:	str	x1, [sp, #200]
   2bd90:	mov	x1, #0x0                   	// #0
   2bd94:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bd98:	add	x0, x0, #0x300
   2bd9c:	and	x26, x27, #0x7fffffffffffffff
   2bda0:	str	x26, [sp, #104]
   2bda4:	stp	x19, x20, [sp, #16]
   2bda8:	ldr	q1, [x0]
   2bdac:	ldr	q0, [sp, #96]
   2bdb0:	mov	x19, x25
   2bdb4:	mov	x22, x24
   2bdb8:	and	x20, x24, #0x7fffffffffffffff
   2bdbc:	str	x23, [sp, #128]
   2bdc0:	str	x27, [sp, #144]
   2bdc4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2bdc8:	cbnz	w0, 2c158 <ctanf128@@GLIBC_2.27+0x400>
   2bdcc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bdd0:	add	x0, x0, #0x300
   2bdd4:	stp	x23, x26, [sp, #96]
   2bdd8:	ldr	q1, [x0]
   2bddc:	ldr	q0, [sp, #96]
   2bde0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2bde4:	cmp	w0, #0x0
   2bde8:	b.gt	2c158 <ctanf128@@GLIBC_2.27+0x400>
   2bdec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bdf0:	add	x0, x0, #0x300
   2bdf4:	stp	x25, x20, [sp, #96]
   2bdf8:	ldr	q1, [x0]
   2bdfc:	ldr	q0, [sp, #96]
   2be00:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2be04:	cbnz	w0, 2c214 <ctanf128@@GLIBC_2.27+0x4bc>
   2be08:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2be0c:	add	x0, x0, #0x300
   2be10:	stp	x25, x20, [sp, #96]
   2be14:	ldr	q1, [x0]
   2be18:	ldr	q0, [sp, #96]
   2be1c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2be20:	cmp	w0, #0x0
   2be24:	b.gt	2c214 <ctanf128@@GLIBC_2.27+0x4bc>
   2be28:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2be2c:	add	x0, x0, #0x120
   2be30:	mov	x28, x25
   2be34:	ldr	q1, [x0]
   2be38:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2be3c:	add	x0, x0, #0xea0
   2be40:	ldr	q0, [x0]
   2be44:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2be48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2be4c:	add	x0, x0, #0x330
   2be50:	ldr	q1, [x0]
   2be54:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2be58:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   2be5c:	mov	w24, w0
   2be60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2be64:	add	x0, x0, #0xeb0
   2be68:	stp	x23, x26, [sp, #96]
   2be6c:	ldr	q1, [x0]
   2be70:	ldr	q0, [sp, #96]
   2be74:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2be78:	cmp	w0, #0x0
   2be7c:	b.le	2c2bc <ctanf128@@GLIBC_2.27+0x564>
   2be80:	stp	x23, x27, [sp, #96]
   2be84:	add	x1, sp, #0xb0
   2be88:	add	x0, sp, #0xa0
   2be8c:	ldr	q0, [sp, #96]
   2be90:	bl	24048 <sincosf128@@GLIBC_2.27>
   2be94:	mov	w0, w24
   2be98:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2be9c:	stp	x19, x20, [sp, #96]
   2bea0:	ldr	q1, [sp, #96]
   2bea4:	str	q0, [sp, #112]
   2bea8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2beac:	tbnz	w0, #31, 2c03c <ctanf128@@GLIBC_2.27+0x2e4>
   2beb0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2beb4:	add	x0, x0, #0xeb0
   2beb8:	stp	x19, x20, [sp, #96]
   2bebc:	mov	x26, x19
   2bec0:	mov	x25, x22
   2bec4:	ldr	q1, [x0]
   2bec8:	ldr	q0, [sp, #96]
   2becc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2bed0:	cmp	w0, #0x0
   2bed4:	b.gt	2c0d8 <ctanf128@@GLIBC_2.27+0x380>
   2bed8:	ldp	x24, x23, [sp, #176]
   2bedc:	stp	x24, x23, [sp, #96]
   2bee0:	stp	x24, x23, [sp, #112]
   2bee4:	ldr	q1, [sp, #96]
   2bee8:	ldr	q0, [sp, #112]
   2beec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2bef0:	str	q0, [sp, #96]
   2bef4:	and	x0, x23, #0x7fffffffffffffff
   2bef8:	stp	x24, x0, [sp, #112]
   2befc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2bf00:	add	x0, x0, #0x180
   2bf04:	ldr	q0, [sp, #112]
   2bf08:	ldr	q1, [x0]
   2bf0c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2bf10:	stp	x28, x20, [sp, #112]
   2bf14:	ldr	q1, [sp, #112]
   2bf18:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2bf1c:	tbnz	w0, #31, 2c014 <ctanf128@@GLIBC_2.27+0x2bc>
   2bf20:	stp	x24, x23, [sp, #112]
   2bf24:	ldr	q1, [sp, #160]
   2bf28:	ldr	q0, [sp, #112]
   2bf2c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2bf30:	ldr	q1, [sp, #96]
   2bf34:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2bf38:	stp	x26, x25, [sp, #112]
   2bf3c:	ldr	q1, [sp, #96]
   2bf40:	str	q0, [sp, #128]
   2bf44:	ldr	q0, [sp, #112]
   2bf48:	ldp	x22, x19, [sp, #128]
   2bf4c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2bf50:	str	q0, [sp, #96]
   2bf54:	ldp	x26, x23, [sp, #96]
   2bf58:	mov	x27, x22
   2bf5c:	mov	x20, x19
   2bf60:	mov	x25, x26
   2bf64:	mov	x24, x23
   2bf68:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bf6c:	add	x0, x0, #0xeb0
   2bf70:	ldr	q1, [x0]
   2bf74:	and	x0, x19, #0x7fffffffffffffff
   2bf78:	stp	x22, x0, [sp, #96]
   2bf7c:	ldr	q0, [sp, #96]
   2bf80:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2bf84:	tbz	w0, #31, 2bf9c <ctanf128@@GLIBC_2.27+0x244>
   2bf88:	stp	x22, x19, [sp, #96]
   2bf8c:	stp	x22, x19, [sp, #112]
   2bf90:	ldr	q1, [sp, #96]
   2bf94:	ldr	q0, [sp, #112]
   2bf98:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2bf9c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2bfa0:	add	x0, x0, #0xeb0
   2bfa4:	ldr	q1, [x0]
   2bfa8:	and	x0, x23, #0x7fffffffffffffff
   2bfac:	stp	x26, x0, [sp, #96]
   2bfb0:	ldr	q0, [sp, #96]
   2bfb4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2bfb8:	tbnz	w0, #31, 2bffc <ctanf128@@GLIBC_2.27+0x2a4>
   2bfbc:	ldr	x21, [x21, #4032]
   2bfc0:	ldr	x1, [sp, #200]
   2bfc4:	ldr	x0, [x21]
   2bfc8:	eor	x0, x1, x0
   2bfcc:	cbnz	x0, 2c31c <ctanf128@@GLIBC_2.27+0x5c4>
   2bfd0:	stp	x27, x20, [sp, #96]
   2bfd4:	stp	x25, x24, [sp, #112]
   2bfd8:	ldr	q0, [sp, #96]
   2bfdc:	ldp	x19, x20, [sp, #16]
   2bfe0:	ldp	x21, x22, [sp, #32]
   2bfe4:	ldp	x23, x24, [sp, #48]
   2bfe8:	ldp	x25, x26, [sp, #64]
   2bfec:	ldp	x27, x28, [sp, #80]
   2bff0:	ldr	q1, [sp, #112]
   2bff4:	ldp	x29, x30, [sp], #208
   2bff8:	ret
   2bffc:	stp	x26, x23, [sp, #96]
   2c000:	stp	x26, x23, [sp, #112]
   2c004:	ldr	q1, [sp, #96]
   2c008:	ldr	q0, [sp, #112]
   2c00c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c010:	b	2bfbc <ctanf128@@GLIBC_2.27+0x264>
   2c014:	stp	x19, x22, [sp, #112]
   2c018:	stp	x19, x22, [sp, #128]
   2c01c:	ldr	q1, [sp, #112]
   2c020:	ldr	q0, [sp, #128]
   2c024:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c028:	mov	v1.16b, v0.16b
   2c02c:	ldr	q0, [sp, #96]
   2c030:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2c034:	str	q0, [sp, #96]
   2c038:	b	2bf20 <ctanf128@@GLIBC_2.27+0x1c8>
   2c03c:	lsl	w0, w24, #1
   2c040:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2c044:	mov	x23, #0x3fff000000000000    	// #4611404543450677248
   2c048:	mov	x26, #0x0                   	// #0
   2c04c:	bl	141f0 <__expl_finite@GLIBC_2.17>
   2c050:	stp	x19, x20, [sp, #96]
   2c054:	cmp	x22, #0x0
   2c058:	str	q0, [sp, #128]
   2c05c:	mov	x0, #0xbfff000000000000    	// #-4611967493404098560
   2c060:	ldr	q0, [sp, #96]
   2c064:	csel	x23, x23, x0, ge  // ge = tcont
   2c068:	ldr	q1, [sp, #112]
   2c06c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2c070:	mov	v2.16b, v0.16b
   2c074:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   2c078:	add	x0, x0, #0x5a0
   2c07c:	ldr	q0, [sp, #160]
   2c080:	str	q2, [sp, #96]
   2c084:	ldr	q1, [x0]
   2c088:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c08c:	ldr	q1, [sp, #176]
   2c090:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c094:	ldr	q1, [sp, #128]
   2c098:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2c09c:	str	q0, [sp, #144]
   2c0a0:	ldr	q1, [sp, #96]
   2c0a4:	ldr	q0, [sp, #112]
   2c0a8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c0ac:	tbz	w0, #31, 2c120 <ctanf128@@GLIBC_2.27+0x3c8>
   2c0b0:	ldr	q1, [sp, #128]
   2c0b4:	mov	x24, x23
   2c0b8:	ldr	q0, [sp, #144]
   2c0bc:	mov	x25, #0x0                   	// #0
   2c0c0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2c0c4:	str	q0, [sp, #96]
   2c0c8:	ldp	x22, x19, [sp, #96]
   2c0cc:	mov	x27, x22
   2c0d0:	mov	x20, x19
   2c0d4:	b	2bf68 <ctanf128@@GLIBC_2.27+0x210>
   2c0d8:	stp	x19, x22, [sp, #96]
   2c0dc:	ldr	q0, [sp, #96]
   2c0e0:	bl	1e700 <__sinhl_finite@GLIBC_2.17>
   2c0e4:	stp	x19, x22, [sp, #96]
   2c0e8:	str	q0, [sp, #112]
   2c0ec:	ldr	q0, [sp, #96]
   2c0f0:	ldr	x28, [sp, #112]
   2c0f4:	ldr	x22, [sp, #120]
   2c0f8:	bl	14000 <__coshl_finite@GLIBC_2.17>
   2c0fc:	stp	x28, x22, [sp, #96]
   2c100:	mov	v1.16b, v0.16b
   2c104:	mov	x19, x28
   2c108:	ldr	q0, [sp, #96]
   2c10c:	and	x20, x22, #0x7fffffffffffffff
   2c110:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c114:	str	q0, [sp, #96]
   2c118:	ldp	x26, x25, [sp, #96]
   2c11c:	b	2bed8 <ctanf128@@GLIBC_2.27+0x180>
   2c120:	ldr	q1, [sp, #96]
   2c124:	mov	x24, x23
   2c128:	mov	x25, #0x0                   	// #0
   2c12c:	mov	v0.16b, v1.16b
   2c130:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2c134:	bl	141f0 <__expl_finite@GLIBC_2.17>
   2c138:	mov	v1.16b, v0.16b
   2c13c:	ldr	q0, [sp, #144]
   2c140:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2c144:	str	q0, [sp, #96]
   2c148:	ldp	x22, x19, [sp, #96]
   2c14c:	mov	x27, x22
   2c150:	mov	x20, x19
   2c154:	b	2bf68 <ctanf128@@GLIBC_2.27+0x210>
   2c158:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c15c:	add	x0, x0, #0x300
   2c160:	stp	x19, x20, [sp, #96]
   2c164:	ldr	q1, [x0]
   2c168:	ldr	q0, [sp, #96]
   2c16c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c170:	cbnz	w0, 2c194 <ctanf128@@GLIBC_2.27+0x43c>
   2c174:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c178:	add	x0, x0, #0x300
   2c17c:	stp	x19, x20, [sp, #96]
   2c180:	ldr	q1, [x0]
   2c184:	ldr	q0, [sp, #96]
   2c188:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c18c:	cmp	w0, #0x0
   2c190:	b.gt	2c2dc <ctanf128@@GLIBC_2.27+0x584>
   2c194:	movi	v1.2d, #0x0
   2c198:	stp	x23, x27, [sp, #96]
   2c19c:	ldr	q0, [sp, #96]
   2c1a0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2c1a4:	cbz	w0, 2c2fc <ctanf128@@GLIBC_2.27+0x5a4>
   2c1a8:	movi	v1.2d, #0x0
   2c1ac:	stp	x19, x22, [sp, #96]
   2c1b0:	ldr	q0, [sp, #96]
   2c1b4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2c1b8:	cbnz	w0, 2c308 <ctanf128@@GLIBC_2.27+0x5b0>
   2c1bc:	mov	x25, x19
   2c1c0:	mov	x24, x22
   2c1c4:	mov	x27, #0x0                   	// #0
   2c1c8:	mov	x20, #0x7fff800000000000    	// #9223231299366420480
   2c1cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c1d0:	add	x0, x0, #0x300
   2c1d4:	stp	x23, x26, [sp, #96]
   2c1d8:	ldr	q1, [x0]
   2c1dc:	ldr	q0, [sp, #96]
   2c1e0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c1e4:	cbnz	w0, 2bfbc <ctanf128@@GLIBC_2.27+0x264>
   2c1e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c1ec:	add	x0, x0, #0x300
   2c1f0:	stp	x23, x26, [sp, #96]
   2c1f4:	ldr	q1, [x0]
   2c1f8:	ldr	q0, [sp, #96]
   2c1fc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c200:	cmp	w0, #0x0
   2c204:	b.le	2bfbc <ctanf128@@GLIBC_2.27+0x264>
   2c208:	mov	w0, #0x1                   	// #1
   2c20c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   2c210:	b	2bfbc <ctanf128@@GLIBC_2.27+0x264>
   2c214:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c218:	add	x0, x0, #0x300
   2c21c:	stp	x19, x20, [sp, #96]
   2c220:	ldr	q1, [x0]
   2c224:	ldr	q0, [sp, #96]
   2c228:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c22c:	cbnz	w0, 2c194 <ctanf128@@GLIBC_2.27+0x43c>
   2c230:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c234:	add	x0, x0, #0x300
   2c238:	stp	x19, x20, [sp, #96]
   2c23c:	ldr	q1, [x0]
   2c240:	ldr	q0, [sp, #96]
   2c244:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c248:	cmp	w0, #0x0
   2c24c:	b.le	2c194 <ctanf128@@GLIBC_2.27+0x43c>
   2c250:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c254:	add	x0, x0, #0x2f0
   2c258:	stp	x23, x26, [sp, #96]
   2c25c:	ldr	q1, [x0]
   2c260:	ldr	q0, [sp, #96]
   2c264:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2c268:	cmp	w0, #0x0
   2c26c:	b.le	2c2dc <ctanf128@@GLIBC_2.27+0x584>
   2c270:	stp	x23, x27, [sp, #96]
   2c274:	add	x1, sp, #0xb0
   2c278:	add	x0, sp, #0xa0
   2c27c:	ldr	q0, [sp, #96]
   2c280:	mov	x20, #0x0                   	// #0
   2c284:	bl	24048 <sincosf128@@GLIBC_2.27>
   2c288:	ldr	q0, [sp, #160]
   2c28c:	ldr	q1, [sp, #176]
   2c290:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c294:	str	q0, [sp, #96]
   2c298:	ldr	x1, [sp, #104]
   2c29c:	mov	x0, #0x0                   	// #0
   2c2a0:	tbnz	x1, #63, 2c2e8 <ctanf128@@GLIBC_2.27+0x590>
   2c2a4:	nop
   2c2a8:	mov	x25, #0x0                   	// #0
   2c2ac:	mov	x24, #0x3fff000000000000    	// #4611404543450677248
   2c2b0:	tbnz	x22, #63, 2c2f0 <ctanf128@@GLIBC_2.27+0x598>
   2c2b4:	mov	x27, x0
   2c2b8:	b	2bfbc <ctanf128@@GLIBC_2.27+0x264>
   2c2bc:	adrp	x2, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c2c0:	add	x2, x2, #0x2f0
   2c2c4:	fmov	d0, x23
   2c2c8:	ldr	q2, [x2]
   2c2cc:	fmov	v0.d[1], x27
   2c2d0:	str	q0, [sp, #160]
   2c2d4:	str	q2, [sp, #176]
   2c2d8:	b	2be94 <ctanf128@@GLIBC_2.27+0x13c>
   2c2dc:	mov	x0, #0x0                   	// #0
   2c2e0:	mov	x20, #0x0                   	// #0
   2c2e4:	tbz	x27, #63, 2c2a8 <ctanf128@@GLIBC_2.27+0x550>
   2c2e8:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
   2c2ec:	b	2c2a8 <ctanf128@@GLIBC_2.27+0x550>
   2c2f0:	mov	x27, x0
   2c2f4:	mov	x24, #0xbfff000000000000    	// #-4611967493404098560
   2c2f8:	b	2bfbc <ctanf128@@GLIBC_2.27+0x264>
   2c2fc:	ldr	x27, [sp, #128]
   2c300:	ldr	x20, [sp, #144]
   2c304:	b	2bfbc <ctanf128@@GLIBC_2.27+0x264>
   2c308:	mov	x20, #0x7fff800000000000    	// #9223231299366420480
   2c30c:	mov	x27, #0x0                   	// #0
   2c310:	mov	x24, x20
   2c314:	mov	x25, #0x0                   	// #0
   2c318:	b	2c1cc <ctanf128@@GLIBC_2.27+0x474>
   2c31c:	bl	ba70 <__stack_chk_fail@plt>

000000000002c320 <ctanhf128@@GLIBC_2.27>:
   2c320:	stp	x29, x30, [sp, #-208]!
   2c324:	mov	x29, sp
   2c328:	stp	x19, x20, [sp, #16]
   2c32c:	stp	x21, x22, [sp, #32]
   2c330:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2c334:	str	q0, [sp, #96]
   2c338:	ldp	x19, x22, [sp, #96]
   2c33c:	stp	x23, x24, [sp, #48]
   2c340:	ldr	x0, [x21, #4032]
   2c344:	stp	x25, x26, [sp, #64]
   2c348:	ldr	x1, [x0]
   2c34c:	str	x1, [sp, #200]
   2c350:	mov	x1, #0x0                   	// #0
   2c354:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c358:	add	x0, x0, #0x300
   2c35c:	str	q1, [sp, #112]
   2c360:	ldp	x25, x24, [sp, #112]
   2c364:	and	x20, x22, #0x7fffffffffffffff
   2c368:	str	x20, [sp, #104]
   2c36c:	ldr	q1, [x0]
   2c370:	ldr	q0, [sp, #96]
   2c374:	stp	x27, x28, [sp, #80]
   2c378:	mov	x23, x25
   2c37c:	mov	x27, x24
   2c380:	str	x19, [sp, #128]
   2c384:	str	x22, [sp, #144]
   2c388:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c38c:	cbnz	w0, 2c760 <ctanhf128@@GLIBC_2.27+0x440>
   2c390:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c394:	add	x0, x0, #0x300
   2c398:	stp	x19, x20, [sp, #96]
   2c39c:	ldr	q1, [x0]
   2c3a0:	ldr	q0, [sp, #96]
   2c3a4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2c3a8:	cmp	w0, #0x0
   2c3ac:	b.gt	2c760 <ctanhf128@@GLIBC_2.27+0x440>
   2c3b0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c3b4:	add	x0, x0, #0x300
   2c3b8:	and	x26, x24, #0x7fffffffffffffff
   2c3bc:	stp	x25, x26, [sp, #96]
   2c3c0:	ldr	q1, [x0]
   2c3c4:	ldr	q0, [sp, #96]
   2c3c8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c3cc:	cbnz	w0, 2c820 <ctanhf128@@GLIBC_2.27+0x500>
   2c3d0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c3d4:	add	x0, x0, #0x300
   2c3d8:	stp	x25, x26, [sp, #96]
   2c3dc:	ldr	q1, [x0]
   2c3e0:	ldr	q0, [sp, #96]
   2c3e4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2c3e8:	cmp	w0, #0x0
   2c3ec:	b.gt	2c820 <ctanhf128@@GLIBC_2.27+0x500>
   2c3f0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2c3f4:	add	x0, x0, #0x120
   2c3f8:	mov	x28, x19
   2c3fc:	ldr	q1, [x0]
   2c400:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c404:	add	x0, x0, #0xea0
   2c408:	ldr	q0, [x0]
   2c40c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c410:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c414:	add	x0, x0, #0x330
   2c418:	ldr	q1, [x0]
   2c41c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c420:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   2c424:	mov	w24, w0
   2c428:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c42c:	add	x0, x0, #0xeb0
   2c430:	stp	x25, x26, [sp, #96]
   2c434:	ldr	q1, [x0]
   2c438:	ldr	q0, [sp, #96]
   2c43c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2c440:	cmp	w0, #0x0
   2c444:	b.le	2c8d8 <ctanhf128@@GLIBC_2.27+0x5b8>
   2c448:	stp	x25, x27, [sp, #96]
   2c44c:	add	x1, sp, #0xb0
   2c450:	add	x0, sp, #0xa0
   2c454:	ldr	q0, [sp, #96]
   2c458:	bl	24048 <sincosf128@@GLIBC_2.27>
   2c45c:	mov	w0, w24
   2c460:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2c464:	stp	x19, x20, [sp, #96]
   2c468:	mov	v2.16b, v0.16b
   2c46c:	mov	v1.16b, v0.16b
   2c470:	ldr	q0, [sp, #96]
   2c474:	str	q2, [sp, #96]
   2c478:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2c47c:	cmp	w0, #0x0
   2c480:	ldr	q2, [sp, #96]
   2c484:	b.gt	2c634 <ctanhf128@@GLIBC_2.27+0x314>
   2c488:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c48c:	add	x0, x0, #0xeb0
   2c490:	stp	x19, x20, [sp, #96]
   2c494:	mov	x26, x19
   2c498:	mov	x25, x22
   2c49c:	ldr	q1, [x0]
   2c4a0:	ldr	q0, [sp, #96]
   2c4a4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2c4a8:	cmp	w0, #0x0
   2c4ac:	b.gt	2c6e0 <ctanhf128@@GLIBC_2.27+0x3c0>
   2c4b0:	ldp	x24, x23, [sp, #176]
   2c4b4:	stp	x24, x23, [sp, #96]
   2c4b8:	stp	x24, x23, [sp, #112]
   2c4bc:	ldr	q1, [sp, #96]
   2c4c0:	ldr	q0, [sp, #112]
   2c4c4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c4c8:	str	q0, [sp, #112]
   2c4cc:	and	x0, x23, #0x7fffffffffffffff
   2c4d0:	stp	x24, x0, [sp, #96]
   2c4d4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2c4d8:	add	x0, x0, #0x180
   2c4dc:	ldr	q0, [sp, #96]
   2c4e0:	ldr	q1, [x0]
   2c4e4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c4e8:	stp	x28, x20, [sp, #96]
   2c4ec:	mov	v1.16b, v0.16b
   2c4f0:	ldr	q0, [sp, #96]
   2c4f4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2c4f8:	cmp	w0, #0x0
   2c4fc:	ldr	q2, [sp, #112]
   2c500:	b.gt	2c604 <ctanhf128@@GLIBC_2.27+0x2e4>
   2c504:	stp	x26, x25, [sp, #96]
   2c508:	mov	v1.16b, v2.16b
   2c50c:	ldr	q0, [sp, #96]
   2c510:	str	q2, [sp, #128]
   2c514:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2c518:	stp	x24, x23, [sp, #96]
   2c51c:	ldr	q1, [sp, #160]
   2c520:	str	q0, [sp, #112]
   2c524:	ldr	q0, [sp, #96]
   2c528:	ldr	x26, [sp, #112]
   2c52c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c530:	ldr	q2, [sp, #128]
   2c534:	mov	x19, x26
   2c538:	mov	v1.16b, v2.16b
   2c53c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2c540:	str	q0, [sp, #96]
   2c544:	ldp	x27, x20, [sp, #96]
   2c548:	ldr	x23, [sp, #120]
   2c54c:	mov	x22, x23
   2c550:	mov	x25, x27
   2c554:	mov	x24, x20
   2c558:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c55c:	add	x0, x0, #0xeb0
   2c560:	ldr	q1, [x0]
   2c564:	and	x0, x23, #0x7fffffffffffffff
   2c568:	stp	x26, x0, [sp, #96]
   2c56c:	ldr	q0, [sp, #96]
   2c570:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c574:	tbz	w0, #31, 2c58c <ctanhf128@@GLIBC_2.27+0x26c>
   2c578:	stp	x26, x23, [sp, #96]
   2c57c:	stp	x26, x23, [sp, #112]
   2c580:	ldr	q1, [sp, #96]
   2c584:	ldr	q0, [sp, #112]
   2c588:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c58c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c590:	add	x0, x0, #0xeb0
   2c594:	ldr	q1, [x0]
   2c598:	and	x0, x20, #0x7fffffffffffffff
   2c59c:	stp	x27, x0, [sp, #96]
   2c5a0:	ldr	q0, [sp, #96]
   2c5a4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c5a8:	tbnz	w0, #31, 2c5ec <ctanhf128@@GLIBC_2.27+0x2cc>
   2c5ac:	ldr	x21, [x21, #4032]
   2c5b0:	ldr	x1, [sp, #200]
   2c5b4:	ldr	x0, [x21]
   2c5b8:	eor	x0, x1, x0
   2c5bc:	cbnz	x0, 2c96c <ctanhf128@@GLIBC_2.27+0x64c>
   2c5c0:	stp	x19, x22, [sp, #96]
   2c5c4:	stp	x25, x24, [sp, #112]
   2c5c8:	ldr	q0, [sp, #96]
   2c5cc:	ldp	x19, x20, [sp, #16]
   2c5d0:	ldp	x21, x22, [sp, #32]
   2c5d4:	ldp	x23, x24, [sp, #48]
   2c5d8:	ldp	x25, x26, [sp, #64]
   2c5dc:	ldp	x27, x28, [sp, #80]
   2c5e0:	ldr	q1, [sp, #112]
   2c5e4:	ldp	x29, x30, [sp], #208
   2c5e8:	ret
   2c5ec:	stp	x27, x20, [sp, #96]
   2c5f0:	stp	x27, x20, [sp, #112]
   2c5f4:	ldr	q1, [sp, #96]
   2c5f8:	ldr	q0, [sp, #112]
   2c5fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c600:	b	2c5ac <ctanhf128@@GLIBC_2.27+0x28c>
   2c604:	stp	x19, x22, [sp, #96]
   2c608:	stp	x19, x22, [sp, #112]
   2c60c:	ldr	q1, [sp, #96]
   2c610:	ldr	q0, [sp, #112]
   2c614:	str	q2, [sp, #128]
   2c618:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c61c:	mov	v1.16b, v0.16b
   2c620:	ldr	q2, [sp, #128]
   2c624:	mov	v0.16b, v2.16b
   2c628:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2c62c:	mov	v2.16b, v0.16b
   2c630:	b	2c504 <ctanhf128@@GLIBC_2.27+0x1e4>
   2c634:	lsl	w0, w24, #1
   2c638:	str	q2, [sp, #128]
   2c63c:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2c640:	mov	x23, #0x3fff000000000000    	// #4611404543450677248
   2c644:	mov	x26, #0x0                   	// #0
   2c648:	bl	141f0 <__expl_finite@GLIBC_2.17>
   2c64c:	stp	x19, x20, [sp, #96]
   2c650:	cmp	x22, #0x0
   2c654:	str	q0, [sp, #112]
   2c658:	mov	x0, #0xbfff000000000000    	// #-4611967493404098560
   2c65c:	ldr	q0, [sp, #96]
   2c660:	csel	x23, x23, x0, ge  // ge = tcont
   2c664:	ldr	q2, [sp, #128]
   2c668:	mov	v1.16b, v2.16b
   2c66c:	str	q2, [sp, #144]
   2c670:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2c674:	mov	v4.16b, v0.16b
   2c678:	adrp	x0, 60000 <f64xsubf128@@GLIBC_2.28+0xc280>
   2c67c:	add	x0, x0, #0x5a0
   2c680:	ldr	q0, [sp, #160]
   2c684:	str	q4, [sp, #96]
   2c688:	ldr	q1, [x0]
   2c68c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c690:	ldr	q1, [sp, #176]
   2c694:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c698:	ldr	q1, [sp, #112]
   2c69c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2c6a0:	str	q0, [sp, #128]
   2c6a4:	ldr	q1, [sp, #96]
   2c6a8:	ldr	q2, [sp, #144]
   2c6ac:	mov	v0.16b, v2.16b
   2c6b0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c6b4:	tbz	w0, #31, 2c728 <ctanhf128@@GLIBC_2.27+0x408>
   2c6b8:	ldr	q1, [sp, #112]
   2c6bc:	mov	x22, x23
   2c6c0:	ldr	q0, [sp, #128]
   2c6c4:	mov	x19, #0x0                   	// #0
   2c6c8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2c6cc:	str	q0, [sp, #96]
   2c6d0:	ldp	x27, x20, [sp, #96]
   2c6d4:	mov	x25, x27
   2c6d8:	mov	x24, x20
   2c6dc:	b	2c558 <ctanhf128@@GLIBC_2.27+0x238>
   2c6e0:	stp	x19, x22, [sp, #96]
   2c6e4:	ldr	q0, [sp, #96]
   2c6e8:	bl	1e700 <__sinhl_finite@GLIBC_2.17>
   2c6ec:	stp	x19, x22, [sp, #96]
   2c6f0:	str	q0, [sp, #112]
   2c6f4:	ldr	q0, [sp, #96]
   2c6f8:	ldr	x28, [sp, #112]
   2c6fc:	ldr	x22, [sp, #120]
   2c700:	bl	14000 <__coshl_finite@GLIBC_2.17>
   2c704:	stp	x28, x22, [sp, #96]
   2c708:	mov	v1.16b, v0.16b
   2c70c:	mov	x19, x28
   2c710:	ldr	q0, [sp, #96]
   2c714:	and	x20, x22, #0x7fffffffffffffff
   2c718:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c71c:	str	q0, [sp, #96]
   2c720:	ldp	x26, x25, [sp, #96]
   2c724:	b	2c4b0 <ctanhf128@@GLIBC_2.27+0x190>
   2c728:	ldr	q1, [sp, #96]
   2c72c:	mov	x22, x23
   2c730:	mov	x19, #0x0                   	// #0
   2c734:	mov	v0.16b, v1.16b
   2c738:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2c73c:	bl	141f0 <__expl_finite@GLIBC_2.17>
   2c740:	mov	v1.16b, v0.16b
   2c744:	ldr	q0, [sp, #128]
   2c748:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2c74c:	str	q0, [sp, #96]
   2c750:	ldp	x27, x20, [sp, #96]
   2c754:	mov	x25, x27
   2c758:	mov	x24, x20
   2c75c:	b	2c558 <ctanhf128@@GLIBC_2.27+0x238>
   2c760:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c764:	add	x0, x0, #0x300
   2c768:	stp	x19, x20, [sp, #96]
   2c76c:	ldr	q1, [x0]
   2c770:	ldr	q0, [sp, #96]
   2c774:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c778:	cbnz	w0, 2c85c <ctanhf128@@GLIBC_2.27+0x53c>
   2c77c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c780:	add	x0, x0, #0x300
   2c784:	stp	x19, x20, [sp, #96]
   2c788:	ldr	q1, [x0]
   2c78c:	ldr	q0, [sp, #96]
   2c790:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c794:	cmp	w0, #0x0
   2c798:	b.le	2c85c <ctanhf128@@GLIBC_2.27+0x53c>
   2c79c:	mov	x19, #0x0                   	// #0
   2c7a0:	mov	x20, #0x3fff000000000000    	// #4611404543450677248
   2c7a4:	tbz	x22, #63, 2c7ac <ctanhf128@@GLIBC_2.27+0x48c>
   2c7a8:	mov	x20, #0xbfff000000000000    	// #-4611967493404098560
   2c7ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c7b0:	add	x0, x0, #0x300
   2c7b4:	and	x22, x27, #0x7fffffffffffffff
   2c7b8:	stp	x23, x22, [sp, #96]
   2c7bc:	ldr	q1, [x0]
   2c7c0:	ldr	q0, [sp, #96]
   2c7c4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c7c8:	cbnz	w0, 2c80c <ctanhf128@@GLIBC_2.27+0x4ec>
   2c7cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c7d0:	add	x0, x0, #0x300
   2c7d4:	stp	x23, x22, [sp, #96]
   2c7d8:	ldr	q1, [x0]
   2c7dc:	ldr	q0, [sp, #96]
   2c7e0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2c7e4:	cmp	w0, #0x0
   2c7e8:	b.gt	2c80c <ctanhf128@@GLIBC_2.27+0x4ec>
   2c7ec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c7f0:	add	x0, x0, #0x2f0
   2c7f4:	stp	x23, x22, [sp, #96]
   2c7f8:	ldr	q1, [x0]
   2c7fc:	ldr	q0, [sp, #96]
   2c800:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2c804:	cmp	w0, #0x0
   2c808:	b.gt	2c918 <ctanhf128@@GLIBC_2.27+0x5f8>
   2c80c:	mov	x25, #0x0                   	// #0
   2c810:	mov	x24, #0x0                   	// #0
   2c814:	tbnz	x27, #63, 2c94c <ctanhf128@@GLIBC_2.27+0x62c>
   2c818:	mov	x22, x20
   2c81c:	b	2c5ac <ctanhf128@@GLIBC_2.27+0x28c>
   2c820:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c824:	add	x0, x0, #0x300
   2c828:	stp	x19, x20, [sp, #96]
   2c82c:	ldr	q1, [x0]
   2c830:	ldr	q0, [sp, #96]
   2c834:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c838:	cbnz	w0, 2c85c <ctanhf128@@GLIBC_2.27+0x53c>
   2c83c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c840:	add	x0, x0, #0x300
   2c844:	stp	x19, x20, [sp, #96]
   2c848:	ldr	q1, [x0]
   2c84c:	ldr	q0, [sp, #96]
   2c850:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c854:	cmp	w0, #0x0
   2c858:	b.gt	2c904 <ctanhf128@@GLIBC_2.27+0x5e4>
   2c85c:	movi	v1.2d, #0x0
   2c860:	stp	x23, x27, [sp, #96]
   2c864:	ldr	q0, [sp, #96]
   2c868:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2c86c:	cbz	w0, 2c8f8 <ctanhf128@@GLIBC_2.27+0x5d8>
   2c870:	movi	v1.2d, #0x0
   2c874:	stp	x19, x22, [sp, #96]
   2c878:	ldr	q0, [sp, #96]
   2c87c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2c880:	cbnz	w0, 2c958 <ctanhf128@@GLIBC_2.27+0x638>
   2c884:	mov	x25, #0x0                   	// #0
   2c888:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2c88c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c890:	add	x0, x0, #0x300
   2c894:	and	x27, x27, #0x7fffffffffffffff
   2c898:	stp	x23, x27, [sp, #96]
   2c89c:	ldr	q1, [x0]
   2c8a0:	ldr	q0, [sp, #96]
   2c8a4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c8a8:	cbnz	w0, 2c5ac <ctanhf128@@GLIBC_2.27+0x28c>
   2c8ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c8b0:	add	x0, x0, #0x300
   2c8b4:	stp	x23, x27, [sp, #96]
   2c8b8:	ldr	q1, [x0]
   2c8bc:	ldr	q0, [sp, #96]
   2c8c0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2c8c4:	cmp	w0, #0x0
   2c8c8:	b.le	2c5ac <ctanhf128@@GLIBC_2.27+0x28c>
   2c8cc:	mov	w0, #0x1                   	// #1
   2c8d0:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   2c8d4:	b	2c5ac <ctanhf128@@GLIBC_2.27+0x28c>
   2c8d8:	adrp	x2, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c8dc:	add	x2, x2, #0x2f0
   2c8e0:	fmov	d0, x25
   2c8e4:	ldr	q2, [x2]
   2c8e8:	fmov	v0.d[1], x27
   2c8ec:	str	q0, [sp, #160]
   2c8f0:	str	q2, [sp, #176]
   2c8f4:	b	2c45c <ctanhf128@@GLIBC_2.27+0x13c>
   2c8f8:	ldr	x19, [sp, #128]
   2c8fc:	ldr	x22, [sp, #144]
   2c900:	b	2c5ac <ctanhf128@@GLIBC_2.27+0x28c>
   2c904:	mov	x19, #0x0                   	// #0
   2c908:	mov	x20, #0x3fff000000000000    	// #4611404543450677248
   2c90c:	tbz	x22, #63, 2c80c <ctanhf128@@GLIBC_2.27+0x4ec>
   2c910:	mov	x20, #0xbfff000000000000    	// #-4611967493404098560
   2c914:	b	2c80c <ctanhf128@@GLIBC_2.27+0x4ec>
   2c918:	stp	x23, x27, [sp, #96]
   2c91c:	add	x0, sp, #0xa0
   2c920:	add	x1, sp, #0xb0
   2c924:	ldr	q0, [sp, #96]
   2c928:	mov	x25, #0x0                   	// #0
   2c92c:	mov	x24, #0x0                   	// #0
   2c930:	bl	24048 <sincosf128@@GLIBC_2.27>
   2c934:	ldr	q0, [sp, #160]
   2c938:	ldr	q1, [sp, #176]
   2c93c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2c940:	str	q0, [sp, #96]
   2c944:	ldr	x0, [sp, #104]
   2c948:	tbz	x0, #63, 2c818 <ctanhf128@@GLIBC_2.27+0x4f8>
   2c94c:	mov	x22, x20
   2c950:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
   2c954:	b	2c5ac <ctanhf128@@GLIBC_2.27+0x28c>
   2c958:	mov	x22, #0x7fff800000000000    	// #9223231299366420480
   2c95c:	mov	x19, #0x0                   	// #0
   2c960:	mov	x24, x22
   2c964:	mov	x25, #0x0                   	// #0
   2c968:	b	2c88c <ctanhf128@@GLIBC_2.27+0x56c>
   2c96c:	bl	ba70 <__stack_chk_fail@plt>

000000000002c970 <cexpf128@@GLIBC_2.27>:
   2c970:	stp	x29, x30, [sp, #-224]!
   2c974:	mov	x29, sp
   2c978:	stp	x19, x20, [sp, #16]
   2c97c:	stp	x23, x24, [sp, #48]
   2c980:	stp	x25, x26, [sp, #64]
   2c984:	adrp	x25, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2c988:	str	q0, [sp, #96]
   2c98c:	ldp	x19, x23, [sp, #96]
   2c990:	str	q1, [sp, #128]
   2c994:	ldr	x0, [x25, #4032]
   2c998:	stp	x21, x22, [sp, #32]
   2c99c:	ldr	x1, [x0]
   2c9a0:	str	x1, [sp, #216]
   2c9a4:	mov	x1, #0x0                   	// #0
   2c9a8:	str	x27, [sp, #80]
   2c9ac:	ldp	x0, x24, [sp, #128]
   2c9b0:	and	x21, x23, #0x7fffffffffffffff
   2c9b4:	stp	x21, x19, [sp, #104]
   2c9b8:	str	x21, [sp, #120]
   2c9bc:	ldr	q1, [sp, #96]
   2c9c0:	ldr	q0, [sp, #112]
   2c9c4:	mov	x22, x0
   2c9c8:	and	x20, x24, #0x7fffffffffffffff
   2c9cc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c9d0:	cbnz	w0, 2ce1c <cexpf128@@GLIBC_2.27+0x4ac>
   2c9d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c9d8:	add	x0, x0, #0x300
   2c9dc:	stp	x19, x21, [sp, #96]
   2c9e0:	ldr	q1, [x0]
   2c9e4:	ldr	q0, [sp, #96]
   2c9e8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2c9ec:	cbnz	w0, 2cb20 <cexpf128@@GLIBC_2.27+0x1b0>
   2c9f0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2c9f4:	add	x0, x0, #0x300
   2c9f8:	stp	x19, x21, [sp, #96]
   2c9fc:	ldr	q1, [x0]
   2ca00:	ldr	q0, [sp, #96]
   2ca04:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ca08:	cmp	w0, #0x0
   2ca0c:	b.le	2cb20 <cexpf128@@GLIBC_2.27+0x1b0>
   2ca10:	stp	x22, x20, [sp, #96]
   2ca14:	stp	x22, x20, [sp, #112]
   2ca18:	ldr	q1, [sp, #96]
   2ca1c:	ldr	q0, [sp, #112]
   2ca20:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ca24:	cbnz	w0, 2cee4 <cexpf128@@GLIBC_2.27+0x574>
   2ca28:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ca2c:	add	x0, x0, #0x300
   2ca30:	stp	x22, x20, [sp, #96]
   2ca34:	ldr	q1, [x0]
   2ca38:	ldr	q0, [sp, #96]
   2ca3c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ca40:	cbnz	w0, 2ca64 <cexpf128@@GLIBC_2.27+0xf4>
   2ca44:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ca48:	add	x0, x0, #0x300
   2ca4c:	stp	x22, x20, [sp, #96]
   2ca50:	ldr	q1, [x0]
   2ca54:	ldr	q0, [sp, #96]
   2ca58:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ca5c:	cmp	w0, #0x0
   2ca60:	b.gt	2cee4 <cexpf128@@GLIBC_2.27+0x574>
   2ca64:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ca68:	add	x0, x0, #0xeb0
   2ca6c:	stp	x22, x20, [sp, #96]
   2ca70:	ldr	q1, [x0]
   2ca74:	ldr	q0, [sp, #96]
   2ca78:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2ca7c:	tbnz	w0, #31, 2cdf0 <cexpf128@@GLIBC_2.27+0x480>
   2ca80:	cmp	x23, #0x0
   2ca84:	mov	x19, #0x7fff000000000000    	// #9223090561878065152
   2ca88:	csel	x19, x19, xzr, ge  // ge = tcont
   2ca8c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ca90:	add	x0, x0, #0xeb0
   2ca94:	stp	x22, x20, [sp, #96]
   2ca98:	ldr	q1, [x0]
   2ca9c:	ldr	q0, [sp, #96]
   2caa0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2caa4:	cmp	w0, #0x0
   2caa8:	b.le	2cedc <cexpf128@@GLIBC_2.27+0x56c>
   2caac:	stp	x22, x24, [sp, #96]
   2cab0:	add	x1, sp, #0xc0
   2cab4:	add	x0, sp, #0xb0
   2cab8:	ldr	q0, [sp, #96]
   2cabc:	bl	24048 <sincosf128@@GLIBC_2.27>
   2cac0:	ldr	x24, [sp, #184]
   2cac4:	ldr	x26, [sp, #200]
   2cac8:	and	x26, x26, #0x8000000000000000
   2cacc:	and	x24, x24, #0x8000000000000000
   2cad0:	orr	x26, x19, x26
   2cad4:	orr	x24, x19, x24
   2cad8:	mov	x27, #0x0                   	// #0
   2cadc:	mov	x22, #0x0                   	// #0
   2cae0:	ldr	x0, [x25, #4032]
   2cae4:	ldr	x1, [sp, #216]
   2cae8:	ldr	x0, [x0]
   2caec:	eor	x0, x1, x0
   2caf0:	cbnz	x0, 2cf3c <cexpf128@@GLIBC_2.27+0x5cc>
   2caf4:	stp	x27, x26, [sp, #96]
   2caf8:	stp	x22, x24, [sp, #112]
   2cafc:	ldr	q0, [sp, #96]
   2cb00:	ldp	x19, x20, [sp, #16]
   2cb04:	ldp	x21, x22, [sp, #32]
   2cb08:	ldp	x23, x24, [sp, #48]
   2cb0c:	ldp	x25, x26, [sp, #64]
   2cb10:	ldr	x27, [sp, #80]
   2cb14:	ldr	q1, [sp, #112]
   2cb18:	ldp	x29, x30, [sp], #224
   2cb1c:	ret
   2cb20:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cb24:	add	x0, x0, #0xeb0
   2cb28:	stp	x19, x21, [sp, #96]
   2cb2c:	ldr	q1, [x0]
   2cb30:	ldr	q0, [sp, #96]
   2cb34:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2cb38:	tbz	w0, #31, 2cb40 <cexpf128@@GLIBC_2.27+0x1d0>
   2cb3c:	stp	x19, x23, [sp, #96]
   2cb40:	stp	x22, x20, [sp, #96]
   2cb44:	stp	x22, x20, [sp, #112]
   2cb48:	ldr	q1, [sp, #96]
   2cb4c:	ldr	q0, [sp, #112]
   2cb50:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2cb54:	cbnz	w0, 2cb94 <cexpf128@@GLIBC_2.27+0x224>
   2cb58:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cb5c:	add	x0, x0, #0x300
   2cb60:	stp	x22, x20, [sp, #96]
   2cb64:	ldr	q1, [x0]
   2cb68:	ldr	q0, [sp, #96]
   2cb6c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2cb70:	cbnz	w0, 2cbb0 <cexpf128@@GLIBC_2.27+0x240>
   2cb74:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cb78:	add	x0, x0, #0x300
   2cb7c:	stp	x22, x20, [sp, #96]
   2cb80:	ldr	q1, [x0]
   2cb84:	ldr	q0, [sp, #96]
   2cb88:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2cb8c:	cmp	w0, #0x0
   2cb90:	b.le	2cbb0 <cexpf128@@GLIBC_2.27+0x240>
   2cb94:	mov	w0, #0x1                   	// #1
   2cb98:	mov	x26, #0x7fff800000000000    	// #9223231299366420480
   2cb9c:	mov	x27, #0x0                   	// #0
   2cba0:	mov	x24, x26
   2cba4:	mov	x22, #0x0                   	// #0
   2cba8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   2cbac:	b	2cae0 <cexpf128@@GLIBC_2.27+0x170>
   2cbb0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2cbb4:	add	x0, x0, #0x120
   2cbb8:	ldr	q1, [x0]
   2cbbc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cbc0:	add	x0, x0, #0xea0
   2cbc4:	ldr	q0, [x0]
   2cbc8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2cbcc:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   2cbd0:	mov	w21, w0
   2cbd4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cbd8:	add	x0, x0, #0xeb0
   2cbdc:	stp	x22, x20, [sp, #96]
   2cbe0:	ldr	q1, [x0]
   2cbe4:	ldr	q0, [sp, #96]
   2cbe8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2cbec:	cmp	w0, #0x0
   2cbf0:	b.le	2ceac <cexpf128@@GLIBC_2.27+0x53c>
   2cbf4:	stp	x22, x24, [sp, #96]
   2cbf8:	add	x1, sp, #0xc0
   2cbfc:	add	x0, sp, #0xb0
   2cc00:	ldr	q0, [sp, #96]
   2cc04:	bl	24048 <sincosf128@@GLIBC_2.27>
   2cc08:	mov	w0, w21
   2cc0c:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2cc10:	stp	x19, x23, [sp, #96]
   2cc14:	mov	v2.16b, v0.16b
   2cc18:	mov	v1.16b, v0.16b
   2cc1c:	ldr	q0, [sp, #96]
   2cc20:	str	q2, [sp, #96]
   2cc24:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2cc28:	cmp	w0, #0x0
   2cc2c:	ldr	q2, [sp, #96]
   2cc30:	b.gt	2cd2c <cexpf128@@GLIBC_2.27+0x3bc>
   2cc34:	stp	x19, x23, [sp, #96]
   2cc38:	mov	v0.16b, v2.16b
   2cc3c:	ldr	q1, [sp, #96]
   2cc40:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2cc44:	tbz	w0, #31, 2ccfc <cexpf128@@GLIBC_2.27+0x38c>
   2cc48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cc4c:	add	x0, x0, #0x300
   2cc50:	ldr	q0, [sp, #192]
   2cc54:	ldr	q1, [x0]
   2cc58:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2cc5c:	str	q0, [sp, #96]
   2cc60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cc64:	add	x0, x0, #0x300
   2cc68:	ldp	x23, x21, [sp, #96]
   2cc6c:	ldr	q1, [x0]
   2cc70:	ldr	q0, [sp, #176]
   2cc74:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2cc78:	str	q0, [sp, #96]
   2cc7c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cc80:	add	x0, x0, #0xeb0
   2cc84:	ldp	x20, x19, [sp, #96]
   2cc88:	mov	x27, x23
   2cc8c:	ldr	q1, [x0]
   2cc90:	and	x0, x21, #0x7fffffffffffffff
   2cc94:	stp	x23, x0, [sp, #96]
   2cc98:	mov	x26, x21
   2cc9c:	ldr	q0, [sp, #96]
   2cca0:	mov	x22, x20
   2cca4:	mov	x24, x19
   2cca8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ccac:	tbz	w0, #31, 2ccc4 <cexpf128@@GLIBC_2.27+0x354>
   2ccb0:	stp	x23, x21, [sp, #96]
   2ccb4:	stp	x23, x21, [sp, #112]
   2ccb8:	ldr	q1, [sp, #96]
   2ccbc:	ldr	q0, [sp, #112]
   2ccc0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2ccc4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ccc8:	add	x0, x0, #0xeb0
   2cccc:	ldr	q1, [x0]
   2ccd0:	and	x0, x19, #0x7fffffffffffffff
   2ccd4:	stp	x20, x0, [sp, #96]
   2ccd8:	ldr	q0, [sp, #96]
   2ccdc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2cce0:	tbz	w0, #31, 2cae0 <cexpf128@@GLIBC_2.27+0x170>
   2cce4:	stp	x20, x19, [sp, #96]
   2cce8:	stp	x20, x19, [sp, #112]
   2ccec:	ldr	q1, [sp, #96]
   2ccf0:	ldr	q0, [sp, #112]
   2ccf4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2ccf8:	b	2cae0 <cexpf128@@GLIBC_2.27+0x170>
   2ccfc:	stp	x19, x23, [sp, #96]
   2cd00:	ldr	q0, [sp, #96]
   2cd04:	bl	141f0 <__expl_finite@GLIBC_2.17>
   2cd08:	str	q0, [sp, #112]
   2cd0c:	ldr	q1, [sp, #192]
   2cd10:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2cd14:	str	q0, [sp, #96]
   2cd18:	ldr	q2, [sp, #112]
   2cd1c:	ldp	x23, x21, [sp, #96]
   2cd20:	mov	v0.16b, v2.16b
   2cd24:	ldr	q1, [sp, #176]
   2cd28:	b	2cc74 <cexpf128@@GLIBC_2.27+0x304>
   2cd2c:	mov	v0.16b, v2.16b
   2cd30:	str	q2, [sp, #128]
   2cd34:	bl	141f0 <__expl_finite@GLIBC_2.17>
   2cd38:	stp	x19, x23, [sp, #96]
   2cd3c:	ldr	q2, [sp, #128]
   2cd40:	str	q0, [sp, #112]
   2cd44:	ldr	q0, [sp, #96]
   2cd48:	mov	v1.16b, v2.16b
   2cd4c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2cd50:	str	q0, [sp, #96]
   2cd54:	ldr	q0, [sp, #112]
   2cd58:	ldr	q1, [sp, #176]
   2cd5c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2cd60:	mov	v2.16b, v0.16b
   2cd64:	ldr	q0, [sp, #112]
   2cd68:	ldr	q1, [sp, #192]
   2cd6c:	str	q2, [sp, #144]
   2cd70:	str	q2, [sp, #176]
   2cd74:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2cd78:	mov	v3.16b, v0.16b
   2cd7c:	ldp	x19, x23, [sp, #96]
   2cd80:	stp	x19, x23, [sp, #96]
   2cd84:	ldr	q2, [sp, #128]
   2cd88:	ldr	q1, [sp, #96]
   2cd8c:	str	q3, [sp, #128]
   2cd90:	mov	v0.16b, v2.16b
   2cd94:	str	q2, [sp, #96]
   2cd98:	str	q3, [sp, #192]
   2cd9c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2cda0:	ldr	q2, [sp, #96]
   2cda4:	tbz	w0, #31, 2cc34 <cexpf128@@GLIBC_2.27+0x2c4>
   2cda8:	stp	x19, x23, [sp, #96]
   2cdac:	mov	v1.16b, v2.16b
   2cdb0:	ldr	q0, [sp, #96]
   2cdb4:	str	q2, [sp, #160]
   2cdb8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2cdbc:	str	q0, [sp, #96]
   2cdc0:	ldr	q1, [sp, #112]
   2cdc4:	ldr	q0, [sp, #144]
   2cdc8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2cdcc:	mov	v4.16b, v0.16b
   2cdd0:	ldr	q1, [sp, #112]
   2cdd4:	ldr	q0, [sp, #128]
   2cdd8:	str	q4, [sp, #176]
   2cddc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2cde0:	str	q0, [sp, #192]
   2cde4:	ldp	x19, x23, [sp, #96]
   2cde8:	ldr	q2, [sp, #160]
   2cdec:	b	2cc34 <cexpf128@@GLIBC_2.27+0x2c4>
   2cdf0:	movi	v1.2d, #0x0
   2cdf4:	stp	x22, x24, [sp, #96]
   2cdf8:	ldr	q0, [sp, #96]
   2cdfc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2ce00:	cbnz	w0, 2cecc <cexpf128@@GLIBC_2.27+0x55c>
   2ce04:	mov	x27, #0x0                   	// #0
   2ce08:	mov	x26, #0x0                   	// #0
   2ce0c:	tbnz	x23, #63, 2cae0 <cexpf128@@GLIBC_2.27+0x170>
   2ce10:	mov	x27, #0x0                   	// #0
   2ce14:	mov	x26, #0x7fff000000000000    	// #9223090561878065152
   2ce18:	b	2cae0 <cexpf128@@GLIBC_2.27+0x170>
   2ce1c:	stp	x22, x20, [sp, #96]
   2ce20:	stp	x22, x20, [sp, #112]
   2ce24:	ldr	q1, [sp, #96]
   2ce28:	ldr	q0, [sp, #112]
   2ce2c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ce30:	cbnz	w0, 2cf28 <cexpf128@@GLIBC_2.27+0x5b8>
   2ce34:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ce38:	add	x0, x0, #0x300
   2ce3c:	stp	x22, x20, [sp, #96]
   2ce40:	ldr	q1, [x0]
   2ce44:	ldr	q0, [sp, #96]
   2ce48:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ce4c:	cbnz	w0, 2ce70 <cexpf128@@GLIBC_2.27+0x500>
   2ce50:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ce54:	add	x0, x0, #0x300
   2ce58:	stp	x22, x20, [sp, #96]
   2ce5c:	ldr	q1, [x0]
   2ce60:	ldr	q0, [sp, #96]
   2ce64:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ce68:	cmp	w0, #0x0
   2ce6c:	b.gt	2cb94 <cexpf128@@GLIBC_2.27+0x224>
   2ce70:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ce74:	add	x0, x0, #0xeb0
   2ce78:	stp	x22, x20, [sp, #96]
   2ce7c:	ldr	q1, [x0]
   2ce80:	ldr	q0, [sp, #96]
   2ce84:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2ce88:	tbz	w0, #31, 2cb94 <cexpf128@@GLIBC_2.27+0x224>
   2ce8c:	movi	v1.2d, #0x0
   2ce90:	stp	x22, x24, [sp, #96]
   2ce94:	ldr	q0, [sp, #96]
   2ce98:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2ce9c:	cbnz	w0, 2cb94 <cexpf128@@GLIBC_2.27+0x224>
   2cea0:	mov	x27, #0x0                   	// #0
   2cea4:	mov	x26, #0x7fff800000000000    	// #9223231299366420480
   2cea8:	b	2cae0 <cexpf128@@GLIBC_2.27+0x170>
   2ceac:	adrp	x2, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ceb0:	add	x2, x2, #0x2f0
   2ceb4:	fmov	d0, x22
   2ceb8:	ldr	q2, [x2]
   2cebc:	fmov	v0.d[1], x24
   2cec0:	str	q0, [sp, #176]
   2cec4:	str	q2, [sp, #192]
   2cec8:	b	2cc08 <cexpf128@@GLIBC_2.27+0x298>
   2cecc:	cmp	x23, #0x0
   2ced0:	mov	x19, #0x7fff000000000000    	// #9223090561878065152
   2ced4:	csel	x19, xzr, x19, lt  // lt = tstop
   2ced8:	b	2ca8c <cexpf128@@GLIBC_2.27+0x11c>
   2cedc:	mov	x26, #0x3fff000000000000    	// #4611404543450677248
   2cee0:	b	2cac8 <cexpf128@@GLIBC_2.27+0x158>
   2cee4:	tbnz	x23, #63, 2cf08 <cexpf128@@GLIBC_2.27+0x598>
   2cee8:	stp	x22, x24, [sp, #96]
   2ceec:	stp	x22, x24, [sp, #112]
   2cef0:	ldr	q1, [sp, #96]
   2cef4:	ldr	q0, [sp, #112]
   2cef8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2cefc:	str	q0, [sp, #96]
   2cf00:	ldp	x22, x24, [sp, #96]
   2cf04:	b	2ce10 <cexpf128@@GLIBC_2.27+0x4a0>
   2cf08:	mov	x22, #0x0                   	// #0
   2cf0c:	mov	x1, #0x0                   	// #0
   2cf10:	tbz	x24, #63, 2cf18 <cexpf128@@GLIBC_2.27+0x5a8>
   2cf14:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2cf18:	mov	x24, x1
   2cf1c:	mov	x27, #0x0                   	// #0
   2cf20:	mov	x26, #0x0                   	// #0
   2cf24:	b	2cae0 <cexpf128@@GLIBC_2.27+0x170>
   2cf28:	mov	x26, #0x7fff800000000000    	// #9223231299366420480
   2cf2c:	mov	x27, #0x0                   	// #0
   2cf30:	mov	x24, x26
   2cf34:	mov	x22, #0x0                   	// #0
   2cf38:	b	2cae0 <cexpf128@@GLIBC_2.27+0x170>
   2cf3c:	bl	ba70 <__stack_chk_fail@plt>

000000000002cf40 <clogf128@@GLIBC_2.27>:
   2cf40:	stp	x29, x30, [sp, #-144]!
   2cf44:	mov	x29, sp
   2cf48:	stp	x19, x20, [sp, #16]
   2cf4c:	stp	x25, x26, [sp, #64]
   2cf50:	str	q0, [sp, #96]
   2cf54:	ldp	x19, x25, [sp, #96]
   2cf58:	stp	x23, x24, [sp, #48]
   2cf5c:	str	q1, [sp, #128]
   2cf60:	ldp	x20, x24, [sp, #128]
   2cf64:	and	x23, x25, #0x7fffffffffffffff
   2cf68:	stp	x23, x19, [sp, #104]
   2cf6c:	str	x23, [sp, #120]
   2cf70:	ldr	q1, [sp, #96]
   2cf74:	ldr	q0, [sp, #112]
   2cf78:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2cf7c:	cbnz	w0, 2d490 <clogf128@@GLIBC_2.27+0x550>
   2cf80:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cf84:	add	x0, x0, #0x300
   2cf88:	stp	x19, x23, [sp, #96]
   2cf8c:	ldr	q1, [x0]
   2cf90:	ldr	q0, [sp, #96]
   2cf94:	stp	x21, x22, [sp, #32]
   2cf98:	mov	x22, x19
   2cf9c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2cfa0:	cbnz	w0, 2d134 <clogf128@@GLIBC_2.27+0x1f4>
   2cfa4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cfa8:	add	x0, x0, #0x300
   2cfac:	stp	x19, x23, [sp, #96]
   2cfb0:	ldr	q1, [x0]
   2cfb4:	ldr	q0, [sp, #96]
   2cfb8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2cfbc:	cmp	w0, #0x0
   2cfc0:	b.le	2d134 <clogf128@@GLIBC_2.27+0x1f4>
   2cfc4:	and	x21, x24, #0x7fffffffffffffff
   2cfc8:	stp	x20, x21, [sp, #96]
   2cfcc:	mov	x26, x20
   2cfd0:	stp	x20, x21, [sp, #112]
   2cfd4:	ldr	q1, [sp, #96]
   2cfd8:	ldr	q0, [sp, #112]
   2cfdc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2cfe0:	cbnz	w0, 2d5a0 <clogf128@@GLIBC_2.27+0x660>
   2cfe4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2cfe8:	add	x0, x0, #0x300
   2cfec:	stp	x20, x21, [sp, #96]
   2cff0:	ldr	q1, [x0]
   2cff4:	ldr	q0, [sp, #96]
   2cff8:	stp	x27, x28, [sp, #80]
   2cffc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d000:	cbnz	w0, 2d008 <clogf128@@GLIBC_2.27+0xc8>
   2d004:	stp	x20, x21, [sp, #96]
   2d008:	stp	x19, x23, [sp, #96]
   2d00c:	stp	x20, x21, [sp, #112]
   2d010:	ldr	q1, [sp, #96]
   2d014:	ldr	q0, [sp, #112]
   2d018:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d01c:	cmp	w0, #0x0
   2d020:	b.le	2d038 <clogf128@@GLIBC_2.27+0xf8>
   2d024:	mov	x0, x23
   2d028:	mov	x22, x20
   2d02c:	mov	x23, x21
   2d030:	mov	x26, x19
   2d034:	mov	x21, x0
   2d038:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2d03c:	add	x0, x0, #0xb50
   2d040:	stp	x22, x23, [sp, #96]
   2d044:	ldr	q1, [x0]
   2d048:	ldr	q0, [sp, #96]
   2d04c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d050:	str	x22, [sp, #96]
   2d054:	cmp	w0, #0x0
   2d058:	b.gt	2d18c <clogf128@@GLIBC_2.27+0x24c>
   2d05c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d060:	add	x0, x0, #0xeb0
   2d064:	str	x23, [sp, #104]
   2d068:	ldr	q1, [x0]
   2d06c:	ldr	q0, [sp, #96]
   2d070:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d074:	tbz	w0, #31, 2d094 <clogf128@@GLIBC_2.27+0x154>
   2d078:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d07c:	add	x0, x0, #0xeb0
   2d080:	stp	x26, x21, [sp, #96]
   2d084:	ldr	q1, [x0]
   2d088:	ldr	q0, [sp, #96]
   2d08c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d090:	tbnz	w0, #31, 2d348 <clogf128@@GLIBC_2.27+0x408>
   2d094:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d098:	add	x0, x0, #0x2f0
   2d09c:	stp	x22, x23, [sp, #96]
   2d0a0:	ldr	q1, [x0]
   2d0a4:	ldr	q0, [sp, #96]
   2d0a8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2d0ac:	cbnz	w0, 2d488 <clogf128@@GLIBC_2.27+0x548>
   2d0b0:	stp	x26, x21, [sp, #96]
   2d0b4:	stp	x26, x21, [sp, #112]
   2d0b8:	ldr	q1, [sp, #96]
   2d0bc:	ldr	q0, [sp, #112]
   2d0c0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d0c4:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2d0c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d0cc:	add	x0, x0, #0x330
   2d0d0:	ldr	q1, [x0]
   2d0d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d0d8:	str	q0, [sp, #128]
   2d0dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d0e0:	add	x0, x0, #0xeb0
   2d0e4:	ldr	q1, [x0]
   2d0e8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d0ec:	tbnz	w0, #31, 2d32c <clogf128@@GLIBC_2.27+0x3ec>
   2d0f0:	stp	x19, x25, [sp, #96]
   2d0f4:	stp	x20, x24, [sp, #112]
   2d0f8:	ldr	q1, [sp, #96]
   2d0fc:	ldr	q0, [sp, #112]
   2d100:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   2d104:	str	q0, [sp, #96]
   2d108:	ldp	x21, x22, [sp, #32]
   2d10c:	ldp	x27, x28, [sp, #80]
   2d110:	ldp	x0, x24, [sp, #96]
   2d114:	ldr	q0, [sp, #128]
   2d118:	stp	x0, x24, [sp, #96]
   2d11c:	ldp	x19, x20, [sp, #16]
   2d120:	ldp	x23, x24, [sp, #48]
   2d124:	ldp	x25, x26, [sp, #64]
   2d128:	ldr	q1, [sp, #96]
   2d12c:	ldp	x29, x30, [sp], #144
   2d130:	ret
   2d134:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d138:	add	x0, x0, #0xeb0
   2d13c:	stp	x19, x23, [sp, #96]
   2d140:	ldr	q1, [x0]
   2d144:	ldr	q0, [sp, #96]
   2d148:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d14c:	tbnz	w0, #31, 2d298 <clogf128@@GLIBC_2.27+0x358>
   2d150:	and	x21, x24, #0x7fffffffffffffff
   2d154:	stp	x20, x21, [sp, #96]
   2d158:	mov	x26, x20
   2d15c:	stp	x20, x21, [sp, #112]
   2d160:	ldr	q1, [sp, #96]
   2d164:	ldr	q0, [sp, #112]
   2d168:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d16c:	cbz	w0, 2cfe4 <clogf128@@GLIBC_2.27+0xa4>
   2d170:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2d174:	add	x0, x0, #0x1b0
   2d178:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2d17c:	ldp	x21, x22, [sp, #32]
   2d180:	ldr	q0, [x0]
   2d184:	mov	x0, #0x0                   	// #0
   2d188:	b	2d118 <clogf128@@GLIBC_2.27+0x1d8>
   2d18c:	str	x23, [sp, #104]
   2d190:	mov	w0, #0xffffffff            	// #-1
   2d194:	ldr	q0, [sp, #96]
   2d198:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2d19c:	stp	x26, x21, [sp, #96]
   2d1a0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2d1a4:	add	x0, x0, #0x1a0
   2d1a8:	str	q0, [sp, #112]
   2d1ac:	ldr	q0, [sp, #96]
   2d1b0:	ldp	x22, x23, [sp, #112]
   2d1b4:	ldr	q1, [x0]
   2d1b8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d1bc:	tbz	w0, #31, 2d380 <clogf128@@GLIBC_2.27+0x440>
   2d1c0:	mov	w27, #0xffffffff            	// #-1
   2d1c4:	mov	x26, #0x0                   	// #0
   2d1c8:	mov	x21, #0x0                   	// #0
   2d1cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d1d0:	add	x0, x0, #0x2f0
   2d1d4:	stp	x22, x23, [sp, #96]
   2d1d8:	ldr	q1, [x0]
   2d1dc:	ldr	q0, [sp, #96]
   2d1e0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d1e4:	cmp	w0, #0x0
   2d1e8:	b.le	2d230 <clogf128@@GLIBC_2.27+0x2f0>
   2d1ec:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2d1f0:	add	x0, x0, #0xae0
   2d1f4:	stp	x22, x23, [sp, #96]
   2d1f8:	ldr	q1, [x0]
   2d1fc:	ldr	q0, [sp, #96]
   2d200:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d204:	tbz	w0, #31, 2d230 <clogf128@@GLIBC_2.27+0x2f0>
   2d208:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d20c:	add	x0, x0, #0x2f0
   2d210:	stp	x26, x21, [sp, #96]
   2d214:	ldr	q1, [x0]
   2d218:	ldr	q0, [sp, #96]
   2d21c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d220:	cmp	w27, #0x0
   2d224:	cset	w1, eq  // eq = none
   2d228:	tst	w1, w0, lsr #31
   2d22c:	b.ne	2d5bc <clogf128@@GLIBC_2.27+0x67c>  // b.any
   2d230:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d234:	add	x0, x0, #0x2f0
   2d238:	stp	x22, x23, [sp, #96]
   2d23c:	ldr	q1, [x0]
   2d240:	ldr	q0, [sp, #96]
   2d244:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d248:	tbnz	w0, #31, 2d3a0 <clogf128@@GLIBC_2.27+0x460>
   2d24c:	stp	x26, x21, [sp, #96]
   2d250:	stp	x22, x23, [sp, #112]
   2d254:	ldr	q1, [sp, #96]
   2d258:	ldr	q0, [sp, #112]
   2d25c:	bl	14a50 <__hypotl_finite@GLIBC_2.17>
   2d260:	bl	1c928 <__logl_finite@GLIBC_2.17>
   2d264:	str	q0, [sp, #96]
   2d268:	mov	w0, w27
   2d26c:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2d270:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d274:	add	x0, x0, #0xea0
   2d278:	ldr	q1, [x0]
   2d27c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d280:	mov	v1.16b, v0.16b
   2d284:	ldr	q2, [sp, #96]
   2d288:	mov	v0.16b, v2.16b
   2d28c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2d290:	str	q0, [sp, #128]
   2d294:	b	2d0f0 <clogf128@@GLIBC_2.27+0x1b0>
   2d298:	stp	x19, x25, [sp, #96]
   2d29c:	and	x21, x24, #0x7fffffffffffffff
   2d2a0:	mov	x26, x20
   2d2a4:	movi	v1.2d, #0x0
   2d2a8:	ldr	q0, [sp, #96]
   2d2ac:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2d2b0:	stp	x20, x21, [sp, #96]
   2d2b4:	stp	x20, x21, [sp, #112]
   2d2b8:	ldr	q1, [sp, #96]
   2d2bc:	ldr	q0, [sp, #112]
   2d2c0:	cbnz	w0, 2d33c <clogf128@@GLIBC_2.27+0x3fc>
   2d2c4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d2c8:	cbnz	w0, 2d170 <clogf128@@GLIBC_2.27+0x230>
   2d2cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d2d0:	add	x0, x0, #0x300
   2d2d4:	stp	x20, x21, [sp, #96]
   2d2d8:	ldr	q1, [x0]
   2d2dc:	ldr	q0, [sp, #96]
   2d2e0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d2e4:	cbnz	w0, 2d308 <clogf128@@GLIBC_2.27+0x3c8>
   2d2e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d2ec:	add	x0, x0, #0x300
   2d2f0:	stp	x20, x21, [sp, #96]
   2d2f4:	ldr	q1, [x0]
   2d2f8:	ldr	q0, [sp, #96]
   2d2fc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d300:	cmp	w0, #0x0
   2d304:	b.gt	2d324 <clogf128@@GLIBC_2.27+0x3e4>
   2d308:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d30c:	add	x0, x0, #0xeb0
   2d310:	stp	x20, x21, [sp, #96]
   2d314:	ldr	q1, [x0]
   2d318:	ldr	q0, [sp, #96]
   2d31c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d320:	tbnz	w0, #31, 2d518 <clogf128@@GLIBC_2.27+0x5d8>
   2d324:	stp	x27, x28, [sp, #80]
   2d328:	b	2d008 <clogf128@@GLIBC_2.27+0xc8>
   2d32c:	ldr	q0, [sp, #128]
   2d330:	mov	v1.16b, v0.16b
   2d334:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d338:	b	2d0f0 <clogf128@@GLIBC_2.27+0x1b0>
   2d33c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d340:	cbz	w0, 2cfe4 <clogf128@@GLIBC_2.27+0xa4>
   2d344:	b	2d170 <clogf128@@GLIBC_2.27+0x230>
   2d348:	stp	x22, x23, [sp, #96]
   2d34c:	mov	w0, #0x71                  	// #113
   2d350:	mov	w27, w0
   2d354:	ldr	q0, [sp, #96]
   2d358:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2d35c:	stp	x26, x21, [sp, #96]
   2d360:	mov	w0, w27
   2d364:	str	q0, [sp, #112]
   2d368:	ldr	q0, [sp, #96]
   2d36c:	ldp	x22, x23, [sp, #112]
   2d370:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2d374:	str	q0, [sp, #96]
   2d378:	ldp	x26, x21, [sp, #96]
   2d37c:	b	2d1cc <clogf128@@GLIBC_2.27+0x28c>
   2d380:	stp	x26, x21, [sp, #96]
   2d384:	mov	w0, #0xffffffff            	// #-1
   2d388:	mov	w27, w0
   2d38c:	ldr	q0, [sp, #96]
   2d390:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2d394:	str	q0, [sp, #96]
   2d398:	ldp	x26, x21, [sp, #96]
   2d39c:	b	2d1cc <clogf128@@GLIBC_2.27+0x28c>
   2d3a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d3a4:	add	x0, x0, #0x330
   2d3a8:	stp	x22, x23, [sp, #96]
   2d3ac:	cmp	w27, #0x0
   2d3b0:	cset	w28, eq  // eq = none
   2d3b4:	ldr	q1, [x0]
   2d3b8:	ldr	q0, [sp, #96]
   2d3bc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d3c0:	tbnz	w0, #31, 2d3e4 <clogf128@@GLIBC_2.27+0x4a4>
   2d3c4:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   2d3c8:	add	x0, x0, #0xec0
   2d3cc:	stp	x26, x21, [sp, #96]
   2d3d0:	ldr	q1, [x0]
   2d3d4:	ldr	q0, [sp, #96]
   2d3d8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d3dc:	tst	w28, w0, lsr #31
   2d3e0:	b.ne	2d658 <clogf128@@GLIBC_2.27+0x718>  // b.any
   2d3e4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d3e8:	add	x0, x0, #0x330
   2d3ec:	stp	x22, x23, [sp, #96]
   2d3f0:	ldr	q1, [x0]
   2d3f4:	ldr	q0, [sp, #96]
   2d3f8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d3fc:	mvn	w0, w0
   2d400:	tst	w28, w0, lsr #31
   2d404:	b.eq	2d24c <clogf128@@GLIBC_2.27+0x30c>  // b.none
   2d408:	stp	x22, x23, [sp, #96]
   2d40c:	stp	x22, x23, [sp, #112]
   2d410:	ldr	q1, [sp, #96]
   2d414:	ldr	q0, [sp, #112]
   2d418:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d41c:	stp	x26, x21, [sp, #96]
   2d420:	stp	x26, x21, [sp, #112]
   2d424:	ldr	q1, [sp, #96]
   2d428:	str	q0, [sp, #96]
   2d42c:	ldr	q0, [sp, #112]
   2d430:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d434:	mov	v1.16b, v0.16b
   2d438:	ldr	q2, [sp, #96]
   2d43c:	mov	v0.16b, v2.16b
   2d440:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2d444:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d448:	add	x0, x0, #0x330
   2d44c:	ldr	q1, [x0]
   2d450:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d454:	tbnz	w0, #31, 2d24c <clogf128@@GLIBC_2.27+0x30c>
   2d458:	stp	x26, x21, [sp, #96]
   2d45c:	stp	x22, x23, [sp, #112]
   2d460:	ldr	q1, [sp, #96]
   2d464:	ldr	q0, [sp, #112]
   2d468:	bl	25b98 <ldexpf128@@GLIBC_2.27+0x1b8>
   2d46c:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2d470:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d474:	add	x0, x0, #0x330
   2d478:	ldr	q1, [x0]
   2d47c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d480:	str	q0, [sp, #128]
   2d484:	b	2d0f0 <clogf128@@GLIBC_2.27+0x1b0>
   2d488:	mov	w27, #0x0                   	// #0
   2d48c:	b	2d1cc <clogf128@@GLIBC_2.27+0x28c>
   2d490:	and	x24, x24, #0x7fffffffffffffff
   2d494:	stp	x20, x24, [sp, #96]
   2d498:	stp	x20, x24, [sp, #112]
   2d49c:	ldr	q1, [sp, #96]
   2d4a0:	ldr	q0, [sp, #112]
   2d4a4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d4a8:	cbnz	w0, 2d500 <clogf128@@GLIBC_2.27+0x5c0>
   2d4ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d4b0:	add	x0, x0, #0x300
   2d4b4:	stp	x20, x24, [sp, #96]
   2d4b8:	ldr	q1, [x0]
   2d4bc:	ldr	q0, [sp, #96]
   2d4c0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d4c4:	cbnz	w0, 2d500 <clogf128@@GLIBC_2.27+0x5c0>
   2d4c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d4cc:	add	x0, x0, #0x300
   2d4d0:	stp	x20, x24, [sp, #96]
   2d4d4:	ldr	q1, [x0]
   2d4d8:	ldr	q0, [sp, #96]
   2d4dc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d4e0:	cmp	w0, #0x0
   2d4e4:	b.le	2d500 <clogf128@@GLIBC_2.27+0x5c0>
   2d4e8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2d4ec:	add	x0, x0, #0x130
   2d4f0:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2d4f4:	ldr	q0, [x0]
   2d4f8:	mov	x0, #0x0                   	// #0
   2d4fc:	b	2d118 <clogf128@@GLIBC_2.27+0x1d8>
   2d500:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2d504:	add	x0, x0, #0x1b0
   2d508:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2d50c:	ldr	q0, [x0]
   2d510:	mov	x0, #0x0                   	// #0
   2d514:	b	2d118 <clogf128@@GLIBC_2.27+0x1d8>
   2d518:	movi	v1.2d, #0x0
   2d51c:	stp	x20, x24, [sp, #96]
   2d520:	ldr	q0, [sp, #96]
   2d524:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2d528:	cbnz	w0, 2d324 <clogf128@@GLIBC_2.27+0x3e4>
   2d52c:	mov	x0, #0x1b8                 	// #440
   2d530:	lsr	x25, x25, #63
   2d534:	movk	x0, #0xc517, lsl #16
   2d538:	cmp	w25, #0x0
   2d53c:	movk	x0, #0x898c, lsl #32
   2d540:	stp	x19, x23, [sp, #96]
   2d544:	movk	x0, #0x8469, lsl #48
   2d548:	csel	x19, x0, xzr, ne  // ne = any
   2d54c:	and	x0, x24, #0x8000000000000000
   2d550:	mov	x24, #0x42d1                	// #17105
   2d554:	ldr	q1, [sp, #96]
   2d558:	movk	x24, #0xb544, lsl #16
   2d55c:	movk	x24, #0x921f, lsl #32
   2d560:	movk	x24, #0x4000, lsl #48
   2d564:	csel	x24, x24, xzr, ne  // ne = any
   2d568:	orr	x24, x24, x0
   2d56c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2d570:	add	x0, x0, #0xfd0
   2d574:	ldr	q0, [x0]
   2d578:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2d57c:	mov	x0, x19
   2d580:	stp	x0, x24, [sp, #96]
   2d584:	ldp	x19, x20, [sp, #16]
   2d588:	ldp	x21, x22, [sp, #32]
   2d58c:	ldp	x23, x24, [sp, #48]
   2d590:	ldp	x25, x26, [sp, #64]
   2d594:	ldr	q1, [sp, #96]
   2d598:	ldp	x29, x30, [sp], #144
   2d59c:	ret
   2d5a0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2d5a4:	add	x0, x0, #0x130
   2d5a8:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2d5ac:	ldp	x21, x22, [sp, #32]
   2d5b0:	ldr	q0, [x0]
   2d5b4:	mov	x0, #0x0                   	// #0
   2d5b8:	b	2d118 <clogf128@@GLIBC_2.27+0x1d8>
   2d5bc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d5c0:	add	x0, x0, #0x2f0
   2d5c4:	stp	x22, x23, [sp, #96]
   2d5c8:	ldr	q1, [x0]
   2d5cc:	ldr	q0, [sp, #96]
   2d5d0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2d5d4:	stp	x22, x23, [sp, #96]
   2d5d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d5dc:	add	x0, x0, #0x2f0
   2d5e0:	str	q0, [sp, #112]
   2d5e4:	ldr	q0, [sp, #96]
   2d5e8:	ldr	q1, [x0]
   2d5ec:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2d5f0:	mov	v1.16b, v0.16b
   2d5f4:	ldr	q2, [sp, #112]
   2d5f8:	mov	v0.16b, v2.16b
   2d5fc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d600:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2d604:	add	x0, x0, #0x180
   2d608:	stp	x26, x21, [sp, #96]
   2d60c:	str	q0, [sp, #112]
   2d610:	ldr	q1, [x0]
   2d614:	ldr	q0, [sp, #96]
   2d618:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d61c:	ldr	q2, [sp, #112]
   2d620:	tbnz	w0, #31, 2d650 <clogf128@@GLIBC_2.27+0x710>
   2d624:	stp	x26, x21, [sp, #96]
   2d628:	stp	x26, x21, [sp, #112]
   2d62c:	ldr	q1, [sp, #96]
   2d630:	ldr	q0, [sp, #112]
   2d634:	str	q2, [sp, #128]
   2d638:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d63c:	mov	v1.16b, v0.16b
   2d640:	ldr	q2, [sp, #128]
   2d644:	mov	v0.16b, v2.16b
   2d648:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2d64c:	mov	v2.16b, v0.16b
   2d650:	mov	v0.16b, v2.16b
   2d654:	b	2d46c <clogf128@@GLIBC_2.27+0x52c>
   2d658:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d65c:	add	x0, x0, #0x2f0
   2d660:	stp	x22, x23, [sp, #96]
   2d664:	ldr	q1, [x0]
   2d668:	ldr	q0, [sp, #96]
   2d66c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2d670:	stp	x22, x23, [sp, #96]
   2d674:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d678:	add	x0, x0, #0x2f0
   2d67c:	str	q0, [sp, #112]
   2d680:	ldr	q0, [sp, #96]
   2d684:	ldr	q1, [x0]
   2d688:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2d68c:	mov	v1.16b, v0.16b
   2d690:	ldr	q2, [sp, #112]
   2d694:	mov	v0.16b, v2.16b
   2d698:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d69c:	b	2d46c <clogf128@@GLIBC_2.27+0x52c>

000000000002d6a0 <cprojf128@@GLIBC_2.27>:
   2d6a0:	stp	x29, x30, [sp, #-112]!
   2d6a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d6a8:	add	x0, x0, #0x300
   2d6ac:	mov	x29, sp
   2d6b0:	stp	x19, x20, [sp, #16]
   2d6b4:	str	q0, [sp, #80]
   2d6b8:	ldp	x19, x20, [sp, #80]
   2d6bc:	stp	x21, x22, [sp, #32]
   2d6c0:	str	q1, [sp, #96]
   2d6c4:	ldp	x22, x21, [sp, #96]
   2d6c8:	stp	x23, x24, [sp, #48]
   2d6cc:	and	x23, x20, #0x7fffffffffffffff
   2d6d0:	str	x23, [sp, #88]
   2d6d4:	ldr	q1, [x0]
   2d6d8:	ldr	q0, [sp, #80]
   2d6dc:	mov	x24, x22
   2d6e0:	str	x25, [sp, #64]
   2d6e4:	mov	x25, x21
   2d6e8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d6ec:	cbnz	w0, 2d710 <cprojf128@@GLIBC_2.27+0x70>
   2d6f0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d6f4:	add	x0, x0, #0x300
   2d6f8:	stp	x19, x23, [sp, #80]
   2d6fc:	ldr	q1, [x0]
   2d700:	ldr	q0, [sp, #80]
   2d704:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d708:	cmp	w0, #0x0
   2d70c:	b.gt	2d758 <cprojf128@@GLIBC_2.27+0xb8>
   2d710:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d714:	add	x0, x0, #0x300
   2d718:	and	x23, x25, #0x7fffffffffffffff
   2d71c:	stp	x24, x23, [sp, #80]
   2d720:	ldr	q1, [x0]
   2d724:	ldr	q0, [sp, #80]
   2d728:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d72c:	cbnz	w0, 2d750 <cprojf128@@GLIBC_2.27+0xb0>
   2d730:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d734:	add	x0, x0, #0x300
   2d738:	stp	x24, x23, [sp, #80]
   2d73c:	ldr	q1, [x0]
   2d740:	ldr	q0, [sp, #80]
   2d744:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d748:	cmp	w0, #0x0
   2d74c:	b.gt	2d758 <cprojf128@@GLIBC_2.27+0xb8>
   2d750:	mov	x0, x21
   2d754:	b	2d76c <cprojf128@@GLIBC_2.27+0xcc>
   2d758:	stp	xzr, xzr, [sp, #80]
   2d75c:	tbnz	x25, #63, 2d794 <cprojf128@@GLIBC_2.27+0xf4>
   2d760:	ldp	x22, x0, [sp, #80]
   2d764:	mov	x19, #0x0                   	// #0
   2d768:	mov	x20, #0x7fff000000000000    	// #9223090561878065152
   2d76c:	stp	x19, x20, [sp, #80]
   2d770:	stp	x22, x0, [sp, #96]
   2d774:	ldr	q0, [sp, #80]
   2d778:	ldp	x19, x20, [sp, #16]
   2d77c:	ldp	x21, x22, [sp, #32]
   2d780:	ldp	x23, x24, [sp, #48]
   2d784:	ldr	x25, [sp, #64]
   2d788:	ldr	q1, [sp, #96]
   2d78c:	ldp	x29, x30, [sp], #112
   2d790:	ret
   2d794:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d798:	add	x0, x0, #0xf60
   2d79c:	ldr	q0, [x0]
   2d7a0:	str	q0, [sp, #80]
   2d7a4:	b	2d760 <cprojf128@@GLIBC_2.27+0xc0>

000000000002d7a8 <csqrtf128@@GLIBC_2.27>:
   2d7a8:	stp	x29, x30, [sp, #-128]!
   2d7ac:	mov	x29, sp
   2d7b0:	stp	x19, x20, [sp, #16]
   2d7b4:	stp	x21, x22, [sp, #32]
   2d7b8:	str	q0, [sp, #80]
   2d7bc:	ldp	x19, x21, [sp, #80]
   2d7c0:	str	q1, [sp, #112]
   2d7c4:	ldp	x0, x20, [sp, #112]
   2d7c8:	stp	x23, x24, [sp, #48]
   2d7cc:	and	x22, x21, #0x7fffffffffffffff
   2d7d0:	stp	x22, x19, [sp, #88]
   2d7d4:	str	x22, [sp, #104]
   2d7d8:	mov	x24, x0
   2d7dc:	ldr	q1, [sp, #80]
   2d7e0:	and	x23, x20, #0x7fffffffffffffff
   2d7e4:	ldr	q0, [sp, #96]
   2d7e8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d7ec:	cbnz	w0, 2df0c <csqrtf128@@GLIBC_2.27+0x764>
   2d7f0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d7f4:	add	x0, x0, #0x300
   2d7f8:	stp	x19, x22, [sp, #80]
   2d7fc:	ldr	q1, [x0]
   2d800:	ldr	q0, [sp, #80]
   2d804:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d808:	cbnz	w0, 2d8cc <csqrtf128@@GLIBC_2.27+0x124>
   2d80c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d810:	add	x0, x0, #0x300
   2d814:	stp	x19, x22, [sp, #80]
   2d818:	ldr	q1, [x0]
   2d81c:	ldr	q0, [sp, #80]
   2d820:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d824:	cmp	w0, #0x0
   2d828:	b.le	2d8cc <csqrtf128@@GLIBC_2.27+0x124>
   2d82c:	stp	x24, x23, [sp, #80]
   2d830:	stp	x24, x23, [sp, #96]
   2d834:	ldr	q1, [sp, #80]
   2d838:	ldr	q0, [sp, #96]
   2d83c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d840:	cbnz	w0, 2e100 <csqrtf128@@GLIBC_2.27+0x958>
   2d844:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d848:	add	x0, x0, #0x300
   2d84c:	stp	x24, x23, [sp, #80]
   2d850:	ldr	q1, [x0]
   2d854:	ldr	q0, [sp, #80]
   2d858:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d85c:	cbnz	w0, 2d880 <csqrtf128@@GLIBC_2.27+0xd8>
   2d860:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d864:	add	x0, x0, #0x300
   2d868:	stp	x24, x23, [sp, #80]
   2d86c:	ldr	q1, [x0]
   2d870:	ldr	q0, [sp, #80]
   2d874:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d878:	cmp	w0, #0x0
   2d87c:	b.gt	2da24 <csqrtf128@@GLIBC_2.27+0x27c>
   2d880:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d884:	add	x0, x0, #0xeb0
   2d888:	stp	x24, x23, [sp, #80]
   2d88c:	ldr	q1, [x0]
   2d890:	ldr	q0, [sp, #80]
   2d894:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d898:	tbz	w0, #31, 2d8a0 <csqrtf128@@GLIBC_2.27+0xf8>
   2d89c:	stp	x24, x20, [sp, #80]
   2d8a0:	movi	v1.2d, #0x0
   2d8a4:	stp	x19, x21, [sp, #80]
   2d8a8:	ldr	q0, [sp, #80]
   2d8ac:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d8b0:	tbnz	w0, #31, 2e010 <csqrtf128@@GLIBC_2.27+0x868>
   2d8b4:	mov	x0, #0x0                   	// #0
   2d8b8:	mov	x1, #0x0                   	// #0
   2d8bc:	tbz	x20, #63, 2d8c4 <csqrtf128@@GLIBC_2.27+0x11c>
   2d8c0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2d8c4:	mov	x20, x1
   2d8c8:	b	2da30 <csqrtf128@@GLIBC_2.27+0x288>
   2d8cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d8d0:	add	x0, x0, #0xeb0
   2d8d4:	stp	x19, x22, [sp, #80]
   2d8d8:	ldr	q1, [x0]
   2d8dc:	ldr	q0, [sp, #80]
   2d8e0:	str	x25, [sp, #64]
   2d8e4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d8e8:	tbz	w0, #31, 2d9cc <csqrtf128@@GLIBC_2.27+0x224>
   2d8ec:	movi	v1.2d, #0x0
   2d8f0:	stp	x19, x21, [sp, #80]
   2d8f4:	ldr	q0, [sp, #80]
   2d8f8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2d8fc:	cbnz	w0, 2da54 <csqrtf128@@GLIBC_2.27+0x2ac>
   2d900:	stp	x24, x23, [sp, #80]
   2d904:	stp	x24, x23, [sp, #96]
   2d908:	ldr	q1, [sp, #80]
   2d90c:	ldr	q0, [sp, #96]
   2d910:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d914:	cbnz	w0, 2e0e8 <csqrtf128@@GLIBC_2.27+0x940>
   2d918:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d91c:	add	x0, x0, #0x300
   2d920:	stp	x24, x23, [sp, #80]
   2d924:	ldr	q1, [x0]
   2d928:	ldr	q0, [sp, #80]
   2d92c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d930:	cbnz	w0, 2d954 <csqrtf128@@GLIBC_2.27+0x1ac>
   2d934:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d938:	add	x0, x0, #0x300
   2d93c:	stp	x24, x23, [sp, #80]
   2d940:	ldr	q1, [x0]
   2d944:	ldr	q0, [sp, #80]
   2d948:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2d94c:	cmp	w0, #0x0
   2d950:	b.gt	2da20 <csqrtf128@@GLIBC_2.27+0x278>
   2d954:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d958:	add	x0, x0, #0xeb0
   2d95c:	stp	x24, x23, [sp, #80]
   2d960:	ldr	q1, [x0]
   2d964:	ldr	q0, [sp, #80]
   2d968:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d96c:	tbnz	w0, #31, 2dff0 <csqrtf128@@GLIBC_2.27+0x848>
   2d970:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2d974:	add	x0, x0, #0x1a0
   2d978:	stp	x24, x23, [sp, #80]
   2d97c:	ldr	q1, [x0]
   2d980:	ldr	q0, [sp, #80]
   2d984:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2d988:	tbz	w0, #31, 2df8c <csqrtf128@@GLIBC_2.27+0x7e4>
   2d98c:	stp	x24, x23, [sp, #80]
   2d990:	stp	x24, x23, [sp, #96]
   2d994:	ldr	q1, [sp, #80]
   2d998:	ldr	q0, [sp, #96]
   2d99c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2d9a0:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2d9a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d9a8:	add	x0, x0, #0x330
   2d9ac:	ldr	q1, [x0]
   2d9b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2d9b4:	str	q0, [sp, #80]
   2d9b8:	ldp	x19, x21, [sp, #80]
   2d9bc:	bfxil	x20, x21, #0, #63
   2d9c0:	mov	x0, x19
   2d9c4:	ldr	x25, [sp, #64]
   2d9c8:	b	2da30 <csqrtf128@@GLIBC_2.27+0x288>
   2d9cc:	stp	x24, x23, [sp, #80]
   2d9d0:	stp	x24, x23, [sp, #96]
   2d9d4:	ldr	q1, [sp, #80]
   2d9d8:	ldr	q0, [sp, #96]
   2d9dc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d9e0:	cbnz	w0, 2e0e8 <csqrtf128@@GLIBC_2.27+0x940>
   2d9e4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2d9e8:	add	x0, x0, #0x300
   2d9ec:	stp	x24, x23, [sp, #80]
   2d9f0:	ldr	q1, [x0]
   2d9f4:	ldr	q0, [sp, #80]
   2d9f8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2d9fc:	cbnz	w0, 2db1c <csqrtf128@@GLIBC_2.27+0x374>
   2da00:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2da04:	add	x0, x0, #0x300
   2da08:	stp	x24, x23, [sp, #80]
   2da0c:	ldr	q1, [x0]
   2da10:	ldr	q0, [sp, #80]
   2da14:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2da18:	cmp	w0, #0x0
   2da1c:	b.le	2db1c <csqrtf128@@GLIBC_2.27+0x374>
   2da20:	ldr	x25, [sp, #64]
   2da24:	mov	x0, x24
   2da28:	mov	x19, #0x0                   	// #0
   2da2c:	mov	x21, #0x7fff000000000000    	// #9223090561878065152
   2da30:	stp	x19, x21, [sp, #80]
   2da34:	stp	x0, x20, [sp, #96]
   2da38:	ldr	q0, [sp, #80]
   2da3c:	ldp	x19, x20, [sp, #16]
   2da40:	ldp	x21, x22, [sp, #32]
   2da44:	ldp	x23, x24, [sp, #48]
   2da48:	ldr	q1, [sp, #96]
   2da4c:	ldp	x29, x30, [sp], #128
   2da50:	ret
   2da54:	stp	x24, x23, [sp, #80]
   2da58:	stp	x24, x23, [sp, #96]
   2da5c:	ldr	q1, [sp, #80]
   2da60:	ldr	q0, [sp, #96]
   2da64:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2da68:	cbnz	w0, 2e0e8 <csqrtf128@@GLIBC_2.27+0x940>
   2da6c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2da70:	add	x0, x0, #0x300
   2da74:	stp	x24, x23, [sp, #80]
   2da78:	ldr	q1, [x0]
   2da7c:	ldr	q0, [sp, #80]
   2da80:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2da84:	cbnz	w0, 2daa8 <csqrtf128@@GLIBC_2.27+0x300>
   2da88:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2da8c:	add	x0, x0, #0x300
   2da90:	stp	x24, x23, [sp, #80]
   2da94:	ldr	q1, [x0]
   2da98:	ldr	q0, [sp, #80]
   2da9c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2daa0:	cmp	w0, #0x0
   2daa4:	b.gt	2da20 <csqrtf128@@GLIBC_2.27+0x278>
   2daa8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2daac:	add	x0, x0, #0xeb0
   2dab0:	stp	x24, x23, [sp, #80]
   2dab4:	ldr	q1, [x0]
   2dab8:	ldr	q0, [sp, #80]
   2dabc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2dac0:	tbz	w0, #31, 2db4c <csqrtf128@@GLIBC_2.27+0x3a4>
   2dac4:	movi	v1.2d, #0x0
   2dac8:	stp	x24, x20, [sp, #80]
   2dacc:	ldr	q0, [sp, #80]
   2dad0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2dad4:	cbnz	w0, 2db4c <csqrtf128@@GLIBC_2.27+0x3a4>
   2dad8:	movi	v1.2d, #0x0
   2dadc:	stp	x19, x21, [sp, #80]
   2dae0:	ldr	q0, [sp, #80]
   2dae4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2dae8:	tbnz	w0, #31, 2e074 <csqrtf128@@GLIBC_2.27+0x8cc>
   2daec:	stp	x19, x21, [sp, #80]
   2daf0:	ldr	q0, [sp, #80]
   2daf4:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2daf8:	str	q0, [sp, #80]
   2dafc:	mov	x0, #0x0                   	// #0
   2db00:	mov	x1, #0x0                   	// #0
   2db04:	ldp	x19, x21, [sp, #80]
   2db08:	tbnz	x20, #63, 2e008 <csqrtf128@@GLIBC_2.27+0x860>
   2db0c:	and	x21, x21, #0x7fffffffffffffff
   2db10:	mov	x20, x1
   2db14:	ldr	x25, [sp, #64]
   2db18:	b	2da30 <csqrtf128@@GLIBC_2.27+0x288>
   2db1c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2db20:	add	x0, x0, #0xeb0
   2db24:	stp	x24, x23, [sp, #80]
   2db28:	ldr	q1, [x0]
   2db2c:	ldr	q0, [sp, #80]
   2db30:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2db34:	tbz	w0, #31, 2db4c <csqrtf128@@GLIBC_2.27+0x3a4>
   2db38:	movi	v1.2d, #0x0
   2db3c:	stp	x24, x20, [sp, #80]
   2db40:	ldr	q0, [sp, #80]
   2db44:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2db48:	cbz	w0, 2dad8 <csqrtf128@@GLIBC_2.27+0x330>
   2db4c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2db50:	add	x0, x0, #0x1c0
   2db54:	stp	x19, x22, [sp, #80]
   2db58:	ldr	q1, [x0]
   2db5c:	ldr	q0, [sp, #80]
   2db60:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2db64:	cmp	w0, #0x0
   2db68:	b.gt	2de68 <csqrtf128@@GLIBC_2.27+0x6c0>
   2db6c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2db70:	add	x0, x0, #0x1c0
   2db74:	stp	x24, x23, [sp, #80]
   2db78:	ldr	q1, [x0]
   2db7c:	ldr	q0, [sp, #80]
   2db80:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2db84:	str	x19, [sp, #80]
   2db88:	cmp	w0, #0x0
   2db8c:	b.le	2dd30 <csqrtf128@@GLIBC_2.27+0x588>
   2db90:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2db94:	add	x0, x0, #0x1d0
   2db98:	str	x22, [sp, #88]
   2db9c:	ldr	q1, [x0]
   2dba0:	ldr	q0, [sp, #80]
   2dba4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2dba8:	tbz	w0, #31, 2df74 <csqrtf128@@GLIBC_2.27+0x7cc>
   2dbac:	stp	xzr, xzr, [sp, #96]
   2dbb0:	mov	w0, #0xfffffffe            	// #-2
   2dbb4:	stp	x24, x20, [sp, #80]
   2dbb8:	ldr	q0, [sp, #80]
   2dbbc:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2dbc0:	str	q0, [sp, #80]
   2dbc4:	ldp	x0, x20, [sp, #80]
   2dbc8:	stp	x0, x20, [sp, #80]
   2dbcc:	ldr	q0, [sp, #96]
   2dbd0:	ldr	q1, [sp, #80]
   2dbd4:	mov	x24, x0
   2dbd8:	bl	14a50 <__hypotl_finite@GLIBC_2.17>
   2dbdc:	movi	v1.2d, #0x0
   2dbe0:	mov	v2.16b, v0.16b
   2dbe4:	ldr	q0, [sp, #96]
   2dbe8:	and	x21, x20, #0x7fffffffffffffff
   2dbec:	str	q2, [sp, #80]
   2dbf0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2dbf4:	cmp	w0, #0x0
   2dbf8:	ldr	q2, [sp, #80]
   2dbfc:	b.le	2de8c <csqrtf128@@GLIBC_2.27+0x6e4>
   2dc00:	ldr	q0, [sp, #96]
   2dc04:	mov	v1.16b, v2.16b
   2dc08:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2dc0c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2dc10:	add	x0, x0, #0x330
   2dc14:	ldr	q1, [x0]
   2dc18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2dc1c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2dc20:	stp	x24, x21, [sp, #80]
   2dc24:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2dc28:	add	x0, x0, #0x2f0
   2dc2c:	str	q0, [sp, #96]
   2dc30:	ldr	q0, [sp, #80]
   2dc34:	ldr	x19, [sp, #96]
   2dc38:	ldr	q1, [x0]
   2dc3c:	ldr	x21, [sp, #104]
   2dc40:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2dc44:	tbnz	w0, #31, 2e030 <csqrtf128@@GLIBC_2.27+0x888>
   2dc48:	stp	x19, x21, [sp, #80]
   2dc4c:	mov	w25, #0x1                   	// #1
   2dc50:	stp	x24, x20, [sp, #96]
   2dc54:	ldr	q1, [sp, #80]
   2dc58:	ldr	q0, [sp, #96]
   2dc5c:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2dc60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2dc64:	add	x0, x0, #0x330
   2dc68:	ldr	q1, [x0]
   2dc6c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2dc70:	str	q0, [sp, #80]
   2dc74:	ldp	x0, x22, [sp, #80]
   2dc78:	mov	x23, x0
   2dc7c:	stp	x19, x21, [sp, #80]
   2dc80:	mov	w0, w25
   2dc84:	ldr	q0, [sp, #80]
   2dc88:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2dc8c:	stp	x23, x22, [sp, #80]
   2dc90:	mov	w0, w25
   2dc94:	str	q0, [sp, #96]
   2dc98:	ldr	q0, [sp, #80]
   2dc9c:	ldp	x19, x21, [sp, #96]
   2dca0:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2dca4:	str	q0, [sp, #80]
   2dca8:	ldp	x0, x22, [sp, #80]
   2dcac:	mov	x2, x19
   2dcb0:	and	x1, x21, #0x7fffffffffffffff
   2dcb4:	mov	x23, x0
   2dcb8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2dcbc:	add	x0, x0, #0xeb0
   2dcc0:	stp	x2, x1, [sp, #80]
   2dcc4:	ldr	q1, [x0]
   2dcc8:	ldr	q0, [sp, #80]
   2dccc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2dcd0:	tbz	w0, #31, 2dce8 <csqrtf128@@GLIBC_2.27+0x540>
   2dcd4:	stp	x19, x21, [sp, #80]
   2dcd8:	stp	x19, x21, [sp, #96]
   2dcdc:	ldr	q1, [sp, #80]
   2dce0:	ldr	q0, [sp, #96]
   2dce4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2dce8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2dcec:	add	x0, x0, #0xeb0
   2dcf0:	and	x24, x22, #0x7fffffffffffffff
   2dcf4:	stp	x23, x24, [sp, #80]
   2dcf8:	ldr	q1, [x0]
   2dcfc:	ldr	q0, [sp, #80]
   2dd00:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2dd04:	tbz	w0, #31, 2dd1c <csqrtf128@@GLIBC_2.27+0x574>
   2dd08:	stp	x23, x22, [sp, #80]
   2dd0c:	stp	x23, x22, [sp, #96]
   2dd10:	ldr	q1, [sp, #80]
   2dd14:	ldr	q0, [sp, #96]
   2dd18:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2dd1c:	and	x20, x20, #0x8000000000000000
   2dd20:	mov	x0, x23
   2dd24:	orr	x20, x24, x20
   2dd28:	ldr	x25, [sp, #64]
   2dd2c:	b	2da30 <csqrtf128@@GLIBC_2.27+0x288>
   2dd30:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2dd34:	add	x0, x0, #0x1a0
   2dd38:	str	x22, [sp, #88]
   2dd3c:	ldr	q1, [x0]
   2dd40:	ldr	q0, [sp, #80]
   2dd44:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2dd48:	tbz	w0, #31, 2dd68 <csqrtf128@@GLIBC_2.27+0x5c0>
   2dd4c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2dd50:	add	x0, x0, #0x1a0
   2dd54:	stp	x24, x23, [sp, #80]
   2dd58:	ldr	q1, [x0]
   2dd5c:	ldr	q0, [sp, #80]
   2dd60:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2dd64:	tbnz	w0, #31, 2dfb4 <csqrtf128@@GLIBC_2.27+0x80c>
   2dd68:	mov	w25, #0x0                   	// #0
   2dd6c:	stp	x24, x20, [sp, #80]
   2dd70:	stp	x19, x21, [sp, #96]
   2dd74:	ldr	q1, [sp, #80]
   2dd78:	ldr	q0, [sp, #96]
   2dd7c:	bl	14a50 <__hypotl_finite@GLIBC_2.17>
   2dd80:	stp	x19, x21, [sp, #80]
   2dd84:	movi	v1.2d, #0x0
   2dd88:	str	q0, [sp, #96]
   2dd8c:	ldr	q0, [sp, #80]
   2dd90:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2dd94:	cmp	w0, #0x0
   2dd98:	ldr	q2, [sp, #96]
   2dd9c:	b.gt	2de0c <csqrtf128@@GLIBC_2.27+0x664>
   2dda0:	stp	x19, x21, [sp, #80]
   2dda4:	mov	v0.16b, v2.16b
   2dda8:	ldr	q1, [sp, #80]
   2ddac:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2ddb0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ddb4:	add	x0, x0, #0x330
   2ddb8:	ldr	q1, [x0]
   2ddbc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2ddc0:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2ddc4:	str	q0, [sp, #80]
   2ddc8:	ldp	x0, x22, [sp, #80]
   2ddcc:	stp	x24, x20, [sp, #96]
   2ddd0:	mov	v1.16b, v0.16b
   2ddd4:	ldr	q0, [sp, #96]
   2ddd8:	mov	x23, x0
   2dddc:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2dde0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2dde4:	add	x0, x0, #0x330
   2dde8:	ldr	q1, [x0]
   2ddec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2ddf0:	str	q0, [sp, #80]
   2ddf4:	ldp	x19, x21, [sp, #80]
   2ddf8:	and	x21, x21, #0x7fffffffffffffff
   2ddfc:	cbnz	w25, 2dc7c <csqrtf128@@GLIBC_2.27+0x4d4>
   2de00:	mov	x2, x19
   2de04:	and	x1, x21, #0x7fffffffffffffff
   2de08:	b	2dcb8 <csqrtf128@@GLIBC_2.27+0x510>
   2de0c:	stp	x19, x21, [sp, #80]
   2de10:	mov	v0.16b, v2.16b
   2de14:	ldr	q1, [sp, #80]
   2de18:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2de1c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2de20:	add	x0, x0, #0x330
   2de24:	ldr	q1, [x0]
   2de28:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2de2c:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2de30:	stp	x24, x20, [sp, #96]
   2de34:	mov	v1.16b, v0.16b
   2de38:	str	q0, [sp, #80]
   2de3c:	ldr	q0, [sp, #96]
   2de40:	ldp	x19, x21, [sp, #80]
   2de44:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2de48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2de4c:	add	x0, x0, #0x330
   2de50:	ldr	q1, [x0]
   2de54:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2de58:	str	q0, [sp, #80]
   2de5c:	ldp	x0, x22, [sp, #80]
   2de60:	mov	x23, x0
   2de64:	b	2ddfc <csqrtf128@@GLIBC_2.27+0x654>
   2de68:	stp	x19, x21, [sp, #80]
   2de6c:	mov	w0, #0xfffffffe            	// #-2
   2de70:	ldr	q0, [sp, #80]
   2de74:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2de78:	stp	x24, x20, [sp, #80]
   2de7c:	mov	w0, #0xfffffffe            	// #-2
   2de80:	str	q0, [sp, #96]
   2de84:	ldr	q0, [sp, #80]
   2de88:	b	2dbbc <csqrtf128@@GLIBC_2.27+0x414>
   2de8c:	ldr	q1, [sp, #96]
   2de90:	mov	v0.16b, v2.16b
   2de94:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2de98:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2de9c:	add	x0, x0, #0x330
   2dea0:	ldr	q1, [x0]
   2dea4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2dea8:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2deac:	str	q0, [sp, #96]
   2deb0:	ldp	x0, x22, [sp, #96]
   2deb4:	stp	x24, x21, [sp, #80]
   2deb8:	ldr	q0, [sp, #80]
   2debc:	mov	x23, x0
   2dec0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2dec4:	add	x0, x0, #0x2f0
   2dec8:	ldr	q1, [x0]
   2decc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ded0:	tbnz	w0, #31, 2e0a0 <csqrtf128@@GLIBC_2.27+0x8f8>
   2ded4:	stp	x23, x22, [sp, #80]
   2ded8:	mov	w25, #0x1                   	// #1
   2dedc:	stp	x24, x20, [sp, #96]
   2dee0:	ldr	q1, [sp, #80]
   2dee4:	ldr	q0, [sp, #96]
   2dee8:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2deec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2def0:	add	x0, x0, #0x330
   2def4:	ldr	q1, [x0]
   2def8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2defc:	str	q0, [sp, #80]
   2df00:	ldp	x19, x21, [sp, #80]
   2df04:	and	x21, x21, #0x7fffffffffffffff
   2df08:	b	2dc7c <csqrtf128@@GLIBC_2.27+0x4d4>
   2df0c:	stp	x24, x23, [sp, #80]
   2df10:	stp	x24, x23, [sp, #96]
   2df14:	ldr	q1, [sp, #80]
   2df18:	ldr	q0, [sp, #96]
   2df1c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2df20:	cbnz	w0, 2df60 <csqrtf128@@GLIBC_2.27+0x7b8>
   2df24:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2df28:	add	x0, x0, #0x300
   2df2c:	stp	x24, x23, [sp, #80]
   2df30:	ldr	q1, [x0]
   2df34:	ldr	q0, [sp, #80]
   2df38:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2df3c:	cbnz	w0, 2df60 <csqrtf128@@GLIBC_2.27+0x7b8>
   2df40:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2df44:	add	x0, x0, #0x300
   2df48:	stp	x24, x23, [sp, #80]
   2df4c:	ldr	q1, [x0]
   2df50:	ldr	q0, [sp, #80]
   2df54:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2df58:	cmp	w0, #0x0
   2df5c:	b.gt	2da24 <csqrtf128@@GLIBC_2.27+0x27c>
   2df60:	mov	x21, #0x7fff800000000000    	// #9223231299366420480
   2df64:	mov	x19, #0x0                   	// #0
   2df68:	mov	x20, x21
   2df6c:	mov	x0, #0x0                   	// #0
   2df70:	b	2da30 <csqrtf128@@GLIBC_2.27+0x288>
   2df74:	stp	x19, x21, [sp, #80]
   2df78:	mov	w0, #0xfffffffe            	// #-2
   2df7c:	ldr	q0, [sp, #80]
   2df80:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2df84:	str	q0, [sp, #96]
   2df88:	b	2dbb0 <csqrtf128@@GLIBC_2.27+0x408>
   2df8c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2df90:	add	x0, x0, #0x330
   2df94:	stp	x24, x23, [sp, #80]
   2df98:	ldr	q1, [x0]
   2df9c:	ldr	q0, [sp, #80]
   2dfa0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2dfa4:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2dfa8:	str	q0, [sp, #80]
   2dfac:	ldp	x19, x21, [sp, #80]
   2dfb0:	b	2d9bc <csqrtf128@@GLIBC_2.27+0x214>
   2dfb4:	stp	x19, x21, [sp, #80]
   2dfb8:	mov	w0, #0x72                  	// #114
   2dfbc:	mov	w25, #0xffffffc7            	// #-57
   2dfc0:	ldr	q0, [sp, #80]
   2dfc4:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2dfc8:	stp	x24, x20, [sp, #80]
   2dfcc:	mov	w0, #0x72                  	// #114
   2dfd0:	str	q0, [sp, #96]
   2dfd4:	ldr	q0, [sp, #80]
   2dfd8:	ldp	x19, x21, [sp, #96]
   2dfdc:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2dfe0:	str	q0, [sp, #80]
   2dfe4:	ldp	x0, x20, [sp, #80]
   2dfe8:	mov	x24, x0
   2dfec:	b	2dd6c <csqrtf128@@GLIBC_2.27+0x5c4>
   2dff0:	movi	v1.2d, #0x0
   2dff4:	stp	x24, x20, [sp, #80]
   2dff8:	ldr	q0, [sp, #80]
   2dffc:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2e000:	cbz	w0, 2dad8 <csqrtf128@@GLIBC_2.27+0x330>
   2e004:	b	2d970 <csqrtf128@@GLIBC_2.27+0x1c8>
   2e008:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2e00c:	b	2db0c <csqrtf128@@GLIBC_2.27+0x364>
   2e010:	mov	x19, #0x0                   	// #0
   2e014:	mov	x21, #0x0                   	// #0
   2e018:	mov	x0, #0x0                   	// #0
   2e01c:	mov	x1, #0x7fff000000000000    	// #9223090561878065152
   2e020:	tbz	x20, #63, 2d8c4 <csqrtf128@@GLIBC_2.27+0x11c>
   2e024:	mov	x1, #0xffff000000000000    	// #-281474976710656
   2e028:	mov	x20, x1
   2e02c:	b	2da30 <csqrtf128@@GLIBC_2.27+0x288>
   2e030:	stp	x19, x21, [sp, #80]
   2e034:	stp	x24, x20, [sp, #96]
   2e038:	ldr	q1, [sp, #80]
   2e03c:	ldr	q0, [sp, #96]
   2e040:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2e044:	str	q0, [sp, #96]
   2e048:	ldp	x0, x22, [sp, #96]
   2e04c:	stp	x19, x21, [sp, #80]
   2e050:	ldr	q0, [sp, #80]
   2e054:	mov	x23, x0
   2e058:	mov	w0, #0x1                   	// #1
   2e05c:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2e060:	str	q0, [sp, #80]
   2e064:	ldp	x19, x21, [sp, #80]
   2e068:	mov	x2, x19
   2e06c:	and	x1, x21, #0x7fffffffffffffff
   2e070:	b	2dcb8 <csqrtf128@@GLIBC_2.27+0x510>
   2e074:	eor	x21, x21, #0x8000000000000000
   2e078:	stp	x19, x21, [sp, #80]
   2e07c:	mov	x19, #0x0                   	// #0
   2e080:	ldr	q0, [sp, #80]
   2e084:	mov	x21, #0x0                   	// #0
   2e088:	bl	1e998 <__sqrtl_finite@GLIBC_2.17>
   2e08c:	str	q0, [sp, #80]
   2e090:	ldp	x0, x1, [sp, #80]
   2e094:	ldr	x25, [sp, #64]
   2e098:	bfxil	x20, x1, #0, #63
   2e09c:	b	2da30 <csqrtf128@@GLIBC_2.27+0x288>
   2e0a0:	stp	x23, x22, [sp, #80]
   2e0a4:	stp	x24, x20, [sp, #96]
   2e0a8:	ldr	q1, [sp, #80]
   2e0ac:	ldr	q0, [sp, #96]
   2e0b0:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2e0b4:	stp	x23, x22, [sp, #80]
   2e0b8:	mov	w0, #0x1                   	// #1
   2e0bc:	str	q0, [sp, #96]
   2e0c0:	ldr	q0, [sp, #80]
   2e0c4:	ldp	x19, x21, [sp, #96]
   2e0c8:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2e0cc:	str	q0, [sp, #80]
   2e0d0:	ldp	x0, x22, [sp, #80]
   2e0d4:	and	x21, x21, #0x7fffffffffffffff
   2e0d8:	mov	x2, x19
   2e0dc:	mov	x1, x21
   2e0e0:	mov	x23, x0
   2e0e4:	b	2dcb8 <csqrtf128@@GLIBC_2.27+0x510>
   2e0e8:	mov	x21, #0x7fff800000000000    	// #9223231299366420480
   2e0ec:	mov	x19, #0x0                   	// #0
   2e0f0:	mov	x20, x21
   2e0f4:	mov	x0, #0x0                   	// #0
   2e0f8:	ldr	x25, [sp, #64]
   2e0fc:	b	2da30 <csqrtf128@@GLIBC_2.27+0x288>
   2e100:	movi	v1.2d, #0x0
   2e104:	stp	x19, x21, [sp, #80]
   2e108:	ldr	q0, [sp, #80]
   2e10c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e110:	tbnz	w0, #31, 2e124 <csqrtf128@@GLIBC_2.27+0x97c>
   2e114:	mov	x1, #0x7fff800000000000    	// #9223231299366420480
   2e118:	mov	x0, #0x0                   	// #0
   2e11c:	mov	x20, x1
   2e120:	b	2da30 <csqrtf128@@GLIBC_2.27+0x288>
   2e124:	mov	x19, #0x0                   	// #0
   2e128:	mov	x21, #0x7fff800000000000    	// #9223231299366420480
   2e12c:	b	2e018 <csqrtf128@@GLIBC_2.27+0x870>

000000000002e130 <cpowf128@@GLIBC_2.27>:
   2e130:	stp	x29, x30, [sp, #-112]!
   2e134:	mov	x29, sp
   2e138:	str	q2, [sp, #16]
   2e13c:	str	q3, [sp, #32]
   2e140:	bl	2cf40 <clogf128@@GLIBC_2.27>
   2e144:	mov	v4.16b, v0.16b
   2e148:	ldr	q0, [sp, #16]
   2e14c:	str	q1, [sp, #48]
   2e150:	mov	v1.16b, v4.16b
   2e154:	str	q4, [sp, #80]
   2e158:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e15c:	str	q0, [sp, #64]
   2e160:	ldr	q0, [sp, #32]
   2e164:	ldr	q1, [sp, #48]
   2e168:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e16c:	mov	v1.16b, v0.16b
   2e170:	ldr	q2, [sp, #64]
   2e174:	mov	v0.16b, v2.16b
   2e178:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2e17c:	ldr	q4, [sp, #80]
   2e180:	str	q0, [sp, #80]
   2e184:	ldr	q0, [sp, #32]
   2e188:	mov	v1.16b, v4.16b
   2e18c:	str	q4, [sp, #96]
   2e190:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e194:	str	q0, [sp, #64]
   2e198:	ldr	q0, [sp, #16]
   2e19c:	ldr	q1, [sp, #48]
   2e1a0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e1a4:	mov	v1.16b, v0.16b
   2e1a8:	ldr	q6, [sp, #64]
   2e1ac:	mov	v0.16b, v6.16b
   2e1b0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2e1b4:	mov	v1.16b, v0.16b
   2e1b8:	ldr	q2, [sp, #80]
   2e1bc:	mov	v0.16b, v2.16b
   2e1c0:	str	q1, [sp, #64]
   2e1c4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e1c8:	ldr	q1, [sp, #64]
   2e1cc:	ldr	q2, [sp, #80]
   2e1d0:	ldr	q4, [sp, #96]
   2e1d4:	cbnz	w0, 2e1e4 <cpowf128@@GLIBC_2.27+0xb4>
   2e1d8:	ldp	x29, x30, [sp], #112
   2e1dc:	mov	v0.16b, v2.16b
   2e1e0:	b	2c970 <cexpf128@@GLIBC_2.27>
   2e1e4:	ldr	q2, [sp, #16]
   2e1e8:	mov	v0.16b, v4.16b
   2e1ec:	ldr	q3, [sp, #32]
   2e1f0:	ldr	q1, [sp, #48]
   2e1f4:	bl	54360 <f64xsubf128@@GLIBC_2.28+0x5e0>
   2e1f8:	mov	v2.16b, v0.16b
   2e1fc:	b	2e1d8 <cpowf128@@GLIBC_2.27+0xa8>

000000000002e200 <__clog10l@@GLIBC_2.17>:
   2e200:	stp	x29, x30, [sp, #-144]!
   2e204:	mov	x29, sp
   2e208:	stp	x19, x20, [sp, #16]
   2e20c:	stp	x25, x26, [sp, #64]
   2e210:	str	q0, [sp, #96]
   2e214:	ldp	x19, x25, [sp, #96]
   2e218:	stp	x23, x24, [sp, #48]
   2e21c:	str	q1, [sp, #128]
   2e220:	ldp	x20, x24, [sp, #128]
   2e224:	and	x23, x25, #0x7fffffffffffffff
   2e228:	stp	x23, x19, [sp, #104]
   2e22c:	str	x23, [sp, #120]
   2e230:	ldr	q1, [sp, #96]
   2e234:	ldr	q0, [sp, #112]
   2e238:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e23c:	cbnz	w0, 2e760 <__clog10l@@GLIBC_2.17+0x560>
   2e240:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e244:	add	x0, x0, #0x300
   2e248:	stp	x19, x23, [sp, #96]
   2e24c:	ldr	q1, [x0]
   2e250:	ldr	q0, [sp, #96]
   2e254:	stp	x21, x22, [sp, #32]
   2e258:	mov	x22, x19
   2e25c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e260:	cbnz	w0, 2e404 <__clog10l@@GLIBC_2.17+0x204>
   2e264:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e268:	add	x0, x0, #0x300
   2e26c:	stp	x19, x23, [sp, #96]
   2e270:	ldr	q1, [x0]
   2e274:	ldr	q0, [sp, #96]
   2e278:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e27c:	cmp	w0, #0x0
   2e280:	b.le	2e404 <__clog10l@@GLIBC_2.17+0x204>
   2e284:	and	x21, x24, #0x7fffffffffffffff
   2e288:	stp	x20, x21, [sp, #96]
   2e28c:	mov	x26, x20
   2e290:	stp	x20, x21, [sp, #112]
   2e294:	ldr	q1, [sp, #96]
   2e298:	ldr	q0, [sp, #112]
   2e29c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e2a0:	cbnz	w0, 2e870 <__clog10l@@GLIBC_2.17+0x670>
   2e2a4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e2a8:	add	x0, x0, #0x300
   2e2ac:	stp	x20, x21, [sp, #96]
   2e2b0:	ldr	q1, [x0]
   2e2b4:	ldr	q0, [sp, #96]
   2e2b8:	stp	x27, x28, [sp, #80]
   2e2bc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e2c0:	cbnz	w0, 2e2c8 <__clog10l@@GLIBC_2.17+0xc8>
   2e2c4:	stp	x20, x21, [sp, #96]
   2e2c8:	stp	x19, x23, [sp, #96]
   2e2cc:	stp	x20, x21, [sp, #112]
   2e2d0:	ldr	q1, [sp, #96]
   2e2d4:	ldr	q0, [sp, #112]
   2e2d8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e2dc:	cmp	w0, #0x0
   2e2e0:	b.le	2e2f8 <__clog10l@@GLIBC_2.17+0xf8>
   2e2e4:	mov	x0, x23
   2e2e8:	mov	x22, x20
   2e2ec:	mov	x23, x21
   2e2f0:	mov	x26, x19
   2e2f4:	mov	x21, x0
   2e2f8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2e2fc:	add	x0, x0, #0xb50
   2e300:	stp	x22, x23, [sp, #96]
   2e304:	ldr	q1, [x0]
   2e308:	ldr	q0, [sp, #96]
   2e30c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e310:	str	x22, [sp, #96]
   2e314:	cmp	w0, #0x0
   2e318:	b.gt	2e45c <__clog10l@@GLIBC_2.17+0x25c>
   2e31c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e320:	add	x0, x0, #0xeb0
   2e324:	str	x23, [sp, #104]
   2e328:	ldr	q1, [x0]
   2e32c:	ldr	q0, [sp, #96]
   2e330:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e334:	tbz	w0, #31, 2e354 <__clog10l@@GLIBC_2.17+0x154>
   2e338:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e33c:	add	x0, x0, #0xeb0
   2e340:	stp	x26, x21, [sp, #96]
   2e344:	ldr	q1, [x0]
   2e348:	ldr	q0, [sp, #96]
   2e34c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e350:	tbnz	w0, #31, 2e618 <__clog10l@@GLIBC_2.17+0x418>
   2e354:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e358:	add	x0, x0, #0x2f0
   2e35c:	stp	x22, x23, [sp, #96]
   2e360:	ldr	q1, [x0]
   2e364:	ldr	q0, [sp, #96]
   2e368:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2e36c:	cbnz	w0, 2e758 <__clog10l@@GLIBC_2.17+0x558>
   2e370:	stp	x26, x21, [sp, #96]
   2e374:	stp	x26, x21, [sp, #112]
   2e378:	ldr	q1, [sp, #96]
   2e37c:	ldr	q0, [sp, #112]
   2e380:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e384:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2e388:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e38c:	add	x0, x0, #0x1e0
   2e390:	ldr	q1, [x0]
   2e394:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e398:	str	q0, [sp, #128]
   2e39c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e3a0:	add	x0, x0, #0xeb0
   2e3a4:	ldr	q1, [x0]
   2e3a8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e3ac:	tbnz	w0, #31, 2e5fc <__clog10l@@GLIBC_2.17+0x3fc>
   2e3b0:	stp	x19, x25, [sp, #96]
   2e3b4:	stp	x20, x24, [sp, #112]
   2e3b8:	ldr	q1, [sp, #96]
   2e3bc:	ldr	q0, [sp, #112]
   2e3c0:	bl	13a78 <__atan2l_finite@GLIBC_2.17>
   2e3c4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e3c8:	add	x0, x0, #0x200
   2e3cc:	ldr	q1, [x0]
   2e3d0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e3d4:	str	q0, [sp, #96]
   2e3d8:	ldp	x21, x22, [sp, #32]
   2e3dc:	ldp	x27, x28, [sp, #80]
   2e3e0:	ldp	x0, x24, [sp, #96]
   2e3e4:	ldr	q0, [sp, #128]
   2e3e8:	stp	x0, x24, [sp, #96]
   2e3ec:	ldp	x19, x20, [sp, #16]
   2e3f0:	ldp	x23, x24, [sp, #48]
   2e3f4:	ldp	x25, x26, [sp, #64]
   2e3f8:	ldr	q1, [sp, #96]
   2e3fc:	ldp	x29, x30, [sp], #144
   2e400:	ret
   2e404:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e408:	add	x0, x0, #0xeb0
   2e40c:	stp	x19, x23, [sp, #96]
   2e410:	ldr	q1, [x0]
   2e414:	ldr	q0, [sp, #96]
   2e418:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e41c:	tbnz	w0, #31, 2e568 <__clog10l@@GLIBC_2.17+0x368>
   2e420:	and	x21, x24, #0x7fffffffffffffff
   2e424:	stp	x20, x21, [sp, #96]
   2e428:	mov	x26, x20
   2e42c:	stp	x20, x21, [sp, #112]
   2e430:	ldr	q1, [sp, #96]
   2e434:	ldr	q0, [sp, #112]
   2e438:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e43c:	cbz	w0, 2e2a4 <__clog10l@@GLIBC_2.17+0xa4>
   2e440:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e444:	add	x0, x0, #0x1b0
   2e448:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2e44c:	ldp	x21, x22, [sp, #32]
   2e450:	ldr	q0, [x0]
   2e454:	mov	x0, #0x0                   	// #0
   2e458:	b	2e3e8 <__clog10l@@GLIBC_2.17+0x1e8>
   2e45c:	str	x23, [sp, #104]
   2e460:	mov	w0, #0xffffffff            	// #-1
   2e464:	ldr	q0, [sp, #96]
   2e468:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2e46c:	stp	x26, x21, [sp, #96]
   2e470:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e474:	add	x0, x0, #0x1a0
   2e478:	str	q0, [sp, #112]
   2e47c:	ldr	q0, [sp, #96]
   2e480:	ldp	x22, x23, [sp, #112]
   2e484:	ldr	q1, [x0]
   2e488:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e48c:	tbz	w0, #31, 2e650 <__clog10l@@GLIBC_2.17+0x450>
   2e490:	mov	w27, #0xffffffff            	// #-1
   2e494:	mov	x26, #0x0                   	// #0
   2e498:	mov	x21, #0x0                   	// #0
   2e49c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e4a0:	add	x0, x0, #0x2f0
   2e4a4:	stp	x22, x23, [sp, #96]
   2e4a8:	ldr	q1, [x0]
   2e4ac:	ldr	q0, [sp, #96]
   2e4b0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e4b4:	cmp	w0, #0x0
   2e4b8:	b.le	2e500 <__clog10l@@GLIBC_2.17+0x300>
   2e4bc:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2e4c0:	add	x0, x0, #0xae0
   2e4c4:	stp	x22, x23, [sp, #96]
   2e4c8:	ldr	q1, [x0]
   2e4cc:	ldr	q0, [sp, #96]
   2e4d0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e4d4:	tbz	w0, #31, 2e500 <__clog10l@@GLIBC_2.17+0x300>
   2e4d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e4dc:	add	x0, x0, #0x2f0
   2e4e0:	stp	x26, x21, [sp, #96]
   2e4e4:	ldr	q1, [x0]
   2e4e8:	ldr	q0, [sp, #96]
   2e4ec:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e4f0:	cmp	w27, #0x0
   2e4f4:	cset	w1, eq  // eq = none
   2e4f8:	tst	w1, w0, lsr #31
   2e4fc:	b.ne	2e88c <__clog10l@@GLIBC_2.17+0x68c>  // b.any
   2e500:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e504:	add	x0, x0, #0x2f0
   2e508:	stp	x22, x23, [sp, #96]
   2e50c:	ldr	q1, [x0]
   2e510:	ldr	q0, [sp, #96]
   2e514:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e518:	tbnz	w0, #31, 2e670 <__clog10l@@GLIBC_2.17+0x470>
   2e51c:	stp	x26, x21, [sp, #96]
   2e520:	stp	x22, x23, [sp, #112]
   2e524:	ldr	q1, [sp, #96]
   2e528:	ldr	q0, [sp, #112]
   2e52c:	bl	14a50 <__hypotl_finite@GLIBC_2.17>
   2e530:	bl	1cda0 <__log10l_finite@GLIBC_2.17>
   2e534:	str	q0, [sp, #96]
   2e538:	mov	w0, w27
   2e53c:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2e540:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e544:	add	x0, x0, #0x1f0
   2e548:	ldr	q1, [x0]
   2e54c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e550:	mov	v1.16b, v0.16b
   2e554:	ldr	q2, [sp, #96]
   2e558:	mov	v0.16b, v2.16b
   2e55c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2e560:	str	q0, [sp, #128]
   2e564:	b	2e3b0 <__clog10l@@GLIBC_2.17+0x1b0>
   2e568:	stp	x19, x25, [sp, #96]
   2e56c:	and	x21, x24, #0x7fffffffffffffff
   2e570:	mov	x26, x20
   2e574:	movi	v1.2d, #0x0
   2e578:	ldr	q0, [sp, #96]
   2e57c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2e580:	stp	x20, x21, [sp, #96]
   2e584:	stp	x20, x21, [sp, #112]
   2e588:	ldr	q1, [sp, #96]
   2e58c:	ldr	q0, [sp, #112]
   2e590:	cbnz	w0, 2e60c <__clog10l@@GLIBC_2.17+0x40c>
   2e594:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e598:	cbnz	w0, 2e440 <__clog10l@@GLIBC_2.17+0x240>
   2e59c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e5a0:	add	x0, x0, #0x300
   2e5a4:	stp	x20, x21, [sp, #96]
   2e5a8:	ldr	q1, [x0]
   2e5ac:	ldr	q0, [sp, #96]
   2e5b0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e5b4:	cbnz	w0, 2e5d8 <__clog10l@@GLIBC_2.17+0x3d8>
   2e5b8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e5bc:	add	x0, x0, #0x300
   2e5c0:	stp	x20, x21, [sp, #96]
   2e5c4:	ldr	q1, [x0]
   2e5c8:	ldr	q0, [sp, #96]
   2e5cc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e5d0:	cmp	w0, #0x0
   2e5d4:	b.gt	2e5f4 <__clog10l@@GLIBC_2.17+0x3f4>
   2e5d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e5dc:	add	x0, x0, #0xeb0
   2e5e0:	stp	x20, x21, [sp, #96]
   2e5e4:	ldr	q1, [x0]
   2e5e8:	ldr	q0, [sp, #96]
   2e5ec:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e5f0:	tbnz	w0, #31, 2e7e8 <__clog10l@@GLIBC_2.17+0x5e8>
   2e5f4:	stp	x27, x28, [sp, #80]
   2e5f8:	b	2e2c8 <__clog10l@@GLIBC_2.17+0xc8>
   2e5fc:	ldr	q0, [sp, #128]
   2e600:	mov	v1.16b, v0.16b
   2e604:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e608:	b	2e3b0 <__clog10l@@GLIBC_2.17+0x1b0>
   2e60c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e610:	cbz	w0, 2e2a4 <__clog10l@@GLIBC_2.17+0xa4>
   2e614:	b	2e440 <__clog10l@@GLIBC_2.17+0x240>
   2e618:	stp	x22, x23, [sp, #96]
   2e61c:	mov	w0, #0x71                  	// #113
   2e620:	mov	w27, w0
   2e624:	ldr	q0, [sp, #96]
   2e628:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2e62c:	stp	x26, x21, [sp, #96]
   2e630:	mov	w0, w27
   2e634:	str	q0, [sp, #112]
   2e638:	ldr	q0, [sp, #96]
   2e63c:	ldp	x22, x23, [sp, #112]
   2e640:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2e644:	str	q0, [sp, #96]
   2e648:	ldp	x26, x21, [sp, #96]
   2e64c:	b	2e49c <__clog10l@@GLIBC_2.17+0x29c>
   2e650:	stp	x26, x21, [sp, #96]
   2e654:	mov	w0, #0xffffffff            	// #-1
   2e658:	mov	w27, w0
   2e65c:	ldr	q0, [sp, #96]
   2e660:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2e664:	str	q0, [sp, #96]
   2e668:	ldp	x26, x21, [sp, #96]
   2e66c:	b	2e49c <__clog10l@@GLIBC_2.17+0x29c>
   2e670:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e674:	add	x0, x0, #0x330
   2e678:	stp	x22, x23, [sp, #96]
   2e67c:	cmp	w27, #0x0
   2e680:	cset	w28, eq  // eq = none
   2e684:	ldr	q1, [x0]
   2e688:	ldr	q0, [sp, #96]
   2e68c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e690:	tbnz	w0, #31, 2e6b4 <__clog10l@@GLIBC_2.17+0x4b4>
   2e694:	adrp	x0, 64000 <f64xsubf128@@GLIBC_2.28+0x10280>
   2e698:	add	x0, x0, #0xec0
   2e69c:	stp	x26, x21, [sp, #96]
   2e6a0:	ldr	q1, [x0]
   2e6a4:	ldr	q0, [sp, #96]
   2e6a8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e6ac:	tst	w28, w0, lsr #31
   2e6b0:	b.ne	2e928 <__clog10l@@GLIBC_2.17+0x728>  // b.any
   2e6b4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e6b8:	add	x0, x0, #0x330
   2e6bc:	stp	x22, x23, [sp, #96]
   2e6c0:	ldr	q1, [x0]
   2e6c4:	ldr	q0, [sp, #96]
   2e6c8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e6cc:	mvn	w0, w0
   2e6d0:	tst	w28, w0, lsr #31
   2e6d4:	b.eq	2e51c <__clog10l@@GLIBC_2.17+0x31c>  // b.none
   2e6d8:	stp	x22, x23, [sp, #96]
   2e6dc:	stp	x22, x23, [sp, #112]
   2e6e0:	ldr	q1, [sp, #96]
   2e6e4:	ldr	q0, [sp, #112]
   2e6e8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e6ec:	stp	x26, x21, [sp, #96]
   2e6f0:	stp	x26, x21, [sp, #112]
   2e6f4:	ldr	q1, [sp, #96]
   2e6f8:	str	q0, [sp, #96]
   2e6fc:	ldr	q0, [sp, #112]
   2e700:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e704:	mov	v1.16b, v0.16b
   2e708:	ldr	q2, [sp, #96]
   2e70c:	mov	v0.16b, v2.16b
   2e710:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2e714:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e718:	add	x0, x0, #0x330
   2e71c:	ldr	q1, [x0]
   2e720:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e724:	tbnz	w0, #31, 2e51c <__clog10l@@GLIBC_2.17+0x31c>
   2e728:	stp	x26, x21, [sp, #96]
   2e72c:	stp	x22, x23, [sp, #112]
   2e730:	ldr	q1, [sp, #96]
   2e734:	ldr	q0, [sp, #112]
   2e738:	bl	25b98 <ldexpf128@@GLIBC_2.27+0x1b8>
   2e73c:	bl	22378 <floorf128@@GLIBC_2.27+0x128>
   2e740:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e744:	add	x0, x0, #0x1e0
   2e748:	ldr	q1, [x0]
   2e74c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e750:	str	q0, [sp, #128]
   2e754:	b	2e3b0 <__clog10l@@GLIBC_2.17+0x1b0>
   2e758:	mov	w27, #0x0                   	// #0
   2e75c:	b	2e49c <__clog10l@@GLIBC_2.17+0x29c>
   2e760:	and	x24, x24, #0x7fffffffffffffff
   2e764:	stp	x20, x24, [sp, #96]
   2e768:	stp	x20, x24, [sp, #112]
   2e76c:	ldr	q1, [sp, #96]
   2e770:	ldr	q0, [sp, #112]
   2e774:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e778:	cbnz	w0, 2e7d0 <__clog10l@@GLIBC_2.17+0x5d0>
   2e77c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e780:	add	x0, x0, #0x300
   2e784:	stp	x20, x24, [sp, #96]
   2e788:	ldr	q1, [x0]
   2e78c:	ldr	q0, [sp, #96]
   2e790:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e794:	cbnz	w0, 2e7d0 <__clog10l@@GLIBC_2.17+0x5d0>
   2e798:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e79c:	add	x0, x0, #0x300
   2e7a0:	stp	x20, x24, [sp, #96]
   2e7a4:	ldr	q1, [x0]
   2e7a8:	ldr	q0, [sp, #96]
   2e7ac:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2e7b0:	cmp	w0, #0x0
   2e7b4:	b.le	2e7d0 <__clog10l@@GLIBC_2.17+0x5d0>
   2e7b8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e7bc:	add	x0, x0, #0x130
   2e7c0:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2e7c4:	ldr	q0, [x0]
   2e7c8:	mov	x0, #0x0                   	// #0
   2e7cc:	b	2e3e8 <__clog10l@@GLIBC_2.17+0x1e8>
   2e7d0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e7d4:	add	x0, x0, #0x1b0
   2e7d8:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2e7dc:	ldr	q0, [x0]
   2e7e0:	mov	x0, #0x0                   	// #0
   2e7e4:	b	2e3e8 <__clog10l@@GLIBC_2.17+0x1e8>
   2e7e8:	movi	v1.2d, #0x0
   2e7ec:	stp	x20, x24, [sp, #96]
   2e7f0:	ldr	q0, [sp, #96]
   2e7f4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2e7f8:	cbnz	w0, 2e5f4 <__clog10l@@GLIBC_2.17+0x3f4>
   2e7fc:	mov	x0, #0xe68b                	// #59019
   2e800:	lsr	x25, x25, #63
   2e804:	movk	x0, #0x1200, lsl #16
   2e808:	cmp	w25, #0x0
   2e80c:	movk	x0, #0xd723, lsl #32
   2e810:	stp	x19, x23, [sp, #96]
   2e814:	movk	x0, #0xb0e, lsl #48
   2e818:	csel	x19, x0, xzr, ne  // ne = any
   2e81c:	and	x0, x24, #0x8000000000000000
   2e820:	mov	x24, #0x2fba                	// #12218
   2e824:	ldr	q1, [sp, #96]
   2e828:	movk	x24, #0xc4cb, lsl #16
   2e82c:	movk	x24, #0x5d47, lsl #32
   2e830:	movk	x24, #0x3fff, lsl #48
   2e834:	csel	x24, x24, xzr, ne  // ne = any
   2e838:	orr	x24, x24, x0
   2e83c:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2e840:	add	x0, x0, #0xfd0
   2e844:	ldr	q0, [x0]
   2e848:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   2e84c:	mov	x0, x19
   2e850:	stp	x0, x24, [sp, #96]
   2e854:	ldp	x19, x20, [sp, #16]
   2e858:	ldp	x21, x22, [sp, #32]
   2e85c:	ldp	x23, x24, [sp, #48]
   2e860:	ldp	x25, x26, [sp, #64]
   2e864:	ldr	q1, [sp, #96]
   2e868:	ldp	x29, x30, [sp], #144
   2e86c:	ret
   2e870:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e874:	add	x0, x0, #0x130
   2e878:	mov	x24, #0x7fff800000000000    	// #9223231299366420480
   2e87c:	ldp	x21, x22, [sp, #32]
   2e880:	ldr	q0, [x0]
   2e884:	mov	x0, #0x0                   	// #0
   2e888:	b	2e3e8 <__clog10l@@GLIBC_2.17+0x1e8>
   2e88c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e890:	add	x0, x0, #0x2f0
   2e894:	stp	x22, x23, [sp, #96]
   2e898:	ldr	q1, [x0]
   2e89c:	ldr	q0, [sp, #96]
   2e8a0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2e8a4:	stp	x22, x23, [sp, #96]
   2e8a8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e8ac:	add	x0, x0, #0x2f0
   2e8b0:	str	q0, [sp, #112]
   2e8b4:	ldr	q0, [sp, #96]
   2e8b8:	ldr	q1, [x0]
   2e8bc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2e8c0:	mov	v1.16b, v0.16b
   2e8c4:	ldr	q2, [sp, #112]
   2e8c8:	mov	v0.16b, v2.16b
   2e8cc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e8d0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2e8d4:	add	x0, x0, #0x180
   2e8d8:	stp	x26, x21, [sp, #96]
   2e8dc:	str	q0, [sp, #112]
   2e8e0:	ldr	q1, [x0]
   2e8e4:	ldr	q0, [sp, #96]
   2e8e8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e8ec:	ldr	q2, [sp, #112]
   2e8f0:	tbnz	w0, #31, 2e920 <__clog10l@@GLIBC_2.17+0x720>
   2e8f4:	stp	x26, x21, [sp, #96]
   2e8f8:	stp	x26, x21, [sp, #112]
   2e8fc:	ldr	q1, [sp, #96]
   2e900:	ldr	q0, [sp, #112]
   2e904:	str	q2, [sp, #128]
   2e908:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e90c:	mov	v1.16b, v0.16b
   2e910:	ldr	q2, [sp, #128]
   2e914:	mov	v0.16b, v2.16b
   2e918:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2e91c:	mov	v2.16b, v0.16b
   2e920:	mov	v0.16b, v2.16b
   2e924:	b	2e73c <__clog10l@@GLIBC_2.17+0x53c>
   2e928:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e92c:	add	x0, x0, #0x2f0
   2e930:	stp	x22, x23, [sp, #96]
   2e934:	ldr	q1, [x0]
   2e938:	ldr	q0, [sp, #96]
   2e93c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2e940:	stp	x22, x23, [sp, #96]
   2e944:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e948:	add	x0, x0, #0x2f0
   2e94c:	str	q0, [sp, #112]
   2e950:	ldr	q0, [sp, #96]
   2e954:	ldr	q1, [x0]
   2e958:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2e95c:	mov	v1.16b, v0.16b
   2e960:	ldr	q2, [sp, #112]
   2e964:	mov	v0.16b, v2.16b
   2e968:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2e96c:	b	2e73c <__clog10l@@GLIBC_2.17+0x53c>

000000000002e970 <fdimf128@@GLIBC_2.27>:
   2e970:	stp	x29, x30, [sp, #-112]!
   2e974:	mov	x29, sp
   2e978:	stp	x19, x20, [sp, #16]
   2e97c:	stp	x21, x22, [sp, #32]
   2e980:	stp	x23, x24, [sp, #48]
   2e984:	str	q0, [sp, #80]
   2e988:	str	q1, [sp, #96]
   2e98c:	ldp	x24, x19, [sp, #80]
   2e990:	ldp	x23, x21, [sp, #96]
   2e994:	stp	x23, x21, [sp, #80]
   2e998:	stp	x24, x19, [sp, #96]
   2e99c:	ldr	q1, [sp, #80]
   2e9a0:	ldr	q0, [sp, #96]
   2e9a4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2e9a8:	cbnz	w0, 2e9c8 <fdimf128@@GLIBC_2.27+0x58>
   2e9ac:	stp	x23, x21, [sp, #80]
   2e9b0:	stp	x24, x19, [sp, #96]
   2e9b4:	ldr	q1, [sp, #80]
   2e9b8:	ldr	q0, [sp, #96]
   2e9bc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2e9c0:	cmp	w0, #0x0
   2e9c4:	b.le	2ea88 <fdimf128@@GLIBC_2.27+0x118>
   2e9c8:	stp	x23, x21, [sp, #80]
   2e9cc:	stp	x24, x19, [sp, #96]
   2e9d0:	ldr	q1, [sp, #80]
   2e9d4:	ldr	q0, [sp, #96]
   2e9d8:	str	x25, [sp, #64]
   2e9dc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2e9e0:	str	q0, [sp, #80]
   2e9e4:	ldp	x20, x22, [sp, #80]
   2e9e8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2e9ec:	add	x0, x0, #0x300
   2e9f0:	ldr	q1, [x0]
   2e9f4:	and	x25, x22, #0x7fffffffffffffff
   2e9f8:	str	x25, [sp, #88]
   2e9fc:	ldr	q0, [sp, #80]
   2ea00:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ea04:	cbnz	w0, 2ea68 <fdimf128@@GLIBC_2.27+0xf8>
   2ea08:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ea0c:	add	x0, x0, #0x300
   2ea10:	stp	x20, x25, [sp, #80]
   2ea14:	ldr	q1, [x0]
   2ea18:	ldr	q0, [sp, #80]
   2ea1c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ea20:	cmp	w0, #0x0
   2ea24:	b.le	2ea68 <fdimf128@@GLIBC_2.27+0xf8>
   2ea28:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ea2c:	add	x0, x0, #0x300
   2ea30:	and	x19, x19, #0x7fffffffffffffff
   2ea34:	stp	x24, x19, [sp, #80]
   2ea38:	ldr	q1, [x0]
   2ea3c:	ldr	q0, [sp, #80]
   2ea40:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ea44:	cbnz	w0, 2eaac <fdimf128@@GLIBC_2.27+0x13c>
   2ea48:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ea4c:	add	x0, x0, #0x300
   2ea50:	stp	x24, x19, [sp, #80]
   2ea54:	ldr	q1, [x0]
   2ea58:	ldr	q0, [sp, #80]
   2ea5c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ea60:	cmp	w0, #0x0
   2ea64:	b.le	2eaac <fdimf128@@GLIBC_2.27+0x13c>
   2ea68:	ldr	x25, [sp, #64]
   2ea6c:	stp	x20, x22, [sp, #80]
   2ea70:	ldp	x19, x20, [sp, #16]
   2ea74:	ldp	x21, x22, [sp, #32]
   2ea78:	ldp	x23, x24, [sp, #48]
   2ea7c:	ldr	q0, [sp, #80]
   2ea80:	ldp	x29, x30, [sp], #112
   2ea84:	ret
   2ea88:	mov	x20, #0x0                   	// #0
   2ea8c:	mov	x22, #0x0                   	// #0
   2ea90:	stp	x20, x22, [sp, #80]
   2ea94:	ldp	x19, x20, [sp, #16]
   2ea98:	ldp	x21, x22, [sp, #32]
   2ea9c:	ldp	x23, x24, [sp, #48]
   2eaa0:	ldr	q0, [sp, #80]
   2eaa4:	ldp	x29, x30, [sp], #112
   2eaa8:	ret
   2eaac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2eab0:	add	x0, x0, #0x300
   2eab4:	and	x21, x21, #0x7fffffffffffffff
   2eab8:	stp	x23, x21, [sp, #80]
   2eabc:	ldr	q1, [x0]
   2eac0:	ldr	q0, [sp, #80]
   2eac4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2eac8:	cbnz	w0, 2eaec <fdimf128@@GLIBC_2.27+0x17c>
   2eacc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ead0:	add	x0, x0, #0x300
   2ead4:	stp	x23, x21, [sp, #80]
   2ead8:	ldr	q1, [x0]
   2eadc:	ldr	q0, [sp, #80]
   2eae0:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2eae4:	cmp	w0, #0x0
   2eae8:	b.gt	2ea68 <fdimf128@@GLIBC_2.27+0xf8>
   2eaec:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2eaf0:	ldr	x0, [x0, #3976]
   2eaf4:	mrs	x1, tpidr_el0
   2eaf8:	mov	w2, #0x22                  	// #34
   2eafc:	ldr	x25, [sp, #64]
   2eb00:	str	w2, [x1, x0]
   2eb04:	b	2ea6c <fdimf128@@GLIBC_2.27+0xfc>

000000000002eb08 <nextdownf128@@GLIBC_2.27>:
   2eb08:	stp	x29, x30, [sp, #-32]!
   2eb0c:	mov	x29, sp
   2eb10:	str	q0, [sp, #16]
   2eb14:	ldr	x1, [sp, #24]
   2eb18:	eor	x1, x1, #0x8000000000000000
   2eb1c:	str	x1, [sp, #24]
   2eb20:	ldr	q0, [sp, #16]
   2eb24:	bl	26e20 <nextupf128@@GLIBC_2.27>
   2eb28:	str	q0, [sp, #16]
   2eb2c:	ldr	x1, [sp, #24]
   2eb30:	eor	x1, x1, #0x8000000000000000
   2eb34:	str	x1, [sp, #24]
   2eb38:	ldr	q0, [sp, #16]
   2eb3c:	ldp	x29, x30, [sp], #32
   2eb40:	ret
   2eb44:	nop

000000000002eb48 <fmaxf128@@GLIBC_2.27>:
   2eb48:	stp	x29, x30, [sp, #-48]!
   2eb4c:	mov	x29, sp
   2eb50:	str	q0, [sp, #16]
   2eb54:	str	q1, [sp, #32]
   2eb58:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2eb5c:	cbnz	w0, 2eb70 <fmaxf128@@GLIBC_2.27+0x28>
   2eb60:	ldr	q0, [sp, #16]
   2eb64:	ldr	q1, [sp, #32]
   2eb68:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2eb6c:	tbz	w0, #31, 2ebd8 <fmaxf128@@GLIBC_2.27+0x90>
   2eb70:	ldr	q0, [sp, #16]
   2eb74:	ldr	q1, [sp, #32]
   2eb78:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2eb7c:	cbnz	w0, 2eb90 <fmaxf128@@GLIBC_2.27+0x48>
   2eb80:	ldr	q0, [sp, #16]
   2eb84:	ldr	q1, [sp, #32]
   2eb88:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2eb8c:	tbnz	w0, #31, 2ebcc <fmaxf128@@GLIBC_2.27+0x84>
   2eb90:	ldr	q0, [sp, #16]
   2eb94:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   2eb98:	cbnz	w0, 2eba8 <fmaxf128@@GLIBC_2.27+0x60>
   2eb9c:	ldr	q0, [sp, #32]
   2eba0:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   2eba4:	cbz	w0, 2ebbc <fmaxf128@@GLIBC_2.27+0x74>
   2eba8:	ldr	q0, [sp, #16]
   2ebac:	ldr	q1, [sp, #32]
   2ebb0:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2ebb4:	ldp	x29, x30, [sp], #48
   2ebb8:	ret
   2ebbc:	ldr	q0, [sp, #32]
   2ebc0:	mov	v1.16b, v0.16b
   2ebc4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ebc8:	cbnz	w0, 2ebd8 <fmaxf128@@GLIBC_2.27+0x90>
   2ebcc:	ldr	q0, [sp, #32]
   2ebd0:	ldp	x29, x30, [sp], #48
   2ebd4:	ret
   2ebd8:	ldr	q0, [sp, #16]
   2ebdc:	ldp	x29, x30, [sp], #48
   2ebe0:	ret
   2ebe4:	nop

000000000002ebe8 <fminf128@@GLIBC_2.27>:
   2ebe8:	stp	x29, x30, [sp, #-48]!
   2ebec:	mov	x29, sp
   2ebf0:	str	q0, [sp, #16]
   2ebf4:	str	q1, [sp, #32]
   2ebf8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ebfc:	cbnz	w0, 2ec14 <fminf128@@GLIBC_2.27+0x2c>
   2ec00:	ldr	q0, [sp, #16]
   2ec04:	ldr	q1, [sp, #32]
   2ec08:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2ec0c:	cmp	w0, #0x0
   2ec10:	b.le	2ec80 <fminf128@@GLIBC_2.27+0x98>
   2ec14:	ldr	q0, [sp, #16]
   2ec18:	ldr	q1, [sp, #32]
   2ec1c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ec20:	cbnz	w0, 2ec38 <fminf128@@GLIBC_2.27+0x50>
   2ec24:	ldr	q0, [sp, #16]
   2ec28:	ldr	q1, [sp, #32]
   2ec2c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ec30:	cmp	w0, #0x0
   2ec34:	b.gt	2ec74 <fminf128@@GLIBC_2.27+0x8c>
   2ec38:	ldr	q0, [sp, #16]
   2ec3c:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   2ec40:	cbnz	w0, 2ec50 <fminf128@@GLIBC_2.27+0x68>
   2ec44:	ldr	q0, [sp, #32]
   2ec48:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   2ec4c:	cbz	w0, 2ec64 <fminf128@@GLIBC_2.27+0x7c>
   2ec50:	ldr	q0, [sp, #16]
   2ec54:	ldr	q1, [sp, #32]
   2ec58:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2ec5c:	ldp	x29, x30, [sp], #48
   2ec60:	ret
   2ec64:	ldr	q0, [sp, #32]
   2ec68:	mov	v1.16b, v0.16b
   2ec6c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ec70:	cbnz	w0, 2ec80 <fminf128@@GLIBC_2.27+0x98>
   2ec74:	ldr	q0, [sp, #32]
   2ec78:	ldp	x29, x30, [sp], #48
   2ec7c:	ret
   2ec80:	ldr	q0, [sp, #16]
   2ec84:	ldp	x29, x30, [sp], #48
   2ec88:	ret
   2ec8c:	nop

000000000002ec90 <nanf128@@GLIBC_2.27>:
   2ec90:	mov	w2, #0x0                   	// #0
   2ec94:	mov	x1, #0x0                   	// #0
   2ec98:	b	ba10 <__strtold_nan@plt>
   2ec9c:	nop

000000000002eca0 <__iseqsigl@@GLIBC_2.25>:
   2eca0:	stp	x29, x30, [sp, #-64]!
   2eca4:	mov	x29, sp
   2eca8:	str	x19, [sp, #16]
   2ecac:	str	q1, [sp, #32]
   2ecb0:	str	q0, [sp, #48]
   2ecb4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2ecb8:	cmp	w0, #0x0
   2ecbc:	ldr	q2, [sp, #32]
   2ecc0:	ldr	q4, [sp, #48]
   2ecc4:	cset	w19, le
   2ecc8:	mov	v1.16b, v2.16b
   2eccc:	mov	v0.16b, v4.16b
   2ecd0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2ecd4:	mvn	w1, w0
   2ecd8:	cmp	w19, #0x0
   2ecdc:	mov	w0, #0x1                   	// #1
   2ece0:	lsr	w1, w1, #31
   2ece4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   2ece8:	b.ne	2ed10 <__iseqsigl@@GLIBC_2.25+0x70>  // b.any
   2ecec:	cmp	w19, #0x0
   2ecf0:	mov	w0, #0x0                   	// #0
   2ecf4:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   2ecf8:	b.ne	2ed10 <__iseqsigl@@GLIBC_2.25+0x70>  // b.any
   2ecfc:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2ed00:	ldr	x1, [x1, #3976]
   2ed04:	mrs	x2, tpidr_el0
   2ed08:	mov	w3, #0x21                  	// #33
   2ed0c:	str	w3, [x2, x1]
   2ed10:	ldr	x19, [sp, #16]
   2ed14:	ldp	x29, x30, [sp], #64
   2ed18:	ret
   2ed1c:	nop

000000000002ed20 <canonicalizef128@@GLIBC_2.27>:
   2ed20:	stp	x29, x30, [sp, #-48]!
   2ed24:	mov	x29, sp
   2ed28:	ldr	q0, [x1]
   2ed2c:	str	x19, [sp, #16]
   2ed30:	mov	x19, x0
   2ed34:	str	q0, [sp, #32]
   2ed38:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   2ed3c:	ldr	q0, [sp, #32]
   2ed40:	cbz	w0, 2ed4c <canonicalizef128@@GLIBC_2.27+0x2c>
   2ed44:	mov	v1.16b, v0.16b
   2ed48:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2ed4c:	str	q0, [x19]
   2ed50:	mov	w0, #0x0                   	// #0
   2ed54:	ldr	x19, [sp, #16]
   2ed58:	ldp	x29, x30, [sp], #48
   2ed5c:	ret

000000000002ed60 <significandl@@GLIBC_2.17>:
   2ed60:	stp	x29, x30, [sp, #-32]!
   2ed64:	mov	x29, sp
   2ed68:	str	q0, [sp, #16]
   2ed6c:	bl	2ed90 <ilogbf128@@GLIBC_2.27>
   2ed70:	neg	w0, w0
   2ed74:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2ed78:	ldr	q2, [sp, #16]
   2ed7c:	ldp	x29, x30, [sp], #32
   2ed80:	mov	v1.16b, v0.16b
   2ed84:	mov	v0.16b, v2.16b
   2ed88:	b	1e550 <__scalbl_finite@GLIBC_2.17>
   2ed8c:	nop

000000000002ed90 <ilogbf128@@GLIBC_2.27>:
   2ed90:	stp	x29, x30, [sp, #-32]!
   2ed94:	mov	x29, sp
   2ed98:	str	x19, [sp, #16]
   2ed9c:	bl	1f640 <__gammal_r_finite@GLIBC_2.17+0x550>
   2eda0:	mov	w19, w0
   2eda4:	mov	w0, #0x7fffffff            	// #2147483647
   2eda8:	cmp	w19, w0
   2edac:	mov	w0, #0x80000001            	// #-2147483647
   2edb0:	ccmp	w19, w0, #0x4, ne  // ne = any
   2edb4:	b.eq	2edc8 <ilogbf128@@GLIBC_2.27+0x38>  // b.none
   2edb8:	mov	w0, w19
   2edbc:	ldr	x19, [sp, #16]
   2edc0:	ldp	x29, x30, [sp], #32
   2edc4:	ret
   2edc8:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2edcc:	ldr	x1, [x1, #3976]
   2edd0:	mrs	x2, tpidr_el0
   2edd4:	mov	w3, #0x21                  	// #33
   2edd8:	mov	w0, #0x1                   	// #1
   2eddc:	str	w3, [x2, x1]
   2ede0:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   2ede4:	mov	w0, w19
   2ede8:	ldr	x19, [sp, #16]
   2edec:	ldp	x29, x30, [sp], #32
   2edf0:	ret
   2edf4:	nop

000000000002edf8 <llogbf128@@GLIBC_2.27>:
   2edf8:	stp	x29, x30, [sp, #-32]!
   2edfc:	mov	x29, sp
   2ee00:	str	x19, [sp, #16]
   2ee04:	bl	1f640 <__gammal_r_finite@GLIBC_2.17+0x550>
   2ee08:	mov	w1, #0x80000001            	// #-2147483647
   2ee0c:	cmp	w0, w1
   2ee10:	b.eq	2ee34 <llogbf128@@GLIBC_2.27+0x3c>  // b.none
   2ee14:	mov	w1, #0x7fffffff            	// #2147483647
   2ee18:	sxtw	x19, w0
   2ee1c:	cmp	w0, w1
   2ee20:	b.eq	2ee64 <llogbf128@@GLIBC_2.27+0x6c>  // b.none
   2ee24:	mov	x0, x19
   2ee28:	ldr	x19, [sp, #16]
   2ee2c:	ldp	x29, x30, [sp], #32
   2ee30:	ret
   2ee34:	mov	x19, #0x8000000000000001    	// #-9223372036854775807
   2ee38:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2ee3c:	ldr	x1, [x1, #3976]
   2ee40:	mrs	x2, tpidr_el0
   2ee44:	mov	w3, #0x21                  	// #33
   2ee48:	mov	w0, #0x1                   	// #1
   2ee4c:	str	w3, [x2, x1]
   2ee50:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   2ee54:	mov	x0, x19
   2ee58:	ldr	x19, [sp, #16]
   2ee5c:	ldp	x29, x30, [sp], #32
   2ee60:	ret
   2ee64:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
   2ee68:	b	2ee38 <llogbf128@@GLIBC_2.27+0x40>
   2ee6c:	nop

000000000002ee70 <log1pf128@@GLIBC_2.27>:
   2ee70:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2ee74:	add	x0, x0, #0xfd0
   2ee78:	stp	x29, x30, [sp, #-32]!
   2ee7c:	mov	x29, sp
   2ee80:	ldr	q1, [x0]
   2ee84:	str	q0, [sp, #16]
   2ee88:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ee8c:	cbnz	w0, 2eeac <log1pf128@@GLIBC_2.27+0x3c>
   2ee90:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2ee94:	add	x0, x0, #0xfd0
   2ee98:	ldr	q0, [sp, #16]
   2ee9c:	ldr	q1, [x0]
   2eea0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2eea4:	cmp	w0, #0x0
   2eea8:	b.le	2eeb8 <log1pf128@@GLIBC_2.27+0x48>
   2eeac:	ldr	q0, [sp, #16]
   2eeb0:	ldp	x29, x30, [sp], #32
   2eeb4:	b	22378 <floorf128@@GLIBC_2.27+0x128>
   2eeb8:	adrp	x0, 5c000 <f64xsubf128@@GLIBC_2.28+0x8280>
   2eebc:	add	x0, x0, #0xfd0
   2eec0:	ldr	q0, [sp, #16]
   2eec4:	ldr	q1, [x0]
   2eec8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2eecc:	cbnz	w0, 2eee8 <log1pf128@@GLIBC_2.27+0x78>
   2eed0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2eed4:	ldr	x0, [x0, #3976]
   2eed8:	mrs	x1, tpidr_el0
   2eedc:	mov	w2, #0x22                  	// #34
   2eee0:	str	w2, [x1, x0]
   2eee4:	b	2eeac <log1pf128@@GLIBC_2.27+0x3c>
   2eee8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2eeec:	ldr	x0, [x0, #3976]
   2eef0:	mrs	x1, tpidr_el0
   2eef4:	mov	w2, #0x21                  	// #33
   2eef8:	str	w2, [x1, x0]
   2eefc:	b	2eeac <log1pf128@@GLIBC_2.27+0x3c>

000000000002ef00 <scalblnf128@@GLIBC_2.27>:
   2ef00:	stp	x29, x30, [sp, #-80]!
   2ef04:	mov	x29, sp
   2ef08:	stp	x19, x20, [sp, #16]
   2ef0c:	str	q0, [sp, #48]
   2ef10:	ldp	x19, x20, [sp, #48]
   2ef14:	stp	x21, x22, [sp, #32]
   2ef18:	mov	x21, x0
   2ef1c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ef20:	add	x0, x0, #0x300
   2ef24:	and	x22, x20, #0x7fffffffffffffff
   2ef28:	str	x22, [sp, #56]
   2ef2c:	ldr	q1, [x0]
   2ef30:	ldr	q0, [sp, #48]
   2ef34:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2ef38:	cbnz	w0, 2ef70 <scalblnf128@@GLIBC_2.27+0x70>
   2ef3c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2ef40:	add	x0, x0, #0x300
   2ef44:	stp	x19, x22, [sp, #48]
   2ef48:	ldr	q1, [x0]
   2ef4c:	ldr	q0, [sp, #48]
   2ef50:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2ef54:	cmp	w0, #0x0
   2ef58:	b.gt	2ef70 <scalblnf128@@GLIBC_2.27+0x70>
   2ef5c:	movi	v1.2d, #0x0
   2ef60:	stp	x19, x20, [sp, #48]
   2ef64:	ldr	q0, [sp, #48]
   2ef68:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2ef6c:	cbnz	w0, 2efa4 <scalblnf128@@GLIBC_2.27+0xa4>
   2ef70:	stp	x19, x20, [sp, #48]
   2ef74:	stp	x19, x20, [sp, #64]
   2ef78:	ldr	q1, [sp, #48]
   2ef7c:	ldr	q0, [sp, #64]
   2ef80:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2ef84:	str	q0, [sp, #48]
   2ef88:	ldp	x19, x20, [sp, #48]
   2ef8c:	stp	x19, x20, [sp, #48]
   2ef90:	ldp	x19, x20, [sp, #16]
   2ef94:	ldp	x21, x22, [sp, #32]
   2ef98:	ldr	q0, [sp, #48]
   2ef9c:	ldp	x29, x30, [sp], #80
   2efa0:	ret
   2efa4:	stp	x19, x20, [sp, #48]
   2efa8:	mov	x0, x21
   2efac:	ldr	q0, [sp, #48]
   2efb0:	bl	22ea8 <rintf128@@GLIBC_2.27+0xb8>
   2efb4:	str	q0, [sp, #48]
   2efb8:	ldp	x19, x20, [sp, #48]
   2efbc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2efc0:	add	x0, x0, #0x300
   2efc4:	ldr	q1, [x0]
   2efc8:	and	x21, x20, #0x7fffffffffffffff
   2efcc:	str	x21, [sp, #56]
   2efd0:	ldr	q0, [sp, #48]
   2efd4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2efd8:	cbnz	w0, 2f010 <scalblnf128@@GLIBC_2.27+0x110>
   2efdc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2efe0:	add	x0, x0, #0x300
   2efe4:	stp	x19, x21, [sp, #48]
   2efe8:	ldr	q1, [x0]
   2efec:	ldr	q0, [sp, #48]
   2eff0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2eff4:	cmp	w0, #0x0
   2eff8:	b.gt	2f010 <scalblnf128@@GLIBC_2.27+0x110>
   2effc:	movi	v1.2d, #0x0
   2f000:	stp	x19, x20, [sp, #48]
   2f004:	ldr	q0, [sp, #48]
   2f008:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2f00c:	cbnz	w0, 2ef8c <scalblnf128@@GLIBC_2.27+0x8c>
   2f010:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2f014:	ldr	x0, [x0, #3976]
   2f018:	mrs	x1, tpidr_el0
   2f01c:	mov	w2, #0x22                  	// #34
   2f020:	stp	x19, x20, [sp, #48]
   2f024:	ldp	x19, x20, [sp, #16]
   2f028:	str	w2, [x1, x0]
   2f02c:	ldp	x21, x22, [sp, #32]
   2f030:	ldr	q0, [sp, #48]
   2f034:	ldp	x29, x30, [sp], #80
   2f038:	ret
   2f03c:	nop

000000000002f040 <fmaxmagf128@@GLIBC_2.27>:
   2f040:	stp	x29, x30, [sp, #-96]!
   2f044:	mov	x29, sp
   2f048:	stp	x19, x20, [sp, #16]
   2f04c:	stp	x21, x22, [sp, #32]
   2f050:	str	q0, [sp, #64]
   2f054:	str	q1, [sp, #80]
   2f058:	ldp	x19, x0, [sp, #64]
   2f05c:	stp	x23, x24, [sp, #48]
   2f060:	ldp	x20, x22, [sp, #80]
   2f064:	and	x23, x0, #0x7fffffffffffffff
   2f068:	stp	x19, x23, [sp, #80]
   2f06c:	mov	x21, x0
   2f070:	ldr	q0, [sp, #80]
   2f074:	and	x24, x22, #0x7fffffffffffffff
   2f078:	stp	x20, x24, [sp, #64]
   2f07c:	ldr	q1, [sp, #64]
   2f080:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2f084:	cbnz	w0, 2f0a4 <fmaxmagf128@@GLIBC_2.27+0x64>
   2f088:	stp	x20, x24, [sp, #64]
   2f08c:	stp	x19, x23, [sp, #80]
   2f090:	ldr	q1, [sp, #64]
   2f094:	ldr	q0, [sp, #80]
   2f098:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2f09c:	cmp	w0, #0x0
   2f0a0:	b.gt	2f164 <fmaxmagf128@@GLIBC_2.27+0x124>
   2f0a4:	stp	x20, x24, [sp, #64]
   2f0a8:	stp	x19, x23, [sp, #80]
   2f0ac:	ldr	q1, [sp, #64]
   2f0b0:	ldr	q0, [sp, #80]
   2f0b4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2f0b8:	cbnz	w0, 2f0d4 <fmaxmagf128@@GLIBC_2.27+0x94>
   2f0bc:	stp	x20, x24, [sp, #64]
   2f0c0:	stp	x19, x23, [sp, #80]
   2f0c4:	ldr	q1, [sp, #64]
   2f0c8:	ldr	q0, [sp, #80]
   2f0cc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2f0d0:	tbnz	w0, #31, 2f124 <fmaxmagf128@@GLIBC_2.27+0xe4>
   2f0d4:	stp	x20, x24, [sp, #64]
   2f0d8:	stp	x19, x23, [sp, #80]
   2f0dc:	ldr	q1, [sp, #64]
   2f0e0:	ldr	q0, [sp, #80]
   2f0e4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2f0e8:	cbz	w0, 2f148 <fmaxmagf128@@GLIBC_2.27+0x108>
   2f0ec:	stp	x19, x21, [sp, #64]
   2f0f0:	ldr	q0, [sp, #64]
   2f0f4:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   2f0f8:	cbnz	w0, 2f184 <fmaxmagf128@@GLIBC_2.27+0x144>
   2f0fc:	stp	x20, x22, [sp, #64]
   2f100:	ldr	q0, [sp, #64]
   2f104:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   2f108:	cbnz	w0, 2f184 <fmaxmagf128@@GLIBC_2.27+0x144>
   2f10c:	stp	x20, x22, [sp, #64]
   2f110:	stp	x20, x22, [sp, #80]
   2f114:	ldr	q1, [sp, #64]
   2f118:	ldr	q0, [sp, #80]
   2f11c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2f120:	cbnz	w0, 2f164 <fmaxmagf128@@GLIBC_2.27+0x124>
   2f124:	mov	x0, x22
   2f128:	mov	x19, x20
   2f12c:	stp	x19, x0, [sp, #64]
   2f130:	ldp	x19, x20, [sp, #16]
   2f134:	ldp	x21, x22, [sp, #32]
   2f138:	ldp	x23, x24, [sp, #48]
   2f13c:	ldr	q0, [sp, #64]
   2f140:	ldp	x29, x30, [sp], #96
   2f144:	ret
   2f148:	stp	x20, x22, [sp, #64]
   2f14c:	stp	x19, x21, [sp, #80]
   2f150:	ldr	q1, [sp, #64]
   2f154:	ldr	q0, [sp, #80]
   2f158:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2f15c:	cmp	w0, #0x0
   2f160:	b.le	2f124 <fmaxmagf128@@GLIBC_2.27+0xe4>
   2f164:	mov	x0, x21
   2f168:	stp	x19, x0, [sp, #64]
   2f16c:	ldp	x19, x20, [sp, #16]
   2f170:	ldp	x21, x22, [sp, #32]
   2f174:	ldp	x23, x24, [sp, #48]
   2f178:	ldr	q0, [sp, #64]
   2f17c:	ldp	x29, x30, [sp], #96
   2f180:	ret
   2f184:	stp	x20, x22, [sp, #64]
   2f188:	stp	x19, x21, [sp, #80]
   2f18c:	ldr	q1, [sp, #64]
   2f190:	ldr	q0, [sp, #80]
   2f194:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2f198:	str	q0, [sp, #64]
   2f19c:	ldp	x19, x0, [sp, #64]
   2f1a0:	stp	x19, x0, [sp, #64]
   2f1a4:	ldp	x19, x20, [sp, #16]
   2f1a8:	ldp	x21, x22, [sp, #32]
   2f1ac:	ldp	x23, x24, [sp, #48]
   2f1b0:	ldr	q0, [sp, #64]
   2f1b4:	ldp	x29, x30, [sp], #96
   2f1b8:	ret
   2f1bc:	nop

000000000002f1c0 <fminmagf128@@GLIBC_2.27>:
   2f1c0:	stp	x29, x30, [sp, #-96]!
   2f1c4:	mov	x29, sp
   2f1c8:	stp	x19, x20, [sp, #16]
   2f1cc:	stp	x21, x22, [sp, #32]
   2f1d0:	str	q0, [sp, #64]
   2f1d4:	str	q1, [sp, #80]
   2f1d8:	ldp	x19, x0, [sp, #64]
   2f1dc:	stp	x23, x24, [sp, #48]
   2f1e0:	ldp	x20, x22, [sp, #80]
   2f1e4:	and	x23, x0, #0x7fffffffffffffff
   2f1e8:	stp	x19, x23, [sp, #80]
   2f1ec:	mov	x21, x0
   2f1f0:	ldr	q0, [sp, #80]
   2f1f4:	and	x24, x22, #0x7fffffffffffffff
   2f1f8:	stp	x20, x24, [sp, #64]
   2f1fc:	ldr	q1, [sp, #64]
   2f200:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2f204:	cbnz	w0, 2f220 <fminmagf128@@GLIBC_2.27+0x60>
   2f208:	stp	x20, x24, [sp, #64]
   2f20c:	stp	x19, x23, [sp, #80]
   2f210:	ldr	q1, [sp, #64]
   2f214:	ldr	q0, [sp, #80]
   2f218:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2f21c:	tbnz	w0, #31, 2f2e0 <fminmagf128@@GLIBC_2.27+0x120>
   2f220:	stp	x20, x24, [sp, #64]
   2f224:	stp	x19, x23, [sp, #80]
   2f228:	ldr	q1, [sp, #64]
   2f22c:	ldr	q0, [sp, #80]
   2f230:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2f234:	cbnz	w0, 2f254 <fminmagf128@@GLIBC_2.27+0x94>
   2f238:	stp	x20, x24, [sp, #64]
   2f23c:	stp	x19, x23, [sp, #80]
   2f240:	ldr	q1, [sp, #64]
   2f244:	ldr	q0, [sp, #80]
   2f248:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2f24c:	cmp	w0, #0x0
   2f250:	b.gt	2f2a4 <fminmagf128@@GLIBC_2.27+0xe4>
   2f254:	stp	x20, x24, [sp, #64]
   2f258:	stp	x19, x23, [sp, #80]
   2f25c:	ldr	q1, [sp, #64]
   2f260:	ldr	q0, [sp, #80]
   2f264:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   2f268:	cbz	w0, 2f2c8 <fminmagf128@@GLIBC_2.27+0x108>
   2f26c:	stp	x19, x21, [sp, #64]
   2f270:	ldr	q0, [sp, #64]
   2f274:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   2f278:	cbnz	w0, 2f300 <fminmagf128@@GLIBC_2.27+0x140>
   2f27c:	stp	x20, x22, [sp, #64]
   2f280:	ldr	q0, [sp, #64]
   2f284:	bl	254f0 <__issignalingl@@GLIBC_2.18>
   2f288:	cbnz	w0, 2f300 <fminmagf128@@GLIBC_2.27+0x140>
   2f28c:	stp	x20, x22, [sp, #64]
   2f290:	stp	x20, x22, [sp, #80]
   2f294:	ldr	q1, [sp, #64]
   2f298:	ldr	q0, [sp, #80]
   2f29c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2f2a0:	cbnz	w0, 2f2e0 <fminmagf128@@GLIBC_2.27+0x120>
   2f2a4:	mov	x0, x22
   2f2a8:	mov	x19, x20
   2f2ac:	stp	x19, x0, [sp, #64]
   2f2b0:	ldp	x19, x20, [sp, #16]
   2f2b4:	ldp	x21, x22, [sp, #32]
   2f2b8:	ldp	x23, x24, [sp, #48]
   2f2bc:	ldr	q0, [sp, #64]
   2f2c0:	ldp	x29, x30, [sp], #96
   2f2c4:	ret
   2f2c8:	stp	x20, x22, [sp, #64]
   2f2cc:	stp	x19, x21, [sp, #80]
   2f2d0:	ldr	q1, [sp, #64]
   2f2d4:	ldr	q0, [sp, #80]
   2f2d8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2f2dc:	tbz	w0, #31, 2f2a4 <fminmagf128@@GLIBC_2.27+0xe4>
   2f2e0:	mov	x0, x21
   2f2e4:	stp	x19, x0, [sp, #64]
   2f2e8:	ldp	x19, x20, [sp, #16]
   2f2ec:	ldp	x21, x22, [sp, #32]
   2f2f0:	ldp	x23, x24, [sp, #48]
   2f2f4:	ldr	q0, [sp, #64]
   2f2f8:	ldp	x29, x30, [sp], #96
   2f2fc:	ret
   2f300:	stp	x20, x22, [sp, #64]
   2f304:	stp	x19, x21, [sp, #80]
   2f308:	ldr	q1, [sp, #64]
   2f30c:	ldr	q0, [sp, #80]
   2f310:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2f314:	str	q0, [sp, #64]
   2f318:	ldp	x19, x0, [sp, #64]
   2f31c:	stp	x19, x0, [sp, #64]
   2f320:	ldp	x19, x20, [sp, #16]
   2f324:	ldp	x21, x22, [sp, #32]
   2f328:	ldp	x23, x24, [sp, #48]
   2f32c:	ldr	q0, [sp, #64]
   2f330:	ldp	x29, x30, [sp], #96
   2f334:	ret

000000000002f338 <__exp2l_finite@GLIBC_2.17>:
   2f338:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f33c:	add	x0, x0, #0x210
   2f340:	stp	x29, x30, [sp, #-64]!
   2f344:	mov	x29, sp
   2f348:	ldr	q1, [x0]
   2f34c:	stp	x19, x20, [sp, #16]
   2f350:	str	q0, [sp, #48]
   2f354:	ldp	x20, x19, [sp, #48]
   2f358:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2f35c:	cbnz	w0, 2f4c8 <__exp2l_finite@GLIBC_2.17+0x190>
   2f360:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f364:	add	x0, x0, #0x210
   2f368:	stp	x20, x19, [sp, #48]
   2f36c:	ldr	q1, [x0]
   2f370:	ldr	q0, [sp, #48]
   2f374:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   2f378:	tbz	w0, #31, 2f4c8 <__exp2l_finite@GLIBC_2.17+0x190>
   2f37c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f380:	add	x0, x0, #0x220
   2f384:	stp	x20, x19, [sp, #48]
   2f388:	ldr	q1, [x0]
   2f38c:	ldr	q0, [sp, #48]
   2f390:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2f394:	cbnz	w0, 2f4f4 <__exp2l_finite@GLIBC_2.17+0x1bc>
   2f398:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f39c:	add	x0, x0, #0x220
   2f3a0:	stp	x20, x19, [sp, #48]
   2f3a4:	ldr	q1, [x0]
   2f3a8:	ldr	q0, [sp, #48]
   2f3ac:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2f3b0:	tbnz	w0, #31, 2f4f4 <__exp2l_finite@GLIBC_2.17+0x1bc>
   2f3b4:	stp	x20, x19, [sp, #48]
   2f3b8:	ldr	q0, [sp, #48]
   2f3bc:	str	x21, [sp, #32]
   2f3c0:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   2f3c4:	mov	w21, w0
   2f3c8:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   2f3cc:	stp	x20, x19, [sp, #48]
   2f3d0:	mov	v1.16b, v0.16b
   2f3d4:	ldr	q0, [sp, #48]
   2f3d8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   2f3dc:	str	q0, [sp, #48]
   2f3e0:	ldp	x20, x19, [sp, #48]
   2f3e4:	adrp	x0, 5e000 <f64xsubf128@@GLIBC_2.28+0xa280>
   2f3e8:	add	x0, x0, #0xad0
   2f3ec:	ldr	q1, [x0]
   2f3f0:	and	x0, x19, #0x7fffffffffffffff
   2f3f4:	str	x0, [sp, #56]
   2f3f8:	ldr	q0, [sp, #48]
   2f3fc:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2f400:	tbnz	w0, #31, 2f470 <__exp2l_finite@GLIBC_2.17+0x138>
   2f404:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2f408:	add	x0, x0, #0xea0
   2f40c:	stp	x20, x19, [sp, #48]
   2f410:	ldr	q1, [x0]
   2f414:	ldr	q0, [sp, #48]
   2f418:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2f41c:	bl	141f0 <__expl_finite@GLIBC_2.17>
   2f420:	mov	w0, w21
   2f424:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2f428:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2f42c:	add	x0, x0, #0xeb0
   2f430:	mov	v2.16b, v0.16b
   2f434:	mov	v0.16b, v2.16b
   2f438:	ldr	q1, [x0]
   2f43c:	str	q2, [sp, #48]
   2f440:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2f444:	ldr	q2, [sp, #48]
   2f448:	tbz	w0, #31, 2f4b4 <__exp2l_finite@GLIBC_2.17+0x17c>
   2f44c:	mov	v1.16b, v2.16b
   2f450:	mov	v0.16b, v2.16b
   2f454:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2f458:	ldr	x21, [sp, #32]
   2f45c:	ldr	q2, [sp, #48]
   2f460:	mov	v0.16b, v2.16b
   2f464:	ldp	x19, x20, [sp, #16]
   2f468:	ldp	x29, x30, [sp], #64
   2f46c:	ret
   2f470:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2f474:	add	x0, x0, #0x2f0
   2f478:	stp	x20, x19, [sp, #48]
   2f47c:	ldr	q1, [x0]
   2f480:	ldr	q0, [sp, #48]
   2f484:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   2f488:	mov	w0, w21
   2f48c:	bl	25760 <modff128@@GLIBC_2.27+0x178>
   2f490:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2f494:	add	x0, x0, #0xeb0
   2f498:	mov	v2.16b, v0.16b
   2f49c:	mov	v0.16b, v2.16b
   2f4a0:	ldr	q1, [x0]
   2f4a4:	str	q2, [sp, #48]
   2f4a8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2f4ac:	ldr	q2, [sp, #48]
   2f4b0:	tbnz	w0, #31, 2f44c <__exp2l_finite@GLIBC_2.17+0x114>
   2f4b4:	mov	v0.16b, v2.16b
   2f4b8:	ldp	x19, x20, [sp, #16]
   2f4bc:	ldr	x21, [sp, #32]
   2f4c0:	ldp	x29, x30, [sp], #64
   2f4c4:	ret
   2f4c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2f4cc:	add	x0, x0, #0x300
   2f4d0:	stp	x20, x19, [sp, #48]
   2f4d4:	ldr	q1, [x0]
   2f4d8:	ldr	q0, [sp, #48]
   2f4dc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2f4e0:	mov	v2.16b, v0.16b
   2f4e4:	mov	v0.16b, v2.16b
   2f4e8:	ldp	x19, x20, [sp, #16]
   2f4ec:	ldp	x29, x30, [sp], #64
   2f4f0:	ret
   2f4f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2f4f8:	add	x0, x0, #0x300
   2f4fc:	and	x19, x19, #0x7fffffffffffffff
   2f500:	stp	x20, x19, [sp, #48]
   2f504:	ldr	q1, [x0]
   2f508:	ldr	q0, [sp, #48]
   2f50c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   2f510:	cbnz	w0, 2f538 <__exp2l_finite@GLIBC_2.17+0x200>
   2f514:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2f518:	add	x0, x0, #0x300
   2f51c:	stp	x20, x19, [sp, #48]
   2f520:	ldr	q1, [x0]
   2f524:	ldr	q0, [sp, #48]
   2f528:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   2f52c:	cmp	w0, #0x0
   2f530:	movi	v2.2d, #0x0
   2f534:	b.gt	2f460 <__exp2l_finite@GLIBC_2.17+0x128>
   2f538:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   2f53c:	add	x0, x0, #0xeb0
   2f540:	ldr	q1, [x0]
   2f544:	mov	v0.16b, v1.16b
   2f548:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   2f54c:	mov	v2.16b, v0.16b
   2f550:	b	2f460 <__exp2l_finite@GLIBC_2.17+0x128>
   2f554:	nop

000000000002f558 <__acosh_finite@GLIBC_2.17>:
   2f558:	fmov	x0, d0
   2f55c:	mov	x1, #0x4000000000000000    	// #4611686018427387904
   2f560:	fmov	d1, d0
   2f564:	cmp	x0, x1
   2f568:	b.le	2f59c <__acosh_finite@GLIBC_2.17+0x44>
   2f56c:	mov	x1, #0x41afffffffffffff    	// #4733283208366391295
   2f570:	cmp	x0, x1
   2f574:	b.gt	2f5c8 <__acosh_finite@GLIBC_2.17+0x70>
   2f578:	fmov	d2, #-1.000000000000000000e+00
   2f57c:	fmov	d3, #1.000000000000000000e+00
   2f580:	fmadd	d2, d0, d0, d2
   2f584:	fmov	d0, #2.000000000000000000e+00
   2f588:	fsqrt	d2, d2
   2f58c:	fadd	d2, d2, d1
   2f590:	fdiv	d2, d3, d2
   2f594:	fnmsub	d0, d1, d0, d2
   2f598:	b	35a50 <__log_finite@GLIBC_2.17>
   2f59c:	mov	x1, #0x3ff0000000000000    	// #4607182418800017408
   2f5a0:	cmp	x0, x1
   2f5a4:	b.le	2f5dc <__acosh_finite@GLIBC_2.17+0x84>
   2f5a8:	fmov	d0, #1.000000000000000000e+00
   2f5ac:	fmov	d2, #2.000000000000000000e+00
   2f5b0:	fsub	d1, d1, d0
   2f5b4:	fmul	d0, d1, d1
   2f5b8:	fmadd	d0, d1, d2, d0
   2f5bc:	fsqrt	d0, d0
   2f5c0:	fadd	d0, d0, d1
   2f5c4:	b	38c90 <floor@@GLIBC_2.17+0x8>
   2f5c8:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
   2f5cc:	cmp	x0, x1
   2f5d0:	b.le	2f5e8 <__acosh_finite@GLIBC_2.17+0x90>
   2f5d4:	fadd	d0, d0, d0
   2f5d8:	ret
   2f5dc:	movi	d0, #0x0
   2f5e0:	b.ne	2f608 <__acosh_finite@GLIBC_2.17+0xb0>  // b.any
   2f5e4:	ret
   2f5e8:	stp	x29, x30, [sp, #-16]!
   2f5ec:	mov	x29, sp
   2f5f0:	bl	35a50 <__log_finite@GLIBC_2.17>
   2f5f4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f5f8:	ldp	x29, x30, [sp], #16
   2f5fc:	ldr	d1, [x0, #560]
   2f600:	fadd	d0, d0, d1
   2f604:	ret
   2f608:	fsub	d1, d1, d1
   2f60c:	fdiv	d0, d1, d1
   2f610:	ret
   2f614:	nop

000000000002f618 <__asin_finite@GLIBC_2.17>:
   2f618:	stp	x29, x30, [sp, #-112]!
   2f61c:	mov	w2, #0x3e4fffff            	// #1045430271
   2f620:	mov	x29, sp
   2f624:	stp	x19, x20, [sp, #16]
   2f628:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   2f62c:	ldr	x0, [x19, #4032]
   2f630:	stp	d8, d9, [sp, #32]
   2f634:	fmov	d8, d0
   2f638:	ldr	x1, [x0]
   2f63c:	str	x1, [sp, #104]
   2f640:	mov	x1, #0x0                   	// #0
   2f644:	fmov	x1, d0
   2f648:	ubfx	x0, x1, #32, #31
   2f64c:	cmp	w0, w2
   2f650:	b.le	2f948 <__asin_finite@GLIBC_2.17+0x330>
   2f654:	mov	w2, #0x3fbfffff            	// #1069547519
   2f658:	asr	x20, x1, #32
   2f65c:	cmp	w0, w2
   2f660:	b.gt	2f7d0 <__asin_finite@GLIBC_2.17+0x1b8>
   2f664:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f668:	fmul	d1, d0, d0
   2f66c:	stp	d10, d11, [sp, #48]
   2f670:	ldr	d4, [x0, #600]
   2f674:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f678:	fmul	d10, d0, d1
   2f67c:	ldr	d7, [x0, #608]
   2f680:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f684:	fmadd	d7, d1, d4, d7
   2f688:	ldr	d6, [x0, #616]
   2f68c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f690:	ldr	d5, [x0, #624]
   2f694:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f698:	ldr	d2, [x0, #632]
   2f69c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f6a0:	ldr	d3, [x0, #640]
   2f6a4:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   2f6a8:	fmadd	d6, d7, d1, d6
   2f6ac:	movk	x0, #0x3ff0, lsl #48
   2f6b0:	fmov	d4, x0
   2f6b4:	fmadd	d5, d6, d1, d5
   2f6b8:	fmadd	d2, d5, d1, d2
   2f6bc:	fmadd	d3, d2, d1, d3
   2f6c0:	fmadd	d9, d3, d10, d0
   2f6c4:	fsub	d2, d0, d9
   2f6c8:	fmadd	d2, d3, d10, d2
   2f6cc:	fmadd	d2, d2, d4, d9
   2f6d0:	fcmp	d2, d9
   2f6d4:	b.eq	2f7a4 <__asin_finite@GLIBC_2.17+0x18c>  // b.none
   2f6d8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f6dc:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f6e0:	adrp	x2, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f6e4:	fmov	d2, #5.000000000000000000e-01
   2f6e8:	ldr	d7, [x0, #648]
   2f6ec:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f6f0:	ldr	d9, [x1, #592]
   2f6f4:	ldr	d5, [x0, #656]
   2f6f8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f6fc:	fmadd	d5, d1, d7, d5
   2f700:	ldr	d4, [x2, #688]
   2f704:	ldr	d18, [x0, #664]
   2f708:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f70c:	ldr	d10, [x0, #672]
   2f710:	mov	x0, #0x4238000000000000    	// #4771563805199040512
   2f714:	fmov	d6, x0
   2f718:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f71c:	fadd	d3, d0, d6
   2f720:	ldr	d7, [x0, #680]
   2f724:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f728:	fmadd	d18, d5, d1, d18
   2f72c:	ldr	d19, [x0, #584]
   2f730:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f734:	fsub	d3, d3, d6
   2f738:	ldr	d16, [x0, #696]
   2f73c:	fadd	d17, d9, d19
   2f740:	fsub	d5, d0, d3
   2f744:	fmul	d2, d3, d2
   2f748:	fmul	d6, d3, d3
   2f74c:	fmadd	d10, d18, d1, d10
   2f750:	fmul	d17, d17, d5
   2f754:	fmul	d2, d2, d0
   2f758:	fmul	d6, d6, d3
   2f75c:	fmadd	d2, d17, d5, d2
   2f760:	fmadd	d3, d9, d6, d0
   2f764:	fmadd	d7, d10, d1, d7
   2f768:	fmul	d2, d2, d5
   2f76c:	fsub	d5, d0, d3
   2f770:	fmadd	d4, d7, d1, d4
   2f774:	fmadd	d5, d9, d6, d5
   2f778:	fmul	d4, d4, d1
   2f77c:	fmul	d1, d4, d1
   2f780:	fmadd	d1, d1, d0, d2
   2f784:	fmadd	d1, d19, d6, d1
   2f788:	fadd	d2, d5, d1
   2f78c:	fadd	d9, d3, d2
   2f790:	fsub	d1, d3, d9
   2f794:	fadd	d1, d1, d2
   2f798:	fmadd	d1, d1, d16, d9
   2f79c:	fcmp	d1, d9
   2f7a0:	b.ne	2fa4c <__asin_finite@GLIBC_2.17+0x434>  // b.any
   2f7a4:	ldp	d10, d11, [sp, #48]
   2f7a8:	ldr	x19, [x19, #4032]
   2f7ac:	ldr	x1, [sp, #104]
   2f7b0:	ldr	x0, [x19]
   2f7b4:	eor	x0, x1, x0
   2f7b8:	cbnz	x0, 301c4 <__asin_finite@GLIBC_2.17+0xbac>
   2f7bc:	fmov	d0, d9
   2f7c0:	ldp	x19, x20, [sp, #16]
   2f7c4:	ldp	d8, d9, [sp, #32]
   2f7c8:	ldp	x29, x30, [sp], #112
   2f7cc:	ret
   2f7d0:	mov	w2, #0x3fdfffff            	// #1071644671
   2f7d4:	cmp	w0, w2
   2f7d8:	b.gt	2f968 <__asin_finite@GLIBC_2.17+0x350>
   2f7dc:	stp	d10, d11, [sp, #48]
   2f7e0:	mov	w1, #0x3fcfffff            	// #1070596095
   2f7e4:	cmp	w0, w1
   2f7e8:	b.gt	2fc60 <__asin_finite@GLIBC_2.17+0x648>
   2f7ec:	ubfx	x0, x0, #15, #5
   2f7f0:	mov	w1, #0xb                   	// #11
   2f7f4:	mul	w0, w0, w1
   2f7f8:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f7fc:	add	x2, x1, #0x880
   2f800:	cmp	w20, #0x0
   2f804:	ldr	d0, [x2, w0, sxtw #3]
   2f808:	b.le	2fc74 <__asin_finite@GLIBC_2.17+0x65c>
   2f80c:	fsub	d0, d8, d0
   2f810:	add	x1, x1, #0x880
   2f814:	add	w4, w0, #0x6
   2f818:	add	w6, w0, #0x5
   2f81c:	add	w3, w0, #0x4
   2f820:	add	w5, w0, #0x3
   2f824:	add	w2, w0, #0x2
   2f828:	ldr	d6, [x1, w4, sxtw #3]
   2f82c:	fmul	d3, d0, d0
   2f830:	ldr	d9, [x1, w6, sxtw #3]
   2f834:	add	w4, w0, #0x7
   2f838:	ldr	d7, [x1, w3, sxtw #3]
   2f83c:	add	w3, w0, #0x1
   2f840:	fmadd	d9, d6, d0, d9
   2f844:	ldr	d6, [x1, w5, sxtw #3]
   2f848:	ldr	d5, [x1, w2, sxtw #3]
   2f84c:	add	w2, w0, #0x8
   2f850:	ldr	d4, [x1, w4, sxtw #3]
   2f854:	adrp	x4, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f858:	ldr	d2, [x1, w3, sxtw #3]
   2f85c:	ldr	d1, [x1, w2, sxtw #3]
   2f860:	add	w2, w0, #0x9
   2f864:	ldr	d10, [x4, #720]
   2f868:	add	w0, w0, #0xa
   2f86c:	fmadd	d7, d9, d0, d7
   2f870:	fmadd	d6, d7, d0, d6
   2f874:	fmadd	d5, d6, d0, d5
   2f878:	fmadd	d3, d3, d5, d4
   2f87c:	fmadd	d4, d2, d0, d3
   2f880:	fadd	d9, d1, d4
   2f884:	fsub	d2, d1, d9
   2f888:	fadd	d2, d2, d4
   2f88c:	fmadd	d2, d2, d10, d9
   2f890:	fcmp	d2, d9
   2f894:	b.eq	2fa38 <__asin_finite@GLIBC_2.17+0x420>  // b.none
   2f898:	ldr	d5, [x1, w2, sxtw #3]
   2f89c:	adrp	x3, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f8a0:	ldr	d6, [x1, w0, sxtw #3]
   2f8a4:	ldr	d4, [x3, #728]
   2f8a8:	fmadd	d2, d5, d0, d1
   2f8ac:	fmadd	d3, d6, d0, d3
   2f8b0:	fsub	d1, d1, d2
   2f8b4:	fmadd	d0, d5, d0, d1
   2f8b8:	fadd	d0, d0, d3
   2f8bc:	fadd	d9, d2, d0
   2f8c0:	fsub	d2, d2, d9
   2f8c4:	fadd	d2, d2, d0
   2f8c8:	fmadd	d0, d2, d4, d9
   2f8cc:	fcmp	d0, d9
   2f8d0:	b.eq	2fa38 <__asin_finite@GLIBC_2.17+0x420>  // b.none
   2f8d4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f8d8:	fmov	d1, #5.000000000000000000e-01
   2f8dc:	fmov	d0, d9
   2f8e0:	ldr	d10, [x0, #712]
   2f8e4:	add	x0, sp, #0x58
   2f8e8:	fmadd	d10, d2, d10, d9
   2f8ec:	fsub	d2, d10, d9
   2f8f0:	fmul	d1, d2, d1
   2f8f4:	bl	4e1e8 <__exp2f_finite@GLIBC_2.17+0x1780>
   2f8f8:	fabs	d0, d8
   2f8fc:	ldp	d1, d3, [sp, #88]
   2f900:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f904:	ldr	d2, [x0, #736]
   2f908:	fsub	d1, d1, d0
   2f90c:	fadd	d1, d1, d3
   2f910:	fcmpe	d1, d2
   2f914:	b.gt	2fdf0 <__asin_finite@GLIBC_2.17+0x7d8>
   2f918:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f91c:	ldr	d2, [x0, #744]
   2f920:	fcmpe	d1, d2
   2f924:	b.pl	2fdd0 <__asin_finite@GLIBC_2.17+0x7b8>  // b.nfrst
   2f928:	cmp	w20, #0x0
   2f92c:	b.gt	2fc50 <__asin_finite@GLIBC_2.17+0x638>
   2f930:	fcmpe	d9, d10
   2f934:	fneg	d2, d10
   2f938:	fneg	d0, d9
   2f93c:	ldp	d10, d11, [sp, #48]
   2f940:	fcsel	d9, d2, d0, mi  // mi = first
   2f944:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   2f948:	fabs	d1, d0
   2f94c:	mov	x0, #0x10000000000000      	// #4503599627370496
   2f950:	fmov	d0, x0
   2f954:	fmov	d9, d8
   2f958:	fcmpe	d1, d0
   2f95c:	b.pl	2f7a8 <__asin_finite@GLIBC_2.17+0x190>  // b.nfrst
   2f960:	fmul	d0, d8, d8
   2f964:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   2f968:	mov	w2, #0x3fe7ffff            	// #1072168959
   2f96c:	cmp	w0, w2
   2f970:	b.gt	2faa0 <__asin_finite@GLIBC_2.17+0x488>
   2f974:	asr	w0, w0, #11
   2f978:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f97c:	and	w0, w0, #0x1fc
   2f980:	add	x2, x1, #0x880
   2f984:	stp	d10, d11, [sp, #48]
   2f988:	cmp	w20, #0x0
   2f98c:	add	w0, w0, w0, lsl #1
   2f990:	add	w3, w0, #0x420
   2f994:	ldr	d0, [x2, w3, sxtw #3]
   2f998:	b.le	2fdc4 <__asin_finite@GLIBC_2.17+0x7ac>
   2f99c:	fsub	d0, d8, d0
   2f9a0:	add	x1, x1, #0x880
   2f9a4:	add	w2, w0, #0x427
   2f9a8:	add	w4, w0, #0x426
   2f9ac:	add	w6, w0, #0x425
   2f9b0:	add	w5, w0, #0x424
   2f9b4:	add	w3, w0, #0x423
   2f9b8:	ldr	d7, [x1, w2, sxtw #3]
   2f9bc:	add	w2, w0, #0x422
   2f9c0:	ldr	d10, [x1, w4, sxtw #3]
   2f9c4:	fmul	d3, d0, d0
   2f9c8:	ldr	d9, [x1, w6, sxtw #3]
   2f9cc:	add	w4, w0, #0x428
   2f9d0:	fmadd	d10, d7, d0, d10
   2f9d4:	ldr	d7, [x1, w5, sxtw #3]
   2f9d8:	ldr	d6, [x1, w3, sxtw #3]
   2f9dc:	add	w3, w0, #0x421
   2f9e0:	ldr	d5, [x1, w2, sxtw #3]
   2f9e4:	add	w2, w0, #0x429
   2f9e8:	ldr	d4, [x1, w4, sxtw #3]
   2f9ec:	adrp	x4, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2f9f0:	ldr	d2, [x1, w3, sxtw #3]
   2f9f4:	ldr	d1, [x1, w2, sxtw #3]
   2f9f8:	add	w2, w0, #0x42a
   2f9fc:	ldr	d16, [x4, #752]
   2fa00:	add	w0, w0, #0x42b
   2fa04:	fmadd	d9, d10, d0, d9
   2fa08:	fmadd	d7, d9, d0, d7
   2fa0c:	fmadd	d6, d7, d0, d6
   2fa10:	fmadd	d5, d6, d0, d5
   2fa14:	fmadd	d3, d3, d5, d4
   2fa18:	fmadd	d4, d2, d0, d3
   2fa1c:	fadd	d9, d1, d4
   2fa20:	fsub	d2, d1, d9
   2fa24:	fadd	d2, d2, d4
   2fa28:	fmadd	d2, d2, d16, d9
   2fa2c:	fcmp	d2, d9
   2fa30:	b.ne	2f898 <__asin_finite@GLIBC_2.17+0x280>  // b.any
   2fa34:	nop
   2fa38:	fneg	d0, d9
   2fa3c:	cmp	w20, #0x0
   2fa40:	ldp	d10, d11, [sp, #48]
   2fa44:	fcsel	d9, d0, d9, le
   2fa48:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   2fa4c:	movi	d1, #0x0
   2fa50:	add	x0, sp, #0x58
   2fa54:	bl	4df18 <__exp2f_finite@GLIBC_2.17+0x14b0>
   2fa58:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fa5c:	ldp	d9, d2, [sp, #88]
   2fa60:	ldr	d0, [x0, #704]
   2fa64:	fmadd	d0, d2, d0, d9
   2fa68:	fcmp	d9, d0
   2fa6c:	b.eq	2f7a4 <__asin_finite@GLIBC_2.17+0x18c>  // b.none
   2fa70:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fa74:	fabs	d0, d8
   2fa78:	fabs	d1, d9
   2fa7c:	cmp	w20, #0x0
   2fa80:	ldr	d3, [x0, #712]
   2fa84:	fmadd	d2, d2, d3, d9
   2fa88:	fabs	d2, d2
   2fa8c:	b.le	2fde0 <__asin_finite@GLIBC_2.17+0x7c8>
   2fa90:	bl	511d8 <__exp2f_finite@GLIBC_2.17+0x4770>
   2fa94:	fmov	d9, d0
   2fa98:	ldp	d10, d11, [sp, #48]
   2fa9c:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   2faa0:	mov	w2, #0x7fff                	// #32767
   2faa4:	movk	w2, #0x3fed, lsl #16
   2faa8:	cmp	w0, w2
   2faac:	b.le	2fc80 <__asin_finite@GLIBC_2.17+0x668>
   2fab0:	mov	w2, #0x7fff                	// #32767
   2fab4:	movk	w2, #0x3fee, lsl #16
   2fab8:	cmp	w0, w2
   2fabc:	b.gt	2fe08 <__asin_finite@GLIBC_2.17+0x7f0>
   2fac0:	ubfx	x0, x0, #13, #7
   2fac4:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fac8:	add	x3, x1, #0x880
   2facc:	stp	d10, d11, [sp, #48]
   2fad0:	lsl	w2, w0, #3
   2fad4:	sub	w0, w2, w0
   2fad8:	cmp	w20, #0x0
   2fadc:	lsl	w0, w0, #1
   2fae0:	add	w2, w0, #0x374
   2fae4:	ldr	d0, [x3, w2, sxtw #3]
   2fae8:	b.le	300e8 <__asin_finite@GLIBC_2.17+0xad0>
   2faec:	fsub	d0, d8, d0
   2faf0:	add	x1, x1, #0x880
   2faf4:	add	w5, w0, #0x37d
   2faf8:	add	w3, w0, #0x37c
   2fafc:	add	w2, w0, #0x37b
   2fb00:	add	w6, w0, #0x37a
   2fb04:	add	w4, w0, #0x379
   2fb08:	ldr	d10, [x1, w5, sxtw #3]
   2fb0c:	add	w5, w0, #0x378
   2fb10:	ldr	d17, [x1, w3, sxtw #3]
   2fb14:	add	w3, w0, #0x377
   2fb18:	ldr	d16, [x1, w2, sxtw #3]
   2fb1c:	add	w2, w0, #0x376
   2fb20:	fmadd	d17, d10, d0, d17
   2fb24:	ldr	d10, [x1, w6, sxtw #3]
   2fb28:	ldr	d9, [x1, w4, sxtw #3]
   2fb2c:	fmul	d3, d0, d0
   2fb30:	ldr	d7, [x1, w5, sxtw #3]
   2fb34:	add	w4, w0, #0x37e
   2fb38:	ldr	d6, [x1, w3, sxtw #3]
   2fb3c:	add	w3, w0, #0x375
   2fb40:	ldr	d5, [x1, w2, sxtw #3]
   2fb44:	add	w2, w0, #0x37f
   2fb48:	ldr	d4, [x1, w4, sxtw #3]
   2fb4c:	adrp	x4, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fb50:	ldr	d2, [x1, w3, sxtw #3]
   2fb54:	ldr	d1, [x1, w2, sxtw #3]
   2fb58:	add	w2, w0, #0x380
   2fb5c:	fmadd	d16, d17, d0, d16
   2fb60:	ldr	d18, [x4, #752]
   2fb64:	add	w0, w0, #0x381
   2fb68:	fmadd	d10, d16, d0, d10
   2fb6c:	fmadd	d9, d10, d0, d9
   2fb70:	fmadd	d7, d9, d0, d7
   2fb74:	fmadd	d6, d7, d0, d6
   2fb78:	fmadd	d5, d6, d0, d5
   2fb7c:	fmadd	d3, d3, d5, d4
   2fb80:	fmadd	d4, d2, d0, d3
   2fb84:	fadd	d9, d1, d4
   2fb88:	fsub	d2, d1, d9
   2fb8c:	fadd	d2, d2, d4
   2fb90:	fmadd	d2, d2, d18, d9
   2fb94:	fcmp	d2, d9
   2fb98:	b.eq	2fa38 <__asin_finite@GLIBC_2.17+0x420>  // b.none
   2fb9c:	ldr	d5, [x1, w2, sxtw #3]
   2fba0:	adrp	x3, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fba4:	ldr	d6, [x1, w0, sxtw #3]
   2fba8:	ldr	d4, [x3, #768]
   2fbac:	fmadd	d2, d5, d0, d1
   2fbb0:	fmadd	d3, d6, d0, d3
   2fbb4:	fsub	d1, d1, d2
   2fbb8:	fmadd	d0, d5, d0, d1
   2fbbc:	fadd	d0, d0, d3
   2fbc0:	fadd	d9, d2, d0
   2fbc4:	fsub	d2, d2, d9
   2fbc8:	fadd	d0, d2, d0
   2fbcc:	fmadd	d1, d0, d4, d9
   2fbd0:	fcmp	d1, d9
   2fbd4:	b.eq	2fa38 <__asin_finite@GLIBC_2.17+0x420>  // b.none
   2fbd8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fbdc:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fbe0:	fmov	d3, #5.000000000000000000e-01
   2fbe4:	ldr	d10, [x0, #712]
   2fbe8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fbec:	ldr	d2, [x1, #576]
   2fbf0:	ldr	d1, [x0, #568]
   2fbf4:	add	x0, sp, #0x58
   2fbf8:	fmadd	d10, d0, d10, d9
   2fbfc:	fsub	d2, d2, d9
   2fc00:	fsub	d0, d10, d9
   2fc04:	fmsub	d2, d0, d3, d2
   2fc08:	fadd	d0, d1, d2
   2fc0c:	fsub	d2, d2, d0
   2fc10:	fadd	d1, d1, d2
   2fc14:	bl	4e640 <__exp2f_finite@GLIBC_2.17+0x1bd8>
   2fc18:	fabs	d0, d8
   2fc1c:	ldp	d1, d3, [sp, #88]
   2fc20:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fc24:	ldr	d2, [x0, #736]
   2fc28:	fsub	d1, d1, d0
   2fc2c:	fadd	d1, d1, d3
   2fc30:	fcmpe	d1, d2
   2fc34:	b.gt	300f4 <__asin_finite@GLIBC_2.17+0xadc>
   2fc38:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fc3c:	ldr	d2, [x0, #744]
   2fc40:	fcmpe	d1, d2
   2fc44:	b.pl	2fdd0 <__asin_finite@GLIBC_2.17+0x7b8>  // b.nfrst
   2fc48:	cmp	w20, #0x0
   2fc4c:	b.le	30174 <__asin_finite@GLIBC_2.17+0xb5c>
   2fc50:	fcmp	d9, d10
   2fc54:	fcsel	d9, d9, d10, pl  // pl = nfrst
   2fc58:	ldp	d10, d11, [sp, #48]
   2fc5c:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   2fc60:	ubfx	x0, x0, #14, #6
   2fc64:	mov	w1, #0xb                   	// #11
   2fc68:	mul	w0, w0, w1
   2fc6c:	add	w0, w0, #0x160
   2fc70:	b	2f7f8 <__asin_finite@GLIBC_2.17+0x1e0>
   2fc74:	fneg	d1, d8
   2fc78:	fsub	d0, d1, d0
   2fc7c:	b	2f810 <__asin_finite@GLIBC_2.17+0x1f8>
   2fc80:	ubfx	x0, x0, #13, #7
   2fc84:	mov	w3, #0xd                   	// #13
   2fc88:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fc8c:	add	x2, x1, #0x880
   2fc90:	stp	d10, d11, [sp, #48]
   2fc94:	cmp	w20, #0x0
   2fc98:	mul	w0, w0, w3
   2fc9c:	add	w3, w0, #0x3e0
   2fca0:	ldr	d0, [x2, w3, sxtw #3]
   2fca4:	b.le	2fefc <__asin_finite@GLIBC_2.17+0x8e4>
   2fca8:	fsub	d0, d8, d0
   2fcac:	add	x1, x1, #0x880
   2fcb0:	add	w3, w0, #0x3e8
   2fcb4:	add	w2, w0, #0x3e7
   2fcb8:	add	w4, w0, #0x3e6
   2fcbc:	add	w6, w0, #0x3e5
   2fcc0:	add	w5, w0, #0x3e4
   2fcc4:	ldr	d9, [x1, w3, sxtw #3]
   2fcc8:	add	w3, w0, #0x3e3
   2fccc:	ldr	d16, [x1, w2, sxtw #3]
   2fcd0:	add	w2, w0, #0x3e2
   2fcd4:	ldr	d10, [x1, w4, sxtw #3]
   2fcd8:	fmul	d3, d0, d0
   2fcdc:	fmadd	d16, d9, d0, d16
   2fce0:	ldr	d9, [x1, w6, sxtw #3]
   2fce4:	ldr	d7, [x1, w5, sxtw #3]
   2fce8:	add	w4, w0, #0x3e9
   2fcec:	ldr	d6, [x1, w3, sxtw #3]
   2fcf0:	add	w3, w0, #0x3e1
   2fcf4:	ldr	d5, [x1, w2, sxtw #3]
   2fcf8:	add	w2, w0, #0x3ea
   2fcfc:	ldr	d4, [x1, w4, sxtw #3]
   2fd00:	adrp	x4, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fd04:	ldr	d2, [x1, w3, sxtw #3]
   2fd08:	ldr	d1, [x1, w2, sxtw #3]
   2fd0c:	ldr	d17, [x4, #752]
   2fd10:	fmadd	d10, d16, d0, d10
   2fd14:	fmadd	d9, d10, d0, d9
   2fd18:	fmadd	d7, d9, d0, d7
   2fd1c:	fmadd	d6, d7, d0, d6
   2fd20:	fmadd	d5, d6, d0, d5
   2fd24:	fmadd	d3, d3, d5, d4
   2fd28:	fmadd	d4, d2, d0, d3
   2fd2c:	fadd	d9, d1, d4
   2fd30:	fsub	d2, d1, d9
   2fd34:	fadd	d2, d2, d4
   2fd38:	fmadd	d2, d2, d17, d9
   2fd3c:	fcmp	d2, d9
   2fd40:	b.eq	2fa38 <__asin_finite@GLIBC_2.17+0x420>  // b.none
   2fd44:	add	w2, w0, #0x3eb
   2fd48:	add	w0, w0, #0x3ec
   2fd4c:	adrp	x3, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fd50:	ldr	d5, [x1, w2, sxtw #3]
   2fd54:	ldr	d6, [x1, w0, sxtw #3]
   2fd58:	ldr	d4, [x3, #760]
   2fd5c:	fmadd	d2, d5, d0, d1
   2fd60:	fmadd	d3, d6, d0, d3
   2fd64:	fsub	d1, d1, d2
   2fd68:	fmadd	d0, d5, d0, d1
   2fd6c:	fadd	d0, d0, d3
   2fd70:	fadd	d9, d2, d0
   2fd74:	fsub	d2, d2, d9
   2fd78:	fadd	d0, d2, d0
   2fd7c:	fmadd	d1, d0, d4, d9
   2fd80:	fcmp	d1, d9
   2fd84:	b.eq	2fa38 <__asin_finite@GLIBC_2.17+0x420>  // b.none
   2fd88:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fd8c:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fd90:	fmov	d3, #5.000000000000000000e-01
   2fd94:	ldr	d10, [x0, #712]
   2fd98:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fd9c:	ldr	d1, [x1, #576]
   2fda0:	ldr	d2, [x0, #568]
   2fda4:	add	x0, sp, #0x58
   2fda8:	fmadd	d10, d0, d10, d9
   2fdac:	fsub	d0, d1, d9
   2fdb0:	fsub	d1, d1, d0
   2fdb4:	fsub	d4, d10, d9
   2fdb8:	fsub	d1, d1, d9
   2fdbc:	fmsub	d2, d4, d3, d2
   2fdc0:	b	2fc10 <__asin_finite@GLIBC_2.17+0x5f8>
   2fdc4:	fneg	d1, d8
   2fdc8:	fsub	d0, d1, d0
   2fdcc:	b	2f9a0 <__asin_finite@GLIBC_2.17+0x388>
   2fdd0:	fmov	d2, d10
   2fdd4:	fmov	d1, d9
   2fdd8:	cmp	w20, #0x0
   2fddc:	b.gt	2fa90 <__asin_finite@GLIBC_2.17+0x478>
   2fde0:	bl	511d8 <__exp2f_finite@GLIBC_2.17+0x4770>
   2fde4:	fneg	d9, d0
   2fde8:	ldp	d10, d11, [sp, #48]
   2fdec:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   2fdf0:	cmp	w20, #0x0
   2fdf4:	b.le	2ff08 <__asin_finite@GLIBC_2.17+0x8f0>
   2fdf8:	fcmp	d9, d10
   2fdfc:	fcsel	d9, d9, d10, le
   2fe00:	ldp	d10, d11, [sp, #48]
   2fe04:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   2fe08:	mov	w2, #0x3feeffff            	// #1072627711
   2fe0c:	cmp	w0, w2
   2fe10:	b.gt	2ff20 <__asin_finite@GLIBC_2.17+0x908>
   2fe14:	ubfx	x0, x0, #13, #7
   2fe18:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fe1c:	add	x2, x1, #0x880
   2fe20:	stp	d10, d11, [sp, #48]
   2fe24:	lsl	w3, w0, #4
   2fe28:	sub	w0, w3, w0
   2fe2c:	cmp	w20, #0x0
   2fe30:	add	w3, w0, #0x300
   2fe34:	ldr	d0, [x2, w3, sxtw #3]
   2fe38:	b.le	30150 <__asin_finite@GLIBC_2.17+0xb38>
   2fe3c:	fsub	d0, d8, d0
   2fe40:	add	x1, x1, #0x880
   2fe44:	add	w4, w0, #0x30a
   2fe48:	add	w5, w0, #0x309
   2fe4c:	add	w3, w0, #0x308
   2fe50:	add	w6, w0, #0x307
   2fe54:	add	w2, w0, #0x306
   2fe58:	ldr	d2, [x1, w4, sxtw #3]
   2fe5c:	add	w4, w0, #0x305
   2fe60:	ldr	d1, [x1, w5, sxtw #3]
   2fe64:	add	w5, w0, #0x304
   2fe68:	ldr	d17, [x1, w3, sxtw #3]
   2fe6c:	add	w3, w0, #0x303
   2fe70:	fmadd	d1, d2, d0, d1
   2fe74:	ldr	d16, [x1, w6, sxtw #3]
   2fe78:	ldr	d10, [x1, w2, sxtw #3]
   2fe7c:	add	w2, w0, #0x302
   2fe80:	ldr	d9, [x1, w4, sxtw #3]
   2fe84:	fmul	d3, d0, d0
   2fe88:	ldr	d7, [x1, w5, sxtw #3]
   2fe8c:	add	w4, w0, #0x30b
   2fe90:	ldr	d6, [x1, w3, sxtw #3]
   2fe94:	add	w3, w0, #0x301
   2fe98:	ldr	d5, [x1, w2, sxtw #3]
   2fe9c:	add	w2, w0, #0x30c
   2fea0:	ldr	d2, [x1, w4, sxtw #3]
   2fea4:	adrp	x4, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fea8:	ldr	d4, [x1, w3, sxtw #3]
   2feac:	fmadd	d17, d1, d0, d17
   2feb0:	ldr	d1, [x1, w2, sxtw #3]
   2feb4:	ldr	d11, [x4, #752]
   2feb8:	add	w2, w0, #0x30d
   2febc:	add	w0, w0, #0x30e
   2fec0:	fmadd	d16, d17, d0, d16
   2fec4:	fmadd	d10, d16, d0, d10
   2fec8:	fmadd	d9, d10, d0, d9
   2fecc:	fmadd	d7, d9, d0, d7
   2fed0:	fmadd	d6, d7, d0, d6
   2fed4:	fmadd	d5, d6, d0, d5
   2fed8:	fmadd	d3, d3, d5, d2
   2fedc:	fmadd	d4, d4, d0, d3
   2fee0:	fadd	d9, d1, d4
   2fee4:	fsub	d2, d1, d9
   2fee8:	fadd	d2, d2, d4
   2feec:	fmadd	d2, d2, d11, d9
   2fef0:	fcmp	d2, d9
   2fef4:	b.ne	2fb9c <__asin_finite@GLIBC_2.17+0x584>  // b.any
   2fef8:	b	2fa38 <__asin_finite@GLIBC_2.17+0x420>
   2fefc:	fneg	d1, d8
   2ff00:	fsub	d0, d1, d0
   2ff04:	b	2fcac <__asin_finite@GLIBC_2.17+0x694>
   2ff08:	fcmpe	d9, d10
   2ff0c:	fneg	d2, d10
   2ff10:	fneg	d0, d9
   2ff14:	ldp	d10, d11, [sp, #48]
   2ff18:	fcsel	d9, d2, d0, gt
   2ff1c:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   2ff20:	mov	w2, #0x3fefffff            	// #1072693247
   2ff24:	cmp	w0, w2
   2ff28:	b.gt	30114 <__asin_finite@GLIBC_2.17+0xafc>
   2ff2c:	stp	d10, d11, [sp, #48]
   2ff30:	cmp	w20, #0x0
   2ff34:	fmov	d0, #1.000000000000000000e+00
   2ff38:	str	d12, [sp, #64]
   2ff3c:	b.le	3018c <__asin_finite@GLIBC_2.17+0xb74>
   2ff40:	fsub	d0, d0, d8
   2ff44:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ff48:	fmov	d7, #5.000000000000000000e-01
   2ff4c:	mov	x4, #0x4170000000000000    	// #4715268809856909312
   2ff50:	fmov	d6, x4
   2ff54:	ldr	d22, [x1, #776]
   2ff58:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ff5c:	fmul	d0, d0, d7
   2ff60:	adrp	x4, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ff64:	ldr	d18, [x1, #784]
   2ff68:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ff6c:	ldr	d21, [x4, #600]
   2ff70:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ff74:	ldr	d9, [x1, #792]
   2ff78:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ff7c:	add	x0, x0, #0x3a0
   2ff80:	mov	w2, #0x1ff                 	// #511
   2ff84:	ldr	d1, [x1, #800]
   2ff88:	fmov	x1, d0
   2ff8c:	add	x3, x0, #0x400
   2ff90:	fmov	d5, #1.000000000000000000e+00
   2ff94:	fmov	d3, #1.500000000000000000e+00
   2ff98:	fmov	d12, #2.000000000000000000e+00
   2ff9c:	asr	x4, x1, #53
   2ffa0:	ubfx	x1, x1, #46, #7
   2ffa4:	sub	w2, w2, w4
   2ffa8:	adrp	x4, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ffac:	ldr	d20, [x4, #608]
   2ffb0:	adrp	x4, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ffb4:	fmadd	d21, d0, d21, d20
   2ffb8:	ldr	d2, [x0, x1, lsl #3]
   2ffbc:	ldr	d10, [x3, w2, sxtw #3]
   2ffc0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ffc4:	ldr	d20, [x4, #616]
   2ffc8:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ffcc:	ldr	d19, [x0, #624]
   2ffd0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ffd4:	fmul	d2, d2, d10
   2ffd8:	ldr	d10, [x1, #568]
   2ffdc:	ldr	d17, [x0, #632]
   2ffe0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ffe4:	ldr	d4, [x0, #640]
   2ffe8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2ffec:	fmadd	d20, d21, d0, d20
   2fff0:	fmul	d21, d2, d2
   2fff4:	ldr	d11, [x0, #576]
   2fff8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   2fffc:	ldr	d16, [x0, #808]
   30000:	fmsub	d5, d21, d0, d5
   30004:	fmadd	d19, d20, d0, d19
   30008:	fmadd	d18, d5, d22, d18
   3000c:	fmadd	d17, d19, d0, d17
   30010:	fmadd	d9, d18, d5, d9
   30014:	fmadd	d4, d17, d0, d4
   30018:	fmadd	d1, d9, d5, d1
   3001c:	fmul	d4, d4, d0
   30020:	fmul	d1, d1, d2
   30024:	fmul	d7, d1, d7
   30028:	fmul	d1, d0, d1
   3002c:	fadd	d2, d1, d6
   30030:	fmsub	d3, d7, d1, d3
   30034:	fsub	d2, d2, d6
   30038:	fmadd	d1, d3, d1, d2
   3003c:	fmsub	d0, d2, d2, d0
   30040:	fmsub	d3, d2, d12, d11
   30044:	fdiv	d1, d0, d1
   30048:	fadd	d0, d2, d1
   3004c:	fmsub	d5, d1, d12, d10
   30050:	fadd	d6, d0, d0
   30054:	fmsub	d4, d6, d4, d5
   30058:	fadd	d9, d4, d3
   3005c:	fsub	d3, d3, d9
   30060:	fadd	d3, d3, d4
   30064:	fmadd	d3, d3, d16, d9
   30068:	fcmp	d3, d9
   3006c:	b.eq	3015c <__asin_finite@GLIBC_2.17+0xb44>  // b.none
   30070:	fsub	d2, d2, d0
   30074:	add	x0, sp, #0x58
   30078:	fadd	d1, d2, d1
   3007c:	bl	4df18 <__exp2f_finite@GLIBC_2.17+0x14b0>
   30080:	ldp	d3, d0, [sp, #88]
   30084:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30088:	ldr	d2, [x0, #816]
   3008c:	fmsub	d1, d3, d12, d11
   30090:	fmsub	d10, d0, d12, d10
   30094:	fsub	d0, d11, d1
   30098:	fmsub	d0, d3, d12, d0
   3009c:	fadd	d0, d0, d10
   300a0:	fadd	d9, d1, d0
   300a4:	fsub	d1, d1, d9
   300a8:	fadd	d1, d1, d0
   300ac:	fmadd	d0, d1, d2, d9
   300b0:	fcmp	d0, d9
   300b4:	b.eq	3015c <__asin_finite@GLIBC_2.17+0xb44>  // b.none
   300b8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   300bc:	fabs	d0, d8
   300c0:	cmp	w20, #0x0
   300c4:	ldr	d2, [x0, #712]
   300c8:	fmadd	d2, d1, d2, d9
   300cc:	fmov	d1, d9
   300d0:	b.le	301b0 <__asin_finite@GLIBC_2.17+0xb98>
   300d4:	bl	511d8 <__exp2f_finite@GLIBC_2.17+0x4770>
   300d8:	fmov	d9, d0
   300dc:	ldp	d10, d11, [sp, #48]
   300e0:	ldr	d12, [sp, #64]
   300e4:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   300e8:	fneg	d1, d8
   300ec:	fsub	d0, d1, d0
   300f0:	b	2faf0 <__asin_finite@GLIBC_2.17+0x4d8>
   300f4:	cmp	w20, #0x0
   300f8:	b.gt	2fdf8 <__asin_finite@GLIBC_2.17+0x7e0>
   300fc:	fcmpe	d9, d10
   30100:	fneg	d0, d9
   30104:	fneg	d10, d10
   30108:	fcsel	d9, d10, d0, gt
   3010c:	ldp	d10, d11, [sp, #48]
   30110:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   30114:	mov	w2, #0x3ff00000            	// #1072693248
   30118:	cmp	w0, w2
   3011c:	b.eq	30194 <__asin_finite@GLIBC_2.17+0xb7c>  // b.none
   30120:	mov	w1, #0x7ff00000            	// #2146435072
   30124:	cmp	w0, w1
   30128:	b.gt	30138 <__asin_finite@GLIBC_2.17+0xb20>
   3012c:	b.ne	30140 <__asin_finite@GLIBC_2.17+0xb28>  // b.any
   30130:	fmov	x0, d0
   30134:	cbz	w0, 30140 <__asin_finite@GLIBC_2.17+0xb28>
   30138:	fadd	d9, d8, d8
   3013c:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   30140:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   30144:	fmov	d0, x0
   30148:	fdiv	d9, d0, d0
   3014c:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   30150:	fneg	d1, d8
   30154:	fsub	d0, d1, d0
   30158:	b	2fe40 <__asin_finite@GLIBC_2.17+0x828>
   3015c:	fneg	d0, d9
   30160:	cmp	w20, #0x0
   30164:	ldp	d10, d11, [sp, #48]
   30168:	ldr	d12, [sp, #64]
   3016c:	fcsel	d9, d0, d9, le
   30170:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   30174:	fcmpe	d9, d10
   30178:	fneg	d0, d9
   3017c:	fneg	d10, d10
   30180:	fcsel	d9, d10, d0, mi  // mi = first
   30184:	ldp	d10, d11, [sp, #48]
   30188:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   3018c:	fadd	d0, d8, d0
   30190:	b	2ff44 <__asin_finite@GLIBC_2.17+0x92c>
   30194:	cbnz	w1, 30140 <__asin_finite@GLIBC_2.17+0xb28>
   30198:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3019c:	cmp	w20, #0x0
   301a0:	ldr	d9, [x0, #576]
   301a4:	b.gt	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   301a8:	fneg	d9, d9
   301ac:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   301b0:	bl	511d8 <__exp2f_finite@GLIBC_2.17+0x4770>
   301b4:	fneg	d9, d0
   301b8:	ldp	d10, d11, [sp, #48]
   301bc:	ldr	d12, [sp, #64]
   301c0:	b	2f7a8 <__asin_finite@GLIBC_2.17+0x190>
   301c4:	stp	d10, d11, [sp, #48]
   301c8:	str	d12, [sp, #64]
   301cc:	bl	ba70 <__stack_chk_fail@plt>

00000000000301d0 <__acos_finite@GLIBC_2.17>:
   301d0:	stp	x29, x30, [sp, #-112]!
   301d4:	mov	w2, #0x3c87ffff            	// #1015545855
   301d8:	mov	x29, sp
   301dc:	str	x19, [sp, #16]
   301e0:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   301e4:	stp	d8, d9, [sp, #32]
   301e8:	ldr	x0, [x19, #4032]
   301ec:	str	d0, [sp, #72]
   301f0:	ldr	x1, [x0]
   301f4:	str	x1, [sp, #104]
   301f8:	mov	x1, #0x0                   	// #0
   301fc:	fmov	x1, d0
   30200:	ubfx	x0, x1, #32, #31
   30204:	cmp	w0, w2
   30208:	b.le	30564 <__acos_finite@GLIBC_2.17+0x394>
   3020c:	mov	w2, #0x3fbfffff            	// #1069547519
   30210:	fmov	d8, d0
   30214:	cmp	w0, w2
   30218:	b.gt	303bc <__acos_finite@GLIBC_2.17+0x1ec>
   3021c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30220:	fmul	d1, d0, d0
   30224:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30228:	stp	d10, d11, [sp, #48]
   3022c:	ldr	d2, [x0, #600]
   30230:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30234:	ldr	d5, [x1, #632]
   30238:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3023c:	fmul	d17, d0, d1
   30240:	ldr	d9, [x0, #608]
   30244:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30248:	fmadd	d9, d1, d2, d9
   3024c:	ldr	d4, [x1, #640]
   30250:	ldr	d7, [x0, #616]
   30254:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30258:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3025c:	ldr	d6, [x0, #624]
   30260:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30264:	ldr	d16, [x1, #824]
   30268:	ldr	d10, [x0, #576]
   3026c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30270:	ldr	d11, [x0, #568]
   30274:	fmadd	d7, d9, d1, d7
   30278:	fsub	d2, d10, d0
   3027c:	fsub	d3, d10, d2
   30280:	fmadd	d6, d7, d1, d6
   30284:	fsub	d3, d3, d0
   30288:	fadd	d3, d3, d11
   3028c:	fmadd	d5, d6, d1, d5
   30290:	fmadd	d4, d5, d1, d4
   30294:	fmsub	d3, d4, d17, d3
   30298:	fadd	d9, d2, d3
   3029c:	fsub	d2, d2, d9
   302a0:	fadd	d2, d2, d3
   302a4:	fmadd	d2, d2, d16, d9
   302a8:	fcmp	d2, d9
   302ac:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   302b0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   302b4:	fmov	d2, #5.000000000000000000e-01
   302b8:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   302bc:	adrp	x2, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   302c0:	ldr	d4, [x0, #648]
   302c4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   302c8:	ldr	d18, [x1, #592]
   302cc:	ldr	d7, [x0, #656]
   302d0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   302d4:	fmadd	d7, d1, d4, d7
   302d8:	ldr	d5, [x2, #688]
   302dc:	ldr	d20, [x0, #664]
   302e0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   302e4:	ldr	d6, [x0, #672]
   302e8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   302ec:	ldr	d3, [x0, #832]
   302f0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   302f4:	ldr	d17, [x0, #680]
   302f8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   302fc:	fadd	d4, d0, d3
   30300:	fmadd	d20, d7, d1, d20
   30304:	ldr	d19, [x0, #584]
   30308:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3030c:	ldr	d16, [x0, #840]
   30310:	fsub	d4, d4, d3
   30314:	fadd	d9, d18, d19
   30318:	fmul	d7, d4, d4
   3031c:	fsub	d3, d0, d4
   30320:	fmul	d2, d4, d2
   30324:	fmul	d7, d7, d4
   30328:	fmadd	d4, d20, d1, d6
   3032c:	fmul	d9, d9, d3
   30330:	fmul	d2, d2, d0
   30334:	fmadd	d2, d9, d3, d2
   30338:	fmadd	d9, d18, d7, d0
   3033c:	fmadd	d17, d4, d1, d17
   30340:	fmul	d2, d2, d3
   30344:	fsub	d3, d10, d9
   30348:	fsub	d6, d0, d9
   3034c:	fmadd	d6, d18, d7, d6
   30350:	fmadd	d5, d17, d1, d5
   30354:	fsub	d4, d10, d3
   30358:	fsub	d4, d4, d9
   3035c:	fmul	d5, d5, d1
   30360:	fadd	d4, d4, d11
   30364:	fmul	d1, d5, d1
   30368:	fmadd	d1, d1, d0, d2
   3036c:	fmadd	d1, d19, d7, d1
   30370:	fadd	d1, d6, d1
   30374:	fsub	d1, d4, d1
   30378:	fadd	d9, d3, d1
   3037c:	fsub	d3, d3, d9
   30380:	fadd	d3, d3, d1
   30384:	fmadd	d3, d3, d16, d9
   30388:	fcmp	d3, d9
   3038c:	b.ne	306bc <__acos_finite@GLIBC_2.17+0x4ec>  // b.any
   30390:	ldp	d10, d11, [sp, #48]
   30394:	ldr	x19, [x19, #4032]
   30398:	ldr	x1, [sp, #104]
   3039c:	ldr	x0, [x19]
   303a0:	eor	x0, x1, x0
   303a4:	cbnz	x0, 30ef4 <__acos_finite@GLIBC_2.17+0xd24>
   303a8:	fmov	d0, d9
   303ac:	ldr	x19, [sp, #16]
   303b0:	ldp	d8, d9, [sp, #32]
   303b4:	ldp	x29, x30, [sp], #112
   303b8:	ret
   303bc:	mov	w2, #0x3fdfffff            	// #1071644671
   303c0:	asr	x3, x1, #32
   303c4:	cmp	w0, w2
   303c8:	b.gt	30570 <__acos_finite@GLIBC_2.17+0x3a0>
   303cc:	stp	d10, d11, [sp, #48]
   303d0:	mov	w1, #0x3fcfffff            	// #1070596095
   303d4:	cmp	w0, w1
   303d8:	b.gt	308a4 <__acos_finite@GLIBC_2.17+0x6d4>
   303dc:	ubfx	x0, x0, #15, #5
   303e0:	mov	w1, #0xb                   	// #11
   303e4:	mul	w0, w0, w1
   303e8:	adrp	x2, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   303ec:	add	x1, x2, #0x880
   303f0:	cmp	w3, #0x0
   303f4:	ldr	d0, [x1, w0, sxtw #3]
   303f8:	b.le	308b8 <__acos_finite@GLIBC_2.17+0x6e8>
   303fc:	fsub	d0, d8, d0
   30400:	add	x1, x2, #0x880
   30404:	add	w6, w0, #0x6
   30408:	add	w8, w0, #0x5
   3040c:	add	w5, w0, #0x4
   30410:	add	w7, w0, #0x3
   30414:	add	w4, w0, #0x2
   30418:	ldr	d7, [x1, w6, sxtw #3]
   3041c:	fmul	d5, d0, d0
   30420:	ldr	d10, [x1, w8, sxtw #3]
   30424:	add	w6, w0, #0x7
   30428:	ldr	d9, [x1, w5, sxtw #3]
   3042c:	add	w5, w0, #0x1
   30430:	fmadd	d10, d7, d0, d10
   30434:	ldr	d7, [x1, w7, sxtw #3]
   30438:	ldr	d6, [x1, w4, sxtw #3]
   3043c:	add	w4, w0, #0x8
   30440:	ldr	d4, [x1, w6, sxtw #3]
   30444:	adrp	x6, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30448:	ldr	d1, [x1, w5, sxtw #3]
   3044c:	adrp	x5, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30450:	cmp	w3, #0x0
   30454:	ldr	d11, [x6, #568]
   30458:	ldr	d2, [x5, #576]
   3045c:	ldr	d3, [x1, w4, sxtw #3]
   30460:	fmadd	d9, d10, d0, d9
   30464:	fmadd	d7, d9, d0, d7
   30468:	fmadd	d6, d7, d0, d6
   3046c:	fmadd	d5, d5, d6, d4
   30470:	fmadd	d1, d1, d0, d5
   30474:	b.le	308c4 <__acos_finite@GLIBC_2.17+0x6f4>
   30478:	fsub	d4, d11, d1
   3047c:	fsub	d1, d2, d3
   30480:	fadd	d9, d4, d1
   30484:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30488:	ldr	d6, [x1, #848]
   3048c:	fsub	d1, d1, d9
   30490:	fadd	d1, d1, d4
   30494:	fmadd	d1, d1, d6, d9
   30498:	fcmp	d1, d9
   3049c:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   304a0:	add	x2, x2, #0x880
   304a4:	add	w1, w0, #0x9
   304a8:	add	w0, w0, #0xa
   304ac:	cmp	w3, #0x0
   304b0:	ldr	d1, [x2, w1, sxtw #3]
   304b4:	ldr	d6, [x2, w0, sxtw #3]
   304b8:	fmadd	d4, d1, d0, d3
   304bc:	fmadd	d5, d6, d0, d5
   304c0:	fsub	d3, d3, d4
   304c4:	fmadd	d0, d1, d0, d3
   304c8:	fadd	d0, d0, d5
   304cc:	b.le	30a38 <__acos_finite@GLIBC_2.17+0x868>
   304d0:	fsub	d1, d2, d4
   304d4:	fsub	d2, d2, d1
   304d8:	fsub	d2, d2, d4
   304dc:	fsub	d2, d2, d0
   304e0:	fadd	d2, d2, d11
   304e4:	fadd	d9, d1, d2
   304e8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   304ec:	ldr	d0, [x0, #856]
   304f0:	fsub	d1, d1, d9
   304f4:	fadd	d2, d1, d2
   304f8:	fmadd	d0, d2, d0, d9
   304fc:	fcmp	d0, d9
   30500:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   30504:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30508:	fmov	d1, #5.000000000000000000e-01
   3050c:	fmov	d0, d9
   30510:	ldr	d10, [x0, #712]
   30514:	add	x0, sp, #0x58
   30518:	fmadd	d10, d2, d10, d9
   3051c:	fsub	d2, d10, d9
   30520:	fmul	d1, d2, d1
   30524:	bl	4ea98 <__exp2f_finite@GLIBC_2.17+0x2030>
   30528:	ldp	d0, d2, [sp, #88]
   3052c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30530:	ldr	d1, [x0, #736]
   30534:	fsub	d0, d0, d8
   30538:	fadd	d0, d0, d2
   3053c:	fcmpe	d0, d1
   30540:	b.gt	30a50 <__acos_finite@GLIBC_2.17+0x880>
   30544:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30548:	ldr	d1, [x0, #744]
   3054c:	fcmpe	d0, d1
   30550:	b.pl	30a18 <__acos_finite@GLIBC_2.17+0x848>  // b.nfrst
   30554:	fcmp	d9, d10
   30558:	fcsel	d9, d9, d10, le
   3055c:	ldp	d10, d11, [sp, #48]
   30560:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30564:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30568:	ldr	d9, [x0, #576]
   3056c:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30570:	mov	w2, #0x3fe7ffff            	// #1072168959
   30574:	cmp	w0, w2
   30578:	b.gt	30728 <__acos_finite@GLIBC_2.17+0x558>
   3057c:	asr	w0, w0, #11
   30580:	adrp	x2, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30584:	and	w0, w0, #0x1fc
   30588:	add	x1, x2, #0x880
   3058c:	stp	d10, d11, [sp, #48]
   30590:	cmp	w3, #0x0
   30594:	add	w0, w0, w0, lsl #1
   30598:	add	w4, w0, #0x420
   3059c:	ldr	d1, [x1, w4, sxtw #3]
   305a0:	b.le	30a04 <__acos_finite@GLIBC_2.17+0x834>
   305a4:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   305a8:	fsub	d2, d0, d1
   305ac:	ldr	d18, [x1, #864]
   305b0:	add	x1, x2, #0x880
   305b4:	add	w4, w0, #0x427
   305b8:	add	w6, w0, #0x426
   305bc:	add	w8, w0, #0x425
   305c0:	add	w7, w0, #0x424
   305c4:	add	w5, w0, #0x423
   305c8:	ldr	d10, [x1, w4, sxtw #3]
   305cc:	add	w4, w0, #0x422
   305d0:	ldr	d17, [x1, w6, sxtw #3]
   305d4:	fmul	d5, d2, d2
   305d8:	ldr	d11, [x1, w8, sxtw #3]
   305dc:	add	w6, w0, #0x428
   305e0:	fmadd	d17, d10, d2, d17
   305e4:	ldr	d10, [x1, w7, sxtw #3]
   305e8:	ldr	d9, [x1, w5, sxtw #3]
   305ec:	add	w5, w0, #0x421
   305f0:	ldr	d7, [x1, w4, sxtw #3]
   305f4:	add	w4, w0, #0x429
   305f8:	ldr	d6, [x1, w6, sxtw #3]
   305fc:	adrp	x6, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30600:	ldr	d4, [x1, w5, sxtw #3]
   30604:	adrp	x5, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30608:	cmp	w3, #0x0
   3060c:	ldr	d16, [x6, #568]
   30610:	ldr	d3, [x5, #576]
   30614:	ldr	d1, [x1, w4, sxtw #3]
   30618:	fmadd	d11, d17, d2, d11
   3061c:	fmadd	d10, d11, d2, d10
   30620:	fmadd	d9, d10, d2, d9
   30624:	fmadd	d7, d9, d2, d7
   30628:	fmadd	d5, d5, d7, d6
   3062c:	fmadd	d4, d4, d2, d5
   30630:	b.le	30a60 <__acos_finite@GLIBC_2.17+0x890>
   30634:	fsub	d4, d16, d4
   30638:	fsub	d0, d3, d1
   3063c:	fadd	d9, d4, d0
   30640:	fsub	d0, d0, d9
   30644:	fadd	d0, d0, d4
   30648:	fmadd	d0, d0, d18, d9
   3064c:	fcmp	d0, d9
   30650:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   30654:	add	x2, x2, #0x880
   30658:	add	w1, w0, #0x42a
   3065c:	add	w0, w0, #0x42b
   30660:	cmp	w3, #0x0
   30664:	ldr	d4, [x2, w1, sxtw #3]
   30668:	ldr	d0, [x2, w0, sxtw #3]
   3066c:	fmadd	d6, d4, d2, d1
   30670:	fmadd	d0, d0, d2, d5
   30674:	fsub	d1, d1, d6
   30678:	fmadd	d1, d4, d2, d1
   3067c:	fadd	d1, d1, d0
   30680:	b.le	30a6c <__acos_finite@GLIBC_2.17+0x89c>
   30684:	fsub	d2, d3, d6
   30688:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3068c:	ldr	d4, [x0, #872]
   30690:	fsub	d0, d3, d2
   30694:	fsub	d0, d0, d6
   30698:	fsub	d0, d0, d1
   3069c:	fadd	d0, d0, d16
   306a0:	fadd	d9, d2, d0
   306a4:	fsub	d2, d2, d9
   306a8:	fadd	d2, d2, d0
   306ac:	fmadd	d0, d4, d2, d9
   306b0:	fcmp	d0, d9
   306b4:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   306b8:	b	30504 <__acos_finite@GLIBC_2.17+0x334>
   306bc:	movi	d1, #0x0
   306c0:	add	x0, sp, #0x58
   306c4:	bl	4df18 <__exp2f_finite@GLIBC_2.17+0x14b0>
   306c8:	ldp	d3, d2, [sp, #88]
   306cc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   306d0:	ldr	d1, [x0, #704]
   306d4:	fsub	d0, d10, d3
   306d8:	fsub	d11, d11, d2
   306dc:	fsub	d2, d10, d0
   306e0:	fsub	d2, d2, d3
   306e4:	fadd	d2, d2, d11
   306e8:	fadd	d9, d0, d2
   306ec:	fsub	d0, d0, d9
   306f0:	fadd	d2, d0, d2
   306f4:	fmadd	d0, d2, d1, d9
   306f8:	fcmp	d0, d9
   306fc:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   30700:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30704:	fmov	d1, d9
   30708:	fmov	d0, d8
   3070c:	ldr	d3, [x0, #712]
   30710:	fmadd	d2, d2, d3, d9
   30714:	bl	51330 <__exp2f_finite@GLIBC_2.17+0x48c8>
   30718:	fmov	d9, d0
   3071c:	str	d0, [sp, #72]
   30720:	ldp	d10, d11, [sp, #48]
   30724:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30728:	mov	w2, #0x7fff                	// #32767
   3072c:	movk	w2, #0x3fed, lsl #16
   30730:	cmp	w0, w2
   30734:	b.le	308d0 <__acos_finite@GLIBC_2.17+0x700>
   30738:	mov	w2, #0x7fff                	// #32767
   3073c:	movk	w2, #0x3fee, lsl #16
   30740:	cmp	w0, w2
   30744:	b.gt	30a8c <__acos_finite@GLIBC_2.17+0x8bc>
   30748:	ubfx	x0, x0, #13, #7
   3074c:	adrp	x2, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30750:	add	x4, x2, #0x880
   30754:	stp	d10, d11, [sp, #48]
   30758:	lsl	w1, w0, #3
   3075c:	sub	w0, w1, w0
   30760:	cmp	w3, #0x0
   30764:	lsl	w0, w0, #1
   30768:	add	w1, w0, #0x374
   3076c:	ldr	d0, [x4, w1, sxtw #3]
   30770:	b.le	30d98 <__acos_finite@GLIBC_2.17+0xbc8>
   30774:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30778:	fsub	d0, d8, d0
   3077c:	ldr	d18, [x1, #864]
   30780:	add	x1, x2, #0x880
   30784:	add	w7, w0, #0x37d
   30788:	add	w5, w0, #0x37c
   3078c:	add	w4, w0, #0x37b
   30790:	add	w8, w0, #0x37a
   30794:	add	w6, w0, #0x379
   30798:	ldr	d16, [x1, w7, sxtw #3]
   3079c:	add	w7, w0, #0x378
   307a0:	ldr	d2, [x1, w5, sxtw #3]
   307a4:	add	w5, w0, #0x377
   307a8:	ldr	d17, [x1, w4, sxtw #3]
   307ac:	add	w4, w0, #0x376
   307b0:	fmadd	d2, d16, d0, d2
   307b4:	ldr	d16, [x1, w8, sxtw #3]
   307b8:	ldr	d10, [x1, w6, sxtw #3]
   307bc:	fmul	d5, d0, d0
   307c0:	ldr	d9, [x1, w7, sxtw #3]
   307c4:	add	w6, w0, #0x37e
   307c8:	ldr	d7, [x1, w5, sxtw #3]
   307cc:	add	w5, w0, #0x375
   307d0:	ldr	d6, [x1, w4, sxtw #3]
   307d4:	add	w4, w0, #0x37f
   307d8:	ldr	d4, [x1, w6, sxtw #3]
   307dc:	adrp	x6, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   307e0:	ldr	d1, [x1, w5, sxtw #3]
   307e4:	adrp	x5, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   307e8:	cmp	w3, #0x0
   307ec:	ldr	d11, [x6, #568]
   307f0:	fmadd	d17, d2, d0, d17
   307f4:	ldr	d2, [x5, #576]
   307f8:	ldr	d3, [x1, w4, sxtw #3]
   307fc:	fmadd	d16, d17, d0, d16
   30800:	fmadd	d10, d16, d0, d10
   30804:	fmadd	d9, d10, d0, d9
   30808:	fmadd	d7, d9, d0, d7
   3080c:	fmadd	d6, d7, d0, d6
   30810:	fmadd	d5, d5, d6, d4
   30814:	fmadd	d1, d1, d0, d5
   30818:	b.le	30d8c <__acos_finite@GLIBC_2.17+0xbbc>
   3081c:	fsub	d4, d11, d1
   30820:	fsub	d1, d2, d3
   30824:	fadd	d9, d4, d1
   30828:	fsub	d1, d1, d9
   3082c:	fadd	d1, d1, d4
   30830:	fmadd	d1, d1, d18, d9
   30834:	fcmp	d1, d9
   30838:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   3083c:	add	x2, x2, #0x880
   30840:	add	w1, w0, #0x380
   30844:	add	w0, w0, #0x381
   30848:	cmp	w3, #0x0
   3084c:	ldr	d4, [x2, w1, sxtw #3]
   30850:	ldr	d1, [x2, w0, sxtw #3]
   30854:	fmadd	d6, d4, d0, d3
   30858:	fmadd	d5, d1, d0, d5
   3085c:	fsub	d1, d3, d6
   30860:	fmadd	d0, d4, d0, d1
   30864:	fadd	d1, d0, d5
   30868:	b.le	30bc4 <__acos_finite@GLIBC_2.17+0x9f4>
   3086c:	fsub	d3, d2, d6
   30870:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30874:	ldr	d4, [x0, #808]
   30878:	fsub	d0, d2, d3
   3087c:	fsub	d0, d0, d6
   30880:	fsub	d0, d0, d1
   30884:	fadd	d0, d0, d11
   30888:	fadd	d9, d3, d0
   3088c:	fsub	d2, d3, d9
   30890:	fadd	d2, d2, d0
   30894:	fmadd	d0, d4, d2, d9
   30898:	fcmp	d0, d9
   3089c:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   308a0:	b	30504 <__acos_finite@GLIBC_2.17+0x334>
   308a4:	ubfx	x0, x0, #14, #6
   308a8:	mov	w1, #0xb                   	// #11
   308ac:	mul	w0, w0, w1
   308b0:	add	w0, w0, #0x160
   308b4:	b	303e8 <__acos_finite@GLIBC_2.17+0x218>
   308b8:	fneg	d1, d8
   308bc:	fsub	d0, d1, d0
   308c0:	b	30400 <__acos_finite@GLIBC_2.17+0x230>
   308c4:	fadd	d4, d1, d11
   308c8:	fadd	d1, d3, d2
   308cc:	b	30480 <__acos_finite@GLIBC_2.17+0x2b0>
   308d0:	ubfx	x0, x0, #13, #7
   308d4:	mov	w4, #0xd                   	// #13
   308d8:	adrp	x2, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   308dc:	add	x1, x2, #0x880
   308e0:	stp	d10, d11, [sp, #48]
   308e4:	cmp	w3, #0x0
   308e8:	mul	w0, w0, w4
   308ec:	add	w4, w0, #0x3e0
   308f0:	ldr	d0, [x1, w4, sxtw #3]
   308f4:	b.le	30bf0 <__acos_finite@GLIBC_2.17+0xa20>
   308f8:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   308fc:	fsub	d0, d8, d0
   30900:	ldr	d18, [x1, #864]
   30904:	add	x1, x2, #0x880
   30908:	add	w5, w0, #0x3e8
   3090c:	add	w4, w0, #0x3e7
   30910:	add	w6, w0, #0x3e6
   30914:	add	w8, w0, #0x3e5
   30918:	add	w7, w0, #0x3e4
   3091c:	ldr	d11, [x1, w5, sxtw #3]
   30920:	add	w5, w0, #0x3e3
   30924:	ldr	d2, [x1, w4, sxtw #3]
   30928:	add	w4, w0, #0x3e2
   3092c:	ldr	d17, [x1, w6, sxtw #3]
   30930:	fmul	d5, d0, d0
   30934:	fmadd	d2, d11, d0, d2
   30938:	ldr	d11, [x1, w8, sxtw #3]
   3093c:	ldr	d10, [x1, w7, sxtw #3]
   30940:	add	w6, w0, #0x3e9
   30944:	ldr	d9, [x1, w5, sxtw #3]
   30948:	add	w5, w0, #0x3e1
   3094c:	ldr	d7, [x1, w4, sxtw #3]
   30950:	add	w4, w0, #0x3ea
   30954:	ldr	d6, [x1, w6, sxtw #3]
   30958:	adrp	x6, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3095c:	ldr	d4, [x1, w5, sxtw #3]
   30960:	adrp	x5, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30964:	cmp	w3, #0x0
   30968:	ldr	d16, [x6, #568]
   3096c:	ldr	d3, [x5, #576]
   30970:	fmadd	d17, d2, d0, d17
   30974:	ldr	d2, [x1, w4, sxtw #3]
   30978:	fmadd	d11, d17, d0, d11
   3097c:	fmadd	d10, d11, d0, d10
   30980:	fmadd	d9, d10, d0, d9
   30984:	fmadd	d7, d9, d0, d7
   30988:	fmadd	d5, d5, d7, d6
   3098c:	fmadd	d4, d4, d0, d5
   30990:	b.le	30be4 <__acos_finite@GLIBC_2.17+0xa14>
   30994:	fsub	d4, d16, d4
   30998:	fsub	d1, d3, d2
   3099c:	fadd	d9, d4, d1
   309a0:	fsub	d1, d1, d9
   309a4:	fadd	d1, d1, d4
   309a8:	fmadd	d1, d1, d18, d9
   309ac:	fcmp	d1, d9
   309b0:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   309b4:	add	x2, x2, #0x880
   309b8:	add	w1, w0, #0x3eb
   309bc:	add	w0, w0, #0x3ec
   309c0:	cmp	w3, #0x0
   309c4:	ldr	d4, [x2, w1, sxtw #3]
   309c8:	ldr	d1, [x2, w0, sxtw #3]
   309cc:	fmadd	d6, d4, d0, d2
   309d0:	fmadd	d5, d1, d0, d5
   309d4:	fsub	d1, d2, d6
   309d8:	fmadd	d1, d4, d0, d1
   309dc:	fadd	d1, d1, d5
   309e0:	b.le	30c04 <__acos_finite@GLIBC_2.17+0xa34>
   309e4:	fsub	d2, d3, d6
   309e8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   309ec:	ldr	d4, [x0, #880]
   309f0:	fsub	d0, d3, d2
   309f4:	fsub	d0, d0, d6
   309f8:	fsub	d0, d0, d1
   309fc:	fadd	d0, d0, d16
   30a00:	b	306a0 <__acos_finite@GLIBC_2.17+0x4d0>
   30a04:	fneg	d2, d0
   30a08:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30a0c:	ldr	d18, [x1, #848]
   30a10:	fsub	d2, d2, d1
   30a14:	b	305b0 <__acos_finite@GLIBC_2.17+0x3e0>
   30a18:	fmov	d2, d10
   30a1c:	fmov	d1, d9
   30a20:	fmov	d0, d8
   30a24:	bl	51330 <__exp2f_finite@GLIBC_2.17+0x48c8>
   30a28:	fmov	d9, d0
   30a2c:	str	d0, [sp, #72]
   30a30:	ldp	d10, d11, [sp, #48]
   30a34:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30a38:	fadd	d1, d4, d2
   30a3c:	fadd	d0, d0, d11
   30a40:	fsub	d2, d2, d1
   30a44:	fadd	d2, d2, d4
   30a48:	fadd	d2, d2, d0
   30a4c:	b	304e4 <__acos_finite@GLIBC_2.17+0x314>
   30a50:	fcmp	d9, d10
   30a54:	fcsel	d9, d9, d10, pl  // pl = nfrst
   30a58:	ldp	d10, d11, [sp, #48]
   30a5c:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30a60:	fadd	d4, d4, d16
   30a64:	fadd	d0, d1, d3
   30a68:	b	3063c <__acos_finite@GLIBC_2.17+0x46c>
   30a6c:	fadd	d2, d6, d3
   30a70:	fadd	d1, d1, d16
   30a74:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30a78:	ldr	d4, [x0, #856]
   30a7c:	fsub	d0, d3, d2
   30a80:	fadd	d0, d0, d6
   30a84:	fadd	d0, d0, d1
   30a88:	b	306a0 <__acos_finite@GLIBC_2.17+0x4d0>
   30a8c:	mov	w2, #0x3feeffff            	// #1072627711
   30a90:	cmp	w0, w2
   30a94:	b.gt	30c24 <__acos_finite@GLIBC_2.17+0xa54>
   30a98:	ubfx	x0, x0, #13, #7
   30a9c:	adrp	x2, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30aa0:	add	x1, x2, #0x880
   30aa4:	stp	d10, d11, [sp, #48]
   30aa8:	lsl	w4, w0, #4
   30aac:	sub	w0, w4, w0
   30ab0:	cmp	w3, #0x0
   30ab4:	add	w4, w0, #0x300
   30ab8:	ldr	d1, [x1, w4, sxtw #3]
   30abc:	b.le	30df4 <__acos_finite@GLIBC_2.17+0xc24>
   30ac0:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30ac4:	fsub	d1, d0, d1
   30ac8:	ldr	d19, [x1, #864]
   30acc:	add	x1, x2, #0x880
   30ad0:	add	w6, w0, #0x30a
   30ad4:	add	w7, w0, #0x309
   30ad8:	add	w5, w0, #0x308
   30adc:	add	w8, w0, #0x307
   30ae0:	add	w4, w0, #0x306
   30ae4:	ldr	d0, [x1, w6, sxtw #3]
   30ae8:	add	w6, w0, #0x305
   30aec:	ldr	d2, [x1, w7, sxtw #3]
   30af0:	add	w7, w0, #0x304
   30af4:	ldr	d18, [x1, w5, sxtw #3]
   30af8:	add	w5, w0, #0x303
   30afc:	fmadd	d2, d0, d1, d2
   30b00:	ldr	d17, [x1, w8, sxtw #3]
   30b04:	ldr	d16, [x1, w4, sxtw #3]
   30b08:	add	w4, w0, #0x302
   30b0c:	ldr	d10, [x1, w6, sxtw #3]
   30b10:	fmul	d5, d1, d1
   30b14:	ldr	d9, [x1, w7, sxtw #3]
   30b18:	add	w6, w0, #0x30b
   30b1c:	ldr	d7, [x1, w5, sxtw #3]
   30b20:	add	w5, w0, #0x301
   30b24:	ldr	d6, [x1, w4, sxtw #3]
   30b28:	add	w4, w0, #0x30c
   30b2c:	ldr	d4, [x1, w6, sxtw #3]
   30b30:	adrp	x6, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30b34:	ldr	d0, [x1, w5, sxtw #3]
   30b38:	adrp	x5, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30b3c:	fmadd	d18, d2, d1, d18
   30b40:	cmp	w3, #0x0
   30b44:	ldr	d11, [x6, #568]
   30b48:	ldr	d2, [x5, #576]
   30b4c:	ldr	d3, [x1, w4, sxtw #3]
   30b50:	fmadd	d17, d18, d1, d17
   30b54:	fmadd	d16, d17, d1, d16
   30b58:	fmadd	d10, d16, d1, d10
   30b5c:	fmadd	d9, d10, d1, d9
   30b60:	fmadd	d7, d9, d1, d7
   30b64:	fmadd	d6, d7, d1, d6
   30b68:	fmadd	d5, d5, d6, d4
   30b6c:	fmadd	d0, d0, d1, d5
   30b70:	b.le	30de8 <__acos_finite@GLIBC_2.17+0xc18>
   30b74:	fsub	d4, d11, d0
   30b78:	fsub	d0, d2, d3
   30b7c:	fadd	d9, d4, d0
   30b80:	fsub	d0, d0, d9
   30b84:	fadd	d0, d0, d4
   30b88:	fmadd	d0, d0, d19, d9
   30b8c:	fcmp	d0, d9
   30b90:	b.eq	30390 <__acos_finite@GLIBC_2.17+0x1c0>  // b.none
   30b94:	add	x2, x2, #0x880
   30b98:	add	w1, w0, #0x30d
   30b9c:	add	w0, w0, #0x30e
   30ba0:	cmp	w3, #0x0
   30ba4:	ldr	d4, [x2, w1, sxtw #3]
   30ba8:	ldr	d0, [x2, w0, sxtw #3]
   30bac:	fmadd	d6, d4, d1, d3
   30bb0:	fmadd	d0, d0, d1, d5
   30bb4:	fsub	d3, d3, d6
   30bb8:	fmadd	d1, d4, d1, d3
   30bbc:	fadd	d1, d1, d0
   30bc0:	b.gt	3086c <__acos_finite@GLIBC_2.17+0x69c>
   30bc4:	fadd	d3, d6, d2
   30bc8:	fadd	d1, d1, d11
   30bcc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30bd0:	ldr	d4, [x0, #728]
   30bd4:	fsub	d0, d2, d3
   30bd8:	fadd	d0, d0, d6
   30bdc:	fadd	d0, d0, d1
   30be0:	b	30888 <__acos_finite@GLIBC_2.17+0x6b8>
   30be4:	fadd	d4, d4, d16
   30be8:	fadd	d1, d2, d3
   30bec:	b	3099c <__acos_finite@GLIBC_2.17+0x7cc>
   30bf0:	fneg	d1, d8
   30bf4:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30bf8:	ldr	d18, [x1, #752]
   30bfc:	fsub	d0, d1, d0
   30c00:	b	30904 <__acos_finite@GLIBC_2.17+0x734>
   30c04:	fadd	d2, d6, d3
   30c08:	fadd	d1, d1, d16
   30c0c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30c10:	ldr	d4, [x0, #760]
   30c14:	fsub	d0, d3, d2
   30c18:	fadd	d0, d0, d6
   30c1c:	fadd	d0, d0, d1
   30c20:	b	306a0 <__acos_finite@GLIBC_2.17+0x4d0>
   30c24:	mov	w2, #0x3fefffff            	// #1072693247
   30c28:	cmp	w0, w2
   30c2c:	b.gt	30dac <__acos_finite@GLIBC_2.17+0xbdc>
   30c30:	stp	d10, d11, [sp, #48]
   30c34:	cmp	w3, #0x0
   30c38:	fmov	d0, #1.000000000000000000e+00
   30c3c:	b.le	30ebc <__acos_finite@GLIBC_2.17+0xcec>
   30c40:	fsub	d0, d0, d8
   30c44:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30c48:	fmov	d18, #5.000000000000000000e-01
   30c4c:	adrp	x5, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30c50:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30c54:	ldr	d19, [x1, #776]
   30c58:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30c5c:	fmul	d0, d0, d18
   30c60:	ldr	d6, [x5, #896]
   30c64:	ldr	d10, [x1, #784]
   30c68:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30c6c:	adrp	x5, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30c70:	add	x0, x0, #0x3a0
   30c74:	ldr	d7, [x1, #792]
   30c78:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30c7c:	ldr	d17, [x5, #600]
   30c80:	mov	w2, #0x1ff                 	// #511
   30c84:	ldr	d1, [x1, #800]
   30c88:	fmov	x1, d0
   30c8c:	add	x4, x0, #0x400
   30c90:	fmov	d5, #1.000000000000000000e+00
   30c94:	fmov	d4, #1.500000000000000000e+00
   30c98:	asr	x5, x1, #53
   30c9c:	ubfx	x1, x1, #46, #7
   30ca0:	sub	w2, w2, w5
   30ca4:	adrp	x5, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30ca8:	ldr	d16, [x5, #608]
   30cac:	adrp	x5, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30cb0:	fmadd	d17, d0, d17, d16
   30cb4:	ldr	d2, [x0, x1, lsl #3]
   30cb8:	ldr	d20, [x4, w2, sxtw #3]
   30cbc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30cc0:	ldr	d16, [x5, #616]
   30cc4:	ldr	d11, [x0, #624]
   30cc8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30ccc:	fmul	d2, d2, d20
   30cd0:	ldr	d9, [x0, #632]
   30cd4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30cd8:	ldr	d3, [x0, #640]
   30cdc:	fmadd	d16, d17, d0, d16
   30ce0:	fmul	d17, d2, d2
   30ce4:	fmsub	d5, d17, d0, d5
   30ce8:	fmadd	d11, d16, d0, d11
   30cec:	fmadd	d10, d5, d19, d10
   30cf0:	fmadd	d9, d11, d0, d9
   30cf4:	fmadd	d7, d10, d5, d7
   30cf8:	fmadd	d3, d9, d0, d3
   30cfc:	fmadd	d1, d7, d5, d1
   30d00:	fmul	d3, d3, d0
   30d04:	fmul	d1, d1, d2
   30d08:	fmul	d5, d0, d1
   30d0c:	fmul	d1, d1, d18
   30d10:	fmadd	d2, d5, d6, d5
   30d14:	fmsub	d1, d1, d5, d4
   30d18:	fmsub	d2, d5, d6, d2
   30d1c:	fmadd	d1, d1, d5, d2
   30d20:	fmsub	d0, d2, d2, d0
   30d24:	fdiv	d1, d0, d1
   30d28:	fadd	d0, d2, d1
   30d2c:	fmul	d3, d3, d0
   30d30:	tbnz	w3, #31, 30e08 <__acos_finite@GLIBC_2.17+0xc38>
   30d34:	fadd	d3, d1, d3
   30d38:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30d3c:	ldr	d5, [x0, #920]
   30d40:	fadd	d9, d2, d3
   30d44:	fsub	d4, d2, d9
   30d48:	fadd	d3, d4, d3
   30d4c:	fmadd	d3, d3, d5, d9
   30d50:	fcmp	d3, d9
   30d54:	b.eq	30d80 <__acos_finite@GLIBC_2.17+0xbb0>  // b.none
   30d58:	fsub	d2, d2, d0
   30d5c:	add	x0, sp, #0x58
   30d60:	fadd	d1, d2, d1
   30d64:	bl	4df18 <__exp2f_finite@GLIBC_2.17+0x14b0>
   30d68:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30d6c:	ldp	d9, d2, [sp, #88]
   30d70:	ldr	d0, [x0, #912]
   30d74:	fmadd	d0, d2, d0, d9
   30d78:	fcmp	d0, d9
   30d7c:	b.ne	30ed8 <__acos_finite@GLIBC_2.17+0xd08>  // b.any
   30d80:	fadd	d9, d9, d9
   30d84:	ldp	d10, d11, [sp, #48]
   30d88:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30d8c:	fadd	d4, d1, d11
   30d90:	fadd	d1, d3, d2
   30d94:	b	30824 <__acos_finite@GLIBC_2.17+0x654>
   30d98:	fneg	d1, d8
   30d9c:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30da0:	ldr	d18, [x1, #888]
   30da4:	fsub	d0, d1, d0
   30da8:	b	30780 <__acos_finite@GLIBC_2.17+0x5b0>
   30dac:	mov	w2, #0x3ff00000            	// #1072693248
   30db0:	cmp	w0, w2
   30db4:	b.eq	30ec4 <__acos_finite@GLIBC_2.17+0xcf4>  // b.none
   30db8:	mov	w1, #0x7ff00000            	// #2146435072
   30dbc:	cmp	w0, w1
   30dc0:	b.gt	30dd0 <__acos_finite@GLIBC_2.17+0xc00>
   30dc4:	b.ne	30dd8 <__acos_finite@GLIBC_2.17+0xc08>  // b.any
   30dc8:	fmov	x0, d0
   30dcc:	cbz	w0, 30dd8 <__acos_finite@GLIBC_2.17+0xc08>
   30dd0:	fadd	d9, d8, d8
   30dd4:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30dd8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   30ddc:	fmov	d9, x0
   30de0:	fdiv	d9, d9, d9
   30de4:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30de8:	fadd	d4, d0, d11
   30dec:	fadd	d0, d3, d2
   30df0:	b	30b7c <__acos_finite@GLIBC_2.17+0x9ac>
   30df4:	fneg	d0, d0
   30df8:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30dfc:	ldr	d19, [x1, #888]
   30e00:	fsub	d1, d0, d1
   30e04:	b	30acc <__acos_finite@GLIBC_2.17+0x8fc>
   30e08:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30e0c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30e10:	adrp	x2, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30e14:	ldr	d10, [x1, #568]
   30e18:	ldr	d11, [x0, #576]
   30e1c:	ldr	d6, [x2, #904]
   30e20:	fsub	d5, d10, d1
   30e24:	fsub	d4, d11, d2
   30e28:	fsub	d5, d5, d3
   30e2c:	fadd	d9, d5, d4
   30e30:	fsub	d3, d4, d9
   30e34:	fadd	d3, d3, d5
   30e38:	fmadd	d3, d3, d6, d9
   30e3c:	fcmp	d3, d9
   30e40:	b.eq	30d80 <__acos_finite@GLIBC_2.17+0xbb0>  // b.none
   30e44:	fsub	d2, d2, d0
   30e48:	add	x0, sp, #0x58
   30e4c:	fadd	d1, d2, d1
   30e50:	bl	4df18 <__exp2f_finite@GLIBC_2.17+0x14b0>
   30e54:	ldp	d3, d0, [sp, #88]
   30e58:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30e5c:	ldr	d2, [x0, #912]
   30e60:	fsub	d1, d11, d3
   30e64:	fsub	d10, d10, d0
   30e68:	fsub	d0, d11, d1
   30e6c:	fsub	d0, d0, d3
   30e70:	fadd	d0, d0, d10
   30e74:	fadd	d9, d1, d0
   30e78:	fsub	d1, d1, d9
   30e7c:	fadd	d1, d1, d0
   30e80:	fmadd	d0, d1, d2, d9
   30e84:	fcmp	d0, d9
   30e88:	b.eq	30d80 <__acos_finite@GLIBC_2.17+0xbb0>  // b.none
   30e8c:	mov	x0, #0x3333333333333333    	// #3689348814741910323
   30e90:	fadd	d9, d9, d9
   30e94:	movk	x0, #0x3ff3, lsl #48
   30e98:	fmov	d2, x0
   30e9c:	fmov	d0, d8
   30ea0:	fmadd	d2, d1, d2, d9
   30ea4:	fmov	d1, d9
   30ea8:	bl	51330 <__exp2f_finite@GLIBC_2.17+0x48c8>
   30eac:	fmov	d9, d0
   30eb0:	str	d0, [sp, #72]
   30eb4:	ldp	d10, d11, [sp, #48]
   30eb8:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30ebc:	fadd	d0, d8, d0
   30ec0:	b	30c44 <__acos_finite@GLIBC_2.17+0xa74>
   30ec4:	cbnz	w1, 30dd8 <__acos_finite@GLIBC_2.17+0xc08>
   30ec8:	cmp	w3, #0x0
   30ecc:	b.le	30efc <__acos_finite@GLIBC_2.17+0xd2c>
   30ed0:	movi	d9, #0x0
   30ed4:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30ed8:	mov	x0, #0x3333333333333333    	// #3689348814741910323
   30edc:	fadd	d9, d9, d9
   30ee0:	movk	x0, #0x3ff3, lsl #48
   30ee4:	fmov	d1, x0
   30ee8:	fmov	d0, d8
   30eec:	fmadd	d2, d2, d1, d9
   30ef0:	b	30ea4 <__acos_finite@GLIBC_2.17+0xcd4>
   30ef4:	stp	d10, d11, [sp, #48]
   30ef8:	bl	ba70 <__stack_chk_fail@plt>
   30efc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   30f00:	ldr	d9, [x0, #576]
   30f04:	fadd	d9, d9, d9
   30f08:	b	30394 <__acos_finite@GLIBC_2.17+0x1c4>
   30f0c:	nop
   30f10:	sub	sp, sp, #0x820
   30f14:	mov	w1, #0x6                   	// #6
   30f18:	stp	x29, x30, [sp]
   30f1c:	mov	x29, sp
   30f20:	stp	x19, x20, [sp, #16]
   30f24:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   30f28:	add	x19, sp, #0x2f8
   30f2c:	ldr	x20, [x20, #4032]
   30f30:	stp	d8, d9, [sp, #64]
   30f34:	fmov	d8, d2
   30f38:	fmov	d9, d1
   30f3c:	ldr	x2, [x20]
   30f40:	str	x2, [sp, #2072]
   30f44:	mov	x2, #0x0                   	// #0
   30f48:	stp	x21, x22, [sp, #32]
   30f4c:	add	x21, sp, #0x68
   30f50:	mov	x0, x21
   30f54:	str	x23, [sp, #48]
   30f58:	add	x22, sp, #0x1b0
   30f5c:	str	d3, [sp, #88]
   30f60:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   30f64:	fmov	d0, d9
   30f68:	mov	x0, x22
   30f6c:	mov	w1, #0x6                   	// #6
   30f70:	add	x23, sp, #0x6d0
   30f74:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   30f78:	mov	x1, x21
   30f7c:	mov	x0, x22
   30f80:	mov	x2, x19
   30f84:	mov	w3, #0x6                   	// #6
   30f88:	bl	4fc20 <__exp2f_finite@GLIBC_2.17+0x31b8>
   30f8c:	add	x22, sp, #0x440
   30f90:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   30f94:	mov	w1, #0x6                   	// #6
   30f98:	add	x21, sp, #0x588
   30f9c:	ldr	d0, [x0, #2256]
   30fa0:	mov	x0, x23
   30fa4:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   30fa8:	mov	x1, x23
   30fac:	mov	x0, x19
   30fb0:	mov	x2, x22
   30fb4:	mov	w3, #0x6                   	// #6
   30fb8:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   30fbc:	mov	w3, #0x6                   	// #6
   30fc0:	mov	x1, x22
   30fc4:	mov	x0, x19
   30fc8:	mov	x2, x21
   30fcc:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   30fd0:	mov	x0, x21
   30fd4:	add	x1, sp, #0x58
   30fd8:	mov	w2, #0x6                   	// #6
   30fdc:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   30fe0:	ldr	d2, [sp, #88]
   30fe4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   30fe8:	fmov	d0, x0
   30fec:	ldr	x1, [sp, #2072]
   30ff0:	ldr	x0, [x20]
   30ff4:	eor	x0, x1, x0
   30ff8:	bsl	v0.8b, v8.8b, v2.8b
   30ffc:	cbnz	x0, 3101c <__acos_finite@GLIBC_2.17+0xe4c>
   31000:	ldp	x29, x30, [sp]
   31004:	ldp	x19, x20, [sp, #16]
   31008:	ldp	x21, x22, [sp, #32]
   3100c:	ldr	x23, [sp, #48]
   31010:	ldp	d8, d9, [sp, #64]
   31014:	add	sp, sp, #0x820
   31018:	ret
   3101c:	bl	ba70 <__stack_chk_fail@plt>
   31020:	sub	sp, sp, #0x9a0
   31024:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   31028:	stp	x29, x30, [sp]
   3102c:	mov	x29, sp
   31030:	ldr	x0, [x0, #4032]
   31034:	stp	x25, x26, [sp, #64]
   31038:	adrp	x26, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3103c:	add	x1, x26, #0xa10
   31040:	stp	d8, d9, [sp, #96]
   31044:	fmov	d9, d0
   31048:	fmov	d8, d1
   3104c:	add	x25, sp, #0xa0
   31050:	stp	x19, x20, [sp, #16]
   31054:	add	x19, sp, #0x330
   31058:	add	x20, sp, #0x708
   3105c:	stp	x21, x22, [sp, #32]
   31060:	add	x22, sp, #0x478
   31064:	add	x21, sp, #0x5c0
   31068:	stp	x23, x24, [sp, #48]
   3106c:	add	x24, sp, #0x1e8
   31070:	add	x23, sp, #0x850
   31074:	stp	x27, x28, [sp, #80]
   31078:	add	x28, sp, #0x90
   3107c:	mov	x27, #0x0                   	// #0
   31080:	str	x1, [sp, #120]
   31084:	add	x1, x1, #0x28
   31088:	mov	w26, #0x6                   	// #6
   3108c:	str	x1, [sp, #136]
   31090:	ldr	x1, [x0]
   31094:	str	x1, [sp, #2456]
   31098:	mov	x1, #0x0                   	// #0
   3109c:	add	x0, sp, #0x98
   310a0:	str	x0, [sp, #128]
   310a4:	fmov	d0, d9
   310a8:	mov	w1, w26
   310ac:	mov	x0, x25
   310b0:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   310b4:	fmov	d0, d8
   310b8:	mov	w1, w26
   310bc:	mov	x0, x24
   310c0:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   310c4:	mov	w3, w26
   310c8:	mov	x2, x19
   310cc:	mov	x1, x25
   310d0:	mov	x0, x24
   310d4:	bl	4fda8 <__exp2f_finite@GLIBC_2.17+0x3340>
   310d8:	ldr	x2, [sp, #120]
   310dc:	mov	w1, w26
   310e0:	mov	x0, x23
   310e4:	ldr	d0, [x2, x27, lsl #3]
   310e8:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   310ec:	mov	w3, w26
   310f0:	mov	x2, x20
   310f4:	mov	x1, x23
   310f8:	mov	x0, x19
   310fc:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   31100:	mov	w3, w26
   31104:	mov	x2, x22
   31108:	mov	x1, x20
   3110c:	mov	x0, x19
   31110:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   31114:	mov	w3, w26
   31118:	mov	x2, x21
   3111c:	mov	x1, x20
   31120:	mov	x0, x19
   31124:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   31128:	mov	w2, w26
   3112c:	mov	x1, x28
   31130:	mov	x0, x22
   31134:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   31138:	ldr	x1, [sp, #128]
   3113c:	mov	w2, w26
   31140:	mov	x0, x21
   31144:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   31148:	ldp	d0, d2, [sp, #144]
   3114c:	fcmp	d0, d2
   31150:	b.eq	3116c <__acos_finite@GLIBC_2.17+0xf9c>  // b.none
   31154:	add	x27, x27, #0x1
   31158:	cmp	x27, #0x5
   3115c:	b.eq	3116c <__acos_finite@GLIBC_2.17+0xf9c>  // b.none
   31160:	ldr	x0, [sp, #136]
   31164:	ldr	w26, [x0, x27, lsl #2]
   31168:	b	310a4 <__acos_finite@GLIBC_2.17+0xed4>
   3116c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   31170:	ldr	x0, [x0, #4032]
   31174:	ldr	x1, [sp, #2456]
   31178:	ldr	x0, [x0]
   3117c:	eor	x0, x1, x0
   31180:	cbnz	x0, 311a8 <__acos_finite@GLIBC_2.17+0xfd8>
   31184:	ldp	x29, x30, [sp]
   31188:	ldp	x19, x20, [sp, #16]
   3118c:	ldp	x21, x22, [sp, #32]
   31190:	ldp	x23, x24, [sp, #48]
   31194:	ldp	x25, x26, [sp, #64]
   31198:	ldp	x27, x28, [sp, #80]
   3119c:	ldp	d8, d9, [sp, #96]
   311a0:	add	sp, sp, #0x9a0
   311a4:	ret
   311a8:	bl	ba70 <__stack_chk_fail@plt>
   311ac:	nop

00000000000311b0 <__atan2_finite@GLIBC_2.17>:
   311b0:	fmov	x3, d1
   311b4:	mov	w0, #0x7ff00000            	// #2146435072
   311b8:	fmov	d2, d1
   311bc:	asr	x1, x3, #32
   311c0:	and	w5, w1, w0
   311c4:	cmp	w5, w0
   311c8:	b.eq	31310 <__atan2_finite@GLIBC_2.17+0x160>  // b.none
   311cc:	fmov	x2, d0
   311d0:	mov	w6, #0x7ff00000            	// #2146435072
   311d4:	asr	x0, x2, #32
   311d8:	and	w4, w0, w6
   311dc:	cmp	w4, w6
   311e0:	b.eq	31200 <__atan2_finite@GLIBC_2.17+0x50>  // b.none
   311e4:	cbnz	w0, 3120c <__atan2_finite@GLIBC_2.17+0x5c>
   311e8:	cbz	w2, 31324 <__atan2_finite@GLIBC_2.17+0x174>
   311ec:	fcmp	d2, #0.0
   311f0:	b.ne	31234 <__atan2_finite@GLIBC_2.17+0x84>  // b.any
   311f4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   311f8:	ldr	d0, [x0, #576]
   311fc:	ret
   31200:	and	w6, w0, #0xfffff
   31204:	orr	w6, w6, w2
   31208:	cbnz	w6, 31330 <__atan2_finite@GLIBC_2.17+0x180>
   3120c:	cmp	w2, #0x0
   31210:	mov	w6, #0x80000000            	// #-2147483648
   31214:	ccmp	w0, w6, #0x0, eq  // eq = none
   31218:	b.eq	31384 <__atan2_finite@GLIBC_2.17+0x1d4>  // b.none
   3121c:	fcmp	d2, #0.0
   31220:	b.ne	31234 <__atan2_finite@GLIBC_2.17+0x84>  // b.any
   31224:	tbz	w0, #31, 311f4 <__atan2_finite@GLIBC_2.17+0x44>
   31228:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3122c:	ldr	d0, [x0, #2392]
   31230:	ret
   31234:	mov	w6, #0x7ff00000            	// #2146435072
   31238:	cmp	w1, w6
   3123c:	b.eq	31338 <__atan2_finite@GLIBC_2.17+0x188>  // b.none
   31240:	cmp	w3, #0x0
   31244:	mov	w3, #0xfff00000            	// #-1048576
   31248:	ccmp	w1, w3, #0x0, eq  // eq = none
   3124c:	b.eq	31364 <__atan2_finite@GLIBC_2.17+0x1b4>  // b.none
   31250:	mov	w1, #0x7ff00000            	// #2146435072
   31254:	cmp	w0, w1
   31258:	b.eq	31718 <__atan2_finite@GLIBC_2.17+0x568>  // b.none
   3125c:	cmp	w2, #0x0
   31260:	mov	w1, #0xfff00000            	// #-1048576
   31264:	ccmp	w0, w1, #0x0, eq  // eq = none
   31268:	b.eq	31228 <__atan2_finite@GLIBC_2.17+0x78>  // b.none
   3126c:	stp	x29, x30, [sp, #-48]!
   31270:	mov	x29, sp
   31274:	stp	x19, x20, [sp, #16]
   31278:	mrs	x19, fpcr
   3127c:	ands	w20, w19, #0xc00000
   31280:	b.ne	31e18 <__atan2_finite@GLIBC_2.17+0xc68>  // b.any
   31284:	fcmpe	d2, #0.0
   31288:	fneg	d4, d2
   3128c:	fneg	d1, d0
   31290:	sub	w4, w4, w5
   31294:	mov	w0, #0x38fffff             	// #59768831
   31298:	fcsel	d4, d4, d2, mi  // mi = first
   3129c:	fcmpe	d0, #0.0
   312a0:	fcsel	d1, d1, d0, mi  // mi = first
   312a4:	cmp	w4, w0
   312a8:	b.gt	3139c <__atan2_finite@GLIBC_2.17+0x1ec>
   312ac:	mov	w0, #0xfc700000            	// #-59768832
   312b0:	cmp	w4, w0
   312b4:	b.gt	313b0 <__atan2_finite@GLIBC_2.17+0x200>
   312b8:	fcmpe	d2, #0.0
   312bc:	b.le	31738 <__atan2_finite@GLIBC_2.17+0x588>
   312c0:	fdiv	d3, d1, d4
   312c4:	mov	x0, #0x10000000000000      	// #4503599627370496
   312c8:	fmov	d2, x0
   312cc:	fcmpe	d3, d2
   312d0:	b.mi	32174 <__atan2_finite@GLIBC_2.17+0xfc4>  // b.first
   312d4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   312d8:	fmov	d1, x0
   312dc:	bif	v0.8b, v3.8b, v1.8b
   312e0:	fabs	d2, d0
   312e4:	mov	x0, #0x10000000000000      	// #4503599627370496
   312e8:	fmov	d1, x0
   312ec:	fcmpe	d2, d1
   312f0:	b.pl	31300 <__atan2_finite@GLIBC_2.17+0x150>  // b.nfrst
   312f4:	fcmp	d0, #0.0
   312f8:	fcsel	d1, d0, d1, ne  // ne = any
   312fc:	fmul	d1, d1, d1
   31300:	cbnz	w20, 31e24 <__atan2_finite@GLIBC_2.17+0xc74>
   31304:	ldp	x19, x20, [sp, #16]
   31308:	ldp	x29, x30, [sp], #48
   3130c:	ret
   31310:	and	w0, w1, #0xfffff
   31314:	orr	w0, w0, w3
   31318:	cbz	w0, 311cc <__atan2_finite@GLIBC_2.17+0x1c>
   3131c:	fadd	d0, d1, d0
   31320:	ret
   31324:	movi	d0, #0x0
   31328:	tbnz	w1, #31, 31378 <__atan2_finite@GLIBC_2.17+0x1c8>
   3132c:	ret
   31330:	fadd	d0, d0, d0
   31334:	ret
   31338:	cbnz	w3, 31250 <__atan2_finite@GLIBC_2.17+0xa0>
   3133c:	cmp	w0, w1
   31340:	b.eq	31e2c <__atan2_finite@GLIBC_2.17+0xc7c>  // b.none
   31344:	cmn	w0, #0x100, lsl #12
   31348:	b.eq	32184 <__atan2_finite@GLIBC_2.17+0xfd4>  // b.none
   3134c:	movi	d1, #0x0
   31350:	cmp	w0, #0x0
   31354:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   31358:	fmov	d0, x0
   3135c:	fcsel	d0, d0, d1, lt  // lt = tstop
   31360:	ret
   31364:	cmp	w0, w6
   31368:	b.eq	32194 <__atan2_finite@GLIBC_2.17+0xfe4>  // b.none
   3136c:	cmn	w0, #0x100, lsl #12
   31370:	b.eq	3277c <__atan2_finite@GLIBC_2.17+0x15cc>  // b.none
   31374:	tbnz	w0, #31, 31390 <__atan2_finite@GLIBC_2.17+0x1e0>
   31378:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3137c:	ldr	d0, [x0, #2416]
   31380:	ret
   31384:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   31388:	fmov	d0, x0
   3138c:	tbz	w1, #31, 3132c <__atan2_finite@GLIBC_2.17+0x17c>
   31390:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31394:	ldr	d0, [x0, #2400]
   31398:	ret
   3139c:	fcmpe	d0, #0.0
   313a0:	b.le	3172c <__atan2_finite@GLIBC_2.17+0x57c>
   313a4:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   313a8:	ldr	d0, [x0, #576]
   313ac:	b	31300 <__atan2_finite@GLIBC_2.17+0x150>
   313b0:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   313b4:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   313b8:	ldr	d3, [x1, #2240]
   313bc:	ldr	d5, [x0, #2248]
   313c0:	fcmpe	d3, d4
   313c4:	b.le	31720 <__atan2_finite@GLIBC_2.17+0x570>
   313c8:	fmul	d4, d4, d5
   313cc:	fmul	d1, d1, d5
   313d0:	fcmpe	d4, d5
   313d4:	b.gt	313e0 <__atan2_finite@GLIBC_2.17+0x230>
   313d8:	fcmpe	d1, d5
   313dc:	b.le	313e8 <__atan2_finite@GLIBC_2.17+0x238>
   313e0:	fmul	d4, d4, d3
   313e4:	fmul	d1, d1, d3
   313e8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   313ec:	fcmpe	d4, d1
   313f0:	ldr	d3, [x0, #2424]
   313f4:	str	d3, [sp, #40]
   313f8:	b.le	3174c <__atan2_finite@GLIBC_2.17+0x59c>
   313fc:	fdiv	d5, d1, d4
   31400:	fcmpe	d2, #0.0
   31404:	fmul	d3, d4, d5
   31408:	fnmsub	d6, d4, d5, d3
   3140c:	fsub	d3, d1, d3
   31410:	fsub	d3, d3, d6
   31414:	fdiv	d3, d3, d4
   31418:	b.le	31ac4 <__atan2_finite@GLIBC_2.17+0x914>
   3141c:	ldr	d1, [sp, #40]
   31420:	fcmpe	d5, d1
   31424:	b.pl	32498 <__atan2_finite@GLIBC_2.17+0x12e8>  // b.nfrst
   31428:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3142c:	fmul	d1, d5, d5
   31430:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31434:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31438:	ldr	d4, [x2, #2528]
   3143c:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31440:	ldr	d18, [x1, #2536]
   31444:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31448:	ldr	d17, [x0, #2544]
   3144c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31450:	fmadd	d18, d4, d1, d18
   31454:	ldr	d16, [x2, #2552]
   31458:	ldr	d7, [x1, #2560]
   3145c:	fmul	d4, d5, d1
   31460:	ldr	d6, [x0, #2568]
   31464:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31468:	ldr	d19, [x0, #2352]
   3146c:	fmadd	d17, d18, d1, d17
   31470:	fmadd	d16, d17, d1, d16
   31474:	fmadd	d7, d16, d1, d7
   31478:	fmadd	d6, d7, d1, d6
   3147c:	fmadd	d4, d4, d6, d3
   31480:	fmsub	d6, d19, d5, d4
   31484:	fmadd	d4, d19, d5, d4
   31488:	fadd	d6, d6, d5
   3148c:	fadd	d4, d4, d5
   31490:	fcmp	d4, d6
   31494:	b.eq	32d60 <__atan2_finite@GLIBC_2.17+0x1bb0>  // b.none
   31498:	fnmsub	d7, d5, d5, d1
   3149c:	fmul	d6, d5, d3
   314a0:	fmov	d4, #2.000000000000000000e+00
   314a4:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   314a8:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   314ac:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   314b0:	ldr	d18, [x0, #2448]
   314b4:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   314b8:	fmadd	d7, d6, d4, d7
   314bc:	ldr	d21, [x1, #2432]
   314c0:	ldr	d4, [x0, #2464]
   314c4:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   314c8:	ldr	d19, [x2, #2440]
   314cc:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   314d0:	ldr	d6, [x0, #2472]
   314d4:	ldr	d17, [x1, #2456]
   314d8:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   314dc:	str	d6, [sp, #40]
   314e0:	ldr	d16, [x1, #2480]
   314e4:	fadd	d6, d1, d7
   314e8:	fabs	d20, d16
   314ec:	fmadd	d19, d21, d6, d19
   314f0:	fsub	d1, d1, d6
   314f4:	fadd	d1, d1, d7
   314f8:	fmadd	d7, d19, d6, d18
   314fc:	fmadd	d7, d7, d6, d17
   31500:	fmadd	d4, d7, d6, d4
   31504:	fmul	d4, d4, d6
   31508:	fabs	d17, d4
   3150c:	fadd	d7, d16, d4
   31510:	fcmpe	d20, d17
   31514:	b.le	32f6c <__atan2_finite@GLIBC_2.17+0x1dbc>
   31518:	fsub	d16, d16, d7
   3151c:	movi	d17, #0x0
   31520:	fadd	d4, d16, d4
   31524:	ldr	d16, [sp, #40]
   31528:	fadd	d4, d4, d17
   3152c:	fadd	d4, d4, d16
   31530:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31534:	fadd	d18, d4, d7
   31538:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3153c:	ldr	d16, [x0, #2488]
   31540:	ldr	d19, [x1, #2496]
   31544:	fmul	d17, d1, d18
   31548:	str	d16, [sp, #40]
   3154c:	fsub	d16, d7, d18
   31550:	fmul	d7, d6, d18
   31554:	fabs	d20, d19
   31558:	fnmsub	d18, d6, d18, d7
   3155c:	fadd	d4, d16, d4
   31560:	fmadd	d4, d6, d4, d17
   31564:	fadd	d17, d4, d18
   31568:	fadd	d4, d7, d17
   3156c:	fabs	d18, d4
   31570:	fsub	d16, d7, d4
   31574:	fadd	d7, d19, d4
   31578:	fcmpe	d20, d18
   3157c:	fadd	d16, d16, d17
   31580:	b.le	32f54 <__atan2_finite@GLIBC_2.17+0x1da4>
   31584:	fsub	d19, d19, d7
   31588:	fadd	d4, d19, d4
   3158c:	fadd	d4, d4, d16
   31590:	ldr	d16, [sp, #40]
   31594:	fadd	d4, d4, d16
   31598:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3159c:	fadd	d18, d4, d7
   315a0:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   315a4:	ldr	d16, [x0, #2504]
   315a8:	ldr	d19, [x1, #2512]
   315ac:	fmul	d17, d1, d18
   315b0:	str	d16, [sp, #40]
   315b4:	fsub	d16, d7, d18
   315b8:	fmul	d7, d6, d18
   315bc:	fabs	d20, d19
   315c0:	fnmsub	d18, d6, d18, d7
   315c4:	fadd	d4, d16, d4
   315c8:	fmadd	d4, d6, d4, d17
   315cc:	fadd	d17, d4, d18
   315d0:	fadd	d4, d7, d17
   315d4:	fabs	d18, d4
   315d8:	fsub	d16, d7, d4
   315dc:	fadd	d7, d19, d4
   315e0:	fcmpe	d20, d18
   315e4:	fadd	d16, d16, d17
   315e8:	b.le	32f3c <__atan2_finite@GLIBC_2.17+0x1d8c>
   315ec:	fsub	d19, d19, d7
   315f0:	fadd	d4, d19, d4
   315f4:	fadd	d4, d4, d16
   315f8:	ldr	d16, [sp, #40]
   315fc:	fadd	d4, d4, d16
   31600:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31604:	fadd	d18, d4, d7
   31608:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3160c:	ldr	d16, [x0, #2520]
   31610:	ldr	d19, [x1, #2568]
   31614:	fmul	d17, d1, d18
   31618:	str	d16, [sp, #40]
   3161c:	fsub	d16, d7, d18
   31620:	fmul	d7, d6, d18
   31624:	fabs	d20, d19
   31628:	fnmsub	d18, d6, d18, d7
   3162c:	fadd	d4, d16, d4
   31630:	fmadd	d4, d6, d4, d17
   31634:	fadd	d17, d4, d18
   31638:	fadd	d4, d7, d17
   3163c:	fabs	d18, d4
   31640:	fsub	d16, d7, d4
   31644:	fadd	d7, d19, d4
   31648:	fcmpe	d20, d18
   3164c:	fadd	d16, d16, d17
   31650:	b.le	32f24 <__atan2_finite@GLIBC_2.17+0x1d74>
   31654:	fsub	d19, d19, d7
   31658:	fadd	d4, d19, d4
   3165c:	fadd	d4, d4, d16
   31660:	ldr	d16, [sp, #40]
   31664:	fadd	d4, d4, d16
   31668:	fadd	d17, d4, d7
   3166c:	fabs	d18, d5
   31670:	fsub	d16, d7, d17
   31674:	fmul	d1, d1, d17
   31678:	fmul	d7, d6, d17
   3167c:	fnmsub	d17, d6, d17, d7
   31680:	fadd	d4, d16, d4
   31684:	fmadd	d1, d6, d4, d1
   31688:	fadd	d1, d1, d17
   3168c:	fadd	d16, d7, d1
   31690:	fsub	d7, d7, d16
   31694:	fmul	d4, d5, d16
   31698:	fmul	d6, d3, d16
   3169c:	fnmsub	d16, d5, d16, d4
   316a0:	fadd	d1, d7, d1
   316a4:	fmadd	d1, d5, d1, d6
   316a8:	fadd	d7, d1, d16
   316ac:	fadd	d6, d4, d7
   316b0:	fabs	d17, d6
   316b4:	fsub	d1, d4, d6
   316b8:	fadd	d4, d5, d6
   316bc:	fcmpe	d18, d17
   316c0:	fadd	d7, d1, d7
   316c4:	b.le	32f04 <__atan2_finite@GLIBC_2.17+0x1d54>
   316c8:	fsub	d1, d5, d4
   316cc:	fadd	d1, d1, d6
   316d0:	fadd	d1, d1, d7
   316d4:	fadd	d3, d1, d3
   316d8:	fadd	d5, d3, d4
   316dc:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   316e0:	ldr	d6, [x0, #2336]
   316e4:	fsub	d1, d4, d5
   316e8:	fadd	d1, d1, d3
   316ec:	fmsub	d3, d6, d5, d1
   316f0:	fmadd	d1, d6, d5, d1
   316f4:	fadd	d3, d3, d5
   316f8:	fadd	d1, d1, d5
   316fc:	fcmp	d1, d3
   31700:	b.ne	31ab4 <__atan2_finite@GLIBC_2.17+0x904>  // b.any
   31704:	nop
   31708:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3170c:	fmov	d1, x0
   31710:	bif	v0.8b, v3.8b, v1.8b
   31714:	b	31300 <__atan2_finite@GLIBC_2.17+0x150>
   31718:	cbnz	w2, 3126c <__atan2_finite@GLIBC_2.17+0xbc>
   3171c:	b	311f4 <__atan2_finite@GLIBC_2.17+0x44>
   31720:	fcmpe	d3, d1
   31724:	b.le	313d0 <__atan2_finite@GLIBC_2.17+0x220>
   31728:	b	313c8 <__atan2_finite@GLIBC_2.17+0x218>
   3172c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31730:	ldr	d0, [x0, #2392]
   31734:	b	31300 <__atan2_finite@GLIBC_2.17+0x150>
   31738:	fcmpe	d0, #0.0
   3173c:	b.le	321a4 <__atan2_finite@GLIBC_2.17+0xff4>
   31740:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31744:	ldr	d0, [x0, #2416]
   31748:	b	31300 <__atan2_finite@GLIBC_2.17+0x150>
   3174c:	fdiv	d5, d4, d1
   31750:	fcmpe	d2, #0.0
   31754:	fmul	d3, d1, d5
   31758:	fnmsub	d6, d1, d5, d3
   3175c:	fsub	d3, d4, d3
   31760:	fsub	d3, d3, d6
   31764:	fdiv	d3, d3, d1
   31768:	b.le	31ac4 <__atan2_finite@GLIBC_2.17+0x914>
   3176c:	ldr	d1, [sp, #40]
   31770:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   31774:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   31778:	ldr	d7, [x1, #568]
   3177c:	fcmpe	d5, d1
   31780:	ldr	d6, [x0, #576]
   31784:	b.pl	321b0 <__atan2_finite@GLIBC_2.17+0x1000>  // b.nfrst
   31788:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3178c:	fmul	d1, d5, d5
   31790:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31794:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31798:	ldr	d4, [x2, #2528]
   3179c:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   317a0:	ldr	d23, [x1, #2536]
   317a4:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   317a8:	ldr	d22, [x0, #2544]
   317ac:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   317b0:	fmadd	d23, d4, d1, d23
   317b4:	ldr	d21, [x2, #2552]
   317b8:	ldr	d16, [x1, #2560]
   317bc:	fabs	d18, d6
   317c0:	ldr	d17, [x0, #2568]
   317c4:	fabs	d19, d5
   317c8:	fmul	d4, d5, d1
   317cc:	fsub	d20, d6, d5
   317d0:	fcmpe	d18, d19
   317d4:	fmadd	d22, d23, d1, d22
   317d8:	fmadd	d21, d22, d1, d21
   317dc:	fmadd	d16, d21, d1, d16
   317e0:	fmadd	d17, d16, d1, d17
   317e4:	fmul	d17, d4, d17
   317e8:	b.le	32d30 <__atan2_finite@GLIBC_2.17+0x1b80>
   317ec:	fsub	d4, d6, d20
   317f0:	fsub	d4, d4, d5
   317f4:	fadd	d4, d4, d7
   317f8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   317fc:	ldr	d16, [x0, #2344]
   31800:	fsub	d4, d4, d3
   31804:	fsub	d4, d4, d17
   31808:	fsub	d17, d4, d16
   3180c:	fadd	d16, d16, d4
   31810:	fadd	d4, d17, d20
   31814:	fadd	d16, d16, d20
   31818:	fcmp	d16, d4
   3181c:	b.eq	31e3c <__atan2_finite@GLIBC_2.17+0xc8c>  // b.none
   31820:	fnmsub	d21, d5, d5, d1
   31824:	fmul	d16, d5, d3
   31828:	fmov	d4, #2.000000000000000000e+00
   3182c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31830:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31834:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31838:	ldr	d23, [x0, #2448]
   3183c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31840:	fmadd	d21, d16, d4, d21
   31844:	ldr	d24, [x1, #2432]
   31848:	ldr	d16, [x0, #2464]
   3184c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31850:	ldr	d4, [x2, #2440]
   31854:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31858:	ldr	d17, [x0, #2472]
   3185c:	ldr	d22, [x1, #2456]
   31860:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31864:	str	d17, [sp, #40]
   31868:	ldr	d20, [x1, #2480]
   3186c:	fadd	d17, d1, d21
   31870:	fabs	d25, d20
   31874:	fmadd	d24, d24, d17, d4
   31878:	fsub	d4, d1, d17
   3187c:	fadd	d1, d4, d21
   31880:	fmadd	d4, d24, d17, d23
   31884:	fmadd	d4, d4, d17, d22
   31888:	fmadd	d4, d4, d17, d16
   3188c:	fmul	d4, d4, d17
   31890:	fabs	d21, d4
   31894:	fadd	d16, d20, d4
   31898:	fcmpe	d25, d21
   3189c:	b.le	32dd8 <__atan2_finite@GLIBC_2.17+0x1c28>
   318a0:	fsub	d20, d20, d16
   318a4:	movi	d21, #0x0
   318a8:	fadd	d4, d20, d4
   318ac:	ldr	d20, [sp, #40]
   318b0:	fadd	d4, d4, d21
   318b4:	fadd	d4, d4, d20
   318b8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   318bc:	fadd	d22, d4, d16
   318c0:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   318c4:	ldr	d20, [x0, #2488]
   318c8:	ldr	d23, [x1, #2496]
   318cc:	fmul	d21, d1, d22
   318d0:	str	d20, [sp, #40]
   318d4:	fsub	d20, d16, d22
   318d8:	fmul	d16, d17, d22
   318dc:	fabs	d24, d23
   318e0:	fnmsub	d22, d17, d22, d16
   318e4:	fadd	d4, d20, d4
   318e8:	fmadd	d4, d17, d4, d21
   318ec:	fadd	d21, d4, d22
   318f0:	fadd	d4, d16, d21
   318f4:	fabs	d22, d4
   318f8:	fsub	d20, d16, d4
   318fc:	fadd	d16, d23, d4
   31900:	fcmpe	d24, d22
   31904:	fadd	d20, d20, d21
   31908:	b.le	32e4c <__atan2_finite@GLIBC_2.17+0x1c9c>
   3190c:	fsub	d23, d23, d16
   31910:	fadd	d4, d23, d4
   31914:	fadd	d4, d4, d20
   31918:	ldr	d20, [sp, #40]
   3191c:	fadd	d4, d4, d20
   31920:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31924:	fadd	d22, d4, d16
   31928:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3192c:	ldr	d20, [x0, #2504]
   31930:	ldr	d23, [x1, #2512]
   31934:	fmul	d21, d1, d22
   31938:	str	d20, [sp, #40]
   3193c:	fsub	d20, d16, d22
   31940:	fmul	d16, d17, d22
   31944:	fabs	d24, d23
   31948:	fnmsub	d22, d17, d22, d16
   3194c:	fadd	d4, d20, d4
   31950:	fmadd	d4, d17, d4, d21
   31954:	fadd	d21, d4, d22
   31958:	fadd	d4, d16, d21
   3195c:	fabs	d22, d4
   31960:	fsub	d20, d16, d4
   31964:	fadd	d16, d23, d4
   31968:	fcmpe	d24, d22
   3196c:	fadd	d20, d20, d21
   31970:	b.le	32e34 <__atan2_finite@GLIBC_2.17+0x1c84>
   31974:	fsub	d23, d23, d16
   31978:	fadd	d4, d23, d4
   3197c:	fadd	d4, d4, d20
   31980:	ldr	d20, [sp, #40]
   31984:	fadd	d4, d4, d20
   31988:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3198c:	fadd	d22, d4, d16
   31990:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31994:	ldr	d20, [x0, #2520]
   31998:	ldr	d23, [x1, #2568]
   3199c:	fmul	d21, d1, d22
   319a0:	str	d20, [sp, #40]
   319a4:	fsub	d20, d16, d22
   319a8:	fmul	d16, d17, d22
   319ac:	fabs	d24, d23
   319b0:	fnmsub	d22, d17, d22, d16
   319b4:	fadd	d4, d20, d4
   319b8:	fmadd	d4, d17, d4, d21
   319bc:	fadd	d21, d4, d22
   319c0:	fadd	d4, d16, d21
   319c4:	fabs	d22, d4
   319c8:	fsub	d20, d16, d4
   319cc:	fadd	d16, d23, d4
   319d0:	fcmpe	d24, d22
   319d4:	fadd	d20, d20, d21
   319d8:	b.le	32ecc <__atan2_finite@GLIBC_2.17+0x1d1c>
   319dc:	fsub	d23, d23, d16
   319e0:	fadd	d4, d23, d4
   319e4:	fadd	d4, d4, d20
   319e8:	ldr	d20, [sp, #40]
   319ec:	fadd	d4, d4, d20
   319f0:	fadd	d21, d4, d16
   319f4:	fsub	d20, d16, d21
   319f8:	fmul	d1, d1, d21
   319fc:	fmul	d16, d17, d21
   31a00:	fnmsub	d21, d17, d21, d16
   31a04:	fadd	d4, d20, d4
   31a08:	fmadd	d1, d17, d4, d1
   31a0c:	fadd	d1, d1, d21
   31a10:	fadd	d20, d16, d1
   31a14:	fsub	d16, d16, d20
   31a18:	fmul	d4, d3, d20
   31a1c:	fmul	d17, d5, d20
   31a20:	fnmsub	d20, d5, d20, d17
   31a24:	fadd	d1, d16, d1
   31a28:	fmadd	d1, d5, d1, d4
   31a2c:	fadd	d1, d1, d20
   31a30:	fadd	d4, d17, d1
   31a34:	fabs	d20, d4
   31a38:	fsub	d17, d17, d4
   31a3c:	fadd	d16, d5, d4
   31a40:	fcmpe	d19, d20
   31a44:	fadd	d17, d17, d1
   31a48:	b.le	32eb8 <__atan2_finite@GLIBC_2.17+0x1d08>
   31a4c:	fsub	d1, d5, d16
   31a50:	fadd	d1, d1, d4
   31a54:	fadd	d1, d1, d17
   31a58:	fadd	d1, d1, d3
   31a5c:	fadd	d3, d1, d16
   31a60:	fabs	d5, d3
   31a64:	fsub	d16, d16, d3
   31a68:	fsub	d4, d6, d3
   31a6c:	fcmpe	d18, d5
   31a70:	fadd	d16, d16, d1
   31a74:	b.le	32ef0 <__atan2_finite@GLIBC_2.17+0x1d40>
   31a78:	fsub	d1, d6, d4
   31a7c:	fsub	d1, d1, d3
   31a80:	fsub	d1, d1, d16
   31a84:	fadd	d1, d1, d7
   31a88:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31a8c:	fadd	d5, d1, d4
   31a90:	ldr	d3, [x0, #2328]
   31a94:	fsub	d4, d4, d5
   31a98:	fadd	d1, d4, d1
   31a9c:	fsub	d4, d1, d3
   31aa0:	fadd	d1, d3, d1
   31aa4:	fadd	d3, d4, d5
   31aa8:	fadd	d1, d1, d5
   31aac:	fcmp	d1, d3
   31ab0:	b.eq	31708 <__atan2_finite@GLIBC_2.17+0x558>  // b.none
   31ab4:	fmov	d1, d0
   31ab8:	fmov	d0, d2
   31abc:	bl	31020 <__acos_finite@GLIBC_2.17+0xe50>
   31ac0:	b	31300 <__atan2_finite@GLIBC_2.17+0x150>
   31ac4:	fcmpe	d4, d1
   31ac8:	ldr	d1, [sp, #40]
   31acc:	b.pl	31e4c <__atan2_finite@GLIBC_2.17+0xc9c>  // b.nfrst
   31ad0:	fcmpe	d5, d1
   31ad4:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   31ad8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   31adc:	ldr	d16, [x1, #568]
   31ae0:	ldr	d6, [x0, #576]
   31ae4:	b.pl	3278c <__atan2_finite@GLIBC_2.17+0x15dc>  // b.nfrst
   31ae8:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31aec:	fmul	d4, d5, d5
   31af0:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31af4:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31af8:	ldr	d1, [x2, #2528]
   31afc:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31b00:	ldr	d22, [x1, #2536]
   31b04:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31b08:	ldr	d21, [x0, #2544]
   31b0c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31b10:	fmadd	d22, d1, d4, d22
   31b14:	ldr	d20, [x2, #2552]
   31b18:	ldr	d7, [x1, #2560]
   31b1c:	fabs	d18, d6
   31b20:	ldr	d17, [x0, #2568]
   31b24:	fabs	d19, d5
   31b28:	fmul	d1, d4, d5
   31b2c:	fadd	d23, d5, d6
   31b30:	fcmpe	d18, d19
   31b34:	fmadd	d21, d22, d4, d21
   31b38:	fmadd	d20, d21, d4, d20
   31b3c:	fmadd	d7, d20, d4, d7
   31b40:	fmadd	d17, d7, d4, d17
   31b44:	fmul	d17, d1, d17
   31b48:	b.le	32d7c <__atan2_finite@GLIBC_2.17+0x1bcc>
   31b4c:	fsub	d1, d6, d23
   31b50:	fadd	d1, d1, d5
   31b54:	fadd	d1, d1, d16
   31b58:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31b5c:	ldr	d7, [x0, #2344]
   31b60:	fadd	d1, d1, d3
   31b64:	fadd	d1, d1, d17
   31b68:	fsub	d17, d1, d7
   31b6c:	fadd	d1, d7, d1
   31b70:	fadd	d7, d17, d23
   31b74:	fadd	d1, d1, d23
   31b78:	fcmp	d1, d7
   31b7c:	b.eq	32fa0 <__atan2_finite@GLIBC_2.17+0x1df0>  // b.none
   31b80:	fnmsub	d1, d5, d5, d4
   31b84:	fmul	d7, d3, d5
   31b88:	fmov	d21, #2.000000000000000000e+00
   31b8c:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31b90:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31b94:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31b98:	ldr	d26, [x1, #2432]
   31b9c:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31ba0:	fmadd	d21, d7, d21, d1
   31ba4:	ldr	d24, [x2, #2440]
   31ba8:	ldr	d23, [x0, #2448]
   31bac:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31bb0:	ldr	d22, [x1, #2456]
   31bb4:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31bb8:	ldr	d7, [x0, #2464]
   31bbc:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31bc0:	ldr	d20, [x1, #2480]
   31bc4:	ldr	d1, [x0, #2472]
   31bc8:	fabs	d25, d20
   31bcc:	fadd	d17, d4, d21
   31bd0:	str	d1, [sp, #40]
   31bd4:	fmadd	d24, d26, d17, d24
   31bd8:	fsub	d1, d4, d17
   31bdc:	fadd	d1, d1, d21
   31be0:	fmadd	d4, d24, d17, d23
   31be4:	fmadd	d4, d4, d17, d22
   31be8:	fmadd	d4, d4, d17, d7
   31bec:	fmul	d4, d4, d17
   31bf0:	fabs	d21, d4
   31bf4:	fadd	d7, d20, d4
   31bf8:	fcmpe	d25, d21
   31bfc:	b.le	331bc <__atan2_finite@GLIBC_2.17+0x200c>
   31c00:	fsub	d20, d20, d7
   31c04:	movi	d21, #0x0
   31c08:	fadd	d4, d20, d4
   31c0c:	ldr	d20, [sp, #40]
   31c10:	fadd	d4, d4, d21
   31c14:	fadd	d4, d4, d20
   31c18:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31c1c:	fadd	d22, d4, d7
   31c20:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31c24:	ldr	d20, [x0, #2488]
   31c28:	ldr	d23, [x1, #2496]
   31c2c:	fmul	d21, d1, d22
   31c30:	str	d20, [sp, #40]
   31c34:	fsub	d20, d7, d22
   31c38:	fmul	d7, d17, d22
   31c3c:	fabs	d24, d23
   31c40:	fnmsub	d22, d17, d22, d7
   31c44:	fadd	d4, d20, d4
   31c48:	fmadd	d4, d17, d4, d21
   31c4c:	fadd	d21, d4, d22
   31c50:	fadd	d4, d7, d21
   31c54:	fabs	d22, d4
   31c58:	fsub	d20, d7, d4
   31c5c:	fadd	d7, d23, d4
   31c60:	fcmpe	d24, d22
   31c64:	fadd	d20, d20, d21
   31c68:	b.le	331a4 <__atan2_finite@GLIBC_2.17+0x1ff4>
   31c6c:	fsub	d23, d23, d7
   31c70:	fadd	d4, d23, d4
   31c74:	fadd	d4, d4, d20
   31c78:	ldr	d20, [sp, #40]
   31c7c:	fadd	d4, d4, d20
   31c80:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31c84:	fadd	d22, d4, d7
   31c88:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31c8c:	ldr	d20, [x0, #2504]
   31c90:	ldr	d23, [x1, #2512]
   31c94:	fmul	d21, d1, d22
   31c98:	str	d20, [sp, #40]
   31c9c:	fsub	d20, d7, d22
   31ca0:	fmul	d7, d17, d22
   31ca4:	fabs	d24, d23
   31ca8:	fnmsub	d22, d17, d22, d7
   31cac:	fadd	d4, d20, d4
   31cb0:	fmadd	d4, d17, d4, d21
   31cb4:	fadd	d21, d4, d22
   31cb8:	fadd	d4, d7, d21
   31cbc:	fabs	d22, d4
   31cc0:	fsub	d20, d7, d4
   31cc4:	fadd	d7, d23, d4
   31cc8:	fcmpe	d24, d22
   31ccc:	fadd	d20, d20, d21
   31cd0:	b.le	3318c <__atan2_finite@GLIBC_2.17+0x1fdc>
   31cd4:	fsub	d23, d23, d7
   31cd8:	fadd	d4, d23, d4
   31cdc:	fadd	d4, d4, d20
   31ce0:	ldr	d20, [sp, #40]
   31ce4:	fadd	d4, d4, d20
   31ce8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31cec:	fadd	d22, d4, d7
   31cf0:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31cf4:	ldr	d20, [x0, #2520]
   31cf8:	ldr	d23, [x1, #2568]
   31cfc:	fmul	d21, d1, d22
   31d00:	str	d20, [sp, #40]
   31d04:	fsub	d20, d7, d22
   31d08:	fmul	d7, d17, d22
   31d0c:	fabs	d24, d23
   31d10:	fnmsub	d22, d17, d22, d7
   31d14:	fadd	d4, d20, d4
   31d18:	fmadd	d4, d17, d4, d21
   31d1c:	fadd	d21, d4, d22
   31d20:	fadd	d4, d7, d21
   31d24:	fabs	d22, d4
   31d28:	fsub	d20, d7, d4
   31d2c:	fadd	d7, d23, d4
   31d30:	fcmpe	d24, d22
   31d34:	fadd	d20, d20, d21
   31d38:	b.le	33174 <__atan2_finite@GLIBC_2.17+0x1fc4>
   31d3c:	fsub	d23, d23, d7
   31d40:	fadd	d4, d23, d4
   31d44:	fadd	d4, d4, d20
   31d48:	ldr	d20, [sp, #40]
   31d4c:	fadd	d4, d4, d20
   31d50:	fadd	d21, d4, d7
   31d54:	fsub	d20, d7, d21
   31d58:	fmul	d1, d1, d21
   31d5c:	fmul	d7, d17, d21
   31d60:	fnmsub	d21, d17, d21, d7
   31d64:	fadd	d4, d20, d4
   31d68:	fmadd	d1, d17, d4, d1
   31d6c:	fadd	d1, d1, d21
   31d70:	fadd	d20, d7, d1
   31d74:	fsub	d7, d7, d20
   31d78:	fmul	d4, d20, d3
   31d7c:	fmul	d17, d20, d5
   31d80:	fnmsub	d20, d5, d20, d17
   31d84:	fadd	d1, d7, d1
   31d88:	fmadd	d1, d1, d5, d4
   31d8c:	fadd	d1, d1, d20
   31d90:	fadd	d4, d17, d1
   31d94:	fabs	d20, d4
   31d98:	fsub	d17, d17, d4
   31d9c:	fadd	d7, d4, d5
   31da0:	fcmpe	d19, d20
   31da4:	fadd	d17, d17, d1
   31da8:	b.le	330b8 <__atan2_finite@GLIBC_2.17+0x1f08>
   31dac:	fsub	d1, d5, d7
   31db0:	fadd	d4, d1, d4
   31db4:	fadd	d17, d4, d17
   31db8:	fadd	d3, d17, d3
   31dbc:	fadd	d1, d3, d7
   31dc0:	fabs	d5, d1
   31dc4:	fsub	d7, d7, d1
   31dc8:	fadd	d4, d1, d6
   31dcc:	fcmpe	d18, d5
   31dd0:	fadd	d3, d7, d3
   31dd4:	b.le	330a4 <__atan2_finite@GLIBC_2.17+0x1ef4>
   31dd8:	fsub	d6, d6, d4
   31ddc:	fadd	d1, d6, d1
   31de0:	fadd	d3, d1, d3
   31de4:	fadd	d16, d3, d16
   31de8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31dec:	fadd	d5, d16, d4
   31df0:	ldr	d1, [x0, #2328]
   31df4:	fsub	d4, d4, d5
   31df8:	fadd	d16, d4, d16
   31dfc:	fsub	d3, d16, d1
   31e00:	fadd	d1, d1, d16
   31e04:	fadd	d3, d3, d5
   31e08:	fadd	d1, d1, d5
   31e0c:	fcmp	d1, d3
   31e10:	b.eq	31708 <__atan2_finite@GLIBC_2.17+0x558>  // b.none
   31e14:	b	31ab4 <__atan2_finite@GLIBC_2.17+0x904>
   31e18:	eor	w0, w20, w19
   31e1c:	msr	fpcr, x0
   31e20:	b	31284 <__atan2_finite@GLIBC_2.17+0xd4>
   31e24:	msr	fpcr, x19
   31e28:	b	31304 <__atan2_finite@GLIBC_2.17+0x154>
   31e2c:	cbnz	w2, 3126c <__atan2_finite@GLIBC_2.17+0xbc>
   31e30:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31e34:	ldr	d0, [x0, #2384]
   31e38:	ret
   31e3c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   31e40:	fmov	d1, x0
   31e44:	bif	v0.8b, v4.8b, v1.8b
   31e48:	b	31300 <__atan2_finite@GLIBC_2.17+0x150>
   31e4c:	fcmpe	d5, d1
   31e50:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31e54:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31e58:	ldr	d16, [x1, #2408]
   31e5c:	ldr	d7, [x0, #2416]
   31e60:	b.pl	32a54 <__atan2_finite@GLIBC_2.17+0x18a4>  // b.nfrst
   31e64:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31e68:	fmul	d6, d5, d5
   31e6c:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31e70:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31e74:	ldr	d1, [x2, #2528]
   31e78:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31e7c:	ldr	d22, [x1, #2536]
   31e80:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31e84:	ldr	d21, [x0, #2544]
   31e88:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31e8c:	fmadd	d22, d1, d6, d22
   31e90:	ldr	d20, [x2, #2552]
   31e94:	ldr	d1, [x1, #2560]
   31e98:	fabs	d18, d7
   31e9c:	ldr	d17, [x0, #2568]
   31ea0:	fabs	d19, d5
   31ea4:	fmul	d4, d6, d5
   31ea8:	fsub	d23, d7, d5
   31eac:	fcmpe	d18, d19
   31eb0:	fmadd	d21, d22, d6, d21
   31eb4:	fmadd	d20, d21, d6, d20
   31eb8:	fmadd	d1, d20, d6, d1
   31ebc:	fmadd	d17, d1, d6, d17
   31ec0:	fmul	d17, d4, d17
   31ec4:	b.le	32d48 <__atan2_finite@GLIBC_2.17+0x1b98>
   31ec8:	fsub	d4, d7, d23
   31ecc:	fsub	d4, d4, d5
   31ed0:	fadd	d4, d4, d16
   31ed4:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31ed8:	ldr	d1, [x0, #2344]
   31edc:	fsub	d4, d4, d3
   31ee0:	fsub	d4, d4, d17
   31ee4:	fsub	d17, d4, d1
   31ee8:	fadd	d1, d1, d4
   31eec:	fadd	d4, d17, d23
   31ef0:	fadd	d1, d1, d23
   31ef4:	fcmp	d1, d4
   31ef8:	b.eq	31e3c <__atan2_finite@GLIBC_2.17+0xc8c>  // b.none
   31efc:	fnmsub	d4, d5, d5, d6
   31f00:	fmul	d1, d3, d5
   31f04:	fmov	d21, #2.000000000000000000e+00
   31f08:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31f0c:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31f10:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31f14:	ldr	d26, [x1, #2432]
   31f18:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31f1c:	fmadd	d21, d1, d21, d4
   31f20:	ldr	d24, [x2, #2440]
   31f24:	ldr	d23, [x0, #2448]
   31f28:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31f2c:	ldr	d22, [x1, #2456]
   31f30:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31f34:	ldr	d1, [x0, #2464]
   31f38:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31f3c:	ldr	d20, [x1, #2480]
   31f40:	ldr	d4, [x0, #2472]
   31f44:	fabs	d25, d20
   31f48:	fadd	d17, d6, d21
   31f4c:	str	d4, [sp, #40]
   31f50:	fmadd	d24, d26, d17, d24
   31f54:	fsub	d4, d6, d17
   31f58:	fadd	d4, d4, d21
   31f5c:	fmadd	d6, d24, d17, d23
   31f60:	fmadd	d6, d6, d17, d22
   31f64:	fmadd	d1, d6, d17, d1
   31f68:	fmul	d1, d1, d17
   31f6c:	fabs	d21, d1
   31f70:	fadd	d6, d20, d1
   31f74:	fcmpe	d25, d21
   31f78:	b.le	33088 <__atan2_finite@GLIBC_2.17+0x1ed8>
   31f7c:	fsub	d20, d20, d6
   31f80:	movi	d21, #0x0
   31f84:	fadd	d1, d20, d1
   31f88:	ldr	d20, [sp, #40]
   31f8c:	fadd	d1, d1, d21
   31f90:	fadd	d1, d1, d20
   31f94:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31f98:	fadd	d22, d1, d6
   31f9c:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   31fa0:	ldr	d20, [x0, #2488]
   31fa4:	ldr	d23, [x1, #2496]
   31fa8:	fmul	d21, d4, d22
   31fac:	str	d20, [sp, #40]
   31fb0:	fsub	d20, d6, d22
   31fb4:	fmul	d6, d17, d22
   31fb8:	fabs	d24, d23
   31fbc:	fnmsub	d22, d17, d22, d6
   31fc0:	fadd	d1, d20, d1
   31fc4:	fmadd	d1, d17, d1, d21
   31fc8:	fadd	d21, d1, d22
   31fcc:	fadd	d1, d6, d21
   31fd0:	fabs	d22, d1
   31fd4:	fsub	d20, d6, d1
   31fd8:	fadd	d6, d23, d1
   31fdc:	fcmpe	d24, d22
   31fe0:	fadd	d20, d20, d21
   31fe4:	b.le	33070 <__atan2_finite@GLIBC_2.17+0x1ec0>
   31fe8:	fsub	d23, d23, d6
   31fec:	fadd	d1, d23, d1
   31ff0:	fadd	d1, d1, d20
   31ff4:	ldr	d20, [sp, #40]
   31ff8:	fadd	d1, d1, d20
   31ffc:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32000:	fadd	d22, d1, d6
   32004:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32008:	ldr	d20, [x0, #2504]
   3200c:	ldr	d23, [x1, #2512]
   32010:	fmul	d21, d4, d22
   32014:	str	d20, [sp, #40]
   32018:	fsub	d20, d6, d22
   3201c:	fmul	d6, d17, d22
   32020:	fabs	d24, d23
   32024:	fnmsub	d22, d17, d22, d6
   32028:	fadd	d1, d20, d1
   3202c:	fmadd	d1, d17, d1, d21
   32030:	fadd	d21, d1, d22
   32034:	fadd	d1, d6, d21
   32038:	fabs	d22, d1
   3203c:	fsub	d20, d6, d1
   32040:	fadd	d6, d23, d1
   32044:	fcmpe	d24, d22
   32048:	fadd	d20, d20, d21
   3204c:	b.le	3315c <__atan2_finite@GLIBC_2.17+0x1fac>
   32050:	fsub	d23, d23, d6
   32054:	fadd	d1, d23, d1
   32058:	fadd	d1, d1, d20
   3205c:	ldr	d20, [sp, #40]
   32060:	fadd	d1, d1, d20
   32064:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32068:	fadd	d22, d1, d6
   3206c:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32070:	ldr	d20, [x0, #2520]
   32074:	ldr	d23, [x1, #2568]
   32078:	fmul	d21, d4, d22
   3207c:	str	d20, [sp, #40]
   32080:	fsub	d20, d6, d22
   32084:	fmul	d6, d17, d22
   32088:	fabs	d24, d23
   3208c:	fnmsub	d22, d17, d22, d6
   32090:	fadd	d1, d20, d1
   32094:	fmadd	d1, d17, d1, d21
   32098:	fadd	d21, d1, d22
   3209c:	fadd	d1, d6, d21
   320a0:	fabs	d22, d1
   320a4:	fsub	d6, d6, d1
   320a8:	fadd	d20, d23, d1
   320ac:	fcmpe	d24, d22
   320b0:	fadd	d21, d6, d21
   320b4:	b.le	33144 <__atan2_finite@GLIBC_2.17+0x1f94>
   320b8:	fsub	d6, d23, d20
   320bc:	fadd	d6, d6, d1
   320c0:	ldr	d1, [sp, #40]
   320c4:	fadd	d6, d6, d21
   320c8:	fadd	d6, d6, d1
   320cc:	fadd	d21, d6, d20
   320d0:	fsub	d20, d20, d21
   320d4:	fmul	d1, d4, d21
   320d8:	fmul	d4, d17, d21
   320dc:	fnmsub	d21, d17, d21, d4
   320e0:	fadd	d6, d20, d6
   320e4:	fmadd	d1, d17, d6, d1
   320e8:	fadd	d1, d1, d21
   320ec:	fadd	d20, d4, d1
   320f0:	fsub	d4, d4, d20
   320f4:	fmul	d17, d20, d3
   320f8:	fmul	d6, d20, d5
   320fc:	fnmsub	d20, d5, d20, d6
   32100:	fadd	d1, d4, d1
   32104:	fmadd	d1, d1, d5, d17
   32108:	fadd	d1, d1, d20
   3210c:	fadd	d4, d6, d1
   32110:	fabs	d20, d4
   32114:	fsub	d6, d6, d4
   32118:	fadd	d17, d4, d5
   3211c:	fcmpe	d19, d20
   32120:	fadd	d6, d6, d1
   32124:	b.le	33130 <__atan2_finite@GLIBC_2.17+0x1f80>
   32128:	fsub	d1, d5, d17
   3212c:	fadd	d1, d1, d4
   32130:	fadd	d1, d1, d6
   32134:	fadd	d1, d1, d3
   32138:	fadd	d3, d1, d17
   3213c:	fabs	d5, d3
   32140:	fsub	d17, d17, d3
   32144:	fsub	d4, d7, d3
   32148:	fcmpe	d18, d5
   3214c:	fadd	d17, d17, d1
   32150:	b.le	3311c <__atan2_finite@GLIBC_2.17+0x1f6c>
   32154:	fsub	d1, d7, d4
   32158:	fsub	d1, d1, d3
   3215c:	fsub	d1, d1, d17
   32160:	fadd	d1, d1, d16
   32164:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32168:	fadd	d5, d1, d4
   3216c:	ldr	d3, [x0, #2328]
   32170:	b	31a94 <__atan2_finite@GLIBC_2.17+0x8e4>
   32174:	fmov	d2, d0
   32178:	fmov	d0, d4
   3217c:	bl	30f10 <__acos_finite@GLIBC_2.17+0xd40>
   32180:	b	312e0 <__atan2_finite@GLIBC_2.17+0x130>
   32184:	cbnz	w2, 3126c <__atan2_finite@GLIBC_2.17+0xbc>
   32188:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3218c:	ldr	d0, [x0, #2376]
   32190:	ret
   32194:	cbnz	w2, 3126c <__atan2_finite@GLIBC_2.17+0xbc>
   32198:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3219c:	ldr	d0, [x0, #2368]
   321a0:	ret
   321a4:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   321a8:	ldr	d0, [x0, #2400]
   321ac:	b	31300 <__atan2_finite@GLIBC_2.17+0x150>
   321b0:	mov	x0, #0x4070000000000000    	// #4643211215818981376
   321b4:	fmov	d1, x0
   321b8:	mov	x0, #0x4330000000000000    	// #4841369599423283200
   321bc:	fmov	d4, x0
   321c0:	fmadd	d1, d5, d1, d4
   321c4:	adrp	x3, 74000 <f64xsubf128@@GLIBC_2.28+0x20280>
   321c8:	add	x3, x3, #0x2d0
   321cc:	fsub	d1, d1, d4
   321d0:	fcvtzs	w0, d1
   321d4:	sub	w0, w0, #0x10
   321d8:	cmp	w0, #0x6f
   321dc:	sxtw	x1, w0
   321e0:	sbfiz	x0, x0, #3, #32
   321e4:	sub	x0, x0, x1
   321e8:	lsl	x0, x0, #3
   321ec:	add	x2, x3, x0
   321f0:	ldr	d1, [x3, x0]
   321f4:	ldp	d19, d20, [x2, #40]
   321f8:	fsub	d1, d5, d1
   321fc:	ldp	d17, d18, [x2, #24]
   32200:	ldp	d16, d4, [x2, #8]
   32204:	fadd	d1, d1, d3
   32208:	fsub	d16, d6, d16
   3220c:	fmadd	d19, d20, d1, d19
   32210:	fmadd	d18, d19, d1, d18
   32214:	fmadd	d17, d18, d1, d17
   32218:	fmadd	d4, d17, d1, d4
   3221c:	fmsub	d4, d4, d1, d7
   32220:	b.gt	32d3c <__atan2_finite@GLIBC_2.17+0x1b8c>
   32224:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32228:	ldr	d1, [x0, #2288]
   3222c:	fsub	d17, d4, d1
   32230:	fadd	d1, d1, d4
   32234:	fadd	d4, d17, d16
   32238:	fadd	d1, d1, d16
   3223c:	fcmp	d1, d4
   32240:	b.eq	31e3c <__atan2_finite@GLIBC_2.17+0xc8c>  // b.none
   32244:	lsl	x2, x1, #7
   32248:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3224c:	add	x3, x0, #0xa50
   32250:	fabs	d16, d3
   32254:	ldr	d1, [x3, x2]
   32258:	fsub	d1, d5, d1
   3225c:	fabs	d17, d1
   32260:	fadd	d4, d3, d1
   32264:	fcmpe	d17, d16
   32268:	b.le	32ee4 <__atan2_finite@GLIBC_2.17+0x1d34>
   3226c:	fsub	d1, d1, d4
   32270:	fadd	d3, d1, d3
   32274:	add	x2, x0, #0xa50
   32278:	add	x2, x2, x1, lsl #7
   3227c:	ldp	d18, d1, [x2, #112]
   32280:	ldp	d5, d17, [x2, #96]
   32284:	fmadd	d18, d1, d4, d18
   32288:	ldr	d1, [x2, #88]
   3228c:	ldp	d16, d20, [x2, #72]
   32290:	fabs	d19, d16
   32294:	fmadd	d17, d18, d4, d17
   32298:	fmadd	d5, d17, d4, d5
   3229c:	fmadd	d1, d5, d4, d1
   322a0:	fmul	d1, d1, d4
   322a4:	fabs	d17, d1
   322a8:	fadd	d5, d16, d1
   322ac:	fcmpe	d19, d17
   322b0:	b.le	32e1c <__atan2_finite@GLIBC_2.17+0x1c6c>
   322b4:	fsub	d16, d16, d5
   322b8:	movi	d17, #0x0
   322bc:	fadd	d1, d16, d1
   322c0:	fadd	d1, d1, d17
   322c4:	fadd	d1, d1, d20
   322c8:	fadd	d18, d1, d5
   322cc:	add	x2, x0, #0xa50
   322d0:	add	x2, x2, x1, lsl #7
   322d4:	fsub	d16, d5, d18
   322d8:	fmul	d17, d3, d18
   322dc:	fmul	d5, d4, d18
   322e0:	fnmsub	d18, d4, d18, d5
   322e4:	ldp	d19, d21, [x2, #56]
   322e8:	fadd	d1, d16, d1
   322ec:	fabs	d20, d19
   322f0:	fmadd	d1, d4, d1, d17
   322f4:	fadd	d17, d1, d18
   322f8:	fadd	d1, d5, d17
   322fc:	fabs	d18, d1
   32300:	fsub	d16, d5, d1
   32304:	fadd	d5, d19, d1
   32308:	fcmpe	d20, d18
   3230c:	fadd	d16, d16, d17
   32310:	b.le	32e08 <__atan2_finite@GLIBC_2.17+0x1c58>
   32314:	fsub	d19, d19, d5
   32318:	fadd	d1, d19, d1
   3231c:	fadd	d1, d1, d16
   32320:	fadd	d1, d1, d21
   32324:	fadd	d18, d1, d5
   32328:	add	x2, x0, #0xa50
   3232c:	add	x2, x2, x1, lsl #7
   32330:	fsub	d16, d5, d18
   32334:	fmul	d17, d3, d18
   32338:	fmul	d5, d4, d18
   3233c:	fnmsub	d18, d4, d18, d5
   32340:	ldp	d19, d21, [x2, #40]
   32344:	fadd	d1, d16, d1
   32348:	fabs	d20, d19
   3234c:	fmadd	d1, d4, d1, d17
   32350:	fadd	d17, d1, d18
   32354:	fadd	d1, d5, d17
   32358:	fabs	d18, d1
   3235c:	fsub	d16, d5, d1
   32360:	fadd	d5, d19, d1
   32364:	fcmpe	d20, d18
   32368:	fadd	d16, d16, d17
   3236c:	b.le	32dc4 <__atan2_finite@GLIBC_2.17+0x1c14>
   32370:	fsub	d19, d19, d5
   32374:	fadd	d1, d19, d1
   32378:	fadd	d1, d1, d16
   3237c:	fadd	d1, d1, d21
   32380:	fadd	d18, d1, d5
   32384:	add	x2, x0, #0xa50
   32388:	add	x2, x2, x1, lsl #7
   3238c:	fsub	d16, d5, d18
   32390:	fmul	d17, d3, d18
   32394:	fmul	d5, d4, d18
   32398:	fnmsub	d18, d4, d18, d5
   3239c:	ldp	d19, d21, [x2, #24]
   323a0:	fadd	d1, d16, d1
   323a4:	fabs	d20, d19
   323a8:	fmadd	d1, d4, d1, d17
   323ac:	fadd	d17, d1, d18
   323b0:	fadd	d1, d5, d17
   323b4:	fabs	d18, d1
   323b8:	fsub	d5, d5, d1
   323bc:	fadd	d16, d19, d1
   323c0:	fcmpe	d20, d18
   323c4:	fadd	d17, d5, d17
   323c8:	b.le	32db0 <__atan2_finite@GLIBC_2.17+0x1c00>
   323cc:	fsub	d5, d19, d16
   323d0:	fadd	d5, d5, d1
   323d4:	fadd	d5, d5, d17
   323d8:	fadd	d5, d5, d21
   323dc:	fadd	d18, d5, d16
   323e0:	add	x0, x0, #0xa50
   323e4:	add	x1, x0, x1, lsl #7
   323e8:	fsub	d17, d16, d18
   323ec:	fmul	d1, d3, d18
   323f0:	fmul	d16, d4, d18
   323f4:	fnmsub	d18, d4, d18, d16
   323f8:	ldp	d19, d20, [x1, #8]
   323fc:	fadd	d5, d17, d5
   32400:	fabs	d17, d19
   32404:	fmadd	d1, d4, d5, d1
   32408:	fadd	d1, d1, d18
   3240c:	fadd	d3, d16, d1
   32410:	fabs	d5, d3
   32414:	fsub	d16, d16, d3
   32418:	fadd	d4, d19, d3
   3241c:	fcmpe	d17, d5
   32420:	fadd	d16, d16, d1
   32424:	b.le	32d9c <__atan2_finite@GLIBC_2.17+0x1bec>
   32428:	fsub	d1, d19, d4
   3242c:	fadd	d1, d1, d3
   32430:	fadd	d1, d1, d16
   32434:	fadd	d1, d1, d20
   32438:	fadd	d5, d1, d4
   3243c:	fabs	d17, d6
   32440:	fabs	d16, d5
   32444:	fsub	d4, d4, d5
   32448:	fsub	d3, d6, d5
   3244c:	fcmpe	d17, d16
   32450:	fadd	d4, d4, d1
   32454:	b.le	32d88 <__atan2_finite@GLIBC_2.17+0x1bd8>
   32458:	fsub	d1, d6, d3
   3245c:	fsub	d1, d1, d5
   32460:	fsub	d1, d1, d4
   32464:	fadd	d1, d1, d7
   32468:	fadd	d5, d1, d3
   3246c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32470:	ldr	d4, [x0, #2264]
   32474:	fsub	d3, d3, d5
   32478:	fadd	d1, d3, d1
   3247c:	fsub	d3, d1, d4
   32480:	fadd	d1, d4, d1
   32484:	fadd	d3, d3, d5
   32488:	fadd	d1, d1, d5
   3248c:	fcmp	d1, d3
   32490:	b.eq	31708 <__atan2_finite@GLIBC_2.17+0x558>  // b.none
   32494:	b	31ab4 <__atan2_finite@GLIBC_2.17+0x904>
   32498:	mov	x0, #0x4070000000000000    	// #4643211215818981376
   3249c:	fmov	d1, x0
   324a0:	mov	x0, #0x4330000000000000    	// #4841369599423283200
   324a4:	fmov	d4, x0
   324a8:	fmadd	d1, d5, d1, d4
   324ac:	adrp	x3, 74000 <f64xsubf128@@GLIBC_2.28+0x20280>
   324b0:	add	x4, x3, #0x2d0
   324b4:	fabs	d19, d3
   324b8:	fsub	d1, d1, d4
   324bc:	fcvtzs	w0, d1
   324c0:	sub	w0, w0, #0x10
   324c4:	sxtw	x2, w0
   324c8:	sbfiz	x1, x0, #3, #32
   324cc:	sub	x1, x1, x2
   324d0:	ldr	d1, [x4, x1, lsl #3]
   324d4:	fsub	d1, d5, d1
   324d8:	fabs	d6, d1
   324dc:	fadd	d4, d3, d1
   324e0:	fcmpe	d6, d19
   324e4:	b.le	32d24 <__atan2_finite@GLIBC_2.17+0x1b74>
   324e8:	fsub	d1, d1, d4
   324ec:	fadd	d20, d1, d3
   324f0:	lsl	x1, x2, #3
   324f4:	add	x3, x3, #0x2d0
   324f8:	sub	x1, x1, x2
   324fc:	fmul	d1, d4, d4
   32500:	cmp	w0, #0x6f
   32504:	add	x1, x3, x1, lsl #3
   32508:	ldp	d16, d17, [x1, #32]
   3250c:	ldr	d6, [x1, #48]
   32510:	ldp	d18, d7, [x1, #16]
   32514:	fmadd	d17, d6, d4, d17
   32518:	ldr	d6, [x1, #8]
   3251c:	fmadd	d16, d17, d4, d16
   32520:	fmadd	d7, d16, d4, d7
   32524:	fmul	d1, d1, d7
   32528:	fmadd	d1, d20, d18, d1
   3252c:	fmadd	d1, d4, d18, d1
   32530:	b.gt	32d10 <__atan2_finite@GLIBC_2.17+0x1b60>
   32534:	cmp	w0, #0x2f
   32538:	b.gt	32f88 <__atan2_finite@GLIBC_2.17+0x1dd8>
   3253c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32540:	ldr	d7, [x0, #2320]
   32544:	fmsub	d4, d7, d6, d1
   32548:	fmadd	d1, d7, d6, d1
   3254c:	fadd	d4, d4, d6
   32550:	fadd	d1, d1, d6
   32554:	fcmp	d1, d4
   32558:	b.eq	31e3c <__atan2_finite@GLIBC_2.17+0xc8c>  // b.none
   3255c:	lsl	x1, x2, #7
   32560:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32564:	add	x3, x0, #0xa50
   32568:	ldr	d1, [x3, x1]
   3256c:	fsub	d1, d5, d1
   32570:	fabs	d5, d1
   32574:	fadd	d4, d3, d1
   32578:	fcmpe	d19, d5
   3257c:	b.pl	32f18 <__atan2_finite@GLIBC_2.17+0x1d68>  // b.nfrst
   32580:	fsub	d1, d1, d4
   32584:	fadd	d3, d1, d3
   32588:	add	x1, x0, #0xa50
   3258c:	add	x1, x1, x2, lsl #7
   32590:	ldp	d16, d1, [x1, #112]
   32594:	ldp	d5, d7, [x1, #96]
   32598:	fmadd	d16, d1, d4, d16
   3259c:	ldr	d1, [x1, #88]
   325a0:	ldp	d6, d18, [x1, #72]
   325a4:	fabs	d17, d6
   325a8:	fmadd	d7, d16, d4, d7
   325ac:	fmadd	d5, d7, d4, d5
   325b0:	fmadd	d1, d5, d4, d1
   325b4:	fmul	d1, d1, d4
   325b8:	fabs	d7, d1
   325bc:	fadd	d5, d6, d1
   325c0:	fcmpe	d17, d7
   325c4:	b.le	32ea0 <__atan2_finite@GLIBC_2.17+0x1cf0>
   325c8:	fsub	d6, d6, d5
   325cc:	movi	d7, #0x0
   325d0:	fadd	d1, d6, d1
   325d4:	fadd	d1, d1, d7
   325d8:	fadd	d1, d1, d18
   325dc:	fadd	d16, d1, d5
   325e0:	add	x1, x0, #0xa50
   325e4:	add	x1, x1, x2, lsl #7
   325e8:	fsub	d6, d5, d16
   325ec:	fmul	d7, d3, d16
   325f0:	fmul	d5, d4, d16
   325f4:	fnmsub	d16, d4, d16, d5
   325f8:	ldp	d17, d19, [x1, #56]
   325fc:	fadd	d1, d6, d1
   32600:	fabs	d18, d17
   32604:	fmadd	d1, d4, d1, d7
   32608:	fadd	d7, d1, d16
   3260c:	fadd	d1, d5, d7
   32610:	fabs	d16, d1
   32614:	fsub	d6, d5, d1
   32618:	fadd	d5, d17, d1
   3261c:	fcmpe	d18, d16
   32620:	fadd	d6, d6, d7
   32624:	b.le	32e8c <__atan2_finite@GLIBC_2.17+0x1cdc>
   32628:	fsub	d17, d17, d5
   3262c:	fadd	d1, d17, d1
   32630:	fadd	d1, d1, d6
   32634:	fadd	d1, d1, d19
   32638:	fadd	d16, d1, d5
   3263c:	add	x1, x0, #0xa50
   32640:	add	x1, x1, x2, lsl #7
   32644:	fsub	d6, d5, d16
   32648:	fmul	d7, d3, d16
   3264c:	fmul	d5, d4, d16
   32650:	fnmsub	d16, d4, d16, d5
   32654:	ldp	d17, d19, [x1, #40]
   32658:	fadd	d1, d6, d1
   3265c:	fabs	d18, d17
   32660:	fmadd	d1, d4, d1, d7
   32664:	fadd	d7, d1, d16
   32668:	fadd	d1, d5, d7
   3266c:	fabs	d16, d1
   32670:	fsub	d6, d5, d1
   32674:	fadd	d5, d17, d1
   32678:	fcmpe	d18, d16
   3267c:	fadd	d6, d6, d7
   32680:	b.le	32e78 <__atan2_finite@GLIBC_2.17+0x1cc8>
   32684:	fsub	d17, d17, d5
   32688:	fadd	d1, d17, d1
   3268c:	fadd	d1, d1, d6
   32690:	fadd	d1, d1, d19
   32694:	fadd	d16, d1, d5
   32698:	add	x1, x0, #0xa50
   3269c:	add	x1, x1, x2, lsl #7
   326a0:	fsub	d6, d5, d16
   326a4:	fmul	d7, d3, d16
   326a8:	fmul	d5, d4, d16
   326ac:	fnmsub	d16, d4, d16, d5
   326b0:	ldp	d17, d19, [x1, #24]
   326b4:	fadd	d1, d6, d1
   326b8:	fabs	d18, d17
   326bc:	fmadd	d1, d4, d1, d7
   326c0:	fadd	d7, d1, d16
   326c4:	fadd	d1, d5, d7
   326c8:	fabs	d16, d1
   326cc:	fsub	d6, d5, d1
   326d0:	fadd	d5, d17, d1
   326d4:	fcmpe	d18, d16
   326d8:	fadd	d6, d6, d7
   326dc:	b.le	32e64 <__atan2_finite@GLIBC_2.17+0x1cb4>
   326e0:	fsub	d17, d17, d5
   326e4:	fadd	d1, d17, d1
   326e8:	fadd	d1, d1, d6
   326ec:	fadd	d1, d1, d19
   326f0:	fadd	d7, d1, d5
   326f4:	add	x0, x0, #0xa50
   326f8:	add	x2, x0, x2, lsl #7
   326fc:	fsub	d6, d5, d7
   32700:	fmul	d3, d3, d7
   32704:	fmul	d5, d4, d7
   32708:	fnmsub	d7, d4, d7, d5
   3270c:	ldp	d16, d18, [x2, #8]
   32710:	fadd	d1, d6, d1
   32714:	fabs	d17, d16
   32718:	fmadd	d3, d4, d1, d3
   3271c:	fadd	d3, d3, d7
   32720:	fadd	d4, d5, d3
   32724:	fabs	d6, d4
   32728:	fsub	d5, d5, d4
   3272c:	fadd	d1, d16, d4
   32730:	fcmpe	d17, d6
   32734:	fadd	d5, d5, d3
   32738:	b.le	32df4 <__atan2_finite@GLIBC_2.17+0x1c44>
   3273c:	fsub	d3, d16, d1
   32740:	fadd	d3, d3, d4
   32744:	fadd	d3, d3, d5
   32748:	fadd	d3, d3, d18
   3274c:	fadd	d4, d3, d1
   32750:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32754:	ldr	d5, [x0, #2272]
   32758:	fsub	d1, d1, d4
   3275c:	fadd	d1, d1, d3
   32760:	fmsub	d3, d5, d4, d1
   32764:	fmadd	d1, d5, d4, d1
   32768:	fadd	d3, d3, d4
   3276c:	fadd	d1, d1, d4
   32770:	fcmp	d1, d3
   32774:	b.eq	31708 <__atan2_finite@GLIBC_2.17+0x558>  // b.none
   32778:	b	31ab4 <__atan2_finite@GLIBC_2.17+0x904>
   3277c:	cbnz	w2, 3126c <__atan2_finite@GLIBC_2.17+0xbc>
   32780:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32784:	ldr	d0, [x0, #2360]
   32788:	ret
   3278c:	mov	x0, #0x4070000000000000    	// #4643211215818981376
   32790:	fmov	d1, x0
   32794:	mov	x0, #0x4330000000000000    	// #4841369599423283200
   32798:	fmov	d4, x0
   3279c:	fmadd	d1, d5, d1, d4
   327a0:	adrp	x3, 74000 <f64xsubf128@@GLIBC_2.28+0x20280>
   327a4:	add	x3, x3, #0x2d0
   327a8:	fsub	d1, d1, d4
   327ac:	fcvtzs	w0, d1
   327b0:	sub	w0, w0, #0x10
   327b4:	cmp	w0, #0x6f
   327b8:	sxtw	x1, w0
   327bc:	sbfiz	x0, x0, #3, #32
   327c0:	sub	x0, x0, x1
   327c4:	lsl	x0, x0, #3
   327c8:	add	x2, x3, x0
   327cc:	ldr	d1, [x3, x0]
   327d0:	ldp	d19, d20, [x2, #40]
   327d4:	fsub	d1, d5, d1
   327d8:	ldp	d17, d18, [x2, #24]
   327dc:	ldp	d7, d4, [x2, #8]
   327e0:	fadd	d1, d1, d3
   327e4:	fadd	d7, d6, d7
   327e8:	fmadd	d19, d20, d1, d19
   327ec:	fmadd	d18, d19, d1, d18
   327f0:	fmadd	d17, d18, d1, d17
   327f4:	fmadd	d4, d17, d1, d4
   327f8:	fmadd	d1, d4, d1, d16
   327fc:	b.gt	32d70 <__atan2_finite@GLIBC_2.17+0x1bc0>
   32800:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32804:	ldr	d4, [x0, #2288]
   32808:	fsub	d17, d1, d4
   3280c:	fadd	d1, d4, d1
   32810:	fadd	d4, d17, d7
   32814:	fadd	d1, d1, d7
   32818:	fcmp	d1, d4
   3281c:	b.eq	31e3c <__atan2_finite@GLIBC_2.17+0xc8c>  // b.none
   32820:	lsl	x2, x1, #7
   32824:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32828:	add	x3, x0, #0xa50
   3282c:	fabs	d7, d3
   32830:	ldr	d1, [x3, x2]
   32834:	fsub	d1, d5, d1
   32838:	fabs	d17, d1
   3283c:	fadd	d4, d1, d3
   32840:	fcmpe	d17, d7
   32844:	b.le	32fe8 <__atan2_finite@GLIBC_2.17+0x1e38>
   32848:	fsub	d1, d1, d4
   3284c:	fadd	d3, d1, d3
   32850:	add	x2, x0, #0xa50
   32854:	add	x2, x2, x1, lsl #7
   32858:	ldp	d18, d1, [x2, #112]
   3285c:	ldp	d5, d17, [x2, #96]
   32860:	fmadd	d18, d1, d4, d18
   32864:	ldr	d1, [x2, #88]
   32868:	ldp	d7, d20, [x2, #72]
   3286c:	fabs	d19, d7
   32870:	fmadd	d17, d18, d4, d17
   32874:	fmadd	d5, d17, d4, d5
   32878:	fmadd	d1, d5, d4, d1
   3287c:	fmul	d1, d1, d4
   32880:	fabs	d17, d1
   32884:	fadd	d5, d7, d1
   32888:	fcmpe	d19, d17
   3288c:	b.le	33008 <__atan2_finite@GLIBC_2.17+0x1e58>
   32890:	fsub	d7, d7, d5
   32894:	movi	d17, #0x0
   32898:	fadd	d1, d7, d1
   3289c:	fadd	d1, d1, d17
   328a0:	fadd	d1, d1, d20
   328a4:	fadd	d18, d1, d5
   328a8:	add	x2, x0, #0xa50
   328ac:	add	x2, x2, x1, lsl #7
   328b0:	fsub	d7, d5, d18
   328b4:	fmul	d17, d3, d18
   328b8:	fmul	d5, d4, d18
   328bc:	fnmsub	d18, d4, d18, d5
   328c0:	ldp	d19, d21, [x2, #56]
   328c4:	fadd	d1, d7, d1
   328c8:	fabs	d20, d19
   328cc:	fmadd	d1, d4, d1, d17
   328d0:	fadd	d17, d1, d18
   328d4:	fadd	d1, d5, d17
   328d8:	fabs	d18, d1
   328dc:	fsub	d7, d5, d1
   328e0:	fadd	d5, d19, d1
   328e4:	fcmpe	d20, d18
   328e8:	fadd	d7, d7, d17
   328ec:	b.le	32ff4 <__atan2_finite@GLIBC_2.17+0x1e44>
   328f0:	fsub	d19, d19, d5
   328f4:	fadd	d1, d19, d1
   328f8:	fadd	d1, d1, d7
   328fc:	fadd	d1, d1, d21
   32900:	fadd	d18, d1, d5
   32904:	add	x2, x0, #0xa50
   32908:	add	x2, x2, x1, lsl #7
   3290c:	fsub	d7, d5, d18
   32910:	fmul	d17, d3, d18
   32914:	fmul	d5, d4, d18
   32918:	fnmsub	d18, d4, d18, d5
   3291c:	ldp	d19, d21, [x2, #40]
   32920:	fadd	d1, d7, d1
   32924:	fabs	d20, d19
   32928:	fmadd	d1, d4, d1, d17
   3292c:	fadd	d17, d1, d18
   32930:	fadd	d1, d5, d17
   32934:	fabs	d18, d1
   32938:	fsub	d7, d5, d1
   3293c:	fadd	d5, d19, d1
   32940:	fcmpe	d20, d18
   32944:	fadd	d7, d7, d17
   32948:	b.le	3305c <__atan2_finite@GLIBC_2.17+0x1eac>
   3294c:	fsub	d19, d19, d5
   32950:	fadd	d1, d19, d1
   32954:	fadd	d1, d1, d7
   32958:	fadd	d1, d1, d21
   3295c:	fadd	d18, d1, d5
   32960:	add	x2, x0, #0xa50
   32964:	add	x2, x2, x1, lsl #7
   32968:	fsub	d7, d5, d18
   3296c:	fmul	d17, d3, d18
   32970:	fmul	d5, d4, d18
   32974:	fnmsub	d18, d4, d18, d5
   32978:	ldp	d19, d21, [x2, #24]
   3297c:	fadd	d1, d7, d1
   32980:	fabs	d20, d19
   32984:	fmadd	d1, d4, d1, d17
   32988:	fadd	d17, d1, d18
   3298c:	fadd	d1, d5, d17
   32990:	fabs	d18, d1
   32994:	fsub	d5, d5, d1
   32998:	fadd	d7, d19, d1
   3299c:	fcmpe	d20, d18
   329a0:	fadd	d17, d5, d17
   329a4:	b.le	33048 <__atan2_finite@GLIBC_2.17+0x1e98>
   329a8:	fsub	d5, d19, d7
   329ac:	fadd	d5, d5, d1
   329b0:	fadd	d5, d5, d17
   329b4:	fadd	d5, d5, d21
   329b8:	fadd	d18, d5, d7
   329bc:	add	x0, x0, #0xa50
   329c0:	add	x1, x0, x1, lsl #7
   329c4:	fsub	d17, d7, d18
   329c8:	fmul	d1, d3, d18
   329cc:	fmul	d7, d4, d18
   329d0:	fnmsub	d18, d4, d18, d7
   329d4:	ldp	d19, d20, [x1, #8]
   329d8:	fadd	d5, d17, d5
   329dc:	fabs	d17, d19
   329e0:	fmadd	d1, d4, d5, d1
   329e4:	fadd	d1, d1, d18
   329e8:	fadd	d3, d7, d1
   329ec:	fabs	d5, d3
   329f0:	fsub	d7, d7, d3
   329f4:	fadd	d4, d19, d3
   329f8:	fcmpe	d17, d5
   329fc:	fadd	d7, d7, d1
   32a00:	b.le	33034 <__atan2_finite@GLIBC_2.17+0x1e84>
   32a04:	fsub	d19, d19, d4
   32a08:	fadd	d3, d19, d3
   32a0c:	fadd	d3, d3, d7
   32a10:	fadd	d3, d3, d20
   32a14:	fadd	d1, d3, d4
   32a18:	fabs	d17, d6
   32a1c:	fabs	d7, d1
   32a20:	fsub	d5, d4, d1
   32a24:	fadd	d4, d1, d6
   32a28:	fcmpe	d17, d7
   32a2c:	fadd	d3, d5, d3
   32a30:	b.le	33020 <__atan2_finite@GLIBC_2.17+0x1e70>
   32a34:	fsub	d6, d6, d4
   32a38:	fadd	d1, d6, d1
   32a3c:	fadd	d3, d1, d3
   32a40:	fadd	d16, d3, d16
   32a44:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32a48:	fadd	d5, d16, d4
   32a4c:	ldr	d1, [x0, #2264]
   32a50:	b	31df4 <__atan2_finite@GLIBC_2.17+0xc44>
   32a54:	mov	x0, #0x4070000000000000    	// #4643211215818981376
   32a58:	fmov	d1, x0
   32a5c:	mov	x0, #0x4330000000000000    	// #4841369599423283200
   32a60:	fmov	d4, x0
   32a64:	fmadd	d1, d5, d1, d4
   32a68:	adrp	x3, 74000 <f64xsubf128@@GLIBC_2.28+0x20280>
   32a6c:	add	x3, x3, #0x2d0
   32a70:	fsub	d1, d1, d4
   32a74:	fcvtzs	w0, d1
   32a78:	sub	w0, w0, #0x10
   32a7c:	cmp	w0, #0x6f
   32a80:	sxtw	x1, w0
   32a84:	sbfiz	x0, x0, #3, #32
   32a88:	sub	x0, x0, x1
   32a8c:	lsl	x0, x0, #3
   32a90:	add	x2, x3, x0
   32a94:	ldr	d4, [x3, x0]
   32a98:	ldp	d19, d20, [x2, #40]
   32a9c:	fsub	d4, d5, d4
   32aa0:	ldp	d17, d18, [x2, #24]
   32aa4:	ldp	d6, d1, [x2, #8]
   32aa8:	fadd	d4, d4, d3
   32aac:	fsub	d6, d7, d6
   32ab0:	fmadd	d19, d20, d4, d19
   32ab4:	fmadd	d18, d19, d4, d18
   32ab8:	fmadd	d17, d18, d4, d17
   32abc:	fmadd	d1, d17, d4, d1
   32ac0:	fmsub	d4, d1, d4, d16
   32ac4:	b.gt	32d54 <__atan2_finite@GLIBC_2.17+0x1ba4>
   32ac8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32acc:	ldr	d1, [x0, #2288]
   32ad0:	fsub	d17, d4, d1
   32ad4:	fadd	d1, d1, d4
   32ad8:	fadd	d4, d17, d6
   32adc:	fadd	d1, d1, d6
   32ae0:	fcmp	d1, d4
   32ae4:	b.eq	31e3c <__atan2_finite@GLIBC_2.17+0xc8c>  // b.none
   32ae8:	lsl	x2, x1, #7
   32aec:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32af0:	add	x3, x0, #0xa50
   32af4:	fabs	d6, d3
   32af8:	ldr	d1, [x3, x2]
   32afc:	fsub	d1, d5, d1
   32b00:	fabs	d17, d1
   32b04:	fadd	d4, d1, d3
   32b08:	fcmpe	d17, d6
   32b0c:	b.le	32fdc <__atan2_finite@GLIBC_2.17+0x1e2c>
   32b10:	fsub	d1, d1, d4
   32b14:	fadd	d1, d1, d3
   32b18:	add	x2, x0, #0xa50
   32b1c:	add	x2, x2, x1, lsl #7
   32b20:	ldp	d18, d3, [x2, #112]
   32b24:	ldp	d5, d17, [x2, #96]
   32b28:	fmadd	d18, d3, d4, d18
   32b2c:	ldr	d3, [x2, #88]
   32b30:	ldp	d6, d20, [x2, #72]
   32b34:	fabs	d19, d6
   32b38:	fmadd	d17, d18, d4, d17
   32b3c:	fmadd	d5, d17, d4, d5
   32b40:	fmadd	d3, d5, d4, d3
   32b44:	fmul	d3, d3, d4
   32b48:	fabs	d17, d3
   32b4c:	fadd	d5, d6, d3
   32b50:	fcmpe	d19, d17
   32b54:	b.le	32fc4 <__atan2_finite@GLIBC_2.17+0x1e14>
   32b58:	fsub	d6, d6, d5
   32b5c:	movi	d17, #0x0
   32b60:	fadd	d3, d6, d3
   32b64:	fadd	d3, d3, d17
   32b68:	fadd	d3, d3, d20
   32b6c:	fadd	d18, d3, d5
   32b70:	add	x2, x0, #0xa50
   32b74:	add	x2, x2, x1, lsl #7
   32b78:	fsub	d6, d5, d18
   32b7c:	fmul	d17, d1, d18
   32b80:	fmul	d5, d4, d18
   32b84:	fnmsub	d18, d4, d18, d5
   32b88:	ldp	d19, d21, [x2, #56]
   32b8c:	fadd	d3, d6, d3
   32b90:	fabs	d20, d19
   32b94:	fmadd	d3, d4, d3, d17
   32b98:	fadd	d17, d3, d18
   32b9c:	fadd	d3, d5, d17
   32ba0:	fabs	d18, d3
   32ba4:	fsub	d6, d5, d3
   32ba8:	fadd	d5, d19, d3
   32bac:	fcmpe	d20, d18
   32bb0:	fadd	d6, d6, d17
   32bb4:	b.le	32fb0 <__atan2_finite@GLIBC_2.17+0x1e00>
   32bb8:	fsub	d19, d19, d5
   32bbc:	fadd	d3, d19, d3
   32bc0:	fadd	d3, d3, d6
   32bc4:	fadd	d3, d3, d21
   32bc8:	fadd	d18, d3, d5
   32bcc:	add	x2, x0, #0xa50
   32bd0:	add	x2, x2, x1, lsl #7
   32bd4:	fsub	d6, d5, d18
   32bd8:	fmul	d17, d1, d18
   32bdc:	fmul	d5, d4, d18
   32be0:	fnmsub	d18, d4, d18, d5
   32be4:	ldp	d19, d21, [x2, #40]
   32be8:	fadd	d3, d6, d3
   32bec:	fabs	d20, d19
   32bf0:	fmadd	d3, d4, d3, d17
   32bf4:	fadd	d17, d3, d18
   32bf8:	fadd	d3, d5, d17
   32bfc:	fabs	d18, d3
   32c00:	fsub	d6, d5, d3
   32c04:	fadd	d5, d19, d3
   32c08:	fcmpe	d20, d18
   32c0c:	fadd	d6, d6, d17
   32c10:	b.le	33108 <__atan2_finite@GLIBC_2.17+0x1f58>
   32c14:	fsub	d19, d19, d5
   32c18:	fadd	d3, d19, d3
   32c1c:	fadd	d3, d3, d6
   32c20:	fadd	d3, d3, d21
   32c24:	fadd	d18, d3, d5
   32c28:	add	x2, x0, #0xa50
   32c2c:	add	x2, x2, x1, lsl #7
   32c30:	fsub	d6, d5, d18
   32c34:	fmul	d17, d1, d18
   32c38:	fmul	d5, d4, d18
   32c3c:	fnmsub	d18, d4, d18, d5
   32c40:	ldp	d19, d21, [x2, #24]
   32c44:	fadd	d3, d6, d3
   32c48:	fabs	d20, d19
   32c4c:	fmadd	d3, d4, d3, d17
   32c50:	fadd	d17, d3, d18
   32c54:	fadd	d3, d5, d17
   32c58:	fabs	d18, d3
   32c5c:	fsub	d6, d5, d3
   32c60:	fadd	d5, d19, d3
   32c64:	fcmpe	d20, d18
   32c68:	fadd	d6, d6, d17
   32c6c:	b.le	330f4 <__atan2_finite@GLIBC_2.17+0x1f44>
   32c70:	fsub	d19, d19, d5
   32c74:	fadd	d3, d19, d3
   32c78:	fadd	d3, d3, d6
   32c7c:	fadd	d3, d3, d21
   32c80:	fadd	d17, d3, d5
   32c84:	add	x0, x0, #0xa50
   32c88:	add	x0, x0, x1, lsl #7
   32c8c:	fsub	d6, d5, d17
   32c90:	fmul	d1, d1, d17
   32c94:	fmul	d5, d4, d17
   32c98:	fnmsub	d17, d4, d17, d5
   32c9c:	ldp	d18, d20, [x0, #8]
   32ca0:	fadd	d3, d6, d3
   32ca4:	fabs	d19, d18
   32ca8:	fmadd	d1, d4, d3, d1
   32cac:	fadd	d1, d1, d17
   32cb0:	fadd	d3, d5, d1
   32cb4:	fabs	d6, d3
   32cb8:	fsub	d5, d5, d3
   32cbc:	fadd	d4, d18, d3
   32cc0:	fcmpe	d19, d6
   32cc4:	fadd	d5, d5, d1
   32cc8:	b.le	330e0 <__atan2_finite@GLIBC_2.17+0x1f30>
   32ccc:	fsub	d1, d18, d4
   32cd0:	fadd	d1, d1, d3
   32cd4:	fadd	d1, d1, d5
   32cd8:	fadd	d1, d1, d20
   32cdc:	fadd	d5, d1, d4
   32ce0:	fabs	d17, d7
   32ce4:	fabs	d6, d5
   32ce8:	fsub	d4, d4, d5
   32cec:	fsub	d3, d7, d5
   32cf0:	fcmpe	d17, d6
   32cf4:	fadd	d4, d4, d1
   32cf8:	b.le	330cc <__atan2_finite@GLIBC_2.17+0x1f1c>
   32cfc:	fsub	d1, d7, d3
   32d00:	fsub	d1, d1, d5
   32d04:	fsub	d1, d1, d4
   32d08:	fadd	d1, d1, d16
   32d0c:	b	32468 <__atan2_finite@GLIBC_2.17+0x12b8>
   32d10:	cmp	w0, #0xaf
   32d14:	b.gt	32f94 <__atan2_finite@GLIBC_2.17+0x1de4>
   32d18:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32d1c:	ldr	d7, [x0, #2304]
   32d20:	b	32544 <__atan2_finite@GLIBC_2.17+0x1394>
   32d24:	fsub	d20, d3, d4
   32d28:	fadd	d20, d20, d1
   32d2c:	b	324f0 <__atan2_finite@GLIBC_2.17+0x1340>
   32d30:	fadd	d4, d5, d20
   32d34:	fsub	d4, d6, d4
   32d38:	b	317f4 <__atan2_finite@GLIBC_2.17+0x644>
   32d3c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32d40:	ldr	d1, [x0, #2280]
   32d44:	b	3222c <__atan2_finite@GLIBC_2.17+0x107c>
   32d48:	fadd	d4, d23, d5
   32d4c:	fsub	d4, d7, d4
   32d50:	b	31ed0 <__atan2_finite@GLIBC_2.17+0xd20>
   32d54:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32d58:	ldr	d1, [x0, #2280]
   32d5c:	b	32ad0 <__atan2_finite@GLIBC_2.17+0x1920>
   32d60:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   32d64:	fmov	d1, x0
   32d68:	bif	v0.8b, v6.8b, v1.8b
   32d6c:	b	31300 <__atan2_finite@GLIBC_2.17+0x150>
   32d70:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32d74:	ldr	d4, [x0, #2280]
   32d78:	b	32808 <__atan2_finite@GLIBC_2.17+0x1658>
   32d7c:	fsub	d1, d5, d23
   32d80:	fadd	d1, d1, d6
   32d84:	b	31b54 <__atan2_finite@GLIBC_2.17+0x9a4>
   32d88:	fadd	d1, d5, d3
   32d8c:	fsub	d1, d6, d1
   32d90:	fadd	d1, d1, d7
   32d94:	fsub	d1, d1, d4
   32d98:	b	32468 <__atan2_finite@GLIBC_2.17+0x12b8>
   32d9c:	fsub	d1, d3, d4
   32da0:	fadd	d1, d1, d19
   32da4:	fadd	d1, d1, d20
   32da8:	fadd	d1, d1, d16
   32dac:	b	32438 <__atan2_finite@GLIBC_2.17+0x1288>
   32db0:	fsub	d5, d1, d16
   32db4:	fadd	d5, d5, d19
   32db8:	fadd	d5, d5, d21
   32dbc:	fadd	d5, d5, d17
   32dc0:	b	323dc <__atan2_finite@GLIBC_2.17+0x122c>
   32dc4:	fsub	d1, d1, d5
   32dc8:	fadd	d1, d1, d19
   32dcc:	fadd	d1, d1, d21
   32dd0:	fadd	d1, d1, d16
   32dd4:	b	32380 <__atan2_finite@GLIBC_2.17+0x11d0>
   32dd8:	fsub	d4, d4, d16
   32ddc:	movi	d21, #0x0
   32de0:	fadd	d4, d4, d20
   32de4:	ldr	d20, [sp, #40]
   32de8:	fadd	d4, d4, d20
   32dec:	fadd	d4, d4, d21
   32df0:	b	318b8 <__atan2_finite@GLIBC_2.17+0x708>
   32df4:	fsub	d3, d4, d1
   32df8:	fadd	d3, d3, d16
   32dfc:	fadd	d3, d3, d18
   32e00:	fadd	d3, d3, d5
   32e04:	b	3274c <__atan2_finite@GLIBC_2.17+0x159c>
   32e08:	fsub	d1, d1, d5
   32e0c:	fadd	d1, d1, d19
   32e10:	fadd	d1, d1, d21
   32e14:	fadd	d1, d1, d16
   32e18:	b	32324 <__atan2_finite@GLIBC_2.17+0x1174>
   32e1c:	fsub	d1, d1, d5
   32e20:	movi	d17, #0x0
   32e24:	fadd	d1, d1, d16
   32e28:	fadd	d1, d1, d20
   32e2c:	fadd	d1, d1, d17
   32e30:	b	322c8 <__atan2_finite@GLIBC_2.17+0x1118>
   32e34:	fsub	d4, d4, d16
   32e38:	ldr	d21, [sp, #40]
   32e3c:	fadd	d4, d4, d23
   32e40:	fadd	d4, d4, d21
   32e44:	fadd	d4, d4, d20
   32e48:	b	31988 <__atan2_finite@GLIBC_2.17+0x7d8>
   32e4c:	fsub	d4, d4, d16
   32e50:	ldr	d21, [sp, #40]
   32e54:	fadd	d4, d4, d23
   32e58:	fadd	d4, d4, d21
   32e5c:	fadd	d4, d4, d20
   32e60:	b	31920 <__atan2_finite@GLIBC_2.17+0x770>
   32e64:	fsub	d1, d1, d5
   32e68:	fadd	d1, d1, d17
   32e6c:	fadd	d1, d1, d19
   32e70:	fadd	d1, d1, d6
   32e74:	b	326f0 <__atan2_finite@GLIBC_2.17+0x1540>
   32e78:	fsub	d1, d1, d5
   32e7c:	fadd	d1, d1, d17
   32e80:	fadd	d1, d1, d19
   32e84:	fadd	d1, d1, d6
   32e88:	b	32694 <__atan2_finite@GLIBC_2.17+0x14e4>
   32e8c:	fsub	d1, d1, d5
   32e90:	fadd	d1, d1, d17
   32e94:	fadd	d1, d1, d19
   32e98:	fadd	d1, d1, d6
   32e9c:	b	32638 <__atan2_finite@GLIBC_2.17+0x1488>
   32ea0:	fsub	d1, d1, d5
   32ea4:	movi	d7, #0x0
   32ea8:	fadd	d1, d1, d6
   32eac:	fadd	d1, d1, d18
   32eb0:	fadd	d1, d1, d7
   32eb4:	b	325dc <__atan2_finite@GLIBC_2.17+0x142c>
   32eb8:	fsub	d1, d4, d16
   32ebc:	fadd	d1, d1, d5
   32ec0:	fadd	d3, d1, d3
   32ec4:	fadd	d1, d3, d17
   32ec8:	b	31a5c <__atan2_finite@GLIBC_2.17+0x8ac>
   32ecc:	fsub	d4, d4, d16
   32ed0:	ldr	d21, [sp, #40]
   32ed4:	fadd	d4, d4, d23
   32ed8:	fadd	d4, d4, d21
   32edc:	fadd	d4, d4, d20
   32ee0:	b	319f0 <__atan2_finite@GLIBC_2.17+0x840>
   32ee4:	fsub	d3, d3, d4
   32ee8:	fadd	d3, d3, d1
   32eec:	b	32274 <__atan2_finite@GLIBC_2.17+0x10c4>
   32ef0:	fadd	d1, d3, d4
   32ef4:	fsub	d1, d6, d1
   32ef8:	fadd	d1, d1, d7
   32efc:	fsub	d1, d1, d16
   32f00:	b	31a88 <__atan2_finite@GLIBC_2.17+0x8d8>
   32f04:	fsub	d1, d6, d4
   32f08:	fadd	d1, d1, d5
   32f0c:	fadd	d3, d1, d3
   32f10:	fadd	d3, d3, d7
   32f14:	b	316d8 <__atan2_finite@GLIBC_2.17+0x528>
   32f18:	fsub	d3, d3, d4
   32f1c:	fadd	d3, d3, d1
   32f20:	b	32588 <__atan2_finite@GLIBC_2.17+0x13d8>
   32f24:	fsub	d4, d4, d7
   32f28:	ldr	d17, [sp, #40]
   32f2c:	fadd	d4, d4, d19
   32f30:	fadd	d4, d4, d17
   32f34:	fadd	d4, d4, d16
   32f38:	b	31668 <__atan2_finite@GLIBC_2.17+0x4b8>
   32f3c:	fsub	d4, d4, d7
   32f40:	ldr	d17, [sp, #40]
   32f44:	fadd	d4, d4, d19
   32f48:	fadd	d4, d4, d17
   32f4c:	fadd	d4, d4, d16
   32f50:	b	31600 <__atan2_finite@GLIBC_2.17+0x450>
   32f54:	fsub	d4, d4, d7
   32f58:	ldr	d17, [sp, #40]
   32f5c:	fadd	d4, d4, d19
   32f60:	fadd	d4, d4, d17
   32f64:	fadd	d4, d4, d16
   32f68:	b	31598 <__atan2_finite@GLIBC_2.17+0x3e8>
   32f6c:	fsub	d4, d4, d7
   32f70:	movi	d17, #0x0
   32f74:	fadd	d4, d4, d16
   32f78:	ldr	d16, [sp, #40]
   32f7c:	fadd	d4, d4, d16
   32f80:	fadd	d4, d4, d17
   32f84:	b	31530 <__atan2_finite@GLIBC_2.17+0x380>
   32f88:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32f8c:	ldr	d7, [x0, #2312]
   32f90:	b	32544 <__atan2_finite@GLIBC_2.17+0x1394>
   32f94:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   32f98:	ldr	d7, [x0, #2296]
   32f9c:	b	32544 <__atan2_finite@GLIBC_2.17+0x1394>
   32fa0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   32fa4:	fmov	d1, x0
   32fa8:	bif	v0.8b, v7.8b, v1.8b
   32fac:	b	31300 <__atan2_finite@GLIBC_2.17+0x150>
   32fb0:	fsub	d3, d3, d5
   32fb4:	fadd	d3, d3, d19
   32fb8:	fadd	d3, d3, d21
   32fbc:	fadd	d3, d3, d6
   32fc0:	b	32bc8 <__atan2_finite@GLIBC_2.17+0x1a18>
   32fc4:	fsub	d3, d3, d5
   32fc8:	movi	d17, #0x0
   32fcc:	fadd	d3, d3, d6
   32fd0:	fadd	d3, d3, d20
   32fd4:	fadd	d3, d3, d17
   32fd8:	b	32b6c <__atan2_finite@GLIBC_2.17+0x19bc>
   32fdc:	fsub	d3, d3, d4
   32fe0:	fadd	d1, d3, d1
   32fe4:	b	32b18 <__atan2_finite@GLIBC_2.17+0x1968>
   32fe8:	fsub	d3, d3, d4
   32fec:	fadd	d3, d3, d1
   32ff0:	b	32850 <__atan2_finite@GLIBC_2.17+0x16a0>
   32ff4:	fsub	d1, d1, d5
   32ff8:	fadd	d1, d1, d19
   32ffc:	fadd	d1, d1, d21
   33000:	fadd	d1, d1, d7
   33004:	b	32900 <__atan2_finite@GLIBC_2.17+0x1750>
   33008:	fsub	d1, d1, d5
   3300c:	movi	d17, #0x0
   33010:	fadd	d1, d1, d7
   33014:	fadd	d1, d1, d20
   33018:	fadd	d1, d1, d17
   3301c:	b	328a4 <__atan2_finite@GLIBC_2.17+0x16f4>
   33020:	fsub	d1, d1, d4
   33024:	fadd	d6, d1, d6
   33028:	fadd	d16, d6, d16
   3302c:	fadd	d16, d16, d3
   33030:	b	32a44 <__atan2_finite@GLIBC_2.17+0x1894>
   33034:	fsub	d3, d3, d4
   33038:	fadd	d3, d3, d19
   3303c:	fadd	d3, d3, d20
   33040:	fadd	d3, d3, d7
   33044:	b	32a14 <__atan2_finite@GLIBC_2.17+0x1864>
   33048:	fsub	d5, d1, d7
   3304c:	fadd	d5, d5, d19
   33050:	fadd	d5, d5, d21
   33054:	fadd	d5, d5, d17
   33058:	b	329b8 <__atan2_finite@GLIBC_2.17+0x1808>
   3305c:	fsub	d1, d1, d5
   33060:	fadd	d1, d1, d19
   33064:	fadd	d1, d1, d21
   33068:	fadd	d1, d1, d7
   3306c:	b	3295c <__atan2_finite@GLIBC_2.17+0x17ac>
   33070:	fsub	d1, d1, d6
   33074:	ldr	d21, [sp, #40]
   33078:	fadd	d1, d1, d23
   3307c:	fadd	d1, d1, d21
   33080:	fadd	d1, d1, d20
   33084:	b	31ffc <__atan2_finite@GLIBC_2.17+0xe4c>
   33088:	fsub	d1, d1, d6
   3308c:	movi	d21, #0x0
   33090:	fadd	d1, d1, d20
   33094:	ldr	d20, [sp, #40]
   33098:	fadd	d1, d1, d20
   3309c:	fadd	d1, d1, d21
   330a0:	b	31f94 <__atan2_finite@GLIBC_2.17+0xde4>
   330a4:	fsub	d1, d1, d4
   330a8:	fadd	d6, d1, d6
   330ac:	fadd	d16, d6, d16
   330b0:	fadd	d16, d16, d3
   330b4:	b	31de8 <__atan2_finite@GLIBC_2.17+0xc38>
   330b8:	fsub	d1, d4, d7
   330bc:	fadd	d1, d1, d5
   330c0:	fadd	d3, d1, d3
   330c4:	fadd	d3, d3, d17
   330c8:	b	31dbc <__atan2_finite@GLIBC_2.17+0xc0c>
   330cc:	fadd	d1, d5, d3
   330d0:	fsub	d1, d7, d1
   330d4:	fadd	d1, d1, d16
   330d8:	fsub	d1, d1, d4
   330dc:	b	32468 <__atan2_finite@GLIBC_2.17+0x12b8>
   330e0:	fsub	d1, d3, d4
   330e4:	fadd	d1, d1, d18
   330e8:	fadd	d1, d1, d20
   330ec:	fadd	d1, d1, d5
   330f0:	b	32cdc <__atan2_finite@GLIBC_2.17+0x1b2c>
   330f4:	fsub	d3, d3, d5
   330f8:	fadd	d3, d3, d19
   330fc:	fadd	d3, d3, d21
   33100:	fadd	d3, d3, d6
   33104:	b	32c80 <__atan2_finite@GLIBC_2.17+0x1ad0>
   33108:	fsub	d3, d3, d5
   3310c:	fadd	d3, d3, d19
   33110:	fadd	d3, d3, d21
   33114:	fadd	d3, d3, d6
   33118:	b	32c24 <__atan2_finite@GLIBC_2.17+0x1a74>
   3311c:	fadd	d1, d3, d4
   33120:	fsub	d1, d7, d1
   33124:	fadd	d1, d1, d16
   33128:	fsub	d1, d1, d17
   3312c:	b	32164 <__atan2_finite@GLIBC_2.17+0xfb4>
   33130:	fsub	d1, d4, d17
   33134:	fadd	d1, d1, d5
   33138:	fadd	d3, d1, d3
   3313c:	fadd	d1, d3, d6
   33140:	b	32138 <__atan2_finite@GLIBC_2.17+0xf88>
   33144:	fsub	d6, d1, d20
   33148:	ldr	d1, [sp, #40]
   3314c:	fadd	d6, d6, d23
   33150:	fadd	d6, d6, d1
   33154:	fadd	d6, d6, d21
   33158:	b	320cc <__atan2_finite@GLIBC_2.17+0xf1c>
   3315c:	fsub	d1, d1, d6
   33160:	ldr	d21, [sp, #40]
   33164:	fadd	d1, d1, d23
   33168:	fadd	d1, d1, d21
   3316c:	fadd	d1, d1, d20
   33170:	b	32064 <__atan2_finite@GLIBC_2.17+0xeb4>
   33174:	fsub	d4, d4, d7
   33178:	ldr	d21, [sp, #40]
   3317c:	fadd	d4, d4, d23
   33180:	fadd	d4, d4, d21
   33184:	fadd	d4, d4, d20
   33188:	b	31d50 <__atan2_finite@GLIBC_2.17+0xba0>
   3318c:	fsub	d4, d4, d7
   33190:	ldr	d21, [sp, #40]
   33194:	fadd	d4, d4, d23
   33198:	fadd	d4, d4, d21
   3319c:	fadd	d4, d4, d20
   331a0:	b	31ce8 <__atan2_finite@GLIBC_2.17+0xb38>
   331a4:	fsub	d4, d4, d7
   331a8:	ldr	d21, [sp, #40]
   331ac:	fadd	d4, d4, d23
   331b0:	fadd	d4, d4, d21
   331b4:	fadd	d4, d4, d20
   331b8:	b	31c80 <__atan2_finite@GLIBC_2.17+0xad0>
   331bc:	fsub	d4, d4, d7
   331c0:	movi	d21, #0x0
   331c4:	fadd	d4, d4, d20
   331c8:	ldr	d20, [sp, #40]
   331cc:	fadd	d4, d4, d20
   331d0:	fadd	d4, d4, d21
   331d4:	b	31c18 <__atan2_finite@GLIBC_2.17+0xa68>

00000000000331d8 <__atanh_finite@GLIBC_2.17>:
   331d8:	stp	x29, x30, [sp, #-32]!
   331dc:	fabs	d1, d0
   331e0:	mov	x29, sp
   331e4:	stp	d8, d9, [sp, #16]
   331e8:	fmov	d9, #5.000000000000000000e-01
   331ec:	fmov	d8, d0
   331f0:	fcmp	d1, d9
   331f4:	b.pl	3322c <__atanh_finite@GLIBC_2.17+0x54>  // b.nfrst
   331f8:	mov	x0, #0x3e30000000000000    	// #4481081629233643520
   331fc:	fmov	d0, x0
   33200:	fcmpe	d1, d0
   33204:	b.mi	33264 <__atanh_finite@GLIBC_2.17+0x8c>  // b.first
   33208:	fadd	d0, d1, d1
   3320c:	fmov	d2, #1.000000000000000000e+00
   33210:	fsub	d2, d2, d1
   33214:	fmul	d1, d1, d0
   33218:	fdiv	d1, d1, d2
   3321c:	fadd	d0, d1, d0
   33220:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   33224:	fmul	d0, d0, d9
   33228:	b	3324c <__atanh_finite@GLIBC_2.17+0x74>
   3322c:	fmov	d0, #1.000000000000000000e+00
   33230:	fcmp	d1, d0
   33234:	b.pl	3328c <__atanh_finite@GLIBC_2.17+0xb4>  // b.nfrst
   33238:	fsub	d0, d0, d1
   3323c:	fadd	d1, d1, d1
   33240:	fdiv	d0, d1, d0
   33244:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   33248:	fmul	d0, d0, d9
   3324c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   33250:	fmov	d1, x0
   33254:	bit	v0.8b, v8.8b, v1.8b
   33258:	ldp	d8, d9, [sp, #16]
   3325c:	ldp	x29, x30, [sp], #32
   33260:	ret
   33264:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33268:	ldr	d0, [x0, #1928]
   3326c:	fadd	d0, d8, d0
   33270:	mov	x0, #0x10000000000000      	// #4503599627370496
   33274:	fmov	d0, x0
   33278:	fcmpe	d1, d0
   3327c:	b.pl	332a8 <__atanh_finite@GLIBC_2.17+0xd0>  // b.nfrst
   33280:	fmul	d0, d8, d8
   33284:	fmov	d0, d8
   33288:	b	33258 <__atanh_finite@GLIBC_2.17+0x80>
   3328c:	b.le	3329c <__atanh_finite@GLIBC_2.17+0xc4>
   33290:	fsub	d8, d8, d8
   33294:	fdiv	d0, d8, d8
   33298:	b	33258 <__atanh_finite@GLIBC_2.17+0x80>
   3329c:	movi	d0, #0x0
   332a0:	fdiv	d0, d8, d0
   332a4:	b	33258 <__atanh_finite@GLIBC_2.17+0x80>
   332a8:	fmov	d0, d8
   332ac:	b	33258 <__atanh_finite@GLIBC_2.17+0x80>

00000000000332b0 <__cosh_finite@GLIBC_2.17>:
   332b0:	fmov	x1, d0
   332b4:	stp	x29, x30, [sp, #-32]!
   332b8:	mov	w2, #0x4035ffff            	// #1077280767
   332bc:	mov	x29, sp
   332c0:	str	d8, [sp, #16]
   332c4:	ubfx	x0, x1, #32, #31
   332c8:	cmp	w0, w2
   332cc:	b.gt	3331c <__cosh_finite@GLIBC_2.17+0x6c>
   332d0:	mov	w1, #0x2e42                	// #11842
   332d4:	movk	w1, #0x3fd6, lsl #16
   332d8:	cmp	w0, w1
   332dc:	b.gt	33370 <__cosh_finite@GLIBC_2.17+0xc0>
   332e0:	mov	w1, #0x3c7fffff            	// #1015021567
   332e4:	fmov	d8, #1.000000000000000000e+00
   332e8:	cmp	w0, w1
   332ec:	b.le	33360 <__cosh_finite@GLIBC_2.17+0xb0>
   332f0:	fabs	d0, d0
   332f4:	bl	38968 <expm1@@GLIBC_2.17>
   332f8:	fadd	d1, d0, d8
   332fc:	fmul	d0, d0, d0
   33300:	fadd	d1, d1, d1
   33304:	fdiv	d0, d0, d1
   33308:	fadd	d8, d0, d8
   3330c:	fmov	d0, d8
   33310:	ldr	d8, [sp, #16]
   33314:	ldp	x29, x30, [sp], #32
   33318:	ret
   3331c:	mov	w2, #0x2e41                	// #11841
   33320:	movk	w2, #0x4086, lsl #16
   33324:	cmp	w0, w2
   33328:	b.le	33394 <__cosh_finite@GLIBC_2.17+0xe4>
   3332c:	mov	x2, #0xf87d                	// #63613
   33330:	and	x1, x1, #0x7fffffffffffffff
   33334:	movk	x2, #0x8fb9, lsl #16
   33338:	movk	x2, #0x33ce, lsl #32
   3333c:	movk	x2, #0x4086, lsl #48
   33340:	cmp	x1, x2
   33344:	b.le	333c8 <__cosh_finite@GLIBC_2.17+0x118>
   33348:	mov	w1, #0x7fefffff            	// #2146435071
   3334c:	cmp	w0, w1
   33350:	b.gt	333b4 <__cosh_finite@GLIBC_2.17+0x104>
   33354:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33358:	ldr	d8, [x0, #1928]
   3335c:	fmul	d8, d8, d8
   33360:	fmov	d0, d8
   33364:	ldr	d8, [sp, #16]
   33368:	ldp	x29, x30, [sp], #32
   3336c:	ret
   33370:	fabs	d0, d0
   33374:	bl	333e8 <__exp_finite@GLIBC_2.17>
   33378:	fmov	d1, #5.000000000000000000e-01
   3337c:	fdiv	d8, d1, d0
   33380:	fmadd	d8, d0, d1, d8
   33384:	fmov	d0, d8
   33388:	ldr	d8, [sp, #16]
   3338c:	ldp	x29, x30, [sp], #32
   33390:	ret
   33394:	fabs	d0, d0
   33398:	bl	333e8 <__exp_finite@GLIBC_2.17>
   3339c:	fmov	d8, #5.000000000000000000e-01
   333a0:	fmul	d8, d0, d8
   333a4:	fmov	d0, d8
   333a8:	ldr	d8, [sp, #16]
   333ac:	ldp	x29, x30, [sp], #32
   333b0:	ret
   333b4:	fmul	d8, d0, d0
   333b8:	fmov	d0, d8
   333bc:	ldr	d8, [sp, #16]
   333c0:	ldp	x29, x30, [sp], #32
   333c4:	ret
   333c8:	fabs	d0, d0
   333cc:	fmov	d8, #5.000000000000000000e-01
   333d0:	fmul	d0, d0, d8
   333d4:	bl	333e8 <__exp_finite@GLIBC_2.17>
   333d8:	fmul	d8, d0, d8
   333dc:	fmul	d8, d8, d0
   333e0:	b	33360 <__cosh_finite@GLIBC_2.17+0xb0>
   333e4:	nop

00000000000333e8 <__exp_finite@GLIBC_2.17>:
   333e8:	fmov	x1, d0
   333ec:	ubfx	x3, x1, #52, #11
   333f0:	sub	w0, w3, #0x3c9
   333f4:	cmp	w0, #0x3e
   333f8:	b.hi	3346c <__exp_finite@GLIBC_2.17+0x84>  // b.pmore
   333fc:	adrp	x1, 89000 <f64xsubf128@@GLIBC_2.28+0x35280>
   33400:	add	x0, x1, #0x9c8
   33404:	ldr	d2, [x1, #2504]
   33408:	ldp	d16, d7, [x0, #16]
   3340c:	fmul	d2, d0, d2
   33410:	ldp	d3, d6, [x0, #32]
   33414:	ldp	d1, d5, [x0, #48]
   33418:	frinta	d4, d2
   3341c:	fcvtas	x1, d2
   33420:	fmadd	d0, d16, d4, d0
   33424:	ubfiz	x2, x1, #1, #7
   33428:	add	x4, x2, #0xe
   3342c:	add	x2, x2, #0xf
   33430:	fmadd	d0, d7, d4, d0
   33434:	ldr	d4, [x0, x4, lsl #3]
   33438:	ldr	x0, [x0, x2, lsl #3]
   3343c:	fmadd	d3, d6, d0, d3
   33440:	fmul	d2, d0, d0
   33444:	fmadd	d1, d5, d0, d1
   33448:	fadd	d0, d0, d4
   3344c:	add	x0, x0, x1, lsl #45
   33450:	fmul	d4, d2, d2
   33454:	fmadd	d0, d3, d2, d0
   33458:	fmadd	d1, d4, d1, d0
   3345c:	cbz	w3, 33498 <__exp_finite@GLIBC_2.17+0xb0>
   33460:	fmov	d0, x0
   33464:	fmadd	d0, d1, d0, d0
   33468:	ret
   3346c:	tbnz	w0, #31, 33520 <__exp_finite@GLIBC_2.17+0x138>
   33470:	cmp	w3, #0x408
   33474:	b.ls	334cc <__exp_finite@GLIBC_2.17+0xe4>  // b.plast
   33478:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
   3347c:	cmp	x1, x0
   33480:	b.eq	33550 <__exp_finite@GLIBC_2.17+0x168>  // b.none
   33484:	cmp	w3, #0x7ff
   33488:	b.eq	33520 <__exp_finite@GLIBC_2.17+0x138>  // b.none
   3348c:	mov	w0, #0x0                   	// #0
   33490:	tbnz	x1, #63, 3354c <__exp_finite@GLIBC_2.17+0x164>
   33494:	b	51b38 <__exp2f_finite@GLIBC_2.17+0x50d0>
   33498:	tbz	w1, #31, 3352c <__exp_finite@GLIBC_2.17+0x144>
   3349c:	mov	x1, #0x3fe0000000000000    	// #4602678819172646912
   334a0:	add	x0, x0, x1
   334a4:	fmov	d0, x0
   334a8:	fmov	d5, #1.000000000000000000e+00
   334ac:	fmul	d1, d1, d0
   334b0:	fadd	d4, d0, d1
   334b4:	fcmpe	d4, d5
   334b8:	b.mi	334d4 <__exp_finite@GLIBC_2.17+0xec>  // b.first
   334bc:	mov	x0, #0x10000000000000      	// #4503599627370496
   334c0:	fmov	d0, x0
   334c4:	fmul	d0, d4, d0
   334c8:	b	51b88 <__exp2f_finite@GLIBC_2.17+0x5120>
   334cc:	mov	w3, #0x0                   	// #0
   334d0:	b	333fc <__exp_finite@GLIBC_2.17+0x14>
   334d4:	fadd	d6, d4, d5
   334d8:	fsub	d2, d0, d4
   334dc:	movi	d0, #0x0
   334e0:	fsub	d3, d5, d6
   334e4:	fadd	d1, d2, d1
   334e8:	fadd	d2, d3, d4
   334ec:	fadd	d1, d2, d1
   334f0:	fadd	d1, d1, d6
   334f4:	fsub	d1, d1, d5
   334f8:	fcmp	d1, d0
   334fc:	b.eq	3350c <__exp_finite@GLIBC_2.17+0x124>  // b.none
   33500:	mov	x0, #0x10000000000000      	// #4503599627370496
   33504:	fmov	d0, x0
   33508:	fmul	d0, d1, d0
   3350c:	mov	x0, #0x10000000000000      	// #4503599627370496
   33510:	fmov	d2, x0
   33514:	fmov	d1, x0
   33518:	fmul	d1, d1, d2
   3351c:	b	51b88 <__exp2f_finite@GLIBC_2.17+0x5120>
   33520:	fmov	d1, #1.000000000000000000e+00
   33524:	fadd	d0, d0, d1
   33528:	ret
   3352c:	mov	x1, #0xc0f0000000000000    	// #-4544132024016830464
   33530:	add	x0, x0, x1
   33534:	fmov	d2, x0
   33538:	mov	x0, #0x7f00000000000000    	// #9151314442816847872
   3353c:	fmadd	d2, d1, d2, d2
   33540:	fmov	d0, x0
   33544:	fmul	d0, d2, d0
   33548:	b	51ba0 <__exp2f_finite@GLIBC_2.17+0x5138>
   3354c:	b	51b18 <__exp2f_finite@GLIBC_2.17+0x50b0>
   33550:	movi	d0, #0x0
   33554:	ret

0000000000033558 <__fmod_finite@GLIBC_2.17>:
   33558:	fmov	x2, d0
   3355c:	fmov	x0, d1
   33560:	mov	x3, #0x7fefffffffffffff    	// #9218868437227405311
   33564:	and	x1, x2, #0x7fffffffffffffff
   33568:	ands	x5, x0, #0x7fffffffffffffff
   3356c:	and	x6, x2, #0x8000000000000000
   33570:	ccmp	x1, x3, #0x2, ne  // ne = any
   33574:	b.hi	33674 <__fmod_finite@GLIBC_2.17+0x11c>  // b.pmore
   33578:	mov	x2, #0x7ff0000000000000    	// #9218868437227405312
   3357c:	cmp	x5, x2
   33580:	b.gt	33674 <__fmod_finite@GLIBC_2.17+0x11c>
   33584:	cmp	x1, x5
   33588:	b.le	3365c <__fmod_finite@GLIBC_2.17+0x104>
   3358c:	asr	x2, x1, #52
   33590:	mov	x3, #0xfffffffffffff       	// #4503599627370495
   33594:	sub	w2, w2, #0x3ff
   33598:	cmp	x1, x3
   3359c:	b.ls	3369c <__fmod_finite@GLIBC_2.17+0x144>  // b.plast
   335a0:	asr	x3, x5, #52
   335a4:	tst	x0, #0x7ff0000000000000
   335a8:	sub	w3, w3, #0x3ff
   335ac:	b.eq	33680 <__fmod_finite@GLIBC_2.17+0x128>  // b.none
   335b0:	mov	w4, #0xfffffc02            	// #-1022
   335b4:	and	x8, x1, #0xfffffffffffff
   335b8:	sub	w0, w4, w2
   335bc:	cmp	w2, w4
   335c0:	orr	x8, x8, #0x10000000000000
   335c4:	sub	w4, w4, w3
   335c8:	and	x7, x5, #0xfffffffffffff
   335cc:	lsl	x0, x1, x0
   335d0:	orr	x1, x7, #0x10000000000000
   335d4:	csel	x0, x0, x8, lt  // lt = tstop
   335d8:	cmn	w3, #0x3fe
   335dc:	lsl	x4, x5, x4
   335e0:	csel	x4, x4, x1, lt  // lt = tstop
   335e4:	subs	w1, w2, w3
   335e8:	b.eq	3360c <__fmod_finite@GLIBC_2.17+0xb4>  // b.none
   335ec:	nop
   335f0:	subs	x2, x0, x4
   335f4:	lsl	x0, x0, #1
   335f8:	b.mi	33604 <__fmod_finite@GLIBC_2.17+0xac>  // b.first
   335fc:	lsl	x0, x2, #1
   33600:	b.eq	33660 <__fmod_finite@GLIBC_2.17+0x108>  // b.none
   33604:	subs	w1, w1, #0x1
   33608:	b.ne	335f0 <__fmod_finite@GLIBC_2.17+0x98>  // b.any
   3360c:	subs	x4, x0, x4
   33610:	csel	x0, x0, x4, mi  // mi = first
   33614:	cbz	x0, 33660 <__fmod_finite@GLIBC_2.17+0x108>
   33618:	mov	x1, #0xfffffffffffff       	// #4503599627370495
   3361c:	cmp	x0, x1
   33620:	b.hi	33638 <__fmod_finite@GLIBC_2.17+0xe0>  // b.pmore
   33624:	nop
   33628:	lsl	x0, x0, #1
   3362c:	sub	w3, w3, #0x1
   33630:	cmp	x0, x1
   33634:	b.le	33628 <__fmod_finite@GLIBC_2.17+0xd0>
   33638:	cmn	w3, #0x3fe
   3363c:	b.lt	336bc <__fmod_finite@GLIBC_2.17+0x164>  // b.tstop
   33640:	add	w3, w3, #0x3ff
   33644:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
   33648:	add	x0, x0, x1
   3364c:	orr	x0, x0, x3, lsl #52
   33650:	orr	x0, x0, x6
   33654:	fmov	d0, x0
   33658:	ret
   3365c:	b.lt	33658 <__fmod_finite@GLIBC_2.17+0x100>  // b.tstop
   33660:	lsr	x2, x6, #63
   33664:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33668:	add	x0, x0, #0x790
   3366c:	ldr	d0, [x0, x2, lsl #3]
   33670:	ret
   33674:	fmul	d0, d0, d1
   33678:	fdiv	d0, d0, d0
   3367c:	ret
   33680:	lsl	x0, x5, #11
   33684:	mov	w3, #0xfffffc02            	// #-1022
   33688:	lsl	x0, x0, #1
   3368c:	sub	w3, w3, #0x1
   33690:	cmp	x0, #0x0
   33694:	b.gt	33688 <__fmod_finite@GLIBC_2.17+0x130>
   33698:	b	335b0 <__fmod_finite@GLIBC_2.17+0x58>
   3369c:	lsl	x3, x1, #11
   336a0:	mov	w2, #0xfffffc02            	// #-1022
   336a4:	nop
   336a8:	lsl	x3, x3, #1
   336ac:	sub	w2, w2, #0x1
   336b0:	cmp	x3, #0x0
   336b4:	b.gt	336a8 <__fmod_finite@GLIBC_2.17+0x150>
   336b8:	b	335a0 <__fmod_finite@GLIBC_2.17+0x48>
   336bc:	mov	w1, #0xfffffc02            	// #-1022
   336c0:	sub	w3, w1, w3
   336c4:	asr	x0, x0, x3
   336c8:	orr	x0, x0, x6
   336cc:	fmov	d0, x0
   336d0:	ret
   336d4:	nop

00000000000336d8 <__hypot_finite@GLIBC_2.17>:
   336d8:	stp	x29, x30, [sp, #-64]!
   336dc:	mov	x29, sp
   336e0:	stp	x19, x20, [sp, #16]
   336e4:	fmov	x19, d0
   336e8:	fmov	x20, d1
   336ec:	stp	d8, d9, [sp, #32]
   336f0:	ubfx	x19, x19, #32, #31
   336f4:	str	d10, [sp, #48]
   336f8:	ubfx	x20, x20, #32, #31
   336fc:	cmp	w19, w20
   33700:	b.ge	3371c <__hypot_finite@GLIBC_2.17+0x44>  // b.tcont
   33704:	fmov	d2, d0
   33708:	mov	w0, w19
   3370c:	fmov	d0, d1
   33710:	mov	w19, w20
   33714:	mov	w20, w0
   33718:	fmov	d1, d2
   3371c:	fmov	x0, d1
   33720:	fmov	x1, d0
   33724:	sub	w2, w19, w20
   33728:	bfi	x0, x20, #32, #32
   3372c:	bfi	x1, x19, #32, #32
   33730:	fmov	d8, x0
   33734:	fmov	d9, x1
   33738:	mov	w0, #0x3c00000             	// #62914560
   3373c:	cmp	w2, w0
   33740:	b.gt	33808 <__hypot_finite@GLIBC_2.17+0x130>
   33744:	mov	w0, #0x5f300000            	// #1596981248
   33748:	mov	w2, #0x0                   	// #0
   3374c:	cmp	w19, w0
   33750:	b.gt	33824 <__hypot_finite@GLIBC_2.17+0x14c>
   33754:	mov	w0, #0x23cfffff            	// #600834047
   33758:	cmp	w20, w0
   3375c:	b.le	33878 <__hypot_finite@GLIBC_2.17+0x1a0>
   33760:	fsub	d10, d9, d8
   33764:	fcmpe	d8, d10
   33768:	b.pl	337d0 <__hypot_finite@GLIBC_2.17+0xf8>  // b.nfrst
   3376c:	fmov	d0, x19
   33770:	shl	d0, d0, #32
   33774:	fadd	d1, d9, d0
   33778:	fsub	d9, d9, d0
   3377c:	fmul	d9, d1, d9
   33780:	fnmadd	d8, d8, d8, d9
   33784:	fnmsub	d8, d0, d0, d8
   33788:	fsqrt	d10, d8
   3378c:	cbz	w2, 337b8 <__hypot_finite@GLIBC_2.17+0xe0>
   33790:	mov	w1, #0x3ff00000            	// #1072693248
   33794:	mov	x0, #0x10000000000000      	// #4503599627370496
   33798:	add	w2, w1, w2, lsl #20
   3379c:	fmov	d0, x2
   337a0:	fmov	d1, x0
   337a4:	shl	d0, d0, #32
   337a8:	fmul	d10, d10, d0
   337ac:	fcmpe	d10, d1
   337b0:	b.pl	337b8 <__hypot_finite@GLIBC_2.17+0xe0>  // b.nfrst
   337b4:	fmul	d0, d10, d10
   337b8:	fmov	d0, d10
   337bc:	ldr	d10, [sp, #48]
   337c0:	ldp	x19, x20, [sp, #16]
   337c4:	ldp	d8, d9, [sp, #32]
   337c8:	ldp	x29, x30, [sp], #64
   337cc:	ret
   337d0:	fmov	d0, x20
   337d4:	add	w19, w19, #0x100, lsl #12
   337d8:	fmov	d3, #2.000000000000000000e+00
   337dc:	shl	d1, d0, #32
   337e0:	fmov	d0, x19
   337e4:	shl	d0, d0, #32
   337e8:	fsub	d2, d8, d1
   337ec:	fnmsub	d9, d9, d3, d0
   337f0:	fmul	d8, d8, d9
   337f4:	fmadd	d8, d2, d0, d8
   337f8:	fnmadd	d10, d10, d10, d8
   337fc:	fnmsub	d8, d1, d0, d10
   33800:	fsqrt	d10, d8
   33804:	b	3378c <__hypot_finite@GLIBC_2.17+0xb4>
   33808:	fadd	d10, d9, d8
   3380c:	ldp	x19, x20, [sp, #16]
   33810:	ldp	d8, d9, [sp, #32]
   33814:	fmov	d0, d10
   33818:	ldr	d10, [sp, #48]
   3381c:	ldp	x29, x30, [sp], #64
   33820:	ret
   33824:	mov	w0, #0x7fefffff            	// #2146435071
   33828:	cmp	w19, w0
   3382c:	b.le	338e0 <__hypot_finite@GLIBC_2.17+0x208>
   33830:	fadd	d10, d9, d8
   33834:	fmov	d0, x1
   33838:	bl	3d868 <__issignaling@@GLIBC_2.18>
   3383c:	cbnz	w0, 337b8 <__hypot_finite@GLIBC_2.17+0xe0>
   33840:	fmov	d0, d8
   33844:	bl	3d868 <__issignaling@@GLIBC_2.18>
   33848:	cbnz	w0, 337b8 <__hypot_finite@GLIBC_2.17+0xe0>
   3384c:	fmov	x1, d9
   33850:	and	w0, w19, #0xfffff
   33854:	eor	w20, w20, #0x7ff00000
   33858:	orr	w0, w0, w1
   3385c:	cmp	w0, #0x0
   33860:	fmov	x0, d8
   33864:	fcsel	d10, d10, d9, ne  // ne = any
   33868:	orr	w0, w20, w0
   3386c:	cmp	w0, #0x0
   33870:	fcsel	d10, d10, d8, ne  // ne = any
   33874:	b	337b8 <__hypot_finite@GLIBC_2.17+0xe0>
   33878:	mov	w0, #0xfffff               	// #1048575
   3387c:	cmp	w20, w0
   33880:	b.gt	33908 <__hypot_finite@GLIBC_2.17+0x230>
   33884:	fmov	x0, d8
   33888:	fmov	d10, d9
   3388c:	orr	w20, w20, w0
   33890:	cbz	w20, 337b8 <__hypot_finite@GLIBC_2.17+0xe0>
   33894:	mov	x0, #0x7fd0000000000000    	// #9209861237972664320
   33898:	fmov	d0, x0
   3389c:	sub	w2, w2, #0x3fe
   338a0:	fmul	d8, d8, d0
   338a4:	fmul	d9, d9, d0
   338a8:	fmov	x1, d8
   338ac:	fmov	x0, d9
   338b0:	lsr	x1, x1, #32
   338b4:	lsr	x0, x0, #32
   338b8:	mov	w19, w0
   338bc:	cmp	w0, w1
   338c0:	mov	w20, w1
   338c4:	b.ge	33760 <__hypot_finite@GLIBC_2.17+0x88>  // b.tcont
   338c8:	fmov	d0, d9
   338cc:	mov	w19, w1
   338d0:	fmov	d9, d8
   338d4:	mov	w20, w0
   338d8:	fmov	d8, d0
   338dc:	b	33760 <__hypot_finite@GLIBC_2.17+0x88>
   338e0:	mov	w0, #0xda800000            	// #-629145600
   338e4:	add	w19, w19, w0
   338e8:	add	w20, w20, w0
   338ec:	fmov	x0, d8
   338f0:	bfi	x1, x19, #32, #32
   338f4:	mov	w2, #0x258                 	// #600
   338f8:	fmov	d9, x1
   338fc:	bfi	x0, x20, #32, #32
   33900:	fmov	d8, x0
   33904:	b	33754 <__hypot_finite@GLIBC_2.17+0x7c>
   33908:	mov	w0, #0x25800000            	// #629145600
   3390c:	fmov	x1, d9
   33910:	add	w19, w19, w0
   33914:	add	w20, w20, w0
   33918:	fmov	x0, d8
   3391c:	sub	w2, w2, #0x258
   33920:	bfi	x1, x19, #32, #32
   33924:	fmov	d9, x1
   33928:	bfi	x0, x20, #32, #32
   3392c:	fmov	d8, x0
   33930:	b	33760 <__hypot_finite@GLIBC_2.17+0x88>
   33934:	nop
   33938:	fmov	x0, d0
   3393c:	mov	w1, #0x41afffff            	// #1102053375
   33940:	ubfx	x0, x0, #32, #31
   33944:	cmp	w0, w1
   33948:	b.gt	33a64 <__hypot_finite@GLIBC_2.17+0x38c>
   3394c:	mov	w1, #0x401fffff            	// #1075838975
   33950:	cmp	w0, w1
   33954:	b.le	339f8 <__hypot_finite@GLIBC_2.17+0x320>
   33958:	mov	x0, #0xfffffffffffffd32    	// #-718
   3395c:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33960:	movk	x0, #0xbfb1, lsl #48
   33964:	fmov	d16, x0
   33968:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3396c:	movi	d2, #0x0
   33970:	ldr	d18, [x1, #2128]
   33974:	ldr	d17, [x0, #2136]
   33978:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3397c:	ldr	d20, [x0, #2144]
   33980:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33984:	ldr	d5, [x0, #2152]
   33988:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3398c:	ldr	d19, [x0, #2160]
   33990:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33994:	ldr	d4, [x0, #2168]
   33998:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3399c:	ldr	d21, [x0, #2176]
   339a0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   339a4:	ldr	d6, [x0, #2184]
   339a8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   339ac:	ldr	d3, [x0, #2192]
   339b0:	fmul	d0, d0, d0
   339b4:	fmov	d7, #1.000000000000000000e+00
   339b8:	fdiv	d1, d7, d0
   339bc:	fmadd	d0, d1, d21, d6
   339c0:	fmadd	d5, d1, d20, d5
   339c4:	fmadd	d2, d1, d16, d2
   339c8:	fmadd	d3, d3, d1, d7
   339cc:	fmadd	d4, d1, d19, d4
   339d0:	fmadd	d6, d1, d18, d17
   339d4:	fmul	d1, d1, d1
   339d8:	fmul	d16, d1, d1
   339dc:	fmadd	d0, d1, d0, d2
   339e0:	fmadd	d1, d1, d5, d3
   339e4:	fmadd	d0, d16, d4, d0
   339e8:	fmadd	d1, d16, d6, d1
   339ec:	fdiv	d0, d0, d1
   339f0:	fadd	d0, d0, d7
   339f4:	ret
   339f8:	mov	w1, #0x2e8a                	// #11914
   339fc:	movk	w1, #0x4012, lsl #16
   33a00:	cmp	w0, w1
   33a04:	b.le	33a6c <__hypot_finite@GLIBC_2.17+0x394>
   33a08:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a0c:	ldr	d18, [x0, #2200]
   33a10:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a14:	ldr	d17, [x0, #2208]
   33a18:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a1c:	ldr	d20, [x0, #2216]
   33a20:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a24:	ldr	d5, [x0, #2224]
   33a28:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a2c:	ldr	d19, [x0, #2232]
   33a30:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a34:	ldr	d4, [x0, #2240]
   33a38:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a3c:	ldr	d21, [x0, #2248]
   33a40:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a44:	ldr	d6, [x0, #2256]
   33a48:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a4c:	ldr	d16, [x0, #2264]
   33a50:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a54:	ldr	d3, [x0, #2272]
   33a58:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a5c:	ldr	d2, [x0, #2280]
   33a60:	b	339b0 <__hypot_finite@GLIBC_2.17+0x2d8>
   33a64:	fmov	d0, #1.000000000000000000e+00
   33a68:	ret
   33a6c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a70:	mov	w1, #0xdb6c                	// #56172
   33a74:	movk	w1, #0x4006, lsl #16
   33a78:	cmp	w0, w1
   33a7c:	ldr	d6, [x2, #1952]
   33a80:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a84:	ldr	d1, [x2, #1960]
   33a88:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a8c:	ldr	d17, [x2, #1968]
   33a90:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33a94:	fcsel	d18, d6, d1, le
   33a98:	ldr	d2, [x2, #1976]
   33a9c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33aa0:	ldr	d20, [x2, #1984]
   33aa4:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33aa8:	fcsel	d17, d17, d2, le
   33aac:	ldr	d1, [x2, #1992]
   33ab0:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33ab4:	ldr	d5, [x2, #2000]
   33ab8:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33abc:	fcsel	d20, d20, d1, le
   33ac0:	ldr	d3, [x2, #2008]
   33ac4:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33ac8:	ldr	d19, [x2, #2016]
   33acc:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33ad0:	fcsel	d5, d5, d3, le
   33ad4:	ldr	d2, [x2, #2024]
   33ad8:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33adc:	ldr	d4, [x2, #2032]
   33ae0:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33ae4:	fcsel	d19, d19, d2, le
   33ae8:	ldr	d25, [x2, #2040]
   33aec:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33af0:	ldr	d21, [x2, #2048]
   33af4:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33af8:	fcsel	d4, d4, d25, le
   33afc:	ldr	d24, [x2, #2056]
   33b00:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b04:	ldr	d6, [x2, #2064]
   33b08:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b0c:	fcsel	d21, d21, d24, le
   33b10:	ldr	d23, [x2, #2072]
   33b14:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b18:	ldr	d16, [x2, #2080]
   33b1c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b20:	fcsel	d6, d6, d23, le
   33b24:	ldr	d22, [x2, #2088]
   33b28:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b2c:	ldr	d3, [x2, #2096]
   33b30:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b34:	fcsel	d16, d16, d22, le
   33b38:	ldr	d1, [x2, #2104]
   33b3c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b40:	ldr	d2, [x2, #2112]
   33b44:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b48:	fcsel	d3, d3, d1, le
   33b4c:	ldr	d7, [x2, #2120]
   33b50:	fcsel	d2, d2, d7, le
   33b54:	b	339b0 <__hypot_finite@GLIBC_2.17+0x2d8>
   33b58:	fmov	x0, d0
   33b5c:	mov	w1, #0x41afffff            	// #1102053375
   33b60:	ubfx	x0, x0, #32, #31
   33b64:	cmp	w0, w1
   33b68:	b.gt	33ca0 <__hypot_finite@GLIBC_2.17+0x5c8>
   33b6c:	mov	w1, #0x401fffff            	// #1075838975
   33b70:	cmp	w0, w1
   33b74:	b.le	33c2c <__hypot_finite@GLIBC_2.17+0x554>
   33b78:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b7c:	movi	d2, #0x0
   33b80:	ldr	d18, [x0, #2480]
   33b84:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b88:	ldr	d5, [x0, #2488]
   33b8c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b90:	ldr	d17, [x0, #2496]
   33b94:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33b98:	ldr	d22, [x0, #2504]
   33b9c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33ba0:	ldr	d7, [x0, #2512]
   33ba4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33ba8:	ldr	d1, [x0, #2520]
   33bac:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33bb0:	ldr	d16, [x0, #2528]
   33bb4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33bb8:	ldr	d20, [x0, #2536]
   33bbc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33bc0:	ldr	d6, [x0, #2544]
   33bc4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33bc8:	ldr	d19, [x0, #2552]
   33bcc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33bd0:	ldr	d21, [x0, #2560]
   33bd4:	fmul	d4, d0, d0
   33bd8:	fmov	d3, #1.000000000000000000e+00
   33bdc:	fmov	d23, #1.250000000000000000e-01
   33be0:	fdiv	d4, d3, d4
   33be4:	fmadd	d7, d4, d22, d7
   33be8:	fmadd	d17, d4, d5, d17
   33bec:	fmadd	d3, d21, d4, d3
   33bf0:	fmul	d5, d4, d4
   33bf4:	fmadd	d6, d4, d20, d6
   33bf8:	fmadd	d2, d4, d19, d2
   33bfc:	fmadd	d4, d4, d1, d16
   33c00:	fmul	d16, d5, d5
   33c04:	fmadd	d3, d5, d7, d3
   33c08:	fmadd	d1, d5, d6, d2
   33c0c:	fmul	d5, d5, d16
   33c10:	fmadd	d3, d16, d17, d3
   33c14:	fmadd	d1, d16, d4, d1
   33c18:	fmadd	d3, d5, d18, d3
   33c1c:	fdiv	d1, d1, d3
   33c20:	fsub	d1, d1, d23
   33c24:	fdiv	d0, d1, d0
   33c28:	ret
   33c2c:	mov	w1, #0x2e8a                	// #11914
   33c30:	movk	w1, #0x4012, lsl #16
   33c34:	cmp	w0, w1
   33c38:	b.le	33cac <__hypot_finite@GLIBC_2.17+0x5d4>
   33c3c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c40:	ldr	d18, [x0, #2568]
   33c44:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c48:	ldr	d5, [x0, #2576]
   33c4c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c50:	ldr	d17, [x0, #2584]
   33c54:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c58:	ldr	d22, [x0, #2592]
   33c5c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c60:	ldr	d7, [x0, #2600]
   33c64:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c68:	ldr	d1, [x0, #2608]
   33c6c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c70:	ldr	d16, [x0, #2616]
   33c74:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c78:	ldr	d20, [x0, #2624]
   33c7c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c80:	ldr	d6, [x0, #2632]
   33c84:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c88:	ldr	d19, [x0, #2640]
   33c8c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c90:	ldr	d21, [x0, #2648]
   33c94:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33c98:	ldr	d2, [x0, #2656]
   33c9c:	b	33bd4 <__hypot_finite@GLIBC_2.17+0x4fc>
   33ca0:	fmov	d1, #-1.250000000000000000e-01
   33ca4:	fdiv	d0, d1, d0
   33ca8:	ret
   33cac:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33cb0:	mov	w1, #0xdb6c                	// #56172
   33cb4:	movk	w1, #0x4006, lsl #16
   33cb8:	cmp	w0, w1
   33cbc:	ldr	d3, [x2, #2288]
   33cc0:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33cc4:	ldr	d1, [x2, #2296]
   33cc8:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33ccc:	ldr	d5, [x2, #2304]
   33cd0:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33cd4:	fcsel	d18, d3, d1, le
   33cd8:	ldr	d2, [x2, #2312]
   33cdc:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33ce0:	ldr	d17, [x2, #2320]
   33ce4:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33ce8:	fcsel	d5, d5, d2, le
   33cec:	ldr	d16, [x2, #2328]
   33cf0:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33cf4:	ldr	d22, [x2, #2336]
   33cf8:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33cfc:	fcsel	d17, d17, d16, le
   33d00:	ldr	d6, [x2, #2344]
   33d04:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d08:	ldr	d7, [x2, #2352]
   33d0c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d10:	fcsel	d22, d22, d6, le
   33d14:	ldr	d2, [x2, #2360]
   33d18:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d1c:	ldr	d4, [x2, #2368]
   33d20:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d24:	fcsel	d7, d7, d2, le
   33d28:	ldr	d1, [x2, #2376]
   33d2c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d30:	ldr	d27, [x2, #2384]
   33d34:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d38:	fcsel	d1, d4, d1, le
   33d3c:	ldr	d16, [x2, #2392]
   33d40:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d44:	ldr	d20, [x2, #2400]
   33d48:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d4c:	fcsel	d16, d27, d16, le
   33d50:	ldr	d26, [x2, #2408]
   33d54:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d58:	ldr	d6, [x2, #2416]
   33d5c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d60:	fcsel	d20, d20, d26, le
   33d64:	ldr	d25, [x2, #2424]
   33d68:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d6c:	ldr	d19, [x2, #2432]
   33d70:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d74:	fcsel	d6, d6, d25, le
   33d78:	ldr	d24, [x2, #2440]
   33d7c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d80:	ldr	d21, [x2, #2448]
   33d84:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d88:	fcsel	d19, d19, d24, le
   33d8c:	ldr	d3, [x2, #2456]
   33d90:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d94:	ldr	d2, [x2, #2464]
   33d98:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33d9c:	fcsel	d21, d21, d3, le
   33da0:	ldr	d23, [x2, #2472]
   33da4:	fcsel	d2, d2, d23, le
   33da8:	b	33bd4 <__hypot_finite@GLIBC_2.17+0x4fc>
   33dac:	nop

0000000000033db0 <__j0_finite@GLIBC_2.17>:
   33db0:	stp	x29, x30, [sp, #-96]!
   33db4:	mov	w1, #0x7fefffff            	// #2146435071
   33db8:	mov	x29, sp
   33dbc:	stp	x19, x20, [sp, #16]
   33dc0:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   33dc4:	ldr	x0, [x19, #4032]
   33dc8:	ldr	x2, [x0]
   33dcc:	str	x2, [sp, #88]
   33dd0:	mov	x2, #0x0                   	// #0
   33dd4:	fmov	x0, d0
   33dd8:	ubfx	x20, x0, #32, #31
   33ddc:	cmp	w20, w1
   33de0:	b.gt	33ec4 <__j0_finite@GLIBC_2.17+0x114>
   33de4:	stp	d8, d9, [sp, #32]
   33de8:	lsr	x0, x0, #32
   33dec:	fabs	d8, d0
   33df0:	tbnz	w0, #30, 33f24 <__j0_finite@GLIBC_2.17+0x174>
   33df4:	mov	w0, #0x3f1fffff            	// #1059061759
   33df8:	cmp	w20, w0
   33dfc:	b.gt	33e24 <__j0_finite@GLIBC_2.17+0x74>
   33e00:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33e04:	ldr	d0, [x0, #1928]
   33e08:	fadd	d0, d8, d0
   33e0c:	mov	w0, #0x3e3fffff            	// #1044381695
   33e10:	fmov	d0, #1.000000000000000000e+00
   33e14:	cmp	w20, w0
   33e18:	b.gt	33ef0 <__j0_finite@GLIBC_2.17+0x140>
   33e1c:	ldp	d8, d9, [sp, #32]
   33e20:	b	33ed0 <__j0_finite@GLIBC_2.17+0x120>
   33e24:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33e28:	fmul	d0, d0, d0
   33e2c:	fmov	d4, #1.000000000000000000e+00
   33e30:	str	d10, [sp, #48]
   33e34:	ldr	d5, [x0, #2672]
   33e38:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33e3c:	ldr	d1, [x0, #2680]
   33e40:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33e44:	fmadd	d1, d0, d5, d1
   33e48:	ldr	d3, [x0, #2688]
   33e4c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33e50:	ldr	d6, [x0, #2696]
   33e54:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33e58:	fmadd	d6, d0, d3, d6
   33e5c:	fmul	d3, d0, d0
   33e60:	ldr	d2, [x0, #2704]
   33e64:	mov	x0, #0xfffffffffffffffd    	// #-3
   33e68:	movk	x0, #0x3f8f, lsl #48
   33e6c:	fmov	d5, x0
   33e70:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33e74:	fmadd	d2, d0, d2, d4
   33e78:	fmul	d1, d3, d1
   33e7c:	ldr	d9, [x0, #2712]
   33e80:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33e84:	fmul	d7, d3, d3
   33e88:	fmadd	d1, d0, d5, d1
   33e8c:	ldr	d10, [x0, #2720]
   33e90:	mov	w0, #0x3fefffff            	// #1072693247
   33e94:	fmadd	d2, d3, d6, d2
   33e98:	cmp	w20, w0
   33e9c:	fmadd	d1, d7, d9, d1
   33ea0:	fmadd	d2, d7, d10, d2
   33ea4:	fdiv	d1, d1, d2
   33ea8:	b.gt	33f04 <__j0_finite@GLIBC_2.17+0x154>
   33eac:	fmov	d2, #2.500000000000000000e-01
   33eb0:	ldr	d10, [sp, #48]
   33eb4:	ldp	d8, d9, [sp, #32]
   33eb8:	fsub	d1, d1, d2
   33ebc:	fmadd	d0, d1, d0, d4
   33ec0:	b	33ed0 <__j0_finite@GLIBC_2.17+0x120>
   33ec4:	fmul	d0, d0, d0
   33ec8:	fmov	d1, #1.000000000000000000e+00
   33ecc:	fdiv	d0, d1, d0
   33ed0:	ldr	x19, [x19, #4032]
   33ed4:	ldr	x1, [sp, #88]
   33ed8:	ldr	x0, [x19]
   33edc:	eor	x0, x1, x0
   33ee0:	cbnz	x0, 33fe4 <__j0_finite@GLIBC_2.17+0x234>
   33ee4:	ldp	x19, x20, [sp, #16]
   33ee8:	ldp	x29, x30, [sp], #96
   33eec:	ret
   33ef0:	fmov	d1, #2.500000000000000000e-01
   33ef4:	fmul	d1, d8, d1
   33ef8:	fmsub	d0, d1, d8, d0
   33efc:	ldp	d8, d9, [sp, #32]
   33f00:	b	33ed0 <__j0_finite@GLIBC_2.17+0x120>
   33f04:	fmov	d2, #5.000000000000000000e-01
   33f08:	fmul	d0, d0, d1
   33f0c:	ldr	d10, [sp, #48]
   33f10:	fmadd	d1, d8, d2, d4
   33f14:	fmsub	d8, d8, d2, d4
   33f18:	fmadd	d0, d1, d8, d0
   33f1c:	ldp	d8, d9, [sp, #32]
   33f20:	b	33ed0 <__j0_finite@GLIBC_2.17+0x120>
   33f24:	fmov	d0, d8
   33f28:	add	x0, sp, #0x48
   33f2c:	add	x1, sp, #0x50
   33f30:	str	d10, [sp, #48]
   33f34:	bl	3d0c0 <sincos@@GLIBC_2.17>
   33f38:	ldp	d0, d9, [sp, #72]
   33f3c:	mov	w0, #0x7fdfffff            	// #2145386495
   33f40:	cmp	w20, w0
   33f44:	fsub	d10, d0, d9
   33f48:	fadd	d9, d0, d9
   33f4c:	b.le	33fb8 <__j0_finite@GLIBC_2.17+0x208>
   33f50:	fsqrt	d28, d8
   33f54:	mov	w0, #0x48000000            	// #1207959552
   33f58:	cmp	w20, w0
   33f5c:	b.le	33f7c <__j0_finite@GLIBC_2.17+0x1cc>
   33f60:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33f64:	ldr	d10, [sp, #48]
   33f68:	ldr	d0, [x0, #2664]
   33f6c:	fmul	d0, d9, d0
   33f70:	ldp	d8, d9, [sp, #32]
   33f74:	fdiv	d0, d0, d28
   33f78:	b	33ed0 <__j0_finite@GLIBC_2.17+0x120>
   33f7c:	fmov	d0, d8
   33f80:	bl	33938 <__hypot_finite@GLIBC_2.17+0x260>
   33f84:	fmov	d1, d0
   33f88:	fmov	d0, d8
   33f8c:	fmov	d8, d1
   33f90:	bl	33b58 <__hypot_finite@GLIBC_2.17+0x480>
   33f94:	fmul	d10, d10, d0
   33f98:	fnmsub	d0, d9, d8, d10
   33f9c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   33fa0:	ldp	d8, d9, [sp, #32]
   33fa4:	ldr	d1, [x0, #2664]
   33fa8:	ldr	d10, [sp, #48]
   33fac:	fmul	d0, d0, d1
   33fb0:	fdiv	d0, d0, d28
   33fb4:	b	33ed0 <__j0_finite@GLIBC_2.17+0x120>
   33fb8:	fadd	d0, d8, d8
   33fbc:	bl	39ae8 <cos@@GLIBC_2.17>
   33fc0:	fneg	d0, d0
   33fc4:	ldp	d1, d2, [sp, #72]
   33fc8:	fmul	d1, d1, d2
   33fcc:	fcmpe	d1, #0.0
   33fd0:	b.mi	33fdc <__j0_finite@GLIBC_2.17+0x22c>  // b.first
   33fd4:	fdiv	d10, d0, d9
   33fd8:	b	33f50 <__j0_finite@GLIBC_2.17+0x1a0>
   33fdc:	fdiv	d9, d0, d10
   33fe0:	b	33f50 <__j0_finite@GLIBC_2.17+0x1a0>
   33fe4:	stp	d8, d9, [sp, #32]
   33fe8:	str	d10, [sp, #48]
   33fec:	bl	ba70 <__stack_chk_fail@plt>

0000000000033ff0 <__y0_finite@GLIBC_2.17>:
   33ff0:	stp	x29, x30, [sp, #-96]!
   33ff4:	mov	w1, #0x7fefffff            	// #2146435071
   33ff8:	mov	x29, sp
   33ffc:	stp	x19, x20, [sp, #16]
   34000:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   34004:	ldr	x0, [x19, #4032]
   34008:	stp	d8, d9, [sp, #32]
   3400c:	fmov	d8, d0
   34010:	ldr	x2, [x0]
   34014:	str	x2, [sp, #88]
   34018:	mov	x2, #0x0                   	// #0
   3401c:	fmov	x0, d0
   34020:	ubfx	x20, x0, #32, #31
   34024:	cmp	w20, w1
   34028:	b.gt	34144 <__y0_finite@GLIBC_2.17+0x154>
   3402c:	lsr	x2, x0, #32
   34030:	orr	w0, w20, w0
   34034:	cbz	w0, 34114 <__y0_finite@GLIBC_2.17+0x124>
   34038:	tbnz	w2, #31, 34170 <__y0_finite@GLIBC_2.17+0x180>
   3403c:	tbnz	w2, #30, 34180 <__y0_finite@GLIBC_2.17+0x190>
   34040:	mov	w0, #0x3e400000            	// #1044381696
   34044:	cmp	w20, w0
   34048:	b.le	34154 <__y0_finite@GLIBC_2.17+0x164>
   3404c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34050:	fmul	d2, d0, d0
   34054:	stp	d10, d11, [sp, #48]
   34058:	ldr	d1, [x0, #2744]
   3405c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34060:	ldr	d7, [x0, #2752]
   34064:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34068:	fmadd	d7, d2, d1, d7
   3406c:	ldr	d3, [x0, #2760]
   34070:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34074:	ldr	d4, [x0, #2768]
   34078:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3407c:	ldr	d6, [x0, #2776]
   34080:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34084:	ldr	d9, [x0, #2736]
   34088:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3408c:	fmadd	d9, d2, d3, d9
   34090:	fmul	d3, d2, d2
   34094:	ldr	d5, [x0, #2784]
   34098:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3409c:	fmadd	d5, d2, d4, d5
   340a0:	ldr	d1, [x0, #2792]
   340a4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   340a8:	fmadd	d6, d2, d6, d1
   340ac:	fmov	d1, #1.000000000000000000e+00
   340b0:	ldr	d16, [x0, #2800]
   340b4:	fmul	d4, d3, d3
   340b8:	fmadd	d9, d3, d7, d9
   340bc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   340c0:	fmadd	d1, d2, d16, d1
   340c4:	ldr	d10, [x0, #2808]
   340c8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   340cc:	fmul	d2, d3, d4
   340d0:	fmadd	d9, d4, d5, d9
   340d4:	ldr	d16, [x0, #2816]
   340d8:	fmadd	d1, d3, d6, d1
   340dc:	fmadd	d9, d2, d10, d9
   340e0:	fmadd	d1, d4, d16, d1
   340e4:	fdiv	d9, d9, d1
   340e8:	bl	33db0 <__j0_finite@GLIBC_2.17>
   340ec:	fmov	d1, d0
   340f0:	fmov	d0, d8
   340f4:	fmov	d8, d1
   340f8:	bl	35a50 <__log_finite@GLIBC_2.17>
   340fc:	fmul	d0, d8, d0
   34100:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34104:	ldp	d10, d11, [sp, #48]
   34108:	ldr	d1, [x0, #2728]
   3410c:	fmadd	d0, d0, d1, d9
   34110:	b	34120 <__y0_finite@GLIBC_2.17+0x130>
   34114:	movi	d8, #0x0
   34118:	fmov	d0, #-1.000000000000000000e+00
   3411c:	fdiv	d0, d0, d8
   34120:	ldr	x19, [x19, #4032]
   34124:	ldr	x1, [sp, #88]
   34128:	ldr	x0, [x19]
   3412c:	eor	x0, x1, x0
   34130:	cbnz	x0, 34234 <__y0_finite@GLIBC_2.17+0x244>
   34134:	ldp	x19, x20, [sp, #16]
   34138:	ldp	d8, d9, [sp, #32]
   3413c:	ldp	x29, x30, [sp], #96
   34140:	ret
   34144:	fmadd	d8, d0, d0, d0
   34148:	fmov	d0, #1.000000000000000000e+00
   3414c:	fdiv	d0, d0, d8
   34150:	b	34120 <__y0_finite@GLIBC_2.17+0x130>
   34154:	bl	35a50 <__log_finite@GLIBC_2.17>
   34158:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3415c:	ldr	d1, [x0, #2728]
   34160:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34164:	ldr	d8, [x0, #2736]
   34168:	fmadd	d0, d0, d1, d8
   3416c:	b	34120 <__y0_finite@GLIBC_2.17+0x130>
   34170:	movi	d0, #0x0
   34174:	fmul	d8, d8, d0
   34178:	fdiv	d0, d0, d8
   3417c:	b	34120 <__y0_finite@GLIBC_2.17+0x130>
   34180:	add	x0, sp, #0x48
   34184:	add	x1, sp, #0x50
   34188:	stp	d10, d11, [sp, #48]
   3418c:	bl	3d0c0 <sincos@@GLIBC_2.17>
   34190:	mov	w0, #0x7fdfffff            	// #2145386495
   34194:	ldp	d0, d10, [sp, #72]
   34198:	cmp	w20, w0
   3419c:	fsub	d11, d0, d10
   341a0:	fadd	d10, d0, d10
   341a4:	b.le	34208 <__y0_finite@GLIBC_2.17+0x218>
   341a8:	fsqrt	d9, d8
   341ac:	mov	w0, #0x48000000            	// #1207959552
   341b0:	cmp	w20, w0
   341b4:	b.le	341d0 <__y0_finite@GLIBC_2.17+0x1e0>
   341b8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   341bc:	ldr	d0, [x0, #2664]
   341c0:	fmul	d0, d11, d0
   341c4:	ldp	d10, d11, [sp, #48]
   341c8:	fdiv	d0, d0, d9
   341cc:	b	34120 <__y0_finite@GLIBC_2.17+0x130>
   341d0:	fmov	d0, d8
   341d4:	bl	33938 <__hypot_finite@GLIBC_2.17+0x260>
   341d8:	fmov	d1, d0
   341dc:	fmov	d0, d8
   341e0:	fmov	d8, d1
   341e4:	bl	33b58 <__hypot_finite@GLIBC_2.17+0x480>
   341e8:	fmul	d0, d10, d0
   341ec:	fmadd	d0, d11, d8, d0
   341f0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   341f4:	ldp	d10, d11, [sp, #48]
   341f8:	ldr	d1, [x0, #2664]
   341fc:	fmul	d0, d0, d1
   34200:	fdiv	d0, d0, d9
   34204:	b	34120 <__y0_finite@GLIBC_2.17+0x130>
   34208:	fadd	d0, d8, d8
   3420c:	bl	39ae8 <cos@@GLIBC_2.17>
   34210:	fneg	d0, d0
   34214:	ldp	d1, d2, [sp, #72]
   34218:	fmul	d1, d1, d2
   3421c:	fcmpe	d1, #0.0
   34220:	b.mi	3422c <__y0_finite@GLIBC_2.17+0x23c>  // b.first
   34224:	fdiv	d11, d0, d10
   34228:	b	341a8 <__y0_finite@GLIBC_2.17+0x1b8>
   3422c:	fdiv	d10, d0, d11
   34230:	b	341a8 <__y0_finite@GLIBC_2.17+0x1b8>
   34234:	stp	d10, d11, [sp, #48]
   34238:	bl	ba70 <__stack_chk_fail@plt>
   3423c:	nop
   34240:	fmov	x0, d0
   34244:	mov	w1, #0x41afffff            	// #1102053375
   34248:	ubfx	x0, x0, #32, #31
   3424c:	cmp	w0, w1
   34250:	b.gt	3436c <__y0_finite@GLIBC_2.17+0x37c>
   34254:	mov	w1, #0x401fffff            	// #1075838975
   34258:	cmp	w0, w1
   3425c:	b.le	34300 <__y0_finite@GLIBC_2.17+0x310>
   34260:	mov	x0, #0xfffffffffffffcce    	// #-818
   34264:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34268:	movk	x0, #0x3fbd, lsl #48
   3426c:	fmov	d16, x0
   34270:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34274:	movi	d2, #0x0
   34278:	ldr	d18, [x1, #3000]
   3427c:	ldr	d17, [x0, #3008]
   34280:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34284:	ldr	d20, [x0, #3016]
   34288:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3428c:	ldr	d5, [x0, #3024]
   34290:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34294:	ldr	d19, [x0, #3032]
   34298:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3429c:	ldr	d4, [x0, #3040]
   342a0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   342a4:	ldr	d21, [x0, #3048]
   342a8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   342ac:	ldr	d6, [x0, #3056]
   342b0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   342b4:	ldr	d3, [x0, #3064]
   342b8:	fmul	d0, d0, d0
   342bc:	fmov	d7, #1.000000000000000000e+00
   342c0:	fdiv	d1, d7, d0
   342c4:	fmadd	d0, d1, d21, d6
   342c8:	fmadd	d5, d1, d20, d5
   342cc:	fmadd	d2, d1, d16, d2
   342d0:	fmadd	d3, d3, d1, d7
   342d4:	fmadd	d4, d1, d19, d4
   342d8:	fmadd	d6, d1, d18, d17
   342dc:	fmul	d1, d1, d1
   342e0:	fmul	d16, d1, d1
   342e4:	fmadd	d0, d1, d0, d2
   342e8:	fmadd	d1, d1, d5, d3
   342ec:	fmadd	d0, d16, d4, d0
   342f0:	fmadd	d1, d16, d6, d1
   342f4:	fdiv	d0, d0, d1
   342f8:	fadd	d0, d0, d7
   342fc:	ret
   34300:	mov	w1, #0x2e8a                	// #11914
   34304:	movk	w1, #0x4012, lsl #16
   34308:	cmp	w0, w1
   3430c:	b.le	34374 <__y0_finite@GLIBC_2.17+0x384>
   34310:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34314:	ldr	d18, [x0, #3072]
   34318:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3431c:	ldr	d17, [x0, #3080]
   34320:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34324:	ldr	d20, [x0, #3088]
   34328:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3432c:	ldr	d5, [x0, #3096]
   34330:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34334:	ldr	d19, [x0, #3104]
   34338:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3433c:	ldr	d4, [x0, #3112]
   34340:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34344:	ldr	d21, [x0, #3120]
   34348:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3434c:	ldr	d6, [x0, #3128]
   34350:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34354:	ldr	d16, [x0, #3136]
   34358:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3435c:	ldr	d3, [x0, #3144]
   34360:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34364:	ldr	d2, [x0, #3152]
   34368:	b	342b8 <__y0_finite@GLIBC_2.17+0x2c8>
   3436c:	fmov	d0, #1.000000000000000000e+00
   34370:	ret
   34374:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34378:	mov	w1, #0xdb6c                	// #56172
   3437c:	movk	w1, #0x4006, lsl #16
   34380:	cmp	w0, w1
   34384:	ldr	d6, [x2, #2824]
   34388:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3438c:	ldr	d1, [x2, #2832]
   34390:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34394:	ldr	d17, [x2, #2840]
   34398:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3439c:	fcsel	d18, d6, d1, le
   343a0:	ldr	d2, [x2, #2848]
   343a4:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   343a8:	ldr	d20, [x2, #2856]
   343ac:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   343b0:	fcsel	d17, d17, d2, le
   343b4:	ldr	d1, [x2, #2864]
   343b8:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   343bc:	ldr	d5, [x2, #2872]
   343c0:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   343c4:	fcsel	d20, d20, d1, le
   343c8:	ldr	d3, [x2, #2880]
   343cc:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   343d0:	ldr	d19, [x2, #2888]
   343d4:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   343d8:	fcsel	d5, d5, d3, le
   343dc:	ldr	d2, [x2, #2896]
   343e0:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   343e4:	ldr	d4, [x2, #2904]
   343e8:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   343ec:	fcsel	d19, d19, d2, le
   343f0:	ldr	d25, [x2, #2912]
   343f4:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   343f8:	ldr	d21, [x2, #2920]
   343fc:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34400:	fcsel	d4, d4, d25, le
   34404:	ldr	d24, [x2, #2928]
   34408:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3440c:	ldr	d6, [x2, #2936]
   34410:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34414:	fcsel	d21, d21, d24, le
   34418:	ldr	d23, [x2, #2944]
   3441c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34420:	ldr	d16, [x2, #2952]
   34424:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34428:	fcsel	d6, d6, d23, le
   3442c:	ldr	d22, [x2, #2960]
   34430:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34434:	ldr	d3, [x2, #2968]
   34438:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3443c:	fcsel	d16, d16, d22, le
   34440:	ldr	d1, [x2, #2976]
   34444:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34448:	ldr	d2, [x2, #2984]
   3444c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34450:	fcsel	d3, d3, d1, le
   34454:	ldr	d7, [x2, #2992]
   34458:	fcsel	d2, d2, d7, le
   3445c:	b	342b8 <__y0_finite@GLIBC_2.17+0x2c8>
   34460:	fmov	x0, d0
   34464:	mov	w1, #0x41afffff            	// #1102053375
   34468:	ubfx	x0, x0, #32, #31
   3446c:	cmp	w0, w1
   34470:	b.gt	345a8 <__y0_finite@GLIBC_2.17+0x5b8>
   34474:	mov	w1, #0x401fffff            	// #1075838975
   34478:	cmp	w0, w1
   3447c:	b.le	34534 <__y0_finite@GLIBC_2.17+0x544>
   34480:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34484:	movi	d2, #0x0
   34488:	ldr	d18, [x0, #3352]
   3448c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34490:	ldr	d5, [x0, #3360]
   34494:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34498:	ldr	d17, [x0, #3368]
   3449c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   344a0:	ldr	d22, [x0, #3376]
   344a4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   344a8:	ldr	d7, [x0, #3384]
   344ac:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   344b0:	ldr	d1, [x0, #3392]
   344b4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   344b8:	ldr	d16, [x0, #3400]
   344bc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   344c0:	ldr	d20, [x0, #3408]
   344c4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   344c8:	ldr	d6, [x0, #3416]
   344cc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   344d0:	ldr	d19, [x0, #3424]
   344d4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   344d8:	ldr	d21, [x0, #3432]
   344dc:	fmul	d4, d0, d0
   344e0:	fmov	d3, #1.000000000000000000e+00
   344e4:	fmov	d23, #3.750000000000000000e-01
   344e8:	fdiv	d4, d3, d4
   344ec:	fmadd	d7, d4, d22, d7
   344f0:	fmadd	d17, d4, d5, d17
   344f4:	fmadd	d3, d21, d4, d3
   344f8:	fmul	d5, d4, d4
   344fc:	fmadd	d6, d4, d20, d6
   34500:	fmadd	d2, d4, d19, d2
   34504:	fmadd	d4, d4, d1, d16
   34508:	fmul	d16, d5, d5
   3450c:	fmadd	d3, d5, d7, d3
   34510:	fmadd	d1, d5, d6, d2
   34514:	fmul	d5, d5, d16
   34518:	fmadd	d3, d16, d17, d3
   3451c:	fmadd	d1, d16, d4, d1
   34520:	fmadd	d3, d5, d18, d3
   34524:	fdiv	d1, d1, d3
   34528:	fadd	d1, d1, d23
   3452c:	fdiv	d0, d1, d0
   34530:	ret
   34534:	mov	w1, #0x2e8a                	// #11914
   34538:	movk	w1, #0x4012, lsl #16
   3453c:	cmp	w0, w1
   34540:	b.le	345b4 <__y0_finite@GLIBC_2.17+0x5c4>
   34544:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34548:	ldr	d18, [x0, #3440]
   3454c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34550:	ldr	d5, [x0, #3448]
   34554:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34558:	ldr	d17, [x0, #3456]
   3455c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34560:	ldr	d22, [x0, #3464]
   34564:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34568:	ldr	d7, [x0, #3472]
   3456c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34570:	ldr	d1, [x0, #3480]
   34574:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34578:	ldr	d16, [x0, #3488]
   3457c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34580:	ldr	d20, [x0, #3496]
   34584:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34588:	ldr	d6, [x0, #3504]
   3458c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34590:	ldr	d19, [x0, #3512]
   34594:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34598:	ldr	d21, [x0, #3520]
   3459c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   345a0:	ldr	d2, [x0, #3528]
   345a4:	b	344dc <__y0_finite@GLIBC_2.17+0x4ec>
   345a8:	fmov	d1, #3.750000000000000000e-01
   345ac:	fdiv	d0, d1, d0
   345b0:	ret
   345b4:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   345b8:	mov	w1, #0xdb6c                	// #56172
   345bc:	movk	w1, #0x4006, lsl #16
   345c0:	cmp	w0, w1
   345c4:	ldr	d3, [x2, #3160]
   345c8:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   345cc:	ldr	d1, [x2, #3168]
   345d0:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   345d4:	ldr	d5, [x2, #3176]
   345d8:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   345dc:	fcsel	d18, d3, d1, le
   345e0:	ldr	d2, [x2, #3184]
   345e4:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   345e8:	ldr	d17, [x2, #3192]
   345ec:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   345f0:	fcsel	d5, d5, d2, le
   345f4:	ldr	d16, [x2, #3200]
   345f8:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   345fc:	ldr	d22, [x2, #3208]
   34600:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34604:	fcsel	d17, d17, d16, le
   34608:	ldr	d6, [x2, #3216]
   3460c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34610:	ldr	d7, [x2, #3224]
   34614:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34618:	fcsel	d22, d22, d6, le
   3461c:	ldr	d2, [x2, #3232]
   34620:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34624:	ldr	d4, [x2, #3240]
   34628:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3462c:	fcsel	d7, d7, d2, le
   34630:	ldr	d1, [x2, #3248]
   34634:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34638:	ldr	d27, [x2, #3256]
   3463c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34640:	fcsel	d1, d4, d1, le
   34644:	ldr	d16, [x2, #3264]
   34648:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3464c:	ldr	d20, [x2, #3272]
   34650:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34654:	fcsel	d16, d27, d16, le
   34658:	ldr	d26, [x2, #3280]
   3465c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34660:	ldr	d6, [x2, #3288]
   34664:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34668:	fcsel	d20, d20, d26, le
   3466c:	ldr	d25, [x2, #3296]
   34670:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34674:	ldr	d19, [x2, #3304]
   34678:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3467c:	fcsel	d6, d6, d25, le
   34680:	ldr	d24, [x2, #3312]
   34684:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34688:	ldr	d21, [x2, #3320]
   3468c:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34690:	fcsel	d19, d19, d24, le
   34694:	ldr	d3, [x2, #3328]
   34698:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3469c:	ldr	d2, [x2, #3336]
   346a0:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   346a4:	fcsel	d21, d21, d3, le
   346a8:	ldr	d23, [x2, #3344]
   346ac:	fcsel	d2, d2, d23, le
   346b0:	b	344dc <__y0_finite@GLIBC_2.17+0x4ec>
   346b4:	nop

00000000000346b8 <__j1_finite@GLIBC_2.17>:
   346b8:	stp	x29, x30, [sp, #-96]!
   346bc:	mov	w1, #0x7fefffff            	// #2146435071
   346c0:	fmov	d1, d0
   346c4:	mov	x29, sp
   346c8:	stp	x19, x20, [sp, #16]
   346cc:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   346d0:	ldr	x0, [x20, #4032]
   346d4:	ldr	x2, [x0]
   346d8:	str	x2, [sp, #88]
   346dc:	mov	x2, #0x0                   	// #0
   346e0:	fmov	x0, d0
   346e4:	str	x21, [sp, #32]
   346e8:	ubfx	x21, x0, #32, #31
   346ec:	cmp	w21, w1
   346f0:	b.gt	34888 <__j1_finite@GLIBC_2.17+0x1d0>
   346f4:	lsr	x19, x0, #32
   346f8:	tbnz	w19, #30, 347c4 <__j1_finite@GLIBC_2.17+0x10c>
   346fc:	fmov	d0, #5.000000000000000000e-01
   34700:	mov	w0, #0x3e3fffff            	// #1044381695
   34704:	cmp	w21, w0
   34708:	fmul	d0, d1, d0
   3470c:	b.le	34894 <__j1_finite@GLIBC_2.17+0x1dc>
   34710:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34714:	fmul	d4, d1, d1
   34718:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3471c:	stp	d8, d9, [sp, #48]
   34720:	ldr	d5, [x0, #3536]
   34724:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34728:	ldr	d8, [x1, #3576]
   3472c:	ldr	d2, [x0, #3544]
   34730:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34734:	fmadd	d2, d4, d5, d2
   34738:	fmul	d5, d4, d4
   3473c:	ldr	d3, [x0, #3552]
   34740:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34744:	ldr	d7, [x0, #3560]
   34748:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3474c:	fmadd	d7, d4, d3, d7
   34750:	fmov	d3, #1.000000000000000000e+00
   34754:	ldr	d9, [x0, #3568]
   34758:	mov	x0, #0xbfb0000000000000    	// #-4634204016564240384
   3475c:	fmov	d16, x0
   34760:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34764:	fmul	d2, d5, d2
   34768:	ldr	d6, [x0, #3584]
   3476c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34770:	fmadd	d3, d4, d9, d3
   34774:	fmadd	d6, d4, d8, d6
   34778:	fmadd	d2, d4, d16, d2
   3477c:	fmul	d8, d5, d5
   34780:	ldr	d9, [x0, #3592]
   34784:	fmadd	d3, d5, d7, d3
   34788:	fmadd	d2, d8, d9, d2
   3478c:	fmadd	d3, d8, d6, d3
   34790:	ldp	d8, d9, [sp, #48]
   34794:	fmul	d1, d1, d2
   34798:	fdiv	d1, d1, d3
   3479c:	fadd	d0, d0, d1
   347a0:	ldr	x20, [x20, #4032]
   347a4:	ldr	x1, [sp, #88]
   347a8:	ldr	x0, [x20]
   347ac:	eor	x0, x1, x0
   347b0:	cbnz	x0, 348f4 <__j1_finite@GLIBC_2.17+0x23c>
   347b4:	ldp	x19, x20, [sp, #16]
   347b8:	ldr	x21, [sp, #32]
   347bc:	ldp	x29, x30, [sp], #96
   347c0:	ret
   347c4:	str	d10, [sp, #40]
   347c8:	fabs	d10, d0
   347cc:	add	x0, sp, #0x48
   347d0:	add	x1, sp, #0x50
   347d4:	stp	d8, d9, [sp, #48]
   347d8:	fmov	d0, d10
   347dc:	bl	3d0c0 <sincos@@GLIBC_2.17>
   347e0:	ldp	d2, d8, [sp, #72]
   347e4:	mov	w0, #0x7fdfffff            	// #2145386495
   347e8:	cmp	w21, w0
   347ec:	fneg	d0, d2
   347f0:	fsub	d9, d2, d8
   347f4:	fsub	d8, d0, d8
   347f8:	b.le	34868 <__j1_finite@GLIBC_2.17+0x1b0>
   347fc:	fsqrt	d28, d10
   34800:	mov	w0, #0x48000000            	// #1207959552
   34804:	cmp	w21, w0
   34808:	b.gt	34854 <__j1_finite@GLIBC_2.17+0x19c>
   3480c:	fmov	d0, d10
   34810:	bl	34240 <__y0_finite@GLIBC_2.17+0x250>
   34814:	fmov	d1, d0
   34818:	fmov	d0, d10
   3481c:	fmov	d10, d1
   34820:	bl	34460 <__y0_finite@GLIBC_2.17+0x470>
   34824:	fmul	d8, d8, d0
   34828:	fnmsub	d0, d9, d10, d8
   3482c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34830:	ldr	d1, [x0, #2664]
   34834:	fmul	d0, d0, d1
   34838:	fdiv	d0, d0, d28
   3483c:	fneg	d1, d0
   34840:	cmp	w19, #0x0
   34844:	ldr	d10, [sp, #40]
   34848:	ldp	d8, d9, [sp, #48]
   3484c:	fcsel	d0, d1, d0, lt  // lt = tstop
   34850:	b	347a0 <__j1_finite@GLIBC_2.17+0xe8>
   34854:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34858:	ldr	d0, [x0, #2664]
   3485c:	fmul	d0, d9, d0
   34860:	fdiv	d0, d0, d28
   34864:	b	3483c <__j1_finite@GLIBC_2.17+0x184>
   34868:	fadd	d0, d10, d10
   3486c:	bl	39ae8 <cos@@GLIBC_2.17>
   34870:	ldp	d1, d2, [sp, #72]
   34874:	fmul	d1, d1, d2
   34878:	fcmpe	d1, #0.0
   3487c:	b.le	348ec <__j1_finite@GLIBC_2.17+0x234>
   34880:	fdiv	d9, d0, d8
   34884:	b	347fc <__j1_finite@GLIBC_2.17+0x144>
   34888:	fmov	d0, #1.000000000000000000e+00
   3488c:	fdiv	d0, d0, d1
   34890:	b	347a0 <__j1_finite@GLIBC_2.17+0xe8>
   34894:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34898:	fmov	d3, #1.000000000000000000e+00
   3489c:	ldr	d2, [x0, #1928]
   348a0:	fadd	d2, d1, d2
   348a4:	fcmpe	d2, d3
   348a8:	b.le	34710 <__j1_finite@GLIBC_2.17+0x58>
   348ac:	fabs	d3, d0
   348b0:	mov	x0, #0x10000000000000      	// #4503599627370496
   348b4:	fmov	d2, x0
   348b8:	fcmpe	d3, d2
   348bc:	b.pl	348c4 <__j1_finite@GLIBC_2.17+0x20c>  // b.nfrst
   348c0:	fmul	d2, d0, d0
   348c4:	fcmp	d0, #0.0
   348c8:	movi	d2, #0x0
   348cc:	fccmp	d1, d2, #0x4, eq  // eq = none
   348d0:	b.eq	347a0 <__j1_finite@GLIBC_2.17+0xe8>  // b.none
   348d4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   348d8:	ldr	x0, [x0, #3976]
   348dc:	mrs	x1, tpidr_el0
   348e0:	mov	w2, #0x22                  	// #34
   348e4:	str	w2, [x1, x0]
   348e8:	b	347a0 <__j1_finite@GLIBC_2.17+0xe8>
   348ec:	fdiv	d8, d0, d9
   348f0:	b	347fc <__j1_finite@GLIBC_2.17+0x144>
   348f4:	str	d10, [sp, #40]
   348f8:	stp	d8, d9, [sp, #48]
   348fc:	bl	ba70 <__stack_chk_fail@plt>

0000000000034900 <__y1_finite@GLIBC_2.17>:
   34900:	stp	x29, x30, [sp, #-96]!
   34904:	mov	w2, #0x7fefffff            	// #2146435071
   34908:	mov	x29, sp
   3490c:	stp	x19, x20, [sp, #16]
   34910:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   34914:	ldr	x0, [x19, #4032]
   34918:	stp	d8, d9, [sp, #32]
   3491c:	fmov	d8, d0
   34920:	ldr	x1, [x0]
   34924:	str	x1, [sp, #88]
   34928:	mov	x1, #0x0                   	// #0
   3492c:	fmov	x0, d0
   34930:	ubfx	x20, x0, #32, #31
   34934:	cmp	w20, w2
   34938:	b.gt	34a8c <__y1_finite@GLIBC_2.17+0x18c>
   3493c:	lsr	x1, x0, #32
   34940:	orr	w0, w20, w0
   34944:	cbz	w0, 34a9c <__y1_finite@GLIBC_2.17+0x19c>
   34948:	tbnz	w1, #31, 34aac <__y1_finite@GLIBC_2.17+0x1ac>
   3494c:	tbnz	w1, #30, 34a38 <__y1_finite@GLIBC_2.17+0x138>
   34950:	mov	w0, #0x3c900000            	// #1016070144
   34954:	cmp	w20, w0
   34958:	b.le	34af4 <__y1_finite@GLIBC_2.17+0x1f4>
   3495c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34960:	fmul	d2, d0, d0
   34964:	stp	d10, d11, [sp, #48]
   34968:	fmov	d10, #1.000000000000000000e+00
   3496c:	ldr	d9, [x0, #3616]
   34970:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34974:	ldr	d4, [x0, #3624]
   34978:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3497c:	ldr	d6, [x0, #3632]
   34980:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34984:	fmadd	d6, d2, d9, d6
   34988:	ldr	d5, [x0, #3640]
   3498c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34990:	fmadd	d5, d2, d4, d5
   34994:	ldr	d3, [x0, #3648]
   34998:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3499c:	ldr	d1, [x0, #3656]
   349a0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   349a4:	ldr	d7, [x0, #3664]
   349a8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   349ac:	fmadd	d1, d2, d1, d10
   349b0:	ldr	d9, [x0, #3672]
   349b4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   349b8:	fmadd	d9, d2, d3, d9
   349bc:	fmul	d3, d2, d2
   349c0:	ldr	d4, [x0, #3680]
   349c4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   349c8:	fmadd	d2, d2, d7, d4
   349cc:	ldr	d7, [x0, #3688]
   349d0:	fmul	d4, d3, d3
   349d4:	fmadd	d9, d3, d6, d9
   349d8:	fmadd	d1, d3, d5, d1
   349dc:	fmadd	d9, d4, d7, d9
   349e0:	fmadd	d1, d4, d2, d1
   349e4:	fdiv	d9, d9, d1
   349e8:	bl	346b8 <__j1_finite@GLIBC_2.17>
   349ec:	fmov	d11, d0
   349f0:	fmov	d0, d8
   349f4:	bl	35a50 <__log_finite@GLIBC_2.17>
   349f8:	fdiv	d10, d10, d8
   349fc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34a00:	ldr	d1, [x0, #2728]
   34a04:	fnmsub	d0, d11, d0, d10
   34a08:	ldp	d10, d11, [sp, #48]
   34a0c:	fmul	d0, d0, d1
   34a10:	fmadd	d0, d9, d8, d0
   34a14:	ldr	x19, [x19, #4032]
   34a18:	ldr	x1, [sp, #88]
   34a1c:	ldr	x0, [x19]
   34a20:	eor	x0, x1, x0
   34a24:	cbnz	x0, 34b54 <__y1_finite@GLIBC_2.17+0x254>
   34a28:	ldp	x19, x20, [sp, #16]
   34a2c:	ldp	d8, d9, [sp, #32]
   34a30:	ldp	x29, x30, [sp], #96
   34a34:	ret
   34a38:	add	x0, sp, #0x48
   34a3c:	add	x1, sp, #0x50
   34a40:	stp	d10, d11, [sp, #48]
   34a44:	bl	3d0c0 <sincos@@GLIBC_2.17>
   34a48:	mov	w0, #0x7fdfffff            	// #2145386495
   34a4c:	ldp	d1, d10, [sp, #72]
   34a50:	cmp	w20, w0
   34a54:	fneg	d0, d1
   34a58:	fsub	d9, d1, d10
   34a5c:	fsub	d10, d0, d10
   34a60:	b.le	34b2c <__y1_finite@GLIBC_2.17+0x22c>
   34a64:	fsqrt	d11, d8
   34a68:	mov	w0, #0x48000000            	// #1207959552
   34a6c:	cmp	w20, w0
   34a70:	b.le	34abc <__y1_finite@GLIBC_2.17+0x1bc>
   34a74:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34a78:	ldr	d0, [x0, #2664]
   34a7c:	fmul	d0, d10, d0
   34a80:	fdiv	d0, d0, d11
   34a84:	ldp	d10, d11, [sp, #48]
   34a88:	b	34a14 <__y1_finite@GLIBC_2.17+0x114>
   34a8c:	fmadd	d0, d0, d0, d0
   34a90:	fmov	d8, #1.000000000000000000e+00
   34a94:	fdiv	d0, d8, d0
   34a98:	b	34a14 <__y1_finite@GLIBC_2.17+0x114>
   34a9c:	movi	d0, #0x0
   34aa0:	fmov	d8, #-1.000000000000000000e+00
   34aa4:	fdiv	d0, d8, d0
   34aa8:	b	34a14 <__y1_finite@GLIBC_2.17+0x114>
   34aac:	movi	d0, #0x0
   34ab0:	fmul	d8, d8, d0
   34ab4:	fdiv	d0, d0, d8
   34ab8:	b	34a14 <__y1_finite@GLIBC_2.17+0x114>
   34abc:	fmov	d0, d8
   34ac0:	bl	34240 <__y0_finite@GLIBC_2.17+0x250>
   34ac4:	fmov	d1, d0
   34ac8:	fmov	d0, d8
   34acc:	fmov	d8, d1
   34ad0:	bl	34460 <__y0_finite@GLIBC_2.17+0x470>
   34ad4:	fmul	d1, d9, d0
   34ad8:	fmadd	d0, d10, d8, d1
   34adc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34ae0:	ldr	d2, [x0, #2664]
   34ae4:	fmul	d0, d0, d2
   34ae8:	fdiv	d0, d0, d11
   34aec:	ldp	d10, d11, [sp, #48]
   34af0:	b	34a14 <__y1_finite@GLIBC_2.17+0x114>
   34af4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34af8:	ldr	d0, [x0, #3600]
   34afc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34b00:	ldr	d1, [x0, #3608]
   34b04:	fdiv	d0, d0, d8
   34b08:	fabs	d2, d0
   34b0c:	fcmp	d2, d1
   34b10:	b.le	34a14 <__y1_finite@GLIBC_2.17+0x114>
   34b14:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   34b18:	ldr	x0, [x0, #3976]
   34b1c:	mrs	x1, tpidr_el0
   34b20:	mov	w2, #0x22                  	// #34
   34b24:	str	w2, [x1, x0]
   34b28:	b	34a14 <__y1_finite@GLIBC_2.17+0x114>
   34b2c:	fadd	d0, d8, d8
   34b30:	bl	39ae8 <cos@@GLIBC_2.17>
   34b34:	ldp	d1, d2, [sp, #72]
   34b38:	fmul	d1, d1, d2
   34b3c:	fcmpe	d1, #0.0
   34b40:	b.le	34b4c <__y1_finite@GLIBC_2.17+0x24c>
   34b44:	fdiv	d9, d0, d10
   34b48:	b	34a64 <__y1_finite@GLIBC_2.17+0x164>
   34b4c:	fdiv	d10, d0, d9
   34b50:	b	34a64 <__y1_finite@GLIBC_2.17+0x164>
   34b54:	stp	d10, d11, [sp, #48]
   34b58:	bl	ba70 <__stack_chk_fail@plt>
   34b5c:	nop

0000000000034b60 <__jn_finite@GLIBC_2.17>:
   34b60:	stp	x29, x30, [sp, #-128]!
   34b64:	fmov	x2, d0
   34b68:	mov	w4, #0x7ff00000            	// #2146435072
   34b6c:	mov	x29, sp
   34b70:	stp	x21, x22, [sp, #32]
   34b74:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   34b78:	ldr	x1, [x21, #4032]
   34b7c:	stp	x19, x20, [sp, #16]
   34b80:	mov	w19, w0
   34b84:	ldr	x0, [x1]
   34b88:	str	x0, [sp, #120]
   34b8c:	mov	x0, #0x0                   	// #0
   34b90:	neg	w1, w2
   34b94:	orr	w1, w1, w2
   34b98:	lsr	x0, x2, #32
   34b9c:	and	w3, w0, #0x7fffffff
   34ba0:	stp	d8, d9, [sp, #64]
   34ba4:	orr	w1, w3, w1, lsr #31
   34ba8:	fmov	d9, d0
   34bac:	cmp	w1, w4
   34bb0:	b.hi	34edc <__jn_finite@GLIBC_2.17+0x37c>  // b.pmore
   34bb4:	cmp	w19, #0x0
   34bb8:	b.lt	34cf8 <__jn_finite@GLIBC_2.17+0x198>  // b.tstop
   34bbc:	b.eq	34d08 <__jn_finite@GLIBC_2.17+0x1a8>  // b.none
   34bc0:	cmp	w19, #0x1
   34bc4:	b.eq	34ee4 <__jn_finite@GLIBC_2.17+0x384>  // b.none
   34bc8:	fabs	d9, d9
   34bcc:	and	w20, w19, w0, lsr #31
   34bd0:	stp	x23, x24, [sp, #48]
   34bd4:	mrs	x23, fpcr
   34bd8:	ands	w24, w23, #0xc00000
   34bdc:	b.ne	34f50 <__jn_finite@GLIBC_2.17+0x3f0>  // b.any
   34be0:	orr	w2, w3, w2
   34be4:	mov	w0, #0x7fefffff            	// #2146435071
   34be8:	cmp	w2, #0x0
   34bec:	ccmp	w3, w0, #0x0, ne  // ne = any
   34bf0:	b.gt	34ebc <__jn_finite@GLIBC_2.17+0x35c>
   34bf4:	stp	d10, d11, [sp, #80]
   34bf8:	scvtf	d10, w19
   34bfc:	fcmpe	d10, d9
   34c00:	b.hi	34ca8 <__jn_finite@GLIBC_2.17+0x148>  // b.pmore
   34c04:	mov	w0, #0x52cfffff            	// #1389363199
   34c08:	fmov	d0, d9
   34c0c:	cmp	w3, w0
   34c10:	b.le	34d38 <__jn_finite@GLIBC_2.17+0x1d8>
   34c14:	add	x1, sp, #0x70
   34c18:	add	x0, sp, #0x68
   34c1c:	and	w19, w19, #0x3
   34c20:	bl	3d0c0 <sincos@@GLIBC_2.17>
   34c24:	cmp	w19, #0x2
   34c28:	b.eq	34f64 <__jn_finite@GLIBC_2.17+0x404>  // b.none
   34c2c:	cmp	w19, #0x3
   34c30:	b.eq	34f80 <__jn_finite@GLIBC_2.17+0x420>  // b.none
   34c34:	cmp	w19, #0x1
   34c38:	b.eq	34f74 <__jn_finite@GLIBC_2.17+0x414>  // b.none
   34c3c:	ldp	d1, d0, [sp, #104]
   34c40:	fadd	d0, d0, d1
   34c44:	fsqrt	d1, d9
   34c48:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34c4c:	ldr	d2, [x0, #2664]
   34c50:	fmul	d0, d0, d2
   34c54:	fdiv	d0, d0, d1
   34c58:	fneg	d1, d0
   34c5c:	cmp	w20, #0x0
   34c60:	fcsel	d0, d1, d0, ne  // ne = any
   34c64:	cbnz	w24, 34f5c <__jn_finite@GLIBC_2.17+0x3fc>
   34c68:	fcmp	d0, #0.0
   34c6c:	b.ne	34e8c <__jn_finite@GLIBC_2.17+0x32c>  // b.any
   34c70:	mov	x0, #0x10000000000000      	// #4503599627370496
   34c74:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   34c78:	fmov	d1, x0
   34c7c:	fmov	d2, x1
   34c80:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   34c84:	ldr	x0, [x0, #3976]
   34c88:	mrs	x1, tpidr_el0
   34c8c:	bif	v0.8b, v1.8b, v2.8b
   34c90:	mov	w2, #0x22                  	// #34
   34c94:	ldp	x23, x24, [sp, #48]
   34c98:	str	w2, [x1, x0]
   34c9c:	fmul	d0, d0, d1
   34ca0:	ldp	d10, d11, [sp, #80]
   34ca4:	b	34d10 <__jn_finite@GLIBC_2.17+0x1b0>
   34ca8:	mov	w0, #0x3e0fffff            	// #1041235967
   34cac:	cmp	w3, w0
   34cb0:	b.gt	34d74 <__jn_finite@GLIBC_2.17+0x214>
   34cb4:	movi	d0, #0x0
   34cb8:	cmp	w19, #0x21
   34cbc:	b.gt	34c58 <__jn_finite@GLIBC_2.17+0xf8>
   34cc0:	fmov	d1, #5.000000000000000000e-01
   34cc4:	add	w19, w19, #0x1
   34cc8:	fmov	d2, #1.000000000000000000e+00
   34ccc:	mov	w0, #0x2                   	// #2
   34cd0:	fmul	d1, d9, d1
   34cd4:	fmov	d0, d1
   34cd8:	scvtf	d3, w0
   34cdc:	add	w0, w0, #0x1
   34ce0:	fmul	d0, d0, d1
   34ce4:	cmp	w19, w0
   34ce8:	fmul	d2, d2, d3
   34cec:	b.ne	34cd8 <__jn_finite@GLIBC_2.17+0x178>  // b.any
   34cf0:	fdiv	d0, d0, d2
   34cf4:	b	34c58 <__jn_finite@GLIBC_2.17+0xf8>
   34cf8:	fneg	d9, d0
   34cfc:	neg	w19, w19
   34d00:	eor	w0, w0, #0x80000000
   34d04:	b	34bc0 <__jn_finite@GLIBC_2.17+0x60>
   34d08:	bl	33db0 <__j0_finite@GLIBC_2.17>
   34d0c:	nop
   34d10:	ldr	x21, [x21, #4032]
   34d14:	ldr	x1, [sp, #120]
   34d18:	ldr	x0, [x21]
   34d1c:	eor	x0, x1, x0
   34d20:	cbnz	x0, 34fa4 <__jn_finite@GLIBC_2.17+0x444>
   34d24:	ldp	x19, x20, [sp, #16]
   34d28:	ldp	x21, x22, [sp, #32]
   34d2c:	ldp	d8, d9, [sp, #64]
   34d30:	ldp	x29, x30, [sp], #128
   34d34:	ret
   34d38:	bl	33db0 <__j0_finite@GLIBC_2.17>
   34d3c:	fmov	d8, d0
   34d40:	fmov	d0, d9
   34d44:	lsl	w19, w19, #1
   34d48:	bl	346b8 <__j1_finite@GLIBC_2.17>
   34d4c:	mov	w0, #0x2                   	// #2
   34d50:	scvtf	d1, w0
   34d54:	fmov	d2, d0
   34d58:	add	w0, w0, #0x2
   34d5c:	cmp	w19, w0
   34d60:	fdiv	d1, d1, d9
   34d64:	fnmsub	d0, d1, d0, d8
   34d68:	fmov	d8, d2
   34d6c:	b.ne	34d50 <__jn_finite@GLIBC_2.17+0x1f0>  // b.any
   34d70:	b	34c58 <__jn_finite@GLIBC_2.17+0xf8>
   34d74:	lsl	w22, w19, #1
   34d78:	fmov	d5, #2.000000000000000000e+00
   34d7c:	fmov	d1, #-1.000000000000000000e+00
   34d80:	mov	x0, #0xcd6500000000        	// #225833675390976
   34d84:	scvtf	d4, w22
   34d88:	movk	x0, #0x41cd, lsl #48
   34d8c:	fdiv	d5, d5, d9
   34d90:	fmov	d0, x0
   34d94:	mov	w0, #0x1                   	// #1
   34d98:	fdiv	d4, d4, d9
   34d9c:	fadd	d2, d4, d5
   34da0:	fmadd	d1, d4, d2, d1
   34da4:	fcmpe	d1, d0
   34da8:	b.mi	34db4 <__jn_finite@GLIBC_2.17+0x254>  // b.first
   34dac:	b	34f8c <__jn_finite@GLIBC_2.17+0x42c>
   34db0:	fmov	d1, d3
   34db4:	fadd	d2, d2, d5
   34db8:	add	w0, w0, #0x1
   34dbc:	fnmsub	d3, d2, d1, d4
   34dc0:	fmov	d4, d1
   34dc4:	fcmpe	d3, d0
   34dc8:	b.mi	34db0 <__jn_finite@GLIBC_2.17+0x250>  // b.first
   34dcc:	add	w0, w0, w19
   34dd0:	lsl	w0, w0, #1
   34dd4:	movi	d8, #0x0
   34dd8:	fmov	d1, #1.000000000000000000e+00
   34ddc:	nop
   34de0:	scvtf	d0, w0
   34de4:	sub	w0, w0, #0x2
   34de8:	cmp	w22, w0
   34dec:	fdiv	d0, d0, d9
   34df0:	fsub	d8, d0, d8
   34df4:	fdiv	d8, d1, d8
   34df8:	b.le	34de0 <__jn_finite@GLIBC_2.17+0x280>
   34dfc:	fmul	d0, d10, d5
   34e00:	sub	w19, w19, #0x1
   34e04:	sub	w22, w22, #0x2
   34e08:	fabs	d0, d0
   34e0c:	bl	35a50 <__log_finite@GLIBC_2.17>
   34e10:	fmul	d10, d10, d0
   34e14:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34e18:	ldr	d1, [x0, #3696]
   34e1c:	fcmpe	d10, d1
   34e20:	b.pl	34ef0 <__jn_finite@GLIBC_2.17+0x390>  // b.nfrst
   34e24:	scvtf	d1, w22
   34e28:	fmov	d2, d8
   34e2c:	fmov	d11, #1.000000000000000000e+00
   34e30:	fmov	d3, #2.000000000000000000e+00
   34e34:	b	34e3c <__jn_finite@GLIBC_2.17+0x2dc>
   34e38:	fmov	d11, d10
   34e3c:	fmul	d0, d11, d1
   34e40:	subs	w19, w19, #0x1
   34e44:	fsub	d1, d1, d3
   34e48:	fdiv	d0, d0, d9
   34e4c:	fsub	d10, d0, d2
   34e50:	fmov	d2, d11
   34e54:	b.ne	34e38 <__jn_finite@GLIBC_2.17+0x2d8>  // b.any
   34e58:	fmov	d0, d9
   34e5c:	bl	33db0 <__j0_finite@GLIBC_2.17>
   34e60:	fmov	d1, d0
   34e64:	fmov	d0, d9
   34e68:	fmov	d9, d1
   34e6c:	bl	346b8 <__j1_finite@GLIBC_2.17>
   34e70:	fabs	d2, d9
   34e74:	fabs	d1, d0
   34e78:	fcmpe	d2, d1
   34e7c:	b.lt	34f44 <__jn_finite@GLIBC_2.17+0x3e4>  // b.tstop
   34e80:	fmul	d0, d8, d9
   34e84:	fdiv	d0, d0, d10
   34e88:	b	34c58 <__jn_finite@GLIBC_2.17+0xf8>
   34e8c:	fabs	d2, d0
   34e90:	mov	x0, #0x10000000000000      	// #4503599627370496
   34e94:	fmov	d1, x0
   34e98:	fcmpe	d2, d1
   34e9c:	b.pl	34eb0 <__jn_finite@GLIBC_2.17+0x350>  // b.nfrst
   34ea0:	fmul	d1, d0, d0
   34ea4:	ldp	x23, x24, [sp, #48]
   34ea8:	ldp	d10, d11, [sp, #80]
   34eac:	b	34d10 <__jn_finite@GLIBC_2.17+0x1b0>
   34eb0:	ldp	x23, x24, [sp, #48]
   34eb4:	ldp	d10, d11, [sp, #80]
   34eb8:	b	34d10 <__jn_finite@GLIBC_2.17+0x1b0>
   34ebc:	movi	d1, #0x0
   34ec0:	cmp	w20, #0x0
   34ec4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   34ec8:	fmov	d0, x0
   34ecc:	fcsel	d0, d0, d1, ne  // ne = any
   34ed0:	cbnz	w24, 34f98 <__jn_finite@GLIBC_2.17+0x438>
   34ed4:	ldp	x23, x24, [sp, #48]
   34ed8:	b	34d10 <__jn_finite@GLIBC_2.17+0x1b0>
   34edc:	fadd	d0, d0, d0
   34ee0:	b	34d10 <__jn_finite@GLIBC_2.17+0x1b0>
   34ee4:	fmov	d0, d9
   34ee8:	bl	346b8 <__j1_finite@GLIBC_2.17>
   34eec:	b	34d10 <__jn_finite@GLIBC_2.17+0x1b0>
   34ef0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   34ef4:	scvtf	d0, w22
   34ef8:	fmov	d11, d8
   34efc:	fmov	d10, #1.000000000000000000e+00
   34f00:	ldr	d2, [x0, #3704]
   34f04:	fmov	d3, #2.000000000000000000e+00
   34f08:	b	34f20 <__jn_finite@GLIBC_2.17+0x3c0>
   34f0c:	fdiv	d8, d8, d1
   34f10:	fdiv	d11, d10, d1
   34f14:	fmov	d10, #1.000000000000000000e+00
   34f18:	subs	w19, w19, #0x1
   34f1c:	b.eq	34e58 <__jn_finite@GLIBC_2.17+0x2f8>  // b.none
   34f20:	fmul	d1, d10, d0
   34f24:	fsub	d0, d0, d3
   34f28:	fdiv	d1, d1, d9
   34f2c:	fsub	d1, d1, d11
   34f30:	fcmpe	d1, d2
   34f34:	b.gt	34f0c <__jn_finite@GLIBC_2.17+0x3ac>
   34f38:	fmov	d11, d10
   34f3c:	fmov	d10, d1
   34f40:	b	34f18 <__jn_finite@GLIBC_2.17+0x3b8>
   34f44:	fmul	d0, d8, d0
   34f48:	fdiv	d0, d0, d11
   34f4c:	b	34c58 <__jn_finite@GLIBC_2.17+0xf8>
   34f50:	eor	w0, w24, w23
   34f54:	msr	fpcr, x0
   34f58:	b	34be0 <__jn_finite@GLIBC_2.17+0x80>
   34f5c:	msr	fpcr, x23
   34f60:	b	34c68 <__jn_finite@GLIBC_2.17+0x108>
   34f64:	ldp	d1, d0, [sp, #104]
   34f68:	fneg	d0, d0
   34f6c:	fsub	d0, d0, d1
   34f70:	b	34c44 <__jn_finite@GLIBC_2.17+0xe4>
   34f74:	ldp	d0, d1, [sp, #104]
   34f78:	fsub	d0, d0, d1
   34f7c:	b	34c44 <__jn_finite@GLIBC_2.17+0xe4>
   34f80:	ldp	d1, d0, [sp, #104]
   34f84:	fsub	d0, d0, d1
   34f88:	b	34c44 <__jn_finite@GLIBC_2.17+0xe4>
   34f8c:	add	w0, w19, #0x1
   34f90:	lsl	w0, w0, #1
   34f94:	b	34dd4 <__jn_finite@GLIBC_2.17+0x274>
   34f98:	msr	fpcr, x23
   34f9c:	ldp	x23, x24, [sp, #48]
   34fa0:	b	34d10 <__jn_finite@GLIBC_2.17+0x1b0>
   34fa4:	stp	x23, x24, [sp, #48]
   34fa8:	stp	d10, d11, [sp, #80]
   34fac:	bl	ba70 <__stack_chk_fail@plt>

0000000000034fb0 <__yn_finite@GLIBC_2.17>:
   34fb0:	stp	x29, x30, [sp, #-112]!
   34fb4:	mov	w3, #0x7ff00000            	// #2146435072
   34fb8:	mov	x29, sp
   34fbc:	stp	x21, x22, [sp, #32]
   34fc0:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   34fc4:	ldr	x1, [x21, #4032]
   34fc8:	stp	x19, x20, [sp, #16]
   34fcc:	mov	w19, w0
   34fd0:	ldr	x0, [x1]
   34fd4:	str	x0, [sp, #104]
   34fd8:	mov	x0, #0x0                   	// #0
   34fdc:	fmov	x1, d0
   34fe0:	stp	d8, d9, [sp, #64]
   34fe4:	fmov	d8, d0
   34fe8:	neg	w0, w1
   34fec:	ubfx	x2, x1, #32, #31
   34ff0:	orr	w0, w0, w1
   34ff4:	orr	w0, w2, w0, lsr #31
   34ff8:	cmp	w0, w3
   34ffc:	b.hi	351e8 <__yn_finite@GLIBC_2.17+0x238>  // b.pmore
   35000:	lsr	x4, x1, #32
   35004:	cmp	w19, #0x0
   35008:	b.lt	350f8 <__yn_finite@GLIBC_2.17+0x148>  // b.tstop
   3500c:	mov	w20, #0x1                   	// #1
   35010:	b.eq	351a4 <__yn_finite@GLIBC_2.17+0x1f4>  // b.none
   35014:	orr	w1, w2, w1
   35018:	cbz	w1, 351f0 <__yn_finite@GLIBC_2.17+0x240>
   3501c:	tbnz	w4, #31, 35204 <__yn_finite@GLIBC_2.17+0x254>
   35020:	str	x23, [sp, #48]
   35024:	mrs	x22, fpcr
   35028:	ands	w23, w22, #0xc00000
   3502c:	b.ne	35214 <__yn_finite@GLIBC_2.17+0x264>  // b.any
   35030:	cmp	w19, #0x1
   35034:	b.eq	351c8 <__yn_finite@GLIBC_2.17+0x218>  // b.none
   35038:	mov	w0, #0x7ff00000            	// #2146435072
   3503c:	cmp	w2, w0
   35040:	b.eq	35248 <__yn_finite@GLIBC_2.17+0x298>  // b.none
   35044:	mov	w0, #0x52cfffff            	// #1389363199
   35048:	fmov	d0, d8
   3504c:	cmp	w2, w0
   35050:	b.le	3510c <__yn_finite@GLIBC_2.17+0x15c>
   35054:	add	x1, sp, #0x58
   35058:	add	x0, sp, #0x60
   3505c:	and	w19, w19, #0x3
   35060:	bl	3d0c0 <sincos@@GLIBC_2.17>
   35064:	cmp	w19, #0x2
   35068:	b.eq	351dc <__yn_finite@GLIBC_2.17+0x22c>  // b.none
   3506c:	cmp	w19, #0x3
   35070:	b.eq	351ac <__yn_finite@GLIBC_2.17+0x1fc>  // b.none
   35074:	cmp	w19, #0x1
   35078:	b.eq	351b8 <__yn_finite@GLIBC_2.17+0x208>  // b.none
   3507c:	ldp	d0, d1, [sp, #88]
   35080:	fsub	d1, d1, d0
   35084:	fsqrt	d8, d8
   35088:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3508c:	ldr	d0, [x0, #2664]
   35090:	fmul	d0, d1, d0
   35094:	fdiv	d0, d0, d8
   35098:	fneg	d1, d0
   3509c:	cmp	w20, #0x1
   350a0:	fcsel	d0, d1, d0, ne  // ne = any
   350a4:	cbnz	w23, 35240 <__yn_finite@GLIBC_2.17+0x290>
   350a8:	fabs	d2, d0
   350ac:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   350b0:	fmov	d1, x0
   350b4:	fcmp	d2, d1
   350b8:	b.le	3519c <__yn_finite@GLIBC_2.17+0x1ec>
   350bc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   350c0:	fmov	d2, x0
   350c4:	ldr	x23, [sp, #48]
   350c8:	bif	v0.8b, v1.8b, v2.8b
   350cc:	fmul	d0, d0, d1
   350d0:	ldr	x0, [x21, #4032]
   350d4:	ldr	x1, [sp, #104]
   350d8:	ldr	x0, [x0]
   350dc:	eor	x0, x1, x0
   350e0:	cbnz	x0, 3526c <__yn_finite@GLIBC_2.17+0x2bc>
   350e4:	ldp	x19, x20, [sp, #16]
   350e8:	ldp	x21, x22, [sp, #32]
   350ec:	ldp	d8, d9, [sp, #64]
   350f0:	ldp	x29, x30, [sp], #112
   350f4:	ret
   350f8:	neg	w19, w19
   350fc:	mov	w20, #0x1                   	// #1
   35100:	ubfiz	w0, w19, #1, #1
   35104:	sub	w20, w20, w0
   35108:	b	35014 <__yn_finite@GLIBC_2.17+0x64>
   3510c:	bl	33ff0 <__y0_finite@GLIBC_2.17>
   35110:	fmov	d9, d0
   35114:	fmov	d0, d8
   35118:	bl	34900 <__y1_finite@GLIBC_2.17>
   3511c:	fmov	x0, d0
   35120:	cmp	w19, #0x1
   35124:	mov	w2, #0xfff00000            	// #-1048576
   35128:	fmov	d1, d0
   3512c:	lsr	x0, x0, #32
   35130:	ccmp	w0, w2, #0x4, gt
   35134:	b.eq	35170 <__yn_finite@GLIBC_2.17+0x1c0>  // b.none
   35138:	mov	w0, #0x1                   	// #1
   3513c:	b	35144 <__yn_finite@GLIBC_2.17+0x194>
   35140:	fmov	d1, d0
   35144:	lsl	w1, w0, #1
   35148:	add	w0, w0, #0x1
   3514c:	cmp	w0, w19
   35150:	scvtf	d0, w1
   35154:	fdiv	d0, d0, d8
   35158:	fnmsub	d0, d0, d1, d9
   3515c:	fmov	d9, d1
   35160:	fmov	x1, d0
   35164:	lsr	x1, x1, #32
   35168:	ccmp	w1, w2, #0x4, lt  // lt = tstop
   3516c:	b.ne	35140 <__yn_finite@GLIBC_2.17+0x190>  // b.any
   35170:	fabs	d2, d0
   35174:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   35178:	fmov	d1, x0
   3517c:	fcmp	d2, d1
   35180:	b.ls	35098 <__yn_finite@GLIBC_2.17+0xe8>  // b.plast
   35184:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   35188:	ldr	x0, [x0, #3976]
   3518c:	mrs	x1, tpidr_el0
   35190:	mov	w2, #0x22                  	// #34
   35194:	str	w2, [x1, x0]
   35198:	b	35098 <__yn_finite@GLIBC_2.17+0xe8>
   3519c:	ldr	x23, [sp, #48]
   351a0:	b	350d0 <__yn_finite@GLIBC_2.17+0x120>
   351a4:	bl	33ff0 <__y0_finite@GLIBC_2.17>
   351a8:	b	350d0 <__yn_finite@GLIBC_2.17+0x120>
   351ac:	ldp	d0, d1, [sp, #88]
   351b0:	fadd	d1, d1, d0
   351b4:	b	35084 <__yn_finite@GLIBC_2.17+0xd4>
   351b8:	ldp	d0, d1, [sp, #88]
   351bc:	fneg	d1, d1
   351c0:	fsub	d1, d1, d0
   351c4:	b	35084 <__yn_finite@GLIBC_2.17+0xd4>
   351c8:	fmov	d0, d8
   351cc:	bl	34900 <__y1_finite@GLIBC_2.17>
   351d0:	scvtf	d1, w20
   351d4:	fmul	d0, d1, d0
   351d8:	b	350a8 <__yn_finite@GLIBC_2.17+0xf8>
   351dc:	ldp	d1, d0, [sp, #88]
   351e0:	fsub	d1, d1, d0
   351e4:	b	35084 <__yn_finite@GLIBC_2.17+0xd4>
   351e8:	fadd	d0, d0, d0
   351ec:	b	350d0 <__yn_finite@GLIBC_2.17+0x120>
   351f0:	neg	w0, w20
   351f4:	movi	d1, #0x0
   351f8:	scvtf	d0, w0
   351fc:	fdiv	d0, d0, d1
   35200:	b	350d0 <__yn_finite@GLIBC_2.17+0x120>
   35204:	movi	d1, #0x0
   35208:	fmul	d0, d8, d1
   3520c:	fdiv	d0, d1, d0
   35210:	b	350d0 <__yn_finite@GLIBC_2.17+0x120>
   35214:	eor	w0, w23, w22
   35218:	msr	fpcr, x0
   3521c:	cmp	w19, #0x1
   35220:	b.eq	35254 <__yn_finite@GLIBC_2.17+0x2a4>  // b.none
   35224:	mov	w0, #0x7ff00000            	// #2146435072
   35228:	cmp	w2, w0
   3522c:	b.ne	35044 <__yn_finite@GLIBC_2.17+0x94>  // b.any
   35230:	msr	fpcr, x22
   35234:	movi	d0, #0x0
   35238:	ldr	x23, [sp, #48]
   3523c:	b	350d0 <__yn_finite@GLIBC_2.17+0x120>
   35240:	msr	fpcr, x22
   35244:	b	350a8 <__yn_finite@GLIBC_2.17+0xf8>
   35248:	movi	d0, #0x0
   3524c:	ldr	x23, [sp, #48]
   35250:	b	350d0 <__yn_finite@GLIBC_2.17+0x120>
   35254:	fmov	d0, d8
   35258:	bl	34900 <__y1_finite@GLIBC_2.17>
   3525c:	scvtf	d1, w20
   35260:	fmul	d0, d1, d0
   35264:	msr	fpcr, x22
   35268:	b	350a8 <__yn_finite@GLIBC_2.17+0xf8>
   3526c:	str	x23, [sp, #48]
   35270:	bl	ba70 <__stack_chk_fail@plt>
   35274:	nop

0000000000035278 <__lgamma_r_finite@GLIBC_2.17>:
   35278:	stp	x29, x30, [sp, #-80]!
   3527c:	mov	w2, #0x1                   	// #1
   35280:	mov	w1, #0x7fefffff            	// #2146435071
   35284:	mov	x29, sp
   35288:	stp	x19, x20, [sp, #16]
   3528c:	fmov	x20, d0
   35290:	stp	d8, d9, [sp, #48]
   35294:	fmov	d8, d0
   35298:	str	w2, [x0]
   3529c:	ubfx	x19, x20, #32, #31
   352a0:	cmp	w19, w1
   352a4:	b.gt	35544 <__lgamma_r_finite@GLIBC_2.17+0x2cc>
   352a8:	stp	x21, x22, [sp, #32]
   352ac:	orr	w1, w19, w20
   352b0:	mov	x21, x0
   352b4:	lsr	x22, x20, #32
   352b8:	cbz	w1, 355a8 <__lgamma_r_finite@GLIBC_2.17+0x330>
   352bc:	mov	w1, #0x3b8fffff            	// #999292927
   352c0:	cmp	w19, w1
   352c4:	b.le	355c8 <__lgamma_r_finite@GLIBC_2.17+0x350>
   352c8:	tbnz	w22, #31, 353e8 <__lgamma_r_finite@GLIBC_2.17+0x170>
   352cc:	mov	w0, #0xc0100000            	// #-1072693248
   352d0:	add	w0, w19, w0
   352d4:	movi	d9, #0x0
   352d8:	orr	w0, w0, w20
   352dc:	cbz	w0, 354ac <__lgamma_r_finite@GLIBC_2.17+0x234>
   352e0:	mov	w0, #0xc0000000            	// #-1073741824
   352e4:	add	w0, w19, w0
   352e8:	orr	w20, w0, w20
   352ec:	cbz	w20, 354ac <__lgamma_r_finite@GLIBC_2.17+0x234>
   352f0:	str	d10, [sp, #64]
   352f4:	tbnz	w22, #30, 355f4 <__lgamma_r_finite@GLIBC_2.17+0x37c>
   352f8:	mov	w0, #0xcccc                	// #52428
   352fc:	movk	w0, #0x3fec, lsl #16
   35300:	cmp	w19, w0
   35304:	b.le	357d4 <__lgamma_r_finite@GLIBC_2.17+0x55c>
   35308:	mov	w0, #0xb4c2                	// #46274
   3530c:	movk	w0, #0x3ffb, lsl #16
   35310:	cmp	w19, w0
   35314:	b.le	35864 <__lgamma_r_finite@GLIBC_2.17+0x5ec>
   35318:	fmov	d1, #2.000000000000000000e+00
   3531c:	movi	d9, #0x0
   35320:	fsub	d1, d1, d8
   35324:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35328:	fmul	d0, d1, d1
   3532c:	fmov	d19, #5.000000000000000000e-01
   35330:	ldr	d2, [x0, #3728]
   35334:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35338:	ldr	d18, [x0, #3736]
   3533c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35340:	fmadd	d18, d0, d2, d18
   35344:	ldr	d5, [x0, #3744]
   35348:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3534c:	ldr	d17, [x0, #3752]
   35350:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35354:	fmadd	d17, d0, d5, d17
   35358:	ldr	d16, [x0, #3760]
   3535c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35360:	ldr	d7, [x0, #3768]
   35364:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35368:	fmadd	d16, d18, d0, d16
   3536c:	ldr	d6, [x0, #3776]
   35370:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35374:	ldr	d5, [x0, #3784]
   35378:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3537c:	fmadd	d7, d17, d0, d7
   35380:	ldr	d4, [x0, #3792]
   35384:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35388:	ldr	d3, [x0, #3800]
   3538c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35390:	fmadd	d6, d16, d0, d6
   35394:	ldr	d8, [x0, #3808]
   35398:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3539c:	ldr	d2, [x0, #3816]
   353a0:	fmadd	d5, d7, d0, d5
   353a4:	fmadd	d4, d6, d0, d4
   353a8:	fmadd	d3, d5, d0, d3
   353ac:	fmadd	d8, d4, d0, d8
   353b0:	fmadd	d2, d3, d0, d2
   353b4:	fmul	d8, d8, d1
   353b8:	fmadd	d0, d2, d0, d8
   353bc:	fmsub	d8, d1, d19, d0
   353c0:	fadd	d9, d8, d9
   353c4:	tbz	w22, #31, 353cc <__lgamma_r_finite@GLIBC_2.17+0x154>
   353c8:	fsub	d9, d10, d9
   353cc:	fmov	d0, d9
   353d0:	ldr	d10, [sp, #64]
   353d4:	ldp	x19, x20, [sp, #16]
   353d8:	ldp	x21, x22, [sp, #32]
   353dc:	ldp	d8, d9, [sp, #48]
   353e0:	ldp	x29, x30, [sp], #80
   353e4:	ret
   353e8:	mov	w1, #0x432fffff            	// #1127219199
   353ec:	cmp	w19, w1
   353f0:	b.gt	35830 <__lgamma_r_finite@GLIBC_2.17+0x5b8>
   353f4:	fmov	d1, #-2.000000000000000000e+00
   353f8:	fcmpe	d0, d1
   353fc:	b.pl	3540c <__lgamma_r_finite@GLIBC_2.17+0x194>  // b.nfrst
   35400:	fmov	d1, #-2.800000000000000000e+01
   35404:	fcmpe	d0, d1
   35408:	b.gt	3571c <__lgamma_r_finite@GLIBC_2.17+0x4a4>
   3540c:	mov	w0, #0x3fcfffff            	// #1070596095
   35410:	cmp	w19, w0
   35414:	b.le	35704 <__lgamma_r_finite@GLIBC_2.17+0x48c>
   35418:	fneg	d0, d8
   3541c:	frintm	d1, d0
   35420:	fcmp	d0, d1
   35424:	b.ne	3555c <__lgamma_r_finite@GLIBC_2.17+0x2e4>  // b.any
   35428:	mov	x0, #0x4330000000000000    	// #4841369599423283200
   3542c:	fmov	d0, x0
   35430:	fsub	d0, d0, d8
   35434:	fmov	w0, s0
   35438:	and	w0, w0, #0x1
   3543c:	scvtf	d1, w0
   35440:	lsl	w0, w0, #2
   35444:	cmp	w0, #0x2
   35448:	b.gt	35844 <__lgamma_r_finite@GLIBC_2.17+0x5cc>
   3544c:	cbz	w0, 355dc <__lgamma_r_finite@GLIBC_2.17+0x364>
   35450:	sub	w0, w0, #0x1
   35454:	cmp	w0, #0x1
   35458:	b.ls	354c4 <__lgamma_r_finite@GLIBC_2.17+0x24c>  // b.plast
   3545c:	fmov	d2, #2.000000000000000000e+00
   35460:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   35464:	fsub	d1, d1, d2
   35468:	ldr	d0, [x0, #2416]
   3546c:	fmul	d0, d1, d0
   35470:	bl	393c8 <sin@@GLIBC_2.17>
   35474:	fneg	d9, d0
   35478:	fcmp	d9, #0.0
   3547c:	b.ne	354e8 <__lgamma_r_finite@GLIBC_2.17+0x270>  // b.any
   35480:	fcvt	s9, d9
   35484:	fmov	d8, #1.000000000000000000e+00
   35488:	ldp	x19, x20, [sp, #16]
   3548c:	ldp	x21, x22, [sp, #32]
   35490:	fabs	s9, s9
   35494:	fcvt	d9, s9
   35498:	fdiv	d9, d8, d9
   3549c:	fmov	d0, d9
   354a0:	ldp	d8, d9, [sp, #48]
   354a4:	ldp	x29, x30, [sp], #80
   354a8:	ret
   354ac:	ldp	x21, x22, [sp, #32]
   354b0:	fmov	d0, d9
   354b4:	ldp	x19, x20, [sp, #16]
   354b8:	ldp	d8, d9, [sp, #48]
   354bc:	ldp	x29, x30, [sp], #80
   354c0:	ret
   354c4:	fmov	d2, #5.000000000000000000e-01
   354c8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   354cc:	fsub	d0, d2, d1
   354d0:	ldr	d3, [x0, #2416]
   354d4:	fmul	d0, d0, d3
   354d8:	bl	39ae8 <cos@@GLIBC_2.17>
   354dc:	fneg	d9, d0
   354e0:	fcmp	d9, #0.0
   354e4:	b.eq	35480 <__lgamma_r_finite@GLIBC_2.17+0x208>  // b.none
   354e8:	fmul	d0, d8, d9
   354ec:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   354f0:	str	d10, [sp, #64]
   354f4:	ldr	d1, [x0, #2416]
   354f8:	fabs	d0, d0
   354fc:	fdiv	d0, d1, d0
   35500:	bl	35a50 <__log_finite@GLIBC_2.17>
   35504:	fcmpe	d9, #0.0
   35508:	fmov	d10, d0
   3550c:	b.pl	35518 <__lgamma_r_finite@GLIBC_2.17+0x2a0>  // b.nfrst
   35510:	mov	w0, #0xffffffff            	// #-1
   35514:	str	w0, [x21]
   35518:	mov	w0, #0xc0100000            	// #-1072693248
   3551c:	add	w0, w19, w0
   35520:	orr	w0, w0, w20
   35524:	cbz	w0, 356fc <__lgamma_r_finite@GLIBC_2.17+0x484>
   35528:	mov	w0, #0xc0000000            	// #-1073741824
   3552c:	add	w0, w19, w0
   35530:	fneg	d8, d8
   35534:	movi	d9, #0x0
   35538:	orr	w20, w0, w20
   3553c:	cbz	w20, 353c8 <__lgamma_r_finite@GLIBC_2.17+0x150>
   35540:	b	352f4 <__lgamma_r_finite@GLIBC_2.17+0x7c>
   35544:	fmul	d9, d0, d0
   35548:	ldp	x19, x20, [sp, #16]
   3554c:	fmov	d0, d9
   35550:	ldp	d8, d9, [sp, #48]
   35554:	ldp	x29, x30, [sp], #80
   35558:	ret
   3555c:	fmov	d1, #5.000000000000000000e-01
   35560:	fmul	d0, d0, d1
   35564:	frintm	d1, d0
   35568:	fsub	d0, d0, d1
   3556c:	fadd	d1, d0, d0
   35570:	fcvtzs	w0, d1, #2
   35574:	cmp	w0, #0x4
   35578:	b.le	35444 <__lgamma_r_finite@GLIBC_2.17+0x1cc>
   3557c:	sub	w0, w0, #0x5
   35580:	cmp	w0, #0x1
   35584:	b.hi	3545c <__lgamma_r_finite@GLIBC_2.17+0x1e4>  // b.pmore
   35588:	fmov	d2, #1.500000000000000000e+00
   3558c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   35590:	fsub	d1, d1, d2
   35594:	ldr	d0, [x0, #2416]
   35598:	fmul	d0, d1, d0
   3559c:	bl	39ae8 <cos@@GLIBC_2.17>
   355a0:	fmov	d9, d0
   355a4:	b	35478 <__lgamma_r_finite@GLIBC_2.17+0x200>
   355a8:	tbz	w22, #31, 355b4 <__lgamma_r_finite@GLIBC_2.17+0x33c>
   355ac:	mov	w0, #0xffffffff            	// #-1
   355b0:	str	w0, [x21]
   355b4:	fabs	d8, d8
   355b8:	fmov	d9, #1.000000000000000000e+00
   355bc:	ldp	x21, x22, [sp, #32]
   355c0:	fdiv	d9, d9, d8
   355c4:	b	354b0 <__lgamma_r_finite@GLIBC_2.17+0x238>
   355c8:	tbnz	w22, #31, 357b8 <__lgamma_r_finite@GLIBC_2.17+0x540>
   355cc:	bl	35a50 <__log_finite@GLIBC_2.17>
   355d0:	fneg	d9, d0
   355d4:	ldp	x21, x22, [sp, #32]
   355d8:	b	354b0 <__lgamma_r_finite@GLIBC_2.17+0x238>
   355dc:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   355e0:	ldr	d0, [x0, #2416]
   355e4:	fmul	d0, d1, d0
   355e8:	bl	393c8 <sin@@GLIBC_2.17>
   355ec:	fneg	d9, d0
   355f0:	b	35478 <__lgamma_r_finite@GLIBC_2.17+0x200>
   355f4:	mov	w0, #0x401fffff            	// #1075838975
   355f8:	cmp	w19, w0
   355fc:	b.gt	35730 <__lgamma_r_finite@GLIBC_2.17+0x4b8>
   35600:	fcvtzs	w0, d8
   35604:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35608:	fmov	d0, #1.000000000000000000e+00
   3560c:	fmov	d20, #5.000000000000000000e-01
   35610:	ldr	d22, [x1, #4048]
   35614:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35618:	ldr	d19, [x1, #4056]
   3561c:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35620:	scvtf	d1, w0
   35624:	cmp	w0, #0x5
   35628:	ldr	d21, [x1, #4064]
   3562c:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35630:	ldr	d18, [x1, #4072]
   35634:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35638:	fsub	d1, d8, d1
   3563c:	ldr	d17, [x1, #4080]
   35640:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35644:	ldr	d16, [x1, #4088]
   35648:	adrp	x1, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3564c:	fmadd	d19, d1, d22, d19
   35650:	fmadd	d8, d1, d21, d18
   35654:	ldr	d7, [x1]
   35658:	adrp	x1, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3565c:	ldr	d6, [x1, #8]
   35660:	adrp	x1, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   35664:	ldr	d5, [x1, #16]
   35668:	adrp	x1, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3566c:	ldr	d4, [x1, #24]
   35670:	adrp	x1, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   35674:	fmadd	d17, d19, d1, d17
   35678:	fmadd	d8, d8, d1, d16
   3567c:	ldr	d3, [x1, #32]
   35680:	adrp	x1, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   35684:	ldr	d2, [x1, #40]
   35688:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3568c:	ldr	d9, [x1, #4040]
   35690:	fmadd	d7, d17, d1, d7
   35694:	fmadd	d8, d8, d1, d6
   35698:	fmadd	d5, d7, d1, d5
   3569c:	fmadd	d8, d8, d1, d4
   356a0:	fmadd	d3, d5, d1, d3
   356a4:	fmadd	d8, d8, d1, d2
   356a8:	fmadd	d9, d3, d1, d9
   356ac:	fmadd	d8, d8, d1, d0
   356b0:	fmul	d9, d9, d1
   356b4:	fdiv	d8, d9, d8
   356b8:	fmadd	d9, d1, d20, d8
   356bc:	b.eq	35a44 <__lgamma_r_finite@GLIBC_2.17+0x7cc>  // b.none
   356c0:	b.gt	357fc <__lgamma_r_finite@GLIBC_2.17+0x584>
   356c4:	cmp	w0, #0x3
   356c8:	b.eq	356e0 <__lgamma_r_finite@GLIBC_2.17+0x468>  // b.none
   356cc:	cmp	w0, #0x4
   356d0:	b.ne	353c4 <__lgamma_r_finite@GLIBC_2.17+0x14c>  // b.any
   356d4:	fmov	d2, #3.000000000000000000e+00
   356d8:	fadd	d2, d1, d2
   356dc:	fmul	d0, d2, d0
   356e0:	fmov	d8, #2.000000000000000000e+00
   356e4:	fadd	d8, d1, d8
   356e8:	fmul	d0, d8, d0
   356ec:	bl	35a50 <__log_finite@GLIBC_2.17>
   356f0:	fadd	d9, d9, d0
   356f4:	tbnz	w22, #31, 353c8 <__lgamma_r_finite@GLIBC_2.17+0x150>
   356f8:	b	353cc <__lgamma_r_finite@GLIBC_2.17+0x154>
   356fc:	movi	d9, #0x0
   35700:	b	353c8 <__lgamma_r_finite@GLIBC_2.17+0x150>
   35704:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   35708:	ldr	d0, [x0, #2416]
   3570c:	fmul	d0, d8, d0
   35710:	bl	393c8 <sin@@GLIBC_2.17>
   35714:	fmov	d9, d0
   35718:	b	35478 <__lgamma_r_finite@GLIBC_2.17+0x200>
   3571c:	ldp	x19, x20, [sp, #16]
   35720:	ldp	x21, x22, [sp, #32]
   35724:	ldp	d8, d9, [sp, #48]
   35728:	ldp	x29, x30, [sp], #80
   3572c:	b	3dd80 <ldexp@@GLIBC_2.17+0x2a8>
   35730:	mov	w0, #0x438fffff            	// #1133510655
   35734:	fmov	d0, d8
   35738:	cmp	w19, w0
   3573c:	b.gt	35960 <__lgamma_r_finite@GLIBC_2.17+0x6e8>
   35740:	bl	35a50 <__log_finite@GLIBC_2.17>
   35744:	fmov	d2, #1.000000000000000000e+00
   35748:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3574c:	fmov	d3, #5.000000000000000000e-01
   35750:	fdiv	d9, d2, d8
   35754:	fsub	d0, d0, d2
   35758:	ldr	d17, [x0, #48]
   3575c:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   35760:	fsub	d8, d8, d3
   35764:	ldr	d16, [x0, #56]
   35768:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3576c:	ldr	d7, [x0, #64]
   35770:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   35774:	ldr	d6, [x0, #72]
   35778:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3577c:	ldr	d5, [x0, #80]
   35780:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   35784:	ldr	d4, [x0, #88]
   35788:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3578c:	ldr	d1, [x0, #96]
   35790:	fmul	d2, d9, d9
   35794:	fmadd	d16, d2, d17, d16
   35798:	fmadd	d7, d16, d2, d7
   3579c:	fmadd	d6, d7, d2, d6
   357a0:	fmadd	d5, d6, d2, d5
   357a4:	fmadd	d2, d5, d2, d4
   357a8:	fmadd	d1, d2, d9, d1
   357ac:	fmadd	d9, d8, d0, d1
   357b0:	tbnz	w22, #31, 353c8 <__lgamma_r_finite@GLIBC_2.17+0x150>
   357b4:	b	353cc <__lgamma_r_finite@GLIBC_2.17+0x154>
   357b8:	fneg	d0, d0
   357bc:	mov	w0, #0xffffffff            	// #-1
   357c0:	str	w0, [x21]
   357c4:	bl	35a50 <__log_finite@GLIBC_2.17>
   357c8:	fneg	d9, d0
   357cc:	ldp	x21, x22, [sp, #32]
   357d0:	b	354b0 <__lgamma_r_finite@GLIBC_2.17+0x238>
   357d4:	fmov	d0, d8
   357d8:	bl	35a50 <__log_finite@GLIBC_2.17>
   357dc:	fneg	d9, d0
   357e0:	mov	w0, #0x6943                	// #26947
   357e4:	movk	w0, #0x3fe7, lsl #16
   357e8:	cmp	w19, w0
   357ec:	b.le	35a24 <__lgamma_r_finite@GLIBC_2.17+0x7ac>
   357f0:	fmov	d1, #1.000000000000000000e+00
   357f4:	fsub	d1, d1, d8
   357f8:	b	35324 <__lgamma_r_finite@GLIBC_2.17+0xac>
   357fc:	cmp	w0, #0x6
   35800:	b.eq	35814 <__lgamma_r_finite@GLIBC_2.17+0x59c>  // b.none
   35804:	cmp	w0, #0x7
   35808:	b.ne	353c4 <__lgamma_r_finite@GLIBC_2.17+0x14c>  // b.any
   3580c:	fmov	d0, #6.000000000000000000e+00
   35810:	fadd	d0, d1, d0
   35814:	fmov	d2, #5.000000000000000000e+00
   35818:	fadd	d2, d1, d2
   3581c:	fmul	d2, d2, d0
   35820:	fmov	d0, #4.000000000000000000e+00
   35824:	fadd	d0, d1, d0
   35828:	fmul	d0, d0, d2
   3582c:	b	356d4 <__lgamma_r_finite@GLIBC_2.17+0x45c>
   35830:	fabs	d8, d0
   35834:	movi	d9, #0x0
   35838:	ldp	x21, x22, [sp, #32]
   3583c:	fdiv	d9, d8, d9
   35840:	b	354b0 <__lgamma_r_finite@GLIBC_2.17+0x238>
   35844:	fmov	d2, #1.000000000000000000e+00
   35848:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3584c:	fsub	d1, d2, d1
   35850:	ldr	d0, [x0, #2416]
   35854:	fmul	d0, d1, d0
   35858:	bl	393c8 <sin@@GLIBC_2.17>
   3585c:	fneg	d9, d0
   35860:	b	35478 <__lgamma_r_finite@GLIBC_2.17+0x200>
   35864:	mov	w0, #0xb4c3                	// #46275
   35868:	movk	w0, #0x3ff3, lsl #16
   3586c:	cmp	w19, w0
   35870:	b.le	35978 <__lgamma_r_finite@GLIBC_2.17+0x700>
   35874:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35878:	movi	d9, #0x0
   3587c:	ldr	d2, [x0, #3720]
   35880:	fsub	d2, d8, d2
   35884:	fmul	d22, d2, d2
   35888:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3588c:	ldr	d23, [x0, #3824]
   35890:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35894:	fmul	d0, d22, d2
   35898:	ldr	d21, [x0, #3832]
   3589c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358a0:	ldr	d4, [x0, #3840]
   358a4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358a8:	fmadd	d21, d0, d23, d21
   358ac:	ldr	d20, [x0, #3848]
   358b0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358b4:	fmadd	d20, d0, d4, d20
   358b8:	ldr	d18, [x0, #3856]
   358bc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358c0:	ldr	d1, [x0, #3864]
   358c4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358c8:	ldr	d17, [x0, #3872]
   358cc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358d0:	fmadd	d18, d21, d0, d18
   358d4:	ldr	d19, [x0, #3880]
   358d8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358dc:	fmadd	d19, d0, d1, d19
   358e0:	fmadd	d17, d20, d0, d17
   358e4:	ldr	d8, [x0, #3888]
   358e8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358ec:	ldr	d7, [x0, #3896]
   358f0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358f4:	ldr	d16, [x0, #3904]
   358f8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   358fc:	fmadd	d8, d18, d0, d8
   35900:	ldr	d5, [x0, #3912]
   35904:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35908:	fmadd	d16, d19, d0, d16
   3590c:	fmadd	d7, d17, d0, d7
   35910:	ldr	d3, [x0, #3920]
   35914:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35918:	ldr	d6, [x0, #3928]
   3591c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35920:	ldr	d4, [x0, #3936]
   35924:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35928:	fmadd	d8, d8, d0, d5
   3592c:	ldr	d1, [x0, #3944]
   35930:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35934:	fmadd	d6, d16, d0, d6
   35938:	fmadd	d3, d7, d0, d3
   3593c:	ldr	d23, [x0, #3952]
   35940:	fmadd	d8, d8, d2, d3
   35944:	fmadd	d4, d6, d0, d4
   35948:	fmsub	d0, d8, d0, d1
   3594c:	fnmsub	d8, d22, d4, d0
   35950:	fsub	d8, d8, d23
   35954:	fadd	d9, d8, d9
   35958:	tbnz	w22, #31, 353c8 <__lgamma_r_finite@GLIBC_2.17+0x150>
   3595c:	b	353cc <__lgamma_r_finite@GLIBC_2.17+0x154>
   35960:	bl	35a50 <__log_finite@GLIBC_2.17>
   35964:	fmov	d9, #1.000000000000000000e+00
   35968:	fsub	d9, d0, d9
   3596c:	fmul	d9, d9, d8
   35970:	tbnz	w22, #31, 353c8 <__lgamma_r_finite@GLIBC_2.17+0x150>
   35974:	b	353cc <__lgamma_r_finite@GLIBC_2.17+0x154>
   35978:	fmov	d0, #1.000000000000000000e+00
   3597c:	movi	d9, #0x0
   35980:	fsub	d8, d8, d0
   35984:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35988:	fmov	d1, #1.000000000000000000e+00
   3598c:	fmov	d18, #-5.000000000000000000e-01
   35990:	ldr	d17, [x0, #3960]
   35994:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35998:	ldr	d7, [x0, #3968]
   3599c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   359a0:	fmadd	d17, d8, d17, d7
   359a4:	ldr	d16, [x0, #3976]
   359a8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   359ac:	ldr	d6, [x0, #3984]
   359b0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   359b4:	fmadd	d16, d8, d16, d6
   359b8:	ldr	d7, [x0, #3992]
   359bc:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   359c0:	ldr	d6, [x0, #4000]
   359c4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   359c8:	fmadd	d7, d17, d8, d7
   359cc:	ldr	d5, [x0, #4008]
   359d0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   359d4:	ldr	d4, [x0, #4016]
   359d8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   359dc:	fmadd	d6, d16, d8, d6
   359e0:	ldr	d3, [x0, #4024]
   359e4:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   359e8:	ldr	d2, [x0, #4032]
   359ec:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   359f0:	fmadd	d5, d7, d8, d5
   359f4:	ldr	d0, [x0, #4040]
   359f8:	fmadd	d4, d6, d8, d4
   359fc:	fmadd	d3, d5, d8, d3
   35a00:	fmadd	d2, d4, d8, d2
   35a04:	fmadd	d0, d3, d8, d0
   35a08:	fmadd	d1, d2, d8, d1
   35a0c:	fmul	d0, d0, d8
   35a10:	fdiv	d0, d0, d1
   35a14:	fmadd	d8, d8, d18, d0
   35a18:	fadd	d9, d8, d9
   35a1c:	tbnz	w22, #31, 353c8 <__lgamma_r_finite@GLIBC_2.17+0x150>
   35a20:	b	353cc <__lgamma_r_finite@GLIBC_2.17+0x154>
   35a24:	mov	w0, #0xa660                	// #42592
   35a28:	movk	w0, #0x3fcd, lsl #16
   35a2c:	cmp	w19, w0
   35a30:	b.le	35984 <__lgamma_r_finite@GLIBC_2.17+0x70c>
   35a34:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   35a38:	ldr	d2, [x0, #3712]
   35a3c:	fsub	d2, d8, d2
   35a40:	b	35884 <__lgamma_r_finite@GLIBC_2.17+0x60c>
   35a44:	fmov	d2, d0
   35a48:	b	35820 <__lgamma_r_finite@GLIBC_2.17+0x5a8>
   35a4c:	nop

0000000000035a50 <__log_finite@GLIBC_2.17>:
   35a50:	fmov	x2, d0
   35a54:	mov	x0, #0xc012000000000000    	// #-4606619468846596096
   35a58:	mov	x1, #0xffff08ffffffffff    	// #-271579372060673
   35a5c:	movk	x1, #0x3, lsl #48
   35a60:	add	x0, x2, x0
   35a64:	cmp	x0, x1
   35a68:	lsr	x0, x2, #48
   35a6c:	b.ls	35b10 <__log_finite@GLIBC_2.17+0xc0>  // b.plast
   35a70:	sub	w3, w0, #0x10
   35a74:	mov	w1, #0x7fdf                	// #32735
   35a78:	cmp	w3, w1
   35a7c:	b.hi	35bb4 <__log_finite@GLIBC_2.17+0x164>  // b.pmore
   35a80:	mov	x1, #0xc01a000000000000    	// #-4604367669032910848
   35a84:	add	x1, x2, x1
   35a88:	adrp	x5, 8a000 <f64xsubf128@@GLIBC_2.28+0x36280>
   35a8c:	add	x0, x5, #0x238
   35a90:	ubfx	x3, x1, #45, #7
   35a94:	asr	x4, x1, #52
   35a98:	add	x3, x3, #0x9
   35a9c:	and	x1, x1, #0xfff0000000000000
   35aa0:	sub	x1, x2, x1
   35aa4:	scvtf	d4, w4
   35aa8:	lsl	x2, x3, #4
   35aac:	ldr	d1, [x5, #568]
   35ab0:	add	x3, x0, x2
   35ab4:	fmov	d3, #-1.000000000000000000e+00
   35ab8:	ldp	d5, d6, [x0, #32]
   35abc:	ldr	d0, [x0, x2]
   35ac0:	ldr	d2, [x3, #8]
   35ac4:	fmadd	d1, d1, d4, d2
   35ac8:	fmov	d2, x1
   35acc:	ldr	d16, [x0, #48]
   35ad0:	fmadd	d2, d2, d0, d3
   35ad4:	ldr	d17, [x0, #8]
   35ad8:	ldp	d0, d3, [x0, #16]
   35adc:	fadd	d7, d2, d1
   35ae0:	fmadd	d6, d16, d2, d6
   35ae4:	fmadd	d3, d5, d2, d3
   35ae8:	fmul	d5, d2, d2
   35aec:	fsub	d1, d1, d7
   35af0:	fmul	d16, d2, d5
   35af4:	fadd	d1, d1, d2
   35af8:	fmadd	d2, d6, d5, d3
   35afc:	fmadd	d1, d17, d4, d1
   35b00:	fmadd	d0, d0, d5, d1
   35b04:	fmadd	d0, d16, d2, d0
   35b08:	fadd	d0, d0, d7
   35b0c:	ret
   35b10:	mov	x0, #0x3ff0000000000000    	// #4607182418800017408
   35b14:	cmp	x2, x0
   35b18:	b.eq	35c08 <__log_finite@GLIBC_2.17+0x1b8>  // b.none
   35b1c:	adrp	x0, 8a000 <f64xsubf128@@GLIBC_2.28+0x36280>
   35b20:	add	x0, x0, #0x238
   35b24:	fmov	d1, #1.000000000000000000e+00
   35b28:	mov	x1, #0x41a0000000000000    	// #4728779608739020800
   35b2c:	fsub	d0, d0, d1
   35b30:	fmov	d1, x1
   35b34:	ldp	d5, d4, [x0, #112]
   35b38:	fmadd	d2, d0, d1, d0
   35b3c:	ldp	d3, d17, [x0, #128]
   35b40:	fmul	d7, d0, d0
   35b44:	fmadd	d5, d4, d0, d5
   35b48:	ldr	d16, [x0, #96]
   35b4c:	fmsub	d2, d0, d1, d2
   35b50:	ldr	d4, [x0, #88]
   35b54:	ldr	d1, [x0, #56]
   35b58:	fmul	d6, d0, d7
   35b5c:	fmadd	d4, d16, d0, d4
   35b60:	fmadd	d5, d3, d7, d5
   35b64:	ldr	d3, [x0, #104]
   35b68:	ldr	d19, [x0, #80]
   35b6c:	fmadd	d4, d3, d7, d4
   35b70:	fmadd	d5, d17, d6, d5
   35b74:	fmul	d18, d2, d2
   35b78:	ldp	d3, d16, [x0, #64]
   35b7c:	fmadd	d17, d18, d1, d0
   35b80:	fmadd	d3, d16, d0, d3
   35b84:	fsub	d16, d0, d2
   35b88:	fadd	d2, d0, d2
   35b8c:	fmadd	d4, d5, d6, d4
   35b90:	fmadd	d3, d19, d7, d3
   35b94:	fmul	d7, d1, d16
   35b98:	fsub	d0, d0, d17
   35b9c:	fmadd	d1, d18, d1, d0
   35ba0:	fmadd	d3, d4, d6, d3
   35ba4:	fmadd	d0, d7, d2, d1
   35ba8:	fmadd	d0, d3, d6, d0
   35bac:	fadd	d0, d17, d0
   35bb0:	ret
   35bb4:	cmp	xzr, x2, lsl #1
   35bb8:	b.eq	35c00 <__log_finite@GLIBC_2.17+0x1b0>  // b.none
   35bbc:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   35bc0:	cmp	x2, x1
   35bc4:	b.eq	35b0c <__log_finite@GLIBC_2.17+0xbc>  // b.none
   35bc8:	tst	x0, #0x8000
   35bcc:	b.ne	35bfc <__log_finite@GLIBC_2.17+0x1ac>  // b.any
   35bd0:	and	w0, w0, #0x7ff0
   35bd4:	mov	w1, #0x7ff0                	// #32752
   35bd8:	cmp	w0, w1
   35bdc:	b.eq	35bfc <__log_finite@GLIBC_2.17+0x1ac>  // b.none
   35be0:	mov	x0, #0x4330000000000000    	// #4841369599423283200
   35be4:	fmov	d1, x0
   35be8:	mov	x2, #0xfcc0000000000000    	// #-234187180623265792
   35bec:	fmul	d0, d0, d1
   35bf0:	fmov	x0, d0
   35bf4:	add	x2, x0, x2
   35bf8:	b	35a80 <__log_finite@GLIBC_2.17+0x30>
   35bfc:	b	51b68 <__exp2f_finite@GLIBC_2.17+0x5100>
   35c00:	mov	w0, #0x1                   	// #1
   35c04:	b	51b48 <__exp2f_finite@GLIBC_2.17+0x50e0>
   35c08:	movi	d0, #0x0
   35c0c:	ret

0000000000035c10 <__log10_finite@GLIBC_2.17>:
   35c10:	fmov	x1, d0
   35c14:	mov	x0, #0xfffffffffffff       	// #4503599627370495
   35c18:	cmp	x1, x0
   35c1c:	b.gt	35c44 <__log10_finite@GLIBC_2.17+0x34>
   35c20:	tst	x1, #0x7fffffffffffffff
   35c24:	b.eq	35cbc <__log10_finite@GLIBC_2.17+0xac>  // b.none
   35c28:	tbnz	x1, #63, 35cd8 <__log10_finite@GLIBC_2.17+0xc8>
   35c2c:	mov	x0, #0x4350000000000000    	// #4850376798678024192
   35c30:	fmov	d1, x0
   35c34:	mov	w0, #0xffffffca            	// #-54
   35c38:	fmul	d0, d0, d1
   35c3c:	fmov	x1, d0
   35c40:	b	35c48 <__log10_finite@GLIBC_2.17+0x38>
   35c44:	mov	w0, #0x0                   	// #0
   35c48:	mov	x2, #0x7fefffffffffffff    	// #9218868437227405311
   35c4c:	cmp	x1, x2
   35c50:	b.hi	35cd0 <__log10_finite@GLIBC_2.17+0xc0>  // b.pmore
   35c54:	asr	x2, x1, #52
   35c58:	sub	w0, w0, #0x3ff
   35c5c:	add	w0, w0, w2
   35c60:	stp	x29, x30, [sp, #-32]!
   35c64:	mov	x2, #0x3ff                 	// #1023
   35c68:	lsr	w3, w0, #31
   35c6c:	mov	x29, sp
   35c70:	add	x0, x3, w0, sxtw
   35c74:	sub	x2, x2, x3
   35c78:	str	d8, [sp, #16]
   35c7c:	scvtf	d8, x0
   35c80:	bfi	x1, x2, #52, #12
   35c84:	fmov	d0, x1
   35c88:	bl	35a50 <__log_finite@GLIBC_2.17>
   35c8c:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   35c90:	ldr	d3, [x0, #104]
   35c94:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   35c98:	ldr	d2, [x0, #112]
   35c9c:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   35ca0:	fmul	d0, d0, d3
   35ca4:	ldr	d1, [x0, #120]
   35ca8:	fmadd	d0, d8, d2, d0
   35cac:	fmadd	d0, d8, d1, d0
   35cb0:	ldr	d8, [sp, #16]
   35cb4:	ldp	x29, x30, [sp], #32
   35cb8:	ret
   35cbc:	fabs	d0, d0
   35cc0:	mov	x0, #0xc350000000000000    	// #-4372995238176751616
   35cc4:	fmov	d1, x0
   35cc8:	fdiv	d0, d1, d0
   35ccc:	ret
   35cd0:	fadd	d0, d0, d0
   35cd4:	ret
   35cd8:	fsub	d0, d0, d0
   35cdc:	fdiv	d0, d0, d0
   35ce0:	ret
   35ce4:	nop

0000000000035ce8 <__pow_finite@GLIBC_2.17>:
   35ce8:	fmov	x3, d0
   35cec:	fmov	x4, d1
   35cf0:	fmov	d2, d0
   35cf4:	lsr	x2, x3, #52
   35cf8:	lsr	x5, x4, #52
   35cfc:	sub	w0, w2, #0x1
   35d00:	mov	w6, w2
   35d04:	cmp	w0, #0x7fd
   35d08:	b.hi	35e78 <__pow_finite@GLIBC_2.17+0x190>  // b.pmore
   35d0c:	and	w1, w5, #0x7ff
   35d10:	mov	w0, #0x0                   	// #0
   35d14:	sub	w1, w1, #0x3be
   35d18:	cmp	w1, #0x7f
   35d1c:	b.hi	35e78 <__pow_finite@GLIBC_2.17+0x190>  // b.pmore
   35d20:	mov	x2, #0x6aab00000000        	// #117282671951872
   35d24:	adrp	x5, 8a000 <f64xsubf128@@GLIBC_2.28+0x36280>
   35d28:	movk	x2, #0xc019, lsl #48
   35d2c:	add	x2, x3, x2
   35d30:	and	x6, x2, #0xfff0000000000000
   35d34:	add	x1, x5, #0xf58
   35d38:	ubfx	x4, x2, #45, #7
   35d3c:	asr	x2, x2, #52
   35d40:	sub	x3, x3, x6
   35d44:	ldr	d3, [x5, #3928]
   35d48:	add	x6, x1, x4, lsl #5
   35d4c:	scvtf	d4, w2
   35d50:	fmov	d2, #-1.000000000000000000e+00
   35d54:	ldr	d7, [x1, #16]
   35d58:	ldp	d19, d18, [x1, #48]
   35d5c:	ldr	d0, [x6, #72]
   35d60:	ldr	d5, [x6, #88]
   35d64:	fmadd	d5, d4, d3, d5
   35d68:	fmov	d3, x3
   35d6c:	ldr	d6, [x1, #64]
   35d70:	fmadd	d2, d3, d0, d2
   35d74:	ldr	d0, [x1, #8]
   35d78:	ldp	d16, d17, [x1, #32]
   35d7c:	ldr	d3, [x6, #96]
   35d80:	fmadd	d4, d4, d0, d3
   35d84:	ldr	d0, [x1, #24]
   35d88:	fmadd	d18, d2, d6, d18
   35d8c:	fmul	d7, d2, d7
   35d90:	fadd	d6, d2, d5
   35d94:	fmadd	d0, d2, d16, d0
   35d98:	fmadd	d17, d2, d19, d17
   35d9c:	fmul	d16, d2, d7
   35da0:	fsub	d3, d5, d6
   35da4:	fnmsub	d7, d7, d2, d16
   35da8:	fmadd	d17, d16, d18, d17
   35dac:	fadd	d5, d6, d16
   35db0:	fadd	d3, d3, d2
   35db4:	fmul	d2, d2, d16
   35db8:	fsub	d6, d6, d5
   35dbc:	fadd	d3, d4, d3
   35dc0:	fmadd	d0, d16, d17, d0
   35dc4:	fadd	d6, d6, d16
   35dc8:	fadd	d3, d3, d7
   35dcc:	fadd	d3, d3, d6
   35dd0:	fmadd	d2, d2, d0, d3
   35dd4:	fadd	d0, d5, d2
   35dd8:	fmul	d3, d1, d0
   35ddc:	fsub	d5, d5, d0
   35de0:	fnmsub	d0, d1, d0, d3
   35de4:	fmov	x2, d3
   35de8:	fadd	d2, d5, d2
   35dec:	ubfx	x4, x2, #52, #11
   35df0:	fmadd	d0, d1, d2, d0
   35df4:	sub	w1, w4, #0x3c9
   35df8:	cmp	w1, #0x3e
   35dfc:	b.hi	35edc <__pow_finite@GLIBC_2.17+0x1f4>  // b.pmore
   35e00:	adrp	x2, 89000 <f64xsubf128@@GLIBC_2.28+0x35280>
   35e04:	add	x1, x2, #0x9c8
   35e08:	ldr	d2, [x2, #2504]
   35e0c:	ldp	d17, d6, [x1, #16]
   35e10:	fmul	d2, d3, d2
   35e14:	ldp	d5, d16, [x1, #32]
   35e18:	ldp	d4, d7, [x1, #48]
   35e1c:	frinta	d1, d2
   35e20:	fcvtas	x2, d2
   35e24:	fmadd	d3, d1, d17, d3
   35e28:	ubfiz	x3, x2, #1, #7
   35e2c:	add	x0, x2, x0
   35e30:	add	x5, x3, #0xe
   35e34:	add	x3, x3, #0xf
   35e38:	fmadd	d3, d1, d6, d3
   35e3c:	ldr	d6, [x1, x5, lsl #3]
   35e40:	ldr	x1, [x1, x3, lsl #3]
   35e44:	fadd	d1, d0, d3
   35e48:	add	x0, x1, x0, lsl #45
   35e4c:	fmadd	d2, d1, d16, d5
   35e50:	fmadd	d0, d1, d7, d4
   35e54:	fmul	d3, d1, d1
   35e58:	fadd	d1, d1, d6
   35e5c:	fmul	d4, d3, d3
   35e60:	fmadd	d1, d3, d2, d1
   35e64:	fmadd	d1, d4, d0, d1
   35e68:	cbz	w4, 35ef0 <__pow_finite@GLIBC_2.17+0x208>
   35e6c:	fmov	d0, x0
   35e70:	fmadd	d0, d1, d0, d0
   35e74:	ret
   35e78:	lsl	x1, x4, #1
   35e7c:	mov	x0, #0xffdfffffffffffff    	// #-9007199254740993
   35e80:	sub	x7, x1, #0x1
   35e84:	cmp	x7, x0
   35e88:	b.cs	36054 <__pow_finite@GLIBC_2.17+0x36c>  // b.hs, b.nlast
   35e8c:	lsl	x1, x3, #1
   35e90:	sub	x7, x1, #0x1
   35e94:	cmp	x7, x0
   35e98:	b.cs	360b0 <__pow_finite@GLIBC_2.17+0x3c8>  // b.hs, b.nlast
   35e9c:	and	w1, w5, #0x7ff
   35ea0:	mov	w0, #0x0                   	// #0
   35ea4:	tbnz	x3, #63, 35f28 <__pow_finite@GLIBC_2.17+0x240>
   35ea8:	sub	w2, w1, #0x3be
   35eac:	cmp	w2, #0x7f
   35eb0:	b.ls	35f64 <__pow_finite@GLIBC_2.17+0x27c>  // b.plast
   35eb4:	mov	x0, #0x3ff0000000000000    	// #4607182418800017408
   35eb8:	cmp	x3, x0
   35ebc:	b.eq	36018 <__pow_finite@GLIBC_2.17+0x330>  // b.none
   35ec0:	cmp	w1, #0x3bd
   35ec4:	b.hi	35fe8 <__pow_finite@GLIBC_2.17+0x300>  // b.pmore
   35ec8:	cmp	x3, x0
   35ecc:	fmov	d2, #1.000000000000000000e+00
   35ed0:	b.hi	3604c <__pow_finite@GLIBC_2.17+0x364>  // b.pmore
   35ed4:	fsub	d0, d2, d1
   35ed8:	ret
   35edc:	tbnz	w1, #31, 36020 <__pow_finite@GLIBC_2.17+0x338>
   35ee0:	cmp	w4, #0x408
   35ee4:	b.ls	35f88 <__pow_finite@GLIBC_2.17+0x2a0>  // b.plast
   35ee8:	tbnz	x2, #63, 36004 <__pow_finite@GLIBC_2.17+0x31c>
   35eec:	b	51b38 <__exp2f_finite@GLIBC_2.17+0x50d0>
   35ef0:	tbz	w2, #31, 36104 <__pow_finite@GLIBC_2.17+0x41c>
   35ef4:	mov	x1, #0x3fe0000000000000    	// #4602678819172646912
   35ef8:	add	x0, x0, x1
   35efc:	fmov	d2, x0
   35f00:	fmov	d6, #1.000000000000000000e+00
   35f04:	fmul	d1, d1, d2
   35f08:	fadd	d0, d2, d1
   35f0c:	fabs	d3, d0
   35f10:	fcmpe	d3, d6
   35f14:	b.mi	35f90 <__pow_finite@GLIBC_2.17+0x2a8>  // b.first
   35f18:	mov	x0, #0x10000000000000      	// #4503599627370496
   35f1c:	fmov	d1, x0
   35f20:	fmul	d0, d0, d1
   35f24:	b	51b88 <__exp2f_finite@GLIBC_2.17+0x5120>
   35f28:	cmp	w1, #0x3fe
   35f2c:	b.le	35fe0 <__pow_finite@GLIBC_2.17+0x2f8>
   35f30:	cmp	w1, #0x433
   35f34:	b.gt	35f58 <__pow_finite@GLIBC_2.17+0x270>
   35f38:	mov	w0, #0x433                 	// #1075
   35f3c:	sub	w0, w0, w1
   35f40:	mov	x6, #0xffffffffffffffff    	// #-1
   35f44:	lsl	x6, x6, x0
   35f48:	bics	xzr, x4, x6
   35f4c:	b.ne	35fe0 <__pow_finite@GLIBC_2.17+0x2f8>  // b.any
   35f50:	lsr	x0, x4, x0
   35f54:	ubfiz	w0, w0, #18, #1
   35f58:	and	x3, x3, #0x7fffffffffffffff
   35f5c:	and	w6, w2, #0x7ff
   35f60:	b	35ea8 <__pow_finite@GLIBC_2.17+0x1c0>
   35f64:	cbnz	w6, 35d20 <__pow_finite@GLIBC_2.17+0x38>
   35f68:	mov	x1, #0x4330000000000000    	// #4841369599423283200
   35f6c:	fmov	d0, x1
   35f70:	mov	x3, #0xfcc0000000000000    	// #-234187180623265792
   35f74:	fmul	d2, d2, d0
   35f78:	fmov	x1, d2
   35f7c:	and	x1, x1, #0x7fffffffffffffff
   35f80:	add	x3, x1, x3
   35f84:	b	35d20 <__pow_finite@GLIBC_2.17+0x38>
   35f88:	mov	w4, #0x0                   	// #0
   35f8c:	b	35e00 <__pow_finite@GLIBC_2.17+0x118>
   35f90:	fcmpe	d0, #0.0
   35f94:	fmov	d5, #-1.000000000000000000e+00
   35f98:	fsub	d3, d2, d0
   35f9c:	and	x0, x0, #0x8000000000000000
   35fa0:	fmov	d2, x0
   35fa4:	mov	x0, #0x10000000000000      	// #4503599627370496
   35fa8:	fmov	d7, x0
   35fac:	fmov	d4, x0
   35fb0:	fcsel	d5, d5, d6, mi  // mi = first
   35fb4:	fadd	d1, d3, d1
   35fb8:	fmul	d4, d4, d7
   35fbc:	fadd	d6, d0, d5
   35fc0:	fsub	d3, d5, d6
   35fc4:	fadd	d0, d3, d0
   35fc8:	fadd	d1, d0, d1
   35fcc:	fadd	d0, d1, d6
   35fd0:	fsub	d0, d0, d5
   35fd4:	fcmp	d0, #0.0
   35fd8:	fcsel	d0, d0, d2, ne  // ne = any
   35fdc:	b	35f18 <__pow_finite@GLIBC_2.17+0x230>
   35fe0:	fmov	d0, d2
   35fe4:	b	51b68 <__exp2f_finite@GLIBC_2.17+0x5100>
   35fe8:	cmp	x3, x0
   35fec:	cset	w1, ls  // ls = plast
   35ff0:	cmp	w5, #0x7ff
   35ff4:	cset	w0, ls  // ls = plast
   35ff8:	cmp	w1, w0
   35ffc:	mov	w0, #0x0                   	// #0
   36000:	b.ne	35eec <__pow_finite@GLIBC_2.17+0x204>  // b.any
   36004:	b	51b18 <__exp2f_finite@GLIBC_2.17+0x50b0>
   36008:	eor	x4, x4, #0x8000000000000
   3600c:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
   36010:	cmp	x0, x4, lsl #1
   36014:	b.cc	3604c <__pow_finite@GLIBC_2.17+0x364>  // b.lo, b.ul, b.last
   36018:	fmov	d0, #1.000000000000000000e+00
   3601c:	ret
   36020:	fmov	d0, #1.000000000000000000e+00
   36024:	cmp	w0, #0x0
   36028:	fadd	d0, d3, d0
   3602c:	fneg	d1, d0
   36030:	fcsel	d0, d1, d0, ne  // ne = any
   36034:	ret
   36038:	eor	x3, x3, #0x8000000000000
   3603c:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
   36040:	fmov	d0, #1.000000000000000000e+00
   36044:	cmp	x0, x3, lsl #1
   36048:	b.cs	35e74 <__pow_finite@GLIBC_2.17+0x18c>  // b.hs, b.nlast
   3604c:	fadd	d0, d1, d2
   36050:	ret
   36054:	cbz	x1, 36038 <__pow_finite@GLIBC_2.17+0x350>
   36058:	mov	x0, #0x3ff0000000000000    	// #4607182418800017408
   3605c:	cmp	x3, x0
   36060:	b.eq	36008 <__pow_finite@GLIBC_2.17+0x320>  // b.none
   36064:	mov	x0, #0xffe0000000000000    	// #-9007199254740992
   36068:	lsl	x3, x3, #1
   3606c:	cmp	x1, x0
   36070:	ccmp	x3, x0, #0x2, eq  // eq = none
   36074:	b.hi	3604c <__pow_finite@GLIBC_2.17+0x364>  // b.pmore
   36078:	mov	x0, #0x7fe0000000000000    	// #9214364837600034816
   3607c:	fmov	d0, #1.000000000000000000e+00
   36080:	cmp	x3, x0
   36084:	b.eq	35e74 <__pow_finite@GLIBC_2.17+0x18c>  // b.none
   36088:	mvn	x0, x4
   3608c:	mov	x1, #0x7fdfffffffffffff    	// #9214364837600034815
   36090:	cmp	x3, x1
   36094:	movi	d0, #0x0
   36098:	lsr	x0, x0, #63
   3609c:	cset	w1, hi  // hi = pmore
   360a0:	cmp	w1, w0
   360a4:	b.ne	35e74 <__pow_finite@GLIBC_2.17+0x18c>  // b.any
   360a8:	fmul	d0, d1, d1
   360ac:	ret
   360b0:	fmul	d0, d2, d2
   360b4:	mov	w0, #0x0                   	// #0
   360b8:	tbnz	x3, #63, 360c8 <__pow_finite@GLIBC_2.17+0x3e0>
   360bc:	cbnz	x1, 36124 <__pow_finite@GLIBC_2.17+0x43c>
   360c0:	tbz	x4, #63, 35e74 <__pow_finite@GLIBC_2.17+0x18c>
   360c4:	b	51b48 <__exp2f_finite@GLIBC_2.17+0x50e0>
   360c8:	and	w5, w5, #0x7ff
   360cc:	sub	w2, w5, #0x3ff
   360d0:	cmp	w2, #0x34
   360d4:	b.hi	360bc <__pow_finite@GLIBC_2.17+0x3d4>  // b.pmore
   360d8:	mov	w2, #0x433                 	// #1075
   360dc:	sub	w5, w2, w5
   360e0:	mov	x2, #0xffffffffffffffff    	// #-1
   360e4:	lsl	x2, x2, x5
   360e8:	bics	xzr, x4, x2
   360ec:	b.ne	360bc <__pow_finite@GLIBC_2.17+0x3d4>  // b.any
   360f0:	lsr	x5, x4, x5
   360f4:	tbz	w5, #0, 360bc <__pow_finite@GLIBC_2.17+0x3d4>
   360f8:	fneg	d0, d0
   360fc:	mov	w0, #0x1                   	// #1
   36100:	b	360bc <__pow_finite@GLIBC_2.17+0x3d4>
   36104:	mov	x1, #0xc0f0000000000000    	// #-4544132024016830464
   36108:	add	x0, x0, x1
   3610c:	fmov	d2, x0
   36110:	mov	x0, #0x7f00000000000000    	// #9151314442816847872
   36114:	fmadd	d2, d1, d2, d2
   36118:	fmov	d0, x0
   3611c:	fmul	d0, d2, d0
   36120:	b	51ba0 <__exp2f_finite@GLIBC_2.17+0x5138>
   36124:	tbz	x4, #63, 35e74 <__pow_finite@GLIBC_2.17+0x18c>
   36128:	fmov	d1, #1.000000000000000000e+00
   3612c:	fdiv	d0, d1, d0
   36130:	ret
   36134:	nop

0000000000036138 <__remainder_finite@GLIBC_2.17>:
   36138:	stp	x29, x30, [sp, #-64]!
   3613c:	fmov	x1, d1
   36140:	fmov	x3, d0
   36144:	mov	x29, sp
   36148:	str	x19, [sp, #16]
   3614c:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   36150:	mov	w7, #0x7fdfffff            	// #2145386495
   36154:	stp	d8, d9, [sp, #32]
   36158:	asr	x6, x1, #32
   3615c:	ldr	x2, [x19, #4032]
   36160:	mov	w4, #0x7fefffff            	// #2146435071
   36164:	fmov	d9, d0
   36168:	fmov	x5, d1
   3616c:	ldr	x0, [x2]
   36170:	str	x0, [sp, #56]
   36174:	mov	x0, #0x0                   	// #0
   36178:	ubfx	x2, x1, #32, #31
   3617c:	ubfx	x0, x3, #32, #31
   36180:	cmp	w0, w7
   36184:	bfi	x1, x2, #32, #32
   36188:	ccmp	w2, w4, #0x0, le
   3618c:	b.le	361fc <__remainder_finite@GLIBC_2.17+0xc4>
   36190:	asr	x3, x3, #32
   36194:	mov	w1, #0x7fe00000            	// #2145386496
   36198:	and	w3, w3, #0x7ff00000
   3619c:	cmp	w3, w1
   361a0:	b.eq	362e8 <__remainder_finite@GLIBC_2.17+0x1b0>  // b.none
   361a4:	cbz	w2, 36330 <__remainder_finite@GLIBC_2.17+0x1f8>
   361a8:	mov	w1, #0x7fefffff            	// #2146435071
   361ac:	cmp	w0, w1
   361b0:	mov	w0, #0x7ff00000            	// #2146435072
   361b4:	ccmp	w2, w0, #0x0, le
   361b8:	b.gt	361d0 <__remainder_finite@GLIBC_2.17+0x98>
   361bc:	cmp	w2, w0
   361c0:	b.ne	3633c <__remainder_finite@GLIBC_2.17+0x204>  // b.any
   361c4:	fmov	x0, d1
   361c8:	fmov	d0, d9
   361cc:	cbz	w0, 361d8 <__remainder_finite@GLIBC_2.17+0xa0>
   361d0:	fmul	d0, d9, d1
   361d4:	fdiv	d0, d0, d0
   361d8:	ldr	x0, [x19, #4032]
   361dc:	ldr	x1, [sp, #56]
   361e0:	ldr	x0, [x0]
   361e4:	eor	x0, x1, x0
   361e8:	cbnz	x0, 364c8 <__remainder_finite@GLIBC_2.17+0x390>
   361ec:	ldr	x19, [sp, #16]
   361f0:	ldp	d8, d9, [sp, #32]
   361f4:	ldp	x29, x30, [sp], #64
   361f8:	ret
   361fc:	mov	w3, #0x34fffff             	// #55574527
   36200:	cmp	w2, w3
   36204:	b.le	362ac <__remainder_finite@GLIBC_2.17+0x174>
   36208:	mov	x8, #0x0                   	// #0
   3620c:	mov	x9, #0x0                   	// #0
   36210:	mrs	x10, fpcr
   36214:	mrs	x11, fpsr
   36218:	add	w3, w0, #0x100, lsl #12
   3621c:	ands	w12, w10, #0xc00000
   36220:	b.ne	3645c <__remainder_finite@GLIBC_2.17+0x324>  // b.any
   36224:	cmp	w2, w3
   36228:	b.gt	362a4 <__remainder_finite@GLIBC_2.17+0x16c>
   3622c:	adrp	x4, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36230:	mov	w3, #0x1                   	// #1
   36234:	movk	w3, #0xfeb0, lsl #16
   36238:	add	w3, w0, w3
   3623c:	cmp	w2, w3
   36240:	ldr	d4, [x4, #160]
   36244:	fmov	d2, x1
   36248:	b.lt	36344 <__remainder_finite@GLIBC_2.17+0x20c>  // b.tstop
   3624c:	fdiv	d6, d9, d2
   36250:	fmov	d5, #5.000000000000000000e-01
   36254:	bfi	x9, x2, #32, #32
   36258:	fmov	d7, #-5.000000000000000000e-01
   3625c:	fmov	d0, x9
   36260:	fsub	d1, d2, d0
   36264:	fadd	d3, d6, d4
   36268:	fsub	d4, d3, d4
   3626c:	fsub	d3, d4, d6
   36270:	fmsub	d0, d0, d4, d9
   36274:	fcmp	d3, d5
   36278:	fmsub	d0, d1, d4, d0
   3627c:	fccmp	d3, d7, #0x4, ne  // ne = any
   36280:	b.ne	36478 <__remainder_finite@GLIBC_2.17+0x340>  // b.any
   36284:	fmul	d5, d2, d5
   36288:	fabs	d1, d0
   3628c:	fcmpe	d1, d5
   36290:	b.le	362a0 <__remainder_finite@GLIBC_2.17+0x168>
   36294:	fcmpe	d6, d4
   36298:	b.le	36434 <__remainder_finite@GLIBC_2.17+0x2fc>
   3629c:	fsub	d0, d0, d2
   362a0:	cbnz	w12, 3646c <__remainder_finite@GLIBC_2.17+0x334>
   362a4:	msr	fpsr, x11
   362a8:	b	361d8 <__remainder_finite@GLIBC_2.17+0xa0>
   362ac:	orr	w2, w2, w5
   362b0:	cbz	w2, 361d0 <__remainder_finite@GLIBC_2.17+0x98>
   362b4:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   362b8:	fabs	d1, d1
   362bc:	ldr	d9, [x0, #152]
   362c0:	fmul	d8, d1, d9
   362c4:	fmov	d1, d8
   362c8:	bl	36138 <__remainder_finite@GLIBC_2.17>
   362cc:	fmov	d1, d8
   362d0:	fmul	d0, d9, d0
   362d4:	bl	36138 <__remainder_finite@GLIBC_2.17>
   362d8:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   362dc:	ldr	d1, [x0, #144]
   362e0:	fmul	d0, d0, d1
   362e4:	b	361d8 <__remainder_finite@GLIBC_2.17+0xa0>
   362e8:	cmp	w2, w4
   362ec:	b.gt	361a8 <__remainder_finite@GLIBC_2.17+0x70>
   362f0:	cbz	w2, 36498 <__remainder_finite@GLIBC_2.17+0x360>
   362f4:	fabs	d8, d1
   362f8:	fmov	d0, #5.000000000000000000e-01
   362fc:	fmul	d0, d9, d0
   36300:	fmov	d1, d8
   36304:	bl	36138 <__remainder_finite@GLIBC_2.17>
   36308:	fadd	d0, d0, d0
   3630c:	fabs	d1, d0
   36310:	fabd	d2, d1, d8
   36314:	fcmpe	d2, d1
   36318:	b.ge	361d8 <__remainder_finite@GLIBC_2.17+0xa0>  // b.tcont
   3631c:	fcmp	d8, d1
   36320:	b.ne	364a0 <__remainder_finite@GLIBC_2.17+0x368>  // b.any
   36324:	movi	d2, #0x0
   36328:	fmul	d0, d9, d2
   3632c:	b	361d8 <__remainder_finite@GLIBC_2.17+0xa0>
   36330:	cbz	w5, 361d0 <__remainder_finite@GLIBC_2.17+0x98>
   36334:	cmp	w0, w4
   36338:	b.gt	361d0 <__remainder_finite@GLIBC_2.17+0x98>
   3633c:	fmov	d0, d9
   36340:	b	361d8 <__remainder_finite@GLIBC_2.17+0xa0>
   36344:	fmov	d0, #1.000000000000000000e+00
   36348:	bfi	x8, x2, #32, #32
   3634c:	mov	w3, #0x1400000             	// #20971520
   36350:	and	w6, w6, #0x7ff00000
   36354:	fdiv	d0, d0, d2
   36358:	add	w6, w6, w3
   3635c:	sub	w0, w0, w6
   36360:	fmov	d1, d9
   36364:	and	w0, w0, #0xfff00000
   36368:	cmp	w0, #0x0
   3636c:	fmov	x1, d0
   36370:	fmov	d0, x8
   36374:	fsub	d0, d2, d0
   36378:	asr	x14, x1, #32
   3637c:	mov	w9, w14
   36380:	fmov	x3, d0
   36384:	asr	x13, x3, #32
   36388:	mov	w4, w13
   3638c:	b.le	363e8 <__remainder_finite@GLIBC_2.17+0x2b0>
   36390:	sub	w7, w9, w0
   36394:	add	w5, w2, w0
   36398:	cmp	w4, #0x0
   3639c:	add	w0, w4, w0
   363a0:	bfi	x1, x7, #32, #32
   363a4:	fmov	d0, x1
   363a8:	bfi	x8, x5, #32, #32
   363ac:	fmov	d3, x8
   363b0:	fmul	d0, d1, d0
   363b4:	csel	w0, w0, wzr, ne  // ne = any
   363b8:	bfi	x3, x0, #32, #32
   363bc:	fadd	d0, d0, d4
   363c0:	fsub	d0, d0, d4
   363c4:	fmsub	d1, d3, d0, d1
   363c8:	fmov	d3, x3
   363cc:	fmsub	d1, d3, d0, d1
   363d0:	fmov	x0, d1
   363d4:	asr	x0, x0, #32
   363d8:	and	w0, w0, #0x7ff00000
   363dc:	sub	w0, w0, w6
   363e0:	cmp	w0, #0x0
   363e4:	b.gt	36390 <__remainder_finite@GLIBC_2.17+0x258>
   363e8:	bfi	x1, x14, #32, #32
   363ec:	fmov	d0, x1
   363f0:	bfi	x8, x2, #32, #32
   363f4:	fmov	d8, x8
   363f8:	fmul	d3, d1, d0
   363fc:	bfi	x3, x13, #32, #32
   36400:	fmov	d5, x3
   36404:	fmov	d7, #5.000000000000000000e-01
   36408:	fmul	d7, d2, d7
   3640c:	fadd	d6, d3, d4
   36410:	fsub	d6, d6, d4
   36414:	fmsub	d1, d8, d6, d1
   36418:	fmsub	d0, d5, d6, d1
   3641c:	fabs	d1, d0
   36420:	fcmpe	d1, d7
   36424:	b.mi	36478 <__remainder_finite@GLIBC_2.17+0x340>  // b.first
   36428:	b.le	36440 <__remainder_finite@GLIBC_2.17+0x308>
   3642c:	fcmpe	d3, d6
   36430:	b.pl	3629c <__remainder_finite@GLIBC_2.17+0x164>  // b.nfrst
   36434:	fadd	d0, d0, d2
   36438:	cbz	w12, 362a4 <__remainder_finite@GLIBC_2.17+0x16c>
   3643c:	b	3646c <__remainder_finite@GLIBC_2.17+0x334>
   36440:	fdiv	d1, d0, d2
   36444:	fadd	d1, d1, d4
   36448:	fsub	d1, d1, d4
   3644c:	fmsub	d0, d8, d1, d0
   36450:	fmsub	d0, d5, d1, d0
   36454:	cbz	w12, 362a4 <__remainder_finite@GLIBC_2.17+0x16c>
   36458:	b	3646c <__remainder_finite@GLIBC_2.17+0x334>
   3645c:	eor	w4, w12, w10
   36460:	msr	fpcr, x4
   36464:	cmp	w2, w3
   36468:	b.le	3622c <__remainder_finite@GLIBC_2.17+0xf4>
   3646c:	msr	fpcr, x10
   36470:	msr	fpsr, x11
   36474:	b	361d8 <__remainder_finite@GLIBC_2.17+0xa0>
   36478:	fcmp	d0, #0.0
   3647c:	b.ne	362a0 <__remainder_finite@GLIBC_2.17+0x168>  // b.any
   36480:	fcmpe	d9, #0.0
   36484:	b.le	364b8 <__remainder_finite@GLIBC_2.17+0x380>
   36488:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3648c:	ldr	d0, [x0, #136]
   36490:	cbz	w12, 362a4 <__remainder_finite@GLIBC_2.17+0x16c>
   36494:	b	3646c <__remainder_finite@GLIBC_2.17+0x334>
   36498:	cbnz	w5, 362f4 <__remainder_finite@GLIBC_2.17+0x1bc>
   3649c:	b	361d0 <__remainder_finite@GLIBC_2.17+0x98>
   364a0:	fcmpe	d0, #0.0
   364a4:	b.le	364b0 <__remainder_finite@GLIBC_2.17+0x378>
   364a8:	fsub	d0, d0, d8
   364ac:	b	361d8 <__remainder_finite@GLIBC_2.17+0xa0>
   364b0:	fadd	d0, d0, d8
   364b4:	b	361d8 <__remainder_finite@GLIBC_2.17+0xa0>
   364b8:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   364bc:	ldr	d0, [x0, #128]
   364c0:	cbz	w12, 362a4 <__remainder_finite@GLIBC_2.17+0x16c>
   364c4:	b	3646c <__remainder_finite@GLIBC_2.17+0x334>
   364c8:	bl	ba70 <__stack_chk_fail@plt>
   364cc:	nop
   364d0:	frintx	d2, d1
   364d4:	fcmp	d2, d1
   364d8:	b.ne	36500 <__remainder_finite@GLIBC_2.17+0x3c8>  // b.any
   364dc:	mov	x0, #0xbd0000000000        	// #207807697649664
   364e0:	movk	x0, #0x40ef, lsl #48
   364e4:	fmov	d2, x0
   364e8:	fcmpe	d1, d2
   364ec:	b.le	364f8 <__remainder_finite@GLIBC_2.17+0x3c0>
   364f0:	mov	w0, #0xfde8                	// #65000
   364f4:	b	3d978 <modf@@GLIBC_2.17+0x88>
   364f8:	mov	w0, #0xffff0218            	// #-65000
   364fc:	b	3d978 <modf@@GLIBC_2.17+0x88>
   36500:	fsub	d1, d1, d1
   36504:	fdiv	d0, d1, d1
   36508:	ret
   3650c:	nop

0000000000036510 <__scalb_finite@GLIBC_2.17>:
   36510:	fcmp	d0, d0
   36514:	fmov	d2, d0
   36518:	b.vs	3656c <__scalb_finite@GLIBC_2.17+0x5c>
   3651c:	fabs	d4, d1
   36520:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   36524:	fmov	d3, x0
   36528:	fcmp	d4, d3
   3652c:	b.hi	3655c <__scalb_finite@GLIBC_2.17+0x4c>  // b.pmore
   36530:	mov	x0, #0x41e0000000000000    	// #4746794007248502784
   36534:	fmov	d3, x0
   36538:	fcmpe	d4, d3
   3653c:	b.ge	36554 <__scalb_finite@GLIBC_2.17+0x44>  // b.tcont
   36540:	fcvtzs	w0, d1
   36544:	scvtf	d3, w0
   36548:	fcmp	d3, d1
   3654c:	b.ne	36554 <__scalb_finite@GLIBC_2.17+0x44>  // b.any
   36550:	b	3d978 <modf@@GLIBC_2.17+0x88>
   36554:	fmov	d0, d2
   36558:	b	364d0 <__remainder_finite@GLIBC_2.17+0x398>
   3655c:	fcmp	d1, d1
   36560:	b.vs	3656c <__scalb_finite@GLIBC_2.17+0x5c>
   36564:	fcmpe	d1, #0.0
   36568:	b.le	36574 <__scalb_finite@GLIBC_2.17+0x64>
   3656c:	fmul	d0, d2, d1
   36570:	ret
   36574:	fcmp	d0, #0.0
   36578:	b.eq	36570 <__scalb_finite@GLIBC_2.17+0x60>  // b.none
   3657c:	fneg	d2, d0
   36580:	fdiv	d0, d2, d1
   36584:	ret

0000000000036588 <__sinh_finite@GLIBC_2.17>:
   36588:	stp	x29, x30, [sp, #-32]!
   3658c:	fmov	x0, d0
   36590:	mov	w1, #0x7fefffff            	// #2146435071
   36594:	mov	x29, sp
   36598:	str	x19, [sp, #16]
   3659c:	fmov	d2, d0
   365a0:	ubfx	x19, x0, #32, #31
   365a4:	cmp	w19, w1
   365a8:	b.gt	366f8 <__sinh_finite@GLIBC_2.17+0x170>
   365ac:	lsr	x2, x0, #32
   365b0:	fmov	d0, #5.000000000000000000e-01
   365b4:	cmp	w2, #0x0
   365b8:	str	d8, [sp, #24]
   365bc:	fmov	d8, #-5.000000000000000000e-01
   365c0:	mov	w1, #0x4035ffff            	// #1077280767
   365c4:	fcsel	d8, d0, d8, ge  // ge = tcont
   365c8:	cmp	w19, w1
   365cc:	b.gt	36618 <__sinh_finite@GLIBC_2.17+0x90>
   365d0:	mov	w0, #0x3e2fffff            	// #1043333119
   365d4:	fabs	d1, d2
   365d8:	cmp	w19, w0
   365dc:	b.le	3666c <__sinh_finite@GLIBC_2.17+0xe4>
   365e0:	fmov	d0, d1
   365e4:	bl	38968 <expm1@@GLIBC_2.17>
   365e8:	mov	w0, #0x3fefffff            	// #1072693247
   365ec:	cmp	w19, w0
   365f0:	b.le	366a4 <__sinh_finite@GLIBC_2.17+0x11c>
   365f4:	fmov	d1, #1.000000000000000000e+00
   365f8:	fadd	d1, d0, d1
   365fc:	fdiv	d1, d0, d1
   36600:	fadd	d0, d1, d0
   36604:	fmul	d0, d0, d8
   36608:	ldr	d8, [sp, #24]
   3660c:	ldr	x19, [sp, #16]
   36610:	ldp	x29, x30, [sp], #32
   36614:	ret
   36618:	mov	w1, #0x2e41                	// #11841
   3661c:	movk	w1, #0x4086, lsl #16
   36620:	cmp	w19, w1
   36624:	b.le	36708 <__sinh_finite@GLIBC_2.17+0x180>
   36628:	mov	w1, #0x33cd                	// #13261
   3662c:	movk	w1, #0x4086, lsl #16
   36630:	cmp	w19, w1
   36634:	b.le	366d0 <__sinh_finite@GLIBC_2.17+0x148>
   36638:	add	w1, w1, #0x1
   3663c:	cmp	w19, w1
   36640:	mov	w1, #0xf87d                	// #63613
   36644:	movk	w1, #0x8fb9, lsl #16
   36648:	ccmp	w0, w1, #0x2, eq  // eq = none
   3664c:	b.ls	366d0 <__sinh_finite@GLIBC_2.17+0x148>  // b.plast
   36650:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36654:	ldr	d8, [sp, #24]
   36658:	ldr	x19, [sp, #16]
   3665c:	ldr	d1, [x0, #168]
   36660:	ldp	x29, x30, [sp], #32
   36664:	fmul	d0, d2, d1
   36668:	ret
   3666c:	mov	x0, #0x10000000000000      	// #4503599627370496
   36670:	fmov	d0, x0
   36674:	fcmpe	d1, d0
   36678:	b.pl	36680 <__sinh_finite@GLIBC_2.17+0xf8>  // b.nfrst
   3667c:	fmul	d0, d2, d2
   36680:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36684:	fmov	d0, d2
   36688:	fmov	d3, #1.000000000000000000e+00
   3668c:	ldr	d4, [x0, #168]
   36690:	fadd	d2, d2, d4
   36694:	fcmpe	d2, d3
   36698:	b.gt	366e8 <__sinh_finite@GLIBC_2.17+0x160>
   3669c:	fmov	d0, d1
   366a0:	bl	38968 <expm1@@GLIBC_2.17>
   366a4:	fmov	d2, #1.000000000000000000e+00
   366a8:	fmul	d1, d0, d0
   366ac:	fmov	d3, #2.000000000000000000e+00
   366b0:	fadd	d2, d0, d2
   366b4:	ldr	x19, [sp, #16]
   366b8:	fdiv	d1, d1, d2
   366bc:	fnmsub	d0, d0, d3, d1
   366c0:	fmul	d0, d0, d8
   366c4:	ldr	d8, [sp, #24]
   366c8:	ldp	x29, x30, [sp], #32
   366cc:	ret
   366d0:	fabs	d2, d2
   366d4:	fmov	d0, #5.000000000000000000e-01
   366d8:	fmul	d0, d2, d0
   366dc:	bl	333e8 <__exp_finite@GLIBC_2.17>
   366e0:	fmul	d8, d8, d0
   366e4:	fmul	d0, d8, d0
   366e8:	ldr	x19, [sp, #16]
   366ec:	ldr	d8, [sp, #24]
   366f0:	ldp	x29, x30, [sp], #32
   366f4:	ret
   366f8:	fadd	d0, d0, d0
   366fc:	ldr	x19, [sp, #16]
   36700:	ldp	x29, x30, [sp], #32
   36704:	ret
   36708:	fabs	d0, d2
   3670c:	bl	333e8 <__exp_finite@GLIBC_2.17>
   36710:	fmul	d0, d0, d8
   36714:	ldr	d8, [sp, #24]
   36718:	b	3660c <__sinh_finite@GLIBC_2.17+0x84>
   3671c:	nop

0000000000036720 <__sqrt_finite@GLIBC_2.17>:
   36720:	fsqrt	d0, d0
   36724:	ret
   36728:	stp	x29, x30, [sp, #-128]!
   3672c:	fmov	d1, #5.000000000000000000e-01
   36730:	mov	x29, sp
   36734:	stp	x19, x20, [sp, #16]
   36738:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3673c:	fcmpe	d0, d1
   36740:	ldr	x1, [x19, #4032]
   36744:	mov	x20, x0
   36748:	stp	d8, d9, [sp, #32]
   3674c:	fmov	d8, d0
   36750:	ldr	x0, [x1]
   36754:	str	x0, [sp, #120]
   36758:	mov	x0, #0x0                   	// #0
   3675c:	b.mi	36930 <__sqrt_finite@GLIBC_2.17+0x210>  // b.first
   36760:	fmov	d1, #1.500000000000000000e+00
   36764:	fcmpe	d0, d1
   36768:	b.ls	36950 <__sqrt_finite@GLIBC_2.17+0x230>  // b.plast
   3676c:	fmov	d0, #6.500000000000000000e+00
   36770:	fcmpe	d8, d0
   36774:	b.mi	368cc <__sqrt_finite@GLIBC_2.17+0x1ac>  // b.first
   36778:	fmov	d0, #1.200000000000000000e+01
   3677c:	str	xzr, [sp, #112]
   36780:	stp	d10, d11, [sp, #48]
   36784:	fcmpe	d8, d0
   36788:	stp	d12, d13, [sp, #64]
   3678c:	str	d14, [sp, #80]
   36790:	b.mi	36964 <__sqrt_finite@GLIBC_2.17+0x244>  // b.first
   36794:	movi	d11, #0x0
   36798:	fmov	d13, #1.000000000000000000e+00
   3679c:	fmov	d12, d11
   367a0:	frinta	d9, d8
   367a4:	fmov	d0, d8
   367a8:	add	x0, sp, #0x6c
   367ac:	bl	3da60 <frexp@@GLIBC_2.17>
   367b0:	fsub	d14, d8, d9
   367b4:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   367b8:	ldr	d1, [x0, #176]
   367bc:	fcmpe	d0, d1
   367c0:	b.mi	3691c <__sqrt_finite@GLIBC_2.17+0x1fc>  // b.first
   367c4:	ldr	w1, [sp, #108]
   367c8:	fcvtzs	w0, d9
   367cc:	fmov	d1, d8
   367d0:	mul	w0, w0, w1
   367d4:	str	w0, [x20]
   367d8:	bl	35ce8 <__pow_finite@GLIBC_2.17>
   367dc:	fmov	d10, d0
   367e0:	ldr	w0, [sp, #108]
   367e4:	scvtf	d1, w0
   367e8:	fmul	d0, d1, d14
   367ec:	bl	42150 <__exp2_finite@GLIBC_2.17>
   367f0:	fmov	d9, d0
   367f4:	fneg	d0, d8
   367f8:	fmul	d9, d10, d9
   367fc:	bl	333e8 <__exp_finite@GLIBC_2.17>
   36800:	fmov	d1, d0
   36804:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36808:	fmov	d0, d8
   3680c:	ldr	d10, [x0, #184]
   36810:	fmul	d9, d9, d1
   36814:	fdiv	d10, d10, d8
   36818:	fsqrt	d10, d10
   3681c:	fmul	d9, d9, d10
   36820:	fdiv	d9, d9, d13
   36824:	bl	35a50 <__log_finite@GLIBC_2.17>
   36828:	fmul	d1, d8, d8
   3682c:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36830:	fnmsub	d0, d0, d12, d11
   36834:	ldr	d2, [x0, #192]
   36838:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3683c:	ldr	d7, [x0, #200]
   36840:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36844:	fdiv	d2, d2, d1
   36848:	ldr	d6, [x0, #208]
   3684c:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36850:	ldr	d5, [x0, #216]
   36854:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36858:	ldr	d4, [x0, #224]
   3685c:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   36860:	movk	x0, #0x3fb5, lsl #48
   36864:	fmov	d3, x0
   36868:	fadd	d2, d2, d7
   3686c:	fdiv	d2, d2, d1
   36870:	fsub	d2, d2, d6
   36874:	fdiv	d2, d2, d1
   36878:	fadd	d2, d2, d5
   3687c:	fdiv	d2, d2, d1
   36880:	fsub	d2, d2, d4
   36884:	fdiv	d2, d2, d1
   36888:	fadd	d2, d2, d3
   3688c:	fdiv	d8, d2, d8
   36890:	fadd	d0, d8, d0
   36894:	bl	38968 <expm1@@GLIBC_2.17>
   36898:	fmadd	d0, d9, d0, d9
   3689c:	ldp	d10, d11, [sp, #48]
   368a0:	ldp	d12, d13, [sp, #64]
   368a4:	ldr	d14, [sp, #80]
   368a8:	ldr	x19, [x19, #4032]
   368ac:	ldr	x1, [sp, #120]
   368b0:	ldr	x0, [x19]
   368b4:	eor	x0, x1, x0
   368b8:	cbnz	x0, 36998 <__sqrt_finite@GLIBC_2.17+0x278>
   368bc:	ldp	x19, x20, [sp, #16]
   368c0:	ldp	d8, d9, [sp, #32]
   368c4:	ldp	x29, x30, [sp], #128
   368c8:	ret
   368cc:	fsub	d0, d8, d1
   368d0:	movi	d1, #0x0
   368d4:	str	wzr, [x20]
   368d8:	add	x1, sp, #0x70
   368dc:	frintp	d0, d0
   368e0:	fsub	d9, d8, d0
   368e4:	fcvtzs	w0, d0
   368e8:	fmov	d0, d9
   368ec:	bl	3dc88 <ldexp@@GLIBC_2.17+0x1b0>
   368f0:	fmov	d8, d0
   368f4:	fmov	d0, d9
   368f8:	add	x0, sp, #0x6c
   368fc:	bl	35278 <__lgamma_r_finite@GLIBC_2.17>
   36900:	bl	333e8 <__exp_finite@GLIBC_2.17>
   36904:	fmul	d8, d8, d0
   36908:	ldr	d1, [sp, #112]
   3690c:	fmov	d2, #1.000000000000000000e+00
   36910:	fadd	d0, d1, d2
   36914:	fmul	d0, d0, d8
   36918:	b	368a8 <__sqrt_finite@GLIBC_2.17+0x188>
   3691c:	ldr	w0, [sp, #108]
   36920:	fadd	d0, d0, d0
   36924:	sub	w1, w0, #0x1
   36928:	str	w1, [sp, #108]
   3692c:	b	367c8 <__sqrt_finite@GLIBC_2.17+0xa8>
   36930:	fmov	d0, #1.000000000000000000e+00
   36934:	add	x0, sp, #0x70
   36938:	str	wzr, [x20]
   3693c:	fadd	d0, d8, d0
   36940:	bl	35278 <__lgamma_r_finite@GLIBC_2.17>
   36944:	bl	333e8 <__exp_finite@GLIBC_2.17>
   36948:	fdiv	d0, d0, d8
   3694c:	b	368a8 <__sqrt_finite@GLIBC_2.17+0x188>
   36950:	add	x0, sp, #0x70
   36954:	str	wzr, [x20]
   36958:	bl	35278 <__lgamma_r_finite@GLIBC_2.17>
   3695c:	bl	333e8 <__exp_finite@GLIBC_2.17>
   36960:	b	368a8 <__sqrt_finite@GLIBC_2.17+0x188>
   36964:	fsub	d0, d0, d8
   36968:	add	x1, sp, #0x70
   3696c:	frintp	d0, d0
   36970:	fadd	d1, d8, d0
   36974:	fcvtzs	w0, d0
   36978:	fsub	d0, d1, d0
   3697c:	fsub	d12, d8, d0
   36980:	fmov	d8, d1
   36984:	fmov	d1, d12
   36988:	bl	3dc88 <ldexp@@GLIBC_2.17+0x1b0>
   3698c:	fmov	d13, d0
   36990:	ldr	d11, [sp, #112]
   36994:	b	367a0 <__sqrt_finite@GLIBC_2.17+0x80>
   36998:	stp	d10, d11, [sp, #48]
   3699c:	stp	d12, d13, [sp, #64]
   369a0:	str	d14, [sp, #80]
   369a4:	bl	ba70 <__stack_chk_fail@plt>

00000000000369a8 <__gamma_r_finite@GLIBC_2.17>:
   369a8:	stp	x29, x30, [sp, #-80]!
   369ac:	mov	x29, sp
   369b0:	stp	x19, x20, [sp, #16]
   369b4:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   369b8:	mov	x19, x0
   369bc:	ldr	x1, [x20, #4032]
   369c0:	stp	d8, d9, [sp, #48]
   369c4:	fmov	d8, d0
   369c8:	ldr	x0, [x1]
   369cc:	str	x0, [sp, #72]
   369d0:	mov	x0, #0x0                   	// #0
   369d4:	fmov	x0, d0
   369d8:	ubfx	x2, x0, #32, #31
   369dc:	orr	w2, w2, w0
   369e0:	cbz	w2, 36b60 <__gamma_r_finite@GLIBC_2.17+0x1b8>
   369e4:	lsr	x1, x0, #32
   369e8:	tbnz	w1, #31, 36b70 <__gamma_r_finite@GLIBC_2.17+0x1c8>
   369ec:	and	w1, w1, #0x7ff00000
   369f0:	mov	w0, #0x7ff00000            	// #2146435072
   369f4:	cmp	w1, w0
   369f8:	b.eq	36bb4 <__gamma_r_finite@GLIBC_2.17+0x20c>  // b.none
   369fc:	mov	x0, #0x800000000000        	// #140737488355328
   36a00:	movk	x0, #0x4065, lsl #48
   36a04:	fmov	d0, x0
   36a08:	fcmpe	d8, d0
   36a0c:	b.ge	36acc <__gamma_r_finite@GLIBC_2.17+0x124>  // b.tcont
   36a10:	stp	x21, x22, [sp, #32]
   36a14:	mrs	x21, fpcr
   36a18:	ands	w22, w21, #0xc00000
   36a1c:	b.ne	36c5c <__gamma_r_finite@GLIBC_2.17+0x2b4>  // b.any
   36a20:	fcmpe	d8, #0.0
   36a24:	b.gt	36b1c <__gamma_r_finite@GLIBC_2.17+0x174>
   36a28:	mov	x0, #0xbc90000000000000    	// #-4859383997932765184
   36a2c:	fmov	d0, x0
   36a30:	fcmpe	d8, d0
   36a34:	b.ge	36b00 <__gamma_r_finite@GLIBC_2.17+0x158>  // b.tcont
   36a38:	frintz	d0, d8
   36a3c:	fmov	d3, #5.000000000000000000e-01
   36a40:	mov	x0, #0xc067000000000000    	// #-4582694095826190336
   36a44:	fmov	d2, x0
   36a48:	mov	w0, #0x1                   	// #1
   36a4c:	fmul	d1, d0, d3
   36a50:	frintz	d1, d1
   36a54:	fadd	d1, d1, d1
   36a58:	fcmp	d1, d0
   36a5c:	cneg	w0, w0, eq  // eq = none
   36a60:	fcmpe	d8, d2
   36a64:	str	w0, [x19]
   36a68:	b.hi	36bc0 <__gamma_r_finite@GLIBC_2.17+0x218>  // b.pmore
   36a6c:	mov	x1, #0x10000000000000      	// #4503599627370496
   36a70:	fmov	d0, x1
   36a74:	fmul	d0, d0, d0
   36a78:	fmov	d2, d0
   36a7c:	nop
   36a80:	cbnz	w22, 36c68 <__gamma_r_finite@GLIBC_2.17+0x2c0>
   36a84:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   36a88:	fmov	d1, x0
   36a8c:	fcmp	d2, d1
   36a90:	b.le	36a9c <__gamma_r_finite@GLIBC_2.17+0xf4>
   36a94:	fcmp	d8, #0.0
   36a98:	b.ne	36b3c <__gamma_r_finite@GLIBC_2.17+0x194>  // b.any
   36a9c:	fcmp	d0, #0.0
   36aa0:	b.ne	36b14 <__gamma_r_finite@GLIBC_2.17+0x16c>  // b.any
   36aa4:	ldr	w1, [x19]
   36aa8:	mov	x0, #0x10000000000000      	// #4503599627370496
   36aac:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   36ab0:	fmov	d1, x0
   36ab4:	fmov	d8, x2
   36ab8:	bif	v0.8b, v1.8b, v8.8b
   36abc:	tbnz	w1, #31, 36b50 <__gamma_r_finite@GLIBC_2.17+0x1a8>
   36ac0:	fmul	d0, d0, d1
   36ac4:	ldp	x21, x22, [sp, #32]
   36ac8:	b	36adc <__gamma_r_finite@GLIBC_2.17+0x134>
   36acc:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
   36ad0:	fmov	d0, x1
   36ad4:	str	wzr, [x19]
   36ad8:	fmul	d0, d0, d0
   36adc:	ldr	x0, [x20, #4032]
   36ae0:	ldr	x1, [sp, #72]
   36ae4:	ldr	x0, [x0]
   36ae8:	eor	x0, x1, x0
   36aec:	cbnz	x0, 36c70 <__gamma_r_finite@GLIBC_2.17+0x2c8>
   36af0:	ldp	x19, x20, [sp, #16]
   36af4:	ldp	d8, d9, [sp, #48]
   36af8:	ldp	x29, x30, [sp], #80
   36afc:	ret
   36b00:	fmov	d0, #1.000000000000000000e+00
   36b04:	str	wzr, [x19]
   36b08:	fdiv	d0, d0, d8
   36b0c:	fabs	d2, d0
   36b10:	b	36a80 <__gamma_r_finite@GLIBC_2.17+0xd8>
   36b14:	ldp	x21, x22, [sp, #32]
   36b18:	b	36adc <__gamma_r_finite@GLIBC_2.17+0x134>
   36b1c:	fmov	d0, d8
   36b20:	str	wzr, [x19]
   36b24:	add	x0, sp, #0x44
   36b28:	bl	36728 <__sqrt_finite@GLIBC_2.17+0x8>
   36b2c:	ldr	w0, [sp, #68]
   36b30:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   36b34:	fabs	d2, d0
   36b38:	b	36a80 <__gamma_r_finite@GLIBC_2.17+0xd8>
   36b3c:	ldr	w0, [x19]
   36b40:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   36b44:	fmov	d8, x1
   36b48:	bif	v0.8b, v1.8b, v8.8b
   36b4c:	tbz	w0, #31, 36ac0 <__gamma_r_finite@GLIBC_2.17+0x118>
   36b50:	fneg	d0, d0
   36b54:	ldp	x21, x22, [sp, #32]
   36b58:	fnmul	d0, d0, d1
   36b5c:	b	36adc <__gamma_r_finite@GLIBC_2.17+0x134>
   36b60:	fmov	d0, #1.000000000000000000e+00
   36b64:	str	wzr, [x19]
   36b68:	fdiv	d0, d0, d8
   36b6c:	b	36adc <__gamma_r_finite@GLIBC_2.17+0x134>
   36b70:	mov	w2, #0xffefffff            	// #-1048577
   36b74:	cmp	w1, w2
   36b78:	b.hi	36b98 <__gamma_r_finite@GLIBC_2.17+0x1f0>  // b.pmore
   36b7c:	frintx	d0, d0
   36b80:	fcmp	d0, d8
   36b84:	b.ne	36b98 <__gamma_r_finite@GLIBC_2.17+0x1f0>  // b.any
   36b88:	fsub	d0, d8, d8
   36b8c:	str	wzr, [x19]
   36b90:	fdiv	d0, d0, d0
   36b94:	b	36adc <__gamma_r_finite@GLIBC_2.17+0x134>
   36b98:	cmp	w0, #0x0
   36b9c:	mov	w0, #0xfff00000            	// #-1048576
   36ba0:	ccmp	w1, w0, #0x0, eq  // eq = none
   36ba4:	b.ne	369ec <__gamma_r_finite@GLIBC_2.17+0x44>  // b.any
   36ba8:	fsub	d0, d8, d8
   36bac:	str	wzr, [x19]
   36bb0:	b	36adc <__gamma_r_finite@GLIBC_2.17+0x134>
   36bb4:	fadd	d0, d8, d8
   36bb8:	str	wzr, [x19]
   36bbc:	b	36adc <__gamma_r_finite@GLIBC_2.17+0x134>
   36bc0:	fsub	d0, d0, d8
   36bc4:	fcmpe	d0, d3
   36bc8:	b.le	36bd4 <__gamma_r_finite@GLIBC_2.17+0x22c>
   36bcc:	fmov	d1, #1.000000000000000000e+00
   36bd0:	fsub	d0, d1, d0
   36bd4:	fmov	d1, #2.500000000000000000e-01
   36bd8:	fcmpe	d0, d1
   36bdc:	b.ls	36c44 <__gamma_r_finite@GLIBC_2.17+0x29c>  // b.plast
   36be0:	fmov	d1, #5.000000000000000000e-01
   36be4:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   36be8:	fsub	d0, d1, d0
   36bec:	ldr	d2, [x0, #2416]
   36bf0:	fmul	d0, d0, d2
   36bf4:	bl	39ae8 <cos@@GLIBC_2.17>
   36bf8:	fmov	d9, d0
   36bfc:	fneg	d0, d8
   36c00:	add	x0, sp, #0x44
   36c04:	fmul	d9, d0, d9
   36c08:	bl	36728 <__sqrt_finite@GLIBC_2.17+0x8>
   36c0c:	fmul	d0, d9, d0
   36c10:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   36c14:	ldr	d1, [x0, #2416]
   36c18:	ldr	w0, [sp, #68]
   36c1c:	fdiv	d0, d1, d0
   36c20:	neg	w0, w0
   36c24:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   36c28:	mov	x0, #0x10000000000000      	// #4503599627370496
   36c2c:	fmov	d1, x0
   36c30:	fcmpe	d0, d1
   36c34:	b.pl	36c3c <__gamma_r_finite@GLIBC_2.17+0x294>  // b.nfrst
   36c38:	fmul	d1, d0, d0
   36c3c:	fabs	d2, d0
   36c40:	b	36a80 <__gamma_r_finite@GLIBC_2.17+0xd8>
   36c44:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   36c48:	ldr	d1, [x0, #2416]
   36c4c:	fmul	d0, d0, d1
   36c50:	bl	393c8 <sin@@GLIBC_2.17>
   36c54:	fmov	d9, d0
   36c58:	b	36bfc <__gamma_r_finite@GLIBC_2.17+0x254>
   36c5c:	eor	w0, w22, w21
   36c60:	msr	fpcr, x0
   36c64:	b	36a20 <__gamma_r_finite@GLIBC_2.17+0x78>
   36c68:	msr	fpcr, x21
   36c6c:	b	36a84 <__gamma_r_finite@GLIBC_2.17+0xdc>
   36c70:	stp	x21, x22, [sp, #32]
   36c74:	bl	ba70 <__stack_chk_fail@plt>
   36c78:	fmov	x0, d0
   36c7c:	lsr	x2, x0, #32
   36c80:	ubfx	x1, x0, #32, #31
   36c84:	tst	x2, #0x7ff00000
   36c88:	b.ne	36cbc <__gamma_r_finite@GLIBC_2.17+0x314>  // b.any
   36c8c:	fmov	w2, s0
   36c90:	orr	w3, w1, w0
   36c94:	cbz	w3, 36cfc <__gamma_r_finite@GLIBC_2.17+0x354>
   36c98:	cbnz	w1, 36cd8 <__gamma_r_finite@GLIBC_2.17+0x330>
   36c9c:	cmp	w0, #0x0
   36ca0:	mov	w0, #0xfffffbed            	// #-1043
   36ca4:	b.le	36cb8 <__gamma_r_finite@GLIBC_2.17+0x310>
   36ca8:	lsl	w2, w2, #1
   36cac:	sub	w0, w0, #0x1
   36cb0:	cmp	w2, #0x0
   36cb4:	b.gt	36ca8 <__gamma_r_finite@GLIBC_2.17+0x300>
   36cb8:	ret
   36cbc:	asr	w0, w1, #20
   36cc0:	mov	w2, #0x7fefffff            	// #2146435071
   36cc4:	sub	w0, w0, #0x3ff
   36cc8:	cmp	w1, w2
   36ccc:	mov	w1, #0x7fffffff            	// #2147483647
   36cd0:	csel	w0, w0, w1, le
   36cd4:	ret
   36cd8:	cmp	wzr, w1, lsl #11
   36cdc:	mov	w0, #0xfffffc02            	// #-1022
   36ce0:	lsl	w1, w1, #11
   36ce4:	b.ge	36cb8 <__gamma_r_finite@GLIBC_2.17+0x310>  // b.tcont
   36ce8:	lsl	w1, w1, #1
   36cec:	sub	w0, w0, #0x1
   36cf0:	cmp	w1, #0x0
   36cf4:	b.gt	36ce8 <__gamma_r_finite@GLIBC_2.17+0x340>
   36cf8:	ret
   36cfc:	mov	w0, #0x80000001            	// #-2147483647
   36d00:	ret
   36d04:	nop

0000000000036d08 <asinh@@GLIBC_2.17>:
   36d08:	fmov	x0, d0
   36d0c:	stp	x29, x30, [sp, #-32]!
   36d10:	mov	w1, #0x3e2fffff            	// #1043333119
   36d14:	mov	x29, sp
   36d18:	str	d8, [sp, #16]
   36d1c:	fmov	d8, d0
   36d20:	ubfx	x0, x0, #32, #31
   36d24:	cmp	w0, w1
   36d28:	b.le	36d84 <asinh@@GLIBC_2.17+0x7c>
   36d2c:	mov	w1, #0x41b00000            	// #1102053376
   36d30:	cmp	w0, w1
   36d34:	b.gt	36de0 <asinh@@GLIBC_2.17+0xd8>
   36d38:	fmul	d3, d0, d0
   36d3c:	fmov	d2, #1.000000000000000000e+00
   36d40:	mov	w1, #0x40000000            	// #1073741824
   36d44:	fabs	d4, d0
   36d48:	cmp	w0, w1
   36d4c:	fadd	d1, d3, d2
   36d50:	fsqrt	d1, d1
   36d54:	b.le	36dc8 <asinh@@GLIBC_2.17+0xc0>
   36d58:	fadd	d1, d4, d1
   36d5c:	fmov	d0, #2.000000000000000000e+00
   36d60:	fdiv	d1, d2, d1
   36d64:	fmadd	d0, d4, d0, d1
   36d68:	bl	35a50 <__log_finite@GLIBC_2.17>
   36d6c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   36d70:	fmov	d1, x0
   36d74:	bit	v0.8b, v8.8b, v1.8b
   36d78:	ldr	d8, [sp, #16]
   36d7c:	ldp	x29, x30, [sp], #32
   36d80:	ret
   36d84:	fabs	d4, d0
   36d88:	mov	x0, #0x10000000000000      	// #4503599627370496
   36d8c:	fmov	d0, x0
   36d90:	fcmpe	d4, d0
   36d94:	b.pl	36d9c <asinh@@GLIBC_2.17+0x94>  // b.nfrst
   36d98:	fmul	d0, d8, d8
   36d9c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   36da0:	fmov	d2, #1.000000000000000000e+00
   36da4:	fmov	d0, d8
   36da8:	ldr	d1, [x0, #1928]
   36dac:	fadd	d1, d8, d1
   36db0:	fcmpe	d1, d2
   36db4:	b.gt	36d78 <asinh@@GLIBC_2.17+0x70>
   36db8:	fmul	d3, d8, d8
   36dbc:	fadd	d2, d3, d2
   36dc0:	fsqrt	d1, d2
   36dc4:	nop
   36dc8:	fmov	d0, #1.000000000000000000e+00
   36dcc:	fadd	d1, d1, d0
   36dd0:	fdiv	d1, d3, d1
   36dd4:	fadd	d0, d1, d4
   36dd8:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   36ddc:	b	36d6c <asinh@@GLIBC_2.17+0x64>
   36de0:	mov	w1, #0x7fefffff            	// #2146435071
   36de4:	cmp	w0, w1
   36de8:	b.le	36df4 <asinh@@GLIBC_2.17+0xec>
   36dec:	fadd	d0, d0, d0
   36df0:	b	36d78 <asinh@@GLIBC_2.17+0x70>
   36df4:	fabs	d0, d0
   36df8:	bl	35a50 <__log_finite@GLIBC_2.17>
   36dfc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   36e00:	ldr	d1, [x0, #560]
   36e04:	fadd	d0, d0, d1
   36e08:	b	36d6c <asinh@@GLIBC_2.17+0x64>
   36e0c:	nop
   36e10:	sub	sp, sp, #0x850
   36e14:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   36e18:	stp	x29, x30, [sp]
   36e1c:	mov	x29, sp
   36e20:	ldr	x0, [x0, #4032]
   36e24:	stp	x25, x26, [sp, #64]
   36e28:	adrp	x25, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36e2c:	add	x1, x25, #0x110
   36e30:	str	d8, [sp, #96]
   36e34:	fmov	d8, d0
   36e38:	str	x1, [sp, #112]
   36e3c:	add	x1, x1, #0x20
   36e40:	add	x26, sp, #0x90
   36e44:	stp	x19, x20, [sp, #16]
   36e48:	add	x19, sp, #0x1e0
   36e4c:	add	x20, sp, #0x470
   36e50:	stp	x21, x22, [sp, #32]
   36e54:	add	x22, sp, #0x700
   36e58:	add	x21, sp, #0x328
   36e5c:	stp	x23, x24, [sp, #48]
   36e60:	add	x24, sp, #0x98
   36e64:	add	x23, sp, #0x5b8
   36e68:	stp	x27, x28, [sp, #80]
   36e6c:	add	x27, sp, #0x88
   36e70:	mov	x25, #0x0                   	// #0
   36e74:	str	x1, [sp, #120]
   36e78:	ldr	x1, [x0]
   36e7c:	str	x1, [sp, #2120]
   36e80:	mov	x1, #0x0                   	// #0
   36e84:	mov	w28, #0x6                   	// #6
   36e88:	fmov	d0, d8
   36e8c:	mov	w1, w28
   36e90:	mov	x0, x24
   36e94:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   36e98:	mov	w2, w28
   36e9c:	mov	x1, x19
   36ea0:	mov	x0, x24
   36ea4:	bl	50790 <__exp2f_finite@GLIBC_2.17+0x3d28>
   36ea8:	ldr	x2, [sp, #112]
   36eac:	mov	w1, w28
   36eb0:	mov	x0, x23
   36eb4:	ldr	d0, [x2, x25, lsl #3]
   36eb8:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   36ebc:	mov	w3, w28
   36ec0:	mov	x2, x20
   36ec4:	mov	x1, x23
   36ec8:	mov	x0, x19
   36ecc:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   36ed0:	mov	w3, w28
   36ed4:	mov	x2, x22
   36ed8:	mov	x1, x20
   36edc:	mov	x0, x19
   36ee0:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   36ee4:	mov	w3, w28
   36ee8:	mov	x2, x21
   36eec:	mov	x1, x20
   36ef0:	mov	x0, x19
   36ef4:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   36ef8:	mov	w2, w28
   36efc:	mov	x1, x27
   36f00:	mov	x0, x22
   36f04:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   36f08:	mov	w2, w28
   36f0c:	mov	x1, x26
   36f10:	mov	x0, x21
   36f14:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   36f18:	ldp	d0, d1, [sp, #136]
   36f1c:	fcmp	d0, d1
   36f20:	b.eq	36f3c <asinh@@GLIBC_2.17+0x234>  // b.none
   36f24:	add	x25, x25, #0x1
   36f28:	cmp	x25, #0x4
   36f2c:	b.eq	36f3c <asinh@@GLIBC_2.17+0x234>  // b.none
   36f30:	ldr	x0, [sp, #120]
   36f34:	ldr	w28, [x0, x25, lsl #2]
   36f38:	b	36e88 <asinh@@GLIBC_2.17+0x180>
   36f3c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   36f40:	ldr	x0, [x0, #4032]
   36f44:	ldr	x1, [sp, #2120]
   36f48:	ldr	x0, [x0]
   36f4c:	eor	x0, x1, x0
   36f50:	cbnz	x0, 36f78 <asinh@@GLIBC_2.17+0x270>
   36f54:	ldp	x29, x30, [sp]
   36f58:	ldp	x19, x20, [sp, #16]
   36f5c:	ldp	x21, x22, [sp, #32]
   36f60:	ldp	x23, x24, [sp, #48]
   36f64:	ldp	x25, x26, [sp, #64]
   36f68:	ldp	x27, x28, [sp, #80]
   36f6c:	ldr	d8, [sp, #96]
   36f70:	add	sp, sp, #0x850
   36f74:	ret
   36f78:	bl	ba70 <__stack_chk_fail@plt>
   36f7c:	nop

0000000000036f80 <atan@@GLIBC_2.17>:
   36f80:	fmov	x1, d0
   36f84:	mov	w2, #0x7ff00000            	// #2146435072
   36f88:	fmov	d1, d0
   36f8c:	asr	x0, x1, #32
   36f90:	and	w3, w0, w2
   36f94:	cmp	w3, w2
   36f98:	b.eq	375f4 <atan@@GLIBC_2.17+0x674>  // b.none
   36f9c:	stp	x29, x30, [sp, #-48]!
   36fa0:	mov	x29, sp
   36fa4:	stp	x19, x20, [sp, #16]
   36fa8:	mrs	x19, fpcr
   36fac:	ands	w20, w19, #0xc00000
   36fb0:	b.ne	37c78 <atan@@GLIBC_2.17+0xcf8>  // b.any
   36fb4:	fcmpe	d1, #0.0
   36fb8:	fneg	d2, d1
   36fbc:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36fc0:	ldr	d0, [x0, #256]
   36fc4:	fcsel	d2, d2, d1, mi  // mi = first
   36fc8:	fcmpe	d0, d2
   36fcc:	b.le	372a8 <atan@@GLIBC_2.17+0x328>
   36fd0:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   36fd4:	ldr	d0, [x0, #2424]
   36fd8:	fcmpe	d0, d2
   36fdc:	b.le	37974 <atan@@GLIBC_2.17+0x9f4>
   36fe0:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   36fe4:	ldr	d0, [x0, #264]
   36fe8:	fcmpe	d0, d2
   36fec:	b.gt	37c5c <atan@@GLIBC_2.17+0xcdc>
   36ff0:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   36ff4:	fmul	d2, d1, d1
   36ff8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   36ffc:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37000:	ldr	d16, [x2, #2528]
   37004:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37008:	ldr	d0, [x0, #2536]
   3700c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37010:	ldr	d7, [x1, #2544]
   37014:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37018:	fmadd	d16, d16, d2, d0
   3701c:	ldr	d5, [x0, #2560]
   37020:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   37024:	ldr	d6, [x2, #2552]
   37028:	ldr	d4, [x1, #2568]
   3702c:	fmul	d17, d1, d2
   37030:	ldr	d0, [x0, #232]
   37034:	fmul	d3, d1, d0
   37038:	fmadd	d0, d2, d16, d7
   3703c:	fmadd	d0, d2, d0, d6
   37040:	fmadd	d0, d2, d0, d5
   37044:	fmadd	d4, d2, d0, d4
   37048:	fnmsub	d0, d17, d4, d3
   3704c:	fmadd	d3, d17, d4, d3
   37050:	fadd	d0, d0, d1
   37054:	fadd	d3, d3, d1
   37058:	fcmp	d3, d0
   3705c:	b.eq	37298 <atan@@GLIBC_2.17+0x318>  // b.none
   37060:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37064:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37068:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3706c:	adrp	x3, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37070:	ldr	d3, [x2, #2432]
   37074:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37078:	ldr	d7, [x1, #2440]
   3707c:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37080:	ldr	d6, [x0, #2448]
   37084:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37088:	fmadd	d7, d3, d2, d7
   3708c:	ldr	d3, [x3, #2456]
   37090:	ldr	d0, [x2, #2464]
   37094:	fnmsub	d5, d1, d1, d2
   37098:	ldr	d4, [x1, #2480]
   3709c:	ldr	d16, [x0, #2472]
   370a0:	fabs	d17, d4
   370a4:	fmadd	d6, d2, d7, d6
   370a8:	fmadd	d3, d2, d6, d3
   370ac:	fmadd	d0, d2, d3, d0
   370b0:	fmul	d0, d2, d0
   370b4:	fabs	d6, d0
   370b8:	fadd	d3, d4, d0
   370bc:	fcmpe	d17, d6
   370c0:	b.gt	37da0 <atan@@GLIBC_2.17+0xe20>
   370c4:	fsub	d0, d0, d3
   370c8:	movi	d6, #0x0
   370cc:	fadd	d0, d0, d4
   370d0:	fadd	d0, d0, d16
   370d4:	fadd	d0, d0, d6
   370d8:	fadd	d16, d0, d3
   370dc:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   370e0:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   370e4:	ldr	d4, [x1, #2496]
   370e8:	ldr	d17, [x0, #2488]
   370ec:	fsub	d3, d3, d16
   370f0:	fmul	d6, d2, d16
   370f4:	fmul	d7, d5, d16
   370f8:	fnmsub	d16, d2, d16, d6
   370fc:	fabs	d18, d4
   37100:	fadd	d0, d3, d0
   37104:	fmadd	d0, d2, d0, d7
   37108:	fadd	d7, d0, d16
   3710c:	fadd	d3, d6, d7
   37110:	fabs	d16, d3
   37114:	fsub	d0, d6, d3
   37118:	fadd	d6, d4, d3
   3711c:	fcmpe	d18, d16
   37120:	fadd	d0, d0, d7
   37124:	b.le	37e14 <atan@@GLIBC_2.17+0xe94>
   37128:	fsub	d4, d4, d6
   3712c:	fadd	d4, d4, d3
   37130:	fadd	d4, d4, d0
   37134:	fadd	d4, d4, d17
   37138:	fadd	d17, d4, d6
   3713c:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37140:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37144:	ldr	d7, [x1, #2512]
   37148:	ldr	d18, [x0, #2504]
   3714c:	fsub	d6, d6, d17
   37150:	fmul	d0, d2, d17
   37154:	fmul	d16, d5, d17
   37158:	fnmsub	d17, d2, d17, d0
   3715c:	fabs	d19, d7
   37160:	fadd	d4, d6, d4
   37164:	fmadd	d4, d2, d4, d16
   37168:	fadd	d6, d4, d17
   3716c:	fadd	d3, d0, d6
   37170:	fabs	d16, d3
   37174:	fsub	d4, d0, d3
   37178:	fadd	d0, d7, d3
   3717c:	fcmpe	d19, d16
   37180:	fadd	d4, d4, d6
   37184:	b.le	37e00 <atan@@GLIBC_2.17+0xe80>
   37188:	fsub	d7, d7, d0
   3718c:	fadd	d3, d7, d3
   37190:	fadd	d3, d3, d4
   37194:	fadd	d3, d3, d18
   37198:	fadd	d6, d3, d0
   3719c:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   371a0:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   371a4:	ldr	d4, [x1, #2568]
   371a8:	ldr	d17, [x0, #2520]
   371ac:	fsub	d7, d0, d6
   371b0:	fmul	d16, d5, d6
   371b4:	fmul	d0, d2, d6
   371b8:	fabs	d18, d4
   371bc:	fnmsub	d6, d2, d6, d0
   371c0:	fadd	d3, d7, d3
   371c4:	fmadd	d3, d2, d3, d16
   371c8:	fadd	d7, d3, d6
   371cc:	fadd	d3, d0, d7
   371d0:	fabs	d16, d3
   371d4:	fsub	d6, d0, d3
   371d8:	fadd	d0, d4, d3
   371dc:	fcmpe	d18, d16
   371e0:	fadd	d6, d6, d7
   371e4:	b.le	37dec <atan@@GLIBC_2.17+0xe6c>
   371e8:	fsub	d4, d4, d0
   371ec:	fadd	d4, d4, d3
   371f0:	fadd	d4, d4, d6
   371f4:	fadd	d4, d4, d17
   371f8:	fadd	d7, d4, d0
   371fc:	movi	d17, #0x0
   37200:	fabs	d16, d1
   37204:	fsub	d6, d0, d7
   37208:	fmul	d0, d5, d7
   3720c:	fmul	d5, d2, d7
   37210:	fnmsub	d7, d2, d7, d5
   37214:	fadd	d4, d6, d4
   37218:	fmadd	d2, d2, d4, d0
   3721c:	fadd	d2, d2, d7
   37220:	fadd	d4, d5, d2
   37224:	fsub	d5, d5, d4
   37228:	fmul	d0, d1, d4
   3722c:	fmul	d6, d4, d17
   37230:	fnmsub	d4, d1, d4, d0
   37234:	fadd	d2, d5, d2
   37238:	fmadd	d2, d1, d2, d6
   3723c:	fadd	d2, d2, d4
   37240:	fadd	d3, d0, d2
   37244:	fabs	d6, d3
   37248:	fsub	d4, d0, d3
   3724c:	fadd	d0, d1, d3
   37250:	fcmpe	d16, d6
   37254:	fadd	d4, d4, d2
   37258:	b.le	37dd8 <atan@@GLIBC_2.17+0xe58>
   3725c:	fsub	d2, d1, d0
   37260:	fadd	d3, d2, d3
   37264:	fadd	d3, d3, d4
   37268:	fadd	d3, d3, d17
   3726c:	fadd	d4, d3, d0
   37270:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37274:	ldr	d5, [x0, #2336]
   37278:	fsub	d0, d0, d4
   3727c:	fadd	d2, d0, d3
   37280:	fmsub	d0, d5, d4, d2
   37284:	fmadd	d2, d5, d4, d2
   37288:	fadd	d0, d0, d4
   3728c:	fadd	d2, d2, d4
   37290:	fcmp	d2, d0
   37294:	b.ne	37c1c <atan@@GLIBC_2.17+0xc9c>  // b.any
   37298:	cbnz	w20, 37c84 <atan@@GLIBC_2.17+0xd04>
   3729c:	ldp	x19, x20, [sp, #16]
   372a0:	ldp	x29, x30, [sp], #48
   372a4:	ret
   372a8:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   372ac:	ldr	d0, [x0, #248]
   372b0:	fcmpe	d0, d2
   372b4:	b.le	37608 <atan@@GLIBC_2.17+0x688>
   372b8:	fmov	d3, #1.000000000000000000e+00
   372bc:	mov	x0, #0x4070000000000000    	// #4643211215818981376
   372c0:	fmov	d0, x0
   372c4:	mov	x0, #0x4330000000000000    	// #4841369599423283200
   372c8:	fdiv	d4, d3, d2
   372cc:	fmov	d16, x0
   372d0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   372d4:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   372d8:	adrp	x3, 7f000 <f64xsubf128@@GLIBC_2.28+0x2b280>
   372dc:	add	x3, x3, #0x9c0
   372e0:	ldr	d6, [x0, #568]
   372e4:	ldr	d7, [x1, #576]
   372e8:	fmadd	d0, d4, d0, d16
   372ec:	fmul	d5, d2, d4
   372f0:	fnmsub	d17, d4, d2, d5
   372f4:	fsub	d3, d3, d5
   372f8:	fsub	d0, d0, d16
   372fc:	fsub	d5, d3, d17
   37300:	fcvtzs	w0, d0
   37304:	sub	w0, w0, #0x10
   37308:	cmp	w0, #0x6f
   3730c:	sxtw	x1, w0
   37310:	sbfiz	x0, x0, #3, #32
   37314:	sub	x0, x0, x1
   37318:	lsl	x0, x0, #3
   3731c:	add	x2, x3, x0
   37320:	ldr	d0, [x3, x0]
   37324:	ldp	d3, d16, [x2, #8]
   37328:	fsub	d0, d4, d0
   3732c:	fmadd	d0, d5, d4, d0
   37330:	ldp	d20, d21, [x2, #40]
   37334:	fsub	d17, d7, d3
   37338:	ldp	d18, d19, [x2, #24]
   3733c:	fmadd	d3, d21, d0, d20
   37340:	fmadd	d3, d0, d3, d19
   37344:	fmadd	d3, d0, d3, d18
   37348:	fmadd	d3, d0, d3, d16
   3734c:	fmsub	d3, d0, d3, d6
   37350:	b.le	37c28 <atan@@GLIBC_2.17+0xca8>
   37354:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37358:	ldr	d16, [x0, #2280]
   3735c:	fsub	d0, d3, d16
   37360:	fadd	d3, d16, d3
   37364:	fadd	d0, d0, d17
   37368:	fadd	d3, d3, d17
   3736c:	fcmp	d3, d0
   37370:	b.eq	375e4 <atan@@GLIBC_2.17+0x664>  // b.none
   37374:	movi	d0, #0x0
   37378:	lsl	x2, x1, #7
   3737c:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   37380:	add	x3, x0, #0x140
   37384:	fadd	d5, d5, d0
   37388:	ldr	d3, [x3, x2]
   3738c:	fmsub	d5, d4, d0, d5
   37390:	fdiv	d5, d5, d2
   37394:	fadd	d0, d4, d5
   37398:	fsub	d2, d4, d0
   3739c:	fsub	d4, d0, d3
   373a0:	fadd	d2, d2, d5
   373a4:	fabs	d5, d4
   373a8:	fabs	d3, d2
   373ac:	fadd	d0, d2, d4
   373b0:	fcmpe	d5, d3
   373b4:	b.le	37d70 <atan@@GLIBC_2.17+0xdf0>
   373b8:	fsub	d4, d4, d0
   373bc:	fadd	d2, d4, d2
   373c0:	add	x2, x0, #0x140
   373c4:	add	x2, x2, x1, lsl #7
   373c8:	ldp	d16, d17, [x2, #104]
   373cc:	ldr	d4, [x2, #120]
   373d0:	ldr	d3, [x2, #88]
   373d4:	ldp	d5, d18, [x2, #72]
   373d8:	fmadd	d17, d4, d0, d17
   373dc:	ldr	d4, [x2, #96]
   373e0:	fabs	d19, d5
   373e4:	fmadd	d16, d0, d17, d16
   373e8:	fmadd	d4, d0, d16, d4
   373ec:	fmadd	d3, d0, d4, d3
   373f0:	fmul	d3, d0, d3
   373f4:	fabs	d16, d3
   373f8:	fadd	d4, d5, d3
   373fc:	fcmpe	d19, d16
   37400:	b.le	37d58 <atan@@GLIBC_2.17+0xdd8>
   37404:	fsub	d5, d5, d4
   37408:	movi	d16, #0x0
   3740c:	fadd	d3, d5, d3
   37410:	fadd	d3, d3, d16
   37414:	fadd	d3, d3, d18
   37418:	fadd	d18, d3, d4
   3741c:	add	x2, x0, #0x140
   37420:	add	x2, x2, x1, lsl #7
   37424:	fsub	d4, d4, d18
   37428:	fmul	d5, d0, d18
   3742c:	fmul	d17, d2, d18
   37430:	fnmsub	d18, d0, d18, d5
   37434:	ldp	d16, d19, [x2, #56]
   37438:	fadd	d3, d4, d3
   3743c:	fabs	d20, d16
   37440:	fmadd	d3, d0, d3, d17
   37444:	fadd	d17, d3, d18
   37448:	fadd	d4, d5, d17
   3744c:	fabs	d18, d4
   37450:	fsub	d3, d5, d4
   37454:	fadd	d5, d16, d4
   37458:	fcmpe	d20, d18
   3745c:	fadd	d3, d3, d17
   37460:	b.le	37d44 <atan@@GLIBC_2.17+0xdc4>
   37464:	fsub	d16, d16, d5
   37468:	fadd	d4, d16, d4
   3746c:	fadd	d4, d4, d3
   37470:	fadd	d4, d4, d19
   37474:	fadd	d18, d4, d5
   37478:	add	x2, x0, #0x140
   3747c:	add	x2, x2, x1, lsl #7
   37480:	fsub	d5, d5, d18
   37484:	fmul	d16, d0, d18
   37488:	fmul	d3, d2, d18
   3748c:	fnmsub	d18, d0, d18, d16
   37490:	ldp	d17, d19, [x2, #40]
   37494:	fadd	d4, d5, d4
   37498:	fabs	d20, d17
   3749c:	fmadd	d4, d0, d4, d3
   374a0:	fadd	d5, d4, d18
   374a4:	fadd	d3, d16, d5
   374a8:	fabs	d18, d3
   374ac:	fsub	d4, d16, d3
   374b0:	fadd	d16, d17, d3
   374b4:	fcmpe	d20, d18
   374b8:	fadd	d4, d4, d5
   374bc:	b.le	37d30 <atan@@GLIBC_2.17+0xdb0>
   374c0:	fsub	d5, d17, d16
   374c4:	fadd	d5, d5, d3
   374c8:	fadd	d5, d5, d4
   374cc:	fadd	d5, d5, d19
   374d0:	fadd	d18, d5, d16
   374d4:	add	x2, x0, #0x140
   374d8:	add	x2, x2, x1, lsl #7
   374dc:	fsub	d17, d16, d18
   374e0:	fmul	d3, d2, d18
   374e4:	fmul	d16, d0, d18
   374e8:	fnmsub	d18, d0, d18, d16
   374ec:	ldp	d4, d19, [x2, #24]
   374f0:	fadd	d5, d17, d5
   374f4:	fabs	d20, d4
   374f8:	fmadd	d5, d0, d5, d3
   374fc:	fadd	d17, d5, d18
   37500:	fadd	d3, d16, d17
   37504:	fabs	d18, d3
   37508:	fsub	d5, d16, d3
   3750c:	fadd	d16, d4, d3
   37510:	fcmpe	d20, d18
   37514:	fadd	d5, d5, d17
   37518:	b.le	37d1c <atan@@GLIBC_2.17+0xd9c>
   3751c:	fsub	d4, d4, d16
   37520:	fadd	d4, d4, d3
   37524:	fadd	d4, d4, d5
   37528:	fadd	d4, d4, d19
   3752c:	fadd	d3, d4, d16
   37530:	add	x0, x0, #0x140
   37534:	add	x0, x0, x1, lsl #7
   37538:	fsub	d16, d16, d3
   3753c:	fmul	d5, d0, d3
   37540:	fmul	d2, d2, d3
   37544:	fnmsub	d3, d0, d3, d5
   37548:	ldp	d17, d18, [x0, #8]
   3754c:	fadd	d4, d16, d4
   37550:	fabs	d16, d17
   37554:	fmadd	d2, d0, d4, d2
   37558:	fadd	d2, d2, d3
   3755c:	fadd	d3, d5, d2
   37560:	fabs	d0, d3
   37564:	fsub	d5, d5, d3
   37568:	fadd	d4, d17, d3
   3756c:	fcmpe	d16, d0
   37570:	fadd	d5, d5, d2
   37574:	b.le	37d08 <atan@@GLIBC_2.17+0xd88>
   37578:	fsub	d2, d17, d4
   3757c:	fadd	d2, d2, d3
   37580:	fadd	d2, d2, d5
   37584:	fadd	d2, d2, d18
   37588:	fadd	d5, d2, d4
   3758c:	fabs	d17, d7
   37590:	fabs	d16, d5
   37594:	fsub	d0, d4, d5
   37598:	fsub	d3, d7, d5
   3759c:	fcmpe	d17, d16
   375a0:	fadd	d2, d0, d2
   375a4:	b.le	37c8c <atan@@GLIBC_2.17+0xd0c>
   375a8:	fsub	d0, d7, d3
   375ac:	fsub	d0, d0, d5
   375b0:	fsub	d0, d0, d2
   375b4:	fadd	d0, d0, d6
   375b8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   375bc:	fadd	d4, d0, d3
   375c0:	ldr	d2, [x0, #2264]
   375c4:	fsub	d3, d3, d4
   375c8:	fadd	d3, d3, d0
   375cc:	fsub	d0, d3, d2
   375d0:	fadd	d3, d2, d3
   375d4:	fadd	d0, d0, d4
   375d8:	fadd	d3, d3, d4
   375dc:	fcmp	d3, d0
   375e0:	b.ne	37c1c <atan@@GLIBC_2.17+0xc9c>  // b.any
   375e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   375e8:	fmov	d2, x0
   375ec:	bit	v0.8b, v1.8b, v2.8b
   375f0:	b	37298 <atan@@GLIBC_2.17+0x318>
   375f4:	and	w0, w0, #0xfffff
   375f8:	orr	w0, w0, w1
   375fc:	cbz	w0, 36f9c <atan@@GLIBC_2.17+0x1c>
   37600:	fadd	d0, d0, d0
   37604:	ret
   37608:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3760c:	ldr	d0, [x0, #240]
   37610:	fcmpe	d0, d2
   37614:	b.le	37c34 <atan@@GLIBC_2.17+0xcb4>
   37618:	fmov	d5, #1.000000000000000000e+00
   3761c:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37620:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37624:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37628:	fdiv	d3, d5, d2
   3762c:	ldr	d24, [x2, #2528]
   37630:	ldr	d21, [x1, #2536]
   37634:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37638:	ldr	d20, [x0, #2544]
   3763c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37640:	ldr	d19, [x1, #2552]
   37644:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   37648:	ldr	d7, [x0, #2560]
   3764c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37650:	ldr	d16, [x1, #576]
   37654:	ldr	d6, [x0, #2568]
   37658:	fabs	d17, d16
   3765c:	fmul	d0, d3, d3
   37660:	fmul	d4, d2, d3
   37664:	fnmsub	d22, d3, d2, d4
   37668:	fabs	d23, d3
   3766c:	fsub	d18, d16, d3
   37670:	fmadd	d21, d24, d0, d21
   37674:	fsub	d5, d5, d4
   37678:	fmul	d4, d3, d0
   3767c:	fcmpe	d17, d23
   37680:	fsub	d5, d5, d22
   37684:	fmadd	d20, d0, d21, d20
   37688:	fmul	d21, d5, d3
   3768c:	fmadd	d19, d0, d20, d19
   37690:	fmadd	d7, d0, d19, d7
   37694:	fmadd	d0, d0, d7, d6
   37698:	fmul	d0, d4, d0
   3769c:	b.le	37d94 <atan@@GLIBC_2.17+0xe14>
   376a0:	fsub	d4, d16, d18
   376a4:	fsub	d4, d4, d3
   376a8:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   376ac:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   376b0:	ldr	d7, [x1, #568]
   376b4:	ldr	d6, [x0, #2344]
   376b8:	fadd	d4, d7, d4
   376bc:	fsub	d4, d4, d21
   376c0:	fsub	d4, d4, d0
   376c4:	fsub	d0, d4, d6
   376c8:	fadd	d4, d6, d4
   376cc:	fadd	d0, d0, d18
   376d0:	fadd	d4, d4, d18
   376d4:	fcmp	d4, d0
   376d8:	b.eq	375e4 <atan@@GLIBC_2.17+0x664>  // b.none
   376dc:	movi	d22, #0x0
   376e0:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   376e4:	fmov	d0, #2.000000000000000000e+00
   376e8:	adrp	x3, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   376ec:	ldr	d25, [x0, #2432]
   376f0:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   376f4:	ldr	d23, [x3, #2440]
   376f8:	adrp	x2, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   376fc:	fadd	d5, d5, d22
   37700:	ldr	d4, [x0, #2464]
   37704:	fmsub	d5, d3, d22, d5
   37708:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3770c:	ldr	d21, [x2, #2448]
   37710:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37714:	ldr	d6, [x0, #2472]
   37718:	ldr	d20, [x1, #2456]
   3771c:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37720:	str	d6, [sp, #40]
   37724:	ldr	d19, [x1, #2480]
   37728:	fdiv	d2, d5, d2
   3772c:	fabs	d24, d19
   37730:	fadd	d6, d3, d2
   37734:	fsub	d3, d3, d6
   37738:	fmul	d18, d6, d6
   3773c:	fnmsub	d5, d6, d6, d18
   37740:	fadd	d2, d3, d2
   37744:	fmul	d3, d6, d2
   37748:	fmadd	d3, d3, d0, d5
   3774c:	fadd	d0, d18, d3
   37750:	fmadd	d23, d25, d0, d23
   37754:	fsub	d5, d18, d0
   37758:	fadd	d5, d5, d3
   3775c:	fmadd	d3, d0, d23, d21
   37760:	fmadd	d3, d0, d3, d20
   37764:	fmadd	d3, d0, d3, d4
   37768:	fmul	d3, d0, d3
   3776c:	fabs	d4, d3
   37770:	fadd	d18, d19, d3
   37774:	fcmpe	d24, d4
   37778:	b.gt	37dc0 <atan@@GLIBC_2.17+0xe40>
   3777c:	fsub	d3, d3, d18
   37780:	ldr	d4, [sp, #40]
   37784:	fadd	d3, d3, d19
   37788:	fadd	d3, d3, d4
   3778c:	fadd	d3, d3, d22
   37790:	fadd	d19, d3, d18
   37794:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37798:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3779c:	ldr	d4, [x0, #2488]
   377a0:	ldr	d22, [x1, #2496]
   377a4:	fsub	d20, d18, d19
   377a8:	fmul	d21, d5, d19
   377ac:	fmul	d18, d0, d19
   377b0:	str	d4, [sp, #40]
   377b4:	fnmsub	d19, d0, d19, d18
   377b8:	fabs	d23, d22
   377bc:	fadd	d3, d20, d3
   377c0:	fmadd	d3, d0, d3, d21
   377c4:	fadd	d3, d3, d19
   377c8:	fadd	d4, d18, d3
   377cc:	fabs	d20, d4
   377d0:	fsub	d19, d18, d4
   377d4:	fadd	d18, d22, d4
   377d8:	fcmpe	d23, d20
   377dc:	fadd	d19, d19, d3
   377e0:	b.le	37e8c <atan@@GLIBC_2.17+0xf0c>
   377e4:	fsub	d22, d22, d18
   377e8:	ldr	d3, [sp, #40]
   377ec:	fadd	d4, d22, d4
   377f0:	fadd	d4, d4, d19
   377f4:	fadd	d4, d4, d3
   377f8:	fadd	d19, d4, d18
   377fc:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37800:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37804:	ldr	d3, [x0, #2504]
   37808:	ldr	d22, [x1, #2512]
   3780c:	fsub	d20, d18, d19
   37810:	fmul	d21, d5, d19
   37814:	fmul	d18, d0, d19
   37818:	str	d3, [sp, #40]
   3781c:	fnmsub	d19, d0, d19, d18
   37820:	fabs	d23, d22
   37824:	fadd	d4, d20, d4
   37828:	fmadd	d4, d0, d4, d21
   3782c:	fadd	d4, d4, d19
   37830:	fadd	d3, d18, d4
   37834:	fabs	d20, d3
   37838:	fsub	d19, d18, d3
   3783c:	fadd	d18, d22, d3
   37840:	fcmpe	d23, d20
   37844:	fadd	d19, d19, d4
   37848:	b.le	37e74 <atan@@GLIBC_2.17+0xef4>
   3784c:	fsub	d22, d22, d18
   37850:	ldr	d4, [sp, #40]
   37854:	fadd	d3, d22, d3
   37858:	fadd	d3, d3, d19
   3785c:	fadd	d3, d3, d4
   37860:	fadd	d21, d3, d18
   37864:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37868:	adrp	x1, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3786c:	ldr	d4, [x0, #2520]
   37870:	ldr	d22, [x1, #2568]
   37874:	fsub	d19, d18, d21
   37878:	fmul	d20, d5, d21
   3787c:	fmul	d18, d0, d21
   37880:	str	d4, [sp, #40]
   37884:	fnmsub	d21, d0, d21, d18
   37888:	fabs	d23, d22
   3788c:	fadd	d3, d19, d3
   37890:	fmadd	d3, d0, d3, d20
   37894:	fadd	d19, d3, d21
   37898:	fadd	d4, d18, d19
   3789c:	fabs	d20, d4
   378a0:	fsub	d3, d18, d4
   378a4:	fadd	d18, d22, d4
   378a8:	fcmpe	d23, d20
   378ac:	fadd	d3, d3, d19
   378b0:	b.le	37e5c <atan@@GLIBC_2.17+0xedc>
   378b4:	fsub	d22, d22, d18
   378b8:	fadd	d4, d22, d4
   378bc:	fadd	d4, d4, d3
   378c0:	ldr	d3, [sp, #40]
   378c4:	fadd	d4, d4, d3
   378c8:	fadd	d19, d4, d18
   378cc:	fabs	d20, d6
   378d0:	fsub	d18, d18, d19
   378d4:	fmul	d3, d5, d19
   378d8:	fmul	d5, d0, d19
   378dc:	fnmsub	d19, d0, d19, d5
   378e0:	fadd	d4, d18, d4
   378e4:	fmadd	d3, d0, d4, d3
   378e8:	fadd	d3, d3, d19
   378ec:	fadd	d18, d5, d3
   378f0:	fsub	d5, d5, d18
   378f4:	fmul	d4, d2, d18
   378f8:	fmul	d0, d6, d18
   378fc:	fnmsub	d18, d6, d18, d0
   37900:	fadd	d3, d5, d3
   37904:	fmadd	d3, d6, d3, d4
   37908:	fadd	d3, d3, d18
   3790c:	fadd	d4, d0, d3
   37910:	fabs	d19, d4
   37914:	fsub	d0, d0, d4
   37918:	fadd	d18, d6, d4
   3791c:	fcmpe	d20, d19
   37920:	fadd	d0, d0, d3
   37924:	b.le	37e48 <atan@@GLIBC_2.17+0xec8>
   37928:	fsub	d6, d6, d18
   3792c:	fadd	d4, d6, d4
   37930:	fadd	d0, d4, d0
   37934:	fadd	d2, d0, d2
   37938:	fadd	d4, d2, d18
   3793c:	fabs	d0, d4
   37940:	fsub	d18, d18, d4
   37944:	fsub	d3, d16, d4
   37948:	fcmpe	d17, d0
   3794c:	fadd	d2, d18, d2
   37950:	b.le	37e34 <atan@@GLIBC_2.17+0xeb4>
   37954:	fsub	d0, d16, d3
   37958:	fsub	d0, d0, d4
   3795c:	fsub	d0, d0, d2
   37960:	fadd	d0, d0, d7
   37964:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37968:	fadd	d4, d0, d3
   3796c:	ldr	d2, [x0, #2328]
   37970:	b	375c4 <atan@@GLIBC_2.17+0x644>
   37974:	mov	x0, #0x4070000000000000    	// #4643211215818981376
   37978:	fmov	d0, x0
   3797c:	mov	x0, #0x4330000000000000    	// #4841369599423283200
   37980:	fmov	d3, x0
   37984:	fmadd	d0, d2, d0, d3
   37988:	adrp	x4, 7f000 <f64xsubf128@@GLIBC_2.28+0x2b280>
   3798c:	add	x4, x4, #0x9c0
   37990:	fsub	d0, d0, d3
   37994:	fcvtzs	w0, d0
   37998:	sub	w0, w0, #0x10
   3799c:	cmp	w0, #0x6f
   379a0:	sxtw	x1, w0
   379a4:	sbfiz	x3, x0, #3, #32
   379a8:	sub	x3, x3, x1
   379ac:	lsl	x3, x3, #3
   379b0:	add	x2, x4, x3
   379b4:	ldr	d0, [x4, x3]
   379b8:	ldp	d7, d16, [x2, #40]
   379bc:	fsub	d0, d2, d0
   379c0:	ldp	d5, d6, [x2, #24]
   379c4:	ldp	d4, d3, [x2, #8]
   379c8:	fmadd	d7, d16, d0, d7
   379cc:	fmadd	d6, d0, d7, d6
   379d0:	fmadd	d5, d0, d6, d5
   379d4:	fmadd	d3, d0, d5, d3
   379d8:	fmul	d3, d0, d3
   379dc:	b.gt	37c48 <atan@@GLIBC_2.17+0xcc8>
   379e0:	cmp	w0, #0x2f
   379e4:	b.gt	37d7c <atan@@GLIBC_2.17+0xdfc>
   379e8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   379ec:	ldr	d5, [x0, #2320]
   379f0:	fmsub	d0, d5, d4, d3
   379f4:	fmadd	d3, d5, d4, d3
   379f8:	fadd	d0, d0, d4
   379fc:	fadd	d3, d3, d4
   37a00:	fcmp	d3, d0
   37a04:	b.eq	375e4 <atan@@GLIBC_2.17+0x664>  // b.none
   37a08:	lsl	x3, x1, #7
   37a0c:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   37a10:	add	x4, x0, #0x140
   37a14:	add	x2, x4, x3
   37a18:	ldr	d0, [x4, x3]
   37a1c:	ldp	d5, d6, [x2, #104]
   37a20:	fsub	d2, d2, d0
   37a24:	ldr	d7, [x2, #120]
   37a28:	ldp	d0, d3, [x2, #88]
   37a2c:	ldr	d4, [x2, #72]
   37a30:	fmadd	d6, d7, d2, d6
   37a34:	ldr	d7, [x2, #80]
   37a38:	fabs	d16, d4
   37a3c:	fmadd	d5, d2, d6, d5
   37a40:	fmadd	d3, d2, d5, d3
   37a44:	fmadd	d0, d2, d3, d0
   37a48:	fmul	d0, d2, d0
   37a4c:	fabs	d5, d0
   37a50:	fadd	d3, d4, d0
   37a54:	fcmpe	d16, d5
   37a58:	b.le	37cc8 <atan@@GLIBC_2.17+0xd48>
   37a5c:	fsub	d4, d4, d3
   37a60:	movi	d5, #0x0
   37a64:	fadd	d0, d4, d0
   37a68:	fadd	d0, d0, d5
   37a6c:	fadd	d0, d0, d7
   37a70:	fadd	d4, d0, d3
   37a74:	movi	d5, #0x0
   37a78:	add	x2, x0, #0x140
   37a7c:	add	x2, x2, x1, lsl #7
   37a80:	fsub	d3, d3, d4
   37a84:	fmul	d6, d2, d4
   37a88:	fmul	d5, d4, d5
   37a8c:	fnmsub	d4, d2, d4, d6
   37a90:	ldp	d7, d16, [x2, #56]
   37a94:	fadd	d0, d3, d0
   37a98:	fabs	d17, d7
   37a9c:	fmadd	d0, d2, d0, d5
   37aa0:	fadd	d0, d0, d4
   37aa4:	fadd	d3, d6, d0
   37aa8:	fabs	d5, d3
   37aac:	fsub	d4, d6, d3
   37ab0:	fadd	d6, d7, d3
   37ab4:	fcmpe	d17, d5
   37ab8:	fadd	d0, d4, d0
   37abc:	b.le	37cb4 <atan@@GLIBC_2.17+0xd34>
   37ac0:	fsub	d4, d7, d6
   37ac4:	fadd	d3, d4, d3
   37ac8:	fadd	d0, d3, d0
   37acc:	fadd	d4, d0, d16
   37ad0:	fadd	d0, d4, d6
   37ad4:	movi	d5, #0x0
   37ad8:	add	x2, x0, #0x140
   37adc:	add	x2, x2, x1, lsl #7
   37ae0:	fsub	d7, d6, d0
   37ae4:	fmul	d5, d0, d5
   37ae8:	fmul	d6, d2, d0
   37aec:	fnmsub	d0, d2, d0, d6
   37af0:	ldp	d3, d16, [x2, #40]
   37af4:	fadd	d4, d7, d4
   37af8:	fabs	d17, d3
   37afc:	fmadd	d4, d2, d4, d5
   37b00:	fadd	d4, d4, d0
   37b04:	fadd	d0, d6, d4
   37b08:	fabs	d7, d0
   37b0c:	fsub	d6, d6, d0
   37b10:	fadd	d5, d3, d0
   37b14:	fcmpe	d17, d7
   37b18:	fadd	d4, d6, d4
   37b1c:	b.le	37ca0 <atan@@GLIBC_2.17+0xd20>
   37b20:	fsub	d3, d3, d5
   37b24:	fadd	d3, d3, d0
   37b28:	fadd	d4, d3, d4
   37b2c:	fadd	d3, d4, d16
   37b30:	fadd	d0, d3, d5
   37b34:	movi	d4, #0x0
   37b38:	add	x2, x0, #0x140
   37b3c:	add	x2, x2, x1, lsl #7
   37b40:	fsub	d6, d5, d0
   37b44:	fmul	d4, d0, d4
   37b48:	fmul	d5, d2, d0
   37b4c:	fnmsub	d0, d2, d0, d5
   37b50:	ldp	d7, d16, [x2, #24]
   37b54:	fadd	d3, d6, d3
   37b58:	fabs	d17, d7
   37b5c:	fmadd	d3, d2, d3, d4
   37b60:	fadd	d3, d3, d0
   37b64:	fadd	d0, d5, d3
   37b68:	fabs	d6, d0
   37b6c:	fsub	d4, d5, d0
   37b70:	fadd	d5, d7, d0
   37b74:	fcmpe	d17, d6
   37b78:	fadd	d3, d4, d3
   37b7c:	b.le	37cf4 <atan@@GLIBC_2.17+0xd74>
   37b80:	fsub	d7, d7, d5
   37b84:	fadd	d0, d7, d0
   37b88:	fadd	d3, d0, d3
   37b8c:	fadd	d0, d3, d16
   37b90:	fadd	d3, d0, d5
   37b94:	movi	d4, #0x0
   37b98:	add	x0, x0, #0x140
   37b9c:	add	x0, x0, x1, lsl #7
   37ba0:	fsub	d6, d5, d3
   37ba4:	fmul	d4, d3, d4
   37ba8:	fmul	d5, d2, d3
   37bac:	fnmsub	d3, d2, d3, d5
   37bb0:	ldp	d7, d16, [x0, #8]
   37bb4:	fadd	d0, d6, d0
   37bb8:	fabs	d6, d7
   37bbc:	fmadd	d2, d2, d0, d4
   37bc0:	fadd	d2, d2, d3
   37bc4:	fadd	d3, d5, d2
   37bc8:	fabs	d4, d3
   37bcc:	fsub	d5, d5, d3
   37bd0:	fadd	d0, d7, d3
   37bd4:	fcmpe	d6, d4
   37bd8:	fadd	d2, d5, d2
   37bdc:	b.le	37ce0 <atan@@GLIBC_2.17+0xd60>
   37be0:	fsub	d7, d7, d0
   37be4:	fadd	d3, d7, d3
   37be8:	fadd	d2, d3, d2
   37bec:	fadd	d3, d2, d16
   37bf0:	fadd	d4, d3, d0
   37bf4:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37bf8:	ldr	d5, [x0, #2272]
   37bfc:	fsub	d0, d0, d4
   37c00:	fadd	d2, d0, d3
   37c04:	fmsub	d0, d5, d4, d2
   37c08:	fmadd	d2, d5, d4, d2
   37c0c:	fadd	d0, d0, d4
   37c10:	fadd	d2, d2, d4
   37c14:	fcmp	d2, d0
   37c18:	b.eq	375e4 <atan@@GLIBC_2.17+0x664>  // b.none
   37c1c:	fmov	d0, d1
   37c20:	bl	36e10 <asinh@@GLIBC_2.17+0x108>
   37c24:	b	37298 <atan@@GLIBC_2.17+0x318>
   37c28:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37c2c:	ldr	d16, [x0, #2288]
   37c30:	b	3735c <atan@@GLIBC_2.17+0x3dc>
   37c34:	fcmpe	d1, #0.0
   37c38:	b.le	37e28 <atan@@GLIBC_2.17+0xea8>
   37c3c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   37c40:	ldr	d0, [x0, #576]
   37c44:	b	37298 <atan@@GLIBC_2.17+0x318>
   37c48:	cmp	w0, #0xaf
   37c4c:	b.gt	37d88 <atan@@GLIBC_2.17+0xe08>
   37c50:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37c54:	ldr	d5, [x0, #2304]
   37c58:	b	379f0 <atan@@GLIBC_2.17+0xa70>
   37c5c:	mov	x0, #0x10000000000000      	// #4503599627370496
   37c60:	fmov	d0, x0
   37c64:	fcmpe	d2, d0
   37c68:	b.pl	37db8 <atan@@GLIBC_2.17+0xe38>  // b.nfrst
   37c6c:	fmul	d2, d2, d2
   37c70:	fmov	d0, d1
   37c74:	b	37298 <atan@@GLIBC_2.17+0x318>
   37c78:	eor	w0, w20, w19
   37c7c:	msr	fpcr, x0
   37c80:	b	36fb4 <atan@@GLIBC_2.17+0x34>
   37c84:	msr	fpcr, x19
   37c88:	b	3729c <atan@@GLIBC_2.17+0x31c>
   37c8c:	fadd	d0, d5, d3
   37c90:	fsub	d0, d7, d0
   37c94:	fadd	d0, d0, d6
   37c98:	fsub	d0, d0, d2
   37c9c:	b	375b8 <atan@@GLIBC_2.17+0x638>
   37ca0:	fsub	d0, d0, d5
   37ca4:	fadd	d3, d0, d3
   37ca8:	fadd	d3, d3, d16
   37cac:	fadd	d3, d3, d4
   37cb0:	b	37b30 <atan@@GLIBC_2.17+0xbb0>
   37cb4:	fsub	d3, d3, d6
   37cb8:	fadd	d4, d3, d7
   37cbc:	fadd	d4, d4, d16
   37cc0:	fadd	d4, d4, d0
   37cc4:	b	37ad0 <atan@@GLIBC_2.17+0xb50>
   37cc8:	fsub	d0, d0, d3
   37ccc:	movi	d5, #0x0
   37cd0:	fadd	d0, d0, d4
   37cd4:	fadd	d0, d0, d7
   37cd8:	fadd	d0, d0, d5
   37cdc:	b	37a70 <atan@@GLIBC_2.17+0xaf0>
   37ce0:	fsub	d3, d3, d0
   37ce4:	fadd	d3, d3, d7
   37ce8:	fadd	d3, d3, d16
   37cec:	fadd	d3, d3, d2
   37cf0:	b	37bf0 <atan@@GLIBC_2.17+0xc70>
   37cf4:	fsub	d0, d0, d5
   37cf8:	fadd	d0, d0, d7
   37cfc:	fadd	d0, d0, d16
   37d00:	fadd	d0, d0, d3
   37d04:	b	37b90 <atan@@GLIBC_2.17+0xc10>
   37d08:	fsub	d3, d3, d4
   37d0c:	fadd	d2, d3, d17
   37d10:	fadd	d2, d2, d18
   37d14:	fadd	d2, d2, d5
   37d18:	b	37588 <atan@@GLIBC_2.17+0x608>
   37d1c:	fsub	d3, d3, d16
   37d20:	fadd	d4, d3, d4
   37d24:	fadd	d4, d4, d19
   37d28:	fadd	d4, d4, d5
   37d2c:	b	3752c <atan@@GLIBC_2.17+0x5ac>
   37d30:	fsub	d3, d3, d16
   37d34:	fadd	d5, d3, d17
   37d38:	fadd	d5, d5, d19
   37d3c:	fadd	d5, d5, d4
   37d40:	b	374d0 <atan@@GLIBC_2.17+0x550>
   37d44:	fsub	d4, d4, d5
   37d48:	fadd	d4, d4, d16
   37d4c:	fadd	d4, d4, d19
   37d50:	fadd	d4, d4, d3
   37d54:	b	37474 <atan@@GLIBC_2.17+0x4f4>
   37d58:	fsub	d3, d3, d4
   37d5c:	movi	d16, #0x0
   37d60:	fadd	d3, d3, d5
   37d64:	fadd	d3, d3, d18
   37d68:	fadd	d3, d3, d16
   37d6c:	b	37418 <atan@@GLIBC_2.17+0x498>
   37d70:	fsub	d2, d2, d0
   37d74:	fadd	d2, d2, d4
   37d78:	b	373c0 <atan@@GLIBC_2.17+0x440>
   37d7c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37d80:	ldr	d5, [x0, #2312]
   37d84:	b	379f0 <atan@@GLIBC_2.17+0xa70>
   37d88:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37d8c:	ldr	d5, [x0, #2296]
   37d90:	b	379f0 <atan@@GLIBC_2.17+0xa70>
   37d94:	fadd	d4, d3, d18
   37d98:	fsub	d4, d16, d4
   37d9c:	b	376a8 <atan@@GLIBC_2.17+0x728>
   37da0:	fsub	d4, d4, d3
   37da4:	movi	d6, #0x0
   37da8:	fadd	d0, d4, d0
   37dac:	fadd	d0, d0, d6
   37db0:	fadd	d0, d0, d16
   37db4:	b	370d8 <atan@@GLIBC_2.17+0x158>
   37db8:	fmov	d0, d1
   37dbc:	b	37298 <atan@@GLIBC_2.17+0x318>
   37dc0:	fsub	d19, d19, d18
   37dc4:	ldr	d4, [sp, #40]
   37dc8:	fadd	d3, d19, d3
   37dcc:	fadd	d3, d3, d22
   37dd0:	fadd	d3, d3, d4
   37dd4:	b	37790 <atan@@GLIBC_2.17+0x810>
   37dd8:	fsub	d3, d3, d0
   37ddc:	fadd	d3, d3, d1
   37de0:	fadd	d2, d3, d17
   37de4:	fadd	d3, d2, d4
   37de8:	b	3726c <atan@@GLIBC_2.17+0x2ec>
   37dec:	fsub	d3, d3, d0
   37df0:	fadd	d4, d3, d4
   37df4:	fadd	d4, d4, d17
   37df8:	fadd	d4, d4, d6
   37dfc:	b	371f8 <atan@@GLIBC_2.17+0x278>
   37e00:	fsub	d3, d3, d0
   37e04:	fadd	d3, d3, d7
   37e08:	fadd	d3, d3, d18
   37e0c:	fadd	d3, d3, d4
   37e10:	b	37198 <atan@@GLIBC_2.17+0x218>
   37e14:	fsub	d3, d3, d6
   37e18:	fadd	d4, d3, d4
   37e1c:	fadd	d4, d4, d17
   37e20:	fadd	d4, d4, d0
   37e24:	b	37138 <atan@@GLIBC_2.17+0x1b8>
   37e28:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   37e2c:	ldr	d0, [x0, #2392]
   37e30:	b	37298 <atan@@GLIBC_2.17+0x318>
   37e34:	fadd	d0, d4, d3
   37e38:	fsub	d0, d16, d0
   37e3c:	fadd	d0, d0, d7
   37e40:	fsub	d0, d0, d2
   37e44:	b	37964 <atan@@GLIBC_2.17+0x9e4>
   37e48:	fsub	d4, d4, d18
   37e4c:	fadd	d6, d4, d6
   37e50:	fadd	d2, d6, d2
   37e54:	fadd	d2, d2, d0
   37e58:	b	37938 <atan@@GLIBC_2.17+0x9b8>
   37e5c:	fsub	d4, d4, d18
   37e60:	ldr	d19, [sp, #40]
   37e64:	fadd	d4, d4, d22
   37e68:	fadd	d4, d4, d19
   37e6c:	fadd	d4, d4, d3
   37e70:	b	378c8 <atan@@GLIBC_2.17+0x948>
   37e74:	fsub	d3, d3, d18
   37e78:	ldr	d4, [sp, #40]
   37e7c:	fadd	d3, d3, d22
   37e80:	fadd	d3, d3, d4
   37e84:	fadd	d3, d3, d19
   37e88:	b	37860 <atan@@GLIBC_2.17+0x8e0>
   37e8c:	fsub	d4, d4, d18
   37e90:	ldr	d3, [sp, #40]
   37e94:	fadd	d4, d4, d22
   37e98:	fadd	d4, d4, d3
   37e9c:	fadd	d4, d4, d19
   37ea0:	b	377f8 <atan@@GLIBC_2.17+0x878>
   37ea4:	nop

0000000000037ea8 <cbrt@@GLIBC_2.17>:
   37ea8:	stp	x29, x30, [sp, #-64]!
   37eac:	mov	x29, sp
   37eb0:	str	x19, [sp, #16]
   37eb4:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   37eb8:	stp	d8, d9, [sp, #32]
   37ebc:	fabs	d9, d0
   37ec0:	fmov	d8, d0
   37ec4:	ldr	x1, [x19, #4032]
   37ec8:	add	x0, sp, #0x34
   37ecc:	fmov	d0, d9
   37ed0:	ldr	x2, [x1]
   37ed4:	str	x2, [sp, #56]
   37ed8:	mov	x2, #0x0                   	// #0
   37edc:	bl	3da60 <frexp@@GLIBC_2.17>
   37ee0:	ldr	w2, [sp, #52]
   37ee4:	cbnz	w2, 37f0c <cbrt@@GLIBC_2.17+0x64>
   37ee8:	fcmp	d9, d9
   37eec:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   37ef0:	fmov	d1, x0
   37ef4:	fccmp	d9, d1, #0x0, vc
   37ef8:	b.gt	37fe4 <cbrt@@GLIBC_2.17+0x13c>
   37efc:	mov	x0, #0x10000000000000      	// #4503599627370496
   37f00:	fmov	d1, x0
   37f04:	fcmpe	d9, d1
   37f08:	b.lt	37fdc <cbrt@@GLIBC_2.17+0x134>  // b.tstop
   37f0c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   37f10:	fmov	d7, #2.000000000000000000e+00
   37f14:	adrp	x3, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   37f18:	add	x3, x3, #0xeb0
   37f1c:	ldr	d3, [x0, #3704]
   37f20:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   37f24:	fcmp	d8, #0.0
   37f28:	ldr	d6, [x0, #3712]
   37f2c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   37f30:	fmsub	d6, d0, d3, d6
   37f34:	ldr	d5, [x0, #3720]
   37f38:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   37f3c:	ldr	d4, [x0, #3728]
   37f40:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   37f44:	ldr	d3, [x0, #3736]
   37f48:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   37f4c:	ldr	d2, [x0, #3744]
   37f50:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   37f54:	fmadd	d5, d6, d0, d5
   37f58:	ldr	d1, [x0, #3752]
   37f5c:	mov	w0, #0x5556                	// #21846
   37f60:	movk	w0, #0x5555, lsl #16
   37f64:	smull	x0, w2, w0
   37f68:	lsr	x0, x0, #32
   37f6c:	fmadd	d4, d5, d0, d4
   37f70:	sub	w0, w0, w2, asr #31
   37f74:	add	w1, w0, w0, lsl #1
   37f78:	sub	w1, w2, w1
   37f7c:	add	w1, w1, #0x2
   37f80:	ldr	d6, [x3, w1, sxtw #3]
   37f84:	fmadd	d3, d4, d0, d3
   37f88:	fmadd	d2, d3, d0, d2
   37f8c:	fmadd	d2, d2, d0, d1
   37f90:	fmul	d3, d2, d2
   37f94:	fmul	d3, d3, d2
   37f98:	fmadd	d1, d0, d7, d3
   37f9c:	fmadd	d0, d3, d7, d0
   37fa0:	fmul	d1, d1, d2
   37fa4:	fdiv	d0, d1, d0
   37fa8:	fmul	d0, d0, d6
   37fac:	fneg	d1, d0
   37fb0:	fcsel	d0, d1, d0, le
   37fb4:	bl	3dad8 <ldexp@@GLIBC_2.17>
   37fb8:	ldr	x19, [x19, #4032]
   37fbc:	ldr	x1, [sp, #56]
   37fc0:	ldr	x0, [x19]
   37fc4:	eor	x0, x1, x0
   37fc8:	cbnz	x0, 37fec <cbrt@@GLIBC_2.17+0x144>
   37fcc:	ldr	x19, [sp, #16]
   37fd0:	ldp	d8, d9, [sp, #32]
   37fd4:	ldp	x29, x30, [sp], #64
   37fd8:	ret
   37fdc:	fcmp	d8, #0.0
   37fe0:	b.ne	37f0c <cbrt@@GLIBC_2.17+0x64>  // b.any
   37fe4:	fadd	d0, d8, d8
   37fe8:	b	37fb8 <cbrt@@GLIBC_2.17+0x110>
   37fec:	bl	ba70 <__stack_chk_fail@plt>

0000000000037ff0 <ceil@@GLIBC_2.17>:
   37ff0:	frintp	d0, d0
   37ff4:	ret

0000000000037ff8 <erf@@GLIBC_2.17>:
   37ff8:	stp	x29, x30, [sp, #-64]!
   37ffc:	fmov	x0, d0
   38000:	mov	w2, #0x7fefffff            	// #2146435071
   38004:	mov	x29, sp
   38008:	str	x19, [sp, #16]
   3800c:	ubfx	x1, x0, #32, #31
   38010:	lsr	x19, x0, #32
   38014:	cmp	w1, w2
   38018:	b.gt	3815c <erf@@GLIBC_2.17+0x164>
   3801c:	mov	w0, #0x3feaffff            	// #1072365567
   38020:	cmp	w1, w0
   38024:	b.gt	38078 <erf@@GLIBC_2.17+0x80>
   38028:	mov	w0, #0x3e2fffff            	// #1043333119
   3802c:	cmp	w1, w0
   38030:	b.gt	381c0 <erf@@GLIBC_2.17+0x1c8>
   38034:	tst	x19, #0x7f800000
   38038:	b.ne	381a8 <erf@@GLIBC_2.17+0x1b0>  // b.any
   3803c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38040:	fmov	d3, #1.600000000000000000e+01
   38044:	ldr	d1, [x0, #3800]
   38048:	mov	x0, #0x3fb0000000000000    	// #4589168020290535424
   3804c:	fmov	d2, x0
   38050:	mov	x0, #0x10000000000000      	// #4503599627370496
   38054:	fmul	d1, d0, d1
   38058:	fmadd	d0, d0, d3, d1
   3805c:	fmov	d1, x0
   38060:	fmul	d0, d0, d2
   38064:	fabs	d2, d0
   38068:	fcmpe	d2, d1
   3806c:	b.pl	38178 <erf@@GLIBC_2.17+0x180>  // b.nfrst
   38070:	fmul	d1, d0, d0
   38074:	b	38178 <erf@@GLIBC_2.17+0x180>
   38078:	mov	w0, #0x3ff3ffff            	// #1072955391
   3807c:	cmp	w1, w0
   38080:	b.gt	38184 <erf@@GLIBC_2.17+0x18c>
   38084:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38088:	stp	d8, d9, [sp, #32]
   3808c:	fabs	d3, d0
   38090:	ldr	d18, [x0, #3896]
   38094:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38098:	fmov	d2, #1.000000000000000000e+00
   3809c:	stp	d10, d11, [sp, #48]
   380a0:	ldr	d4, [x0, #3904]
   380a4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   380a8:	fsub	d3, d3, d2
   380ac:	ldr	d8, [x0, #3912]
   380b0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   380b4:	ldr	d7, [x0, #3920]
   380b8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   380bc:	fmadd	d7, d3, d4, d7
   380c0:	fmadd	d8, d3, d18, d8
   380c4:	ldr	d0, [x0, #3928]
   380c8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   380cc:	fmul	d4, d3, d3
   380d0:	ldr	d17, [x0, #3936]
   380d4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   380d8:	ldr	d16, [x0, #3944]
   380dc:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   380e0:	ldr	d11, [x0, #3952]
   380e4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   380e8:	fmadd	d2, d3, d16, d2
   380ec:	ldr	d1, [x0, #3960]
   380f0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   380f4:	fmadd	d0, d3, d0, d1
   380f8:	ldr	d6, [x0, #3968]
   380fc:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38100:	fmadd	d6, d3, d17, d6
   38104:	fmadd	d1, d4, d7, d2
   38108:	ldr	d5, [x0, #3976]
   3810c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38110:	fmadd	d3, d3, d11, d5
   38114:	fmadd	d0, d4, d8, d0
   38118:	fmul	d5, d4, d4
   3811c:	ldr	d10, [x0, #3984]
   38120:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38124:	ldr	d9, [x0, #3992]
   38128:	fmul	d4, d4, d5
   3812c:	fmadd	d0, d5, d6, d0
   38130:	fmadd	d1, d5, d3, d1
   38134:	fmadd	d0, d4, d10, d0
   38138:	fmadd	d1, d4, d9, d1
   3813c:	fdiv	d0, d0, d1
   38140:	tbnz	w19, #31, 38388 <erf@@GLIBC_2.17+0x390>
   38144:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38148:	ldp	d8, d9, [sp, #32]
   3814c:	ldr	d1, [x0, #4000]
   38150:	ldp	d10, d11, [sp, #48]
   38154:	fadd	d0, d0, d1
   38158:	b	38178 <erf@@GLIBC_2.17+0x180>
   3815c:	fmov	d1, #1.000000000000000000e+00
   38160:	lsr	w0, w19, #31
   38164:	mov	w19, #0x1                   	// #1
   38168:	fdiv	d1, d1, d0
   3816c:	sub	w0, w19, w0, lsl #1
   38170:	scvtf	d0, w0
   38174:	fadd	d0, d0, d1
   38178:	ldr	x19, [sp, #16]
   3817c:	ldp	x29, x30, [sp], #64
   38180:	ret
   38184:	mov	w0, #0x4017ffff            	// #1075314687
   38188:	cmp	w1, w0
   3818c:	b.le	38260 <erf@@GLIBC_2.17+0x268>
   38190:	tbnz	w19, #31, 38464 <erf@@GLIBC_2.17+0x46c>
   38194:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38198:	fmov	d0, #1.000000000000000000e+00
   3819c:	ldr	d1, [x0, #4016]
   381a0:	fsub	d0, d0, d1
   381a4:	b	38178 <erf@@GLIBC_2.17+0x180>
   381a8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   381ac:	ldr	x19, [sp, #16]
   381b0:	ldr	d1, [x0, #3808]
   381b4:	ldp	x29, x30, [sp], #64
   381b8:	fmadd	d0, d0, d1, d0
   381bc:	ret
   381c0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   381c4:	fmul	d3, d0, d0
   381c8:	stp	d8, d9, [sp, #32]
   381cc:	ldr	d7, [x0, #3816]
   381d0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   381d4:	ldr	x19, [sp, #16]
   381d8:	ldr	d2, [x0, #3824]
   381dc:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   381e0:	ldr	d1, [x0, #3832]
   381e4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   381e8:	fmadd	d7, d3, d7, d1
   381ec:	ldr	d6, [x0, #3840]
   381f0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   381f4:	fmadd	d6, d3, d2, d6
   381f8:	fmov	d2, #1.000000000000000000e+00
   381fc:	ldr	d4, [x0, #3848]
   38200:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38204:	ldr	d9, [x0, #3856]
   38208:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   3820c:	ldr	d8, [x0, #3864]
   38210:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38214:	fmadd	d2, d3, d9, d2
   38218:	ldr	d1, [x0, #3872]
   3821c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38220:	fmadd	d1, d3, d4, d1
   38224:	fmul	d4, d3, d3
   38228:	ldr	d5, [x0, #3880]
   3822c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38230:	fmadd	d3, d3, d8, d5
   38234:	ldr	d8, [x0, #3888]
   38238:	fmul	d5, d4, d4
   3823c:	fmadd	d1, d4, d7, d1
   38240:	fmadd	d2, d4, d6, d2
   38244:	fmadd	d1, d5, d8, d1
   38248:	ldp	d8, d9, [sp, #32]
   3824c:	fmadd	d2, d5, d3, d2
   38250:	ldp	x29, x30, [sp], #64
   38254:	fdiv	d1, d1, d2
   38258:	fmadd	d0, d0, d1, d0
   3825c:	ret
   38260:	fmul	d2, d0, d0
   38264:	fmov	d1, #1.000000000000000000e+00
   38268:	stp	d8, d9, [sp, #32]
   3826c:	fabs	d8, d0
   38270:	mov	w0, #0xdb6d                	// #56173
   38274:	stp	d10, d11, [sp, #48]
   38278:	movk	w0, #0x4006, lsl #16
   3827c:	cmp	w1, w0
   38280:	fdiv	d0, d1, d2
   38284:	fmul	d3, d0, d0
   38288:	fmul	d4, d3, d3
   3828c:	fmul	d5, d4, d3
   38290:	b.le	383a0 <erf@@GLIBC_2.17+0x3a8>
   38294:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38298:	ldr	d11, [x0, #56]
   3829c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382a0:	ldr	d7, [x0, #64]
   382a4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382a8:	ldr	d9, [x0, #72]
   382ac:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382b0:	fmadd	d11, d0, d11, d9
   382b4:	ldr	d10, [x0, #80]
   382b8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382bc:	fmadd	d7, d0, d7, d10
   382c0:	ldr	d17, [x0, #88]
   382c4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382c8:	ldr	d2, [x0, #96]
   382cc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382d0:	ldr	d16, [x0, #104]
   382d4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382d8:	ldr	d10, [x0, #112]
   382dc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382e0:	fmadd	d1, d0, d16, d1
   382e4:	ldr	d9, [x0, #120]
   382e8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382ec:	fmadd	d9, d0, d17, d9
   382f0:	ldr	d6, [x0, #128]
   382f4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   382f8:	fmadd	d6, d0, d2, d6
   382fc:	ldr	d2, [x0, #136]
   38300:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38304:	fmadd	d2, d0, d10, d2
   38308:	fmadd	d9, d11, d3, d9
   3830c:	ldr	d17, [x0, #144]
   38310:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38314:	ldr	d10, [x0, #152]
   38318:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3831c:	fmadd	d0, d0, d17, d10
   38320:	fmadd	d10, d7, d3, d1
   38324:	ldr	d16, [x0, #160]
   38328:	fmadd	d9, d6, d4, d9
   3832c:	fmadd	d10, d2, d4, d10
   38330:	fmadd	d9, d5, d16, d9
   38334:	fmadd	d10, d0, d5, d10
   38338:	fmov	x0, d8
   3833c:	fmov	d0, #-5.625000000000000000e-01
   38340:	and	x0, x0, #0xffffffff00000000
   38344:	fmov	d11, x0
   38348:	fmsub	d0, d11, d11, d0
   3834c:	bl	333e8 <__exp_finite@GLIBC_2.17>
   38350:	fsub	d1, d11, d8
   38354:	fdiv	d9, d9, d10
   38358:	fadd	d11, d8, d11
   3835c:	fmov	d10, d0
   38360:	fmadd	d0, d1, d11, d9
   38364:	bl	333e8 <__exp_finite@GLIBC_2.17>
   38368:	fmul	d0, d10, d0
   3836c:	fdiv	d8, d0, d8
   38370:	fmov	d0, #1.000000000000000000e+00
   38374:	tbnz	w19, #31, 38478 <erf@@GLIBC_2.17+0x480>
   38378:	fsub	d0, d0, d8
   3837c:	ldp	d8, d9, [sp, #32]
   38380:	ldp	d10, d11, [sp, #48]
   38384:	b	38178 <erf@@GLIBC_2.17+0x180>
   38388:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   3838c:	ldp	d8, d9, [sp, #32]
   38390:	ldr	d1, [x0, #4008]
   38394:	ldp	d10, d11, [sp, #48]
   38398:	fsub	d0, d1, d0
   3839c:	b	38178 <erf@@GLIBC_2.17+0x180>
   383a0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   383a4:	fmul	d17, d4, d4
   383a8:	ldr	d6, [x0, #4024]
   383ac:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   383b0:	ldr	d2, [x0, #4032]
   383b4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   383b8:	fmadd	d6, d0, d6, d2
   383bc:	ldr	d16, [x0, #4040]
   383c0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   383c4:	ldr	d10, [x0, #4048]
   383c8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   383cc:	fmadd	d2, d0, d16, d1
   383d0:	ldr	d7, [x0, #4056]
   383d4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   383d8:	ldr	d9, [x0, #4064]
   383dc:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   383e0:	fmadd	d9, d0, d10, d9
   383e4:	fmadd	d2, d6, d3, d2
   383e8:	ldr	d11, [x0, #4072]
   383ec:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   383f0:	fmadd	d11, d0, d7, d11
   383f4:	ldr	d1, [x0, #4080]
   383f8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   383fc:	ldr	d18, [x0, #4088]
   38400:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38404:	ldr	d16, [x0]
   38408:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3840c:	fmadd	d2, d9, d4, d2
   38410:	ldr	d10, [x0, #8]
   38414:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38418:	fmadd	d10, d0, d1, d10
   3841c:	ldr	d1, [x0, #16]
   38420:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38424:	fmadd	d1, d0, d18, d1
   38428:	ldr	d7, [x0, #24]
   3842c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38430:	fmadd	d7, d0, d16, d7
   38434:	ldr	d18, [x0, #32]
   38438:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3843c:	ldr	d6, [x0, #40]
   38440:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38444:	fmadd	d6, d0, d18, d6
   38448:	fmadd	d0, d11, d3, d1
   3844c:	fmadd	d9, d10, d5, d2
   38450:	ldr	d16, [x0, #48]
   38454:	fmadd	d0, d7, d4, d0
   38458:	fmadd	d10, d17, d16, d9
   3845c:	fmadd	d9, d6, d5, d0
   38460:	b	38338 <erf@@GLIBC_2.17+0x340>
   38464:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38468:	fmov	d1, #1.000000000000000000e+00
   3846c:	ldr	d0, [x0, #4016]
   38470:	fsub	d0, d0, d1
   38474:	b	38178 <erf@@GLIBC_2.17+0x180>
   38478:	fsub	d0, d8, d0
   3847c:	ldp	d8, d9, [sp, #32]
   38480:	ldp	d10, d11, [sp, #48]
   38484:	b	38178 <erf@@GLIBC_2.17+0x180>

0000000000038488 <erfc@@GLIBC_2.17>:
   38488:	stp	x29, x30, [sp, #-64]!
   3848c:	fmov	x0, d0
   38490:	mov	w2, #0x7fefffff            	// #2146435071
   38494:	mov	x29, sp
   38498:	str	x19, [sp, #16]
   3849c:	ubfx	x1, x0, #32, #31
   384a0:	lsr	x19, x0, #32
   384a4:	cmp	w1, w2
   384a8:	b.gt	3865c <erfc@@GLIBC_2.17+0x1d4>
   384ac:	mov	w0, #0x3feaffff            	// #1072365567
   384b0:	cmp	w1, w0
   384b4:	b.gt	38578 <erfc@@GLIBC_2.17+0xf0>
   384b8:	mov	w0, #0x3c6fffff            	// #1013972991
   384bc:	cmp	w1, w0
   384c0:	b.le	387fc <erfc@@GLIBC_2.17+0x374>
   384c4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   384c8:	fmul	d3, d0, d0
   384cc:	stp	d8, d9, [sp, #32]
   384d0:	fmov	d8, #1.000000000000000000e+00
   384d4:	ldr	d1, [x0, #3816]
   384d8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   384dc:	adrp	x1, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   384e0:	ldr	d5, [x0, #3824]
   384e4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   384e8:	ldr	d7, [x0, #3832]
   384ec:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   384f0:	fmadd	d7, d3, d1, d7
   384f4:	ldr	d6, [x0, #3840]
   384f8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   384fc:	fmadd	d6, d3, d5, d6
   38500:	ldr	d4, [x0, #3848]
   38504:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38508:	ldr	d2, [x0, #3856]
   3850c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38510:	ldr	d9, [x0, #3864]
   38514:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38518:	fmadd	d2, d3, d2, d8
   3851c:	ldr	d1, [x0, #3872]
   38520:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38524:	fmadd	d1, d3, d4, d1
   38528:	fmul	d4, d3, d3
   3852c:	ldr	d5, [x0, #3880]
   38530:	mov	w0, #0x3fcfffff            	// #1070596095
   38534:	fmadd	d3, d3, d9, d5
   38538:	ldr	d9, [x1, #3888]
   3853c:	cmp	w19, w0
   38540:	fmul	d5, d4, d4
   38544:	fmadd	d1, d4, d7, d1
   38548:	fmadd	d2, d4, d6, d2
   3854c:	fmadd	d1, d5, d9, d1
   38550:	fmadd	d2, d5, d3, d2
   38554:	fdiv	d1, d1, d2
   38558:	fmul	d2, d1, d0
   3855c:	b.gt	387dc <erfc@@GLIBC_2.17+0x354>
   38560:	fadd	d0, d0, d2
   38564:	ldr	x19, [sp, #16]
   38568:	fsub	d0, d8, d0
   3856c:	ldp	d8, d9, [sp, #32]
   38570:	ldp	x29, x30, [sp], #64
   38574:	ret
   38578:	mov	w0, #0x3ff3ffff            	// #1072955391
   3857c:	cmp	w1, w0
   38580:	b.gt	38680 <erfc@@GLIBC_2.17+0x1f8>
   38584:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38588:	stp	d8, d9, [sp, #32]
   3858c:	fabs	d0, d0
   38590:	ldr	d18, [x0, #3896]
   38594:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38598:	fmov	d9, #1.000000000000000000e+00
   3859c:	stp	d10, d11, [sp, #48]
   385a0:	ldr	d17, [x0, #3904]
   385a4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   385a8:	fsub	d0, d0, d9
   385ac:	ldr	d8, [x0, #3912]
   385b0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   385b4:	ldr	d7, [x0, #3920]
   385b8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   385bc:	fmadd	d8, d0, d18, d8
   385c0:	fmadd	d7, d0, d17, d7
   385c4:	ldr	d3, [x0, #3928]
   385c8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   385cc:	ldr	d16, [x0, #3936]
   385d0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   385d4:	ldr	d2, [x0, #3944]
   385d8:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   385dc:	ldr	d5, [x0, #3952]
   385e0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   385e4:	fmadd	d2, d0, d2, d9
   385e8:	ldr	d1, [x0, #3960]
   385ec:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   385f0:	fmadd	d1, d0, d3, d1
   385f4:	fmul	d3, d0, d0
   385f8:	ldr	d6, [x0, #3968]
   385fc:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38600:	fmadd	d6, d0, d16, d6
   38604:	ldr	d4, [x0, #3976]
   38608:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   3860c:	fmadd	d4, d0, d5, d4
   38610:	fmadd	d1, d3, d8, d1
   38614:	fmul	d5, d3, d3
   38618:	fmadd	d0, d3, d7, d2
   3861c:	ldr	d11, [x0, #3984]
   38620:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38624:	ldr	d10, [x0, #3992]
   38628:	fmul	d3, d3, d5
   3862c:	fmadd	d1, d5, d6, d1
   38630:	fmadd	d0, d5, d4, d0
   38634:	fmadd	d1, d3, d11, d1
   38638:	fmadd	d0, d3, d10, d0
   3863c:	fdiv	d1, d1, d0
   38640:	tbnz	w19, #31, 3883c <erfc@@GLIBC_2.17+0x3b4>
   38644:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38648:	ldp	d8, d9, [sp, #32]
   3864c:	ldr	d0, [x0, #168]
   38650:	ldp	d10, d11, [sp, #48]
   38654:	fsub	d0, d0, d1
   38658:	b	38674 <erfc@@GLIBC_2.17+0x1ec>
   3865c:	fmov	d1, #1.000000000000000000e+00
   38660:	lsr	w0, w19, #31
   38664:	fdiv	d1, d1, d0
   38668:	lsl	w0, w0, #1
   3866c:	scvtf	d0, w0
   38670:	fadd	d0, d0, d1
   38674:	ldr	x19, [sp, #16]
   38678:	ldp	x29, x30, [sp], #64
   3867c:	ret
   38680:	mov	w0, #0x403bffff            	// #1077673983
   38684:	cmp	w1, w0
   38688:	b.gt	38810 <erfc@@GLIBC_2.17+0x388>
   3868c:	fmul	d2, d0, d0
   38690:	fmov	d1, #1.000000000000000000e+00
   38694:	mov	w0, #0xdb6c                	// #56172
   38698:	stp	d8, d9, [sp, #32]
   3869c:	movk	w0, #0x4006, lsl #16
   386a0:	stp	d10, d11, [sp, #48]
   386a4:	fabs	d8, d0
   386a8:	cmp	w1, w0
   386ac:	fdiv	d0, d1, d2
   386b0:	b.le	38858 <erfc@@GLIBC_2.17+0x3d0>
   386b4:	cmp	w19, #0x0
   386b8:	mov	w0, #0x4017ffff            	// #1075314687
   386bc:	ccmp	w1, w0, #0x4, lt  // lt = tstop
   386c0:	b.gt	38928 <erfc@@GLIBC_2.17+0x4a0>
   386c4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   386c8:	ldr	d4, [x0, #56]
   386cc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   386d0:	ldr	d2, [x0, #64]
   386d4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   386d8:	ldr	d10, [x0, #72]
   386dc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   386e0:	fmadd	d4, d0, d4, d10
   386e4:	ldr	d6, [x0, #80]
   386e8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   386ec:	fmadd	d6, d0, d2, d6
   386f0:	ldr	d2, [x0, #88]
   386f4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   386f8:	ldr	d11, [x0, #96]
   386fc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38700:	ldr	d7, [x0, #104]
   38704:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38708:	ldr	d9, [x0, #112]
   3870c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38710:	fmadd	d1, d0, d7, d1
   38714:	ldr	d10, [x0, #120]
   38718:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3871c:	fmadd	d10, d0, d2, d10
   38720:	fmul	d2, d0, d0
   38724:	ldr	d5, [x0, #128]
   38728:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3872c:	fmadd	d5, d0, d11, d5
   38730:	ldr	d3, [x0, #136]
   38734:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38738:	fmadd	d3, d0, d9, d3
   3873c:	fmadd	d10, d2, d4, d10
   38740:	ldr	d7, [x0, #144]
   38744:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38748:	fmul	d4, d2, d2
   3874c:	ldr	d9, [x0, #152]
   38750:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38754:	fmadd	d9, d0, d7, d9
   38758:	fmadd	d0, d2, d6, d1
   3875c:	ldr	d7, [x0, #160]
   38760:	fmul	d2, d2, d4
   38764:	fmadd	d10, d4, d5, d10
   38768:	fmadd	d0, d4, d3, d0
   3876c:	fmadd	d10, d2, d7, d10
   38770:	fmadd	d9, d2, d9, d0
   38774:	fmov	x0, d8
   38778:	fmov	d0, #-5.625000000000000000e-01
   3877c:	and	x0, x0, #0xffffffff00000000
   38780:	fmov	d11, x0
   38784:	fmsub	d0, d11, d11, d0
   38788:	bl	333e8 <__exp_finite@GLIBC_2.17>
   3878c:	fsub	d1, d11, d8
   38790:	fdiv	d9, d10, d9
   38794:	fadd	d11, d8, d11
   38798:	fmov	d10, d0
   3879c:	fmadd	d0, d1, d11, d9
   387a0:	bl	333e8 <__exp_finite@GLIBC_2.17>
   387a4:	fmul	d0, d10, d0
   387a8:	cmp	w19, #0x0
   387ac:	b.le	38944 <erfc@@GLIBC_2.17+0x4bc>
   387b0:	fdiv	d0, d0, d8
   387b4:	fcmp	d0, #0.0
   387b8:	b.ne	3895c <erfc@@GLIBC_2.17+0x4d4>  // b.any
   387bc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   387c0:	ldr	x0, [x0, #3976]
   387c4:	mrs	x1, tpidr_el0
   387c8:	mov	w2, #0x22                  	// #34
   387cc:	ldp	d8, d9, [sp, #32]
   387d0:	str	w2, [x1, x0]
   387d4:	ldp	d10, d11, [sp, #48]
   387d8:	b	38674 <erfc@@GLIBC_2.17+0x1ec>
   387dc:	fmov	d1, #5.000000000000000000e-01
   387e0:	ldr	x19, [sp, #16]
   387e4:	fsub	d0, d0, d1
   387e8:	ldp	d8, d9, [sp, #32]
   387ec:	ldp	x29, x30, [sp], #64
   387f0:	fadd	d0, d0, d2
   387f4:	fsub	d0, d1, d0
   387f8:	ret
   387fc:	fmov	d1, #1.000000000000000000e+00
   38800:	ldr	x19, [sp, #16]
   38804:	fsub	d0, d1, d0
   38808:	ldp	x29, x30, [sp], #64
   3880c:	ret
   38810:	cmp	w19, #0x0
   38814:	b.le	38930 <erfc@@GLIBC_2.17+0x4a8>
   38818:	adrp	x1, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   3881c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   38820:	ldr	x0, [x0, #3976]
   38824:	mov	w2, #0x22                  	// #34
   38828:	ldr	d0, [x1, #4016]
   3882c:	mrs	x1, tpidr_el0
   38830:	fmul	d0, d0, d0
   38834:	str	w2, [x1, x0]
   38838:	b	38674 <erfc@@GLIBC_2.17+0x1ec>
   3883c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38840:	ldp	d10, d11, [sp, #48]
   38844:	ldr	d0, [x0, #4000]
   38848:	fadd	d0, d1, d0
   3884c:	fadd	d0, d0, d9
   38850:	ldp	d8, d9, [sp, #32]
   38854:	b	38674 <erfc@@GLIBC_2.17+0x1ec>
   38858:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   3885c:	fmul	d10, d0, d0
   38860:	ldr	d2, [x0, #4024]
   38864:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38868:	ldr	d9, [x0, #4032]
   3886c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38870:	fmadd	d9, d0, d2, d9
   38874:	ldr	d4, [x0, #4040]
   38878:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   3887c:	ldr	d3, [x0, #4048]
   38880:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38884:	fmadd	d1, d0, d4, d1
   38888:	ldr	d2, [x0, #4056]
   3888c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38890:	ldr	d7, [x0, #4064]
   38894:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38898:	fmadd	d7, d0, d3, d7
   3889c:	fmadd	d9, d10, d9, d1
   388a0:	ldr	d6, [x0, #4072]
   388a4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   388a8:	fmadd	d6, d0, d2, d6
   388ac:	fmul	d3, d10, d10
   388b0:	ldr	d2, [x0, #4080]
   388b4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   388b8:	ldr	d16, [x0, #4088]
   388bc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   388c0:	ldr	d11, [x0]
   388c4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   388c8:	fmadd	d9, d3, d7, d9
   388cc:	ldr	d5, [x0, #8]
   388d0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   388d4:	fmadd	d5, d0, d2, d5
   388d8:	ldr	d2, [x0, #16]
   388dc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   388e0:	fmadd	d1, d0, d16, d2
   388e4:	ldr	d4, [x0, #24]
   388e8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   388ec:	fmadd	d4, d0, d11, d4
   388f0:	fmul	d11, d10, d3
   388f4:	ldr	d16, [x0, #32]
   388f8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   388fc:	fmadd	d10, d10, d6, d1
   38900:	ldr	d2, [x0, #40]
   38904:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38908:	fmadd	d0, d0, d16, d2
   3890c:	fmadd	d9, d11, d5, d9
   38910:	fmul	d2, d3, d3
   38914:	ldr	d1, [x0, #48]
   38918:	fmadd	d10, d3, d4, d10
   3891c:	fmadd	d9, d2, d1, d9
   38920:	fmadd	d10, d11, d0, d10
   38924:	b	38774 <erfc@@GLIBC_2.17+0x2ec>
   38928:	ldp	d8, d9, [sp, #32]
   3892c:	ldp	d10, d11, [sp, #48]
   38930:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38934:	fmov	d0, #2.000000000000000000e+00
   38938:	ldr	d1, [x0, #4016]
   3893c:	fsub	d0, d0, d1
   38940:	b	38674 <erfc@@GLIBC_2.17+0x1ec>
   38944:	fdiv	d8, d0, d8
   38948:	fmov	d0, #2.000000000000000000e+00
   3894c:	ldp	d10, d11, [sp, #48]
   38950:	fsub	d0, d0, d8
   38954:	ldp	d8, d9, [sp, #32]
   38958:	b	38674 <erfc@@GLIBC_2.17+0x1ec>
   3895c:	ldp	d8, d9, [sp, #32]
   38960:	ldp	d10, d11, [sp, #48]
   38964:	b	38674 <erfc@@GLIBC_2.17+0x1ec>

0000000000038968 <expm1@@GLIBC_2.17>:
   38968:	fmov	x0, d0
   3896c:	mov	w2, #0x6879                	// #26745
   38970:	movk	w2, #0x4043, lsl #16
   38974:	ubfx	x1, x0, #32, #31
   38978:	lsr	x3, x0, #32
   3897c:	cmp	w1, w2
   38980:	b.ls	389d0 <expm1@@GLIBC_2.17+0x68>  // b.plast
   38984:	mov	w2, #0x2e41                	// #11841
   38988:	movk	w2, #0x4086, lsl #16
   3898c:	cmp	w1, w2
   38990:	b.hi	38ad0 <expm1@@GLIBC_2.17+0x168>  // b.pmore
   38994:	tbnz	w3, #31, 38be0 <expm1@@GLIBC_2.17+0x278>
   38998:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3899c:	fmov	d1, #5.000000000000000000e-01
   389a0:	ldr	d2, [x0, #200]
   389a4:	fmul	d2, d0, d2
   389a8:	fadd	d1, d1, d2
   389ac:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   389b0:	ldr	d2, [x0, #176]
   389b4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   389b8:	ldr	d4, [x0, #184]
   389bc:	fcvtzs	w0, d1
   389c0:	scvtf	d3, w0
   389c4:	fmsub	d2, d3, d2, d0
   389c8:	fmul	d3, d3, d4
   389cc:	b	38b28 <expm1@@GLIBC_2.17+0x1c0>
   389d0:	mov	w0, #0x2e42                	// #11842
   389d4:	movk	w0, #0x3fd6, lsl #16
   389d8:	cmp	w1, w0
   389dc:	b.hi	38afc <expm1@@GLIBC_2.17+0x194>  // b.pmore
   389e0:	mov	w2, #0x3c8fffff            	// #1016070143
   389e4:	mov	w0, #0x0                   	// #0
   389e8:	cmp	w1, w2
   389ec:	b.ls	38b90 <expm1@@GLIBC_2.17+0x228>  // b.plast
   389f0:	fmov	d19, #5.000000000000000000e-01
   389f4:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   389f8:	fmov	d18, #1.000000000000000000e+00
   389fc:	fmov	d5, #3.000000000000000000e+00
   38a00:	fmul	d17, d0, d19
   38a04:	ldr	d1, [x1, #208]
   38a08:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38a0c:	fmov	d6, #6.000000000000000000e+00
   38a10:	ldr	d16, [x1, #216]
   38a14:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38a18:	fmul	d4, d0, d17
   38a1c:	ldr	d2, [x1, #224]
   38a20:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38a24:	ldr	d20, [x1, #232]
   38a28:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38a2c:	fmadd	d16, d4, d1, d16
   38a30:	fmadd	d2, d4, d2, d18
   38a34:	ldr	d7, [x1, #240]
   38a38:	fmul	d1, d4, d4
   38a3c:	fmadd	d7, d4, d20, d7
   38a40:	fmul	d20, d1, d1
   38a44:	fmadd	d2, d1, d16, d2
   38a48:	fmadd	d1, d20, d7, d2
   38a4c:	fmsub	d2, d17, d1, d5
   38a50:	fmsub	d5, d0, d2, d6
   38a54:	fsub	d1, d1, d2
   38a58:	fdiv	d1, d1, d5
   38a5c:	fmul	d1, d1, d4
   38a60:	cbz	w0, 38af0 <expm1@@GLIBC_2.17+0x188>
   38a64:	fsub	d1, d1, d3
   38a68:	cmn	w0, #0x1
   38a6c:	fnmsub	d1, d1, d0, d3
   38a70:	fsub	d3, d1, d4
   38a74:	b.eq	38bf8 <expm1@@GLIBC_2.17+0x290>  // b.none
   38a78:	cmp	w0, #0x1
   38a7c:	b.eq	38bc0 <expm1@@GLIBC_2.17+0x258>  // b.none
   38a80:	add	w2, w0, #0x1
   38a84:	lsl	w1, w0, #20
   38a88:	cmp	w2, #0x39
   38a8c:	b.hi	38b6c <expm1@@GLIBC_2.17+0x204>  // b.pmore
   38a90:	cmp	w0, #0x13
   38a94:	b.gt	38c3c <expm1@@GLIBC_2.17+0x2d4>
   38a98:	mov	w3, #0x200000              	// #2097152
   38a9c:	mov	w2, #0x3ff00000            	// #1072693248
   38aa0:	asr	w0, w3, w0
   38aa4:	sub	w0, w2, w0
   38aa8:	fmov	d1, x0
   38aac:	fsub	d0, d3, d0
   38ab0:	shl	d1, d1, #32
   38ab4:	fsub	d0, d1, d0
   38ab8:	fmov	x0, d0
   38abc:	lsr	x2, x0, #32
   38ac0:	add	w1, w1, w2
   38ac4:	bfi	x0, x1, #32, #32
   38ac8:	fmov	d0, x0
   38acc:	ret
   38ad0:	mov	w2, #0x7fefffff            	// #2146435071
   38ad4:	cmp	w1, w2
   38ad8:	b.ls	38b38 <expm1@@GLIBC_2.17+0x1d0>  // b.plast
   38adc:	and	w1, w3, #0xfffff
   38ae0:	orr	w0, w1, w0
   38ae4:	cbz	w0, 38c60 <expm1@@GLIBC_2.17+0x2f8>
   38ae8:	fadd	d0, d0, d0
   38aec:	ret
   38af0:	fnmsub	d1, d0, d1, d4
   38af4:	fsub	d0, d0, d1
   38af8:	ret
   38afc:	mov	w0, #0xa2b1                	// #41649
   38b00:	movk	w0, #0x3ff0, lsl #16
   38b04:	cmp	w1, w0
   38b08:	b.hi	38c1c <expm1@@GLIBC_2.17+0x2b4>  // b.pmore
   38b0c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38b10:	ldr	d2, [x0, #176]
   38b14:	tbnz	w3, #31, 38c08 <expm1@@GLIBC_2.17+0x2a0>
   38b18:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38b1c:	fsub	d2, d0, d2
   38b20:	mov	w0, #0x1                   	// #1
   38b24:	ldr	d3, [x1, #184]
   38b28:	fsub	d0, d2, d3
   38b2c:	fsub	d2, d2, d0
   38b30:	fsub	d3, d2, d3
   38b34:	b	389f0 <expm1@@GLIBC_2.17+0x88>
   38b38:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   38b3c:	ldr	d1, [x0, #3696]
   38b40:	fcmpe	d0, d1
   38b44:	b.le	38994 <expm1@@GLIBC_2.17+0x2c>
   38b48:	adrp	x2, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   38b4c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   38b50:	ldr	x0, [x0, #3976]
   38b54:	mrs	x1, tpidr_el0
   38b58:	ldr	d0, [x2, #1928]
   38b5c:	mov	w2, #0x22                  	// #34
   38b60:	str	w2, [x1, x0]
   38b64:	fmul	d0, d0, d0
   38b68:	ret
   38b6c:	fsub	d0, d3, d0
   38b70:	fsub	d0, d18, d0
   38b74:	fmov	x0, d0
   38b78:	lsr	x2, x0, #32
   38b7c:	add	w1, w1, w2
   38b80:	bfi	x0, x1, #32, #32
   38b84:	fmov	d0, x0
   38b88:	fsub	d0, d0, d18
   38b8c:	ret
   38b90:	fabs	d2, d0
   38b94:	mov	x0, #0x10000000000000      	// #4503599627370496
   38b98:	fmov	d1, x0
   38b9c:	fcmpe	d2, d1
   38ba0:	b.pl	38ba8 <expm1@@GLIBC_2.17+0x240>  // b.nfrst
   38ba4:	fmul	d1, d0, d0
   38ba8:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   38bac:	ldr	d1, [x0, #1928]
   38bb0:	fadd	d1, d0, d1
   38bb4:	fsub	d1, d1, d1
   38bb8:	fsub	d0, d0, d1
   38bbc:	ret
   38bc0:	fmov	d1, #-2.500000000000000000e-01
   38bc4:	fcmpe	d0, d1
   38bc8:	b.pl	38c70 <expm1@@GLIBC_2.17+0x308>  // b.nfrst
   38bcc:	fadd	d0, d0, d19
   38bd0:	fmov	d1, #-2.000000000000000000e+00
   38bd4:	fsub	d0, d3, d0
   38bd8:	fmul	d0, d0, d1
   38bdc:	ret
   38be0:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   38be4:	ldr	d1, [x0, #4016]
   38be8:	fadd	d0, d0, d1
   38bec:	fmov	d0, #1.000000000000000000e+00
   38bf0:	fsub	d0, d1, d0
   38bf4:	ret
   38bf8:	fsub	d1, d0, d3
   38bfc:	fmov	d0, #-5.000000000000000000e-01
   38c00:	fmadd	d0, d1, d19, d0
   38c04:	ret
   38c08:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38c0c:	fadd	d2, d0, d2
   38c10:	mov	w0, #0xffffffff            	// #-1
   38c14:	ldr	d3, [x1, #192]
   38c18:	b	38b28 <expm1@@GLIBC_2.17+0x1c0>
   38c1c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38c20:	cmp	w3, #0x0
   38c24:	fmov	d1, #5.000000000000000000e-01
   38c28:	fmov	d3, #-5.000000000000000000e-01
   38c2c:	ldr	d2, [x0, #200]
   38c30:	fcsel	d1, d1, d3, ge  // ge = tcont
   38c34:	fmul	d2, d0, d2
   38c38:	b	389a8 <expm1@@GLIBC_2.17+0x40>
   38c3c:	mov	w2, #0x3ff                 	// #1023
   38c40:	sub	w0, w2, w0
   38c44:	lsl	w0, w0, #20
   38c48:	fmov	d1, x0
   38c4c:	shl	d1, d1, #32
   38c50:	fadd	d1, d3, d1
   38c54:	fsub	d0, d0, d1
   38c58:	fadd	d0, d0, d18
   38c5c:	b	38ab8 <expm1@@GLIBC_2.17+0x150>
   38c60:	cmp	w3, #0x0
   38c64:	fmov	d1, #-1.000000000000000000e+00
   38c68:	fcsel	d0, d0, d1, ge  // ge = tcont
   38c6c:	ret
   38c70:	fsub	d1, d0, d3
   38c74:	fmov	d0, #2.000000000000000000e+00
   38c78:	fmadd	d0, d1, d0, d18
   38c7c:	ret

0000000000038c80 <fabs@@GLIBC_2.17>:
   38c80:	fabs	d0, d0
   38c84:	ret

0000000000038c88 <floor@@GLIBC_2.17>:
   38c88:	frintm	d0, d0
   38c8c:	ret
   38c90:	fmov	x0, d0
   38c94:	mov	w1, #0x8279                	// #33401
   38c98:	movk	w1, #0x3fda, lsl #16
   38c9c:	lsr	x0, x0, #32
   38ca0:	cmp	w0, w1
   38ca4:	mov	w1, w0
   38ca8:	b.gt	38d74 <floor@@GLIBC_2.17+0xec>
   38cac:	and	w1, w0, #0x7fffffff
   38cb0:	mov	w2, #0x3fefffff            	// #1072693247
   38cb4:	cmp	w1, w2
   38cb8:	b.gt	38ef4 <floor@@GLIBC_2.17+0x26c>
   38cbc:	mov	w2, #0x3e1fffff            	// #1042284543
   38cc0:	cmp	w1, w2
   38cc4:	b.le	38f28 <floor@@GLIBC_2.17+0x2a0>
   38cc8:	mov	w1, #0x413c                	// #16700
   38ccc:	movk	w1, #0x402d, lsl #16
   38cd0:	add	w0, w1, w0
   38cd4:	cmp	w0, w1
   38cd8:	b.ls	38e08 <floor@@GLIBC_2.17+0x180>  // b.plast
   38cdc:	fmov	d4, #5.000000000000000000e-01
   38ce0:	mov	w0, #0x0                   	// #0
   38ce4:	fmul	d4, d0, d4
   38ce8:	fmul	d6, d4, d0
   38cec:	fmov	d1, #2.000000000000000000e+00
   38cf0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38cf4:	fadd	d1, d0, d1
   38cf8:	ldr	d7, [x1, #248]
   38cfc:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38d00:	ldr	d5, [x1, #256]
   38d04:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38d08:	fdiv	d1, d0, d1
   38d0c:	ldr	d19, [x1, #264]
   38d10:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38d14:	ldr	d3, [x1, #272]
   38d18:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38d1c:	ldr	d4, [x1, #280]
   38d20:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38d24:	ldr	d18, [x1, #288]
   38d28:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38d2c:	ldr	d2, [x1, #296]
   38d30:	fmul	d16, d1, d1
   38d34:	fmadd	d5, d16, d7, d5
   38d38:	fmul	d7, d16, d16
   38d3c:	fmadd	d3, d16, d19, d3
   38d40:	fmadd	d2, d16, d18, d2
   38d44:	fmul	d18, d7, d7
   38d48:	fmul	d5, d7, d5
   38d4c:	fmul	d7, d7, d18
   38d50:	fmadd	d4, d16, d4, d5
   38d54:	fmadd	d4, d18, d3, d4
   38d58:	fmadd	d4, d7, d2, d4
   38d5c:	fadd	d4, d4, d6
   38d60:	fmul	d4, d4, d1
   38d64:	cbnz	w0, 38e70 <floor@@GLIBC_2.17+0x1e8>
   38d68:	fsub	d4, d6, d4
   38d6c:	fsub	d0, d0, d4
   38d70:	ret
   38d74:	mov	w2, #0x7fefffff            	// #2146435071
   38d78:	cmp	w0, w2
   38d7c:	b.gt	38f14 <floor@@GLIBC_2.17+0x28c>
   38d80:	mov	w2, #0x433fffff            	// #1128267775
   38d84:	cmp	w0, w2
   38d88:	b.le	38e08 <floor@@GLIBC_2.17+0x180>
   38d8c:	asr	w0, w0, #20
   38d90:	and	w1, w1, #0xfffff
   38d94:	mov	w2, #0xa09d                	// #41117
   38d98:	movi	d17, #0x0
   38d9c:	movk	w2, #0x6, lsl #16
   38da0:	fmov	d5, d0
   38da4:	sub	w0, w0, #0x3ff
   38da8:	cmp	w1, w2
   38dac:	b.gt	38e4c <floor@@GLIBC_2.17+0x1c4>
   38db0:	fmov	x2, d5
   38db4:	orr	w3, w1, #0x3ff00000
   38db8:	bfi	x2, x3, #32, #32
   38dbc:	fmov	d0, x2
   38dc0:	fmov	d5, #1.000000000000000000e+00
   38dc4:	fmov	d4, #5.000000000000000000e-01
   38dc8:	fsub	d0, d0, d5
   38dcc:	fmul	d4, d0, d4
   38dd0:	fmul	d6, d4, d0
   38dd4:	cbnz	w1, 38cec <floor@@GLIBC_2.17+0x64>
   38dd8:	fcmp	d0, #0.0
   38ddc:	b.ne	38e9c <floor@@GLIBC_2.17+0x214>  // b.any
   38de0:	movi	d0, #0x0
   38de4:	cbz	w0, 38d70 <floor@@GLIBC_2.17+0xe8>
   38de8:	scvtf	d3, w0
   38dec:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38df0:	ldr	d0, [x0, #184]
   38df4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38df8:	ldr	d1, [x0, #176]
   38dfc:	fmadd	d0, d3, d0, d17
   38e00:	fmadd	d0, d3, d1, d0
   38e04:	ret
   38e08:	fmov	d17, #1.000000000000000000e+00
   38e0c:	fadd	d5, d0, d17
   38e10:	fmov	x0, d5
   38e14:	lsr	x0, x0, #32
   38e18:	mov	w1, w0
   38e1c:	asr	w0, w0, #20
   38e20:	sub	w0, w0, #0x3ff
   38e24:	cmp	w0, #0x0
   38e28:	b.le	38ebc <floor@@GLIBC_2.17+0x234>
   38e2c:	fsub	d0, d5, d0
   38e30:	fsub	d0, d17, d0
   38e34:	fdiv	d17, d0, d5
   38e38:	and	w1, w1, #0xfffff
   38e3c:	mov	w2, #0xa09d                	// #41117
   38e40:	movk	w2, #0x6, lsl #16
   38e44:	cmp	w1, w2
   38e48:	b.le	38db0 <floor@@GLIBC_2.17+0x128>
   38e4c:	mov	w2, #0x100000              	// #1048576
   38e50:	orr	w3, w1, #0x3fe00000
   38e54:	sub	w1, w2, w1
   38e58:	fmov	x2, d5
   38e5c:	add	w0, w0, #0x1
   38e60:	asr	w1, w1, #2
   38e64:	bfi	x2, x3, #32, #32
   38e68:	fmov	d0, x2
   38e6c:	b	38dc0 <floor@@GLIBC_2.17+0x138>
   38e70:	scvtf	d1, w0
   38e74:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38e78:	ldr	d5, [x0, #184]
   38e7c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38e80:	ldr	d2, [x0, #176]
   38e84:	fmadd	d17, d1, d5, d17
   38e88:	fadd	d4, d17, d4
   38e8c:	fsub	d4, d6, d4
   38e90:	fsub	d0, d4, d0
   38e94:	fnmsub	d0, d1, d2, d0
   38e98:	ret
   38e9c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   38ea0:	movk	x1, #0x3fe5, lsl #48
   38ea4:	fmov	d4, x1
   38ea8:	fmsub	d5, d0, d4, d5
   38eac:	fmul	d5, d5, d6
   38eb0:	cbnz	w0, 38ecc <floor@@GLIBC_2.17+0x244>
   38eb4:	fsub	d0, d0, d5
   38eb8:	ret
   38ebc:	fsub	d17, d5, d17
   38ec0:	fsub	d0, d0, d17
   38ec4:	fdiv	d17, d0, d5
   38ec8:	b	38e38 <floor@@GLIBC_2.17+0x1b0>
   38ecc:	scvtf	d2, w0
   38ed0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38ed4:	ldr	d6, [x0, #184]
   38ed8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   38edc:	ldr	d1, [x0, #176]
   38ee0:	fmadd	d17, d2, d6, d17
   38ee4:	fsub	d5, d5, d17
   38ee8:	fsub	d0, d5, d0
   38eec:	fnmsub	d0, d2, d1, d0
   38ef0:	ret
   38ef4:	fmov	d1, #-1.000000000000000000e+00
   38ef8:	fcmp	d0, d1
   38efc:	b.ne	38f1c <floor@@GLIBC_2.17+0x294>  // b.any
   38f00:	movi	d1, #0x0
   38f04:	mov	x0, #0xc350000000000000    	// #-4372995238176751616
   38f08:	fmov	d0, x0
   38f0c:	fdiv	d0, d0, d1
   38f10:	ret
   38f14:	fadd	d0, d0, d0
   38f18:	ret
   38f1c:	fsub	d0, d0, d0
   38f20:	fdiv	d0, d0, d0
   38f24:	ret
   38f28:	mov	x0, #0x4350000000000000    	// #4850376798678024192
   38f2c:	fmov	d1, x0
   38f30:	fadd	d1, d0, d1
   38f34:	mov	w0, #0x3c8fffff            	// #1016070143
   38f38:	cmp	w1, w0
   38f3c:	b.gt	38f5c <floor@@GLIBC_2.17+0x2d4>
   38f40:	fabs	d2, d0
   38f44:	mov	x0, #0x10000000000000      	// #4503599627370496
   38f48:	fmov	d1, x0
   38f4c:	fcmpe	d2, d1
   38f50:	b.pl	38d70 <floor@@GLIBC_2.17+0xe8>  // b.nfrst
   38f54:	fmul	d1, d0, d0
   38f58:	ret
   38f5c:	fmul	d2, d0, d0
   38f60:	fmov	d1, #5.000000000000000000e-01
   38f64:	fmsub	d0, d2, d1, d0
   38f68:	ret
   38f6c:	nop

0000000000038f70 <logb@@GLIBC_2.17>:
   38f70:	fmov	x0, d0
   38f74:	ands	x0, x0, #0x7fffffffffffffff
   38f78:	b.eq	38fa8 <logb@@GLIBC_2.17+0x38>  // b.none
   38f7c:	asr	x1, x0, #52
   38f80:	cmp	x1, #0x7ff
   38f84:	b.eq	38fb8 <logb@@GLIBC_2.17+0x48>  // b.none
   38f88:	clz	x0, x0
   38f8c:	cmp	x1, #0x0
   38f90:	sub	w0, w0, #0xc
   38f94:	sxtw	x0, w0
   38f98:	csneg	x1, x1, x0, ne  // ne = any
   38f9c:	sub	x1, x1, #0x3ff
   38fa0:	scvtf	d0, x1
   38fa4:	ret
   38fa8:	fabs	d1, d0
   38fac:	fmov	d0, #-1.000000000000000000e+00
   38fb0:	fdiv	d0, d0, d1
   38fb4:	ret
   38fb8:	fmul	d0, d0, d0
   38fbc:	ret

0000000000038fc0 <nextafter@@GLIBC_2.17>:
   38fc0:	fmov	d2, d0
   38fc4:	fmov	x4, d1
   38fc8:	mov	w2, #0x7fefffff            	// #2146435071
   38fcc:	fmov	d0, d1
   38fd0:	fmov	x0, d2
   38fd4:	lsr	x7, x4, #32
   38fd8:	lsr	x1, x0, #32
   38fdc:	and	w3, w1, #0x7fffffff
   38fe0:	mov	w8, w1
   38fe4:	cmp	w3, w2
   38fe8:	mov	w6, w1
   38fec:	ubfx	x2, x4, #32, #31
   38ff0:	b.le	39004 <nextafter@@GLIBC_2.17+0x44>
   38ff4:	mov	w5, #0x80100000            	// #-2146435072
   38ff8:	add	w5, w3, w5
   38ffc:	orr	w5, w5, w0
   39000:	cbnz	w5, 39090 <nextafter@@GLIBC_2.17+0xd0>
   39004:	mov	w5, #0x7fefffff            	// #2146435071
   39008:	cmp	w2, w5
   3900c:	b.le	39020 <nextafter@@GLIBC_2.17+0x60>
   39010:	mov	w5, #0x80100000            	// #-2146435072
   39014:	add	w2, w2, w5
   39018:	orr	w2, w2, w4
   3901c:	cbnz	w2, 39090 <nextafter@@GLIBC_2.17+0xd0>
   39020:	fcmp	d2, d0
   39024:	b.eq	3908c <nextafter@@GLIBC_2.17+0xcc>  // b.none
   39028:	orr	w3, w3, w0
   3902c:	cbz	w3, 390c4 <nextafter@@GLIBC_2.17+0x104>
   39030:	tbnz	w1, #31, 39098 <nextafter@@GLIBC_2.17+0xd8>
   39034:	cmp	w1, w7
   39038:	b.le	390a8 <nextafter@@GLIBC_2.17+0xe8>
   3903c:	cbnz	w0, 39048 <nextafter@@GLIBC_2.17+0x88>
   39040:	sub	w6, w1, #0x1
   39044:	mov	w8, w6
   39048:	sub	w0, w0, #0x1
   3904c:	and	w6, w6, #0x7ff00000
   39050:	mov	w1, #0x7ff00000            	// #2146435072
   39054:	cmp	w6, w1
   39058:	b.eq	390e8 <nextafter@@GLIBC_2.17+0x128>  // b.none
   3905c:	mov	w1, #0xfffff               	// #1048575
   39060:	cmp	w6, w1
   39064:	b.gt	39080 <nextafter@@GLIBC_2.17+0xc0>
   39068:	fmul	d2, d2, d2
   3906c:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   39070:	ldr	x1, [x1, #3976]
   39074:	mrs	x2, tpidr_el0
   39078:	mov	w3, #0x22                  	// #34
   3907c:	str	w3, [x2, x1]
   39080:	mov	w0, w0
   39084:	orr	x0, x0, x8, lsl #32
   39088:	fmov	d0, x0
   3908c:	ret
   39090:	fadd	d0, d2, d0
   39094:	ret
   39098:	cmp	w7, #0x0
   3909c:	ccmp	w1, w7, #0x0, lt  // lt = tstop
   390a0:	b.gt	3903c <nextafter@@GLIBC_2.17+0x7c>
   390a4:	cmp	w1, w7
   390a8:	ccmp	w0, w4, #0x0, eq  // eq = none
   390ac:	b.hi	39048 <nextafter@@GLIBC_2.17+0x88>  // b.pmore
   390b0:	adds	w0, w0, #0x1
   390b4:	b.ne	3904c <nextafter@@GLIBC_2.17+0x8c>  // b.any
   390b8:	add	w6, w1, #0x1
   390bc:	mov	w8, w6
   390c0:	b	3904c <nextafter@@GLIBC_2.17+0x8c>
   390c4:	and	w7, w7, #0x80000000
   390c8:	mov	x0, #0x0                   	// #0
   390cc:	mov	x1, #0x1                   	// #1
   390d0:	bfi	x0, x7, #32, #32
   390d4:	bfxil	x0, x1, #0, #32
   390d8:	fmov	d1, x0
   390dc:	fmov	d0, x0
   390e0:	fmul	d1, d1, d1
   390e4:	ret
   390e8:	fadd	d2, d2, d2
   390ec:	b	3906c <nextafter@@GLIBC_2.17+0xac>

00000000000390f0 <nexttoward@@GLIBC_2.17>:
   390f0:	stp	x29, x30, [sp, #-112]!
   390f4:	mov	w1, #0x7fefffff            	// #2146435071
   390f8:	mov	x29, sp
   390fc:	stp	x19, x20, [sp, #16]
   39100:	stp	x21, x22, [sp, #32]
   39104:	fmov	x21, d0
   39108:	stp	x23, x24, [sp, #48]
   3910c:	str	q1, [sp, #80]
   39110:	lsr	x22, x21, #32
   39114:	ldp	x20, x24, [sp, #80]
   39118:	str	x25, [sp, #64]
   3911c:	and	w23, w22, #0x7fffffff
   39120:	str	d8, [sp, #72]
   39124:	mov	w19, w22
   39128:	fmov	d8, d0
   3912c:	cmp	w23, w1
   39130:	and	x0, x24, #0x7fffffffffffffff
   39134:	mov	x25, x24
   39138:	b.le	3914c <nexttoward@@GLIBC_2.17+0x5c>
   3913c:	mov	w1, #0x80100000            	// #-2146435072
   39140:	add	w1, w23, w1
   39144:	orr	w1, w1, w21
   39148:	cbnz	w1, 3923c <nexttoward@@GLIBC_2.17+0x14c>
   3914c:	mov	x1, #0x7ffeffffffffffff    	// #9223090561878065151
   39150:	cmp	x0, x1
   39154:	b.le	39168 <nexttoward@@GLIBC_2.17+0x78>
   39158:	mov	x1, #0x8001000000000000    	// #-9223090561878065152
   3915c:	add	x1, x0, x1
   39160:	orr	x0, x1, x20
   39164:	cbnz	x0, 3923c <nexttoward@@GLIBC_2.17+0x14c>
   39168:	fmov	d0, d8
   3916c:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
   39170:	stp	x20, x24, [sp, #80]
   39174:	ldr	q1, [sp, #80]
   39178:	str	q0, [sp, #96]
   3917c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   39180:	cbz	w0, 39214 <nexttoward@@GLIBC_2.17+0x124>
   39184:	orr	w23, w23, w21
   39188:	cbz	w23, 39298 <nexttoward@@GLIBC_2.17+0x1a8>
   3918c:	stp	x20, x24, [sp, #80]
   39190:	ldr	q0, [sp, #96]
   39194:	ldr	q1, [sp, #80]
   39198:	tbnz	w22, #31, 39270 <nexttoward@@GLIBC_2.17+0x180>
   3919c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   391a0:	cmp	w0, #0x0
   391a4:	b.le	39278 <nexttoward@@GLIBC_2.17+0x188>
   391a8:	cmp	w21, #0x0
   391ac:	sub	w22, w22, #0x1
   391b0:	csel	w19, w22, w19, eq  // eq = none
   391b4:	mov	w1, #0x7ff00000            	// #2146435072
   391b8:	and	w0, w19, #0x7ff00000
   391bc:	sub	w21, w21, #0x1
   391c0:	cmp	w0, w1
   391c4:	b.eq	39290 <nexttoward@@GLIBC_2.17+0x1a0>  // b.none
   391c8:	mov	w1, #0xfffff               	// #1048575
   391cc:	cmp	w0, w1
   391d0:	b.hi	391ec <nexttoward@@GLIBC_2.17+0xfc>  // b.pmore
   391d4:	fmul	d8, d8, d8
   391d8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   391dc:	ldr	x0, [x0, #3976]
   391e0:	mrs	x1, tpidr_el0
   391e4:	mov	w2, #0x22                  	// #34
   391e8:	str	w2, [x1, x0]
   391ec:	mov	w21, w21
   391f0:	ldr	d8, [sp, #72]
   391f4:	orr	x0, x21, x19, lsl #32
   391f8:	fmov	d0, x0
   391fc:	ldp	x19, x20, [sp, #16]
   39200:	ldp	x21, x22, [sp, #32]
   39204:	ldp	x23, x24, [sp, #48]
   39208:	ldr	x25, [sp, #64]
   3920c:	ldp	x29, x30, [sp], #112
   39210:	ret
   39214:	stp	x20, x24, [sp, #80]
   39218:	ldr	q0, [sp, #80]
   3921c:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
   39220:	ldp	x19, x20, [sp, #16]
   39224:	ldp	x21, x22, [sp, #32]
   39228:	ldp	x23, x24, [sp, #48]
   3922c:	ldr	x25, [sp, #64]
   39230:	ldr	d8, [sp, #72]
   39234:	ldp	x29, x30, [sp], #112
   39238:	ret
   3923c:	fmov	d0, d8
   39240:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
   39244:	stp	x20, x24, [sp, #80]
   39248:	ldr	q1, [sp, #80]
   3924c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   39250:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
   39254:	ldp	x19, x20, [sp, #16]
   39258:	ldp	x21, x22, [sp, #32]
   3925c:	ldp	x23, x24, [sp, #48]
   39260:	ldr	x25, [sp, #64]
   39264:	ldr	d8, [sp, #72]
   39268:	ldp	x29, x30, [sp], #112
   3926c:	ret
   39270:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   39274:	tbnz	w0, #31, 391a8 <nexttoward@@GLIBC_2.17+0xb8>
   39278:	adds	w21, w21, #0x1
   3927c:	mov	w1, #0x7ff00000            	// #2146435072
   39280:	csinc	w19, w19, w22, ne  // ne = any
   39284:	and	w0, w19, #0x7ff00000
   39288:	cmp	w0, w1
   3928c:	b.ne	391c8 <nexttoward@@GLIBC_2.17+0xd8>  // b.any
   39290:	fadd	d8, d8, d8
   39294:	b	391d8 <nexttoward@@GLIBC_2.17+0xe8>
   39298:	asr	x25, x25, #32
   3929c:	mov	x0, #0x0                   	// #0
   392a0:	and	w25, w25, #0x80000000
   392a4:	mov	x1, #0x1                   	// #1
   392a8:	bfi	x0, x25, #32, #32
   392ac:	bfxil	x0, x1, #0, #32
   392b0:	fmov	d1, x0
   392b4:	fmov	d0, x0
   392b8:	fmul	d1, d1, d1
   392bc:	ldp	x19, x20, [sp, #16]
   392c0:	ldp	x21, x22, [sp, #32]
   392c4:	ldp	x23, x24, [sp, #48]
   392c8:	ldr	x25, [sp, #64]
   392cc:	ldr	d8, [sp, #72]
   392d0:	ldp	x29, x30, [sp], #112
   392d4:	ret

00000000000392d8 <rint@@GLIBC_2.17>:
   392d8:	frintx	d0, d0
   392dc:	ret
   392e0:	fmov	x1, d0
   392e4:	fmov	d2, d0
   392e8:	tst	x1, #0x7ff0000000000000
   392ec:	ubfx	x2, x1, #52, #11
   392f0:	b.eq	39378 <rint@@GLIBC_2.17+0xa0>  // b.none
   392f4:	cmp	x2, #0x7ff
   392f8:	b.eq	3939c <rint@@GLIBC_2.17+0xc4>  // b.none
   392fc:	mov	x3, #0xffffffffffff3cb0    	// #-50000
   39300:	cmp	x0, x3
   39304:	b.lt	3935c <rint@@GLIBC_2.17+0x84>  // b.tstop
   39308:	mov	x3, #0xc350                	// #50000
   3930c:	cmp	x0, x3
   39310:	b.gt	39338 <rint@@GLIBC_2.17+0x60>
   39314:	add	x0, x0, x2
   39318:	cmp	x0, #0x7fe
   3931c:	b.gt	39338 <rint@@GLIBC_2.17+0x60>
   39320:	cmp	x0, #0x0
   39324:	b.le	39354 <rint@@GLIBC_2.17+0x7c>
   39328:	and	x1, x1, #0x800fffffffffffff
   3932c:	orr	x0, x1, x0, lsl #52
   39330:	fmov	d0, x0
   39334:	ret
   39338:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3933c:	ldr	d1, [x0, #1928]
   39340:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   39344:	fmov	d0, x0
   39348:	bsl	v0.8b, v2.8b, v1.8b
   3934c:	fmul	d0, d0, d1
   39350:	ret
   39354:	cmn	x0, #0x35
   39358:	b.ge	393a4 <rint@@GLIBC_2.17+0xcc>  // b.tcont
   3935c:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   39360:	ldr	d1, [x0, #4016]
   39364:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   39368:	fmov	d0, x0
   3936c:	bsl	v0.8b, v2.8b, v1.8b
   39370:	fmul	d0, d0, d1
   39374:	ret
   39378:	tst	x1, #0xfffffffffffff
   3937c:	b.eq	39334 <rint@@GLIBC_2.17+0x5c>  // b.none
   39380:	mov	x1, #0x4350000000000000    	// #4850376798678024192
   39384:	fmov	d0, x1
   39388:	fmul	d2, d2, d0
   3938c:	fmov	x1, d2
   39390:	ubfx	x2, x1, #52, #11
   39394:	sub	x2, x2, #0x36
   39398:	b	392fc <rint@@GLIBC_2.17+0x24>
   3939c:	fadd	d0, d0, d0
   393a0:	ret
   393a4:	add	x0, x0, #0x36
   393a8:	and	x1, x1, #0x800fffffffffffff
   393ac:	mov	x2, #0x3c90000000000000    	// #4363988038922010624
   393b0:	fmov	d0, x2
   393b4:	orr	x0, x1, x0, lsl #52
   393b8:	fmov	d1, x0
   393bc:	fmul	d0, d1, d0
   393c0:	ret
   393c4:	nop

00000000000393c8 <sin@@GLIBC_2.17>:
   393c8:	stp	x29, x30, [sp, #-80]!
   393cc:	mov	x29, sp
   393d0:	stp	x19, x20, [sp, #16]
   393d4:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   393d8:	ldr	x0, [x19, #4032]
   393dc:	ldr	x1, [x0]
   393e0:	str	x1, [sp, #72]
   393e4:	mov	x1, #0x0                   	// #0
   393e8:	str	x21, [sp, #32]
   393ec:	mrs	x20, fpcr
   393f0:	ands	w21, w20, #0xc00000
   393f4:	b.ne	397c0 <sin@@GLIBC_2.17+0x3f8>  // b.any
   393f8:	fmov	x1, d0
   393fc:	mov	w2, #0x3e4fffff            	// #1045430271
   39400:	ubfx	x0, x1, #32, #31
   39404:	cmp	w0, w2
   39408:	b.gt	39458 <sin@@GLIBC_2.17+0x90>
   3940c:	fabs	d2, d0
   39410:	mov	x0, #0x10000000000000      	// #4503599627370496
   39414:	fmov	d1, x0
   39418:	fcmpe	d2, d1
   3941c:	b.mi	39448 <sin@@GLIBC_2.17+0x80>  // b.first
   39420:	cbnz	w21, 39450 <sin@@GLIBC_2.17+0x88>
   39424:	ldr	x19, [x19, #4032]
   39428:	ldr	x1, [sp, #72]
   3942c:	ldr	x0, [x19]
   39430:	eor	x0, x1, x0
   39434:	cbnz	x0, 39ae0 <sin@@GLIBC_2.17+0x718>
   39438:	ldp	x19, x20, [sp, #16]
   3943c:	ldr	x21, [sp, #32]
   39440:	ldp	x29, x30, [sp], #80
   39444:	ret
   39448:	fmul	d1, d0, d0
   3944c:	cbz	w21, 39424 <sin@@GLIBC_2.17+0x5c>
   39450:	msr	fpcr, x20
   39454:	b	39424 <sin@@GLIBC_2.17+0x5c>
   39458:	mov	w2, #0x5fff                	// #24575
   3945c:	movk	w2, #0x3feb, lsl #16
   39460:	cmp	w0, w2
   39464:	b.gt	39538 <sin@@GLIBC_2.17+0x170>
   39468:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3946c:	fabs	d1, d0
   39470:	ldr	d2, [x0, #304]
   39474:	fcmpe	d1, d2
   39478:	b.mi	39764 <sin@@GLIBC_2.17+0x39c>  // b.first
   3947c:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   39480:	fmov	d6, x0
   39484:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39488:	fcmpe	d0, #0.0
   3948c:	fadd	d3, d1, d6
   39490:	movi	d2, #0x0
   39494:	ldr	d21, [x0, #344]
   39498:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3949c:	fmov	d7, #5.000000000000000000e-01
   394a0:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   394a4:	ldr	d16, [x0, #352]
   394a8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   394ac:	fsub	d6, d3, d6
   394b0:	add	x1, x1, #0xc08
   394b4:	ldr	d17, [x0, #360]
   394b8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   394bc:	ldr	d4, [x0, #368]
   394c0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   394c4:	fsub	d1, d1, d6
   394c8:	fmov	d5, x0
   394cc:	fmov	x0, d3
   394d0:	fcsel	d5, d5, d2, ls  // ls = plast
   394d4:	fmul	d2, d1, d1
   394d8:	lsl	w0, w0, #2
   394dc:	add	w4, w0, #0x3
   394e0:	add	w3, w0, #0x1
   394e4:	add	w2, w0, #0x2
   394e8:	fmadd	d17, d2, d21, d17
   394ec:	fmadd	d16, d2, d16, d4
   394f0:	fmul	d4, d1, d2
   394f4:	ldr	d20, [x1, w4, sxtw #3]
   394f8:	ldr	d3, [x1, w3, sxtw #3]
   394fc:	ldr	d6, [x1, w0, sxtw #3]
   39500:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   39504:	ldr	d19, [x1, w2, sxtw #3]
   39508:	fmov	d18, x0
   3950c:	fmadd	d7, d2, d17, d7
   39510:	fmadd	d4, d4, d16, d5
   39514:	fmul	d2, d2, d7
   39518:	fadd	d4, d1, d4
   3951c:	fmadd	d1, d1, d5, d2
   39520:	fmadd	d2, d4, d20, d3
   39524:	fmsub	d1, d1, d6, d2
   39528:	fmadd	d1, d4, d19, d1
   3952c:	fadd	d1, d6, d1
   39530:	bif	v0.8b, v1.8b, v18.8b
   39534:	b	39420 <sin@@GLIBC_2.17+0x58>
   39538:	mov	w2, #0x68fc                	// #26876
   3953c:	movk	w2, #0x4003, lsl #16
   39540:	cmp	w0, w2
   39544:	b.le	39694 <sin@@GLIBC_2.17+0x2cc>
   39548:	mov	w2, #0x21fa                	// #8698
   3954c:	movk	w2, #0x4199, lsl #16
   39550:	cmp	w0, w2
   39554:	b.gt	397cc <sin@@GLIBC_2.17+0x404>
   39558:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3955c:	ldr	d3, [x0, #2728]
   39560:	mov	x0, #0x4338000000000000    	// #4843621399236968448
   39564:	fmov	d2, x0
   39568:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3956c:	fmadd	d3, d0, d3, d2
   39570:	ldr	d1, [x0, #384]
   39574:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39578:	ldr	d6, [x0, #392]
   3957c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39580:	ldr	d5, [x0, #400]
   39584:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39588:	ldr	d4, [x0, #408]
   3958c:	fsub	d2, d3, d2
   39590:	fmov	x0, d3
   39594:	fmsub	d0, d2, d1, d0
   39598:	fmsub	d1, d2, d6, d0
   3959c:	fmsub	d3, d2, d5, d1
   395a0:	fmsub	d0, d2, d4, d3
   395a4:	fsub	d1, d1, d3
   395a8:	fmsub	d1, d2, d5, d1
   395ac:	fsub	d3, d3, d0
   395b0:	fmsub	d2, d2, d4, d3
   395b4:	fabs	d3, d0
   395b8:	fadd	d1, d1, d2
   395bc:	stp	d0, d1, [sp, #56]
   395c0:	tbnz	w0, #0, 397ec <sin@@GLIBC_2.17+0x424>
   395c4:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   395c8:	ldr	d2, [x1, #304]
   395cc:	fcmpe	d3, d2
   395d0:	b.mi	3996c <sin@@GLIBC_2.17+0x5a4>  // b.first
   395d4:	mov	x1, #0x42c8000000000000    	// #4812096201845374976
   395d8:	fmov	d6, x1
   395dc:	fcmpe	d0, #0.0
   395e0:	fneg	d2, d1
   395e4:	fadd	d4, d3, d6
   395e8:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   395ec:	fmov	d7, #5.000000000000000000e-01
   395f0:	adrp	x2, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   395f4:	ldr	d21, [x1, #344]
   395f8:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   395fc:	fcsel	d1, d2, d1, ls  // ls = plast
   39600:	add	x2, x2, #0xc08
   39604:	fsub	d6, d4, d6
   39608:	ldr	d17, [x1, #360]
   3960c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39610:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   39614:	fmov	d18, x3
   39618:	ldr	d16, [x1, #352]
   3961c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39620:	fsub	d3, d3, d6
   39624:	ldr	d5, [x1, #368]
   39628:	fmov	x1, d4
   3962c:	fmul	d2, d3, d3
   39630:	lsl	w1, w1, #2
   39634:	add	w5, w1, #0x3
   39638:	add	w4, w1, #0x1
   3963c:	add	w3, w1, #0x2
   39640:	fmadd	d17, d2, d21, d17
   39644:	fmadd	d16, d2, d16, d5
   39648:	fmul	d5, d3, d2
   3964c:	ldr	d20, [x2, w5, sxtw #3]
   39650:	ldr	d4, [x2, w4, sxtw #3]
   39654:	ldr	d6, [x2, w1, sxtw #3]
   39658:	ldr	d19, [x2, w3, sxtw #3]
   3965c:	fmadd	d7, d2, d17, d7
   39660:	fmadd	d5, d5, d16, d1
   39664:	fmul	d2, d2, d7
   39668:	fadd	d5, d3, d5
   3966c:	fmadd	d3, d3, d1, d2
   39670:	fmadd	d1, d5, d20, d4
   39674:	fmsub	d3, d3, d6, d1
   39678:	fmadd	d3, d5, d19, d3
   3967c:	fadd	d3, d6, d3
   39680:	bif	v0.8b, v3.8b, v18.8b
   39684:	fneg	d1, d0
   39688:	tst	x0, #0x2
   3968c:	fcsel	d0, d1, d0, ne  // ne = any
   39690:	b	39420 <sin@@GLIBC_2.17+0x58>
   39694:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   39698:	fabs	d2, d0
   3969c:	fmov	d6, #5.000000000000000000e-01
   396a0:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   396a4:	ldr	d3, [x0, #576]
   396a8:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   396ac:	fmov	d5, x0
   396b0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   396b4:	add	x1, x1, #0xc08
   396b8:	fsub	d3, d3, d2
   396bc:	ldr	d1, [x0, #376]
   396c0:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   396c4:	ldr	d4, [x0, #568]
   396c8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   396cc:	fabs	d2, d3
   396d0:	fcmpe	d3, #0.0
   396d4:	ldr	d21, [x0, #352]
   396d8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   396dc:	ldr	d20, [x0, #344]
   396e0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   396e4:	fadd	d3, d2, d5
   396e8:	fcsel	d1, d1, d4, mi  // mi = first
   396ec:	ldr	d7, [x0, #368]
   396f0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   396f4:	ldr	d16, [x0, #360]
   396f8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   396fc:	fsub	d5, d3, d5
   39700:	fmov	d17, x0
   39704:	fmov	x0, d3
   39708:	fsub	d2, d2, d5
   3970c:	lsl	w0, w0, #2
   39710:	add	w4, w0, #0x1
   39714:	add	w3, w0, #0x3
   39718:	add	w2, w0, #0x2
   3971c:	fadd	d1, d2, d1
   39720:	ldr	d18, [x1, w0, sxtw #3]
   39724:	ldr	d19, [x1, w4, sxtw #3]
   39728:	ldr	d3, [x1, w3, sxtw #3]
   3972c:	ldr	d5, [x1, w2, sxtw #3]
   39730:	fmul	d4, d1, d1
   39734:	fmadd	d2, d4, d20, d16
   39738:	fmadd	d7, d4, d21, d7
   3973c:	fmul	d16, d1, d4
   39740:	fmadd	d2, d4, d2, d6
   39744:	fmadd	d1, d16, d7, d1
   39748:	fmul	d4, d4, d2
   3974c:	fmsub	d2, d1, d19, d3
   39750:	fmsub	d2, d4, d5, d2
   39754:	fmsub	d1, d1, d18, d2
   39758:	fadd	d1, d5, d1
   3975c:	bif	v0.8b, v1.8b, v17.8b
   39760:	b	39420 <sin@@GLIBC_2.17+0x58>
   39764:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39768:	fmul	d2, d0, d0
   3976c:	movi	d4, #0x0
   39770:	ldr	d1, [x0, #312]
   39774:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39778:	ldr	d7, [x0, #320]
   3977c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39780:	fmadd	d7, d2, d1, d7
   39784:	ldr	d6, [x0, #328]
   39788:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3978c:	ldr	d5, [x0, #336]
   39790:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   39794:	movk	x0, #0xbfc5, lsl #48
   39798:	fmov	d3, x0
   3979c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   397a0:	fmov	d1, x0
   397a4:	fmadd	d6, d2, d7, d6
   397a8:	fmadd	d5, d2, d6, d5
   397ac:	fmadd	d3, d2, d5, d3
   397b0:	fmadd	d1, d0, d3, d1
   397b4:	fmadd	d1, d2, d1, d4
   397b8:	fadd	d0, d0, d1
   397bc:	b	39420 <sin@@GLIBC_2.17+0x58>
   397c0:	eor	w0, w21, w20
   397c4:	msr	fpcr, x0
   397c8:	b	393f8 <sin@@GLIBC_2.17+0x30>
   397cc:	mov	w2, #0x7fefffff            	// #2146435071
   397d0:	cmp	w0, w2
   397d4:	b.le	39890 <sin@@GLIBC_2.17+0x4c8>
   397d8:	mov	w2, #0x7ff00000            	// #2146435072
   397dc:	cmp	w0, w2
   397e0:	b.eq	3994c <sin@@GLIBC_2.17+0x584>  // b.none
   397e4:	fdiv	d0, d0, d0
   397e8:	b	39420 <sin@@GLIBC_2.17+0x58>
   397ec:	mov	x1, #0x42c8000000000000    	// #4812096201845374976
   397f0:	fmov	d2, x1
   397f4:	fcmpe	d0, #0.0
   397f8:	fneg	d7, d1
   397fc:	fadd	d0, d3, d2
   39800:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39804:	fmov	d4, #5.000000000000000000e-01
   39808:	adrp	x2, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   3980c:	ldr	d18, [x1, #352]
   39810:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39814:	fcsel	d1, d7, d1, mi  // mi = first
   39818:	add	x2, x2, #0xc08
   3981c:	fsub	d2, d0, d2
   39820:	ldr	d17, [x1, #344]
   39824:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39828:	ldr	d5, [x1, #368]
   3982c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39830:	fsub	d3, d3, d2
   39834:	ldr	d6, [x1, #360]
   39838:	fmov	x1, d0
   3983c:	fadd	d1, d3, d1
   39840:	lsl	w1, w1, #2
   39844:	add	w5, w1, #0x1
   39848:	add	w4, w1, #0x3
   3984c:	add	w3, w1, #0x2
   39850:	fmul	d3, d1, d1
   39854:	ldr	d7, [x2, w1, sxtw #3]
   39858:	ldr	d16, [x2, w5, sxtw #3]
   3985c:	ldr	d2, [x2, w4, sxtw #3]
   39860:	ldr	d0, [x2, w3, sxtw #3]
   39864:	fmadd	d6, d3, d17, d6
   39868:	fmadd	d5, d3, d18, d5
   3986c:	fmul	d17, d1, d3
   39870:	fmadd	d4, d3, d6, d4
   39874:	fmadd	d1, d17, d5, d1
   39878:	fmul	d3, d3, d4
   3987c:	fmsub	d2, d1, d16, d2
   39880:	fmsub	d2, d3, d0, d2
   39884:	fmsub	d1, d1, d7, d2
   39888:	fadd	d0, d0, d1
   3988c:	b	39684 <sin@@GLIBC_2.17+0x2bc>
   39890:	add	x1, sp, #0x40
   39894:	add	x0, sp, #0x38
   39898:	bl	4db10 <__exp2f_finite@GLIBC_2.17+0x10a8>
   3989c:	ldp	d0, d2, [sp, #56]
   398a0:	fabs	d1, d0
   398a4:	tbz	w0, #0, 399c4 <sin@@GLIBC_2.17+0x5fc>
   398a8:	mov	x1, #0x42c8000000000000    	// #4812096201845374976
   398ac:	fmov	d3, x1
   398b0:	fcmpe	d0, #0.0
   398b4:	fneg	d7, d2
   398b8:	fadd	d0, d1, d3
   398bc:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   398c0:	fmov	d4, #5.000000000000000000e-01
   398c4:	adrp	x2, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   398c8:	ldr	d18, [x1, #352]
   398cc:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   398d0:	fcsel	d2, d7, d2, mi  // mi = first
   398d4:	add	x2, x2, #0xc08
   398d8:	fsub	d3, d0, d3
   398dc:	ldr	d17, [x1, #344]
   398e0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   398e4:	ldr	d5, [x1, #368]
   398e8:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   398ec:	fsub	d1, d1, d3
   398f0:	ldr	d6, [x1, #360]
   398f4:	fmov	x1, d0
   398f8:	fadd	d1, d1, d2
   398fc:	lsl	w1, w1, #2
   39900:	add	w5, w1, #0x1
   39904:	add	w4, w1, #0x3
   39908:	add	w3, w1, #0x2
   3990c:	fmul	d2, d1, d1
   39910:	ldr	d7, [x2, w1, sxtw #3]
   39914:	ldr	d16, [x2, w5, sxtw #3]
   39918:	ldr	d3, [x2, w4, sxtw #3]
   3991c:	ldr	d0, [x2, w3, sxtw #3]
   39920:	fmadd	d6, d2, d17, d6
   39924:	fmadd	d5, d2, d18, d5
   39928:	fmul	d17, d1, d2
   3992c:	fmadd	d4, d2, d6, d4
   39930:	fmadd	d1, d17, d5, d1
   39934:	fmul	d4, d2, d4
   39938:	fmsub	d2, d1, d16, d3
   3993c:	fmsub	d2, d4, d0, d2
   39940:	fmsub	d1, d1, d7, d2
   39944:	fadd	d0, d0, d1
   39948:	b	39684 <sin@@GLIBC_2.17+0x2bc>
   3994c:	cbnz	w1, 397e4 <sin@@GLIBC_2.17+0x41c>
   39950:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   39954:	ldr	x0, [x0, #3976]
   39958:	mrs	x1, tpidr_el0
   3995c:	fdiv	d0, d0, d0
   39960:	mov	w2, #0x21                  	// #33
   39964:	str	w2, [x1, x0]
   39968:	b	39420 <sin@@GLIBC_2.17+0x58>
   3996c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39970:	fmul	d2, d0, d0
   39974:	fmov	d3, #5.000000000000000000e-01
   39978:	ldr	d16, [x1, #312]
   3997c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39980:	fmul	d3, d1, d3
   39984:	ldr	d7, [x1, #320]
   39988:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3998c:	fmadd	d7, d2, d16, d7
   39990:	ldr	d6, [x1, #328]
   39994:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39998:	ldr	d5, [x1, #336]
   3999c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   399a0:	movk	x1, #0xbfc5, lsl #48
   399a4:	fmov	d4, x1
   399a8:	fmadd	d6, d2, d7, d6
   399ac:	fmadd	d5, d2, d6, d5
   399b0:	fmadd	d4, d2, d5, d4
   399b4:	fnmsub	d3, d4, d0, d3
   399b8:	fmadd	d1, d2, d3, d1
   399bc:	fadd	d0, d1, d0
   399c0:	b	39684 <sin@@GLIBC_2.17+0x2bc>
   399c4:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   399c8:	ldr	d3, [x1, #304]
   399cc:	fcmpe	d1, d3
   399d0:	b.mi	39a88 <sin@@GLIBC_2.17+0x6c0>  // b.first
   399d4:	mov	x1, #0x42c8000000000000    	// #4812096201845374976
   399d8:	fmov	d4, x1
   399dc:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   399e0:	fcmpe	d0, #0.0
   399e4:	fadd	d3, d1, d4
   399e8:	fneg	d6, d2
   399ec:	ldr	d21, [x1, #344]
   399f0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   399f4:	fmov	d7, #5.000000000000000000e-01
   399f8:	adrp	x2, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   399fc:	ldr	d17, [x1, #360]
   39a00:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39a04:	fsub	d4, d3, d4
   39a08:	fcsel	d2, d6, d2, ls  // ls = plast
   39a0c:	ldr	d16, [x1, #352]
   39a10:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39a14:	add	x2, x2, #0xc08
   39a18:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   39a1c:	ldr	d5, [x1, #368]
   39a20:	fmov	x1, d3
   39a24:	fsub	d1, d1, d4
   39a28:	fmov	d18, x3
   39a2c:	lsl	w1, w1, #2
   39a30:	fmul	d3, d1, d1
   39a34:	add	w5, w1, #0x3
   39a38:	add	w4, w1, #0x1
   39a3c:	add	w3, w1, #0x2
   39a40:	ldr	d6, [x2, w1, sxtw #3]
   39a44:	ldr	d20, [x2, w5, sxtw #3]
   39a48:	fmadd	d17, d3, d21, d17
   39a4c:	fmadd	d16, d3, d16, d5
   39a50:	fmul	d5, d1, d3
   39a54:	ldr	d4, [x2, w4, sxtw #3]
   39a58:	ldr	d19, [x2, w3, sxtw #3]
   39a5c:	fmadd	d7, d3, d17, d7
   39a60:	fmadd	d5, d5, d16, d2
   39a64:	fmul	d3, d3, d7
   39a68:	fadd	d5, d1, d5
   39a6c:	fmadd	d1, d1, d2, d3
   39a70:	fmadd	d2, d5, d20, d4
   39a74:	fmsub	d1, d1, d6, d2
   39a78:	fmadd	d1, d5, d19, d1
   39a7c:	fadd	d1, d6, d1
   39a80:	bif	v0.8b, v1.8b, v18.8b
   39a84:	b	39684 <sin@@GLIBC_2.17+0x2bc>
   39a88:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39a8c:	fmul	d1, d0, d0
   39a90:	fmov	d3, #5.000000000000000000e-01
   39a94:	ldr	d16, [x1, #312]
   39a98:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39a9c:	fmul	d3, d2, d3
   39aa0:	ldr	d7, [x1, #320]
   39aa4:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39aa8:	fmadd	d7, d1, d16, d7
   39aac:	ldr	d6, [x1, #328]
   39ab0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39ab4:	ldr	d5, [x1, #336]
   39ab8:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   39abc:	movk	x1, #0xbfc5, lsl #48
   39ac0:	fmov	d4, x1
   39ac4:	fmadd	d6, d1, d7, d6
   39ac8:	fmadd	d5, d1, d6, d5
   39acc:	fmadd	d4, d1, d5, d4
   39ad0:	fnmsub	d3, d0, d4, d3
   39ad4:	fmadd	d1, d1, d3, d2
   39ad8:	fadd	d0, d0, d1
   39adc:	b	39684 <sin@@GLIBC_2.17+0x2bc>
   39ae0:	bl	ba70 <__stack_chk_fail@plt>
   39ae4:	nop

0000000000039ae8 <cos@@GLIBC_2.17>:
   39ae8:	stp	x29, x30, [sp, #-80]!
   39aec:	fmov	d1, d0
   39af0:	mov	x29, sp
   39af4:	stp	x19, x20, [sp, #16]
   39af8:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   39afc:	ldr	x0, [x19, #4032]
   39b00:	ldr	x1, [x0]
   39b04:	str	x1, [sp, #72]
   39b08:	mov	x1, #0x0                   	// #0
   39b0c:	str	x21, [sp, #32]
   39b10:	mrs	x20, fpcr
   39b14:	ands	w21, w20, #0xc00000
   39b18:	fmov	x0, d0
   39b1c:	ubfx	x0, x0, #32, #31
   39b20:	b.ne	39e7c <cos@@GLIBC_2.17+0x394>  // b.any
   39b24:	mov	w1, #0x3e3fffff            	// #1044381695
   39b28:	fmov	d0, #1.000000000000000000e+00
   39b2c:	cmp	w0, w1
   39b30:	b.gt	39b58 <cos@@GLIBC_2.17+0x70>
   39b34:	ldr	x19, [x19, #4032]
   39b38:	ldr	x1, [sp, #72]
   39b3c:	ldr	x0, [x19]
   39b40:	eor	x0, x1, x0
   39b44:	cbnz	x0, 3a21c <cos@@GLIBC_2.17+0x734>
   39b48:	ldp	x19, x20, [sp, #16]
   39b4c:	ldr	x21, [sp, #32]
   39b50:	ldp	x29, x30, [sp], #80
   39b54:	ret
   39b58:	mov	w1, #0x5fff                	// #24575
   39b5c:	movk	w1, #0x3feb, lsl #16
   39b60:	cmp	w0, w1
   39b64:	b.gt	39c20 <cos@@GLIBC_2.17+0x138>
   39b68:	fabs	d0, d1
   39b6c:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   39b70:	fmov	d4, x0
   39b74:	fcmpe	d1, #0.0
   39b78:	movi	d1, #0x0
   39b7c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   39b80:	fmov	d5, x0
   39b84:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39b88:	fadd	d2, d0, d4
   39b8c:	fmov	d6, #5.000000000000000000e-01
   39b90:	ldr	d20, [x0, #352]
   39b94:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39b98:	fcsel	d5, d5, d1, mi  // mi = first
   39b9c:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   39ba0:	ldr	d19, [x0, #344]
   39ba4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39ba8:	fsub	d4, d2, d4
   39bac:	add	x1, x1, #0xc08
   39bb0:	ldr	d7, [x0, #368]
   39bb4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39bb8:	ldr	d16, [x0, #360]
   39bbc:	fmov	x0, d2
   39bc0:	fsub	d0, d0, d4
   39bc4:	lsl	w0, w0, #2
   39bc8:	fadd	d1, d0, d5
   39bcc:	add	w4, w0, #0x1
   39bd0:	add	w3, w0, #0x3
   39bd4:	add	w2, w0, #0x2
   39bd8:	ldr	d17, [x1, w0, sxtw #3]
   39bdc:	ldr	d18, [x1, w4, sxtw #3]
   39be0:	fmul	d3, d1, d1
   39be4:	ldr	d2, [x1, w3, sxtw #3]
   39be8:	ldr	d0, [x1, w2, sxtw #3]
   39bec:	fmadd	d5, d3, d20, d7
   39bf0:	fmadd	d4, d3, d19, d16
   39bf4:	fmul	d7, d1, d3
   39bf8:	fmadd	d4, d3, d4, d6
   39bfc:	fmadd	d1, d7, d5, d1
   39c00:	fmul	d3, d3, d4
   39c04:	fmsub	d2, d1, d18, d2
   39c08:	fmsub	d2, d3, d0, d2
   39c0c:	fmsub	d1, d1, d17, d2
   39c10:	fadd	d0, d0, d1
   39c14:	cbz	w21, 39b34 <cos@@GLIBC_2.17+0x4c>
   39c18:	msr	fpcr, x20
   39c1c:	b	39b34 <cos@@GLIBC_2.17+0x4c>
   39c20:	mov	w1, #0x68fc                	// #26876
   39c24:	movk	w1, #0x4003, lsl #16
   39c28:	cmp	w0, w1
   39c2c:	b.gt	39d24 <cos@@GLIBC_2.17+0x23c>
   39c30:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   39c34:	fabs	d1, d1
   39c38:	ldr	d0, [x0, #576]
   39c3c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   39c40:	ldr	d3, [x0, #568]
   39c44:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39c48:	fsub	d1, d0, d1
   39c4c:	ldr	d4, [x0, #304]
   39c50:	fadd	d0, d1, d3
   39c54:	fsub	d1, d1, d0
   39c58:	fabs	d2, d0
   39c5c:	fadd	d1, d1, d3
   39c60:	fcmpe	d2, d4
   39c64:	stp	d0, d1, [sp, #56]
   39c68:	b.mi	3a04c <cos@@GLIBC_2.17+0x564>  // b.first
   39c6c:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   39c70:	fmov	d6, x0
   39c74:	fcmpe	d0, #0.0
   39c78:	fneg	d3, d1
   39c7c:	fadd	d4, d2, d6
   39c80:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39c84:	fmov	d7, #5.000000000000000000e-01
   39c88:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   39c8c:	ldr	d21, [x0, #344]
   39c90:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39c94:	fcsel	d1, d3, d1, ls  // ls = plast
   39c98:	add	x1, x1, #0xc08
   39c9c:	fsub	d6, d4, d6
   39ca0:	ldr	d17, [x0, #360]
   39ca4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39ca8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   39cac:	fmov	d18, x2
   39cb0:	ldr	d16, [x0, #352]
   39cb4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39cb8:	fsub	d2, d2, d6
   39cbc:	ldr	d5, [x0, #368]
   39cc0:	fmov	x0, d4
   39cc4:	fmul	d3, d2, d2
   39cc8:	lsl	w0, w0, #2
   39ccc:	add	w4, w0, #0x3
   39cd0:	add	w3, w0, #0x1
   39cd4:	add	w2, w0, #0x2
   39cd8:	fmadd	d17, d3, d21, d17
   39cdc:	fmadd	d16, d3, d16, d5
   39ce0:	fmul	d5, d2, d3
   39ce4:	ldr	d20, [x1, w4, sxtw #3]
   39ce8:	ldr	d4, [x1, w3, sxtw #3]
   39cec:	ldr	d6, [x1, w0, sxtw #3]
   39cf0:	ldr	d19, [x1, w2, sxtw #3]
   39cf4:	fmadd	d7, d3, d17, d7
   39cf8:	fmadd	d5, d5, d16, d1
   39cfc:	fmul	d3, d3, d7
   39d00:	fadd	d5, d2, d5
   39d04:	fmadd	d1, d2, d1, d3
   39d08:	fmadd	d2, d5, d20, d4
   39d0c:	fmsub	d1, d1, d6, d2
   39d10:	fmadd	d1, d5, d19, d1
   39d14:	fadd	d1, d6, d1
   39d18:	bif	v0.8b, v1.8b, v18.8b
   39d1c:	cbz	w21, 39b34 <cos@@GLIBC_2.17+0x4c>
   39d20:	b	39c18 <cos@@GLIBC_2.17+0x130>
   39d24:	mov	w1, #0x21fa                	// #8698
   39d28:	movk	w1, #0x4199, lsl #16
   39d2c:	cmp	w0, w1
   39d30:	b.gt	39e9c <cos@@GLIBC_2.17+0x3b4>
   39d34:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   39d38:	ldr	d0, [x0, #2728]
   39d3c:	mov	x0, #0x4338000000000000    	// #4843621399236968448
   39d40:	fmov	d2, x0
   39d44:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39d48:	fmadd	d0, d1, d0, d2
   39d4c:	ldr	d6, [x0, #384]
   39d50:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39d54:	ldr	d3, [x0, #392]
   39d58:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39d5c:	ldr	d5, [x0, #400]
   39d60:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39d64:	ldr	d4, [x0, #408]
   39d68:	fsub	d2, d0, d2
   39d6c:	fmov	x0, d0
   39d70:	fmsub	d1, d2, d6, d1
   39d74:	and	w0, w0, #0x3
   39d78:	add	w2, w0, #0x1
   39d7c:	fmsub	d1, d2, d3, d1
   39d80:	fmsub	d3, d2, d5, d1
   39d84:	fmsub	d0, d2, d4, d3
   39d88:	fsub	d1, d1, d3
   39d8c:	fmsub	d1, d2, d5, d1
   39d90:	fsub	d3, d3, d0
   39d94:	fmsub	d2, d2, d4, d3
   39d98:	fabs	d3, d0
   39d9c:	fadd	d1, d1, d2
   39da0:	stp	d0, d1, [sp, #56]
   39da4:	tbz	w0, #0, 39ec0 <cos@@GLIBC_2.17+0x3d8>
   39da8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39dac:	ldr	d2, [x0, #304]
   39db0:	fcmpe	d3, d2
   39db4:	b.mi	3a0a8 <cos@@GLIBC_2.17+0x5c0>  // b.first
   39db8:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   39dbc:	fmov	d6, x0
   39dc0:	fcmpe	d0, #0.0
   39dc4:	fneg	d2, d1
   39dc8:	fadd	d4, d3, d6
   39dcc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39dd0:	fmov	d7, #5.000000000000000000e-01
   39dd4:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   39dd8:	ldr	d21, [x0, #344]
   39ddc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39de0:	fcsel	d1, d2, d1, ls  // ls = plast
   39de4:	add	x1, x1, #0xc08
   39de8:	fsub	d6, d4, d6
   39dec:	ldr	d17, [x0, #360]
   39df0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39df4:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   39df8:	fmov	d18, x3
   39dfc:	ldr	d16, [x0, #352]
   39e00:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39e04:	fsub	d3, d3, d6
   39e08:	ldr	d5, [x0, #368]
   39e0c:	fmov	x0, d4
   39e10:	fmul	d2, d3, d3
   39e14:	lsl	w0, w0, #2
   39e18:	add	w5, w0, #0x3
   39e1c:	add	w4, w0, #0x1
   39e20:	add	w3, w0, #0x2
   39e24:	fmadd	d17, d2, d21, d17
   39e28:	fmadd	d16, d2, d16, d5
   39e2c:	fmul	d5, d3, d2
   39e30:	ldr	d20, [x1, w5, sxtw #3]
   39e34:	ldr	d4, [x1, w4, sxtw #3]
   39e38:	ldr	d6, [x1, w0, sxtw #3]
   39e3c:	ldr	d19, [x1, w3, sxtw #3]
   39e40:	fmadd	d7, d2, d17, d7
   39e44:	fmadd	d5, d5, d16, d1
   39e48:	fmul	d2, d2, d7
   39e4c:	fadd	d5, d3, d5
   39e50:	fmadd	d3, d3, d1, d2
   39e54:	fmadd	d1, d5, d20, d4
   39e58:	fmsub	d3, d3, d6, d1
   39e5c:	fmadd	d3, d5, d19, d3
   39e60:	fadd	d3, d6, d3
   39e64:	bif	v0.8b, v3.8b, v18.8b
   39e68:	fneg	d1, d0
   39e6c:	tst	x2, #0x2
   39e70:	fcsel	d0, d1, d0, ne  // ne = any
   39e74:	cbz	w21, 39b34 <cos@@GLIBC_2.17+0x4c>
   39e78:	b	39c18 <cos@@GLIBC_2.17+0x130>
   39e7c:	eor	w1, w21, w20
   39e80:	msr	fpcr, x1
   39e84:	mov	w1, #0x3e3fffff            	// #1044381695
   39e88:	cmp	w0, w1
   39e8c:	b.gt	39b58 <cos@@GLIBC_2.17+0x70>
   39e90:	fmov	d0, #1.000000000000000000e+00
   39e94:	msr	fpcr, x20
   39e98:	b	39b34 <cos@@GLIBC_2.17+0x4c>
   39e9c:	mov	w1, #0x7fefffff            	// #2146435071
   39ea0:	cmp	w0, w1
   39ea4:	b.le	39f64 <cos@@GLIBC_2.17+0x47c>
   39ea8:	mov	w1, #0x7ff00000            	// #2146435072
   39eac:	cmp	w0, w1
   39eb0:	b.eq	3a028 <cos@@GLIBC_2.17+0x540>  // b.none
   39eb4:	fdiv	d0, d1, d1
   39eb8:	cbz	w21, 39b34 <cos@@GLIBC_2.17+0x4c>
   39ebc:	b	39c18 <cos@@GLIBC_2.17+0x130>
   39ec0:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   39ec4:	fmov	d2, x0
   39ec8:	fcmpe	d0, #0.0
   39ecc:	fneg	d7, d1
   39ed0:	fadd	d0, d3, d2
   39ed4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39ed8:	fmov	d4, #5.000000000000000000e-01
   39edc:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   39ee0:	ldr	d18, [x0, #352]
   39ee4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39ee8:	fcsel	d1, d7, d1, mi  // mi = first
   39eec:	add	x1, x1, #0xc08
   39ef0:	fsub	d2, d0, d2
   39ef4:	ldr	d17, [x0, #344]
   39ef8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39efc:	ldr	d5, [x0, #368]
   39f00:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39f04:	fsub	d3, d3, d2
   39f08:	ldr	d6, [x0, #360]
   39f0c:	fmov	x0, d0
   39f10:	fadd	d1, d3, d1
   39f14:	lsl	w0, w0, #2
   39f18:	add	w5, w0, #0x1
   39f1c:	add	w4, w0, #0x3
   39f20:	add	w3, w0, #0x2
   39f24:	fmul	d3, d1, d1
   39f28:	ldr	d7, [x1, w0, sxtw #3]
   39f2c:	ldr	d16, [x1, w5, sxtw #3]
   39f30:	ldr	d2, [x1, w4, sxtw #3]
   39f34:	ldr	d0, [x1, w3, sxtw #3]
   39f38:	fmadd	d6, d3, d17, d6
   39f3c:	fmadd	d5, d3, d18, d5
   39f40:	fmul	d17, d1, d3
   39f44:	fmadd	d4, d3, d6, d4
   39f48:	fmadd	d1, d17, d5, d1
   39f4c:	fmul	d3, d3, d4
   39f50:	fmsub	d2, d1, d16, d2
   39f54:	fmsub	d2, d3, d0, d2
   39f58:	fmsub	d1, d1, d7, d2
   39f5c:	fadd	d0, d0, d1
   39f60:	b	39e68 <cos@@GLIBC_2.17+0x380>
   39f64:	fmov	d0, d1
   39f68:	add	x1, sp, #0x40
   39f6c:	add	x0, sp, #0x38
   39f70:	bl	4db10 <__exp2f_finite@GLIBC_2.17+0x10a8>
   39f74:	add	w2, w0, #0x1
   39f78:	ldp	d0, d2, [sp, #56]
   39f7c:	fabs	d1, d0
   39f80:	tbnz	w0, #0, 3a100 <cos@@GLIBC_2.17+0x618>
   39f84:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   39f88:	fmov	d3, x0
   39f8c:	fcmpe	d0, #0.0
   39f90:	fneg	d7, d2
   39f94:	fadd	d0, d1, d3
   39f98:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39f9c:	fmov	d4, #5.000000000000000000e-01
   39fa0:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   39fa4:	ldr	d18, [x0, #352]
   39fa8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39fac:	fcsel	d2, d7, d2, mi  // mi = first
   39fb0:	add	x1, x1, #0xc08
   39fb4:	fsub	d3, d0, d3
   39fb8:	ldr	d17, [x0, #344]
   39fbc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39fc0:	ldr	d5, [x0, #368]
   39fc4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   39fc8:	fsub	d1, d1, d3
   39fcc:	ldr	d6, [x0, #360]
   39fd0:	fmov	x0, d0
   39fd4:	fadd	d1, d1, d2
   39fd8:	lsl	w0, w0, #2
   39fdc:	add	w5, w0, #0x1
   39fe0:	add	w4, w0, #0x3
   39fe4:	add	w3, w0, #0x2
   39fe8:	fmul	d2, d1, d1
   39fec:	ldr	d7, [x1, w0, sxtw #3]
   39ff0:	ldr	d16, [x1, w5, sxtw #3]
   39ff4:	ldr	d3, [x1, w4, sxtw #3]
   39ff8:	ldr	d0, [x1, w3, sxtw #3]
   39ffc:	fmadd	d6, d2, d17, d6
   3a000:	fmadd	d5, d2, d18, d5
   3a004:	fmul	d17, d1, d2
   3a008:	fmadd	d4, d2, d6, d4
   3a00c:	fmadd	d1, d17, d5, d1
   3a010:	fmul	d4, d2, d4
   3a014:	fmsub	d2, d1, d16, d3
   3a018:	fmsub	d2, d4, d0, d2
   3a01c:	fmsub	d1, d1, d7, d2
   3a020:	fadd	d0, d0, d1
   3a024:	b	39e68 <cos@@GLIBC_2.17+0x380>
   3a028:	fmov	x0, d1
   3a02c:	cbnz	w0, 39eb4 <cos@@GLIBC_2.17+0x3cc>
   3a030:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3a034:	ldr	x0, [x0, #3976]
   3a038:	mrs	x1, tpidr_el0
   3a03c:	fdiv	d0, d1, d1
   3a040:	mov	w2, #0x21                  	// #33
   3a044:	str	w2, [x1, x0]
   3a048:	b	39eb8 <cos@@GLIBC_2.17+0x3d0>
   3a04c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a050:	fmul	d2, d0, d0
   3a054:	fmov	d3, #5.000000000000000000e-01
   3a058:	ldr	d16, [x0, #312]
   3a05c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a060:	fmul	d3, d1, d3
   3a064:	ldr	d7, [x0, #320]
   3a068:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a06c:	fmadd	d7, d2, d16, d7
   3a070:	ldr	d6, [x0, #328]
   3a074:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a078:	ldr	d5, [x0, #336]
   3a07c:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   3a080:	movk	x0, #0xbfc5, lsl #48
   3a084:	fmov	d4, x0
   3a088:	fmadd	d6, d2, d7, d6
   3a08c:	fmadd	d5, d2, d6, d5
   3a090:	fmadd	d4, d2, d5, d4
   3a094:	fnmsub	d3, d0, d4, d3
   3a098:	fmadd	d1, d2, d3, d1
   3a09c:	fadd	d0, d0, d1
   3a0a0:	cbz	w21, 39b34 <cos@@GLIBC_2.17+0x4c>
   3a0a4:	b	39c18 <cos@@GLIBC_2.17+0x130>
   3a0a8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a0ac:	fmul	d2, d0, d0
   3a0b0:	fmov	d3, #5.000000000000000000e-01
   3a0b4:	ldr	d16, [x0, #312]
   3a0b8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a0bc:	fmul	d3, d1, d3
   3a0c0:	ldr	d7, [x0, #320]
   3a0c4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a0c8:	fmadd	d7, d2, d16, d7
   3a0cc:	ldr	d6, [x0, #328]
   3a0d0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a0d4:	ldr	d5, [x0, #336]
   3a0d8:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   3a0dc:	movk	x0, #0xbfc5, lsl #48
   3a0e0:	fmov	d4, x0
   3a0e4:	fmadd	d6, d2, d7, d6
   3a0e8:	fmadd	d5, d2, d6, d5
   3a0ec:	fmadd	d4, d2, d5, d4
   3a0f0:	fnmsub	d3, d4, d0, d3
   3a0f4:	fmadd	d1, d2, d3, d1
   3a0f8:	fadd	d0, d1, d0
   3a0fc:	b	39e68 <cos@@GLIBC_2.17+0x380>
   3a100:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a104:	ldr	d3, [x0, #304]
   3a108:	fcmpe	d1, d3
   3a10c:	b.mi	3a1c4 <cos@@GLIBC_2.17+0x6dc>  // b.first
   3a110:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   3a114:	fmov	d4, x0
   3a118:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a11c:	fcmpe	d0, #0.0
   3a120:	fadd	d3, d1, d4
   3a124:	fneg	d6, d2
   3a128:	ldr	d21, [x0, #344]
   3a12c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a130:	fmov	d7, #5.000000000000000000e-01
   3a134:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   3a138:	ldr	d17, [x0, #360]
   3a13c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a140:	fsub	d4, d3, d4
   3a144:	fcsel	d2, d6, d2, ls  // ls = plast
   3a148:	ldr	d16, [x0, #352]
   3a14c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a150:	add	x1, x1, #0xc08
   3a154:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   3a158:	ldr	d5, [x0, #368]
   3a15c:	fmov	x0, d3
   3a160:	fsub	d1, d1, d4
   3a164:	fmov	d18, x3
   3a168:	lsl	w0, w0, #2
   3a16c:	fmul	d3, d1, d1
   3a170:	add	w5, w0, #0x3
   3a174:	add	w4, w0, #0x1
   3a178:	add	w3, w0, #0x2
   3a17c:	ldr	d6, [x1, w0, sxtw #3]
   3a180:	ldr	d20, [x1, w5, sxtw #3]
   3a184:	fmadd	d17, d3, d21, d17
   3a188:	fmadd	d16, d3, d16, d5
   3a18c:	fmul	d5, d1, d3
   3a190:	ldr	d4, [x1, w4, sxtw #3]
   3a194:	ldr	d19, [x1, w3, sxtw #3]
   3a198:	fmadd	d7, d3, d17, d7
   3a19c:	fmadd	d5, d5, d16, d2
   3a1a0:	fmul	d3, d3, d7
   3a1a4:	fadd	d5, d1, d5
   3a1a8:	fmadd	d1, d1, d2, d3
   3a1ac:	fmadd	d2, d5, d20, d4
   3a1b0:	fmsub	d1, d1, d6, d2
   3a1b4:	fmadd	d1, d5, d19, d1
   3a1b8:	fadd	d1, d6, d1
   3a1bc:	bif	v0.8b, v1.8b, v18.8b
   3a1c0:	b	39e68 <cos@@GLIBC_2.17+0x380>
   3a1c4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a1c8:	fmul	d1, d0, d0
   3a1cc:	fmov	d3, #5.000000000000000000e-01
   3a1d0:	ldr	d16, [x0, #312]
   3a1d4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a1d8:	fmul	d3, d2, d3
   3a1dc:	ldr	d7, [x0, #320]
   3a1e0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a1e4:	fmadd	d7, d1, d16, d7
   3a1e8:	ldr	d6, [x0, #328]
   3a1ec:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a1f0:	ldr	d5, [x0, #336]
   3a1f4:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   3a1f8:	movk	x0, #0xbfc5, lsl #48
   3a1fc:	fmov	d4, x0
   3a200:	fmadd	d6, d1, d7, d6
   3a204:	fmadd	d5, d1, d6, d5
   3a208:	fmadd	d4, d1, d5, d4
   3a20c:	fnmsub	d3, d0, d4, d3
   3a210:	fmadd	d1, d1, d3, d2
   3a214:	fadd	d0, d0, d1
   3a218:	b	39e68 <cos@@GLIBC_2.17+0x380>
   3a21c:	bl	ba70 <__stack_chk_fail@plt>
   3a220:	stp	x29, x30, [sp, #-384]!
   3a224:	mov	w1, #0x20                  	// #32
   3a228:	mov	x29, sp
   3a22c:	stp	x19, x20, [sp, #16]
   3a230:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3a234:	add	x20, sp, #0x30
   3a238:	ldr	x19, [x19, #4032]
   3a23c:	mov	x0, x20
   3a240:	ldr	x2, [x19]
   3a244:	str	x2, [sp, #376]
   3a248:	mov	x2, #0x0                   	// #0
   3a24c:	bl	50d88 <__exp2f_finite@GLIBC_2.17+0x4320>
   3a250:	mov	x0, x20
   3a254:	add	x1, sp, #0x28
   3a258:	mov	w2, #0x20                  	// #32
   3a25c:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   3a260:	ldr	x1, [sp, #376]
   3a264:	ldr	x0, [x19]
   3a268:	eor	x0, x1, x0
   3a26c:	ldr	d0, [sp, #40]
   3a270:	cbnz	x0, 3a280 <cos@@GLIBC_2.17+0x798>
   3a274:	ldp	x19, x20, [sp, #16]
   3a278:	ldp	x29, x30, [sp], #384
   3a27c:	ret
   3a280:	bl	ba70 <__stack_chk_fail@plt>
   3a284:	nop

000000000003a288 <tan@@GLIBC_2.17>:
   3a288:	sub	sp, sp, #0x460
   3a28c:	stp	x29, x30, [sp]
   3a290:	mov	x29, sp
   3a294:	stp	x19, x20, [sp, #16]
   3a298:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3a29c:	ldr	x0, [x19, #4032]
   3a2a0:	stp	x21, x22, [sp, #32]
   3a2a4:	ldr	x1, [x0]
   3a2a8:	str	x1, [sp, #1112]
   3a2ac:	mov	x1, #0x0                   	// #0
   3a2b0:	str	d8, [sp, #80]
   3a2b4:	fmov	d8, d0
   3a2b8:	mrs	x20, fpcr
   3a2bc:	ands	w21, w20, #0xc00000
   3a2c0:	b.ne	3af44 <tan@@GLIBC_2.17+0xcbc>  // b.any
   3a2c4:	fmov	x0, d8
   3a2c8:	mov	w2, #0x7ff00000            	// #2146435072
   3a2cc:	asr	x0, x0, #32
   3a2d0:	and	w1, w0, w2
   3a2d4:	cmp	w1, w2
   3a2d8:	b.eq	3a9dc <tan@@GLIBC_2.17+0x754>  // b.none
   3a2dc:	fcmpe	d8, #0.0
   3a2e0:	fneg	d1, d8
   3a2e4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a2e8:	ldr	d0, [x0, #864]
   3a2ec:	fcsel	d1, d1, d8, mi  // mi = first
   3a2f0:	fcmpe	d0, d1
   3a2f4:	b.ge	3a9c0 <tan@@GLIBC_2.17+0x738>  // b.tcont
   3a2f8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a2fc:	ldr	d0, [x0, #856]
   3a300:	fcmpe	d0, d1
   3a304:	b.lt	3a6b8 <tan@@GLIBC_2.17+0x430>  // b.tstop
   3a308:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a30c:	fmul	d1, d8, d8
   3a310:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a314:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a318:	ldr	d2, [x1, #840]
   3a31c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a320:	ldr	d5, [x0, #848]
   3a324:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a328:	ldr	d4, [x2, #832]
   3a32c:	fmul	d0, d8, d1
   3a330:	fmadd	d5, d2, d1, d5
   3a334:	ldr	d2, [x1, #824]
   3a338:	ldr	d3, [x0, #816]
   3a33c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a340:	ldr	d6, [x0, #808]
   3a344:	fmadd	d4, d1, d5, d4
   3a348:	fmadd	d2, d1, d4, d2
   3a34c:	fmadd	d2, d1, d2, d3
   3a350:	fmul	d2, d0, d2
   3a354:	fmsub	d0, d6, d2, d2
   3a358:	fmadd	d2, d6, d2, d2
   3a35c:	fadd	d0, d0, d8
   3a360:	fadd	d2, d2, d8
   3a364:	fcmp	d2, d0
   3a368:	b.eq	3a688 <tan@@GLIBC_2.17+0x400>  // b.none
   3a36c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a370:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a374:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a378:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a37c:	ldr	d6, [x1, #792]
   3a380:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a384:	ldr	d16, [x0, #800]
   3a388:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a38c:	ldr	d7, [x2, #784]
   3a390:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a394:	fmadd	d16, d6, d1, d16
   3a398:	ldr	d6, [x3, #776]
   3a39c:	ldr	d5, [x1, #768]
   3a3a0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a3a4:	ldr	d4, [x0, #760]
   3a3a8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a3ac:	ldr	d2, [x2, #752]
   3a3b0:	fnmsub	d0, d8, d8, d1
   3a3b4:	ldr	d3, [x1, #744]
   3a3b8:	ldr	d17, [x0, #736]
   3a3bc:	fabs	d18, d3
   3a3c0:	fmadd	d7, d1, d16, d7
   3a3c4:	fmadd	d6, d1, d7, d6
   3a3c8:	fmadd	d5, d1, d6, d5
   3a3cc:	fmadd	d4, d1, d5, d4
   3a3d0:	fmadd	d2, d1, d4, d2
   3a3d4:	fmul	d2, d1, d2
   3a3d8:	fabs	d4, d2
   3a3dc:	fadd	d5, d3, d2
   3a3e0:	fcmpe	d18, d4
   3a3e4:	b.le	3afc8 <tan@@GLIBC_2.17+0xd40>
   3a3e8:	fsub	d3, d3, d5
   3a3ec:	movi	d4, #0x0
   3a3f0:	fadd	d2, d3, d2
   3a3f4:	fadd	d2, d2, d4
   3a3f8:	fadd	d2, d2, d17
   3a3fc:	fadd	d16, d2, d5
   3a400:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a404:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a408:	ldr	d6, [x1, #728]
   3a40c:	ldr	d17, [x0, #720]
   3a410:	fsub	d5, d5, d16
   3a414:	fmul	d7, d0, d16
   3a418:	fmul	d4, d1, d16
   3a41c:	fabs	d18, d6
   3a420:	fnmsub	d16, d1, d16, d4
   3a424:	fadd	d2, d5, d2
   3a428:	fmadd	d2, d1, d2, d7
   3a42c:	fadd	d2, d2, d16
   3a430:	fadd	d3, d4, d2
   3a434:	fabs	d7, d3
   3a438:	fsub	d4, d4, d3
   3a43c:	fadd	d5, d6, d3
   3a440:	fcmpe	d18, d7
   3a444:	fadd	d4, d4, d2
   3a448:	b.le	3afb4 <tan@@GLIBC_2.17+0xd2c>
   3a44c:	fsub	d6, d6, d5
   3a450:	fadd	d3, d6, d3
   3a454:	fadd	d3, d3, d4
   3a458:	fadd	d3, d3, d17
   3a45c:	fadd	d7, d3, d5
   3a460:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a464:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a468:	ldr	d4, [x1, #712]
   3a46c:	ldr	d16, [x0, #704]
   3a470:	fsub	d6, d5, d7
   3a474:	fmul	d2, d0, d7
   3a478:	fmul	d5, d1, d7
   3a47c:	fabs	d17, d4
   3a480:	fnmsub	d7, d1, d7, d5
   3a484:	fadd	d3, d6, d3
   3a488:	fmadd	d3, d1, d3, d2
   3a48c:	fadd	d6, d3, d7
   3a490:	fadd	d2, d5, d6
   3a494:	fabs	d7, d2
   3a498:	fsub	d3, d5, d2
   3a49c:	fadd	d5, d4, d2
   3a4a0:	fcmpe	d17, d7
   3a4a4:	fadd	d3, d3, d6
   3a4a8:	b.le	3afa0 <tan@@GLIBC_2.17+0xd18>
   3a4ac:	fsub	d4, d4, d5
   3a4b0:	fadd	d4, d4, d2
   3a4b4:	fadd	d4, d4, d3
   3a4b8:	fadd	d4, d4, d16
   3a4bc:	fadd	d7, d4, d5
   3a4c0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a4c4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a4c8:	ldr	d3, [x1, #696]
   3a4cc:	ldr	d16, [x0, #688]
   3a4d0:	fsub	d6, d5, d7
   3a4d4:	fmul	d2, d0, d7
   3a4d8:	fmul	d5, d1, d7
   3a4dc:	fabs	d17, d3
   3a4e0:	fnmsub	d7, d1, d7, d5
   3a4e4:	fadd	d4, d6, d4
   3a4e8:	fmadd	d4, d1, d4, d2
   3a4ec:	fadd	d6, d4, d7
   3a4f0:	fadd	d2, d5, d6
   3a4f4:	fabs	d7, d2
   3a4f8:	fsub	d4, d5, d2
   3a4fc:	fadd	d5, d3, d2
   3a500:	fcmpe	d17, d7
   3a504:	fadd	d4, d4, d6
   3a508:	b.le	3af8c <tan@@GLIBC_2.17+0xd04>
   3a50c:	fsub	d3, d3, d5
   3a510:	fadd	d3, d3, d2
   3a514:	fadd	d3, d3, d4
   3a518:	fadd	d3, d3, d16
   3a51c:	fadd	d7, d3, d5
   3a520:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a524:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a528:	ldr	d4, [x1, #680]
   3a52c:	ldr	d16, [x0, #672]
   3a530:	fsub	d6, d5, d7
   3a534:	fmul	d2, d0, d7
   3a538:	fmul	d5, d1, d7
   3a53c:	fabs	d17, d4
   3a540:	fnmsub	d7, d1, d7, d5
   3a544:	fadd	d3, d6, d3
   3a548:	fmadd	d3, d1, d3, d2
   3a54c:	fadd	d6, d3, d7
   3a550:	fadd	d2, d5, d6
   3a554:	fabs	d7, d2
   3a558:	fsub	d3, d5, d2
   3a55c:	fadd	d5, d4, d2
   3a560:	fcmpe	d17, d7
   3a564:	fadd	d3, d3, d6
   3a568:	b.le	3af78 <tan@@GLIBC_2.17+0xcf0>
   3a56c:	fsub	d4, d4, d5
   3a570:	fadd	d4, d4, d2
   3a574:	fadd	d4, d4, d3
   3a578:	fadd	d4, d4, d16
   3a57c:	fadd	d7, d4, d5
   3a580:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a584:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a588:	ldr	d3, [x1, #816]
   3a58c:	ldr	d16, [x0, #664]
   3a590:	fsub	d6, d5, d7
   3a594:	fmul	d2, d0, d7
   3a598:	fmul	d5, d1, d7
   3a59c:	fabs	d17, d3
   3a5a0:	fnmsub	d7, d1, d7, d5
   3a5a4:	fadd	d4, d6, d4
   3a5a8:	fmadd	d4, d1, d4, d2
   3a5ac:	fadd	d6, d4, d7
   3a5b0:	fadd	d2, d5, d6
   3a5b4:	fabs	d7, d2
   3a5b8:	fsub	d4, d5, d2
   3a5bc:	fadd	d5, d3, d2
   3a5c0:	fcmpe	d17, d7
   3a5c4:	fadd	d4, d4, d6
   3a5c8:	b.le	3af64 <tan@@GLIBC_2.17+0xcdc>
   3a5cc:	fsub	d3, d3, d5
   3a5d0:	fadd	d3, d3, d2
   3a5d4:	fadd	d3, d3, d4
   3a5d8:	fadd	d3, d3, d16
   3a5dc:	fadd	d6, d3, d5
   3a5e0:	movi	d16, #0x0
   3a5e4:	fabs	d7, d8
   3a5e8:	fsub	d5, d5, d6
   3a5ec:	fmul	d4, d1, d6
   3a5f0:	fmul	d0, d0, d6
   3a5f4:	fnmsub	d6, d1, d6, d4
   3a5f8:	fadd	d3, d5, d3
   3a5fc:	fmadd	d1, d1, d3, d0
   3a600:	fadd	d1, d1, d6
   3a604:	fadd	d5, d4, d1
   3a608:	fsub	d4, d4, d5
   3a60c:	fmul	d0, d8, d5
   3a610:	fmul	d3, d5, d16
   3a614:	fnmsub	d5, d8, d5, d0
   3a618:	fadd	d1, d4, d1
   3a61c:	fmadd	d1, d8, d1, d3
   3a620:	fadd	d4, d1, d5
   3a624:	fadd	d2, d0, d4
   3a628:	fabs	d5, d2
   3a62c:	fsub	d1, d0, d2
   3a630:	fadd	d0, d8, d2
   3a634:	fcmpe	d7, d5
   3a638:	fadd	d1, d1, d4
   3a63c:	b.le	3af50 <tan@@GLIBC_2.17+0xcc8>
   3a640:	fsub	d3, d8, d0
   3a644:	fadd	d2, d3, d2
   3a648:	fadd	d2, d2, d1
   3a64c:	fadd	d2, d2, d16
   3a650:	fadd	d3, d2, d0
   3a654:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a658:	ldr	d4, [x0, #656]
   3a65c:	fsub	d0, d0, d3
   3a660:	fadd	d1, d0, d2
   3a664:	fmsub	d0, d4, d3, d1
   3a668:	fmadd	d1, d4, d3, d1
   3a66c:	fadd	d0, d0, d3
   3a670:	fadd	d1, d1, d3
   3a674:	fcmp	d1, d0
   3a678:	b.eq	3a688 <tan@@GLIBC_2.17+0x400>  // b.none
   3a67c:	fmov	d0, d8
   3a680:	bl	3a220 <cos@@GLIBC_2.17+0x738>
   3a684:	nop
   3a688:	cbnz	w21, 3a9b8 <tan@@GLIBC_2.17+0x730>
   3a68c:	ldr	x19, [x19, #4032]
   3a690:	ldr	x1, [sp, #1112]
   3a694:	ldr	x0, [x19]
   3a698:	eor	x0, x1, x0
   3a69c:	cbnz	x0, 3cbcc <tan@@GLIBC_2.17+0x2944>
   3a6a0:	ldp	x29, x30, [sp]
   3a6a4:	ldp	x19, x20, [sp, #16]
   3a6a8:	ldp	x21, x22, [sp, #32]
   3a6ac:	ldr	d8, [sp, #80]
   3a6b0:	add	sp, sp, #0x460
   3a6b4:	ret
   3a6b8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a6bc:	ldr	d0, [x0, #648]
   3a6c0:	fcmpe	d0, d1
   3a6c4:	b.lt	3a9f8 <tan@@GLIBC_2.17+0x770>  // b.tstop
   3a6c8:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a6cc:	mov	x0, #0x4070000000000000    	// #4643211215818981376
   3a6d0:	fmov	d0, x0
   3a6d4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a6d8:	ldr	d2, [x1, #640]
   3a6dc:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a6e0:	fmadd	d2, d1, d0, d2
   3a6e4:	ldr	d5, [x0, #616]
   3a6e8:	add	x2, x2, #0x368
   3a6ec:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a6f0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a6f4:	fcmpe	d8, #0.0
   3a6f8:	ldr	d16, [x3, #624]
   3a6fc:	fmov	d3, #-1.000000000000000000e+00
   3a700:	ldr	d7, [x1, #632]
   3a704:	fmov	d0, #1.000000000000000000e+00
   3a708:	fcsel	d0, d3, d0, mi  // mi = first
   3a70c:	fcvtzs	w0, d2
   3a710:	sbfiz	x0, x0, #5, #32
   3a714:	add	x1, x2, x0
   3a718:	ldr	d2, [x2, x0]
   3a71c:	ldp	d3, d6, [x1, #8]
   3a720:	fsub	d1, d1, d2
   3a724:	fadd	d2, d3, d6
   3a728:	fmul	d4, d1, d1
   3a72c:	fmadd	d16, d16, d4, d7
   3a730:	fmul	d7, d1, d4
   3a734:	fmadd	d7, d7, d16, d1
   3a738:	fsub	d6, d6, d7
   3a73c:	fmul	d2, d2, d7
   3a740:	fdiv	d2, d2, d6
   3a744:	fmsub	d6, d5, d3, d2
   3a748:	fmadd	d5, d5, d3, d2
   3a74c:	fadd	d6, d6, d3
   3a750:	fadd	d5, d5, d3
   3a754:	fcmp	d5, d6
   3a758:	b.eq	3b4f8 <tan@@GLIBC_2.17+0x1270>  // b.none
   3a75c:	fcmpe	d2, #0.0
   3a760:	fneg	d5, d2
   3a764:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a768:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a76c:	ldr	d7, [x2, #600]
   3a770:	fcsel	d5, d5, d2, mi  // mi = first
   3a774:	ldr	d6, [x0, #608]
   3a778:	fmul	d5, d5, d7
   3a77c:	fmadd	d5, d6, d3, d5
   3a780:	fsub	d6, d2, d5
   3a784:	fadd	d2, d2, d5
   3a788:	fadd	d5, d6, d3
   3a78c:	fadd	d2, d2, d3
   3a790:	fcmp	d2, d5
   3a794:	b.eq	3bac8 <tan@@GLIBC_2.17+0x1840>  // b.none
   3a798:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a79c:	adrp	x4, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a7a0:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a7a4:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a7a8:	ldr	d5, [x0, #728]
   3a7ac:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a7b0:	ldr	d7, [x4, #712]
   3a7b4:	fnmsub	d6, d1, d1, d4
   3a7b8:	ldr	d2, [x3, #696]
   3a7bc:	fmadd	d7, d5, d4, d7
   3a7c0:	ldr	d16, [x2, #680]
   3a7c4:	ldr	d17, [x0, #672]
   3a7c8:	ldr	d5, [x1, #24]
   3a7cc:	fabs	d19, d16
   3a7d0:	fmadd	d2, d7, d4, d2
   3a7d4:	fmul	d2, d2, d4
   3a7d8:	fabs	d18, d2
   3a7dc:	fadd	d7, d16, d2
   3a7e0:	fcmpe	d19, d18
   3a7e4:	b.le	3b500 <tan@@GLIBC_2.17+0x1278>
   3a7e8:	fsub	d16, d16, d7
   3a7ec:	movi	d18, #0x0
   3a7f0:	fadd	d2, d16, d2
   3a7f4:	fadd	d2, d2, d18
   3a7f8:	fadd	d2, d2, d17
   3a7fc:	fadd	d19, d2, d7
   3a800:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a804:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a808:	ldr	d17, [x1, #816]
   3a80c:	ldr	d20, [x0, #664]
   3a810:	fsub	d16, d7, d19
   3a814:	fmul	d18, d6, d19
   3a818:	fmul	d7, d4, d19
   3a81c:	fabs	d21, d17
   3a820:	fnmsub	d19, d4, d19, d7
   3a824:	fadd	d2, d16, d2
   3a828:	fmadd	d2, d4, d2, d18
   3a82c:	fadd	d18, d2, d19
   3a830:	fadd	d2, d7, d18
   3a834:	fabs	d19, d2
   3a838:	fsub	d16, d7, d2
   3a83c:	fadd	d7, d17, d2
   3a840:	fcmpe	d21, d19
   3a844:	fadd	d16, d16, d18
   3a848:	b.le	3bad0 <tan@@GLIBC_2.17+0x1848>
   3a84c:	fsub	d17, d17, d7
   3a850:	fadd	d2, d17, d2
   3a854:	fadd	d2, d2, d16
   3a858:	fadd	d2, d2, d20
   3a85c:	fadd	d17, d2, d7
   3a860:	movi	d18, #0x0
   3a864:	fabs	d19, d1
   3a868:	fsub	d16, d7, d17
   3a86c:	fmul	d6, d6, d17
   3a870:	fmul	d7, d4, d17
   3a874:	fnmsub	d17, d4, d17, d7
   3a878:	fadd	d2, d16, d2
   3a87c:	fmadd	d4, d4, d2, d6
   3a880:	fadd	d4, d4, d17
   3a884:	fadd	d16, d7, d4
   3a888:	fsub	d7, d7, d16
   3a88c:	fmul	d2, d16, d18
   3a890:	fmul	d6, d1, d16
   3a894:	fnmsub	d16, d1, d16, d6
   3a898:	fadd	d4, d7, d4
   3a89c:	fmadd	d4, d1, d4, d2
   3a8a0:	fadd	d7, d4, d16
   3a8a4:	fadd	d2, d6, d7
   3a8a8:	fabs	d17, d2
   3a8ac:	fsub	d6, d6, d2
   3a8b0:	fadd	d4, d1, d2
   3a8b4:	fcmpe	d19, d17
   3a8b8:	fadd	d6, d6, d7
   3a8bc:	b.le	3baf8 <tan@@GLIBC_2.17+0x1870>
   3a8c0:	fsub	d1, d1, d4
   3a8c4:	fadd	d1, d1, d2
   3a8c8:	fadd	d1, d1, d6
   3a8cc:	fadd	d1, d1, d18
   3a8d0:	fadd	d2, d1, d4
   3a8d4:	fabs	d7, d3
   3a8d8:	fabs	d16, d2
   3a8dc:	fsub	d4, d4, d2
   3a8e0:	fadd	d6, d3, d2
   3a8e4:	fcmpe	d7, d16
   3a8e8:	fadd	d1, d4, d1
   3a8ec:	b.le	3bae4 <tan@@GLIBC_2.17+0x185c>
   3a8f0:	fsub	d4, d3, d6
   3a8f4:	fadd	d4, d4, d2
   3a8f8:	fadd	d4, d4, d1
   3a8fc:	fadd	d4, d4, d5
   3a900:	fmul	d7, d3, d2
   3a904:	fmul	d5, d5, d2
   3a908:	fmadd	d5, d3, d1, d5
   3a90c:	fnmsub	d3, d3, d2, d7
   3a910:	fadd	d2, d4, d6
   3a914:	fmov	d1, #1.000000000000000000e+00
   3a918:	fsub	d6, d6, d2
   3a91c:	fadd	d3, d5, d3
   3a920:	fadd	d4, d6, d4
   3a924:	fadd	d6, d7, d3
   3a928:	fabs	d16, d6
   3a92c:	fsub	d7, d7, d6
   3a930:	fsub	d5, d1, d6
   3a934:	fcmpe	d16, d1
   3a938:	fadd	d7, d7, d3
   3a93c:	b.mi	3be40 <tan@@GLIBC_2.17+0x1bb8>  // b.first
   3a940:	fadd	d3, d6, d5
   3a944:	movi	d6, #0x0
   3a948:	fsub	d3, d1, d3
   3a94c:	fadd	d3, d3, d6
   3a950:	fsub	d3, d3, d7
   3a954:	fadd	d6, d3, d5
   3a958:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a95c:	ldr	d7, [x0, #592]
   3a960:	fdiv	d1, d2, d6
   3a964:	fsub	d5, d5, d6
   3a968:	fadd	d3, d5, d3
   3a96c:	fmul	d5, d6, d1
   3a970:	fnmsub	d16, d1, d6, d5
   3a974:	fsub	d2, d2, d5
   3a978:	fsub	d2, d2, d16
   3a97c:	fadd	d2, d2, d4
   3a980:	fmsub	d2, d3, d1, d2
   3a984:	fdiv	d2, d2, d6
   3a988:	fadd	d3, d1, d2
   3a98c:	fsub	d1, d1, d3
   3a990:	fadd	d1, d1, d2
   3a994:	fmsub	d2, d7, d3, d1
   3a998:	fmadd	d1, d7, d3, d1
   3a99c:	fadd	d2, d2, d3
   3a9a0:	fadd	d1, d1, d3
   3a9a4:	fcmp	d1, d2
   3a9a8:	b.ne	3a67c <tan@@GLIBC_2.17+0x3f4>  // b.any
   3a9ac:	fmul	d0, d0, d2
   3a9b0:	cbz	w21, 3a68c <tan@@GLIBC_2.17+0x404>
   3a9b4:	nop
   3a9b8:	msr	fpcr, x20
   3a9bc:	b	3a68c <tan@@GLIBC_2.17+0x404>
   3a9c0:	mov	x0, #0x10000000000000      	// #4503599627370496
   3a9c4:	fmov	d0, x0
   3a9c8:	fcmpe	d1, d0
   3a9cc:	b.pl	3a9f0 <tan@@GLIBC_2.17+0x768>  // b.nfrst
   3a9d0:	fmul	d1, d1, d1
   3a9d4:	fmov	d0, d8
   3a9d8:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3a9dc:	and	w0, w0, #0x7fffffff
   3a9e0:	cmp	w0, w1
   3a9e4:	b.eq	3af28 <tan@@GLIBC_2.17+0xca0>  // b.none
   3a9e8:	fsub	d0, d8, d8
   3a9ec:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3a9f0:	fmov	d0, d8
   3a9f4:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3a9f8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3a9fc:	ldr	d0, [x0, #584]
   3aa00:	fcmpe	d0, d1
   3aa04:	b.lt	3afe0 <tan@@GLIBC_2.17+0xd58>  // b.tstop
   3aa08:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3aa0c:	adrp	x3, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3aa10:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aa14:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aa18:	ldr	d0, [x0, #2728]
   3aa1c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aa20:	ldr	d4, [x3, #160]
   3aa24:	ldr	d3, [x2, #384]
   3aa28:	fmadd	d0, d0, d8, d4
   3aa2c:	ldr	d1, [x1, #392]
   3aa30:	ldr	d5, [x0, #576]
   3aa34:	fsub	d4, d0, d4
   3aa38:	fmov	x0, d0
   3aa3c:	fmsub	d3, d3, d4, d8
   3aa40:	and	w0, w0, #0x1
   3aa44:	fmsub	d3, d1, d4, d3
   3aa48:	fmsub	d1, d5, d4, d3
   3aa4c:	fsub	d2, d3, d1
   3aa50:	fcmpe	d1, #0.0
   3aa54:	fmsub	d2, d5, d4, d2
   3aa58:	stp	d1, d2, [sp, #112]
   3aa5c:	b.mi	3b518 <tan@@GLIBC_2.17+0x1290>  // b.first
   3aa60:	fmov	d16, d2
   3aa64:	fmov	d5, d1
   3aa68:	fmov	d0, #1.000000000000000000e+00
   3aa6c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aa70:	ldr	d6, [x1, #568]
   3aa74:	fcmpe	d6, d5
   3aa78:	b.ge	3a67c <tan@@GLIBC_2.17+0x3f4>  // b.tcont
   3aa7c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aa80:	ldr	d6, [x1, #856]
   3aa84:	fcmpe	d6, d5
   3aa88:	b.lt	3bb0c <tan@@GLIBC_2.17+0x1884>  // b.tstop
   3aa8c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aa90:	fmul	d0, d1, d1
   3aa94:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aa98:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aa9c:	ldr	d6, [x2, #840]
   3aaa0:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aaa4:	ldr	d16, [x1, #848]
   3aaa8:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aaac:	ldr	d7, [x3, #832]
   3aab0:	fmul	d17, d1, d0
   3aab4:	fmadd	d16, d6, d0, d16
   3aab8:	ldr	d6, [x2, #824]
   3aabc:	ldr	d5, [x1, #816]
   3aac0:	fmadd	d7, d0, d16, d7
   3aac4:	fmadd	d6, d0, d7, d6
   3aac8:	fmadd	d0, d0, d6, d5
   3aacc:	fmadd	d2, d17, d0, d2
   3aad0:	cbz	w0, 3c214 <tan@@GLIBC_2.17+0x1f8c>
   3aad4:	fabs	d6, d1
   3aad8:	fabs	d0, d2
   3aadc:	fadd	d5, d1, d2
   3aae0:	fcmpe	d6, d0
   3aae4:	b.le	3c698 <tan@@GLIBC_2.17+0x2410>
   3aae8:	fsub	d1, d1, d5
   3aaec:	fadd	d2, d1, d2
   3aaf0:	fmov	d1, #1.000000000000000000e+00
   3aaf4:	movi	d16, #0x0
   3aaf8:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aafc:	fdiv	d0, d1, d5
   3ab00:	ldr	d6, [x1, #560]
   3ab04:	fmul	d7, d5, d0
   3ab08:	fnmsub	d17, d0, d5, d7
   3ab0c:	fsub	d1, d1, d7
   3ab10:	fsub	d1, d1, d17
   3ab14:	fadd	d1, d1, d16
   3ab18:	fmsub	d1, d2, d0, d1
   3ab1c:	fdiv	d1, d1, d5
   3ab20:	fadd	d2, d0, d1
   3ab24:	fsub	d0, d0, d2
   3ab28:	fadd	d1, d0, d1
   3ab2c:	fmsub	d0, d6, d2, d1
   3ab30:	fmadd	d1, d6, d2, d1
   3ab34:	fadd	d0, d0, d2
   3ab38:	fadd	d1, d1, d2
   3ab3c:	fcmp	d1, d0
   3ab40:	b.eq	3af20 <tan@@GLIBC_2.17+0xc98>  // b.none
   3ab44:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ab48:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ab4c:	ldr	d6, [x2, #400]
   3ab50:	ldr	d5, [x1, #408]
   3ab54:	fmsub	d1, d6, d4, d3
   3ab58:	fmsub	d2, d5, d4, d1
   3ab5c:	fsub	d0, d3, d1
   3ab60:	fmsub	d0, d6, d4, d0
   3ab64:	fsub	d1, d1, d2
   3ab68:	fabs	d3, d2
   3ab6c:	fmsub	d4, d5, d4, d1
   3ab70:	fadd	d0, d0, d4
   3ab74:	fabs	d1, d0
   3ab78:	fadd	d4, d2, d0
   3ab7c:	fcmpe	d3, d1
   3ab80:	b.le	3c2e4 <tan@@GLIBC_2.17+0x205c>
   3ab84:	fsub	d2, d2, d4
   3ab88:	fadd	d0, d2, d0
   3ab8c:	fmul	d5, d4, d4
   3ab90:	fmul	d2, d0, d4
   3ab94:	fnmsub	d1, d4, d4, d5
   3ab98:	fmov	d7, #2.000000000000000000e+00
   3ab9c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aba0:	adrp	x4, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aba4:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aba8:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3abac:	ldr	d22, [x2, #792]
   3abb0:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3abb4:	fmadd	d7, d2, d7, d1
   3abb8:	ldr	d20, [x4, #800]
   3abbc:	ldr	d19, [x1, #784]
   3abc0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3abc4:	ldr	d18, [x3, #776]
   3abc8:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3abcc:	ldr	d16, [x1, #760]
   3abd0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3abd4:	ldr	d17, [x2, #768]
   3abd8:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3abdc:	ldr	d1, [x1, #736]
   3abe0:	ldr	d2, [x3, #752]
   3abe4:	ldr	d6, [x2, #744]
   3abe8:	fadd	d3, d5, d7
   3abec:	stp	d1, d4, [sp, #104]
   3abf0:	fabs	d21, d6
   3abf4:	str	d0, [sp, #120]
   3abf8:	fmadd	d20, d22, d3, d20
   3abfc:	fsub	d1, d5, d3
   3ac00:	fadd	d1, d1, d7
   3ac04:	fmadd	d5, d3, d20, d19
   3ac08:	fmadd	d5, d3, d5, d18
   3ac0c:	fmadd	d5, d3, d5, d17
   3ac10:	fmadd	d5, d3, d5, d16
   3ac14:	fmadd	d2, d3, d5, d2
   3ac18:	fmul	d2, d3, d2
   3ac1c:	fabs	d7, d2
   3ac20:	fadd	d5, d6, d2
   3ac24:	fcmpe	d21, d7
   3ac28:	b.le	3c338 <tan@@GLIBC_2.17+0x20b0>
   3ac2c:	fsub	d6, d6, d5
   3ac30:	movi	d7, #0x0
   3ac34:	fadd	d2, d6, d2
   3ac38:	ldr	d6, [sp, #104]
   3ac3c:	fadd	d2, d2, d7
   3ac40:	fadd	d2, d2, d6
   3ac44:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ac48:	fadd	d16, d2, d5
   3ac4c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ac50:	ldr	d6, [x1, #720]
   3ac54:	ldr	d17, [x2, #728]
   3ac58:	fmul	d7, d1, d16
   3ac5c:	str	d6, [sp, #104]
   3ac60:	fsub	d6, d5, d16
   3ac64:	fmul	d5, d3, d16
   3ac68:	fabs	d18, d17
   3ac6c:	fnmsub	d16, d3, d16, d5
   3ac70:	fadd	d2, d6, d2
   3ac74:	fmadd	d2, d3, d2, d7
   3ac78:	fadd	d7, d2, d16
   3ac7c:	fadd	d2, d5, d7
   3ac80:	fabs	d16, d2
   3ac84:	fsub	d6, d5, d2
   3ac88:	fadd	d5, d17, d2
   3ac8c:	fcmpe	d18, d16
   3ac90:	fadd	d6, d6, d7
   3ac94:	b.le	3c320 <tan@@GLIBC_2.17+0x2098>
   3ac98:	fsub	d17, d17, d5
   3ac9c:	fadd	d2, d17, d2
   3aca0:	fadd	d2, d2, d6
   3aca4:	ldr	d6, [sp, #104]
   3aca8:	fadd	d2, d2, d6
   3acac:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3acb0:	fadd	d16, d2, d5
   3acb4:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3acb8:	ldr	d6, [x1, #704]
   3acbc:	ldr	d17, [x2, #712]
   3acc0:	fmul	d7, d1, d16
   3acc4:	str	d6, [sp, #104]
   3acc8:	fsub	d6, d5, d16
   3accc:	fmul	d5, d3, d16
   3acd0:	fabs	d18, d17
   3acd4:	fnmsub	d16, d3, d16, d5
   3acd8:	fadd	d2, d6, d2
   3acdc:	fmadd	d2, d3, d2, d7
   3ace0:	fadd	d7, d2, d16
   3ace4:	fadd	d2, d5, d7
   3ace8:	fabs	d16, d2
   3acec:	fsub	d6, d5, d2
   3acf0:	fadd	d5, d17, d2
   3acf4:	fcmpe	d18, d16
   3acf8:	fadd	d6, d6, d7
   3acfc:	b.le	3c308 <tan@@GLIBC_2.17+0x2080>
   3ad00:	fsub	d17, d17, d5
   3ad04:	fadd	d2, d17, d2
   3ad08:	fadd	d2, d2, d6
   3ad0c:	ldr	d6, [sp, #104]
   3ad10:	fadd	d2, d2, d6
   3ad14:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ad18:	fadd	d16, d2, d5
   3ad1c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ad20:	ldr	d6, [x1, #688]
   3ad24:	ldr	d17, [x2, #696]
   3ad28:	fmul	d7, d1, d16
   3ad2c:	str	d6, [sp, #104]
   3ad30:	fsub	d6, d5, d16
   3ad34:	fmul	d5, d3, d16
   3ad38:	fabs	d18, d17
   3ad3c:	fnmsub	d16, d3, d16, d5
   3ad40:	fadd	d2, d6, d2
   3ad44:	fmadd	d2, d3, d2, d7
   3ad48:	fadd	d7, d2, d16
   3ad4c:	fadd	d2, d5, d7
   3ad50:	fabs	d16, d2
   3ad54:	fsub	d6, d5, d2
   3ad58:	fadd	d5, d17, d2
   3ad5c:	fcmpe	d18, d16
   3ad60:	fadd	d6, d6, d7
   3ad64:	b.le	3c2f0 <tan@@GLIBC_2.17+0x2068>
   3ad68:	fsub	d17, d17, d5
   3ad6c:	fadd	d2, d17, d2
   3ad70:	fadd	d2, d2, d6
   3ad74:	ldr	d6, [sp, #104]
   3ad78:	fadd	d2, d2, d6
   3ad7c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ad80:	fadd	d16, d2, d5
   3ad84:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ad88:	ldr	d6, [x1, #672]
   3ad8c:	ldr	d17, [x2, #680]
   3ad90:	fmul	d7, d1, d16
   3ad94:	str	d6, [sp, #104]
   3ad98:	fsub	d6, d5, d16
   3ad9c:	fmul	d5, d3, d16
   3ada0:	fabs	d18, d17
   3ada4:	fnmsub	d16, d3, d16, d5
   3ada8:	fadd	d2, d6, d2
   3adac:	fmadd	d2, d3, d2, d7
   3adb0:	fadd	d7, d2, d16
   3adb4:	fadd	d2, d5, d7
   3adb8:	fabs	d16, d2
   3adbc:	fsub	d6, d5, d2
   3adc0:	fadd	d5, d17, d2
   3adc4:	fcmpe	d18, d16
   3adc8:	fadd	d6, d6, d7
   3adcc:	b.le	3c2cc <tan@@GLIBC_2.17+0x2044>
   3add0:	fsub	d17, d17, d5
   3add4:	fadd	d2, d17, d2
   3add8:	fadd	d2, d2, d6
   3addc:	ldr	d6, [sp, #104]
   3ade0:	fadd	d2, d2, d6
   3ade4:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ade8:	fadd	d16, d2, d5
   3adec:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3adf0:	ldr	d6, [x1, #664]
   3adf4:	ldr	d17, [x2, #816]
   3adf8:	fmul	d7, d1, d16
   3adfc:	str	d6, [sp, #104]
   3ae00:	fsub	d6, d5, d16
   3ae04:	fmul	d5, d3, d16
   3ae08:	fabs	d18, d17
   3ae0c:	fnmsub	d16, d3, d16, d5
   3ae10:	fadd	d2, d6, d2
   3ae14:	fmadd	d2, d3, d2, d7
   3ae18:	fadd	d7, d2, d16
   3ae1c:	fadd	d2, d5, d7
   3ae20:	fabs	d16, d2
   3ae24:	fsub	d6, d5, d2
   3ae28:	fadd	d5, d17, d2
   3ae2c:	fcmpe	d18, d16
   3ae30:	fadd	d6, d6, d7
   3ae34:	b.le	3c2b4 <tan@@GLIBC_2.17+0x202c>
   3ae38:	fsub	d17, d17, d5
   3ae3c:	fadd	d2, d17, d2
   3ae40:	fadd	d2, d2, d6
   3ae44:	ldr	d6, [sp, #104]
   3ae48:	fadd	d2, d2, d6
   3ae4c:	fadd	d7, d2, d5
   3ae50:	fabs	d16, d4
   3ae54:	fsub	d6, d5, d7
   3ae58:	fmul	d1, d1, d7
   3ae5c:	fmul	d5, d3, d7
   3ae60:	fnmsub	d7, d3, d7, d5
   3ae64:	fadd	d2, d6, d2
   3ae68:	fmadd	d1, d3, d2, d1
   3ae6c:	fadd	d1, d1, d7
   3ae70:	fadd	d6, d5, d1
   3ae74:	fsub	d5, d5, d6
   3ae78:	fmul	d2, d4, d6
   3ae7c:	fmul	d3, d0, d6
   3ae80:	fnmsub	d6, d4, d6, d2
   3ae84:	fadd	d1, d5, d1
   3ae88:	fmadd	d1, d4, d1, d3
   3ae8c:	fadd	d5, d1, d6
   3ae90:	fadd	d1, d2, d5
   3ae94:	fabs	d7, d1
   3ae98:	fsub	d3, d2, d1
   3ae9c:	fadd	d2, d4, d1
   3aea0:	fcmpe	d16, d7
   3aea4:	fadd	d3, d3, d5
   3aea8:	b.le	3c2a0 <tan@@GLIBC_2.17+0x2018>
   3aeac:	fsub	d4, d4, d2
   3aeb0:	fadd	d1, d4, d1
   3aeb4:	fadd	d3, d1, d3
   3aeb8:	fadd	d0, d3, d0
   3aebc:	fadd	d3, d0, d2
   3aec0:	fsub	d2, d2, d3
   3aec4:	fadd	d2, d2, d0
   3aec8:	cbz	w0, 3c27c <tan@@GLIBC_2.17+0x1ff4>
   3aecc:	fmov	d1, #1.000000000000000000e+00
   3aed0:	movi	d6, #0x0
   3aed4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3aed8:	fdiv	d0, d1, d3
   3aedc:	ldr	d4, [x0, #544]
   3aee0:	fmul	d5, d3, d0
   3aee4:	fnmsub	d7, d0, d3, d5
   3aee8:	fsub	d1, d1, d5
   3aeec:	fsub	d1, d1, d7
   3aef0:	fadd	d1, d1, d6
   3aef4:	fmsub	d1, d2, d0, d1
   3aef8:	fdiv	d1, d1, d3
   3aefc:	fadd	d2, d0, d1
   3af00:	fsub	d0, d0, d2
   3af04:	fadd	d1, d0, d1
   3af08:	fmsub	d0, d4, d2, d1
   3af0c:	fmadd	d1, d4, d2, d1
   3af10:	fadd	d0, d0, d2
   3af14:	fadd	d1, d1, d2
   3af18:	fcmp	d1, d0
   3af1c:	b.ne	3a67c <tan@@GLIBC_2.17+0x3f4>  // b.any
   3af20:	fneg	d0, d0
   3af24:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3af28:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3af2c:	ldr	x0, [x0, #3976]
   3af30:	mrs	x1, tpidr_el0
   3af34:	mov	w2, #0x21                  	// #33
   3af38:	fsub	d0, d8, d8
   3af3c:	str	w2, [x1, x0]
   3af40:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3af44:	eor	w0, w21, w20
   3af48:	msr	fpcr, x0
   3af4c:	b	3a2c4 <tan@@GLIBC_2.17+0x3c>
   3af50:	fsub	d2, d2, d0
   3af54:	fadd	d2, d2, d8
   3af58:	fadd	d2, d2, d16
   3af5c:	fadd	d2, d2, d1
   3af60:	b	3a650 <tan@@GLIBC_2.17+0x3c8>
   3af64:	fsub	d2, d2, d5
   3af68:	fadd	d3, d2, d3
   3af6c:	fadd	d3, d3, d16
   3af70:	fadd	d3, d3, d4
   3af74:	b	3a5dc <tan@@GLIBC_2.17+0x354>
   3af78:	fsub	d2, d2, d5
   3af7c:	fadd	d4, d2, d4
   3af80:	fadd	d4, d4, d16
   3af84:	fadd	d4, d4, d3
   3af88:	b	3a57c <tan@@GLIBC_2.17+0x2f4>
   3af8c:	fsub	d2, d2, d5
   3af90:	fadd	d3, d2, d3
   3af94:	fadd	d3, d3, d16
   3af98:	fadd	d3, d3, d4
   3af9c:	b	3a51c <tan@@GLIBC_2.17+0x294>
   3afa0:	fsub	d2, d2, d5
   3afa4:	fadd	d4, d2, d4
   3afa8:	fadd	d4, d4, d16
   3afac:	fadd	d4, d4, d3
   3afb0:	b	3a4bc <tan@@GLIBC_2.17+0x234>
   3afb4:	fsub	d3, d3, d5
   3afb8:	fadd	d3, d3, d6
   3afbc:	fadd	d3, d3, d17
   3afc0:	fadd	d3, d3, d4
   3afc4:	b	3a45c <tan@@GLIBC_2.17+0x1d4>
   3afc8:	fsub	d2, d2, d5
   3afcc:	movi	d4, #0x0
   3afd0:	fadd	d2, d2, d3
   3afd4:	fadd	d2, d2, d17
   3afd8:	fadd	d2, d2, d4
   3afdc:	b	3a3fc <tan@@GLIBC_2.17+0x174>
   3afe0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3afe4:	ldr	d0, [x0, #488]
   3afe8:	fcmpe	d0, d1
   3afec:	b.lt	3b528 <tan@@GLIBC_2.17+0x12a0>  // b.tstop
   3aff0:	adrp	x1, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3aff4:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   3aff8:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3affc:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b000:	ldr	d3, [x1, #2728]
   3b004:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b008:	ldr	d2, [x0, #160]
   3b00c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b010:	ldr	d0, [x3, #384]
   3b014:	fmadd	d3, d3, d8, d2
   3b018:	ldr	d1, [x2, #392]
   3b01c:	ldr	d6, [x1, #400]
   3b020:	ldr	d5, [x0, #408]
   3b024:	fsub	d2, d3, d2
   3b028:	fmov	x0, d3
   3b02c:	fmsub	d0, d0, d2, d8
   3b030:	and	w0, w0, #0x1
   3b034:	fmsub	d0, d1, d2, d0
   3b038:	fmsub	d3, d6, d2, d0
   3b03c:	fmsub	d4, d5, d2, d3
   3b040:	fsub	d1, d0, d3
   3b044:	fmsub	d1, d6, d2, d1
   3b048:	fsub	d3, d3, d4
   3b04c:	fabs	d6, d4
   3b050:	fmsub	d2, d5, d2, d3
   3b054:	fadd	d1, d1, d2
   3b058:	fabs	d0, d1
   3b05c:	fadd	d2, d4, d1
   3b060:	fcmpe	d6, d0
   3b064:	b.le	3be58 <tan@@GLIBC_2.17+0x1bd0>
   3b068:	fsub	d4, d4, d2
   3b06c:	fadd	d1, d4, d1
   3b070:	fcmpe	d2, #0.0
   3b074:	stp	d2, d1, [sp, #112]
   3b078:	b.mi	3be64 <tan@@GLIBC_2.17+0x1bdc>  // b.first
   3b07c:	fmov	d16, d1
   3b080:	fmov	d3, d2
   3b084:	fmov	d0, #1.000000000000000000e+00
   3b088:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b08c:	ldr	d4, [x1, #568]
   3b090:	fcmpe	d4, d3
   3b094:	b.ge	3a67c <tan@@GLIBC_2.17+0x3f4>  // b.tcont
   3b098:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b09c:	ldr	d4, [x1, #856]
   3b0a0:	fcmpe	d4, d3
   3b0a4:	b.lt	3be74 <tan@@GLIBC_2.17+0x1bec>  // b.tstop
   3b0a8:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b0ac:	fmul	d3, d2, d2
   3b0b0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b0b4:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b0b8:	ldr	d5, [x2, #840]
   3b0bc:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b0c0:	ldr	d7, [x1, #848]
   3b0c4:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b0c8:	ldr	d6, [x3, #832]
   3b0cc:	fmul	d4, d2, d3
   3b0d0:	fmadd	d7, d5, d3, d7
   3b0d4:	ldr	d5, [x2, #824]
   3b0d8:	ldr	d0, [x1, #816]
   3b0dc:	fmadd	d6, d3, d7, d6
   3b0e0:	fmadd	d5, d3, d6, d5
   3b0e4:	fmadd	d0, d3, d5, d0
   3b0e8:	fmadd	d4, d4, d0, d1
   3b0ec:	cbz	w0, 3c254 <tan@@GLIBC_2.17+0x1fcc>
   3b0f0:	fabs	d6, d2
   3b0f4:	fabs	d0, d4
   3b0f8:	fadd	d7, d2, d4
   3b0fc:	fcmpe	d6, d0
   3b100:	b.le	3c854 <tan@@GLIBC_2.17+0x25cc>
   3b104:	fsub	d0, d2, d7
   3b108:	fadd	d4, d0, d4
   3b10c:	fmov	d5, #1.000000000000000000e+00
   3b110:	movi	d18, #0x0
   3b114:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b118:	fdiv	d0, d5, d7
   3b11c:	ldr	d16, [x1, #560]
   3b120:	fmul	d17, d7, d0
   3b124:	fnmsub	d19, d0, d7, d17
   3b128:	fsub	d5, d5, d17
   3b12c:	fsub	d5, d5, d19
   3b130:	fadd	d5, d5, d18
   3b134:	fmsub	d4, d4, d0, d5
   3b138:	fdiv	d4, d4, d7
   3b13c:	fadd	d5, d0, d4
   3b140:	fsub	d0, d0, d5
   3b144:	fadd	d4, d0, d4
   3b148:	fmsub	d0, d16, d5, d4
   3b14c:	fmadd	d4, d16, d5, d4
   3b150:	fadd	d0, d0, d5
   3b154:	fadd	d4, d4, d5
   3b158:	fcmp	d4, d0
   3b15c:	b.eq	3af20 <tan@@GLIBC_2.17+0xc98>  // b.none
   3b160:	fnmsub	d0, d2, d2, d3
   3b164:	fmul	d4, d1, d2
   3b168:	fmov	d16, #2.000000000000000000e+00
   3b16c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b170:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b174:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b178:	ldr	d23, [x2, #792]
   3b17c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b180:	fmadd	d16, d4, d16, d0
   3b184:	ldr	d20, [x1, #784]
   3b188:	ldr	d21, [x3, #800]
   3b18c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b190:	ldr	d19, [x2, #776]
   3b194:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b198:	ldr	d18, [x1, #768]
   3b19c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b1a0:	ldr	d17, [x2, #760]
   3b1a4:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b1a8:	ldr	d5, [x1, #752]
   3b1ac:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b1b0:	ldr	d7, [x2, #744]
   3b1b4:	ldr	d0, [x1, #736]
   3b1b8:	fadd	d4, d3, d16
   3b1bc:	fabs	d22, d7
   3b1c0:	str	d0, [sp, #104]
   3b1c4:	fmadd	d21, d23, d4, d21
   3b1c8:	fsub	d0, d3, d4
   3b1cc:	fadd	d0, d0, d16
   3b1d0:	fmadd	d3, d4, d21, d20
   3b1d4:	fmadd	d3, d4, d3, d19
   3b1d8:	fmadd	d3, d4, d3, d18
   3b1dc:	fmadd	d3, d4, d3, d17
   3b1e0:	fmadd	d3, d4, d3, d5
   3b1e4:	fmul	d3, d4, d3
   3b1e8:	fabs	d16, d3
   3b1ec:	fadd	d5, d7, d3
   3b1f0:	fcmpe	d22, d16
   3b1f4:	b.le	3c6d8 <tan@@GLIBC_2.17+0x2450>
   3b1f8:	fsub	d7, d7, d5
   3b1fc:	movi	d16, #0x0
   3b200:	fadd	d3, d7, d3
   3b204:	ldr	d7, [sp, #104]
   3b208:	fadd	d3, d3, d16
   3b20c:	fadd	d3, d3, d7
   3b210:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b214:	fadd	d17, d3, d5
   3b218:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b21c:	ldr	d7, [x1, #720]
   3b220:	ldr	d18, [x2, #728]
   3b224:	fmul	d16, d0, d17
   3b228:	str	d7, [sp, #104]
   3b22c:	fsub	d7, d5, d17
   3b230:	fmul	d5, d4, d17
   3b234:	fabs	d19, d18
   3b238:	fnmsub	d17, d4, d17, d5
   3b23c:	fadd	d3, d7, d3
   3b240:	fmadd	d3, d4, d3, d16
   3b244:	fadd	d16, d3, d17
   3b248:	fadd	d3, d5, d16
   3b24c:	fabs	d17, d3
   3b250:	fsub	d7, d5, d3
   3b254:	fadd	d5, d18, d3
   3b258:	fcmpe	d19, d17
   3b25c:	fadd	d7, d7, d16
   3b260:	b.le	3c6c0 <tan@@GLIBC_2.17+0x2438>
   3b264:	fsub	d18, d18, d5
   3b268:	fadd	d3, d18, d3
   3b26c:	fadd	d3, d3, d7
   3b270:	ldr	d7, [sp, #104]
   3b274:	fadd	d3, d3, d7
   3b278:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b27c:	fadd	d17, d3, d5
   3b280:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b284:	ldr	d7, [x1, #704]
   3b288:	ldr	d18, [x2, #712]
   3b28c:	fmul	d16, d0, d17
   3b290:	str	d7, [sp, #104]
   3b294:	fsub	d7, d5, d17
   3b298:	fmul	d5, d4, d17
   3b29c:	fabs	d19, d18
   3b2a0:	fnmsub	d17, d4, d17, d5
   3b2a4:	fadd	d3, d7, d3
   3b2a8:	fmadd	d3, d4, d3, d16
   3b2ac:	fadd	d16, d3, d17
   3b2b0:	fadd	d3, d5, d16
   3b2b4:	fabs	d17, d3
   3b2b8:	fsub	d7, d5, d3
   3b2bc:	fadd	d5, d18, d3
   3b2c0:	fcmpe	d19, d17
   3b2c4:	fadd	d7, d7, d16
   3b2c8:	b.le	3c798 <tan@@GLIBC_2.17+0x2510>
   3b2cc:	fsub	d18, d18, d5
   3b2d0:	fadd	d3, d18, d3
   3b2d4:	fadd	d3, d3, d7
   3b2d8:	ldr	d7, [sp, #104]
   3b2dc:	fadd	d3, d3, d7
   3b2e0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b2e4:	fadd	d17, d3, d5
   3b2e8:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b2ec:	ldr	d7, [x1, #688]
   3b2f0:	ldr	d18, [x2, #696]
   3b2f4:	fmul	d16, d0, d17
   3b2f8:	str	d7, [sp, #104]
   3b2fc:	fsub	d7, d5, d17
   3b300:	fmul	d5, d4, d17
   3b304:	fabs	d19, d18
   3b308:	fnmsub	d17, d4, d17, d5
   3b30c:	fadd	d3, d7, d3
   3b310:	fmadd	d3, d4, d3, d16
   3b314:	fadd	d16, d3, d17
   3b318:	fadd	d3, d5, d16
   3b31c:	fabs	d17, d3
   3b320:	fsub	d7, d5, d3
   3b324:	fadd	d5, d18, d3
   3b328:	fcmpe	d19, d17
   3b32c:	fadd	d7, d7, d16
   3b330:	b.le	3c780 <tan@@GLIBC_2.17+0x24f8>
   3b334:	fsub	d18, d18, d5
   3b338:	fadd	d3, d18, d3
   3b33c:	fadd	d3, d3, d7
   3b340:	ldr	d7, [sp, #104]
   3b344:	fadd	d3, d3, d7
   3b348:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b34c:	fadd	d17, d3, d5
   3b350:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b354:	ldr	d7, [x1, #672]
   3b358:	ldr	d18, [x2, #680]
   3b35c:	fmul	d16, d0, d17
   3b360:	str	d7, [sp, #104]
   3b364:	fsub	d7, d5, d17
   3b368:	fmul	d5, d4, d17
   3b36c:	fabs	d19, d18
   3b370:	fnmsub	d17, d4, d17, d5
   3b374:	fadd	d3, d7, d3
   3b378:	fmadd	d3, d4, d3, d16
   3b37c:	fadd	d16, d3, d17
   3b380:	fadd	d3, d5, d16
   3b384:	fabs	d17, d3
   3b388:	fsub	d7, d5, d3
   3b38c:	fadd	d5, d18, d3
   3b390:	fcmpe	d19, d17
   3b394:	fadd	d7, d7, d16
   3b398:	b.le	3c768 <tan@@GLIBC_2.17+0x24e0>
   3b39c:	fsub	d18, d18, d5
   3b3a0:	fadd	d3, d18, d3
   3b3a4:	fadd	d3, d3, d7
   3b3a8:	ldr	d7, [sp, #104]
   3b3ac:	fadd	d3, d3, d7
   3b3b0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b3b4:	fadd	d17, d3, d5
   3b3b8:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b3bc:	ldr	d7, [x1, #664]
   3b3c0:	ldr	d18, [x2, #816]
   3b3c4:	fmul	d16, d0, d17
   3b3c8:	str	d7, [sp, #104]
   3b3cc:	fsub	d7, d5, d17
   3b3d0:	fmul	d5, d4, d17
   3b3d4:	fabs	d19, d18
   3b3d8:	fnmsub	d17, d4, d17, d5
   3b3dc:	fadd	d3, d7, d3
   3b3e0:	fmadd	d3, d4, d3, d16
   3b3e4:	fadd	d16, d3, d17
   3b3e8:	fadd	d3, d5, d16
   3b3ec:	fabs	d17, d3
   3b3f0:	fsub	d7, d5, d3
   3b3f4:	fadd	d5, d18, d3
   3b3f8:	fcmpe	d19, d17
   3b3fc:	fadd	d7, d7, d16
   3b400:	b.le	3c750 <tan@@GLIBC_2.17+0x24c8>
   3b404:	fsub	d18, d18, d5
   3b408:	fadd	d3, d18, d3
   3b40c:	fadd	d3, d3, d7
   3b410:	ldr	d7, [sp, #104]
   3b414:	fadd	d3, d3, d7
   3b418:	fadd	d16, d3, d5
   3b41c:	fsub	d7, d5, d16
   3b420:	fmul	d0, d0, d16
   3b424:	fmul	d5, d4, d16
   3b428:	fnmsub	d16, d4, d16, d5
   3b42c:	fadd	d3, d7, d3
   3b430:	fmadd	d0, d4, d3, d0
   3b434:	fadd	d0, d0, d16
   3b438:	fadd	d7, d5, d0
   3b43c:	fsub	d5, d5, d7
   3b440:	fmul	d3, d2, d7
   3b444:	fmul	d4, d1, d7
   3b448:	fnmsub	d7, d2, d7, d3
   3b44c:	fadd	d0, d5, d0
   3b450:	fmadd	d0, d2, d0, d4
   3b454:	fadd	d5, d0, d7
   3b458:	fadd	d0, d3, d5
   3b45c:	fabs	d7, d0
   3b460:	fsub	d4, d3, d0
   3b464:	fadd	d3, d2, d0
   3b468:	fcmpe	d7, d6
   3b46c:	fadd	d4, d4, d5
   3b470:	b.pl	3c7d4 <tan@@GLIBC_2.17+0x254c>  // b.nfrst
   3b474:	fsub	d2, d2, d3
   3b478:	fadd	d0, d2, d0
   3b47c:	fadd	d4, d0, d4
   3b480:	fadd	d1, d4, d1
   3b484:	fadd	d4, d1, d3
   3b488:	fsub	d3, d3, d4
   3b48c:	fadd	d1, d3, d1
   3b490:	cbz	w0, 3c7b0 <tan@@GLIBC_2.17+0x2528>
   3b494:	fmov	d2, #1.000000000000000000e+00
   3b498:	movi	d6, #0x0
   3b49c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b4a0:	fdiv	d0, d2, d4
   3b4a4:	ldr	d3, [x0, #480]
   3b4a8:	fmul	d5, d4, d0
   3b4ac:	fnmsub	d7, d0, d4, d5
   3b4b0:	fsub	d2, d2, d5
   3b4b4:	fsub	d2, d2, d7
   3b4b8:	fadd	d2, d2, d6
   3b4bc:	fmsub	d1, d1, d0, d2
   3b4c0:	fdiv	d1, d1, d4
   3b4c4:	fadd	d2, d0, d1
   3b4c8:	fsub	d0, d0, d2
   3b4cc:	fadd	d1, d0, d1
   3b4d0:	fmsub	d0, d3, d2, d1
   3b4d4:	fmadd	d1, d3, d2, d1
   3b4d8:	fadd	d0, d0, d2
   3b4dc:	fadd	d1, d1, d2
   3b4e0:	fcmp	d1, d0
   3b4e4:	b.ne	3a67c <tan@@GLIBC_2.17+0x3f4>  // b.any
   3b4e8:	fneg	d0, d0
   3b4ec:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3b4f0:	fneg	d0, d0
   3b4f4:	nop
   3b4f8:	fmul	d0, d0, d6
   3b4fc:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3b500:	fsub	d2, d2, d7
   3b504:	movi	d18, #0x0
   3b508:	fadd	d2, d2, d16
   3b50c:	fadd	d2, d2, d17
   3b510:	fadd	d2, d2, d18
   3b514:	b	3a7fc <tan@@GLIBC_2.17+0x574>
   3b518:	fneg	d5, d1
   3b51c:	fneg	d16, d2
   3b520:	fmov	d0, #-1.000000000000000000e+00
   3b524:	b	3aa6c <tan@@GLIBC_2.17+0x7e4>
   3b528:	fmov	d0, d8
   3b52c:	add	x22, sp, #0x78
   3b530:	stp	x23, x24, [sp, #48]
   3b534:	add	x23, sp, #0x70
   3b538:	mov	x1, x22
   3b53c:	mov	x0, x23
   3b540:	bl	4db10 <__exp2f_finite@GLIBC_2.17+0x10a8>
   3b544:	and	w1, w0, #0x1
   3b548:	ldp	d1, d0, [sp, #112]
   3b54c:	fabs	d4, d1
   3b550:	fabs	d3, d0
   3b554:	fadd	d2, d1, d0
   3b558:	fcmpe	d4, d3
   3b55c:	b.le	3c238 <tan@@GLIBC_2.17+0x1fb0>
   3b560:	fsub	d1, d1, d2
   3b564:	fadd	d1, d1, d0
   3b568:	fcmpe	d2, #0.0
   3b56c:	stp	d2, d1, [sp, #112]
   3b570:	b.mi	3c244 <tan@@GLIBC_2.17+0x1fbc>  // b.first
   3b574:	fmov	d17, d1
   3b578:	fmov	d3, d2
   3b57c:	fmov	d0, #1.000000000000000000e+00
   3b580:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b584:	ldr	d4, [x0, #568]
   3b588:	fcmpe	d4, d3
   3b58c:	b.ge	3c6a4 <tan@@GLIBC_2.17+0x241c>  // b.tcont
   3b590:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b594:	ldr	d4, [x0, #856]
   3b598:	fcmpe	d4, d3
   3b59c:	b.lt	3c354 <tan@@GLIBC_2.17+0x20cc>  // b.tstop
   3b5a0:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b5a4:	fmul	d0, d2, d2
   3b5a8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b5ac:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b5b0:	ldr	d3, [x2, #840]
   3b5b4:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b5b8:	ldr	d6, [x0, #848]
   3b5bc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b5c0:	ldr	d5, [x3, #832]
   3b5c4:	fmul	d7, d2, d0
   3b5c8:	fmadd	d6, d3, d0, d6
   3b5cc:	ldr	d4, [x2, #824]
   3b5d0:	ldr	d3, [x0, #816]
   3b5d4:	fmadd	d5, d0, d6, d5
   3b5d8:	fmadd	d4, d0, d5, d4
   3b5dc:	fmadd	d0, d0, d4, d3
   3b5e0:	fmadd	d1, d7, d0, d1
   3b5e4:	cbz	w1, 3c8cc <tan@@GLIBC_2.17+0x2644>
   3b5e8:	fabs	d4, d2
   3b5ec:	fabs	d0, d1
   3b5f0:	fadd	d3, d2, d1
   3b5f4:	fcmpe	d4, d0
   3b5f8:	b.le	3cab0 <tan@@GLIBC_2.17+0x2828>
   3b5fc:	fsub	d2, d2, d3
   3b600:	fadd	d1, d2, d1
   3b604:	fmov	d2, #1.000000000000000000e+00
   3b608:	movi	d6, #0x0
   3b60c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b610:	fdiv	d0, d2, d3
   3b614:	ldr	d4, [x0, #448]
   3b618:	fmul	d5, d3, d0
   3b61c:	fnmsub	d7, d0, d3, d5
   3b620:	fsub	d2, d2, d5
   3b624:	fsub	d2, d2, d7
   3b628:	fadd	d2, d2, d6
   3b62c:	fmsub	d1, d1, d0, d2
   3b630:	fdiv	d1, d1, d3
   3b634:	fadd	d2, d0, d1
   3b638:	fsub	d0, d0, d2
   3b63c:	fadd	d1, d0, d1
   3b640:	fmsub	d0, d4, d2, d1
   3b644:	fmadd	d1, d4, d2, d1
   3b648:	fadd	d0, d0, d2
   3b64c:	fadd	d1, d1, d2
   3b650:	fcmp	d1, d0
   3b654:	b.eq	3cb7c <tan@@GLIBC_2.17+0x28f4>  // b.none
   3b658:	fmov	d0, d8
   3b65c:	stp	x25, x26, [sp, #64]
   3b660:	add	x25, sp, #0x80
   3b664:	mov	w1, #0xa                   	// #10
   3b668:	mov	x0, x25
   3b66c:	add	x24, sp, #0x1c8
   3b670:	bl	514d8 <__exp2f_finite@GLIBC_2.17+0x4a70>
   3b674:	and	w26, w0, #0x1
   3b678:	mov	x1, x23
   3b67c:	mov	w2, #0xa                   	// #10
   3b680:	mov	x0, x25
   3b684:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   3b688:	ldr	d0, [sp, #112]
   3b68c:	mov	x0, x24
   3b690:	mov	w1, #0xa                   	// #10
   3b694:	add	x23, sp, #0x310
   3b698:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   3b69c:	mov	w3, #0xa                   	// #10
   3b6a0:	mov	x1, x24
   3b6a4:	mov	x0, x25
   3b6a8:	mov	x2, x23
   3b6ac:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   3b6b0:	mov	x0, x23
   3b6b4:	mov	x1, x22
   3b6b8:	mov	w2, #0xa                   	// #10
   3b6bc:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   3b6c0:	ldp	d3, d4, [sp, #112]
   3b6c4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b6c8:	fmov	d1, #2.000000000000000000e+00
   3b6cc:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b6d0:	ldr	d19, [x0, #800]
   3b6d4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b6d8:	fmul	d0, d3, d3
   3b6dc:	fmul	d2, d3, d4
   3b6e0:	fnmsub	d5, d3, d3, d0
   3b6e4:	ldr	d17, [x0, #776]
   3b6e8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b6ec:	ldr	d21, [x2, #792]
   3b6f0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b6f4:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b6f8:	ldr	d7, [x0, #760]
   3b6fc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b700:	fmadd	d5, d2, d1, d5
   3b704:	ldr	d18, [x1, #784]
   3b708:	ldr	d1, [x0, #736]
   3b70c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b710:	ldr	d2, [x2, #752]
   3b714:	ldr	d16, [x1, #768]
   3b718:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b71c:	str	d1, [sp, #104]
   3b720:	ldr	d6, [x1, #744]
   3b724:	fadd	d1, d0, d5
   3b728:	fabs	d20, d6
   3b72c:	fmadd	d19, d21, d1, d19
   3b730:	fsub	d0, d0, d1
   3b734:	fadd	d0, d0, d5
   3b738:	fmadd	d5, d1, d19, d18
   3b73c:	fmadd	d5, d1, d5, d17
   3b740:	fmadd	d5, d1, d5, d16
   3b744:	fmadd	d5, d1, d5, d7
   3b748:	fmadd	d2, d1, d5, d2
   3b74c:	fmul	d2, d1, d2
   3b750:	fabs	d7, d2
   3b754:	fadd	d5, d6, d2
   3b758:	fcmpe	d20, d7
   3b75c:	b.le	3c9c8 <tan@@GLIBC_2.17+0x2740>
   3b760:	fsub	d6, d6, d5
   3b764:	movi	d7, #0x0
   3b768:	fadd	d2, d6, d2
   3b76c:	ldr	d6, [sp, #104]
   3b770:	fadd	d2, d2, d7
   3b774:	fadd	d2, d2, d6
   3b778:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b77c:	fadd	d16, d2, d5
   3b780:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b784:	ldr	d6, [x0, #720]
   3b788:	ldr	d17, [x1, #728]
   3b78c:	fmul	d7, d0, d16
   3b790:	str	d6, [sp, #104]
   3b794:	fsub	d6, d5, d16
   3b798:	fmul	d5, d1, d16
   3b79c:	fabs	d18, d17
   3b7a0:	fnmsub	d16, d1, d16, d5
   3b7a4:	fadd	d2, d6, d2
   3b7a8:	fmadd	d2, d1, d2, d7
   3b7ac:	fadd	d7, d2, d16
   3b7b0:	fadd	d2, d5, d7
   3b7b4:	fabs	d16, d2
   3b7b8:	fsub	d6, d5, d2
   3b7bc:	fadd	d5, d17, d2
   3b7c0:	fcmpe	d18, d16
   3b7c4:	fadd	d6, d6, d7
   3b7c8:	b.le	3ca98 <tan@@GLIBC_2.17+0x2810>
   3b7cc:	fsub	d17, d17, d5
   3b7d0:	fadd	d2, d17, d2
   3b7d4:	fadd	d2, d2, d6
   3b7d8:	ldr	d6, [sp, #104]
   3b7dc:	fadd	d2, d2, d6
   3b7e0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b7e4:	fadd	d16, d2, d5
   3b7e8:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b7ec:	ldr	d6, [x0, #704]
   3b7f0:	ldr	d17, [x1, #712]
   3b7f4:	fmul	d7, d0, d16
   3b7f8:	str	d6, [sp, #104]
   3b7fc:	fsub	d6, d5, d16
   3b800:	fmul	d5, d1, d16
   3b804:	fabs	d18, d17
   3b808:	fnmsub	d16, d1, d16, d5
   3b80c:	fadd	d2, d6, d2
   3b810:	fmadd	d2, d1, d2, d7
   3b814:	fadd	d7, d2, d16
   3b818:	fadd	d2, d5, d7
   3b81c:	fabs	d16, d2
   3b820:	fsub	d6, d5, d2
   3b824:	fadd	d5, d17, d2
   3b828:	fcmpe	d18, d16
   3b82c:	fadd	d6, d6, d7
   3b830:	b.le	3ca80 <tan@@GLIBC_2.17+0x27f8>
   3b834:	fsub	d17, d17, d5
   3b838:	fadd	d2, d17, d2
   3b83c:	fadd	d2, d2, d6
   3b840:	ldr	d6, [sp, #104]
   3b844:	fadd	d2, d2, d6
   3b848:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b84c:	fadd	d16, d2, d5
   3b850:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b854:	ldr	d6, [x0, #688]
   3b858:	ldr	d17, [x1, #696]
   3b85c:	fmul	d7, d0, d16
   3b860:	str	d6, [sp, #104]
   3b864:	fsub	d6, d5, d16
   3b868:	fmul	d5, d1, d16
   3b86c:	fabs	d18, d17
   3b870:	fnmsub	d16, d1, d16, d5
   3b874:	fadd	d2, d6, d2
   3b878:	fmadd	d2, d1, d2, d7
   3b87c:	fadd	d7, d2, d16
   3b880:	fadd	d2, d5, d7
   3b884:	fabs	d16, d2
   3b888:	fsub	d6, d5, d2
   3b88c:	fadd	d5, d17, d2
   3b890:	fcmpe	d18, d16
   3b894:	fadd	d6, d6, d7
   3b898:	b.le	3ca68 <tan@@GLIBC_2.17+0x27e0>
   3b89c:	fsub	d17, d17, d5
   3b8a0:	fadd	d2, d17, d2
   3b8a4:	fadd	d2, d2, d6
   3b8a8:	ldr	d6, [sp, #104]
   3b8ac:	fadd	d2, d2, d6
   3b8b0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b8b4:	fadd	d16, d2, d5
   3b8b8:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b8bc:	ldr	d6, [x0, #672]
   3b8c0:	ldr	d17, [x1, #680]
   3b8c4:	fmul	d7, d0, d16
   3b8c8:	str	d6, [sp, #104]
   3b8cc:	fsub	d6, d5, d16
   3b8d0:	fmul	d5, d1, d16
   3b8d4:	fabs	d18, d17
   3b8d8:	fnmsub	d16, d1, d16, d5
   3b8dc:	fadd	d2, d6, d2
   3b8e0:	fmadd	d2, d1, d2, d7
   3b8e4:	fadd	d7, d2, d16
   3b8e8:	fadd	d2, d5, d7
   3b8ec:	fabs	d16, d2
   3b8f0:	fsub	d6, d5, d2
   3b8f4:	fadd	d5, d17, d2
   3b8f8:	fcmpe	d18, d16
   3b8fc:	fadd	d6, d6, d7
   3b900:	b.le	3ca50 <tan@@GLIBC_2.17+0x27c8>
   3b904:	fsub	d17, d17, d5
   3b908:	fadd	d2, d17, d2
   3b90c:	fadd	d2, d2, d6
   3b910:	ldr	d6, [sp, #104]
   3b914:	fadd	d2, d2, d6
   3b918:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b91c:	fadd	d16, d2, d5
   3b920:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3b924:	ldr	d6, [x0, #664]
   3b928:	ldr	d17, [x1, #816]
   3b92c:	fmul	d7, d0, d16
   3b930:	str	d6, [sp, #104]
   3b934:	fsub	d6, d5, d16
   3b938:	fmul	d5, d1, d16
   3b93c:	fabs	d18, d17
   3b940:	fnmsub	d16, d1, d16, d5
   3b944:	fadd	d2, d6, d2
   3b948:	fmadd	d2, d1, d2, d7
   3b94c:	fadd	d7, d2, d16
   3b950:	fadd	d2, d5, d7
   3b954:	fabs	d16, d2
   3b958:	fsub	d6, d5, d2
   3b95c:	fadd	d5, d17, d2
   3b960:	fcmpe	d18, d16
   3b964:	fadd	d6, d6, d7
   3b968:	b.le	3ca38 <tan@@GLIBC_2.17+0x27b0>
   3b96c:	fsub	d17, d17, d5
   3b970:	fadd	d2, d17, d2
   3b974:	fadd	d2, d2, d6
   3b978:	ldr	d6, [sp, #104]
   3b97c:	fadd	d2, d2, d6
   3b980:	fadd	d7, d2, d5
   3b984:	fabs	d16, d3
   3b988:	fsub	d6, d5, d7
   3b98c:	fmul	d0, d0, d7
   3b990:	fmul	d5, d1, d7
   3b994:	fnmsub	d7, d1, d7, d5
   3b998:	fadd	d2, d6, d2
   3b99c:	fmadd	d0, d1, d2, d0
   3b9a0:	fadd	d0, d0, d7
   3b9a4:	fadd	d6, d5, d0
   3b9a8:	fsub	d5, d5, d6
   3b9ac:	fmul	d1, d3, d6
   3b9b0:	fmul	d2, d4, d6
   3b9b4:	fnmsub	d6, d3, d6, d1
   3b9b8:	fadd	d0, d5, d0
   3b9bc:	fmadd	d0, d3, d0, d2
   3b9c0:	fadd	d5, d0, d6
   3b9c4:	fadd	d0, d1, d5
   3b9c8:	fabs	d7, d0
   3b9cc:	fsub	d2, d1, d0
   3b9d0:	fadd	d1, d3, d0
   3b9d4:	fcmpe	d16, d7
   3b9d8:	fadd	d2, d2, d5
   3b9dc:	b.le	3ca24 <tan@@GLIBC_2.17+0x279c>
   3b9e0:	fsub	d3, d3, d1
   3b9e4:	fadd	d0, d3, d0
   3b9e8:	fadd	d0, d0, d2
   3b9ec:	fadd	d0, d0, d4
   3b9f0:	fadd	d3, d0, d1
   3b9f4:	fsub	d1, d1, d3
   3b9f8:	fadd	d1, d1, d0
   3b9fc:	cbz	w26, 3c9f8 <tan@@GLIBC_2.17+0x2770>
   3ba00:	fmov	d2, #1.000000000000000000e+00
   3ba04:	movi	d6, #0x0
   3ba08:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ba0c:	fdiv	d0, d2, d3
   3ba10:	ldr	d4, [x0, #432]
   3ba14:	fmul	d5, d3, d0
   3ba18:	fnmsub	d7, d0, d3, d5
   3ba1c:	fsub	d2, d2, d5
   3ba20:	fsub	d2, d2, d7
   3ba24:	fadd	d2, d2, d6
   3ba28:	fmsub	d1, d1, d0, d2
   3ba2c:	fdiv	d1, d1, d3
   3ba30:	fadd	d2, d0, d1
   3ba34:	fsub	d0, d0, d2
   3ba38:	fadd	d1, d0, d1
   3ba3c:	fmsub	d0, d4, d2, d1
   3ba40:	fmadd	d1, d4, d2, d1
   3ba44:	fadd	d0, d0, d2
   3ba48:	fadd	d1, d1, d2
   3ba4c:	fcmp	d1, d0
   3ba50:	b.ne	3c9e4 <tan@@GLIBC_2.17+0x275c>  // b.any
   3ba54:	fneg	d0, d0
   3ba58:	ldp	x23, x24, [sp, #48]
   3ba5c:	ldp	x25, x26, [sp, #64]
   3ba60:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3ba64:	fsub	d5, d5, d6
   3ba68:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ba6c:	ldr	d6, [x3, #512]
   3ba70:	fdiv	d1, d1, d5
   3ba74:	fmadd	d5, d6, d7, d1
   3ba78:	fmsub	d17, d6, d7, d1
   3ba7c:	fadd	d5, d5, d7
   3ba80:	fadd	d6, d17, d7
   3ba84:	fcmp	d5, d6
   3ba88:	b.eq	3b4f8 <tan@@GLIBC_2.17+0x1270>  // b.none
   3ba8c:	fcmpe	d1, #0.0
   3ba90:	fneg	d5, d1
   3ba94:	adrp	x4, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ba98:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3ba9c:	ldr	d17, [x4, #504]
   3baa0:	fcsel	d5, d5, d1, mi  // mi = first
   3baa4:	ldr	d6, [x3, #464]
   3baa8:	fmul	d5, d5, d17
   3baac:	fmadd	d5, d6, d7, d5
   3bab0:	fsub	d6, d1, d5
   3bab4:	fadd	d1, d1, d5
   3bab8:	fadd	d5, d6, d7
   3babc:	fadd	d1, d1, d7
   3bac0:	fcmp	d1, d5
   3bac4:	b.ne	3bf40 <tan@@GLIBC_2.17+0x1cb8>  // b.any
   3bac8:	fmul	d0, d0, d5
   3bacc:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3bad0:	fsub	d2, d2, d7
   3bad4:	fadd	d2, d2, d17
   3bad8:	fadd	d2, d2, d20
   3badc:	fadd	d2, d2, d16
   3bae0:	b	3a85c <tan@@GLIBC_2.17+0x5d4>
   3bae4:	fsub	d4, d2, d6
   3bae8:	fadd	d4, d4, d3
   3baec:	fadd	d4, d4, d5
   3baf0:	fadd	d4, d4, d1
   3baf4:	b	3a900 <tan@@GLIBC_2.17+0x678>
   3baf8:	fsub	d2, d2, d4
   3bafc:	fadd	d1, d2, d1
   3bb00:	fadd	d1, d1, d18
   3bb04:	fadd	d1, d1, d6
   3bb08:	b	3a8d0 <tan@@GLIBC_2.17+0x648>
   3bb0c:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bb10:	mov	x1, #0x4070000000000000    	// #4643211215818981376
   3bb14:	fmov	d2, x1
   3bb18:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bb1c:	ldr	d1, [x3, #640]
   3bb20:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bb24:	fmadd	d1, d5, d2, d1
   3bb28:	ldr	d6, [x1, #632]
   3bb2c:	add	x5, x2, #0x368
   3bb30:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bb34:	ldr	d17, [x3, #624]
   3bb38:	fcvtzs	w1, d1
   3bb3c:	sbfiz	x4, x1, #5, #32
   3bb40:	sxtw	x1, w1
   3bb44:	add	x3, x5, x4
   3bb48:	ldr	d1, [x5, x4]
   3bb4c:	ldp	d7, d4, [x3, #8]
   3bb50:	fsub	d5, d5, d1
   3bb54:	fadd	d1, d7, d4
   3bb58:	fadd	d2, d16, d5
   3bb5c:	fmul	d3, d2, d2
   3bb60:	fmadd	d17, d17, d3, d6
   3bb64:	fmul	d6, d2, d3
   3bb68:	fmadd	d6, d6, d17, d2
   3bb6c:	fmul	d1, d1, d6
   3bb70:	cbz	w0, 3c1a8 <tan@@GLIBC_2.17+0x1f20>
   3bb74:	fadd	d6, d6, d7
   3bb78:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bb7c:	ldr	d17, [x3, #528]
   3bb80:	fdiv	d1, d1, d6
   3bb84:	fmadd	d6, d17, d4, d1
   3bb88:	fmsub	d18, d17, d4, d1
   3bb8c:	fsub	d6, d4, d6
   3bb90:	fsub	d17, d4, d18
   3bb94:	fcmp	d6, d17
   3bb98:	b.eq	3c68c <tan@@GLIBC_2.17+0x2404>  // b.none
   3bb9c:	fcmpe	d1, #0.0
   3bba0:	fneg	d6, d1
   3bba4:	adrp	x4, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bba8:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bbac:	ldr	d18, [x4, #520]
   3bbb0:	fcsel	d6, d6, d1, mi  // mi = first
   3bbb4:	ldr	d17, [x3, #608]
   3bbb8:	fmul	d6, d6, d18
   3bbbc:	fmadd	d6, d17, d4, d6
   3bbc0:	fsub	d17, d1, d6
   3bbc4:	fadd	d1, d1, d6
   3bbc8:	fsub	d6, d4, d17
   3bbcc:	fsub	d1, d4, d1
   3bbd0:	fcmp	d1, d6
   3bbd4:	b.eq	3b4f0 <tan@@GLIBC_2.17+0x1268>  // b.none
   3bbd8:	fabs	d4, d5
   3bbdc:	fabs	d1, d16
   3bbe0:	add	x2, x2, #0x368
   3bbe4:	add	x1, x2, x1, lsl #5
   3bbe8:	fcmpe	d4, d1
   3bbec:	ldr	d6, [x1, #24]
   3bbf0:	b.le	3c6b4 <tan@@GLIBC_2.17+0x242c>
   3bbf4:	fsub	d1, d5, d2
   3bbf8:	fadd	d16, d1, d16
   3bbfc:	fnmsub	d5, d2, d2, d3
   3bc00:	fmul	d4, d16, d2
   3bc04:	fmov	d1, #2.000000000000000000e+00
   3bc08:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bc0c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bc10:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bc14:	fmadd	d5, d4, d1, d5
   3bc18:	ldr	d4, [x1, #696]
   3bc1c:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bc20:	ldr	d20, [x2, #728]
   3bc24:	ldr	d18, [x3, #712]
   3bc28:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bc2c:	ldr	d1, [x1, #672]
   3bc30:	ldr	d17, [x2, #680]
   3bc34:	str	d1, [sp, #104]
   3bc38:	fabs	d19, d17
   3bc3c:	fadd	d1, d3, d5
   3bc40:	fmadd	d18, d20, d1, d18
   3bc44:	fsub	d3, d3, d1
   3bc48:	fadd	d5, d3, d5
   3bc4c:	fmadd	d3, d18, d1, d4
   3bc50:	fmul	d3, d3, d1
   3bc54:	fabs	d18, d3
   3bc58:	fadd	d4, d17, d3
   3bc5c:	fcmpe	d19, d18
   3bc60:	b.le	3c734 <tan@@GLIBC_2.17+0x24ac>
   3bc64:	fsub	d17, d17, d4
   3bc68:	movi	d18, #0x0
   3bc6c:	fadd	d3, d17, d3
   3bc70:	ldr	d17, [sp, #104]
   3bc74:	fadd	d3, d3, d18
   3bc78:	fadd	d3, d3, d17
   3bc7c:	fadd	d19, d3, d4
   3bc80:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bc84:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bc88:	ldr	d17, [x1, #664]
   3bc8c:	ldr	d20, [x2, #816]
   3bc90:	fsub	d4, d4, d19
   3bc94:	fmul	d18, d5, d19
   3bc98:	str	d17, [sp, #104]
   3bc9c:	fmul	d17, d1, d19
   3bca0:	fnmsub	d19, d1, d19, d17
   3bca4:	fabs	d21, d20
   3bca8:	fadd	d3, d4, d3
   3bcac:	fmadd	d3, d1, d3, d18
   3bcb0:	fadd	d18, d3, d19
   3bcb4:	fadd	d4, d17, d18
   3bcb8:	fabs	d19, d4
   3bcbc:	fsub	d17, d17, d4
   3bcc0:	fadd	d3, d20, d4
   3bcc4:	fcmpe	d21, d19
   3bcc8:	fadd	d17, d17, d18
   3bccc:	b.le	3c71c <tan@@GLIBC_2.17+0x2494>
   3bcd0:	fsub	d20, d20, d3
   3bcd4:	fadd	d4, d20, d4
   3bcd8:	fadd	d4, d4, d17
   3bcdc:	ldr	d17, [sp, #104]
   3bce0:	fadd	d4, d4, d17
   3bce4:	fadd	d18, d4, d3
   3bce8:	fabs	d19, d2
   3bcec:	fsub	d17, d3, d18
   3bcf0:	fmul	d3, d5, d18
   3bcf4:	fmul	d5, d1, d18
   3bcf8:	fnmsub	d18, d1, d18, d5
   3bcfc:	fadd	d4, d17, d4
   3bd00:	fmadd	d3, d1, d4, d3
   3bd04:	fadd	d3, d3, d18
   3bd08:	fadd	d17, d5, d3
   3bd0c:	fsub	d5, d5, d17
   3bd10:	fmul	d4, d16, d17
   3bd14:	fmul	d1, d2, d17
   3bd18:	fnmsub	d17, d2, d17, d1
   3bd1c:	fadd	d3, d5, d3
   3bd20:	fmadd	d3, d2, d3, d4
   3bd24:	fadd	d5, d3, d17
   3bd28:	fadd	d3, d1, d5
   3bd2c:	fabs	d18, d3
   3bd30:	fsub	d1, d1, d3
   3bd34:	fadd	d4, d2, d3
   3bd38:	fcmpe	d19, d18
   3bd3c:	fadd	d5, d1, d5
   3bd40:	b.le	3c708 <tan@@GLIBC_2.17+0x2480>
   3bd44:	fsub	d1, d2, d4
   3bd48:	fadd	d1, d1, d3
   3bd4c:	fadd	d1, d1, d5
   3bd50:	fadd	d1, d1, d16
   3bd54:	fadd	d2, d1, d4
   3bd58:	fabs	d5, d7
   3bd5c:	fabs	d17, d2
   3bd60:	fsub	d3, d4, d2
   3bd64:	fadd	d16, d7, d2
   3bd68:	fcmpe	d5, d17
   3bd6c:	fadd	d3, d3, d1
   3bd70:	b.le	3c6f4 <tan@@GLIBC_2.17+0x246c>
   3bd74:	fsub	d5, d7, d16
   3bd78:	fadd	d5, d5, d2
   3bd7c:	fadd	d5, d5, d3
   3bd80:	fadd	d5, d5, d6
   3bd84:	fmul	d1, d6, d2
   3bd88:	fmul	d6, d7, d2
   3bd8c:	fmadd	d3, d7, d3, d1
   3bd90:	fnmsub	d1, d7, d2, d6
   3bd94:	fadd	d4, d5, d16
   3bd98:	fmov	d2, #1.000000000000000000e+00
   3bd9c:	fsub	d16, d16, d4
   3bda0:	fadd	d1, d3, d1
   3bda4:	fadd	d16, d16, d5
   3bda8:	fadd	d5, d6, d1
   3bdac:	fabs	d7, d5
   3bdb0:	fsub	d6, d6, d5
   3bdb4:	fsub	d3, d2, d5
   3bdb8:	fcmpe	d7, d2
   3bdbc:	fadd	d6, d6, d1
   3bdc0:	b.mi	3c83c <tan@@GLIBC_2.17+0x25b4>  // b.first
   3bdc4:	fadd	d1, d5, d3
   3bdc8:	movi	d5, #0x0
   3bdcc:	fsub	d1, d2, d1
   3bdd0:	fadd	d1, d1, d5
   3bdd4:	fsub	d1, d1, d6
   3bdd8:	fadd	d2, d1, d3
   3bddc:	fsub	d3, d3, d2
   3bde0:	fadd	d3, d3, d1
   3bde4:	cbz	w0, 3c7e8 <tan@@GLIBC_2.17+0x2560>
   3bde8:	fdiv	d5, d2, d4
   3bdec:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bdf0:	ldr	d6, [x0, #496]
   3bdf4:	fmul	d1, d4, d5
   3bdf8:	fnmsub	d7, d5, d4, d1
   3bdfc:	fsub	d1, d2, d1
   3be00:	fsub	d1, d1, d7
   3be04:	fadd	d1, d1, d3
   3be08:	fmsub	d1, d16, d5, d1
   3be0c:	fdiv	d4, d1, d4
   3be10:	fadd	d1, d5, d4
   3be14:	fsub	d5, d5, d1
   3be18:	fadd	d4, d5, d4
   3be1c:	fmsub	d2, d6, d1, d4
   3be20:	fmadd	d4, d6, d1, d4
   3be24:	fadd	d2, d2, d1
   3be28:	fadd	d1, d4, d1
   3be2c:	fcmp	d1, d2
   3be30:	b.ne	3a67c <tan@@GLIBC_2.17+0x3f4>  // b.any
   3be34:	fneg	d0, d0
   3be38:	fmul	d0, d0, d2
   3be3c:	b	3a9b0 <tan@@GLIBC_2.17+0x728>
   3be40:	fsub	d1, d1, d5
   3be44:	movi	d16, #0x0
   3be48:	fsub	d3, d1, d6
   3be4c:	fsub	d3, d3, d7
   3be50:	fadd	d3, d3, d16
   3be54:	b	3a954 <tan@@GLIBC_2.17+0x6cc>
   3be58:	fsub	d1, d1, d2
   3be5c:	fadd	d1, d1, d4
   3be60:	b	3b070 <tan@@GLIBC_2.17+0xde8>
   3be64:	fneg	d3, d2
   3be68:	fneg	d16, d1
   3be6c:	fmov	d0, #-1.000000000000000000e+00
   3be70:	b	3b088 <tan@@GLIBC_2.17+0xe00>
   3be74:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3be78:	mov	x1, #0x4070000000000000    	// #4643211215818981376
   3be7c:	fmov	d2, x1
   3be80:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3be84:	ldr	d1, [x3, #640]
   3be88:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3be8c:	fmadd	d1, d3, d2, d1
   3be90:	ldr	d6, [x1, #632]
   3be94:	add	x5, x2, #0x368
   3be98:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3be9c:	ldr	d17, [x3, #624]
   3bea0:	fcvtzs	w1, d1
   3bea4:	sbfiz	x4, x1, #5, #32
   3bea8:	sxtw	x1, w1
   3beac:	add	x3, x5, x4
   3beb0:	ldr	d1, [x5, x4]
   3beb4:	ldp	d7, d5, [x3, #8]
   3beb8:	fsub	d3, d3, d1
   3bebc:	fadd	d1, d7, d5
   3bec0:	fadd	d2, d16, d3
   3bec4:	fmul	d4, d2, d2
   3bec8:	fmadd	d17, d17, d4, d6
   3becc:	fmul	d6, d2, d4
   3bed0:	fmadd	d6, d6, d17, d2
   3bed4:	fmul	d1, d1, d6
   3bed8:	cbz	w0, 3ba64 <tan@@GLIBC_2.17+0x17dc>
   3bedc:	fadd	d6, d6, d7
   3bee0:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bee4:	ldr	d17, [x3, #528]
   3bee8:	fdiv	d1, d1, d6
   3beec:	fmadd	d6, d17, d5, d1
   3bef0:	fmsub	d18, d17, d5, d1
   3bef4:	fsub	d6, d5, d6
   3bef8:	fsub	d17, d5, d18
   3befc:	fcmp	d6, d17
   3bf00:	b.eq	3c68c <tan@@GLIBC_2.17+0x2404>  // b.none
   3bf04:	fcmpe	d1, #0.0
   3bf08:	fneg	d6, d1
   3bf0c:	adrp	x4, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bf10:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bf14:	ldr	d18, [x4, #520]
   3bf18:	fcsel	d6, d6, d1, mi  // mi = first
   3bf1c:	ldr	d17, [x3, #464]
   3bf20:	fmul	d6, d6, d18
   3bf24:	fmadd	d6, d17, d5, d6
   3bf28:	fsub	d17, d1, d6
   3bf2c:	fadd	d1, d1, d6
   3bf30:	fsub	d6, d5, d17
   3bf34:	fsub	d1, d5, d1
   3bf38:	fcmp	d1, d6
   3bf3c:	b.eq	3b4f0 <tan@@GLIBC_2.17+0x1268>  // b.none
   3bf40:	fabs	d5, d3
   3bf44:	fabs	d1, d16
   3bf48:	add	x2, x2, #0x368
   3bf4c:	add	x1, x2, x1, lsl #5
   3bf50:	fcmpe	d5, d1
   3bf54:	ldr	d5, [x1, #24]
   3bf58:	b.le	3c928 <tan@@GLIBC_2.17+0x26a0>
   3bf5c:	fsub	d1, d3, d2
   3bf60:	fadd	d16, d1, d16
   3bf64:	fnmsub	d6, d2, d2, d4
   3bf68:	fmul	d3, d16, d2
   3bf6c:	fmov	d1, #2.000000000000000000e+00
   3bf70:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bf74:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bf78:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bf7c:	fmadd	d6, d3, d1, d6
   3bf80:	ldr	d3, [x1, #696]
   3bf84:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bf88:	ldr	d20, [x2, #728]
   3bf8c:	ldr	d18, [x3, #712]
   3bf90:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bf94:	ldr	d1, [x1, #672]
   3bf98:	ldr	d17, [x2, #680]
   3bf9c:	str	d1, [sp, #104]
   3bfa0:	fabs	d19, d17
   3bfa4:	fadd	d1, d4, d6
   3bfa8:	fmadd	d18, d20, d1, d18
   3bfac:	fsub	d4, d4, d1
   3bfb0:	fadd	d4, d4, d6
   3bfb4:	fmadd	d3, d18, d1, d3
   3bfb8:	fmul	d3, d3, d1
   3bfbc:	fabs	d18, d3
   3bfc0:	fadd	d6, d17, d3
   3bfc4:	fcmpe	d19, d18
   3bfc8:	b.le	3c90c <tan@@GLIBC_2.17+0x2684>
   3bfcc:	fsub	d17, d17, d6
   3bfd0:	movi	d18, #0x0
   3bfd4:	fadd	d3, d17, d3
   3bfd8:	ldr	d17, [sp, #104]
   3bfdc:	fadd	d3, d3, d18
   3bfe0:	fadd	d3, d3, d17
   3bfe4:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bfe8:	fadd	d19, d3, d6
   3bfec:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3bff0:	ldr	d17, [x1, #664]
   3bff4:	ldr	d20, [x2, #816]
   3bff8:	fmul	d18, d4, d19
   3bffc:	str	d17, [sp, #104]
   3c000:	fsub	d17, d6, d19
   3c004:	fmul	d6, d1, d19
   3c008:	fabs	d21, d20
   3c00c:	fnmsub	d19, d1, d19, d6
   3c010:	fadd	d3, d17, d3
   3c014:	fmadd	d3, d1, d3, d18
   3c018:	fadd	d18, d3, d19
   3c01c:	fadd	d3, d6, d18
   3c020:	fabs	d19, d3
   3c024:	fsub	d17, d6, d3
   3c028:	fadd	d6, d20, d3
   3c02c:	fcmpe	d21, d19
   3c030:	fadd	d17, d17, d18
   3c034:	b.le	3c8f4 <tan@@GLIBC_2.17+0x266c>
   3c038:	fsub	d20, d20, d6
   3c03c:	fadd	d3, d20, d3
   3c040:	fadd	d3, d3, d17
   3c044:	ldr	d17, [sp, #104]
   3c048:	fadd	d3, d3, d17
   3c04c:	fadd	d18, d3, d6
   3c050:	fabs	d19, d2
   3c054:	fsub	d17, d6, d18
   3c058:	fmul	d4, d4, d18
   3c05c:	fmul	d6, d1, d18
   3c060:	fnmsub	d18, d1, d18, d6
   3c064:	fadd	d3, d17, d3
   3c068:	fmadd	d3, d1, d3, d4
   3c06c:	fadd	d3, d3, d18
   3c070:	fadd	d17, d6, d3
   3c074:	fsub	d6, d6, d17
   3c078:	fmul	d4, d16, d17
   3c07c:	fmul	d1, d2, d17
   3c080:	fnmsub	d17, d2, d17, d1
   3c084:	fadd	d3, d6, d3
   3c088:	fmadd	d3, d2, d3, d4
   3c08c:	fadd	d6, d3, d17
   3c090:	fadd	d3, d1, d6
   3c094:	fabs	d18, d3
   3c098:	fsub	d1, d1, d3
   3c09c:	fadd	d4, d2, d3
   3c0a0:	fcmpe	d19, d18
   3c0a4:	fadd	d6, d1, d6
   3c0a8:	b.le	3c99c <tan@@GLIBC_2.17+0x2714>
   3c0ac:	fsub	d1, d2, d4
   3c0b0:	fadd	d1, d1, d3
   3c0b4:	fadd	d1, d1, d6
   3c0b8:	fadd	d1, d1, d16
   3c0bc:	fadd	d2, d1, d4
   3c0c0:	fabs	d6, d7
   3c0c4:	fabs	d17, d2
   3c0c8:	fsub	d3, d4, d2
   3c0cc:	fadd	d16, d7, d2
   3c0d0:	fcmpe	d6, d17
   3c0d4:	fadd	d3, d3, d1
   3c0d8:	b.le	3c988 <tan@@GLIBC_2.17+0x2700>
   3c0dc:	fsub	d6, d7, d16
   3c0e0:	fadd	d6, d6, d2
   3c0e4:	fadd	d6, d6, d3
   3c0e8:	fadd	d6, d6, d5
   3c0ec:	fmul	d4, d7, d2
   3c0f0:	fmul	d1, d5, d2
   3c0f4:	fmadd	d3, d7, d3, d1
   3c0f8:	fnmsub	d1, d7, d2, d4
   3c0fc:	fadd	d7, d6, d16
   3c100:	fmov	d2, #1.000000000000000000e+00
   3c104:	fsub	d16, d16, d7
   3c108:	fadd	d1, d3, d1
   3c10c:	fadd	d16, d16, d6
   3c110:	fadd	d5, d4, d1
   3c114:	fabs	d6, d5
   3c118:	fsub	d3, d4, d5
   3c11c:	fsub	d4, d2, d5
   3c120:	fcmpe	d6, d2
   3c124:	fadd	d3, d3, d1
   3c128:	b.mi	3c9b0 <tan@@GLIBC_2.17+0x2728>  // b.first
   3c12c:	fadd	d1, d5, d4
   3c130:	movi	d5, #0x0
   3c134:	fsub	d1, d2, d1
   3c138:	fadd	d1, d1, d5
   3c13c:	fsub	d1, d1, d3
   3c140:	fadd	d2, d1, d4
   3c144:	fsub	d4, d4, d2
   3c148:	fadd	d4, d4, d1
   3c14c:	cbz	w0, 3c934 <tan@@GLIBC_2.17+0x26ac>
   3c150:	fdiv	d3, d2, d7
   3c154:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c158:	ldr	d5, [x0, #456]
   3c15c:	fmul	d1, d7, d3
   3c160:	fnmsub	d6, d3, d7, d1
   3c164:	fsub	d2, d2, d1
   3c168:	fsub	d2, d2, d6
   3c16c:	fadd	d2, d2, d4
   3c170:	fmsub	d2, d16, d3, d2
   3c174:	fdiv	d1, d2, d7
   3c178:	fadd	d2, d3, d1
   3c17c:	fsub	d3, d3, d2
   3c180:	fadd	d1, d3, d1
   3c184:	fmsub	d3, d5, d2, d1
   3c188:	fmadd	d1, d5, d2, d1
   3c18c:	fadd	d3, d3, d2
   3c190:	fadd	d1, d1, d2
   3c194:	fcmp	d1, d3
   3c198:	b.ne	3a67c <tan@@GLIBC_2.17+0x3f4>  // b.any
   3c19c:	fneg	d0, d0
   3c1a0:	fmul	d0, d0, d3
   3c1a4:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c1a8:	fsub	d4, d4, d6
   3c1ac:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c1b0:	ldr	d6, [x3, #512]
   3c1b4:	fdiv	d1, d1, d4
   3c1b8:	fmadd	d4, d6, d7, d1
   3c1bc:	fmsub	d17, d6, d7, d1
   3c1c0:	fadd	d4, d4, d7
   3c1c4:	fadd	d6, d17, d7
   3c1c8:	fcmp	d4, d6
   3c1cc:	b.eq	3b4f8 <tan@@GLIBC_2.17+0x1270>  // b.none
   3c1d0:	fcmpe	d1, #0.0
   3c1d4:	fneg	d4, d1
   3c1d8:	adrp	x4, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c1dc:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c1e0:	ldr	d17, [x4, #504]
   3c1e4:	fcsel	d4, d4, d1, mi  // mi = first
   3c1e8:	ldr	d6, [x3, #608]
   3c1ec:	fmul	d4, d4, d17
   3c1f0:	fmadd	d4, d6, d7, d4
   3c1f4:	fsub	d6, d1, d4
   3c1f8:	fadd	d1, d1, d4
   3c1fc:	fadd	d4, d6, d7
   3c200:	fadd	d1, d1, d7
   3c204:	fcmp	d1, d4
   3c208:	b.ne	3bbd8 <tan@@GLIBC_2.17+0x1950>  // b.any
   3c20c:	fmul	d0, d0, d4
   3c210:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c214:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c218:	ldr	d5, [x1, #552]
   3c21c:	fmsub	d0, d1, d5, d2
   3c220:	fmadd	d2, d1, d5, d2
   3c224:	fadd	d0, d1, d0
   3c228:	fadd	d1, d1, d2
   3c22c:	fcmp	d1, d0
   3c230:	b.ne	3ab44 <tan@@GLIBC_2.17+0x8bc>  // b.any
   3c234:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c238:	fsub	d0, d0, d2
   3c23c:	fadd	d1, d0, d1
   3c240:	b	3b568 <tan@@GLIBC_2.17+0x12e0>
   3c244:	fneg	d3, d2
   3c248:	fneg	d17, d1
   3c24c:	fmov	d0, #-1.000000000000000000e+00
   3c250:	b	3b580 <tan@@GLIBC_2.17+0x12f8>
   3c254:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c258:	ldr	d5, [x1, #552]
   3c25c:	fmsub	d0, d5, d2, d4
   3c260:	fmadd	d4, d5, d2, d4
   3c264:	fadd	d0, d0, d2
   3c268:	fadd	d4, d4, d2
   3c26c:	fcmp	d4, d0
   3c270:	b.eq	3a688 <tan@@GLIBC_2.17+0x400>  // b.none
   3c274:	fabs	d6, d2
   3c278:	b	3b160 <tan@@GLIBC_2.17+0xed8>
   3c27c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c280:	ldr	d1, [x0, #536]
   3c284:	fmsub	d0, d1, d3, d2
   3c288:	fmadd	d1, d1, d3, d2
   3c28c:	fadd	d0, d0, d3
   3c290:	fadd	d1, d1, d3
   3c294:	fcmp	d1, d0
   3c298:	b.eq	3a688 <tan@@GLIBC_2.17+0x400>  // b.none
   3c29c:	b	3a67c <tan@@GLIBC_2.17+0x3f4>
   3c2a0:	fsub	d1, d1, d2
   3c2a4:	fadd	d4, d1, d4
   3c2a8:	fadd	d0, d4, d0
   3c2ac:	fadd	d0, d0, d3
   3c2b0:	b	3aebc <tan@@GLIBC_2.17+0xc34>
   3c2b4:	fsub	d2, d2, d5
   3c2b8:	ldr	d7, [sp, #104]
   3c2bc:	fadd	d2, d2, d17
   3c2c0:	fadd	d2, d2, d7
   3c2c4:	fadd	d2, d2, d6
   3c2c8:	b	3ae4c <tan@@GLIBC_2.17+0xbc4>
   3c2cc:	fsub	d2, d2, d5
   3c2d0:	ldr	d7, [sp, #104]
   3c2d4:	fadd	d2, d2, d17
   3c2d8:	fadd	d2, d2, d7
   3c2dc:	fadd	d2, d2, d6
   3c2e0:	b	3ade4 <tan@@GLIBC_2.17+0xb5c>
   3c2e4:	fsub	d0, d0, d4
   3c2e8:	fadd	d0, d0, d2
   3c2ec:	b	3ab8c <tan@@GLIBC_2.17+0x904>
   3c2f0:	fsub	d2, d2, d5
   3c2f4:	ldr	d7, [sp, #104]
   3c2f8:	fadd	d2, d2, d17
   3c2fc:	fadd	d2, d2, d7
   3c300:	fadd	d2, d2, d6
   3c304:	b	3ad7c <tan@@GLIBC_2.17+0xaf4>
   3c308:	fsub	d2, d2, d5
   3c30c:	ldr	d7, [sp, #104]
   3c310:	fadd	d2, d2, d17
   3c314:	fadd	d2, d2, d7
   3c318:	fadd	d2, d2, d6
   3c31c:	b	3ad14 <tan@@GLIBC_2.17+0xa8c>
   3c320:	fsub	d2, d2, d5
   3c324:	ldr	d7, [sp, #104]
   3c328:	fadd	d2, d2, d17
   3c32c:	fadd	d2, d2, d7
   3c330:	fadd	d2, d2, d6
   3c334:	b	3acac <tan@@GLIBC_2.17+0xa24>
   3c338:	fsub	d2, d2, d5
   3c33c:	movi	d7, #0x0
   3c340:	fadd	d2, d2, d6
   3c344:	ldr	d6, [sp, #104]
   3c348:	fadd	d2, d2, d6
   3c34c:	fadd	d2, d2, d7
   3c350:	b	3ac44 <tan@@GLIBC_2.17+0x9bc>
   3c354:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c358:	mov	x0, #0x4070000000000000    	// #4643211215818981376
   3c35c:	fmov	d4, x0
   3c360:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c364:	ldr	d1, [x3, #640]
   3c368:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c36c:	fmadd	d1, d3, d4, d1
   3c370:	ldr	d4, [x0, #632]
   3c374:	add	x5, x2, #0x368
   3c378:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c37c:	ldr	d7, [x3, #624]
   3c380:	fcvtzs	w0, d1
   3c384:	sbfiz	x4, x0, #5, #32
   3c388:	sxtw	x0, w0
   3c38c:	add	x3, x5, x4
   3c390:	ldr	d1, [x5, x4]
   3c394:	ldp	d16, d2, [x3, #8]
   3c398:	fsub	d3, d3, d1
   3c39c:	fadd	d1, d16, d2
   3c3a0:	fadd	d5, d17, d3
   3c3a4:	fmul	d6, d5, d5
   3c3a8:	fmadd	d7, d7, d6, d4
   3c3ac:	fmul	d4, d5, d6
   3c3b0:	fmadd	d4, d4, d7, d5
   3c3b4:	fmul	d1, d1, d4
   3c3b8:	cbz	w1, 3c860 <tan@@GLIBC_2.17+0x25d8>
   3c3bc:	fadd	d4, d4, d16
   3c3c0:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c3c4:	ldr	d7, [x3, #528]
   3c3c8:	fdiv	d1, d1, d4
   3c3cc:	fmadd	d4, d7, d2, d1
   3c3d0:	fmsub	d18, d7, d2, d1
   3c3d4:	fsub	d4, d2, d4
   3c3d8:	fsub	d7, d2, d18
   3c3dc:	fcmp	d4, d7
   3c3e0:	b.eq	3cbac <tan@@GLIBC_2.17+0x2924>  // b.none
   3c3e4:	fcmpe	d1, #0.0
   3c3e8:	fneg	d4, d1
   3c3ec:	adrp	x4, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c3f0:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c3f4:	ldr	d18, [x4, #520]
   3c3f8:	fcsel	d4, d4, d1, mi  // mi = first
   3c3fc:	ldr	d7, [x3, #608]
   3c400:	fmul	d4, d4, d18
   3c404:	fmadd	d4, d7, d2, d4
   3c408:	fsub	d7, d1, d4
   3c40c:	fadd	d1, d1, d4
   3c410:	fsub	d4, d2, d7
   3c414:	fsub	d1, d2, d1
   3c418:	fcmp	d1, d4
   3c41c:	b.eq	3cbbc <tan@@GLIBC_2.17+0x2934>  // b.none
   3c420:	fabs	d2, d3
   3c424:	fabs	d1, d17
   3c428:	add	x2, x2, #0x368
   3c42c:	add	x0, x2, x0, lsl #5
   3c430:	fcmpe	d2, d1
   3c434:	ldr	d4, [x0, #24]
   3c438:	b.le	3cb14 <tan@@GLIBC_2.17+0x288c>
   3c43c:	fsub	d3, d3, d5
   3c440:	fadd	d17, d3, d17
   3c444:	fnmsub	d3, d5, d5, d6
   3c448:	fmul	d2, d17, d5
   3c44c:	fmov	d1, #2.000000000000000000e+00
   3c450:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c454:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c458:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c45c:	fmadd	d3, d2, d1, d3
   3c460:	ldr	d2, [x0, #696]
   3c464:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c468:	ldr	d20, [x2, #728]
   3c46c:	ldr	d18, [x3, #712]
   3c470:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c474:	ldr	d1, [x0, #672]
   3c478:	ldr	d7, [x2, #680]
   3c47c:	str	d1, [sp, #104]
   3c480:	fabs	d19, d7
   3c484:	fadd	d1, d6, d3
   3c488:	fmadd	d18, d20, d1, d18
   3c48c:	fsub	d6, d6, d1
   3c490:	fadd	d6, d6, d3
   3c494:	fmadd	d2, d18, d1, d2
   3c498:	fmul	d2, d2, d1
   3c49c:	fabs	d18, d2
   3c4a0:	fadd	d3, d7, d2
   3c4a4:	fcmpe	d19, d18
   3c4a8:	b.le	3cb60 <tan@@GLIBC_2.17+0x28d8>
   3c4ac:	fsub	d7, d7, d3
   3c4b0:	movi	d18, #0x0
   3c4b4:	fadd	d2, d7, d2
   3c4b8:	ldr	d7, [sp, #104]
   3c4bc:	fadd	d2, d2, d18
   3c4c0:	fadd	d2, d2, d7
   3c4c4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c4c8:	fadd	d19, d2, d3
   3c4cc:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c4d0:	ldr	d7, [x0, #664]
   3c4d4:	ldr	d20, [x2, #816]
   3c4d8:	fmul	d18, d6, d19
   3c4dc:	str	d7, [sp, #104]
   3c4e0:	fsub	d7, d3, d19
   3c4e4:	fmul	d3, d1, d19
   3c4e8:	fabs	d21, d20
   3c4ec:	fnmsub	d19, d1, d19, d3
   3c4f0:	fadd	d2, d7, d2
   3c4f4:	fmadd	d2, d1, d2, d18
   3c4f8:	fadd	d18, d2, d19
   3c4fc:	fadd	d2, d3, d18
   3c500:	fabs	d19, d2
   3c504:	fsub	d7, d3, d2
   3c508:	fadd	d3, d20, d2
   3c50c:	fcmpe	d21, d19
   3c510:	fadd	d7, d7, d18
   3c514:	b.le	3cb48 <tan@@GLIBC_2.17+0x28c0>
   3c518:	fsub	d20, d20, d3
   3c51c:	fadd	d2, d20, d2
   3c520:	fadd	d2, d2, d7
   3c524:	ldr	d7, [sp, #104]
   3c528:	fadd	d2, d2, d7
   3c52c:	fadd	d18, d2, d3
   3c530:	fabs	d19, d5
   3c534:	fsub	d7, d3, d18
   3c538:	fmul	d3, d6, d18
   3c53c:	fmul	d6, d1, d18
   3c540:	fnmsub	d18, d1, d18, d6
   3c544:	fadd	d2, d7, d2
   3c548:	fmadd	d3, d1, d2, d3
   3c54c:	fadd	d3, d3, d18
   3c550:	fadd	d7, d6, d3
   3c554:	fsub	d6, d6, d7
   3c558:	fmul	d2, d5, d7
   3c55c:	fmul	d1, d17, d7
   3c560:	fnmsub	d7, d5, d7, d2
   3c564:	fadd	d3, d6, d3
   3c568:	fmadd	d3, d5, d3, d1
   3c56c:	fadd	d6, d3, d7
   3c570:	fadd	d1, d2, d6
   3c574:	fabs	d18, d1
   3c578:	fsub	d3, d2, d1
   3c57c:	fadd	d2, d5, d1
   3c580:	fcmpe	d19, d18
   3c584:	fadd	d3, d3, d6
   3c588:	b.le	3cb34 <tan@@GLIBC_2.17+0x28ac>
   3c58c:	fsub	d5, d5, d2
   3c590:	fadd	d1, d5, d1
   3c594:	fadd	d3, d1, d3
   3c598:	fadd	d17, d3, d17
   3c59c:	fadd	d5, d17, d2
   3c5a0:	fabs	d1, d16
   3c5a4:	fabs	d3, d5
   3c5a8:	fsub	d2, d2, d5
   3c5ac:	fadd	d7, d16, d5
   3c5b0:	fcmpe	d1, d3
   3c5b4:	fadd	d17, d2, d17
   3c5b8:	b.le	3cb20 <tan@@GLIBC_2.17+0x2898>
   3c5bc:	fsub	d6, d16, d7
   3c5c0:	fadd	d6, d6, d5
   3c5c4:	fadd	d6, d6, d17
   3c5c8:	fadd	d6, d6, d4
   3c5cc:	fmul	d1, d4, d5
   3c5d0:	fmul	d4, d16, d5
   3c5d4:	fmadd	d3, d16, d17, d1
   3c5d8:	fnmsub	d1, d16, d5, d4
   3c5dc:	fadd	d5, d6, d7
   3c5e0:	fmov	d2, #1.000000000000000000e+00
   3c5e4:	fsub	d7, d7, d5
   3c5e8:	fadd	d1, d3, d1
   3c5ec:	fadd	d7, d7, d6
   3c5f0:	fadd	d6, d4, d1
   3c5f4:	fabs	d16, d6
   3c5f8:	fsub	d3, d4, d6
   3c5fc:	fsub	d4, d2, d6
   3c600:	fcmpe	d16, d2
   3c604:	fadd	d3, d3, d1
   3c608:	b.mi	3cb94 <tan@@GLIBC_2.17+0x290c>  // b.first
   3c60c:	fadd	d1, d6, d4
   3c610:	movi	d6, #0x0
   3c614:	fsub	d1, d2, d1
   3c618:	fadd	d1, d1, d6
   3c61c:	fsub	d1, d1, d3
   3c620:	fadd	d2, d1, d4
   3c624:	fsub	d4, d4, d2
   3c628:	fadd	d4, d4, d1
   3c62c:	cbz	w1, 3cabc <tan@@GLIBC_2.17+0x2834>
   3c630:	fdiv	d3, d2, d5
   3c634:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c638:	ldr	d6, [x0, #416]
   3c63c:	fmul	d1, d5, d3
   3c640:	fnmsub	d16, d3, d5, d1
   3c644:	fsub	d1, d2, d1
   3c648:	fsub	d1, d1, d16
   3c64c:	fadd	d1, d1, d4
   3c650:	fmsub	d1, d7, d3, d1
   3c654:	fdiv	d5, d1, d5
   3c658:	fadd	d1, d3, d5
   3c65c:	fsub	d3, d3, d1
   3c660:	fadd	d5, d3, d5
   3c664:	fmsub	d2, d6, d1, d5
   3c668:	fmadd	d5, d6, d1, d5
   3c66c:	fadd	d2, d2, d1
   3c670:	fadd	d1, d5, d1
   3c674:	fcmp	d1, d2
   3c678:	b.ne	3c6a4 <tan@@GLIBC_2.17+0x241c>  // b.any
   3c67c:	fneg	d0, d0
   3c680:	fmul	d0, d0, d2
   3c684:	ldp	x23, x24, [sp, #48]
   3c688:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c68c:	fneg	d0, d0
   3c690:	fmul	d0, d0, d17
   3c694:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c698:	fsub	d2, d2, d5
   3c69c:	fadd	d2, d2, d1
   3c6a0:	b	3aaf0 <tan@@GLIBC_2.17+0x868>
   3c6a4:	fmov	d0, d8
   3c6a8:	bl	3a220 <cos@@GLIBC_2.17+0x738>
   3c6ac:	ldp	x23, x24, [sp, #48]
   3c6b0:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c6b4:	fsub	d1, d16, d2
   3c6b8:	fadd	d16, d1, d5
   3c6bc:	b	3bbfc <tan@@GLIBC_2.17+0x1974>
   3c6c0:	fsub	d3, d3, d5
   3c6c4:	ldr	d16, [sp, #104]
   3c6c8:	fadd	d3, d3, d18
   3c6cc:	fadd	d3, d3, d16
   3c6d0:	fadd	d3, d3, d7
   3c6d4:	b	3b278 <tan@@GLIBC_2.17+0xff0>
   3c6d8:	fsub	d3, d3, d5
   3c6dc:	movi	d16, #0x0
   3c6e0:	fadd	d3, d3, d7
   3c6e4:	ldr	d7, [sp, #104]
   3c6e8:	fadd	d3, d3, d7
   3c6ec:	fadd	d3, d3, d16
   3c6f0:	b	3b210 <tan@@GLIBC_2.17+0xf88>
   3c6f4:	fsub	d5, d2, d16
   3c6f8:	fadd	d5, d5, d7
   3c6fc:	fadd	d5, d5, d6
   3c700:	fadd	d5, d5, d3
   3c704:	b	3bd84 <tan@@GLIBC_2.17+0x1afc>
   3c708:	fsub	d1, d3, d4
   3c70c:	fadd	d1, d1, d2
   3c710:	fadd	d1, d1, d16
   3c714:	fadd	d1, d1, d5
   3c718:	b	3bd54 <tan@@GLIBC_2.17+0x1acc>
   3c71c:	fsub	d4, d4, d3
   3c720:	ldr	d18, [sp, #104]
   3c724:	fadd	d4, d4, d20
   3c728:	fadd	d4, d4, d18
   3c72c:	fadd	d4, d4, d17
   3c730:	b	3bce4 <tan@@GLIBC_2.17+0x1a5c>
   3c734:	fsub	d3, d3, d4
   3c738:	movi	d18, #0x0
   3c73c:	fadd	d3, d3, d17
   3c740:	ldr	d17, [sp, #104]
   3c744:	fadd	d3, d3, d17
   3c748:	fadd	d3, d3, d18
   3c74c:	b	3bc7c <tan@@GLIBC_2.17+0x19f4>
   3c750:	fsub	d3, d3, d5
   3c754:	ldr	d16, [sp, #104]
   3c758:	fadd	d3, d3, d18
   3c75c:	fadd	d3, d3, d16
   3c760:	fadd	d3, d3, d7
   3c764:	b	3b418 <tan@@GLIBC_2.17+0x1190>
   3c768:	fsub	d3, d3, d5
   3c76c:	ldr	d16, [sp, #104]
   3c770:	fadd	d3, d3, d18
   3c774:	fadd	d3, d3, d16
   3c778:	fadd	d3, d3, d7
   3c77c:	b	3b3b0 <tan@@GLIBC_2.17+0x1128>
   3c780:	fsub	d3, d3, d5
   3c784:	ldr	d16, [sp, #104]
   3c788:	fadd	d3, d3, d18
   3c78c:	fadd	d3, d3, d16
   3c790:	fadd	d3, d3, d7
   3c794:	b	3b348 <tan@@GLIBC_2.17+0x10c0>
   3c798:	fsub	d3, d3, d5
   3c79c:	ldr	d16, [sp, #104]
   3c7a0:	fadd	d3, d3, d18
   3c7a4:	fadd	d3, d3, d16
   3c7a8:	fadd	d3, d3, d7
   3c7ac:	b	3b2e0 <tan@@GLIBC_2.17+0x1058>
   3c7b0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c7b4:	ldr	d2, [x0, #472]
   3c7b8:	fmsub	d0, d2, d4, d1
   3c7bc:	fmadd	d1, d2, d4, d1
   3c7c0:	fadd	d0, d0, d4
   3c7c4:	fadd	d1, d1, d4
   3c7c8:	fcmp	d1, d0
   3c7cc:	b.eq	3a688 <tan@@GLIBC_2.17+0x400>  // b.none
   3c7d0:	b	3a67c <tan@@GLIBC_2.17+0x3f4>
   3c7d4:	fsub	d0, d0, d3
   3c7d8:	fadd	d2, d0, d2
   3c7dc:	fadd	d1, d2, d1
   3c7e0:	fadd	d1, d1, d4
   3c7e4:	b	3b484 <tan@@GLIBC_2.17+0x11fc>
   3c7e8:	fdiv	d5, d4, d2
   3c7ec:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c7f0:	ldr	d6, [x0, #496]
   3c7f4:	fmul	d1, d2, d5
   3c7f8:	fnmsub	d7, d5, d2, d1
   3c7fc:	fsub	d1, d4, d1
   3c800:	fsub	d1, d1, d7
   3c804:	fadd	d1, d1, d16
   3c808:	fmsub	d1, d3, d5, d1
   3c80c:	fdiv	d1, d1, d2
   3c810:	fadd	d2, d5, d1
   3c814:	fsub	d5, d5, d2
   3c818:	fadd	d1, d5, d1
   3c81c:	fmsub	d3, d6, d2, d1
   3c820:	fmadd	d1, d6, d2, d1
   3c824:	fadd	d3, d3, d2
   3c828:	fadd	d1, d1, d2
   3c82c:	fcmp	d1, d3
   3c830:	b.ne	3a67c <tan@@GLIBC_2.17+0x3f4>  // b.any
   3c834:	fmul	d0, d0, d3
   3c838:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c83c:	fsub	d1, d2, d3
   3c840:	movi	d2, #0x0
   3c844:	fsub	d1, d1, d5
   3c848:	fsub	d1, d1, d6
   3c84c:	fadd	d1, d1, d2
   3c850:	b	3bdd8 <tan@@GLIBC_2.17+0x1b50>
   3c854:	fsub	d4, d4, d7
   3c858:	fadd	d4, d4, d2
   3c85c:	b	3b10c <tan@@GLIBC_2.17+0xe84>
   3c860:	fsub	d2, d2, d4
   3c864:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c868:	ldr	d4, [x3, #512]
   3c86c:	fdiv	d1, d1, d2
   3c870:	fmadd	d2, d4, d16, d1
   3c874:	fmsub	d7, d4, d16, d1
   3c878:	fadd	d2, d2, d16
   3c87c:	fadd	d4, d7, d16
   3c880:	fcmp	d2, d4
   3c884:	b.eq	3cb88 <tan@@GLIBC_2.17+0x2900>  // b.none
   3c888:	fcmpe	d1, #0.0
   3c88c:	fneg	d2, d1
   3c890:	adrp	x4, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c894:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c898:	ldr	d7, [x4, #504]
   3c89c:	fcsel	d2, d2, d1, mi  // mi = first
   3c8a0:	ldr	d4, [x3, #608]
   3c8a4:	fmul	d2, d2, d7
   3c8a8:	fmadd	d2, d4, d16, d2
   3c8ac:	fsub	d4, d1, d2
   3c8b0:	fadd	d1, d1, d2
   3c8b4:	fadd	d2, d4, d16
   3c8b8:	fadd	d1, d1, d16
   3c8bc:	fcmp	d1, d2
   3c8c0:	b.ne	3c420 <tan@@GLIBC_2.17+0x2198>  // b.any
   3c8c4:	fmul	d0, d0, d2
   3c8c8:	b	3c684 <tan@@GLIBC_2.17+0x23fc>
   3c8cc:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c8d0:	ldr	d3, [x0, #440]
   3c8d4:	fmsub	d0, d3, d2, d1
   3c8d8:	fmadd	d1, d3, d2, d1
   3c8dc:	fadd	d0, d0, d2
   3c8e0:	fadd	d1, d1, d2
   3c8e4:	fcmp	d1, d0
   3c8e8:	b.ne	3b658 <tan@@GLIBC_2.17+0x13d0>  // b.any
   3c8ec:	ldp	x23, x24, [sp, #48]
   3c8f0:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c8f4:	fsub	d3, d3, d6
   3c8f8:	ldr	d18, [sp, #104]
   3c8fc:	fadd	d3, d3, d20
   3c900:	fadd	d3, d3, d18
   3c904:	fadd	d3, d3, d17
   3c908:	b	3c04c <tan@@GLIBC_2.17+0x1dc4>
   3c90c:	fsub	d3, d3, d6
   3c910:	movi	d18, #0x0
   3c914:	fadd	d3, d3, d17
   3c918:	ldr	d17, [sp, #104]
   3c91c:	fadd	d3, d3, d17
   3c920:	fadd	d3, d3, d18
   3c924:	b	3bfe4 <tan@@GLIBC_2.17+0x1d5c>
   3c928:	fsub	d1, d16, d2
   3c92c:	fadd	d16, d1, d3
   3c930:	b	3bf64 <tan@@GLIBC_2.17+0x1cdc>
   3c934:	fdiv	d3, d7, d2
   3c938:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c93c:	ldr	d5, [x0, #456]
   3c940:	fmul	d1, d2, d3
   3c944:	fnmsub	d6, d3, d2, d1
   3c948:	fsub	d1, d7, d1
   3c94c:	fsub	d1, d1, d6
   3c950:	fadd	d1, d1, d16
   3c954:	fmsub	d1, d4, d3, d1
   3c958:	fdiv	d1, d1, d2
   3c95c:	fadd	d2, d3, d1
   3c960:	fsub	d3, d3, d2
   3c964:	fadd	d1, d3, d1
   3c968:	fmsub	d3, d5, d2, d1
   3c96c:	fmadd	d1, d5, d2, d1
   3c970:	fadd	d3, d3, d2
   3c974:	fadd	d1, d1, d2
   3c978:	fcmp	d1, d3
   3c97c:	b.ne	3a67c <tan@@GLIBC_2.17+0x3f4>  // b.any
   3c980:	fmul	d0, d0, d3
   3c984:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c988:	fsub	d6, d2, d16
   3c98c:	fadd	d6, d6, d7
   3c990:	fadd	d6, d6, d5
   3c994:	fadd	d6, d6, d3
   3c998:	b	3c0ec <tan@@GLIBC_2.17+0x1e64>
   3c99c:	fsub	d1, d3, d4
   3c9a0:	fadd	d1, d1, d2
   3c9a4:	fadd	d1, d1, d16
   3c9a8:	fadd	d1, d1, d6
   3c9ac:	b	3c0bc <tan@@GLIBC_2.17+0x1e34>
   3c9b0:	fsub	d1, d2, d4
   3c9b4:	movi	d2, #0x0
   3c9b8:	fsub	d1, d1, d5
   3c9bc:	fsub	d1, d1, d3
   3c9c0:	fadd	d1, d1, d2
   3c9c4:	b	3c140 <tan@@GLIBC_2.17+0x1eb8>
   3c9c8:	fsub	d2, d2, d5
   3c9cc:	movi	d7, #0x0
   3c9d0:	fadd	d2, d2, d6
   3c9d4:	ldr	d6, [sp, #104]
   3c9d8:	fadd	d2, d2, d6
   3c9dc:	fadd	d2, d2, d7
   3c9e0:	b	3b778 <tan@@GLIBC_2.17+0x14f0>
   3c9e4:	fmov	d0, d8
   3c9e8:	bl	3a220 <cos@@GLIBC_2.17+0x738>
   3c9ec:	ldp	x23, x24, [sp, #48]
   3c9f0:	ldp	x25, x26, [sp, #64]
   3c9f4:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3c9f8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3c9fc:	ldr	d2, [x0, #424]
   3ca00:	fmsub	d0, d2, d3, d1
   3ca04:	fmadd	d1, d2, d3, d1
   3ca08:	fadd	d0, d0, d3
   3ca0c:	fadd	d1, d1, d3
   3ca10:	fcmp	d1, d0
   3ca14:	b.ne	3c9e4 <tan@@GLIBC_2.17+0x275c>  // b.any
   3ca18:	ldp	x23, x24, [sp, #48]
   3ca1c:	ldp	x25, x26, [sp, #64]
   3ca20:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3ca24:	fsub	d0, d0, d1
   3ca28:	fadd	d0, d0, d3
   3ca2c:	fadd	d0, d0, d4
   3ca30:	fadd	d0, d0, d2
   3ca34:	b	3b9f0 <tan@@GLIBC_2.17+0x1768>
   3ca38:	fsub	d2, d2, d5
   3ca3c:	ldr	d7, [sp, #104]
   3ca40:	fadd	d2, d2, d17
   3ca44:	fadd	d2, d2, d7
   3ca48:	fadd	d2, d2, d6
   3ca4c:	b	3b980 <tan@@GLIBC_2.17+0x16f8>
   3ca50:	fsub	d2, d2, d5
   3ca54:	ldr	d7, [sp, #104]
   3ca58:	fadd	d2, d2, d17
   3ca5c:	fadd	d2, d2, d7
   3ca60:	fadd	d2, d2, d6
   3ca64:	b	3b918 <tan@@GLIBC_2.17+0x1690>
   3ca68:	fsub	d2, d2, d5
   3ca6c:	ldr	d7, [sp, #104]
   3ca70:	fadd	d2, d2, d17
   3ca74:	fadd	d2, d2, d7
   3ca78:	fadd	d2, d2, d6
   3ca7c:	b	3b8b0 <tan@@GLIBC_2.17+0x1628>
   3ca80:	fsub	d2, d2, d5
   3ca84:	ldr	d7, [sp, #104]
   3ca88:	fadd	d2, d2, d17
   3ca8c:	fadd	d2, d2, d7
   3ca90:	fadd	d2, d2, d6
   3ca94:	b	3b848 <tan@@GLIBC_2.17+0x15c0>
   3ca98:	fsub	d2, d2, d5
   3ca9c:	ldr	d7, [sp, #104]
   3caa0:	fadd	d2, d2, d17
   3caa4:	fadd	d2, d2, d7
   3caa8:	fadd	d2, d2, d6
   3caac:	b	3b7e0 <tan@@GLIBC_2.17+0x1558>
   3cab0:	fsub	d1, d1, d3
   3cab4:	fadd	d1, d1, d2
   3cab8:	b	3b604 <tan@@GLIBC_2.17+0x137c>
   3cabc:	fdiv	d3, d5, d2
   3cac0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3cac4:	ldr	d6, [x0, #416]
   3cac8:	fmul	d1, d2, d3
   3cacc:	fnmsub	d16, d3, d2, d1
   3cad0:	fsub	d1, d5, d1
   3cad4:	fsub	d1, d1, d16
   3cad8:	fadd	d1, d1, d7
   3cadc:	fmsub	d1, d4, d3, d1
   3cae0:	fdiv	d1, d1, d2
   3cae4:	fadd	d2, d3, d1
   3cae8:	fsub	d3, d3, d2
   3caec:	fadd	d1, d3, d1
   3caf0:	fmsub	d3, d6, d2, d1
   3caf4:	fmadd	d1, d6, d2, d1
   3caf8:	fadd	d3, d3, d2
   3cafc:	fadd	d1, d1, d2
   3cb00:	fcmp	d1, d3
   3cb04:	b.ne	3c6a4 <tan@@GLIBC_2.17+0x241c>  // b.any
   3cb08:	fmul	d0, d0, d3
   3cb0c:	ldp	x23, x24, [sp, #48]
   3cb10:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3cb14:	fsub	d2, d17, d5
   3cb18:	fadd	d17, d2, d3
   3cb1c:	b	3c444 <tan@@GLIBC_2.17+0x21bc>
   3cb20:	fsub	d6, d5, d7
   3cb24:	fadd	d6, d6, d16
   3cb28:	fadd	d6, d6, d4
   3cb2c:	fadd	d6, d6, d17
   3cb30:	b	3c5cc <tan@@GLIBC_2.17+0x2344>
   3cb34:	fsub	d1, d1, d2
   3cb38:	fadd	d5, d1, d5
   3cb3c:	fadd	d17, d5, d17
   3cb40:	fadd	d17, d17, d3
   3cb44:	b	3c59c <tan@@GLIBC_2.17+0x2314>
   3cb48:	fsub	d2, d2, d3
   3cb4c:	ldr	d18, [sp, #104]
   3cb50:	fadd	d2, d2, d20
   3cb54:	fadd	d2, d2, d18
   3cb58:	fadd	d2, d2, d7
   3cb5c:	b	3c52c <tan@@GLIBC_2.17+0x22a4>
   3cb60:	fsub	d2, d2, d3
   3cb64:	movi	d18, #0x0
   3cb68:	fadd	d2, d2, d7
   3cb6c:	ldr	d7, [sp, #104]
   3cb70:	fadd	d2, d2, d7
   3cb74:	fadd	d2, d2, d18
   3cb78:	b	3c4c4 <tan@@GLIBC_2.17+0x223c>
   3cb7c:	fneg	d0, d0
   3cb80:	ldp	x23, x24, [sp, #48]
   3cb84:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3cb88:	fmul	d0, d0, d4
   3cb8c:	ldp	x23, x24, [sp, #48]
   3cb90:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3cb94:	fsub	d1, d2, d4
   3cb98:	movi	d2, #0x0
   3cb9c:	fsub	d1, d1, d6
   3cba0:	fsub	d1, d1, d3
   3cba4:	fadd	d1, d1, d2
   3cba8:	b	3c620 <tan@@GLIBC_2.17+0x2398>
   3cbac:	fneg	d0, d0
   3cbb0:	ldp	x23, x24, [sp, #48]
   3cbb4:	fmul	d0, d0, d7
   3cbb8:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3cbbc:	fneg	d0, d0
   3cbc0:	ldp	x23, x24, [sp, #48]
   3cbc4:	fmul	d0, d0, d4
   3cbc8:	b	3a688 <tan@@GLIBC_2.17+0x400>
   3cbcc:	stp	x23, x24, [sp, #48]
   3cbd0:	stp	x25, x26, [sp, #64]
   3cbd4:	bl	ba70 <__stack_chk_fail@plt>

000000000003cbd8 <tanh@@GLIBC_2.17>:
   3cbd8:	stp	x29, x30, [sp, #-32]!
   3cbdc:	fmov	x0, d0
   3cbe0:	mov	w2, #0x7fefffff            	// #2146435071
   3cbe4:	mov	x29, sp
   3cbe8:	str	x19, [sp, #16]
   3cbec:	fmov	d1, d0
   3cbf0:	ubfx	x1, x0, #32, #31
   3cbf4:	lsr	x19, x0, #32
   3cbf8:	cmp	w1, w2
   3cbfc:	b.le	3cc1c <tanh@@GLIBC_2.17+0x44>
   3cc00:	fmov	d0, #1.000000000000000000e+00
   3cc04:	fdiv	d1, d0, d1
   3cc08:	tbnz	w19, #31, 3cc94 <tanh@@GLIBC_2.17+0xbc>
   3cc0c:	fadd	d0, d1, d0
   3cc10:	ldr	x19, [sp, #16]
   3cc14:	ldp	x29, x30, [sp], #32
   3cc18:	ret
   3cc1c:	mov	w2, #0x4035ffff            	// #1077280767
   3cc20:	cmp	w1, w2
   3cc24:	b.le	3cc50 <tanh@@GLIBC_2.17+0x78>
   3cc28:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   3cc2c:	fmov	d1, #1.000000000000000000e+00
   3cc30:	ldr	d0, [x0, #4016]
   3cc34:	fsub	d0, d1, d0
   3cc38:	fneg	d1, d0
   3cc3c:	cmp	w19, #0x0
   3cc40:	ldr	x19, [sp, #16]
   3cc44:	ldp	x29, x30, [sp], #32
   3cc48:	fcsel	d0, d1, d0, lt  // lt = tstop
   3cc4c:	ret
   3cc50:	orr	w0, w1, w0
   3cc54:	cbz	w0, 3cc10 <tanh@@GLIBC_2.17+0x38>
   3cc58:	mov	w0, #0x3c7fffff            	// #1015021567
   3cc5c:	fabs	d0, d0
   3cc60:	cmp	w1, w0
   3cc64:	b.le	3cca4 <tanh@@GLIBC_2.17+0xcc>
   3cc68:	mov	w0, #0x3fefffff            	// #1072693247
   3cc6c:	cmp	w1, w0
   3cc70:	b.le	3ccc8 <tanh@@GLIBC_2.17+0xf0>
   3cc74:	fadd	d0, d0, d0
   3cc78:	bl	38968 <expm1@@GLIBC_2.17>
   3cc7c:	fmov	d2, #2.000000000000000000e+00
   3cc80:	fmov	d1, #1.000000000000000000e+00
   3cc84:	fadd	d0, d0, d2
   3cc88:	fdiv	d0, d2, d0
   3cc8c:	fsub	d0, d1, d0
   3cc90:	b	3cc38 <tanh@@GLIBC_2.17+0x60>
   3cc94:	fsub	d0, d1, d0
   3cc98:	ldr	x19, [sp, #16]
   3cc9c:	ldp	x29, x30, [sp], #32
   3cca0:	ret
   3cca4:	mov	x0, #0x10000000000000      	// #4503599627370496
   3cca8:	fmov	d2, x0
   3ccac:	fcmpe	d0, d2
   3ccb0:	b.pl	3ccb8 <tanh@@GLIBC_2.17+0xe0>  // b.nfrst
   3ccb4:	fmul	d0, d1, d1
   3ccb8:	fmov	d0, #1.000000000000000000e+00
   3ccbc:	fadd	d0, d1, d0
   3ccc0:	fmul	d0, d0, d1
   3ccc4:	b	3cc10 <tanh@@GLIBC_2.17+0x38>
   3ccc8:	fmov	d1, #-2.000000000000000000e+00
   3cccc:	fmul	d0, d0, d1
   3ccd0:	bl	38968 <expm1@@GLIBC_2.17>
   3ccd4:	fneg	d1, d0
   3ccd8:	fmov	d2, #2.000000000000000000e+00
   3ccdc:	fadd	d0, d0, d2
   3cce0:	fdiv	d0, d1, d0
   3cce4:	b	3cc38 <tanh@@GLIBC_2.17+0x60>

000000000003cce8 <__fpclassify@@GLIBC_2.17>:
   3cce8:	fmov	x1, d0
   3ccec:	mov	w0, #0x2                   	// #2
   3ccf0:	lsr	x2, x1, #32
   3ccf4:	ubfx	x3, x1, #32, #20
   3ccf8:	and	w2, w2, #0x7ff00000
   3ccfc:	orr	w1, w3, w1
   3cd00:	orr	w3, w1, w2
   3cd04:	cbz	w3, 3cd28 <__fpclassify@@GLIBC_2.17+0x40>
   3cd08:	mov	w0, #0x3                   	// #3
   3cd0c:	cbz	w2, 3cd28 <__fpclassify@@GLIBC_2.17+0x40>
   3cd10:	mov	w3, #0x7ff00000            	// #2146435072
   3cd14:	mov	w0, #0x4                   	// #4
   3cd18:	cmp	w2, w3
   3cd1c:	b.ne	3cd28 <__fpclassify@@GLIBC_2.17+0x40>  // b.any
   3cd20:	cmp	w1, #0x0
   3cd24:	cset	w0, eq  // eq = none
   3cd28:	ret
   3cd2c:	nop

000000000003cd30 <trunc@@GLIBC_2.17>:
   3cd30:	frintz	d0, d0
   3cd34:	ret

000000000003cd38 <remquo@@GLIBC_2.17>:
   3cd38:	stp	x29, x30, [sp, #-64]!
   3cd3c:	fmov	d2, d0
   3cd40:	mov	x29, sp
   3cd44:	stp	x19, x20, [sp, #16]
   3cd48:	fmov	x19, d1
   3cd4c:	stp	x21, x22, [sp, #32]
   3cd50:	fmov	x21, d0
   3cd54:	str	x23, [sp, #48]
   3cd58:	eor	x23, x21, x19
   3cd5c:	ands	x19, x19, #0x7fffffffffffffff
   3cd60:	b.eq	3cecc <remquo@@GLIBC_2.17+0x194>  // b.none
   3cd64:	and	x22, x21, #0x7fffffffffffffff
   3cd68:	mov	x20, x0
   3cd6c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3cd70:	cmp	x22, x0
   3cd74:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3cd78:	ccmp	x19, x0, #0x2, ls  // ls = plast
   3cd7c:	b.hi	3cecc <remquo@@GLIBC_2.17+0x194>  // b.pmore
   3cd80:	mov	x0, #0x7fbfffffffffffff    	// #9205357638345293823
   3cd84:	cmp	x19, x0
   3cd88:	b.ls	3ce00 <remquo@@GLIBC_2.17+0xc8>  // b.plast
   3cd8c:	cmp	x19, x22
   3cd90:	b.eq	3ceb0 <remquo@@GLIBC_2.17+0x178>  // b.none
   3cd94:	mov	x0, #0x7fcfffffffffffff    	// #9209861237972664319
   3cd98:	fabs	d0, d0
   3cd9c:	cmp	x19, x0
   3cda0:	fmov	d1, x19
   3cda4:	b.ls	3ce20 <remquo@@GLIBC_2.17+0xe8>  // b.plast
   3cda8:	mov	x0, #0x7fdfffffffffffff    	// #9214364837600034815
   3cdac:	cmp	x19, x0
   3cdb0:	b.ls	3ce7c <remquo@@GLIBC_2.17+0x144>  // b.plast
   3cdb4:	mov	w1, #0x0                   	// #0
   3cdb8:	fmov	d2, #5.000000000000000000e-01
   3cdbc:	fmul	d2, d1, d2
   3cdc0:	fcmpe	d2, d0
   3cdc4:	b.mi	3ce9c <remquo@@GLIBC_2.17+0x164>  // b.first
   3cdc8:	movi	d1, #0x0
   3cdcc:	cmp	x23, #0x0
   3cdd0:	cneg	w1, w1, lt  // lt = tstop
   3cdd4:	str	w1, [x20]
   3cdd8:	fcmp	d0, d1
   3cddc:	fcsel	d0, d0, d1, ne  // ne = any
   3cde0:	cmp	x21, #0x0
   3cde4:	fneg	d1, d0
   3cde8:	fcsel	d0, d1, d0, lt  // lt = tstop
   3cdec:	ldp	x19, x20, [sp, #16]
   3cdf0:	ldp	x21, x22, [sp, #32]
   3cdf4:	ldr	x23, [sp, #48]
   3cdf8:	ldp	x29, x30, [sp], #64
   3cdfc:	ret
   3ce00:	fmov	d2, #8.000000000000000000e+00
   3ce04:	fmul	d1, d1, d2
   3ce08:	bl	33558 <__fmod_finite@GLIBC_2.17>
   3ce0c:	fmov	d2, d0
   3ce10:	cmp	x19, x22
   3ce14:	b.eq	3ceb0 <remquo@@GLIBC_2.17+0x178>  // b.none
   3ce18:	fabs	d0, d0
   3ce1c:	fmov	d1, x19
   3ce20:	fmov	d2, #4.000000000000000000e+00
   3ce24:	mov	w1, #0x0                   	// #0
   3ce28:	fmul	d2, d1, d2
   3ce2c:	fcmpe	d2, d0
   3ce30:	b.hi	3ce3c <remquo@@GLIBC_2.17+0x104>  // b.pmore
   3ce34:	fsub	d0, d0, d2
   3ce38:	mov	w1, #0x4                   	// #4
   3ce3c:	fadd	d2, d1, d1
   3ce40:	fcmpe	d0, d2
   3ce44:	b.ge	3ce90 <remquo@@GLIBC_2.17+0x158>  // b.tcont
   3ce48:	mov	x0, #0x1fffffffffffff      	// #9007199254740991
   3ce4c:	cmp	x19, x0
   3ce50:	b.hi	3cdb8 <remquo@@GLIBC_2.17+0x80>  // b.pmore
   3ce54:	fadd	d2, d0, d0
   3ce58:	fcmpe	d2, d1
   3ce5c:	b.le	3cdc8 <remquo@@GLIBC_2.17+0x90>
   3ce60:	fsub	d0, d0, d1
   3ce64:	fadd	d2, d0, d0
   3ce68:	fcmpe	d2, d1
   3ce6c:	b.lt	3cea8 <remquo@@GLIBC_2.17+0x170>  // b.tstop
   3ce70:	fsub	d0, d0, d1
   3ce74:	add	w1, w1, #0x2
   3ce78:	b	3cdc8 <remquo@@GLIBC_2.17+0x90>
   3ce7c:	fadd	d2, d1, d1
   3ce80:	fcmpe	d0, d2
   3ce84:	b.lt	3cdb4 <remquo@@GLIBC_2.17+0x7c>  // b.tstop
   3ce88:	mov	w1, #0x0                   	// #0
   3ce8c:	nop
   3ce90:	fsub	d0, d0, d2
   3ce94:	add	w1, w1, #0x2
   3ce98:	b	3ce48 <remquo@@GLIBC_2.17+0x110>
   3ce9c:	fsub	d0, d0, d1
   3cea0:	fcmpe	d2, d0
   3cea4:	b.ls	3ce70 <remquo@@GLIBC_2.17+0x138>  // b.plast
   3cea8:	add	w1, w1, #0x1
   3ceac:	b	3cdc8 <remquo@@GLIBC_2.17+0x90>
   3ceb0:	movi	d0, #0x0
   3ceb4:	cmp	x23, #0x0
   3ceb8:	mov	w0, #0x1                   	// #1
   3cebc:	cneg	w0, w0, lt  // lt = tstop
   3cec0:	str	w0, [x20]
   3cec4:	fmul	d0, d2, d0
   3cec8:	b	3cdec <remquo@@GLIBC_2.17+0xb4>
   3cecc:	fmul	d0, d2, d1
   3ced0:	ldp	x19, x20, [sp, #16]
   3ced4:	ldp	x21, x22, [sp, #32]
   3ced8:	fdiv	d0, d0, d0
   3cedc:	ldr	x23, [sp, #48]
   3cee0:	ldp	x29, x30, [sp], #64
   3cee4:	ret

000000000003cee8 <__log2_finite@GLIBC_2.17>:
   3cee8:	fmov	x2, d0
   3ceec:	mov	x0, #0x5b5100000000        	// #100403450478592
   3cef0:	movk	x0, #0xc011, lsl #48
   3cef4:	mov	x1, #0xffff10a9ffffffff    	// #-263152646225921
   3cef8:	movk	x1, #0x2, lsl #48
   3cefc:	add	x0, x2, x0
   3cf00:	cmp	x0, x1
   3cf04:	lsr	x0, x2, #48
   3cf08:	b.ls	3cfc0 <__log2_finite@GLIBC_2.17+0xd8>  // b.plast
   3cf0c:	sub	w3, w0, #0x10
   3cf10:	mov	w1, #0x7fdf                	// #32735
   3cf14:	cmp	w3, w1
   3cf18:	b.hi	3d050 <__log2_finite@GLIBC_2.17+0x168>  // b.pmore
   3cf1c:	mov	x0, #0xc01a000000000000    	// #-4604367669032910848
   3cf20:	add	x0, x2, x0
   3cf24:	adrp	x4, 8a000 <f64xsubf128@@GLIBC_2.28+0x36280>
   3cf28:	add	x1, x4, #0xac8
   3cf2c:	ubfx	x3, x0, #46, #6
   3cf30:	and	x5, x0, #0xfff0000000000000
   3cf34:	add	x3, x3, #0x9
   3cf38:	sub	x2, x2, x5
   3cf3c:	fmov	d5, x2
   3cf40:	fmov	d2, #-1.000000000000000000e+00
   3cf44:	lsl	x3, x3, #4
   3cf48:	asr	x0, x0, #52
   3cf4c:	add	x5, x1, x3
   3cf50:	ldr	d4, [x4, #2760]
   3cf54:	scvtf	d1, w0
   3cf58:	ldr	d16, [x1, #56]
   3cf5c:	ldr	d0, [x1, x3]
   3cf60:	ldr	d3, [x5, #8]
   3cf64:	ldr	d18, [x1, #8]
   3cf68:	fmadd	d2, d5, d0, d2
   3cf6c:	ldp	d5, d7, [x1, #24]
   3cf70:	fadd	d1, d1, d3
   3cf74:	ldp	d6, d0, [x1, #40]
   3cf78:	ldr	d3, [x1, #16]
   3cf7c:	fmadd	d7, d6, d2, d7
   3cf80:	fmul	d6, d4, d2
   3cf84:	fmadd	d0, d16, d2, d0
   3cf88:	fmadd	d3, d5, d2, d3
   3cf8c:	fmul	d5, d2, d2
   3cf90:	fnmsub	d4, d2, d4, d6
   3cf94:	fadd	d16, d6, d1
   3cf98:	fmul	d17, d5, d5
   3cf9c:	fmadd	d2, d18, d2, d4
   3cfa0:	fmadd	d3, d7, d5, d3
   3cfa4:	fsub	d1, d1, d16
   3cfa8:	fmadd	d3, d0, d17, d3
   3cfac:	fadd	d1, d1, d6
   3cfb0:	fadd	d0, d1, d2
   3cfb4:	fmadd	d0, d5, d3, d0
   3cfb8:	fadd	d0, d0, d16
   3cfbc:	ret
   3cfc0:	mov	x0, #0x3ff0000000000000    	// #4607182418800017408
   3cfc4:	cmp	x2, x0
   3cfc8:	b.eq	3d0a4 <__log2_finite@GLIBC_2.17+0x1bc>  // b.none
   3cfcc:	adrp	x1, 8a000 <f64xsubf128@@GLIBC_2.28+0x36280>
   3cfd0:	add	x0, x1, #0xac8
   3cfd4:	fmov	d1, #1.000000000000000000e+00
   3cfd8:	ldr	d3, [x1, #2760]
   3cfdc:	fsub	d0, d0, d1
   3cfe0:	ldr	d16, [x0, #136]
   3cfe4:	ldp	d1, d6, [x0, #64]
   3cfe8:	ldp	d17, d5, [x0, #120]
   3cfec:	fmul	d4, d0, d0
   3cff0:	fmadd	d6, d6, d0, d1
   3cff4:	ldr	d7, [x0, #104]
   3cff8:	ldp	d20, d2, [x0, #88]
   3cffc:	fmadd	d16, d16, d0, d5
   3d000:	ldr	d5, [x0, #112]
   3d004:	fmul	d1, d3, d0
   3d008:	fmadd	d5, d17, d0, d5
   3d00c:	fnmsub	d3, d0, d3, d1
   3d010:	fmadd	d7, d7, d0, d2
   3d014:	ldr	d2, [x0, #80]
   3d018:	fmadd	d2, d20, d0, d2
   3d01c:	fmul	d18, d4, d4
   3d020:	ldr	d19, [x0, #8]
   3d024:	fmadd	d17, d6, d4, d1
   3d028:	fmadd	d5, d16, d4, d5
   3d02c:	fmadd	d0, d19, d0, d3
   3d030:	fmadd	d2, d7, d4, d2
   3d034:	fsub	d1, d1, d17
   3d038:	fmadd	d1, d6, d4, d1
   3d03c:	fmadd	d2, d5, d18, d2
   3d040:	fadd	d0, d1, d0
   3d044:	fmadd	d0, d2, d18, d0
   3d048:	fadd	d0, d17, d0
   3d04c:	ret
   3d050:	cmp	xzr, x2, lsl #1
   3d054:	b.eq	3d09c <__log2_finite@GLIBC_2.17+0x1b4>  // b.none
   3d058:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   3d05c:	cmp	x2, x1
   3d060:	b.eq	3cfbc <__log2_finite@GLIBC_2.17+0xd4>  // b.none
   3d064:	tst	x0, #0x8000
   3d068:	b.ne	3d098 <__log2_finite@GLIBC_2.17+0x1b0>  // b.any
   3d06c:	and	w0, w0, #0x7ff0
   3d070:	mov	w1, #0x7ff0                	// #32752
   3d074:	cmp	w0, w1
   3d078:	b.eq	3d098 <__log2_finite@GLIBC_2.17+0x1b0>  // b.none
   3d07c:	mov	x0, #0x4330000000000000    	// #4841369599423283200
   3d080:	fmov	d1, x0
   3d084:	mov	x2, #0xfcc0000000000000    	// #-234187180623265792
   3d088:	fmul	d0, d0, d1
   3d08c:	fmov	x0, d0
   3d090:	add	x2, x0, x2
   3d094:	b	3cf1c <__log2_finite@GLIBC_2.17+0x34>
   3d098:	b	51b68 <__exp2f_finite@GLIBC_2.17+0x5100>
   3d09c:	mov	w0, #0x1                   	// #1
   3d0a0:	b	51b48 <__exp2f_finite@GLIBC_2.17+0x50e0>
   3d0a4:	movi	d0, #0x0
   3d0a8:	ret
   3d0ac:	nop

000000000003d0b0 <round@@GLIBC_2.17>:
   3d0b0:	frinta	d0, d0
   3d0b4:	ret

000000000003d0b8 <nearbyint@@GLIBC_2.17>:
   3d0b8:	frinti	d0, d0
   3d0bc:	ret

000000000003d0c0 <sincos@@GLIBC_2.17>:
   3d0c0:	stp	x29, x30, [sp, #-96]!
   3d0c4:	mov	x29, sp
   3d0c8:	stp	x21, x22, [sp, #32]
   3d0cc:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3d0d0:	ldr	x2, [x21, #4032]
   3d0d4:	stp	x19, x20, [sp, #16]
   3d0d8:	mov	x20, x0
   3d0dc:	mov	x19, x1
   3d0e0:	ldr	x0, [x2]
   3d0e4:	str	x0, [sp, #88]
   3d0e8:	mov	x0, #0x0                   	// #0
   3d0ec:	str	x23, [sp, #48]
   3d0f0:	mrs	x22, fpcr
   3d0f4:	ands	w23, w22, #0xc00000
   3d0f8:	b.ne	3d620 <sincos@@GLIBC_2.17+0x560>  // b.any
   3d0fc:	fmov	x2, d0
   3d100:	mov	w3, #0x68fc                	// #26876
   3d104:	movk	w3, #0x4003, lsl #16
   3d108:	ubfx	x2, x2, #32, #31
   3d10c:	cmp	w2, w3
   3d110:	b.gt	3d278 <sincos@@GLIBC_2.17+0x1b8>
   3d114:	mov	w0, #0x3e3fffff            	// #1044381695
   3d118:	fabs	d1, d0
   3d11c:	cmp	w2, w0
   3d120:	b.le	3d2d0 <sincos@@GLIBC_2.17+0x210>
   3d124:	mov	w0, #0x5fff                	// #24575
   3d128:	movk	w0, #0x3feb, lsl #16
   3d12c:	cmp	w2, w0
   3d130:	b.gt	3d2f8 <sincos@@GLIBC_2.17+0x238>
   3d134:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   3d138:	fmov	d3, x0
   3d13c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d140:	fadd	d2, d1, d3
   3d144:	ldr	d4, [x0, #304]
   3d148:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   3d14c:	add	x0, x0, #0xc08
   3d150:	fmov	x1, d2
   3d154:	fcmpe	d1, d4
   3d158:	fsub	d2, d2, d3
   3d15c:	lsl	w1, w1, #2
   3d160:	add	w4, w1, #0x1
   3d164:	add	w3, w1, #0x2
   3d168:	add	w2, w1, #0x3
   3d16c:	fsub	d1, d1, d2
   3d170:	ldr	d16, [x0, w1, sxtw #3]
   3d174:	ldr	d17, [x0, w4, sxtw #3]
   3d178:	ldr	d7, [x0, w3, sxtw #3]
   3d17c:	ldr	d3, [x0, w2, sxtw #3]
   3d180:	b.mi	3d6f4 <sincos@@GLIBC_2.17+0x634>  // b.first
   3d184:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d188:	fmul	d4, d1, d1
   3d18c:	fcmpe	d0, #0.0
   3d190:	movi	d21, #0x0
   3d194:	ldr	d19, [x0, #344]
   3d198:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d19c:	ldr	d5, [x0, #352]
   3d1a0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d1a4:	ldr	d18, [x0, #360]
   3d1a8:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d1ac:	fmadd	d19, d4, d19, d18
   3d1b0:	fmov	d18, #5.000000000000000000e-01
   3d1b4:	ldr	d2, [x0, #368]
   3d1b8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d1bc:	fmadd	d2, d4, d5, d2
   3d1c0:	fmul	d5, d4, d1
   3d1c4:	fmov	d6, x0
   3d1c8:	fmov	d20, x0
   3d1cc:	fcsel	d6, d6, d21, ls  // ls = plast
   3d1d0:	fmadd	d18, d4, d19, d18
   3d1d4:	fmadd	d2, d5, d2, d6
   3d1d8:	fmul	d4, d4, d18
   3d1dc:	fmadd	d4, d6, d1, d4
   3d1e0:	fadd	d5, d2, d1
   3d1e4:	fmadd	d2, d5, d3, d17
   3d1e8:	fmsub	d2, d4, d16, d2
   3d1ec:	fmadd	d2, d5, d7, d2
   3d1f0:	fadd	d2, d2, d16
   3d1f4:	bit	v2.8b, v0.8b, v20.8b
   3d1f8:	fcmpe	d0, #0.0
   3d1fc:	movi	d4, #0x0
   3d200:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3d204:	fmov	d0, x2
   3d208:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d20c:	str	d2, [x20]
   3d210:	fcsel	d0, d0, d4, mi  // mi = first
   3d214:	ldr	d19, [x0, #352]
   3d218:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d21c:	fmov	d4, #5.000000000000000000e-01
   3d220:	ldr	d18, [x0, #344]
   3d224:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d228:	fadd	d0, d0, d1
   3d22c:	ldr	d5, [x0, #368]
   3d230:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d234:	ldr	d6, [x0, #360]
   3d238:	fmul	d2, d0, d0
   3d23c:	fmadd	d1, d2, d18, d6
   3d240:	fmadd	d5, d2, d19, d5
   3d244:	fmul	d6, d0, d2
   3d248:	fmadd	d1, d2, d1, d4
   3d24c:	fmadd	d0, d6, d5, d0
   3d250:	fmul	d2, d2, d1
   3d254:	fmsub	d1, d0, d17, d3
   3d258:	fmsub	d1, d2, d7, d1
   3d25c:	fmsub	d0, d0, d16, d1
   3d260:	fadd	d0, d0, d7
   3d264:	str	d0, [x19]
   3d268:	cbz	w23, 3d2a8 <sincos@@GLIBC_2.17+0x1e8>
   3d26c:	nop
   3d270:	msr	fpcr, x22
   3d274:	b	3d2a8 <sincos@@GLIBC_2.17+0x1e8>
   3d278:	mov	w0, #0x7fefffff            	// #2146435071
   3d27c:	cmp	w2, w0
   3d280:	b.le	3d444 <sincos@@GLIBC_2.17+0x384>
   3d284:	fabs	d2, d0
   3d288:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3d28c:	fmov	d1, x0
   3d290:	fcmp	d2, d1
   3d294:	b.gt	3d42c <sincos@@GLIBC_2.17+0x36c>
   3d298:	fdiv	d0, d0, d0
   3d29c:	str	d0, [x19]
   3d2a0:	str	d0, [x20]
   3d2a4:	cbnz	w23, 3d270 <sincos@@GLIBC_2.17+0x1b0>
   3d2a8:	ldr	x0, [x21, #4032]
   3d2ac:	ldr	x1, [sp, #88]
   3d2b0:	ldr	x0, [x0]
   3d2b4:	eor	x0, x1, x0
   3d2b8:	cbnz	x0, 3d750 <sincos@@GLIBC_2.17+0x690>
   3d2bc:	ldp	x19, x20, [sp, #16]
   3d2c0:	ldp	x21, x22, [sp, #32]
   3d2c4:	ldr	x23, [sp, #48]
   3d2c8:	ldp	x29, x30, [sp], #96
   3d2cc:	ret
   3d2d0:	mov	x0, #0x10000000000000      	// #4503599627370496
   3d2d4:	fmov	d2, x0
   3d2d8:	fcmpe	d1, d2
   3d2dc:	b.pl	3d2e4 <sincos@@GLIBC_2.17+0x224>  // b.nfrst
   3d2e0:	fmul	d1, d0, d0
   3d2e4:	fmov	d1, #1.000000000000000000e+00
   3d2e8:	str	d0, [x20]
   3d2ec:	str	d1, [x19]
   3d2f0:	cbz	w23, 3d2a8 <sincos@@GLIBC_2.17+0x1e8>
   3d2f4:	b	3d270 <sincos@@GLIBC_2.17+0x1b0>
   3d2f8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3d2fc:	fmov	d17, #5.000000000000000000e-01
   3d300:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   3d304:	add	x1, x1, #0xc08
   3d308:	ldr	d5, [x0, #576]
   3d30c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3d310:	ldr	d2, [x0, #568]
   3d314:	mov	x0, #0x42c8000000000000    	// #4812096201845374976
   3d318:	fsub	d1, d5, d1
   3d31c:	fmov	d6, x0
   3d320:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d324:	ldr	d23, [x0, #352]
   3d328:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d32c:	fadd	d7, d1, d2
   3d330:	ldr	d24, [x0, #344]
   3d334:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d338:	ldr	d18, [x0, #368]
   3d33c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d340:	fabs	d4, d7
   3d344:	fsub	d1, d1, d7
   3d348:	fcmpe	d7, #0.0
   3d34c:	ldr	d19, [x0, #360]
   3d350:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d354:	fmov	d16, x0
   3d358:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d35c:	fadd	d5, d1, d2
   3d360:	fadd	d2, d4, d6
   3d364:	ldr	d21, [x0, #304]
   3d368:	fsub	d6, d2, d6
   3d36c:	fneg	d25, d5
   3d370:	fmov	x0, d2
   3d374:	fcsel	d3, d25, d5, mi  // mi = first
   3d378:	fsub	d6, d4, d6
   3d37c:	fcmpe	d4, d21
   3d380:	lsl	w0, w0, #2
   3d384:	add	w4, w0, #0x1
   3d388:	add	w3, w0, #0x3
   3d38c:	add	w2, w0, #0x2
   3d390:	fadd	d3, d6, d3
   3d394:	ldr	d20, [x1, w0, sxtw #3]
   3d398:	ldr	d1, [x1, w4, sxtw #3]
   3d39c:	ldr	d22, [x1, w3, sxtw #3]
   3d3a0:	ldr	d21, [x1, w2, sxtw #3]
   3d3a4:	fmul	d4, d3, d3
   3d3a8:	fmadd	d26, d4, d23, d18
   3d3ac:	fmadd	d2, d4, d24, d19
   3d3b0:	fmul	d27, d3, d4
   3d3b4:	fmadd	d2, d4, d2, d17
   3d3b8:	fmadd	d3, d27, d26, d3
   3d3bc:	fmul	d4, d4, d2
   3d3c0:	fmsub	d2, d3, d1, d22
   3d3c4:	fmsub	d2, d4, d21, d2
   3d3c8:	fmsub	d2, d3, d20, d2
   3d3cc:	fadd	d2, d21, d2
   3d3d0:	bif	v0.8b, v2.8b, v16.8b
   3d3d4:	str	d0, [x20]
   3d3d8:	b.mi	3d69c <sincos@@GLIBC_2.17+0x5dc>  // b.first
   3d3dc:	fmul	d2, d6, d6
   3d3e0:	fcmpe	d7, #0.0
   3d3e4:	fmov	d0, d16
   3d3e8:	fmadd	d4, d2, d24, d19
   3d3ec:	fmadd	d18, d2, d23, d18
   3d3f0:	fmul	d3, d2, d6
   3d3f4:	fcsel	d5, d25, d5, ls  // ls = plast
   3d3f8:	fmadd	d4, d2, d4, d17
   3d3fc:	fmadd	d3, d3, d18, d5
   3d400:	fmul	d2, d2, d4
   3d404:	fadd	d3, d3, d6
   3d408:	fmadd	d5, d5, d6, d2
   3d40c:	fmadd	d1, d3, d22, d1
   3d410:	fmsub	d1, d5, d20, d1
   3d414:	fmadd	d1, d3, d21, d1
   3d418:	fadd	d1, d1, d20
   3d41c:	bsl	v0.8b, v7.8b, v1.8b
   3d420:	str	d0, [x19]
   3d424:	cbz	w23, 3d2a8 <sincos@@GLIBC_2.17+0x1e8>
   3d428:	b	3d270 <sincos@@GLIBC_2.17+0x1b0>
   3d42c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3d430:	ldr	x0, [x0, #3976]
   3d434:	mrs	x1, tpidr_el0
   3d438:	mov	w2, #0x21                  	// #33
   3d43c:	str	w2, [x1, x0]
   3d440:	b	3d298 <sincos@@GLIBC_2.17+0x1d8>
   3d444:	mov	w0, #0x21fa                	// #8698
   3d448:	movk	w0, #0x4199, lsl #16
   3d44c:	cmp	w2, w0
   3d450:	b.gt	3d684 <sincos@@GLIBC_2.17+0x5c4>
   3d454:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3d458:	ldr	d1, [x0, #2728]
   3d45c:	mov	x0, #0x4338000000000000    	// #4843621399236968448
   3d460:	fmov	d2, x0
   3d464:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d468:	fmadd	d1, d0, d1, d2
   3d46c:	ldr	d3, [x0, #384]
   3d470:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d474:	ldr	d4, [x0, #392]
   3d478:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d47c:	ldr	d6, [x0, #400]
   3d480:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d484:	ldr	d5, [x0, #408]
   3d488:	fsub	d2, d1, d2
   3d48c:	fmov	x0, d1
   3d490:	fmsub	d0, d2, d3, d0
   3d494:	and	w0, w0, #0x3
   3d498:	mov	w1, w0
   3d49c:	fmsub	d0, d2, d4, d0
   3d4a0:	fmsub	d1, d2, d6, d0
   3d4a4:	fmsub	d4, d2, d5, d1
   3d4a8:	fsub	d0, d0, d1
   3d4ac:	fmsub	d0, d2, d6, d0
   3d4b0:	fsub	d1, d1, d4
   3d4b4:	fmsub	d2, d2, d5, d1
   3d4b8:	fadd	d0, d0, d2
   3d4bc:	str	d0, [sp, #80]
   3d4c0:	sub	w1, w1, #0x1
   3d4c4:	cmp	w1, #0x1
   3d4c8:	b.hi	3d4d4 <sincos@@GLIBC_2.17+0x414>  // b.pmore
   3d4cc:	fneg	d4, d4
   3d4d0:	fneg	d0, d0
   3d4d4:	fabs	d2, d4
   3d4d8:	mov	x1, #0x42c8000000000000    	// #4812096201845374976
   3d4dc:	fmov	d3, x1
   3d4e0:	adrp	x1, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d4e4:	ands	w2, w0, #0x1
   3d4e8:	ldr	d5, [x1, #304]
   3d4ec:	csel	x1, x20, x19, eq  // eq = none
   3d4f0:	fadd	d1, d2, d3
   3d4f4:	cmp	w2, #0x0
   3d4f8:	csel	x19, x19, x20, eq  // eq = none
   3d4fc:	adrp	x2, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   3d500:	fcmpe	d2, d5
   3d504:	add	x2, x2, #0xc08
   3d508:	fmov	x3, d1
   3d50c:	fsub	d1, d1, d3
   3d510:	lsl	w3, w3, #2
   3d514:	fsub	d3, d2, d1
   3d518:	add	w6, w3, #0x1
   3d51c:	add	w5, w3, #0x2
   3d520:	add	w4, w3, #0x3
   3d524:	ldr	d17, [x2, w3, sxtw #3]
   3d528:	ldr	d18, [x2, w6, sxtw #3]
   3d52c:	ldr	d16, [x2, w5, sxtw #3]
   3d530:	ldr	d1, [x2, w4, sxtw #3]
   3d534:	b.mi	3d62c <sincos@@GLIBC_2.17+0x56c>  // b.first
   3d538:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d53c:	fmul	d5, d3, d3
   3d540:	fcmpe	d4, #0.0
   3d544:	fneg	d7, d0
   3d548:	ldr	d21, [x2, #344]
   3d54c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d550:	fmov	d19, #5.000000000000000000e-01
   3d554:	ldr	d6, [x2, #352]
   3d558:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d55c:	fcsel	d7, d7, d0, ls  // ls = plast
   3d560:	ldr	d20, [x2, #360]
   3d564:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d568:	fmadd	d20, d5, d21, d20
   3d56c:	ldr	d2, [x2, #368]
   3d570:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3d574:	fmadd	d2, d5, d6, d2
   3d578:	fmul	d6, d5, d3
   3d57c:	fmov	d21, x2
   3d580:	fmadd	d19, d5, d20, d19
   3d584:	fmadd	d2, d6, d2, d7
   3d588:	fmul	d5, d5, d19
   3d58c:	fmadd	d5, d7, d3, d5
   3d590:	fadd	d6, d2, d3
   3d594:	fmadd	d2, d6, d1, d18
   3d598:	fmsub	d2, d5, d17, d2
   3d59c:	fmadd	d2, d6, d16, d2
   3d5a0:	fadd	d2, d2, d17
   3d5a4:	bit	v2.8b, v4.8b, v21.8b
   3d5a8:	fcmpe	d4, #0.0
   3d5ac:	fneg	d20, d0
   3d5b0:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d5b4:	str	d2, [x1]
   3d5b8:	fmov	d4, #5.000000000000000000e-01
   3d5bc:	ldr	d19, [x2, #352]
   3d5c0:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d5c4:	fcsel	d0, d20, d0, mi  // mi = first
   3d5c8:	tst	x0, #0x2
   3d5cc:	ldr	d7, [x2, #344]
   3d5d0:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d5d4:	ldr	d5, [x2, #368]
   3d5d8:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d5dc:	fadd	d0, d0, d3
   3d5e0:	ldr	d6, [x2, #360]
   3d5e4:	fmul	d2, d0, d0
   3d5e8:	fmadd	d3, d2, d7, d6
   3d5ec:	fmadd	d5, d2, d19, d5
   3d5f0:	fmul	d6, d0, d2
   3d5f4:	fmadd	d3, d2, d3, d4
   3d5f8:	fmadd	d0, d6, d5, d0
   3d5fc:	fmul	d2, d2, d3
   3d600:	fmsub	d1, d0, d18, d1
   3d604:	fmsub	d1, d2, d16, d1
   3d608:	fmsub	d0, d0, d17, d1
   3d60c:	fadd	d0, d0, d16
   3d610:	fneg	d1, d0
   3d614:	fcsel	d0, d1, d0, ne  // ne = any
   3d618:	str	d0, [x19]
   3d61c:	b	3d424 <sincos@@GLIBC_2.17+0x364>
   3d620:	eor	w0, w23, w22
   3d624:	msr	fpcr, x0
   3d628:	b	3d0fc <sincos@@GLIBC_2.17+0x3c>
   3d62c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d630:	fmul	d2, d4, d4
   3d634:	fmov	d5, #5.000000000000000000e-01
   3d638:	ldr	d21, [x2, #312]
   3d63c:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d640:	fmul	d5, d0, d5
   3d644:	ldr	d20, [x2, #320]
   3d648:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d64c:	fmadd	d20, d2, d21, d20
   3d650:	ldr	d19, [x2, #328]
   3d654:	adrp	x2, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d658:	ldr	d7, [x2, #336]
   3d65c:	mov	x2, #0x5555555555555555    	// #6148914691236517205
   3d660:	movk	x2, #0xbfc5, lsl #48
   3d664:	fmov	d6, x2
   3d668:	fmadd	d19, d2, d20, d19
   3d66c:	fmadd	d7, d2, d19, d7
   3d670:	fmadd	d6, d2, d7, d6
   3d674:	fnmsub	d5, d6, d4, d5
   3d678:	fmadd	d2, d2, d5, d0
   3d67c:	fadd	d2, d2, d4
   3d680:	b	3d5a8 <sincos@@GLIBC_2.17+0x4e8>
   3d684:	add	x1, sp, #0x50
   3d688:	add	x0, sp, #0x48
   3d68c:	bl	4db10 <__exp2f_finite@GLIBC_2.17+0x10a8>
   3d690:	and	w1, w0, #0x3
   3d694:	ldp	d4, d0, [sp, #72]
   3d698:	b	3d4c0 <sincos@@GLIBC_2.17+0x400>
   3d69c:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d6a0:	fmul	d0, d7, d7
   3d6a4:	fmul	d4, d5, d17
   3d6a8:	ldr	d16, [x0, #312]
   3d6ac:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d6b0:	ldr	d6, [x0, #320]
   3d6b4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d6b8:	fmadd	d6, d0, d16, d6
   3d6bc:	ldr	d3, [x0, #328]
   3d6c0:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d6c4:	ldr	d2, [x0, #336]
   3d6c8:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   3d6cc:	movk	x0, #0xbfc5, lsl #48
   3d6d0:	fmov	d1, x0
   3d6d4:	fmadd	d3, d0, d6, d3
   3d6d8:	fmadd	d2, d0, d3, d2
   3d6dc:	fmadd	d1, d0, d2, d1
   3d6e0:	fnmsub	d1, d7, d1, d4
   3d6e4:	fmadd	d0, d0, d1, d5
   3d6e8:	fadd	d0, d7, d0
   3d6ec:	str	d0, [x19]
   3d6f0:	b	3d424 <sincos@@GLIBC_2.17+0x364>
   3d6f4:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d6f8:	fmul	d5, d0, d0
   3d6fc:	ldr	d2, [x0, #312]
   3d700:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d704:	ldr	d20, [x0, #320]
   3d708:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d70c:	fmadd	d20, d5, d2, d20
   3d710:	movi	d2, #0x0
   3d714:	ldr	d19, [x0, #328]
   3d718:	adrp	x0, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   3d71c:	ldr	d18, [x0, #336]
   3d720:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   3d724:	movk	x0, #0xbfc5, lsl #48
   3d728:	fmov	d6, x0
   3d72c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d730:	fmov	d4, x0
   3d734:	fmadd	d19, d5, d20, d19
   3d738:	fmadd	d18, d5, d19, d18
   3d73c:	fmadd	d6, d5, d18, d6
   3d740:	fmadd	d4, d0, d6, d4
   3d744:	fmadd	d2, d5, d4, d2
   3d748:	fadd	d2, d0, d2
   3d74c:	b	3d1f8 <sincos@@GLIBC_2.17+0x138>
   3d750:	bl	ba70 <__stack_chk_fail@plt>
   3d754:	nop

000000000003d758 <fma@@GLIBC_2.17>:
   3d758:	fmadd	d0, d0, d1, d2
   3d75c:	ret

000000000003d760 <lrint@@GLIBC_2.17>:
   3d760:	frintx	d0, d0
   3d764:	fcvtzs	x0, d0
   3d768:	ret
   3d76c:	nop

000000000003d770 <llrint@@GLIBC_2.17>:
   3d770:	frintx	d0, d0
   3d774:	fcvtzs	x0, d0
   3d778:	ret
   3d77c:	nop

000000000003d780 <lround@@GLIBC_2.17>:
   3d780:	fcvtas	x0, d0
   3d784:	ret

000000000003d788 <llround@@GLIBC_2.17>:
   3d788:	fcvtas	x0, d0
   3d78c:	ret

000000000003d790 <__exp10_finite@GLIBC_2.17>:
   3d790:	fabs	d3, d0
   3d794:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3d798:	fmov	d1, x0
   3d79c:	fcmp	d3, d1
   3d7a0:	b.hi	3d7f8 <__exp10_finite@GLIBC_2.17+0x68>  // b.pmore
   3d7a4:	fmov	d2, d0
   3d7a8:	mov	x0, #0xc00000000000        	// #211106232532992
   3d7ac:	movk	x0, #0xc074, lsl #48
   3d7b0:	fmov	d0, x0
   3d7b4:	fcmpe	d2, d0
   3d7b8:	b.mi	3d7e8 <__exp10_finite@GLIBC_2.17+0x58>  // b.first
   3d7bc:	mov	x0, #0x500000000000        	// #87960930222080
   3d7c0:	movk	x0, #0x4073, lsl #48
   3d7c4:	fmov	d0, x0
   3d7c8:	fcmpe	d2, d0
   3d7cc:	b.gt	3d7fc <__exp10_finite@GLIBC_2.17+0x6c>
   3d7d0:	mov	x0, #0x3c70000000000000    	// #4354980839667269632
   3d7d4:	fmov	d1, x0
   3d7d8:	fmov	d0, #1.000000000000000000e+00
   3d7dc:	fcmpe	d3, d1
   3d7e0:	b.pl	3d804 <__exp10_finite@GLIBC_2.17+0x74>  // b.nfrst
   3d7e4:	ret
   3d7e8:	mov	x0, #0x10000000000000      	// #4503599627370496
   3d7ec:	fmov	d0, x0
   3d7f0:	fmul	d0, d0, d0
   3d7f4:	ret
   3d7f8:	b	333e8 <__exp_finite@GLIBC_2.17>
   3d7fc:	fmul	d0, d1, d1
   3d800:	ret
   3d804:	fmov	x0, d2
   3d808:	stp	x29, x30, [sp, #-32]!
   3d80c:	adrp	x1, 84000 <f64xsubf128@@GLIBC_2.28+0x30280>
   3d810:	mov	x29, sp
   3d814:	ldr	d3, [x1, #2728]
   3d818:	adrp	x2, 84000 <f64xsubf128@@GLIBC_2.28+0x30280>
   3d81c:	and	w1, w0, #0xf8000000
   3d820:	stp	d8, d9, [sp, #16]
   3d824:	ldr	d1, [x2, #2736]
   3d828:	bfxil	x0, x1, #0, #32
   3d82c:	fmov	d9, x0
   3d830:	adrp	x2, 84000 <f64xsubf128@@GLIBC_2.28+0x30280>
   3d834:	fsub	d2, d2, d9
   3d838:	ldr	d0, [x2, #2744]
   3d83c:	fmul	d2, d2, d3
   3d840:	fmul	d0, d9, d0
   3d844:	fmadd	d9, d9, d1, d2
   3d848:	bl	333e8 <__exp_finite@GLIBC_2.17>
   3d84c:	fmov	d8, d0
   3d850:	fmov	d0, d9
   3d854:	bl	333e8 <__exp_finite@GLIBC_2.17>
   3d858:	fmul	d0, d8, d0
   3d85c:	ldp	d8, d9, [sp, #16]
   3d860:	ldp	x29, x30, [sp], #32
   3d864:	ret

000000000003d868 <__issignaling@@GLIBC_2.18>:
   3d868:	fmov	x0, d0
   3d86c:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   3d870:	eor	x0, x0, #0x8000000000000
   3d874:	and	x0, x0, #0x7fffffffffffffff
   3d878:	cmp	x0, x1
   3d87c:	cset	w0, hi  // hi = pmore
   3d880:	ret
   3d884:	nop
   3d888:	fmov	x1, d0
   3d88c:	and	x0, x1, #0x7fffffffffffffff
   3d890:	asr	x1, x1, #62
   3d894:	eor	x2, x0, #0x7ff0000000000000
   3d898:	neg	x0, x2
   3d89c:	orr	x0, x0, x2
   3d8a0:	asr	x0, x0, #63
   3d8a4:	bic	w0, w1, w0
   3d8a8:	ret
   3d8ac:	nop
   3d8b0:	fmov	x0, d0
   3d8b4:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   3d8b8:	and	x0, x0, #0x7fffffffffffffff
   3d8bc:	sub	x0, x1, x0
   3d8c0:	lsr	x0, x0, #63
   3d8c4:	ret

000000000003d8c8 <__finite@@GLIBC_2.17>:
   3d8c8:	fmov	x0, d0
   3d8cc:	mov	x1, #0x8010000000000000    	// #-9218868437227405312
   3d8d0:	and	x0, x0, #0x7ff0000000000000
   3d8d4:	add	x0, x0, x1
   3d8d8:	lsr	x0, x0, #63
   3d8dc:	ret

000000000003d8e0 <copysign@@GLIBC_2.17>:
   3d8e0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d8e4:	fmov	d2, x0
   3d8e8:	bit	v0.8b, v1.8b, v2.8b
   3d8ec:	ret

000000000003d8f0 <modf@@GLIBC_2.17>:
   3d8f0:	fmov	x2, d0
   3d8f4:	fmov	d1, d0
   3d8f8:	ubfx	x1, x2, #52, #11
   3d8fc:	sub	w1, w1, #0x3ff
   3d900:	cmp	w1, #0x33
   3d904:	b.gt	3d92c <modf@@GLIBC_2.17+0x3c>
   3d908:	tbnz	w1, #31, 3d968 <modf@@GLIBC_2.17+0x78>
   3d90c:	mov	x3, #0xfffffffffffff       	// #4503599627370495
   3d910:	lsr	x1, x3, x1
   3d914:	tst	x2, x1
   3d918:	b.ne	3d954 <modf@@GLIBC_2.17+0x64>  // b.any
   3d91c:	and	x1, x2, #0x8000000000000000
   3d920:	fmov	d0, x1
   3d924:	str	d1, [x0]
   3d928:	ret
   3d92c:	fmov	d0, #1.000000000000000000e+00
   3d930:	cmp	w1, #0x400
   3d934:	fmul	d0, d1, d0
   3d938:	str	d0, [x0]
   3d93c:	b.ne	3d948 <modf@@GLIBC_2.17+0x58>  // b.any
   3d940:	tst	x2, #0xfffffffffffff
   3d944:	b.ne	3d928 <modf@@GLIBC_2.17+0x38>  // b.any
   3d948:	and	x0, x2, #0x8000000000000000
   3d94c:	fmov	d0, x0
   3d950:	ret
   3d954:	bic	x1, x2, x1
   3d958:	fmov	d2, x1
   3d95c:	str	x1, [x0]
   3d960:	fsub	d0, d0, d2
   3d964:	ret
   3d968:	and	x2, x2, #0x8000000000000000
   3d96c:	str	x2, [x0]
   3d970:	ret
   3d974:	nop
   3d978:	fmov	x1, d0
   3d97c:	fmov	d2, d0
   3d980:	tst	x1, #0x7ff0000000000000
   3d984:	ubfx	x2, x1, #52, #11
   3d988:	b.eq	3da10 <modf@@GLIBC_2.17+0x120>  // b.none
   3d98c:	cmp	x2, #0x7ff
   3d990:	b.eq	3da34 <modf@@GLIBC_2.17+0x144>  // b.none
   3d994:	mov	w3, #0xffff3cb0            	// #-50000
   3d998:	cmp	w0, w3
   3d99c:	b.lt	3d9f4 <modf@@GLIBC_2.17+0x104>  // b.tstop
   3d9a0:	mov	w3, #0xc350                	// #50000
   3d9a4:	cmp	w0, w3
   3d9a8:	b.gt	3d9d0 <modf@@GLIBC_2.17+0xe0>
   3d9ac:	add	x0, x2, w0, sxtw
   3d9b0:	cmp	x0, #0x7fe
   3d9b4:	b.gt	3d9d0 <modf@@GLIBC_2.17+0xe0>
   3d9b8:	cmp	x0, #0x0
   3d9bc:	b.le	3d9ec <modf@@GLIBC_2.17+0xfc>
   3d9c0:	and	x1, x1, #0x800fffffffffffff
   3d9c4:	orr	x0, x1, x0, lsl #52
   3d9c8:	fmov	d0, x0
   3d9cc:	ret
   3d9d0:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   3d9d4:	ldr	d1, [x0, #1928]
   3d9d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d9dc:	fmov	d0, x0
   3d9e0:	bsl	v0.8b, v2.8b, v1.8b
   3d9e4:	fmul	d0, d0, d1
   3d9e8:	ret
   3d9ec:	cmn	x0, #0x35
   3d9f0:	b.ge	3da3c <modf@@GLIBC_2.17+0x14c>  // b.tcont
   3d9f4:	adrp	x0, 82000 <f64xsubf128@@GLIBC_2.28+0x2e280>
   3d9f8:	ldr	d1, [x0, #4016]
   3d9fc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3da00:	fmov	d0, x0
   3da04:	bsl	v0.8b, v2.8b, v1.8b
   3da08:	fmul	d0, d0, d1
   3da0c:	ret
   3da10:	tst	x1, #0xfffffffffffff
   3da14:	b.eq	3d9cc <modf@@GLIBC_2.17+0xdc>  // b.none
   3da18:	mov	x1, #0x4350000000000000    	// #4850376798678024192
   3da1c:	fmov	d0, x1
   3da20:	fmul	d2, d2, d0
   3da24:	fmov	x1, d2
   3da28:	ubfx	x2, x1, #52, #11
   3da2c:	sub	x2, x2, #0x36
   3da30:	b	3d994 <modf@@GLIBC_2.17+0xa4>
   3da34:	fadd	d0, d0, d0
   3da38:	ret
   3da3c:	add	x0, x0, #0x36
   3da40:	and	x1, x1, #0x800fffffffffffff
   3da44:	mov	x2, #0x3c90000000000000    	// #4363988038922010624
   3da48:	fmov	d0, x2
   3da4c:	orr	x0, x1, x0, lsl #52
   3da50:	fmov	d1, x0
   3da54:	fmul	d0, d1, d0
   3da58:	ret
   3da5c:	nop

000000000003da60 <frexp@@GLIBC_2.17>:
   3da60:	fmov	x1, d0
   3da64:	movi	d1, #0x0
   3da68:	ubfx	x2, x1, #52, #11
   3da6c:	cmp	w2, #0x7ff
   3da70:	fccmp	d0, d1, #0x4, ne  // ne = any
   3da74:	b.eq	3da94 <frexp@@GLIBC_2.17+0x34>  // b.none
   3da78:	sub	w3, w2, #0x3fe
   3da7c:	cbz	w2, 3daac <frexp@@GLIBC_2.17+0x4c>
   3da80:	and	x1, x1, #0x800fffffffffffff
   3da84:	str	w3, [x0]
   3da88:	orr	x1, x1, #0x3fe0000000000000
   3da8c:	fmov	d0, x1
   3da90:	ret
   3da94:	fadd	d0, d0, d0
   3da98:	mov	w3, #0x0                   	// #0
   3da9c:	str	w3, [x0]
   3daa0:	fmov	x1, d0
   3daa4:	fmov	d0, x1
   3daa8:	ret
   3daac:	mov	x1, #0x4350000000000000    	// #4850376798678024192
   3dab0:	fmov	d1, x1
   3dab4:	fmul	d0, d0, d1
   3dab8:	fmov	x1, d0
   3dabc:	ubfx	x3, x1, #52, #11
   3dac0:	sub	w3, w3, #0x434
   3dac4:	b	3da80 <frexp@@GLIBC_2.17+0x20>

000000000003dac8 <__signbit@@GLIBC_2.17>:
   3dac8:	fmov	x0, d0
   3dacc:	lsr	x0, x0, #63
   3dad0:	ret
   3dad4:	nop

000000000003dad8 <ldexp@@GLIBC_2.17>:
   3dad8:	stp	x29, x30, [sp, #-32]!
   3dadc:	fabs	d2, d0
   3dae0:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
   3dae4:	mov	x29, sp
   3dae8:	str	d8, [sp, #16]
   3daec:	fmov	d8, x1
   3daf0:	fmov	d1, d0
   3daf4:	fcmp	d2, d8
   3daf8:	b.hi	3db04 <ldexp@@GLIBC_2.17+0x2c>  // b.pmore
   3dafc:	fcmp	d0, #0.0
   3db00:	b.ne	3db14 <ldexp@@GLIBC_2.17+0x3c>  // b.any
   3db04:	fadd	d0, d1, d1
   3db08:	ldr	d8, [sp, #16]
   3db0c:	ldp	x29, x30, [sp], #32
   3db10:	ret
   3db14:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   3db18:	fabs	d1, d0
   3db1c:	fcmp	d1, d8
   3db20:	b.ls	3db44 <ldexp@@GLIBC_2.17+0x6c>  // b.plast
   3db24:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3db28:	ldr	x0, [x0, #3976]
   3db2c:	mrs	x1, tpidr_el0
   3db30:	mov	w2, #0x22                  	// #34
   3db34:	ldr	d8, [sp, #16]
   3db38:	str	w2, [x1, x0]
   3db3c:	ldp	x29, x30, [sp], #32
   3db40:	ret
   3db44:	fcmp	d0, #0.0
   3db48:	b.ne	3db08 <ldexp@@GLIBC_2.17+0x30>  // b.any
   3db4c:	b	3db24 <ldexp@@GLIBC_2.17+0x4c>
   3db50:	ldr	d1, [x0]
   3db54:	mov	w0, #0xffffffff            	// #-1
   3db58:	ldr	d0, [x1]
   3db5c:	fabs	d1, d1
   3db60:	fabs	d0, d0
   3db64:	fcmpe	d1, d0
   3db68:	b.mi	3db74 <ldexp@@GLIBC_2.17+0x9c>  // b.first
   3db6c:	fcmp	d1, d0
   3db70:	cset	w0, ne  // ne = any
   3db74:	ret
   3db78:	stp	x29, x30, [sp, #-112]!
   3db7c:	mov	x29, sp
   3db80:	stp	x21, x22, [sp, #32]
   3db84:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3db88:	ldr	x0, [x21, #4032]
   3db8c:	stp	x19, x20, [sp, #16]
   3db90:	ldr	x1, [x0]
   3db94:	str	x1, [sp, #104]
   3db98:	mov	x1, #0x0                   	// #0
   3db9c:	stp	x23, x24, [sp, #48]
   3dba0:	mrs	x23, fpcr
   3dba4:	ands	w24, w23, #0xc00000
   3dba8:	b.ne	3dc6c <ldexp@@GLIBC_2.17+0x194>  // b.any
   3dbac:	fmul	d3, d0, d0
   3dbb0:	fmul	d2, d1, d1
   3dbb4:	fnmsub	d0, d0, d0, d3
   3dbb8:	fnmsub	d1, d1, d1, d2
   3dbbc:	fmov	d4, #-1.000000000000000000e+00
   3dbc0:	add	x0, sp, #0x40
   3dbc4:	adrp	x3, 3d000 <__log2_finite@GLIBC_2.17+0x118>
   3dbc8:	add	x3, x3, #0xb50
   3dbcc:	add	x19, x0, #0x8
   3dbd0:	mov	x22, x3
   3dbd4:	mov	x20, #0x4                   	// #4
   3dbd8:	mov	x2, #0x8                   	// #8
   3dbdc:	mov	x1, #0x5                   	// #5
   3dbe0:	str	d4, [sp, #96]
   3dbe4:	stp	d0, d3, [sp, #64]
   3dbe8:	stp	d1, d2, [sp, #80]
   3dbec:	bl	ba30 <qsort@plt>
   3dbf0:	mov	x1, x20
   3dbf4:	ldp	d1, d0, [x19, #-8]
   3dbf8:	mov	x0, x19
   3dbfc:	mov	x3, x22
   3dc00:	mov	x2, #0x8                   	// #8
   3dc04:	fadd	d2, d0, d1
   3dc08:	fsub	d0, d0, d2
   3dc0c:	fadd	d0, d0, d1
   3dc10:	stp	d0, d2, [x19, #-8]
   3dc14:	bl	ba30 <qsort@plt>
   3dc18:	add	x19, x19, #0x8
   3dc1c:	subs	x20, x20, #0x1
   3dc20:	b.ne	3dbf0 <ldexp@@GLIBC_2.17+0x118>  // b.any
   3dc24:	ldp	d1, d0, [sp, #88]
   3dc28:	ldp	d2, d3, [sp, #72]
   3dc2c:	fadd	d0, d0, d1
   3dc30:	ldr	d1, [sp, #64]
   3dc34:	fadd	d0, d0, d3
   3dc38:	fadd	d0, d0, d2
   3dc3c:	fadd	d0, d0, d1
   3dc40:	cbnz	w24, 3dc78 <ldexp@@GLIBC_2.17+0x1a0>
   3dc44:	ldr	x21, [x21, #4032]
   3dc48:	ldr	x1, [sp, #104]
   3dc4c:	ldr	x0, [x21]
   3dc50:	eor	x0, x1, x0
   3dc54:	cbnz	x0, 3dc80 <ldexp@@GLIBC_2.17+0x1a8>
   3dc58:	ldp	x19, x20, [sp, #16]
   3dc5c:	ldp	x21, x22, [sp, #32]
   3dc60:	ldp	x23, x24, [sp, #48]
   3dc64:	ldp	x29, x30, [sp], #112
   3dc68:	ret
   3dc6c:	eor	w0, w24, w23
   3dc70:	msr	fpcr, x0
   3dc74:	b	3dbac <ldexp@@GLIBC_2.17+0xd4>
   3dc78:	msr	fpcr, x23
   3dc7c:	b	3dc44 <ldexp@@GLIBC_2.17+0x16c>
   3dc80:	bl	ba70 <__stack_chk_fail@plt>
   3dc84:	nop
   3dc88:	fmov	d6, d0
   3dc8c:	mrs	x3, fpcr
   3dc90:	ands	w4, w3, #0xc00000
   3dc94:	b.ne	3dcec <ldexp@@GLIBC_2.17+0x214>  // b.any
   3dc98:	fdiv	d5, d1, d0
   3dc9c:	cmp	w0, #0x1
   3dca0:	str	d5, [x1]
   3dca4:	b.le	3dce8 <ldexp@@GLIBC_2.17+0x210>
   3dca8:	fmov	d0, d6
   3dcac:	mov	w2, #0x1                   	// #1
   3dcb0:	scvtf	d3, w2
   3dcb4:	fmov	d4, d0
   3dcb8:	add	w2, w2, #0x1
   3dcbc:	cmp	w0, w2
   3dcc0:	fadd	d2, d3, d6
   3dcc4:	fmul	d0, d0, d2
   3dcc8:	fnmsub	d3, d4, d2, d0
   3dccc:	fdiv	d2, d1, d2
   3dcd0:	fdiv	d3, d3, d0
   3dcd4:	fadd	d2, d2, d5
   3dcd8:	fadd	d5, d3, d2
   3dcdc:	str	d5, [x1]
   3dce0:	b.ne	3dcb0 <ldexp@@GLIBC_2.17+0x1d8>  // b.any
   3dce4:	cbnz	w4, 3dd04 <ldexp@@GLIBC_2.17+0x22c>
   3dce8:	ret
   3dcec:	eor	w2, w4, w3
   3dcf0:	msr	fpcr, x2
   3dcf4:	cmp	w0, #0x1
   3dcf8:	fdiv	d5, d1, d0
   3dcfc:	str	d5, [x1]
   3dd00:	b.gt	3dca8 <ldexp@@GLIBC_2.17+0x1d0>
   3dd04:	msr	fpcr, x3
   3dd08:	ret
   3dd0c:	nop
   3dd10:	fmov	d1, #2.500000000000000000e-01
   3dd14:	fcmpe	d0, d1
   3dd18:	b.hi	3dd2c <ldexp@@GLIBC_2.17+0x254>  // b.pmore
   3dd1c:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3dd20:	ldr	d1, [x0, #2416]
   3dd24:	fmul	d0, d0, d1
   3dd28:	b	393c8 <sin@@GLIBC_2.17>
   3dd2c:	fmov	d1, #5.000000000000000000e-01
   3dd30:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3dd34:	fsub	d0, d1, d0
   3dd38:	ldr	d2, [x0, #2416]
   3dd3c:	fmul	d0, d0, d2
   3dd40:	b	39ae8 <cos@@GLIBC_2.17>
   3dd44:	nop
   3dd48:	fmov	d1, #2.500000000000000000e-01
   3dd4c:	fcmpe	d0, d1
   3dd50:	b.hi	3dd64 <ldexp@@GLIBC_2.17+0x28c>  // b.pmore
   3dd54:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3dd58:	ldr	d1, [x0, #2416]
   3dd5c:	fmul	d0, d0, d1
   3dd60:	b	39ae8 <cos@@GLIBC_2.17>
   3dd64:	fmov	d1, #5.000000000000000000e-01
   3dd68:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3dd6c:	fsub	d0, d1, d0
   3dd70:	ldr	d2, [x0, #2416]
   3dd74:	fmul	d0, d0, d2
   3dd78:	b	393c8 <sin@@GLIBC_2.17>
   3dd7c:	nop
   3dd80:	stp	x29, x30, [sp, #-256]!
   3dd84:	fmov	d3, #-2.000000000000000000e+00
   3dd88:	mov	x29, sp
   3dd8c:	stp	x19, x20, [sp, #16]
   3dd90:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3dd94:	ldr	x1, [x19, #4032]
   3dd98:	stp	d10, d11, [sp, #80]
   3dd9c:	fmov	d11, d0
   3dda0:	fmul	d0, d0, d3
   3dda4:	ldr	x2, [x1]
   3dda8:	str	x2, [sp, #248]
   3ddac:	mov	x2, #0x0                   	// #0
   3ddb0:	fcvtms	w2, d0
   3ddb4:	tbz	w2, #0, 3dff8 <ldexp@@GLIBC_2.17+0x520>
   3ddb8:	mvn	w1, w2
   3ddbc:	stp	x21, x22, [sp, #32]
   3ddc0:	add	w1, w1, w1, lsr #31
   3ddc4:	str	x23, [sp, #48]
   3ddc8:	stp	d12, d13, [sp, #96]
   3ddcc:	asr	w1, w1, #1
   3ddd0:	stp	d14, d15, [sp, #112]
   3ddd4:	scvtf	d1, w1
   3ddd8:	tst	x2, #0x2
   3dddc:	sub	w23, w2, #0x4
   3dde0:	mov	w1, #0x1                   	// #1
   3dde4:	cneg	w1, w1, eq  // eq = none
   3dde8:	str	w1, [x0]
   3ddec:	mrs	x20, fpcr
   3ddf0:	ands	w21, w20, #0xc00000
   3ddf4:	b.ne	3e144 <ldexp@@GLIBC_2.17+0x66c>  // b.any
   3ddf8:	sbfiz	x0, x23, #4, #32
   3ddfc:	adrp	x22, 84000 <f64xsubf128@@GLIBC_2.28+0x30280>
   3de00:	add	x1, x22, #0xad8
   3de04:	cmp	w23, #0x1
   3de08:	add	x2, x1, x0
   3de0c:	ldr	d13, [x1, x0]
   3de10:	ldr	d15, [x2, #8]
   3de14:	fsub	d12, d11, d13
   3de18:	fsub	d12, d12, d15
   3de1c:	b.le	3e044 <ldexp@@GLIBC_2.17+0x56c>
   3de20:	fabd	d14, d1, d11
   3de24:	fsub	d1, d1, d13
   3de28:	fmov	d2, #5.000000000000000000e-01
   3de2c:	stp	d8, d9, [sp, #64]
   3de30:	fneg	d10, d12
   3de34:	fabd	d0, d1, d15
   3de38:	fmul	d1, d14, d2
   3de3c:	fcmpe	d1, d0
   3de40:	b.gt	3e024 <ldexp@@GLIBC_2.17+0x54c>
   3de44:	tst	x23, #0x1
   3de48:	fcsel	d9, d10, d12, ne  // ne = any
   3de4c:	fmul	d9, d9, d2
   3de50:	fmov	d0, d9
   3de54:	bl	3dd10 <ldexp@@GLIBC_2.17+0x238>
   3de58:	fmov	d8, d0
   3de5c:	fmov	d0, d9
   3de60:	bl	3dd48 <ldexp@@GLIBC_2.17+0x270>
   3de64:	fmov	d1, d0
   3de68:	fmov	d0, d14
   3de6c:	str	d1, [sp, #136]
   3de70:	bl	3dd48 <ldexp@@GLIBC_2.17+0x270>
   3de74:	fmov	d9, d0
   3de78:	fmov	d0, d14
   3de7c:	bl	3dd10 <ldexp@@GLIBC_2.17+0x238>
   3de80:	fadd	d2, d8, d8
   3de84:	fdiv	d9, d9, d0
   3de88:	ldr	d1, [sp, #136]
   3de8c:	fnmsub	d8, d1, d9, d8
   3de90:	fmul	d0, d2, d8
   3de94:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3de98:	fmov	d9, d0
   3de9c:	fmov	d1, #1.000000000000000000e+00
   3dea0:	movi	d6, #0x0
   3dea4:	cmp	w23, #0x5
   3dea8:	fsub	d14, d1, d13
   3deac:	fsub	d8, d1, d11
   3deb0:	fsub	d0, d1, d14
   3deb4:	fsub	d1, d1, d8
   3deb8:	fsub	d0, d0, d13
   3debc:	fsub	d13, d1, d11
   3dec0:	fsub	d11, d0, d15
   3dec4:	b.le	3e0c4 <ldexp@@GLIBC_2.17+0x5ec>
   3dec8:	adrp	x0, 84000 <f64xsubf128@@GLIBC_2.28+0x30280>
   3decc:	str	d6, [sp, #136]
   3ded0:	ldr	d0, [x0, #2752]
   3ded4:	adrp	x0, 84000 <f64xsubf128@@GLIBC_2.28+0x30280>
   3ded8:	ldr	d2, [x0, #2760]
   3dedc:	fsub	d1, d14, d0
   3dee0:	fsub	d1, d1, d2
   3dee4:	fadd	d11, d1, d11
   3dee8:	fdiv	d0, d11, d0
   3deec:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3def0:	fmov	d15, d0
   3def4:	fdiv	d0, d12, d8
   3def8:	fmov	d11, #5.000000000000000000e-01
   3defc:	fsub	d11, d8, d11
   3df00:	fadd	d11, d11, d13
   3df04:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3df08:	fmul	d3, d14, d8
   3df0c:	fmov	d4, #1.000000000000000000e+00
   3df10:	fmul	d11, d11, d0
   3df14:	fmadd	d0, d15, d12, d11
   3df18:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   3df1c:	fdiv	d8, d4, d8
   3df20:	ldr	d6, [sp, #136]
   3df24:	fdiv	d4, d4, d14
   3df28:	movk	x0, #0x3fb5, lsl #48
   3df2c:	fmov	d5, x0
   3df30:	adrp	x1, 84000 <f64xsubf128@@GLIBC_2.28+0x30280>
   3df34:	fdiv	d3, d10, d3
   3df38:	add	x3, x22, #0xad8
   3df3c:	add	x3, x3, #0x6e8
   3df40:	add	x2, sp, #0x98
   3df44:	ldr	d2, [x1, #2768]
   3df48:	mov	x0, #0x0                   	// #0
   3df4c:	fadd	d12, d0, d6
   3df50:	fmul	d0, d8, d8
   3df54:	fadd	d1, d4, d8
   3df58:	fmul	d4, d4, d4
   3df5c:	fmul	d5, d3, d5
   3df60:	fmul	d8, d8, d3
   3df64:	fmul	d1, d8, d1
   3df68:	str	d5, [sp, #152]
   3df6c:	b	3df78 <ldexp@@GLIBC_2.17+0x4a0>
   3df70:	add	x1, x3, x0
   3df74:	ldr	d2, [x1, #8]
   3df78:	fmadd	d3, d4, d3, d1
   3df7c:	add	x1, x2, x0
   3df80:	add	x0, x0, #0x8
   3df84:	fmul	d1, d1, d0
   3df88:	cmp	x0, #0x58
   3df8c:	fmul	d2, d3, d2
   3df90:	str	d2, [x1, #8]
   3df94:	b.ne	3df70 <ldexp@@GLIBC_2.17+0x498>  // b.any
   3df98:	movi	d0, #0x0
   3df9c:	mov	x0, #0xc                   	// #12
   3dfa0:	add	x1, x2, x0, lsl #3
   3dfa4:	subs	x0, x0, #0x1
   3dfa8:	ldur	d1, [x1, #-8]
   3dfac:	fadd	d0, d0, d1
   3dfb0:	b.ne	3dfa0 <ldexp@@GLIBC_2.17+0x4c8>  // b.any
   3dfb4:	fadd	d0, d12, d0
   3dfb8:	fadd	d0, d0, d9
   3dfbc:	ldp	d8, d9, [sp, #64]
   3dfc0:	cbnz	w21, 3e12c <ldexp@@GLIBC_2.17+0x654>
   3dfc4:	ldp	x21, x22, [sp, #32]
   3dfc8:	ldr	x23, [sp, #48]
   3dfcc:	ldp	d12, d13, [sp, #96]
   3dfd0:	ldp	d14, d15, [sp, #112]
   3dfd4:	ldr	x19, [x19, #4032]
   3dfd8:	ldr	x1, [sp, #248]
   3dfdc:	ldr	x0, [x19]
   3dfe0:	eor	x0, x1, x0
   3dfe4:	cbnz	x0, 3e150 <ldexp@@GLIBC_2.17+0x678>
   3dfe8:	ldp	x19, x20, [sp, #16]
   3dfec:	ldp	d10, d11, [sp, #80]
   3dff0:	ldp	x29, x30, [sp], #256
   3dff4:	ret
   3dff8:	scvtf	d1, w2
   3dffc:	fcmp	d0, d1
   3e000:	b.eq	3e114 <ldexp@@GLIBC_2.17+0x63c>  // b.none
   3e004:	add	w1, w2, w2, lsr #31
   3e008:	stp	x21, x22, [sp, #32]
   3e00c:	neg	w1, w1, asr #1
   3e010:	str	x23, [sp, #48]
   3e014:	stp	d12, d13, [sp, #96]
   3e018:	scvtf	d1, w1
   3e01c:	stp	d14, d15, [sp, #112]
   3e020:	b	3ddd8 <ldexp@@GLIBC_2.17+0x300>
   3e024:	bl	3dd10 <ldexp@@GLIBC_2.17+0x238>
   3e028:	fmov	d8, d0
   3e02c:	fmov	d0, d14
   3e030:	bl	3dd10 <ldexp@@GLIBC_2.17+0x238>
   3e034:	fdiv	d0, d8, d0
   3e038:	bl	35a50 <__log_finite@GLIBC_2.17>
   3e03c:	fmov	d9, d0
   3e040:	b	3de9c <ldexp@@GLIBC_2.17+0x3c4>
   3e044:	fmov	d2, #-8.000000000000000000e+00
   3e048:	fmov	d0, #1.600000000000000000e+01
   3e04c:	mov	x0, #0x3fb0000000000000    	// #4589168020290535424
   3e050:	fmov	d3, x0
   3e054:	fmul	d2, d11, d2
   3e058:	add	x4, x1, #0x380
   3e05c:	add	x3, x1, #0x340
   3e060:	mov	w5, #0xffffffdf            	// #-33
   3e064:	add	x1, x1, #0x3c0
   3e068:	frintm	d2, d2
   3e06c:	fsub	d2, d2, d0
   3e070:	fcvtzs	w0, d2
   3e074:	sxtw	x2, w0
   3e078:	sub	w0, w5, w0, lsl #1
   3e07c:	scvtf	d0, w0
   3e080:	ldr	x0, [x4, x2, lsl #3]
   3e084:	ldr	x2, [x3, x2, lsl #3]
   3e088:	fmsub	d0, d0, d3, d11
   3e08c:	ldr	d2, [x1, x0, lsl #3]
   3e090:	cbz	x2, 3e0b0 <ldexp@@GLIBC_2.17+0x5d8>
   3e094:	sub	x2, x0, x2
   3e098:	add	x0, x1, x0, lsl #3
   3e09c:	add	x1, x1, x2, lsl #3
   3e0a0:	ldr	d3, [x0, #-8]!
   3e0a4:	fmadd	d2, d2, d0, d3
   3e0a8:	cmp	x1, x0
   3e0ac:	b.ne	3e0a0 <ldexp@@GLIBC_2.17+0x5c8>  // b.any
   3e0b0:	fmul	d0, d12, d2
   3e0b4:	fsub	d1, d11, d1
   3e0b8:	fdiv	d0, d0, d1
   3e0bc:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3e0c0:	b	3dfc0 <ldexp@@GLIBC_2.17+0x4e8>
   3e0c4:	mov	w0, #0x7                   	// #7
   3e0c8:	sub	w0, w0, w23
   3e0cc:	fmov	d0, d12
   3e0d0:	asr	w0, w0, #1
   3e0d4:	scvtf	d2, w0
   3e0d8:	fadd	d4, d2, d8
   3e0dc:	fadd	d3, d2, d14
   3e0e0:	fsub	d1, d4, d2
   3e0e4:	fsub	d2, d3, d2
   3e0e8:	fsub	d5, d8, d1
   3e0ec:	fsub	d2, d14, d2
   3e0f0:	fmov	d8, d4
   3e0f4:	fmov	d14, d3
   3e0f8:	fadd	d13, d13, d5
   3e0fc:	fadd	d11, d11, d2
   3e100:	fmov	d2, d13
   3e104:	bl	3e168 <ldexp@@GLIBC_2.17+0x690>
   3e108:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3e10c:	fneg	d6, d0
   3e110:	b	3dec8 <ldexp@@GLIBC_2.17+0x3f0>
   3e114:	stp	d8, d9, [sp, #64]
   3e118:	movi	d9, #0x0
   3e11c:	fmov	d0, #1.000000000000000000e+00
   3e120:	fdiv	d0, d0, d9
   3e124:	ldp	d8, d9, [sp, #64]
   3e128:	b	3dfd4 <ldexp@@GLIBC_2.17+0x4fc>
   3e12c:	msr	fpcr, x20
   3e130:	ldp	x21, x22, [sp, #32]
   3e134:	ldr	x23, [sp, #48]
   3e138:	ldp	d12, d13, [sp, #96]
   3e13c:	ldp	d14, d15, [sp, #112]
   3e140:	b	3dfd4 <ldexp@@GLIBC_2.17+0x4fc>
   3e144:	eor	w0, w21, w20
   3e148:	msr	fpcr, x0
   3e14c:	b	3ddf8 <ldexp@@GLIBC_2.17+0x320>
   3e150:	stp	x21, x22, [sp, #32]
   3e154:	str	x23, [sp, #48]
   3e158:	stp	d8, d9, [sp, #64]
   3e15c:	stp	d12, d13, [sp, #96]
   3e160:	stp	d14, d15, [sp, #112]
   3e164:	bl	ba70 <__stack_chk_fail@plt>
   3e168:	cmp	w0, #0x0
   3e16c:	b.le	3e1fc <ldexp@@GLIBC_2.17+0x724>
   3e170:	movi	d16, #0x0
   3e174:	fmul	d22, d0, d2
   3e178:	mov	w1, #0x0                   	// #0
   3e17c:	fmov	d7, d16
   3e180:	scvtf	d3, w1
   3e184:	fadd	d17, d7, d16
   3e188:	add	w1, w1, #0x1
   3e18c:	cmp	w0, w1
   3e190:	fadd	d5, d3, d1
   3e194:	fdiv	d6, d0, d5
   3e198:	fmul	d3, d5, d5
   3e19c:	fdiv	d18, d22, d3
   3e1a0:	fmul	d4, d5, d6
   3e1a4:	fmul	d20, d6, d7
   3e1a8:	fnmsub	d3, d6, d5, d4
   3e1ac:	fadd	d2, d6, d7
   3e1b0:	fnmsub	d21, d7, d6, d20
   3e1b4:	fsub	d4, d0, d4
   3e1b8:	fsub	d19, d7, d2
   3e1bc:	fadd	d7, d2, d20
   3e1c0:	fsub	d3, d4, d3
   3e1c4:	fadd	d4, d19, d6
   3e1c8:	fsub	d2, d2, d7
   3e1cc:	fdiv	d3, d3, d5
   3e1d0:	fadd	d2, d2, d20
   3e1d4:	fadd	d2, d2, d4
   3e1d8:	fadd	d2, d2, d21
   3e1dc:	fmadd	d2, d6, d16, d2
   3e1e0:	fsub	d3, d3, d18
   3e1e4:	fadd	d2, d2, d3
   3e1e8:	fmadd	d2, d17, d3, d2
   3e1ec:	fadd	d16, d16, d2
   3e1f0:	b.ne	3e180 <ldexp@@GLIBC_2.17+0x6a8>  // b.any
   3e1f4:	fadd	d0, d7, d16
   3e1f8:	ret
   3e1fc:	movi	d0, #0x0
   3e200:	ret
   3e204:	nop

000000000003e208 <nextup@@GLIBC_2.24>:
   3e208:	fmov	x1, d0
   3e20c:	mov	w3, #0x7fefffff            	// #2146435071
   3e210:	fmov	d1, d0
   3e214:	lsr	x2, x1, #32
   3e218:	and	w0, w2, #0x7fffffff
   3e21c:	mov	w4, w2
   3e220:	cmp	w0, w3
   3e224:	b.le	3e268 <nextup@@GLIBC_2.24+0x60>
   3e228:	mov	w3, #0x80100000            	// #-2146435072
   3e22c:	add	w0, w0, w3
   3e230:	orr	w0, w0, w1
   3e234:	cbnz	w0, 3e288 <nextup@@GLIBC_2.24+0x80>
   3e238:	tbnz	w2, #31, 3e290 <nextup@@GLIBC_2.24+0x88>
   3e23c:	fabs	d2, d1
   3e240:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3e244:	fmov	d0, x0
   3e248:	adds	w1, w1, #0x1
   3e24c:	csinc	w4, w4, w2, ne  // ne = any
   3e250:	fcmp	d2, d0
   3e254:	b.gt	3e29c <nextup@@GLIBC_2.24+0x94>
   3e258:	mov	w1, w1
   3e25c:	orr	x0, x1, x4, lsl #32
   3e260:	fmov	d0, x0
   3e264:	ret
   3e268:	mov	x3, #0x1                   	// #1
   3e26c:	orr	w0, w0, w1
   3e270:	fmov	d0, x3
   3e274:	cbz	w0, 3e264 <nextup@@GLIBC_2.24+0x5c>
   3e278:	tbz	w2, #31, 3e23c <nextup@@GLIBC_2.24+0x34>
   3e27c:	cbz	w1, 3e290 <nextup@@GLIBC_2.24+0x88>
   3e280:	sub	w1, w1, #0x1
   3e284:	b	3e258 <nextup@@GLIBC_2.24+0x50>
   3e288:	fadd	d0, d0, d0
   3e28c:	ret
   3e290:	sub	w4, w2, #0x1
   3e294:	sub	w1, w1, #0x1
   3e298:	b	3e258 <nextup@@GLIBC_2.24+0x50>
   3e29c:	fmov	d0, d1
   3e2a0:	ret
   3e2a4:	nop

000000000003e2a8 <totalorder@@GLIBC_2.31>:
   3e2a8:	ldr	x3, [x0]
   3e2ac:	ldr	x2, [x1]
   3e2b0:	asr	x1, x3, #63
   3e2b4:	asr	x0, x2, #63
   3e2b8:	eor	x1, x3, x1, lsr #1
   3e2bc:	eor	x0, x2, x0, lsr #1
   3e2c0:	cmp	x1, x0
   3e2c4:	cset	w0, le
   3e2c8:	ret
   3e2cc:	nop

000000000003e2d0 <totalorder@GLIBC_2.25>:
   3e2d0:	stp	x29, x30, [sp, #-32]!
   3e2d4:	mov	x29, sp
   3e2d8:	add	x1, sp, #0x10
   3e2dc:	add	x0, sp, #0x18
   3e2e0:	stp	d1, d0, [sp, #16]
   3e2e4:	bl	3e2a8 <totalorder@@GLIBC_2.31>
   3e2e8:	ldp	x29, x30, [sp], #32
   3e2ec:	ret

000000000003e2f0 <totalordermag@@GLIBC_2.31>:
   3e2f0:	ldr	x2, [x0]
   3e2f4:	ldr	x0, [x1]
   3e2f8:	and	x2, x2, #0x7fffffffffffffff
   3e2fc:	and	x0, x0, #0x7fffffffffffffff
   3e300:	cmp	x2, x0
   3e304:	cset	w0, ls  // ls = plast
   3e308:	ret
   3e30c:	nop

000000000003e310 <totalordermag@GLIBC_2.25>:
   3e310:	stp	x29, x30, [sp, #-32]!
   3e314:	mov	x29, sp
   3e318:	add	x1, sp, #0x10
   3e31c:	add	x0, sp, #0x18
   3e320:	stp	d1, d0, [sp, #16]
   3e324:	bl	3e2f0 <totalordermag@@GLIBC_2.31>
   3e328:	ldp	x29, x30, [sp], #32
   3e32c:	ret

000000000003e330 <getpayload@@GLIBC_2.25>:
   3e330:	ldr	x0, [x0]
   3e334:	and	x0, x0, #0x7ffffffffffff
   3e338:	scvtf	d0, x0
   3e33c:	ret

000000000003e340 <setpayload@@GLIBC_2.25>:
   3e340:	fmov	x1, d0
   3e344:	mov	x3, x0
   3e348:	fmov	x2, d0
   3e34c:	lsr	x0, x1, #52
   3e350:	cmp	x0, #0x431
   3e354:	b.hi	3e3a0 <setpayload@@GLIBC_2.25+0x60>  // b.pmore
   3e358:	cmp	w0, #0x3fe
   3e35c:	ccmp	x1, #0x0, #0x4, le
   3e360:	b.ne	3e3a0 <setpayload@@GLIBC_2.25+0x60>  // b.any
   3e364:	mov	w1, #0x433                 	// #1075
   3e368:	sub	w0, w1, w0
   3e36c:	mov	x1, #0xffffffffffffffff    	// #-1
   3e370:	lsl	x1, x1, x0
   3e374:	bics	xzr, x2, x1
   3e378:	b.ne	3e3a0 <setpayload@@GLIBC_2.25+0x60>  // b.any
   3e37c:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   3e380:	cbz	x2, 3e394 <setpayload@@GLIBC_2.25+0x54>
   3e384:	and	x1, x2, #0xfffffffffffff
   3e388:	orr	x1, x1, #0x10000000000000
   3e38c:	lsr	x1, x1, x0
   3e390:	orr	x1, x1, #0x7ff8000000000000
   3e394:	mov	w0, #0x0                   	// #0
   3e398:	str	x1, [x3]
   3e39c:	ret
   3e3a0:	mov	w0, #0x1                   	// #1
   3e3a4:	str	xzr, [x3]
   3e3a8:	ret
   3e3ac:	nop

000000000003e3b0 <setpayloadsig@@GLIBC_2.25>:
   3e3b0:	fmov	x1, d0
   3e3b4:	mov	x2, x0
   3e3b8:	lsr	x3, x1, #52
   3e3bc:	sub	w0, w3, #0x3ff
   3e3c0:	cmp	w0, #0x32
   3e3c4:	b.hi	3e400 <setpayloadsig@@GLIBC_2.25+0x50>  // b.pmore
   3e3c8:	mov	w0, #0x433                 	// #1075
   3e3cc:	sub	w0, w0, w3
   3e3d0:	mov	x3, #0xffffffffffffffff    	// #-1
   3e3d4:	lsl	x3, x3, x0
   3e3d8:	bics	xzr, x1, x3
   3e3dc:	b.ne	3e400 <setpayloadsig@@GLIBC_2.25+0x50>  // b.any
   3e3e0:	cbz	x1, 3e40c <setpayloadsig@@GLIBC_2.25+0x5c>
   3e3e4:	and	x1, x1, #0xfffffffffffff
   3e3e8:	orr	x1, x1, #0x10000000000000
   3e3ec:	lsr	x1, x1, x0
   3e3f0:	orr	x1, x1, #0x7ff0000000000000
   3e3f4:	mov	w0, #0x0                   	// #0
   3e3f8:	str	x1, [x2]
   3e3fc:	ret
   3e400:	mov	w0, #0x1                   	// #1
   3e404:	str	xzr, [x2]
   3e408:	ret
   3e40c:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   3e410:	b	3e3f4 <setpayloadsig@@GLIBC_2.25+0x44>
   3e414:	nop

000000000003e418 <roundeven@@GLIBC_2.25>:
   3e418:	fmov	x0, d0
   3e41c:	ubfx	x2, x0, #52, #11
   3e420:	and	x1, x0, #0x7fffffffffffffff
   3e424:	cmp	x2, #0x432
   3e428:	b.ls	3e438 <roundeven@@GLIBC_2.25+0x20>  // b.plast
   3e42c:	cmp	x2, #0x7ff
   3e430:	b.eq	3e4a0 <roundeven@@GLIBC_2.25+0x88>  // b.none
   3e434:	ret
   3e438:	cmp	x2, #0x3fe
   3e43c:	b.ls	3e480 <roundeven@@GLIBC_2.25+0x68>  // b.plast
   3e440:	mov	w3, #0x432                 	// #1074
   3e444:	sub	w3, w3, w2
   3e448:	mov	x1, #0x1                   	// #1
   3e44c:	mov	w4, #0x433                 	// #1075
   3e450:	sub	w4, w4, w2
   3e454:	lsl	x3, x1, x3
   3e458:	sub	x2, x3, #0x1
   3e45c:	add	x3, x0, x3
   3e460:	lsl	x1, x1, x4
   3e464:	orr	x2, x2, x1
   3e468:	tst	x2, x0
   3e46c:	neg	x1, x1
   3e470:	csel	x0, x3, x0, ne  // ne = any
   3e474:	and	x0, x1, x0
   3e478:	fmov	d0, x0
   3e47c:	ret
   3e480:	and	x0, x0, #0x8000000000000000
   3e484:	cmp	w2, #0x3fe
   3e488:	mov	x3, #0x3fe0000000000000    	// #4602678819172646912
   3e48c:	orr	x2, x0, #0x3ff0000000000000
   3e490:	ccmp	x1, x3, #0x0, eq  // eq = none
   3e494:	csel	x0, x2, x0, hi  // hi = pmore
   3e498:	fmov	d0, x0
   3e49c:	b	3e47c <roundeven@@GLIBC_2.25+0x64>
   3e4a0:	fadd	d0, d0, d0
   3e4a4:	ret
   3e4a8:	stp	x29, x30, [sp, #-32]!
   3e4ac:	mov	x29, sp
   3e4b0:	stp	x19, x20, [sp, #16]
   3e4b4:	mov	w19, w1
   3e4b8:	and	w20, w0, #0xff
   3e4bc:	mov	w0, #0x1                   	// #1
   3e4c0:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3e4c4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3e4c8:	ldr	x0, [x0, #3976]
   3e4cc:	mrs	x1, tpidr_el0
   3e4d0:	mov	w2, #0x21                  	// #33
   3e4d4:	str	w2, [x1, x0]
   3e4d8:	mov	x0, #0x0                   	// #0
   3e4dc:	cbz	w19, 3e4f8 <roundeven@@GLIBC_2.25+0xe0>
   3e4e0:	sub	w19, w19, #0x1
   3e4e4:	mov	x0, #0x1                   	// #1
   3e4e8:	cmp	w20, #0x0
   3e4ec:	lsl	x19, x0, x19
   3e4f0:	sub	x0, x19, #0x1
   3e4f4:	csneg	x0, x0, x19, eq  // eq = none
   3e4f8:	ldp	x19, x20, [sp, #16]
   3e4fc:	ldp	x29, x30, [sp], #32
   3e500:	ret
   3e504:	nop

000000000003e508 <fromfp@@GLIBC_2.25>:
   3e508:	cbz	w1, 3e63c <fromfp@@GLIBC_2.25+0x134>
   3e50c:	fmov	x2, d0
   3e510:	ands	x3, x2, #0x7fffffffffffffff
   3e514:	b.eq	3e634 <fromfp@@GLIBC_2.25+0x12c>  // b.none
   3e518:	cmp	w1, #0x40
   3e51c:	lsr	x5, x2, #63
   3e520:	mov	w4, #0x40                  	// #64
   3e524:	csel	w1, w1, w4, ls  // ls = plast
   3e528:	lsr	x4, x3, #52
   3e52c:	mov	x3, x5
   3e530:	add	w5, w1, w5
   3e534:	sub	w6, w4, #0x3ff
   3e538:	sub	w5, w5, #0x2
   3e53c:	and	w7, w3, #0xff
   3e540:	cmp	w6, w5
   3e544:	b.gt	3e62c <fromfp@@GLIBC_2.25+0x124>
   3e548:	and	x3, x2, #0xfffffffffffff
   3e54c:	cmp	w6, #0x33
   3e550:	orr	x3, x3, #0x10000000000000
   3e554:	b.le	3e590 <fromfp@@GLIBC_2.25+0x88>
   3e558:	sub	w4, w4, #0x433
   3e55c:	mov	w9, #0x0                   	// #0
   3e560:	lsl	x3, x3, x4
   3e564:	cmp	w0, #0x1
   3e568:	b.eq	3e69c <fromfp@@GLIBC_2.25+0x194>  // b.none
   3e56c:	b.le	3e600 <fromfp@@GLIBC_2.25+0xf8>
   3e570:	tbnz	x2, #63, 3e5f0 <fromfp@@GLIBC_2.25+0xe8>
   3e574:	add	w5, w5, #0x1
   3e578:	mov	x2, #0x1                   	// #1
   3e57c:	mov	x0, x3
   3e580:	lsl	x5, x2, x5
   3e584:	cmp	x5, x3
   3e588:	b.eq	3e62c <fromfp@@GLIBC_2.25+0x124>  // b.none
   3e58c:	ret
   3e590:	cmn	w6, #0x1
   3e594:	b.lt	3e66c <fromfp@@GLIBC_2.25+0x164>  // b.tstop
   3e598:	mov	w4, #0x33                  	// #51
   3e59c:	sub	w8, w4, w6
   3e5a0:	mov	x4, #0x1                   	// #1
   3e5a4:	mov	w10, #0x34                  	// #52
   3e5a8:	lsl	x4, x4, x8
   3e5ac:	sub	w10, w10, w6
   3e5b0:	ands	x11, x3, x4
   3e5b4:	sub	x4, x4, #0x1
   3e5b8:	cset	w8, ne  // ne = any
   3e5bc:	ands	x4, x4, x3
   3e5c0:	cset	w9, ne  // ne = any
   3e5c4:	lsr	x3, x3, x10
   3e5c8:	cmp	w0, #0x3
   3e5cc:	b.eq	3e6a8 <fromfp@@GLIBC_2.25+0x1a0>  // b.none
   3e5d0:	b.gt	3e678 <fromfp@@GLIBC_2.25+0x170>
   3e5d4:	cbz	w0, 3e608 <fromfp@@GLIBC_2.25+0x100>
   3e5d8:	cmp	w0, #0x1
   3e5dc:	b.ne	3e570 <fromfp@@GLIBC_2.25+0x68>  // b.any
   3e5e0:	tbz	x2, #63, 3e574 <fromfp@@GLIBC_2.25+0x6c>
   3e5e4:	cmp	w8, #0x0
   3e5e8:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   3e5ec:	cinc	x3, x3, ne  // ne = any
   3e5f0:	cmp	w6, w5
   3e5f4:	b.eq	3e61c <fromfp@@GLIBC_2.25+0x114>  // b.none
   3e5f8:	neg	x0, x3
   3e5fc:	ret
   3e600:	mov	w8, #0x0                   	// #0
   3e604:	cbnz	w0, 3e570 <fromfp@@GLIBC_2.25+0x68>
   3e608:	tbnz	x2, #63, 3e5f0 <fromfp@@GLIBC_2.25+0xe8>
   3e60c:	cmp	w8, #0x0
   3e610:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   3e614:	cinc	x3, x3, ne  // ne = any
   3e618:	b	3e574 <fromfp@@GLIBC_2.25+0x6c>
   3e61c:	mov	x0, #0x1                   	// #1
   3e620:	lsl	x6, x0, x6
   3e624:	cmp	x3, x6
   3e628:	b.eq	3e5f8 <fromfp@@GLIBC_2.25+0xf0>  // b.none
   3e62c:	mov	w0, w7
   3e630:	b	3e4a8 <roundeven@@GLIBC_2.25+0x90>
   3e634:	mov	x0, #0x0                   	// #0
   3e638:	ret
   3e63c:	stp	x29, x30, [sp, #-16]!
   3e640:	mov	w0, #0x1                   	// #1
   3e644:	mov	x29, sp
   3e648:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3e64c:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3e650:	ldr	x1, [x1, #3976]
   3e654:	mrs	x2, tpidr_el0
   3e658:	mov	w3, #0x21                  	// #33
   3e65c:	mov	x0, #0x0                   	// #0
   3e660:	str	w3, [x2, x1]
   3e664:	ldp	x29, x30, [sp], #16
   3e668:	ret
   3e66c:	mov	w9, #0x1                   	// #1
   3e670:	mov	x3, #0x0                   	// #0
   3e674:	b	3e564 <fromfp@@GLIBC_2.25+0x5c>
   3e678:	cmp	w0, #0x4
   3e67c:	b.ne	3e570 <fromfp@@GLIBC_2.25+0x68>  // b.any
   3e680:	cbz	x11, 3e570 <fromfp@@GLIBC_2.25+0x68>
   3e684:	and	x0, x3, #0x1
   3e688:	orr	x4, x0, x4
   3e68c:	cmp	x4, #0x0
   3e690:	cinc	x3, x3, ne  // ne = any
   3e694:	tbz	x2, #63, 3e574 <fromfp@@GLIBC_2.25+0x6c>
   3e698:	b	3e5f0 <fromfp@@GLIBC_2.25+0xe8>
   3e69c:	mov	w8, #0x0                   	// #0
   3e6a0:	tbz	x2, #63, 3e574 <fromfp@@GLIBC_2.25+0x6c>
   3e6a4:	b	3e5e4 <fromfp@@GLIBC_2.25+0xdc>
   3e6a8:	and	x8, x8, #0xff
   3e6ac:	add	x3, x3, x8
   3e6b0:	tbz	x2, #63, 3e574 <fromfp@@GLIBC_2.25+0x6c>
   3e6b4:	b	3e5f0 <fromfp@@GLIBC_2.25+0xe8>

000000000003e6b8 <ufromfp@@GLIBC_2.25>:
   3e6b8:	stp	x29, x30, [sp, #-32]!
   3e6bc:	mov	x29, sp
   3e6c0:	cbz	w1, 3e7f0 <ufromfp@@GLIBC_2.25+0x138>
   3e6c4:	fmov	x3, d0
   3e6c8:	mov	w4, w0
   3e6cc:	ands	x0, x3, #0x7fffffffffffffff
   3e6d0:	b.eq	3e750 <ufromfp@@GLIBC_2.25+0x98>  // b.none
   3e6d4:	cmp	w1, #0x40
   3e6d8:	stp	x19, x20, [sp, #16]
   3e6dc:	lsr	x2, x0, #52
   3e6e0:	mov	w19, w1
   3e6e4:	mov	w0, #0x40                  	// #64
   3e6e8:	sub	w1, w2, #0x3ff
   3e6ec:	csel	w20, w19, w0, ls  // ls = plast
   3e6f0:	tbnz	x3, #63, 3e774 <ufromfp@@GLIBC_2.25+0xbc>
   3e6f4:	sub	w5, w20, #0x1
   3e6f8:	cmp	w1, w5
   3e6fc:	b.gt	3e830 <ufromfp@@GLIBC_2.25+0x178>
   3e700:	and	x0, x3, #0xfffffffffffff
   3e704:	cmp	w1, #0x33
   3e708:	orr	x0, x0, #0x10000000000000
   3e70c:	b.le	3e788 <ufromfp@@GLIBC_2.25+0xd0>
   3e710:	sub	w2, w2, #0x433
   3e714:	mov	w8, #0x0                   	// #0
   3e718:	lsl	x0, x0, x2
   3e71c:	cmp	w4, #0x1
   3e720:	b.eq	3e89c <ufromfp@@GLIBC_2.25+0x1e4>  // b.none
   3e724:	b.le	3e758 <ufromfp@@GLIBC_2.25+0xa0>
   3e728:	tbnz	x3, #63, 3e7e8 <ufromfp@@GLIBC_2.25+0x130>
   3e72c:	cmp	w5, #0x3f
   3e730:	b.eq	3e818 <ufromfp@@GLIBC_2.25+0x160>  // b.none
   3e734:	add	w5, w5, #0x1
   3e738:	mov	x1, #0x1                   	// #1
   3e73c:	lsl	x5, x1, x5
   3e740:	cmp	x5, x0
   3e744:	cset	w1, eq  // eq = none
   3e748:	cbnz	w1, 3e830 <ufromfp@@GLIBC_2.25+0x178>
   3e74c:	ldp	x19, x20, [sp, #16]
   3e750:	ldp	x29, x30, [sp], #32
   3e754:	ret
   3e758:	mov	w7, #0x0                   	// #0
   3e75c:	cbnz	w4, 3e728 <ufromfp@@GLIBC_2.25+0x70>
   3e760:	tbnz	x3, #63, 3e7e8 <ufromfp@@GLIBC_2.25+0x130>
   3e764:	cmp	w7, #0x0
   3e768:	ccmp	w8, #0x0, #0x0, eq  // eq = none
   3e76c:	cinc	x0, x0, ne  // ne = any
   3e770:	b	3e72c <ufromfp@@GLIBC_2.25+0x74>
   3e774:	tbz	w1, #31, 3e7ec <ufromfp@@GLIBC_2.25+0x134>
   3e778:	and	x0, x3, #0xfffffffffffff
   3e77c:	mov	w5, #0xffffffff            	// #-1
   3e780:	orr	x0, x0, #0x10000000000000
   3e784:	nop
   3e788:	cmn	w1, #0x1
   3e78c:	b.lt	3e86c <ufromfp@@GLIBC_2.25+0x1b4>  // b.tstop
   3e790:	mov	w6, #0x33                  	// #51
   3e794:	sub	w7, w6, w1
   3e798:	mov	x6, #0x1                   	// #1
   3e79c:	mov	w2, #0x34                  	// #52
   3e7a0:	lsl	x6, x6, x7
   3e7a4:	sub	w2, w2, w1
   3e7a8:	ands	x9, x6, x0
   3e7ac:	sub	x6, x6, #0x1
   3e7b0:	cset	w7, ne  // ne = any
   3e7b4:	ands	x6, x6, x0
   3e7b8:	cset	w8, ne  // ne = any
   3e7bc:	lsr	x0, x0, x2
   3e7c0:	cmp	w4, #0x3
   3e7c4:	b.eq	3e8b4 <ufromfp@@GLIBC_2.25+0x1fc>  // b.none
   3e7c8:	b.gt	3e878 <ufromfp@@GLIBC_2.25+0x1c0>
   3e7cc:	cbz	w4, 3e760 <ufromfp@@GLIBC_2.25+0xa8>
   3e7d0:	cmp	w4, #0x1
   3e7d4:	b.ne	3e728 <ufromfp@@GLIBC_2.25+0x70>  // b.any
   3e7d8:	tbz	x3, #63, 3e72c <ufromfp@@GLIBC_2.25+0x74>
   3e7dc:	cmp	w7, #0x0
   3e7e0:	ccmp	w8, #0x0, #0x0, eq  // eq = none
   3e7e4:	cinc	x0, x0, ne  // ne = any
   3e7e8:	cbz	x0, 3e74c <ufromfp@@GLIBC_2.25+0x94>
   3e7ec:	ldp	x19, x20, [sp, #16]
   3e7f0:	mov	w0, #0x1                   	// #1
   3e7f4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3e7f8:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3e7fc:	ldr	x1, [x1, #3976]
   3e800:	mrs	x2, tpidr_el0
   3e804:	mov	w3, #0x21                  	// #33
   3e808:	mov	x0, #0x0                   	// #0
   3e80c:	str	w3, [x2, x1]
   3e810:	ldp	x29, x30, [sp], #32
   3e814:	ret
   3e818:	cmp	w1, #0x3f
   3e81c:	cset	w1, eq  // eq = none
   3e820:	cmp	x0, #0x0
   3e824:	csel	w1, w1, wzr, eq  // eq = none
   3e828:	cbz	w1, 3e74c <ufromfp@@GLIBC_2.25+0x94>
   3e82c:	nop
   3e830:	mov	w0, #0x1                   	// #1
   3e834:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3e838:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3e83c:	ldr	x0, [x0, #3976]
   3e840:	mrs	x1, tpidr_el0
   3e844:	mov	w2, #0x21                  	// #33
   3e848:	cmp	w19, #0x3f
   3e84c:	str	w2, [x1, x0]
   3e850:	b.hi	3e8a8 <ufromfp@@GLIBC_2.25+0x1f0>  // b.pmore
   3e854:	mov	x0, #0x1                   	// #1
   3e858:	lsl	x0, x0, x20
   3e85c:	sub	x0, x0, #0x1
   3e860:	ldp	x19, x20, [sp, #16]
   3e864:	ldp	x29, x30, [sp], #32
   3e868:	ret
   3e86c:	mov	w8, #0x1                   	// #1
   3e870:	mov	x0, #0x0                   	// #0
   3e874:	b	3e71c <ufromfp@@GLIBC_2.25+0x64>
   3e878:	cmp	w4, #0x4
   3e87c:	b.ne	3e728 <ufromfp@@GLIBC_2.25+0x70>  // b.any
   3e880:	cbz	x9, 3e728 <ufromfp@@GLIBC_2.25+0x70>
   3e884:	and	x2, x0, #0x1
   3e888:	orr	x6, x2, x6
   3e88c:	cmp	x6, #0x0
   3e890:	cinc	x0, x0, ne  // ne = any
   3e894:	tbz	x3, #63, 3e72c <ufromfp@@GLIBC_2.25+0x74>
   3e898:	b	3e7e8 <ufromfp@@GLIBC_2.25+0x130>
   3e89c:	mov	w7, #0x0                   	// #0
   3e8a0:	tbz	x3, #63, 3e72c <ufromfp@@GLIBC_2.25+0x74>
   3e8a4:	b	3e7dc <ufromfp@@GLIBC_2.25+0x124>
   3e8a8:	mov	x0, #0xffffffffffffffff    	// #-1
   3e8ac:	ldp	x19, x20, [sp, #16]
   3e8b0:	b	3e750 <ufromfp@@GLIBC_2.25+0x98>
   3e8b4:	and	x7, x7, #0xff
   3e8b8:	add	x0, x0, x7
   3e8bc:	tbz	x3, #63, 3e72c <ufromfp@@GLIBC_2.25+0x74>
   3e8c0:	b	3e7e8 <ufromfp@@GLIBC_2.25+0x130>
   3e8c4:	nop
   3e8c8:	stp	x29, x30, [sp, #-32]!
   3e8cc:	mov	x29, sp
   3e8d0:	stp	x19, x20, [sp, #16]
   3e8d4:	mov	w19, w1
   3e8d8:	and	w20, w0, #0xff
   3e8dc:	mov	w0, #0x1                   	// #1
   3e8e0:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3e8e4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3e8e8:	ldr	x0, [x0, #3976]
   3e8ec:	mrs	x1, tpidr_el0
   3e8f0:	mov	w2, #0x21                  	// #33
   3e8f4:	str	w2, [x1, x0]
   3e8f8:	mov	x0, #0x0                   	// #0
   3e8fc:	cbz	w19, 3e918 <ufromfp@@GLIBC_2.25+0x260>
   3e900:	sub	w19, w19, #0x1
   3e904:	mov	x0, #0x1                   	// #1
   3e908:	cmp	w20, #0x0
   3e90c:	lsl	x19, x0, x19
   3e910:	sub	x0, x19, #0x1
   3e914:	csneg	x0, x0, x19, eq  // eq = none
   3e918:	ldp	x19, x20, [sp, #16]
   3e91c:	ldp	x29, x30, [sp], #32
   3e920:	ret
   3e924:	nop

000000000003e928 <fromfpx@@GLIBC_2.25>:
   3e928:	cbz	w1, 3ea64 <fromfpx@@GLIBC_2.25+0x13c>
   3e92c:	fmov	x2, d0
   3e930:	ands	x3, x2, #0x7fffffffffffffff
   3e934:	b.eq	3e9f8 <fromfpx@@GLIBC_2.25+0xd0>  // b.none
   3e938:	cmp	w1, #0x40
   3e93c:	lsr	x5, x2, #63
   3e940:	mov	w4, #0x40                  	// #64
   3e944:	csel	w1, w1, w4, ls  // ls = plast
   3e948:	lsr	x4, x3, #52
   3e94c:	mov	x3, x5
   3e950:	add	w5, w1, w5
   3e954:	sub	w7, w4, #0x3ff
   3e958:	sub	w5, w5, #0x2
   3e95c:	and	w6, w3, #0xff
   3e960:	cmp	w7, w5
   3e964:	b.gt	3e9f0 <fromfpx@@GLIBC_2.25+0xc8>
   3e968:	and	x3, x2, #0xfffffffffffff
   3e96c:	cmp	w7, #0x33
   3e970:	orr	x3, x3, #0x10000000000000
   3e974:	b.le	3ea00 <fromfpx@@GLIBC_2.25+0xd8>
   3e978:	sub	w4, w4, #0x433
   3e97c:	mov	w9, #0x0                   	// #0
   3e980:	lsl	x3, x3, x4
   3e984:	cmp	w0, #0x1
   3e988:	mov	w8, #0x0                   	// #0
   3e98c:	b.eq	3ea50 <fromfpx@@GLIBC_2.25+0x128>  // b.none
   3e990:	b.le	3e9c4 <fromfpx@@GLIBC_2.25+0x9c>
   3e994:	tbz	x2, #63, 3e9d8 <fromfpx@@GLIBC_2.25+0xb0>
   3e998:	cmp	w7, w5
   3e99c:	b.eq	3eab0 <fromfpx@@GLIBC_2.25+0x188>  // b.none
   3e9a0:	cmp	w8, #0x0
   3e9a4:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   3e9a8:	b.eq	3eac8 <fromfpx@@GLIBC_2.25+0x1a0>  // b.none
   3e9ac:	movi	v1.2s, #0x80, lsl #16
   3e9b0:	fmov	s0, #1.000000000000000000e+00
   3e9b4:	fadd	s0, s0, s1
   3e9b8:	mov	x0, x3
   3e9bc:	tbnz	x2, #63, 3eac8 <fromfpx@@GLIBC_2.25+0x1a0>
   3e9c0:	ret
   3e9c4:	cbnz	w0, 3e994 <fromfpx@@GLIBC_2.25+0x6c>
   3e9c8:	tbnz	x2, #63, 3e998 <fromfpx@@GLIBC_2.25+0x70>
   3e9cc:	cmp	w8, #0x0
   3e9d0:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   3e9d4:	cinc	x3, x3, ne  // ne = any
   3e9d8:	add	w5, w5, #0x1
   3e9dc:	mov	x0, #0x1                   	// #1
   3e9e0:	lsl	x5, x0, x5
   3e9e4:	cmp	x5, x3
   3e9e8:	cset	w0, eq  // eq = none
   3e9ec:	cbz	w0, 3ea94 <fromfpx@@GLIBC_2.25+0x16c>
   3e9f0:	mov	w0, w6
   3e9f4:	b	3e8c8 <ufromfp@@GLIBC_2.25+0x210>
   3e9f8:	mov	x0, #0x0                   	// #0
   3e9fc:	ret
   3ea00:	cmn	w7, #0x1
   3ea04:	b.lt	3eaa4 <fromfpx@@GLIBC_2.25+0x17c>  // b.tstop
   3ea08:	mov	w4, #0x33                  	// #51
   3ea0c:	sub	w4, w4, w7
   3ea10:	mov	x11, #0x1                   	// #1
   3ea14:	mov	w10, #0x34                  	// #52
   3ea18:	lsl	x4, x11, x4
   3ea1c:	sub	w10, w10, w7
   3ea20:	ands	x12, x3, x4
   3ea24:	sub	x4, x4, #0x1
   3ea28:	cset	w8, ne  // ne = any
   3ea2c:	ands	x4, x4, x3
   3ea30:	cset	w9, ne  // ne = any
   3ea34:	lsr	x3, x3, x10
   3ea38:	cmp	w0, #0x3
   3ea3c:	b.eq	3eaf8 <fromfpx@@GLIBC_2.25+0x1d0>  // b.none
   3ea40:	b.gt	3ead0 <fromfpx@@GLIBC_2.25+0x1a8>
   3ea44:	cbz	w0, 3e9c8 <fromfpx@@GLIBC_2.25+0xa0>
   3ea48:	cmp	w0, #0x1
   3ea4c:	b.ne	3e994 <fromfpx@@GLIBC_2.25+0x6c>  // b.any
   3ea50:	tbz	x2, #63, 3e9d8 <fromfpx@@GLIBC_2.25+0xb0>
   3ea54:	cmp	w8, #0x0
   3ea58:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   3ea5c:	cinc	x3, x3, ne  // ne = any
   3ea60:	b	3e998 <fromfpx@@GLIBC_2.25+0x70>
   3ea64:	stp	x29, x30, [sp, #-16]!
   3ea68:	mov	w0, #0x1                   	// #1
   3ea6c:	mov	x29, sp
   3ea70:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3ea74:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3ea78:	ldr	x1, [x1, #3976]
   3ea7c:	mrs	x2, tpidr_el0
   3ea80:	mov	w3, #0x21                  	// #33
   3ea84:	mov	x0, #0x0                   	// #0
   3ea88:	str	w3, [x2, x1]
   3ea8c:	ldp	x29, x30, [sp], #16
   3ea90:	ret
   3ea94:	cmp	w8, #0x0
   3ea98:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   3ea9c:	b.eq	3e9b8 <fromfpx@@GLIBC_2.25+0x90>  // b.none
   3eaa0:	b	3e9ac <fromfpx@@GLIBC_2.25+0x84>
   3eaa4:	mov	w9, #0x1                   	// #1
   3eaa8:	mov	x3, #0x0                   	// #0
   3eaac:	b	3e984 <fromfpx@@GLIBC_2.25+0x5c>
   3eab0:	mov	x0, #0x1                   	// #1
   3eab4:	lsl	x7, x0, x7
   3eab8:	cmp	x7, x3
   3eabc:	cset	w0, ne  // ne = any
   3eac0:	cbnz	w0, 3e9f0 <fromfpx@@GLIBC_2.25+0xc8>
   3eac4:	b	3ea94 <fromfpx@@GLIBC_2.25+0x16c>
   3eac8:	neg	x0, x3
   3eacc:	ret
   3ead0:	cmp	w0, #0x4
   3ead4:	b.ne	3e994 <fromfpx@@GLIBC_2.25+0x6c>  // b.any
   3ead8:	cbz	x12, 3eb08 <fromfpx@@GLIBC_2.25+0x1e0>
   3eadc:	and	x0, x3, #0x1
   3eae0:	mov	w8, w11
   3eae4:	orr	x4, x0, x4
   3eae8:	cmp	x4, #0x0
   3eaec:	cinc	x3, x3, ne  // ne = any
   3eaf0:	tbnz	x2, #63, 3e998 <fromfpx@@GLIBC_2.25+0x70>
   3eaf4:	b	3e9d8 <fromfpx@@GLIBC_2.25+0xb0>
   3eaf8:	and	x0, x8, #0xff
   3eafc:	add	x3, x3, x0
   3eb00:	tbnz	x2, #63, 3e998 <fromfpx@@GLIBC_2.25+0x70>
   3eb04:	b	3e9d8 <fromfpx@@GLIBC_2.25+0xb0>
   3eb08:	mov	w8, #0x0                   	// #0
   3eb0c:	tbnz	x2, #63, 3e998 <fromfpx@@GLIBC_2.25+0x70>
   3eb10:	b	3e9d8 <fromfpx@@GLIBC_2.25+0xb0>
   3eb14:	nop

000000000003eb18 <ufromfpx@@GLIBC_2.25>:
   3eb18:	stp	x29, x30, [sp, #-32]!
   3eb1c:	mov	x29, sp
   3eb20:	cbz	w1, 3ec68 <ufromfpx@@GLIBC_2.25+0x150>
   3eb24:	fmov	x3, d0
   3eb28:	mov	w4, w0
   3eb2c:	ands	x0, x3, #0x7fffffffffffffff
   3eb30:	b.eq	3ebcc <ufromfpx@@GLIBC_2.25+0xb4>  // b.none
   3eb34:	cmp	w1, #0x40
   3eb38:	stp	x19, x20, [sp, #16]
   3eb3c:	lsr	x2, x0, #52
   3eb40:	mov	w19, w1
   3eb44:	mov	w0, #0x40                  	// #64
   3eb48:	sub	w1, w2, #0x3ff
   3eb4c:	csel	w20, w19, w0, ls  // ls = plast
   3eb50:	tbnz	x3, #63, 3ebec <ufromfpx@@GLIBC_2.25+0xd4>
   3eb54:	sub	w5, w20, #0x1
   3eb58:	cmp	w1, w5
   3eb5c:	b.gt	3ecb0 <ufromfpx@@GLIBC_2.25+0x198>
   3eb60:	and	x0, x3, #0xfffffffffffff
   3eb64:	cmp	w1, #0x33
   3eb68:	orr	x0, x0, #0x10000000000000
   3eb6c:	b.le	3ec00 <ufromfpx@@GLIBC_2.25+0xe8>
   3eb70:	sub	w2, w2, #0x433
   3eb74:	mov	w8, #0x0                   	// #0
   3eb78:	lsl	x0, x0, x2
   3eb7c:	cmp	w4, #0x1
   3eb80:	mov	w7, #0x0                   	// #0
   3eb84:	b.eq	3ec50 <ufromfpx@@GLIBC_2.25+0x138>  // b.none
   3eb88:	b.le	3ebd4 <ufromfpx@@GLIBC_2.25+0xbc>
   3eb8c:	tbnz	x3, #63, 3ec60 <ufromfpx@@GLIBC_2.25+0x148>
   3eb90:	cmp	w5, #0x3f
   3eb94:	b.eq	3ec90 <ufromfpx@@GLIBC_2.25+0x178>  // b.none
   3eb98:	add	w5, w5, #0x1
   3eb9c:	mov	x1, #0x1                   	// #1
   3eba0:	lsl	x5, x1, x5
   3eba4:	cmp	x5, x0
   3eba8:	cset	w1, eq  // eq = none
   3ebac:	cbnz	w1, 3ecb0 <ufromfpx@@GLIBC_2.25+0x198>
   3ebb0:	cmp	w8, #0x0
   3ebb4:	ccmp	w7, #0x0, #0x0, eq  // eq = none
   3ebb8:	b.eq	3ecec <ufromfpx@@GLIBC_2.25+0x1d4>  // b.none
   3ebbc:	movi	v1.2s, #0x80, lsl #16
   3ebc0:	fmov	s0, #1.000000000000000000e+00
   3ebc4:	fadd	s0, s0, s1
   3ebc8:	ldp	x19, x20, [sp, #16]
   3ebcc:	ldp	x29, x30, [sp], #32
   3ebd0:	ret
   3ebd4:	cbnz	w4, 3eb8c <ufromfpx@@GLIBC_2.25+0x74>
   3ebd8:	tbnz	x3, #63, 3ec60 <ufromfpx@@GLIBC_2.25+0x148>
   3ebdc:	cmp	w7, #0x0
   3ebe0:	ccmp	w8, #0x0, #0x0, eq  // eq = none
   3ebe4:	cinc	x0, x0, ne  // ne = any
   3ebe8:	b	3eb90 <ufromfpx@@GLIBC_2.25+0x78>
   3ebec:	tbz	w1, #31, 3ec64 <ufromfpx@@GLIBC_2.25+0x14c>
   3ebf0:	and	x0, x3, #0xfffffffffffff
   3ebf4:	mov	w5, #0xffffffff            	// #-1
   3ebf8:	orr	x0, x0, #0x10000000000000
   3ebfc:	nop
   3ec00:	cmn	w1, #0x1
   3ec04:	b.lt	3eca4 <ufromfpx@@GLIBC_2.25+0x18c>  // b.tstop
   3ec08:	mov	w6, #0x33                  	// #51
   3ec0c:	sub	w6, w6, w1
   3ec10:	mov	x9, #0x1                   	// #1
   3ec14:	mov	w2, #0x34                  	// #52
   3ec18:	lsl	x6, x9, x6
   3ec1c:	sub	w2, w2, w1
   3ec20:	ands	x10, x6, x0
   3ec24:	sub	x6, x6, #0x1
   3ec28:	cset	w7, ne  // ne = any
   3ec2c:	ands	x6, x6, x0
   3ec30:	cset	w8, ne  // ne = any
   3ec34:	lsr	x0, x0, x2
   3ec38:	cmp	w4, #0x3
   3ec3c:	b.eq	3ed2c <ufromfpx@@GLIBC_2.25+0x214>  // b.none
   3ec40:	b.gt	3ecf8 <ufromfpx@@GLIBC_2.25+0x1e0>
   3ec44:	cbz	w4, 3ebd8 <ufromfpx@@GLIBC_2.25+0xc0>
   3ec48:	cmp	w4, #0x1
   3ec4c:	b.ne	3eb8c <ufromfpx@@GLIBC_2.25+0x74>  // b.any
   3ec50:	tbz	x3, #63, 3eb90 <ufromfpx@@GLIBC_2.25+0x78>
   3ec54:	cmp	w7, #0x0
   3ec58:	ccmp	w8, #0x0, #0x0, eq  // eq = none
   3ec5c:	cinc	x0, x0, ne  // ne = any
   3ec60:	cbz	x0, 3ebb0 <ufromfpx@@GLIBC_2.25+0x98>
   3ec64:	ldp	x19, x20, [sp, #16]
   3ec68:	mov	w0, #0x1                   	// #1
   3ec6c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3ec70:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3ec74:	ldr	x1, [x1, #3976]
   3ec78:	mrs	x2, tpidr_el0
   3ec7c:	mov	w3, #0x21                  	// #33
   3ec80:	mov	x0, #0x0                   	// #0
   3ec84:	str	w3, [x2, x1]
   3ec88:	ldp	x29, x30, [sp], #32
   3ec8c:	ret
   3ec90:	cmp	w1, #0x3f
   3ec94:	cset	w1, eq  // eq = none
   3ec98:	cmp	x0, #0x0
   3ec9c:	csel	w1, w1, wzr, eq  // eq = none
   3eca0:	b	3ebac <ufromfpx@@GLIBC_2.25+0x94>
   3eca4:	mov	w8, #0x1                   	// #1
   3eca8:	mov	x0, #0x0                   	// #0
   3ecac:	b	3eb7c <ufromfpx@@GLIBC_2.25+0x64>
   3ecb0:	mov	w0, #0x1                   	// #1
   3ecb4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3ecb8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3ecbc:	ldr	x0, [x0, #3976]
   3ecc0:	mrs	x1, tpidr_el0
   3ecc4:	mov	w2, #0x21                  	// #33
   3ecc8:	cmp	w19, #0x3f
   3eccc:	str	w2, [x1, x0]
   3ecd0:	b.hi	3ed20 <ufromfpx@@GLIBC_2.25+0x208>  // b.pmore
   3ecd4:	mov	x0, #0x1                   	// #1
   3ecd8:	lsl	x0, x0, x20
   3ecdc:	sub	x0, x0, #0x1
   3ece0:	ldp	x19, x20, [sp, #16]
   3ece4:	ldp	x29, x30, [sp], #32
   3ece8:	ret
   3ecec:	ldp	x19, x20, [sp, #16]
   3ecf0:	ldp	x29, x30, [sp], #32
   3ecf4:	ret
   3ecf8:	cmp	w4, #0x4
   3ecfc:	b.ne	3eb8c <ufromfpx@@GLIBC_2.25+0x74>  // b.any
   3ed00:	cbz	x10, 3ed3c <ufromfpx@@GLIBC_2.25+0x224>
   3ed04:	and	x2, x0, #0x1
   3ed08:	mov	w7, w9
   3ed0c:	orr	x6, x2, x6
   3ed10:	cmp	x6, #0x0
   3ed14:	cinc	x0, x0, ne  // ne = any
   3ed18:	tbz	x3, #63, 3eb90 <ufromfpx@@GLIBC_2.25+0x78>
   3ed1c:	b	3ec60 <ufromfpx@@GLIBC_2.25+0x148>
   3ed20:	mov	x0, #0xffffffffffffffff    	// #-1
   3ed24:	ldp	x19, x20, [sp, #16]
   3ed28:	b	3ebcc <ufromfpx@@GLIBC_2.25+0xb4>
   3ed2c:	and	x2, x7, #0xff
   3ed30:	add	x0, x0, x2
   3ed34:	tbz	x3, #63, 3eb90 <ufromfpx@@GLIBC_2.25+0x78>
   3ed38:	b	3ec60 <ufromfpx@@GLIBC_2.25+0x148>
   3ed3c:	mov	w7, #0x0                   	// #0
   3ed40:	tbz	x3, #63, 3eb90 <ufromfpx@@GLIBC_2.25+0x78>
   3ed44:	b	3ec60 <ufromfpx@@GLIBC_2.25+0x148>

000000000003ed48 <carg@@GLIBC_2.17>:
   3ed48:	fmov	d2, d0
   3ed4c:	fmov	d0, d1
   3ed50:	fmov	d1, d2
   3ed54:	b	e330 <atan2@@GLIBC_2.17>

000000000003ed58 <conj@@GLIBC_2.17>:
   3ed58:	fneg	d1, d1
   3ed5c:	ret

000000000003ed60 <cimag@@GLIBC_2.17>:
   3ed60:	fmov	d0, d1
   3ed64:	ret

000000000003ed68 <creal@@GLIBC_2.17>:
   3ed68:	ret
   3ed6c:	nop

000000000003ed70 <cabs@@GLIBC_2.17>:
   3ed70:	b	e5e0 <hypot@@GLIBC_2.17>
   3ed74:	nop

000000000003ed78 <cacos@@GLIBC_2.17>:
   3ed78:	fmov	d2, d0
   3ed7c:	fabs	d0, d0
   3ed80:	stp	x29, x30, [sp, #-16]!
   3ed84:	mov	x29, sp
   3ed88:	fcmp	d0, d0
   3ed8c:	b.vs	3ee70 <cacos@@GLIBC_2.17+0xf8>
   3ed90:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3ed94:	fmov	d3, x0
   3ed98:	mov	w1, #0x1                   	// #1
   3ed9c:	fcmp	d0, d3
   3eda0:	b.le	3ede8 <cacos@@GLIBC_2.17+0x70>
   3eda4:	fabs	d0, d1
   3eda8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3edac:	fmov	d3, x0
   3edb0:	fcmp	d0, d3
   3edb4:	fccmp	d0, d0, #0x1, le
   3edb8:	b.vc	3ee20 <cacos@@GLIBC_2.17+0xa8>
   3edbc:	fmov	d0, d2
   3edc0:	bl	3f350 <casin@@GLIBC_2.17>
   3edc4:	fneg	d1, d1
   3edc8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3edcc:	movi	d3, #0x0
   3edd0:	ldp	x29, x30, [sp], #16
   3edd4:	ldr	d2, [x0, #576]
   3edd8:	fsub	d0, d2, d0
   3eddc:	fcmp	d0, d3
   3ede0:	fcsel	d0, d0, d3, ne  // ne = any
   3ede4:	ret
   3ede8:	mov	x0, #0x10000000000000      	// #4503599627370496
   3edec:	fmov	d3, x0
   3edf0:	mov	w1, #0x4                   	// #4
   3edf4:	fcmpe	d0, d3
   3edf8:	b.ge	3eda4 <cacos@@GLIBC_2.17+0x2c>  // b.tcont
   3edfc:	fcmp	d2, #0.0
   3ee00:	fabs	d0, d1
   3ee04:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3ee08:	fmov	d3, x0
   3ee0c:	cset	w1, ne  // ne = any
   3ee10:	fcmp	d0, d3
   3ee14:	add	w1, w1, #0x2
   3ee18:	fccmp	d0, d0, #0x1, le
   3ee1c:	b.vs	3edbc <cacos@@GLIBC_2.17+0x44>
   3ee20:	mov	x0, #0x10000000000000      	// #4503599627370496
   3ee24:	fmov	d3, x0
   3ee28:	fcmpe	d0, d3
   3ee2c:	b.ge	3ee38 <cacos@@GLIBC_2.17+0xc0>  // b.tcont
   3ee30:	fcmp	d1, #0.0
   3ee34:	b.eq	3ee64 <cacos@@GLIBC_2.17+0xec>  // b.none
   3ee38:	cmp	w1, #0x1
   3ee3c:	b.le	3edbc <cacos@@GLIBC_2.17+0x44>
   3ee40:	fneg	d0, d1
   3ee44:	fmov	d1, d2
   3ee48:	mov	w0, #0x1                   	// #1
   3ee4c:	bl	3f918 <casinh@@GLIBC_2.17+0x150>
   3ee50:	fmov	d2, d0
   3ee54:	ldp	x29, x30, [sp], #16
   3ee58:	fmov	d0, d1
   3ee5c:	fmov	d1, d2
   3ee60:	ret
   3ee64:	cmp	w1, #0x2
   3ee68:	b.gt	3ee40 <cacos@@GLIBC_2.17+0xc8>
   3ee6c:	b	3edbc <cacos@@GLIBC_2.17+0x44>
   3ee70:	mov	w1, #0x0                   	// #0
   3ee74:	b	3eda4 <cacos@@GLIBC_2.17+0x2c>

000000000003ee78 <cacosh@@GLIBC_2.17>:
   3ee78:	stp	x29, x30, [sp, #-32]!
   3ee7c:	mov	x29, sp
   3ee80:	str	d8, [sp, #16]
   3ee84:	fmov	d8, d1
   3ee88:	fabs	d1, d0
   3ee8c:	fabs	d3, d8
   3ee90:	fcmp	d1, d1
   3ee94:	b.vs	3ef60 <cacosh@@GLIBC_2.17+0xe8>
   3ee98:	fmov	d2, d0
   3ee9c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3eea0:	fmov	d0, x0
   3eea4:	fcmp	d1, d0
   3eea8:	b.le	3eed8 <cacosh@@GLIBC_2.17+0x60>
   3eeac:	fcmp	d3, d3
   3eeb0:	b.vs	3ef88 <cacosh@@GLIBC_2.17+0x110>
   3eeb4:	fcmp	d3, d0
   3eeb8:	b.le	3efa4 <cacosh@@GLIBC_2.17+0x12c>
   3eebc:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3eec0:	fcmpe	d2, #0.0
   3eec4:	ldr	d1, [x0, #2368]
   3eec8:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3eecc:	ldr	d0, [x0, #2384]
   3eed0:	fcsel	d1, d1, d0, mi  // mi = first
   3eed4:	b	3ef48 <cacosh@@GLIBC_2.17+0xd0>
   3eed8:	mov	x0, #0x10000000000000      	// #4503599627370496
   3eedc:	fmov	d4, x0
   3eee0:	fcmpe	d1, d4
   3eee4:	b.ge	3ef30 <cacosh@@GLIBC_2.17+0xb8>  // b.tcont
   3eee8:	fcmp	d2, #0.0
   3eeec:	b.ne	3ef30 <cacosh@@GLIBC_2.17+0xb8>  // b.any
   3eef0:	fcmp	d3, d3
   3eef4:	b.vs	3f000 <cacosh@@GLIBC_2.17+0x188>
   3eef8:	fcmp	d3, d0
   3eefc:	b.gt	3ef40 <cacosh@@GLIBC_2.17+0xc8>
   3ef00:	fcmpe	d3, d4
   3ef04:	b.lt	3efd4 <cacosh@@GLIBC_2.17+0x15c>  // b.tstop
   3ef08:	fneg	d0, d8
   3ef0c:	fmov	d1, d2
   3ef10:	mov	w0, #0x1                   	// #1
   3ef14:	bl	3f918 <casinh@@GLIBC_2.17+0x150>
   3ef18:	fmov	x0, d8
   3ef1c:	tbz	x0, #63, 3ef9c <cacosh@@GLIBC_2.17+0x124>
   3ef20:	fneg	d1, d1
   3ef24:	ldr	d8, [sp, #16]
   3ef28:	ldp	x29, x30, [sp], #32
   3ef2c:	ret
   3ef30:	fcmp	d3, d3
   3ef34:	b.vs	3ef78 <cacosh@@GLIBC_2.17+0x100>
   3ef38:	fcmp	d3, d0
   3ef3c:	b.le	3ef08 <cacosh@@GLIBC_2.17+0x90>
   3ef40:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3ef44:	ldr	d1, [x0, #576]
   3ef48:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ef4c:	fmov	d2, x0
   3ef50:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3ef54:	fmov	d0, x0
   3ef58:	bit	v1.8b, v8.8b, v2.8b
   3ef5c:	b	3ef24 <cacosh@@GLIBC_2.17+0xac>
   3ef60:	fcmp	d3, d3
   3ef64:	b.vs	3ef78 <cacosh@@GLIBC_2.17+0x100>
   3ef68:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3ef6c:	fmov	d0, x0
   3ef70:	fcmp	d3, d0
   3ef74:	b.gt	3ef88 <cacosh@@GLIBC_2.17+0x110>
   3ef78:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3ef7c:	fmov	d0, x0
   3ef80:	fmov	d1, x0
   3ef84:	b	3ef24 <cacosh@@GLIBC_2.17+0xac>
   3ef88:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   3ef8c:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3ef90:	fmov	d0, x1
   3ef94:	fmov	d1, x0
   3ef98:	b	3ef24 <cacosh@@GLIBC_2.17+0xac>
   3ef9c:	fneg	d0, d0
   3efa0:	b	3ef24 <cacosh@@GLIBC_2.17+0xac>
   3efa4:	fmov	x0, d2
   3efa8:	movi	d3, #0x0
   3efac:	cmp	x0, #0x0
   3efb0:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3efb4:	ldr	d1, [x0, #2416]
   3efb8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3efbc:	fmov	d2, x0
   3efc0:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3efc4:	fmov	d0, x0
   3efc8:	fcsel	d1, d1, d3, lt  // lt = tstop
   3efcc:	bit	v1.8b, v8.8b, v2.8b
   3efd0:	b	3ef24 <cacosh@@GLIBC_2.17+0xac>
   3efd4:	fcmp	d8, #0.0
   3efd8:	b.ne	3ef08 <cacosh@@GLIBC_2.17+0x90>  // b.any
   3efdc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3efe0:	movi	d0, #0x0
   3efe4:	ldr	d1, [x0, #576]
   3efe8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3efec:	fmov	d2, x0
   3eff0:	bit	v1.8b, v8.8b, v2.8b
   3eff4:	ldr	d8, [sp, #16]
   3eff8:	ldp	x29, x30, [sp], #32
   3effc:	ret
   3f000:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3f004:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f008:	fmov	d0, x0
   3f00c:	ldr	d1, [x1, #576]
   3f010:	b	3ef24 <cacosh@@GLIBC_2.17+0xac>
   3f014:	nop

000000000003f018 <ccos@@GLIBC_2.17>:
   3f018:	fmov	d2, d1
   3f01c:	fmov	d1, d0
   3f020:	fneg	d0, d2
   3f024:	b	3f028 <ccosh@@GLIBC_2.17>

000000000003f028 <ccosh@@GLIBC_2.17>:
   3f028:	stp	x29, x30, [sp, #-96]!
   3f02c:	fabs	d2, d1
   3f030:	mov	x29, sp
   3f034:	stp	x19, x20, [sp, #16]
   3f038:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3f03c:	stp	d8, d9, [sp, #32]
   3f040:	fmov	d8, d0
   3f044:	fmov	d0, d1
   3f048:	ldr	x0, [x19, #4032]
   3f04c:	ldr	x1, [x0]
   3f050:	str	x1, [sp, #88]
   3f054:	mov	x1, #0x0                   	// #0
   3f058:	str	d10, [sp, #48]
   3f05c:	fabs	d10, d8
   3f060:	fcmp	d10, d10
   3f064:	b.vs	3f2fc <ccosh@@GLIBC_2.17+0x2d4>
   3f068:	fmov	d3, d1
   3f06c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3f070:	fmov	d1, x0
   3f074:	fcmp	d10, d1
   3f078:	b.le	3f0f4 <ccosh@@GLIBC_2.17+0xcc>
   3f07c:	fcmp	d2, d2
   3f080:	b.vs	3f33c <ccosh@@GLIBC_2.17+0x314>
   3f084:	fcmp	d2, d1
   3f088:	b.gt	3f33c <ccosh@@GLIBC_2.17+0x314>
   3f08c:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f090:	fmov	d1, x0
   3f094:	fcmpe	d2, d1
   3f098:	b.lt	3f180 <ccosh@@GLIBC_2.17+0x158>  // b.tstop
   3f09c:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f0a0:	fmov	d1, x0
   3f0a4:	fcmpe	d2, d1
   3f0a8:	b.le	3f320 <ccosh@@GLIBC_2.17+0x2f8>
   3f0ac:	add	x1, sp, #0x50
   3f0b0:	add	x0, sp, #0x48
   3f0b4:	bl	3d0c0 <sincos@@GLIBC_2.17>
   3f0b8:	ldp	d3, d1, [sp, #72]
   3f0bc:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f0c0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3f0c4:	fmov	d0, x0
   3f0c8:	fmov	d2, x1
   3f0cc:	bit	v0.8b, v1.8b, v2.8b
   3f0d0:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f0d4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3f0d8:	fmov	d1, x0
   3f0dc:	fmov	d2, x1
   3f0e0:	bit	v1.8b, v3.8b, v2.8b
   3f0e4:	and	v8.8b, v8.8b, v2.8b
   3f0e8:	eor	v8.8b, v8.8b, v1.8b
   3f0ec:	fmov	d1, d8
   3f0f0:	b	3f130 <ccosh@@GLIBC_2.17+0x108>
   3f0f4:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f0f8:	fmov	d3, x0
   3f0fc:	fcmpe	d10, d3
   3f100:	b.ge	3f158 <ccosh@@GLIBC_2.17+0x130>  // b.tcont
   3f104:	fcmp	d8, #0.0
   3f108:	b.eq	3f1a8 <ccosh@@GLIBC_2.17+0x180>  // b.none
   3f10c:	fcmp	d2, d2
   3f110:	b.vs	3f11c <ccosh@@GLIBC_2.17+0xf4>
   3f114:	fcmp	d2, d1
   3f118:	b.le	3f1c0 <ccosh@@GLIBC_2.17+0x198>
   3f11c:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f120:	fmov	d8, x0
   3f124:	fsub	d0, d0, d0
   3f128:	fmov	d1, d8
   3f12c:	nop
   3f130:	ldr	x19, [x19, #4032]
   3f134:	ldr	x1, [sp, #88]
   3f138:	ldr	x0, [x19]
   3f13c:	eor	x0, x1, x0
   3f140:	cbnz	x0, 3f34c <ccosh@@GLIBC_2.17+0x324>
   3f144:	ldp	x19, x20, [sp, #16]
   3f148:	ldp	d8, d9, [sp, #32]
   3f14c:	ldr	d10, [sp, #48]
   3f150:	ldp	x29, x30, [sp], #96
   3f154:	ret
   3f158:	fcmp	d2, d2
   3f15c:	b.vs	3f168 <ccosh@@GLIBC_2.17+0x140>
   3f160:	fcmp	d2, d1
   3f164:	b.le	3f1c0 <ccosh@@GLIBC_2.17+0x198>
   3f168:	fcmp	d8, #0.0
   3f16c:	movi	d1, #0x0
   3f170:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f174:	fmov	d3, x0
   3f178:	fcsel	d8, d3, d1, ne  // ne = any
   3f17c:	b	3f124 <ccosh@@GLIBC_2.17+0xfc>
   3f180:	fcmp	d0, #0.0
   3f184:	b.ne	3f09c <ccosh@@GLIBC_2.17+0x74>  // b.any
   3f188:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f18c:	fmov	d1, x0
   3f190:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f194:	and	v3.8b, v8.8b, v1.8b
   3f198:	eor	v2.8b, v3.8b, v0.8b
   3f19c:	fmov	d0, x0
   3f1a0:	fmov	d1, d2
   3f1a4:	b	3f130 <ccosh@@GLIBC_2.17+0x108>
   3f1a8:	fcmp	d2, d2
   3f1ac:	b.vs	3f1b8 <ccosh@@GLIBC_2.17+0x190>
   3f1b0:	fcmp	d2, d1
   3f1b4:	b.le	3f1c0 <ccosh@@GLIBC_2.17+0x198>
   3f1b8:	movi	d8, #0x0
   3f1bc:	b	3f124 <ccosh@@GLIBC_2.17+0xfc>
   3f1c0:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3f1c4:	mov	x0, #0xf80000000000        	// #272678883688448
   3f1c8:	movk	x0, #0x408f, lsl #48
   3f1cc:	fmov	d4, x0
   3f1d0:	ldr	d1, [x1, #560]
   3f1d4:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f1d8:	fmov	d3, x0
   3f1dc:	fmul	d1, d1, d4
   3f1e0:	fcmpe	d2, d3
   3f1e4:	fcvtzs	w20, d1
   3f1e8:	b.le	3f314 <ccosh@@GLIBC_2.17+0x2ec>
   3f1ec:	add	x1, sp, #0x50
   3f1f0:	add	x0, sp, #0x48
   3f1f4:	bl	3d0c0 <sincos@@GLIBC_2.17>
   3f1f8:	scvtf	d9, w20
   3f1fc:	fcmpe	d9, d10
   3f200:	b.pl	3f294 <ccosh@@GLIBC_2.17+0x26c>  // b.nfrst
   3f204:	fmov	d0, d9
   3f208:	bl	333e8 <__exp_finite@GLIBC_2.17>
   3f20c:	fmov	x0, d8
   3f210:	fmov	d8, d0
   3f214:	ldr	d2, [sp, #72]
   3f218:	tbz	x0, #63, 3f220 <ccosh@@GLIBC_2.17+0x1f8>
   3f21c:	fneg	d2, d2
   3f220:	fmov	d1, #5.000000000000000000e-01
   3f224:	fsub	d0, d10, d9
   3f228:	ldr	d3, [sp, #80]
   3f22c:	fmul	d1, d8, d1
   3f230:	fcmpe	d9, d0
   3f234:	fmul	d2, d1, d2
   3f238:	fmul	d1, d1, d3
   3f23c:	stp	d2, d1, [sp, #72]
   3f240:	b.mi	3f2c8 <ccosh@@GLIBC_2.17+0x2a0>  // b.first
   3f244:	bl	333e8 <__exp_finite@GLIBC_2.17>
   3f248:	ldp	d2, d8, [sp, #72]
   3f24c:	fmul	d2, d0, d2
   3f250:	fmul	d8, d0, d8
   3f254:	fmov	d1, d2
   3f258:	fmov	d0, d8
   3f25c:	nop
   3f260:	fabs	d4, d8
   3f264:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f268:	fmov	d3, x0
   3f26c:	fcmpe	d4, d3
   3f270:	b.pl	3f278 <ccosh@@GLIBC_2.17+0x250>  // b.nfrst
   3f274:	fmul	d8, d8, d8
   3f278:	fabs	d4, d2
   3f27c:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f280:	fmov	d3, x0
   3f284:	fcmpe	d4, d3
   3f288:	b.pl	3f130 <ccosh@@GLIBC_2.17+0x108>  // b.nfrst
   3f28c:	fmul	d2, d2, d2
   3f290:	b	3f130 <ccosh@@GLIBC_2.17+0x108>
   3f294:	fmov	d0, d8
   3f298:	bl	332b0 <__cosh_finite@GLIBC_2.17>
   3f29c:	fmov	d1, d0
   3f2a0:	ldr	d2, [sp, #80]
   3f2a4:	fmov	d0, d8
   3f2a8:	fmul	d8, d1, d2
   3f2ac:	bl	36588 <__sinh_finite@GLIBC_2.17>
   3f2b0:	fmov	d2, d0
   3f2b4:	ldr	d1, [sp, #72]
   3f2b8:	fmov	d0, d8
   3f2bc:	fmul	d2, d2, d1
   3f2c0:	fmov	d1, d2
   3f2c4:	b	3f260 <ccosh@@GLIBC_2.17+0x238>
   3f2c8:	fsub	d0, d0, d9
   3f2cc:	fmul	d2, d2, d8
   3f2d0:	fmul	d1, d1, d8
   3f2d4:	fcmpe	d9, d0
   3f2d8:	stp	d2, d1, [sp, #72]
   3f2dc:	b.pl	3f244 <ccosh@@GLIBC_2.17+0x21c>  // b.nfrst
   3f2e0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3f2e4:	fmov	d0, x0
   3f2e8:	fmul	d8, d1, d0
   3f2ec:	fmul	d2, d2, d0
   3f2f0:	fmov	d0, d8
   3f2f4:	fmov	d1, d2
   3f2f8:	b	3f260 <ccosh@@GLIBC_2.17+0x238>
   3f2fc:	fcmp	d0, #0.0
   3f300:	b.ne	3f32c <ccosh@@GLIBC_2.17+0x304>  // b.any
   3f304:	fmov	d1, d0
   3f308:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f30c:	fmov	d0, x0
   3f310:	b	3f130 <ccosh@@GLIBC_2.17+0x108>
   3f314:	fmov	d1, #1.000000000000000000e+00
   3f318:	stp	d0, d1, [sp, #72]
   3f31c:	b	3f1f8 <ccosh@@GLIBC_2.17+0x1d0>
   3f320:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f324:	fmov	d0, x0
   3f328:	b	3f0d0 <ccosh@@GLIBC_2.17+0xa8>
   3f32c:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f330:	fmov	d0, x0
   3f334:	fmov	d1, x0
   3f338:	b	3f130 <ccosh@@GLIBC_2.17+0x108>
   3f33c:	fsub	d1, d0, d0
   3f340:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f344:	fmov	d0, x0
   3f348:	b	3f130 <ccosh@@GLIBC_2.17+0x108>
   3f34c:	bl	ba70 <__stack_chk_fail@plt>

000000000003f350 <casin@@GLIBC_2.17>:
   3f350:	fcmp	d0, d0
   3f354:	fmov	d2, d0
   3f358:	b.vs	3f38c <casin@@GLIBC_2.17+0x3c>
   3f35c:	fcmp	d1, d1
   3f360:	b.vs	3f38c <casin@@GLIBC_2.17+0x3c>
   3f364:	fneg	d0, d1
   3f368:	fmov	d1, d2
   3f36c:	stp	x29, x30, [sp, #-16]!
   3f370:	mov	x29, sp
   3f374:	bl	3f7c8 <casinh@@GLIBC_2.17>
   3f378:	fmov	d2, d1
   3f37c:	ldp	x29, x30, [sp], #16
   3f380:	fneg	d1, d0
   3f384:	fmov	d0, d2
   3f388:	ret
   3f38c:	fcmp	d2, #0.0
   3f390:	fmov	d0, d2
   3f394:	b.eq	3f3d4 <casin@@GLIBC_2.17+0x84>  // b.none
   3f398:	fabs	d2, d2
   3f39c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3f3a0:	fmov	d0, x0
   3f3a4:	fcmp	d2, d0
   3f3a8:	b.gt	3f3b8 <casin@@GLIBC_2.17+0x68>
   3f3ac:	fabs	d2, d1
   3f3b0:	fcmp	d2, d0
   3f3b4:	b.le	3f3d8 <casin@@GLIBC_2.17+0x88>
   3f3b8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f3bc:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3f3c0:	fmov	d2, x0
   3f3c4:	fmov	d3, x1
   3f3c8:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f3cc:	fmov	d0, x0
   3f3d0:	bif	v1.8b, v2.8b, v3.8b
   3f3d4:	ret
   3f3d8:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f3dc:	fmov	d1, x0
   3f3e0:	fmov	d0, x0
   3f3e4:	ret

000000000003f3e8 <csin@@GLIBC_2.17>:
   3f3e8:	stp	x29, x30, [sp, #-112]!
   3f3ec:	fmov	d2, d0
   3f3f0:	fabs	d0, d0
   3f3f4:	mov	x29, sp
   3f3f8:	stp	x19, x20, [sp, #16]
   3f3fc:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3f400:	ldr	x0, [x20, #4032]
   3f404:	fcmp	d0, d0
   3f408:	stp	d10, d11, [sp, #64]
   3f40c:	fmov	d11, d1
   3f410:	ldr	x1, [x0]
   3f414:	str	x1, [sp, #104]
   3f418:	mov	x1, #0x0                   	// #0
   3f41c:	fabs	d10, d1
   3f420:	b.vs	3f6ec <csin@@GLIBC_2.17+0x304>
   3f424:	fmov	x0, d2
   3f428:	str	x21, [sp, #32]
   3f42c:	lsr	x21, x0, #63
   3f430:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3f434:	fmov	d1, x0
   3f438:	fcmp	d0, d1
   3f43c:	b.le	3f47c <csin@@GLIBC_2.17+0x94>
   3f440:	fcmp	d10, d10
   3f444:	b.vs	3f770 <csin@@GLIBC_2.17+0x388>
   3f448:	fcmp	d10, d1
   3f44c:	b.gt	3f694 <csin@@GLIBC_2.17+0x2ac>
   3f450:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f454:	fmov	d1, x0
   3f458:	fcmpe	d10, d1
   3f45c:	b.lt	3f6dc <csin@@GLIBC_2.17+0x2f4>  // b.tstop
   3f460:	ldr	x21, [sp, #32]
   3f464:	mov	w0, #0x1                   	// #1
   3f468:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3f46c:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f470:	fmov	d0, x0
   3f474:	fmov	d1, x0
   3f478:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f47c:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f480:	fmov	d3, x0
   3f484:	stp	d8, d9, [sp, #48]
   3f488:	fcmpe	d0, d3
   3f48c:	b.ge	3f4cc <csin@@GLIBC_2.17+0xe4>  // b.tcont
   3f490:	fcmp	d2, #0.0
   3f494:	b.ne	3f4cc <csin@@GLIBC_2.17+0xe4>  // b.any
   3f498:	fcmp	d10, d10
   3f49c:	b.vs	3f738 <csin@@GLIBC_2.17+0x350>
   3f4a0:	fcmp	d10, d1
   3f4a4:	b.le	3f54c <csin@@GLIBC_2.17+0x164>
   3f4a8:	movi	d2, #0x0
   3f4ac:	cmp	w21, #0x0
   3f4b0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f4b4:	fmov	d0, x0
   3f4b8:	fmov	d1, d11
   3f4bc:	ldr	x21, [sp, #32]
   3f4c0:	fcsel	d0, d0, d2, ne  // ne = any
   3f4c4:	ldp	d8, d9, [sp, #48]
   3f4c8:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f4cc:	fcmp	d10, d10
   3f4d0:	b.vs	3f790 <csin@@GLIBC_2.17+0x3a8>
   3f4d4:	fcmp	d10, d1
   3f4d8:	b.le	3f54c <csin@@GLIBC_2.17+0x164>
   3f4dc:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f4e0:	fmov	d1, x0
   3f4e4:	fcmpe	d0, d1
   3f4e8:	b.le	3f784 <csin@@GLIBC_2.17+0x39c>
   3f4ec:	add	x1, sp, #0x60
   3f4f0:	add	x0, sp, #0x58
   3f4f4:	bl	3d0c0 <sincos@@GLIBC_2.17>
   3f4f8:	ldp	d0, d1, [sp, #88]
   3f4fc:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f500:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3f504:	fmov	d3, x0
   3f508:	fmov	d2, x1
   3f50c:	bit	v3.8b, v1.8b, v2.8b
   3f510:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f514:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3f518:	fmov	d2, x0
   3f51c:	fmov	d1, x1
   3f520:	bit	v2.8b, v0.8b, v1.8b
   3f524:	cbnz	w21, 3f760 <csin@@GLIBC_2.17+0x378>
   3f528:	fmov	d0, d2
   3f52c:	fmov	d1, d3
   3f530:	fmov	x0, d11
   3f534:	tbz	x0, #63, 3f654 <csin@@GLIBC_2.17+0x26c>
   3f538:	fmov	d0, d2
   3f53c:	fneg	d1, d3
   3f540:	ldr	x21, [sp, #32]
   3f544:	ldp	d8, d9, [sp, #48]
   3f548:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f54c:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3f550:	mov	x0, #0xf80000000000        	// #272678883688448
   3f554:	movk	x0, #0x408f, lsl #48
   3f558:	fmov	d3, x0
   3f55c:	ldr	d2, [x1, #560]
   3f560:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f564:	fmov	d1, x0
   3f568:	fmul	d2, d2, d3
   3f56c:	fcmpe	d0, d1
   3f570:	fcvtzs	w19, d2
   3f574:	b.le	3f72c <csin@@GLIBC_2.17+0x344>
   3f578:	add	x1, sp, #0x60
   3f57c:	add	x0, sp, #0x58
   3f580:	bl	3d0c0 <sincos@@GLIBC_2.17>
   3f584:	cbz	w21, 3f594 <csin@@GLIBC_2.17+0x1ac>
   3f588:	ldr	d0, [sp, #88]
   3f58c:	fneg	d0, d0
   3f590:	str	d0, [sp, #88]
   3f594:	scvtf	d9, w19
   3f598:	fcmpe	d9, d10
   3f59c:	b.pl	3f660 <csin@@GLIBC_2.17+0x278>  // b.nfrst
   3f5a0:	fmov	d0, d9
   3f5a4:	bl	333e8 <__exp_finite@GLIBC_2.17>
   3f5a8:	fmov	x0, d11
   3f5ac:	fmov	d1, d0
   3f5b0:	ldr	d2, [sp, #96]
   3f5b4:	tbz	x0, #63, 3f5bc <csin@@GLIBC_2.17+0x1d4>
   3f5b8:	fneg	d2, d2
   3f5bc:	fmov	d8, #5.000000000000000000e-01
   3f5c0:	fsub	d0, d10, d9
   3f5c4:	ldr	d3, [sp, #88]
   3f5c8:	fmul	d8, d1, d8
   3f5cc:	fcmpe	d9, d0
   3f5d0:	fmul	d2, d8, d2
   3f5d4:	fmul	d8, d8, d3
   3f5d8:	stp	d8, d2, [sp, #88]
   3f5dc:	b.mi	3f6a8 <csin@@GLIBC_2.17+0x2c0>  // b.first
   3f5e0:	bl	333e8 <__exp_finite@GLIBC_2.17>
   3f5e4:	ldp	d8, d2, [sp, #88]
   3f5e8:	fmul	d2, d0, d2
   3f5ec:	fmul	d8, d0, d8
   3f5f0:	fmov	d1, d2
   3f5f4:	fmov	d0, d8
   3f5f8:	fabs	d4, d8
   3f5fc:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f600:	fmov	d3, x0
   3f604:	fcmpe	d4, d3
   3f608:	b.pl	3f610 <csin@@GLIBC_2.17+0x228>  // b.nfrst
   3f60c:	fmul	d8, d8, d8
   3f610:	fabs	d4, d2
   3f614:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f618:	fmov	d3, x0
   3f61c:	fcmpe	d4, d3
   3f620:	b.pl	3f654 <csin@@GLIBC_2.17+0x26c>  // b.nfrst
   3f624:	fmul	d2, d2, d2
   3f628:	ldr	x21, [sp, #32]
   3f62c:	ldp	d8, d9, [sp, #48]
   3f630:	ldr	x20, [x20, #4032]
   3f634:	ldr	x1, [sp, #104]
   3f638:	ldr	x0, [x20]
   3f63c:	eor	x0, x1, x0
   3f640:	cbnz	x0, 3f7a8 <csin@@GLIBC_2.17+0x3c0>
   3f644:	ldp	x19, x20, [sp, #16]
   3f648:	ldp	d10, d11, [sp, #64]
   3f64c:	ldp	x29, x30, [sp], #112
   3f650:	ret
   3f654:	ldr	x21, [sp, #32]
   3f658:	ldp	d8, d9, [sp, #48]
   3f65c:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f660:	fmov	d0, d11
   3f664:	bl	332b0 <__cosh_finite@GLIBC_2.17>
   3f668:	fmov	d8, d0
   3f66c:	ldr	d1, [sp, #88]
   3f670:	fmov	d0, d11
   3f674:	fmul	d8, d8, d1
   3f678:	bl	36588 <__sinh_finite@GLIBC_2.17>
   3f67c:	fmov	d2, d0
   3f680:	ldr	d1, [sp, #96]
   3f684:	fmov	d0, d8
   3f688:	fmul	d2, d2, d1
   3f68c:	fmov	d1, d2
   3f690:	b	3f5f8 <csin@@GLIBC_2.17+0x210>
   3f694:	ldr	x21, [sp, #32]
   3f698:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f69c:	fsub	d0, d0, d0
   3f6a0:	fmov	d1, x0
   3f6a4:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f6a8:	fsub	d0, d0, d9
   3f6ac:	fmul	d8, d8, d1
   3f6b0:	fmul	d2, d2, d1
   3f6b4:	fcmpe	d9, d0
   3f6b8:	stp	d8, d2, [sp, #88]
   3f6bc:	b.pl	3f5e0 <csin@@GLIBC_2.17+0x1f8>  // b.nfrst
   3f6c0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3f6c4:	fmov	d0, x0
   3f6c8:	fmul	d2, d2, d0
   3f6cc:	fmul	d8, d8, d0
   3f6d0:	fmov	d1, d2
   3f6d4:	fmov	d0, d8
   3f6d8:	b	3f5f8 <csin@@GLIBC_2.17+0x210>
   3f6dc:	fcmp	d11, #0.0
   3f6e0:	b.ne	3f460 <csin@@GLIBC_2.17+0x78>  // b.any
   3f6e4:	ldr	x21, [sp, #32]
   3f6e8:	b	3f720 <csin@@GLIBC_2.17+0x338>
   3f6ec:	fcmp	d10, d10
   3f6f0:	b.vs	3f7b4 <csin@@GLIBC_2.17+0x3cc>
   3f6f4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3f6f8:	fmov	d1, x0
   3f6fc:	fcmp	d10, d1
   3f700:	b.gt	3f698 <csin@@GLIBC_2.17+0x2b0>
   3f704:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f708:	fmov	d1, x0
   3f70c:	fcmpe	d10, d1
   3f710:	b.ge	3f464 <csin@@GLIBC_2.17+0x7c>  // b.tcont
   3f714:	fcmp	d11, #0.0
   3f718:	b.ne	3f464 <csin@@GLIBC_2.17+0x7c>  // b.any
   3f71c:	nop
   3f720:	fsub	d0, d0, d0
   3f724:	fmov	d1, d11
   3f728:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f72c:	fmov	d1, #1.000000000000000000e+00
   3f730:	stp	d0, d1, [sp, #88]
   3f734:	b	3f584 <csin@@GLIBC_2.17+0x19c>
   3f738:	movi	d2, #0x0
   3f73c:	cmp	w21, #0x0
   3f740:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f744:	fmov	d0, x0
   3f748:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f74c:	fmov	d1, x0
   3f750:	ldr	x21, [sp, #32]
   3f754:	fcsel	d0, d0, d2, ne  // ne = any
   3f758:	ldp	d8, d9, [sp, #48]
   3f75c:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f760:	fneg	d2, d2
   3f764:	fmov	d1, d3
   3f768:	fmov	d0, d2
   3f76c:	b	3f530 <csin@@GLIBC_2.17+0x148>
   3f770:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f774:	fmov	d0, x0
   3f778:	fmov	d1, x0
   3f77c:	ldr	x21, [sp, #32]
   3f780:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f784:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f788:	fmov	d3, x0
   3f78c:	b	3f510 <csin@@GLIBC_2.17+0x128>
   3f790:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f794:	fmov	d0, x0
   3f798:	fmov	d1, x0
   3f79c:	ldr	x21, [sp, #32]
   3f7a0:	ldp	d8, d9, [sp, #48]
   3f7a4:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f7a8:	str	x21, [sp, #32]
   3f7ac:	stp	d8, d9, [sp, #48]
   3f7b0:	bl	ba70 <__stack_chk_fail@plt>
   3f7b4:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f7b8:	fmov	d0, x0
   3f7bc:	fmov	d1, x0
   3f7c0:	b	3f630 <csin@@GLIBC_2.17+0x248>
   3f7c4:	nop

000000000003f7c8 <casinh@@GLIBC_2.17>:
   3f7c8:	fabs	d3, d0
   3f7cc:	fabs	d4, d1
   3f7d0:	fcmp	d3, d3
   3f7d4:	b.vs	3f860 <casinh@@GLIBC_2.17+0x98>
   3f7d8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3f7dc:	fmov	d2, x0
   3f7e0:	fcmp	d3, d2
   3f7e4:	b.le	3f80c <casinh@@GLIBC_2.17+0x44>
   3f7e8:	fcmp	d4, d4
   3f7ec:	b.vs	3f8ec <casinh@@GLIBC_2.17+0x124>
   3f7f0:	fcmp	d4, d2
   3f7f4:	b.gt	3f8f8 <casinh@@GLIBC_2.17+0x130>
   3f7f8:	movi	d2, #0x0
   3f7fc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f800:	fmov	d3, x0
   3f804:	bif	v1.8b, v2.8b, v3.8b
   3f808:	ret
   3f80c:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f810:	fmov	d5, x0
   3f814:	fcmpe	d3, d5
   3f818:	b.ge	3f848 <casinh@@GLIBC_2.17+0x80>  // b.tcont
   3f81c:	fcmp	d0, #0.0
   3f820:	b.ne	3f848 <casinh@@GLIBC_2.17+0x80>  // b.any
   3f824:	fcmp	d4, d4
   3f828:	b.vs	3f8c4 <casinh@@GLIBC_2.17+0xfc>
   3f82c:	fcmp	d4, d2
   3f830:	b.gt	3f898 <casinh@@GLIBC_2.17+0xd0>
   3f834:	fcmpe	d4, d5
   3f838:	b.ge	3f858 <casinh@@GLIBC_2.17+0x90>  // b.tcont
   3f83c:	fcmp	d1, #0.0
   3f840:	b.ne	3f858 <casinh@@GLIBC_2.17+0x90>  // b.any
   3f844:	ret
   3f848:	fcmp	d4, d4
   3f84c:	b.vs	3f8c4 <casinh@@GLIBC_2.17+0xfc>
   3f850:	fcmp	d4, d2
   3f854:	b.gt	3f898 <casinh@@GLIBC_2.17+0xd0>
   3f858:	mov	w0, #0x0                   	// #0
   3f85c:	b	3f918 <casinh@@GLIBC_2.17+0x150>
   3f860:	fcmp	d4, d4
   3f864:	b.vs	3f8ec <casinh@@GLIBC_2.17+0x124>
   3f868:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3f86c:	fmov	d2, x0
   3f870:	fcmp	d4, d2
   3f874:	b.le	3f8d4 <casinh@@GLIBC_2.17+0x10c>
   3f878:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f87c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3f880:	fmov	d2, x0
   3f884:	fmov	d3, x1
   3f888:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f88c:	fmov	d1, x0
   3f890:	bif	v0.8b, v2.8b, v3.8b
   3f894:	ret
   3f898:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f89c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3f8a0:	fmov	d2, x0
   3f8a4:	fmov	d4, x1
   3f8a8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3f8ac:	bif	v0.8b, v2.8b, v4.8b
   3f8b0:	ldr	d3, [x0, #576]
   3f8b4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f8b8:	fmov	d2, x0
   3f8bc:	bif	v1.8b, v3.8b, v2.8b
   3f8c0:	ret
   3f8c4:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f8c8:	fmov	d1, x0
   3f8cc:	fmov	d0, x0
   3f8d0:	ret
   3f8d4:	mov	x0, #0x10000000000000      	// #4503599627370496
   3f8d8:	fmov	d2, x0
   3f8dc:	fcmpe	d4, d2
   3f8e0:	b.ge	3f8ec <casinh@@GLIBC_2.17+0x124>  // b.tcont
   3f8e4:	fcmp	d1, #0.0
   3f8e8:	b.eq	3f7f8 <casinh@@GLIBC_2.17+0x30>  // b.none
   3f8ec:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3f8f0:	fmov	d1, x0
   3f8f4:	ret
   3f8f8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3f8fc:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3f900:	fmov	d2, x0
   3f904:	fmov	d4, x1
   3f908:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   3f90c:	bif	v0.8b, v2.8b, v4.8b
   3f910:	ldr	d3, [x0, #2384]
   3f914:	b	3f8b4 <casinh@@GLIBC_2.17+0xec>
   3f918:	stp	x29, x30, [sp, #-96]!
   3f91c:	mov	x1, #0x4330000000000000    	// #4841369599423283200
   3f920:	fmov	d2, x1
   3f924:	mov	x29, sp
   3f928:	stp	d10, d11, [sp, #48]
   3f92c:	fabs	d10, d0
   3f930:	fabs	d11, d1
   3f934:	str	x19, [sp, #16]
   3f938:	mov	w19, w0
   3f93c:	stp	d8, d9, [sp, #32]
   3f940:	fmov	d8, d0
   3f944:	fcmpe	d10, d2
   3f948:	stp	d12, d13, [sp, #64]
   3f94c:	fmov	d9, d1
   3f950:	b.ge	3f95c <casinh@@GLIBC_2.17+0x194>  // b.tcont
   3f954:	fcmpe	d11, d2
   3f958:	b.lt	3f9c0 <casinh@@GLIBC_2.17+0x1f8>  // b.tstop
   3f95c:	cbnz	w19, 3f9b4 <casinh@@GLIBC_2.17+0x1ec>
   3f960:	fmov	d0, d10
   3f964:	fmov	d1, d11
   3f968:	bl	41200 <clog@@GLIBC_2.17>
   3f96c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   3f970:	ldr	d3, [x0, #560]
   3f974:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f978:	fmov	d2, x0
   3f97c:	fadd	d0, d0, d3
   3f980:	bit	v0.8b, v8.8b, v2.8b
   3f984:	cmp	w19, #0x0
   3f988:	fmov	d2, #1.000000000000000000e+00
   3f98c:	fcsel	d12, d9, d2, eq  // eq = none
   3f990:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f994:	fmov	d2, x0
   3f998:	ldr	x19, [sp, #16]
   3f99c:	bit	v1.8b, v12.8b, v2.8b
   3f9a0:	ldp	d8, d9, [sp, #32]
   3f9a4:	ldp	d10, d11, [sp, #48]
   3f9a8:	ldp	d12, d13, [sp, #64]
   3f9ac:	ldp	x29, x30, [sp], #96
   3f9b0:	ret
   3f9b4:	fmov	d1, d10
   3f9b8:	fmov	d0, d9
   3f9bc:	b	3f968 <casinh@@GLIBC_2.17+0x1a0>
   3f9c0:	fmov	d0, #5.000000000000000000e-01
   3f9c4:	stp	d14, d15, [sp, #80]
   3f9c8:	fmov	d12, d1
   3f9cc:	fcmpe	d10, d0
   3f9d0:	b.lt	3f9e4 <casinh@@GLIBC_2.17+0x21c>  // b.tstop
   3f9d4:	mov	x0, #0x3c80000000000000    	// #4359484439294640128
   3f9d8:	fmov	d0, x0
   3f9dc:	fcmpe	d11, d0
   3f9e0:	b.mi	3fba0 <casinh@@GLIBC_2.17+0x3d8>  // b.first
   3f9e4:	mov	x0, #0x3c80000000000000    	// #4359484439294640128
   3f9e8:	fmov	d0, x0
   3f9ec:	fcmpe	d10, d0
   3f9f0:	b.mi	3fa68 <casinh@@GLIBC_2.17+0x2a0>  // b.first
   3f9f4:	fmov	d14, #1.000000000000000000e+00
   3f9f8:	fcmpe	d11, d14
   3f9fc:	b.le	3fb48 <casinh@@GLIBC_2.17+0x380>
   3fa00:	fmov	d0, #1.500000000000000000e+00
   3fa04:	fcmpe	d11, d0
   3fa08:	b.pl	3fab4 <casinh@@GLIBC_2.17+0x2ec>  // b.nfrst
   3fa0c:	fmov	d13, #5.000000000000000000e-01
   3fa10:	fcmpe	d10, d13
   3fa14:	b.pl	3fab4 <casinh@@GLIBC_2.17+0x2ec>  // b.nfrst
   3fa18:	mov	x0, #0x3970000000000000    	// #4138808057553485824
   3fa1c:	fmov	d1, x0
   3fa20:	fsub	d0, d11, d14
   3fa24:	fadd	d14, d11, d14
   3fa28:	fcmpe	d10, d1
   3fa2c:	fmul	d14, d0, d14
   3fa30:	b.pl	3fce4 <casinh@@GLIBC_2.17+0x51c>  // b.nfrst
   3fa34:	fsqrt	d15, d14
   3fa38:	fmadd	d0, d11, d15, d14
   3fa3c:	fadd	d0, d0, d0
   3fa40:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3fa44:	fmul	d13, d0, d13
   3fa48:	cbz	w19, 3fe54 <casinh@@GLIBC_2.17+0x68c>
   3fa4c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fa50:	fmov	d1, x0
   3fa54:	fmov	d0, d10
   3fa58:	bsl	v1.8b, v9.8b, v15.8b
   3fa5c:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fa60:	fmov	d1, d0
   3fa64:	b	3fbd0 <casinh@@GLIBC_2.17+0x408>
   3fa68:	fmov	d0, #1.500000000000000000e+00
   3fa6c:	fcmpe	d11, d0
   3fa70:	b.lt	3f9f4 <casinh@@GLIBC_2.17+0x22c>  // b.tstop
   3fa74:	fmov	d0, #1.000000000000000000e+00
   3fa78:	fadd	d14, d11, d0
   3fa7c:	fsub	d0, d11, d0
   3fa80:	fmul	d14, d14, d0
   3fa84:	fsqrt	d14, d14
   3fa88:	fadd	d0, d11, d14
   3fa8c:	bl	35a50 <__log_finite@GLIBC_2.17>
   3fa90:	fmov	d13, d0
   3fa94:	cbz	w19, 3fcc4 <casinh@@GLIBC_2.17+0x4fc>
   3fa98:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fa9c:	fmov	d1, x0
   3faa0:	fmov	d0, d10
   3faa4:	bsl	v1.8b, v9.8b, v14.8b
   3faa8:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3faac:	fmov	d1, d0
   3fab0:	b	3fbd0 <casinh@@GLIBC_2.17+0x408>
   3fab4:	fmov	d0, #1.000000000000000000e+00
   3fab8:	fcmpe	d11, d0
   3fabc:	b.pl	3fb5c <casinh@@GLIBC_2.17+0x394>  // b.nfrst
   3fac0:	fmov	d13, #5.000000000000000000e-01
   3fac4:	fcmpe	d10, d13
   3fac8:	b.pl	3fb5c <casinh@@GLIBC_2.17+0x394>  // b.nfrst
   3facc:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   3fad0:	fmov	d1, x0
   3fad4:	fcmpe	d11, d1
   3fad8:	b.lt	3fdd4 <casinh@@GLIBC_2.17+0x60c>  // b.tstop
   3fadc:	mov	x0, #0x3970000000000000    	// #4138808057553485824
   3fae0:	fmov	d2, x0
   3fae4:	fadd	d1, d11, d0
   3fae8:	fsub	d0, d0, d11
   3faec:	fcmpe	d10, d2
   3faf0:	fmul	d0, d1, d0
   3faf4:	b.pl	3fd5c <casinh@@GLIBC_2.17+0x594>  // b.nfrst
   3faf8:	fsqrt	d14, d0
   3fafc:	fadd	d10, d10, d10
   3fb00:	fdiv	d0, d10, d14
   3fb04:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3fb08:	fmul	d13, d0, d13
   3fb0c:	cbz	w19, 3fdf8 <casinh@@GLIBC_2.17+0x630>
   3fb10:	fmov	d1, d9
   3fb14:	fmov	d0, d14
   3fb18:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fb1c:	fmov	d1, d0
   3fb20:	mov	x0, #0x10000000000000      	// #4503599627370496
   3fb24:	fmov	d2, x0
   3fb28:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fb2c:	fmov	d0, x0
   3fb30:	fcmpe	d13, d2
   3fb34:	bsl	v0.8b, v8.8b, v13.8b
   3fb38:	b.mi	3fcd8 <casinh@@GLIBC_2.17+0x510>  // b.first
   3fb3c:	fmov	d12, #1.000000000000000000e+00
   3fb40:	ldp	d14, d15, [sp, #80]
   3fb44:	b	3f990 <casinh@@GLIBC_2.17+0x1c8>
   3fb48:	fcmp	d11, d14
   3fb4c:	b.ne	3fab4 <casinh@@GLIBC_2.17+0x2ec>  // b.any
   3fb50:	fmov	d13, #5.000000000000000000e-01
   3fb54:	fcmpe	d10, d13
   3fb58:	b.mi	3fbfc <casinh@@GLIBC_2.17+0x434>  // b.first
   3fb5c:	fsub	d3, d10, d11
   3fb60:	fadd	d0, d10, d11
   3fb64:	fmov	d2, #1.000000000000000000e+00
   3fb68:	fadd	d1, d10, d10
   3fb6c:	fmadd	d0, d3, d0, d2
   3fb70:	fmul	d1, d1, d11
   3fb74:	bl	41578 <csqrt@@GLIBC_2.17>
   3fb78:	fadd	d11, d1, d11
   3fb7c:	fadd	d0, d0, d10
   3fb80:	fmov	d1, d11
   3fb84:	cbnz	w19, 3fbe8 <casinh@@GLIBC_2.17+0x420>
   3fb88:	bl	41200 <clog@@GLIBC_2.17>
   3fb8c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fb90:	fmov	d2, x0
   3fb94:	ldp	d14, d15, [sp, #80]
   3fb98:	bit	v0.8b, v8.8b, v2.8b
   3fb9c:	b	3f984 <casinh@@GLIBC_2.17+0x1bc>
   3fba0:	fmov	d1, d10
   3fba4:	fmov	d0, #1.000000000000000000e+00
   3fba8:	bl	336d8 <__hypot_finite@GLIBC_2.17>
   3fbac:	fmov	d14, d0
   3fbb0:	fadd	d0, d10, d0
   3fbb4:	bl	35a50 <__log_finite@GLIBC_2.17>
   3fbb8:	fmov	d13, d0
   3fbbc:	cbz	w19, 3fc40 <casinh@@GLIBC_2.17+0x478>
   3fbc0:	fmov	d1, d9
   3fbc4:	fmov	d0, d14
   3fbc8:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fbcc:	fmov	d1, d0
   3fbd0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fbd4:	fmov	d0, x0
   3fbd8:	fmov	d12, #1.000000000000000000e+00
   3fbdc:	bsl	v0.8b, v8.8b, v13.8b
   3fbe0:	ldp	d14, d15, [sp, #80]
   3fbe4:	b	3f990 <casinh@@GLIBC_2.17+0x1c8>
   3fbe8:	fmov	d1, d0
   3fbec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fbf0:	fmov	d0, x0
   3fbf4:	bsl	v0.8b, v9.8b, v11.8b
   3fbf8:	b	3fb88 <casinh@@GLIBC_2.17+0x3c0>
   3fbfc:	mov	x0, #0x3c80000000000000    	// #4359484439294640128
   3fc00:	fmov	d0, x0
   3fc04:	fcmpe	d10, d0
   3fc08:	b.pl	3fc64 <casinh@@GLIBC_2.17+0x49c>  // b.nfrst
   3fc0c:	fsqrt	d11, d10
   3fc10:	fadd	d0, d11, d10
   3fc14:	fadd	d0, d0, d0
   3fc18:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3fc1c:	fmul	d13, d0, d13
   3fc20:	cbz	w19, 3fe2c <casinh@@GLIBC_2.17+0x664>
   3fc24:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fc28:	fmov	d1, x0
   3fc2c:	fmov	d0, d11
   3fc30:	bsl	v1.8b, v9.8b, v14.8b
   3fc34:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fc38:	fmov	d1, d0
   3fc3c:	b	3fbd0 <casinh@@GLIBC_2.17+0x408>
   3fc40:	fmov	d1, d14
   3fc44:	fmov	d0, d11
   3fc48:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fc4c:	fmov	d1, d0
   3fc50:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fc54:	fmov	d0, x0
   3fc58:	ldp	d14, d15, [sp, #80]
   3fc5c:	bsl	v0.8b, v8.8b, v13.8b
   3fc60:	b	3f990 <casinh@@GLIBC_2.17+0x1c8>
   3fc64:	fmov	d1, #4.000000000000000000e+00
   3fc68:	fmov	d0, #2.000000000000000000e+00
   3fc6c:	fmadd	d1, d8, d8, d1
   3fc70:	fsqrt	d1, d1
   3fc74:	fmul	d1, d1, d10
   3fc78:	fmadd	d2, d8, d8, d1
   3fc7c:	fmsub	d11, d8, d8, d1
   3fc80:	fmul	d15, d2, d13
   3fc84:	fmul	d11, d11, d13
   3fc88:	fsqrt	d15, d15
   3fc8c:	fsqrt	d11, d11
   3fc90:	fmadd	d1, d10, d15, d11
   3fc94:	fmadd	d0, d1, d0, d2
   3fc98:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3fc9c:	fmul	d13, d0, d13
   3fca0:	cbz	w19, 3fe40 <casinh@@GLIBC_2.17+0x678>
   3fca4:	fadd	d11, d11, d14
   3fca8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fcac:	fmov	d1, x0
   3fcb0:	fadd	d0, d10, d15
   3fcb4:	bsl	v1.8b, v9.8b, v11.8b
   3fcb8:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fcbc:	fmov	d1, d0
   3fcc0:	b	3fbd0 <casinh@@GLIBC_2.17+0x408>
   3fcc4:	fmov	d1, d10
   3fcc8:	fmov	d0, d14
   3fccc:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fcd0:	fmov	d1, d0
   3fcd4:	b	3fc50 <casinh@@GLIBC_2.17+0x488>
   3fcd8:	fmul	d13, d13, d13
   3fcdc:	ldp	d14, d15, [sp, #80]
   3fce0:	b	3f984 <casinh@@GLIBC_2.17+0x1bc>
   3fce4:	fmul	d3, d8, d8
   3fce8:	fadd	d1, d11, d11
   3fcec:	fmov	d4, #2.000000000000000000e+00
   3fcf0:	fmul	d15, d10, d11
   3fcf4:	fadd	d2, d3, d4
   3fcf8:	fmadd	d1, d1, d11, d2
   3fcfc:	fmul	d1, d1, d3
   3fd00:	fmadd	d2, d14, d14, d1
   3fd04:	fsqrt	d2, d2
   3fd08:	fadd	d2, d2, d14
   3fd0c:	fdiv	d14, d1, d2
   3fd10:	fadd	d2, d3, d2
   3fd14:	fadd	d14, d14, d3
   3fd18:	fmul	d14, d14, d13
   3fd1c:	fsqrt	d14, d14
   3fd20:	fdiv	d15, d15, d14
   3fd24:	fmul	d0, d11, d15
   3fd28:	fmadd	d0, d10, d14, d0
   3fd2c:	fmadd	d0, d0, d4, d2
   3fd30:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3fd34:	fmul	d13, d0, d13
   3fd38:	cbz	w19, 3fe68 <casinh@@GLIBC_2.17+0x6a0>
   3fd3c:	fadd	d11, d11, d15
   3fd40:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fd44:	fmov	d1, x0
   3fd48:	fadd	d0, d10, d14
   3fd4c:	bsl	v1.8b, v9.8b, v11.8b
   3fd50:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fd54:	fmov	d1, d0
   3fd58:	b	3fbd0 <casinh@@GLIBC_2.17+0x408>
   3fd5c:	fmul	d3, d8, d8
   3fd60:	fadd	d1, d11, d11
   3fd64:	fmov	d4, #2.000000000000000000e+00
   3fd68:	fmul	d14, d10, d11
   3fd6c:	fadd	d2, d3, d4
   3fd70:	fmadd	d1, d1, d11, d2
   3fd74:	fmul	d1, d1, d3
   3fd78:	fmadd	d2, d0, d0, d1
   3fd7c:	fsqrt	d2, d2
   3fd80:	fadd	d2, d2, d0
   3fd84:	fadd	d15, d3, d2
   3fd88:	fdiv	d2, d1, d2
   3fd8c:	fmul	d15, d15, d13
   3fd90:	fsqrt	d15, d15
   3fd94:	fadd	d2, d2, d3
   3fd98:	fdiv	d14, d14, d15
   3fd9c:	fmul	d0, d11, d14
   3fda0:	fmadd	d0, d10, d15, d0
   3fda4:	fmadd	d0, d0, d4, d2
   3fda8:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3fdac:	fmul	d13, d0, d13
   3fdb0:	cbz	w19, 3fe7c <casinh@@GLIBC_2.17+0x6b4>
   3fdb4:	fadd	d11, d11, d14
   3fdb8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fdbc:	fmov	d1, x0
   3fdc0:	fadd	d0, d10, d15
   3fdc4:	bsl	v1.8b, v9.8b, v11.8b
   3fdc8:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fdcc:	fmov	d1, d0
   3fdd0:	b	3fb20 <casinh@@GLIBC_2.17+0x358>
   3fdd4:	fmov	d1, d10
   3fdd8:	bl	336d8 <__hypot_finite@GLIBC_2.17>
   3fddc:	fadd	d1, d10, d10
   3fde0:	fadd	d10, d10, d0
   3fde4:	fmov	d14, d0
   3fde8:	fmul	d0, d1, d10
   3fdec:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   3fdf0:	fmul	d13, d0, d13
   3fdf4:	cbnz	w19, 3fb10 <casinh@@GLIBC_2.17+0x348>
   3fdf8:	fmov	d1, d14
   3fdfc:	fmov	d0, d11
   3fe00:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fe04:	fmov	d1, d0
   3fe08:	mov	x0, #0x10000000000000      	// #4503599627370496
   3fe0c:	fmov	d2, x0
   3fe10:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fe14:	fmov	d0, x0
   3fe18:	fcmpe	d13, d2
   3fe1c:	bsl	v0.8b, v8.8b, v13.8b
   3fe20:	b.mi	3fcd8 <casinh@@GLIBC_2.17+0x510>  // b.first
   3fe24:	ldp	d14, d15, [sp, #80]
   3fe28:	b	3f990 <casinh@@GLIBC_2.17+0x1c8>
   3fe2c:	fmov	d1, d11
   3fe30:	fmov	d0, d14
   3fe34:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fe38:	fmov	d1, d0
   3fe3c:	b	3fc50 <casinh@@GLIBC_2.17+0x488>
   3fe40:	fadd	d1, d10, d15
   3fe44:	fadd	d0, d11, d14
   3fe48:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fe4c:	fmov	d1, d0
   3fe50:	b	3fc50 <casinh@@GLIBC_2.17+0x488>
   3fe54:	fmov	d1, d10
   3fe58:	fmov	d0, d15
   3fe5c:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fe60:	fmov	d1, d0
   3fe64:	b	3fc50 <casinh@@GLIBC_2.17+0x488>
   3fe68:	fadd	d1, d10, d14
   3fe6c:	fadd	d0, d11, d15
   3fe70:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fe74:	fmov	d1, d0
   3fe78:	b	3fc50 <casinh@@GLIBC_2.17+0x488>
   3fe7c:	fadd	d1, d10, d15
   3fe80:	fadd	d0, d11, d14
   3fe84:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   3fe88:	fmov	d1, d0
   3fe8c:	b	3fe08 <casinh@@GLIBC_2.17+0x640>

000000000003fe90 <csinh@@GLIBC_2.17>:
   3fe90:	stp	x29, x30, [sp, #-96]!
   3fe94:	fmov	d2, d0
   3fe98:	fabs	d3, d1
   3fe9c:	mov	x29, sp
   3fea0:	stp	x19, x20, [sp, #16]
   3fea4:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   3fea8:	fmov	d0, d1
   3feac:	ldr	x0, [x20, #4032]
   3feb0:	ldr	x1, [x0]
   3feb4:	str	x1, [sp, #88]
   3feb8:	mov	x1, #0x0                   	// #0
   3febc:	str	d10, [sp, #40]
   3fec0:	fabs	d10, d2
   3fec4:	fcmp	d10, d10
   3fec8:	b.vs	4017c <csinh@@GLIBC_2.17+0x2ec>
   3fecc:	fmov	x0, d2
   3fed0:	str	x21, [sp, #32]
   3fed4:	lsr	x21, x0, #63
   3fed8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   3fedc:	fmov	d4, x0
   3fee0:	fcmp	d10, d4
   3fee4:	b.le	3ff84 <csinh@@GLIBC_2.17+0xf4>
   3fee8:	fcmp	d3, d3
   3feec:	b.vs	401c4 <csinh@@GLIBC_2.17+0x334>
   3fef0:	fcmp	d3, d4
   3fef4:	b.gt	401c4 <csinh@@GLIBC_2.17+0x334>
   3fef8:	mov	x0, #0x10000000000000      	// #4503599627370496
   3fefc:	fmov	d2, x0
   3ff00:	fmov	d5, d1
   3ff04:	fcmpe	d3, d2
   3ff08:	b.lt	4011c <csinh@@GLIBC_2.17+0x28c>  // b.tstop
   3ff0c:	mov	x0, #0x10000000000000      	// #4503599627370496
   3ff10:	fmov	d1, x0
   3ff14:	fcmpe	d3, d1
   3ff18:	b.le	401a0 <csinh@@GLIBC_2.17+0x310>
   3ff1c:	add	x1, sp, #0x50
   3ff20:	add	x0, sp, #0x48
   3ff24:	bl	3d0c0 <sincos@@GLIBC_2.17>
   3ff28:	ldp	d5, d1, [sp, #72]
   3ff2c:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3ff30:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3ff34:	fmov	d0, x0
   3ff38:	fmov	d2, x1
   3ff3c:	bit	v0.8b, v1.8b, v2.8b
   3ff40:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   3ff44:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3ff48:	fmov	d1, x0
   3ff4c:	fmov	d2, x1
   3ff50:	bit	v1.8b, v5.8b, v2.8b
   3ff54:	cbz	w21, 401bc <csinh@@GLIBC_2.17+0x32c>
   3ff58:	fneg	d0, d0
   3ff5c:	ldr	x21, [sp, #32]
   3ff60:	ldr	x20, [x20, #4032]
   3ff64:	ldr	x1, [sp, #88]
   3ff68:	ldr	x0, [x20]
   3ff6c:	eor	x0, x1, x0
   3ff70:	cbnz	x0, 401d8 <csinh@@GLIBC_2.17+0x348>
   3ff74:	ldp	x19, x20, [sp, #16]
   3ff78:	ldr	d10, [sp, #40]
   3ff7c:	ldp	x29, x30, [sp], #96
   3ff80:	ret
   3ff84:	mov	x0, #0x10000000000000      	// #4503599627370496
   3ff88:	fmov	d1, x0
   3ff8c:	stp	d8, d9, [sp, #48]
   3ff90:	fcmpe	d10, d1
   3ff94:	b.ge	3ffd4 <csinh@@GLIBC_2.17+0x144>  // b.tcont
   3ff98:	fcmp	d2, #0.0
   3ff9c:	b.ne	3ffd4 <csinh@@GLIBC_2.17+0x144>  // b.any
   3ffa0:	fcmp	d3, d3
   3ffa4:	b.vs	3ffb0 <csinh@@GLIBC_2.17+0x120>
   3ffa8:	fcmp	d3, d4
   3ffac:	b.le	40004 <csinh@@GLIBC_2.17+0x174>
   3ffb0:	movi	d3, #0x0
   3ffb4:	cmp	w21, #0x0
   3ffb8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ffbc:	fmov	d2, x0
   3ffc0:	fsub	d1, d0, d0
   3ffc4:	ldr	x21, [sp, #32]
   3ffc8:	fcsel	d0, d2, d3, ne  // ne = any
   3ffcc:	ldp	d8, d9, [sp, #48]
   3ffd0:	b	3ff60 <csinh@@GLIBC_2.17+0xd0>
   3ffd4:	fcmp	d3, d3
   3ffd8:	b.vs	3ffe4 <csinh@@GLIBC_2.17+0x154>
   3ffdc:	fcmp	d3, d4
   3ffe0:	b.le	40004 <csinh@@GLIBC_2.17+0x174>
   3ffe4:	mov	w0, #0x1                   	// #1
   3ffe8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   3ffec:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   3fff0:	fmov	d0, x0
   3fff4:	fmov	d1, x0
   3fff8:	ldr	x21, [sp, #32]
   3fffc:	ldp	d8, d9, [sp, #48]
   40000:	b	3ff60 <csinh@@GLIBC_2.17+0xd0>
   40004:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   40008:	mov	x0, #0xf80000000000        	// #272678883688448
   4000c:	movk	x0, #0x408f, lsl #48
   40010:	fmov	d4, x0
   40014:	ldr	d1, [x1, #560]
   40018:	mov	x0, #0x10000000000000      	// #4503599627370496
   4001c:	fmov	d2, x0
   40020:	fmul	d1, d1, d4
   40024:	fcmpe	d3, d2
   40028:	fcvtzs	w19, d1
   4002c:	b.le	40194 <csinh@@GLIBC_2.17+0x304>
   40030:	add	x1, sp, #0x50
   40034:	add	x0, sp, #0x48
   40038:	bl	3d0c0 <sincos@@GLIBC_2.17>
   4003c:	cbz	w21, 4004c <csinh@@GLIBC_2.17+0x1bc>
   40040:	ldr	d0, [sp, #80]
   40044:	fneg	d0, d0
   40048:	str	d0, [sp, #80]
   4004c:	scvtf	d9, w19
   40050:	fcmpe	d9, d10
   40054:	b.pl	400dc <csinh@@GLIBC_2.17+0x24c>  // b.nfrst
   40058:	fmov	d0, d9
   4005c:	bl	333e8 <__exp_finite@GLIBC_2.17>
   40060:	fsub	d10, d10, d9
   40064:	fmov	d2, #5.000000000000000000e-01
   40068:	ldp	d3, d8, [sp, #72]
   4006c:	fmul	d1, d0, d2
   40070:	fcmpe	d9, d10
   40074:	fmul	d2, d1, d3
   40078:	fmul	d1, d1, d8
   4007c:	stp	d2, d1, [sp, #72]
   40080:	b.mi	40148 <csinh@@GLIBC_2.17+0x2b8>  // b.first
   40084:	fmov	d0, d10
   40088:	bl	333e8 <__exp_finite@GLIBC_2.17>
   4008c:	ldp	d2, d8, [sp, #72]
   40090:	fmul	d2, d0, d2
   40094:	fmul	d8, d0, d8
   40098:	fmov	d1, d2
   4009c:	fmov	d0, d8
   400a0:	fabs	d4, d8
   400a4:	mov	x0, #0x10000000000000      	// #4503599627370496
   400a8:	fmov	d3, x0
   400ac:	fcmpe	d4, d3
   400b0:	b.pl	400b8 <csinh@@GLIBC_2.17+0x228>  // b.nfrst
   400b4:	fmul	d8, d8, d8
   400b8:	fabs	d4, d2
   400bc:	mov	x0, #0x10000000000000      	// #4503599627370496
   400c0:	fmov	d3, x0
   400c4:	fcmpe	d4, d3
   400c8:	b.pl	40110 <csinh@@GLIBC_2.17+0x280>  // b.nfrst
   400cc:	fmul	d2, d2, d2
   400d0:	ldr	x21, [sp, #32]
   400d4:	ldp	d8, d9, [sp, #48]
   400d8:	b	3ff60 <csinh@@GLIBC_2.17+0xd0>
   400dc:	fmov	d0, d10
   400e0:	bl	36588 <__sinh_finite@GLIBC_2.17>
   400e4:	fmov	d8, d0
   400e8:	ldr	d1, [sp, #80]
   400ec:	fmov	d0, d10
   400f0:	fmul	d8, d8, d1
   400f4:	bl	332b0 <__cosh_finite@GLIBC_2.17>
   400f8:	fmov	d2, d0
   400fc:	ldr	d1, [sp, #72]
   40100:	fmov	d0, d8
   40104:	fmul	d2, d2, d1
   40108:	fmov	d1, d2
   4010c:	b	400a0 <csinh@@GLIBC_2.17+0x210>
   40110:	ldr	x21, [sp, #32]
   40114:	ldp	d8, d9, [sp, #48]
   40118:	b	3ff60 <csinh@@GLIBC_2.17+0xd0>
   4011c:	fcmp	d0, #0.0
   40120:	b.ne	3ff0c <csinh@@GLIBC_2.17+0x7c>  // b.any
   40124:	cmp	w21, #0x0
   40128:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
   4012c:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
   40130:	fmov	d2, x0
   40134:	fmov	d3, x1
   40138:	fmov	d1, d0
   4013c:	ldr	x21, [sp, #32]
   40140:	fcsel	d0, d2, d3, ne  // ne = any
   40144:	b	3ff60 <csinh@@GLIBC_2.17+0xd0>
   40148:	fsub	d10, d10, d9
   4014c:	fmul	d2, d2, d0
   40150:	fmul	d1, d1, d0
   40154:	fcmpe	d9, d10
   40158:	stp	d2, d1, [sp, #72]
   4015c:	b.pl	40084 <csinh@@GLIBC_2.17+0x1f4>  // b.nfrst
   40160:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   40164:	fmov	d0, x0
   40168:	fmul	d8, d1, d0
   4016c:	fmul	d2, d2, d0
   40170:	fmov	d0, d8
   40174:	fmov	d1, d2
   40178:	b	400a0 <csinh@@GLIBC_2.17+0x210>
   4017c:	fcmp	d0, #0.0
   40180:	b.ne	401ac <csinh@@GLIBC_2.17+0x31c>  // b.any
   40184:	fmov	d1, d0
   40188:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   4018c:	fmov	d0, x0
   40190:	b	3ff60 <csinh@@GLIBC_2.17+0xd0>
   40194:	fmov	d1, #1.000000000000000000e+00
   40198:	stp	d0, d1, [sp, #72]
   4019c:	b	4003c <csinh@@GLIBC_2.17+0x1ac>
   401a0:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   401a4:	fmov	d0, x0
   401a8:	b	3ff40 <csinh@@GLIBC_2.17+0xb0>
   401ac:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   401b0:	fmov	d0, x0
   401b4:	fmov	d1, x0
   401b8:	b	3ff60 <csinh@@GLIBC_2.17+0xd0>
   401bc:	ldr	x21, [sp, #32]
   401c0:	b	3ff60 <csinh@@GLIBC_2.17+0xd0>
   401c4:	fsub	d1, d0, d0
   401c8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   401cc:	fmov	d0, x0
   401d0:	ldr	x21, [sp, #32]
   401d4:	b	3ff60 <csinh@@GLIBC_2.17+0xd0>
   401d8:	str	x21, [sp, #32]
   401dc:	stp	d8, d9, [sp, #48]
   401e0:	bl	ba70 <__stack_chk_fail@plt>
   401e4:	nop

00000000000401e8 <catanh@@GLIBC_2.17>:
   401e8:	stp	x29, x30, [sp, #-64]!
   401ec:	mov	x29, sp
   401f0:	stp	d10, d11, [sp, #32]
   401f4:	fabs	d11, d0
   401f8:	fmov	d10, d1
   401fc:	stp	d8, d9, [sp, #16]
   40200:	fmov	d8, d0
   40204:	fcmp	d11, d11
   40208:	str	d12, [sp, #48]
   4020c:	b.vs	40520 <catanh@@GLIBC_2.17+0x338>
   40210:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   40214:	fmov	d2, x0
   40218:	fcmp	d11, d2
   4021c:	b.le	4032c <catanh@@GLIBC_2.17+0x144>
   40220:	fabs	d12, d10
   40224:	mov	w1, #0x1                   	// #1
   40228:	fcmp	d12, d12
   4022c:	b.vs	40448 <catanh@@GLIBC_2.17+0x260>
   40230:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   40234:	fmov	d2, x0
   40238:	fcmp	d12, d2
   4023c:	b.gt	40364 <catanh@@GLIBC_2.17+0x17c>
   40240:	mov	x0, #0x10000000000000      	// #4503599627370496
   40244:	fmov	d0, x0
   40248:	fcmpe	d12, d0
   4024c:	b.ge	40258 <catanh@@GLIBC_2.17+0x70>  // b.tcont
   40250:	fcmp	d10, #0.0
   40254:	b.eq	40474 <catanh@@GLIBC_2.17+0x28c>  // b.none
   40258:	cmp	w1, #0x1
   4025c:	b.le	40588 <catanh@@GLIBC_2.17+0x3a0>
   40260:	mov	x0, #0x4370000000000000    	// #4859383997932765184
   40264:	fmov	d2, x0
   40268:	fcmpe	d11, d2
   4026c:	b.ge	40398 <catanh@@GLIBC_2.17+0x1b0>  // b.tcont
   40270:	fcmpe	d12, d2
   40274:	b.ge	40398 <catanh@@GLIBC_2.17+0x1b0>  // b.tcont
   40278:	fmov	d9, #1.000000000000000000e+00
   4027c:	fcmp	d11, d9
   40280:	b.eq	40490 <catanh@@GLIBC_2.17+0x2a8>  // b.none
   40284:	mov	x0, #0x3970000000000000    	// #4138808057553485824
   40288:	fmov	d0, x0
   4028c:	movi	d1, #0x0
   40290:	fcmpe	d12, d0
   40294:	b.lt	4029c <catanh@@GLIBC_2.17+0xb4>  // b.tstop
   40298:	fmul	d1, d10, d10
   4029c:	fmov	d0, #1.000000000000000000e+00
   402a0:	fmov	d3, #5.000000000000000000e-01
   402a4:	fadd	d2, d8, d0
   402a8:	fsub	d0, d0, d8
   402ac:	fmadd	d2, d2, d2, d1
   402b0:	fmadd	d1, d0, d0, d1
   402b4:	fdiv	d0, d2, d1
   402b8:	fcmpe	d0, d3
   402bc:	b.pl	40534 <catanh@@GLIBC_2.17+0x34c>  // b.nfrst
   402c0:	bl	35a50 <__log_finite@GLIBC_2.17>
   402c4:	fmov	d1, #2.500000000000000000e-01
   402c8:	fmul	d8, d0, d1
   402cc:	fcmpe	d11, d12
   402d0:	mov	x0, #0x3ca0000000000000    	// #4368491638549381120
   402d4:	fmov	d2, x0
   402d8:	fcsel	d1, d11, d12, mi  // mi = first
   402dc:	fcsel	d0, d12, d11, mi  // mi = first
   402e0:	fcmpe	d1, d2
   402e4:	fmov	d11, d0
   402e8:	fmov	d12, d1
   402ec:	b.pl	40550 <catanh@@GLIBC_2.17+0x368>  // b.nfrst
   402f0:	fmov	d0, #1.000000000000000000e+00
   402f4:	movi	d2, #0x0
   402f8:	fsub	d1, d0, d11
   402fc:	fadd	d0, d11, d0
   40300:	fmul	d1, d1, d0
   40304:	fcmp	d1, d2
   40308:	fcsel	d1, d1, d2, ne  // ne = any
   4030c:	fadd	d0, d10, d10
   40310:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   40314:	fmov	d9, d0
   40318:	fmov	d1, #5.000000000000000000e-01
   4031c:	fmov	d0, d8
   40320:	fmul	d9, d9, d1
   40324:	fmov	d1, d9
   40328:	b	403d0 <catanh@@GLIBC_2.17+0x1e8>
   4032c:	mov	x0, #0x10000000000000      	// #4503599627370496
   40330:	fmov	d0, x0
   40334:	fcmpe	d11, d0
   40338:	b.ge	40424 <catanh@@GLIBC_2.17+0x23c>  // b.tcont
   4033c:	fcmp	d8, #0.0
   40340:	mov	w1, #0x3                   	// #3
   40344:	b.eq	40438 <catanh@@GLIBC_2.17+0x250>  // b.none
   40348:	fabs	d12, d10
   4034c:	fcmp	d12, d12
   40350:	b.vs	4058c <catanh@@GLIBC_2.17+0x3a4>
   40354:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   40358:	fmov	d2, x0
   4035c:	fcmp	d12, d2
   40360:	b.le	40240 <catanh@@GLIBC_2.17+0x58>
   40364:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40368:	fmov	d0, x0
   4036c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   40370:	movi	d2, #0x0
   40374:	ldr	d12, [sp, #48]
   40378:	ldr	d3, [x0, #576]
   4037c:	fmov	d1, d3
   40380:	bit	v1.8b, v10.8b, v0.8b
   40384:	bsl	v0.8b, v8.8b, v2.8b
   40388:	ldp	d8, d9, [sp, #16]
   4038c:	ldp	d10, d11, [sp, #32]
   40390:	ldp	x29, x30, [sp], #64
   40394:	ret
   40398:	fmov	d0, #1.000000000000000000e+00
   4039c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   403a0:	fcmpe	d12, d0
   403a4:	ldr	d9, [x0, #576]
   403a8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   403ac:	fmov	d1, x0
   403b0:	bit	v9.8b, v10.8b, v1.8b
   403b4:	b.ls	40414 <catanh@@GLIBC_2.17+0x22c>  // b.plast
   403b8:	fcmpe	d11, d0
   403bc:	b.hi	404f4 <catanh@@GLIBC_2.17+0x30c>  // b.pmore
   403c0:	fdiv	d8, d8, d10
   403c4:	fmov	d1, d9
   403c8:	fdiv	d8, d8, d10
   403cc:	fmov	d0, d8
   403d0:	fabs	d3, d8
   403d4:	mov	x0, #0x10000000000000      	// #4503599627370496
   403d8:	fmov	d2, x0
   403dc:	fcmpe	d3, d2
   403e0:	b.pl	403e8 <catanh@@GLIBC_2.17+0x200>  // b.nfrst
   403e4:	fmul	d8, d8, d8
   403e8:	fabs	d3, d9
   403ec:	mov	x0, #0x10000000000000      	// #4503599627370496
   403f0:	fmov	d2, x0
   403f4:	fcmpe	d3, d2
   403f8:	b.pl	40400 <catanh@@GLIBC_2.17+0x218>  // b.nfrst
   403fc:	fmul	d9, d9, d9
   40400:	ldp	d8, d9, [sp, #16]
   40404:	ldp	d10, d11, [sp, #32]
   40408:	ldr	d12, [sp, #48]
   4040c:	ldp	x29, x30, [sp], #64
   40410:	ret
   40414:	fdiv	d8, d0, d8
   40418:	fmov	d1, d9
   4041c:	fmov	d0, d8
   40420:	b	403d0 <catanh@@GLIBC_2.17+0x1e8>
   40424:	fabs	d12, d10
   40428:	mov	w1, #0x4                   	// #4
   4042c:	fcmp	d12, d12
   40430:	b.vc	40354 <catanh@@GLIBC_2.17+0x16c>
   40434:	b	4058c <catanh@@GLIBC_2.17+0x3a4>
   40438:	fabs	d12, d10
   4043c:	mov	w1, #0x2                   	// #2
   40440:	fcmp	d12, d12
   40444:	b.vc	40230 <catanh@@GLIBC_2.17+0x48>
   40448:	movi	d2, #0x0
   4044c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40450:	fmov	d0, x0
   40454:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   40458:	fmov	d1, x0
   4045c:	ldr	d12, [sp, #48]
   40460:	ldp	d10, d11, [sp, #32]
   40464:	bsl	v0.8b, v8.8b, v2.8b
   40468:	ldp	d8, d9, [sp, #16]
   4046c:	ldp	x29, x30, [sp], #64
   40470:	ret
   40474:	cmp	w1, #0x1
   40478:	b.le	40588 <catanh@@GLIBC_2.17+0x3a0>
   4047c:	fmov	d0, d8
   40480:	fmov	d1, d10
   40484:	cmp	w1, #0x2
   40488:	b.eq	40400 <catanh@@GLIBC_2.17+0x218>  // b.none
   4048c:	b	40260 <catanh@@GLIBC_2.17+0x78>
   40490:	mov	x0, #0x3970000000000000    	// #4138808057553485824
   40494:	fmov	d0, x0
   40498:	fcmpe	d12, d0
   4049c:	b.pl	40284 <catanh@@GLIBC_2.17+0x9c>  // b.nfrst
   404a0:	fmov	d1, #5.000000000000000000e-01
   404a4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   404a8:	fmov	d2, x0
   404ac:	fmov	d0, d12
   404b0:	bif	v8.8b, v1.8b, v2.8b
   404b4:	bl	35a50 <__log_finite@GLIBC_2.17>
   404b8:	fcmpe	d12, d9
   404bc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   404c0:	ldr	d1, [x0, #560]
   404c4:	fsub	d0, d1, d0
   404c8:	fmul	d8, d0, d8
   404cc:	b.le	405a8 <catanh@@GLIBC_2.17+0x3c0>
   404d0:	fmov	d0, d12
   404d4:	fmov	d12, d11
   404d8:	fmov	d11, d0
   404dc:	fmov	d0, #1.000000000000000000e+00
   404e0:	fmul	d1, d12, d12
   404e4:	fsub	d2, d0, d11
   404e8:	fadd	d0, d11, d0
   404ec:	fnmsub	d1, d2, d0, d1
   404f0:	b	4030c <catanh@@GLIBC_2.17+0x124>
   404f4:	fmov	d0, #5.000000000000000000e-01
   404f8:	fmul	d1, d10, d0
   404fc:	fmul	d0, d8, d0
   40500:	bl	336d8 <__hypot_finite@GLIBC_2.17>
   40504:	fmov	d1, d9
   40508:	fdiv	d8, d8, d0
   4050c:	fmov	d2, #2.500000000000000000e-01
   40510:	fdiv	d8, d8, d0
   40514:	fmul	d8, d8, d2
   40518:	fmov	d0, d8
   4051c:	b	403d0 <catanh@@GLIBC_2.17+0x1e8>
   40520:	fabs	d12, d10
   40524:	mov	w1, #0x0                   	// #0
   40528:	fcmp	d12, d12
   4052c:	b.vc	40354 <catanh@@GLIBC_2.17+0x16c>
   40530:	b	4058c <catanh@@GLIBC_2.17+0x3a4>
   40534:	fmov	d0, #4.000000000000000000e+00
   40538:	fmul	d0, d8, d0
   4053c:	fdiv	d0, d0, d1
   40540:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   40544:	fmov	d1, #2.500000000000000000e-01
   40548:	fmul	d8, d0, d1
   4054c:	b	402cc <catanh@@GLIBC_2.17+0xe4>
   40550:	fmov	d2, #1.000000000000000000e+00
   40554:	fcmpe	d0, d2
   40558:	b.ge	404dc <catanh@@GLIBC_2.17+0x2f4>  // b.tcont
   4055c:	fmov	d3, #7.500000000000000000e-01
   40560:	fcmpe	d0, d3
   40564:	b.ge	4059c <catanh@@GLIBC_2.17+0x3b4>  // b.tcont
   40568:	fmov	d3, #5.000000000000000000e-01
   4056c:	fcmpe	d1, d3
   40570:	b.ge	4059c <catanh@@GLIBC_2.17+0x3b4>  // b.tcont
   40574:	fsub	d3, d2, d0
   40578:	fadd	d0, d0, d2
   4057c:	fmul	d1, d1, d1
   40580:	fnmsub	d1, d3, d0, d1
   40584:	b	4030c <catanh@@GLIBC_2.17+0x124>
   40588:	cbnz	w1, 40364 <catanh@@GLIBC_2.17+0x17c>
   4058c:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   40590:	fmov	d0, x0
   40594:	fmov	d1, x0
   40598:	b	40400 <catanh@@GLIBC_2.17+0x218>
   4059c:	bl	3db78 <ldexp@@GLIBC_2.17+0xa0>
   405a0:	fneg	d1, d0
   405a4:	b	4030c <catanh@@GLIBC_2.17+0x124>
   405a8:	mov	x0, #0x3ca0000000000000    	// #4368491638549381120
   405ac:	fmov	d0, x0
   405b0:	movi	d1, #0x0
   405b4:	fcmpe	d12, d0
   405b8:	b.mi	4030c <catanh@@GLIBC_2.17+0x124>  // b.first
   405bc:	b	404dc <catanh@@GLIBC_2.17+0x2f4>

00000000000405c0 <catan@@GLIBC_2.17>:
   405c0:	stp	x29, x30, [sp, #-64]!
   405c4:	mov	x29, sp
   405c8:	stp	d8, d9, [sp, #16]
   405cc:	fabs	d9, d0
   405d0:	stp	d10, d11, [sp, #32]
   405d4:	fabs	d11, d1
   405d8:	fcmp	d9, d9
   405dc:	str	d12, [sp, #48]
   405e0:	fmov	d12, d1
   405e4:	b.vs	40868 <catan@@GLIBC_2.17+0x2a8>
   405e8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   405ec:	fmov	d3, x0
   405f0:	fmov	d8, d0
   405f4:	fcmp	d9, d3
   405f8:	b.le	40620 <catan@@GLIBC_2.17+0x60>
   405fc:	fcmp	d11, d11
   40600:	b.vs	4060c <catan@@GLIBC_2.17+0x4c>
   40604:	fcmp	d11, d3
   40608:	b.gt	407ac <catan@@GLIBC_2.17+0x1ec>
   4060c:	movi	d4, #0x0
   40610:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40614:	fmov	d1, x0
   40618:	bsl	v1.8b, v12.8b, v4.8b
   4061c:	b	407bc <catan@@GLIBC_2.17+0x1fc>
   40620:	mov	x0, #0x10000000000000      	// #4503599627370496
   40624:	fmov	d0, x0
   40628:	fcmpe	d9, d0
   4062c:	b.ge	40638 <catan@@GLIBC_2.17+0x78>  // b.tcont
   40630:	fcmp	d8, #0.0
   40634:	b.eq	407d4 <catan@@GLIBC_2.17+0x214>  // b.none
   40638:	fcmp	d11, d11
   4063c:	b.vs	408bc <catan@@GLIBC_2.17+0x2fc>
   40640:	fcmp	d11, d3
   40644:	b.gt	40938 <catan@@GLIBC_2.17+0x378>
   40648:	mov	x0, #0x4370000000000000    	// #4859383997932765184
   4064c:	fmov	d3, x0
   40650:	fcmpe	d9, d3
   40654:	b.ge	40720 <catan@@GLIBC_2.17+0x160>  // b.tcont
   40658:	fcmpe	d11, d3
   4065c:	b.ge	40720 <catan@@GLIBC_2.17+0x160>  // b.tcont
   40660:	fcmpe	d11, d9
   40664:	b.gt	40800 <catan@@GLIBC_2.17+0x240>
   40668:	fmov	d1, d11
   4066c:	mov	x0, #0x3ca0000000000000    	// #4368491638549381120
   40670:	fmov	d2, x0
   40674:	fmov	d0, d9
   40678:	fcmpe	d1, d2
   4067c:	fmov	d2, #1.000000000000000000e+00
   40680:	b.pl	4081c <catan@@GLIBC_2.17+0x25c>  // b.nfrst
   40684:	fsub	d1, d2, d0
   40688:	fadd	d0, d0, d2
   4068c:	movi	d3, #0x0
   40690:	fmul	d1, d1, d0
   40694:	fcmp	d1, d3
   40698:	fcsel	d1, d1, d3, ne  // ne = any
   4069c:	fadd	d0, d8, d8
   406a0:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   406a4:	fmov	d2, #1.000000000000000000e+00
   406a8:	fmov	d1, #5.000000000000000000e-01
   406ac:	fcmp	d11, d2
   406b0:	fmul	d10, d0, d1
   406b4:	b.ne	406c8 <catan@@GLIBC_2.17+0x108>  // b.any
   406b8:	mov	x0, #0x3970000000000000    	// #4138808057553485824
   406bc:	fmov	d0, x0
   406c0:	fcmpe	d9, d0
   406c4:	b.mi	40904 <catan@@GLIBC_2.17+0x344>  // b.first
   406c8:	mov	x0, #0x3970000000000000    	// #4138808057553485824
   406cc:	fmov	d0, x0
   406d0:	movi	d2, #0x0
   406d4:	fcmpe	d9, d0
   406d8:	b.lt	406e0 <catan@@GLIBC_2.17+0x120>  // b.tstop
   406dc:	fmul	d2, d8, d8
   406e0:	fmov	d1, #1.000000000000000000e+00
   406e4:	fmov	d4, #5.000000000000000000e-01
   406e8:	fadd	d3, d12, d1
   406ec:	fsub	d1, d12, d1
   406f0:	fmadd	d3, d3, d3, d2
   406f4:	fmadd	d1, d1, d1, d2
   406f8:	fdiv	d0, d3, d1
   406fc:	fcmpe	d0, d4
   40700:	b.pl	408cc <catan@@GLIBC_2.17+0x30c>  // b.nfrst
   40704:	bl	35a50 <__log_finite@GLIBC_2.17>
   40708:	fmov	d2, d0
   4070c:	fmov	d1, #2.500000000000000000e-01
   40710:	fmov	d0, d10
   40714:	fmul	d2, d2, d1
   40718:	fmov	d1, d2
   4071c:	b	40758 <catan@@GLIBC_2.17+0x198>
   40720:	fmov	d3, #1.000000000000000000e+00
   40724:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   40728:	fcmpe	d9, d3
   4072c:	ldr	d10, [x0, #576]
   40730:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40734:	fmov	d0, x0
   40738:	bit	v10.8b, v8.8b, v0.8b
   4073c:	b.ls	4079c <catan@@GLIBC_2.17+0x1dc>  // b.plast
   40740:	fcmpe	d11, d3
   40744:	b.hi	40838 <catan@@GLIBC_2.17+0x278>  // b.pmore
   40748:	fdiv	d1, d12, d8
   4074c:	fmov	d0, d10
   40750:	fdiv	d2, d1, d8
   40754:	fmov	d1, d2
   40758:	fabs	d4, d10
   4075c:	mov	x0, #0x10000000000000      	// #4503599627370496
   40760:	fmov	d3, x0
   40764:	fcmpe	d4, d3
   40768:	b.pl	40770 <catan@@GLIBC_2.17+0x1b0>  // b.nfrst
   4076c:	fmul	d10, d10, d10
   40770:	fabs	d4, d2
   40774:	mov	x0, #0x10000000000000      	// #4503599627370496
   40778:	fmov	d3, x0
   4077c:	fcmpe	d4, d3
   40780:	b.pl	40788 <catan@@GLIBC_2.17+0x1c8>  // b.nfrst
   40784:	fmul	d2, d2, d2
   40788:	ldp	d8, d9, [sp, #16]
   4078c:	ldp	d10, d11, [sp, #32]
   40790:	ldr	d12, [sp, #48]
   40794:	ldp	x29, x30, [sp], #64
   40798:	ret
   4079c:	fdiv	d2, d3, d12
   407a0:	fmov	d0, d10
   407a4:	fmov	d1, d2
   407a8:	b	40758 <catan@@GLIBC_2.17+0x198>
   407ac:	movi	d3, #0x0
   407b0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   407b4:	fmov	d1, x0
   407b8:	bsl	v1.8b, v12.8b, v3.8b
   407bc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   407c0:	ldr	d0, [x0, #576]
   407c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   407c8:	fmov	d2, x0
   407cc:	bit	v0.8b, v8.8b, v2.8b
   407d0:	b	40788 <catan@@GLIBC_2.17+0x1c8>
   407d4:	fcmp	d11, d11
   407d8:	b.vs	408bc <catan@@GLIBC_2.17+0x2fc>
   407dc:	fcmp	d11, d3
   407e0:	b.gt	40938 <catan@@GLIBC_2.17+0x378>
   407e4:	fcmpe	d11, d0
   407e8:	b.ge	40648 <catan@@GLIBC_2.17+0x88>  // b.tcont
   407ec:	fcmp	d12, #0.0
   407f0:	b.ne	40648 <catan@@GLIBC_2.17+0x88>  // b.any
   407f4:	fmov	d0, d8
   407f8:	fmov	d1, d12
   407fc:	b	40788 <catan@@GLIBC_2.17+0x1c8>
   40800:	fmov	d1, d9
   40804:	mov	x0, #0x3ca0000000000000    	// #4368491638549381120
   40808:	fmov	d2, x0
   4080c:	fmov	d0, d11
   40810:	fcmpe	d1, d2
   40814:	fmov	d2, #1.000000000000000000e+00
   40818:	b.mi	40684 <catan@@GLIBC_2.17+0xc4>  // b.first
   4081c:	fcmpe	d0, d2
   40820:	b.lt	408e0 <catan@@GLIBC_2.17+0x320>  // b.tstop
   40824:	fsub	d3, d2, d0
   40828:	fadd	d0, d0, d2
   4082c:	fmul	d1, d1, d1
   40830:	fnmsub	d1, d3, d0, d1
   40834:	b	4069c <catan@@GLIBC_2.17+0xdc>
   40838:	fmov	d1, #5.000000000000000000e-01
   4083c:	fmul	d0, d8, d1
   40840:	fmul	d1, d12, d1
   40844:	bl	336d8 <__hypot_finite@GLIBC_2.17>
   40848:	fmov	d2, d0
   4084c:	fmov	d3, #2.500000000000000000e-01
   40850:	fmov	d0, d10
   40854:	fdiv	d1, d12, d2
   40858:	fdiv	d1, d1, d2
   4085c:	fmul	d2, d1, d3
   40860:	fmov	d1, d2
   40864:	b	40758 <catan@@GLIBC_2.17+0x198>
   40868:	fcmp	d11, d11
   4086c:	b.vs	408bc <catan@@GLIBC_2.17+0x2fc>
   40870:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   40874:	fmov	d0, x0
   40878:	fcmp	d11, d0
   4087c:	b.gt	40950 <catan@@GLIBC_2.17+0x390>
   40880:	mov	x0, #0x10000000000000      	// #4503599627370496
   40884:	fmov	d1, x0
   40888:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   4088c:	fmov	d0, x0
   40890:	fcmpe	d11, d1
   40894:	fmov	d1, x0
   40898:	b.ge	40788 <catan@@GLIBC_2.17+0x1c8>  // b.tcont
   4089c:	fcmp	d12, #0.0
   408a0:	b.ne	40788 <catan@@GLIBC_2.17+0x1c8>  // b.any
   408a4:	nop
   408a8:	movi	d4, #0x0
   408ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   408b0:	fmov	d1, x0
   408b4:	bsl	v1.8b, v12.8b, v4.8b
   408b8:	b	40788 <catan@@GLIBC_2.17+0x1c8>
   408bc:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   408c0:	fmov	d0, x0
   408c4:	fmov	d1, x0
   408c8:	b	40788 <catan@@GLIBC_2.17+0x1c8>
   408cc:	fmov	d2, #4.000000000000000000e+00
   408d0:	fmul	d2, d12, d2
   408d4:	fdiv	d0, d2, d1
   408d8:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   408dc:	b	40708 <catan@@GLIBC_2.17+0x148>
   408e0:	fmov	d3, #7.500000000000000000e-01
   408e4:	fcmpe	d0, d3
   408e8:	b.ge	408f8 <catan@@GLIBC_2.17+0x338>  // b.tcont
   408ec:	fmov	d3, #5.000000000000000000e-01
   408f0:	fcmpe	d1, d3
   408f4:	b.lt	40824 <catan@@GLIBC_2.17+0x264>  // b.tstop
   408f8:	bl	3db78 <ldexp@@GLIBC_2.17+0xa0>
   408fc:	fneg	d1, d0
   40900:	b	4069c <catan@@GLIBC_2.17+0xdc>
   40904:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40908:	fmov	d2, x0
   4090c:	fmov	d0, d9
   40910:	bif	v12.8b, v1.8b, v2.8b
   40914:	bl	35a50 <__log_finite@GLIBC_2.17>
   40918:	fmov	d2, d0
   4091c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   40920:	fmov	d0, d10
   40924:	ldr	d1, [x0, #560]
   40928:	fsub	d1, d1, d2
   4092c:	fmul	d2, d1, d12
   40930:	fmov	d1, d2
   40934:	b	40758 <catan@@GLIBC_2.17+0x198>
   40938:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4093c:	ldr	d4, [x0, #576]
   40940:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40944:	fmov	d0, x0
   40948:	bsl	v0.8b, v8.8b, v4.8b
   4094c:	b	408a8 <catan@@GLIBC_2.17+0x2e8>
   40950:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   40954:	fmov	d0, x0
   40958:	b	408a8 <catan@@GLIBC_2.17+0x2e8>
   4095c:	nop

0000000000040960 <ctan@@GLIBC_2.17>:
   40960:	stp	x29, x30, [sp, #-128]!
   40964:	fabs	d5, d0
   40968:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   4096c:	mov	x29, sp
   40970:	stp	x19, x20, [sp, #16]
   40974:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   40978:	fmov	d3, x0
   4097c:	ldr	x1, [x20, #4032]
   40980:	fcmp	d5, d3
   40984:	stp	d8, d9, [sp, #32]
   40988:	fmov	d2, d0
   4098c:	ldr	x0, [x1]
   40990:	str	x0, [sp, #120]
   40994:	mov	x0, #0x0                   	// #0
   40998:	stp	d10, d11, [sp, #48]
   4099c:	fmov	d9, d1
   409a0:	fabs	d11, d1
   409a4:	b.hi	40b64 <ctan@@GLIBC_2.17+0x204>  // b.pmore
   409a8:	fcmp	d11, d3
   409ac:	b.hi	40bac <ctan@@GLIBC_2.17+0x24c>  // b.pmore
   409b0:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   409b4:	fmov	d8, d1
   409b8:	mov	x0, #0xf80000000000        	// #272678883688448
   409bc:	fmov	d6, #5.000000000000000000e-01
   409c0:	ldr	d1, [x1, #560]
   409c4:	movk	x0, #0x408f, lsl #48
   409c8:	fmov	d4, x0
   409cc:	mov	x0, #0x10000000000000      	// #4503599627370496
   409d0:	fmov	d3, x0
   409d4:	str	d12, [sp, #64]
   409d8:	fmul	d1, d1, d4
   409dc:	fcmpe	d5, d3
   409e0:	fmul	d1, d1, d6
   409e4:	fcvtzs	w19, d1
   409e8:	b.le	40be4 <ctan@@GLIBC_2.17+0x284>
   409ec:	add	x1, sp, #0x70
   409f0:	add	x0, sp, #0x68
   409f4:	bl	3d0c0 <sincos@@GLIBC_2.17>
   409f8:	scvtf	d12, w19
   409fc:	fcmpe	d12, d11
   40a00:	b.mi	40ab8 <ctan@@GLIBC_2.17+0x158>  // b.first
   40a04:	mov	x0, #0x10000000000000      	// #4503599627370496
   40a08:	fmov	d0, x0
   40a0c:	fcmpe	d11, d0
   40a10:	b.gt	40b04 <ctan@@GLIBC_2.17+0x1a4>
   40a14:	ldr	d3, [sp, #112]
   40a18:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   40a1c:	fmov	d2, x0
   40a20:	fabs	d1, d3
   40a24:	fmul	d0, d3, d3
   40a28:	fmul	d1, d1, d2
   40a2c:	fcmpe	d1, d11
   40a30:	b.mi	40ab0 <ctan@@GLIBC_2.17+0x150>  // b.first
   40a34:	fdiv	d10, d9, d0
   40a38:	ldr	d2, [sp, #104]
   40a3c:	fmul	d2, d3, d2
   40a40:	fdiv	d2, d2, d0
   40a44:	fmov	d1, d10
   40a48:	fmov	d0, d2
   40a4c:	fabs	d4, d2
   40a50:	mov	x0, #0x10000000000000      	// #4503599627370496
   40a54:	fmov	d3, x0
   40a58:	fcmpe	d4, d3
   40a5c:	b.pl	40a64 <ctan@@GLIBC_2.17+0x104>  // b.nfrst
   40a60:	fmul	d2, d2, d2
   40a64:	fabs	d3, d10
   40a68:	mov	x0, #0x10000000000000      	// #4503599627370496
   40a6c:	fmov	d2, x0
   40a70:	fcmpe	d3, d2
   40a74:	b.mi	40aa4 <ctan@@GLIBC_2.17+0x144>  // b.first
   40a78:	ldr	d12, [sp, #64]
   40a7c:	ldr	x20, [x20, #4032]
   40a80:	ldr	x1, [sp, #120]
   40a84:	ldr	x0, [x20]
   40a88:	eor	x0, x1, x0
   40a8c:	cbnz	x0, 40c34 <ctan@@GLIBC_2.17+0x2d4>
   40a90:	ldp	x19, x20, [sp, #16]
   40a94:	ldp	d8, d9, [sp, #32]
   40a98:	ldp	d10, d11, [sp, #48]
   40a9c:	ldp	x29, x30, [sp], #128
   40aa0:	ret
   40aa4:	fmul	d10, d10, d10
   40aa8:	ldr	d12, [sp, #64]
   40aac:	b	40a7c <ctan@@GLIBC_2.17+0x11c>
   40ab0:	fmadd	d0, d8, d8, d0
   40ab4:	b	40a34 <ctan@@GLIBC_2.17+0xd4>
   40ab8:	lsl	w19, w19, #1
   40abc:	scvtf	d0, w19
   40ac0:	bl	333e8 <__exp_finite@GLIBC_2.17>
   40ac4:	fsub	d11, d11, d12
   40ac8:	ldp	d8, d2, [sp, #104]
   40acc:	fmov	d3, #4.000000000000000000e+00
   40ad0:	fmov	d10, #1.000000000000000000e+00
   40ad4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40ad8:	fcmpe	d12, d11
   40adc:	fmov	d1, x0
   40ae0:	fmul	d8, d8, d3
   40ae4:	bit	v10.8b, v9.8b, v1.8b
   40ae8:	fmul	d8, d8, d2
   40aec:	fdiv	d8, d8, d0
   40af0:	b.pl	40b48 <ctan@@GLIBC_2.17+0x1e8>  // b.nfrst
   40af4:	fdiv	d2, d8, d0
   40af8:	fmov	d1, d10
   40afc:	fmov	d0, d2
   40b00:	b	40a4c <ctan@@GLIBC_2.17+0xec>
   40b04:	fmov	d0, d9
   40b08:	bl	36588 <__sinh_finite@GLIBC_2.17>
   40b0c:	fmov	d10, d0
   40b10:	fmov	d0, d9
   40b14:	bl	332b0 <__cosh_finite@GLIBC_2.17>
   40b18:	fabs	d11, d10
   40b1c:	ldr	d3, [sp, #112]
   40b20:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   40b24:	fmov	d2, x0
   40b28:	fmul	d9, d10, d0
   40b2c:	fmov	d8, d10
   40b30:	fabs	d1, d3
   40b34:	fmul	d0, d3, d3
   40b38:	fmul	d1, d1, d2
   40b3c:	fcmpe	d1, d11
   40b40:	b.pl	40a34 <ctan@@GLIBC_2.17+0xd4>  // b.nfrst
   40b44:	b	40ab0 <ctan@@GLIBC_2.17+0x150>
   40b48:	fadd	d0, d11, d11
   40b4c:	str	d10, [sp, #80]
   40b50:	bl	333e8 <__exp_finite@GLIBC_2.17>
   40b54:	fdiv	d2, d8, d0
   40b58:	ldr	d1, [sp, #80]
   40b5c:	fmov	d0, d2
   40b60:	b	40a4c <ctan@@GLIBC_2.17+0xec>
   40b64:	fcmp	d11, d3
   40b68:	b.gt	40bf0 <ctan@@GLIBC_2.17+0x290>
   40b6c:	fcmp	d2, #0.0
   40b70:	b.eq	40c18 <ctan@@GLIBC_2.17+0x2b8>  // b.none
   40b74:	fcmp	d9, #0.0
   40b78:	b.ne	40c24 <ctan@@GLIBC_2.17+0x2c4>  // b.any
   40b7c:	fmov	d1, d9
   40b80:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   40b84:	fmov	d0, x0
   40b88:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   40b8c:	fmov	d2, x0
   40b90:	fcmp	d5, d2
   40b94:	b.le	40a7c <ctan@@GLIBC_2.17+0x11c>
   40b98:	mov	w0, #0x1                   	// #1
   40b9c:	stp	d0, d1, [sp, #80]
   40ba0:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   40ba4:	ldp	d0, d1, [sp, #80]
   40ba8:	b	40a7c <ctan@@GLIBC_2.17+0x11c>
   40bac:	b.le	40b6c <ctan@@GLIBC_2.17+0x20c>
   40bb0:	fmov	d1, #1.000000000000000000e+00
   40bb4:	fcmpe	d5, d1
   40bb8:	b.le	40bf0 <ctan@@GLIBC_2.17+0x290>
   40bbc:	add	x0, sp, #0x68
   40bc0:	add	x1, sp, #0x70
   40bc4:	bl	3d0c0 <sincos@@GLIBC_2.17>
   40bc8:	ldp	d0, d3, [sp, #104]
   40bcc:	movi	d2, #0x0
   40bd0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40bd4:	fmov	d1, x0
   40bd8:	fmul	d0, d0, d3
   40bdc:	bit	v2.8b, v0.8b, v1.8b
   40be0:	b	40c00 <ctan@@GLIBC_2.17+0x2a0>
   40be4:	fmov	d0, #1.000000000000000000e+00
   40be8:	stp	d2, d0, [sp, #104]
   40bec:	b	409f8 <ctan@@GLIBC_2.17+0x98>
   40bf0:	movi	d0, #0x0
   40bf4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40bf8:	fmov	d1, x0
   40bfc:	bif	v2.8b, v0.8b, v1.8b
   40c00:	fmov	d1, #1.000000000000000000e+00
   40c04:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40c08:	fmov	d3, x0
   40c0c:	fmov	d0, d2
   40c10:	bit	v1.8b, v9.8b, v3.8b
   40c14:	b	40a7c <ctan@@GLIBC_2.17+0x11c>
   40c18:	fmov	d0, d2
   40c1c:	fmov	d1, d9
   40c20:	b	40a7c <ctan@@GLIBC_2.17+0x11c>
   40c24:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   40c28:	fmov	d0, x0
   40c2c:	fmov	d1, x0
   40c30:	b	40b88 <ctan@@GLIBC_2.17+0x228>
   40c34:	str	d12, [sp, #64]
   40c38:	bl	ba70 <__stack_chk_fail@plt>
   40c3c:	nop

0000000000040c40 <ctanh@@GLIBC_2.17>:
   40c40:	stp	x29, x30, [sp, #-112]!
   40c44:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   40c48:	fmov	d2, x0
   40c4c:	mov	x29, sp
   40c50:	stp	x19, x20, [sp, #16]
   40c54:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   40c58:	stp	d10, d11, [sp, #48]
   40c5c:	fabs	d10, d0
   40c60:	ldr	x0, [x20, #4032]
   40c64:	stp	d8, d9, [sp, #32]
   40c68:	fcmp	d10, d2
   40c6c:	ldr	x1, [x0]
   40c70:	str	x1, [sp, #104]
   40c74:	mov	x1, #0x0                   	// #0
   40c78:	fmov	d8, d0
   40c7c:	fmov	d9, d0
   40c80:	fmov	d0, d1
   40c84:	b.hi	40e3c <ctanh@@GLIBC_2.17+0x1fc>  // b.pmore
   40c88:	fabs	d4, d1
   40c8c:	fcmp	d4, d2
   40c90:	b.hi	40e84 <ctanh@@GLIBC_2.17+0x244>  // b.pmore
   40c94:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   40c98:	mov	x0, #0xf80000000000        	// #272678883688448
   40c9c:	movk	x0, #0x408f, lsl #48
   40ca0:	fmov	d3, x0
   40ca4:	ldr	d2, [x1, #560]
   40ca8:	fmov	d5, #5.000000000000000000e-01
   40cac:	mov	x0, #0x10000000000000      	// #4503599627370496
   40cb0:	fmov	d1, x0
   40cb4:	fmul	d2, d2, d3
   40cb8:	fcmpe	d4, d1
   40cbc:	fmul	d2, d2, d5
   40cc0:	fcvtzs	w19, d2
   40cc4:	b.le	40eb4 <ctanh@@GLIBC_2.17+0x274>
   40cc8:	add	x1, sp, #0x60
   40ccc:	add	x0, sp, #0x58
   40cd0:	bl	3d0c0 <sincos@@GLIBC_2.17>
   40cd4:	scvtf	d11, w19
   40cd8:	fcmpe	d10, d11
   40cdc:	b.gt	40d90 <ctanh@@GLIBC_2.17+0x150>
   40ce0:	mov	x0, #0x10000000000000      	// #4503599627370496
   40ce4:	fmov	d0, x0
   40ce8:	fcmpe	d10, d0
   40cec:	b.gt	40ddc <ctanh@@GLIBC_2.17+0x19c>
   40cf0:	ldr	d1, [sp, #96]
   40cf4:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   40cf8:	fmov	d3, x0
   40cfc:	fabs	d0, d1
   40d00:	fmul	d2, d1, d1
   40d04:	fmul	d0, d0, d3
   40d08:	fcmpe	d10, d0
   40d0c:	b.gt	40d88 <ctanh@@GLIBC_2.17+0x148>
   40d10:	fdiv	d8, d8, d2
   40d14:	ldr	d0, [sp, #88]
   40d18:	fmul	d0, d1, d0
   40d1c:	fdiv	d0, d0, d2
   40d20:	fmov	d10, d8
   40d24:	fmov	d1, d0
   40d28:	fabs	d3, d8
   40d2c:	mov	x0, #0x10000000000000      	// #4503599627370496
   40d30:	fmov	d2, x0
   40d34:	fcmpe	d3, d2
   40d38:	b.pl	40d40 <ctanh@@GLIBC_2.17+0x100>  // b.nfrst
   40d3c:	fmul	d8, d8, d8
   40d40:	fabs	d3, d0
   40d44:	mov	x0, #0x10000000000000      	// #4503599627370496
   40d48:	fmov	d2, x0
   40d4c:	fcmpe	d3, d2
   40d50:	b.mi	40d80 <ctanh@@GLIBC_2.17+0x140>  // b.first
   40d54:	ldr	x20, [x20, #4032]
   40d58:	ldr	x1, [sp, #104]
   40d5c:	ldr	x0, [x20]
   40d60:	eor	x0, x1, x0
   40d64:	cbnz	x0, 40f24 <ctanh@@GLIBC_2.17+0x2e4>
   40d68:	fmov	d0, d10
   40d6c:	ldp	x19, x20, [sp, #16]
   40d70:	ldp	d8, d9, [sp, #32]
   40d74:	ldp	d10, d11, [sp, #48]
   40d78:	ldp	x29, x30, [sp], #112
   40d7c:	ret
   40d80:	fmul	d0, d0, d0
   40d84:	b	40d54 <ctanh@@GLIBC_2.17+0x114>
   40d88:	fmadd	d2, d9, d9, d2
   40d8c:	b	40d10 <ctanh@@GLIBC_2.17+0xd0>
   40d90:	lsl	w19, w19, #1
   40d94:	scvtf	d0, w19
   40d98:	bl	333e8 <__exp_finite@GLIBC_2.17>
   40d9c:	fsub	d10, d10, d11
   40da0:	ldp	d9, d1, [sp, #88]
   40da4:	fmov	d4, #4.000000000000000000e+00
   40da8:	fmov	d2, #1.000000000000000000e+00
   40dac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40db0:	fcmpe	d11, d10
   40db4:	fmov	d3, x0
   40db8:	fmul	d9, d9, d4
   40dbc:	bif	v8.8b, v2.8b, v3.8b
   40dc0:	fmul	d9, d9, d1
   40dc4:	fdiv	d9, d9, d0
   40dc8:	b.pl	40e24 <ctanh@@GLIBC_2.17+0x1e4>  // b.nfrst
   40dcc:	fdiv	d0, d9, d0
   40dd0:	fmov	d10, d8
   40dd4:	fmov	d1, d0
   40dd8:	b	40d28 <ctanh@@GLIBC_2.17+0xe8>
   40ddc:	fmov	d0, d8
   40de0:	bl	36588 <__sinh_finite@GLIBC_2.17>
   40de4:	fmov	d1, d0
   40de8:	fmov	d0, d8
   40dec:	fmov	d8, d1
   40df0:	bl	332b0 <__cosh_finite@GLIBC_2.17>
   40df4:	fabs	d10, d8
   40df8:	ldr	d1, [sp, #96]
   40dfc:	fmov	d9, d8
   40e00:	fmul	d8, d8, d0
   40e04:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   40e08:	fmov	d3, x0
   40e0c:	fabs	d0, d1
   40e10:	fmul	d2, d1, d1
   40e14:	fmul	d0, d0, d3
   40e18:	fcmpe	d10, d0
   40e1c:	b.le	40d10 <ctanh@@GLIBC_2.17+0xd0>
   40e20:	b	40d88 <ctanh@@GLIBC_2.17+0x148>
   40e24:	fadd	d0, d10, d10
   40e28:	fmov	d10, d8
   40e2c:	bl	333e8 <__exp_finite@GLIBC_2.17>
   40e30:	fdiv	d0, d9, d0
   40e34:	fmov	d1, d0
   40e38:	b	40d28 <ctanh@@GLIBC_2.17+0xe8>
   40e3c:	b.gt	40ecc <ctanh@@GLIBC_2.17+0x28c>
   40e40:	fcmp	d0, #0.0
   40e44:	b.eq	40ec0 <ctanh@@GLIBC_2.17+0x280>  // b.none
   40e48:	fcmp	d8, #0.0
   40e4c:	b.ne	40f14 <ctanh@@GLIBC_2.17+0x2d4>  // b.any
   40e50:	fmov	d10, d8
   40e54:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   40e58:	fmov	d1, x0
   40e5c:	fabs	d0, d0
   40e60:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   40e64:	fmov	d2, x0
   40e68:	fcmp	d0, d2
   40e6c:	b.le	40d54 <ctanh@@GLIBC_2.17+0x114>
   40e70:	mov	w0, #0x1                   	// #1
   40e74:	str	d1, [sp, #72]
   40e78:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   40e7c:	ldr	d1, [sp, #72]
   40e80:	b	40d54 <ctanh@@GLIBC_2.17+0x114>
   40e84:	fcmp	d10, d2
   40e88:	b.le	40e40 <ctanh@@GLIBC_2.17+0x200>
   40e8c:	fmov	d10, #1.000000000000000000e+00
   40e90:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40e94:	fmov	d1, x0
   40e98:	bif	v8.8b, v10.8b, v1.8b
   40e9c:	movi	d1, #0x0
   40ea0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40ea4:	fmov	d2, x0
   40ea8:	fmov	d10, d8
   40eac:	bit	v1.8b, v0.8b, v2.8b
   40eb0:	b	40d54 <ctanh@@GLIBC_2.17+0x114>
   40eb4:	fmov	d1, #1.000000000000000000e+00
   40eb8:	stp	d0, d1, [sp, #88]
   40ebc:	b	40cd4 <ctanh@@GLIBC_2.17+0x94>
   40ec0:	fmov	d10, d8
   40ec4:	fmov	d1, d0
   40ec8:	b	40d54 <ctanh@@GLIBC_2.17+0x114>
   40ecc:	fabs	d4, d1
   40ed0:	fmov	d3, #1.000000000000000000e+00
   40ed4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40ed8:	fmov	d9, x0
   40edc:	bif	v8.8b, v3.8b, v9.8b
   40ee0:	fcmp	d4, d2
   40ee4:	b.hi	40e9c <ctanh@@GLIBC_2.17+0x25c>  // b.pmore
   40ee8:	fcmpe	d4, d3
   40eec:	b.le	40e9c <ctanh@@GLIBC_2.17+0x25c>
   40ef0:	fmov	d10, d8
   40ef4:	add	x1, sp, #0x60
   40ef8:	add	x0, sp, #0x58
   40efc:	bl	3d0c0 <sincos@@GLIBC_2.17>
   40f00:	ldp	d0, d2, [sp, #88]
   40f04:	movi	d1, #0x0
   40f08:	fmul	d0, d0, d2
   40f0c:	bit	v1.8b, v0.8b, v9.8b
   40f10:	b	40d54 <ctanh@@GLIBC_2.17+0x114>
   40f14:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   40f18:	fmov	d10, x0
   40f1c:	fmov	d1, x0
   40f20:	b	40e5c <ctanh@@GLIBC_2.17+0x21c>
   40f24:	bl	ba70 <__stack_chk_fail@plt>

0000000000040f28 <cexp@@GLIBC_2.17>:
   40f28:	stp	x29, x30, [sp, #-96]!
   40f2c:	fabs	d3, d0
   40f30:	mov	x29, sp
   40f34:	stp	x19, x20, [sp, #16]
   40f38:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   40f3c:	fcmp	d3, d3
   40f40:	ldr	x0, [x20, #4032]
   40f44:	stp	d8, d9, [sp, #32]
   40f48:	fmov	d9, d0
   40f4c:	ldr	x1, [x0]
   40f50:	str	x1, [sp, #88]
   40f54:	mov	x1, #0x0                   	// #0
   40f58:	str	d10, [sp, #48]
   40f5c:	fmov	d10, d0
   40f60:	fabs	d0, d1
   40f64:	b.vs	41154 <cexp@@GLIBC_2.17+0x22c>
   40f68:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   40f6c:	fmov	d2, x0
   40f70:	fcmp	d3, d2
   40f74:	b.le	41010 <cexp@@GLIBC_2.17+0xe8>
   40f78:	fcmp	d0, d0
   40f7c:	b.vs	411c0 <cexp@@GLIBC_2.17+0x298>
   40f80:	fcmp	d0, d2
   40f84:	b.gt	411c0 <cexp@@GLIBC_2.17+0x298>
   40f88:	mov	x0, #0x10000000000000      	// #4503599627370496
   40f8c:	fmov	d2, x0
   40f90:	fmov	d4, d1
   40f94:	fcmpe	d0, d2
   40f98:	b.lt	4111c <cexp@@GLIBC_2.17+0x1f4>  // b.tstop
   40f9c:	fmov	x0, d9
   40fa0:	movi	d2, #0x0
   40fa4:	cmp	x0, #0x0
   40fa8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   40fac:	fmov	d8, x0
   40fb0:	fcsel	d8, d8, d2, ge  // ge = tcont
   40fb4:	mov	x0, #0x10000000000000      	// #4503599627370496
   40fb8:	fmov	d2, x0
   40fbc:	fcmpe	d0, d2
   40fc0:	b.le	411b8 <cexp@@GLIBC_2.17+0x290>
   40fc4:	fmov	d0, d1
   40fc8:	add	x1, sp, #0x50
   40fcc:	add	x0, sp, #0x48
   40fd0:	bl	3d0c0 <sincos@@GLIBC_2.17>
   40fd4:	ldp	d4, d0, [sp, #72]
   40fd8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40fdc:	fmov	d1, x0
   40fe0:	bif	v0.8b, v8.8b, v1.8b
   40fe4:	bsl	v1.8b, v4.8b, v8.8b
   40fe8:	ldr	x20, [x20, #4032]
   40fec:	ldr	x1, [sp, #88]
   40ff0:	ldr	x0, [x20]
   40ff4:	eor	x0, x1, x0
   40ff8:	cbnz	x0, 411fc <cexp@@GLIBC_2.17+0x2d4>
   40ffc:	ldp	x19, x20, [sp, #16]
   41000:	ldp	d8, d9, [sp, #32]
   41004:	ldr	d10, [sp, #48]
   41008:	ldp	x29, x30, [sp], #96
   4100c:	ret
   41010:	fcmp	d0, d0
   41014:	b.vs	41020 <cexp@@GLIBC_2.17+0xf8>
   41018:	fcmp	d0, d2
   4101c:	b.le	41038 <cexp@@GLIBC_2.17+0x110>
   41020:	mov	w0, #0x1                   	// #1
   41024:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   41028:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   4102c:	fmov	d0, x0
   41030:	fmov	d1, x0
   41034:	b	40fe8 <cexp@@GLIBC_2.17+0xc0>
   41038:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4103c:	mov	x0, #0xf80000000000        	// #272678883688448
   41040:	movk	x0, #0x408f, lsl #48
   41044:	fmov	d4, x0
   41048:	ldr	d2, [x1, #560]
   4104c:	mov	x0, #0x10000000000000      	// #4503599627370496
   41050:	fmov	d3, x0
   41054:	fmul	d2, d2, d4
   41058:	fcmpe	d0, d3
   4105c:	fcvtzs	w19, d2
   41060:	b.le	41190 <cexp@@GLIBC_2.17+0x268>
   41064:	fmov	d0, d1
   41068:	add	x1, sp, #0x50
   4106c:	add	x0, sp, #0x48
   41070:	bl	3d0c0 <sincos@@GLIBC_2.17>
   41074:	scvtf	d8, w19
   41078:	fcmpe	d9, d8
   4107c:	b.gt	410d8 <cexp@@GLIBC_2.17+0x1b0>
   41080:	fcmpe	d8, d10
   41084:	b.pl	410fc <cexp@@GLIBC_2.17+0x1d4>  // b.nfrst
   41088:	ldp	d2, d3, [sp, #72]
   4108c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   41090:	fmov	d0, x0
   41094:	fmul	d2, d2, d0
   41098:	fmul	d3, d3, d0
   4109c:	fmov	d1, d2
   410a0:	fmov	d0, d3
   410a4:	fabs	d5, d3
   410a8:	mov	x0, #0x10000000000000      	// #4503599627370496
   410ac:	fmov	d4, x0
   410b0:	fcmpe	d5, d4
   410b4:	b.pl	410bc <cexp@@GLIBC_2.17+0x194>  // b.nfrst
   410b8:	fmul	d3, d3, d3
   410bc:	fabs	d4, d2
   410c0:	mov	x0, #0x10000000000000      	// #4503599627370496
   410c4:	fmov	d3, x0
   410c8:	fcmpe	d4, d3
   410cc:	b.pl	40fe8 <cexp@@GLIBC_2.17+0xc0>  // b.nfrst
   410d0:	fmul	d2, d2, d2
   410d4:	b	40fe8 <cexp@@GLIBC_2.17+0xc0>
   410d8:	fmov	d0, d8
   410dc:	bl	333e8 <__exp_finite@GLIBC_2.17>
   410e0:	fsub	d10, d9, d8
   410e4:	ldp	d2, d1, [sp, #72]
   410e8:	fcmpe	d8, d10
   410ec:	fmul	d2, d0, d2
   410f0:	fmul	d1, d0, d1
   410f4:	stp	d2, d1, [sp, #72]
   410f8:	b.mi	41140 <cexp@@GLIBC_2.17+0x218>  // b.first
   410fc:	fmov	d0, d10
   41100:	bl	333e8 <__exp_finite@GLIBC_2.17>
   41104:	ldp	d2, d3, [sp, #72]
   41108:	fmul	d2, d0, d2
   4110c:	fmul	d3, d0, d3
   41110:	fmov	d1, d2
   41114:	fmov	d0, d3
   41118:	b	410a4 <cexp@@GLIBC_2.17+0x17c>
   4111c:	fcmp	d1, #0.0
   41120:	b.ne	4119c <cexp@@GLIBC_2.17+0x274>  // b.any
   41124:	fmov	x0, d9
   41128:	movi	d0, #0x0
   4112c:	cmp	x0, #0x0
   41130:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   41134:	fmov	d2, x0
   41138:	fcsel	d0, d0, d2, lt  // lt = tstop
   4113c:	b	40fe8 <cexp@@GLIBC_2.17+0xc0>
   41140:	fmul	d2, d2, d0
   41144:	fmul	d0, d1, d0
   41148:	fsub	d10, d10, d8
   4114c:	stp	d2, d0, [sp, #72]
   41150:	b	41080 <cexp@@GLIBC_2.17+0x158>
   41154:	fcmp	d0, d0
   41158:	b.vs	411ec <cexp@@GLIBC_2.17+0x2c4>
   4115c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   41160:	fmov	d2, x0
   41164:	fcmp	d0, d2
   41168:	b.gt	41020 <cexp@@GLIBC_2.17+0xf8>
   4116c:	mov	x0, #0x10000000000000      	// #4503599627370496
   41170:	fmov	d2, x0
   41174:	fcmpe	d0, d2
   41178:	b.ge	41020 <cexp@@GLIBC_2.17+0xf8>  // b.tcont
   4117c:	fcmp	d1, #0.0
   41180:	b.ne	41020 <cexp@@GLIBC_2.17+0xf8>  // b.any
   41184:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   41188:	fmov	d0, x0
   4118c:	b	40fe8 <cexp@@GLIBC_2.17+0xc0>
   41190:	fmov	d0, #1.000000000000000000e+00
   41194:	stp	d1, d0, [sp, #72]
   41198:	b	41074 <cexp@@GLIBC_2.17+0x14c>
   4119c:	fmov	x0, d9
   411a0:	movi	d8, #0x0
   411a4:	cmp	x0, #0x0
   411a8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   411ac:	fmov	d2, x0
   411b0:	fcsel	d8, d8, d2, lt  // lt = tstop
   411b4:	b	40fb4 <cexp@@GLIBC_2.17+0x8c>
   411b8:	fmov	d0, #1.000000000000000000e+00
   411bc:	b	40fd8 <cexp@@GLIBC_2.17+0xb0>
   411c0:	fmov	x0, d9
   411c4:	tbnz	x0, #63, 411d8 <cexp@@GLIBC_2.17+0x2b0>
   411c8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   411cc:	fsub	d1, d1, d1
   411d0:	fmov	d0, x0
   411d4:	b	40fe8 <cexp@@GLIBC_2.17+0xc0>
   411d8:	movi	d0, #0x0
   411dc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   411e0:	fmov	d2, x0
   411e4:	bif	v1.8b, v0.8b, v2.8b
   411e8:	b	40fe8 <cexp@@GLIBC_2.17+0xc0>
   411ec:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   411f0:	fmov	d0, x0
   411f4:	fmov	d1, x0
   411f8:	b	40fe8 <cexp@@GLIBC_2.17+0xc0>
   411fc:	bl	ba70 <__stack_chk_fail@plt>

0000000000041200 <clog@@GLIBC_2.17>:
   41200:	stp	x29, x30, [sp, #-64]!
   41204:	mov	x29, sp
   41208:	stp	d8, d9, [sp, #32]
   4120c:	fabs	d8, d0
   41210:	stp	d10, d11, [sp, #48]
   41214:	fmov	d11, d1
   41218:	fcmp	d8, d8
   4121c:	b.vs	414b0 <clog@@GLIBC_2.17+0x2b0>
   41220:	fmov	d10, d0
   41224:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   41228:	fmov	d0, x0
   4122c:	fcmp	d8, d0
   41230:	b.le	412d8 <clog@@GLIBC_2.17+0xd8>
   41234:	fabs	d9, d1
   41238:	fcmp	d9, d9
   4123c:	b.vs	414cc <clog@@GLIBC_2.17+0x2cc>
   41240:	fcmpe	d9, d8
   41244:	mov	x0, #0x7fdfffffffffffff    	// #9214364837600034815
   41248:	fmov	d2, x0
   4124c:	str	x19, [sp, #16]
   41250:	fcsel	d3, d9, d8, gt
   41254:	fcsel	d0, d8, d9, gt
   41258:	fcmpe	d3, d2
   4125c:	fmov	d8, d3
   41260:	fmov	d9, d0
   41264:	b.gt	41374 <clog@@GLIBC_2.17+0x174>
   41268:	mov	x0, #0x10000000000000      	// #4503599627370496
   4126c:	fmov	d2, x0
   41270:	fcmpe	d3, d2
   41274:	b.pl	41280 <clog@@GLIBC_2.17+0x80>  // b.nfrst
   41278:	fcmpe	d0, d2
   4127c:	b.mi	413f8 <clog@@GLIBC_2.17+0x1f8>  // b.first
   41280:	fmov	d1, #1.000000000000000000e+00
   41284:	fcmp	d3, d1
   41288:	b.ne	414a8 <clog@@GLIBC_2.17+0x2a8>  // b.any
   4128c:	fmul	d0, d0, d0
   41290:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   41294:	fmov	d8, #5.000000000000000000e-01
   41298:	mov	x0, #0x10000000000000      	// #4503599627370496
   4129c:	fmov	d1, x0
   412a0:	fmul	d8, d0, d8
   412a4:	fcmpe	d8, d1
   412a8:	b.mi	413f0 <clog@@GLIBC_2.17+0x1f0>  // b.first
   412ac:	nop
   412b0:	fmov	d1, d10
   412b4:	fmov	d0, d11
   412b8:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   412bc:	fmov	d1, d0
   412c0:	fmov	d0, d8
   412c4:	ldr	x19, [sp, #16]
   412c8:	ldp	d8, d9, [sp, #32]
   412cc:	ldp	d10, d11, [sp, #48]
   412d0:	ldp	x29, x30, [sp], #64
   412d4:	ret
   412d8:	mov	x0, #0x10000000000000      	// #4503599627370496
   412dc:	fmov	d1, x0
   412e0:	fabs	d9, d11
   412e4:	fcmpe	d8, d1
   412e8:	b.ge	41350 <clog@@GLIBC_2.17+0x150>  // b.tcont
   412ec:	fcmp	d10, #0.0
   412f0:	b.ne	41350 <clog@@GLIBC_2.17+0x150>  // b.any
   412f4:	fcmp	d9, d9
   412f8:	b.vs	41358 <clog@@GLIBC_2.17+0x158>
   412fc:	fcmp	d9, d0
   41300:	b.gt	41240 <clog@@GLIBC_2.17+0x40>
   41304:	fcmpe	d9, d1
   41308:	b.ge	41240 <clog@@GLIBC_2.17+0x40>  // b.tcont
   4130c:	fcmp	d11, #0.0
   41310:	b.ne	41240 <clog@@GLIBC_2.17+0x40>  // b.any
   41314:	fmov	x0, d10
   41318:	movi	d0, #0x0
   4131c:	fmov	d2, #-1.000000000000000000e+00
   41320:	cmp	x0, #0x0
   41324:	adrp	x0, 6c000 <f64xsubf128@@GLIBC_2.28+0x18280>
   41328:	ldr	d3, [x0, #2416]
   4132c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   41330:	fmov	d1, x0
   41334:	fcsel	d3, d3, d0, lt  // lt = tstop
   41338:	fdiv	d0, d2, d8
   4133c:	ldp	d8, d9, [sp, #32]
   41340:	bsl	v1.8b, v11.8b, v3.8b
   41344:	ldp	d10, d11, [sp, #48]
   41348:	ldp	x29, x30, [sp], #64
   4134c:	ret
   41350:	fcmp	d9, d9
   41354:	b.vc	41240 <clog@@GLIBC_2.17+0x40>
   41358:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   4135c:	fmov	d0, x0
   41360:	fmov	d1, x0
   41364:	ldp	d8, d9, [sp, #32]
   41368:	ldp	d10, d11, [sp, #48]
   4136c:	ldp	x29, x30, [sp], #64
   41370:	ret
   41374:	fmov	d0, d3
   41378:	mov	w0, #0xffffffff            	// #-1
   4137c:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41380:	fmov	d8, d0
   41384:	mov	x0, #0x20000000000000      	// #9007199254740992
   41388:	fmov	d1, x0
   4138c:	fcmpe	d9, d1
   41390:	b.ge	41420 <clog@@GLIBC_2.17+0x220>  // b.tcont
   41394:	movi	d9, #0x0
   41398:	mov	w19, #0xffffffff            	// #-1
   4139c:	fmov	d0, #1.000000000000000000e+00
   413a0:	fcmpe	d8, d0
   413a4:	b.le	413c0 <clog@@GLIBC_2.17+0x1c0>
   413a8:	fmov	d1, #2.000000000000000000e+00
   413ac:	fcmpe	d8, d1
   413b0:	b.pl	413c0 <clog@@GLIBC_2.17+0x1c0>  // b.nfrst
   413b4:	cmp	w19, #0x0
   413b8:	fccmpe	d9, d0, #0x0, eq  // eq = none
   413bc:	b.mi	414e0 <clog@@GLIBC_2.17+0x2e0>  // b.first
   413c0:	fmov	d1, #1.000000000000000000e+00
   413c4:	fcmpe	d8, d1
   413c8:	b.mi	41438 <clog@@GLIBC_2.17+0x238>  // b.first
   413cc:	fmov	d1, d9
   413d0:	fmov	d0, d8
   413d4:	bl	336d8 <__hypot_finite@GLIBC_2.17>
   413d8:	bl	35a50 <__log_finite@GLIBC_2.17>
   413dc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   413e0:	scvtf	d8, w19
   413e4:	ldr	d1, [x0, #560]
   413e8:	fmsub	d8, d8, d1, d0
   413ec:	b	412b0 <clog@@GLIBC_2.17+0xb0>
   413f0:	fmul	d0, d8, d8
   413f4:	b	412b0 <clog@@GLIBC_2.17+0xb0>
   413f8:	fmov	d0, d3
   413fc:	mov	w0, #0x35                  	// #53
   41400:	mov	w19, w0
   41404:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41408:	fmov	d8, d0
   4140c:	fmov	d0, d9
   41410:	mov	w0, w19
   41414:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41418:	fmov	d9, d0
   4141c:	b	4139c <clog@@GLIBC_2.17+0x19c>
   41420:	fmov	d0, d9
   41424:	mov	w0, #0xffffffff            	// #-1
   41428:	mov	w19, w0
   4142c:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41430:	fmov	d9, d0
   41434:	b	4139c <clog@@GLIBC_2.17+0x19c>
   41438:	str	d12, [sp, #24]
   4143c:	fmov	d12, #5.000000000000000000e-01
   41440:	cmp	w19, #0x0
   41444:	cset	w0, eq  // eq = none
   41448:	fcmpe	d8, d12
   4144c:	b.lt	41464 <clog@@GLIBC_2.17+0x264>  // b.tstop
   41450:	cmp	w0, #0x0
   41454:	mov	x1, #0x3ca0000000000000    	// #4368491638549381120
   41458:	fmov	d0, x1
   4145c:	fccmpe	d9, d0, #0x0, ne  // ne = any
   41460:	b.mi	41514 <clog@@GLIBC_2.17+0x314>  // b.first
   41464:	cmp	w0, #0x0
   41468:	fmov	d12, #5.000000000000000000e-01
   4146c:	fccmpe	d8, d12, #0x1, ne  // ne = any
   41470:	b.ge	4147c <clog@@GLIBC_2.17+0x27c>  // b.tcont
   41474:	ldr	d12, [sp, #24]
   41478:	b	413cc <clog@@GLIBC_2.17+0x1cc>
   4147c:	fmul	d0, d9, d9
   41480:	fmadd	d0, d8, d8, d0
   41484:	fcmpe	d0, d12
   41488:	b.lt	41474 <clog@@GLIBC_2.17+0x274>  // b.tstop
   4148c:	fmov	d0, d8
   41490:	fmov	d1, d9
   41494:	bl	3db78 <ldexp@@GLIBC_2.17+0xa0>
   41498:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   4149c:	fmul	d8, d0, d12
   414a0:	ldr	d12, [sp, #24]
   414a4:	b	412b0 <clog@@GLIBC_2.17+0xb0>
   414a8:	mov	w19, #0x0                   	// #0
   414ac:	b	4139c <clog@@GLIBC_2.17+0x19c>
   414b0:	fabs	d1, d1
   414b4:	fcmp	d1, d1
   414b8:	b.vs	41358 <clog@@GLIBC_2.17+0x158>
   414bc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   414c0:	fmov	d0, x0
   414c4:	fcmp	d1, d0
   414c8:	b.le	41358 <clog@@GLIBC_2.17+0x158>
   414cc:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   414d0:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   414d4:	fmov	d0, x0
   414d8:	fmov	d1, x1
   414dc:	b	412c8 <clog@@GLIBC_2.17+0xc8>
   414e0:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   414e4:	fmov	d2, x0
   414e8:	fsub	d1, d8, d0
   414ec:	fadd	d8, d8, d0
   414f0:	fcmpe	d9, d2
   414f4:	fmul	d0, d1, d8
   414f8:	b.lt	41500 <clog@@GLIBC_2.17+0x300>  // b.tstop
   414fc:	fmadd	d0, d9, d9, d0
   41500:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   41504:	fmov	d8, d0
   41508:	fmov	d0, #5.000000000000000000e-01
   4150c:	fmul	d8, d8, d0
   41510:	b	412b0 <clog@@GLIBC_2.17+0xb0>
   41514:	fsub	d0, d8, d1
   41518:	fadd	d8, d8, d1
   4151c:	fmul	d0, d0, d8
   41520:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   41524:	fmul	d8, d0, d12
   41528:	ldr	d12, [sp, #24]
   4152c:	b	412b0 <clog@@GLIBC_2.17+0xb0>

0000000000041530 <cproj@@GLIBC_2.17>:
   41530:	fmov	d2, d1
   41534:	fabs	d1, d0
   41538:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   4153c:	fmov	d3, x0
   41540:	fcmp	d1, d3
   41544:	b.gt	4155c <cproj@@GLIBC_2.17+0x2c>
   41548:	fabs	d4, d2
   4154c:	fmov	d1, d2
   41550:	fcmp	d4, d3
   41554:	b.gt	4155c <cproj@@GLIBC_2.17+0x2c>
   41558:	ret
   4155c:	movi	d1, #0x0
   41560:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   41564:	fmov	d3, x0
   41568:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   4156c:	fmov	d0, x0
   41570:	bit	v1.8b, v2.8b, v3.8b
   41574:	ret

0000000000041578 <csqrt@@GLIBC_2.17>:
   41578:	fabs	d3, d0
   4157c:	stp	x29, x30, [sp, #-64]!
   41580:	mov	x29, sp
   41584:	stp	d10, d11, [sp, #48]
   41588:	fmov	d10, d1
   4158c:	fcmp	d3, d3
   41590:	fmov	d11, d1
   41594:	fabs	d1, d1
   41598:	b.vs	418b4 <csqrt@@GLIBC_2.17+0x33c>
   4159c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   415a0:	fmov	d4, x0
   415a4:	fcmp	d3, d4
   415a8:	b.le	415dc <csqrt@@GLIBC_2.17+0x64>
   415ac:	fcmp	d1, d1
   415b0:	b.vs	419c0 <csqrt@@GLIBC_2.17+0x448>
   415b4:	fcmp	d1, d4
   415b8:	b.gt	41668 <csqrt@@GLIBC_2.17+0xf0>
   415bc:	fcmpe	d0, #0.0
   415c0:	b.mi	4192c <csqrt@@GLIBC_2.17+0x3b4>  // b.first
   415c4:	movi	d1, #0x0
   415c8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   415cc:	fmov	d2, x0
   415d0:	bif	v10.8b, v1.8b, v2.8b
   415d4:	fmov	d1, d10
   415d8:	b	41674 <csqrt@@GLIBC_2.17+0xfc>
   415dc:	mov	x0, #0x10000000000000      	// #4503599627370496
   415e0:	fmov	d2, x0
   415e4:	str	x19, [sp, #16]
   415e8:	fcmpe	d3, d2
   415ec:	stp	d8, d9, [sp, #32]
   415f0:	fmov	d9, d0
   415f4:	b.ge	41680 <csqrt@@GLIBC_2.17+0x108>  // b.tcont
   415f8:	fcmp	d0, #0.0
   415fc:	b.ne	41650 <csqrt@@GLIBC_2.17+0xd8>  // b.any
   41600:	fcmp	d1, d1
   41604:	b.vs	419a8 <csqrt@@GLIBC_2.17+0x430>
   41608:	fcmp	d1, d4
   4160c:	b.gt	41660 <csqrt@@GLIBC_2.17+0xe8>
   41610:	fcmpe	d1, d2
   41614:	b.lt	41920 <csqrt@@GLIBC_2.17+0x3a8>  // b.tstop
   41618:	mov	x0, #0x20000000000000      	// #9007199254740992
   4161c:	fmov	d0, x0
   41620:	fcmpe	d1, d0
   41624:	b.ge	418ec <csqrt@@GLIBC_2.17+0x374>  // b.tcont
   41628:	fadd	d0, d1, d1
   4162c:	fmov	d3, #5.000000000000000000e-01
   41630:	fsqrt	d0, d0
   41634:	fmul	d0, d0, d3
   41638:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4163c:	fmov	d1, x0
   41640:	ldr	x19, [sp, #16]
   41644:	bsl	v1.8b, v10.8b, v0.8b
   41648:	ldp	d8, d9, [sp, #32]
   4164c:	b	41674 <csqrt@@GLIBC_2.17+0xfc>
   41650:	fcmp	d1, d1
   41654:	b.vs	419a8 <csqrt@@GLIBC_2.17+0x430>
   41658:	fcmp	d1, d4
   4165c:	b.le	41874 <csqrt@@GLIBC_2.17+0x2fc>
   41660:	ldr	x19, [sp, #16]
   41664:	ldp	d8, d9, [sp, #32]
   41668:	fmov	d1, d10
   4166c:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   41670:	fmov	d0, x0
   41674:	ldp	d10, d11, [sp, #48]
   41678:	ldp	x29, x30, [sp], #64
   4167c:	ret
   41680:	fcmp	d1, d1
   41684:	b.vs	419a8 <csqrt@@GLIBC_2.17+0x430>
   41688:	fcmp	d1, d4
   4168c:	b.gt	41660 <csqrt@@GLIBC_2.17+0xe8>
   41690:	fcmpe	d1, d2
   41694:	b.ge	416a0 <csqrt@@GLIBC_2.17+0x128>  // b.tcont
   41698:	fcmp	d10, #0.0
   4169c:	b.eq	41888 <csqrt@@GLIBC_2.17+0x310>  // b.none
   416a0:	mov	x0, #0x7fcfffffffffffff    	// #9209861237972664319
   416a4:	fmov	d4, x0
   416a8:	fcmpe	d3, d4
   416ac:	b.gt	4180c <csqrt@@GLIBC_2.17+0x294>
   416b0:	fcmpe	d1, d4
   416b4:	b.le	41794 <csqrt@@GLIBC_2.17+0x21c>
   416b8:	mov	x0, #0x30000000000000      	// #13510798882111488
   416bc:	fmov	d1, x0
   416c0:	movi	d9, #0x0
   416c4:	fcmpe	d3, d1
   416c8:	b.ge	418dc <csqrt@@GLIBC_2.17+0x364>  // b.tcont
   416cc:	fmov	d0, d10
   416d0:	mov	w0, #0xfffffffe            	// #-2
   416d4:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   416d8:	fmov	d11, d0
   416dc:	fmov	d0, d9
   416e0:	fmov	d1, d11
   416e4:	bl	336d8 <__hypot_finite@GLIBC_2.17>
   416e8:	fcmpe	d9, #0.0
   416ec:	fmov	d8, d0
   416f0:	fabs	d0, d11
   416f4:	b.le	41844 <csqrt@@GLIBC_2.17+0x2cc>
   416f8:	fadd	d8, d9, d8
   416fc:	fmov	d10, #5.000000000000000000e-01
   41700:	fmov	d1, #1.000000000000000000e+00
   41704:	fcmpe	d0, d1
   41708:	fmul	d8, d8, d10
   4170c:	fsqrt	d8, d8
   41710:	b.mi	41948 <csqrt@@GLIBC_2.17+0x3d0>  // b.first
   41714:	fdiv	d2, d11, d8
   41718:	mov	w19, #0x1                   	// #1
   4171c:	fmul	d10, d2, d10
   41720:	fmov	d0, d8
   41724:	mov	w0, w19
   41728:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   4172c:	fmov	d8, d0
   41730:	fmov	d0, d10
   41734:	mov	w0, w19
   41738:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   4173c:	fabs	d1, d8
   41740:	fmov	d10, d0
   41744:	mov	x0, #0x10000000000000      	// #4503599627370496
   41748:	fmov	d0, x0
   4174c:	fcmpe	d1, d0
   41750:	b.pl	41758 <csqrt@@GLIBC_2.17+0x1e0>  // b.nfrst
   41754:	fmul	d0, d8, d8
   41758:	fabs	d1, d10
   4175c:	mov	x0, #0x10000000000000      	// #4503599627370496
   41760:	fmov	d0, x0
   41764:	fcmpe	d1, d0
   41768:	b.pl	41770 <csqrt@@GLIBC_2.17+0x1f8>  // b.nfrst
   4176c:	fmul	d0, d10, d10
   41770:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   41774:	fmov	d1, x0
   41778:	fmov	d0, d8
   4177c:	bsl	v1.8b, v11.8b, v10.8b
   41780:	ldr	x19, [sp, #16]
   41784:	ldp	d8, d9, [sp, #32]
   41788:	ldp	d10, d11, [sp, #48]
   4178c:	ldp	x29, x30, [sp], #64
   41790:	ret
   41794:	mov	x0, #0x20000000000000      	// #9007199254740992
   41798:	fmov	d2, x0
   4179c:	fcmpe	d3, d2
   417a0:	b.pl	417ac <csqrt@@GLIBC_2.17+0x234>  // b.nfrst
   417a4:	fcmpe	d1, d2
   417a8:	b.mi	418fc <csqrt@@GLIBC_2.17+0x384>  // b.first
   417ac:	mov	w19, #0x0                   	// #0
   417b0:	fmov	d1, d11
   417b4:	fmov	d0, d9
   417b8:	bl	336d8 <__hypot_finite@GLIBC_2.17>
   417bc:	fcmpe	d9, #0.0
   417c0:	fmov	d8, d0
   417c4:	b.gt	417f0 <csqrt@@GLIBC_2.17+0x278>
   417c8:	fsub	d8, d8, d9
   417cc:	fmov	d0, #5.000000000000000000e-01
   417d0:	fmul	d2, d8, d0
   417d4:	fsqrt	d10, d2
   417d8:	fdiv	d8, d11, d10
   417dc:	fmul	d8, d8, d0
   417e0:	fabs	d8, d8
   417e4:	cbnz	w19, 41720 <csqrt@@GLIBC_2.17+0x1a8>
   417e8:	fabs	d1, d8
   417ec:	b	41744 <csqrt@@GLIBC_2.17+0x1cc>
   417f0:	fadd	d8, d8, d9
   417f4:	fmov	d10, #5.000000000000000000e-01
   417f8:	fmul	d8, d8, d10
   417fc:	fsqrt	d8, d8
   41800:	fdiv	d2, d11, d8
   41804:	fmul	d10, d2, d10
   41808:	b	417e4 <csqrt@@GLIBC_2.17+0x26c>
   4180c:	mov	w0, #0xfffffffe            	// #-2
   41810:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41814:	fmov	d9, d0
   41818:	fmov	d0, d10
   4181c:	mov	w0, #0xfffffffe            	// #-2
   41820:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41824:	fmov	d11, d0
   41828:	fmov	d0, d9
   4182c:	fmov	d1, d11
   41830:	bl	336d8 <__hypot_finite@GLIBC_2.17>
   41834:	fcmpe	d9, #0.0
   41838:	fmov	d8, d0
   4183c:	fabs	d0, d11
   41840:	b.gt	416f8 <csqrt@@GLIBC_2.17+0x180>
   41844:	fsub	d8, d8, d9
   41848:	fmov	d2, #1.000000000000000000e+00
   4184c:	fmov	d1, #5.000000000000000000e-01
   41850:	fcmpe	d0, d2
   41854:	fmul	d2, d8, d1
   41858:	fsqrt	d10, d2
   4185c:	b.mi	41988 <csqrt@@GLIBC_2.17+0x410>  // b.first
   41860:	fdiv	d8, d11, d10
   41864:	mov	w19, #0x1                   	// #1
   41868:	fmul	d8, d8, d1
   4186c:	fabs	d8, d8
   41870:	b	41720 <csqrt@@GLIBC_2.17+0x1a8>
   41874:	fcmpe	d1, d2
   41878:	b.ge	416a0 <csqrt@@GLIBC_2.17+0x128>  // b.tcont
   4187c:	fcmp	d10, #0.0
   41880:	b.ne	416a0 <csqrt@@GLIBC_2.17+0x128>  // b.any
   41884:	nop
   41888:	fcmpe	d0, #0.0
   4188c:	b.mi	41964 <csqrt@@GLIBC_2.17+0x3ec>  // b.first
   41890:	fsqrt	d8, d0
   41894:	movi	d1, #0x0
   41898:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4189c:	fmov	d2, x0
   418a0:	ldr	x19, [sp, #16]
   418a4:	bit	v1.8b, v10.8b, v2.8b
   418a8:	fabs	d0, d8
   418ac:	ldp	d8, d9, [sp, #32]
   418b0:	b	41674 <csqrt@@GLIBC_2.17+0xfc>
   418b4:	fcmp	d1, d1
   418b8:	b.vs	418cc <csqrt@@GLIBC_2.17+0x354>
   418bc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   418c0:	fmov	d0, x0
   418c4:	fcmp	d1, d0
   418c8:	b.gt	41668 <csqrt@@GLIBC_2.17+0xf0>
   418cc:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   418d0:	fmov	d0, x0
   418d4:	fmov	d1, x0
   418d8:	b	41674 <csqrt@@GLIBC_2.17+0xfc>
   418dc:	mov	w0, #0xfffffffe            	// #-2
   418e0:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   418e4:	fmov	d9, d0
   418e8:	b	416cc <csqrt@@GLIBC_2.17+0x154>
   418ec:	fmov	d0, #5.000000000000000000e-01
   418f0:	fmul	d0, d1, d0
   418f4:	fsqrt	d0, d0
   418f8:	b	41638 <csqrt@@GLIBC_2.17+0xc0>
   418fc:	mov	w0, #0x36                  	// #54
   41900:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41904:	fmov	d9, d0
   41908:	fmov	d0, d10
   4190c:	mov	w0, #0x36                  	// #54
   41910:	mov	w19, #0xffffffe5            	// #-27
   41914:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41918:	fmov	d11, d0
   4191c:	b	417b0 <csqrt@@GLIBC_2.17+0x238>
   41920:	fcmp	d10, #0.0
   41924:	b.eq	41888 <csqrt@@GLIBC_2.17+0x310>  // b.none
   41928:	b	41618 <csqrt@@GLIBC_2.17+0xa0>
   4192c:	movi	d0, #0x0
   41930:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   41934:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   41938:	fmov	d1, x0
   4193c:	fmov	d2, x1
   41940:	bit	v1.8b, v10.8b, v2.8b
   41944:	b	41674 <csqrt@@GLIBC_2.17+0xfc>
   41948:	fdiv	d10, d11, d8
   4194c:	fmov	d0, d8
   41950:	mov	w0, #0x1                   	// #1
   41954:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41958:	fmov	d8, d0
   4195c:	fabs	d1, d0
   41960:	b	41744 <csqrt@@GLIBC_2.17+0x1cc>
   41964:	fneg	d1, d0
   41968:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4196c:	fmov	d2, x0
   41970:	movi	d0, #0x0
   41974:	ldr	x19, [sp, #16]
   41978:	fsqrt	d1, d1
   4197c:	ldp	d8, d9, [sp, #32]
   41980:	bit	v1.8b, v10.8b, v2.8b
   41984:	b	41674 <csqrt@@GLIBC_2.17+0xfc>
   41988:	fdiv	d8, d11, d10
   4198c:	fmov	d0, d10
   41990:	mov	w0, #0x1                   	// #1
   41994:	fabs	d8, d8
   41998:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   4199c:	fmov	d1, d8
   419a0:	fmov	d10, d0
   419a4:	b	41744 <csqrt@@GLIBC_2.17+0x1cc>
   419a8:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   419ac:	fmov	d0, x0
   419b0:	fmov	d1, x0
   419b4:	ldr	x19, [sp, #16]
   419b8:	ldp	d8, d9, [sp, #32]
   419bc:	b	41674 <csqrt@@GLIBC_2.17+0xfc>
   419c0:	fcmpe	d0, #0.0
   419c4:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   419c8:	b.mi	419d8 <csqrt@@GLIBC_2.17+0x460>  // b.first
   419cc:	fmov	d10, x0
   419d0:	fmov	d1, d10
   419d4:	b	41674 <csqrt@@GLIBC_2.17+0xfc>
   419d8:	fmov	d0, x0
   419dc:	b	41930 <csqrt@@GLIBC_2.17+0x3b8>

00000000000419e0 <cpow@@GLIBC_2.17>:
   419e0:	stp	x29, x30, [sp, #-32]!
   419e4:	mov	x29, sp
   419e8:	stp	d8, d9, [sp, #16]
   419ec:	fmov	d8, d2
   419f0:	fmov	d9, d3
   419f4:	bl	41200 <clog@@GLIBC_2.17>
   419f8:	fmul	d5, d8, d1
   419fc:	fmul	d4, d9, d1
   41a00:	fmadd	d5, d9, d0, d5
   41a04:	fnmsub	d4, d8, d0, d4
   41a08:	fcmp	d4, d5
   41a0c:	b.vs	41a24 <cpow@@GLIBC_2.17+0x44>
   41a10:	ldp	d8, d9, [sp, #16]
   41a14:	fmov	d0, d4
   41a18:	ldp	x29, x30, [sp], #32
   41a1c:	fmov	d1, d5
   41a20:	b	40f28 <cexp@@GLIBC_2.17>
   41a24:	fmov	d3, d9
   41a28:	fmov	d2, d8
   41a2c:	bl	54150 <f64xsubf128@@GLIBC_2.28+0x3d0>
   41a30:	fmov	d4, d0
   41a34:	fmov	d5, d1
   41a38:	b	41a10 <cpow@@GLIBC_2.17+0x30>
   41a3c:	nop

0000000000041a40 <__clog10@@GLIBC_2.17>:
   41a40:	stp	x29, x30, [sp, #-64]!
   41a44:	mov	x29, sp
   41a48:	stp	d8, d9, [sp, #32]
   41a4c:	fabs	d8, d0
   41a50:	stp	d10, d11, [sp, #48]
   41a54:	fmov	d11, d1
   41a58:	fcmp	d8, d8
   41a5c:	b.vs	41cf8 <__clog10@@GLIBC_2.17+0x2b8>
   41a60:	fmov	d10, d0
   41a64:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   41a68:	fmov	d0, x0
   41a6c:	fcmp	d8, d0
   41a70:	b.le	41b24 <__clog10@@GLIBC_2.17+0xe4>
   41a74:	fabs	d9, d1
   41a78:	fcmp	d9, d9
   41a7c:	b.vs	41d14 <__clog10@@GLIBC_2.17+0x2d4>
   41a80:	fcmpe	d9, d8
   41a84:	mov	x0, #0x7fdfffffffffffff    	// #9214364837600034815
   41a88:	fmov	d2, x0
   41a8c:	str	x19, [sp, #16]
   41a90:	fcsel	d3, d9, d8, gt
   41a94:	fcsel	d0, d8, d9, gt
   41a98:	fcmpe	d3, d2
   41a9c:	fmov	d8, d3
   41aa0:	fmov	d9, d0
   41aa4:	b.gt	41bc0 <__clog10@@GLIBC_2.17+0x180>
   41aa8:	mov	x0, #0x10000000000000      	// #4503599627370496
   41aac:	fmov	d2, x0
   41ab0:	fcmpe	d3, d2
   41ab4:	b.pl	41ac0 <__clog10@@GLIBC_2.17+0x80>  // b.nfrst
   41ab8:	fcmpe	d0, d2
   41abc:	b.mi	41c44 <__clog10@@GLIBC_2.17+0x204>  // b.first
   41ac0:	fmov	d1, #1.000000000000000000e+00
   41ac4:	fcmp	d3, d1
   41ac8:	b.ne	41cf0 <__clog10@@GLIBC_2.17+0x2b0>  // b.any
   41acc:	fmul	d0, d0, d0
   41ad0:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   41ad4:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   41ad8:	ldr	d8, [x0, #552]
   41adc:	mov	x0, #0x10000000000000      	// #4503599627370496
   41ae0:	fmov	d1, x0
   41ae4:	fmul	d8, d0, d8
   41ae8:	fcmpe	d8, d1
   41aec:	b.mi	41c3c <__clog10@@GLIBC_2.17+0x1fc>  // b.first
   41af0:	fmov	d1, d10
   41af4:	fmov	d0, d11
   41af8:	bl	311b0 <__atan2_finite@GLIBC_2.17>
   41afc:	fmov	d1, d0
   41b00:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   41b04:	fmov	d0, d8
   41b08:	ldr	x19, [sp, #16]
   41b0c:	ldr	d2, [x0, #104]
   41b10:	fmul	d1, d1, d2
   41b14:	ldp	d8, d9, [sp, #32]
   41b18:	ldp	d10, d11, [sp, #48]
   41b1c:	ldp	x29, x30, [sp], #64
   41b20:	ret
   41b24:	mov	x0, #0x10000000000000      	// #4503599627370496
   41b28:	fmov	d1, x0
   41b2c:	fabs	d9, d11
   41b30:	fcmpe	d8, d1
   41b34:	b.ge	41b9c <__clog10@@GLIBC_2.17+0x15c>  // b.tcont
   41b38:	fcmp	d10, #0.0
   41b3c:	b.ne	41b9c <__clog10@@GLIBC_2.17+0x15c>  // b.any
   41b40:	fcmp	d9, d9
   41b44:	b.vs	41ba4 <__clog10@@GLIBC_2.17+0x164>
   41b48:	fcmp	d9, d0
   41b4c:	b.gt	41a80 <__clog10@@GLIBC_2.17+0x40>
   41b50:	fcmpe	d9, d1
   41b54:	b.ge	41a80 <__clog10@@GLIBC_2.17+0x40>  // b.tcont
   41b58:	fcmp	d11, #0.0
   41b5c:	b.ne	41a80 <__clog10@@GLIBC_2.17+0x40>  // b.any
   41b60:	fmov	x0, d10
   41b64:	movi	d3, #0x0
   41b68:	fmov	d0, #-1.000000000000000000e+00
   41b6c:	fdiv	d0, d0, d8
   41b70:	cmp	x0, #0x0
   41b74:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   41b78:	ldp	d8, d9, [sp, #32]
   41b7c:	ldr	d2, [x0, #544]
   41b80:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   41b84:	fmov	d1, x0
   41b88:	fcsel	d2, d2, d3, lt  // lt = tstop
   41b8c:	bsl	v1.8b, v11.8b, v2.8b
   41b90:	ldp	d10, d11, [sp, #48]
   41b94:	ldp	x29, x30, [sp], #64
   41b98:	ret
   41b9c:	fcmp	d9, d9
   41ba0:	b.vc	41a80 <__clog10@@GLIBC_2.17+0x40>
   41ba4:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
   41ba8:	fmov	d0, x0
   41bac:	fmov	d1, x0
   41bb0:	ldp	d8, d9, [sp, #32]
   41bb4:	ldp	d10, d11, [sp, #48]
   41bb8:	ldp	x29, x30, [sp], #64
   41bbc:	ret
   41bc0:	fmov	d0, d3
   41bc4:	mov	w0, #0xffffffff            	// #-1
   41bc8:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41bcc:	fmov	d8, d0
   41bd0:	mov	x0, #0x20000000000000      	// #9007199254740992
   41bd4:	fmov	d1, x0
   41bd8:	fcmpe	d9, d1
   41bdc:	b.ge	41c6c <__clog10@@GLIBC_2.17+0x22c>  // b.tcont
   41be0:	movi	d9, #0x0
   41be4:	mov	w19, #0xffffffff            	// #-1
   41be8:	fmov	d0, #1.000000000000000000e+00
   41bec:	fcmpe	d8, d0
   41bf0:	b.le	41c0c <__clog10@@GLIBC_2.17+0x1cc>
   41bf4:	fmov	d1, #2.000000000000000000e+00
   41bf8:	fcmpe	d8, d1
   41bfc:	b.pl	41c0c <__clog10@@GLIBC_2.17+0x1cc>  // b.nfrst
   41c00:	cmp	w19, #0x0
   41c04:	fccmpe	d9, d0, #0x0, eq  // eq = none
   41c08:	b.mi	41d28 <__clog10@@GLIBC_2.17+0x2e8>  // b.first
   41c0c:	fmov	d1, #1.000000000000000000e+00
   41c10:	fcmpe	d8, d1
   41c14:	b.mi	41c84 <__clog10@@GLIBC_2.17+0x244>  // b.first
   41c18:	fmov	d1, d9
   41c1c:	fmov	d0, d8
   41c20:	bl	336d8 <__hypot_finite@GLIBC_2.17>
   41c24:	bl	35c10 <__log10_finite@GLIBC_2.17>
   41c28:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   41c2c:	scvtf	d8, w19
   41c30:	ldr	d1, [x0, #560]
   41c34:	fmsub	d8, d8, d1, d0
   41c38:	b	41af0 <__clog10@@GLIBC_2.17+0xb0>
   41c3c:	fmul	d0, d8, d8
   41c40:	b	41af0 <__clog10@@GLIBC_2.17+0xb0>
   41c44:	fmov	d0, d3
   41c48:	mov	w0, #0x35                  	// #53
   41c4c:	mov	w19, w0
   41c50:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41c54:	fmov	d8, d0
   41c58:	fmov	d0, d9
   41c5c:	mov	w0, w19
   41c60:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41c64:	fmov	d9, d0
   41c68:	b	41be8 <__clog10@@GLIBC_2.17+0x1a8>
   41c6c:	fmov	d0, d9
   41c70:	mov	w0, #0xffffffff            	// #-1
   41c74:	mov	w19, w0
   41c78:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   41c7c:	fmov	d9, d0
   41c80:	b	41be8 <__clog10@@GLIBC_2.17+0x1a8>
   41c84:	fmov	d0, #5.000000000000000000e-01
   41c88:	cmp	w19, #0x0
   41c8c:	cset	w0, eq  // eq = none
   41c90:	fcmpe	d8, d0
   41c94:	b.lt	41cac <__clog10@@GLIBC_2.17+0x26c>  // b.tstop
   41c98:	cmp	w0, #0x0
   41c9c:	mov	x1, #0x3ca0000000000000    	// #4368491638549381120
   41ca0:	fmov	d0, x1
   41ca4:	fccmpe	d9, d0, #0x0, ne  // ne = any
   41ca8:	b.mi	41d4c <__clog10@@GLIBC_2.17+0x30c>  // b.first
   41cac:	cmp	w0, #0x0
   41cb0:	fmov	d0, #5.000000000000000000e-01
   41cb4:	fccmpe	d8, d0, #0x1, ne  // ne = any
   41cb8:	b.lt	41c18 <__clog10@@GLIBC_2.17+0x1d8>  // b.tstop
   41cbc:	fmul	d1, d9, d9
   41cc0:	fmadd	d1, d8, d8, d1
   41cc4:	fcmpe	d1, d0
   41cc8:	b.lt	41c18 <__clog10@@GLIBC_2.17+0x1d8>  // b.tstop
   41ccc:	fmov	d1, d9
   41cd0:	fmov	d0, d8
   41cd4:	bl	3db78 <ldexp@@GLIBC_2.17+0xa0>
   41cd8:	bl	38c90 <floor@@GLIBC_2.17+0x8>
   41cdc:	fmov	d8, d0
   41ce0:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   41ce4:	ldr	d0, [x0, #552]
   41ce8:	fmul	d8, d8, d0
   41cec:	b	41af0 <__clog10@@GLIBC_2.17+0xb0>
   41cf0:	mov	w19, #0x0                   	// #0
   41cf4:	b	41be8 <__clog10@@GLIBC_2.17+0x1a8>
   41cf8:	fabs	d1, d1
   41cfc:	fcmp	d1, d1
   41d00:	b.vs	41ba4 <__clog10@@GLIBC_2.17+0x164>
   41d04:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   41d08:	fmov	d0, x0
   41d0c:	fcmp	d1, d0
   41d10:	b.le	41ba4 <__clog10@@GLIBC_2.17+0x164>
   41d14:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   41d18:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
   41d1c:	fmov	d0, x0
   41d20:	fmov	d1, x1
   41d24:	b	41b14 <__clog10@@GLIBC_2.17+0xd4>
   41d28:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   41d2c:	fmov	d2, x0
   41d30:	fsub	d1, d8, d0
   41d34:	fadd	d8, d8, d0
   41d38:	fcmpe	d9, d2
   41d3c:	fmul	d0, d1, d8
   41d40:	b.lt	41cd8 <__clog10@@GLIBC_2.17+0x298>  // b.tstop
   41d44:	fmadd	d0, d9, d9, d0
   41d48:	b	41cd8 <__clog10@@GLIBC_2.17+0x298>
   41d4c:	fsub	d0, d8, d1
   41d50:	fadd	d8, d8, d1
   41d54:	fmul	d0, d0, d8
   41d58:	b	41cd8 <__clog10@@GLIBC_2.17+0x298>
   41d5c:	nop

0000000000041d60 <fdim@@GLIBC_2.17>:
   41d60:	fmov	d2, d0
   41d64:	movi	d0, #0x0
   41d68:	fcmp	d2, d1
   41d6c:	b.ls	41db4 <fdim@@GLIBC_2.17+0x54>  // b.plast
   41d70:	fsub	d0, d2, d1
   41d74:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   41d78:	fmov	d3, x0
   41d7c:	fabs	d4, d0
   41d80:	fcmp	d4, d3
   41d84:	b.le	41db4 <fdim@@GLIBC_2.17+0x54>
   41d88:	fabs	d2, d2
   41d8c:	fcmp	d2, d3
   41d90:	b.gt	41db4 <fdim@@GLIBC_2.17+0x54>
   41d94:	fabs	d1, d1
   41d98:	fcmp	d1, d3
   41d9c:	b.gt	41db4 <fdim@@GLIBC_2.17+0x54>
   41da0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   41da4:	ldr	x0, [x0, #3976]
   41da8:	mrs	x1, tpidr_el0
   41dac:	mov	w2, #0x22                  	// #34
   41db0:	str	w2, [x1, x0]
   41db4:	ret

0000000000041db8 <nextdown@@GLIBC_2.24>:
   41db8:	fneg	d0, d0
   41dbc:	stp	x29, x30, [sp, #-16]!
   41dc0:	mov	x29, sp
   41dc4:	bl	3e208 <nextup@@GLIBC_2.24>
   41dc8:	fneg	d0, d0
   41dcc:	ldp	x29, x30, [sp], #16
   41dd0:	ret
   41dd4:	nop

0000000000041dd8 <fmax@@GLIBC_2.17>:
   41dd8:	fmaxnm	d0, d0, d1
   41ddc:	ret

0000000000041de0 <fmin@@GLIBC_2.17>:
   41de0:	fminnm	d0, d0, d1
   41de4:	ret

0000000000041de8 <nan@@GLIBC_2.17>:
   41de8:	mov	w2, #0x0                   	// #0
   41dec:	mov	x1, #0x0                   	// #0
   41df0:	b	ba40 <__strtod_nan@plt>
   41df4:	nop

0000000000041df8 <__iseqsig@@GLIBC_2.25>:
   41df8:	fcmpe	d0, d1
   41dfc:	mov	w0, #0x1                   	// #1
   41e00:	cset	w2, ls  // ls = plast
   41e04:	cset	w1, ge  // ge = tcont
   41e08:	cmp	w2, #0x0
   41e0c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   41e10:	b.ne	41e38 <__iseqsig@@GLIBC_2.25+0x40>  // b.any
   41e14:	cmp	w2, #0x0
   41e18:	mov	w0, #0x0                   	// #0
   41e1c:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   41e20:	b.ne	41e38 <__iseqsig@@GLIBC_2.25+0x40>  // b.any
   41e24:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   41e28:	ldr	x1, [x1, #3976]
   41e2c:	mrs	x2, tpidr_el0
   41e30:	mov	w3, #0x21                  	// #33
   41e34:	str	w3, [x2, x1]
   41e38:	ret
   41e3c:	nop

0000000000041e40 <canonicalize@@GLIBC_2.25>:
   41e40:	stp	x29, x30, [sp, #-32]!
   41e44:	mov	x29, sp
   41e48:	str	d8, [sp, #24]
   41e4c:	ldr	d8, [x1]
   41e50:	str	x19, [sp, #16]
   41e54:	mov	x19, x0
   41e58:	fmov	d0, d8
   41e5c:	bl	3d868 <__issignaling@@GLIBC_2.18>
   41e60:	cbz	w0, 41e68 <canonicalize@@GLIBC_2.25+0x28>
   41e64:	fadd	d8, d8, d8
   41e68:	mov	w0, #0x0                   	// #0
   41e6c:	str	d8, [x19]
   41e70:	ldr	x19, [sp, #16]
   41e74:	ldr	d8, [sp, #24]
   41e78:	ldp	x29, x30, [sp], #32
   41e7c:	ret

0000000000041e80 <significand@@GLIBC_2.17>:
   41e80:	stp	x29, x30, [sp, #-32]!
   41e84:	mov	x29, sp
   41e88:	str	d8, [sp, #16]
   41e8c:	fmov	d8, d0
   41e90:	bl	41eb0 <ilogb@@GLIBC_2.17>
   41e94:	fmov	d0, d8
   41e98:	neg	w0, w0
   41e9c:	ldr	d8, [sp, #16]
   41ea0:	ldp	x29, x30, [sp], #32
   41ea4:	scvtf	d1, w0
   41ea8:	b	36510 <__scalb_finite@GLIBC_2.17>
   41eac:	nop

0000000000041eb0 <ilogb@@GLIBC_2.17>:
   41eb0:	stp	x29, x30, [sp, #-32]!
   41eb4:	mov	x29, sp
   41eb8:	str	x19, [sp, #16]
   41ebc:	bl	36c78 <__gamma_r_finite@GLIBC_2.17+0x2d0>
   41ec0:	mov	w19, w0
   41ec4:	mov	w0, #0x7fffffff            	// #2147483647
   41ec8:	cmp	w19, w0
   41ecc:	mov	w0, #0x80000001            	// #-2147483647
   41ed0:	ccmp	w19, w0, #0x4, ne  // ne = any
   41ed4:	b.eq	41ee8 <ilogb@@GLIBC_2.17+0x38>  // b.none
   41ed8:	mov	w0, w19
   41edc:	ldr	x19, [sp, #16]
   41ee0:	ldp	x29, x30, [sp], #32
   41ee4:	ret
   41ee8:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   41eec:	ldr	x1, [x1, #3976]
   41ef0:	mrs	x2, tpidr_el0
   41ef4:	mov	w3, #0x21                  	// #33
   41ef8:	mov	w0, #0x1                   	// #1
   41efc:	str	w3, [x2, x1]
   41f00:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   41f04:	mov	w0, w19
   41f08:	ldr	x19, [sp, #16]
   41f0c:	ldp	x29, x30, [sp], #32
   41f10:	ret
   41f14:	nop

0000000000041f18 <llogb@@GLIBC_2.25>:
   41f18:	stp	x29, x30, [sp, #-32]!
   41f1c:	mov	x29, sp
   41f20:	str	x19, [sp, #16]
   41f24:	bl	36c78 <__gamma_r_finite@GLIBC_2.17+0x2d0>
   41f28:	mov	w1, #0x80000001            	// #-2147483647
   41f2c:	cmp	w0, w1
   41f30:	b.eq	41f54 <llogb@@GLIBC_2.25+0x3c>  // b.none
   41f34:	mov	w1, #0x7fffffff            	// #2147483647
   41f38:	sxtw	x19, w0
   41f3c:	cmp	w0, w1
   41f40:	b.eq	41f84 <llogb@@GLIBC_2.25+0x6c>  // b.none
   41f44:	mov	x0, x19
   41f48:	ldr	x19, [sp, #16]
   41f4c:	ldp	x29, x30, [sp], #32
   41f50:	ret
   41f54:	mov	x19, #0x8000000000000001    	// #-9223372036854775807
   41f58:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   41f5c:	ldr	x1, [x1, #3976]
   41f60:	mrs	x2, tpidr_el0
   41f64:	mov	w3, #0x21                  	// #33
   41f68:	mov	w0, #0x1                   	// #1
   41f6c:	str	w3, [x2, x1]
   41f70:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   41f74:	mov	x0, x19
   41f78:	ldr	x19, [sp, #16]
   41f7c:	ldp	x29, x30, [sp], #32
   41f80:	ret
   41f84:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
   41f88:	b	41f58 <llogb@@GLIBC_2.25+0x40>
   41f8c:	nop

0000000000041f90 <log1p@@GLIBC_2.17>:
   41f90:	fmov	d1, #-1.000000000000000000e+00
   41f94:	fcmp	d0, d1
   41f98:	b.ls	41fa0 <log1p@@GLIBC_2.17+0x10>  // b.plast
   41f9c:	b	38c90 <floor@@GLIBC_2.17+0x8>
   41fa0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   41fa4:	ldr	x0, [x0, #3976]
   41fa8:	mrs	x1, tpidr_el0
   41fac:	b.ne	41fbc <log1p@@GLIBC_2.17+0x2c>  // b.any
   41fb0:	mov	w2, #0x22                  	// #34
   41fb4:	str	w2, [x1, x0]
   41fb8:	b	38c90 <floor@@GLIBC_2.17+0x8>
   41fbc:	mov	w2, #0x21                  	// #33
   41fc0:	str	w2, [x1, x0]
   41fc4:	b	38c90 <floor@@GLIBC_2.17+0x8>

0000000000041fc8 <scalbln@@GLIBC_2.17>:
   41fc8:	stp	x29, x30, [sp, #-32]!
   41fcc:	fabs	d2, d0
   41fd0:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
   41fd4:	mov	x29, sp
   41fd8:	str	d8, [sp, #16]
   41fdc:	fmov	d8, x1
   41fe0:	fmov	d1, d0
   41fe4:	fcmp	d2, d8
   41fe8:	b.hi	41ff4 <scalbln@@GLIBC_2.17+0x2c>  // b.pmore
   41fec:	fcmp	d0, #0.0
   41ff0:	b.ne	42004 <scalbln@@GLIBC_2.17+0x3c>  // b.any
   41ff4:	fadd	d0, d1, d1
   41ff8:	ldr	d8, [sp, #16]
   41ffc:	ldp	x29, x30, [sp], #32
   42000:	ret
   42004:	bl	392e0 <rint@@GLIBC_2.17+0x8>
   42008:	fabs	d1, d0
   4200c:	fcmp	d1, d8
   42010:	b.ls	42034 <scalbln@@GLIBC_2.17+0x6c>  // b.plast
   42014:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   42018:	ldr	x0, [x0, #3976]
   4201c:	mrs	x1, tpidr_el0
   42020:	mov	w2, #0x22                  	// #34
   42024:	ldr	d8, [sp, #16]
   42028:	str	w2, [x1, x0]
   4202c:	ldp	x29, x30, [sp], #32
   42030:	ret
   42034:	fcmp	d0, #0.0
   42038:	b.ne	41ff8 <scalbln@@GLIBC_2.17+0x30>  // b.any
   4203c:	b	42014 <scalbln@@GLIBC_2.17+0x4c>

0000000000042040 <fmaxmag@@GLIBC_2.25>:
   42040:	stp	x29, x30, [sp, #-32]!
   42044:	fabs	d2, d0
   42048:	mov	x29, sp
   4204c:	stp	d8, d9, [sp, #16]
   42050:	fmov	d9, d1
   42054:	fabs	d1, d1
   42058:	fmov	d8, d0
   4205c:	fcmp	d2, d1
   42060:	b.gt	42088 <fmaxmag@@GLIBC_2.25+0x48>
   42064:	b.mi	42094 <fmaxmag@@GLIBC_2.25+0x54>  // b.first
   42068:	b.eq	420b4 <fmaxmag@@GLIBC_2.25+0x74>  // b.none
   4206c:	bl	3d868 <__issignaling@@GLIBC_2.18>
   42070:	cbnz	w0, 420a4 <fmaxmag@@GLIBC_2.25+0x64>
   42074:	fmov	d0, d9
   42078:	bl	3d868 <__issignaling@@GLIBC_2.18>
   4207c:	cbnz	w0, 420a4 <fmaxmag@@GLIBC_2.25+0x64>
   42080:	fcmp	d9, d9
   42084:	fcsel	d0, d9, d8, vc
   42088:	ldp	d8, d9, [sp, #16]
   4208c:	ldp	x29, x30, [sp], #32
   42090:	ret
   42094:	fmov	d0, d9
   42098:	ldp	d8, d9, [sp, #16]
   4209c:	ldp	x29, x30, [sp], #32
   420a0:	ret
   420a4:	fadd	d0, d8, d9
   420a8:	ldp	d8, d9, [sp, #16]
   420ac:	ldp	x29, x30, [sp], #32
   420b0:	ret
   420b4:	fcmpe	d0, d9
   420b8:	fcsel	d0, d0, d9, gt
   420bc:	ldp	d8, d9, [sp, #16]
   420c0:	ldp	x29, x30, [sp], #32
   420c4:	ret

00000000000420c8 <fminmag@@GLIBC_2.25>:
   420c8:	stp	x29, x30, [sp, #-32]!
   420cc:	fabs	d2, d0
   420d0:	mov	x29, sp
   420d4:	stp	d8, d9, [sp, #16]
   420d8:	fmov	d9, d1
   420dc:	fabs	d1, d1
   420e0:	fmov	d8, d0
   420e4:	fcmp	d2, d1
   420e8:	b.mi	42110 <fminmag@@GLIBC_2.25+0x48>  // b.first
   420ec:	b.gt	4211c <fminmag@@GLIBC_2.25+0x54>
   420f0:	b.eq	4213c <fminmag@@GLIBC_2.25+0x74>  // b.none
   420f4:	bl	3d868 <__issignaling@@GLIBC_2.18>
   420f8:	cbnz	w0, 4212c <fminmag@@GLIBC_2.25+0x64>
   420fc:	fmov	d0, d9
   42100:	bl	3d868 <__issignaling@@GLIBC_2.18>
   42104:	cbnz	w0, 4212c <fminmag@@GLIBC_2.25+0x64>
   42108:	fcmp	d9, d9
   4210c:	fcsel	d0, d9, d8, vc
   42110:	ldp	d8, d9, [sp, #16]
   42114:	ldp	x29, x30, [sp], #32
   42118:	ret
   4211c:	fmov	d0, d9
   42120:	ldp	d8, d9, [sp, #16]
   42124:	ldp	x29, x30, [sp], #32
   42128:	ret
   4212c:	fadd	d0, d8, d9
   42130:	ldp	d8, d9, [sp, #16]
   42134:	ldp	x29, x30, [sp], #32
   42138:	ret
   4213c:	fcmpe	d0, d9
   42140:	fcsel	d0, d0, d9, mi  // mi = first
   42144:	ldp	d8, d9, [sp, #16]
   42148:	ldp	x29, x30, [sp], #32
   4214c:	ret

0000000000042150 <__exp2_finite@GLIBC_2.17>:
   42150:	fmov	x0, d0
   42154:	ubfx	x3, x0, #52, #11
   42158:	sub	w1, w3, #0x3c9
   4215c:	cmp	w1, #0x3e
   42160:	b.hi	421cc <__exp2_finite@GLIBC_2.17+0x7c>  // b.pmore
   42164:	adrp	x0, 89000 <f64xsubf128@@GLIBC_2.28+0x35280>
   42168:	add	x0, x0, #0x9c8
   4216c:	ldp	d4, d1, [x0, #64]
   42170:	ldp	d5, d7, [x0, #80]
   42174:	fadd	d2, d4, d0
   42178:	ldp	d3, d6, [x0, #96]
   4217c:	fsub	d4, d2, d4
   42180:	fmov	x1, d2
   42184:	fsub	d0, d0, d4
   42188:	ubfiz	x2, x1, #1, #7
   4218c:	add	x4, x2, #0xe
   42190:	add	x2, x2, #0xf
   42194:	fmadd	d5, d7, d0, d5
   42198:	fmul	d4, d0, d0
   4219c:	ldr	d2, [x0, x4, lsl #3]
   421a0:	fmadd	d3, d6, d0, d3
   421a4:	ldr	x0, [x0, x2, lsl #3]
   421a8:	fmadd	d0, d1, d0, d2
   421ac:	fmul	d1, d4, d4
   421b0:	add	x0, x0, x1, lsl #45
   421b4:	fmadd	d0, d5, d4, d0
   421b8:	fmadd	d3, d1, d3, d0
   421bc:	cbz	w3, 42218 <__exp2_finite@GLIBC_2.17+0xc8>
   421c0:	fmov	d0, x0
   421c4:	fmadd	d0, d3, d0, d0
   421c8:	ret
   421cc:	tbnz	w1, #31, 42298 <__exp2_finite@GLIBC_2.17+0x148>
   421d0:	cmp	w3, #0x408
   421d4:	b.ls	42208 <__exp2_finite@GLIBC_2.17+0xb8>  // b.plast
   421d8:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
   421dc:	cmp	x0, x1
   421e0:	b.eq	422bc <__exp2_finite@GLIBC_2.17+0x16c>  // b.none
   421e4:	cmp	w3, #0x7ff
   421e8:	b.eq	42298 <__exp2_finite@GLIBC_2.17+0x148>  // b.none
   421ec:	tbz	x0, #63, 422c4 <__exp2_finite@GLIBC_2.17+0x174>
   421f0:	mov	x1, #0xffffcbffffffffff    	// #-57174604644353
   421f4:	movk	x1, #0xc090, lsl #48
   421f8:	cmp	x0, x1
   421fc:	b.ls	42208 <__exp2_finite@GLIBC_2.17+0xb8>  // b.plast
   42200:	mov	w0, #0x0                   	// #0
   42204:	b	51b18 <__exp2f_finite@GLIBC_2.17+0x50b0>
   42208:	mov	x1, #0x811a000000000000    	// #-9143996093422370816
   4220c:	cmp	x1, x0, lsl #1
   42210:	csel	w3, w3, wzr, cs  // cs = hs, nlast
   42214:	b	42164 <__exp2_finite@GLIBC_2.17+0x14>
   42218:	tbz	w1, #31, 422a4 <__exp2_finite@GLIBC_2.17+0x154>
   4221c:	mov	x1, #0x3fe0000000000000    	// #4602678819172646912
   42220:	add	x0, x0, x1
   42224:	fmov	d1, x0
   42228:	fmov	d5, #1.000000000000000000e+00
   4222c:	fmul	d3, d3, d1
   42230:	fadd	d4, d1, d3
   42234:	fcmpe	d4, d5
   42238:	b.mi	4224c <__exp2_finite@GLIBC_2.17+0xfc>  // b.first
   4223c:	mov	x0, #0x10000000000000      	// #4503599627370496
   42240:	fmov	d0, x0
   42244:	fmul	d0, d4, d0
   42248:	b	51b88 <__exp2f_finite@GLIBC_2.17+0x5120>
   4224c:	fadd	d6, d4, d5
   42250:	fsub	d1, d1, d4
   42254:	movi	d0, #0x0
   42258:	fsub	d2, d5, d6
   4225c:	fadd	d1, d1, d3
   42260:	fadd	d2, d2, d4
   42264:	fadd	d1, d2, d1
   42268:	fadd	d1, d1, d6
   4226c:	fsub	d1, d1, d5
   42270:	fcmp	d1, d0
   42274:	b.eq	42284 <__exp2_finite@GLIBC_2.17+0x134>  // b.none
   42278:	mov	x0, #0x10000000000000      	// #4503599627370496
   4227c:	fmov	d0, x0
   42280:	fmul	d0, d1, d0
   42284:	mov	x0, #0x10000000000000      	// #4503599627370496
   42288:	fmov	d2, x0
   4228c:	fmov	d1, x0
   42290:	fmul	d1, d1, d2
   42294:	b	51b88 <__exp2f_finite@GLIBC_2.17+0x5120>
   42298:	fmov	d1, #1.000000000000000000e+00
   4229c:	fadd	d0, d0, d1
   422a0:	ret
   422a4:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
   422a8:	add	x0, x0, x1
   422ac:	fmov	d2, x0
   422b0:	fmadd	d0, d3, d2, d2
   422b4:	fadd	d0, d0, d0
   422b8:	b	51ba0 <__exp2f_finite@GLIBC_2.17+0x5138>
   422bc:	movi	d0, #0x0
   422c0:	ret
   422c4:	mov	w0, #0x0                   	// #0
   422c8:	b	51b38 <__exp2f_finite@GLIBC_2.17+0x50d0>
   422cc:	nop

00000000000422d0 <__acosf_finite@GLIBC_2.17>:
   422d0:	fmov	w1, s0
   422d4:	mov	w2, #0x3f800000            	// #1065353216
   422d8:	and	w0, w1, #0x7fffffff
   422dc:	cmp	w0, w2
   422e0:	b.eq	4232c <__acosf_finite@GLIBC_2.17+0x5c>  // b.none
   422e4:	b.gt	42320 <__acosf_finite@GLIBC_2.17+0x50>
   422e8:	mov	w2, #0x3effffff            	// #1056964607
   422ec:	cmp	w0, w2
   422f0:	b.gt	42358 <__acosf_finite@GLIBC_2.17+0x88>
   422f4:	mov	w1, #0x32800000            	// #847249408
   422f8:	cmp	w0, w1
   422fc:	b.gt	42438 <__acosf_finite@GLIBC_2.17+0x168>
   42300:	mov	w0, #0xfda                 	// #4058
   42304:	mov	w1, #0x2168                	// #8552
   42308:	movk	w0, #0x3fc9, lsl #16
   4230c:	movk	w1, #0x33a2, lsl #16
   42310:	fmov	s0, w0
   42314:	fmov	s1, w1
   42318:	fadd	s0, s0, s1
   4231c:	ret
   42320:	fsub	s0, s0, s0
   42324:	fdiv	s0, s0, s0
   42328:	ret
   4232c:	movi	v0.2s, #0x0
   42330:	cmp	w1, #0x0
   42334:	b.gt	4231c <__acosf_finite@GLIBC_2.17+0x4c>
   42338:	mov	w0, #0xfda                 	// #4058
   4233c:	mov	w1, #0x2168                	// #8552
   42340:	movk	w0, #0x4049, lsl #16
   42344:	movk	w1, #0x3422, lsl #16
   42348:	fmov	s0, w0
   4234c:	fmov	s1, w1
   42350:	fadd	s0, s0, s1
   42354:	ret
   42358:	tbnz	w1, #31, 4250c <__acosf_finite@GLIBC_2.17+0x23c>
   4235c:	fmov	s19, #1.000000000000000000e+00
   42360:	fmov	s2, #5.000000000000000000e-01
   42364:	mov	w0, #0xef08                	// #61192
   42368:	fsub	s0, s19, s0
   4236c:	movk	w0, #0x3811, lsl #16
   42370:	fmov	s1, w0
   42374:	mov	w0, #0x7f04                	// #32516
   42378:	movk	w0, #0x3a4f, lsl #16
   4237c:	fmov	s18, w0
   42380:	mov	w0, #0x1146                	// #4422
   42384:	fmul	s2, s0, s2
   42388:	movk	w0, #0xbd24, lsl #16
   4238c:	fmov	s16, w0
   42390:	mov	w0, #0xc62e                	// #50734
   42394:	movk	w0, #0x3d9d, lsl #16
   42398:	fmov	s5, w0
   4239c:	mov	w0, #0x3361                	// #13153
   423a0:	mvni	v0.2s, #0xf, msl #8
   423a4:	fmadd	s18, s2, s1, s18
   423a8:	movk	w0, #0xbf30, lsl #16
   423ac:	fsqrt	s20, s2
   423b0:	fmov	s17, w0
   423b4:	fmadd	s17, s2, s5, s17
   423b8:	mov	w0, #0xaa8                 	// #2728
   423bc:	movk	w0, #0x3e4e, lsl #16
   423c0:	fmov	s6, w0
   423c4:	mov	w0, #0x572d                	// #22317
   423c8:	movk	w0, #0x4001, lsl #16
   423cc:	fmov	s7, w0
   423d0:	mov	w0, #0xb090                	// #45200
   423d4:	movk	w0, #0xbea6, lsl #16
   423d8:	fmov	s4, w0
   423dc:	fmadd	s16, s18, s2, s16
   423e0:	mov	w0, #0xd139                	// #53561
   423e4:	movk	w0, #0xc019, lsl #16
   423e8:	fmov	s5, w0
   423ec:	fmadd	s7, s17, s2, s7
   423f0:	mov	w0, #0xaaab                	// #43691
   423f4:	movk	w0, #0x3e2a, lsl #16
   423f8:	fmov	s3, w0
   423fc:	and	v1.8b, v20.8b, v0.8b
   42400:	fmadd	s6, s16, s2, s6
   42404:	fmadd	s5, s7, s2, s5
   42408:	fmsub	s0, s1, s1, s2
   4240c:	fadd	s7, s20, s1
   42410:	fmadd	s4, s6, s2, s4
   42414:	fmadd	s5, s5, s2, s19
   42418:	fdiv	s0, s0, s7
   4241c:	fmadd	s3, s4, s2, s3
   42420:	fmul	s2, s3, s2
   42424:	fdiv	s2, s2, s5
   42428:	fmadd	s0, s20, s2, s0
   4242c:	fadd	s0, s1, s0
   42430:	fadd	s0, s0, s0
   42434:	ret
   42438:	fmul	s2, s0, s0
   4243c:	mov	w0, #0xef08                	// #61192
   42440:	movk	w0, #0x3811, lsl #16
   42444:	fmov	s7, w0
   42448:	mov	w0, #0x7f04                	// #32516
   4244c:	fmov	s18, #1.000000000000000000e+00
   42450:	movk	w0, #0x3a4f, lsl #16
   42454:	fmov	s4, w0
   42458:	fmadd	s4, s2, s7, s4
   4245c:	mov	w0, #0x1146                	// #4422
   42460:	movk	w0, #0xbd24, lsl #16
   42464:	fmov	s17, w0
   42468:	mov	w0, #0xc62e                	// #50734
   4246c:	movk	w0, #0x3d9d, lsl #16
   42470:	fmov	s1, w0
   42474:	mov	w0, #0x3361                	// #13153
   42478:	movk	w0, #0xbf30, lsl #16
   4247c:	fmov	s16, w0
   42480:	fmadd	s1, s2, s1, s16
   42484:	mov	w0, #0xaa8                 	// #2728
   42488:	movk	w0, #0x3e4e, lsl #16
   4248c:	fmov	s7, w0
   42490:	fmadd	s17, s4, s2, s17
   42494:	mov	w0, #0x572d                	// #22317
   42498:	movk	w0, #0x4001, lsl #16
   4249c:	fmov	s16, w0
   424a0:	mov	w0, #0xb090                	// #45200
   424a4:	movk	w0, #0xbea6, lsl #16
   424a8:	fmov	s5, w0
   424ac:	mov	w0, #0xd139                	// #53561
   424b0:	movk	w0, #0xc019, lsl #16
   424b4:	fmov	s6, w0
   424b8:	fmadd	s16, s1, s2, s16
   424bc:	mov	w0, #0xaaab                	// #43691
   424c0:	movk	w0, #0x3e2a, lsl #16
   424c4:	fmov	s3, w0
   424c8:	fmadd	s7, s17, s2, s7
   424cc:	mov	w0, #0x2168                	// #8552
   424d0:	movk	w0, #0x33a2, lsl #16
   424d4:	fmov	s4, w0
   424d8:	mov	w0, #0xfda                 	// #4058
   424dc:	movk	w0, #0x3fc9, lsl #16
   424e0:	fmov	s1, w0
   424e4:	fmadd	s6, s16, s2, s6
   424e8:	fmadd	s5, s7, s2, s5
   424ec:	fmadd	s6, s6, s2, s18
   424f0:	fmadd	s3, s5, s2, s3
   424f4:	fmul	s2, s3, s2
   424f8:	fdiv	s2, s2, s6
   424fc:	fmsub	s2, s0, s2, s4
   42500:	fsub	s0, s0, s2
   42504:	fsub	s0, s1, s0
   42508:	ret
   4250c:	fmov	s20, #1.000000000000000000e+00
   42510:	fmov	s1, #5.000000000000000000e-01
   42514:	mov	w0, #0xef08                	// #61192
   42518:	mov	w1, #0x2168                	// #8552
   4251c:	fadd	s0, s0, s20
   42520:	movk	w0, #0x3811, lsl #16
   42524:	fmov	s2, w0
   42528:	mov	w0, #0x7f04                	// #32516
   4252c:	movk	w0, #0x3a4f, lsl #16
   42530:	fmov	s18, w0
   42534:	mov	w0, #0x1146                	// #4422
   42538:	movk	w1, #0xb3a2, lsl #16
   4253c:	fmul	s1, s0, s1
   42540:	movk	w0, #0xbd24, lsl #16
   42544:	fmov	s16, w0
   42548:	mov	w0, #0xc62e                	// #50734
   4254c:	movk	w0, #0x3d9d, lsl #16
   42550:	fmov	s5, w0
   42554:	mov	w0, #0x3361                	// #13153
   42558:	fmov	s3, w1
   4255c:	fmadd	s18, s1, s2, s18
   42560:	movk	w0, #0xbf30, lsl #16
   42564:	fmov	s17, w0
   42568:	mov	w0, #0xaa8                 	// #2728
   4256c:	fmadd	s17, s1, s5, s17
   42570:	movk	w0, #0x3e4e, lsl #16
   42574:	fmov	s6, w0
   42578:	mov	w0, #0x572d                	// #22317
   4257c:	movk	w0, #0x4001, lsl #16
   42580:	fmov	s7, w0
   42584:	mov	w0, #0xb090                	// #45200
   42588:	fmov	s21, #2.000000000000000000e+00
   4258c:	fsqrt	s19, s1
   42590:	movk	w0, #0xbea6, lsl #16
   42594:	fmov	s4, w0
   42598:	mov	w0, #0xd139                	// #53561
   4259c:	fmadd	s16, s18, s1, s16
   425a0:	movk	w0, #0xc019, lsl #16
   425a4:	fmov	s5, w0
   425a8:	mov	w0, #0xaaab                	// #43691
   425ac:	fmadd	s7, s17, s1, s7
   425b0:	movk	w0, #0x3e2a, lsl #16
   425b4:	fmov	s2, w0
   425b8:	mov	w0, #0xfda                 	// #4058
   425bc:	movk	w0, #0x4049, lsl #16
   425c0:	fmov	s0, w0
   425c4:	fmadd	s6, s16, s1, s6
   425c8:	fmadd	s5, s7, s1, s5
   425cc:	fmadd	s4, s6, s1, s4
   425d0:	fmadd	s5, s5, s1, s20
   425d4:	fmadd	s2, s4, s1, s2
   425d8:	fmul	s1, s2, s1
   425dc:	fdiv	s1, s1, s5
   425e0:	fmadd	s1, s19, s1, s3
   425e4:	fadd	s1, s19, s1
   425e8:	fmsub	s0, s1, s21, s0
   425ec:	ret

00000000000425f0 <__acoshf_finite@GLIBC_2.17>:
   425f0:	fmov	w0, s0
   425f4:	mov	w1, #0x3f7fffff            	// #1065353215
   425f8:	fmov	s1, s0
   425fc:	cmp	w0, w1
   42600:	b.le	42660 <__acoshf_finite@GLIBC_2.17+0x70>
   42604:	mov	w1, #0x4d7fffff            	// #1300234239
   42608:	cmp	w0, w1
   4260c:	b.le	42624 <__acoshf_finite@GLIBC_2.17+0x34>
   42610:	mov	w1, #0x7f7fffff            	// #2139095039
   42614:	cmp	w0, w1
   42618:	b.le	4268c <__acoshf_finite@GLIBC_2.17+0x9c>
   4261c:	fadd	s0, s0, s0
   42620:	ret
   42624:	mov	w1, #0x3f800000            	// #1065353216
   42628:	cmp	w0, w1
   4262c:	b.eq	426b0 <__acoshf_finite@GLIBC_2.17+0xc0>  // b.none
   42630:	mov	w1, #0x40000000            	// #1073741824
   42634:	cmp	w0, w1
   42638:	b.le	4266c <__acoshf_finite@GLIBC_2.17+0x7c>
   4263c:	fmov	s2, #-1.000000000000000000e+00
   42640:	fmov	s3, #1.000000000000000000e+00
   42644:	fmadd	s2, s0, s0, s2
   42648:	fmov	s0, #2.000000000000000000e+00
   4264c:	fsqrt	s2, s2
   42650:	fadd	s2, s2, s1
   42654:	fdiv	s2, s3, s2
   42658:	fnmsub	s0, s1, s0, s2
   4265c:	b	45298 <__logf_finite@GLIBC_2.17>
   42660:	fsub	s0, s0, s0
   42664:	fdiv	s0, s0, s0
   42668:	ret
   4266c:	fmov	s0, #1.000000000000000000e+00
   42670:	fmov	s2, #2.000000000000000000e+00
   42674:	fsub	s1, s1, s0
   42678:	fmul	s0, s1, s1
   4267c:	fmadd	s0, s1, s2, s0
   42680:	fsqrt	s0, s0
   42684:	fadd	s0, s0, s1
   42688:	b	47678 <floorf@@GLIBC_2.17+0x8>
   4268c:	stp	x29, x30, [sp, #-16]!
   42690:	mov	x29, sp
   42694:	bl	45298 <__logf_finite@GLIBC_2.17>
   42698:	mov	w0, #0x7218                	// #29208
   4269c:	movk	w0, #0x3f31, lsl #16
   426a0:	fmov	s1, w0
   426a4:	ldp	x29, x30, [sp], #16
   426a8:	fadd	s0, s0, s1
   426ac:	ret
   426b0:	movi	v0.2s, #0x0
   426b4:	ret

00000000000426b8 <__asinf_finite@GLIBC_2.17>:
   426b8:	fmov	w2, s0
   426bc:	mov	w1, #0x3f800000            	// #1065353216
   426c0:	fmov	s1, s0
   426c4:	and	w0, w2, #0x7fffffff
   426c8:	cmp	w0, w1
   426cc:	b.eq	42894 <__asinf_finite@GLIBC_2.17+0x1dc>  // b.none
   426d0:	b.gt	42888 <__asinf_finite@GLIBC_2.17+0x1d0>
   426d4:	mov	w1, #0x3effffff            	// #1056964607
   426d8:	cmp	w0, w1
   426dc:	b.gt	427d8 <__asinf_finite@GLIBC_2.17+0x120>
   426e0:	mov	w1, #0x31ffffff            	// #838860799
   426e4:	cmp	w0, w1
   426e8:	b.gt	428b8 <__asinf_finite@GLIBC_2.17+0x200>
   426ec:	fabs	s4, s0
   426f0:	movi	v0.2s, #0x80, lsl #16
   426f4:	fcmpe	s4, s0
   426f8:	b.pl	42700 <__asinf_finite@GLIBC_2.17+0x48>  // b.nfrst
   426fc:	fmul	s0, s1, s1
   42700:	mov	w0, #0xf2ca                	// #62154
   42704:	fmov	s3, #1.000000000000000000e+00
   42708:	movk	w0, #0x7149, lsl #16
   4270c:	fmov	s2, w0
   42710:	fmov	s0, s1
   42714:	fadd	s2, s1, s2
   42718:	fcmpe	s2, s3
   4271c:	b.gt	427d4 <__asinf_finite@GLIBC_2.17+0x11c>
   42720:	fsub	s1, s3, s4
   42724:	fmov	s2, #5.000000000000000000e-01
   42728:	mov	w0, #0xb694                	// #46740
   4272c:	movk	w0, #0x3d2c, lsl #16
   42730:	fmov	s0, w0
   42734:	mov	w0, #0x141e                	// #5150
   42738:	fmul	s1, s1, s2
   4273c:	movk	w0, #0x3cc6, lsl #16
   42740:	fmov	s5, w0
   42744:	mov	w0, #0x3f25                	// #16165
   42748:	movk	w0, #0x3d3a, lsl #16
   4274c:	fmov	s4, w0
   42750:	mov	w0, #0x80f2                	// #33010
   42754:	fmadd	s5, s1, s0, s5
   42758:	movk	w0, #0x3d99, lsl #16
   4275c:	fsqrt	s0, s1
   42760:	fmov	s2, w0
   42764:	mov	w0, #0xaae4                	// #43748
   42768:	movk	w0, #0x3e2a, lsl #16
   4276c:	fmov	s3, w0
   42770:	fmadd	s4, s5, s1, s4
   42774:	fmadd	s2, s4, s1, s2
   42778:	fmadd	s3, s2, s1, s3
   4277c:	fmul	s3, s3, s1
   42780:	mvni	v2.2s, #0xf, msl #8
   42784:	fadd	s7, s0, s0
   42788:	fmov	s6, #2.000000000000000000e+00
   4278c:	mov	w0, #0xbd2e                	// #48430
   42790:	movk	w0, #0xb33b, lsl #16
   42794:	fmov	s4, w0
   42798:	mov	w0, #0xfdb                 	// #4059
   4279c:	cmp	w2, #0x0
   427a0:	and	v5.8b, v0.8b, v2.8b
   427a4:	movk	w0, #0x3f49, lsl #16
   427a8:	fmsub	s2, s5, s5, s1
   427ac:	fadd	s0, s5, s0
   427b0:	fmov	s1, w0
   427b4:	fmsub	s5, s5, s6, s1
   427b8:	fdiv	s2, s2, s0
   427bc:	fmsub	s0, s2, s6, s4
   427c0:	fnmsub	s0, s7, s3, s0
   427c4:	fsub	s0, s0, s5
   427c8:	fsub	s0, s1, s0
   427cc:	fneg	s1, s0
   427d0:	fcsel	s0, s1, s0, le
   427d4:	ret
   427d8:	fabs	s1, s0
   427dc:	fmov	s0, #1.000000000000000000e+00
   427e0:	fmov	s7, #5.000000000000000000e-01
   427e4:	mov	w1, #0xb694                	// #46740
   427e8:	movk	w1, #0x3d2c, lsl #16
   427ec:	fmov	s6, w1
   427f0:	mov	w1, #0x141e                	// #5150
   427f4:	fsub	s1, s0, s1
   427f8:	movk	w1, #0x3cc6, lsl #16
   427fc:	fmov	s5, w1
   42800:	mov	w1, #0x3f25                	// #16165
   42804:	movk	w1, #0x3d3a, lsl #16
   42808:	fmov	s4, w1
   4280c:	mov	w1, #0x80f2                	// #33010
   42810:	fmul	s1, s1, s7
   42814:	movk	w1, #0x3d99, lsl #16
   42818:	fmov	s2, w1
   4281c:	mov	w1, #0xaae4                	// #43748
   42820:	movk	w1, #0x3e2a, lsl #16
   42824:	fmov	s3, w1
   42828:	mov	w1, #0x9999                	// #39321
   4282c:	fmadd	s5, s1, s6, s5
   42830:	movk	w1, #0x3f79, lsl #16
   42834:	fsqrt	s0, s1
   42838:	cmp	w0, w1
   4283c:	fmadd	s4, s5, s1, s4
   42840:	fmadd	s2, s4, s1, s2
   42844:	fmadd	s3, s2, s1, s3
   42848:	fmul	s3, s3, s1
   4284c:	b.le	42780 <__asinf_finite@GLIBC_2.17+0xc8>
   42850:	fmadd	s0, s3, s0, s0
   42854:	fmov	s2, #2.000000000000000000e+00
   42858:	mov	w0, #0xbd2e                	// #48430
   4285c:	cmp	w2, #0x0
   42860:	movk	w0, #0x333b, lsl #16
   42864:	fmov	s3, w0
   42868:	mov	w0, #0xfdb                 	// #4059
   4286c:	movk	w0, #0x3fc9, lsl #16
   42870:	fmov	s1, w0
   42874:	fmadd	s0, s0, s2, s3
   42878:	fsub	s0, s1, s0
   4287c:	fneg	s1, s0
   42880:	fcsel	s0, s1, s0, le
   42884:	ret
   42888:	fsub	s1, s0, s0
   4288c:	fdiv	s0, s1, s1
   42890:	ret
   42894:	mov	w0, #0xbd2e                	// #48430
   42898:	movk	w0, #0xb33b, lsl #16
   4289c:	fmov	s0, w0
   428a0:	mov	w0, #0xfdb                 	// #4059
   428a4:	movk	w0, #0x3fc9, lsl #16
   428a8:	fmov	s2, w0
   428ac:	fmul	s0, s1, s0
   428b0:	fmadd	s0, s1, s2, s0
   428b4:	ret
   428b8:	fmul	s2, s0, s0
   428bc:	mov	w0, #0xb694                	// #46740
   428c0:	movk	w0, #0x3d2c, lsl #16
   428c4:	fmov	s3, w0
   428c8:	mov	w0, #0x141e                	// #5150
   428cc:	movk	w0, #0x3cc6, lsl #16
   428d0:	fmov	s5, w0
   428d4:	fmadd	s5, s2, s3, s5
   428d8:	mov	w0, #0x3f25                	// #16165
   428dc:	movk	w0, #0x3d3a, lsl #16
   428e0:	fmov	s4, w0
   428e4:	mov	w0, #0x80f2                	// #33010
   428e8:	movk	w0, #0x3d99, lsl #16
   428ec:	fmov	s3, w0
   428f0:	mov	w0, #0xaae4                	// #43748
   428f4:	movk	w0, #0x3e2a, lsl #16
   428f8:	fmov	s0, w0
   428fc:	fmadd	s4, s5, s2, s4
   42900:	fmadd	s3, s4, s2, s3
   42904:	fmadd	s0, s3, s2, s0
   42908:	fmul	s0, s0, s2
   4290c:	fmadd	s0, s1, s0, s1
   42910:	ret
   42914:	nop

0000000000042918 <__atan2f_finite@GLIBC_2.17>:
   42918:	fmov	w2, s1
   4291c:	fmov	w3, s0
   42920:	mov	w1, #0x7f800000            	// #2139095040
   42924:	fmov	s2, s0
   42928:	and	w4, w2, #0x7fffffff
   4292c:	and	w0, w3, #0x7fffffff
   42930:	cmp	w4, w1
   42934:	ccmp	w0, w1, #0x0, le
   42938:	b.gt	42a14 <__atan2f_finite@GLIBC_2.17+0xfc>
   4293c:	mov	w5, #0x3f800000            	// #1065353216
   42940:	cmp	w2, w5
   42944:	b.eq	42a54 <__atan2f_finite@GLIBC_2.17+0x13c>  // b.none
   42948:	stp	x29, x30, [sp, #-32]!
   4294c:	mov	x29, sp
   42950:	str	x19, [sp, #16]
   42954:	asr	w19, w2, #30
   42958:	and	w19, w19, #0x2
   4295c:	orr	w19, w19, w3, lsr #31
   42960:	cbnz	w0, 4299c <__atan2f_finite@GLIBC_2.17+0x84>
   42964:	cmp	w19, #0x2
   42968:	b.eq	42a48 <__atan2f_finite@GLIBC_2.17+0x130>  // b.none
   4296c:	cmp	w19, #0x3
   42970:	b.ne	42990 <__atan2f_finite@GLIBC_2.17+0x78>  // b.any
   42974:	mov	w0, #0xfdb                 	// #4059
   42978:	movk	w0, #0xc049, lsl #16
   4297c:	mov	w1, #0x4260                	// #16992
   42980:	fmov	s0, w0
   42984:	movk	w1, #0xda2, lsl #16
   42988:	fmov	s1, w1
   4298c:	fsub	s0, s0, s1
   42990:	ldr	x19, [sp, #16]
   42994:	ldp	x29, x30, [sp], #32
   42998:	ret
   4299c:	cbz	w4, 42a1c <__atan2f_finite@GLIBC_2.17+0x104>
   429a0:	cmp	w4, w1
   429a4:	b.eq	42a58 <__atan2f_finite@GLIBC_2.17+0x140>  // b.none
   429a8:	cmp	w0, w1
   429ac:	b.eq	42a1c <__atan2f_finite@GLIBC_2.17+0x104>  // b.none
   429b0:	sub	w0, w0, w4
   429b4:	asr	w0, w0, #23
   429b8:	cmp	w0, #0x3c
   429bc:	b.le	42a8c <__atan2f_finite@GLIBC_2.17+0x174>
   429c0:	mov	w0, #0xfdb                 	// #4059
   429c4:	mov	w1, #0xbd2e                	// #48430
   429c8:	movk	w0, #0x3fc9, lsl #16
   429cc:	movk	w1, #0x333b, lsl #16
   429d0:	fmov	s0, w0
   429d4:	fmov	s1, w1
   429d8:	fsub	s0, s0, s1
   429dc:	cmp	w19, #0x1
   429e0:	b.eq	42af8 <__atan2f_finite@GLIBC_2.17+0x1e0>  // b.none
   429e4:	cmp	w19, #0x2
   429e8:	b.eq	42ad4 <__atan2f_finite@GLIBC_2.17+0x1bc>  // b.none
   429ec:	cbz	w19, 42990 <__atan2f_finite@GLIBC_2.17+0x78>
   429f0:	mov	w0, #0xbd2e                	// #48430
   429f4:	movk	w0, #0x33bb, lsl #16
   429f8:	fmov	s2, w0
   429fc:	mov	w0, #0xfdb                 	// #4059
   42a00:	fadd	s0, s0, s2
   42a04:	movk	w0, #0x4049, lsl #16
   42a08:	fmov	s1, w0
   42a0c:	fsub	s0, s0, s1
   42a10:	b	42990 <__atan2f_finite@GLIBC_2.17+0x78>
   42a14:	fadd	s0, s1, s0
   42a18:	ret
   42a1c:	mov	w0, #0xfdb                 	// #4059
   42a20:	tbnz	w3, #31, 42a84 <__atan2f_finite@GLIBC_2.17+0x16c>
   42a24:	movk	w0, #0x3fc9, lsl #16
   42a28:	mov	w1, #0x4260                	// #16992
   42a2c:	fmov	s0, w0
   42a30:	movk	w1, #0xda2, lsl #16
   42a34:	fmov	s1, w1
   42a38:	ldr	x19, [sp, #16]
   42a3c:	fadd	s0, s0, s1
   42a40:	ldp	x29, x30, [sp], #32
   42a44:	ret
   42a48:	mov	w0, #0xfdb                 	// #4059
   42a4c:	movk	w0, #0x4049, lsl #16
   42a50:	b	42a28 <__atan2f_finite@GLIBC_2.17+0x110>
   42a54:	b	46358 <atanf@@GLIBC_2.17>
   42a58:	cmp	w0, w4
   42a5c:	b.eq	42ab0 <__atan2f_finite@GLIBC_2.17+0x198>  // b.none
   42a60:	cmp	w19, #0x2
   42a64:	b.eq	42a48 <__atan2f_finite@GLIBC_2.17+0x130>  // b.none
   42a68:	cmp	w19, #0x3
   42a6c:	b.eq	42974 <__atan2f_finite@GLIBC_2.17+0x5c>  // b.none
   42a70:	movi	v0.2s, #0x0
   42a74:	movi	v1.2s, #0x80, lsl #24
   42a78:	cmp	w19, #0x1
   42a7c:	fcsel	s0, s0, s1, ne  // ne = any
   42a80:	b	42990 <__atan2f_finite@GLIBC_2.17+0x78>
   42a84:	movk	w0, #0xbfc9, lsl #16
   42a88:	b	4297c <__atan2f_finite@GLIBC_2.17+0x64>
   42a8c:	cmp	w2, #0x0
   42a90:	mov	w1, #0xffffffc4            	// #-60
   42a94:	movi	v0.2s, #0x0
   42a98:	ccmp	w0, w1, #0x0, lt  // lt = tstop
   42a9c:	b.lt	429dc <__atan2f_finite@GLIBC_2.17+0xc4>  // b.tstop
   42aa0:	fdiv	s0, s2, s1
   42aa4:	fabs	s0, s0
   42aa8:	bl	46358 <atanf@@GLIBC_2.17>
   42aac:	b	429dc <__atan2f_finite@GLIBC_2.17+0xc4>
   42ab0:	cmp	w19, #0x2
   42ab4:	mov	w0, #0xfdb                 	// #4059
   42ab8:	b.eq	42b30 <__atan2f_finite@GLIBC_2.17+0x218>  // b.none
   42abc:	cmp	w19, #0x3
   42ac0:	b.eq	42b10 <__atan2f_finite@GLIBC_2.17+0x1f8>  // b.none
   42ac4:	cmp	w19, #0x1
   42ac8:	b.eq	42b08 <__atan2f_finite@GLIBC_2.17+0x1f0>  // b.none
   42acc:	movk	w0, #0x3f49, lsl #16
   42ad0:	b	42a28 <__atan2f_finite@GLIBC_2.17+0x110>
   42ad4:	mov	w0, #0xbd2e                	// #48430
   42ad8:	movk	w0, #0x33bb, lsl #16
   42adc:	fmov	s2, w0
   42ae0:	mov	w0, #0xfdb                 	// #4059
   42ae4:	fadd	s0, s0, s2
   42ae8:	movk	w0, #0x4049, lsl #16
   42aec:	fmov	s1, w0
   42af0:	fsub	s0, s1, s0
   42af4:	b	42990 <__atan2f_finite@GLIBC_2.17+0x78>
   42af8:	fmov	w0, s0
   42afc:	eor	w0, w0, #0x80000000
   42b00:	fmov	s0, w0
   42b04:	b	42990 <__atan2f_finite@GLIBC_2.17+0x78>
   42b08:	movk	w0, #0xbf49, lsl #16
   42b0c:	b	4297c <__atan2f_finite@GLIBC_2.17+0x64>
   42b10:	movk	w0, #0x3f49, lsl #16
   42b14:	fmov	s2, #-3.000000000000000000e+00
   42b18:	fmov	s1, w0
   42b1c:	mov	w0, #0x4260                	// #16992
   42b20:	movk	w0, #0x8da2, lsl #16
   42b24:	fmov	s0, w0
   42b28:	fmadd	s0, s2, s1, s0
   42b2c:	b	42990 <__atan2f_finite@GLIBC_2.17+0x78>
   42b30:	movk	w0, #0x3f49, lsl #16
   42b34:	fmov	s2, #3.000000000000000000e+00
   42b38:	fmov	s1, w0
   42b3c:	mov	w0, #0x4260                	// #16992
   42b40:	movk	w0, #0xda2, lsl #16
   42b44:	fmov	s0, w0
   42b48:	fmadd	s0, s2, s1, s0
   42b4c:	b	42990 <__atan2f_finite@GLIBC_2.17+0x78>

0000000000042b50 <__atanhf_finite@GLIBC_2.17>:
   42b50:	stp	x29, x30, [sp, #-32]!
   42b54:	fabs	s1, s0
   42b58:	mov	x29, sp
   42b5c:	stp	d8, d9, [sp, #16]
   42b60:	fmov	s9, #5.000000000000000000e-01
   42b64:	fmov	s8, s0
   42b68:	fcmp	s1, s9
   42b6c:	b.pl	42ba4 <__atanhf_finite@GLIBC_2.17+0x54>  // b.nfrst
   42b70:	mov	w0, #0x31800000            	// #830472192
   42b74:	fmov	s0, w0
   42b78:	fcmpe	s1, s0
   42b7c:	b.mi	42bd8 <__atanhf_finite@GLIBC_2.17+0x88>  // b.first
   42b80:	fadd	s0, s1, s1
   42b84:	fmov	s2, #1.000000000000000000e+00
   42b88:	fsub	s2, s2, s1
   42b8c:	fmul	s1, s1, s0
   42b90:	fdiv	s1, s1, s2
   42b94:	fadd	s0, s1, s0
   42b98:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   42b9c:	fmul	s0, s0, s9
   42ba0:	b	42bc4 <__atanhf_finite@GLIBC_2.17+0x74>
   42ba4:	fmov	s0, #1.000000000000000000e+00
   42ba8:	fcmp	s1, s0
   42bac:	b.pl	42c00 <__atanhf_finite@GLIBC_2.17+0xb0>  // b.nfrst
   42bb0:	fsub	s0, s0, s1
   42bb4:	fadd	s1, s1, s1
   42bb8:	fdiv	s0, s1, s0
   42bbc:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   42bc0:	fmul	s0, s0, s9
   42bc4:	movi	v1.2s, #0x80, lsl #24
   42bc8:	bit	v0.8b, v8.8b, v1.8b
   42bcc:	ldp	d8, d9, [sp, #16]
   42bd0:	ldp	x29, x30, [sp], #32
   42bd4:	ret
   42bd8:	mov	w0, #0xf2ca                	// #62154
   42bdc:	movk	w0, #0x7149, lsl #16
   42be0:	fmov	s0, w0
   42be4:	fadd	s0, s8, s0
   42be8:	movi	v0.2s, #0x80, lsl #16
   42bec:	fcmpe	s1, s0
   42bf0:	b.pl	42c1c <__atanhf_finite@GLIBC_2.17+0xcc>  // b.nfrst
   42bf4:	fmul	s0, s8, s8
   42bf8:	fmov	s0, s8
   42bfc:	b	42bcc <__atanhf_finite@GLIBC_2.17+0x7c>
   42c00:	b.le	42c10 <__atanhf_finite@GLIBC_2.17+0xc0>
   42c04:	fsub	s8, s8, s8
   42c08:	fdiv	s0, s8, s8
   42c0c:	b	42bcc <__atanhf_finite@GLIBC_2.17+0x7c>
   42c10:	movi	v0.2s, #0x0
   42c14:	fdiv	s0, s8, s0
   42c18:	b	42bcc <__atanhf_finite@GLIBC_2.17+0x7c>
   42c1c:	fmov	s0, s8
   42c20:	b	42bcc <__atanhf_finite@GLIBC_2.17+0x7c>
   42c24:	nop

0000000000042c28 <__coshf_finite@GLIBC_2.17>:
   42c28:	fmov	w0, s0
   42c2c:	stp	x29, x30, [sp, #-32]!
   42c30:	mov	w1, #0x41afffff            	// #1102053375
   42c34:	mov	x29, sp
   42c38:	str	d8, [sp, #16]
   42c3c:	and	w0, w0, #0x7fffffff
   42c40:	cmp	w0, w1
   42c44:	b.gt	42c94 <__coshf_finite@GLIBC_2.17+0x6c>
   42c48:	mov	w1, #0x7217                	// #29207
   42c4c:	movk	w1, #0x3eb1, lsl #16
   42c50:	cmp	w0, w1
   42c54:	b.gt	42ce0 <__coshf_finite@GLIBC_2.17+0xb8>
   42c58:	mov	w1, #0x23ffffff            	// #603979775
   42c5c:	fmov	s8, #1.000000000000000000e+00
   42c60:	cmp	w0, w1
   42c64:	b.le	42cd0 <__coshf_finite@GLIBC_2.17+0xa8>
   42c68:	fabs	s0, s0
   42c6c:	bl	47340 <expm1f@@GLIBC_2.17>
   42c70:	fadd	s1, s0, s8
   42c74:	fmul	s0, s0, s0
   42c78:	fadd	s1, s1, s1
   42c7c:	fdiv	s0, s0, s1
   42c80:	fadd	s8, s0, s8
   42c84:	fmov	s0, s8
   42c88:	ldr	d8, [sp, #16]
   42c8c:	ldp	x29, x30, [sp], #32
   42c90:	ret
   42c94:	mov	w1, #0x717f                	// #29055
   42c98:	movk	w1, #0x42b1, lsl #16
   42c9c:	cmp	w0, w1
   42ca0:	b.le	42d04 <__coshf_finite@GLIBC_2.17+0xdc>
   42ca4:	mov	w1, #0xd4fc                	// #54524
   42ca8:	movk	w1, #0x42b2, lsl #16
   42cac:	cmp	w0, w1
   42cb0:	b.le	42d38 <__coshf_finite@GLIBC_2.17+0x110>
   42cb4:	mov	w1, #0x7f7fffff            	// #2139095039
   42cb8:	cmp	w0, w1
   42cbc:	b.gt	42d24 <__coshf_finite@GLIBC_2.17+0xfc>
   42cc0:	mov	w0, #0xf2ca                	// #62154
   42cc4:	movk	w0, #0x7149, lsl #16
   42cc8:	fmov	s8, w0
   42ccc:	fmul	s8, s8, s8
   42cd0:	fmov	s0, s8
   42cd4:	ldr	d8, [sp, #16]
   42cd8:	ldp	x29, x30, [sp], #32
   42cdc:	ret
   42ce0:	fabs	s0, s0
   42ce4:	bl	42d58 <__expf_finite@GLIBC_2.17>
   42ce8:	fmov	s1, #5.000000000000000000e-01
   42cec:	fdiv	s8, s1, s0
   42cf0:	fmadd	s8, s0, s1, s8
   42cf4:	fmov	s0, s8
   42cf8:	ldr	d8, [sp, #16]
   42cfc:	ldp	x29, x30, [sp], #32
   42d00:	ret
   42d04:	fabs	s0, s0
   42d08:	bl	42d58 <__expf_finite@GLIBC_2.17>
   42d0c:	fmov	s8, #5.000000000000000000e-01
   42d10:	fmul	s8, s0, s8
   42d14:	fmov	s0, s8
   42d18:	ldr	d8, [sp, #16]
   42d1c:	ldp	x29, x30, [sp], #32
   42d20:	ret
   42d24:	fmul	s8, s0, s0
   42d28:	fmov	s0, s8
   42d2c:	ldr	d8, [sp, #16]
   42d30:	ldp	x29, x30, [sp], #32
   42d34:	ret
   42d38:	fabs	s0, s0
   42d3c:	fmov	s8, #5.000000000000000000e-01
   42d40:	fmul	s0, s0, s8
   42d44:	bl	42d58 <__expf_finite@GLIBC_2.17>
   42d48:	fmul	s8, s0, s8
   42d4c:	fmul	s8, s8, s0
   42d50:	b	42cd0 <__coshf_finite@GLIBC_2.17+0xa8>
   42d54:	nop

0000000000042d58 <__expf_finite@GLIBC_2.17>:
   42d58:	fmov	w0, s0
   42d5c:	fcvt	d2, s0
   42d60:	ubfx	x1, x0, #20, #11
   42d64:	cmp	w1, #0x42a
   42d68:	b.hi	42dc0 <__expf_finite@GLIBC_2.17+0x68>  // b.pmore
   42d6c:	adrp	x0, 8b000 <f64xsubf128@@GLIBC_2.28+0x37280>
   42d70:	add	x0, x0, #0xfa0
   42d74:	fmov	d1, #1.000000000000000000e+00
   42d78:	ldp	d0, d4, [x0, #296]
   42d7c:	ldr	d3, [x0, #312]
   42d80:	fmul	d2, d2, d0
   42d84:	ldr	d0, [x0, #320]
   42d88:	frinta	d5, d2
   42d8c:	fcvtas	x1, d2
   42d90:	fsub	d2, d2, d5
   42d94:	and	x2, x1, #0x1f
   42d98:	fmadd	d3, d4, d2, d3
   42d9c:	fmadd	d0, d0, d2, d1
   42da0:	fmul	d2, d2, d2
   42da4:	ldr	x0, [x0, x2, lsl #3]
   42da8:	add	x1, x0, x1, lsl #47
   42dac:	fmov	d1, x1
   42db0:	fmadd	d0, d3, d2, d0
   42db4:	fmul	d0, d0, d1
   42db8:	fcvt	s0, d0
   42dbc:	ret
   42dc0:	cmn	w0, #0x800, lsl #12
   42dc4:	b.eq	42e24 <__expf_finite@GLIBC_2.17+0xcc>  // b.none
   42dc8:	cmp	w1, #0x7f7
   42dcc:	b.hi	42e1c <__expf_finite@GLIBC_2.17+0xc4>  // b.pmore
   42dd0:	mov	w0, #0x7217                	// #29207
   42dd4:	movk	w0, #0x42b1, lsl #16
   42dd8:	fmov	s1, w0
   42ddc:	fcmpe	s0, s1
   42de0:	b.gt	42e14 <__expf_finite@GLIBC_2.17+0xbc>
   42de4:	mov	w0, #0xf1b4                	// #61876
   42de8:	movk	w0, #0xc2cf, lsl #16
   42dec:	fmov	s1, w0
   42df0:	fcmpe	s0, s1
   42df4:	b.mi	42e2c <__expf_finite@GLIBC_2.17+0xd4>  // b.first
   42df8:	mov	w0, #0x8ecf                	// #36559
   42dfc:	movk	w0, #0xc2ce, lsl #16
   42e00:	fmov	s1, w0
   42e04:	fcmpe	s0, s1
   42e08:	b.pl	42d6c <__expf_finite@GLIBC_2.17+0x14>  // b.nfrst
   42e0c:	mov	w0, #0x0                   	// #0
   42e10:	b	51bf8 <__exp2f_finite@GLIBC_2.17+0x5190>
   42e14:	mov	w0, #0x0                   	// #0
   42e18:	b	51c08 <__exp2f_finite@GLIBC_2.17+0x51a0>
   42e1c:	fadd	s0, s0, s0
   42e20:	ret
   42e24:	movi	v0.2s, #0x0
   42e28:	ret
   42e2c:	mov	w0, #0x0                   	// #0
   42e30:	b	51bf0 <__exp2f_finite@GLIBC_2.17+0x5188>
   42e34:	nop

0000000000042e38 <__fmodf_finite@GLIBC_2.17>:
   42e38:	fmov	w7, s1
   42e3c:	fmov	w0, s0
   42e40:	mov	w3, #0x7f800000            	// #2139095040
   42e44:	mov	w2, #0x7f7fffff            	// #2139095039
   42e48:	ands	w5, w7, #0x7fffffff
   42e4c:	and	w1, w0, #0x7fffffff
   42e50:	ccmp	w5, w3, #0x0, ne  // ne = any
   42e54:	ccmp	w1, w2, #0x0, le
   42e58:	b.le	42e68 <__fmodf_finite@GLIBC_2.17+0x30>
   42e5c:	fmul	s0, s0, s1
   42e60:	fdiv	s0, s0, s0
   42e64:	ret
   42e68:	cmp	w1, w5
   42e6c:	b.lt	42e64 <__fmodf_finite@GLIBC_2.17+0x2c>  // b.tstop
   42e70:	and	w3, w0, #0x80000000
   42e74:	b.eq	42f84 <__fmodf_finite@GLIBC_2.17+0x14c>  // b.none
   42e78:	tst	w0, #0x7f800000
   42e7c:	b.eq	42f50 <__fmodf_finite@GLIBC_2.17+0x118>  // b.none
   42e80:	asr	w2, w1, #23
   42e84:	sub	w2, w2, #0x7f
   42e88:	tst	w7, #0x7f800000
   42e8c:	b.ne	42f78 <__fmodf_finite@GLIBC_2.17+0x140>  // b.any
   42e90:	lsl	w4, w5, #8
   42e94:	mov	w6, #0xffffff82            	// #-126
   42e98:	tbnz	w5, #23, 42eac <__fmodf_finite@GLIBC_2.17+0x74>
   42e9c:	nop
   42ea0:	sub	w6, w6, #0x1
   42ea4:	lsl	w4, w4, #1
   42ea8:	tbz	w4, #31, 42ea0 <__fmodf_finite@GLIBC_2.17+0x68>
   42eac:	mov	w4, #0xffffff82            	// #-126
   42eb0:	and	w0, w0, #0x7fffff
   42eb4:	sub	w9, w4, w2
   42eb8:	cmp	w2, w4
   42ebc:	orr	w8, w0, #0x800000
   42ec0:	and	w7, w7, #0x7fffff
   42ec4:	sub	w4, w4, w6
   42ec8:	lsl	w0, w1, w9
   42ecc:	orr	w7, w7, #0x800000
   42ed0:	csel	w0, w0, w8, lt  // lt = tstop
   42ed4:	cmn	w6, #0x7e
   42ed8:	lsl	w4, w5, w4
   42edc:	csel	w4, w4, w7, lt  // lt = tstop
   42ee0:	subs	w1, w2, w6
   42ee4:	b.eq	42f04 <__fmodf_finite@GLIBC_2.17+0xcc>  // b.none
   42ee8:	subs	w2, w0, w4
   42eec:	lsl	w0, w0, #1
   42ef0:	b.mi	42efc <__fmodf_finite@GLIBC_2.17+0xc4>  // b.first
   42ef4:	lsl	w0, w2, #1
   42ef8:	b.eq	42f84 <__fmodf_finite@GLIBC_2.17+0x14c>  // b.none
   42efc:	subs	w1, w1, #0x1
   42f00:	b.ne	42ee8 <__fmodf_finite@GLIBC_2.17+0xb0>  // b.any
   42f04:	subs	w4, w0, w4
   42f08:	csel	w0, w0, w4, mi  // mi = first
   42f0c:	cbz	w0, 42f84 <__fmodf_finite@GLIBC_2.17+0x14c>
   42f10:	mov	w1, #0x7fffff              	// #8388607
   42f14:	cmp	w0, w1
   42f18:	b.gt	42f30 <__fmodf_finite@GLIBC_2.17+0xf8>
   42f1c:	nop
   42f20:	lsl	w0, w0, #1
   42f24:	sub	w6, w6, #0x1
   42f28:	cmp	w0, w1
   42f2c:	b.le	42f20 <__fmodf_finite@GLIBC_2.17+0xe8>
   42f30:	cmn	w6, #0x7e
   42f34:	b.lt	42f98 <__fmodf_finite@GLIBC_2.17+0x160>  // b.tstop
   42f38:	add	w6, w6, #0x7f
   42f3c:	sub	w0, w0, #0x800, lsl #12
   42f40:	orr	w0, w0, w3
   42f44:	orr	w0, w0, w6, lsl #23
   42f48:	fmov	s0, w0
   42f4c:	ret
   42f50:	cmp	wzr, w1, lsl #8
   42f54:	lsl	w4, w1, #8
   42f58:	mov	w2, #0xffffff82            	// #-126
   42f5c:	b.ge	42e88 <__fmodf_finite@GLIBC_2.17+0x50>  // b.tcont
   42f60:	lsl	w4, w4, #1
   42f64:	sub	w2, w2, #0x1
   42f68:	cmp	w4, #0x0
   42f6c:	b.gt	42f60 <__fmodf_finite@GLIBC_2.17+0x128>
   42f70:	tst	w7, #0x7f800000
   42f74:	b.eq	42e90 <__fmodf_finite@GLIBC_2.17+0x58>  // b.none
   42f78:	asr	w6, w5, #23
   42f7c:	sub	w6, w6, #0x7f
   42f80:	b	42eac <__fmodf_finite@GLIBC_2.17+0x74>
   42f84:	lsr	w1, w3, #31
   42f88:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   42f8c:	add	x0, x0, #0x80
   42f90:	ldr	s0, [x0, x1, lsl #2]
   42f94:	ret
   42f98:	mov	w1, #0xffffff82            	// #-126
   42f9c:	sub	w6, w1, w6
   42fa0:	asr	w0, w0, w6
   42fa4:	orr	w0, w0, w3
   42fa8:	fmov	s0, w0
   42fac:	ret

0000000000042fb0 <__hypotf_finite@GLIBC_2.17>:
   42fb0:	fmov	w1, s0
   42fb4:	fmov	w0, s1
   42fb8:	mov	w4, #0x7f800000            	// #2139095040
   42fbc:	and	w2, w1, #0x7fffffff
   42fc0:	and	w3, w0, #0x7fffffff
   42fc4:	cmp	w2, w4
   42fc8:	b.eq	43028 <__hypotf_finite@GLIBC_2.17+0x78>  // b.none
   42fcc:	mov	w0, #0x7f800000            	// #2139095040
   42fd0:	cmp	w3, w0
   42fd4:	b.eq	4300c <__hypotf_finite@GLIBC_2.17+0x5c>  // b.none
   42fd8:	mov	w0, #0x7f800000            	// #2139095040
   42fdc:	cmp	w2, w0
   42fe0:	ccmp	w3, w0, #0x0, le
   42fe4:	b.gt	43044 <__hypotf_finite@GLIBC_2.17+0x94>
   42fe8:	cbz	w2, 43020 <__hypotf_finite@GLIBC_2.17+0x70>
   42fec:	cbz	w3, 4303c <__hypotf_finite@GLIBC_2.17+0x8c>
   42ff0:	fcvt	d1, s1
   42ff4:	fcvt	d0, s0
   42ff8:	fmul	d1, d1, d1
   42ffc:	fmadd	d0, d0, d0, d1
   43000:	fsqrt	d1, d0
   43004:	fcvt	s0, d1
   43008:	ret
   4300c:	eor	w1, w1, #0x400000
   43010:	mov	w0, #0x7fc00000            	// #2143289344
   43014:	and	w1, w1, #0x7fffffff
   43018:	cmp	w1, w0
   4301c:	b.hi	42fd8 <__hypotf_finite@GLIBC_2.17+0x28>  // b.pmore
   43020:	fabs	s0, s1
   43024:	ret
   43028:	eor	w0, w0, #0x400000
   4302c:	mov	w4, #0x7fc00000            	// #2143289344
   43030:	and	w0, w0, #0x7fffffff
   43034:	cmp	w0, w4
   43038:	b.hi	42fcc <__hypotf_finite@GLIBC_2.17+0x1c>  // b.pmore
   4303c:	fabs	s0, s0
   43040:	ret
   43044:	fabs	s1, s1
   43048:	fabs	s0, s0
   4304c:	fmul	s0, s0, s1
   43050:	ret
   43054:	nop
   43058:	fmov	w1, s0
   4305c:	mov	w0, #0x40ffffff            	// #1090519039
   43060:	and	w1, w1, #0x7fffffff
   43064:	cmp	w1, w0
   43068:	b.gt	43100 <__hypotf_finite@GLIBC_2.17+0x150>
   4306c:	mov	w0, #0x1c57                	// #7255
   43070:	movk	w0, #0x40f7, lsl #16
   43074:	cmp	w1, w0
   43078:	b.le	431b8 <__hypotf_finite@GLIBC_2.17+0x208>
   4307c:	mov	w0, #0x65c8                	// #26056
   43080:	mov	w1, #0x60ee                	// #24814
   43084:	movk	w0, #0x4616, lsl #16
   43088:	fmov	s20, w0
   4308c:	mov	w0, #0x6813                	// #26643
   43090:	movk	w1, #0x4516, lsl #16
   43094:	movk	w0, #0x4483, lsl #16
   43098:	fmov	s18, w0
   4309c:	mov	w0, #0x9d9b                	// #40347
   430a0:	fmov	s21, w1
   430a4:	movk	w0, #0xc3a5, lsl #16
   430a8:	mov	w1, #0xd7c4                	// #55236
   430ac:	movk	w1, #0x45ba, lsl #16
   430b0:	fmov	s7, w0
   430b4:	mov	w0, #0x1b88                	// #7048
   430b8:	fmov	s19, w1
   430bc:	movk	w0, #0xc085, lsl #16
   430c0:	mov	w1, #0x3779                	// #14201
   430c4:	movk	w1, #0xc3ad, lsl #16
   430c8:	fmov	s5, w0
   430cc:	mov	w0, #0x408                 	// #1032
   430d0:	fmov	s16, w1
   430d4:	movk	w0, #0x4273, lsl #16
   430d8:	mov	w1, #0x597b                	// #22907
   430dc:	movk	w1, #0xc287, lsl #16
   430e0:	fmov	s2, w0
   430e4:	mov	w0, #0xc58a                	// #50570
   430e8:	fmov	s6, w1
   430ec:	movk	w0, #0xad48, lsl #16
   430f0:	mov	w1, #0xbd8fffff            	// #-1114636289
   430f4:	fmov	s3, w0
   430f8:	fmov	s4, w1
   430fc:	b	43178 <__hypotf_finite@GLIBC_2.17+0x1c8>
   43100:	mov	w0, #0x87c                 	// #2172
   43104:	mov	w1, #0xbba                 	// #3002
   43108:	movk	w0, #0x47e4, lsl #16
   4310c:	movk	w1, #0x473a, lsl #16
   43110:	fmov	s20, w0
   43114:	mov	w0, #0x9beb                	// #39915
   43118:	movk	w0, #0x456f, lsl #16
   4311c:	fmov	s21, w1
   43120:	mov	w1, #0x95db                	// #38363
   43124:	fmov	s18, w0
   43128:	movk	w1, #0x471e, lsl #16
   4312c:	mov	w0, #0x5376                	// #21366
   43130:	movk	w0, #0xc51b, lsl #16
   43134:	fmov	s19, w1
   43138:	mov	w1, #0x285a                	// #10330
   4313c:	fmov	s7, w0
   43140:	movk	w1, #0xc5a4, lsl #16
   43144:	mov	w0, #0x4e86                	// #20102
   43148:	movk	w0, #0xc101, lsl #16
   4314c:	fmov	s16, w1
   43150:	movi	v3.2s, #0x0
   43154:	mov	w1, #0x8814                	// #34836
   43158:	movk	w1, #0xc380, lsl #16
   4315c:	fmov	s5, w0
   43160:	mov	w0, #0x1198                	// #4504
   43164:	fmov	s6, w1
   43168:	movk	w0, #0x42e9, lsl #16
   4316c:	mov	w1, #0xbd900000            	// #-1114636288
   43170:	fmov	s2, w0
   43174:	fmov	s4, w1
   43178:	fmul	s0, s0, s0
   4317c:	fmov	s17, #1.000000000000000000e+00
   43180:	fdiv	s1, s17, s0
   43184:	fmadd	s7, s1, s16, s7
   43188:	fmadd	s16, s1, s21, s20
   4318c:	fmadd	s6, s7, s1, s6
   43190:	fmadd	s0, s16, s1, s19
   43194:	fmadd	s5, s6, s1, s5
   43198:	fmadd	s0, s0, s1, s18
   4319c:	fmadd	s4, s5, s1, s4
   431a0:	fmadd	s2, s0, s1, s2
   431a4:	fmadd	s3, s4, s1, s3
   431a8:	fmadd	s1, s2, s1, s17
   431ac:	fdiv	s1, s3, s1
   431b0:	fadd	s0, s1, s17
   431b4:	ret
   431b8:	mov	w2, #0xdb67                	// #56167
   431bc:	mov	w3, #0x859a                	// #34202
   431c0:	mov	w0, #0x94b8                	// #38072
   431c4:	movk	w3, #0x416a, lsl #16
   431c8:	movk	w0, #0x432d, lsl #16
   431cc:	movk	w2, #0x4036, lsl #16
   431d0:	cmp	w1, w2
   431d4:	fmov	s16, w3
   431d8:	fmov	s1, w0
   431dc:	mov	w3, #0xe01a                	// #57370
   431e0:	mov	w0, #0xffe6                	// #65510
   431e4:	movk	w3, #0x4319, lsl #16
   431e8:	movk	w0, #0x448c, lsl #16
   431ec:	fcsel	s21, s16, s1, le
   431f0:	fmov	s16, w3
   431f4:	fmov	s1, w0
   431f8:	mov	w3, #0x3c32                	// #15410
   431fc:	mov	w0, #0x3373                	// #13171
   43200:	movk	w3, #0x4387, lsl #16
   43204:	movk	w0, #0x4495, lsl #16
   43208:	fcsel	s20, s16, s1, le
   4320c:	fmov	s19, w3
   43210:	fmov	s1, w0
   43214:	mov	w3, #0x34f0                	// #13552
   43218:	mov	w0, #0xc1ca                	// #49610
   4321c:	movk	w3, #0x4308, lsl #16
   43220:	movk	w0, #0x43b4, lsl #16
   43224:	fmov	s18, w3
   43228:	fcsel	s19, s19, s1, le
   4322c:	mov	w3, #0x9565                	// #38245
   43230:	fmov	s1, w0
   43234:	mov	w0, #0xf40d                	// #62477
   43238:	movk	w0, #0xc04e, lsl #16
   4323c:	movk	w3, #0xc1fb, lsl #16
   43240:	fmov	s7, w0
   43244:	fmov	s16, w3
   43248:	mov	w0, #0x1736                	// #5942
   4324c:	mov	w3, #0x5112                	// #20754
   43250:	movk	w0, #0xc133, lsl #16
   43254:	movk	w3, #0xc268, lsl #16
   43258:	fcsel	s16, s7, s16, le
   4325c:	fmov	s6, w3
   43260:	fmov	s7, w0
   43264:	mov	w3, #0xba52                	// #47698
   43268:	mov	w0, #0x579f                	// #22431
   4326c:	movk	w3, #0xc1af, lsl #16
   43270:	movk	w0, #0xc0f4, lsl #16
   43274:	fmov	s5, w3
   43278:	fcsel	s7, s7, s6, le
   4327c:	mov	w3, #0x2d95                	// #11669
   43280:	fmov	s6, w0
   43284:	mov	w0, #0xb1cc                	// #45516
   43288:	movk	w0, #0xbfb9, lsl #16
   4328c:	movk	w3, #0xc01a, lsl #16
   43290:	fcsel	s6, s6, s5, le
   43294:	fmov	s4, w3
   43298:	fmov	s5, w0
   4329c:	mov	w3, #0xffb8                	// #65464
   432a0:	mov	w0, #0xfb12                	// #64274
   432a4:	movk	w3, #0xbd8f, lsl #16
   432a8:	movk	w0, #0xbd8f, lsl #16
   432ac:	fmov	s3, w3
   432b0:	fcsel	s5, s5, s4, le
   432b4:	mov	w3, #0x6c94                	// #27796
   432b8:	fmov	s4, w0
   432bc:	mov	w0, #0xc32d                	// #49965
   432c0:	movk	w0, #0x41b1, lsl #16
   432c4:	movk	w3, #0x420f, lsl #16
   432c8:	fmov	s2, w0
   432cc:	fcsel	s18, s18, s1, le
   432d0:	fmov	s1, w3
   432d4:	mov	w0, #0x98b7                	// #39095
   432d8:	mov	w3, #0x81b                 	// #2075
   432dc:	fcsel	s4, s4, s3, le
   432e0:	fcsel	s2, s2, s1, le
   432e4:	movk	w0, #0xb3be, lsl #16
   432e8:	movk	w3, #0xb12f, lsl #16
   432ec:	fmov	s3, w0
   432f0:	fmov	s1, w3
   432f4:	fcsel	s3, s3, s1, le
   432f8:	b	43178 <__hypotf_finite@GLIBC_2.17+0x1c8>
   432fc:	nop
   43300:	fmov	w1, s0
   43304:	mov	w0, #0x40ffffff            	// #1090519039
   43308:	and	w1, w1, #0x7fffffff
   4330c:	cmp	w1, w0
   43310:	b.gt	433b4 <__hypotf_finite@GLIBC_2.17+0x404>
   43314:	mov	w0, #0x1c57                	// #7255
   43318:	movk	w0, #0x40f7, lsl #16
   4331c:	cmp	w1, w0
   43320:	b.le	43484 <__hypotf_finite@GLIBC_2.17+0x4d4>
   43324:	mov	w1, #0x52be                	// #21182
   43328:	mov	w0, #0x88c1                	// #35009
   4332c:	movk	w1, #0xc5a7, lsl #16
   43330:	movk	w0, #0x470c, lsl #16
   43334:	fmov	s23, w1
   43338:	mov	w1, #0xaf1d                	// #44829
   4333c:	movk	w1, #0x475d, lsl #16
   43340:	fmov	s21, w0
   43344:	mov	w0, #0x3e94                	// #16020
   43348:	fmov	s20, w1
   4334c:	movk	w0, #0x4693, lsl #16
   43350:	mov	w1, #0xdd07                	// #56583
   43354:	movk	w1, #0x4501, lsl #16
   43358:	fmov	s19, w0
   4335c:	mov	w0, #0xbf4b                	// #48971
   43360:	fmov	s18, w1
   43364:	movk	w0, #0x44f8, lsl #16
   43368:	mov	w1, #0x67cd                	// #26573
   4336c:	movk	w1, #0x4480, lsl #16
   43370:	fmov	s17, w0
   43374:	mov	w0, #0x1c90                	// #7312
   43378:	fmov	s7, w1
   4337c:	movk	w0, #0x4307, lsl #16
   43380:	mov	w1, #0xbd86                	// #48518
   43384:	movk	w1, #0x40ba, lsl #16
   43388:	fmov	s6, w0
   4338c:	mov	w0, #0x3d95ffff            	// #1033240575
   43390:	fmov	s5, w1
   43394:	fmov	s4, w0
   43398:	mov	w1, #0x8da0                	// #36256
   4339c:	mov	w0, #0xec79                	// #60537
   433a0:	movk	w1, #0x42a5, lsl #16
   433a4:	movk	w0, #0x2da1, lsl #16
   433a8:	fmov	s3, w1
   433ac:	fmov	s2, w0
   433b0:	b	43438 <__hypotf_finite@GLIBC_2.17+0x488>
   433b4:	mov	w0, #0x3359                	// #13145
   433b8:	mov	w1, #0xeb69                	// #60265
   433bc:	movk	w0, #0x494d, lsl #16
   433c0:	movk	w1, #0xc8a7, lsl #16
   433c4:	fmov	s21, w0
   433c8:	mov	w0, #0x3293                	// #12947
   433cc:	movk	w0, #0x480b, lsl #16
   433d0:	fmov	s23, w1
   433d4:	mov	w1, #0x1ed4                	// #7892
   433d8:	fmov	s19, w0
   433dc:	movk	w1, #0x4944, lsl #16
   433e0:	mov	w0, #0x96a0                	// #38560
   433e4:	movk	w0, #0x4710, lsl #16
   433e8:	fmov	s20, w1
   433ec:	mov	w1, #0x12c2                	// #4802
   433f0:	fmov	s17, w0
   433f4:	movk	w1, #0x45fd, lsl #16
   433f8:	mov	w0, #0x6b19                	// #27417
   433fc:	movk	w0, #0x440b, lsl #16
   43400:	fmov	s18, w1
   43404:	mov	w1, #0x6cca                	// #27850
   43408:	fmov	s6, w0
   4340c:	movk	w1, #0x460a, lsl #16
   43410:	mov	w0, #0x3d960000            	// #1033240576
   43414:	movi	v2.2s, #0x0
   43418:	fmov	s7, w1
   4341c:	fmov	s4, w0
   43420:	mov	w1, #0x4a93                	// #19091
   43424:	mov	w0, #0xc6aa                	// #50858
   43428:	movk	w1, #0x413c, lsl #16
   4342c:	movk	w0, #0x4323, lsl #16
   43430:	fmov	s5, w1
   43434:	fmov	s3, w0
   43438:	fmul	s1, s0, s0
   4343c:	fmov	s16, #1.000000000000000000e+00
   43440:	fmov	s22, #1.250000000000000000e-01
   43444:	fdiv	s1, s16, s1
   43448:	fmadd	s21, s1, s23, s21
   4344c:	fmadd	s7, s1, s17, s7
   43450:	fmadd	s17, s21, s1, s20
   43454:	fmadd	s6, s7, s1, s6
   43458:	fmadd	s7, s17, s1, s19
   4345c:	fmadd	s5, s6, s1, s5
   43460:	fmadd	s6, s7, s1, s18
   43464:	fmadd	s4, s5, s1, s4
   43468:	fmadd	s3, s6, s1, s3
   4346c:	fmadd	s2, s4, s1, s2
   43470:	fmadd	s1, s3, s1, s16
   43474:	fdiv	s1, s2, s1
   43478:	fsub	s1, s1, s22
   4347c:	fdiv	s0, s1, s0
   43480:	ret
   43484:	mov	w2, #0xdb67                	// #56167
   43488:	mov	w3, #0xf358                	// #62296
   4348c:	mov	w0, #0x3f59                	// #16217
   43490:	movk	w3, #0xc0a9, lsl #16
   43494:	movk	w0, #0xc315, lsl #16
   43498:	movk	w2, #0x4036, lsl #16
   4349c:	cmp	w1, w2
   434a0:	fmov	s21, w3
   434a4:	fmov	s1, w0
   434a8:	mov	w3, #0xaa98                	// #43672
   434ac:	mov	w0, #0x4557                	// #17751
   434b0:	movk	w3, #0x4354, lsl #16
   434b4:	movk	w0, #0x451d, lsl #16
   434b8:	fcsel	s23, s21, s1, le
   434bc:	fmov	s1, w0
   434c0:	fmov	s21, w3
   434c4:	mov	w0, #0xe367                	// #58215
   434c8:	mov	w3, #0xbbe5                	// #48101
   434cc:	movk	w3, #0x445c, lsl #16
   434d0:	movk	w0, #0x45c9, lsl #16
   434d4:	fmov	s17, w3
   434d8:	fcsel	s21, s21, s1, le
   434dc:	mov	w3, #0x3229                	// #12841
   434e0:	fmov	s1, w0
   434e4:	mov	w0, #0x825f                	// #33375
   434e8:	movk	w3, #0x4453, lsl #16
   434ec:	movk	w0, #0x4567, lsl #16
   434f0:	fmov	s7, w3
   434f4:	fcsel	s20, s17, s1, le
   434f8:	mov	w3, #0xac8f                	// #44175
   434fc:	fmov	s1, w0
   43500:	mov	w0, #0x6c1c                	// #27676
   43504:	movk	w3, #0x4386, lsl #16
   43508:	movk	w0, #0x4431, lsl #16
   4350c:	fmov	s6, w3
   43510:	fcsel	s19, s7, s1, le
   43514:	mov	w3, #0xbbe4                	// #48100
   43518:	fmov	s1, w0
   4351c:	mov	w0, #0x58c                 	// #1420
   43520:	movk	w3, #0x4326, lsl #16
   43524:	movk	w0, #0x4182, lsl #16
   43528:	fmov	s17, w3
   4352c:	fmov	s7, w0
   43530:	mov	w3, #0xcedf                	// #52959
   43534:	mov	w0, #0x5471                	// #21617
   43538:	movk	w3, #0x432a, lsl #16
   4353c:	movk	w0, #0x41fd, lsl #16
   43540:	fcsel	s18, s6, s1, le
   43544:	fcsel	s17, s7, s17, le
   43548:	fmov	s6, w3
   4354c:	fmov	s7, w0
   43550:	mov	w3, #0x7cc5                	// #31941
   43554:	mov	w0, #0xedfd                	// #60925
   43558:	movk	w3, #0x422a, lsl #16
   4355c:	movk	w0, #0x4167, lsl #16
   43560:	fmov	s5, w3
   43564:	fcsel	s7, s7, s6, le
   43568:	mov	w3, #0x7e3                 	// #2019
   4356c:	fmov	s6, w0
   43570:	mov	w0, #0xc4bf                	// #50367
   43574:	movk	w0, #0x3fff, lsl #16
   43578:	movk	w3, #0x4056, lsl #16
   4357c:	fcsel	s6, s6, s5, le
   43580:	fmov	s4, w3
   43584:	fmov	s5, w0
   43588:	mov	w3, #0xff70                	// #65392
   4358c:	mov	w0, #0xf62a                	// #63018
   43590:	movk	w3, #0x3d95, lsl #16
   43594:	movk	w0, #0x3d95, lsl #16
   43598:	fmov	s2, w3
   4359c:	fcsel	s5, s5, s4, le
   435a0:	mov	w3, #0x916                 	// #2326
   435a4:	fmov	s4, w0
   435a8:	mov	w0, #0xecb8                	// #60600
   435ac:	movk	w0, #0x41f2, lsl #16
   435b0:	movk	w3, #0x4243, lsl #16
   435b4:	fmov	s3, w0
   435b8:	fmov	s1, w3
   435bc:	mov	w0, #0x89db                	// #35291
   435c0:	mov	w3, #0x681b                	// #26651
   435c4:	fcsel	s4, s4, s2, le
   435c8:	fcsel	s3, s3, s1, le
   435cc:	movk	w0, #0x3421, lsl #16
   435d0:	movk	w3, #0x3196, lsl #16
   435d4:	fmov	s2, w0
   435d8:	fmov	s1, w3
   435dc:	fcsel	s2, s2, s1, le
   435e0:	b	43438 <__hypotf_finite@GLIBC_2.17+0x488>
   435e4:	nop

00000000000435e8 <__j0f_finite@GLIBC_2.17>:
   435e8:	stp	x29, x30, [sp, #-80]!
   435ec:	mov	w1, #0x7f7fffff            	// #2139095039
   435f0:	mov	x29, sp
   435f4:	stp	x19, x20, [sp, #16]
   435f8:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   435fc:	ldr	x0, [x19, #4032]
   43600:	ldr	x2, [x0]
   43604:	str	x2, [sp, #72]
   43608:	mov	x2, #0x0                   	// #0
   4360c:	fmov	w0, s0
   43610:	and	w20, w0, #0x7fffffff
   43614:	cmp	w20, w1
   43618:	b.gt	43704 <__j0f_finite@GLIBC_2.17+0x11c>
   4361c:	stp	d8, d9, [sp, #32]
   43620:	fabs	s8, s0
   43624:	tbnz	w0, #30, 43760 <__j0f_finite@GLIBC_2.17+0x178>
   43628:	mov	w0, #0x38ffffff            	// #956301311
   4362c:	cmp	w20, w0
   43630:	b.gt	4365c <__j0f_finite@GLIBC_2.17+0x74>
   43634:	mov	w0, #0xf2ca                	// #62154
   43638:	movk	w0, #0x7149, lsl #16
   4363c:	fmov	s0, w0
   43640:	fadd	s0, s8, s0
   43644:	mov	w0, #0x31ffffff            	// #838860799
   43648:	fmov	s0, #1.000000000000000000e+00
   4364c:	cmp	w20, w0
   43650:	b.gt	43730 <__j0f_finite@GLIBC_2.17+0x148>
   43654:	ldp	d8, d9, [sp, #32]
   43658:	b	43710 <__j0f_finite@GLIBC_2.17+0x128>
   4365c:	fmul	s0, s0, s0
   43660:	mov	w0, #0x45e8                	// #17896
   43664:	movk	w0, #0x30a0, lsl #16
   43668:	fmov	s6, w0
   4366c:	mov	w0, #0xdaa6                	// #55974
   43670:	fmov	s7, #1.000000000000000000e+00
   43674:	movk	w0, #0x3509, lsl #16
   43678:	fmov	s4, w0
   4367c:	fmadd	s6, s0, s6, s4
   43680:	mov	w0, #0xaf3c                	// #44860
   43684:	movk	w0, #0xb19e, lsl #16
   43688:	fmov	s5, w0
   4368c:	mov	w0, #0x8e88                	// #36488
   43690:	movk	w0, #0x35f5, lsl #16
   43694:	fmov	s3, w0
   43698:	fmadd	s5, s0, s5, s3
   4369c:	mov	w0, #0x3697                	// #13975
   436a0:	movk	w0, #0x38f5, lsl #16
   436a4:	fmov	s4, w0
   436a8:	mov	w0, #0x352e                	// #13614
   436ac:	movk	w0, #0xb947, lsl #16
   436b0:	fmov	s3, w0
   436b4:	fmadd	s4, s6, s0, s4
   436b8:	mov	w0, #0xe744                	// #59204
   436bc:	movk	w0, #0x3c7f, lsl #16
   436c0:	fmov	s2, w0
   436c4:	mov	w0, #0x3c800000            	// #1015021568
   436c8:	fmov	s1, w0
   436cc:	mov	w0, #0x3f7fffff            	// #1065353215
   436d0:	cmp	w20, w0
   436d4:	fmadd	s3, s5, s0, s3
   436d8:	fmadd	s2, s4, s0, s2
   436dc:	fmadd	s1, s3, s0, s1
   436e0:	fmadd	s2, s2, s0, s7
   436e4:	fmul	s1, s1, s0
   436e8:	fdiv	s1, s1, s2
   436ec:	b.gt	43744 <__j0f_finite@GLIBC_2.17+0x15c>
   436f0:	fmov	s2, #2.500000000000000000e-01
   436f4:	ldp	d8, d9, [sp, #32]
   436f8:	fsub	s1, s1, s2
   436fc:	fmadd	s0, s1, s0, s7
   43700:	b	43710 <__j0f_finite@GLIBC_2.17+0x128>
   43704:	fmul	s0, s0, s0
   43708:	fmov	s1, #1.000000000000000000e+00
   4370c:	fdiv	s0, s1, s0
   43710:	ldr	x19, [x19, #4032]
   43714:	ldr	x1, [sp, #72]
   43718:	ldr	x0, [x19]
   4371c:	eor	x0, x1, x0
   43720:	cbnz	x0, 43828 <__j0f_finite@GLIBC_2.17+0x240>
   43724:	ldp	x19, x20, [sp, #16]
   43728:	ldp	x29, x30, [sp], #80
   4372c:	ret
   43730:	fmov	s1, #2.500000000000000000e-01
   43734:	fmul	s1, s8, s1
   43738:	fmsub	s0, s1, s8, s0
   4373c:	ldp	d8, d9, [sp, #32]
   43740:	b	43710 <__j0f_finite@GLIBC_2.17+0x128>
   43744:	fmov	s2, #5.000000000000000000e-01
   43748:	fmul	s0, s0, s1
   4374c:	fmadd	s1, s8, s2, s7
   43750:	fmsub	s8, s8, s2, s7
   43754:	fmadd	s0, s1, s8, s0
   43758:	ldp	d8, d9, [sp, #32]
   4375c:	b	43710 <__j0f_finite@GLIBC_2.17+0x128>
   43760:	fmov	s0, s8
   43764:	add	x0, sp, #0x40
   43768:	add	x1, sp, #0x44
   4376c:	str	d10, [sp, #48]
   43770:	bl	483f0 <sincosf@@GLIBC_2.17>
   43774:	ldp	s0, s9, [sp, #64]
   43778:	mov	w0, #0x7effffff            	// #2130706431
   4377c:	cmp	w20, w0
   43780:	fsub	s10, s0, s9
   43784:	fadd	s9, s0, s9
   43788:	b.le	437fc <__j0f_finite@GLIBC_2.17+0x214>
   4378c:	fsqrt	s24, s8
   43790:	mov	w0, #0x48000000            	// #1207959552
   43794:	cmp	w20, w0
   43798:	b.le	437bc <__j0f_finite@GLIBC_2.17+0x1d4>
   4379c:	mov	w0, #0x6ebb                	// #28347
   437a0:	ldr	d10, [sp, #48]
   437a4:	movk	w0, #0x3f10, lsl #16
   437a8:	fmov	s0, w0
   437ac:	fmul	s0, s9, s0
   437b0:	ldp	d8, d9, [sp, #32]
   437b4:	fdiv	s0, s0, s24
   437b8:	b	43710 <__j0f_finite@GLIBC_2.17+0x128>
   437bc:	fmov	s0, s8
   437c0:	bl	43058 <__hypotf_finite@GLIBC_2.17+0xa8>
   437c4:	fmov	s1, s0
   437c8:	fmov	s0, s8
   437cc:	fmov	s8, s1
   437d0:	bl	43300 <__hypotf_finite@GLIBC_2.17+0x350>
   437d4:	fmul	s10, s10, s0
   437d8:	fnmsub	s0, s9, s8, s10
   437dc:	mov	w0, #0x6ebb                	// #28347
   437e0:	movk	w0, #0x3f10, lsl #16
   437e4:	fmov	s1, w0
   437e8:	ldp	d8, d9, [sp, #32]
   437ec:	ldr	d10, [sp, #48]
   437f0:	fmul	s0, s0, s1
   437f4:	fdiv	s0, s0, s24
   437f8:	b	43710 <__j0f_finite@GLIBC_2.17+0x128>
   437fc:	fadd	s0, s8, s8
   43800:	bl	466d0 <cosf@@GLIBC_2.17>
   43804:	fneg	s0, s0
   43808:	ldp	s1, s2, [sp, #64]
   4380c:	fmul	s1, s1, s2
   43810:	fcmpe	s1, #0.0
   43814:	b.mi	43820 <__j0f_finite@GLIBC_2.17+0x238>  // b.first
   43818:	fdiv	s10, s0, s9
   4381c:	b	4378c <__j0f_finite@GLIBC_2.17+0x1a4>
   43820:	fdiv	s9, s0, s10
   43824:	b	4378c <__j0f_finite@GLIBC_2.17+0x1a4>
   43828:	stp	d8, d9, [sp, #32]
   4382c:	str	d10, [sp, #48]
   43830:	bl	ba70 <__stack_chk_fail@plt>
   43834:	nop

0000000000043838 <__y0f_finite@GLIBC_2.17>:
   43838:	stp	x29, x30, [sp, #-80]!
   4383c:	mov	w1, #0x7f7fffff            	// #2139095039
   43840:	mov	x29, sp
   43844:	stp	x19, x20, [sp, #16]
   43848:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4384c:	ldr	x0, [x19, #4032]
   43850:	stp	d8, d9, [sp, #32]
   43854:	fmov	s8, s0
   43858:	ldr	x2, [x0]
   4385c:	str	x2, [sp, #72]
   43860:	mov	x2, #0x0                   	// #0
   43864:	fmov	w0, s0
   43868:	and	w20, w0, #0x7fffffff
   4386c:	cmp	w20, w1
   43870:	b.gt	439a0 <__y0f_finite@GLIBC_2.17+0x168>
   43874:	cbz	w20, 43970 <__y0f_finite@GLIBC_2.17+0x138>
   43878:	tbnz	w0, #31, 439d4 <__y0f_finite@GLIBC_2.17+0x19c>
   4387c:	tbnz	w0, #30, 439e4 <__y0f_finite@GLIBC_2.17+0x1ac>
   43880:	mov	w0, #0x39800000            	// #964689920
   43884:	cmp	w20, w0
   43888:	b.le	439b0 <__y0f_finite@GLIBC_2.17+0x178>
   4388c:	fmul	s9, s0, s0
   43890:	mov	w0, #0x21eb                	// #8683
   43894:	movk	w0, #0xae2f, lsl #16
   43898:	fmov	s5, w0
   4389c:	mov	w0, #0x2ba                 	// #698
   438a0:	mov	w1, #0x216c                	// #8556
   438a4:	movk	w0, #0x32a8, lsl #16
   438a8:	fmov	s1, w0
   438ac:	fmadd	s1, s9, s5, s1
   438b0:	mov	w0, #0xf53c                	// #62780
   438b4:	movk	w0, #0xb67f, lsl #16
   438b8:	fmov	s7, w0
   438bc:	mov	w0, #0x80c2                	// #32962
   438c0:	movk	w1, #0x348b, lsl #16
   438c4:	movk	w0, #0x2ff2, lsl #16
   438c8:	fmov	s16, w0
   438cc:	mov	w0, #0x2a69                	// #10857
   438d0:	fmov	s6, w1
   438d4:	movk	w0, #0x39b6, lsl #16
   438d8:	fmov	s5, w0
   438dc:	fmadd	s16, s9, s16, s6
   438e0:	mov	w0, #0x6746                	// #26438
   438e4:	mov	w1, #0x65e0                	// #26080
   438e8:	movk	w0, #0xbc62, lsl #16
   438ec:	fmadd	s7, s1, s9, s7
   438f0:	movk	w1, #0x389f, lsl #16
   438f4:	fmov	s3, w0
   438f8:	fmov	s6, w1
   438fc:	mov	w0, #0xe80d                	// #59405
   43900:	mov	w1, #0x9385                	// #37765
   43904:	movk	w1, #0x3c50, lsl #16
   43908:	movk	w0, #0x3e34, lsl #16
   4390c:	fmov	s4, w1
   43910:	fmov	s2, w0
   43914:	mov	w0, #0x26b5                	// #9909
   43918:	fmadd	s6, s16, s9, s6
   4391c:	movk	w0, #0xbd97, lsl #16
   43920:	fmov	s17, #1.000000000000000000e+00
   43924:	fmov	s1, w0
   43928:	fmadd	s5, s7, s9, s5
   4392c:	fmadd	s4, s6, s9, s4
   43930:	fmadd	s3, s5, s9, s3
   43934:	fmadd	s4, s4, s9, s17
   43938:	fmadd	s2, s3, s9, s2
   4393c:	fmadd	s9, s2, s9, s1
   43940:	fdiv	s9, s9, s4
   43944:	bl	435e8 <__j0f_finite@GLIBC_2.17>
   43948:	fmov	s1, s0
   4394c:	fmov	s0, s8
   43950:	fmov	s8, s1
   43954:	bl	45298 <__logf_finite@GLIBC_2.17>
   43958:	fmul	s0, s8, s0
   4395c:	mov	w0, #0xf983                	// #63875
   43960:	movk	w0, #0x3f22, lsl #16
   43964:	fmov	s1, w0
   43968:	fmadd	s0, s0, s1, s9
   4396c:	b	4397c <__y0f_finite@GLIBC_2.17+0x144>
   43970:	movi	v8.2s, #0x0
   43974:	fmov	s0, #-1.000000000000000000e+00
   43978:	fdiv	s0, s0, s8
   4397c:	ldr	x19, [x19, #4032]
   43980:	ldr	x1, [sp, #72]
   43984:	ldr	x0, [x19]
   43988:	eor	x0, x1, x0
   4398c:	cbnz	x0, 43aa0 <__y0f_finite@GLIBC_2.17+0x268>
   43990:	ldp	x19, x20, [sp, #16]
   43994:	ldp	d8, d9, [sp, #32]
   43998:	ldp	x29, x30, [sp], #80
   4399c:	ret
   439a0:	fmadd	s8, s0, s0, s0
   439a4:	fmov	s0, #1.000000000000000000e+00
   439a8:	fdiv	s0, s0, s8
   439ac:	b	4397c <__y0f_finite@GLIBC_2.17+0x144>
   439b0:	bl	45298 <__logf_finite@GLIBC_2.17>
   439b4:	mov	w0, #0xf983                	// #63875
   439b8:	movk	w0, #0x3f22, lsl #16
   439bc:	fmov	s1, w0
   439c0:	mov	w0, #0x26b5                	// #9909
   439c4:	movk	w0, #0xbd97, lsl #16
   439c8:	fmov	s8, w0
   439cc:	fmadd	s0, s0, s1, s8
   439d0:	b	4397c <__y0f_finite@GLIBC_2.17+0x144>
   439d4:	movi	v0.2s, #0x0
   439d8:	fmul	s8, s8, s0
   439dc:	fdiv	s0, s0, s8
   439e0:	b	4397c <__y0f_finite@GLIBC_2.17+0x144>
   439e4:	add	x0, sp, #0x40
   439e8:	add	x1, sp, #0x44
   439ec:	stp	d10, d11, [sp, #48]
   439f0:	bl	483f0 <sincosf@@GLIBC_2.17>
   439f4:	mov	w0, #0x7effffff            	// #2130706431
   439f8:	ldp	s0, s10, [sp, #64]
   439fc:	cmp	w20, w0
   43a00:	fsub	s11, s0, s10
   43a04:	fadd	s10, s0, s10
   43a08:	b.le	43a74 <__y0f_finite@GLIBC_2.17+0x23c>
   43a0c:	fsqrt	s9, s8
   43a10:	mov	w0, #0x48000000            	// #1207959552
   43a14:	cmp	w20, w0
   43a18:	b.le	43a38 <__y0f_finite@GLIBC_2.17+0x200>
   43a1c:	mov	w0, #0x6ebb                	// #28347
   43a20:	movk	w0, #0x3f10, lsl #16
   43a24:	fmov	s0, w0
   43a28:	fmul	s0, s11, s0
   43a2c:	ldp	d10, d11, [sp, #48]
   43a30:	fdiv	s0, s0, s9
   43a34:	b	4397c <__y0f_finite@GLIBC_2.17+0x144>
   43a38:	fmov	s0, s8
   43a3c:	bl	43058 <__hypotf_finite@GLIBC_2.17+0xa8>
   43a40:	fmov	s1, s0
   43a44:	fmov	s0, s8
   43a48:	fmov	s8, s1
   43a4c:	bl	43300 <__hypotf_finite@GLIBC_2.17+0x350>
   43a50:	fmul	s0, s10, s0
   43a54:	fmadd	s0, s11, s8, s0
   43a58:	mov	w0, #0x6ebb                	// #28347
   43a5c:	movk	w0, #0x3f10, lsl #16
   43a60:	fmov	s1, w0
   43a64:	ldp	d10, d11, [sp, #48]
   43a68:	fmul	s0, s0, s1
   43a6c:	fdiv	s0, s0, s9
   43a70:	b	4397c <__y0f_finite@GLIBC_2.17+0x144>
   43a74:	fadd	s0, s8, s8
   43a78:	bl	466d0 <cosf@@GLIBC_2.17>
   43a7c:	fneg	s0, s0
   43a80:	ldp	s1, s2, [sp, #64]
   43a84:	fmul	s1, s1, s2
   43a88:	fcmpe	s1, #0.0
   43a8c:	b.mi	43a98 <__y0f_finite@GLIBC_2.17+0x260>  // b.first
   43a90:	fdiv	s11, s0, s10
   43a94:	b	43a0c <__y0f_finite@GLIBC_2.17+0x1d4>
   43a98:	fdiv	s10, s0, s11
   43a9c:	b	43a0c <__y0f_finite@GLIBC_2.17+0x1d4>
   43aa0:	stp	d10, d11, [sp, #48]
   43aa4:	bl	ba70 <__stack_chk_fail@plt>
   43aa8:	fmov	w1, s0
   43aac:	mov	w0, #0x40ffffff            	// #1090519039
   43ab0:	and	w1, w1, #0x7fffffff
   43ab4:	cmp	w1, w0
   43ab8:	b.gt	43b50 <__y0f_finite@GLIBC_2.17+0x318>
   43abc:	mov	w0, #0x1c57                	// #7255
   43ac0:	movk	w0, #0x40f7, lsl #16
   43ac4:	cmp	w1, w0
   43ac8:	b.le	43c08 <__y0f_finite@GLIBC_2.17+0x3d0>
   43acc:	mov	w0, #0x2586                	// #9606
   43ad0:	mov	w1, #0x180                 	// #384
   43ad4:	movk	w0, #0x45f5, lsl #16
   43ad8:	fmov	s20, w0
   43adc:	mov	w0, #0xd9b1                	// #55729
   43ae0:	movk	w1, #0x44bc, lsl #16
   43ae4:	movk	w0, #0x4477, lsl #16
   43ae8:	fmov	s18, w0
   43aec:	mov	w0, #0x68b7                	// #26807
   43af0:	fmov	s21, w1
   43af4:	movk	w0, #0x4401, lsl #16
   43af8:	mov	w1, #0x4a23                	// #18979
   43afc:	movk	w1, #0x45a7, lsl #16
   43b00:	fmov	s7, w0
   43b04:	mov	w0, #0xb023                	// #45091
   43b08:	fmov	s19, w1
   43b0c:	movk	w0, #0x40d9, lsl #16
   43b10:	mov	w1, #0x2dc6                	// #11718
   43b14:	movk	w1, #0x4404, lsl #16
   43b18:	fmov	s5, w0
   43b1c:	mov	w0, #0x1f55                	// #8021
   43b20:	fmov	s16, w1
   43b24:	movk	w0, #0x426d, lsl #16
   43b28:	mov	w1, #0x9dca                	// #40394
   43b2c:	movk	w1, #0x42d8, lsl #16
   43b30:	fmov	s2, w0
   43b34:	mov	w0, #0x333f                	// #13119
   43b38:	fmov	s6, w1
   43b3c:	movk	w0, #0x2d68, lsl #16
   43b40:	mov	w1, #0x3defffff            	// #1039138815
   43b44:	fmov	s3, w0
   43b48:	fmov	s4, w1
   43b4c:	b	43bc8 <__y0f_finite@GLIBC_2.17+0x390>
   43b50:	mov	w0, #0xa166                	// #41318
   43b54:	mov	w1, #0xa88b                	// #43147
   43b58:	movk	w0, #0x47be, lsl #16
   43b5c:	movk	w1, #0x46f0, lsl #16
   43b60:	fmov	s20, w0
   43b64:	mov	w0, #0x2ee5                	// #12005
   43b68:	movk	w0, #0x4564, lsl #16
   43b6c:	fmov	s21, w1
   43b70:	mov	w1, #0x5c35                	// #23605
   43b74:	fmov	s18, w0
   43b78:	movk	w1, #0x4710, lsl #16
   43b7c:	mov	w0, #0x2bed                	// #11245
   43b80:	movk	w0, #0x4572, lsl #16
   43b84:	fmov	s19, w1
   43b88:	mov	w1, #0x53d6                	// #21462
   43b8c:	fmov	s7, w0
   43b90:	movk	w1, #0x45f7, lsl #16
   43b94:	mov	w0, #0xd4ea                	// #54506
   43b98:	movk	w0, #0x4153, lsl #16
   43b9c:	fmov	s16, w1
   43ba0:	movi	v3.2s, #0x0
   43ba4:	mov	w1, #0x6a3                 	// #1699
   43ba8:	movk	w1, #0x43ce, lsl #16
   43bac:	fmov	s5, w0
   43bb0:	mov	w0, #0x6a2c                	// #27180
   43bb4:	fmov	s6, w1
   43bb8:	movk	w0, #0x42e4, lsl #16
   43bbc:	mov	w1, #0x3df00000            	// #1039138816
   43bc0:	fmov	s2, w0
   43bc4:	fmov	s4, w1
   43bc8:	fmul	s0, s0, s0
   43bcc:	fmov	s17, #1.000000000000000000e+00
   43bd0:	fdiv	s1, s17, s0
   43bd4:	fmadd	s7, s1, s16, s7
   43bd8:	fmadd	s16, s1, s21, s20
   43bdc:	fmadd	s6, s7, s1, s6
   43be0:	fmadd	s0, s16, s1, s19
   43be4:	fmadd	s5, s6, s1, s5
   43be8:	fmadd	s0, s0, s1, s18
   43bec:	fmadd	s4, s5, s1, s4
   43bf0:	fmadd	s2, s0, s1, s2
   43bf4:	fmadd	s3, s4, s1, s3
   43bf8:	fmadd	s1, s2, s1, s17
   43bfc:	fdiv	s1, s3, s1
   43c00:	fadd	s0, s1, s17
   43c04:	ret
   43c08:	mov	w2, #0xdb67                	// #56167
   43c0c:	mov	w3, #0xd590                	// #54672
   43c10:	mov	w0, #0x936c                	// #37740
   43c14:	movk	w3, #0x4105, lsl #16
   43c18:	movk	w0, #0x42cf, lsl #16
   43c1c:	movk	w2, #0x4036, lsl #16
   43c20:	cmp	w1, w2
   43c24:	fmov	s16, w3
   43c28:	fmov	s1, w0
   43c2c:	mov	w3, #0x5bd7                	// #23511
   43c30:	mov	w0, #0xb3ed                	// #46061
   43c34:	movk	w3, #0x42eb, lsl #16
   43c38:	movk	w0, #0x445e, lsl #16
   43c3c:	fcsel	s21, s16, s1, le
   43c40:	fmov	s16, w3
   43c44:	fmov	s1, w0
   43c48:	mov	w3, #0x46c7                	// #18119
   43c4c:	mov	w0, #0xdbe3                	// #56291
   43c50:	movk	w3, #0x4368, lsl #16
   43c54:	movk	w0, #0x4482, lsl #16
   43c58:	fcsel	s20, s16, s1, le
   43c5c:	fmov	s19, w3
   43c60:	fmov	s1, w0
   43c64:	mov	w3, #0x9499                	// #38041
   43c68:	mov	w0, #0x6198                	// #24984
   43c6c:	movk	w3, #0x42fa, lsl #16
   43c70:	movk	w0, #0x43a8, lsl #16
   43c74:	fmov	s18, w3
   43c78:	fcsel	s19, s19, s1, le
   43c7c:	mov	w3, #0x3c7c                	// #15484
   43c80:	fmov	s1, w0
   43c84:	mov	w0, #0x5a4d                	// #23117
   43c88:	movk	w0, #0x40a2, lsl #16
   43c8c:	movk	w3, #0x4242, lsl #16
   43c90:	fmov	s7, w0
   43c94:	fmov	s16, w3
   43c98:	mov	w0, #0x8d41                	// #36161
   43c9c:	mov	w3, #0x1c2a                	// #7210
   43ca0:	movk	w0, #0x418d, lsl #16
   43ca4:	movk	w3, #0x42b6, lsl #16
   43ca8:	fcsel	s16, s7, s16, le
   43cac:	fmov	s6, w3
   43cb0:	fmov	s7, w0
   43cb4:	mov	w3, #0x7a45                	// #31301
   43cb8:	mov	w0, #0xe1bc                	// #57788
   43cbc:	movk	w3, #0x420c, lsl #16
   43cc0:	movk	w0, #0x4143, lsl #16
   43cc4:	fmov	s5, w3
   43cc8:	fcsel	s7, s7, s6, le
   43ccc:	mov	w3, #0xb5e7                	// #46567
   43cd0:	fmov	s6, w0
   43cd4:	mov	w0, #0x95c0                	// #38336
   43cd8:	movk	w0, #0x4017, lsl #16
   43cdc:	movk	w3, #0x407b, lsl #16
   43ce0:	fcsel	s6, s6, s5, le
   43ce4:	fmov	s4, w3
   43ce8:	fmov	s5, w0
   43cec:	mov	w3, #0xffab                	// #65451
   43cf0:	mov	w0, #0xfa16                	// #64022
   43cf4:	movk	w3, #0x3def, lsl #16
   43cf8:	movk	w0, #0x3def, lsl #16
   43cfc:	fmov	s3, w3
   43d00:	fcsel	s5, s5, s4, le
   43d04:	mov	w3, #0x2a4d                	// #10829
   43d08:	fmov	s4, w0
   43d0c:	mov	w0, #0x7dec                	// #32236
   43d10:	movk	w0, #0x41ab, lsl #16
   43d14:	movk	w3, #0x420b, lsl #16
   43d18:	fmov	s2, w0
   43d1c:	fcsel	s18, s18, s1, le
   43d20:	fmov	s1, w3
   43d24:	mov	w0, #0x4ea8                	// #20136
   43d28:	mov	w3, #0xe10d                	// #57613
   43d2c:	fcsel	s4, s4, s3, le
   43d30:	fcsel	s2, s2, s1, le
   43d34:	movk	w0, #0x33e7, lsl #16
   43d38:	movk	w3, #0x314f, lsl #16
   43d3c:	fmov	s3, w0
   43d40:	fmov	s1, w3
   43d44:	fcsel	s3, s3, s1, le
   43d48:	b	43bc8 <__y0f_finite@GLIBC_2.17+0x390>
   43d4c:	nop
   43d50:	mov	w0, #0xb437                	// #46135
   43d54:	fmul	s1, s0, s0
   43d58:	movk	w0, #0xc09e, lsl #16
   43d5c:	fmov	s2, w0
   43d60:	mov	w0, #0xf2f2                	// #62194
   43d64:	fmov	s18, #1.000000000000000000e+00
   43d68:	movk	w0, #0x431b, lsl #16
   43d6c:	mov	w2, #0xcb48                	// #52040
   43d70:	fmov	s17, w0
   43d74:	mov	w0, #0xbe94                	// #48788
   43d78:	movk	w2, #0xc88f, lsl #16
   43d7c:	movk	w0, #0x4922, lsl #16
   43d80:	fdiv	s1, s18, s1
   43d84:	fmov	s3, w2
   43d88:	fmov	s5, w0
   43d8c:	mov	w2, #0xd92a                	// #55594
   43d90:	fmov	w0, s0
   43d94:	movk	w2, #0x4438, lsl #16
   43d98:	fmov	s7, w2
   43d9c:	mov	w2, #0xb29c                	// #45724
   43da0:	movk	w2, #0x492f, lsl #16
   43da4:	fmov	s4, w2
   43da8:	mov	w2, #0x602e                	// #24622
   43dac:	mov	w1, #0x401fffff            	// #1075838975
   43db0:	and	w0, w0, #0x7fffffff
   43db4:	movk	w2, #0x443d, lsl #16
   43db8:	cmp	w0, w1
   43dbc:	fmov	s22, w2
   43dc0:	mov	w2, #0xbcd6                	// #48342
   43dc4:	mov	w3, #0x2c8d                	// #11405
   43dc8:	movk	w2, #0x4802, lsl #16
   43dcc:	movk	w3, #0xc182, lsl #16
   43dd0:	fcsel	s2, s2, s3, le
   43dd4:	fmov	s3, w2
   43dd8:	mov	w2, #0xfb47                	// #64327
   43ddc:	fcsel	s17, s17, s5, le
   43de0:	movk	w2, #0x437c, lsl #16
   43de4:	fmov	s19, w2
   43de8:	mov	w2, #0x8b17                	// #35607
   43dec:	fcsel	s7, s7, s4, le
   43df0:	movk	w2, #0x45f4, lsl #16
   43df4:	fmov	s6, w2
   43df8:	mov	w2, #0xf9b2                	// #63922
   43dfc:	fmadd	s17, s1, s2, s17
   43e00:	movk	w2, #0xc1aa, lsl #16
   43e04:	fmov	s4, w2
   43e08:	mov	w2, #0x3683                	// #13955
   43e0c:	fcsel	s19, s19, s6, le
   43e10:	movk	w2, #0xc73d, lsl #16
   43e14:	fmov	s5, w2
   43e18:	mov	w2, #0x4d1f                	// #19743
   43e1c:	fcsel	s22, s22, s3, le
   43e20:	movk	w2, #0xc229, lsl #16
   43e24:	fcsel	s4, s4, s5, le
   43e28:	fmov	s16, w2
   43e2c:	mov	w2, #0x273a                	// #10042
   43e30:	movk	w2, #0xc639, lsl #16
   43e34:	fmov	s21, w2
   43e38:	fmadd	s7, s17, s1, s7
   43e3c:	mov	w2, #0x4f16                	// #20246
   43e40:	fcsel	s16, s16, s21, le
   43e44:	movk	w2, #0xc19d, lsl #16
   43e48:	fmadd	s16, s1, s4, s16
   43e4c:	fmov	s6, w2
   43e50:	mov	w2, #0xe683                	// #59011
   43e54:	fmov	s2, w3
   43e58:	movk	w2, #0xc43d, lsl #16
   43e5c:	fmov	s20, w2
   43e60:	mov	w2, #0x2423                	// #9251
   43e64:	mov	w3, #0x6537                	// #25911
   43e68:	fcsel	s6, s6, s20, le
   43e6c:	movk	w2, #0xc030, lsl #16
   43e70:	fmov	s5, w2
   43e74:	mov	w2, #0xf475                	// #62581
   43e78:	fmadd	s7, s7, s1, s22
   43e7c:	movk	w2, #0xbdd1, lsl #16
   43e80:	fcsel	s5, s5, s2, le
   43e84:	fmov	s4, w2
   43e88:	fmadd	s6, s16, s1, s6
   43e8c:	mov	w2, #0xbdd20000            	// #-1110310912
   43e90:	fmov	s20, w2
   43e94:	mov	w2, #0x4454                	// #17492
   43e98:	movk	w2, #0x41ec, lsl #16
   43e9c:	movk	w3, #0x4321, lsl #16
   43ea0:	fmov	s3, w2
   43ea4:	fmov	s17, w3
   43ea8:	fcsel	s4, s4, s20, le
   43eac:	mov	w2, #0x8932                	// #35122
   43eb0:	fcsel	s3, s3, s17, le
   43eb4:	movi	v21.2s, #0x0
   43eb8:	fmadd	s7, s7, s1, s19
   43ebc:	movk	w2, #0xb43f, lsl #16
   43ec0:	fmov	s2, w2
   43ec4:	fmov	s16, #3.750000000000000000e-01
   43ec8:	fmadd	s5, s6, s1, s5
   43ecc:	fcsel	s2, s2, s21, le
   43ed0:	fmadd	s3, s7, s1, s3
   43ed4:	fmadd	s4, s5, s1, s4
   43ed8:	fmadd	s2, s4, s1, s2
   43edc:	fmadd	s1, s3, s1, s18
   43ee0:	fdiv	s1, s2, s1
   43ee4:	fadd	s1, s1, s16
   43ee8:	fdiv	s0, s1, s0
   43eec:	ret

0000000000043ef0 <__j1f_finite@GLIBC_2.17>:
   43ef0:	stp	x29, x30, [sp, #-80]!
   43ef4:	mov	w0, #0x7f7fffff            	// #2139095039
   43ef8:	fmov	s1, s0
   43efc:	mov	x29, sp
   43f00:	stp	x19, x20, [sp, #16]
   43f04:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   43f08:	ldr	x1, [x19, #4032]
   43f0c:	ldr	x2, [x1]
   43f10:	str	x2, [sp, #72]
   43f14:	mov	x2, #0x0                   	// #0
   43f18:	str	x21, [sp, #32]
   43f1c:	fmov	w21, s0
   43f20:	and	w20, w21, #0x7fffffff
   43f24:	cmp	w20, w0
   43f28:	b.gt	440dc <__j1f_finite@GLIBC_2.17+0x1ec>
   43f2c:	tbnz	w21, #30, 44010 <__j1f_finite@GLIBC_2.17+0x120>
   43f30:	fmov	s0, #5.000000000000000000e-01
   43f34:	mov	w0, #0x31ffffff            	// #838860799
   43f38:	cmp	w20, w0
   43f3c:	fmul	s0, s1, s0
   43f40:	b.le	440e8 <__j1f_finite@GLIBC_2.17+0x1f8>
   43f44:	fmul	s2, s1, s1
   43f48:	mov	w0, #0x567e                	// #22142
   43f4c:	movk	w0, #0x2d59, lsl #16
   43f50:	fmov	s16, w0
   43f54:	mov	w0, #0x6446                	// #25670
   43f58:	stp	d8, d9, [sp, #48]
   43f5c:	movk	w0, #0x31ad, lsl #16
   43f60:	fmov	s7, w0
   43f64:	mov	w0, #0x57d2                	// #22482
   43f68:	fmadd	s16, s2, s16, s7
   43f6c:	movk	w0, #0x3355, lsl #16
   43f70:	fmov	s8, w0
   43f74:	mov	w0, #0xffc2                	// #65474
   43f78:	movk	w0, #0x359d, lsl #16
   43f7c:	fmov	s7, w0
   43f80:	mov	w0, #0x2e36                	// #11830
   43f84:	mov	w1, #0x6cfd                	// #27901
   43f88:	movk	w0, #0xb786, lsl #16
   43f8c:	fmov	s6, w0
   43f90:	fmadd	s8, s2, s8, s6
   43f94:	mov	w0, #0xfab6                	// #64182
   43f98:	movk	w0, #0x3942, lsl #16
   43f9c:	movk	w1, #0x3ab8, lsl #16
   43fa0:	fmov	s5, w0
   43fa4:	fmov	s6, w1
   43fa8:	fmadd	s7, s16, s2, s7
   43fac:	mov	w1, #0xe859                	// #59481
   43fb0:	movk	w1, #0x3c9c, lsl #16
   43fb4:	mov	w0, #0xbd800000            	// #-1115684864
   43fb8:	fmov	s4, w1
   43fbc:	fmov	s3, w0
   43fc0:	fmov	s17, #1.000000000000000000e+00
   43fc4:	fmadd	s6, s8, s2, s6
   43fc8:	ldp	d8, d9, [sp, #48]
   43fcc:	fmadd	s5, s7, s2, s5
   43fd0:	fmadd	s3, s6, s2, s3
   43fd4:	fmadd	s4, s5, s2, s4
   43fd8:	fmul	s3, s3, s2
   43fdc:	fmadd	s2, s4, s2, s17
   43fe0:	fmul	s1, s1, s3
   43fe4:	fdiv	s1, s1, s2
   43fe8:	fadd	s0, s0, s1
   43fec:	ldr	x19, [x19, #4032]
   43ff0:	ldr	x1, [sp, #72]
   43ff4:	ldr	x0, [x19]
   43ff8:	eor	x0, x1, x0
   43ffc:	cbnz	x0, 44148 <__j1f_finite@GLIBC_2.17+0x258>
   44000:	ldp	x19, x20, [sp, #16]
   44004:	ldr	x21, [sp, #32]
   44008:	ldp	x29, x30, [sp], #80
   4400c:	ret
   44010:	stp	d8, d9, [sp, #48]
   44014:	fabs	s8, s0
   44018:	add	x0, sp, #0x40
   4401c:	add	x1, sp, #0x44
   44020:	str	d10, [sp, #40]
   44024:	fmov	s0, s8
   44028:	bl	483f0 <sincosf@@GLIBC_2.17>
   4402c:	ldp	s0, s9, [sp, #64]
   44030:	mov	w0, #0x7effffff            	// #2130706431
   44034:	cmp	w20, w0
   44038:	fneg	s1, s0
   4403c:	fsub	s10, s0, s9
   44040:	fsub	s9, s1, s9
   44044:	b.le	440bc <__j1f_finite@GLIBC_2.17+0x1cc>
   44048:	fsqrt	s23, s8
   4404c:	mov	w0, #0x48000000            	// #1207959552
   44050:	cmp	w20, w0
   44054:	b.gt	440a4 <__j1f_finite@GLIBC_2.17+0x1b4>
   44058:	fmov	s0, s8
   4405c:	bl	43aa8 <__y0f_finite@GLIBC_2.17+0x270>
   44060:	fmov	s1, s0
   44064:	fmov	s0, s8
   44068:	fmov	s8, s1
   4406c:	bl	43d50 <__y0f_finite@GLIBC_2.17+0x518>
   44070:	fmul	s1, s9, s0
   44074:	fnmsub	s0, s10, s8, s1
   44078:	mov	w0, #0x6ebb                	// #28347
   4407c:	movk	w0, #0x3f10, lsl #16
   44080:	fmov	s2, w0
   44084:	fmul	s0, s0, s2
   44088:	fdiv	s0, s0, s23
   4408c:	fneg	s1, s0
   44090:	cmp	w21, #0x0
   44094:	ldr	d10, [sp, #40]
   44098:	ldp	d8, d9, [sp, #48]
   4409c:	fcsel	s0, s1, s0, lt  // lt = tstop
   440a0:	b	43fec <__j1f_finite@GLIBC_2.17+0xfc>
   440a4:	mov	w0, #0x6ebb                	// #28347
   440a8:	movk	w0, #0x3f10, lsl #16
   440ac:	fmov	s0, w0
   440b0:	fmul	s0, s10, s0
   440b4:	fdiv	s0, s0, s23
   440b8:	b	4408c <__j1f_finite@GLIBC_2.17+0x19c>
   440bc:	fadd	s0, s8, s8
   440c0:	bl	466d0 <cosf@@GLIBC_2.17>
   440c4:	ldp	s1, s2, [sp, #64]
   440c8:	fmul	s1, s1, s2
   440cc:	fcmpe	s1, #0.0
   440d0:	b.le	44140 <__j1f_finite@GLIBC_2.17+0x250>
   440d4:	fdiv	s10, s0, s9
   440d8:	b	44048 <__j1f_finite@GLIBC_2.17+0x158>
   440dc:	fmov	s0, #1.000000000000000000e+00
   440e0:	fdiv	s0, s0, s1
   440e4:	b	43fec <__j1f_finite@GLIBC_2.17+0xfc>
   440e8:	mov	w0, #0xf2ca                	// #62154
   440ec:	fmov	s3, #1.000000000000000000e+00
   440f0:	movk	w0, #0x7149, lsl #16
   440f4:	fmov	s2, w0
   440f8:	fadd	s2, s1, s2
   440fc:	fcmpe	s2, s3
   44100:	b.le	43f44 <__j1f_finite@GLIBC_2.17+0x54>
   44104:	fabs	s3, s0
   44108:	movi	v2.2s, #0x80, lsl #16
   4410c:	fcmpe	s3, s2
   44110:	b.pl	44118 <__j1f_finite@GLIBC_2.17+0x228>  // b.nfrst
   44114:	fmul	s2, s0, s0
   44118:	fcmp	s0, #0.0
   4411c:	movi	v2.2s, #0x0
   44120:	fccmp	s1, s2, #0x4, eq  // eq = none
   44124:	b.eq	43fec <__j1f_finite@GLIBC_2.17+0xfc>  // b.none
   44128:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4412c:	ldr	x0, [x0, #3976]
   44130:	mrs	x1, tpidr_el0
   44134:	mov	w2, #0x22                  	// #34
   44138:	str	w2, [x1, x0]
   4413c:	b	43fec <__j1f_finite@GLIBC_2.17+0xfc>
   44140:	fdiv	s9, s0, s10
   44144:	b	44048 <__j1f_finite@GLIBC_2.17+0x158>
   44148:	str	d10, [sp, #40]
   4414c:	stp	d8, d9, [sp, #48]
   44150:	bl	ba70 <__stack_chk_fail@plt>
   44154:	nop

0000000000044158 <__y1f_finite@GLIBC_2.17>:
   44158:	stp	x29, x30, [sp, #-96]!
   4415c:	mov	w1, #0x7f7fffff            	// #2139095039
   44160:	mov	x29, sp
   44164:	stp	x19, x20, [sp, #16]
   44168:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4416c:	ldr	x0, [x19, #4032]
   44170:	stp	d8, d9, [sp, #48]
   44174:	fmov	s8, s0
   44178:	ldr	x2, [x0]
   4417c:	str	x2, [sp, #88]
   44180:	mov	x2, #0x0                   	// #0
   44184:	fmov	w0, s0
   44188:	and	w20, w0, #0x7fffffff
   4418c:	cmp	w20, w1
   44190:	b.gt	4436c <__y1f_finite@GLIBC_2.17+0x214>
   44194:	cbz	w20, 4437c <__y1f_finite@GLIBC_2.17+0x224>
   44198:	tbnz	w0, #31, 4438c <__y1f_finite@GLIBC_2.17+0x234>
   4419c:	tbnz	w0, #30, 442a4 <__y1f_finite@GLIBC_2.17+0x14c>
   441a0:	mov	w0, #0x33000000            	// #855638016
   441a4:	cmp	w20, w0
   441a8:	b.le	443a4 <__y1f_finite@GLIBC_2.17+0x24c>
   441ac:	fmul	s1, s0, s0
   441b0:	mov	w0, #0x81cf                	// #33231
   441b4:	movk	w0, #0x2d92, lsl #16
   441b8:	fmov	s16, w0
   441bc:	mov	w0, #0xf8eb                	// #63723
   441c0:	adrp	x1, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   441c4:	movk	w0, #0x31d5, lsl #16
   441c8:	fmov	s6, w0
   441cc:	fmadd	s16, s1, s16, s6
   441d0:	mov	w0, #0x6003                	// #24579
   441d4:	movk	w0, #0xb3c5, lsl #16
   441d8:	fmov	s7, w0
   441dc:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   441e0:	ldr	s4, [x1, #572]
   441e4:	mov	w1, #0x9e3c                	// #40508
   441e8:	fmov	s9, #1.000000000000000000e+00
   441ec:	ldr	s6, [x0, #568]
   441f0:	mov	w0, #0x581c                	// #22556
   441f4:	movk	w0, #0x37c5, lsl #16
   441f8:	fmov	s5, w0
   441fc:	fmadd	s7, s1, s7, s5
   44200:	mov	w0, #0xaf2a                	// #44842
   44204:	movk	w0, #0xbafa, lsl #16
   44208:	fmov	s5, w0
   4420c:	fmadd	s6, s16, s1, s6
   44210:	mov	w0, #0x286a                	// #10346
   44214:	movk	w1, #0x3d4e, lsl #16
   44218:	movk	w0, #0x3ca3, lsl #16
   4421c:	fmov	s3, w1
   44220:	stp	d10, d11, [sp, #64]
   44224:	fmov	s2, w0
   44228:	mov	w0, #0xc331                	// #49969
   4422c:	movk	w0, #0xbe48, lsl #16
   44230:	fmov	s10, w0
   44234:	fmadd	s5, s7, s1, s5
   44238:	fmadd	s4, s6, s1, s4
   4423c:	fmadd	s3, s5, s1, s3
   44240:	fmadd	s2, s4, s1, s2
   44244:	fmadd	s10, s3, s1, s10
   44248:	fmadd	s1, s2, s1, s9
   4424c:	fdiv	s10, s10, s1
   44250:	bl	43ef0 <__j1f_finite@GLIBC_2.17>
   44254:	fmov	s11, s0
   44258:	fmov	s0, s8
   4425c:	bl	45298 <__logf_finite@GLIBC_2.17>
   44260:	fdiv	s9, s9, s8
   44264:	mov	w0, #0xf983                	// #63875
   44268:	movk	w0, #0x3f22, lsl #16
   4426c:	fmov	s1, w0
   44270:	fnmsub	s0, s11, s0, s9
   44274:	fmul	s0, s0, s1
   44278:	fmadd	s0, s10, s8, s0
   4427c:	ldp	d10, d11, [sp, #64]
   44280:	ldr	x19, [x19, #4032]
   44284:	ldr	x1, [sp, #88]
   44288:	ldr	x0, [x19]
   4428c:	eor	x0, x1, x0
   44290:	cbnz	x0, 443fc <__y1f_finite@GLIBC_2.17+0x2a4>
   44294:	ldp	x19, x20, [sp, #16]
   44298:	ldp	d8, d9, [sp, #48]
   4429c:	ldp	x29, x30, [sp], #96
   442a0:	ret
   442a4:	stp	x21, x22, [sp, #32]
   442a8:	stp	d10, d11, [sp, #64]
   442ac:	mrs	x21, fpcr
   442b0:	ands	w22, w21, #0xc00000
   442b4:	b.ne	443f0 <__y1f_finite@GLIBC_2.17+0x298>  // b.any
   442b8:	fmov	s0, s8
   442bc:	add	x0, sp, #0x50
   442c0:	add	x1, sp, #0x54
   442c4:	bl	483f0 <sincosf@@GLIBC_2.17>
   442c8:	ldp	s1, s10, [sp, #80]
   442cc:	mov	w0, #0x7effffff            	// #2130706431
   442d0:	cmp	w20, w0
   442d4:	fneg	s0, s1
   442d8:	fsub	s9, s1, s10
   442dc:	fsub	s10, s0, s10
   442e0:	b.le	4434c <__y1f_finite@GLIBC_2.17+0x1f4>
   442e4:	fsqrt	s11, s8
   442e8:	mov	w0, #0x48000000            	// #1207959552
   442ec:	cmp	w20, w0
   442f0:	b.le	44318 <__y1f_finite@GLIBC_2.17+0x1c0>
   442f4:	mov	w0, #0x6ebb                	// #28347
   442f8:	movk	w0, #0x3f10, lsl #16
   442fc:	fmov	s0, w0
   44300:	fmul	s0, s10, s0
   44304:	fdiv	s0, s0, s11
   44308:	cbnz	w22, 443e0 <__y1f_finite@GLIBC_2.17+0x288>
   4430c:	ldp	x21, x22, [sp, #32]
   44310:	ldp	d10, d11, [sp, #64]
   44314:	b	44280 <__y1f_finite@GLIBC_2.17+0x128>
   44318:	fmov	s0, s8
   4431c:	bl	43aa8 <__y0f_finite@GLIBC_2.17+0x270>
   44320:	fmov	s23, s0
   44324:	fmov	s0, s8
   44328:	bl	43d50 <__y0f_finite@GLIBC_2.17+0x518>
   4432c:	fmul	s1, s9, s0
   44330:	fmadd	s0, s10, s23, s1
   44334:	mov	w0, #0x6ebb                	// #28347
   44338:	movk	w0, #0x3f10, lsl #16
   4433c:	fmov	s8, w0
   44340:	fmul	s0, s0, s8
   44344:	fdiv	s0, s0, s11
   44348:	b	44308 <__y1f_finite@GLIBC_2.17+0x1b0>
   4434c:	fadd	s0, s8, s8
   44350:	bl	466d0 <cosf@@GLIBC_2.17>
   44354:	ldp	s1, s2, [sp, #80]
   44358:	fmul	s1, s1, s2
   4435c:	fcmpe	s1, #0.0
   44360:	b.le	4439c <__y1f_finite@GLIBC_2.17+0x244>
   44364:	fdiv	s9, s0, s10
   44368:	b	442e4 <__y1f_finite@GLIBC_2.17+0x18c>
   4436c:	fmadd	s0, s0, s0, s0
   44370:	fmov	s8, #1.000000000000000000e+00
   44374:	fdiv	s0, s8, s0
   44378:	b	44280 <__y1f_finite@GLIBC_2.17+0x128>
   4437c:	movi	v0.2s, #0x0
   44380:	fmov	s8, #-1.000000000000000000e+00
   44384:	fdiv	s0, s8, s0
   44388:	b	44280 <__y1f_finite@GLIBC_2.17+0x128>
   4438c:	movi	v0.2s, #0x0
   44390:	fmul	s8, s8, s0
   44394:	fdiv	s0, s0, s8
   44398:	b	44280 <__y1f_finite@GLIBC_2.17+0x128>
   4439c:	fdiv	s10, s0, s9
   443a0:	b	442e4 <__y1f_finite@GLIBC_2.17+0x18c>
   443a4:	mov	w0, #0xf983                	// #63875
   443a8:	movk	w0, #0xbf22, lsl #16
   443ac:	fmov	s0, w0
   443b0:	mov	w0, #0x7f7fffff            	// #2139095039
   443b4:	fmov	s1, w0
   443b8:	fdiv	s0, s0, s8
   443bc:	fabs	s2, s0
   443c0:	fcmp	s2, s1
   443c4:	b.le	44280 <__y1f_finite@GLIBC_2.17+0x128>
   443c8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   443cc:	ldr	x0, [x0, #3976]
   443d0:	mrs	x1, tpidr_el0
   443d4:	mov	w2, #0x22                  	// #34
   443d8:	str	w2, [x1, x0]
   443dc:	b	44280 <__y1f_finite@GLIBC_2.17+0x128>
   443e0:	msr	fpcr, x21
   443e4:	ldp	x21, x22, [sp, #32]
   443e8:	ldp	d10, d11, [sp, #64]
   443ec:	b	44280 <__y1f_finite@GLIBC_2.17+0x128>
   443f0:	eor	w0, w22, w21
   443f4:	msr	fpcr, x0
   443f8:	b	442b8 <__y1f_finite@GLIBC_2.17+0x160>
   443fc:	stp	x21, x22, [sp, #32]
   44400:	stp	d10, d11, [sp, #64]
   44404:	bl	ba70 <__stack_chk_fail@plt>

0000000000044408 <__jnf_finite@GLIBC_2.17>:
   44408:	stp	x29, x30, [sp, #-96]!
   4440c:	mov	w2, #0x7f800000            	// #2139095040
   44410:	mov	x29, sp
   44414:	stp	x19, x20, [sp, #16]
   44418:	mov	w19, w0
   4441c:	fmov	w0, s0
   44420:	stp	d10, d11, [sp, #80]
   44424:	fmov	s10, s0
   44428:	and	w1, w0, #0x7fffffff
   4442c:	cmp	w1, w2
   44430:	b.gt	44700 <__jnf_finite@GLIBC_2.17+0x2f8>
   44434:	cmp	w19, #0x0
   44438:	b.lt	44530 <__jnf_finite@GLIBC_2.17+0x128>  // b.tstop
   4443c:	b.eq	446a4 <__jnf_finite@GLIBC_2.17+0x29c>  // b.none
   44440:	cmp	w19, #0x1
   44444:	b.eq	44778 <__jnf_finite@GLIBC_2.17+0x370>  // b.none
   44448:	fabs	s10, s10
   4444c:	stp	x21, x22, [sp, #32]
   44450:	and	w21, w19, w0, lsr #31
   44454:	str	x23, [sp, #48]
   44458:	mrs	x22, fpcr
   4445c:	ands	w23, w22, #0xc00000
   44460:	b.ne	4478c <__jnf_finite@GLIBC_2.17+0x384>  // b.any
   44464:	cmp	w1, #0x0
   44468:	mov	w0, #0x7f800000            	// #2139095040
   4446c:	ccmp	w1, w0, #0x4, ne  // ne = any
   44470:	b.eq	44798 <__jnf_finite@GLIBC_2.17+0x390>  // b.none
   44474:	stp	d8, d9, [sp, #64]
   44478:	scvtf	s9, w19
   4447c:	fcmpe	s9, s10
   44480:	b.ls	44658 <__jnf_finite@GLIBC_2.17+0x250>  // b.plast
   44484:	mov	w0, #0x307fffff            	// #813694975
   44488:	cmp	w1, w0
   4448c:	b.gt	44540 <__jnf_finite@GLIBC_2.17+0x138>
   44490:	movi	v0.2s, #0x0
   44494:	cmp	w19, #0x21
   44498:	b.gt	444d8 <__jnf_finite@GLIBC_2.17+0xd0>
   4449c:	fmov	s1, #5.000000000000000000e-01
   444a0:	add	w19, w19, #0x1
   444a4:	fmov	s2, #1.000000000000000000e+00
   444a8:	mov	w0, #0x2                   	// #2
   444ac:	fmul	s1, s10, s1
   444b0:	fmov	s0, s1
   444b4:	nop
   444b8:	scvtf	s3, w0
   444bc:	add	w0, w0, #0x1
   444c0:	fmul	s0, s0, s1
   444c4:	cmp	w19, w0
   444c8:	fmul	s2, s2, s3
   444cc:	b.ne	444b8 <__jnf_finite@GLIBC_2.17+0xb0>  // b.any
   444d0:	fdiv	s0, s0, s2
   444d4:	nop
   444d8:	fneg	s1, s0
   444dc:	cmp	w21, #0x0
   444e0:	fcsel	s0, s1, s0, ne  // ne = any
   444e4:	cbnz	w23, 447b8 <__jnf_finite@GLIBC_2.17+0x3b0>
   444e8:	fcmp	s0, #0.0
   444ec:	b.ne	446b4 <__jnf_finite@GLIBC_2.17+0x2ac>  // b.any
   444f0:	movi	v1.2s, #0x80, lsl #16
   444f4:	movi	v2.2s, #0x80, lsl #24
   444f8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   444fc:	ldr	x0, [x0, #3976]
   44500:	mrs	x1, tpidr_el0
   44504:	ldp	x21, x22, [sp, #32]
   44508:	mov	w2, #0x22                  	// #34
   4450c:	bif	v0.8b, v1.8b, v2.8b
   44510:	ldr	x23, [sp, #48]
   44514:	str	w2, [x1, x0]
   44518:	ldp	d8, d9, [sp, #64]
   4451c:	fmul	s0, s0, s1
   44520:	ldp	x19, x20, [sp, #16]
   44524:	ldp	d10, d11, [sp, #80]
   44528:	ldp	x29, x30, [sp], #96
   4452c:	ret
   44530:	fneg	s10, s0
   44534:	neg	w19, w19
   44538:	eor	w0, w0, #0x80000000
   4453c:	b	44440 <__jnf_finite@GLIBC_2.17+0x38>
   44540:	lsl	w20, w19, #1
   44544:	fmov	s5, #2.000000000000000000e+00
   44548:	fmov	s1, #-1.000000000000000000e+00
   4454c:	mov	w0, #0x6b28                	// #27432
   44550:	scvtf	s4, w20
   44554:	movk	w0, #0x4e6e, lsl #16
   44558:	fdiv	s5, s5, s10
   4455c:	fmov	s0, w0
   44560:	mov	w0, #0x1                   	// #1
   44564:	fdiv	s4, s4, s10
   44568:	fadd	s2, s4, s5
   4456c:	fmadd	s1, s4, s2, s1
   44570:	fcmpe	s1, s0
   44574:	b.pl	447c0 <__jnf_finite@GLIBC_2.17+0x3b8>  // b.nfrst
   44578:	fadd	s2, s2, s5
   4457c:	add	w0, w0, #0x1
   44580:	fnmsub	s3, s2, s1, s4
   44584:	fmov	s4, s1
   44588:	fcmpe	s3, s0
   4458c:	fmov	s1, s3
   44590:	b.mi	44578 <__jnf_finite@GLIBC_2.17+0x170>  // b.first
   44594:	add	w0, w0, w19
   44598:	lsl	w0, w0, #1
   4459c:	movi	v8.2s, #0x0
   445a0:	fmov	s1, #1.000000000000000000e+00
   445a4:	nop
   445a8:	scvtf	s0, w0
   445ac:	sub	w0, w0, #0x2
   445b0:	cmp	w20, w0
   445b4:	fdiv	s0, s0, s10
   445b8:	fsub	s8, s0, s8
   445bc:	fdiv	s8, s1, s8
   445c0:	b.le	445a8 <__jnf_finite@GLIBC_2.17+0x1a0>
   445c4:	fmul	s0, s9, s5
   445c8:	sub	w19, w19, #0x1
   445cc:	sub	w20, w20, #0x2
   445d0:	fabs	s0, s0
   445d4:	bl	45298 <__logf_finite@GLIBC_2.17>
   445d8:	fmul	s9, s9, s0
   445dc:	mov	w0, #0x7180                	// #29056
   445e0:	movk	w0, #0x42b1, lsl #16
   445e4:	fmov	s1, w0
   445e8:	fcmpe	s9, s1
   445ec:	b.pl	44714 <__jnf_finite@GLIBC_2.17+0x30c>  // b.nfrst
   445f0:	scvtf	s1, w20
   445f4:	fmov	s2, s8
   445f8:	fmov	s11, #1.000000000000000000e+00
   445fc:	fmov	s3, #2.000000000000000000e+00
   44600:	b	44608 <__jnf_finite@GLIBC_2.17+0x200>
   44604:	fmov	s11, s9
   44608:	fmul	s0, s11, s1
   4460c:	subs	w19, w19, #0x1
   44610:	fsub	s1, s1, s3
   44614:	fdiv	s0, s0, s10
   44618:	fsub	s9, s0, s2
   4461c:	fmov	s2, s11
   44620:	b.ne	44604 <__jnf_finite@GLIBC_2.17+0x1fc>  // b.any
   44624:	fmov	s0, s10
   44628:	bl	435e8 <__j0f_finite@GLIBC_2.17>
   4462c:	fmov	s1, s0
   44630:	fmov	s0, s10
   44634:	fmov	s10, s1
   44638:	bl	43ef0 <__j1f_finite@GLIBC_2.17>
   4463c:	fabs	s2, s10
   44640:	fabs	s1, s0
   44644:	fcmpe	s2, s1
   44648:	b.lt	4476c <__jnf_finite@GLIBC_2.17+0x364>  // b.tstop
   4464c:	fmul	s0, s8, s10
   44650:	fdiv	s0, s0, s9
   44654:	b	444d8 <__jnf_finite@GLIBC_2.17+0xd0>
   44658:	fmov	s0, s10
   4465c:	lsl	w19, w19, #1
   44660:	bl	435e8 <__j0f_finite@GLIBC_2.17>
   44664:	fmov	s8, s0
   44668:	fmov	s0, s10
   4466c:	bl	43ef0 <__j1f_finite@GLIBC_2.17>
   44670:	fcvt	d1, s10
   44674:	mov	w0, #0x2                   	// #2
   44678:	scvtf	d3, w0
   4467c:	fcvt	d4, s0
   44680:	fcvt	d2, s8
   44684:	fmov	s8, s0
   44688:	add	w0, w0, #0x2
   4468c:	cmp	w19, w0
   44690:	fdiv	d0, d3, d1
   44694:	fnmsub	d0, d4, d0, d2
   44698:	fcvt	s0, d0
   4469c:	b.ne	44678 <__jnf_finite@GLIBC_2.17+0x270>  // b.any
   446a0:	b	444d8 <__jnf_finite@GLIBC_2.17+0xd0>
   446a4:	ldp	x19, x20, [sp, #16]
   446a8:	ldp	d10, d11, [sp, #80]
   446ac:	ldp	x29, x30, [sp], #96
   446b0:	b	435e8 <__j0f_finite@GLIBC_2.17>
   446b4:	fabs	s2, s0
   446b8:	movi	v1.2s, #0x80, lsl #16
   446bc:	fcmpe	s2, s1
   446c0:	b.pl	446e4 <__jnf_finite@GLIBC_2.17+0x2dc>  // b.nfrst
   446c4:	fmul	s1, s0, s0
   446c8:	ldp	x19, x20, [sp, #16]
   446cc:	ldp	x21, x22, [sp, #32]
   446d0:	ldr	x23, [sp, #48]
   446d4:	ldp	d8, d9, [sp, #64]
   446d8:	ldp	d10, d11, [sp, #80]
   446dc:	ldp	x29, x30, [sp], #96
   446e0:	ret
   446e4:	ldp	x19, x20, [sp, #16]
   446e8:	ldp	x21, x22, [sp, #32]
   446ec:	ldr	x23, [sp, #48]
   446f0:	ldp	d8, d9, [sp, #64]
   446f4:	ldp	d10, d11, [sp, #80]
   446f8:	ldp	x29, x30, [sp], #96
   446fc:	ret
   44700:	fadd	s0, s0, s0
   44704:	ldp	x19, x20, [sp, #16]
   44708:	ldp	d10, d11, [sp, #80]
   4470c:	ldp	x29, x30, [sp], #96
   44710:	ret
   44714:	mov	w0, #0x2f9                 	// #761
   44718:	scvtf	s0, w20
   4471c:	movk	w0, #0x5015, lsl #16
   44720:	fmov	s11, s8
   44724:	fmov	s2, w0
   44728:	fmov	s9, #1.000000000000000000e+00
   4472c:	fmov	s3, #2.000000000000000000e+00
   44730:	b	44748 <__jnf_finite@GLIBC_2.17+0x340>
   44734:	fdiv	s8, s8, s1
   44738:	fdiv	s11, s9, s1
   4473c:	fmov	s9, #1.000000000000000000e+00
   44740:	subs	w19, w19, #0x1
   44744:	b.eq	44624 <__jnf_finite@GLIBC_2.17+0x21c>  // b.none
   44748:	fmul	s1, s9, s0
   4474c:	fsub	s0, s0, s3
   44750:	fdiv	s1, s1, s10
   44754:	fsub	s1, s1, s11
   44758:	fmov	s11, s9
   4475c:	fcmpe	s1, s2
   44760:	b.gt	44734 <__jnf_finite@GLIBC_2.17+0x32c>
   44764:	fmov	s9, s1
   44768:	b	44740 <__jnf_finite@GLIBC_2.17+0x338>
   4476c:	fmul	s0, s8, s0
   44770:	fdiv	s0, s0, s11
   44774:	b	444d8 <__jnf_finite@GLIBC_2.17+0xd0>
   44778:	fmov	s0, s10
   4477c:	ldp	x19, x20, [sp, #16]
   44780:	ldp	d10, d11, [sp, #80]
   44784:	ldp	x29, x30, [sp], #96
   44788:	b	43ef0 <__j1f_finite@GLIBC_2.17>
   4478c:	eor	w0, w23, w22
   44790:	msr	fpcr, x0
   44794:	b	44464 <__jnf_finite@GLIBC_2.17+0x5c>
   44798:	movi	v0.2s, #0x80, lsl #24
   4479c:	movi	v1.2s, #0x0
   447a0:	cmp	w21, #0x0
   447a4:	fcsel	s0, s0, s1, ne  // ne = any
   447a8:	cbnz	w23, 447cc <__jnf_finite@GLIBC_2.17+0x3c4>
   447ac:	ldp	x21, x22, [sp, #32]
   447b0:	ldr	x23, [sp, #48]
   447b4:	b	44520 <__jnf_finite@GLIBC_2.17+0x118>
   447b8:	msr	fpcr, x22
   447bc:	b	444e8 <__jnf_finite@GLIBC_2.17+0xe0>
   447c0:	add	w0, w19, #0x1
   447c4:	lsl	w0, w0, #1
   447c8:	b	4459c <__jnf_finite@GLIBC_2.17+0x194>
   447cc:	msr	fpcr, x22
   447d0:	ldp	x21, x22, [sp, #32]
   447d4:	ldr	x23, [sp, #48]
   447d8:	b	44520 <__jnf_finite@GLIBC_2.17+0x118>
   447dc:	nop

00000000000447e0 <__ynf_finite@GLIBC_2.17>:
   447e0:	stp	x29, x30, [sp, #-64]!
   447e4:	fmov	w1, s0
   447e8:	mov	w2, #0x7f800000            	// #2139095040
   447ec:	mov	x29, sp
   447f0:	stp	x19, x20, [sp, #16]
   447f4:	mov	w19, w0
   447f8:	and	w0, w1, #0x7fffffff
   447fc:	stp	d8, d9, [sp, #48]
   44800:	cmp	w0, w2
   44804:	fmov	s8, s0
   44808:	b.gt	44970 <__ynf_finite@GLIBC_2.17+0x190>
   4480c:	cmp	w19, #0x0
   44810:	b.lt	44920 <__ynf_finite@GLIBC_2.17+0x140>  // b.tstop
   44814:	mov	w20, #0x1                   	// #1
   44818:	b.eq	44948 <__ynf_finite@GLIBC_2.17+0x168>  // b.none
   4481c:	cbz	w0, 44984 <__ynf_finite@GLIBC_2.17+0x1a4>
   44820:	tbnz	w1, #31, 4499c <__ynf_finite@GLIBC_2.17+0x1bc>
   44824:	stp	x21, x22, [sp, #32]
   44828:	mrs	x21, fpcr
   4482c:	ands	w22, w21, #0xc00000
   44830:	b.ne	449ac <__ynf_finite@GLIBC_2.17+0x1cc>  // b.any
   44834:	cmp	w19, #0x1
   44838:	b.eq	44958 <__ynf_finite@GLIBC_2.17+0x178>  // b.none
   4483c:	mov	w1, #0x7f800000            	// #2139095040
   44840:	cmp	w0, w1
   44844:	b.eq	449d8 <__ynf_finite@GLIBC_2.17+0x1f8>  // b.none
   44848:	fmov	s0, s8
   4484c:	bl	43838 <__y0f_finite@GLIBC_2.17>
   44850:	fmov	s9, s0
   44854:	fmov	s0, s8
   44858:	bl	44158 <__y1f_finite@GLIBC_2.17>
   4485c:	fmov	w1, s0
   44860:	cmp	w19, #0x1
   44864:	mov	w0, #0xff800000            	// #-8388608
   44868:	fmov	s2, s0
   4486c:	ccmp	w1, w0, #0x4, gt
   44870:	b.eq	448b8 <__ynf_finite@GLIBC_2.17+0xd8>  // b.none
   44874:	fcvt	d3, s8
   44878:	mov	w2, #0x1                   	// #1
   4487c:	nop
   44880:	lsl	w1, w2, #1
   44884:	fcvt	d4, s2
   44888:	fcvt	d0, s9
   4488c:	add	w2, w2, #0x1
   44890:	scvtf	d1, w1
   44894:	cmp	w2, w19
   44898:	fmov	s9, s2
   4489c:	fdiv	d1, d1, d3
   448a0:	fnmsub	d0, d1, d4, d0
   448a4:	fcvt	s0, d0
   448a8:	fmov	w1, s0
   448ac:	fmov	s2, s0
   448b0:	ccmp	w1, w0, #0x4, lt  // lt = tstop
   448b4:	b.ne	44880 <__ynf_finite@GLIBC_2.17+0xa0>  // b.any
   448b8:	fabs	s2, s0
   448bc:	mov	w0, #0x7f7fffff            	// #2139095039
   448c0:	fmov	s1, w0
   448c4:	fcmp	s2, s1
   448c8:	b.ls	448e0 <__ynf_finite@GLIBC_2.17+0x100>  // b.plast
   448cc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   448d0:	ldr	x0, [x0, #3976]
   448d4:	mrs	x1, tpidr_el0
   448d8:	mov	w2, #0x22                  	// #34
   448dc:	str	w2, [x1, x0]
   448e0:	fneg	s1, s0
   448e4:	cmp	w20, #0x1
   448e8:	fcsel	s0, s1, s0, ne  // ne = any
   448ec:	cbnz	w22, 449e4 <__ynf_finite@GLIBC_2.17+0x204>
   448f0:	mov	w0, #0x7f7fffff            	// #2139095039
   448f4:	fmov	s1, w0
   448f8:	fcmp	s2, s1
   448fc:	b.le	44934 <__ynf_finite@GLIBC_2.17+0x154>
   44900:	movi	v2.2s, #0x80, lsl #24
   44904:	ldp	x21, x22, [sp, #32]
   44908:	bif	v0.8b, v1.8b, v2.8b
   4490c:	fmul	s0, s0, s1
   44910:	ldp	x19, x20, [sp, #16]
   44914:	ldp	d8, d9, [sp, #48]
   44918:	ldp	x29, x30, [sp], #64
   4491c:	ret
   44920:	neg	w19, w19
   44924:	mov	w20, #0x1                   	// #1
   44928:	ubfiz	w2, w19, #1, #1
   4492c:	sub	w20, w20, w2
   44930:	b	4481c <__ynf_finite@GLIBC_2.17+0x3c>
   44934:	ldp	x19, x20, [sp, #16]
   44938:	ldp	x21, x22, [sp, #32]
   4493c:	ldp	d8, d9, [sp, #48]
   44940:	ldp	x29, x30, [sp], #64
   44944:	ret
   44948:	ldp	x19, x20, [sp, #16]
   4494c:	ldp	d8, d9, [sp, #48]
   44950:	ldp	x29, x30, [sp], #64
   44954:	b	43838 <__y0f_finite@GLIBC_2.17>
   44958:	fmov	s0, s8
   4495c:	bl	44158 <__y1f_finite@GLIBC_2.17>
   44960:	scvtf	s1, w20
   44964:	fmul	s0, s1, s0
   44968:	fabs	s2, s0
   4496c:	b	448f0 <__ynf_finite@GLIBC_2.17+0x110>
   44970:	fadd	s0, s0, s0
   44974:	ldp	x19, x20, [sp, #16]
   44978:	ldp	d8, d9, [sp, #48]
   4497c:	ldp	x29, x30, [sp], #64
   44980:	ret
   44984:	fmov	s0, w20
   44988:	neg	v1.2s, v0.2s
   4498c:	movi	v0.2s, #0x0
   44990:	scvtf	s1, s1
   44994:	fdiv	s0, s1, s0
   44998:	b	44910 <__ynf_finite@GLIBC_2.17+0x130>
   4499c:	movi	v1.2s, #0x0
   449a0:	fmul	s0, s8, s1
   449a4:	fdiv	s0, s1, s0
   449a8:	b	44910 <__ynf_finite@GLIBC_2.17+0x130>
   449ac:	eor	w1, w22, w21
   449b0:	msr	fpcr, x1
   449b4:	cmp	w19, #0x1
   449b8:	b.eq	449ec <__ynf_finite@GLIBC_2.17+0x20c>  // b.none
   449bc:	mov	w1, #0x7f800000            	// #2139095040
   449c0:	cmp	w0, w1
   449c4:	b.ne	44848 <__ynf_finite@GLIBC_2.17+0x68>  // b.any
   449c8:	msr	fpcr, x21
   449cc:	movi	v0.2s, #0x0
   449d0:	ldp	x21, x22, [sp, #32]
   449d4:	b	44910 <__ynf_finite@GLIBC_2.17+0x130>
   449d8:	movi	v0.2s, #0x0
   449dc:	ldp	x21, x22, [sp, #32]
   449e0:	b	44910 <__ynf_finite@GLIBC_2.17+0x130>
   449e4:	msr	fpcr, x21
   449e8:	b	448f0 <__ynf_finite@GLIBC_2.17+0x110>
   449ec:	fmov	s0, s8
   449f0:	bl	44158 <__y1f_finite@GLIBC_2.17>
   449f4:	scvtf	s1, w20
   449f8:	fmul	s0, s1, s0
   449fc:	msr	fpcr, x21
   44a00:	fabs	s2, s0
   44a04:	b	448f0 <__ynf_finite@GLIBC_2.17+0x110>

0000000000044a08 <__lgammaf_r_finite@GLIBC_2.17>:
   44a08:	stp	x29, x30, [sp, #-64]!
   44a0c:	mov	w2, #0x1                   	// #1
   44a10:	mov	w1, #0x7f7fffff            	// #2139095039
   44a14:	mov	x29, sp
   44a18:	str	x21, [sp, #32]
   44a1c:	fmov	w21, s0
   44a20:	stp	x19, x20, [sp, #16]
   44a24:	stp	d8, d9, [sp, #48]
   44a28:	fmov	s8, s0
   44a2c:	and	w19, w21, #0x7fffffff
   44a30:	str	w2, [x0]
   44a34:	cmp	w19, w1
   44a38:	b.gt	44e3c <__lgammaf_r_finite@GLIBC_2.17+0x434>
   44a3c:	mov	x20, x0
   44a40:	cbz	w19, 44e58 <__lgammaf_r_finite@GLIBC_2.17+0x450>
   44a44:	mov	w1, #0x307fffff            	// #813694975
   44a48:	cmp	w19, w1
   44a4c:	b.le	44e74 <__lgammaf_r_finite@GLIBC_2.17+0x46c>
   44a50:	tbnz	w21, #31, 44ba8 <__lgammaf_r_finite@GLIBC_2.17+0x1a0>
   44a54:	mov	w0, #0xc0800000            	// #-1065353216
   44a58:	add	w0, w19, w0
   44a5c:	movi	v9.2s, #0x0
   44a60:	tst	w0, #0xff7fffff
   44a64:	b.eq	44c48 <__lgammaf_r_finite@GLIBC_2.17+0x240>  // b.none
   44a68:	str	d10, [sp, #40]
   44a6c:	tbz	w21, #30, 44c60 <__lgammaf_r_finite@GLIBC_2.17+0x258>
   44a70:	mov	w0, #0x40ffffff            	// #1090519039
   44a74:	cmp	w19, w0
   44a78:	b.gt	44eec <__lgammaf_r_finite@GLIBC_2.17+0x4e4>
   44a7c:	fcvtzs	w1, s8
   44a80:	mov	w0, #0xff67                	// #65383
   44a84:	movk	w0, #0x3805, lsl #16
   44a88:	fmov	s1, w0
   44a8c:	mov	w0, #0x35b4                	// #13748
   44a90:	fmov	s19, #5.000000000000000000e-01
   44a94:	movk	w0, #0x3af1, lsl #16
   44a98:	fmov	s18, w0
   44a9c:	mov	w0, #0xd7bd                	// #55229
   44aa0:	scvtf	s2, w1
   44aa4:	movk	w0, #0x36f5, lsl #16
   44aa8:	fmov	s0, w0
   44aac:	mov	w0, #0xeed6                	// #61142
   44ab0:	movk	w0, #0x3a4b, lsl #16
   44ab4:	fmov	s17, w0
   44ab8:	mov	w0, #0x40e4                	// #16612
   44abc:	cmp	w1, #0x5
   44ac0:	fsub	s8, s8, s2
   44ac4:	movk	w0, #0x3cda, lsl #16
   44ac8:	fmov	s16, w0
   44acc:	mov	w0, #0xbf54                	// #48980
   44ad0:	movk	w0, #0x3c98, lsl #16
   44ad4:	fmov	s7, w0
   44ad8:	mov	w0, #0xdce6                	// #56550
   44adc:	fmadd	s18, s8, s1, s18
   44ae0:	fmadd	s17, s8, s0, s17
   44ae4:	movk	w0, #0x3e15, lsl #16
   44ae8:	fmov	s6, w0
   44aec:	mov	w0, #0xf6e                 	// #3950
   44af0:	fmov	s0, #1.000000000000000000e+00
   44af4:	movk	w0, #0x3e30, lsl #16
   44af8:	fmov	s5, w0
   44afc:	mov	w0, #0xcc7a                	// #52346
   44b00:	movk	w0, #0x3ea6, lsl #16
   44b04:	fmov	s4, w0
   44b08:	mov	w0, #0xd0c5                	// #53445
   44b0c:	movk	w0, #0x3f38, lsl #16
   44b10:	fmov	s3, w0
   44b14:	fmadd	s16, s18, s8, s16
   44b18:	fmadd	s7, s17, s8, s7
   44b1c:	mov	w0, #0x245a                	// #9306
   44b20:	movk	w0, #0x3e5c, lsl #16
   44b24:	fmov	s2, w0
   44b28:	mov	w0, #0x2d3b                	// #11579
   44b2c:	movk	w0, #0x3fb2, lsl #16
   44b30:	fmov	s1, w0
   44b34:	mov	w0, #0x233f                	// #9023
   44b38:	movk	w0, #0xbd9e, lsl #16
   44b3c:	fmov	s9, w0
   44b40:	fmadd	s6, s16, s8, s6
   44b44:	fmadd	s5, s7, s8, s5
   44b48:	fmadd	s4, s6, s8, s4
   44b4c:	fmadd	s3, s5, s8, s3
   44b50:	fmadd	s2, s4, s8, s2
   44b54:	fmadd	s1, s3, s8, s1
   44b58:	fmadd	s9, s2, s8, s9
   44b5c:	fmadd	s1, s1, s8, s0
   44b60:	fmul	s9, s9, s8
   44b64:	fdiv	s9, s9, s1
   44b68:	fmadd	s9, s8, s19, s9
   44b6c:	b.eq	44b98 <__lgammaf_r_finite@GLIBC_2.17+0x190>  // b.none
   44b70:	b.le	44e08 <__lgammaf_r_finite@GLIBC_2.17+0x400>
   44b74:	cmp	w1, #0x6
   44b78:	b.eq	44b8c <__lgammaf_r_finite@GLIBC_2.17+0x184>  // b.none
   44b7c:	cmp	w1, #0x7
   44b80:	b.ne	44dc0 <__lgammaf_r_finite@GLIBC_2.17+0x3b8>  // b.any
   44b84:	fmov	s0, #6.000000000000000000e+00
   44b88:	fadd	s0, s8, s0
   44b8c:	fmov	s1, #5.000000000000000000e+00
   44b90:	fadd	s1, s8, s1
   44b94:	fmul	s0, s1, s0
   44b98:	fmov	s1, #4.000000000000000000e+00
   44b9c:	fadd	s1, s8, s1
   44ba0:	fmul	s0, s1, s0
   44ba4:	b	44e18 <__lgammaf_r_finite@GLIBC_2.17+0x410>
   44ba8:	mov	w1, #0x4affffff            	// #1258291199
   44bac:	cmp	w19, w1
   44bb0:	b.gt	44de4 <__lgammaf_r_finite@GLIBC_2.17+0x3dc>
   44bb4:	mov	w1, #0xbfffffff            	// #-1073741825
   44bb8:	add	w1, w19, w1
   44bbc:	mov	w2, #0x16fffff             	// #24117247
   44bc0:	cmp	w1, w2
   44bc4:	b.cc	44e8c <__lgammaf_r_finite@GLIBC_2.17+0x484>  // b.lo, b.ul, b.last
   44bc8:	mov	w0, #0x3e7fffff            	// #1048575999
   44bcc:	cmp	w19, w0
   44bd0:	b.le	4515c <__lgammaf_r_finite@GLIBC_2.17+0x754>
   44bd4:	fneg	s0, s0
   44bd8:	frintm	s1, s0
   44bdc:	fcmp	s0, s1
   44be0:	b.ne	44f8c <__lgammaf_r_finite@GLIBC_2.17+0x584>  // b.any
   44be4:	movi	v0.2s, #0x4b, lsl #24
   44be8:	fsub	s0, s0, s8
   44bec:	fmov	w0, s0
   44bf0:	and	w0, w0, #0x1
   44bf4:	scvtf	s1, w0
   44bf8:	lsl	w1, w0, #2
   44bfc:	cmp	w1, #0x2
   44c00:	b.gt	45270 <__lgammaf_r_finite@GLIBC_2.17+0x868>
   44c04:	cbz	w1, 450f8 <__lgammaf_r_finite@GLIBC_2.17+0x6f0>
   44c08:	sub	w1, w1, #0x1
   44c0c:	cmp	w1, #0x1
   44c10:	b.hi	450bc <__lgammaf_r_finite@GLIBC_2.17+0x6b4>  // b.pmore
   44c14:	fmov	s0, #5.000000000000000000e-01
   44c18:	mov	w0, #0xfdb                 	// #4059
   44c1c:	movk	w0, #0x4049, lsl #16
   44c20:	fmov	s2, w0
   44c24:	fsub	s0, s0, s1
   44c28:	fmul	s0, s0, s2
   44c2c:	bl	466d0 <cosf@@GLIBC_2.17>
   44c30:	fneg	s9, s0
   44c34:	fcmp	s9, #0.0
   44c38:	b.ne	44ea0 <__lgammaf_r_finite@GLIBC_2.17+0x498>  // b.any
   44c3c:	fabs	s9, s9
   44c40:	fmov	s8, #1.000000000000000000e+00
   44c44:	fdiv	s9, s8, s9
   44c48:	fmov	s0, s9
   44c4c:	ldp	x19, x20, [sp, #16]
   44c50:	ldr	x21, [sp, #32]
   44c54:	ldp	d8, d9, [sp, #48]
   44c58:	ldp	x29, x30, [sp], #64
   44c5c:	ret
   44c60:	mov	w0, #0x6666                	// #26214
   44c64:	movk	w0, #0x3f66, lsl #16
   44c68:	cmp	w19, w0
   44c6c:	b.le	45134 <__lgammaf_r_finite@GLIBC_2.17+0x72c>
   44c70:	mov	w0, #0xa617                	// #42519
   44c74:	movk	w0, #0x3fdd, lsl #16
   44c78:	cmp	w19, w0
   44c7c:	b.gt	44fdc <__lgammaf_r_finite@GLIBC_2.17+0x5d4>
   44c80:	mov	w0, #0xa61f                	// #42527
   44c84:	movk	w0, #0x3f9d, lsl #16
   44c88:	cmp	w19, w0
   44c8c:	b.le	45178 <__lgammaf_r_finite@GLIBC_2.17+0x770>
   44c90:	mov	w0, #0x16c3                	// #5827
   44c94:	movi	v9.2s, #0x0
   44c98:	movk	w0, #0x3fbb, lsl #16
   44c9c:	fmov	s3, w0
   44ca0:	fsub	s3, s8, s3
   44ca4:	fmul	s19, s3, s3
   44ca8:	mov	w0, #0xe9f7                	// #59895
   44cac:	movk	w0, #0x39af, lsl #16
   44cb0:	fmov	s8, w0
   44cb4:	mov	w0, #0x3085                	// #12421
   44cb8:	mov	w1, #0xf476                	// #62582
   44cbc:	movk	w0, #0xba0d, lsl #16
   44cc0:	fmov	s6, w0
   44cc4:	fmul	s0, s19, s3
   44cc8:	mov	w0, #0xf927                	// #63783
   44ccc:	movk	w0, #0xb9a3, lsl #16
   44cd0:	fmov	s1, w0
   44cd4:	mov	w0, #0xf867                	// #63591
   44cd8:	movk	w1, #0xbab7, lsl #16
   44cdc:	movk	w0, #0x3a66, lsl #16
   44ce0:	fmov	s17, w0
   44ce4:	fmadd	s6, s0, s8, s6
   44ce8:	fmadd	s1, s0, s1, s17
   44cec:	mov	w0, #0x1699                	// #5785
   44cf0:	fmov	s16, w1
   44cf4:	movk	w0, #0x3b14, lsl #16
   44cf8:	fmov	s18, w0
   44cfc:	mov	w0, #0x7b6b                	// #31595
   44d00:	mov	w1, #0x373d                	// #14141
   44d04:	movk	w0, #0x39a5, lsl #16
   44d08:	mov	w2, #0xe707                	// #59143
   44d0c:	fmov	s4, w0
   44d10:	mov	w0, #0x77fe                	// #30718
   44d14:	movk	w0, #0xbb71, lsl #16
   44d18:	fmov	s17, w0
   44d1c:	fmadd	s4, s0, s4, s16
   44d20:	mov	w0, #0xfcfe                	// #64766
   44d24:	fmadd	s18, s6, s0, s18
   44d28:	fmadd	s17, s1, s0, s17
   44d2c:	movk	w0, #0xbc28, lsl #16
   44d30:	fmov	s8, w0
   44d34:	movk	w1, #0x3c93, lsl #16
   44d38:	movk	w2, #0x3bc7, lsl #16
   44d3c:	fmov	s7, w1
   44d40:	mov	w0, #0x5a15                	// #23061
   44d44:	movk	w0, #0x3d84, lsl #16
   44d48:	mov	w1, #0x4d47                	// #19783
   44d4c:	fmov	s16, w2
   44d50:	fmov	s5, w0
   44d54:	mov	w0, #0x213c                	// #8508
   44d58:	movk	w1, #0xbd06, lsl #16
   44d5c:	fmadd	s16, s4, s0, s16
   44d60:	movk	w0, #0xbe17, lsl #16
   44d64:	fmadd	s8, s18, s0, s8
   44d68:	fmadd	s7, s17, s0, s7
   44d6c:	fmov	s2, w0
   44d70:	fmov	s6, w1
   44d74:	mov	w0, #0xb95e                	// #47454
   44d78:	movk	w0, #0x3ef7, lsl #16
   44d7c:	fmov	s4, w0
   44d80:	mov	w0, #0x1c52                	// #7250
   44d84:	movk	w0, #0x31e6, lsl #16
   44d88:	fmov	s1, w0
   44d8c:	mov	w0, #0xcdcd                	// #52685
   44d90:	fmadd	s6, s16, s0, s6
   44d94:	movk	w0, #0x3df8, lsl #16
   44d98:	fmadd	s8, s8, s0, s5
   44d9c:	fmadd	s2, s7, s0, s2
   44da0:	fmov	s20, w0
   44da4:	fmadd	s4, s6, s0, s4
   44da8:	fmadd	s8, s8, s3, s2
   44dac:	fmsub	s0, s8, s0, s1
   44db0:	fnmsub	s8, s19, s4, s0
   44db4:	fsub	s8, s8, s20
   44db8:	fadd	s9, s8, s9
   44dbc:	nop
   44dc0:	tbz	w21, #31, 44e84 <__lgammaf_r_finite@GLIBC_2.17+0x47c>
   44dc4:	fsub	s9, s10, s9
   44dc8:	ldr	d10, [sp, #40]
   44dcc:	ldp	x19, x20, [sp, #16]
   44dd0:	ldr	x21, [sp, #32]
   44dd4:	fmov	s0, s9
   44dd8:	ldp	d8, d9, [sp, #48]
   44ddc:	ldp	x29, x30, [sp], #64
   44de0:	ret
   44de4:	fabs	s8, s0
   44de8:	movi	v9.2s, #0x0
   44dec:	ldp	x19, x20, [sp, #16]
   44df0:	ldr	x21, [sp, #32]
   44df4:	fdiv	s9, s8, s9
   44df8:	fmov	s0, s9
   44dfc:	ldp	d8, d9, [sp, #48]
   44e00:	ldp	x29, x30, [sp], #64
   44e04:	ret
   44e08:	cmp	w1, #0x3
   44e0c:	b.eq	44e24 <__lgammaf_r_finite@GLIBC_2.17+0x41c>  // b.none
   44e10:	cmp	w1, #0x4
   44e14:	b.ne	44dc0 <__lgammaf_r_finite@GLIBC_2.17+0x3b8>  // b.any
   44e18:	fmov	s1, #3.000000000000000000e+00
   44e1c:	fadd	s1, s8, s1
   44e20:	fmul	s0, s1, s0
   44e24:	fmov	s1, #2.000000000000000000e+00
   44e28:	fadd	s8, s8, s1
   44e2c:	fmul	s0, s8, s0
   44e30:	bl	45298 <__logf_finite@GLIBC_2.17>
   44e34:	fadd	s9, s9, s0
   44e38:	b	44dc0 <__lgammaf_r_finite@GLIBC_2.17+0x3b8>
   44e3c:	fmul	s9, s0, s0
   44e40:	ldp	x19, x20, [sp, #16]
   44e44:	ldr	x21, [sp, #32]
   44e48:	fmov	s0, s9
   44e4c:	ldp	d8, d9, [sp, #48]
   44e50:	ldp	x29, x30, [sp], #64
   44e54:	ret
   44e58:	tbz	w21, #31, 44e64 <__lgammaf_r_finite@GLIBC_2.17+0x45c>
   44e5c:	mov	w0, #0xffffffff            	// #-1
   44e60:	str	w0, [x20]
   44e64:	fabs	s8, s8
   44e68:	fmov	s9, #1.000000000000000000e+00
   44e6c:	fdiv	s9, s9, s8
   44e70:	b	44c48 <__lgammaf_r_finite@GLIBC_2.17+0x240>
   44e74:	tbnz	w21, #31, 450e0 <__lgammaf_r_finite@GLIBC_2.17+0x6d8>
   44e78:	bl	45298 <__logf_finite@GLIBC_2.17>
   44e7c:	fneg	s9, s0
   44e80:	b	44c48 <__lgammaf_r_finite@GLIBC_2.17+0x240>
   44e84:	ldr	d10, [sp, #40]
   44e88:	b	44c48 <__lgammaf_r_finite@GLIBC_2.17+0x240>
   44e8c:	ldp	x19, x20, [sp, #16]
   44e90:	ldr	x21, [sp, #32]
   44e94:	ldp	d8, d9, [sp, #48]
   44e98:	ldp	x29, x30, [sp], #64
   44e9c:	b	48a70 <ldexpf@@GLIBC_2.17+0x178>
   44ea0:	fmul	s0, s8, s9
   44ea4:	mov	w0, #0xfdb                 	// #4059
   44ea8:	movk	w0, #0x4049, lsl #16
   44eac:	fmov	s1, w0
   44eb0:	str	d10, [sp, #40]
   44eb4:	fabs	s0, s0
   44eb8:	fdiv	s0, s1, s0
   44ebc:	bl	45298 <__logf_finite@GLIBC_2.17>
   44ec0:	fcmpe	s9, #0.0
   44ec4:	fmov	s10, s0
   44ec8:	b.mi	45128 <__lgammaf_r_finite@GLIBC_2.17+0x720>  // b.first
   44ecc:	mov	w0, #0xc0800000            	// #-1065353216
   44ed0:	add	w0, w19, w0
   44ed4:	fneg	s8, s8
   44ed8:	movi	v9.2s, #0x0
   44edc:	tst	w0, #0xff7fffff
   44ee0:	b.eq	44dc4 <__lgammaf_r_finite@GLIBC_2.17+0x3bc>  // b.none
   44ee4:	tbnz	w21, #30, 44a70 <__lgammaf_r_finite@GLIBC_2.17+0x68>
   44ee8:	b	44c60 <__lgammaf_r_finite@GLIBC_2.17+0x258>
   44eec:	mov	w0, #0x4c7fffff            	// #1283457023
   44ef0:	fmov	s0, s8
   44ef4:	cmp	w19, w0
   44ef8:	b.gt	45114 <__lgammaf_r_finite@GLIBC_2.17+0x70c>
   44efc:	bl	45298 <__logf_finite@GLIBC_2.17>
   44f00:	fmov	s17, #1.000000000000000000e+00
   44f04:	fmov	s3, #5.000000000000000000e-01
   44f08:	mov	w0, #0xc4e8                	// #50408
   44f0c:	fdiv	s9, s17, s8
   44f10:	fsub	s8, s8, s3
   44f14:	movk	w0, #0xbad5, lsl #16
   44f18:	fmov	s16, w0
   44f1c:	mov	w0, #0x3dd2                	// #15826
   44f20:	fsub	s0, s0, s17
   44f24:	movk	w0, #0x3a5b, lsl #16
   44f28:	fmov	s7, w0
   44f2c:	mov	w0, #0x65c                 	// #1628
   44f30:	movk	w0, #0xba1c, lsl #16
   44f34:	fmov	s6, w0
   44f38:	mov	w0, #0xcfd                 	// #3325
   44f3c:	movk	w0, #0x3a50, lsl #16
   44f40:	fmov	s5, w0
   44f44:	mov	w0, #0xb61                 	// #2913
   44f48:	movk	w0, #0xbb36, lsl #16
   44f4c:	fmov	s4, w0
   44f50:	mov	w0, #0xaaab                	// #43691
   44f54:	movk	w0, #0x3daa, lsl #16
   44f58:	fmov	s2, w0
   44f5c:	mov	w0, #0x7f1d                	// #32541
   44f60:	movk	w0, #0x3ed6, lsl #16
   44f64:	fmov	s1, w0
   44f68:	fmul	s3, s9, s9
   44f6c:	fmadd	s7, s3, s16, s7
   44f70:	fmadd	s6, s7, s3, s6
   44f74:	fmadd	s5, s6, s3, s5
   44f78:	fmadd	s4, s5, s3, s4
   44f7c:	fmadd	s2, s4, s3, s2
   44f80:	fmadd	s1, s2, s9, s1
   44f84:	fmadd	s9, s8, s0, s1
   44f88:	b	44dc0 <__lgammaf_r_finite@GLIBC_2.17+0x3b8>
   44f8c:	fmov	s1, #5.000000000000000000e-01
   44f90:	fmul	s1, s0, s1
   44f94:	frintm	s0, s1
   44f98:	fsub	s1, s1, s0
   44f9c:	fadd	s1, s1, s1
   44fa0:	fcvtzs	w1, s1, #2
   44fa4:	cmp	w1, #0x4
   44fa8:	b.le	44bfc <__lgammaf_r_finite@GLIBC_2.17+0x1f4>
   44fac:	sub	w1, w1, #0x5
   44fb0:	cmp	w1, #0x1
   44fb4:	b.hi	450bc <__lgammaf_r_finite@GLIBC_2.17+0x6b4>  // b.pmore
   44fb8:	fmov	s2, #1.500000000000000000e+00
   44fbc:	mov	w0, #0xfdb                 	// #4059
   44fc0:	movk	w0, #0x4049, lsl #16
   44fc4:	fmov	s0, w0
   44fc8:	fsub	s1, s1, s2
   44fcc:	fmul	s0, s1, s0
   44fd0:	bl	466d0 <cosf@@GLIBC_2.17>
   44fd4:	fmov	s9, s0
   44fd8:	b	44c34 <__lgammaf_r_finite@GLIBC_2.17+0x22c>
   44fdc:	fmov	s1, #2.000000000000000000e+00
   44fe0:	movi	v9.2s, #0x0
   44fe4:	fsub	s1, s1, s8
   44fe8:	mov	w0, #0x83a2                	// #33698
   44fec:	fmul	s0, s1, s1
   44ff0:	movk	w0, #0x37d3, lsl #16
   44ff4:	fmov	s8, w0
   44ff8:	mov	w0, #0x9767                	// #38759
   44ffc:	mov	w1, #0x2c75                	// #11381
   45000:	movk	w0, #0x3967, lsl #16
   45004:	movk	w1, #0x383c, lsl #16
   45008:	fmov	s16, w0
   4500c:	fmov	s2, w1
   45010:	mov	w0, #0x8445                	// #33861
   45014:	fmadd	s8, s0, s8, s16
   45018:	movk	w0, #0x38e2, lsl #16
   4501c:	fmov	s7, w0
   45020:	fmadd	s2, s0, s2, s7
   45024:	mov	w0, #0x54a1                	// #21665
   45028:	movk	w0, #0x3a9c, lsl #16
   4502c:	fmov	s16, w0
   45030:	mov	w0, #0xb634                	// #46644
   45034:	fmov	s17, #5.000000000000000000e-01
   45038:	movk	w0, #0x3a05, lsl #16
   4503c:	fmov	s7, w0
   45040:	mov	w0, #0x27e                 	// #638
   45044:	movk	w0, #0x3bf2, lsl #16
   45048:	fmov	s6, w0
   4504c:	fmadd	s16, s8, s0, s16
   45050:	mov	w0, #0x6ec6                	// #28358
   45054:	movk	w0, #0x3b3d, lsl #16
   45058:	fmov	s5, w0
   4505c:	fmadd	s7, s2, s0, s7
   45060:	mov	w0, #0xf001                	// #61441
   45064:	movk	w0, #0x3d89, lsl #16
   45068:	fmov	s4, w0
   4506c:	mov	w0, #0x9915                	// #39189
   45070:	movk	w0, #0x3ca8, lsl #16
   45074:	fmov	s3, w0
   45078:	mov	w0, #0x233f                	// #9023
   4507c:	movk	w0, #0x3d9e, lsl #16
   45080:	fmov	s8, w0
   45084:	fmadd	s6, s16, s0, s6
   45088:	mov	w0, #0x1a66                	// #6758
   4508c:	movk	w0, #0x3ea5, lsl #16
   45090:	fmov	s2, w0
   45094:	fmadd	s5, s7, s0, s5
   45098:	fmadd	s4, s6, s0, s4
   4509c:	fmadd	s3, s5, s0, s3
   450a0:	fmadd	s8, s4, s0, s8
   450a4:	fmadd	s2, s3, s0, s2
   450a8:	fmul	s8, s8, s1
   450ac:	fmadd	s8, s2, s0, s8
   450b0:	fmsub	s8, s1, s17, s8
   450b4:	fadd	s9, s8, s9
   450b8:	b	44dc0 <__lgammaf_r_finite@GLIBC_2.17+0x3b8>
   450bc:	fmov	s2, #2.000000000000000000e+00
   450c0:	mov	w0, #0xfdb                 	// #4059
   450c4:	movk	w0, #0x4049, lsl #16
   450c8:	fmov	s0, w0
   450cc:	fsub	s1, s1, s2
   450d0:	fmul	s0, s1, s0
   450d4:	bl	47cd8 <sinf@@GLIBC_2.17>
   450d8:	fneg	s9, s0
   450dc:	b	44c34 <__lgammaf_r_finite@GLIBC_2.17+0x22c>
   450e0:	fneg	s0, s0
   450e4:	mov	w0, #0xffffffff            	// #-1
   450e8:	str	w0, [x20]
   450ec:	bl	45298 <__logf_finite@GLIBC_2.17>
   450f0:	fneg	s9, s0
   450f4:	b	44c48 <__lgammaf_r_finite@GLIBC_2.17+0x240>
   450f8:	mov	w0, #0xfdb                 	// #4059
   450fc:	movk	w0, #0x4049, lsl #16
   45100:	fmov	s0, w0
   45104:	fmul	s0, s1, s0
   45108:	bl	47cd8 <sinf@@GLIBC_2.17>
   4510c:	fneg	s9, s0
   45110:	b	44c34 <__lgammaf_r_finite@GLIBC_2.17+0x22c>
   45114:	bl	45298 <__logf_finite@GLIBC_2.17>
   45118:	fmov	s9, #1.000000000000000000e+00
   4511c:	fsub	s9, s0, s9
   45120:	fmul	s9, s9, s8
   45124:	b	44dc0 <__lgammaf_r_finite@GLIBC_2.17+0x3b8>
   45128:	mov	w0, #0xffffffff            	// #-1
   4512c:	str	w0, [x20]
   45130:	b	44ecc <__lgammaf_r_finite@GLIBC_2.17+0x4c4>
   45134:	fmov	s0, s8
   45138:	bl	45298 <__logf_finite@GLIBC_2.17>
   4513c:	fneg	s9, s0
   45140:	mov	w0, #0x4a1f                	// #18975
   45144:	movk	w0, #0x3f3b, lsl #16
   45148:	cmp	w19, w0
   4514c:	b.le	4524c <__lgammaf_r_finite@GLIBC_2.17+0x844>
   45150:	fmov	s1, #1.000000000000000000e+00
   45154:	fsub	s1, s1, s8
   45158:	b	44fe8 <__lgammaf_r_finite@GLIBC_2.17+0x5e0>
   4515c:	mov	w0, #0xfdb                 	// #4059
   45160:	movk	w0, #0x4049, lsl #16
   45164:	fmov	s0, w0
   45168:	fmul	s0, s8, s0
   4516c:	bl	47cd8 <sinf@@GLIBC_2.17>
   45170:	fmov	s9, s0
   45174:	b	44c34 <__lgammaf_r_finite@GLIBC_2.17+0x22c>
   45178:	fmov	s0, #1.000000000000000000e+00
   4517c:	movi	v9.2s, #0x0
   45180:	fsub	s8, s8, s0
   45184:	mov	w0, #0x3c5e                	// #15454
   45188:	fmov	s16, #1.000000000000000000e+00
   4518c:	movk	w0, #0x3c5b, lsl #16
   45190:	fmov	s0, w0
   45194:	mov	w0, #0x7578                	// #30072
   45198:	movk	w0, #0x3e6a, lsl #16
   4519c:	fmov	s6, w0
   451a0:	fmadd	s0, s8, s0, s6
   451a4:	mov	w0, #0xd5db                	// #54747
   451a8:	movk	w0, #0x3b52, lsl #16
   451ac:	fmov	s7, w0
   451b0:	mov	w0, #0x72af                	// #29359
   451b4:	movk	w0, #0x3dd5, lsl #16
   451b8:	fmov	s5, w0
   451bc:	fmadd	s7, s8, s7, s5
   451c0:	mov	w0, #0x4bb2                	// #19378
   451c4:	movk	w0, #0x3f7a, lsl #16
   451c8:	fmov	s6, w0
   451cc:	mov	w0, #0xefdf                	// #61407
   451d0:	movk	w0, #0x3f44, lsl #16
   451d4:	fmov	s5, w0
   451d8:	fmadd	s6, s0, s8, s6
   451dc:	mov	w0, #0x3ae7                	// #15079
   451e0:	movk	w0, #0x3fba, lsl #16
   451e4:	fmov	s4, w0
   451e8:	mov	w0, #0x392d                	// #14637
   451ec:	movk	w0, #0x4008, lsl #16
   451f0:	fmov	s3, w0
   451f4:	fmadd	s5, s7, s8, s5
   451f8:	mov	w0, #0xf4                  	// #244
   451fc:	movk	w0, #0x3f22, lsl #16
   45200:	fmov	s2, w0
   45204:	mov	w0, #0x2ebe                	// #11966
   45208:	fmov	s7, #-5.000000000000000000e-01
   4520c:	movk	w0, #0x401d, lsl #16
   45210:	fmov	s1, w0
   45214:	fmadd	s4, s6, s8, s4
   45218:	mov	w0, #0x233f                	// #9023
   4521c:	movk	w0, #0xbd9e, lsl #16
   45220:	fmov	s0, w0
   45224:	fmadd	s3, s5, s8, s3
   45228:	fmadd	s2, s4, s8, s2
   4522c:	fmadd	s1, s3, s8, s1
   45230:	fmadd	s0, s2, s8, s0
   45234:	fmadd	s1, s1, s8, s16
   45238:	fmul	s0, s0, s8
   4523c:	fdiv	s0, s0, s1
   45240:	fmadd	s8, s8, s7, s0
   45244:	fadd	s9, s8, s9
   45248:	b	44dc0 <__lgammaf_r_finite@GLIBC_2.17+0x3b8>
   4524c:	mov	w0, #0x3307                	// #13063
   45250:	movk	w0, #0x3e6d, lsl #16
   45254:	cmp	w19, w0
   45258:	b.le	45184 <__lgammaf_r_finite@GLIBC_2.17+0x77c>
   4525c:	mov	w0, #0x5b0c                	// #23308
   45260:	movk	w0, #0x3eec, lsl #16
   45264:	fmov	s3, w0
   45268:	fsub	s3, s8, s3
   4526c:	b	44ca4 <__lgammaf_r_finite@GLIBC_2.17+0x29c>
   45270:	fmov	s2, #1.000000000000000000e+00
   45274:	mov	w0, #0xfdb                 	// #4059
   45278:	movk	w0, #0x4049, lsl #16
   4527c:	fmov	s0, w0
   45280:	fsub	s1, s2, s1
   45284:	fmul	s0, s1, s0
   45288:	bl	47cd8 <sinf@@GLIBC_2.17>
   4528c:	fneg	s9, s0
   45290:	b	44c34 <__lgammaf_r_finite@GLIBC_2.17+0x22c>
   45294:	nop

0000000000045298 <__logf_finite@GLIBC_2.17>:
   45298:	fmov	w1, s0
   4529c:	mov	w0, #0x3f800000            	// #1065353216
   452a0:	fmov	s1, s0
   452a4:	cmp	w1, w0
   452a8:	b.eq	45328 <__logf_finite@GLIBC_2.17+0x90>  // b.none
   452ac:	sub	w2, w1, #0x800, lsl #12
   452b0:	mov	w0, #0x7effffff            	// #2130706431
   452b4:	cmp	w2, w0
   452b8:	b.hi	45330 <__logf_finite@GLIBC_2.17+0x98>  // b.pmore
   452bc:	mov	w0, #0xc0cd0000            	// #-1060306944
   452c0:	add	w0, w1, w0
   452c4:	and	w4, w0, #0xff800000
   452c8:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   452cc:	ubfx	x3, x0, #19, #4
   452d0:	add	x2, x2, #0xe8
   452d4:	sub	w1, w1, w4
   452d8:	fmov	s0, w1
   452dc:	lsl	x3, x3, #4
   452e0:	fmov	d2, #-1.000000000000000000e+00
   452e4:	fcvt	d0, s0
   452e8:	asr	w0, w0, #23
   452ec:	add	x1, x2, x3
   452f0:	ldr	d4, [x2, x3]
   452f4:	scvtf	d3, w0
   452f8:	ldp	d5, d1, [x2, #272]
   452fc:	fmadd	d0, d4, d0, d2
   45300:	ldr	d2, [x1, #8]
   45304:	ldp	d6, d4, [x2, #256]
   45308:	fmadd	d3, d3, d6, d2
   4530c:	fmadd	d1, d5, d0, d1
   45310:	fmul	d2, d0, d0
   45314:	fmadd	d1, d4, d2, d1
   45318:	fadd	d0, d0, d3
   4531c:	fmadd	d0, d2, d1, d0
   45320:	fcvt	s0, d0
   45324:	ret
   45328:	movi	v0.2s, #0x0
   4532c:	ret
   45330:	cmp	wzr, w1, lsl #1
   45334:	lsl	w0, w1, #1
   45338:	b.eq	45374 <__logf_finite@GLIBC_2.17+0xdc>  // b.none
   4533c:	mov	w2, #0x7f800000            	// #2139095040
   45340:	cmp	w1, w2
   45344:	b.eq	45324 <__logf_finite@GLIBC_2.17+0x8c>  // b.none
   45348:	cmp	w1, #0x0
   4534c:	mov	w1, #0xfeffffff            	// #-16777217
   45350:	ccmp	w0, w1, #0x2, ge  // ge = tcont
   45354:	b.hi	45370 <__logf_finite@GLIBC_2.17+0xd8>  // b.pmore
   45358:	movi	v0.2s, #0x4b, lsl #24
   4535c:	mov	w1, #0xf4800000            	// #-192937984
   45360:	fmul	s1, s1, s0
   45364:	fmov	w0, s1
   45368:	add	w1, w0, w1
   4536c:	b	452bc <__logf_finite@GLIBC_2.17+0x24>
   45370:	b	51c30 <__exp2f_finite@GLIBC_2.17+0x51c8>
   45374:	mov	w0, #0x1                   	// #1
   45378:	b	51c10 <__exp2f_finite@GLIBC_2.17+0x51a8>
   4537c:	nop

0000000000045380 <__log10f_finite@GLIBC_2.17>:
   45380:	fmov	w1, s0
   45384:	mov	w0, #0x7fffff              	// #8388607
   45388:	cmp	w1, w0
   4538c:	b.gt	453b0 <__log10f_finite@GLIBC_2.17+0x30>
   45390:	tst	x1, #0x7fffffff
   45394:	b.eq	45434 <__log10f_finite@GLIBC_2.17+0xb4>  // b.none
   45398:	tbnz	w1, #31, 4544c <__log10f_finite@GLIBC_2.17+0xcc>
   4539c:	movi	v1.2s, #0x4c, lsl #24
   453a0:	mov	w3, #0xffffffe7            	// #-25
   453a4:	fmul	s0, s0, s1
   453a8:	fmov	w1, s0
   453ac:	b	453b4 <__log10f_finite@GLIBC_2.17+0x34>
   453b0:	mov	w3, #0x0                   	// #0
   453b4:	mov	w2, #0x7f7fffff            	// #2139095039
   453b8:	cmp	w1, w2
   453bc:	b.gt	45444 <__log10f_finite@GLIBC_2.17+0xc4>
   453c0:	asr	w0, w1, #23
   453c4:	stp	x29, x30, [sp, #-32]!
   453c8:	sub	w0, w0, #0x7f
   453cc:	add	w0, w0, w3
   453d0:	mov	x29, sp
   453d4:	mov	w2, #0x7f                  	// #127
   453d8:	lsr	w3, w0, #31
   453dc:	str	d8, [sp, #16]
   453e0:	add	w0, w0, w3
   453e4:	sub	w2, w2, w3
   453e8:	scvtf	s8, w0
   453ec:	bfi	w1, w2, #23, #9
   453f0:	fmov	s0, w1
   453f4:	bl	45298 <__logf_finite@GLIBC_2.17>
   453f8:	mov	w0, #0x5bd9                	// #23513
   453fc:	movk	w0, #0x3ede, lsl #16
   45400:	fmov	s3, w0
   45404:	mov	w0, #0x27db                	// #10203
   45408:	movk	w0, #0x3554, lsl #16
   4540c:	fmov	s2, w0
   45410:	fmul	s0, s0, s3
   45414:	mov	w0, #0x2080                	// #8320
   45418:	fmadd	s0, s8, s2, s0
   4541c:	movk	w0, #0x3e9a, lsl #16
   45420:	fmov	s1, w0
   45424:	fmadd	s0, s8, s1, s0
   45428:	ldr	d8, [sp, #16]
   4542c:	ldp	x29, x30, [sp], #32
   45430:	ret
   45434:	movi	v1.2s, #0xcc, lsl #24
   45438:	fabs	s0, s0
   4543c:	fdiv	s0, s1, s0
   45440:	ret
   45444:	fadd	s0, s0, s0
   45448:	ret
   4544c:	fsub	s0, s0, s0
   45450:	fdiv	s0, s0, s0
   45454:	ret

0000000000045458 <__powf_finite@GLIBC_2.17>:
   45458:	fmov	w2, s1
   4545c:	fmov	w4, s0
   45460:	mov	w0, #0x7effffff            	// #2130706431
   45464:	fmov	s2, s0
   45468:	sub	w3, w4, #0x800, lsl #12
   4546c:	lsl	w1, w2, #1
   45470:	cmp	w3, w0
   45474:	sub	w0, w1, #0x1
   45478:	mov	w3, #0xfeffffff            	// #-16777217
   4547c:	b.hi	45568 <__powf_finite@GLIBC_2.17+0x110>  // b.pmore
   45480:	cmp	w0, w3
   45484:	b.cs	45674 <__powf_finite@GLIBC_2.17+0x21c>  // b.hs, b.nlast
   45488:	mov	w0, #0x0                   	// #0
   4548c:	mov	w3, #0xc0cd0000            	// #-1060306944
   45490:	add	w3, w4, w3
   45494:	and	w1, w3, #0xff800000
   45498:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   4549c:	ubfx	x3, x3, #19, #4
   454a0:	add	x2, x2, #0x328
   454a4:	sub	w4, w4, w1
   454a8:	fmov	s0, w4
   454ac:	lsl	x3, x3, #4
   454b0:	fmov	d3, #-1.000000000000000000e+00
   454b4:	fcvt	d2, s0
   454b8:	asr	w1, w1, #18
   454bc:	ldp	d7, d4, [x2, #272]
   454c0:	add	x4, x2, x3
   454c4:	ldr	d5, [x2, x3]
   454c8:	scvtf	d0, w1
   454cc:	fcvt	d1, s1
   454d0:	mov	x1, #0x815e                	// #33118
   454d4:	ldr	d16, [x4, #8]
   454d8:	fmadd	d2, d5, d2, d3
   454dc:	ldr	d5, [x2, #288]
   454e0:	ldp	d6, d3, [x2, #256]
   454e4:	fadd	d0, d0, d16
   454e8:	fmadd	d4, d2, d7, d4
   454ec:	fmadd	d0, d2, d5, d0
   454f0:	fmul	d5, d2, d2
   454f4:	fmadd	d2, d2, d6, d3
   454f8:	fmul	d3, d5, d5
   454fc:	fmadd	d0, d5, d4, d0
   45500:	fmadd	d0, d2, d3, d0
   45504:	fmul	d1, d1, d0
   45508:	fmov	x2, d1
   4550c:	ubfx	x2, x2, #47, #16
   45510:	cmp	x2, x1
   45514:	b.hi	455b0 <__powf_finite@GLIBC_2.17+0x158>  // b.pmore
   45518:	frinta	d0, d1
   4551c:	adrp	x2, 8b000 <f64xsubf128@@GLIBC_2.28+0x37280>
   45520:	add	x2, x2, #0xfa0
   45524:	fcvtas	x1, d1
   45528:	fmov	d2, #1.000000000000000000e+00
   4552c:	fsub	d1, d1, d0
   45530:	ldr	d4, [x2, #320]
   45534:	ldp	d3, d0, [x2, #304]
   45538:	and	x3, x1, #0x1f
   4553c:	add	x1, x1, x0
   45540:	fmadd	d0, d1, d3, d0
   45544:	fmul	d3, d1, d1
   45548:	fmadd	d1, d1, d4, d2
   4554c:	ldr	x0, [x2, x3, lsl #3]
   45550:	add	x1, x0, x1, lsl #47
   45554:	fmadd	d0, d0, d3, d1
   45558:	fmov	d1, x1
   4555c:	fmul	d0, d0, d1
   45560:	fcvt	s0, d0
   45564:	ret
   45568:	cmp	w0, w3
   4556c:	b.cs	45730 <__powf_finite@GLIBC_2.17+0x2d8>  // b.hs, b.nlast
   45570:	lsl	w1, w4, #1
   45574:	sub	w0, w1, #0x1
   45578:	cmp	w0, w3
   4557c:	b.cs	456d4 <__powf_finite@GLIBC_2.17+0x27c>  // b.hs, b.nlast
   45580:	mov	w0, #0x0                   	// #0
   45584:	tbnz	w4, #31, 45614 <__powf_finite@GLIBC_2.17+0x1bc>
   45588:	mov	w1, #0x7fffff              	// #8388607
   4558c:	cmp	w4, w1
   45590:	b.hi	4548c <__powf_finite@GLIBC_2.17+0x34>  // b.pmore
   45594:	movi	v0.2s, #0x4b, lsl #24
   45598:	mov	w4, #0xf4800000            	// #-192937984
   4559c:	fmul	s2, s2, s0
   455a0:	fmov	w1, s2
   455a4:	and	w2, w1, #0x7fffffff
   455a8:	add	w4, w2, w4
   455ac:	b	4548c <__powf_finite@GLIBC_2.17+0x34>
   455b0:	adrp	x1, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   455b4:	ldr	d0, [x1, #576]
   455b8:	fcmpe	d1, d0
   455bc:	b.gt	45670 <__powf_finite@GLIBC_2.17+0x218>
   455c0:	adrp	x1, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   455c4:	ldr	d0, [x1, #584]
   455c8:	fcmpe	d1, d0
   455cc:	b.le	455e8 <__powf_finite@GLIBC_2.17+0x190>
   455d0:	movi	v0.2s, #0x33, lsl #24
   455d4:	cbz	w0, 45660 <__powf_finite@GLIBC_2.17+0x208>
   455d8:	fmov	s2, #-1.000000000000000000e+00
   455dc:	fsub	s0, s2, s0
   455e0:	fcmp	s0, s2
   455e4:	b.ne	45670 <__powf_finite@GLIBC_2.17+0x218>  // b.any
   455e8:	mov	x1, #0xc00000000000        	// #211106232532992
   455ec:	movk	x1, #0xc0b2, lsl #48
   455f0:	fmov	d0, x1
   455f4:	fcmpe	d1, d0
   455f8:	b.ls	4572c <__powf_finite@GLIBC_2.17+0x2d4>  // b.plast
   455fc:	mov	x1, #0xa00000000000        	// #175921860444160
   45600:	movk	x1, #0xc0b2, lsl #48
   45604:	fmov	d0, x1
   45608:	fcmpe	d1, d0
   4560c:	b.pl	45518 <__powf_finite@GLIBC_2.17+0xc0>  // b.nfrst
   45610:	b	51bf8 <__exp2f_finite@GLIBC_2.17+0x5190>
   45614:	ubfx	x1, x2, #23, #8
   45618:	cmp	w1, #0x7e
   4561c:	b.le	45658 <__powf_finite@GLIBC_2.17+0x200>
   45620:	cmp	w1, #0x96
   45624:	b.gt	45650 <__powf_finite@GLIBC_2.17+0x1f8>
   45628:	mov	w0, #0x96                  	// #150
   4562c:	sub	w1, w0, w1
   45630:	mov	w0, #0x1                   	// #1
   45634:	lsl	w0, w0, w1
   45638:	sub	w1, w0, #0x1
   4563c:	tst	w1, w2
   45640:	b.ne	45658 <__powf_finite@GLIBC_2.17+0x200>  // b.any
   45644:	ands	w0, w0, w2
   45648:	mov	w1, #0x10000               	// #65536
   4564c:	csel	w0, w0, w1, eq  // eq = none
   45650:	and	w4, w4, #0x7fffffff
   45654:	b	45588 <__powf_finite@GLIBC_2.17+0x130>
   45658:	fmov	s0, s2
   4565c:	b	51c30 <__exp2f_finite@GLIBC_2.17+0x51c8>
   45660:	fmov	s2, #1.000000000000000000e+00
   45664:	fadd	s0, s0, s2
   45668:	fcmp	s0, s2
   4566c:	b.eq	455e8 <__powf_finite@GLIBC_2.17+0x190>  // b.none
   45670:	b	51c08 <__exp2f_finite@GLIBC_2.17+0x51a0>
   45674:	cbz	w1, 45734 <__powf_finite@GLIBC_2.17+0x2dc>
   45678:	mov	w0, #0x3f800000            	// #1065353216
   4567c:	cmp	w4, w0
   45680:	b.eq	45764 <__powf_finite@GLIBC_2.17+0x30c>  // b.none
   45684:	mov	w0, #0xff000000            	// #-16777216
   45688:	lsl	w4, w4, #1
   4568c:	cmp	w1, w0
   45690:	ccmp	w4, w0, #0x2, eq  // eq = none
   45694:	b.ls	456a0 <__powf_finite@GLIBC_2.17+0x248>  // b.plast
   45698:	fadd	s0, s2, s1
   4569c:	ret
   456a0:	mov	w0, #0x7f000000            	// #2130706432
   456a4:	fmov	s0, #1.000000000000000000e+00
   456a8:	cmp	w4, w0
   456ac:	b.eq	45564 <__powf_finite@GLIBC_2.17+0x10c>  // b.none
   456b0:	mov	w0, #0x7effffff            	// #2130706431
   456b4:	mvn	w2, w2
   456b8:	cmp	w4, w0
   456bc:	movi	v0.2s, #0x0
   456c0:	cset	w0, hi  // hi = pmore
   456c4:	cmp	w0, w2, lsr #31
   456c8:	b.ne	45564 <__powf_finite@GLIBC_2.17+0x10c>  // b.any
   456cc:	fmul	s0, s1, s1
   456d0:	ret
   456d4:	fmul	s0, s0, s0
   456d8:	mov	w0, #0x0                   	// #0
   456dc:	tbnz	w4, #31, 456ec <__powf_finite@GLIBC_2.17+0x294>
   456e0:	cbnz	w1, 45754 <__powf_finite@GLIBC_2.17+0x2fc>
   456e4:	tbz	w2, #31, 45564 <__powf_finite@GLIBC_2.17+0x10c>
   456e8:	b	51c10 <__exp2f_finite@GLIBC_2.17+0x51a8>
   456ec:	ubfx	x4, x2, #23, #8
   456f0:	sub	w3, w4, #0x7f
   456f4:	cmp	w3, #0x17
   456f8:	b.hi	456e0 <__powf_finite@GLIBC_2.17+0x288>  // b.pmore
   456fc:	mov	w3, #0x96                  	// #150
   45700:	sub	w3, w3, w4
   45704:	mov	w4, #0x1                   	// #1
   45708:	lsl	w3, w4, w3
   4570c:	sub	w5, w3, #0x1
   45710:	tst	w5, w2
   45714:	b.ne	456e0 <__powf_finite@GLIBC_2.17+0x288>  // b.any
   45718:	ands	w0, w3, w2
   4571c:	b.eq	456e0 <__powf_finite@GLIBC_2.17+0x288>  // b.none
   45720:	fneg	s0, s0
   45724:	mov	w0, w4
   45728:	b	456e0 <__powf_finite@GLIBC_2.17+0x288>
   4572c:	b	51bf0 <__exp2f_finite@GLIBC_2.17+0x5188>
   45730:	cbnz	w1, 45684 <__powf_finite@GLIBC_2.17+0x22c>
   45734:	eor	w0, w4, #0x400000
   45738:	mov	w1, #0x7fc00000            	// #2143289344
   4573c:	and	w0, w0, #0x7fffffff
   45740:	fmov	s0, #1.000000000000000000e+00
   45744:	cmp	w0, w1
   45748:	b.ls	45564 <__powf_finite@GLIBC_2.17+0x10c>  // b.plast
   4574c:	fadd	s0, s2, s1
   45750:	b	4569c <__powf_finite@GLIBC_2.17+0x244>
   45754:	tbz	w2, #31, 45564 <__powf_finite@GLIBC_2.17+0x10c>
   45758:	fmov	s1, #1.000000000000000000e+00
   4575c:	fdiv	s0, s1, s0
   45760:	ret
   45764:	eor	w0, w2, #0x400000
   45768:	mov	w1, #0x7fc00000            	// #2143289344
   4576c:	and	w0, w0, #0x7fffffff
   45770:	fmov	s0, #1.000000000000000000e+00
   45774:	cmp	w0, w1
   45778:	b.hi	45698 <__powf_finite@GLIBC_2.17+0x240>  // b.pmore
   4577c:	ret

0000000000045780 <__remainderf_finite@GLIBC_2.17>:
   45780:	stp	x29, x30, [sp, #-64]!
   45784:	fmov	s2, s0
   45788:	mov	x29, sp
   4578c:	stp	x19, x20, [sp, #16]
   45790:	fmov	w20, s1
   45794:	stp	x21, x22, [sp, #32]
   45798:	str	d8, [sp, #48]
   4579c:	ands	w21, w20, #0x7fffffff
   457a0:	fmov	s8, s1
   457a4:	b.eq	45828 <__remainderf_finite@GLIBC_2.17+0xa8>  // b.none
   457a8:	fmov	w19, s0
   457ac:	mov	w1, #0x7f7fffff            	// #2139095039
   457b0:	mov	w0, #0x7f800000            	// #2139095040
   457b4:	and	w22, w19, #0x7fffffff
   457b8:	cmp	w22, w1
   457bc:	ccmp	w21, w0, #0x0, le
   457c0:	b.gt	45828 <__remainderf_finite@GLIBC_2.17+0xa8>
   457c4:	mov	w0, #0x7effffff            	// #2130706431
   457c8:	cmp	w21, w0
   457cc:	b.le	45868 <__remainderf_finite@GLIBC_2.17+0xe8>
   457d0:	cmp	w21, w22
   457d4:	b.eq	45878 <__remainderf_finite@GLIBC_2.17+0xf8>  // b.none
   457d8:	fabs	s0, s2
   457dc:	fabs	s8, s8
   457e0:	tst	w20, #0x7f000000
   457e4:	b.ne	45844 <__remainderf_finite@GLIBC_2.17+0xc4>  // b.any
   457e8:	fadd	s1, s0, s0
   457ec:	fcmpe	s1, s8
   457f0:	b.le	45808 <__remainderf_finite@GLIBC_2.17+0x88>
   457f4:	fsub	s0, s0, s8
   457f8:	fadd	s1, s0, s0
   457fc:	fcmpe	s1, s8
   45800:	b.lt	45808 <__remainderf_finite@GLIBC_2.17+0x88>  // b.tstop
   45804:	fsub	s0, s0, s8
   45808:	and	w19, w19, #0x80000000
   4580c:	fmov	s1, w19
   45810:	ldp	x19, x20, [sp, #16]
   45814:	eor	v0.8b, v1.8b, v0.8b
   45818:	ldp	x21, x22, [sp, #32]
   4581c:	ldr	d8, [sp, #48]
   45820:	ldp	x29, x30, [sp], #64
   45824:	ret
   45828:	fmul	s0, s2, s8
   4582c:	fdiv	s0, s0, s0
   45830:	ldp	x19, x20, [sp, #16]
   45834:	ldp	x21, x22, [sp, #32]
   45838:	ldr	d8, [sp, #48]
   4583c:	ldp	x29, x30, [sp], #64
   45840:	ret
   45844:	fmov	s1, #5.000000000000000000e-01
   45848:	fmul	s1, s8, s1
   4584c:	fcmpe	s0, s1
   45850:	b.le	45808 <__remainderf_finite@GLIBC_2.17+0x88>
   45854:	fsub	s0, s0, s8
   45858:	fcmpe	s1, s0
   4585c:	b.hi	45808 <__remainderf_finite@GLIBC_2.17+0x88>  // b.pmore
   45860:	fsub	s0, s0, s8
   45864:	b	45808 <__remainderf_finite@GLIBC_2.17+0x88>
   45868:	fadd	s1, s1, s1
   4586c:	bl	42e38 <__fmodf_finite@GLIBC_2.17>
   45870:	fmov	s2, s0
   45874:	b	457d0 <__remainderf_finite@GLIBC_2.17+0x50>
   45878:	movi	v0.2s, #0x0
   4587c:	fmul	s0, s2, s0
   45880:	b	45830 <__remainderf_finite@GLIBC_2.17+0xb0>
   45884:	nop
   45888:	frintx	s2, s1
   4588c:	fcmp	s2, s1
   45890:	b.ne	458b8 <__remainderf_finite@GLIBC_2.17+0x138>  // b.any
   45894:	mov	w0, #0xe800                	// #59392
   45898:	movk	w0, #0x477d, lsl #16
   4589c:	fmov	s2, w0
   458a0:	fcmpe	s1, s2
   458a4:	b.le	458b0 <__remainderf_finite@GLIBC_2.17+0x130>
   458a8:	mov	w0, #0xfde8                	// #65000
   458ac:	b	487b0 <modff@@GLIBC_2.17+0x88>
   458b0:	mov	w0, #0xffff0218            	// #-65000
   458b4:	b	487b0 <modff@@GLIBC_2.17+0x88>
   458b8:	fsub	s1, s1, s1
   458bc:	fdiv	s0, s1, s1
   458c0:	ret
   458c4:	nop

00000000000458c8 <__scalbf_finite@GLIBC_2.17>:
   458c8:	fcmp	s0, s0
   458cc:	fmov	s2, s0
   458d0:	b.vs	45924 <__scalbf_finite@GLIBC_2.17+0x5c>
   458d4:	fabs	s4, s1
   458d8:	mov	w0, #0x7f7fffff            	// #2139095039
   458dc:	fmov	s3, w0
   458e0:	fcmp	s4, s3
   458e4:	b.hi	45914 <__scalbf_finite@GLIBC_2.17+0x4c>  // b.pmore
   458e8:	movi	v3.2s, #0x4f, lsl #24
   458ec:	fcmpe	s4, s3
   458f0:	b.ge	4590c <__scalbf_finite@GLIBC_2.17+0x44>  // b.tcont
   458f4:	fcvtzs	s3, s1
   458f8:	scvtf	s4, s3
   458fc:	fcmp	s4, s1
   45900:	b.ne	4590c <__scalbf_finite@GLIBC_2.17+0x44>  // b.any
   45904:	fmov	w0, s3
   45908:	b	487b0 <modff@@GLIBC_2.17+0x88>
   4590c:	fmov	s0, s2
   45910:	b	45888 <__remainderf_finite@GLIBC_2.17+0x108>
   45914:	fcmp	s1, s1
   45918:	b.vs	45924 <__scalbf_finite@GLIBC_2.17+0x5c>
   4591c:	fcmpe	s1, #0.0
   45920:	b.le	4592c <__scalbf_finite@GLIBC_2.17+0x64>
   45924:	fmul	s0, s2, s1
   45928:	ret
   4592c:	fcmp	s0, #0.0
   45930:	b.eq	45928 <__scalbf_finite@GLIBC_2.17+0x60>  // b.none
   45934:	fneg	s2, s0
   45938:	fdiv	s0, s2, s1
   4593c:	ret

0000000000045940 <__sinhf_finite@GLIBC_2.17>:
   45940:	stp	x29, x30, [sp, #-32]!
   45944:	fmov	w0, s0
   45948:	mov	w1, #0x7f7fffff            	// #2139095039
   4594c:	mov	x29, sp
   45950:	str	x19, [sp, #16]
   45954:	fmov	s2, s0
   45958:	and	w19, w0, #0x7fffffff
   4595c:	cmp	w19, w1
   45960:	b.gt	45a70 <__sinhf_finite@GLIBC_2.17+0x130>
   45964:	cmp	w0, #0x0
   45968:	fmov	s1, #5.000000000000000000e-01
   4596c:	fmov	s0, #-5.000000000000000000e-01
   45970:	str	d8, [sp, #24]
   45974:	mov	w0, #0x41afffff            	// #1102053375
   45978:	fcsel	s8, s1, s0, ge  // ge = tcont
   4597c:	cmp	w19, w0
   45980:	b.le	459c4 <__sinhf_finite@GLIBC_2.17+0x84>
   45984:	mov	w0, #0x717f                	// #29055
   45988:	movk	w0, #0x42b1, lsl #16
   4598c:	cmp	w19, w0
   45990:	b.le	45a80 <__sinhf_finite@GLIBC_2.17+0x140>
   45994:	mov	w0, #0xd4fc                	// #54524
   45998:	movk	w0, #0x42b2, lsl #16
   4599c:	cmp	w19, w0
   459a0:	b.le	45a94 <__sinhf_finite@GLIBC_2.17+0x154>
   459a4:	mov	w0, #0xbdc2                	// #48578
   459a8:	ldr	d8, [sp, #24]
   459ac:	movk	w0, #0x7cf0, lsl #16
   459b0:	fmov	s1, w0
   459b4:	fmul	s0, s2, s1
   459b8:	ldr	x19, [sp, #16]
   459bc:	ldp	x29, x30, [sp], #32
   459c0:	ret
   459c4:	mov	w0, #0x317fffff            	// #830472191
   459c8:	fabs	s1, s2
   459cc:	cmp	w19, w0
   459d0:	b.le	45a0c <__sinhf_finite@GLIBC_2.17+0xcc>
   459d4:	fmov	s0, s1
   459d8:	bl	47340 <expm1f@@GLIBC_2.17>
   459dc:	mov	w0, #0x3f7fffff            	// #1065353215
   459e0:	cmp	w19, w0
   459e4:	b.le	45a44 <__sinhf_finite@GLIBC_2.17+0x104>
   459e8:	fmov	s1, #1.000000000000000000e+00
   459ec:	ldr	x19, [sp, #16]
   459f0:	fadd	s1, s0, s1
   459f4:	fdiv	s1, s0, s1
   459f8:	fadd	s0, s1, s0
   459fc:	fmul	s0, s0, s8
   45a00:	ldr	d8, [sp, #24]
   45a04:	ldp	x29, x30, [sp], #32
   45a08:	ret
   45a0c:	movi	v0.2s, #0x80, lsl #16
   45a10:	fcmpe	s1, s0
   45a14:	b.pl	45a1c <__sinhf_finite@GLIBC_2.17+0xdc>  // b.nfrst
   45a18:	fmul	s0, s2, s2
   45a1c:	mov	w0, #0xbdc2                	// #48578
   45a20:	fmov	s0, s2
   45a24:	movk	w0, #0x7cf0, lsl #16
   45a28:	fmov	s3, w0
   45a2c:	fmov	s4, #1.000000000000000000e+00
   45a30:	fadd	s2, s2, s3
   45a34:	fcmpe	s2, s4
   45a38:	b.gt	45aa8 <__sinhf_finite@GLIBC_2.17+0x168>
   45a3c:	fmov	s0, s1
   45a40:	bl	47340 <expm1f@@GLIBC_2.17>
   45a44:	fmov	s2, #1.000000000000000000e+00
   45a48:	fmul	s1, s0, s0
   45a4c:	fmov	s3, #2.000000000000000000e+00
   45a50:	fadd	s2, s0, s2
   45a54:	ldr	x19, [sp, #16]
   45a58:	fdiv	s1, s1, s2
   45a5c:	fnmsub	s0, s0, s3, s1
   45a60:	fmul	s0, s0, s8
   45a64:	ldr	d8, [sp, #24]
   45a68:	ldp	x29, x30, [sp], #32
   45a6c:	ret
   45a70:	fadd	s0, s0, s0
   45a74:	ldr	x19, [sp, #16]
   45a78:	ldp	x29, x30, [sp], #32
   45a7c:	ret
   45a80:	fabs	s0, s2
   45a84:	bl	42d58 <__expf_finite@GLIBC_2.17>
   45a88:	fmul	s0, s0, s8
   45a8c:	ldr	d8, [sp, #24]
   45a90:	b	459b8 <__sinhf_finite@GLIBC_2.17+0x78>
   45a94:	fabs	s2, s2
   45a98:	fmul	s0, s2, s1
   45a9c:	bl	42d58 <__expf_finite@GLIBC_2.17>
   45aa0:	fmul	s8, s8, s0
   45aa4:	fmul	s0, s8, s0
   45aa8:	ldr	d8, [sp, #24]
   45aac:	b	459b8 <__sinhf_finite@GLIBC_2.17+0x78>

0000000000045ab0 <__sqrtf_finite@GLIBC_2.17>:
   45ab0:	fsqrt	s0, s0
   45ab4:	ret
   45ab8:	stp	x29, x30, [sp, #-112]!
   45abc:	fmov	s1, #5.000000000000000000e-01
   45ac0:	mov	x29, sp
   45ac4:	stp	x19, x20, [sp, #16]
   45ac8:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   45acc:	fcmpe	s0, s1
   45ad0:	ldr	x1, [x19, #4032]
   45ad4:	mov	x20, x0
   45ad8:	stp	d8, d9, [sp, #32]
   45adc:	fmov	s8, s0
   45ae0:	ldr	x0, [x1]
   45ae4:	str	x0, [sp, #104]
   45ae8:	mov	x0, #0x0                   	// #0
   45aec:	b.mi	45c74 <__sqrtf_finite@GLIBC_2.17+0x1c4>  // b.first
   45af0:	fmov	s1, #1.500000000000000000e+00
   45af4:	fcmpe	s0, s1
   45af8:	b.ls	45c94 <__sqrtf_finite@GLIBC_2.17+0x1e4>  // b.plast
   45afc:	fmov	s0, #2.500000000000000000e+00
   45b00:	fcmpe	s8, s0
   45b04:	b.mi	45c3c <__sqrtf_finite@GLIBC_2.17+0x18c>  // b.first
   45b08:	fmov	s0, #4.000000000000000000e+00
   45b0c:	str	wzr, [sp, #96]
   45b10:	stp	d10, d11, [sp, #48]
   45b14:	fcmpe	s8, s0
   45b18:	stp	d12, d13, [sp, #64]
   45b1c:	str	d14, [sp, #80]
   45b20:	b.mi	45ca8 <__sqrtf_finite@GLIBC_2.17+0x1f8>  // b.first
   45b24:	movi	v11.2s, #0x0
   45b28:	fmov	s13, #1.000000000000000000e+00
   45b2c:	fmov	s12, s11
   45b30:	frinta	s9, s8
   45b34:	fmov	s0, s8
   45b38:	add	x0, sp, #0x64
   45b3c:	bl	48888 <frexpf@@GLIBC_2.17>
   45b40:	fsub	s14, s8, s9
   45b44:	mov	w0, #0x4f3                 	// #1267
   45b48:	movk	w0, #0x3f35, lsl #16
   45b4c:	fmov	s1, w0
   45b50:	fcmpe	s0, s1
   45b54:	b.mi	45c60 <__sqrtf_finite@GLIBC_2.17+0x1b0>  // b.first
   45b58:	ldr	w1, [sp, #100]
   45b5c:	fcvtzs	w0, s9
   45b60:	fmov	s1, s8
   45b64:	mul	w0, w0, w1
   45b68:	str	w0, [x20]
   45b6c:	bl	45458 <__powf_finite@GLIBC_2.17>
   45b70:	fmov	s10, s0
   45b74:	ldr	s1, [sp, #100]
   45b78:	scvtf	s0, s1
   45b7c:	fmul	s0, s0, s14
   45b80:	bl	4ca68 <__exp2f_finite@GLIBC_2.17>
   45b84:	fmov	s9, s0
   45b88:	fneg	s0, s8
   45b8c:	fmul	s9, s10, s9
   45b90:	bl	42d58 <__expf_finite@GLIBC_2.17>
   45b94:	fmov	s1, s0
   45b98:	mov	w0, #0xfdb                 	// #4059
   45b9c:	fmov	s0, s8
   45ba0:	movk	w0, #0x40c9, lsl #16
   45ba4:	fmov	s10, w0
   45ba8:	fdiv	s10, s10, s8
   45bac:	fmul	s9, s9, s1
   45bb0:	fsqrt	s10, s10
   45bb4:	fmul	s9, s9, s10
   45bb8:	fdiv	s9, s9, s13
   45bbc:	bl	45298 <__logf_finite@GLIBC_2.17>
   45bc0:	fmul	s4, s8, s8
   45bc4:	mov	w0, #0xd01                 	// #3329
   45bc8:	fnmsub	s0, s0, s12, s11
   45bcc:	movk	w0, #0x3a50, lsl #16
   45bd0:	fmov	s1, w0
   45bd4:	mov	w0, #0xb61                 	// #2913
   45bd8:	fdiv	s1, s1, s4
   45bdc:	movk	w0, #0x3b36, lsl #16
   45be0:	fmov	s3, w0
   45be4:	mov	w0, #0xaaab                	// #43691
   45be8:	movk	w0, #0x3daa, lsl #16
   45bec:	fmov	s2, w0
   45bf0:	fsub	s1, s1, s3
   45bf4:	fdiv	s1, s1, s4
   45bf8:	fadd	s1, s1, s2
   45bfc:	fdiv	s8, s1, s8
   45c00:	fadd	s0, s8, s0
   45c04:	bl	47340 <expm1f@@GLIBC_2.17>
   45c08:	fmadd	s0, s9, s0, s9
   45c0c:	ldp	d10, d11, [sp, #48]
   45c10:	ldp	d12, d13, [sp, #64]
   45c14:	ldr	d14, [sp, #80]
   45c18:	ldr	x19, [x19, #4032]
   45c1c:	ldr	x1, [sp, #104]
   45c20:	ldr	x0, [x19]
   45c24:	eor	x0, x1, x0
   45c28:	cbnz	x0, 45cdc <__sqrtf_finite@GLIBC_2.17+0x22c>
   45c2c:	ldp	x19, x20, [sp, #16]
   45c30:	ldp	d8, d9, [sp, #32]
   45c34:	ldp	x29, x30, [sp], #112
   45c38:	ret
   45c3c:	fmov	s0, #1.000000000000000000e+00
   45c40:	add	x0, sp, #0x64
   45c44:	str	wzr, [x20]
   45c48:	fsub	s8, s8, s0
   45c4c:	fmov	s0, s8
   45c50:	bl	44a08 <__lgammaf_r_finite@GLIBC_2.17>
   45c54:	bl	42d58 <__expf_finite@GLIBC_2.17>
   45c58:	fmul	s0, s0, s8
   45c5c:	b	45c18 <__sqrtf_finite@GLIBC_2.17+0x168>
   45c60:	ldr	w0, [sp, #100]
   45c64:	fadd	s0, s0, s0
   45c68:	sub	w1, w0, #0x1
   45c6c:	str	w1, [sp, #100]
   45c70:	b	45b5c <__sqrtf_finite@GLIBC_2.17+0xac>
   45c74:	fmov	s0, #1.000000000000000000e+00
   45c78:	add	x0, sp, #0x64
   45c7c:	str	wzr, [x20]
   45c80:	fadd	s0, s8, s0
   45c84:	bl	44a08 <__lgammaf_r_finite@GLIBC_2.17>
   45c88:	bl	42d58 <__expf_finite@GLIBC_2.17>
   45c8c:	fdiv	s0, s0, s8
   45c90:	b	45c18 <__sqrtf_finite@GLIBC_2.17+0x168>
   45c94:	add	x0, sp, #0x64
   45c98:	str	wzr, [x20]
   45c9c:	bl	44a08 <__lgammaf_r_finite@GLIBC_2.17>
   45ca0:	bl	42d58 <__expf_finite@GLIBC_2.17>
   45ca4:	b	45c18 <__sqrtf_finite@GLIBC_2.17+0x168>
   45ca8:	fsub	s0, s0, s8
   45cac:	add	x1, sp, #0x60
   45cb0:	frintp	s0, s0
   45cb4:	fadd	s1, s8, s0
   45cb8:	fcvtzs	w0, s0
   45cbc:	fsub	s0, s1, s0
   45cc0:	fsub	s12, s8, s0
   45cc4:	fmov	s8, s1
   45cc8:	fmov	s1, s12
   45ccc:	bl	48998 <ldexpf@@GLIBC_2.17+0xa0>
   45cd0:	fmov	s13, s0
   45cd4:	ldr	s11, [sp, #96]
   45cd8:	b	45b30 <__sqrtf_finite@GLIBC_2.17+0x80>
   45cdc:	stp	d10, d11, [sp, #48]
   45ce0:	stp	d12, d13, [sp, #64]
   45ce4:	str	d14, [sp, #80]
   45ce8:	bl	ba70 <__stack_chk_fail@plt>
   45cec:	nop

0000000000045cf0 <__gammaf_r_finite@GLIBC_2.17>:
   45cf0:	stp	x29, x30, [sp, #-80]!
   45cf4:	mov	x29, sp
   45cf8:	stp	x19, x20, [sp, #16]
   45cfc:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   45d00:	mov	x20, x0
   45d04:	ldr	x1, [x19, #4032]
   45d08:	stp	d8, d9, [sp, #48]
   45d0c:	fmov	s8, s0
   45d10:	ldr	x0, [x1]
   45d14:	str	x0, [sp, #72]
   45d18:	mov	x0, #0x0                   	// #0
   45d1c:	fmov	w1, s0
   45d20:	tst	x1, #0x7fffffff
   45d24:	b.eq	45e8c <__gammaf_r_finite@GLIBC_2.17+0x19c>  // b.none
   45d28:	mov	w0, #0x80000000            	// #-2147483648
   45d2c:	add	w0, w1, w0
   45d30:	mov	w2, #0x7f7fffff            	// #2139095039
   45d34:	cmp	w0, w2
   45d38:	b.ls	45f6c <__gammaf_r_finite@GLIBC_2.17+0x27c>  // b.plast
   45d3c:	cmn	w1, #0x800, lsl #12
   45d40:	b.eq	45e9c <__gammaf_r_finite@GLIBC_2.17+0x1ac>  // b.none
   45d44:	and	w1, w1, #0x7f800000
   45d48:	mov	w0, #0x7f800000            	// #2139095040
   45d4c:	cmp	w1, w0
   45d50:	b.eq	45ea8 <__gammaf_r_finite@GLIBC_2.17+0x1b8>  // b.none
   45d54:	mov	w0, #0x42100000            	// #1108344832
   45d58:	fmov	s0, w0
   45d5c:	fcmpe	s8, s0
   45d60:	b.ge	45e0c <__gammaf_r_finite@GLIBC_2.17+0x11c>  // b.tcont
   45d64:	stp	x21, x22, [sp, #32]
   45d68:	mrs	x21, fpcr
   45d6c:	ands	w22, w21, #0xc00000
   45d70:	b.ne	45f60 <__gammaf_r_finite@GLIBC_2.17+0x270>  // b.any
   45d74:	fcmpe	s8, #0.0
   45d78:	b.gt	45e5c <__gammaf_r_finite@GLIBC_2.17+0x16c>
   45d7c:	movi	v0.2s, #0xb3, lsl #24
   45d80:	fcmpe	s8, s0
   45d84:	b.ge	45e40 <__gammaf_r_finite@GLIBC_2.17+0x150>  // b.tcont
   45d88:	frintz	s0, s8
   45d8c:	fmov	s3, #5.000000000000000000e-01
   45d90:	mov	w0, #0xc2280000            	// #-1037565952
   45d94:	fmov	s2, w0
   45d98:	mov	w0, #0x1                   	// #1
   45d9c:	fmul	s1, s0, s3
   45da0:	frintz	s1, s1
   45da4:	fadd	s1, s1, s1
   45da8:	fcmp	s1, s0
   45dac:	cneg	w0, w0, eq  // eq = none
   45db0:	fcmpe	s8, s2
   45db4:	str	w0, [x20]
   45db8:	b.hi	45eb4 <__gammaf_r_finite@GLIBC_2.17+0x1c4>  // b.pmore
   45dbc:	movi	v0.2s, #0x80, lsl #16
   45dc0:	fmul	s0, s0, s0
   45dc4:	fmov	s2, s0
   45dc8:	cbnz	w22, 45f58 <__gammaf_r_finite@GLIBC_2.17+0x268>
   45dcc:	mov	w0, #0x7f7fffff            	// #2139095039
   45dd0:	fmov	s1, w0
   45dd4:	fcmp	s2, s1
   45dd8:	b.le	45de4 <__gammaf_r_finite@GLIBC_2.17+0xf4>
   45ddc:	fcmp	s8, #0.0
   45de0:	b.ne	45df0 <__gammaf_r_finite@GLIBC_2.17+0x100>  // b.any
   45de4:	fcmp	s0, #0.0
   45de8:	b.ne	45e54 <__gammaf_r_finite@GLIBC_2.17+0x164>  // b.any
   45dec:	movi	v1.2s, #0x80, lsl #16
   45df0:	movi	v8.2s, #0x80, lsl #24
   45df4:	ldr	w0, [x20]
   45df8:	bif	v0.8b, v1.8b, v8.8b
   45dfc:	tbnz	w0, #31, 45e7c <__gammaf_r_finite@GLIBC_2.17+0x18c>
   45e00:	fmul	s0, s0, s1
   45e04:	ldp	x21, x22, [sp, #32]
   45e08:	b	45e1c <__gammaf_r_finite@GLIBC_2.17+0x12c>
   45e0c:	mov	w1, #0x7f7fffff            	// #2139095039
   45e10:	fmov	s0, w1
   45e14:	str	wzr, [x20]
   45e18:	fmul	s0, s0, s0
   45e1c:	ldr	x19, [x19, #4032]
   45e20:	ldr	x1, [sp, #72]
   45e24:	ldr	x0, [x19]
   45e28:	eor	x0, x1, x0
   45e2c:	cbnz	x0, 45f88 <__gammaf_r_finite@GLIBC_2.17+0x298>
   45e30:	ldp	x19, x20, [sp, #16]
   45e34:	ldp	d8, d9, [sp, #48]
   45e38:	ldp	x29, x30, [sp], #80
   45e3c:	ret
   45e40:	fmov	s0, #1.000000000000000000e+00
   45e44:	str	wzr, [x20]
   45e48:	fdiv	s0, s0, s8
   45e4c:	fabs	s2, s0
   45e50:	b	45dc8 <__gammaf_r_finite@GLIBC_2.17+0xd8>
   45e54:	ldp	x21, x22, [sp, #32]
   45e58:	b	45e1c <__gammaf_r_finite@GLIBC_2.17+0x12c>
   45e5c:	fmov	s0, s8
   45e60:	str	wzr, [x20]
   45e64:	add	x0, sp, #0x44
   45e68:	bl	45ab8 <__sqrtf_finite@GLIBC_2.17+0x8>
   45e6c:	ldr	w0, [sp, #68]
   45e70:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   45e74:	fabs	s2, s0
   45e78:	b	45dc8 <__gammaf_r_finite@GLIBC_2.17+0xd8>
   45e7c:	fneg	s0, s0
   45e80:	ldp	x21, x22, [sp, #32]
   45e84:	fnmul	s0, s0, s1
   45e88:	b	45e1c <__gammaf_r_finite@GLIBC_2.17+0x12c>
   45e8c:	fmov	s0, #1.000000000000000000e+00
   45e90:	str	wzr, [x20]
   45e94:	fdiv	s0, s0, s8
   45e98:	b	45e1c <__gammaf_r_finite@GLIBC_2.17+0x12c>
   45e9c:	fsub	s0, s8, s8
   45ea0:	str	wzr, [x20]
   45ea4:	b	45e1c <__gammaf_r_finite@GLIBC_2.17+0x12c>
   45ea8:	fadd	s0, s8, s8
   45eac:	str	wzr, [x20]
   45eb0:	b	45e1c <__gammaf_r_finite@GLIBC_2.17+0x12c>
   45eb4:	fsub	s0, s0, s8
   45eb8:	fcmpe	s0, s3
   45ebc:	b.le	45ec8 <__gammaf_r_finite@GLIBC_2.17+0x1d8>
   45ec0:	fmov	s1, #1.000000000000000000e+00
   45ec4:	fsub	s0, s1, s0
   45ec8:	fmov	s1, #2.500000000000000000e-01
   45ecc:	fcmpe	s0, s1
   45ed0:	b.ls	45f3c <__gammaf_r_finite@GLIBC_2.17+0x24c>  // b.plast
   45ed4:	fmov	s2, #5.000000000000000000e-01
   45ed8:	mov	w0, #0xfdb                 	// #4059
   45edc:	movk	w0, #0x4049, lsl #16
   45ee0:	fmov	s1, w0
   45ee4:	fsub	s0, s2, s0
   45ee8:	fmul	s0, s0, s1
   45eec:	bl	466d0 <cosf@@GLIBC_2.17>
   45ef0:	fmov	s9, s0
   45ef4:	fneg	s0, s8
   45ef8:	add	x0, sp, #0x44
   45efc:	fmul	s9, s0, s9
   45f00:	bl	45ab8 <__sqrtf_finite@GLIBC_2.17+0x8>
   45f04:	fmul	s0, s9, s0
   45f08:	mov	w0, #0xfdb                 	// #4059
   45f0c:	movk	w0, #0x4049, lsl #16
   45f10:	fmov	s1, w0
   45f14:	ldr	w0, [sp, #68]
   45f18:	fdiv	s0, s1, s0
   45f1c:	neg	w0, w0
   45f20:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   45f24:	movi	v1.2s, #0x80, lsl #16
   45f28:	fcmpe	s0, s1
   45f2c:	b.pl	45f34 <__gammaf_r_finite@GLIBC_2.17+0x244>  // b.nfrst
   45f30:	fmul	s1, s0, s0
   45f34:	fabs	s2, s0
   45f38:	b	45dc8 <__gammaf_r_finite@GLIBC_2.17+0xd8>
   45f3c:	mov	w0, #0xfdb                 	// #4059
   45f40:	movk	w0, #0x4049, lsl #16
   45f44:	fmov	s1, w0
   45f48:	fmul	s0, s0, s1
   45f4c:	bl	47cd8 <sinf@@GLIBC_2.17>
   45f50:	fmov	s9, s0
   45f54:	b	45ef4 <__gammaf_r_finite@GLIBC_2.17+0x204>
   45f58:	msr	fpcr, x21
   45f5c:	b	45dcc <__gammaf_r_finite@GLIBC_2.17+0xdc>
   45f60:	eor	w0, w22, w21
   45f64:	msr	fpcr, x0
   45f68:	b	45d74 <__gammaf_r_finite@GLIBC_2.17+0x84>
   45f6c:	frintx	s0, s0
   45f70:	fcmp	s0, s8
   45f74:	b.ne	45d3c <__gammaf_r_finite@GLIBC_2.17+0x4c>  // b.any
   45f78:	fsub	s0, s8, s8
   45f7c:	str	wzr, [x20]
   45f80:	fdiv	s0, s0, s0
   45f84:	b	45e1c <__gammaf_r_finite@GLIBC_2.17+0x12c>
   45f88:	stp	x21, x22, [sp, #32]
   45f8c:	bl	ba70 <__stack_chk_fail@plt>
   45f90:	fmov	w1, s0
   45f94:	tst	w1, #0x7f800000
   45f98:	and	w1, w1, #0x7fffffff
   45f9c:	b.ne	45fcc <__gammaf_r_finite@GLIBC_2.17+0x2dc>  // b.any
   45fa0:	cbz	w1, 45fe8 <__gammaf_r_finite@GLIBC_2.17+0x2f8>
   45fa4:	cmp	wzr, w1, lsl #8
   45fa8:	mov	w0, #0xffffff82            	// #-126
   45fac:	lsl	w1, w1, #8
   45fb0:	b.ge	45fc8 <__gammaf_r_finite@GLIBC_2.17+0x2d8>  // b.tcont
   45fb4:	nop
   45fb8:	lsl	w1, w1, #1
   45fbc:	sub	w0, w0, #0x1
   45fc0:	cmp	w1, #0x0
   45fc4:	b.gt	45fb8 <__gammaf_r_finite@GLIBC_2.17+0x2c8>
   45fc8:	ret
   45fcc:	asr	w0, w1, #23
   45fd0:	mov	w2, #0x7f7fffff            	// #2139095039
   45fd4:	sub	w0, w0, #0x7f
   45fd8:	cmp	w1, w2
   45fdc:	mov	w1, #0x7fffffff            	// #2147483647
   45fe0:	csel	w0, w0, w1, le
   45fe4:	ret
   45fe8:	mov	w0, #0x80000001            	// #-2147483647
   45fec:	ret
   45ff0:	fmov	w2, s0
   45ff4:	mov	w1, #0x38ffffff            	// #956301311
   45ff8:	fmov	s2, s0
   45ffc:	and	w4, w2, #0x7fffffff
   46000:	cmp	w4, w1
   46004:	b.gt	46030 <__gammaf_r_finite@GLIBC_2.17+0x340>
   46008:	fcvtzs	w1, s0
   4600c:	cbnz	w1, 46084 <__gammaf_r_finite@GLIBC_2.17+0x394>
   46010:	add	w1, w0, #0x1
   46014:	orr	w4, w1, w4
   46018:	cbz	w4, 46220 <__gammaf_r_finite@GLIBC_2.17+0x530>
   4601c:	cmp	w0, #0x1
   46020:	b.eq	46230 <__gammaf_r_finite@GLIBC_2.17+0x540>  // b.none
   46024:	fmov	s0, #-1.000000000000000000e+00
   46028:	fdiv	s0, s0, s2
   4602c:	ret
   46030:	mov	w1, #0xa13f                	// #41279
   46034:	movk	w1, #0x3f2c, lsl #16
   46038:	cmp	w4, w1
   4603c:	b.le	46084 <__gammaf_r_finite@GLIBC_2.17+0x394>
   46040:	tbz	w2, #31, 4604c <__gammaf_r_finite@GLIBC_2.17+0x35c>
   46044:	fneg	s2, s0
   46048:	fneg	s1, s1
   4604c:	mov	w1, #0xfda                 	// #4058
   46050:	mov	w3, #0x2168                	// #8552
   46054:	movk	w1, #0x3f49, lsl #16
   46058:	movk	w3, #0x3322, lsl #16
   4605c:	fmov	s0, w1
   46060:	fmov	s3, w3
   46064:	movi	v4.2s, #0x39, lsl #24
   46068:	fsub	s2, s0, s2
   4606c:	fsub	s1, s3, s1
   46070:	fadd	s2, s1, s2
   46074:	movi	v1.2s, #0x0
   46078:	fabs	s0, s2
   4607c:	fcmpe	s0, s4
   46080:	b.mi	461ec <__gammaf_r_finite@GLIBC_2.17+0x4fc>  // b.first
   46084:	fmul	s4, s2, s2
   46088:	mov	w1, #0x5384                	// #21380
   4608c:	movk	w1, #0x37d9, lsl #16
   46090:	fmov	s7, w1
   46094:	mov	w1, #0xc07a                	// #49274
   46098:	mov	w3, #0xdd1                 	// #3537
   4609c:	movk	w1, #0x3895, lsl #16
   460a0:	fmov	s21, w1
   460a4:	fmul	s0, s4, s4
   460a8:	mov	w1, #0xae5f                	// #44639
   460ac:	movk	w1, #0xb79b, lsl #16
   460b0:	fmov	s16, w1
   460b4:	mov	w1, #0xf445                	// #62533
   460b8:	movk	w3, #0x3d5d, lsl #16
   460bc:	movk	w1, #0x38a3, lsl #16
   460c0:	fmov	s20, w1
   460c4:	fmadd	s21, s0, s7, s21
   460c8:	fmadd	s20, s0, s16, s20
   460cc:	mov	w1, #0x37b9                	// #14265
   460d0:	fmov	s5, w3
   460d4:	movk	w1, #0x3981, lsl #16
   460d8:	fmov	s19, w1
   460dc:	mov	w1, #0x26c8                	// #9928
   460e0:	fmul	s23, s2, s4
   460e4:	movk	w1, #0x3a1a, lsl #16
   460e8:	fmov	s18, w1
   460ec:	mov	w1, #0xde48                	// #56904
   460f0:	movk	w1, #0x3abe, lsl #16
   460f4:	fmov	s17, w1
   460f8:	mov	w1, #0x6916                	// #26902
   460fc:	fmadd	s19, s21, s0, s19
   46100:	fmadd	s18, s20, s0, s18
   46104:	movk	w1, #0x3b6b, lsl #16
   46108:	fmov	s16, w1
   4610c:	mov	w1, #0x371f                	// #14111
   46110:	movk	w1, #0x3c11, lsl #16
   46114:	fmov	s7, w1
   46118:	mov	w1, #0x27a4                	// #10148
   4611c:	movk	w1, #0x3cb3, lsl #16
   46120:	fmov	s6, w1
   46124:	mov	w1, #0x8889                	// #34953
   46128:	movk	w1, #0x3e08, lsl #16
   4612c:	fmov	s3, w1
   46130:	fmadd	s17, s19, s0, s17
   46134:	fmadd	s16, s18, s0, s16
   46138:	mov	w1, #0xaaab                	// #43691
   4613c:	movk	w1, #0x3eaa, lsl #16
   46140:	fmov	s22, w1
   46144:	mov	w1, #0xa13f                	// #41279
   46148:	movk	w1, #0x3f2c, lsl #16
   4614c:	cmp	w4, w1
   46150:	fmadd	s7, s17, s0, s7
   46154:	fmadd	s6, s16, s0, s6
   46158:	fmadd	s5, s7, s0, s5
   4615c:	fmadd	s0, s6, s0, s3
   46160:	fmadd	s0, s5, s4, s0
   46164:	fmadd	s0, s0, s23, s1
   46168:	fmadd	s1, s0, s4, s1
   4616c:	fmadd	s1, s23, s22, s1
   46170:	fadd	s0, s2, s1
   46174:	b.gt	461b0 <__gammaf_r_finite@GLIBC_2.17+0x4c0>
   46178:	cmp	w0, #0x1
   4617c:	b.eq	4602c <__gammaf_r_finite@GLIBC_2.17+0x33c>  // b.none
   46180:	mvni	v6.2s, #0xf, msl #8
   46184:	fmov	s5, #-1.000000000000000000e+00
   46188:	fmov	s3, #1.000000000000000000e+00
   4618c:	and	v4.8b, v0.8b, v6.8b
   46190:	fdiv	s0, s5, s0
   46194:	fsub	s2, s4, s2
   46198:	fsub	s1, s1, s2
   4619c:	and	v2.8b, v0.8b, v6.8b
   461a0:	fmadd	s3, s4, s2, s3
   461a4:	fmadd	s1, s1, s2, s3
   461a8:	fmadd	s0, s1, s0, s2
   461ac:	ret
   461b0:	scvtf	s3, w0
   461b4:	fmul	s4, s0, s0
   461b8:	fmov	s6, #2.000000000000000000e+00
   461bc:	asr	w2, w2, #30
   461c0:	and	w2, w2, #0x2
   461c4:	mov	w0, #0x1                   	// #1
   461c8:	sub	w2, w0, w2
   461cc:	fadd	s0, s0, s3
   461d0:	scvtf	s5, w2
   461d4:	fdiv	s0, s4, s0
   461d8:	fsub	s0, s0, s1
   461dc:	fsub	s0, s2, s0
   461e0:	fmsub	s0, s0, s6, s3
   461e4:	fmul	s0, s5, s0
   461e8:	ret
   461ec:	fmov	s0, w0
   461f0:	asr	w2, w2, #30
   461f4:	and	w2, w2, #0x2
   461f8:	mov	w1, #0x1                   	// #1
   461fc:	shl	v1.2s, v0.2s, #1
   46200:	sub	w1, w1, w2
   46204:	fmov	s0, #1.000000000000000000e+00
   46208:	mul	w0, w1, w0
   4620c:	scvtf	s1, s1
   46210:	fmsub	s2, s1, s2, s0
   46214:	scvtf	s0, w0
   46218:	fmul	s0, s0, s2
   4621c:	ret
   46220:	fabs	s2, s0
   46224:	fmov	s0, #1.000000000000000000e+00
   46228:	fdiv	s0, s0, s2
   4622c:	ret
   46230:	fabs	s1, s0
   46234:	movi	v0.2s, #0x80, lsl #16
   46238:	fcmpe	s1, s0
   4623c:	b.pl	4624c <__gammaf_r_finite@GLIBC_2.17+0x55c>  // b.nfrst
   46240:	fmul	s0, s2, s2
   46244:	fmov	s0, s2
   46248:	ret
   4624c:	fmov	s0, s2
   46250:	ret
   46254:	nop

0000000000046258 <asinhf@@GLIBC_2.17>:
   46258:	fmov	w0, s0
   4625c:	stp	x29, x30, [sp, #-32]!
   46260:	mov	w1, #0x37ffffff            	// #939524095
   46264:	mov	x29, sp
   46268:	str	d8, [sp, #16]
   4626c:	fmov	s8, s0
   46270:	and	w0, w0, #0x7fffffff
   46274:	cmp	w0, w1
   46278:	b.le	462d0 <asinhf@@GLIBC_2.17+0x78>
   4627c:	mov	w1, #0x47000000            	// #1191182336
   46280:	cmp	w0, w1
   46284:	b.gt	46328 <asinhf@@GLIBC_2.17+0xd0>
   46288:	fmul	s3, s0, s0
   4628c:	fmov	s2, #1.000000000000000000e+00
   46290:	mov	w1, #0x40000000            	// #1073741824
   46294:	fabs	s4, s0
   46298:	cmp	w0, w1
   4629c:	fadd	s1, s3, s2
   462a0:	fsqrt	s1, s1
   462a4:	b.le	46310 <asinhf@@GLIBC_2.17+0xb8>
   462a8:	fadd	s1, s4, s1
   462ac:	fmov	s0, #2.000000000000000000e+00
   462b0:	fdiv	s1, s2, s1
   462b4:	fmadd	s0, s4, s0, s1
   462b8:	bl	45298 <__logf_finite@GLIBC_2.17>
   462bc:	movi	v1.2s, #0x80, lsl #24
   462c0:	bit	v0.8b, v8.8b, v1.8b
   462c4:	ldr	d8, [sp, #16]
   462c8:	ldp	x29, x30, [sp], #32
   462cc:	ret
   462d0:	fabs	s4, s0
   462d4:	movi	v0.2s, #0x80, lsl #16
   462d8:	fcmpe	s4, s0
   462dc:	b.pl	462e4 <asinhf@@GLIBC_2.17+0x8c>  // b.nfrst
   462e0:	fmul	s0, s8, s8
   462e4:	mov	w0, #0xf2ca                	// #62154
   462e8:	fmov	s2, #1.000000000000000000e+00
   462ec:	movk	w0, #0x7149, lsl #16
   462f0:	fmov	s1, w0
   462f4:	fmov	s0, s8
   462f8:	fadd	s1, s8, s1
   462fc:	fcmpe	s1, s2
   46300:	b.gt	462c4 <asinhf@@GLIBC_2.17+0x6c>
   46304:	fmul	s3, s8, s8
   46308:	fadd	s2, s3, s2
   4630c:	fsqrt	s1, s2
   46310:	fmov	s0, #1.000000000000000000e+00
   46314:	fadd	s1, s1, s0
   46318:	fdiv	s1, s3, s1
   4631c:	fadd	s0, s1, s4
   46320:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   46324:	b	462bc <asinhf@@GLIBC_2.17+0x64>
   46328:	mov	w1, #0x7f7fffff            	// #2139095039
   4632c:	cmp	w0, w1
   46330:	b.le	4633c <asinhf@@GLIBC_2.17+0xe4>
   46334:	fadd	s0, s0, s0
   46338:	b	462c4 <asinhf@@GLIBC_2.17+0x6c>
   4633c:	fabs	s0, s0
   46340:	bl	45298 <__logf_finite@GLIBC_2.17>
   46344:	mov	w0, #0x7218                	// #29208
   46348:	movk	w0, #0x3f31, lsl #16
   4634c:	fmov	s1, w0
   46350:	fadd	s0, s0, s1
   46354:	b	462bc <asinhf@@GLIBC_2.17+0x64>

0000000000046358 <atanf@@GLIBC_2.17>:
   46358:	fmov	w1, s0
   4635c:	mov	w2, #0x4bffffff            	// #1275068415
   46360:	fmov	s1, s0
   46364:	and	w0, w1, #0x7fffffff
   46368:	cmp	w0, w2
   4636c:	b.le	463a4 <atanf@@GLIBC_2.17+0x4c>
   46370:	mov	w2, #0x7f800000            	// #2139095040
   46374:	cmp	w0, w2
   46378:	b.gt	46524 <atanf@@GLIBC_2.17+0x1cc>
   4637c:	cmp	w1, #0x0
   46380:	mov	w0, #0xfda                 	// #4058
   46384:	b.le	4652c <atanf@@GLIBC_2.17+0x1d4>
   46388:	mov	w1, #0x2168                	// #8552
   4638c:	movk	w0, #0x3fc9, lsl #16
   46390:	movk	w1, #0x33a2, lsl #16
   46394:	fmov	s0, w0
   46398:	fmov	s1, w1
   4639c:	fadd	s0, s0, s1
   463a0:	ret
   463a4:	mov	w2, #0x3edfffff            	// #1054867455
   463a8:	cmp	w0, w2
   463ac:	b.gt	464ec <atanf@@GLIBC_2.17+0x194>
   463b0:	mov	w2, #0x30ffffff            	// #822083583
   463b4:	cmp	w0, w2
   463b8:	b.gt	463f0 <atanf@@GLIBC_2.17+0x98>
   463bc:	fabs	s2, s0
   463c0:	movi	v0.2s, #0x80, lsl #16
   463c4:	fcmpe	s2, s0
   463c8:	b.pl	463d0 <atanf@@GLIBC_2.17+0x78>  // b.nfrst
   463cc:	fmul	s0, s1, s1
   463d0:	mov	w0, #0xf2ca                	// #62154
   463d4:	fmov	s3, #1.000000000000000000e+00
   463d8:	movk	w0, #0x7149, lsl #16
   463dc:	fmov	s2, w0
   463e0:	fmov	s0, s1
   463e4:	fadd	s2, s1, s2
   463e8:	fcmpe	s2, s3
   463ec:	b.gt	463a0 <atanf@@GLIBC_2.17+0x48>
   463f0:	mov	w2, #0xffffffff            	// #-1
   463f4:	fmul	s0, s1, s1
   463f8:	mov	w0, #0x69d7                	// #27095
   463fc:	movk	w0, #0x3c85, lsl #16
   46400:	fmov	s6, w0
   46404:	mov	w0, #0xda59                	// #55897
   46408:	cmn	w2, #0x1
   4640c:	movk	w0, #0x3d4b, lsl #16
   46410:	fmov	s19, w0
   46414:	fmul	s3, s0, s0
   46418:	mov	w0, #0xa221                	// #41505
   4641c:	movk	w0, #0xbd15, lsl #16
   46420:	fmov	s2, w0
   46424:	mov	w0, #0xf16b                	// #61803
   46428:	fmov	s4, s0
   4642c:	movk	w0, #0xbd6e, lsl #16
   46430:	fmov	s18, w0
   46434:	fmadd	s19, s3, s6, s19
   46438:	mov	w0, #0x6b35                	// #27445
   4643c:	fmadd	s18, s3, s2, s18
   46440:	movk	w0, #0x3d88, lsl #16
   46444:	fmov	s17, w0
   46448:	mov	w0, #0x8795                	// #34709
   4644c:	movk	w0, #0xbd9d, lsl #16
   46450:	fmov	s16, w0
   46454:	mov	w0, #0x2e6e                	// #11886
   46458:	movk	w0, #0x3dba, lsl #16
   4645c:	fmov	s7, w0
   46460:	mov	w0, #0x8e38                	// #36408
   46464:	movk	w0, #0xbde3, lsl #16
   46468:	fmov	s0, w0
   4646c:	fmadd	s17, s19, s3, s17
   46470:	mov	w0, #0x4925                	// #18725
   46474:	fmadd	s16, s18, s3, s16
   46478:	movk	w0, #0x3e12, lsl #16
   4647c:	fmov	s6, w0
   46480:	mov	w0, #0xcccd                	// #52429
   46484:	movk	w0, #0xbe4c, lsl #16
   46488:	fmov	s2, w0
   4648c:	mov	w0, #0xaaab                	// #43691
   46490:	movk	w0, #0x3eaa, lsl #16
   46494:	fmov	s5, w0
   46498:	fmadd	s7, s17, s3, s7
   4649c:	fmadd	s0, s16, s3, s0
   464a0:	fmadd	s6, s7, s3, s6
   464a4:	fmadd	s0, s0, s3, s2
   464a8:	fmadd	s2, s6, s3, s5
   464ac:	fmul	s0, s0, s3
   464b0:	fmadd	s0, s2, s4, s0
   464b4:	fmul	s0, s1, s0
   464b8:	b.eq	46570 <atanf@@GLIBC_2.17+0x218>  // b.none
   464bc:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   464c0:	add	x0, x0, #0x250
   464c4:	add	x3, x0, w2, sxtw #2
   464c8:	cmp	w1, #0x0
   464cc:	ldr	s2, [x0, w2, sxtw #2]
   464d0:	ldr	s3, [x3, #16]
   464d4:	fsub	s0, s0, s3
   464d8:	fsub	s0, s0, s1
   464dc:	fsub	s0, s2, s0
   464e0:	fneg	s1, s0
   464e4:	fcsel	s0, s1, s0, lt  // lt = tstop
   464e8:	ret
   464ec:	mov	w2, #0x3f97ffff            	// #1066926079
   464f0:	fabs	s1, s0
   464f4:	cmp	w0, w2
   464f8:	b.gt	46548 <atanf@@GLIBC_2.17+0x1f0>
   464fc:	mov	w2, #0x3f2fffff            	// #1060110335
   46500:	cmp	w0, w2
   46504:	b.gt	46588 <atanf@@GLIBC_2.17+0x230>
   46508:	fmov	s2, #2.000000000000000000e+00
   4650c:	fmov	s0, #-1.000000000000000000e+00
   46510:	mov	w2, #0x0                   	// #0
   46514:	fmadd	s0, s1, s2, s0
   46518:	fadd	s1, s1, s2
   4651c:	fdiv	s1, s0, s1
   46520:	b	463f4 <atanf@@GLIBC_2.17+0x9c>
   46524:	fadd	s0, s0, s0
   46528:	ret
   4652c:	mov	w1, #0x2168                	// #8552
   46530:	movk	w0, #0xbfc9, lsl #16
   46534:	movk	w1, #0x33a2, lsl #16
   46538:	fmov	s0, w0
   4653c:	fmov	s1, w1
   46540:	fsub	s0, s0, s1
   46544:	ret
   46548:	mov	w2, #0x401bffff            	// #1075576831
   4654c:	cmp	w0, w2
   46550:	b.gt	46578 <atanf@@GLIBC_2.17+0x220>
   46554:	fmov	s2, #1.500000000000000000e+00
   46558:	fmov	s0, #1.000000000000000000e+00
   4655c:	mov	w2, #0x2                   	// #2
   46560:	fmadd	s0, s1, s2, s0
   46564:	fsub	s1, s1, s2
   46568:	fdiv	s1, s1, s0
   4656c:	b	463f4 <atanf@@GLIBC_2.17+0x9c>
   46570:	fsub	s0, s1, s0
   46574:	ret
   46578:	fmov	s0, #-1.000000000000000000e+00
   4657c:	mov	w2, #0x3                   	// #3
   46580:	fdiv	s1, s0, s1
   46584:	b	463f4 <atanf@@GLIBC_2.17+0x9c>
   46588:	fmov	s0, #1.000000000000000000e+00
   4658c:	mov	w2, #0x1                   	// #1
   46590:	fsub	s2, s1, s0
   46594:	fadd	s1, s1, s0
   46598:	fdiv	s1, s2, s1
   4659c:	b	463f4 <atanf@@GLIBC_2.17+0x9c>

00000000000465a0 <cbrtf@@GLIBC_2.17>:
   465a0:	stp	x29, x30, [sp, #-64]!
   465a4:	mov	x29, sp
   465a8:	str	x19, [sp, #16]
   465ac:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   465b0:	stp	d8, d9, [sp, #32]
   465b4:	fabs	s9, s0
   465b8:	fmov	s8, s0
   465bc:	ldr	x1, [x19, #4032]
   465c0:	add	x0, sp, #0x34
   465c4:	fmov	s0, s9
   465c8:	ldr	x2, [x1]
   465cc:	str	x2, [sp, #56]
   465d0:	mov	x2, #0x0                   	// #0
   465d4:	bl	48888 <frexpf@@GLIBC_2.17>
   465d8:	ldr	w2, [sp, #52]
   465dc:	cbnz	w2, 46600 <cbrtf@@GLIBC_2.17+0x60>
   465e0:	fcmp	s9, s9
   465e4:	mov	w0, #0x7f7fffff            	// #2139095039
   465e8:	fmov	s1, w0
   465ec:	fccmp	s9, s1, #0x0, vc
   465f0:	b.gt	466bc <cbrtf@@GLIBC_2.17+0x11c>
   465f4:	movi	v1.2s, #0x80, lsl #16
   465f8:	fcmpe	s9, s1
   465fc:	b.lt	466b4 <cbrtf@@GLIBC_2.17+0x114>  // b.tstop
   46600:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   46604:	fcvt	d1, s0
   46608:	fmov	d4, #2.000000000000000000e+00
   4660c:	adrp	x3, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   46610:	ldr	d3, [x0, #624]
   46614:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   46618:	add	x3, x3, #0x288
   4661c:	fcmp	s8, #0.0
   46620:	ldr	d0, [x0, #632]
   46624:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   46628:	fmsub	d0, d1, d3, d0
   4662c:	ldr	d2, [x0, #640]
   46630:	mov	w0, #0x5556                	// #21846
   46634:	movk	w0, #0x5555, lsl #16
   46638:	smull	x0, w2, w0
   4663c:	lsr	x0, x0, #32
   46640:	fmadd	d2, d1, d0, d2
   46644:	sub	w0, w0, w2, asr #31
   46648:	add	w1, w0, w0, lsl #1
   4664c:	sub	w1, w2, w1
   46650:	add	w1, w1, #0x2
   46654:	ldr	d5, [x3, w1, sxtw #3]
   46658:	fcvt	s2, d2
   4665c:	fmul	s3, s2, s2
   46660:	fcvt	d0, s2
   46664:	fmul	s2, s3, s2
   46668:	fcvt	d2, s2
   4666c:	fmadd	d3, d1, d4, d2
   46670:	fmadd	d1, d2, d4, d1
   46674:	fmul	d0, d0, d3
   46678:	fdiv	d1, d0, d1
   4667c:	fmul	d1, d1, d5
   46680:	fcvt	s1, d1
   46684:	fneg	s0, s1
   46688:	fcsel	s0, s0, s1, le
   4668c:	bl	488f8 <ldexpf@@GLIBC_2.17>
   46690:	ldr	x19, [x19, #4032]
   46694:	ldr	x1, [sp, #56]
   46698:	ldr	x0, [x19]
   4669c:	eor	x0, x1, x0
   466a0:	cbnz	x0, 466c4 <cbrtf@@GLIBC_2.17+0x124>
   466a4:	ldr	x19, [sp, #16]
   466a8:	ldp	d8, d9, [sp, #32]
   466ac:	ldp	x29, x30, [sp], #64
   466b0:	ret
   466b4:	fcmp	s8, #0.0
   466b8:	b.ne	46600 <cbrtf@@GLIBC_2.17+0x60>  // b.any
   466bc:	fadd	s0, s8, s8
   466c0:	b	46690 <cbrtf@@GLIBC_2.17+0xf0>
   466c4:	bl	ba70 <__stack_chk_fail@plt>

00000000000466c8 <ceilf@@GLIBC_2.17>:
   466c8:	frintp	s0, s0
   466cc:	ret

00000000000466d0 <cosf@@GLIBC_2.17>:
   466d0:	fmov	w1, s0
   466d4:	fcvt	d1, s0
   466d8:	ubfx	x0, x1, #20, #11
   466dc:	cmp	w0, #0x3f3
   466e0:	b.hi	46724 <cosf@@GLIBC_2.17+0x54>  // b.pmore
   466e4:	fmul	d1, d1, d1
   466e8:	cmp	w0, #0x397
   466ec:	b.ls	467bc <cosf@@GLIBC_2.17+0xec>  // b.plast
   466f0:	adrp	x0, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   466f4:	add	x0, x0, #0x4b0
   466f8:	fmul	d0, d1, d1
   466fc:	ldp	d2, d6, [x0, #48]
   46700:	ldp	d3, d5, [x0, #72]
   46704:	fmul	d4, d1, d0
   46708:	fmadd	d2, d1, d6, d2
   4670c:	fmadd	d1, d1, d5, d3
   46710:	ldr	d3, [x0, #64]
   46714:	fmadd	d0, d0, d3, d2
   46718:	fmadd	d1, d1, d4, d0
   4671c:	fcvt	s0, d1
   46720:	ret
   46724:	cmp	w0, #0x42e
   46728:	b.hi	467c4 <cosf@@GLIBC_2.17+0xf4>  // b.pmore
   4672c:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   46730:	add	x2, x2, #0x4b0
   46734:	adrp	x1, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   46738:	add	x1, x1, #0x520
   4673c:	ldp	d0, d3, [x2, #32]
   46740:	fmul	d0, d1, d0
   46744:	frinta	d2, d0
   46748:	fcvtas	x0, d0
   4674c:	fmsub	d1, d3, d2, d1
   46750:	tst	x0, #0x2
   46754:	csel	x1, x1, x2, ne  // ne = any
   46758:	fmul	d3, d1, d1
   4675c:	tbz	w0, #0, 46790 <cosf@@GLIBC_2.17+0xc0>
   46760:	and	x0, x0, #0x3
   46764:	ldr	d5, [x1, #104]
   46768:	ldp	d4, d0, [x1, #88]
   4676c:	ldr	d2, [x2, x0, lsl #3]
   46770:	fmadd	d0, d3, d5, d0
   46774:	fmul	d1, d1, d2
   46778:	fmul	d2, d1, d3
   4677c:	fmadd	d1, d2, d4, d1
   46780:	fmul	d3, d3, d2
   46784:	fmadd	d1, d0, d3, d1
   46788:	fcvt	s0, d1
   4678c:	ret
   46790:	ldp	d2, d5, [x1, #48]
   46794:	fmul	d0, d3, d3
   46798:	ldp	d4, d1, [x1, #72]
   4679c:	fmadd	d2, d3, d5, d2
   467a0:	ldr	d5, [x1, #64]
   467a4:	fmadd	d4, d3, d1, d4
   467a8:	fmul	d1, d3, d0
   467ac:	fmadd	d0, d0, d5, d2
   467b0:	fmadd	d1, d4, d1, d0
   467b4:	fcvt	s0, d1
   467b8:	ret
   467bc:	fmov	s0, #1.000000000000000000e+00
   467c0:	ret
   467c4:	cmp	w0, #0x7f7
   467c8:	b.hi	46880 <cosf@@GLIBC_2.17+0x1b0>  // b.pmore
   467cc:	ubfx	x4, x1, #26, #4
   467d0:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   467d4:	add	x2, x2, #0x450
   467d8:	and	w0, w1, #0x7fffff
   467dc:	add	x5, x2, x4, lsl #2
   467e0:	ubfx	x7, x1, #23, #3
   467e4:	orr	w0, w0, #0x800000
   467e8:	mov	x3, #0x2000000000000000    	// #2305843009213693952
   467ec:	ldr	w4, [x2, x4, lsl #2]
   467f0:	adrp	x2, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   467f4:	ldr	w6, [x5, #32]
   467f8:	lsl	w0, w0, w7
   467fc:	ldr	w7, [x5, #16]
   46800:	adrp	x5, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   46804:	ldr	d1, [x2, #688]
   46808:	add	x5, x5, #0x4b0
   4680c:	mul	w4, w0, w4
   46810:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   46814:	umull	x6, w0, w6
   46818:	add	x2, x2, #0x520
   4681c:	extr	x4, x4, x6, #32
   46820:	umaddl	x0, w0, w7, x4
   46824:	add	x3, x0, x3
   46828:	and	x4, x3, #0xc000000000000000
   4682c:	sub	x0, x0, x4
   46830:	lsr	x3, x3, #62
   46834:	add	w1, w3, w1, lsr #31
   46838:	scvtf	d0, x0
   4683c:	tst	x1, #0x2
   46840:	csel	x0, x2, x5, ne  // ne = any
   46844:	fmul	d0, d0, d1
   46848:	fmul	d1, d0, d0
   4684c:	tbz	w3, #0, 46884 <cosf@@GLIBC_2.17+0x1b4>
   46850:	and	x1, x1, #0x3
   46854:	ldr	d5, [x0, #104]
   46858:	ldp	d4, d2, [x0, #88]
   4685c:	ldr	d3, [x5, x1, lsl #3]
   46860:	fmadd	d2, d1, d5, d2
   46864:	fmul	d0, d0, d3
   46868:	fmul	d3, d0, d1
   4686c:	fmadd	d0, d3, d4, d0
   46870:	fmul	d1, d1, d3
   46874:	fmadd	d0, d2, d1, d0
   46878:	fcvt	s0, d0
   4687c:	ret
   46880:	b	51c30 <__exp2f_finite@GLIBC_2.17+0x51c8>
   46884:	ldp	d0, d5, [x0, #48]
   46888:	fmul	d3, d1, d1
   4688c:	ldp	d2, d4, [x0, #72]
   46890:	fmadd	d0, d1, d5, d0
   46894:	fmadd	d2, d1, d4, d2
   46898:	ldr	d4, [x0, #64]
   4689c:	fmul	d1, d1, d3
   468a0:	fmadd	d0, d3, d4, d0
   468a4:	fmadd	d0, d2, d1, d0
   468a8:	fcvt	s0, d0
   468ac:	ret

00000000000468b0 <erff@@GLIBC_2.17>:
   468b0:	stp	x29, x30, [sp, #-64]!
   468b4:	mov	w1, #0x7f7fffff            	// #2139095039
   468b8:	mov	x29, sp
   468bc:	str	x19, [sp, #16]
   468c0:	fmov	w19, s0
   468c4:	and	w0, w19, #0x7fffffff
   468c8:	cmp	w0, w1
   468cc:	b.gt	46a34 <erff@@GLIBC_2.17+0x184>
   468d0:	mov	w1, #0x3f57ffff            	// #1062731775
   468d4:	cmp	w0, w1
   468d8:	b.gt	4692c <erff@@GLIBC_2.17+0x7c>
   468dc:	mov	w1, #0x317fffff            	// #830472191
   468e0:	cmp	w0, w1
   468e4:	b.gt	46a9c <erff@@GLIBC_2.17+0x1ec>
   468e8:	tst	w19, #0x7c000000
   468ec:	mov	w0, #0x75d4                	// #30164
   468f0:	b.ne	46a84 <erff@@GLIBC_2.17+0x1d4>  // b.any
   468f4:	movk	w0, #0x4003, lsl #16
   468f8:	fmov	s1, w0
   468fc:	fmov	s3, #1.600000000000000000e+01
   46900:	mov	w0, #0x3d800000            	// #1031798784
   46904:	fmul	s1, s0, s1
   46908:	fmov	s2, w0
   4690c:	fmadd	s0, s0, s3, s1
   46910:	movi	v1.2s, #0x80, lsl #16
   46914:	fmul	s0, s0, s2
   46918:	fabs	s2, s0
   4691c:	fcmpe	s2, s1
   46920:	b.pl	46a50 <erff@@GLIBC_2.17+0x1a0>  // b.nfrst
   46924:	fmul	s1, s0, s0
   46928:	b	46a50 <erff@@GLIBC_2.17+0x1a0>
   4692c:	mov	w1, #0x3f9fffff            	// #1067450367
   46930:	cmp	w0, w1
   46934:	b.gt	46a5c <erff@@GLIBC_2.17+0x1ac>
   46938:	fabs	s0, s0
   4693c:	fmov	s19, #1.000000000000000000e+00
   46940:	mov	w1, #0xf9c0                	// #63936
   46944:	mov	w0, #0x5aa3                	// #23203
   46948:	movk	w1, #0xbb0d, lsl #16
   4694c:	movk	w0, #0x3c44, lsl #16
   46950:	fmov	s7, w1
   46954:	fmov	s6, w0
   46958:	fsub	s0, s0, s19
   4695c:	mov	w1, #0x51b3                	// #20915
   46960:	mov	w0, #0x6e13                	// #28179
   46964:	movk	w1, #0x3d11, lsl #16
   46968:	movk	w0, #0x3c5f, lsl #16
   4696c:	fmov	s18, w1
   46970:	fmov	s17, w0
   46974:	mov	w1, #0x1cc2                	// #7362
   46978:	fmadd	s18, s0, s7, s18
   4697c:	fmadd	s17, s0, s6, s17
   46980:	mov	w0, #0x3307                	// #13063
   46984:	movk	w1, #0xbde3, lsl #16
   46988:	movk	w0, #0x3e01, lsl #16
   4698c:	fmov	s16, w1
   46990:	stp	d8, d9, [sp, #32]
   46994:	fmov	s8, w0
   46998:	mov	w0, #0xfe54                	// #65108
   4699c:	movk	w0, #0x3ea2, lsl #16
   469a0:	fmov	s7, w0
   469a4:	mov	w0, #0x1ae7                	// #6887
   469a8:	mov	w2, #0x5785                	// #22405
   469ac:	movk	w0, #0x3d93, lsl #16
   469b0:	fmov	s6, w0
   469b4:	fmadd	s16, s18, s0, s16
   469b8:	fmadd	s8, s17, s0, s8
   469bc:	mov	w0, #0x9208                	// #37384
   469c0:	movk	w2, #0x3f0a, lsl #16
   469c4:	movk	w0, #0xbebe, lsl #16
   469c8:	fmov	s4, w2
   469cc:	fmov	s5, w0
   469d0:	mov	w1, #0x6805                	// #26629
   469d4:	mov	w0, #0xf331                	// #62257
   469d8:	movk	w1, #0x3ed4, lsl #16
   469dc:	movk	w0, #0x3dd9, lsl #16
   469e0:	fmov	s3, w1
   469e4:	fmov	s2, w0
   469e8:	mov	w0, #0xcdc6                	// #52678
   469ec:	movk	w0, #0xbb1a, lsl #16
   469f0:	fmov	s1, w0
   469f4:	fmadd	s7, s16, s0, s7
   469f8:	fmadd	s6, s8, s0, s6
   469fc:	mov	w0, #0x560b                	// #22027
   46a00:	fmadd	s5, s7, s0, s5
   46a04:	fmadd	s4, s6, s0, s4
   46a08:	fmadd	s3, s5, s0, s3
   46a0c:	fmadd	s2, s4, s0, s2
   46a10:	fmadd	s1, s3, s0, s1
   46a14:	fmadd	s0, s2, s0, s19
   46a18:	fdiv	s0, s1, s0
   46a1c:	tbnz	w19, #31, 46cac <erff@@GLIBC_2.17+0x3fc>
   46a20:	movk	w0, #0x3f58, lsl #16
   46a24:	fmov	s1, w0
   46a28:	ldp	d8, d9, [sp, #32]
   46a2c:	fadd	s0, s0, s1
   46a30:	b	46a50 <erff@@GLIBC_2.17+0x1a0>
   46a34:	fmov	s1, #1.000000000000000000e+00
   46a38:	lsr	w19, w19, #31
   46a3c:	mov	w0, #0x1                   	// #1
   46a40:	fdiv	s1, s1, s0
   46a44:	sub	w19, w0, w19, lsl #1
   46a48:	scvtf	s0, w19
   46a4c:	fadd	s0, s0, s1
   46a50:	ldr	x19, [sp, #16]
   46a54:	ldp	x29, x30, [sp], #64
   46a58:	ret
   46a5c:	mov	w1, #0x40bfffff            	// #1086324735
   46a60:	cmp	w0, w1
   46a64:	b.le	46b5c <erff@@GLIBC_2.17+0x2ac>
   46a68:	mov	w0, #0x4260                	// #16992
   46a6c:	movk	w0, #0xda2, lsl #16
   46a70:	tbnz	w19, #31, 46d9c <erff@@GLIBC_2.17+0x4ec>
   46a74:	fmov	s0, #1.000000000000000000e+00
   46a78:	fmov	s1, w0
   46a7c:	fsub	s0, s0, s1
   46a80:	b	46a50 <erff@@GLIBC_2.17+0x1a0>
   46a84:	movk	w0, #0x3e03, lsl #16
   46a88:	fmov	s1, w0
   46a8c:	ldr	x19, [sp, #16]
   46a90:	fmadd	s0, s0, s1, s0
   46a94:	ldp	x29, x30, [sp], #64
   46a98:	ret
   46a9c:	fmul	s1, s0, s0
   46aa0:	mov	w0, #0xe21a                	// #57882
   46aa4:	movk	w0, #0xb684, lsl #16
   46aa8:	fmov	s16, w0
   46aac:	mov	w0, #0xee49                	// #61001
   46ab0:	stp	d8, d9, [sp, #32]
   46ab4:	movk	w0, #0x390a, lsl #16
   46ab8:	fmov	s7, w0
   46abc:	mov	w0, #0x56b1                	// #22193
   46ac0:	fmadd	s16, s1, s16, s7
   46ac4:	movk	w0, #0xb7c7, lsl #16
   46ac8:	fmov	s8, w0
   46acc:	mov	w0, #0x8116                	// #33046
   46ad0:	movk	w0, #0x3ba6, lsl #16
   46ad4:	fmov	s7, w0
   46ad8:	mov	w0, #0x1489                	// #5257
   46adc:	mov	w1, #0x528f                	// #21135
   46ae0:	movk	w0, #0xbbbd, lsl #16
   46ae4:	fmov	s6, w0
   46ae8:	fmadd	s8, s1, s8, s6
   46aec:	mov	w0, #0x2a63                	// #10851
   46af0:	movk	w0, #0x3d85, lsl #16
   46af4:	movk	w1, #0xbce9, lsl #16
   46af8:	fmov	s5, w0
   46afc:	fmov	s6, w1
   46b00:	fmadd	s7, s16, s1, s7
   46b04:	mov	w0, #0xbbce                	// #48078
   46b08:	mov	w1, #0x6beb                	// #27627
   46b0c:	movk	w0, #0x3ecb, lsl #16
   46b10:	movk	w1, #0xbea6, lsl #16
   46b14:	fmov	s3, w0
   46b18:	fmov	s4, w1
   46b1c:	mov	w0, #0x75d4                	// #30164
   46b20:	movk	w0, #0x3e03, lsl #16
   46b24:	fmov	s9, #1.000000000000000000e+00
   46b28:	fmadd	s6, s8, s1, s6
   46b2c:	fmov	s2, w0
   46b30:	ldr	x19, [sp, #16]
   46b34:	fmadd	s5, s7, s1, s5
   46b38:	fmadd	s4, s6, s1, s4
   46b3c:	fmadd	s3, s5, s1, s3
   46b40:	fmadd	s2, s4, s1, s2
   46b44:	fmadd	s1, s3, s1, s9
   46b48:	ldp	d8, d9, [sp, #32]
   46b4c:	ldp	x29, x30, [sp], #64
   46b50:	fdiv	s1, s2, s1
   46b54:	fmadd	s0, s0, s1, s0
   46b58:	ret
   46b5c:	fmul	s1, s0, s0
   46b60:	fmov	s2, #1.000000000000000000e+00
   46b64:	mov	w1, #0xdb6d                	// #56173
   46b68:	stp	d8, d9, [sp, #32]
   46b6c:	movk	w1, #0x4036, lsl #16
   46b70:	stp	d10, d11, [sp, #48]
   46b74:	fabs	s8, s0
   46b78:	cmp	w0, w1
   46b7c:	fdiv	s0, s2, s1
   46b80:	b.le	46cc0 <erff@@GLIBC_2.17+0x410>
   46b84:	mov	w0, #0x8712                	// #34578
   46b88:	mov	w1, #0x230b                	// #8971
   46b8c:	movk	w0, #0xc1b3, lsl #16
   46b90:	fmov	s3, w0
   46b94:	mov	w0, #0x43a7                	// #17319
   46b98:	movk	w1, #0xc480, lsl #16
   46b9c:	movk	w0, #0x43ed, lsl #16
   46ba0:	fmov	s16, w0
   46ba4:	mov	w0, #0xc275                	// #49781
   46ba8:	fmadd	s3, s0, s3, s16
   46bac:	movk	w0, #0xc3f1, lsl #16
   46bb0:	fmov	s1, w0
   46bb4:	mov	w0, #0x90ce                	// #37070
   46bb8:	fmov	s10, w1
   46bbc:	movk	w0, #0x451f, lsl #16
   46bc0:	fmov	s16, w0
   46bc4:	mov	w0, #0xfdbb                	// #64955
   46bc8:	fmadd	s1, s0, s1, s10
   46bcc:	movk	w0, #0x4547, lsl #16
   46bd0:	fmov	s7, w0
   46bd4:	mov	w0, #0x6441                	// #25665
   46bd8:	mov	w1, #0xa2ea                	// #41706
   46bdc:	movk	w0, #0xc41f, lsl #16
   46be0:	fmov	s10, w0
   46be4:	mov	w0, #0x1759                	// #5977
   46be8:	movk	w1, #0xc320, lsl #16
   46bec:	movk	w0, #0x44c0, lsl #16
   46bf0:	fmov	s5, w0
   46bf4:	mov	w0, #0xe571                	// #58737
   46bf8:	fmadd	s16, s3, s0, s16
   46bfc:	movk	w0, #0x43a2, lsl #16
   46c00:	fmov	s6, w1
   46c04:	fmov	s3, w0
   46c08:	mov	w1, #0x104b                	// #4171
   46c0c:	mov	w0, #0xb459                	// #46169
   46c10:	movk	w1, #0xc18e, lsl #16
   46c14:	movk	w0, #0x41f2, lsl #16
   46c18:	fmov	s4, w1
   46c1c:	fmov	s11, w0
   46c20:	mov	w1, #0x9dd4                	// #40404
   46c24:	mov	w0, #0xa092                	// #41106
   46c28:	fmadd	s10, s1, s0, s10
   46c2c:	movk	w1, #0xbf4c, lsl #16
   46c30:	movk	w0, #0xbc21, lsl #16
   46c34:	fmov	s9, w1
   46c38:	fmov	s1, w0
   46c3c:	fmadd	s7, s16, s0, s7
   46c40:	fmadd	s6, s10, s0, s6
   46c44:	fmadd	s5, s7, s0, s5
   46c48:	fmadd	s4, s6, s0, s4
   46c4c:	fmadd	s3, s5, s0, s3
   46c50:	fmadd	s9, s4, s0, s9
   46c54:	fmadd	s11, s3, s0, s11
   46c58:	fmadd	s9, s9, s0, s1
   46c5c:	fmadd	s11, s11, s0, s2
   46c60:	mvni	v0.2s, #0xf, msl #8
   46c64:	and	v10.8b, v8.8b, v0.8b
   46c68:	fmov	s0, #-5.625000000000000000e-01
   46c6c:	fmsub	s0, s10, s10, s0
   46c70:	bl	42d58 <__expf_finite@GLIBC_2.17>
   46c74:	fsub	s2, s10, s8
   46c78:	fdiv	s9, s9, s11
   46c7c:	fadd	s1, s8, s10
   46c80:	fmov	s10, s0
   46c84:	fmadd	s0, s2, s1, s9
   46c88:	bl	42d58 <__expf_finite@GLIBC_2.17>
   46c8c:	fmul	s0, s10, s0
   46c90:	fdiv	s8, s0, s8
   46c94:	fmov	s0, #1.000000000000000000e+00
   46c98:	tbnz	w19, #31, 46dac <erff@@GLIBC_2.17+0x4fc>
   46c9c:	fsub	s0, s0, s8
   46ca0:	ldp	d8, d9, [sp, #32]
   46ca4:	ldp	d10, d11, [sp, #48]
   46ca8:	b	46a50 <erff@@GLIBC_2.17+0x1a0>
   46cac:	movk	w0, #0xbf58, lsl #16
   46cb0:	fmov	s1, w0
   46cb4:	ldp	d8, d9, [sp, #32]
   46cb8:	fsub	s0, s1, s0
   46cbc:	b	46a50 <erff@@GLIBC_2.17+0x1a0>
   46cc0:	mov	w0, #0x7f97                	// #32663
   46cc4:	mov	w1, #0x932b                	// #37675
   46cc8:	movk	w0, #0xbd77, lsl #16
   46ccc:	fmov	s3, w0
   46cd0:	mov	w0, #0x3f7c                	// #16252
   46cd4:	movk	w1, #0xc2a2, lsl #16
   46cd8:	movk	w0, #0x40d2, lsl #16
   46cdc:	fmov	s18, w0
   46ce0:	mov	w0, #0x77e                 	// #1918
   46ce4:	fmov	s17, w1
   46ce8:	movk	w0, #0xc11d, lsl #16
   46cec:	fmov	s1, w0
   46cf0:	fmadd	s3, s0, s3, s18
   46cf4:	mov	w0, #0x451f                	// #17695
   46cf8:	fmadd	s1, s0, s1, s17
   46cfc:	movk	w0, #0x42d9, lsl #16
   46d00:	fmov	s18, w0
   46d04:	mov	w0, #0x810b                	// #33035
   46d08:	movk	w0, #0x43d6, lsl #16
   46d0c:	fmov	s16, w0
   46d10:	mov	w0, #0x9ae7                	// #39655
   46d14:	mov	w1, #0x658c                	// #25996
   46d18:	movk	w0, #0xc338, lsl #16
   46d1c:	fmov	s17, w0
   46d20:	mov	w0, #0x58c9                	// #22729
   46d24:	movk	w1, #0xc322, lsl #16
   46d28:	movk	w0, #0x4421, lsl #16
   46d2c:	fmov	s7, w0
   46d30:	fmadd	s18, s3, s0, s18
   46d34:	mov	w0, #0x486f                	// #18543
   46d38:	fmadd	s17, s1, s0, s17
   46d3c:	movk	w0, #0x43d9, lsl #16
   46d40:	fmov	s10, w1
   46d44:	fmov	s5, w0
   46d48:	mov	w1, #0x8057                	// #32855
   46d4c:	mov	w0, #0xa863                	// #43107
   46d50:	movk	w1, #0xc279, lsl #16
   46d54:	movk	w0, #0x4309, lsl #16
   46d58:	fmov	s6, w1
   46d5c:	mov	w1, #0xf022                	// #61474
   46d60:	fmov	s3, w0
   46d64:	mov	w0, #0x35ce                	// #13774
   46d68:	movk	w1, #0xc128, lsl #16
   46d6c:	movk	w0, #0x419d, lsl #16
   46d70:	fmov	s4, w1
   46d74:	fmov	s11, w0
   46d78:	mov	w1, #0xa0b7                	// #41143
   46d7c:	mov	w0, #0xa093                	// #41107
   46d80:	movk	w1, #0xbf31, lsl #16
   46d84:	movk	w0, #0xbc21, lsl #16
   46d88:	fmadd	s16, s18, s0, s16
   46d8c:	fmadd	s10, s17, s0, s10
   46d90:	fmov	s9, w1
   46d94:	fmov	s1, w0
   46d98:	b	46c3c <erff@@GLIBC_2.17+0x38c>
   46d9c:	fmov	s1, #1.000000000000000000e+00
   46da0:	fmov	s0, w0
   46da4:	fsub	s0, s0, s1
   46da8:	b	46a50 <erff@@GLIBC_2.17+0x1a0>
   46dac:	fsub	s0, s8, s0
   46db0:	ldp	d8, d9, [sp, #32]
   46db4:	ldp	d10, d11, [sp, #48]
   46db8:	b	46a50 <erff@@GLIBC_2.17+0x1a0>
   46dbc:	nop

0000000000046dc0 <erfcf@@GLIBC_2.17>:
   46dc0:	stp	x29, x30, [sp, #-64]!
   46dc4:	mov	w0, #0x7f7fffff            	// #2139095039
   46dc8:	mov	x29, sp
   46dcc:	str	x19, [sp, #16]
   46dd0:	fmov	w19, s0
   46dd4:	and	w1, w19, #0x7fffffff
   46dd8:	cmp	w1, w0
   46ddc:	b.gt	46fd4 <erfcf@@GLIBC_2.17+0x214>
   46de0:	mov	w0, #0x3f57ffff            	// #1062731775
   46de4:	cmp	w1, w0
   46de8:	b.gt	46ecc <erfcf@@GLIBC_2.17+0x10c>
   46dec:	stp	d8, d9, [sp, #32]
   46df0:	mov	w0, #0x327fffff            	// #847249407
   46df4:	cmp	w1, w0
   46df8:	b.le	47194 <erfcf@@GLIBC_2.17+0x3d4>
   46dfc:	fmul	s1, s0, s0
   46e00:	mov	w0, #0xe21a                	// #57882
   46e04:	movk	w0, #0xb684, lsl #16
   46e08:	fmov	s16, w0
   46e0c:	mov	w0, #0xee49                	// #61001
   46e10:	mov	w1, #0x528f                	// #21135
   46e14:	movk	w0, #0x390a, lsl #16
   46e18:	fmov	s7, w0
   46e1c:	fmadd	s16, s1, s16, s7
   46e20:	mov	w0, #0x56b1                	// #22193
   46e24:	movk	w0, #0xb7c7, lsl #16
   46e28:	fmov	s9, w0
   46e2c:	mov	w0, #0x8116                	// #33046
   46e30:	movk	w1, #0xbce9, lsl #16
   46e34:	movk	w0, #0x3ba6, lsl #16
   46e38:	fmov	s7, w0
   46e3c:	mov	w0, #0x1489                	// #5257
   46e40:	fmov	s8, #1.000000000000000000e+00
   46e44:	movk	w0, #0xbbbd, lsl #16
   46e48:	fmov	s6, w0
   46e4c:	fmadd	s9, s1, s9, s6
   46e50:	mov	w0, #0x2a63                	// #10851
   46e54:	movk	w0, #0x3d85, lsl #16
   46e58:	fmov	s6, w1
   46e5c:	fmadd	s7, s16, s1, s7
   46e60:	fmov	s5, w0
   46e64:	mov	w1, #0x6beb                	// #27627
   46e68:	mov	w0, #0xbbce                	// #48078
   46e6c:	movk	w0, #0x3ecb, lsl #16
   46e70:	movk	w1, #0xbea6, lsl #16
   46e74:	fmov	s3, w0
   46e78:	fmov	s4, w1
   46e7c:	mov	w0, #0x75d4                	// #30164
   46e80:	movk	w0, #0x3e03, lsl #16
   46e84:	fmov	s2, w0
   46e88:	fmadd	s6, s9, s1, s6
   46e8c:	mov	w0, #0x3e7fffff            	// #1048575999
   46e90:	cmp	w19, w0
   46e94:	fmadd	s5, s7, s1, s5
   46e98:	fmadd	s4, s6, s1, s4
   46e9c:	fmadd	s3, s5, s1, s3
   46ea0:	fmadd	s2, s4, s1, s2
   46ea4:	fmadd	s1, s3, s1, s8
   46ea8:	fdiv	s1, s2, s1
   46eac:	fmul	s1, s1, s0
   46eb0:	b.gt	47188 <erfcf@@GLIBC_2.17+0x3c8>
   46eb4:	fadd	s0, s0, s1
   46eb8:	fsub	s0, s8, s0
   46ebc:	ldp	d8, d9, [sp, #32]
   46ec0:	ldr	x19, [sp, #16]
   46ec4:	ldp	x29, x30, [sp], #64
   46ec8:	ret
   46ecc:	mov	w0, #0x3f9fffff            	// #1067450367
   46ed0:	cmp	w1, w0
   46ed4:	b.gt	47004 <erfcf@@GLIBC_2.17+0x244>
   46ed8:	fabs	s0, s0
   46edc:	stp	d8, d9, [sp, #32]
   46ee0:	fmov	s8, #1.000000000000000000e+00
   46ee4:	mov	w1, #0xf9c0                	// #63936
   46ee8:	mov	w0, #0x5aa3                	// #23203
   46eec:	movk	w1, #0xbb0d, lsl #16
   46ef0:	movk	w0, #0x3c44, lsl #16
   46ef4:	fsub	s0, s0, s8
   46ef8:	fmov	s7, w1
   46efc:	fmov	s6, w0
   46f00:	mov	w1, #0x51b3                	// #20915
   46f04:	mov	w0, #0x6e13                	// #28179
   46f08:	movk	w1, #0x3d11, lsl #16
   46f0c:	movk	w0, #0x3c5f, lsl #16
   46f10:	fmov	s18, w1
   46f14:	fmov	s17, w0
   46f18:	fmadd	s18, s0, s7, s18
   46f1c:	fmadd	s17, s0, s6, s17
   46f20:	mov	w1, #0x1cc2                	// #7362
   46f24:	mov	w0, #0x3307                	// #13063
   46f28:	movk	w1, #0xbde3, lsl #16
   46f2c:	movk	w0, #0x3e01, lsl #16
   46f30:	fmov	s16, w1
   46f34:	fmov	s9, w0
   46f38:	mov	w0, #0xfe54                	// #65108
   46f3c:	movk	w0, #0x3ea2, lsl #16
   46f40:	fmov	s7, w0
   46f44:	mov	w0, #0x1ae7                	// #6887
   46f48:	mov	w2, #0x5785                	// #22405
   46f4c:	movk	w0, #0x3d93, lsl #16
   46f50:	fmov	s6, w0
   46f54:	fmadd	s16, s18, s0, s16
   46f58:	mov	w0, #0x9208                	// #37384
   46f5c:	fmadd	s9, s17, s0, s9
   46f60:	movk	w0, #0xbebe, lsl #16
   46f64:	movk	w2, #0x3f0a, lsl #16
   46f68:	fmov	s5, w0
   46f6c:	fmov	s4, w2
   46f70:	mov	w1, #0x6805                	// #26629
   46f74:	mov	w0, #0xf331                	// #62257
   46f78:	movk	w1, #0x3ed4, lsl #16
   46f7c:	movk	w0, #0x3dd9, lsl #16
   46f80:	fmov	s3, w1
   46f84:	fmov	s2, w0
   46f88:	mov	w0, #0xcdc6                	// #52678
   46f8c:	movk	w0, #0xbb1a, lsl #16
   46f90:	fmov	s1, w0
   46f94:	fmadd	s7, s16, s0, s7
   46f98:	fmadd	s6, s9, s0, s6
   46f9c:	fmadd	s5, s7, s0, s5
   46fa0:	fmadd	s4, s6, s0, s4
   46fa4:	fmadd	s3, s5, s0, s3
   46fa8:	fmadd	s2, s4, s0, s2
   46fac:	fmadd	s1, s3, s0, s1
   46fb0:	fmadd	s0, s2, s0, s8
   46fb4:	fdiv	s1, s1, s0
   46fb8:	tbnz	w19, #31, 471dc <erfcf@@GLIBC_2.17+0x41c>
   46fbc:	mov	w0, #0xa7d4                	// #42964
   46fc0:	movk	w0, #0x3e1e, lsl #16
   46fc4:	fmov	s0, w0
   46fc8:	ldp	d8, d9, [sp, #32]
   46fcc:	fsub	s0, s0, s1
   46fd0:	b	46ec0 <erfcf@@GLIBC_2.17+0x100>
   46fd4:	stp	d8, d9, [sp, #32]
   46fd8:	fmov	s8, #1.000000000000000000e+00
   46fdc:	lsr	w0, w19, #31
   46fe0:	fdiv	s8, s8, s0
   46fe4:	fmov	s0, w0
   46fe8:	ldr	x19, [sp, #16]
   46fec:	shl	v0.2s, v0.2s, #1
   46ff0:	scvtf	s0, s0
   46ff4:	fadd	s0, s0, s8
   46ff8:	ldp	d8, d9, [sp, #32]
   46ffc:	ldp	x29, x30, [sp], #64
   47000:	ret
   47004:	mov	w0, #0x41dfffff            	// #1105199103
   47008:	cmp	w1, w0
   4700c:	b.gt	471ac <erfcf@@GLIBC_2.17+0x3ec>
   47010:	fmul	s2, s0, s0
   47014:	fmov	s1, #1.000000000000000000e+00
   47018:	mov	w0, #0xdb6c                	// #56172
   4701c:	stp	d8, d9, [sp, #32]
   47020:	movk	w0, #0x4036, lsl #16
   47024:	stp	d10, d11, [sp, #48]
   47028:	fabs	s8, s0
   4702c:	cmp	w1, w0
   47030:	fdiv	s0, s1, s2
   47034:	b.le	471f8 <erfcf@@GLIBC_2.17+0x438>
   47038:	cmp	w19, #0x0
   4703c:	mov	w0, #0x40bfffff            	// #1086324735
   47040:	ccmp	w1, w0, #0x4, lt  // lt = tstop
   47044:	b.gt	47338 <erfcf@@GLIBC_2.17+0x578>
   47048:	mov	w0, #0x8712                	// #34578
   4704c:	mov	w1, #0x230b                	// #8971
   47050:	movk	w0, #0xc1b3, lsl #16
   47054:	fmov	s3, w0
   47058:	mov	w0, #0x43a7                	// #17319
   4705c:	movk	w1, #0xc480, lsl #16
   47060:	movk	w0, #0x43ed, lsl #16
   47064:	fmov	s16, w0
   47068:	fmadd	s3, s0, s3, s16
   4706c:	mov	w0, #0xc275                	// #49781
   47070:	movk	w0, #0xc3f1, lsl #16
   47074:	fmov	s2, w0
   47078:	mov	w0, #0x90ce                	// #37070
   4707c:	fmov	s10, w1
   47080:	movk	w0, #0x451f, lsl #16
   47084:	fmov	s16, w0
   47088:	fmadd	s2, s0, s2, s10
   4708c:	mov	w0, #0xfdbb                	// #64955
   47090:	movk	w0, #0x4547, lsl #16
   47094:	fmov	s7, w0
   47098:	mov	w0, #0x6441                	// #25665
   4709c:	mov	w1, #0xa2ea                	// #41706
   470a0:	movk	w0, #0xc41f, lsl #16
   470a4:	fmov	s10, w0
   470a8:	fmadd	s16, s3, s0, s16
   470ac:	mov	w0, #0x1759                	// #5977
   470b0:	movk	w0, #0x44c0, lsl #16
   470b4:	movk	w1, #0xc320, lsl #16
   470b8:	fmov	s5, w0
   470bc:	fmov	s6, w1
   470c0:	mov	w0, #0xe571                	// #58737
   470c4:	mov	w1, #0x104b                	// #4171
   470c8:	fmadd	s10, s2, s0, s10
   470cc:	movk	w0, #0x43a2, lsl #16
   470d0:	movk	w1, #0xc18e, lsl #16
   470d4:	fmov	s3, w0
   470d8:	fmov	s4, w1
   470dc:	mov	w0, #0xb459                	// #46169
   470e0:	mov	w1, #0x9dd4                	// #40404
   470e4:	movk	w0, #0x41f2, lsl #16
   470e8:	fmadd	s7, s16, s0, s7
   470ec:	fmov	s11, w0
   470f0:	movk	w1, #0xbf4c, lsl #16
   470f4:	fmov	s9, w1
   470f8:	mov	w0, #0xa092                	// #41106
   470fc:	movk	w0, #0xbc21, lsl #16
   47100:	fmov	s2, w0
   47104:	fmadd	s6, s10, s0, s6
   47108:	fmadd	s5, s7, s0, s5
   4710c:	fmadd	s4, s6, s0, s4
   47110:	fmadd	s3, s5, s0, s3
   47114:	fmadd	s9, s4, s0, s9
   47118:	fmadd	s11, s3, s0, s11
   4711c:	fmadd	s9, s9, s0, s2
   47120:	fmadd	s11, s11, s0, s1
   47124:	mvni	v0.2s, #0x1f, msl #8
   47128:	and	v10.8b, v8.8b, v0.8b
   4712c:	fmov	s0, #-5.625000000000000000e-01
   47130:	fmsub	s0, s10, s10, s0
   47134:	bl	42d58 <__expf_finite@GLIBC_2.17>
   47138:	fsub	s2, s10, s8
   4713c:	fdiv	s11, s9, s11
   47140:	fadd	s10, s8, s10
   47144:	fmov	s9, s0
   47148:	fmadd	s0, s2, s10, s11
   4714c:	bl	42d58 <__expf_finite@GLIBC_2.17>
   47150:	fmul	s0, s9, s0
   47154:	cmp	w19, #0x0
   47158:	fdiv	s0, s0, s8
   4715c:	b.le	47318 <erfcf@@GLIBC_2.17+0x558>
   47160:	fcmp	s0, #0.0
   47164:	b.ne	4732c <erfcf@@GLIBC_2.17+0x56c>  // b.any
   47168:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4716c:	ldr	x0, [x0, #3976]
   47170:	mrs	x1, tpidr_el0
   47174:	mov	w2, #0x22                  	// #34
   47178:	ldp	d8, d9, [sp, #32]
   4717c:	str	w2, [x1, x0]
   47180:	ldp	d10, d11, [sp, #48]
   47184:	b	46ec0 <erfcf@@GLIBC_2.17+0x100>
   47188:	fmov	s8, #5.000000000000000000e-01
   4718c:	fsub	s0, s0, s8
   47190:	b	46eb4 <erfcf@@GLIBC_2.17+0xf4>
   47194:	fmov	s8, #1.000000000000000000e+00
   47198:	ldr	x19, [sp, #16]
   4719c:	fsub	s0, s8, s0
   471a0:	ldp	d8, d9, [sp, #32]
   471a4:	ldp	x29, x30, [sp], #64
   471a8:	ret
   471ac:	cmp	w19, #0x0
   471b0:	b.le	472f8 <erfcf@@GLIBC_2.17+0x538>
   471b4:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   471b8:	ldr	x1, [x1, #3976]
   471bc:	mrs	x2, tpidr_el0
   471c0:	mov	w0, #0x4260                	// #16992
   471c4:	mov	w3, #0x22                  	// #34
   471c8:	movk	w0, #0xda2, lsl #16
   471cc:	fmov	s0, w0
   471d0:	fmul	s0, s0, s0
   471d4:	str	w3, [x2, x1]
   471d8:	b	46ec0 <erfcf@@GLIBC_2.17+0x100>
   471dc:	mov	w0, #0x560b                	// #22027
   471e0:	movk	w0, #0x3f58, lsl #16
   471e4:	fmov	s0, w0
   471e8:	fadd	s0, s1, s0
   471ec:	fadd	s0, s0, s8
   471f0:	ldp	d8, d9, [sp, #32]
   471f4:	b	46ec0 <erfcf@@GLIBC_2.17+0x100>
   471f8:	mov	w0, #0x7f97                	// #32663
   471fc:	mov	w1, #0x932b                	// #37675
   47200:	movk	w0, #0xbd77, lsl #16
   47204:	fmov	s3, w0
   47208:	mov	w0, #0x3f7c                	// #16252
   4720c:	movk	w1, #0xc2a2, lsl #16
   47210:	movk	w0, #0x40d2, lsl #16
   47214:	fmov	s18, w0
   47218:	fmadd	s3, s0, s3, s18
   4721c:	mov	w0, #0x77e                 	// #1918
   47220:	movk	w0, #0xc11d, lsl #16
   47224:	fmov	s2, w0
   47228:	mov	w0, #0x451f                	// #17695
   4722c:	fmov	s17, w1
   47230:	movk	w0, #0x42d9, lsl #16
   47234:	fmov	s18, w0
   47238:	fmadd	s2, s0, s2, s17
   4723c:	mov	w0, #0x810b                	// #33035
   47240:	movk	w0, #0x43d6, lsl #16
   47244:	fmov	s16, w0
   47248:	mov	w0, #0x9ae7                	// #39655
   4724c:	mov	w1, #0x658c                	// #25996
   47250:	movk	w0, #0xc338, lsl #16
   47254:	fmov	s17, w0
   47258:	fmadd	s18, s3, s0, s18
   4725c:	mov	w0, #0x58c9                	// #22729
   47260:	movk	w0, #0x4421, lsl #16
   47264:	movk	w1, #0xc322, lsl #16
   47268:	fmov	s7, w0
   4726c:	fmov	s10, w1
   47270:	mov	w0, #0x486f                	// #18543
   47274:	mov	w1, #0x8057                	// #32855
   47278:	fmadd	s17, s2, s0, s17
   4727c:	movk	w0, #0x43d9, lsl #16
   47280:	movk	w1, #0xc279, lsl #16
   47284:	fmov	s5, w0
   47288:	fmov	s6, w1
   4728c:	mov	w0, #0xa863                	// #43107
   47290:	mov	w1, #0xf022                	// #61474
   47294:	movk	w0, #0x4309, lsl #16
   47298:	fmadd	s16, s18, s0, s16
   4729c:	movk	w1, #0xc128, lsl #16
   472a0:	fmov	s3, w0
   472a4:	fmov	s4, w1
   472a8:	mov	w0, #0x35ce                	// #13774
   472ac:	mov	w1, #0xa0b7                	// #41143
   472b0:	movk	w0, #0x419d, lsl #16
   472b4:	movk	w1, #0xbf31, lsl #16
   472b8:	fmadd	s10, s17, s0, s10
   472bc:	fmov	s11, w0
   472c0:	fmov	s2, w1
   472c4:	mov	w0, #0xa093                	// #41107
   472c8:	movk	w0, #0xbc21, lsl #16
   472cc:	fmov	s9, w0
   472d0:	fmadd	s7, s16, s0, s7
   472d4:	fmadd	s6, s10, s0, s6
   472d8:	fmadd	s5, s7, s0, s5
   472dc:	fmadd	s4, s6, s0, s4
   472e0:	fmadd	s3, s5, s0, s3
   472e4:	fmadd	s2, s4, s0, s2
   472e8:	fmadd	s11, s3, s0, s11
   472ec:	fmadd	s9, s2, s0, s9
   472f0:	fmadd	s11, s11, s0, s1
   472f4:	b	47124 <erfcf@@GLIBC_2.17+0x364>
   472f8:	stp	d8, d9, [sp, #32]
   472fc:	mov	w0, #0x4260                	// #16992
   47300:	movk	w0, #0xda2, lsl #16
   47304:	fmov	s0, #2.000000000000000000e+00
   47308:	fmov	s8, w0
   4730c:	fsub	s0, s0, s8
   47310:	ldp	d8, d9, [sp, #32]
   47314:	b	46ec0 <erfcf@@GLIBC_2.17+0x100>
   47318:	fmov	s8, #2.000000000000000000e+00
   4731c:	ldp	d10, d11, [sp, #48]
   47320:	fsub	s0, s8, s0
   47324:	ldp	d8, d9, [sp, #32]
   47328:	b	46ec0 <erfcf@@GLIBC_2.17+0x100>
   4732c:	ldp	d8, d9, [sp, #32]
   47330:	ldp	d10, d11, [sp, #48]
   47334:	b	46ec0 <erfcf@@GLIBC_2.17+0x100>
   47338:	ldp	d10, d11, [sp, #48]
   4733c:	b	472fc <erfcf@@GLIBC_2.17+0x53c>

0000000000047340 <expm1f@@GLIBC_2.17>:
   47340:	fmov	w1, s0
   47344:	mov	w2, #0xb843                	// #47171
   47348:	movk	w2, #0x4195, lsl #16
   4734c:	and	w0, w1, #0x7fffffff
   47350:	cmp	w0, w2
   47354:	b.ls	473b0 <expm1f@@GLIBC_2.17+0x70>  // b.plast
   47358:	mov	w2, #0x7217                	// #29207
   4735c:	movk	w2, #0x42b1, lsl #16
   47360:	cmp	w0, w2
   47364:	b.hi	474ac <expm1f@@GLIBC_2.17+0x16c>  // b.pmore
   47368:	tbnz	w1, #31, 475b8 <expm1f@@GLIBC_2.17+0x278>
   4736c:	mov	w0, #0xaa3b                	// #43579
   47370:	fmov	s1, #5.000000000000000000e-01
   47374:	movk	w0, #0x3fb8, lsl #16
   47378:	fmov	s2, w0
   4737c:	fmul	s2, s0, s2
   47380:	fadd	s1, s1, s2
   47384:	mov	w0, #0x7180                	// #29056
   47388:	movk	w0, #0x3f31, lsl #16
   4738c:	fmov	s2, w0
   47390:	mov	w0, #0xf7d1                	// #63441
   47394:	movk	w0, #0x3717, lsl #16
   47398:	fmov	s4, w0
   4739c:	fcvtzs	w1, s1
   473a0:	scvtf	s3, w1
   473a4:	fmsub	s2, s3, s2, s0
   473a8:	fmul	s3, s3, s4
   473ac:	b	47538 <expm1f@@GLIBC_2.17+0x1f8>
   473b0:	mov	w2, #0x7218                	// #29208
   473b4:	movk	w2, #0x3eb1, lsl #16
   473b8:	cmp	w0, w2
   473bc:	b.hi	47504 <expm1f@@GLIBC_2.17+0x1c4>  // b.pmore
   473c0:	mov	w2, #0x32ffffff            	// #855638015
   473c4:	mov	w1, #0x0                   	// #0
   473c8:	cmp	w0, w2
   473cc:	b.ls	47568 <expm1f@@GLIBC_2.17+0x228>  // b.plast
   473d0:	fmov	s20, #5.000000000000000000e-01
   473d4:	mov	w0, #0xedbb                	// #60859
   473d8:	movk	w0, #0xb457, lsl #16
   473dc:	fmov	s17, w0
   473e0:	fmul	s18, s0, s20
   473e4:	mov	w0, #0x7e54                	// #32340
   473e8:	movk	w0, #0x3686, lsl #16
   473ec:	fmov	s1, w0
   473f0:	mov	w0, #0x70cd                	// #28877
   473f4:	fmov	s19, #1.000000000000000000e+00
   473f8:	movk	w0, #0xb8a6, lsl #16
   473fc:	fmov	s6, w0
   47400:	fmul	s4, s0, s18
   47404:	mov	w0, #0xd01                 	// #3329
   47408:	movk	w0, #0x3ad0, lsl #16
   4740c:	fmov	s5, w0
   47410:	mov	w0, #0x8889                	// #34953
   47414:	fmov	s7, #3.000000000000000000e+00
   47418:	movk	w0, #0xbd08, lsl #16
   4741c:	fmov	s2, w0
   47420:	fmadd	s1, s4, s17, s1
   47424:	fmov	s16, #6.000000000000000000e+00
   47428:	fmadd	s1, s1, s4, s6
   4742c:	fmadd	s1, s1, s4, s5
   47430:	fmadd	s2, s1, s4, s2
   47434:	fmadd	s1, s2, s4, s19
   47438:	fmsub	s2, s18, s1, s7
   4743c:	fmsub	s5, s0, s2, s16
   47440:	fsub	s1, s1, s2
   47444:	fdiv	s1, s1, s5
   47448:	fmul	s1, s1, s4
   4744c:	cbz	w1, 474f8 <expm1f@@GLIBC_2.17+0x1b8>
   47450:	fsub	s1, s1, s3
   47454:	cmn	w1, #0x1
   47458:	fnmsub	s1, s1, s0, s3
   4745c:	fsub	s3, s1, s4
   47460:	b.eq	475d4 <expm1f@@GLIBC_2.17+0x294>  // b.none
   47464:	cmp	w1, #0x1
   47468:	b.eq	47598 <expm1f@@GLIBC_2.17+0x258>  // b.none
   4746c:	add	w0, w1, #0x1
   47470:	lsl	w2, w1, #23
   47474:	cmp	w0, #0x39
   47478:	b.hi	47550 <expm1f@@GLIBC_2.17+0x210>  // b.pmore
   4747c:	cmp	w1, #0x16
   47480:	b.gt	4761c <expm1f@@GLIBC_2.17+0x2dc>
   47484:	fsub	s0, s3, s0
   47488:	mov	w0, #0x1000000             	// #16777216
   4748c:	asr	w1, w0, w1
   47490:	mov	w0, #0x3f800000            	// #1065353216
   47494:	sub	w0, w0, w1
   47498:	fmov	s1, w0
   4749c:	fsub	s0, s1, s0
   474a0:	fmov	s1, w2
   474a4:	add	v0.2s, v1.2s, v0.2s
   474a8:	ret
   474ac:	mov	w2, #0x7f800000            	// #2139095040
   474b0:	cmp	w0, w2
   474b4:	b.hi	47548 <expm1f@@GLIBC_2.17+0x208>  // b.pmore
   474b8:	b.eq	47654 <expm1f@@GLIBC_2.17+0x314>  // b.none
   474bc:	mov	w0, #0x7180                	// #29056
   474c0:	movk	w0, #0x42b1, lsl #16
   474c4:	fmov	s1, w0
   474c8:	fcmpe	s0, s1
   474cc:	b.le	47368 <expm1f@@GLIBC_2.17+0x28>
   474d0:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   474d4:	ldr	x1, [x1, #3976]
   474d8:	mrs	x2, tpidr_el0
   474dc:	mov	w0, #0xf2ca                	// #62154
   474e0:	mov	w3, #0x22                  	// #34
   474e4:	movk	w0, #0x7149, lsl #16
   474e8:	fmov	s0, w0
   474ec:	fmul	s0, s0, s0
   474f0:	str	w3, [x2, x1]
   474f4:	ret
   474f8:	fnmsub	s1, s0, s1, s4
   474fc:	fsub	s0, s0, s1
   47500:	ret
   47504:	mov	w2, #0x1591                	// #5521
   47508:	movk	w2, #0x3f85, lsl #16
   4750c:	cmp	w0, w2
   47510:	b.hi	475f8 <expm1f@@GLIBC_2.17+0x2b8>  // b.pmore
   47514:	mov	w0, #0x7180                	// #29056
   47518:	movk	w0, #0x3f31, lsl #16
   4751c:	fmov	s2, w0
   47520:	mov	w0, #0xf7d1                	// #63441
   47524:	tbnz	w1, #31, 475e4 <expm1f@@GLIBC_2.17+0x2a4>
   47528:	fsub	s2, s0, s2
   4752c:	movk	w0, #0x3717, lsl #16
   47530:	mov	w1, #0x1                   	// #1
   47534:	fmov	s3, w0
   47538:	fsub	s0, s2, s3
   4753c:	fsub	s2, s2, s0
   47540:	fsub	s3, s2, s3
   47544:	b	473d0 <expm1f@@GLIBC_2.17+0x90>
   47548:	fadd	s0, s0, s0
   4754c:	ret
   47550:	fsub	s0, s3, s0
   47554:	fsub	s1, s19, s0
   47558:	fmov	s0, w2
   4755c:	add	v0.2s, v0.2s, v1.2s
   47560:	fsub	s0, s0, s19
   47564:	ret
   47568:	fabs	s2, s0
   4756c:	movi	v1.2s, #0x80, lsl #16
   47570:	fcmpe	s2, s1
   47574:	b.pl	4757c <expm1f@@GLIBC_2.17+0x23c>  // b.nfrst
   47578:	fmul	s1, s0, s0
   4757c:	mov	w0, #0xf2ca                	// #62154
   47580:	movk	w0, #0x7149, lsl #16
   47584:	fmov	s1, w0
   47588:	fadd	s1, s0, s1
   4758c:	fsub	s1, s1, s1
   47590:	fsub	s0, s0, s1
   47594:	ret
   47598:	fmov	s1, #-2.500000000000000000e-01
   4759c:	fcmpe	s0, s1
   475a0:	b.pl	47644 <expm1f@@GLIBC_2.17+0x304>  // b.nfrst
   475a4:	fadd	s0, s0, s20
   475a8:	fmov	s1, #-2.000000000000000000e+00
   475ac:	fsub	s0, s3, s0
   475b0:	fmul	s0, s0, s1
   475b4:	ret
   475b8:	mov	w0, #0x4260                	// #16992
   475bc:	movk	w0, #0xda2, lsl #16
   475c0:	fmov	s1, w0
   475c4:	fadd	s0, s0, s1
   475c8:	fmov	s0, #1.000000000000000000e+00
   475cc:	fsub	s0, s1, s0
   475d0:	ret
   475d4:	fsub	s1, s0, s3
   475d8:	fmov	s0, #-5.000000000000000000e-01
   475dc:	fmadd	s0, s1, s20, s0
   475e0:	ret
   475e4:	movk	w0, #0xb717, lsl #16
   475e8:	fadd	s2, s0, s2
   475ec:	mov	w1, #0xffffffff            	// #-1
   475f0:	fmov	s3, w0
   475f4:	b	47538 <expm1f@@GLIBC_2.17+0x1f8>
   475f8:	cmp	w1, #0x0
   475fc:	mov	w0, #0xaa3b                	// #43579
   47600:	fmov	s1, #5.000000000000000000e-01
   47604:	fmov	s3, #-5.000000000000000000e-01
   47608:	movk	w0, #0x3fb8, lsl #16
   4760c:	fmov	s2, w0
   47610:	fcsel	s1, s1, s3, ge  // ge = tcont
   47614:	fmul	s2, s0, s2
   47618:	b	47380 <expm1f@@GLIBC_2.17+0x40>
   4761c:	mov	w0, #0x7f                  	// #127
   47620:	sub	w1, w0, w1
   47624:	fmov	s1, w1
   47628:	shl	v1.2s, v1.2s, #23
   4762c:	fadd	s1, s3, s1
   47630:	fsub	s0, s0, s1
   47634:	fmov	s1, w2
   47638:	fadd	s0, s0, s19
   4763c:	add	v0.2s, v1.2s, v0.2s
   47640:	ret
   47644:	fsub	s1, s0, s3
   47648:	fmov	s0, #2.000000000000000000e+00
   4764c:	fmadd	s0, s1, s0, s19
   47650:	ret
   47654:	cmp	w1, #0x0
   47658:	fmov	s1, #-1.000000000000000000e+00
   4765c:	fcsel	s0, s0, s1, ge  // ge = tcont
   47660:	ret
   47664:	nop

0000000000047668 <fabsf@@GLIBC_2.17>:
   47668:	fabs	s0, s0
   4766c:	ret

0000000000047670 <floorf@@GLIBC_2.17>:
   47670:	frintm	s0, s0
   47674:	ret
   47678:	fmov	w0, s0
   4767c:	mov	w1, #0x13d6                	// #5078
   47680:	movk	w1, #0x3ed4, lsl #16
   47684:	cmp	w0, w1
   47688:	b.le	47724 <floorf@@GLIBC_2.17+0xb4>
   4768c:	mov	w1, #0x7f7fffff            	// #2139095039
   47690:	cmp	w0, w1
   47694:	b.gt	4771c <floorf@@GLIBC_2.17+0xac>
   47698:	mov	w1, #0x59ffffff            	// #1509949439
   4769c:	cmp	w0, w1
   476a0:	b.le	478b0 <floorf@@GLIBC_2.17+0x240>
   476a4:	asr	w1, w0, #23
   476a8:	movi	v5.2s, #0x0
   476ac:	sub	w1, w1, #0x7f
   476b0:	and	w0, w0, #0x7fffff
   476b4:	mov	w2, #0x4f6                 	// #1270
   476b8:	movk	w2, #0x35, lsl #16
   476bc:	cmp	w0, w2
   476c0:	b.gt	47894 <floorf@@GLIBC_2.17+0x224>
   476c4:	orr	w2, w0, #0x3f800000
   476c8:	fmov	s0, w2
   476cc:	fmov	s2, #1.000000000000000000e+00
   476d0:	fmov	s1, #5.000000000000000000e-01
   476d4:	fsub	s0, s0, s2
   476d8:	fmul	s1, s0, s1
   476dc:	fmul	s1, s1, s0
   476e0:	cbnz	w0, 47780 <floorf@@GLIBC_2.17+0x110>
   476e4:	fcmp	s0, #0.0
   476e8:	b.ne	4784c <floorf@@GLIBC_2.17+0x1dc>  // b.any
   476ec:	movi	v0.2s, #0x0
   476f0:	cbz	w1, 47718 <floorf@@GLIBC_2.17+0xa8>
   476f4:	scvtf	s2, w1
   476f8:	mov	w0, #0xf7d1                	// #63441
   476fc:	movk	w0, #0x3717, lsl #16
   47700:	fmov	s0, w0
   47704:	mov	w0, #0x7180                	// #29056
   47708:	movk	w0, #0x3f31, lsl #16
   4770c:	fmov	s1, w0
   47710:	fmadd	s0, s2, s0, s5
   47714:	fmadd	s0, s2, s1, s0
   47718:	ret
   4771c:	fadd	s0, s0, s0
   47720:	ret
   47724:	and	w1, w0, #0x7fffffff
   47728:	mov	w2, #0x3f7fffff            	// #1065353215
   4772c:	cmp	w1, w2
   47730:	b.le	47750 <floorf@@GLIBC_2.17+0xe0>
   47734:	fmov	s1, #-1.000000000000000000e+00
   47738:	fcmp	s0, s1
   4773c:	b.ne	47814 <floorf@@GLIBC_2.17+0x1a4>  // b.any
   47740:	movi	v1.2s, #0x0
   47744:	movi	v0.2s, #0xcc, lsl #24
   47748:	fdiv	s0, s0, s1
   4774c:	ret
   47750:	mov	w2, #0x30ffffff            	// #822083583
   47754:	cmp	w1, w2
   47758:	b.le	47820 <floorf@@GLIBC_2.17+0x1b0>
   4775c:	mov	w1, #0x9e0                 	// #2528
   47760:	movk	w1, #0x416a, lsl #16
   47764:	add	w0, w0, w1
   47768:	cmp	w0, w1
   4776c:	b.ls	478b0 <floorf@@GLIBC_2.17+0x240>  // b.plast
   47770:	fmov	s1, #5.000000000000000000e-01
   47774:	mov	w1, #0x0                   	// #0
   47778:	fmul	s1, s0, s1
   4777c:	fmul	s1, s1, s0
   47780:	fmov	s2, #2.000000000000000000e+00
   47784:	mov	w0, #0x8897                	// #34967
   47788:	movk	w0, #0x3e17, lsl #16
   4778c:	fmov	s19, w0
   47790:	fadd	s2, s0, s2
   47794:	mov	w0, #0xd04f                	// #53327
   47798:	movk	w0, #0x3e1c, lsl #16
   4779c:	fmov	s18, w0
   477a0:	mov	w0, #0x3325                	// #13093
   477a4:	movk	w0, #0x3e3a, lsl #16
   477a8:	fmov	s17, w0
   477ac:	fdiv	s2, s0, s2
   477b0:	mov	w0, #0x8e29                	// #36393
   477b4:	movk	w0, #0x3e63, lsl #16
   477b8:	fmov	s16, w0
   477bc:	mov	w0, #0x4925                	// #18725
   477c0:	movk	w0, #0x3e92, lsl #16
   477c4:	fmov	s7, w0
   477c8:	mov	w0, #0xcccd                	// #52429
   477cc:	movk	w0, #0x3ecc, lsl #16
   477d0:	fmov	s6, w0
   477d4:	mov	w0, #0xaaab                	// #43691
   477d8:	movk	w0, #0x3f2a, lsl #16
   477dc:	fmov	s3, w0
   477e0:	fmul	s4, s2, s2
   477e4:	fmadd	s18, s4, s19, s18
   477e8:	fmadd	s17, s18, s4, s17
   477ec:	fmadd	s16, s17, s4, s16
   477f0:	fmadd	s7, s16, s4, s7
   477f4:	fmadd	s6, s7, s4, s6
   477f8:	fmadd	s3, s6, s4, s3
   477fc:	fmadd	s3, s3, s4, s1
   47800:	fmul	s3, s2, s3
   47804:	cbnz	w1, 478dc <floorf@@GLIBC_2.17+0x26c>
   47808:	fsub	s1, s1, s3
   4780c:	fsub	s0, s0, s1
   47810:	ret
   47814:	fsub	s0, s0, s0
   47818:	fdiv	s0, s0, s0
   4781c:	ret
   47820:	movi	v1.2s, #0x4c, lsl #24
   47824:	fadd	s1, s0, s1
   47828:	mov	w0, #0x247fffff            	// #612368383
   4782c:	cmp	w1, w0
   47830:	b.gt	47910 <floorf@@GLIBC_2.17+0x2a0>
   47834:	fabs	s2, s0
   47838:	movi	v1.2s, #0x80, lsl #16
   4783c:	fcmpe	s2, s1
   47840:	b.pl	47718 <floorf@@GLIBC_2.17+0xa8>  // b.nfrst
   47844:	fmul	s1, s0, s0
   47848:	ret
   4784c:	mov	w0, #0xaaab                	// #43691
   47850:	movk	w0, #0x3f2a, lsl #16
   47854:	fmov	s3, w0
   47858:	fmsub	s2, s0, s3, s2
   4785c:	fmul	s1, s2, s1
   47860:	cbz	w1, 4780c <floorf@@GLIBC_2.17+0x19c>
   47864:	scvtf	s2, w1
   47868:	mov	w0, #0xf7d1                	// #63441
   4786c:	movk	w0, #0x3717, lsl #16
   47870:	fmov	s3, w0
   47874:	mov	w0, #0x7180                	// #29056
   47878:	movk	w0, #0x3f31, lsl #16
   4787c:	fmov	s4, w0
   47880:	fmadd	s5, s2, s3, s5
   47884:	fsub	s1, s1, s5
   47888:	fsub	s0, s1, s0
   4788c:	fnmsub	s0, s2, s4, s0
   47890:	ret
   47894:	mov	w2, #0x800000              	// #8388608
   47898:	sub	w2, w2, w0
   4789c:	orr	w0, w0, #0x3f000000
   478a0:	add	w1, w1, #0x1
   478a4:	fmov	s0, w0
   478a8:	asr	w0, w2, #2
   478ac:	b	476cc <floorf@@GLIBC_2.17+0x5c>
   478b0:	fmov	s1, #1.000000000000000000e+00
   478b4:	fadd	s5, s0, s1
   478b8:	fmov	w0, s5
   478bc:	asr	w1, w0, #23
   478c0:	sub	w1, w1, #0x7f
   478c4:	cmp	w1, #0x0
   478c8:	b.le	47920 <floorf@@GLIBC_2.17+0x2b0>
   478cc:	fsub	s0, s5, s0
   478d0:	fsub	s0, s1, s0
   478d4:	fdiv	s5, s0, s5
   478d8:	b	476b0 <floorf@@GLIBC_2.17+0x40>
   478dc:	scvtf	s2, w1
   478e0:	mov	w0, #0xf7d1                	// #63441
   478e4:	movk	w0, #0x3717, lsl #16
   478e8:	fmov	s6, w0
   478ec:	mov	w0, #0x7180                	// #29056
   478f0:	movk	w0, #0x3f31, lsl #16
   478f4:	fmov	s4, w0
   478f8:	fmadd	s5, s2, s6, s5
   478fc:	fadd	s3, s5, s3
   47900:	fsub	s1, s1, s3
   47904:	fsub	s0, s1, s0
   47908:	fnmsub	s0, s2, s4, s0
   4790c:	ret
   47910:	fmul	s2, s0, s0
   47914:	fmov	s1, #5.000000000000000000e-01
   47918:	fmsub	s0, s2, s1, s0
   4791c:	ret
   47920:	fsub	s1, s5, s1
   47924:	fsub	s0, s0, s1
   47928:	fdiv	s5, s0, s5
   4792c:	b	476b0 <floorf@@GLIBC_2.17+0x40>

0000000000047930 <logbf@@GLIBC_2.17>:
   47930:	fmov	w0, s0
   47934:	ands	w1, w0, #0x7fffffff
   47938:	b.eq	47974 <logbf@@GLIBC_2.17+0x44>  // b.none
   4793c:	mov	w0, #0x7f7fffff            	// #2139095039
   47940:	cmp	w1, w0
   47944:	b.gt	4796c <logbf@@GLIBC_2.17+0x3c>
   47948:	asr	w0, w1, #23
   4794c:	clz	w1, w1
   47950:	cmp	w0, #0x0
   47954:	mov	w2, #0x9                   	// #9
   47958:	sub	w1, w2, w1
   4795c:	csel	w0, w1, w0, eq  // eq = none
   47960:	sub	w0, w0, #0x7f
   47964:	scvtf	s0, w0
   47968:	ret
   4796c:	fmul	s0, s0, s0
   47970:	ret
   47974:	fabs	s0, s0
   47978:	fmov	s1, #-1.000000000000000000e+00
   4797c:	fdiv	s0, s1, s0
   47980:	ret
   47984:	nop

0000000000047988 <nextafterf@@GLIBC_2.17>:
   47988:	fmov	w0, s1
   4798c:	fmov	w2, s0
   47990:	mov	w1, #0x7f800000            	// #2139095040
   47994:	fmov	s2, s0
   47998:	and	w4, w0, #0x7fffffff
   4799c:	and	w3, w2, #0x7fffffff
   479a0:	cmp	w4, w1
   479a4:	ccmp	w3, w1, #0x0, le
   479a8:	b.gt	47a08 <nextafterf@@GLIBC_2.17+0x80>
   479ac:	fcmp	s2, s1
   479b0:	fmov	s0, s1
   479b4:	b.eq	47a04 <nextafterf@@GLIBC_2.17+0x7c>  // b.none
   479b8:	cbz	w3, 47a2c <nextafterf@@GLIBC_2.17+0xa4>
   479bc:	tbnz	w2, #31, 47a10 <nextafterf@@GLIBC_2.17+0x88>
   479c0:	cmp	w2, w0
   479c4:	sub	w0, w2, #0x1
   479c8:	csinc	w0, w0, w2, gt
   479cc:	and	w1, w0, #0x7f800000
   479d0:	mov	w2, #0x7f800000            	// #2139095040
   479d4:	cmp	w1, w2
   479d8:	b.eq	47a44 <nextafterf@@GLIBC_2.17+0xbc>  // b.none
   479dc:	mov	w2, #0x7fffff              	// #8388607
   479e0:	cmp	w1, w2
   479e4:	b.gt	47a00 <nextafterf@@GLIBC_2.17+0x78>
   479e8:	fmul	s2, s2, s2
   479ec:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   479f0:	ldr	x1, [x1, #3976]
   479f4:	mrs	x2, tpidr_el0
   479f8:	mov	w3, #0x22                  	// #34
   479fc:	str	w3, [x2, x1]
   47a00:	fmov	s0, w0
   47a04:	ret
   47a08:	fadd	s0, s0, s1
   47a0c:	ret
   47a10:	fmov	w1, s1
   47a14:	cmp	w0, #0x0
   47a18:	ccmp	w2, w1, #0x0, lt  // lt = tstop
   47a1c:	b.le	47a4c <nextafterf@@GLIBC_2.17+0xc4>
   47a20:	sub	w0, w2, #0x1
   47a24:	and	w1, w0, #0x7f800000
   47a28:	b	479dc <nextafterf@@GLIBC_2.17+0x54>
   47a2c:	and	w0, w0, #0x80000000
   47a30:	orr	w0, w0, #0x1
   47a34:	fmov	s1, w0
   47a38:	fmov	s0, w0
   47a3c:	fmul	s1, s1, s1
   47a40:	ret
   47a44:	fadd	s2, s2, s2
   47a48:	b	479ec <nextafterf@@GLIBC_2.17+0x64>
   47a4c:	add	w0, w2, #0x1
   47a50:	b	479cc <nextafterf@@GLIBC_2.17+0x44>
   47a54:	nop

0000000000047a58 <nexttowardf@@GLIBC_2.17>:
   47a58:	stp	x29, x30, [sp, #-96]!
   47a5c:	mov	w0, #0x7f800000            	// #2139095040
   47a60:	mov	x29, sp
   47a64:	stp	x19, x20, [sp, #16]
   47a68:	fmov	w19, s0
   47a6c:	stp	x21, x22, [sp, #32]
   47a70:	and	w22, w19, #0x7fffffff
   47a74:	str	d8, [sp, #56]
   47a78:	str	q1, [sp, #64]
   47a7c:	fmov	s8, s0
   47a80:	cmp	w22, w0
   47a84:	ldp	x21, x20, [sp, #64]
   47a88:	b.gt	47b48 <nexttowardf@@GLIBC_2.17+0xf0>
   47a8c:	str	x23, [sp, #48]
   47a90:	and	x0, x20, #0x7fffffffffffffff
   47a94:	mov	x1, #0x7ffeffffffffffff    	// #9223090561878065151
   47a98:	mov	x23, x20
   47a9c:	cmp	x0, x1
   47aa0:	b.le	47ab4 <nexttowardf@@GLIBC_2.17+0x5c>
   47aa4:	mov	x1, #0x8001000000000000    	// #-9223090561878065152
   47aa8:	add	x1, x0, x1
   47aac:	orr	x0, x1, x21
   47ab0:	cbnz	x0, 47b44 <nexttowardf@@GLIBC_2.17+0xec>
   47ab4:	fmov	s0, s8
   47ab8:	bl	57a20 <f64xsubf128@@GLIBC_2.28+0x3ca0>
   47abc:	stp	x21, x20, [sp, #64]
   47ac0:	ldr	q1, [sp, #64]
   47ac4:	str	q0, [sp, #80]
   47ac8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   47acc:	cbz	w0, 47b74 <nexttowardf@@GLIBC_2.17+0x11c>
   47ad0:	cbz	w22, 47bac <nexttowardf@@GLIBC_2.17+0x154>
   47ad4:	stp	x21, x20, [sp, #64]
   47ad8:	ldr	q0, [sp, #80]
   47adc:	ldr	q1, [sp, #64]
   47ae0:	tbnz	w19, #31, 47b98 <nexttowardf@@GLIBC_2.17+0x140>
   47ae4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   47ae8:	cmp	w0, #0x0
   47aec:	sub	w1, w19, #0x1
   47af0:	csinc	w19, w1, w19, gt
   47af4:	and	w0, w19, #0x7f800000
   47af8:	mov	w1, #0x7f800000            	// #2139095040
   47afc:	cmp	w0, w1
   47b00:	b.eq	47bdc <nexttowardf@@GLIBC_2.17+0x184>  // b.none
   47b04:	mov	w1, #0x7fffff              	// #8388607
   47b08:	cmp	w0, w1
   47b0c:	b.hi	47b28 <nexttowardf@@GLIBC_2.17+0xd0>  // b.pmore
   47b10:	fmul	s8, s8, s8
   47b14:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   47b18:	ldr	x0, [x0, #3976]
   47b1c:	mrs	x1, tpidr_el0
   47b20:	mov	w2, #0x22                  	// #34
   47b24:	str	w2, [x1, x0]
   47b28:	fmov	s0, w19
   47b2c:	ldr	d8, [sp, #56]
   47b30:	ldp	x19, x20, [sp, #16]
   47b34:	ldp	x21, x22, [sp, #32]
   47b38:	ldr	x23, [sp, #48]
   47b3c:	ldp	x29, x30, [sp], #96
   47b40:	ret
   47b44:	ldr	x23, [sp, #48]
   47b48:	fmov	s0, s8
   47b4c:	bl	57a20 <f64xsubf128@@GLIBC_2.28+0x3ca0>
   47b50:	stp	x21, x20, [sp, #64]
   47b54:	ldr	q1, [sp, #64]
   47b58:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   47b5c:	bl	57ca8 <f64xsubf128@@GLIBC_2.28+0x3f28>
   47b60:	ldp	x19, x20, [sp, #16]
   47b64:	ldp	x21, x22, [sp, #32]
   47b68:	ldr	d8, [sp, #56]
   47b6c:	ldp	x29, x30, [sp], #96
   47b70:	ret
   47b74:	stp	x21, x20, [sp, #64]
   47b78:	ldr	q0, [sp, #64]
   47b7c:	bl	57ca8 <f64xsubf128@@GLIBC_2.28+0x3f28>
   47b80:	ldp	x19, x20, [sp, #16]
   47b84:	ldp	x21, x22, [sp, #32]
   47b88:	ldr	x23, [sp, #48]
   47b8c:	ldr	d8, [sp, #56]
   47b90:	ldp	x29, x30, [sp], #96
   47b94:	ret
   47b98:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   47b9c:	tbz	w0, #31, 47be4 <nexttowardf@@GLIBC_2.17+0x18c>
   47ba0:	sub	w19, w19, #0x1
   47ba4:	and	w0, w19, #0x7f800000
   47ba8:	b	47b04 <nexttowardf@@GLIBC_2.17+0xac>
   47bac:	asr	x0, x23, #32
   47bb0:	and	w0, w0, #0x80000000
   47bb4:	orr	w0, w0, #0x1
   47bb8:	fmov	s1, w0
   47bbc:	fmov	s0, w0
   47bc0:	fmul	s1, s1, s1
   47bc4:	ldp	x19, x20, [sp, #16]
   47bc8:	ldp	x21, x22, [sp, #32]
   47bcc:	ldr	x23, [sp, #48]
   47bd0:	ldr	d8, [sp, #56]
   47bd4:	ldp	x29, x30, [sp], #96
   47bd8:	ret
   47bdc:	fadd	s8, s8, s8
   47be0:	b	47b14 <nexttowardf@@GLIBC_2.17+0xbc>
   47be4:	add	w19, w19, #0x1
   47be8:	b	47af4 <nexttowardf@@GLIBC_2.17+0x9c>
   47bec:	nop

0000000000047bf0 <rintf@@GLIBC_2.17>:
   47bf0:	frintx	s0, s0
   47bf4:	ret
   47bf8:	fmov	w3, s0
   47bfc:	fmov	s2, s0
   47c00:	ubfx	x1, x3, #23, #8
   47c04:	cbz	w1, 47c90 <rintf@@GLIBC_2.17+0xa0>
   47c08:	cmp	w1, #0xff
   47c0c:	b.eq	47cb0 <rintf@@GLIBC_2.17+0xc0>  // b.none
   47c10:	mov	x2, #0xffffffffffff3cb0    	// #-50000
   47c14:	cmp	x0, x2
   47c18:	b.lt	47c74 <rintf@@GLIBC_2.17+0x84>  // b.tstop
   47c1c:	mov	x2, #0xc350                	// #50000
   47c20:	cmp	x0, x2
   47c24:	b.gt	47c50 <rintf@@GLIBC_2.17+0x60>
   47c28:	add	x2, x0, w1, sxtw
   47c2c:	cmp	x2, #0xfe
   47c30:	b.gt	47c50 <rintf@@GLIBC_2.17+0x60>
   47c34:	add	w1, w1, w0
   47c38:	cmp	w1, #0x0
   47c3c:	b.le	47c6c <rintf@@GLIBC_2.17+0x7c>
   47c40:	and	w3, w3, #0x807fffff
   47c44:	orr	w0, w3, w1, lsl #23
   47c48:	fmov	s0, w0
   47c4c:	ret
   47c50:	movi	v0.2s, #0x80, lsl #24
   47c54:	mov	w0, #0xf2ca                	// #62154
   47c58:	movk	w0, #0x7149, lsl #16
   47c5c:	fmov	s1, w0
   47c60:	bsl	v0.8b, v2.8b, v1.8b
   47c64:	fmul	s0, s0, s1
   47c68:	ret
   47c6c:	cmn	w1, #0x18
   47c70:	b.ge	47cb8 <rintf@@GLIBC_2.17+0xc8>  // b.tcont
   47c74:	movi	v0.2s, #0x80, lsl #24
   47c78:	mov	w0, #0x4260                	// #16992
   47c7c:	movk	w0, #0xda2, lsl #16
   47c80:	fmov	s1, w0
   47c84:	bsl	v0.8b, v2.8b, v1.8b
   47c88:	fmul	s0, s0, s1
   47c8c:	ret
   47c90:	tst	x3, #0x7fffffff
   47c94:	b.eq	47c4c <rintf@@GLIBC_2.17+0x5c>  // b.none
   47c98:	movi	v0.2s, #0x4c, lsl #24
   47c9c:	fmul	s2, s2, s0
   47ca0:	fmov	w3, s2
   47ca4:	ubfx	x2, x3, #23, #8
   47ca8:	sub	w1, w2, #0x19
   47cac:	b	47c10 <rintf@@GLIBC_2.17+0x20>
   47cb0:	fadd	s0, s0, s0
   47cb4:	ret
   47cb8:	movi	v0.2s, #0x33, lsl #24
   47cbc:	add	w1, w1, #0x19
   47cc0:	and	w3, w3, #0x807fffff
   47cc4:	orr	w1, w3, w1, lsl #23
   47cc8:	fmov	s1, w1
   47ccc:	fmul	s0, s1, s0
   47cd0:	ret
   47cd4:	nop

0000000000047cd8 <sinf@@GLIBC_2.17>:
   47cd8:	fmov	w1, s0
   47cdc:	fcvt	d1, s0
   47ce0:	ubfx	x0, x1, #20, #11
   47ce4:	lsr	w2, w1, #20
   47ce8:	cmp	w0, #0x3f3
   47cec:	b.hi	47d28 <sinf@@GLIBC_2.17+0x50>  // b.pmore
   47cf0:	fmul	d3, d1, d1
   47cf4:	cmp	w0, #0x397
   47cf8:	b.ls	47dc0 <sinf@@GLIBC_2.17+0xe8>  // b.plast
   47cfc:	adrp	x0, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   47d00:	add	x0, x0, #0x4b0
   47d04:	fmul	d0, d1, d3
   47d08:	ldp	d5, d2, [x0, #88]
   47d0c:	ldr	d6, [x0, #104]
   47d10:	fmul	d4, d3, d0
   47d14:	fmadd	d0, d0, d5, d1
   47d18:	fmadd	d3, d3, d6, d2
   47d1c:	fmadd	d0, d3, d4, d0
   47d20:	fcvt	s0, d0
   47d24:	ret
   47d28:	cmp	w0, #0x42e
   47d2c:	b.hi	47dd0 <sinf@@GLIBC_2.17+0xf8>  // b.pmore
   47d30:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   47d34:	add	x2, x2, #0x4b0
   47d38:	adrp	x1, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   47d3c:	add	x1, x1, #0x520
   47d40:	ldp	d0, d3, [x2, #32]
   47d44:	fmul	d0, d1, d0
   47d48:	frinta	d2, d0
   47d4c:	fcvtas	x0, d0
   47d50:	fmsub	d1, d3, d2, d1
   47d54:	tst	x0, #0x2
   47d58:	csel	x1, x1, x2, ne  // ne = any
   47d5c:	fmul	d2, d1, d1
   47d60:	tbnz	w0, #0, 47d94 <sinf@@GLIBC_2.17+0xbc>
   47d64:	and	x0, x0, #0x3
   47d68:	ldr	d3, [x1, #104]
   47d6c:	ldp	d4, d0, [x1, #88]
   47d70:	ldr	d5, [x2, x0, lsl #3]
   47d74:	fmadd	d3, d2, d3, d0
   47d78:	fmul	d1, d1, d5
   47d7c:	fmul	d0, d1, d2
   47d80:	fmadd	d1, d0, d4, d1
   47d84:	fmul	d0, d2, d0
   47d88:	fmadd	d0, d3, d0, d1
   47d8c:	fcvt	s0, d0
   47d90:	ret
   47d94:	ldp	d1, d5, [x1, #48]
   47d98:	fmul	d0, d2, d2
   47d9c:	ldp	d3, d4, [x1, #72]
   47da0:	fmadd	d1, d2, d5, d1
   47da4:	fmadd	d3, d2, d4, d3
   47da8:	ldr	d4, [x1, #64]
   47dac:	fmul	d2, d2, d0
   47db0:	fmadd	d0, d0, d4, d1
   47db4:	fmadd	d0, d3, d2, d0
   47db8:	fcvt	s0, d0
   47dbc:	ret
   47dc0:	tst	w2, #0x7f8
   47dc4:	b.ne	47d24 <sinf@@GLIBC_2.17+0x4c>  // b.any
   47dc8:	fcvt	s3, d3
   47dcc:	ret
   47dd0:	cmp	w0, #0x7f7
   47dd4:	b.hi	47e8c <sinf@@GLIBC_2.17+0x1b4>  // b.pmore
   47dd8:	ubfx	x4, x1, #26, #4
   47ddc:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   47de0:	add	x2, x2, #0x450
   47de4:	and	w0, w1, #0x7fffff
   47de8:	add	x5, x2, x4, lsl #2
   47dec:	ubfx	x7, x1, #23, #3
   47df0:	orr	w0, w0, #0x800000
   47df4:	mov	x3, #0x2000000000000000    	// #2305843009213693952
   47df8:	ldr	w4, [x2, x4, lsl #2]
   47dfc:	adrp	x2, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   47e00:	ldr	w6, [x5, #32]
   47e04:	lsl	w0, w0, w7
   47e08:	ldr	w7, [x5, #16]
   47e0c:	adrp	x5, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   47e10:	ldr	d1, [x2, #688]
   47e14:	add	x5, x5, #0x4b0
   47e18:	mul	w4, w0, w4
   47e1c:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   47e20:	umull	x6, w0, w6
   47e24:	add	x2, x2, #0x520
   47e28:	extr	x4, x4, x6, #32
   47e2c:	umaddl	x0, w0, w7, x4
   47e30:	add	x3, x0, x3
   47e34:	and	x4, x3, #0xc000000000000000
   47e38:	sub	x0, x0, x4
   47e3c:	lsr	x3, x3, #62
   47e40:	add	w1, w3, w1, lsr #31
   47e44:	scvtf	d0, x0
   47e48:	tst	x1, #0x2
   47e4c:	csel	x0, x2, x5, ne  // ne = any
   47e50:	fmul	d0, d0, d1
   47e54:	fmul	d1, d0, d0
   47e58:	tbnz	w3, #0, 47e90 <sinf@@GLIBC_2.17+0x1b8>
   47e5c:	and	x1, x1, #0x3
   47e60:	ldr	d5, [x0, #104]
   47e64:	ldp	d4, d2, [x0, #88]
   47e68:	ldr	d3, [x5, x1, lsl #3]
   47e6c:	fmadd	d2, d1, d5, d2
   47e70:	fmul	d0, d0, d3
   47e74:	fmul	d3, d0, d1
   47e78:	fmadd	d0, d3, d4, d0
   47e7c:	fmul	d1, d1, d3
   47e80:	fmadd	d0, d2, d1, d0
   47e84:	fcvt	s0, d0
   47e88:	ret
   47e8c:	b	51c30 <__exp2f_finite@GLIBC_2.17+0x51c8>
   47e90:	ldp	d0, d5, [x0, #48]
   47e94:	fmul	d3, d1, d1
   47e98:	ldp	d2, d4, [x0, #72]
   47e9c:	fmadd	d0, d1, d5, d0
   47ea0:	fmadd	d2, d1, d4, d2
   47ea4:	ldr	d4, [x0, #64]
   47ea8:	fmul	d1, d1, d3
   47eac:	fmadd	d0, d3, d4, d0
   47eb0:	fmadd	d0, d2, d1, d0
   47eb4:	fcvt	s0, d0
   47eb8:	ret
   47ebc:	nop

0000000000047ec0 <tanf@@GLIBC_2.17>:
   47ec0:	fmov	w1, s0
   47ec4:	mov	w2, #0xfda                 	// #4058
   47ec8:	movk	w2, #0x3f49, lsl #16
   47ecc:	fmov	s1, s0
   47ed0:	and	w0, w1, #0x7fffffff
   47ed4:	cmp	w0, w2
   47ed8:	b.le	47f48 <tanf@@GLIBC_2.17+0x88>
   47edc:	mov	w2, #0x7f7fffff            	// #2139095039
   47ee0:	cmp	w0, w2
   47ee4:	b.le	47efc <tanf@@GLIBC_2.17+0x3c>
   47ee8:	mov	w1, #0x7f800000            	// #2139095040
   47eec:	cmp	w0, w1
   47ef0:	b.eq	47f54 <tanf@@GLIBC_2.17+0x94>  // b.none
   47ef4:	fsub	s0, s1, s1
   47ef8:	ret
   47efc:	ubfx	x0, x1, #20, #11
   47f00:	fcvt	d1, s0
   47f04:	cmp	w0, #0x42e
   47f08:	b.hi	47f70 <tanf@@GLIBC_2.17+0xb0>  // b.pmore
   47f0c:	adrp	x0, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   47f10:	add	x0, x0, #0x4b0
   47f14:	ldp	d0, d3, [x0, #32]
   47f18:	fmul	d0, d1, d0
   47f1c:	frinta	d2, d0
   47f20:	fcvtas	x1, d0
   47f24:	fmsub	d1, d3, d2, d1
   47f28:	fcvt	s0, d1
   47f2c:	ubfiz	w0, w1, #1, #1
   47f30:	mov	w1, #0x1                   	// #1
   47f34:	sub	w0, w1, w0
   47f38:	fcvt	d2, s0
   47f3c:	fsub	d1, d1, d2
   47f40:	fcvt	s1, d1
   47f44:	b	45ff0 <__gammaf_r_finite@GLIBC_2.17+0x300>
   47f48:	movi	v1.2s, #0x0
   47f4c:	mov	w0, #0x1                   	// #1
   47f50:	b	45ff0 <__gammaf_r_finite@GLIBC_2.17+0x300>
   47f54:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   47f58:	ldr	x0, [x0, #3976]
   47f5c:	mrs	x1, tpidr_el0
   47f60:	mov	w2, #0x21                  	// #33
   47f64:	fsub	s0, s1, s1
   47f68:	str	w2, [x1, x0]
   47f6c:	ret
   47f70:	ubfx	x4, x1, #26, #4
   47f74:	adrp	x3, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   47f78:	add	x3, x3, #0x450
   47f7c:	and	w0, w1, #0x7fffff
   47f80:	add	x5, x3, x4, lsl #2
   47f84:	ubfx	x6, x1, #23, #3
   47f88:	orr	w0, w0, #0x800000
   47f8c:	cmp	w1, #0x0
   47f90:	ldr	w3, [x3, x4, lsl #2]
   47f94:	adrp	x4, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   47f98:	lsl	w0, w0, w6
   47f9c:	mov	x2, #0x2000000000000000    	// #2305843009213693952
   47fa0:	ldr	d0, [x4, #688]
   47fa4:	ldr	w4, [x5, #32]
   47fa8:	mul	w1, w0, w3
   47fac:	ldr	w5, [x5, #16]
   47fb0:	umull	x3, w0, w4
   47fb4:	extr	x1, x1, x3, #32
   47fb8:	umaddl	x0, w0, w5, x1
   47fbc:	add	x1, x0, x2
   47fc0:	and	x2, x1, #0xc000000000000000
   47fc4:	sub	x0, x0, x2
   47fc8:	lsr	x1, x1, #62
   47fcc:	scvtf	d1, x0
   47fd0:	fmul	d1, d1, d0
   47fd4:	fneg	d0, d1
   47fd8:	fcsel	d1, d0, d1, lt  // lt = tstop
   47fdc:	b	47f28 <tanf@@GLIBC_2.17+0x68>

0000000000047fe0 <tanhf@@GLIBC_2.17>:
   47fe0:	stp	x29, x30, [sp, #-32]!
   47fe4:	mov	w1, #0x7f7fffff            	// #2139095039
   47fe8:	fmov	s1, s0
   47fec:	mov	x29, sp
   47ff0:	str	x19, [sp, #16]
   47ff4:	fmov	w19, s0
   47ff8:	and	w0, w19, #0x7fffffff
   47ffc:	cmp	w0, w1
   48000:	b.le	48020 <tanhf@@GLIBC_2.17+0x40>
   48004:	fmov	s0, #1.000000000000000000e+00
   48008:	fdiv	s1, s0, s1
   4800c:	tbnz	w19, #31, 48098 <tanhf@@GLIBC_2.17+0xb8>
   48010:	fadd	s0, s1, s0
   48014:	ldr	x19, [sp, #16]
   48018:	ldp	x29, x30, [sp], #32
   4801c:	ret
   48020:	mov	w1, #0x41afffff            	// #1102053375
   48024:	cmp	w0, w1
   48028:	b.le	48058 <tanhf@@GLIBC_2.17+0x78>
   4802c:	mov	w0, #0x4260                	// #16992
   48030:	fmov	s1, #1.000000000000000000e+00
   48034:	movk	w0, #0xda2, lsl #16
   48038:	fmov	s0, w0
   4803c:	fsub	s0, s1, s0
   48040:	fneg	s1, s0
   48044:	cmp	w19, #0x0
   48048:	ldr	x19, [sp, #16]
   4804c:	ldp	x29, x30, [sp], #32
   48050:	fcsel	s0, s1, s0, lt  // lt = tstop
   48054:	ret
   48058:	cbz	w0, 48014 <tanhf@@GLIBC_2.17+0x34>
   4805c:	mov	w1, #0x23ffffff            	// #603979775
   48060:	fabs	s0, s0
   48064:	cmp	w0, w1
   48068:	b.le	480a8 <tanhf@@GLIBC_2.17+0xc8>
   4806c:	mov	w1, #0x3f7fffff            	// #1065353215
   48070:	cmp	w0, w1
   48074:	b.le	480c8 <tanhf@@GLIBC_2.17+0xe8>
   48078:	fadd	s0, s0, s0
   4807c:	bl	47340 <expm1f@@GLIBC_2.17>
   48080:	fmov	s2, #2.000000000000000000e+00
   48084:	fmov	s1, #1.000000000000000000e+00
   48088:	fadd	s0, s0, s2
   4808c:	fdiv	s0, s2, s0
   48090:	fsub	s0, s1, s0
   48094:	b	48040 <tanhf@@GLIBC_2.17+0x60>
   48098:	fsub	s0, s1, s0
   4809c:	ldr	x19, [sp, #16]
   480a0:	ldp	x29, x30, [sp], #32
   480a4:	ret
   480a8:	movi	v2.2s, #0x80, lsl #16
   480ac:	fcmpe	s0, s2
   480b0:	b.pl	480b8 <tanhf@@GLIBC_2.17+0xd8>  // b.nfrst
   480b4:	fmul	s0, s1, s1
   480b8:	fmov	s0, #1.000000000000000000e+00
   480bc:	fadd	s0, s1, s0
   480c0:	fmul	s0, s0, s1
   480c4:	b	48014 <tanhf@@GLIBC_2.17+0x34>
   480c8:	fmov	s1, #-2.000000000000000000e+00
   480cc:	fmul	s0, s0, s1
   480d0:	bl	47340 <expm1f@@GLIBC_2.17>
   480d4:	fneg	s1, s0
   480d8:	fmov	s2, #2.000000000000000000e+00
   480dc:	fadd	s0, s0, s2
   480e0:	fdiv	s0, s1, s0
   480e4:	b	48040 <tanhf@@GLIBC_2.17+0x60>

00000000000480e8 <__fpclassifyf@@GLIBC_2.17>:
   480e8:	fmov	w1, s0
   480ec:	mov	w0, #0x2                   	// #2
   480f0:	ands	w2, w1, #0x7fffffff
   480f4:	b.eq	48120 <__fpclassifyf@@GLIBC_2.17+0x38>  // b.none
   480f8:	tst	w1, #0x7f800000
   480fc:	mov	w0, #0x3                   	// #3
   48100:	b.eq	48120 <__fpclassifyf@@GLIBC_2.17+0x38>  // b.none
   48104:	mov	w1, #0x7f7fffff            	// #2139095039
   48108:	mov	w0, #0x4                   	// #4
   4810c:	cmp	w2, w1
   48110:	b.ls	48120 <__fpclassifyf@@GLIBC_2.17+0x38>  // b.plast
   48114:	mov	w0, #0x7f800000            	// #2139095040
   48118:	cmp	w2, w0
   4811c:	cset	w0, ls  // ls = plast
   48120:	ret
   48124:	nop

0000000000048128 <truncf@@GLIBC_2.17>:
   48128:	frintz	s0, s0
   4812c:	ret

0000000000048130 <remquof@@GLIBC_2.17>:
   48130:	stp	x29, x30, [sp, #-80]!
   48134:	fmov	s2, s0
   48138:	mov	x29, sp
   4813c:	stp	x19, x20, [sp, #16]
   48140:	fmov	w19, s1
   48144:	str	d8, [sp, #64]
   48148:	fmov	s8, s1
   4814c:	ands	w20, w19, #0x7fffffff
   48150:	b.eq	48240 <remquof@@GLIBC_2.17+0x110>  // b.none
   48154:	stp	x21, x22, [sp, #32]
   48158:	fmov	w22, s0
   4815c:	mov	w2, #0x7f7fffff            	// #2139095039
   48160:	stp	x23, x24, [sp, #48]
   48164:	mov	w1, #0x7f800000            	// #2139095040
   48168:	and	w23, w22, #0x7fffffff
   4816c:	cmp	w23, w2
   48170:	ccmp	w20, w1, #0x0, le
   48174:	b.gt	48220 <remquof@@GLIBC_2.17+0xf0>
   48178:	eor	w21, w22, w19
   4817c:	mov	w1, #0x7dffffff            	// #2113929215
   48180:	mov	x24, x0
   48184:	and	w21, w21, #0x80000000
   48188:	cmp	w20, w1
   4818c:	b.le	48258 <remquof@@GLIBC_2.17+0x128>
   48190:	cmp	w20, w23
   48194:	b.eq	482d4 <remquof@@GLIBC_2.17+0x1a4>  // b.none
   48198:	mov	w1, #0x7e7fffff            	// #2122317823
   4819c:	fabs	s0, s0
   481a0:	fabs	s8, s1
   481a4:	cmp	w20, w1
   481a8:	b.le	48278 <remquof@@GLIBC_2.17+0x148>
   481ac:	mov	w2, #0x7effffff            	// #2130706431
   481b0:	mov	w1, #0x0                   	// #0
   481b4:	cmp	w20, w2
   481b8:	b.le	48294 <remquof@@GLIBC_2.17+0x164>
   481bc:	tst	w19, #0x7f000000
   481c0:	b.ne	482ac <remquof@@GLIBC_2.17+0x17c>  // b.any
   481c4:	fadd	s1, s0, s0
   481c8:	fcmpe	s1, s8
   481cc:	b.le	481e4 <remquof@@GLIBC_2.17+0xb4>
   481d0:	fsub	s0, s0, s8
   481d4:	fadd	s1, s0, s0
   481d8:	fcmpe	s1, s8
   481dc:	b.ge	482c8 <remquof@@GLIBC_2.17+0x198>  // b.tcont
   481e0:	add	w1, w1, #0x1
   481e4:	movi	v1.2s, #0x0
   481e8:	cmp	w21, #0x0
   481ec:	cneg	w1, w1, ne  // ne = any
   481f0:	ldr	d8, [sp, #64]
   481f4:	ldp	x19, x20, [sp, #16]
   481f8:	fcmp	s0, s1
   481fc:	fcsel	s0, s0, s1, ne  // ne = any
   48200:	cmp	w22, #0x0
   48204:	ldp	x21, x22, [sp, #32]
   48208:	str	w1, [x24]
   4820c:	ldp	x23, x24, [sp, #48]
   48210:	fneg	s1, s0
   48214:	ldp	x29, x30, [sp], #80
   48218:	fcsel	s0, s1, s0, lt  // lt = tstop
   4821c:	ret
   48220:	fmul	s0, s0, s1
   48224:	ldp	x21, x22, [sp, #32]
   48228:	ldp	x23, x24, [sp, #48]
   4822c:	fdiv	s0, s0, s0
   48230:	ldp	x19, x20, [sp, #16]
   48234:	ldr	d8, [sp, #64]
   48238:	ldp	x29, x30, [sp], #80
   4823c:	ret
   48240:	fmul	s0, s0, s1
   48244:	ldr	d8, [sp, #64]
   48248:	ldp	x19, x20, [sp, #16]
   4824c:	ldp	x29, x30, [sp], #80
   48250:	fdiv	s0, s0, s0
   48254:	ret
   48258:	fmov	s1, #8.000000000000000000e+00
   4825c:	fmul	s1, s8, s1
   48260:	bl	42e38 <__fmodf_finite@GLIBC_2.17>
   48264:	fmov	s2, s0
   48268:	cmp	w20, w23
   4826c:	b.eq	482d4 <remquof@@GLIBC_2.17+0x1a4>  // b.none
   48270:	fabs	s0, s0
   48274:	fabs	s8, s8
   48278:	fmov	s1, #4.000000000000000000e+00
   4827c:	mov	w1, #0x0                   	// #0
   48280:	fmul	s1, s8, s1
   48284:	fcmpe	s1, s0
   48288:	b.hi	48294 <remquof@@GLIBC_2.17+0x164>  // b.pmore
   4828c:	fsub	s0, s0, s1
   48290:	mov	w1, #0x4                   	// #4
   48294:	fadd	s1, s8, s8
   48298:	fcmpe	s1, s0
   4829c:	b.hi	481bc <remquof@@GLIBC_2.17+0x8c>  // b.pmore
   482a0:	fsub	s0, s0, s1
   482a4:	add	w1, w1, #0x2
   482a8:	b	481bc <remquof@@GLIBC_2.17+0x8c>
   482ac:	fmov	s1, #5.000000000000000000e-01
   482b0:	fmul	s1, s8, s1
   482b4:	fcmpe	s0, s1
   482b8:	b.le	481e4 <remquof@@GLIBC_2.17+0xb4>
   482bc:	fsub	s0, s0, s8
   482c0:	fcmpe	s1, s0
   482c4:	b.hi	481e0 <remquof@@GLIBC_2.17+0xb0>  // b.pmore
   482c8:	fsub	s0, s0, s8
   482cc:	add	w1, w1, #0x2
   482d0:	b	481e4 <remquof@@GLIBC_2.17+0xb4>
   482d4:	movi	v0.2s, #0x0
   482d8:	cmp	w21, #0x0
   482dc:	mov	w1, #0x1                   	// #1
   482e0:	cneg	w1, w1, ne  // ne = any
   482e4:	ldp	x21, x22, [sp, #32]
   482e8:	str	w1, [x24]
   482ec:	fmul	s0, s2, s0
   482f0:	ldp	x23, x24, [sp, #48]
   482f4:	b	48230 <remquof@@GLIBC_2.17+0x100>

00000000000482f8 <__log2f_finite@GLIBC_2.17>:
   482f8:	fmov	w1, s0
   482fc:	mov	w0, #0x3f800000            	// #1065353216
   48300:	fmov	s1, s0
   48304:	cmp	w1, w0
   48308:	b.eq	48388 <__log2f_finite@GLIBC_2.17+0x90>  // b.none
   4830c:	sub	w2, w1, #0x800, lsl #12
   48310:	mov	w0, #0x7effffff            	// #2130706431
   48314:	cmp	w2, w0
   48318:	b.hi	48390 <__log2f_finite@GLIBC_2.17+0x98>  // b.pmore
   4831c:	mov	w0, #0xc0cd0000            	// #-1060306944
   48320:	add	w0, w1, w0
   48324:	and	w4, w0, #0xff800000
   48328:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   4832c:	ubfx	x3, x0, #19, #4
   48330:	add	x2, x2, #0x208
   48334:	sub	w1, w1, w4
   48338:	fmov	s1, w1
   4833c:	lsl	x3, x3, #4
   48340:	fmov	d0, #-1.000000000000000000e+00
   48344:	fcvt	d3, s1
   48348:	asr	w0, w0, #23
   4834c:	ldp	d5, d4, [x2, #256]
   48350:	add	x1, x2, x3
   48354:	ldr	d6, [x2, x3]
   48358:	scvtf	d2, w0
   4835c:	fmadd	d3, d6, d3, d0
   48360:	ldr	d6, [x1, #8]
   48364:	ldp	d1, d0, [x2, #272]
   48368:	fadd	d2, d2, d6
   4836c:	fmadd	d1, d4, d3, d1
   48370:	fmul	d4, d3, d3
   48374:	fmadd	d0, d0, d3, d2
   48378:	fmadd	d1, d5, d4, d1
   4837c:	fmadd	d0, d4, d1, d0
   48380:	fcvt	s0, d0
   48384:	ret
   48388:	movi	v0.2s, #0x0
   4838c:	ret
   48390:	cmp	wzr, w1, lsl #1
   48394:	lsl	w0, w1, #1
   48398:	b.eq	483d4 <__log2f_finite@GLIBC_2.17+0xdc>  // b.none
   4839c:	mov	w2, #0x7f800000            	// #2139095040
   483a0:	cmp	w1, w2
   483a4:	b.eq	48384 <__log2f_finite@GLIBC_2.17+0x8c>  // b.none
   483a8:	cmp	w1, #0x0
   483ac:	mov	w1, #0xfeffffff            	// #-16777217
   483b0:	ccmp	w0, w1, #0x2, ge  // ge = tcont
   483b4:	b.hi	483d0 <__log2f_finite@GLIBC_2.17+0xd8>  // b.pmore
   483b8:	movi	v0.2s, #0x4b, lsl #24
   483bc:	mov	w1, #0xf4800000            	// #-192937984
   483c0:	fmul	s1, s1, s0
   483c4:	fmov	w0, s1
   483c8:	add	w1, w0, w1
   483cc:	b	4831c <__log2f_finite@GLIBC_2.17+0x24>
   483d0:	b	51c30 <__exp2f_finite@GLIBC_2.17+0x51c8>
   483d4:	mov	w0, #0x1                   	// #1
   483d8:	b	51c10 <__exp2f_finite@GLIBC_2.17+0x51a8>
   483dc:	nop

00000000000483e0 <roundf@@GLIBC_2.17>:
   483e0:	frinta	s0, s0
   483e4:	ret

00000000000483e8 <nearbyintf@@GLIBC_2.17>:
   483e8:	frinti	s0, s0
   483ec:	ret

00000000000483f0 <sincosf@@GLIBC_2.17>:
   483f0:	fmov	w3, s0
   483f4:	fcvt	d1, s0
   483f8:	ubfx	x2, x3, #20, #11
   483fc:	lsr	w4, w3, #20
   48400:	cmp	w2, #0x3f3
   48404:	b.hi	48474 <sincosf@@GLIBC_2.17+0x84>  // b.pmore
   48408:	fmul	d3, d1, d1
   4840c:	cmp	w2, #0x397
   48410:	b.ls	4860c <sincosf@@GLIBC_2.17+0x21c>  // b.plast
   48414:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   48418:	add	x2, x2, #0x4b0
   4841c:	fmul	d6, d1, d3
   48420:	fmul	d0, d3, d3
   48424:	ldp	d5, d2, [x2, #96]
   48428:	ldp	d4, d17, [x2, #72]
   4842c:	fmul	d7, d3, d0
   48430:	ldr	d18, [x2, #56]
   48434:	fmadd	d5, d3, d2, d5
   48438:	ldr	d2, [x2, #48]
   4843c:	fmul	d16, d3, d6
   48440:	fmadd	d2, d3, d18, d2
   48444:	fmadd	d3, d3, d17, d4
   48448:	ldr	d17, [x2, #88]
   4844c:	ldr	d4, [x2, #64]
   48450:	fmadd	d1, d6, d17, d1
   48454:	fmadd	d0, d0, d4, d2
   48458:	fmadd	d1, d5, d16, d1
   4845c:	fmadd	d0, d3, d7, d0
   48460:	fcvt	s1, d1
   48464:	fcvt	s0, d0
   48468:	str	s1, [x0]
   4846c:	str	s0, [x1]
   48470:	ret
   48474:	cmp	w2, #0x42e
   48478:	b.ls	48570 <sincosf@@GLIBC_2.17+0x180>  // b.plast
   4847c:	cmp	w2, #0x7f7
   48480:	b.hi	4862c <sincosf@@GLIBC_2.17+0x23c>  // b.pmore
   48484:	ubfx	x6, x3, #26, #4
   48488:	adrp	x4, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   4848c:	add	x4, x4, #0x450
   48490:	and	w2, w3, #0x7fffff
   48494:	add	x9, x4, x6, lsl #2
   48498:	ubfx	x10, x3, #23, #3
   4849c:	orr	w2, w2, #0x800000
   484a0:	mov	x5, #0x2000000000000000    	// #2305843009213693952
   484a4:	ldr	w6, [x4, x6, lsl #2]
   484a8:	adrp	x4, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   484ac:	ldr	w8, [x9, #32]
   484b0:	lsl	w2, w2, w10
   484b4:	ldr	w9, [x9, #16]
   484b8:	adrp	x7, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   484bc:	ldr	d2, [x4, #688]
   484c0:	add	x7, x7, #0x4b0
   484c4:	mul	w6, w2, w6
   484c8:	adrp	x4, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   484cc:	umull	x8, w2, w8
   484d0:	add	x4, x4, #0x520
   484d4:	extr	x6, x6, x8, #32
   484d8:	umaddl	x2, w2, w9, x6
   484dc:	add	x5, x2, x5
   484e0:	and	x6, x5, #0xc000000000000000
   484e4:	sub	x2, x2, x6
   484e8:	lsr	x5, x5, #62
   484ec:	add	w3, w5, w3, lsr #31
   484f0:	scvtf	d0, x2
   484f4:	and	x6, x3, #0x3
   484f8:	tst	x3, #0x2
   484fc:	csel	x2, x4, x7, ne  // ne = any
   48500:	ands	w5, w5, #0x1
   48504:	ldr	d1, [x7, x6, lsl #3]
   48508:	csel	x3, x1, x0, eq  // eq = none
   4850c:	fmul	d0, d0, d2
   48510:	cmp	w5, #0x0
   48514:	ldp	d4, d6, [x2, #96]
   48518:	csel	x1, x0, x1, eq  // eq = none
   4851c:	ldp	d2, d7, [x2, #48]
   48520:	fmul	d1, d1, d0
   48524:	fmul	d0, d0, d0
   48528:	ldp	d16, d3, [x2, #64]
   4852c:	ldp	d5, d17, [x2, #80]
   48530:	fmadd	d4, d0, d6, d4
   48534:	fmul	d6, d1, d0
   48538:	fmadd	d2, d0, d7, d2
   4853c:	fmadd	d3, d0, d5, d3
   48540:	fmul	d5, d0, d0
   48544:	fmul	d7, d0, d6
   48548:	fmadd	d1, d6, d17, d1
   4854c:	fmadd	d2, d5, d16, d2
   48550:	fmul	d0, d0, d5
   48554:	fmadd	d1, d4, d7, d1
   48558:	fmadd	d0, d3, d0, d2
   4855c:	fcvt	s1, d1
   48560:	fcvt	s0, d0
   48564:	str	s1, [x1]
   48568:	str	s0, [x3]
   4856c:	ret
   48570:	adrp	x4, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   48574:	add	x4, x4, #0x4b0
   48578:	adrp	x2, 8c000 <f64xsubf128@@GLIBC_2.28+0x38280>
   4857c:	add	x2, x2, #0x520
   48580:	ldp	d0, d3, [x4, #32]
   48584:	fmul	d0, d1, d0
   48588:	frinta	d2, d0
   4858c:	fcvtas	x3, d0
   48590:	fmsub	d1, d3, d2, d1
   48594:	and	x6, x3, #0x3
   48598:	tst	x3, #0x2
   4859c:	csel	x2, x2, x4, ne  // ne = any
   485a0:	ands	w3, w3, #0x1
   485a4:	csel	x5, x1, x0, eq  // eq = none
   485a8:	cmp	w3, #0x0
   485ac:	ldr	d0, [x4, x6, lsl #3]
   485b0:	csel	x1, x0, x1, eq  // eq = none
   485b4:	ldp	d4, d6, [x2, #96]
   485b8:	ldp	d2, d7, [x2, #48]
   485bc:	fmul	d0, d0, d1
   485c0:	fmul	d1, d1, d1
   485c4:	ldp	d16, d3, [x2, #64]
   485c8:	ldp	d5, d17, [x2, #80]
   485cc:	fmadd	d4, d1, d6, d4
   485d0:	fmul	d6, d0, d1
   485d4:	fmadd	d2, d1, d7, d2
   485d8:	fmadd	d3, d1, d5, d3
   485dc:	fmul	d5, d1, d1
   485e0:	fmul	d7, d1, d6
   485e4:	fmadd	d0, d6, d17, d0
   485e8:	fmadd	d2, d5, d16, d2
   485ec:	fmul	d1, d1, d5
   485f0:	fmadd	d0, d4, d7, d0
   485f4:	fmadd	d1, d3, d1, d2
   485f8:	fcvt	s0, d0
   485fc:	fcvt	s1, d1
   48600:	str	s0, [x1]
   48604:	str	s1, [x5]
   48608:	ret
   4860c:	tst	w4, #0x7f8
   48610:	b.eq	48624 <sincosf@@GLIBC_2.17+0x234>  // b.none
   48614:	fmov	s1, #1.000000000000000000e+00
   48618:	str	s0, [x0]
   4861c:	str	s1, [x1]
   48620:	ret
   48624:	fcvt	s3, d3
   48628:	b	48614 <sincosf@@GLIBC_2.17+0x224>
   4862c:	fsub	s1, s0, s0
   48630:	fadd	s0, s0, s0
   48634:	str	s1, [x1]
   48638:	str	s1, [x0]
   4863c:	b	51c30 <__exp2f_finite@GLIBC_2.17+0x51c8>

0000000000048640 <fmaf@@GLIBC_2.17>:
   48640:	fmadd	s0, s0, s1, s2
   48644:	ret

0000000000048648 <lrintf@@GLIBC_2.17>:
   48648:	frintx	s0, s0
   4864c:	fcvtzs	x0, s0
   48650:	ret
   48654:	nop

0000000000048658 <llrintf@@GLIBC_2.17>:
   48658:	frintx	s0, s0
   4865c:	fcvtzs	x0, s0
   48660:	ret
   48664:	nop

0000000000048668 <lroundf@@GLIBC_2.17>:
   48668:	fcvtas	x0, s0
   4866c:	ret

0000000000048670 <llroundf@@GLIBC_2.17>:
   48670:	fcvtas	x0, s0
   48674:	ret

0000000000048678 <__exp10f_finite@GLIBC_2.17>:
   48678:	stp	x29, x30, [sp, #-16]!
   4867c:	adrp	x0, 84000 <f64xsubf128@@GLIBC_2.28+0x30280>
   48680:	fcvt	d0, s0
   48684:	mov	x29, sp
   48688:	ldr	d1, [x0, #2728]
   4868c:	fmul	d0, d0, d1
   48690:	bl	333e8 <__exp_finite@GLIBC_2.17>
   48694:	fcvt	s0, d0
   48698:	ldp	x29, x30, [sp], #16
   4869c:	ret

00000000000486a0 <__issignalingf@@GLIBC_2.18>:
   486a0:	fmov	w0, s0
   486a4:	mov	w1, #0x7fc00000            	// #2143289344
   486a8:	eor	w0, w0, #0x400000
   486ac:	and	w0, w0, #0x7fffffff
   486b0:	cmp	w0, w1
   486b4:	cset	w0, hi  // hi = pmore
   486b8:	ret
   486bc:	nop
   486c0:	fmov	w1, s0
   486c4:	and	w0, w1, #0x7fffffff
   486c8:	eor	w2, w0, #0x7f800000
   486cc:	neg	w0, w2
   486d0:	orr	w0, w0, w2
   486d4:	asr	w0, w0, #31
   486d8:	mvn	w0, w0
   486dc:	and	w0, w0, w1, asr #30
   486e0:	ret
   486e4:	nop
   486e8:	fmov	w0, s0
   486ec:	mov	w1, #0x7f800000            	// #2139095040
   486f0:	and	w0, w0, #0x7fffffff
   486f4:	sub	w0, w1, w0
   486f8:	lsr	w0, w0, #31
   486fc:	ret

0000000000048700 <__finitef@@GLIBC_2.17>:
   48700:	fmov	w0, s0
   48704:	mov	w1, #0x80800000            	// #-2139095040
   48708:	and	w0, w0, #0x7f800000
   4870c:	add	w0, w0, w1
   48710:	lsr	w0, w0, #31
   48714:	ret

0000000000048718 <copysignf@@GLIBC_2.17>:
   48718:	movi	v2.2s, #0x80, lsl #24
   4871c:	bit	v0.8b, v1.8b, v2.8b
   48720:	ret
   48724:	nop

0000000000048728 <modff@@GLIBC_2.17>:
   48728:	fmov	w2, s0
   4872c:	fmov	s1, s0
   48730:	ubfx	x1, x2, #23, #8
   48734:	sub	w1, w1, #0x7f
   48738:	cmp	w1, #0x16
   4873c:	b.gt	48784 <modff@@GLIBC_2.17+0x5c>
   48740:	tbnz	w1, #31, 48778 <modff@@GLIBC_2.17+0x50>
   48744:	mov	w3, #0x7fffff              	// #8388607
   48748:	asr	w1, w3, w1
   4874c:	tst	w2, w1
   48750:	b.ne	48764 <modff@@GLIBC_2.17+0x3c>  // b.any
   48754:	and	w1, w2, #0x80000000
   48758:	fmov	s0, w1
   4875c:	str	s1, [x0]
   48760:	ret
   48764:	bic	w1, w2, w1
   48768:	fmov	s2, w1
   4876c:	str	w1, [x0]
   48770:	fsub	s0, s0, s2
   48774:	ret
   48778:	and	w2, w2, #0x80000000
   4877c:	str	w2, [x0]
   48780:	ret
   48784:	fmov	s0, #1.000000000000000000e+00
   48788:	cmp	w1, #0x80
   4878c:	fmul	s0, s1, s0
   48790:	str	s0, [x0]
   48794:	b.ne	487a0 <modff@@GLIBC_2.17+0x78>  // b.any
   48798:	tst	x2, #0x7fffff
   4879c:	b.ne	48760 <modff@@GLIBC_2.17+0x38>  // b.any
   487a0:	and	w0, w2, #0x80000000
   487a4:	fmov	s0, w0
   487a8:	ret
   487ac:	nop
   487b0:	fmov	w1, s0
   487b4:	fmov	s2, s0
   487b8:	ubfx	x2, x1, #23, #8
   487bc:	cbz	w2, 48844 <modff@@GLIBC_2.17+0x11c>
   487c0:	cmp	w2, #0xff
   487c4:	b.eq	48864 <modff@@GLIBC_2.17+0x13c>  // b.none
   487c8:	mov	w3, #0xffff3cb0            	// #-50000
   487cc:	cmp	w0, w3
   487d0:	b.lt	48828 <modff@@GLIBC_2.17+0x100>  // b.tstop
   487d4:	mov	w3, #0xc350                	// #50000
   487d8:	cmp	w0, w3
   487dc:	b.gt	48804 <modff@@GLIBC_2.17+0xdc>
   487e0:	add	w0, w0, w2
   487e4:	cmp	w0, #0xfe
   487e8:	b.gt	48804 <modff@@GLIBC_2.17+0xdc>
   487ec:	cmp	w0, #0x0
   487f0:	b.le	48820 <modff@@GLIBC_2.17+0xf8>
   487f4:	and	w1, w1, #0x807fffff
   487f8:	orr	w0, w1, w0, lsl #23
   487fc:	fmov	s0, w0
   48800:	ret
   48804:	movi	v0.2s, #0x80, lsl #24
   48808:	mov	w0, #0xf2ca                	// #62154
   4880c:	movk	w0, #0x7149, lsl #16
   48810:	fmov	s1, w0
   48814:	bsl	v0.8b, v2.8b, v1.8b
   48818:	fmul	s0, s0, s1
   4881c:	ret
   48820:	cmn	w0, #0x18
   48824:	b.ge	4886c <modff@@GLIBC_2.17+0x144>  // b.tcont
   48828:	movi	v0.2s, #0x80, lsl #24
   4882c:	mov	w0, #0x4260                	// #16992
   48830:	movk	w0, #0xda2, lsl #16
   48834:	fmov	s1, w0
   48838:	bsl	v0.8b, v2.8b, v1.8b
   4883c:	fmul	s0, s0, s1
   48840:	ret
   48844:	tst	x1, #0x7fffffff
   48848:	b.eq	48800 <modff@@GLIBC_2.17+0xd8>  // b.none
   4884c:	movi	v0.2s, #0x4c, lsl #24
   48850:	fmul	s2, s2, s0
   48854:	fmov	w1, s2
   48858:	ubfx	x2, x1, #23, #8
   4885c:	sub	w2, w2, #0x19
   48860:	b	487c8 <modff@@GLIBC_2.17+0xa0>
   48864:	fadd	s0, s0, s0
   48868:	ret
   4886c:	movi	v0.2s, #0x33, lsl #24
   48870:	add	w0, w0, #0x19
   48874:	and	w1, w1, #0x807fffff
   48878:	orr	w0, w1, w0, lsl #23
   4887c:	fmov	s1, w0
   48880:	fmul	s0, s1, s0
   48884:	ret

0000000000048888 <frexpf@@GLIBC_2.17>:
   48888:	fmov	w1, s0
   4888c:	str	wzr, [x0]
   48890:	mov	w3, #0x7f7fffff            	// #2139095039
   48894:	ands	w2, w1, #0x7fffffff
   48898:	ccmp	w2, w3, #0x0, ne  // ne = any
   4889c:	b.gt	488e0 <frexpf@@GLIBC_2.17+0x58>
   488a0:	tst	w1, #0x7f800000
   488a4:	mov	w3, #0x0                   	// #0
   488a8:	b.ne	488c0 <frexpf@@GLIBC_2.17+0x38>  // b.any
   488ac:	movi	v1.2s, #0x4c, lsl #24
   488b0:	mov	w3, #0xffffffe7            	// #-25
   488b4:	fmul	s0, s0, s1
   488b8:	fmov	w1, s0
   488bc:	and	w2, w1, #0x7fffffff
   488c0:	asr	w2, w2, #23
   488c4:	and	w1, w1, #0x807fffff
   488c8:	sub	w2, w2, #0x7e
   488cc:	orr	w1, w1, #0x3f000000
   488d0:	add	w2, w2, w3
   488d4:	fmov	s0, w1
   488d8:	str	w2, [x0]
   488dc:	ret
   488e0:	fadd	s0, s0, s0
   488e4:	ret

00000000000488e8 <__signbitf@@GLIBC_2.17>:
   488e8:	fmov	w0, s0
   488ec:	and	w0, w0, #0x80000000
   488f0:	ret
   488f4:	nop

00000000000488f8 <ldexpf@@GLIBC_2.17>:
   488f8:	stp	x29, x30, [sp, #-32]!
   488fc:	fabs	s2, s0
   48900:	mov	w1, #0x7f7fffff            	// #2139095039
   48904:	mov	x29, sp
   48908:	str	d8, [sp, #16]
   4890c:	fmov	s8, w1
   48910:	fmov	s1, s0
   48914:	fcmp	s2, s8
   48918:	b.hi	48924 <ldexpf@@GLIBC_2.17+0x2c>  // b.pmore
   4891c:	fcmp	s0, #0.0
   48920:	b.ne	48934 <ldexpf@@GLIBC_2.17+0x3c>  // b.any
   48924:	fadd	s0, s1, s1
   48928:	ldr	d8, [sp, #16]
   4892c:	ldp	x29, x30, [sp], #32
   48930:	ret
   48934:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   48938:	fabs	s1, s0
   4893c:	fcmp	s1, s8
   48940:	b.ls	48964 <ldexpf@@GLIBC_2.17+0x6c>  // b.plast
   48944:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   48948:	ldr	x0, [x0, #3976]
   4894c:	mrs	x1, tpidr_el0
   48950:	mov	w2, #0x22                  	// #34
   48954:	ldr	d8, [sp, #16]
   48958:	str	w2, [x1, x0]
   4895c:	ldp	x29, x30, [sp], #32
   48960:	ret
   48964:	fcmp	s0, #0.0
   48968:	b.ne	48928 <ldexpf@@GLIBC_2.17+0x30>  // b.any
   4896c:	b	48944 <ldexpf@@GLIBC_2.17+0x4c>
   48970:	fcvt	d0, s0
   48974:	fmov	d2, #1.000000000000000000e+00
   48978:	fcvt	d1, s1
   4897c:	fsub	d3, d0, d2
   48980:	fadd	d0, d0, d2
   48984:	fmul	d1, d1, d1
   48988:	fmadd	d0, d3, d0, d1
   4898c:	fcvt	s0, d0
   48990:	ret
   48994:	nop
   48998:	fcvt	d1, s1
   4899c:	fcvt	d0, s0
   489a0:	cmp	w0, #0x1
   489a4:	fadd	d2, d0, d1
   489a8:	fmov	d1, d2
   489ac:	b.le	489d0 <ldexpf@@GLIBC_2.17+0xd8>
   489b0:	mov	w2, #0x1                   	// #1
   489b4:	nop
   489b8:	scvtf	d0, w2
   489bc:	add	w2, w2, #0x1
   489c0:	cmp	w0, w2
   489c4:	fadd	d0, d0, d2
   489c8:	fmul	d1, d1, d0
   489cc:	b.ne	489b8 <ldexpf@@GLIBC_2.17+0xc0>  // b.any
   489d0:	fcvt	s0, d1
   489d4:	fcvt	d2, s0
   489d8:	fsub	d1, d1, d2
   489dc:	fdiv	d1, d1, d2
   489e0:	fcvt	s1, d1
   489e4:	str	s1, [x1]
   489e8:	ret
   489ec:	nop
   489f0:	fmov	s1, #2.500000000000000000e-01
   489f4:	fcmpe	s0, s1
   489f8:	b.hi	48a10 <ldexpf@@GLIBC_2.17+0x118>  // b.pmore
   489fc:	mov	w0, #0xfdb                 	// #4059
   48a00:	movk	w0, #0x4049, lsl #16
   48a04:	fmov	s1, w0
   48a08:	fmul	s0, s0, s1
   48a0c:	b	47cd8 <sinf@@GLIBC_2.17>
   48a10:	fmov	s2, #5.000000000000000000e-01
   48a14:	mov	w0, #0xfdb                 	// #4059
   48a18:	movk	w0, #0x4049, lsl #16
   48a1c:	fmov	s1, w0
   48a20:	fsub	s0, s2, s0
   48a24:	fmul	s0, s0, s1
   48a28:	b	466d0 <cosf@@GLIBC_2.17>
   48a2c:	nop
   48a30:	fmov	s1, #2.500000000000000000e-01
   48a34:	fcmpe	s0, s1
   48a38:	b.hi	48a50 <ldexpf@@GLIBC_2.17+0x158>  // b.pmore
   48a3c:	mov	w0, #0xfdb                 	// #4059
   48a40:	movk	w0, #0x4049, lsl #16
   48a44:	fmov	s1, w0
   48a48:	fmul	s0, s0, s1
   48a4c:	b	466d0 <cosf@@GLIBC_2.17>
   48a50:	fmov	s2, #5.000000000000000000e-01
   48a54:	mov	w0, #0xfdb                 	// #4059
   48a58:	movk	w0, #0x4049, lsl #16
   48a5c:	fmov	s1, w0
   48a60:	fsub	s0, s2, s0
   48a64:	fmul	s0, s0, s1
   48a68:	b	47cd8 <sinf@@GLIBC_2.17>
   48a6c:	nop
   48a70:	stp	x29, x30, [sp, #-112]!
   48a74:	fmov	s2, #-2.000000000000000000e+00
   48a78:	mov	x29, sp
   48a7c:	stp	d8, d9, [sp, #32]
   48a80:	fmov	s9, s0
   48a84:	fmul	s0, s0, s2
   48a88:	fcvtms	w2, s0
   48a8c:	tbz	w2, #0, 48c74 <ldexpf@@GLIBC_2.17+0x37c>
   48a90:	mvn	w1, w2
   48a94:	stp	x19, x20, [sp, #16]
   48a98:	add	w1, w1, w1, lsr #31
   48a9c:	fmov	s0, w1
   48aa0:	stp	d10, d11, [sp, #48]
   48aa4:	sshr	v1.2s, v0.2s, #1
   48aa8:	stp	d14, d15, [sp, #80]
   48aac:	scvtf	s1, s1
   48ab0:	tst	x2, #0x2
   48ab4:	mov	w1, #0x1                   	// #1
   48ab8:	sub	w2, w2, #0x4
   48abc:	cneg	w1, w1, eq  // eq = none
   48ac0:	str	w1, [x0]
   48ac4:	mrs	x19, fpcr
   48ac8:	ands	w20, w19, #0xc00000
   48acc:	b.ne	48d70 <ldexpf@@GLIBC_2.17+0x478>  // b.any
   48ad0:	sbfiz	x1, x2, #3, #32
   48ad4:	adrp	x0, 85000 <f64xsubf128@@GLIBC_2.28+0x31280>
   48ad8:	add	x0, x0, #0x2b8
   48adc:	cmp	w2, #0x1
   48ae0:	add	x3, x0, x1
   48ae4:	ldr	s15, [x0, x1]
   48ae8:	ldr	s4, [x3, #4]
   48aec:	fsub	s0, s9, s15
   48af0:	fsub	s11, s0, s4
   48af4:	b.le	48cc0 <ldexpf@@GLIBC_2.17+0x3c8>
   48af8:	stp	d12, d13, [sp, #64]
   48afc:	fabd	s13, s1, s9
   48b00:	fsub	s1, s1, s15
   48b04:	fmov	s2, #5.000000000000000000e-01
   48b08:	str	s4, [sp, #108]
   48b0c:	fneg	s12, s11
   48b10:	fabd	s0, s1, s4
   48b14:	fmul	s1, s13, s2
   48b18:	fcmpe	s1, s0
   48b1c:	b.gt	48c9c <ldexpf@@GLIBC_2.17+0x3a4>
   48b20:	tst	x2, #0x1
   48b24:	fcsel	s10, s11, s12, eq  // eq = none
   48b28:	fmul	s10, s10, s2
   48b2c:	fmov	s0, s10
   48b30:	bl	489f0 <ldexpf@@GLIBC_2.17+0xf8>
   48b34:	fmov	s8, s0
   48b38:	fmov	s0, s10
   48b3c:	bl	48a30 <ldexpf@@GLIBC_2.17+0x138>
   48b40:	fmov	s14, s0
   48b44:	fmov	s0, s13
   48b48:	bl	48a30 <ldexpf@@GLIBC_2.17+0x138>
   48b4c:	fmov	s10, s0
   48b50:	fmov	s0, s13
   48b54:	bl	489f0 <ldexpf@@GLIBC_2.17+0xf8>
   48b58:	fadd	s1, s8, s8
   48b5c:	fdiv	s10, s10, s0
   48b60:	fnmsub	s8, s14, s10, s8
   48b64:	fmul	s0, s1, s8
   48b68:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   48b6c:	fmov	s10, s0
   48b70:	ldr	s4, [sp, #108]
   48b74:	fmov	s8, #1.000000000000000000e+00
   48b78:	mov	w0, #0xf854                	// #63572
   48b7c:	movk	w0, #0x402d, lsl #16
   48b80:	fmov	s3, w0
   48b84:	fsub	s13, s8, s15
   48b88:	mov	w0, #0x4577                	// #17783
   48b8c:	movk	w0, #0x33b1, lsl #16
   48b90:	fmov	s5, w0
   48b94:	fsub	s14, s8, s9
   48b98:	fsub	s2, s8, s13
   48b9c:	fsub	s0, s13, s3
   48ba0:	fsub	s1, s8, s14
   48ba4:	fsub	s2, s2, s15
   48ba8:	fsub	s0, s0, s5
   48bac:	fsub	s1, s1, s9
   48bb0:	fsub	s2, s2, s4
   48bb4:	str	s1, [sp, #108]
   48bb8:	fadd	s0, s2, s0
   48bbc:	fdiv	s0, s0, s3
   48bc0:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   48bc4:	fmov	s15, s0
   48bc8:	fdiv	s0, s11, s14
   48bcc:	fmov	s9, #5.000000000000000000e-01
   48bd0:	ldr	s1, [sp, #108]
   48bd4:	fsub	s9, s14, s9
   48bd8:	fadd	s9, s9, s1
   48bdc:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   48be0:	fmul	s2, s13, s14
   48be4:	fdiv	s13, s8, s13
   48be8:	movi	v1.2s, #0x0
   48bec:	fdiv	s8, s8, s14
   48bf0:	mov	w0, #0xd01                 	// #3329
   48bf4:	movk	w0, #0x3a50, lsl #16
   48bf8:	fmov	s5, w0
   48bfc:	fdiv	s12, s12, s2
   48c00:	mov	w0, #0xb61                 	// #2913
   48c04:	movk	w0, #0xbb36, lsl #16
   48c08:	fmov	s4, w0
   48c0c:	mov	w0, #0xaaab                	// #43691
   48c10:	fmul	s9, s9, s0
   48c14:	movk	w0, #0x3daa, lsl #16
   48c18:	fmov	s3, w0
   48c1c:	fmadd	s0, s15, s11, s9
   48c20:	fmul	s2, s13, s13
   48c24:	fmul	s7, s8, s8
   48c28:	fadd	s13, s13, s8
   48c2c:	fmul	s8, s8, s12
   48c30:	fmul	s8, s8, s13
   48c34:	fmadd	s6, s2, s12, s8
   48c38:	fmul	s2, s2, s6
   48c3c:	fmadd	s8, s7, s8, s2
   48c40:	fmadd	s1, s8, s5, s1
   48c44:	fmadd	s1, s6, s4, s1
   48c48:	fmadd	s12, s12, s3, s1
   48c4c:	fadd	s0, s0, s12
   48c50:	ldp	d12, d13, [sp, #64]
   48c54:	fadd	s0, s0, s10
   48c58:	cbnz	w20, 48d5c <ldexpf@@GLIBC_2.17+0x464>
   48c5c:	ldp	x19, x20, [sp, #16]
   48c60:	ldp	d10, d11, [sp, #48]
   48c64:	ldp	d14, d15, [sp, #80]
   48c68:	ldp	d8, d9, [sp, #32]
   48c6c:	ldp	x29, x30, [sp], #112
   48c70:	ret
   48c74:	scvtf	s1, w2
   48c78:	fcmp	s0, s1
   48c7c:	b.eq	48d44 <ldexpf@@GLIBC_2.17+0x44c>  // b.none
   48c80:	add	w1, w2, w2, lsr #31
   48c84:	stp	x19, x20, [sp, #16]
   48c88:	neg	w1, w1, asr #1
   48c8c:	stp	d10, d11, [sp, #48]
   48c90:	scvtf	s1, w1
   48c94:	stp	d14, d15, [sp, #80]
   48c98:	b	48ab0 <ldexpf@@GLIBC_2.17+0x1b8>
   48c9c:	bl	489f0 <ldexpf@@GLIBC_2.17+0xf8>
   48ca0:	fmov	s8, s0
   48ca4:	fmov	s0, s13
   48ca8:	bl	489f0 <ldexpf@@GLIBC_2.17+0xf8>
   48cac:	fdiv	s0, s8, s0
   48cb0:	bl	45298 <__logf_finite@GLIBC_2.17>
   48cb4:	fmov	s10, s0
   48cb8:	ldr	s4, [sp, #108]
   48cbc:	b	48b74 <ldexpf@@GLIBC_2.17+0x27c>
   48cc0:	fmov	s0, #-8.000000000000000000e+00
   48cc4:	fmov	s3, #1.600000000000000000e+01
   48cc8:	add	x5, x0, #0x110
   48ccc:	add	x4, x0, #0xd0
   48cd0:	fmul	s0, s9, s0
   48cd4:	add	x1, x0, #0x150
   48cd8:	mov	w2, #0xffffffdf            	// #-33
   48cdc:	mov	w0, #0x3d800000            	// #1031798784
   48ce0:	fmov	s2, w0
   48ce4:	frintm	s0, s0
   48ce8:	fsub	s0, s0, s3
   48cec:	fcvtzs	w3, s0
   48cf0:	sub	w0, w2, w3, lsl #1
   48cf4:	sxtw	x2, w3
   48cf8:	scvtf	s3, w0
   48cfc:	ldr	x0, [x5, x2, lsl #3]
   48d00:	ldr	x2, [x4, x2, lsl #3]
   48d04:	fmsub	s3, s3, s2, s9
   48d08:	ldr	s0, [x1, x0, lsl #2]
   48d0c:	cbz	x2, 48d30 <ldexpf@@GLIBC_2.17+0x438>
   48d10:	sub	x2, x0, x2
   48d14:	add	x0, x1, x0, lsl #2
   48d18:	add	x1, x1, x2, lsl #2
   48d1c:	nop
   48d20:	ldr	s2, [x0, #-4]!
   48d24:	fmadd	s0, s3, s0, s2
   48d28:	cmp	x1, x0
   48d2c:	b.ne	48d20 <ldexpf@@GLIBC_2.17+0x428>  // b.any
   48d30:	fmul	s0, s11, s0
   48d34:	fsub	s1, s9, s1
   48d38:	fdiv	s0, s0, s1
   48d3c:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   48d40:	b	48c58 <ldexpf@@GLIBC_2.17+0x360>
   48d44:	movi	v1.2s, #0x0
   48d48:	fmov	s0, #1.000000000000000000e+00
   48d4c:	ldp	d8, d9, [sp, #32]
   48d50:	ldp	x29, x30, [sp], #112
   48d54:	fdiv	s0, s0, s1
   48d58:	ret
   48d5c:	msr	fpcr, x19
   48d60:	ldp	x19, x20, [sp, #16]
   48d64:	ldp	d10, d11, [sp, #48]
   48d68:	ldp	d14, d15, [sp, #80]
   48d6c:	b	48c68 <ldexpf@@GLIBC_2.17+0x370>
   48d70:	eor	w0, w20, w19
   48d74:	msr	fpcr, x0
   48d78:	b	48ad0 <ldexpf@@GLIBC_2.17+0x1d8>
   48d7c:	nop

0000000000048d80 <nextupf@@GLIBC_2.24>:
   48d80:	fmov	w0, s0
   48d84:	ands	w1, w0, #0x7fffffff
   48d88:	b.eq	48dc4 <nextupf@@GLIBC_2.24+0x44>  // b.none
   48d8c:	mov	w2, #0x7f800000            	// #2139095040
   48d90:	cmp	w1, w2
   48d94:	b.gt	48dbc <nextupf@@GLIBC_2.24+0x3c>
   48d98:	tbnz	w0, #31, 48dcc <nextupf@@GLIBC_2.24+0x4c>
   48d9c:	fabs	s2, s0
   48da0:	mov	w1, #0x7f7fffff            	// #2139095039
   48da4:	fmov	s1, w1
   48da8:	add	w0, w0, #0x1
   48dac:	fcmp	s2, s1
   48db0:	b.gt	48db8 <nextupf@@GLIBC_2.24+0x38>
   48db4:	fmov	s0, w0
   48db8:	ret
   48dbc:	fadd	s0, s0, s0
   48dc0:	ret
   48dc4:	movi	v0.2s, #0x1
   48dc8:	ret
   48dcc:	sub	w0, w0, #0x1
   48dd0:	fmov	s0, w0
   48dd4:	b	48db8 <nextupf@@GLIBC_2.24+0x38>

0000000000048dd8 <totalorderf@@GLIBC_2.31>:
   48dd8:	ldr	w3, [x0]
   48ddc:	ldr	w2, [x1]
   48de0:	asr	w1, w3, #31
   48de4:	asr	w0, w2, #31
   48de8:	eor	w1, w3, w1, lsr #1
   48dec:	eor	w0, w2, w0, lsr #1
   48df0:	cmp	w1, w0
   48df4:	cset	w0, le
   48df8:	ret
   48dfc:	nop

0000000000048e00 <totalorderf@GLIBC_2.25>:
   48e00:	stp	x29, x30, [sp, #-32]!
   48e04:	mov	x29, sp
   48e08:	add	x1, sp, #0x18
   48e0c:	add	x0, sp, #0x1c
   48e10:	stp	s1, s0, [sp, #24]
   48e14:	bl	48dd8 <totalorderf@@GLIBC_2.31>
   48e18:	ldp	x29, x30, [sp], #32
   48e1c:	ret

0000000000048e20 <totalordermagf@@GLIBC_2.31>:
   48e20:	ldr	w2, [x0]
   48e24:	ldr	w0, [x1]
   48e28:	and	w2, w2, #0x7fffffff
   48e2c:	and	w0, w0, #0x7fffffff
   48e30:	cmp	w2, w0
   48e34:	cset	w0, ls  // ls = plast
   48e38:	ret
   48e3c:	nop

0000000000048e40 <totalordermagf@GLIBC_2.25>:
   48e40:	stp	x29, x30, [sp, #-32]!
   48e44:	mov	x29, sp
   48e48:	add	x1, sp, #0x18
   48e4c:	add	x0, sp, #0x1c
   48e50:	stp	s1, s0, [sp, #24]
   48e54:	bl	48e20 <totalordermagf@@GLIBC_2.31>
   48e58:	ldp	x29, x30, [sp], #32
   48e5c:	ret

0000000000048e60 <getpayloadf@@GLIBC_2.25>:
   48e60:	ldr	w0, [x0]
   48e64:	and	w0, w0, #0x3fffff
   48e68:	scvtf	s0, w0
   48e6c:	ret

0000000000048e70 <setpayloadf@@GLIBC_2.25>:
   48e70:	fmov	w1, s0
   48e74:	mov	x3, x0
   48e78:	fmov	w2, s0
   48e7c:	lsr	w0, w1, #23
   48e80:	cmp	w0, #0x94
   48e84:	b.hi	48ed0 <setpayloadf@@GLIBC_2.25+0x60>  // b.pmore
   48e88:	cmp	w0, #0x7e
   48e8c:	ccmp	w1, #0x0, #0x4, le
   48e90:	b.ne	48ed0 <setpayloadf@@GLIBC_2.25+0x60>  // b.any
   48e94:	mov	w1, #0x96                  	// #150
   48e98:	sub	w0, w1, w0
   48e9c:	mov	w1, #0xffffffff            	// #-1
   48ea0:	lsl	w1, w1, w0
   48ea4:	bics	wzr, w2, w1
   48ea8:	b.ne	48ed0 <setpayloadf@@GLIBC_2.25+0x60>  // b.any
   48eac:	mov	w1, #0x7fc00000            	// #2143289344
   48eb0:	cbz	w2, 48ec4 <setpayloadf@@GLIBC_2.25+0x54>
   48eb4:	and	w1, w2, #0x7fffff
   48eb8:	orr	w1, w1, #0x800000
   48ebc:	lsr	w1, w1, w0
   48ec0:	orr	w1, w1, #0x7fc00000
   48ec4:	mov	w0, #0x0                   	// #0
   48ec8:	str	w1, [x3]
   48ecc:	ret
   48ed0:	mov	w0, #0x1                   	// #1
   48ed4:	str	wzr, [x3]
   48ed8:	ret
   48edc:	nop

0000000000048ee0 <setpayloadsigf@@GLIBC_2.25>:
   48ee0:	fmov	w1, s0
   48ee4:	mov	x2, x0
   48ee8:	lsr	w3, w1, #23
   48eec:	sub	w0, w3, #0x7f
   48ef0:	cmp	w0, #0x15
   48ef4:	b.hi	48f30 <setpayloadsigf@@GLIBC_2.25+0x50>  // b.pmore
   48ef8:	mov	w0, #0x96                  	// #150
   48efc:	sub	w0, w0, w3
   48f00:	mov	w3, #0xffffffff            	// #-1
   48f04:	lsl	w3, w3, w0
   48f08:	bics	wzr, w1, w3
   48f0c:	b.ne	48f30 <setpayloadsigf@@GLIBC_2.25+0x50>  // b.any
   48f10:	cbz	w1, 48f3c <setpayloadsigf@@GLIBC_2.25+0x5c>
   48f14:	and	w1, w1, #0x7fffff
   48f18:	orr	w1, w1, #0x800000
   48f1c:	lsr	w1, w1, w0
   48f20:	orr	w1, w1, #0x7f800000
   48f24:	mov	w0, #0x0                   	// #0
   48f28:	str	w1, [x2]
   48f2c:	ret
   48f30:	mov	w0, #0x1                   	// #1
   48f34:	str	wzr, [x2]
   48f38:	ret
   48f3c:	mov	w1, #0x7f800000            	// #2139095040
   48f40:	b	48f24 <setpayloadsigf@@GLIBC_2.25+0x44>
   48f44:	nop

0000000000048f48 <roundevenf@@GLIBC_2.25>:
   48f48:	fmov	w0, s0
   48f4c:	ubfx	x2, x0, #23, #8
   48f50:	and	w1, w0, #0x7fffffff
   48f54:	cmp	w2, #0x95
   48f58:	b.ls	48f68 <roundevenf@@GLIBC_2.25+0x20>  // b.plast
   48f5c:	cmp	w2, #0xff
   48f60:	b.eq	48fcc <roundevenf@@GLIBC_2.25+0x84>  // b.none
   48f64:	ret
   48f68:	cmp	w2, #0x7e
   48f6c:	b.ls	48fb0 <roundevenf@@GLIBC_2.25+0x68>  // b.plast
   48f70:	mov	w3, #0x95                  	// #149
   48f74:	sub	w3, w3, w2
   48f78:	mov	w1, #0x1                   	// #1
   48f7c:	mov	w4, #0x96                  	// #150
   48f80:	sub	w4, w4, w2
   48f84:	lsl	w3, w1, w3
   48f88:	sub	w2, w3, #0x1
   48f8c:	add	w3, w0, w3
   48f90:	lsl	w1, w1, w4
   48f94:	orr	w2, w2, w1
   48f98:	tst	w2, w0
   48f9c:	neg	w1, w1
   48fa0:	csel	w0, w3, w0, ne  // ne = any
   48fa4:	and	w0, w1, w0
   48fa8:	fmov	s0, w0
   48fac:	ret
   48fb0:	and	w0, w0, #0x80000000
   48fb4:	mov	w3, #0x3f000000            	// #1056964608
   48fb8:	orr	w2, w0, #0x3f800000
   48fbc:	ccmp	w1, w3, #0x0, eq  // eq = none
   48fc0:	csel	w0, w2, w0, hi  // hi = pmore
   48fc4:	fmov	s0, w0
   48fc8:	b	48fac <roundevenf@@GLIBC_2.25+0x64>
   48fcc:	fadd	s0, s0, s0
   48fd0:	ret
   48fd4:	nop
   48fd8:	stp	x29, x30, [sp, #-32]!
   48fdc:	mov	x29, sp
   48fe0:	stp	x19, x20, [sp, #16]
   48fe4:	mov	w19, w1
   48fe8:	and	w20, w0, #0xff
   48fec:	mov	w0, #0x1                   	// #1
   48ff0:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   48ff4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   48ff8:	ldr	x0, [x0, #3976]
   48ffc:	mrs	x1, tpidr_el0
   49000:	mov	w2, #0x21                  	// #33
   49004:	str	w2, [x1, x0]
   49008:	mov	x0, #0x0                   	// #0
   4900c:	cbz	w19, 49028 <roundevenf@@GLIBC_2.25+0xe0>
   49010:	sub	w19, w19, #0x1
   49014:	mov	x0, #0x1                   	// #1
   49018:	cmp	w20, #0x0
   4901c:	lsl	x19, x0, x19
   49020:	sub	x0, x19, #0x1
   49024:	csneg	x0, x0, x19, eq  // eq = none
   49028:	ldp	x19, x20, [sp, #16]
   4902c:	ldp	x29, x30, [sp], #32
   49030:	ret
   49034:	nop

0000000000049038 <fromfpf@@GLIBC_2.25>:
   49038:	cbz	w1, 49164 <fromfpf@@GLIBC_2.25+0x12c>
   4903c:	fmov	w2, s0
   49040:	ands	w3, w2, #0x7fffffff
   49044:	b.eq	4915c <fromfpf@@GLIBC_2.25+0x124>  // b.none
   49048:	cmp	w1, #0x40
   4904c:	mov	w4, #0x40                  	// #64
   49050:	csel	w1, w1, w4, ls  // ls = plast
   49054:	lsr	w4, w3, #23
   49058:	add	w5, w1, w2, lsr #31
   4905c:	sub	w6, w4, #0x7f
   49060:	sub	w5, w5, #0x2
   49064:	lsr	w8, w2, #31
   49068:	cmp	w6, w5
   4906c:	b.gt	49154 <fromfpf@@GLIBC_2.25+0x11c>
   49070:	and	w3, w2, #0x7fffff
   49074:	cmp	w6, #0x16
   49078:	orr	w3, w3, #0x800000
   4907c:	b.le	490b8 <fromfpf@@GLIBC_2.25+0x80>
   49080:	sub	w4, w4, #0x96
   49084:	mov	w10, #0x0                   	// #0
   49088:	lsl	x3, x3, x4
   4908c:	cmp	w0, #0x1
   49090:	b.eq	491c4 <fromfpf@@GLIBC_2.25+0x18c>  // b.none
   49094:	b.le	49128 <fromfpf@@GLIBC_2.25+0xf0>
   49098:	tbnz	w2, #31, 49118 <fromfpf@@GLIBC_2.25+0xe0>
   4909c:	add	w5, w5, #0x1
   490a0:	mov	x2, #0x1                   	// #1
   490a4:	mov	x0, x3
   490a8:	lsl	x5, x2, x5
   490ac:	cmp	x3, x5
   490b0:	b.eq	49154 <fromfpf@@GLIBC_2.25+0x11c>  // b.none
   490b4:	ret
   490b8:	cmn	w6, #0x1
   490bc:	b.lt	49194 <fromfpf@@GLIBC_2.25+0x15c>  // b.tstop
   490c0:	mov	w4, #0x16                  	// #22
   490c4:	sub	w9, w4, w6
   490c8:	mov	w4, #0x1                   	// #1
   490cc:	mov	w7, #0x17                  	// #23
   490d0:	lsl	w4, w4, w9
   490d4:	sub	w7, w7, w6
   490d8:	ands	w11, w3, w4
   490dc:	sub	w4, w4, #0x1
   490e0:	cset	w9, ne  // ne = any
   490e4:	ands	w4, w4, w3
   490e8:	cset	w10, ne  // ne = any
   490ec:	lsr	w3, w3, w7
   490f0:	cmp	w0, #0x3
   490f4:	b.eq	491d0 <fromfpf@@GLIBC_2.25+0x198>  // b.none
   490f8:	b.gt	491a0 <fromfpf@@GLIBC_2.25+0x168>
   490fc:	cbz	w0, 49130 <fromfpf@@GLIBC_2.25+0xf8>
   49100:	cmp	w0, #0x1
   49104:	b.ne	49098 <fromfpf@@GLIBC_2.25+0x60>  // b.any
   49108:	tbz	w2, #31, 4909c <fromfpf@@GLIBC_2.25+0x64>
   4910c:	cmp	w9, #0x0
   49110:	ccmp	w10, #0x0, #0x0, eq  // eq = none
   49114:	cinc	x3, x3, ne  // ne = any
   49118:	cmp	w6, w5
   4911c:	b.eq	49144 <fromfpf@@GLIBC_2.25+0x10c>  // b.none
   49120:	neg	x0, x3
   49124:	ret
   49128:	mov	w9, #0x0                   	// #0
   4912c:	cbnz	w0, 49098 <fromfpf@@GLIBC_2.25+0x60>
   49130:	tbnz	w2, #31, 49118 <fromfpf@@GLIBC_2.25+0xe0>
   49134:	cmp	w9, #0x0
   49138:	ccmp	w10, #0x0, #0x0, eq  // eq = none
   4913c:	cinc	x3, x3, ne  // ne = any
   49140:	b	4909c <fromfpf@@GLIBC_2.25+0x64>
   49144:	mov	x0, #0x1                   	// #1
   49148:	lsl	x6, x0, x6
   4914c:	cmp	x6, x3
   49150:	b.eq	49120 <fromfpf@@GLIBC_2.25+0xe8>  // b.none
   49154:	mov	w0, w8
   49158:	b	48fd8 <roundevenf@@GLIBC_2.25+0x90>
   4915c:	mov	x0, #0x0                   	// #0
   49160:	ret
   49164:	stp	x29, x30, [sp, #-16]!
   49168:	mov	w0, #0x1                   	// #1
   4916c:	mov	x29, sp
   49170:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   49174:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   49178:	ldr	x1, [x1, #3976]
   4917c:	mrs	x2, tpidr_el0
   49180:	mov	w3, #0x21                  	// #33
   49184:	mov	x0, #0x0                   	// #0
   49188:	str	w3, [x2, x1]
   4918c:	ldp	x29, x30, [sp], #16
   49190:	ret
   49194:	mov	w10, #0x1                   	// #1
   49198:	mov	x3, #0x0                   	// #0
   4919c:	b	4908c <fromfpf@@GLIBC_2.25+0x54>
   491a0:	cmp	w0, #0x4
   491a4:	b.ne	49098 <fromfpf@@GLIBC_2.25+0x60>  // b.any
   491a8:	cbz	w11, 49098 <fromfpf@@GLIBC_2.25+0x60>
   491ac:	and	w7, w3, #0x1
   491b0:	orr	w4, w7, w4
   491b4:	cmp	w4, #0x0
   491b8:	cinc	x3, x3, ne  // ne = any
   491bc:	tbz	w2, #31, 4909c <fromfpf@@GLIBC_2.25+0x64>
   491c0:	b	49118 <fromfpf@@GLIBC_2.25+0xe0>
   491c4:	mov	w9, #0x0                   	// #0
   491c8:	tbz	w2, #31, 4909c <fromfpf@@GLIBC_2.25+0x64>
   491cc:	b	4910c <fromfpf@@GLIBC_2.25+0xd4>
   491d0:	and	x9, x9, #0xff
   491d4:	add	x3, x3, x9
   491d8:	tbz	w2, #31, 4909c <fromfpf@@GLIBC_2.25+0x64>
   491dc:	b	49118 <fromfpf@@GLIBC_2.25+0xe0>

00000000000491e0 <ufromfpf@@GLIBC_2.25>:
   491e0:	stp	x29, x30, [sp, #-32]!
   491e4:	mov	x29, sp
   491e8:	cbz	w1, 49318 <ufromfpf@@GLIBC_2.25+0x138>
   491ec:	fmov	w3, s0
   491f0:	mov	w4, w0
   491f4:	mov	x0, #0x0                   	// #0
   491f8:	ands	w2, w3, #0x7fffffff
   491fc:	b.eq	4927c <ufromfpf@@GLIBC_2.25+0x9c>  // b.none
   49200:	cmp	w1, #0x40
   49204:	stp	x19, x20, [sp, #16]
   49208:	lsr	w5, w2, #23
   4920c:	mov	w0, #0x40                  	// #64
   49210:	mov	w19, w1
   49214:	sub	w6, w5, #0x7f
   49218:	csel	w20, w1, w0, ls  // ls = plast
   4921c:	tbnz	w3, #31, 492a0 <ufromfpf@@GLIBC_2.25+0xc0>
   49220:	sub	w1, w20, #0x1
   49224:	cmp	w6, w1
   49228:	b.gt	49358 <ufromfpf@@GLIBC_2.25+0x178>
   4922c:	and	w2, w3, #0x7fffff
   49230:	cmp	w6, #0x16
   49234:	orr	w2, w2, #0x800000
   49238:	b.le	492b0 <ufromfpf@@GLIBC_2.25+0xd0>
   4923c:	sub	w0, w5, #0x96
   49240:	mov	w9, #0x0                   	// #0
   49244:	lsl	x0, x2, x0
   49248:	cmp	w4, #0x1
   4924c:	b.eq	493c4 <ufromfpf@@GLIBC_2.25+0x1e4>  // b.none
   49250:	b.le	49284 <ufromfpf@@GLIBC_2.25+0xa4>
   49254:	tbnz	w3, #31, 49310 <ufromfpf@@GLIBC_2.25+0x130>
   49258:	cmp	w1, #0x3f
   4925c:	b.eq	49340 <ufromfpf@@GLIBC_2.25+0x160>  // b.none
   49260:	add	w1, w1, #0x1
   49264:	mov	x2, #0x1                   	// #1
   49268:	lsl	x1, x2, x1
   4926c:	cmp	x1, x0
   49270:	cset	w1, eq  // eq = none
   49274:	cbnz	w1, 49358 <ufromfpf@@GLIBC_2.25+0x178>
   49278:	ldp	x19, x20, [sp, #16]
   4927c:	ldp	x29, x30, [sp], #32
   49280:	ret
   49284:	mov	w8, #0x0                   	// #0
   49288:	cbnz	w4, 49254 <ufromfpf@@GLIBC_2.25+0x74>
   4928c:	tbnz	w3, #31, 49310 <ufromfpf@@GLIBC_2.25+0x130>
   49290:	cmp	w8, #0x0
   49294:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   49298:	cinc	x0, x0, ne  // ne = any
   4929c:	b	49258 <ufromfpf@@GLIBC_2.25+0x78>
   492a0:	tbz	w6, #31, 49314 <ufromfpf@@GLIBC_2.25+0x134>
   492a4:	and	w2, w3, #0x7fffff
   492a8:	mov	w1, #0xffffffff            	// #-1
   492ac:	orr	w2, w2, #0x800000
   492b0:	cmn	w6, #0x1
   492b4:	b.lt	49394 <ufromfpf@@GLIBC_2.25+0x1b4>  // b.tstop
   492b8:	mov	w0, #0x16                  	// #22
   492bc:	sub	w5, w0, w6
   492c0:	mov	w0, #0x1                   	// #1
   492c4:	mov	w7, #0x17                  	// #23
   492c8:	lsl	w0, w0, w5
   492cc:	sub	w7, w7, w6
   492d0:	ands	w10, w0, w2
   492d4:	sub	w0, w0, #0x1
   492d8:	cset	w8, ne  // ne = any
   492dc:	ands	w5, w0, w2
   492e0:	cset	w9, ne  // ne = any
   492e4:	lsr	w0, w2, w7
   492e8:	cmp	w4, #0x3
   492ec:	b.eq	493dc <ufromfpf@@GLIBC_2.25+0x1fc>  // b.none
   492f0:	b.gt	493a0 <ufromfpf@@GLIBC_2.25+0x1c0>
   492f4:	cbz	w4, 4928c <ufromfpf@@GLIBC_2.25+0xac>
   492f8:	cmp	w4, #0x1
   492fc:	b.ne	49254 <ufromfpf@@GLIBC_2.25+0x74>  // b.any
   49300:	tbz	w3, #31, 49258 <ufromfpf@@GLIBC_2.25+0x78>
   49304:	cmp	w8, #0x0
   49308:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   4930c:	cinc	x0, x0, ne  // ne = any
   49310:	cbz	x0, 49278 <ufromfpf@@GLIBC_2.25+0x98>
   49314:	ldp	x19, x20, [sp, #16]
   49318:	mov	w0, #0x1                   	// #1
   4931c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   49320:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   49324:	ldr	x1, [x1, #3976]
   49328:	mrs	x2, tpidr_el0
   4932c:	mov	w3, #0x21                  	// #33
   49330:	mov	x0, #0x0                   	// #0
   49334:	str	w3, [x2, x1]
   49338:	ldp	x29, x30, [sp], #32
   4933c:	ret
   49340:	cmp	w6, #0x3f
   49344:	cset	w1, eq  // eq = none
   49348:	cmp	x0, #0x0
   4934c:	csel	w1, w1, wzr, eq  // eq = none
   49350:	cbz	w1, 49278 <ufromfpf@@GLIBC_2.25+0x98>
   49354:	nop
   49358:	mov	w0, #0x1                   	// #1
   4935c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   49360:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   49364:	ldr	x0, [x0, #3976]
   49368:	mrs	x1, tpidr_el0
   4936c:	mov	w2, #0x21                  	// #33
   49370:	cmp	w19, #0x3f
   49374:	str	w2, [x1, x0]
   49378:	b.hi	493d0 <ufromfpf@@GLIBC_2.25+0x1f0>  // b.pmore
   4937c:	mov	x0, #0x1                   	// #1
   49380:	lsl	x0, x0, x20
   49384:	sub	x0, x0, #0x1
   49388:	ldp	x19, x20, [sp, #16]
   4938c:	ldp	x29, x30, [sp], #32
   49390:	ret
   49394:	mov	w9, #0x1                   	// #1
   49398:	mov	x0, #0x0                   	// #0
   4939c:	b	49248 <ufromfpf@@GLIBC_2.25+0x68>
   493a0:	cmp	w4, #0x4
   493a4:	b.ne	49254 <ufromfpf@@GLIBC_2.25+0x74>  // b.any
   493a8:	cbz	w10, 49254 <ufromfpf@@GLIBC_2.25+0x74>
   493ac:	and	w2, w0, #0x1
   493b0:	orr	w5, w2, w5
   493b4:	cmp	w5, #0x0
   493b8:	cinc	x0, x0, ne  // ne = any
   493bc:	tbz	w3, #31, 49258 <ufromfpf@@GLIBC_2.25+0x78>
   493c0:	b	49310 <ufromfpf@@GLIBC_2.25+0x130>
   493c4:	mov	w8, #0x0                   	// #0
   493c8:	tbz	w3, #31, 49258 <ufromfpf@@GLIBC_2.25+0x78>
   493cc:	b	49304 <ufromfpf@@GLIBC_2.25+0x124>
   493d0:	mov	x0, #0xffffffffffffffff    	// #-1
   493d4:	ldp	x19, x20, [sp, #16]
   493d8:	b	4927c <ufromfpf@@GLIBC_2.25+0x9c>
   493dc:	and	x8, x8, #0xff
   493e0:	add	x0, x0, x8
   493e4:	tbz	w3, #31, 49258 <ufromfpf@@GLIBC_2.25+0x78>
   493e8:	b	49310 <ufromfpf@@GLIBC_2.25+0x130>
   493ec:	nop
   493f0:	stp	x29, x30, [sp, #-32]!
   493f4:	mov	x29, sp
   493f8:	stp	x19, x20, [sp, #16]
   493fc:	mov	w19, w1
   49400:	and	w20, w0, #0xff
   49404:	mov	w0, #0x1                   	// #1
   49408:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   4940c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   49410:	ldr	x0, [x0, #3976]
   49414:	mrs	x1, tpidr_el0
   49418:	mov	w2, #0x21                  	// #33
   4941c:	str	w2, [x1, x0]
   49420:	mov	x0, #0x0                   	// #0
   49424:	cbz	w19, 49440 <ufromfpf@@GLIBC_2.25+0x260>
   49428:	sub	w19, w19, #0x1
   4942c:	mov	x0, #0x1                   	// #1
   49430:	cmp	w20, #0x0
   49434:	lsl	x19, x0, x19
   49438:	sub	x0, x19, #0x1
   4943c:	csneg	x0, x0, x19, eq  // eq = none
   49440:	ldp	x19, x20, [sp, #16]
   49444:	ldp	x29, x30, [sp], #32
   49448:	ret
   4944c:	nop

0000000000049450 <fromfpxf@@GLIBC_2.25>:
   49450:	cbz	w1, 49584 <fromfpxf@@GLIBC_2.25+0x134>
   49454:	fmov	w2, s0
   49458:	ands	w3, w2, #0x7fffffff
   4945c:	b.eq	49518 <fromfpxf@@GLIBC_2.25+0xc8>  // b.none
   49460:	cmp	w1, #0x40
   49464:	mov	w4, #0x40                  	// #64
   49468:	csel	w1, w1, w4, ls  // ls = plast
   4946c:	lsr	w4, w3, #23
   49470:	add	w5, w1, w2, lsr #31
   49474:	sub	w6, w4, #0x7f
   49478:	sub	w5, w5, #0x2
   4947c:	lsr	w10, w2, #31
   49480:	cmp	w6, w5
   49484:	b.gt	49510 <fromfpxf@@GLIBC_2.25+0xc0>
   49488:	and	w3, w2, #0x7fffff
   4948c:	cmp	w6, #0x16
   49490:	orr	w3, w3, #0x800000
   49494:	b.le	49520 <fromfpxf@@GLIBC_2.25+0xd0>
   49498:	sub	w4, w4, #0x96
   4949c:	mov	w9, #0x0                   	// #0
   494a0:	lsl	x3, x3, x4
   494a4:	cmp	w0, #0x1
   494a8:	mov	w7, #0x0                   	// #0
   494ac:	b.eq	49570 <fromfpxf@@GLIBC_2.25+0x120>  // b.none
   494b0:	b.le	494e4 <fromfpxf@@GLIBC_2.25+0x94>
   494b4:	tbz	w2, #31, 494f8 <fromfpxf@@GLIBC_2.25+0xa8>
   494b8:	cmp	w6, w5
   494bc:	b.eq	495d0 <fromfpxf@@GLIBC_2.25+0x180>  // b.none
   494c0:	cmp	w7, #0x0
   494c4:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   494c8:	b.eq	495e8 <fromfpxf@@GLIBC_2.25+0x198>  // b.none
   494cc:	movi	v1.2s, #0x80, lsl #16
   494d0:	fmov	s0, #1.000000000000000000e+00
   494d4:	fadd	s0, s0, s1
   494d8:	mov	x0, x3
   494dc:	tbnz	w2, #31, 495e8 <fromfpxf@@GLIBC_2.25+0x198>
   494e0:	ret
   494e4:	cbnz	w0, 494b4 <fromfpxf@@GLIBC_2.25+0x64>
   494e8:	tbnz	w2, #31, 494b8 <fromfpxf@@GLIBC_2.25+0x68>
   494ec:	cmp	w7, #0x0
   494f0:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   494f4:	cinc	x3, x3, ne  // ne = any
   494f8:	add	w5, w5, #0x1
   494fc:	mov	x4, #0x1                   	// #1
   49500:	lsl	x5, x4, x5
   49504:	cmp	x5, x3
   49508:	cset	w0, eq  // eq = none
   4950c:	cbz	w0, 495b4 <fromfpxf@@GLIBC_2.25+0x164>
   49510:	mov	w0, w10
   49514:	b	493f0 <ufromfpf@@GLIBC_2.25+0x210>
   49518:	mov	x0, #0x0                   	// #0
   4951c:	ret
   49520:	cmn	w6, #0x1
   49524:	b.lt	495c4 <fromfpxf@@GLIBC_2.25+0x174>  // b.tstop
   49528:	mov	w4, #0x16                  	// #22
   4952c:	sub	w4, w4, w6
   49530:	mov	w11, #0x1                   	// #1
   49534:	mov	w8, #0x17                  	// #23
   49538:	lsl	w4, w11, w4
   4953c:	sub	w8, w8, w6
   49540:	ands	w12, w3, w4
   49544:	sub	w4, w4, #0x1
   49548:	cset	w7, ne  // ne = any
   4954c:	ands	w4, w4, w3
   49550:	cset	w9, ne  // ne = any
   49554:	lsr	w3, w3, w8
   49558:	cmp	w0, #0x3
   4955c:	b.eq	49618 <fromfpxf@@GLIBC_2.25+0x1c8>  // b.none
   49560:	b.gt	495f0 <fromfpxf@@GLIBC_2.25+0x1a0>
   49564:	cbz	w0, 494e8 <fromfpxf@@GLIBC_2.25+0x98>
   49568:	cmp	w0, w11
   4956c:	b.ne	494b4 <fromfpxf@@GLIBC_2.25+0x64>  // b.any
   49570:	tbz	w2, #31, 494f8 <fromfpxf@@GLIBC_2.25+0xa8>
   49574:	cmp	w7, #0x0
   49578:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   4957c:	cinc	x3, x3, ne  // ne = any
   49580:	b	494b8 <fromfpxf@@GLIBC_2.25+0x68>
   49584:	stp	x29, x30, [sp, #-16]!
   49588:	mov	w0, #0x1                   	// #1
   4958c:	mov	x29, sp
   49590:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   49594:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   49598:	ldr	x1, [x1, #3976]
   4959c:	mrs	x2, tpidr_el0
   495a0:	mov	w3, #0x21                  	// #33
   495a4:	mov	x0, #0x0                   	// #0
   495a8:	str	w3, [x2, x1]
   495ac:	ldp	x29, x30, [sp], #16
   495b0:	ret
   495b4:	cmp	w7, #0x0
   495b8:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   495bc:	b.eq	494d8 <fromfpxf@@GLIBC_2.25+0x88>  // b.none
   495c0:	b	494cc <fromfpxf@@GLIBC_2.25+0x7c>
   495c4:	mov	w9, #0x1                   	// #1
   495c8:	mov	x3, #0x0                   	// #0
   495cc:	b	494a4 <fromfpxf@@GLIBC_2.25+0x54>
   495d0:	mov	x0, #0x1                   	// #1
   495d4:	lsl	x6, x0, x6
   495d8:	cmp	x6, x3
   495dc:	cset	w0, ne  // ne = any
   495e0:	cbnz	w0, 49510 <fromfpxf@@GLIBC_2.25+0xc0>
   495e4:	b	495b4 <fromfpxf@@GLIBC_2.25+0x164>
   495e8:	neg	x0, x3
   495ec:	ret
   495f0:	cmp	w0, #0x4
   495f4:	b.ne	494b4 <fromfpxf@@GLIBC_2.25+0x64>  // b.any
   495f8:	cbz	w12, 49628 <fromfpxf@@GLIBC_2.25+0x1d8>
   495fc:	and	w8, w3, #0x1
   49600:	mov	w7, w11
   49604:	orr	w4, w8, w4
   49608:	cmp	w4, #0x0
   4960c:	cinc	x3, x3, ne  // ne = any
   49610:	tbnz	w2, #31, 494b8 <fromfpxf@@GLIBC_2.25+0x68>
   49614:	b	494f8 <fromfpxf@@GLIBC_2.25+0xa8>
   49618:	and	x0, x7, #0xff
   4961c:	add	x3, x3, x0
   49620:	tbnz	w2, #31, 494b8 <fromfpxf@@GLIBC_2.25+0x68>
   49624:	b	494f8 <fromfpxf@@GLIBC_2.25+0xa8>
   49628:	mov	w7, #0x0                   	// #0
   4962c:	tbnz	w2, #31, 494b8 <fromfpxf@@GLIBC_2.25+0x68>
   49630:	b	494f8 <fromfpxf@@GLIBC_2.25+0xa8>
   49634:	nop

0000000000049638 <ufromfpxf@@GLIBC_2.25>:
   49638:	stp	x29, x30, [sp, #-32]!
   4963c:	mov	x29, sp
   49640:	cbz	w1, 49788 <ufromfpxf@@GLIBC_2.25+0x150>
   49644:	fmov	w3, s0
   49648:	mov	w4, w0
   4964c:	mov	x0, #0x0                   	// #0
   49650:	ands	w2, w3, #0x7fffffff
   49654:	b.eq	496f0 <ufromfpxf@@GLIBC_2.25+0xb8>  // b.none
   49658:	cmp	w1, #0x40
   4965c:	stp	x19, x20, [sp, #16]
   49660:	lsr	w5, w2, #23
   49664:	mov	w0, #0x40                  	// #64
   49668:	mov	w19, w1
   4966c:	sub	w6, w5, #0x7f
   49670:	csel	w20, w1, w0, ls  // ls = plast
   49674:	tbnz	w3, #31, 49710 <ufromfpxf@@GLIBC_2.25+0xd8>
   49678:	sub	w1, w20, #0x1
   4967c:	cmp	w6, w1
   49680:	b.gt	497d0 <ufromfpxf@@GLIBC_2.25+0x198>
   49684:	and	w2, w3, #0x7fffff
   49688:	cmp	w6, #0x16
   4968c:	orr	w2, w2, #0x800000
   49690:	b.le	49720 <ufromfpxf@@GLIBC_2.25+0xe8>
   49694:	sub	w0, w5, #0x96
   49698:	mov	w9, #0x0                   	// #0
   4969c:	lsl	x0, x2, x0
   496a0:	cmp	w4, #0x1
   496a4:	mov	w7, #0x0                   	// #0
   496a8:	b.eq	49770 <ufromfpxf@@GLIBC_2.25+0x138>  // b.none
   496ac:	b.le	496f8 <ufromfpxf@@GLIBC_2.25+0xc0>
   496b0:	tbnz	w3, #31, 49780 <ufromfpxf@@GLIBC_2.25+0x148>
   496b4:	cmp	w1, #0x3f
   496b8:	b.eq	497b0 <ufromfpxf@@GLIBC_2.25+0x178>  // b.none
   496bc:	add	w1, w1, #0x1
   496c0:	mov	x2, #0x1                   	// #1
   496c4:	lsl	x1, x2, x1
   496c8:	cmp	x1, x0
   496cc:	cset	w1, eq  // eq = none
   496d0:	cbnz	w1, 497d0 <ufromfpxf@@GLIBC_2.25+0x198>
   496d4:	cmp	w9, #0x0
   496d8:	ccmp	w7, #0x0, #0x0, eq  // eq = none
   496dc:	b.eq	4980c <ufromfpxf@@GLIBC_2.25+0x1d4>  // b.none
   496e0:	movi	v1.2s, #0x80, lsl #16
   496e4:	fmov	s0, #1.000000000000000000e+00
   496e8:	fadd	s0, s0, s1
   496ec:	ldp	x19, x20, [sp, #16]
   496f0:	ldp	x29, x30, [sp], #32
   496f4:	ret
   496f8:	cbnz	w4, 496b0 <ufromfpxf@@GLIBC_2.25+0x78>
   496fc:	tbnz	w3, #31, 49780 <ufromfpxf@@GLIBC_2.25+0x148>
   49700:	cmp	w7, #0x0
   49704:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   49708:	cinc	x0, x0, ne  // ne = any
   4970c:	b	496b4 <ufromfpxf@@GLIBC_2.25+0x7c>
   49710:	tbz	w6, #31, 49784 <ufromfpxf@@GLIBC_2.25+0x14c>
   49714:	and	w2, w3, #0x7fffff
   49718:	mov	w1, #0xffffffff            	// #-1
   4971c:	orr	w2, w2, #0x800000
   49720:	cmn	w6, #0x1
   49724:	b.lt	497c4 <ufromfpxf@@GLIBC_2.25+0x18c>  // b.tstop
   49728:	mov	w0, #0x16                  	// #22
   4972c:	sub	w0, w0, w6
   49730:	mov	w10, #0x1                   	// #1
   49734:	mov	w8, #0x17                  	// #23
   49738:	lsl	w0, w10, w0
   4973c:	sub	w8, w8, w6
   49740:	ands	w11, w0, w2
   49744:	sub	w0, w0, #0x1
   49748:	cset	w7, ne  // ne = any
   4974c:	ands	w5, w0, w2
   49750:	cset	w9, ne  // ne = any
   49754:	lsr	w0, w2, w8
   49758:	cmp	w4, #0x3
   4975c:	b.eq	4984c <ufromfpxf@@GLIBC_2.25+0x214>  // b.none
   49760:	b.gt	49818 <ufromfpxf@@GLIBC_2.25+0x1e0>
   49764:	cbz	w4, 496fc <ufromfpxf@@GLIBC_2.25+0xc4>
   49768:	cmp	w4, w10
   4976c:	b.ne	496b0 <ufromfpxf@@GLIBC_2.25+0x78>  // b.any
   49770:	tbz	w3, #31, 496b4 <ufromfpxf@@GLIBC_2.25+0x7c>
   49774:	cmp	w7, #0x0
   49778:	ccmp	w9, #0x0, #0x0, eq  // eq = none
   4977c:	cinc	x0, x0, ne  // ne = any
   49780:	cbz	x0, 496d4 <ufromfpxf@@GLIBC_2.25+0x9c>
   49784:	ldp	x19, x20, [sp, #16]
   49788:	mov	w0, #0x1                   	// #1
   4978c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   49790:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   49794:	ldr	x1, [x1, #3976]
   49798:	mrs	x2, tpidr_el0
   4979c:	mov	w3, #0x21                  	// #33
   497a0:	mov	x0, #0x0                   	// #0
   497a4:	str	w3, [x2, x1]
   497a8:	ldp	x29, x30, [sp], #32
   497ac:	ret
   497b0:	cmp	w6, #0x3f
   497b4:	cset	w1, eq  // eq = none
   497b8:	cmp	x0, #0x0
   497bc:	csel	w1, w1, wzr, eq  // eq = none
   497c0:	b	496d0 <ufromfpxf@@GLIBC_2.25+0x98>
   497c4:	mov	w9, #0x1                   	// #1
   497c8:	mov	x0, #0x0                   	// #0
   497cc:	b	496a0 <ufromfpxf@@GLIBC_2.25+0x68>
   497d0:	mov	w0, #0x1                   	// #1
   497d4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   497d8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   497dc:	ldr	x0, [x0, #3976]
   497e0:	mrs	x1, tpidr_el0
   497e4:	mov	w2, #0x21                  	// #33
   497e8:	cmp	w19, #0x3f
   497ec:	str	w2, [x1, x0]
   497f0:	b.hi	49840 <ufromfpxf@@GLIBC_2.25+0x208>  // b.pmore
   497f4:	mov	x0, #0x1                   	// #1
   497f8:	lsl	x0, x0, x20
   497fc:	sub	x0, x0, #0x1
   49800:	ldp	x19, x20, [sp, #16]
   49804:	ldp	x29, x30, [sp], #32
   49808:	ret
   4980c:	ldp	x19, x20, [sp, #16]
   49810:	ldp	x29, x30, [sp], #32
   49814:	ret
   49818:	cmp	w4, #0x4
   4981c:	b.ne	496b0 <ufromfpxf@@GLIBC_2.25+0x78>  // b.any
   49820:	cbz	w11, 4985c <ufromfpxf@@GLIBC_2.25+0x224>
   49824:	and	w2, w0, #0x1
   49828:	mov	w7, w10
   4982c:	orr	w5, w2, w5
   49830:	cmp	w5, #0x0
   49834:	cinc	x0, x0, ne  // ne = any
   49838:	tbz	w3, #31, 496b4 <ufromfpxf@@GLIBC_2.25+0x7c>
   4983c:	b	49780 <ufromfpxf@@GLIBC_2.25+0x148>
   49840:	mov	x0, #0xffffffffffffffff    	// #-1
   49844:	ldp	x19, x20, [sp, #16]
   49848:	b	496f0 <ufromfpxf@@GLIBC_2.25+0xb8>
   4984c:	and	x2, x7, #0xff
   49850:	add	x0, x0, x2
   49854:	tbz	w3, #31, 496b4 <ufromfpxf@@GLIBC_2.25+0x7c>
   49858:	b	49780 <ufromfpxf@@GLIBC_2.25+0x148>
   4985c:	mov	w7, #0x0                   	// #0
   49860:	tbz	w3, #31, 496b4 <ufromfpxf@@GLIBC_2.25+0x7c>
   49864:	b	49780 <ufromfpxf@@GLIBC_2.25+0x148>

0000000000049868 <cargf@@GLIBC_2.17>:
   49868:	fmov	s2, s0
   4986c:	fmov	s0, s1
   49870:	fmov	s1, s2
   49874:	b	11760 <atan2f@@GLIBC_2.17>

0000000000049878 <conjf@@GLIBC_2.17>:
   49878:	fneg	s1, s1
   4987c:	ret

0000000000049880 <cimagf@@GLIBC_2.17>:
   49880:	fmov	s0, s1
   49884:	ret

0000000000049888 <crealf@@GLIBC_2.17>:
   49888:	ret
   4988c:	nop

0000000000049890 <cabsf@@GLIBC_2.17>:
   49890:	b	11a10 <hypotf@@GLIBC_2.17>
   49894:	nop

0000000000049898 <cacosf@@GLIBC_2.17>:
   49898:	fmov	s2, s0
   4989c:	fabs	s0, s0
   498a0:	stp	x29, x30, [sp, #-16]!
   498a4:	mov	x29, sp
   498a8:	fcmp	s0, s0
   498ac:	b.vs	4998c <cacosf@@GLIBC_2.17+0xf4>
   498b0:	mov	w0, #0x7f7fffff            	// #2139095039
   498b4:	fmov	s3, w0
   498b8:	mov	w1, #0x1                   	// #1
   498bc:	fcmp	s0, s3
   498c0:	b.le	4990c <cacosf@@GLIBC_2.17+0x74>
   498c4:	fabs	s0, s1
   498c8:	mov	w0, #0x7f7fffff            	// #2139095039
   498cc:	fmov	s3, w0
   498d0:	fcmp	s0, s3
   498d4:	fccmp	s0, s0, #0x1, le
   498d8:	b.vc	49940 <cacosf@@GLIBC_2.17+0xa8>
   498dc:	fmov	s0, s2
   498e0:	bl	49e50 <casinf@@GLIBC_2.17>
   498e4:	fneg	s1, s1
   498e8:	mov	w0, #0xfdb                 	// #4059
   498ec:	movi	v3.2s, #0x0
   498f0:	movk	w0, #0x3fc9, lsl #16
   498f4:	fmov	s2, w0
   498f8:	ldp	x29, x30, [sp], #16
   498fc:	fsub	s0, s2, s0
   49900:	fcmp	s0, s3
   49904:	fcsel	s0, s0, s3, ne  // ne = any
   49908:	ret
   4990c:	movi	v3.2s, #0x80, lsl #16
   49910:	mov	w1, #0x4                   	// #4
   49914:	fcmpe	s0, s3
   49918:	b.ge	498c4 <cacosf@@GLIBC_2.17+0x2c>  // b.tcont
   4991c:	fcmp	s2, #0.0
   49920:	fabs	s0, s1
   49924:	mov	w0, #0x7f7fffff            	// #2139095039
   49928:	fmov	s3, w0
   4992c:	cset	w1, ne  // ne = any
   49930:	fcmp	s0, s3
   49934:	add	w1, w1, #0x2
   49938:	fccmp	s0, s0, #0x1, le
   4993c:	b.vs	498dc <cacosf@@GLIBC_2.17+0x44>
   49940:	movi	v3.2s, #0x80, lsl #16
   49944:	fcmpe	s0, s3
   49948:	b.ge	49954 <cacosf@@GLIBC_2.17+0xbc>  // b.tcont
   4994c:	fcmp	s1, #0.0
   49950:	b.eq	49980 <cacosf@@GLIBC_2.17+0xe8>  // b.none
   49954:	cmp	w1, #0x1
   49958:	b.le	498dc <cacosf@@GLIBC_2.17+0x44>
   4995c:	fneg	s0, s1
   49960:	fmov	s1, s2
   49964:	mov	w0, #0x1                   	// #1
   49968:	bl	4a3d0 <casinhf@@GLIBC_2.17+0x138>
   4996c:	fmov	s2, s0
   49970:	ldp	x29, x30, [sp], #16
   49974:	fmov	s0, s1
   49978:	fmov	s1, s2
   4997c:	ret
   49980:	cmp	w1, #0x2
   49984:	b.gt	4995c <cacosf@@GLIBC_2.17+0xc4>
   49988:	b	498dc <cacosf@@GLIBC_2.17+0x44>
   4998c:	mov	w1, #0x0                   	// #0
   49990:	b	498c4 <cacosf@@GLIBC_2.17+0x2c>
   49994:	nop

0000000000049998 <cacoshf@@GLIBC_2.17>:
   49998:	stp	x29, x30, [sp, #-32]!
   4999c:	mov	x29, sp
   499a0:	str	d8, [sp, #16]
   499a4:	fmov	s8, s1
   499a8:	fabs	s1, s0
   499ac:	fabs	s3, s8
   499b0:	fcmp	s1, s1
   499b4:	b.vs	49a88 <cacoshf@@GLIBC_2.17+0xf0>
   499b8:	fmov	s2, s0
   499bc:	mov	w0, #0x7f7fffff            	// #2139095039
   499c0:	fmov	s0, w0
   499c4:	fcmp	s1, s0
   499c8:	b.le	49a00 <cacoshf@@GLIBC_2.17+0x68>
   499cc:	fcmp	s3, s3
   499d0:	b.vs	49ab0 <cacoshf@@GLIBC_2.17+0x118>
   499d4:	fcmp	s3, s0
   499d8:	b.le	49acc <cacoshf@@GLIBC_2.17+0x134>
   499dc:	fcmpe	s2, #0.0
   499e0:	mov	w0, #0xcbe4                	// #52196
   499e4:	mov	w1, #0xfdb                 	// #4059
   499e8:	movk	w0, #0x4016, lsl #16
   499ec:	movk	w1, #0x3f49, lsl #16
   499f0:	fmov	s2, w0
   499f4:	fmov	s1, w1
   499f8:	fcsel	s2, s2, s1, mi  // mi = first
   499fc:	b	49a74 <cacoshf@@GLIBC_2.17+0xdc>
   49a00:	movi	v4.2s, #0x80, lsl #16
   49a04:	fcmpe	s1, s4
   49a08:	b.ge	49a58 <cacoshf@@GLIBC_2.17+0xc0>  // b.tcont
   49a0c:	fcmp	s2, #0.0
   49a10:	b.ne	49a58 <cacoshf@@GLIBC_2.17+0xc0>  // b.any
   49a14:	fcmp	s3, s3
   49a18:	b.vs	49b28 <cacoshf@@GLIBC_2.17+0x190>
   49a1c:	fcmp	s3, s0
   49a20:	b.gt	49a68 <cacoshf@@GLIBC_2.17+0xd0>
   49a24:	fcmpe	s3, s4
   49a28:	b.lt	49afc <cacoshf@@GLIBC_2.17+0x164>  // b.tstop
   49a2c:	nop
   49a30:	fneg	s0, s8
   49a34:	fmov	s1, s2
   49a38:	mov	w0, #0x1                   	// #1
   49a3c:	bl	4a3d0 <casinhf@@GLIBC_2.17+0x138>
   49a40:	fmov	w0, s8
   49a44:	tbz	w0, #31, 49ac4 <cacoshf@@GLIBC_2.17+0x12c>
   49a48:	fneg	s1, s1
   49a4c:	ldr	d8, [sp, #16]
   49a50:	ldp	x29, x30, [sp], #32
   49a54:	ret
   49a58:	fcmp	s3, s3
   49a5c:	b.vs	49aa0 <cacoshf@@GLIBC_2.17+0x108>
   49a60:	fcmp	s3, s0
   49a64:	b.le	49a30 <cacoshf@@GLIBC_2.17+0x98>
   49a68:	mov	w0, #0xfdb                 	// #4059
   49a6c:	movk	w0, #0x3fc9, lsl #16
   49a70:	fmov	s2, w0
   49a74:	movi	v1.2s, #0x80, lsl #24
   49a78:	mov	w0, #0x7f800000            	// #2139095040
   49a7c:	fmov	s0, w0
   49a80:	bsl	v1.8b, v8.8b, v2.8b
   49a84:	b	49a4c <cacoshf@@GLIBC_2.17+0xb4>
   49a88:	fcmp	s3, s3
   49a8c:	b.vs	49aa0 <cacoshf@@GLIBC_2.17+0x108>
   49a90:	mov	w0, #0x7f7fffff            	// #2139095039
   49a94:	fmov	s0, w0
   49a98:	fcmp	s3, s0
   49a9c:	b.gt	49ab0 <cacoshf@@GLIBC_2.17+0x118>
   49aa0:	mov	w0, #0x7fc00000            	// #2143289344
   49aa4:	fmov	s0, w0
   49aa8:	fmov	s1, w0
   49aac:	b	49a4c <cacoshf@@GLIBC_2.17+0xb4>
   49ab0:	mov	w1, #0x7f800000            	// #2139095040
   49ab4:	mov	w0, #0x7fc00000            	// #2143289344
   49ab8:	fmov	s0, w1
   49abc:	fmov	s1, w0
   49ac0:	b	49a4c <cacoshf@@GLIBC_2.17+0xb4>
   49ac4:	fneg	s0, s0
   49ac8:	b	49a4c <cacoshf@@GLIBC_2.17+0xb4>
   49acc:	fmov	w0, s2
   49ad0:	movi	v3.2s, #0x0
   49ad4:	movi	v1.2s, #0x80, lsl #24
   49ad8:	cmp	w0, #0x0
   49adc:	mov	w0, #0xfdb                 	// #4059
   49ae0:	movk	w0, #0x4049, lsl #16
   49ae4:	fmov	s2, w0
   49ae8:	mov	w0, #0x7f800000            	// #2139095040
   49aec:	fmov	s0, w0
   49af0:	fcsel	s2, s2, s3, lt  // lt = tstop
   49af4:	bsl	v1.8b, v8.8b, v2.8b
   49af8:	b	49a4c <cacoshf@@GLIBC_2.17+0xb4>
   49afc:	fcmp	s8, #0.0
   49b00:	b.ne	49a30 <cacoshf@@GLIBC_2.17+0x98>  // b.any
   49b04:	movi	v1.2s, #0x80, lsl #24
   49b08:	mov	w0, #0xfdb                 	// #4059
   49b0c:	movk	w0, #0x3fc9, lsl #16
   49b10:	fmov	s2, w0
   49b14:	movi	v0.2s, #0x0
   49b18:	bsl	v1.8b, v8.8b, v2.8b
   49b1c:	ldr	d8, [sp, #16]
   49b20:	ldp	x29, x30, [sp], #32
   49b24:	ret
   49b28:	mov	w0, #0xfdb                 	// #4059
   49b2c:	mov	w1, #0x7fc00000            	// #2143289344
   49b30:	movk	w0, #0x3fc9, lsl #16
   49b34:	fmov	s0, w1
   49b38:	fmov	s1, w0
   49b3c:	b	49a4c <cacoshf@@GLIBC_2.17+0xb4>

0000000000049b40 <ccosf@@GLIBC_2.17>:
   49b40:	fmov	s2, s1
   49b44:	fmov	s1, s0
   49b48:	fneg	s0, s2
   49b4c:	b	49b50 <ccoshf@@GLIBC_2.17>

0000000000049b50 <ccoshf@@GLIBC_2.17>:
   49b50:	stp	x29, x30, [sp, #-80]!
   49b54:	fabs	s2, s1
   49b58:	mov	x29, sp
   49b5c:	stp	x19, x20, [sp, #16]
   49b60:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   49b64:	stp	d8, d9, [sp, #32]
   49b68:	fmov	s8, s0
   49b6c:	fmov	s0, s1
   49b70:	ldr	x0, [x19, #4032]
   49b74:	ldr	x1, [x0]
   49b78:	str	x1, [sp, #72]
   49b7c:	mov	x1, #0x0                   	// #0
   49b80:	str	d10, [sp, #48]
   49b84:	fabs	s10, s8
   49b88:	fcmp	s10, s10
   49b8c:	b.vs	49dfc <ccoshf@@GLIBC_2.17+0x2ac>
   49b90:	fmov	s3, s1
   49b94:	mov	w0, #0x7f7fffff            	// #2139095039
   49b98:	fmov	s1, w0
   49b9c:	fcmp	s10, s1
   49ba0:	b.le	49c0c <ccoshf@@GLIBC_2.17+0xbc>
   49ba4:	fcmp	s2, s2
   49ba8:	b.vs	49e3c <ccoshf@@GLIBC_2.17+0x2ec>
   49bac:	fcmp	s2, s1
   49bb0:	b.gt	49e3c <ccoshf@@GLIBC_2.17+0x2ec>
   49bb4:	movi	v1.2s, #0x80, lsl #16
   49bb8:	fcmpe	s2, s1
   49bbc:	b.lt	49c90 <ccoshf@@GLIBC_2.17+0x140>  // b.tstop
   49bc0:	movi	v1.2s, #0x80, lsl #16
   49bc4:	fcmpe	s2, s1
   49bc8:	b.le	49e20 <ccoshf@@GLIBC_2.17+0x2d0>
   49bcc:	add	x0, sp, #0x40
   49bd0:	add	x1, sp, #0x44
   49bd4:	bl	483f0 <sincosf@@GLIBC_2.17>
   49bd8:	movi	v2.2s, #0x80, lsl #24
   49bdc:	mov	w0, #0x7f800000            	// #2139095040
   49be0:	ldp	s3, s1, [sp, #64]
   49be4:	fmov	s0, w0
   49be8:	bit	v0.8b, v1.8b, v2.8b
   49bec:	movi	v2.2s, #0x80, lsl #24
   49bf0:	mov	w0, #0x7f800000            	// #2139095040
   49bf4:	fmov	s1, w0
   49bf8:	and	v8.8b, v8.8b, v2.8b
   49bfc:	bit	v1.8b, v3.8b, v2.8b
   49c00:	eor	v8.8b, v8.8b, v1.8b
   49c04:	fmov	s1, s8
   49c08:	b	49c40 <ccoshf@@GLIBC_2.17+0xf0>
   49c0c:	movi	v3.2s, #0x80, lsl #16
   49c10:	fcmpe	s10, s3
   49c14:	b.ge	49c68 <ccoshf@@GLIBC_2.17+0x118>  // b.tcont
   49c18:	fcmp	s8, #0.0
   49c1c:	b.eq	49cb4 <ccoshf@@GLIBC_2.17+0x164>  // b.none
   49c20:	fcmp	s2, s2
   49c24:	b.vs	49c30 <ccoshf@@GLIBC_2.17+0xe0>
   49c28:	fcmp	s2, s1
   49c2c:	b.le	49ccc <ccoshf@@GLIBC_2.17+0x17c>
   49c30:	mov	w0, #0x7fc00000            	// #2143289344
   49c34:	fmov	s8, w0
   49c38:	fsub	s0, s0, s0
   49c3c:	fmov	s1, s8
   49c40:	ldr	x19, [x19, #4032]
   49c44:	ldr	x1, [sp, #72]
   49c48:	ldr	x0, [x19]
   49c4c:	eor	x0, x1, x0
   49c50:	cbnz	x0, 49e4c <ccoshf@@GLIBC_2.17+0x2fc>
   49c54:	ldp	x19, x20, [sp, #16]
   49c58:	ldp	d8, d9, [sp, #32]
   49c5c:	ldr	d10, [sp, #48]
   49c60:	ldp	x29, x30, [sp], #80
   49c64:	ret
   49c68:	fcmp	s2, s2
   49c6c:	b.vs	49c78 <ccoshf@@GLIBC_2.17+0x128>
   49c70:	fcmp	s2, s1
   49c74:	b.le	49ccc <ccoshf@@GLIBC_2.17+0x17c>
   49c78:	fcmp	s8, #0.0
   49c7c:	movi	v1.2s, #0x0
   49c80:	mov	w0, #0x7fc00000            	// #2143289344
   49c84:	fmov	s3, w0
   49c88:	fcsel	s8, s3, s1, ne  // ne = any
   49c8c:	b	49c38 <ccoshf@@GLIBC_2.17+0xe8>
   49c90:	fcmp	s0, #0.0
   49c94:	b.ne	49bc0 <ccoshf@@GLIBC_2.17+0x70>  // b.any
   49c98:	movi	v1.2s, #0x80, lsl #24
   49c9c:	mov	w0, #0x7f800000            	// #2139095040
   49ca0:	and	v3.8b, v8.8b, v1.8b
   49ca4:	eor	v2.8b, v3.8b, v0.8b
   49ca8:	fmov	s0, w0
   49cac:	fmov	s1, s2
   49cb0:	b	49c40 <ccoshf@@GLIBC_2.17+0xf0>
   49cb4:	fcmp	s2, s2
   49cb8:	b.vs	49cc4 <ccoshf@@GLIBC_2.17+0x174>
   49cbc:	fcmp	s2, s1
   49cc0:	b.le	49ccc <ccoshf@@GLIBC_2.17+0x17c>
   49cc4:	movi	v8.2s, #0x0
   49cc8:	b	49c38 <ccoshf@@GLIBC_2.17+0xe8>
   49ccc:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   49cd0:	movi	v4.2s, #0x80, lsl #16
   49cd4:	mov	x0, #0xc00000000000        	// #211106232532992
   49cd8:	ldr	d1, [x1, #560]
   49cdc:	movk	x0, #0x405f, lsl #48
   49ce0:	fmov	d3, x0
   49ce4:	fcmpe	s2, s4
   49ce8:	fmul	d1, d1, d3
   49cec:	fcvtzs	w20, d1
   49cf0:	b.le	49e14 <ccoshf@@GLIBC_2.17+0x2c4>
   49cf4:	add	x1, sp, #0x44
   49cf8:	add	x0, sp, #0x40
   49cfc:	bl	483f0 <sincosf@@GLIBC_2.17>
   49d00:	scvtf	s9, w20
   49d04:	fcmpe	s9, s10
   49d08:	b.pl	49d94 <ccoshf@@GLIBC_2.17+0x244>  // b.nfrst
   49d0c:	fmov	s0, s9
   49d10:	bl	42d58 <__expf_finite@GLIBC_2.17>
   49d14:	fmov	w0, s8
   49d18:	fmov	s8, s0
   49d1c:	ldr	s2, [sp, #64]
   49d20:	tbz	w0, #31, 49d28 <ccoshf@@GLIBC_2.17+0x1d8>
   49d24:	fneg	s2, s2
   49d28:	fmov	s1, #5.000000000000000000e-01
   49d2c:	fsub	s0, s10, s9
   49d30:	ldr	s3, [sp, #68]
   49d34:	fmul	s1, s8, s1
   49d38:	fcmpe	s9, s0
   49d3c:	fmul	s2, s1, s2
   49d40:	fmul	s1, s1, s3
   49d44:	stp	s2, s1, [sp, #64]
   49d48:	b.mi	49dc8 <ccoshf@@GLIBC_2.17+0x278>  // b.first
   49d4c:	bl	42d58 <__expf_finite@GLIBC_2.17>
   49d50:	ldp	s2, s8, [sp, #64]
   49d54:	fmul	s2, s0, s2
   49d58:	fmul	s8, s0, s8
   49d5c:	fmov	s1, s2
   49d60:	fmov	s0, s8
   49d64:	nop
   49d68:	fabs	s4, s8
   49d6c:	movi	v3.2s, #0x80, lsl #16
   49d70:	fcmpe	s4, s3
   49d74:	b.pl	49d7c <ccoshf@@GLIBC_2.17+0x22c>  // b.nfrst
   49d78:	fmul	s8, s8, s8
   49d7c:	fabs	s4, s2
   49d80:	movi	v3.2s, #0x80, lsl #16
   49d84:	fcmpe	s4, s3
   49d88:	b.pl	49c40 <ccoshf@@GLIBC_2.17+0xf0>  // b.nfrst
   49d8c:	fmul	s2, s2, s2
   49d90:	b	49c40 <ccoshf@@GLIBC_2.17+0xf0>
   49d94:	fmov	s0, s8
   49d98:	bl	42c28 <__coshf_finite@GLIBC_2.17>
   49d9c:	fmov	s1, s0
   49da0:	ldr	s2, [sp, #68]
   49da4:	fmov	s0, s8
   49da8:	fmul	s8, s1, s2
   49dac:	bl	45940 <__sinhf_finite@GLIBC_2.17>
   49db0:	fmov	s2, s0
   49db4:	ldr	s1, [sp, #64]
   49db8:	fmov	s0, s8
   49dbc:	fmul	s2, s2, s1
   49dc0:	fmov	s1, s2
   49dc4:	b	49d68 <ccoshf@@GLIBC_2.17+0x218>
   49dc8:	fsub	s0, s0, s9
   49dcc:	fmul	s2, s2, s8
   49dd0:	fmul	s1, s1, s8
   49dd4:	fcmpe	s9, s0
   49dd8:	stp	s2, s1, [sp, #64]
   49ddc:	b.pl	49d4c <ccoshf@@GLIBC_2.17+0x1fc>  // b.nfrst
   49de0:	mov	w0, #0x7f7fffff            	// #2139095039
   49de4:	fmov	s0, w0
   49de8:	fmul	s8, s1, s0
   49dec:	fmul	s2, s2, s0
   49df0:	fmov	s0, s8
   49df4:	fmov	s1, s2
   49df8:	b	49d68 <ccoshf@@GLIBC_2.17+0x218>
   49dfc:	fcmp	s0, #0.0
   49e00:	b.ne	49e2c <ccoshf@@GLIBC_2.17+0x2dc>  // b.any
   49e04:	fmov	s1, s0
   49e08:	mov	w0, #0x7fc00000            	// #2143289344
   49e0c:	fmov	s0, w0
   49e10:	b	49c40 <ccoshf@@GLIBC_2.17+0xf0>
   49e14:	fmov	s1, #1.000000000000000000e+00
   49e18:	stp	s0, s1, [sp, #64]
   49e1c:	b	49d00 <ccoshf@@GLIBC_2.17+0x1b0>
   49e20:	mov	w0, #0x7f800000            	// #2139095040
   49e24:	fmov	s0, w0
   49e28:	b	49bec <ccoshf@@GLIBC_2.17+0x9c>
   49e2c:	mov	w0, #0x7fc00000            	// #2143289344
   49e30:	fmov	s0, w0
   49e34:	fmov	s1, w0
   49e38:	b	49c40 <ccoshf@@GLIBC_2.17+0xf0>
   49e3c:	fsub	s1, s0, s0
   49e40:	mov	w0, #0x7f800000            	// #2139095040
   49e44:	fmov	s0, w0
   49e48:	b	49c40 <ccoshf@@GLIBC_2.17+0xf0>
   49e4c:	bl	ba70 <__stack_chk_fail@plt>

0000000000049e50 <casinf@@GLIBC_2.17>:
   49e50:	fcmp	s0, s0
   49e54:	fmov	s2, s0
   49e58:	b.vs	49e8c <casinf@@GLIBC_2.17+0x3c>
   49e5c:	fcmp	s1, s1
   49e60:	b.vs	49e8c <casinf@@GLIBC_2.17+0x3c>
   49e64:	fneg	s0, s1
   49e68:	fmov	s1, s2
   49e6c:	stp	x29, x30, [sp, #-16]!
   49e70:	mov	x29, sp
   49e74:	bl	4a298 <casinhf@@GLIBC_2.17>
   49e78:	fmov	s2, s1
   49e7c:	ldp	x29, x30, [sp], #16
   49e80:	fneg	s1, s0
   49e84:	fmov	s0, s2
   49e88:	ret
   49e8c:	fcmp	s2, #0.0
   49e90:	fmov	s0, s2
   49e94:	b.eq	49ed0 <casinf@@GLIBC_2.17+0x80>  // b.none
   49e98:	fabs	s2, s2
   49e9c:	mov	w0, #0x7f7fffff            	// #2139095039
   49ea0:	fmov	s0, w0
   49ea4:	fcmp	s2, s0
   49ea8:	b.gt	49eb8 <casinf@@GLIBC_2.17+0x68>
   49eac:	fabs	s2, s1
   49eb0:	fcmp	s2, s0
   49eb4:	b.le	49ed4 <casinf@@GLIBC_2.17+0x84>
   49eb8:	movi	v3.2s, #0x80, lsl #24
   49ebc:	mov	w0, #0x7f800000            	// #2139095040
   49ec0:	fmov	s2, w0
   49ec4:	mov	w0, #0x7fc00000            	// #2143289344
   49ec8:	fmov	s0, w0
   49ecc:	bif	v1.8b, v2.8b, v3.8b
   49ed0:	ret
   49ed4:	mov	w0, #0x7fc00000            	// #2143289344
   49ed8:	fmov	s1, w0
   49edc:	fmov	s0, w0
   49ee0:	ret
   49ee4:	nop

0000000000049ee8 <csinf@@GLIBC_2.17>:
   49ee8:	stp	x29, x30, [sp, #-96]!
   49eec:	fmov	s2, s0
   49ef0:	fabs	s0, s0
   49ef4:	mov	x29, sp
   49ef8:	stp	x19, x20, [sp, #16]
   49efc:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   49f00:	ldr	x0, [x20, #4032]
   49f04:	fcmp	s0, s0
   49f08:	stp	d10, d11, [sp, #64]
   49f0c:	fmov	s11, s1
   49f10:	ldr	x1, [x0]
   49f14:	str	x1, [sp, #88]
   49f18:	mov	x1, #0x0                   	// #0
   49f1c:	fabs	s10, s1
   49f20:	b.vs	4a1cc <csinf@@GLIBC_2.17+0x2e4>
   49f24:	fmov	w0, s2
   49f28:	str	x21, [sp, #32]
   49f2c:	and	w21, w0, #0x80000000
   49f30:	mov	w0, #0x7f7fffff            	// #2139095039
   49f34:	fmov	s1, w0
   49f38:	fcmp	s0, s1
   49f3c:	b.le	49f78 <csinf@@GLIBC_2.17+0x90>
   49f40:	fcmp	s10, s10
   49f44:	b.vs	4a244 <csinf@@GLIBC_2.17+0x35c>
   49f48:	fcmp	s10, s1
   49f4c:	b.gt	4a174 <csinf@@GLIBC_2.17+0x28c>
   49f50:	movi	v1.2s, #0x80, lsl #16
   49f54:	fcmpe	s10, s1
   49f58:	b.lt	4a1bc <csinf@@GLIBC_2.17+0x2d4>  // b.tstop
   49f5c:	ldr	x21, [sp, #32]
   49f60:	mov	w0, #0x1                   	// #1
   49f64:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   49f68:	mov	w0, #0x7fc00000            	// #2143289344
   49f6c:	fmov	s0, w0
   49f70:	fmov	s1, w0
   49f74:	b	4a110 <csinf@@GLIBC_2.17+0x228>
   49f78:	movi	v3.2s, #0x80, lsl #16
   49f7c:	stp	d8, d9, [sp, #48]
   49f80:	fcmpe	s0, s3
   49f84:	b.ge	49fc0 <csinf@@GLIBC_2.17+0xd8>  // b.tcont
   49f88:	fcmp	s2, #0.0
   49f8c:	b.ne	49fc0 <csinf@@GLIBC_2.17+0xd8>  // b.any
   49f90:	fcmp	s10, s10
   49f94:	b.vs	4a210 <csinf@@GLIBC_2.17+0x328>
   49f98:	fcmp	s10, s1
   49f9c:	b.le	4a034 <csinf@@GLIBC_2.17+0x14c>
   49fa0:	movi	v0.2s, #0x80, lsl #24
   49fa4:	movi	v2.2s, #0x0
   49fa8:	cmp	w21, #0x0
   49fac:	fmov	s1, s11
   49fb0:	ldr	x21, [sp, #32]
   49fb4:	fcsel	s0, s0, s2, ne  // ne = any
   49fb8:	ldp	d8, d9, [sp, #48]
   49fbc:	b	4a110 <csinf@@GLIBC_2.17+0x228>
   49fc0:	fcmp	s10, s10
   49fc4:	b.vs	4a264 <csinf@@GLIBC_2.17+0x37c>
   49fc8:	fcmp	s10, s1
   49fcc:	b.le	4a034 <csinf@@GLIBC_2.17+0x14c>
   49fd0:	movi	v1.2s, #0x80, lsl #16
   49fd4:	fcmpe	s0, s1
   49fd8:	b.le	4a258 <csinf@@GLIBC_2.17+0x370>
   49fdc:	add	x0, sp, #0x50
   49fe0:	add	x1, sp, #0x54
   49fe4:	bl	483f0 <sincosf@@GLIBC_2.17>
   49fe8:	movi	v2.2s, #0x80, lsl #24
   49fec:	mov	w0, #0x7f800000            	// #2139095040
   49ff0:	ldp	s0, s1, [sp, #80]
   49ff4:	fmov	s3, w0
   49ff8:	bit	v3.8b, v1.8b, v2.8b
   49ffc:	movi	v1.2s, #0x80, lsl #24
   4a000:	mov	w0, #0x7f800000            	// #2139095040
   4a004:	fmov	s2, w0
   4a008:	bit	v2.8b, v0.8b, v1.8b
   4a00c:	cbnz	w21, 4a234 <csinf@@GLIBC_2.17+0x34c>
   4a010:	fmov	s0, s2
   4a014:	fmov	s1, s3
   4a018:	fmov	w0, s11
   4a01c:	tbz	w0, #31, 4a134 <csinf@@GLIBC_2.17+0x24c>
   4a020:	fmov	s0, s2
   4a024:	fneg	s1, s3
   4a028:	ldr	x21, [sp, #32]
   4a02c:	ldp	d8, d9, [sp, #48]
   4a030:	b	4a110 <csinf@@GLIBC_2.17+0x228>
   4a034:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4a038:	movi	v3.2s, #0x80, lsl #16
   4a03c:	mov	x0, #0xc00000000000        	// #211106232532992
   4a040:	ldr	d2, [x1, #560]
   4a044:	movk	x0, #0x405f, lsl #48
   4a048:	fmov	d1, x0
   4a04c:	fcmpe	s0, s3
   4a050:	fmul	d2, d2, d1
   4a054:	fcvtzs	w19, d2
   4a058:	b.le	4a204 <csinf@@GLIBC_2.17+0x31c>
   4a05c:	add	x1, sp, #0x54
   4a060:	add	x0, sp, #0x50
   4a064:	bl	483f0 <sincosf@@GLIBC_2.17>
   4a068:	cbz	w21, 4a078 <csinf@@GLIBC_2.17+0x190>
   4a06c:	ldr	s0, [sp, #80]
   4a070:	fneg	s0, s0
   4a074:	str	s0, [sp, #80]
   4a078:	scvtf	s9, w19
   4a07c:	fcmpe	s9, s10
   4a080:	b.pl	4a140 <csinf@@GLIBC_2.17+0x258>  // b.nfrst
   4a084:	fmov	s0, s9
   4a088:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4a08c:	fmov	w0, s11
   4a090:	fmov	s1, s0
   4a094:	ldr	s2, [sp, #84]
   4a098:	tbz	w0, #31, 4a0a0 <csinf@@GLIBC_2.17+0x1b8>
   4a09c:	fneg	s2, s2
   4a0a0:	fmov	s8, #5.000000000000000000e-01
   4a0a4:	fsub	s0, s10, s9
   4a0a8:	ldr	s3, [sp, #80]
   4a0ac:	fmul	s8, s1, s8
   4a0b0:	fcmpe	s9, s0
   4a0b4:	fmul	s2, s8, s2
   4a0b8:	fmul	s8, s8, s3
   4a0bc:	stp	s8, s2, [sp, #80]
   4a0c0:	b.mi	4a188 <csinf@@GLIBC_2.17+0x2a0>  // b.first
   4a0c4:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4a0c8:	ldp	s8, s2, [sp, #80]
   4a0cc:	fmul	s2, s0, s2
   4a0d0:	fmul	s8, s0, s8
   4a0d4:	fmov	s1, s2
   4a0d8:	fmov	s0, s8
   4a0dc:	nop
   4a0e0:	fabs	s4, s8
   4a0e4:	movi	v3.2s, #0x80, lsl #16
   4a0e8:	fcmpe	s4, s3
   4a0ec:	b.pl	4a0f4 <csinf@@GLIBC_2.17+0x20c>  // b.nfrst
   4a0f0:	fmul	s8, s8, s8
   4a0f4:	fabs	s4, s2
   4a0f8:	movi	v3.2s, #0x80, lsl #16
   4a0fc:	fcmpe	s4, s3
   4a100:	b.pl	4a134 <csinf@@GLIBC_2.17+0x24c>  // b.nfrst
   4a104:	fmul	s2, s2, s2
   4a108:	ldr	x21, [sp, #32]
   4a10c:	ldp	d8, d9, [sp, #48]
   4a110:	ldr	x20, [x20, #4032]
   4a114:	ldr	x1, [sp, #88]
   4a118:	ldr	x0, [x20]
   4a11c:	eor	x0, x1, x0
   4a120:	cbnz	x0, 4a27c <csinf@@GLIBC_2.17+0x394>
   4a124:	ldp	x19, x20, [sp, #16]
   4a128:	ldp	d10, d11, [sp, #64]
   4a12c:	ldp	x29, x30, [sp], #96
   4a130:	ret
   4a134:	ldr	x21, [sp, #32]
   4a138:	ldp	d8, d9, [sp, #48]
   4a13c:	b	4a110 <csinf@@GLIBC_2.17+0x228>
   4a140:	fmov	s0, s11
   4a144:	bl	42c28 <__coshf_finite@GLIBC_2.17>
   4a148:	fmov	s8, s0
   4a14c:	ldr	s1, [sp, #80]
   4a150:	fmov	s0, s11
   4a154:	fmul	s8, s8, s1
   4a158:	bl	45940 <__sinhf_finite@GLIBC_2.17>
   4a15c:	fmov	s2, s0
   4a160:	ldr	s1, [sp, #84]
   4a164:	fmov	s0, s8
   4a168:	fmul	s2, s2, s1
   4a16c:	fmov	s1, s2
   4a170:	b	4a0e0 <csinf@@GLIBC_2.17+0x1f8>
   4a174:	ldr	x21, [sp, #32]
   4a178:	mov	w0, #0x7f800000            	// #2139095040
   4a17c:	fsub	s0, s0, s0
   4a180:	fmov	s1, w0
   4a184:	b	4a110 <csinf@@GLIBC_2.17+0x228>
   4a188:	fsub	s0, s0, s9
   4a18c:	fmul	s8, s8, s1
   4a190:	fmul	s2, s2, s1
   4a194:	fcmpe	s9, s0
   4a198:	stp	s8, s2, [sp, #80]
   4a19c:	b.pl	4a0c4 <csinf@@GLIBC_2.17+0x1dc>  // b.nfrst
   4a1a0:	mov	w0, #0x7f7fffff            	// #2139095039
   4a1a4:	fmov	s0, w0
   4a1a8:	fmul	s2, s2, s0
   4a1ac:	fmul	s8, s8, s0
   4a1b0:	fmov	s1, s2
   4a1b4:	fmov	s0, s8
   4a1b8:	b	4a0e0 <csinf@@GLIBC_2.17+0x1f8>
   4a1bc:	fcmp	s11, #0.0
   4a1c0:	b.ne	49f5c <csinf@@GLIBC_2.17+0x74>  // b.any
   4a1c4:	ldr	x21, [sp, #32]
   4a1c8:	b	4a1f8 <csinf@@GLIBC_2.17+0x310>
   4a1cc:	fcmp	s10, s10
   4a1d0:	b.vs	4a288 <csinf@@GLIBC_2.17+0x3a0>
   4a1d4:	mov	w0, #0x7f7fffff            	// #2139095039
   4a1d8:	fmov	s1, w0
   4a1dc:	fcmp	s10, s1
   4a1e0:	b.gt	4a178 <csinf@@GLIBC_2.17+0x290>
   4a1e4:	movi	v1.2s, #0x80, lsl #16
   4a1e8:	fcmpe	s10, s1
   4a1ec:	b.ge	49f60 <csinf@@GLIBC_2.17+0x78>  // b.tcont
   4a1f0:	fcmp	s11, #0.0
   4a1f4:	b.ne	49f60 <csinf@@GLIBC_2.17+0x78>  // b.any
   4a1f8:	fsub	s0, s0, s0
   4a1fc:	fmov	s1, s11
   4a200:	b	4a110 <csinf@@GLIBC_2.17+0x228>
   4a204:	fmov	s1, #1.000000000000000000e+00
   4a208:	stp	s0, s1, [sp, #80]
   4a20c:	b	4a068 <csinf@@GLIBC_2.17+0x180>
   4a210:	movi	v0.2s, #0x80, lsl #24
   4a214:	movi	v2.2s, #0x0
   4a218:	cmp	w21, #0x0
   4a21c:	mov	w0, #0x7fc00000            	// #2143289344
   4a220:	fmov	s1, w0
   4a224:	ldr	x21, [sp, #32]
   4a228:	fcsel	s0, s0, s2, ne  // ne = any
   4a22c:	ldp	d8, d9, [sp, #48]
   4a230:	b	4a110 <csinf@@GLIBC_2.17+0x228>
   4a234:	fneg	s2, s2
   4a238:	fmov	s1, s3
   4a23c:	fmov	s0, s2
   4a240:	b	4a018 <csinf@@GLIBC_2.17+0x130>
   4a244:	mov	w0, #0x7fc00000            	// #2143289344
   4a248:	fmov	s0, w0
   4a24c:	fmov	s1, w0
   4a250:	ldr	x21, [sp, #32]
   4a254:	b	4a110 <csinf@@GLIBC_2.17+0x228>
   4a258:	mov	w0, #0x7f800000            	// #2139095040
   4a25c:	fmov	s3, w0
   4a260:	b	49ffc <csinf@@GLIBC_2.17+0x114>
   4a264:	mov	w0, #0x7fc00000            	// #2143289344
   4a268:	fmov	s0, w0
   4a26c:	fmov	s1, w0
   4a270:	ldr	x21, [sp, #32]
   4a274:	ldp	d8, d9, [sp, #48]
   4a278:	b	4a110 <csinf@@GLIBC_2.17+0x228>
   4a27c:	str	x21, [sp, #32]
   4a280:	stp	d8, d9, [sp, #48]
   4a284:	bl	ba70 <__stack_chk_fail@plt>
   4a288:	mov	w0, #0x7fc00000            	// #2143289344
   4a28c:	fmov	s0, w0
   4a290:	fmov	s1, w0
   4a294:	b	4a110 <csinf@@GLIBC_2.17+0x228>

000000000004a298 <casinhf@@GLIBC_2.17>:
   4a298:	fabs	s3, s0
   4a29c:	fabs	s4, s1
   4a2a0:	fcmp	s3, s3
   4a2a4:	b.vs	4a328 <casinhf@@GLIBC_2.17+0x90>
   4a2a8:	mov	w0, #0x7f7fffff            	// #2139095039
   4a2ac:	fmov	s2, w0
   4a2b0:	fcmp	s3, s2
   4a2b4:	b.gt	4a2f0 <casinhf@@GLIBC_2.17+0x58>
   4a2b8:	movi	v5.2s, #0x80, lsl #16
   4a2bc:	fcmpe	s3, s5
   4a2c0:	b.ge	4a310 <casinhf@@GLIBC_2.17+0x78>  // b.tcont
   4a2c4:	fcmp	s0, #0.0
   4a2c8:	b.ne	4a310 <casinhf@@GLIBC_2.17+0x78>  // b.any
   4a2cc:	fcmp	s4, s4
   4a2d0:	b.vs	4a39c <casinhf@@GLIBC_2.17+0x104>
   4a2d4:	fcmp	s4, s2
   4a2d8:	b.gt	4a35c <casinhf@@GLIBC_2.17+0xc4>
   4a2dc:	fcmpe	s4, s5
   4a2e0:	b.ge	4a320 <casinhf@@GLIBC_2.17+0x88>  // b.tcont
   4a2e4:	fcmp	s1, #0.0
   4a2e8:	b.ne	4a320 <casinhf@@GLIBC_2.17+0x88>  // b.any
   4a2ec:	ret
   4a2f0:	fcmp	s4, s4
   4a2f4:	b.vs	4a3c0 <casinhf@@GLIBC_2.17+0x128>
   4a2f8:	fcmp	s4, s2
   4a2fc:	b.gt	4a37c <casinhf@@GLIBC_2.17+0xe4>
   4a300:	movi	v2.2s, #0x0
   4a304:	movi	v3.2s, #0x80, lsl #24
   4a308:	bif	v1.8b, v2.8b, v3.8b
   4a30c:	ret
   4a310:	fcmp	s4, s4
   4a314:	b.vs	4a39c <casinhf@@GLIBC_2.17+0x104>
   4a318:	fcmp	s4, s2
   4a31c:	b.gt	4a35c <casinhf@@GLIBC_2.17+0xc4>
   4a320:	mov	w0, #0x0                   	// #0
   4a324:	b	4a3d0 <casinhf@@GLIBC_2.17+0x138>
   4a328:	fcmp	s4, s4
   4a32c:	b.vs	4a3c0 <casinhf@@GLIBC_2.17+0x128>
   4a330:	mov	w0, #0x7f7fffff            	// #2139095039
   4a334:	fmov	s2, w0
   4a338:	fcmp	s4, s2
   4a33c:	b.le	4a3ac <casinhf@@GLIBC_2.17+0x114>
   4a340:	movi	v3.2s, #0x80, lsl #24
   4a344:	mov	w0, #0x7f800000            	// #2139095040
   4a348:	fmov	s2, w0
   4a34c:	mov	w0, #0x7fc00000            	// #2143289344
   4a350:	fmov	s1, w0
   4a354:	bif	v0.8b, v2.8b, v3.8b
   4a358:	ret
   4a35c:	movi	v4.2s, #0x80, lsl #24
   4a360:	mov	w0, #0x7f800000            	// #2139095040
   4a364:	fmov	s3, w0
   4a368:	mov	w0, #0xfdb                 	// #4059
   4a36c:	movk	w0, #0x3fc9, lsl #16
   4a370:	fmov	s2, w0
   4a374:	bif	v0.8b, v3.8b, v4.8b
   4a378:	b	4a304 <casinhf@@GLIBC_2.17+0x6c>
   4a37c:	movi	v4.2s, #0x80, lsl #24
   4a380:	mov	w0, #0x7f800000            	// #2139095040
   4a384:	fmov	s3, w0
   4a388:	mov	w0, #0xfdb                 	// #4059
   4a38c:	movk	w0, #0x3f49, lsl #16
   4a390:	fmov	s2, w0
   4a394:	bif	v0.8b, v3.8b, v4.8b
   4a398:	b	4a304 <casinhf@@GLIBC_2.17+0x6c>
   4a39c:	mov	w0, #0x7fc00000            	// #2143289344
   4a3a0:	fmov	s1, w0
   4a3a4:	fmov	s0, w0
   4a3a8:	ret
   4a3ac:	movi	v2.2s, #0x80, lsl #16
   4a3b0:	fcmpe	s4, s2
   4a3b4:	b.ge	4a3c0 <casinhf@@GLIBC_2.17+0x128>  // b.tcont
   4a3b8:	fcmp	s1, #0.0
   4a3bc:	b.eq	4a300 <casinhf@@GLIBC_2.17+0x68>  // b.none
   4a3c0:	mov	w0, #0x7fc00000            	// #2143289344
   4a3c4:	fmov	s1, w0
   4a3c8:	ret
   4a3cc:	nop
   4a3d0:	stp	x29, x30, [sp, #-96]!
   4a3d4:	movi	v2.2s, #0x4b, lsl #24
   4a3d8:	mov	x29, sp
   4a3dc:	stp	d10, d11, [sp, #48]
   4a3e0:	fabs	s10, s0
   4a3e4:	fabs	s11, s1
   4a3e8:	str	x19, [sp, #16]
   4a3ec:	mov	w19, w0
   4a3f0:	stp	d8, d9, [sp, #32]
   4a3f4:	fmov	s8, s0
   4a3f8:	fcmpe	s10, s2
   4a3fc:	stp	d12, d13, [sp, #64]
   4a400:	fmov	s9, s1
   4a404:	b.ge	4a410 <casinhf@@GLIBC_2.17+0x178>  // b.tcont
   4a408:	fcmpe	s11, s2
   4a40c:	b.lt	4a470 <casinhf@@GLIBC_2.17+0x1d8>  // b.tstop
   4a410:	cbnz	w19, 4a464 <casinhf@@GLIBC_2.17+0x1cc>
   4a414:	fmov	s0, s10
   4a418:	fmov	s1, s11
   4a41c:	bl	4bba0 <clogf@@GLIBC_2.17>
   4a420:	mov	w0, #0x7218                	// #29208
   4a424:	movi	v3.2s, #0x80, lsl #24
   4a428:	movk	w0, #0x3f31, lsl #16
   4a42c:	fmov	s2, w0
   4a430:	fadd	s0, s0, s2
   4a434:	bit	v0.8b, v8.8b, v3.8b
   4a438:	cmp	w19, #0x0
   4a43c:	fmov	s2, #1.000000000000000000e+00
   4a440:	fcsel	s12, s9, s2, eq  // eq = none
   4a444:	movi	v2.2s, #0x80, lsl #24
   4a448:	ldr	x19, [sp, #16]
   4a44c:	ldp	d8, d9, [sp, #32]
   4a450:	bit	v1.8b, v12.8b, v2.8b
   4a454:	ldp	d10, d11, [sp, #48]
   4a458:	ldp	d12, d13, [sp, #64]
   4a45c:	ldp	x29, x30, [sp], #96
   4a460:	ret
   4a464:	fmov	s1, s10
   4a468:	fmov	s0, s9
   4a46c:	b	4a41c <casinhf@@GLIBC_2.17+0x184>
   4a470:	fmov	s0, #5.000000000000000000e-01
   4a474:	stp	d14, d15, [sp, #80]
   4a478:	fmov	s12, s1
   4a47c:	fcmpe	s10, s0
   4a480:	b.lt	4a494 <casinhf@@GLIBC_2.17+0x1fc>  // b.tstop
   4a484:	mov	w0, #0x32800000            	// #847249408
   4a488:	fmov	s0, w0
   4a48c:	fcmpe	s11, s0
   4a490:	b.mi	4a638 <casinhf@@GLIBC_2.17+0x3a0>  // b.first
   4a494:	mov	w0, #0x32800000            	// #847249408
   4a498:	fmov	s0, w0
   4a49c:	fcmpe	s10, s0
   4a4a0:	b.mi	4a514 <casinhf@@GLIBC_2.17+0x27c>  // b.first
   4a4a4:	fmov	s14, #1.000000000000000000e+00
   4a4a8:	fcmpe	s11, s14
   4a4ac:	b.le	4a5e4 <casinhf@@GLIBC_2.17+0x34c>
   4a4b0:	fmov	s0, #1.500000000000000000e+00
   4a4b4:	fcmpe	s11, s0
   4a4b8:	b.pl	4a55c <casinhf@@GLIBC_2.17+0x2c4>  // b.nfrst
   4a4bc:	fmov	s13, #5.000000000000000000e-01
   4a4c0:	fcmpe	s10, s13
   4a4c4:	b.pl	4a55c <casinhf@@GLIBC_2.17+0x2c4>  // b.nfrst
   4a4c8:	mov	w0, #0x28800000            	// #679477248
   4a4cc:	fmov	s1, w0
   4a4d0:	fsub	s0, s11, s14
   4a4d4:	fadd	s14, s11, s14
   4a4d8:	fcmpe	s10, s1
   4a4dc:	fmul	s14, s0, s14
   4a4e0:	b.pl	4a76c <casinhf@@GLIBC_2.17+0x4d4>  // b.nfrst
   4a4e4:	fsqrt	s15, s14
   4a4e8:	fmadd	s0, s11, s15, s14
   4a4ec:	fadd	s0, s0, s0
   4a4f0:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4a4f4:	fmul	s13, s0, s13
   4a4f8:	cbz	w19, 4a8cc <casinhf@@GLIBC_2.17+0x634>
   4a4fc:	movi	v1.2s, #0x80, lsl #24
   4a500:	fmov	s0, s10
   4a504:	bsl	v1.8b, v9.8b, v15.8b
   4a508:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a50c:	fmov	s1, s0
   4a510:	b	4a668 <casinhf@@GLIBC_2.17+0x3d0>
   4a514:	fmov	s0, #1.500000000000000000e+00
   4a518:	fcmpe	s11, s0
   4a51c:	b.lt	4a4a4 <casinhf@@GLIBC_2.17+0x20c>  // b.tstop
   4a520:	fmov	s0, #1.000000000000000000e+00
   4a524:	fadd	s14, s11, s0
   4a528:	fsub	s0, s11, s0
   4a52c:	fmul	s14, s14, s0
   4a530:	fsqrt	s14, s14
   4a534:	fadd	s0, s11, s14
   4a538:	bl	45298 <__logf_finite@GLIBC_2.17>
   4a53c:	fmov	s13, s0
   4a540:	cbz	w19, 4a74c <casinhf@@GLIBC_2.17+0x4b4>
   4a544:	movi	v1.2s, #0x80, lsl #24
   4a548:	fmov	s0, s10
   4a54c:	bsl	v1.8b, v9.8b, v14.8b
   4a550:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a554:	fmov	s1, s0
   4a558:	b	4a668 <casinhf@@GLIBC_2.17+0x3d0>
   4a55c:	fmov	s0, #1.000000000000000000e+00
   4a560:	fcmpe	s11, s0
   4a564:	b.pl	4a5f8 <casinhf@@GLIBC_2.17+0x360>  // b.nfrst
   4a568:	fmov	s13, #5.000000000000000000e-01
   4a56c:	fcmpe	s10, s13
   4a570:	b.pl	4a5f8 <casinhf@@GLIBC_2.17+0x360>  // b.nfrst
   4a574:	movi	v1.2s, #0x34, lsl #24
   4a578:	fcmpe	s11, s1
   4a57c:	b.lt	4a854 <casinhf@@GLIBC_2.17+0x5bc>  // b.tstop
   4a580:	mov	w0, #0x28800000            	// #679477248
   4a584:	fmov	s2, w0
   4a588:	fadd	s1, s11, s0
   4a58c:	fsub	s0, s0, s11
   4a590:	fcmpe	s10, s2
   4a594:	fmul	s0, s1, s0
   4a598:	b.pl	4a7e0 <casinhf@@GLIBC_2.17+0x548>  // b.nfrst
   4a59c:	fsqrt	s14, s0
   4a5a0:	fadd	s10, s10, s10
   4a5a4:	fdiv	s0, s10, s14
   4a5a8:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4a5ac:	fmul	s13, s0, s13
   4a5b0:	cbz	w19, 4a878 <casinhf@@GLIBC_2.17+0x5e0>
   4a5b4:	fmov	s1, s9
   4a5b8:	fmov	s0, s14
   4a5bc:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a5c0:	fmov	s1, s0
   4a5c4:	movi	v2.2s, #0x80, lsl #16
   4a5c8:	movi	v0.2s, #0x80, lsl #24
   4a5cc:	fcmpe	s13, s2
   4a5d0:	bsl	v0.8b, v8.8b, v13.8b
   4a5d4:	b.mi	4a760 <casinhf@@GLIBC_2.17+0x4c8>  // b.first
   4a5d8:	fmov	s12, #1.000000000000000000e+00
   4a5dc:	ldp	d14, d15, [sp, #80]
   4a5e0:	b	4a444 <casinhf@@GLIBC_2.17+0x1ac>
   4a5e4:	fcmp	s11, s14
   4a5e8:	b.ne	4a55c <casinhf@@GLIBC_2.17+0x2c4>  // b.any
   4a5ec:	fmov	s13, #5.000000000000000000e-01
   4a5f0:	fcmpe	s10, s13
   4a5f4:	b.mi	4a690 <casinhf@@GLIBC_2.17+0x3f8>  // b.first
   4a5f8:	fsub	s3, s10, s11
   4a5fc:	fadd	s0, s10, s11
   4a600:	fmov	s2, #1.000000000000000000e+00
   4a604:	fadd	s1, s10, s10
   4a608:	fmadd	s0, s3, s0, s2
   4a60c:	fmul	s1, s1, s11
   4a610:	bl	4bf00 <csqrtf@@GLIBC_2.17>
   4a614:	fadd	s11, s1, s11
   4a618:	fadd	s0, s0, s10
   4a61c:	fmov	s1, s11
   4a620:	cbnz	w19, 4a67c <casinhf@@GLIBC_2.17+0x3e4>
   4a624:	bl	4bba0 <clogf@@GLIBC_2.17>
   4a628:	movi	v2.2s, #0x80, lsl #24
   4a62c:	ldp	d14, d15, [sp, #80]
   4a630:	bit	v0.8b, v8.8b, v2.8b
   4a634:	b	4a438 <casinhf@@GLIBC_2.17+0x1a0>
   4a638:	fmov	s1, s10
   4a63c:	fmov	s0, #1.000000000000000000e+00
   4a640:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   4a644:	fmov	s14, s0
   4a648:	fadd	s0, s10, s0
   4a64c:	bl	45298 <__logf_finite@GLIBC_2.17>
   4a650:	fmov	s13, s0
   4a654:	cbz	w19, 4a6d0 <casinhf@@GLIBC_2.17+0x438>
   4a658:	fmov	s1, s9
   4a65c:	fmov	s0, s14
   4a660:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a664:	fmov	s1, s0
   4a668:	movi	v0.2s, #0x80, lsl #24
   4a66c:	fmov	s12, #1.000000000000000000e+00
   4a670:	ldp	d14, d15, [sp, #80]
   4a674:	bsl	v0.8b, v8.8b, v13.8b
   4a678:	b	4a444 <casinhf@@GLIBC_2.17+0x1ac>
   4a67c:	movi	v10.2s, #0x80, lsl #24
   4a680:	fmov	s1, s0
   4a684:	fmov	s0, s10
   4a688:	bsl	v0.8b, v9.8b, v11.8b
   4a68c:	b	4a624 <casinhf@@GLIBC_2.17+0x38c>
   4a690:	mov	w0, #0x32800000            	// #847249408
   4a694:	fmov	s0, w0
   4a698:	fcmpe	s10, s0
   4a69c:	b.pl	4a6f0 <casinhf@@GLIBC_2.17+0x458>  // b.nfrst
   4a6a0:	fsqrt	s11, s10
   4a6a4:	fadd	s0, s11, s10
   4a6a8:	fadd	s0, s0, s0
   4a6ac:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4a6b0:	fmul	s13, s0, s13
   4a6b4:	cbz	w19, 4a8a4 <casinhf@@GLIBC_2.17+0x60c>
   4a6b8:	movi	v1.2s, #0x80, lsl #24
   4a6bc:	fmov	s0, s11
   4a6c0:	bsl	v1.8b, v9.8b, v14.8b
   4a6c4:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a6c8:	fmov	s1, s0
   4a6cc:	b	4a668 <casinhf@@GLIBC_2.17+0x3d0>
   4a6d0:	fmov	s1, s14
   4a6d4:	fmov	s0, s11
   4a6d8:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a6dc:	fmov	s1, s0
   4a6e0:	movi	v0.2s, #0x80, lsl #24
   4a6e4:	ldp	d14, d15, [sp, #80]
   4a6e8:	bsl	v0.8b, v8.8b, v13.8b
   4a6ec:	b	4a444 <casinhf@@GLIBC_2.17+0x1ac>
   4a6f0:	fmov	s1, #4.000000000000000000e+00
   4a6f4:	fmov	s0, #2.000000000000000000e+00
   4a6f8:	fmadd	s1, s8, s8, s1
   4a6fc:	fsqrt	s1, s1
   4a700:	fmul	s1, s1, s10
   4a704:	fmadd	s2, s8, s8, s1
   4a708:	fmsub	s11, s8, s8, s1
   4a70c:	fmul	s15, s2, s13
   4a710:	fmul	s11, s11, s13
   4a714:	fsqrt	s15, s15
   4a718:	fsqrt	s11, s11
   4a71c:	fmadd	s1, s10, s15, s11
   4a720:	fmadd	s0, s1, s0, s2
   4a724:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4a728:	fmul	s13, s0, s13
   4a72c:	cbz	w19, 4a8b8 <casinhf@@GLIBC_2.17+0x620>
   4a730:	fadd	s11, s11, s14
   4a734:	movi	v1.2s, #0x80, lsl #24
   4a738:	fadd	s0, s10, s15
   4a73c:	bsl	v1.8b, v9.8b, v11.8b
   4a740:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a744:	fmov	s1, s0
   4a748:	b	4a668 <casinhf@@GLIBC_2.17+0x3d0>
   4a74c:	fmov	s1, s10
   4a750:	fmov	s0, s14
   4a754:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a758:	fmov	s1, s0
   4a75c:	b	4a6e0 <casinhf@@GLIBC_2.17+0x448>
   4a760:	fmul	s13, s13, s13
   4a764:	ldp	d14, d15, [sp, #80]
   4a768:	b	4a438 <casinhf@@GLIBC_2.17+0x1a0>
   4a76c:	fmul	s3, s8, s8
   4a770:	fadd	s1, s11, s11
   4a774:	fmov	s4, #2.000000000000000000e+00
   4a778:	fmul	s15, s10, s11
   4a77c:	fadd	s2, s3, s4
   4a780:	fmadd	s1, s1, s11, s2
   4a784:	fmul	s1, s1, s3
   4a788:	fmadd	s2, s14, s14, s1
   4a78c:	fsqrt	s2, s2
   4a790:	fadd	s2, s2, s14
   4a794:	fdiv	s14, s1, s2
   4a798:	fadd	s2, s3, s2
   4a79c:	fadd	s14, s14, s3
   4a7a0:	fmul	s14, s14, s13
   4a7a4:	fsqrt	s14, s14
   4a7a8:	fdiv	s15, s15, s14
   4a7ac:	fmul	s0, s11, s15
   4a7b0:	fmadd	s0, s10, s14, s0
   4a7b4:	fmadd	s0, s0, s4, s2
   4a7b8:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4a7bc:	fmul	s13, s0, s13
   4a7c0:	cbz	w19, 4a8e0 <casinhf@@GLIBC_2.17+0x648>
   4a7c4:	fadd	s11, s11, s15
   4a7c8:	movi	v1.2s, #0x80, lsl #24
   4a7cc:	fadd	s0, s10, s14
   4a7d0:	bsl	v1.8b, v9.8b, v11.8b
   4a7d4:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a7d8:	fmov	s1, s0
   4a7dc:	b	4a668 <casinhf@@GLIBC_2.17+0x3d0>
   4a7e0:	fmul	s3, s8, s8
   4a7e4:	fadd	s1, s11, s11
   4a7e8:	fmov	s4, #2.000000000000000000e+00
   4a7ec:	fmul	s14, s10, s11
   4a7f0:	fadd	s2, s3, s4
   4a7f4:	fmadd	s1, s1, s11, s2
   4a7f8:	fmul	s1, s1, s3
   4a7fc:	fmadd	s2, s0, s0, s1
   4a800:	fsqrt	s2, s2
   4a804:	fadd	s2, s2, s0
   4a808:	fadd	s15, s3, s2
   4a80c:	fdiv	s2, s1, s2
   4a810:	fmul	s15, s15, s13
   4a814:	fsqrt	s15, s15
   4a818:	fadd	s2, s2, s3
   4a81c:	fdiv	s14, s14, s15
   4a820:	fmul	s0, s11, s14
   4a824:	fmadd	s0, s10, s15, s0
   4a828:	fmadd	s0, s0, s4, s2
   4a82c:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4a830:	fmul	s13, s0, s13
   4a834:	cbz	w19, 4a8f4 <casinhf@@GLIBC_2.17+0x65c>
   4a838:	fadd	s11, s11, s14
   4a83c:	movi	v1.2s, #0x80, lsl #24
   4a840:	fadd	s0, s10, s15
   4a844:	bsl	v1.8b, v9.8b, v11.8b
   4a848:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a84c:	fmov	s1, s0
   4a850:	b	4a5c4 <casinhf@@GLIBC_2.17+0x32c>
   4a854:	fmov	s1, s10
   4a858:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   4a85c:	fadd	s1, s10, s10
   4a860:	fadd	s10, s10, s0
   4a864:	fmov	s14, s0
   4a868:	fmul	s0, s1, s10
   4a86c:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4a870:	fmul	s13, s0, s13
   4a874:	cbnz	w19, 4a5b4 <casinhf@@GLIBC_2.17+0x31c>
   4a878:	fmov	s1, s14
   4a87c:	fmov	s0, s11
   4a880:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a884:	fmov	s1, s0
   4a888:	movi	v2.2s, #0x80, lsl #16
   4a88c:	movi	v0.2s, #0x80, lsl #24
   4a890:	fcmpe	s13, s2
   4a894:	bsl	v0.8b, v8.8b, v13.8b
   4a898:	b.mi	4a760 <casinhf@@GLIBC_2.17+0x4c8>  // b.first
   4a89c:	ldp	d14, d15, [sp, #80]
   4a8a0:	b	4a444 <casinhf@@GLIBC_2.17+0x1ac>
   4a8a4:	fmov	s1, s11
   4a8a8:	fmov	s0, s14
   4a8ac:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a8b0:	fmov	s1, s0
   4a8b4:	b	4a6e0 <casinhf@@GLIBC_2.17+0x448>
   4a8b8:	fadd	s1, s10, s15
   4a8bc:	fadd	s0, s11, s14
   4a8c0:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a8c4:	fmov	s1, s0
   4a8c8:	b	4a6e0 <casinhf@@GLIBC_2.17+0x448>
   4a8cc:	fmov	s1, s10
   4a8d0:	fmov	s0, s15
   4a8d4:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a8d8:	fmov	s1, s0
   4a8dc:	b	4a6e0 <casinhf@@GLIBC_2.17+0x448>
   4a8e0:	fadd	s1, s10, s14
   4a8e4:	fadd	s0, s11, s15
   4a8e8:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a8ec:	fmov	s1, s0
   4a8f0:	b	4a6e0 <casinhf@@GLIBC_2.17+0x448>
   4a8f4:	fadd	s1, s10, s15
   4a8f8:	fadd	s0, s11, s14
   4a8fc:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4a900:	fmov	s1, s0
   4a904:	b	4a888 <casinhf@@GLIBC_2.17+0x5f0>

000000000004a908 <csinhf@@GLIBC_2.17>:
   4a908:	stp	x29, x30, [sp, #-80]!
   4a90c:	fmov	s2, s0
   4a910:	fabs	s3, s1
   4a914:	mov	x29, sp
   4a918:	stp	x19, x20, [sp, #16]
   4a91c:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4a920:	fmov	s0, s1
   4a924:	ldr	x0, [x20, #4032]
   4a928:	ldr	x1, [x0]
   4a92c:	str	x1, [sp, #72]
   4a930:	mov	x1, #0x0                   	// #0
   4a934:	str	d10, [sp, #40]
   4a938:	fabs	s10, s2
   4a93c:	fcmp	s10, s10
   4a940:	b.vs	4abd0 <csinhf@@GLIBC_2.17+0x2c8>
   4a944:	fmov	w0, s2
   4a948:	str	x21, [sp, #32]
   4a94c:	and	w21, w0, #0x80000000
   4a950:	mov	w0, #0x7f7fffff            	// #2139095039
   4a954:	fmov	s4, w0
   4a958:	fcmp	s10, s4
   4a95c:	b.le	4a9ec <csinhf@@GLIBC_2.17+0xe4>
   4a960:	fcmp	s3, s3
   4a964:	b.vs	4ac18 <csinhf@@GLIBC_2.17+0x310>
   4a968:	fcmp	s3, s4
   4a96c:	b.gt	4ac18 <csinhf@@GLIBC_2.17+0x310>
   4a970:	fmov	s5, s1
   4a974:	movi	v1.2s, #0x80, lsl #16
   4a978:	fcmpe	s3, s1
   4a97c:	b.lt	4ab74 <csinhf@@GLIBC_2.17+0x26c>  // b.tstop
   4a980:	movi	v1.2s, #0x80, lsl #16
   4a984:	fcmpe	s3, s1
   4a988:	b.le	4abf4 <csinhf@@GLIBC_2.17+0x2ec>
   4a98c:	add	x0, sp, #0x40
   4a990:	add	x1, sp, #0x44
   4a994:	bl	483f0 <sincosf@@GLIBC_2.17>
   4a998:	movi	v2.2s, #0x80, lsl #24
   4a99c:	mov	w0, #0x7f800000            	// #2139095040
   4a9a0:	ldp	s5, s1, [sp, #64]
   4a9a4:	fmov	s0, w0
   4a9a8:	bit	v0.8b, v1.8b, v2.8b
   4a9ac:	movi	v2.2s, #0x80, lsl #24
   4a9b0:	mov	w0, #0x7f800000            	// #2139095040
   4a9b4:	fmov	s1, w0
   4a9b8:	bit	v1.8b, v5.8b, v2.8b
   4a9bc:	cbz	w21, 4ac10 <csinhf@@GLIBC_2.17+0x308>
   4a9c0:	fneg	s0, s0
   4a9c4:	ldr	x21, [sp, #32]
   4a9c8:	ldr	x20, [x20, #4032]
   4a9cc:	ldr	x1, [sp, #72]
   4a9d0:	ldr	x0, [x20]
   4a9d4:	eor	x0, x1, x0
   4a9d8:	cbnz	x0, 4ac2c <csinhf@@GLIBC_2.17+0x324>
   4a9dc:	ldp	x19, x20, [sp, #16]
   4a9e0:	ldr	d10, [sp, #40]
   4a9e4:	ldp	x29, x30, [sp], #80
   4a9e8:	ret
   4a9ec:	movi	v1.2s, #0x80, lsl #16
   4a9f0:	stp	d8, d9, [sp, #48]
   4a9f4:	fcmpe	s10, s1
   4a9f8:	b.ge	4aa34 <csinhf@@GLIBC_2.17+0x12c>  // b.tcont
   4a9fc:	fcmp	s2, #0.0
   4aa00:	b.ne	4aa34 <csinhf@@GLIBC_2.17+0x12c>  // b.any
   4aa04:	fcmp	s3, s3
   4aa08:	b.vs	4aa14 <csinhf@@GLIBC_2.17+0x10c>
   4aa0c:	fcmp	s3, s4
   4aa10:	b.le	4aa64 <csinhf@@GLIBC_2.17+0x15c>
   4aa14:	movi	v2.2s, #0x80, lsl #24
   4aa18:	movi	v3.2s, #0x0
   4aa1c:	cmp	w21, #0x0
   4aa20:	fsub	s1, s0, s0
   4aa24:	ldr	x21, [sp, #32]
   4aa28:	fcsel	s0, s2, s3, ne  // ne = any
   4aa2c:	ldp	d8, d9, [sp, #48]
   4aa30:	b	4a9c8 <csinhf@@GLIBC_2.17+0xc0>
   4aa34:	fcmp	s3, s3
   4aa38:	b.vs	4aa44 <csinhf@@GLIBC_2.17+0x13c>
   4aa3c:	fcmp	s3, s4
   4aa40:	b.le	4aa64 <csinhf@@GLIBC_2.17+0x15c>
   4aa44:	mov	w0, #0x1                   	// #1
   4aa48:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   4aa4c:	mov	w0, #0x7fc00000            	// #2143289344
   4aa50:	fmov	s0, w0
   4aa54:	fmov	s1, w0
   4aa58:	ldr	x21, [sp, #32]
   4aa5c:	ldp	d8, d9, [sp, #48]
   4aa60:	b	4a9c8 <csinhf@@GLIBC_2.17+0xc0>
   4aa64:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4aa68:	movi	v4.2s, #0x80, lsl #16
   4aa6c:	mov	x0, #0xc00000000000        	// #211106232532992
   4aa70:	ldr	d1, [x1, #560]
   4aa74:	movk	x0, #0x405f, lsl #48
   4aa78:	fmov	d2, x0
   4aa7c:	fcmpe	s3, s4
   4aa80:	fmul	d1, d1, d2
   4aa84:	fcvtzs	w19, d1
   4aa88:	b.le	4abe8 <csinhf@@GLIBC_2.17+0x2e0>
   4aa8c:	add	x1, sp, #0x44
   4aa90:	add	x0, sp, #0x40
   4aa94:	bl	483f0 <sincosf@@GLIBC_2.17>
   4aa98:	cbz	w21, 4aaa8 <csinhf@@GLIBC_2.17+0x1a0>
   4aa9c:	ldr	s0, [sp, #68]
   4aaa0:	fneg	s0, s0
   4aaa4:	str	s0, [sp, #68]
   4aaa8:	scvtf	s9, w19
   4aaac:	fcmpe	s9, s10
   4aab0:	b.pl	4ab34 <csinhf@@GLIBC_2.17+0x22c>  // b.nfrst
   4aab4:	fmov	s0, s9
   4aab8:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4aabc:	fsub	s10, s10, s9
   4aac0:	fmov	s2, #5.000000000000000000e-01
   4aac4:	ldp	s3, s8, [sp, #64]
   4aac8:	fmul	s1, s0, s2
   4aacc:	fcmpe	s9, s10
   4aad0:	fmul	s2, s1, s3
   4aad4:	fmul	s1, s1, s8
   4aad8:	stp	s2, s1, [sp, #64]
   4aadc:	b.mi	4ab9c <csinhf@@GLIBC_2.17+0x294>  // b.first
   4aae0:	fmov	s0, s10
   4aae4:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4aae8:	ldp	s2, s8, [sp, #64]
   4aaec:	fmul	s2, s0, s2
   4aaf0:	fmul	s8, s0, s8
   4aaf4:	fmov	s1, s2
   4aaf8:	fmov	s0, s8
   4aafc:	nop
   4ab00:	fabs	s4, s8
   4ab04:	movi	v3.2s, #0x80, lsl #16
   4ab08:	fcmpe	s4, s3
   4ab0c:	b.pl	4ab14 <csinhf@@GLIBC_2.17+0x20c>  // b.nfrst
   4ab10:	fmul	s8, s8, s8
   4ab14:	fabs	s4, s2
   4ab18:	movi	v3.2s, #0x80, lsl #16
   4ab1c:	fcmpe	s4, s3
   4ab20:	b.pl	4ab68 <csinhf@@GLIBC_2.17+0x260>  // b.nfrst
   4ab24:	fmul	s2, s2, s2
   4ab28:	ldr	x21, [sp, #32]
   4ab2c:	ldp	d8, d9, [sp, #48]
   4ab30:	b	4a9c8 <csinhf@@GLIBC_2.17+0xc0>
   4ab34:	fmov	s0, s10
   4ab38:	bl	45940 <__sinhf_finite@GLIBC_2.17>
   4ab3c:	fmov	s8, s0
   4ab40:	ldr	s1, [sp, #68]
   4ab44:	fmov	s0, s10
   4ab48:	fmul	s8, s8, s1
   4ab4c:	bl	42c28 <__coshf_finite@GLIBC_2.17>
   4ab50:	fmov	s2, s0
   4ab54:	ldr	s1, [sp, #64]
   4ab58:	fmov	s0, s8
   4ab5c:	fmul	s2, s2, s1
   4ab60:	fmov	s1, s2
   4ab64:	b	4ab00 <csinhf@@GLIBC_2.17+0x1f8>
   4ab68:	ldr	x21, [sp, #32]
   4ab6c:	ldp	d8, d9, [sp, #48]
   4ab70:	b	4a9c8 <csinhf@@GLIBC_2.17+0xc0>
   4ab74:	fcmp	s0, #0.0
   4ab78:	b.ne	4a980 <csinhf@@GLIBC_2.17+0x78>  // b.any
   4ab7c:	mvni	v2.2s, #0x7f, msl #16
   4ab80:	cmp	w21, #0x0
   4ab84:	mov	w0, #0x7f800000            	// #2139095040
   4ab88:	fmov	s3, w0
   4ab8c:	fmov	s1, s0
   4ab90:	ldr	x21, [sp, #32]
   4ab94:	fcsel	s0, s2, s3, ne  // ne = any
   4ab98:	b	4a9c8 <csinhf@@GLIBC_2.17+0xc0>
   4ab9c:	fsub	s10, s10, s9
   4aba0:	fmul	s2, s2, s0
   4aba4:	fmul	s1, s1, s0
   4aba8:	fcmpe	s9, s10
   4abac:	stp	s2, s1, [sp, #64]
   4abb0:	b.pl	4aae0 <csinhf@@GLIBC_2.17+0x1d8>  // b.nfrst
   4abb4:	mov	w0, #0x7f7fffff            	// #2139095039
   4abb8:	fmov	s0, w0
   4abbc:	fmul	s8, s1, s0
   4abc0:	fmul	s2, s2, s0
   4abc4:	fmov	s0, s8
   4abc8:	fmov	s1, s2
   4abcc:	b	4ab00 <csinhf@@GLIBC_2.17+0x1f8>
   4abd0:	fcmp	s0, #0.0
   4abd4:	b.ne	4ac00 <csinhf@@GLIBC_2.17+0x2f8>  // b.any
   4abd8:	fmov	s1, s0
   4abdc:	mov	w0, #0x7fc00000            	// #2143289344
   4abe0:	fmov	s0, w0
   4abe4:	b	4a9c8 <csinhf@@GLIBC_2.17+0xc0>
   4abe8:	fmov	s1, #1.000000000000000000e+00
   4abec:	stp	s0, s1, [sp, #64]
   4abf0:	b	4aa98 <csinhf@@GLIBC_2.17+0x190>
   4abf4:	mov	w0, #0x7f800000            	// #2139095040
   4abf8:	fmov	s0, w0
   4abfc:	b	4a9ac <csinhf@@GLIBC_2.17+0xa4>
   4ac00:	mov	w0, #0x7fc00000            	// #2143289344
   4ac04:	fmov	s0, w0
   4ac08:	fmov	s1, w0
   4ac0c:	b	4a9c8 <csinhf@@GLIBC_2.17+0xc0>
   4ac10:	ldr	x21, [sp, #32]
   4ac14:	b	4a9c8 <csinhf@@GLIBC_2.17+0xc0>
   4ac18:	fsub	s1, s0, s0
   4ac1c:	mov	w0, #0x7f800000            	// #2139095040
   4ac20:	fmov	s0, w0
   4ac24:	ldr	x21, [sp, #32]
   4ac28:	b	4a9c8 <csinhf@@GLIBC_2.17+0xc0>
   4ac2c:	str	x21, [sp, #32]
   4ac30:	stp	d8, d9, [sp, #48]
   4ac34:	bl	ba70 <__stack_chk_fail@plt>

000000000004ac38 <catanhf@@GLIBC_2.17>:
   4ac38:	stp	x29, x30, [sp, #-64]!
   4ac3c:	mov	x29, sp
   4ac40:	stp	d10, d11, [sp, #32]
   4ac44:	fabs	s11, s0
   4ac48:	fmov	s10, s1
   4ac4c:	stp	d8, d9, [sp, #16]
   4ac50:	fmov	s8, s0
   4ac54:	fcmp	s11, s11
   4ac58:	str	d12, [sp, #48]
   4ac5c:	b.vs	4af54 <catanhf@@GLIBC_2.17+0x31c>
   4ac60:	mov	w0, #0x7f7fffff            	// #2139095039
   4ac64:	fmov	s2, w0
   4ac68:	fcmp	s11, s2
   4ac6c:	b.le	4ad74 <catanhf@@GLIBC_2.17+0x13c>
   4ac70:	fabs	s12, s10
   4ac74:	mov	w1, #0x1                   	// #1
   4ac78:	fcmp	s12, s12
   4ac7c:	b.vs	4ae80 <catanhf@@GLIBC_2.17+0x248>
   4ac80:	mov	w0, #0x7f7fffff            	// #2139095039
   4ac84:	fmov	s2, w0
   4ac88:	fcmp	s12, s2
   4ac8c:	b.gt	4ada8 <catanhf@@GLIBC_2.17+0x170>
   4ac90:	movi	v0.2s, #0x80, lsl #16
   4ac94:	fcmpe	s12, s0
   4ac98:	b.ge	4aca4 <catanhf@@GLIBC_2.17+0x6c>  // b.tcont
   4ac9c:	fcmp	s10, #0.0
   4aca0:	b.eq	4aea8 <catanhf@@GLIBC_2.17+0x270>  // b.none
   4aca4:	cmp	w1, #0x1
   4aca8:	b.le	4afbc <catanhf@@GLIBC_2.17+0x384>
   4acac:	movi	v2.2s, #0x4d, lsl #24
   4acb0:	fcmpe	s11, s2
   4acb4:	b.ge	4add8 <catanhf@@GLIBC_2.17+0x1a0>  // b.tcont
   4acb8:	fcmpe	s12, s2
   4acbc:	b.ge	4add8 <catanhf@@GLIBC_2.17+0x1a0>  // b.tcont
   4acc0:	fmov	s9, #1.000000000000000000e+00
   4acc4:	fcmp	s11, s9
   4acc8:	b.eq	4aec4 <catanhf@@GLIBC_2.17+0x28c>  // b.none
   4accc:	mov	w0, #0x28800000            	// #679477248
   4acd0:	fmov	s0, w0
   4acd4:	movi	v1.2s, #0x0
   4acd8:	fcmpe	s12, s0
   4acdc:	b.lt	4ace4 <catanhf@@GLIBC_2.17+0xac>  // b.tstop
   4ace0:	fmul	s1, s10, s10
   4ace4:	fmov	s0, #1.000000000000000000e+00
   4ace8:	fmov	s3, #5.000000000000000000e-01
   4acec:	fadd	s2, s8, s0
   4acf0:	fsub	s0, s0, s8
   4acf4:	fmadd	s2, s2, s2, s1
   4acf8:	fmadd	s1, s0, s0, s1
   4acfc:	fdiv	s0, s2, s1
   4ad00:	fcmpe	s0, s3
   4ad04:	b.pl	4af68 <catanhf@@GLIBC_2.17+0x330>  // b.nfrst
   4ad08:	bl	45298 <__logf_finite@GLIBC_2.17>
   4ad0c:	fmov	s1, #2.500000000000000000e-01
   4ad10:	fmul	s8, s0, s1
   4ad14:	fcmpe	s11, s12
   4ad18:	mov	w0, #0x33800000            	// #864026624
   4ad1c:	fmov	s2, w0
   4ad20:	fcsel	s1, s11, s12, mi  // mi = first
   4ad24:	fcsel	s0, s12, s11, mi  // mi = first
   4ad28:	fcmpe	s1, s2
   4ad2c:	fmov	s11, s0
   4ad30:	fmov	s12, s1
   4ad34:	b.pl	4af84 <catanhf@@GLIBC_2.17+0x34c>  // b.nfrst
   4ad38:	fmov	s0, #1.000000000000000000e+00
   4ad3c:	movi	v2.2s, #0x0
   4ad40:	fsub	s1, s0, s11
   4ad44:	fadd	s0, s11, s0
   4ad48:	fmul	s1, s1, s0
   4ad4c:	fcmp	s1, s2
   4ad50:	fcsel	s1, s1, s2, ne  // ne = any
   4ad54:	fadd	s0, s10, s10
   4ad58:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4ad5c:	fmov	s9, s0
   4ad60:	fmov	s1, #5.000000000000000000e-01
   4ad64:	fmov	s0, s8
   4ad68:	fmul	s9, s9, s1
   4ad6c:	fmov	s1, s9
   4ad70:	b	4ae10 <catanhf@@GLIBC_2.17+0x1d8>
   4ad74:	movi	v0.2s, #0x80, lsl #16
   4ad78:	fcmpe	s11, s0
   4ad7c:	b.ge	4ae5c <catanhf@@GLIBC_2.17+0x224>  // b.tcont
   4ad80:	fcmp	s8, #0.0
   4ad84:	mov	w1, #0x3                   	// #3
   4ad88:	b.eq	4ae70 <catanhf@@GLIBC_2.17+0x238>  // b.none
   4ad8c:	fabs	s12, s10
   4ad90:	fcmp	s12, s12
   4ad94:	b.vs	4afc0 <catanhf@@GLIBC_2.17+0x388>
   4ad98:	mov	w0, #0x7f7fffff            	// #2139095039
   4ad9c:	fmov	s2, w0
   4ada0:	fcmp	s12, s2
   4ada4:	b.le	4ac90 <catanhf@@GLIBC_2.17+0x58>
   4ada8:	movi	v3.2s, #0x0
   4adac:	movi	v0.2s, #0x80, lsl #24
   4adb0:	mov	w0, #0xfdb                 	// #4059
   4adb4:	ldr	d12, [sp, #48]
   4adb8:	movk	w0, #0x3fc9, lsl #16
   4adbc:	fmov	s1, w0
   4adc0:	bit	v1.8b, v10.8b, v0.8b
   4adc4:	bsl	v0.8b, v8.8b, v3.8b
   4adc8:	ldp	d8, d9, [sp, #16]
   4adcc:	ldp	d10, d11, [sp, #32]
   4add0:	ldp	x29, x30, [sp], #64
   4add4:	ret
   4add8:	fmov	s0, #1.000000000000000000e+00
   4addc:	movi	v1.2s, #0x80, lsl #24
   4ade0:	mov	w0, #0xfdb                 	// #4059
   4ade4:	fcmpe	s12, s0
   4ade8:	movk	w0, #0x3fc9, lsl #16
   4adec:	fmov	s9, w0
   4adf0:	bit	v9.8b, v10.8b, v1.8b
   4adf4:	b.ls	4ae4c <catanhf@@GLIBC_2.17+0x214>  // b.plast
   4adf8:	fcmpe	s11, s0
   4adfc:	b.hi	4af28 <catanhf@@GLIBC_2.17+0x2f0>  // b.pmore
   4ae00:	fdiv	s8, s8, s10
   4ae04:	fmov	s1, s9
   4ae08:	fdiv	s8, s8, s10
   4ae0c:	fmov	s0, s8
   4ae10:	fabs	s3, s8
   4ae14:	movi	v2.2s, #0x80, lsl #16
   4ae18:	fcmpe	s3, s2
   4ae1c:	b.pl	4ae24 <catanhf@@GLIBC_2.17+0x1ec>  // b.nfrst
   4ae20:	fmul	s8, s8, s8
   4ae24:	fabs	s3, s9
   4ae28:	movi	v2.2s, #0x80, lsl #16
   4ae2c:	fcmpe	s3, s2
   4ae30:	b.pl	4ae38 <catanhf@@GLIBC_2.17+0x200>  // b.nfrst
   4ae34:	fmul	s9, s9, s9
   4ae38:	ldp	d8, d9, [sp, #16]
   4ae3c:	ldp	d10, d11, [sp, #32]
   4ae40:	ldr	d12, [sp, #48]
   4ae44:	ldp	x29, x30, [sp], #64
   4ae48:	ret
   4ae4c:	fdiv	s8, s0, s8
   4ae50:	fmov	s1, s9
   4ae54:	fmov	s0, s8
   4ae58:	b	4ae10 <catanhf@@GLIBC_2.17+0x1d8>
   4ae5c:	fabs	s12, s10
   4ae60:	mov	w1, #0x4                   	// #4
   4ae64:	fcmp	s12, s12
   4ae68:	b.vc	4ad98 <catanhf@@GLIBC_2.17+0x160>
   4ae6c:	b	4afc0 <catanhf@@GLIBC_2.17+0x388>
   4ae70:	fabs	s12, s10
   4ae74:	mov	w1, #0x2                   	// #2
   4ae78:	fcmp	s12, s12
   4ae7c:	b.vc	4ac80 <catanhf@@GLIBC_2.17+0x48>
   4ae80:	movi	v2.2s, #0x0
   4ae84:	movi	v0.2s, #0x80, lsl #24
   4ae88:	mov	w0, #0x7fc00000            	// #2143289344
   4ae8c:	fmov	s1, w0
   4ae90:	ldp	d10, d11, [sp, #32]
   4ae94:	bsl	v0.8b, v8.8b, v2.8b
   4ae98:	ldr	d12, [sp, #48]
   4ae9c:	ldp	d8, d9, [sp, #16]
   4aea0:	ldp	x29, x30, [sp], #64
   4aea4:	ret
   4aea8:	cmp	w1, #0x1
   4aeac:	b.le	4afbc <catanhf@@GLIBC_2.17+0x384>
   4aeb0:	fmov	s0, s8
   4aeb4:	fmov	s1, s10
   4aeb8:	cmp	w1, #0x2
   4aebc:	b.eq	4ae38 <catanhf@@GLIBC_2.17+0x200>  // b.none
   4aec0:	b	4acac <catanhf@@GLIBC_2.17+0x74>
   4aec4:	mov	w0, #0x28800000            	// #679477248
   4aec8:	fmov	s0, w0
   4aecc:	fcmpe	s12, s0
   4aed0:	b.pl	4accc <catanhf@@GLIBC_2.17+0x94>  // b.nfrst
   4aed4:	movi	v2.2s, #0x80, lsl #24
   4aed8:	fmov	s1, #5.000000000000000000e-01
   4aedc:	fmov	s0, s12
   4aee0:	bif	v8.8b, v1.8b, v2.8b
   4aee4:	bl	45298 <__logf_finite@GLIBC_2.17>
   4aee8:	fcmpe	s12, s9
   4aeec:	mov	w0, #0x7218                	// #29208
   4aef0:	movk	w0, #0x3f31, lsl #16
   4aef4:	fmov	s1, w0
   4aef8:	fsub	s0, s1, s0
   4aefc:	fmul	s8, s0, s8
   4af00:	b.le	4afdc <catanhf@@GLIBC_2.17+0x3a4>
   4af04:	fmov	s0, s12
   4af08:	fmov	s12, s11
   4af0c:	fmov	s11, s0
   4af10:	fmov	s0, #1.000000000000000000e+00
   4af14:	fmul	s1, s12, s12
   4af18:	fsub	s2, s0, s11
   4af1c:	fadd	s0, s11, s0
   4af20:	fnmsub	s1, s2, s0, s1
   4af24:	b	4ad54 <catanhf@@GLIBC_2.17+0x11c>
   4af28:	fmov	s0, #5.000000000000000000e-01
   4af2c:	fmul	s1, s10, s0
   4af30:	fmul	s0, s8, s0
   4af34:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   4af38:	fmov	s1, s9
   4af3c:	fdiv	s8, s8, s0
   4af40:	fmov	s2, #2.500000000000000000e-01
   4af44:	fdiv	s8, s8, s0
   4af48:	fmul	s8, s8, s2
   4af4c:	fmov	s0, s8
   4af50:	b	4ae10 <catanhf@@GLIBC_2.17+0x1d8>
   4af54:	fabs	s12, s10
   4af58:	mov	w1, #0x0                   	// #0
   4af5c:	fcmp	s12, s12
   4af60:	b.vc	4ad98 <catanhf@@GLIBC_2.17+0x160>
   4af64:	b	4afc0 <catanhf@@GLIBC_2.17+0x388>
   4af68:	fmov	s0, #4.000000000000000000e+00
   4af6c:	fmul	s0, s8, s0
   4af70:	fdiv	s0, s0, s1
   4af74:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4af78:	fmov	s1, #2.500000000000000000e-01
   4af7c:	fmul	s8, s0, s1
   4af80:	b	4ad14 <catanhf@@GLIBC_2.17+0xdc>
   4af84:	fmov	s2, #1.000000000000000000e+00
   4af88:	fcmpe	s0, s2
   4af8c:	b.ge	4af10 <catanhf@@GLIBC_2.17+0x2d8>  // b.tcont
   4af90:	fmov	s3, #7.500000000000000000e-01
   4af94:	fcmpe	s0, s3
   4af98:	b.ge	4afd0 <catanhf@@GLIBC_2.17+0x398>  // b.tcont
   4af9c:	fmov	s3, #5.000000000000000000e-01
   4afa0:	fcmpe	s1, s3
   4afa4:	b.ge	4afd0 <catanhf@@GLIBC_2.17+0x398>  // b.tcont
   4afa8:	fsub	s3, s2, s0
   4afac:	fadd	s0, s0, s2
   4afb0:	fmul	s1, s1, s1
   4afb4:	fnmsub	s1, s3, s0, s1
   4afb8:	b	4ad54 <catanhf@@GLIBC_2.17+0x11c>
   4afbc:	cbnz	w1, 4ada8 <catanhf@@GLIBC_2.17+0x170>
   4afc0:	mov	w0, #0x7fc00000            	// #2143289344
   4afc4:	fmov	s0, w0
   4afc8:	fmov	s1, w0
   4afcc:	b	4ae38 <catanhf@@GLIBC_2.17+0x200>
   4afd0:	bl	48970 <ldexpf@@GLIBC_2.17+0x78>
   4afd4:	fneg	s1, s0
   4afd8:	b	4ad54 <catanhf@@GLIBC_2.17+0x11c>
   4afdc:	mov	w0, #0x33800000            	// #864026624
   4afe0:	fmov	s0, w0
   4afe4:	movi	v1.2s, #0x0
   4afe8:	fcmpe	s12, s0
   4afec:	b.mi	4ad54 <catanhf@@GLIBC_2.17+0x11c>  // b.first
   4aff0:	b	4af10 <catanhf@@GLIBC_2.17+0x2d8>
   4aff4:	nop

000000000004aff8 <catanf@@GLIBC_2.17>:
   4aff8:	stp	x29, x30, [sp, #-64]!
   4affc:	mov	x29, sp
   4b000:	stp	d8, d9, [sp, #16]
   4b004:	fabs	s9, s0
   4b008:	stp	d10, d11, [sp, #32]
   4b00c:	fabs	s10, s1
   4b010:	fcmp	s9, s9
   4b014:	str	d12, [sp, #48]
   4b018:	fmov	s12, s1
   4b01c:	b.vs	4b284 <catanf@@GLIBC_2.17+0x28c>
   4b020:	mov	w0, #0x7f7fffff            	// #2139095039
   4b024:	fmov	s3, w0
   4b028:	fmov	s11, s0
   4b02c:	fcmp	s9, s3
   4b030:	b.le	4b054 <catanf@@GLIBC_2.17+0x5c>
   4b034:	fcmp	s10, s10
   4b038:	b.vs	4b044 <catanf@@GLIBC_2.17+0x4c>
   4b03c:	fcmp	s10, s3
   4b040:	b.gt	4b1cc <catanf@@GLIBC_2.17+0x1d4>
   4b044:	movi	v4.2s, #0x0
   4b048:	movi	v1.2s, #0x80, lsl #24
   4b04c:	bsl	v1.8b, v12.8b, v4.8b
   4b050:	b	4b1d8 <catanf@@GLIBC_2.17+0x1e0>
   4b054:	movi	v0.2s, #0x80, lsl #16
   4b058:	fcmpe	s9, s0
   4b05c:	b.ge	4b068 <catanf@@GLIBC_2.17+0x70>  // b.tcont
   4b060:	fcmp	s11, #0.0
   4b064:	b.eq	4b1f0 <catanf@@GLIBC_2.17+0x1f8>  // b.none
   4b068:	fcmp	s10, s10
   4b06c:	b.vs	4b2d0 <catanf@@GLIBC_2.17+0x2d8>
   4b070:	fcmp	s10, s3
   4b074:	b.gt	4b354 <catanf@@GLIBC_2.17+0x35c>
   4b078:	movi	v4.2s, #0x4d, lsl #24
   4b07c:	fcmpe	s9, s4
   4b080:	b.ge	4b148 <catanf@@GLIBC_2.17+0x150>  // b.tcont
   4b084:	fcmpe	s10, s4
   4b088:	b.ge	4b148 <catanf@@GLIBC_2.17+0x150>  // b.tcont
   4b08c:	fcmpe	s10, s9
   4b090:	b.gt	4b21c <catanf@@GLIBC_2.17+0x224>
   4b094:	fmov	s1, s10
   4b098:	mov	w0, #0x33800000            	// #864026624
   4b09c:	fmov	s2, w0
   4b0a0:	fmov	s0, s9
   4b0a4:	fcmpe	s1, s2
   4b0a8:	fmov	s2, #1.000000000000000000e+00
   4b0ac:	b.pl	4b238 <catanf@@GLIBC_2.17+0x240>  // b.nfrst
   4b0b0:	fsub	s1, s2, s0
   4b0b4:	fadd	s0, s0, s2
   4b0b8:	movi	v3.2s, #0x0
   4b0bc:	fmul	s1, s1, s0
   4b0c0:	fcmp	s1, s3
   4b0c4:	fcsel	s1, s1, s3, ne  // ne = any
   4b0c8:	fadd	s0, s11, s11
   4b0cc:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4b0d0:	fmov	s2, #1.000000000000000000e+00
   4b0d4:	fmov	s1, #5.000000000000000000e-01
   4b0d8:	fcmp	s10, s2
   4b0dc:	fmul	s8, s0, s1
   4b0e0:	b.ne	4b0f4 <catanf@@GLIBC_2.17+0xfc>  // b.any
   4b0e4:	mov	w0, #0x28800000            	// #679477248
   4b0e8:	fmov	s0, w0
   4b0ec:	fcmpe	s9, s0
   4b0f0:	b.mi	4b320 <catanf@@GLIBC_2.17+0x328>  // b.first
   4b0f4:	mov	w0, #0x28800000            	// #679477248
   4b0f8:	fmov	s0, w0
   4b0fc:	fcmpe	s9, s0
   4b100:	b.lt	4b2f4 <catanf@@GLIBC_2.17+0x2fc>  // b.tstop
   4b104:	fmul	s0, s11, s11
   4b108:	fmov	s1, #1.000000000000000000e+00
   4b10c:	fmov	s2, #5.000000000000000000e-01
   4b110:	fadd	s3, s12, s1
   4b114:	fsub	s1, s12, s1
   4b118:	fmadd	s3, s3, s3, s0
   4b11c:	fmadd	s1, s1, s1, s0
   4b120:	fdiv	s0, s3, s1
   4b124:	fcmpe	s0, s2
   4b128:	b.pl	4b2e0 <catanf@@GLIBC_2.17+0x2e8>  // b.nfrst
   4b12c:	bl	45298 <__logf_finite@GLIBC_2.17>
   4b130:	fmov	s2, s0
   4b134:	fmov	s1, #2.500000000000000000e-01
   4b138:	fmov	s0, s8
   4b13c:	fmul	s2, s2, s1
   4b140:	fmov	s1, s2
   4b144:	b	4b180 <catanf@@GLIBC_2.17+0x188>
   4b148:	fmov	s3, #1.000000000000000000e+00
   4b14c:	movi	v0.2s, #0x80, lsl #24
   4b150:	mov	w0, #0xfdb                 	// #4059
   4b154:	fcmpe	s9, s3
   4b158:	movk	w0, #0x3fc9, lsl #16
   4b15c:	fmov	s8, w0
   4b160:	bit	v8.8b, v11.8b, v0.8b
   4b164:	b.ls	4b1bc <catanf@@GLIBC_2.17+0x1c4>  // b.plast
   4b168:	fcmpe	s10, s3
   4b16c:	b.hi	4b254 <catanf@@GLIBC_2.17+0x25c>  // b.pmore
   4b170:	fdiv	s1, s12, s11
   4b174:	fmov	s0, s8
   4b178:	fdiv	s2, s1, s11
   4b17c:	fmov	s1, s2
   4b180:	fabs	s4, s8
   4b184:	movi	v3.2s, #0x80, lsl #16
   4b188:	fcmpe	s4, s3
   4b18c:	b.pl	4b194 <catanf@@GLIBC_2.17+0x19c>  // b.nfrst
   4b190:	fmul	s8, s8, s8
   4b194:	fabs	s4, s2
   4b198:	movi	v3.2s, #0x80, lsl #16
   4b19c:	fcmpe	s4, s3
   4b1a0:	b.pl	4b1a8 <catanf@@GLIBC_2.17+0x1b0>  // b.nfrst
   4b1a4:	fmul	s2, s2, s2
   4b1a8:	ldp	d8, d9, [sp, #16]
   4b1ac:	ldp	d10, d11, [sp, #32]
   4b1b0:	ldr	d12, [sp, #48]
   4b1b4:	ldp	x29, x30, [sp], #64
   4b1b8:	ret
   4b1bc:	fdiv	s2, s3, s12
   4b1c0:	fmov	s0, s8
   4b1c4:	fmov	s1, s2
   4b1c8:	b	4b180 <catanf@@GLIBC_2.17+0x188>
   4b1cc:	movi	v3.2s, #0x0
   4b1d0:	movi	v1.2s, #0x80, lsl #24
   4b1d4:	bsl	v1.8b, v12.8b, v3.8b
   4b1d8:	movi	v0.2s, #0x80, lsl #24
   4b1dc:	mov	w0, #0xfdb                 	// #4059
   4b1e0:	movk	w0, #0x3fc9, lsl #16
   4b1e4:	fmov	s3, w0
   4b1e8:	bsl	v0.8b, v11.8b, v3.8b
   4b1ec:	b	4b1a8 <catanf@@GLIBC_2.17+0x1b0>
   4b1f0:	fcmp	s10, s10
   4b1f4:	b.vs	4b2d0 <catanf@@GLIBC_2.17+0x2d8>
   4b1f8:	fcmp	s10, s3
   4b1fc:	b.gt	4b354 <catanf@@GLIBC_2.17+0x35c>
   4b200:	fcmpe	s10, s0
   4b204:	b.ge	4b078 <catanf@@GLIBC_2.17+0x80>  // b.tcont
   4b208:	fcmp	s12, #0.0
   4b20c:	b.ne	4b078 <catanf@@GLIBC_2.17+0x80>  // b.any
   4b210:	fmov	s0, s11
   4b214:	fmov	s1, s12
   4b218:	b	4b1a8 <catanf@@GLIBC_2.17+0x1b0>
   4b21c:	fmov	s1, s9
   4b220:	mov	w0, #0x33800000            	// #864026624
   4b224:	fmov	s2, w0
   4b228:	fmov	s0, s10
   4b22c:	fcmpe	s1, s2
   4b230:	fmov	s2, #1.000000000000000000e+00
   4b234:	b.mi	4b0b0 <catanf@@GLIBC_2.17+0xb8>  // b.first
   4b238:	fcmpe	s0, s2
   4b23c:	b.lt	4b2fc <catanf@@GLIBC_2.17+0x304>  // b.tstop
   4b240:	fsub	s3, s2, s0
   4b244:	fadd	s0, s0, s2
   4b248:	fmul	s1, s1, s1
   4b24c:	fnmsub	s1, s3, s0, s1
   4b250:	b	4b0c8 <catanf@@GLIBC_2.17+0xd0>
   4b254:	fmov	s1, #5.000000000000000000e-01
   4b258:	fmul	s0, s11, s1
   4b25c:	fmul	s1, s12, s1
   4b260:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   4b264:	fmov	s2, s0
   4b268:	fmov	s3, #2.500000000000000000e-01
   4b26c:	fmov	s0, s8
   4b270:	fdiv	s1, s12, s2
   4b274:	fdiv	s1, s1, s2
   4b278:	fmul	s2, s1, s3
   4b27c:	fmov	s1, s2
   4b280:	b	4b180 <catanf@@GLIBC_2.17+0x188>
   4b284:	fcmp	s10, s10
   4b288:	b.vs	4b2d0 <catanf@@GLIBC_2.17+0x2d8>
   4b28c:	mov	w0, #0x7f7fffff            	// #2139095039
   4b290:	fmov	s0, w0
   4b294:	fcmp	s10, s0
   4b298:	b.gt	4b36c <catanf@@GLIBC_2.17+0x374>
   4b29c:	movi	v2.2s, #0x80, lsl #16
   4b2a0:	mov	w0, #0x7fc00000            	// #2143289344
   4b2a4:	fmov	s0, w0
   4b2a8:	fmov	s1, w0
   4b2ac:	fcmpe	s10, s2
   4b2b0:	b.ge	4b1a8 <catanf@@GLIBC_2.17+0x1b0>  // b.tcont
   4b2b4:	fcmp	s12, #0.0
   4b2b8:	b.ne	4b1a8 <catanf@@GLIBC_2.17+0x1b0>  // b.any
   4b2bc:	nop
   4b2c0:	movi	v4.2s, #0x0
   4b2c4:	movi	v1.2s, #0x80, lsl #24
   4b2c8:	bsl	v1.8b, v12.8b, v4.8b
   4b2cc:	b	4b1a8 <catanf@@GLIBC_2.17+0x1b0>
   4b2d0:	mov	w0, #0x7fc00000            	// #2143289344
   4b2d4:	fmov	s0, w0
   4b2d8:	fmov	s1, w0
   4b2dc:	b	4b1a8 <catanf@@GLIBC_2.17+0x1b0>
   4b2e0:	fmov	s2, #4.000000000000000000e+00
   4b2e4:	fmul	s2, s12, s2
   4b2e8:	fdiv	s0, s2, s1
   4b2ec:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4b2f0:	b	4b130 <catanf@@GLIBC_2.17+0x138>
   4b2f4:	movi	v0.2s, #0x0
   4b2f8:	b	4b108 <catanf@@GLIBC_2.17+0x110>
   4b2fc:	fmov	s3, #7.500000000000000000e-01
   4b300:	fcmpe	s0, s3
   4b304:	b.ge	4b314 <catanf@@GLIBC_2.17+0x31c>  // b.tcont
   4b308:	fmov	s3, #5.000000000000000000e-01
   4b30c:	fcmpe	s1, s3
   4b310:	b.lt	4b240 <catanf@@GLIBC_2.17+0x248>  // b.tstop
   4b314:	bl	48970 <ldexpf@@GLIBC_2.17+0x78>
   4b318:	fneg	s1, s0
   4b31c:	b	4b0c8 <catanf@@GLIBC_2.17+0xd0>
   4b320:	movi	v2.2s, #0x80, lsl #24
   4b324:	fmov	s0, s9
   4b328:	bif	v12.8b, v1.8b, v2.8b
   4b32c:	bl	45298 <__logf_finite@GLIBC_2.17>
   4b330:	fmov	s2, s0
   4b334:	mov	w0, #0x7218                	// #29208
   4b338:	fmov	s0, s8
   4b33c:	movk	w0, #0x3f31, lsl #16
   4b340:	fmov	s1, w0
   4b344:	fsub	s1, s1, s2
   4b348:	fmul	s2, s1, s12
   4b34c:	fmov	s1, s2
   4b350:	b	4b180 <catanf@@GLIBC_2.17+0x188>
   4b354:	movi	v0.2s, #0x80, lsl #24
   4b358:	mov	w0, #0xfdb                 	// #4059
   4b35c:	movk	w0, #0x3fc9, lsl #16
   4b360:	fmov	s4, w0
   4b364:	bsl	v0.8b, v11.8b, v4.8b
   4b368:	b	4b2c0 <catanf@@GLIBC_2.17+0x2c8>
   4b36c:	mov	w0, #0x7fc00000            	// #2143289344
   4b370:	fmov	s0, w0
   4b374:	b	4b2c0 <catanf@@GLIBC_2.17+0x2c8>

000000000004b378 <ctanf@@GLIBC_2.17>:
   4b378:	stp	x29, x30, [sp, #-112]!
   4b37c:	fabs	s4, s0
   4b380:	mov	w0, #0x7f7fffff            	// #2139095039
   4b384:	mov	x29, sp
   4b388:	stp	x19, x20, [sp, #16]
   4b38c:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4b390:	fmov	s3, w0
   4b394:	ldr	x1, [x20, #4032]
   4b398:	fcmp	s4, s3
   4b39c:	stp	d8, d9, [sp, #32]
   4b3a0:	fmov	s2, s0
   4b3a4:	ldr	x0, [x1]
   4b3a8:	str	x0, [sp, #104]
   4b3ac:	mov	x0, #0x0                   	// #0
   4b3b0:	stp	d10, d11, [sp, #48]
   4b3b4:	fmov	s9, s1
   4b3b8:	fabs	s11, s1
   4b3bc:	b.hi	4b564 <ctanf@@GLIBC_2.17+0x1ec>  // b.pmore
   4b3c0:	fcmp	s11, s3
   4b3c4:	b.hi	4b5ac <ctanf@@GLIBC_2.17+0x234>  // b.pmore
   4b3c8:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4b3cc:	fmov	s8, s1
   4b3d0:	mov	x0, #0xc00000000000        	// #211106232532992
   4b3d4:	movi	v6.2s, #0x80, lsl #16
   4b3d8:	ldr	d1, [x1, #560]
   4b3dc:	movk	x0, #0x405f, lsl #48
   4b3e0:	fmov	d3, x0
   4b3e4:	fmov	d5, #5.000000000000000000e-01
   4b3e8:	str	d12, [sp, #64]
   4b3ec:	fmul	d1, d1, d3
   4b3f0:	fcmpe	s4, s6
   4b3f4:	fmul	d1, d1, d5
   4b3f8:	fcvtzs	w19, d1
   4b3fc:	b.le	4b5e0 <ctanf@@GLIBC_2.17+0x268>
   4b400:	add	x1, sp, #0x64
   4b404:	add	x0, sp, #0x60
   4b408:	bl	483f0 <sincosf@@GLIBC_2.17>
   4b40c:	scvtf	s12, w19
   4b410:	fcmpe	s12, s11
   4b414:	b.mi	4b4bc <ctanf@@GLIBC_2.17+0x144>  // b.first
   4b418:	movi	v0.2s, #0x80, lsl #16
   4b41c:	fcmpe	s11, s0
   4b420:	b.gt	4b508 <ctanf@@GLIBC_2.17+0x190>
   4b424:	ldr	s3, [sp, #100]
   4b428:	movi	v2.2s, #0x34, lsl #24
   4b42c:	fabs	s1, s3
   4b430:	fmul	s0, s3, s3
   4b434:	fmul	s1, s1, s2
   4b438:	fcmpe	s1, s11
   4b43c:	b.mi	4b4b4 <ctanf@@GLIBC_2.17+0x13c>  // b.first
   4b440:	fdiv	s10, s9, s0
   4b444:	ldr	s2, [sp, #96]
   4b448:	fmul	s2, s3, s2
   4b44c:	fdiv	s2, s2, s0
   4b450:	fmov	s1, s10
   4b454:	fmov	s0, s2
   4b458:	fabs	s4, s2
   4b45c:	movi	v3.2s, #0x80, lsl #16
   4b460:	fcmpe	s4, s3
   4b464:	b.pl	4b46c <ctanf@@GLIBC_2.17+0xf4>  // b.nfrst
   4b468:	fmul	s2, s2, s2
   4b46c:	fabs	s3, s10
   4b470:	movi	v2.2s, #0x80, lsl #16
   4b474:	fcmpe	s3, s2
   4b478:	b.mi	4b4a8 <ctanf@@GLIBC_2.17+0x130>  // b.first
   4b47c:	ldr	d12, [sp, #64]
   4b480:	ldr	x20, [x20, #4032]
   4b484:	ldr	x1, [sp, #104]
   4b488:	ldr	x0, [x20]
   4b48c:	eor	x0, x1, x0
   4b490:	cbnz	x0, 4b628 <ctanf@@GLIBC_2.17+0x2b0>
   4b494:	ldp	x19, x20, [sp, #16]
   4b498:	ldp	d8, d9, [sp, #32]
   4b49c:	ldp	d10, d11, [sp, #48]
   4b4a0:	ldp	x29, x30, [sp], #112
   4b4a4:	ret
   4b4a8:	fmul	s10, s10, s10
   4b4ac:	ldr	d12, [sp, #64]
   4b4b0:	b	4b480 <ctanf@@GLIBC_2.17+0x108>
   4b4b4:	fmadd	s0, s8, s8, s0
   4b4b8:	b	4b440 <ctanf@@GLIBC_2.17+0xc8>
   4b4bc:	fmov	s0, w19
   4b4c0:	shl	v0.2s, v0.2s, #1
   4b4c4:	scvtf	s0, s0
   4b4c8:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4b4cc:	fsub	s11, s11, s12
   4b4d0:	ldp	s8, s2, [sp, #96]
   4b4d4:	fmov	s3, #4.000000000000000000e+00
   4b4d8:	movi	v1.2s, #0x80, lsl #24
   4b4dc:	fmov	s10, #1.000000000000000000e+00
   4b4e0:	fcmpe	s12, s11
   4b4e4:	fmul	s8, s8, s3
   4b4e8:	bit	v10.8b, v9.8b, v1.8b
   4b4ec:	fmul	s8, s8, s2
   4b4f0:	fdiv	s8, s8, s0
   4b4f4:	b.pl	4b548 <ctanf@@GLIBC_2.17+0x1d0>  // b.nfrst
   4b4f8:	fdiv	s2, s8, s0
   4b4fc:	fmov	s1, s10
   4b500:	fmov	s0, s2
   4b504:	b	4b458 <ctanf@@GLIBC_2.17+0xe0>
   4b508:	fmov	s0, s9
   4b50c:	bl	45940 <__sinhf_finite@GLIBC_2.17>
   4b510:	fmov	s10, s0
   4b514:	fmov	s0, s9
   4b518:	bl	42c28 <__coshf_finite@GLIBC_2.17>
   4b51c:	fabs	s11, s10
   4b520:	ldr	s3, [sp, #100]
   4b524:	movi	v2.2s, #0x34, lsl #24
   4b528:	fmul	s9, s10, s0
   4b52c:	fmov	s8, s10
   4b530:	fabs	s1, s3
   4b534:	fmul	s0, s3, s3
   4b538:	fmul	s1, s1, s2
   4b53c:	fcmpe	s1, s11
   4b540:	b.pl	4b440 <ctanf@@GLIBC_2.17+0xc8>  // b.nfrst
   4b544:	b	4b4b4 <ctanf@@GLIBC_2.17+0x13c>
   4b548:	fadd	s0, s11, s11
   4b54c:	str	s10, [sp, #88]
   4b550:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4b554:	fdiv	s2, s8, s0
   4b558:	ldr	s1, [sp, #88]
   4b55c:	fmov	s0, s2
   4b560:	b	4b458 <ctanf@@GLIBC_2.17+0xe0>
   4b564:	fcmp	s11, s3
   4b568:	b.gt	4b5ec <ctanf@@GLIBC_2.17+0x274>
   4b56c:	fcmp	s2, #0.0
   4b570:	b.eq	4b60c <ctanf@@GLIBC_2.17+0x294>  // b.none
   4b574:	fcmp	s9, #0.0
   4b578:	b.ne	4b618 <ctanf@@GLIBC_2.17+0x2a0>  // b.any
   4b57c:	fmov	s1, s9
   4b580:	mov	w0, #0x7fc00000            	// #2143289344
   4b584:	fmov	s0, w0
   4b588:	mov	w0, #0x7f7fffff            	// #2139095039
   4b58c:	fmov	s2, w0
   4b590:	fcmp	s4, s2
   4b594:	b.le	4b480 <ctanf@@GLIBC_2.17+0x108>
   4b598:	mov	w0, #0x1                   	// #1
   4b59c:	stp	s0, s1, [sp, #88]
   4b5a0:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   4b5a4:	ldp	s0, s1, [sp, #88]
   4b5a8:	b	4b480 <ctanf@@GLIBC_2.17+0x108>
   4b5ac:	b.le	4b56c <ctanf@@GLIBC_2.17+0x1f4>
   4b5b0:	fmov	s1, #1.000000000000000000e+00
   4b5b4:	fcmpe	s4, s1
   4b5b8:	b.le	4b5ec <ctanf@@GLIBC_2.17+0x274>
   4b5bc:	add	x1, sp, #0x64
   4b5c0:	add	x0, sp, #0x60
   4b5c4:	bl	483f0 <sincosf@@GLIBC_2.17>
   4b5c8:	ldp	s0, s3, [sp, #96]
   4b5cc:	movi	v2.2s, #0x0
   4b5d0:	movi	v1.2s, #0x80, lsl #24
   4b5d4:	fmul	s0, s0, s3
   4b5d8:	bit	v2.8b, v0.8b, v1.8b
   4b5dc:	b	4b5f8 <ctanf@@GLIBC_2.17+0x280>
   4b5e0:	fmov	s0, #1.000000000000000000e+00
   4b5e4:	stp	s2, s0, [sp, #96]
   4b5e8:	b	4b40c <ctanf@@GLIBC_2.17+0x94>
   4b5ec:	movi	v0.2s, #0x0
   4b5f0:	movi	v1.2s, #0x80, lsl #24
   4b5f4:	bif	v2.8b, v0.8b, v1.8b
   4b5f8:	movi	v3.2s, #0x80, lsl #24
   4b5fc:	fmov	s1, #1.000000000000000000e+00
   4b600:	fmov	s0, s2
   4b604:	bit	v1.8b, v9.8b, v3.8b
   4b608:	b	4b480 <ctanf@@GLIBC_2.17+0x108>
   4b60c:	fmov	s0, s2
   4b610:	fmov	s1, s9
   4b614:	b	4b480 <ctanf@@GLIBC_2.17+0x108>
   4b618:	mov	w0, #0x7fc00000            	// #2143289344
   4b61c:	fmov	s0, w0
   4b620:	fmov	s1, w0
   4b624:	b	4b588 <ctanf@@GLIBC_2.17+0x210>
   4b628:	str	d12, [sp, #64]
   4b62c:	bl	ba70 <__stack_chk_fail@plt>

000000000004b630 <ctanhf@@GLIBC_2.17>:
   4b630:	stp	x29, x30, [sp, #-112]!
   4b634:	mov	w0, #0x7f7fffff            	// #2139095039
   4b638:	fmov	s2, w0
   4b63c:	mov	x29, sp
   4b640:	stp	x19, x20, [sp, #16]
   4b644:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4b648:	stp	d10, d11, [sp, #48]
   4b64c:	fabs	s11, s0
   4b650:	ldr	x0, [x20, #4032]
   4b654:	stp	d8, d9, [sp, #32]
   4b658:	fcmp	s11, s2
   4b65c:	ldr	x1, [x0]
   4b660:	str	x1, [sp, #104]
   4b664:	mov	x1, #0x0                   	// #0
   4b668:	fmov	s9, s0
   4b66c:	fmov	s8, s0
   4b670:	fmov	s0, s1
   4b674:	b.hi	4b81c <ctanhf@@GLIBC_2.17+0x1ec>  // b.pmore
   4b678:	fabs	s3, s1
   4b67c:	fcmp	s3, s2
   4b680:	b.hi	4b868 <ctanhf@@GLIBC_2.17+0x238>  // b.pmore
   4b684:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4b688:	mov	x0, #0xc00000000000        	// #211106232532992
   4b68c:	movk	x0, #0x405f, lsl #48
   4b690:	fmov	d1, x0
   4b694:	ldr	d2, [x1, #560]
   4b698:	movi	v5.2s, #0x80, lsl #16
   4b69c:	fmov	d4, #5.000000000000000000e-01
   4b6a0:	str	d12, [sp, #64]
   4b6a4:	fmul	d2, d2, d1
   4b6a8:	fcmpe	s3, s5
   4b6ac:	fmul	d2, d2, d4
   4b6b0:	fcvtzs	w19, d2
   4b6b4:	b.le	4b88c <ctanhf@@GLIBC_2.17+0x25c>
   4b6b8:	add	x1, sp, #0x64
   4b6bc:	add	x0, sp, #0x60
   4b6c0:	bl	483f0 <sincosf@@GLIBC_2.17>
   4b6c4:	scvtf	s12, w19
   4b6c8:	fcmpe	s11, s12
   4b6cc:	b.gt	4b778 <ctanhf@@GLIBC_2.17+0x148>
   4b6d0:	movi	v0.2s, #0x80, lsl #16
   4b6d4:	fcmpe	s11, s0
   4b6d8:	b.gt	4b7c4 <ctanhf@@GLIBC_2.17+0x194>
   4b6dc:	ldr	s1, [sp, #100]
   4b6e0:	movi	v3.2s, #0x34, lsl #24
   4b6e4:	fabs	s0, s1
   4b6e8:	fmul	s2, s1, s1
   4b6ec:	fmul	s0, s0, s3
   4b6f0:	fcmpe	s11, s0
   4b6f4:	b.gt	4b770 <ctanhf@@GLIBC_2.17+0x140>
   4b6f8:	fdiv	s10, s9, s2
   4b6fc:	ldr	s0, [sp, #96]
   4b700:	fmul	s1, s1, s0
   4b704:	fdiv	s2, s1, s2
   4b708:	fmov	s9, s10
   4b70c:	fmov	s1, s2
   4b710:	fabs	s3, s10
   4b714:	movi	v0.2s, #0x80, lsl #16
   4b718:	fcmpe	s3, s0
   4b71c:	b.pl	4b724 <ctanhf@@GLIBC_2.17+0xf4>  // b.nfrst
   4b720:	fmul	s10, s10, s10
   4b724:	fabs	s3, s2
   4b728:	movi	v0.2s, #0x80, lsl #16
   4b72c:	fcmpe	s3, s0
   4b730:	b.mi	4b764 <ctanhf@@GLIBC_2.17+0x134>  // b.first
   4b734:	ldr	d12, [sp, #64]
   4b738:	ldr	x20, [x20, #4032]
   4b73c:	ldr	x1, [sp, #104]
   4b740:	ldr	x0, [x20]
   4b744:	eor	x0, x1, x0
   4b748:	cbnz	x0, 4b8d8 <ctanhf@@GLIBC_2.17+0x2a8>
   4b74c:	fmov	s0, s9
   4b750:	ldp	x19, x20, [sp, #16]
   4b754:	ldp	d8, d9, [sp, #32]
   4b758:	ldp	d10, d11, [sp, #48]
   4b75c:	ldp	x29, x30, [sp], #112
   4b760:	ret
   4b764:	fmul	s2, s2, s2
   4b768:	ldr	d12, [sp, #64]
   4b76c:	b	4b738 <ctanhf@@GLIBC_2.17+0x108>
   4b770:	fmadd	s2, s8, s8, s2
   4b774:	b	4b6f8 <ctanhf@@GLIBC_2.17+0xc8>
   4b778:	fmov	s0, w19
   4b77c:	shl	v0.2s, v0.2s, #1
   4b780:	scvtf	s0, s0
   4b784:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4b788:	fsub	s11, s11, s12
   4b78c:	ldp	s8, s2, [sp, #96]
   4b790:	fmov	s3, #4.000000000000000000e+00
   4b794:	movi	v1.2s, #0x80, lsl #24
   4b798:	fmov	s10, #1.000000000000000000e+00
   4b79c:	fcmpe	s12, s11
   4b7a0:	fmul	s8, s8, s3
   4b7a4:	bit	v10.8b, v9.8b, v1.8b
   4b7a8:	fmul	s8, s8, s2
   4b7ac:	fdiv	s8, s8, s0
   4b7b0:	b.pl	4b804 <ctanhf@@GLIBC_2.17+0x1d4>  // b.nfrst
   4b7b4:	fdiv	s2, s8, s0
   4b7b8:	fmov	s9, s10
   4b7bc:	fmov	s1, s2
   4b7c0:	b	4b710 <ctanhf@@GLIBC_2.17+0xe0>
   4b7c4:	fmov	s0, s9
   4b7c8:	bl	45940 <__sinhf_finite@GLIBC_2.17>
   4b7cc:	fmov	s10, s0
   4b7d0:	fmov	s0, s9
   4b7d4:	bl	42c28 <__coshf_finite@GLIBC_2.17>
   4b7d8:	fmul	s9, s10, s0
   4b7dc:	ldr	s1, [sp, #100]
   4b7e0:	movi	v3.2s, #0x34, lsl #24
   4b7e4:	fabs	s11, s10
   4b7e8:	fmov	s8, s10
   4b7ec:	fabs	s0, s1
   4b7f0:	fmul	s2, s1, s1
   4b7f4:	fmul	s0, s0, s3
   4b7f8:	fcmpe	s11, s0
   4b7fc:	b.le	4b6f8 <ctanhf@@GLIBC_2.17+0xc8>
   4b800:	b	4b770 <ctanhf@@GLIBC_2.17+0x140>
   4b804:	fadd	s0, s11, s11
   4b808:	fmov	s9, s10
   4b80c:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4b810:	fdiv	s2, s8, s0
   4b814:	fmov	s1, s2
   4b818:	b	4b710 <ctanhf@@GLIBC_2.17+0xe0>
   4b81c:	b.gt	4b898 <ctanhf@@GLIBC_2.17+0x268>
   4b820:	fcmp	s0, #0.0
   4b824:	fmov	s1, s0
   4b828:	b.eq	4b738 <ctanhf@@GLIBC_2.17+0x108>  // b.none
   4b82c:	fcmp	s9, #0.0
   4b830:	mov	w0, #0x7fc00000            	// #2143289344
   4b834:	fmov	s1, w0
   4b838:	b.eq	4b840 <ctanhf@@GLIBC_2.17+0x210>  // b.none
   4b83c:	fmov	s9, w0
   4b840:	fabs	s0, s0
   4b844:	mov	w0, #0x7f7fffff            	// #2139095039
   4b848:	fmov	s2, w0
   4b84c:	fcmp	s0, s2
   4b850:	b.le	4b738 <ctanhf@@GLIBC_2.17+0x108>
   4b854:	mov	w0, #0x1                   	// #1
   4b858:	str	s1, [sp, #92]
   4b85c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   4b860:	ldr	s1, [sp, #92]
   4b864:	b	4b738 <ctanhf@@GLIBC_2.17+0x108>
   4b868:	fcmp	s11, s2
   4b86c:	b.le	4b820 <ctanhf@@GLIBC_2.17+0x1f0>
   4b870:	movi	v2.2s, #0x80, lsl #24
   4b874:	fmov	s1, #1.000000000000000000e+00
   4b878:	bif	v9.8b, v1.8b, v2.8b
   4b87c:	movi	v1.2s, #0x0
   4b880:	movi	v2.2s, #0x80, lsl #24
   4b884:	bit	v1.8b, v0.8b, v2.8b
   4b888:	b	4b738 <ctanhf@@GLIBC_2.17+0x108>
   4b88c:	fmov	s1, #1.000000000000000000e+00
   4b890:	stp	s0, s1, [sp, #96]
   4b894:	b	4b6c4 <ctanhf@@GLIBC_2.17+0x94>
   4b898:	fabs	s4, s1
   4b89c:	movi	v8.2s, #0x80, lsl #24
   4b8a0:	fmov	s3, #1.000000000000000000e+00
   4b8a4:	fcmp	s4, s2
   4b8a8:	bif	v9.8b, v3.8b, v8.8b
   4b8ac:	b.hi	4b87c <ctanhf@@GLIBC_2.17+0x24c>  // b.pmore
   4b8b0:	fcmpe	s4, s3
   4b8b4:	b.le	4b87c <ctanhf@@GLIBC_2.17+0x24c>
   4b8b8:	add	x1, sp, #0x64
   4b8bc:	add	x0, sp, #0x60
   4b8c0:	bl	483f0 <sincosf@@GLIBC_2.17>
   4b8c4:	ldp	s0, s2, [sp, #96]
   4b8c8:	movi	v1.2s, #0x0
   4b8cc:	fmul	s0, s0, s2
   4b8d0:	bit	v1.8b, v0.8b, v8.8b
   4b8d4:	b	4b738 <ctanhf@@GLIBC_2.17+0x108>
   4b8d8:	str	d12, [sp, #64]
   4b8dc:	bl	ba70 <__stack_chk_fail@plt>

000000000004b8e0 <cexpf@@GLIBC_2.17>:
   4b8e0:	stp	x29, x30, [sp, #-80]!
   4b8e4:	fabs	s3, s0
   4b8e8:	mov	x29, sp
   4b8ec:	stp	x19, x20, [sp, #16]
   4b8f0:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4b8f4:	fcmp	s3, s3
   4b8f8:	ldr	x0, [x20, #4032]
   4b8fc:	stp	d8, d9, [sp, #32]
   4b900:	fmov	s9, s0
   4b904:	ldr	x1, [x0]
   4b908:	str	x1, [sp, #72]
   4b90c:	mov	x1, #0x0                   	// #0
   4b910:	str	d10, [sp, #48]
   4b914:	fmov	s10, s0
   4b918:	fabs	s0, s1
   4b91c:	b.vs	4baf8 <cexpf@@GLIBC_2.17+0x218>
   4b920:	mov	w0, #0x7f7fffff            	// #2139095039
   4b924:	fmov	s2, w0
   4b928:	fcmp	s3, s2
   4b92c:	b.le	4b9c0 <cexpf@@GLIBC_2.17+0xe0>
   4b930:	fcmp	s0, s0
   4b934:	b.vs	4bb60 <cexpf@@GLIBC_2.17+0x280>
   4b938:	fcmp	s0, s2
   4b93c:	b.gt	4bb60 <cexpf@@GLIBC_2.17+0x280>
   4b940:	movi	v2.2s, #0x80, lsl #16
   4b944:	fmov	s4, s1
   4b948:	fcmpe	s0, s2
   4b94c:	b.lt	4bac0 <cexpf@@GLIBC_2.17+0x1e0>  // b.tstop
   4b950:	fmov	w0, s9
   4b954:	movi	v2.2s, #0x0
   4b958:	cmp	w0, #0x0
   4b95c:	mov	w0, #0x7f800000            	// #2139095040
   4b960:	fmov	s8, w0
   4b964:	fcsel	s8, s8, s2, ge  // ge = tcont
   4b968:	movi	v2.2s, #0x80, lsl #16
   4b96c:	fcmpe	s0, s2
   4b970:	b.le	4bb58 <cexpf@@GLIBC_2.17+0x278>
   4b974:	fmov	s0, s1
   4b978:	add	x1, sp, #0x44
   4b97c:	add	x0, sp, #0x40
   4b980:	bl	483f0 <sincosf@@GLIBC_2.17>
   4b984:	ldp	s4, s0, [sp, #64]
   4b988:	movi	v1.2s, #0x80, lsl #24
   4b98c:	bif	v0.8b, v8.8b, v1.8b
   4b990:	bsl	v1.8b, v4.8b, v8.8b
   4b994:	nop
   4b998:	ldr	x20, [x20, #4032]
   4b99c:	ldr	x1, [sp, #72]
   4b9a0:	ldr	x0, [x20]
   4b9a4:	eor	x0, x1, x0
   4b9a8:	cbnz	x0, 4bb98 <cexpf@@GLIBC_2.17+0x2b8>
   4b9ac:	ldp	x19, x20, [sp, #16]
   4b9b0:	ldp	d8, d9, [sp, #32]
   4b9b4:	ldr	d10, [sp, #48]
   4b9b8:	ldp	x29, x30, [sp], #80
   4b9bc:	ret
   4b9c0:	fcmp	s0, s0
   4b9c4:	b.vs	4b9d0 <cexpf@@GLIBC_2.17+0xf0>
   4b9c8:	fcmp	s0, s2
   4b9cc:	b.le	4b9e8 <cexpf@@GLIBC_2.17+0x108>
   4b9d0:	mov	w0, #0x1                   	// #1
   4b9d4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   4b9d8:	mov	w0, #0x7fc00000            	// #2143289344
   4b9dc:	fmov	s0, w0
   4b9e0:	fmov	s1, w0
   4b9e4:	b	4b998 <cexpf@@GLIBC_2.17+0xb8>
   4b9e8:	adrp	x1, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4b9ec:	movi	v4.2s, #0x80, lsl #16
   4b9f0:	mov	x0, #0xc00000000000        	// #211106232532992
   4b9f4:	ldr	d2, [x1, #560]
   4b9f8:	movk	x0, #0x405f, lsl #48
   4b9fc:	fmov	d3, x0
   4ba00:	fcmpe	s0, s4
   4ba04:	fmul	d2, d2, d3
   4ba08:	fcvtzs	w19, d2
   4ba0c:	b.le	4bb30 <cexpf@@GLIBC_2.17+0x250>
   4ba10:	fmov	s0, s1
   4ba14:	add	x1, sp, #0x44
   4ba18:	add	x0, sp, #0x40
   4ba1c:	bl	483f0 <sincosf@@GLIBC_2.17>
   4ba20:	scvtf	s8, w19
   4ba24:	fcmpe	s9, s8
   4ba28:	b.gt	4ba7c <cexpf@@GLIBC_2.17+0x19c>
   4ba2c:	fcmpe	s8, s10
   4ba30:	b.pl	4baa0 <cexpf@@GLIBC_2.17+0x1c0>  // b.nfrst
   4ba34:	ldp	s2, s3, [sp, #64]
   4ba38:	mov	w0, #0x7f7fffff            	// #2139095039
   4ba3c:	fmov	s0, w0
   4ba40:	fmul	s2, s2, s0
   4ba44:	fmul	s3, s3, s0
   4ba48:	fmov	s1, s2
   4ba4c:	fmov	s0, s3
   4ba50:	fabs	s5, s3
   4ba54:	movi	v4.2s, #0x80, lsl #16
   4ba58:	fcmpe	s5, s4
   4ba5c:	b.pl	4ba64 <cexpf@@GLIBC_2.17+0x184>  // b.nfrst
   4ba60:	fmul	s3, s3, s3
   4ba64:	fabs	s4, s2
   4ba68:	movi	v3.2s, #0x80, lsl #16
   4ba6c:	fcmpe	s4, s3
   4ba70:	b.pl	4b998 <cexpf@@GLIBC_2.17+0xb8>  // b.nfrst
   4ba74:	fmul	s2, s2, s2
   4ba78:	b	4b998 <cexpf@@GLIBC_2.17+0xb8>
   4ba7c:	fmov	s0, s8
   4ba80:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4ba84:	fsub	s10, s9, s8
   4ba88:	ldp	s2, s1, [sp, #64]
   4ba8c:	fcmpe	s8, s10
   4ba90:	fmul	s2, s0, s2
   4ba94:	fmul	s1, s0, s1
   4ba98:	stp	s2, s1, [sp, #64]
   4ba9c:	b.mi	4bae4 <cexpf@@GLIBC_2.17+0x204>  // b.first
   4baa0:	fmov	s0, s10
   4baa4:	bl	42d58 <__expf_finite@GLIBC_2.17>
   4baa8:	ldp	s2, s3, [sp, #64]
   4baac:	fmul	s2, s0, s2
   4bab0:	fmul	s3, s0, s3
   4bab4:	fmov	s1, s2
   4bab8:	fmov	s0, s3
   4babc:	b	4ba50 <cexpf@@GLIBC_2.17+0x170>
   4bac0:	fcmp	s1, #0.0
   4bac4:	b.ne	4bb3c <cexpf@@GLIBC_2.17+0x25c>  // b.any
   4bac8:	fmov	w0, s9
   4bacc:	movi	v0.2s, #0x0
   4bad0:	cmp	w0, #0x0
   4bad4:	mov	w0, #0x7f800000            	// #2139095040
   4bad8:	fmov	s2, w0
   4badc:	fcsel	s0, s0, s2, lt  // lt = tstop
   4bae0:	b	4b998 <cexpf@@GLIBC_2.17+0xb8>
   4bae4:	fmul	s2, s2, s0
   4bae8:	fmul	s0, s1, s0
   4baec:	fsub	s10, s10, s8
   4baf0:	stp	s2, s0, [sp, #64]
   4baf4:	b	4ba2c <cexpf@@GLIBC_2.17+0x14c>
   4baf8:	fcmp	s0, s0
   4bafc:	b.vs	4bb88 <cexpf@@GLIBC_2.17+0x2a8>
   4bb00:	mov	w0, #0x7f7fffff            	// #2139095039
   4bb04:	fmov	s2, w0
   4bb08:	fcmp	s0, s2
   4bb0c:	b.gt	4b9d0 <cexpf@@GLIBC_2.17+0xf0>
   4bb10:	movi	v2.2s, #0x80, lsl #16
   4bb14:	fcmpe	s0, s2
   4bb18:	b.ge	4b9d0 <cexpf@@GLIBC_2.17+0xf0>  // b.tcont
   4bb1c:	fcmp	s1, #0.0
   4bb20:	b.ne	4b9d0 <cexpf@@GLIBC_2.17+0xf0>  // b.any
   4bb24:	mov	w0, #0x7fc00000            	// #2143289344
   4bb28:	fmov	s0, w0
   4bb2c:	b	4b998 <cexpf@@GLIBC_2.17+0xb8>
   4bb30:	fmov	s0, #1.000000000000000000e+00
   4bb34:	stp	s1, s0, [sp, #64]
   4bb38:	b	4ba20 <cexpf@@GLIBC_2.17+0x140>
   4bb3c:	fmov	w0, s9
   4bb40:	movi	v8.2s, #0x0
   4bb44:	cmp	w0, #0x0
   4bb48:	mov	w0, #0x7f800000            	// #2139095040
   4bb4c:	fmov	s2, w0
   4bb50:	fcsel	s8, s8, s2, lt  // lt = tstop
   4bb54:	b	4b968 <cexpf@@GLIBC_2.17+0x88>
   4bb58:	fmov	s0, #1.000000000000000000e+00
   4bb5c:	b	4b988 <cexpf@@GLIBC_2.17+0xa8>
   4bb60:	fmov	w0, s9
   4bb64:	tbnz	w0, #31, 4bb78 <cexpf@@GLIBC_2.17+0x298>
   4bb68:	mov	w0, #0x7f800000            	// #2139095040
   4bb6c:	fsub	s1, s1, s1
   4bb70:	fmov	s0, w0
   4bb74:	b	4b998 <cexpf@@GLIBC_2.17+0xb8>
   4bb78:	movi	v0.2s, #0x0
   4bb7c:	movi	v2.2s, #0x80, lsl #24
   4bb80:	bif	v1.8b, v0.8b, v2.8b
   4bb84:	b	4b998 <cexpf@@GLIBC_2.17+0xb8>
   4bb88:	mov	w0, #0x7fc00000            	// #2143289344
   4bb8c:	fmov	s0, w0
   4bb90:	fmov	s1, w0
   4bb94:	b	4b998 <cexpf@@GLIBC_2.17+0xb8>
   4bb98:	bl	ba70 <__stack_chk_fail@plt>
   4bb9c:	nop

000000000004bba0 <clogf@@GLIBC_2.17>:
   4bba0:	stp	x29, x30, [sp, #-64]!
   4bba4:	mov	x29, sp
   4bba8:	stp	d8, d9, [sp, #32]
   4bbac:	fabs	s8, s0
   4bbb0:	stp	d10, d11, [sp, #48]
   4bbb4:	fmov	s11, s1
   4bbb8:	fcmp	s8, s8
   4bbbc:	b.vs	4be3c <clogf@@GLIBC_2.17+0x29c>
   4bbc0:	fmov	s10, s0
   4bbc4:	mov	w0, #0x7f7fffff            	// #2139095039
   4bbc8:	fmov	s0, w0
   4bbcc:	fcmp	s8, s0
   4bbd0:	b.le	4bc68 <clogf@@GLIBC_2.17+0xc8>
   4bbd4:	fabs	s9, s1
   4bbd8:	fcmp	s9, s9
   4bbdc:	b.vs	4be58 <clogf@@GLIBC_2.17+0x2b8>
   4bbe0:	fcmpe	s9, s8
   4bbe4:	mvni	v1.2s, #0x81, lsl #24
   4bbe8:	str	x19, [sp, #16]
   4bbec:	fcsel	s2, s9, s8, gt
   4bbf0:	fcsel	s0, s8, s9, gt
   4bbf4:	fcmpe	s2, s1
   4bbf8:	fmov	s8, s2
   4bbfc:	fmov	s9, s0
   4bc00:	b.gt	4bd00 <clogf@@GLIBC_2.17+0x160>
   4bc04:	movi	v1.2s, #0x80, lsl #16
   4bc08:	fcmpe	s2, s1
   4bc0c:	b.pl	4bc18 <clogf@@GLIBC_2.17+0x78>  // b.nfrst
   4bc10:	fcmpe	s0, s1
   4bc14:	b.mi	4bd84 <clogf@@GLIBC_2.17+0x1e4>  // b.first
   4bc18:	fmov	s1, #1.000000000000000000e+00
   4bc1c:	fcmp	s2, s1
   4bc20:	b.ne	4be34 <clogf@@GLIBC_2.17+0x294>  // b.any
   4bc24:	fmul	s0, s0, s0
   4bc28:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4bc2c:	fmov	s8, #5.000000000000000000e-01
   4bc30:	movi	v1.2s, #0x80, lsl #16
   4bc34:	fmul	s8, s0, s8
   4bc38:	fcmpe	s8, s1
   4bc3c:	b.mi	4bd7c <clogf@@GLIBC_2.17+0x1dc>  // b.first
   4bc40:	fmov	s1, s10
   4bc44:	fmov	s0, s11
   4bc48:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4bc4c:	fmov	s1, s0
   4bc50:	fmov	s0, s8
   4bc54:	ldr	x19, [sp, #16]
   4bc58:	ldp	d8, d9, [sp, #32]
   4bc5c:	ldp	d10, d11, [sp, #48]
   4bc60:	ldp	x29, x30, [sp], #64
   4bc64:	ret
   4bc68:	movi	v1.2s, #0x80, lsl #16
   4bc6c:	fabs	s9, s11
   4bc70:	fcmpe	s8, s1
   4bc74:	b.ge	4bcdc <clogf@@GLIBC_2.17+0x13c>  // b.tcont
   4bc78:	fcmp	s10, #0.0
   4bc7c:	b.ne	4bcdc <clogf@@GLIBC_2.17+0x13c>  // b.any
   4bc80:	fcmp	s9, s9
   4bc84:	b.vs	4bce4 <clogf@@GLIBC_2.17+0x144>
   4bc88:	fcmp	s9, s0
   4bc8c:	b.gt	4bbe0 <clogf@@GLIBC_2.17+0x40>
   4bc90:	fcmpe	s9, s1
   4bc94:	b.ge	4bbe0 <clogf@@GLIBC_2.17+0x40>  // b.tcont
   4bc98:	fcmp	s11, #0.0
   4bc9c:	b.ne	4bbe0 <clogf@@GLIBC_2.17+0x40>  // b.any
   4bca0:	fmov	w0, s10
   4bca4:	movi	v0.2s, #0x0
   4bca8:	movi	v1.2s, #0x80, lsl #24
   4bcac:	fmov	s2, #-1.000000000000000000e+00
   4bcb0:	cmp	w0, #0x0
   4bcb4:	mov	w0, #0xfdb                 	// #4059
   4bcb8:	movk	w0, #0x4049, lsl #16
   4bcbc:	fmov	s3, w0
   4bcc0:	fcsel	s3, s3, s0, lt  // lt = tstop
   4bcc4:	fdiv	s0, s2, s8
   4bcc8:	ldp	d8, d9, [sp, #32]
   4bccc:	bsl	v1.8b, v11.8b, v3.8b
   4bcd0:	ldp	d10, d11, [sp, #48]
   4bcd4:	ldp	x29, x30, [sp], #64
   4bcd8:	ret
   4bcdc:	fcmp	s9, s9
   4bce0:	b.vc	4bbe0 <clogf@@GLIBC_2.17+0x40>
   4bce4:	mov	w0, #0x7fc00000            	// #2143289344
   4bce8:	fmov	s0, w0
   4bcec:	fmov	s1, w0
   4bcf0:	ldp	d8, d9, [sp, #32]
   4bcf4:	ldp	d10, d11, [sp, #48]
   4bcf8:	ldp	x29, x30, [sp], #64
   4bcfc:	ret
   4bd00:	fmov	s0, s2
   4bd04:	mov	w0, #0xffffffff            	// #-1
   4bd08:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4bd0c:	fmov	s8, s0
   4bd10:	movi	v1.2s, #0x1, lsl #24
   4bd14:	fcmpe	s9, s1
   4bd18:	b.ge	4bdac <clogf@@GLIBC_2.17+0x20c>  // b.tcont
   4bd1c:	movi	v9.2s, #0x0
   4bd20:	mov	w19, #0xffffffff            	// #-1
   4bd24:	fmov	s0, #1.000000000000000000e+00
   4bd28:	fcmpe	s8, s0
   4bd2c:	b.le	4bd48 <clogf@@GLIBC_2.17+0x1a8>
   4bd30:	fmov	s1, #2.000000000000000000e+00
   4bd34:	fcmpe	s8, s1
   4bd38:	b.pl	4bd48 <clogf@@GLIBC_2.17+0x1a8>  // b.nfrst
   4bd3c:	cmp	w19, #0x0
   4bd40:	fccmpe	s9, s0, #0x0, eq  // eq = none
   4bd44:	b.mi	4be6c <clogf@@GLIBC_2.17+0x2cc>  // b.first
   4bd48:	fmov	s1, #1.000000000000000000e+00
   4bd4c:	fcmpe	s8, s1
   4bd50:	b.mi	4bdc4 <clogf@@GLIBC_2.17+0x224>  // b.first
   4bd54:	fmov	s1, s9
   4bd58:	fmov	s0, s8
   4bd5c:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   4bd60:	bl	45298 <__logf_finite@GLIBC_2.17>
   4bd64:	scvtf	s8, w19
   4bd68:	mov	w0, #0x7218                	// #29208
   4bd6c:	movk	w0, #0x3f31, lsl #16
   4bd70:	fmov	s1, w0
   4bd74:	fmsub	s8, s8, s1, s0
   4bd78:	b	4bc40 <clogf@@GLIBC_2.17+0xa0>
   4bd7c:	fmul	s0, s8, s8
   4bd80:	b	4bc40 <clogf@@GLIBC_2.17+0xa0>
   4bd84:	fmov	s0, s2
   4bd88:	mov	w0, #0x18                  	// #24
   4bd8c:	mov	w19, w0
   4bd90:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4bd94:	fmov	s8, s0
   4bd98:	fmov	s0, s9
   4bd9c:	mov	w0, w19
   4bda0:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4bda4:	fmov	s9, s0
   4bda8:	b	4bd24 <clogf@@GLIBC_2.17+0x184>
   4bdac:	fmov	s0, s9
   4bdb0:	mov	w0, #0xffffffff            	// #-1
   4bdb4:	mov	w19, w0
   4bdb8:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4bdbc:	fmov	s9, s0
   4bdc0:	b	4bd24 <clogf@@GLIBC_2.17+0x184>
   4bdc4:	str	d12, [sp, #24]
   4bdc8:	fmov	s12, #5.000000000000000000e-01
   4bdcc:	cmp	w19, #0x0
   4bdd0:	cset	w0, eq  // eq = none
   4bdd4:	fcmpe	s8, s12
   4bdd8:	b.lt	4bdf0 <clogf@@GLIBC_2.17+0x250>  // b.tstop
   4bddc:	cmp	w0, #0x0
   4bde0:	mov	w1, #0x33800000            	// #864026624
   4bde4:	fmov	s0, w1
   4bde8:	fccmpe	s9, s0, #0x0, ne  // ne = any
   4bdec:	b.mi	4be9c <clogf@@GLIBC_2.17+0x2fc>  // b.first
   4bdf0:	cmp	w0, #0x0
   4bdf4:	fmov	s12, #5.000000000000000000e-01
   4bdf8:	fccmpe	s8, s12, #0x1, ne  // ne = any
   4bdfc:	b.ge	4be08 <clogf@@GLIBC_2.17+0x268>  // b.tcont
   4be00:	ldr	d12, [sp, #24]
   4be04:	b	4bd54 <clogf@@GLIBC_2.17+0x1b4>
   4be08:	fmul	s0, s9, s9
   4be0c:	fmadd	s0, s8, s8, s0
   4be10:	fcmpe	s0, s12
   4be14:	b.lt	4be00 <clogf@@GLIBC_2.17+0x260>  // b.tstop
   4be18:	fmov	s0, s8
   4be1c:	fmov	s1, s9
   4be20:	bl	48970 <ldexpf@@GLIBC_2.17+0x78>
   4be24:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4be28:	fmul	s8, s0, s12
   4be2c:	ldr	d12, [sp, #24]
   4be30:	b	4bc40 <clogf@@GLIBC_2.17+0xa0>
   4be34:	mov	w19, #0x0                   	// #0
   4be38:	b	4bd24 <clogf@@GLIBC_2.17+0x184>
   4be3c:	fabs	s1, s1
   4be40:	fcmp	s1, s1
   4be44:	b.vs	4bce4 <clogf@@GLIBC_2.17+0x144>
   4be48:	mov	w0, #0x7f7fffff            	// #2139095039
   4be4c:	fmov	s0, w0
   4be50:	fcmp	s1, s0
   4be54:	b.le	4bce4 <clogf@@GLIBC_2.17+0x144>
   4be58:	mov	w0, #0x7f800000            	// #2139095040
   4be5c:	mov	w1, #0x7fc00000            	// #2143289344
   4be60:	fmov	s0, w0
   4be64:	fmov	s1, w1
   4be68:	b	4bc58 <clogf@@GLIBC_2.17+0xb8>
   4be6c:	movi	v2.2s, #0x34, lsl #24
   4be70:	fsub	s1, s8, s0
   4be74:	fadd	s8, s8, s0
   4be78:	fcmpe	s9, s2
   4be7c:	fmul	s0, s1, s8
   4be80:	b.lt	4be88 <clogf@@GLIBC_2.17+0x2e8>  // b.tstop
   4be84:	fmadd	s0, s9, s9, s0
   4be88:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4be8c:	fmov	s8, s0
   4be90:	fmov	s0, #5.000000000000000000e-01
   4be94:	fmul	s8, s8, s0
   4be98:	b	4bc40 <clogf@@GLIBC_2.17+0xa0>
   4be9c:	fsub	s0, s8, s1
   4bea0:	fadd	s8, s8, s1
   4bea4:	fmul	s0, s0, s8
   4bea8:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4beac:	fmul	s8, s0, s12
   4beb0:	ldr	d12, [sp, #24]
   4beb4:	b	4bc40 <clogf@@GLIBC_2.17+0xa0>

000000000004beb8 <cprojf@@GLIBC_2.17>:
   4beb8:	fmov	s2, s1
   4bebc:	fabs	s1, s0
   4bec0:	mov	w0, #0x7f7fffff            	// #2139095039
   4bec4:	fmov	s3, w0
   4bec8:	fcmp	s1, s3
   4becc:	b.gt	4bee4 <cprojf@@GLIBC_2.17+0x2c>
   4bed0:	fabs	s4, s2
   4bed4:	fmov	s1, s2
   4bed8:	fcmp	s4, s3
   4bedc:	b.gt	4bee4 <cprojf@@GLIBC_2.17+0x2c>
   4bee0:	ret
   4bee4:	movi	v3.2s, #0x80, lsl #24
   4bee8:	movi	v1.2s, #0x0
   4beec:	mov	w0, #0x7f800000            	// #2139095040
   4bef0:	fmov	s0, w0
   4bef4:	bit	v1.8b, v2.8b, v3.8b
   4bef8:	ret
   4befc:	nop

000000000004bf00 <csqrtf@@GLIBC_2.17>:
   4bf00:	fabs	s3, s0
   4bf04:	stp	x29, x30, [sp, #-64]!
   4bf08:	mov	x29, sp
   4bf0c:	stp	d10, d11, [sp, #48]
   4bf10:	fmov	s10, s1
   4bf14:	fcmp	s3, s3
   4bf18:	fmov	s11, s1
   4bf1c:	fabs	s1, s1
   4bf20:	b.vs	4c218 <csqrtf@@GLIBC_2.17+0x318>
   4bf24:	mov	w0, #0x7f7fffff            	// #2139095039
   4bf28:	fmov	s4, w0
   4bf2c:	fcmp	s3, s4
   4bf30:	b.le	4bf60 <csqrtf@@GLIBC_2.17+0x60>
   4bf34:	fcmp	s1, s1
   4bf38:	b.vs	4c31c <csqrtf@@GLIBC_2.17+0x41c>
   4bf3c:	fcmp	s1, s4
   4bf40:	b.gt	4bfe0 <csqrtf@@GLIBC_2.17+0xe0>
   4bf44:	fcmpe	s0, #0.0
   4bf48:	b.mi	4c290 <csqrtf@@GLIBC_2.17+0x390>  // b.first
   4bf4c:	movi	v1.2s, #0x0
   4bf50:	movi	v2.2s, #0x80, lsl #24
   4bf54:	bif	v10.8b, v1.8b, v2.8b
   4bf58:	fmov	s1, s10
   4bf5c:	b	4bfec <csqrtf@@GLIBC_2.17+0xec>
   4bf60:	movi	v2.2s, #0x80, lsl #16
   4bf64:	str	x19, [sp, #16]
   4bf68:	stp	d8, d9, [sp, #32]
   4bf6c:	fmov	s9, s0
   4bf70:	fcmpe	s3, s2
   4bf74:	b.ge	4bff8 <csqrtf@@GLIBC_2.17+0xf8>  // b.tcont
   4bf78:	fcmp	s0, #0.0
   4bf7c:	b.ne	4bfc8 <csqrtf@@GLIBC_2.17+0xc8>  // b.any
   4bf80:	fcmp	s1, s1
   4bf84:	b.vs	4c304 <csqrtf@@GLIBC_2.17+0x404>
   4bf88:	fcmp	s1, s4
   4bf8c:	b.gt	4bfd8 <csqrtf@@GLIBC_2.17+0xd8>
   4bf90:	fcmpe	s1, s2
   4bf94:	b.lt	4c284 <csqrtf@@GLIBC_2.17+0x384>  // b.tstop
   4bf98:	movi	v0.2s, #0x1, lsl #24
   4bf9c:	fcmpe	s1, s0
   4bfa0:	b.ge	4c250 <csqrtf@@GLIBC_2.17+0x350>  // b.tcont
   4bfa4:	fadd	s0, s1, s1
   4bfa8:	fmov	s3, #5.000000000000000000e-01
   4bfac:	fsqrt	s0, s0
   4bfb0:	fmul	s0, s0, s3
   4bfb4:	movi	v1.2s, #0x80, lsl #24
   4bfb8:	ldr	x19, [sp, #16]
   4bfbc:	ldp	d8, d9, [sp, #32]
   4bfc0:	bsl	v1.8b, v10.8b, v0.8b
   4bfc4:	b	4bfec <csqrtf@@GLIBC_2.17+0xec>
   4bfc8:	fcmp	s1, s1
   4bfcc:	b.vs	4c304 <csqrtf@@GLIBC_2.17+0x404>
   4bfd0:	fcmp	s1, s4
   4bfd4:	b.le	4c1dc <csqrtf@@GLIBC_2.17+0x2dc>
   4bfd8:	ldr	x19, [sp, #16]
   4bfdc:	ldp	d8, d9, [sp, #32]
   4bfe0:	fmov	s1, s10
   4bfe4:	mov	w0, #0x7f800000            	// #2139095040
   4bfe8:	fmov	s0, w0
   4bfec:	ldp	d10, d11, [sp, #48]
   4bff0:	ldp	x29, x30, [sp], #64
   4bff4:	ret
   4bff8:	fcmp	s1, s1
   4bffc:	b.vs	4c304 <csqrtf@@GLIBC_2.17+0x404>
   4c000:	fcmp	s1, s4
   4c004:	b.gt	4bfd8 <csqrtf@@GLIBC_2.17+0xd8>
   4c008:	fcmpe	s1, s2
   4c00c:	b.ge	4c018 <csqrtf@@GLIBC_2.17+0x118>  // b.tcont
   4c010:	fcmp	s10, #0.0
   4c014:	b.eq	4c1f0 <csqrtf@@GLIBC_2.17+0x2f0>  // b.none
   4c018:	mov	w0, #0x7e7fffff            	// #2122317823
   4c01c:	fmov	s4, w0
   4c020:	fcmpe	s3, s4
   4c024:	b.gt	4c174 <csqrtf@@GLIBC_2.17+0x274>
   4c028:	fcmpe	s1, s4
   4c02c:	b.le	4c100 <csqrtf@@GLIBC_2.17+0x200>
   4c030:	mov	w0, #0x1800000             	// #25165824
   4c034:	fmov	s1, w0
   4c038:	movi	v9.2s, #0x0
   4c03c:	fcmpe	s3, s1
   4c040:	b.ge	4c240 <csqrtf@@GLIBC_2.17+0x340>  // b.tcont
   4c044:	fmov	s0, s10
   4c048:	mov	w0, #0xfffffffe            	// #-2
   4c04c:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c050:	fmov	s11, s0
   4c054:	fmov	s0, s9
   4c058:	fmov	s1, s11
   4c05c:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   4c060:	fcmpe	s9, #0.0
   4c064:	fmov	s8, s0
   4c068:	fabs	s0, s11
   4c06c:	b.le	4c1ac <csqrtf@@GLIBC_2.17+0x2ac>
   4c070:	fadd	s8, s9, s8
   4c074:	fmov	s10, #5.000000000000000000e-01
   4c078:	fmov	s1, #1.000000000000000000e+00
   4c07c:	fcmpe	s0, s1
   4c080:	fmul	s8, s8, s10
   4c084:	fsqrt	s8, s8
   4c088:	b.mi	4c2a8 <csqrtf@@GLIBC_2.17+0x3a8>  // b.first
   4c08c:	fdiv	s2, s11, s8
   4c090:	mov	w19, #0x1                   	// #1
   4c094:	fmul	s10, s2, s10
   4c098:	fmov	s0, s8
   4c09c:	mov	w0, w19
   4c0a0:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c0a4:	fmov	s8, s0
   4c0a8:	fmov	s0, s10
   4c0ac:	mov	w0, w19
   4c0b0:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c0b4:	fabs	s1, s8
   4c0b8:	fmov	s10, s0
   4c0bc:	movi	v0.2s, #0x80, lsl #16
   4c0c0:	fcmpe	s1, s0
   4c0c4:	b.pl	4c0cc <csqrtf@@GLIBC_2.17+0x1cc>  // b.nfrst
   4c0c8:	fmul	s0, s8, s8
   4c0cc:	fabs	s1, s10
   4c0d0:	movi	v0.2s, #0x80, lsl #16
   4c0d4:	fcmpe	s1, s0
   4c0d8:	b.pl	4c0e0 <csqrtf@@GLIBC_2.17+0x1e0>  // b.nfrst
   4c0dc:	fmul	s0, s10, s10
   4c0e0:	movi	v1.2s, #0x80, lsl #24
   4c0e4:	fmov	s0, s8
   4c0e8:	ldr	x19, [sp, #16]
   4c0ec:	ldp	d8, d9, [sp, #32]
   4c0f0:	bsl	v1.8b, v11.8b, v10.8b
   4c0f4:	ldp	d10, d11, [sp, #48]
   4c0f8:	ldp	x29, x30, [sp], #64
   4c0fc:	ret
   4c100:	movi	v2.2s, #0x1, lsl #24
   4c104:	fcmpe	s3, s2
   4c108:	b.pl	4c114 <csqrtf@@GLIBC_2.17+0x214>  // b.nfrst
   4c10c:	fcmpe	s1, s2
   4c110:	b.mi	4c260 <csqrtf@@GLIBC_2.17+0x360>  // b.first
   4c114:	mov	w19, #0x0                   	// #0
   4c118:	fmov	s1, s11
   4c11c:	fmov	s0, s9
   4c120:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   4c124:	fcmpe	s9, #0.0
   4c128:	fmov	s8, s0
   4c12c:	b.gt	4c158 <csqrtf@@GLIBC_2.17+0x258>
   4c130:	fsub	s8, s8, s9
   4c134:	fmov	s0, #5.000000000000000000e-01
   4c138:	fmul	s2, s8, s0
   4c13c:	fsqrt	s10, s2
   4c140:	fdiv	s8, s11, s10
   4c144:	fmul	s8, s8, s0
   4c148:	fabs	s8, s8
   4c14c:	cbnz	w19, 4c098 <csqrtf@@GLIBC_2.17+0x198>
   4c150:	fabs	s1, s8
   4c154:	b	4c0bc <csqrtf@@GLIBC_2.17+0x1bc>
   4c158:	fadd	s8, s8, s9
   4c15c:	fmov	s10, #5.000000000000000000e-01
   4c160:	fmul	s8, s8, s10
   4c164:	fsqrt	s8, s8
   4c168:	fdiv	s2, s11, s8
   4c16c:	fmul	s10, s2, s10
   4c170:	b	4c14c <csqrtf@@GLIBC_2.17+0x24c>
   4c174:	mov	w0, #0xfffffffe            	// #-2
   4c178:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c17c:	fmov	s9, s0
   4c180:	fmov	s0, s10
   4c184:	mov	w0, #0xfffffffe            	// #-2
   4c188:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c18c:	fmov	s11, s0
   4c190:	fmov	s0, s9
   4c194:	fmov	s1, s11
   4c198:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   4c19c:	fcmpe	s9, #0.0
   4c1a0:	fmov	s8, s0
   4c1a4:	fabs	s0, s11
   4c1a8:	b.gt	4c070 <csqrtf@@GLIBC_2.17+0x170>
   4c1ac:	fsub	s8, s8, s9
   4c1b0:	fmov	s2, #1.000000000000000000e+00
   4c1b4:	fmov	s1, #5.000000000000000000e-01
   4c1b8:	fcmpe	s0, s2
   4c1bc:	fmul	s2, s8, s1
   4c1c0:	fsqrt	s10, s2
   4c1c4:	b.mi	4c2e4 <csqrtf@@GLIBC_2.17+0x3e4>  // b.first
   4c1c8:	fdiv	s8, s11, s10
   4c1cc:	mov	w19, #0x1                   	// #1
   4c1d0:	fmul	s8, s8, s1
   4c1d4:	fabs	s8, s8
   4c1d8:	b	4c098 <csqrtf@@GLIBC_2.17+0x198>
   4c1dc:	fcmpe	s1, s2
   4c1e0:	b.ge	4c018 <csqrtf@@GLIBC_2.17+0x118>  // b.tcont
   4c1e4:	fcmp	s10, #0.0
   4c1e8:	b.ne	4c018 <csqrtf@@GLIBC_2.17+0x118>  // b.any
   4c1ec:	nop
   4c1f0:	fcmpe	s0, #0.0
   4c1f4:	b.mi	4c2c4 <csqrtf@@GLIBC_2.17+0x3c4>  // b.first
   4c1f8:	fsqrt	s8, s0
   4c1fc:	movi	v1.2s, #0x0
   4c200:	movi	v2.2s, #0x80, lsl #24
   4c204:	ldr	x19, [sp, #16]
   4c208:	bit	v1.8b, v10.8b, v2.8b
   4c20c:	fabs	s0, s8
   4c210:	ldp	d8, d9, [sp, #32]
   4c214:	b	4bfec <csqrtf@@GLIBC_2.17+0xec>
   4c218:	fcmp	s1, s1
   4c21c:	b.vs	4c230 <csqrtf@@GLIBC_2.17+0x330>
   4c220:	mov	w0, #0x7f7fffff            	// #2139095039
   4c224:	fmov	s0, w0
   4c228:	fcmp	s1, s0
   4c22c:	b.gt	4bfe0 <csqrtf@@GLIBC_2.17+0xe0>
   4c230:	mov	w0, #0x7fc00000            	// #2143289344
   4c234:	fmov	s0, w0
   4c238:	fmov	s1, w0
   4c23c:	b	4bfec <csqrtf@@GLIBC_2.17+0xec>
   4c240:	mov	w0, #0xfffffffe            	// #-2
   4c244:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c248:	fmov	s9, s0
   4c24c:	b	4c044 <csqrtf@@GLIBC_2.17+0x144>
   4c250:	fmov	s0, #5.000000000000000000e-01
   4c254:	fmul	s0, s1, s0
   4c258:	fsqrt	s0, s0
   4c25c:	b	4bfb4 <csqrtf@@GLIBC_2.17+0xb4>
   4c260:	mov	w0, #0x18                  	// #24
   4c264:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c268:	fmov	s9, s0
   4c26c:	fmov	s0, s10
   4c270:	mov	w0, #0x18                  	// #24
   4c274:	mov	w19, #0xfffffff4            	// #-12
   4c278:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c27c:	fmov	s11, s0
   4c280:	b	4c118 <csqrtf@@GLIBC_2.17+0x218>
   4c284:	fcmp	s10, #0.0
   4c288:	b.eq	4c1f0 <csqrtf@@GLIBC_2.17+0x2f0>  // b.none
   4c28c:	b	4bf98 <csqrtf@@GLIBC_2.17+0x98>
   4c290:	movi	v0.2s, #0x0
   4c294:	movi	v2.2s, #0x80, lsl #24
   4c298:	mov	w0, #0x7f800000            	// #2139095040
   4c29c:	fmov	s1, w0
   4c2a0:	bit	v1.8b, v10.8b, v2.8b
   4c2a4:	b	4bfec <csqrtf@@GLIBC_2.17+0xec>
   4c2a8:	fdiv	s10, s11, s8
   4c2ac:	fmov	s0, s8
   4c2b0:	mov	w0, #0x1                   	// #1
   4c2b4:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c2b8:	fmov	s8, s0
   4c2bc:	fabs	s1, s0
   4c2c0:	b	4c0bc <csqrtf@@GLIBC_2.17+0x1bc>
   4c2c4:	fneg	s1, s0
   4c2c8:	movi	v2.2s, #0x80, lsl #24
   4c2cc:	movi	v0.2s, #0x0
   4c2d0:	ldr	x19, [sp, #16]
   4c2d4:	fsqrt	s1, s1
   4c2d8:	ldp	d8, d9, [sp, #32]
   4c2dc:	bit	v1.8b, v10.8b, v2.8b
   4c2e0:	b	4bfec <csqrtf@@GLIBC_2.17+0xec>
   4c2e4:	fdiv	s8, s11, s10
   4c2e8:	fmov	s0, s10
   4c2ec:	mov	w0, #0x1                   	// #1
   4c2f0:	fabs	s8, s8
   4c2f4:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c2f8:	fmov	s1, s8
   4c2fc:	fmov	s10, s0
   4c300:	b	4c0bc <csqrtf@@GLIBC_2.17+0x1bc>
   4c304:	mov	w0, #0x7fc00000            	// #2143289344
   4c308:	fmov	s0, w0
   4c30c:	fmov	s1, w0
   4c310:	ldr	x19, [sp, #16]
   4c314:	ldp	d8, d9, [sp, #32]
   4c318:	b	4bfec <csqrtf@@GLIBC_2.17+0xec>
   4c31c:	fcmpe	s0, #0.0
   4c320:	mov	w0, #0x7fc00000            	// #2143289344
   4c324:	b.mi	4c334 <csqrtf@@GLIBC_2.17+0x434>  // b.first
   4c328:	fmov	s10, w0
   4c32c:	fmov	s1, s10
   4c330:	b	4bfec <csqrtf@@GLIBC_2.17+0xec>
   4c334:	fmov	s0, w0
   4c338:	b	4c294 <csqrtf@@GLIBC_2.17+0x394>
   4c33c:	nop

000000000004c340 <cpowf@@GLIBC_2.17>:
   4c340:	stp	x29, x30, [sp, #-32]!
   4c344:	mov	x29, sp
   4c348:	stp	d8, d9, [sp, #16]
   4c34c:	fmov	s8, s2
   4c350:	fmov	s9, s3
   4c354:	bl	4bba0 <clogf@@GLIBC_2.17>
   4c358:	fmul	s5, s8, s1
   4c35c:	fmul	s4, s9, s1
   4c360:	fmadd	s5, s9, s0, s5
   4c364:	fnmsub	s4, s8, s0, s4
   4c368:	fcmp	s4, s5
   4c36c:	b.vs	4c384 <cpowf@@GLIBC_2.17+0x44>
   4c370:	ldp	d8, d9, [sp, #16]
   4c374:	fmov	s0, s4
   4c378:	ldp	x29, x30, [sp], #32
   4c37c:	fmov	s1, s5
   4c380:	b	4b8e0 <cexpf@@GLIBC_2.17>
   4c384:	fmov	s3, s9
   4c388:	fmov	s2, s8
   4c38c:	bl	53f60 <f64xsubf128@@GLIBC_2.28+0x1e0>
   4c390:	fmov	s4, s0
   4c394:	fmov	s5, s1
   4c398:	b	4c370 <cpowf@@GLIBC_2.17+0x30>
   4c39c:	nop

000000000004c3a0 <__clog10f@@GLIBC_2.17>:
   4c3a0:	stp	x29, x30, [sp, #-64]!
   4c3a4:	mov	x29, sp
   4c3a8:	stp	d8, d9, [sp, #32]
   4c3ac:	fabs	s8, s0
   4c3b0:	stp	d10, d11, [sp, #48]
   4c3b4:	fmov	s11, s1
   4c3b8:	fcmp	s8, s8
   4c3bc:	b.vs	4c658 <__clog10f@@GLIBC_2.17+0x2b8>
   4c3c0:	fmov	s10, s0
   4c3c4:	mov	w0, #0x7f7fffff            	// #2139095039
   4c3c8:	fmov	s0, w0
   4c3cc:	fcmp	s8, s0
   4c3d0:	b.le	4c484 <__clog10f@@GLIBC_2.17+0xe4>
   4c3d4:	fabs	s9, s1
   4c3d8:	fcmp	s9, s9
   4c3dc:	b.vs	4c674 <__clog10f@@GLIBC_2.17+0x2d4>
   4c3e0:	fcmpe	s9, s8
   4c3e4:	mvni	v1.2s, #0x81, lsl #24
   4c3e8:	str	x19, [sp, #16]
   4c3ec:	fcsel	s2, s9, s8, gt
   4c3f0:	fcsel	s0, s8, s9, gt
   4c3f4:	fcmpe	s2, s1
   4c3f8:	fmov	s8, s2
   4c3fc:	fmov	s9, s0
   4c400:	b.gt	4c51c <__clog10f@@GLIBC_2.17+0x17c>
   4c404:	movi	v1.2s, #0x80, lsl #16
   4c408:	fcmpe	s2, s1
   4c40c:	b.pl	4c418 <__clog10f@@GLIBC_2.17+0x78>  // b.nfrst
   4c410:	fcmpe	s0, s1
   4c414:	b.mi	4c5a0 <__clog10f@@GLIBC_2.17+0x200>  // b.first
   4c418:	fmov	s1, #1.000000000000000000e+00
   4c41c:	fcmp	s2, s1
   4c420:	b.ne	4c650 <__clog10f@@GLIBC_2.17+0x2b0>  // b.any
   4c424:	fmul	s0, s0, s0
   4c428:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4c42c:	mov	w0, #0x5bd9                	// #23513
   4c430:	movi	v1.2s, #0x80, lsl #16
   4c434:	movk	w0, #0x3e5e, lsl #16
   4c438:	fmov	s8, w0
   4c43c:	fmul	s8, s0, s8
   4c440:	fcmpe	s8, s1
   4c444:	b.mi	4c598 <__clog10f@@GLIBC_2.17+0x1f8>  // b.first
   4c448:	fmov	s1, s10
   4c44c:	fmov	s0, s11
   4c450:	bl	42918 <__atan2f_finite@GLIBC_2.17>
   4c454:	fmov	s1, s0
   4c458:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   4c45c:	fmov	s0, s8
   4c460:	ldr	x19, [sp, #16]
   4c464:	fcvt	d1, s1
   4c468:	ldr	d2, [x0, #104]
   4c46c:	fmul	d1, d1, d2
   4c470:	fcvt	s1, d1
   4c474:	ldp	d8, d9, [sp, #32]
   4c478:	ldp	d10, d11, [sp, #48]
   4c47c:	ldp	x29, x30, [sp], #64
   4c480:	ret
   4c484:	movi	v1.2s, #0x80, lsl #16
   4c488:	fabs	s9, s11
   4c48c:	fcmpe	s8, s1
   4c490:	b.ge	4c4f8 <__clog10f@@GLIBC_2.17+0x158>  // b.tcont
   4c494:	fcmp	s10, #0.0
   4c498:	b.ne	4c4f8 <__clog10f@@GLIBC_2.17+0x158>  // b.any
   4c49c:	fcmp	s9, s9
   4c4a0:	b.vs	4c500 <__clog10f@@GLIBC_2.17+0x160>
   4c4a4:	fcmp	s9, s0
   4c4a8:	b.gt	4c3e0 <__clog10f@@GLIBC_2.17+0x40>
   4c4ac:	fcmpe	s9, s1
   4c4b0:	b.ge	4c3e0 <__clog10f@@GLIBC_2.17+0x40>  // b.tcont
   4c4b4:	fcmp	s11, #0.0
   4c4b8:	b.ne	4c3e0 <__clog10f@@GLIBC_2.17+0x40>  // b.any
   4c4bc:	fmov	w0, s10
   4c4c0:	movi	v3.2s, #0x0
   4c4c4:	movi	v1.2s, #0x80, lsl #24
   4c4c8:	fmov	s0, #-1.000000000000000000e+00
   4c4cc:	fdiv	s0, s0, s8
   4c4d0:	cmp	w0, #0x0
   4c4d4:	mov	w0, #0xa3e2                	// #41954
   4c4d8:	movk	w0, #0x3fae, lsl #16
   4c4dc:	fmov	s2, w0
   4c4e0:	ldp	d8, d9, [sp, #32]
   4c4e4:	fcsel	s2, s2, s3, lt  // lt = tstop
   4c4e8:	bsl	v1.8b, v11.8b, v2.8b
   4c4ec:	ldp	d10, d11, [sp, #48]
   4c4f0:	ldp	x29, x30, [sp], #64
   4c4f4:	ret
   4c4f8:	fcmp	s9, s9
   4c4fc:	b.vc	4c3e0 <__clog10f@@GLIBC_2.17+0x40>
   4c500:	mov	w0, #0x7fc00000            	// #2143289344
   4c504:	fmov	s0, w0
   4c508:	fmov	s1, w0
   4c50c:	ldp	d8, d9, [sp, #32]
   4c510:	ldp	d10, d11, [sp, #48]
   4c514:	ldp	x29, x30, [sp], #64
   4c518:	ret
   4c51c:	fmov	s0, s2
   4c520:	mov	w0, #0xffffffff            	// #-1
   4c524:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c528:	fmov	s8, s0
   4c52c:	movi	v1.2s, #0x1, lsl #24
   4c530:	fcmpe	s9, s1
   4c534:	b.ge	4c5c8 <__clog10f@@GLIBC_2.17+0x228>  // b.tcont
   4c538:	movi	v9.2s, #0x0
   4c53c:	mov	w19, #0xffffffff            	// #-1
   4c540:	fmov	s0, #1.000000000000000000e+00
   4c544:	fcmpe	s8, s0
   4c548:	b.le	4c564 <__clog10f@@GLIBC_2.17+0x1c4>
   4c54c:	fmov	s1, #2.000000000000000000e+00
   4c550:	fcmpe	s8, s1
   4c554:	b.pl	4c564 <__clog10f@@GLIBC_2.17+0x1c4>  // b.nfrst
   4c558:	cmp	w19, #0x0
   4c55c:	fccmpe	s9, s0, #0x0, eq  // eq = none
   4c560:	b.mi	4c688 <__clog10f@@GLIBC_2.17+0x2e8>  // b.first
   4c564:	fmov	s1, #1.000000000000000000e+00
   4c568:	fcmpe	s8, s1
   4c56c:	b.mi	4c5e0 <__clog10f@@GLIBC_2.17+0x240>  // b.first
   4c570:	fmov	s1, s9
   4c574:	fmov	s0, s8
   4c578:	bl	42fb0 <__hypotf_finite@GLIBC_2.17>
   4c57c:	bl	45380 <__log10f_finite@GLIBC_2.17>
   4c580:	scvtf	s8, w19
   4c584:	mov	w0, #0x209b                	// #8347
   4c588:	movk	w0, #0x3e9a, lsl #16
   4c58c:	fmov	s1, w0
   4c590:	fmsub	s8, s8, s1, s0
   4c594:	b	4c448 <__clog10f@@GLIBC_2.17+0xa8>
   4c598:	fmul	s0, s8, s8
   4c59c:	b	4c448 <__clog10f@@GLIBC_2.17+0xa8>
   4c5a0:	fmov	s0, s2
   4c5a4:	mov	w0, #0x18                  	// #24
   4c5a8:	mov	w19, w0
   4c5ac:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c5b0:	fmov	s8, s0
   4c5b4:	fmov	s0, s9
   4c5b8:	mov	w0, w19
   4c5bc:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c5c0:	fmov	s9, s0
   4c5c4:	b	4c540 <__clog10f@@GLIBC_2.17+0x1a0>
   4c5c8:	fmov	s0, s9
   4c5cc:	mov	w0, #0xffffffff            	// #-1
   4c5d0:	mov	w19, w0
   4c5d4:	bl	487b0 <modff@@GLIBC_2.17+0x88>
   4c5d8:	fmov	s9, s0
   4c5dc:	b	4c540 <__clog10f@@GLIBC_2.17+0x1a0>
   4c5e0:	fmov	s0, #5.000000000000000000e-01
   4c5e4:	cmp	w19, #0x0
   4c5e8:	cset	w0, eq  // eq = none
   4c5ec:	fcmpe	s8, s0
   4c5f0:	b.lt	4c608 <__clog10f@@GLIBC_2.17+0x268>  // b.tstop
   4c5f4:	cmp	w0, #0x0
   4c5f8:	mov	w1, #0x33800000            	// #864026624
   4c5fc:	fmov	s0, w1
   4c600:	fccmpe	s9, s0, #0x0, ne  // ne = any
   4c604:	b.mi	4c6a8 <__clog10f@@GLIBC_2.17+0x308>  // b.first
   4c608:	cmp	w0, #0x0
   4c60c:	fmov	s0, #5.000000000000000000e-01
   4c610:	fccmpe	s8, s0, #0x1, ne  // ne = any
   4c614:	b.lt	4c570 <__clog10f@@GLIBC_2.17+0x1d0>  // b.tstop
   4c618:	fmul	s1, s9, s9
   4c61c:	fmadd	s1, s8, s8, s1
   4c620:	fcmpe	s1, s0
   4c624:	b.lt	4c570 <__clog10f@@GLIBC_2.17+0x1d0>  // b.tstop
   4c628:	fmov	s1, s9
   4c62c:	fmov	s0, s8
   4c630:	bl	48970 <ldexpf@@GLIBC_2.17+0x78>
   4c634:	bl	47678 <floorf@@GLIBC_2.17+0x8>
   4c638:	fmov	s8, s0
   4c63c:	mov	w0, #0x5bd9                	// #23513
   4c640:	movk	w0, #0x3e5e, lsl #16
   4c644:	fmov	s0, w0
   4c648:	fmul	s8, s8, s0
   4c64c:	b	4c448 <__clog10f@@GLIBC_2.17+0xa8>
   4c650:	mov	w19, #0x0                   	// #0
   4c654:	b	4c540 <__clog10f@@GLIBC_2.17+0x1a0>
   4c658:	fabs	s1, s1
   4c65c:	fcmp	s1, s1
   4c660:	b.vs	4c500 <__clog10f@@GLIBC_2.17+0x160>
   4c664:	mov	w0, #0x7f7fffff            	// #2139095039
   4c668:	fmov	s0, w0
   4c66c:	fcmp	s1, s0
   4c670:	b.le	4c500 <__clog10f@@GLIBC_2.17+0x160>
   4c674:	mov	w1, #0x7f800000            	// #2139095040
   4c678:	mov	w0, #0x7fc00000            	// #2143289344
   4c67c:	fmov	s0, w1
   4c680:	fmov	s1, w0
   4c684:	b	4c474 <__clog10f@@GLIBC_2.17+0xd4>
   4c688:	movi	v2.2s, #0x34, lsl #24
   4c68c:	fsub	s1, s8, s0
   4c690:	fadd	s8, s8, s0
   4c694:	fcmpe	s9, s2
   4c698:	fmul	s0, s1, s8
   4c69c:	b.lt	4c634 <__clog10f@@GLIBC_2.17+0x294>  // b.tstop
   4c6a0:	fmadd	s0, s9, s9, s0
   4c6a4:	b	4c634 <__clog10f@@GLIBC_2.17+0x294>
   4c6a8:	fsub	s0, s8, s1
   4c6ac:	fadd	s8, s8, s1
   4c6b0:	fmul	s0, s0, s8
   4c6b4:	b	4c634 <__clog10f@@GLIBC_2.17+0x294>

000000000004c6b8 <fdimf@@GLIBC_2.17>:
   4c6b8:	fmov	s2, s0
   4c6bc:	movi	v0.2s, #0x0
   4c6c0:	fcmp	s2, s1
   4c6c4:	b.ls	4c70c <fdimf@@GLIBC_2.17+0x54>  // b.plast
   4c6c8:	fsub	s0, s2, s1
   4c6cc:	mov	w0, #0x7f7fffff            	// #2139095039
   4c6d0:	fmov	s3, w0
   4c6d4:	fabs	s4, s0
   4c6d8:	fcmp	s4, s3
   4c6dc:	b.le	4c70c <fdimf@@GLIBC_2.17+0x54>
   4c6e0:	fabs	s2, s2
   4c6e4:	fcmp	s2, s3
   4c6e8:	b.gt	4c70c <fdimf@@GLIBC_2.17+0x54>
   4c6ec:	fabs	s1, s1
   4c6f0:	fcmp	s1, s3
   4c6f4:	b.gt	4c70c <fdimf@@GLIBC_2.17+0x54>
   4c6f8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4c6fc:	ldr	x0, [x0, #3976]
   4c700:	mrs	x1, tpidr_el0
   4c704:	mov	w2, #0x22                  	// #34
   4c708:	str	w2, [x1, x0]
   4c70c:	ret

000000000004c710 <nextdownf@@GLIBC_2.24>:
   4c710:	fneg	s0, s0
   4c714:	stp	x29, x30, [sp, #-16]!
   4c718:	mov	x29, sp
   4c71c:	bl	48d80 <nextupf@@GLIBC_2.24>
   4c720:	fneg	s0, s0
   4c724:	ldp	x29, x30, [sp], #16
   4c728:	ret
   4c72c:	nop

000000000004c730 <fmaxf@@GLIBC_2.17>:
   4c730:	fmaxnm	s0, s0, s1
   4c734:	ret

000000000004c738 <fminf@@GLIBC_2.17>:
   4c738:	fminnm	s0, s0, s1
   4c73c:	ret

000000000004c740 <nanf@@GLIBC_2.17>:
   4c740:	mov	w2, #0x0                   	// #0
   4c744:	mov	x1, #0x0                   	// #0
   4c748:	b	baa0 <__strtof_nan@plt>
   4c74c:	nop

000000000004c750 <__iseqsigf@@GLIBC_2.25>:
   4c750:	fcmpe	s0, s1
   4c754:	mov	w0, #0x1                   	// #1
   4c758:	cset	w2, ls  // ls = plast
   4c75c:	cset	w1, ge  // ge = tcont
   4c760:	cmp	w2, #0x0
   4c764:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   4c768:	b.ne	4c790 <__iseqsigf@@GLIBC_2.25+0x40>  // b.any
   4c76c:	cmp	w2, #0x0
   4c770:	mov	w0, #0x0                   	// #0
   4c774:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   4c778:	b.ne	4c790 <__iseqsigf@@GLIBC_2.25+0x40>  // b.any
   4c77c:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4c780:	ldr	x1, [x1, #3976]
   4c784:	mrs	x2, tpidr_el0
   4c788:	mov	w3, #0x21                  	// #33
   4c78c:	str	w3, [x2, x1]
   4c790:	ret
   4c794:	nop

000000000004c798 <canonicalizef@@GLIBC_2.25>:
   4c798:	ldr	s0, [x1]
   4c79c:	mov	x2, x0
   4c7a0:	mov	w3, #0x7fc00000            	// #2143289344
   4c7a4:	fmov	w0, s0
   4c7a8:	eor	w0, w0, #0x400000
   4c7ac:	and	w0, w0, #0x7fffffff
   4c7b0:	cmp	w0, w3
   4c7b4:	b.ls	4c7bc <canonicalizef@@GLIBC_2.25+0x24>  // b.plast
   4c7b8:	fadd	s0, s0, s0
   4c7bc:	mov	w0, #0x0                   	// #0
   4c7c0:	str	s0, [x2]
   4c7c4:	ret

000000000004c7c8 <significandf@@GLIBC_2.17>:
   4c7c8:	stp	x29, x30, [sp, #-32]!
   4c7cc:	mov	x29, sp
   4c7d0:	str	d8, [sp, #16]
   4c7d4:	fmov	s8, s0
   4c7d8:	bl	4c7f8 <ilogbf@@GLIBC_2.17>
   4c7dc:	fmov	s0, w0
   4c7e0:	neg	v1.2s, v0.2s
   4c7e4:	fmov	s0, s8
   4c7e8:	ldr	d8, [sp, #16]
   4c7ec:	ldp	x29, x30, [sp], #32
   4c7f0:	scvtf	s1, s1
   4c7f4:	b	458c8 <__scalbf_finite@GLIBC_2.17>

000000000004c7f8 <ilogbf@@GLIBC_2.17>:
   4c7f8:	stp	x29, x30, [sp, #-32]!
   4c7fc:	mov	x29, sp
   4c800:	str	x19, [sp, #16]
   4c804:	bl	45f90 <__gammaf_r_finite@GLIBC_2.17+0x2a0>
   4c808:	mov	w19, w0
   4c80c:	mov	w0, #0x7fffffff            	// #2147483647
   4c810:	cmp	w19, w0
   4c814:	mov	w0, #0x80000001            	// #-2147483647
   4c818:	ccmp	w19, w0, #0x4, ne  // ne = any
   4c81c:	b.eq	4c830 <ilogbf@@GLIBC_2.17+0x38>  // b.none
   4c820:	mov	w0, w19
   4c824:	ldr	x19, [sp, #16]
   4c828:	ldp	x29, x30, [sp], #32
   4c82c:	ret
   4c830:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4c834:	ldr	x1, [x1, #3976]
   4c838:	mrs	x2, tpidr_el0
   4c83c:	mov	w3, #0x21                  	// #33
   4c840:	mov	w0, #0x1                   	// #1
   4c844:	str	w3, [x2, x1]
   4c848:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   4c84c:	mov	w0, w19
   4c850:	ldr	x19, [sp, #16]
   4c854:	ldp	x29, x30, [sp], #32
   4c858:	ret
   4c85c:	nop

000000000004c860 <llogbf@@GLIBC_2.25>:
   4c860:	stp	x29, x30, [sp, #-32]!
   4c864:	mov	x29, sp
   4c868:	str	x19, [sp, #16]
   4c86c:	bl	45f90 <__gammaf_r_finite@GLIBC_2.17+0x2a0>
   4c870:	mov	w1, #0x80000001            	// #-2147483647
   4c874:	cmp	w0, w1
   4c878:	b.eq	4c89c <llogbf@@GLIBC_2.25+0x3c>  // b.none
   4c87c:	mov	w1, #0x7fffffff            	// #2147483647
   4c880:	sxtw	x19, w0
   4c884:	cmp	w0, w1
   4c888:	b.eq	4c8cc <llogbf@@GLIBC_2.25+0x6c>  // b.none
   4c88c:	mov	x0, x19
   4c890:	ldr	x19, [sp, #16]
   4c894:	ldp	x29, x30, [sp], #32
   4c898:	ret
   4c89c:	mov	x19, #0x8000000000000001    	// #-9223372036854775807
   4c8a0:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4c8a4:	ldr	x1, [x1, #3976]
   4c8a8:	mrs	x2, tpidr_el0
   4c8ac:	mov	w3, #0x21                  	// #33
   4c8b0:	mov	w0, #0x1                   	// #1
   4c8b4:	str	w3, [x2, x1]
   4c8b8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   4c8bc:	mov	x0, x19
   4c8c0:	ldr	x19, [sp, #16]
   4c8c4:	ldp	x29, x30, [sp], #32
   4c8c8:	ret
   4c8cc:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
   4c8d0:	b	4c8a0 <llogbf@@GLIBC_2.25+0x40>
   4c8d4:	nop

000000000004c8d8 <log1pf@@GLIBC_2.17>:
   4c8d8:	fmov	s1, #-1.000000000000000000e+00
   4c8dc:	fcmp	s0, s1
   4c8e0:	b.ls	4c8e8 <log1pf@@GLIBC_2.17+0x10>  // b.plast
   4c8e4:	b	47678 <floorf@@GLIBC_2.17+0x8>
   4c8e8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4c8ec:	ldr	x0, [x0, #3976]
   4c8f0:	mrs	x1, tpidr_el0
   4c8f4:	b.ne	4c904 <log1pf@@GLIBC_2.17+0x2c>  // b.any
   4c8f8:	mov	w2, #0x22                  	// #34
   4c8fc:	str	w2, [x1, x0]
   4c900:	b	47678 <floorf@@GLIBC_2.17+0x8>
   4c904:	mov	w2, #0x21                  	// #33
   4c908:	str	w2, [x1, x0]
   4c90c:	b	47678 <floorf@@GLIBC_2.17+0x8>

000000000004c910 <scalblnf@@GLIBC_2.17>:
   4c910:	stp	x29, x30, [sp, #-32]!
   4c914:	fabs	s2, s0
   4c918:	mov	w1, #0x7f7fffff            	// #2139095039
   4c91c:	mov	x29, sp
   4c920:	str	d8, [sp, #16]
   4c924:	fmov	s8, w1
   4c928:	fmov	s1, s0
   4c92c:	fcmp	s2, s8
   4c930:	b.hi	4c93c <scalblnf@@GLIBC_2.17+0x2c>  // b.pmore
   4c934:	fcmp	s0, #0.0
   4c938:	b.ne	4c94c <scalblnf@@GLIBC_2.17+0x3c>  // b.any
   4c93c:	fadd	s0, s1, s1
   4c940:	ldr	d8, [sp, #16]
   4c944:	ldp	x29, x30, [sp], #32
   4c948:	ret
   4c94c:	bl	47bf8 <rintf@@GLIBC_2.17+0x8>
   4c950:	fabs	s1, s0
   4c954:	fcmp	s1, s8
   4c958:	b.ls	4c97c <scalblnf@@GLIBC_2.17+0x6c>  // b.plast
   4c95c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4c960:	ldr	x0, [x0, #3976]
   4c964:	mrs	x1, tpidr_el0
   4c968:	mov	w2, #0x22                  	// #34
   4c96c:	ldr	d8, [sp, #16]
   4c970:	str	w2, [x1, x0]
   4c974:	ldp	x29, x30, [sp], #32
   4c978:	ret
   4c97c:	fcmp	s0, #0.0
   4c980:	b.ne	4c940 <scalblnf@@GLIBC_2.17+0x30>  // b.any
   4c984:	b	4c95c <scalblnf@@GLIBC_2.17+0x4c>

000000000004c988 <fmaxmagf@@GLIBC_2.25>:
   4c988:	fabs	s3, s0
   4c98c:	fabs	s2, s1
   4c990:	fcmp	s3, s2
   4c994:	b.gt	4c9d4 <fmaxmagf@@GLIBC_2.25+0x4c>
   4c998:	b.mi	4c9d8 <fmaxmagf@@GLIBC_2.25+0x50>  // b.first
   4c99c:	b.eq	4c9e8 <fmaxmagf@@GLIBC_2.25+0x60>  // b.none
   4c9a0:	fmov	w0, s0
   4c9a4:	mov	w1, #0x7fc00000            	// #2143289344
   4c9a8:	eor	w0, w0, #0x400000
   4c9ac:	and	w0, w0, #0x7fffffff
   4c9b0:	cmp	w0, w1
   4c9b4:	b.hi	4c9e0 <fmaxmagf@@GLIBC_2.25+0x58>  // b.pmore
   4c9b8:	fmov	w0, s1
   4c9bc:	eor	w0, w0, #0x400000
   4c9c0:	and	w0, w0, #0x7fffffff
   4c9c4:	cmp	w0, w1
   4c9c8:	b.hi	4c9e0 <fmaxmagf@@GLIBC_2.25+0x58>  // b.pmore
   4c9cc:	fcmp	s1, s1
   4c9d0:	fcsel	s0, s1, s0, vc
   4c9d4:	ret
   4c9d8:	fmov	s0, s1
   4c9dc:	ret
   4c9e0:	fadd	s0, s0, s1
   4c9e4:	ret
   4c9e8:	fcmpe	s0, s1
   4c9ec:	fcsel	s0, s0, s1, gt
   4c9f0:	ret
   4c9f4:	nop

000000000004c9f8 <fminmagf@@GLIBC_2.25>:
   4c9f8:	fabs	s3, s0
   4c9fc:	fabs	s2, s1
   4ca00:	fcmp	s3, s2
   4ca04:	b.mi	4ca44 <fminmagf@@GLIBC_2.25+0x4c>  // b.first
   4ca08:	b.gt	4ca48 <fminmagf@@GLIBC_2.25+0x50>
   4ca0c:	b.eq	4ca58 <fminmagf@@GLIBC_2.25+0x60>  // b.none
   4ca10:	fmov	w0, s0
   4ca14:	mov	w1, #0x7fc00000            	// #2143289344
   4ca18:	eor	w0, w0, #0x400000
   4ca1c:	and	w0, w0, #0x7fffffff
   4ca20:	cmp	w0, w1
   4ca24:	b.hi	4ca50 <fminmagf@@GLIBC_2.25+0x58>  // b.pmore
   4ca28:	fmov	w0, s1
   4ca2c:	eor	w0, w0, #0x400000
   4ca30:	and	w0, w0, #0x7fffffff
   4ca34:	cmp	w0, w1
   4ca38:	b.hi	4ca50 <fminmagf@@GLIBC_2.25+0x58>  // b.pmore
   4ca3c:	fcmp	s1, s1
   4ca40:	fcsel	s0, s1, s0, vc
   4ca44:	ret
   4ca48:	fmov	s0, s1
   4ca4c:	ret
   4ca50:	fadd	s0, s0, s1
   4ca54:	ret
   4ca58:	fcmpe	s0, s1
   4ca5c:	fcsel	s0, s0, s1, mi  // mi = first
   4ca60:	ret
   4ca64:	nop

000000000004ca68 <__exp2f_finite@GLIBC_2.17>:
   4ca68:	fmov	w0, s0
   4ca6c:	fcvt	d2, s0
   4ca70:	ubfx	x1, x0, #20, #11
   4ca74:	cmp	w1, #0x42f
   4ca78:	b.hi	4cacc <__exp2f_finite@GLIBC_2.17+0x64>  // b.pmore
   4ca7c:	adrp	x1, 8b000 <f64xsubf128@@GLIBC_2.28+0x37280>
   4ca80:	add	x1, x1, #0xfa0
   4ca84:	fmov	d1, #1.000000000000000000e+00
   4ca88:	ldp	d4, d6, [x1, #256]
   4ca8c:	ldp	d0, d5, [x1, #272]
   4ca90:	fadd	d3, d4, d2
   4ca94:	fsub	d4, d3, d4
   4ca98:	fmov	x0, d3
   4ca9c:	fsub	d2, d2, d4
   4caa0:	and	x2, x0, #0x1f
   4caa4:	ldr	x1, [x1, x2, lsl #3]
   4caa8:	fmadd	d3, d6, d2, d0
   4caac:	fmadd	d0, d5, d2, d1
   4cab0:	fmul	d2, d2, d2
   4cab4:	add	x0, x1, x0, lsl #47
   4cab8:	fmov	d1, x0
   4cabc:	fmadd	d0, d3, d2, d0
   4cac0:	fmul	d0, d0, d1
   4cac4:	fcvt	s0, d0
   4cac8:	ret
   4cacc:	cmn	w0, #0x800, lsl #12
   4cad0:	b.eq	4cb1c <__exp2f_finite@GLIBC_2.17+0xb4>  // b.none
   4cad4:	cmp	w1, #0x7f7
   4cad8:	b.hi	4cb14 <__exp2f_finite@GLIBC_2.17+0xac>  // b.pmore
   4cadc:	fcmpe	s0, #0.0
   4cae0:	b.gt	4cb0c <__exp2f_finite@GLIBC_2.17+0xa4>
   4cae4:	mov	w0, #0xc3160000            	// #-1021968384
   4cae8:	fmov	s1, w0
   4caec:	fcmpe	s0, s1
   4caf0:	b.ls	4cb24 <__exp2f_finite@GLIBC_2.17+0xbc>  // b.plast
   4caf4:	mov	w0, #0xc3150000            	// #-1022033920
   4caf8:	fmov	s1, w0
   4cafc:	fcmpe	s0, s1
   4cb00:	b.pl	4ca7c <__exp2f_finite@GLIBC_2.17+0x14>  // b.nfrst
   4cb04:	mov	w0, #0x0                   	// #0
   4cb08:	b	51bf8 <__exp2f_finite@GLIBC_2.17+0x5190>
   4cb0c:	mov	w0, #0x0                   	// #0
   4cb10:	b	51c08 <__exp2f_finite@GLIBC_2.17+0x51a0>
   4cb14:	fadd	s0, s0, s0
   4cb18:	ret
   4cb1c:	movi	v0.2s, #0x0
   4cb20:	ret
   4cb24:	mov	w0, #0x0                   	// #0
   4cb28:	b	51bf0 <__exp2f_finite@GLIBC_2.17+0x5188>
   4cb2c:	nop
   4cb30:	stp	x29, x30, [sp, #-128]!
   4cb34:	mov	w3, #0x2fff                	// #12287
   4cb38:	movk	w3, #0x3ffc, lsl #16
   4cb3c:	mov	x29, sp
   4cb40:	stp	x19, x20, [sp, #16]
   4cb44:	str	q0, [sp, #64]
   4cb48:	ldp	x19, x20, [sp, #64]
   4cb4c:	str	q1, [sp, #80]
   4cb50:	ldp	x4, x1, [sp, #80]
   4cb54:	ubfx	x2, x20, #32, #31
   4cb58:	cmp	w2, w3
   4cb5c:	b.hi	4ccb4 <__exp2f_finite@GLIBC_2.17+0x24c>  // b.pmore
   4cb60:	mov	w0, #0x3fc5ffff            	// #1069940735
   4cb64:	cmp	w2, w0
   4cb68:	b.hi	4cbb0 <__exp2f_finite@GLIBC_2.17+0x148>  // b.pmore
   4cb6c:	and	x0, x20, #0x7fffffffffffffff
   4cb70:	str	x0, [sp, #72]
   4cb74:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4cb78:	add	x0, x0, #0xeb0
   4cb7c:	ldr	q0, [sp, #64]
   4cb80:	ldr	q1, [x0]
   4cb84:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   4cb88:	tbz	w0, #31, 4cba0 <__exp2f_finite@GLIBC_2.17+0x138>
   4cb8c:	stp	x19, x20, [sp, #64]
   4cb90:	stp	x19, x20, [sp, #80]
   4cb94:	ldr	q1, [sp, #64]
   4cb98:	ldr	q0, [sp, #80]
   4cb9c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cba0:	stp	x19, x20, [sp, #64]
   4cba4:	ldr	q0, [sp, #64]
   4cba8:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   4cbac:	cbz	w0, 4cca0 <__exp2f_finite@GLIBC_2.17+0x238>
   4cbb0:	stp	x19, x20, [sp, #64]
   4cbb4:	stp	x19, x20, [sp, #80]
   4cbb8:	ldr	q1, [sp, #64]
   4cbbc:	ldr	q0, [sp, #80]
   4cbc0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cbc4:	str	q0, [sp, #64]
   4cbc8:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cbcc:	add	x0, x0, #0x9a0
   4cbd0:	ldr	q1, [x0]
   4cbd4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cbd8:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cbdc:	add	x0, x0, #0x9b0
   4cbe0:	ldr	q1, [x0]
   4cbe4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cbe8:	ldr	q1, [sp, #64]
   4cbec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cbf0:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cbf4:	add	x0, x0, #0x9c0
   4cbf8:	ldr	q1, [x0]
   4cbfc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4cc00:	ldr	q1, [sp, #64]
   4cc04:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cc08:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cc0c:	add	x0, x0, #0x9d0
   4cc10:	ldr	q1, [x0]
   4cc14:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cc18:	ldr	q1, [sp, #64]
   4cc1c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cc20:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cc24:	add	x0, x0, #0x9e0
   4cc28:	ldr	q1, [x0]
   4cc2c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4cc30:	ldr	q1, [sp, #64]
   4cc34:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cc38:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cc3c:	add	x0, x0, #0x9f0
   4cc40:	ldr	q1, [x0]
   4cc44:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cc48:	ldr	q1, [sp, #64]
   4cc4c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cc50:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cc54:	add	x0, x0, #0xa00
   4cc58:	ldr	q1, [x0]
   4cc5c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4cc60:	ldr	q1, [sp, #64]
   4cc64:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cc68:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cc6c:	add	x0, x0, #0xa10
   4cc70:	ldr	q1, [x0]
   4cc74:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cc78:	ldr	q1, [sp, #64]
   4cc7c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cc80:	stp	x19, x20, [sp, #64]
   4cc84:	ldr	q1, [sp, #64]
   4cc88:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cc8c:	stp	x19, x20, [sp, #64]
   4cc90:	ldr	q1, [sp, #64]
   4cc94:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4cc98:	str	q0, [sp, #64]
   4cc9c:	ldp	x19, x20, [sp, #64]
   4cca0:	stp	x19, x20, [sp, #64]
   4cca4:	ldp	x19, x20, [sp, #16]
   4cca8:	ldr	q0, [sp, #64]
   4ccac:	ldp	x29, x30, [sp], #128
   4ccb0:	ret
   4ccb4:	mov	w3, #0x3ffe                	// #16382
   4ccb8:	stp	x21, x22, [sp, #32]
   4ccbc:	sub	w3, w3, w2, lsr #16
   4ccc0:	mov	x21, x1
   4ccc4:	mov	w1, #0x200                 	// #512
   4ccc8:	stp	x23, x24, [sp, #48]
   4cccc:	lsl	w1, w1, w3
   4ccd0:	mov	x24, x4
   4ccd4:	add	w2, w1, w2
   4ccd8:	mov	w4, #0xfffffc00            	// #-1024
   4ccdc:	mov	x23, x20
   4cce0:	lsl	w1, w4, w3
   4cce4:	and	x20, x20, #0x7fffffffffffffff
   4cce8:	and	w2, w2, w1
   4ccec:	cbz	w3, 4cf3c <__exp2f_finite@GLIBC_2.17+0x4d4>
   4ccf0:	cmp	w3, #0x1
   4ccf4:	b.ne	4cf00 <__exp2f_finite@GLIBC_2.17+0x498>  // b.any
   4ccf8:	mov	w22, #0x6800                	// #26624
   4ccfc:	movk	w22, #0xc003, lsl #16
   4cd00:	add	w22, w2, w22
   4cd04:	lsr	w22, w22, #9
   4cd08:	mov	x4, #0x0                   	// #0
   4cd0c:	fmov	d0, x4
   4cd10:	lsl	x5, x2, #32
   4cd14:	fmov	v0.d[1], x5
   4cd18:	cbz	w0, 4cf24 <__exp2f_finite@GLIBC_2.17+0x4bc>
   4cd1c:	stp	x19, x20, [sp, #64]
   4cd20:	cmp	x23, #0x0
   4cd24:	eor	x0, x21, #0x8000000000000000
   4cd28:	ldr	q1, [sp, #64]
   4cd2c:	csel	x21, x0, x21, lt  // lt = tstop
   4cd30:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cd34:	stp	x24, x21, [sp, #64]
   4cd38:	mov	v1.16b, v0.16b
   4cd3c:	ldr	q0, [sp, #64]
   4cd40:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cd44:	mov	v2.16b, v0.16b
   4cd48:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4cd4c:	mov	v1.16b, v2.16b
   4cd50:	mov	v0.16b, v2.16b
   4cd54:	str	q2, [sp, #112]
   4cd58:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cd5c:	str	q0, [sp, #64]
   4cd60:	ldr	x19, [x19, #4008]
   4cd64:	add	w0, w22, #0x2
   4cd68:	adrp	x1, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cd6c:	add	x1, x1, #0xa20
   4cd70:	ubfiz	x0, x0, #4, #25
   4cd74:	add	x0, x19, x0
   4cd78:	ldr	q1, [x1]
   4cd7c:	ldr	q6, [x0]
   4cd80:	str	q6, [sp, #80]
   4cd84:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cd88:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cd8c:	add	x0, x0, #0xa30
   4cd90:	ldr	q1, [x0]
   4cd94:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4cd98:	ldr	q1, [sp, #64]
   4cd9c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cda0:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cda4:	add	x0, x0, #0xa40
   4cda8:	ldr	q1, [x0]
   4cdac:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cdb0:	ldr	q1, [sp, #64]
   4cdb4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cdb8:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cdbc:	add	x0, x0, #0xa50
   4cdc0:	ldr	q1, [x0]
   4cdc4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4cdc8:	ldr	q1, [sp, #64]
   4cdcc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cdd0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4cdd4:	add	x0, x0, #0x330
   4cdd8:	ldr	q1, [x0]
   4cddc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cde0:	ldr	q1, [sp, #64]
   4cde4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cde8:	ldr	q6, [sp, #80]
   4cdec:	mov	v1.16b, v6.16b
   4cdf0:	str	q6, [sp, #96]
   4cdf4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cdf8:	add	w0, w22, #0x3
   4cdfc:	ubfiz	x22, x22, #4, #24
   4ce00:	ubfiz	x0, x0, #4, #25
   4ce04:	add	x0, x19, x0
   4ce08:	add	x19, x19, x22
   4ce0c:	ldr	q1, [x0]
   4ce10:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4ce14:	str	q0, [sp, #80]
   4ce18:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4ce1c:	add	x0, x0, #0xa60
   4ce20:	ldr	q0, [sp, #64]
   4ce24:	ldr	q1, [x0]
   4ce28:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4ce2c:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4ce30:	add	x0, x0, #0xa70
   4ce34:	ldr	q1, [x0]
   4ce38:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4ce3c:	ldr	q1, [sp, #64]
   4ce40:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4ce44:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4ce48:	add	x0, x0, #0xa80
   4ce4c:	ldr	q1, [x0]
   4ce50:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4ce54:	ldr	q1, [sp, #64]
   4ce58:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4ce5c:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4ce60:	add	x0, x0, #0xa90
   4ce64:	ldr	q1, [x0]
   4ce68:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4ce6c:	ldr	q1, [sp, #64]
   4ce70:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4ce74:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4ce78:	add	x0, x0, #0xaa0
   4ce7c:	ldr	q1, [x0]
   4ce80:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4ce84:	ldr	q1, [sp, #64]
   4ce88:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4ce8c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4ce90:	add	x0, x0, #0x2f0
   4ce94:	ldr	q1, [x0]
   4ce98:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4ce9c:	ldr	q2, [sp, #112]
   4cea0:	mov	v1.16b, v2.16b
   4cea4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cea8:	ldr	q1, [x19]
   4ceac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4ceb0:	mov	v1.16b, v0.16b
   4ceb4:	ldr	q4, [sp, #80]
   4ceb8:	mov	v0.16b, v4.16b
   4cebc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4cec0:	ldr	q6, [sp, #96]
   4cec4:	mov	v1.16b, v0.16b
   4cec8:	mov	v0.16b, v6.16b
   4cecc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4ced0:	str	q0, [sp, #64]
   4ced4:	cmp	x23, #0x0
   4ced8:	ldp	x19, x20, [sp, #64]
   4cedc:	ldp	x21, x22, [sp, #32]
   4cee0:	ldp	x23, x24, [sp, #48]
   4cee4:	eor	x0, x20, #0x8000000000000000
   4cee8:	csel	x20, x0, x20, lt  // lt = tstop
   4ceec:	stp	x19, x20, [sp, #64]
   4cef0:	ldr	q0, [sp, #64]
   4cef4:	ldp	x19, x20, [sp, #16]
   4cef8:	ldp	x29, x30, [sp], #128
   4cefc:	ret
   4cf00:	mov	w22, #0xd000                	// #53248
   4cf04:	mov	x4, #0x0                   	// #0
   4cf08:	movk	w22, #0xc003, lsl #16
   4cf0c:	fmov	d0, x4
   4cf10:	add	w22, w2, w22
   4cf14:	lsl	x5, x2, #32
   4cf18:	fmov	v0.d[1], x5
   4cf1c:	lsr	w22, w22, #10
   4cf20:	cbnz	w0, 4cd1c <__exp2f_finite@GLIBC_2.17+0x2b4>
   4cf24:	stp	x19, x20, [sp, #64]
   4cf28:	mov	v1.16b, v0.16b
   4cf2c:	ldr	q0, [sp, #64]
   4cf30:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cf34:	mov	v2.16b, v0.16b
   4cf38:	b	4cd48 <__exp2f_finite@GLIBC_2.17+0x2e0>
   4cf3c:	mov	w22, #0xb400                	// #46080
   4cf40:	movk	w22, #0xc002, lsl #16
   4cf44:	add	w22, w2, w22
   4cf48:	lsr	w22, w22, #8
   4cf4c:	b	4cd08 <__exp2f_finite@GLIBC_2.17+0x2a0>
   4cf50:	stp	x29, x30, [sp, #-112]!
   4cf54:	mov	w1, #0x2fff                	// #12287
   4cf58:	movk	w1, #0x3ffc, lsl #16
   4cf5c:	mov	x29, sp
   4cf60:	stp	x19, x20, [sp, #16]
   4cf64:	stp	x21, x22, [sp, #32]
   4cf68:	str	q0, [sp, #64]
   4cf6c:	str	q1, [sp, #80]
   4cf70:	ldp	x19, x21, [sp, #64]
   4cf74:	str	x23, [sp, #48]
   4cf78:	ldp	x0, x2, [sp, #80]
   4cf7c:	mov	x23, x0
   4cf80:	ubfx	x0, x21, #32, #31
   4cf84:	cmp	w0, w1
   4cf88:	b.hi	4d0a0 <__exp2f_finite@GLIBC_2.17+0x638>  // b.pmore
   4cf8c:	mov	w1, #0x3fc5ffff            	// #1069940735
   4cf90:	cmp	w0, w1
   4cf94:	b.hi	4cfac <__exp2f_finite@GLIBC_2.17+0x544>  // b.pmore
   4cf98:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   4cf9c:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4cfa0:	add	x1, x1, #0x2f0
   4cfa4:	ldr	q0, [x1]
   4cfa8:	cbz	w0, 4d08c <__exp2f_finite@GLIBC_2.17+0x624>
   4cfac:	stp	x19, x21, [sp, #64]
   4cfb0:	stp	x19, x21, [sp, #80]
   4cfb4:	ldr	q1, [sp, #64]
   4cfb8:	ldr	q0, [sp, #80]
   4cfbc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cfc0:	str	q0, [sp, #64]
   4cfc4:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cfc8:	add	x0, x0, #0xab0
   4cfcc:	ldr	q1, [x0]
   4cfd0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cfd4:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cfd8:	add	x0, x0, #0xac0
   4cfdc:	ldr	q1, [x0]
   4cfe0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4cfe4:	ldr	q1, [sp, #64]
   4cfe8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4cfec:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4cff0:	add	x0, x0, #0xad0
   4cff4:	ldr	q1, [x0]
   4cff8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4cffc:	ldr	q1, [sp, #64]
   4d000:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d004:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d008:	add	x0, x0, #0xae0
   4d00c:	ldr	q1, [x0]
   4d010:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d014:	ldr	q1, [sp, #64]
   4d018:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d01c:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d020:	add	x0, x0, #0xaf0
   4d024:	ldr	q1, [x0]
   4d028:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d02c:	ldr	q1, [sp, #64]
   4d030:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d034:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d038:	add	x0, x0, #0xb00
   4d03c:	ldr	q1, [x0]
   4d040:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d044:	ldr	q1, [sp, #64]
   4d048:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d04c:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d050:	add	x0, x0, #0xb10
   4d054:	ldr	q1, [x0]
   4d058:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d05c:	ldr	q1, [sp, #64]
   4d060:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d064:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d068:	add	x0, x0, #0xb20
   4d06c:	ldr	q1, [x0]
   4d070:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d074:	ldr	q1, [sp, #64]
   4d078:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d07c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d080:	add	x0, x0, #0x2f0
   4d084:	ldr	q1, [x0]
   4d088:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d08c:	ldp	x19, x20, [sp, #16]
   4d090:	ldp	x21, x22, [sp, #32]
   4d094:	ldr	x23, [sp, #48]
   4d098:	ldp	x29, x30, [sp], #112
   4d09c:	ret
   4d0a0:	mov	x22, x2
   4d0a4:	mov	w2, #0x3ffe                	// #16382
   4d0a8:	sub	w2, w2, w0, lsr #16
   4d0ac:	mov	w1, #0x200                 	// #512
   4d0b0:	mov	w4, #0xfffffc00            	// #-1024
   4d0b4:	lsl	w1, w1, w2
   4d0b8:	add	w0, w1, w0
   4d0bc:	lsl	w1, w4, w2
   4d0c0:	and	w0, w0, w1
   4d0c4:	tbnz	x21, #63, 4d2a8 <__exp2f_finite@GLIBC_2.17+0x840>
   4d0c8:	cbz	w2, 4d2b4 <__exp2f_finite@GLIBC_2.17+0x84c>
   4d0cc:	cmp	w2, #0x1
   4d0d0:	b.ne	4d2c8 <__exp2f_finite@GLIBC_2.17+0x860>  // b.any
   4d0d4:	mov	w20, #0x6800                	// #26624
   4d0d8:	movk	w20, #0xc003, lsl #16
   4d0dc:	add	w20, w0, w20
   4d0e0:	lsr	w20, w20, #9
   4d0e4:	stp	x19, x21, [sp, #64]
   4d0e8:	mov	x2, #0x0                   	// #0
   4d0ec:	fmov	d0, x2
   4d0f0:	lsl	x3, x0, #32
   4d0f4:	ldr	q1, [sp, #64]
   4d0f8:	fmov	v0.d[1], x3
   4d0fc:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4d100:	add	w21, w20, #0x1
   4d104:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d108:	stp	x23, x22, [sp, #64]
   4d10c:	mov	v1.16b, v0.16b
   4d110:	ldr	q0, [sp, #64]
   4d114:	ubfiz	x21, x21, #4, #25
   4d118:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d11c:	mov	v1.16b, v0.16b
   4d120:	str	q0, [sp, #80]
   4d124:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d128:	ldr	x19, [x19, #4008]
   4d12c:	ubfiz	x0, x20, #4, #24
   4d130:	adrp	x1, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d134:	add	x1, x1, #0xa60
   4d138:	add	x0, x19, x0
   4d13c:	str	q0, [sp, #64]
   4d140:	add	w20, w20, #0x2
   4d144:	add	x21, x19, x21
   4d148:	ldr	q1, [x1]
   4d14c:	ldr	q4, [x0]
   4d150:	ubfiz	x20, x20, #4, #25
   4d154:	add	x19, x19, x20
   4d158:	str	q4, [sp, #96]
   4d15c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d160:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d164:	add	x0, x0, #0xa70
   4d168:	ldr	q1, [x0]
   4d16c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d170:	ldr	q1, [sp, #64]
   4d174:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d178:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d17c:	add	x0, x0, #0xa80
   4d180:	ldr	q1, [x0]
   4d184:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d188:	ldr	q1, [sp, #64]
   4d18c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d190:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d194:	add	x0, x0, #0xa90
   4d198:	ldr	q1, [x0]
   4d19c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d1a0:	ldr	q1, [sp, #64]
   4d1a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d1a8:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d1ac:	add	x0, x0, #0xaa0
   4d1b0:	ldr	q1, [x0]
   4d1b4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d1b8:	ldr	q1, [sp, #64]
   4d1bc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d1c0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d1c4:	add	x0, x0, #0x2f0
   4d1c8:	ldr	q1, [x0]
   4d1cc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d1d0:	ldr	q2, [sp, #80]
   4d1d4:	mov	v1.16b, v2.16b
   4d1d8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d1dc:	ldr	q1, [x19]
   4d1e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d1e4:	str	q0, [sp, #80]
   4d1e8:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d1ec:	add	x0, x0, #0xa20
   4d1f0:	ldr	q0, [sp, #64]
   4d1f4:	ldr	q1, [x0]
   4d1f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d1fc:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d200:	add	x0, x0, #0xa30
   4d204:	ldr	q1, [x0]
   4d208:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d20c:	ldr	q1, [sp, #64]
   4d210:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d214:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d218:	add	x0, x0, #0xa40
   4d21c:	ldr	q1, [x0]
   4d220:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d224:	ldr	q1, [sp, #64]
   4d228:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d22c:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d230:	add	x0, x0, #0xa50
   4d234:	ldr	q1, [x0]
   4d238:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d23c:	ldr	q1, [sp, #64]
   4d240:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d244:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d248:	add	x0, x0, #0x330
   4d24c:	ldr	q1, [x0]
   4d250:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d254:	ldr	q1, [sp, #64]
   4d258:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d25c:	ldr	q4, [sp, #96]
   4d260:	mov	v1.16b, v4.16b
   4d264:	str	q4, [sp, #64]
   4d268:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d26c:	mov	v1.16b, v0.16b
   4d270:	ldr	q2, [sp, #80]
   4d274:	mov	v0.16b, v2.16b
   4d278:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d27c:	mov	v1.16b, v0.16b
   4d280:	ldr	q0, [x21]
   4d284:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d288:	ldr	q4, [sp, #64]
   4d28c:	mov	v1.16b, v4.16b
   4d290:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d294:	ldp	x19, x20, [sp, #16]
   4d298:	ldp	x21, x22, [sp, #32]
   4d29c:	ldr	x23, [sp, #48]
   4d2a0:	ldp	x29, x30, [sp], #112
   4d2a4:	ret
   4d2a8:	eor	x21, x21, #0x8000000000000000
   4d2ac:	eor	x22, x22, #0x8000000000000000
   4d2b0:	cbnz	w2, 4d0cc <__exp2f_finite@GLIBC_2.17+0x664>
   4d2b4:	mov	w20, #0xb400                	// #46080
   4d2b8:	movk	w20, #0xc002, lsl #16
   4d2bc:	add	w20, w0, w20
   4d2c0:	lsr	w20, w20, #8
   4d2c4:	b	4d0e4 <__exp2f_finite@GLIBC_2.17+0x67c>
   4d2c8:	mov	w20, #0xd000                	// #53248
   4d2cc:	movk	w20, #0xc003, lsl #16
   4d2d0:	add	w20, w0, w20
   4d2d4:	lsr	w20, w20, #10
   4d2d8:	b	4d0e4 <__exp2f_finite@GLIBC_2.17+0x67c>
   4d2dc:	nop
   4d2e0:	stp	x29, x30, [sp, #-160]!
   4d2e4:	mov	x29, sp
   4d2e8:	stp	x19, x20, [sp, #16]
   4d2ec:	stp	x21, x22, [sp, #32]
   4d2f0:	mov	x22, x1
   4d2f4:	str	q0, [sp, #80]
   4d2f8:	ldp	x19, x21, [sp, #80]
   4d2fc:	stp	x23, x24, [sp, #48]
   4d300:	mov	x23, x0
   4d304:	mov	w0, #0x2fff                	// #12287
   4d308:	str	q1, [sp, #96]
   4d30c:	movk	w0, #0x3ffc, lsl #16
   4d310:	ldp	x5, x3, [sp, #96]
   4d314:	ubfx	x4, x21, #32, #31
   4d318:	cmp	w4, w0
   4d31c:	b.hi	4d500 <__exp2f_finite@GLIBC_2.17+0xa98>  // b.pmore
   4d320:	mov	w0, #0x3fc5ffff            	// #1069940735
   4d324:	cmp	w4, w0
   4d328:	b.ls	4d7bc <__exp2f_finite@GLIBC_2.17+0xd54>  // b.plast
   4d32c:	stp	x19, x21, [sp, #80]
   4d330:	stp	x19, x21, [sp, #96]
   4d334:	ldr	q1, [sp, #80]
   4d338:	ldr	q0, [sp, #96]
   4d33c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d340:	str	q0, [sp, #80]
   4d344:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d348:	add	x0, x0, #0x9a0
   4d34c:	ldr	q1, [x0]
   4d350:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d354:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d358:	add	x0, x0, #0x9b0
   4d35c:	ldr	q1, [x0]
   4d360:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d364:	ldr	q1, [sp, #80]
   4d368:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d36c:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d370:	add	x0, x0, #0x9c0
   4d374:	ldr	q1, [x0]
   4d378:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d37c:	ldr	q1, [sp, #80]
   4d380:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d384:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d388:	add	x0, x0, #0x9d0
   4d38c:	ldr	q1, [x0]
   4d390:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d394:	ldr	q1, [sp, #80]
   4d398:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d39c:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d3a0:	add	x0, x0, #0x9e0
   4d3a4:	ldr	q1, [x0]
   4d3a8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d3ac:	ldr	q1, [sp, #80]
   4d3b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d3b4:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d3b8:	add	x0, x0, #0x9f0
   4d3bc:	ldr	q1, [x0]
   4d3c0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d3c4:	ldr	q1, [sp, #80]
   4d3c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d3cc:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d3d0:	add	x0, x0, #0xa00
   4d3d4:	ldr	q1, [x0]
   4d3d8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d3dc:	ldr	q1, [sp, #80]
   4d3e0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d3e4:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d3e8:	add	x0, x0, #0xa10
   4d3ec:	ldr	q1, [x0]
   4d3f0:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d3f4:	ldr	q1, [sp, #80]
   4d3f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d3fc:	stp	x19, x21, [sp, #96]
   4d400:	ldr	q1, [sp, #96]
   4d404:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d408:	stp	x19, x21, [sp, #96]
   4d40c:	ldr	q1, [sp, #96]
   4d410:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d414:	mov	v2.16b, v0.16b
   4d418:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d41c:	add	x0, x0, #0xab0
   4d420:	ldr	q0, [sp, #80]
   4d424:	str	q2, [x23]
   4d428:	ldr	q1, [x0]
   4d42c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d430:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d434:	add	x0, x0, #0xac0
   4d438:	ldr	q1, [x0]
   4d43c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d440:	ldr	q1, [sp, #80]
   4d444:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d448:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d44c:	add	x0, x0, #0xad0
   4d450:	ldr	q1, [x0]
   4d454:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d458:	ldr	q1, [sp, #80]
   4d45c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d460:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d464:	add	x0, x0, #0xae0
   4d468:	ldr	q1, [x0]
   4d46c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d470:	ldr	q1, [sp, #80]
   4d474:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d478:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d47c:	add	x0, x0, #0xaf0
   4d480:	ldr	q1, [x0]
   4d484:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d488:	ldr	q1, [sp, #80]
   4d48c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d490:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d494:	add	x0, x0, #0xb00
   4d498:	ldr	q1, [x0]
   4d49c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d4a0:	ldr	q1, [sp, #80]
   4d4a4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d4a8:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d4ac:	add	x0, x0, #0xb10
   4d4b0:	ldr	q1, [x0]
   4d4b4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d4b8:	ldr	q1, [sp, #80]
   4d4bc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d4c0:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d4c4:	add	x0, x0, #0xb20
   4d4c8:	ldr	q1, [x0]
   4d4cc:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d4d0:	ldr	q1, [sp, #80]
   4d4d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d4d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d4dc:	add	x0, x0, #0x2f0
   4d4e0:	ldr	q1, [x0]
   4d4e4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d4e8:	str	q0, [x22]
   4d4ec:	ldp	x19, x20, [sp, #16]
   4d4f0:	ldp	x21, x22, [sp, #32]
   4d4f4:	ldp	x23, x24, [sp, #48]
   4d4f8:	ldp	x29, x30, [sp], #160
   4d4fc:	ret
   4d500:	mov	w0, #0x3ffe                	// #16382
   4d504:	stp	x25, x26, [sp, #64]
   4d508:	sub	w0, w0, w4, lsr #16
   4d50c:	mov	x25, x3
   4d510:	mov	w3, #0x200                 	// #512
   4d514:	mov	w1, #0xfffffc00            	// #-1024
   4d518:	lsl	w3, w3, w0
   4d51c:	add	w3, w3, w4
   4d520:	lsl	w1, w1, w0
   4d524:	mov	x24, x21
   4d528:	mov	x26, x5
   4d52c:	and	w3, w3, w1
   4d530:	tbz	x21, #63, 4d53c <__exp2f_finite@GLIBC_2.17+0xad4>
   4d534:	eor	x21, x21, #0x8000000000000000
   4d538:	eor	x25, x25, #0x8000000000000000
   4d53c:	cbz	w0, 4d860 <__exp2f_finite@GLIBC_2.17+0xdf8>
   4d540:	cmp	w0, #0x1
   4d544:	b.ne	4d820 <__exp2f_finite@GLIBC_2.17+0xdb8>  // b.any
   4d548:	mov	w20, #0x6800                	// #26624
   4d54c:	movk	w20, #0xc003, lsl #16
   4d550:	add	w20, w3, w20
   4d554:	lsr	w20, w20, #9
   4d558:	mov	x0, #0x0                   	// #0
   4d55c:	fmov	d0, x0
   4d560:	str	x19, [sp, #80]
   4d564:	lsl	x1, x3, #32
   4d568:	fmov	v0.d[1], x1
   4d56c:	cbz	w2, 4d848 <__exp2f_finite@GLIBC_2.17+0xde0>
   4d570:	str	x21, [sp, #88]
   4d574:	ldr	q1, [sp, #80]
   4d578:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d57c:	stp	x26, x25, [sp, #80]
   4d580:	mov	v1.16b, v0.16b
   4d584:	ldr	q0, [sp, #80]
   4d588:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d58c:	mov	v2.16b, v0.16b
   4d590:	mov	v1.16b, v2.16b
   4d594:	mov	v0.16b, v2.16b
   4d598:	str	q2, [sp, #96]
   4d59c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d5a0:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d5a4:	add	x0, x0, #0xa60
   4d5a8:	str	q0, [sp, #80]
   4d5ac:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4d5b0:	add	w21, w20, #0x3
   4d5b4:	ldr	q1, [x0]
   4d5b8:	ubfiz	x21, x21, #4, #25
   4d5bc:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d5c0:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d5c4:	add	x0, x0, #0xa70
   4d5c8:	ldr	q1, [x0]
   4d5cc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d5d0:	ldr	q1, [sp, #80]
   4d5d4:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d5d8:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d5dc:	add	x0, x0, #0xa80
   4d5e0:	ldr	q1, [x0]
   4d5e4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d5e8:	ldr	q1, [sp, #80]
   4d5ec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d5f0:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d5f4:	add	x0, x0, #0xa90
   4d5f8:	ldr	q1, [x0]
   4d5fc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d600:	ldr	q1, [sp, #80]
   4d604:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d608:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d60c:	add	x0, x0, #0xaa0
   4d610:	ldr	q1, [x0]
   4d614:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d618:	ldr	q1, [sp, #80]
   4d61c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d620:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d624:	add	x0, x0, #0x2f0
   4d628:	ldr	q1, [x0]
   4d62c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d630:	ldr	q2, [sp, #96]
   4d634:	mov	v1.16b, v2.16b
   4d638:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d63c:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d640:	add	x0, x0, #0xa20
   4d644:	str	q0, [sp, #128]
   4d648:	ldr	q0, [sp, #80]
   4d64c:	ldr	q1, [x0]
   4d650:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d654:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d658:	add	x0, x0, #0xa30
   4d65c:	ldr	q1, [x0]
   4d660:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d664:	ldr	q1, [sp, #80]
   4d668:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d66c:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d670:	add	x0, x0, #0xa40
   4d674:	ldr	q1, [x0]
   4d678:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d67c:	ldr	q1, [sp, #80]
   4d680:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d684:	adrp	x0, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d688:	add	x0, x0, #0xa50
   4d68c:	ldr	q1, [x0]
   4d690:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d694:	ldr	q1, [sp, #80]
   4d698:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d69c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d6a0:	add	x0, x0, #0x330
   4d6a4:	ldr	q1, [x0]
   4d6a8:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d6ac:	ldr	q1, [sp, #80]
   4d6b0:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d6b4:	mov	v1.16b, v0.16b
   4d6b8:	ldr	x19, [x19, #4008]
   4d6bc:	add	w0, w20, #0x2
   4d6c0:	ubfiz	x1, x20, #4, #24
   4d6c4:	str	q0, [sp, #144]
   4d6c8:	ubfiz	x0, x0, #4, #25
   4d6cc:	add	x1, x19, x1
   4d6d0:	add	x0, x19, x0
   4d6d4:	add	x21, x19, x21
   4d6d8:	add	w20, w20, #0x1
   4d6dc:	ldr	q0, [x1]
   4d6e0:	ldr	q16, [x0]
   4d6e4:	ubfiz	x20, x20, #4, #25
   4d6e8:	add	x19, x19, x20
   4d6ec:	str	q0, [sp, #80]
   4d6f0:	mov	v0.16b, v16.16b
   4d6f4:	str	q16, [sp, #112]
   4d6f8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d6fc:	ldr	q1, [x21]
   4d700:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d704:	str	q0, [sp, #96]
   4d708:	ldr	q0, [sp, #80]
   4d70c:	ldr	q6, [sp, #128]
   4d710:	mov	v1.16b, v6.16b
   4d714:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d718:	ldr	q2, [sp, #96]
   4d71c:	mov	v1.16b, v0.16b
   4d720:	mov	v0.16b, v2.16b
   4d724:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d728:	ldr	q16, [sp, #112]
   4d72c:	mov	v1.16b, v16.16b
   4d730:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d734:	str	q0, [sp, #96]
   4d738:	cmp	x24, #0x0
   4d73c:	ldp	x0, x1, [sp, #96]
   4d740:	ldr	q16, [sp, #112]
   4d744:	ldr	q6, [sp, #128]
   4d748:	mov	v0.16b, v16.16b
   4d74c:	eor	x4, x1, #0x8000000000000000
   4d750:	fmov	d2, x0
   4d754:	csel	x3, x4, x1, lt  // lt = tstop
   4d758:	mov	v1.16b, v6.16b
   4d75c:	fmov	v2.d[1], x3
   4d760:	str	q2, [x23]
   4d764:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d768:	str	q0, [sp, #96]
   4d76c:	ldr	q0, [sp, #80]
   4d770:	ldr	q4, [sp, #144]
   4d774:	mov	v1.16b, v4.16b
   4d778:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d77c:	ldr	q2, [sp, #96]
   4d780:	mov	v1.16b, v0.16b
   4d784:	mov	v0.16b, v2.16b
   4d788:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d78c:	mov	v1.16b, v0.16b
   4d790:	ldr	q0, [x19]
   4d794:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d798:	ldr	q1, [sp, #80]
   4d79c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4d7a0:	str	q0, [x22]
   4d7a4:	ldp	x19, x20, [sp, #16]
   4d7a8:	ldp	x21, x22, [sp, #32]
   4d7ac:	ldp	x23, x24, [sp, #48]
   4d7b0:	ldp	x25, x26, [sp, #64]
   4d7b4:	ldp	x29, x30, [sp], #160
   4d7b8:	ret
   4d7bc:	and	x0, x21, #0x7fffffffffffffff
   4d7c0:	str	x0, [sp, #88]
   4d7c4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d7c8:	add	x0, x0, #0xeb0
   4d7cc:	ldr	q0, [sp, #80]
   4d7d0:	ldr	q1, [x0]
   4d7d4:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   4d7d8:	tbz	w0, #31, 4d7f0 <__exp2f_finite@GLIBC_2.17+0xd88>
   4d7dc:	stp	x19, x21, [sp, #80]
   4d7e0:	stp	x19, x21, [sp, #96]
   4d7e4:	ldr	q1, [sp, #80]
   4d7e8:	ldr	q0, [sp, #96]
   4d7ec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   4d7f0:	stp	x19, x21, [sp, #80]
   4d7f4:	ldr	q0, [sp, #80]
   4d7f8:	bl	57648 <f64xsubf128@@GLIBC_2.28+0x38c8>
   4d7fc:	cbnz	w0, 4d32c <__exp2f_finite@GLIBC_2.17+0x8c4>
   4d800:	adrp	x2, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d804:	add	x2, x2, #0x2f0
   4d808:	fmov	d0, x19
   4d80c:	fmov	v0.d[1], x21
   4d810:	ldr	q2, [x2]
   4d814:	str	q0, [x23]
   4d818:	str	q2, [x22]
   4d81c:	b	4d4ec <__exp2f_finite@GLIBC_2.17+0xa84>
   4d820:	mov	w20, #0xd000                	// #53248
   4d824:	mov	x0, #0x0                   	// #0
   4d828:	movk	w20, #0xc003, lsl #16
   4d82c:	fmov	d0, x0
   4d830:	add	w20, w3, w20
   4d834:	str	x19, [sp, #80]
   4d838:	lsl	x1, x3, #32
   4d83c:	fmov	v0.d[1], x1
   4d840:	lsr	w20, w20, #10
   4d844:	cbnz	w2, 4d570 <__exp2f_finite@GLIBC_2.17+0xb08>
   4d848:	str	x21, [sp, #88]
   4d84c:	mov	v1.16b, v0.16b
   4d850:	ldr	q0, [sp, #80]
   4d854:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d858:	mov	v2.16b, v0.16b
   4d85c:	b	4d590 <__exp2f_finite@GLIBC_2.17+0xb28>
   4d860:	mov	w20, #0xb400                	// #46080
   4d864:	movk	w20, #0xc002, lsl #16
   4d868:	add	w20, w3, w20
   4d86c:	lsr	w20, w20, #8
   4d870:	b	4d558 <__exp2f_finite@GLIBC_2.17+0xaf0>
   4d874:	nop
   4d878:	stp	x29, x30, [sp, #-176]!
   4d87c:	mov	x29, sp
   4d880:	stp	x21, x22, [sp, #32]
   4d884:	adrp	x22, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4d888:	ldr	x1, [x22, #4032]
   4d88c:	stp	x19, x20, [sp, #16]
   4d890:	mov	x19, x0
   4d894:	ldr	x0, [x1]
   4d898:	str	x0, [sp, #168]
   4d89c:	mov	x0, #0x0                   	// #0
   4d8a0:	str	q0, [sp, #64]
   4d8a4:	ldp	x1, x3, [sp, #64]
   4d8a8:	mov	x0, #0x42d1                	// #17105
   4d8ac:	movk	x0, #0xb544, lsl #16
   4d8b0:	movk	x0, #0x921f, lsl #32
   4d8b4:	movk	x0, #0x3ffe, lsl #48
   4d8b8:	and	x2, x3, #0x7fffffffffffffff
   4d8bc:	cmp	x2, x0
   4d8c0:	b.le	4da58 <__exp2f_finite@GLIBC_2.17+0xff0>
   4d8c4:	mov	x0, #0x321c                	// #12828
   4d8c8:	mov	x21, x3
   4d8cc:	movk	x0, #0xc7f3, lsl #16
   4d8d0:	movk	x0, #0x2d97, lsl #32
   4d8d4:	movk	x0, #0x4000, lsl #48
   4d8d8:	cmp	x2, x0
   4d8dc:	b.gt	4d964 <__exp2f_finite@GLIBC_2.17+0xefc>
   4d8e0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d8e4:	add	x0, x0, #0xa60
   4d8e8:	cmp	x3, #0x0
   4d8ec:	ldr	q1, [x0]
   4d8f0:	b.le	4dabc <__exp2f_finite@GLIBC_2.17+0x1054>
   4d8f4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d8f8:	str	q0, [sp, #64]
   4d8fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d900:	add	x0, x0, #0xa50
   4d904:	mov	w20, #0x1                   	// #1
   4d908:	ldr	q1, [x0]
   4d90c:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d910:	mov	v2.16b, v0.16b
   4d914:	ldr	q4, [sp, #64]
   4d918:	mov	v1.16b, v2.16b
   4d91c:	str	q2, [x19]
   4d920:	mov	v0.16b, v4.16b
   4d924:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d928:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4d92c:	add	x0, x0, #0xa50
   4d930:	ldr	q1, [x0]
   4d934:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4d938:	str	q0, [x19, #16]
   4d93c:	ldr	x1, [x22, #4032]
   4d940:	ldr	x2, [sp, #168]
   4d944:	ldr	x0, [x1]
   4d948:	eor	x0, x2, x0
   4d94c:	cbnz	x0, 4db08 <__exp2f_finite@GLIBC_2.17+0x10a0>
   4d950:	mov	w0, w20
   4d954:	ldp	x19, x20, [sp, #16]
   4d958:	ldp	x21, x22, [sp, #32]
   4d95c:	ldp	x29, x30, [sp], #176
   4d960:	ret
   4d964:	mov	x0, #0x7ffeffffffffffff    	// #9223090561878065151
   4d968:	cmp	x2, x0
   4d96c:	b.gt	4daa0 <__exp2f_finite@GLIBC_2.17+0x1038>
   4d970:	ubfx	x3, x2, #25, #23
   4d974:	extr	x0, x2, x1, #41
   4d978:	ubfiz	x4, x1, #7, #17
   4d97c:	ubfx	x5, x2, #1, #24
   4d980:	orr	x3, x3, #0x800000
   4d984:	and	x0, x0, #0xffffff
   4d988:	ubfx	x1, x1, #17, #24
   4d98c:	scvtf	d4, x5
   4d990:	scvtf	d3, x4
   4d994:	scvtf	d2, x3
   4d998:	scvtf	d1, x0
   4d99c:	scvtf	d0, x1
   4d9a0:	cmp	x4, #0x0
   4d9a4:	add	x0, sp, #0x68
   4d9a8:	cset	w3, ne  // ne = any
   4d9ac:	mov	w1, #0xffffbfea            	// #-16406
   4d9b0:	lsr	x2, x2, #48
   4d9b4:	add	w3, w3, #0x4
   4d9b8:	add	w2, w2, w1
   4d9bc:	mov	w4, #0x3                   	// #3
   4d9c0:	add	x1, x0, #0x28
   4d9c4:	adrp	x5, 86000 <f64xsubf128@@GLIBC_2.28+0x32280>
   4d9c8:	add	x5, x5, #0xb30
   4d9cc:	stp	x23, x24, [sp, #48]
   4d9d0:	stp	d2, d4, [sp, #104]
   4d9d4:	stp	d1, d0, [sp, #120]
   4d9d8:	str	d3, [sp, #136]
   4d9dc:	bl	4fef8 <__exp2f_finite@GLIBC_2.17+0x3490>
   4d9e0:	ldr	d0, [sp, #152]
   4d9e4:	mov	w20, w0
   4d9e8:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
   4d9ec:	str	q0, [sp, #64]
   4d9f0:	ldr	d0, [sp, #160]
   4d9f4:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
   4d9f8:	mov	v1.16b, v0.16b
   4d9fc:	ldr	q2, [sp, #64]
   4da00:	mov	v0.16b, v2.16b
   4da04:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4da08:	str	q0, [sp, #64]
   4da0c:	ldr	d0, [sp, #144]
   4da10:	ldp	x24, x23, [sp, #64]
   4da14:	bl	57b58 <f64xsubf128@@GLIBC_2.28+0x3dd8>
   4da18:	stp	x24, x23, [sp, #64]
   4da1c:	mov	v1.16b, v0.16b
   4da20:	str	q0, [sp, #80]
   4da24:	tbnz	x21, #63, 4da70 <__exp2f_finite@GLIBC_2.17+0x1008>
   4da28:	ldr	q0, [sp, #64]
   4da2c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4da30:	str	q0, [x19]
   4da34:	ldr	q1, [sp, #80]
   4da38:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4da3c:	stp	x24, x23, [sp, #64]
   4da40:	mov	v1.16b, v0.16b
   4da44:	ldr	q0, [sp, #64]
   4da48:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4da4c:	str	q0, [x19, #16]
   4da50:	ldp	x23, x24, [sp, #48]
   4da54:	b	4d93c <__exp2f_finite@GLIBC_2.17+0xed4>
   4da58:	fmov	d0, x1
   4da5c:	mov	w20, #0x0                   	// #0
   4da60:	stp	xzr, xzr, [x19, #16]
   4da64:	fmov	v0.d[1], x3
   4da68:	str	q0, [x19]
   4da6c:	b	4d93c <__exp2f_finite@GLIBC_2.17+0xed4>
   4da70:	ldr	q0, [sp, #64]
   4da74:	eor	x23, x23, #0x8000000000000000
   4da78:	neg	w20, w20
   4da7c:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4da80:	str	q0, [sp, #64]
   4da84:	ldp	x0, x1, [sp, #64]
   4da88:	ldr	q1, [sp, #80]
   4da8c:	mov	v0.16b, v1.16b
   4da90:	ldr	q1, [sp, #64]
   4da94:	eor	x2, x1, #0x8000000000000000
   4da98:	stp	x0, x2, [x19]
   4da9c:	b	4da38 <__exp2f_finite@GLIBC_2.17+0xfd0>
   4daa0:	stp	x1, x3, [sp, #64]
   4daa4:	mov	w20, #0x0                   	// #0
   4daa8:	ldr	q1, [sp, #64]
   4daac:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4dab0:	str	q0, [x19]
   4dab4:	str	q0, [x19, #16]
   4dab8:	b	4d93c <__exp2f_finite@GLIBC_2.17+0xed4>
   4dabc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4dac0:	str	q0, [sp, #64]
   4dac4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4dac8:	add	x0, x0, #0xa50
   4dacc:	mov	w20, #0xffffffff            	// #-1
   4dad0:	ldr	q1, [x0]
   4dad4:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4dad8:	mov	v2.16b, v0.16b
   4dadc:	ldr	q4, [sp, #64]
   4dae0:	mov	v1.16b, v2.16b
   4dae4:	str	q2, [x19]
   4dae8:	mov	v0.16b, v4.16b
   4daec:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   4daf0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   4daf4:	add	x0, x0, #0xa50
   4daf8:	ldr	q1, [x0]
   4dafc:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   4db00:	str	q0, [x19, #16]
   4db04:	b	4d93c <__exp2f_finite@GLIBC_2.17+0xed4>
   4db08:	stp	x23, x24, [sp, #48]
   4db0c:	bl	ba70 <__stack_chk_fail@plt>
   4db10:	stp	x29, x30, [sp, #-80]!
   4db14:	adrp	x3, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4db18:	mov	x2, #0x2000000             	// #33554432
   4db1c:	mov	x29, sp
   4db20:	ldr	d5, [x3, #2544]
   4db24:	movk	x2, #0x41a0, lsl #48
   4db28:	fmov	d2, x2
   4db2c:	adrp	x6, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4db30:	mov	x7, x0
   4db34:	fmul	d5, d0, d5
   4db38:	ldr	x2, [x6, #4032]
   4db3c:	fmul	d2, d5, d2
   4db40:	ldr	x0, [x2]
   4db44:	str	x0, [sp, #72]
   4db48:	mov	x0, #0x0                   	// #0
   4db4c:	fsub	d0, d2, d5
   4db50:	fsub	d2, d2, d0
   4db54:	fmov	x2, d2
   4db58:	fsub	d5, d5, d2
   4db5c:	ubfx	x2, x2, #52, #11
   4db60:	cmp	w2, #0x1aa
   4db64:	b.le	4ded0 <__exp2f_finite@GLIBC_2.17+0x1468>
   4db68:	sub	w2, w2, #0x1c2
   4db6c:	mov	w5, #0xaaab                	// #43691
   4db70:	movk	w5, #0x2aaa, lsl #16
   4db74:	adrp	x9, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4db78:	add	x0, x9, #0xa08
   4db7c:	smull	x5, w2, w5
   4db80:	asr	x5, x5, #34
   4db84:	sub	w5, w5, w2, asr #31
   4db88:	sxtw	x2, w5
   4db8c:	add	w5, w5, w5, lsl #1
   4db90:	lsl	w5, w5, #23
   4db94:	ldr	d1, [x0, x2, lsl #3]
   4db98:	adrp	x4, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4db9c:	add	x0, x9, #0xa08
   4dba0:	add	x0, x0, x2, lsl #3
   4dba4:	adrp	x3, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4dba8:	ldr	d17, [x4, #2552]
   4dbac:	sub	x0, x0, #0x8
   4dbb0:	ldr	d6, [x3, #2536]
   4dbb4:	add	x4, sp, #0x18
   4dbb8:	mov	x3, #0x1                   	// #1
   4dbbc:	fmov	x2, d17
   4dbc0:	asr	x10, x2, #32
   4dbc4:	sub	w5, w10, w5
   4dbc8:	mov	w11, w10
   4dbcc:	bfi	x2, x5, #32, #32
   4dbd0:	fmov	d0, x2
   4dbd4:	b	4dbdc <__exp2f_finite@GLIBC_2.17+0x1174>
   4dbd8:	ldr	d1, [x0, x3, lsl #3]
   4dbdc:	fmul	d1, d2, d1
   4dbe0:	add	x2, x4, x3, lsl #3
   4dbe4:	add	x3, x3, #0x1
   4dbe8:	cmp	x3, #0x7
   4dbec:	fmul	d1, d1, d0
   4dbf0:	fmul	d0, d0, d6
   4dbf4:	stur	d1, [x2, #-8]
   4dbf8:	b.ne	4dbd8 <__exp2f_finite@GLIBC_2.17+0x1170>  // b.any
   4dbfc:	adrp	x0, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   4dc00:	movi	d16, #0x0
   4dc04:	mov	x8, x4
   4dc08:	mov	x3, x4
   4dc0c:	ldr	d4, [x0, #160]
   4dc10:	mov	w0, #0x0                   	// #0
   4dc14:	ldr	d0, [x3]
   4dc18:	add	w0, w0, #0x1
   4dc1c:	cmp	w0, #0x3
   4dc20:	fadd	d1, d0, d4
   4dc24:	fsub	d1, d1, d4
   4dc28:	fsub	d0, d0, d1
   4dc2c:	fadd	d16, d16, d1
   4dc30:	str	d0, [x3], #8
   4dc34:	b.ne	4dc14 <__exp2f_finite@GLIBC_2.17+0x11ac>  // b.any
   4dc38:	movi	d0, #0x0
   4dc3c:	mov	x2, #0x0                   	// #0
   4dc40:	add	x3, x4, x2
   4dc44:	sub	x2, x2, #0x8
   4dc48:	cmn	x2, #0x30
   4dc4c:	ldr	d1, [x3, #40]
   4dc50:	fadd	d0, d0, d1
   4dc54:	b.ne	4dc40 <__exp2f_finite@GLIBC_2.17+0x11d8>  // b.any
   4dc58:	ldp	d1, d2, [sp, #24]
   4dc5c:	fadd	d3, d4, d0
   4dc60:	ldp	d21, d20, [sp, #40]
   4dc64:	adrp	x0, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4dc68:	fsub	d1, d1, d0
   4dc6c:	fmov	x2, d5
   4dc70:	fsub	d3, d3, d4
   4dc74:	ldr	d7, [x0, #2528]
   4dc78:	ldp	d19, d18, [sp, #56]
   4dc7c:	fadd	d2, d1, d2
   4dc80:	ubfx	x2, x2, #52, #11
   4dc84:	fadd	d16, d3, d16
   4dc88:	fsub	d0, d0, d3
   4dc8c:	cmp	w2, #0x1aa
   4dc90:	fadd	d2, d2, d21
   4dc94:	fadd	d3, d7, d16
   4dc98:	fadd	d2, d2, d20
   4dc9c:	fsub	d3, d3, d7
   4dca0:	fadd	d2, d2, d19
   4dca4:	fsub	d3, d16, d3
   4dca8:	fadd	d2, d2, d18
   4dcac:	fadd	d16, d2, d0
   4dcb0:	fsub	d0, d0, d16
   4dcb4:	fadd	d2, d0, d2
   4dcb8:	b.le	4dec0 <__exp2f_finite@GLIBC_2.17+0x1458>
   4dcbc:	sub	w2, w2, #0x1c2
   4dcc0:	mov	w0, #0xaaab                	// #43691
   4dcc4:	movk	w0, #0x2aaa, lsl #16
   4dcc8:	add	x3, x9, #0xa08
   4dccc:	smull	x0, w2, w0
   4dcd0:	asr	x0, x0, #34
   4dcd4:	sub	w2, w0, w2, asr #31
   4dcd8:	sxtw	x5, w2
   4dcdc:	add	w2, w2, w2, lsl #1
   4dce0:	sub	w11, w10, w2, lsl #23
   4dce4:	ldr	d1, [x3, x5, lsl #3]
   4dce8:	fmov	x2, d17
   4dcec:	add	x9, x9, #0xa08
   4dcf0:	add	x5, x9, x5, lsl #3
   4dcf4:	sub	x5, x5, #0x8
   4dcf8:	bfi	x2, x11, #32, #32
   4dcfc:	fmov	d0, x2
   4dd00:	mov	x2, #0x1                   	// #1
   4dd04:	b	4dd0c <__exp2f_finite@GLIBC_2.17+0x12a4>
   4dd08:	ldr	d1, [x5, x2, lsl #3]
   4dd0c:	fmul	d1, d5, d1
   4dd10:	add	x3, x4, x2, lsl #3
   4dd14:	add	x2, x2, #0x1
   4dd18:	cmp	x2, #0x7
   4dd1c:	fmul	d1, d1, d0
   4dd20:	fmul	d0, d0, d6
   4dd24:	stur	d1, [x3, #-8]
   4dd28:	b.ne	4dd08 <__exp2f_finite@GLIBC_2.17+0x12a0>  // b.any
   4dd2c:	movi	d6, #0x0
   4dd30:	mov	w0, #0x0                   	// #0
   4dd34:	ldr	d1, [x8]
   4dd38:	add	w0, w0, #0x1
   4dd3c:	cmp	w0, #0x3
   4dd40:	fadd	d5, d4, d1
   4dd44:	fsub	d5, d5, d4
   4dd48:	fsub	d1, d1, d5
   4dd4c:	fadd	d6, d6, d5
   4dd50:	str	d1, [x8], #8
   4dd54:	b.ne	4dd34 <__exp2f_finite@GLIBC_2.17+0x12cc>  // b.any
   4dd58:	movi	d0, #0x0
   4dd5c:	mov	x2, #0x0                   	// #0
   4dd60:	add	x3, x4, x2
   4dd64:	sub	x2, x2, #0x8
   4dd68:	cmn	x2, #0x30
   4dd6c:	ldr	d1, [x3, #40]
   4dd70:	fadd	d0, d0, d1
   4dd74:	b.ne	4dd60 <__exp2f_finite@GLIBC_2.17+0x12f8>  // b.any
   4dd78:	ldp	d5, d22, [sp, #24]
   4dd7c:	fadd	d1, d4, d0
   4dd80:	ldp	d21, d20, [sp, #40]
   4dd84:	fabs	d17, d16
   4dd88:	fsub	d5, d5, d0
   4dd8c:	fsub	d4, d1, d4
   4dd90:	ldp	d19, d18, [sp, #56]
   4dd94:	fadd	d5, d5, d22
   4dd98:	fsub	d0, d0, d4
   4dd9c:	fadd	d4, d4, d6
   4dda0:	fadd	d5, d5, d21
   4dda4:	fadd	d1, d7, d4
   4dda8:	fadd	d5, d5, d20
   4ddac:	fsub	d7, d1, d7
   4ddb0:	fadd	d5, d5, d19
   4ddb4:	fsub	d4, d4, d7
   4ddb8:	fadd	d5, d5, d18
   4ddbc:	fadd	d3, d3, d4
   4ddc0:	fadd	d4, d5, d0
   4ddc4:	fabs	d7, d4
   4ddc8:	fsub	d0, d0, d4
   4ddcc:	fadd	d1, d16, d4
   4ddd0:	fcmpe	d17, d7
   4ddd4:	fadd	d0, d0, d5
   4ddd8:	b.le	4df04 <__exp2f_finite@GLIBC_2.17+0x149c>
   4dddc:	fsub	d16, d16, d1
   4dde0:	fadd	d16, d16, d4
   4dde4:	fmov	d4, #5.000000000000000000e-01
   4dde8:	fcmpe	d1, d4
   4ddec:	b.le	4dee8 <__exp2f_finite@GLIBC_2.17+0x1480>
   4ddf0:	fmov	d4, #1.000000000000000000e+00
   4ddf4:	fsub	d1, d1, d4
   4ddf8:	fadd	d3, d3, d4
   4ddfc:	fadd	d4, d16, d2
   4de00:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4de04:	mov	x2, #0x2000000             	// #33554432
   4de08:	adrp	x3, 83000 <f64xsubf128@@GLIBC_2.28+0x2f280>
   4de0c:	ldr	d18, [x0, #576]
   4de10:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4de14:	movk	x2, #0x41a0, lsl #48
   4de18:	fmov	d5, x2
   4de1c:	fadd	d4, d4, d0
   4de20:	ldr	d6, [x0, #568]
   4de24:	fcvtzs	w0, d3
   4de28:	fadd	d2, d2, d0
   4de2c:	ldr	d7, [x3, #384]
   4de30:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4de34:	ldr	x6, [x6, #4032]
   4de38:	fadd	d3, d4, d1
   4de3c:	ldr	d17, [x2, #2520]
   4de40:	ldr	x3, [sp, #72]
   4de44:	ldr	x2, [x6]
   4de48:	eor	x2, x3, x2
   4de4c:	and	w0, w0, #0x3
   4de50:	fmul	d4, d3, d5
   4de54:	fsub	d1, d1, d3
   4de58:	fmul	d5, d18, d3
   4de5c:	fmul	d6, d3, d6
   4de60:	fsub	d19, d4, d3
   4de64:	fadd	d0, d1, d16
   4de68:	fsub	d1, d4, d19
   4de6c:	fadd	d0, d0, d2
   4de70:	fsub	d3, d3, d1
   4de74:	fmul	d2, d7, d1
   4de78:	fmul	d1, d17, d1
   4de7c:	fmul	d0, d0, d18
   4de80:	fmul	d4, d17, d3
   4de84:	fsub	d2, d2, d5
   4de88:	fmul	d3, d7, d3
   4de8c:	fadd	d4, d6, d4
   4de90:	fadd	d1, d2, d1
   4de94:	fadd	d0, d0, d4
   4de98:	fadd	d1, d1, d3
   4de9c:	fadd	d0, d1, d0
   4dea0:	fadd	d1, d5, d0
   4dea4:	fsub	d5, d5, d1
   4dea8:	str	d1, [x7]
   4deac:	fadd	d0, d5, d0
   4deb0:	str	d0, [x1]
   4deb4:	cbnz	x2, 4df10 <__exp2f_finite@GLIBC_2.17+0x14a8>
   4deb8:	ldp	x29, x30, [sp], #80
   4debc:	ret
   4dec0:	adrp	x0, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4dec4:	mov	x5, #0x0                   	// #0
   4dec8:	ldr	d1, [x0, #2560]
   4decc:	b	4dce8 <__exp2f_finite@GLIBC_2.17+0x1280>
   4ded0:	adrp	x0, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4ded4:	mov	w5, #0x0                   	// #0
   4ded8:	adrp	x9, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4dedc:	mov	x2, #0x0                   	// #0
   4dee0:	ldr	d1, [x0, #2560]
   4dee4:	b	4db98 <__exp2f_finite@GLIBC_2.17+0x1130>
   4dee8:	fmov	d4, #-5.000000000000000000e-01
   4deec:	fcmpe	d1, d4
   4def0:	b.pl	4ddfc <__exp2f_finite@GLIBC_2.17+0x1394>  // b.nfrst
   4def4:	fmov	d4, #1.000000000000000000e+00
   4def8:	fadd	d1, d1, d4
   4defc:	fsub	d3, d3, d4
   4df00:	b	4ddfc <__exp2f_finite@GLIBC_2.17+0x1394>
   4df04:	fsub	d4, d4, d1
   4df08:	fadd	d16, d4, d16
   4df0c:	b	4dde4 <__exp2f_finite@GLIBC_2.17+0x137c>
   4df10:	bl	ba70 <__stack_chk_fail@plt>
   4df14:	nop
   4df18:	fadd	d7, d0, d0
   4df1c:	fmul	d16, d0, d0
   4df20:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4df24:	fnmsub	d5, d0, d0, d16
   4df28:	fmul	d2, d0, d1
   4df2c:	fmov	d17, #2.000000000000000000e+00
   4df30:	ldr	d3, [x1, #3232]
   4df34:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4df38:	fmadd	d7, d7, d1, d16
   4df3c:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4df40:	ldr	d22, [x1, #3240]
   4df44:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4df48:	fmadd	d17, d2, d17, d5
   4df4c:	ldr	d6, [x2, #3224]
   4df50:	ldr	d21, [x1, #3248]
   4df54:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4df58:	ldr	d20, [x1, #3256]
   4df5c:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4df60:	fabs	d24, d6
   4df64:	ldr	d19, [x1, #3264]
   4df68:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4df6c:	fmadd	d22, d7, d3, d22
   4df70:	ldr	d18, [x1, #3272]
   4df74:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4df78:	fadd	d2, d16, d17
   4df7c:	ldr	d4, [x1, #3280]
   4df80:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4df84:	ldr	d23, [x1, #3216]
   4df88:	fsub	d5, d16, d2
   4df8c:	fmadd	d21, d22, d7, d21
   4df90:	fadd	d5, d5, d17
   4df94:	fmadd	d20, d21, d7, d20
   4df98:	fmadd	d19, d20, d7, d19
   4df9c:	fmadd	d18, d19, d7, d18
   4dfa0:	fmadd	d4, d18, d7, d4
   4dfa4:	fmul	d4, d4, d7
   4dfa8:	fabs	d7, d4
   4dfac:	fadd	d3, d6, d4
   4dfb0:	fcmpe	d7, d24
   4dfb4:	b.le	4e170 <__exp2f_finite@GLIBC_2.17+0x1708>
   4dfb8:	fsub	d4, d4, d3
   4dfbc:	movi	d7, #0x0
   4dfc0:	fadd	d4, d4, d6
   4dfc4:	fadd	d4, d4, d23
   4dfc8:	fadd	d4, d4, d7
   4dfcc:	fadd	d18, d4, d3
   4dfd0:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4dfd4:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4dfd8:	ldr	d6, [x2, #3208]
   4dfdc:	ldr	d19, [x1, #3200]
   4dfe0:	fsub	d3, d3, d18
   4dfe4:	fmul	d16, d2, d18
   4dfe8:	fnmsub	d7, d18, d2, d16
   4dfec:	fabs	d20, d6
   4dff0:	fadd	d3, d3, d4
   4dff4:	fmul	d3, d2, d3
   4dff8:	fmadd	d3, d5, d18, d3
   4dffc:	fadd	d3, d3, d7
   4e000:	fadd	d17, d16, d3
   4e004:	fabs	d18, d17
   4e008:	fsub	d7, d16, d17
   4e00c:	fadd	d4, d6, d17
   4e010:	fcmpe	d18, d20
   4e014:	fadd	d3, d7, d3
   4e018:	b.le	4e1d4 <__exp2f_finite@GLIBC_2.17+0x176c>
   4e01c:	fsub	d7, d17, d4
   4e020:	fadd	d7, d7, d6
   4e024:	fadd	d7, d7, d19
   4e028:	fadd	d7, d7, d3
   4e02c:	fadd	d17, d7, d4
   4e030:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e034:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e038:	ldr	d6, [x2, #3192]
   4e03c:	ldr	d18, [x1, #3184]
   4e040:	fsub	d4, d4, d17
   4e044:	fmul	d16, d2, d17
   4e048:	fnmsub	d3, d17, d2, d16
   4e04c:	fabs	d19, d6
   4e050:	fadd	d4, d4, d7
   4e054:	fmul	d4, d2, d4
   4e058:	fmadd	d4, d5, d17, d4
   4e05c:	fadd	d4, d4, d3
   4e060:	fadd	d7, d16, d4
   4e064:	fabs	d17, d7
   4e068:	fsub	d16, d16, d7
   4e06c:	fadd	d3, d6, d7
   4e070:	fcmpe	d17, d19
   4e074:	fadd	d16, d16, d4
   4e078:	b.le	4e1c0 <__exp2f_finite@GLIBC_2.17+0x1758>
   4e07c:	fsub	d4, d7, d3
   4e080:	fadd	d4, d4, d6
   4e084:	fadd	d4, d4, d18
   4e088:	fadd	d4, d4, d16
   4e08c:	fadd	d17, d4, d3
   4e090:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e094:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e098:	ldr	d6, [x2, #3176]
   4e09c:	ldr	d18, [x1, #3168]
   4e0a0:	fsub	d3, d3, d17
   4e0a4:	fmul	d7, d2, d17
   4e0a8:	fnmsub	d16, d17, d2, d7
   4e0ac:	fabs	d19, d6
   4e0b0:	fadd	d3, d3, d4
   4e0b4:	fmul	d3, d2, d3
   4e0b8:	fmadd	d3, d5, d17, d3
   4e0bc:	fadd	d3, d3, d16
   4e0c0:	fadd	d16, d7, d3
   4e0c4:	fabs	d17, d16
   4e0c8:	fsub	d7, d7, d16
   4e0cc:	fadd	d4, d6, d16
   4e0d0:	fcmpe	d17, d19
   4e0d4:	fadd	d3, d7, d3
   4e0d8:	b.le	4e1ac <__exp2f_finite@GLIBC_2.17+0x1744>
   4e0dc:	fsub	d16, d16, d4
   4e0e0:	fadd	d6, d16, d6
   4e0e4:	fadd	d6, d6, d18
   4e0e8:	fadd	d6, d6, d3
   4e0ec:	fadd	d7, d6, d4
   4e0f0:	fabs	d16, d0
   4e0f4:	fsub	d4, d4, d7
   4e0f8:	fmul	d3, d2, d7
   4e0fc:	fnmsub	d17, d7, d2, d3
   4e100:	fadd	d6, d4, d6
   4e104:	fmul	d2, d2, d6
   4e108:	fmadd	d2, d5, d7, d2
   4e10c:	fadd	d2, d2, d17
   4e110:	fadd	d5, d3, d2
   4e114:	fsub	d3, d3, d5
   4e118:	fmul	d4, d0, d5
   4e11c:	fnmsub	d6, d5, d0, d4
   4e120:	fadd	d2, d3, d2
   4e124:	fmul	d2, d0, d2
   4e128:	fmadd	d2, d1, d5, d2
   4e12c:	fadd	d2, d2, d6
   4e130:	fadd	d5, d4, d2
   4e134:	fabs	d7, d5
   4e138:	fsub	d4, d4, d5
   4e13c:	fadd	d3, d0, d5
   4e140:	fcmpe	d7, d16
   4e144:	fadd	d2, d4, d2
   4e148:	b.le	4e188 <__exp2f_finite@GLIBC_2.17+0x1720>
   4e14c:	fsub	d5, d5, d3
   4e150:	fadd	d0, d5, d0
   4e154:	fadd	d0, d0, d1
   4e158:	fadd	d0, d0, d2
   4e15c:	fadd	d1, d0, d3
   4e160:	fsub	d3, d3, d1
   4e164:	fadd	d0, d3, d0
   4e168:	stp	d1, d0, [x0]
   4e16c:	ret
   4e170:	fsub	d6, d6, d3
   4e174:	movi	d7, #0x0
   4e178:	fadd	d4, d6, d4
   4e17c:	fadd	d4, d4, d7
   4e180:	fadd	d4, d4, d23
   4e184:	b	4dfcc <__exp2f_finite@GLIBC_2.17+0x1564>
   4e188:	fsub	d0, d0, d3
   4e18c:	fadd	d0, d0, d5
   4e190:	fadd	d0, d0, d2
   4e194:	fadd	d0, d0, d1
   4e198:	fadd	d1, d0, d3
   4e19c:	fsub	d3, d3, d1
   4e1a0:	fadd	d0, d3, d0
   4e1a4:	stp	d1, d0, [x0]
   4e1a8:	ret
   4e1ac:	fsub	d6, d6, d4
   4e1b0:	fadd	d6, d6, d16
   4e1b4:	fadd	d6, d6, d3
   4e1b8:	fadd	d6, d6, d18
   4e1bc:	b	4e0ec <__exp2f_finite@GLIBC_2.17+0x1684>
   4e1c0:	fsub	d6, d6, d3
   4e1c4:	fadd	d4, d6, d7
   4e1c8:	fadd	d4, d4, d16
   4e1cc:	fadd	d4, d4, d18
   4e1d0:	b	4e08c <__exp2f_finite@GLIBC_2.17+0x1624>
   4e1d4:	fsub	d6, d6, d4
   4e1d8:	fadd	d7, d6, d17
   4e1dc:	fadd	d7, d7, d3
   4e1e0:	fadd	d7, d7, d19
   4e1e4:	b	4e02c <__exp2f_finite@GLIBC_2.17+0x15c4>
   4e1e8:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e1ec:	fmov	d19, #2.000000000000000000e+00
   4e1f0:	adrp	x3, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e1f4:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e1f8:	ldr	d3, [x1, #3288]
   4e1fc:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e200:	ldr	d5, [x3, #3368]
   4e204:	adrp	x3, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e208:	ldr	d23, [x2, #3360]
   4e20c:	adrp	x2, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   4e210:	fadd	d4, d3, d0
   4e214:	ldr	d7, [x1, #3384]
   4e218:	add	x2, x2, #0xc08
   4e21c:	ldr	d21, [x3, #3376]
   4e220:	fabs	d22, d7
   4e224:	fsub	d3, d4, d3
   4e228:	fmov	x1, d4
   4e22c:	fsub	d0, d0, d3
   4e230:	lsl	w1, w1, #2
   4e234:	add	w5, w1, #0x1
   4e238:	add	w4, w1, #0x2
   4e23c:	add	w3, w1, #0x3
   4e240:	ldr	d4, [x2, w1, sxtw #3]
   4e244:	fadd	d3, d0, d1
   4e248:	ldr	d6, [x2, w5, sxtw #3]
   4e24c:	ldr	d17, [x2, w4, sxtw #3]
   4e250:	ldr	d16, [x2, w3, sxtw #3]
   4e254:	fsub	d0, d0, d3
   4e258:	fmul	d18, d3, d3
   4e25c:	fnmsub	d2, d3, d3, d18
   4e260:	fadd	d1, d0, d1
   4e264:	fmul	d0, d3, d1
   4e268:	fmadd	d19, d0, d19, d2
   4e26c:	fadd	d0, d18, d19
   4e270:	fsub	d2, d18, d0
   4e274:	fmul	d18, d5, d0
   4e278:	fnmsub	d20, d0, d5, d18
   4e27c:	fadd	d2, d2, d19
   4e280:	fmul	d5, d5, d2
   4e284:	fmadd	d5, d23, d0, d5
   4e288:	fadd	d5, d5, d20
   4e28c:	fadd	d20, d18, d5
   4e290:	fabs	d23, d20
   4e294:	fsub	d18, d18, d20
   4e298:	fadd	d19, d7, d20
   4e29c:	fcmpe	d23, d22
   4e2a0:	fadd	d18, d18, d5
   4e2a4:	b.le	4e58c <__exp2f_finite@GLIBC_2.17+0x1b24>
   4e2a8:	fsub	d5, d20, d19
   4e2ac:	fadd	d5, d5, d7
   4e2b0:	fadd	d5, d5, d21
   4e2b4:	fadd	d5, d5, d18
   4e2b8:	fadd	d22, d5, d19
   4e2bc:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e2c0:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e2c4:	ldr	d7, [x2, #3400]
   4e2c8:	ldr	d23, [x1, #3392]
   4e2cc:	fsub	d19, d19, d22
   4e2d0:	fmul	d21, d2, d22
   4e2d4:	fmul	d18, d0, d22
   4e2d8:	fabs	d24, d7
   4e2dc:	fnmsub	d22, d0, d22, d18
   4e2e0:	fadd	d5, d19, d5
   4e2e4:	fmadd	d5, d0, d5, d21
   4e2e8:	fadd	d5, d5, d22
   4e2ec:	fadd	d20, d18, d5
   4e2f0:	fabs	d21, d20
   4e2f4:	fsub	d18, d18, d20
   4e2f8:	fadd	d19, d7, d20
   4e2fc:	fcmpe	d21, d24
   4e300:	fadd	d18, d18, d5
   4e304:	b.le	4e628 <__exp2f_finite@GLIBC_2.17+0x1bc0>
   4e308:	fsub	d20, d20, d19
   4e30c:	fadd	d7, d20, d7
   4e310:	fadd	d7, d7, d23
   4e314:	fadd	d7, d7, d18
   4e318:	fadd	d20, d7, d19
   4e31c:	fabs	d22, d3
   4e320:	fsub	d19, d19, d20
   4e324:	fmul	d5, d2, d20
   4e328:	fmul	d18, d0, d20
   4e32c:	fnmsub	d20, d0, d20, d18
   4e330:	fadd	d7, d19, d7
   4e334:	fmadd	d7, d0, d7, d5
   4e338:	fadd	d7, d7, d20
   4e33c:	fadd	d21, d18, d7
   4e340:	fsub	d18, d18, d21
   4e344:	fmul	d5, d3, d21
   4e348:	fmul	d20, d1, d21
   4e34c:	fnmsub	d21, d3, d21, d5
   4e350:	fadd	d18, d18, d7
   4e354:	fmadd	d18, d3, d18, d20
   4e358:	fadd	d18, d18, d21
   4e35c:	fadd	d7, d5, d18
   4e360:	fabs	d21, d7
   4e364:	fsub	d5, d5, d7
   4e368:	fadd	d19, d3, d7
   4e36c:	fcmpe	d21, d22
   4e370:	fadd	d5, d5, d18
   4e374:	b.le	4e614 <__exp2f_finite@GLIBC_2.17+0x1bac>
   4e378:	fsub	d7, d7, d19
   4e37c:	fadd	d3, d7, d3
   4e380:	fadd	d3, d3, d1
   4e384:	fadd	d3, d3, d5
   4e388:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e38c:	adrp	x3, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e390:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e394:	fadd	d20, d3, d19
   4e398:	ldr	d5, [x1, #3304]
   4e39c:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e3a0:	ldr	d21, [x3, #3296]
   4e3a4:	ldr	d1, [x2, #3320]
   4e3a8:	fmul	d7, d5, d0
   4e3ac:	fmul	d18, d5, d2
   4e3b0:	fmadd	d18, d21, d0, d18
   4e3b4:	fnmsub	d5, d0, d5, d7
   4e3b8:	fabs	d22, d1
   4e3bc:	fsub	d19, d19, d20
   4e3c0:	ldr	d21, [x1, #3312]
   4e3c4:	fadd	d3, d19, d3
   4e3c8:	fadd	d18, d18, d5
   4e3cc:	fadd	d5, d7, d18
   4e3d0:	fabs	d23, d5
   4e3d4:	fsub	d7, d7, d5
   4e3d8:	fadd	d19, d1, d5
   4e3dc:	fcmpe	d23, d22
   4e3e0:	fadd	d7, d7, d18
   4e3e4:	b.le	4e600 <__exp2f_finite@GLIBC_2.17+0x1b98>
   4e3e8:	fsub	d5, d5, d19
   4e3ec:	fadd	d5, d5, d1
   4e3f0:	fadd	d5, d5, d21
   4e3f4:	fadd	d5, d5, d7
   4e3f8:	fadd	d22, d5, d19
   4e3fc:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e400:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e404:	ldr	d1, [x2, #3336]
   4e408:	ldr	d23, [x1, #3328]
   4e40c:	fsub	d19, d19, d22
   4e410:	fmul	d21, d2, d22
   4e414:	fmul	d18, d0, d22
   4e418:	fabs	d24, d1
   4e41c:	fnmsub	d22, d0, d22, d18
   4e420:	fadd	d5, d19, d5
   4e424:	fmadd	d5, d0, d5, d21
   4e428:	fadd	d5, d5, d22
   4e42c:	fadd	d7, d18, d5
   4e430:	fabs	d19, d7
   4e434:	fsub	d18, d18, d7
   4e438:	fadd	d21, d1, d7
   4e43c:	fcmpe	d19, d24
   4e440:	fadd	d18, d18, d5
   4e444:	b.le	4e5ec <__exp2f_finite@GLIBC_2.17+0x1b84>
   4e448:	fsub	d7, d7, d21
   4e44c:	fadd	d7, d7, d1
   4e450:	fadd	d7, d7, d23
   4e454:	fadd	d7, d7, d18
   4e458:	fadd	d23, d7, d21
   4e45c:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e460:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e464:	ldr	d1, [x2, #3352]
   4e468:	ldr	d24, [x1, #3344]
   4e46c:	fsub	d21, d21, d23
   4e470:	fmul	d18, d0, d23
   4e474:	fmul	d22, d2, d23
   4e478:	fnmsub	d23, d0, d23, d18
   4e47c:	fabs	d25, d1
   4e480:	fadd	d7, d21, d7
   4e484:	fmadd	d7, d0, d7, d22
   4e488:	fadd	d7, d7, d23
   4e48c:	fadd	d19, d18, d7
   4e490:	fabs	d21, d19
   4e494:	fsub	d5, d18, d19
   4e498:	fadd	d18, d1, d19
   4e49c:	fcmpe	d21, d25
   4e4a0:	fadd	d7, d5, d7
   4e4a4:	b.le	4e5d8 <__exp2f_finite@GLIBC_2.17+0x1b70>
   4e4a8:	fsub	d5, d19, d18
   4e4ac:	fadd	d5, d5, d1
   4e4b0:	fadd	d5, d5, d24
   4e4b4:	fadd	d5, d5, d7
   4e4b8:	fadd	d19, d5, d18
   4e4bc:	fmul	d7, d17, d20
   4e4c0:	fmul	d16, d16, d20
   4e4c4:	fmadd	d16, d17, d3, d16
   4e4c8:	fnmsub	d17, d17, d20, d7
   4e4cc:	fsub	d18, d18, d19
   4e4d0:	fmul	d1, d0, d19
   4e4d4:	fmul	d2, d2, d19
   4e4d8:	fnmsub	d19, d0, d19, d1
   4e4dc:	fadd	d5, d18, d5
   4e4e0:	fadd	d17, d16, d17
   4e4e4:	fmadd	d0, d0, d5, d2
   4e4e8:	fadd	d5, d7, d17
   4e4ec:	fsub	d7, d7, d5
   4e4f0:	fabs	d16, d5
   4e4f4:	fadd	d0, d0, d19
   4e4f8:	fadd	d17, d7, d17
   4e4fc:	fadd	d3, d1, d0
   4e500:	fsub	d1, d1, d3
   4e504:	fmul	d2, d4, d3
   4e508:	fnmsub	d7, d3, d4, d2
   4e50c:	fadd	d0, d1, d0
   4e510:	fmul	d0, d4, d0
   4e514:	fmadd	d0, d6, d3, d0
   4e518:	fadd	d0, d0, d7
   4e51c:	fadd	d3, d2, d0
   4e520:	fabs	d7, d3
   4e524:	fsub	d2, d2, d3
   4e528:	fsub	d1, d5, d3
   4e52c:	fcmpe	d16, d7
   4e530:	fadd	d2, d2, d0
   4e534:	b.le	4e5c4 <__exp2f_finite@GLIBC_2.17+0x1b5c>
   4e538:	fsub	d5, d5, d1
   4e53c:	fsub	d0, d5, d3
   4e540:	fsub	d0, d0, d2
   4e544:	fadd	d0, d0, d17
   4e548:	fadd	d2, d0, d1
   4e54c:	fabs	d3, d4
   4e550:	fabs	d7, d2
   4e554:	fsub	d5, d1, d2
   4e558:	fadd	d1, d4, d2
   4e55c:	fcmpe	d7, d3
   4e560:	fadd	d0, d5, d0
   4e564:	b.le	4e5a0 <__exp2f_finite@GLIBC_2.17+0x1b38>
   4e568:	fsub	d2, d2, d1
   4e56c:	fadd	d4, d2, d4
   4e570:	fadd	d4, d4, d6
   4e574:	fadd	d4, d4, d0
   4e578:	fadd	d0, d4, d1
   4e57c:	fsub	d1, d1, d0
   4e580:	fadd	d4, d1, d4
   4e584:	stp	d0, d4, [x0]
   4e588:	ret
   4e58c:	fsub	d7, d7, d19
   4e590:	fadd	d5, d7, d20
   4e594:	fadd	d5, d5, d18
   4e598:	fadd	d5, d5, d21
   4e59c:	b	4e2b8 <__exp2f_finite@GLIBC_2.17+0x1850>
   4e5a0:	fsub	d4, d4, d1
   4e5a4:	fadd	d4, d4, d2
   4e5a8:	fadd	d4, d4, d0
   4e5ac:	fadd	d4, d4, d6
   4e5b0:	fadd	d0, d4, d1
   4e5b4:	fsub	d1, d1, d0
   4e5b8:	fadd	d4, d1, d4
   4e5bc:	stp	d0, d4, [x0]
   4e5c0:	ret
   4e5c4:	fadd	d0, d3, d1
   4e5c8:	fsub	d5, d5, d0
   4e5cc:	fadd	d0, d5, d17
   4e5d0:	fsub	d0, d0, d2
   4e5d4:	b	4e548 <__exp2f_finite@GLIBC_2.17+0x1ae0>
   4e5d8:	fsub	d1, d1, d18
   4e5dc:	fadd	d5, d1, d19
   4e5e0:	fadd	d5, d5, d7
   4e5e4:	fadd	d5, d5, d24
   4e5e8:	b	4e4b8 <__exp2f_finite@GLIBC_2.17+0x1a50>
   4e5ec:	fsub	d1, d1, d21
   4e5f0:	fadd	d7, d1, d7
   4e5f4:	fadd	d7, d7, d18
   4e5f8:	fadd	d7, d7, d23
   4e5fc:	b	4e458 <__exp2f_finite@GLIBC_2.17+0x19f0>
   4e600:	fsub	d1, d1, d19
   4e604:	fadd	d5, d1, d5
   4e608:	fadd	d5, d5, d7
   4e60c:	fadd	d5, d5, d21
   4e610:	b	4e3f8 <__exp2f_finite@GLIBC_2.17+0x1990>
   4e614:	fsub	d3, d3, d19
   4e618:	fadd	d3, d3, d7
   4e61c:	fadd	d3, d3, d5
   4e620:	fadd	d3, d3, d1
   4e624:	b	4e388 <__exp2f_finite@GLIBC_2.17+0x1920>
   4e628:	fsub	d7, d7, d19
   4e62c:	fadd	d7, d7, d20
   4e630:	fadd	d7, d7, d18
   4e634:	fadd	d7, d7, d23
   4e638:	b	4e318 <__exp2f_finite@GLIBC_2.17+0x18b0>
   4e63c:	nop
   4e640:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e644:	fmov	d19, #2.000000000000000000e+00
   4e648:	adrp	x3, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e64c:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e650:	ldr	d3, [x1, #3288]
   4e654:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e658:	ldr	d5, [x3, #3368]
   4e65c:	adrp	x3, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e660:	ldr	d23, [x2, #3360]
   4e664:	adrp	x2, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   4e668:	fadd	d4, d3, d0
   4e66c:	ldr	d7, [x1, #3384]
   4e670:	add	x2, x2, #0xc08
   4e674:	ldr	d21, [x3, #3376]
   4e678:	fabs	d22, d7
   4e67c:	fsub	d3, d4, d3
   4e680:	fmov	x1, d4
   4e684:	fsub	d0, d0, d3
   4e688:	lsl	w1, w1, #2
   4e68c:	add	w5, w1, #0x1
   4e690:	add	w4, w1, #0x2
   4e694:	add	w3, w1, #0x3
   4e698:	ldr	d18, [x2, w1, sxtw #3]
   4e69c:	fadd	d3, d0, d1
   4e6a0:	ldr	d17, [x2, w5, sxtw #3]
   4e6a4:	ldr	d4, [x2, w4, sxtw #3]
   4e6a8:	ldr	d6, [x2, w3, sxtw #3]
   4e6ac:	fsub	d0, d0, d3
   4e6b0:	fmul	d16, d3, d3
   4e6b4:	fnmsub	d2, d3, d3, d16
   4e6b8:	fadd	d1, d0, d1
   4e6bc:	fmul	d0, d3, d1
   4e6c0:	fmadd	d19, d0, d19, d2
   4e6c4:	fadd	d0, d16, d19
   4e6c8:	fsub	d2, d16, d0
   4e6cc:	fmul	d16, d5, d0
   4e6d0:	fnmsub	d20, d0, d5, d16
   4e6d4:	fadd	d2, d2, d19
   4e6d8:	fmul	d5, d5, d2
   4e6dc:	fmadd	d5, d23, d0, d5
   4e6e0:	fadd	d5, d5, d20
   4e6e4:	fadd	d20, d16, d5
   4e6e8:	fabs	d23, d20
   4e6ec:	fsub	d16, d16, d20
   4e6f0:	fadd	d19, d7, d20
   4e6f4:	fcmpe	d23, d22
   4e6f8:	fadd	d16, d16, d5
   4e6fc:	b.le	4e9e4 <__exp2f_finite@GLIBC_2.17+0x1f7c>
   4e700:	fsub	d5, d20, d19
   4e704:	fadd	d5, d5, d7
   4e708:	fadd	d5, d5, d21
   4e70c:	fadd	d5, d5, d16
   4e710:	fadd	d22, d5, d19
   4e714:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e718:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e71c:	ldr	d7, [x2, #3400]
   4e720:	ldr	d23, [x1, #3392]
   4e724:	fsub	d19, d19, d22
   4e728:	fmul	d21, d2, d22
   4e72c:	fmul	d16, d0, d22
   4e730:	fabs	d24, d7
   4e734:	fnmsub	d22, d0, d22, d16
   4e738:	fadd	d5, d19, d5
   4e73c:	fmadd	d5, d0, d5, d21
   4e740:	fadd	d5, d5, d22
   4e744:	fadd	d20, d16, d5
   4e748:	fabs	d21, d20
   4e74c:	fsub	d16, d16, d20
   4e750:	fadd	d19, d7, d20
   4e754:	fcmpe	d21, d24
   4e758:	fadd	d16, d16, d5
   4e75c:	b.le	4ea80 <__exp2f_finite@GLIBC_2.17+0x2018>
   4e760:	fsub	d20, d20, d19
   4e764:	fadd	d7, d20, d7
   4e768:	fadd	d7, d7, d23
   4e76c:	fadd	d7, d7, d16
   4e770:	fadd	d20, d7, d19
   4e774:	fabs	d22, d3
   4e778:	fsub	d19, d19, d20
   4e77c:	fmul	d5, d2, d20
   4e780:	fmul	d16, d0, d20
   4e784:	fnmsub	d20, d0, d20, d16
   4e788:	fadd	d7, d19, d7
   4e78c:	fmadd	d7, d0, d7, d5
   4e790:	fadd	d7, d7, d20
   4e794:	fadd	d21, d16, d7
   4e798:	fsub	d16, d16, d21
   4e79c:	fmul	d5, d3, d21
   4e7a0:	fmul	d20, d1, d21
   4e7a4:	fnmsub	d21, d3, d21, d5
   4e7a8:	fadd	d16, d16, d7
   4e7ac:	fmadd	d16, d3, d16, d20
   4e7b0:	fadd	d16, d16, d21
   4e7b4:	fadd	d7, d5, d16
   4e7b8:	fabs	d21, d7
   4e7bc:	fsub	d5, d5, d7
   4e7c0:	fadd	d19, d3, d7
   4e7c4:	fcmpe	d21, d22
   4e7c8:	fadd	d5, d5, d16
   4e7cc:	b.le	4ea6c <__exp2f_finite@GLIBC_2.17+0x2004>
   4e7d0:	fsub	d7, d7, d19
   4e7d4:	fadd	d3, d7, d3
   4e7d8:	fadd	d3, d3, d1
   4e7dc:	fadd	d3, d3, d5
   4e7e0:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e7e4:	adrp	x3, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e7e8:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e7ec:	fadd	d20, d3, d19
   4e7f0:	ldr	d16, [x1, #3304]
   4e7f4:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e7f8:	ldr	d21, [x3, #3296]
   4e7fc:	ldr	d5, [x2, #3320]
   4e800:	fmul	d7, d16, d0
   4e804:	fmul	d1, d16, d2
   4e808:	fmadd	d1, d21, d0, d1
   4e80c:	fnmsub	d16, d0, d16, d7
   4e810:	fabs	d22, d5
   4e814:	fsub	d19, d19, d20
   4e818:	ldr	d21, [x1, #3312]
   4e81c:	fadd	d3, d19, d3
   4e820:	fadd	d1, d1, d16
   4e824:	fadd	d16, d7, d1
   4e828:	fabs	d23, d16
   4e82c:	fsub	d7, d7, d16
   4e830:	fadd	d19, d5, d16
   4e834:	fcmpe	d23, d22
   4e838:	fadd	d7, d7, d1
   4e83c:	b.le	4ea58 <__exp2f_finite@GLIBC_2.17+0x1ff0>
   4e840:	fsub	d16, d16, d19
   4e844:	fadd	d16, d16, d5
   4e848:	fadd	d16, d16, d21
   4e84c:	fadd	d16, d16, d7
   4e850:	fadd	d22, d16, d19
   4e854:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e858:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e85c:	ldr	d5, [x2, #3336]
   4e860:	ldr	d23, [x1, #3328]
   4e864:	fsub	d19, d19, d22
   4e868:	fmul	d21, d2, d22
   4e86c:	fmul	d1, d0, d22
   4e870:	fabs	d24, d5
   4e874:	fnmsub	d22, d0, d22, d1
   4e878:	fadd	d16, d19, d16
   4e87c:	fmadd	d16, d0, d16, d21
   4e880:	fadd	d16, d16, d22
   4e884:	fadd	d7, d1, d16
   4e888:	fabs	d19, d7
   4e88c:	fsub	d1, d1, d7
   4e890:	fadd	d21, d5, d7
   4e894:	fcmpe	d19, d24
   4e898:	fadd	d1, d1, d16
   4e89c:	b.le	4ea44 <__exp2f_finite@GLIBC_2.17+0x1fdc>
   4e8a0:	fsub	d7, d7, d21
   4e8a4:	fadd	d7, d7, d5
   4e8a8:	fadd	d7, d7, d23
   4e8ac:	fadd	d7, d7, d1
   4e8b0:	fadd	d22, d7, d21
   4e8b4:	adrp	x2, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e8b8:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4e8bc:	ldr	d5, [x2, #3352]
   4e8c0:	ldr	d23, [x1, #3344]
   4e8c4:	fsub	d21, d21, d22
   4e8c8:	fmul	d16, d2, d22
   4e8cc:	fmul	d1, d0, d22
   4e8d0:	fabs	d24, d5
   4e8d4:	fnmsub	d22, d0, d22, d1
   4e8d8:	fadd	d7, d21, d7
   4e8dc:	fmadd	d7, d0, d7, d16
   4e8e0:	fadd	d7, d7, d22
   4e8e4:	fadd	d19, d1, d7
   4e8e8:	fabs	d21, d19
   4e8ec:	fsub	d1, d1, d19
   4e8f0:	fadd	d16, d5, d19
   4e8f4:	fcmpe	d21, d24
   4e8f8:	fadd	d1, d1, d7
   4e8fc:	b.le	4ea30 <__exp2f_finite@GLIBC_2.17+0x1fc8>
   4e900:	fsub	d19, d19, d16
   4e904:	fadd	d5, d19, d5
   4e908:	fadd	d5, d5, d23
   4e90c:	fadd	d5, d5, d1
   4e910:	fadd	d19, d5, d16
   4e914:	fmul	d7, d18, d20
   4e918:	fmul	d17, d17, d20
   4e91c:	fmadd	d17, d18, d3, d17
   4e920:	fnmsub	d18, d18, d20, d7
   4e924:	fsub	d16, d16, d19
   4e928:	fmul	d1, d0, d19
   4e92c:	fmul	d2, d2, d19
   4e930:	fnmsub	d19, d0, d19, d1
   4e934:	fadd	d5, d16, d5
   4e938:	fadd	d18, d17, d18
   4e93c:	fmadd	d2, d0, d5, d2
   4e940:	fadd	d3, d7, d18
   4e944:	fsub	d7, d7, d3
   4e948:	fabs	d16, d3
   4e94c:	fadd	d2, d2, d19
   4e950:	fadd	d18, d7, d18
   4e954:	fadd	d0, d1, d2
   4e958:	fsub	d1, d1, d0
   4e95c:	fmul	d5, d4, d0
   4e960:	fnmsub	d7, d0, d4, d5
   4e964:	fadd	d1, d1, d2
   4e968:	fmul	d1, d4, d1
   4e96c:	fmadd	d1, d6, d0, d1
   4e970:	fadd	d1, d1, d7
   4e974:	fadd	d2, d5, d1
   4e978:	fabs	d7, d2
   4e97c:	fsub	d0, d5, d2
   4e980:	fadd	d5, d3, d2
   4e984:	fcmpe	d16, d7
   4e988:	fadd	d0, d0, d1
   4e98c:	b.le	4ea1c <__exp2f_finite@GLIBC_2.17+0x1fb4>
   4e990:	fsub	d1, d3, d5
   4e994:	fadd	d1, d1, d2
   4e998:	fadd	d1, d1, d0
   4e99c:	fadd	d1, d1, d18
   4e9a0:	fadd	d2, d1, d5
   4e9a4:	fabs	d7, d4
   4e9a8:	fabs	d16, d2
   4e9ac:	fsub	d0, d5, d2
   4e9b0:	fsub	d3, d4, d2
   4e9b4:	fcmpe	d7, d16
   4e9b8:	fadd	d1, d0, d1
   4e9bc:	b.le	4e9f8 <__exp2f_finite@GLIBC_2.17+0x1f90>
   4e9c0:	fsub	d0, d4, d3
   4e9c4:	fsub	d0, d0, d2
   4e9c8:	fsub	d0, d0, d1
   4e9cc:	fadd	d0, d0, d6
   4e9d0:	fadd	d1, d0, d3
   4e9d4:	fsub	d3, d3, d1
   4e9d8:	fadd	d0, d3, d0
   4e9dc:	stp	d1, d0, [x0]
   4e9e0:	ret
   4e9e4:	fsub	d7, d7, d19
   4e9e8:	fadd	d5, d7, d20
   4e9ec:	fadd	d5, d5, d16
   4e9f0:	fadd	d5, d5, d21
   4e9f4:	b	4e710 <__exp2f_finite@GLIBC_2.17+0x1ca8>
   4e9f8:	fadd	d0, d2, d3
   4e9fc:	fsub	d0, d4, d0
   4ea00:	fadd	d0, d0, d6
   4ea04:	fsub	d0, d0, d1
   4ea08:	fadd	d1, d0, d3
   4ea0c:	fsub	d3, d3, d1
   4ea10:	fadd	d0, d3, d0
   4ea14:	stp	d1, d0, [x0]
   4ea18:	ret
   4ea1c:	fsub	d2, d2, d5
   4ea20:	fadd	d1, d2, d3
   4ea24:	fadd	d1, d1, d18
   4ea28:	fadd	d1, d1, d0
   4ea2c:	b	4e9a0 <__exp2f_finite@GLIBC_2.17+0x1f38>
   4ea30:	fsub	d5, d5, d16
   4ea34:	fadd	d5, d5, d19
   4ea38:	fadd	d5, d5, d1
   4ea3c:	fadd	d5, d5, d23
   4ea40:	b	4e910 <__exp2f_finite@GLIBC_2.17+0x1ea8>
   4ea44:	fsub	d5, d5, d21
   4ea48:	fadd	d7, d5, d7
   4ea4c:	fadd	d7, d7, d1
   4ea50:	fadd	d7, d7, d23
   4ea54:	b	4e8b0 <__exp2f_finite@GLIBC_2.17+0x1e48>
   4ea58:	fsub	d5, d5, d19
   4ea5c:	fadd	d16, d5, d16
   4ea60:	fadd	d16, d16, d7
   4ea64:	fadd	d16, d16, d21
   4ea68:	b	4e850 <__exp2f_finite@GLIBC_2.17+0x1de8>
   4ea6c:	fsub	d3, d3, d19
   4ea70:	fadd	d3, d3, d7
   4ea74:	fadd	d3, d3, d5
   4ea78:	fadd	d3, d3, d1
   4ea7c:	b	4e7e0 <__exp2f_finite@GLIBC_2.17+0x1d78>
   4ea80:	fsub	d7, d7, d19
   4ea84:	fadd	d7, d7, d20
   4ea88:	fadd	d7, d7, d16
   4ea8c:	fadd	d7, d7, d23
   4ea90:	b	4e770 <__exp2f_finite@GLIBC_2.17+0x1d08>
   4ea94:	nop
   4ea98:	stp	x29, x30, [sp, #-80]!
   4ea9c:	fcmpe	d0, #0.0
   4eaa0:	mov	x29, sp
   4eaa4:	stp	x19, x20, [sp, #16]
   4eaa8:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4eaac:	mov	x20, x0
   4eab0:	ldr	x1, [x19, #4032]
   4eab4:	ldr	x0, [x1]
   4eab8:	str	x0, [sp, #72]
   4eabc:	mov	x0, #0x0                   	// #0
   4eac0:	b.gt	4eacc <__exp2f_finite@GLIBC_2.17+0x2064>
   4eac4:	fneg	d0, d0
   4eac8:	fneg	d1, d1
   4eacc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4ead0:	fmov	d3, #5.000000000000000000e-01
   4ead4:	ldr	d2, [x0, #576]
   4ead8:	fmul	d3, d2, d3
   4eadc:	fcmpe	d3, d0
   4eae0:	b.gt	4eb84 <__exp2f_finite@GLIBC_2.17+0x211c>
   4eae4:	fmov	d3, #1.500000000000000000e+00
   4eae8:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   4eaec:	fmul	d3, d2, d3
   4eaf0:	ldr	d4, [x0, #568]
   4eaf4:	str	d4, [sp, #40]
   4eaf8:	fcmpe	d3, d0
   4eafc:	b.le	4eb4c <__exp2f_finite@GLIBC_2.17+0x20e4>
   4eb00:	fsub	d2, d2, d0
   4eb04:	fsub	d1, d4, d1
   4eb08:	fadd	d0, d2, d1
   4eb0c:	fsub	d2, d2, d0
   4eb10:	fcmpe	d0, #0.0
   4eb14:	fadd	d1, d2, d1
   4eb18:	b.le	4eb98 <__exp2f_finite@GLIBC_2.17+0x2130>
   4eb1c:	add	x0, sp, #0x38
   4eb20:	bl	4e1e8 <__exp2f_finite@GLIBC_2.17+0x1780>
   4eb24:	ldp	d1, d0, [sp, #56]
   4eb28:	stp	d1, d0, [x20]
   4eb2c:	ldr	x19, [x19, #4032]
   4eb30:	ldr	x1, [sp, #72]
   4eb34:	ldr	x0, [x19]
   4eb38:	eor	x0, x1, x0
   4eb3c:	cbnz	x0, 4ebac <__exp2f_finite@GLIBC_2.17+0x2144>
   4eb40:	ldp	x19, x20, [sp, #16]
   4eb44:	ldp	x29, x30, [sp], #80
   4eb48:	ret
   4eb4c:	fmov	d3, #2.000000000000000000e+00
   4eb50:	add	x0, sp, #0x38
   4eb54:	fnmsub	d2, d2, d3, d0
   4eb58:	ldr	d0, [sp, #40]
   4eb5c:	fnmsub	d1, d0, d3, d1
   4eb60:	fadd	d0, d2, d1
   4eb64:	fsub	d2, d2, d0
   4eb68:	fadd	d1, d2, d1
   4eb6c:	bl	4e640 <__exp2f_finite@GLIBC_2.17+0x1bd8>
   4eb70:	ldp	d1, d0, [sp, #56]
   4eb74:	fneg	d1, d1
   4eb78:	fneg	d0, d0
   4eb7c:	stp	d1, d0, [x20]
   4eb80:	b	4eb2c <__exp2f_finite@GLIBC_2.17+0x20c4>
   4eb84:	add	x0, sp, #0x38
   4eb88:	bl	4e640 <__exp2f_finite@GLIBC_2.17+0x1bd8>
   4eb8c:	ldp	d1, d0, [sp, #56]
   4eb90:	stp	d1, d0, [x20]
   4eb94:	b	4eb2c <__exp2f_finite@GLIBC_2.17+0x20c4>
   4eb98:	fneg	d1, d1
   4eb9c:	fneg	d0, d0
   4eba0:	add	x0, sp, #0x38
   4eba4:	bl	4e1e8 <__exp2f_finite@GLIBC_2.17+0x1780>
   4eba8:	b	4eb70 <__exp2f_finite@GLIBC_2.17+0x2108>
   4ebac:	bl	ba70 <__stack_chk_fail@plt>
   4ebb0:	mov	x3, x0
   4ebb4:	ldr	x0, [x0, #8]
   4ebb8:	ldr	x4, [x1, #8]
   4ebbc:	cbnz	x0, 4ebcc <__exp2f_finite@GLIBC_2.17+0x2164>
   4ebc0:	cmp	x4, #0x0
   4ebc4:	csetm	w0, ne  // ne = any
   4ebc8:	ret
   4ebcc:	mov	w0, #0x1                   	// #1
   4ebd0:	cbz	x4, 4ebc8 <__exp2f_finite@GLIBC_2.17+0x2160>
   4ebd4:	ldr	w4, [x1]
   4ebd8:	ldr	w5, [x3]
   4ebdc:	cmp	w5, w4
   4ebe0:	b.gt	4ebc8 <__exp2f_finite@GLIBC_2.17+0x2160>
   4ebe4:	mov	w0, #0xffffffff            	// #-1
   4ebe8:	b.lt	4ebc8 <__exp2f_finite@GLIBC_2.17+0x2160>  // b.tstop
   4ebec:	cmp	w2, #0x0
   4ebf0:	b.le	4ec28 <__exp2f_finite@GLIBC_2.17+0x21c0>
   4ebf4:	sxtw	x2, w2
   4ebf8:	mov	x0, #0x2                   	// #2
   4ebfc:	add	x2, x2, x0
   4ec00:	ldr	x5, [x3, x0, lsl #3]
   4ec04:	ldr	x4, [x1, x0, lsl #3]
   4ec08:	cmp	x5, x4
   4ec0c:	b.eq	4ec1c <__exp2f_finite@GLIBC_2.17+0x21b4>  // b.none
   4ec10:	mov	w0, #0xffffffff            	// #-1
   4ec14:	cneg	w0, w0, gt
   4ec18:	ret
   4ec1c:	add	x0, x0, #0x1
   4ec20:	cmp	x0, x2
   4ec24:	b.ne	4ec00 <__exp2f_finite@GLIBC_2.17+0x2198>  // b.any
   4ec28:	mov	w0, #0x0                   	// #0
   4ec2c:	ret
   4ec30:	ldr	w3, [x0]
   4ec34:	str	w3, [x1]
   4ec38:	tbnz	w2, #31, 4ec5c <__exp2f_finite@GLIBC_2.17+0x21f4>
   4ec3c:	sxtw	x4, w2
   4ec40:	mov	x2, #0x1                   	// #1
   4ec44:	add	x4, x4, #0x2
   4ec48:	ldr	x3, [x0, x2, lsl #3]
   4ec4c:	str	x3, [x1, x2, lsl #3]
   4ec50:	add	x2, x2, #0x1
   4ec54:	cmp	x2, x4
   4ec58:	b.ne	4ec48 <__exp2f_finite@GLIBC_2.17+0x21e0>  // b.any
   4ec5c:	ret
   4ec60:	mov	x10, x2
   4ec64:	ldr	w11, [x0]
   4ec68:	sxtw	x2, w3
   4ec6c:	mov	x7, x0
   4ec70:	add	x4, x2, #0x1
   4ec74:	str	w11, [x10]
   4ec78:	ldrsw	x9, [x1]
   4ec7c:	add	x9, x9, x2
   4ec80:	sub	x9, x9, w11, sxtw
   4ec84:	cmp	x9, #0x0
   4ec88:	b.le	4ed88 <__exp2f_finite@GLIBC_2.17+0x2320>
   4ec8c:	lsl	x8, x9, #3
   4ec90:	sub	x13, x4, x9
   4ec94:	sub	x8, x8, x2, lsl #3
   4ec98:	add	x6, x10, #0x10
   4ec9c:	add	x8, x1, x8
   4eca0:	mov	x5, #0x0                   	// #0
   4eca4:	mov	x12, #0xffffff              	// #16777215
   4eca8:	mov	x14, #0xffffffffff000000    	// #-16777216
   4ecac:	nop
   4ecb0:	ldr	x1, [x7, x4, lsl #3]
   4ecb4:	ldr	x0, [x8, x4, lsl #3]
   4ecb8:	sub	x4, x4, #0x1
   4ecbc:	add	x1, x1, x0
   4ecc0:	add	x1, x1, x5
   4ecc4:	mov	x5, #0x0                   	// #0
   4ecc8:	cmp	x1, x12
   4eccc:	b.le	4ecd8 <__exp2f_finite@GLIBC_2.17+0x2270>
   4ecd0:	add	x1, x1, x14
   4ecd4:	mov	x5, #0x1                   	// #1
   4ecd8:	str	x1, [x6, x4, lsl #3]
   4ecdc:	cmp	x4, x13
   4ece0:	b.ne	4ecb0 <__exp2f_finite@GLIBC_2.17+0x2248>  // b.any
   4ece4:	sub	x1, x2, #0x1
   4ece8:	mov	x0, #0x1                   	// #1
   4ecec:	sub	x0, x0, x9
   4ecf0:	add	x1, x1, x0
   4ecf4:	add	x0, x0, x2
   4ecf8:	cmp	x1, #0x0
   4ecfc:	b.le	4ed48 <__exp2f_finite@GLIBC_2.17+0x22e0>
   4ed00:	neg	x4, x1, lsl #3
   4ed04:	add	x7, x7, #0x8
   4ed08:	add	x0, x4, x0, lsl #3
   4ed0c:	mov	x8, #0xffffff              	// #16777215
   4ed10:	add	x4, x0, #0x8
   4ed14:	mov	x9, #0xffffffffff000000    	// #-16777216
   4ed18:	add	x4, x10, x4
   4ed1c:	nop
   4ed20:	ldr	x0, [x7, x1, lsl #3]
   4ed24:	add	x0, x5, x0
   4ed28:	mov	x5, #0x0                   	// #0
   4ed2c:	cmp	x0, x8
   4ed30:	b.le	4ed3c <__exp2f_finite@GLIBC_2.17+0x22d4>
   4ed34:	add	x0, x0, x9
   4ed38:	mov	x5, #0x1                   	// #1
   4ed3c:	str	x0, [x4, x1, lsl #3]
   4ed40:	subs	x1, x1, #0x1
   4ed44:	b.ne	4ed20 <__exp2f_finite@GLIBC_2.17+0x22b8>  // b.any
   4ed48:	cbnz	x5, 4ed74 <__exp2f_finite@GLIBC_2.17+0x230c>
   4ed4c:	mov	x0, x6
   4ed50:	cmp	x2, #0x0
   4ed54:	add	x3, x6, w3, sxtw #3
   4ed58:	b.le	4ed70 <__exp2f_finite@GLIBC_2.17+0x2308>
   4ed5c:	nop
   4ed60:	ldr	x1, [x0, #8]
   4ed64:	str	x1, [x0], #8
   4ed68:	cmp	x0, x3
   4ed6c:	b.ne	4ed60 <__exp2f_finite@GLIBC_2.17+0x22f8>  // b.any
   4ed70:	ret
   4ed74:	add	w11, w11, #0x1
   4ed78:	mov	x0, #0x1                   	// #1
   4ed7c:	str	w11, [x10]
   4ed80:	str	x0, [x10, #16]
   4ed84:	ret
   4ed88:	mov	w2, w3
   4ed8c:	mov	x1, x10
   4ed90:	b	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   4ed94:	nop
   4ed98:	ldr	w11, [x0]
   4ed9c:	sxtw	x9, w3
   4eda0:	str	w11, [x2]
   4eda4:	mov	x5, x0
   4eda8:	mov	x4, x2
   4edac:	ldrsw	x7, [x1]
   4edb0:	add	x7, x7, x9
   4edb4:	sub	x7, x7, w11, sxtw
   4edb8:	cmp	x7, #0x0
   4edbc:	b.le	4ef14 <__exp2f_finite@GLIBC_2.17+0x24ac>
   4edc0:	cmp	x9, x7
   4edc4:	add	x12, x9, #0x1
   4edc8:	b.gt	4eeec <__exp2f_finite@GLIBC_2.17+0x2484>
   4edcc:	add	x0, x4, x12, lsl #3
   4edd0:	mov	x2, #0x0                   	// #0
   4edd4:	str	xzr, [x0, #8]
   4edd8:	add	x8, x9, #0x1
   4eddc:	lsl	x6, x7, #3
   4ede0:	sub	x10, x8, x7
   4ede4:	sub	x6, x6, x9, lsl #3
   4ede8:	add	x6, x1, x6
   4edec:	lsl	x3, x8, #3
   4edf0:	lsl	x10, x10, #3
   4edf4:	mov	x13, #0x1000000             	// #16777216
   4edf8:	ldr	x1, [x5, x3]
   4edfc:	ldr	x0, [x6, x3]
   4ee00:	sub	x1, x1, x0
   4ee04:	add	x1, x1, x2
   4ee08:	mov	x2, #0x0                   	// #0
   4ee0c:	tbz	x1, #63, 4ee18 <__exp2f_finite@GLIBC_2.17+0x23b0>
   4ee10:	add	x1, x1, x13
   4ee14:	mov	x2, #0xffffffffffffffff    	// #-1
   4ee18:	str	x1, [x4, x3]
   4ee1c:	sub	x3, x3, #0x8
   4ee20:	cmp	x3, x10
   4ee24:	b.ne	4edf8 <__exp2f_finite@GLIBC_2.17+0x2390>  // b.any
   4ee28:	sub	x7, x9, x7
   4ee2c:	mov	x0, #0x1000000             	// #16777216
   4ee30:	add	x3, x7, #0x1
   4ee34:	cmp	x7, #0x0
   4ee38:	lsl	x3, x3, #3
   4ee3c:	b.le	4ee68 <__exp2f_finite@GLIBC_2.17+0x2400>
   4ee40:	ldr	x1, [x5, x3]
   4ee44:	add	x1, x2, x1
   4ee48:	mov	x2, #0x0                   	// #0
   4ee4c:	tbz	x1, #63, 4ee58 <__exp2f_finite@GLIBC_2.17+0x23f0>
   4ee50:	add	x1, x1, x0
   4ee54:	mov	x2, #0xffffffffffffffff    	// #-1
   4ee58:	str	x1, [x4, x3]
   4ee5c:	sub	x3, x3, #0x8
   4ee60:	cmp	x3, #0x8
   4ee64:	b.ne	4ee40 <__exp2f_finite@GLIBC_2.17+0x23d8>  // b.any
   4ee68:	ldr	x1, [x4, #16]
   4ee6c:	add	x2, x4, #0x8
   4ee70:	mov	x0, #0x1                   	// #1
   4ee74:	cbnz	x1, 4ee84 <__exp2f_finite@GLIBC_2.17+0x241c>
   4ee78:	add	x0, x0, #0x1
   4ee7c:	ldr	x1, [x2, x0, lsl #3]
   4ee80:	cbz	x1, 4ee78 <__exp2f_finite@GLIBC_2.17+0x2410>
   4ee84:	add	w11, w11, #0x1
   4ee88:	cmp	x0, x12
   4ee8c:	sub	w11, w11, w0
   4ee90:	str	w11, [x4]
   4ee94:	b.gt	4ef20 <__exp2f_finite@GLIBC_2.17+0x24b8>
   4ee98:	neg	x2, x0, lsl #3
   4ee9c:	add	x3, x9, #0x2
   4eea0:	add	x2, x2, #0x8
   4eea4:	mov	x5, x0
   4eea8:	add	x2, x4, x2
   4eeac:	nop
   4eeb0:	add	x0, x0, #0x1
   4eeb4:	cmp	x0, x3
   4eeb8:	ldr	x1, [x4, x0, lsl #3]
   4eebc:	str	x1, [x2, x0, lsl #3]
   4eec0:	b.ne	4eeb0 <__exp2f_finite@GLIBC_2.17+0x2448>  // b.any
   4eec4:	add	x0, x9, #0x3
   4eec8:	sub	x0, x0, x5
   4eecc:	cmp	x9, x0
   4eed0:	b.lt	4eee8 <__exp2f_finite@GLIBC_2.17+0x2480>  // b.tstop
   4eed4:	nop
   4eed8:	add	x0, x0, #0x1
   4eedc:	cmp	x8, x0
   4eee0:	str	xzr, [x4, x0, lsl #3]
   4eee4:	b.ne	4eed8 <__exp2f_finite@GLIBC_2.17+0x2470>  // b.any
   4eee8:	ret
   4eeec:	add	x0, x1, x7, lsl #3
   4eef0:	ldr	x0, [x0, #16]
   4eef4:	cmp	x0, #0x0
   4eef8:	b.le	4edcc <__exp2f_finite@GLIBC_2.17+0x2364>
   4eefc:	add	x6, x2, x12, lsl #3
   4ef00:	mov	x3, #0x1000000             	// #16777216
   4ef04:	mov	x2, #0xffffffffffffffff    	// #-1
   4ef08:	sub	x0, x3, x0
   4ef0c:	str	x0, [x6, #8]
   4ef10:	b	4edd8 <__exp2f_finite@GLIBC_2.17+0x2370>
   4ef14:	mov	w2, w3
   4ef18:	mov	x1, x4
   4ef1c:	b	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   4ef20:	mov	x0, #0x1                   	// #1
   4ef24:	b	4eecc <__exp2f_finite@GLIBC_2.17+0x2464>
   4ef28:	stp	x29, x30, [sp, #-64]!
   4ef2c:	adrp	x9, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4ef30:	mov	x29, sp
   4ef34:	ldr	x3, [x9, #4032]
   4ef38:	ldr	x4, [x0, #8]
   4ef3c:	ldr	x5, [x3]
   4ef40:	str	x5, [sp, #56]
   4ef44:	mov	x5, #0x0                   	// #0
   4ef48:	cbz	x4, 4f0c4 <__exp2f_finite@GLIBC_2.17+0x265c>
   4ef4c:	ldr	w5, [x0]
   4ef50:	cmn	w5, #0x29
   4ef54:	b.lt	4f0fc <__exp2f_finite@GLIBC_2.17+0x2694>  // b.tstop
   4ef58:	ldr	x3, [x0, #16]
   4ef5c:	cmp	w2, #0x4
   4ef60:	b.le	4f048 <__exp2f_finite@GLIBC_2.17+0x25e0>
   4ef64:	str	x3, [sp, #24]
   4ef68:	mov	x6, #0x7fffff              	// #8388607
   4ef6c:	cmp	x3, x6
   4ef70:	b.gt	4f1b0 <__exp2f_finite@GLIBC_2.17+0x2748>
   4ef74:	mov	x8, #0x1                   	// #1
   4ef78:	lsl	x3, x3, #1
   4ef7c:	lsl	x8, x8, #1
   4ef80:	cmp	x3, x6
   4ef84:	b.le	4ef78 <__exp2f_finite@GLIBC_2.17+0x2510>
   4ef88:	scvtf	d4, x8
   4ef8c:	str	x3, [sp, #24]
   4ef90:	add	x7, sp, #0x10
   4ef94:	mov	x6, #0x3                   	// #3
   4ef98:	ldr	x3, [x0, x6, lsl #3]
   4ef9c:	add	x6, x6, #0x1
   4efa0:	ldr	x10, [x7, #8]
   4efa4:	cmp	x6, #0x6
   4efa8:	mul	x3, x8, x3
   4efac:	and	x11, x3, #0xffffff
   4efb0:	str	x11, [x7, #16]
   4efb4:	add	x3, x10, x3, asr #24
   4efb8:	str	x3, [x7, #8]!
   4efbc:	b.ne	4ef98 <__exp2f_finite@GLIBC_2.17+0x2530>  // b.any
   4efc0:	ldr	x3, [sp, #40]
   4efc4:	and	x7, x3, #0x7ffff
   4efc8:	cmp	x7, #0x40, lsl #12
   4efcc:	b.eq	4f0dc <__exp2f_finite@GLIBC_2.17+0x2674>  // b.none
   4efd0:	ldp	d0, d1, [sp, #24]
   4efd4:	scvtf	d2, x3
   4efd8:	mov	x0, #0x3e70000000000000    	// #4499096027743125504
   4efdc:	fmov	d3, x0
   4efe0:	scvtf	d1, d1
   4efe4:	scvtf	d0, d0
   4efe8:	fmadd	d1, d2, d3, d1
   4efec:	fmadd	d0, d1, d3, d0
   4eff0:	fdiv	d0, d0, d4
   4eff4:	scvtf	d1, x4
   4eff8:	sxtw	x0, w5
   4effc:	cmp	x0, #0x1
   4f000:	fmul	d0, d1, d0
   4f004:	b.le	4f09c <__exp2f_finite@GLIBC_2.17+0x2634>
   4f008:	mov	x3, #0x4170000000000000    	// #4715268809856909312
   4f00c:	mov	x2, #0x1                   	// #1
   4f010:	fmov	d1, x3
   4f014:	nop
   4f018:	add	x2, x2, #0x1
   4f01c:	fmul	d0, d0, d1
   4f020:	cmp	x2, x0
   4f024:	b.ne	4f018 <__exp2f_finite@GLIBC_2.17+0x25b0>  // b.any
   4f028:	str	d0, [x1]
   4f02c:	ldr	x0, [x9, #4032]
   4f030:	ldr	x1, [sp, #56]
   4f034:	ldr	x0, [x0]
   4f038:	eor	x0, x1, x0
   4f03c:	cbnz	x0, 4f2b8 <__exp2f_finite@GLIBC_2.17+0x2850>
   4f040:	ldp	x29, x30, [sp], #64
   4f044:	ret
   4f048:	scvtf	d0, x3
   4f04c:	cmp	w2, #0x1
   4f050:	b.eq	4eff4 <__exp2f_finite@GLIBC_2.17+0x258c>  // b.none
   4f054:	ldr	d1, [x0, #24]
   4f058:	cmp	w2, #0x2
   4f05c:	scvtf	d1, d1
   4f060:	b.eq	4f0cc <__exp2f_finite@GLIBC_2.17+0x2664>  // b.none
   4f064:	ldr	d2, [x0, #32]
   4f068:	cmp	w2, #0x3
   4f06c:	scvtf	d2, d2
   4f070:	b.eq	4f19c <__exp2f_finite@GLIBC_2.17+0x2734>  // b.none
   4f074:	ldr	d5, [x0, #40]
   4f078:	mov	x0, #0x3e70000000000000    	// #4499096027743125504
   4f07c:	fmov	d3, x0
   4f080:	mov	x0, #0x3cf0000000000000    	// #4391009636686233600
   4f084:	fmov	d4, x0
   4f088:	scvtf	d5, d5
   4f08c:	fmadd	d0, d1, d3, d0
   4f090:	fmadd	d2, d5, d3, d2
   4f094:	fmadd	d0, d2, d4, d0
   4f098:	b	4eff4 <__exp2f_finite@GLIBC_2.17+0x258c>
   4f09c:	b.eq	4f028 <__exp2f_finite@GLIBC_2.17+0x25c0>  // b.none
   4f0a0:	mov	x3, #0x3e70000000000000    	// #4499096027743125504
   4f0a4:	mov	x2, #0x1                   	// #1
   4f0a8:	fmov	d1, x3
   4f0ac:	nop
   4f0b0:	sub	x2, x2, #0x1
   4f0b4:	fmul	d0, d0, d1
   4f0b8:	cmp	x2, x0
   4f0bc:	b.ne	4f0b0 <__exp2f_finite@GLIBC_2.17+0x2648>  // b.any
   4f0c0:	b	4f028 <__exp2f_finite@GLIBC_2.17+0x25c0>
   4f0c4:	str	xzr, [x1]
   4f0c8:	b	4f02c <__exp2f_finite@GLIBC_2.17+0x25c4>
   4f0cc:	mov	x0, #0x3e70000000000000    	// #4499096027743125504
   4f0d0:	fmov	d2, x0
   4f0d4:	fmadd	d0, d1, d2, d0
   4f0d8:	b	4eff4 <__exp2f_finite@GLIBC_2.17+0x258c>
   4f0dc:	ldr	x7, [sp, #48]
   4f0e0:	cbnz	x7, 4f0f4 <__exp2f_finite@GLIBC_2.17+0x268c>
   4f0e4:	sxtw	x2, w2
   4f0e8:	add	x2, x2, #0x2
   4f0ec:	ldr	x7, [x0, x6, lsl #3]
   4f0f0:	cbz	x7, 4f18c <__exp2f_finite@GLIBC_2.17+0x2724>
   4f0f4:	add	x3, x3, #0x1
   4f0f8:	b	4efd0 <__exp2f_finite@GLIBC_2.17+0x2568>
   4f0fc:	cmn	w5, #0x2a
   4f100:	b.ne	4f1bc <__exp2f_finite@GLIBC_2.17+0x2754>  // b.any
   4f104:	ldr	x3, [x0, #16]
   4f108:	cmp	x3, #0x3ff
   4f10c:	b.gt	4ef5c <__exp2f_finite@GLIBC_2.17+0x24f4>
   4f110:	cmp	w2, #0x1
   4f114:	sxtw	x2, w2
   4f118:	b.eq	4f27c <__exp2f_finite@GLIBC_2.17+0x2814>  // b.none
   4f11c:	cmp	x2, #0x2
   4f120:	b.eq	4f220 <__exp2f_finite@GLIBC_2.17+0x27b8>  // b.none
   4f124:	cmn	w5, #0x2a
   4f128:	b.eq	4f24c <__exp2f_finite@GLIBC_2.17+0x27e4>  // b.none
   4f12c:	cmn	w5, #0x2b
   4f130:	b.eq	4f294 <__exp2f_finite@GLIBC_2.17+0x282c>  // b.none
   4f134:	movi	d4, #0x0
   4f138:	mov	x5, #0x4090000000000000    	// #4652218415073722368
   4f13c:	mov	x6, #0x1                   	// #1
   4f140:	fmov	d1, x5
   4f144:	tst	x3, #0x1f
   4f148:	and	x7, x3, #0xffffffffffffffe0
   4f14c:	b.eq	4f200 <__exp2f_finite@GLIBC_2.17+0x2798>  // b.none
   4f150:	scvtf	d0, x3
   4f154:	mov	x0, #0x3e70000000000000    	// #4499096027743125504
   4f158:	fmov	d3, x0
   4f15c:	mov	x0, #0x4090000000000000    	// #4652218415073722368
   4f160:	fmov	d6, x0
   4f164:	scvtf	d2, x4
   4f168:	mov	x0, #0x40000000000         	// #4398046511104
   4f16c:	fmov	d5, x0
   4f170:	fmadd	d0, d0, d3, d4
   4f174:	fmadd	d0, d0, d3, d1
   4f178:	fsub	d0, d0, d6
   4f17c:	fmul	d0, d2, d0
   4f180:	fmul	d0, d0, d5
   4f184:	str	d0, [x1]
   4f188:	b	4f02c <__exp2f_finite@GLIBC_2.17+0x25c4>
   4f18c:	add	x6, x6, #0x1
   4f190:	cmp	x6, x2
   4f194:	b.ne	4f0ec <__exp2f_finite@GLIBC_2.17+0x2684>  // b.any
   4f198:	b	4efd0 <__exp2f_finite@GLIBC_2.17+0x2568>
   4f19c:	mov	x0, #0x3e70000000000000    	// #4499096027743125504
   4f1a0:	fmov	d3, x0
   4f1a4:	fmadd	d1, d2, d3, d1
   4f1a8:	fmadd	d0, d1, d3, d0
   4f1ac:	b	4eff4 <__exp2f_finite@GLIBC_2.17+0x258c>
   4f1b0:	fmov	d4, #1.000000000000000000e+00
   4f1b4:	mov	x8, #0x1                   	// #1
   4f1b8:	b	4ef90 <__exp2f_finite@GLIBC_2.17+0x2528>
   4f1bc:	cmn	w5, #0x2c
   4f1c0:	b.lt	4f0c4 <__exp2f_finite@GLIBC_2.17+0x265c>  // b.tstop
   4f1c4:	sxtw	x2, w2
   4f1c8:	ldr	x3, [x0, #16]
   4f1cc:	b.ne	4f2d8 <__exp2f_finite@GLIBC_2.17+0x2870>  // b.any
   4f1d0:	cmp	x3, #0x1f
   4f1d4:	b.le	4f0c4 <__exp2f_finite@GLIBC_2.17+0x265c>
   4f1d8:	cmp	x2, #0x1
   4f1dc:	b.eq	4f244 <__exp2f_finite@GLIBC_2.17+0x27dc>  // b.none
   4f1e0:	cmp	x2, #0x2
   4f1e4:	b.ne	4f134 <__exp2f_finite@GLIBC_2.17+0x26cc>  // b.any
   4f1e8:	tst	x3, #0x1f
   4f1ec:	b.eq	4f2bc <__exp2f_finite@GLIBC_2.17+0x2854>  // b.none
   4f1f0:	mov	x0, #0x4090000000000000    	// #4652218415073722368
   4f1f4:	movi	d4, #0x0
   4f1f8:	fmov	d1, x0
   4f1fc:	b	4f150 <__exp2f_finite@GLIBC_2.17+0x26e8>
   4f200:	add	x5, x6, #0x1
   4f204:	cmp	x5, x2
   4f208:	b.gt	4f150 <__exp2f_finite@GLIBC_2.17+0x26e8>
   4f20c:	add	x0, x0, #0x8
   4f210:	ldr	x3, [x0, x5, lsl #3]
   4f214:	cbz	x3, 4f268 <__exp2f_finite@GLIBC_2.17+0x2800>
   4f218:	add	x3, x7, #0x1
   4f21c:	b	4f150 <__exp2f_finite@GLIBC_2.17+0x26e8>
   4f220:	cmn	w5, #0x2a
   4f224:	b.eq	4f2ac <__exp2f_finite@GLIBC_2.17+0x2844>  // b.none
   4f228:	cmn	w5, #0x2b
   4f22c:	b.ne	4f1e8 <__exp2f_finite@GLIBC_2.17+0x2780>  // b.any
   4f230:	scvtf	d4, x3
   4f234:	ldr	x3, [x0, #24]
   4f238:	mov	x0, #0x4090000000000000    	// #4652218415073722368
   4f23c:	fmov	d1, x0
   4f240:	b	4f150 <__exp2f_finite@GLIBC_2.17+0x26e8>
   4f244:	movi	d4, #0x0
   4f248:	b	4f238 <__exp2f_finite@GLIBC_2.17+0x27d0>
   4f24c:	ldr	d4, [x0, #24]
   4f250:	add	x5, x3, #0x400
   4f254:	mov	x6, #0x3                   	// #3
   4f258:	scvtf	d1, x5
   4f25c:	scvtf	d4, d4
   4f260:	ldr	x3, [x0, #32]
   4f264:	b	4f144 <__exp2f_finite@GLIBC_2.17+0x26dc>
   4f268:	add	x5, x5, #0x1
   4f26c:	cmp	x5, x2
   4f270:	b.le	4f210 <__exp2f_finite@GLIBC_2.17+0x27a8>
   4f274:	mov	x3, x7
   4f278:	b	4f150 <__exp2f_finite@GLIBC_2.17+0x26e8>
   4f27c:	add	x2, x3, #0x400
   4f280:	mov	x3, #0x0                   	// #0
   4f284:	scvtf	d4, x3
   4f288:	scvtf	d1, x2
   4f28c:	mov	x3, #0x0                   	// #0
   4f290:	b	4f150 <__exp2f_finite@GLIBC_2.17+0x26e8>
   4f294:	scvtf	d4, x3
   4f298:	mov	x3, #0x4090000000000000    	// #4652218415073722368
   4f29c:	mov	x6, #0x2                   	// #2
   4f2a0:	fmov	d1, x3
   4f2a4:	ldr	x3, [x0, #24]
   4f2a8:	b	4f144 <__exp2f_finite@GLIBC_2.17+0x26dc>
   4f2ac:	add	x2, x3, #0x400
   4f2b0:	ldr	x3, [x0, #24]
   4f2b4:	b	4f284 <__exp2f_finite@GLIBC_2.17+0x281c>
   4f2b8:	bl	ba70 <__stack_chk_fail@plt>
   4f2bc:	mov	x7, x3
   4f2c0:	mov	x2, #0x2                   	// #2
   4f2c4:	mov	x3, #0x4090000000000000    	// #4652218415073722368
   4f2c8:	movi	d4, #0x0
   4f2cc:	mov	x5, x2
   4f2d0:	fmov	d1, x3
   4f2d4:	b	4f20c <__exp2f_finite@GLIBC_2.17+0x27a4>
   4f2d8:	cmp	x2, #0x1
   4f2dc:	b.ne	4f11c <__exp2f_finite@GLIBC_2.17+0x26b4>  // b.any
   4f2e0:	mov	x2, #0x400                 	// #1024
   4f2e4:	b	4f284 <__exp2f_finite@GLIBC_2.17+0x281c>
   4f2e8:	fcmp	d0, #0.0
   4f2ec:	b.eq	4f3fc <__exp2f_finite@GLIBC_2.17+0x2994>  // b.none
   4f2f0:	fcmpe	d0, #0.0
   4f2f4:	mov	x3, #0x1                   	// #1
   4f2f8:	b.le	4f3f0 <__exp2f_finite@GLIBC_2.17+0x2988>
   4f2fc:	mov	x2, #0x4170000000000000    	// #4715268809856909312
   4f300:	fmov	d1, x2
   4f304:	mov	w2, #0x1                   	// #1
   4f308:	str	w2, [x0]
   4f30c:	fcmpe	d0, d1
   4f310:	str	x3, [x0, #8]
   4f314:	mov	w2, #0x2                   	// #2
   4f318:	mov	x3, #0x3e70000000000000    	// #4499096027743125504
   4f31c:	fmov	d2, x3
   4f320:	b.lt	4f340 <__exp2f_finite@GLIBC_2.17+0x28d8>  // b.tstop
   4f324:	nop
   4f328:	fmul	d0, d0, d2
   4f32c:	mov	w3, w2
   4f330:	add	w2, w2, #0x1
   4f334:	fcmpe	d0, d1
   4f338:	b.ge	4f328 <__exp2f_finite@GLIBC_2.17+0x28c0>  // b.tcont
   4f33c:	str	w3, [x0]
   4f340:	fmov	d1, #1.000000000000000000e+00
   4f344:	fcmpe	d0, d1
   4f348:	b.pl	4f378 <__exp2f_finite@GLIBC_2.17+0x2910>  // b.nfrst
   4f34c:	ldr	w2, [x0]
   4f350:	mov	x3, #0x4170000000000000    	// #4715268809856909312
   4f354:	fmov	d2, x3
   4f358:	sub	w2, w2, #0x1
   4f35c:	nop
   4f360:	fmul	d0, d0, d2
   4f364:	mov	w3, w2
   4f368:	sub	w2, w2, #0x1
   4f36c:	fcmpe	d0, d1
   4f370:	b.mi	4f360 <__exp2f_finite@GLIBC_2.17+0x28f8>  // b.first
   4f374:	str	w3, [x0]
   4f378:	cmp	w1, #0x4
   4f37c:	sxtw	x6, w1
   4f380:	mov	x2, #0x4                   	// #4
   4f384:	csel	x2, x6, x2, le
   4f388:	cmp	x6, #0x0
   4f38c:	b.le	4f3ec <__exp2f_finite@GLIBC_2.17+0x2984>
   4f390:	add	x5, x0, #0x8
   4f394:	mov	x4, #0x4170000000000000    	// #4715268809856909312
   4f398:	mov	x3, #0x1                   	// #1
   4f39c:	fmov	d3, x4
   4f3a0:	fcvtzs	d1, d0
   4f3a4:	scvtf	d2, d1
   4f3a8:	str	d1, [x5, x3, lsl #3]
   4f3ac:	add	x3, x3, #0x1
   4f3b0:	cmp	x2, x3
   4f3b4:	fsub	d0, d0, d2
   4f3b8:	fmul	d0, d0, d3
   4f3bc:	b.ge	4f3a0 <__exp2f_finite@GLIBC_2.17+0x2938>  // b.tcont
   4f3c0:	cmp	x6, #0x0
   4f3c4:	mov	x3, #0x2                   	// #2
   4f3c8:	csinc	x2, x3, x2, le
   4f3cc:	cmp	x2, x6
   4f3d0:	b.gt	4f3ec <__exp2f_finite@GLIBC_2.17+0x2984>
   4f3d4:	add	x0, x0, x2, lsl #3
   4f3d8:	add	x1, x5, w1, sxtw #3
   4f3dc:	nop
   4f3e0:	str	xzr, [x0, #8]!
   4f3e4:	cmp	x0, x1
   4f3e8:	b.ne	4f3e0 <__exp2f_finite@GLIBC_2.17+0x2978>  // b.any
   4f3ec:	ret
   4f3f0:	fneg	d0, d0
   4f3f4:	mov	x3, #0xffffffffffffffff    	// #-1
   4f3f8:	b	4f2fc <__exp2f_finite@GLIBC_2.17+0x2894>
   4f3fc:	str	xzr, [x0, #8]
   4f400:	ret
   4f404:	nop
   4f408:	stp	x29, x30, [sp, #-48]!
   4f40c:	mov	x29, sp
   4f410:	stp	x21, x22, [sp, #32]
   4f414:	mov	x22, x2
   4f418:	mov	w21, w3
   4f41c:	ldr	x2, [x0, #8]
   4f420:	stp	x19, x20, [sp, #16]
   4f424:	mov	x20, x1
   4f428:	cbz	x2, 4f4a4 <__exp2f_finite@GLIBC_2.17+0x2a3c>
   4f42c:	ldr	x3, [x1, #8]
   4f430:	cbz	x3, 4f4dc <__exp2f_finite@GLIBC_2.17+0x2a74>
   4f434:	cmp	x2, x3
   4f438:	mov	x19, x0
   4f43c:	mov	w2, w21
   4f440:	b.eq	4f46c <__exp2f_finite@GLIBC_2.17+0x2a04>  // b.none
   4f444:	bl	4ebb0 <__exp2f_finite@GLIBC_2.17+0x2148>
   4f448:	cmp	w0, #0x1
   4f44c:	b.eq	4f4f4 <__exp2f_finite@GLIBC_2.17+0x2a8c>  // b.none
   4f450:	cmn	w0, #0x1
   4f454:	b.eq	4f514 <__exp2f_finite@GLIBC_2.17+0x2aac>  // b.none
   4f458:	str	xzr, [x22, #8]
   4f45c:	ldp	x19, x20, [sp, #16]
   4f460:	ldp	x21, x22, [sp, #32]
   4f464:	ldp	x29, x30, [sp], #48
   4f468:	ret
   4f46c:	bl	4ebb0 <__exp2f_finite@GLIBC_2.17+0x2148>
   4f470:	cmp	w0, #0x0
   4f474:	mov	w3, w21
   4f478:	b.le	4f4c0 <__exp2f_finite@GLIBC_2.17+0x2a58>
   4f47c:	mov	x1, x20
   4f480:	mov	x2, x22
   4f484:	mov	x0, x19
   4f488:	bl	4ec60 <__exp2f_finite@GLIBC_2.17+0x21f8>
   4f48c:	ldr	x0, [x19, #8]
   4f490:	str	x0, [x22, #8]
   4f494:	ldp	x19, x20, [sp, #16]
   4f498:	ldp	x21, x22, [sp, #32]
   4f49c:	ldp	x29, x30, [sp], #48
   4f4a0:	ret
   4f4a4:	mov	x1, x22
   4f4a8:	mov	x0, x20
   4f4ac:	ldp	x19, x20, [sp, #16]
   4f4b0:	mov	w2, w3
   4f4b4:	ldp	x21, x22, [sp, #32]
   4f4b8:	ldp	x29, x30, [sp], #48
   4f4bc:	b	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   4f4c0:	mov	x0, x20
   4f4c4:	mov	x1, x19
   4f4c8:	mov	x2, x22
   4f4cc:	bl	4ec60 <__exp2f_finite@GLIBC_2.17+0x21f8>
   4f4d0:	ldr	x0, [x20, #8]
   4f4d4:	str	x0, [x22, #8]
   4f4d8:	b	4f45c <__exp2f_finite@GLIBC_2.17+0x29f4>
   4f4dc:	mov	w2, w21
   4f4e0:	mov	x1, x22
   4f4e4:	ldp	x19, x20, [sp, #16]
   4f4e8:	ldp	x21, x22, [sp, #32]
   4f4ec:	ldp	x29, x30, [sp], #48
   4f4f0:	b	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   4f4f4:	mov	x0, x19
   4f4f8:	mov	w3, w21
   4f4fc:	mov	x1, x20
   4f500:	mov	x2, x22
   4f504:	bl	4ed98 <__exp2f_finite@GLIBC_2.17+0x2330>
   4f508:	ldr	x0, [x19, #8]
   4f50c:	str	x0, [x22, #8]
   4f510:	b	4f45c <__exp2f_finite@GLIBC_2.17+0x29f4>
   4f514:	mov	x0, x20
   4f518:	mov	w3, w21
   4f51c:	mov	x1, x19
   4f520:	mov	x2, x22
   4f524:	bl	4ed98 <__exp2f_finite@GLIBC_2.17+0x2330>
   4f528:	ldr	x0, [x20, #8]
   4f52c:	str	x0, [x22, #8]
   4f530:	b	4f45c <__exp2f_finite@GLIBC_2.17+0x29f4>
   4f534:	nop
   4f538:	stp	x29, x30, [sp, #-48]!
   4f53c:	mov	x29, sp
   4f540:	stp	x19, x20, [sp, #16]
   4f544:	mov	x19, x2
   4f548:	ldr	x2, [x0, #8]
   4f54c:	stp	x21, x22, [sp, #32]
   4f550:	mov	w22, w3
   4f554:	mov	x21, x1
   4f558:	cbz	x2, 4f5d4 <__exp2f_finite@GLIBC_2.17+0x2b6c>
   4f55c:	ldr	x3, [x1, #8]
   4f560:	cbz	x3, 4f62c <__exp2f_finite@GLIBC_2.17+0x2bc4>
   4f564:	cmp	x2, x3
   4f568:	mov	x20, x0
   4f56c:	mov	w2, w22
   4f570:	b.eq	4f5ac <__exp2f_finite@GLIBC_2.17+0x2b44>  // b.none
   4f574:	bl	4ebb0 <__exp2f_finite@GLIBC_2.17+0x2148>
   4f578:	cmp	w0, #0x0
   4f57c:	mov	w3, w22
   4f580:	b.le	4f600 <__exp2f_finite@GLIBC_2.17+0x2b98>
   4f584:	mov	x0, x20
   4f588:	mov	x1, x21
   4f58c:	mov	x2, x19
   4f590:	bl	4ec60 <__exp2f_finite@GLIBC_2.17+0x21f8>
   4f594:	ldr	x0, [x20, #8]
   4f598:	str	x0, [x19, #8]
   4f59c:	ldp	x19, x20, [sp, #16]
   4f5a0:	ldp	x21, x22, [sp, #32]
   4f5a4:	ldp	x29, x30, [sp], #48
   4f5a8:	ret
   4f5ac:	bl	4ebb0 <__exp2f_finite@GLIBC_2.17+0x2148>
   4f5b0:	cmp	w0, #0x1
   4f5b4:	b.eq	4f644 <__exp2f_finite@GLIBC_2.17+0x2bdc>  // b.none
   4f5b8:	cmn	w0, #0x1
   4f5bc:	b.eq	4f664 <__exp2f_finite@GLIBC_2.17+0x2bfc>  // b.none
   4f5c0:	str	xzr, [x19, #8]
   4f5c4:	ldp	x19, x20, [sp, #16]
   4f5c8:	ldp	x21, x22, [sp, #32]
   4f5cc:	ldp	x29, x30, [sp], #48
   4f5d0:	ret
   4f5d4:	mov	x0, x1
   4f5d8:	mov	w2, w3
   4f5dc:	mov	x1, x19
   4f5e0:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   4f5e4:	ldr	x0, [x19, #8]
   4f5e8:	ldp	x21, x22, [sp, #32]
   4f5ec:	neg	x0, x0
   4f5f0:	str	x0, [x19, #8]
   4f5f4:	ldp	x19, x20, [sp, #16]
   4f5f8:	ldp	x29, x30, [sp], #48
   4f5fc:	ret
   4f600:	mov	x1, x20
   4f604:	mov	x2, x19
   4f608:	mov	x0, x21
   4f60c:	bl	4ec60 <__exp2f_finite@GLIBC_2.17+0x21f8>
   4f610:	ldr	x0, [x21, #8]
   4f614:	ldp	x21, x22, [sp, #32]
   4f618:	neg	x0, x0
   4f61c:	str	x0, [x19, #8]
   4f620:	ldp	x19, x20, [sp, #16]
   4f624:	ldp	x29, x30, [sp], #48
   4f628:	ret
   4f62c:	mov	w2, w22
   4f630:	mov	x1, x19
   4f634:	ldp	x19, x20, [sp, #16]
   4f638:	ldp	x21, x22, [sp, #32]
   4f63c:	ldp	x29, x30, [sp], #48
   4f640:	b	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   4f644:	mov	x0, x20
   4f648:	mov	w3, w22
   4f64c:	mov	x1, x21
   4f650:	mov	x2, x19
   4f654:	bl	4ed98 <__exp2f_finite@GLIBC_2.17+0x2330>
   4f658:	ldr	x0, [x20, #8]
   4f65c:	str	x0, [x19, #8]
   4f660:	b	4f59c <__exp2f_finite@GLIBC_2.17+0x2b34>
   4f664:	mov	x0, x21
   4f668:	mov	w3, w22
   4f66c:	mov	x1, x20
   4f670:	mov	x2, x19
   4f674:	bl	4ed98 <__exp2f_finite@GLIBC_2.17+0x2330>
   4f678:	ldr	x0, [x21, #8]
   4f67c:	neg	x0, x0
   4f680:	str	x0, [x19, #8]
   4f684:	b	4f59c <__exp2f_finite@GLIBC_2.17+0x2b34>
   4f688:	stp	x29, x30, [sp, #-32]!
   4f68c:	adrp	x15, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4f690:	mov	x29, sp
   4f694:	ldr	x6, [x1, #8]
   4f698:	ldr	x4, [x0, #8]
   4f69c:	ldr	x5, [x15, #4032]
   4f6a0:	mul	x4, x4, x6
   4f6a4:	ldr	x6, [x5]
   4f6a8:	str	x6, [x29, #24]
   4f6ac:	mov	x6, #0x0                   	// #0
   4f6b0:	cbz	x4, 4f9bc <__exp2f_finite@GLIBC_2.17+0x2f54>
   4f6b4:	sxtw	x13, w3
   4f6b8:	add	x6, x1, #0x8
   4f6bc:	cmp	x13, #0x0
   4f6c0:	mov	x5, x13
   4f6c4:	add	x4, x0, x13, lsl #3
   4f6c8:	add	x7, x0, #0x8
   4f6cc:	ldr	x4, [x4, #8]
   4f6d0:	b.le	4f9e0 <__exp2f_finite@GLIBC_2.17+0x2f78>
   4f6d4:	nop
   4f6d8:	cbnz	x4, 4f8fc <__exp2f_finite@GLIBC_2.17+0x2e94>
   4f6dc:	ldr	x4, [x6, x5, lsl #3]
   4f6e0:	cbnz	x4, 4f9b4 <__exp2f_finite@GLIBC_2.17+0x2f4c>
   4f6e4:	sub	x5, x5, #0x1
   4f6e8:	ldr	x4, [x7, x5, lsl #3]
   4f6ec:	cbnz	x5, 4f6d8 <__exp2f_finite@GLIBC_2.17+0x2c70>
   4f6f0:	cbnz	x4, 4fa18 <__exp2f_finite@GLIBC_2.17+0x2fb0>
   4f6f4:	mov	x5, x4
   4f6f8:	cmp	x13, #0x2
   4f6fc:	add	x12, x13, #0x3
   4f700:	b.le	4f9e8 <__exp2f_finite@GLIBC_2.17+0x2f80>
   4f704:	add	x5, x5, x4
   4f708:	add	x6, x5, #0x1
   4f70c:	cmp	x12, x6
   4f710:	b.le	4f734 <__exp2f_finite@GLIBC_2.17+0x2ccc>
   4f714:	add	x18, x2, #0x8
   4f718:	add	x12, x2, x12, lsl #3
   4f71c:	add	x5, x18, x5, lsl #3
   4f720:	str	xzr, [x12, #8]
   4f724:	sub	x12, x12, #0x8
   4f728:	cmp	x12, x5
   4f72c:	b.ne	4f720 <__exp2f_finite@GLIBC_2.17+0x2cb8>  // b.any
   4f730:	mov	x12, x6
   4f734:	lsl	x10, x12, #3
   4f738:	cmp	x4, #0x0
   4f73c:	add	x5, x10, #0xf
   4f740:	and	x5, x5, #0xfffffffffffffff0
   4f744:	sub	sp, sp, x5
   4f748:	mov	x14, sp
   4f74c:	b.le	4f9d4 <__exp2f_finite@GLIBC_2.17+0x2f6c>
   4f750:	add	x9, x4, #0x2
   4f754:	sub	x17, x14, #0x8
   4f758:	mov	x5, #0x10                  	// #16
   4f75c:	mov	x6, #0x0                   	// #0
   4f760:	lsl	x9, x9, #3
   4f764:	nop
   4f768:	ldr	x8, [x0, x5]
   4f76c:	ldr	x7, [x1, x5]
   4f770:	madd	x6, x8, x7, x6
   4f774:	str	x6, [x17, x5]
   4f778:	add	x5, x5, #0x8
   4f77c:	cmp	x5, x9
   4f780:	b.ne	4f768 <__exp2f_finite@GLIBC_2.17+0x2d00>  // b.any
   4f784:	add	x4, x4, #0x1
   4f788:	cmp	x12, x4
   4f78c:	b.le	4f9c4 <__exp2f_finite@GLIBC_2.17+0x2f5c>
   4f790:	add	x4, x14, x4, lsl #3
   4f794:	add	x5, x14, x10
   4f798:	str	x6, [x4], #8
   4f79c:	cmp	x5, x4
   4f7a0:	b.ne	4f798 <__exp2f_finite@GLIBC_2.17+0x2d30>  // b.any
   4f7a4:	cmp	x13, x12
   4f7a8:	mov	x6, #0x0                   	// #0
   4f7ac:	b.ge	4f870 <__exp2f_finite@GLIBC_2.17+0x2e08>  // b.tcont
   4f7b0:	sub	x30, x12, x13
   4f7b4:	mov	x16, x12
   4f7b8:	add	x18, x2, #0x8
   4f7bc:	sub	x17, x14, #0x8
   4f7c0:	add	x10, x1, #0x8
   4f7c4:	add	x9, x0, #0x8
   4f7c8:	mov	x6, #0x0                   	// #0
   4f7cc:	nop
   4f7d0:	tbnz	w16, #0, 4f7f8 <__exp2f_finite@GLIBC_2.17+0x2d90>
   4f7d4:	add	x4, x16, x16, lsr #63
   4f7d8:	asr	x4, x4, #1
   4f7dc:	lsl	x4, x4, #3
   4f7e0:	add	x5, x0, x4
   4f7e4:	add	x4, x1, x4
   4f7e8:	ldr	x5, [x5, #8]
   4f7ec:	ldr	x4, [x4, #8]
   4f7f0:	mul	x4, x5, x4
   4f7f4:	add	x6, x6, x4, lsl #1
   4f7f8:	cmp	x13, x30
   4f7fc:	mov	x4, x30
   4f800:	b.le	4f834 <__exp2f_finite@GLIBC_2.17+0x2dcc>
   4f804:	mov	x5, x13
   4f808:	ldr	x11, [x9, x5, lsl #3]
   4f80c:	ldr	x8, [x9, x4, lsl #3]
   4f810:	ldr	x7, [x10, x4, lsl #3]
   4f814:	add	x8, x8, x11
   4f818:	ldr	x11, [x10, x5, lsl #3]
   4f81c:	add	x4, x4, #0x1
   4f820:	sub	x5, x5, #0x1
   4f824:	add	x7, x7, x11
   4f828:	cmp	x4, x5
   4f82c:	madd	x6, x8, x7, x6
   4f830:	b.lt	4f808 <__exp2f_finite@GLIBC_2.17+0x2da0>  // b.tstop
   4f834:	ldr	x4, [x17, x16, lsl #3]
   4f838:	sub	x30, x30, #0x1
   4f83c:	sub	x6, x6, x4
   4f840:	and	x4, x6, #0xffffff
   4f844:	str	x4, [x18, x16, lsl #3]
   4f848:	sub	x16, x16, #0x1
   4f84c:	asr	x6, x6, #24
   4f850:	cmp	x13, x16
   4f854:	b.lt	4f7d0 <__exp2f_finite@GLIBC_2.17+0x2d68>  // b.tstop
   4f858:	subs	x4, x13, x12
   4f85c:	sub	x12, x12, #0x1
   4f860:	csinc	x4, xzr, x4, ge  // ge = tcont
   4f864:	add	x12, x4, x12
   4f868:	cmp	x12, #0x1
   4f86c:	b.le	4f964 <__exp2f_finite@GLIBC_2.17+0x2efc>
   4f870:	mov	x16, x12
   4f874:	add	x10, x1, #0x8
   4f878:	add	x9, x0, #0x8
   4f87c:	add	x17, x2, #0x10
   4f880:	tbnz	w16, #0, 4f8a4 <__exp2f_finite@GLIBC_2.17+0x2e3c>
   4f884:	asr	x4, x16, #1
   4f888:	lsl	x4, x4, #3
   4f88c:	add	x5, x0, x4
   4f890:	add	x4, x1, x4
   4f894:	ldr	x5, [x5, #8]
   4f898:	ldr	x4, [x4, #8]
   4f89c:	mul	x4, x5, x4
   4f8a0:	add	x6, x6, x4, lsl #1
   4f8a4:	sub	x16, x16, #0x1
   4f8a8:	cmp	x16, #0x1
   4f8ac:	b.eq	4f920 <__exp2f_finite@GLIBC_2.17+0x2eb8>  // b.none
   4f8b0:	mov	x5, x16
   4f8b4:	mov	x4, #0x1                   	// #1
   4f8b8:	ldr	x11, [x9, x5, lsl #3]
   4f8bc:	ldr	x8, [x9, x4, lsl #3]
   4f8c0:	ldr	x7, [x10, x4, lsl #3]
   4f8c4:	add	x8, x8, x11
   4f8c8:	ldr	x11, [x10, x5, lsl #3]
   4f8cc:	add	x4, x4, #0x1
   4f8d0:	sub	x5, x5, #0x1
   4f8d4:	add	x7, x7, x11
   4f8d8:	cmp	x4, x5
   4f8dc:	madd	x6, x8, x7, x6
   4f8e0:	b.lt	4f8b8 <__exp2f_finite@GLIBC_2.17+0x2e50>  // b.tstop
   4f8e4:	ldr	x4, [x14, x16, lsl #3]
   4f8e8:	sub	x6, x6, x4
   4f8ec:	and	x4, x6, #0xffffff
   4f8f0:	str	x4, [x17, x16, lsl #3]
   4f8f4:	asr	x6, x6, #24
   4f8f8:	b	4f880 <__exp2f_finite@GLIBC_2.17+0x2e18>
   4f8fc:	mov	x7, x1
   4f900:	add	x7, x7, #0x8
   4f904:	mov	x4, x5
   4f908:	b	4f914 <__exp2f_finite@GLIBC_2.17+0x2eac>
   4f90c:	subs	x4, x4, #0x1
   4f910:	b.eq	4f6f8 <__exp2f_finite@GLIBC_2.17+0x2c90>  // b.none
   4f914:	ldr	x6, [x7, x4, lsl #3]
   4f918:	cbz	x6, 4f90c <__exp2f_finite@GLIBC_2.17+0x2ea4>
   4f91c:	b	4f6f8 <__exp2f_finite@GLIBC_2.17+0x2c90>
   4f920:	cmp	x12, #0x1
   4f924:	mov	x4, #0x2                   	// #2
   4f928:	sub	x4, x4, x12
   4f92c:	sub	x5, x12, #0x2
   4f930:	csel	x4, x4, xzr, gt
   4f934:	csneg	x5, xzr, x5, le
   4f938:	add	x4, x4, x12
   4f93c:	add	x7, x12, x5
   4f940:	sub	x12, x12, #0x1
   4f944:	add	x14, x14, x4, lsl #3
   4f948:	add	x7, x2, x7, lsl #3
   4f94c:	add	x12, x12, x5
   4f950:	ldur	x4, [x14, #-8]
   4f954:	sub	x6, x6, x4
   4f958:	and	x4, x6, #0xffffff
   4f95c:	str	x4, [x7, #8]
   4f960:	asr	x6, x6, #24
   4f964:	add	x12, x2, x12, lsl #3
   4f968:	ldr	w5, [x1]
   4f96c:	ldr	w4, [x0]
   4f970:	str	x6, [x12, #8]
   4f974:	add	w4, w4, w5
   4f978:	ldr	x5, [x2, #16]
   4f97c:	cbz	x5, 4f9f0 <__exp2f_finite@GLIBC_2.17+0x2f88>
   4f980:	ldr	x0, [x0, #8]
   4f984:	ldr	x1, [x1, #8]
   4f988:	str	w4, [x2]
   4f98c:	mul	x0, x0, x1
   4f990:	str	x0, [x2, #8]
   4f994:	ldr	x15, [x15, #4032]
   4f998:	ldr	x1, [x29, #24]
   4f99c:	ldr	x0, [x15]
   4f9a0:	eor	x0, x1, x0
   4f9a4:	cbnz	x0, 4fa20 <__exp2f_finite@GLIBC_2.17+0x2fb8>
   4f9a8:	mov	sp, x29
   4f9ac:	ldp	x29, x30, [sp], #32
   4f9b0:	ret
   4f9b4:	mov	x7, x0
   4f9b8:	b	4f900 <__exp2f_finite@GLIBC_2.17+0x2e98>
   4f9bc:	str	xzr, [x2, #8]
   4f9c0:	b	4f994 <__exp2f_finite@GLIBC_2.17+0x2f2c>
   4f9c4:	cmp	x13, x12
   4f9c8:	b.lt	4f7b0 <__exp2f_finite@GLIBC_2.17+0x2d48>  // b.tstop
   4f9cc:	mov	x6, #0x0                   	// #0
   4f9d0:	b	4f868 <__exp2f_finite@GLIBC_2.17+0x2e00>
   4f9d4:	mov	x6, #0x0                   	// #0
   4f9d8:	mov	x4, #0x1                   	// #1
   4f9dc:	b	4f788 <__exp2f_finite@GLIBC_2.17+0x2d20>
   4f9e0:	cbz	x4, 4fa24 <__exp2f_finite@GLIBC_2.17+0x2fbc>
   4f9e4:	mov	x4, x13
   4f9e8:	lsl	x12, x13, #1
   4f9ec:	b	4f704 <__exp2f_finite@GLIBC_2.17+0x2c9c>
   4f9f0:	add	x5, x2, #0x10
   4f9f4:	cmp	x13, #0x0
   4f9f8:	add	x3, x5, w3, sxtw #3
   4f9fc:	b.le	4fa10 <__exp2f_finite@GLIBC_2.17+0x2fa8>
   4fa00:	ldr	x6, [x5, #8]
   4fa04:	str	x6, [x5], #8
   4fa08:	cmp	x3, x5
   4fa0c:	b.ne	4fa00 <__exp2f_finite@GLIBC_2.17+0x2f98>  // b.any
   4fa10:	sub	w4, w4, #0x1
   4fa14:	b	4f980 <__exp2f_finite@GLIBC_2.17+0x2f18>
   4fa18:	mov	x4, #0x0                   	// #0
   4fa1c:	b	4f6f8 <__exp2f_finite@GLIBC_2.17+0x2c90>
   4fa20:	bl	ba70 <__stack_chk_fail@plt>
   4fa24:	mov	x4, x13
   4fa28:	mov	x5, x4
   4fa2c:	b	4f6f8 <__exp2f_finite@GLIBC_2.17+0x2c90>
   4fa30:	ldr	x3, [x0, #8]
   4fa34:	cbz	x3, 4fc04 <__exp2f_finite@GLIBC_2.17+0x319c>
   4fa38:	sxtw	x12, w2
   4fa3c:	mov	x3, x12
   4fa40:	cmp	x12, #0x0
   4fa44:	b.le	4fc14 <__exp2f_finite@GLIBC_2.17+0x31ac>
   4fa48:	add	x5, x0, #0x8
   4fa4c:	b	4fa58 <__exp2f_finite@GLIBC_2.17+0x2ff0>
   4fa50:	subs	x3, x3, #0x1
   4fa54:	b.eq	4fa60 <__exp2f_finite@GLIBC_2.17+0x2ff8>  // b.none
   4fa58:	ldr	x4, [x5, x3, lsl #3]
   4fa5c:	cbz	x4, 4fa50 <__exp2f_finite@GLIBC_2.17+0x2fe8>
   4fa60:	add	w7, w2, #0x3
   4fa64:	cmp	w2, #0x2
   4fa68:	sxtw	x7, w7
   4fa6c:	b.le	4fc14 <__exp2f_finite@GLIBC_2.17+0x31ac>
   4fa70:	lsl	x4, x3, #1
   4fa74:	add	x4, x4, #0x1
   4fa78:	cmp	x7, x4
   4fa7c:	b.le	4faa4 <__exp2f_finite@GLIBC_2.17+0x303c>
   4fa80:	add	x13, x1, #0x8
   4fa84:	add	x7, x1, x7, lsl #3
   4fa88:	add	x3, x13, x3, lsl #4
   4fa8c:	nop
   4fa90:	str	xzr, [x7, #8]
   4fa94:	sub	x7, x7, #0x8
   4fa98:	cmp	x7, x3
   4fa9c:	b.ne	4fa90 <__exp2f_finite@GLIBC_2.17+0x3028>  // b.any
   4faa0:	mov	x7, x4
   4faa4:	cmp	x12, x7
   4faa8:	b.ge	4fc0c <__exp2f_finite@GLIBC_2.17+0x31a4>  // b.tcont
   4faac:	sub	x5, x7, x12
   4fab0:	add	x13, x1, #0x8
   4fab4:	add	x8, x0, #0x8
   4fab8:	mov	x11, #0x0                   	// #0
   4fabc:	nop
   4fac0:	tbnz	w7, #0, 4fad8 <__exp2f_finite@GLIBC_2.17+0x3070>
   4fac4:	add	x3, x7, x7, lsr #63
   4fac8:	asr	x3, x3, #1
   4facc:	add	x3, x0, x3, lsl #3
   4fad0:	ldr	x3, [x3, #8]
   4fad4:	madd	x11, x3, x3, x11
   4fad8:	cmp	x12, x5
   4fadc:	mov	x3, x5
   4fae0:	b.le	4fb10 <__exp2f_finite@GLIBC_2.17+0x30a8>
   4fae4:	mov	x4, x12
   4fae8:	mov	x6, #0x0                   	// #0
   4faec:	nop
   4faf0:	ldr	x10, [x8, x3, lsl #3]
   4faf4:	add	x3, x3, #0x1
   4faf8:	ldr	x9, [x8, x4, lsl #3]
   4fafc:	sub	x4, x4, #0x1
   4fb00:	cmp	x3, x4
   4fb04:	madd	x6, x10, x9, x6
   4fb08:	b.lt	4faf0 <__exp2f_finite@GLIBC_2.17+0x3088>  // b.tstop
   4fb0c:	add	x11, x11, x6, lsl #1
   4fb10:	and	x3, x11, #0xffffff
   4fb14:	str	x3, [x13, x7, lsl #3]
   4fb18:	subs	x5, x5, #0x1
   4fb1c:	asr	x11, x11, #24
   4fb20:	sub	x7, x7, #0x1
   4fb24:	b.ne	4fac0 <__exp2f_finite@GLIBC_2.17+0x3058>  // b.any
   4fb28:	mov	x7, x12
   4fb2c:	cmp	x7, #0x1
   4fb30:	b.le	4fbac <__exp2f_finite@GLIBC_2.17+0x3144>
   4fb34:	add	x6, x0, #0x8
   4fb38:	add	x10, x1, #0x10
   4fb3c:	nop
   4fb40:	tbnz	w7, #0, 4fb54 <__exp2f_finite@GLIBC_2.17+0x30ec>
   4fb44:	asr	x3, x7, #1
   4fb48:	add	x3, x0, x3, lsl #3
   4fb4c:	ldr	x3, [x3, #8]
   4fb50:	madd	x11, x3, x3, x11
   4fb54:	sub	x7, x7, #0x1
   4fb58:	cmp	x7, #0x1
   4fb5c:	b.eq	4fba0 <__exp2f_finite@GLIBC_2.17+0x3138>  // b.none
   4fb60:	mov	x4, x7
   4fb64:	mov	x5, #0x0                   	// #0
   4fb68:	mov	x3, #0x1                   	// #1
   4fb6c:	nop
   4fb70:	ldr	x9, [x6, x3, lsl #3]
   4fb74:	add	x3, x3, #0x1
   4fb78:	ldr	x8, [x6, x4, lsl #3]
   4fb7c:	sub	x4, x4, #0x1
   4fb80:	cmp	x3, x4
   4fb84:	madd	x5, x9, x8, x5
   4fb88:	b.lt	4fb70 <__exp2f_finite@GLIBC_2.17+0x3108>  // b.tstop
   4fb8c:	add	x5, x11, x5, lsl #1
   4fb90:	and	x3, x5, #0xffffff
   4fb94:	str	x3, [x10, x7, lsl #3]
   4fb98:	asr	x11, x5, #24
   4fb9c:	b	4fb40 <__exp2f_finite@GLIBC_2.17+0x30d8>
   4fba0:	and	x3, x11, #0xffffff
   4fba4:	asr	x11, x11, #24
   4fba8:	str	x3, [x1, #24]
   4fbac:	add	x7, x1, x7, lsl #3
   4fbb0:	ldr	w0, [x0]
   4fbb4:	mov	x3, #0x1                   	// #1
   4fbb8:	str	x11, [x7, #8]
   4fbbc:	lsl	w0, w0, #1
   4fbc0:	str	x3, [x1, #8]
   4fbc4:	ldr	x3, [x1, #16]
   4fbc8:	cbz	x3, 4fbd4 <__exp2f_finite@GLIBC_2.17+0x316c>
   4fbcc:	str	w0, [x1]
   4fbd0:	ret
   4fbd4:	add	x3, x1, #0x10
   4fbd8:	cmp	x12, #0x0
   4fbdc:	add	x2, x3, w2, sxtw #3
   4fbe0:	b.le	4fbf8 <__exp2f_finite@GLIBC_2.17+0x3190>
   4fbe4:	nop
   4fbe8:	ldr	x4, [x3, #8]
   4fbec:	str	x4, [x3], #8
   4fbf0:	cmp	x2, x3
   4fbf4:	b.ne	4fbe8 <__exp2f_finite@GLIBC_2.17+0x3180>  // b.any
   4fbf8:	sub	w0, w0, #0x1
   4fbfc:	str	w0, [x1]
   4fc00:	b	4fbd0 <__exp2f_finite@GLIBC_2.17+0x3168>
   4fc04:	str	xzr, [x1, #8]
   4fc08:	ret
   4fc0c:	mov	x11, #0x0                   	// #0
   4fc10:	b	4fb2c <__exp2f_finite@GLIBC_2.17+0x30c4>
   4fc14:	lsl	w7, w2, #1
   4fc18:	sxtw	x7, w7
   4fc1c:	b	4fa70 <__exp2f_finite@GLIBC_2.17+0x3008>
   4fc20:	sub	sp, sp, #0x460
   4fc24:	stp	x29, x30, [sp]
   4fc28:	mov	x29, sp
   4fc2c:	stp	x19, x20, [sp, #16]
   4fc30:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4fc34:	ldr	x4, [x20, #4032]
   4fc38:	stp	x23, x24, [sp, #48]
   4fc3c:	mov	x23, x0
   4fc40:	ldr	x0, [x0, #8]
   4fc44:	ldr	x5, [x4]
   4fc48:	str	x5, [sp, #1112]
   4fc4c:	mov	x5, #0x0                   	// #0
   4fc50:	mov	x24, x2
   4fc54:	cbnz	x0, 4fc84 <__exp2f_finite@GLIBC_2.17+0x321c>
   4fc58:	str	xzr, [x2, #8]
   4fc5c:	ldr	x20, [x20, #4032]
   4fc60:	ldr	x1, [sp, #1112]
   4fc64:	ldr	x0, [x20]
   4fc68:	eor	x0, x1, x0
   4fc6c:	cbnz	x0, 4fd98 <__exp2f_finite@GLIBC_2.17+0x3330>
   4fc70:	ldp	x29, x30, [sp]
   4fc74:	ldp	x19, x20, [sp, #16]
   4fc78:	ldp	x23, x24, [sp, #48]
   4fc7c:	add	sp, sp, #0x460
   4fc80:	ret
   4fc84:	stp	x21, x22, [sp, #32]
   4fc88:	mov	x22, x1
   4fc8c:	mov	w19, w3
   4fc90:	stp	x25, x26, [sp, #64]
   4fc94:	add	x26, sp, #0x1c8
   4fc98:	mov	w2, w3
   4fc9c:	mov	x1, x26
   4fca0:	mov	x0, x22
   4fca4:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   4fca8:	str	wzr, [sp, #456]
   4fcac:	mov	w2, w19
   4fcb0:	mov	x0, x26
   4fcb4:	add	x1, sp, #0x78
   4fcb8:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   4fcbc:	ldr	d1, [sp, #120]
   4fcc0:	fmov	d0, #1.000000000000000000e+00
   4fcc4:	add	x21, sp, #0x80
   4fcc8:	mov	w1, w19
   4fccc:	mov	x0, x21
   4fcd0:	fdiv	d0, d0, d1
   4fcd4:	str	d0, [sp, #120]
   4fcd8:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   4fcdc:	adrp	x1, 87000 <f64xsubf128@@GLIBC_2.28+0x33280>
   4fce0:	add	x1, x1, #0xd50
   4fce4:	ldr	w0, [sp, #128]
   4fce8:	ldr	w2, [x22]
   4fcec:	ldrsw	x1, [x1, w19, sxtw #2]
   4fcf0:	sub	w0, w0, w2
   4fcf4:	str	x1, [sp, #104]
   4fcf8:	str	w0, [sp, #128]
   4fcfc:	cmp	x1, #0x0
   4fd00:	b.le	4fd78 <__exp2f_finite@GLIBC_2.17+0x3310>
   4fd04:	stp	x27, x28, [sp, #80]
   4fd08:	adrp	x27, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4fd0c:	add	x25, sp, #0x310
   4fd10:	ldr	x27, [x27, #4016]
   4fd14:	mov	x28, #0x0                   	// #0
   4fd18:	mov	w2, w19
   4fd1c:	mov	x1, x25
   4fd20:	mov	x0, x21
   4fd24:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   4fd28:	mov	w3, w19
   4fd2c:	mov	x2, x21
   4fd30:	mov	x1, x25
   4fd34:	mov	x0, x22
   4fd38:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   4fd3c:	add	x28, x28, #0x1
   4fd40:	mov	w3, w19
   4fd44:	mov	x2, x26
   4fd48:	mov	x1, x21
   4fd4c:	mov	x0, x27
   4fd50:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   4fd54:	mov	x0, x25
   4fd58:	mov	w3, w19
   4fd5c:	mov	x2, x21
   4fd60:	mov	x1, x26
   4fd64:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   4fd68:	ldr	x0, [sp, #104]
   4fd6c:	cmp	x28, x0
   4fd70:	b.ne	4fd18 <__exp2f_finite@GLIBC_2.17+0x32b0>  // b.any
   4fd74:	ldp	x27, x28, [sp, #80]
   4fd78:	mov	x1, x21
   4fd7c:	mov	w3, w19
   4fd80:	mov	x2, x24
   4fd84:	mov	x0, x23
   4fd88:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   4fd8c:	ldp	x21, x22, [sp, #32]
   4fd90:	ldp	x25, x26, [sp, #64]
   4fd94:	b	4fc5c <__exp2f_finite@GLIBC_2.17+0x31f4>
   4fd98:	stp	x21, x22, [sp, #32]
   4fd9c:	stp	x25, x26, [sp, #64]
   4fda0:	stp	x27, x28, [sp, #80]
   4fda4:	bl	ba70 <__stack_chk_fail@plt>
   4fda8:	sub	sp, sp, #0x430
   4fdac:	stp	x29, x30, [sp]
   4fdb0:	mov	x29, sp
   4fdb4:	ldr	x5, [x1, #8]
   4fdb8:	stp	x19, x20, [sp, #16]
   4fdbc:	adrp	x20, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4fdc0:	stp	x21, x22, [sp, #32]
   4fdc4:	mov	w19, w3
   4fdc8:	mov	x21, x2
   4fdcc:	ldr	x6, [x20, #4032]
   4fdd0:	cmp	x5, #0x0
   4fdd4:	ldr	x7, [x6]
   4fdd8:	str	x7, [sp, #1064]
   4fddc:	mov	x7, #0x0                   	// #0
   4fde0:	b.le	4fe28 <__exp2f_finite@GLIBC_2.17+0x33c0>
   4fde4:	add	x22, sp, #0x50
   4fde8:	mov	x2, x22
   4fdec:	bl	4fc20 <__exp2f_finite@GLIBC_2.17+0x31b8>
   4fdf0:	mov	w2, w19
   4fdf4:	mov	x1, x21
   4fdf8:	mov	x0, x22
   4fdfc:	bl	50790 <__exp2f_finite@GLIBC_2.17+0x3d28>
   4fe00:	ldr	x20, [x20, #4032]
   4fe04:	ldr	x1, [sp, #1064]
   4fe08:	ldr	x0, [x20]
   4fe0c:	eor	x0, x1, x0
   4fe10:	cbnz	x0, 4fee8 <__exp2f_finite@GLIBC_2.17+0x3480>
   4fe14:	ldp	x29, x30, [sp]
   4fe18:	ldp	x19, x20, [sp, #16]
   4fe1c:	ldp	x21, x22, [sp, #32]
   4fe20:	add	sp, sp, #0x430
   4fe24:	ret
   4fe28:	mov	x22, x0
   4fe2c:	stp	x23, x24, [sp, #48]
   4fe30:	add	x23, sp, #0x50
   4fe34:	mov	x0, x1
   4fe38:	mov	x2, x23
   4fe3c:	mov	x1, x22
   4fe40:	str	x25, [sp, #64]
   4fe44:	bl	4fc20 <__exp2f_finite@GLIBC_2.17+0x31b8>
   4fe48:	add	x25, sp, #0x198
   4fe4c:	mov	x0, x23
   4fe50:	mov	x1, x23
   4fe54:	mov	x2, x25
   4fe58:	mov	w3, w19
   4fe5c:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   4fe60:	ldr	x0, [sp, #88]
   4fe64:	cbz	x0, 4fe70 <__exp2f_finite@GLIBC_2.17+0x3408>
   4fe68:	mov	x0, #0x1                   	// #1
   4fe6c:	str	x0, [sp, #88]
   4fe70:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4fe74:	mov	w3, w19
   4fe78:	add	x24, sp, #0x2e0
   4fe7c:	mov	x0, x25
   4fe80:	ldr	x1, [x1, #4064]
   4fe84:	mov	x2, x24
   4fe88:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   4fe8c:	mov	x1, x25
   4fe90:	mov	x0, x24
   4fe94:	mov	w2, w19
   4fe98:	bl	50b58 <__exp2f_finite@GLIBC_2.17+0x40f0>
   4fe9c:	mov	x2, x24
   4fea0:	mov	x1, x25
   4fea4:	mov	x0, x23
   4fea8:	mov	w3, w19
   4feac:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   4feb0:	ldr	x3, [x22, #8]
   4feb4:	mov	x0, x24
   4feb8:	mov	x1, x23
   4febc:	mov	w2, w19
   4fec0:	str	x3, [sp, #744]
   4fec4:	bl	50790 <__exp2f_finite@GLIBC_2.17+0x3d28>
   4fec8:	mov	x1, x23
   4fecc:	mov	x0, x23
   4fed0:	mov	w3, w19
   4fed4:	mov	x2, x21
   4fed8:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   4fedc:	ldp	x23, x24, [sp, #48]
   4fee0:	ldr	x25, [sp, #64]
   4fee4:	b	4fe00 <__exp2f_finite@GLIBC_2.17+0x3398>
   4fee8:	stp	x23, x24, [sp, #48]
   4feec:	str	x25, [sp, #64]
   4fef0:	bl	ba70 <__stack_chk_fail@plt>
   4fef4:	nop
   4fef8:	sub	sp, sp, #0x2f0
   4fefc:	mov	w9, w4
   4ff00:	mov	w8, w2
   4ff04:	cmn	w2, #0x14
   4ff08:	stp	x29, x30, [sp]
   4ff0c:	mov	x29, sp
   4ff10:	stp	w3, w4, [sp, #168]
   4ff14:	adrp	x4, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   4ff18:	stp	x19, x20, [sp, #16]
   4ff1c:	ldr	x6, [x4, #4032]
   4ff20:	adrp	x4, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   4ff24:	add	x4, x4, #0x70
   4ff28:	stp	x21, x22, [sp, #32]
   4ff2c:	ldr	x7, [x6]
   4ff30:	str	x7, [sp, #744]
   4ff34:	mov	x7, #0x0                   	// #0
   4ff38:	stp	x23, x24, [sp, #48]
   4ff3c:	mov	x7, x5
   4ff40:	ldr	w23, [x4, w9, sxtw #2]
   4ff44:	stp	x25, x26, [sp, #64]
   4ff48:	sub	w26, w3, #0x1
   4ff4c:	stp	x27, x28, [sp, #80]
   4ff50:	mov	x27, x0
   4ff54:	str	x1, [sp, #160]
   4ff58:	stp	d8, d9, [sp, #96]
   4ff5c:	str	d10, [sp, #112]
   4ff60:	b.lt	50698 <__exp2f_finite@GLIBC_2.17+0x3c30>  // b.tstop
   4ff64:	sub	w9, w2, #0x3
   4ff68:	mov	w0, #0xaaab                	// #43691
   4ff6c:	movk	w0, #0x2aaa, lsl #16
   4ff70:	smull	x0, w9, w0
   4ff74:	asr	x0, x0, #34
   4ff78:	sub	w9, w0, w9, asr #31
   4ff7c:	add	w0, w9, #0x1
   4ff80:	sub	w0, w0, w0, lsl #2
   4ff84:	lsl	w0, w0, #3
   4ff88:	add	w20, w8, w0
   4ff8c:	adds	w2, w23, w26
   4ff90:	sub	w0, w9, w26
   4ff94:	b.mi	4ffd0 <__exp2f_finite@GLIBC_2.17+0x3568>  // b.first
   4ff98:	sxtw	x0, w0
   4ff9c:	sxtw	x2, w2
   4ffa0:	add	x2, x2, #0x1
   4ffa4:	add	x3, sp, #0x108
   4ffa8:	add	x2, x2, x0
   4ffac:	sub	x3, x3, x0, lsl #3
   4ffb0:	movi	d0, #0x0
   4ffb4:	tbnz	w0, #31, 4ffc0 <__exp2f_finite@GLIBC_2.17+0x3558>
   4ffb8:	ldr	w1, [x7, x0, lsl #2]
   4ffbc:	scvtf	d0, w1
   4ffc0:	str	d0, [x3, x0, lsl #3]
   4ffc4:	add	x0, x0, #0x1
   4ffc8:	cmp	x0, x2
   4ffcc:	b.ne	4ffb0 <__exp2f_finite@GLIBC_2.17+0x3548>  // b.any
   4ffd0:	sxtw	x5, w23
   4ffd4:	add	x24, sp, #0x248
   4ffd8:	tbnz	w23, #31, 5003c <__exp2f_finite@GLIBC_2.17+0x35d4>
   4ffdc:	ldr	w0, [sp, #168]
   4ffe0:	add	x3, x5, #0x2
   4ffe4:	add	x24, sp, #0x248
   4ffe8:	add	x10, sp, #0x108
   4ffec:	sub	w4, w0, #0x2
   4fff0:	mov	x2, #0x1                   	// #1
   4fff4:	nop
   4fff8:	movi	d0, #0x0
   4fffc:	tbnz	w26, #31, 50028 <__exp2f_finite@GLIBC_2.17+0x35c0>
   50000:	add	w1, w4, w2
   50004:	movi	d0, #0x0
   50008:	mov	x0, #0x0                   	// #0
   5000c:	add	x1, x10, w1, sxtw #3
   50010:	ldr	d2, [x27, x0, lsl #3]
   50014:	add	x0, x0, #0x1
   50018:	ldr	d1, [x1], #-8
   5001c:	cmp	w26, w0
   50020:	fmadd	d0, d2, d1, d0
   50024:	b.ge	50010 <__exp2f_finite@GLIBC_2.17+0x35a8>  // b.tcont
   50028:	add	x0, x24, x2, lsl #3
   5002c:	add	x2, x2, #0x1
   50030:	cmp	x2, x3
   50034:	stur	d0, [x0, #-8]
   50038:	b.ne	4fff8 <__exp2f_finite@GLIBC_2.17+0x3590>  // b.any
   5003c:	sub	w21, w23, #0x1
   50040:	add	x7, x7, w9, sxtw #2
   50044:	add	x22, sp, #0xb8
   50048:	sub	x7, x7, #0x4
   5004c:	sbfiz	x0, x21, #2, #32
   50050:	mov	w28, w23
   50054:	str	x0, [sp, #152]
   50058:	add	x0, x22, x5, lsl #2
   5005c:	mov	x1, #0x3e70000000000000    	// #4499096027743125504
   50060:	fmov	d10, x1
   50064:	str	x0, [sp, #144]
   50068:	mov	x0, #0x4170000000000000    	// #4715268809856909312
   5006c:	fmov	d9, x0
   50070:	sxtw	x21, w28
   50074:	cmp	w28, #0x0
   50078:	sbfiz	x2, x28, #3, #32
   5007c:	ldr	d0, [x24, x21, lsl #3]
   50080:	b.le	500c8 <__exp2f_finite@GLIBC_2.17+0x3660>
   50084:	sub	w10, w28, #0x1
   50088:	add	x2, x24, x2
   5008c:	add	x10, x10, #0x2
   50090:	mov	x1, #0x1                   	// #1
   50094:	nop
   50098:	fmul	d1, d0, d10
   5009c:	add	x9, x22, x1, lsl #2
   500a0:	ldr	d3, [x2, #-8]!
   500a4:	add	x1, x1, #0x1
   500a8:	cmp	x1, x10
   500ac:	fcvtzs	w0, d1
   500b0:	scvtf	d1, w0
   500b4:	fmsub	d2, d1, d9, d0
   500b8:	fadd	d0, d1, d3
   500bc:	fcvtzs	w0, d2
   500c0:	stur	w0, [x9, #-4]
   500c4:	b.ne	50098 <__exp2f_finite@GLIBC_2.17+0x3630>  // b.any
   500c8:	mov	w0, w20
   500cc:	str	x7, [sp, #136]
   500d0:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   500d4:	fmov	d1, #1.250000000000000000e-01
   500d8:	fmov	d2, #8.000000000000000000e+00
   500dc:	cmp	w20, #0x0
   500e0:	fmul	d1, d0, d1
   500e4:	ldr	x7, [sp, #136]
   500e8:	frintm	d1, d1
   500ec:	fmsub	d0, d1, d2, d0
   500f0:	fcvtzs	w19, d0
   500f4:	scvtf	d8, w19
   500f8:	fsub	d8, d0, d8
   500fc:	b.le	50248 <__exp2f_finite@GLIBC_2.17+0x37e0>
   50100:	sub	w0, w28, #0x1
   50104:	mov	w2, #0x17                  	// #23
   50108:	sub	w11, w2, w20
   5010c:	mov	w1, #0x18                  	// #24
   50110:	sxtw	x0, w0
   50114:	sub	w9, w1, w20
   50118:	ldr	w2, [x22, x0, lsl #2]
   5011c:	asr	w1, w2, w9
   50120:	add	w19, w19, w1
   50124:	lsl	w1, w1, w9
   50128:	sub	w2, w2, w1
   5012c:	str	w2, [x22, x0, lsl #2]
   50130:	asr	w25, w2, w11
   50134:	cmp	w25, #0x0
   50138:	b.gt	50260 <__exp2f_finite@GLIBC_2.17+0x37f8>
   5013c:	fcmp	d8, #0.0
   50140:	b.ne	50360 <__exp2f_finite@GLIBC_2.17+0x38f8>  // b.any
   50144:	sub	w9, w28, #0x1
   50148:	cmp	w23, w9
   5014c:	b.gt	5018c <__exp2f_finite@GLIBC_2.17+0x3724>
   50150:	sub	w0, w28, #0x2
   50154:	mvn	w1, w23
   50158:	add	w1, w1, w28
   5015c:	sub	x12, x21, #0x3
   50160:	sxtw	x0, w0
   50164:	sub	x12, x12, x1
   50168:	mov	w1, #0x0                   	// #0
   5016c:	nop
   50170:	add	x11, x22, x0, lsl #2
   50174:	sub	x0, x0, #0x1
   50178:	cmp	x0, x12
   5017c:	ldr	w11, [x11, #4]
   50180:	orr	w1, w1, w11
   50184:	b.ne	50170 <__exp2f_finite@GLIBC_2.17+0x3708>  // b.any
   50188:	cbnz	w1, 50554 <__exp2f_finite@GLIBC_2.17+0x3aec>
   5018c:	ldr	x0, [sp, #152]
   50190:	mov	w1, #0x1                   	// #1
   50194:	ldr	w2, [x22, x0]
   50198:	ldr	x0, [sp, #144]
   5019c:	cbnz	w2, 50548 <__exp2f_finite@GLIBC_2.17+0x3ae0>
   501a0:	ldur	w2, [x0, #-8]
   501a4:	sub	x0, x0, #0x4
   501a8:	add	w1, w1, #0x1
   501ac:	cbz	w2, 501a0 <__exp2f_finite@GLIBC_2.17+0x3738>
   501b0:	add	w9, w28, w1
   501b4:	add	w0, w28, #0x1
   501b8:	ldr	w1, [sp, #168]
   501bc:	add	w10, w26, w0
   501c0:	sxtw	x0, w0
   501c4:	add	w2, w28, #0x2
   501c8:	add	x0, x0, w26, sxtw
   501cc:	sxtw	x10, w10
   501d0:	add	x3, sp, #0x108
   501d4:	add	x1, x21, w1, sxtw
   501d8:	sxtw	x2, w2
   501dc:	add	x3, x3, x0, lsl #3
   501e0:	sub	x10, x10, x1
   501e4:	nop
   501e8:	ldr	w0, [x7, x2, lsl #2]
   501ec:	movi	d1, #0x0
   501f0:	scvtf	d0, w0
   501f4:	str	d0, [x3, x10, lsl #3]
   501f8:	tbnz	w26, #31, 50224 <__exp2f_finite@GLIBC_2.17+0x37bc>
   501fc:	mov	x1, x3
   50200:	mov	x0, #0x0                   	// #0
   50204:	b	5020c <__exp2f_finite@GLIBC_2.17+0x37a4>
   50208:	ldr	d0, [x1]
   5020c:	ldr	d2, [x27, x0, lsl #3]
   50210:	add	x0, x0, #0x1
   50214:	sub	x1, x1, #0x8
   50218:	cmp	w26, w0
   5021c:	fmadd	d1, d2, d0, d1
   50220:	b.ge	50208 <__exp2f_finite@GLIBC_2.17+0x37a0>  // b.tcont
   50224:	add	x0, x24, x2, lsl #3
   50228:	add	x2, x2, #0x1
   5022c:	sub	w1, w2, #0x1
   50230:	add	x3, x3, #0x8
   50234:	cmp	w9, w1
   50238:	stur	d1, [x0, #-8]
   5023c:	b.ge	501e8 <__exp2f_finite@GLIBC_2.17+0x3780>  // b.tcont
   50240:	mov	w28, w9
   50244:	b	50070 <__exp2f_finite@GLIBC_2.17+0x3608>
   50248:	b.ne	5051c <__exp2f_finite@GLIBC_2.17+0x3ab4>  // b.any
   5024c:	sub	w0, w28, #0x1
   50250:	ldr	w2, [x22, w0, sxtw #2]
   50254:	asr	w25, w2, #23
   50258:	cmp	w25, #0x0
   5025c:	b.le	5013c <__exp2f_finite@GLIBC_2.17+0x36d4>
   50260:	add	w19, w19, #0x1
   50264:	cmp	w28, #0x0
   50268:	b.le	506a4 <__exp2f_finite@GLIBC_2.17+0x3c3c>
   5026c:	ldr	w1, [sp, #184]
   50270:	cbnz	w1, 50510 <__exp2f_finite@GLIBC_2.17+0x3aa8>
   50274:	cmp	w28, #0x1
   50278:	b.eq	50304 <__exp2f_finite@GLIBC_2.17+0x389c>  // b.none
   5027c:	ldr	w1, [x22, #4]
   50280:	add	x9, x22, #0x4
   50284:	mov	w11, #0x1                   	// #1
   50288:	add	w0, w11, #0x1
   5028c:	cbnz	w1, 502b0 <__exp2f_finite@GLIBC_2.17+0x3848>
   50290:	add	x9, x9, #0x4
   50294:	cmp	w28, w0
   50298:	b.eq	50304 <__exp2f_finite@GLIBC_2.17+0x389c>  // b.none
   5029c:	ldr	w1, [x9]
   502a0:	mov	w11, w0
   502a4:	add	w0, w11, #0x1
   502a8:	cbz	w1, 50290 <__exp2f_finite@GLIBC_2.17+0x3828>
   502ac:	nop
   502b0:	mov	w9, #0x1000000             	// #16777216
   502b4:	sub	w1, w9, w1
   502b8:	str	w1, [x22, w11, sxtw #2]
   502bc:	cmp	w28, w0
   502c0:	b.le	50300 <__exp2f_finite@GLIBC_2.17+0x3898>
   502c4:	sub	w9, w28, #0x1
   502c8:	sxtw	x11, w0
   502cc:	sub	w9, w9, w0
   502d0:	add	x1, x22, #0x4
   502d4:	add	x9, x9, x11
   502d8:	add	x0, x22, w0, sxtw #2
   502dc:	ldr	w11, [x22, x11, lsl #2]
   502e0:	mov	w12, #0xffffff              	// #16777215
   502e4:	add	x1, x1, x9, lsl #2
   502e8:	b	502f0 <__exp2f_finite@GLIBC_2.17+0x3888>
   502ec:	ldr	w11, [x0]
   502f0:	sub	w11, w12, w11
   502f4:	str	w11, [x0], #4
   502f8:	cmp	x0, x1
   502fc:	b.ne	502ec <__exp2f_finite@GLIBC_2.17+0x3884>  // b.any
   50300:	mov	w1, #0x1                   	// #1
   50304:	cmp	w20, #0x0
   50308:	b.le	50330 <__exp2f_finite@GLIBC_2.17+0x38c8>
   5030c:	cmp	w20, #0x1
   50310:	b.eq	50680 <__exp2f_finite@GLIBC_2.17+0x3c18>  // b.none
   50314:	cmp	w20, #0x2
   50318:	b.ne	50330 <__exp2f_finite@GLIBC_2.17+0x38c8>  // b.any
   5031c:	sub	w0, w28, #0x1
   50320:	sxtw	x0, w0
   50324:	ldr	w9, [x22, x0, lsl #2]
   50328:	and	w9, w9, #0x3fffff
   5032c:	str	w9, [x22, x0, lsl #2]
   50330:	cmp	w25, #0x2
   50334:	b.ne	5013c <__exp2f_finite@GLIBC_2.17+0x36d4>  // b.any
   50338:	fmov	d0, #1.000000000000000000e+00
   5033c:	fsub	d8, d0, d8
   50340:	cbz	w1, 5013c <__exp2f_finite@GLIBC_2.17+0x36d4>
   50344:	mov	w0, w20
   50348:	str	x7, [sp, #136]
   5034c:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   50350:	fsub	d8, d8, d0
   50354:	ldr	x7, [sp, #136]
   50358:	fcmp	d8, #0.0
   5035c:	b.eq	50144 <__exp2f_finite@GLIBC_2.17+0x36dc>  // b.none
   50360:	fmov	d0, d8
   50364:	neg	w0, w20
   50368:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   5036c:	mov	x0, #0x4170000000000000    	// #4715268809856909312
   50370:	fmov	d2, x0
   50374:	fcmpe	d0, d2
   50378:	b.lt	5071c <__exp2f_finite@GLIBC_2.17+0x3cb4>  // b.tstop
   5037c:	mov	x0, #0x3e70000000000000    	// #4499096027743125504
   50380:	fmov	d1, x0
   50384:	add	w9, w28, #0x1
   50388:	add	w20, w20, #0x18
   5038c:	fmul	d1, d0, d1
   50390:	fcvtzs	w1, d1
   50394:	scvtf	d1, w1
   50398:	fmsub	d0, d1, d2, d0
   5039c:	fcvtzs	w0, d0
   503a0:	str	w0, [x22, x21, lsl #2]
   503a4:	str	w1, [x22, w9, sxtw #2]
   503a8:	fmov	d0, #1.000000000000000000e+00
   503ac:	mov	w0, w20
   503b0:	str	w9, [sp, #136]
   503b4:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   503b8:	fmov	d1, d0
   503bc:	ldr	w9, [sp, #136]
   503c0:	tbnz	w9, #31, 50594 <__exp2f_finite@GLIBC_2.17+0x3b2c>
   503c4:	sub	w13, w9, #0x1
   503c8:	mov	x1, #0x3e70000000000000    	// #4499096027743125504
   503cc:	fmov	d2, x1
   503d0:	mov	x8, #0xfffffffffffffffe    	// #-2
   503d4:	sxtw	x12, w13
   503d8:	mov	x1, x12
   503dc:	nop
   503e0:	add	x0, x22, x1, lsl #2
   503e4:	add	x3, x24, x1, lsl #3
   503e8:	sub	x1, x1, #0x1
   503ec:	cmp	x1, x8
   503f0:	ldr	w0, [x0, #4]
   503f4:	scvtf	d0, w0
   503f8:	fmul	d0, d0, d1
   503fc:	fmul	d1, d1, d2
   50400:	str	d0, [x3, #8]
   50404:	b.ne	503e0 <__exp2f_finite@GLIBC_2.17+0x3978>  // b.any
   50408:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   5040c:	add	x4, x0, #0x70
   50410:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50414:	add	x1, x24, w9, sxtw #3
   50418:	add	x11, sp, #0x1a8
   5041c:	sub	x1, x1, #0x8
   50420:	add	x4, x4, #0x10
   50424:	mov	x7, x11
   50428:	mov	w5, w9
   5042c:	ldr	d3, [x0, #104]
   50430:	mov	w3, #0x0                   	// #0
   50434:	nop
   50438:	fmov	d1, d3
   5043c:	movi	d0, #0x0
   50440:	mov	x0, #0x1                   	// #1
   50444:	tbz	w23, #31, 5045c <__exp2f_finite@GLIBC_2.17+0x39f4>
   50448:	b	5046c <__exp2f_finite@GLIBC_2.17+0x3a04>
   5044c:	cmp	w3, w0
   50450:	b.lt	5046c <__exp2f_finite@GLIBC_2.17+0x3a04>  // b.tstop
   50454:	ldr	d1, [x4, x0, lsl #3]
   50458:	add	x0, x0, #0x1
   5045c:	ldr	d2, [x1, x0, lsl #3]
   50460:	cmp	w23, w0
   50464:	fmadd	d0, d2, d1, d0
   50468:	b.ge	5044c <__exp2f_finite@GLIBC_2.17+0x39e4>  // b.tcont
   5046c:	sub	w5, w5, #0x1
   50470:	str	d0, [x7], #8
   50474:	cmn	w5, #0x1
   50478:	add	w3, w3, #0x1
   5047c:	sub	x1, x1, #0x8
   50480:	b.ne	50438 <__exp2f_finite@GLIBC_2.17+0x39d0>  // b.any
   50484:	ldr	w0, [sp, #172]
   50488:	cmp	w0, #0x2
   5048c:	b.gt	505b4 <__exp2f_finite@GLIBC_2.17+0x3b4c>
   50490:	cmp	w0, #0x0
   50494:	b.gt	506ac <__exp2f_finite@GLIBC_2.17+0x3c44>
   50498:	movi	d0, #0x0
   5049c:	b.ne	504cc <__exp2f_finite@GLIBC_2.17+0x3a64>  // b.any
   504a0:	add	x0, x11, x12, lsl #3
   504a4:	sub	x12, x12, #0x1
   504a8:	cmp	x8, x12
   504ac:	ldr	d1, [x0, #8]
   504b0:	fadd	d0, d0, d1
   504b4:	b.ne	504a0 <__exp2f_finite@GLIBC_2.17+0x3a38>  // b.any
   504b8:	fneg	d1, d0
   504bc:	cmp	w25, #0x0
   504c0:	ldr	x0, [sp, #160]
   504c4:	fcsel	d0, d1, d0, ne  // ne = any
   504c8:	str	d0, [x0]
   504cc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   504d0:	ldr	x25, [x0, #4032]
   504d4:	and	w0, w19, #0x7
   504d8:	ldr	x2, [sp, #744]
   504dc:	ldr	x1, [x25]
   504e0:	eor	x1, x2, x1
   504e4:	cbnz	x1, 50788 <__exp2f_finite@GLIBC_2.17+0x3d20>
   504e8:	ldp	x29, x30, [sp]
   504ec:	ldp	x19, x20, [sp, #16]
   504f0:	ldp	x21, x22, [sp, #32]
   504f4:	ldp	x23, x24, [sp, #48]
   504f8:	ldp	x25, x26, [sp, #64]
   504fc:	ldp	x27, x28, [sp, #80]
   50500:	ldp	d8, d9, [sp, #96]
   50504:	ldr	d10, [sp, #112]
   50508:	add	sp, sp, #0x2f0
   5050c:	ret
   50510:	mov	w0, #0x1                   	// #1
   50514:	mov	w11, #0x0                   	// #0
   50518:	b	502b0 <__exp2f_finite@GLIBC_2.17+0x3848>
   5051c:	fmov	d0, #5.000000000000000000e-01
   50520:	mov	w25, #0x0                   	// #0
   50524:	fcmpe	d8, d0
   50528:	b.lt	5013c <__exp2f_finite@GLIBC_2.17+0x36d4>  // b.tstop
   5052c:	add	w19, w19, #0x1
   50530:	cmp	w28, #0x0
   50534:	mov	w25, #0x2                   	// #2
   50538:	b.gt	5026c <__exp2f_finite@GLIBC_2.17+0x3804>
   5053c:	fmov	d0, #1.000000000000000000e+00
   50540:	fsub	d8, d0, d8
   50544:	b	5013c <__exp2f_finite@GLIBC_2.17+0x36d4>
   50548:	add	w0, w28, w1
   5054c:	mov	w9, w0
   50550:	b	501b8 <__exp2f_finite@GLIBC_2.17+0x3750>
   50554:	ldr	w1, [x22, w9, sxtw #2]
   50558:	sub	w20, w20, #0x18
   5055c:	sbfiz	x0, x9, #2, #32
   50560:	cbnz	w1, 503a8 <__exp2f_finite@GLIBC_2.17+0x3940>
   50564:	add	x0, x22, x0
   50568:	ldr	w1, [x0, #-4]!
   5056c:	sub	w9, w9, #0x1
   50570:	sub	w20, w20, #0x18
   50574:	cbz	w1, 50568 <__exp2f_finite@GLIBC_2.17+0x3b00>
   50578:	fmov	d0, #1.000000000000000000e+00
   5057c:	mov	w0, w20
   50580:	str	w9, [sp, #136]
   50584:	bl	3d978 <modf@@GLIBC_2.17+0x88>
   50588:	fmov	d1, d0
   5058c:	ldr	w9, [sp, #136]
   50590:	tbz	w9, #31, 503c4 <__exp2f_finite@GLIBC_2.17+0x395c>
   50594:	ldr	w0, [sp, #172]
   50598:	cmp	w0, #0x2
   5059c:	b.gt	5076c <__exp2f_finite@GLIBC_2.17+0x3d04>
   505a0:	movi	d0, #0x0
   505a4:	cmp	w0, #0x0
   505a8:	b.gt	506d0 <__exp2f_finite@GLIBC_2.17+0x3c68>
   505ac:	b.eq	504b8 <__exp2f_finite@GLIBC_2.17+0x3a50>  // b.none
   505b0:	b	504cc <__exp2f_finite@GLIBC_2.17+0x3a64>
   505b4:	ldr	w0, [sp, #172]
   505b8:	cmp	w0, #0x3
   505bc:	b.ne	504cc <__exp2f_finite@GLIBC_2.17+0x3a64>  // b.any
   505c0:	cbz	w9, 50780 <__exp2f_finite@GLIBC_2.17+0x3d18>
   505c4:	sxtw	x3, w9
   505c8:	add	x0, x11, w9, sxtw #3
   505cc:	mov	w1, w9
   505d0:	ldr	d1, [x11, x3, lsl #3]
   505d4:	ldur	d0, [x0, #-8]
   505d8:	fmov	d2, d1
   505dc:	subs	w1, w1, #0x1
   505e0:	fadd	d1, d1, d0
   505e4:	fsub	d0, d0, d1
   505e8:	fadd	d0, d0, d2
   505ec:	str	d0, [x0]
   505f0:	str	d1, [x0, #-8]!
   505f4:	b.ne	505d4 <__exp2f_finite@GLIBC_2.17+0x3b6c>  // b.any
   505f8:	cmp	w9, #0x1
   505fc:	b.le	50780 <__exp2f_finite@GLIBC_2.17+0x3d18>
   50600:	sub	w9, w9, #0x2
   50604:	lsl	x4, x3, #3
   50608:	add	x0, sp, #0x1a0
   5060c:	add	x1, x11, x4
   50610:	sub	x4, x4, w9, uxtw #3
   50614:	ldr	d1, [x11, x3, lsl #3]
   50618:	add	x0, x0, x4
   5061c:	ldur	d0, [x1, #-8]
   50620:	fmov	d2, d1
   50624:	fadd	d1, d1, d0
   50628:	fsub	d0, d0, d1
   5062c:	fadd	d0, d0, d2
   50630:	str	d0, [x1]
   50634:	str	d1, [x1, #-8]!
   50638:	cmp	x0, x1
   5063c:	b.ne	5061c <__exp2f_finite@GLIBC_2.17+0x3bb4>  // b.any
   50640:	sub	x1, x3, #0x2
   50644:	movi	d0, #0x0
   50648:	sub	x1, x1, x9
   5064c:	sxtw	x0, w13
   50650:	add	x3, x11, x0, lsl #3
   50654:	sub	x0, x0, #0x1
   50658:	cmp	x1, x0
   5065c:	ldr	d1, [x3, #8]
   50660:	fadd	d0, d0, d1
   50664:	b.ne	50650 <__exp2f_finite@GLIBC_2.17+0x3be8>  // b.any
   50668:	ldp	d2, d1, [sp, #424]
   5066c:	cbnz	w25, 5072c <__exp2f_finite@GLIBC_2.17+0x3cc4>
   50670:	ldr	x0, [sp, #160]
   50674:	stp	d2, d1, [x0]
   50678:	str	d0, [x0, #16]
   5067c:	b	504cc <__exp2f_finite@GLIBC_2.17+0x3a64>
   50680:	sub	w0, w28, #0x1
   50684:	sxtw	x0, w0
   50688:	ldr	w9, [x22, x0, lsl #2]
   5068c:	and	w9, w9, #0x7fffff
   50690:	str	w9, [x22, x0, lsl #2]
   50694:	b	50330 <__exp2f_finite@GLIBC_2.17+0x38c8>
   50698:	mov	w0, #0xffffffe8            	// #-24
   5069c:	mov	w9, #0x0                   	// #0
   506a0:	b	4ff88 <__exp2f_finite@GLIBC_2.17+0x3520>
   506a4:	mov	w1, #0x0                   	// #0
   506a8:	b	50304 <__exp2f_finite@GLIBC_2.17+0x389c>
   506ac:	movi	d0, #0x0
   506b0:	sxtw	x0, w13
   506b4:	mov	x3, #0xfffffffffffffffe    	// #-2
   506b8:	add	x1, x11, x0, lsl #3
   506bc:	sub	x0, x0, #0x1
   506c0:	cmp	x3, x0
   506c4:	ldr	d1, [x1, #8]
   506c8:	fadd	d0, d0, d1
   506cc:	b.ne	506b8 <__exp2f_finite@GLIBC_2.17+0x3c50>  // b.any
   506d0:	cbnz	w25, 50748 <__exp2f_finite@GLIBC_2.17+0x3ce0>
   506d4:	ldr	x0, [sp, #160]
   506d8:	cmp	w9, #0x0
   506dc:	ldr	d1, [sp, #424]
   506e0:	str	d0, [x0]
   506e4:	fsub	d0, d1, d0
   506e8:	b.le	50710 <__exp2f_finite@GLIBC_2.17+0x3ca8>
   506ec:	add	x1, sp, #0x1b0
   506f0:	mov	w0, #0x1                   	// #1
   506f4:	ldr	d1, [x1], #8
   506f8:	add	w0, w0, #0x1
   506fc:	cmp	w9, w0
   50700:	fadd	d0, d0, d1
   50704:	b.ge	506f4 <__exp2f_finite@GLIBC_2.17+0x3c8c>  // b.tcont
   50708:	cbz	w25, 50710 <__exp2f_finite@GLIBC_2.17+0x3ca8>
   5070c:	fneg	d0, d0
   50710:	ldr	x0, [sp, #160]
   50714:	str	d0, [x0, #8]
   50718:	b	504cc <__exp2f_finite@GLIBC_2.17+0x3a64>
   5071c:	fcvtzs	w0, d0
   50720:	mov	w9, w28
   50724:	str	w0, [x22, x21, lsl #2]
   50728:	b	503a8 <__exp2f_finite@GLIBC_2.17+0x3940>
   5072c:	fneg	d2, d2
   50730:	fneg	d1, d1
   50734:	fneg	d0, d0
   50738:	ldr	x0, [sp, #160]
   5073c:	stp	d2, d1, [x0]
   50740:	str	d0, [x0, #16]
   50744:	b	504cc <__exp2f_finite@GLIBC_2.17+0x3a64>
   50748:	fneg	d1, d0
   5074c:	ldr	d2, [sp, #424]
   50750:	ldr	x0, [sp, #160]
   50754:	cmp	w9, #0x0
   50758:	fsub	d0, d2, d0
   5075c:	str	d1, [x0]
   50760:	b.gt	506ec <__exp2f_finite@GLIBC_2.17+0x3c84>
   50764:	fneg	d0, d0
   50768:	b	50710 <__exp2f_finite@GLIBC_2.17+0x3ca8>
   5076c:	ldr	w0, [sp, #172]
   50770:	movi	d0, #0x0
   50774:	cmp	w0, #0x3
   50778:	b.eq	50668 <__exp2f_finite@GLIBC_2.17+0x3c00>  // b.none
   5077c:	b	504cc <__exp2f_finite@GLIBC_2.17+0x3a64>
   50780:	movi	d0, #0x0
   50784:	b	50668 <__exp2f_finite@GLIBC_2.17+0x3c00>
   50788:	bl	ba70 <__stack_chk_fail@plt>
   5078c:	nop
   50790:	sub	sp, sp, #0x990
   50794:	stp	x29, x30, [sp]
   50798:	mov	x29, sp
   5079c:	stp	x27, x28, [sp, #80]
   507a0:	mov	x28, x0
   507a4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   507a8:	stp	x23, x24, [sp, #48]
   507ac:	add	x24, sp, #0x90
   507b0:	ldr	x0, [x0, #4032]
   507b4:	stp	x19, x20, [sp, #16]
   507b8:	mov	w19, w2
   507bc:	mov	x2, #0x148                 	// #328
   507c0:	stp	x21, x22, [sp, #32]
   507c4:	stp	x25, x26, [sp, #64]
   507c8:	str	x1, [sp, #104]
   507cc:	ldr	x1, [x0]
   507d0:	str	x1, [sp, #2440]
   507d4:	mov	x1, #0x0                   	// #0
   507d8:	mov	x0, x24
   507dc:	bl	ba50 <memset@plt>
   507e0:	ldr	w0, [x28]
   507e4:	cmp	w0, #0x0
   507e8:	b.le	50a18 <__exp2f_finite@GLIBC_2.17+0x3fb0>
   507ec:	mov	x5, #0x80                  	// #128
   507f0:	str	x5, [sp, #120]
   507f4:	mov	w5, #0x7                   	// #7
   507f8:	mov	w4, #0x1                   	// #1
   507fc:	mov	x3, #0x1                   	// #1
   50800:	str	w5, [sp, #100]
   50804:	adrp	x5, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50808:	add	x22, sp, #0x320
   5080c:	mov	x1, x22
   50810:	mov	w2, w19
   50814:	mov	x0, x28
   50818:	str	x5, [sp, #112]
   5081c:	str	w4, [sp, #144]
   50820:	str	x3, [sp, #152]
   50824:	bl	4fa30 <__exp2f_finite@GLIBC_2.17+0x2fc8>
   50828:	adrp	x27, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   5082c:	adrp	x26, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   50830:	add	x20, sp, #0x5b0
   50834:	add	x21, sp, #0x6f8
   50838:	ldr	x27, [x27, #4064]
   5083c:	add	x25, sp, #0x840
   50840:	ldr	x26, [x26, #4016]
   50844:	mov	w23, #0x0                   	// #0
   50848:	mov	w3, w19
   5084c:	mov	x2, x20
   50850:	mov	x1, x22
   50854:	mov	x0, x27
   50858:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   5085c:	add	w23, w23, #0x1
   50860:	mov	w2, w19
   50864:	mov	x1, x21
   50868:	mov	x0, x20
   5086c:	bl	50b58 <__exp2f_finite@GLIBC_2.17+0x40f0>
   50870:	mov	w3, w19
   50874:	mov	x2, x20
   50878:	mov	x1, x21
   5087c:	mov	x0, x21
   50880:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   50884:	mov	w3, w19
   50888:	mov	x2, x21
   5088c:	mov	x1, x22
   50890:	mov	x0, x26
   50894:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   50898:	mov	w3, w19
   5089c:	mov	x2, x25
   508a0:	mov	x1, x21
   508a4:	mov	x0, x20
   508a8:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   508ac:	mov	w3, w19
   508b0:	mov	x2, x20
   508b4:	mov	x1, x25
   508b8:	mov	x0, x22
   508bc:	bl	4fc20 <__exp2f_finite@GLIBC_2.17+0x31b8>
   508c0:	mov	x0, x20
   508c4:	mov	w2, w19
   508c8:	mov	x1, x22
   508cc:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   508d0:	ldr	w0, [sp, #100]
   508d4:	cmp	w23, w0
   508d8:	b.ne	50848 <__exp2f_finite@GLIBC_2.17+0x3de0>  // b.any
   508dc:	add	x23, sp, #0x1d8
   508e0:	mov	x0, x22
   508e4:	mov	w2, w19
   508e8:	mov	x1, x23
   508ec:	bl	50b58 <__exp2f_finite@GLIBC_2.17+0x40f0>
   508f0:	ldr	x0, [x28, #8]
   508f4:	str	x0, [sp, #480]
   508f8:	ldr	x0, [sp, #112]
   508fc:	sxtw	x5, w19
   50900:	add	x25, sp, #0x468
   50904:	mov	w3, w19
   50908:	add	x0, x0, #0xc0
   5090c:	mov	x2, x25
   50910:	add	x6, x0, #0xc8
   50914:	add	x4, x0, #0x40
   50918:	mov	x1, x24
   5091c:	mov	x0, x22
   50920:	add	x21, sp, #0x6f8
   50924:	ldr	d0, [x6, x5, lsl #3]
   50928:	ldr	w26, [x4, x5, lsl #2]
   5092c:	fcvtzs	d0, d0
   50930:	sub	w26, w26, #0x1
   50934:	str	d0, [sp, #160]
   50938:	bl	4fc20 <__exp2f_finite@GLIBC_2.17+0x31b8>
   5093c:	cmp	w26, #0x1
   50940:	b.le	5099c <__exp2f_finite@GLIBC_2.17+0x3f34>
   50944:	nop
   50948:	ldr	x4, [sp, #160]
   5094c:	mov	w3, w19
   50950:	mov	x2, x20
   50954:	mov	x1, x24
   50958:	sub	x4, x4, #0x2
   5095c:	mov	x0, x22
   50960:	str	x4, [sp, #160]
   50964:	sub	w26, w26, #0x1
   50968:	bl	4fc20 <__exp2f_finite@GLIBC_2.17+0x31b8>
   5096c:	mov	w3, w19
   50970:	mov	x2, x21
   50974:	mov	x1, x25
   50978:	mov	x0, x22
   5097c:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   50980:	mov	w3, w19
   50984:	mov	x2, x25
   50988:	mov	x1, x21
   5098c:	mov	x0, x20
   50990:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   50994:	cmp	w26, #0x1
   50998:	b.ne	50948 <__exp2f_finite@GLIBC_2.17+0x3ee0>  // b.any
   5099c:	mov	w3, w19
   509a0:	mov	x2, x20
   509a4:	mov	x1, x25
   509a8:	mov	x0, x23
   509ac:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   509b0:	mov	w3, w19
   509b4:	mov	x2, x25
   509b8:	mov	x1, x20
   509bc:	mov	x0, x23
   509c0:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   509c4:	ldr	x2, [sp, #104]
   509c8:	mov	x1, x25
   509cc:	ldr	x4, [sp, #120]
   509d0:	mov	x0, x24
   509d4:	mov	w3, w19
   509d8:	str	x4, [sp, #160]
   509dc:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   509e0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   509e4:	ldr	x0, [x0, #4032]
   509e8:	ldr	x1, [sp, #2440]
   509ec:	ldr	x0, [x0]
   509f0:	eor	x0, x1, x0
   509f4:	cbnz	x0, 50b54 <__exp2f_finite@GLIBC_2.17+0x40ec>
   509f8:	ldp	x29, x30, [sp]
   509fc:	ldp	x19, x20, [sp, #16]
   50a00:	ldp	x21, x22, [sp, #32]
   50a04:	ldp	x23, x24, [sp, #48]
   50a08:	ldp	x25, x26, [sp, #64]
   50a0c:	ldp	x27, x28, [sp, #80]
   50a10:	add	sp, sp, #0x990
   50a14:	ret
   50a18:	b.eq	50a68 <__exp2f_finite@GLIBC_2.17+0x4000>  // b.none
   50a1c:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50a20:	str	x0, [sp, #112]
   50a24:	mov	w3, #0x1                   	// #1
   50a28:	add	x22, sp, #0x320
   50a2c:	mov	x1, x22
   50a30:	mov	w2, w19
   50a34:	mov	x0, x28
   50a38:	mov	x20, #0x1                   	// #1
   50a3c:	add	x23, sp, #0x1d8
   50a40:	str	w3, [sp, #144]
   50a44:	str	x20, [sp, #152]
   50a48:	bl	4fa30 <__exp2f_finite@GLIBC_2.17+0x2fc8>
   50a4c:	mov	x0, x28
   50a50:	mov	x1, x23
   50a54:	mov	w2, w19
   50a58:	str	x20, [sp, #120]
   50a5c:	add	x20, sp, #0x5b0
   50a60:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   50a64:	b	508f8 <__exp2f_finite@GLIBC_2.17+0x3e90>
   50a68:	mov	x0, x28
   50a6c:	mov	w2, w19
   50a70:	add	x1, sp, #0x88
   50a74:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   50a78:	ldr	d0, [sp, #136]
   50a7c:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50a80:	str	x0, [sp, #112]
   50a84:	add	x0, x0, #0xc0
   50a88:	fabs	d0, d0
   50a8c:	ldr	d1, [x0, #48]
   50a90:	fcmpe	d0, d1
   50a94:	str	d0, [sp, #136]
   50a98:	b.gt	50b24 <__exp2f_finite@GLIBC_2.17+0x40bc>
   50a9c:	ldr	d1, [x0, #40]
   50aa0:	fcmpe	d0, d1
   50aa4:	b.gt	50b18 <__exp2f_finite@GLIBC_2.17+0x40b0>
   50aa8:	ldr	d1, [x0, #32]
   50aac:	fcmpe	d0, d1
   50ab0:	b.gt	50b30 <__exp2f_finite@GLIBC_2.17+0x40c8>
   50ab4:	ldr	d1, [x0, #24]
   50ab8:	fcmpe	d0, d1
   50abc:	b.gt	50b48 <__exp2f_finite@GLIBC_2.17+0x40e0>
   50ac0:	ldr	d1, [x0, #16]
   50ac4:	fcmpe	d0, d1
   50ac8:	b.gt	50b3c <__exp2f_finite@GLIBC_2.17+0x40d4>
   50acc:	ldr	d1, [x0, #8]
   50ad0:	fcmpe	d0, d1
   50ad4:	b.le	50a24 <__exp2f_finite@GLIBC_2.17+0x3fbc>
   50ad8:	mov	w0, #0x1                   	// #1
   50adc:	str	w0, [sp, #100]
   50ae0:	mov	x3, #0x1                   	// #1
   50ae4:	add	x22, sp, #0x320
   50ae8:	mov	x0, x28
   50aec:	mov	w20, #0x1                   	// #1
   50af0:	mov	x1, x22
   50af4:	mov	w2, w19
   50af8:	str	w20, [sp, #144]
   50afc:	str	x3, [sp, #152]
   50b00:	bl	4fa30 <__exp2f_finite@GLIBC_2.17+0x2fc8>
   50b04:	ldrb	w0, [sp, #100]
   50b08:	lsl	w20, w20, w0
   50b0c:	sxtw	x0, w20
   50b10:	str	x0, [sp, #120]
   50b14:	b	50828 <__exp2f_finite@GLIBC_2.17+0x3dc0>
   50b18:	mov	w0, #0x5                   	// #5
   50b1c:	str	w0, [sp, #100]
   50b20:	b	50ae0 <__exp2f_finite@GLIBC_2.17+0x4078>
   50b24:	mov	w0, #0x6                   	// #6
   50b28:	str	w0, [sp, #100]
   50b2c:	b	50ae0 <__exp2f_finite@GLIBC_2.17+0x4078>
   50b30:	mov	w0, #0x4                   	// #4
   50b34:	str	w0, [sp, #100]
   50b38:	b	50ae0 <__exp2f_finite@GLIBC_2.17+0x4078>
   50b3c:	mov	w0, #0x2                   	// #2
   50b40:	str	w0, [sp, #100]
   50b44:	b	50ae0 <__exp2f_finite@GLIBC_2.17+0x4078>
   50b48:	mov	w0, #0x3                   	// #3
   50b4c:	str	w0, [sp, #100]
   50b50:	b	50ae0 <__exp2f_finite@GLIBC_2.17+0x4078>
   50b54:	bl	ba70 <__stack_chk_fail@plt>
   50b58:	sub	sp, sp, #0x6f0
   50b5c:	adrp	x3, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   50b60:	stp	x29, x30, [sp]
   50b64:	mov	x29, sp
   50b68:	ldr	x4, [x3, #4032]
   50b6c:	stp	x27, x28, [sp, #80]
   50b70:	ldr	w3, [x0]
   50b74:	add	x28, sp, #0x80
   50b78:	mov	x27, x1
   50b7c:	ldr	x1, [x4]
   50b80:	str	x1, [sp, #1768]
   50b84:	mov	x1, #0x0                   	// #0
   50b88:	stp	x19, x20, [sp, #16]
   50b8c:	add	w3, w3, w3, lsr #31
   50b90:	mov	w19, w2
   50b94:	mov	x1, x28
   50b98:	asr	w3, w3, #1
   50b9c:	stp	x21, x22, [sp, #32]
   50ba0:	mov	w20, w3
   50ba4:	stp	x23, x24, [sp, #48]
   50ba8:	add	x22, sp, #0x310
   50bac:	adrp	x24, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50bb0:	stp	x25, x26, [sp, #64]
   50bb4:	add	x24, x24, #0x2b0
   50bb8:	add	x26, sp, #0x1c8
   50bbc:	str	w3, [sp, #108]
   50bc0:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   50bc4:	ldr	w3, [sp, #128]
   50bc8:	mov	w2, w19
   50bcc:	mov	x0, x28
   50bd0:	add	x1, sp, #0x78
   50bd4:	sub	w3, w3, w20, lsl #1
   50bd8:	str	w3, [sp, #128]
   50bdc:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   50be0:	ldr	d5, [sp, #120]
   50be4:	fmov	d3, #1.000000000000000000e+00
   50be8:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50bec:	fmov	d4, #5.000000000000000000e-01
   50bf0:	fmov	d0, #1.500000000000000000e+00
   50bf4:	mov	w1, w19
   50bf8:	fmov	x2, d5
   50bfc:	ldr	d16, [x0, #656]
   50c00:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50c04:	ldr	d7, [x0, #664]
   50c08:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50c0c:	ubfx	x4, x2, #32, #21
   50c10:	asr	x3, x2, #32
   50c14:	orr	w4, w4, #0x3fe00000
   50c18:	ldr	d6, [x0, #672]
   50c1c:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50c20:	sub	w3, w3, w4
   50c24:	bfi	x2, x4, #32, #32
   50c28:	fmov	d1, x2
   50c2c:	ldr	d2, [x0, #680]
   50c30:	mov	x0, x22
   50c34:	fsub	d3, d1, d3
   50c38:	fmul	d1, d1, d4
   50c3c:	fmadd	d7, d3, d16, d7
   50c40:	fmadd	d6, d3, d7, d6
   50c44:	fmadd	d2, d3, d6, d2
   50c48:	fmul	d3, d2, d1
   50c4c:	fmsub	d3, d2, d3, d0
   50c50:	fmul	d2, d2, d3
   50c54:	fmul	d1, d1, d2
   50c58:	fmsub	d1, d2, d1, d0
   50c5c:	fmul	d1, d2, d1
   50c60:	fmov	x2, d1
   50c64:	asr	x4, x2, #32
   50c68:	sub	w3, w4, w3, asr #1
   50c6c:	bfi	x2, x3, #32, #32
   50c70:	fmov	d1, x2
   50c74:	fmul	d5, d5, d1
   50c78:	fmul	d4, d1, d4
   50c7c:	fmsub	d0, d5, d4, d0
   50c80:	fmul	d0, d1, d0
   50c84:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   50c88:	mov	x0, x28
   50c8c:	mov	w3, w19
   50c90:	mov	x1, x24
   50c94:	mov	x2, x26
   50c98:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   50c9c:	add	x0, x24, #0x148
   50ca0:	ldr	w25, [x0, w19, sxtw #2]
   50ca4:	cmp	w25, #0x0
   50ca8:	b.le	50d28 <__exp2f_finite@GLIBC_2.17+0x42c0>
   50cac:	add	x24, x24, #0x1d0
   50cb0:	add	x21, sp, #0x458
   50cb4:	add	x20, sp, #0x5a0
   50cb8:	mov	w23, #0x0                   	// #0
   50cbc:	nop
   50cc0:	mov	w2, w19
   50cc4:	mov	x1, x21
   50cc8:	mov	x0, x22
   50ccc:	bl	4fa30 <__exp2f_finite@GLIBC_2.17+0x2fc8>
   50cd0:	mov	w3, w19
   50cd4:	mov	x2, x20
   50cd8:	mov	x1, x26
   50cdc:	mov	x0, x21
   50ce0:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   50ce4:	add	w23, w23, #0x1
   50ce8:	mov	w3, w19
   50cec:	mov	x2, x21
   50cf0:	mov	x1, x20
   50cf4:	mov	x0, x24
   50cf8:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   50cfc:	mov	w3, w19
   50d00:	mov	x2, x20
   50d04:	mov	x1, x21
   50d08:	mov	x0, x22
   50d0c:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   50d10:	mov	w2, w19
   50d14:	mov	x1, x22
   50d18:	mov	x0, x20
   50d1c:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   50d20:	cmp	w25, w23
   50d24:	b.ne	50cc0 <__exp2f_finite@GLIBC_2.17+0x4258>  // b.any
   50d28:	mov	x1, x22
   50d2c:	mov	x0, x28
   50d30:	mov	x2, x27
   50d34:	mov	w3, w19
   50d38:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   50d3c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   50d40:	ldr	w1, [x27]
   50d44:	ldr	w2, [sp, #108]
   50d48:	ldr	x0, [x0, #4032]
   50d4c:	add	w1, w1, w2
   50d50:	str	w1, [x27]
   50d54:	ldr	x1, [sp, #1768]
   50d58:	ldr	x0, [x0]
   50d5c:	eor	x0, x1, x0
   50d60:	cbnz	x0, 50d84 <__exp2f_finite@GLIBC_2.17+0x431c>
   50d64:	ldp	x29, x30, [sp]
   50d68:	ldp	x19, x20, [sp, #16]
   50d6c:	ldp	x21, x22, [sp, #32]
   50d70:	ldp	x23, x24, [sp, #48]
   50d74:	ldp	x25, x26, [sp, #64]
   50d78:	ldp	x27, x28, [sp, #80]
   50d7c:	add	sp, sp, #0x6f0
   50d80:	ret
   50d84:	bl	ba70 <__stack_chk_fail@plt>
   50d88:	sub	sp, sp, #0x430
   50d8c:	stp	x29, x30, [sp]
   50d90:	mov	x29, sp
   50d94:	stp	x19, x20, [sp, #16]
   50d98:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   50d9c:	mov	x20, x0
   50da0:	ldr	x2, [x19, #4032]
   50da4:	stp	x21, x22, [sp, #32]
   50da8:	add	x22, sp, #0x50
   50dac:	ldr	x3, [x2]
   50db0:	str	x3, [sp, #1064]
   50db4:	mov	x3, #0x0                   	// #0
   50db8:	mov	w21, w1
   50dbc:	mov	x0, x22
   50dc0:	stp	x23, x24, [sp, #48]
   50dc4:	add	x24, sp, #0x2e0
   50dc8:	str	x25, [sp, #64]
   50dcc:	bl	514d8 <__exp2f_finite@GLIBC_2.17+0x4a70>
   50dd0:	add	x25, sp, #0x198
   50dd4:	mov	w3, w21
   50dd8:	mov	w23, w0
   50ddc:	mov	x2, x24
   50de0:	mov	x0, x22
   50de4:	mov	x1, x25
   50de8:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   50dec:	mov	w3, w21
   50df0:	tbz	w23, #0, 50e40 <__exp2f_finite@GLIBC_2.17+0x43d8>
   50df4:	mov	x0, x25
   50df8:	mov	x1, x24
   50dfc:	mov	x2, x20
   50e00:	bl	4fc20 <__exp2f_finite@GLIBC_2.17+0x31b8>
   50e04:	ldr	x0, [x20, #8]
   50e08:	neg	x0, x0
   50e0c:	str	x0, [x20, #8]
   50e10:	ldr	x19, [x19, #4032]
   50e14:	ldr	x1, [sp, #1064]
   50e18:	ldr	x0, [x19]
   50e1c:	eor	x0, x1, x0
   50e20:	cbnz	x0, 50e54 <__exp2f_finite@GLIBC_2.17+0x43ec>
   50e24:	ldp	x29, x30, [sp]
   50e28:	ldp	x19, x20, [sp, #16]
   50e2c:	ldp	x21, x22, [sp, #32]
   50e30:	ldp	x23, x24, [sp, #48]
   50e34:	ldr	x25, [sp, #64]
   50e38:	add	sp, sp, #0x430
   50e3c:	ret
   50e40:	mov	x2, x20
   50e44:	mov	x1, x25
   50e48:	mov	x0, x24
   50e4c:	bl	4fc20 <__exp2f_finite@GLIBC_2.17+0x31b8>
   50e50:	b	50e10 <__exp2f_finite@GLIBC_2.17+0x43a8>
   50e54:	bl	ba70 <__stack_chk_fail@plt>
   50e58:	sub	sp, sp, #0xae0
   50e5c:	stp	x29, x30, [sp]
   50e60:	mov	x29, sp
   50e64:	stp	x27, x28, [sp, #80]
   50e68:	adrp	x27, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   50e6c:	mov	w28, w3
   50e70:	ldr	x4, [x27, #4032]
   50e74:	stp	x25, x26, [sp, #64]
   50e78:	add	x26, sp, #0x98
   50e7c:	stp	x1, x2, [sp, #128]
   50e80:	ldr	x1, [x4]
   50e84:	str	x1, [sp, #2776]
   50e88:	mov	x1, #0x0                   	// #0
   50e8c:	mov	w2, w3
   50e90:	mov	x1, x26
   50e94:	stp	x19, x20, [sp, #16]
   50e98:	stp	x21, x22, [sp, #32]
   50e9c:	add	x21, sp, #0x990
   50ea0:	stp	x23, x24, [sp, #48]
   50ea4:	stp	d8, d9, [sp, #96]
   50ea8:	str	d10, [sp, #112]
   50eac:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   50eb0:	ldr	w4, [sp, #152]
   50eb4:	mov	w1, #0x0                   	// #0
   50eb8:	mov	x0, x21
   50ebc:	mov	x2, #0x148                 	// #328
   50ec0:	sub	w4, w4, #0x1
   50ec4:	str	w4, [sp, #152]
   50ec8:	bl	ba50 <memset@plt>
   50ecc:	mov	w1, #0x1                   	// #1
   50ed0:	mov	x0, #0x1                   	// #1
   50ed4:	str	w1, [sp, #2448]
   50ed8:	cmp	w28, #0x0
   50edc:	str	x0, [sp, #2456]
   50ee0:	b.le	50efc <__exp2f_finite@GLIBC_2.17+0x4494>
   50ee4:	nop
   50ee8:	add	x1, x21, x0, lsl #3
   50eec:	add	x0, x0, #0x1
   50ef0:	cmp	w28, w0
   50ef4:	str	xzr, [x1, #8]
   50ef8:	b.ge	50ee8 <__exp2f_finite@GLIBC_2.17+0x4480>  // b.tcont
   50efc:	add	x25, sp, #0x5b8
   50f00:	mov	w2, w28
   50f04:	mov	x1, x25
   50f08:	mov	x0, x26
   50f0c:	bl	4fa30 <__exp2f_finite@GLIBC_2.17+0x2fc8>
   50f10:	add	x20, sp, #0x700
   50f14:	mov	x4, #0x1b                  	// #27
   50f18:	mov	w3, w28
   50f1c:	fmov	d8, #2.600000000000000000e+01
   50f20:	fmov	d10, #1.000000000000000000e+00
   50f24:	fmov	d9, #2.000000000000000000e+00
   50f28:	mov	x2, x20
   50f2c:	mov	x1, x21
   50f30:	add	x19, sp, #0x848
   50f34:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   50f38:	add	x0, x0, #0x5d8
   50f3c:	str	x4, [sp, #2464]
   50f40:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   50f44:	add	x22, sp, #0x470
   50f48:	mov	x0, x20
   50f4c:	mov	x1, x19
   50f50:	mov	w2, w28
   50f54:	mov	w23, #0xc                   	// #12
   50f58:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   50f5c:	nop
   50f60:	fsub	d0, d8, d10
   50f64:	mov	w3, w28
   50f68:	mov	x2, x22
   50f6c:	mov	x1, x21
   50f70:	mov	x0, x20
   50f74:	fmul	d0, d0, d8
   50f78:	fcvtzs	d0, d0
   50f7c:	str	d0, [sp, #2464]
   50f80:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   50f84:	mov	w2, w28
   50f88:	mov	x1, x20
   50f8c:	mov	x0, x22
   50f90:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   50f94:	mov	w3, w28
   50f98:	mov	x2, x22
   50f9c:	mov	x1, x19
   50fa0:	mov	x0, x25
   50fa4:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   50fa8:	mov	w3, w28
   50fac:	mov	x2, x19
   50fb0:	mov	x1, x22
   50fb4:	mov	x0, x20
   50fb8:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   50fbc:	fsub	d8, d8, d9
   50fc0:	subs	w23, w23, #0x1
   50fc4:	b.ne	50f60 <__exp2f_finite@GLIBC_2.17+0x44f8>  // b.any
   50fc8:	mov	w3, w28
   50fcc:	add	x23, sp, #0x1e0
   50fd0:	mov	x2, x23
   50fd4:	mov	x1, x19
   50fd8:	mov	x0, x25
   50fdc:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   50fe0:	mov	w1, #0x0                   	// #0
   50fe4:	mov	x0, x21
   50fe8:	mov	x2, #0x148                 	// #328
   50fec:	bl	ba50 <memset@plt>
   50ff0:	mov	w1, #0x1                   	// #1
   50ff4:	mov	x0, #0x1                   	// #1
   50ff8:	str	w1, [sp, #2448]
   50ffc:	cmp	w28, #0x0
   51000:	str	x0, [sp, #2456]
   51004:	b.le	5101c <__exp2f_finite@GLIBC_2.17+0x45b4>
   51008:	add	x1, x21, x0, lsl #3
   5100c:	add	x0, x0, #0x1
   51010:	cmp	w28, w0
   51014:	str	xzr, [x1, #8]
   51018:	b.ge	51008 <__exp2f_finite@GLIBC_2.17+0x45a0>  // b.tcont
   5101c:	fmov	d8, #2.700000000000000000e+01
   51020:	fmov	d10, #1.000000000000000000e+00
   51024:	fmov	d9, #2.000000000000000000e+00
   51028:	mov	w2, w28
   5102c:	mov	x1, x25
   51030:	mov	x0, x26
   51034:	bl	4fa30 <__exp2f_finite@GLIBC_2.17+0x2fc8>
   51038:	mov	w24, #0xd                   	// #13
   5103c:	mov	w2, w28
   51040:	mov	x1, x20
   51044:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51048:	add	x0, x0, #0x5d8
   5104c:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   51050:	mov	w2, w28
   51054:	mov	x1, x19
   51058:	mov	x0, x20
   5105c:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   51060:	fsub	d0, d8, d10
   51064:	mov	w3, w28
   51068:	mov	x2, x22
   5106c:	mov	x1, x21
   51070:	mov	x0, x20
   51074:	fmul	d0, d0, d8
   51078:	fcvtzs	d0, d0
   5107c:	str	d0, [sp, #2464]
   51080:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   51084:	mov	w2, w28
   51088:	mov	x1, x20
   5108c:	mov	x0, x22
   51090:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   51094:	mov	w3, w28
   51098:	mov	x2, x22
   5109c:	mov	x1, x19
   510a0:	mov	x0, x25
   510a4:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   510a8:	mov	w3, w28
   510ac:	mov	x2, x19
   510b0:	mov	x1, x22
   510b4:	mov	x0, x20
   510b8:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   510bc:	fsub	d8, d8, d9
   510c0:	subs	w24, w24, #0x1
   510c4:	b.ne	51060 <__exp2f_finite@GLIBC_2.17+0x45f8>  // b.any
   510c8:	adrp	x24, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   510cc:	add	x22, sp, #0x328
   510d0:	mov	x0, x26
   510d4:	mov	x2, x22
   510d8:	mov	w3, w28
   510dc:	mov	x1, x19
   510e0:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   510e4:	mov	w25, #0x18                  	// #24
   510e8:	ldr	x24, [x24, #4016]
   510ec:	nop
   510f0:	mov	w3, w28
   510f4:	mov	x2, x20
   510f8:	mov	x1, x22
   510fc:	mov	x0, x23
   51100:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   51104:	mov	w3, w28
   51108:	mov	x2, x19
   5110c:	mov	x1, x20
   51110:	mov	x0, x22
   51114:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   51118:	mov	w3, w28
   5111c:	mov	x2, x22
   51120:	mov	x1, x19
   51124:	mov	x0, x19
   51128:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   5112c:	mov	w3, w28
   51130:	mov	x2, x19
   51134:	mov	x1, x23
   51138:	mov	x0, x24
   5113c:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   51140:	mov	w3, w28
   51144:	mov	x2, x21
   51148:	mov	x1, x23
   5114c:	mov	x0, x19
   51150:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   51154:	mov	w3, w28
   51158:	mov	x2, x23
   5115c:	mov	x1, x21
   51160:	mov	x0, x21
   51164:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   51168:	subs	w25, w25, #0x1
   5116c:	b.ne	510f0 <__exp2f_finite@GLIBC_2.17+0x4688>  // b.any
   51170:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51174:	mov	w3, w28
   51178:	ldr	x2, [sp, #128]
   5117c:	mov	x1, x23
   51180:	ldr	x0, [x0, #4064]
   51184:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   51188:	ldr	x1, [sp, #136]
   5118c:	mov	x0, x22
   51190:	mov	w2, w28
   51194:	bl	4ec30 <__exp2f_finite@GLIBC_2.17+0x21c8>
   51198:	ldr	x0, [x27, #4032]
   5119c:	ldr	x1, [sp, #2776]
   511a0:	ldr	x0, [x0]
   511a4:	eor	x0, x1, x0
   511a8:	cbnz	x0, 511d4 <__exp2f_finite@GLIBC_2.17+0x476c>
   511ac:	ldp	x29, x30, [sp]
   511b0:	ldp	x19, x20, [sp, #16]
   511b4:	ldp	x21, x22, [sp, #32]
   511b8:	ldp	x23, x24, [sp, #48]
   511bc:	ldp	x25, x26, [sp, #64]
   511c0:	ldp	x27, x28, [sp, #80]
   511c4:	ldp	d8, d9, [sp, #96]
   511c8:	ldr	d10, [sp, #112]
   511cc:	add	sp, sp, #0xae0
   511d0:	ret
   511d4:	bl	ba70 <__stack_chk_fail@plt>
   511d8:	sub	sp, sp, #0x430
   511dc:	mov	w1, #0x20                  	// #32
   511e0:	stp	x29, x30, [sp]
   511e4:	mov	x29, sp
   511e8:	stp	x21, x22, [sp, #32]
   511ec:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   511f0:	add	x22, sp, #0x198
   511f4:	ldr	x0, [x21, #4032]
   511f8:	stp	d8, d9, [sp, #48]
   511fc:	fmov	d9, d1
   51200:	ldr	x2, [x0]
   51204:	str	x2, [sp, #1064]
   51208:	mov	x2, #0x0                   	// #0
   5120c:	fmov	d8, d2
   51210:	str	d10, [sp, #64]
   51214:	fmov	d10, d0
   51218:	fmov	d0, d1
   5121c:	stp	x19, x20, [sp, #16]
   51220:	add	x20, sp, #0x50
   51224:	mov	x0, x20
   51228:	add	x19, sp, #0x2e0
   5122c:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   51230:	fsub	d1, d8, d9
   51234:	fmov	d0, #5.000000000000000000e-01
   51238:	mov	x0, x22
   5123c:	mov	w1, #0x20                  	// #32
   51240:	fmul	d0, d1, d0
   51244:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   51248:	mov	x0, x20
   5124c:	mov	x1, x22
   51250:	mov	x2, x19
   51254:	mov	w3, #0x20                  	// #32
   51258:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   5125c:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51260:	ldr	d0, [x0, #1480]
   51264:	fcmpe	d10, d0
   51268:	b.le	51304 <__exp2f_finite@GLIBC_2.17+0x489c>
   5126c:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51270:	add	x0, x0, #0x5d8
   51274:	add	x0, x0, #0x148
   51278:	mov	x2, x20
   5127c:	mov	x1, x19
   51280:	mov	w3, #0x20                  	// #32
   51284:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   51288:	mov	x2, x19
   5128c:	mov	x1, x22
   51290:	mov	x0, x20
   51294:	mov	w3, #0x20                  	// #32
   51298:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   5129c:	fmov	d0, d10
   512a0:	mov	x0, x19
   512a4:	mov	w1, #0x20                  	// #32
   512a8:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   512ac:	mov	x0, x22
   512b0:	mov	x2, x20
   512b4:	mov	x1, x19
   512b8:	mov	w3, #0x20                  	// #32
   512bc:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   512c0:	ldr	x0, [sp, #88]
   512c4:	cmp	x0, #0x0
   512c8:	b.le	5131c <__exp2f_finite@GLIBC_2.17+0x48b4>
   512cc:	fcmpe	d9, d8
   512d0:	fcsel	d0, d8, d9, ge  // ge = tcont
   512d4:	ldr	x21, [x21, #4032]
   512d8:	ldr	x1, [sp, #1064]
   512dc:	ldr	x0, [x21]
   512e0:	eor	x0, x1, x0
   512e4:	cbnz	x0, 51328 <__exp2f_finite@GLIBC_2.17+0x48c0>
   512e8:	ldp	x29, x30, [sp]
   512ec:	ldp	x19, x20, [sp, #16]
   512f0:	ldp	x21, x22, [sp, #32]
   512f4:	ldp	d8, d9, [sp, #48]
   512f8:	ldr	d10, [sp, #64]
   512fc:	add	sp, sp, #0x430
   51300:	ret
   51304:	mov	x2, x22
   51308:	mov	x1, x20
   5130c:	mov	x0, x19
   51310:	mov	w3, #0x20                  	// #32
   51314:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   51318:	b	5129c <__exp2f_finite@GLIBC_2.17+0x4834>
   5131c:	fcmpe	d9, d8
   51320:	fcsel	d0, d8, d9, ls  // ls = plast
   51324:	b	512d4 <__exp2f_finite@GLIBC_2.17+0x486c>
   51328:	bl	ba70 <__stack_chk_fail@plt>
   5132c:	nop
   51330:	sub	sp, sp, #0x430
   51334:	mov	w1, #0x20                  	// #32
   51338:	stp	x29, x30, [sp]
   5133c:	mov	x29, sp
   51340:	stp	x21, x22, [sp, #32]
   51344:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51348:	add	x22, sp, #0x198
   5134c:	ldr	x0, [x21, #4032]
   51350:	stp	d8, d9, [sp, #48]
   51354:	fmov	d9, d1
   51358:	ldr	x2, [x0]
   5135c:	str	x2, [sp, #1064]
   51360:	mov	x2, #0x0                   	// #0
   51364:	fmov	d8, d2
   51368:	str	d10, [sp, #64]
   5136c:	fmov	d10, d0
   51370:	fmov	d0, d1
   51374:	stp	x19, x20, [sp, #16]
   51378:	add	x20, sp, #0x50
   5137c:	mov	x0, x20
   51380:	add	x19, sp, #0x2e0
   51384:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   51388:	fsub	d1, d8, d9
   5138c:	fmov	d0, #5.000000000000000000e-01
   51390:	mov	x0, x22
   51394:	mov	w1, #0x20                  	// #32
   51398:	fmul	d0, d1, d0
   5139c:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   513a0:	mov	x0, x20
   513a4:	mov	x1, x22
   513a8:	mov	x2, x19
   513ac:	mov	w3, #0x20                  	// #32
   513b0:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   513b4:	mov	x0, #0x3333333333333333    	// #3689348814741910323
   513b8:	movk	x0, #0x4003, lsl #48
   513bc:	fmov	d0, x0
   513c0:	fcmpe	d10, d0
   513c4:	b.gt	51488 <__exp2f_finite@GLIBC_2.17+0x4a20>
   513c8:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   513cc:	ldr	d0, [x0, #1480]
   513d0:	fcmpe	d10, d0
   513d4:	b.gt	51454 <__exp2f_finite@GLIBC_2.17+0x49ec>
   513d8:	mov	x2, x20
   513dc:	mov	x1, x22
   513e0:	mov	x0, x19
   513e4:	mov	w3, #0x20                  	// #32
   513e8:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   513ec:	fmov	d0, d10
   513f0:	mov	x0, x19
   513f4:	mov	w1, #0x20                  	// #32
   513f8:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   513fc:	mov	x0, x22
   51400:	mov	x2, x20
   51404:	mov	x1, x19
   51408:	mov	w3, #0x20                  	// #32
   5140c:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   51410:	ldr	x0, [sp, #88]
   51414:	cmp	x0, #0x0
   51418:	b.le	514c8 <__exp2f_finite@GLIBC_2.17+0x4a60>
   5141c:	fcmpe	d9, d8
   51420:	fcsel	d0, d8, d9, ls  // ls = plast
   51424:	ldr	x21, [x21, #4032]
   51428:	ldr	x1, [sp, #1064]
   5142c:	ldr	x0, [x21]
   51430:	eor	x0, x1, x0
   51434:	cbnz	x0, 514d4 <__exp2f_finite@GLIBC_2.17+0x4a6c>
   51438:	ldp	x29, x30, [sp]
   5143c:	ldp	x19, x20, [sp, #16]
   51440:	ldp	x21, x22, [sp, #32]
   51444:	ldp	d8, d9, [sp, #48]
   51448:	ldr	d10, [sp, #64]
   5144c:	add	sp, sp, #0x430
   51450:	ret
   51454:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51458:	add	x0, x0, #0x5d8
   5145c:	mov	x2, x20
   51460:	mov	x1, x19
   51464:	add	x0, x0, #0x148
   51468:	mov	w3, #0x20                  	// #32
   5146c:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   51470:	mov	x2, x22
   51474:	mov	x1, x19
   51478:	mov	x0, x20
   5147c:	mov	w3, #0x20                  	// #32
   51480:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   51484:	b	513ec <__exp2f_finite@GLIBC_2.17+0x4984>
   51488:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   5148c:	add	x0, x0, #0x5d8
   51490:	add	x0, x0, #0x290
   51494:	mov	x2, x20
   51498:	mov	x1, x19
   5149c:	mov	w3, #0x20                  	// #32
   514a0:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   514a4:	mov	x0, x20
   514a8:	mov	x2, x19
   514ac:	mov	x1, x22
   514b0:	mov	w3, #0x20                  	// #32
   514b4:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   514b8:	ldr	x0, [sp, #416]
   514bc:	neg	x0, x0
   514c0:	str	x0, [sp, #416]
   514c4:	b	513ec <__exp2f_finite@GLIBC_2.17+0x4984>
   514c8:	fcmpe	d9, d8
   514cc:	fcsel	d0, d8, d9, ge  // ge = tcont
   514d0:	b	51424 <__exp2f_finite@GLIBC_2.17+0x49bc>
   514d4:	bl	ba70 <__stack_chk_fail@plt>
   514d8:	sub	sp, sp, #0x440
   514dc:	adrp	x2, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   514e0:	fabs	d2, d0
   514e4:	stp	x29, x30, [sp]
   514e8:	mov	x29, sp
   514ec:	ldr	d1, [x2, #1488]
   514f0:	stp	x21, x22, [sp, #32]
   514f4:	adrp	x21, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   514f8:	mov	x22, x0
   514fc:	ldr	x2, [x21, #4032]
   51500:	fcmpe	d2, d1
   51504:	stp	x19, x20, [sp, #16]
   51508:	mov	w19, w1
   5150c:	ldr	x0, [x2]
   51510:	str	x0, [sp, #1080]
   51514:	mov	x0, #0x0                   	// #0
   51518:	stp	x23, x24, [sp, #48]
   5151c:	str	x25, [sp, #64]
   51520:	stp	d8, d9, [sp, #80]
   51524:	fmov	d9, d0
   51528:	b.pl	515d8 <__exp2f_finite@GLIBC_2.17+0x4b70>  // b.nfrst
   5152c:	adrp	x0, 77000 <f64xsubf128@@GLIBC_2.28+0x23280>
   51530:	adrp	x2, 78000 <f64xsubf128@@GLIBC_2.28+0x24280>
   51534:	add	x25, sp, #0x60
   51538:	add	x24, sp, #0x1a8
   5153c:	ldr	d1, [x0, #2728]
   51540:	mov	x0, x25
   51544:	ldr	d0, [x2, #160]
   51548:	add	x23, sp, #0x2f0
   5154c:	fmadd	d1, d1, d9, d0
   51550:	fsub	d0, d1, d0
   51554:	fmov	x20, d1
   51558:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   5155c:	and	w20, w20, #0x3
   51560:	adrp	x1, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51564:	add	x1, x1, #0x5d8
   51568:	mov	x2, x24
   5156c:	mov	w3, w19
   51570:	mov	x0, x25
   51574:	add	x1, x1, #0x148
   51578:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   5157c:	fmov	d0, d9
   51580:	mov	x0, x23
   51584:	mov	w1, w19
   51588:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   5158c:	mov	w3, w19
   51590:	mov	x2, x22
   51594:	mov	x1, x24
   51598:	mov	x0, x23
   5159c:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   515a0:	ldr	x21, [x21, #4032]
   515a4:	ldr	x1, [sp, #1080]
   515a8:	ldr	x0, [x21]
   515ac:	eor	x0, x1, x0
   515b0:	cbnz	x0, 51770 <__exp2f_finite@GLIBC_2.17+0x4d08>
   515b4:	mov	w0, w20
   515b8:	ldp	x29, x30, [sp]
   515bc:	ldp	x19, x20, [sp, #16]
   515c0:	ldp	x21, x22, [sp, #32]
   515c4:	ldp	x23, x24, [sp, #48]
   515c8:	ldr	x25, [sp, #64]
   515cc:	ldp	d8, d9, [sp, #80]
   515d0:	add	sp, sp, #0x440
   515d4:	ret
   515d8:	add	x25, sp, #0x60
   515dc:	add	x24, sp, #0x1a8
   515e0:	mov	x0, x25
   515e4:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   515e8:	ldr	w1, [sp, #96]
   515ec:	mov	x0, #0x1                   	// #1
   515f0:	str	x0, [sp, #104]
   515f4:	adrp	x20, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   515f8:	subs	w1, w1, #0x5
   515fc:	str	x0, [sp, #432]
   51600:	csel	w1, w1, wzr, pl  // pl = nfrst
   51604:	cmp	w19, #0x0
   51608:	neg	w0, w1
   5160c:	str	w0, [sp, #424]
   51610:	b.le	5164c <__exp2f_finite@GLIBC_2.17+0x4be4>
   51614:	adrp	x20, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51618:	add	x2, x20, #0x5d8
   5161c:	add	x2, x2, #0x3d8
   51620:	add	x24, sp, #0x1a8
   51624:	add	x1, x2, w1, sxtw #3
   51628:	mov	x2, #0x0                   	// #0
   5162c:	nop
   51630:	ldr	d1, [x1, x2, lsl #3]
   51634:	add	x3, x24, x2, lsl #3
   51638:	add	x2, x2, #0x1
   5163c:	cmp	w19, w2
   51640:	fcvtzs	d1, d1
   51644:	str	d1, [x3, #16]
   51648:	b.gt	51630 <__exp2f_finite@GLIBC_2.17+0x4bc8>
   5164c:	add	x23, sp, #0x2f0
   51650:	mov	x0, x25
   51654:	mov	x2, x23
   51658:	mov	w3, w19
   5165c:	mov	x1, x24
   51660:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   51664:	ldr	w3, [sp, #752]
   51668:	add	x0, sp, #0x2f8
   5166c:	sub	w1, w19, w3
   51670:	sxtw	x2, w3
   51674:	cmp	w1, #0x0
   51678:	ldr	d8, [x0, x2, lsl #3]
   5167c:	scvtf	d8, d8
   51680:	b.le	516a8 <__exp2f_finite@GLIBC_2.17+0x4c40>
   51684:	sub	w0, w1, #0x1
   51688:	add	x1, x23, #0x18
   5168c:	add	x5, x23, #0x10
   51690:	add	x1, x1, w0, uxtw #3
   51694:	nop
   51698:	ldr	x0, [x5, x2, lsl #3]
   5169c:	str	x0, [x5], #8
   516a0:	cmp	x5, x1
   516a4:	b.ne	51698 <__exp2f_finite@GLIBC_2.17+0x4c30>  // b.any
   516a8:	add	w4, w19, #0x1
   516ac:	sub	w4, w4, w3
   516b0:	cmp	w19, w4
   516b4:	b.lt	516d4 <__exp2f_finite@GLIBC_2.17+0x4c6c>  // b.tstop
   516b8:	sxtw	x4, w4
   516bc:	nop
   516c0:	add	x0, x23, x4, lsl #3
   516c4:	add	x4, x4, #0x1
   516c8:	cmp	w19, w4
   516cc:	str	xzr, [x0, #8]
   516d0:	b.ge	516c0 <__exp2f_finite@GLIBC_2.17+0x4c58>  // b.tcont
   516d4:	ldr	x1, [sp, #768]
   516d8:	str	wzr, [sp, #752]
   516dc:	mov	x0, #0x7fffff              	// #8388607
   516e0:	cmp	x1, x0
   516e4:	b.gt	51714 <__exp2f_finite@GLIBC_2.17+0x4cac>
   516e8:	add	x1, x20, #0x5d8
   516ec:	mov	w3, w19
   516f0:	add	x1, x1, #0x148
   516f4:	mov	x0, x23
   516f8:	mov	x2, x22
   516fc:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   51700:	fcmpe	d9, #0.0
   51704:	fcvtzs	w20, d8
   51708:	b.mi	51758 <__exp2f_finite@GLIBC_2.17+0x4cf0>  // b.first
   5170c:	and	w20, w20, #0x3
   51710:	b	515a0 <__exp2f_finite@GLIBC_2.17+0x4b38>
   51714:	fmov	d0, #1.000000000000000000e+00
   51718:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   5171c:	mov	x0, x23
   51720:	mov	w3, w19
   51724:	fadd	d8, d8, d0
   51728:	mov	x2, x24
   5172c:	ldr	x1, [x1, #4064]
   51730:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   51734:	add	x1, x20, #0x5d8
   51738:	mov	w3, w19
   5173c:	add	x1, x1, #0x148
   51740:	mov	x0, x24
   51744:	mov	x2, x22
   51748:	bl	4f688 <__exp2f_finite@GLIBC_2.17+0x2c20>
   5174c:	fcmpe	d9, #0.0
   51750:	fcvtzs	w20, d8
   51754:	b.pl	5170c <__exp2f_finite@GLIBC_2.17+0x4ca4>  // b.nfrst
   51758:	ldr	x0, [x22, #8]
   5175c:	neg	w20, w20
   51760:	and	w20, w20, #0x3
   51764:	neg	x0, x0
   51768:	str	x0, [x22, #8]
   5176c:	b	515a0 <__exp2f_finite@GLIBC_2.17+0x4b38>
   51770:	bl	ba70 <__stack_chk_fail@plt>
   51774:	nop
   51778:	sub	sp, sp, #0x580
   5177c:	tst	w0, #0xff
   51780:	stp	x29, x30, [sp]
   51784:	mov	x29, sp
   51788:	stp	x19, x20, [sp, #16]
   5178c:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51790:	ldr	x0, [x19, #4032]
   51794:	stp	x21, x22, [sp, #32]
   51798:	ldr	x1, [x0]
   5179c:	str	x1, [sp, #1400]
   517a0:	mov	x1, #0x0                   	// #0
   517a4:	str	x23, [sp, #48]
   517a8:	b.eq	51834 <__exp2f_finite@GLIBC_2.17+0x4dcc>  // b.none
   517ac:	add	x22, sp, #0x58
   517b0:	mov	w1, #0x20                  	// #32
   517b4:	mov	x0, x22
   517b8:	add	x21, sp, #0x430
   517bc:	bl	514d8 <__exp2f_finite@GLIBC_2.17+0x4a70>
   517c0:	add	x23, sp, #0x2e8
   517c4:	mov	w20, w0
   517c8:	mov	x2, x21
   517cc:	mov	x0, x22
   517d0:	mov	x1, x23
   517d4:	mov	w3, #0x20                  	// #32
   517d8:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   517dc:	cmp	w20, #0x2
   517e0:	b.eq	5191c <__exp2f_finite@GLIBC_2.17+0x4eb4>  // b.none
   517e4:	cmp	w20, #0x3
   517e8:	b.eq	51900 <__exp2f_finite@GLIBC_2.17+0x4e98>  // b.none
   517ec:	cmp	w20, #0x1
   517f0:	b.eq	518e8 <__exp2f_finite@GLIBC_2.17+0x4e80>  // b.none
   517f4:	mov	x0, x21
   517f8:	add	x1, sp, #0x50
   517fc:	mov	w2, #0x20                  	// #32
   51800:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   51804:	ldr	d0, [sp, #80]
   51808:	ldr	x19, [x19, #4032]
   5180c:	ldr	x1, [sp, #1400]
   51810:	ldr	x0, [x19]
   51814:	eor	x0, x1, x0
   51818:	cbnz	x0, 51924 <__exp2f_finite@GLIBC_2.17+0x4ebc>
   5181c:	ldp	x29, x30, [sp]
   51820:	ldp	x19, x20, [sp, #16]
   51824:	ldp	x21, x22, [sp, #32]
   51828:	ldr	x23, [sp, #48]
   5182c:	add	sp, sp, #0x580
   51830:	ret
   51834:	stp	d8, d9, [sp, #64]
   51838:	fmov	d8, d0
   5183c:	fmov	d9, d1
   51840:	add	x22, sp, #0x1a0
   51844:	mov	w1, #0x20                  	// #32
   51848:	mov	x0, x22
   5184c:	add	x20, sp, #0x2e8
   51850:	add	x23, sp, #0x58
   51854:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   51858:	fmov	d0, d9
   5185c:	mov	x0, x20
   51860:	mov	w1, #0x20                  	// #32
   51864:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   51868:	mov	x0, x22
   5186c:	mov	x1, x20
   51870:	mov	x2, x23
   51874:	mov	w3, #0x20                  	// #32
   51878:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   5187c:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51880:	ldr	d0, [x0, #1480]
   51884:	fcmpe	d8, d0
   51888:	b.le	518c8 <__exp2f_finite@GLIBC_2.17+0x4e60>
   5188c:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51890:	add	x0, x0, #0x5d8
   51894:	mov	x1, x23
   51898:	add	x0, x0, #0x148
   5189c:	mov	x2, x22
   518a0:	mov	w3, #0x20                  	// #32
   518a4:	add	x21, sp, #0x430
   518a8:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   518ac:	mov	x2, x20
   518b0:	mov	x0, x22
   518b4:	mov	x1, x21
   518b8:	mov	w3, #0x20                  	// #32
   518bc:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   518c0:	ldp	d8, d9, [sp, #64]
   518c4:	b	517f4 <__exp2f_finite@GLIBC_2.17+0x4d8c>
   518c8:	add	x21, sp, #0x430
   518cc:	mov	x1, x20
   518d0:	mov	x0, x23
   518d4:	mov	x2, x21
   518d8:	mov	w3, #0x20                  	// #32
   518dc:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   518e0:	ldp	d8, d9, [sp, #64]
   518e4:	b	517f4 <__exp2f_finite@GLIBC_2.17+0x4d8c>
   518e8:	mov	x0, x23
   518ec:	add	x1, sp, #0x50
   518f0:	mov	w2, #0x20                  	// #32
   518f4:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   518f8:	ldr	d0, [sp, #80]
   518fc:	b	51808 <__exp2f_finite@GLIBC_2.17+0x4da0>
   51900:	mov	x0, x23
   51904:	add	x1, sp, #0x50
   51908:	mov	w2, #0x20                  	// #32
   5190c:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   51910:	ldr	d0, [sp, #80]
   51914:	fneg	d0, d0
   51918:	b	51808 <__exp2f_finite@GLIBC_2.17+0x4da0>
   5191c:	mov	x0, x21
   51920:	b	51904 <__exp2f_finite@GLIBC_2.17+0x4e9c>
   51924:	stp	d8, d9, [sp, #64]
   51928:	bl	ba70 <__stack_chk_fail@plt>
   5192c:	nop
   51930:	sub	sp, sp, #0x580
   51934:	tst	w0, #0xff
   51938:	stp	x29, x30, [sp]
   5193c:	mov	x29, sp
   51940:	stp	x19, x20, [sp, #16]
   51944:	adrp	x19, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51948:	ldr	x0, [x19, #4032]
   5194c:	stp	x21, x22, [sp, #32]
   51950:	ldr	x1, [x0]
   51954:	str	x1, [sp, #1400]
   51958:	mov	x1, #0x0                   	// #0
   5195c:	b.eq	519ec <__exp2f_finite@GLIBC_2.17+0x4f84>  // b.none
   51960:	add	x22, sp, #0x58
   51964:	mov	w1, #0x20                  	// #32
   51968:	mov	x0, x22
   5196c:	add	x20, sp, #0x2e8
   51970:	str	x23, [sp, #48]
   51974:	bl	514d8 <__exp2f_finite@GLIBC_2.17+0x4a70>
   51978:	add	x23, sp, #0x430
   5197c:	mov	w21, w0
   51980:	mov	x2, x23
   51984:	mov	x0, x22
   51988:	mov	x1, x20
   5198c:	mov	w3, #0x20                  	// #32
   51990:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   51994:	cmp	w21, #0x2
   51998:	b.eq	51ad4 <__exp2f_finite@GLIBC_2.17+0x506c>  // b.none
   5199c:	cmp	w21, #0x3
   519a0:	b.eq	51ab8 <__exp2f_finite@GLIBC_2.17+0x5050>  // b.none
   519a4:	cmp	w21, #0x1
   519a8:	b.eq	51a98 <__exp2f_finite@GLIBC_2.17+0x5030>  // b.none
   519ac:	ldr	x23, [sp, #48]
   519b0:	mov	x0, x20
   519b4:	add	x1, sp, #0x50
   519b8:	mov	w2, #0x20                  	// #32
   519bc:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   519c0:	ldr	d0, [sp, #80]
   519c4:	ldr	x19, [x19, #4032]
   519c8:	ldr	x1, [sp, #1400]
   519cc:	ldr	x0, [x19]
   519d0:	eor	x0, x1, x0
   519d4:	cbnz	x0, 51adc <__exp2f_finite@GLIBC_2.17+0x5074>
   519d8:	ldp	x29, x30, [sp]
   519dc:	ldp	x19, x20, [sp, #16]
   519e0:	ldp	x21, x22, [sp, #32]
   519e4:	add	sp, sp, #0x580
   519e8:	ret
   519ec:	stp	d8, d9, [sp, #64]
   519f0:	fmov	d8, d0
   519f4:	fmov	d9, d1
   519f8:	add	x21, sp, #0x1a0
   519fc:	mov	w1, #0x20                  	// #32
   51a00:	mov	x0, x21
   51a04:	add	x20, sp, #0x2e8
   51a08:	add	x22, sp, #0x58
   51a0c:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   51a10:	fmov	d0, d9
   51a14:	mov	x0, x20
   51a18:	mov	w1, #0x20                  	// #32
   51a1c:	bl	4f2e8 <__exp2f_finite@GLIBC_2.17+0x2880>
   51a20:	mov	x0, x21
   51a24:	mov	x1, x20
   51a28:	mov	x2, x22
   51a2c:	mov	w3, #0x20                  	// #32
   51a30:	bl	4f408 <__exp2f_finite@GLIBC_2.17+0x29a0>
   51a34:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51a38:	ldr	d0, [x0, #1480]
   51a3c:	fcmpe	d8, d0
   51a40:	b.le	51a7c <__exp2f_finite@GLIBC_2.17+0x5014>
   51a44:	adrp	x0, 88000 <f64xsubf128@@GLIBC_2.28+0x34280>
   51a48:	add	x0, x0, #0x5d8
   51a4c:	mov	x1, x22
   51a50:	add	x0, x0, #0x148
   51a54:	mov	x2, x21
   51a58:	mov	w3, #0x20                  	// #32
   51a5c:	bl	4f538 <__exp2f_finite@GLIBC_2.17+0x2ad0>
   51a60:	mov	x0, x21
   51a64:	mov	x2, x20
   51a68:	add	x1, sp, #0x430
   51a6c:	mov	w3, #0x20                  	// #32
   51a70:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   51a74:	ldp	d8, d9, [sp, #64]
   51a78:	b	519b0 <__exp2f_finite@GLIBC_2.17+0x4f48>
   51a7c:	mov	x0, x22
   51a80:	add	x2, sp, #0x430
   51a84:	mov	x1, x20
   51a88:	mov	w3, #0x20                  	// #32
   51a8c:	bl	50e58 <__exp2f_finite@GLIBC_2.17+0x43f0>
   51a90:	ldp	d8, d9, [sp, #64]
   51a94:	b	519b0 <__exp2f_finite@GLIBC_2.17+0x4f48>
   51a98:	mov	x0, x23
   51a9c:	add	x1, sp, #0x50
   51aa0:	mov	w2, #0x20                  	// #32
   51aa4:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   51aa8:	ldr	d0, [sp, #80]
   51aac:	ldr	x23, [sp, #48]
   51ab0:	fneg	d0, d0
   51ab4:	b	519c4 <__exp2f_finite@GLIBC_2.17+0x4f5c>
   51ab8:	mov	x0, x23
   51abc:	add	x1, sp, #0x50
   51ac0:	mov	w2, #0x20                  	// #32
   51ac4:	bl	4ef28 <__exp2f_finite@GLIBC_2.17+0x24c0>
   51ac8:	ldr	x23, [sp, #48]
   51acc:	ldr	d0, [sp, #80]
   51ad0:	b	519c4 <__exp2f_finite@GLIBC_2.17+0x4f5c>
   51ad4:	mov	x0, x20
   51ad8:	b	51a9c <__exp2f_finite@GLIBC_2.17+0x5034>
   51adc:	str	x23, [sp, #48]
   51ae0:	stp	d8, d9, [sp, #64]
   51ae4:	bl	ba70 <__stack_chk_fail@plt>
   51ae8:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51aec:	ldr	x1, [x1, #3976]
   51af0:	mrs	x2, tpidr_el0
   51af4:	str	w0, [x2, x1]
   51af8:	ret
   51afc:	nop
   51b00:	fneg	d1, d0
   51b04:	cmp	w0, #0x0
   51b08:	mov	w0, #0x22                  	// #34
   51b0c:	fcsel	d1, d1, d0, ne  // ne = any
   51b10:	fmul	d0, d0, d1
   51b14:	b	51ae8 <__exp2f_finite@GLIBC_2.17+0x5080>
   51b18:	mov	x1, #0x1000000000000000    	// #1152921504606846976
   51b1c:	fmov	d0, x1
   51b20:	b	51b00 <__exp2f_finite@GLIBC_2.17+0x5098>
   51b24:	nop
   51b28:	mov	x1, #0x1e58000000000000    	// #2186497619088375808
   51b2c:	fmov	d0, x1
   51b30:	b	51b00 <__exp2f_finite@GLIBC_2.17+0x5098>
   51b34:	nop
   51b38:	mov	x1, #0x7000000000000000    	// #8070450532247928832
   51b3c:	fmov	d0, x1
   51b40:	b	51b00 <__exp2f_finite@GLIBC_2.17+0x5098>
   51b44:	nop
   51b48:	movi	d2, #0x0
   51b4c:	cmp	w0, #0x0
   51b50:	fmov	d1, #-1.000000000000000000e+00
   51b54:	fmov	d0, #1.000000000000000000e+00
   51b58:	mov	w0, #0x22                  	// #34
   51b5c:	fcsel	d0, d1, d0, ne  // ne = any
   51b60:	fdiv	d0, d0, d2
   51b64:	b	51ae8 <__exp2f_finite@GLIBC_2.17+0x5080>
   51b68:	fcmp	d0, d0
   51b6c:	fsub	d0, d0, d0
   51b70:	fdiv	d0, d0, d0
   51b74:	b.vs	51b80 <__exp2f_finite@GLIBC_2.17+0x5118>
   51b78:	mov	w0, #0x21                  	// #33
   51b7c:	b	51ae8 <__exp2f_finite@GLIBC_2.17+0x5080>
   51b80:	ret
   51b84:	nop
   51b88:	fcmp	d0, #0.0
   51b8c:	b.eq	51b94 <__exp2f_finite@GLIBC_2.17+0x512c>  // b.none
   51b90:	ret
   51b94:	mov	w0, #0x22                  	// #34
   51b98:	b	51ae8 <__exp2f_finite@GLIBC_2.17+0x5080>
   51b9c:	nop
   51ba0:	fabs	d2, d0
   51ba4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   51ba8:	fmov	d1, x0
   51bac:	fcmp	d2, d1
   51bb0:	b.gt	51bb8 <__exp2f_finite@GLIBC_2.17+0x5150>
   51bb4:	ret
   51bb8:	mov	w0, #0x22                  	// #34
   51bbc:	b	51ae8 <__exp2f_finite@GLIBC_2.17+0x5080>
   51bc0:	adrp	x1, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51bc4:	ldr	x1, [x1, #3976]
   51bc8:	mrs	x2, tpidr_el0
   51bcc:	str	w0, [x2, x1]
   51bd0:	ret
   51bd4:	nop
   51bd8:	fneg	s1, s0
   51bdc:	cmp	w0, #0x0
   51be0:	mov	w0, #0x22                  	// #34
   51be4:	fcsel	s1, s1, s0, ne  // ne = any
   51be8:	fmul	s0, s1, s0
   51bec:	b	51bc0 <__exp2f_finite@GLIBC_2.17+0x5158>
   51bf0:	movi	v0.2s, #0x10, lsl #24
   51bf4:	b	51bd8 <__exp2f_finite@GLIBC_2.17+0x5170>
   51bf8:	mov	w1, #0x1a200000            	// #438304768
   51bfc:	fmov	s0, w1
   51c00:	b	51bd8 <__exp2f_finite@GLIBC_2.17+0x5170>
   51c04:	nop
   51c08:	movi	v0.2s, #0x70, lsl #24
   51c0c:	b	51bd8 <__exp2f_finite@GLIBC_2.17+0x5170>
   51c10:	cmp	w0, #0x0
   51c14:	fmov	s1, #-1.000000000000000000e+00
   51c18:	fmov	s0, #1.000000000000000000e+00
   51c1c:	movi	v2.2s, #0x0
   51c20:	mov	w0, #0x22                  	// #34
   51c24:	fcsel	s0, s1, s0, ne  // ne = any
   51c28:	fdiv	s0, s0, s2
   51c2c:	b	51bc0 <__exp2f_finite@GLIBC_2.17+0x5158>
   51c30:	fcmp	s0, s0
   51c34:	fsub	s0, s0, s0
   51c38:	fdiv	s0, s0, s0
   51c3c:	b.vs	51c48 <__exp2f_finite@GLIBC_2.17+0x51e0>
   51c40:	mov	w0, #0x21                  	// #33
   51c44:	b	51bc0 <__exp2f_finite@GLIBC_2.17+0x5158>
   51c48:	ret
   51c4c:	nop

0000000000051c50 <f32addf32x@@GLIBC_2.28>:
   51c50:	stp	x29, x30, [sp, #-64]!
   51c54:	mov	x29, sp
   51c58:	stp	d8, d9, [sp, #32]
   51c5c:	fmov	d8, d0
   51c60:	fneg	d0, d1
   51c64:	fcmp	d0, d8
   51c68:	b.ne	51c94 <f32addf32x@@GLIBC_2.28+0x44>  // b.any
   51c6c:	fadd	d2, d1, d8
   51c70:	mov	w0, #0x7f7fffff            	// #2139095039
   51c74:	fmov	s3, w0
   51c78:	fcvt	s0, d2
   51c7c:	fabs	s2, s0
   51c80:	fcmp	s2, s3
   51c84:	b.hi	51d30 <f32addf32x@@GLIBC_2.28+0xe0>  // b.pmore
   51c88:	ldp	d8, d9, [sp, #32]
   51c8c:	ldp	x29, x30, [sp], #64
   51c90:	ret
   51c94:	stp	x19, x20, [sp, #16]
   51c98:	mrs	x2, fpcr
   51c9c:	mrs	x1, fpsr
   51ca0:	mov	w0, #0xe0ff                	// #57599
   51ca4:	and	w3, w1, #0xffffffe0
   51ca8:	movk	w0, #0xff3f, lsl #16
   51cac:	and	w0, w2, w0
   51cb0:	orr	w0, w0, #0xc00000
   51cb4:	cmp	w2, w0
   51cb8:	b.ne	51db4 <f32addf32x@@GLIBC_2.28+0x164>  // b.any
   51cbc:	cmp	w1, w3
   51cc0:	b.eq	51cc8 <f32addf32x@@GLIBC_2.28+0x78>  // b.none
   51cc4:	msr	fpsr, x3
   51cc8:	fmov	d9, d8
   51ccc:	fadd	d9, d1, d9
   51cd0:	fmov	x19, d9
   51cd4:	mrs	x3, fpcr
   51cd8:	mrs	x20, fpsr
   51cdc:	and	w0, w20, #0x1f
   51ce0:	cmp	w3, w2
   51ce4:	orr	w1, w0, w1
   51ce8:	b.ne	51dbc <f32addf32x@@GLIBC_2.28+0x16c>  // b.any
   51cec:	cmp	w20, w1
   51cf0:	b.eq	51cf8 <f32addf32x@@GLIBC_2.28+0xa8>  // b.none
   51cf4:	msr	fpsr, x1
   51cf8:	tst	w0, w2, lsr #8
   51cfc:	b.ne	51de4 <f32addf32x@@GLIBC_2.28+0x194>  // b.any
   51d00:	fmov	x0, d9
   51d04:	ubfx	x20, x20, #4, #1
   51d08:	mov	w1, #0x7f7fffff            	// #2139095039
   51d0c:	fmov	s3, w1
   51d10:	orr	w0, w20, w0
   51d14:	bfxil	x19, x0, #0, #32
   51d18:	fmov	d2, x19
   51d1c:	fcvt	s0, d2
   51d20:	fabs	s2, s0
   51d24:	fcmp	s2, s3
   51d28:	b.ls	51d78 <f32addf32x@@GLIBC_2.28+0x128>  // b.plast
   51d2c:	ldp	x19, x20, [sp, #16]
   51d30:	fcmp	s0, s0
   51d34:	b.vs	51dc4 <f32addf32x@@GLIBC_2.28+0x174>
   51d38:	fabs	d8, d8
   51d3c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   51d40:	fmov	d2, x0
   51d44:	fcmp	d8, d2
   51d48:	b.hi	51c88 <f32addf32x@@GLIBC_2.28+0x38>  // b.pmore
   51d4c:	fabs	d1, d1
   51d50:	fcmp	d1, d2
   51d54:	b.hi	51c88 <f32addf32x@@GLIBC_2.28+0x38>  // b.pmore
   51d58:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51d5c:	ldr	x0, [x0, #3976]
   51d60:	mrs	x1, tpidr_el0
   51d64:	mov	w2, #0x22                  	// #34
   51d68:	ldp	d8, d9, [sp, #32]
   51d6c:	str	w2, [x1, x0]
   51d70:	ldp	x29, x30, [sp], #64
   51d74:	ret
   51d78:	fcmp	s0, #0.0
   51d7c:	b.ne	51da4 <f32addf32x@@GLIBC_2.28+0x154>  // b.any
   51d80:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51d84:	ldr	x0, [x0, #3976]
   51d88:	mrs	x1, tpidr_el0
   51d8c:	mov	w2, #0x22                  	// #34
   51d90:	ldp	x19, x20, [sp, #16]
   51d94:	str	w2, [x1, x0]
   51d98:	ldp	d8, d9, [sp, #32]
   51d9c:	ldp	x29, x30, [sp], #64
   51da0:	ret
   51da4:	ldp	x19, x20, [sp, #16]
   51da8:	ldp	d8, d9, [sp, #32]
   51dac:	ldp	x29, x30, [sp], #64
   51db0:	ret
   51db4:	msr	fpcr, x0
   51db8:	b	51cbc <f32addf32x@@GLIBC_2.28+0x6c>
   51dbc:	msr	fpcr, x2
   51dc0:	b	51cec <f32addf32x@@GLIBC_2.28+0x9c>
   51dc4:	fcmp	d1, d8
   51dc8:	b.vs	51c88 <f32addf32x@@GLIBC_2.28+0x38>
   51dcc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51dd0:	ldr	x0, [x0, #3976]
   51dd4:	mrs	x1, tpidr_el0
   51dd8:	mov	w2, #0x21                  	// #33
   51ddc:	str	w2, [x1, x0]
   51de0:	b	51c88 <f32addf32x@@GLIBC_2.28+0x38>
   51de4:	str	d1, [sp, #56]
   51de8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   51dec:	ldr	d1, [sp, #56]
   51df0:	b	51d00 <f32addf32x@@GLIBC_2.28+0xb0>
   51df4:	nop

0000000000051df8 <f32xaddf64@@GLIBC_2.28>:
   51df8:	fmov	d2, d0
   51dfc:	fadd	d0, d0, d1
   51e00:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   51e04:	fmov	d3, x0
   51e08:	fabs	d4, d0
   51e0c:	fcmp	d4, d3
   51e10:	b.ls	51e4c <f32xaddf64@@GLIBC_2.28+0x54>  // b.plast
   51e14:	fcmp	d0, d0
   51e18:	b.vs	51e78 <f32xaddf64@@GLIBC_2.28+0x80>
   51e1c:	fabs	d2, d2
   51e20:	fcmp	d2, d3
   51e24:	b.hi	51e48 <f32xaddf64@@GLIBC_2.28+0x50>  // b.pmore
   51e28:	fabs	d1, d1
   51e2c:	fcmp	d1, d3
   51e30:	b.hi	51e48 <f32xaddf64@@GLIBC_2.28+0x50>  // b.pmore
   51e34:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51e38:	ldr	x0, [x0, #3976]
   51e3c:	mrs	x1, tpidr_el0
   51e40:	mov	w2, #0x22                  	// #34
   51e44:	str	w2, [x1, x0]
   51e48:	ret
   51e4c:	fcmp	d0, #0.0
   51e50:	b.ne	51e48 <f32xaddf64@@GLIBC_2.28+0x50>  // b.any
   51e54:	fneg	d1, d1
   51e58:	fcmp	d1, d2
   51e5c:	b.eq	51e48 <f32xaddf64@@GLIBC_2.28+0x50>  // b.none
   51e60:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51e64:	ldr	x0, [x0, #3976]
   51e68:	mrs	x1, tpidr_el0
   51e6c:	mov	w2, #0x22                  	// #34
   51e70:	str	w2, [x1, x0]
   51e74:	b	51e48 <f32xaddf64@@GLIBC_2.28+0x50>
   51e78:	fcmp	d2, d1
   51e7c:	b.vs	51e48 <f32xaddf64@@GLIBC_2.28+0x50>
   51e80:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   51e84:	ldr	x0, [x0, #3976]
   51e88:	mrs	x1, tpidr_el0
   51e8c:	mov	w2, #0x21                  	// #33
   51e90:	str	w2, [x1, x0]
   51e94:	ret

0000000000051e98 <f32addf128@@GLIBC_2.28>:
   51e98:	stp	x29, x30, [sp, #-112]!
   51e9c:	mov	x29, sp
   51ea0:	stp	x19, x20, [sp, #16]
   51ea4:	str	q1, [sp, #80]
   51ea8:	ldp	x19, x20, [sp, #80]
   51eac:	str	q0, [sp, #96]
   51eb0:	ldr	q1, [sp, #96]
   51eb4:	str	d8, [sp, #72]
   51eb8:	eor	x0, x20, #0x8000000000000000
   51ebc:	str	x0, [sp, #88]
   51ec0:	ldr	q0, [sp, #80]
   51ec4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   51ec8:	cbnz	w0, 51f0c <f32addf128@@GLIBC_2.28+0x74>
   51ecc:	stp	x19, x20, [sp, #80]
   51ed0:	ldr	q1, [sp, #96]
   51ed4:	ldr	q0, [sp, #80]
   51ed8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   51edc:	bl	57ca8 <f64xsubf128@@GLIBC_2.28+0x3f28>
   51ee0:	fmov	s8, s0
   51ee4:	fabs	s0, s0
   51ee8:	mov	w0, #0x7f7fffff            	// #2139095039
   51eec:	fmov	s1, w0
   51ef0:	fcmp	s0, s1
   51ef4:	b.hi	51fcc <f32addf128@@GLIBC_2.28+0x134>  // b.pmore
   51ef8:	fmov	s0, s8
   51efc:	ldr	d8, [sp, #72]
   51f00:	ldp	x19, x20, [sp, #16]
   51f04:	ldp	x29, x30, [sp], #112
   51f08:	ret
   51f0c:	stp	x21, x22, [sp, #32]
   51f10:	stp	x23, x24, [sp, #48]
   51f14:	str	x25, [sp, #64]
   51f18:	mrs	x23, fpcr
   51f1c:	mrs	x22, fpsr
   51f20:	mov	w0, #0xe0ff                	// #57599
   51f24:	and	w1, w22, #0xffffffe0
   51f28:	movk	w0, #0xff3f, lsl #16
   51f2c:	and	w0, w23, w0
   51f30:	orr	w0, w0, #0xc00000
   51f34:	cmp	w23, w0
   51f38:	b.ne	520fc <f32addf128@@GLIBC_2.28+0x264>  // b.any
   51f3c:	cmp	w22, w1
   51f40:	b.eq	51f48 <f32addf128@@GLIBC_2.28+0xb0>  // b.none
   51f44:	msr	fpsr, x1
   51f48:	stp	x19, x20, [sp, #80]
   51f4c:	ldr	q1, [sp, #96]
   51f50:	ldr	q0, [sp, #80]
   51f54:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   51f58:	fmov	x24, d0
   51f5c:	fmov	x25, v0.d[1]
   51f60:	mrs	x1, fpcr
   51f64:	mrs	x21, fpsr
   51f68:	and	w0, w21, #0x1f
   51f6c:	cmp	w1, w23
   51f70:	orr	w22, w0, w22
   51f74:	b.ne	52104 <f32addf128@@GLIBC_2.28+0x26c>  // b.any
   51f78:	cmp	w21, w22
   51f7c:	b.eq	51f84 <f32addf128@@GLIBC_2.28+0xec>  // b.none
   51f80:	msr	fpsr, x22
   51f84:	tst	w0, w23, lsr #8
   51f88:	b.ne	52138 <f32addf128@@GLIBC_2.28+0x2a0>  // b.any
   51f8c:	fmov	x0, d0
   51f90:	ubfx	x21, x21, #4, #1
   51f94:	orr	w21, w21, w0
   51f98:	bfxil	x24, x21, #0, #32
   51f9c:	fmov	d0, x24
   51fa0:	fmov	v0.d[1], x25
   51fa4:	bl	57ca8 <f64xsubf128@@GLIBC_2.28+0x3f28>
   51fa8:	fmov	s8, s0
   51fac:	fabs	s0, s0
   51fb0:	mov	w0, #0x7f7fffff            	// #2139095039
   51fb4:	fmov	s1, w0
   51fb8:	fcmp	s0, s1
   51fbc:	b.ls	520a0 <f32addf128@@GLIBC_2.28+0x208>  // b.plast
   51fc0:	ldp	x21, x22, [sp, #32]
   51fc4:	ldp	x23, x24, [sp, #48]
   51fc8:	ldr	x25, [sp, #64]
   51fcc:	fcmp	s8, s8
   51fd0:	b.vs	5210c <f32addf128@@GLIBC_2.28+0x274>
   51fd4:	stp	x21, x22, [sp, #32]
   51fd8:	ldp	x22, x0, [sp, #96]
   51fdc:	and	x21, x0, #0x7fffffffffffffff
   51fe0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   51fe4:	add	x0, x0, #0x300
   51fe8:	stp	x22, x21, [sp, #80]
   51fec:	ldr	q0, [sp, #80]
   51ff0:	ldr	q1, [x0]
   51ff4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   51ff8:	cbnz	w0, 52088 <f32addf128@@GLIBC_2.28+0x1f0>
   51ffc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52000:	add	x0, x0, #0x300
   52004:	stp	x22, x21, [sp, #80]
   52008:	ldr	q1, [x0]
   5200c:	ldr	q0, [sp, #80]
   52010:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   52014:	cmp	w0, #0x0
   52018:	b.gt	52088 <f32addf128@@GLIBC_2.28+0x1f0>
   5201c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52020:	add	x0, x0, #0x300
   52024:	and	x20, x20, #0x7fffffffffffffff
   52028:	stp	x19, x20, [sp, #80]
   5202c:	ldr	q1, [x0]
   52030:	ldr	q0, [sp, #80]
   52034:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52038:	cbnz	w0, 52088 <f32addf128@@GLIBC_2.28+0x1f0>
   5203c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52040:	add	x0, x0, #0x300
   52044:	stp	x19, x20, [sp, #80]
   52048:	ldr	q1, [x0]
   5204c:	ldr	q0, [sp, #80]
   52050:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   52054:	cmp	w0, #0x0
   52058:	b.gt	52088 <f32addf128@@GLIBC_2.28+0x1f0>
   5205c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52060:	ldr	x0, [x0, #3976]
   52064:	mrs	x1, tpidr_el0
   52068:	mov	w2, #0x22                  	// #34
   5206c:	fmov	s0, s8
   52070:	ldp	x19, x20, [sp, #16]
   52074:	str	w2, [x1, x0]
   52078:	ldp	x21, x22, [sp, #32]
   5207c:	ldr	d8, [sp, #72]
   52080:	ldp	x29, x30, [sp], #112
   52084:	ret
   52088:	fmov	s0, s8
   5208c:	ldr	d8, [sp, #72]
   52090:	ldp	x19, x20, [sp, #16]
   52094:	ldp	x21, x22, [sp, #32]
   52098:	ldp	x29, x30, [sp], #112
   5209c:	ret
   520a0:	fcmp	s8, #0.0
   520a4:	b.ne	520dc <f32addf128@@GLIBC_2.28+0x244>  // b.any
   520a8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   520ac:	ldr	x0, [x0, #3976]
   520b0:	mrs	x1, tpidr_el0
   520b4:	mov	w2, #0x22                  	// #34
   520b8:	fmov	s0, s8
   520bc:	ldp	x19, x20, [sp, #16]
   520c0:	str	w2, [x1, x0]
   520c4:	ldp	x21, x22, [sp, #32]
   520c8:	ldp	x23, x24, [sp, #48]
   520cc:	ldr	x25, [sp, #64]
   520d0:	ldr	d8, [sp, #72]
   520d4:	ldp	x29, x30, [sp], #112
   520d8:	ret
   520dc:	fmov	s0, s8
   520e0:	ldr	d8, [sp, #72]
   520e4:	ldp	x19, x20, [sp, #16]
   520e8:	ldp	x21, x22, [sp, #32]
   520ec:	ldp	x23, x24, [sp, #48]
   520f0:	ldr	x25, [sp, #64]
   520f4:	ldp	x29, x30, [sp], #112
   520f8:	ret
   520fc:	msr	fpcr, x0
   52100:	b	51f3c <f32addf128@@GLIBC_2.28+0xa4>
   52104:	msr	fpcr, x23
   52108:	b	51f78 <f32addf128@@GLIBC_2.28+0xe0>
   5210c:	stp	x19, x20, [sp, #80]
   52110:	ldr	q1, [sp, #96]
   52114:	ldr	q0, [sp, #80]
   52118:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5211c:	cbnz	w0, 51ef8 <f32addf128@@GLIBC_2.28+0x60>
   52120:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52124:	ldr	x0, [x0, #3976]
   52128:	mrs	x1, tpidr_el0
   5212c:	mov	w2, #0x21                  	// #33
   52130:	str	w2, [x1, x0]
   52134:	b	51ef8 <f32addf128@@GLIBC_2.28+0x60>
   52138:	str	q0, [sp, #80]
   5213c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   52140:	ldr	q0, [sp, #80]
   52144:	b	51f8c <f32addf128@@GLIBC_2.28+0xf4>

0000000000052148 <daddl@@GLIBC_2.28>:
   52148:	stp	x29, x30, [sp, #-112]!
   5214c:	mov	x29, sp
   52150:	stp	x19, x20, [sp, #16]
   52154:	str	q1, [sp, #80]
   52158:	ldp	x19, x20, [sp, #80]
   5215c:	str	q0, [sp, #96]
   52160:	ldr	q1, [sp, #96]
   52164:	str	d8, [sp, #72]
   52168:	eor	x0, x20, #0x8000000000000000
   5216c:	str	x0, [sp, #88]
   52170:	ldr	q0, [sp, #80]
   52174:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   52178:	cbnz	w0, 521bc <daddl@@GLIBC_2.28+0x74>
   5217c:	stp	x19, x20, [sp, #80]
   52180:	ldr	q1, [sp, #96]
   52184:	ldr	q0, [sp, #80]
   52188:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   5218c:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
   52190:	fmov	d8, d0
   52194:	fabs	d0, d0
   52198:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   5219c:	fmov	d1, x0
   521a0:	fcmp	d0, d1
   521a4:	b.hi	5227c <daddl@@GLIBC_2.28+0x134>  // b.pmore
   521a8:	fmov	d0, d8
   521ac:	ldr	d8, [sp, #72]
   521b0:	ldp	x19, x20, [sp, #16]
   521b4:	ldp	x29, x30, [sp], #112
   521b8:	ret
   521bc:	stp	x21, x22, [sp, #32]
   521c0:	stp	x23, x24, [sp, #48]
   521c4:	str	x25, [sp, #64]
   521c8:	mrs	x23, fpcr
   521cc:	mrs	x22, fpsr
   521d0:	mov	w0, #0xe0ff                	// #57599
   521d4:	and	w1, w22, #0xffffffe0
   521d8:	movk	w0, #0xff3f, lsl #16
   521dc:	and	w0, w23, w0
   521e0:	orr	w0, w0, #0xc00000
   521e4:	cmp	w23, w0
   521e8:	b.ne	523ac <daddl@@GLIBC_2.28+0x264>  // b.any
   521ec:	cmp	w22, w1
   521f0:	b.eq	521f8 <daddl@@GLIBC_2.28+0xb0>  // b.none
   521f4:	msr	fpsr, x1
   521f8:	stp	x19, x20, [sp, #80]
   521fc:	ldr	q1, [sp, #96]
   52200:	ldr	q0, [sp, #80]
   52204:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   52208:	fmov	x24, d0
   5220c:	fmov	x25, v0.d[1]
   52210:	mrs	x1, fpcr
   52214:	mrs	x21, fpsr
   52218:	and	w0, w21, #0x1f
   5221c:	cmp	w1, w23
   52220:	orr	w22, w0, w22
   52224:	b.ne	523b4 <daddl@@GLIBC_2.28+0x26c>  // b.any
   52228:	cmp	w21, w22
   5222c:	b.eq	52234 <daddl@@GLIBC_2.28+0xec>  // b.none
   52230:	msr	fpsr, x22
   52234:	tst	w0, w23, lsr #8
   52238:	b.ne	523e8 <daddl@@GLIBC_2.28+0x2a0>  // b.any
   5223c:	fmov	x0, d0
   52240:	ubfx	x21, x21, #4, #1
   52244:	orr	w21, w21, w0
   52248:	bfxil	x24, x21, #0, #32
   5224c:	fmov	d0, x24
   52250:	fmov	v0.d[1], x25
   52254:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
   52258:	fmov	d8, d0
   5225c:	fabs	d0, d0
   52260:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   52264:	fmov	d1, x0
   52268:	fcmp	d0, d1
   5226c:	b.ls	52350 <daddl@@GLIBC_2.28+0x208>  // b.plast
   52270:	ldp	x21, x22, [sp, #32]
   52274:	ldp	x23, x24, [sp, #48]
   52278:	ldr	x25, [sp, #64]
   5227c:	fcmp	d8, d8
   52280:	b.vs	523bc <daddl@@GLIBC_2.28+0x274>
   52284:	stp	x21, x22, [sp, #32]
   52288:	ldp	x22, x0, [sp, #96]
   5228c:	and	x21, x0, #0x7fffffffffffffff
   52290:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52294:	add	x0, x0, #0x300
   52298:	stp	x22, x21, [sp, #80]
   5229c:	ldr	q0, [sp, #80]
   522a0:	ldr	q1, [x0]
   522a4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   522a8:	cbnz	w0, 52338 <daddl@@GLIBC_2.28+0x1f0>
   522ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   522b0:	add	x0, x0, #0x300
   522b4:	stp	x22, x21, [sp, #80]
   522b8:	ldr	q1, [x0]
   522bc:	ldr	q0, [sp, #80]
   522c0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   522c4:	cmp	w0, #0x0
   522c8:	b.gt	52338 <daddl@@GLIBC_2.28+0x1f0>
   522cc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   522d0:	add	x0, x0, #0x300
   522d4:	and	x20, x20, #0x7fffffffffffffff
   522d8:	stp	x19, x20, [sp, #80]
   522dc:	ldr	q1, [x0]
   522e0:	ldr	q0, [sp, #80]
   522e4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   522e8:	cbnz	w0, 52338 <daddl@@GLIBC_2.28+0x1f0>
   522ec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   522f0:	add	x0, x0, #0x300
   522f4:	stp	x19, x20, [sp, #80]
   522f8:	ldr	q1, [x0]
   522fc:	ldr	q0, [sp, #80]
   52300:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   52304:	cmp	w0, #0x0
   52308:	b.gt	52338 <daddl@@GLIBC_2.28+0x1f0>
   5230c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52310:	ldr	x0, [x0, #3976]
   52314:	mrs	x1, tpidr_el0
   52318:	mov	w2, #0x22                  	// #34
   5231c:	fmov	d0, d8
   52320:	ldp	x19, x20, [sp, #16]
   52324:	str	w2, [x1, x0]
   52328:	ldp	x21, x22, [sp, #32]
   5232c:	ldr	d8, [sp, #72]
   52330:	ldp	x29, x30, [sp], #112
   52334:	ret
   52338:	fmov	d0, d8
   5233c:	ldr	d8, [sp, #72]
   52340:	ldp	x19, x20, [sp, #16]
   52344:	ldp	x21, x22, [sp, #32]
   52348:	ldp	x29, x30, [sp], #112
   5234c:	ret
   52350:	fcmp	d8, #0.0
   52354:	b.ne	5238c <daddl@@GLIBC_2.28+0x244>  // b.any
   52358:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   5235c:	ldr	x0, [x0, #3976]
   52360:	mrs	x1, tpidr_el0
   52364:	mov	w2, #0x22                  	// #34
   52368:	fmov	d0, d8
   5236c:	ldp	x19, x20, [sp, #16]
   52370:	str	w2, [x1, x0]
   52374:	ldp	x21, x22, [sp, #32]
   52378:	ldp	x23, x24, [sp, #48]
   5237c:	ldr	x25, [sp, #64]
   52380:	ldr	d8, [sp, #72]
   52384:	ldp	x29, x30, [sp], #112
   52388:	ret
   5238c:	fmov	d0, d8
   52390:	ldr	d8, [sp, #72]
   52394:	ldp	x19, x20, [sp, #16]
   52398:	ldp	x21, x22, [sp, #32]
   5239c:	ldp	x23, x24, [sp, #48]
   523a0:	ldr	x25, [sp, #64]
   523a4:	ldp	x29, x30, [sp], #112
   523a8:	ret
   523ac:	msr	fpcr, x0
   523b0:	b	521ec <daddl@@GLIBC_2.28+0xa4>
   523b4:	msr	fpcr, x23
   523b8:	b	52228 <daddl@@GLIBC_2.28+0xe0>
   523bc:	stp	x19, x20, [sp, #80]
   523c0:	ldr	q1, [sp, #96]
   523c4:	ldr	q0, [sp, #80]
   523c8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   523cc:	cbnz	w0, 521a8 <daddl@@GLIBC_2.28+0x60>
   523d0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   523d4:	ldr	x0, [x0, #3976]
   523d8:	mrs	x1, tpidr_el0
   523dc:	mov	w2, #0x21                  	// #33
   523e0:	str	w2, [x1, x0]
   523e4:	b	521a8 <daddl@@GLIBC_2.28+0x60>
   523e8:	str	q0, [sp, #80]
   523ec:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   523f0:	ldr	q0, [sp, #80]
   523f4:	b	5223c <daddl@@GLIBC_2.28+0xf4>

00000000000523f8 <f64xaddf128@@GLIBC_2.28>:
   523f8:	stp	x29, x30, [sp, #-112]!
   523fc:	mov	x29, sp
   52400:	stp	x21, x22, [sp, #32]
   52404:	stp	x23, x24, [sp, #48]
   52408:	str	q0, [sp, #80]
   5240c:	str	q1, [sp, #96]
   52410:	ldp	x23, x22, [sp, #80]
   52414:	stp	x19, x20, [sp, #16]
   52418:	ldp	x24, x0, [sp, #96]
   5241c:	stp	x24, x0, [sp, #80]
   52420:	stp	x23, x22, [sp, #96]
   52424:	ldr	q1, [sp, #80]
   52428:	ldr	q0, [sp, #96]
   5242c:	str	x25, [sp, #64]
   52430:	mov	x25, x0
   52434:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   52438:	str	q0, [sp, #80]
   5243c:	ldp	x19, x20, [sp, #80]
   52440:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52444:	add	x0, x0, #0x300
   52448:	ldr	q1, [x0]
   5244c:	and	x21, x20, #0x7fffffffffffffff
   52450:	str	x21, [sp, #88]
   52454:	ldr	q0, [sp, #80]
   52458:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5245c:	cbnz	w0, 524e4 <f64xaddf128@@GLIBC_2.28+0xec>
   52460:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52464:	add	x0, x0, #0x300
   52468:	stp	x19, x21, [sp, #80]
   5246c:	ldr	q1, [x0]
   52470:	ldr	q0, [sp, #80]
   52474:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   52478:	cmp	w0, #0x0
   5247c:	b.gt	524e4 <f64xaddf128@@GLIBC_2.28+0xec>
   52480:	movi	v1.2d, #0x0
   52484:	stp	x19, x20, [sp, #80]
   52488:	ldr	q0, [sp, #80]
   5248c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   52490:	cbnz	w0, 524c4 <f64xaddf128@@GLIBC_2.28+0xcc>
   52494:	eor	x0, x25, #0x8000000000000000
   52498:	stp	x23, x22, [sp, #80]
   5249c:	stp	x24, x0, [sp, #96]
   524a0:	ldr	q1, [sp, #80]
   524a4:	ldr	q0, [sp, #96]
   524a8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   524ac:	cbz	w0, 524c4 <f64xaddf128@@GLIBC_2.28+0xcc>
   524b0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   524b4:	ldr	x0, [x0, #3976]
   524b8:	mrs	x1, tpidr_el0
   524bc:	mov	w2, #0x22                  	// #34
   524c0:	str	w2, [x1, x0]
   524c4:	stp	x19, x20, [sp, #80]
   524c8:	ldp	x19, x20, [sp, #16]
   524cc:	ldp	x21, x22, [sp, #32]
   524d0:	ldp	x23, x24, [sp, #48]
   524d4:	ldr	x25, [sp, #64]
   524d8:	ldr	q0, [sp, #80]
   524dc:	ldp	x29, x30, [sp], #112
   524e0:	ret
   524e4:	stp	x19, x20, [sp, #80]
   524e8:	stp	x19, x20, [sp, #96]
   524ec:	ldr	q1, [sp, #80]
   524f0:	ldr	q0, [sp, #96]
   524f4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   524f8:	cbnz	w0, 52594 <f64xaddf128@@GLIBC_2.28+0x19c>
   524fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52500:	add	x0, x0, #0x300
   52504:	and	x22, x22, #0x7fffffffffffffff
   52508:	stp	x23, x22, [sp, #80]
   5250c:	ldr	q1, [x0]
   52510:	ldr	q0, [sp, #80]
   52514:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52518:	cbnz	w0, 524c4 <f64xaddf128@@GLIBC_2.28+0xcc>
   5251c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52520:	add	x0, x0, #0x300
   52524:	stp	x23, x22, [sp, #80]
   52528:	ldr	q1, [x0]
   5252c:	ldr	q0, [sp, #80]
   52530:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   52534:	cmp	w0, #0x0
   52538:	b.gt	524c4 <f64xaddf128@@GLIBC_2.28+0xcc>
   5253c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52540:	add	x0, x0, #0x300
   52544:	and	x25, x25, #0x7fffffffffffffff
   52548:	stp	x24, x25, [sp, #80]
   5254c:	ldr	q1, [x0]
   52550:	ldr	q0, [sp, #80]
   52554:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52558:	cbnz	w0, 524c4 <f64xaddf128@@GLIBC_2.28+0xcc>
   5255c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52560:	add	x0, x0, #0x300
   52564:	stp	x24, x25, [sp, #80]
   52568:	ldr	q1, [x0]
   5256c:	ldr	q0, [sp, #80]
   52570:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   52574:	cmp	w0, #0x0
   52578:	b.gt	524c4 <f64xaddf128@@GLIBC_2.28+0xcc>
   5257c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52580:	ldr	x0, [x0, #3976]
   52584:	mrs	x1, tpidr_el0
   52588:	mov	w2, #0x22                  	// #34
   5258c:	str	w2, [x1, x0]
   52590:	b	524c4 <f64xaddf128@@GLIBC_2.28+0xcc>
   52594:	stp	x24, x25, [sp, #80]
   52598:	stp	x23, x22, [sp, #96]
   5259c:	ldr	q1, [sp, #80]
   525a0:	ldr	q0, [sp, #96]
   525a4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   525a8:	cbnz	w0, 524c4 <f64xaddf128@@GLIBC_2.28+0xcc>
   525ac:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   525b0:	ldr	x0, [x0, #3976]
   525b4:	mrs	x1, tpidr_el0
   525b8:	mov	w2, #0x21                  	// #33
   525bc:	str	w2, [x1, x0]
   525c0:	b	524c4 <f64xaddf128@@GLIBC_2.28+0xcc>
   525c4:	nop

00000000000525c8 <f32divf32x@@GLIBC_2.28>:
   525c8:	stp	x29, x30, [sp, #-64]!
   525cc:	mov	x29, sp
   525d0:	stp	d8, d9, [sp, #32]
   525d4:	fmov	d9, d0
   525d8:	stp	x19, x20, [sp, #16]
   525dc:	mrs	x2, fpcr
   525e0:	mrs	x1, fpsr
   525e4:	mov	w0, #0xe0ff                	// #57599
   525e8:	and	w3, w1, #0xffffffe0
   525ec:	movk	w0, #0xff3f, lsl #16
   525f0:	and	w0, w2, w0
   525f4:	orr	w0, w0, #0xc00000
   525f8:	cmp	w2, w0
   525fc:	b.ne	526f4 <f32divf32x@@GLIBC_2.28+0x12c>  // b.any
   52600:	cmp	w1, w3
   52604:	b.eq	5260c <f32divf32x@@GLIBC_2.28+0x44>  // b.none
   52608:	msr	fpsr, x3
   5260c:	fmov	d8, d9
   52610:	fdiv	d8, d8, d1
   52614:	fmov	x19, d8
   52618:	mrs	x3, fpcr
   5261c:	mrs	x20, fpsr
   52620:	and	w0, w20, #0x1f
   52624:	cmp	w3, w2
   52628:	orr	w1, w0, w1
   5262c:	b.ne	526fc <f32divf32x@@GLIBC_2.28+0x134>  // b.any
   52630:	cmp	w20, w1
   52634:	b.eq	5263c <f32divf32x@@GLIBC_2.28+0x74>  // b.none
   52638:	msr	fpsr, x1
   5263c:	tst	w0, w2, lsr #8
   52640:	b.ne	526e4 <f32divf32x@@GLIBC_2.28+0x11c>  // b.any
   52644:	fmov	x0, d8
   52648:	ubfx	x20, x20, #4, #1
   5264c:	mov	w1, #0x7f7fffff            	// #2139095039
   52650:	fmov	s3, w1
   52654:	orr	w0, w20, w0
   52658:	bfxil	x19, x0, #0, #32
   5265c:	fmov	d2, x19
   52660:	fcvt	s0, d2
   52664:	fabs	s2, s0
   52668:	fcmp	s2, s3
   5266c:	b.ls	526b0 <f32divf32x@@GLIBC_2.28+0xe8>  // b.plast
   52670:	fcmp	s0, s0
   52674:	b.vs	52704 <f32divf32x@@GLIBC_2.28+0x13c>
   52678:	fabs	d9, d9
   5267c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   52680:	fmov	d1, x0
   52684:	fcmp	d9, d1
   52688:	b.hi	526a0 <f32divf32x@@GLIBC_2.28+0xd8>  // b.pmore
   5268c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52690:	ldr	x0, [x0, #3976]
   52694:	mrs	x1, tpidr_el0
   52698:	mov	w2, #0x22                  	// #34
   5269c:	str	w2, [x1, x0]
   526a0:	ldp	x19, x20, [sp, #16]
   526a4:	ldp	d8, d9, [sp, #32]
   526a8:	ldp	x29, x30, [sp], #64
   526ac:	ret
   526b0:	fcmp	s0, #0.0
   526b4:	movi	d2, #0x0
   526b8:	fccmp	d9, d2, #0x4, eq  // eq = none
   526bc:	b.eq	526a0 <f32divf32x@@GLIBC_2.28+0xd8>  // b.none
   526c0:	fabs	d1, d1
   526c4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   526c8:	fmov	d2, x0
   526cc:	fcmp	d1, d2
   526d0:	b.le	5268c <f32divf32x@@GLIBC_2.28+0xc4>
   526d4:	ldp	x19, x20, [sp, #16]
   526d8:	ldp	d8, d9, [sp, #32]
   526dc:	ldp	x29, x30, [sp], #64
   526e0:	ret
   526e4:	str	d1, [sp, #56]
   526e8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   526ec:	ldr	d1, [sp, #56]
   526f0:	b	52644 <f32divf32x@@GLIBC_2.28+0x7c>
   526f4:	msr	fpcr, x0
   526f8:	b	52600 <f32divf32x@@GLIBC_2.28+0x38>
   526fc:	msr	fpcr, x2
   52700:	b	52630 <f32divf32x@@GLIBC_2.28+0x68>
   52704:	fcmp	d9, d1
   52708:	b.vs	526a0 <f32divf32x@@GLIBC_2.28+0xd8>
   5270c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52710:	ldr	x0, [x0, #3976]
   52714:	mrs	x1, tpidr_el0
   52718:	mov	w2, #0x21                  	// #33
   5271c:	str	w2, [x1, x0]
   52720:	b	526a0 <f32divf32x@@GLIBC_2.28+0xd8>
   52724:	nop

0000000000052728 <f32xdivf64@@GLIBC_2.28>:
   52728:	fmov	d2, d0
   5272c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   52730:	fdiv	d0, d0, d1
   52734:	fmov	d3, x0
   52738:	fabs	d4, d0
   5273c:	fcmp	d4, d3
   52740:	b.ls	52770 <f32xdivf64@@GLIBC_2.28+0x48>  // b.plast
   52744:	fcmp	d0, d0
   52748:	b.vs	52790 <f32xdivf64@@GLIBC_2.28+0x68>
   5274c:	fabs	d2, d2
   52750:	fcmp	d2, d3
   52754:	b.hi	5276c <f32xdivf64@@GLIBC_2.28+0x44>  // b.pmore
   52758:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   5275c:	ldr	x0, [x0, #3976]
   52760:	mrs	x1, tpidr_el0
   52764:	mov	w2, #0x22                  	// #34
   52768:	str	w2, [x1, x0]
   5276c:	ret
   52770:	fcmp	d0, #0.0
   52774:	movi	d4, #0x0
   52778:	fccmp	d2, d4, #0x4, eq  // eq = none
   5277c:	b.eq	5276c <f32xdivf64@@GLIBC_2.28+0x44>  // b.none
   52780:	fabs	d1, d1
   52784:	fcmp	d1, d3
   52788:	b.le	52758 <f32xdivf64@@GLIBC_2.28+0x30>
   5278c:	ret
   52790:	fcmp	d2, d1
   52794:	b.vs	5276c <f32xdivf64@@GLIBC_2.28+0x44>
   52798:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   5279c:	ldr	x0, [x0, #3976]
   527a0:	mrs	x1, tpidr_el0
   527a4:	mov	w2, #0x21                  	// #33
   527a8:	str	w2, [x1, x0]
   527ac:	ret

00000000000527b0 <f32divf128@@GLIBC_2.28>:
   527b0:	stp	x29, x30, [sp, #-112]!
   527b4:	mov	x29, sp
   527b8:	stp	x21, x22, [sp, #32]
   527bc:	str	q1, [sp, #80]
   527c0:	ldp	x22, x21, [sp, #80]
   527c4:	stp	x19, x20, [sp, #16]
   527c8:	stp	x23, x24, [sp, #48]
   527cc:	str	x25, [sp, #64]
   527d0:	str	d8, [sp, #72]
   527d4:	str	q0, [sp, #96]
   527d8:	mrs	x23, fpcr
   527dc:	mrs	x20, fpsr
   527e0:	mov	w0, #0xe0ff                	// #57599
   527e4:	and	w1, w20, #0xffffffe0
   527e8:	movk	w0, #0xff3f, lsl #16
   527ec:	and	w0, w23, w0
   527f0:	orr	w0, w0, #0xc00000
   527f4:	cmp	w23, w0
   527f8:	b.ne	52990 <f32divf128@@GLIBC_2.28+0x1e0>  // b.any
   527fc:	cmp	w20, w1
   52800:	b.eq	52808 <f32divf128@@GLIBC_2.28+0x58>  // b.none
   52804:	msr	fpsr, x1
   52808:	stp	x22, x21, [sp, #80]
   5280c:	ldr	q0, [sp, #96]
   52810:	ldr	q1, [sp, #80]
   52814:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   52818:	fmov	x24, d0
   5281c:	fmov	x25, v0.d[1]
   52820:	mrs	x1, fpcr
   52824:	mrs	x19, fpsr
   52828:	and	w0, w19, #0x1f
   5282c:	cmp	w1, w23
   52830:	orr	w20, w0, w20
   52834:	b.ne	52998 <f32divf128@@GLIBC_2.28+0x1e8>  // b.any
   52838:	cmp	w19, w20
   5283c:	b.eq	52844 <f32divf128@@GLIBC_2.28+0x94>  // b.none
   52840:	msr	fpsr, x20
   52844:	tst	w0, w23, lsr #8
   52848:	b.ne	52980 <f32divf128@@GLIBC_2.28+0x1d0>  // b.any
   5284c:	fmov	x0, d0
   52850:	ubfx	x19, x19, #4, #1
   52854:	orr	w19, w19, w0
   52858:	bfxil	x24, x19, #0, #32
   5285c:	fmov	d0, x24
   52860:	fmov	v0.d[1], x25
   52864:	bl	57ca8 <f64xsubf128@@GLIBC_2.28+0x3f28>
   52868:	fmov	s8, s0
   5286c:	fabs	s0, s0
   52870:	mov	w0, #0x7f7fffff            	// #2139095039
   52874:	fmov	s1, w0
   52878:	fcmp	s0, s1
   5287c:	b.ls	52900 <f32divf128@@GLIBC_2.28+0x150>  // b.plast
   52880:	fcmp	s8, s8
   52884:	b.vs	529a0 <f32divf128@@GLIBC_2.28+0x1f0>
   52888:	ldp	x20, x0, [sp, #96]
   5288c:	and	x19, x0, #0x7fffffffffffffff
   52890:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52894:	add	x0, x0, #0x300
   52898:	stp	x20, x19, [sp, #80]
   5289c:	ldr	q0, [sp, #80]
   528a0:	ldr	q1, [x0]
   528a4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   528a8:	cbnz	w0, 528e0 <f32divf128@@GLIBC_2.28+0x130>
   528ac:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   528b0:	add	x0, x0, #0x300
   528b4:	stp	x20, x19, [sp, #80]
   528b8:	ldr	q1, [x0]
   528bc:	ldr	q0, [sp, #80]
   528c0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   528c4:	cmp	w0, #0x0
   528c8:	b.gt	528e0 <f32divf128@@GLIBC_2.28+0x130>
   528cc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   528d0:	ldr	x0, [x0, #3976]
   528d4:	mrs	x1, tpidr_el0
   528d8:	mov	w2, #0x22                  	// #34
   528dc:	str	w2, [x1, x0]
   528e0:	fmov	s0, s8
   528e4:	ldr	d8, [sp, #72]
   528e8:	ldp	x19, x20, [sp, #16]
   528ec:	ldp	x21, x22, [sp, #32]
   528f0:	ldp	x23, x24, [sp, #48]
   528f4:	ldr	x25, [sp, #64]
   528f8:	ldp	x29, x30, [sp], #112
   528fc:	ret
   52900:	fcmp	s8, #0.0
   52904:	ldr	q0, [sp, #96]
   52908:	movi	v1.2d, #0x0
   5290c:	cset	w19, eq  // eq = none
   52910:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   52914:	cmp	w0, #0x0
   52918:	csel	w19, w19, wzr, ne  // ne = any
   5291c:	cbz	w19, 528e0 <f32divf128@@GLIBC_2.28+0x130>
   52920:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52924:	add	x0, x0, #0x300
   52928:	and	x21, x21, #0x7fffffffffffffff
   5292c:	stp	x22, x21, [sp, #80]
   52930:	ldr	q1, [x0]
   52934:	ldr	q0, [sp, #80]
   52938:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5293c:	cbnz	w0, 528cc <f32divf128@@GLIBC_2.28+0x11c>
   52940:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52944:	add	x0, x0, #0x300
   52948:	stp	x22, x21, [sp, #80]
   5294c:	ldr	q1, [x0]
   52950:	ldr	q0, [sp, #80]
   52954:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   52958:	cmp	w0, #0x0
   5295c:	b.le	528cc <f32divf128@@GLIBC_2.28+0x11c>
   52960:	fmov	s0, s8
   52964:	ldr	d8, [sp, #72]
   52968:	ldp	x19, x20, [sp, #16]
   5296c:	ldp	x21, x22, [sp, #32]
   52970:	ldp	x23, x24, [sp, #48]
   52974:	ldr	x25, [sp, #64]
   52978:	ldp	x29, x30, [sp], #112
   5297c:	ret
   52980:	str	q0, [sp, #80]
   52984:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   52988:	ldr	q0, [sp, #80]
   5298c:	b	5284c <f32divf128@@GLIBC_2.28+0x9c>
   52990:	msr	fpcr, x0
   52994:	b	527fc <f32divf128@@GLIBC_2.28+0x4c>
   52998:	msr	fpcr, x23
   5299c:	b	52838 <f32divf128@@GLIBC_2.28+0x88>
   529a0:	stp	x22, x21, [sp, #80]
   529a4:	ldr	q0, [sp, #96]
   529a8:	ldr	q1, [sp, #80]
   529ac:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   529b0:	cbnz	w0, 528e0 <f32divf128@@GLIBC_2.28+0x130>
   529b4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   529b8:	ldr	x0, [x0, #3976]
   529bc:	mrs	x1, tpidr_el0
   529c0:	mov	w2, #0x21                  	// #33
   529c4:	str	w2, [x1, x0]
   529c8:	b	528e0 <f32divf128@@GLIBC_2.28+0x130>
   529cc:	nop

00000000000529d0 <ddivl@@GLIBC_2.28>:
   529d0:	stp	x29, x30, [sp, #-112]!
   529d4:	mov	x29, sp
   529d8:	stp	x21, x22, [sp, #32]
   529dc:	str	q1, [sp, #80]
   529e0:	ldp	x22, x21, [sp, #80]
   529e4:	stp	x19, x20, [sp, #16]
   529e8:	stp	x23, x24, [sp, #48]
   529ec:	str	x25, [sp, #64]
   529f0:	str	d8, [sp, #72]
   529f4:	str	q0, [sp, #96]
   529f8:	mrs	x23, fpcr
   529fc:	mrs	x20, fpsr
   52a00:	mov	w0, #0xe0ff                	// #57599
   52a04:	and	w1, w20, #0xffffffe0
   52a08:	movk	w0, #0xff3f, lsl #16
   52a0c:	and	w0, w23, w0
   52a10:	orr	w0, w0, #0xc00000
   52a14:	cmp	w23, w0
   52a18:	b.ne	52bb0 <ddivl@@GLIBC_2.28+0x1e0>  // b.any
   52a1c:	cmp	w20, w1
   52a20:	b.eq	52a28 <ddivl@@GLIBC_2.28+0x58>  // b.none
   52a24:	msr	fpsr, x1
   52a28:	stp	x22, x21, [sp, #80]
   52a2c:	ldr	q0, [sp, #96]
   52a30:	ldr	q1, [sp, #80]
   52a34:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   52a38:	fmov	x24, d0
   52a3c:	fmov	x25, v0.d[1]
   52a40:	mrs	x1, fpcr
   52a44:	mrs	x19, fpsr
   52a48:	and	w0, w19, #0x1f
   52a4c:	cmp	w1, w23
   52a50:	orr	w20, w0, w20
   52a54:	b.ne	52bb8 <ddivl@@GLIBC_2.28+0x1e8>  // b.any
   52a58:	cmp	w19, w20
   52a5c:	b.eq	52a64 <ddivl@@GLIBC_2.28+0x94>  // b.none
   52a60:	msr	fpsr, x20
   52a64:	tst	w0, w23, lsr #8
   52a68:	b.ne	52ba0 <ddivl@@GLIBC_2.28+0x1d0>  // b.any
   52a6c:	fmov	x0, d0
   52a70:	ubfx	x19, x19, #4, #1
   52a74:	orr	w19, w19, w0
   52a78:	bfxil	x24, x19, #0, #32
   52a7c:	fmov	d0, x24
   52a80:	fmov	v0.d[1], x25
   52a84:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
   52a88:	fmov	d8, d0
   52a8c:	fabs	d0, d0
   52a90:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   52a94:	fmov	d1, x0
   52a98:	fcmp	d0, d1
   52a9c:	b.ls	52b20 <ddivl@@GLIBC_2.28+0x150>  // b.plast
   52aa0:	fcmp	d8, d8
   52aa4:	b.vs	52bc0 <ddivl@@GLIBC_2.28+0x1f0>
   52aa8:	ldp	x20, x0, [sp, #96]
   52aac:	and	x19, x0, #0x7fffffffffffffff
   52ab0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52ab4:	add	x0, x0, #0x300
   52ab8:	stp	x20, x19, [sp, #80]
   52abc:	ldr	q0, [sp, #80]
   52ac0:	ldr	q1, [x0]
   52ac4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52ac8:	cbnz	w0, 52b00 <ddivl@@GLIBC_2.28+0x130>
   52acc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52ad0:	add	x0, x0, #0x300
   52ad4:	stp	x20, x19, [sp, #80]
   52ad8:	ldr	q1, [x0]
   52adc:	ldr	q0, [sp, #80]
   52ae0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   52ae4:	cmp	w0, #0x0
   52ae8:	b.gt	52b00 <ddivl@@GLIBC_2.28+0x130>
   52aec:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52af0:	ldr	x0, [x0, #3976]
   52af4:	mrs	x1, tpidr_el0
   52af8:	mov	w2, #0x22                  	// #34
   52afc:	str	w2, [x1, x0]
   52b00:	fmov	d0, d8
   52b04:	ldr	d8, [sp, #72]
   52b08:	ldp	x19, x20, [sp, #16]
   52b0c:	ldp	x21, x22, [sp, #32]
   52b10:	ldp	x23, x24, [sp, #48]
   52b14:	ldr	x25, [sp, #64]
   52b18:	ldp	x29, x30, [sp], #112
   52b1c:	ret
   52b20:	fcmp	d8, #0.0
   52b24:	ldr	q0, [sp, #96]
   52b28:	movi	v1.2d, #0x0
   52b2c:	cset	w19, eq  // eq = none
   52b30:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   52b34:	cmp	w0, #0x0
   52b38:	csel	w19, w19, wzr, ne  // ne = any
   52b3c:	cbz	w19, 52b00 <ddivl@@GLIBC_2.28+0x130>
   52b40:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52b44:	add	x0, x0, #0x300
   52b48:	and	x21, x21, #0x7fffffffffffffff
   52b4c:	stp	x22, x21, [sp, #80]
   52b50:	ldr	q1, [x0]
   52b54:	ldr	q0, [sp, #80]
   52b58:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52b5c:	cbnz	w0, 52aec <ddivl@@GLIBC_2.28+0x11c>
   52b60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52b64:	add	x0, x0, #0x300
   52b68:	stp	x22, x21, [sp, #80]
   52b6c:	ldr	q1, [x0]
   52b70:	ldr	q0, [sp, #80]
   52b74:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   52b78:	cmp	w0, #0x0
   52b7c:	b.le	52aec <ddivl@@GLIBC_2.28+0x11c>
   52b80:	fmov	d0, d8
   52b84:	ldr	d8, [sp, #72]
   52b88:	ldp	x19, x20, [sp, #16]
   52b8c:	ldp	x21, x22, [sp, #32]
   52b90:	ldp	x23, x24, [sp, #48]
   52b94:	ldr	x25, [sp, #64]
   52b98:	ldp	x29, x30, [sp], #112
   52b9c:	ret
   52ba0:	str	q0, [sp, #80]
   52ba4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   52ba8:	ldr	q0, [sp, #80]
   52bac:	b	52a6c <ddivl@@GLIBC_2.28+0x9c>
   52bb0:	msr	fpcr, x0
   52bb4:	b	52a1c <ddivl@@GLIBC_2.28+0x4c>
   52bb8:	msr	fpcr, x23
   52bbc:	b	52a58 <ddivl@@GLIBC_2.28+0x88>
   52bc0:	stp	x22, x21, [sp, #80]
   52bc4:	ldr	q0, [sp, #96]
   52bc8:	ldr	q1, [sp, #80]
   52bcc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52bd0:	cbnz	w0, 52b00 <ddivl@@GLIBC_2.28+0x130>
   52bd4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52bd8:	ldr	x0, [x0, #3976]
   52bdc:	mrs	x1, tpidr_el0
   52be0:	mov	w2, #0x21                  	// #33
   52be4:	str	w2, [x1, x0]
   52be8:	b	52b00 <ddivl@@GLIBC_2.28+0x130>
   52bec:	nop

0000000000052bf0 <f64xdivf128@@GLIBC_2.28>:
   52bf0:	stp	x29, x30, [sp, #-112]!
   52bf4:	mov	x29, sp
   52bf8:	stp	x21, x22, [sp, #32]
   52bfc:	stp	x23, x24, [sp, #48]
   52c00:	str	x25, [sp, #64]
   52c04:	str	q0, [sp, #80]
   52c08:	str	q1, [sp, #96]
   52c0c:	ldp	x24, x23, [sp, #80]
   52c10:	stp	x19, x20, [sp, #16]
   52c14:	ldr	x25, [sp, #96]
   52c18:	str	x25, [sp, #80]
   52c1c:	ldr	x21, [sp, #104]
   52c20:	str	x21, [sp, #88]
   52c24:	str	x24, [sp, #96]
   52c28:	str	x23, [sp, #104]
   52c2c:	ldr	q1, [sp, #80]
   52c30:	ldr	q0, [sp, #96]
   52c34:	bl	55600 <f64xsubf128@@GLIBC_2.28+0x1880>
   52c38:	str	q0, [sp, #80]
   52c3c:	ldp	x19, x20, [sp, #80]
   52c40:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52c44:	add	x0, x0, #0x300
   52c48:	ldr	q1, [x0]
   52c4c:	and	x22, x20, #0x7fffffffffffffff
   52c50:	str	x22, [sp, #88]
   52c54:	ldr	q0, [sp, #80]
   52c58:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52c5c:	cbnz	w0, 52d18 <f64xdivf128@@GLIBC_2.28+0x128>
   52c60:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52c64:	add	x0, x0, #0x300
   52c68:	stp	x19, x22, [sp, #80]
   52c6c:	ldr	q1, [x0]
   52c70:	ldr	q0, [sp, #80]
   52c74:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   52c78:	cmp	w0, #0x0
   52c7c:	b.gt	52d18 <f64xdivf128@@GLIBC_2.28+0x128>
   52c80:	movi	v1.2d, #0x0
   52c84:	stp	x19, x20, [sp, #80]
   52c88:	ldr	q0, [sp, #80]
   52c8c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   52c90:	stp	x24, x23, [sp, #80]
   52c94:	cmp	w0, #0x0
   52c98:	movi	v1.2d, #0x0
   52c9c:	ldr	q0, [sp, #80]
   52ca0:	cset	w22, eq  // eq = none
   52ca4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   52ca8:	cmp	w0, #0x0
   52cac:	cset	w0, ne  // ne = any
   52cb0:	tst	w0, w22
   52cb4:	b.eq	52cf8 <f64xdivf128@@GLIBC_2.28+0x108>  // b.none
   52cb8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52cbc:	add	x0, x0, #0x300
   52cc0:	and	x21, x21, #0x7fffffffffffffff
   52cc4:	stp	x25, x21, [sp, #80]
   52cc8:	ldr	q1, [x0]
   52ccc:	ldr	q0, [sp, #80]
   52cd0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52cd4:	cbnz	w0, 52d70 <f64xdivf128@@GLIBC_2.28+0x180>
   52cd8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52cdc:	add	x0, x0, #0x300
   52ce0:	stp	x25, x21, [sp, #80]
   52ce4:	ldr	q1, [x0]
   52ce8:	ldr	q0, [sp, #80]
   52cec:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   52cf0:	cmp	w0, #0x0
   52cf4:	b.le	52d70 <f64xdivf128@@GLIBC_2.28+0x180>
   52cf8:	stp	x19, x20, [sp, #80]
   52cfc:	ldp	x19, x20, [sp, #16]
   52d00:	ldp	x21, x22, [sp, #32]
   52d04:	ldp	x23, x24, [sp, #48]
   52d08:	ldr	x25, [sp, #64]
   52d0c:	ldr	q0, [sp, #80]
   52d10:	ldp	x29, x30, [sp], #112
   52d14:	ret
   52d18:	stp	x19, x20, [sp, #80]
   52d1c:	stp	x19, x20, [sp, #96]
   52d20:	ldr	q1, [sp, #80]
   52d24:	ldr	q0, [sp, #96]
   52d28:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52d2c:	cbnz	w0, 52da4 <f64xdivf128@@GLIBC_2.28+0x1b4>
   52d30:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52d34:	add	x0, x0, #0x300
   52d38:	and	x23, x23, #0x7fffffffffffffff
   52d3c:	stp	x24, x23, [sp, #80]
   52d40:	ldr	q1, [x0]
   52d44:	ldr	q0, [sp, #80]
   52d48:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52d4c:	cbnz	w0, 52cf8 <f64xdivf128@@GLIBC_2.28+0x108>
   52d50:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   52d54:	add	x0, x0, #0x300
   52d58:	stp	x24, x23, [sp, #80]
   52d5c:	ldr	q1, [x0]
   52d60:	ldr	q0, [sp, #80]
   52d64:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   52d68:	cmp	w0, #0x0
   52d6c:	b.gt	52cf8 <f64xdivf128@@GLIBC_2.28+0x108>
   52d70:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52d74:	ldr	x0, [x0, #3976]
   52d78:	mrs	x1, tpidr_el0
   52d7c:	mov	w2, #0x22                  	// #34
   52d80:	stp	x19, x20, [sp, #80]
   52d84:	ldp	x19, x20, [sp, #16]
   52d88:	str	w2, [x1, x0]
   52d8c:	ldp	x21, x22, [sp, #32]
   52d90:	ldp	x23, x24, [sp, #48]
   52d94:	ldr	x25, [sp, #64]
   52d98:	ldr	q0, [sp, #80]
   52d9c:	ldp	x29, x30, [sp], #112
   52da0:	ret
   52da4:	stp	x25, x21, [sp, #80]
   52da8:	stp	x24, x23, [sp, #96]
   52dac:	ldr	q1, [sp, #80]
   52db0:	ldr	q0, [sp, #96]
   52db4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   52db8:	cbnz	w0, 52cf8 <f64xdivf128@@GLIBC_2.28+0x108>
   52dbc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52dc0:	ldr	x0, [x0, #3976]
   52dc4:	mrs	x1, tpidr_el0
   52dc8:	mov	w2, #0x21                  	// #33
   52dcc:	str	w2, [x1, x0]
   52dd0:	b	52cf8 <f64xdivf128@@GLIBC_2.28+0x108>
   52dd4:	nop

0000000000052dd8 <f32mulf32x@@GLIBC_2.28>:
   52dd8:	stp	x29, x30, [sp, #-64]!
   52ddc:	mov	x29, sp
   52de0:	stp	d8, d9, [sp, #32]
   52de4:	fmov	d9, d0
   52de8:	stp	x19, x20, [sp, #16]
   52dec:	mrs	x2, fpcr
   52df0:	mrs	x1, fpsr
   52df4:	mov	w0, #0xe0ff                	// #57599
   52df8:	and	w3, w1, #0xffffffe0
   52dfc:	movk	w0, #0xff3f, lsl #16
   52e00:	and	w0, w2, w0
   52e04:	orr	w0, w0, #0xc00000
   52e08:	cmp	w2, w0
   52e0c:	b.ne	52f00 <f32mulf32x@@GLIBC_2.28+0x128>  // b.any
   52e10:	cmp	w1, w3
   52e14:	b.eq	52e1c <f32mulf32x@@GLIBC_2.28+0x44>  // b.none
   52e18:	msr	fpsr, x3
   52e1c:	fmov	d8, d9
   52e20:	fmul	d8, d8, d1
   52e24:	fmov	x19, d8
   52e28:	mrs	x3, fpcr
   52e2c:	mrs	x20, fpsr
   52e30:	and	w0, w20, #0x1f
   52e34:	cmp	w3, w2
   52e38:	orr	w1, w0, w1
   52e3c:	b.ne	52f08 <f32mulf32x@@GLIBC_2.28+0x130>  // b.any
   52e40:	cmp	w20, w1
   52e44:	b.eq	52e4c <f32mulf32x@@GLIBC_2.28+0x74>  // b.none
   52e48:	msr	fpsr, x1
   52e4c:	tst	w0, w2, lsr #8
   52e50:	b.ne	52ef0 <f32mulf32x@@GLIBC_2.28+0x118>  // b.any
   52e54:	fmov	x0, d8
   52e58:	ubfx	x20, x20, #4, #1
   52e5c:	mov	w1, #0x7f7fffff            	// #2139095039
   52e60:	fmov	s3, w1
   52e64:	orr	w0, w20, w0
   52e68:	bfxil	x19, x0, #0, #32
   52e6c:	fmov	d2, x19
   52e70:	fcvt	s0, d2
   52e74:	fabs	s2, s0
   52e78:	fcmp	s2, s3
   52e7c:	b.ls	52ecc <f32mulf32x@@GLIBC_2.28+0xf4>  // b.plast
   52e80:	fcmp	s0, s0
   52e84:	b.vs	52f10 <f32mulf32x@@GLIBC_2.28+0x138>
   52e88:	fabs	d9, d9
   52e8c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   52e90:	fmov	d2, x0
   52e94:	fcmp	d9, d2
   52e98:	b.hi	52ee0 <f32mulf32x@@GLIBC_2.28+0x108>  // b.pmore
   52e9c:	fabs	d1, d1
   52ea0:	fcmp	d1, d2
   52ea4:	b.hi	52ee0 <f32mulf32x@@GLIBC_2.28+0x108>  // b.pmore
   52ea8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52eac:	ldr	x0, [x0, #3976]
   52eb0:	mrs	x1, tpidr_el0
   52eb4:	mov	w2, #0x22                  	// #34
   52eb8:	ldp	x19, x20, [sp, #16]
   52ebc:	str	w2, [x1, x0]
   52ec0:	ldp	d8, d9, [sp, #32]
   52ec4:	ldp	x29, x30, [sp], #64
   52ec8:	ret
   52ecc:	movi	d2, #0x0
   52ed0:	fcmp	s0, #0.0
   52ed4:	fccmp	d1, d2, #0x4, eq  // eq = none
   52ed8:	fccmp	d9, d2, #0x4, ne  // ne = any
   52edc:	b.ne	52ea8 <f32mulf32x@@GLIBC_2.28+0xd0>  // b.any
   52ee0:	ldp	x19, x20, [sp, #16]
   52ee4:	ldp	d8, d9, [sp, #32]
   52ee8:	ldp	x29, x30, [sp], #64
   52eec:	ret
   52ef0:	str	d1, [sp, #56]
   52ef4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   52ef8:	ldr	d1, [sp, #56]
   52efc:	b	52e54 <f32mulf32x@@GLIBC_2.28+0x7c>
   52f00:	msr	fpcr, x0
   52f04:	b	52e10 <f32mulf32x@@GLIBC_2.28+0x38>
   52f08:	msr	fpcr, x2
   52f0c:	b	52e40 <f32mulf32x@@GLIBC_2.28+0x68>
   52f10:	fcmp	d9, d1
   52f14:	b.vs	52ee0 <f32mulf32x@@GLIBC_2.28+0x108>
   52f18:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52f1c:	ldr	x0, [x0, #3976]
   52f20:	mrs	x1, tpidr_el0
   52f24:	mov	w2, #0x21                  	// #33
   52f28:	str	w2, [x1, x0]
   52f2c:	b	52ee0 <f32mulf32x@@GLIBC_2.28+0x108>

0000000000052f30 <f32xmulf64@@GLIBC_2.28>:
   52f30:	fmov	d2, d0
   52f34:	fmul	d0, d0, d1
   52f38:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   52f3c:	fmov	d3, x0
   52f40:	fabs	d4, d0
   52f44:	fcmp	d4, d3
   52f48:	b.ls	52f84 <f32xmulf64@@GLIBC_2.28+0x54>  // b.plast
   52f4c:	fcmp	d0, d0
   52f50:	b.vs	52f9c <f32xmulf64@@GLIBC_2.28+0x6c>
   52f54:	fabs	d2, d2
   52f58:	fcmp	d2, d3
   52f5c:	b.hi	52f80 <f32xmulf64@@GLIBC_2.28+0x50>  // b.pmore
   52f60:	fabs	d1, d1
   52f64:	fcmp	d1, d3
   52f68:	b.hi	52f80 <f32xmulf64@@GLIBC_2.28+0x50>  // b.pmore
   52f6c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52f70:	ldr	x0, [x0, #3976]
   52f74:	mrs	x1, tpidr_el0
   52f78:	mov	w2, #0x22                  	// #34
   52f7c:	str	w2, [x1, x0]
   52f80:	ret
   52f84:	fcmp	d2, #0.0
   52f88:	movi	d2, #0x0
   52f8c:	fccmp	d1, d2, #0x4, ne  // ne = any
   52f90:	fccmp	d0, d2, #0x0, ne  // ne = any
   52f94:	b.eq	52f6c <f32xmulf64@@GLIBC_2.28+0x3c>  // b.none
   52f98:	ret
   52f9c:	fcmp	d2, d1
   52fa0:	b.vs	52f80 <f32xmulf64@@GLIBC_2.28+0x50>
   52fa4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   52fa8:	ldr	x0, [x0, #3976]
   52fac:	mrs	x1, tpidr_el0
   52fb0:	mov	w2, #0x21                  	// #33
   52fb4:	str	w2, [x1, x0]
   52fb8:	ret
   52fbc:	nop

0000000000052fc0 <f32mulf128@@GLIBC_2.28>:
   52fc0:	stp	x29, x30, [sp, #-112]!
   52fc4:	mov	x29, sp
   52fc8:	stp	x21, x22, [sp, #32]
   52fcc:	str	q1, [sp, #80]
   52fd0:	ldp	x22, x21, [sp, #80]
   52fd4:	stp	x19, x20, [sp, #16]
   52fd8:	stp	x23, x24, [sp, #48]
   52fdc:	str	x25, [sp, #64]
   52fe0:	str	d8, [sp, #72]
   52fe4:	str	q0, [sp, #96]
   52fe8:	mrs	x23, fpcr
   52fec:	mrs	x20, fpsr
   52ff0:	mov	w0, #0xe0ff                	// #57599
   52ff4:	and	w1, w20, #0xffffffe0
   52ff8:	movk	w0, #0xff3f, lsl #16
   52ffc:	and	w0, w23, w0
   53000:	orr	w0, w0, #0xc00000
   53004:	cmp	w23, w0
   53008:	b.ne	531b8 <f32mulf128@@GLIBC_2.28+0x1f8>  // b.any
   5300c:	cmp	w20, w1
   53010:	b.eq	53018 <f32mulf128@@GLIBC_2.28+0x58>  // b.none
   53014:	msr	fpsr, x1
   53018:	stp	x22, x21, [sp, #80]
   5301c:	ldr	q0, [sp, #96]
   53020:	ldr	q1, [sp, #80]
   53024:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   53028:	fmov	x24, d0
   5302c:	fmov	x25, v0.d[1]
   53030:	mrs	x1, fpcr
   53034:	mrs	x19, fpsr
   53038:	and	w0, w19, #0x1f
   5303c:	cmp	w1, w23
   53040:	orr	w20, w0, w20
   53044:	b.ne	531c0 <f32mulf128@@GLIBC_2.28+0x200>  // b.any
   53048:	cmp	w19, w20
   5304c:	b.eq	53054 <f32mulf128@@GLIBC_2.28+0x94>  // b.none
   53050:	msr	fpsr, x20
   53054:	tst	w0, w23, lsr #8
   53058:	b.ne	531a8 <f32mulf128@@GLIBC_2.28+0x1e8>  // b.any
   5305c:	fmov	x0, d0
   53060:	ubfx	x19, x19, #4, #1
   53064:	orr	w19, w19, w0
   53068:	bfxil	x24, x19, #0, #32
   5306c:	fmov	d0, x24
   53070:	fmov	v0.d[1], x25
   53074:	bl	57ca8 <f64xsubf128@@GLIBC_2.28+0x3f28>
   53078:	fmov	s8, s0
   5307c:	fabs	s0, s0
   53080:	mov	w0, #0x7f7fffff            	// #2139095039
   53084:	fmov	s1, w0
   53088:	fcmp	s0, s1
   5308c:	b.ls	53150 <f32mulf128@@GLIBC_2.28+0x190>  // b.plast
   53090:	fcmp	s8, s8
   53094:	b.vs	531c8 <f32mulf128@@GLIBC_2.28+0x208>
   53098:	ldp	x20, x0, [sp, #96]
   5309c:	and	x19, x0, #0x7fffffffffffffff
   530a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   530a4:	add	x0, x0, #0x300
   530a8:	stp	x20, x19, [sp, #80]
   530ac:	ldr	q0, [sp, #80]
   530b0:	ldr	q1, [x0]
   530b4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   530b8:	cbnz	w0, 53188 <f32mulf128@@GLIBC_2.28+0x1c8>
   530bc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   530c0:	add	x0, x0, #0x300
   530c4:	stp	x20, x19, [sp, #80]
   530c8:	ldr	q1, [x0]
   530cc:	ldr	q0, [sp, #80]
   530d0:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   530d4:	cmp	w0, #0x0
   530d8:	b.gt	53188 <f32mulf128@@GLIBC_2.28+0x1c8>
   530dc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   530e0:	add	x0, x0, #0x300
   530e4:	and	x21, x21, #0x7fffffffffffffff
   530e8:	stp	x22, x21, [sp, #80]
   530ec:	ldr	q1, [x0]
   530f0:	ldr	q0, [sp, #80]
   530f4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   530f8:	cbnz	w0, 53188 <f32mulf128@@GLIBC_2.28+0x1c8>
   530fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53100:	add	x0, x0, #0x300
   53104:	stp	x22, x21, [sp, #80]
   53108:	ldr	q1, [x0]
   5310c:	ldr	q0, [sp, #80]
   53110:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   53114:	cmp	w0, #0x0
   53118:	b.gt	53188 <f32mulf128@@GLIBC_2.28+0x1c8>
   5311c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53120:	ldr	x0, [x0, #3976]
   53124:	mrs	x1, tpidr_el0
   53128:	mov	w2, #0x22                  	// #34
   5312c:	fmov	s0, s8
   53130:	ldp	x19, x20, [sp, #16]
   53134:	str	w2, [x1, x0]
   53138:	ldp	x21, x22, [sp, #32]
   5313c:	ldp	x23, x24, [sp, #48]
   53140:	ldr	x25, [sp, #64]
   53144:	ldr	d8, [sp, #72]
   53148:	ldp	x29, x30, [sp], #112
   5314c:	ret
   53150:	stp	x22, x21, [sp, #80]
   53154:	fcmp	s8, #0.0
   53158:	movi	v1.2d, #0x0
   5315c:	ldr	q0, [sp, #80]
   53160:	cset	w19, eq  // eq = none
   53164:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   53168:	cmp	w0, #0x0
   5316c:	movi	v1.2d, #0x0
   53170:	ldr	q0, [sp, #96]
   53174:	csel	w19, w19, wzr, ne  // ne = any
   53178:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   5317c:	cmp	w0, #0x0
   53180:	csel	w19, w19, wzr, ne  // ne = any
   53184:	cbnz	w19, 5311c <f32mulf128@@GLIBC_2.28+0x15c>
   53188:	fmov	s0, s8
   5318c:	ldr	d8, [sp, #72]
   53190:	ldp	x19, x20, [sp, #16]
   53194:	ldp	x21, x22, [sp, #32]
   53198:	ldp	x23, x24, [sp, #48]
   5319c:	ldr	x25, [sp, #64]
   531a0:	ldp	x29, x30, [sp], #112
   531a4:	ret
   531a8:	str	q0, [sp, #80]
   531ac:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   531b0:	ldr	q0, [sp, #80]
   531b4:	b	5305c <f32mulf128@@GLIBC_2.28+0x9c>
   531b8:	msr	fpcr, x0
   531bc:	b	5300c <f32mulf128@@GLIBC_2.28+0x4c>
   531c0:	msr	fpcr, x23
   531c4:	b	53048 <f32mulf128@@GLIBC_2.28+0x88>
   531c8:	stp	x22, x21, [sp, #80]
   531cc:	ldr	q0, [sp, #96]
   531d0:	ldr	q1, [sp, #80]
   531d4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   531d8:	cbnz	w0, 53188 <f32mulf128@@GLIBC_2.28+0x1c8>
   531dc:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   531e0:	ldr	x0, [x0, #3976]
   531e4:	mrs	x1, tpidr_el0
   531e8:	mov	w2, #0x21                  	// #33
   531ec:	str	w2, [x1, x0]
   531f0:	b	53188 <f32mulf128@@GLIBC_2.28+0x1c8>
   531f4:	nop

00000000000531f8 <dmull@@GLIBC_2.28>:
   531f8:	stp	x29, x30, [sp, #-112]!
   531fc:	mov	x29, sp
   53200:	stp	x21, x22, [sp, #32]
   53204:	str	q1, [sp, #80]
   53208:	ldp	x22, x21, [sp, #80]
   5320c:	stp	x19, x20, [sp, #16]
   53210:	stp	x23, x24, [sp, #48]
   53214:	str	x25, [sp, #64]
   53218:	str	d8, [sp, #72]
   5321c:	str	q0, [sp, #96]
   53220:	mrs	x23, fpcr
   53224:	mrs	x20, fpsr
   53228:	mov	w0, #0xe0ff                	// #57599
   5322c:	and	w1, w20, #0xffffffe0
   53230:	movk	w0, #0xff3f, lsl #16
   53234:	and	w0, w23, w0
   53238:	orr	w0, w0, #0xc00000
   5323c:	cmp	w23, w0
   53240:	b.ne	533f0 <dmull@@GLIBC_2.28+0x1f8>  // b.any
   53244:	cmp	w20, w1
   53248:	b.eq	53250 <dmull@@GLIBC_2.28+0x58>  // b.none
   5324c:	msr	fpsr, x1
   53250:	stp	x22, x21, [sp, #80]
   53254:	ldr	q0, [sp, #96]
   53258:	ldr	q1, [sp, #80]
   5325c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   53260:	fmov	x24, d0
   53264:	fmov	x25, v0.d[1]
   53268:	mrs	x1, fpcr
   5326c:	mrs	x19, fpsr
   53270:	and	w0, w19, #0x1f
   53274:	cmp	w1, w23
   53278:	orr	w20, w0, w20
   5327c:	b.ne	533f8 <dmull@@GLIBC_2.28+0x200>  // b.any
   53280:	cmp	w19, w20
   53284:	b.eq	5328c <dmull@@GLIBC_2.28+0x94>  // b.none
   53288:	msr	fpsr, x20
   5328c:	tst	w0, w23, lsr #8
   53290:	b.ne	533e0 <dmull@@GLIBC_2.28+0x1e8>  // b.any
   53294:	fmov	x0, d0
   53298:	ubfx	x19, x19, #4, #1
   5329c:	orr	w19, w19, w0
   532a0:	bfxil	x24, x19, #0, #32
   532a4:	fmov	d0, x24
   532a8:	fmov	v0.d[1], x25
   532ac:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
   532b0:	fmov	d8, d0
   532b4:	fabs	d0, d0
   532b8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   532bc:	fmov	d1, x0
   532c0:	fcmp	d0, d1
   532c4:	b.ls	53388 <dmull@@GLIBC_2.28+0x190>  // b.plast
   532c8:	fcmp	d8, d8
   532cc:	b.vs	53400 <dmull@@GLIBC_2.28+0x208>
   532d0:	ldp	x20, x0, [sp, #96]
   532d4:	and	x19, x0, #0x7fffffffffffffff
   532d8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   532dc:	add	x0, x0, #0x300
   532e0:	stp	x20, x19, [sp, #80]
   532e4:	ldr	q0, [sp, #80]
   532e8:	ldr	q1, [x0]
   532ec:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   532f0:	cbnz	w0, 533c0 <dmull@@GLIBC_2.28+0x1c8>
   532f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   532f8:	add	x0, x0, #0x300
   532fc:	stp	x20, x19, [sp, #80]
   53300:	ldr	q1, [x0]
   53304:	ldr	q0, [sp, #80]
   53308:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   5330c:	cmp	w0, #0x0
   53310:	b.gt	533c0 <dmull@@GLIBC_2.28+0x1c8>
   53314:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53318:	add	x0, x0, #0x300
   5331c:	and	x21, x21, #0x7fffffffffffffff
   53320:	stp	x22, x21, [sp, #80]
   53324:	ldr	q1, [x0]
   53328:	ldr	q0, [sp, #80]
   5332c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53330:	cbnz	w0, 533c0 <dmull@@GLIBC_2.28+0x1c8>
   53334:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53338:	add	x0, x0, #0x300
   5333c:	stp	x22, x21, [sp, #80]
   53340:	ldr	q1, [x0]
   53344:	ldr	q0, [sp, #80]
   53348:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   5334c:	cmp	w0, #0x0
   53350:	b.gt	533c0 <dmull@@GLIBC_2.28+0x1c8>
   53354:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53358:	ldr	x0, [x0, #3976]
   5335c:	mrs	x1, tpidr_el0
   53360:	mov	w2, #0x22                  	// #34
   53364:	fmov	d0, d8
   53368:	ldp	x19, x20, [sp, #16]
   5336c:	str	w2, [x1, x0]
   53370:	ldp	x21, x22, [sp, #32]
   53374:	ldp	x23, x24, [sp, #48]
   53378:	ldr	x25, [sp, #64]
   5337c:	ldr	d8, [sp, #72]
   53380:	ldp	x29, x30, [sp], #112
   53384:	ret
   53388:	stp	x22, x21, [sp, #80]
   5338c:	fcmp	d8, #0.0
   53390:	movi	v1.2d, #0x0
   53394:	ldr	q0, [sp, #80]
   53398:	cset	w19, eq  // eq = none
   5339c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   533a0:	cmp	w0, #0x0
   533a4:	movi	v1.2d, #0x0
   533a8:	ldr	q0, [sp, #96]
   533ac:	csel	w19, w19, wzr, ne  // ne = any
   533b0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   533b4:	cmp	w0, #0x0
   533b8:	csel	w19, w19, wzr, ne  // ne = any
   533bc:	cbnz	w19, 53354 <dmull@@GLIBC_2.28+0x15c>
   533c0:	fmov	d0, d8
   533c4:	ldr	d8, [sp, #72]
   533c8:	ldp	x19, x20, [sp, #16]
   533cc:	ldp	x21, x22, [sp, #32]
   533d0:	ldp	x23, x24, [sp, #48]
   533d4:	ldr	x25, [sp, #64]
   533d8:	ldp	x29, x30, [sp], #112
   533dc:	ret
   533e0:	str	q0, [sp, #80]
   533e4:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   533e8:	ldr	q0, [sp, #80]
   533ec:	b	53294 <dmull@@GLIBC_2.28+0x9c>
   533f0:	msr	fpcr, x0
   533f4:	b	53244 <dmull@@GLIBC_2.28+0x4c>
   533f8:	msr	fpcr, x23
   533fc:	b	53280 <dmull@@GLIBC_2.28+0x88>
   53400:	stp	x22, x21, [sp, #80]
   53404:	ldr	q0, [sp, #96]
   53408:	ldr	q1, [sp, #80]
   5340c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53410:	cbnz	w0, 533c0 <dmull@@GLIBC_2.28+0x1c8>
   53414:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53418:	ldr	x0, [x0, #3976]
   5341c:	mrs	x1, tpidr_el0
   53420:	mov	w2, #0x21                  	// #33
   53424:	str	w2, [x1, x0]
   53428:	b	533c0 <dmull@@GLIBC_2.28+0x1c8>
   5342c:	nop

0000000000053430 <f64xmulf128@@GLIBC_2.28>:
   53430:	stp	x29, x30, [sp, #-112]!
   53434:	mov	x29, sp
   53438:	stp	x21, x22, [sp, #32]
   5343c:	stp	x23, x24, [sp, #48]
   53440:	str	q0, [sp, #80]
   53444:	str	q1, [sp, #96]
   53448:	ldp	x23, x21, [sp, #80]
   5344c:	stp	x19, x20, [sp, #16]
   53450:	ldp	x24, x22, [sp, #96]
   53454:	stp	x24, x22, [sp, #80]
   53458:	stp	x23, x21, [sp, #96]
   5345c:	ldr	q1, [sp, #80]
   53460:	ldr	q0, [sp, #96]
   53464:	str	x25, [sp, #64]
   53468:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   5346c:	str	q0, [sp, #80]
   53470:	ldp	x19, x20, [sp, #80]
   53474:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53478:	add	x0, x0, #0x300
   5347c:	ldr	q1, [x0]
   53480:	and	x25, x20, #0x7fffffffffffffff
   53484:	str	x25, [sp, #88]
   53488:	ldr	q0, [sp, #80]
   5348c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53490:	cbnz	w0, 53528 <f64xmulf128@@GLIBC_2.28+0xf8>
   53494:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53498:	add	x0, x0, #0x300
   5349c:	stp	x19, x25, [sp, #80]
   534a0:	ldr	q1, [x0]
   534a4:	ldr	q0, [sp, #80]
   534a8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   534ac:	cmp	w0, #0x0
   534b0:	b.gt	53528 <f64xmulf128@@GLIBC_2.28+0xf8>
   534b4:	movi	v1.2d, #0x0
   534b8:	stp	x23, x21, [sp, #80]
   534bc:	ldr	q0, [sp, #80]
   534c0:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   534c4:	stp	x24, x22, [sp, #80]
   534c8:	cmp	w0, #0x0
   534cc:	movi	v1.2d, #0x0
   534d0:	ldr	q0, [sp, #80]
   534d4:	cset	w21, ne  // ne = any
   534d8:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   534dc:	stp	x19, x20, [sp, #80]
   534e0:	cmp	w0, #0x0
   534e4:	movi	v1.2d, #0x0
   534e8:	cset	w0, ne  // ne = any
   534ec:	ldr	q0, [sp, #80]
   534f0:	and	w21, w21, w0
   534f4:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   534f8:	cmp	w0, #0x0
   534fc:	cset	w0, eq  // eq = none
   53500:	tst	w0, w21
   53504:	b.ne	535c0 <f64xmulf128@@GLIBC_2.28+0x190>  // b.any
   53508:	stp	x19, x20, [sp, #80]
   5350c:	ldp	x19, x20, [sp, #16]
   53510:	ldp	x21, x22, [sp, #32]
   53514:	ldp	x23, x24, [sp, #48]
   53518:	ldr	x25, [sp, #64]
   5351c:	ldr	q0, [sp, #80]
   53520:	ldp	x29, x30, [sp], #112
   53524:	ret
   53528:	stp	x19, x20, [sp, #80]
   5352c:	stp	x19, x20, [sp, #96]
   53530:	ldr	q1, [sp, #80]
   53534:	ldr	q0, [sp, #96]
   53538:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5353c:	cbnz	w0, 535f4 <f64xmulf128@@GLIBC_2.28+0x1c4>
   53540:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53544:	add	x0, x0, #0x300
   53548:	and	x21, x21, #0x7fffffffffffffff
   5354c:	stp	x23, x21, [sp, #80]
   53550:	ldr	q1, [x0]
   53554:	ldr	q0, [sp, #80]
   53558:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5355c:	cbnz	w0, 53508 <f64xmulf128@@GLIBC_2.28+0xd8>
   53560:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53564:	add	x0, x0, #0x300
   53568:	stp	x23, x21, [sp, #80]
   5356c:	ldr	q1, [x0]
   53570:	ldr	q0, [sp, #80]
   53574:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   53578:	cmp	w0, #0x0
   5357c:	b.gt	53508 <f64xmulf128@@GLIBC_2.28+0xd8>
   53580:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53584:	add	x0, x0, #0x300
   53588:	and	x22, x22, #0x7fffffffffffffff
   5358c:	stp	x24, x22, [sp, #80]
   53590:	ldr	q1, [x0]
   53594:	ldr	q0, [sp, #80]
   53598:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5359c:	cbnz	w0, 53508 <f64xmulf128@@GLIBC_2.28+0xd8>
   535a0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   535a4:	add	x0, x0, #0x300
   535a8:	stp	x24, x22, [sp, #80]
   535ac:	ldr	q1, [x0]
   535b0:	ldr	q0, [sp, #80]
   535b4:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   535b8:	cmp	w0, #0x0
   535bc:	b.gt	53508 <f64xmulf128@@GLIBC_2.28+0xd8>
   535c0:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   535c4:	ldr	x0, [x0, #3976]
   535c8:	mrs	x1, tpidr_el0
   535cc:	mov	w2, #0x22                  	// #34
   535d0:	stp	x19, x20, [sp, #80]
   535d4:	ldp	x19, x20, [sp, #16]
   535d8:	str	w2, [x1, x0]
   535dc:	ldp	x21, x22, [sp, #32]
   535e0:	ldp	x23, x24, [sp, #48]
   535e4:	ldr	x25, [sp, #64]
   535e8:	ldr	q0, [sp, #80]
   535ec:	ldp	x29, x30, [sp], #112
   535f0:	ret
   535f4:	stp	x24, x22, [sp, #80]
   535f8:	stp	x23, x21, [sp, #96]
   535fc:	ldr	q1, [sp, #80]
   53600:	ldr	q0, [sp, #96]
   53604:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53608:	cbnz	w0, 53508 <f64xmulf128@@GLIBC_2.28+0xd8>
   5360c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53610:	ldr	x0, [x0, #3976]
   53614:	mrs	x1, tpidr_el0
   53618:	mov	w2, #0x21                  	// #33
   5361c:	str	w2, [x1, x0]
   53620:	b	53508 <f64xmulf128@@GLIBC_2.28+0xd8>
   53624:	nop

0000000000053628 <f32subf32x@@GLIBC_2.28>:
   53628:	stp	x29, x30, [sp, #-64]!
   5362c:	fcmp	d0, d1
   53630:	mov	x29, sp
   53634:	stp	d8, d9, [sp, #32]
   53638:	fmov	d8, d0
   5363c:	b.ne	53684 <f32subf32x@@GLIBC_2.28+0x5c>  // b.any
   53640:	fsub	d2, d0, d1
   53644:	mov	w0, #0x7f7fffff            	// #2139095039
   53648:	fmov	s3, w0
   5364c:	fcvt	s0, d2
   53650:	fabs	s2, s0
   53654:	fcmp	s2, s3
   53658:	b.ls	53678 <f32subf32x@@GLIBC_2.28+0x50>  // b.plast
   5365c:	fcmp	s0, s0
   53660:	b.vc	53728 <f32subf32x@@GLIBC_2.28+0x100>
   53664:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53668:	ldr	x0, [x0, #3976]
   5366c:	mrs	x1, tpidr_el0
   53670:	mov	w2, #0x21                  	// #33
   53674:	str	w2, [x1, x0]
   53678:	ldp	d8, d9, [sp, #32]
   5367c:	ldp	x29, x30, [sp], #64
   53680:	ret
   53684:	stp	x19, x20, [sp, #16]
   53688:	mrs	x2, fpcr
   5368c:	mrs	x1, fpsr
   53690:	mov	w0, #0xe0ff                	// #57599
   53694:	and	w3, w1, #0xffffffe0
   53698:	movk	w0, #0xff3f, lsl #16
   5369c:	and	w0, w2, w0
   536a0:	orr	w0, w0, #0xc00000
   536a4:	cmp	w2, w0
   536a8:	b.ne	5379c <f32subf32x@@GLIBC_2.28+0x174>  // b.any
   536ac:	cmp	w1, w3
   536b0:	b.eq	536b8 <f32subf32x@@GLIBC_2.28+0x90>  // b.none
   536b4:	msr	fpsr, x3
   536b8:	fmov	d9, d8
   536bc:	fsub	d9, d9, d1
   536c0:	fmov	x19, d9
   536c4:	mrs	x3, fpcr
   536c8:	mrs	x20, fpsr
   536cc:	and	w0, w20, #0x1f
   536d0:	cmp	w3, w2
   536d4:	orr	w1, w0, w1
   536d8:	b.ne	53794 <f32subf32x@@GLIBC_2.28+0x16c>  // b.any
   536dc:	cmp	w20, w1
   536e0:	b.eq	536e8 <f32subf32x@@GLIBC_2.28+0xc0>  // b.none
   536e4:	msr	fpsr, x1
   536e8:	tst	w0, w2, lsr #8
   536ec:	b.ne	537a4 <f32subf32x@@GLIBC_2.28+0x17c>  // b.any
   536f0:	fmov	x0, d9
   536f4:	ubfx	x20, x20, #4, #1
   536f8:	mov	w1, #0x7f7fffff            	// #2139095039
   536fc:	fmov	s3, w1
   53700:	orr	w0, w20, w0
   53704:	bfxil	x19, x0, #0, #32
   53708:	fmov	d2, x19
   5370c:	fcvt	s0, d2
   53710:	fabs	s2, s0
   53714:	fcmp	s2, s3
   53718:	b.ls	53768 <f32subf32x@@GLIBC_2.28+0x140>  // b.plast
   5371c:	fcmp	s0, s0
   53720:	ldp	x19, x20, [sp, #16]
   53724:	b.vs	537b4 <f32subf32x@@GLIBC_2.28+0x18c>
   53728:	fabs	d8, d8
   5372c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   53730:	fmov	d2, x0
   53734:	fcmp	d8, d2
   53738:	b.hi	53678 <f32subf32x@@GLIBC_2.28+0x50>  // b.pmore
   5373c:	fabs	d1, d1
   53740:	fcmp	d1, d2
   53744:	b.hi	53678 <f32subf32x@@GLIBC_2.28+0x50>  // b.pmore
   53748:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   5374c:	ldr	x0, [x0, #3976]
   53750:	mrs	x1, tpidr_el0
   53754:	mov	w2, #0x22                  	// #34
   53758:	ldp	d8, d9, [sp, #32]
   5375c:	str	w2, [x1, x0]
   53760:	ldp	x29, x30, [sp], #64
   53764:	ret
   53768:	fcmp	s0, #0.0
   5376c:	b.ne	537c0 <f32subf32x@@GLIBC_2.28+0x198>  // b.any
   53770:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53774:	ldr	x0, [x0, #3976]
   53778:	mrs	x1, tpidr_el0
   5377c:	mov	w2, #0x22                  	// #34
   53780:	ldp	x19, x20, [sp, #16]
   53784:	str	w2, [x1, x0]
   53788:	ldp	d8, d9, [sp, #32]
   5378c:	ldp	x29, x30, [sp], #64
   53790:	ret
   53794:	msr	fpcr, x2
   53798:	b	536dc <f32subf32x@@GLIBC_2.28+0xb4>
   5379c:	msr	fpcr, x0
   537a0:	b	536ac <f32subf32x@@GLIBC_2.28+0x84>
   537a4:	str	d1, [sp, #56]
   537a8:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   537ac:	ldr	d1, [sp, #56]
   537b0:	b	536f0 <f32subf32x@@GLIBC_2.28+0xc8>
   537b4:	fcmp	d8, d1
   537b8:	b.vc	53664 <f32subf32x@@GLIBC_2.28+0x3c>
   537bc:	b	53678 <f32subf32x@@GLIBC_2.28+0x50>
   537c0:	ldp	x19, x20, [sp, #16]
   537c4:	b	53678 <f32subf32x@@GLIBC_2.28+0x50>

00000000000537c8 <f32xsubf64@@GLIBC_2.28>:
   537c8:	fmov	d2, d0
   537cc:	fsub	d0, d0, d1
   537d0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   537d4:	fmov	d3, x0
   537d8:	fabs	d4, d0
   537dc:	fcmp	d4, d3
   537e0:	b.ls	5381c <f32xsubf64@@GLIBC_2.28+0x54>  // b.plast
   537e4:	fcmp	d0, d0
   537e8:	b.vs	53840 <f32xsubf64@@GLIBC_2.28+0x78>
   537ec:	fabs	d2, d2
   537f0:	fcmp	d2, d3
   537f4:	b.hi	53818 <f32xsubf64@@GLIBC_2.28+0x50>  // b.pmore
   537f8:	fabs	d1, d1
   537fc:	fcmp	d1, d3
   53800:	b.hi	53818 <f32xsubf64@@GLIBC_2.28+0x50>  // b.pmore
   53804:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53808:	ldr	x0, [x0, #3976]
   5380c:	mrs	x1, tpidr_el0
   53810:	mov	w2, #0x22                  	// #34
   53814:	str	w2, [x1, x0]
   53818:	ret
   5381c:	fcmp	d0, #0.0
   53820:	fccmp	d2, d1, #0x4, eq  // eq = none
   53824:	b.eq	53818 <f32xsubf64@@GLIBC_2.28+0x50>  // b.none
   53828:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   5382c:	ldr	x0, [x0, #3976]
   53830:	mrs	x1, tpidr_el0
   53834:	mov	w2, #0x22                  	// #34
   53838:	str	w2, [x1, x0]
   5383c:	b	53818 <f32xsubf64@@GLIBC_2.28+0x50>
   53840:	fcmp	d2, d1
   53844:	b.vs	53818 <f32xsubf64@@GLIBC_2.28+0x50>
   53848:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   5384c:	ldr	x0, [x0, #3976]
   53850:	mrs	x1, tpidr_el0
   53854:	mov	w2, #0x21                  	// #33
   53858:	str	w2, [x1, x0]
   5385c:	ret

0000000000053860 <f32subf128@@GLIBC_2.28>:
   53860:	stp	x29, x30, [sp, #-112]!
   53864:	mov	x29, sp
   53868:	stp	x19, x20, [sp, #16]
   5386c:	str	d8, [sp, #72]
   53870:	str	q1, [sp, #80]
   53874:	str	q0, [sp, #96]
   53878:	ldp	x20, x19, [sp, #80]
   5387c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   53880:	cbnz	w0, 538fc <f32subf128@@GLIBC_2.28+0x9c>
   53884:	stp	x20, x19, [sp, #80]
   53888:	ldr	q0, [sp, #96]
   5388c:	ldr	q1, [sp, #80]
   53890:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   53894:	bl	57ca8 <f64xsubf128@@GLIBC_2.28+0x3f28>
   53898:	fmov	s8, s0
   5389c:	fabs	s0, s0
   538a0:	mov	w0, #0x7f7fffff            	// #2139095039
   538a4:	fmov	s1, w0
   538a8:	fcmp	s0, s1
   538ac:	b.ls	538e8 <f32subf128@@GLIBC_2.28+0x88>  // b.plast
   538b0:	fcmp	s8, s8
   538b4:	b.vs	53ac8 <f32subf128@@GLIBC_2.28+0x268>
   538b8:	stp	x21, x22, [sp, #32]
   538bc:	b	539c0 <f32subf128@@GLIBC_2.28+0x160>
   538c0:	fcmp	s8, #0.0
   538c4:	b.ne	53ae0 <f32subf128@@GLIBC_2.28+0x280>  // b.any
   538c8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   538cc:	ldr	x0, [x0, #3976]
   538d0:	mrs	x1, tpidr_el0
   538d4:	ldp	x21, x22, [sp, #32]
   538d8:	mov	w2, #0x22                  	// #34
   538dc:	ldp	x23, x24, [sp, #48]
   538e0:	str	w2, [x1, x0]
   538e4:	ldr	x25, [sp, #64]
   538e8:	fmov	s0, s8
   538ec:	ldp	x19, x20, [sp, #16]
   538f0:	ldr	d8, [sp, #72]
   538f4:	ldp	x29, x30, [sp], #112
   538f8:	ret
   538fc:	stp	x21, x22, [sp, #32]
   53900:	stp	x23, x24, [sp, #48]
   53904:	str	x25, [sp, #64]
   53908:	mrs	x23, fpcr
   5390c:	mrs	x22, fpsr
   53910:	mov	w0, #0xe0ff                	// #57599
   53914:	and	w1, w22, #0xffffffe0
   53918:	movk	w0, #0xff3f, lsl #16
   5391c:	and	w0, w23, w0
   53920:	orr	w0, w0, #0xc00000
   53924:	cmp	w23, w0
   53928:	b.ne	53a88 <f32subf128@@GLIBC_2.28+0x228>  // b.any
   5392c:	cmp	w22, w1
   53930:	b.eq	53938 <f32subf128@@GLIBC_2.28+0xd8>  // b.none
   53934:	msr	fpsr, x1
   53938:	stp	x20, x19, [sp, #80]
   5393c:	ldr	q0, [sp, #96]
   53940:	ldr	q1, [sp, #80]
   53944:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   53948:	fmov	x24, d0
   5394c:	fmov	x25, v0.d[1]
   53950:	mrs	x1, fpcr
   53954:	mrs	x21, fpsr
   53958:	and	w0, w21, #0x1f
   5395c:	cmp	w1, w23
   53960:	orr	w22, w0, w22
   53964:	b.ne	53a90 <f32subf128@@GLIBC_2.28+0x230>  // b.any
   53968:	cmp	w21, w22
   5396c:	b.eq	53974 <f32subf128@@GLIBC_2.28+0x114>  // b.none
   53970:	msr	fpsr, x22
   53974:	tst	w0, w23, lsr #8
   53978:	b.ne	53a98 <f32subf128@@GLIBC_2.28+0x238>  // b.any
   5397c:	fmov	x0, d0
   53980:	ubfx	x21, x21, #4, #1
   53984:	orr	w21, w21, w0
   53988:	bfxil	x24, x21, #0, #32
   5398c:	fmov	d0, x24
   53990:	fmov	v0.d[1], x25
   53994:	bl	57ca8 <f64xsubf128@@GLIBC_2.28+0x3f28>
   53998:	fmov	s8, s0
   5399c:	fabs	s0, s0
   539a0:	mov	w0, #0x7f7fffff            	// #2139095039
   539a4:	fmov	s1, w0
   539a8:	fcmp	s0, s1
   539ac:	b.ls	538c0 <f32subf128@@GLIBC_2.28+0x60>  // b.plast
   539b0:	fcmp	s8, s8
   539b4:	b.vs	53aa8 <f32subf128@@GLIBC_2.28+0x248>
   539b8:	ldp	x23, x24, [sp, #48]
   539bc:	ldr	x25, [sp, #64]
   539c0:	ldp	x22, x0, [sp, #96]
   539c4:	and	x21, x0, #0x7fffffffffffffff
   539c8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   539cc:	add	x0, x0, #0x300
   539d0:	stp	x22, x21, [sp, #80]
   539d4:	ldr	q0, [sp, #80]
   539d8:	ldr	q1, [x0]
   539dc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   539e0:	cbnz	w0, 53a70 <f32subf128@@GLIBC_2.28+0x210>
   539e4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   539e8:	add	x0, x0, #0x300
   539ec:	stp	x22, x21, [sp, #80]
   539f0:	ldr	q1, [x0]
   539f4:	ldr	q0, [sp, #80]
   539f8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   539fc:	cmp	w0, #0x0
   53a00:	b.gt	53a70 <f32subf128@@GLIBC_2.28+0x210>
   53a04:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53a08:	add	x0, x0, #0x300
   53a0c:	and	x19, x19, #0x7fffffffffffffff
   53a10:	stp	x20, x19, [sp, #80]
   53a14:	ldr	q1, [x0]
   53a18:	ldr	q0, [sp, #80]
   53a1c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53a20:	cbnz	w0, 53a70 <f32subf128@@GLIBC_2.28+0x210>
   53a24:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53a28:	add	x0, x0, #0x300
   53a2c:	stp	x20, x19, [sp, #80]
   53a30:	ldr	q1, [x0]
   53a34:	ldr	q0, [sp, #80]
   53a38:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   53a3c:	cmp	w0, #0x0
   53a40:	b.gt	53a70 <f32subf128@@GLIBC_2.28+0x210>
   53a44:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53a48:	ldr	x0, [x0, #3976]
   53a4c:	mrs	x1, tpidr_el0
   53a50:	mov	w2, #0x22                  	// #34
   53a54:	fmov	s0, s8
   53a58:	ldp	x19, x20, [sp, #16]
   53a5c:	str	w2, [x1, x0]
   53a60:	ldp	x21, x22, [sp, #32]
   53a64:	ldr	d8, [sp, #72]
   53a68:	ldp	x29, x30, [sp], #112
   53a6c:	ret
   53a70:	fmov	s0, s8
   53a74:	ldr	d8, [sp, #72]
   53a78:	ldp	x19, x20, [sp, #16]
   53a7c:	ldp	x21, x22, [sp, #32]
   53a80:	ldp	x29, x30, [sp], #112
   53a84:	ret
   53a88:	msr	fpcr, x0
   53a8c:	b	5392c <f32subf128@@GLIBC_2.28+0xcc>
   53a90:	msr	fpcr, x23
   53a94:	b	53968 <f32subf128@@GLIBC_2.28+0x108>
   53a98:	str	q0, [sp, #80]
   53a9c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   53aa0:	ldr	q0, [sp, #80]
   53aa4:	b	5397c <f32subf128@@GLIBC_2.28+0x11c>
   53aa8:	stp	x20, x19, [sp, #80]
   53aac:	ldr	q0, [sp, #96]
   53ab0:	ldr	q1, [sp, #80]
   53ab4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53ab8:	ldp	x21, x22, [sp, #32]
   53abc:	ldp	x23, x24, [sp, #48]
   53ac0:	ldr	x25, [sp, #64]
   53ac4:	cbnz	w0, 538e8 <f32subf128@@GLIBC_2.28+0x88>
   53ac8:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53acc:	ldr	x0, [x0, #3976]
   53ad0:	mrs	x1, tpidr_el0
   53ad4:	mov	w2, #0x21                  	// #33
   53ad8:	str	w2, [x1, x0]
   53adc:	b	538e8 <f32subf128@@GLIBC_2.28+0x88>
   53ae0:	ldp	x21, x22, [sp, #32]
   53ae4:	ldp	x23, x24, [sp, #48]
   53ae8:	ldr	x25, [sp, #64]
   53aec:	b	538e8 <f32subf128@@GLIBC_2.28+0x88>

0000000000053af0 <dsubl@@GLIBC_2.28>:
   53af0:	stp	x29, x30, [sp, #-112]!
   53af4:	mov	x29, sp
   53af8:	stp	x19, x20, [sp, #16]
   53afc:	str	d8, [sp, #72]
   53b00:	str	q1, [sp, #80]
   53b04:	str	q0, [sp, #96]
   53b08:	ldp	x20, x19, [sp, #80]
   53b0c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   53b10:	cbnz	w0, 53b8c <dsubl@@GLIBC_2.28+0x9c>
   53b14:	stp	x20, x19, [sp, #80]
   53b18:	ldr	q0, [sp, #96]
   53b1c:	ldr	q1, [sp, #80]
   53b20:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   53b24:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
   53b28:	fmov	d8, d0
   53b2c:	fabs	d0, d0
   53b30:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   53b34:	fmov	d1, x0
   53b38:	fcmp	d0, d1
   53b3c:	b.ls	53b78 <dsubl@@GLIBC_2.28+0x88>  // b.plast
   53b40:	fcmp	d8, d8
   53b44:	b.vs	53d58 <dsubl@@GLIBC_2.28+0x268>
   53b48:	stp	x21, x22, [sp, #32]
   53b4c:	b	53c50 <dsubl@@GLIBC_2.28+0x160>
   53b50:	fcmp	d8, #0.0
   53b54:	b.ne	53d70 <dsubl@@GLIBC_2.28+0x280>  // b.any
   53b58:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53b5c:	ldr	x0, [x0, #3976]
   53b60:	mrs	x1, tpidr_el0
   53b64:	ldp	x21, x22, [sp, #32]
   53b68:	mov	w2, #0x22                  	// #34
   53b6c:	ldp	x23, x24, [sp, #48]
   53b70:	str	w2, [x1, x0]
   53b74:	ldr	x25, [sp, #64]
   53b78:	fmov	d0, d8
   53b7c:	ldp	x19, x20, [sp, #16]
   53b80:	ldr	d8, [sp, #72]
   53b84:	ldp	x29, x30, [sp], #112
   53b88:	ret
   53b8c:	stp	x21, x22, [sp, #32]
   53b90:	stp	x23, x24, [sp, #48]
   53b94:	str	x25, [sp, #64]
   53b98:	mrs	x23, fpcr
   53b9c:	mrs	x22, fpsr
   53ba0:	mov	w0, #0xe0ff                	// #57599
   53ba4:	and	w1, w22, #0xffffffe0
   53ba8:	movk	w0, #0xff3f, lsl #16
   53bac:	and	w0, w23, w0
   53bb0:	orr	w0, w0, #0xc00000
   53bb4:	cmp	w23, w0
   53bb8:	b.ne	53d18 <dsubl@@GLIBC_2.28+0x228>  // b.any
   53bbc:	cmp	w22, w1
   53bc0:	b.eq	53bc8 <dsubl@@GLIBC_2.28+0xd8>  // b.none
   53bc4:	msr	fpsr, x1
   53bc8:	stp	x20, x19, [sp, #80]
   53bcc:	ldr	q0, [sp, #96]
   53bd0:	ldr	q1, [sp, #80]
   53bd4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   53bd8:	fmov	x24, d0
   53bdc:	fmov	x25, v0.d[1]
   53be0:	mrs	x1, fpcr
   53be4:	mrs	x21, fpsr
   53be8:	and	w0, w21, #0x1f
   53bec:	cmp	w1, w23
   53bf0:	orr	w22, w0, w22
   53bf4:	b.ne	53d20 <dsubl@@GLIBC_2.28+0x230>  // b.any
   53bf8:	cmp	w21, w22
   53bfc:	b.eq	53c04 <dsubl@@GLIBC_2.28+0x114>  // b.none
   53c00:	msr	fpsr, x22
   53c04:	tst	w0, w23, lsr #8
   53c08:	b.ne	53d28 <dsubl@@GLIBC_2.28+0x238>  // b.any
   53c0c:	fmov	x0, d0
   53c10:	ubfx	x21, x21, #4, #1
   53c14:	orr	w21, w21, w0
   53c18:	bfxil	x24, x21, #0, #32
   53c1c:	fmov	d0, x24
   53c20:	fmov	v0.d[1], x25
   53c24:	bl	57f58 <f64xsubf128@@GLIBC_2.28+0x41d8>
   53c28:	fmov	d8, d0
   53c2c:	fabs	d0, d0
   53c30:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   53c34:	fmov	d1, x0
   53c38:	fcmp	d0, d1
   53c3c:	b.ls	53b50 <dsubl@@GLIBC_2.28+0x60>  // b.plast
   53c40:	fcmp	d8, d8
   53c44:	b.vs	53d38 <dsubl@@GLIBC_2.28+0x248>
   53c48:	ldp	x23, x24, [sp, #48]
   53c4c:	ldr	x25, [sp, #64]
   53c50:	ldp	x22, x0, [sp, #96]
   53c54:	and	x21, x0, #0x7fffffffffffffff
   53c58:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53c5c:	add	x0, x0, #0x300
   53c60:	stp	x22, x21, [sp, #80]
   53c64:	ldr	q0, [sp, #80]
   53c68:	ldr	q1, [x0]
   53c6c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53c70:	cbnz	w0, 53d00 <dsubl@@GLIBC_2.28+0x210>
   53c74:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53c78:	add	x0, x0, #0x300
   53c7c:	stp	x22, x21, [sp, #80]
   53c80:	ldr	q1, [x0]
   53c84:	ldr	q0, [sp, #80]
   53c88:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   53c8c:	cmp	w0, #0x0
   53c90:	b.gt	53d00 <dsubl@@GLIBC_2.28+0x210>
   53c94:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53c98:	add	x0, x0, #0x300
   53c9c:	and	x19, x19, #0x7fffffffffffffff
   53ca0:	stp	x20, x19, [sp, #80]
   53ca4:	ldr	q1, [x0]
   53ca8:	ldr	q0, [sp, #80]
   53cac:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53cb0:	cbnz	w0, 53d00 <dsubl@@GLIBC_2.28+0x210>
   53cb4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53cb8:	add	x0, x0, #0x300
   53cbc:	stp	x20, x19, [sp, #80]
   53cc0:	ldr	q1, [x0]
   53cc4:	ldr	q0, [sp, #80]
   53cc8:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   53ccc:	cmp	w0, #0x0
   53cd0:	b.gt	53d00 <dsubl@@GLIBC_2.28+0x210>
   53cd4:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53cd8:	ldr	x0, [x0, #3976]
   53cdc:	mrs	x1, tpidr_el0
   53ce0:	mov	w2, #0x22                  	// #34
   53ce4:	fmov	d0, d8
   53ce8:	ldp	x19, x20, [sp, #16]
   53cec:	str	w2, [x1, x0]
   53cf0:	ldp	x21, x22, [sp, #32]
   53cf4:	ldr	d8, [sp, #72]
   53cf8:	ldp	x29, x30, [sp], #112
   53cfc:	ret
   53d00:	fmov	d0, d8
   53d04:	ldr	d8, [sp, #72]
   53d08:	ldp	x19, x20, [sp, #16]
   53d0c:	ldp	x21, x22, [sp, #32]
   53d10:	ldp	x29, x30, [sp], #112
   53d14:	ret
   53d18:	msr	fpcr, x0
   53d1c:	b	53bbc <dsubl@@GLIBC_2.28+0xcc>
   53d20:	msr	fpcr, x23
   53d24:	b	53bf8 <dsubl@@GLIBC_2.28+0x108>
   53d28:	str	q0, [sp, #80]
   53d2c:	bl	bbe0 <feraiseexcept@@GLIBC_2.17>
   53d30:	ldr	q0, [sp, #80]
   53d34:	b	53c0c <dsubl@@GLIBC_2.28+0x11c>
   53d38:	stp	x20, x19, [sp, #80]
   53d3c:	ldr	q0, [sp, #96]
   53d40:	ldr	q1, [sp, #80]
   53d44:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53d48:	ldp	x21, x22, [sp, #32]
   53d4c:	ldp	x23, x24, [sp, #48]
   53d50:	ldr	x25, [sp, #64]
   53d54:	cbnz	w0, 53b78 <dsubl@@GLIBC_2.28+0x88>
   53d58:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53d5c:	ldr	x0, [x0, #3976]
   53d60:	mrs	x1, tpidr_el0
   53d64:	mov	w2, #0x21                  	// #33
   53d68:	str	w2, [x1, x0]
   53d6c:	b	53b78 <dsubl@@GLIBC_2.28+0x88>
   53d70:	ldp	x21, x22, [sp, #32]
   53d74:	ldp	x23, x24, [sp, #48]
   53d78:	ldr	x25, [sp, #64]
   53d7c:	b	53b78 <dsubl@@GLIBC_2.28+0x88>

0000000000053d80 <f64xsubf128@@GLIBC_2.28>:
   53d80:	stp	x29, x30, [sp, #-112]!
   53d84:	mov	x29, sp
   53d88:	stp	x21, x22, [sp, #32]
   53d8c:	stp	x23, x24, [sp, #48]
   53d90:	str	x25, [sp, #64]
   53d94:	str	q0, [sp, #80]
   53d98:	str	q1, [sp, #96]
   53d9c:	ldp	x24, x22, [sp, #80]
   53da0:	stp	x19, x20, [sp, #16]
   53da4:	ldr	x25, [sp, #96]
   53da8:	str	x25, [sp, #80]
   53dac:	ldr	x23, [sp, #104]
   53db0:	str	x23, [sp, #88]
   53db4:	str	x24, [sp, #96]
   53db8:	str	x22, [sp, #104]
   53dbc:	ldr	q1, [sp, #80]
   53dc0:	ldr	q0, [sp, #96]
   53dc4:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   53dc8:	str	q0, [sp, #80]
   53dcc:	ldp	x19, x20, [sp, #80]
   53dd0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53dd4:	add	x0, x0, #0x300
   53dd8:	ldr	q1, [x0]
   53ddc:	and	x21, x20, #0x7fffffffffffffff
   53de0:	str	x21, [sp, #88]
   53de4:	ldr	q0, [sp, #80]
   53de8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53dec:	cbnz	w0, 53e80 <f64xsubf128@@GLIBC_2.28+0x100>
   53df0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53df4:	add	x0, x0, #0x300
   53df8:	stp	x19, x21, [sp, #80]
   53dfc:	ldr	q1, [x0]
   53e00:	ldr	q0, [sp, #80]
   53e04:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   53e08:	cmp	w0, #0x0
   53e0c:	b.gt	53e80 <f64xsubf128@@GLIBC_2.28+0x100>
   53e10:	movi	v1.2d, #0x0
   53e14:	stp	x19, x20, [sp, #80]
   53e18:	ldr	q0, [sp, #80]
   53e1c:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   53e20:	stp	x25, x23, [sp, #80]
   53e24:	cmp	w0, #0x0
   53e28:	stp	x24, x22, [sp, #96]
   53e2c:	cset	w21, eq  // eq = none
   53e30:	ldr	q1, [sp, #80]
   53e34:	ldr	q0, [sp, #96]
   53e38:	bl	55f20 <f64xsubf128@@GLIBC_2.28+0x21a0>
   53e3c:	cmp	w0, #0x0
   53e40:	cset	w0, ne  // ne = any
   53e44:	tst	w0, w21
   53e48:	b.eq	53e60 <f64xsubf128@@GLIBC_2.28+0xe0>  // b.none
   53e4c:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53e50:	ldr	x0, [x0, #3976]
   53e54:	mrs	x1, tpidr_el0
   53e58:	mov	w2, #0x22                  	// #34
   53e5c:	str	w2, [x1, x0]
   53e60:	stp	x19, x20, [sp, #80]
   53e64:	ldp	x19, x20, [sp, #16]
   53e68:	ldp	x21, x22, [sp, #32]
   53e6c:	ldp	x23, x24, [sp, #48]
   53e70:	ldr	x25, [sp, #64]
   53e74:	ldr	q0, [sp, #80]
   53e78:	ldp	x29, x30, [sp], #112
   53e7c:	ret
   53e80:	stp	x19, x20, [sp, #80]
   53e84:	stp	x19, x20, [sp, #96]
   53e88:	ldr	q1, [sp, #80]
   53e8c:	ldr	q0, [sp, #96]
   53e90:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53e94:	cbnz	w0, 53f30 <f64xsubf128@@GLIBC_2.28+0x1b0>
   53e98:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53e9c:	add	x0, x0, #0x300
   53ea0:	and	x22, x22, #0x7fffffffffffffff
   53ea4:	stp	x24, x22, [sp, #80]
   53ea8:	ldr	q1, [x0]
   53eac:	ldr	q0, [sp, #80]
   53eb0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53eb4:	cbnz	w0, 53e60 <f64xsubf128@@GLIBC_2.28+0xe0>
   53eb8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53ebc:	add	x0, x0, #0x300
   53ec0:	stp	x24, x22, [sp, #80]
   53ec4:	ldr	q1, [x0]
   53ec8:	ldr	q0, [sp, #80]
   53ecc:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   53ed0:	cmp	w0, #0x0
   53ed4:	b.gt	53e60 <f64xsubf128@@GLIBC_2.28+0xe0>
   53ed8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53edc:	add	x0, x0, #0x300
   53ee0:	and	x23, x23, #0x7fffffffffffffff
   53ee4:	stp	x25, x23, [sp, #80]
   53ee8:	ldr	q1, [x0]
   53eec:	ldr	q0, [sp, #80]
   53ef0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53ef4:	cbnz	w0, 53e60 <f64xsubf128@@GLIBC_2.28+0xe0>
   53ef8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   53efc:	add	x0, x0, #0x300
   53f00:	stp	x25, x23, [sp, #80]
   53f04:	ldr	q1, [x0]
   53f08:	ldr	q0, [sp, #80]
   53f0c:	bl	56028 <f64xsubf128@@GLIBC_2.28+0x22a8>
   53f10:	cmp	w0, #0x0
   53f14:	b.gt	53e60 <f64xsubf128@@GLIBC_2.28+0xe0>
   53f18:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53f1c:	ldr	x0, [x0, #3976]
   53f20:	mrs	x1, tpidr_el0
   53f24:	mov	w2, #0x22                  	// #34
   53f28:	str	w2, [x1, x0]
   53f2c:	b	53e60 <f64xsubf128@@GLIBC_2.28+0xe0>
   53f30:	stp	x25, x23, [sp, #80]
   53f34:	stp	x24, x22, [sp, #96]
   53f38:	ldr	q1, [sp, #80]
   53f3c:	ldr	q0, [sp, #96]
   53f40:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   53f44:	cbnz	w0, 53e60 <f64xsubf128@@GLIBC_2.28+0xe0>
   53f48:	adrp	x0, a7000 <f64xsubf128@@GLIBC_2.28+0x53280>
   53f4c:	ldr	x0, [x0, #3976]
   53f50:	mrs	x1, tpidr_el0
   53f54:	mov	w2, #0x21                  	// #33
   53f58:	str	w2, [x1, x0]
   53f5c:	b	53e60 <f64xsubf128@@GLIBC_2.28+0xe0>
   53f60:	fmul	s7, s1, s3
   53f64:	fmul	s5, s0, s2
   53f68:	fmul	s16, s0, s3
   53f6c:	fmov	s18, s0
   53f70:	fmul	s17, s2, s1
   53f74:	fmov	s4, s1
   53f78:	fsub	s0, s5, s7
   53f7c:	fadd	s1, s16, s17
   53f80:	fcmp	s0, s0
   53f84:	cset	w0, vs
   53f88:	fcmp	s1, s1
   53f8c:	cset	w1, vs
   53f90:	ands	w0, w0, w1
   53f94:	b.eq	540c4 <f64xsubf128@@GLIBC_2.28+0x344>  // b.none
   53f98:	fabs	s19, s18
   53f9c:	mov	w1, #0x7f7fffff            	// #2139095039
   53fa0:	fmov	s6, w1
   53fa4:	fabs	s21, s4
   53fa8:	fcmp	s19, s6
   53fac:	b.le	540c8 <f64xsubf128@@GLIBC_2.28+0x348>
   53fb0:	mov	w1, #0x7f7fffff            	// #2139095039
   53fb4:	fmov	s6, w1
   53fb8:	movi	v20.2s, #0x80, lsl #24
   53fbc:	fcmp	s19, s6
   53fc0:	cset	w1, gt
   53fc4:	fcmp	s21, s6
   53fc8:	scvtf	s19, w1
   53fcc:	cset	w1, gt
   53fd0:	fcmp	s2, s2
   53fd4:	scvtf	s6, w1
   53fd8:	bif	v18.8b, v19.8b, v20.8b
   53fdc:	bif	v4.8b, v6.8b, v20.8b
   53fe0:	b.vs	54104 <f64xsubf128@@GLIBC_2.28+0x384>
   53fe4:	fcmp	s3, s3
   53fe8:	b.vs	54110 <f64xsubf128@@GLIBC_2.28+0x390>
   53fec:	fabs	s19, s2
   53ff0:	mov	w1, #0x7f7fffff            	// #2139095039
   53ff4:	fmov	s6, w1
   53ff8:	fabs	s20, s3
   53ffc:	fcmp	s19, s6
   54000:	b.gt	54068 <f64xsubf128@@GLIBC_2.28+0x2e8>
   54004:	fcmp	s20, s6
   54008:	b.gt	54068 <f64xsubf128@@GLIBC_2.28+0x2e8>
   5400c:	cbnz	w0, 540a4 <f64xsubf128@@GLIBC_2.28+0x324>
   54010:	fabs	s5, s5
   54014:	fcmp	s5, s6
   54018:	b.gt	54038 <f64xsubf128@@GLIBC_2.28+0x2b8>
   5401c:	fabs	s7, s7
   54020:	fcmp	s7, s6
   54024:	b.gt	54038 <f64xsubf128@@GLIBC_2.28+0x2b8>
   54028:	fabs	s16, s16
   5402c:	fcmp	s16, s6
   54030:	b.le	540d8 <f64xsubf128@@GLIBC_2.28+0x358>
   54034:	nop
   54038:	fcmp	s18, s18
   5403c:	b.vs	54140 <f64xsubf128@@GLIBC_2.28+0x3c0>
   54040:	fcmp	s4, s4
   54044:	b.vs	54130 <f64xsubf128@@GLIBC_2.28+0x3b0>
   54048:	fcmp	s2, s2
   5404c:	b.vs	54120 <f64xsubf128@@GLIBC_2.28+0x3a0>
   54050:	fcmp	s3, s3
   54054:	b.vc	540a4 <f64xsubf128@@GLIBC_2.28+0x324>
   54058:	movi	v0.2s, #0x0
   5405c:	movi	v1.2s, #0x80, lsl #24
   54060:	bif	v3.8b, v0.8b, v1.8b
   54064:	b	540a4 <f64xsubf128@@GLIBC_2.28+0x324>
   54068:	mov	w0, #0x7f7fffff            	// #2139095039
   5406c:	fmov	s0, w0
   54070:	movi	v5.2s, #0x80, lsl #24
   54074:	fcmp	s19, s0
   54078:	cset	w0, gt
   5407c:	fcmp	s20, s0
   54080:	scvtf	s1, w0
   54084:	cset	w0, gt
   54088:	fcmp	s18, s18
   5408c:	scvtf	s0, w0
   54090:	bif	v2.8b, v1.8b, v5.8b
   54094:	bif	v3.8b, v0.8b, v5.8b
   54098:	b.vs	540e8 <f64xsubf128@@GLIBC_2.28+0x368>
   5409c:	fcmp	s4, s4
   540a0:	b.vs	540f4 <f64xsubf128@@GLIBC_2.28+0x374>
   540a4:	fmul	s5, s4, s3
   540a8:	fmul	s4, s4, s2
   540ac:	fmadd	s3, s18, s3, s4
   540b0:	fnmsub	s2, s18, s2, s5
   540b4:	mov	w0, #0x7f800000            	// #2139095040
   540b8:	fmov	s1, w0
   540bc:	fmul	s0, s2, s1
   540c0:	fmul	s1, s3, s1
   540c4:	ret
   540c8:	fcmp	s21, s6
   540cc:	b.gt	53fb0 <f64xsubf128@@GLIBC_2.28+0x230>
   540d0:	mov	w0, #0x0                   	// #0
   540d4:	b	53fec <f64xsubf128@@GLIBC_2.28+0x26c>
   540d8:	fabs	s17, s17
   540dc:	fcmp	s17, s6
   540e0:	b.gt	54038 <f64xsubf128@@GLIBC_2.28+0x2b8>
   540e4:	ret
   540e8:	movi	v0.2s, #0x0
   540ec:	bif	v18.8b, v0.8b, v5.8b
   540f0:	b	5409c <f64xsubf128@@GLIBC_2.28+0x31c>
   540f4:	movi	v0.2s, #0x0
   540f8:	movi	v1.2s, #0x80, lsl #24
   540fc:	bif	v4.8b, v0.8b, v1.8b
   54100:	b	540a4 <f64xsubf128@@GLIBC_2.28+0x324>
   54104:	movi	v6.2s, #0x0
   54108:	bif	v2.8b, v6.8b, v20.8b
   5410c:	b	53fe4 <f64xsubf128@@GLIBC_2.28+0x264>
   54110:	movi	v6.2s, #0x0
   54114:	movi	v19.2s, #0x80, lsl #24
   54118:	bif	v3.8b, v6.8b, v19.8b
   5411c:	b	53fec <f64xsubf128@@GLIBC_2.28+0x26c>
   54120:	movi	v0.2s, #0x0
   54124:	movi	v1.2s, #0x80, lsl #24
   54128:	bif	v2.8b, v0.8b, v1.8b
   5412c:	b	54050 <f64xsubf128@@GLIBC_2.28+0x2d0>
   54130:	movi	v0.2s, #0x0
   54134:	movi	v1.2s, #0x80, lsl #24
   54138:	bif	v4.8b, v0.8b, v1.8b
   5413c:	b	54048 <f64xsubf128@@GLIBC_2.28+0x2c8>
   54140:	movi	v0.2s, #0x0
   54144:	movi	v1.2s, #0x80, lsl #24
   54148:	bif	v18.8b, v0.8b, v1.8b
   5414c:	b	54040 <f64xsubf128@@GLIBC_2.28+0x2c0>
   54150:	fmul	d7, d1, d3
   54154:	fmul	d5, d0, d2
   54158:	fmul	d16, d0, d3
   5415c:	fmov	d18, d0
   54160:	fmul	d17, d2, d1
   54164:	fmov	d4, d1
   54168:	fsub	d0, d5, d7
   5416c:	fadd	d1, d16, d17
   54170:	fcmp	d0, d0
   54174:	cset	w0, vs
   54178:	fcmp	d1, d1
   5417c:	cset	w1, vs
   54180:	ands	w0, w0, w1
   54184:	b.eq	542bc <f64xsubf128@@GLIBC_2.28+0x53c>  // b.none
   54188:	fabs	d19, d18
   5418c:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
   54190:	fmov	d6, x1
   54194:	fabs	d21, d4
   54198:	fcmp	d19, d6
   5419c:	b.le	542c0 <f64xsubf128@@GLIBC_2.28+0x540>
   541a0:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
   541a4:	fmov	d6, x1
   541a8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   541ac:	fmov	d20, x1
   541b0:	fcmp	d19, d6
   541b4:	cset	w1, gt
   541b8:	fcmp	d21, d6
   541bc:	scvtf	d19, w1
   541c0:	cset	w1, gt
   541c4:	fcmp	d2, d2
   541c8:	scvtf	d6, w1
   541cc:	bif	v18.8b, v19.8b, v20.8b
   541d0:	bif	v4.8b, v6.8b, v20.8b
   541d4:	b.vs	54300 <f64xsubf128@@GLIBC_2.28+0x580>
   541d8:	fcmp	d3, d3
   541dc:	b.vs	5430c <f64xsubf128@@GLIBC_2.28+0x58c>
   541e0:	fabs	d19, d2
   541e4:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
   541e8:	fmov	d6, x1
   541ec:	fabs	d20, d3
   541f0:	fcmp	d19, d6
   541f4:	b.gt	5425c <f64xsubf128@@GLIBC_2.28+0x4dc>
   541f8:	fcmp	d20, d6
   541fc:	b.gt	5425c <f64xsubf128@@GLIBC_2.28+0x4dc>
   54200:	cbnz	w0, 5429c <f64xsubf128@@GLIBC_2.28+0x51c>
   54204:	fabs	d5, d5
   54208:	fcmp	d5, d6
   5420c:	b.gt	54228 <f64xsubf128@@GLIBC_2.28+0x4a8>
   54210:	fabs	d7, d7
   54214:	fcmp	d7, d6
   54218:	b.gt	54228 <f64xsubf128@@GLIBC_2.28+0x4a8>
   5421c:	fabs	d16, d16
   54220:	fcmp	d16, d6
   54224:	b.le	542d0 <f64xsubf128@@GLIBC_2.28+0x550>
   54228:	fcmp	d18, d18
   5422c:	b.vs	54348 <f64xsubf128@@GLIBC_2.28+0x5c8>
   54230:	fcmp	d4, d4
   54234:	b.vs	54334 <f64xsubf128@@GLIBC_2.28+0x5b4>
   54238:	fcmp	d2, d2
   5423c:	b.vs	54320 <f64xsubf128@@GLIBC_2.28+0x5a0>
   54240:	fcmp	d3, d3
   54244:	b.vc	5429c <f64xsubf128@@GLIBC_2.28+0x51c>
   54248:	movi	d0, #0x0
   5424c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54250:	fmov	d1, x0
   54254:	bif	v3.8b, v0.8b, v1.8b
   54258:	b	5429c <f64xsubf128@@GLIBC_2.28+0x51c>
   5425c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   54260:	fmov	d0, x0
   54264:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54268:	fmov	d5, x0
   5426c:	fcmp	d19, d0
   54270:	cset	w0, gt
   54274:	fcmp	d20, d0
   54278:	scvtf	d1, w0
   5427c:	cset	w0, gt
   54280:	fcmp	d18, d18
   54284:	scvtf	d0, w0
   54288:	bif	v2.8b, v1.8b, v5.8b
   5428c:	bif	v3.8b, v0.8b, v5.8b
   54290:	b.vs	542e0 <f64xsubf128@@GLIBC_2.28+0x560>
   54294:	fcmp	d4, d4
   54298:	b.vs	542ec <f64xsubf128@@GLIBC_2.28+0x56c>
   5429c:	fmul	d5, d4, d3
   542a0:	fmul	d4, d4, d2
   542a4:	fmadd	d3, d18, d3, d4
   542a8:	fnmsub	d2, d18, d2, d5
   542ac:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   542b0:	fmov	d1, x0
   542b4:	fmul	d0, d2, d1
   542b8:	fmul	d1, d3, d1
   542bc:	ret
   542c0:	fcmp	d21, d6
   542c4:	b.gt	541a0 <f64xsubf128@@GLIBC_2.28+0x420>
   542c8:	mov	w0, #0x0                   	// #0
   542cc:	b	541e0 <f64xsubf128@@GLIBC_2.28+0x460>
   542d0:	fabs	d17, d17
   542d4:	fcmp	d17, d6
   542d8:	b.gt	54228 <f64xsubf128@@GLIBC_2.28+0x4a8>
   542dc:	ret
   542e0:	movi	d0, #0x0
   542e4:	bif	v18.8b, v0.8b, v5.8b
   542e8:	b	54294 <f64xsubf128@@GLIBC_2.28+0x514>
   542ec:	movi	d0, #0x0
   542f0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   542f4:	fmov	d1, x0
   542f8:	bif	v4.8b, v0.8b, v1.8b
   542fc:	b	5429c <f64xsubf128@@GLIBC_2.28+0x51c>
   54300:	movi	d6, #0x0
   54304:	bif	v2.8b, v6.8b, v20.8b
   54308:	b	541d8 <f64xsubf128@@GLIBC_2.28+0x458>
   5430c:	movi	d6, #0x0
   54310:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   54314:	fmov	d19, x1
   54318:	bif	v3.8b, v6.8b, v19.8b
   5431c:	b	541e0 <f64xsubf128@@GLIBC_2.28+0x460>
   54320:	movi	d0, #0x0
   54324:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54328:	fmov	d1, x0
   5432c:	bif	v2.8b, v0.8b, v1.8b
   54330:	b	54240 <f64xsubf128@@GLIBC_2.28+0x4c0>
   54334:	movi	d0, #0x0
   54338:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   5433c:	fmov	d1, x0
   54340:	bif	v4.8b, v0.8b, v1.8b
   54344:	b	54238 <f64xsubf128@@GLIBC_2.28+0x4b8>
   54348:	movi	d0, #0x0
   5434c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54350:	fmov	d1, x0
   54354:	bif	v18.8b, v0.8b, v1.8b
   54358:	b	54230 <f64xsubf128@@GLIBC_2.28+0x4b0>
   5435c:	nop
   54360:	stp	x29, x30, [sp, #-256]!
   54364:	mov	x29, sp
   54368:	stp	x19, x20, [sp, #16]
   5436c:	stp	x23, x24, [sp, #48]
   54370:	stp	x25, x26, [sp, #64]
   54374:	str	q0, [sp, #96]
   54378:	str	q2, [sp, #112]
   5437c:	ldp	x20, x25, [sp, #96]
   54380:	stp	x21, x22, [sp, #32]
   54384:	ldp	x19, x24, [sp, #112]
   54388:	stp	x19, x24, [sp, #96]
   5438c:	stp	x20, x25, [sp, #112]
   54390:	stp	x27, x28, [sp, #80]
   54394:	ldr	q0, [sp, #112]
   54398:	str	q1, [sp, #128]
   5439c:	str	q3, [sp, #144]
   543a0:	ldp	x21, x23, [sp, #128]
   543a4:	ldp	x22, x26, [sp, #144]
   543a8:	ldr	q1, [sp, #96]
   543ac:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   543b0:	stp	x22, x26, [sp, #96]
   543b4:	stp	x21, x23, [sp, #112]
   543b8:	ldr	q1, [sp, #96]
   543bc:	str	q0, [sp, #128]
   543c0:	ldr	q0, [sp, #112]
   543c4:	ldp	x28, x27, [sp, #128]
   543c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   543cc:	str	q0, [sp, #128]
   543d0:	ldp	x1, x0, [sp, #128]
   543d4:	stp	x22, x26, [sp, #96]
   543d8:	stp	x20, x25, [sp, #112]
   543dc:	ldr	q1, [sp, #96]
   543e0:	ldr	q0, [sp, #112]
   543e4:	str	x1, [sp, #144]
   543e8:	str	x0, [sp, #168]
   543ec:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   543f0:	str	q0, [sp, #128]
   543f4:	ldp	x1, x0, [sp, #128]
   543f8:	stp	x21, x23, [sp, #96]
   543fc:	stp	x19, x24, [sp, #112]
   54400:	ldr	q1, [sp, #96]
   54404:	ldr	q0, [sp, #112]
   54408:	stp	x1, x0, [sp, #176]
   5440c:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   54410:	str	q0, [sp, #128]
   54414:	ldp	x0, x2, [sp, #136]
   54418:	str	x2, [sp, #96]
   5441c:	ldr	x2, [sp, #168]
   54420:	str	x2, [sp, #104]
   54424:	stp	x28, x27, [sp, #112]
   54428:	ldr	q1, [sp, #96]
   5442c:	ldr	q0, [sp, #112]
   54430:	str	x0, [sp, #224]
   54434:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   54438:	ldr	x1, [sp, #176]
   5443c:	str	x1, [sp, #112]
   54440:	ldr	x2, [sp, #128]
   54444:	str	x2, [sp, #96]
   54448:	ldr	x1, [sp, #224]
   5444c:	str	x1, [sp, #104]
   54450:	ldr	x0, [sp, #184]
   54454:	ldr	q1, [sp, #96]
   54458:	str	x0, [sp, #120]
   5445c:	str	q0, [sp, #96]
   54460:	ldr	q0, [sp, #112]
   54464:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   54468:	str	q0, [sp, #112]
   5446c:	ldr	q1, [sp, #96]
   54470:	mov	v0.16b, v1.16b
   54474:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   54478:	cmp	w0, #0x0
   5447c:	ldr	q0, [sp, #112]
   54480:	cset	w1, ne  // ne = any
   54484:	str	w1, [sp, #192]
   54488:	mov	v1.16b, v0.16b
   5448c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   54490:	cmp	w0, #0x0
   54494:	ldr	w1, [sp, #192]
   54498:	cset	w0, ne  // ne = any
   5449c:	ands	w0, w0, w1
   544a0:	str	w0, [sp, #236]
   544a4:	b.eq	547d0 <f64xsubf128@@GLIBC_2.28+0xa50>  // b.none
   544a8:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   544ac:	add	x1, x1, #0x300
   544b0:	and	x0, x25, #0x7fffffffffffffff
   544b4:	stp	x20, x0, [sp, #192]
   544b8:	ldr	q1, [x1]
   544bc:	and	x1, x23, #0x7fffffffffffffff
   544c0:	ldr	q0, [sp, #192]
   544c4:	str	x1, [sp, #192]
   544c8:	str	x0, [sp, #208]
   544cc:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   544d0:	cbnz	w0, 544f8 <f64xsubf128@@GLIBC_2.28+0x778>
   544d4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   544d8:	add	x1, x1, #0x300
   544dc:	ldr	x0, [sp, #208]
   544e0:	stp	x20, x0, [sp, #192]
   544e4:	ldr	q1, [x1]
   544e8:	ldr	q0, [sp, #192]
   544ec:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   544f0:	cmp	w0, #0x0
   544f4:	b.gt	5453c <f64xsubf128@@GLIBC_2.28+0x7bc>
   544f8:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   544fc:	add	x0, x0, #0x300
   54500:	ldr	q1, [x0]
   54504:	and	x0, x23, #0x7fffffffffffffff
   54508:	stp	x21, x0, [sp, #192]
   5450c:	ldr	q0, [sp, #192]
   54510:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   54514:	cbnz	w0, 549d8 <f64xsubf128@@GLIBC_2.28+0xc58>
   54518:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   5451c:	add	x1, x1, #0x300
   54520:	and	x0, x23, #0x7fffffffffffffff
   54524:	stp	x21, x0, [sp, #192]
   54528:	ldr	q1, [x1]
   5452c:	ldr	q0, [sp, #192]
   54530:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   54534:	cmp	w0, #0x0
   54538:	b.le	549d8 <f64xsubf128@@GLIBC_2.28+0xc58>
   5453c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54540:	add	x0, x0, #0x300
   54544:	mov	w1, #0x1                   	// #1
   54548:	str	w1, [sp, #240]
   5454c:	ldr	q1, [x0]
   54550:	ldr	x0, [sp, #208]
   54554:	stp	x20, x0, [sp, #192]
   54558:	ldr	q0, [sp, #192]
   5455c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   54560:	ldr	w1, [sp, #240]
   54564:	cbz	w0, 54864 <f64xsubf128@@GLIBC_2.28+0xae4>
   54568:	eor	w0, w1, #0x1
   5456c:	mov	w1, #0x1                   	// #1
   54570:	and	w0, w0, #0x1
   54574:	str	w1, [sp, #240]
   54578:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   5457c:	str	q0, [sp, #208]
   54580:	ldp	x20, x0, [sp, #208]
   54584:	and	x1, x23, #0x7fffffffffffffff
   54588:	stp	x21, x1, [sp, #192]
   5458c:	ldr	q0, [sp, #192]
   54590:	bfxil	x25, x0, #0, #63
   54594:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54598:	add	x0, x0, #0x300
   5459c:	ldr	q1, [x0]
   545a0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   545a4:	ldr	w1, [sp, #240]
   545a8:	cbz	w0, 5483c <f64xsubf128@@GLIBC_2.28+0xabc>
   545ac:	eor	w0, w1, #0x1
   545b0:	and	w0, w0, #0x1
   545b4:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   545b8:	str	q0, [sp, #240]
   545bc:	ldp	x21, x0, [sp, #240]
   545c0:	stp	x19, x24, [sp, #192]
   545c4:	stp	x19, x24, [sp, #208]
   545c8:	ldr	q1, [sp, #192]
   545cc:	ldr	q0, [sp, #208]
   545d0:	bfxil	x23, x0, #0, #63
   545d4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   545d8:	cbnz	w0, 54a74 <f64xsubf128@@GLIBC_2.28+0xcf4>
   545dc:	stp	x22, x26, [sp, #192]
   545e0:	stp	x22, x26, [sp, #208]
   545e4:	ldr	q1, [sp, #192]
   545e8:	ldr	q0, [sp, #208]
   545ec:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   545f0:	cbnz	w0, 54a5c <f64xsubf128@@GLIBC_2.28+0xcdc>
   545f4:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   545f8:	add	x1, x1, #0x300
   545fc:	and	x0, x24, #0x7fffffffffffffff
   54600:	stp	x19, x0, [sp, #192]
   54604:	ldr	q1, [x1]
   54608:	and	x1, x26, #0x7fffffffffffffff
   5460c:	ldr	q0, [sp, #192]
   54610:	str	x1, [sp, #192]
   54614:	str	x0, [sp, #208]
   54618:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5461c:	cbnz	w0, 54644 <f64xsubf128@@GLIBC_2.28+0x8c4>
   54620:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54624:	add	x1, x1, #0x300
   54628:	ldr	x0, [sp, #208]
   5462c:	stp	x19, x0, [sp, #192]
   54630:	ldr	q1, [x1]
   54634:	ldr	q0, [sp, #192]
   54638:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   5463c:	cmp	w0, #0x0
   54640:	b.gt	54688 <f64xsubf128@@GLIBC_2.28+0x908>
   54644:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54648:	add	x0, x0, #0x300
   5464c:	ldr	q1, [x0]
   54650:	and	x0, x26, #0x7fffffffffffffff
   54654:	stp	x22, x0, [sp, #192]
   54658:	ldr	q0, [sp, #192]
   5465c:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   54660:	cbnz	w0, 5488c <f64xsubf128@@GLIBC_2.28+0xb0c>
   54664:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54668:	add	x1, x1, #0x300
   5466c:	and	x0, x26, #0x7fffffffffffffff
   54670:	stp	x22, x0, [sp, #192]
   54674:	ldr	q1, [x1]
   54678:	ldr	q0, [sp, #192]
   5467c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   54680:	cmp	w0, #0x0
   54684:	b.le	5488c <f64xsubf128@@GLIBC_2.28+0xb0c>
   54688:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   5468c:	add	x0, x0, #0x300
   54690:	ldr	x28, [sp, #208]
   54694:	stp	x19, x28, [sp, #96]
   54698:	ldr	q1, [x0]
   5469c:	ldr	q0, [sp, #96]
   546a0:	mov	w27, #0x1                   	// #1
   546a4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   546a8:	cbz	w0, 54818 <f64xsubf128@@GLIBC_2.28+0xa98>
   546ac:	eor	w0, w27, #0x1
   546b0:	and	x28, x26, #0x7fffffffffffffff
   546b4:	and	w0, w0, #0x1
   546b8:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   546bc:	str	q0, [sp, #112]
   546c0:	mov	w27, #0x1                   	// #1
   546c4:	ldp	x19, x0, [sp, #112]
   546c8:	stp	x22, x28, [sp, #96]
   546cc:	ldr	q0, [sp, #96]
   546d0:	bfxil	x24, x0, #0, #63
   546d4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   546d8:	add	x0, x0, #0x300
   546dc:	ldr	q1, [x0]
   546e0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   546e4:	cbz	w0, 547f4 <f64xsubf128@@GLIBC_2.28+0xa74>
   546e8:	eor	w0, w27, #0x1
   546ec:	and	w0, w0, #0x1
   546f0:	bl	57738 <f64xsubf128@@GLIBC_2.28+0x39b8>
   546f4:	str	q0, [sp, #128]
   546f8:	ldp	x22, x0, [sp, #128]
   546fc:	stp	x20, x25, [sp, #96]
   54700:	stp	x20, x25, [sp, #112]
   54704:	ldr	q1, [sp, #96]
   54708:	ldr	q0, [sp, #112]
   5470c:	bfxil	x26, x0, #0, #63
   54710:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   54714:	cbnz	w0, 54a2c <f64xsubf128@@GLIBC_2.28+0xcac>
   54718:	stp	x21, x23, [sp, #96]
   5471c:	stp	x21, x23, [sp, #112]
   54720:	ldr	q1, [sp, #96]
   54724:	ldr	q0, [sp, #112]
   54728:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5472c:	cbnz	w0, 54a44 <f64xsubf128@@GLIBC_2.28+0xcc4>
   54730:	stp	x19, x24, [sp, #96]
   54734:	stp	x20, x25, [sp, #112]
   54738:	ldr	q1, [sp, #96]
   5473c:	ldr	q0, [sp, #112]
   54740:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   54744:	stp	x22, x26, [sp, #96]
   54748:	stp	x21, x23, [sp, #112]
   5474c:	ldr	q1, [sp, #96]
   54750:	str	q0, [sp, #96]
   54754:	ldr	q0, [sp, #112]
   54758:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   5475c:	mov	v1.16b, v0.16b
   54760:	ldr	q2, [sp, #96]
   54764:	mov	v0.16b, v2.16b
   54768:	bl	56a98 <f64xsubf128@@GLIBC_2.28+0x2d18>
   5476c:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   54770:	add	x0, x0, #0x130
   54774:	ldr	q1, [x0]
   54778:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   5477c:	stp	x22, x26, [sp, #96]
   54780:	stp	x20, x25, [sp, #112]
   54784:	ldr	q1, [sp, #96]
   54788:	str	q0, [sp, #96]
   5478c:	ldr	q0, [sp, #112]
   54790:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   54794:	stp	x19, x24, [sp, #112]
   54798:	stp	x21, x23, [sp, #128]
   5479c:	ldr	q1, [sp, #112]
   547a0:	str	q0, [sp, #112]
   547a4:	ldr	q0, [sp, #128]
   547a8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   547ac:	mov	v1.16b, v0.16b
   547b0:	ldr	q2, [sp, #112]
   547b4:	mov	v0.16b, v2.16b
   547b8:	bl	54ad8 <f64xsubf128@@GLIBC_2.28+0xd58>
   547bc:	adrp	x0, 67000 <f64xsubf128@@GLIBC_2.28+0x13280>
   547c0:	add	x0, x0, #0x130
   547c4:	ldr	q1, [x0]
   547c8:	bl	562b0 <f64xsubf128@@GLIBC_2.28+0x2530>
   547cc:	str	q0, [sp, #112]
   547d0:	ldp	x19, x20, [sp, #16]
   547d4:	ldp	x21, x22, [sp, #32]
   547d8:	ldp	x23, x24, [sp, #48]
   547dc:	ldp	x25, x26, [sp, #64]
   547e0:	ldp	x27, x28, [sp, #80]
   547e4:	ldr	q0, [sp, #96]
   547e8:	ldr	q1, [sp, #112]
   547ec:	ldp	x29, x30, [sp], #256
   547f0:	ret
   547f4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   547f8:	add	x0, x0, #0x300
   547fc:	stp	x22, x28, [sp, #96]
   54800:	ldr	q1, [x0]
   54804:	ldr	q0, [sp, #96]
   54808:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   5480c:	cmp	w0, #0x0
   54810:	cset	w27, le
   54814:	b	546e8 <f64xsubf128@@GLIBC_2.28+0x968>
   54818:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   5481c:	add	x0, x0, #0x300
   54820:	stp	x19, x28, [sp, #96]
   54824:	ldr	q1, [x0]
   54828:	ldr	q0, [sp, #96]
   5482c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   54830:	cmp	w0, #0x0
   54834:	cset	w27, le
   54838:	b	546ac <f64xsubf128@@GLIBC_2.28+0x92c>
   5483c:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54840:	add	x0, x0, #0x300
   54844:	and	x1, x23, #0x7fffffffffffffff
   54848:	stp	x21, x1, [sp, #192]
   5484c:	ldr	q1, [x0]
   54850:	ldr	q0, [sp, #192]
   54854:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   54858:	cmp	w0, #0x0
   5485c:	cset	w1, le
   54860:	b	545ac <f64xsubf128@@GLIBC_2.28+0x82c>
   54864:	adrp	x1, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54868:	add	x1, x1, #0x300
   5486c:	ldr	x0, [sp, #208]
   54870:	stp	x20, x0, [sp, #192]
   54874:	ldr	q1, [x1]
   54878:	ldr	q0, [sp, #192]
   5487c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   54880:	cmp	w0, #0x0
   54884:	cset	w1, le
   54888:	b	54568 <f64xsubf128@@GLIBC_2.28+0x7e8>
   5488c:	ldr	w0, [sp, #236]
   54890:	cbnz	w0, 54730 <f64xsubf128@@GLIBC_2.28+0x9b0>
   54894:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54898:	add	x0, x0, #0x300
   5489c:	and	x27, x27, #0x7fffffffffffffff
   548a0:	stp	x28, x27, [sp, #192]
   548a4:	ldr	q1, [x0]
   548a8:	ldr	q0, [sp, #192]
   548ac:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   548b0:	cbnz	w0, 548d4 <f64xsubf128@@GLIBC_2.28+0xb54>
   548b4:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   548b8:	add	x0, x0, #0x300
   548bc:	stp	x28, x27, [sp, #192]
   548c0:	ldr	q1, [x0]
   548c4:	ldr	q0, [sp, #192]
   548c8:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   548cc:	cmp	w0, #0x0
   548d0:	b.gt	54960 <f64xsubf128@@GLIBC_2.28+0xbe0>
   548d4:	ldr	x0, [sp, #168]
   548d8:	ldr	x28, [sp, #144]
   548dc:	and	x27, x0, #0x7fffffffffffffff
   548e0:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   548e4:	add	x0, x0, #0x300
   548e8:	stp	x28, x27, [sp, #192]
   548ec:	ldr	q1, [x0]
   548f0:	ldr	q0, [sp, #192]
   548f4:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   548f8:	cbnz	w0, 5491c <f64xsubf128@@GLIBC_2.28+0xb9c>
   548fc:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54900:	add	x0, x0, #0x300
   54904:	stp	x28, x27, [sp, #144]
   54908:	ldr	q1, [x0]
   5490c:	ldr	q0, [sp, #144]
   54910:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   54914:	cmp	w0, #0x0
   54918:	b.gt	54960 <f64xsubf128@@GLIBC_2.28+0xbe0>
   5491c:	ldp	x28, x0, [sp, #176]
   54920:	and	x27, x0, #0x7fffffffffffffff
   54924:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54928:	add	x0, x0, #0x300
   5492c:	stp	x28, x27, [sp, #144]
   54930:	ldr	q0, [sp, #144]
   54934:	ldr	q1, [x0]
   54938:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5493c:	cbnz	w0, 549e0 <f64xsubf128@@GLIBC_2.28+0xc60>
   54940:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54944:	add	x0, x0, #0x300
   54948:	stp	x28, x27, [sp, #144]
   5494c:	ldr	q1, [x0]
   54950:	ldr	q0, [sp, #144]
   54954:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   54958:	cmp	w0, #0x0
   5495c:	b.le	549e0 <f64xsubf128@@GLIBC_2.28+0xc60>
   54960:	stp	x20, x25, [sp, #96]
   54964:	stp	x20, x25, [sp, #112]
   54968:	ldr	q1, [sp, #96]
   5496c:	ldr	q0, [sp, #112]
   54970:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   54974:	cbnz	w0, 54abc <f64xsubf128@@GLIBC_2.28+0xd3c>
   54978:	stp	x21, x23, [sp, #96]
   5497c:	stp	x21, x23, [sp, #112]
   54980:	ldr	q1, [sp, #96]
   54984:	ldr	q0, [sp, #112]
   54988:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   5498c:	cbnz	w0, 54aa4 <f64xsubf128@@GLIBC_2.28+0xd24>
   54990:	stp	x19, x24, [sp, #96]
   54994:	stp	x19, x24, [sp, #112]
   54998:	ldr	q1, [sp, #96]
   5499c:	ldr	q0, [sp, #112]
   549a0:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   549a4:	cbnz	w0, 54a8c <f64xsubf128@@GLIBC_2.28+0xd0c>
   549a8:	stp	x22, x26, [sp, #96]
   549ac:	stp	x22, x26, [sp, #112]
   549b0:	ldr	q1, [sp, #96]
   549b4:	ldr	q0, [sp, #112]
   549b8:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   549bc:	cbz	w0, 54730 <f64xsubf128@@GLIBC_2.28+0x9b0>
   549c0:	mov	x22, #0x0                   	// #0
   549c4:	mov	x0, #0x0                   	// #0
   549c8:	tbz	x26, #63, 549d0 <f64xsubf128@@GLIBC_2.28+0xc50>
   549cc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   549d0:	mov	x26, x0
   549d4:	b	54730 <f64xsubf128@@GLIBC_2.28+0x9b0>
   549d8:	str	wzr, [sp, #236]
   549dc:	b	545f4 <f64xsubf128@@GLIBC_2.28+0x874>
   549e0:	ldr	x0, [sp, #224]
   549e4:	ldr	x28, [sp, #128]
   549e8:	and	x27, x0, #0x7fffffffffffffff
   549ec:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   549f0:	add	x0, x0, #0x300
   549f4:	stp	x28, x27, [sp, #144]
   549f8:	ldr	q1, [x0]
   549fc:	ldr	q0, [sp, #144]
   54a00:	bl	57578 <f64xsubf128@@GLIBC_2.28+0x37f8>
   54a04:	cbnz	w0, 547d0 <f64xsubf128@@GLIBC_2.28+0xa50>
   54a08:	adrp	x0, 58000 <f64xsubf128@@GLIBC_2.28+0x4280>
   54a0c:	add	x0, x0, #0x300
   54a10:	stp	x28, x27, [sp, #128]
   54a14:	ldr	q1, [x0]
   54a18:	ldr	q0, [sp, #128]
   54a1c:	bl	56170 <f64xsubf128@@GLIBC_2.28+0x23f0>
   54a20:	cmp	w0, #0x0
   54a24:	b.gt	54960 <f64xsubf128@@GLIBC_2.28+0xbe0>
   54a28:	b	547d0 <f64xsubf128@@GLIBC_2.28+0xa50>
   54a2c:	mov	x20, #0x0                   	// #0
   54a30:	mov	x0, #0x0                   	// #0
   54a34:	tbz	x25, #63, 54a3c <f64xsubf128@@GLIBC_2.28+0xcbc>
   54a38:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54a3c:	mov	x25, x0
   54a40:	b	54718 <f64xsubf128@@GLIBC_2.28+0x998>
   54a44:	mov	x21, #0x0                   	// #0
   54a48:	mov	x0, #0x0                   	// #0
   54a4c:	tbz	x23, #63, 54a54 <f64xsubf128@@GLIBC_2.28+0xcd4>
   54a50:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54a54:	mov	x23, x0
   54a58:	b	54730 <f64xsubf128@@GLIBC_2.28+0x9b0>
   54a5c:	mov	x22, #0x0                   	// #0
   54a60:	mov	x0, #0x0                   	// #0
   54a64:	tbz	x26, #63, 54a6c <f64xsubf128@@GLIBC_2.28+0xcec>
   54a68:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54a6c:	mov	x26, x0
   54a70:	b	545f4 <f64xsubf128@@GLIBC_2.28+0x874>
   54a74:	mov	x19, #0x0                   	// #0
   54a78:	mov	x0, #0x0                   	// #0
   54a7c:	tbz	x24, #63, 54a84 <f64xsubf128@@GLIBC_2.28+0xd04>
   54a80:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54a84:	mov	x24, x0
   54a88:	b	545dc <f64xsubf128@@GLIBC_2.28+0x85c>
   54a8c:	mov	x19, #0x0                   	// #0
   54a90:	mov	x0, #0x0                   	// #0
   54a94:	tbz	x24, #63, 54a9c <f64xsubf128@@GLIBC_2.28+0xd1c>
   54a98:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54a9c:	mov	x24, x0
   54aa0:	b	549a8 <f64xsubf128@@GLIBC_2.28+0xc28>
   54aa4:	mov	x21, #0x0                   	// #0
   54aa8:	mov	x0, #0x0                   	// #0
   54aac:	tbz	x23, #63, 54ab4 <f64xsubf128@@GLIBC_2.28+0xd34>
   54ab0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54ab4:	mov	x23, x0
   54ab8:	b	54990 <f64xsubf128@@GLIBC_2.28+0xc10>
   54abc:	mov	x20, #0x0                   	// #0
   54ac0:	mov	x0, #0x0                   	// #0
   54ac4:	tbz	x25, #63, 54acc <f64xsubf128@@GLIBC_2.28+0xd4c>
   54ac8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54acc:	mov	x25, x0
   54ad0:	b	54978 <f64xsubf128@@GLIBC_2.28+0xbf8>
   54ad4:	nop
   54ad8:	stp	x29, x30, [sp, #-48]!
   54adc:	mov	x29, sp
   54ae0:	str	q0, [sp, #16]
   54ae4:	str	q1, [sp, #32]
   54ae8:	ldp	x6, x1, [sp, #16]
   54aec:	ldp	x0, x3, [sp, #32]
   54af0:	mrs	x15, fpcr
   54af4:	lsr	x7, x1, #63
   54af8:	mov	x10, x0
   54afc:	ubfiz	x4, x3, #3, #48
   54b00:	lsr	x5, x3, #63
   54b04:	mov	x12, x7
   54b08:	ubfiz	x2, x1, #3, #48
   54b0c:	orr	x4, x4, x0, lsr #61
   54b10:	ubfx	x8, x1, #48, #15
   54b14:	ubfx	x0, x3, #48, #15
   54b18:	and	w7, w7, #0xff
   54b1c:	mov	x16, x12
   54b20:	cmp	x12, x5
   54b24:	and	w11, w5, #0xff
   54b28:	orr	x2, x2, x6, lsr #61
   54b2c:	mov	x1, x8
   54b30:	lsl	x9, x6, #3
   54b34:	mov	x3, x0
   54b38:	lsl	x13, x10, #3
   54b3c:	b.eq	54ce8 <f64xsubf128@@GLIBC_2.28+0xf68>  // b.none
   54b40:	sub	w0, w8, w0
   54b44:	cmp	w0, #0x0
   54b48:	b.le	54c94 <f64xsubf128@@GLIBC_2.28+0xf14>
   54b4c:	cbz	x3, 54d48 <f64xsubf128@@GLIBC_2.28+0xfc8>
   54b50:	orr	x4, x4, #0x8000000000000
   54b54:	mov	x3, #0x7fff                	// #32767
   54b58:	cmp	x1, x3
   54b5c:	b.eq	54f4c <f64xsubf128@@GLIBC_2.28+0x11cc>  // b.none
   54b60:	cmp	w0, #0x74
   54b64:	b.gt	54fd0 <f64xsubf128@@GLIBC_2.28+0x1250>
   54b68:	cmp	w0, #0x3f
   54b6c:	b.gt	55130 <f64xsubf128@@GLIBC_2.28+0x13b0>
   54b70:	mov	w3, #0x40                  	// #64
   54b74:	sub	w3, w3, w0
   54b78:	lsr	x6, x13, x0
   54b7c:	lsl	x13, x13, x3
   54b80:	cmp	x13, #0x0
   54b84:	cset	x5, ne  // ne = any
   54b88:	lsl	x3, x4, x3
   54b8c:	orr	x3, x3, x6
   54b90:	lsr	x0, x4, x0
   54b94:	orr	x3, x3, x5
   54b98:	sub	x2, x2, x0
   54b9c:	subs	x9, x9, x3
   54ba0:	sbc	x2, x2, xzr
   54ba4:	and	x3, x2, #0x7ffffffffffff
   54ba8:	tbz	x2, #51, 54d88 <f64xsubf128@@GLIBC_2.28+0x1008>
   54bac:	cbz	x3, 54fb4 <f64xsubf128@@GLIBC_2.28+0x1234>
   54bb0:	clz	x0, x3
   54bb4:	sub	w0, w0, #0xc
   54bb8:	neg	w2, w0
   54bbc:	lsl	x4, x3, x0
   54bc0:	lsl	x3, x9, x0
   54bc4:	lsr	x9, x9, x2
   54bc8:	orr	x2, x9, x4
   54bcc:	cmp	x1, w0, sxtw
   54bd0:	sxtw	x4, w0
   54bd4:	b.gt	54f94 <f64xsubf128@@GLIBC_2.28+0x1214>
   54bd8:	sub	w1, w0, w1
   54bdc:	add	w0, w1, #0x1
   54be0:	cmp	w0, #0x3f
   54be4:	b.gt	550f8 <f64xsubf128@@GLIBC_2.28+0x1378>
   54be8:	mov	w1, #0x40                  	// #64
   54bec:	sub	w1, w1, w0
   54bf0:	lsr	x4, x3, x0
   54bf4:	lsl	x3, x3, x1
   54bf8:	cmp	x3, #0x0
   54bfc:	lsl	x9, x2, x1
   54c00:	cset	x1, ne  // ne = any
   54c04:	orr	x9, x9, x4
   54c08:	lsr	x2, x2, x0
   54c0c:	orr	x9, x9, x1
   54c10:	orr	x8, x9, x2
   54c14:	cbz	x8, 54d9c <f64xsubf128@@GLIBC_2.28+0x101c>
   54c18:	and	x0, x9, #0x7
   54c1c:	mov	x1, #0x0                   	// #0
   54c20:	mov	w5, #0x1                   	// #1
   54c24:	cbz	x0, 54fe0 <f64xsubf128@@GLIBC_2.28+0x1260>
   54c28:	and	x3, x15, #0xc00000
   54c2c:	cmp	x3, #0x400, lsl #12
   54c30:	b.eq	54f24 <f64xsubf128@@GLIBC_2.28+0x11a4>  // b.none
   54c34:	cmp	x3, #0x800, lsl #12
   54c38:	b.eq	54f04 <f64xsubf128@@GLIBC_2.28+0x1184>  // b.none
   54c3c:	cbz	x3, 54f30 <f64xsubf128@@GLIBC_2.28+0x11b0>
   54c40:	and	x3, x2, #0x8000000000000
   54c44:	mov	w0, #0x10                  	// #16
   54c48:	cbz	w5, 54c50 <f64xsubf128@@GLIBC_2.28+0xed0>
   54c4c:	orr	w0, w0, #0x8
   54c50:	cbz	x3, 54f68 <f64xsubf128@@GLIBC_2.28+0x11e8>
   54c54:	add	x1, x1, #0x1
   54c58:	mov	x3, #0x7fff                	// #32767
   54c5c:	cmp	x1, x3
   54c60:	b.eq	54e4c <f64xsubf128@@GLIBC_2.28+0x10cc>  // b.none
   54c64:	and	w1, w1, #0x7fff
   54c68:	extr	x8, x2, x9, #3
   54c6c:	ubfx	x2, x2, #3, #48
   54c70:	mov	x5, #0x0                   	// #0
   54c74:	orr	w1, w1, w7, lsl #15
   54c78:	bfxil	x5, x2, #0, #48
   54c7c:	fmov	d0, x8
   54c80:	bfi	x5, x1, #48, #16
   54c84:	fmov	v0.d[1], x5
   54c88:	cbnz	w0, 54ea8 <f64xsubf128@@GLIBC_2.28+0x1128>
   54c8c:	ldp	x29, x30, [sp], #48
   54c90:	ret
   54c94:	mov	x14, x5
   54c98:	b.eq	54db4 <f64xsubf128@@GLIBC_2.28+0x1034>  // b.none
   54c9c:	cbnz	x8, 55038 <f64xsubf128@@GLIBC_2.28+0x12b8>
   54ca0:	orr	x1, x2, x9
   54ca4:	cbz	x1, 54d64 <f64xsubf128@@GLIBC_2.28+0xfe4>
   54ca8:	cmn	w0, #0x1
   54cac:	b.eq	55454 <f64xsubf128@@GLIBC_2.28+0x16d4>  // b.none
   54cb0:	mov	x1, #0x7fff                	// #32767
   54cb4:	mvn	w0, w0
   54cb8:	cmp	x3, x1
   54cbc:	b.ne	5504c <f64xsubf128@@GLIBC_2.28+0x12cc>  // b.any
   54cc0:	orr	x0, x4, x13
   54cc4:	cbnz	x0, 553ac <f64xsubf128@@GLIBC_2.28+0x162c>
   54cc8:	mov	x16, x14
   54ccc:	nop
   54cd0:	mov	x4, #0x0                   	// #0
   54cd4:	fmov	d0, x4
   54cd8:	lsl	x16, x16, #63
   54cdc:	orr	x5, x16, #0x7fff000000000000
   54ce0:	fmov	v0.d[1], x5
   54ce4:	b	54c8c <f64xsubf128@@GLIBC_2.28+0xf0c>
   54ce8:	sub	w5, w8, w0
   54cec:	cmp	w5, #0x0
   54cf0:	b.le	54ebc <f64xsubf128@@GLIBC_2.28+0x113c>
   54cf4:	cbz	x0, 54dfc <f64xsubf128@@GLIBC_2.28+0x107c>
   54cf8:	orr	x4, x4, #0x8000000000000
   54cfc:	mov	x0, #0x7fff                	// #32767
   54d00:	cmp	x1, x0
   54d04:	b.eq	54f4c <f64xsubf128@@GLIBC_2.28+0x11cc>  // b.none
   54d08:	cmp	w5, #0x74
   54d0c:	b.gt	550e0 <f64xsubf128@@GLIBC_2.28+0x1360>
   54d10:	cmp	w5, #0x3f
   54d14:	b.gt	551e0 <f64xsubf128@@GLIBC_2.28+0x1460>
   54d18:	mov	w0, #0x40                  	// #64
   54d1c:	sub	w0, w0, w5
   54d20:	lsr	x6, x13, x5
   54d24:	lsl	x13, x13, x0
   54d28:	cmp	x13, #0x0
   54d2c:	lsl	x0, x4, x0
   54d30:	cset	x3, ne  // ne = any
   54d34:	orr	x0, x0, x6
   54d38:	lsr	x4, x4, x5
   54d3c:	orr	x0, x0, x3
   54d40:	add	x2, x2, x4
   54d44:	b	550ec <f64xsubf128@@GLIBC_2.28+0x136c>
   54d48:	orr	x3, x4, x13
   54d4c:	cbz	x3, 550bc <f64xsubf128@@GLIBC_2.28+0x133c>
   54d50:	subs	w0, w0, #0x1
   54d54:	b.ne	54b54 <f64xsubf128@@GLIBC_2.28+0xdd4>  // b.any
   54d58:	subs	x9, x9, x13
   54d5c:	sbc	x2, x2, x4
   54d60:	b	54ba4 <f64xsubf128@@GLIBC_2.28+0xe24>
   54d64:	mov	x0, #0x7fff                	// #32767
   54d68:	cmp	x3, x0
   54d6c:	b.eq	554a0 <f64xsubf128@@GLIBC_2.28+0x1720>  // b.none
   54d70:	mov	w7, w11
   54d74:	mov	x2, x4
   54d78:	mov	x9, x13
   54d7c:	mov	x1, x3
   54d80:	mov	x12, x5
   54d84:	nop
   54d88:	orr	x8, x9, x2
   54d8c:	and	x0, x9, #0x7
   54d90:	mov	w5, #0x0                   	// #0
   54d94:	cbnz	x1, 54c24 <f64xsubf128@@GLIBC_2.28+0xea4>
   54d98:	cbnz	x8, 54c18 <f64xsubf128@@GLIBC_2.28+0xe98>
   54d9c:	mov	x2, #0x0                   	// #0
   54da0:	mov	x1, #0x0                   	// #0
   54da4:	mov	w0, #0x0                   	// #0
   54da8:	and	x2, x2, #0xffffffffffff
   54dac:	and	w1, w1, #0x7fff
   54db0:	b	54c70 <f64xsubf128@@GLIBC_2.28+0xef0>
   54db4:	add	x5, x8, #0x1
   54db8:	tst	x5, #0x7ffe
   54dbc:	b.ne	5508c <f64xsubf128@@GLIBC_2.28+0x130c>  // b.any
   54dc0:	orr	x5, x2, x9
   54dc4:	orr	x8, x4, x13
   54dc8:	cbnz	x1, 5524c <f64xsubf128@@GLIBC_2.28+0x14cc>
   54dcc:	cbz	x5, 552f4 <f64xsubf128@@GLIBC_2.28+0x1574>
   54dd0:	cbz	x8, 55308 <f64xsubf128@@GLIBC_2.28+0x1588>
   54dd4:	subs	x5, x9, x13
   54dd8:	cmp	x9, x13
   54ddc:	sbc	x3, x2, x4
   54de0:	tbz	x3, #51, 554d4 <f64xsubf128@@GLIBC_2.28+0x1754>
   54de4:	subs	x9, x13, x9
   54de8:	mov	w7, w11
   54dec:	sbc	x2, x4, x2
   54df0:	mov	x12, x14
   54df4:	orr	x8, x9, x2
   54df8:	b	54c14 <f64xsubf128@@GLIBC_2.28+0xe94>
   54dfc:	orr	x0, x4, x13
   54e00:	cbz	x0, 552d4 <f64xsubf128@@GLIBC_2.28+0x1554>
   54e04:	subs	w5, w5, #0x1
   54e08:	b.ne	54cfc <f64xsubf128@@GLIBC_2.28+0xf7c>  // b.any
   54e0c:	adds	x9, x9, x13
   54e10:	adc	x2, x4, x2
   54e14:	nop
   54e18:	tbz	x2, #51, 54d88 <f64xsubf128@@GLIBC_2.28+0x1008>
   54e1c:	add	x1, x1, #0x1
   54e20:	mov	x0, #0x7fff                	// #32767
   54e24:	cmp	x1, x0
   54e28:	b.eq	55314 <f64xsubf128@@GLIBC_2.28+0x1594>  // b.none
   54e2c:	and	x0, x9, #0x1
   54e30:	and	x3, x2, #0xfff7ffffffffffff
   54e34:	orr	x9, x0, x9, lsr #1
   54e38:	mov	w5, #0x0                   	// #0
   54e3c:	orr	x9, x9, x2, lsl #63
   54e40:	lsr	x2, x3, #1
   54e44:	and	x0, x9, #0x7
   54e48:	b	54c24 <f64xsubf128@@GLIBC_2.28+0xea4>
   54e4c:	and	x3, x15, #0xc00000
   54e50:	cbz	x3, 54e88 <f64xsubf128@@GLIBC_2.28+0x1108>
   54e54:	cmp	x3, #0x400, lsl #12
   54e58:	b.eq	54e80 <f64xsubf128@@GLIBC_2.28+0x1100>  // b.none
   54e5c:	cmp	x3, #0x800, lsl #12
   54e60:	csel	w12, w12, wzr, eq  // eq = none
   54e64:	cbnz	w12, 54e88 <f64xsubf128@@GLIBC_2.28+0x1108>
   54e68:	mov	w1, #0x14                  	// #20
   54e6c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   54e70:	orr	w0, w0, w1
   54e74:	mov	x8, #0xffffffffffffffff    	// #-1
   54e78:	mov	x1, #0x7ffe                	// #32766
   54e7c:	b	54da8 <f64xsubf128@@GLIBC_2.28+0x1028>
   54e80:	cbnz	x12, 54e68 <f64xsubf128@@GLIBC_2.28+0x10e8>
   54e84:	nop
   54e88:	mov	w1, #0x14                  	// #20
   54e8c:	and	x16, x7, #0xff
   54e90:	orr	w0, w0, w1
   54e94:	mov	x4, #0x0                   	// #0
   54e98:	fmov	d0, x4
   54e9c:	lsl	x16, x16, #63
   54ea0:	orr	x5, x16, #0x7fff000000000000
   54ea4:	fmov	v0.d[1], x5
   54ea8:	str	q0, [sp, #16]
   54eac:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   54eb0:	ldr	q0, [sp, #16]
   54eb4:	ldp	x29, x30, [sp], #48
   54eb8:	ret
   54ebc:	b.eq	54ffc <f64xsubf128@@GLIBC_2.28+0x127c>  // b.none
   54ec0:	cbnz	x8, 55180 <f64xsubf128@@GLIBC_2.28+0x1400>
   54ec4:	orr	x0, x2, x9
   54ec8:	cbz	x0, 553ec <f64xsubf128@@GLIBC_2.28+0x166c>
   54ecc:	cmn	w5, #0x1
   54ed0:	b.eq	5554c <f64xsubf128@@GLIBC_2.28+0x17cc>  // b.none
   54ed4:	mov	x0, #0x7fff                	// #32767
   54ed8:	mvn	w5, w5
   54edc:	cmp	x3, x0
   54ee0:	b.ne	55194 <f64xsubf128@@GLIBC_2.28+0x1414>  // b.any
   54ee4:	orr	x0, x4, x13
   54ee8:	cbz	x0, 54cd0 <f64xsubf128@@GLIBC_2.28+0xf50>
   54eec:	lsr	x5, x4, #50
   54ef0:	mov	x9, x13
   54ef4:	eor	x5, x5, #0x1
   54ef8:	mov	x2, x4
   54efc:	and	w5, w5, #0x1
   54f00:	b	54f60 <f64xsubf128@@GLIBC_2.28+0x11e0>
   54f04:	mov	w0, #0x10                  	// #16
   54f08:	cbz	x12, 54f14 <f64xsubf128@@GLIBC_2.28+0x1194>
   54f0c:	adds	x9, x9, #0x8
   54f10:	cinc	x2, x2, cs  // cs = hs, nlast
   54f14:	and	x3, x2, #0x8000000000000
   54f18:	cbz	w5, 54c50 <f64xsubf128@@GLIBC_2.28+0xed0>
   54f1c:	orr	w0, w0, #0x8
   54f20:	b	54c50 <f64xsubf128@@GLIBC_2.28+0xed0>
   54f24:	mov	w0, #0x10                  	// #16
   54f28:	cbnz	x12, 54f14 <f64xsubf128@@GLIBC_2.28+0x1194>
   54f2c:	b	54f0c <f64xsubf128@@GLIBC_2.28+0x118c>
   54f30:	and	x3, x9, #0xf
   54f34:	mov	w0, #0x10                  	// #16
   54f38:	cmp	x3, #0x4
   54f3c:	b.eq	54f14 <f64xsubf128@@GLIBC_2.28+0x1194>  // b.none
   54f40:	adds	x9, x9, #0x4
   54f44:	cinc	x2, x2, cs  // cs = hs, nlast
   54f48:	b	54f14 <f64xsubf128@@GLIBC_2.28+0x1194>
   54f4c:	orr	x0, x2, x9
   54f50:	cbz	x0, 54cd0 <f64xsubf128@@GLIBC_2.28+0xf50>
   54f54:	lsr	x5, x2, #50
   54f58:	eor	x5, x5, #0x1
   54f5c:	and	w5, w5, #0x1
   54f60:	mov	w0, w5
   54f64:	mov	x1, #0x7fff                	// #32767
   54f68:	mov	x3, #0x7fff                	// #32767
   54f6c:	extr	x8, x2, x9, #3
   54f70:	cmp	x1, x3
   54f74:	lsr	x2, x2, #3
   54f78:	b.ne	54da8 <f64xsubf128@@GLIBC_2.28+0x1028>  // b.any
   54f7c:	orr	x1, x8, x2
   54f80:	cbz	x1, 555ec <f64xsubf128@@GLIBC_2.28+0x186c>
   54f84:	orr	x2, x2, #0x800000000000
   54f88:	mov	w1, #0x7fff                	// #32767
   54f8c:	and	x2, x2, #0xffffffffffff
   54f90:	b	54c70 <f64xsubf128@@GLIBC_2.28+0xef0>
   54f94:	mov	x9, x3
   54f98:	and	x2, x2, #0xfff7ffffffffffff
   54f9c:	sub	x1, x1, x4
   54fa0:	orr	x8, x9, x2
   54fa4:	and	x0, x9, #0x7
   54fa8:	mov	w5, #0x0                   	// #0
   54fac:	cbz	x1, 54d98 <f64xsubf128@@GLIBC_2.28+0x1018>
   54fb0:	b	54c24 <f64xsubf128@@GLIBC_2.28+0xea4>
   54fb4:	clz	x2, x9
   54fb8:	add	w0, w2, #0x34
   54fbc:	cmp	w0, #0x3f
   54fc0:	b.le	54bb8 <f64xsubf128@@GLIBC_2.28+0xe38>
   54fc4:	sub	w2, w2, #0xc
   54fc8:	lsl	x2, x9, x2
   54fcc:	b	54bcc <f64xsubf128@@GLIBC_2.28+0xe4c>
   54fd0:	orr	x4, x4, x13
   54fd4:	cmp	x4, #0x0
   54fd8:	cset	x3, ne  // ne = any
   54fdc:	b	54b9c <f64xsubf128@@GLIBC_2.28+0xe1c>
   54fe0:	and	x3, x2, #0x8000000000000
   54fe4:	mov	w0, #0x0                   	// #0
   54fe8:	cbz	w5, 54c50 <f64xsubf128@@GLIBC_2.28+0xed0>
   54fec:	mov	w0, #0x0                   	// #0
   54ff0:	tbz	w15, #11, 54c50 <f64xsubf128@@GLIBC_2.28+0xed0>
   54ff4:	orr	w0, w0, #0x8
   54ff8:	b	54c50 <f64xsubf128@@GLIBC_2.28+0xed0>
   54ffc:	add	x0, x8, #0x1
   55000:	tst	x0, #0x7ffe
   55004:	b.ne	5520c <f64xsubf128@@GLIBC_2.28+0x148c>  // b.any
   55008:	orr	x0, x2, x9
   5500c:	cbnz	x8, 553c8 <f64xsubf128@@GLIBC_2.28+0x1648>
   55010:	orr	x8, x4, x13
   55014:	cbz	x0, 5541c <f64xsubf128@@GLIBC_2.28+0x169c>
   55018:	cbz	x8, 55308 <f64xsubf128@@GLIBC_2.28+0x1588>
   5501c:	adds	x9, x9, x13
   55020:	adc	x2, x4, x2
   55024:	tbz	x2, #51, 54df4 <f64xsubf128@@GLIBC_2.28+0x1074>
   55028:	and	x2, x2, #0xfff7ffffffffffff
   5502c:	and	x0, x9, #0x7
   55030:	mov	x1, #0x1                   	// #1
   55034:	b	54c24 <f64xsubf128@@GLIBC_2.28+0xea4>
   55038:	mov	x1, #0x7fff                	// #32767
   5503c:	neg	w0, w0
   55040:	orr	x2, x2, #0x8000000000000
   55044:	cmp	x3, x1
   55048:	b.eq	54cc0 <f64xsubf128@@GLIBC_2.28+0xf40>  // b.none
   5504c:	cmp	w0, #0x74
   55050:	b.gt	5515c <f64xsubf128@@GLIBC_2.28+0x13dc>
   55054:	cmp	w0, #0x3f
   55058:	b.gt	55378 <f64xsubf128@@GLIBC_2.28+0x15f8>
   5505c:	mov	w1, #0x40                  	// #64
   55060:	sub	w1, w1, w0
   55064:	lsr	x5, x9, x0
   55068:	lsl	x9, x9, x1
   5506c:	cmp	x9, #0x0
   55070:	lsl	x9, x2, x1
   55074:	cset	x1, ne  // ne = any
   55078:	orr	x9, x9, x5
   5507c:	lsr	x0, x2, x0
   55080:	orr	x9, x9, x1
   55084:	sub	x4, x4, x0
   55088:	b	55168 <f64xsubf128@@GLIBC_2.28+0x13e8>
   5508c:	subs	x5, x9, x13
   55090:	cmp	x9, x13
   55094:	sbc	x3, x2, x4
   55098:	tbnz	x3, #51, 55234 <f64xsubf128@@GLIBC_2.28+0x14b4>
   5509c:	orr	x8, x5, x3
   550a0:	cbnz	x8, 55360 <f64xsubf128@@GLIBC_2.28+0x15e0>
   550a4:	and	x15, x15, #0xc00000
   550a8:	mov	x2, #0x0                   	// #0
   550ac:	cmp	x15, #0x800, lsl #12
   550b0:	mov	x1, #0x0                   	// #0
   550b4:	cset	w7, eq  // eq = none
   550b8:	b	54da8 <f64xsubf128@@GLIBC_2.28+0x1028>
   550bc:	mov	x0, #0x7fff                	// #32767
   550c0:	cmp	x8, x0
   550c4:	b.ne	54d88 <f64xsubf128@@GLIBC_2.28+0x1008>  // b.any
   550c8:	orr	x0, x2, x9
   550cc:	cbnz	x0, 54f54 <f64xsubf128@@GLIBC_2.28+0x11d4>
   550d0:	mov	x2, #0x0                   	// #0
   550d4:	mov	x8, #0x0                   	// #0
   550d8:	mov	w0, #0x0                   	// #0
   550dc:	b	54f7c <f64xsubf128@@GLIBC_2.28+0x11fc>
   550e0:	orr	x4, x4, x13
   550e4:	cmp	x4, #0x0
   550e8:	cset	x0, ne  // ne = any
   550ec:	adds	x9, x0, x9
   550f0:	cinc	x2, x2, cs  // cs = hs, nlast
   550f4:	b	54e18 <f64xsubf128@@GLIBC_2.28+0x1098>
   550f8:	mov	w4, #0x80                  	// #128
   550fc:	sub	w4, w4, w0
   55100:	cmp	w0, #0x40
   55104:	sub	w9, w1, #0x3f
   55108:	lsl	x0, x2, x4
   5510c:	orr	x0, x3, x0
   55110:	csel	x3, x0, x3, ne  // ne = any
   55114:	lsr	x9, x2, x9
   55118:	cmp	x3, #0x0
   5511c:	mov	x2, #0x0                   	// #0
   55120:	cset	x0, ne  // ne = any
   55124:	orr	x9, x0, x9
   55128:	mov	x8, x9
   5512c:	b	54c14 <f64xsubf128@@GLIBC_2.28+0xe94>
   55130:	mov	w5, #0x80                  	// #128
   55134:	sub	w5, w5, w0
   55138:	subs	w0, w0, #0x40
   5513c:	lsl	x5, x4, x5
   55140:	orr	x5, x13, x5
   55144:	csel	x13, x5, x13, ne  // ne = any
   55148:	lsr	x4, x4, x0
   5514c:	cmp	x13, #0x0
   55150:	cset	x3, ne  // ne = any
   55154:	orr	x3, x3, x4
   55158:	b	54b9c <f64xsubf128@@GLIBC_2.28+0xe1c>
   5515c:	orr	x2, x2, x9
   55160:	cmp	x2, #0x0
   55164:	cset	x9, ne  // ne = any
   55168:	subs	x9, x13, x9
   5516c:	mov	w7, w11
   55170:	sbc	x2, x4, xzr
   55174:	mov	x1, x3
   55178:	mov	x12, x14
   5517c:	b	54ba4 <f64xsubf128@@GLIBC_2.28+0xe24>
   55180:	mov	x0, #0x7fff                	// #32767
   55184:	neg	w5, w5
   55188:	orr	x2, x2, #0x8000000000000
   5518c:	cmp	x3, x0
   55190:	b.eq	54ee4 <f64xsubf128@@GLIBC_2.28+0x1164>  // b.none
   55194:	cmp	w5, #0x74
   55198:	b.gt	55368 <f64xsubf128@@GLIBC_2.28+0x15e8>
   5519c:	cmp	w5, #0x3f
   551a0:	b.gt	55428 <f64xsubf128@@GLIBC_2.28+0x16a8>
   551a4:	mov	w1, #0x40                  	// #64
   551a8:	sub	w1, w1, w5
   551ac:	lsr	x6, x9, x5
   551b0:	lsl	x9, x9, x1
   551b4:	cmp	x9, #0x0
   551b8:	cset	x0, ne  // ne = any
   551bc:	lsl	x9, x2, x1
   551c0:	orr	x9, x9, x6
   551c4:	lsr	x5, x2, x5
   551c8:	orr	x9, x9, x0
   551cc:	add	x4, x4, x5
   551d0:	adds	x9, x9, x13
   551d4:	mov	x1, x3
   551d8:	cinc	x2, x4, cs  // cs = hs, nlast
   551dc:	b	54e18 <f64xsubf128@@GLIBC_2.28+0x1098>
   551e0:	mov	w0, #0x80                  	// #128
   551e4:	sub	w0, w0, w5
   551e8:	subs	w5, w5, #0x40
   551ec:	lsl	x0, x4, x0
   551f0:	orr	x0, x13, x0
   551f4:	csel	x13, x0, x13, ne  // ne = any
   551f8:	lsr	x4, x4, x5
   551fc:	cmp	x13, #0x0
   55200:	cset	x0, ne  // ne = any
   55204:	orr	x0, x0, x4
   55208:	b	550ec <f64xsubf128@@GLIBC_2.28+0x136c>
   5520c:	mov	x1, #0x7fff                	// #32767
   55210:	cmp	x0, x1
   55214:	b.eq	55470 <f64xsubf128@@GLIBC_2.28+0x16f0>  // b.none
   55218:	adds	x9, x9, x13
   5521c:	mov	x1, x0
   55220:	adc	x2, x4, x2
   55224:	ubfx	x0, x9, #1, #3
   55228:	extr	x9, x2, x9, #1
   5522c:	lsr	x2, x2, #1
   55230:	b	54c24 <f64xsubf128@@GLIBC_2.28+0xea4>
   55234:	cmp	x13, x9
   55238:	mov	w7, w11
   5523c:	sbc	x3, x4, x2
   55240:	sub	x9, x13, x9
   55244:	mov	x12, x14
   55248:	b	54bac <f64xsubf128@@GLIBC_2.28+0xe2c>
   5524c:	mov	x12, #0x7fff                	// #32767
   55250:	cmp	x1, x12
   55254:	b.eq	55280 <f64xsubf128@@GLIBC_2.28+0x1500>  // b.none
   55258:	cmp	x3, x12
   5525c:	b.eq	554b0 <f64xsubf128@@GLIBC_2.28+0x1730>  // b.none
   55260:	cbnz	x5, 55298 <f64xsubf128@@GLIBC_2.28+0x1518>
   55264:	mov	w5, w0
   55268:	cbnz	x8, 55590 <f64xsubf128@@GLIBC_2.28+0x1810>
   5526c:	mov	w7, #0x0                   	// #0
   55270:	mov	x2, #0xffffffffffff        	// #281474976710655
   55274:	mov	w0, #0x1                   	// #1
   55278:	mov	x8, #0xffffffffffffffff    	// #-1
   5527c:	b	54f84 <f64xsubf128@@GLIBC_2.28+0x1204>
   55280:	cbz	x5, 555ac <f64xsubf128@@GLIBC_2.28+0x182c>
   55284:	lsr	x0, x2, #50
   55288:	cmp	x3, x1
   5528c:	eor	x0, x0, #0x1
   55290:	and	w0, w0, #0x1
   55294:	b.eq	554b0 <f64xsubf128@@GLIBC_2.28+0x1730>  // b.none
   55298:	cbz	x8, 554cc <f64xsubf128@@GLIBC_2.28+0x174c>
   5529c:	bfi	x6, x2, #61, #3
   552a0:	lsr	x3, x2, #3
   552a4:	tbz	x2, #50, 552c0 <f64xsubf128@@GLIBC_2.28+0x1540>
   552a8:	lsr	x1, x4, #3
   552ac:	tbnz	x4, #50, 552c0 <f64xsubf128@@GLIBC_2.28+0x1540>
   552b0:	mov	x6, x10
   552b4:	mov	w7, w11
   552b8:	bfi	x6, x4, #61, #3
   552bc:	mov	x3, x1
   552c0:	extr	x2, x3, x6, #61
   552c4:	bfi	x6, x2, #61, #3
   552c8:	lsr	x2, x2, #3
   552cc:	mov	x8, x6
   552d0:	b	54f7c <f64xsubf128@@GLIBC_2.28+0x11fc>
   552d4:	mov	x0, #0x7fff                	// #32767
   552d8:	cmp	x8, x0
   552dc:	b.ne	54d88 <f64xsubf128@@GLIBC_2.28+0x1008>  // b.any
   552e0:	orr	x0, x2, x9
   552e4:	cbz	x0, 550d0 <f64xsubf128@@GLIBC_2.28+0x1350>
   552e8:	lsr	x5, x2, #50
   552ec:	eor	w5, w5, #0x1
   552f0:	b	54f60 <f64xsubf128@@GLIBC_2.28+0x11e0>
   552f4:	cbz	x8, 55408 <f64xsubf128@@GLIBC_2.28+0x1688>
   552f8:	mov	w7, w11
   552fc:	mov	x2, x4
   55300:	mov	x9, x13
   55304:	mov	x12, x14
   55308:	mov	x1, #0x0                   	// #0
   5530c:	mov	x3, #0x0                   	// #0
   55310:	b	54fec <f64xsubf128@@GLIBC_2.28+0x126c>
   55314:	ands	x3, x15, #0xc00000
   55318:	b.eq	553a4 <f64xsubf128@@GLIBC_2.28+0x1624>  // b.none
   5531c:	cmp	x3, #0x400, lsl #12
   55320:	eor	w0, w7, #0x1
   55324:	cset	w1, eq  // eq = none
   55328:	tst	w1, w0
   5532c:	b.ne	555c8 <f64xsubf128@@GLIBC_2.28+0x1848>  // b.any
   55330:	cmp	x3, #0x800, lsl #12
   55334:	b.eq	55574 <f64xsubf128@@GLIBC_2.28+0x17f4>  // b.none
   55338:	cmp	x3, #0x400, lsl #12
   5533c:	mov	w0, #0x14                  	// #20
   55340:	b.ne	54e50 <f64xsubf128@@GLIBC_2.28+0x10d0>  // b.any
   55344:	mov	x2, #0xffffffffffffffff    	// #-1
   55348:	mov	x1, #0x7ffe                	// #32766
   5534c:	mov	x9, x2
   55350:	mov	w5, #0x0                   	// #0
   55354:	mov	w0, #0x14                  	// #20
   55358:	cbnz	x12, 54f14 <f64xsubf128@@GLIBC_2.28+0x1194>
   5535c:	b	54f0c <f64xsubf128@@GLIBC_2.28+0x118c>
   55360:	mov	x9, x5
   55364:	b	54bac <f64xsubf128@@GLIBC_2.28+0xe2c>
   55368:	orr	x2, x2, x9
   5536c:	cmp	x2, #0x0
   55370:	cset	x9, ne  // ne = any
   55374:	b	551d0 <f64xsubf128@@GLIBC_2.28+0x1450>
   55378:	mov	w1, #0x80                  	// #128
   5537c:	sub	w1, w1, w0
   55380:	subs	w0, w0, #0x40
   55384:	lsl	x1, x2, x1
   55388:	orr	x1, x9, x1
   5538c:	csel	x9, x1, x9, ne  // ne = any
   55390:	lsr	x2, x2, x0
   55394:	cmp	x9, #0x0
   55398:	cset	x9, ne  // ne = any
   5539c:	orr	x9, x9, x2
   553a0:	b	55168 <f64xsubf128@@GLIBC_2.28+0x13e8>
   553a4:	mov	w0, #0x14                  	// #20
   553a8:	b	54e94 <f64xsubf128@@GLIBC_2.28+0x1114>
   553ac:	lsr	x5, x4, #50
   553b0:	mov	w7, w11
   553b4:	eor	x5, x5, #0x1
   553b8:	mov	x9, x13
   553bc:	and	w5, w5, #0x1
   553c0:	mov	x2, x4
   553c4:	b	54f60 <f64xsubf128@@GLIBC_2.28+0x11e0>
   553c8:	mov	x8, #0x7fff                	// #32767
   553cc:	cmp	x1, x8
   553d0:	b.eq	554f0 <f64xsubf128@@GLIBC_2.28+0x1770>  // b.none
   553d4:	cmp	x3, x8
   553d8:	b.eq	55564 <f64xsubf128@@GLIBC_2.28+0x17e4>  // b.none
   553dc:	cbnz	x0, 55508 <f64xsubf128@@GLIBC_2.28+0x1788>
   553e0:	mov	x2, x4
   553e4:	mov	x9, x13
   553e8:	b	54f60 <f64xsubf128@@GLIBC_2.28+0x11e0>
   553ec:	mov	x0, #0x7fff                	// #32767
   553f0:	cmp	x3, x0
   553f4:	b.eq	555a0 <f64xsubf128@@GLIBC_2.28+0x1820>  // b.none
   553f8:	mov	x2, x4
   553fc:	mov	x9, x13
   55400:	mov	x1, x3
   55404:	b	54d88 <f64xsubf128@@GLIBC_2.28+0x1008>
   55408:	and	x15, x15, #0xc00000
   5540c:	mov	x2, #0x0                   	// #0
   55410:	cmp	x15, #0x800, lsl #12
   55414:	cset	w7, eq  // eq = none
   55418:	b	54da8 <f64xsubf128@@GLIBC_2.28+0x1028>
   5541c:	mov	x2, x4
   55420:	mov	x9, x13
   55424:	b	54c14 <f64xsubf128@@GLIBC_2.28+0xe94>
   55428:	mov	w0, #0x80                  	// #128
   5542c:	sub	w0, w0, w5
   55430:	subs	w5, w5, #0x40
   55434:	lsl	x0, x2, x0
   55438:	orr	x0, x9, x0
   5543c:	csel	x9, x0, x9, ne  // ne = any
   55440:	lsr	x2, x2, x5
   55444:	cmp	x9, #0x0
   55448:	cset	x9, ne  // ne = any
   5544c:	orr	x9, x9, x2
   55450:	b	551d0 <f64xsubf128@@GLIBC_2.28+0x1450>
   55454:	cmp	x13, x9
   55458:	mov	w7, w11
   5545c:	sbc	x2, x4, x2
   55460:	sub	x9, x13, x9
   55464:	mov	x1, x3
   55468:	mov	x12, x5
   5546c:	b	54ba4 <f64xsubf128@@GLIBC_2.28+0xe24>
   55470:	ands	x3, x15, #0xc00000
   55474:	b.eq	553a4 <f64xsubf128@@GLIBC_2.28+0x1624>  // b.none
   55478:	cmp	x3, #0x400, lsl #12
   5547c:	eor	w0, w7, #0x1
   55480:	csel	w0, w0, wzr, eq  // eq = none
   55484:	cbnz	w0, 555c8 <f64xsubf128@@GLIBC_2.28+0x1848>
   55488:	cmp	x3, #0x800, lsl #12
   5548c:	b.ne	55338 <f64xsubf128@@GLIBC_2.28+0x15b8>  // b.any
   55490:	cbz	x12, 55578 <f64xsubf128@@GLIBC_2.28+0x17f8>
   55494:	mov	w0, #0x14                  	// #20
   55498:	mov	x16, #0x1                   	// #1
   5549c:	b	54e94 <f64xsubf128@@GLIBC_2.28+0x1114>
   554a0:	orr	x0, x4, x13
   554a4:	cbnz	x0, 553ac <f64xsubf128@@GLIBC_2.28+0x162c>
   554a8:	mov	w7, w11
   554ac:	b	550d0 <f64xsubf128@@GLIBC_2.28+0x1350>
   554b0:	cbz	x8, 555bc <f64xsubf128@@GLIBC_2.28+0x183c>
   554b4:	tst	x4, #0x4000000000000
   554b8:	csinc	w0, w0, wzr, ne  // ne = any
   554bc:	cbnz	x5, 5529c <f64xsubf128@@GLIBC_2.28+0x151c>
   554c0:	mov	w7, w11
   554c4:	mov	x2, x4
   554c8:	mov	x9, x13
   554cc:	mov	w5, w0
   554d0:	b	54f60 <f64xsubf128@@GLIBC_2.28+0x11e0>
   554d4:	orr	x8, x5, x3
   554d8:	cbz	x8, 55408 <f64xsubf128@@GLIBC_2.28+0x1688>
   554dc:	and	x0, x5, #0x7
   554e0:	mov	x9, x5
   554e4:	mov	x2, x3
   554e8:	mov	w5, #0x1                   	// #1
   554ec:	b	54c24 <f64xsubf128@@GLIBC_2.28+0xea4>
   554f0:	cbz	x0, 5555c <f64xsubf128@@GLIBC_2.28+0x17dc>
   554f4:	lsr	x5, x2, #50
   554f8:	cmp	x3, x1
   554fc:	eor	x5, x5, #0x1
   55500:	and	w5, w5, #0x1
   55504:	b.eq	555d4 <f64xsubf128@@GLIBC_2.28+0x1854>  // b.none
   55508:	orr	x13, x4, x13
   5550c:	cbz	x13, 54f60 <f64xsubf128@@GLIBC_2.28+0x11e0>
   55510:	bfi	x6, x2, #61, #3
   55514:	lsr	x0, x2, #3
   55518:	tbz	x2, #50, 55534 <f64xsubf128@@GLIBC_2.28+0x17b4>
   5551c:	lsr	x1, x4, #3
   55520:	tbnz	x4, #50, 55534 <f64xsubf128@@GLIBC_2.28+0x17b4>
   55524:	and	x6, x10, #0x1fffffffffffffff
   55528:	mov	w7, w11
   5552c:	orr	x6, x6, x4, lsl #61
   55530:	mov	x0, x1
   55534:	extr	x2, x0, x6, #61
   55538:	mov	w0, w5
   5553c:	bfi	x6, x2, #61, #3
   55540:	lsr	x2, x2, #3
   55544:	mov	x8, x6
   55548:	b	54f7c <f64xsubf128@@GLIBC_2.28+0x11fc>
   5554c:	adds	x9, x9, x13
   55550:	mov	x1, x3
   55554:	adc	x2, x4, x2
   55558:	b	54e18 <f64xsubf128@@GLIBC_2.28+0x1098>
   5555c:	cmp	x3, x1
   55560:	b.ne	553e0 <f64xsubf128@@GLIBC_2.28+0x1660>  // b.any
   55564:	orr	x1, x4, x13
   55568:	cbnz	x1, 555dc <f64xsubf128@@GLIBC_2.28+0x185c>
   5556c:	cbz	x0, 550d0 <f64xsubf128@@GLIBC_2.28+0x1350>
   55570:	b	54f60 <f64xsubf128@@GLIBC_2.28+0x11e0>
   55574:	cbnz	x16, 55494 <f64xsubf128@@GLIBC_2.28+0x1714>
   55578:	mov	x2, #0xffffffffffffffff    	// #-1
   5557c:	mov	w7, #0x0                   	// #0
   55580:	mov	x9, x2
   55584:	mov	x1, #0x7ffe                	// #32766
   55588:	mov	w0, #0x14                  	// #20
   5558c:	b	54c54 <f64xsubf128@@GLIBC_2.28+0xed4>
   55590:	mov	w7, w11
   55594:	mov	x2, x4
   55598:	mov	x9, x13
   5559c:	b	54f60 <f64xsubf128@@GLIBC_2.28+0x11e0>
   555a0:	orr	x0, x4, x13
   555a4:	cbz	x0, 550d0 <f64xsubf128@@GLIBC_2.28+0x1350>
   555a8:	b	54eec <f64xsubf128@@GLIBC_2.28+0x116c>
   555ac:	cmp	x3, x1
   555b0:	b.eq	554b0 <f64xsubf128@@GLIBC_2.28+0x1730>  // b.none
   555b4:	mov	w5, #0x0                   	// #0
   555b8:	b	55268 <f64xsubf128@@GLIBC_2.28+0x14e8>
   555bc:	cbnz	x5, 554cc <f64xsubf128@@GLIBC_2.28+0x174c>
   555c0:	mov	w5, w0
   555c4:	b	55268 <f64xsubf128@@GLIBC_2.28+0x14e8>
   555c8:	mov	w0, #0x14                  	// #20
   555cc:	mov	x16, #0x0                   	// #0
   555d0:	b	54e94 <f64xsubf128@@GLIBC_2.28+0x1114>
   555d4:	orr	x1, x4, x13
   555d8:	cbz	x1, 54f60 <f64xsubf128@@GLIBC_2.28+0x11e0>
   555dc:	tst	x4, #0x4000000000000
   555e0:	csinc	w5, w5, wzr, ne  // ne = any
   555e4:	cbnz	x0, 55510 <f64xsubf128@@GLIBC_2.28+0x1790>
   555e8:	b	553e0 <f64xsubf128@@GLIBC_2.28+0x1660>
   555ec:	mov	x8, #0x0                   	// #0
   555f0:	mov	w1, #0x7fff                	// #32767
   555f4:	mov	x2, #0x0                   	// #0
   555f8:	b	54c70 <f64xsubf128@@GLIBC_2.28+0xef0>
   555fc:	nop
   55600:	stp	x29, x30, [sp, #-48]!
   55604:	mov	x29, sp
   55608:	str	q0, [sp, #16]
   5560c:	str	q1, [sp, #32]
   55610:	ldp	x2, x0, [sp, #16]
   55614:	ldp	x5, x3, [sp, #32]
   55618:	mrs	x10, fpcr
   5561c:	lsr	x1, x0, #63
   55620:	ubfx	x6, x0, #0, #48
   55624:	and	w13, w1, #0xff
   55628:	mov	x14, x1
   5562c:	ubfx	x7, x0, #48, #15
   55630:	cbz	w7, 55a50 <f64xsubf128@@GLIBC_2.28+0x1cd0>
   55634:	mov	w4, #0x7fff                	// #32767
   55638:	cmp	w7, w4
   5563c:	b.eq	55a98 <f64xsubf128@@GLIBC_2.28+0x1d18>  // b.none
   55640:	and	x7, x7, #0xffff
   55644:	extr	x6, x6, x2, #61
   55648:	mov	x15, #0xffffffffffffc001    	// #-16383
   5564c:	orr	x4, x6, #0x8000000000000
   55650:	add	x7, x7, x15
   55654:	lsl	x2, x2, #3
   55658:	mov	x1, #0x0                   	// #0
   5565c:	mov	x16, #0x0                   	// #0
   55660:	mov	w0, #0x0                   	// #0
   55664:	lsr	x8, x3, #63
   55668:	ubfx	x6, x3, #0, #48
   5566c:	and	w15, w8, #0xff
   55670:	ubfx	x9, x3, #48, #15
   55674:	cbz	w9, 55a0c <f64xsubf128@@GLIBC_2.28+0x1c8c>
   55678:	mov	w11, #0x7fff                	// #32767
   5567c:	cmp	w9, w11
   55680:	b.eq	55744 <f64xsubf128@@GLIBC_2.28+0x19c4>  // b.none
   55684:	and	x9, x9, #0xffff
   55688:	extr	x6, x6, x5, #61
   5568c:	mov	x12, #0xffffffffffffc001    	// #-16383
   55690:	orr	x6, x6, #0x8000000000000
   55694:	add	x9, x9, x12
   55698:	lsl	x5, x5, #3
   5569c:	sub	x7, x7, x9
   556a0:	mov	x9, #0x0                   	// #0
   556a4:	eor	w11, w13, w15
   556a8:	cmp	x1, #0x9
   556ac:	and	x3, x11, #0xff
   556b0:	mov	x12, x3
   556b4:	b.gt	559e4 <f64xsubf128@@GLIBC_2.28+0x1c64>
   556b8:	cmp	x1, #0x7
   556bc:	b.gt	55ba4 <f64xsubf128@@GLIBC_2.28+0x1e24>
   556c0:	cmp	x1, #0x3
   556c4:	b.eq	556e0 <f64xsubf128@@GLIBC_2.28+0x1960>  // b.none
   556c8:	b.le	559b4 <f64xsubf128@@GLIBC_2.28+0x1c34>
   556cc:	cmp	x1, #0x5
   556d0:	b.eq	559f4 <f64xsubf128@@GLIBC_2.28+0x1c74>  // b.none
   556d4:	b.le	557d8 <f64xsubf128@@GLIBC_2.28+0x1a58>
   556d8:	cmp	x1, #0x6
   556dc:	b.eq	557a8 <f64xsubf128@@GLIBC_2.28+0x1a28>  // b.none
   556e0:	cmp	x9, #0x1
   556e4:	b.eq	55b28 <f64xsubf128@@GLIBC_2.28+0x1da8>  // b.none
   556e8:	cbz	x9, 556fc <f64xsubf128@@GLIBC_2.28+0x197c>
   556ec:	cmp	x9, #0x2
   556f0:	b.eq	55d2c <f64xsubf128@@GLIBC_2.28+0x1fac>  // b.none
   556f4:	cmp	x9, #0x3
   556f8:	b.eq	55d14 <f64xsubf128@@GLIBC_2.28+0x1f94>  // b.none
   556fc:	mov	x1, #0x3fff                	// #16383
   55700:	mov	x12, x8
   55704:	add	x3, x7, x1
   55708:	cmp	x3, #0x0
   5570c:	b.le	55be8 <f64xsubf128@@GLIBC_2.28+0x1e68>
   55710:	tst	x5, #0x7
   55714:	b.ne	55b58 <f64xsubf128@@GLIBC_2.28+0x1dd8>  // b.any
   55718:	and	w11, w12, #0x1
   5571c:	tbz	x6, #52, 55728 <f64xsubf128@@GLIBC_2.28+0x19a8>
   55720:	and	x6, x6, #0xffefffffffffffff
   55724:	add	x3, x7, #0x4, lsl #12
   55728:	mov	x1, #0x7ffe                	// #32766
   5572c:	cmp	x3, x1
   55730:	b.gt	55cd0 <f64xsubf128@@GLIBC_2.28+0x1f50>
   55734:	and	w1, w3, #0x7fff
   55738:	extr	x2, x6, x5, #3
   5573c:	ubfx	x6, x6, #3, #48
   55740:	b	557b4 <f64xsubf128@@GLIBC_2.28+0x1a34>
   55744:	mov	x9, #0xffffffffffff8001    	// #-32767
   55748:	orr	x3, x6, x5
   5574c:	add	x7, x7, x9
   55750:	cbz	x3, 55acc <f64xsubf128@@GLIBC_2.28+0x1d4c>
   55754:	tst	x6, #0x800000000000
   55758:	orr	x1, x1, #0x3
   5575c:	csinc	w0, w0, wzr, ne  // ne = any
   55760:	mov	x9, #0x3                   	// #3
   55764:	eor	w11, w13, w15
   55768:	cmp	x1, #0x9
   5576c:	and	x3, x11, #0xff
   55770:	mov	x12, x3
   55774:	b.le	556b8 <f64xsubf128@@GLIBC_2.28+0x1938>
   55778:	cmp	x1, #0xf
   5577c:	b.ne	559e4 <f64xsubf128@@GLIBC_2.28+0x1c64>  // b.any
   55780:	tbz	x4, #47, 55b90 <f64xsubf128@@GLIBC_2.28+0x1e10>
   55784:	tbnz	x6, #47, 55b90 <f64xsubf128@@GLIBC_2.28+0x1e10>
   55788:	orr	x6, x6, #0x800000000000
   5578c:	mov	w11, w15
   55790:	and	x6, x6, #0xffffffffffff
   55794:	mov	x2, x5
   55798:	mov	w1, #0x7fff                	// #32767
   5579c:	b	557b4 <f64xsubf128@@GLIBC_2.28+0x1a34>
   557a0:	cmp	x1, #0x2
   557a4:	b.ne	557e0 <f64xsubf128@@GLIBC_2.28+0x1a60>  // b.any
   557a8:	mov	w1, #0x0                   	// #0
   557ac:	mov	x6, #0x0                   	// #0
   557b0:	mov	x2, #0x0                   	// #0
   557b4:	mov	x5, #0x0                   	// #0
   557b8:	orr	w1, w1, w11, lsl #15
   557bc:	bfxil	x5, x6, #0, #48
   557c0:	fmov	d0, x2
   557c4:	bfi	x5, x1, #48, #16
   557c8:	fmov	v0.d[1], x5
   557cc:	cbnz	w0, 559d4 <f64xsubf128@@GLIBC_2.28+0x1c54>
   557d0:	ldp	x29, x30, [sp], #48
   557d4:	ret
   557d8:	cmp	x1, #0x4
   557dc:	b.eq	557a8 <f64xsubf128@@GLIBC_2.28+0x1a28>  // b.none
   557e0:	cmp	x4, x6
   557e4:	b.ls	55b3c <f64xsubf128@@GLIBC_2.28+0x1dbc>  // b.plast
   557e8:	lsr	x3, x4, #1
   557ec:	extr	x8, x4, x2, #1
   557f0:	lsl	x2, x2, #63
   557f4:	ubfx	x14, x6, #20, #32
   557f8:	extr	x9, x6, x5, #52
   557fc:	lsl	x13, x5, #12
   55800:	and	x15, x9, #0xffffffff
   55804:	udiv	x5, x3, x14
   55808:	msub	x3, x5, x14, x3
   5580c:	mul	x1, x15, x5
   55810:	extr	x3, x3, x8, #32
   55814:	cmp	x1, x3
   55818:	b.ls	5582c <f64xsubf128@@GLIBC_2.28+0x1aac>  // b.plast
   5581c:	adds	x3, x9, x3
   55820:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
   55824:	b.hi	55e0c <f64xsubf128@@GLIBC_2.28+0x208c>  // b.pmore
   55828:	sub	x5, x5, #0x1
   5582c:	sub	x3, x3, x1
   55830:	mov	x4, x8
   55834:	udiv	x1, x3, x14
   55838:	msub	x3, x1, x14, x3
   5583c:	mul	x6, x15, x1
   55840:	bfi	x4, x3, #32, #32
   55844:	cmp	x6, x4
   55848:	b.ls	5585c <f64xsubf128@@GLIBC_2.28+0x1adc>  // b.plast
   5584c:	adds	x4, x9, x4
   55850:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
   55854:	b.hi	55e00 <f64xsubf128@@GLIBC_2.28+0x2080>  // b.pmore
   55858:	sub	x1, x1, #0x1
   5585c:	orr	x8, x1, x5, lsl #32
   55860:	and	x17, x13, #0xffffffff
   55864:	and	x1, x8, #0xffffffff
   55868:	lsr	x16, x13, #32
   5586c:	lsr	x5, x8, #32
   55870:	sub	x4, x4, x6
   55874:	mov	x18, #0x100000000           	// #4294967296
   55878:	mul	x3, x1, x17
   5587c:	mul	x30, x5, x17
   55880:	madd	x6, x16, x1, x30
   55884:	and	x1, x3, #0xffffffff
   55888:	mul	x5, x5, x16
   5588c:	add	x3, x6, x3, lsr #32
   55890:	add	x6, x5, x18
   55894:	cmp	x30, x3
   55898:	csel	x5, x6, x5, hi  // hi = pmore
   5589c:	add	x1, x1, x3, lsl #32
   558a0:	add	x5, x5, x3, lsr #32
   558a4:	cmp	x4, x5
   558a8:	b.cc	55bb4 <f64xsubf128@@GLIBC_2.28+0x1e34>  // b.lo, b.ul, b.last
   558ac:	ccmp	x2, x1, #0x2, eq  // eq = none
   558b0:	mov	x6, x8
   558b4:	b.cc	55bb4 <f64xsubf128@@GLIBC_2.28+0x1e34>  // b.lo, b.ul, b.last
   558b8:	subs	x8, x2, x1
   558bc:	mov	x3, #0x3fff                	// #16383
   558c0:	cmp	x2, x1
   558c4:	add	x3, x7, x3
   558c8:	sbc	x4, x4, x5
   558cc:	cmp	x9, x4
   558d0:	b.eq	55e18 <f64xsubf128@@GLIBC_2.28+0x2098>  // b.none
   558d4:	udiv	x5, x4, x14
   558d8:	msub	x4, x5, x14, x4
   558dc:	mul	x2, x15, x5
   558e0:	extr	x1, x4, x8, #32
   558e4:	cmp	x2, x1
   558e8:	b.ls	558fc <f64xsubf128@@GLIBC_2.28+0x1b7c>  // b.plast
   558ec:	adds	x1, x9, x1
   558f0:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
   558f4:	b.hi	55ed0 <f64xsubf128@@GLIBC_2.28+0x2150>  // b.pmore
   558f8:	sub	x5, x5, #0x1
   558fc:	sub	x1, x1, x2
   55900:	udiv	x2, x1, x14
   55904:	msub	x1, x2, x14, x1
   55908:	mul	x15, x15, x2
   5590c:	bfi	x8, x1, #32, #32
   55910:	mov	x1, x8
   55914:	cmp	x15, x8
   55918:	b.ls	5592c <f64xsubf128@@GLIBC_2.28+0x1bac>  // b.plast
   5591c:	adds	x1, x9, x8
   55920:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
   55924:	b.hi	55edc <f64xsubf128@@GLIBC_2.28+0x215c>  // b.pmore
   55928:	sub	x2, x2, #0x1
   5592c:	orr	x5, x2, x5, lsl #32
   55930:	mov	x11, #0x100000000           	// #4294967296
   55934:	and	x4, x5, #0xffffffff
   55938:	sub	x1, x1, x15
   5593c:	lsr	x14, x5, #32
   55940:	mul	x2, x17, x4
   55944:	mul	x17, x14, x17
   55948:	madd	x4, x16, x4, x17
   5594c:	and	x8, x2, #0xffffffff
   55950:	mul	x16, x16, x14
   55954:	add	x2, x4, x2, lsr #32
   55958:	add	x4, x16, x11
   5595c:	cmp	x17, x2
   55960:	csel	x16, x4, x16, hi  // hi = pmore
   55964:	add	x4, x8, x2, lsl #32
   55968:	add	x16, x16, x2, lsr #32
   5596c:	cmp	x1, x16
   55970:	b.cs	55d50 <f64xsubf128@@GLIBC_2.28+0x1fd0>  // b.hs, b.nlast
   55974:	adds	x2, x9, x1
   55978:	sub	x8, x5, #0x1
   5597c:	mov	x1, x2
   55980:	b.cs	55994 <f64xsubf128@@GLIBC_2.28+0x1c14>  // b.hs, b.nlast
   55984:	cmp	x2, x16
   55988:	b.cc	55e50 <f64xsubf128@@GLIBC_2.28+0x20d0>  // b.lo, b.ul, b.last
   5598c:	ccmp	x13, x4, #0x2, eq  // eq = none
   55990:	b.cc	55e50 <f64xsubf128@@GLIBC_2.28+0x20d0>  // b.lo, b.ul, b.last
   55994:	cmp	x13, x4
   55998:	mov	x5, x8
   5599c:	cset	w2, ne  // ne = any
   559a0:	cmp	w2, #0x0
   559a4:	orr	x2, x5, #0x1
   559a8:	ccmp	x1, x16, #0x0, eq  // eq = none
   559ac:	csel	x5, x2, x5, ne  // ne = any
   559b0:	b	55708 <f64xsubf128@@GLIBC_2.28+0x1988>
   559b4:	cmp	x1, #0x1
   559b8:	b.ne	557a0 <f64xsubf128@@GLIBC_2.28+0x1a20>  // b.any
   559bc:	mov	x4, #0x0                   	// #0
   559c0:	fmov	d0, x4
   559c4:	lsl	x3, x3, #63
   559c8:	orr	w0, w0, #0x2
   559cc:	orr	x5, x3, #0x7fff000000000000
   559d0:	fmov	v0.d[1], x5
   559d4:	str	q0, [sp, #16]
   559d8:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   559dc:	ldr	q0, [sp, #16]
   559e0:	b	557d0 <f64xsubf128@@GLIBC_2.28+0x1a50>
   559e4:	cmp	x1, #0xb
   559e8:	b.gt	55ab8 <f64xsubf128@@GLIBC_2.28+0x1d38>
   559ec:	cmp	x1, #0xa
   559f0:	b.ne	556e0 <f64xsubf128@@GLIBC_2.28+0x1960>  // b.any
   559f4:	mov	w11, #0x0                   	// #0
   559f8:	mov	x6, #0xffffffffffff        	// #281474976710655
   559fc:	mov	x2, #0xffffffffffffffff    	// #-1
   55a00:	mov	w0, #0x1                   	// #1
   55a04:	mov	w1, #0x7fff                	// #32767
   55a08:	b	557b4 <f64xsubf128@@GLIBC_2.28+0x1a34>
   55a0c:	orr	x3, x6, x5
   55a10:	cbz	x3, 55af8 <f64xsubf128@@GLIBC_2.28+0x1d78>
   55a14:	cbz	x6, 55cac <f64xsubf128@@GLIBC_2.28+0x1f2c>
   55a18:	clz	x3, x6
   55a1c:	sub	x9, x3, #0xf
   55a20:	add	w12, w9, #0x3
   55a24:	mov	w11, #0x3d                  	// #61
   55a28:	sub	w9, w11, w9
   55a2c:	lsl	x6, x6, x12
   55a30:	lsr	x9, x5, x9
   55a34:	orr	x6, x9, x6
   55a38:	lsl	x5, x5, x12
   55a3c:	add	x7, x3, x7
   55a40:	mov	x11, #0x3fef                	// #16367
   55a44:	mov	x9, #0x0                   	// #0
   55a48:	add	x7, x7, x11
   55a4c:	b	556a4 <f64xsubf128@@GLIBC_2.28+0x1924>
   55a50:	orr	x4, x6, x2
   55a54:	cbz	x4, 55ae0 <f64xsubf128@@GLIBC_2.28+0x1d60>
   55a58:	cbz	x6, 55c88 <f64xsubf128@@GLIBC_2.28+0x1f08>
   55a5c:	clz	x0, x6
   55a60:	sub	x4, x0, #0xf
   55a64:	add	w7, w4, #0x3
   55a68:	mov	w1, #0x3d                  	// #61
   55a6c:	sub	w4, w1, w4
   55a70:	lsl	x6, x6, x7
   55a74:	lsr	x4, x2, x4
   55a78:	orr	x4, x4, x6
   55a7c:	lsl	x2, x2, x7
   55a80:	mov	x7, #0xffffffffffffc011    	// #-16367
   55a84:	mov	x1, #0x0                   	// #0
   55a88:	sub	x7, x7, x0
   55a8c:	mov	x16, #0x0                   	// #0
   55a90:	mov	w0, #0x0                   	// #0
   55a94:	b	55664 <f64xsubf128@@GLIBC_2.28+0x18e4>
   55a98:	orr	x4, x6, x2
   55a9c:	cbnz	x4, 55b0c <f64xsubf128@@GLIBC_2.28+0x1d8c>
   55aa0:	mov	x2, #0x0                   	// #0
   55aa4:	mov	x1, #0x8                   	// #8
   55aa8:	mov	x7, #0x7fff                	// #32767
   55aac:	mov	x16, #0x2                   	// #2
   55ab0:	mov	w0, #0x0                   	// #0
   55ab4:	b	55664 <f64xsubf128@@GLIBC_2.28+0x18e4>
   55ab8:	mov	x6, x4
   55abc:	mov	x5, x2
   55ac0:	mov	x8, x14
   55ac4:	mov	x9, x16
   55ac8:	b	556e0 <f64xsubf128@@GLIBC_2.28+0x1960>
   55acc:	orr	x1, x1, #0x2
   55ad0:	mov	x6, #0x0                   	// #0
   55ad4:	mov	x5, #0x0                   	// #0
   55ad8:	mov	x9, #0x2                   	// #2
   55adc:	b	55764 <f64xsubf128@@GLIBC_2.28+0x19e4>
   55ae0:	mov	x2, #0x0                   	// #0
   55ae4:	mov	x1, #0x4                   	// #4
   55ae8:	mov	x7, #0x0                   	// #0
   55aec:	mov	x16, #0x1                   	// #1
   55af0:	mov	w0, #0x0                   	// #0
   55af4:	b	55664 <f64xsubf128@@GLIBC_2.28+0x18e4>
   55af8:	orr	x1, x1, #0x1
   55afc:	mov	x6, #0x0                   	// #0
   55b00:	mov	x5, #0x0                   	// #0
   55b04:	mov	x9, #0x1                   	// #1
   55b08:	b	556a4 <f64xsubf128@@GLIBC_2.28+0x1924>
   55b0c:	lsr	x0, x6, #47
   55b10:	mov	x4, x6
   55b14:	eor	w0, w0, #0x1
   55b18:	mov	x1, #0xc                   	// #12
   55b1c:	mov	x7, #0x7fff                	// #32767
   55b20:	mov	x16, #0x3                   	// #3
   55b24:	b	55664 <f64xsubf128@@GLIBC_2.28+0x18e4>
   55b28:	mov	w11, w8
   55b2c:	mov	w1, #0x0                   	// #0
   55b30:	mov	x6, #0x0                   	// #0
   55b34:	mov	x2, #0x0                   	// #0
   55b38:	b	557b4 <f64xsubf128@@GLIBC_2.28+0x1a34>
   55b3c:	ccmp	x5, x2, #0x2, eq  // eq = none
   55b40:	b.ls	557e8 <f64xsubf128@@GLIBC_2.28+0x1a68>  // b.plast
   55b44:	mov	x8, x2
   55b48:	sub	x7, x7, #0x1
   55b4c:	mov	x3, x4
   55b50:	mov	x2, #0x0                   	// #0
   55b54:	b	557f4 <f64xsubf128@@GLIBC_2.28+0x1a74>
   55b58:	and	x1, x10, #0xc00000
   55b5c:	orr	w0, w0, #0x10
   55b60:	cmp	x1, #0x400, lsl #12
   55b64:	b.eq	55eb8 <f64xsubf128@@GLIBC_2.28+0x2138>  // b.none
   55b68:	cmp	x1, #0x800, lsl #12
   55b6c:	b.eq	55dcc <f64xsubf128@@GLIBC_2.28+0x204c>  // b.none
   55b70:	cbnz	x1, 55718 <f64xsubf128@@GLIBC_2.28+0x1998>
   55b74:	and	x1, x5, #0xf
   55b78:	and	w11, w12, #0x1
   55b7c:	cmp	x1, #0x4
   55b80:	b.eq	5571c <f64xsubf128@@GLIBC_2.28+0x199c>  // b.none
   55b84:	adds	x5, x5, #0x4
   55b88:	cinc	x6, x6, cs  // cs = hs, nlast
   55b8c:	b	5571c <f64xsubf128@@GLIBC_2.28+0x199c>
   55b90:	orr	x6, x4, #0x800000000000
   55b94:	mov	w11, w13
   55b98:	and	x6, x6, #0xffffffffffff
   55b9c:	mov	w1, #0x7fff                	// #32767
   55ba0:	b	557b4 <f64xsubf128@@GLIBC_2.28+0x1a34>
   55ba4:	mov	w1, #0x7fff                	// #32767
   55ba8:	mov	x6, #0x0                   	// #0
   55bac:	mov	x2, #0x0                   	// #0
   55bb0:	b	557b4 <f64xsubf128@@GLIBC_2.28+0x1a34>
   55bb4:	adds	x3, x2, x13
   55bb8:	sub	x6, x8, #0x1
   55bbc:	adc	x4, x4, x9
   55bc0:	cset	x18, cs  // cs = hs, nlast
   55bc4:	mov	x2, x3
   55bc8:	cmp	x9, x4
   55bcc:	b.cs	55d40 <f64xsubf128@@GLIBC_2.28+0x1fc0>  // b.hs, b.nlast
   55bd0:	cmp	x5, x4
   55bd4:	b.ls	55d68 <f64xsubf128@@GLIBC_2.28+0x1fe8>  // b.plast
   55bd8:	adds	x2, x13, x3
   55bdc:	sub	x6, x8, #0x2
   55be0:	adc	x4, x4, x9
   55be4:	b	558b8 <f64xsubf128@@GLIBC_2.28+0x1b38>
   55be8:	mov	x1, #0x1                   	// #1
   55bec:	sub	x1, x1, x3
   55bf0:	cmp	x1, #0x74
   55bf4:	and	w11, w12, #0x1
   55bf8:	b.le	55c14 <f64xsubf128@@GLIBC_2.28+0x1e94>
   55bfc:	orr	x2, x5, x6
   55c00:	cbnz	x2, 55e34 <f64xsubf128@@GLIBC_2.28+0x20b4>
   55c04:	orr	w0, w0, #0x8
   55c08:	mov	w1, #0x0                   	// #0
   55c0c:	mov	x6, #0x0                   	// #0
   55c10:	b	55cf8 <f64xsubf128@@GLIBC_2.28+0x1f78>
   55c14:	cmp	x1, #0x3f
   55c18:	b.le	55d74 <f64xsubf128@@GLIBC_2.28+0x1ff4>
   55c1c:	mov	w2, #0x80                  	// #128
   55c20:	sub	w2, w2, w1
   55c24:	cmp	x1, #0x40
   55c28:	sub	w1, w1, #0x40
   55c2c:	lsl	x2, x6, x2
   55c30:	orr	x2, x5, x2
   55c34:	csel	x5, x2, x5, ne  // ne = any
   55c38:	lsr	x6, x6, x1
   55c3c:	cmp	x5, #0x0
   55c40:	cset	x2, ne  // ne = any
   55c44:	orr	x2, x2, x6
   55c48:	ands	x6, x2, #0x7
   55c4c:	b.eq	55da8 <f64xsubf128@@GLIBC_2.28+0x2028>  // b.none
   55c50:	mov	x6, #0x0                   	// #0
   55c54:	and	x10, x10, #0xc00000
   55c58:	orr	w0, w0, #0x10
   55c5c:	cmp	x10, #0x400, lsl #12
   55c60:	b.eq	55ef4 <f64xsubf128@@GLIBC_2.28+0x2174>  // b.none
   55c64:	cmp	x10, #0x800, lsl #12
   55c68:	b.eq	55f08 <f64xsubf128@@GLIBC_2.28+0x2188>  // b.none
   55c6c:	cbz	x10, 55e70 <f64xsubf128@@GLIBC_2.28+0x20f0>
   55c70:	tbnz	x6, #51, 55e88 <f64xsubf128@@GLIBC_2.28+0x2108>
   55c74:	orr	w0, w0, #0x8
   55c78:	extr	x2, x6, x2, #3
   55c7c:	mov	w1, #0x0                   	// #0
   55c80:	ubfx	x6, x6, #3, #48
   55c84:	b	55cf8 <f64xsubf128@@GLIBC_2.28+0x1f78>
   55c88:	clz	x7, x2
   55c8c:	add	x4, x7, #0x31
   55c90:	add	x0, x7, #0x40
   55c94:	cmp	x4, #0x3c
   55c98:	b.le	55a64 <f64xsubf128@@GLIBC_2.28+0x1ce4>
   55c9c:	sub	w4, w4, #0x3d
   55ca0:	lsl	x4, x2, x4
   55ca4:	mov	x2, #0x0                   	// #0
   55ca8:	b	55a80 <f64xsubf128@@GLIBC_2.28+0x1d00>
   55cac:	clz	x3, x5
   55cb0:	add	x9, x3, #0x31
   55cb4:	add	x3, x3, #0x40
   55cb8:	cmp	x9, #0x3c
   55cbc:	b.le	55a20 <f64xsubf128@@GLIBC_2.28+0x1ca0>
   55cc0:	sub	w6, w9, #0x3d
   55cc4:	lsl	x6, x5, x6
   55cc8:	mov	x5, #0x0                   	// #0
   55ccc:	b	55a3c <f64xsubf128@@GLIBC_2.28+0x1cbc>
   55cd0:	and	x2, x10, #0xc00000
   55cd4:	cmp	x2, #0x400, lsl #12
   55cd8:	b.eq	55e9c <f64xsubf128@@GLIBC_2.28+0x211c>  // b.none
   55cdc:	cmp	x2, #0x800, lsl #12
   55ce0:	b.eq	55de4 <f64xsubf128@@GLIBC_2.28+0x2064>  // b.none
   55ce4:	cbz	x2, 55dc0 <f64xsubf128@@GLIBC_2.28+0x2040>
   55ce8:	mov	x6, #0xffffffffffff        	// #281474976710655
   55cec:	mov	x2, #0xffffffffffffffff    	// #-1
   55cf0:	mov	w3, #0x14                  	// #20
   55cf4:	orr	w0, w0, w3
   55cf8:	mov	x5, #0x0                   	// #0
   55cfc:	orr	w1, w1, w11, lsl #15
   55d00:	bfxil	x5, x6, #0, #48
   55d04:	fmov	d0, x2
   55d08:	bfi	x5, x1, #48, #16
   55d0c:	fmov	v0.d[1], x5
   55d10:	b	559d4 <f64xsubf128@@GLIBC_2.28+0x1c54>
   55d14:	orr	x6, x6, #0x800000000000
   55d18:	mov	w11, w8
   55d1c:	and	x6, x6, #0xffffffffffff
   55d20:	mov	x2, x5
   55d24:	mov	w1, #0x7fff                	// #32767
   55d28:	b	557b4 <f64xsubf128@@GLIBC_2.28+0x1a34>
   55d2c:	mov	w11, w8
   55d30:	mov	w1, #0x7fff                	// #32767
   55d34:	mov	x6, #0x0                   	// #0
   55d38:	mov	x2, #0x0                   	// #0
   55d3c:	b	557b4 <f64xsubf128@@GLIBC_2.28+0x1a34>
   55d40:	cmp	x18, #0x0
   55d44:	ccmp	x9, x4, #0x0, eq  // eq = none
   55d48:	b.ne	558b8 <f64xsubf128@@GLIBC_2.28+0x1b38>  // b.any
   55d4c:	b	55bd0 <f64xsubf128@@GLIBC_2.28+0x1e50>
   55d50:	cmp	x4, #0x0
   55d54:	cset	w2, ne  // ne = any
   55d58:	cmp	w2, #0x0
   55d5c:	ccmp	x1, x16, #0x0, ne  // ne = any
   55d60:	b.ne	559a0 <f64xsubf128@@GLIBC_2.28+0x1c20>  // b.any
   55d64:	b	55974 <f64xsubf128@@GLIBC_2.28+0x1bf4>
   55d68:	ccmp	x1, x3, #0x0, eq  // eq = none
   55d6c:	b.ls	558b8 <f64xsubf128@@GLIBC_2.28+0x1b38>  // b.plast
   55d70:	b	55bd8 <f64xsubf128@@GLIBC_2.28+0x1e58>
   55d74:	mov	w2, #0x40                  	// #64
   55d78:	sub	w2, w2, w1
   55d7c:	lsr	x4, x5, x1
   55d80:	lsl	x5, x5, x2
   55d84:	cmp	x5, #0x0
   55d88:	cset	x3, ne  // ne = any
   55d8c:	lsl	x2, x6, x2
   55d90:	orr	x2, x2, x4
   55d94:	lsr	x6, x6, x1
   55d98:	orr	x2, x2, x3
   55d9c:	tst	x2, #0x7
   55da0:	b.ne	55c54 <f64xsubf128@@GLIBC_2.28+0x1ed4>  // b.any
   55da4:	tbnz	x6, #51, 55f14 <f64xsubf128@@GLIBC_2.28+0x2194>
   55da8:	mov	w1, #0x0                   	// #0
   55dac:	extr	x2, x6, x2, #3
   55db0:	ubfx	x6, x6, #3, #48
   55db4:	tbz	w10, #11, 557b4 <f64xsubf128@@GLIBC_2.28+0x1a34>
   55db8:	orr	w0, w0, #0x8
   55dbc:	b	55cf8 <f64xsubf128@@GLIBC_2.28+0x1f78>
   55dc0:	mov	w1, #0x7fff                	// #32767
   55dc4:	mov	x6, #0x0                   	// #0
   55dc8:	b	55cf0 <f64xsubf128@@GLIBC_2.28+0x1f70>
   55dcc:	mov	w11, #0x0                   	// #0
   55dd0:	cbz	x12, 5571c <f64xsubf128@@GLIBC_2.28+0x199c>
   55dd4:	adds	x5, x5, #0x8
   55dd8:	mov	w11, #0x1                   	// #1
   55ddc:	cinc	x6, x6, cs  // cs = hs, nlast
   55de0:	b	5571c <f64xsubf128@@GLIBC_2.28+0x199c>
   55de4:	cmp	x12, #0x0
   55de8:	mov	w2, #0x7fff                	// #32767
   55dec:	mov	x6, #0xffffffffffff        	// #281474976710655
   55df0:	csel	w1, w1, w2, eq  // eq = none
   55df4:	csel	x6, x6, xzr, eq  // eq = none
   55df8:	csetm	x2, eq  // eq = none
   55dfc:	b	55cf0 <f64xsubf128@@GLIBC_2.28+0x1f70>
   55e00:	sub	x1, x1, #0x2
   55e04:	add	x4, x4, x9
   55e08:	b	5585c <f64xsubf128@@GLIBC_2.28+0x1adc>
   55e0c:	sub	x5, x5, #0x2
   55e10:	add	x3, x3, x9
   55e14:	b	5582c <f64xsubf128@@GLIBC_2.28+0x1aac>
   55e18:	cmp	x3, #0x0
   55e1c:	mov	x5, #0xffffffffffffffff    	// #-1
   55e20:	b.gt	55b58 <f64xsubf128@@GLIBC_2.28+0x1dd8>
   55e24:	mov	x1, #0x1                   	// #1
   55e28:	sub	x1, x1, x3
   55e2c:	cmp	x1, #0x74
   55e30:	b.le	55c14 <f64xsubf128@@GLIBC_2.28+0x1e94>
   55e34:	and	x10, x10, #0xc00000
   55e38:	orr	w0, w0, #0x10
   55e3c:	cmp	x10, #0x400, lsl #12
   55e40:	b.eq	55ee8 <f64xsubf128@@GLIBC_2.28+0x2168>  // b.none
   55e44:	cmp	x10, #0x800, lsl #12
   55e48:	csel	x2, x12, xzr, eq  // eq = none
   55e4c:	b	55c04 <f64xsubf128@@GLIBC_2.28+0x1e84>
   55e50:	lsl	x8, x13, #1
   55e54:	sub	x5, x5, #0x2
   55e58:	cmp	x13, x8
   55e5c:	cinc	x1, x9, hi  // hi = pmore
   55e60:	cmp	x4, x8
   55e64:	add	x1, x2, x1
   55e68:	cset	w2, ne  // ne = any
   55e6c:	b	559a0 <f64xsubf128@@GLIBC_2.28+0x1c20>
   55e70:	and	x1, x2, #0xf
   55e74:	cmp	x1, #0x4
   55e78:	b.eq	55e84 <f64xsubf128@@GLIBC_2.28+0x2104>  // b.none
   55e7c:	adds	x2, x2, #0x4
   55e80:	cinc	x6, x6, cs  // cs = hs, nlast
   55e84:	tbz	x6, #51, 55c74 <f64xsubf128@@GLIBC_2.28+0x1ef4>
   55e88:	orr	w0, w0, #0x8
   55e8c:	mov	w1, #0x1                   	// #1
   55e90:	mov	x6, #0x0                   	// #0
   55e94:	mov	x2, #0x0                   	// #0
   55e98:	b	55cf8 <f64xsubf128@@GLIBC_2.28+0x1f78>
   55e9c:	cmp	x12, #0x0
   55ea0:	mov	w2, #0x7fff                	// #32767
   55ea4:	mov	x6, #0xffffffffffff        	// #281474976710655
   55ea8:	csel	w1, w1, w2, ne  // ne = any
   55eac:	csel	x6, x6, xzr, ne  // ne = any
   55eb0:	csetm	x2, ne  // ne = any
   55eb4:	b	55cf0 <f64xsubf128@@GLIBC_2.28+0x1f70>
   55eb8:	mov	w11, #0x1                   	// #1
   55ebc:	cbnz	x12, 5571c <f64xsubf128@@GLIBC_2.28+0x199c>
   55ec0:	adds	x5, x5, #0x8
   55ec4:	mov	w11, #0x0                   	// #0
   55ec8:	cinc	x6, x6, cs  // cs = hs, nlast
   55ecc:	b	5571c <f64xsubf128@@GLIBC_2.28+0x199c>
   55ed0:	sub	x5, x5, #0x2
   55ed4:	add	x1, x1, x9
   55ed8:	b	558fc <f64xsubf128@@GLIBC_2.28+0x1b7c>
   55edc:	sub	x2, x2, #0x2
   55ee0:	add	x1, x1, x9
   55ee4:	b	5592c <f64xsubf128@@GLIBC_2.28+0x1bac>
   55ee8:	mov	x2, #0x1                   	// #1
   55eec:	sub	x2, x2, x12
   55ef0:	b	55c04 <f64xsubf128@@GLIBC_2.28+0x1e84>
   55ef4:	cbnz	x12, 55e84 <f64xsubf128@@GLIBC_2.28+0x2104>
   55ef8:	adds	x2, x2, #0x8
   55efc:	cinc	x6, x6, cs  // cs = hs, nlast
   55f00:	tbnz	x6, #51, 55e88 <f64xsubf128@@GLIBC_2.28+0x2108>
   55f04:	b	55c74 <f64xsubf128@@GLIBC_2.28+0x1ef4>
   55f08:	cbnz	x12, 55ef8 <f64xsubf128@@GLIBC_2.28+0x2178>
   55f0c:	tbnz	x6, #51, 55e88 <f64xsubf128@@GLIBC_2.28+0x2108>
   55f10:	b	55c74 <f64xsubf128@@GLIBC_2.28+0x1ef4>
   55f14:	orr	w0, w0, #0x10
   55f18:	b	55e88 <f64xsubf128@@GLIBC_2.28+0x2108>
   55f1c:	nop
   55f20:	stp	x29, x30, [sp, #-48]!
   55f24:	mov	x29, sp
   55f28:	str	q0, [sp, #16]
   55f2c:	str	q1, [sp, #32]
   55f30:	ldp	x6, x1, [sp, #16]
   55f34:	ldp	x7, x0, [sp, #32]
   55f38:	mrs	x2, fpcr
   55f3c:	ubfx	x4, x1, #48, #15
   55f40:	lsr	x2, x1, #63
   55f44:	lsr	x3, x0, #63
   55f48:	ubfx	x9, x0, #0, #48
   55f4c:	mov	x5, #0x7fff                	// #32767
   55f50:	mov	x10, x6
   55f54:	cmp	x4, x5
   55f58:	and	w2, w2, #0xff
   55f5c:	ubfx	x1, x1, #0, #48
   55f60:	and	w3, w3, #0xff
   55f64:	ubfx	x0, x0, #48, #15
   55f68:	b.eq	55f9c <f64xsubf128@@GLIBC_2.28+0x221c>  // b.none
   55f6c:	cmp	x0, x5
   55f70:	b.eq	55f88 <f64xsubf128@@GLIBC_2.28+0x2208>  // b.none
   55f74:	cmp	x4, x0
   55f78:	mov	w0, #0x1                   	// #1
   55f7c:	b.eq	55fb4 <f64xsubf128@@GLIBC_2.28+0x2234>  // b.none
   55f80:	ldp	x29, x30, [sp], #48
   55f84:	ret
   55f88:	orr	x8, x9, x7
   55f8c:	cbnz	x8, 56018 <f64xsubf128@@GLIBC_2.28+0x2298>
   55f90:	mov	w0, #0x1                   	// #1
   55f94:	ldp	x29, x30, [sp], #48
   55f98:	ret
   55f9c:	orr	x5, x1, x6
   55fa0:	cbnz	x5, 55fe8 <f64xsubf128@@GLIBC_2.28+0x2268>
   55fa4:	cmp	x0, x4
   55fa8:	b.ne	55f90 <f64xsubf128@@GLIBC_2.28+0x2210>  // b.any
   55fac:	orr	x8, x9, x7
   55fb0:	cbnz	x8, 56018 <f64xsubf128@@GLIBC_2.28+0x2298>
   55fb4:	cmp	x1, x9
   55fb8:	mov	w0, #0x1                   	// #1
   55fbc:	ccmp	x6, x7, #0x0, eq  // eq = none
   55fc0:	b.ne	55f80 <f64xsubf128@@GLIBC_2.28+0x2200>  // b.any
   55fc4:	cmp	w2, w3
   55fc8:	mov	w0, #0x0                   	// #0
   55fcc:	b.eq	55f80 <f64xsubf128@@GLIBC_2.28+0x2200>  // b.none
   55fd0:	mov	w0, #0x1                   	// #1
   55fd4:	cbnz	x4, 55f80 <f64xsubf128@@GLIBC_2.28+0x2200>
   55fd8:	orr	x1, x1, x10
   55fdc:	cmp	x1, #0x0
   55fe0:	cset	w0, ne  // ne = any
   55fe4:	b	55f80 <f64xsubf128@@GLIBC_2.28+0x2200>
   55fe8:	tst	x1, #0x800000000000
   55fec:	b.ne	56004 <f64xsubf128@@GLIBC_2.28+0x2284>  // b.any
   55ff0:	mov	w0, #0x1                   	// #1
   55ff4:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   55ff8:	mov	w0, #0x1                   	// #1
   55ffc:	ldp	x29, x30, [sp], #48
   56000:	ret
   56004:	cmp	x0, x4
   56008:	mov	w0, #0x1                   	// #1
   5600c:	b.ne	55f80 <f64xsubf128@@GLIBC_2.28+0x2200>  // b.any
   56010:	orr	x8, x9, x7
   56014:	cbz	x8, 55f80 <f64xsubf128@@GLIBC_2.28+0x2200>
   56018:	tst	x9, #0x800000000000
   5601c:	b.eq	55ff0 <f64xsubf128@@GLIBC_2.28+0x2270>  // b.none
   56020:	b	55f90 <f64xsubf128@@GLIBC_2.28+0x2210>
   56024:	nop
   56028:	stp	x29, x30, [sp, #-48]!
   5602c:	mov	x29, sp
   56030:	str	q0, [sp, #16]
   56034:	str	q1, [sp, #32]
   56038:	ldp	x8, x1, [sp, #16]
   5603c:	ldp	x9, x0, [sp, #32]
   56040:	mrs	x2, fpcr
   56044:	ubfx	x4, x1, #48, #15
   56048:	ubfx	x10, x1, #0, #48
   5604c:	lsr	x2, x1, #63
   56050:	mov	x7, #0x7fff                	// #32767
   56054:	mov	x5, x8
   56058:	cmp	x4, x7
   5605c:	ubfx	x11, x0, #0, #48
   56060:	ubfx	x6, x0, #48, #15
   56064:	lsr	x1, x0, #63
   56068:	mov	x3, x9
   5606c:	b.eq	560a8 <f64xsubf128@@GLIBC_2.28+0x2328>  // b.none
   56070:	cmp	x6, x7
   56074:	b.eq	560b8 <f64xsubf128@@GLIBC_2.28+0x2338>  // b.none
   56078:	cbnz	x4, 560e0 <f64xsubf128@@GLIBC_2.28+0x2360>
   5607c:	orr	x5, x10, x8
   56080:	cmp	x5, #0x0
   56084:	cset	w0, eq  // eq = none
   56088:	cbnz	x6, 56094 <f64xsubf128@@GLIBC_2.28+0x2314>
   5608c:	orr	x3, x11, x9
   56090:	cbz	x3, 56100 <f64xsubf128@@GLIBC_2.28+0x2380>
   56094:	cbz	w0, 560c4 <f64xsubf128@@GLIBC_2.28+0x2344>
   56098:	cmp	x1, #0x0
   5609c:	csinv	w0, w0, wzr, ne  // ne = any
   560a0:	ldp	x29, x30, [sp], #48
   560a4:	ret
   560a8:	orr	x0, x10, x8
   560ac:	cbnz	x0, 5610c <f64xsubf128@@GLIBC_2.28+0x238c>
   560b0:	cmp	x6, x4
   560b4:	b.ne	560e0 <f64xsubf128@@GLIBC_2.28+0x2360>  // b.any
   560b8:	orr	x3, x11, x3
   560bc:	cbnz	x3, 5610c <f64xsubf128@@GLIBC_2.28+0x238c>
   560c0:	cbz	x4, 560f0 <f64xsubf128@@GLIBC_2.28+0x2370>
   560c4:	cmp	x2, x1
   560c8:	b.eq	56120 <f64xsubf128@@GLIBC_2.28+0x23a0>  // b.none
   560cc:	cmp	x2, #0x0
   560d0:	mov	w0, #0xffffffff            	// #-1
   560d4:	cneg	w0, w0, eq  // eq = none
   560d8:	ldp	x29, x30, [sp], #48
   560dc:	ret
   560e0:	cbnz	x6, 560c4 <f64xsubf128@@GLIBC_2.28+0x2344>
   560e4:	orr	x3, x11, x3
   560e8:	cbnz	x3, 560c4 <f64xsubf128@@GLIBC_2.28+0x2344>
   560ec:	b	560cc <f64xsubf128@@GLIBC_2.28+0x234c>
   560f0:	orr	x5, x10, x5
   560f4:	cmp	x5, #0x0
   560f8:	cset	w0, eq  // eq = none
   560fc:	b	56094 <f64xsubf128@@GLIBC_2.28+0x2314>
   56100:	mov	w0, #0x0                   	// #0
   56104:	cbz	x5, 560a0 <f64xsubf128@@GLIBC_2.28+0x2320>
   56108:	b	560cc <f64xsubf128@@GLIBC_2.28+0x234c>
   5610c:	mov	w0, #0x1                   	// #1
   56110:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   56114:	mov	w0, #0xfffffffe            	// #-2
   56118:	ldp	x29, x30, [sp], #48
   5611c:	ret
   56120:	cmp	x4, x6
   56124:	b.gt	560cc <f64xsubf128@@GLIBC_2.28+0x234c>
   56128:	b.lt	56160 <f64xsubf128@@GLIBC_2.28+0x23e0>  // b.tstop
   5612c:	cmp	x10, x11
   56130:	b.hi	560cc <f64xsubf128@@GLIBC_2.28+0x234c>  // b.pmore
   56134:	cset	w0, eq  // eq = none
   56138:	cmp	w0, #0x0
   5613c:	ccmp	x8, x9, #0x0, ne  // ne = any
   56140:	b.hi	560cc <f64xsubf128@@GLIBC_2.28+0x234c>  // b.pmore
   56144:	cmp	x10, x11
   56148:	b.cc	56160 <f64xsubf128@@GLIBC_2.28+0x23e0>  // b.lo, b.ul, b.last
   5614c:	cmp	w0, #0x0
   56150:	mov	w0, #0x0                   	// #0
   56154:	ccmp	x8, x9, #0x2, ne  // ne = any
   56158:	b.cs	560a0 <f64xsubf128@@GLIBC_2.28+0x2320>  // b.hs, b.nlast
   5615c:	nop
   56160:	cmp	x2, #0x0
   56164:	mov	w0, #0x1                   	// #1
   56168:	cneg	w0, w0, eq  // eq = none
   5616c:	b	560a0 <f64xsubf128@@GLIBC_2.28+0x2320>
   56170:	stp	x29, x30, [sp, #-48]!
   56174:	mov	x29, sp
   56178:	str	q0, [sp, #16]
   5617c:	str	q1, [sp, #32]
   56180:	ldp	x8, x1, [sp, #16]
   56184:	ldp	x9, x0, [sp, #32]
   56188:	mrs	x2, fpcr
   5618c:	ubfx	x4, x1, #48, #15
   56190:	ubfx	x10, x1, #0, #48
   56194:	lsr	x2, x1, #63
   56198:	mov	x5, #0x7fff                	// #32767
   5619c:	mov	x6, x8
   561a0:	cmp	x4, x5
   561a4:	ubfx	x11, x0, #0, #48
   561a8:	ubfx	x7, x0, #48, #15
   561ac:	lsr	x1, x0, #63
   561b0:	mov	x3, x9
   561b4:	b.eq	561ec <f64xsubf128@@GLIBC_2.28+0x246c>  // b.none
   561b8:	cmp	x7, x5
   561bc:	b.eq	561fc <f64xsubf128@@GLIBC_2.28+0x247c>  // b.none
   561c0:	cbnz	x4, 56228 <f64xsubf128@@GLIBC_2.28+0x24a8>
   561c4:	orr	x6, x10, x8
   561c8:	cmp	x6, #0x0
   561cc:	cset	w0, eq  // eq = none
   561d0:	cbnz	x7, 56214 <f64xsubf128@@GLIBC_2.28+0x2494>
   561d4:	orr	x3, x11, x9
   561d8:	cbnz	x3, 56214 <f64xsubf128@@GLIBC_2.28+0x2494>
   561dc:	mov	w0, #0x0                   	// #0
   561e0:	cbnz	x6, 5623c <f64xsubf128@@GLIBC_2.28+0x24bc>
   561e4:	ldp	x29, x30, [sp], #48
   561e8:	ret
   561ec:	orr	x0, x10, x8
   561f0:	cbnz	x0, 56250 <f64xsubf128@@GLIBC_2.28+0x24d0>
   561f4:	cmp	x7, x4
   561f8:	b.ne	56228 <f64xsubf128@@GLIBC_2.28+0x24a8>  // b.any
   561fc:	orr	x3, x11, x3
   56200:	cbnz	x3, 56250 <f64xsubf128@@GLIBC_2.28+0x24d0>
   56204:	cbnz	x4, 56234 <f64xsubf128@@GLIBC_2.28+0x24b4>
   56208:	orr	x6, x10, x6
   5620c:	cmp	x6, #0x0
   56210:	cset	w0, eq  // eq = none
   56214:	cbz	w0, 56234 <f64xsubf128@@GLIBC_2.28+0x24b4>
   56218:	cmp	x1, #0x0
   5621c:	csinv	w0, w0, wzr, ne  // ne = any
   56220:	ldp	x29, x30, [sp], #48
   56224:	ret
   56228:	cbnz	x7, 56234 <f64xsubf128@@GLIBC_2.28+0x24b4>
   5622c:	orr	x3, x11, x3
   56230:	cbz	x3, 5623c <f64xsubf128@@GLIBC_2.28+0x24bc>
   56234:	cmp	x2, x1
   56238:	b.eq	56264 <f64xsubf128@@GLIBC_2.28+0x24e4>  // b.none
   5623c:	cmp	x2, #0x0
   56240:	mov	w0, #0xffffffff            	// #-1
   56244:	cneg	w0, w0, eq  // eq = none
   56248:	ldp	x29, x30, [sp], #48
   5624c:	ret
   56250:	mov	w0, #0x1                   	// #1
   56254:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   56258:	mov	w0, #0x2                   	// #2
   5625c:	ldp	x29, x30, [sp], #48
   56260:	ret
   56264:	cmp	x4, x7
   56268:	b.gt	5623c <f64xsubf128@@GLIBC_2.28+0x24bc>
   5626c:	b.lt	562a0 <f64xsubf128@@GLIBC_2.28+0x2520>  // b.tstop
   56270:	cmp	x10, x11
   56274:	b.hi	5623c <f64xsubf128@@GLIBC_2.28+0x24bc>  // b.pmore
   56278:	cset	w0, eq  // eq = none
   5627c:	cmp	w0, #0x0
   56280:	ccmp	x8, x9, #0x0, ne  // ne = any
   56284:	b.hi	5623c <f64xsubf128@@GLIBC_2.28+0x24bc>  // b.pmore
   56288:	cmp	x10, x11
   5628c:	b.cc	562a0 <f64xsubf128@@GLIBC_2.28+0x2520>  // b.lo, b.ul, b.last
   56290:	cmp	w0, #0x0
   56294:	mov	w0, #0x0                   	// #0
   56298:	ccmp	x8, x9, #0x2, ne  // ne = any
   5629c:	b.cs	561e4 <f64xsubf128@@GLIBC_2.28+0x2464>  // b.hs, b.nlast
   562a0:	cmp	x2, #0x0
   562a4:	mov	w0, #0x1                   	// #1
   562a8:	cneg	w0, w0, eq  // eq = none
   562ac:	b	561e4 <f64xsubf128@@GLIBC_2.28+0x2464>
   562b0:	stp	x29, x30, [sp, #-80]!
   562b4:	mov	x29, sp
   562b8:	str	q0, [sp, #48]
   562bc:	str	q1, [sp, #64]
   562c0:	ldp	x1, x0, [sp, #48]
   562c4:	ldp	x6, x2, [sp, #64]
   562c8:	mrs	x11, fpcr
   562cc:	lsr	x3, x0, #63
   562d0:	ubfx	x7, x0, #0, #48
   562d4:	and	w12, w3, #0xff
   562d8:	mov	x14, x3
   562dc:	ubfx	x3, x0, #48, #15
   562e0:	cbz	w3, 56688 <f64xsubf128@@GLIBC_2.28+0x2908>
   562e4:	mov	w4, #0x7fff                	// #32767
   562e8:	cmp	w3, w4
   562ec:	b.eq	5672c <f64xsubf128@@GLIBC_2.28+0x29ac>  // b.none
   562f0:	and	x3, x3, #0xffff
   562f4:	extr	x4, x7, x1, #61
   562f8:	mov	x18, #0xffffffffffffc001    	// #-16383
   562fc:	orr	x7, x4, #0x8000000000000
   56300:	add	x3, x3, x18
   56304:	lsl	x5, x1, #3
   56308:	mov	x16, #0x0                   	// #0
   5630c:	mov	x1, #0x0                   	// #0
   56310:	mov	w0, #0x0                   	// #0
   56314:	lsr	x8, x2, #63
   56318:	ubfx	x4, x2, #0, #48
   5631c:	and	w15, w8, #0xff
   56320:	mov	x13, x8
   56324:	ubfx	x9, x2, #48, #15
   56328:	cbz	w9, 566e8 <f64xsubf128@@GLIBC_2.28+0x2968>
   5632c:	mov	w8, #0x7fff                	// #32767
   56330:	cmp	w9, w8
   56334:	b.eq	563b8 <f64xsubf128@@GLIBC_2.28+0x2638>  // b.none
   56338:	and	x9, x9, #0xffff
   5633c:	mov	x17, #0xffffffffffffc001    	// #-16383
   56340:	add	x9, x9, x17
   56344:	extr	x2, x4, x6, #61
   56348:	add	x9, x9, x3
   5634c:	lsl	x6, x6, #3
   56350:	orr	x4, x2, #0x8000000000000
   56354:	mov	x2, #0x0                   	// #0
   56358:	eor	w8, w12, w15
   5635c:	cmp	x1, #0xa
   56360:	and	w10, w8, #0xff
   56364:	add	x3, x9, #0x1
   56368:	and	x8, x8, #0xff
   5636c:	b.le	563f0 <f64xsubf128@@GLIBC_2.28+0x2670>
   56370:	cmp	x1, #0xb
   56374:	b.eq	56a88 <f64xsubf128@@GLIBC_2.28+0x2d08>  // b.none
   56378:	mov	w15, w12
   5637c:	mov	x13, x14
   56380:	mov	w10, w15
   56384:	cmp	x16, #0x2
   56388:	b.eq	5674c <f64xsubf128@@GLIBC_2.28+0x29cc>  // b.none
   5638c:	mov	x4, x7
   56390:	mov	x6, x5
   56394:	mov	x2, x16
   56398:	mov	x8, x13
   5639c:	cmp	x2, #0x3
   563a0:	b.ne	5640c <f64xsubf128@@GLIBC_2.28+0x268c>  // b.any
   563a4:	orr	x4, x4, #0x800000000000
   563a8:	mov	x5, x6
   563ac:	and	x4, x4, #0xffffffffffff
   563b0:	mov	w1, #0x7fff                	// #32767
   563b4:	b	56420 <f64xsubf128@@GLIBC_2.28+0x26a0>
   563b8:	mov	x8, #0x7fff                	// #32767
   563bc:	orr	x2, x4, x6
   563c0:	add	x9, x3, x8
   563c4:	cbnz	x2, 56444 <f64xsubf128@@GLIBC_2.28+0x26c4>
   563c8:	eor	w8, w12, w15
   563cc:	orr	x1, x1, #0x2
   563d0:	and	w10, w8, #0xff
   563d4:	cmp	x1, #0xa
   563d8:	add	x3, x3, #0x8, lsl #12
   563dc:	and	x8, x8, #0xff
   563e0:	mov	x6, #0x0                   	// #0
   563e4:	b.gt	569fc <f64xsubf128@@GLIBC_2.28+0x2c7c>
   563e8:	mov	x4, #0x0                   	// #0
   563ec:	mov	x2, #0x2                   	// #2
   563f0:	cmp	x1, #0x2
   563f4:	b.gt	5646c <f64xsubf128@@GLIBC_2.28+0x26ec>
   563f8:	sub	x1, x1, #0x1
   563fc:	cmp	x1, #0x1
   56400:	b.hi	564a8 <f64xsubf128@@GLIBC_2.28+0x2728>  // b.pmore
   56404:	cmp	x2, #0x2
   56408:	b.eq	5674c <f64xsubf128@@GLIBC_2.28+0x29cc>  // b.none
   5640c:	cmp	x2, #0x1
   56410:	b.ne	56608 <f64xsubf128@@GLIBC_2.28+0x2888>  // b.any
   56414:	mov	w1, #0x0                   	// #0
   56418:	mov	x4, #0x0                   	// #0
   5641c:	mov	x5, #0x0                   	// #0
   56420:	mov	x3, #0x0                   	// #0
   56424:	orr	w1, w1, w10, lsl #15
   56428:	bfxil	x3, x4, #0, #48
   5642c:	fmov	d0, x5
   56430:	bfi	x3, x1, #48, #16
   56434:	fmov	v0.d[1], x3
   56438:	cbnz	w0, 56878 <f64xsubf128@@GLIBC_2.28+0x2af8>
   5643c:	ldp	x29, x30, [sp], #80
   56440:	ret
   56444:	tst	x4, #0x800000000000
   56448:	eor	w8, w12, w15
   5644c:	orr	x1, x1, #0x3
   56450:	csinc	w0, w0, wzr, ne  // ne = any
   56454:	and	w10, w8, #0xff
   56458:	add	x3, x3, #0x8, lsl #12
   5645c:	cmp	x1, #0xa
   56460:	and	x8, x8, #0xff
   56464:	mov	x2, #0x3                   	// #3
   56468:	b.gt	56a7c <f64xsubf128@@GLIBC_2.28+0x2cfc>
   5646c:	mov	x12, #0x1                   	// #1
   56470:	mov	x14, #0x530                 	// #1328
   56474:	lsl	x1, x12, x1
   56478:	tst	x1, x14
   5647c:	b.ne	5667c <f64xsubf128@@GLIBC_2.28+0x28fc>  // b.any
   56480:	mov	x14, #0x240                 	// #576
   56484:	tst	x1, x14
   56488:	b.ne	56664 <f64xsubf128@@GLIBC_2.28+0x28e4>  // b.any
   5648c:	mov	x12, #0x88                  	// #136
   56490:	tst	x1, x12
   56494:	b.eq	564a8 <f64xsubf128@@GLIBC_2.28+0x2728>  // b.none
   56498:	mov	x7, x4
   5649c:	mov	x5, x6
   564a0:	mov	x16, x2
   564a4:	b	56380 <f64xsubf128@@GLIBC_2.28+0x2600>
   564a8:	lsr	x13, x5, #32
   564ac:	and	x12, x6, #0xffffffff
   564b0:	and	x15, x5, #0xffffffff
   564b4:	lsr	x6, x6, #32
   564b8:	and	x18, x4, #0xffffffff
   564bc:	lsr	x2, x4, #32
   564c0:	mul	x4, x13, x12
   564c4:	stp	x21, x22, [sp, #32]
   564c8:	lsr	x22, x7, #32
   564cc:	and	x5, x7, #0xffffffff
   564d0:	mul	x16, x12, x15
   564d4:	madd	x7, x6, x15, x4
   564d8:	stp	x19, x20, [sp, #16]
   564dc:	mul	x1, x13, x18
   564e0:	mul	x17, x15, x18
   564e4:	and	x30, x16, #0xffffffff
   564e8:	madd	x15, x2, x15, x1
   564ec:	add	x16, x7, x16, lsr #32
   564f0:	mul	x21, x22, x12
   564f4:	cmp	x4, x16
   564f8:	mul	x20, x22, x18
   564fc:	mov	x14, #0x100000000           	// #4294967296
   56500:	mul	x19, x13, x6
   56504:	add	x15, x15, x17, lsr #32
   56508:	mul	x12, x12, x5
   5650c:	and	x17, x17, #0xffffffff
   56510:	mul	x18, x5, x18
   56514:	add	x4, x19, x14
   56518:	madd	x7, x6, x5, x21
   5651c:	csel	x19, x4, x19, hi  // hi = pmore
   56520:	madd	x5, x2, x5, x20
   56524:	cmp	x1, x15
   56528:	mul	x13, x13, x2
   5652c:	add	x17, x17, x15, lsl #32
   56530:	mul	x6, x6, x22
   56534:	add	x7, x7, x12, lsr #32
   56538:	add	x5, x5, x18, lsr #32
   5653c:	add	x4, x13, x14
   56540:	mul	x2, x2, x22
   56544:	csel	x13, x4, x13, hi  // hi = pmore
   56548:	and	x1, x18, #0xffffffff
   5654c:	cmp	x21, x7
   56550:	add	x4, x6, x14
   56554:	add	x30, x30, x16, lsl #32
   56558:	csel	x6, x4, x6, hi  // hi = pmore
   5655c:	add	x13, x13, x15, lsr #32
   56560:	cmp	x20, x5
   56564:	add	x1, x1, x5, lsl #32
   56568:	add	x16, x17, x16, lsr #32
   5656c:	add	x14, x2, x14
   56570:	csel	x2, x14, x2, hi  // hi = pmore
   56574:	add	x16, x19, x16
   56578:	adds	x1, x1, x13
   5657c:	and	x12, x12, #0xffffffff
   56580:	cset	x13, cs  // cs = hs, nlast
   56584:	cmp	x16, x17
   56588:	cset	x4, cc  // cc = lo, ul, last
   5658c:	add	x12, x12, x7, lsl #32
   56590:	adds	x1, x1, x4
   56594:	lsr	x5, x5, #32
   56598:	cset	x4, cs  // cs = hs, nlast
   5659c:	cmp	x13, #0x0
   565a0:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   565a4:	add	x7, x6, x7, lsr #32
   565a8:	cinc	x5, x5, ne  // ne = any
   565ac:	adds	x6, x16, x12
   565b0:	cset	x4, cs  // cs = hs, nlast
   565b4:	adds	x1, x1, x7
   565b8:	cset	x7, cs  // cs = hs, nlast
   565bc:	adds	x4, x1, x4
   565c0:	cset	x1, cs  // cs = hs, nlast
   565c4:	cmp	x7, #0x0
   565c8:	orr	x30, x30, x6, lsl #13
   565cc:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   565d0:	cinc	x1, x2, ne  // ne = any
   565d4:	cmp	x30, #0x0
   565d8:	add	x1, x1, x5
   565dc:	cset	x2, ne  // ne = any
   565e0:	orr	x6, x2, x6, lsr #51
   565e4:	orr	x6, x6, x4, lsl #13
   565e8:	extr	x4, x1, x4, #51
   565ec:	tbz	x1, #39, 56900 <f64xsubf128@@GLIBC_2.28+0x2b80>
   565f0:	ldp	x19, x20, [sp, #16]
   565f4:	and	x1, x6, #0x1
   565f8:	ldp	x21, x22, [sp, #32]
   565fc:	orr	x6, x1, x6, lsr #1
   56600:	orr	x6, x6, x4, lsl #63
   56604:	lsr	x4, x4, #1
   56608:	mov	x1, #0x3fff                	// #16383
   5660c:	add	x2, x3, x1
   56610:	cmp	x2, #0x0
   56614:	b.le	567ac <f64xsubf128@@GLIBC_2.28+0x2a2c>
   56618:	tst	x6, #0x7
   5661c:	b.eq	5663c <f64xsubf128@@GLIBC_2.28+0x28bc>  // b.none
   56620:	and	x1, x11, #0xc00000
   56624:	orr	w0, w0, #0x10
   56628:	cmp	x1, #0x400, lsl #12
   5662c:	b.eq	569f4 <f64xsubf128@@GLIBC_2.28+0x2c74>  // b.none
   56630:	cmp	x1, #0x800, lsl #12
   56634:	b.eq	5699c <f64xsubf128@@GLIBC_2.28+0x2c1c>  // b.none
   56638:	cbz	x1, 56984 <f64xsubf128@@GLIBC_2.28+0x2c04>
   5663c:	tbz	x4, #52, 56648 <f64xsubf128@@GLIBC_2.28+0x28c8>
   56640:	and	x4, x4, #0xffefffffffffffff
   56644:	add	x2, x3, #0x4, lsl #12
   56648:	mov	x1, #0x7ffe                	// #32766
   5664c:	cmp	x2, x1
   56650:	b.gt	568d4 <f64xsubf128@@GLIBC_2.28+0x2b54>
   56654:	and	w1, w2, #0x7fff
   56658:	extr	x5, x4, x6, #3
   5665c:	ubfx	x4, x4, #3, #48
   56660:	b	56420 <f64xsubf128@@GLIBC_2.28+0x26a0>
   56664:	mov	w0, w12
   56668:	mov	w10, #0x0                   	// #0
   5666c:	mov	x4, #0xffffffffffff        	// #281474976710655
   56670:	mov	x5, #0xffffffffffffffff    	// #-1
   56674:	mov	w1, #0x7fff                	// #32767
   56678:	b	56420 <f64xsubf128@@GLIBC_2.28+0x26a0>
   5667c:	mov	w15, w10
   56680:	mov	x13, x8
   56684:	b	56380 <f64xsubf128@@GLIBC_2.28+0x2600>
   56688:	orr	x5, x7, x1
   5668c:	cbz	x5, 56794 <f64xsubf128@@GLIBC_2.28+0x2a14>
   56690:	cbz	x7, 568b0 <f64xsubf128@@GLIBC_2.28+0x2b30>
   56694:	clz	x0, x7
   56698:	sub	x4, x0, #0xf
   5669c:	add	w5, w4, #0x3
   566a0:	mov	w3, #0x3d                  	// #61
   566a4:	sub	w3, w3, w4
   566a8:	lsl	x4, x7, x5
   566ac:	lsr	x3, x1, x3
   566b0:	orr	x7, x3, x4
   566b4:	lsl	x5, x1, x5
   566b8:	lsr	x8, x2, #63
   566bc:	mov	x3, #0xffffffffffffc011    	// #-16367
   566c0:	ubfx	x4, x2, #0, #48
   566c4:	sub	x3, x3, x0
   566c8:	and	w15, w8, #0xff
   566cc:	mov	x13, x8
   566d0:	ubfx	x9, x2, #48, #15
   566d4:	mov	x1, #0x0                   	// #0
   566d8:	mov	x16, #0x0                   	// #0
   566dc:	mov	w0, #0x0                   	// #0
   566e0:	cbnz	w9, 5632c <f64xsubf128@@GLIBC_2.28+0x25ac>
   566e4:	nop
   566e8:	orr	x2, x4, x6
   566ec:	cbz	x2, 5675c <f64xsubf128@@GLIBC_2.28+0x29dc>
   566f0:	cbz	x4, 5688c <f64xsubf128@@GLIBC_2.28+0x2b0c>
   566f4:	clz	x9, x4
   566f8:	sub	x2, x9, #0xf
   566fc:	add	w10, w2, #0x3
   56700:	mov	w8, #0x3d                  	// #61
   56704:	sub	w8, w8, w2
   56708:	lsl	x2, x4, x10
   5670c:	lsr	x8, x6, x8
   56710:	orr	x4, x8, x2
   56714:	lsl	x6, x6, x10
   56718:	sub	x9, x3, x9
   5671c:	mov	x10, #0xffffffffffffc011    	// #-16367
   56720:	mov	x2, #0x0                   	// #0
   56724:	add	x9, x9, x10
   56728:	b	56358 <f64xsubf128@@GLIBC_2.28+0x25d8>
   5672c:	orr	x5, x7, x1
   56730:	cbnz	x5, 56774 <f64xsubf128@@GLIBC_2.28+0x29f4>
   56734:	mov	x7, #0x0                   	// #0
   56738:	mov	x1, #0x8                   	// #8
   5673c:	mov	x3, #0x7fff                	// #32767
   56740:	mov	x16, #0x2                   	// #2
   56744:	mov	w0, #0x0                   	// #0
   56748:	b	56314 <f64xsubf128@@GLIBC_2.28+0x2594>
   5674c:	mov	w1, #0x7fff                	// #32767
   56750:	mov	x4, #0x0                   	// #0
   56754:	mov	x5, #0x0                   	// #0
   56758:	b	56420 <f64xsubf128@@GLIBC_2.28+0x26a0>
   5675c:	orr	x1, x1, #0x1
   56760:	mov	x9, x3
   56764:	mov	x4, #0x0                   	// #0
   56768:	mov	x6, #0x0                   	// #0
   5676c:	mov	x2, #0x1                   	// #1
   56770:	b	56358 <f64xsubf128@@GLIBC_2.28+0x25d8>
   56774:	lsr	x0, x7, #47
   56778:	mov	x5, x1
   5677c:	eor	x0, x0, #0x1
   56780:	mov	x1, #0xc                   	// #12
   56784:	and	w0, w0, #0x1
   56788:	mov	x3, #0x7fff                	// #32767
   5678c:	mov	x16, #0x3                   	// #3
   56790:	b	56314 <f64xsubf128@@GLIBC_2.28+0x2594>
   56794:	mov	x7, #0x0                   	// #0
   56798:	mov	x1, #0x4                   	// #4
   5679c:	mov	x3, #0x0                   	// #0
   567a0:	mov	x16, #0x1                   	// #1
   567a4:	mov	w0, #0x0                   	// #0
   567a8:	b	56314 <f64xsubf128@@GLIBC_2.28+0x2594>
   567ac:	mov	x1, #0x1                   	// #1
   567b0:	sub	x2, x1, x2
   567b4:	cmp	x2, #0x74
   567b8:	b.gt	56830 <f64xsubf128@@GLIBC_2.28+0x2ab0>
   567bc:	cmp	x2, #0x3f
   567c0:	b.le	56910 <f64xsubf128@@GLIBC_2.28+0x2b90>
   567c4:	mov	w1, #0x80                  	// #128
   567c8:	sub	w1, w1, w2
   567cc:	cmp	x2, #0x40
   567d0:	sub	w2, w2, #0x40
   567d4:	lsl	x1, x4, x1
   567d8:	orr	x1, x6, x1
   567dc:	csel	x6, x1, x6, ne  // ne = any
   567e0:	lsr	x2, x4, x2
   567e4:	cmp	x6, #0x0
   567e8:	cset	x5, ne  // ne = any
   567ec:	orr	x5, x5, x2
   567f0:	ands	x2, x5, #0x7
   567f4:	b.eq	56944 <f64xsubf128@@GLIBC_2.28+0x2bc4>  // b.none
   567f8:	mov	x2, #0x0                   	// #0
   567fc:	and	x11, x11, #0xc00000
   56800:	orr	w0, w0, #0x10
   56804:	cmp	x11, #0x400, lsl #12
   56808:	b.eq	56a54 <f64xsubf128@@GLIBC_2.28+0x2cd4>  // b.none
   5680c:	cmp	x11, #0x800, lsl #12
   56810:	b.eq	56a68 <f64xsubf128@@GLIBC_2.28+0x2ce8>  // b.none
   56814:	cbz	x11, 569ac <f64xsubf128@@GLIBC_2.28+0x2c2c>
   56818:	tbnz	x2, #51, 569c4 <f64xsubf128@@GLIBC_2.28+0x2c44>
   5681c:	ubfx	x4, x2, #3, #48
   56820:	extr	x5, x2, x5, #3
   56824:	orr	w0, w0, #0x8
   56828:	mov	w1, #0x0                   	// #0
   5682c:	b	56860 <f64xsubf128@@GLIBC_2.28+0x2ae0>
   56830:	orr	x5, x6, x4
   56834:	cbz	x5, 56854 <f64xsubf128@@GLIBC_2.28+0x2ad4>
   56838:	and	x11, x11, #0xc00000
   5683c:	orr	w0, w0, #0x10
   56840:	cmp	x11, #0x400, lsl #12
   56844:	sub	x5, x1, x8
   56848:	b.eq	56854 <f64xsubf128@@GLIBC_2.28+0x2ad4>  // b.none
   5684c:	cmp	x11, #0x800, lsl #12
   56850:	csel	x5, x8, xzr, eq  // eq = none
   56854:	orr	w0, w0, #0x8
   56858:	mov	w1, #0x0                   	// #0
   5685c:	mov	x4, #0x0                   	// #0
   56860:	mov	x3, #0x0                   	// #0
   56864:	fmov	d0, x5
   56868:	bfxil	x3, x4, #0, #48
   5686c:	bfi	x3, x1, #48, #15
   56870:	bfi	x3, x10, #63, #1
   56874:	fmov	v0.d[1], x3
   56878:	str	q0, [sp, #48]
   5687c:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   56880:	ldr	q0, [sp, #48]
   56884:	ldp	x29, x30, [sp], #80
   56888:	ret
   5688c:	clz	x9, x6
   56890:	add	x2, x9, #0x31
   56894:	add	x9, x9, #0x40
   56898:	cmp	x2, #0x3c
   5689c:	b.le	566fc <f64xsubf128@@GLIBC_2.28+0x297c>
   568a0:	sub	w2, w2, #0x3d
   568a4:	lsl	x4, x6, x2
   568a8:	mov	x6, #0x0                   	// #0
   568ac:	b	56718 <f64xsubf128@@GLIBC_2.28+0x2998>
   568b0:	clz	x3, x1
   568b4:	add	x4, x3, #0x31
   568b8:	add	x0, x3, #0x40
   568bc:	cmp	x4, #0x3c
   568c0:	b.le	5669c <f64xsubf128@@GLIBC_2.28+0x291c>
   568c4:	sub	w4, w4, #0x3d
   568c8:	mov	x5, #0x0                   	// #0
   568cc:	lsl	x7, x1, x4
   568d0:	b	566b8 <f64xsubf128@@GLIBC_2.28+0x2938>
   568d4:	and	x5, x11, #0xc00000
   568d8:	cmp	x5, #0x400, lsl #12
   568dc:	b.eq	569d8 <f64xsubf128@@GLIBC_2.28+0x2c58>  // b.none
   568e0:	cmp	x5, #0x800, lsl #12
   568e4:	b.eq	56968 <f64xsubf128@@GLIBC_2.28+0x2be8>  // b.none
   568e8:	cbz	x5, 5695c <f64xsubf128@@GLIBC_2.28+0x2bdc>
   568ec:	mov	x4, #0xffffffffffff        	// #281474976710655
   568f0:	mov	x5, #0xffffffffffffffff    	// #-1
   568f4:	mov	w2, #0x14                  	// #20
   568f8:	orr	w0, w0, w2
   568fc:	b	56860 <f64xsubf128@@GLIBC_2.28+0x2ae0>
   56900:	mov	x3, x9
   56904:	ldp	x19, x20, [sp, #16]
   56908:	ldp	x21, x22, [sp, #32]
   5690c:	b	56608 <f64xsubf128@@GLIBC_2.28+0x2888>
   56910:	mov	w1, #0x40                  	// #64
   56914:	sub	w1, w1, w2
   56918:	lsr	x3, x6, x2
   5691c:	lsl	x6, x6, x1
   56920:	cmp	x6, #0x0
   56924:	lsl	x5, x4, x1
   56928:	cset	x1, ne  // ne = any
   5692c:	orr	x5, x5, x3
   56930:	lsr	x2, x4, x2
   56934:	orr	x5, x5, x1
   56938:	tst	x5, #0x7
   5693c:	b.ne	567fc <f64xsubf128@@GLIBC_2.28+0x2a7c>  // b.any
   56940:	tbnz	x2, #51, 56a74 <f64xsubf128@@GLIBC_2.28+0x2cf4>
   56944:	ubfx	x4, x2, #3, #48
   56948:	extr	x5, x2, x5, #3
   5694c:	mov	w1, #0x0                   	// #0
   56950:	tbz	w11, #11, 56420 <f64xsubf128@@GLIBC_2.28+0x26a0>
   56954:	orr	w0, w0, #0x8
   56958:	b	56860 <f64xsubf128@@GLIBC_2.28+0x2ae0>
   5695c:	mov	w1, #0x7fff                	// #32767
   56960:	mov	x4, #0x0                   	// #0
   56964:	b	568f4 <f64xsubf128@@GLIBC_2.28+0x2b74>
   56968:	cmp	x8, #0x0
   5696c:	mov	w2, #0x7fff                	// #32767
   56970:	mov	x4, #0xffffffffffff        	// #281474976710655
   56974:	csel	w1, w1, w2, eq  // eq = none
   56978:	csel	x4, x4, xzr, eq  // eq = none
   5697c:	csetm	x5, eq  // eq = none
   56980:	b	568f4 <f64xsubf128@@GLIBC_2.28+0x2b74>
   56984:	and	x1, x6, #0xf
   56988:	cmp	x1, #0x4
   5698c:	b.eq	5663c <f64xsubf128@@GLIBC_2.28+0x28bc>  // b.none
   56990:	adds	x6, x6, #0x4
   56994:	cinc	x4, x4, cs  // cs = hs, nlast
   56998:	b	5663c <f64xsubf128@@GLIBC_2.28+0x28bc>
   5699c:	cbz	x8, 5663c <f64xsubf128@@GLIBC_2.28+0x28bc>
   569a0:	adds	x6, x6, #0x8
   569a4:	cinc	x4, x4, cs  // cs = hs, nlast
   569a8:	b	5663c <f64xsubf128@@GLIBC_2.28+0x28bc>
   569ac:	and	x1, x5, #0xf
   569b0:	cmp	x1, #0x4
   569b4:	b.eq	569c0 <f64xsubf128@@GLIBC_2.28+0x2c40>  // b.none
   569b8:	adds	x5, x5, #0x4
   569bc:	cinc	x2, x2, cs  // cs = hs, nlast
   569c0:	tbz	x2, #51, 5681c <f64xsubf128@@GLIBC_2.28+0x2a9c>
   569c4:	orr	w0, w0, #0x8
   569c8:	mov	w1, #0x1                   	// #1
   569cc:	mov	x4, #0x0                   	// #0
   569d0:	mov	x5, #0x0                   	// #0
   569d4:	b	56860 <f64xsubf128@@GLIBC_2.28+0x2ae0>
   569d8:	cmp	x8, #0x0
   569dc:	mov	w2, #0x7fff                	// #32767
   569e0:	mov	x4, #0xffffffffffff        	// #281474976710655
   569e4:	csel	w1, w1, w2, ne  // ne = any
   569e8:	csel	x4, x4, xzr, ne  // ne = any
   569ec:	csetm	x5, ne  // ne = any
   569f0:	b	568f4 <f64xsubf128@@GLIBC_2.28+0x2b74>
   569f4:	cbnz	x8, 5663c <f64xsubf128@@GLIBC_2.28+0x28bc>
   569f8:	b	569a0 <f64xsubf128@@GLIBC_2.28+0x2c20>
   569fc:	mov	x4, #0x2                   	// #2
   56a00:	cmp	x1, #0xf
   56a04:	b.ne	56a28 <f64xsubf128@@GLIBC_2.28+0x2ca8>  // b.any
   56a08:	tbz	x7, #47, 56a40 <f64xsubf128@@GLIBC_2.28+0x2cc0>
   56a0c:	tbnz	x2, #47, 56a40 <f64xsubf128@@GLIBC_2.28+0x2cc0>
   56a10:	orr	x4, x2, #0x800000000000
   56a14:	mov	w10, w15
   56a18:	and	x4, x4, #0xffffffffffff
   56a1c:	mov	x5, x6
   56a20:	mov	w1, #0x7fff                	// #32767
   56a24:	b	56420 <f64xsubf128@@GLIBC_2.28+0x26a0>
   56a28:	cmp	x1, #0xb
   56a2c:	b.ne	56378 <f64xsubf128@@GLIBC_2.28+0x25f8>  // b.any
   56a30:	mov	x7, x2
   56a34:	mov	x5, x6
   56a38:	mov	x16, x4
   56a3c:	b	56380 <f64xsubf128@@GLIBC_2.28+0x2600>
   56a40:	orr	x4, x7, #0x800000000000
   56a44:	mov	w10, w12
   56a48:	and	x4, x4, #0xffffffffffff
   56a4c:	mov	w1, #0x7fff                	// #32767
   56a50:	b	56420 <f64xsubf128@@GLIBC_2.28+0x26a0>
   56a54:	cbnz	x8, 569c0 <f64xsubf128@@GLIBC_2.28+0x2c40>
   56a58:	adds	x5, x5, #0x8
   56a5c:	cinc	x2, x2, cs  // cs = hs, nlast
   56a60:	tbnz	x2, #51, 569c4 <f64xsubf128@@GLIBC_2.28+0x2c44>
   56a64:	b	5681c <f64xsubf128@@GLIBC_2.28+0x2a9c>
   56a68:	cbnz	x8, 56a58 <f64xsubf128@@GLIBC_2.28+0x2cd8>
   56a6c:	tbnz	x2, #51, 569c4 <f64xsubf128@@GLIBC_2.28+0x2c44>
   56a70:	b	5681c <f64xsubf128@@GLIBC_2.28+0x2a9c>
   56a74:	orr	w0, w0, #0x10
   56a78:	b	569c4 <f64xsubf128@@GLIBC_2.28+0x2c44>
   56a7c:	mov	x2, x4
   56a80:	mov	x4, #0x3                   	// #3
   56a84:	b	56a00 <f64xsubf128@@GLIBC_2.28+0x2c80>
   56a88:	mov	w10, w15
   56a8c:	mov	x8, x13
   56a90:	b	5639c <f64xsubf128@@GLIBC_2.28+0x261c>
   56a94:	nop
   56a98:	stp	x29, x30, [sp, #-48]!
   56a9c:	mov	x29, sp
   56aa0:	str	q0, [sp, #16]
   56aa4:	str	q1, [sp, #32]
   56aa8:	ldp	x5, x1, [sp, #16]
   56aac:	ldp	x0, x2, [sp, #32]
   56ab0:	mrs	x12, fpcr
   56ab4:	mov	x9, x0
   56ab8:	ubfx	x0, x2, #48, #15
   56abc:	lsr	x6, x1, #63
   56ac0:	ubfx	x7, x1, #48, #15
   56ac4:	ubfiz	x3, x1, #3, #48
   56ac8:	mov	x13, x0
   56acc:	lsr	x4, x2, #63
   56ad0:	ubfiz	x2, x2, #3, #48
   56ad4:	mov	x11, x6
   56ad8:	and	w8, w6, #0xff
   56adc:	mov	x14, x6
   56ae0:	sub	w0, w7, w0
   56ae4:	mov	x1, x7
   56ae8:	orr	x3, x3, x5, lsr #61
   56aec:	mov	x7, #0x7fff                	// #32767
   56af0:	and	w4, w4, #0xff
   56af4:	cmp	x13, x7
   56af8:	orr	x2, x2, x9, lsr #61
   56afc:	lsl	x6, x5, #3
   56b00:	lsl	x10, x9, #3
   56b04:	b.eq	56c74 <f64xsubf128@@GLIBC_2.28+0x2ef4>  // b.none
   56b08:	eor	w4, w4, #0x1
   56b0c:	and	x4, x4, #0xff
   56b10:	cmp	x11, x4
   56b14:	b.eq	56d0c <f64xsubf128@@GLIBC_2.28+0x2f8c>  // b.none
   56b18:	cmp	w0, #0x0
   56b1c:	b.le	56c90 <f64xsubf128@@GLIBC_2.28+0x2f10>
   56b20:	cbnz	x13, 56dfc <f64xsubf128@@GLIBC_2.28+0x307c>
   56b24:	orr	x4, x2, x10
   56b28:	cbz	x4, 56fdc <f64xsubf128@@GLIBC_2.28+0x325c>
   56b2c:	subs	w0, w0, #0x1
   56b30:	b.eq	572b0 <f64xsubf128@@GLIBC_2.28+0x3530>  // b.none
   56b34:	mov	x4, #0x7fff                	// #32767
   56b38:	cmp	x1, x4
   56b3c:	b.eq	56fb0 <f64xsubf128@@GLIBC_2.28+0x3230>  // b.none
   56b40:	cmp	w0, #0x74
   56b44:	b.gt	56fcc <f64xsubf128@@GLIBC_2.28+0x324c>
   56b48:	cmp	w0, #0x3f
   56b4c:	b.gt	57174 <f64xsubf128@@GLIBC_2.28+0x33f4>
   56b50:	mov	w4, #0x40                  	// #64
   56b54:	sub	w4, w4, w0
   56b58:	lsr	x7, x10, x0
   56b5c:	lsl	x10, x10, x4
   56b60:	cmp	x10, #0x0
   56b64:	lsl	x4, x2, x4
   56b68:	cset	x5, ne  // ne = any
   56b6c:	orr	x4, x4, x7
   56b70:	lsr	x2, x2, x0
   56b74:	orr	x4, x4, x5
   56b78:	sub	x3, x3, x2
   56b7c:	subs	x6, x6, x4
   56b80:	sbc	x3, x3, xzr
   56b84:	and	x5, x3, #0x7ffffffffffff
   56b88:	tbz	x3, #51, 56d88 <f64xsubf128@@GLIBC_2.28+0x3008>
   56b8c:	cbz	x5, 56f94 <f64xsubf128@@GLIBC_2.28+0x3214>
   56b90:	clz	x0, x5
   56b94:	sub	w0, w0, #0xc
   56b98:	neg	w3, w0
   56b9c:	lsl	x2, x5, x0
   56ba0:	lsl	x5, x6, x0
   56ba4:	lsr	x6, x6, x3
   56ba8:	orr	x3, x6, x2
   56bac:	cmp	x1, w0, sxtw
   56bb0:	sxtw	x2, w0
   56bb4:	b.gt	56f74 <f64xsubf128@@GLIBC_2.28+0x31f4>
   56bb8:	sub	w1, w0, w1
   56bbc:	add	w0, w1, #0x1
   56bc0:	cmp	w0, #0x3f
   56bc4:	b.gt	5713c <f64xsubf128@@GLIBC_2.28+0x33bc>
   56bc8:	mov	w1, #0x40                  	// #64
   56bcc:	sub	w1, w1, w0
   56bd0:	lsr	x2, x5, x0
   56bd4:	lsl	x5, x5, x1
   56bd8:	cmp	x5, #0x0
   56bdc:	lsl	x6, x3, x1
   56be0:	cset	x1, ne  // ne = any
   56be4:	orr	x6, x6, x2
   56be8:	lsr	x3, x3, x0
   56bec:	orr	x6, x6, x1
   56bf0:	orr	x7, x6, x3
   56bf4:	cbz	x7, 56d9c <f64xsubf128@@GLIBC_2.28+0x301c>
   56bf8:	and	x0, x6, #0x7
   56bfc:	mov	x1, #0x0                   	// #0
   56c00:	mov	w4, #0x1                   	// #1
   56c04:	cbz	x0, 57000 <f64xsubf128@@GLIBC_2.28+0x3280>
   56c08:	and	x2, x12, #0xc00000
   56c0c:	cmp	x2, #0x400, lsl #12
   56c10:	b.eq	56f4c <f64xsubf128@@GLIBC_2.28+0x31cc>  // b.none
   56c14:	cmp	x2, #0x800, lsl #12
   56c18:	b.eq	56f2c <f64xsubf128@@GLIBC_2.28+0x31ac>  // b.none
   56c1c:	cbz	x2, 56f58 <f64xsubf128@@GLIBC_2.28+0x31d8>
   56c20:	and	x2, x3, #0x8000000000000
   56c24:	mov	w0, #0x10                  	// #16
   56c28:	cbz	w4, 56c30 <f64xsubf128@@GLIBC_2.28+0x2eb0>
   56c2c:	orr	w0, w0, #0x8
   56c30:	cbz	x2, 56ce0 <f64xsubf128@@GLIBC_2.28+0x2f60>
   56c34:	add	x1, x1, #0x1
   56c38:	mov	x2, #0x7fff                	// #32767
   56c3c:	cmp	x1, x2
   56c40:	b.eq	56e54 <f64xsubf128@@GLIBC_2.28+0x30d4>  // b.none
   56c44:	ubfx	x7, x3, #3, #48
   56c48:	extr	x5, x3, x6, #3
   56c4c:	and	w1, w1, #0x7fff
   56c50:	mov	x3, #0x0                   	// #0
   56c54:	orr	w1, w1, w8, lsl #15
   56c58:	bfxil	x3, x7, #0, #48
   56c5c:	fmov	d0, x5
   56c60:	bfi	x3, x1, #48, #16
   56c64:	fmov	v0.d[1], x3
   56c68:	cbnz	w0, 56eb0 <f64xsubf128@@GLIBC_2.28+0x3130>
   56c6c:	ldp	x29, x30, [sp], #48
   56c70:	ret
   56c74:	orr	x7, x2, x10
   56c78:	cbz	x7, 56b08 <f64xsubf128@@GLIBC_2.28+0x2d88>
   56c7c:	and	x4, x4, #0xff
   56c80:	cmp	x11, x4
   56c84:	b.eq	56ec4 <f64xsubf128@@GLIBC_2.28+0x3144>  // b.none
   56c88:	cmp	w0, #0x0
   56c8c:	b.gt	56dfc <f64xsubf128@@GLIBC_2.28+0x307c>
   56c90:	cbz	w0, 56db4 <f64xsubf128@@GLIBC_2.28+0x3034>
   56c94:	mov	w8, w4
   56c98:	cbnz	x1, 570d0 <f64xsubf128@@GLIBC_2.28+0x3350>
   56c9c:	orr	x1, x3, x6
   56ca0:	cbz	x1, 56d68 <f64xsubf128@@GLIBC_2.28+0x2fe8>
   56ca4:	cmn	w0, #0x1
   56ca8:	b.eq	57410 <f64xsubf128@@GLIBC_2.28+0x3690>  // b.none
   56cac:	mov	x1, #0x7fff                	// #32767
   56cb0:	mvn	w0, w0
   56cb4:	cmp	x13, x1
   56cb8:	b.ne	570e4 <f64xsubf128@@GLIBC_2.28+0x3364>  // b.any
   56cbc:	orr	x0, x2, x10
   56cc0:	and	x11, x8, #0xff
   56cc4:	cbz	x0, 57048 <f64xsubf128@@GLIBC_2.28+0x32c8>
   56cc8:	lsr	x0, x2, #50
   56ccc:	mov	x6, x10
   56cd0:	eor	x0, x0, #0x1
   56cd4:	mov	x3, x2
   56cd8:	and	w0, w0, #0x1
   56cdc:	mov	x1, #0x7fff                	// #32767
   56ce0:	mov	x2, #0x7fff                	// #32767
   56ce4:	extr	x5, x3, x6, #3
   56ce8:	lsr	x7, x3, #3
   56cec:	cmp	x1, x2
   56cf0:	b.ne	56da8 <f64xsubf128@@GLIBC_2.28+0x3028>  // b.any
   56cf4:	orr	x1, x7, x5
   56cf8:	cbz	x1, 57564 <f64xsubf128@@GLIBC_2.28+0x37e4>
   56cfc:	orr	x7, x7, #0x800000000000
   56d00:	mov	w1, #0x7fff                	// #32767
   56d04:	and	x7, x7, #0xffffffffffff
   56d08:	b	56c50 <f64xsubf128@@GLIBC_2.28+0x2ed0>
   56d0c:	cmp	w0, #0x0
   56d10:	b.le	56ec4 <f64xsubf128@@GLIBC_2.28+0x3144>
   56d14:	cbz	x13, 56e04 <f64xsubf128@@GLIBC_2.28+0x3084>
   56d18:	orr	x2, x2, #0x8000000000000
   56d1c:	mov	x4, #0x7fff                	// #32767
   56d20:	cmp	x1, x4
   56d24:	b.eq	56fb0 <f64xsubf128@@GLIBC_2.28+0x3230>  // b.none
   56d28:	cmp	w0, #0x74
   56d2c:	b.gt	57124 <f64xsubf128@@GLIBC_2.28+0x33a4>
   56d30:	cmp	w0, #0x3f
   56d34:	b.gt	571c0 <f64xsubf128@@GLIBC_2.28+0x3440>
   56d38:	mov	w4, #0x40                  	// #64
   56d3c:	sub	w4, w4, w0
   56d40:	lsr	x7, x10, x0
   56d44:	lsl	x10, x10, x4
   56d48:	cmp	x10, #0x0
   56d4c:	lsl	x4, x2, x4
   56d50:	cset	x5, ne  // ne = any
   56d54:	orr	x4, x4, x7
   56d58:	lsr	x2, x2, x0
   56d5c:	orr	x0, x4, x5
   56d60:	add	x3, x3, x2
   56d64:	b	57130 <f64xsubf128@@GLIBC_2.28+0x33b0>
   56d68:	mov	x0, #0x7fff                	// #32767
   56d6c:	cmp	x13, x0
   56d70:	b.eq	5739c <f64xsubf128@@GLIBC_2.28+0x361c>  // b.none
   56d74:	mov	x3, x2
   56d78:	mov	x6, x10
   56d7c:	mov	x1, x13
   56d80:	mov	x14, x4
   56d84:	nop
   56d88:	orr	x7, x6, x3
   56d8c:	and	x0, x6, #0x7
   56d90:	mov	w4, #0x0                   	// #0
   56d94:	cbnz	x1, 56c04 <f64xsubf128@@GLIBC_2.28+0x2e84>
   56d98:	cbnz	x7, 56bf8 <f64xsubf128@@GLIBC_2.28+0x2e78>
   56d9c:	mov	x5, #0x0                   	// #0
   56da0:	mov	x1, #0x0                   	// #0
   56da4:	mov	w0, #0x0                   	// #0
   56da8:	and	x7, x7, #0xffffffffffff
   56dac:	and	w1, w1, #0x7fff
   56db0:	b	56c50 <f64xsubf128@@GLIBC_2.28+0x2ed0>
   56db4:	add	x7, x1, #0x1
   56db8:	tst	x7, #0x7ffe
   56dbc:	b.ne	570a0 <f64xsubf128@@GLIBC_2.28+0x3320>  // b.any
   56dc0:	orr	x11, x3, x6
   56dc4:	orr	x7, x2, x10
   56dc8:	cbnz	x1, 57230 <f64xsubf128@@GLIBC_2.28+0x34b0>
   56dcc:	cbz	x11, 572bc <f64xsubf128@@GLIBC_2.28+0x353c>
   56dd0:	cbz	x7, 572d0 <f64xsubf128@@GLIBC_2.28+0x3550>
   56dd4:	subs	x9, x6, x10
   56dd8:	cmp	x6, x10
   56ddc:	sbc	x5, x3, x2
   56de0:	tbz	x5, #51, 57478 <f64xsubf128@@GLIBC_2.28+0x36f8>
   56de4:	subs	x6, x10, x6
   56de8:	mov	w8, w4
   56dec:	sbc	x3, x2, x3
   56df0:	mov	x14, x4
   56df4:	orr	x7, x6, x3
   56df8:	b	56bf4 <f64xsubf128@@GLIBC_2.28+0x2e74>
   56dfc:	orr	x2, x2, #0x8000000000000
   56e00:	b	56b34 <f64xsubf128@@GLIBC_2.28+0x2db4>
   56e04:	orr	x4, x2, x10
   56e08:	cbz	x4, 56fdc <f64xsubf128@@GLIBC_2.28+0x325c>
   56e0c:	subs	w0, w0, #0x1
   56e10:	b.ne	56d1c <f64xsubf128@@GLIBC_2.28+0x2f9c>  // b.any
   56e14:	adds	x6, x6, x10
   56e18:	adc	x3, x2, x3
   56e1c:	nop
   56e20:	tbz	x3, #51, 56d88 <f64xsubf128@@GLIBC_2.28+0x3008>
   56e24:	add	x1, x1, #0x1
   56e28:	mov	x0, #0x7fff                	// #32767
   56e2c:	cmp	x1, x0
   56e30:	b.eq	572dc <f64xsubf128@@GLIBC_2.28+0x355c>  // b.none
   56e34:	and	x0, x6, #0x1
   56e38:	and	x2, x3, #0xfff7ffffffffffff
   56e3c:	orr	x6, x0, x6, lsr #1
   56e40:	mov	w4, #0x0                   	// #0
   56e44:	orr	x6, x6, x3, lsl #63
   56e48:	lsr	x3, x2, #1
   56e4c:	and	x0, x6, #0x7
   56e50:	b	56c04 <f64xsubf128@@GLIBC_2.28+0x2e84>
   56e54:	and	x2, x12, #0xc00000
   56e58:	cbz	x2, 56e90 <f64xsubf128@@GLIBC_2.28+0x3110>
   56e5c:	cmp	x2, #0x400, lsl #12
   56e60:	b.eq	56e8c <f64xsubf128@@GLIBC_2.28+0x310c>  // b.none
   56e64:	cmp	x2, #0x800, lsl #12
   56e68:	and	w14, w14, #0x1
   56e6c:	csel	w14, w14, wzr, eq  // eq = none
   56e70:	cbnz	w14, 56e90 <f64xsubf128@@GLIBC_2.28+0x3110>
   56e74:	mov	w1, #0x14                  	// #20
   56e78:	mov	x5, #0xffffffffffffffff    	// #-1
   56e7c:	orr	w0, w0, w1
   56e80:	mov	x7, #0x1fffffffffffffff    	// #2305843009213693951
   56e84:	mov	x1, #0x7ffe                	// #32766
   56e88:	b	56da8 <f64xsubf128@@GLIBC_2.28+0x3028>
   56e8c:	cbnz	x14, 56e74 <f64xsubf128@@GLIBC_2.28+0x30f4>
   56e90:	mov	w1, #0x14                  	// #20
   56e94:	and	x11, x8, #0xff
   56e98:	orr	w0, w0, w1
   56e9c:	mov	x2, #0x0                   	// #0
   56ea0:	fmov	d0, x2
   56ea4:	lsl	x11, x11, #63
   56ea8:	orr	x3, x11, #0x7fff000000000000
   56eac:	fmov	v0.d[1], x3
   56eb0:	str	q0, [sp, #16]
   56eb4:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   56eb8:	ldr	q0, [sp, #16]
   56ebc:	ldp	x29, x30, [sp], #48
   56ec0:	ret
   56ec4:	cbz	w0, 57060 <f64xsubf128@@GLIBC_2.28+0x32e0>
   56ec8:	cbz	x1, 5701c <f64xsubf128@@GLIBC_2.28+0x329c>
   56ecc:	mov	x1, #0x7fff                	// #32767
   56ed0:	neg	w0, w0
   56ed4:	orr	x3, x3, #0x8000000000000
   56ed8:	cmp	x13, x1
   56edc:	b.eq	5703c <f64xsubf128@@GLIBC_2.28+0x32bc>  // b.none
   56ee0:	cmp	w0, #0x74
   56ee4:	b.gt	57330 <f64xsubf128@@GLIBC_2.28+0x35b0>
   56ee8:	cmp	w0, #0x3f
   56eec:	b.gt	573e4 <f64xsubf128@@GLIBC_2.28+0x3664>
   56ef0:	mov	w1, #0x40                  	// #64
   56ef4:	sub	w1, w1, w0
   56ef8:	lsr	x4, x6, x0
   56efc:	lsl	x6, x6, x1
   56f00:	cmp	x6, #0x0
   56f04:	lsl	x6, x3, x1
   56f08:	cset	x1, ne  // ne = any
   56f0c:	orr	x6, x6, x4
   56f10:	lsr	x0, x3, x0
   56f14:	orr	x6, x6, x1
   56f18:	add	x2, x2, x0
   56f1c:	adds	x6, x6, x10
   56f20:	mov	x1, x13
   56f24:	cinc	x3, x2, cs  // cs = hs, nlast
   56f28:	b	56e20 <f64xsubf128@@GLIBC_2.28+0x30a0>
   56f2c:	mov	w0, #0x10                  	// #16
   56f30:	cbz	x14, 56f3c <f64xsubf128@@GLIBC_2.28+0x31bc>
   56f34:	adds	x6, x6, #0x8
   56f38:	cinc	x3, x3, cs  // cs = hs, nlast
   56f3c:	and	x2, x3, #0x8000000000000
   56f40:	cbz	w4, 56c30 <f64xsubf128@@GLIBC_2.28+0x2eb0>
   56f44:	orr	w0, w0, #0x8
   56f48:	b	56c30 <f64xsubf128@@GLIBC_2.28+0x2eb0>
   56f4c:	mov	w0, #0x10                  	// #16
   56f50:	cbnz	x14, 56f3c <f64xsubf128@@GLIBC_2.28+0x31bc>
   56f54:	b	56f34 <f64xsubf128@@GLIBC_2.28+0x31b4>
   56f58:	and	x2, x6, #0xf
   56f5c:	mov	w0, #0x10                  	// #16
   56f60:	cmp	x2, #0x4
   56f64:	b.eq	56f3c <f64xsubf128@@GLIBC_2.28+0x31bc>  // b.none
   56f68:	adds	x6, x6, #0x4
   56f6c:	cinc	x3, x3, cs  // cs = hs, nlast
   56f70:	b	56f3c <f64xsubf128@@GLIBC_2.28+0x31bc>
   56f74:	mov	x6, x5
   56f78:	and	x3, x3, #0xfff7ffffffffffff
   56f7c:	sub	x1, x1, x2
   56f80:	orr	x7, x6, x3
   56f84:	and	x0, x6, #0x7
   56f88:	mov	w4, #0x0                   	// #0
   56f8c:	cbz	x1, 56d98 <f64xsubf128@@GLIBC_2.28+0x3018>
   56f90:	b	56c04 <f64xsubf128@@GLIBC_2.28+0x2e84>
   56f94:	clz	x3, x6
   56f98:	add	w0, w3, #0x34
   56f9c:	cmp	w0, #0x3f
   56fa0:	b.le	56b98 <f64xsubf128@@GLIBC_2.28+0x2e18>
   56fa4:	sub	w3, w3, #0xc
   56fa8:	lsl	x3, x6, x3
   56fac:	b	56bac <f64xsubf128@@GLIBC_2.28+0x2e2c>
   56fb0:	orr	x0, x3, x6
   56fb4:	cbz	x0, 57048 <f64xsubf128@@GLIBC_2.28+0x32c8>
   56fb8:	lsr	x0, x3, #50
   56fbc:	mov	x1, #0x7fff                	// #32767
   56fc0:	eor	x0, x0, #0x1
   56fc4:	and	w0, w0, #0x1
   56fc8:	b	56ce0 <f64xsubf128@@GLIBC_2.28+0x2f60>
   56fcc:	orr	x2, x2, x10
   56fd0:	cmp	x2, #0x0
   56fd4:	cset	x4, ne  // ne = any
   56fd8:	b	56b7c <f64xsubf128@@GLIBC_2.28+0x2dfc>
   56fdc:	mov	x0, #0x7fff                	// #32767
   56fe0:	cmp	x1, x0
   56fe4:	b.ne	56d88 <f64xsubf128@@GLIBC_2.28+0x3008>  // b.any
   56fe8:	orr	x0, x3, x6
   56fec:	cbnz	x0, 56fb8 <f64xsubf128@@GLIBC_2.28+0x3238>
   56ff0:	mov	x5, #0x0                   	// #0
   56ff4:	mov	x7, #0x0                   	// #0
   56ff8:	mov	w0, #0x0                   	// #0
   56ffc:	b	56cf4 <f64xsubf128@@GLIBC_2.28+0x2f74>
   57000:	and	x2, x3, #0x8000000000000
   57004:	mov	w0, #0x0                   	// #0
   57008:	cbz	w4, 56c30 <f64xsubf128@@GLIBC_2.28+0x2eb0>
   5700c:	mov	w0, #0x0                   	// #0
   57010:	tbz	w12, #11, 56c30 <f64xsubf128@@GLIBC_2.28+0x2eb0>
   57014:	orr	w0, w0, #0x8
   57018:	b	56c30 <f64xsubf128@@GLIBC_2.28+0x2eb0>
   5701c:	orr	x1, x3, x6
   57020:	cbz	x1, 573a8 <f64xsubf128@@GLIBC_2.28+0x3628>
   57024:	cmn	w0, #0x1
   57028:	b.eq	574f8 <f64xsubf128@@GLIBC_2.28+0x3778>  // b.none
   5702c:	mov	x1, #0x7fff                	// #32767
   57030:	mvn	w0, w0
   57034:	cmp	x13, x1
   57038:	b.ne	56ee0 <f64xsubf128@@GLIBC_2.28+0x3160>  // b.any
   5703c:	orr	x0, x2, x10
   57040:	cbnz	x0, 56cc8 <f64xsubf128@@GLIBC_2.28+0x2f48>
   57044:	nop
   57048:	mov	x2, #0x0                   	// #0
   5704c:	fmov	d0, x2
   57050:	lsl	x0, x11, #63
   57054:	orr	x3, x0, #0x7fff000000000000
   57058:	fmov	v0.d[1], x3
   5705c:	b	56c6c <f64xsubf128@@GLIBC_2.28+0x2eec>
   57060:	add	x7, x1, #0x1
   57064:	tst	x7, #0x7ffe
   57068:	b.ne	571ec <f64xsubf128@@GLIBC_2.28+0x346c>  // b.any
   5706c:	orr	x11, x3, x6
   57070:	cbnz	x1, 57374 <f64xsubf128@@GLIBC_2.28+0x35f4>
   57074:	orr	x7, x2, x10
   57078:	cbz	x11, 573d8 <f64xsubf128@@GLIBC_2.28+0x3658>
   5707c:	cbz	x7, 572d0 <f64xsubf128@@GLIBC_2.28+0x3550>
   57080:	adds	x6, x6, x10
   57084:	adc	x3, x2, x3
   57088:	tbz	x3, #51, 56bf0 <f64xsubf128@@GLIBC_2.28+0x2e70>
   5708c:	and	x3, x3, #0xfff7ffffffffffff
   57090:	and	x0, x6, #0x7
   57094:	mov	w4, #0x0                   	// #0
   57098:	mov	x1, #0x1                   	// #1
   5709c:	b	56c04 <f64xsubf128@@GLIBC_2.28+0x2e84>
   570a0:	subs	x9, x6, x10
   570a4:	cmp	x6, x10
   570a8:	sbc	x5, x3, x2
   570ac:	tbnz	x5, #51, 57218 <f64xsubf128@@GLIBC_2.28+0x3498>
   570b0:	orr	x7, x9, x5
   570b4:	cbnz	x7, 57328 <f64xsubf128@@GLIBC_2.28+0x35a8>
   570b8:	and	x12, x12, #0xc00000
   570bc:	mov	x5, #0x0                   	// #0
   570c0:	cmp	x12, #0x800, lsl #12
   570c4:	mov	x1, #0x0                   	// #0
   570c8:	cset	w8, eq  // eq = none
   570cc:	b	56da8 <f64xsubf128@@GLIBC_2.28+0x3028>
   570d0:	mov	x1, #0x7fff                	// #32767
   570d4:	neg	w0, w0
   570d8:	orr	x3, x3, #0x8000000000000
   570dc:	cmp	x13, x1
   570e0:	b.eq	56cbc <f64xsubf128@@GLIBC_2.28+0x2f3c>  // b.none
   570e4:	cmp	w0, #0x74
   570e8:	b.gt	571a0 <f64xsubf128@@GLIBC_2.28+0x3420>
   570ec:	cmp	w0, #0x3f
   570f0:	b.gt	57340 <f64xsubf128@@GLIBC_2.28+0x35c0>
   570f4:	mov	w1, #0x40                  	// #64
   570f8:	sub	w1, w1, w0
   570fc:	lsr	x5, x6, x0
   57100:	lsl	x6, x6, x1
   57104:	cmp	x6, #0x0
   57108:	lsl	x6, x3, x1
   5710c:	cset	x1, ne  // ne = any
   57110:	orr	x6, x6, x5
   57114:	lsr	x0, x3, x0
   57118:	orr	x6, x6, x1
   5711c:	sub	x2, x2, x0
   57120:	b	571ac <f64xsubf128@@GLIBC_2.28+0x342c>
   57124:	orr	x2, x2, x10
   57128:	cmp	x2, #0x0
   5712c:	cset	x0, ne  // ne = any
   57130:	adds	x6, x0, x6
   57134:	cinc	x3, x3, cs  // cs = hs, nlast
   57138:	b	56e20 <f64xsubf128@@GLIBC_2.28+0x30a0>
   5713c:	mov	w2, #0x80                  	// #128
   57140:	sub	w2, w2, w0
   57144:	cmp	w0, #0x40
   57148:	sub	w6, w1, #0x3f
   5714c:	lsl	x0, x3, x2
   57150:	orr	x0, x5, x0
   57154:	csel	x5, x0, x5, ne  // ne = any
   57158:	lsr	x6, x3, x6
   5715c:	cmp	x5, #0x0
   57160:	mov	x3, #0x0                   	// #0
   57164:	cset	x0, ne  // ne = any
   57168:	orr	x6, x0, x6
   5716c:	mov	x7, x6
   57170:	b	56bf4 <f64xsubf128@@GLIBC_2.28+0x2e74>
   57174:	mov	w5, #0x80                  	// #128
   57178:	sub	w5, w5, w0
   5717c:	subs	w0, w0, #0x40
   57180:	lsl	x5, x2, x5
   57184:	orr	x5, x10, x5
   57188:	csel	x10, x5, x10, ne  // ne = any
   5718c:	lsr	x2, x2, x0
   57190:	cmp	x10, #0x0
   57194:	cset	x4, ne  // ne = any
   57198:	orr	x4, x4, x2
   5719c:	b	56b7c <f64xsubf128@@GLIBC_2.28+0x2dfc>
   571a0:	orr	x3, x3, x6
   571a4:	cmp	x3, #0x0
   571a8:	cset	x6, ne  // ne = any
   571ac:	subs	x6, x10, x6
   571b0:	mov	x1, x13
   571b4:	sbc	x3, x2, xzr
   571b8:	mov	x14, x4
   571bc:	b	56b84 <f64xsubf128@@GLIBC_2.28+0x2e04>
   571c0:	mov	w4, #0x80                  	// #128
   571c4:	sub	w4, w4, w0
   571c8:	subs	w0, w0, #0x40
   571cc:	lsl	x4, x2, x4
   571d0:	orr	x4, x10, x4
   571d4:	csel	x10, x4, x10, ne  // ne = any
   571d8:	lsr	x2, x2, x0
   571dc:	cmp	x10, #0x0
   571e0:	cset	x0, ne  // ne = any
   571e4:	orr	x0, x0, x2
   571e8:	b	57130 <f64xsubf128@@GLIBC_2.28+0x33b0>
   571ec:	mov	x0, #0x7fff                	// #32767
   571f0:	cmp	x7, x0
   571f4:	b.eq	57428 <f64xsubf128@@GLIBC_2.28+0x36a8>  // b.none
   571f8:	adds	x6, x6, x10
   571fc:	mov	x1, x7
   57200:	adc	x3, x2, x3
   57204:	mov	w4, #0x0                   	// #0
   57208:	ubfx	x0, x6, #1, #3
   5720c:	extr	x6, x3, x6, #1
   57210:	lsr	x3, x3, #1
   57214:	b	56c04 <f64xsubf128@@GLIBC_2.28+0x2e84>
   57218:	cmp	x10, x6
   5721c:	mov	w8, w4
   57220:	sbc	x5, x2, x3
   57224:	sub	x6, x10, x6
   57228:	mov	x14, x4
   5722c:	b	56b8c <f64xsubf128@@GLIBC_2.28+0x2e0c>
   57230:	mov	x12, #0x7fff                	// #32767
   57234:	cmp	x1, x12
   57238:	b.eq	57260 <f64xsubf128@@GLIBC_2.28+0x34e0>  // b.none
   5723c:	cmp	x13, x12
   57240:	b.eq	57454 <f64xsubf128@@GLIBC_2.28+0x36d4>  // b.none
   57244:	cbnz	x11, 57278 <f64xsubf128@@GLIBC_2.28+0x34f8>
   57248:	cbnz	x7, 57464 <f64xsubf128@@GLIBC_2.28+0x36e4>
   5724c:	mov	x5, #0xffffffffffffffff    	// #-1
   57250:	mov	x7, #0xffffffffffff        	// #281474976710655
   57254:	mov	w0, #0x1                   	// #1
   57258:	mov	w8, #0x0                   	// #0
   5725c:	b	56cfc <f64xsubf128@@GLIBC_2.28+0x2f7c>
   57260:	cbz	x11, 5744c <f64xsubf128@@GLIBC_2.28+0x36cc>
   57264:	lsr	x0, x3, #50
   57268:	cmp	x13, x1
   5726c:	eor	x0, x0, #0x1
   57270:	and	w0, w0, #0x1
   57274:	b.eq	57454 <f64xsubf128@@GLIBC_2.28+0x36d4>  // b.none
   57278:	cbz	x7, 56cdc <f64xsubf128@@GLIBC_2.28+0x2f5c>
   5727c:	bfi	x5, x3, #61, #3
   57280:	lsr	x7, x3, #3
   57284:	tbz	x3, #50, 572a0 <f64xsubf128@@GLIBC_2.28+0x3520>
   57288:	lsr	x1, x2, #3
   5728c:	tbnz	x2, #50, 572a0 <f64xsubf128@@GLIBC_2.28+0x3520>
   57290:	mov	x5, x9
   57294:	mov	w8, w4
   57298:	bfi	x5, x2, #61, #3
   5729c:	mov	x7, x1
   572a0:	extr	x7, x7, x5, #61
   572a4:	bfi	x5, x7, #61, #3
   572a8:	lsr	x7, x7, #3
   572ac:	b	56cf4 <f64xsubf128@@GLIBC_2.28+0x2f74>
   572b0:	subs	x6, x6, x10
   572b4:	sbc	x3, x3, x2
   572b8:	b	56b84 <f64xsubf128@@GLIBC_2.28+0x2e04>
   572bc:	cbz	x7, 573c4 <f64xsubf128@@GLIBC_2.28+0x3644>
   572c0:	mov	x3, x2
   572c4:	mov	x6, x10
   572c8:	mov	w8, w4
   572cc:	mov	x14, x4
   572d0:	mov	x1, #0x0                   	// #0
   572d4:	mov	x2, #0x0                   	// #0
   572d8:	b	5700c <f64xsubf128@@GLIBC_2.28+0x328c>
   572dc:	ands	x2, x12, #0xc00000
   572e0:	b.eq	5736c <f64xsubf128@@GLIBC_2.28+0x35ec>  // b.none
   572e4:	cmp	x2, #0x400, lsl #12
   572e8:	eor	w0, w8, #0x1
   572ec:	cset	w1, eq  // eq = none
   572f0:	tst	w1, w0
   572f4:	b.ne	57440 <f64xsubf128@@GLIBC_2.28+0x36c0>  // b.any
   572f8:	cmp	x2, #0x800, lsl #12
   572fc:	b.eq	57494 <f64xsubf128@@GLIBC_2.28+0x3714>  // b.none
   57300:	cmp	x2, #0x400, lsl #12
   57304:	mov	w0, #0x14                  	// #20
   57308:	b.ne	56e58 <f64xsubf128@@GLIBC_2.28+0x30d8>  // b.any
   5730c:	mov	x3, #0xffffffffffffffff    	// #-1
   57310:	mov	x1, #0x7ffe                	// #32766
   57314:	mov	x6, x3
   57318:	mov	w4, #0x0                   	// #0
   5731c:	mov	w0, #0x14                  	// #20
   57320:	cbnz	x14, 56f3c <f64xsubf128@@GLIBC_2.28+0x31bc>
   57324:	b	56f34 <f64xsubf128@@GLIBC_2.28+0x31b4>
   57328:	mov	x6, x9
   5732c:	b	56b8c <f64xsubf128@@GLIBC_2.28+0x2e0c>
   57330:	orr	x3, x3, x6
   57334:	cmp	x3, #0x0
   57338:	cset	x6, ne  // ne = any
   5733c:	b	56f1c <f64xsubf128@@GLIBC_2.28+0x319c>
   57340:	mov	w1, #0x80                  	// #128
   57344:	sub	w1, w1, w0
   57348:	subs	w0, w0, #0x40
   5734c:	lsl	x1, x3, x1
   57350:	orr	x1, x6, x1
   57354:	csel	x6, x1, x6, ne  // ne = any
   57358:	lsr	x3, x3, x0
   5735c:	cmp	x6, #0x0
   57360:	cset	x6, ne  // ne = any
   57364:	orr	x6, x6, x3
   57368:	b	571ac <f64xsubf128@@GLIBC_2.28+0x342c>
   5736c:	mov	w0, #0x14                  	// #20
   57370:	b	56e9c <f64xsubf128@@GLIBC_2.28+0x311c>
   57374:	mov	x7, #0x7fff                	// #32767
   57378:	cmp	x1, x7
   5737c:	b.eq	574b0 <f64xsubf128@@GLIBC_2.28+0x3730>  // b.none
   57380:	cmp	x13, x7
   57384:	b.eq	57514 <f64xsubf128@@GLIBC_2.28+0x3794>  // b.none
   57388:	cbnz	x11, 574c8 <f64xsubf128@@GLIBC_2.28+0x3748>
   5738c:	mov	x3, x2
   57390:	mov	x6, x10
   57394:	mov	x1, #0x7fff                	// #32767
   57398:	b	56ce0 <f64xsubf128@@GLIBC_2.28+0x2f60>
   5739c:	orr	x0, x2, x10
   573a0:	cbz	x0, 56ff0 <f64xsubf128@@GLIBC_2.28+0x3270>
   573a4:	b	56cc8 <f64xsubf128@@GLIBC_2.28+0x2f48>
   573a8:	mov	x0, #0x7fff                	// #32767
   573ac:	cmp	x13, x0
   573b0:	b.eq	5739c <f64xsubf128@@GLIBC_2.28+0x361c>  // b.none
   573b4:	mov	x3, x2
   573b8:	mov	x6, x10
   573bc:	mov	x1, x13
   573c0:	b	56d88 <f64xsubf128@@GLIBC_2.28+0x3008>
   573c4:	and	x12, x12, #0xc00000
   573c8:	mov	x5, #0x0                   	// #0
   573cc:	cmp	x12, #0x800, lsl #12
   573d0:	cset	w8, eq  // eq = none
   573d4:	b	56da8 <f64xsubf128@@GLIBC_2.28+0x3028>
   573d8:	mov	x3, x2
   573dc:	mov	x6, x10
   573e0:	b	56bf4 <f64xsubf128@@GLIBC_2.28+0x2e74>
   573e4:	mov	w1, #0x80                  	// #128
   573e8:	sub	w1, w1, w0
   573ec:	subs	w0, w0, #0x40
   573f0:	lsl	x1, x3, x1
   573f4:	orr	x1, x6, x1
   573f8:	csel	x6, x1, x6, ne  // ne = any
   573fc:	lsr	x3, x3, x0
   57400:	cmp	x6, #0x0
   57404:	cset	x6, ne  // ne = any
   57408:	orr	x6, x6, x3
   5740c:	b	56f1c <f64xsubf128@@GLIBC_2.28+0x319c>
   57410:	cmp	x10, x6
   57414:	mov	x1, x13
   57418:	sbc	x3, x2, x3
   5741c:	sub	x6, x10, x6
   57420:	mov	x14, x4
   57424:	b	56b84 <f64xsubf128@@GLIBC_2.28+0x2e04>
   57428:	ands	x2, x12, #0xc00000
   5742c:	b.eq	5736c <f64xsubf128@@GLIBC_2.28+0x35ec>  // b.none
   57430:	cmp	x2, #0x400, lsl #12
   57434:	eor	w0, w8, #0x1
   57438:	csel	w0, w0, wzr, eq  // eq = none
   5743c:	cbz	w0, 572f8 <f64xsubf128@@GLIBC_2.28+0x3578>
   57440:	mov	w0, #0x14                  	// #20
   57444:	mov	x11, #0x0                   	// #0
   57448:	b	56e9c <f64xsubf128@@GLIBC_2.28+0x311c>
   5744c:	cmp	x13, x1
   57450:	b.ne	57248 <f64xsubf128@@GLIBC_2.28+0x34c8>  // b.any
   57454:	cbz	x7, 57508 <f64xsubf128@@GLIBC_2.28+0x3788>
   57458:	tst	x2, #0x4000000000000
   5745c:	csinc	w0, w0, wzr, ne  // ne = any
   57460:	cbnz	x11, 5727c <f64xsubf128@@GLIBC_2.28+0x34fc>
   57464:	mov	w8, w4
   57468:	mov	x3, x2
   5746c:	mov	x6, x10
   57470:	mov	x1, #0x7fff                	// #32767
   57474:	b	56ce0 <f64xsubf128@@GLIBC_2.28+0x2f60>
   57478:	orr	x7, x9, x5
   5747c:	cbz	x7, 573c4 <f64xsubf128@@GLIBC_2.28+0x3644>
   57480:	mov	x3, x5
   57484:	and	x0, x9, #0x7
   57488:	mov	x6, x9
   5748c:	mov	w4, #0x1                   	// #1
   57490:	b	56c04 <f64xsubf128@@GLIBC_2.28+0x2e84>
   57494:	cbnz	x11, 57528 <f64xsubf128@@GLIBC_2.28+0x37a8>
   57498:	mov	x3, #0xffffffffffffffff    	// #-1
   5749c:	mov	w8, #0x0                   	// #0
   574a0:	mov	x6, x3
   574a4:	mov	x1, #0x7ffe                	// #32766
   574a8:	mov	w0, #0x14                  	// #20
   574ac:	b	56c34 <f64xsubf128@@GLIBC_2.28+0x2eb4>
   574b0:	cbz	x11, 57534 <f64xsubf128@@GLIBC_2.28+0x37b4>
   574b4:	lsr	x0, x3, #50
   574b8:	cmp	x13, x1
   574bc:	eor	x0, x0, #0x1
   574c0:	and	w0, w0, #0x1
   574c4:	b.eq	57554 <f64xsubf128@@GLIBC_2.28+0x37d4>  // b.none
   574c8:	orr	x10, x2, x10
   574cc:	cbz	x10, 56cdc <f64xsubf128@@GLIBC_2.28+0x2f5c>
   574d0:	bfi	x5, x3, #61, #3
   574d4:	lsr	x7, x3, #3
   574d8:	tbz	x3, #50, 572a0 <f64xsubf128@@GLIBC_2.28+0x3520>
   574dc:	lsr	x1, x2, #3
   574e0:	tbnz	x2, #50, 572a0 <f64xsubf128@@GLIBC_2.28+0x3520>
   574e4:	and	x5, x9, #0x1fffffffffffffff
   574e8:	mov	w8, w4
   574ec:	orr	x5, x5, x2, lsl #61
   574f0:	mov	x7, x1
   574f4:	b	572a0 <f64xsubf128@@GLIBC_2.28+0x3520>
   574f8:	adds	x6, x6, x10
   574fc:	mov	x1, x13
   57500:	adc	x3, x2, x3
   57504:	b	56e20 <f64xsubf128@@GLIBC_2.28+0x30a0>
   57508:	cbz	x11, 5724c <f64xsubf128@@GLIBC_2.28+0x34cc>
   5750c:	mov	x1, #0x7fff                	// #32767
   57510:	b	56ce0 <f64xsubf128@@GLIBC_2.28+0x2f60>
   57514:	orr	x1, x2, x10
   57518:	cbnz	x1, 57544 <f64xsubf128@@GLIBC_2.28+0x37c4>
   5751c:	cbz	x11, 56ff0 <f64xsubf128@@GLIBC_2.28+0x3270>
   57520:	mov	x1, #0x7fff                	// #32767
   57524:	b	56ce0 <f64xsubf128@@GLIBC_2.28+0x2f60>
   57528:	mov	w0, #0x14                  	// #20
   5752c:	mov	x11, #0x1                   	// #1
   57530:	b	56e9c <f64xsubf128@@GLIBC_2.28+0x311c>
   57534:	cmp	x13, x1
   57538:	b.ne	5738c <f64xsubf128@@GLIBC_2.28+0x360c>  // b.any
   5753c:	orr	x1, x2, x10
   57540:	cbz	x1, 56ff0 <f64xsubf128@@GLIBC_2.28+0x3270>
   57544:	tst	x2, #0x4000000000000
   57548:	csinc	w0, w0, wzr, ne  // ne = any
   5754c:	cbnz	x11, 574d0 <f64xsubf128@@GLIBC_2.28+0x3750>
   57550:	b	5738c <f64xsubf128@@GLIBC_2.28+0x360c>
   57554:	orr	x1, x2, x10
   57558:	cbnz	x1, 57544 <f64xsubf128@@GLIBC_2.28+0x37c4>
   5755c:	mov	x1, #0x7fff                	// #32767
   57560:	b	56ce0 <f64xsubf128@@GLIBC_2.28+0x2f60>
   57564:	mov	x5, #0x0                   	// #0
   57568:	mov	w1, #0x7fff                	// #32767
   5756c:	mov	x7, #0x0                   	// #0
   57570:	b	56c50 <f64xsubf128@@GLIBC_2.28+0x2ed0>
   57574:	nop
   57578:	stp	x29, x30, [sp, #-48]!
   5757c:	mov	x29, sp
   57580:	str	q0, [sp, #16]
   57584:	str	q1, [sp, #32]
   57588:	ldp	x3, x1, [sp, #16]
   5758c:	ldp	x2, x0, [sp, #32]
   57590:	mrs	x4, fpcr
   57594:	ubfx	x5, x1, #48, #15
   57598:	mov	x4, x3
   5759c:	mov	x3, x2
   575a0:	ubfx	x2, x1, #0, #48
   575a4:	mov	x1, #0x7fff                	// #32767
   575a8:	ubfx	x7, x0, #0, #48
   575ac:	cmp	x5, x1
   575b0:	ubfx	x1, x0, #48, #15
   575b4:	b.eq	575d0 <f64xsubf128@@GLIBC_2.28+0x3850>  // b.none
   575b8:	mov	x6, #0x7fff                	// #32767
   575bc:	mov	w0, #0x0                   	// #0
   575c0:	cmp	x1, x6
   575c4:	b.eq	575f4 <f64xsubf128@@GLIBC_2.28+0x3874>  // b.none
   575c8:	ldp	x29, x30, [sp], #48
   575cc:	ret
   575d0:	orr	x0, x4, x2
   575d4:	cbz	x0, 575b8 <f64xsubf128@@GLIBC_2.28+0x3838>
   575d8:	tst	x2, #0x800000000000
   575dc:	b.ne	57614 <f64xsubf128@@GLIBC_2.28+0x3894>  // b.any
   575e0:	mov	w0, #0x1                   	// #1
   575e4:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   575e8:	mov	w0, #0x1                   	// #1
   575ec:	ldp	x29, x30, [sp], #48
   575f0:	ret
   575f4:	orr	x3, x7, x3
   575f8:	cbz	x3, 575c8 <f64xsubf128@@GLIBC_2.28+0x3848>
   575fc:	cmp	x5, x1
   57600:	b.eq	57628 <f64xsubf128@@GLIBC_2.28+0x38a8>  // b.none
   57604:	tst	x7, #0x800000000000
   57608:	mov	w0, #0x1                   	// #1
   5760c:	b.ne	575c8 <f64xsubf128@@GLIBC_2.28+0x3848>  // b.any
   57610:	b	575e0 <f64xsubf128@@GLIBC_2.28+0x3860>
   57614:	cmp	x1, x5
   57618:	mov	w0, #0x1                   	// #1
   5761c:	b.ne	575c8 <f64xsubf128@@GLIBC_2.28+0x3848>  // b.any
   57620:	orr	x3, x7, x3
   57624:	b	57638 <f64xsubf128@@GLIBC_2.28+0x38b8>
   57628:	orr	x4, x4, x2
   5762c:	cbz	x4, 57604 <f64xsubf128@@GLIBC_2.28+0x3884>
   57630:	tst	x2, #0x800000000000
   57634:	b.eq	575e0 <f64xsubf128@@GLIBC_2.28+0x3860>  // b.none
   57638:	mov	w0, #0x1                   	// #1
   5763c:	cbz	x3, 575c8 <f64xsubf128@@GLIBC_2.28+0x3848>
   57640:	b	57604 <f64xsubf128@@GLIBC_2.28+0x3884>
   57644:	nop
   57648:	stp	x29, x30, [sp, #-48]!
   5764c:	mov	x29, sp
   57650:	str	x19, [sp, #16]
   57654:	str	q0, [sp, #32]
   57658:	ldp	x0, x1, [sp, #32]
   5765c:	mrs	x2, fpcr
   57660:	mov	x3, x0
   57664:	ubfx	x4, x1, #48, #15
   57668:	mov	x0, #0x3ffe                	// #16382
   5766c:	cmp	x4, x0
   57670:	ubfx	x0, x1, #0, #48
   57674:	b.gt	576a0 <f64xsubf128@@GLIBC_2.28+0x3920>
   57678:	cbnz	x4, 5771c <f64xsubf128@@GLIBC_2.28+0x399c>
   5767c:	orr	x0, x0, x3
   57680:	mov	w19, #0x0                   	// #0
   57684:	cbz	x0, 57690 <f64xsubf128@@GLIBC_2.28+0x3910>
   57688:	mov	w0, #0x10                  	// #16
   5768c:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   57690:	mov	w0, w19
   57694:	ldr	x19, [sp, #16]
   57698:	ldp	x29, x30, [sp], #48
   5769c:	ret
   576a0:	lsr	x19, x1, #63
   576a4:	mov	x5, #0x401d                	// #16413
   576a8:	and	w2, w19, #0xff
   576ac:	cmp	x4, x5
   576b0:	b.le	576e4 <f64xsubf128@@GLIBC_2.28+0x3964>
   576b4:	mov	x1, #0x401e                	// #16414
   576b8:	cmp	x4, x1
   576bc:	mov	w19, #0x7fffffff            	// #2147483647
   576c0:	csel	w1, w2, wzr, eq  // eq = none
   576c4:	add	w19, w2, w19
   576c8:	cbz	w1, 5772c <f64xsubf128@@GLIBC_2.28+0x39ac>
   576cc:	cmp	xzr, x0, lsr #17
   576d0:	b.ne	5772c <f64xsubf128@@GLIBC_2.28+0x39ac>  // b.any
   576d4:	orr	x0, x3, x0, lsl #47
   576d8:	cbz	x0, 57690 <f64xsubf128@@GLIBC_2.28+0x3910>
   576dc:	mov	w0, #0x10                  	// #16
   576e0:	b	5768c <f64xsubf128@@GLIBC_2.28+0x390c>
   576e4:	mov	x1, x4
   576e8:	orr	x0, x0, #0x1000000000000
   576ec:	mov	w19, #0x402f                	// #16431
   576f0:	mov	w4, #0xffffc011            	// #-16367
   576f4:	add	w4, w1, w4
   576f8:	sub	w1, w19, w1
   576fc:	cmp	w2, #0x0
   57700:	lsr	x19, x0, x1
   57704:	cneg	w19, w19, ne  // ne = any
   57708:	lsl	x0, x0, x4
   5770c:	orr	x0, x0, x3
   57710:	cbz	x0, 57690 <f64xsubf128@@GLIBC_2.28+0x3910>
   57714:	mov	w0, #0x10                  	// #16
   57718:	b	5768c <f64xsubf128@@GLIBC_2.28+0x390c>
   5771c:	mov	w19, #0x0                   	// #0
   57720:	mov	w0, #0x10                  	// #16
   57724:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   57728:	b	57690 <f64xsubf128@@GLIBC_2.28+0x3910>
   5772c:	mov	w0, #0x1                   	// #1
   57730:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   57734:	b	57690 <f64xsubf128@@GLIBC_2.28+0x3910>
   57738:	cmp	w0, #0x0
   5773c:	cbz	w0, 57788 <f64xsubf128@@GLIBC_2.28+0x3a08>
   57740:	cneg	w1, w0, lt  // lt = tstop
   57744:	mov	w4, #0x403e                	// #16446
   57748:	clz	x3, x1
   5774c:	mov	w2, #0x402f                	// #16431
   57750:	sub	w4, w4, w3
   57754:	lsr	w0, w0, #31
   57758:	sub	w2, w2, w4
   5775c:	mov	x3, #0x0                   	// #0
   57760:	and	w4, w4, #0x7fff
   57764:	lsl	x1, x1, x2
   57768:	and	x1, x1, #0xffffffffffff
   5776c:	orr	w0, w4, w0, lsl #15
   57770:	mov	x2, #0x0                   	// #0
   57774:	bfxil	x3, x1, #0, #48
   57778:	fmov	d0, x2
   5777c:	bfi	x3, x0, #48, #16
   57780:	fmov	v0.d[1], x3
   57784:	ret
   57788:	mov	w4, #0x0                   	// #0
   5778c:	mov	x1, #0x0                   	// #0
   57790:	mov	w0, #0x0                   	// #0
   57794:	mov	x3, #0x0                   	// #0
   57798:	orr	w0, w4, w0, lsl #15
   5779c:	bfxil	x3, x1, #0, #48
   577a0:	mov	x2, #0x0                   	// #0
   577a4:	fmov	d0, x2
   577a8:	bfi	x3, x0, #48, #16
   577ac:	fmov	v0.d[1], x3
   577b0:	ret
   577b4:	nop
   577b8:	cbz	w0, 577fc <f64xsubf128@@GLIBC_2.28+0x3a7c>
   577bc:	mov	w0, w0
   577c0:	mov	w1, #0x403e                	// #16446
   577c4:	clz	x3, x0
   577c8:	mov	w2, #0x402f                	// #16431
   577cc:	sub	w1, w1, w3
   577d0:	mov	x3, #0x0                   	// #0
   577d4:	sub	w2, w2, w1
   577d8:	and	w1, w1, #0x7fff
   577dc:	lsl	x0, x0, x2
   577e0:	and	x0, x0, #0xffffffffffff
   577e4:	mov	x2, #0x0                   	// #0
   577e8:	fmov	d0, x2
   577ec:	bfxil	x3, x0, #0, #48
   577f0:	bfi	x3, x1, #48, #16
   577f4:	fmov	v0.d[1], x3
   577f8:	ret
   577fc:	mov	x0, #0x0                   	// #0
   57800:	mov	x3, #0x0                   	// #0
   57804:	bfxil	x3, x0, #0, #48
   57808:	mov	x2, #0x0                   	// #0
   5780c:	fmov	d0, x2
   57810:	mov	w1, #0x0                   	// #0
   57814:	bfi	x3, x1, #48, #16
   57818:	fmov	v0.d[1], x3
   5781c:	ret
   57820:	stp	x29, x30, [sp, #-48]!
   57824:	mov	x29, sp
   57828:	str	x19, [sp, #16]
   5782c:	str	q0, [sp, #32]
   57830:	ldp	x2, x0, [sp, #32]
   57834:	mrs	x1, fpcr
   57838:	ubfx	x19, x0, #48, #15
   5783c:	mov	x3, #0x3ffe                	// #16382
   57840:	ubfx	x4, x0, #0, #48
   57844:	cmp	x19, x3
   57848:	b.gt	57870 <f64xsubf128@@GLIBC_2.28+0x3af0>
   5784c:	cbnz	x19, 57910 <f64xsubf128@@GLIBC_2.28+0x3b90>
   57850:	orr	x2, x4, x2
   57854:	cbz	x2, 57860 <f64xsubf128@@GLIBC_2.28+0x3ae0>
   57858:	mov	w0, #0x10                  	// #16
   5785c:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   57860:	mov	x0, x19
   57864:	ldr	x19, [sp, #16]
   57868:	ldp	x29, x30, [sp], #48
   5786c:	ret
   57870:	lsr	x1, x0, #63
   57874:	and	w3, w1, #0xff
   57878:	mov	x1, #0x403d                	// #16445
   5787c:	cmp	x19, x1
   57880:	b.le	578b8 <f64xsubf128@@GLIBC_2.28+0x3b38>
   57884:	mov	x0, #0x403e                	// #16446
   57888:	and	x5, x3, #0xff
   5788c:	cmp	x19, x0
   57890:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   57894:	csel	w1, w3, wzr, eq  // eq = none
   57898:	add	x19, x5, x0
   5789c:	cbz	w1, 57920 <f64xsubf128@@GLIBC_2.28+0x3ba0>
   578a0:	extr	x4, x4, x2, #49
   578a4:	cbnz	x4, 57920 <f64xsubf128@@GLIBC_2.28+0x3ba0>
   578a8:	cmp	xzr, x2, lsl #15
   578ac:	b.eq	57860 <f64xsubf128@@GLIBC_2.28+0x3ae0>  // b.none
   578b0:	mov	w0, #0x10                  	// #16
   578b4:	b	5785c <f64xsubf128@@GLIBC_2.28+0x3adc>
   578b8:	mov	x5, #0x406f                	// #16495
   578bc:	sub	x1, x5, x19
   578c0:	mov	x0, x19
   578c4:	cmp	x1, #0x3f
   578c8:	orr	x19, x4, #0x1000000000000
   578cc:	b.le	5792c <f64xsubf128@@GLIBC_2.28+0x3bac>
   578d0:	mov	w4, #0xffffc011            	// #-16367
   578d4:	add	w4, w0, w4
   578d8:	cmp	x1, #0x40
   578dc:	mov	w1, #0x402f                	// #16431
   578e0:	sub	w0, w1, w0
   578e4:	lsl	x1, x19, x4
   578e8:	orr	x1, x2, x1
   578ec:	csel	x2, x1, x2, ne  // ne = any
   578f0:	lsr	x19, x19, x0
   578f4:	cmp	x2, #0x0
   578f8:	cset	w0, ne  // ne = any
   578fc:	cmp	w3, #0x0
   57900:	cneg	x19, x19, ne  // ne = any
   57904:	cbz	w0, 57860 <f64xsubf128@@GLIBC_2.28+0x3ae0>
   57908:	mov	w0, #0x10                  	// #16
   5790c:	b	5785c <f64xsubf128@@GLIBC_2.28+0x3adc>
   57910:	mov	x19, #0x0                   	// #0
   57914:	mov	w0, #0x10                  	// #16
   57918:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   5791c:	b	57860 <f64xsubf128@@GLIBC_2.28+0x3ae0>
   57920:	mov	w0, #0x1                   	// #1
   57924:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   57928:	b	57860 <f64xsubf128@@GLIBC_2.28+0x3ae0>
   5792c:	mov	w6, #0xffffbfd1            	// #-16431
   57930:	add	w4, w0, w6
   57934:	sub	w0, w5, w0
   57938:	lsl	x1, x2, x4
   5793c:	cmp	x1, #0x0
   57940:	lsr	x2, x2, x0
   57944:	cset	w0, ne  // ne = any
   57948:	lsl	x19, x19, x4
   5794c:	orr	x19, x2, x19
   57950:	b	578fc <f64xsubf128@@GLIBC_2.28+0x3b7c>
   57954:	nop
   57958:	cmp	x0, #0x0
   5795c:	cbz	x0, 579c0 <f64xsubf128@@GLIBC_2.28+0x3c40>
   57960:	cneg	x1, x0, lt  // lt = tstop
   57964:	mov	w2, #0x403e                	// #16446
   57968:	clz	x3, x1
   5796c:	mov	x4, #0x406f                	// #16495
   57970:	sub	w2, w2, w3
   57974:	lsr	x0, x0, #63
   57978:	and	w0, w0, #0xff
   5797c:	and	w5, w2, #0x7fff
   57980:	sub	x3, x4, w2, sxtw
   57984:	cmp	x3, #0x3f
   57988:	b.gt	579ec <f64xsubf128@@GLIBC_2.28+0x3c6c>
   5798c:	sub	w4, w4, w2
   57990:	mov	w3, #0xffffbfd1            	// #-16431
   57994:	add	w2, w2, w3
   57998:	mov	x3, #0x0                   	// #0
   5799c:	lsl	x4, x1, x4
   579a0:	orr	w0, w5, w0, lsl #15
   579a4:	lsr	x1, x1, x2
   579a8:	and	x1, x1, #0xffffffffffff
   579ac:	fmov	d0, x4
   579b0:	bfxil	x3, x1, #0, #48
   579b4:	bfi	x3, x0, #48, #16
   579b8:	fmov	v0.d[1], x3
   579bc:	ret
   579c0:	mov	w5, #0x0                   	// #0
   579c4:	mov	x1, #0x0                   	// #0
   579c8:	mov	w0, #0x0                   	// #0
   579cc:	mov	x3, #0x0                   	// #0
   579d0:	orr	w0, w5, w0, lsl #15
   579d4:	bfxil	x3, x1, #0, #48
   579d8:	mov	x4, #0x0                   	// #0
   579dc:	fmov	d0, x4
   579e0:	bfi	x3, x0, #48, #16
   579e4:	fmov	v0.d[1], x3
   579e8:	ret
   579ec:	mov	w3, #0x402f                	// #16431
   579f0:	sub	w2, w3, w2
   579f4:	mov	x3, #0x0                   	// #0
   579f8:	orr	w0, w5, w0, lsl #15
   579fc:	lsl	x1, x1, x2
   57a00:	and	x1, x1, #0xffffffffffff
   57a04:	mov	x4, #0x0                   	// #0
   57a08:	fmov	d0, x4
   57a0c:	bfxil	x3, x1, #0, #48
   57a10:	bfi	x3, x0, #48, #16
   57a14:	fmov	v0.d[1], x3
   57a18:	ret
   57a1c:	nop
   57a20:	mrs	x0, fpcr
   57a24:	fmov	w0, s0
   57a28:	ubfx	x2, x0, #23, #8
   57a2c:	and	x1, x0, #0x7fffff
   57a30:	add	x3, x2, #0x1
   57a34:	ubfx	x5, x0, #0, #23
   57a38:	tst	x3, #0xfe
   57a3c:	lsr	w0, w0, #31
   57a40:	b.eq	57a70 <f64xsubf128@@GLIBC_2.28+0x3cf0>  // b.none
   57a44:	lsl	x1, x1, #25
   57a48:	mov	w3, #0x3f80                	// #16256
   57a4c:	add	w4, w2, w3
   57a50:	mov	x3, #0x0                   	// #0
   57a54:	bfxil	x3, x1, #0, #48
   57a58:	mov	x2, #0x0                   	// #0
   57a5c:	fmov	d0, x2
   57a60:	bfi	x3, x4, #48, #15
   57a64:	bfi	x3, x0, #63, #1
   57a68:	fmov	v0.d[1], x3
   57a6c:	ret
   57a70:	cbnz	w2, 57aa0 <f64xsubf128@@GLIBC_2.28+0x3d20>
   57a74:	cbnz	x1, 57aec <f64xsubf128@@GLIBC_2.28+0x3d6c>
   57a78:	mov	x1, #0x0                   	// #0
   57a7c:	mov	x3, #0x0                   	// #0
   57a80:	bfxil	x3, x1, #0, #48
   57a84:	mov	w4, #0x0                   	// #0
   57a88:	mov	x2, #0x0                   	// #0
   57a8c:	fmov	d0, x2
   57a90:	bfi	x3, x4, #48, #15
   57a94:	bfi	x3, x0, #63, #1
   57a98:	fmov	v0.d[1], x3
   57a9c:	ret
   57aa0:	cbz	x1, 57b28 <f64xsubf128@@GLIBC_2.28+0x3da8>
   57aa4:	lsl	x1, x1, #25
   57aa8:	mov	x3, #0x0                   	// #0
   57aac:	orr	x1, x1, #0x800000000000
   57ab0:	mov	x2, #0x0                   	// #0
   57ab4:	fmov	d0, x2
   57ab8:	bfxil	x3, x1, #0, #48
   57abc:	orr	x3, x3, #0x7fff000000000000
   57ac0:	bfi	x3, x0, #63, #1
   57ac4:	fmov	v0.d[1], x3
   57ac8:	tbnz	w5, #22, 57b50 <f64xsubf128@@GLIBC_2.28+0x3dd0>
   57acc:	stp	x29, x30, [sp, #-32]!
   57ad0:	mov	w0, #0x1                   	// #1
   57ad4:	mov	x29, sp
   57ad8:	str	q0, [sp, #16]
   57adc:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   57ae0:	ldr	q0, [sp, #16]
   57ae4:	ldp	x29, x30, [sp], #32
   57ae8:	ret
   57aec:	clz	x4, x1
   57af0:	mov	w2, #0x3fa9                	// #16297
   57af4:	sub	w3, w4, #0xf
   57af8:	sub	w2, w2, w4
   57afc:	and	w4, w2, #0x7fff
   57b00:	mov	x2, #0x0                   	// #0
   57b04:	lsl	x1, x1, x3
   57b08:	and	x1, x1, #0xffffffffffff
   57b0c:	mov	x3, #0x0                   	// #0
   57b10:	fmov	d0, x2
   57b14:	bfxil	x3, x1, #0, #48
   57b18:	bfi	x3, x4, #48, #15
   57b1c:	bfi	x3, x0, #63, #1
   57b20:	fmov	v0.d[1], x3
   57b24:	ret
   57b28:	mov	x1, #0x0                   	// #0
   57b2c:	mov	x3, #0x0                   	// #0
   57b30:	bfxil	x3, x1, #0, #48
   57b34:	mov	w4, #0x7fff                	// #32767
   57b38:	mov	x2, #0x0                   	// #0
   57b3c:	fmov	d0, x2
   57b40:	bfi	x3, x4, #48, #15
   57b44:	bfi	x3, x0, #63, #1
   57b48:	fmov	v0.d[1], x3
   57b4c:	ret
   57b50:	ret
   57b54:	nop
   57b58:	mrs	x0, fpcr
   57b5c:	fmov	x0, d0
   57b60:	ubfx	x1, x0, #52, #11
   57b64:	lsr	x4, x0, #63
   57b68:	add	x2, x1, #0x1
   57b6c:	and	w4, w4, #0xff
   57b70:	tst	x2, #0x7fe
   57b74:	ubfx	x0, x0, #0, #52
   57b78:	b.eq	57bac <f64xsubf128@@GLIBC_2.28+0x3e2c>  // b.none
   57b7c:	lsr	x5, x0, #4
   57b80:	mov	x3, #0x0                   	// #0
   57b84:	and	x5, x5, #0xffffffffffff
   57b88:	mov	w2, #0x3c00                	// #15360
   57b8c:	add	w1, w1, w2
   57b90:	lsl	x0, x0, #60
   57b94:	bfxil	x3, x5, #0, #48
   57b98:	fmov	d0, x0
   57b9c:	bfi	x3, x1, #48, #15
   57ba0:	bfi	x3, x4, #63, #1
   57ba4:	fmov	v0.d[1], x3
   57ba8:	ret
   57bac:	cbnz	x1, 57c00 <f64xsubf128@@GLIBC_2.28+0x3e80>
   57bb0:	cbz	x0, 57c4c <f64xsubf128@@GLIBC_2.28+0x3ecc>
   57bb4:	clz	x2, x0
   57bb8:	cmp	w2, #0xe
   57bbc:	b.gt	57c98 <f64xsubf128@@GLIBC_2.28+0x3f18>
   57bc0:	add	w1, w2, #0x31
   57bc4:	mov	w5, #0xf                   	// #15
   57bc8:	sub	w5, w5, w2
   57bcc:	lsr	x5, x0, x5
   57bd0:	lsl	x0, x0, x1
   57bd4:	and	x5, x5, #0xffffffffffff
   57bd8:	mov	w1, #0x3c0c                	// #15372
   57bdc:	mov	x3, #0x0                   	// #0
   57be0:	sub	w1, w1, w2
   57be4:	and	w1, w1, #0x7fff
   57be8:	bfxil	x3, x5, #0, #48
   57bec:	fmov	d0, x0
   57bf0:	bfi	x3, x1, #48, #15
   57bf4:	bfi	x3, x4, #63, #1
   57bf8:	fmov	v0.d[1], x3
   57bfc:	ret
   57c00:	cbz	x0, 57c70 <f64xsubf128@@GLIBC_2.28+0x3ef0>
   57c04:	lsr	x1, x0, #4
   57c08:	mov	x3, #0x0                   	// #0
   57c0c:	orr	x1, x1, #0x800000000000
   57c10:	lsl	x2, x0, #60
   57c14:	fmov	d0, x2
   57c18:	bfxil	x3, x1, #0, #48
   57c1c:	orr	x3, x3, #0x7fff000000000000
   57c20:	bfi	x3, x4, #63, #1
   57c24:	fmov	v0.d[1], x3
   57c28:	tbnz	x0, #51, 57c94 <f64xsubf128@@GLIBC_2.28+0x3f14>
   57c2c:	stp	x29, x30, [sp, #-32]!
   57c30:	mov	w0, #0x1                   	// #1
   57c34:	mov	x29, sp
   57c38:	str	q0, [sp, #16]
   57c3c:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   57c40:	ldr	q0, [sp, #16]
   57c44:	ldp	x29, x30, [sp], #32
   57c48:	ret
   57c4c:	mov	x5, #0x0                   	// #0
   57c50:	mov	x3, #0x0                   	// #0
   57c54:	bfxil	x3, x5, #0, #48
   57c58:	mov	w1, #0x0                   	// #0
   57c5c:	fmov	d0, x0
   57c60:	bfi	x3, x1, #48, #15
   57c64:	bfi	x3, x4, #63, #1
   57c68:	fmov	v0.d[1], x3
   57c6c:	ret
   57c70:	mov	x5, #0x0                   	// #0
   57c74:	mov	x3, #0x0                   	// #0
   57c78:	bfxil	x3, x5, #0, #48
   57c7c:	mov	w1, #0x7fff                	// #32767
   57c80:	fmov	d0, x0
   57c84:	bfi	x3, x1, #48, #15
   57c88:	bfi	x3, x4, #63, #1
   57c8c:	fmov	v0.d[1], x3
   57c90:	ret
   57c94:	ret
   57c98:	sub	w5, w2, #0xf
   57c9c:	lsl	x5, x0, x5
   57ca0:	mov	x0, #0x0                   	// #0
   57ca4:	b	57bd4 <f64xsubf128@@GLIBC_2.28+0x3e54>
   57ca8:	stp	x29, x30, [sp, #-48]!
   57cac:	mov	x29, sp
   57cb0:	str	x19, [sp, #16]
   57cb4:	str	q0, [sp, #32]
   57cb8:	ldp	x5, x0, [sp, #32]
   57cbc:	mrs	x3, fpcr
   57cc0:	ubfx	x4, x0, #48, #15
   57cc4:	lsr	x6, x0, #63
   57cc8:	add	x1, x4, #0x1
   57ccc:	ubfiz	x0, x0, #3, #48
   57cd0:	orr	x0, x0, x5, lsr #61
   57cd4:	tst	x1, #0x7ffe
   57cd8:	and	w6, w6, #0xff
   57cdc:	lsl	x5, x5, #3
   57ce0:	b.eq	57d60 <f64xsubf128@@GLIBC_2.28+0x3fe0>  // b.none
   57ce4:	mov	x1, #0xffffffffffffc080    	// #-16256
   57ce8:	add	x4, x4, x1
   57cec:	cmp	x4, #0xfe
   57cf0:	b.le	57da0 <f64xsubf128@@GLIBC_2.28+0x4020>
   57cf4:	ands	x0, x3, #0xc00000
   57cf8:	b.eq	57e38 <f64xsubf128@@GLIBC_2.28+0x40b8>  // b.none
   57cfc:	cmp	x0, #0x400, lsl #12
   57d00:	b.eq	57f24 <f64xsubf128@@GLIBC_2.28+0x41a4>  // b.none
   57d04:	cmp	x0, #0x800, lsl #12
   57d08:	csel	w7, w6, wzr, eq  // eq = none
   57d0c:	cbnz	w7, 57e38 <f64xsubf128@@GLIBC_2.28+0x40b8>
   57d10:	mov	x4, #0xfe                  	// #254
   57d14:	mov	x1, #0xffffffffffffffff    	// #-1
   57d18:	mov	w0, #0x14                  	// #20
   57d1c:	b.ne	57de0 <f64xsubf128@@GLIBC_2.28+0x4060>  // b.any
   57d20:	cmp	w6, #0x0
   57d24:	add	x2, x1, #0x8
   57d28:	csel	x1, x2, x1, ne  // ne = any
   57d2c:	and	x2, x1, #0x4000000
   57d30:	cbnz	w7, 57de8 <f64xsubf128@@GLIBC_2.28+0x4068>
   57d34:	cbnz	x2, 57df0 <f64xsubf128@@GLIBC_2.28+0x4070>
   57d38:	lsr	x3, x1, #3
   57d3c:	and	w2, w4, #0xff
   57d40:	mov	w1, w3
   57d44:	bfi	w1, w2, #23, #9
   57d48:	orr	w19, w1, w6, lsl #31
   57d4c:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   57d50:	fmov	s0, w19
   57d54:	ldr	x19, [sp, #16]
   57d58:	ldp	x29, x30, [sp], #48
   57d5c:	ret
   57d60:	orr	x5, x0, x5
   57d64:	cbnz	x4, 57d94 <f64xsubf128@@GLIBC_2.28+0x4014>
   57d68:	cbnz	x5, 57e10 <f64xsubf128@@GLIBC_2.28+0x4090>
   57d6c:	mov	w0, #0x0                   	// #0
   57d70:	and	w4, w4, #0xff
   57d74:	mov	x1, #0x0                   	// #0
   57d78:	bfi	w1, w4, #23, #9
   57d7c:	orr	w19, w1, w6, lsl #31
   57d80:	cbnz	w0, 57d4c <f64xsubf128@@GLIBC_2.28+0x3fcc>
   57d84:	fmov	s0, w19
   57d88:	ldr	x19, [sp, #16]
   57d8c:	ldp	x29, x30, [sp], #48
   57d90:	ret
   57d94:	cbnz	x5, 57e44 <f64xsubf128@@GLIBC_2.28+0x40c4>
   57d98:	mov	x4, #0xff                  	// #255
   57d9c:	b	57d6c <f64xsubf128@@GLIBC_2.28+0x3fec>
   57da0:	cmp	x4, #0x0
   57da4:	b.le	57e68 <f64xsubf128@@GLIBC_2.28+0x40e8>
   57da8:	orr	x5, x5, x0, lsl #39
   57dac:	mov	w7, #0x0                   	// #0
   57db0:	cmp	x5, #0x0
   57db4:	cset	x1, ne  // ne = any
   57db8:	orr	x1, x1, x0, lsr #25
   57dbc:	tst	x1, #0x7
   57dc0:	b.eq	57f00 <f64xsubf128@@GLIBC_2.28+0x4180>  // b.none
   57dc4:	and	x2, x3, #0xc00000
   57dc8:	cmp	x2, #0x400, lsl #12
   57dcc:	b.eq	57e28 <f64xsubf128@@GLIBC_2.28+0x40a8>  // b.none
   57dd0:	cmp	x2, #0x800, lsl #12
   57dd4:	mov	w0, #0x10                  	// #16
   57dd8:	b.eq	57d20 <f64xsubf128@@GLIBC_2.28+0x3fa0>  // b.none
   57ddc:	cbz	x2, 57f10 <f64xsubf128@@GLIBC_2.28+0x4190>
   57de0:	and	x2, x1, #0x4000000
   57de4:	cbz	w7, 57dec <f64xsubf128@@GLIBC_2.28+0x406c>
   57de8:	orr	w0, w0, #0x8
   57dec:	cbz	x2, 57f04 <f64xsubf128@@GLIBC_2.28+0x4184>
   57df0:	cmp	x4, #0xfe
   57df4:	add	x4, x4, #0x1
   57df8:	b.eq	57ec0 <f64xsubf128@@GLIBC_2.28+0x4140>  // b.none
   57dfc:	ubfx	x2, x1, #3, #23
   57e00:	orr	w4, w2, w4, lsl #23
   57e04:	orr	w19, w4, w6, lsl #31
   57e08:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   57e0c:	b	57d50 <f64xsubf128@@GLIBC_2.28+0x3fd0>
   57e10:	and	x2, x3, #0xc00000
   57e14:	mov	w7, #0x1                   	// #1
   57e18:	cmp	x2, #0x400, lsl #12
   57e1c:	mov	x4, #0x0                   	// #0
   57e20:	mov	x1, #0x1                   	// #1
   57e24:	b.ne	57dd0 <f64xsubf128@@GLIBC_2.28+0x4050>  // b.any
   57e28:	cbnz	w6, 57e30 <f64xsubf128@@GLIBC_2.28+0x40b0>
   57e2c:	add	x1, x1, #0x8
   57e30:	mov	w0, #0x10                  	// #16
   57e34:	b	57d2c <f64xsubf128@@GLIBC_2.28+0x3fac>
   57e38:	mov	x4, #0xff                  	// #255
   57e3c:	mov	w0, #0x14                  	// #20
   57e40:	b	57d70 <f64xsubf128@@GLIBC_2.28+0x3ff0>
   57e44:	lsr	x2, x0, #50
   57e48:	lsr	x1, x0, #28
   57e4c:	eor	w0, w2, #0x1
   57e50:	mov	x2, #0x7fff                	// #32767
   57e54:	cmp	x4, x2
   57e58:	orr	x1, x1, #0x400000
   57e5c:	csel	w0, w0, wzr, eq  // eq = none
   57e60:	mov	w4, #0xff                  	// #255
   57e64:	b	57d78 <f64xsubf128@@GLIBC_2.28+0x3ff8>
   57e68:	cmn	x4, #0x17
   57e6c:	b.lt	57e10 <f64xsubf128@@GLIBC_2.28+0x4090>  // b.tstop
   57e70:	orr	x0, x0, #0x8000000000000
   57e74:	add	w2, w4, #0x26
   57e78:	mov	w1, #0x1a                  	// #26
   57e7c:	sub	w4, w1, w4
   57e80:	lsl	x2, x0, x2
   57e84:	orr	x5, x2, x5
   57e88:	cmp	x5, #0x0
   57e8c:	lsr	x0, x0, x4
   57e90:	cset	x1, ne  // ne = any
   57e94:	orr	x1, x0, x1
   57e98:	ands	x2, x1, #0x7
   57e9c:	b.eq	57eac <f64xsubf128@@GLIBC_2.28+0x412c>  // b.none
   57ea0:	mov	w7, #0x1                   	// #1
   57ea4:	mov	x4, #0x0                   	// #0
   57ea8:	b	57dc4 <f64xsubf128@@GLIBC_2.28+0x4044>
   57eac:	tbz	w3, #11, 57efc <f64xsubf128@@GLIBC_2.28+0x417c>
   57eb0:	mov	w0, #0x0                   	// #0
   57eb4:	mov	x4, #0x0                   	// #0
   57eb8:	orr	w0, w0, #0x8
   57ebc:	b	57dec <f64xsubf128@@GLIBC_2.28+0x406c>
   57ec0:	mov	w2, w4
   57ec4:	ands	x3, x3, #0xc00000
   57ec8:	b.eq	57ef0 <f64xsubf128@@GLIBC_2.28+0x4170>  // b.none
   57ecc:	cmp	x3, #0x400, lsl #12
   57ed0:	b.eq	57f3c <f64xsubf128@@GLIBC_2.28+0x41bc>  // b.none
   57ed4:	cmp	x3, #0x800, lsl #12
   57ed8:	mov	w3, #0xfe                  	// #254
   57edc:	csel	w1, w6, wzr, eq  // eq = none
   57ee0:	mov	x4, #0x1fffffffffffffff    	// #2305843009213693951
   57ee4:	cmp	w1, #0x0
   57ee8:	csel	w2, w2, w3, ne  // ne = any
   57eec:	csel	x3, xzr, x4, ne  // ne = any
   57ef0:	mov	w1, #0x14                  	// #20
   57ef4:	orr	w0, w0, w1
   57ef8:	b	57d40 <f64xsubf128@@GLIBC_2.28+0x3fc0>
   57efc:	mov	x4, #0x0                   	// #0
   57f00:	mov	w0, #0x0                   	// #0
   57f04:	lsr	x1, x1, #3
   57f08:	and	w4, w4, #0xff
   57f0c:	b	57d78 <f64xsubf128@@GLIBC_2.28+0x3ff8>
   57f10:	and	x2, x1, #0xf
   57f14:	cmp	x2, #0x4
   57f18:	add	x2, x1, #0x4
   57f1c:	csel	x1, x2, x1, ne  // ne = any
   57f20:	b	57d2c <f64xsubf128@@GLIBC_2.28+0x3fac>
   57f24:	cbz	w6, 57e38 <f64xsubf128@@GLIBC_2.28+0x40b8>
   57f28:	mov	w0, #0x14                  	// #20
   57f2c:	mov	x4, #0xfe                  	// #254
   57f30:	mov	x1, #0xffffffffffffffff    	// #-1
   57f34:	mov	w7, #0x0                   	// #0
   57f38:	b	57d2c <f64xsubf128@@GLIBC_2.28+0x3fac>
   57f3c:	cmp	w6, #0x0
   57f40:	mov	w1, #0xfe                  	// #254
   57f44:	csel	w2, w4, w1, eq  // eq = none
   57f48:	mov	x4, #0x1fffffffffffffff    	// #2305843009213693951
   57f4c:	csel	x3, xzr, x4, eq  // eq = none
   57f50:	b	57ef0 <f64xsubf128@@GLIBC_2.28+0x4170>
   57f54:	nop
   57f58:	stp	x29, x30, [sp, #-48]!
   57f5c:	mov	x29, sp
   57f60:	str	x19, [sp, #16]
   57f64:	str	q0, [sp, #32]
   57f68:	ldp	x3, x0, [sp, #32]
   57f6c:	mrs	x6, fpcr
   57f70:	ubfx	x2, x0, #48, #15
   57f74:	lsr	x4, x0, #63
   57f78:	add	x1, x2, #0x1
   57f7c:	ubfiz	x0, x0, #3, #48
   57f80:	tst	x1, #0x7ffe
   57f84:	and	w4, w4, #0xff
   57f88:	orr	x0, x0, x3, lsr #61
   57f8c:	lsl	x5, x3, #3
   57f90:	b.eq	58010 <f64xsubf128@@GLIBC_2.28+0x4290>  // b.none
   57f94:	mov	x1, #0xffffffffffffc400    	// #-15360
   57f98:	add	x2, x2, x1
   57f9c:	cmp	x2, #0x7fe
   57fa0:	b.le	58054 <f64xsubf128@@GLIBC_2.28+0x42d4>
   57fa4:	ands	x0, x6, #0xc00000
   57fa8:	b.eq	580ec <f64xsubf128@@GLIBC_2.28+0x436c>  // b.none
   57fac:	cmp	x0, #0x400, lsl #12
   57fb0:	b.eq	58220 <f64xsubf128@@GLIBC_2.28+0x44a0>  // b.none
   57fb4:	cmp	x0, #0x800, lsl #12
   57fb8:	csel	w7, w4, wzr, eq  // eq = none
   57fbc:	cbnz	w7, 580ec <f64xsubf128@@GLIBC_2.28+0x436c>
   57fc0:	mov	x1, #0xffffffffffffffff    	// #-1
   57fc4:	mov	x2, #0x7fe                 	// #2046
   57fc8:	mov	w0, #0x14                  	// #20
   57fcc:	b.ne	58098 <f64xsubf128@@GLIBC_2.28+0x4318>  // b.any
   57fd0:	cmp	w4, #0x0
   57fd4:	add	x3, x1, #0x8
   57fd8:	csel	x1, x3, x1, ne  // ne = any
   57fdc:	and	x3, x1, #0x80000000000000
   57fe0:	cbnz	w7, 580a0 <f64xsubf128@@GLIBC_2.28+0x4320>
   57fe4:	cbnz	x3, 580a8 <f64xsubf128@@GLIBC_2.28+0x4328>
   57fe8:	lsr	x1, x1, #3
   57fec:	and	w3, w2, #0x7ff
   57ff0:	and	x4, x4, #0xff
   57ff4:	bfi	x1, x3, #52, #12
   57ff8:	orr	x19, x1, x4, lsl #63
   57ffc:	bl	58268 <f64xsubf128@@GLIBC_2.28+0x44e8>
   58000:	fmov	d0, x19
   58004:	ldr	x19, [sp, #16]
   58008:	ldp	x29, x30, [sp], #48
   5800c:	ret
   58010:	orr	x1, x0, x5
   58014:	cbnz	x2, 58048 <f64xsubf128@@GLIBC_2.28+0x42c8>
   58018:	cbnz	x1, 580c4 <f64xsubf128@@GLIBC_2.28+0x4344>
   5801c:	mov	w0, #0x0                   	// #0
   58020:	and	w2, w2, #0x7ff
   58024:	mov	x1, #0x0                   	// #0
   58028:	and	x4, x4, #0xff
   5802c:	bfi	x1, x2, #52, #12
   58030:	orr	x19, x1, x4, lsl #63
   58034:	cbnz	w0, 57ffc <f64xsubf128@@GLIBC_2.28+0x427c>
   58038:	fmov	d0, x19
   5803c:	ldr	x19, [sp, #16]
   58040:	ldp	x29, x30, [sp], #48
   58044:	ret
   58048:	cbnz	x1, 580f8 <f64xsubf128@@GLIBC_2.28+0x4378>
   5804c:	mov	x2, #0x7ff                 	// #2047
   58050:	b	5801c <f64xsubf128@@GLIBC_2.28+0x429c>
   58054:	cmp	x2, #0x0
   58058:	b.le	58120 <f64xsubf128@@GLIBC_2.28+0x43a0>
   5805c:	cmp	xzr, x3, lsl #7
   58060:	mov	w7, #0x0                   	// #0
   58064:	cset	x1, ne  // ne = any
   58068:	orr	x5, x1, x5, lsr #60
   5806c:	orr	x1, x5, x0, lsl #4
   58070:	mov	w0, #0x0                   	// #0
   58074:	tst	x5, #0x7
   58078:	b.eq	581d8 <f64xsubf128@@GLIBC_2.28+0x4458>  // b.none
   5807c:	and	x3, x6, #0xc00000
   58080:	cmp	x3, #0x400, lsl #12
   58084:	b.eq	580dc <f64xsubf128@@GLIBC_2.28+0x435c>  // b.none
   58088:	cmp	x3, #0x800, lsl #12
   5808c:	mov	w0, #0x10                  	// #16
   58090:	b.eq	57fd0 <f64xsubf128@@GLIBC_2.28+0x4250>  // b.none
   58094:	cbz	x3, 581e4 <f64xsubf128@@GLIBC_2.28+0x4464>
   58098:	and	x3, x1, #0x80000000000000
   5809c:	cbz	w7, 580a4 <f64xsubf128@@GLIBC_2.28+0x4324>
   580a0:	orr	w0, w0, #0x8
   580a4:	cbz	x3, 581d8 <f64xsubf128@@GLIBC_2.28+0x4458>
   580a8:	cmp	x2, #0x7fe
   580ac:	add	x2, x2, #0x1
   580b0:	b.eq	58180 <f64xsubf128@@GLIBC_2.28+0x4400>  // b.none
   580b4:	mov	x3, #0x1fefffffffffffff    	// #2301339409586323455
   580b8:	and	w2, w2, #0x7ff
   580bc:	and	x1, x3, x1, lsr #3
   580c0:	b	58028 <f64xsubf128@@GLIBC_2.28+0x42a8>
   580c4:	and	x3, x6, #0xc00000
   580c8:	mov	w7, #0x1                   	// #1
   580cc:	cmp	x3, #0x400, lsl #12
   580d0:	mov	x2, #0x0                   	// #0
   580d4:	mov	x1, #0x1                   	// #1
   580d8:	b.ne	58088 <f64xsubf128@@GLIBC_2.28+0x4308>  // b.any
   580dc:	cbnz	w4, 580e4 <f64xsubf128@@GLIBC_2.28+0x4364>
   580e0:	add	x1, x1, #0x8
   580e4:	mov	w0, #0x10                  	// #16
   580e8:	b	57fdc <f64xsubf128@@GLIBC_2.28+0x425c>
   580ec:	mov	x2, #0x7ff                 	// #2047
   580f0:	mov	w0, #0x14                  	// #20
   580f4:	b	58020 <f64xsubf128@@GLIBC_2.28+0x42a0>
   580f8:	mov	x3, #0x7fff                	// #32767
   580fc:	extr	x1, x0, x5, #60
   58100:	lsr	x0, x0, #50
   58104:	cmp	x2, x3
   58108:	lsr	x1, x1, #3
   5810c:	eor	w0, w0, #0x1
   58110:	orr	x1, x1, #0x8000000000000
   58114:	csel	w0, w0, wzr, eq  // eq = none
   58118:	mov	w2, #0x7ff                 	// #2047
   5811c:	b	58028 <f64xsubf128@@GLIBC_2.28+0x42a8>
   58120:	cmn	x2, #0x34
   58124:	b.lt	580c4 <f64xsubf128@@GLIBC_2.28+0x4344>  // b.tstop
   58128:	mov	x3, #0x3d                  	// #61
   5812c:	sub	x7, x3, x2
   58130:	orr	x0, x0, #0x8000000000000
   58134:	cmp	x7, #0x3f
   58138:	b.le	581f8 <f64xsubf128@@GLIBC_2.28+0x4478>
   5813c:	add	w1, w2, #0x43
   58140:	cmp	x7, #0x40
   58144:	mov	w3, #0xfffffffd            	// #-3
   58148:	sub	w2, w3, w2
   5814c:	lsl	x1, x0, x1
   58150:	orr	x1, x5, x1
   58154:	csel	x5, x1, x5, ne  // ne = any
   58158:	lsr	x0, x0, x2
   5815c:	cmp	x5, #0x0
   58160:	cset	x1, ne  // ne = any
   58164:	orr	x1, x1, x0
   58168:	cmp	x1, #0x0
   5816c:	cset	w7, ne  // ne = any
   58170:	tst	x1, #0x7
   58174:	b.eq	581bc <f64xsubf128@@GLIBC_2.28+0x443c>  // b.none
   58178:	mov	x2, #0x0                   	// #0
   5817c:	b	5807c <f64xsubf128@@GLIBC_2.28+0x42fc>
   58180:	mov	w3, w2
   58184:	ands	x1, x6, #0xc00000
   58188:	b.eq	581b0 <f64xsubf128@@GLIBC_2.28+0x4430>  // b.none
   5818c:	cmp	x1, #0x400, lsl #12
   58190:	b.eq	58238 <f64xsubf128@@GLIBC_2.28+0x44b8>  // b.none
   58194:	cmp	x1, #0x800, lsl #12
   58198:	mov	w5, #0x7fe                 	// #2046
   5819c:	csel	w1, w4, wzr, eq  // eq = none
   581a0:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   581a4:	cmp	w1, #0x0
   581a8:	csel	w3, w3, w5, ne  // ne = any
   581ac:	csel	x1, xzr, x2, ne  // ne = any
   581b0:	mov	w2, #0x14                  	// #20
   581b4:	orr	w0, w0, w2
   581b8:	b	57ff0 <f64xsubf128@@GLIBC_2.28+0x4270>
   581bc:	and	x3, x1, #0x80000000000000
   581c0:	cbnz	x1, 58250 <f64xsubf128@@GLIBC_2.28+0x44d0>
   581c4:	nop
   581c8:	mov	w0, #0x0                   	// #0
   581cc:	mov	x2, #0x1                   	// #1
   581d0:	cbnz	x3, 580b4 <f64xsubf128@@GLIBC_2.28+0x4334>
   581d4:	mov	x2, #0x0                   	// #0
   581d8:	lsr	x1, x1, #3
   581dc:	and	w2, w2, #0x7ff
   581e0:	b	58028 <f64xsubf128@@GLIBC_2.28+0x42a8>
   581e4:	and	x3, x1, #0xf
   581e8:	cmp	x3, #0x4
   581ec:	add	x3, x1, #0x4
   581f0:	csel	x1, x3, x1, ne  // ne = any
   581f4:	b	57fdc <f64xsubf128@@GLIBC_2.28+0x425c>
   581f8:	add	w1, w2, #0x3
   581fc:	sub	w2, w3, w2
   58200:	lsl	x3, x5, x1
   58204:	cmp	x3, #0x0
   58208:	cset	x3, ne  // ne = any
   5820c:	lsr	x2, x5, x2
   58210:	orr	x2, x2, x3
   58214:	lsl	x0, x0, x1
   58218:	orr	x1, x0, x2
   5821c:	b	58168 <f64xsubf128@@GLIBC_2.28+0x43e8>
   58220:	cbz	w4, 580ec <f64xsubf128@@GLIBC_2.28+0x436c>
   58224:	mov	x1, #0xffffffffffffffff    	// #-1
   58228:	mov	x2, #0x7fe                 	// #2046
   5822c:	mov	w7, #0x0                   	// #0
   58230:	mov	w0, #0x14                  	// #20
   58234:	b	57fdc <f64xsubf128@@GLIBC_2.28+0x425c>
   58238:	cmp	w4, #0x0
   5823c:	mov	w1, #0x7fe                 	// #2046
   58240:	csel	w3, w2, w1, eq  // eq = none
   58244:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   58248:	csel	x1, xzr, x2, eq  // eq = none
   5824c:	b	581b0 <f64xsubf128@@GLIBC_2.28+0x4430>
   58250:	tbz	w6, #11, 581c8 <f64xsubf128@@GLIBC_2.28+0x4448>
   58254:	mov	w0, #0x0                   	// #0
   58258:	mov	x2, #0x0                   	// #0
   5825c:	orr	w0, w0, #0x8
   58260:	b	580a4 <f64xsubf128@@GLIBC_2.28+0x4324>
   58264:	nop
   58268:	tbz	w0, #0, 58278 <f64xsubf128@@GLIBC_2.28+0x44f8>
   5826c:	movi	v1.2s, #0x0
   58270:	fdiv	s0, s1, s1
   58274:	mrs	x1, fpsr
   58278:	tbz	w0, #1, 5828c <f64xsubf128@@GLIBC_2.28+0x450c>
   5827c:	fmov	s1, #1.000000000000000000e+00
   58280:	movi	v2.2s, #0x0
   58284:	fdiv	s0, s1, s2
   58288:	mrs	x1, fpsr
   5828c:	tbz	w0, #2, 582ac <f64xsubf128@@GLIBC_2.28+0x452c>
   58290:	mov	w2, #0xc5ae                	// #50606
   58294:	mov	w1, #0x7f7fffff            	// #2139095039
   58298:	movk	w2, #0x749d, lsl #16
   5829c:	fmov	s1, w1
   582a0:	fmov	s2, w2
   582a4:	fadd	s0, s1, s2
   582a8:	mrs	x1, fpsr
   582ac:	tbz	w0, #3, 582bc <f64xsubf128@@GLIBC_2.28+0x453c>
   582b0:	movi	v1.2s, #0x80, lsl #16
   582b4:	fmul	s0, s1, s1
   582b8:	mrs	x1, fpsr
   582bc:	tbz	w0, #4, 582d4 <f64xsubf128@@GLIBC_2.28+0x4554>
   582c0:	mov	w0, #0x7f7fffff            	// #2139095039
   582c4:	fmov	s2, #1.000000000000000000e+00
   582c8:	fmov	s1, w0
   582cc:	fsub	s0, s1, s2
   582d0:	mrs	x0, fpsr
   582d4:	ret

Disassembly of section .fini:

00000000000582d8 <.fini>:
   582d8:	stp	x29, x30, [sp, #-16]!
   582dc:	mov	x29, sp
   582e0:	ldp	x29, x30, [sp], #16
   582e4:	ret
