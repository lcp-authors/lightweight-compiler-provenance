
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//newc.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_isxdigit>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	cmp	w0, #0x2f
  10:	b.le	20 <grub_isxdigit+0x20>
  14:	ldr	w0, [sp, #12]
  18:	cmp	w0, #0x39
  1c:	b.le	50 <grub_isxdigit+0x50>
  20:	ldr	w0, [sp, #12]
  24:	cmp	w0, #0x60
  28:	b.le	38 <grub_isxdigit+0x38>
  2c:	ldr	w0, [sp, #12]
  30:	cmp	w0, #0x66
  34:	b.le	50 <grub_isxdigit+0x50>
  38:	ldr	w0, [sp, #12]
  3c:	cmp	w0, #0x40
  40:	b.le	58 <grub_isxdigit+0x58>
  44:	ldr	w0, [sp, #12]
  48:	cmp	w0, #0x46
  4c:	b.gt	58 <grub_isxdigit+0x58>
  50:	mov	w0, #0x1                   	// #1
  54:	b	5c <grub_isxdigit+0x5c>
  58:	mov	w0, #0x0                   	// #0
  5c:	add	sp, sp, #0x10
  60:	ret

0000000000000064 <read_number>:
  64:	stp	x29, x30, [sp, #-48]!
  68:	mov	x29, sp
  6c:	str	x0, [sp, #24]
  70:	str	x1, [sp, #16]
  74:	str	xzr, [sp, #40]
  78:	b	100 <read_number+0x9c>
  7c:	ldr	x0, [sp, #24]
  80:	add	x1, x0, #0x1
  84:	str	x1, [sp, #24]
  88:	ldrb	w0, [x0]
  8c:	strb	w0, [sp, #39]
  90:	ldrb	w0, [sp, #39]
  94:	cmp	w0, #0x2f
  98:	b.ls	b8 <read_number+0x54>  // b.plast
  9c:	ldrb	w0, [sp, #39]
  a0:	cmp	w0, #0x39
  a4:	b.hi	b8 <read_number+0x54>  // b.pmore
  a8:	ldrb	w0, [sp, #39]
  ac:	and	w0, w0, #0xf
  b0:	strb	w0, [sp, #39]
  b4:	b	ec <read_number+0x88>
  b8:	ldrb	w0, [sp, #39]
  bc:	cmp	w0, #0x60
  c0:	b.ls	e0 <read_number+0x7c>  // b.plast
  c4:	ldrb	w0, [sp, #39]
  c8:	cmp	w0, #0x66
  cc:	b.hi	e0 <read_number+0x7c>  // b.pmore
  d0:	ldrb	w0, [sp, #39]
  d4:	sub	w0, w0, #0x57
  d8:	strb	w0, [sp, #39]
  dc:	b	ec <read_number+0x88>
  e0:	ldrb	w0, [sp, #39]
  e4:	sub	w0, w0, #0x37
  e8:	strb	w0, [sp, #39]
  ec:	ldr	x0, [sp, #40]
  f0:	lsl	x1, x0, #4
  f4:	ldrb	w0, [sp, #39]
  f8:	orr	x0, x1, x0
  fc:	str	x0, [sp, #40]
 100:	ldr	x0, [sp, #16]
 104:	sub	x1, x0, #0x1
 108:	str	x1, [sp, #16]
 10c:	cmp	x0, #0x0
 110:	b.eq	128 <read_number+0xc4>  // b.none
 114:	ldr	x0, [sp, #24]
 118:	ldrb	w0, [x0]
 11c:	bl	0 <grub_isxdigit>
 120:	cmp	w0, #0x0
 124:	b.ne	7c <read_number+0x18>  // b.any
 128:	ldr	x0, [sp, #40]
 12c:	ldp	x29, x30, [sp], #48
 130:	ret

0000000000000134 <grub_fs_register>:
 134:	stp	x29, x30, [sp, #-32]!
 138:	mov	x29, sp
 13c:	str	x0, [sp, #24]
 140:	ldr	x1, [sp, #24]
 144:	adrp	x0, 0 <grub_isxdigit>
 148:	add	x0, x0, #0x0
 14c:	ldr	x0, [x0]
 150:	bl	0 <grub_list_push>
 154:	nop
 158:	ldp	x29, x30, [sp], #32
 15c:	ret
	...

0000000000000168 <grub_fs_unregister>:
 168:	stp	x29, x30, [sp, #-32]!
 16c:	mov	x29, sp
 170:	str	x0, [sp, #24]
 174:	ldr	x0, [sp, #24]
 178:	bl	0 <grub_list_remove>
 17c:	nop
 180:	ldp	x29, x30, [sp], #32
 184:	ret

0000000000000188 <grub_cpio_find_file>:
 188:	stp	x29, x30, [sp, #-176]!
 18c:	mov	x29, sp
 190:	str	x0, [sp, #40]
 194:	str	x1, [sp, #32]
 198:	str	x2, [sp, #24]
 19c:	str	x3, [sp, #16]
 1a0:	ldr	x0, [sp, #40]
 1a4:	ldr	x1, [x0, #16]
 1a8:	ldr	x0, [sp, #40]
 1ac:	str	x1, [x0, #8]
 1b0:	ldr	x0, [sp, #40]
 1b4:	ldr	x5, [x0]
 1b8:	ldr	x0, [sp, #40]
 1bc:	ldr	x0, [x0, #8]
 1c0:	add	x1, sp, #0x30
 1c4:	mov	x4, x1
 1c8:	mov	x3, #0x6e                  	// #110
 1cc:	mov	x2, x0
 1d0:	mov	x1, #0x0                   	// #0
 1d4:	mov	x0, x5
 1d8:	bl	0 <grub_disk_read>
 1dc:	cmp	w0, #0x0
 1e0:	b.eq	1f8 <grub_cpio_find_file+0x70>  // b.none
 1e4:	adrp	x0, 0 <grub_isxdigit>
 1e8:	add	x0, x0, #0x0
 1ec:	ldr	x0, [x0]
 1f0:	ldr	w0, [x0]
 1f4:	b	458 <grub_cpio_find_file+0x2d0>
 1f8:	add	x3, sp, #0x30
 1fc:	mov	x2, #0x6                   	// #6
 200:	adrp	x0, 0 <grub_isxdigit>
 204:	add	x0, x0, #0x0
 208:	ldr	x1, [x0]
 20c:	mov	x0, x3
 210:	bl	0 <grub_memcmp>
 214:	cmp	w0, #0x0
 218:	b.eq	258 <grub_cpio_find_file+0xd0>  // b.none
 21c:	add	x3, sp, #0x30
 220:	mov	x2, #0x6                   	// #6
 224:	adrp	x0, 0 <grub_isxdigit>
 228:	add	x0, x0, #0x0
 22c:	ldr	x1, [x0]
 230:	mov	x0, x3
 234:	bl	0 <grub_memcmp>
 238:	cmp	w0, #0x0
 23c:	b.eq	258 <grub_cpio_find_file+0xd0>  // b.none
 240:	adrp	x0, 0 <grub_isxdigit>
 244:	add	x0, x0, #0x0
 248:	ldr	x1, [x0]
 24c:	mov	w0, #0x9                   	// #9
 250:	bl	0 <grub_error>
 254:	b	458 <grub_cpio_find_file+0x2d0>
 258:	add	x0, sp, #0x30
 25c:	add	x0, x0, #0x36
 260:	mov	x1, #0x8                   	// #8
 264:	bl	64 <read_number>
 268:	mov	x1, x0
 26c:	ldr	x0, [sp, #40]
 270:	str	x1, [x0, #32]
 274:	ldr	x0, [sp, #24]
 278:	cmp	x0, #0x0
 27c:	b.eq	29c <grub_cpio_find_file+0x114>  // b.none
 280:	add	x0, sp, #0x30
 284:	add	x0, x0, #0x2e
 288:	mov	x1, #0x8                   	// #8
 28c:	bl	64 <read_number>
 290:	mov	w1, w0
 294:	ldr	x0, [sp, #24]
 298:	str	w1, [x0]
 29c:	add	x0, sp, #0x30
 2a0:	add	x0, x0, #0xe
 2a4:	mov	x1, #0x8                   	// #8
 2a8:	bl	64 <read_number>
 2ac:	str	w0, [sp, #172]
 2b0:	add	x0, sp, #0x30
 2b4:	add	x0, x0, #0x5e
 2b8:	mov	x1, #0x8                   	// #8
 2bc:	bl	64 <read_number>
 2c0:	str	x0, [sp, #160]
 2c4:	ldr	x1, [sp, #160]
 2c8:	mov	x0, #0x7fffffff            	// #2147483647
 2cc:	cmp	x1, x0
 2d0:	b.ls	2e8 <grub_cpio_find_file+0x160>  // b.plast
 2d4:	ldr	x0, [sp, #16]
 2d8:	mov	w1, #0xffffffff            	// #-1
 2dc:	str	w1, [x0]
 2e0:	mov	w0, #0x0                   	// #0
 2e4:	b	458 <grub_cpio_find_file+0x2d0>
 2e8:	ldr	x0, [sp, #16]
 2ec:	ldr	w1, [sp, #172]
 2f0:	str	w1, [x0]
 2f4:	ldr	x0, [sp, #160]
 2f8:	add	x0, x0, #0x1
 2fc:	bl	0 <grub_malloc>
 300:	mov	x1, x0
 304:	ldr	x0, [sp, #32]
 308:	str	x1, [x0]
 30c:	ldr	x0, [sp, #32]
 310:	ldr	x0, [x0]
 314:	cmp	x0, #0x0
 318:	b.ne	330 <grub_cpio_find_file+0x1a8>  // b.any
 31c:	adrp	x0, 0 <grub_isxdigit>
 320:	add	x0, x0, #0x0
 324:	ldr	x0, [x0]
 328:	ldr	w0, [x0]
 32c:	b	458 <grub_cpio_find_file+0x2d0>
 330:	ldr	x0, [sp, #40]
 334:	ldr	x5, [x0]
 338:	ldr	x0, [sp, #40]
 33c:	ldr	x0, [x0, #8]
 340:	add	x1, x0, #0x6e
 344:	ldr	x0, [sp, #32]
 348:	ldr	x0, [x0]
 34c:	mov	x4, x0
 350:	ldr	x3, [sp, #160]
 354:	mov	x2, x1
 358:	mov	x1, #0x0                   	// #0
 35c:	mov	x0, x5
 360:	bl	0 <grub_disk_read>
 364:	cmp	w0, #0x0
 368:	b.eq	38c <grub_cpio_find_file+0x204>  // b.none
 36c:	ldr	x0, [sp, #32]
 370:	ldr	x0, [x0]
 374:	bl	0 <grub_free>
 378:	adrp	x0, 0 <grub_isxdigit>
 37c:	add	x0, x0, #0x0
 380:	ldr	x0, [x0]
 384:	ldr	w0, [x0]
 388:	b	458 <grub_cpio_find_file+0x2d0>
 38c:	ldr	x0, [sp, #32]
 390:	ldr	x1, [x0]
 394:	ldr	x0, [sp, #160]
 398:	add	x0, x1, x0
 39c:	strb	wzr, [x0]
 3a0:	ldr	x0, [sp, #40]
 3a4:	ldr	x0, [x0, #32]
 3a8:	cmp	x0, #0x0
 3ac:	b.ne	410 <grub_cpio_find_file+0x288>  // b.any
 3b0:	ldr	w0, [sp, #172]
 3b4:	cmp	w0, #0x0
 3b8:	b.ne	410 <grub_cpio_find_file+0x288>  // b.any
 3bc:	ldr	x0, [sp, #160]
 3c0:	cmp	x0, #0xb
 3c4:	b.ne	410 <grub_cpio_find_file+0x288>  // b.any
 3c8:	ldr	x0, [sp, #32]
 3cc:	ldr	x3, [x0]
 3d0:	mov	x2, #0xb                   	// #11
 3d4:	adrp	x0, 0 <grub_isxdigit>
 3d8:	add	x0, x0, #0x0
 3dc:	ldr	x1, [x0]
 3e0:	mov	x0, x3
 3e4:	bl	0 <grub_memcmp>
 3e8:	cmp	w0, #0x0
 3ec:	b.ne	410 <grub_cpio_find_file+0x288>  // b.any
 3f0:	ldr	x0, [sp, #16]
 3f4:	mov	w1, #0xffffffff            	// #-1
 3f8:	str	w1, [x0]
 3fc:	ldr	x0, [sp, #32]
 400:	ldr	x0, [x0]
 404:	bl	0 <grub_free>
 408:	mov	w0, #0x0                   	// #0
 40c:	b	458 <grub_cpio_find_file+0x2d0>
 410:	ldr	x0, [sp, #40]
 414:	ldr	x1, [x0, #8]
 418:	ldr	x0, [sp, #160]
 41c:	add	x0, x0, #0x71
 420:	and	x0, x0, #0xfffffffffffffffc
 424:	add	x1, x1, x0
 428:	ldr	x0, [sp, #40]
 42c:	str	x1, [x0, #24]
 430:	ldr	x0, [sp, #40]
 434:	ldr	x1, [x0, #24]
 438:	ldr	x0, [sp, #40]
 43c:	ldr	x0, [x0, #32]
 440:	add	x0, x0, #0x3
 444:	and	x0, x0, #0xfffffffffffffffc
 448:	add	x1, x1, x0
 44c:	ldr	x0, [sp, #40]
 450:	str	x1, [x0, #16]
 454:	mov	w0, #0x0                   	// #0
 458:	ldp	x29, x30, [sp], #176
 45c:	ret
	...

0000000000000488 <grub_cpio_get_link_target>:
 488:	stp	x29, x30, [sp, #-48]!
 48c:	mov	x29, sp
 490:	str	x0, [sp, #24]
 494:	ldr	x0, [sp, #24]
 498:	ldr	x0, [x0, #32]
 49c:	cmp	x0, #0x0
 4a0:	b.ne	4b8 <grub_cpio_get_link_target+0x30>  // b.any
 4a4:	adrp	x0, 0 <grub_isxdigit>
 4a8:	add	x0, x0, #0x0
 4ac:	ldr	x0, [x0]
 4b0:	bl	0 <grub_strdup>
 4b4:	b	548 <grub_cpio_get_link_target+0xc0>
 4b8:	ldr	x0, [sp, #24]
 4bc:	ldr	x0, [x0, #32]
 4c0:	add	x0, x0, #0x1
 4c4:	bl	0 <grub_malloc>
 4c8:	str	x0, [sp, #40]
 4cc:	ldr	x0, [sp, #40]
 4d0:	cmp	x0, #0x0
 4d4:	b.ne	4e0 <grub_cpio_get_link_target+0x58>  // b.any
 4d8:	mov	x0, #0x0                   	// #0
 4dc:	b	548 <grub_cpio_get_link_target+0xc0>
 4e0:	ldr	x0, [sp, #24]
 4e4:	ldr	x5, [x0]
 4e8:	ldr	x0, [sp, #24]
 4ec:	ldr	x1, [x0, #24]
 4f0:	ldr	x0, [sp, #24]
 4f4:	ldr	x0, [x0, #32]
 4f8:	ldr	x4, [sp, #40]
 4fc:	mov	x3, x0
 500:	mov	x2, x1
 504:	mov	x1, #0x0                   	// #0
 508:	mov	x0, x5
 50c:	bl	0 <grub_disk_read>
 510:	str	w0, [sp, #36]
 514:	ldr	w0, [sp, #36]
 518:	cmp	w0, #0x0
 51c:	b.eq	530 <grub_cpio_get_link_target+0xa8>  // b.none
 520:	ldr	x0, [sp, #40]
 524:	bl	0 <grub_free>
 528:	mov	x0, #0x0                   	// #0
 52c:	b	548 <grub_cpio_get_link_target+0xc0>
 530:	ldr	x0, [sp, #24]
 534:	ldr	x0, [x0, #32]
 538:	ldr	x1, [sp, #40]
 53c:	add	x0, x1, x0
 540:	strb	wzr, [x0]
 544:	ldr	x0, [sp, #40]
 548:	ldp	x29, x30, [sp], #48
 54c:	ret
	...

0000000000000558 <grub_cpio_rewind>:
 558:	sub	sp, sp, #0x10
 55c:	str	x0, [sp, #8]
 560:	ldr	x0, [sp, #8]
 564:	str	xzr, [x0, #16]
 568:	nop
 56c:	add	sp, sp, #0x10
 570:	ret

0000000000000574 <grub_cpio_mount>:
 574:	stp	x29, x30, [sp, #-160]!
 578:	mov	x29, sp
 57c:	str	x0, [sp, #24]
 580:	add	x0, sp, #0x28
 584:	mov	x4, x0
 588:	mov	x3, #0x6e                  	// #110
 58c:	mov	x2, #0x0                   	// #0
 590:	mov	x1, #0x0                   	// #0
 594:	ldr	x0, [sp, #24]
 598:	bl	0 <grub_disk_read>
 59c:	cmp	w0, #0x0
 5a0:	b.ne	618 <grub_cpio_mount+0xa4>  // b.any
 5a4:	add	x3, sp, #0x28
 5a8:	mov	x2, #0x6                   	// #6
 5ac:	adrp	x0, 0 <grub_isxdigit>
 5b0:	add	x0, x0, #0x0
 5b4:	ldr	x1, [x0]
 5b8:	mov	x0, x3
 5bc:	bl	0 <grub_memcmp>
 5c0:	cmp	w0, #0x0
 5c4:	b.eq	5ec <grub_cpio_mount+0x78>  // b.none
 5c8:	add	x3, sp, #0x28
 5cc:	mov	x2, #0x6                   	// #6
 5d0:	adrp	x0, 0 <grub_isxdigit>
 5d4:	add	x0, x0, #0x0
 5d8:	ldr	x1, [x0]
 5dc:	mov	x0, x3
 5e0:	bl	0 <grub_memcmp>
 5e4:	cmp	w0, #0x0
 5e8:	b.ne	620 <grub_cpio_mount+0xac>  // b.any
 5ec:	mov	x0, #0x28                  	// #40
 5f0:	bl	0 <grub_zalloc>
 5f4:	str	x0, [sp, #152]
 5f8:	ldr	x0, [sp, #152]
 5fc:	cmp	x0, #0x0
 600:	b.eq	628 <grub_cpio_mount+0xb4>  // b.none
 604:	ldr	x0, [sp, #152]
 608:	ldr	x1, [sp, #24]
 60c:	str	x1, [x0]
 610:	ldr	x0, [sp, #152]
 614:	b	644 <grub_cpio_mount+0xd0>
 618:	nop
 61c:	b	62c <grub_cpio_mount+0xb8>
 620:	nop
 624:	b	62c <grub_cpio_mount+0xb8>
 628:	nop
 62c:	adrp	x0, 0 <grub_isxdigit>
 630:	add	x0, x0, #0x0
 634:	ldr	x1, [x0]
 638:	mov	w0, #0x9                   	// #9
 63c:	bl	0 <grub_error>
 640:	mov	x0, #0x0                   	// #0
 644:	ldp	x29, x30, [sp], #160
 648:	ret
 64c:	nop
	...

0000000000000668 <grub_cpio_dir>:
 668:	stp	x29, x30, [sp, #-64]!
 66c:	mov	x29, sp
 670:	str	x0, [sp, #40]
 674:	str	x1, [sp, #32]
 678:	str	x2, [sp, #24]
 67c:	str	x3, [sp, #16]
 680:	ldr	x0, [sp, #40]
 684:	ldr	x0, [x0]
 688:	bl	574 <grub_cpio_mount>
 68c:	str	x0, [sp, #56]
 690:	ldr	x0, [sp, #56]
 694:	cmp	x0, #0x0
 698:	b.ne	6b0 <grub_cpio_dir+0x48>  // b.any
 69c:	adrp	x0, 0 <grub_isxdigit>
 6a0:	add	x0, x0, #0x0
 6a4:	ldr	x0, [x0]
 6a8:	ldr	w0, [x0]
 6ac:	b	6e0 <grub_cpio_dir+0x78>
 6b0:	ldr	x4, [sp, #16]
 6b4:	ldr	x3, [sp, #24]
 6b8:	ldr	x2, [sp, #32]
 6bc:	adrp	x0, 0 <grub_isxdigit>
 6c0:	add	x0, x0, #0x0
 6c4:	ldr	x1, [x0]
 6c8:	ldr	x0, [sp, #56]
 6cc:	bl	0 <grub_archelp_dir>
 6d0:	str	w0, [sp, #52]
 6d4:	ldr	x0, [sp, #56]
 6d8:	bl	0 <grub_free>
 6dc:	ldr	w0, [sp, #52]
 6e0:	ldp	x29, x30, [sp], #64
 6e4:	ret
	...

00000000000006f8 <grub_cpio_open>:
 6f8:	stp	x29, x30, [sp, #-48]!
 6fc:	mov	x29, sp
 700:	str	x0, [sp, #24]
 704:	str	x1, [sp, #16]
 708:	ldr	x0, [sp, #24]
 70c:	ldr	x0, [x0, #8]
 710:	ldr	x0, [x0]
 714:	bl	574 <grub_cpio_mount>
 718:	str	x0, [sp, #40]
 71c:	ldr	x0, [sp, #40]
 720:	cmp	x0, #0x0
 724:	b.ne	73c <grub_cpio_open+0x44>  // b.any
 728:	adrp	x0, 0 <grub_isxdigit>
 72c:	add	x0, x0, #0x0
 730:	ldr	x0, [x0]
 734:	ldr	w0, [x0]
 738:	b	790 <grub_cpio_open+0x98>
 73c:	ldr	x2, [sp, #16]
 740:	adrp	x0, 0 <grub_isxdigit>
 744:	add	x0, x0, #0x0
 748:	ldr	x1, [x0]
 74c:	ldr	x0, [sp, #40]
 750:	bl	0 <grub_archelp_open>
 754:	str	w0, [sp, #36]
 758:	ldr	w0, [sp, #36]
 75c:	cmp	w0, #0x0
 760:	b.eq	770 <grub_cpio_open+0x78>  // b.none
 764:	ldr	x0, [sp, #40]
 768:	bl	0 <grub_free>
 76c:	b	78c <grub_cpio_open+0x94>
 770:	ldr	x0, [sp, #24]
 774:	ldr	x1, [sp, #40]
 778:	str	x1, [x0, #80]
 77c:	ldr	x0, [sp, #40]
 780:	ldr	x1, [x0, #32]
 784:	ldr	x0, [sp, #24]
 788:	str	x1, [x0, #64]
 78c:	ldr	w0, [sp, #36]
 790:	ldp	x29, x30, [sp], #48
 794:	ret
	...

00000000000007a8 <grub_cpio_read>:
 7a8:	stp	x29, x30, [sp, #-64]!
 7ac:	mov	x29, sp
 7b0:	str	x0, [sp, #40]
 7b4:	str	x1, [sp, #32]
 7b8:	str	x2, [sp, #24]
 7bc:	ldr	x0, [sp, #40]
 7c0:	ldr	x0, [x0, #80]
 7c4:	str	x0, [sp, #56]
 7c8:	ldr	x0, [sp, #56]
 7cc:	ldr	x0, [x0]
 7d0:	ldr	x1, [sp, #40]
 7d4:	ldr	x1, [x1, #88]
 7d8:	str	x1, [x0, #48]
 7dc:	ldr	x0, [sp, #56]
 7e0:	ldr	x0, [x0]
 7e4:	ldr	x1, [sp, #40]
 7e8:	ldr	x1, [x1, #96]
 7ec:	str	x1, [x0, #56]
 7f0:	ldr	x0, [sp, #56]
 7f4:	ldr	x5, [x0]
 7f8:	ldr	x0, [sp, #56]
 7fc:	ldr	x1, [x0, #24]
 800:	ldr	x0, [sp, #40]
 804:	ldr	x0, [x0, #24]
 808:	add	x0, x1, x0
 80c:	ldr	x4, [sp, #32]
 810:	ldr	x3, [sp, #24]
 814:	mov	x2, x0
 818:	mov	x1, #0x0                   	// #0
 81c:	mov	x0, x5
 820:	bl	0 <grub_disk_read>
 824:	cmp	w0, #0x0
 828:	b.ne	834 <grub_cpio_read+0x8c>  // b.any
 82c:	ldr	x0, [sp, #24]
 830:	b	838 <grub_cpio_read+0x90>
 834:	mov	x0, #0xffffffffffffffff    	// #-1
 838:	str	x0, [sp, #48]
 83c:	ldr	x0, [sp, #56]
 840:	ldr	x0, [x0]
 844:	str	xzr, [x0, #48]
 848:	ldr	x0, [sp, #48]
 84c:	ldp	x29, x30, [sp], #64
 850:	ret

0000000000000854 <grub_cpio_close>:
 854:	stp	x29, x30, [sp, #-48]!
 858:	mov	x29, sp
 85c:	str	x0, [sp, #24]
 860:	ldr	x0, [sp, #24]
 864:	ldr	x0, [x0, #80]
 868:	str	x0, [sp, #40]
 86c:	ldr	x0, [sp, #40]
 870:	bl	0 <grub_free>
 874:	adrp	x0, 0 <grub_isxdigit>
 878:	add	x0, x0, #0x0
 87c:	ldr	x0, [x0]
 880:	ldr	w0, [x0]
 884:	ldp	x29, x30, [sp], #48
 888:	ret
 88c:	nop
	...

0000000000000898 <grub_mod_init>:
 898:	stp	x29, x30, [sp, #-32]!
 89c:	mov	x29, sp
 8a0:	str	x0, [sp, #24]
 8a4:	adrp	x0, 0 <grub_isxdigit>
 8a8:	add	x0, x0, #0x0
 8ac:	ldr	x0, [x0]
 8b0:	bl	134 <grub_fs_register>
 8b4:	nop
 8b8:	ldp	x29, x30, [sp], #32
 8bc:	ret
	...

00000000000008c8 <grub_mod_fini>:
 8c8:	stp	x29, x30, [sp, #-16]!
 8cc:	mov	x29, sp
 8d0:	adrp	x0, 0 <grub_isxdigit>
 8d4:	add	x0, x0, #0x0
 8d8:	ldr	x0, [x0]
 8dc:	bl	168 <grub_fs_unregister>
 8e0:	nop
 8e4:	ldp	x29, x30, [sp], #16
 8e8:	ret
 8ec:	nop
	...
