
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ln_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000a38 <_init>:
 a38:	stp	x29, x30, [sp, #-16]!
 a3c:	mov	x29, sp
 a40:	bl	b80 <call_weak_fn>
 a44:	ldp	x29, x30, [sp], #16
 a48:	ret

Disassembly of section .plt:

0000000000000a50 <.plt>:
 a50:	stp	x16, x30, [sp, #-16]!
 a54:	adrp	x16, 11000 <__FRAME_END__+0xf98c>
 a58:	ldr	x17, [x16, #4088]
 a5c:	add	x16, x16, #0xff8
 a60:	br	x17
 a64:	nop
 a68:	nop
 a6c:	nop

0000000000000a70 <strlen@plt>:
 a70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a74:	ldr	x17, [x16]
 a78:	add	x16, x16, #0x0
 a7c:	br	x17

0000000000000a80 <builtin_error@plt>:
 a80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a84:	ldr	x17, [x16, #8]
 a88:	add	x16, x16, #0x8
 a8c:	br	x17

0000000000000a90 <__cxa_finalize@plt>:
 a90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a94:	ldr	x17, [x16, #16]
 a98:	add	x16, x16, #0x10
 a9c:	br	x17

0000000000000aa0 <builtin_help@plt>:
 aa0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 aa4:	ldr	x17, [x16, #24]
 aa8:	add	x16, x16, #0x18
 aac:	br	x17

0000000000000ab0 <xmalloc@plt>:
 ab0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ab4:	ldr	x17, [x16, #32]
 ab8:	add	x16, x16, #0x20
 abc:	br	x17

0000000000000ac0 <builtin_usage@plt>:
 ac0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ac4:	ldr	x17, [x16, #40]
 ac8:	add	x16, x16, #0x28
 acc:	br	x17

0000000000000ad0 <strerror@plt>:
 ad0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ad4:	ldr	x17, [x16, #48]
 ad8:	add	x16, x16, #0x30
 adc:	br	x17

0000000000000ae0 <strrchr@plt>:
 ae0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ae4:	ldr	x17, [x16, #56]
 ae8:	add	x16, x16, #0x38
 aec:	br	x17

0000000000000af0 <__gmon_start__@plt>:
 af0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 af4:	ldr	x17, [x16, #64]
 af8:	add	x16, x16, #0x40
 afc:	br	x17

0000000000000b00 <free@plt>:
 b00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b04:	ldr	x17, [x16, #72]
 b08:	add	x16, x16, #0x48
 b0c:	br	x17

0000000000000b10 <internal_getopt@plt>:
 b10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b14:	ldr	x17, [x16, #80]
 b18:	add	x16, x16, #0x50
 b1c:	br	x17

0000000000000b20 <reset_internal_getopt@plt>:
 b20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b24:	ldr	x17, [x16, #88]
 b28:	add	x16, x16, #0x58
 b2c:	br	x17

0000000000000b30 <strcpy@plt>:
 b30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b34:	ldr	x17, [x16, #96]
 b38:	add	x16, x16, #0x60
 b3c:	br	x17

0000000000000b40 <__lxstat@plt>:
 b40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b44:	ldr	x17, [x16, #104]
 b48:	add	x16, x16, #0x68
 b4c:	br	x17

0000000000000b50 <__errno_location@plt>:
 b50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b54:	ldr	x17, [x16, #112]
 b58:	add	x16, x16, #0x70
 b5c:	br	x17

0000000000000b60 <__xstat@plt>:
 b60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b64:	ldr	x17, [x16, #120]
 b68:	add	x16, x16, #0x78
 b6c:	br	x17

0000000000000b70 <unlink@plt>:
 b70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b74:	ldr	x17, [x16, #128]
 b78:	add	x16, x16, #0x80
 b7c:	br	x17

Disassembly of section .text:

0000000000000b80 <call_weak_fn>:
     b80:	adrp	x0, 11000 <__FRAME_END__+0xf98c>
     b84:	ldr	x0, [x0, #4032]
     b88:	cbz	x0, b90 <call_weak_fn+0x10>
     b8c:	b	af0 <__gmon_start__@plt>
     b90:	ret

0000000000000b94 <deregister_tm_clones>:
     b94:	stp	x29, x30, [sp, #-32]!
     b98:	mov	x29, sp
     b9c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     ba0:	add	x0, x0, #0x100
     ba4:	str	x0, [sp, #24]
     ba8:	ldr	x0, [sp, #24]
     bac:	str	x0, [sp, #24]
     bb0:	ldr	x1, [sp, #24]
     bb4:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     bb8:	add	x0, x0, #0x100
     bbc:	cmp	x1, x0
     bc0:	b.eq	bf8 <deregister_tm_clones+0x64>  // b.none
     bc4:	adrp	x0, 11000 <__FRAME_END__+0xf98c>
     bc8:	ldr	x0, [x0, #4016]
     bcc:	str	x0, [sp, #16]
     bd0:	ldr	x0, [sp, #16]
     bd4:	str	x0, [sp, #16]
     bd8:	ldr	x0, [sp, #16]
     bdc:	cmp	x0, #0x0
     be0:	b.eq	bfc <deregister_tm_clones+0x68>  // b.none
     be4:	ldr	x1, [sp, #16]
     be8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     bec:	add	x0, x0, #0x100
     bf0:	blr	x1
     bf4:	b	bfc <deregister_tm_clones+0x68>
     bf8:	nop
     bfc:	ldp	x29, x30, [sp], #32
     c00:	ret

0000000000000c04 <register_tm_clones>:
     c04:	stp	x29, x30, [sp, #-48]!
     c08:	mov	x29, sp
     c0c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     c10:	add	x0, x0, #0x100
     c14:	str	x0, [sp, #40]
     c18:	ldr	x0, [sp, #40]
     c1c:	str	x0, [sp, #40]
     c20:	ldr	x1, [sp, #40]
     c24:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     c28:	add	x0, x0, #0x100
     c2c:	sub	x0, x1, x0
     c30:	asr	x0, x0, #3
     c34:	lsr	x1, x0, #63
     c38:	add	x0, x1, x0
     c3c:	asr	x0, x0, #1
     c40:	str	x0, [sp, #32]
     c44:	ldr	x0, [sp, #32]
     c48:	cmp	x0, #0x0
     c4c:	b.eq	c88 <register_tm_clones+0x84>  // b.none
     c50:	adrp	x0, 11000 <__FRAME_END__+0xf98c>
     c54:	ldr	x0, [x0, #4064]
     c58:	str	x0, [sp, #24]
     c5c:	ldr	x0, [sp, #24]
     c60:	str	x0, [sp, #24]
     c64:	ldr	x0, [sp, #24]
     c68:	cmp	x0, #0x0
     c6c:	b.eq	c8c <register_tm_clones+0x88>  // b.none
     c70:	ldr	x2, [sp, #24]
     c74:	ldr	x1, [sp, #32]
     c78:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     c7c:	add	x0, x0, #0x100
     c80:	blr	x2
     c84:	b	c8c <register_tm_clones+0x88>
     c88:	nop
     c8c:	ldp	x29, x30, [sp], #48
     c90:	ret

0000000000000c94 <__do_global_dtors_aux>:
     c94:	stp	x29, x30, [sp, #-16]!
     c98:	mov	x29, sp
     c9c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     ca0:	add	x0, x0, #0x100
     ca4:	ldrb	w0, [x0]
     ca8:	and	x0, x0, #0xff
     cac:	cmp	x0, #0x0
     cb0:	b.ne	cec <__do_global_dtors_aux+0x58>  // b.any
     cb4:	adrp	x0, 11000 <__FRAME_END__+0xf98c>
     cb8:	ldr	x0, [x0, #4024]
     cbc:	cmp	x0, #0x0
     cc0:	b.eq	cd4 <__do_global_dtors_aux+0x40>  // b.none
     cc4:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     cc8:	add	x0, x0, #0x88
     ccc:	ldr	x0, [x0]
     cd0:	bl	a90 <__cxa_finalize@plt>
     cd4:	bl	b94 <deregister_tm_clones>
     cd8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     cdc:	add	x0, x0, #0x100
     ce0:	mov	w1, #0x1                   	// #1
     ce4:	strb	w1, [x0]
     ce8:	b	cf0 <__do_global_dtors_aux+0x5c>
     cec:	nop
     cf0:	ldp	x29, x30, [sp], #16
     cf4:	ret

0000000000000cf8 <frame_dummy>:
     cf8:	stp	x29, x30, [sp, #-16]!
     cfc:	mov	x29, sp
     d00:	bl	c04 <register_tm_clones>
     d04:	nop
     d08:	ldp	x29, x30, [sp], #16
     d0c:	ret

0000000000000d10 <ln_builtin>:
     d10:	stp	x29, x30, [sp, #-192]!
     d14:	mov	x29, sp
     d18:	str	x0, [sp, #24]
     d1c:	str	wzr, [sp, #184]
     d20:	bl	b20 <reset_internal_getopt@plt>
     d24:	b	dd0 <ln_builtin+0xc0>
     d28:	ldr	w0, [sp, #172]
     d2c:	cmp	w0, #0x73
     d30:	b.eq	d98 <ln_builtin+0x88>  // b.none
     d34:	ldr	w0, [sp, #172]
     d38:	cmp	w0, #0x73
     d3c:	b.gt	dc4 <ln_builtin+0xb4>
     d40:	ldr	w0, [sp, #172]
     d44:	cmp	w0, #0x6e
     d48:	b.eq	da8 <ln_builtin+0x98>  // b.none
     d4c:	ldr	w0, [sp, #172]
     d50:	cmp	w0, #0x6e
     d54:	b.gt	dc4 <ln_builtin+0xb4>
     d58:	ldr	w0, [sp, #172]
     d5c:	cmp	w0, #0x68
     d60:	b.eq	da8 <ln_builtin+0x98>  // b.none
     d64:	ldr	w0, [sp, #172]
     d68:	cmp	w0, #0x68
     d6c:	b.gt	dc4 <ln_builtin+0xb4>
     d70:	ldr	w0, [sp, #172]
     d74:	cmn	w0, #0x63
     d78:	b.eq	db8 <ln_builtin+0xa8>  // b.none
     d7c:	ldr	w0, [sp, #172]
     d80:	cmp	w0, #0x66
     d84:	b.ne	dc4 <ln_builtin+0xb4>  // b.any
     d88:	ldr	w0, [sp, #184]
     d8c:	orr	w0, w0, #0x2
     d90:	str	w0, [sp, #184]
     d94:	b	dd0 <ln_builtin+0xc0>
     d98:	ldr	w0, [sp, #184]
     d9c:	orr	w0, w0, #0x1
     da0:	str	w0, [sp, #184]
     da4:	b	dd0 <ln_builtin+0xc0>
     da8:	ldr	w0, [sp, #184]
     dac:	orr	w0, w0, #0x4
     db0:	str	w0, [sp, #184]
     db4:	b	dd0 <ln_builtin+0xc0>
     db8:	bl	aa0 <builtin_help@plt>
     dbc:	mov	w0, #0x102                 	// #258
     dc0:	b	f94 <ln_builtin+0x284>
     dc4:	bl	ac0 <builtin_usage@plt>
     dc8:	mov	w0, #0x102                 	// #258
     dcc:	b	f94 <ln_builtin+0x284>
     dd0:	adrp	x0, 1000 <mkdirpath+0x64>
     dd4:	add	x1, x0, #0x2e0
     dd8:	ldr	x0, [sp, #24]
     ddc:	bl	b10 <internal_getopt@plt>
     de0:	str	w0, [sp, #172]
     de4:	ldr	w0, [sp, #172]
     de8:	cmn	w0, #0x1
     dec:	b.ne	d28 <ln_builtin+0x18>  // b.any
     df0:	adrp	x0, 11000 <__FRAME_END__+0xf98c>
     df4:	ldr	x0, [x0, #4048]
     df8:	ldr	x0, [x0]
     dfc:	str	x0, [sp, #24]
     e00:	ldr	x0, [sp, #24]
     e04:	cmp	x0, #0x0
     e08:	b.ne	e18 <ln_builtin+0x108>  // b.any
     e0c:	bl	ac0 <builtin_usage@plt>
     e10:	mov	w0, #0x102                 	// #258
     e14:	b	f94 <ln_builtin+0x284>
     e18:	ldr	w0, [sp, #184]
     e1c:	and	w0, w0, #0x1
     e20:	cmp	w0, #0x0
     e24:	b.eq	e34 <ln_builtin+0x124>  // b.none
     e28:	adrp	x0, 11000 <__FRAME_END__+0xf98c>
     e2c:	ldr	x0, [x0, #4040]
     e30:	b	e3c <ln_builtin+0x12c>
     e34:	adrp	x0, 11000 <__FRAME_END__+0xf98c>
     e38:	ldr	x0, [x0, #4056]
     e3c:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     e40:	add	x1, x1, #0x108
     e44:	str	x0, [x1]
     e48:	ldr	x0, [sp, #24]
     e4c:	ldr	x0, [x0]
     e50:	cmp	x0, #0x0
     e54:	b.ne	e7c <ln_builtin+0x16c>  // b.any
     e58:	ldr	x0, [sp, #24]
     e5c:	ldr	x0, [x0, #8]
     e60:	ldr	x3, [x0]
     e64:	ldr	w2, [sp, #184]
     e68:	adrp	x0, 1000 <mkdirpath+0x64>
     e6c:	add	x1, x0, #0x2e8
     e70:	mov	x0, x3
     e74:	bl	1048 <dolink>
     e78:	b	f94 <ln_builtin+0x284>
     e7c:	ldr	x0, [sp, #24]
     e80:	ldr	x0, [x0]
     e84:	ldr	x0, [x0]
     e88:	cmp	x0, #0x0
     e8c:	b.ne	ec0 <ln_builtin+0x1b0>  // b.any
     e90:	ldr	x0, [sp, #24]
     e94:	ldr	x0, [x0, #8]
     e98:	ldr	x3, [x0]
     e9c:	ldr	x0, [sp, #24]
     ea0:	ldr	x0, [x0]
     ea4:	ldr	x0, [x0, #8]
     ea8:	ldr	x0, [x0]
     eac:	ldr	w2, [sp, #184]
     eb0:	mov	x1, x0
     eb4:	mov	x0, x3
     eb8:	bl	1048 <dolink>
     ebc:	b	f94 <ln_builtin+0x284>
     ec0:	ldr	x0, [sp, #24]
     ec4:	str	x0, [sp, #176]
     ec8:	b	ed8 <ln_builtin+0x1c8>
     ecc:	ldr	x0, [sp, #176]
     ed0:	ldr	x0, [x0]
     ed4:	str	x0, [sp, #176]
     ed8:	ldr	x0, [sp, #176]
     edc:	ldr	x0, [x0]
     ee0:	cmp	x0, #0x0
     ee4:	b.ne	ecc <ln_builtin+0x1bc>  // b.any
     ee8:	ldr	x0, [sp, #176]
     eec:	ldr	x0, [x0, #8]
     ef0:	ldr	x0, [x0]
     ef4:	str	x0, [sp, #160]
     ef8:	add	x0, sp, #0x20
     efc:	mov	x1, x0
     f00:	ldr	x0, [sp, #160]
     f04:	bl	12b0 <__stat>
     f08:	cmp	w0, #0x0
     f0c:	b.ge	f28 <ln_builtin+0x218>  // b.tcont
     f10:	ldr	x1, [sp, #160]
     f14:	adrp	x0, 1000 <mkdirpath+0x64>
     f18:	add	x0, x0, #0x2f0
     f1c:	bl	a80 <builtin_error@plt>
     f20:	mov	w0, #0x1                   	// #1
     f24:	b	f94 <ln_builtin+0x284>
     f28:	ldr	w0, [sp, #48]
     f2c:	and	w0, w0, #0xf000
     f30:	cmp	w0, #0x4, lsl #12
     f34:	b.eq	f44 <ln_builtin+0x234>  // b.none
     f38:	bl	ac0 <builtin_usage@plt>
     f3c:	mov	w0, #0x102                 	// #258
     f40:	b	f94 <ln_builtin+0x284>
     f44:	str	wzr, [sp, #188]
     f48:	b	f80 <ln_builtin+0x270>
     f4c:	ldr	x0, [sp, #24]
     f50:	ldr	x0, [x0, #8]
     f54:	ldr	x0, [x0]
     f58:	ldr	w2, [sp, #184]
     f5c:	ldr	x1, [sp, #160]
     f60:	bl	1048 <dolink>
     f64:	mov	w1, w0
     f68:	ldr	w0, [sp, #188]
     f6c:	add	w0, w0, w1
     f70:	str	w0, [sp, #188]
     f74:	ldr	x0, [sp, #24]
     f78:	ldr	x0, [x0]
     f7c:	str	x0, [sp, #24]
     f80:	ldr	x1, [sp, #24]
     f84:	ldr	x0, [sp, #176]
     f88:	cmp	x1, x0
     f8c:	b.ne	f4c <ln_builtin+0x23c>  // b.any
     f90:	ldr	w0, [sp, #188]
     f94:	ldp	x29, x30, [sp], #192
     f98:	ret

0000000000000f9c <mkdirpath>:
     f9c:	stp	x29, x30, [sp, #-48]!
     fa0:	mov	x29, sp
     fa4:	str	x0, [sp, #24]
     fa8:	str	x1, [sp, #16]
     fac:	ldr	x0, [sp, #24]
     fb0:	bl	a70 <strlen@plt>
     fb4:	str	w0, [sp, #44]
     fb8:	ldr	x0, [sp, #16]
     fbc:	bl	a70 <strlen@plt>
     fc0:	str	w0, [sp, #40]
     fc4:	ldr	w0, [sp, #44]
     fc8:	add	w1, w0, #0x2
     fcc:	ldr	w0, [sp, #40]
     fd0:	add	w0, w1, w0
     fd4:	sxtw	x0, w0
     fd8:	bl	ab0 <xmalloc@plt>
     fdc:	str	x0, [sp, #32]
     fe0:	ldr	x1, [sp, #24]
     fe4:	ldr	x0, [sp, #32]
     fe8:	bl	b30 <strcpy@plt>
     fec:	ldrsw	x0, [sp, #44]
     ff0:	sub	x0, x0, #0x1
     ff4:	ldr	x1, [sp, #32]
     ff8:	add	x0, x1, x0
     ffc:	ldrb	w0, [x0]
    1000:	cmp	w0, #0x2f
    1004:	b.eq	1028 <mkdirpath+0x8c>  // b.none
    1008:	ldr	w0, [sp, #44]
    100c:	add	w1, w0, #0x1
    1010:	str	w1, [sp, #44]
    1014:	sxtw	x0, w0
    1018:	ldr	x1, [sp, #32]
    101c:	add	x0, x1, x0
    1020:	mov	w1, #0x2f                  	// #47
    1024:	strb	w1, [x0]
    1028:	ldrsw	x0, [sp, #44]
    102c:	ldr	x1, [sp, #32]
    1030:	add	x0, x1, x0
    1034:	ldr	x1, [sp, #16]
    1038:	bl	b30 <strcpy@plt>
    103c:	ldr	x0, [sp, #32]
    1040:	ldp	x29, x30, [sp], #48
    1044:	ret

0000000000001048 <dolink>:
    1048:	stp	x29, x30, [sp, #-336]!
    104c:	mov	x29, sp
    1050:	str	x0, [sp, #40]
    1054:	str	x1, [sp, #32]
    1058:	str	w2, [sp, #28]
    105c:	ldr	w0, [sp, #28]
    1060:	and	w0, w0, #0x1
    1064:	cmp	w0, #0x0
    1068:	b.ne	10f4 <dolink+0xac>  // b.any
    106c:	add	x0, sp, #0xb8
    1070:	mov	x1, x0
    1074:	ldr	x0, [sp, #40]
    1078:	bl	12b0 <__stat>
    107c:	cmp	w0, #0x0
    1080:	b.eq	10ac <dolink+0x64>  // b.none
    1084:	bl	b50 <__errno_location@plt>
    1088:	ldr	w0, [x0]
    108c:	bl	ad0 <strerror@plt>
    1090:	mov	x2, x0
    1094:	ldr	x1, [sp, #40]
    1098:	adrp	x0, 1000 <mkdirpath+0x64>
    109c:	add	x0, x0, #0x2f8
    10a0:	bl	a80 <builtin_error@plt>
    10a4:	mov	w0, #0x1                   	// #1
    10a8:	b	12a8 <dolink+0x260>
    10ac:	ldr	w0, [sp, #200]
    10b0:	and	w0, w0, #0xf000
    10b4:	cmp	w0, #0x4, lsl #12
    10b8:	b.ne	10f4 <dolink+0xac>  // b.any
    10bc:	bl	b50 <__errno_location@plt>
    10c0:	mov	x1, x0
    10c4:	mov	w0, #0x15                  	// #21
    10c8:	str	w0, [x1]
    10cc:	bl	b50 <__errno_location@plt>
    10d0:	ldr	w0, [x0]
    10d4:	bl	ad0 <strerror@plt>
    10d8:	mov	x2, x0
    10dc:	ldr	x1, [sp, #40]
    10e0:	adrp	x0, 1000 <mkdirpath+0x64>
    10e4:	add	x0, x0, #0x2f8
    10e8:	bl	a80 <builtin_error@plt>
    10ec:	mov	w0, #0x1                   	// #1
    10f0:	b	12a8 <dolink+0x260>
    10f4:	str	xzr, [sp, #328]
    10f8:	ldr	w0, [sp, #28]
    10fc:	and	w0, w0, #0x4
    1100:	cmp	w0, #0x0
    1104:	b.eq	1128 <dolink+0xe0>  // b.none
    1108:	add	x0, sp, #0x38
    110c:	mov	x1, x0
    1110:	ldr	x0, [sp, #32]
    1114:	bl	12c0 <__lstat>
    1118:	cmp	w0, #0x0
    111c:	cset	w0, eq  // eq = none
    1120:	and	w0, w0, #0xff
    1124:	b	1144 <dolink+0xfc>
    1128:	add	x0, sp, #0x38
    112c:	mov	x1, x0
    1130:	ldr	x0, [sp, #32]
    1134:	bl	12b0 <__stat>
    1138:	cmp	w0, #0x0
    113c:	cset	w0, eq  // eq = none
    1140:	and	w0, w0, #0xff
    1144:	cmp	w0, #0x0
    1148:	b.eq	11a8 <dolink+0x160>  // b.none
    114c:	ldr	w0, [sp, #72]
    1150:	and	w0, w0, #0xf000
    1154:	cmp	w0, #0x4, lsl #12
    1158:	b.ne	11a8 <dolink+0x160>  // b.any
    115c:	mov	w1, #0x2f                  	// #47
    1160:	ldr	x0, [sp, #40]
    1164:	bl	ae0 <strrchr@plt>
    1168:	str	x0, [sp, #320]
    116c:	ldr	x0, [sp, #320]
    1170:	cmp	x0, #0x0
    1174:	b.ne	1184 <dolink+0x13c>  // b.any
    1178:	ldr	x0, [sp, #40]
    117c:	str	x0, [sp, #320]
    1180:	b	1190 <dolink+0x148>
    1184:	ldr	x0, [sp, #320]
    1188:	add	x0, x0, #0x1
    118c:	str	x0, [sp, #320]
    1190:	ldr	x1, [sp, #320]
    1194:	ldr	x0, [sp, #32]
    1198:	bl	f9c <mkdirpath>
    119c:	str	x0, [sp, #328]
    11a0:	ldr	x0, [sp, #328]
    11a4:	str	x0, [sp, #32]
    11a8:	add	x0, sp, #0x38
    11ac:	mov	x1, x0
    11b0:	ldr	x0, [sp, #32]
    11b4:	bl	12c0 <__lstat>
    11b8:	cmp	w0, #0x0
    11bc:	cset	w0, eq  // eq = none
    11c0:	and	w0, w0, #0xff
    11c4:	str	w0, [sp, #316]
    11c8:	ldr	w0, [sp, #28]
    11cc:	and	w0, w0, #0x2
    11d0:	cmp	w0, #0x0
    11d4:	b.eq	1230 <dolink+0x1e8>  // b.none
    11d8:	ldr	w0, [sp, #316]
    11dc:	cmp	w0, #0x0
    11e0:	b.eq	1230 <dolink+0x1e8>  // b.none
    11e4:	ldr	x0, [sp, #32]
    11e8:	bl	b70 <unlink@plt>
    11ec:	cmp	w0, #0x0
    11f0:	b.eq	1230 <dolink+0x1e8>  // b.none
    11f4:	bl	b50 <__errno_location@plt>
    11f8:	ldr	w0, [x0]
    11fc:	bl	ad0 <strerror@plt>
    1200:	mov	x2, x0
    1204:	ldr	x1, [sp, #32]
    1208:	adrp	x0, 1000 <mkdirpath+0x64>
    120c:	add	x0, x0, #0x300
    1210:	bl	a80 <builtin_error@plt>
    1214:	ldr	x0, [sp, #328]
    1218:	cmp	x0, #0x0
    121c:	b.eq	1228 <dolink+0x1e0>  // b.none
    1220:	ldr	x0, [sp, #328]
    1224:	bl	b00 <free@plt>
    1228:	mov	w0, #0x1                   	// #1
    122c:	b	12a8 <dolink+0x260>
    1230:	adrp	x0, 12000 <strlen@GLIBC_2.17>
    1234:	add	x0, x0, #0x108
    1238:	ldr	x2, [x0]
    123c:	ldr	x1, [sp, #32]
    1240:	ldr	x0, [sp, #40]
    1244:	blr	x2
    1248:	cmp	w0, #0x0
    124c:	b.eq	1290 <dolink+0x248>  // b.none
    1250:	bl	b50 <__errno_location@plt>
    1254:	ldr	w0, [x0]
    1258:	bl	ad0 <strerror@plt>
    125c:	mov	x3, x0
    1260:	ldr	x2, [sp, #40]
    1264:	ldr	x1, [sp, #32]
    1268:	adrp	x0, 1000 <mkdirpath+0x64>
    126c:	add	x0, x0, #0x318
    1270:	bl	a80 <builtin_error@plt>
    1274:	ldr	x0, [sp, #328]
    1278:	cmp	x0, #0x0
    127c:	b.eq	1288 <dolink+0x240>  // b.none
    1280:	ldr	x0, [sp, #328]
    1284:	bl	b00 <free@plt>
    1288:	mov	w0, #0x1                   	// #1
    128c:	b	12a8 <dolink+0x260>
    1290:	ldr	x0, [sp, #328]
    1294:	cmp	x0, #0x0
    1298:	b.eq	12a4 <dolink+0x25c>  // b.none
    129c:	ldr	x0, [sp, #328]
    12a0:	bl	b00 <free@plt>
    12a4:	mov	w0, #0x0                   	// #0
    12a8:	ldp	x29, x30, [sp], #336
    12ac:	ret

00000000000012b0 <__stat>:
    12b0:	mov	x2, x1
    12b4:	mov	x1, x0
    12b8:	mov	w0, #0x0                   	// #0
    12bc:	b	b60 <__xstat@plt>

00000000000012c0 <__lstat>:
    12c0:	mov	x2, x1
    12c4:	mov	x1, x0
    12c8:	mov	w0, #0x0                   	// #0
    12cc:	b	b40 <__lxstat@plt>

Disassembly of section .fini:

00000000000012d0 <_fini>:
    12d0:	stp	x29, x30, [sp, #-16]!
    12d4:	mov	x29, sp
    12d8:	ldp	x29, x30, [sp], #16
    12dc:	ret
