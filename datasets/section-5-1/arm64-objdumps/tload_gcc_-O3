
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tload_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400f28 <.init>:
  400f28:	stp	x29, x30, [sp, #-16]!
  400f2c:	mov	x29, sp
  400f30:	bl	4016d4 <ferror@plt+0x544>
  400f34:	ldp	x29, x30, [sp], #16
  400f38:	ret

Disassembly of section .plt:

0000000000400f40 <memmove@plt-0x20>:
  400f40:	stp	x16, x30, [sp, #-16]!
  400f44:	adrp	x16, 414000 <ferror@plt+0x12e70>
  400f48:	ldr	x17, [x16, #4088]
  400f4c:	add	x16, x16, #0xff8
  400f50:	br	x17
  400f54:	nop
  400f58:	nop
  400f5c:	nop

0000000000400f60 <memmove@plt>:
  400f60:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400f64:	ldr	x17, [x16]
  400f68:	add	x16, x16, #0x0
  400f6c:	br	x17

0000000000400f70 <_exit@plt>:
  400f70:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400f74:	ldr	x17, [x16, #8]
  400f78:	add	x16, x16, #0x8
  400f7c:	br	x17

0000000000400f80 <fputs@plt>:
  400f80:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400f84:	ldr	x17, [x16, #16]
  400f88:	add	x16, x16, #0x10
  400f8c:	br	x17

0000000000400f90 <exit@plt>:
  400f90:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400f94:	ldr	x17, [x16, #24]
  400f98:	add	x16, x16, #0x18
  400f9c:	br	x17

0000000000400fa0 <_setjmp@plt>:
  400fa0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400fa4:	ldr	x17, [x16, #32]
  400fa8:	add	x16, x16, #0x20
  400fac:	br	x17

0000000000400fb0 <error@plt>:
  400fb0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400fb4:	ldr	x17, [x16, #40]
  400fb8:	add	x16, x16, #0x28
  400fbc:	br	x17

0000000000400fc0 <loadavg@plt>:
  400fc0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400fc4:	ldr	x17, [x16, #48]
  400fc8:	add	x16, x16, #0x30
  400fcc:	br	x17

0000000000400fd0 <strtod@plt>:
  400fd0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400fd4:	ldr	x17, [x16, #56]
  400fd8:	add	x16, x16, #0x38
  400fdc:	br	x17

0000000000400fe0 <pause@plt>:
  400fe0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400fe4:	ldr	x17, [x16, #64]
  400fe8:	add	x16, x16, #0x40
  400fec:	br	x17

0000000000400ff0 <__cxa_atexit@plt>:
  400ff0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  400ff4:	ldr	x17, [x16, #72]
  400ff8:	add	x16, x16, #0x48
  400ffc:	br	x17

0000000000401000 <__fpending@plt>:
  401000:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401004:	ldr	x17, [x16, #80]
  401008:	add	x16, x16, #0x50
  40100c:	br	x17

0000000000401010 <snprintf@plt>:
  401010:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401014:	ldr	x17, [x16, #88]
  401018:	add	x16, x16, #0x58
  40101c:	br	x17

0000000000401020 <signal@plt>:
  401020:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401024:	ldr	x17, [x16, #96]
  401028:	add	x16, x16, #0x60
  40102c:	br	x17

0000000000401030 <fclose@plt>:
  401030:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401034:	ldr	x17, [x16, #104]
  401038:	add	x16, x16, #0x68
  40103c:	br	x17

0000000000401040 <malloc@plt>:
  401040:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401044:	ldr	x17, [x16, #112]
  401048:	add	x16, x16, #0x70
  40104c:	br	x17

0000000000401050 <open@plt>:
  401050:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401054:	ldr	x17, [x16, #120]
  401058:	add	x16, x16, #0x78
  40105c:	br	x17

0000000000401060 <bindtextdomain@plt>:
  401060:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401064:	ldr	x17, [x16, #128]
  401068:	add	x16, x16, #0x80
  40106c:	br	x17

0000000000401070 <__libc_start_main@plt>:
  401070:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401074:	ldr	x17, [x16, #136]
  401078:	add	x16, x16, #0x88
  40107c:	br	x17

0000000000401080 <memset@plt>:
  401080:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401084:	ldr	x17, [x16, #144]
  401088:	add	x16, x16, #0x90
  40108c:	br	x17

0000000000401090 <realloc@plt>:
  401090:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401094:	ldr	x17, [x16, #152]
  401098:	add	x16, x16, #0x98
  40109c:	br	x17

00000000004010a0 <__gmon_start__@plt>:
  4010a0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  4010a4:	ldr	x17, [x16, #160]
  4010a8:	add	x16, x16, #0xa0
  4010ac:	br	x17

00000000004010b0 <write@plt>:
  4010b0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  4010b4:	ldr	x17, [x16, #168]
  4010b8:	add	x16, x16, #0xa8
  4010bc:	br	x17

00000000004010c0 <abort@plt>:
  4010c0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  4010c4:	ldr	x17, [x16, #176]
  4010c8:	add	x16, x16, #0xb0
  4010cc:	br	x17

00000000004010d0 <textdomain@plt>:
  4010d0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  4010d4:	ldr	x17, [x16, #184]
  4010d8:	add	x16, x16, #0xb8
  4010dc:	br	x17

00000000004010e0 <getopt_long@plt>:
  4010e0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  4010e4:	ldr	x17, [x16, #192]
  4010e8:	add	x16, x16, #0xc0
  4010ec:	br	x17

00000000004010f0 <__ctype_b_loc@plt>:
  4010f0:	adrp	x16, 415000 <ferror@plt+0x13e70>
  4010f4:	ldr	x17, [x16, #200]
  4010f8:	add	x16, x16, #0xc8
  4010fc:	br	x17

0000000000401100 <strtol@plt>:
  401100:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401104:	ldr	x17, [x16, #208]
  401108:	add	x16, x16, #0xd0
  40110c:	br	x17

0000000000401110 <dcgettext@plt>:
  401110:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401114:	ldr	x17, [x16, #216]
  401118:	add	x16, x16, #0xd8
  40111c:	br	x17

0000000000401120 <longjmp@plt>:
  401120:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401124:	ldr	x17, [x16, #224]
  401128:	add	x16, x16, #0xe0
  40112c:	br	x17

0000000000401130 <printf@plt>:
  401130:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401134:	ldr	x17, [x16, #232]
  401138:	add	x16, x16, #0xe8
  40113c:	br	x17

0000000000401140 <__errno_location@plt>:
  401140:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401144:	ldr	x17, [x16, #240]
  401148:	add	x16, x16, #0xf0
  40114c:	br	x17

0000000000401150 <alarm@plt>:
  401150:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401154:	ldr	x17, [x16, #248]
  401158:	add	x16, x16, #0xf8
  40115c:	br	x17

0000000000401160 <fprintf@plt>:
  401160:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401164:	ldr	x17, [x16, #256]
  401168:	add	x16, x16, #0x100
  40116c:	br	x17

0000000000401170 <ioctl@plt>:
  401170:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401174:	ldr	x17, [x16, #264]
  401178:	add	x16, x16, #0x108
  40117c:	br	x17

0000000000401180 <setlocale@plt>:
  401180:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401184:	ldr	x17, [x16, #272]
  401188:	add	x16, x16, #0x110
  40118c:	br	x17

0000000000401190 <ferror@plt>:
  401190:	adrp	x16, 415000 <ferror@plt+0x13e70>
  401194:	ldr	x17, [x16, #280]
  401198:	add	x16, x16, #0x118
  40119c:	br	x17

Disassembly of section .text:

00000000004011a0 <.text>:
  4011a0:	stp	x29, x30, [sp, #-128]!
  4011a4:	adrp	x3, 415000 <ferror@plt+0x13e70>
  4011a8:	adrp	x2, 415000 <ferror@plt+0x13e70>
  4011ac:	mov	x29, sp
  4011b0:	ldr	x3, [x3, #360]
  4011b4:	str	x3, [x2, #320]
  4011b8:	stp	x19, x20, [sp, #16]
  4011bc:	mov	w20, w0
  4011c0:	mov	x19, x1
  4011c4:	mov	w0, #0x6                   	// #6
  4011c8:	adrp	x1, 404000 <ferror@plt+0x2e70>
  4011cc:	add	x1, x1, #0x90
  4011d0:	stp	x21, x22, [sp, #32]
  4011d4:	adrp	x21, 404000 <ferror@plt+0x2e70>
  4011d8:	add	x21, x21, #0x210
  4011dc:	stp	x23, x24, [sp, #48]
  4011e0:	adrp	x22, 404000 <ferror@plt+0x2e70>
  4011e4:	stp	x25, x26, [sp, #64]
  4011e8:	adrp	x23, 404000 <ferror@plt+0x2e70>
  4011ec:	add	x22, x22, #0x338
  4011f0:	stp	x27, x28, [sp, #80]
  4011f4:	bl	401180 <setlocale@plt>
  4011f8:	mov	x0, x21
  4011fc:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401200:	add	x1, x1, #0x1f8
  401204:	bl	401060 <bindtextdomain@plt>
  401208:	add	x23, x23, #0x220
  40120c:	mov	x0, x21
  401210:	adrp	x21, 404000 <ferror@plt+0x2e70>
  401214:	add	x21, x21, #0x2c0
  401218:	adrp	x24, 415000 <ferror@plt+0x13e70>
  40121c:	bl	4010d0 <textdomain@plt>
  401220:	adrp	x0, 401000 <__fpending@plt>
  401224:	add	x0, x0, #0xe40
  401228:	bl	404048 <ferror@plt+0x2eb8>
  40122c:	mov	x3, x22
  401230:	mov	x2, x21
  401234:	mov	x1, x19
  401238:	mov	w0, w20
  40123c:	mov	x4, #0x0                   	// #0
  401240:	bl	4010e0 <getopt_long@plt>
  401244:	cmn	w0, #0x1
  401248:	b.eq	401364 <ferror@plt+0x1d4>  // b.none
  40124c:	cmp	w0, #0x64
  401250:	b.eq	40130c <ferror@plt+0x17c>  // b.none
  401254:	b.gt	4012a8 <ferror@plt+0x118>
  401258:	cmp	w0, #0x56
  40125c:	b.ne	401358 <ferror@plt+0x1c8>  // b.any
  401260:	mov	w2, #0x5                   	// #5
  401264:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401268:	mov	x0, #0x0                   	// #0
  40126c:	add	x1, x1, #0x298
  401270:	bl	401110 <dcgettext@plt>
  401274:	adrp	x1, 415000 <ferror@plt+0x13e70>
  401278:	adrp	x2, 404000 <ferror@plt+0x2e70>
  40127c:	add	x2, x2, #0x2a8
  401280:	ldr	x1, [x1, #360]
  401284:	bl	401130 <printf@plt>
  401288:	mov	w0, #0x0                   	// #0
  40128c:	ldp	x19, x20, [sp, #16]
  401290:	ldp	x21, x22, [sp, #32]
  401294:	ldp	x23, x24, [sp, #48]
  401298:	ldp	x25, x26, [sp, #64]
  40129c:	ldp	x27, x28, [sp, #80]
  4012a0:	ldp	x29, x30, [sp], #128
  4012a4:	ret
  4012a8:	cmp	w0, #0x68
  4012ac:	b.eq	40134c <ferror@plt+0x1bc>  // b.none
  4012b0:	cmp	w0, #0x73
  4012b4:	b.ne	401358 <ferror@plt+0x1c8>  // b.any
  4012b8:	ldr	x25, [x24, #336]
  4012bc:	mov	w2, #0x5                   	// #5
  4012c0:	mov	x1, x23
  4012c4:	mov	x0, #0x0                   	// #0
  4012c8:	bl	401110 <dcgettext@plt>
  4012cc:	mov	x1, x0
  4012d0:	mov	x0, x25
  4012d4:	bl	401ad0 <ferror@plt+0x940>
  4012d8:	fcmpe	d0, #0.0
  4012dc:	adrp	x0, 415000 <ferror@plt+0x13e70>
  4012e0:	str	d0, [x0, #704]
  4012e4:	b.pl	40122c <ferror@plt+0x9c>  // b.nfrst
  4012e8:	adrp	x1, 404000 <ferror@plt+0x2e70>
  4012ec:	add	x1, x1, #0x240
  4012f0:	mov	w2, #0x5                   	// #5
  4012f4:	mov	x0, #0x0                   	// #0
  4012f8:	bl	401110 <dcgettext@plt>
  4012fc:	mov	w1, #0x0                   	// #0
  401300:	mov	x2, x0
  401304:	mov	w0, #0x1                   	// #1
  401308:	bl	400fb0 <error@plt>
  40130c:	ldr	x25, [x24, #336]
  401310:	mov	w2, #0x5                   	// #5
  401314:	mov	x1, x23
  401318:	mov	x0, #0x0                   	// #0
  40131c:	bl	401110 <dcgettext@plt>
  401320:	mov	x1, x0
  401324:	mov	x0, x25
  401328:	bl	401a40 <ferror@plt+0x8b0>
  40132c:	cmp	x0, #0x0
  401330:	b.le	40162c <ferror@plt+0x49c>
  401334:	mov	x1, #0xffffffff            	// #4294967295
  401338:	cmp	x0, x1
  40133c:	b.gt	40161c <ferror@plt+0x48c>
  401340:	adrp	x1, 415000 <ferror@plt+0x13e70>
  401344:	str	w0, [x1, #304]
  401348:	b	40122c <ferror@plt+0x9c>
  40134c:	adrp	x0, 415000 <ferror@plt+0x13e70>
  401350:	ldr	x0, [x0, #352]
  401354:	bl	401790 <ferror@plt+0x600>
  401358:	adrp	x0, 415000 <ferror@plt+0x13e70>
  40135c:	ldr	x0, [x0, #328]
  401360:	bl	401790 <ferror@plt+0x600>
  401364:	adrp	x0, 415000 <ferror@plt+0x13e70>
  401368:	ldr	w0, [x0, #344]
  40136c:	cmp	w0, w20
  401370:	b.ge	401390 <ferror@plt+0x200>  // b.tcont
  401374:	ldr	x0, [x19, w0, sxtw #3]
  401378:	mov	w1, #0x1                   	// #1
  40137c:	bl	401050 <open@plt>
  401380:	cmn	w0, #0x1
  401384:	adrp	x1, 415000 <ferror@plt+0x13e70>
  401388:	str	w0, [x1, #308]
  40138c:	b.eq	40163c <ferror@plt+0x4ac>  // b.none
  401390:	mov	w0, #0x0                   	// #0
  401394:	bl	4018f0 <ferror@plt+0x760>
  401398:	adrp	x0, 415000 <ferror@plt+0x13e70>
  40139c:	add	x0, x0, #0x178
  4013a0:	ldr	d0, [x0, #328]
  4013a4:	fcmp	d0, #0.0
  4013a8:	b.ne	4013bc <ferror@plt+0x22c>  // b.any
  4013ac:	adrp	x1, 415000 <ferror@plt+0x13e70>
  4013b0:	ldr	w1, [x1, #316]
  4013b4:	scvtf	d0, w1
  4013b8:	str	d0, [x0, #328]
  4013bc:	adrp	x1, 415000 <ferror@plt+0x13e70>
  4013c0:	add	x1, x1, #0x178
  4013c4:	add	x0, x1, #0x10
  4013c8:	ldr	d0, [x1, #328]
  4013cc:	str	d0, [x1, #336]
  4013d0:	bl	400fa0 <_setjmp@plt>
  4013d4:	adrp	x21, 415000 <ferror@plt+0x13e70>
  4013d8:	adrp	x1, 401000 <__fpending@plt>
  4013dc:	mov	w0, #0xe                   	// #14
  4013e0:	add	x1, x1, #0x8c8
  4013e4:	bl	401020 <signal@plt>
  4013e8:	adrp	x24, 415000 <ferror@plt+0x13e70>
  4013ec:	ldr	w0, [x21, #304]
  4013f0:	add	x22, sp, #0x78
  4013f4:	add	x21, x21, #0x130
  4013f8:	add	x24, x24, #0x178
  4013fc:	mov	w19, #0x0                   	// #0
  401400:	mov	w20, #0x1                   	// #1
  401404:	bl	401150 <alarm@plt>
  401408:	ldp	d1, d0, [x24, #328]
  40140c:	fcmpe	d0, d1
  401410:	b.pl	40141c <ferror@plt+0x28c>  // b.nfrst
  401414:	fadd	d0, d0, d0
  401418:	str	d0, [x24, #336]
  40141c:	mov	x2, x22
  401420:	add	x0, sp, #0x68
  401424:	add	x1, sp, #0x70
  401428:	bl	400fc0 <loadavg@plt>
  40142c:	ldp	w23, w26, [x21, #8]
  401430:	sxtw	x25, w19
  401434:	ldr	x5, [x24, #8]
  401438:	sub	w7, w26, #0x1
  40143c:	neg	w6, w23
  401440:	mov	w9, w26
  401444:	ldr	d1, [x24, #336]
  401448:	mov	w8, #0x0                   	// #0
  40144c:	mul	w10, w7, w23
  401450:	sxtw	x6, w6
  401454:	add	x4, x5, w19, sxtw
  401458:	mov	w3, #0x2a                  	// #42
  40145c:	fmov	d2, #5.000000000000000000e-01
  401460:	sxtw	x10, w10
  401464:	add	x10, x10, w19, sxtw
  401468:	add	x10, x5, x10
  40146c:	ldr	d0, [sp, #104]
  401470:	cmp	w23, #0x1
  401474:	fmul	d0, d1, d0
  401478:	fcvtzs	w2, d0
  40147c:	b.ne	4014e4 <ferror@plt+0x354>  // b.any
  401480:	sub	w2, w2, w9
  401484:	sxtw	x0, w7
  401488:	b	401498 <ferror@plt+0x308>
  40148c:	strb	w3, [x4, x0]
  401490:	sub	x0, x0, #0x1
  401494:	tbnz	w0, #31, 4014d8 <ferror@plt+0x348>
  401498:	cmn	w2, w0
  40149c:	mov	w1, w0
  4014a0:	b.pl	40148c <ferror@plt+0x2fc>  // b.nfrst
  4014a4:	cbz	w8, 4014ac <ferror@plt+0x31c>
  4014a8:	str	d1, [x24, #336]
  4014ac:	mul	w0, w23, w1
  4014b0:	neg	w27, w23
  4014b4:	mov	w2, #0x20                  	// #32
  4014b8:	sxtw	x27, w27
  4014bc:	add	x0, x25, w0, sxtw
  4014c0:	add	x0, x5, x0
  4014c4:	tbnz	w1, #31, 401510 <ferror@plt+0x380>
  4014c8:	sub	w1, w1, #0x1
  4014cc:	strb	w2, [x0]
  4014d0:	add	x0, x0, x27
  4014d4:	b	4014c4 <ferror@plt+0x334>
  4014d8:	fmul	d1, d1, d2
  4014dc:	mov	w8, w20
  4014e0:	b	40146c <ferror@plt+0x2dc>
  4014e4:	sub	w0, w2, w9
  4014e8:	mov	w1, w7
  4014ec:	mov	x2, x10
  4014f0:	b	401504 <ferror@plt+0x374>
  4014f4:	strb	w3, [x2]
  4014f8:	subs	w1, w1, #0x1
  4014fc:	add	x2, x2, x6
  401500:	b.mi	4014d8 <ferror@plt+0x348>  // b.first
  401504:	cmn	w0, w1
  401508:	b.pl	4014f4 <ferror@plt+0x364>  // b.nfrst
  40150c:	b	4014a4 <ferror@plt+0x314>
  401510:	scvtf	d2, w26
  401514:	mov	w1, #0x1                   	// #1
  401518:	mov	w4, #0x2d                  	// #45
  40151c:	mov	w3, #0x3d                  	// #61
  401520:	b	401540 <ferror@plt+0x3b0>
  401524:	mul	w0, w23, w0
  401528:	add	w1, w1, #0x1
  40152c:	add	x0, x25, w0, sxtw
  401530:	ldrb	w2, [x5, x0]
  401534:	cmp	w2, #0x20
  401538:	csel	w2, w4, w3, eq  // eq = none
  40153c:	strb	w2, [x5, x0]
  401540:	scvtf	d0, w1
  401544:	fmsub	d0, d0, d1, d2
  401548:	fcvtzs	w0, d0
  40154c:	cmp	w0, #0x0
  401550:	ccmp	w26, w0, #0x4, ge  // ge = tcont
  401554:	b.gt	401524 <ferror@plt+0x394>
  401558:	add	w0, w19, #0x1
  40155c:	ldr	w28, [x24]
  401560:	cmp	w23, w0
  401564:	b.eq	4015dc <ferror@plt+0x44c>  // b.none
  401568:	mov	w19, w0
  40156c:	ldp	d0, d1, [sp, #104]
  401570:	sxtw	x1, w28
  401574:	ldr	d2, [sp, #120]
  401578:	mov	x0, x5
  40157c:	adrp	x2, 404000 <ferror@plt+0x2e70>
  401580:	add	x2, x2, #0x2e0
  401584:	bl	401010 <snprintf@plt>
  401588:	ldr	w1, [x24]
  40158c:	cmp	w1, w0
  401590:	b.le	4015a0 <ferror@plt+0x410>
  401594:	ldr	x1, [x24, #8]
  401598:	mov	w2, #0x20                  	// #32
  40159c:	strb	w2, [x1, w0, sxtw]
  4015a0:	ldr	w0, [x21, #4]
  4015a4:	adrp	x1, 404000 <ferror@plt+0x2e70>
  4015a8:	mov	x2, #0x3                   	// #3
  4015ac:	add	x1, x1, #0x2f8
  4015b0:	bl	4010b0 <write@plt>
  4015b4:	tbnz	x0, #63, 40166c <ferror@plt+0x4dc>
  4015b8:	ldr	w2, [x24]
  4015bc:	ldr	w0, [x21, #4]
  4015c0:	ldr	x1, [x24, #8]
  4015c4:	sub	w2, w2, #0x1
  4015c8:	sxtw	x2, w2
  4015cc:	bl	4010b0 <write@plt>
  4015d0:	tbnz	x0, #63, 40166c <ferror@plt+0x4dc>
  4015d4:	bl	400fe0 <pause@plt>
  4015d8:	b	401408 <ferror@plt+0x278>
  4015dc:	sub	w2, w28, #0x1
  4015e0:	sub	w26, w26, #0x2
  4015e4:	add	x1, x5, #0x1
  4015e8:	mov	x0, x5
  4015ec:	sxtw	x2, w2
  4015f0:	bl	400f60 <memmove@plt>
  4015f4:	mov	x5, x0
  4015f8:	mul	w0, w23, w26
  4015fc:	mov	w1, #0x20                  	// #32
  401600:	add	x0, x25, w0, sxtw
  401604:	add	x0, x5, x0
  401608:	tbnz	w26, #31, 40156c <ferror@plt+0x3dc>
  40160c:	sub	w26, w26, #0x1
  401610:	strb	w1, [x0]
  401614:	add	x0, x0, x27
  401618:	b	401608 <ferror@plt+0x478>
  40161c:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401620:	mov	w2, #0x5                   	// #5
  401624:	add	x1, x1, #0x280
  401628:	b	4012f4 <ferror@plt+0x164>
  40162c:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401630:	mov	w2, #0x5                   	// #5
  401634:	add	x1, x1, #0x260
  401638:	b	4012f4 <ferror@plt+0x164>
  40163c:	bl	401140 <__errno_location@plt>
  401640:	mov	x3, x0
  401644:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401648:	add	x1, x1, #0x2c8
  40164c:	mov	w2, #0x5                   	// #5
  401650:	ldr	w19, [x3]
  401654:	mov	x0, #0x0                   	// #0
  401658:	bl	401110 <dcgettext@plt>
  40165c:	mov	x2, x0
  401660:	mov	w1, w19
  401664:	mov	w0, #0x1                   	// #1
  401668:	bl	400fb0 <error@plt>
  40166c:	bl	401140 <__errno_location@plt>
  401670:	mov	x3, x0
  401674:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401678:	mov	w2, #0x5                   	// #5
  40167c:	add	x1, x1, #0x300
  401680:	b	401650 <ferror@plt+0x4c0>
  401684:	mov	x29, #0x0                   	// #0
  401688:	mov	x30, #0x0                   	// #0
  40168c:	mov	x5, x0
  401690:	ldr	x1, [sp]
  401694:	add	x2, sp, #0x8
  401698:	mov	x6, sp
  40169c:	movz	x0, #0x0, lsl #48
  4016a0:	movk	x0, #0x0, lsl #32
  4016a4:	movk	x0, #0x40, lsl #16
  4016a8:	movk	x0, #0x11a0
  4016ac:	movz	x3, #0x0, lsl #48
  4016b0:	movk	x3, #0x0, lsl #32
  4016b4:	movk	x3, #0x40, lsl #16
  4016b8:	movk	x3, #0x3fc0
  4016bc:	movz	x4, #0x0, lsl #48
  4016c0:	movk	x4, #0x0, lsl #32
  4016c4:	movk	x4, #0x40, lsl #16
  4016c8:	movk	x4, #0x4040
  4016cc:	bl	401070 <__libc_start_main@plt>
  4016d0:	bl	4010c0 <abort@plt>
  4016d4:	adrp	x0, 414000 <ferror@plt+0x12e70>
  4016d8:	ldr	x0, [x0, #4064]
  4016dc:	cbz	x0, 4016e4 <ferror@plt+0x554>
  4016e0:	b	4010a0 <__gmon_start__@plt>
  4016e4:	ret
  4016e8:	adrp	x0, 415000 <ferror@plt+0x13e70>
  4016ec:	add	x0, x0, #0x140
  4016f0:	adrp	x1, 415000 <ferror@plt+0x13e70>
  4016f4:	add	x1, x1, #0x140
  4016f8:	cmp	x1, x0
  4016fc:	b.eq	401714 <ferror@plt+0x584>  // b.none
  401700:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401704:	ldr	x1, [x1, #120]
  401708:	cbz	x1, 401714 <ferror@plt+0x584>
  40170c:	mov	x16, x1
  401710:	br	x16
  401714:	ret
  401718:	adrp	x0, 415000 <ferror@plt+0x13e70>
  40171c:	add	x0, x0, #0x140
  401720:	adrp	x1, 415000 <ferror@plt+0x13e70>
  401724:	add	x1, x1, #0x140
  401728:	sub	x1, x1, x0
  40172c:	lsr	x2, x1, #63
  401730:	add	x1, x2, x1, asr #3
  401734:	cmp	xzr, x1, asr #1
  401738:	asr	x1, x1, #1
  40173c:	b.eq	401754 <ferror@plt+0x5c4>  // b.none
  401740:	adrp	x2, 404000 <ferror@plt+0x2e70>
  401744:	ldr	x2, [x2, #128]
  401748:	cbz	x2, 401754 <ferror@plt+0x5c4>
  40174c:	mov	x16, x2
  401750:	br	x16
  401754:	ret
  401758:	stp	x29, x30, [sp, #-32]!
  40175c:	mov	x29, sp
  401760:	str	x19, [sp, #16]
  401764:	adrp	x19, 415000 <ferror@plt+0x13e70>
  401768:	ldrb	w0, [x19, #368]
  40176c:	cbnz	w0, 40177c <ferror@plt+0x5ec>
  401770:	bl	4016e8 <ferror@plt+0x558>
  401774:	mov	w0, #0x1                   	// #1
  401778:	strb	w0, [x19, #368]
  40177c:	ldr	x19, [sp, #16]
  401780:	ldp	x29, x30, [sp], #32
  401784:	ret
  401788:	b	401718 <ferror@plt+0x588>
  40178c:	nop
  401790:	stp	x29, x30, [sp, #-32]!
  401794:	mov	w2, #0x5                   	// #5
  401798:	adrp	x1, 404000 <ferror@plt+0x2e70>
  40179c:	mov	x29, sp
  4017a0:	add	x1, x1, #0x88
  4017a4:	str	x19, [sp, #16]
  4017a8:	mov	x19, x0
  4017ac:	mov	x0, #0x0                   	// #0
  4017b0:	bl	401110 <dcgettext@plt>
  4017b4:	mov	x1, x19
  4017b8:	bl	400f80 <fputs@plt>
  4017bc:	mov	w2, #0x5                   	// #5
  4017c0:	adrp	x1, 404000 <ferror@plt+0x2e70>
  4017c4:	mov	x0, #0x0                   	// #0
  4017c8:	add	x1, x1, #0x98
  4017cc:	bl	401110 <dcgettext@plt>
  4017d0:	mov	x1, x0
  4017d4:	adrp	x2, 415000 <ferror@plt+0x13e70>
  4017d8:	mov	x0, x19
  4017dc:	ldr	x2, [x2, #360]
  4017e0:	bl	401160 <fprintf@plt>
  4017e4:	mov	w2, #0x5                   	// #5
  4017e8:	adrp	x1, 404000 <ferror@plt+0x2e70>
  4017ec:	mov	x0, #0x0                   	// #0
  4017f0:	add	x1, x1, #0xb0
  4017f4:	bl	401110 <dcgettext@plt>
  4017f8:	mov	x1, x19
  4017fc:	bl	400f80 <fputs@plt>
  401800:	mov	w2, #0x5                   	// #5
  401804:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401808:	mov	x0, #0x0                   	// #0
  40180c:	add	x1, x1, #0xc0
  401810:	bl	401110 <dcgettext@plt>
  401814:	mov	x1, x19
  401818:	bl	400f80 <fputs@plt>
  40181c:	mov	w2, #0x5                   	// #5
  401820:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401824:	mov	x0, #0x0                   	// #0
  401828:	add	x1, x1, #0xf0
  40182c:	bl	401110 <dcgettext@plt>
  401830:	mov	x1, x19
  401834:	bl	400f80 <fputs@plt>
  401838:	mov	w2, #0x5                   	// #5
  40183c:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401840:	mov	x0, #0x0                   	// #0
  401844:	add	x1, x1, #0x118
  401848:	bl	401110 <dcgettext@plt>
  40184c:	mov	x1, x19
  401850:	bl	400f80 <fputs@plt>
  401854:	mov	w2, #0x5                   	// #5
  401858:	adrp	x1, 404000 <ferror@plt+0x2e70>
  40185c:	mov	x0, #0x0                   	// #0
  401860:	add	x1, x1, #0x120
  401864:	bl	401110 <dcgettext@plt>
  401868:	mov	x1, x19
  40186c:	bl	400f80 <fputs@plt>
  401870:	mov	w2, #0x5                   	// #5
  401874:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401878:	mov	x0, #0x0                   	// #0
  40187c:	add	x1, x1, #0x150
  401880:	bl	401110 <dcgettext@plt>
  401884:	mov	x1, x19
  401888:	bl	400f80 <fputs@plt>
  40188c:	mov	w2, #0x5                   	// #5
  401890:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401894:	mov	x0, #0x0                   	// #0
  401898:	add	x1, x1, #0x188
  40189c:	bl	401110 <dcgettext@plt>
  4018a0:	mov	x1, x0
  4018a4:	adrp	x2, 404000 <ferror@plt+0x2e70>
  4018a8:	mov	x0, x19
  4018ac:	add	x2, x2, #0x1a8
  4018b0:	bl	401160 <fprintf@plt>
  4018b4:	adrp	x0, 415000 <ferror@plt+0x13e70>
  4018b8:	ldr	x0, [x0, #328]
  4018bc:	cmp	x0, x19
  4018c0:	cset	w0, eq  // eq = none
  4018c4:	bl	400f90 <exit@plt>
  4018c8:	stp	x29, x30, [sp, #-16]!
  4018cc:	adrp	x1, 401000 <__fpending@plt>
  4018d0:	mov	w0, #0xe                   	// #14
  4018d4:	mov	x29, sp
  4018d8:	add	x1, x1, #0x8c8
  4018dc:	bl	401020 <signal@plt>
  4018e0:	ldp	x29, x30, [sp], #16
  4018e4:	adrp	x0, 415000 <ferror@plt+0x13e70>
  4018e8:	ldr	w0, [x0, #304]
  4018ec:	b	401150 <alarm@plt>
  4018f0:	stp	x29, x30, [sp, #-64]!
  4018f4:	adrp	x1, 401000 <__fpending@plt>
  4018f8:	add	x1, x1, #0x8f0
  4018fc:	mov	x29, sp
  401900:	stp	x19, x20, [sp, #16]
  401904:	adrp	x20, 415000 <ferror@plt+0x13e70>
  401908:	add	x20, x20, #0x130
  40190c:	stp	x21, x22, [sp, #32]
  401910:	mov	w21, w0
  401914:	mov	w0, #0x1c                  	// #28
  401918:	bl	401020 <signal@plt>
  40191c:	ldr	w0, [x20, #4]
  401920:	add	x2, sp, #0x38
  401924:	mov	x1, #0x5413                	// #21523
  401928:	bl	401170 <ioctl@plt>
  40192c:	cmn	w0, #0x1
  401930:	b.eq	4019e0 <ferror@plt+0x850>  // b.none
  401934:	ldrh	w19, [sp, #58]
  401938:	cbnz	w19, 4019d8 <ferror@plt+0x848>
  40193c:	ldr	w19, [x20, #8]
  401940:	ldrh	w0, [sp, #56]
  401944:	cbz	w0, 40194c <ferror@plt+0x7bc>
  401948:	str	w0, [x20, #12]
  40194c:	sub	w1, w19, #0x2
  401950:	mov	w0, #0x7ffffffc            	// #2147483644
  401954:	cmp	w1, w0
  401958:	b.hi	401a10 <ferror@plt+0x880>  // b.pmore
  40195c:	ldr	w2, [x20, #12]
  401960:	cmp	w2, #0x1
  401964:	b.le	401a10 <ferror@plt+0x880>
  401968:	mov	w0, #0x7fffffff            	// #2147483647
  40196c:	sdiv	w0, w0, w19
  401970:	cmp	w2, w0
  401974:	b.ge	401a10 <ferror@plt+0x880>  // b.tcont
  401978:	adrp	x0, 415000 <ferror@plt+0x13e70>
  40197c:	add	x20, x0, #0x178
  401980:	mul	w19, w2, w19
  401984:	str	w19, [x0, #376]
  401988:	ldr	x0, [x20, #8]
  40198c:	sxtw	x22, w19
  401990:	cbz	x0, 4019e8 <ferror@plt+0x858>
  401994:	mov	x1, x22
  401998:	bl	401090 <realloc@plt>
  40199c:	mov	x3, x0
  4019a0:	cbz	x0, 4019f8 <ferror@plt+0x868>
  4019a4:	sub	w2, w19, #0x1
  4019a8:	mov	x0, x3
  4019ac:	mov	w1, #0x20                  	// #32
  4019b0:	str	x3, [x20, #8]
  4019b4:	sxtw	x2, w2
  4019b8:	bl	401080 <memset@plt>
  4019bc:	add	x3, x0, x22
  4019c0:	sturb	wzr, [x3, #-2]
  4019c4:	cbnz	w21, 401a34 <ferror@plt+0x8a4>
  4019c8:	ldp	x19, x20, [sp, #16]
  4019cc:	ldp	x21, x22, [sp, #32]
  4019d0:	ldp	x29, x30, [sp], #64
  4019d4:	ret
  4019d8:	str	w19, [x20, #8]
  4019dc:	b	401940 <ferror@plt+0x7b0>
  4019e0:	ldr	w19, [x20, #8]
  4019e4:	b	40194c <ferror@plt+0x7bc>
  4019e8:	mov	x0, x22
  4019ec:	bl	401040 <malloc@plt>
  4019f0:	mov	x3, x0
  4019f4:	cbnz	x0, 4019a4 <ferror@plt+0x814>
  4019f8:	adrp	x2, 404000 <ferror@plt+0x2e70>
  4019fc:	mov	x3, x22
  401a00:	add	x2, x2, #0x1d8
  401a04:	mov	w1, #0x0                   	// #0
  401a08:	mov	w0, #0x1                   	// #1
  401a0c:	bl	400fb0 <error@plt>
  401a10:	mov	w2, #0x5                   	// #5
  401a14:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401a18:	mov	x0, #0x0                   	// #0
  401a1c:	add	x1, x1, #0x1b8
  401a20:	bl	401110 <dcgettext@plt>
  401a24:	mov	x2, x0
  401a28:	mov	w1, #0x0                   	// #0
  401a2c:	mov	w0, #0x1                   	// #1
  401a30:	bl	400fb0 <error@plt>
  401a34:	add	x0, x20, #0x10
  401a38:	mov	w1, #0x1                   	// #1
  401a3c:	bl	401120 <longjmp@plt>
  401a40:	stp	x29, x30, [sp, #-64]!
  401a44:	mov	x29, sp
  401a48:	stp	x19, x20, [sp, #16]
  401a4c:	mov	x19, x0
  401a50:	str	x21, [sp, #32]
  401a54:	mov	x21, x1
  401a58:	str	xzr, [sp, #56]
  401a5c:	bl	401140 <__errno_location@plt>
  401a60:	mov	x20, x0
  401a64:	cbz	x19, 401ab4 <ferror@plt+0x924>
  401a68:	ldrb	w0, [x19]
  401a6c:	cbz	w0, 401ab4 <ferror@plt+0x924>
  401a70:	str	wzr, [x20]
  401a74:	add	x1, sp, #0x38
  401a78:	mov	x0, x19
  401a7c:	mov	w2, #0xa                   	// #10
  401a80:	bl	401100 <strtol@plt>
  401a84:	ldr	w1, [x20]
  401a88:	cbnz	w1, 401ab8 <ferror@plt+0x928>
  401a8c:	ldr	x2, [sp, #56]
  401a90:	cmp	x2, #0x0
  401a94:	ccmp	x2, x19, #0x4, ne  // ne = any
  401a98:	b.eq	401ab8 <ferror@plt+0x928>  // b.none
  401a9c:	ldrb	w2, [x2]
  401aa0:	cbnz	w2, 401ab8 <ferror@plt+0x928>
  401aa4:	ldp	x19, x20, [sp, #16]
  401aa8:	ldr	x21, [sp, #32]
  401aac:	ldp	x29, x30, [sp], #64
  401ab0:	ret
  401ab4:	ldr	w1, [x20]
  401ab8:	adrp	x2, 404000 <ferror@plt+0x2e70>
  401abc:	mov	x4, x19
  401ac0:	mov	x3, x21
  401ac4:	add	x2, x2, #0x3d8
  401ac8:	mov	w0, #0x1                   	// #1
  401acc:	bl	400fb0 <error@plt>
  401ad0:	stp	x29, x30, [sp, #-64]!
  401ad4:	mov	x29, sp
  401ad8:	stp	x19, x20, [sp, #16]
  401adc:	mov	x19, x0
  401ae0:	str	x21, [sp, #32]
  401ae4:	mov	x21, x1
  401ae8:	str	xzr, [sp, #56]
  401aec:	bl	401140 <__errno_location@plt>
  401af0:	mov	x20, x0
  401af4:	cbz	x19, 401b40 <ferror@plt+0x9b0>
  401af8:	ldrb	w0, [x19]
  401afc:	cbz	w0, 401b40 <ferror@plt+0x9b0>
  401b00:	str	wzr, [x20]
  401b04:	add	x1, sp, #0x38
  401b08:	mov	x0, x19
  401b0c:	bl	400fd0 <strtod@plt>
  401b10:	ldr	w1, [x20]
  401b14:	cbnz	w1, 401b44 <ferror@plt+0x9b4>
  401b18:	ldr	x0, [sp, #56]
  401b1c:	cmp	x0, #0x0
  401b20:	ccmp	x0, x19, #0x4, ne  // ne = any
  401b24:	b.eq	401b44 <ferror@plt+0x9b4>  // b.none
  401b28:	ldrb	w0, [x0]
  401b2c:	cbnz	w0, 401b44 <ferror@plt+0x9b4>
  401b30:	ldp	x19, x20, [sp, #16]
  401b34:	ldr	x21, [sp, #32]
  401b38:	ldp	x29, x30, [sp], #64
  401b3c:	ret
  401b40:	ldr	w1, [x20]
  401b44:	adrp	x2, 404000 <ferror@plt+0x2e70>
  401b48:	mov	x4, x19
  401b4c:	mov	x3, x21
  401b50:	add	x2, x2, #0x3d8
  401b54:	mov	w0, #0x1                   	// #1
  401b58:	bl	400fb0 <error@plt>
  401b5c:	nop
  401b60:	stp	x29, x30, [sp, #-112]!
  401b64:	mov	x29, sp
  401b68:	stp	x19, x20, [sp, #16]
  401b6c:	stp	x21, x22, [sp, #32]
  401b70:	stp	x23, x24, [sp, #48]
  401b74:	mov	x24, x0
  401b78:	stp	x25, x26, [sp, #64]
  401b7c:	mov	x25, x1
  401b80:	cbz	x0, 401d74 <ferror@plt+0xbe4>
  401b84:	ldrb	w21, [x0]
  401b88:	cbz	w21, 401d74 <ferror@plt+0xbe4>
  401b8c:	bl	4010f0 <__ctype_b_loc@plt>
  401b90:	mov	x22, x24
  401b94:	ldr	x23, [x0]
  401b98:	ubfiz	x1, x21, #1, #8
  401b9c:	ldrh	w0, [x23, x1]
  401ba0:	tbz	w0, #13, 401bb8 <ferror@plt+0xa28>
  401ba4:	nop
  401ba8:	ldrb	w21, [x22, #1]!
  401bac:	ubfiz	x0, x21, #1, #8
  401bb0:	ldrh	w0, [x23, x0]
  401bb4:	tbnz	w0, #13, 401ba8 <ferror@plt+0xa18>
  401bb8:	cmp	w21, #0x2d
  401bbc:	b.eq	401d5c <ferror@plt+0xbcc>  // b.none
  401bc0:	cmp	w21, #0x2b
  401bc4:	mov	w26, #0x0                   	// #0
  401bc8:	b.eq	401d3c <ferror@plt+0xbac>  // b.none
  401bcc:	tbz	w0, #11, 401d50 <ferror@plt+0xbc0>
  401bd0:	adrp	x0, 404000 <ferror@plt+0x2e70>
  401bd4:	add	x0, x0, #0x3f0
  401bd8:	mov	x19, x22
  401bdc:	ldr	q2, [x0]
  401be0:	adrp	x0, 404000 <ferror@plt+0x2e70>
  401be4:	add	x0, x0, #0x400
  401be8:	mov	v0.16b, v2.16b
  401bec:	ldr	q1, [x0]
  401bf0:	bl	4033c8 <ferror@plt+0x2238>
  401bf4:	mov	v2.16b, v0.16b
  401bf8:	ldrb	w0, [x19, #1]!
  401bfc:	ldrh	w0, [x23, x0, lsl #1]
  401c00:	tbnz	w0, #11, 401be0 <ferror@plt+0xa50>
  401c04:	mov	x20, #0x0                   	// #0
  401c08:	mov	x19, #0x0                   	// #0
  401c0c:	nop
  401c10:	sub	w0, w21, #0x30
  401c14:	str	q2, [sp, #80]
  401c18:	bl	403bb0 <ferror@plt+0x2a20>
  401c1c:	ldr	q2, [sp, #80]
  401c20:	mov	v1.16b, v2.16b
  401c24:	str	q2, [sp, #96]
  401c28:	bl	4033c8 <ferror@plt+0x2238>
  401c2c:	stp	x20, x19, [sp, #80]
  401c30:	mov	v1.16b, v0.16b
  401c34:	ldr	q0, [sp, #80]
  401c38:	bl	401f70 <ferror@plt+0xde0>
  401c3c:	str	q0, [sp, #80]
  401c40:	adrp	x0, 404000 <ferror@plt+0x2e70>
  401c44:	add	x0, x0, #0x400
  401c48:	ldr	q2, [sp, #96]
  401c4c:	ldr	q1, [x0]
  401c50:	mov	v0.16b, v2.16b
  401c54:	bl	402a98 <ferror@plt+0x1908>
  401c58:	ldrb	w21, [x22, #1]!
  401c5c:	mov	v2.16b, v0.16b
  401c60:	ldp	x20, x19, [sp, #80]
  401c64:	ubfiz	x0, x21, #1, #8
  401c68:	ldrh	w0, [x23, x0]
  401c6c:	tbnz	w0, #11, 401c10 <ferror@plt+0xa80>
  401c70:	cbz	w21, 401d0c <ferror@plt+0xb7c>
  401c74:	and	w21, w21, #0xfffffffd
  401c78:	and	w21, w21, #0xff
  401c7c:	cmp	w21, #0x2c
  401c80:	b.ne	401d98 <ferror@plt+0xc08>  // b.any
  401c84:	ldrb	w0, [x22, #1]
  401c88:	add	x22, x22, #0x1
  401c8c:	ubfiz	x1, x0, #1, #8
  401c90:	ldrh	w1, [x23, x1]
  401c94:	tbz	w1, #11, 401d08 <ferror@plt+0xb78>
  401c98:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401c9c:	add	x1, x1, #0x3f0
  401ca0:	ldr	q2, [x1]
  401ca4:	nop
  401ca8:	sub	w0, w0, #0x30
  401cac:	str	q2, [sp, #80]
  401cb0:	bl	403bb0 <ferror@plt+0x2a20>
  401cb4:	ldr	q2, [sp, #80]
  401cb8:	mov	v1.16b, v2.16b
  401cbc:	str	q2, [sp, #96]
  401cc0:	bl	4033c8 <ferror@plt+0x2238>
  401cc4:	stp	x20, x19, [sp, #80]
  401cc8:	mov	v1.16b, v0.16b
  401ccc:	ldr	q0, [sp, #80]
  401cd0:	bl	401f70 <ferror@plt+0xde0>
  401cd4:	str	q0, [sp, #80]
  401cd8:	adrp	x0, 404000 <ferror@plt+0x2e70>
  401cdc:	add	x0, x0, #0x400
  401ce0:	ldr	q2, [sp, #96]
  401ce4:	ldr	q1, [x0]
  401ce8:	mov	v0.16b, v2.16b
  401cec:	bl	402a98 <ferror@plt+0x1908>
  401cf0:	mov	v2.16b, v0.16b
  401cf4:	ldrb	w0, [x22, #1]!
  401cf8:	ldp	x20, x19, [sp, #80]
  401cfc:	ubfiz	x1, x0, #1, #8
  401d00:	ldrh	w1, [x23, x1]
  401d04:	tbnz	w1, #11, 401ca8 <ferror@plt+0xb18>
  401d08:	cbnz	w0, 401d74 <ferror@plt+0xbe4>
  401d0c:	cmp	w26, #0x0
  401d10:	eor	x0, x19, #0x8000000000000000
  401d14:	csel	x0, x0, x19, ne  // ne = any
  401d18:	stp	x20, x0, [sp, #80]
  401d1c:	ldr	q0, [sp, #80]
  401d20:	bl	403c30 <ferror@plt+0x2aa0>
  401d24:	ldp	x19, x20, [sp, #16]
  401d28:	ldp	x21, x22, [sp, #32]
  401d2c:	ldp	x23, x24, [sp, #48]
  401d30:	ldp	x25, x26, [sp, #64]
  401d34:	ldp	x29, x30, [sp], #112
  401d38:	ret
  401d3c:	ldrb	w21, [x22, #1]
  401d40:	add	x22, x22, #0x1
  401d44:	ubfiz	x0, x21, #1, #8
  401d48:	ldrh	w0, [x23, x0]
  401d4c:	tbnz	w0, #11, 401bd0 <ferror@plt+0xa40>
  401d50:	mov	x20, #0x0                   	// #0
  401d54:	mov	x19, #0x0                   	// #0
  401d58:	b	401c70 <ferror@plt+0xae0>
  401d5c:	ldrb	w21, [x22, #1]
  401d60:	mov	w26, #0x1                   	// #1
  401d64:	add	x22, x22, #0x1
  401d68:	ubfiz	x0, x21, #1, #8
  401d6c:	ldrh	w0, [x23, x0]
  401d70:	b	401bcc <ferror@plt+0xa3c>
  401d74:	bl	401140 <__errno_location@plt>
  401d78:	mov	x1, x0
  401d7c:	adrp	x2, 404000 <ferror@plt+0x2e70>
  401d80:	mov	x4, x24
  401d84:	mov	x3, x25
  401d88:	add	x2, x2, #0x3d8
  401d8c:	ldr	w1, [x1]
  401d90:	mov	w0, #0x1                   	// #1
  401d94:	bl	400fb0 <error@plt>
  401d98:	adrp	x2, 404000 <ferror@plt+0x2e70>
  401d9c:	mov	x4, x24
  401da0:	mov	x3, x25
  401da4:	add	x2, x2, #0x3d8
  401da8:	mov	w1, #0x16                  	// #22
  401dac:	mov	w0, #0x1                   	// #1
  401db0:	bl	400fb0 <error@plt>
  401db4:	nop
  401db8:	stp	x29, x30, [sp, #-32]!
  401dbc:	mov	x29, sp
  401dc0:	stp	x19, x20, [sp, #16]
  401dc4:	mov	x19, x0
  401dc8:	bl	401000 <__fpending@plt>
  401dcc:	mov	x20, x0
  401dd0:	mov	x0, x19
  401dd4:	bl	401190 <ferror@plt>
  401dd8:	mov	w1, w0
  401ddc:	mov	x0, x19
  401de0:	mov	w19, w1
  401de4:	bl	401030 <fclose@plt>
  401de8:	cbnz	w19, 401e10 <ferror@plt+0xc80>
  401dec:	cbz	w0, 401e04 <ferror@plt+0xc74>
  401df0:	cbnz	x20, 401e34 <ferror@plt+0xca4>
  401df4:	bl	401140 <__errno_location@plt>
  401df8:	ldr	w0, [x0]
  401dfc:	cmp	w0, #0x9
  401e00:	csetm	w0, ne  // ne = any
  401e04:	ldp	x19, x20, [sp, #16]
  401e08:	ldp	x29, x30, [sp], #32
  401e0c:	ret
  401e10:	cbnz	w0, 401e34 <ferror@plt+0xca4>
  401e14:	bl	401140 <__errno_location@plt>
  401e18:	mov	x1, x0
  401e1c:	mov	w0, #0xffffffff            	// #-1
  401e20:	ldr	w2, [x1]
  401e24:	cmp	w2, #0x20
  401e28:	b.eq	401e04 <ferror@plt+0xc74>  // b.none
  401e2c:	str	wzr, [x1]
  401e30:	b	401e04 <ferror@plt+0xc74>
  401e34:	mov	w0, #0xffffffff            	// #-1
  401e38:	b	401e04 <ferror@plt+0xc74>
  401e3c:	nop
  401e40:	stp	x29, x30, [sp, #-48]!
  401e44:	adrp	x0, 415000 <ferror@plt+0x13e70>
  401e48:	mov	x29, sp
  401e4c:	stp	x19, x20, [sp, #16]
  401e50:	ldr	x19, [x0, #352]
  401e54:	str	x21, [sp, #32]
  401e58:	mov	x0, x19
  401e5c:	bl	401000 <__fpending@plt>
  401e60:	mov	x21, x0
  401e64:	mov	x0, x19
  401e68:	bl	401190 <ferror@plt>
  401e6c:	mov	w20, w0
  401e70:	mov	x0, x19
  401e74:	bl	401030 <fclose@plt>
  401e78:	mov	w19, w0
  401e7c:	cbnz	w20, 401f4c <ferror@plt+0xdbc>
  401e80:	cbz	w0, 401e9c <ferror@plt+0xd0c>
  401e84:	bl	401140 <__errno_location@plt>
  401e88:	mov	x20, x0
  401e8c:	ldr	w0, [x0]
  401e90:	cbnz	x21, 401ef0 <ferror@plt+0xd60>
  401e94:	cmp	w0, #0x9
  401e98:	b.ne	401ef0 <ferror@plt+0xd60>  // b.any
  401e9c:	adrp	x0, 415000 <ferror@plt+0x13e70>
  401ea0:	ldr	x20, [x0, #328]
  401ea4:	mov	x0, x20
  401ea8:	bl	401000 <__fpending@plt>
  401eac:	mov	x21, x0
  401eb0:	mov	x0, x20
  401eb4:	bl	401190 <ferror@plt>
  401eb8:	mov	w19, w0
  401ebc:	mov	x0, x20
  401ec0:	bl	401030 <fclose@plt>
  401ec4:	cbnz	w19, 401f2c <ferror@plt+0xd9c>
  401ec8:	cbz	w0, 401ee0 <ferror@plt+0xd50>
  401ecc:	cbnz	x21, 401f44 <ferror@plt+0xdb4>
  401ed0:	bl	401140 <__errno_location@plt>
  401ed4:	ldr	w0, [x0]
  401ed8:	cmp	w0, #0x9
  401edc:	b.ne	401f44 <ferror@plt+0xdb4>  // b.any
  401ee0:	ldp	x19, x20, [sp, #16]
  401ee4:	ldr	x21, [sp, #32]
  401ee8:	ldp	x29, x30, [sp], #48
  401eec:	ret
  401ef0:	cmp	w0, #0x20
  401ef4:	b.eq	401e9c <ferror@plt+0xd0c>  // b.none
  401ef8:	mov	w2, #0x5                   	// #5
  401efc:	adrp	x1, 404000 <ferror@plt+0x2e70>
  401f00:	mov	x0, #0x0                   	// #0
  401f04:	add	x1, x1, #0x410
  401f08:	bl	401110 <dcgettext@plt>
  401f0c:	mov	x3, x0
  401f10:	ldr	w1, [x20]
  401f14:	adrp	x2, 404000 <ferror@plt+0x2e70>
  401f18:	add	x2, x2, #0x420
  401f1c:	mov	w0, #0x0                   	// #0
  401f20:	bl	400fb0 <error@plt>
  401f24:	mov	w0, #0x1                   	// #1
  401f28:	bl	400f70 <_exit@plt>
  401f2c:	cbnz	w0, 401f44 <ferror@plt+0xdb4>
  401f30:	bl	401140 <__errno_location@plt>
  401f34:	ldr	w1, [x0]
  401f38:	cmp	w1, #0x20
  401f3c:	b.eq	401f44 <ferror@plt+0xdb4>  // b.none
  401f40:	str	wzr, [x0]
  401f44:	mov	w0, #0x1                   	// #1
  401f48:	bl	400f70 <_exit@plt>
  401f4c:	bl	401140 <__errno_location@plt>
  401f50:	mov	x20, x0
  401f54:	ldr	w0, [x0]
  401f58:	cbnz	w19, 401ef0 <ferror@plt+0xd60>
  401f5c:	cmp	w0, #0x20
  401f60:	b.eq	401e9c <ferror@plt+0xd0c>  // b.none
  401f64:	str	wzr, [x20]
  401f68:	b	401ef8 <ferror@plt+0xd68>
  401f6c:	nop
  401f70:	stp	x29, x30, [sp, #-48]!
  401f74:	mov	x29, sp
  401f78:	str	q0, [sp, #16]
  401f7c:	str	q1, [sp, #32]
  401f80:	ldp	x4, x1, [sp, #16]
  401f84:	ldp	x0, x3, [sp, #32]
  401f88:	mrs	x15, fpcr
  401f8c:	mov	x11, x0
  401f90:	ubfiz	x0, x3, #3, #48
  401f94:	lsr	x6, x1, #63
  401f98:	lsr	x5, x3, #63
  401f9c:	ubfiz	x2, x1, #3, #48
  401fa0:	orr	x9, x0, x11, lsr #61
  401fa4:	ubfx	x7, x1, #48, #15
  401fa8:	ubfx	x0, x3, #48, #15
  401fac:	mov	x12, x6
  401fb0:	and	w10, w6, #0xff
  401fb4:	mov	x16, x6
  401fb8:	cmp	x6, x5
  401fbc:	orr	x2, x2, x4, lsr #61
  401fc0:	and	w6, w5, #0xff
  401fc4:	mov	x1, x7
  401fc8:	lsl	x8, x4, #3
  401fcc:	mov	x3, x0
  401fd0:	lsl	x13, x11, #3
  401fd4:	b.eq	402180 <ferror@plt+0xff0>  // b.none
  401fd8:	sub	w0, w7, w0
  401fdc:	cmp	w0, #0x0
  401fe0:	b.le	40212c <ferror@plt+0xf9c>
  401fe4:	cbz	x3, 4021e0 <ferror@plt+0x1050>
  401fe8:	orr	x9, x9, #0x8000000000000
  401fec:	mov	x3, #0x7fff                	// #32767
  401ff0:	cmp	x1, x3
  401ff4:	b.eq	4023e4 <ferror@plt+0x1254>  // b.none
  401ff8:	cmp	w0, #0x74
  401ffc:	b.gt	402468 <ferror@plt+0x12d8>
  402000:	cmp	w0, #0x3f
  402004:	b.gt	4025c8 <ferror@plt+0x1438>
  402008:	mov	w3, #0x40                  	// #64
  40200c:	sub	w3, w3, w0
  402010:	lsr	x5, x13, x0
  402014:	lsl	x13, x13, x3
  402018:	cmp	x13, #0x0
  40201c:	cset	x4, ne  // ne = any
  402020:	lsl	x3, x9, x3
  402024:	orr	x3, x3, x5
  402028:	lsr	x0, x9, x0
  40202c:	orr	x3, x3, x4
  402030:	sub	x2, x2, x0
  402034:	subs	x8, x8, x3
  402038:	sbc	x2, x2, xzr
  40203c:	and	x3, x2, #0x7ffffffffffff
  402040:	tbz	x2, #51, 402220 <ferror@plt+0x1090>
  402044:	cbz	x3, 40244c <ferror@plt+0x12bc>
  402048:	clz	x0, x3
  40204c:	sub	w0, w0, #0xc
  402050:	neg	w2, w0
  402054:	lsl	x4, x3, x0
  402058:	lsl	x3, x8, x0
  40205c:	lsr	x8, x8, x2
  402060:	orr	x2, x8, x4
  402064:	cmp	x1, w0, sxtw
  402068:	sxtw	x4, w0
  40206c:	b.gt	40242c <ferror@plt+0x129c>
  402070:	sub	w1, w0, w1
  402074:	add	w0, w1, #0x1
  402078:	cmp	w0, #0x3f
  40207c:	b.gt	402590 <ferror@plt+0x1400>
  402080:	mov	w1, #0x40                  	// #64
  402084:	sub	w1, w1, w0
  402088:	lsr	x4, x3, x0
  40208c:	lsl	x3, x3, x1
  402090:	cmp	x3, #0x0
  402094:	lsl	x8, x2, x1
  402098:	cset	x1, ne  // ne = any
  40209c:	orr	x8, x8, x4
  4020a0:	lsr	x2, x2, x0
  4020a4:	orr	x8, x8, x1
  4020a8:	orr	x5, x8, x2
  4020ac:	cbz	x5, 402234 <ferror@plt+0x10a4>
  4020b0:	and	x3, x8, #0x7
  4020b4:	mov	x1, #0x0                   	// #0
  4020b8:	mov	w7, #0x1                   	// #1
  4020bc:	cbz	x3, 402478 <ferror@plt+0x12e8>
  4020c0:	and	x3, x15, #0xc00000
  4020c4:	cmp	x3, #0x400, lsl #12
  4020c8:	b.eq	4023bc <ferror@plt+0x122c>  // b.none
  4020cc:	cmp	x3, #0x800, lsl #12
  4020d0:	b.eq	40239c <ferror@plt+0x120c>  // b.none
  4020d4:	cbz	x3, 4023c8 <ferror@plt+0x1238>
  4020d8:	and	x3, x2, #0x8000000000000
  4020dc:	mov	w0, #0x10                  	// #16
  4020e0:	cbz	w7, 4020e8 <ferror@plt+0xf58>
  4020e4:	orr	w0, w0, #0x8
  4020e8:	cbz	x3, 402400 <ferror@plt+0x1270>
  4020ec:	add	x1, x1, #0x1
  4020f0:	mov	x3, #0x7fff                	// #32767
  4020f4:	cmp	x1, x3
  4020f8:	b.eq	4022e4 <ferror@plt+0x1154>  // b.none
  4020fc:	ubfx	x5, x2, #3, #48
  402100:	extr	x8, x2, x8, #3
  402104:	and	w1, w1, #0x7fff
  402108:	mov	x7, #0x0                   	// #0
  40210c:	orr	w1, w1, w10, lsl #15
  402110:	bfxil	x7, x5, #0, #48
  402114:	fmov	d0, x8
  402118:	bfi	x7, x1, #48, #16
  40211c:	fmov	v0.d[1], x7
  402120:	cbnz	w0, 402340 <ferror@plt+0x11b0>
  402124:	ldp	x29, x30, [sp], #48
  402128:	ret
  40212c:	mov	x14, x5
  402130:	b.eq	40224c <ferror@plt+0x10bc>  // b.none
  402134:	cbnz	x7, 4024d0 <ferror@plt+0x1340>
  402138:	orr	x1, x2, x8
  40213c:	cbz	x1, 4021fc <ferror@plt+0x106c>
  402140:	cmn	w0, #0x1
  402144:	b.eq	4028ec <ferror@plt+0x175c>  // b.none
  402148:	mov	x1, #0x7fff                	// #32767
  40214c:	mvn	w0, w0
  402150:	cmp	x3, x1
  402154:	b.ne	4024e4 <ferror@plt+0x1354>  // b.any
  402158:	orr	x0, x9, x13
  40215c:	cbnz	x0, 402844 <ferror@plt+0x16b4>
  402160:	mov	x16, x14
  402164:	nop
  402168:	mov	x6, #0x0                   	// #0
  40216c:	fmov	d0, x6
  402170:	lsl	x16, x16, #63
  402174:	orr	x7, x16, #0x7fff000000000000
  402178:	fmov	v0.d[1], x7
  40217c:	b	402124 <ferror@plt+0xf94>
  402180:	sub	w7, w7, w0
  402184:	cmp	w7, #0x0
  402188:	b.le	402354 <ferror@plt+0x11c4>
  40218c:	cbz	x0, 402294 <ferror@plt+0x1104>
  402190:	orr	x9, x9, #0x8000000000000
  402194:	mov	x0, #0x7fff                	// #32767
  402198:	cmp	x1, x0
  40219c:	b.eq	4023e4 <ferror@plt+0x1254>  // b.none
  4021a0:	cmp	w7, #0x74
  4021a4:	b.gt	402578 <ferror@plt+0x13e8>
  4021a8:	cmp	w7, #0x3f
  4021ac:	b.gt	402678 <ferror@plt+0x14e8>
  4021b0:	mov	w0, #0x40                  	// #64
  4021b4:	sub	w0, w0, w7
  4021b8:	lsr	x5, x13, x7
  4021bc:	lsl	x13, x13, x0
  4021c0:	cmp	x13, #0x0
  4021c4:	lsl	x3, x9, x0
  4021c8:	cset	x4, ne  // ne = any
  4021cc:	orr	x3, x3, x5
  4021d0:	lsr	x0, x9, x7
  4021d4:	orr	x3, x3, x4
  4021d8:	add	x2, x2, x0
  4021dc:	b	402584 <ferror@plt+0x13f4>
  4021e0:	orr	x3, x9, x13
  4021e4:	cbz	x3, 402554 <ferror@plt+0x13c4>
  4021e8:	subs	w0, w0, #0x1
  4021ec:	b.ne	401fec <ferror@plt+0xe5c>  // b.any
  4021f0:	subs	x8, x8, x13
  4021f4:	sbc	x2, x2, x9
  4021f8:	b	40203c <ferror@plt+0xeac>
  4021fc:	mov	x0, #0x7fff                	// #32767
  402200:	cmp	x3, x0
  402204:	b.eq	402938 <ferror@plt+0x17a8>  // b.none
  402208:	mov	w10, w6
  40220c:	mov	x2, x9
  402210:	mov	x8, x13
  402214:	mov	x1, x3
  402218:	mov	x12, x5
  40221c:	nop
  402220:	orr	x5, x8, x2
  402224:	and	x3, x8, #0x7
  402228:	mov	w7, #0x0                   	// #0
  40222c:	cbnz	x1, 4020bc <ferror@plt+0xf2c>
  402230:	cbnz	x5, 4020b0 <ferror@plt+0xf20>
  402234:	mov	x8, #0x0                   	// #0
  402238:	mov	x1, #0x0                   	// #0
  40223c:	mov	w0, #0x0                   	// #0
  402240:	and	x5, x5, #0xffffffffffff
  402244:	and	w1, w1, #0x7fff
  402248:	b	402108 <ferror@plt+0xf78>
  40224c:	add	x5, x7, #0x1
  402250:	tst	x5, #0x7ffe
  402254:	b.ne	402524 <ferror@plt+0x1394>  // b.any
  402258:	orr	x7, x2, x8
  40225c:	orr	x5, x9, x13
  402260:	cbnz	x1, 4026e4 <ferror@plt+0x1554>
  402264:	cbz	x7, 40278c <ferror@plt+0x15fc>
  402268:	cbz	x5, 4027a0 <ferror@plt+0x1610>
  40226c:	subs	x4, x8, x13
  402270:	cmp	x8, x13
  402274:	sbc	x3, x2, x9
  402278:	tbz	x3, #51, 40296c <ferror@plt+0x17dc>
  40227c:	subs	x8, x13, x8
  402280:	mov	w10, w6
  402284:	sbc	x2, x9, x2
  402288:	mov	x12, x14
  40228c:	orr	x5, x8, x2
  402290:	b	4020ac <ferror@plt+0xf1c>
  402294:	orr	x0, x9, x13
  402298:	cbz	x0, 40276c <ferror@plt+0x15dc>
  40229c:	subs	w7, w7, #0x1
  4022a0:	b.ne	402194 <ferror@plt+0x1004>  // b.any
  4022a4:	adds	x8, x8, x13
  4022a8:	adc	x2, x9, x2
  4022ac:	nop
  4022b0:	tbz	x2, #51, 402220 <ferror@plt+0x1090>
  4022b4:	add	x1, x1, #0x1
  4022b8:	mov	x0, #0x7fff                	// #32767
  4022bc:	cmp	x1, x0
  4022c0:	b.eq	4027ac <ferror@plt+0x161c>  // b.none
  4022c4:	and	x0, x8, #0x1
  4022c8:	and	x3, x2, #0xfff7ffffffffffff
  4022cc:	orr	x8, x0, x8, lsr #1
  4022d0:	mov	w7, #0x0                   	// #0
  4022d4:	orr	x8, x8, x2, lsl #63
  4022d8:	lsr	x2, x3, #1
  4022dc:	and	x3, x8, #0x7
  4022e0:	b	4020bc <ferror@plt+0xf2c>
  4022e4:	and	x3, x15, #0xc00000
  4022e8:	cbz	x3, 402320 <ferror@plt+0x1190>
  4022ec:	cmp	x3, #0x400, lsl #12
  4022f0:	b.eq	402318 <ferror@plt+0x1188>  // b.none
  4022f4:	cmp	x3, #0x800, lsl #12
  4022f8:	csel	w12, w12, wzr, eq  // eq = none
  4022fc:	cbnz	w12, 402320 <ferror@plt+0x1190>
  402300:	mov	w1, #0x14                  	// #20
  402304:	mov	x8, #0xffffffffffffffff    	// #-1
  402308:	orr	w0, w0, w1
  40230c:	mov	x5, #0x1fffffffffffffff    	// #2305843009213693951
  402310:	mov	x1, #0x7ffe                	// #32766
  402314:	b	402240 <ferror@plt+0x10b0>
  402318:	cbnz	x12, 402300 <ferror@plt+0x1170>
  40231c:	nop
  402320:	mov	w1, #0x14                  	// #20
  402324:	and	x16, x10, #0xff
  402328:	orr	w0, w0, w1
  40232c:	mov	x6, #0x0                   	// #0
  402330:	fmov	d0, x6
  402334:	lsl	x16, x16, #63
  402338:	orr	x7, x16, #0x7fff000000000000
  40233c:	fmov	v0.d[1], x7
  402340:	str	q0, [sp, #16]
  402344:	bl	403f50 <ferror@plt+0x2dc0>
  402348:	ldr	q0, [sp, #16]
  40234c:	ldp	x29, x30, [sp], #48
  402350:	ret
  402354:	b.eq	402494 <ferror@plt+0x1304>  // b.none
  402358:	cbnz	x1, 402618 <ferror@plt+0x1488>
  40235c:	orr	x0, x2, x8
  402360:	cbz	x0, 402884 <ferror@plt+0x16f4>
  402364:	cmn	w7, #0x1
  402368:	b.eq	4029e4 <ferror@plt+0x1854>  // b.none
  40236c:	mov	x0, #0x7fff                	// #32767
  402370:	mvn	w7, w7
  402374:	cmp	x3, x0
  402378:	b.ne	40262c <ferror@plt+0x149c>  // b.any
  40237c:	orr	x0, x9, x13
  402380:	cbz	x0, 402168 <ferror@plt+0xfd8>
  402384:	lsr	x7, x9, #50
  402388:	mov	x8, x13
  40238c:	eor	x7, x7, #0x1
  402390:	mov	x2, x9
  402394:	and	w7, w7, #0x1
  402398:	b	4023f8 <ferror@plt+0x1268>
  40239c:	mov	w0, #0x10                  	// #16
  4023a0:	cbz	x12, 4023ac <ferror@plt+0x121c>
  4023a4:	adds	x8, x8, #0x8
  4023a8:	cinc	x2, x2, cs  // cs = hs, nlast
  4023ac:	and	x3, x2, #0x8000000000000
  4023b0:	cbz	w7, 4020e8 <ferror@plt+0xf58>
  4023b4:	orr	w0, w0, #0x8
  4023b8:	b	4020e8 <ferror@plt+0xf58>
  4023bc:	mov	w0, #0x10                  	// #16
  4023c0:	cbnz	x12, 4023ac <ferror@plt+0x121c>
  4023c4:	b	4023a4 <ferror@plt+0x1214>
  4023c8:	and	x3, x8, #0xf
  4023cc:	mov	w0, #0x10                  	// #16
  4023d0:	cmp	x3, #0x4
  4023d4:	b.eq	4023ac <ferror@plt+0x121c>  // b.none
  4023d8:	adds	x8, x8, #0x4
  4023dc:	cinc	x2, x2, cs  // cs = hs, nlast
  4023e0:	b	4023ac <ferror@plt+0x121c>
  4023e4:	orr	x0, x2, x8
  4023e8:	cbz	x0, 402168 <ferror@plt+0xfd8>
  4023ec:	lsr	x7, x2, #50
  4023f0:	eor	x7, x7, #0x1
  4023f4:	and	w7, w7, #0x1
  4023f8:	mov	w0, w7
  4023fc:	mov	x1, #0x7fff                	// #32767
  402400:	lsr	x5, x2, #3
  402404:	extr	x8, x2, x8, #3
  402408:	mov	x2, #0x7fff                	// #32767
  40240c:	cmp	x1, x2
  402410:	b.ne	402240 <ferror@plt+0x10b0>  // b.any
  402414:	orr	x1, x5, x8
  402418:	cbz	x1, 402a84 <ferror@plt+0x18f4>
  40241c:	orr	x5, x5, #0x800000000000
  402420:	mov	w1, #0x7fff                	// #32767
  402424:	and	x5, x5, #0xffffffffffff
  402428:	b	402108 <ferror@plt+0xf78>
  40242c:	mov	x8, x3
  402430:	and	x2, x2, #0xfff7ffffffffffff
  402434:	sub	x1, x1, x4
  402438:	orr	x5, x8, x2
  40243c:	and	x3, x8, #0x7
  402440:	mov	w7, #0x0                   	// #0
  402444:	cbz	x1, 402230 <ferror@plt+0x10a0>
  402448:	b	4020bc <ferror@plt+0xf2c>
  40244c:	clz	x2, x8
  402450:	add	w0, w2, #0x34
  402454:	cmp	w0, #0x3f
  402458:	b.le	402050 <ferror@plt+0xec0>
  40245c:	sub	w2, w2, #0xc
  402460:	lsl	x2, x8, x2
  402464:	b	402064 <ferror@plt+0xed4>
  402468:	orr	x0, x9, x13
  40246c:	cmp	x0, #0x0
  402470:	cset	x3, ne  // ne = any
  402474:	b	402034 <ferror@plt+0xea4>
  402478:	and	x3, x2, #0x8000000000000
  40247c:	mov	w0, #0x0                   	// #0
  402480:	cbz	w7, 4020e8 <ferror@plt+0xf58>
  402484:	mov	w0, #0x0                   	// #0
  402488:	tbz	w15, #11, 4020e8 <ferror@plt+0xf58>
  40248c:	orr	w0, w0, #0x8
  402490:	b	4020e8 <ferror@plt+0xf58>
  402494:	add	x0, x1, #0x1
  402498:	tst	x0, #0x7ffe
  40249c:	b.ne	4026a4 <ferror@plt+0x1514>  // b.any
  4024a0:	orr	x14, x2, x8
  4024a4:	cbnz	x1, 402860 <ferror@plt+0x16d0>
  4024a8:	orr	x5, x9, x13
  4024ac:	cbz	x14, 4028b4 <ferror@plt+0x1724>
  4024b0:	cbz	x5, 4027a0 <ferror@plt+0x1610>
  4024b4:	adds	x8, x8, x13
  4024b8:	adc	x2, x9, x2
  4024bc:	tbz	x2, #51, 40228c <ferror@plt+0x10fc>
  4024c0:	and	x2, x2, #0xfff7ffffffffffff
  4024c4:	and	x3, x8, #0x7
  4024c8:	mov	x1, #0x1                   	// #1
  4024cc:	b	4020bc <ferror@plt+0xf2c>
  4024d0:	mov	x1, #0x7fff                	// #32767
  4024d4:	neg	w0, w0
  4024d8:	orr	x2, x2, #0x8000000000000
  4024dc:	cmp	x3, x1
  4024e0:	b.eq	402158 <ferror@plt+0xfc8>  // b.none
  4024e4:	cmp	w0, #0x74
  4024e8:	b.gt	4025f4 <ferror@plt+0x1464>
  4024ec:	cmp	w0, #0x3f
  4024f0:	b.gt	402810 <ferror@plt+0x1680>
  4024f4:	mov	w1, #0x40                  	// #64
  4024f8:	sub	w1, w1, w0
  4024fc:	lsr	x4, x8, x0
  402500:	lsl	x8, x8, x1
  402504:	cmp	x8, #0x0
  402508:	lsl	x8, x2, x1
  40250c:	cset	x1, ne  // ne = any
  402510:	orr	x8, x8, x4
  402514:	lsr	x0, x2, x0
  402518:	orr	x8, x8, x1
  40251c:	sub	x9, x9, x0
  402520:	b	402600 <ferror@plt+0x1470>
  402524:	subs	x4, x8, x13
  402528:	cmp	x8, x13
  40252c:	sbc	x3, x2, x9
  402530:	tbnz	x3, #51, 4026cc <ferror@plt+0x153c>
  402534:	orr	x5, x4, x3
  402538:	cbnz	x5, 4027f8 <ferror@plt+0x1668>
  40253c:	and	x15, x15, #0xc00000
  402540:	mov	x8, #0x0                   	// #0
  402544:	cmp	x15, #0x800, lsl #12
  402548:	mov	x1, #0x0                   	// #0
  40254c:	cset	w10, eq  // eq = none
  402550:	b	402240 <ferror@plt+0x10b0>
  402554:	mov	x0, #0x7fff                	// #32767
  402558:	cmp	x7, x0
  40255c:	b.ne	402220 <ferror@plt+0x1090>  // b.any
  402560:	orr	x0, x2, x8
  402564:	cbnz	x0, 4023ec <ferror@plt+0x125c>
  402568:	mov	x8, #0x0                   	// #0
  40256c:	mov	x5, #0x0                   	// #0
  402570:	mov	w0, #0x0                   	// #0
  402574:	b	402414 <ferror@plt+0x1284>
  402578:	orr	x0, x9, x13
  40257c:	cmp	x0, #0x0
  402580:	cset	x3, ne  // ne = any
  402584:	adds	x8, x3, x8
  402588:	cinc	x2, x2, cs  // cs = hs, nlast
  40258c:	b	4022b0 <ferror@plt+0x1120>
  402590:	mov	w4, #0x80                  	// #128
  402594:	sub	w4, w4, w0
  402598:	cmp	w0, #0x40
  40259c:	sub	w8, w1, #0x3f
  4025a0:	lsl	x0, x2, x4
  4025a4:	orr	x0, x3, x0
  4025a8:	csel	x3, x0, x3, ne  // ne = any
  4025ac:	lsr	x8, x2, x8
  4025b0:	cmp	x3, #0x0
  4025b4:	mov	x2, #0x0                   	// #0
  4025b8:	cset	x0, ne  // ne = any
  4025bc:	orr	x8, x0, x8
  4025c0:	mov	x5, x8
  4025c4:	b	4020ac <ferror@plt+0xf1c>
  4025c8:	mov	w4, #0x80                  	// #128
  4025cc:	sub	w4, w4, w0
  4025d0:	subs	w0, w0, #0x40
  4025d4:	lsl	x4, x9, x4
  4025d8:	orr	x4, x13, x4
  4025dc:	csel	x13, x4, x13, ne  // ne = any
  4025e0:	lsr	x0, x9, x0
  4025e4:	cmp	x13, #0x0
  4025e8:	cset	x3, ne  // ne = any
  4025ec:	orr	x3, x3, x0
  4025f0:	b	402034 <ferror@plt+0xea4>
  4025f4:	orr	x2, x2, x8
  4025f8:	cmp	x2, #0x0
  4025fc:	cset	x8, ne  // ne = any
  402600:	subs	x8, x13, x8
  402604:	mov	w10, w6
  402608:	sbc	x2, x9, xzr
  40260c:	mov	x1, x3
  402610:	mov	x12, x14
  402614:	b	40203c <ferror@plt+0xeac>
  402618:	mov	x0, #0x7fff                	// #32767
  40261c:	neg	w7, w7
  402620:	orr	x2, x2, #0x8000000000000
  402624:	cmp	x3, x0
  402628:	b.eq	40237c <ferror@plt+0x11ec>  // b.none
  40262c:	cmp	w7, #0x74
  402630:	b.gt	402800 <ferror@plt+0x1670>
  402634:	cmp	w7, #0x3f
  402638:	b.gt	4028c0 <ferror@plt+0x1730>
  40263c:	mov	w1, #0x40                  	// #64
  402640:	sub	w1, w1, w7
  402644:	lsr	x4, x8, x7
  402648:	lsl	x8, x8, x1
  40264c:	cmp	x8, #0x0
  402650:	cset	x0, ne  // ne = any
  402654:	lsl	x8, x2, x1
  402658:	orr	x8, x8, x4
  40265c:	lsr	x7, x2, x7
  402660:	orr	x8, x8, x0
  402664:	add	x9, x9, x7
  402668:	adds	x8, x8, x13
  40266c:	mov	x1, x3
  402670:	cinc	x2, x9, cs  // cs = hs, nlast
  402674:	b	4022b0 <ferror@plt+0x1120>
  402678:	mov	w3, #0x80                  	// #128
  40267c:	sub	w3, w3, w7
  402680:	subs	w0, w7, #0x40
  402684:	lsl	x3, x9, x3
  402688:	orr	x3, x13, x3
  40268c:	csel	x13, x3, x13, ne  // ne = any
  402690:	lsr	x0, x9, x0
  402694:	cmp	x13, #0x0
  402698:	cset	x3, ne  // ne = any
  40269c:	orr	x3, x3, x0
  4026a0:	b	402584 <ferror@plt+0x13f4>
  4026a4:	mov	x1, #0x7fff                	// #32767
  4026a8:	cmp	x0, x1
  4026ac:	b.eq	402908 <ferror@plt+0x1778>  // b.none
  4026b0:	adds	x8, x8, x13
  4026b4:	mov	x1, x0
  4026b8:	adc	x2, x9, x2
  4026bc:	ubfx	x3, x8, #1, #3
  4026c0:	extr	x8, x2, x8, #1
  4026c4:	lsr	x2, x2, #1
  4026c8:	b	4020bc <ferror@plt+0xf2c>
  4026cc:	cmp	x13, x8
  4026d0:	mov	w10, w6
  4026d4:	sbc	x3, x9, x2
  4026d8:	sub	x8, x13, x8
  4026dc:	mov	x12, x14
  4026e0:	b	402044 <ferror@plt+0xeb4>
  4026e4:	mov	x12, #0x7fff                	// #32767
  4026e8:	cmp	x1, x12
  4026ec:	b.eq	402718 <ferror@plt+0x1588>  // b.none
  4026f0:	cmp	x3, x12
  4026f4:	b.eq	402948 <ferror@plt+0x17b8>  // b.none
  4026f8:	cbnz	x7, 402730 <ferror@plt+0x15a0>
  4026fc:	mov	w7, w0
  402700:	cbnz	x5, 402a28 <ferror@plt+0x1898>
  402704:	mov	x8, #0xffffffffffffffff    	// #-1
  402708:	mov	x5, #0xffffffffffff        	// #281474976710655
  40270c:	mov	w0, #0x1                   	// #1
  402710:	mov	w10, #0x0                   	// #0
  402714:	b	40241c <ferror@plt+0x128c>
  402718:	cbz	x7, 402a44 <ferror@plt+0x18b4>
  40271c:	lsr	x0, x2, #50
  402720:	cmp	x3, x1
  402724:	eor	x0, x0, #0x1
  402728:	and	w0, w0, #0x1
  40272c:	b.eq	402948 <ferror@plt+0x17b8>  // b.none
  402730:	cbz	x5, 402964 <ferror@plt+0x17d4>
  402734:	bfi	x4, x2, #61, #3
  402738:	lsr	x5, x2, #3
  40273c:	mov	x8, x4
  402740:	tbz	x2, #50, 40275c <ferror@plt+0x15cc>
  402744:	lsr	x1, x9, #3
  402748:	tbnz	x9, #50, 40275c <ferror@plt+0x15cc>
  40274c:	mov	x8, x11
  402750:	mov	w10, w6
  402754:	bfi	x8, x9, #61, #3
  402758:	mov	x5, x1
  40275c:	extr	x5, x5, x8, #61
  402760:	bfi	x8, x5, #61, #3
  402764:	lsr	x5, x5, #3
  402768:	b	402414 <ferror@plt+0x1284>
  40276c:	mov	x0, #0x7fff                	// #32767
  402770:	cmp	x1, x0
  402774:	b.ne	402220 <ferror@plt+0x1090>  // b.any
  402778:	orr	x0, x2, x8
  40277c:	cbz	x0, 402568 <ferror@plt+0x13d8>
  402780:	lsr	x7, x2, #50
  402784:	eor	w7, w7, #0x1
  402788:	b	4023f8 <ferror@plt+0x1268>
  40278c:	cbz	x5, 4028a0 <ferror@plt+0x1710>
  402790:	mov	w10, w6
  402794:	mov	x2, x9
  402798:	mov	x8, x13
  40279c:	mov	x12, x14
  4027a0:	mov	x1, #0x0                   	// #0
  4027a4:	mov	x3, #0x0                   	// #0
  4027a8:	b	402484 <ferror@plt+0x12f4>
  4027ac:	ands	x3, x15, #0xc00000
  4027b0:	b.eq	40283c <ferror@plt+0x16ac>  // b.none
  4027b4:	cmp	x3, #0x400, lsl #12
  4027b8:	eor	w0, w10, #0x1
  4027bc:	cset	w1, eq  // eq = none
  4027c0:	tst	w1, w0
  4027c4:	b.ne	402a60 <ferror@plt+0x18d0>  // b.any
  4027c8:	cmp	x3, #0x800, lsl #12
  4027cc:	b.eq	402a0c <ferror@plt+0x187c>  // b.none
  4027d0:	cmp	x3, #0x400, lsl #12
  4027d4:	mov	w0, #0x14                  	// #20
  4027d8:	b.ne	4022e8 <ferror@plt+0x1158>  // b.any
  4027dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4027e0:	mov	x1, #0x7ffe                	// #32766
  4027e4:	mov	x8, x2
  4027e8:	mov	w7, #0x0                   	// #0
  4027ec:	mov	w0, #0x14                  	// #20
  4027f0:	cbnz	x12, 4023ac <ferror@plt+0x121c>
  4027f4:	b	4023a4 <ferror@plt+0x1214>
  4027f8:	mov	x8, x4
  4027fc:	b	402044 <ferror@plt+0xeb4>
  402800:	orr	x2, x2, x8
  402804:	cmp	x2, #0x0
  402808:	cset	x8, ne  // ne = any
  40280c:	b	402668 <ferror@plt+0x14d8>
  402810:	mov	w1, #0x80                  	// #128
  402814:	sub	w1, w1, w0
  402818:	subs	w0, w0, #0x40
  40281c:	lsl	x1, x2, x1
  402820:	orr	x1, x8, x1
  402824:	csel	x8, x1, x8, ne  // ne = any
  402828:	lsr	x2, x2, x0
  40282c:	cmp	x8, #0x0
  402830:	cset	x8, ne  // ne = any
  402834:	orr	x8, x8, x2
  402838:	b	402600 <ferror@plt+0x1470>
  40283c:	mov	w0, #0x14                  	// #20
  402840:	b	40232c <ferror@plt+0x119c>
  402844:	lsr	x7, x9, #50
  402848:	mov	w10, w6
  40284c:	eor	x7, x7, #0x1
  402850:	mov	x8, x13
  402854:	and	w7, w7, #0x1
  402858:	mov	x2, x9
  40285c:	b	4023f8 <ferror@plt+0x1268>
  402860:	mov	x0, #0x7fff                	// #32767
  402864:	cmp	x1, x0
  402868:	b.eq	402988 <ferror@plt+0x17f8>  // b.none
  40286c:	cmp	x3, x0
  402870:	b.eq	4029fc <ferror@plt+0x186c>  // b.none
  402874:	cbnz	x14, 4029a0 <ferror@plt+0x1810>
  402878:	mov	x2, x9
  40287c:	mov	x8, x13
  402880:	b	4023f8 <ferror@plt+0x1268>
  402884:	mov	x0, #0x7fff                	// #32767
  402888:	cmp	x3, x0
  40288c:	b.eq	402a38 <ferror@plt+0x18a8>  // b.none
  402890:	mov	x2, x9
  402894:	mov	x8, x13
  402898:	mov	x1, x3
  40289c:	b	402220 <ferror@plt+0x1090>
  4028a0:	and	x15, x15, #0xc00000
  4028a4:	mov	x8, #0x0                   	// #0
  4028a8:	cmp	x15, #0x800, lsl #12
  4028ac:	cset	w10, eq  // eq = none
  4028b0:	b	402240 <ferror@plt+0x10b0>
  4028b4:	mov	x2, x9
  4028b8:	mov	x8, x13
  4028bc:	b	4020ac <ferror@plt+0xf1c>
  4028c0:	mov	w0, #0x80                  	// #128
  4028c4:	sub	w0, w0, w7
  4028c8:	subs	w7, w7, #0x40
  4028cc:	lsl	x0, x2, x0
  4028d0:	orr	x0, x8, x0
  4028d4:	csel	x8, x0, x8, ne  // ne = any
  4028d8:	lsr	x2, x2, x7
  4028dc:	cmp	x8, #0x0
  4028e0:	cset	x8, ne  // ne = any
  4028e4:	orr	x8, x8, x2
  4028e8:	b	402668 <ferror@plt+0x14d8>
  4028ec:	cmp	x13, x8
  4028f0:	mov	w10, w6
  4028f4:	sbc	x2, x9, x2
  4028f8:	sub	x8, x13, x8
  4028fc:	mov	x1, x3
  402900:	mov	x12, x5
  402904:	b	40203c <ferror@plt+0xeac>
  402908:	ands	x3, x15, #0xc00000
  40290c:	b.eq	40283c <ferror@plt+0x16ac>  // b.none
  402910:	cmp	x3, #0x400, lsl #12
  402914:	eor	w0, w10, #0x1
  402918:	csel	w0, w0, wzr, eq  // eq = none
  40291c:	cbnz	w0, 402a60 <ferror@plt+0x18d0>
  402920:	cmp	x3, #0x800, lsl #12
  402924:	b.ne	4027d0 <ferror@plt+0x1640>  // b.any
  402928:	cbz	x12, 402a10 <ferror@plt+0x1880>
  40292c:	mov	w0, #0x14                  	// #20
  402930:	mov	x16, #0x1                   	// #1
  402934:	b	40232c <ferror@plt+0x119c>
  402938:	orr	x0, x9, x13
  40293c:	cbnz	x0, 402844 <ferror@plt+0x16b4>
  402940:	mov	w10, w6
  402944:	b	402568 <ferror@plt+0x13d8>
  402948:	cbz	x5, 402a54 <ferror@plt+0x18c4>
  40294c:	tst	x9, #0x4000000000000
  402950:	csinc	w0, w0, wzr, ne  // ne = any
  402954:	cbnz	x7, 402734 <ferror@plt+0x15a4>
  402958:	mov	w10, w6
  40295c:	mov	x2, x9
  402960:	mov	x8, x13
  402964:	mov	w7, w0
  402968:	b	4023f8 <ferror@plt+0x1268>
  40296c:	orr	x5, x4, x3
  402970:	cbz	x5, 4028a0 <ferror@plt+0x1710>
  402974:	mov	x2, x3
  402978:	mov	x8, x4
  40297c:	and	x3, x4, #0x7
  402980:	mov	w7, #0x1                   	// #1
  402984:	b	4020bc <ferror@plt+0xf2c>
  402988:	cbz	x14, 4029f4 <ferror@plt+0x1864>
  40298c:	lsr	x7, x2, #50
  402990:	cmp	x3, x1
  402994:	eor	x7, x7, #0x1
  402998:	and	w7, w7, #0x1
  40299c:	b.eq	402a6c <ferror@plt+0x18dc>  // b.none
  4029a0:	orr	x13, x9, x13
  4029a4:	cbz	x13, 4023f8 <ferror@plt+0x1268>
  4029a8:	bfi	x4, x2, #61, #3
  4029ac:	lsr	x5, x2, #3
  4029b0:	mov	x8, x4
  4029b4:	tbz	x2, #50, 4029d0 <ferror@plt+0x1840>
  4029b8:	lsr	x0, x9, #3
  4029bc:	tbnz	x9, #50, 4029d0 <ferror@plt+0x1840>
  4029c0:	and	x8, x11, #0x1fffffffffffffff
  4029c4:	mov	w10, w6
  4029c8:	orr	x8, x8, x9, lsl #61
  4029cc:	mov	x5, x0
  4029d0:	mov	w0, w7
  4029d4:	extr	x5, x5, x8, #61
  4029d8:	bfi	x8, x5, #61, #3
  4029dc:	lsr	x5, x5, #3
  4029e0:	b	402414 <ferror@plt+0x1284>
  4029e4:	adds	x8, x8, x13
  4029e8:	mov	x1, x3
  4029ec:	adc	x2, x9, x2
  4029f0:	b	4022b0 <ferror@plt+0x1120>
  4029f4:	cmp	x3, x1
  4029f8:	b.ne	402878 <ferror@plt+0x16e8>  // b.any
  4029fc:	orr	x0, x9, x13
  402a00:	cbnz	x0, 402a74 <ferror@plt+0x18e4>
  402a04:	cbz	x14, 402568 <ferror@plt+0x13d8>
  402a08:	b	4023f8 <ferror@plt+0x1268>
  402a0c:	cbnz	x16, 40292c <ferror@plt+0x179c>
  402a10:	mov	x2, #0xffffffffffffffff    	// #-1
  402a14:	mov	w10, #0x0                   	// #0
  402a18:	mov	x8, x2
  402a1c:	mov	x1, #0x7ffe                	// #32766
  402a20:	mov	w0, #0x14                  	// #20
  402a24:	b	4020ec <ferror@plt+0xf5c>
  402a28:	mov	w10, w6
  402a2c:	mov	x2, x9
  402a30:	mov	x8, x13
  402a34:	b	4023f8 <ferror@plt+0x1268>
  402a38:	orr	x0, x9, x13
  402a3c:	cbz	x0, 402568 <ferror@plt+0x13d8>
  402a40:	b	402384 <ferror@plt+0x11f4>
  402a44:	cmp	x3, x1
  402a48:	b.eq	402948 <ferror@plt+0x17b8>  // b.none
  402a4c:	mov	w7, #0x0                   	// #0
  402a50:	b	402700 <ferror@plt+0x1570>
  402a54:	cbnz	x7, 402964 <ferror@plt+0x17d4>
  402a58:	mov	w7, w0
  402a5c:	b	402700 <ferror@plt+0x1570>
  402a60:	mov	w0, #0x14                  	// #20
  402a64:	mov	x16, #0x0                   	// #0
  402a68:	b	40232c <ferror@plt+0x119c>
  402a6c:	orr	x0, x9, x13
  402a70:	cbz	x0, 4023f8 <ferror@plt+0x1268>
  402a74:	tst	x9, #0x4000000000000
  402a78:	csinc	w7, w7, wzr, ne  // ne = any
  402a7c:	cbnz	x14, 4029a8 <ferror@plt+0x1818>
  402a80:	b	402878 <ferror@plt+0x16e8>
  402a84:	mov	x8, #0x0                   	// #0
  402a88:	mov	w1, #0x7fff                	// #32767
  402a8c:	mov	x5, #0x0                   	// #0
  402a90:	b	402108 <ferror@plt+0xf78>
  402a94:	nop
  402a98:	stp	x29, x30, [sp, #-48]!
  402a9c:	mov	x29, sp
  402aa0:	str	q0, [sp, #16]
  402aa4:	str	q1, [sp, #32]
  402aa8:	ldp	x2, x0, [sp, #16]
  402aac:	ldp	x5, x3, [sp, #32]
  402ab0:	mrs	x11, fpcr
  402ab4:	lsr	x1, x0, #63
  402ab8:	ubfx	x6, x0, #0, #48
  402abc:	and	w13, w1, #0xff
  402ac0:	mov	x9, x1
  402ac4:	ubfx	x7, x0, #48, #15
  402ac8:	cbz	w7, 402ee0 <ferror@plt+0x1d50>
  402acc:	mov	w1, #0x7fff                	// #32767
  402ad0:	cmp	w7, w1
  402ad4:	b.eq	402f20 <ferror@plt+0x1d90>  // b.none
  402ad8:	and	x7, x7, #0xffff
  402adc:	extr	x6, x6, x2, #61
  402ae0:	mov	x15, #0xffffffffffffc001    	// #-16383
  402ae4:	orr	x4, x6, #0x8000000000000
  402ae8:	add	x7, x7, x15
  402aec:	lsl	x2, x2, #3
  402af0:	mov	x14, #0x2                   	// #2
  402af4:	mov	x12, #0x1                   	// #1
  402af8:	mov	x1, #0x3                   	// #3
  402afc:	mov	x16, #0x0                   	// #0
  402b00:	mov	x17, #0x0                   	// #0
  402b04:	mov	w0, #0x0                   	// #0
  402b08:	lsr	x8, x3, #63
  402b0c:	ubfx	x6, x3, #0, #48
  402b10:	and	w15, w8, #0xff
  402b14:	ubfx	x10, x3, #48, #15
  402b18:	cbz	w10, 402e98 <ferror@plt+0x1d08>
  402b1c:	mov	w12, #0x7fff                	// #32767
  402b20:	cmp	w10, w12
  402b24:	b.eq	402e64 <ferror@plt+0x1cd4>  // b.none
  402b28:	and	x10, x10, #0xffff
  402b2c:	extr	x6, x6, x5, #61
  402b30:	mov	x14, #0xffffffffffffc001    	// #-16383
  402b34:	add	x10, x10, x14
  402b38:	orr	x6, x6, #0x8000000000000
  402b3c:	sub	x7, x7, x10
  402b40:	lsl	x5, x5, #3
  402b44:	mov	x1, x16
  402b48:	mov	x3, #0x0                   	// #0
  402b4c:	eor	w10, w13, w15
  402b50:	cmp	x1, #0x9
  402b54:	and	x12, x10, #0xff
  402b58:	mov	x14, x12
  402b5c:	b.gt	402c24 <ferror@plt+0x1a94>
  402b60:	cmp	x1, #0x7
  402b64:	b.gt	402fdc <ferror@plt+0x1e4c>
  402b68:	cmp	x1, #0x3
  402b6c:	b.eq	402b88 <ferror@plt+0x19f8>  // b.none
  402b70:	b.le	402c4c <ferror@plt+0x1abc>
  402b74:	cmp	x1, #0x5
  402b78:	b.eq	402c34 <ferror@plt+0x1aa4>  // b.none
  402b7c:	b.le	402c7c <ferror@plt+0x1aec>
  402b80:	cmp	x1, #0x6
  402b84:	b.eq	402bf0 <ferror@plt+0x1a60>  // b.none
  402b88:	cmp	x3, #0x1
  402b8c:	b.eq	402bec <ferror@plt+0x1a5c>  // b.none
  402b90:	cbz	x3, 402ba4 <ferror@plt+0x1a14>
  402b94:	cmp	x3, #0x2
  402b98:	b.eq	402fd8 <ferror@plt+0x1e48>  // b.none
  402b9c:	cmp	x3, #0x3
  402ba0:	b.eq	4031d0 <ferror@plt+0x2040>  // b.none
  402ba4:	mov	x1, #0x3fff                	// #16383
  402ba8:	mov	w10, w15
  402bac:	mov	x14, x8
  402bb0:	add	x3, x7, x1
  402bb4:	cmp	x3, #0x0
  402bb8:	b.le	4030a8 <ferror@plt+0x1f18>
  402bbc:	tst	x5, #0x7
  402bc0:	b.ne	403008 <ferror@plt+0x1e78>  // b.any
  402bc4:	tbz	x6, #52, 402bd0 <ferror@plt+0x1a40>
  402bc8:	and	x6, x6, #0xffefffffffffffff
  402bcc:	add	x3, x7, #0x4, lsl #12
  402bd0:	mov	x1, #0x7ffe                	// #32766
  402bd4:	cmp	x3, x1
  402bd8:	b.gt	40318c <ferror@plt+0x1ffc>
  402bdc:	and	w1, w3, #0x7fff
  402be0:	extr	x2, x6, x5, #3
  402be4:	ubfx	x6, x6, #3, #48
  402be8:	b	402bfc <ferror@plt+0x1a6c>
  402bec:	mov	w10, w15
  402bf0:	mov	w1, #0x0                   	// #0
  402bf4:	mov	x6, #0x0                   	// #0
  402bf8:	mov	x2, #0x0                   	// #0
  402bfc:	mov	x5, #0x0                   	// #0
  402c00:	orr	w1, w1, w10, lsl #15
  402c04:	bfxil	x5, x6, #0, #48
  402c08:	fmov	d0, x2
  402c0c:	bfi	x5, x1, #48, #16
  402c10:	fmov	v0.d[1], x5
  402c14:	cbnz	w0, 402c6c <ferror@plt+0x1adc>
  402c18:	ldp	x29, x30, [sp], #48
  402c1c:	ret
  402c20:	mov	x3, #0x3                   	// #3
  402c24:	cmp	x1, #0xb
  402c28:	b.gt	402f4c <ferror@plt+0x1dbc>
  402c2c:	cmp	x1, #0xa
  402c30:	b.ne	402b88 <ferror@plt+0x19f8>  // b.any
  402c34:	mov	w10, #0x0                   	// #0
  402c38:	mov	x6, #0xffffffffffff        	// #281474976710655
  402c3c:	mov	x2, #0xffffffffffffffff    	// #-1
  402c40:	mov	w0, #0x1                   	// #1
  402c44:	mov	w1, #0x7fff                	// #32767
  402c48:	b	402bfc <ferror@plt+0x1a6c>
  402c4c:	cmp	x1, #0x1
  402c50:	b.ne	402e58 <ferror@plt+0x1cc8>  // b.any
  402c54:	mov	x4, #0x0                   	// #0
  402c58:	fmov	d0, x4
  402c5c:	lsl	x12, x12, #63
  402c60:	orr	w0, w0, #0x2
  402c64:	orr	x5, x12, #0x7fff000000000000
  402c68:	fmov	v0.d[1], x5
  402c6c:	str	q0, [sp, #16]
  402c70:	bl	403f50 <ferror@plt+0x2dc0>
  402c74:	ldr	q0, [sp, #16]
  402c78:	b	402c18 <ferror@plt+0x1a88>
  402c7c:	cmp	x1, #0x4
  402c80:	b.eq	402bf0 <ferror@plt+0x1a60>  // b.none
  402c84:	cmp	x4, x6
  402c88:	b.ls	402fec <ferror@plt+0x1e5c>  // b.plast
  402c8c:	lsr	x3, x4, #1
  402c90:	extr	x8, x4, x2, #1
  402c94:	lsl	x2, x2, #63
  402c98:	ubfx	x13, x6, #20, #32
  402c9c:	extr	x9, x6, x5, #52
  402ca0:	lsl	x12, x5, #12
  402ca4:	and	x15, x9, #0xffffffff
  402ca8:	udiv	x5, x3, x13
  402cac:	msub	x3, x5, x13, x3
  402cb0:	mul	x1, x15, x5
  402cb4:	extr	x3, x3, x8, #32
  402cb8:	cmp	x1, x3
  402cbc:	b.ls	402cd0 <ferror@plt+0x1b40>  // b.plast
  402cc0:	adds	x3, x9, x3
  402cc4:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  402cc8:	b.hi	4032a8 <ferror@plt+0x2118>  // b.pmore
  402ccc:	sub	x5, x5, #0x1
  402cd0:	sub	x3, x3, x1
  402cd4:	mov	x4, x8
  402cd8:	udiv	x1, x3, x13
  402cdc:	msub	x3, x1, x13, x3
  402ce0:	mul	x6, x15, x1
  402ce4:	bfi	x4, x3, #32, #32
  402ce8:	cmp	x6, x4
  402cec:	b.ls	402d00 <ferror@plt+0x1b70>  // b.plast
  402cf0:	adds	x4, x9, x4
  402cf4:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  402cf8:	b.hi	4032b4 <ferror@plt+0x2124>  // b.pmore
  402cfc:	sub	x1, x1, #0x1
  402d00:	orr	x8, x1, x5, lsl #32
  402d04:	and	x17, x12, #0xffffffff
  402d08:	and	x1, x8, #0xffffffff
  402d0c:	lsr	x16, x12, #32
  402d10:	lsr	x5, x8, #32
  402d14:	sub	x4, x4, x6
  402d18:	mov	x18, #0x100000000           	// #4294967296
  402d1c:	mul	x3, x1, x17
  402d20:	mul	x30, x5, x17
  402d24:	madd	x6, x16, x1, x30
  402d28:	and	x1, x3, #0xffffffff
  402d2c:	mul	x5, x5, x16
  402d30:	add	x3, x6, x3, lsr #32
  402d34:	add	x6, x5, x18
  402d38:	cmp	x30, x3
  402d3c:	csel	x5, x6, x5, hi  // hi = pmore
  402d40:	add	x1, x1, x3, lsl #32
  402d44:	add	x5, x5, x3, lsr #32
  402d48:	cmp	x4, x5
  402d4c:	b.cc	403074 <ferror@plt+0x1ee4>  // b.lo, b.ul, b.last
  402d50:	ccmp	x2, x1, #0x2, eq  // eq = none
  402d54:	mov	x6, x8
  402d58:	b.cc	403074 <ferror@plt+0x1ee4>  // b.lo, b.ul, b.last
  402d5c:	subs	x8, x2, x1
  402d60:	mov	x3, #0x3fff                	// #16383
  402d64:	cmp	x2, x1
  402d68:	add	x3, x7, x3
  402d6c:	sbc	x4, x4, x5
  402d70:	cmp	x9, x4
  402d74:	b.eq	4032c0 <ferror@plt+0x2130>  // b.none
  402d78:	udiv	x5, x4, x13
  402d7c:	msub	x4, x5, x13, x4
  402d80:	mul	x2, x15, x5
  402d84:	extr	x1, x4, x8, #32
  402d88:	cmp	x2, x1
  402d8c:	b.ls	402da0 <ferror@plt+0x1c10>  // b.plast
  402d90:	adds	x1, x9, x1
  402d94:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  402d98:	b.hi	403378 <ferror@plt+0x21e8>  // b.pmore
  402d9c:	sub	x5, x5, #0x1
  402da0:	sub	x1, x1, x2
  402da4:	udiv	x2, x1, x13
  402da8:	msub	x1, x2, x13, x1
  402dac:	mul	x15, x15, x2
  402db0:	bfi	x8, x1, #32, #32
  402db4:	mov	x1, x8
  402db8:	cmp	x15, x8
  402dbc:	b.ls	402dd0 <ferror@plt+0x1c40>  // b.plast
  402dc0:	adds	x1, x9, x8
  402dc4:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  402dc8:	b.hi	403384 <ferror@plt+0x21f4>  // b.pmore
  402dcc:	sub	x2, x2, #0x1
  402dd0:	orr	x5, x2, x5, lsl #32
  402dd4:	sub	x1, x1, x15
  402dd8:	and	x4, x5, #0xffffffff
  402ddc:	mov	x13, #0x100000000           	// #4294967296
  402de0:	lsr	x15, x5, #32
  402de4:	mul	x2, x17, x4
  402de8:	mul	x17, x15, x17
  402dec:	madd	x4, x16, x4, x17
  402df0:	and	x8, x2, #0xffffffff
  402df4:	mul	x16, x16, x15
  402df8:	add	x2, x4, x2, lsr #32
  402dfc:	add	x4, x16, x13
  402e00:	cmp	x17, x2
  402e04:	csel	x16, x4, x16, hi  // hi = pmore
  402e08:	add	x4, x8, x2, lsl #32
  402e0c:	add	x16, x16, x2, lsr #32
  402e10:	cmp	x1, x16
  402e14:	b.cs	4031f8 <ferror@plt+0x2068>  // b.hs, b.nlast
  402e18:	adds	x2, x9, x1
  402e1c:	sub	x8, x5, #0x1
  402e20:	mov	x1, x2
  402e24:	b.cs	402e38 <ferror@plt+0x1ca8>  // b.hs, b.nlast
  402e28:	cmp	x2, x16
  402e2c:	b.cc	4032f8 <ferror@plt+0x2168>  // b.lo, b.ul, b.last
  402e30:	ccmp	x12, x4, #0x2, eq  // eq = none
  402e34:	b.cc	4032f8 <ferror@plt+0x2168>  // b.lo, b.ul, b.last
  402e38:	cmp	x12, x4
  402e3c:	mov	x5, x8
  402e40:	cset	w2, ne  // ne = any
  402e44:	cmp	w2, #0x0
  402e48:	orr	x2, x5, #0x1
  402e4c:	ccmp	x1, x16, #0x0, eq  // eq = none
  402e50:	csel	x5, x2, x5, ne  // ne = any
  402e54:	b	402bb4 <ferror@plt+0x1a24>
  402e58:	cmp	x1, #0x2
  402e5c:	b.eq	402bf0 <ferror@plt+0x1a60>  // b.none
  402e60:	b	402c84 <ferror@plt+0x1af4>
  402e64:	mov	x10, #0xffffffffffff8001    	// #-32767
  402e68:	orr	x3, x6, x5
  402e6c:	add	x7, x7, x10
  402e70:	cbz	x3, 402fc4 <ferror@plt+0x1e34>
  402e74:	eor	w10, w13, w15
  402e78:	ands	x3, x6, #0x800000000000
  402e7c:	and	x12, x10, #0xff
  402e80:	csinc	w0, w0, wzr, ne  // ne = any
  402e84:	mov	x14, x12
  402e88:	cmp	x1, #0x9
  402e8c:	b.gt	40303c <ferror@plt+0x1eac>
  402e90:	mov	x3, #0x3                   	// #3
  402e94:	b	402b60 <ferror@plt+0x19d0>
  402e98:	orr	x1, x6, x5
  402e9c:	cbz	x1, 402fb0 <ferror@plt+0x1e20>
  402ea0:	cbz	x6, 403144 <ferror@plt+0x1fb4>
  402ea4:	clz	x1, x6
  402ea8:	sub	x3, x1, #0xf
  402eac:	add	w12, w3, #0x3
  402eb0:	mov	w10, #0x3d                  	// #61
  402eb4:	sub	w3, w10, w3
  402eb8:	lsl	x6, x6, x12
  402ebc:	lsr	x3, x5, x3
  402ec0:	orr	x6, x3, x6
  402ec4:	lsl	x5, x5, x12
  402ec8:	add	x7, x1, x7
  402ecc:	mov	x12, #0x3fef                	// #16367
  402ed0:	mov	x1, x16
  402ed4:	add	x7, x7, x12
  402ed8:	mov	x3, #0x0                   	// #0
  402edc:	b	402b4c <ferror@plt+0x19bc>
  402ee0:	orr	x4, x6, x2
  402ee4:	cbz	x4, 402f8c <ferror@plt+0x1dfc>
  402ee8:	cbz	x6, 403168 <ferror@plt+0x1fd8>
  402eec:	clz	x0, x6
  402ef0:	sub	x4, x0, #0xf
  402ef4:	add	w7, w4, #0x3
  402ef8:	mov	w1, #0x3d                  	// #61
  402efc:	sub	w4, w1, w4
  402f00:	lsl	x6, x6, x7
  402f04:	lsr	x4, x2, x4
  402f08:	orr	x4, x4, x6
  402f0c:	lsl	x2, x2, x7
  402f10:	mov	x7, #0xffffffffffffc011    	// #-16367
  402f14:	mov	x14, #0x2                   	// #2
  402f18:	sub	x7, x7, x0
  402f1c:	b	402af4 <ferror@plt+0x1964>
  402f20:	orr	x4, x6, x2
  402f24:	cbnz	x4, 402f64 <ferror@plt+0x1dd4>
  402f28:	mov	x2, #0x0                   	// #0
  402f2c:	mov	x14, #0xa                   	// #10
  402f30:	mov	x12, #0x9                   	// #9
  402f34:	mov	x1, #0xb                   	// #11
  402f38:	mov	x16, #0x8                   	// #8
  402f3c:	mov	x7, #0x7fff                	// #32767
  402f40:	mov	x17, #0x2                   	// #2
  402f44:	mov	w0, #0x0                   	// #0
  402f48:	b	402b08 <ferror@plt+0x1978>
  402f4c:	mov	w15, w13
  402f50:	mov	x6, x4
  402f54:	mov	x5, x2
  402f58:	mov	x8, x9
  402f5c:	mov	x3, x17
  402f60:	b	402b88 <ferror@plt+0x19f8>
  402f64:	lsr	x0, x6, #47
  402f68:	mov	x4, x6
  402f6c:	eor	w0, w0, #0x1
  402f70:	mov	x14, #0xe                   	// #14
  402f74:	mov	x12, #0xd                   	// #13
  402f78:	mov	x1, #0xf                   	// #15
  402f7c:	mov	x16, #0xc                   	// #12
  402f80:	mov	x7, #0x7fff                	// #32767
  402f84:	mov	x17, #0x3                   	// #3
  402f88:	b	402b08 <ferror@plt+0x1978>
  402f8c:	mov	x2, #0x0                   	// #0
  402f90:	mov	x14, #0x6                   	// #6
  402f94:	mov	x12, #0x5                   	// #5
  402f98:	mov	x1, #0x7                   	// #7
  402f9c:	mov	x16, #0x4                   	// #4
  402fa0:	mov	x7, #0x0                   	// #0
  402fa4:	mov	x17, #0x1                   	// #1
  402fa8:	mov	w0, #0x0                   	// #0
  402fac:	b	402b08 <ferror@plt+0x1978>
  402fb0:	mov	x1, x12
  402fb4:	mov	x6, #0x0                   	// #0
  402fb8:	mov	x5, #0x0                   	// #0
  402fbc:	mov	x3, #0x1                   	// #1
  402fc0:	b	402b4c <ferror@plt+0x19bc>
  402fc4:	mov	x1, x14
  402fc8:	mov	x6, #0x0                   	// #0
  402fcc:	mov	x5, #0x0                   	// #0
  402fd0:	mov	x3, #0x2                   	// #2
  402fd4:	b	402b4c <ferror@plt+0x19bc>
  402fd8:	mov	w10, w15
  402fdc:	mov	w1, #0x7fff                	// #32767
  402fe0:	mov	x6, #0x0                   	// #0
  402fe4:	mov	x2, #0x0                   	// #0
  402fe8:	b	402bfc <ferror@plt+0x1a6c>
  402fec:	ccmp	x5, x2, #0x2, eq  // eq = none
  402ff0:	b.ls	402c8c <ferror@plt+0x1afc>  // b.plast
  402ff4:	mov	x8, x2
  402ff8:	sub	x7, x7, #0x1
  402ffc:	mov	x3, x4
  403000:	mov	x2, #0x0                   	// #0
  403004:	b	402c98 <ferror@plt+0x1b08>
  403008:	and	x1, x11, #0xc00000
  40300c:	orr	w0, w0, #0x10
  403010:	cmp	x1, #0x400, lsl #12
  403014:	b.eq	403344 <ferror@plt+0x21b4>  // b.none
  403018:	cmp	x1, #0x800, lsl #12
  40301c:	b.eq	403274 <ferror@plt+0x20e4>  // b.none
  403020:	cbnz	x1, 402bc4 <ferror@plt+0x1a34>
  403024:	and	x1, x5, #0xf
  403028:	cmp	x1, #0x4
  40302c:	b.eq	402bc4 <ferror@plt+0x1a34>  // b.none
  403030:	adds	x5, x5, #0x4
  403034:	cinc	x6, x6, cs  // cs = hs, nlast
  403038:	b	402bc4 <ferror@plt+0x1a34>
  40303c:	cmp	x1, #0xf
  403040:	b.ne	402c20 <ferror@plt+0x1a90>  // b.any
  403044:	tbz	x4, #47, 403060 <ferror@plt+0x1ed0>
  403048:	cbnz	x3, 403060 <ferror@plt+0x1ed0>
  40304c:	orr	x6, x6, #0x800000000000
  403050:	mov	w10, w15
  403054:	mov	x2, x5
  403058:	mov	w1, #0x7fff                	// #32767
  40305c:	b	402bfc <ferror@plt+0x1a6c>
  403060:	orr	x6, x4, #0x800000000000
  403064:	mov	w10, w13
  403068:	and	x6, x6, #0xffffffffffff
  40306c:	mov	w1, #0x7fff                	// #32767
  403070:	b	402bfc <ferror@plt+0x1a6c>
  403074:	adds	x3, x2, x12
  403078:	sub	x6, x8, #0x1
  40307c:	adc	x4, x4, x9
  403080:	cset	x18, cs  // cs = hs, nlast
  403084:	mov	x2, x3
  403088:	cmp	x9, x4
  40308c:	b.cs	4031e8 <ferror@plt+0x2058>  // b.hs, b.nlast
  403090:	cmp	x5, x4
  403094:	b.ls	403210 <ferror@plt+0x2080>  // b.plast
  403098:	adds	x2, x12, x3
  40309c:	sub	x6, x8, #0x2
  4030a0:	adc	x4, x4, x9
  4030a4:	b	402d5c <ferror@plt+0x1bcc>
  4030a8:	mov	x1, #0x1                   	// #1
  4030ac:	sub	x1, x1, x3
  4030b0:	cmp	x1, #0x74
  4030b4:	b.le	4030d0 <ferror@plt+0x1f40>
  4030b8:	orr	x2, x5, x6
  4030bc:	cbnz	x2, 4032dc <ferror@plt+0x214c>
  4030c0:	orr	w0, w0, #0x8
  4030c4:	mov	w1, #0x0                   	// #0
  4030c8:	mov	x6, #0x0                   	// #0
  4030cc:	b	4031b4 <ferror@plt+0x2024>
  4030d0:	cmp	x1, #0x3f
  4030d4:	b.le	40321c <ferror@plt+0x208c>
  4030d8:	mov	w2, #0x80                  	// #128
  4030dc:	sub	w2, w2, w1
  4030e0:	cmp	x1, #0x40
  4030e4:	sub	w1, w1, #0x40
  4030e8:	lsl	x2, x6, x2
  4030ec:	orr	x2, x5, x2
  4030f0:	csel	x5, x2, x5, ne  // ne = any
  4030f4:	lsr	x6, x6, x1
  4030f8:	cmp	x5, #0x0
  4030fc:	cset	x2, ne  // ne = any
  403100:	orr	x2, x2, x6
  403104:	ands	x6, x2, #0x7
  403108:	b.eq	403250 <ferror@plt+0x20c0>  // b.none
  40310c:	mov	x6, #0x0                   	// #0
  403110:	and	x11, x11, #0xc00000
  403114:	orr	w0, w0, #0x10
  403118:	cmp	x11, #0x400, lsl #12
  40311c:	b.eq	403390 <ferror@plt+0x2200>  // b.none
  403120:	cmp	x11, #0x800, lsl #12
  403124:	b.eq	4033b0 <ferror@plt+0x2220>  // b.none
  403128:	cbz	x11, 403318 <ferror@plt+0x2188>
  40312c:	tbnz	x6, #51, 403330 <ferror@plt+0x21a0>
  403130:	orr	w0, w0, #0x8
  403134:	extr	x2, x6, x2, #3
  403138:	mov	w1, #0x0                   	// #0
  40313c:	ubfx	x6, x6, #3, #48
  403140:	b	4031b4 <ferror@plt+0x2024>
  403144:	clz	x1, x5
  403148:	add	x3, x1, #0x31
  40314c:	add	x1, x1, #0x40
  403150:	cmp	x3, #0x3c
  403154:	b.le	402eac <ferror@plt+0x1d1c>
  403158:	sub	w6, w3, #0x3d
  40315c:	lsl	x6, x5, x6
  403160:	mov	x5, #0x0                   	// #0
  403164:	b	402ec8 <ferror@plt+0x1d38>
  403168:	clz	x7, x2
  40316c:	add	x4, x7, #0x31
  403170:	add	x0, x7, #0x40
  403174:	cmp	x4, #0x3c
  403178:	b.le	402ef4 <ferror@plt+0x1d64>
  40317c:	sub	w4, w4, #0x3d
  403180:	lsl	x4, x2, x4
  403184:	mov	x2, #0x0                   	// #0
  403188:	b	402f10 <ferror@plt+0x1d80>
  40318c:	and	x2, x11, #0xc00000
  403190:	cmp	x2, #0x400, lsl #12
  403194:	b.eq	40335c <ferror@plt+0x21cc>  // b.none
  403198:	cmp	x2, #0x800, lsl #12
  40319c:	b.eq	40328c <ferror@plt+0x20fc>  // b.none
  4031a0:	cbz	x2, 403268 <ferror@plt+0x20d8>
  4031a4:	mov	x6, #0xffffffffffff        	// #281474976710655
  4031a8:	mov	x2, #0xffffffffffffffff    	// #-1
  4031ac:	mov	w3, #0x14                  	// #20
  4031b0:	orr	w0, w0, w3
  4031b4:	mov	x5, #0x0                   	// #0
  4031b8:	orr	w1, w1, w10, lsl #15
  4031bc:	bfxil	x5, x6, #0, #48
  4031c0:	fmov	d0, x2
  4031c4:	bfi	x5, x1, #48, #16
  4031c8:	fmov	v0.d[1], x5
  4031cc:	b	402c6c <ferror@plt+0x1adc>
  4031d0:	orr	x6, x6, #0x800000000000
  4031d4:	mov	w10, w15
  4031d8:	and	x6, x6, #0xffffffffffff
  4031dc:	mov	x2, x5
  4031e0:	mov	w1, #0x7fff                	// #32767
  4031e4:	b	402bfc <ferror@plt+0x1a6c>
  4031e8:	cmp	x18, #0x0
  4031ec:	ccmp	x9, x4, #0x0, eq  // eq = none
  4031f0:	b.ne	402d5c <ferror@plt+0x1bcc>  // b.any
  4031f4:	b	403090 <ferror@plt+0x1f00>
  4031f8:	cmp	x4, #0x0
  4031fc:	cset	w2, ne  // ne = any
  403200:	cmp	w2, #0x0
  403204:	ccmp	x1, x16, #0x0, ne  // ne = any
  403208:	b.ne	402e44 <ferror@plt+0x1cb4>  // b.any
  40320c:	b	402e18 <ferror@plt+0x1c88>
  403210:	ccmp	x1, x3, #0x0, eq  // eq = none
  403214:	b.ls	402d5c <ferror@plt+0x1bcc>  // b.plast
  403218:	b	403098 <ferror@plt+0x1f08>
  40321c:	mov	w2, #0x40                  	// #64
  403220:	sub	w2, w2, w1
  403224:	lsr	x4, x5, x1
  403228:	lsl	x5, x5, x2
  40322c:	cmp	x5, #0x0
  403230:	cset	x3, ne  // ne = any
  403234:	lsl	x2, x6, x2
  403238:	orr	x2, x2, x4
  40323c:	lsr	x6, x6, x1
  403240:	orr	x2, x2, x3
  403244:	tst	x2, #0x7
  403248:	b.ne	403110 <ferror@plt+0x1f80>  // b.any
  40324c:	tbnz	x6, #51, 4033bc <ferror@plt+0x222c>
  403250:	mov	w1, #0x0                   	// #0
  403254:	extr	x2, x6, x2, #3
  403258:	ubfx	x6, x6, #3, #48
  40325c:	tbz	w11, #11, 402bfc <ferror@plt+0x1a6c>
  403260:	orr	w0, w0, #0x8
  403264:	b	4031b4 <ferror@plt+0x2024>
  403268:	mov	w1, #0x7fff                	// #32767
  40326c:	mov	x6, #0x0                   	// #0
  403270:	b	4031ac <ferror@plt+0x201c>
  403274:	mov	w10, #0x0                   	// #0
  403278:	cbz	x14, 402bc4 <ferror@plt+0x1a34>
  40327c:	adds	x5, x5, #0x8
  403280:	mov	w10, #0x1                   	// #1
  403284:	cinc	x6, x6, cs  // cs = hs, nlast
  403288:	b	402bc4 <ferror@plt+0x1a34>
  40328c:	cmp	x14, #0x0
  403290:	mov	w2, #0x7fff                	// #32767
  403294:	mov	x6, #0xffffffffffff        	// #281474976710655
  403298:	csel	w1, w1, w2, eq  // eq = none
  40329c:	csel	x6, x6, xzr, eq  // eq = none
  4032a0:	csetm	x2, eq  // eq = none
  4032a4:	b	4031ac <ferror@plt+0x201c>
  4032a8:	sub	x5, x5, #0x2
  4032ac:	add	x3, x3, x9
  4032b0:	b	402cd0 <ferror@plt+0x1b40>
  4032b4:	sub	x1, x1, #0x2
  4032b8:	add	x4, x4, x9
  4032bc:	b	402d00 <ferror@plt+0x1b70>
  4032c0:	cmp	x3, #0x0
  4032c4:	mov	x5, #0xffffffffffffffff    	// #-1
  4032c8:	b.gt	403008 <ferror@plt+0x1e78>
  4032cc:	mov	x1, #0x1                   	// #1
  4032d0:	sub	x1, x1, x3
  4032d4:	cmp	x1, #0x74
  4032d8:	b.le	4030d0 <ferror@plt+0x1f40>
  4032dc:	and	x11, x11, #0xc00000
  4032e0:	orr	w0, w0, #0x10
  4032e4:	cmp	x11, #0x400, lsl #12
  4032e8:	b.eq	4033a4 <ferror@plt+0x2214>  // b.none
  4032ec:	cmp	x11, #0x800, lsl #12
  4032f0:	csel	x2, x14, xzr, eq  // eq = none
  4032f4:	b	4030c0 <ferror@plt+0x1f30>
  4032f8:	lsl	x8, x12, #1
  4032fc:	sub	x5, x5, #0x2
  403300:	cmp	x12, x8
  403304:	cinc	x1, x9, hi  // hi = pmore
  403308:	cmp	x4, x8
  40330c:	add	x1, x2, x1
  403310:	cset	w2, ne  // ne = any
  403314:	b	402e44 <ferror@plt+0x1cb4>
  403318:	and	x1, x2, #0xf
  40331c:	cmp	x1, #0x4
  403320:	b.eq	40332c <ferror@plt+0x219c>  // b.none
  403324:	adds	x2, x2, #0x4
  403328:	cinc	x6, x6, cs  // cs = hs, nlast
  40332c:	tbz	x6, #51, 403130 <ferror@plt+0x1fa0>
  403330:	orr	w0, w0, #0x8
  403334:	mov	w1, #0x1                   	// #1
  403338:	mov	x6, #0x0                   	// #0
  40333c:	mov	x2, #0x0                   	// #0
  403340:	b	4031b4 <ferror@plt+0x2024>
  403344:	mov	w10, #0x1                   	// #1
  403348:	cbnz	x14, 402bc4 <ferror@plt+0x1a34>
  40334c:	adds	x5, x5, #0x8
  403350:	mov	w10, #0x0                   	// #0
  403354:	cinc	x6, x6, cs  // cs = hs, nlast
  403358:	b	402bc4 <ferror@plt+0x1a34>
  40335c:	cmp	x14, #0x0
  403360:	mov	w2, #0x7fff                	// #32767
  403364:	mov	x6, #0xffffffffffff        	// #281474976710655
  403368:	csel	w1, w1, w2, ne  // ne = any
  40336c:	csel	x6, x6, xzr, ne  // ne = any
  403370:	csetm	x2, ne  // ne = any
  403374:	b	4031ac <ferror@plt+0x201c>
  403378:	sub	x5, x5, #0x2
  40337c:	add	x1, x1, x9
  403380:	b	402da0 <ferror@plt+0x1c10>
  403384:	sub	x2, x2, #0x2
  403388:	add	x1, x1, x9
  40338c:	b	402dd0 <ferror@plt+0x1c40>
  403390:	cbnz	x14, 40332c <ferror@plt+0x219c>
  403394:	adds	x2, x2, #0x8
  403398:	cinc	x6, x6, cs  // cs = hs, nlast
  40339c:	tbnz	x6, #51, 403330 <ferror@plt+0x21a0>
  4033a0:	b	403130 <ferror@plt+0x1fa0>
  4033a4:	mov	x2, #0x1                   	// #1
  4033a8:	sub	x2, x2, x14
  4033ac:	b	4030c0 <ferror@plt+0x1f30>
  4033b0:	cbnz	x14, 403394 <ferror@plt+0x2204>
  4033b4:	tbnz	x6, #51, 403330 <ferror@plt+0x21a0>
  4033b8:	b	403130 <ferror@plt+0x1fa0>
  4033bc:	orr	w0, w0, #0x10
  4033c0:	b	403330 <ferror@plt+0x21a0>
  4033c4:	nop
  4033c8:	stp	x29, x30, [sp, #-80]!
  4033cc:	mov	x29, sp
  4033d0:	str	q0, [sp, #48]
  4033d4:	str	q1, [sp, #64]
  4033d8:	ldp	x1, x0, [sp, #48]
  4033dc:	ldp	x3, x2, [sp, #64]
  4033e0:	mrs	x12, fpcr
  4033e4:	lsr	x4, x0, #63
  4033e8:	ubfx	x8, x0, #0, #48
  4033ec:	and	w16, w4, #0xff
  4033f0:	mov	x14, x4
  4033f4:	ubfx	x10, x0, #48, #15
  4033f8:	cbz	w10, 40377c <ferror@plt+0x25ec>
  4033fc:	mov	w4, #0x7fff                	// #32767
  403400:	cmp	w10, w4
  403404:	b.eq	4037bc <ferror@plt+0x262c>  // b.none
  403408:	and	x10, x10, #0xffff
  40340c:	extr	x4, x8, x1, #61
  403410:	mov	x5, #0xffffffffffffc001    	// #-16383
  403414:	orr	x8, x4, #0x8000000000000
  403418:	add	x10, x10, x5
  40341c:	lsl	x7, x1, #3
  403420:	mov	x11, #0x2                   	// #2
  403424:	mov	x9, #0x1                   	// #1
  403428:	mov	x6, #0x3                   	// #3
  40342c:	mov	x1, #0x0                   	// #0
  403430:	mov	x17, #0x0                   	// #0
  403434:	mov	w0, #0x0                   	// #0
  403438:	lsr	x5, x2, #63
  40343c:	ubfx	x4, x2, #0, #48
  403440:	and	w15, w5, #0xff
  403444:	mov	x13, x5
  403448:	ubfx	x5, x2, #48, #15
  40344c:	cbz	w5, 403800 <ferror@plt+0x2670>
  403450:	mov	w9, #0x7fff                	// #32767
  403454:	cmp	w5, w9
  403458:	b.eq	4034e8 <ferror@plt+0x2358>  // b.none
  40345c:	and	x5, x5, #0xffff
  403460:	extr	x2, x4, x3, #61
  403464:	mov	x4, #0xffffffffffffc001    	// #-16383
  403468:	add	x5, x5, x4
  40346c:	add	x10, x10, x5
  403470:	orr	x4, x2, #0x8000000000000
  403474:	lsl	x5, x3, #3
  403478:	mov	x6, #0x0                   	// #0
  40347c:	eor	w3, w16, w15
  403480:	cmp	x1, #0xa
  403484:	and	w11, w3, #0xff
  403488:	and	x9, x3, #0xff
  40348c:	add	x18, x10, #0x1
  403490:	b.gt	403768 <ferror@plt+0x25d8>
  403494:	cmp	x1, #0x2
  403498:	b.gt	403528 <ferror@plt+0x2398>
  40349c:	sub	x1, x1, #0x1
  4034a0:	cmp	x1, #0x1
  4034a4:	b.hi	403588 <ferror@plt+0x23f8>  // b.pmore
  4034a8:	cmp	x6, #0x2
  4034ac:	b.eq	403844 <ferror@plt+0x26b4>  // b.none
  4034b0:	cmp	x6, #0x1
  4034b4:	b.ne	4036e8 <ferror@plt+0x2558>  // b.any
  4034b8:	mov	w1, #0x0                   	// #0
  4034bc:	mov	x4, #0x0                   	// #0
  4034c0:	mov	x7, #0x0                   	// #0
  4034c4:	mov	x3, #0x0                   	// #0
  4034c8:	orr	w1, w1, w11, lsl #15
  4034cc:	bfxil	x3, x4, #0, #48
  4034d0:	fmov	d0, x7
  4034d4:	bfi	x3, x1, #48, #16
  4034d8:	fmov	v0.d[1], x3
  4034dc:	cbnz	w0, 4039f0 <ferror@plt+0x2860>
  4034e0:	ldp	x29, x30, [sp], #80
  4034e4:	ret
  4034e8:	mov	x2, #0x7fff                	// #32767
  4034ec:	orr	x5, x4, x3
  4034f0:	add	x2, x10, x2
  4034f4:	cbz	x5, 403854 <ferror@plt+0x26c4>
  4034f8:	ands	x1, x4, #0x800000000000
  4034fc:	eor	w9, w16, w15
  403500:	csinc	w0, w0, wzr, ne  // ne = any
  403504:	and	w11, w9, #0xff
  403508:	add	x18, x10, #0x8, lsl #12
  40350c:	cmp	x6, #0xa
  403510:	and	x9, x9, #0xff
  403514:	b.gt	40394c <ferror@plt+0x27bc>
  403518:	mov	x10, x2
  40351c:	mov	x5, x3
  403520:	mov	x1, x6
  403524:	mov	x6, #0x3                   	// #3
  403528:	mov	x2, #0x1                   	// #1
  40352c:	mov	x3, #0x530                 	// #1328
  403530:	lsl	x1, x2, x1
  403534:	tst	x1, x3
  403538:	b.ne	40375c <ferror@plt+0x25cc>  // b.any
  40353c:	mov	x3, #0x240                 	// #576
  403540:	tst	x1, x3
  403544:	b.ne	403744 <ferror@plt+0x25b4>  // b.any
  403548:	mov	x2, #0x88                  	// #136
  40354c:	tst	x1, x2
  403550:	b.eq	403588 <ferror@plt+0x23f8>  // b.none
  403554:	mov	x8, x4
  403558:	mov	x7, x5
  40355c:	mov	x17, x6
  403560:	cmp	x17, #0x2
  403564:	b.eq	403b9c <ferror@plt+0x2a0c>  // b.none
  403568:	mov	x6, x17
  40356c:	mov	w11, w15
  403570:	cmp	x17, #0x3
  403574:	mov	x4, x8
  403578:	mov	x5, x7
  40357c:	mov	x9, x13
  403580:	b.ne	4034b0 <ferror@plt+0x2320>  // b.any
  403584:	b	403994 <ferror@plt+0x2804>
  403588:	lsr	x13, x7, #32
  40358c:	and	x6, x5, #0xffffffff
  403590:	and	x17, x4, #0xffffffff
  403594:	and	x7, x7, #0xffffffff
  403598:	stp	x21, x22, [sp, #32]
  40359c:	lsr	x22, x5, #32
  4035a0:	lsr	x2, x4, #32
  4035a4:	stp	x19, x20, [sp, #16]
  4035a8:	mul	x19, x13, x6
  4035ac:	lsr	x4, x8, #32
  4035b0:	mul	x1, x13, x17
  4035b4:	and	x3, x8, #0xffffffff
  4035b8:	madd	x5, x22, x7, x19
  4035bc:	mov	x14, #0x100000000           	// #4294967296
  4035c0:	mul	x15, x6, x7
  4035c4:	mul	x16, x7, x17
  4035c8:	madd	x7, x2, x7, x1
  4035cc:	and	x30, x15, #0xffffffff
  4035d0:	mul	x21, x4, x6
  4035d4:	add	x15, x5, x15, lsr #32
  4035d8:	mul	x20, x4, x17
  4035dc:	cmp	x19, x15
  4035e0:	mul	x5, x13, x22
  4035e4:	add	x30, x30, x15, lsl #32
  4035e8:	mul	x19, x13, x2
  4035ec:	add	x13, x7, x16, lsr #32
  4035f0:	mul	x6, x6, x3
  4035f4:	add	x8, x5, x14
  4035f8:	mul	x17, x3, x17
  4035fc:	csel	x5, x8, x5, hi  // hi = pmore
  403600:	madd	x7, x22, x3, x21
  403604:	cmp	x1, x13
  403608:	madd	x3, x2, x3, x20
  40360c:	and	x16, x16, #0xffffffff
  403610:	mul	x8, x22, x4
  403614:	add	x16, x16, x13, lsl #32
  403618:	add	x7, x7, x6, lsr #32
  40361c:	mul	x2, x2, x4
  403620:	add	x3, x3, x17, lsr #32
  403624:	add	x4, x19, x14
  403628:	csel	x19, x4, x19, hi  // hi = pmore
  40362c:	and	x1, x17, #0xffffffff
  403630:	cmp	x21, x7
  403634:	add	x4, x8, x14
  403638:	csel	x8, x4, x8, hi  // hi = pmore
  40363c:	add	x1, x1, x3, lsl #32
  403640:	cmp	x20, x3
  403644:	add	x15, x16, x15, lsr #32
  403648:	add	x13, x19, x13, lsr #32
  40364c:	add	x14, x2, x14
  403650:	add	x15, x5, x15
  403654:	csel	x2, x14, x2, hi  // hi = pmore
  403658:	adds	x1, x1, x13
  40365c:	and	x6, x6, #0xffffffff
  403660:	cset	x5, cs  // cs = hs, nlast
  403664:	cmp	x15, x16
  403668:	cset	x4, cc  // cc = lo, ul, last
  40366c:	add	x6, x6, x7, lsl #32
  403670:	adds	x1, x1, x4
  403674:	lsr	x3, x3, #32
  403678:	cset	x4, cs  // cs = hs, nlast
  40367c:	cmp	x5, #0x0
  403680:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  403684:	add	x7, x8, x7, lsr #32
  403688:	cinc	x3, x3, ne  // ne = any
  40368c:	adds	x5, x15, x6
  403690:	cset	x4, cs  // cs = hs, nlast
  403694:	adds	x1, x1, x7
  403698:	cset	x6, cs  // cs = hs, nlast
  40369c:	adds	x1, x1, x4
  4036a0:	cset	x4, cs  // cs = hs, nlast
  4036a4:	cmp	x6, #0x0
  4036a8:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  4036ac:	orr	x30, x30, x5, lsl #13
  4036b0:	cinc	x2, x2, ne  // ne = any
  4036b4:	cmp	x30, #0x0
  4036b8:	add	x2, x2, x3
  4036bc:	cset	x3, ne  // ne = any
  4036c0:	orr	x5, x3, x5, lsr #51
  4036c4:	orr	x5, x5, x1, lsl #13
  4036c8:	extr	x4, x2, x1, #51
  4036cc:	tbz	x2, #39, 403a78 <ferror@plt+0x28e8>
  4036d0:	ldp	x19, x20, [sp, #16]
  4036d4:	and	x1, x5, #0x1
  4036d8:	ldp	x21, x22, [sp, #32]
  4036dc:	orr	x5, x1, x5, lsr #1
  4036e0:	orr	x5, x5, x4, lsl #63
  4036e4:	lsr	x4, x4, #1
  4036e8:	mov	x1, #0x3fff                	// #16383
  4036ec:	add	x2, x18, x1
  4036f0:	cmp	x2, #0x0
  4036f4:	b.le	4038c8 <ferror@plt+0x2738>
  4036f8:	tst	x5, #0x7
  4036fc:	b.eq	40371c <ferror@plt+0x258c>  // b.none
  403700:	and	x1, x12, #0xc00000
  403704:	orr	w0, w0, #0x10
  403708:	cmp	x1, #0x400, lsl #12
  40370c:	b.eq	403b50 <ferror@plt+0x29c0>  // b.none
  403710:	cmp	x1, #0x800, lsl #12
  403714:	b.eq	403ae0 <ferror@plt+0x2950>  // b.none
  403718:	cbz	x1, 403b0c <ferror@plt+0x297c>
  40371c:	tbz	x4, #52, 403728 <ferror@plt+0x2598>
  403720:	and	x4, x4, #0xffefffffffffffff
  403724:	add	x2, x18, #0x4, lsl #12
  403728:	mov	x1, #0x7ffe                	// #32766
  40372c:	cmp	x2, x1
  403730:	b.gt	403a4c <ferror@plt+0x28bc>
  403734:	and	w1, w2, #0x7fff
  403738:	extr	x7, x4, x5, #3
  40373c:	ubfx	x4, x4, #3, #48
  403740:	b	4034c4 <ferror@plt+0x2334>
  403744:	mov	w0, w2
  403748:	mov	w11, #0x0                   	// #0
  40374c:	mov	x4, #0xffffffffffff        	// #281474976710655
  403750:	mov	x7, #0xffffffffffffffff    	// #-1
  403754:	mov	w1, #0x7fff                	// #32767
  403758:	b	4034c4 <ferror@plt+0x2334>
  40375c:	mov	w15, w11
  403760:	mov	x13, x9
  403764:	b	403560 <ferror@plt+0x23d0>
  403768:	cmp	x1, #0xb
  40376c:	b.eq	403554 <ferror@plt+0x23c4>  // b.none
  403770:	mov	w15, w16
  403774:	mov	x13, x14
  403778:	b	403560 <ferror@plt+0x23d0>
  40377c:	orr	x7, x8, x1
  403780:	cbz	x7, 4038a4 <ferror@plt+0x2714>
  403784:	cbz	x8, 403a04 <ferror@plt+0x2874>
  403788:	clz	x0, x8
  40378c:	sub	x4, x0, #0xf
  403790:	add	w7, w4, #0x3
  403794:	mov	w5, #0x3d                  	// #61
  403798:	sub	w5, w5, w4
  40379c:	lsl	x4, x8, x7
  4037a0:	lsr	x5, x1, x5
  4037a4:	orr	x8, x5, x4
  4037a8:	lsl	x7, x1, x7
  4037ac:	mov	x10, #0xffffffffffffc011    	// #-16367
  4037b0:	mov	x11, #0x2                   	// #2
  4037b4:	sub	x10, x10, x0
  4037b8:	b	403424 <ferror@plt+0x2294>
  4037bc:	orr	x7, x8, x1
  4037c0:	cbnz	x7, 403878 <ferror@plt+0x26e8>
  4037c4:	lsr	x5, x2, #63
  4037c8:	ubfx	x4, x2, #0, #48
  4037cc:	and	w15, w5, #0xff
  4037d0:	mov	x13, x5
  4037d4:	mov	x8, #0x0                   	// #0
  4037d8:	ubfx	x5, x2, #48, #15
  4037dc:	mov	x11, #0xa                   	// #10
  4037e0:	mov	x9, #0x9                   	// #9
  4037e4:	mov	x6, #0xb                   	// #11
  4037e8:	mov	x1, #0x8                   	// #8
  4037ec:	mov	x10, #0x7fff                	// #32767
  4037f0:	mov	x17, #0x2                   	// #2
  4037f4:	mov	w0, #0x0                   	// #0
  4037f8:	cbnz	w5, 403450 <ferror@plt+0x22c0>
  4037fc:	nop
  403800:	orr	x5, x4, x3
  403804:	cbz	x5, 403868 <ferror@plt+0x26d8>
  403808:	cbz	x4, 403a28 <ferror@plt+0x2898>
  40380c:	clz	x6, x4
  403810:	sub	x2, x6, #0xf
  403814:	add	w5, w2, #0x3
  403818:	mov	w9, #0x3d                  	// #61
  40381c:	sub	w9, w9, w2
  403820:	lsl	x2, x4, x5
  403824:	lsr	x9, x3, x9
  403828:	orr	x4, x9, x2
  40382c:	lsl	x5, x3, x5
  403830:	sub	x10, x10, x6
  403834:	mov	x3, #0xffffffffffffc011    	// #-16367
  403838:	mov	x6, #0x0                   	// #0
  40383c:	add	x10, x10, x3
  403840:	b	40347c <ferror@plt+0x22ec>
  403844:	mov	w1, #0x7fff                	// #32767
  403848:	mov	x4, #0x0                   	// #0
  40384c:	mov	x7, #0x0                   	// #0
  403850:	b	4034c4 <ferror@plt+0x2334>
  403854:	mov	x1, x11
  403858:	mov	x10, x2
  40385c:	mov	x4, #0x0                   	// #0
  403860:	mov	x6, #0x2                   	// #2
  403864:	b	40347c <ferror@plt+0x22ec>
  403868:	mov	x1, x9
  40386c:	mov	x4, #0x0                   	// #0
  403870:	mov	x6, #0x1                   	// #1
  403874:	b	40347c <ferror@plt+0x22ec>
  403878:	lsr	x0, x8, #47
  40387c:	mov	x7, x1
  403880:	eor	x0, x0, #0x1
  403884:	mov	x11, #0xe                   	// #14
  403888:	and	w0, w0, #0x1
  40388c:	mov	x9, #0xd                   	// #13
  403890:	mov	x6, #0xf                   	// #15
  403894:	mov	x1, #0xc                   	// #12
  403898:	mov	x10, #0x7fff                	// #32767
  40389c:	mov	x17, #0x3                   	// #3
  4038a0:	b	403438 <ferror@plt+0x22a8>
  4038a4:	mov	x8, #0x0                   	// #0
  4038a8:	mov	x11, #0x6                   	// #6
  4038ac:	mov	x9, #0x5                   	// #5
  4038b0:	mov	x6, #0x7                   	// #7
  4038b4:	mov	x1, #0x4                   	// #4
  4038b8:	mov	x10, #0x0                   	// #0
  4038bc:	mov	x17, #0x1                   	// #1
  4038c0:	mov	w0, #0x0                   	// #0
  4038c4:	b	403438 <ferror@plt+0x22a8>
  4038c8:	mov	x1, #0x1                   	// #1
  4038cc:	sub	x2, x1, x2
  4038d0:	cmp	x2, #0x74
  4038d4:	b.gt	4039a8 <ferror@plt+0x2818>
  4038d8:	cmp	x2, #0x3f
  4038dc:	b.le	403a88 <ferror@plt+0x28f8>
  4038e0:	mov	w1, #0x80                  	// #128
  4038e4:	sub	w1, w1, w2
  4038e8:	cmp	x2, #0x40
  4038ec:	sub	w2, w2, #0x40
  4038f0:	lsl	x1, x4, x1
  4038f4:	orr	x1, x5, x1
  4038f8:	csel	x5, x1, x5, ne  // ne = any
  4038fc:	lsr	x2, x4, x2
  403900:	cmp	x5, #0x0
  403904:	cset	x7, ne  // ne = any
  403908:	orr	x7, x7, x2
  40390c:	ands	x4, x7, #0x7
  403910:	b.eq	403abc <ferror@plt+0x292c>  // b.none
  403914:	mov	x4, #0x0                   	// #0
  403918:	and	x12, x12, #0xc00000
  40391c:	orr	w0, w0, #0x10
  403920:	cmp	x12, #0x400, lsl #12
  403924:	b.eq	403b88 <ferror@plt+0x29f8>  // b.none
  403928:	cmp	x12, #0x800, lsl #12
  40392c:	b.eq	403b74 <ferror@plt+0x29e4>  // b.none
  403930:	cbz	x12, 403b24 <ferror@plt+0x2994>
  403934:	tbnz	x4, #51, 403b3c <ferror@plt+0x29ac>
  403938:	orr	w0, w0, #0x8
  40393c:	extr	x7, x4, x7, #3
  403940:	mov	w1, #0x0                   	// #0
  403944:	ubfx	x4, x4, #3, #48
  403948:	b	4039d8 <ferror@plt+0x2848>
  40394c:	cmp	x6, #0xf
  403950:	b.ne	403984 <ferror@plt+0x27f4>  // b.any
  403954:	tbz	x8, #47, 403970 <ferror@plt+0x27e0>
  403958:	cbnz	x1, 403970 <ferror@plt+0x27e0>
  40395c:	orr	x4, x4, #0x800000000000
  403960:	mov	w11, w15
  403964:	mov	x7, x3
  403968:	mov	w1, #0x7fff                	// #32767
  40396c:	b	4034c4 <ferror@plt+0x2334>
  403970:	orr	x4, x8, #0x800000000000
  403974:	mov	w11, w16
  403978:	and	x4, x4, #0xffffffffffff
  40397c:	mov	w1, #0x7fff                	// #32767
  403980:	b	4034c4 <ferror@plt+0x2334>
  403984:	cmp	x6, #0xb
  403988:	b.ne	403770 <ferror@plt+0x25e0>  // b.any
  40398c:	mov	w11, w15
  403990:	mov	x5, x3
  403994:	orr	x4, x4, #0x800000000000
  403998:	mov	x7, x5
  40399c:	and	x4, x4, #0xffffffffffff
  4039a0:	mov	w1, #0x7fff                	// #32767
  4039a4:	b	4034c4 <ferror@plt+0x2334>
  4039a8:	orr	x7, x5, x4
  4039ac:	cbz	x7, 4039cc <ferror@plt+0x283c>
  4039b0:	and	x12, x12, #0xc00000
  4039b4:	orr	w0, w0, #0x10
  4039b8:	cmp	x12, #0x400, lsl #12
  4039bc:	sub	x7, x1, x9
  4039c0:	b.eq	4039cc <ferror@plt+0x283c>  // b.none
  4039c4:	cmp	x12, #0x800, lsl #12
  4039c8:	csel	x7, x9, xzr, eq  // eq = none
  4039cc:	orr	w0, w0, #0x8
  4039d0:	mov	w1, #0x0                   	// #0
  4039d4:	mov	x4, #0x0                   	// #0
  4039d8:	mov	x3, #0x0                   	// #0
  4039dc:	fmov	d0, x7
  4039e0:	bfxil	x3, x4, #0, #48
  4039e4:	bfi	x3, x1, #48, #15
  4039e8:	bfi	x3, x11, #63, #1
  4039ec:	fmov	v0.d[1], x3
  4039f0:	str	q0, [sp, #48]
  4039f4:	bl	403f50 <ferror@plt+0x2dc0>
  4039f8:	ldr	q0, [sp, #48]
  4039fc:	ldp	x29, x30, [sp], #80
  403a00:	ret
  403a04:	clz	x10, x1
  403a08:	add	x4, x10, #0x31
  403a0c:	add	x0, x10, #0x40
  403a10:	cmp	x4, #0x3c
  403a14:	b.le	403790 <ferror@plt+0x2600>
  403a18:	sub	w4, w4, #0x3d
  403a1c:	mov	x7, #0x0                   	// #0
  403a20:	lsl	x8, x1, x4
  403a24:	b	4037ac <ferror@plt+0x261c>
  403a28:	clz	x6, x3
  403a2c:	add	x2, x6, #0x31
  403a30:	add	x6, x6, #0x40
  403a34:	cmp	x2, #0x3c
  403a38:	b.le	403814 <ferror@plt+0x2684>
  403a3c:	sub	w2, w2, #0x3d
  403a40:	mov	x5, #0x0                   	// #0
  403a44:	lsl	x4, x3, x2
  403a48:	b	403830 <ferror@plt+0x26a0>
  403a4c:	and	x7, x12, #0xc00000
  403a50:	cmp	x7, #0x400, lsl #12
  403a54:	b.eq	403b58 <ferror@plt+0x29c8>  // b.none
  403a58:	cmp	x7, #0x800, lsl #12
  403a5c:	b.eq	403af0 <ferror@plt+0x2960>  // b.none
  403a60:	cbz	x7, 403ad4 <ferror@plt+0x2944>
  403a64:	mov	x4, #0xffffffffffff        	// #281474976710655
  403a68:	mov	x7, #0xffffffffffffffff    	// #-1
  403a6c:	mov	w2, #0x14                  	// #20
  403a70:	orr	w0, w0, w2
  403a74:	b	4039d8 <ferror@plt+0x2848>
  403a78:	mov	x18, x10
  403a7c:	ldp	x19, x20, [sp, #16]
  403a80:	ldp	x21, x22, [sp, #32]
  403a84:	b	4036e8 <ferror@plt+0x2558>
  403a88:	mov	w1, #0x40                  	// #64
  403a8c:	sub	w1, w1, w2
  403a90:	lsr	x3, x5, x2
  403a94:	lsl	x5, x5, x1
  403a98:	cmp	x5, #0x0
  403a9c:	lsl	x7, x4, x1
  403aa0:	cset	x1, ne  // ne = any
  403aa4:	orr	x7, x7, x3
  403aa8:	lsr	x4, x4, x2
  403aac:	orr	x7, x7, x1
  403ab0:	tst	x7, #0x7
  403ab4:	b.ne	403918 <ferror@plt+0x2788>  // b.any
  403ab8:	tbnz	x4, #51, 403b94 <ferror@plt+0x2a04>
  403abc:	mov	w1, #0x0                   	// #0
  403ac0:	extr	x7, x4, x7, #3
  403ac4:	ubfx	x4, x4, #3, #48
  403ac8:	tbz	w12, #11, 4034c4 <ferror@plt+0x2334>
  403acc:	orr	w0, w0, #0x8
  403ad0:	b	4039d8 <ferror@plt+0x2848>
  403ad4:	mov	w1, #0x7fff                	// #32767
  403ad8:	mov	x4, #0x0                   	// #0
  403adc:	b	403a6c <ferror@plt+0x28dc>
  403ae0:	cbz	x9, 40371c <ferror@plt+0x258c>
  403ae4:	adds	x5, x5, #0x8
  403ae8:	cinc	x4, x4, cs  // cs = hs, nlast
  403aec:	b	40371c <ferror@plt+0x258c>
  403af0:	cmp	x9, #0x0
  403af4:	mov	w2, #0x7fff                	// #32767
  403af8:	mov	x4, #0xffffffffffff        	// #281474976710655
  403afc:	csel	w1, w1, w2, eq  // eq = none
  403b00:	csel	x4, x4, xzr, eq  // eq = none
  403b04:	csetm	x7, eq  // eq = none
  403b08:	b	403a6c <ferror@plt+0x28dc>
  403b0c:	and	x1, x5, #0xf
  403b10:	cmp	x1, #0x4
  403b14:	b.eq	40371c <ferror@plt+0x258c>  // b.none
  403b18:	adds	x5, x5, #0x4
  403b1c:	cinc	x4, x4, cs  // cs = hs, nlast
  403b20:	b	40371c <ferror@plt+0x258c>
  403b24:	and	x1, x7, #0xf
  403b28:	cmp	x1, #0x4
  403b2c:	b.eq	403b38 <ferror@plt+0x29a8>  // b.none
  403b30:	adds	x7, x7, #0x4
  403b34:	cinc	x4, x4, cs  // cs = hs, nlast
  403b38:	tbz	x4, #51, 403938 <ferror@plt+0x27a8>
  403b3c:	orr	w0, w0, #0x8
  403b40:	mov	w1, #0x1                   	// #1
  403b44:	mov	x4, #0x0                   	// #0
  403b48:	mov	x7, #0x0                   	// #0
  403b4c:	b	4039d8 <ferror@plt+0x2848>
  403b50:	cbnz	x9, 40371c <ferror@plt+0x258c>
  403b54:	b	403ae4 <ferror@plt+0x2954>
  403b58:	cmp	x9, #0x0
  403b5c:	mov	w2, #0x7fff                	// #32767
  403b60:	mov	x4, #0xffffffffffff        	// #281474976710655
  403b64:	csel	w1, w1, w2, ne  // ne = any
  403b68:	csel	x4, x4, xzr, ne  // ne = any
  403b6c:	csetm	x7, ne  // ne = any
  403b70:	b	403a6c <ferror@plt+0x28dc>
  403b74:	cbz	x9, 403b38 <ferror@plt+0x29a8>
  403b78:	adds	x7, x7, #0x8
  403b7c:	cinc	x4, x4, cs  // cs = hs, nlast
  403b80:	tbnz	x4, #51, 403b3c <ferror@plt+0x29ac>
  403b84:	b	403938 <ferror@plt+0x27a8>
  403b88:	cbz	x9, 403b78 <ferror@plt+0x29e8>
  403b8c:	tbnz	x4, #51, 403b3c <ferror@plt+0x29ac>
  403b90:	b	403938 <ferror@plt+0x27a8>
  403b94:	orr	w0, w0, #0x10
  403b98:	b	403b3c <ferror@plt+0x29ac>
  403b9c:	mov	w11, w15
  403ba0:	mov	w1, #0x7fff                	// #32767
  403ba4:	mov	x4, #0x0                   	// #0
  403ba8:	mov	x7, #0x0                   	// #0
  403bac:	b	4034c4 <ferror@plt+0x2334>
  403bb0:	cmp	w0, #0x0
  403bb4:	cbz	w0, 403c00 <ferror@plt+0x2a70>
  403bb8:	cneg	w1, w0, lt  // lt = tstop
  403bbc:	mov	w4, #0x403e                	// #16446
  403bc0:	clz	x3, x1
  403bc4:	mov	w2, #0x402f                	// #16431
  403bc8:	sub	w4, w4, w3
  403bcc:	lsr	w0, w0, #31
  403bd0:	sub	w2, w2, w4
  403bd4:	mov	x3, #0x0                   	// #0
  403bd8:	and	w4, w4, #0x7fff
  403bdc:	lsl	x1, x1, x2
  403be0:	and	x1, x1, #0xffffffffffff
  403be4:	orr	w0, w4, w0, lsl #15
  403be8:	mov	x2, #0x0                   	// #0
  403bec:	bfxil	x3, x1, #0, #48
  403bf0:	fmov	d0, x2
  403bf4:	bfi	x3, x0, #48, #16
  403bf8:	fmov	v0.d[1], x3
  403bfc:	ret
  403c00:	mov	w4, #0x0                   	// #0
  403c04:	mov	x1, #0x0                   	// #0
  403c08:	mov	w0, #0x0                   	// #0
  403c0c:	mov	x3, #0x0                   	// #0
  403c10:	orr	w0, w4, w0, lsl #15
  403c14:	bfxil	x3, x1, #0, #48
  403c18:	mov	x2, #0x0                   	// #0
  403c1c:	fmov	d0, x2
  403c20:	bfi	x3, x0, #48, #16
  403c24:	fmov	v0.d[1], x3
  403c28:	ret
  403c2c:	nop
  403c30:	stp	x29, x30, [sp, #-48]!
  403c34:	mov	x29, sp
  403c38:	str	x19, [sp, #16]
  403c3c:	str	q0, [sp, #32]
  403c40:	ldp	x3, x0, [sp, #32]
  403c44:	mrs	x6, fpcr
  403c48:	ubfx	x2, x0, #48, #15
  403c4c:	lsr	x4, x0, #63
  403c50:	add	x1, x2, #0x1
  403c54:	ubfiz	x0, x0, #3, #48
  403c58:	tst	x1, #0x7ffe
  403c5c:	and	w4, w4, #0xff
  403c60:	orr	x0, x0, x3, lsr #61
  403c64:	lsl	x5, x3, #3
  403c68:	b.eq	403ce8 <ferror@plt+0x2b58>  // b.none
  403c6c:	mov	x1, #0xffffffffffffc400    	// #-15360
  403c70:	add	x2, x2, x1
  403c74:	cmp	x2, #0x7fe
  403c78:	b.le	403d50 <ferror@plt+0x2bc0>
  403c7c:	ands	x0, x6, #0xc00000
  403c80:	b.eq	403de8 <ferror@plt+0x2c58>  // b.none
  403c84:	cmp	x0, #0x400, lsl #12
  403c88:	b.eq	403f08 <ferror@plt+0x2d78>  // b.none
  403c8c:	cmp	x0, #0x800, lsl #12
  403c90:	csel	w7, w4, wzr, eq  // eq = none
  403c94:	cbnz	w7, 403de8 <ferror@plt+0x2c58>
  403c98:	mov	w0, #0x14                  	// #20
  403c9c:	mov	x1, #0xffffffffffffffff    	// #-1
  403ca0:	mov	x2, #0x7fe                 	// #2046
  403ca4:	b.ne	403d94 <ferror@plt+0x2c04>  // b.any
  403ca8:	cmp	w4, #0x0
  403cac:	add	x3, x1, #0x8
  403cb0:	csel	x1, x3, x1, ne  // ne = any
  403cb4:	and	x3, x1, #0x80000000000000
  403cb8:	cbnz	w7, 403d9c <ferror@plt+0x2c0c>
  403cbc:	cbnz	x3, 403da4 <ferror@plt+0x2c14>
  403cc0:	lsr	x1, x1, #3
  403cc4:	and	w3, w2, #0x7ff
  403cc8:	and	x4, x4, #0xff
  403ccc:	bfi	x1, x3, #52, #12
  403cd0:	orr	x19, x1, x4, lsl #63
  403cd4:	bl	403f50 <ferror@plt+0x2dc0>
  403cd8:	fmov	d0, x19
  403cdc:	ldr	x19, [sp, #16]
  403ce0:	ldp	x29, x30, [sp], #48
  403ce4:	ret
  403ce8:	orr	x1, x0, x5
  403cec:	cbnz	x2, 403d04 <ferror@plt+0x2b74>
  403cf0:	cbnz	x1, 403dc0 <ferror@plt+0x2c30>
  403cf4:	mov	w2, #0x0                   	// #0
  403cf8:	mov	w0, #0x0                   	// #0
  403cfc:	mov	x1, #0x0                   	// #0
  403d00:	b	403d30 <ferror@plt+0x2ba0>
  403d04:	cbz	x1, 403df8 <ferror@plt+0x2c68>
  403d08:	mov	x3, #0x7fff                	// #32767
  403d0c:	extr	x1, x0, x5, #60
  403d10:	lsr	x0, x0, #50
  403d14:	cmp	x2, x3
  403d18:	lsr	x1, x1, #3
  403d1c:	eor	w0, w0, #0x1
  403d20:	orr	x1, x1, #0x8000000000000
  403d24:	csel	w0, w0, wzr, eq  // eq = none
  403d28:	mov	w2, #0x7ff                 	// #2047
  403d2c:	nop
  403d30:	and	x4, x4, #0xff
  403d34:	bfi	x1, x2, #52, #12
  403d38:	orr	x19, x1, x4, lsl #63
  403d3c:	cbnz	w0, 403cd4 <ferror@plt+0x2b44>
  403d40:	fmov	d0, x19
  403d44:	ldr	x19, [sp, #16]
  403d48:	ldp	x29, x30, [sp], #48
  403d4c:	ret
  403d50:	cmp	x2, #0x0
  403d54:	b.le	403e08 <ferror@plt+0x2c78>
  403d58:	cmp	xzr, x3, lsl #7
  403d5c:	mov	w7, #0x0                   	// #0
  403d60:	cset	x1, ne  // ne = any
  403d64:	orr	x5, x1, x5, lsr #60
  403d68:	orr	x1, x5, x0, lsl #4
  403d6c:	mov	w0, #0x0                   	// #0
  403d70:	tst	x5, #0x7
  403d74:	b.eq	403ec0 <ferror@plt+0x2d30>  // b.none
  403d78:	and	x3, x6, #0xc00000
  403d7c:	cmp	x3, #0x400, lsl #12
  403d80:	b.eq	403dd8 <ferror@plt+0x2c48>  // b.none
  403d84:	cmp	x3, #0x800, lsl #12
  403d88:	mov	w0, #0x10                  	// #16
  403d8c:	b.eq	403ca8 <ferror@plt+0x2b18>  // b.none
  403d90:	cbz	x3, 403ecc <ferror@plt+0x2d3c>
  403d94:	and	x3, x1, #0x80000000000000
  403d98:	cbz	w7, 403da0 <ferror@plt+0x2c10>
  403d9c:	orr	w0, w0, #0x8
  403da0:	cbz	x3, 403ec0 <ferror@plt+0x2d30>
  403da4:	cmp	x2, #0x7fe
  403da8:	add	x2, x2, #0x1
  403dac:	b.eq	403e68 <ferror@plt+0x2cd8>  // b.none
  403db0:	mov	x3, #0x1fefffffffffffff    	// #2301339409586323455
  403db4:	and	w2, w2, #0x7ff
  403db8:	and	x1, x3, x1, lsr #3
  403dbc:	b	403d30 <ferror@plt+0x2ba0>
  403dc0:	and	x3, x6, #0xc00000
  403dc4:	mov	w7, #0x1                   	// #1
  403dc8:	cmp	x3, #0x400, lsl #12
  403dcc:	mov	x2, #0x0                   	// #0
  403dd0:	mov	x1, #0x1                   	// #1
  403dd4:	b.ne	403d84 <ferror@plt+0x2bf4>  // b.any
  403dd8:	cbnz	w4, 403de0 <ferror@plt+0x2c50>
  403ddc:	add	x1, x1, #0x8
  403de0:	mov	w0, #0x10                  	// #16
  403de4:	b	403cb4 <ferror@plt+0x2b24>
  403de8:	mov	w2, #0x7ff                 	// #2047
  403dec:	mov	w0, #0x14                  	// #20
  403df0:	mov	x1, #0x0                   	// #0
  403df4:	b	403d30 <ferror@plt+0x2ba0>
  403df8:	mov	w2, #0x7ff                 	// #2047
  403dfc:	mov	w0, #0x0                   	// #0
  403e00:	mov	x1, #0x0                   	// #0
  403e04:	b	403d30 <ferror@plt+0x2ba0>
  403e08:	cmn	x2, #0x34
  403e0c:	b.lt	403dc0 <ferror@plt+0x2c30>  // b.tstop
  403e10:	mov	x3, #0x3d                  	// #61
  403e14:	sub	x7, x3, x2
  403e18:	orr	x0, x0, #0x8000000000000
  403e1c:	cmp	x7, #0x3f
  403e20:	b.le	403ee0 <ferror@plt+0x2d50>
  403e24:	add	w1, w2, #0x43
  403e28:	cmp	x7, #0x40
  403e2c:	mov	w3, #0xfffffffd            	// #-3
  403e30:	sub	w2, w3, w2
  403e34:	lsl	x1, x0, x1
  403e38:	orr	x1, x5, x1
  403e3c:	csel	x5, x1, x5, ne  // ne = any
  403e40:	lsr	x0, x0, x2
  403e44:	cmp	x5, #0x0
  403e48:	cset	x1, ne  // ne = any
  403e4c:	orr	x1, x1, x0
  403e50:	cmp	x1, #0x0
  403e54:	cset	w7, ne  // ne = any
  403e58:	tst	x1, #0x7
  403e5c:	b.eq	403ea4 <ferror@plt+0x2d14>  // b.none
  403e60:	mov	x2, #0x0                   	// #0
  403e64:	b	403d78 <ferror@plt+0x2be8>
  403e68:	mov	w3, w2
  403e6c:	ands	x1, x6, #0xc00000
  403e70:	b.eq	403e98 <ferror@plt+0x2d08>  // b.none
  403e74:	cmp	x1, #0x400, lsl #12
  403e78:	b.eq	403f20 <ferror@plt+0x2d90>  // b.none
  403e7c:	cmp	x1, #0x800, lsl #12
  403e80:	mov	w5, #0x7fe                 	// #2046
  403e84:	csel	w1, w4, wzr, eq  // eq = none
  403e88:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
  403e8c:	cmp	w1, #0x0
  403e90:	csel	w3, w3, w5, ne  // ne = any
  403e94:	csel	x1, xzr, x2, ne  // ne = any
  403e98:	mov	w2, #0x14                  	// #20
  403e9c:	orr	w0, w0, w2
  403ea0:	b	403cc8 <ferror@plt+0x2b38>
  403ea4:	and	x3, x1, #0x80000000000000
  403ea8:	cbnz	x1, 403f38 <ferror@plt+0x2da8>
  403eac:	nop
  403eb0:	mov	w0, #0x0                   	// #0
  403eb4:	mov	x2, #0x1                   	// #1
  403eb8:	cbnz	x3, 403db0 <ferror@plt+0x2c20>
  403ebc:	mov	x2, #0x0                   	// #0
  403ec0:	and	w2, w2, #0x7ff
  403ec4:	lsr	x1, x1, #3
  403ec8:	b	403d30 <ferror@plt+0x2ba0>
  403ecc:	and	x3, x1, #0xf
  403ed0:	cmp	x3, #0x4
  403ed4:	add	x3, x1, #0x4
  403ed8:	csel	x1, x3, x1, ne  // ne = any
  403edc:	b	403cb4 <ferror@plt+0x2b24>
  403ee0:	add	w1, w2, #0x3
  403ee4:	sub	w2, w3, w2
  403ee8:	lsl	x3, x5, x1
  403eec:	cmp	x3, #0x0
  403ef0:	cset	x3, ne  // ne = any
  403ef4:	lsr	x2, x5, x2
  403ef8:	orr	x2, x2, x3
  403efc:	lsl	x0, x0, x1
  403f00:	orr	x1, x0, x2
  403f04:	b	403e50 <ferror@plt+0x2cc0>
  403f08:	cbz	w4, 403de8 <ferror@plt+0x2c58>
  403f0c:	mov	w7, #0x0                   	// #0
  403f10:	mov	w0, #0x14                  	// #20
  403f14:	mov	x2, #0x7fe                 	// #2046
  403f18:	mov	x1, #0xffffffffffffffff    	// #-1
  403f1c:	b	403cb4 <ferror@plt+0x2b24>
  403f20:	cmp	w4, #0x0
  403f24:	mov	w1, #0x7fe                 	// #2046
  403f28:	csel	w3, w2, w1, eq  // eq = none
  403f2c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
  403f30:	csel	x1, xzr, x2, eq  // eq = none
  403f34:	b	403e98 <ferror@plt+0x2d08>
  403f38:	tbz	w6, #11, 403eb0 <ferror@plt+0x2d20>
  403f3c:	mov	w0, #0x0                   	// #0
  403f40:	mov	x2, #0x0                   	// #0
  403f44:	orr	w0, w0, #0x8
  403f48:	b	403da0 <ferror@plt+0x2c10>
  403f4c:	nop
  403f50:	tbz	w0, #0, 403f60 <ferror@plt+0x2dd0>
  403f54:	movi	v1.2s, #0x0
  403f58:	fdiv	s0, s1, s1
  403f5c:	mrs	x1, fpsr
  403f60:	tbz	w0, #1, 403f74 <ferror@plt+0x2de4>
  403f64:	fmov	s1, #1.000000000000000000e+00
  403f68:	movi	v2.2s, #0x0
  403f6c:	fdiv	s0, s1, s2
  403f70:	mrs	x1, fpsr
  403f74:	tbz	w0, #2, 403f94 <ferror@plt+0x2e04>
  403f78:	mov	w2, #0xc5ae                	// #50606
  403f7c:	mov	w1, #0x7f7fffff            	// #2139095039
  403f80:	movk	w2, #0x749d, lsl #16
  403f84:	fmov	s1, w1
  403f88:	fmov	s2, w2
  403f8c:	fadd	s0, s1, s2
  403f90:	mrs	x1, fpsr
  403f94:	tbz	w0, #3, 403fa4 <ferror@plt+0x2e14>
  403f98:	movi	v1.2s, #0x80, lsl #16
  403f9c:	fmul	s0, s1, s1
  403fa0:	mrs	x1, fpsr
  403fa4:	tbz	w0, #4, 403fbc <ferror@plt+0x2e2c>
  403fa8:	mov	w0, #0x7f7fffff            	// #2139095039
  403fac:	fmov	s2, #1.000000000000000000e+00
  403fb0:	fmov	s1, w0
  403fb4:	fsub	s0, s1, s2
  403fb8:	mrs	x0, fpsr
  403fbc:	ret
  403fc0:	stp	x29, x30, [sp, #-64]!
  403fc4:	mov	x29, sp
  403fc8:	stp	x19, x20, [sp, #16]
  403fcc:	adrp	x20, 414000 <ferror@plt+0x12e70>
  403fd0:	add	x20, x20, #0xdd0
  403fd4:	stp	x21, x22, [sp, #32]
  403fd8:	adrp	x21, 414000 <ferror@plt+0x12e70>
  403fdc:	add	x21, x21, #0xdc8
  403fe0:	sub	x20, x20, x21
  403fe4:	mov	w22, w0
  403fe8:	stp	x23, x24, [sp, #48]
  403fec:	mov	x23, x1
  403ff0:	mov	x24, x2
  403ff4:	bl	400f28 <memmove@plt-0x38>
  403ff8:	cmp	xzr, x20, asr #3
  403ffc:	b.eq	404028 <ferror@plt+0x2e98>  // b.none
  404000:	asr	x20, x20, #3
  404004:	mov	x19, #0x0                   	// #0
  404008:	ldr	x3, [x21, x19, lsl #3]
  40400c:	mov	x2, x24
  404010:	add	x19, x19, #0x1
  404014:	mov	x1, x23
  404018:	mov	w0, w22
  40401c:	blr	x3
  404020:	cmp	x20, x19
  404024:	b.ne	404008 <ferror@plt+0x2e78>  // b.any
  404028:	ldp	x19, x20, [sp, #16]
  40402c:	ldp	x21, x22, [sp, #32]
  404030:	ldp	x23, x24, [sp, #48]
  404034:	ldp	x29, x30, [sp], #64
  404038:	ret
  40403c:	nop
  404040:	ret
  404044:	nop
  404048:	adrp	x2, 415000 <ferror@plt+0x13e70>
  40404c:	mov	x1, #0x0                   	// #0
  404050:	ldr	x2, [x2, #296]
  404054:	b	400ff0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000404058 <.fini>:
  404058:	stp	x29, x30, [sp, #-16]!
  40405c:	mov	x29, sp
  404060:	ldp	x29, x30, [sp], #16
  404064:	ret
