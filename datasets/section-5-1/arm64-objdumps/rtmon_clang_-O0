
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rtmon_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404c58 <.init>:
  404c58:	stp	x29, x30, [sp, #-16]!
  404c5c:	mov	x29, sp
  404c60:	bl	405270 <_start@@Base+0x50>
  404c64:	ldp	x29, x30, [sp], #16
  404c68:	ret

Disassembly of section .plt:

0000000000404c70 <memcpy@plt-0x20>:
  404c70:	stp	x16, x30, [sp, #-16]!
  404c74:	adrp	x16, 422000 <_IO_stdin_used@@Base+0x10b00>
  404c78:	ldr	x17, [x16, #4088]
  404c7c:	add	x16, x16, #0xff8
  404c80:	br	x17
  404c84:	nop
  404c88:	nop
  404c8c:	nop

0000000000404c90 <memcpy@plt>:
  404c90:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404c94:	ldr	x17, [x16]
  404c98:	add	x16, x16, #0x0
  404c9c:	br	x17

0000000000404ca0 <recvmsg@plt>:
  404ca0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #8]
  404ca8:	add	x16, x16, #0x8
  404cac:	br	x17

0000000000404cb0 <strtoul@plt>:
  404cb0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #16]
  404cb8:	add	x16, x16, #0x10
  404cbc:	br	x17

0000000000404cc0 <strlen@plt>:
  404cc0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #24]
  404cc8:	add	x16, x16, #0x18
  404ccc:	br	x17

0000000000404cd0 <fputs@plt>:
  404cd0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #32]
  404cd8:	add	x16, x16, #0x20
  404cdc:	br	x17

0000000000404ce0 <exit@plt>:
  404ce0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #40]
  404ce8:	add	x16, x16, #0x28
  404cec:	br	x17

0000000000404cf0 <perror@plt>:
  404cf0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #48]
  404cf8:	add	x16, x16, #0x30
  404cfc:	br	x17

0000000000404d00 <__cmsg_nxthdr@plt>:
  404d00:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #56]
  404d08:	add	x16, x16, #0x38
  404d0c:	br	x17

0000000000404d10 <htonl@plt>:
  404d10:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #64]
  404d18:	add	x16, x16, #0x40
  404d1c:	br	x17

0000000000404d20 <strtoll@plt>:
  404d20:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #72]
  404d28:	add	x16, x16, #0x48
  404d2c:	br	x17

0000000000404d30 <strtod@plt>:
  404d30:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #80]
  404d38:	add	x16, x16, #0x50
  404d3c:	br	x17

0000000000404d40 <geteuid@plt>:
  404d40:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #88]
  404d48:	add	x16, x16, #0x58
  404d4c:	br	x17

0000000000404d50 <sethostent@plt>:
  404d50:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #96]
  404d58:	add	x16, x16, #0x60
  404d5c:	br	x17

0000000000404d60 <bind@plt>:
  404d60:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #104]
  404d68:	add	x16, x16, #0x68
  404d6c:	br	x17

0000000000404d70 <ntohl@plt>:
  404d70:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #112]
  404d78:	add	x16, x16, #0x70
  404d7c:	br	x17

0000000000404d80 <ftell@plt>:
  404d80:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #120]
  404d88:	add	x16, x16, #0x78
  404d8c:	br	x17

0000000000404d90 <sprintf@plt>:
  404d90:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #128]
  404d98:	add	x16, x16, #0x80
  404d9c:	br	x17

0000000000404da0 <getuid@plt>:
  404da0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #136]
  404da8:	add	x16, x16, #0x88
  404dac:	br	x17

0000000000404db0 <putc@plt>:
  404db0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #144]
  404db8:	add	x16, x16, #0x90
  404dbc:	br	x17

0000000000404dc0 <strftime@plt>:
  404dc0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #152]
  404dc8:	add	x16, x16, #0x98
  404dcc:	br	x17

0000000000404dd0 <snprintf@plt>:
  404dd0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #160]
  404dd8:	add	x16, x16, #0xa0
  404ddc:	br	x17

0000000000404de0 <fileno@plt>:
  404de0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #168]
  404de8:	add	x16, x16, #0xa8
  404dec:	br	x17

0000000000404df0 <localtime@plt>:
  404df0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #176]
  404df8:	add	x16, x16, #0xb0
  404dfc:	br	x17

0000000000404e00 <fclose@plt>:
  404e00:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #184]
  404e08:	add	x16, x16, #0xb8
  404e0c:	br	x17

0000000000404e10 <atoi@plt>:
  404e10:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #192]
  404e18:	add	x16, x16, #0xc0
  404e1c:	br	x17

0000000000404e20 <time@plt>:
  404e20:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #200]
  404e28:	add	x16, x16, #0xc8
  404e2c:	br	x17

0000000000404e30 <ntohs@plt>:
  404e30:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #208]
  404e38:	add	x16, x16, #0xd0
  404e3c:	br	x17

0000000000404e40 <malloc@plt>:
  404e40:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #216]
  404e48:	add	x16, x16, #0xd8
  404e4c:	br	x17

0000000000404e50 <setsockopt@plt>:
  404e50:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #224]
  404e58:	add	x16, x16, #0xe0
  404e5c:	br	x17

0000000000404e60 <__isoc99_fscanf@plt>:
  404e60:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #232]
  404e68:	add	x16, x16, #0xe8
  404e6c:	br	x17

0000000000404e70 <__libc_start_main@plt>:
  404e70:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #240]
  404e78:	add	x16, x16, #0xf0
  404e7c:	br	x17

0000000000404e80 <strcat@plt>:
  404e80:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #248]
  404e88:	add	x16, x16, #0xf8
  404e8c:	br	x17

0000000000404e90 <if_indextoname@plt>:
  404e90:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #256]
  404e98:	add	x16, x16, #0x100
  404e9c:	br	x17

0000000000404ea0 <memset@plt>:
  404ea0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #264]
  404ea8:	add	x16, x16, #0x108
  404eac:	br	x17

0000000000404eb0 <gettimeofday@plt>:
  404eb0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #272]
  404eb8:	add	x16, x16, #0x110
  404ebc:	br	x17

0000000000404ec0 <sendmsg@plt>:
  404ec0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #280]
  404ec8:	add	x16, x16, #0x118
  404ecc:	br	x17

0000000000404ed0 <cap_get_flag@plt>:
  404ed0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #288]
  404ed8:	add	x16, x16, #0x120
  404edc:	br	x17

0000000000404ee0 <strcasecmp@plt>:
  404ee0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #296]
  404ee8:	add	x16, x16, #0x128
  404eec:	br	x17

0000000000404ef0 <realloc@plt>:
  404ef0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #304]
  404ef8:	add	x16, x16, #0x130
  404efc:	br	x17

0000000000404f00 <htons@plt>:
  404f00:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #312]
  404f08:	add	x16, x16, #0x138
  404f0c:	br	x17

0000000000404f10 <cap_set_proc@plt>:
  404f10:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #320]
  404f18:	add	x16, x16, #0x140
  404f1c:	br	x17

0000000000404f20 <strdup@plt>:
  404f20:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #328]
  404f28:	add	x16, x16, #0x148
  404f2c:	br	x17

0000000000404f30 <strerror@plt>:
  404f30:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #336]
  404f38:	add	x16, x16, #0x150
  404f3c:	br	x17

0000000000404f40 <close@plt>:
  404f40:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #344]
  404f48:	add	x16, x16, #0x158
  404f4c:	br	x17

0000000000404f50 <strrchr@plt>:
  404f50:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #352]
  404f58:	add	x16, x16, #0x160
  404f5c:	br	x17

0000000000404f60 <recv@plt>:
  404f60:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #360]
  404f68:	add	x16, x16, #0x168
  404f6c:	br	x17

0000000000404f70 <__gmon_start__@plt>:
  404f70:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #368]
  404f78:	add	x16, x16, #0x170
  404f7c:	br	x17

0000000000404f80 <abort@plt>:
  404f80:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #376]
  404f88:	add	x16, x16, #0x178
  404f8c:	br	x17

0000000000404f90 <feof@plt>:
  404f90:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #384]
  404f98:	add	x16, x16, #0x180
  404f9c:	br	x17

0000000000404fa0 <memcmp@plt>:
  404fa0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #392]
  404fa8:	add	x16, x16, #0x188
  404fac:	br	x17

0000000000404fb0 <strcmp@plt>:
  404fb0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #400]
  404fb8:	add	x16, x16, #0x190
  404fbc:	br	x17

0000000000404fc0 <__ctype_b_loc@plt>:
  404fc0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #408]
  404fc8:	add	x16, x16, #0x198
  404fcc:	br	x17

0000000000404fd0 <strtol@plt>:
  404fd0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #416]
  404fd8:	add	x16, x16, #0x1a0
  404fdc:	br	x17

0000000000404fe0 <cap_get_proc@plt>:
  404fe0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #424]
  404fe8:	add	x16, x16, #0x1a8
  404fec:	br	x17

0000000000404ff0 <fread@plt>:
  404ff0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #432]
  404ff8:	add	x16, x16, #0x1b0
  404ffc:	br	x17

0000000000405000 <getline@plt>:
  405000:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #440]
  405008:	add	x16, x16, #0x1b8
  40500c:	br	x17

0000000000405010 <gethostbyaddr@plt>:
  405010:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #448]
  405018:	add	x16, x16, #0x1c0
  40501c:	br	x17

0000000000405020 <free@plt>:
  405020:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #456]
  405028:	add	x16, x16, #0x1c8
  40502c:	br	x17

0000000000405030 <inet_pton@plt>:
  405030:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #464]
  405038:	add	x16, x16, #0x1d0
  40503c:	br	x17

0000000000405040 <send@plt>:
  405040:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #472]
  405048:	add	x16, x16, #0x1d8
  40504c:	br	x17

0000000000405050 <strspn@plt>:
  405050:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #480]
  405058:	add	x16, x16, #0x1e0
  40505c:	br	x17

0000000000405060 <strchr@plt>:
  405060:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #488]
  405068:	add	x16, x16, #0x1e8
  40506c:	br	x17

0000000000405070 <strtoull@plt>:
  405070:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #496]
  405078:	add	x16, x16, #0x1f0
  40507c:	br	x17

0000000000405080 <fwrite@plt>:
  405080:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #504]
  405088:	add	x16, x16, #0x1f8
  40508c:	br	x17

0000000000405090 <socket@plt>:
  405090:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #512]
  405098:	add	x16, x16, #0x200
  40509c:	br	x17

00000000004050a0 <fflush@plt>:
  4050a0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #520]
  4050a8:	add	x16, x16, #0x208
  4050ac:	br	x17

00000000004050b0 <strcpy@plt>:
  4050b0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #528]
  4050b8:	add	x16, x16, #0x210
  4050bc:	br	x17

00000000004050c0 <fopen64@plt>:
  4050c0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #536]
  4050c8:	add	x16, x16, #0x218
  4050cc:	br	x17

00000000004050d0 <cap_clear@plt>:
  4050d0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #544]
  4050d8:	add	x16, x16, #0x220
  4050dc:	br	x17

00000000004050e0 <isatty@plt>:
  4050e0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #552]
  4050e8:	add	x16, x16, #0x228
  4050ec:	br	x17

00000000004050f0 <sysconf@plt>:
  4050f0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #560]
  4050f8:	add	x16, x16, #0x230
  4050fc:	br	x17

0000000000405100 <asctime@plt>:
  405100:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #568]
  405108:	add	x16, x16, #0x238
  40510c:	br	x17

0000000000405110 <cap_free@plt>:
  405110:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #576]
  405118:	add	x16, x16, #0x240
  40511c:	br	x17

0000000000405120 <if_nametoindex@plt>:
  405120:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #584]
  405128:	add	x16, x16, #0x248
  40512c:	br	x17

0000000000405130 <strchrnul@plt>:
  405130:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #592]
  405138:	add	x16, x16, #0x250
  40513c:	br	x17

0000000000405140 <strstr@plt>:
  405140:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #600]
  405148:	add	x16, x16, #0x258
  40514c:	br	x17

0000000000405150 <__isoc99_sscanf@plt>:
  405150:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #608]
  405158:	add	x16, x16, #0x260
  40515c:	br	x17

0000000000405160 <strncpy@plt>:
  405160:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #616]
  405168:	add	x16, x16, #0x268
  40516c:	br	x17

0000000000405170 <strcspn@plt>:
  405170:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #624]
  405178:	add	x16, x16, #0x270
  40517c:	br	x17

0000000000405180 <vfprintf@plt>:
  405180:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #632]
  405188:	add	x16, x16, #0x278
  40518c:	br	x17

0000000000405190 <printf@plt>:
  405190:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405194:	ldr	x17, [x16, #640]
  405198:	add	x16, x16, #0x280
  40519c:	br	x17

00000000004051a0 <__assert_fail@plt>:
  4051a0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4051a4:	ldr	x17, [x16, #648]
  4051a8:	add	x16, x16, #0x288
  4051ac:	br	x17

00000000004051b0 <__errno_location@plt>:
  4051b0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4051b4:	ldr	x17, [x16, #656]
  4051b8:	add	x16, x16, #0x290
  4051bc:	br	x17

00000000004051c0 <getenv@plt>:
  4051c0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4051c4:	ldr	x17, [x16, #664]
  4051c8:	add	x16, x16, #0x298
  4051cc:	br	x17

00000000004051d0 <getsockname@plt>:
  4051d0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4051d4:	ldr	x17, [x16, #672]
  4051d8:	add	x16, x16, #0x2a0
  4051dc:	br	x17

00000000004051e0 <fprintf@plt>:
  4051e0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4051e4:	ldr	x17, [x16, #680]
  4051e8:	add	x16, x16, #0x2a8
  4051ec:	br	x17

00000000004051f0 <fgets@plt>:
  4051f0:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  4051f4:	ldr	x17, [x16, #688]
  4051f8:	add	x16, x16, #0x2b0
  4051fc:	br	x17

0000000000405200 <inet_ntop@plt>:
  405200:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405204:	ldr	x17, [x16, #696]
  405208:	add	x16, x16, #0x2b8
  40520c:	br	x17

0000000000405210 <ferror@plt>:
  405210:	adrp	x16, 423000 <memcpy@GLIBC_2.17>
  405214:	ldr	x17, [x16, #704]
  405218:	add	x16, x16, #0x2c0
  40521c:	br	x17

Disassembly of section .text:

0000000000405220 <_start@@Base>:
  405220:	mov	x29, #0x0                   	// #0
  405224:	mov	x30, #0x0                   	// #0
  405228:	mov	x5, x0
  40522c:	ldr	x1, [sp]
  405230:	add	x2, sp, #0x8
  405234:	mov	x6, sp
  405238:	movz	x0, #0x0, lsl #48
  40523c:	movk	x0, #0x0, lsl #32
  405240:	movk	x0, #0x40, lsl #16
  405244:	movk	x0, #0x532c
  405248:	movz	x3, #0x0, lsl #48
  40524c:	movk	x3, #0x0, lsl #32
  405250:	movk	x3, #0x41, lsl #16
  405254:	movk	x3, #0x1468
  405258:	movz	x4, #0x0, lsl #48
  40525c:	movk	x4, #0x0, lsl #32
  405260:	movk	x4, #0x41, lsl #16
  405264:	movk	x4, #0x14e8
  405268:	bl	404e70 <__libc_start_main@plt>
  40526c:	bl	404f80 <abort@plt>
  405270:	adrp	x0, 422000 <_IO_stdin_used@@Base+0x10b00>
  405274:	ldr	x0, [x0, #4040]
  405278:	cbz	x0, 405280 <_start@@Base+0x60>
  40527c:	b	404f70 <__gmon_start__@plt>
  405280:	ret
  405284:	nop
  405288:	adrp	x0, 423000 <memcpy@GLIBC_2.17>
  40528c:	add	x0, x0, #0x328
  405290:	adrp	x1, 423000 <memcpy@GLIBC_2.17>
  405294:	add	x1, x1, #0x328
  405298:	cmp	x1, x0
  40529c:	b.eq	4052b4 <_start@@Base+0x94>  // b.none
  4052a0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4052a4:	ldr	x1, [x1, #1288]
  4052a8:	cbz	x1, 4052b4 <_start@@Base+0x94>
  4052ac:	mov	x16, x1
  4052b0:	br	x16
  4052b4:	ret
  4052b8:	adrp	x0, 423000 <memcpy@GLIBC_2.17>
  4052bc:	add	x0, x0, #0x328
  4052c0:	adrp	x1, 423000 <memcpy@GLIBC_2.17>
  4052c4:	add	x1, x1, #0x328
  4052c8:	sub	x1, x1, x0
  4052cc:	lsr	x2, x1, #63
  4052d0:	add	x1, x2, x1, asr #3
  4052d4:	cmp	xzr, x1, asr #1
  4052d8:	asr	x1, x1, #1
  4052dc:	b.eq	4052f4 <_start@@Base+0xd4>  // b.none
  4052e0:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4052e4:	ldr	x2, [x2, #1296]
  4052e8:	cbz	x2, 4052f4 <_start@@Base+0xd4>
  4052ec:	mov	x16, x2
  4052f0:	br	x16
  4052f4:	ret
  4052f8:	stp	x29, x30, [sp, #-32]!
  4052fc:	mov	x29, sp
  405300:	str	x19, [sp, #16]
  405304:	adrp	x19, 423000 <memcpy@GLIBC_2.17>
  405308:	ldrb	w0, [x19, #816]
  40530c:	cbnz	w0, 40531c <_start@@Base+0xfc>
  405310:	bl	405288 <_start@@Base+0x68>
  405314:	mov	w0, #0x1                   	// #1
  405318:	strb	w0, [x19, #816]
  40531c:	ldr	x19, [sp, #16]
  405320:	ldp	x29, x30, [sp], #32
  405324:	ret
  405328:	b	4052b8 <_start@@Base+0x98>

000000000040532c <main@@Base>:
  40532c:	sub	sp, sp, #0x90
  405330:	stp	x29, x30, [sp, #128]
  405334:	add	x29, sp, #0x80
  405338:	mov	w8, #0xffffffff            	// #-1
  40533c:	mov	x9, xzr
  405340:	adrp	x10, 423000 <memcpy@GLIBC_2.17>
  405344:	add	x10, x10, #0x328
  405348:	stur	wzr, [x29, #-4]
  40534c:	stur	w0, [x29, #-8]
  405350:	stur	x1, [x29, #-16]
  405354:	str	wzr, [sp, #44]
  405358:	str	w8, [sp, #40]
  40535c:	str	wzr, [sp, #36]
  405360:	str	wzr, [sp, #32]
  405364:	str	wzr, [sp, #28]
  405368:	str	x9, [sp, #16]
  40536c:	str	x10, [sp, #8]
  405370:	ldur	w8, [x29, #-8]
  405374:	cmp	w8, #0x1
  405378:	b.le	405684 <main@@Base+0x358>
  40537c:	ldur	x8, [x29, #-16]
  405380:	ldr	x0, [x8, #8]
  405384:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405388:	add	x1, x1, #0x518
  40538c:	bl	4079f8 <matches@@Base>
  405390:	and	w9, w0, #0x1
  405394:	cbnz	w9, 405478 <main@@Base+0x14c>
  405398:	ldur	w8, [x29, #-8]
  40539c:	subs	w8, w8, #0x1
  4053a0:	stur	w8, [x29, #-8]
  4053a4:	ldur	x9, [x29, #-16]
  4053a8:	add	x9, x9, #0x8
  4053ac:	stur	x9, [x29, #-16]
  4053b0:	ldur	w8, [x29, #-8]
  4053b4:	cmp	w8, #0x1
  4053b8:	b.gt	4053c0 <main@@Base+0x94>
  4053bc:	bl	405890 <main@@Base+0x564>
  4053c0:	ldur	x8, [x29, #-16]
  4053c4:	ldr	x0, [x8, #8]
  4053c8:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4053cc:	add	x1, x1, #0x520
  4053d0:	bl	404fb0 <strcmp@plt>
  4053d4:	cbnz	w0, 4053e4 <main@@Base+0xb8>
  4053d8:	mov	w8, #0x2                   	// #2
  4053dc:	str	w8, [sp, #44]
  4053e0:	b	405474 <main@@Base+0x148>
  4053e4:	ldur	x8, [x29, #-16]
  4053e8:	ldr	x0, [x8, #8]
  4053ec:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4053f0:	add	x1, x1, #0x525
  4053f4:	bl	404fb0 <strcmp@plt>
  4053f8:	cbnz	w0, 405408 <main@@Base+0xdc>
  4053fc:	mov	w8, #0xa                   	// #10
  405400:	str	w8, [sp, #44]
  405404:	b	405474 <main@@Base+0x148>
  405408:	ldur	x8, [x29, #-16]
  40540c:	ldr	x0, [x8, #8]
  405410:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  405414:	add	x1, x1, #0x1ce
  405418:	bl	404fb0 <strcmp@plt>
  40541c:	cbnz	w0, 40542c <main@@Base+0x100>
  405420:	mov	w8, #0xa                   	// #10
  405424:	str	w8, [sp, #44]
  405428:	b	405474 <main@@Base+0x148>
  40542c:	ldur	x8, [x29, #-16]
  405430:	ldr	x0, [x8, #8]
  405434:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405438:	add	x1, x1, #0x52b
  40543c:	bl	404fb0 <strcmp@plt>
  405440:	cbnz	w0, 40544c <main@@Base+0x120>
  405444:	bl	405890 <main@@Base+0x564>
  405448:	b	405474 <main@@Base+0x148>
  40544c:	ldr	x8, [sp, #8]
  405450:	ldr	x0, [x8]
  405454:	ldur	x9, [x29, #-16]
  405458:	ldr	x2, [x9, #8]
  40545c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405460:	add	x1, x1, #0x530
  405464:	bl	4051e0 <fprintf@plt>
  405468:	mov	w10, #0xffffffff            	// #-1
  40546c:	mov	w0, w10
  405470:	bl	404ce0 <exit@plt>
  405474:	b	405668 <main@@Base+0x33c>
  405478:	ldur	x8, [x29, #-16]
  40547c:	ldr	x0, [x8, #8]
  405480:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405484:	add	x1, x1, #0x560
  405488:	bl	404fb0 <strcmp@plt>
  40548c:	cbnz	w0, 40549c <main@@Base+0x170>
  405490:	mov	w8, #0x2                   	// #2
  405494:	str	w8, [sp, #44]
  405498:	b	405668 <main@@Base+0x33c>
  40549c:	ldur	x8, [x29, #-16]
  4054a0:	ldr	x0, [x8, #8]
  4054a4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4054a8:	add	x1, x1, #0x563
  4054ac:	bl	404fb0 <strcmp@plt>
  4054b0:	cbnz	w0, 4054c0 <main@@Base+0x194>
  4054b4:	mov	w8, #0xa                   	// #10
  4054b8:	str	w8, [sp, #44]
  4054bc:	b	405668 <main@@Base+0x33c>
  4054c0:	ldur	x8, [x29, #-16]
  4054c4:	ldr	x0, [x8, #8]
  4054c8:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4054cc:	add	x1, x1, #0x566
  4054d0:	bl	404fb0 <strcmp@plt>
  4054d4:	cbnz	w0, 4054e4 <main@@Base+0x1b8>
  4054d8:	mov	w8, #0x11                  	// #17
  4054dc:	str	w8, [sp, #44]
  4054e0:	b	405668 <main@@Base+0x33c>
  4054e4:	ldur	x8, [x29, #-16]
  4054e8:	ldr	x0, [x8, #8]
  4054ec:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4054f0:	add	x1, x1, #0x569
  4054f4:	bl	4079f8 <matches@@Base>
  4054f8:	and	w9, w0, #0x1
  4054fc:	cbnz	w9, 405520 <main@@Base+0x1f4>
  405500:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405504:	add	x0, x0, #0x572
  405508:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40550c:	add	x1, x1, #0x72a
  405510:	bl	405190 <printf@plt>
  405514:	mov	w8, wzr
  405518:	mov	w0, w8
  40551c:	bl	404ce0 <exit@plt>
  405520:	ldur	x8, [x29, #-16]
  405524:	ldr	x0, [x8, #8]
  405528:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40552c:	add	x1, x1, #0x590
  405530:	bl	4079f8 <matches@@Base>
  405534:	and	w9, w0, #0x1
  405538:	cbnz	w9, 405574 <main@@Base+0x248>
  40553c:	ldur	w8, [x29, #-8]
  405540:	subs	w8, w8, #0x1
  405544:	stur	w8, [x29, #-8]
  405548:	ldur	x9, [x29, #-16]
  40554c:	add	x9, x9, #0x8
  405550:	stur	x9, [x29, #-16]
  405554:	ldur	w8, [x29, #-8]
  405558:	cmp	w8, #0x1
  40555c:	b.gt	405564 <main@@Base+0x238>
  405560:	bl	405890 <main@@Base+0x564>
  405564:	ldur	x8, [x29, #-16]
  405568:	ldr	x8, [x8, #8]
  40556c:	str	x8, [sp, #16]
  405570:	b	405668 <main@@Base+0x33c>
  405574:	ldur	x8, [x29, #-16]
  405578:	ldr	x0, [x8, #8]
  40557c:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  405580:	add	x1, x1, #0x1ce
  405584:	bl	4079f8 <matches@@Base>
  405588:	and	w9, w0, #0x1
  40558c:	cbnz	w9, 4055a0 <main@@Base+0x274>
  405590:	mov	w8, #0x1                   	// #1
  405594:	str	w8, [sp, #36]
  405598:	str	wzr, [sp, #40]
  40559c:	b	405668 <main@@Base+0x33c>
  4055a0:	ldur	x8, [x29, #-16]
  4055a4:	ldr	x0, [x8, #8]
  4055a8:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4055ac:	add	x1, x1, #0x595
  4055b0:	bl	4079f8 <matches@@Base>
  4055b4:	and	w9, w0, #0x1
  4055b8:	cbnz	w9, 4055cc <main@@Base+0x2a0>
  4055bc:	mov	w8, #0x1                   	// #1
  4055c0:	str	w8, [sp, #32]
  4055c4:	str	wzr, [sp, #40]
  4055c8:	b	405668 <main@@Base+0x33c>
  4055cc:	ldur	x8, [x29, #-16]
  4055d0:	ldr	x0, [x8, #8]
  4055d4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4055d8:	add	x1, x1, #0x59d
  4055dc:	bl	4079f8 <matches@@Base>
  4055e0:	and	w9, w0, #0x1
  4055e4:	cbnz	w9, 4055f8 <main@@Base+0x2cc>
  4055e8:	mov	w8, #0x1                   	// #1
  4055ec:	str	w8, [sp, #28]
  4055f0:	str	wzr, [sp, #40]
  4055f4:	b	405668 <main@@Base+0x33c>
  4055f8:	ldur	x8, [x29, #-16]
  4055fc:	ldr	x0, [x8, #8]
  405600:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405604:	add	x1, x1, #0x5a3
  405608:	bl	404fb0 <strcmp@plt>
  40560c:	cbnz	w0, 40561c <main@@Base+0x2f0>
  405610:	mov	w8, #0xffffffff            	// #-1
  405614:	str	w8, [sp, #40]
  405618:	b	405668 <main@@Base+0x33c>
  40561c:	ldur	x8, [x29, #-16]
  405620:	ldr	x0, [x8, #8]
  405624:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405628:	add	x1, x1, #0x52b
  40562c:	bl	4079f8 <matches@@Base>
  405630:	and	w9, w0, #0x1
  405634:	cbnz	w9, 405640 <main@@Base+0x314>
  405638:	bl	405890 <main@@Base+0x564>
  40563c:	b	405668 <main@@Base+0x33c>
  405640:	ldr	x8, [sp, #8]
  405644:	ldr	x0, [x8]
  405648:	ldur	x9, [x29, #-16]
  40564c:	ldr	x2, [x9, #8]
  405650:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405654:	add	x1, x1, #0x5a7
  405658:	bl	4051e0 <fprintf@plt>
  40565c:	mov	w10, #0xffffffff            	// #-1
  405660:	mov	w0, w10
  405664:	bl	404ce0 <exit@plt>
  405668:	ldur	w8, [x29, #-8]
  40566c:	subs	w8, w8, #0x1
  405670:	stur	w8, [x29, #-8]
  405674:	ldur	x9, [x29, #-16]
  405678:	add	x9, x9, #0x8
  40567c:	stur	x9, [x29, #-16]
  405680:	b	405370 <main@@Base+0x44>
  405684:	ldr	x8, [sp, #16]
  405688:	cbnz	x8, 4056ac <main@@Base+0x380>
  40568c:	ldr	x8, [sp, #8]
  405690:	ldr	x0, [x8]
  405694:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405698:	add	x1, x1, #0x5d4
  40569c:	bl	4051e0 <fprintf@plt>
  4056a0:	mov	w9, #0xffffffff            	// #-1
  4056a4:	mov	w0, w9
  4056a8:	bl	404ce0 <exit@plt>
  4056ac:	ldr	w8, [sp, #36]
  4056b0:	cbz	w8, 4056c8 <main@@Base+0x39c>
  4056b4:	mov	w0, #0x1                   	// #1
  4056b8:	bl	4058cc <main@@Base+0x5a0>
  4056bc:	ldr	w8, [sp, #40]
  4056c0:	orr	w8, w8, w0
  4056c4:	str	w8, [sp, #40]
  4056c8:	ldr	w8, [sp, #32]
  4056cc:	cbz	w8, 405720 <main@@Base+0x3f4>
  4056d0:	ldr	w8, [sp, #44]
  4056d4:	cbz	w8, 4056e4 <main@@Base+0x3b8>
  4056d8:	ldr	w8, [sp, #44]
  4056dc:	cmp	w8, #0x2
  4056e0:	b.ne	4056f8 <main@@Base+0x3cc>  // b.any
  4056e4:	mov	w0, #0x5                   	// #5
  4056e8:	bl	4058cc <main@@Base+0x5a0>
  4056ec:	ldr	w8, [sp, #40]
  4056f0:	orr	w8, w8, w0
  4056f4:	str	w8, [sp, #40]
  4056f8:	ldr	w8, [sp, #44]
  4056fc:	cbz	w8, 40570c <main@@Base+0x3e0>
  405700:	ldr	w8, [sp, #44]
  405704:	cmp	w8, #0xa
  405708:	b.ne	405720 <main@@Base+0x3f4>  // b.any
  40570c:	mov	w0, #0x9                   	// #9
  405710:	bl	4058cc <main@@Base+0x5a0>
  405714:	ldr	w8, [sp, #40]
  405718:	orr	w8, w8, w0
  40571c:	str	w8, [sp, #40]
  405720:	ldr	w8, [sp, #28]
  405724:	cbz	w8, 405778 <main@@Base+0x44c>
  405728:	ldr	w8, [sp, #44]
  40572c:	cbz	w8, 40573c <main@@Base+0x410>
  405730:	ldr	w8, [sp, #44]
  405734:	cmp	w8, #0x2
  405738:	b.ne	405750 <main@@Base+0x424>  // b.any
  40573c:	mov	w0, #0x7                   	// #7
  405740:	bl	4058cc <main@@Base+0x5a0>
  405744:	ldr	w8, [sp, #40]
  405748:	orr	w8, w8, w0
  40574c:	str	w8, [sp, #40]
  405750:	ldr	w8, [sp, #44]
  405754:	cbz	w8, 405764 <main@@Base+0x438>
  405758:	ldr	w8, [sp, #44]
  40575c:	cmp	w8, #0xa
  405760:	b.ne	405778 <main@@Base+0x44c>  // b.any
  405764:	mov	w0, #0xb                   	// #11
  405768:	bl	4058cc <main@@Base+0x5a0>
  40576c:	ldr	w8, [sp, #40]
  405770:	orr	w8, w8, w0
  405774:	str	w8, [sp, #40]
  405778:	ldr	x0, [sp, #16]
  40577c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405780:	add	x1, x1, #0x609
  405784:	bl	4050c0 <fopen64@plt>
  405788:	stur	x0, [x29, #-24]
  40578c:	ldur	x8, [x29, #-24]
  405790:	cbnz	x8, 4057a8 <main@@Base+0x47c>
  405794:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405798:	add	x0, x0, #0x60b
  40579c:	bl	404cf0 <perror@plt>
  4057a0:	mov	w0, #0xffffffff            	// #-1
  4057a4:	bl	404ce0 <exit@plt>
  4057a8:	ldr	w1, [sp, #40]
  4057ac:	add	x0, sp, #0x30
  4057b0:	bl	40dc8c <rtnl_open@@Base>
  4057b4:	cmp	w0, #0x0
  4057b8:	cset	w8, ge  // ge = tcont
  4057bc:	tbnz	w8, #0, 4057c8 <main@@Base+0x49c>
  4057c0:	mov	w0, #0x1                   	// #1
  4057c4:	bl	404ce0 <exit@plt>
  4057c8:	add	x0, sp, #0x30
  4057cc:	mov	w8, wzr
  4057d0:	mov	w1, w8
  4057d4:	bl	40e488 <rtnl_linkdump_req@@Base>
  4057d8:	cmp	w0, #0x0
  4057dc:	cset	w8, ge  // ge = tcont
  4057e0:	tbnz	w8, #0, 4057f8 <main@@Base+0x4cc>
  4057e4:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4057e8:	add	x0, x0, #0x618
  4057ec:	bl	404cf0 <perror@plt>
  4057f0:	mov	w0, #0x1                   	// #1
  4057f4:	bl	404ce0 <exit@plt>
  4057f8:	ldur	x0, [x29, #-24]
  4057fc:	bl	40594c <main@@Base+0x620>
  405800:	ldur	x2, [x29, #-24]
  405804:	add	x0, sp, #0x30
  405808:	adrp	x1, 405000 <getline@plt>
  40580c:	add	x1, x1, #0xa08
  405810:	mov	w8, wzr
  405814:	mov	w3, w8
  405818:	bl	40ed04 <rtnl_dump_filter_nc@@Base>
  40581c:	cmp	w0, #0x0
  405820:	cset	w8, ge  // ge = tcont
  405824:	tbnz	w8, #0, 405850 <main@@Base+0x524>
  405828:	ldr	x8, [sp, #8]
  40582c:	ldr	x0, [x8]
  405830:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405834:	add	x1, x1, #0x631
  405838:	bl	4051e0 <fprintf@plt>
  40583c:	mov	w9, #0x1                   	// #1
  405840:	mov	w0, w9
  405844:	ldp	x29, x30, [sp, #128]
  405848:	add	sp, sp, #0x90
  40584c:	ret
  405850:	adrp	x8, 423000 <memcpy@GLIBC_2.17>
  405854:	add	x8, x8, #0x2d8
  405858:	str	wzr, [x8]
  40585c:	ldur	x2, [x29, #-24]
  405860:	add	x0, sp, #0x30
  405864:	adrp	x1, 405000 <getline@plt>
  405868:	add	x1, x1, #0xa3c
  40586c:	bl	40f818 <rtnl_listen@@Base>
  405870:	cmp	w0, #0x0
  405874:	cset	w9, ge  // ge = tcont
  405878:	tbnz	w9, #0, 405884 <main@@Base+0x558>
  40587c:	mov	w0, #0x2                   	// #2
  405880:	bl	404ce0 <exit@plt>
  405884:	mov	w8, wzr
  405888:	mov	w0, w8
  40588c:	bl	404ce0 <exit@plt>
  405890:	sub	sp, sp, #0x20
  405894:	stp	x29, x30, [sp, #16]
  405898:	add	x29, sp, #0x10
  40589c:	adrp	x8, 423000 <memcpy@GLIBC_2.17>
  4058a0:	add	x8, x8, #0x328
  4058a4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4058a8:	add	x1, x1, #0x642
  4058ac:	mov	w0, #0xffffffff            	// #-1
  4058b0:	ldr	x8, [x8]
  4058b4:	stur	w0, [x29, #-4]
  4058b8:	mov	x0, x8
  4058bc:	bl	4051e0 <fprintf@plt>
  4058c0:	ldur	w9, [x29, #-4]
  4058c4:	mov	w0, w9
  4058c8:	bl	404ce0 <exit@plt>
  4058cc:	sub	sp, sp, #0x20
  4058d0:	stp	x29, x30, [sp, #16]
  4058d4:	add	x29, sp, #0x10
  4058d8:	stur	w0, [x29, #-4]
  4058dc:	ldur	w8, [x29, #-4]
  4058e0:	cmp	w8, #0x1f
  4058e4:	b.ls	405910 <main@@Base+0x5e4>  // b.plast
  4058e8:	adrp	x8, 423000 <memcpy@GLIBC_2.17>
  4058ec:	add	x8, x8, #0x328
  4058f0:	ldr	x0, [x8]
  4058f4:	ldur	w2, [x29, #-4]
  4058f8:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4058fc:	add	x1, x1, #0x708
  405900:	bl	4051e0 <fprintf@plt>
  405904:	mov	w9, #0xffffffff            	// #-1
  405908:	mov	w0, w9
  40590c:	bl	404ce0 <exit@plt>
  405910:	ldur	w8, [x29, #-4]
  405914:	cbz	w8, 405930 <main@@Base+0x604>
  405918:	ldur	w8, [x29, #-4]
  40591c:	mov	w9, #0x1                   	// #1
  405920:	subs	w8, w8, #0x1
  405924:	lsl	w8, w9, w8
  405928:	str	w8, [sp, #8]
  40592c:	b	405938 <main@@Base+0x60c>
  405930:	mov	w8, wzr
  405934:	str	w8, [sp, #8]
  405938:	ldr	w8, [sp, #8]
  40593c:	mov	w0, w8
  405940:	ldp	x29, x30, [sp, #16]
  405944:	add	sp, sp, #0x20
  405948:	ret
  40594c:	sub	sp, sp, #0xc0
  405950:	stp	x29, x30, [sp, #176]
  405954:	add	x29, sp, #0xb0
  405958:	mov	w8, #0xf                   	// #15
  40595c:	mov	w9, #0x0                   	// #0
  405960:	mov	w10, #0x18                  	// #24
  405964:	mov	x11, xzr
  405968:	mov	x1, #0x1                   	// #1
  40596c:	add	x12, sp, #0x28
  405970:	add	x13, sp, #0x10
  405974:	stur	x0, [x29, #-8]
  405978:	str	x12, [sp, #32]
  40597c:	ldr	x12, [sp, #32]
  405980:	strh	w8, [x12, #4]
  405984:	ldr	x12, [sp, #32]
  405988:	strh	w9, [x12, #6]
  40598c:	ldr	x12, [sp, #32]
  405990:	str	wzr, [x12, #8]
  405994:	ldr	x12, [sp, #32]
  405998:	str	wzr, [x12, #12]
  40599c:	ldr	x12, [sp, #32]
  4059a0:	str	w10, [x12]
  4059a4:	mov	x0, x13
  4059a8:	str	x1, [sp, #8]
  4059ac:	mov	x1, x11
  4059b0:	bl	404eb0 <gettimeofday@plt>
  4059b4:	ldr	x11, [sp, #16]
  4059b8:	ldr	x12, [sp, #32]
  4059bc:	str	w11, [x12, #16]
  4059c0:	ldr	x12, [sp, #24]
  4059c4:	ldr	x13, [sp, #32]
  4059c8:	str	w12, [x13, #20]
  4059cc:	ldr	x13, [sp, #32]
  4059d0:	ldr	x14, [sp, #32]
  4059d4:	ldr	w8, [x14]
  4059d8:	add	w8, w8, #0x4
  4059dc:	subs	w8, w8, #0x1
  4059e0:	and	w8, w8, #0xfffffffc
  4059e4:	mov	w14, w8
  4059e8:	ubfx	x2, x14, #0, #32
  4059ec:	ldur	x3, [x29, #-8]
  4059f0:	mov	x0, x13
  4059f4:	ldr	x1, [sp, #8]
  4059f8:	bl	405080 <fwrite@plt>
  4059fc:	ldp	x29, x30, [sp, #176]
  405a00:	add	sp, sp, #0xc0
  405a04:	ret
  405a08:	sub	sp, sp, #0x20
  405a0c:	stp	x29, x30, [sp, #16]
  405a10:	add	x29, sp, #0x10
  405a14:	mov	x8, xzr
  405a18:	str	x0, [sp, #8]
  405a1c:	str	x1, [sp]
  405a20:	ldr	x1, [sp, #8]
  405a24:	ldr	x2, [sp]
  405a28:	mov	x0, x8
  405a2c:	bl	405a3c <main@@Base+0x710>
  405a30:	ldp	x29, x30, [sp, #16]
  405a34:	add	sp, sp, #0x20
  405a38:	ret
  405a3c:	sub	sp, sp, #0x30
  405a40:	stp	x29, x30, [sp, #32]
  405a44:	add	x29, sp, #0x20
  405a48:	adrp	x8, 423000 <memcpy@GLIBC_2.17>
  405a4c:	add	x8, x8, #0x2d8
  405a50:	stur	x0, [x29, #-8]
  405a54:	str	x1, [sp, #16]
  405a58:	str	x2, [sp, #8]
  405a5c:	ldr	x9, [sp, #8]
  405a60:	str	x9, [sp]
  405a64:	ldr	w10, [x8]
  405a68:	cbnz	w10, 405a74 <main@@Base+0x748>
  405a6c:	ldr	x0, [sp]
  405a70:	bl	40594c <main@@Base+0x620>
  405a74:	ldr	x0, [sp, #16]
  405a78:	ldr	x8, [sp, #16]
  405a7c:	ldr	w9, [x8]
  405a80:	add	w9, w9, #0x4
  405a84:	subs	w9, w9, #0x1
  405a88:	and	w9, w9, #0xfffffffc
  405a8c:	mov	w8, w9
  405a90:	ubfx	x2, x8, #0, #32
  405a94:	ldr	x3, [sp]
  405a98:	mov	x1, #0x1                   	// #1
  405a9c:	bl	405080 <fwrite@plt>
  405aa0:	ldr	x8, [sp]
  405aa4:	mov	x0, x8
  405aa8:	bl	4050a0 <fflush@plt>
  405aac:	mov	w9, wzr
  405ab0:	mov	w0, w9
  405ab4:	ldp	x29, x30, [sp, #32]
  405ab8:	add	sp, sp, #0x30
  405abc:	ret

0000000000405ac0 <read_prop@@Base>:
  405ac0:	sub	sp, sp, #0x170
  405ac4:	stp	x29, x30, [sp, #336]
  405ac8:	str	x28, [sp, #352]
  405acc:	add	x29, sp, #0x150
  405ad0:	sub	x8, x29, #0x20
  405ad4:	mov	x9, #0x80                  	// #128
  405ad8:	adrp	x10, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405adc:	add	x10, x10, #0x869
  405ae0:	adrp	x11, 422000 <_IO_stdin_used@@Base+0x10b00>
  405ae4:	ldr	x11, [x11, #3992]
  405ae8:	sub	x12, x29, #0xa0
  405aec:	str	x0, [x8, #16]
  405af0:	str	x1, [x8, #8]
  405af4:	str	x2, [x8]
  405af8:	ldr	x3, [x8, #16]
  405afc:	ldr	x4, [x8, #8]
  405b00:	mov	x0, x12
  405b04:	mov	x1, x9
  405b08:	mov	x2, x10
  405b0c:	str	x8, [sp, #48]
  405b10:	str	x11, [sp, #40]
  405b14:	bl	404dd0 <snprintf@plt>
  405b18:	str	w0, [sp, #60]
  405b1c:	ldr	w13, [sp, #60]
  405b20:	cmp	w13, #0x0
  405b24:	cset	w13, le
  405b28:	tbnz	w13, #0, 405b38 <read_prop@@Base+0x78>
  405b2c:	ldrsw	x8, [sp, #60]
  405b30:	cmp	x8, #0x80
  405b34:	b.cc	405b58 <read_prop@@Base+0x98>  // b.lo, b.ul, b.last
  405b38:	ldr	x8, [sp, #40]
  405b3c:	ldr	x0, [x8]
  405b40:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405b44:	add	x1, x1, #0x87e
  405b48:	bl	4051e0 <fprintf@plt>
  405b4c:	mov	w9, #0xffffffff            	// #-1
  405b50:	stur	w9, [x29, #-4]
  405b54:	b	405d24 <read_prop@@Base+0x264>
  405b58:	sub	x0, x29, #0xa0
  405b5c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405b60:	add	x1, x1, #0xe40
  405b64:	bl	4050c0 <fopen64@plt>
  405b68:	str	x0, [sp, #72]
  405b6c:	ldr	x8, [sp, #72]
  405b70:	cbnz	x8, 405bb8 <read_prop@@Base+0xf8>
  405b74:	ldr	x8, [sp, #40]
  405b78:	ldr	x0, [x8]
  405b7c:	str	x0, [sp, #32]
  405b80:	bl	4051b0 <__errno_location@plt>
  405b84:	ldr	w0, [x0]
  405b88:	bl	404f30 <strerror@plt>
  405b8c:	ldr	x8, [sp, #32]
  405b90:	str	x0, [sp, #24]
  405b94:	mov	x0, x8
  405b98:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405b9c:	add	x1, x1, #0x8a5
  405ba0:	sub	x2, x29, #0xa0
  405ba4:	ldr	x3, [sp, #24]
  405ba8:	bl	4051e0 <fprintf@plt>
  405bac:	mov	w9, #0xffffffff            	// #-1
  405bb0:	stur	w9, [x29, #-4]
  405bb4:	b	405d24 <read_prop@@Base+0x264>
  405bb8:	ldr	x2, [sp, #72]
  405bbc:	add	x0, sp, #0x60
  405bc0:	mov	w1, #0x50                  	// #80
  405bc4:	bl	4051f0 <fgets@plt>
  405bc8:	cbnz	x0, 405bfc <read_prop@@Base+0x13c>
  405bcc:	ldr	x8, [sp, #40]
  405bd0:	ldr	x0, [x8]
  405bd4:	ldr	x9, [sp, #48]
  405bd8:	ldr	x2, [x9, #8]
  405bdc:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405be0:	add	x1, x1, #0x8b3
  405be4:	sub	x3, x29, #0xa0
  405be8:	bl	4051e0 <fprintf@plt>
  405bec:	ldr	x8, [sp, #72]
  405bf0:	mov	x0, x8
  405bf4:	bl	404e00 <fclose@plt>
  405bf8:	b	405d04 <read_prop@@Base+0x244>
  405bfc:	add	x0, sp, #0x60
  405c00:	mov	w1, #0xa                   	// #10
  405c04:	bl	405060 <strchr@plt>
  405c08:	str	x0, [sp, #80]
  405c0c:	ldr	x8, [sp, #80]
  405c10:	cbz	x8, 405c20 <read_prop@@Base+0x160>
  405c14:	ldr	x8, [sp, #80]
  405c18:	mov	w9, #0x0                   	// #0
  405c1c:	strb	w9, [x8]
  405c20:	ldr	x0, [sp, #72]
  405c24:	bl	404e00 <fclose@plt>
  405c28:	add	x8, sp, #0x60
  405c2c:	mov	x0, x8
  405c30:	add	x1, sp, #0x58
  405c34:	mov	w9, wzr
  405c38:	mov	w2, w9
  405c3c:	bl	404fd0 <strtol@plt>
  405c40:	str	x0, [sp, #64]
  405c44:	ldr	x8, [sp, #88]
  405c48:	ldrb	w9, [x8]
  405c4c:	cbnz	w9, 405c60 <read_prop@@Base+0x1a0>
  405c50:	ldr	x8, [sp, #88]
  405c54:	add	x9, sp, #0x60
  405c58:	cmp	x9, x8
  405c5c:	b.ne	405c80 <read_prop@@Base+0x1c0>  // b.any
  405c60:	ldr	x8, [sp, #40]
  405c64:	ldr	x0, [x8]
  405c68:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405c6c:	add	x1, x1, #0x8e2
  405c70:	add	x2, sp, #0x60
  405c74:	sub	x3, x29, #0xa0
  405c78:	bl	4051e0 <fprintf@plt>
  405c7c:	b	405d04 <read_prop@@Base+0x244>
  405c80:	ldr	x8, [sp, #64]
  405c84:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  405c88:	cmp	x8, x9
  405c8c:	b.eq	405ca0 <read_prop@@Base+0x1e0>  // b.none
  405c90:	ldr	x8, [sp, #64]
  405c94:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  405c98:	cmp	x8, x9
  405c9c:	b.ne	405cec <read_prop@@Base+0x22c>  // b.any
  405ca0:	bl	4051b0 <__errno_location@plt>
  405ca4:	ldr	w8, [x0]
  405ca8:	cmp	w8, #0x22
  405cac:	b.ne	405cec <read_prop@@Base+0x22c>  // b.any
  405cb0:	ldr	x8, [sp, #40]
  405cb4:	ldr	x0, [x8]
  405cb8:	str	x0, [sp, #16]
  405cbc:	bl	4051b0 <__errno_location@plt>
  405cc0:	ldr	w0, [x0]
  405cc4:	bl	404f30 <strerror@plt>
  405cc8:	ldr	x8, [sp, #16]
  405ccc:	str	x0, [sp, #8]
  405cd0:	mov	x0, x8
  405cd4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405cd8:	add	x1, x1, #0x909
  405cdc:	sub	x2, x29, #0xa0
  405ce0:	ldr	x3, [sp, #8]
  405ce4:	bl	4051e0 <fprintf@plt>
  405ce8:	b	405d04 <read_prop@@Base+0x244>
  405cec:	ldr	x8, [sp, #64]
  405cf0:	ldr	x9, [sp, #48]
  405cf4:	ldr	x10, [x9]
  405cf8:	str	x8, [x10]
  405cfc:	stur	wzr, [x29, #-4]
  405d00:	b	405d24 <read_prop@@Base+0x264>
  405d04:	ldr	x8, [sp, #40]
  405d08:	ldr	x0, [x8]
  405d0c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  405d10:	add	x1, x1, #0x917
  405d14:	sub	x2, x29, #0xa0
  405d18:	bl	4051e0 <fprintf@plt>
  405d1c:	mov	w9, #0xffffffff            	// #-1
  405d20:	stur	w9, [x29, #-4]
  405d24:	ldur	w0, [x29, #-4]
  405d28:	ldr	x28, [sp, #352]
  405d2c:	ldp	x29, x30, [sp, #336]
  405d30:	add	sp, sp, #0x170
  405d34:	ret

0000000000405d38 <get_hex@@Base>:
  405d38:	sub	sp, sp, #0x10
  405d3c:	strb	w0, [sp, #11]
  405d40:	ldrb	w8, [sp, #11]
  405d44:	cmp	w8, #0x41
  405d48:	b.lt	405d6c <get_hex@@Base+0x34>  // b.tstop
  405d4c:	ldrb	w8, [sp, #11]
  405d50:	cmp	w8, #0x46
  405d54:	b.gt	405d6c <get_hex@@Base+0x34>
  405d58:	ldrb	w8, [sp, #11]
  405d5c:	subs	w8, w8, #0x41
  405d60:	add	w8, w8, #0xa
  405d64:	str	w8, [sp, #12]
  405d68:	b	405dc8 <get_hex@@Base+0x90>
  405d6c:	ldrb	w8, [sp, #11]
  405d70:	cmp	w8, #0x61
  405d74:	b.lt	405d98 <get_hex@@Base+0x60>  // b.tstop
  405d78:	ldrb	w8, [sp, #11]
  405d7c:	cmp	w8, #0x66
  405d80:	b.gt	405d98 <get_hex@@Base+0x60>
  405d84:	ldrb	w8, [sp, #11]
  405d88:	subs	w8, w8, #0x61
  405d8c:	add	w8, w8, #0xa
  405d90:	str	w8, [sp, #12]
  405d94:	b	405dc8 <get_hex@@Base+0x90>
  405d98:	ldrb	w8, [sp, #11]
  405d9c:	cmp	w8, #0x30
  405da0:	b.lt	405dc0 <get_hex@@Base+0x88>  // b.tstop
  405da4:	ldrb	w8, [sp, #11]
  405da8:	cmp	w8, #0x39
  405dac:	b.gt	405dc0 <get_hex@@Base+0x88>
  405db0:	ldrb	w8, [sp, #11]
  405db4:	subs	w8, w8, #0x30
  405db8:	str	w8, [sp, #12]
  405dbc:	b	405dc8 <get_hex@@Base+0x90>
  405dc0:	mov	w8, #0xffffffff            	// #-1
  405dc4:	str	w8, [sp, #12]
  405dc8:	ldr	w0, [sp, #12]
  405dcc:	add	sp, sp, #0x10
  405dd0:	ret

0000000000405dd4 <get_integer@@Base>:
  405dd4:	sub	sp, sp, #0x40
  405dd8:	stp	x29, x30, [sp, #48]
  405ddc:	add	x29, sp, #0x30
  405de0:	stur	x0, [x29, #-16]
  405de4:	str	x1, [sp, #24]
  405de8:	str	w2, [sp, #20]
  405dec:	ldr	x8, [sp, #24]
  405df0:	cbz	x8, 405e00 <get_integer@@Base+0x2c>
  405df4:	ldr	x8, [sp, #24]
  405df8:	ldrb	w9, [x8]
  405dfc:	cbnz	w9, 405e0c <get_integer@@Base+0x38>
  405e00:	mov	w8, #0xffffffff            	// #-1
  405e04:	stur	w8, [x29, #-4]
  405e08:	b	405ec8 <get_integer@@Base+0xf4>
  405e0c:	ldr	x0, [sp, #24]
  405e10:	ldr	w2, [sp, #20]
  405e14:	mov	x1, sp
  405e18:	bl	404fd0 <strtol@plt>
  405e1c:	str	x0, [sp, #8]
  405e20:	ldr	x8, [sp]
  405e24:	cbz	x8, 405e44 <get_integer@@Base+0x70>
  405e28:	ldr	x8, [sp]
  405e2c:	ldr	x9, [sp, #24]
  405e30:	cmp	x8, x9
  405e34:	b.eq	405e44 <get_integer@@Base+0x70>  // b.none
  405e38:	ldr	x8, [sp]
  405e3c:	ldrb	w9, [x8]
  405e40:	cbz	w9, 405e50 <get_integer@@Base+0x7c>
  405e44:	mov	w8, #0xffffffff            	// #-1
  405e48:	stur	w8, [x29, #-4]
  405e4c:	b	405ec8 <get_integer@@Base+0xf4>
  405e50:	ldr	x8, [sp, #8]
  405e54:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  405e58:	cmp	x8, x9
  405e5c:	b.eq	405e70 <get_integer@@Base+0x9c>  // b.none
  405e60:	ldr	x8, [sp, #8]
  405e64:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  405e68:	cmp	x8, x9
  405e6c:	b.ne	405e8c <get_integer@@Base+0xb8>  // b.any
  405e70:	bl	4051b0 <__errno_location@plt>
  405e74:	ldr	w8, [x0]
  405e78:	cmp	w8, #0x22
  405e7c:	b.ne	405e8c <get_integer@@Base+0xb8>  // b.any
  405e80:	mov	w8, #0xffffffff            	// #-1
  405e84:	stur	w8, [x29, #-4]
  405e88:	b	405ec8 <get_integer@@Base+0xf4>
  405e8c:	ldr	x8, [sp, #8]
  405e90:	mov	x9, #0xffffffff80000000    	// #-2147483648
  405e94:	cmp	x8, x9
  405e98:	b.lt	405eac <get_integer@@Base+0xd8>  // b.tstop
  405e9c:	ldr	x8, [sp, #8]
  405ea0:	mov	x9, #0x7fffffff            	// #2147483647
  405ea4:	cmp	x8, x9
  405ea8:	b.le	405eb8 <get_integer@@Base+0xe4>
  405eac:	mov	w8, #0xffffffff            	// #-1
  405eb0:	stur	w8, [x29, #-4]
  405eb4:	b	405ec8 <get_integer@@Base+0xf4>
  405eb8:	ldr	x8, [sp, #8]
  405ebc:	ldur	x9, [x29, #-16]
  405ec0:	str	w8, [x9]
  405ec4:	stur	wzr, [x29, #-4]
  405ec8:	ldur	w0, [x29, #-4]
  405ecc:	ldp	x29, x30, [sp, #48]
  405ed0:	add	sp, sp, #0x40
  405ed4:	ret

0000000000405ed8 <mask2bits@@Base>:
  405ed8:	sub	sp, sp, #0x30
  405edc:	stp	x29, x30, [sp, #32]
  405ee0:	add	x29, sp, #0x20
  405ee4:	stur	w0, [x29, #-8]
  405ee8:	stur	wzr, [x29, #-12]
  405eec:	ldur	w0, [x29, #-8]
  405ef0:	bl	404d70 <ntohl@plt>
  405ef4:	str	w0, [sp, #16]
  405ef8:	ldr	w8, [sp, #16]
  405efc:	mvn	w8, w8
  405f00:	str	w8, [sp, #12]
  405f04:	ldr	w8, [sp, #12]
  405f08:	ldr	w9, [sp, #12]
  405f0c:	add	w9, w9, #0x1
  405f10:	and	w8, w8, w9
  405f14:	cbz	w8, 405f24 <mask2bits@@Base+0x4c>
  405f18:	mov	w8, #0xffffffff            	// #-1
  405f1c:	stur	w8, [x29, #-4]
  405f20:	b	405f50 <mask2bits@@Base+0x78>
  405f24:	ldr	w8, [sp, #16]
  405f28:	cbz	w8, 405f48 <mask2bits@@Base+0x70>
  405f2c:	ldur	w8, [x29, #-12]
  405f30:	add	w8, w8, #0x1
  405f34:	stur	w8, [x29, #-12]
  405f38:	ldr	w8, [sp, #16]
  405f3c:	lsl	w8, w8, #1
  405f40:	str	w8, [sp, #16]
  405f44:	b	405f24 <mask2bits@@Base+0x4c>
  405f48:	ldur	w8, [x29, #-12]
  405f4c:	stur	w8, [x29, #-4]
  405f50:	ldur	w0, [x29, #-4]
  405f54:	ldp	x29, x30, [sp, #32]
  405f58:	add	sp, sp, #0x30
  405f5c:	ret

0000000000405f60 <get_unsigned@@Base>:
  405f60:	sub	sp, sp, #0x40
  405f64:	stp	x29, x30, [sp, #48]
  405f68:	add	x29, sp, #0x30
  405f6c:	stur	x0, [x29, #-16]
  405f70:	str	x1, [sp, #24]
  405f74:	str	w2, [sp, #20]
  405f78:	ldr	x8, [sp, #24]
  405f7c:	cbz	x8, 405f8c <get_unsigned@@Base+0x2c>
  405f80:	ldr	x8, [sp, #24]
  405f84:	ldrb	w9, [x8]
  405f88:	cbnz	w9, 405f98 <get_unsigned@@Base+0x38>
  405f8c:	mov	w8, #0xffffffff            	// #-1
  405f90:	stur	w8, [x29, #-4]
  405f94:	b	406034 <get_unsigned@@Base+0xd4>
  405f98:	ldr	x0, [sp, #24]
  405f9c:	ldr	w2, [sp, #20]
  405fa0:	mov	x1, sp
  405fa4:	bl	404cb0 <strtoul@plt>
  405fa8:	str	x0, [sp, #8]
  405fac:	ldr	x8, [sp]
  405fb0:	cbz	x8, 405fd0 <get_unsigned@@Base+0x70>
  405fb4:	ldr	x8, [sp]
  405fb8:	ldr	x9, [sp, #24]
  405fbc:	cmp	x8, x9
  405fc0:	b.eq	405fd0 <get_unsigned@@Base+0x70>  // b.none
  405fc4:	ldr	x8, [sp]
  405fc8:	ldrb	w9, [x8]
  405fcc:	cbz	w9, 405fdc <get_unsigned@@Base+0x7c>
  405fd0:	mov	w8, #0xffffffff            	// #-1
  405fd4:	stur	w8, [x29, #-4]
  405fd8:	b	406034 <get_unsigned@@Base+0xd4>
  405fdc:	ldr	x8, [sp, #8]
  405fe0:	mov	x9, #0xffffffffffffffff    	// #-1
  405fe4:	cmp	x8, x9
  405fe8:	b.ne	406008 <get_unsigned@@Base+0xa8>  // b.any
  405fec:	bl	4051b0 <__errno_location@plt>
  405ff0:	ldr	w8, [x0]
  405ff4:	cmp	w8, #0x22
  405ff8:	b.ne	406008 <get_unsigned@@Base+0xa8>  // b.any
  405ffc:	mov	w8, #0xffffffff            	// #-1
  406000:	stur	w8, [x29, #-4]
  406004:	b	406034 <get_unsigned@@Base+0xd4>
  406008:	ldr	x8, [sp, #8]
  40600c:	mov	x9, #0xffffffff            	// #4294967295
  406010:	cmp	x8, x9
  406014:	b.ls	406024 <get_unsigned@@Base+0xc4>  // b.plast
  406018:	mov	w8, #0xffffffff            	// #-1
  40601c:	stur	w8, [x29, #-4]
  406020:	b	406034 <get_unsigned@@Base+0xd4>
  406024:	ldr	x8, [sp, #8]
  406028:	ldur	x9, [x29, #-16]
  40602c:	str	w8, [x9]
  406030:	stur	wzr, [x29, #-4]
  406034:	ldur	w0, [x29, #-4]
  406038:	ldp	x29, x30, [sp, #48]
  40603c:	add	sp, sp, #0x40
  406040:	ret

0000000000406044 <get_time_rtt@@Base>:
  406044:	sub	sp, sp, #0x50
  406048:	stp	x29, x30, [sp, #64]
  40604c:	add	x29, sp, #0x40
  406050:	stur	x0, [x29, #-16]
  406054:	stur	x1, [x29, #-24]
  406058:	str	x2, [sp, #32]
  40605c:	ldur	x0, [x29, #-24]
  406060:	mov	w1, #0x2e                  	// #46
  406064:	bl	405060 <strchr@plt>
  406068:	cbz	x0, 406120 <get_time_rtt@@Base+0xdc>
  40606c:	b	406070 <get_time_rtt@@Base+0x2c>
  406070:	ldur	x0, [x29, #-24]
  406074:	add	x1, sp, #0x8
  406078:	bl	404d30 <strtod@plt>
  40607c:	str	d0, [sp, #24]
  406080:	ldr	d0, [sp, #24]
  406084:	fcmp	d0, #0.0
  406088:	b.pl	40609c <get_time_rtt@@Base+0x58>  // b.nfrst
  40608c:	b	406090 <get_time_rtt@@Base+0x4c>
  406090:	mov	w8, #0xffffffff            	// #-1
  406094:	stur	w8, [x29, #-4]
  406098:	b	4062fc <get_time_rtt@@Base+0x2b8>
  40609c:	ldr	x8, [sp, #8]
  4060a0:	cbz	x8, 4060bc <get_time_rtt@@Base+0x78>
  4060a4:	b	4060a8 <get_time_rtt@@Base+0x64>
  4060a8:	ldr	x8, [sp, #8]
  4060ac:	ldur	x9, [x29, #-24]
  4060b0:	subs	x8, x8, x9
  4060b4:	b.ne	4060c8 <get_time_rtt@@Base+0x84>  // b.any
  4060b8:	b	4060bc <get_time_rtt@@Base+0x78>
  4060bc:	mov	w8, #0xffffffff            	// #-1
  4060c0:	stur	w8, [x29, #-4]
  4060c4:	b	4062fc <get_time_rtt@@Base+0x2b8>
  4060c8:	ldr	d0, [sp, #24]
  4060cc:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  4060d0:	fmov	d1, x8
  4060d4:	fcmp	d0, d1
  4060d8:	b.eq	4060fc <get_time_rtt@@Base+0xb8>  // b.none
  4060dc:	b	4060e0 <get_time_rtt@@Base+0x9c>
  4060e0:	ldr	d0, [sp, #24]
  4060e4:	bl	4112a8 <__parse_rtattr_nested_compat@@Base+0x714>
  4060e8:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4060ec:	ldr	q1, [x8, #1856]
  4060f0:	bl	4111a0 <__parse_rtattr_nested_compat@@Base+0x60c>
  4060f4:	cbnz	w0, 40611c <get_time_rtt@@Base+0xd8>
  4060f8:	b	4060fc <get_time_rtt@@Base+0xb8>
  4060fc:	bl	4051b0 <__errno_location@plt>
  406100:	ldr	w8, [x0]
  406104:	subs	w8, w8, #0x22
  406108:	b.ne	40611c <get_time_rtt@@Base+0xd8>  // b.any
  40610c:	b	406110 <get_time_rtt@@Base+0xcc>
  406110:	mov	w8, #0xffffffff            	// #-1
  406114:	stur	w8, [x29, #-4]
  406118:	b	4062fc <get_time_rtt@@Base+0x2b8>
  40611c:	b	4061a0 <get_time_rtt@@Base+0x15c>
  406120:	ldur	x0, [x29, #-24]
  406124:	add	x1, sp, #0x8
  406128:	mov	w2, wzr
  40612c:	bl	404cb0 <strtoul@plt>
  406130:	str	x0, [sp, #16]
  406134:	ldr	x8, [sp, #8]
  406138:	cbz	x8, 406154 <get_time_rtt@@Base+0x110>
  40613c:	b	406140 <get_time_rtt@@Base+0xfc>
  406140:	ldr	x8, [sp, #8]
  406144:	ldur	x9, [x29, #-24]
  406148:	subs	x8, x8, x9
  40614c:	b.ne	406160 <get_time_rtt@@Base+0x11c>  // b.any
  406150:	b	406154 <get_time_rtt@@Base+0x110>
  406154:	mov	w8, #0xffffffff            	// #-1
  406158:	stur	w8, [x29, #-4]
  40615c:	b	4062fc <get_time_rtt@@Base+0x2b8>
  406160:	ldr	x8, [sp, #16]
  406164:	adds	x8, x8, #0x1
  406168:	b.ne	406190 <get_time_rtt@@Base+0x14c>  // b.any
  40616c:	b	406170 <get_time_rtt@@Base+0x12c>
  406170:	bl	4051b0 <__errno_location@plt>
  406174:	ldr	w8, [x0]
  406178:	subs	w8, w8, #0x22
  40617c:	b.ne	406190 <get_time_rtt@@Base+0x14c>  // b.any
  406180:	b	406184 <get_time_rtt@@Base+0x140>
  406184:	mov	w8, #0xffffffff            	// #-1
  406188:	stur	w8, [x29, #-4]
  40618c:	b	4062fc <get_time_rtt@@Base+0x2b8>
  406190:	ldr	d0, [sp, #16]
  406194:	ucvtf	d0, d0
  406198:	str	d0, [sp, #24]
  40619c:	b	4061a0 <get_time_rtt@@Base+0x15c>
  4061a0:	ldr	x8, [sp, #8]
  4061a4:	ldur	x9, [x29, #-24]
  4061a8:	subs	x8, x8, x9
  4061ac:	b.ne	4061c0 <get_time_rtt@@Base+0x17c>  // b.any
  4061b0:	b	4061b4 <get_time_rtt@@Base+0x170>
  4061b4:	mov	w8, #0xffffffff            	// #-1
  4061b8:	stur	w8, [x29, #-4]
  4061bc:	b	4062fc <get_time_rtt@@Base+0x2b8>
  4061c0:	ldr	x8, [sp, #32]
  4061c4:	mov	w9, #0x1                   	// #1
  4061c8:	str	w9, [x8]
  4061cc:	ldr	x8, [sp, #8]
  4061d0:	ldrb	w9, [x8]
  4061d4:	cbz	w9, 4062ac <get_time_rtt@@Base+0x268>
  4061d8:	b	4061dc <get_time_rtt@@Base+0x198>
  4061dc:	ldr	x8, [sp, #32]
  4061e0:	mov	w9, wzr
  4061e4:	str	w9, [x8]
  4061e8:	ldr	x0, [sp, #8]
  4061ec:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4061f0:	add	x1, x1, #0x915
  4061f4:	bl	404ee0 <strcasecmp@plt>
  4061f8:	cbz	w0, 406230 <get_time_rtt@@Base+0x1ec>
  4061fc:	b	406200 <get_time_rtt@@Base+0x1bc>
  406200:	ldr	x0, [sp, #8]
  406204:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  406208:	add	x1, x1, #0x92c
  40620c:	bl	404ee0 <strcasecmp@plt>
  406210:	cbz	w0, 406230 <get_time_rtt@@Base+0x1ec>
  406214:	b	406218 <get_time_rtt@@Base+0x1d4>
  406218:	ldr	x0, [sp, #8]
  40621c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  406220:	add	x1, x1, #0x931
  406224:	bl	404ee0 <strcasecmp@plt>
  406228:	cbnz	w0, 40624c <get_time_rtt@@Base+0x208>
  40622c:	b	406230 <get_time_rtt@@Base+0x1ec>
  406230:	ldr	d0, [sp, #24]
  406234:	mov	x8, #0x400000000000        	// #70368744177664
  406238:	movk	x8, #0x408f, lsl #48
  40623c:	fmov	d1, x8
  406240:	fmul	d0, d0, d1
  406244:	str	d0, [sp, #24]
  406248:	b	4062a8 <get_time_rtt@@Base+0x264>
  40624c:	ldr	x0, [sp, #8]
  406250:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  406254:	add	x1, x1, #0xcb4
  406258:	bl	404ee0 <strcasecmp@plt>
  40625c:	cbz	w0, 406294 <get_time_rtt@@Base+0x250>
  406260:	b	406264 <get_time_rtt@@Base+0x220>
  406264:	ldr	x0, [sp, #8]
  406268:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40626c:	add	x1, x1, #0x92b
  406270:	bl	404ee0 <strcasecmp@plt>
  406274:	cbz	w0, 406294 <get_time_rtt@@Base+0x250>
  406278:	b	40627c <get_time_rtt@@Base+0x238>
  40627c:	ldr	x0, [sp, #8]
  406280:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  406284:	add	x1, x1, #0x930
  406288:	bl	404ee0 <strcasecmp@plt>
  40628c:	cbnz	w0, 406298 <get_time_rtt@@Base+0x254>
  406290:	b	406294 <get_time_rtt@@Base+0x250>
  406294:	b	4062a4 <get_time_rtt@@Base+0x260>
  406298:	mov	w8, #0xffffffff            	// #-1
  40629c:	stur	w8, [x29, #-4]
  4062a0:	b	4062fc <get_time_rtt@@Base+0x2b8>
  4062a4:	b	4062a8 <get_time_rtt@@Base+0x264>
  4062a8:	b	4062ac <get_time_rtt@@Base+0x268>
  4062ac:	ldr	d0, [sp, #24]
  4062b0:	fcvtzu	w8, d0
  4062b4:	ldur	x9, [x29, #-16]
  4062b8:	str	w8, [x9]
  4062bc:	ldur	x9, [x29, #-16]
  4062c0:	ldr	s1, [x9]
  4062c4:	mov	v0.16b, v1.16b
  4062c8:	ucvtf	d0, d0
  4062cc:	ldr	d2, [sp, #24]
  4062d0:	fcmp	d0, d2
  4062d4:	b.pl	4062f0 <get_time_rtt@@Base+0x2ac>  // b.nfrst
  4062d8:	b	4062dc <get_time_rtt@@Base+0x298>
  4062dc:	ldur	x8, [x29, #-16]
  4062e0:	ldr	w9, [x8]
  4062e4:	add	w9, w9, #0x1
  4062e8:	str	w9, [x8]
  4062ec:	b	4062f0 <get_time_rtt@@Base+0x2ac>
  4062f0:	mov	w8, wzr
  4062f4:	stur	w8, [x29, #-4]
  4062f8:	b	4062fc <get_time_rtt@@Base+0x2b8>
  4062fc:	ldur	w0, [x29, #-4]
  406300:	ldp	x29, x30, [sp, #64]
  406304:	add	sp, sp, #0x50
  406308:	ret

000000000040630c <get_u64@@Base>:
  40630c:	sub	sp, sp, #0x40
  406310:	stp	x29, x30, [sp, #48]
  406314:	add	x29, sp, #0x30
  406318:	stur	x0, [x29, #-16]
  40631c:	str	x1, [sp, #24]
  406320:	str	w2, [sp, #20]
  406324:	ldr	x8, [sp, #24]
  406328:	cbz	x8, 406338 <get_u64@@Base+0x2c>
  40632c:	ldr	x8, [sp, #24]
  406330:	ldrb	w9, [x8]
  406334:	cbnz	w9, 406344 <get_u64@@Base+0x38>
  406338:	mov	w8, #0xffffffff            	// #-1
  40633c:	stur	w8, [x29, #-4]
  406340:	b	4063e0 <get_u64@@Base+0xd4>
  406344:	ldr	x0, [sp, #24]
  406348:	ldr	w2, [sp, #20]
  40634c:	mov	x1, sp
  406350:	bl	405070 <strtoull@plt>
  406354:	str	x0, [sp, #8]
  406358:	ldr	x8, [sp]
  40635c:	cbz	x8, 40637c <get_u64@@Base+0x70>
  406360:	ldr	x8, [sp]
  406364:	ldr	x9, [sp, #24]
  406368:	cmp	x8, x9
  40636c:	b.eq	40637c <get_u64@@Base+0x70>  // b.none
  406370:	ldr	x8, [sp]
  406374:	ldrb	w9, [x8]
  406378:	cbz	w9, 406388 <get_u64@@Base+0x7c>
  40637c:	mov	w8, #0xffffffff            	// #-1
  406380:	stur	w8, [x29, #-4]
  406384:	b	4063e0 <get_u64@@Base+0xd4>
  406388:	ldr	x8, [sp, #8]
  40638c:	mov	x9, #0xffffffffffffffff    	// #-1
  406390:	cmp	x8, x9
  406394:	b.ne	4063b4 <get_u64@@Base+0xa8>  // b.any
  406398:	bl	4051b0 <__errno_location@plt>
  40639c:	ldr	w8, [x0]
  4063a0:	cmp	w8, #0x22
  4063a4:	b.ne	4063b4 <get_u64@@Base+0xa8>  // b.any
  4063a8:	mov	w8, #0xffffffff            	// #-1
  4063ac:	stur	w8, [x29, #-4]
  4063b0:	b	4063e0 <get_u64@@Base+0xd4>
  4063b4:	ldr	x8, [sp, #8]
  4063b8:	mov	x9, #0xffffffffffffffff    	// #-1
  4063bc:	cmp	x8, x9
  4063c0:	b.ls	4063d0 <get_u64@@Base+0xc4>  // b.plast
  4063c4:	mov	w8, #0xffffffff            	// #-1
  4063c8:	stur	w8, [x29, #-4]
  4063cc:	b	4063e0 <get_u64@@Base+0xd4>
  4063d0:	ldr	x8, [sp, #8]
  4063d4:	ldur	x9, [x29, #-16]
  4063d8:	str	x8, [x9]
  4063dc:	stur	wzr, [x29, #-4]
  4063e0:	ldur	w0, [x29, #-4]
  4063e4:	ldp	x29, x30, [sp, #48]
  4063e8:	add	sp, sp, #0x40
  4063ec:	ret

00000000004063f0 <get_u32@@Base>:
  4063f0:	sub	sp, sp, #0x40
  4063f4:	stp	x29, x30, [sp, #48]
  4063f8:	add	x29, sp, #0x30
  4063fc:	stur	x0, [x29, #-16]
  406400:	str	x1, [sp, #24]
  406404:	str	w2, [sp, #20]
  406408:	ldr	x8, [sp, #24]
  40640c:	cbz	x8, 40641c <get_u32@@Base+0x2c>
  406410:	ldr	x8, [sp, #24]
  406414:	ldrb	w9, [x8]
  406418:	cbnz	w9, 406428 <get_u32@@Base+0x38>
  40641c:	mov	w8, #0xffffffff            	// #-1
  406420:	stur	w8, [x29, #-4]
  406424:	b	4064c4 <get_u32@@Base+0xd4>
  406428:	ldr	x0, [sp, #24]
  40642c:	ldr	w2, [sp, #20]
  406430:	mov	x1, sp
  406434:	bl	404cb0 <strtoul@plt>
  406438:	str	x0, [sp, #8]
  40643c:	ldr	x8, [sp]
  406440:	cbz	x8, 406460 <get_u32@@Base+0x70>
  406444:	ldr	x8, [sp]
  406448:	ldr	x9, [sp, #24]
  40644c:	cmp	x8, x9
  406450:	b.eq	406460 <get_u32@@Base+0x70>  // b.none
  406454:	ldr	x8, [sp]
  406458:	ldrb	w9, [x8]
  40645c:	cbz	w9, 40646c <get_u32@@Base+0x7c>
  406460:	mov	w8, #0xffffffff            	// #-1
  406464:	stur	w8, [x29, #-4]
  406468:	b	4064c4 <get_u32@@Base+0xd4>
  40646c:	ldr	x8, [sp, #8]
  406470:	mov	x9, #0xffffffffffffffff    	// #-1
  406474:	cmp	x8, x9
  406478:	b.ne	406498 <get_u32@@Base+0xa8>  // b.any
  40647c:	bl	4051b0 <__errno_location@plt>
  406480:	ldr	w8, [x0]
  406484:	cmp	w8, #0x22
  406488:	b.ne	406498 <get_u32@@Base+0xa8>  // b.any
  40648c:	mov	w8, #0xffffffff            	// #-1
  406490:	stur	w8, [x29, #-4]
  406494:	b	4064c4 <get_u32@@Base+0xd4>
  406498:	ldr	x8, [sp, #8]
  40649c:	mov	x9, #0xffffffff            	// #4294967295
  4064a0:	cmp	x8, x9
  4064a4:	b.ls	4064b4 <get_u32@@Base+0xc4>  // b.plast
  4064a8:	mov	w8, #0xffffffff            	// #-1
  4064ac:	stur	w8, [x29, #-4]
  4064b0:	b	4064c4 <get_u32@@Base+0xd4>
  4064b4:	ldr	x8, [sp, #8]
  4064b8:	ldur	x9, [x29, #-16]
  4064bc:	str	w8, [x9]
  4064c0:	stur	wzr, [x29, #-4]
  4064c4:	ldur	w0, [x29, #-4]
  4064c8:	ldp	x29, x30, [sp, #48]
  4064cc:	add	sp, sp, #0x40
  4064d0:	ret

00000000004064d4 <get_u16@@Base>:
  4064d4:	sub	sp, sp, #0x40
  4064d8:	stp	x29, x30, [sp, #48]
  4064dc:	add	x29, sp, #0x30
  4064e0:	stur	x0, [x29, #-16]
  4064e4:	str	x1, [sp, #24]
  4064e8:	str	w2, [sp, #20]
  4064ec:	ldr	x8, [sp, #24]
  4064f0:	cbz	x8, 406500 <get_u16@@Base+0x2c>
  4064f4:	ldr	x8, [sp, #24]
  4064f8:	ldrb	w9, [x8]
  4064fc:	cbnz	w9, 40650c <get_u16@@Base+0x38>
  406500:	mov	w8, #0xffffffff            	// #-1
  406504:	stur	w8, [x29, #-4]
  406508:	b	4065a8 <get_u16@@Base+0xd4>
  40650c:	ldr	x0, [sp, #24]
  406510:	ldr	w2, [sp, #20]
  406514:	mov	x1, sp
  406518:	bl	404cb0 <strtoul@plt>
  40651c:	str	x0, [sp, #8]
  406520:	ldr	x8, [sp]
  406524:	cbz	x8, 406544 <get_u16@@Base+0x70>
  406528:	ldr	x8, [sp]
  40652c:	ldr	x9, [sp, #24]
  406530:	cmp	x8, x9
  406534:	b.eq	406544 <get_u16@@Base+0x70>  // b.none
  406538:	ldr	x8, [sp]
  40653c:	ldrb	w9, [x8]
  406540:	cbz	w9, 406550 <get_u16@@Base+0x7c>
  406544:	mov	w8, #0xffffffff            	// #-1
  406548:	stur	w8, [x29, #-4]
  40654c:	b	4065a8 <get_u16@@Base+0xd4>
  406550:	ldr	x8, [sp, #8]
  406554:	mov	x9, #0xffffffffffffffff    	// #-1
  406558:	cmp	x8, x9
  40655c:	b.ne	40657c <get_u16@@Base+0xa8>  // b.any
  406560:	bl	4051b0 <__errno_location@plt>
  406564:	ldr	w8, [x0]
  406568:	cmp	w8, #0x22
  40656c:	b.ne	40657c <get_u16@@Base+0xa8>  // b.any
  406570:	mov	w8, #0xffffffff            	// #-1
  406574:	stur	w8, [x29, #-4]
  406578:	b	4065a8 <get_u16@@Base+0xd4>
  40657c:	ldr	x8, [sp, #8]
  406580:	mov	x9, #0xffff                	// #65535
  406584:	cmp	x8, x9
  406588:	b.ls	406598 <get_u16@@Base+0xc4>  // b.plast
  40658c:	mov	w8, #0xffffffff            	// #-1
  406590:	stur	w8, [x29, #-4]
  406594:	b	4065a8 <get_u16@@Base+0xd4>
  406598:	ldr	x8, [sp, #8]
  40659c:	ldur	x9, [x29, #-16]
  4065a0:	strh	w8, [x9]
  4065a4:	stur	wzr, [x29, #-4]
  4065a8:	ldur	w0, [x29, #-4]
  4065ac:	ldp	x29, x30, [sp, #48]
  4065b0:	add	sp, sp, #0x40
  4065b4:	ret

00000000004065b8 <get_u8@@Base>:
  4065b8:	sub	sp, sp, #0x40
  4065bc:	stp	x29, x30, [sp, #48]
  4065c0:	add	x29, sp, #0x30
  4065c4:	stur	x0, [x29, #-16]
  4065c8:	str	x1, [sp, #24]
  4065cc:	str	w2, [sp, #20]
  4065d0:	ldr	x8, [sp, #24]
  4065d4:	cbz	x8, 4065e4 <get_u8@@Base+0x2c>
  4065d8:	ldr	x8, [sp, #24]
  4065dc:	ldrb	w9, [x8]
  4065e0:	cbnz	w9, 4065f0 <get_u8@@Base+0x38>
  4065e4:	mov	w8, #0xffffffff            	// #-1
  4065e8:	stur	w8, [x29, #-4]
  4065ec:	b	406688 <get_u8@@Base+0xd0>
  4065f0:	ldr	x0, [sp, #24]
  4065f4:	ldr	w2, [sp, #20]
  4065f8:	mov	x1, sp
  4065fc:	bl	404cb0 <strtoul@plt>
  406600:	str	x0, [sp, #8]
  406604:	ldr	x8, [sp]
  406608:	cbz	x8, 406628 <get_u8@@Base+0x70>
  40660c:	ldr	x8, [sp]
  406610:	ldr	x9, [sp, #24]
  406614:	cmp	x8, x9
  406618:	b.eq	406628 <get_u8@@Base+0x70>  // b.none
  40661c:	ldr	x8, [sp]
  406620:	ldrb	w9, [x8]
  406624:	cbz	w9, 406634 <get_u8@@Base+0x7c>
  406628:	mov	w8, #0xffffffff            	// #-1
  40662c:	stur	w8, [x29, #-4]
  406630:	b	406688 <get_u8@@Base+0xd0>
  406634:	ldr	x8, [sp, #8]
  406638:	mov	x9, #0xffffffffffffffff    	// #-1
  40663c:	cmp	x8, x9
  406640:	b.ne	406660 <get_u8@@Base+0xa8>  // b.any
  406644:	bl	4051b0 <__errno_location@plt>
  406648:	ldr	w8, [x0]
  40664c:	cmp	w8, #0x22
  406650:	b.ne	406660 <get_u8@@Base+0xa8>  // b.any
  406654:	mov	w8, #0xffffffff            	// #-1
  406658:	stur	w8, [x29, #-4]
  40665c:	b	406688 <get_u8@@Base+0xd0>
  406660:	ldr	x8, [sp, #8]
  406664:	cmp	x8, #0xff
  406668:	b.ls	406678 <get_u8@@Base+0xc0>  // b.plast
  40666c:	mov	w8, #0xffffffff            	// #-1
  406670:	stur	w8, [x29, #-4]
  406674:	b	406688 <get_u8@@Base+0xd0>
  406678:	ldr	x8, [sp, #8]
  40667c:	ldur	x9, [x29, #-16]
  406680:	strb	w8, [x9]
  406684:	stur	wzr, [x29, #-4]
  406688:	ldur	w0, [x29, #-4]
  40668c:	ldp	x29, x30, [sp, #48]
  406690:	add	sp, sp, #0x40
  406694:	ret

0000000000406698 <get_s64@@Base>:
  406698:	sub	sp, sp, #0x40
  40669c:	stp	x29, x30, [sp, #48]
  4066a0:	add	x29, sp, #0x30
  4066a4:	stur	x0, [x29, #-16]
  4066a8:	str	x1, [sp, #24]
  4066ac:	str	w2, [sp, #20]
  4066b0:	bl	4051b0 <__errno_location@plt>
  4066b4:	str	wzr, [x0]
  4066b8:	ldr	x8, [sp, #24]
  4066bc:	cbz	x8, 4066cc <get_s64@@Base+0x34>
  4066c0:	ldr	x8, [sp, #24]
  4066c4:	ldrb	w9, [x8]
  4066c8:	cbnz	w9, 4066d8 <get_s64@@Base+0x40>
  4066cc:	mov	w8, #0xffffffff            	// #-1
  4066d0:	stur	w8, [x29, #-4]
  4066d4:	b	406794 <get_s64@@Base+0xfc>
  4066d8:	ldr	x0, [sp, #24]
  4066dc:	ldr	w2, [sp, #20]
  4066e0:	mov	x1, sp
  4066e4:	bl	404d20 <strtoll@plt>
  4066e8:	str	x0, [sp, #8]
  4066ec:	ldr	x8, [sp]
  4066f0:	cbz	x8, 406710 <get_s64@@Base+0x78>
  4066f4:	ldr	x8, [sp]
  4066f8:	ldr	x9, [sp, #24]
  4066fc:	cmp	x8, x9
  406700:	b.eq	406710 <get_s64@@Base+0x78>  // b.none
  406704:	ldr	x8, [sp]
  406708:	ldrb	w9, [x8]
  40670c:	cbz	w9, 40671c <get_s64@@Base+0x84>
  406710:	mov	w8, #0xffffffff            	// #-1
  406714:	stur	w8, [x29, #-4]
  406718:	b	406794 <get_s64@@Base+0xfc>
  40671c:	ldr	x8, [sp, #8]
  406720:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  406724:	cmp	x8, x9
  406728:	b.eq	40673c <get_s64@@Base+0xa4>  // b.none
  40672c:	ldr	x8, [sp, #8]
  406730:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  406734:	cmp	x8, x9
  406738:	b.ne	406758 <get_s64@@Base+0xc0>  // b.any
  40673c:	bl	4051b0 <__errno_location@plt>
  406740:	ldr	w8, [x0]
  406744:	cmp	w8, #0x22
  406748:	b.ne	406758 <get_s64@@Base+0xc0>  // b.any
  40674c:	mov	w8, #0xffffffff            	// #-1
  406750:	stur	w8, [x29, #-4]
  406754:	b	406794 <get_s64@@Base+0xfc>
  406758:	ldr	x8, [sp, #8]
  40675c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  406760:	cmp	x8, x9
  406764:	b.gt	406778 <get_s64@@Base+0xe0>
  406768:	ldr	x8, [sp, #8]
  40676c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  406770:	cmp	x8, x9
  406774:	b.ge	406784 <get_s64@@Base+0xec>  // b.tcont
  406778:	mov	w8, #0xffffffff            	// #-1
  40677c:	stur	w8, [x29, #-4]
  406780:	b	406794 <get_s64@@Base+0xfc>
  406784:	ldr	x8, [sp, #8]
  406788:	ldur	x9, [x29, #-16]
  40678c:	str	x8, [x9]
  406790:	stur	wzr, [x29, #-4]
  406794:	ldur	w0, [x29, #-4]
  406798:	ldp	x29, x30, [sp, #48]
  40679c:	add	sp, sp, #0x40
  4067a0:	ret

00000000004067a4 <get_s32@@Base>:
  4067a4:	sub	sp, sp, #0x40
  4067a8:	stp	x29, x30, [sp, #48]
  4067ac:	add	x29, sp, #0x30
  4067b0:	stur	x0, [x29, #-16]
  4067b4:	str	x1, [sp, #24]
  4067b8:	str	w2, [sp, #20]
  4067bc:	bl	4051b0 <__errno_location@plt>
  4067c0:	str	wzr, [x0]
  4067c4:	ldr	x8, [sp, #24]
  4067c8:	cbz	x8, 4067d8 <get_s32@@Base+0x34>
  4067cc:	ldr	x8, [sp, #24]
  4067d0:	ldrb	w9, [x8]
  4067d4:	cbnz	w9, 4067e4 <get_s32@@Base+0x40>
  4067d8:	mov	w8, #0xffffffff            	// #-1
  4067dc:	stur	w8, [x29, #-4]
  4067e0:	b	4068a0 <get_s32@@Base+0xfc>
  4067e4:	ldr	x0, [sp, #24]
  4067e8:	ldr	w2, [sp, #20]
  4067ec:	mov	x1, sp
  4067f0:	bl	404fd0 <strtol@plt>
  4067f4:	str	x0, [sp, #8]
  4067f8:	ldr	x8, [sp]
  4067fc:	cbz	x8, 40681c <get_s32@@Base+0x78>
  406800:	ldr	x8, [sp]
  406804:	ldr	x9, [sp, #24]
  406808:	cmp	x8, x9
  40680c:	b.eq	40681c <get_s32@@Base+0x78>  // b.none
  406810:	ldr	x8, [sp]
  406814:	ldrb	w9, [x8]
  406818:	cbz	w9, 406828 <get_s32@@Base+0x84>
  40681c:	mov	w8, #0xffffffff            	// #-1
  406820:	stur	w8, [x29, #-4]
  406824:	b	4068a0 <get_s32@@Base+0xfc>
  406828:	ldr	x8, [sp, #8]
  40682c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  406830:	cmp	x8, x9
  406834:	b.eq	406848 <get_s32@@Base+0xa4>  // b.none
  406838:	ldr	x8, [sp, #8]
  40683c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  406840:	cmp	x8, x9
  406844:	b.ne	406864 <get_s32@@Base+0xc0>  // b.any
  406848:	bl	4051b0 <__errno_location@plt>
  40684c:	ldr	w8, [x0]
  406850:	cmp	w8, #0x22
  406854:	b.ne	406864 <get_s32@@Base+0xc0>  // b.any
  406858:	mov	w8, #0xffffffff            	// #-1
  40685c:	stur	w8, [x29, #-4]
  406860:	b	4068a0 <get_s32@@Base+0xfc>
  406864:	ldr	x8, [sp, #8]
  406868:	mov	x9, #0x7fffffff            	// #2147483647
  40686c:	cmp	x8, x9
  406870:	b.gt	406884 <get_s32@@Base+0xe0>
  406874:	ldr	x8, [sp, #8]
  406878:	mov	x9, #0xffffffff80000000    	// #-2147483648
  40687c:	cmp	x8, x9
  406880:	b.ge	406890 <get_s32@@Base+0xec>  // b.tcont
  406884:	mov	w8, #0xffffffff            	// #-1
  406888:	stur	w8, [x29, #-4]
  40688c:	b	4068a0 <get_s32@@Base+0xfc>
  406890:	ldr	x8, [sp, #8]
  406894:	ldur	x9, [x29, #-16]
  406898:	str	w8, [x9]
  40689c:	stur	wzr, [x29, #-4]
  4068a0:	ldur	w0, [x29, #-4]
  4068a4:	ldp	x29, x30, [sp, #48]
  4068a8:	add	sp, sp, #0x40
  4068ac:	ret

00000000004068b0 <get_be64@@Base>:
  4068b0:	sub	sp, sp, #0x50
  4068b4:	stp	x29, x30, [sp, #64]
  4068b8:	add	x29, sp, #0x40
  4068bc:	add	x8, sp, #0x20
  4068c0:	stur	x0, [x29, #-8]
  4068c4:	stur	x1, [x29, #-16]
  4068c8:	stur	w2, [x29, #-20]
  4068cc:	ldur	x1, [x29, #-16]
  4068d0:	ldur	w2, [x29, #-20]
  4068d4:	mov	x0, x8
  4068d8:	bl	40630c <get_u64@@Base>
  4068dc:	str	w0, [sp, #28]
  4068e0:	ldr	w9, [sp, #28]
  4068e4:	cbnz	w9, 40695c <get_be64@@Base+0xac>
  4068e8:	mov	w8, #0x1                   	// #1
  4068ec:	mov	w0, w8
  4068f0:	str	w8, [sp, #24]
  4068f4:	bl	404d10 <htonl@plt>
  4068f8:	ldr	w8, [sp, #24]
  4068fc:	cmp	w8, w0
  406900:	b.ne	406910 <get_be64@@Base+0x60>  // b.any
  406904:	ldr	x8, [sp, #32]
  406908:	str	x8, [sp, #16]
  40690c:	b	406950 <get_be64@@Base+0xa0>
  406910:	ldr	x8, [sp, #32]
  406914:	and	x8, x8, #0xffffffff
  406918:	mov	w0, w8
  40691c:	bl	404d10 <htonl@plt>
  406920:	mov	w9, w0
  406924:	ubfx	x9, x9, #0, #32
  406928:	ldr	x10, [sp, #32]
  40692c:	lsr	x10, x10, #32
  406930:	mov	w0, w10
  406934:	str	x9, [sp, #8]
  406938:	bl	404d10 <htonl@plt>
  40693c:	mov	w9, w0
  406940:	ubfx	x9, x9, #0, #32
  406944:	ldr	x11, [sp, #8]
  406948:	orr	x9, x9, x11, lsl #32
  40694c:	str	x9, [sp, #16]
  406950:	ldr	x8, [sp, #16]
  406954:	ldur	x9, [x29, #-8]
  406958:	str	x8, [x9]
  40695c:	ldr	w0, [sp, #28]
  406960:	ldp	x29, x30, [sp, #64]
  406964:	add	sp, sp, #0x50
  406968:	ret

000000000040696c <get_be32@@Base>:
  40696c:	sub	sp, sp, #0x30
  406970:	stp	x29, x30, [sp, #32]
  406974:	add	x29, sp, #0x20
  406978:	add	x8, sp, #0x8
  40697c:	stur	x0, [x29, #-8]
  406980:	str	x1, [sp, #16]
  406984:	str	w2, [sp, #12]
  406988:	ldr	x1, [sp, #16]
  40698c:	ldr	w2, [sp, #12]
  406990:	mov	x0, x8
  406994:	bl	4063f0 <get_u32@@Base>
  406998:	str	w0, [sp, #4]
  40699c:	ldr	w9, [sp, #4]
  4069a0:	cbnz	w9, 4069b4 <get_be32@@Base+0x48>
  4069a4:	ldr	w0, [sp, #8]
  4069a8:	bl	404d10 <htonl@plt>
  4069ac:	ldur	x8, [x29, #-8]
  4069b0:	str	w0, [x8]
  4069b4:	ldr	w0, [sp, #4]
  4069b8:	ldp	x29, x30, [sp, #32]
  4069bc:	add	sp, sp, #0x30
  4069c0:	ret

00000000004069c4 <get_be16@@Base>:
  4069c4:	sub	sp, sp, #0x30
  4069c8:	stp	x29, x30, [sp, #32]
  4069cc:	add	x29, sp, #0x20
  4069d0:	add	x8, sp, #0xa
  4069d4:	stur	x0, [x29, #-8]
  4069d8:	str	x1, [sp, #16]
  4069dc:	str	w2, [sp, #12]
  4069e0:	ldr	x1, [sp, #16]
  4069e4:	ldr	w2, [sp, #12]
  4069e8:	mov	x0, x8
  4069ec:	bl	4064d4 <get_u16@@Base>
  4069f0:	str	w0, [sp, #4]
  4069f4:	ldr	w9, [sp, #4]
  4069f8:	cbnz	w9, 406a0c <get_be16@@Base+0x48>
  4069fc:	ldrh	w0, [sp, #10]
  406a00:	bl	404f00 <htons@plt>
  406a04:	ldur	x8, [x29, #-8]
  406a08:	strh	w0, [x8]
  406a0c:	ldr	w0, [sp, #4]
  406a10:	ldp	x29, x30, [sp, #32]
  406a14:	add	sp, sp, #0x30
  406a18:	ret

0000000000406a1c <get_addr64@@Base>:
  406a1c:	sub	sp, sp, #0x50
  406a20:	stp	x29, x30, [sp, #64]
  406a24:	add	x29, sp, #0x40
  406a28:	stur	x0, [x29, #-16]
  406a2c:	stur	x1, [x29, #-24]
  406a30:	stur	wzr, [x29, #-28]
  406a34:	ldur	w8, [x29, #-28]
  406a38:	cmp	w8, #0x4
  406a3c:	b.ge	406b04 <get_addr64@@Base+0xe8>  // b.tcont
  406a40:	ldur	x0, [x29, #-24]
  406a44:	add	x1, sp, #0x8
  406a48:	mov	w2, #0x10                  	// #16
  406a4c:	bl	404cb0 <strtoul@plt>
  406a50:	str	x0, [sp, #16]
  406a54:	ldr	x8, [sp, #16]
  406a58:	mov	x9, #0xffff                	// #65535
  406a5c:	cmp	x8, x9
  406a60:	b.ls	406a70 <get_addr64@@Base+0x54>  // b.plast
  406a64:	mov	w8, #0xffffffff            	// #-1
  406a68:	stur	w8, [x29, #-4]
  406a6c:	b	406b18 <get_addr64@@Base+0xfc>
  406a70:	ldr	x8, [sp, #8]
  406a74:	ldur	x9, [x29, #-24]
  406a78:	cmp	x8, x9
  406a7c:	b.ne	406a8c <get_addr64@@Base+0x70>  // b.any
  406a80:	mov	w8, #0xffffffff            	// #-1
  406a84:	stur	w8, [x29, #-4]
  406a88:	b	406b18 <get_addr64@@Base+0xfc>
  406a8c:	ldr	x8, [sp, #16]
  406a90:	mov	w0, w8
  406a94:	bl	404f00 <htons@plt>
  406a98:	ldursw	x9, [x29, #-28]
  406a9c:	mov	x10, #0x2                   	// #2
  406aa0:	mul	x9, x10, x9
  406aa4:	add	x10, sp, #0x18
  406aa8:	add	x9, x10, x9
  406aac:	strh	w0, [x9]
  406ab0:	ldr	x9, [sp, #8]
  406ab4:	ldrb	w8, [x9]
  406ab8:	cbnz	w8, 406ac0 <get_addr64@@Base+0xa4>
  406abc:	b	406b04 <get_addr64@@Base+0xe8>
  406ac0:	ldur	w8, [x29, #-28]
  406ac4:	cmp	w8, #0x3
  406ac8:	b.eq	406adc <get_addr64@@Base+0xc0>  // b.none
  406acc:	ldr	x8, [sp, #8]
  406ad0:	ldrb	w9, [x8]
  406ad4:	cmp	w9, #0x3a
  406ad8:	b.eq	406ae8 <get_addr64@@Base+0xcc>  // b.none
  406adc:	mov	w8, #0xffffffff            	// #-1
  406ae0:	stur	w8, [x29, #-4]
  406ae4:	b	406b18 <get_addr64@@Base+0xfc>
  406ae8:	ldr	x8, [sp, #8]
  406aec:	add	x8, x8, #0x1
  406af0:	stur	x8, [x29, #-24]
  406af4:	ldur	w8, [x29, #-28]
  406af8:	add	w8, w8, #0x1
  406afc:	stur	w8, [x29, #-28]
  406b00:	b	406a34 <get_addr64@@Base+0x18>
  406b04:	ldr	x8, [sp, #24]
  406b08:	ldur	x9, [x29, #-16]
  406b0c:	str	x8, [x9]
  406b10:	mov	w10, #0x1                   	// #1
  406b14:	stur	w10, [x29, #-4]
  406b18:	ldur	w0, [x29, #-4]
  406b1c:	ldp	x29, x30, [sp, #64]
  406b20:	add	sp, sp, #0x50
  406b24:	ret

0000000000406b28 <get_addr_1@@Base>:
  406b28:	sub	sp, sp, #0x30
  406b2c:	stp	x29, x30, [sp, #32]
  406b30:	add	x29, sp, #0x20
  406b34:	str	x0, [sp, #16]
  406b38:	str	x1, [sp, #8]
  406b3c:	str	w2, [sp, #4]
  406b40:	ldr	x0, [sp, #16]
  406b44:	ldr	x1, [sp, #8]
  406b48:	ldr	w2, [sp, #4]
  406b4c:	bl	406b84 <get_addr_1@@Base+0x5c>
  406b50:	str	w0, [sp]
  406b54:	ldr	w8, [sp]
  406b58:	cbz	w8, 406b68 <get_addr_1@@Base+0x40>
  406b5c:	ldr	w8, [sp]
  406b60:	stur	w8, [x29, #-4]
  406b64:	b	406b74 <get_addr_1@@Base+0x4c>
  406b68:	ldr	x0, [sp, #16]
  406b6c:	bl	406ef8 <get_addr_1@@Base+0x3d0>
  406b70:	stur	wzr, [x29, #-4]
  406b74:	ldur	w0, [x29, #-4]
  406b78:	ldp	x29, x30, [sp, #32]
  406b7c:	add	sp, sp, #0x30
  406b80:	ret
  406b84:	sub	sp, sp, #0x40
  406b88:	stp	x29, x30, [sp, #48]
  406b8c:	add	x29, sp, #0x30
  406b90:	mov	x8, #0x108                 	// #264
  406b94:	adrp	x9, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  406b98:	add	x9, x9, #0xc94
  406b9c:	mov	w10, wzr
  406ba0:	stur	x0, [x29, #-16]
  406ba4:	str	x1, [sp, #24]
  406ba8:	str	w2, [sp, #20]
  406bac:	ldur	x0, [x29, #-16]
  406bb0:	mov	w1, w10
  406bb4:	mov	x2, x8
  406bb8:	str	x9, [sp]
  406bbc:	bl	404ea0 <memset@plt>
  406bc0:	ldr	x0, [sp, #24]
  406bc4:	ldr	x1, [sp]
  406bc8:	bl	404fb0 <strcmp@plt>
  406bcc:	cbnz	w0, 406c38 <get_addr_1@@Base+0x110>
  406bd0:	ldr	w8, [sp, #20]
  406bd4:	cmp	w8, #0xc
  406bd8:	b.eq	406be8 <get_addr_1@@Base+0xc0>  // b.none
  406bdc:	ldr	w8, [sp, #20]
  406be0:	cmp	w8, #0x1c
  406be4:	b.ne	406bf4 <get_addr_1@@Base+0xcc>  // b.any
  406be8:	mov	w8, #0xffffffff            	// #-1
  406bec:	stur	w8, [x29, #-4]
  406bf0:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406bf4:	ldr	w8, [sp, #20]
  406bf8:	ldur	x9, [x29, #-16]
  406bfc:	strh	w8, [x9, #6]
  406c00:	ldur	x9, [x29, #-16]
  406c04:	ldrh	w0, [x9, #6]
  406c08:	bl	4081b0 <format_host_r@@Base+0xc0>
  406c0c:	ldur	x9, [x29, #-16]
  406c10:	strh	w0, [x9, #2]
  406c14:	ldur	x9, [x29, #-16]
  406c18:	mov	w8, #0xfffe                	// #65534
  406c1c:	strh	w8, [x9, #4]
  406c20:	ldur	x9, [x29, #-16]
  406c24:	ldrh	w8, [x9]
  406c28:	orr	w8, w8, #0x1
  406c2c:	strh	w8, [x9]
  406c30:	stur	wzr, [x29, #-4]
  406c34:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406c38:	ldr	x0, [sp, #24]
  406c3c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  406c40:	add	x1, x1, #0x5a3
  406c44:	bl	404fb0 <strcmp@plt>
  406c48:	cbz	w0, 406c60 <get_addr_1@@Base+0x138>
  406c4c:	ldr	x0, [sp, #24]
  406c50:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  406c54:	add	x1, x1, #0xc9c
  406c58:	bl	404fb0 <strcmp@plt>
  406c5c:	cbnz	w0, 406cb0 <get_addr_1@@Base+0x188>
  406c60:	ldr	w8, [sp, #20]
  406c64:	cmp	w8, #0xc
  406c68:	b.eq	406c78 <get_addr_1@@Base+0x150>  // b.none
  406c6c:	ldr	w8, [sp, #20]
  406c70:	cmp	w8, #0x1c
  406c74:	b.ne	406c84 <get_addr_1@@Base+0x15c>  // b.any
  406c78:	mov	w8, #0xffffffff            	// #-1
  406c7c:	stur	w8, [x29, #-4]
  406c80:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406c84:	ldr	w8, [sp, #20]
  406c88:	ldur	x9, [x29, #-16]
  406c8c:	strh	w8, [x9, #6]
  406c90:	ldur	x9, [x29, #-16]
  406c94:	mov	w8, #0x0                   	// #0
  406c98:	strh	w8, [x9, #2]
  406c9c:	ldur	x9, [x29, #-16]
  406ca0:	mov	w8, #0xfffe                	// #65534
  406ca4:	strh	w8, [x9, #4]
  406ca8:	stur	wzr, [x29, #-4]
  406cac:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406cb0:	ldr	w8, [sp, #20]
  406cb4:	cmp	w8, #0x11
  406cb8:	b.ne	406d24 <get_addr_1@@Base+0x1fc>  // b.any
  406cbc:	ldur	x8, [x29, #-16]
  406cc0:	add	x0, x8, #0x8
  406cc4:	ldr	x2, [sp, #24]
  406cc8:	mov	w1, #0x100                 	// #256
  406ccc:	bl	40b0e0 <ll_addr_a2n@@Base>
  406cd0:	str	w0, [sp, #16]
  406cd4:	ldr	w9, [sp, #16]
  406cd8:	cmp	w9, #0x0
  406cdc:	cset	w9, ge  // ge = tcont
  406ce0:	tbnz	w9, #0, 406cf0 <get_addr_1@@Base+0x1c8>
  406ce4:	mov	w8, #0xffffffff            	// #-1
  406ce8:	stur	w8, [x29, #-4]
  406cec:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406cf0:	ldur	x8, [x29, #-16]
  406cf4:	mov	w9, #0x11                  	// #17
  406cf8:	strh	w9, [x8, #6]
  406cfc:	ldr	w9, [sp, #16]
  406d00:	ldur	x8, [x29, #-16]
  406d04:	strh	w9, [x8, #2]
  406d08:	ldr	w9, [sp, #16]
  406d0c:	mov	w10, #0x8                   	// #8
  406d10:	mul	w9, w9, w10
  406d14:	ldur	x8, [x29, #-16]
  406d18:	strh	w9, [x8, #4]
  406d1c:	stur	wzr, [x29, #-4]
  406d20:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406d24:	ldr	x0, [sp, #24]
  406d28:	mov	w1, #0x3a                  	// #58
  406d2c:	bl	405060 <strchr@plt>
  406d30:	cbz	x0, 406dac <get_addr_1@@Base+0x284>
  406d34:	ldur	x8, [x29, #-16]
  406d38:	mov	w9, #0xa                   	// #10
  406d3c:	strh	w9, [x8, #6]
  406d40:	ldr	w9, [sp, #20]
  406d44:	cbz	w9, 406d60 <get_addr_1@@Base+0x238>
  406d48:	ldr	w8, [sp, #20]
  406d4c:	cmp	w8, #0xa
  406d50:	b.eq	406d60 <get_addr_1@@Base+0x238>  // b.none
  406d54:	mov	w8, #0xffffffff            	// #-1
  406d58:	stur	w8, [x29, #-4]
  406d5c:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406d60:	ldr	x1, [sp, #24]
  406d64:	ldur	x8, [x29, #-16]
  406d68:	add	x2, x8, #0x8
  406d6c:	mov	w0, #0xa                   	// #10
  406d70:	bl	405030 <inet_pton@plt>
  406d74:	cmp	w0, #0x0
  406d78:	cset	w9, gt
  406d7c:	tbnz	w9, #0, 406d8c <get_addr_1@@Base+0x264>
  406d80:	mov	w8, #0xffffffff            	// #-1
  406d84:	stur	w8, [x29, #-4]
  406d88:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406d8c:	ldur	x8, [x29, #-16]
  406d90:	mov	w9, #0x10                  	// #16
  406d94:	strh	w9, [x8, #2]
  406d98:	ldur	x8, [x29, #-16]
  406d9c:	mov	w9, #0xffff                	// #65535
  406da0:	strh	w9, [x8, #4]
  406da4:	stur	wzr, [x29, #-4]
  406da8:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406dac:	ldr	w8, [sp, #20]
  406db0:	cmp	w8, #0x1c
  406db4:	b.ne	406e78 <get_addr_1@@Base+0x350>  // b.any
  406db8:	ldur	x8, [x29, #-16]
  406dbc:	mov	w9, #0x1c                  	// #28
  406dc0:	strh	w9, [x8, #6]
  406dc4:	ldr	x1, [sp, #24]
  406dc8:	ldur	x8, [x29, #-16]
  406dcc:	add	x2, x8, #0x8
  406dd0:	mov	w0, #0x1c                  	// #28
  406dd4:	mov	x3, #0x100                 	// #256
  406dd8:	bl	40ca44 <mpls_pton@@Base>
  406ddc:	cmp	w0, #0x0
  406de0:	cset	w9, gt
  406de4:	tbnz	w9, #0, 406df4 <get_addr_1@@Base+0x2cc>
  406de8:	mov	w8, #0xffffffff            	// #-1
  406dec:	stur	w8, [x29, #-4]
  406df0:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406df4:	ldur	x8, [x29, #-16]
  406df8:	mov	w9, #0x4                   	// #4
  406dfc:	strh	w9, [x8, #2]
  406e00:	ldur	x8, [x29, #-16]
  406e04:	mov	w9, #0x14                  	// #20
  406e08:	strh	w9, [x8, #4]
  406e0c:	mov	w9, #0x40                  	// #64
  406e10:	str	w9, [sp, #12]
  406e14:	str	wzr, [sp, #8]
  406e18:	ldr	w8, [sp, #8]
  406e1c:	ldr	w9, [sp, #12]
  406e20:	cmp	w8, w9
  406e24:	b.cs	406e70 <get_addr_1@@Base+0x348>  // b.hs, b.nlast
  406e28:	ldur	x8, [x29, #-16]
  406e2c:	add	x8, x8, #0x8
  406e30:	ldrsw	x9, [sp, #8]
  406e34:	ldr	w0, [x8, x9, lsl #2]
  406e38:	bl	404d70 <ntohl@plt>
  406e3c:	and	w10, w0, #0x100
  406e40:	cbz	w10, 406e60 <get_addr_1@@Base+0x338>
  406e44:	ldr	w8, [sp, #8]
  406e48:	add	w8, w8, #0x1
  406e4c:	mov	w9, #0x4                   	// #4
  406e50:	mul	w8, w8, w9
  406e54:	ldur	x10, [x29, #-16]
  406e58:	strh	w8, [x10, #2]
  406e5c:	b	406e70 <get_addr_1@@Base+0x348>
  406e60:	ldr	w8, [sp, #8]
  406e64:	add	w8, w8, #0x1
  406e68:	str	w8, [sp, #8]
  406e6c:	b	406e18 <get_addr_1@@Base+0x2f0>
  406e70:	stur	wzr, [x29, #-4]
  406e74:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406e78:	ldur	x8, [x29, #-16]
  406e7c:	mov	w9, #0x2                   	// #2
  406e80:	strh	w9, [x8, #6]
  406e84:	ldr	w9, [sp, #20]
  406e88:	cbz	w9, 406ea4 <get_addr_1@@Base+0x37c>
  406e8c:	ldr	w8, [sp, #20]
  406e90:	cmp	w8, #0x2
  406e94:	b.eq	406ea4 <get_addr_1@@Base+0x37c>  // b.none
  406e98:	mov	w8, #0xffffffff            	// #-1
  406e9c:	stur	w8, [x29, #-4]
  406ea0:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406ea4:	ldur	x8, [x29, #-16]
  406ea8:	add	x0, x8, #0x8
  406eac:	ldr	x1, [sp, #24]
  406eb0:	bl	409d54 <sprint_time64@@Base+0x138>
  406eb4:	cmp	w0, #0x0
  406eb8:	cset	w9, gt
  406ebc:	tbnz	w9, #0, 406ecc <get_addr_1@@Base+0x3a4>
  406ec0:	mov	w8, #0xffffffff            	// #-1
  406ec4:	stur	w8, [x29, #-4]
  406ec8:	b	406ee8 <get_addr_1@@Base+0x3c0>
  406ecc:	ldur	x8, [x29, #-16]
  406ed0:	mov	w9, #0x4                   	// #4
  406ed4:	strh	w9, [x8, #2]
  406ed8:	ldur	x8, [x29, #-16]
  406edc:	mov	w9, #0xffff                	// #65535
  406ee0:	strh	w9, [x8, #4]
  406ee4:	stur	wzr, [x29, #-4]
  406ee8:	ldur	w0, [x29, #-4]
  406eec:	ldp	x29, x30, [sp, #48]
  406ef0:	add	sp, sp, #0x40
  406ef4:	ret
  406ef8:	sub	sp, sp, #0x30
  406efc:	stp	x29, x30, [sp, #32]
  406f00:	add	x29, sp, #0x20
  406f04:	stur	x0, [x29, #-8]
  406f08:	ldur	x8, [x29, #-8]
  406f0c:	ldrh	w9, [x8, #6]
  406f10:	cmp	w9, #0x2
  406f14:	str	w9, [sp, #8]
  406f18:	b.eq	406f30 <get_addr_1@@Base+0x408>  // b.none
  406f1c:	b	406f20 <get_addr_1@@Base+0x3f8>
  406f20:	ldr	w8, [sp, #8]
  406f24:	cmp	w8, #0xa
  406f28:	b.eq	406f98 <get_addr_1@@Base+0x470>  // b.none
  406f2c:	b	407054 <get_addr_1@@Base+0x52c>
  406f30:	ldur	x8, [x29, #-8]
  406f34:	ldr	w9, [x8, #8]
  406f38:	cbnz	w9, 406f50 <get_addr_1@@Base+0x428>
  406f3c:	ldur	x8, [x29, #-8]
  406f40:	ldrh	w9, [x8]
  406f44:	orr	w9, w9, #0x6
  406f48:	strh	w9, [x8]
  406f4c:	b	406f94 <get_addr_1@@Base+0x46c>
  406f50:	ldur	x8, [x29, #-8]
  406f54:	ldr	w0, [x8, #8]
  406f58:	bl	404d70 <ntohl@plt>
  406f5c:	and	w9, w0, #0xf0000000
  406f60:	mov	w10, #0xe0000000            	// #-536870912
  406f64:	cmp	w9, w10
  406f68:	b.ne	406f84 <get_addr_1@@Base+0x45c>  // b.any
  406f6c:	ldur	x8, [x29, #-8]
  406f70:	ldrh	w9, [x8]
  406f74:	mov	w10, #0xa                   	// #10
  406f78:	orr	w9, w9, w10
  406f7c:	strh	w9, [x8]
  406f80:	b	406f94 <get_addr_1@@Base+0x46c>
  406f84:	ldur	x8, [x29, #-8]
  406f88:	ldrh	w9, [x8]
  406f8c:	orr	w9, w9, #0x2
  406f90:	strh	w9, [x8]
  406f94:	b	407054 <get_addr_1@@Base+0x52c>
  406f98:	ldur	x8, [x29, #-8]
  406f9c:	add	x8, x8, #0x8
  406fa0:	str	x8, [sp, #16]
  406fa4:	ldr	x8, [sp, #16]
  406fa8:	ldr	w9, [x8]
  406fac:	mov	w10, #0x0                   	// #0
  406fb0:	str	w10, [sp, #4]
  406fb4:	cbnz	w9, 406ff4 <get_addr_1@@Base+0x4cc>
  406fb8:	ldr	x8, [sp, #16]
  406fbc:	ldr	w9, [x8, #4]
  406fc0:	mov	w10, #0x0                   	// #0
  406fc4:	str	w10, [sp, #4]
  406fc8:	cbnz	w9, 406ff4 <get_addr_1@@Base+0x4cc>
  406fcc:	ldr	x8, [sp, #16]
  406fd0:	ldr	w9, [x8, #8]
  406fd4:	mov	w10, #0x0                   	// #0
  406fd8:	str	w10, [sp, #4]
  406fdc:	cbnz	w9, 406ff4 <get_addr_1@@Base+0x4cc>
  406fe0:	ldr	x8, [sp, #16]
  406fe4:	ldr	w9, [x8, #12]
  406fe8:	cmp	w9, #0x0
  406fec:	cset	w9, eq  // eq = none
  406ff0:	str	w9, [sp, #4]
  406ff4:	ldr	w8, [sp, #4]
  406ff8:	and	w8, w8, #0x1
  406ffc:	str	w8, [sp, #12]
  407000:	ldr	w8, [sp, #12]
  407004:	cbz	w8, 40701c <get_addr_1@@Base+0x4f4>
  407008:	ldur	x8, [x29, #-8]
  40700c:	ldrh	w9, [x8]
  407010:	orr	w9, w9, #0x6
  407014:	strh	w9, [x8]
  407018:	b	407054 <get_addr_1@@Base+0x52c>
  40701c:	ldur	x8, [x29, #-8]
  407020:	ldrb	w9, [x8, #8]
  407024:	cmp	w9, #0xff
  407028:	b.ne	407044 <get_addr_1@@Base+0x51c>  // b.any
  40702c:	ldur	x8, [x29, #-8]
  407030:	ldrh	w9, [x8]
  407034:	mov	w10, #0xa                   	// #10
  407038:	orr	w9, w9, w10
  40703c:	strh	w9, [x8]
  407040:	b	407054 <get_addr_1@@Base+0x52c>
  407044:	ldur	x8, [x29, #-8]
  407048:	ldrh	w9, [x8]
  40704c:	orr	w9, w9, #0x2
  407050:	strh	w9, [x8]
  407054:	ldp	x29, x30, [sp, #32]
  407058:	add	sp, sp, #0x30
  40705c:	ret

0000000000407060 <af_bit_len@@Base>:
  407060:	sub	sp, sp, #0x10
  407064:	str	w0, [sp, #8]
  407068:	ldr	w8, [sp, #8]
  40706c:	subs	w8, w8, #0x2
  407070:	mov	w9, w8
  407074:	ubfx	x9, x9, #0, #32
  407078:	cmp	x9, #0x1a
  40707c:	str	x9, [sp]
  407080:	b.hi	4070d8 <af_bit_len@@Base+0x78>  // b.pmore
  407084:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407088:	add	x8, x8, #0x750
  40708c:	ldr	x11, [sp]
  407090:	ldrsw	x10, [x8, x11, lsl #2]
  407094:	add	x9, x8, x10
  407098:	br	x9
  40709c:	mov	w8, #0x80                  	// #128
  4070a0:	str	w8, [sp, #12]
  4070a4:	b	4070dc <af_bit_len@@Base+0x7c>
  4070a8:	mov	w8, #0x20                  	// #32
  4070ac:	str	w8, [sp, #12]
  4070b0:	b	4070dc <af_bit_len@@Base+0x7c>
  4070b4:	mov	w8, #0x10                  	// #16
  4070b8:	str	w8, [sp, #12]
  4070bc:	b	4070dc <af_bit_len@@Base+0x7c>
  4070c0:	mov	w8, #0x50                  	// #80
  4070c4:	str	w8, [sp, #12]
  4070c8:	b	4070dc <af_bit_len@@Base+0x7c>
  4070cc:	mov	w8, #0x14                  	// #20
  4070d0:	str	w8, [sp, #12]
  4070d4:	b	4070dc <af_bit_len@@Base+0x7c>
  4070d8:	str	wzr, [sp, #12]
  4070dc:	ldr	w0, [sp, #12]
  4070e0:	add	sp, sp, #0x10
  4070e4:	ret

00000000004070e8 <get_prefix_1@@Base>:
  4070e8:	sub	sp, sp, #0x50
  4070ec:	stp	x29, x30, [sp, #64]
  4070f0:	add	x29, sp, #0x40
  4070f4:	mov	w8, #0x2f                  	// #47
  4070f8:	stur	x0, [x29, #-16]
  4070fc:	stur	x1, [x29, #-24]
  407100:	stur	w2, [x29, #-28]
  407104:	ldur	x0, [x29, #-24]
  407108:	mov	w1, w8
  40710c:	bl	405060 <strchr@plt>
  407110:	str	x0, [sp, #24]
  407114:	ldr	x9, [sp, #24]
  407118:	cbz	x9, 407128 <get_prefix_1@@Base+0x40>
  40711c:	ldr	x8, [sp, #24]
  407120:	mov	w9, #0x0                   	// #0
  407124:	strb	w9, [x8]
  407128:	ldur	x0, [x29, #-16]
  40712c:	ldur	x1, [x29, #-24]
  407130:	ldur	w2, [x29, #-28]
  407134:	bl	406b28 <get_addr_1@@Base>
  407138:	str	w0, [sp, #20]
  40713c:	ldr	x8, [sp, #24]
  407140:	cbz	x8, 407150 <get_prefix_1@@Base+0x68>
  407144:	ldr	x8, [sp, #24]
  407148:	mov	w9, #0x2f                  	// #47
  40714c:	strb	w9, [x8]
  407150:	ldr	w8, [sp, #20]
  407154:	cbz	w8, 407164 <get_prefix_1@@Base+0x7c>
  407158:	ldr	w8, [sp, #20]
  40715c:	stur	w8, [x29, #-4]
  407160:	b	407238 <get_prefix_1@@Base+0x150>
  407164:	ldur	x8, [x29, #-16]
  407168:	ldrh	w0, [x8, #6]
  40716c:	bl	407060 <af_bit_len@@Base>
  407170:	str	w0, [sp, #16]
  407174:	str	wzr, [sp, #12]
  407178:	ldr	x8, [sp, #24]
  40717c:	cbz	x8, 4071fc <get_prefix_1@@Base+0x114>
  407180:	ldur	x8, [x29, #-16]
  407184:	ldrsh	w9, [x8, #4]
  407188:	mov	w10, #0xfffffffe            	// #-2
  40718c:	cmp	w9, w10
  407190:	b.ne	4071a0 <get_prefix_1@@Base+0xb8>  // b.any
  407194:	mov	w8, #0xffffffff            	// #-1
  407198:	stur	w8, [x29, #-4]
  40719c:	b	407238 <get_prefix_1@@Base+0x150>
  4071a0:	ldr	x8, [sp, #24]
  4071a4:	add	x1, x8, #0x1
  4071a8:	add	x0, sp, #0x8
  4071ac:	mov	w9, wzr
  4071b0:	mov	w2, w9
  4071b4:	bl	407248 <get_prefix_1@@Base+0x160>
  4071b8:	cbz	w0, 4071c8 <get_prefix_1@@Base+0xe0>
  4071bc:	mov	w8, #0xffffffff            	// #-1
  4071c0:	stur	w8, [x29, #-4]
  4071c4:	b	407238 <get_prefix_1@@Base+0x150>
  4071c8:	ldr	w8, [sp, #8]
  4071cc:	ldr	w9, [sp, #16]
  4071d0:	cmp	w8, w9
  4071d4:	b.ls	4071e4 <get_prefix_1@@Base+0xfc>  // b.plast
  4071d8:	mov	w8, #0xffffffff            	// #-1
  4071dc:	stur	w8, [x29, #-4]
  4071e0:	b	407238 <get_prefix_1@@Base+0x150>
  4071e4:	ldr	w8, [sp, #12]
  4071e8:	orr	w8, w8, #0x1
  4071ec:	str	w8, [sp, #12]
  4071f0:	ldr	w8, [sp, #8]
  4071f4:	str	w8, [sp, #16]
  4071f8:	b	407214 <get_prefix_1@@Base+0x12c>
  4071fc:	ldur	x8, [x29, #-16]
  407200:	ldrsh	w9, [x8, #4]
  407204:	mov	w10, #0xfffffffe            	// #-2
  407208:	cmp	w9, w10
  40720c:	b.ne	407214 <get_prefix_1@@Base+0x12c>  // b.any
  407210:	str	wzr, [sp, #16]
  407214:	ldr	w8, [sp, #12]
  407218:	ldur	x9, [x29, #-16]
  40721c:	ldrh	w10, [x9]
  407220:	orr	w8, w10, w8
  407224:	strh	w8, [x9]
  407228:	ldr	w8, [sp, #16]
  40722c:	ldur	x9, [x29, #-16]
  407230:	strh	w8, [x9, #4]
  407234:	stur	wzr, [x29, #-4]
  407238:	ldur	w0, [x29, #-4]
  40723c:	ldp	x29, x30, [sp, #64]
  407240:	add	sp, sp, #0x50
  407244:	ret
  407248:	sub	sp, sp, #0x150
  40724c:	stp	x29, x30, [sp, #304]
  407250:	str	x28, [sp, #320]
  407254:	add	x29, sp, #0x130
  407258:	stur	x0, [x29, #-16]
  40725c:	stur	x1, [x29, #-24]
  407260:	stur	w2, [x29, #-28]
  407264:	ldur	x0, [x29, #-16]
  407268:	ldur	x1, [x29, #-24]
  40726c:	ldur	w2, [x29, #-28]
  407270:	bl	405f60 <get_unsigned@@Base>
  407274:	cbnz	w0, 407280 <get_prefix_1@@Base+0x198>
  407278:	stur	wzr, [x29, #-4]
  40727c:	b	4072d8 <get_prefix_1@@Base+0x1f0>
  407280:	ldur	x1, [x29, #-24]
  407284:	add	x0, sp, #0xc
  407288:	mov	w2, #0x2                   	// #2
  40728c:	bl	406b28 <get_addr_1@@Base>
  407290:	cbnz	w0, 4072d0 <get_prefix_1@@Base+0x1e8>
  407294:	ldrh	w8, [sp, #18]
  407298:	cmp	w8, #0x2
  40729c:	b.ne	4072d0 <get_prefix_1@@Base+0x1e8>  // b.any
  4072a0:	ldr	w0, [sp, #20]
  4072a4:	bl	405ed8 <mask2bits@@Base>
  4072a8:	str	w0, [sp, #8]
  4072ac:	ldr	w8, [sp, #8]
  4072b0:	cmp	w8, #0x0
  4072b4:	cset	w8, lt  // lt = tstop
  4072b8:	tbnz	w8, #0, 4072d0 <get_prefix_1@@Base+0x1e8>
  4072bc:	ldr	w8, [sp, #8]
  4072c0:	ldur	x9, [x29, #-16]
  4072c4:	str	w8, [x9]
  4072c8:	stur	wzr, [x29, #-4]
  4072cc:	b	4072d8 <get_prefix_1@@Base+0x1f0>
  4072d0:	mov	w8, #0xffffffff            	// #-1
  4072d4:	stur	w8, [x29, #-4]
  4072d8:	ldur	w0, [x29, #-4]
  4072dc:	ldr	x28, [sp, #320]
  4072e0:	ldp	x29, x30, [sp, #304]
  4072e4:	add	sp, sp, #0x150
  4072e8:	ret

00000000004072ec <get_addr@@Base>:
  4072ec:	sub	sp, sp, #0x40
  4072f0:	stp	x29, x30, [sp, #48]
  4072f4:	add	x29, sp, #0x30
  4072f8:	stur	x0, [x29, #-8]
  4072fc:	stur	x1, [x29, #-16]
  407300:	stur	w2, [x29, #-20]
  407304:	ldur	x0, [x29, #-8]
  407308:	ldur	x1, [x29, #-16]
  40730c:	ldur	w2, [x29, #-20]
  407310:	bl	406b28 <get_addr_1@@Base>
  407314:	cbz	w0, 407360 <get_addr@@Base+0x74>
  407318:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40731c:	ldr	x8, [x8, #3992]
  407320:	ldr	x0, [x8]
  407324:	ldur	w9, [x29, #-20]
  407328:	str	x0, [sp, #16]
  40732c:	mov	w0, w9
  407330:	bl	407374 <get_addr@@Base+0x88>
  407334:	ldur	x3, [x29, #-16]
  407338:	ldr	x8, [sp, #16]
  40733c:	str	x0, [sp, #8]
  407340:	mov	x0, x8
  407344:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407348:	add	x1, x1, #0x936
  40734c:	ldr	x2, [sp, #8]
  407350:	bl	4051e0 <fprintf@plt>
  407354:	mov	w9, #0x1                   	// #1
  407358:	mov	w0, w9
  40735c:	bl	404ce0 <exit@plt>
  407360:	mov	w8, wzr
  407364:	mov	w0, w8
  407368:	ldp	x29, x30, [sp, #48]
  40736c:	add	sp, sp, #0x40
  407370:	ret
  407374:	sub	sp, sp, #0x20
  407378:	stp	x29, x30, [sp, #16]
  40737c:	add	x29, sp, #0x10
  407380:	str	w0, [sp, #4]
  407384:	ldr	w8, [sp, #4]
  407388:	cbnz	w8, 40739c <get_addr@@Base+0xb0>
  40738c:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407390:	add	x8, x8, #0xca0
  407394:	str	x8, [sp, #8]
  407398:	b	4073a8 <get_addr@@Base+0xbc>
  40739c:	ldr	w0, [sp, #4]
  4073a0:	bl	408028 <family_name@@Base>
  4073a4:	str	x0, [sp, #8]
  4073a8:	ldr	x0, [sp, #8]
  4073ac:	ldp	x29, x30, [sp, #16]
  4073b0:	add	sp, sp, #0x20
  4073b4:	ret

00000000004073b8 <get_addr_rta@@Base>:
  4073b8:	sub	sp, sp, #0x40
  4073bc:	stp	x29, x30, [sp, #48]
  4073c0:	add	x29, sp, #0x30
  4073c4:	stur	x0, [x29, #-16]
  4073c8:	str	x1, [sp, #24]
  4073cc:	str	w2, [sp, #20]
  4073d0:	ldr	x8, [sp, #24]
  4073d4:	ldrh	w9, [x8]
  4073d8:	mov	w0, w9
  4073dc:	sxtw	x8, w0
  4073e0:	subs	x8, x8, #0x4
  4073e4:	str	w8, [sp, #16]
  4073e8:	ldr	x10, [sp, #24]
  4073ec:	add	x10, x10, #0x4
  4073f0:	str	x10, [sp, #8]
  4073f4:	ldr	w8, [sp, #16]
  4073f8:	subs	w8, w8, #0x2
  4073fc:	mov	w10, w8
  407400:	ubfx	x10, x10, #0, #32
  407404:	cmp	x10, #0xe
  407408:	str	x10, [sp]
  40740c:	b.hi	4074e0 <get_addr_rta@@Base+0x128>  // b.pmore
  407410:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407414:	add	x8, x8, #0x7bc
  407418:	ldr	x11, [sp]
  40741c:	ldrsw	x10, [x8, x11, lsl #2]
  407420:	add	x9, x8, x10
  407424:	br	x9
  407428:	ldur	x8, [x29, #-16]
  40742c:	mov	w9, #0x2                   	// #2
  407430:	strh	w9, [x8, #6]
  407434:	ldur	x8, [x29, #-16]
  407438:	mov	w9, #0x4                   	// #4
  40743c:	strh	w9, [x8, #2]
  407440:	ldur	x8, [x29, #-16]
  407444:	ldr	x10, [sp, #8]
  407448:	ldr	w9, [x10]
  40744c:	str	w9, [x8, #8]
  407450:	b	4074ec <get_addr_rta@@Base+0x134>
  407454:	ldur	x8, [x29, #-16]
  407458:	mov	w9, #0xa                   	// #10
  40745c:	strh	w9, [x8, #6]
  407460:	ldur	x8, [x29, #-16]
  407464:	mov	w9, #0x10                  	// #16
  407468:	strh	w9, [x8, #2]
  40746c:	ldur	x8, [x29, #-16]
  407470:	ldr	x10, [sp, #8]
  407474:	ldr	q0, [x10]
  407478:	stur	q0, [x8, #8]
  40747c:	b	4074ec <get_addr_rta@@Base+0x134>
  407480:	ldur	x8, [x29, #-16]
  407484:	mov	w9, #0xc                   	// #12
  407488:	strh	w9, [x8, #6]
  40748c:	ldur	x8, [x29, #-16]
  407490:	mov	w9, #0x2                   	// #2
  407494:	strh	w9, [x8, #2]
  407498:	ldur	x8, [x29, #-16]
  40749c:	ldr	x10, [sp, #8]
  4074a0:	ldrh	w9, [x10]
  4074a4:	strh	w9, [x8, #8]
  4074a8:	b	4074ec <get_addr_rta@@Base+0x134>
  4074ac:	ldur	x8, [x29, #-16]
  4074b0:	mov	w9, #0x4                   	// #4
  4074b4:	strh	w9, [x8, #6]
  4074b8:	ldur	x8, [x29, #-16]
  4074bc:	mov	w9, #0xa                   	// #10
  4074c0:	strh	w9, [x8, #2]
  4074c4:	ldur	x8, [x29, #-16]
  4074c8:	ldr	x10, [sp, #8]
  4074cc:	ldr	x11, [x10]
  4074d0:	str	x11, [x8, #8]
  4074d4:	ldrh	w9, [x10, #8]
  4074d8:	strh	w9, [x8, #16]
  4074dc:	b	4074ec <get_addr_rta@@Base+0x134>
  4074e0:	mov	w8, #0xffffffff            	// #-1
  4074e4:	stur	w8, [x29, #-4]
  4074e8:	b	407538 <get_addr_rta@@Base+0x180>
  4074ec:	ldr	w8, [sp, #20]
  4074f0:	cbz	w8, 407514 <get_addr_rta@@Base+0x15c>
  4074f4:	ldr	w8, [sp, #20]
  4074f8:	ldur	x9, [x29, #-16]
  4074fc:	ldrh	w10, [x9, #6]
  407500:	cmp	w8, w10
  407504:	b.eq	407514 <get_addr_rta@@Base+0x15c>  // b.none
  407508:	mov	w8, #0xfffffffe            	// #-2
  40750c:	stur	w8, [x29, #-4]
  407510:	b	407538 <get_addr_rta@@Base+0x180>
  407514:	ldur	x8, [x29, #-16]
  407518:	mov	w9, #0xffff                	// #65535
  40751c:	strh	w9, [x8, #4]
  407520:	ldur	x8, [x29, #-16]
  407524:	mov	w9, #0x0                   	// #0
  407528:	strh	w9, [x8]
  40752c:	ldur	x0, [x29, #-16]
  407530:	bl	406ef8 <get_addr_1@@Base+0x3d0>
  407534:	stur	wzr, [x29, #-4]
  407538:	ldur	w0, [x29, #-4]
  40753c:	ldp	x29, x30, [sp, #48]
  407540:	add	sp, sp, #0x40
  407544:	ret

0000000000407548 <get_prefix@@Base>:
  407548:	sub	sp, sp, #0x40
  40754c:	stp	x29, x30, [sp, #48]
  407550:	add	x29, sp, #0x30
  407554:	stur	x0, [x29, #-8]
  407558:	stur	x1, [x29, #-16]
  40755c:	stur	w2, [x29, #-20]
  407560:	ldur	w8, [x29, #-20]
  407564:	cmp	w8, #0x11
  407568:	b.ne	407594 <get_prefix@@Base+0x4c>  // b.any
  40756c:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  407570:	ldr	x8, [x8, #3992]
  407574:	ldr	x0, [x8]
  407578:	ldur	x2, [x29, #-16]
  40757c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407580:	add	x1, x1, #0x967
  407584:	bl	4051e0 <fprintf@plt>
  407588:	mov	w9, #0x1                   	// #1
  40758c:	mov	w0, w9
  407590:	bl	404ce0 <exit@plt>
  407594:	ldur	x0, [x29, #-8]
  407598:	ldur	x1, [x29, #-16]
  40759c:	ldur	w2, [x29, #-20]
  4075a0:	bl	4070e8 <get_prefix_1@@Base>
  4075a4:	cbz	w0, 4075f0 <get_prefix@@Base+0xa8>
  4075a8:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  4075ac:	ldr	x8, [x8, #3992]
  4075b0:	ldr	x0, [x8]
  4075b4:	ldur	w9, [x29, #-20]
  4075b8:	str	x0, [sp, #16]
  4075bc:	mov	w0, w9
  4075c0:	bl	407374 <get_addr@@Base+0x88>
  4075c4:	ldur	x3, [x29, #-16]
  4075c8:	ldr	x8, [sp, #16]
  4075cc:	str	x0, [sp, #8]
  4075d0:	mov	x0, x8
  4075d4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4075d8:	add	x1, x1, #0x9af
  4075dc:	ldr	x2, [sp, #8]
  4075e0:	bl	4051e0 <fprintf@plt>
  4075e4:	mov	w9, #0x1                   	// #1
  4075e8:	mov	w0, w9
  4075ec:	bl	404ce0 <exit@plt>
  4075f0:	mov	w8, wzr
  4075f4:	mov	w0, w8
  4075f8:	ldp	x29, x30, [sp, #48]
  4075fc:	add	sp, sp, #0x40
  407600:	ret

0000000000407604 <get_addr32@@Base>:
  407604:	sub	sp, sp, #0x130
  407608:	stp	x29, x30, [sp, #272]
  40760c:	str	x28, [sp, #288]
  407610:	add	x29, sp, #0x110
  407614:	mov	w2, #0x2                   	// #2
  407618:	mov	x8, sp
  40761c:	stur	x0, [x29, #-8]
  407620:	ldur	x1, [x29, #-8]
  407624:	mov	x0, x8
  407628:	bl	406b28 <get_addr_1@@Base>
  40762c:	cbz	w0, 407658 <get_addr32@@Base+0x54>
  407630:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  407634:	ldr	x8, [x8, #3992]
  407638:	ldr	x0, [x8]
  40763c:	ldur	x2, [x29, #-8]
  407640:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407644:	add	x1, x1, #0x9df
  407648:	bl	4051e0 <fprintf@plt>
  40764c:	mov	w9, #0x1                   	// #1
  407650:	mov	w0, w9
  407654:	bl	404ce0 <exit@plt>
  407658:	ldr	w0, [sp, #8]
  40765c:	ldr	x28, [sp, #288]
  407660:	ldp	x29, x30, [sp, #272]
  407664:	add	sp, sp, #0x130
  407668:	ret

000000000040766c <incomplete_command@@Base>:
  40766c:	sub	sp, sp, #0x20
  407670:	stp	x29, x30, [sp, #16]
  407674:	add	x29, sp, #0x10
  407678:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40767c:	ldr	x8, [x8, #3992]
  407680:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407684:	add	x1, x1, #0xa12
  407688:	mov	w0, #0xffffffff            	// #-1
  40768c:	ldr	x8, [x8]
  407690:	stur	w0, [x29, #-4]
  407694:	mov	x0, x8
  407698:	bl	4051e0 <fprintf@plt>
  40769c:	ldur	w9, [x29, #-4]
  4076a0:	mov	w0, w9
  4076a4:	bl	404ce0 <exit@plt>

00000000004076a8 <missarg@@Base>:
  4076a8:	sub	sp, sp, #0x20
  4076ac:	stp	x29, x30, [sp, #16]
  4076b0:	add	x29, sp, #0x10
  4076b4:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  4076b8:	ldr	x8, [x8, #3992]
  4076bc:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4076c0:	add	x1, x1, #0xa43
  4076c4:	mov	w9, #0xffffffff            	// #-1
  4076c8:	str	x0, [sp, #8]
  4076cc:	ldr	x0, [x8]
  4076d0:	ldr	x2, [sp, #8]
  4076d4:	str	w9, [sp, #4]
  4076d8:	bl	4051e0 <fprintf@plt>
  4076dc:	ldr	w9, [sp, #4]
  4076e0:	mov	w0, w9
  4076e4:	bl	404ce0 <exit@plt>

00000000004076e8 <invarg@@Base>:
  4076e8:	sub	sp, sp, #0x30
  4076ec:	stp	x29, x30, [sp, #32]
  4076f0:	add	x29, sp, #0x20
  4076f4:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  4076f8:	ldr	x8, [x8, #3992]
  4076fc:	adrp	x9, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407700:	add	x9, x9, #0xa65
  407704:	mov	w10, #0xffffffff            	// #-1
  407708:	stur	x0, [x29, #-8]
  40770c:	str	x1, [sp, #16]
  407710:	ldr	x0, [x8]
  407714:	ldr	x2, [sp, #16]
  407718:	ldur	x3, [x29, #-8]
  40771c:	mov	x1, x9
  407720:	str	w10, [sp, #12]
  407724:	bl	4051e0 <fprintf@plt>
  407728:	ldr	w10, [sp, #12]
  40772c:	mov	w0, w10
  407730:	bl	404ce0 <exit@plt>

0000000000407734 <duparg@@Base>:
  407734:	sub	sp, sp, #0x30
  407738:	stp	x29, x30, [sp, #32]
  40773c:	add	x29, sp, #0x20
  407740:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  407744:	ldr	x8, [x8, #3992]
  407748:	adrp	x9, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40774c:	add	x9, x9, #0xa88
  407750:	mov	w10, #0xffffffff            	// #-1
  407754:	stur	x0, [x29, #-8]
  407758:	str	x1, [sp, #16]
  40775c:	ldr	x0, [x8]
  407760:	ldur	x2, [x29, #-8]
  407764:	ldr	x3, [sp, #16]
  407768:	mov	x1, x9
  40776c:	str	w10, [sp, #12]
  407770:	bl	4051e0 <fprintf@plt>
  407774:	ldr	w10, [sp, #12]
  407778:	mov	w0, w10
  40777c:	bl	404ce0 <exit@plt>

0000000000407780 <duparg2@@Base>:
  407780:	sub	sp, sp, #0x30
  407784:	stp	x29, x30, [sp, #32]
  407788:	add	x29, sp, #0x20
  40778c:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  407790:	ldr	x8, [x8, #3992]
  407794:	adrp	x9, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407798:	add	x9, x9, #0xaba
  40779c:	mov	w10, #0xffffffff            	// #-1
  4077a0:	stur	x0, [x29, #-8]
  4077a4:	str	x1, [sp, #16]
  4077a8:	ldr	x0, [x8]
  4077ac:	ldur	x2, [x29, #-8]
  4077b0:	ldr	x3, [sp, #16]
  4077b4:	mov	x1, x9
  4077b8:	str	w10, [sp, #12]
  4077bc:	bl	4051e0 <fprintf@plt>
  4077c0:	ldr	w10, [sp, #12]
  4077c4:	mov	w0, w10
  4077c8:	bl	404ce0 <exit@plt>

00000000004077cc <nodev@@Base>:
  4077cc:	sub	sp, sp, #0x20
  4077d0:	stp	x29, x30, [sp, #16]
  4077d4:	add	x29, sp, #0x10
  4077d8:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  4077dc:	ldr	x8, [x8, #3992]
  4077e0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4077e4:	add	x1, x1, #0xaf2
  4077e8:	mov	w9, #0xffffffff            	// #-1
  4077ec:	str	x0, [sp, #8]
  4077f0:	ldr	x0, [x8]
  4077f4:	ldr	x2, [sp, #8]
  4077f8:	str	w9, [sp, #4]
  4077fc:	bl	4051e0 <fprintf@plt>
  407800:	ldr	w9, [sp, #4]
  407804:	mov	w0, w9
  407808:	ldp	x29, x30, [sp, #16]
  40780c:	add	sp, sp, #0x20
  407810:	ret

0000000000407814 <check_ifname@@Base>:
  407814:	sub	sp, sp, #0x20
  407818:	stp	x29, x30, [sp, #16]
  40781c:	add	x29, sp, #0x10
  407820:	str	x0, [sp]
  407824:	ldr	x0, [sp]
  407828:	bl	404cc0 <strlen@plt>
  40782c:	cmp	x0, #0x10
  407830:	b.cc	407840 <check_ifname@@Base+0x2c>  // b.lo, b.ul, b.last
  407834:	mov	w8, #0xffffffff            	// #-1
  407838:	stur	w8, [x29, #-4]
  40783c:	b	40784c <check_ifname@@Base+0x38>
  407840:	ldr	x0, [sp]
  407844:	bl	40785c <check_ifname@@Base+0x48>
  407848:	stur	w0, [x29, #-4]
  40784c:	ldur	w0, [x29, #-4]
  407850:	ldp	x29, x30, [sp, #16]
  407854:	add	sp, sp, #0x20
  407858:	ret
  40785c:	sub	sp, sp, #0x20
  407860:	stp	x29, x30, [sp, #16]
  407864:	add	x29, sp, #0x10
  407868:	str	x0, [sp]
  40786c:	ldr	x8, [sp]
  407870:	ldrb	w9, [x8]
  407874:	cbnz	w9, 407884 <check_ifname@@Base+0x70>
  407878:	mov	w8, #0xffffffff            	// #-1
  40787c:	stur	w8, [x29, #-4]
  407880:	b	4078dc <check_ifname@@Base+0xc8>
  407884:	ldr	x8, [sp]
  407888:	ldrb	w9, [x8]
  40788c:	cbz	w9, 4078d8 <check_ifname@@Base+0xc4>
  407890:	ldr	x8, [sp]
  407894:	ldrb	w9, [x8]
  407898:	cmp	w9, #0x2f
  40789c:	b.eq	4078bc <check_ifname@@Base+0xa8>  // b.none
  4078a0:	bl	404fc0 <__ctype_b_loc@plt>
  4078a4:	ldr	x8, [x0]
  4078a8:	ldr	x9, [sp]
  4078ac:	ldrb	w10, [x9]
  4078b0:	ldrh	w10, [x8, w10, sxtw #1]
  4078b4:	and	w10, w10, #0x2000
  4078b8:	cbz	w10, 4078c8 <check_ifname@@Base+0xb4>
  4078bc:	mov	w8, #0xffffffff            	// #-1
  4078c0:	stur	w8, [x29, #-4]
  4078c4:	b	4078dc <check_ifname@@Base+0xc8>
  4078c8:	ldr	x8, [sp]
  4078cc:	add	x8, x8, #0x1
  4078d0:	str	x8, [sp]
  4078d4:	b	407884 <check_ifname@@Base+0x70>
  4078d8:	stur	wzr, [x29, #-4]
  4078dc:	ldur	w0, [x29, #-4]
  4078e0:	ldp	x29, x30, [sp, #16]
  4078e4:	add	sp, sp, #0x20
  4078e8:	ret

00000000004078ec <check_altifname@@Base>:
  4078ec:	sub	sp, sp, #0x20
  4078f0:	stp	x29, x30, [sp, #16]
  4078f4:	add	x29, sp, #0x10
  4078f8:	str	x0, [sp, #8]
  4078fc:	ldr	x0, [sp, #8]
  407900:	bl	40785c <check_ifname@@Base+0x48>
  407904:	ldp	x29, x30, [sp, #16]
  407908:	add	sp, sp, #0x20
  40790c:	ret

0000000000407910 <get_ifname@@Base>:
  407910:	sub	sp, sp, #0x30
  407914:	stp	x29, x30, [sp, #32]
  407918:	add	x29, sp, #0x20
  40791c:	stur	x0, [x29, #-8]
  407920:	str	x1, [sp, #16]
  407924:	ldr	x0, [sp, #16]
  407928:	bl	407814 <check_ifname@@Base>
  40792c:	str	w0, [sp, #12]
  407930:	ldr	w8, [sp, #12]
  407934:	cbnz	w8, 407948 <get_ifname@@Base+0x38>
  407938:	ldur	x0, [x29, #-8]
  40793c:	ldr	x1, [sp, #16]
  407940:	mov	x2, #0x10                  	// #16
  407944:	bl	405160 <strncpy@plt>
  407948:	ldr	w0, [sp, #12]
  40794c:	ldp	x29, x30, [sp, #32]
  407950:	add	sp, sp, #0x30
  407954:	ret

0000000000407958 <get_ifname_rta@@Base>:
  407958:	sub	sp, sp, #0x30
  40795c:	stp	x29, x30, [sp, #32]
  407960:	add	x29, sp, #0x20
  407964:	stur	w0, [x29, #-12]
  407968:	str	x1, [sp, #8]
  40796c:	ldr	x8, [sp, #8]
  407970:	cbz	x8, 407984 <get_ifname_rta@@Base+0x2c>
  407974:	ldr	x0, [sp, #8]
  407978:	bl	4079e0 <get_ifname_rta@@Base+0x88>
  40797c:	str	x0, [sp]
  407980:	b	4079b0 <get_ifname_rta@@Base+0x58>
  407984:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  407988:	ldr	x8, [x8, #3992]
  40798c:	ldr	x0, [x8]
  407990:	ldur	w2, [x29, #-12]
  407994:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407998:	add	x1, x1, #0xb0b
  40799c:	bl	4051e0 <fprintf@plt>
  4079a0:	ldur	w9, [x29, #-12]
  4079a4:	mov	w0, w9
  4079a8:	bl	40a170 <ll_idx_n2a@@Base>
  4079ac:	str	x0, [sp]
  4079b0:	ldr	x0, [sp]
  4079b4:	bl	407814 <check_ifname@@Base>
  4079b8:	cbz	w0, 4079c8 <get_ifname_rta@@Base+0x70>
  4079bc:	mov	x8, xzr
  4079c0:	stur	x8, [x29, #-8]
  4079c4:	b	4079d0 <get_ifname_rta@@Base+0x78>
  4079c8:	ldr	x8, [sp]
  4079cc:	stur	x8, [x29, #-8]
  4079d0:	ldur	x0, [x29, #-8]
  4079d4:	ldp	x29, x30, [sp, #32]
  4079d8:	add	sp, sp, #0x30
  4079dc:	ret
  4079e0:	sub	sp, sp, #0x10
  4079e4:	str	x0, [sp, #8]
  4079e8:	ldr	x8, [sp, #8]
  4079ec:	add	x0, x8, #0x4
  4079f0:	add	sp, sp, #0x10
  4079f4:	ret

00000000004079f8 <matches@@Base>:
  4079f8:	sub	sp, sp, #0x20
  4079fc:	str	x0, [sp, #16]
  407a00:	str	x1, [sp, #8]
  407a04:	ldr	x8, [sp, #16]
  407a08:	ldrb	w9, [x8]
  407a0c:	cbnz	w9, 407a20 <matches@@Base+0x28>
  407a10:	mov	w8, #0x1                   	// #1
  407a14:	and	w8, w8, #0x1
  407a18:	strb	w8, [sp, #31]
  407a1c:	b	407a9c <matches@@Base+0xa4>
  407a20:	ldr	x8, [sp, #8]
  407a24:	ldrb	w9, [x8]
  407a28:	mov	w10, #0x0                   	// #0
  407a2c:	str	w10, [sp, #4]
  407a30:	cbz	w9, 407a50 <matches@@Base+0x58>
  407a34:	ldr	x8, [sp, #16]
  407a38:	ldrb	w9, [x8]
  407a3c:	ldr	x8, [sp, #8]
  407a40:	ldrb	w10, [x8]
  407a44:	cmp	w9, w10
  407a48:	cset	w9, eq  // eq = none
  407a4c:	str	w9, [sp, #4]
  407a50:	ldr	w8, [sp, #4]
  407a54:	tbnz	w8, #0, 407a5c <matches@@Base+0x64>
  407a58:	b	407a78 <matches@@Base+0x80>
  407a5c:	ldr	x8, [sp, #16]
  407a60:	add	x8, x8, #0x1
  407a64:	str	x8, [sp, #16]
  407a68:	ldr	x8, [sp, #8]
  407a6c:	add	x8, x8, #0x1
  407a70:	str	x8, [sp, #8]
  407a74:	b	407a20 <matches@@Base+0x28>
  407a78:	ldr	x8, [sp, #16]
  407a7c:	ldrb	w9, [x8]
  407a80:	cmp	w9, #0x0
  407a84:	cset	w9, ne  // ne = any
  407a88:	mov	w10, #0x1                   	// #1
  407a8c:	eor	w9, w9, #0x1
  407a90:	eor	w9, w9, w10
  407a94:	and	w9, w9, w10
  407a98:	strb	w9, [sp, #31]
  407a9c:	ldrb	w8, [sp, #31]
  407aa0:	and	w0, w8, #0x1
  407aa4:	add	sp, sp, #0x20
  407aa8:	ret

0000000000407aac <inet_addr_match@@Base>:
  407aac:	sub	sp, sp, #0x50
  407ab0:	stp	x29, x30, [sp, #64]
  407ab4:	add	x29, sp, #0x40
  407ab8:	stur	x0, [x29, #-16]
  407abc:	stur	x1, [x29, #-24]
  407ac0:	stur	w2, [x29, #-28]
  407ac4:	ldur	x8, [x29, #-16]
  407ac8:	add	x8, x8, #0x8
  407acc:	str	x8, [sp, #24]
  407ad0:	ldur	x8, [x29, #-24]
  407ad4:	add	x8, x8, #0x8
  407ad8:	str	x8, [sp, #16]
  407adc:	ldur	w9, [x29, #-28]
  407ae0:	asr	w9, w9, #5
  407ae4:	str	w9, [sp, #12]
  407ae8:	ldur	w9, [x29, #-28]
  407aec:	and	w9, w9, #0x1f
  407af0:	stur	w9, [x29, #-28]
  407af4:	ldr	w9, [sp, #12]
  407af8:	cbz	w9, 407b28 <inet_addr_match@@Base+0x7c>
  407afc:	ldr	x0, [sp, #24]
  407b00:	ldr	x1, [sp, #16]
  407b04:	ldr	w8, [sp, #12]
  407b08:	lsl	w8, w8, #2
  407b0c:	mov	w2, w8
  407b10:	sxtw	x2, w2
  407b14:	bl	404fa0 <memcmp@plt>
  407b18:	cbz	w0, 407b28 <inet_addr_match@@Base+0x7c>
  407b1c:	mov	w8, #0xffffffff            	// #-1
  407b20:	stur	w8, [x29, #-4]
  407b24:	b	407b94 <inet_addr_match@@Base+0xe8>
  407b28:	ldur	w8, [x29, #-28]
  407b2c:	cbz	w8, 407b90 <inet_addr_match@@Base+0xe4>
  407b30:	ldr	x8, [sp, #24]
  407b34:	ldrsw	x9, [sp, #12]
  407b38:	ldr	w10, [x8, x9, lsl #2]
  407b3c:	str	w10, [sp, #8]
  407b40:	ldr	x8, [sp, #16]
  407b44:	ldrsw	x9, [sp, #12]
  407b48:	ldr	w10, [x8, x9, lsl #2]
  407b4c:	str	w10, [sp, #4]
  407b50:	ldur	w10, [x29, #-28]
  407b54:	mov	w11, #0x20                  	// #32
  407b58:	subs	w10, w11, w10
  407b5c:	mov	w11, #0xffffffff            	// #-1
  407b60:	lsl	w0, w11, w10
  407b64:	bl	404d10 <htonl@plt>
  407b68:	str	w0, [sp]
  407b6c:	ldr	w10, [sp, #8]
  407b70:	ldr	w11, [sp, #4]
  407b74:	eor	w10, w10, w11
  407b78:	ldr	w11, [sp]
  407b7c:	and	w10, w10, w11
  407b80:	cbz	w10, 407b90 <inet_addr_match@@Base+0xe4>
  407b84:	mov	w8, #0x1                   	// #1
  407b88:	stur	w8, [x29, #-4]
  407b8c:	b	407b94 <inet_addr_match@@Base+0xe8>
  407b90:	stur	wzr, [x29, #-4]
  407b94:	ldur	w0, [x29, #-4]
  407b98:	ldp	x29, x30, [sp, #64]
  407b9c:	add	sp, sp, #0x50
  407ba0:	ret

0000000000407ba4 <inet_addr_match_rta@@Base>:
  407ba4:	sub	sp, sp, #0x140
  407ba8:	stp	x29, x30, [sp, #288]
  407bac:	str	x28, [sp, #304]
  407bb0:	add	x29, sp, #0x120
  407bb4:	stur	x0, [x29, #-16]
  407bb8:	stur	x1, [x29, #-24]
  407bbc:	ldur	x8, [x29, #-24]
  407bc0:	cbz	x8, 407be4 <inet_addr_match_rta@@Base+0x40>
  407bc4:	ldur	x8, [x29, #-16]
  407bc8:	ldrh	w9, [x8, #6]
  407bcc:	cbz	w9, 407be4 <inet_addr_match_rta@@Base+0x40>
  407bd0:	ldur	x8, [x29, #-16]
  407bd4:	ldrsh	w9, [x8, #4]
  407bd8:	cmp	w9, #0x0
  407bdc:	cset	w9, gt
  407be0:	tbnz	w9, #0, 407bec <inet_addr_match_rta@@Base+0x48>
  407be4:	stur	wzr, [x29, #-4]
  407be8:	b	407c28 <inet_addr_match_rta@@Base+0x84>
  407bec:	ldur	x1, [x29, #-24]
  407bf0:	ldur	x8, [x29, #-16]
  407bf4:	ldrh	w2, [x8, #6]
  407bf8:	mov	x0, sp
  407bfc:	bl	4073b8 <get_addr_rta@@Base>
  407c00:	cbz	w0, 407c10 <inet_addr_match_rta@@Base+0x6c>
  407c04:	mov	w8, #0xffffffff            	// #-1
  407c08:	stur	w8, [x29, #-4]
  407c0c:	b	407c28 <inet_addr_match_rta@@Base+0x84>
  407c10:	ldur	x1, [x29, #-16]
  407c14:	ldur	x8, [x29, #-16]
  407c18:	ldrsh	w2, [x8, #4]
  407c1c:	mov	x0, sp
  407c20:	bl	407aac <inet_addr_match@@Base>
  407c24:	stur	w0, [x29, #-4]
  407c28:	ldur	w0, [x29, #-4]
  407c2c:	ldr	x28, [sp, #304]
  407c30:	ldp	x29, x30, [sp, #288]
  407c34:	add	sp, sp, #0x140
  407c38:	ret

0000000000407c3c <__get_hz@@Base>:
  407c3c:	stp	x29, x30, [sp, #-32]!
  407c40:	str	x28, [sp, #16]
  407c44:	mov	x29, sp
  407c48:	sub	sp, sp, #0x430
  407c4c:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407c50:	add	x0, x0, #0xb37
  407c54:	str	wzr, [sp, #40]
  407c58:	bl	4051c0 <getenv@plt>
  407c5c:	cbz	x0, 407c98 <__get_hz@@Base+0x5c>
  407c60:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407c64:	add	x0, x0, #0xb37
  407c68:	bl	4051c0 <getenv@plt>
  407c6c:	bl	404e10 <atoi@plt>
  407c70:	str	w0, [sp, #20]
  407c74:	cbz	w0, 407c84 <__get_hz@@Base+0x48>
  407c78:	ldr	w8, [sp, #20]
  407c7c:	str	w8, [sp, #16]
  407c80:	b	407c8c <__get_hz@@Base+0x50>
  407c84:	mov	w8, #0x64                  	// #100
  407c88:	str	w8, [sp, #16]
  407c8c:	ldr	w8, [sp, #16]
  407c90:	stur	w8, [x29, #-4]
  407c94:	b	407da4 <__get_hz@@Base+0x168>
  407c98:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407c9c:	add	x0, x0, #0xb3a
  407ca0:	bl	4051c0 <getenv@plt>
  407ca4:	cbz	x0, 407cd8 <__get_hz@@Base+0x9c>
  407ca8:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407cac:	add	x0, x0, #0xb3a
  407cb0:	bl	4051c0 <getenv@plt>
  407cb4:	add	x8, sp, #0x2c
  407cb8:	str	x0, [sp, #8]
  407cbc:	mov	x0, x8
  407cc0:	mov	x1, #0x3ff                 	// #1023
  407cc4:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407cc8:	add	x2, x2, #0x914
  407ccc:	ldr	x3, [sp, #8]
  407cd0:	bl	404dd0 <snprintf@plt>
  407cd4:	b	407d28 <__get_hz@@Base+0xec>
  407cd8:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407cdc:	add	x0, x0, #0xb4a
  407ce0:	bl	4051c0 <getenv@plt>
  407ce4:	cbz	x0, 407d18 <__get_hz@@Base+0xdc>
  407ce8:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407cec:	add	x0, x0, #0xb4a
  407cf0:	bl	4051c0 <getenv@plt>
  407cf4:	add	x8, sp, #0x2c
  407cf8:	str	x0, [sp]
  407cfc:	mov	x0, x8
  407d00:	mov	x1, #0x3ff                 	// #1023
  407d04:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407d08:	add	x2, x2, #0xb54
  407d0c:	ldr	x3, [sp]
  407d10:	bl	404dd0 <snprintf@plt>
  407d14:	b	407d28 <__get_hz@@Base+0xec>
  407d18:	add	x0, sp, #0x2c
  407d1c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407d20:	add	x1, x1, #0xb62
  407d24:	bl	4050b0 <strcpy@plt>
  407d28:	add	x0, sp, #0x2c
  407d2c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407d30:	add	x1, x1, #0xe40
  407d34:	bl	4050c0 <fopen64@plt>
  407d38:	str	x0, [sp, #32]
  407d3c:	ldr	x8, [sp, #32]
  407d40:	cbz	x8, 407d88 <__get_hz@@Base+0x14c>
  407d44:	ldr	x0, [sp, #32]
  407d48:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407d4c:	add	x1, x1, #0xb73
  407d50:	add	x2, sp, #0x1c
  407d54:	add	x3, sp, #0x18
  407d58:	bl	404e60 <__isoc99_fscanf@plt>
  407d5c:	cmp	w0, #0x2
  407d60:	b.ne	407d80 <__get_hz@@Base+0x144>  // b.any
  407d64:	ldr	w8, [sp, #28]
  407d68:	mov	w9, #0x4240                	// #16960
  407d6c:	movk	w9, #0xf, lsl #16
  407d70:	cmp	w8, w9
  407d74:	b.ne	407d80 <__get_hz@@Base+0x144>  // b.any
  407d78:	ldr	w8, [sp, #24]
  407d7c:	str	w8, [sp, #40]
  407d80:	ldr	x0, [sp, #32]
  407d84:	bl	404e00 <fclose@plt>
  407d88:	ldr	w8, [sp, #40]
  407d8c:	cbz	w8, 407d9c <__get_hz@@Base+0x160>
  407d90:	ldr	w8, [sp, #40]
  407d94:	stur	w8, [x29, #-4]
  407d98:	b	407da4 <__get_hz@@Base+0x168>
  407d9c:	mov	w8, #0x64                  	// #100
  407da0:	stur	w8, [x29, #-4]
  407da4:	ldur	w0, [x29, #-4]
  407da8:	add	sp, sp, #0x430
  407dac:	ldr	x28, [sp, #16]
  407db0:	ldp	x29, x30, [sp], #32
  407db4:	ret

0000000000407db8 <__get_user_hz@@Base>:
  407db8:	stp	x29, x30, [sp, #-16]!
  407dbc:	mov	x29, sp
  407dc0:	mov	w0, #0x2                   	// #2
  407dc4:	bl	4050f0 <sysconf@plt>
  407dc8:	ldp	x29, x30, [sp], #16
  407dcc:	ret

0000000000407dd0 <rt_addr_n2a_r@@Base>:
  407dd0:	sub	sp, sp, #0x50
  407dd4:	stp	x29, x30, [sp, #64]
  407dd8:	add	x29, sp, #0x40
  407ddc:	stur	w0, [x29, #-12]
  407de0:	stur	w1, [x29, #-16]
  407de4:	stur	x2, [x29, #-24]
  407de8:	str	x3, [sp, #32]
  407dec:	str	w4, [sp, #28]
  407df0:	ldur	w8, [x29, #-12]
  407df4:	subs	w8, w8, #0x2
  407df8:	mov	w9, w8
  407dfc:	ubfx	x9, x9, #0, #32
  407e00:	cmp	x9, #0x1a
  407e04:	str	x9, [sp, #8]
  407e08:	b.hi	407eec <rt_addr_n2a_r@@Base+0x11c>  // b.pmore
  407e0c:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407e10:	add	x8, x8, #0x7f8
  407e14:	ldr	x11, [sp, #8]
  407e18:	ldrsw	x10, [x8, x11, lsl #2]
  407e1c:	add	x9, x8, x10
  407e20:	br	x9
  407e24:	ldur	w0, [x29, #-12]
  407e28:	ldur	x1, [x29, #-24]
  407e2c:	ldr	x2, [sp, #32]
  407e30:	ldr	w3, [sp, #28]
  407e34:	bl	405200 <inet_ntop@plt>
  407e38:	stur	x0, [x29, #-8]
  407e3c:	b	407ef8 <rt_addr_n2a_r@@Base+0x128>
  407e40:	ldur	w0, [x29, #-12]
  407e44:	ldur	x1, [x29, #-24]
  407e48:	ldr	x2, [sp, #32]
  407e4c:	ldrsw	x3, [sp, #28]
  407e50:	bl	40c8b4 <mpls_ntop@@Base>
  407e54:	stur	x0, [x29, #-8]
  407e58:	b	407ef8 <rt_addr_n2a_r@@Base+0x128>
  407e5c:	ldur	x0, [x29, #-24]
  407e60:	ldur	w1, [x29, #-16]
  407e64:	ldr	x3, [sp, #32]
  407e68:	ldr	w4, [sp, #28]
  407e6c:	mov	w2, #0xffff                	// #65535
  407e70:	bl	40af64 <ll_addr_n2a@@Base>
  407e74:	stur	x0, [x29, #-8]
  407e78:	b	407ef8 <rt_addr_n2a_r@@Base+0x128>
  407e7c:	ldur	x8, [x29, #-24]
  407e80:	str	x8, [sp, #16]
  407e84:	ldr	x8, [sp, #16]
  407e88:	ldrh	w9, [x8]
  407e8c:	cmp	w9, #0x2
  407e90:	str	w9, [sp, #4]
  407e94:	b.eq	407eac <rt_addr_n2a_r@@Base+0xdc>  // b.none
  407e98:	b	407e9c <rt_addr_n2a_r@@Base+0xcc>
  407e9c:	ldr	w8, [sp, #4]
  407ea0:	cmp	w8, #0xa
  407ea4:	b.eq	407ecc <rt_addr_n2a_r@@Base+0xfc>  // b.none
  407ea8:	b	407eec <rt_addr_n2a_r@@Base+0x11c>
  407eac:	ldr	x8, [sp, #16]
  407eb0:	add	x1, x8, #0x4
  407eb4:	ldr	x2, [sp, #32]
  407eb8:	ldr	w3, [sp, #28]
  407ebc:	mov	w0, #0x2                   	// #2
  407ec0:	bl	405200 <inet_ntop@plt>
  407ec4:	stur	x0, [x29, #-8]
  407ec8:	b	407ef8 <rt_addr_n2a_r@@Base+0x128>
  407ecc:	ldr	x8, [sp, #16]
  407ed0:	add	x1, x8, #0x8
  407ed4:	ldr	x2, [sp, #32]
  407ed8:	ldr	w3, [sp, #28]
  407edc:	mov	w0, #0xa                   	// #10
  407ee0:	bl	405200 <inet_ntop@plt>
  407ee4:	stur	x0, [x29, #-8]
  407ee8:	b	407ef8 <rt_addr_n2a_r@@Base+0x128>
  407eec:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407ef0:	add	x8, x8, #0xb86
  407ef4:	stur	x8, [x29, #-8]
  407ef8:	ldur	x0, [x29, #-8]
  407efc:	ldp	x29, x30, [sp, #64]
  407f00:	add	sp, sp, #0x50
  407f04:	ret

0000000000407f08 <rt_addr_n2a@@Base>:
  407f08:	sub	sp, sp, #0x20
  407f0c:	stp	x29, x30, [sp, #16]
  407f10:	add	x29, sp, #0x10
  407f14:	adrp	x3, 423000 <memcpy@GLIBC_2.17>
  407f18:	add	x3, x3, #0x338
  407f1c:	mov	w4, #0x100                 	// #256
  407f20:	stur	w0, [x29, #-4]
  407f24:	str	w1, [sp, #8]
  407f28:	str	x2, [sp]
  407f2c:	ldur	w0, [x29, #-4]
  407f30:	ldr	w1, [sp, #8]
  407f34:	ldr	x2, [sp]
  407f38:	bl	407dd0 <rt_addr_n2a_r@@Base>
  407f3c:	ldp	x29, x30, [sp, #16]
  407f40:	add	sp, sp, #0x20
  407f44:	ret

0000000000407f48 <read_family@@Base>:
  407f48:	sub	sp, sp, #0x20
  407f4c:	stp	x29, x30, [sp, #16]
  407f50:	add	x29, sp, #0x10
  407f54:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407f58:	add	x1, x1, #0x520
  407f5c:	str	x0, [sp, #8]
  407f60:	str	wzr, [sp, #4]
  407f64:	ldr	x0, [sp, #8]
  407f68:	bl	404fb0 <strcmp@plt>
  407f6c:	cbnz	w0, 407f7c <read_family@@Base+0x34>
  407f70:	mov	w8, #0x2                   	// #2
  407f74:	str	w8, [sp, #4]
  407f78:	b	408018 <read_family@@Base+0xd0>
  407f7c:	ldr	x0, [sp, #8]
  407f80:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407f84:	add	x1, x1, #0x525
  407f88:	bl	404fb0 <strcmp@plt>
  407f8c:	cbnz	w0, 407f9c <read_family@@Base+0x54>
  407f90:	mov	w8, #0xa                   	// #10
  407f94:	str	w8, [sp, #4]
  407f98:	b	408018 <read_family@@Base+0xd0>
  407f9c:	ldr	x0, [sp, #8]
  407fa0:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  407fa4:	add	x1, x1, #0x1ce
  407fa8:	bl	404fb0 <strcmp@plt>
  407fac:	cbnz	w0, 407fbc <read_family@@Base+0x74>
  407fb0:	mov	w8, #0x11                  	// #17
  407fb4:	str	w8, [sp, #4]
  407fb8:	b	408018 <read_family@@Base+0xd0>
  407fbc:	ldr	x0, [sp, #8]
  407fc0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407fc4:	add	x1, x1, #0xb8a
  407fc8:	bl	404fb0 <strcmp@plt>
  407fcc:	cbnz	w0, 407fdc <read_family@@Base+0x94>
  407fd0:	mov	w8, #0x4                   	// #4
  407fd4:	str	w8, [sp, #4]
  407fd8:	b	408018 <read_family@@Base+0xd0>
  407fdc:	ldr	x0, [sp, #8]
  407fe0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  407fe4:	add	x1, x1, #0xb8e
  407fe8:	bl	404fb0 <strcmp@plt>
  407fec:	cbnz	w0, 407ffc <read_family@@Base+0xb4>
  407ff0:	mov	w8, #0x1c                  	// #28
  407ff4:	str	w8, [sp, #4]
  407ff8:	b	408018 <read_family@@Base+0xd0>
  407ffc:	ldr	x0, [sp, #8]
  408000:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408004:	add	x1, x1, #0xb93
  408008:	bl	404fb0 <strcmp@plt>
  40800c:	cbnz	w0, 408018 <read_family@@Base+0xd0>
  408010:	mov	w8, #0x7                   	// #7
  408014:	str	w8, [sp, #4]
  408018:	ldr	w0, [sp, #4]
  40801c:	ldp	x29, x30, [sp, #16]
  408020:	add	sp, sp, #0x20
  408024:	ret

0000000000408028 <family_name@@Base>:
  408028:	sub	sp, sp, #0x10
  40802c:	str	w0, [sp, #4]
  408030:	ldr	w8, [sp, #4]
  408034:	cmp	w8, #0x2
  408038:	b.ne	40804c <family_name@@Base+0x24>  // b.any
  40803c:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408040:	add	x8, x8, #0x520
  408044:	str	x8, [sp, #8]
  408048:	b	4080e4 <family_name@@Base+0xbc>
  40804c:	ldr	w8, [sp, #4]
  408050:	cmp	w8, #0xa
  408054:	b.ne	408068 <family_name@@Base+0x40>  // b.any
  408058:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40805c:	add	x8, x8, #0x525
  408060:	str	x8, [sp, #8]
  408064:	b	4080e4 <family_name@@Base+0xbc>
  408068:	ldr	w8, [sp, #4]
  40806c:	cmp	w8, #0x11
  408070:	b.ne	408084 <family_name@@Base+0x5c>  // b.any
  408074:	adrp	x8, 412000 <_IO_stdin_used@@Base+0xb00>
  408078:	add	x8, x8, #0x1ce
  40807c:	str	x8, [sp, #8]
  408080:	b	4080e4 <family_name@@Base+0xbc>
  408084:	ldr	w8, [sp, #4]
  408088:	cmp	w8, #0x4
  40808c:	b.ne	4080a0 <family_name@@Base+0x78>  // b.any
  408090:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408094:	add	x8, x8, #0xb8a
  408098:	str	x8, [sp, #8]
  40809c:	b	4080e4 <family_name@@Base+0xbc>
  4080a0:	ldr	w8, [sp, #4]
  4080a4:	cmp	w8, #0x1c
  4080a8:	b.ne	4080bc <family_name@@Base+0x94>  // b.any
  4080ac:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4080b0:	add	x8, x8, #0xb8e
  4080b4:	str	x8, [sp, #8]
  4080b8:	b	4080e4 <family_name@@Base+0xbc>
  4080bc:	ldr	w8, [sp, #4]
  4080c0:	cmp	w8, #0x7
  4080c4:	b.ne	4080d8 <family_name@@Base+0xb0>  // b.any
  4080c8:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4080cc:	add	x8, x8, #0xb93
  4080d0:	str	x8, [sp, #8]
  4080d4:	b	4080e4 <family_name@@Base+0xbc>
  4080d8:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4080dc:	add	x8, x8, #0xb86
  4080e0:	str	x8, [sp, #8]
  4080e4:	ldr	x0, [sp, #8]
  4080e8:	add	sp, sp, #0x10
  4080ec:	ret

00000000004080f0 <format_host_r@@Base>:
  4080f0:	sub	sp, sp, #0x50
  4080f4:	stp	x29, x30, [sp, #64]
  4080f8:	add	x29, sp, #0x40
  4080fc:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  408100:	ldr	x8, [x8, #4064]
  408104:	stur	w0, [x29, #-12]
  408108:	stur	w1, [x29, #-16]
  40810c:	stur	x2, [x29, #-24]
  408110:	str	x3, [sp, #32]
  408114:	str	w4, [sp, #28]
  408118:	ldr	w9, [x8]
  40811c:	cbz	w9, 408184 <format_host_r@@Base+0x94>
  408120:	ldur	w8, [x29, #-16]
  408124:	cmp	w8, #0x0
  408128:	cset	w8, gt
  40812c:	tbnz	w8, #0, 408140 <format_host_r@@Base+0x50>
  408130:	ldur	w0, [x29, #-12]
  408134:	bl	4081b0 <format_host_r@@Base+0xc0>
  408138:	str	w0, [sp, #12]
  40813c:	b	408148 <format_host_r@@Base+0x58>
  408140:	ldur	w8, [x29, #-16]
  408144:	str	w8, [sp, #12]
  408148:	ldr	w8, [sp, #12]
  40814c:	stur	w8, [x29, #-16]
  408150:	ldur	w8, [x29, #-16]
  408154:	cmp	w8, #0x0
  408158:	cset	w8, le
  40815c:	tbnz	w8, #0, 408184 <format_host_r@@Base+0x94>
  408160:	ldur	x0, [x29, #-24]
  408164:	ldur	w1, [x29, #-16]
  408168:	ldur	w2, [x29, #-12]
  40816c:	bl	4081e4 <format_host_r@@Base+0xf4>
  408170:	str	x0, [sp, #16]
  408174:	cbz	x0, 408184 <format_host_r@@Base+0x94>
  408178:	ldr	x8, [sp, #16]
  40817c:	stur	x8, [x29, #-8]
  408180:	b	4081a0 <format_host_r@@Base+0xb0>
  408184:	ldur	w0, [x29, #-12]
  408188:	ldur	w1, [x29, #-16]
  40818c:	ldur	x2, [x29, #-24]
  408190:	ldr	x3, [sp, #32]
  408194:	ldr	w4, [sp, #28]
  408198:	bl	407dd0 <rt_addr_n2a_r@@Base>
  40819c:	stur	x0, [x29, #-8]
  4081a0:	ldur	x0, [x29, #-8]
  4081a4:	ldp	x29, x30, [sp, #64]
  4081a8:	add	sp, sp, #0x50
  4081ac:	ret
  4081b0:	sub	sp, sp, #0x20
  4081b4:	stp	x29, x30, [sp, #16]
  4081b8:	add	x29, sp, #0x10
  4081bc:	mov	w8, #0x8                   	// #8
  4081c0:	stur	w0, [x29, #-4]
  4081c4:	ldur	w0, [x29, #-4]
  4081c8:	str	w8, [sp, #8]
  4081cc:	bl	407060 <af_bit_len@@Base>
  4081d0:	ldr	w8, [sp, #8]
  4081d4:	sdiv	w0, w0, w8
  4081d8:	ldp	x29, x30, [sp, #16]
  4081dc:	add	sp, sp, #0x20
  4081e0:	ret
  4081e4:	sub	sp, sp, #0x60
  4081e8:	stp	x29, x30, [sp, #80]
  4081ec:	add	x29, sp, #0x50
  4081f0:	adrp	x8, 423000 <memcpy@GLIBC_2.17>
  4081f4:	add	x8, x8, #0x540
  4081f8:	stur	x0, [x29, #-16]
  4081fc:	stur	w1, [x29, #-20]
  408200:	stur	w2, [x29, #-24]
  408204:	ldur	w9, [x29, #-24]
  408208:	cmp	w9, #0xa
  40820c:	str	x8, [sp, #24]
  408210:	b.ne	408268 <format_host_r@@Base+0x178>  // b.any
  408214:	ldur	x8, [x29, #-16]
  408218:	ldr	w9, [x8]
  40821c:	cbnz	w9, 408268 <format_host_r@@Base+0x178>
  408220:	ldur	x8, [x29, #-16]
  408224:	ldr	w9, [x8, #4]
  408228:	cbnz	w9, 408268 <format_host_r@@Base+0x178>
  40822c:	ldur	x8, [x29, #-16]
  408230:	ldr	w9, [x8, #8]
  408234:	mov	w0, #0xffff                	// #65535
  408238:	str	w9, [sp, #20]
  40823c:	bl	404d10 <htonl@plt>
  408240:	ldr	w9, [sp, #20]
  408244:	cmp	w9, w0
  408248:	b.ne	408268 <format_host_r@@Base+0x178>  // b.any
  40824c:	mov	w8, #0x2                   	// #2
  408250:	stur	w8, [x29, #-24]
  408254:	ldur	x9, [x29, #-16]
  408258:	add	x9, x9, #0xc
  40825c:	stur	x9, [x29, #-16]
  408260:	mov	w8, #0x4                   	// #4
  408264:	stur	w8, [x29, #-20]
  408268:	ldur	x8, [x29, #-16]
  40826c:	ldursw	x9, [x29, #-20]
  408270:	add	x8, x8, x9
  408274:	ldur	w10, [x8, #-4]
  408278:	mov	w11, #0x101                 	// #257
  40827c:	udiv	w12, w10, w11
  408280:	mul	w11, w12, w11
  408284:	subs	w10, w10, w11
  408288:	str	w10, [sp, #36]
  40828c:	ldr	w10, [sp, #36]
  408290:	mov	w8, w10
  408294:	mov	x9, #0x8                   	// #8
  408298:	mul	x8, x9, x8
  40829c:	ldr	x9, [sp, #24]
  4082a0:	add	x8, x9, x8
  4082a4:	ldr	x8, [x8]
  4082a8:	stur	x8, [x29, #-32]
  4082ac:	ldur	x8, [x29, #-32]
  4082b0:	cbz	x8, 408314 <format_host_r@@Base+0x224>
  4082b4:	ldur	x8, [x29, #-32]
  4082b8:	ldrh	w9, [x8, #22]
  4082bc:	ldur	w10, [x29, #-24]
  4082c0:	cmp	w9, w10
  4082c4:	b.ne	408304 <format_host_r@@Base+0x214>  // b.any
  4082c8:	ldur	x8, [x29, #-32]
  4082cc:	ldrh	w9, [x8, #18]
  4082d0:	ldur	w10, [x29, #-20]
  4082d4:	cmp	w9, w10
  4082d8:	b.ne	408304 <format_host_r@@Base+0x214>  // b.any
  4082dc:	ldur	x8, [x29, #-32]
  4082e0:	add	x0, x8, #0x18
  4082e4:	ldur	x1, [x29, #-16]
  4082e8:	ldursw	x2, [x29, #-20]
  4082ec:	bl	404fa0 <memcmp@plt>
  4082f0:	cbnz	w0, 408304 <format_host_r@@Base+0x214>
  4082f4:	ldur	x8, [x29, #-32]
  4082f8:	ldr	x8, [x8, #8]
  4082fc:	stur	x8, [x29, #-8]
  408300:	b	408424 <format_host_r@@Base+0x334>
  408304:	ldur	x8, [x29, #-32]
  408308:	ldr	x8, [x8]
  40830c:	stur	x8, [x29, #-32]
  408310:	b	4082ac <format_host_r@@Base+0x1bc>
  408314:	mov	x0, #0x118                 	// #280
  408318:	bl	404e40 <malloc@plt>
  40831c:	stur	x0, [x29, #-32]
  408320:	ldur	x8, [x29, #-32]
  408324:	cbnz	x8, 408334 <format_host_r@@Base+0x244>
  408328:	mov	x8, xzr
  40832c:	stur	x8, [x29, #-8]
  408330:	b	408424 <format_host_r@@Base+0x334>
  408334:	ldur	w8, [x29, #-24]
  408338:	ldur	x9, [x29, #-32]
  40833c:	strh	w8, [x9, #22]
  408340:	ldur	w8, [x29, #-20]
  408344:	ldur	x9, [x29, #-32]
  408348:	strh	w8, [x9, #18]
  40834c:	ldur	x9, [x29, #-32]
  408350:	mov	x10, #0x8                   	// #8
  408354:	mov	x11, xzr
  408358:	str	x11, [x9, #8]
  40835c:	ldur	x9, [x29, #-32]
  408360:	add	x0, x9, #0x18
  408364:	ldur	x1, [x29, #-16]
  408368:	ldursw	x2, [x29, #-20]
  40836c:	str	x10, [sp, #8]
  408370:	bl	404c90 <memcpy@plt>
  408374:	ldr	w8, [sp, #36]
  408378:	mov	w9, w8
  40837c:	ldr	x10, [sp, #8]
  408380:	mul	x9, x10, x9
  408384:	ldr	x11, [sp, #24]
  408388:	add	x9, x11, x9
  40838c:	ldr	x9, [x9]
  408390:	ldur	x12, [x29, #-32]
  408394:	str	x9, [x12]
  408398:	ldur	x9, [x29, #-32]
  40839c:	ldr	w8, [sp, #36]
  4083a0:	mov	w12, w8
  4083a4:	mul	x12, x10, x12
  4083a8:	add	x12, x11, x12
  4083ac:	str	x9, [x12]
  4083b0:	adrp	x9, 423000 <memcpy@GLIBC_2.17>
  4083b4:	add	x9, x9, #0x538
  4083b8:	ldr	w8, [x9]
  4083bc:	add	w8, w8, #0x1
  4083c0:	str	w8, [x9]
  4083c4:	cmp	w8, #0x1
  4083c8:	b.ne	4083d4 <format_host_r@@Base+0x2e4>  // b.any
  4083cc:	mov	w0, #0x1                   	// #1
  4083d0:	bl	404d50 <sethostent@plt>
  4083d4:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  4083d8:	ldr	x8, [x8, #4016]
  4083dc:	ldr	x0, [x8]
  4083e0:	bl	4050a0 <fflush@plt>
  4083e4:	ldur	x8, [x29, #-16]
  4083e8:	ldur	w1, [x29, #-20]
  4083ec:	ldur	w2, [x29, #-24]
  4083f0:	mov	x0, x8
  4083f4:	bl	405010 <gethostbyaddr@plt>
  4083f8:	str	x0, [sp, #40]
  4083fc:	ldr	x8, [sp, #40]
  408400:	cbz	x8, 408418 <format_host_r@@Base+0x328>
  408404:	ldr	x8, [sp, #40]
  408408:	ldr	x0, [x8]
  40840c:	bl	404f20 <strdup@plt>
  408410:	ldur	x8, [x29, #-32]
  408414:	str	x0, [x8, #8]
  408418:	ldur	x8, [x29, #-32]
  40841c:	ldr	x8, [x8, #8]
  408420:	stur	x8, [x29, #-8]
  408424:	ldur	x0, [x29, #-8]
  408428:	ldp	x29, x30, [sp, #80]
  40842c:	add	sp, sp, #0x60
  408430:	ret

0000000000408434 <format_host@@Base>:
  408434:	sub	sp, sp, #0x20
  408438:	stp	x29, x30, [sp, #16]
  40843c:	add	x29, sp, #0x10
  408440:	adrp	x3, 423000 <memcpy@GLIBC_2.17>
  408444:	add	x3, x3, #0x438
  408448:	mov	w4, #0x100                 	// #256
  40844c:	stur	w0, [x29, #-4]
  408450:	str	w1, [sp, #8]
  408454:	str	x2, [sp]
  408458:	ldur	w0, [x29, #-4]
  40845c:	ldr	w1, [sp, #8]
  408460:	ldr	x2, [sp]
  408464:	bl	4080f0 <format_host_r@@Base>
  408468:	ldp	x29, x30, [sp, #16]
  40846c:	add	sp, sp, #0x20
  408470:	ret

0000000000408474 <hexstring_n2a@@Base>:
  408474:	sub	sp, sp, #0x40
  408478:	stp	x29, x30, [sp, #48]
  40847c:	add	x29, sp, #0x30
  408480:	stur	x0, [x29, #-8]
  408484:	stur	w1, [x29, #-12]
  408488:	str	x2, [sp, #24]
  40848c:	str	w3, [sp, #20]
  408490:	ldr	x8, [sp, #24]
  408494:	str	x8, [sp, #8]
  408498:	str	wzr, [sp, #4]
  40849c:	ldr	w8, [sp, #4]
  4084a0:	ldur	w9, [x29, #-12]
  4084a4:	cmp	w8, w9
  4084a8:	b.ge	408500 <hexstring_n2a@@Base+0x8c>  // b.tcont
  4084ac:	ldr	w8, [sp, #20]
  4084b0:	cmp	w8, #0x3
  4084b4:	b.ge	4084bc <hexstring_n2a@@Base+0x48>  // b.tcont
  4084b8:	b	408500 <hexstring_n2a@@Base+0x8c>
  4084bc:	ldr	x0, [sp, #8]
  4084c0:	ldur	x8, [x29, #-8]
  4084c4:	ldrsw	x9, [sp, #4]
  4084c8:	ldrb	w2, [x8, x9]
  4084cc:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4084d0:	add	x1, x1, #0xcdf
  4084d4:	bl	404d90 <sprintf@plt>
  4084d8:	ldr	x8, [sp, #8]
  4084dc:	add	x8, x8, #0x2
  4084e0:	str	x8, [sp, #8]
  4084e4:	ldr	w10, [sp, #20]
  4084e8:	subs	w10, w10, #0x2
  4084ec:	str	w10, [sp, #20]
  4084f0:	ldr	w8, [sp, #4]
  4084f4:	add	w8, w8, #0x1
  4084f8:	str	w8, [sp, #4]
  4084fc:	b	40849c <hexstring_n2a@@Base+0x28>
  408500:	ldr	x0, [sp, #24]
  408504:	ldp	x29, x30, [sp, #48]
  408508:	add	sp, sp, #0x40
  40850c:	ret

0000000000408510 <hexstring_a2n@@Base>:
  408510:	sub	sp, sp, #0x70
  408514:	stp	x29, x30, [sp, #96]
  408518:	add	x29, sp, #0x60
  40851c:	mov	x8, #0x2                   	// #2
  408520:	stur	x0, [x29, #-16]
  408524:	stur	x1, [x29, #-24]
  408528:	stur	w2, [x29, #-28]
  40852c:	stur	x3, [x29, #-40]
  408530:	stur	wzr, [x29, #-44]
  408534:	ldur	x0, [x29, #-16]
  408538:	str	x8, [sp, #24]
  40853c:	bl	404cc0 <strlen@plt>
  408540:	ldr	x8, [sp, #24]
  408544:	udiv	x9, x0, x8
  408548:	mul	x9, x9, x8
  40854c:	subs	x9, x0, x9
  408550:	cbz	x9, 408560 <hexstring_a2n@@Base+0x50>
  408554:	mov	x8, xzr
  408558:	stur	x8, [x29, #-8]
  40855c:	b	408658 <hexstring_a2n@@Base+0x148>
  408560:	ldur	w8, [x29, #-44]
  408564:	ldur	w9, [x29, #-28]
  408568:	mov	w10, #0x0                   	// #0
  40856c:	cmp	w8, w9
  408570:	str	w10, [sp, #20]
  408574:	b.cs	40858c <hexstring_a2n@@Base+0x7c>  // b.hs, b.nlast
  408578:	ldur	x0, [x29, #-16]
  40857c:	bl	404cc0 <strlen@plt>
  408580:	cmp	x0, #0x1
  408584:	cset	w8, hi  // hi = pmore
  408588:	str	w8, [sp, #20]
  40858c:	ldr	w8, [sp, #20]
  408590:	tbnz	w8, #0, 408598 <hexstring_a2n@@Base+0x88>
  408594:	b	40863c <hexstring_a2n@@Base+0x12c>
  408598:	ldur	x1, [x29, #-16]
  40859c:	add	x8, sp, #0x21
  4085a0:	mov	x0, x8
  4085a4:	mov	x2, #0x2                   	// #2
  4085a8:	str	x8, [sp, #8]
  4085ac:	bl	405160 <strncpy@plt>
  4085b0:	mov	w9, #0x0                   	// #0
  4085b4:	ldr	x8, [sp, #8]
  4085b8:	strb	w9, [x8, #2]
  4085bc:	bl	4051b0 <__errno_location@plt>
  4085c0:	str	wzr, [x0]
  4085c4:	ldr	x0, [sp, #8]
  4085c8:	add	x1, sp, #0x28
  4085cc:	mov	w2, #0x10                  	// #16
  4085d0:	bl	404cb0 <strtoul@plt>
  4085d4:	str	w0, [sp, #36]
  4085d8:	bl	4051b0 <__errno_location@plt>
  4085dc:	ldr	w9, [x0]
  4085e0:	cbnz	w9, 4085fc <hexstring_a2n@@Base+0xec>
  4085e4:	ldr	w8, [sp, #36]
  4085e8:	cmp	w8, #0xff
  4085ec:	b.hi	4085fc <hexstring_a2n@@Base+0xec>  // b.pmore
  4085f0:	ldr	x8, [sp, #40]
  4085f4:	ldrb	w9, [x8]
  4085f8:	cbz	w9, 408608 <hexstring_a2n@@Base+0xf8>
  4085fc:	mov	x8, xzr
  408600:	stur	x8, [x29, #-8]
  408604:	b	408658 <hexstring_a2n@@Base+0x148>
  408608:	ldr	w8, [sp, #36]
  40860c:	ldur	x9, [x29, #-24]
  408610:	ldur	w10, [x29, #-44]
  408614:	mov	w11, w10
  408618:	mov	w10, w11
  40861c:	add	w10, w10, #0x1
  408620:	stur	w10, [x29, #-44]
  408624:	add	x9, x9, x11
  408628:	strb	w8, [x9]
  40862c:	ldur	x9, [x29, #-16]
  408630:	add	x9, x9, #0x2
  408634:	stur	x9, [x29, #-16]
  408638:	b	408560 <hexstring_a2n@@Base+0x50>
  40863c:	ldur	x8, [x29, #-40]
  408640:	cbz	x8, 408650 <hexstring_a2n@@Base+0x140>
  408644:	ldur	w8, [x29, #-44]
  408648:	ldur	x9, [x29, #-40]
  40864c:	str	w8, [x9]
  408650:	ldur	x8, [x29, #-24]
  408654:	stur	x8, [x29, #-8]
  408658:	ldur	x0, [x29, #-8]
  40865c:	ldp	x29, x30, [sp, #96]
  408660:	add	sp, sp, #0x70
  408664:	ret

0000000000408668 <hex2mem@@Base>:
  408668:	sub	sp, sp, #0x40
  40866c:	stp	x29, x30, [sp, #48]
  408670:	add	x29, sp, #0x30
  408674:	stur	x0, [x29, #-16]
  408678:	str	x1, [sp, #24]
  40867c:	str	w2, [sp, #20]
  408680:	str	wzr, [sp, #16]
  408684:	str	wzr, [sp, #12]
  408688:	ldr	w8, [sp, #16]
  40868c:	ldr	w9, [sp, #20]
  408690:	cmp	w8, w9
  408694:	b.ge	40874c <hex2mem@@Base+0xe4>  // b.tcont
  408698:	ldur	x8, [x29, #-16]
  40869c:	ldrsw	x9, [sp, #12]
  4086a0:	ldrb	w0, [x8, x9]
  4086a4:	bl	405d38 <get_hex@@Base>
  4086a8:	str	w0, [sp, #8]
  4086ac:	ldr	w10, [sp, #8]
  4086b0:	cmp	w10, #0x0
  4086b4:	cset	w10, ge  // ge = tcont
  4086b8:	tbnz	w10, #0, 4086c8 <hex2mem@@Base+0x60>
  4086bc:	mov	w8, #0xffffffff            	// #-1
  4086c0:	stur	w8, [x29, #-4]
  4086c4:	b	408750 <hex2mem@@Base+0xe8>
  4086c8:	ldr	w8, [sp, #8]
  4086cc:	lsl	w8, w8, #4
  4086d0:	ldr	x9, [sp, #24]
  4086d4:	ldrsw	x10, [sp, #16]
  4086d8:	add	x9, x9, x10
  4086dc:	strb	w8, [x9]
  4086e0:	ldur	x9, [x29, #-16]
  4086e4:	ldr	w8, [sp, #12]
  4086e8:	add	w8, w8, #0x1
  4086ec:	ldrb	w0, [x9, w8, sxtw]
  4086f0:	bl	405d38 <get_hex@@Base>
  4086f4:	str	w0, [sp, #8]
  4086f8:	ldr	w8, [sp, #8]
  4086fc:	cmp	w8, #0x0
  408700:	cset	w8, ge  // ge = tcont
  408704:	tbnz	w8, #0, 408714 <hex2mem@@Base+0xac>
  408708:	mov	w8, #0xffffffff            	// #-1
  40870c:	stur	w8, [x29, #-4]
  408710:	b	408750 <hex2mem@@Base+0xe8>
  408714:	ldr	w8, [sp, #8]
  408718:	ldr	x9, [sp, #24]
  40871c:	ldrsw	x10, [sp, #16]
  408720:	add	x9, x9, x10
  408724:	ldrb	w11, [x9]
  408728:	orr	w8, w11, w8
  40872c:	strb	w8, [x9]
  408730:	ldr	w8, [sp, #16]
  408734:	add	w8, w8, #0x1
  408738:	str	w8, [sp, #16]
  40873c:	ldr	w8, [sp, #12]
  408740:	add	w8, w8, #0x2
  408744:	str	w8, [sp, #12]
  408748:	b	408688 <hex2mem@@Base+0x20>
  40874c:	stur	wzr, [x29, #-4]
  408750:	ldur	w0, [x29, #-4]
  408754:	ldp	x29, x30, [sp, #48]
  408758:	add	sp, sp, #0x40
  40875c:	ret

0000000000408760 <addr64_n2a@@Base>:
  408760:	sub	sp, sp, #0x60
  408764:	stp	x29, x30, [sp, #80]
  408768:	add	x29, sp, #0x50
  40876c:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408770:	add	x8, x8, #0xb9a
  408774:	sub	x9, x29, #0x10
  408778:	stur	x0, [x29, #-16]
  40877c:	stur	x1, [x29, #-24]
  408780:	stur	x2, [x29, #-32]
  408784:	str	x9, [sp, #40]
  408788:	str	xzr, [sp, #16]
  40878c:	str	x8, [sp, #8]
  408790:	str	wzr, [sp, #32]
  408794:	ldr	w8, [sp, #32]
  408798:	cmp	w8, #0x4
  40879c:	b.ge	408838 <addr64_n2a@@Base+0xd8>  // b.tcont
  4087a0:	ldr	x8, [sp, #40]
  4087a4:	ldrsw	x9, [sp, #32]
  4087a8:	ldrh	w0, [x8, x9, lsl #1]
  4087ac:	bl	404e30 <ntohs@plt>
  4087b0:	strh	w0, [sp, #38]
  4087b4:	ldr	w10, [sp, #32]
  4087b8:	cmp	w10, #0x3
  4087bc:	b.ne	4087cc <addr64_n2a@@Base+0x6c>  // b.any
  4087c0:	adrp	x8, 412000 <_IO_stdin_used@@Base+0xb00>
  4087c4:	add	x8, x8, #0x204
  4087c8:	str	x8, [sp, #8]
  4087cc:	ldur	x8, [x29, #-24]
  4087d0:	ldr	x9, [sp, #16]
  4087d4:	add	x0, x8, x9
  4087d8:	ldur	x8, [x29, #-32]
  4087dc:	ldr	x9, [sp, #16]
  4087e0:	subs	x1, x8, x9
  4087e4:	ldrh	w3, [sp, #38]
  4087e8:	ldr	x4, [sp, #8]
  4087ec:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4087f0:	add	x2, x2, #0xb9c
  4087f4:	bl	404dd0 <snprintf@plt>
  4087f8:	str	w0, [sp, #28]
  4087fc:	ldr	w10, [sp, #28]
  408800:	cmp	w10, #0x0
  408804:	cset	w10, ge  // ge = tcont
  408808:	tbnz	w10, #0, 408818 <addr64_n2a@@Base+0xb8>
  40880c:	ldr	w8, [sp, #28]
  408810:	stur	w8, [x29, #-4]
  408814:	b	408840 <addr64_n2a@@Base+0xe0>
  408818:	ldrsw	x8, [sp, #28]
  40881c:	ldr	x9, [sp, #16]
  408820:	add	x8, x9, x8
  408824:	str	x8, [sp, #16]
  408828:	ldr	w8, [sp, #32]
  40882c:	add	w8, w8, #0x1
  408830:	str	w8, [sp, #32]
  408834:	b	408794 <addr64_n2a@@Base+0x34>
  408838:	ldr	x8, [sp, #16]
  40883c:	stur	w8, [x29, #-4]
  408840:	ldur	w0, [x29, #-4]
  408844:	ldp	x29, x30, [sp, #80]
  408848:	add	sp, sp, #0x60
  40884c:	ret

0000000000408850 <print_escape_buf@@Base>:
  408850:	sub	sp, sp, #0x30
  408854:	stp	x29, x30, [sp, #32]
  408858:	add	x29, sp, #0x20
  40885c:	stur	x0, [x29, #-8]
  408860:	str	x1, [sp, #16]
  408864:	str	x2, [sp, #8]
  408868:	str	xzr, [sp]
  40886c:	ldr	x8, [sp]
  408870:	ldr	x9, [sp, #16]
  408874:	cmp	x8, x9
  408878:	b.cs	40890c <print_escape_buf@@Base+0xbc>  // b.hs, b.nlast
  40887c:	bl	404fc0 <__ctype_b_loc@plt>
  408880:	ldr	x8, [x0]
  408884:	ldur	x9, [x29, #-8]
  408888:	ldr	x10, [sp]
  40888c:	ldrb	w11, [x9, x10]
  408890:	ldrh	w11, [x8, w11, sxtw #1]
  408894:	and	w11, w11, #0x4000
  408898:	cbz	w11, 4088e4 <print_escape_buf@@Base+0x94>
  40889c:	ldur	x8, [x29, #-8]
  4088a0:	ldr	x9, [sp]
  4088a4:	ldrb	w10, [x8, x9]
  4088a8:	cmp	w10, #0x5c
  4088ac:	b.eq	4088e4 <print_escape_buf@@Base+0x94>  // b.none
  4088b0:	ldr	x0, [sp, #8]
  4088b4:	ldur	x8, [x29, #-8]
  4088b8:	ldr	x9, [sp]
  4088bc:	ldrb	w1, [x8, x9]
  4088c0:	bl	405060 <strchr@plt>
  4088c4:	cbnz	x0, 4088e4 <print_escape_buf@@Base+0x94>
  4088c8:	ldur	x8, [x29, #-8]
  4088cc:	ldr	x9, [sp]
  4088d0:	ldrb	w1, [x8, x9]
  4088d4:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4088d8:	add	x0, x0, #0xba1
  4088dc:	bl	405190 <printf@plt>
  4088e0:	b	4088fc <print_escape_buf@@Base+0xac>
  4088e4:	ldur	x8, [x29, #-8]
  4088e8:	ldr	x9, [sp]
  4088ec:	ldrb	w1, [x8, x9]
  4088f0:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4088f4:	add	x0, x0, #0xba4
  4088f8:	bl	405190 <printf@plt>
  4088fc:	ldr	x8, [sp]
  408900:	add	x8, x8, #0x1
  408904:	str	x8, [sp]
  408908:	b	40886c <print_escape_buf@@Base+0x1c>
  40890c:	ldp	x29, x30, [sp, #32]
  408910:	add	sp, sp, #0x30
  408914:	ret

0000000000408918 <print_timestamp@@Base>:
  408918:	sub	sp, sp, #0x80
  40891c:	stp	x29, x30, [sp, #112]
  408920:	add	x29, sp, #0x70
  408924:	mov	x8, xzr
  408928:	adrp	x9, 422000 <_IO_stdin_used@@Base+0x10b00>
  40892c:	ldr	x9, [x9, #4032]
  408930:	sub	x10, x29, #0x18
  408934:	stur	x0, [x29, #-8]
  408938:	mov	x0, x10
  40893c:	mov	x1, x8
  408940:	str	x9, [sp, #24]
  408944:	str	x10, [sp, #16]
  408948:	bl	404eb0 <gettimeofday@plt>
  40894c:	ldr	x8, [sp, #16]
  408950:	mov	x0, x8
  408954:	bl	404df0 <localtime@plt>
  408958:	stur	x0, [x29, #-32]
  40895c:	ldr	x8, [sp, #24]
  408960:	ldr	w11, [x8]
  408964:	cbz	w11, 4089a8 <print_timestamp@@Base+0x90>
  408968:	ldur	x3, [x29, #-32]
  40896c:	add	x8, sp, #0x28
  408970:	mov	x0, x8
  408974:	mov	x1, #0x28                  	// #40
  408978:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40897c:	add	x2, x2, #0xbaa
  408980:	str	x8, [sp, #8]
  408984:	bl	404dc0 <strftime@plt>
  408988:	ldur	x8, [x29, #-8]
  40898c:	ldur	x3, [x29, #-16]
  408990:	mov	x0, x8
  408994:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408998:	add	x1, x1, #0xbbc
  40899c:	ldr	x2, [sp, #8]
  4089a0:	bl	4051e0 <fprintf@plt>
  4089a4:	b	4089f0 <print_timestamp@@Base+0xd8>
  4089a8:	ldur	x0, [x29, #-32]
  4089ac:	bl	405100 <asctime@plt>
  4089b0:	str	x0, [sp, #32]
  4089b4:	ldr	x8, [sp, #32]
  4089b8:	ldr	x0, [sp, #32]
  4089bc:	str	x8, [sp]
  4089c0:	bl	404cc0 <strlen@plt>
  4089c4:	subs	x8, x0, #0x1
  4089c8:	ldr	x9, [sp]
  4089cc:	add	x8, x9, x8
  4089d0:	mov	w10, #0x0                   	// #0
  4089d4:	strb	w10, [x8]
  4089d8:	ldur	x0, [x29, #-8]
  4089dc:	ldr	x2, [sp, #32]
  4089e0:	ldur	x3, [x29, #-16]
  4089e4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4089e8:	add	x1, x1, #0xbc8
  4089ec:	bl	4051e0 <fprintf@plt>
  4089f0:	mov	w8, wzr
  4089f4:	mov	w0, w8
  4089f8:	ldp	x29, x30, [sp, #112]
  4089fc:	add	sp, sp, #0x80
  408a00:	ret

0000000000408a04 <print_name_and_link@@Base>:
  408a04:	sub	sp, sp, #0x90
  408a08:	stp	x29, x30, [sp, #128]
  408a0c:	add	x29, sp, #0x80
  408a10:	mov	x8, xzr
  408a14:	stur	x0, [x29, #-8]
  408a18:	stur	x1, [x29, #-16]
  408a1c:	stur	x2, [x29, #-24]
  408a20:	stur	x8, [x29, #-32]
  408a24:	stur	wzr, [x29, #-36]
  408a28:	ldur	x8, [x29, #-24]
  408a2c:	ldr	x8, [x8, #40]
  408a30:	cbz	x8, 408b68 <print_name_and_link@@Base+0x164>
  408a34:	ldur	x8, [x29, #-24]
  408a38:	ldr	x0, [x8, #40]
  408a3c:	bl	408b98 <print_name_and_link@@Base+0x194>
  408a40:	str	w0, [sp, #24]
  408a44:	ldr	w9, [sp, #24]
  408a48:	cbz	w9, 408afc <print_name_and_link@@Base+0xf8>
  408a4c:	ldur	x8, [x29, #-24]
  408a50:	ldr	x8, [x8, #296]
  408a54:	cbz	x8, 408a94 <print_name_and_link@@Base+0x90>
  408a58:	bl	40b430 <is_json_context@@Base>
  408a5c:	tbnz	w0, #0, 408a64 <print_name_and_link@@Base+0x60>
  408a60:	b	408a84 <print_name_and_link@@Base+0x80>
  408a64:	ldr	w3, [sp, #24]
  408a68:	mov	w0, #0x2                   	// #2
  408a6c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408a70:	add	x1, x1, #0xbe0
  408a74:	mov	x8, xzr
  408a78:	mov	x2, x8
  408a7c:	bl	408bb0 <print_name_and_link@@Base+0x1ac>
  408a80:	b	408a90 <print_name_and_link@@Base+0x8c>
  408a84:	ldr	w0, [sp, #24]
  408a88:	bl	40a170 <ll_idx_n2a@@Base>
  408a8c:	stur	x0, [x29, #-32]
  408a90:	b	408af8 <print_name_and_link@@Base+0xf4>
  408a94:	ldr	w0, [sp, #24]
  408a98:	bl	40a1b8 <ll_index_to_name@@Base>
  408a9c:	stur	x0, [x29, #-32]
  408aa0:	bl	40b430 <is_json_context@@Base>
  408aa4:	tbnz	w0, #0, 408aac <print_name_and_link@@Base+0xa8>
  408aa8:	b	408ad4 <print_name_and_link@@Base+0xd0>
  408aac:	ldur	x3, [x29, #-32]
  408ab0:	mov	w0, #0x2                   	// #2
  408ab4:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  408ab8:	add	x1, x1, #0x1ce
  408abc:	mov	x8, xzr
  408ac0:	mov	x2, x8
  408ac4:	str	x8, [sp, #16]
  408ac8:	bl	408bf4 <print_name_and_link@@Base+0x1f0>
  408acc:	ldr	x8, [sp, #16]
  408ad0:	stur	x8, [x29, #-32]
  408ad4:	ldr	w0, [sp, #24]
  408ad8:	bl	40a4b4 <ll_index_to_flags@@Base>
  408adc:	stur	w0, [x29, #-36]
  408ae0:	ldur	w8, [x29, #-36]
  408ae4:	tst	w8, #0x1
  408ae8:	cset	w8, ne  // ne = any
  408aec:	eor	w8, w8, #0x1
  408af0:	and	w8, w8, #0x1
  408af4:	stur	w8, [x29, #-36]
  408af8:	b	408b34 <print_name_and_link@@Base+0x130>
  408afc:	bl	40b430 <is_json_context@@Base>
  408b00:	tbnz	w0, #0, 408b08 <print_name_and_link@@Base+0x104>
  408b04:	b	408b28 <print_name_and_link@@Base+0x124>
  408b08:	mov	w0, #0x2                   	// #2
  408b0c:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  408b10:	add	x1, x1, #0x1ce
  408b14:	mov	x8, xzr
  408b18:	mov	x2, x8
  408b1c:	mov	x3, x8
  408b20:	bl	408c38 <print_name_and_link@@Base+0x234>
  408b24:	b	408b34 <print_name_and_link@@Base+0x130>
  408b28:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408b2c:	add	x8, x8, #0xbeb
  408b30:	stur	x8, [x29, #-32]
  408b34:	ldur	x8, [x29, #-32]
  408b38:	cbz	x8, 408b68 <print_name_and_link@@Base+0x164>
  408b3c:	ldur	x3, [x29, #-16]
  408b40:	ldur	x4, [x29, #-32]
  408b44:	add	x8, sp, #0x1c
  408b48:	mov	x0, x8
  408b4c:	mov	x1, #0x40                  	// #64
  408b50:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408b54:	add	x2, x2, #0xbf0
  408b58:	str	x8, [sp, #8]
  408b5c:	bl	404dd0 <snprintf@plt>
  408b60:	ldr	x8, [sp, #8]
  408b64:	stur	x8, [x29, #-16]
  408b68:	ldur	x3, [x29, #-8]
  408b6c:	ldur	x4, [x29, #-16]
  408b70:	mov	w0, #0x4                   	// #4
  408b74:	mov	w8, wzr
  408b78:	mov	w1, w8
  408b7c:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408b80:	add	x2, x2, #0xbf6
  408b84:	bl	40bec0 <print_color_string@@Base>
  408b88:	ldur	w0, [x29, #-36]
  408b8c:	ldp	x29, x30, [sp, #128]
  408b90:	add	sp, sp, #0x90
  408b94:	ret
  408b98:	sub	sp, sp, #0x10
  408b9c:	str	x0, [sp, #8]
  408ba0:	ldr	x8, [sp, #8]
  408ba4:	ldr	w0, [x8, #4]
  408ba8:	add	sp, sp, #0x10
  408bac:	ret
  408bb0:	sub	sp, sp, #0x30
  408bb4:	stp	x29, x30, [sp, #32]
  408bb8:	add	x29, sp, #0x20
  408bbc:	mov	w8, #0x6                   	// #6
  408bc0:	stur	w0, [x29, #-4]
  408bc4:	str	x1, [sp, #16]
  408bc8:	str	x2, [sp, #8]
  408bcc:	str	w3, [sp, #4]
  408bd0:	ldur	w0, [x29, #-4]
  408bd4:	ldr	x2, [sp, #16]
  408bd8:	ldr	x3, [sp, #8]
  408bdc:	ldr	w4, [sp, #4]
  408be0:	mov	w1, w8
  408be4:	bl	40b620 <print_color_int@@Base>
  408be8:	ldp	x29, x30, [sp, #32]
  408bec:	add	sp, sp, #0x30
  408bf0:	ret
  408bf4:	sub	sp, sp, #0x30
  408bf8:	stp	x29, x30, [sp, #32]
  408bfc:	add	x29, sp, #0x20
  408c00:	mov	w8, #0x6                   	// #6
  408c04:	stur	w0, [x29, #-4]
  408c08:	str	x1, [sp, #16]
  408c0c:	str	x2, [sp, #8]
  408c10:	str	x3, [sp]
  408c14:	ldur	w0, [x29, #-4]
  408c18:	ldr	x2, [sp, #16]
  408c1c:	ldr	x3, [sp, #8]
  408c20:	ldr	x4, [sp]
  408c24:	mov	w1, w8
  408c28:	bl	40bec0 <print_color_string@@Base>
  408c2c:	ldp	x29, x30, [sp, #32]
  408c30:	add	sp, sp, #0x30
  408c34:	ret
  408c38:	sub	sp, sp, #0x30
  408c3c:	stp	x29, x30, [sp, #32]
  408c40:	add	x29, sp, #0x20
  408c44:	mov	w8, #0x6                   	// #6
  408c48:	stur	w0, [x29, #-4]
  408c4c:	str	x1, [sp, #16]
  408c50:	str	x2, [sp, #8]
  408c54:	str	x3, [sp]
  408c58:	ldur	w0, [x29, #-4]
  408c5c:	ldr	x2, [sp, #16]
  408c60:	ldr	x3, [sp, #8]
  408c64:	ldr	x4, [sp]
  408c68:	mov	w1, w8
  408c6c:	bl	40c274 <print_color_null@@Base>
  408c70:	ldp	x29, x30, [sp, #32]
  408c74:	add	sp, sp, #0x30
  408c78:	ret

0000000000408c7c <getcmdline@@Base>:
  408c7c:	sub	sp, sp, #0x70
  408c80:	stp	x29, x30, [sp, #96]
  408c84:	add	x29, sp, #0x60
  408c88:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  408c8c:	ldr	x8, [x8, #4000]
  408c90:	stur	x0, [x29, #-16]
  408c94:	stur	x1, [x29, #-24]
  408c98:	stur	x2, [x29, #-32]
  408c9c:	ldur	x0, [x29, #-16]
  408ca0:	ldur	x1, [x29, #-24]
  408ca4:	ldur	x2, [x29, #-32]
  408ca8:	str	x8, [sp, #16]
  408cac:	bl	405000 <getline@plt>
  408cb0:	stur	x0, [x29, #-40]
  408cb4:	ldur	x8, [x29, #-40]
  408cb8:	cmp	x8, #0x0
  408cbc:	cset	w9, ge  // ge = tcont
  408cc0:	tbnz	w9, #0, 408cd0 <getcmdline@@Base+0x54>
  408cc4:	ldur	x8, [x29, #-40]
  408cc8:	stur	x8, [x29, #-8]
  408ccc:	b	408e78 <getcmdline@@Base+0x1fc>
  408cd0:	ldr	x8, [sp, #16]
  408cd4:	ldr	w9, [x8]
  408cd8:	add	w9, w9, #0x1
  408cdc:	str	w9, [x8]
  408ce0:	ldur	x10, [x29, #-16]
  408ce4:	ldr	x0, [x10]
  408ce8:	mov	w1, #0x23                  	// #35
  408cec:	bl	405060 <strchr@plt>
  408cf0:	str	x0, [sp, #48]
  408cf4:	ldr	x8, [sp, #48]
  408cf8:	cbz	x8, 408d08 <getcmdline@@Base+0x8c>
  408cfc:	ldr	x8, [sp, #48]
  408d00:	mov	w9, #0x0                   	// #0
  408d04:	strb	w9, [x8]
  408d08:	ldur	x8, [x29, #-16]
  408d0c:	ldr	x0, [x8]
  408d10:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408d14:	add	x1, x1, #0xbfd
  408d18:	bl	405140 <strstr@plt>
  408d1c:	str	x0, [sp, #48]
  408d20:	cbz	x0, 408e70 <getcmdline@@Base+0x1f4>
  408d24:	add	x0, sp, #0x28
  408d28:	mov	x8, xzr
  408d2c:	str	x8, [sp, #40]
  408d30:	add	x1, sp, #0x20
  408d34:	str	xzr, [sp, #32]
  408d38:	ldur	x2, [x29, #-32]
  408d3c:	bl	405000 <getline@plt>
  408d40:	str	x0, [sp, #24]
  408d44:	ldr	x8, [sp, #24]
  408d48:	cmp	x8, #0x0
  408d4c:	cset	w9, ge  // ge = tcont
  408d50:	tbnz	w9, #0, 408d78 <getcmdline@@Base+0xfc>
  408d54:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  408d58:	ldr	x8, [x8, #3992]
  408d5c:	ldr	x0, [x8]
  408d60:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408d64:	add	x1, x1, #0xc00
  408d68:	bl	4051e0 <fprintf@plt>
  408d6c:	ldr	x8, [sp, #24]
  408d70:	stur	x8, [x29, #-8]
  408d74:	b	408e78 <getcmdline@@Base+0x1fc>
  408d78:	ldr	x8, [sp, #16]
  408d7c:	ldr	w9, [x8]
  408d80:	add	w9, w9, #0x1
  408d84:	str	w9, [x8]
  408d88:	ldr	x10, [sp, #48]
  408d8c:	mov	w9, #0x0                   	// #0
  408d90:	strb	w9, [x10]
  408d94:	ldr	x0, [sp, #40]
  408d98:	mov	w1, #0x23                  	// #35
  408d9c:	bl	405060 <strchr@plt>
  408da0:	str	x0, [sp, #48]
  408da4:	ldr	x8, [sp, #48]
  408da8:	cbz	x8, 408db8 <getcmdline@@Base+0x13c>
  408dac:	ldr	x8, [sp, #48]
  408db0:	mov	w9, #0x0                   	// #0
  408db4:	strb	w9, [x8]
  408db8:	ldur	x8, [x29, #-16]
  408dbc:	ldr	x0, [x8]
  408dc0:	bl	404cc0 <strlen@plt>
  408dc4:	ldr	x8, [sp, #40]
  408dc8:	str	x0, [sp, #8]
  408dcc:	mov	x0, x8
  408dd0:	bl	404cc0 <strlen@plt>
  408dd4:	ldr	x8, [sp, #8]
  408dd8:	add	x9, x8, x0
  408ddc:	add	x9, x9, #0x1
  408de0:	ldur	x10, [x29, #-24]
  408de4:	str	x9, [x10]
  408de8:	ldur	x9, [x29, #-16]
  408dec:	ldr	x0, [x9]
  408df0:	ldur	x9, [x29, #-24]
  408df4:	ldr	x1, [x9]
  408df8:	bl	404ef0 <realloc@plt>
  408dfc:	ldur	x8, [x29, #-16]
  408e00:	str	x0, [x8]
  408e04:	ldur	x8, [x29, #-16]
  408e08:	ldr	x8, [x8]
  408e0c:	cbnz	x8, 408e3c <getcmdline@@Base+0x1c0>
  408e10:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  408e14:	ldr	x8, [x8, #3992]
  408e18:	ldr	x0, [x8]
  408e1c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408e20:	add	x1, x1, #0xc1b
  408e24:	bl	4051e0 <fprintf@plt>
  408e28:	ldur	x8, [x29, #-24]
  408e2c:	str	xzr, [x8]
  408e30:	mov	x8, #0xffffffffffffffff    	// #-1
  408e34:	stur	x8, [x29, #-8]
  408e38:	b	408e78 <getcmdline@@Base+0x1fc>
  408e3c:	ldr	x8, [sp, #24]
  408e40:	subs	x8, x8, #0x2
  408e44:	ldur	x9, [x29, #-40]
  408e48:	add	x8, x9, x8
  408e4c:	stur	x8, [x29, #-40]
  408e50:	ldur	x8, [x29, #-16]
  408e54:	ldr	x0, [x8]
  408e58:	ldr	x1, [sp, #40]
  408e5c:	bl	404e80 <strcat@plt>
  408e60:	ldr	x8, [sp, #40]
  408e64:	mov	x0, x8
  408e68:	bl	405020 <free@plt>
  408e6c:	b	408d08 <getcmdline@@Base+0x8c>
  408e70:	ldur	x8, [x29, #-40]
  408e74:	stur	x8, [x29, #-8]
  408e78:	ldur	x0, [x29, #-8]
  408e7c:	ldp	x29, x30, [sp, #96]
  408e80:	add	sp, sp, #0x70
  408e84:	ret

0000000000408e88 <makeargs@@Base>:
  408e88:	sub	sp, sp, #0x40
  408e8c:	stp	x29, x30, [sp, #48]
  408e90:	add	x29, sp, #0x30
  408e94:	stur	x0, [x29, #-8]
  408e98:	stur	x1, [x29, #-16]
  408e9c:	stur	w2, [x29, #-20]
  408ea0:	ldur	x8, [x29, #-8]
  408ea4:	str	x8, [sp, #16]
  408ea8:	str	wzr, [sp, #12]
  408eac:	ldr	x8, [sp, #16]
  408eb0:	ldrb	w9, [x8]
  408eb4:	cbz	w9, 409024 <makeargs@@Base+0x19c>
  408eb8:	ldr	x0, [sp, #16]
  408ebc:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408ec0:	add	x1, x1, #0x864
  408ec4:	bl	405050 <strspn@plt>
  408ec8:	ldr	x8, [sp, #16]
  408ecc:	add	x8, x8, x0
  408ed0:	str	x8, [sp, #16]
  408ed4:	ldr	x8, [sp, #16]
  408ed8:	ldrb	w9, [x8]
  408edc:	cbnz	w9, 408ee4 <makeargs@@Base+0x5c>
  408ee0:	b	409024 <makeargs@@Base+0x19c>
  408ee4:	ldr	w8, [sp, #12]
  408ee8:	ldur	w9, [x29, #-20]
  408eec:	subs	w9, w9, #0x1
  408ef0:	cmp	w8, w9
  408ef4:	b.lt	408f1c <makeargs@@Base+0x94>  // b.tstop
  408ef8:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  408efc:	ldr	x8, [x8, #3992]
  408f00:	ldr	x0, [x8]
  408f04:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408f08:	add	x1, x1, #0xc2a
  408f0c:	bl	4051e0 <fprintf@plt>
  408f10:	mov	w9, #0x1                   	// #1
  408f14:	mov	w0, w9
  408f18:	bl	404ce0 <exit@plt>
  408f1c:	ldr	x8, [sp, #16]
  408f20:	ldrb	w9, [x8]
  408f24:	cmp	w9, #0x27
  408f28:	b.eq	408f3c <makeargs@@Base+0xb4>  // b.none
  408f2c:	ldr	x8, [sp, #16]
  408f30:	ldrb	w9, [x8]
  408f34:	cmp	w9, #0x22
  408f38:	b.ne	408fb8 <makeargs@@Base+0x130>  // b.any
  408f3c:	ldr	x8, [sp, #16]
  408f40:	add	x9, x8, #0x1
  408f44:	str	x9, [sp, #16]
  408f48:	ldrb	w10, [x8]
  408f4c:	strb	w10, [sp, #11]
  408f50:	ldr	x8, [sp, #16]
  408f54:	ldur	x9, [x29, #-16]
  408f58:	ldrsw	x11, [sp, #12]
  408f5c:	mov	w10, w11
  408f60:	add	w10, w10, #0x1
  408f64:	str	w10, [sp, #12]
  408f68:	mov	x12, #0x8                   	// #8
  408f6c:	mul	x11, x12, x11
  408f70:	add	x9, x9, x11
  408f74:	str	x8, [x9]
  408f78:	ldr	x0, [sp, #16]
  408f7c:	ldrb	w1, [sp, #11]
  408f80:	bl	405060 <strchr@plt>
  408f84:	str	x0, [sp, #16]
  408f88:	ldr	x8, [sp, #16]
  408f8c:	cbnz	x8, 408fb4 <makeargs@@Base+0x12c>
  408f90:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  408f94:	ldr	x8, [x8, #3992]
  408f98:	ldr	x0, [x8]
  408f9c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408fa0:	add	x1, x1, #0xc49
  408fa4:	bl	4051e0 <fprintf@plt>
  408fa8:	mov	w9, #0x1                   	// #1
  408fac:	mov	w0, w9
  408fb0:	bl	404ce0 <exit@plt>
  408fb4:	b	40900c <makeargs@@Base+0x184>
  408fb8:	ldr	x8, [sp, #16]
  408fbc:	ldur	x9, [x29, #-16]
  408fc0:	ldrsw	x10, [sp, #12]
  408fc4:	mov	w11, w10
  408fc8:	add	w11, w11, #0x1
  408fcc:	str	w11, [sp, #12]
  408fd0:	mov	x12, #0x8                   	// #8
  408fd4:	mul	x10, x12, x10
  408fd8:	add	x9, x9, x10
  408fdc:	str	x8, [x9]
  408fe0:	ldr	x0, [sp, #16]
  408fe4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  408fe8:	add	x1, x1, #0x864
  408fec:	bl	405170 <strcspn@plt>
  408ff0:	ldr	x8, [sp, #16]
  408ff4:	add	x8, x8, x0
  408ff8:	str	x8, [sp, #16]
  408ffc:	ldr	x8, [sp, #16]
  409000:	ldrb	w11, [x8]
  409004:	cbnz	w11, 40900c <makeargs@@Base+0x184>
  409008:	b	409024 <makeargs@@Base+0x19c>
  40900c:	ldr	x8, [sp, #16]
  409010:	add	x9, x8, #0x1
  409014:	str	x9, [sp, #16]
  409018:	mov	w10, #0x0                   	// #0
  40901c:	strb	w10, [x8]
  409020:	b	408eac <makeargs@@Base+0x24>
  409024:	ldur	x8, [x29, #-16]
  409028:	ldrsw	x9, [sp, #12]
  40902c:	mov	x10, #0x8                   	// #8
  409030:	mul	x9, x10, x9
  409034:	add	x8, x8, x9
  409038:	mov	x9, xzr
  40903c:	str	x9, [x8]
  409040:	ldr	w0, [sp, #12]
  409044:	ldp	x29, x30, [sp, #48]
  409048:	add	sp, sp, #0x40
  40904c:	ret

0000000000409050 <print_nlmsg_timestamp@@Base>:
  409050:	sub	sp, sp, #0x50
  409054:	stp	x29, x30, [sp, #64]
  409058:	add	x29, sp, #0x40
  40905c:	mov	w8, #0x0                   	// #0
  409060:	adrp	x9, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409064:	add	x9, x9, #0xc65
  409068:	add	x10, sp, #0x20
  40906c:	stur	x0, [x29, #-8]
  409070:	stur	x1, [x29, #-16]
  409074:	ldur	x11, [x29, #-16]
  409078:	ldr	w12, [x11, #16]
  40907c:	mov	w11, w12
  409080:	str	x11, [sp, #32]
  409084:	ldur	x11, [x29, #-16]
  409088:	ldr	w12, [x11, #20]
  40908c:	mov	w11, w12
  409090:	str	x11, [sp, #24]
  409094:	mov	x0, x10
  409098:	str	w8, [sp, #20]
  40909c:	str	x9, [sp, #8]
  4090a0:	bl	404df0 <localtime@plt>
  4090a4:	bl	405100 <asctime@plt>
  4090a8:	stur	x0, [x29, #-24]
  4090ac:	ldur	x9, [x29, #-24]
  4090b0:	ldur	x0, [x29, #-24]
  4090b4:	str	x9, [sp]
  4090b8:	bl	404cc0 <strlen@plt>
  4090bc:	subs	x9, x0, #0x1
  4090c0:	ldr	x10, [sp]
  4090c4:	add	x9, x10, x9
  4090c8:	ldr	w8, [sp, #20]
  4090cc:	strb	w8, [x9]
  4090d0:	ldur	x0, [x29, #-8]
  4090d4:	ldur	x2, [x29, #-24]
  4090d8:	ldr	x3, [sp, #24]
  4090dc:	ldr	x1, [sp, #8]
  4090e0:	bl	4051e0 <fprintf@plt>
  4090e4:	ldp	x29, x30, [sp, #64]
  4090e8:	add	sp, sp, #0x50
  4090ec:	ret

00000000004090f0 <int_to_str@@Base>:
  4090f0:	sub	sp, sp, #0x20
  4090f4:	stp	x29, x30, [sp, #16]
  4090f8:	add	x29, sp, #0x10
  4090fc:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409100:	add	x8, x8, #0xc7b
  409104:	stur	w0, [x29, #-4]
  409108:	str	x1, [sp]
  40910c:	ldr	x0, [sp]
  409110:	ldur	w2, [x29, #-4]
  409114:	mov	x1, x8
  409118:	bl	404d90 <sprintf@plt>
  40911c:	ldr	x8, [sp]
  409120:	mov	x0, x8
  409124:	ldp	x29, x30, [sp, #16]
  409128:	add	sp, sp, #0x20
  40912c:	ret

0000000000409130 <get_guid@@Base>:
  409130:	sub	sp, sp, #0x40
  409134:	stp	x29, x30, [sp, #48]
  409138:	add	x29, sp, #0x30
  40913c:	stur	x0, [x29, #-16]
  409140:	str	x1, [sp, #24]
  409144:	ldr	x0, [sp, #24]
  409148:	bl	404cc0 <strlen@plt>
  40914c:	cmp	x0, #0x17
  409150:	b.eq	409160 <get_guid@@Base+0x30>  // b.none
  409154:	mov	w8, #0xffffffff            	// #-1
  409158:	stur	w8, [x29, #-4]
  40915c:	b	409288 <get_guid@@Base+0x158>
  409160:	str	wzr, [sp, #4]
  409164:	ldr	w8, [sp, #4]
  409168:	cmp	w8, #0x7
  40916c:	b.ge	4091ac <get_guid@@Base+0x7c>  // b.tcont
  409170:	ldr	x8, [sp, #24]
  409174:	ldr	w9, [sp, #4]
  409178:	mov	w10, #0x3                   	// #3
  40917c:	mul	w9, w9, w10
  409180:	add	w9, w9, #0x2
  409184:	ldrb	w9, [x8, w9, sxtw]
  409188:	cmp	w9, #0x3a
  40918c:	b.eq	40919c <get_guid@@Base+0x6c>  // b.none
  409190:	mov	w8, #0xffffffff            	// #-1
  409194:	stur	w8, [x29, #-4]
  409198:	b	409288 <get_guid@@Base+0x158>
  40919c:	ldr	w8, [sp, #4]
  4091a0:	add	w8, w8, #0x1
  4091a4:	str	w8, [sp, #4]
  4091a8:	b	409164 <get_guid@@Base+0x34>
  4091ac:	ldur	x8, [x29, #-16]
  4091b0:	str	xzr, [x8]
  4091b4:	str	wzr, [sp, #4]
  4091b8:	ldr	w8, [sp, #4]
  4091bc:	cmp	w8, #0x8
  4091c0:	b.ge	409284 <get_guid@@Base+0x154>  // b.tcont
  4091c4:	ldr	x8, [sp, #24]
  4091c8:	ldr	w9, [sp, #4]
  4091cc:	mov	w10, #0x3                   	// #3
  4091d0:	mul	w9, w9, w10
  4091d4:	mov	w0, w9
  4091d8:	sxtw	x11, w0
  4091dc:	add	x0, x8, x11
  4091e0:	add	x1, sp, #0x8
  4091e4:	mov	w2, #0x10                  	// #16
  4091e8:	str	w10, [sp]
  4091ec:	bl	404cb0 <strtoul@plt>
  4091f0:	str	x0, [sp, #16]
  4091f4:	ldr	x8, [sp, #8]
  4091f8:	ldr	x11, [sp, #24]
  4091fc:	ldr	w9, [sp, #4]
  409200:	ldr	w10, [sp]
  409204:	mul	w9, w9, w10
  409208:	mov	w0, w9
  40920c:	sxtw	x12, w0
  409210:	add	x11, x11, x12
  409214:	add	x11, x11, #0x2
  409218:	cmp	x8, x11
  40921c:	b.eq	40922c <get_guid@@Base+0xfc>  // b.none
  409220:	mov	w8, #0xffffffff            	// #-1
  409224:	stur	w8, [x29, #-4]
  409228:	b	409288 <get_guid@@Base+0x158>
  40922c:	ldr	x8, [sp, #16]
  409230:	cmp	x8, #0xff
  409234:	b.ls	409244 <get_guid@@Base+0x114>  // b.plast
  409238:	mov	w8, #0xffffffff            	// #-1
  40923c:	stur	w8, [x29, #-4]
  409240:	b	409288 <get_guid@@Base+0x158>
  409244:	ldr	x8, [sp, #16]
  409248:	ldr	w9, [sp, #4]
  40924c:	mov	w10, #0x8                   	// #8
  409250:	mul	w9, w10, w9
  409254:	mov	w10, #0x38                  	// #56
  409258:	subs	w9, w10, w9
  40925c:	mov	w11, w9
  409260:	lsl	x8, x8, x11
  409264:	ldur	x11, [x29, #-16]
  409268:	ldr	x12, [x11]
  40926c:	orr	x8, x12, x8
  409270:	str	x8, [x11]
  409274:	ldr	w8, [sp, #4]
  409278:	add	w8, w8, #0x1
  40927c:	str	w8, [sp, #4]
  409280:	b	4091b8 <get_guid@@Base+0x88>
  409284:	stur	wzr, [x29, #-4]
  409288:	ldur	w0, [x29, #-4]
  40928c:	ldp	x29, x30, [sp, #48]
  409290:	add	sp, sp, #0x40
  409294:	ret

0000000000409298 <get_real_family@@Base>:
  409298:	sub	sp, sp, #0x10
  40929c:	str	w0, [sp, #8]
  4092a0:	str	w1, [sp, #4]
  4092a4:	ldr	w8, [sp, #8]
  4092a8:	cmp	w8, #0x5
  4092ac:	b.eq	4092bc <get_real_family@@Base+0x24>  // b.none
  4092b0:	ldr	w8, [sp, #4]
  4092b4:	str	w8, [sp, #12]
  4092b8:	b	4092f4 <get_real_family@@Base+0x5c>
  4092bc:	ldr	w8, [sp, #4]
  4092c0:	cmp	w8, #0x80
  4092c4:	b.ne	4092d4 <get_real_family@@Base+0x3c>  // b.any
  4092c8:	mov	w8, #0x2                   	// #2
  4092cc:	str	w8, [sp, #12]
  4092d0:	b	4092f4 <get_real_family@@Base+0x5c>
  4092d4:	ldr	w8, [sp, #4]
  4092d8:	cmp	w8, #0x81
  4092dc:	b.ne	4092ec <get_real_family@@Base+0x54>  // b.any
  4092e0:	mov	w8, #0xa                   	// #10
  4092e4:	str	w8, [sp, #12]
  4092e8:	b	4092f4 <get_real_family@@Base+0x5c>
  4092ec:	ldr	w8, [sp, #4]
  4092f0:	str	w8, [sp, #12]
  4092f4:	ldr	w0, [sp, #12]
  4092f8:	add	sp, sp, #0x10
  4092fc:	ret

0000000000409300 <get_rtnl_link_stats_rta@@Base>:
  409300:	stp	x29, x30, [sp, #-32]!
  409304:	str	x28, [sp, #16]
  409308:	mov	x29, sp
  40930c:	sub	sp, sp, #0x9e0
  409310:	stur	x0, [x29, #-16]
  409314:	stur	x1, [x29, #-24]
  409318:	ldur	x8, [x29, #-24]
  40931c:	ldr	x8, [x8, #184]
  409320:	cbz	x8, 409344 <get_rtnl_link_stats_rta@@Base+0x44>
  409324:	ldur	x8, [x29, #-24]
  409328:	ldr	x8, [x8, #184]
  40932c:	stur	x8, [x29, #-136]
  409330:	mov	w9, #0xc0                  	// #192
  409334:	stur	w9, [x29, #-140]
  409338:	ldur	x8, [x29, #-16]
  40933c:	stur	x8, [x29, #-128]
  409340:	b	4093ec <get_rtnl_link_stats_rta@@Base+0xec>
  409344:	ldur	x8, [x29, #-24]
  409348:	ldr	x8, [x8, #56]
  40934c:	cbz	x8, 409370 <get_rtnl_link_stats_rta@@Base+0x70>
  409350:	ldur	x8, [x29, #-24]
  409354:	ldr	x8, [x8, #56]
  409358:	stur	x8, [x29, #-136]
  40935c:	mov	w9, #0x60                  	// #96
  409360:	stur	w9, [x29, #-140]
  409364:	sub	x8, x29, #0x78
  409368:	stur	x8, [x29, #-128]
  40936c:	b	4093ec <get_rtnl_link_stats_rta@@Base+0xec>
  409370:	ldur	x8, [x29, #-24]
  409374:	ldr	x8, [x8, #96]
  409378:	cbz	x8, 4093e0 <get_rtnl_link_stats_rta@@Base+0xe0>
  40937c:	ldur	x8, [x29, #-24]
  409380:	ldr	x8, [x8, #96]
  409384:	add	x2, x8, #0x4
  409388:	ldur	x8, [x29, #-24]
  40938c:	ldr	x8, [x8, #96]
  409390:	ldrh	w9, [x8]
  409394:	mov	w0, w9
  409398:	sxtw	x8, w0
  40939c:	subs	x8, x8, #0x4
  4093a0:	add	x10, sp, #0x8
  4093a4:	mov	x0, x10
  4093a8:	mov	w1, #0x128                 	// #296
  4093ac:	mov	w3, w8
  4093b0:	str	x10, [sp]
  4093b4:	bl	4108a8 <parse_rtattr@@Base>
  4093b8:	ldr	x10, [sp]
  4093bc:	ldr	x11, [x10, #24]
  4093c0:	cbz	x11, 4093d4 <get_rtnl_link_stats_rta@@Base+0xd4>
  4093c4:	ldur	x0, [x29, #-16]
  4093c8:	add	x8, sp, #0x8
  4093cc:	ldr	x1, [x8, #24]
  4093d0:	bl	409498 <get_rtnl_link_stats_rta@@Base+0x198>
  4093d4:	mov	w8, #0xc0                  	// #192
  4093d8:	stur	w8, [x29, #-4]
  4093dc:	b	409484 <get_rtnl_link_stats_rta@@Base+0x184>
  4093e0:	mov	w8, #0xffffffff            	// #-1
  4093e4:	stur	w8, [x29, #-4]
  4093e8:	b	409484 <get_rtnl_link_stats_rta@@Base+0x184>
  4093ec:	ldur	x8, [x29, #-136]
  4093f0:	ldrh	w9, [x8]
  4093f4:	mov	w0, w9
  4093f8:	sxtw	x8, w0
  4093fc:	subs	x8, x8, #0x4
  409400:	stur	w8, [x29, #-144]
  409404:	ldur	w8, [x29, #-144]
  409408:	ldur	w9, [x29, #-140]
  40940c:	cmp	w8, w9
  409410:	b.ge	409444 <get_rtnl_link_stats_rta@@Base+0x144>  // b.tcont
  409414:	ldur	x8, [x29, #-128]
  409418:	ldursw	x9, [x29, #-144]
  40941c:	add	x0, x8, x9
  409420:	ldur	w10, [x29, #-140]
  409424:	ldur	w11, [x29, #-144]
  409428:	subs	w10, w10, w11
  40942c:	mov	w1, w10
  409430:	sxtw	x2, w1
  409434:	mov	w10, wzr
  409438:	mov	w1, w10
  40943c:	bl	404ea0 <memset@plt>
  409440:	b	40944c <get_rtnl_link_stats_rta@@Base+0x14c>
  409444:	ldur	w8, [x29, #-140]
  409448:	stur	w8, [x29, #-144]
  40944c:	ldur	x0, [x29, #-128]
  409450:	ldur	x8, [x29, #-136]
  409454:	add	x1, x8, #0x4
  409458:	ldursw	x2, [x29, #-144]
  40945c:	bl	404c90 <memcpy@plt>
  409460:	ldur	x8, [x29, #-128]
  409464:	ldur	x9, [x29, #-16]
  409468:	cmp	x8, x9
  40946c:	b.eq	40947c <get_rtnl_link_stats_rta@@Base+0x17c>  // b.none
  409470:	ldur	x0, [x29, #-16]
  409474:	ldur	x1, [x29, #-128]
  409478:	bl	409558 <get_rtnl_link_stats_rta@@Base+0x258>
  40947c:	ldur	w8, [x29, #-140]
  409480:	stur	w8, [x29, #-4]
  409484:	ldur	w0, [x29, #-4]
  409488:	add	sp, sp, #0x9e0
  40948c:	ldr	x28, [sp, #16]
  409490:	ldp	x29, x30, [sp], #32
  409494:	ret
  409498:	sub	sp, sp, #0x30
  40949c:	stp	x29, x30, [sp, #32]
  4094a0:	add	x29, sp, #0x20
  4094a4:	mov	x2, #0xc0                  	// #192
  4094a8:	stur	x0, [x29, #-8]
  4094ac:	str	x1, [sp, #16]
  4094b0:	ldr	x8, [sp, #16]
  4094b4:	add	x8, x8, #0x4
  4094b8:	str	x8, [sp, #8]
  4094bc:	ldur	x0, [x29, #-8]
  4094c0:	mov	w9, wzr
  4094c4:	mov	w1, w9
  4094c8:	bl	404ea0 <memset@plt>
  4094cc:	ldr	x8, [sp, #8]
  4094d0:	ldr	x8, [x8, #8]
  4094d4:	ldur	x10, [x29, #-8]
  4094d8:	str	x8, [x10]
  4094dc:	ldr	x8, [sp, #8]
  4094e0:	ldr	x8, [x8, #16]
  4094e4:	ldur	x10, [x29, #-8]
  4094e8:	str	x8, [x10, #16]
  4094ec:	ldr	x8, [sp, #8]
  4094f0:	ldr	x8, [x8, #40]
  4094f4:	ldur	x10, [x29, #-8]
  4094f8:	str	x8, [x10, #8]
  4094fc:	ldr	x8, [sp, #8]
  409500:	ldr	x8, [x8, #48]
  409504:	ldur	x10, [x29, #-8]
  409508:	str	x8, [x10, #24]
  40950c:	ldr	x8, [sp, #8]
  409510:	ldr	x8, [x8, #104]
  409514:	ldur	x10, [x29, #-8]
  409518:	str	x8, [x10, #32]
  40951c:	ldr	x8, [sp, #8]
  409520:	ldr	x8, [x8, #112]
  409524:	ldur	x10, [x29, #-8]
  409528:	str	x8, [x10, #40]
  40952c:	ldr	x8, [sp, #8]
  409530:	ldr	x8, [x8, #184]
  409534:	ldur	x10, [x29, #-8]
  409538:	str	x8, [x10, #64]
  40953c:	ldr	x8, [sp, #8]
  409540:	ldr	x8, [x8, #248]
  409544:	ldur	x10, [x29, #-8]
  409548:	str	x8, [x10, #104]
  40954c:	ldp	x29, x30, [sp, #32]
  409550:	add	sp, sp, #0x30
  409554:	ret
  409558:	sub	sp, sp, #0x30
  40955c:	str	x0, [sp, #40]
  409560:	str	x1, [sp, #32]
  409564:	ldr	x8, [sp, #40]
  409568:	str	x8, [sp, #24]
  40956c:	ldr	x8, [sp, #32]
  409570:	str	x8, [sp, #16]
  409574:	ldr	x8, [sp, #16]
  409578:	add	x8, x8, #0x60
  40957c:	str	x8, [sp, #8]
  409580:	ldr	x8, [sp, #16]
  409584:	ldr	x9, [sp, #8]
  409588:	cmp	x8, x9
  40958c:	b.cs	4095b8 <get_rtnl_link_stats_rta@@Base+0x2b8>  // b.hs, b.nlast
  409590:	ldr	x8, [sp, #16]
  409594:	add	x9, x8, #0x4
  409598:	str	x9, [sp, #16]
  40959c:	ldr	w10, [x8]
  4095a0:	mov	w8, w10
  4095a4:	ldr	x9, [sp, #24]
  4095a8:	add	x11, x9, #0x8
  4095ac:	str	x11, [sp, #24]
  4095b0:	str	x8, [x9]
  4095b4:	b	409580 <get_rtnl_link_stats_rta@@Base+0x280>
  4095b8:	add	sp, sp, #0x30
  4095bc:	ret

00000000004095c0 <strlcpy@@Base>:
  4095c0:	sub	sp, sp, #0x60
  4095c4:	stp	x29, x30, [sp, #80]
  4095c8:	add	x29, sp, #0x50
  4095cc:	stur	x0, [x29, #-8]
  4095d0:	stur	x1, [x29, #-16]
  4095d4:	stur	x2, [x29, #-24]
  4095d8:	ldur	x0, [x29, #-16]
  4095dc:	bl	404cc0 <strlen@plt>
  4095e0:	stur	x0, [x29, #-32]
  4095e4:	ldur	x8, [x29, #-24]
  4095e8:	cbz	x8, 409658 <strlcpy@@Base+0x98>
  4095ec:	ldur	x8, [x29, #-32]
  4095f0:	str	x8, [sp, #32]
  4095f4:	ldur	x8, [x29, #-24]
  4095f8:	subs	x8, x8, #0x1
  4095fc:	str	x8, [sp, #24]
  409600:	ldr	x8, [sp, #32]
  409604:	ldr	x9, [sp, #24]
  409608:	cmp	x8, x9
  40960c:	b.cs	40961c <strlcpy@@Base+0x5c>  // b.hs, b.nlast
  409610:	ldr	x8, [sp, #32]
  409614:	str	x8, [sp, #8]
  409618:	b	409624 <strlcpy@@Base+0x64>
  40961c:	ldr	x8, [sp, #24]
  409620:	str	x8, [sp, #8]
  409624:	ldr	x8, [sp, #8]
  409628:	str	x8, [sp, #16]
  40962c:	ldr	x8, [sp, #16]
  409630:	str	x8, [sp, #40]
  409634:	ldur	x0, [x29, #-8]
  409638:	ldur	x1, [x29, #-16]
  40963c:	ldr	x2, [sp, #40]
  409640:	bl	404c90 <memcpy@plt>
  409644:	ldur	x8, [x29, #-8]
  409648:	ldr	x9, [sp, #40]
  40964c:	add	x8, x8, x9
  409650:	mov	w10, #0x0                   	// #0
  409654:	strb	w10, [x8]
  409658:	ldur	x0, [x29, #-32]
  40965c:	ldp	x29, x30, [sp, #80]
  409660:	add	sp, sp, #0x60
  409664:	ret

0000000000409668 <strlcat@@Base>:
  409668:	sub	sp, sp, #0x50
  40966c:	stp	x29, x30, [sp, #64]
  409670:	add	x29, sp, #0x40
  409674:	stur	x0, [x29, #-16]
  409678:	stur	x1, [x29, #-24]
  40967c:	str	x2, [sp, #32]
  409680:	ldur	x0, [x29, #-16]
  409684:	bl	404cc0 <strlen@plt>
  409688:	str	x0, [sp, #24]
  40968c:	ldr	x8, [sp, #24]
  409690:	ldr	x9, [sp, #32]
  409694:	cmp	x8, x9
  409698:	b.cc	4096bc <strlcat@@Base+0x54>  // b.lo, b.ul, b.last
  40969c:	ldr	x8, [sp, #24]
  4096a0:	ldur	x0, [x29, #-24]
  4096a4:	str	x8, [sp, #16]
  4096a8:	bl	404cc0 <strlen@plt>
  4096ac:	ldr	x8, [sp, #16]
  4096b0:	add	x9, x8, x0
  4096b4:	stur	x9, [x29, #-8]
  4096b8:	b	4096f0 <strlcat@@Base+0x88>
  4096bc:	ldr	x8, [sp, #24]
  4096c0:	ldur	x9, [x29, #-16]
  4096c4:	ldr	x10, [sp, #24]
  4096c8:	add	x0, x9, x10
  4096cc:	ldur	x1, [x29, #-24]
  4096d0:	ldr	x9, [sp, #32]
  4096d4:	ldr	x10, [sp, #24]
  4096d8:	subs	x2, x9, x10
  4096dc:	str	x8, [sp, #8]
  4096e0:	bl	4095c0 <strlcpy@@Base>
  4096e4:	ldr	x8, [sp, #8]
  4096e8:	add	x9, x8, x0
  4096ec:	stur	x9, [x29, #-8]
  4096f0:	ldur	x0, [x29, #-8]
  4096f4:	ldp	x29, x30, [sp, #64]
  4096f8:	add	sp, sp, #0x50
  4096fc:	ret

0000000000409700 <drop_cap@@Base>:
  409700:	sub	sp, sp, #0x30
  409704:	stp	x29, x30, [sp, #32]
  409708:	add	x29, sp, #0x20
  40970c:	bl	404da0 <getuid@plt>
  409710:	cbz	w0, 40979c <drop_cap@@Base+0x9c>
  409714:	bl	404d40 <geteuid@plt>
  409718:	cbz	w0, 40979c <drop_cap@@Base+0x9c>
  40971c:	mov	w8, #0xc                   	// #12
  409720:	stur	w8, [x29, #-12]
  409724:	mov	w8, #0x2                   	// #2
  409728:	str	w8, [sp, #16]
  40972c:	bl	404fe0 <cap_get_proc@plt>
  409730:	stur	x0, [x29, #-8]
  409734:	ldur	x9, [x29, #-8]
  409738:	cbnz	x9, 409744 <drop_cap@@Base+0x44>
  40973c:	mov	w0, #0x1                   	// #1
  409740:	bl	404ce0 <exit@plt>
  409744:	ldur	x0, [x29, #-8]
  409748:	ldur	w1, [x29, #-12]
  40974c:	ldr	w2, [sp, #16]
  409750:	add	x3, sp, #0xc
  409754:	bl	404ed0 <cap_get_flag@plt>
  409758:	cbz	w0, 409764 <drop_cap@@Base+0x64>
  40975c:	mov	w0, #0x1                   	// #1
  409760:	bl	404ce0 <exit@plt>
  409764:	ldr	w8, [sp, #12]
  409768:	cbnz	w8, 409794 <drop_cap@@Base+0x94>
  40976c:	ldur	x0, [x29, #-8]
  409770:	bl	4050d0 <cap_clear@plt>
  409774:	cbz	w0, 409780 <drop_cap@@Base+0x80>
  409778:	mov	w0, #0x1                   	// #1
  40977c:	bl	404ce0 <exit@plt>
  409780:	ldur	x0, [x29, #-8]
  409784:	bl	404f10 <cap_set_proc@plt>
  409788:	cbz	w0, 409794 <drop_cap@@Base+0x94>
  40978c:	mov	w0, #0x1                   	// #1
  409790:	bl	404ce0 <exit@plt>
  409794:	ldur	x0, [x29, #-8]
  409798:	bl	405110 <cap_free@plt>
  40979c:	ldp	x29, x30, [sp, #32]
  4097a0:	add	sp, sp, #0x30
  4097a4:	ret

00000000004097a8 <get_time@@Base>:
  4097a8:	sub	sp, sp, #0x40
  4097ac:	stp	x29, x30, [sp, #48]
  4097b0:	add	x29, sp, #0x30
  4097b4:	add	x8, sp, #0x8
  4097b8:	stur	x0, [x29, #-16]
  4097bc:	str	x1, [sp, #24]
  4097c0:	ldr	x0, [sp, #24]
  4097c4:	mov	x1, x8
  4097c8:	bl	404d30 <strtod@plt>
  4097cc:	str	d0, [sp, #16]
  4097d0:	ldr	x8, [sp, #8]
  4097d4:	ldr	x9, [sp, #24]
  4097d8:	cmp	x8, x9
  4097dc:	b.ne	4097ec <get_time@@Base+0x44>  // b.any
  4097e0:	mov	w8, #0xffffffff            	// #-1
  4097e4:	stur	w8, [x29, #-4]
  4097e8:	b	409918 <get_time@@Base+0x170>
  4097ec:	ldr	x8, [sp, #8]
  4097f0:	ldrb	w9, [x8]
  4097f4:	cbz	w9, 409904 <get_time@@Base+0x15c>
  4097f8:	ldr	x0, [sp, #8]
  4097fc:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409800:	add	x1, x1, #0x915
  409804:	bl	404ee0 <strcasecmp@plt>
  409808:	cbz	w0, 409834 <get_time@@Base+0x8c>
  40980c:	ldr	x0, [sp, #8]
  409810:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409814:	add	x1, x1, #0x92c
  409818:	bl	404ee0 <strcasecmp@plt>
  40981c:	cbz	w0, 409834 <get_time@@Base+0x8c>
  409820:	ldr	x0, [sp, #8]
  409824:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409828:	add	x1, x1, #0x931
  40982c:	bl	404ee0 <strcasecmp@plt>
  409830:	cbnz	w0, 409850 <get_time@@Base+0xa8>
  409834:	ldr	d0, [sp, #16]
  409838:	mov	x8, #0x848000000000        	// #145685290680320
  40983c:	movk	x8, #0x412e, lsl #48
  409840:	fmov	d1, x8
  409844:	fmul	d0, d0, d1
  409848:	str	d0, [sp, #16]
  40984c:	b	409904 <get_time@@Base+0x15c>
  409850:	ldr	x0, [sp, #8]
  409854:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409858:	add	x1, x1, #0xcb4
  40985c:	bl	404ee0 <strcasecmp@plt>
  409860:	cbz	w0, 40988c <get_time@@Base+0xe4>
  409864:	ldr	x0, [sp, #8]
  409868:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40986c:	add	x1, x1, #0x92b
  409870:	bl	404ee0 <strcasecmp@plt>
  409874:	cbz	w0, 40988c <get_time@@Base+0xe4>
  409878:	ldr	x0, [sp, #8]
  40987c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409880:	add	x1, x1, #0x930
  409884:	bl	404ee0 <strcasecmp@plt>
  409888:	cbnz	w0, 4098a8 <get_time@@Base+0x100>
  40988c:	ldr	d0, [sp, #16]
  409890:	mov	x8, #0x400000000000        	// #70368744177664
  409894:	movk	x8, #0x408f, lsl #48
  409898:	fmov	d1, x8
  40989c:	fmul	d0, d0, d1
  4098a0:	str	d0, [sp, #16]
  4098a4:	b	409904 <get_time@@Base+0x15c>
  4098a8:	ldr	x0, [sp, #8]
  4098ac:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4098b0:	add	x1, x1, #0xccd
  4098b4:	bl	404ee0 <strcasecmp@plt>
  4098b8:	cbz	w0, 4098e4 <get_time@@Base+0x13c>
  4098bc:	ldr	x0, [sp, #8]
  4098c0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4098c4:	add	x1, x1, #0xc7e
  4098c8:	bl	404ee0 <strcasecmp@plt>
  4098cc:	cbz	w0, 4098e4 <get_time@@Base+0x13c>
  4098d0:	ldr	x0, [sp, #8]
  4098d4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4098d8:	add	x1, x1, #0xc83
  4098dc:	bl	404ee0 <strcasecmp@plt>
  4098e0:	cbnz	w0, 4098f8 <get_time@@Base+0x150>
  4098e4:	ldr	d0, [sp, #16]
  4098e8:	fmov	d1, #1.000000000000000000e+00
  4098ec:	fmul	d0, d0, d1
  4098f0:	str	d0, [sp, #16]
  4098f4:	b	409904 <get_time@@Base+0x15c>
  4098f8:	mov	w8, #0xffffffff            	// #-1
  4098fc:	stur	w8, [x29, #-4]
  409900:	b	409918 <get_time@@Base+0x170>
  409904:	ldr	d0, [sp, #16]
  409908:	fcvtzu	w8, d0
  40990c:	ldur	x9, [x29, #-16]
  409910:	str	w8, [x9]
  409914:	stur	wzr, [x29, #-4]
  409918:	ldur	w0, [x29, #-4]
  40991c:	ldp	x29, x30, [sp, #48]
  409920:	add	sp, sp, #0x40
  409924:	ret

0000000000409928 <sprint_time@@Base>:
  409928:	sub	sp, sp, #0x20
  40992c:	stp	x29, x30, [sp, #16]
  409930:	add	x29, sp, #0x10
  409934:	mov	w8, #0x3f                  	// #63
  409938:	stur	w0, [x29, #-4]
  40993c:	str	x1, [sp]
  409940:	ldr	x0, [sp]
  409944:	ldur	w2, [x29, #-4]
  409948:	mov	w1, w8
  40994c:	bl	409960 <sprint_time@@Base+0x38>
  409950:	ldr	x0, [sp]
  409954:	ldp	x29, x30, [sp, #16]
  409958:	add	sp, sp, #0x20
  40995c:	ret
  409960:	sub	sp, sp, #0x30
  409964:	stp	x29, x30, [sp, #32]
  409968:	add	x29, sp, #0x20
  40996c:	mov	x8, #0x848000000000        	// #145685290680320
  409970:	movk	x8, #0x412e, lsl #48
  409974:	fmov	d0, x8
  409978:	stur	x0, [x29, #-8]
  40997c:	stur	w1, [x29, #-12]
  409980:	str	w2, [sp, #16]
  409984:	ldr	s1, [sp, #16]
  409988:	mov	v2.16b, v1.16b
  40998c:	ucvtf	d2, d2
  409990:	str	d2, [sp, #8]
  409994:	ldr	d2, [sp, #8]
  409998:	fcmp	d2, d0
  40999c:	cset	w9, ge  // ge = tcont
  4099a0:	tbnz	w9, #0, 4099a8 <sprint_time@@Base+0x80>
  4099a4:	b	4099d4 <sprint_time@@Base+0xac>
  4099a8:	ldur	x0, [x29, #-8]
  4099ac:	ldursw	x1, [x29, #-12]
  4099b0:	ldr	d0, [sp, #8]
  4099b4:	mov	x8, #0x848000000000        	// #145685290680320
  4099b8:	movk	x8, #0x412e, lsl #48
  4099bc:	fmov	d1, x8
  4099c0:	fdiv	d0, d0, d1
  4099c4:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4099c8:	add	x2, x2, #0xcaa
  4099cc:	bl	404dd0 <snprintf@plt>
  4099d0:	b	409a38 <sprint_time@@Base+0x110>
  4099d4:	ldr	d0, [sp, #8]
  4099d8:	mov	x8, #0x400000000000        	// #70368744177664
  4099dc:	movk	x8, #0x408f, lsl #48
  4099e0:	fmov	d1, x8
  4099e4:	fcmp	d0, d1
  4099e8:	cset	w9, ge  // ge = tcont
  4099ec:	tbnz	w9, #0, 4099f4 <sprint_time@@Base+0xcc>
  4099f0:	b	409a20 <sprint_time@@Base+0xf8>
  4099f4:	ldur	x0, [x29, #-8]
  4099f8:	ldursw	x1, [x29, #-12]
  4099fc:	ldr	d0, [sp, #8]
  409a00:	mov	x8, #0x400000000000        	// #70368744177664
  409a04:	movk	x8, #0x408f, lsl #48
  409a08:	fmov	d1, x8
  409a0c:	fdiv	d0, d0, d1
  409a10:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409a14:	add	x2, x2, #0xcb0
  409a18:	bl	404dd0 <snprintf@plt>
  409a1c:	b	409a38 <sprint_time@@Base+0x110>
  409a20:	ldur	x0, [x29, #-8]
  409a24:	ldursw	x1, [x29, #-12]
  409a28:	ldr	w3, [sp, #16]
  409a2c:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409a30:	add	x2, x2, #0xcb7
  409a34:	bl	404dd0 <snprintf@plt>
  409a38:	ldp	x29, x30, [sp, #32]
  409a3c:	add	sp, sp, #0x30
  409a40:	ret

0000000000409a44 <get_time64@@Base>:
  409a44:	sub	sp, sp, #0x40
  409a48:	stp	x29, x30, [sp, #48]
  409a4c:	add	x29, sp, #0x30
  409a50:	add	x8, sp, #0x8
  409a54:	stur	x0, [x29, #-16]
  409a58:	str	x1, [sp, #24]
  409a5c:	ldr	x0, [sp, #24]
  409a60:	mov	x1, x8
  409a64:	bl	404d30 <strtod@plt>
  409a68:	str	d0, [sp, #16]
  409a6c:	ldr	x8, [sp, #8]
  409a70:	ldr	x9, [sp, #24]
  409a74:	cmp	x8, x9
  409a78:	b.ne	409a88 <get_time64@@Base+0x44>  // b.any
  409a7c:	mov	w8, #0xffffffff            	// #-1
  409a80:	stur	w8, [x29, #-4]
  409a84:	b	409c0c <get_time64@@Base+0x1c8>
  409a88:	ldr	x8, [sp, #8]
  409a8c:	ldrb	w9, [x8]
  409a90:	cbz	w9, 409bf8 <get_time64@@Base+0x1b4>
  409a94:	ldr	x0, [sp, #8]
  409a98:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409a9c:	add	x1, x1, #0x915
  409aa0:	bl	404ee0 <strcasecmp@plt>
  409aa4:	cbz	w0, 409ad0 <get_time64@@Base+0x8c>
  409aa8:	ldr	x0, [sp, #8]
  409aac:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409ab0:	add	x1, x1, #0x92c
  409ab4:	bl	404ee0 <strcasecmp@plt>
  409ab8:	cbz	w0, 409ad0 <get_time64@@Base+0x8c>
  409abc:	ldr	x0, [sp, #8]
  409ac0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409ac4:	add	x1, x1, #0x931
  409ac8:	bl	404ee0 <strcasecmp@plt>
  409acc:	cbnz	w0, 409aec <get_time64@@Base+0xa8>
  409ad0:	ldr	d0, [sp, #16]
  409ad4:	mov	x8, #0xcd6500000000        	// #225833675390976
  409ad8:	movk	x8, #0x41cd, lsl #48
  409adc:	fmov	d1, x8
  409ae0:	fmul	d0, d0, d1
  409ae4:	str	d0, [sp, #16]
  409ae8:	b	409bf8 <get_time64@@Base+0x1b4>
  409aec:	ldr	x0, [sp, #8]
  409af0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409af4:	add	x1, x1, #0xcb4
  409af8:	bl	404ee0 <strcasecmp@plt>
  409afc:	cbz	w0, 409b28 <get_time64@@Base+0xe4>
  409b00:	ldr	x0, [sp, #8]
  409b04:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409b08:	add	x1, x1, #0x92b
  409b0c:	bl	404ee0 <strcasecmp@plt>
  409b10:	cbz	w0, 409b28 <get_time64@@Base+0xe4>
  409b14:	ldr	x0, [sp, #8]
  409b18:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409b1c:	add	x1, x1, #0x930
  409b20:	bl	404ee0 <strcasecmp@plt>
  409b24:	cbnz	w0, 409b44 <get_time64@@Base+0x100>
  409b28:	ldr	d0, [sp, #16]
  409b2c:	mov	x8, #0x848000000000        	// #145685290680320
  409b30:	movk	x8, #0x412e, lsl #48
  409b34:	fmov	d1, x8
  409b38:	fmul	d0, d0, d1
  409b3c:	str	d0, [sp, #16]
  409b40:	b	409bf8 <get_time64@@Base+0x1b4>
  409b44:	ldr	x0, [sp, #8]
  409b48:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409b4c:	add	x1, x1, #0xccd
  409b50:	bl	404ee0 <strcasecmp@plt>
  409b54:	cbz	w0, 409b80 <get_time64@@Base+0x13c>
  409b58:	ldr	x0, [sp, #8]
  409b5c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409b60:	add	x1, x1, #0xc7e
  409b64:	bl	404ee0 <strcasecmp@plt>
  409b68:	cbz	w0, 409b80 <get_time64@@Base+0x13c>
  409b6c:	ldr	x0, [sp, #8]
  409b70:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409b74:	add	x1, x1, #0xc83
  409b78:	bl	404ee0 <strcasecmp@plt>
  409b7c:	cbnz	w0, 409b9c <get_time64@@Base+0x158>
  409b80:	ldr	d0, [sp, #16]
  409b84:	mov	x8, #0x400000000000        	// #70368744177664
  409b88:	movk	x8, #0x408f, lsl #48
  409b8c:	fmov	d1, x8
  409b90:	fmul	d0, d0, d1
  409b94:	str	d0, [sp, #16]
  409b98:	b	409bf8 <get_time64@@Base+0x1b4>
  409b9c:	ldr	x0, [sp, #8]
  409ba0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409ba4:	add	x1, x1, #0xcd4
  409ba8:	bl	404ee0 <strcasecmp@plt>
  409bac:	cbz	w0, 409bd8 <get_time64@@Base+0x194>
  409bb0:	ldr	x0, [sp, #8]
  409bb4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409bb8:	add	x1, x1, #0xc89
  409bbc:	bl	404ee0 <strcasecmp@plt>
  409bc0:	cbz	w0, 409bd8 <get_time64@@Base+0x194>
  409bc4:	ldr	x0, [sp, #8]
  409bc8:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409bcc:	add	x1, x1, #0xc8e
  409bd0:	bl	404ee0 <strcasecmp@plt>
  409bd4:	cbnz	w0, 409bec <get_time64@@Base+0x1a8>
  409bd8:	ldr	d0, [sp, #16]
  409bdc:	fmov	d1, #1.000000000000000000e+00
  409be0:	fmul	d0, d0, d1
  409be4:	str	d0, [sp, #16]
  409be8:	b	409bf8 <get_time64@@Base+0x1b4>
  409bec:	mov	w8, #0xffffffff            	// #-1
  409bf0:	stur	w8, [x29, #-4]
  409bf4:	b	409c0c <get_time64@@Base+0x1c8>
  409bf8:	ldr	d0, [sp, #16]
  409bfc:	fcvtzs	x8, d0
  409c00:	ldur	x9, [x29, #-16]
  409c04:	str	x8, [x9]
  409c08:	stur	wzr, [x29, #-4]
  409c0c:	ldur	w0, [x29, #-4]
  409c10:	ldp	x29, x30, [sp, #48]
  409c14:	add	sp, sp, #0x40
  409c18:	ret

0000000000409c1c <sprint_time64@@Base>:
  409c1c:	sub	sp, sp, #0x20
  409c20:	stp	x29, x30, [sp, #16]
  409c24:	add	x29, sp, #0x10
  409c28:	mov	w8, #0x3f                  	// #63
  409c2c:	str	x0, [sp, #8]
  409c30:	str	x1, [sp]
  409c34:	ldr	x0, [sp]
  409c38:	ldr	x2, [sp, #8]
  409c3c:	mov	w1, w8
  409c40:	bl	409c54 <sprint_time64@@Base+0x38>
  409c44:	ldr	x0, [sp]
  409c48:	ldp	x29, x30, [sp, #16]
  409c4c:	add	sp, sp, #0x20
  409c50:	ret
  409c54:	sub	sp, sp, #0x30
  409c58:	stp	x29, x30, [sp, #32]
  409c5c:	add	x29, sp, #0x20
  409c60:	mov	x8, #0xca00                	// #51712
  409c64:	movk	x8, #0x3b9a, lsl #16
  409c68:	stur	x0, [x29, #-8]
  409c6c:	stur	w1, [x29, #-12]
  409c70:	str	x2, [sp, #8]
  409c74:	ldr	x9, [sp, #8]
  409c78:	scvtf	d0, x9
  409c7c:	str	d0, [sp]
  409c80:	ldr	x9, [sp, #8]
  409c84:	cmp	x9, x8
  409c88:	b.lt	409cb8 <sprint_time64@@Base+0x9c>  // b.tstop
  409c8c:	ldur	x0, [x29, #-8]
  409c90:	ldursw	x1, [x29, #-12]
  409c94:	ldr	d0, [sp]
  409c98:	mov	x8, #0xcd6500000000        	// #225833675390976
  409c9c:	movk	x8, #0x41cd, lsl #48
  409ca0:	fmov	d1, x8
  409ca4:	fdiv	d0, d0, d1
  409ca8:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409cac:	add	x2, x2, #0xcbc
  409cb0:	bl	404dd0 <snprintf@plt>
  409cb4:	b	409d48 <sprint_time64@@Base+0x12c>
  409cb8:	ldr	x8, [sp, #8]
  409cbc:	mov	x9, #0x4240                	// #16960
  409cc0:	movk	x9, #0xf, lsl #16
  409cc4:	cmp	x8, x9
  409cc8:	b.lt	409cf8 <sprint_time64@@Base+0xdc>  // b.tstop
  409ccc:	ldur	x0, [x29, #-8]
  409cd0:	ldursw	x1, [x29, #-12]
  409cd4:	ldr	d0, [sp]
  409cd8:	mov	x8, #0x848000000000        	// #145685290680320
  409cdc:	movk	x8, #0x412e, lsl #48
  409ce0:	fmov	d1, x8
  409ce4:	fdiv	d0, d0, d1
  409ce8:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409cec:	add	x2, x2, #0xcc2
  409cf0:	bl	404dd0 <snprintf@plt>
  409cf4:	b	409d48 <sprint_time64@@Base+0x12c>
  409cf8:	ldr	x8, [sp, #8]
  409cfc:	cmp	x8, #0x3e8
  409d00:	b.lt	409d30 <sprint_time64@@Base+0x114>  // b.tstop
  409d04:	ldur	x0, [x29, #-8]
  409d08:	ldursw	x1, [x29, #-12]
  409d0c:	ldr	d0, [sp]
  409d10:	mov	x8, #0x400000000000        	// #70368744177664
  409d14:	movk	x8, #0x408f, lsl #48
  409d18:	fmov	d1, x8
  409d1c:	fdiv	d0, d0, d1
  409d20:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409d24:	add	x2, x2, #0xcc9
  409d28:	bl	404dd0 <snprintf@plt>
  409d2c:	b	409d48 <sprint_time64@@Base+0x12c>
  409d30:	ldur	x0, [x29, #-8]
  409d34:	ldursw	x1, [x29, #-12]
  409d38:	ldr	x3, [sp, #8]
  409d3c:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  409d40:	add	x2, x2, #0xcd0
  409d44:	bl	404dd0 <snprintf@plt>
  409d48:	ldp	x29, x30, [sp, #32]
  409d4c:	add	sp, sp, #0x30
  409d50:	ret
  409d54:	sub	sp, sp, #0x40
  409d58:	stp	x29, x30, [sp, #48]
  409d5c:	add	x29, sp, #0x30
  409d60:	stur	x0, [x29, #-16]
  409d64:	str	x1, [sp, #24]
  409d68:	str	wzr, [sp, #20]
  409d6c:	ldr	w8, [sp, #20]
  409d70:	cmp	w8, #0x4
  409d74:	b.ge	409e2c <sprint_time64@@Base+0x210>  // b.tcont
  409d78:	ldr	x0, [sp, #24]
  409d7c:	mov	x1, sp
  409d80:	mov	w8, wzr
  409d84:	mov	w2, w8
  409d88:	bl	404cb0 <strtoul@plt>
  409d8c:	str	x0, [sp, #8]
  409d90:	ldr	x9, [sp, #8]
  409d94:	cmp	x9, #0xff
  409d98:	b.ls	409da8 <sprint_time64@@Base+0x18c>  // b.plast
  409d9c:	mov	w8, #0xffffffff            	// #-1
  409da0:	stur	w8, [x29, #-4]
  409da4:	b	409e34 <sprint_time64@@Base+0x218>
  409da8:	ldr	x8, [sp]
  409dac:	ldr	x9, [sp, #24]
  409db0:	cmp	x8, x9
  409db4:	b.ne	409dc4 <sprint_time64@@Base+0x1a8>  // b.any
  409db8:	mov	w8, #0xffffffff            	// #-1
  409dbc:	stur	w8, [x29, #-4]
  409dc0:	b	409e34 <sprint_time64@@Base+0x218>
  409dc4:	ldr	x8, [sp, #8]
  409dc8:	ldur	x9, [x29, #-16]
  409dcc:	ldrsw	x10, [sp, #20]
  409dd0:	add	x9, x9, x10
  409dd4:	strb	w8, [x9]
  409dd8:	ldr	x9, [sp]
  409ddc:	ldrb	w8, [x9]
  409de0:	cbnz	w8, 409de8 <sprint_time64@@Base+0x1cc>
  409de4:	b	409e2c <sprint_time64@@Base+0x210>
  409de8:	ldr	w8, [sp, #20]
  409dec:	cmp	w8, #0x3
  409df0:	b.eq	409e04 <sprint_time64@@Base+0x1e8>  // b.none
  409df4:	ldr	x8, [sp]
  409df8:	ldrb	w9, [x8]
  409dfc:	cmp	w9, #0x2e
  409e00:	b.eq	409e10 <sprint_time64@@Base+0x1f4>  // b.none
  409e04:	mov	w8, #0xffffffff            	// #-1
  409e08:	stur	w8, [x29, #-4]
  409e0c:	b	409e34 <sprint_time64@@Base+0x218>
  409e10:	ldr	x8, [sp]
  409e14:	add	x8, x8, #0x1
  409e18:	str	x8, [sp, #24]
  409e1c:	ldr	w8, [sp, #20]
  409e20:	add	w8, w8, #0x1
  409e24:	str	w8, [sp, #20]
  409e28:	b	409d6c <sprint_time64@@Base+0x150>
  409e2c:	mov	w8, #0x1                   	// #1
  409e30:	stur	w8, [x29, #-4]
  409e34:	ldur	w0, [x29, #-4]
  409e38:	ldp	x29, x30, [sp, #48]
  409e3c:	add	sp, sp, #0x40
  409e40:	ret

0000000000409e44 <namehash@@Base>:
  409e44:	sub	sp, sp, #0x10
  409e48:	mov	w8, #0x1505                	// #5381
  409e4c:	str	x0, [sp, #8]
  409e50:	str	w8, [sp, #4]
  409e54:	ldr	x8, [sp, #8]
  409e58:	ldrb	w9, [x8]
  409e5c:	cbz	w9, 409e88 <namehash@@Base+0x44>
  409e60:	ldr	w8, [sp, #4]
  409e64:	ldr	w9, [sp, #4]
  409e68:	add	w8, w9, w8, lsl #5
  409e6c:	ldr	x10, [sp, #8]
  409e70:	add	x11, x10, #0x1
  409e74:	str	x11, [sp, #8]
  409e78:	ldrb	w9, [x10]
  409e7c:	add	w8, w8, w9
  409e80:	str	w8, [sp, #4]
  409e84:	b	409e54 <namehash@@Base+0x10>
  409e88:	ldr	w0, [sp, #4]
  409e8c:	add	sp, sp, #0x10
  409e90:	ret

0000000000409e94 <ll_remember_index@@Base>:
  409e94:	stp	x29, x30, [sp, #-32]!
  409e98:	str	x28, [sp, #16]
  409e9c:	mov	x29, sp
  409ea0:	sub	sp, sp, #0x1e0
  409ea4:	stur	x0, [x29, #-16]
  409ea8:	stur	x1, [x29, #-24]
  409eac:	ldur	x8, [x29, #-16]
  409eb0:	add	x8, x8, #0x10
  409eb4:	stur	x8, [x29, #-32]
  409eb8:	ldur	x8, [x29, #-16]
  409ebc:	ldrh	w9, [x8, #4]
  409ec0:	cmp	w9, #0x10
  409ec4:	b.eq	409ee0 <ll_remember_index@@Base+0x4c>  // b.none
  409ec8:	ldur	x8, [x29, #-16]
  409ecc:	ldrh	w9, [x8, #4]
  409ed0:	cmp	w9, #0x11
  409ed4:	b.eq	409ee0 <ll_remember_index@@Base+0x4c>  // b.none
  409ed8:	stur	wzr, [x29, #-4]
  409edc:	b	409f90 <ll_remember_index@@Base+0xfc>
  409ee0:	ldur	x8, [x29, #-16]
  409ee4:	ldr	w9, [x8]
  409ee8:	mov	w8, w9
  409eec:	cmp	x8, #0x20
  409ef0:	b.cs	409f00 <ll_remember_index@@Base+0x6c>  // b.hs, b.nlast
  409ef4:	mov	w8, #0xffffffff            	// #-1
  409ef8:	stur	w8, [x29, #-4]
  409efc:	b	409f90 <ll_remember_index@@Base+0xfc>
  409f00:	ldur	x8, [x29, #-32]
  409f04:	ldr	w0, [x8, #4]
  409f08:	bl	409fa4 <ll_remember_index@@Base+0x110>
  409f0c:	stur	x0, [x29, #-40]
  409f10:	ldur	x8, [x29, #-16]
  409f14:	ldrh	w9, [x8, #4]
  409f18:	cmp	w9, #0x11
  409f1c:	b.ne	409f38 <ll_remember_index@@Base+0xa4>  // b.any
  409f20:	ldur	x8, [x29, #-40]
  409f24:	cbz	x8, 409f30 <ll_remember_index@@Base+0x9c>
  409f28:	ldur	x0, [x29, #-40]
  409f2c:	bl	40a040 <ll_remember_index@@Base+0x1ac>
  409f30:	stur	wzr, [x29, #-4]
  409f34:	b	409f90 <ll_remember_index@@Base+0xfc>
  409f38:	ldur	x8, [x29, #-32]
  409f3c:	add	x2, x8, #0x10
  409f40:	ldur	x8, [x29, #-16]
  409f44:	ldr	w9, [x8]
  409f48:	mov	w8, w9
  409f4c:	subs	x8, x8, #0x20
  409f50:	add	x0, sp, #0x8
  409f54:	mov	w1, #0x35                  	// #53
  409f58:	mov	w3, w8
  409f5c:	mov	w4, #0xffff8000            	// #-32768
  409f60:	bl	4108ec <parse_rtattr_flags@@Base>
  409f64:	ldur	x10, [x29, #-40]
  409f68:	cbz	x10, 409f80 <ll_remember_index@@Base+0xec>
  409f6c:	ldur	x0, [x29, #-40]
  409f70:	ldur	x1, [x29, #-32]
  409f74:	add	x2, sp, #0x8
  409f78:	bl	40a074 <ll_remember_index@@Base+0x1e0>
  409f7c:	b	409f8c <ll_remember_index@@Base+0xf8>
  409f80:	ldur	x0, [x29, #-32]
  409f84:	add	x1, sp, #0x8
  409f88:	bl	40a0ec <ll_remember_index@@Base+0x258>
  409f8c:	stur	wzr, [x29, #-4]
  409f90:	ldur	w0, [x29, #-4]
  409f94:	add	sp, sp, #0x1e0
  409f98:	ldr	x28, [sp, #16]
  409f9c:	ldp	x29, x30, [sp], #32
  409fa0:	ret
  409fa4:	sub	sp, sp, #0x40
  409fa8:	adrp	x8, 423000 <memcpy@GLIBC_2.17>
  409fac:	add	x8, x8, #0xd70
  409fb0:	str	w0, [sp, #52]
  409fb4:	ldr	w9, [sp, #52]
  409fb8:	and	w9, w9, #0x3ff
  409fbc:	str	w9, [sp, #36]
  409fc0:	ldr	w9, [sp, #36]
  409fc4:	mov	w10, w9
  409fc8:	mov	x11, #0x8                   	// #8
  409fcc:	mul	x10, x11, x10
  409fd0:	add	x8, x8, x10
  409fd4:	ldr	x8, [x8]
  409fd8:	str	x8, [sp, #40]
  409fdc:	ldr	x8, [sp, #40]
  409fe0:	cbz	x8, 40a02c <ll_remember_index@@Base+0x198>
  409fe4:	ldr	x8, [sp, #40]
  409fe8:	str	x8, [sp, #16]
  409fec:	ldr	x8, [sp, #16]
  409ff0:	str	x8, [sp, #8]
  409ff4:	ldr	x8, [sp, #8]
  409ff8:	str	x8, [sp, #24]
  409ffc:	ldr	x8, [sp, #24]
  40a000:	ldr	w9, [x8, #36]
  40a004:	ldr	w10, [sp, #52]
  40a008:	cmp	w9, w10
  40a00c:	b.ne	40a01c <ll_remember_index@@Base+0x188>  // b.any
  40a010:	ldr	x8, [sp, #24]
  40a014:	str	x8, [sp, #56]
  40a018:	b	40a034 <ll_remember_index@@Base+0x1a0>
  40a01c:	ldr	x8, [sp, #40]
  40a020:	ldr	x8, [x8]
  40a024:	str	x8, [sp, #40]
  40a028:	b	409fdc <ll_remember_index@@Base+0x148>
  40a02c:	mov	x8, xzr
  40a030:	str	x8, [sp, #56]
  40a034:	ldr	x0, [sp, #56]
  40a038:	add	sp, sp, #0x40
  40a03c:	ret
  40a040:	sub	sp, sp, #0x20
  40a044:	stp	x29, x30, [sp, #16]
  40a048:	add	x29, sp, #0x10
  40a04c:	str	x0, [sp, #8]
  40a050:	ldr	x0, [sp, #8]
  40a054:	bl	40a810 <ll_init_map@@Base+0xc0>
  40a058:	ldr	x0, [sp, #8]
  40a05c:	mov	w8, #0x1                   	// #1
  40a060:	and	w1, w8, #0x1
  40a064:	bl	40a8c8 <ll_init_map@@Base+0x178>
  40a068:	ldp	x29, x30, [sp, #16]
  40a06c:	add	sp, sp, #0x20
  40a070:	ret
  40a074:	sub	sp, sp, #0x40
  40a078:	stp	x29, x30, [sp, #48]
  40a07c:	add	x29, sp, #0x30
  40a080:	stur	x0, [x29, #-8]
  40a084:	stur	x1, [x29, #-16]
  40a088:	str	x2, [sp, #24]
  40a08c:	ldr	x8, [sp, #24]
  40a090:	ldr	x8, [x8, #24]
  40a094:	cbz	x8, 40a0d0 <ll_remember_index@@Base+0x23c>
  40a098:	ldur	x0, [x29, #-8]
  40a09c:	ldur	x1, [x29, #-16]
  40a0a0:	ldr	x8, [sp, #24]
  40a0a4:	ldr	x8, [x8, #24]
  40a0a8:	str	x0, [sp, #16]
  40a0ac:	mov	x0, x8
  40a0b0:	str	x1, [sp, #8]
  40a0b4:	bl	40aa10 <ll_init_map@@Base+0x2c0>
  40a0b8:	ldr	x8, [sp, #16]
  40a0bc:	str	x0, [sp]
  40a0c0:	mov	x0, x8
  40a0c4:	ldr	x1, [sp, #8]
  40a0c8:	ldr	x2, [sp]
  40a0cc:	bl	40a980 <ll_init_map@@Base+0x230>
  40a0d0:	ldur	x0, [x29, #-8]
  40a0d4:	ldur	x1, [x29, #-16]
  40a0d8:	ldr	x2, [sp, #24]
  40a0dc:	bl	40aa28 <ll_init_map@@Base+0x2d8>
  40a0e0:	ldp	x29, x30, [sp, #48]
  40a0e4:	add	sp, sp, #0x40
  40a0e8:	ret
  40a0ec:	sub	sp, sp, #0x40
  40a0f0:	stp	x29, x30, [sp, #48]
  40a0f4:	add	x29, sp, #0x30
  40a0f8:	stur	x0, [x29, #-8]
  40a0fc:	stur	x1, [x29, #-16]
  40a100:	ldur	x8, [x29, #-16]
  40a104:	ldr	x8, [x8, #24]
  40a108:	cbnz	x8, 40a110 <ll_remember_index@@Base+0x27c>
  40a10c:	b	40a164 <ll_remember_index@@Base+0x2d0>
  40a110:	ldur	x0, [x29, #-8]
  40a114:	ldur	x8, [x29, #-16]
  40a118:	ldr	x8, [x8, #24]
  40a11c:	str	x0, [sp, #16]
  40a120:	mov	x0, x8
  40a124:	bl	40aa10 <ll_init_map@@Base+0x2c0>
  40a128:	ldr	x8, [sp, #16]
  40a12c:	str	x0, [sp, #8]
  40a130:	mov	x0, x8
  40a134:	ldr	x1, [sp, #8]
  40a138:	mov	x9, xzr
  40a13c:	mov	x2, x9
  40a140:	bl	40ad8c <ll_init_map@@Base+0x63c>
  40a144:	str	x0, [sp, #24]
  40a148:	ldr	x8, [sp, #24]
  40a14c:	cbnz	x8, 40a154 <ll_remember_index@@Base+0x2c0>
  40a150:	b	40a164 <ll_remember_index@@Base+0x2d0>
  40a154:	ldr	x0, [sp, #24]
  40a158:	ldur	x1, [x29, #-8]
  40a15c:	ldur	x2, [x29, #-16]
  40a160:	bl	40ac4c <ll_init_map@@Base+0x4fc>
  40a164:	ldp	x29, x30, [sp, #48]
  40a168:	add	sp, sp, #0x40
  40a16c:	ret

000000000040a170 <ll_idx_n2a@@Base>:
  40a170:	sub	sp, sp, #0x20
  40a174:	stp	x29, x30, [sp, #16]
  40a178:	add	x29, sp, #0x10
  40a17c:	adrp	x8, 423000 <memcpy@GLIBC_2.17>
  40a180:	add	x8, x8, #0xd48
  40a184:	mov	x1, #0x10                  	// #16
  40a188:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40a18c:	add	x2, x2, #0xcd7
  40a190:	stur	w0, [x29, #-4]
  40a194:	ldur	w3, [x29, #-4]
  40a198:	mov	x0, x8
  40a19c:	str	x8, [sp]
  40a1a0:	bl	404dd0 <snprintf@plt>
  40a1a4:	ldr	x8, [sp]
  40a1a8:	mov	x0, x8
  40a1ac:	ldp	x29, x30, [sp, #16]
  40a1b0:	add	sp, sp, #0x20
  40a1b4:	ret

000000000040a1b8 <ll_index_to_name@@Base>:
  40a1b8:	sub	sp, sp, #0x30
  40a1bc:	stp	x29, x30, [sp, #32]
  40a1c0:	add	x29, sp, #0x20
  40a1c4:	adrp	x8, 423000 <memcpy@GLIBC_2.17>
  40a1c8:	add	x8, x8, #0xd58
  40a1cc:	stur	w0, [x29, #-12]
  40a1d0:	ldur	w9, [x29, #-12]
  40a1d4:	str	x8, [sp]
  40a1d8:	cbnz	w9, 40a1ec <ll_index_to_name@@Base+0x34>
  40a1dc:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40a1e0:	add	x8, x8, #0xcdc
  40a1e4:	stur	x8, [x29, #-8]
  40a1e8:	b	40a280 <ll_index_to_name@@Base+0xc8>
  40a1ec:	ldur	w0, [x29, #-12]
  40a1f0:	bl	409fa4 <ll_remember_index@@Base+0x110>
  40a1f4:	str	x0, [sp, #8]
  40a1f8:	ldr	x8, [sp, #8]
  40a1fc:	cbz	x8, 40a210 <ll_index_to_name@@Base+0x58>
  40a200:	ldr	x8, [sp, #8]
  40a204:	add	x8, x8, #0x40
  40a208:	stur	x8, [x29, #-8]
  40a20c:	b	40a280 <ll_index_to_name@@Base+0xc8>
  40a210:	ldur	w1, [x29, #-12]
  40a214:	mov	x8, xzr
  40a218:	mov	x0, x8
  40a21c:	bl	40a290 <ll_index_to_name@@Base+0xd8>
  40a220:	ldur	w9, [x29, #-12]
  40a224:	cmp	w0, w9
  40a228:	b.ne	40a250 <ll_index_to_name@@Base+0x98>  // b.any
  40a22c:	ldur	w0, [x29, #-12]
  40a230:	bl	409fa4 <ll_remember_index@@Base+0x110>
  40a234:	str	x0, [sp, #8]
  40a238:	ldr	x8, [sp, #8]
  40a23c:	cbz	x8, 40a250 <ll_index_to_name@@Base+0x98>
  40a240:	ldr	x8, [sp, #8]
  40a244:	add	x8, x8, #0x40
  40a248:	stur	x8, [x29, #-8]
  40a24c:	b	40a280 <ll_index_to_name@@Base+0xc8>
  40a250:	ldur	w0, [x29, #-12]
  40a254:	ldr	x1, [sp]
  40a258:	bl	404e90 <if_indextoname@plt>
  40a25c:	cbnz	x0, 40a278 <ll_index_to_name@@Base+0xc0>
  40a260:	ldur	w3, [x29, #-12]
  40a264:	ldr	x0, [sp]
  40a268:	mov	x1, #0x10                  	// #16
  40a26c:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40a270:	add	x2, x2, #0xcd7
  40a274:	bl	404dd0 <snprintf@plt>
  40a278:	ldr	x8, [sp]
  40a27c:	stur	x8, [x29, #-8]
  40a280:	ldur	x0, [x29, #-8]
  40a284:	ldp	x29, x30, [sp, #32]
  40a288:	add	sp, sp, #0x30
  40a28c:	ret
  40a290:	stp	x29, x30, [sp, #-32]!
  40a294:	str	x28, [sp, #16]
  40a298:	mov	x29, sp
  40a29c:	sub	sp, sp, #0x4d0
  40a2a0:	mov	x2, #0x420                 	// #1056
  40a2a4:	mov	w8, #0x20                  	// #32
  40a2a8:	mov	w9, #0x12                  	// #18
  40a2ac:	mov	w10, #0x1                   	// #1
  40a2b0:	mov	w11, #0x9                   	// #9
  40a2b4:	mov	x12, #0x38                  	// #56
  40a2b8:	mov	w13, wzr
  40a2bc:	add	x14, sp, #0x9c
  40a2c0:	add	x15, sp, #0x60
  40a2c4:	stur	x0, [x29, #-16]
  40a2c8:	stur	w1, [x29, #-20]
  40a2cc:	mov	x0, x14
  40a2d0:	mov	w1, w13
  40a2d4:	str	w8, [sp, #68]
  40a2d8:	str	w9, [sp, #64]
  40a2dc:	str	w10, [sp, #60]
  40a2e0:	str	w11, [sp, #56]
  40a2e4:	str	x12, [sp, #48]
  40a2e8:	str	w13, [sp, #44]
  40a2ec:	str	x14, [sp, #32]
  40a2f0:	str	x15, [sp, #24]
  40a2f4:	bl	404ea0 <memset@plt>
  40a2f8:	ldr	w8, [sp, #68]
  40a2fc:	str	w8, [sp, #156]
  40a300:	ldr	w9, [sp, #64]
  40a304:	ldr	x12, [sp, #32]
  40a308:	strh	w9, [x12, #4]
  40a30c:	ldr	w10, [sp, #60]
  40a310:	strh	w10, [x12, #6]
  40a314:	ldur	w11, [x29, #-20]
  40a318:	str	w11, [sp, #176]
  40a31c:	ldr	w11, [sp, #56]
  40a320:	str	w11, [sp, #152]
  40a324:	ldr	x0, [sp, #24]
  40a328:	ldr	w13, [sp, #44]
  40a32c:	mov	w1, w13
  40a330:	ldr	x2, [sp, #48]
  40a334:	bl	404ea0 <memset@plt>
  40a338:	str	wzr, [sp, #84]
  40a33c:	ldr	x0, [sp, #24]
  40a340:	ldr	w1, [sp, #44]
  40a344:	bl	40dc8c <rtnl_open@@Base>
  40a348:	cmp	w0, #0x0
  40a34c:	cset	w8, ge  // ge = tcont
  40a350:	tbnz	w8, #0, 40a35c <ll_index_to_name@@Base+0x1a4>
  40a354:	stur	wzr, [x29, #-4]
  40a358:	b	40a438 <ll_index_to_name@@Base+0x280>
  40a35c:	ldr	w3, [sp, #152]
  40a360:	add	x0, sp, #0x9c
  40a364:	mov	w1, #0x420                 	// #1056
  40a368:	mov	w2, #0x1d                  	// #29
  40a36c:	bl	4100cc <addattr32@@Base>
  40a370:	ldur	x8, [x29, #-16]
  40a374:	cbz	x8, 40a3cc <ll_index_to_name@@Base+0x214>
  40a378:	ldur	x0, [x29, #-16]
  40a37c:	bl	407814 <check_ifname@@Base>
  40a380:	cmp	w0, #0x0
  40a384:	cset	w8, ne  // ne = any
  40a388:	eor	w8, w8, #0x1
  40a38c:	mov	w9, #0x35                  	// #53
  40a390:	mov	w10, #0x3                   	// #3
  40a394:	tst	w8, #0x1
  40a398:	csel	w2, w10, w9, ne  // ne = any
  40a39c:	ldur	x3, [x29, #-16]
  40a3a0:	ldur	x0, [x29, #-16]
  40a3a4:	str	w2, [sp, #20]
  40a3a8:	str	x3, [sp, #8]
  40a3ac:	bl	404cc0 <strlen@plt>
  40a3b0:	add	x11, x0, #0x1
  40a3b4:	add	x0, sp, #0x9c
  40a3b8:	mov	w1, #0x420                 	// #1056
  40a3bc:	ldr	w2, [sp, #20]
  40a3c0:	ldr	x3, [sp, #8]
  40a3c4:	mov	w4, w11
  40a3c8:	bl	40ff1c <addattr_l@@Base>
  40a3cc:	add	x0, sp, #0x60
  40a3d0:	add	x1, sp, #0x9c
  40a3d4:	add	x2, sp, #0x58
  40a3d8:	bl	40f758 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  40a3dc:	cmp	w0, #0x0
  40a3e0:	cset	w8, ge  // ge = tcont
  40a3e4:	tbnz	w8, #0, 40a3ec <ll_index_to_name@@Base+0x234>
  40a3e8:	b	40a428 <ll_index_to_name@@Base+0x270>
  40a3ec:	ldr	x0, [sp, #88]
  40a3f0:	mov	x8, xzr
  40a3f4:	mov	x1, x8
  40a3f8:	bl	409e94 <ll_remember_index@@Base>
  40a3fc:	str	w0, [sp, #84]
  40a400:	ldr	w9, [sp, #84]
  40a404:	cbnz	w9, 40a420 <ll_index_to_name@@Base+0x268>
  40a408:	ldr	x8, [sp, #88]
  40a40c:	add	x8, x8, #0x10
  40a410:	str	x8, [sp, #72]
  40a414:	ldr	x8, [sp, #72]
  40a418:	ldr	w9, [x8, #4]
  40a41c:	str	w9, [sp, #84]
  40a420:	ldr	x0, [sp, #88]
  40a424:	bl	405020 <free@plt>
  40a428:	add	x0, sp, #0x60
  40a42c:	bl	40d9ac <rtnl_close@@Base>
  40a430:	ldr	w8, [sp, #84]
  40a434:	stur	w8, [x29, #-4]
  40a438:	ldur	w0, [x29, #-4]
  40a43c:	add	sp, sp, #0x4d0
  40a440:	ldr	x28, [sp, #16]
  40a444:	ldp	x29, x30, [sp], #32
  40a448:	ret

000000000040a44c <ll_index_to_type@@Base>:
  40a44c:	sub	sp, sp, #0x30
  40a450:	stp	x29, x30, [sp, #32]
  40a454:	add	x29, sp, #0x20
  40a458:	stur	w0, [x29, #-8]
  40a45c:	ldur	w8, [x29, #-8]
  40a460:	cbnz	w8, 40a470 <ll_index_to_type@@Base+0x24>
  40a464:	mov	w8, #0xffffffff            	// #-1
  40a468:	stur	w8, [x29, #-4]
  40a46c:	b	40a4a4 <ll_index_to_type@@Base+0x58>
  40a470:	ldur	w0, [x29, #-8]
  40a474:	bl	409fa4 <ll_remember_index@@Base+0x110>
  40a478:	str	x0, [sp, #16]
  40a47c:	ldr	x8, [sp, #16]
  40a480:	cbz	x8, 40a494 <ll_index_to_type@@Base+0x48>
  40a484:	ldr	x8, [sp, #16]
  40a488:	ldrh	w9, [x8, #40]
  40a48c:	str	w9, [sp, #12]
  40a490:	b	40a49c <ll_index_to_type@@Base+0x50>
  40a494:	mov	w8, #0xffffffff            	// #-1
  40a498:	str	w8, [sp, #12]
  40a49c:	ldr	w8, [sp, #12]
  40a4a0:	stur	w8, [x29, #-4]
  40a4a4:	ldur	w0, [x29, #-4]
  40a4a8:	ldp	x29, x30, [sp, #32]
  40a4ac:	add	sp, sp, #0x30
  40a4b0:	ret

000000000040a4b4 <ll_index_to_flags@@Base>:
  40a4b4:	sub	sp, sp, #0x30
  40a4b8:	stp	x29, x30, [sp, #32]
  40a4bc:	add	x29, sp, #0x20
  40a4c0:	stur	w0, [x29, #-8]
  40a4c4:	ldur	w8, [x29, #-8]
  40a4c8:	cbnz	w8, 40a4d4 <ll_index_to_flags@@Base+0x20>
  40a4cc:	stur	wzr, [x29, #-4]
  40a4d0:	b	40a508 <ll_index_to_flags@@Base+0x54>
  40a4d4:	ldur	w0, [x29, #-8]
  40a4d8:	bl	409fa4 <ll_remember_index@@Base+0x110>
  40a4dc:	str	x0, [sp, #16]
  40a4e0:	ldr	x8, [sp, #16]
  40a4e4:	cbz	x8, 40a4f8 <ll_index_to_flags@@Base+0x44>
  40a4e8:	ldr	x8, [sp, #16]
  40a4ec:	ldr	w9, [x8, #32]
  40a4f0:	str	w9, [sp, #12]
  40a4f4:	b	40a500 <ll_index_to_flags@@Base+0x4c>
  40a4f8:	mov	w8, #0xffffffff            	// #-1
  40a4fc:	str	w8, [sp, #12]
  40a500:	ldr	w8, [sp, #12]
  40a504:	stur	w8, [x29, #-4]
  40a508:	ldur	w0, [x29, #-4]
  40a50c:	ldp	x29, x30, [sp, #32]
  40a510:	add	sp, sp, #0x30
  40a514:	ret

000000000040a518 <ll_name_to_index@@Base>:
  40a518:	sub	sp, sp, #0x30
  40a51c:	stp	x29, x30, [sp, #32]
  40a520:	add	x29, sp, #0x20
  40a524:	str	x0, [sp, #16]
  40a528:	ldr	x8, [sp, #16]
  40a52c:	cbnz	x8, 40a538 <ll_name_to_index@@Base+0x20>
  40a530:	stur	wzr, [x29, #-4]
  40a534:	b	40a5a0 <ll_name_to_index@@Base+0x88>
  40a538:	ldr	x0, [sp, #16]
  40a53c:	bl	40a5b0 <ll_name_to_index@@Base+0x98>
  40a540:	str	x0, [sp, #8]
  40a544:	ldr	x8, [sp, #8]
  40a548:	cbz	x8, 40a55c <ll_name_to_index@@Base+0x44>
  40a54c:	ldr	x8, [sp, #8]
  40a550:	ldr	w9, [x8, #36]
  40a554:	stur	w9, [x29, #-4]
  40a558:	b	40a5a0 <ll_name_to_index@@Base+0x88>
  40a55c:	ldr	x0, [sp, #16]
  40a560:	mov	w8, wzr
  40a564:	mov	w1, w8
  40a568:	bl	40a290 <ll_index_to_name@@Base+0xd8>
  40a56c:	str	w0, [sp, #4]
  40a570:	ldr	w8, [sp, #4]
  40a574:	cbnz	w8, 40a584 <ll_name_to_index@@Base+0x6c>
  40a578:	ldr	x0, [sp, #16]
  40a57c:	bl	405120 <if_nametoindex@plt>
  40a580:	str	w0, [sp, #4]
  40a584:	ldr	w8, [sp, #4]
  40a588:	cbnz	w8, 40a598 <ll_name_to_index@@Base+0x80>
  40a58c:	ldr	x0, [sp, #16]
  40a590:	bl	40a66c <ll_name_to_index@@Base+0x154>
  40a594:	str	w0, [sp, #4]
  40a598:	ldr	w8, [sp, #4]
  40a59c:	stur	w8, [x29, #-4]
  40a5a0:	ldur	w0, [x29, #-4]
  40a5a4:	ldp	x29, x30, [sp, #32]
  40a5a8:	add	sp, sp, #0x30
  40a5ac:	ret
  40a5b0:	sub	sp, sp, #0x50
  40a5b4:	stp	x29, x30, [sp, #64]
  40a5b8:	add	x29, sp, #0x40
  40a5bc:	adrp	x8, 425000 <stderr@@GLIBC_2.17+0x1cd8>
  40a5c0:	add	x8, x8, #0xd70
  40a5c4:	stur	x0, [x29, #-16]
  40a5c8:	ldur	x0, [x29, #-16]
  40a5cc:	str	x8, [sp]
  40a5d0:	bl	409e44 <namehash@@Base>
  40a5d4:	and	w9, w0, #0x3ff
  40a5d8:	stur	w9, [x29, #-28]
  40a5dc:	ldur	w9, [x29, #-28]
  40a5e0:	mov	w8, w9
  40a5e4:	mov	x10, #0x8                   	// #8
  40a5e8:	mul	x8, x10, x8
  40a5ec:	ldr	x10, [sp]
  40a5f0:	add	x8, x10, x8
  40a5f4:	ldr	x8, [x8]
  40a5f8:	stur	x8, [x29, #-24]
  40a5fc:	ldur	x8, [x29, #-24]
  40a600:	cbz	x8, 40a654 <ll_name_to_index@@Base+0x13c>
  40a604:	ldur	x8, [x29, #-24]
  40a608:	str	x8, [sp, #16]
  40a60c:	ldr	x8, [sp, #16]
  40a610:	mov	x9, #0xfffffffffffffff0    	// #-16
  40a614:	add	x8, x8, x9
  40a618:	str	x8, [sp, #8]
  40a61c:	ldr	x8, [sp, #8]
  40a620:	str	x8, [sp, #24]
  40a624:	ldr	x8, [sp, #24]
  40a628:	add	x0, x8, #0x40
  40a62c:	ldur	x1, [x29, #-16]
  40a630:	bl	404fb0 <strcmp@plt>
  40a634:	cbnz	w0, 40a644 <ll_name_to_index@@Base+0x12c>
  40a638:	ldr	x8, [sp, #24]
  40a63c:	stur	x8, [x29, #-8]
  40a640:	b	40a65c <ll_name_to_index@@Base+0x144>
  40a644:	ldur	x8, [x29, #-24]
  40a648:	ldr	x8, [x8]
  40a64c:	stur	x8, [x29, #-24]
  40a650:	b	40a5fc <ll_name_to_index@@Base+0xe4>
  40a654:	mov	x8, xzr
  40a658:	stur	x8, [x29, #-8]
  40a65c:	ldur	x0, [x29, #-8]
  40a660:	ldp	x29, x30, [sp, #64]
  40a664:	add	sp, sp, #0x50
  40a668:	ret
  40a66c:	sub	sp, sp, #0x30
  40a670:	stp	x29, x30, [sp, #32]
  40a674:	add	x29, sp, #0x20
  40a678:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40a67c:	add	x1, x1, #0xcd7
  40a680:	add	x2, sp, #0xc
  40a684:	str	x0, [sp, #16]
  40a688:	ldr	x0, [sp, #16]
  40a68c:	bl	405150 <__isoc99_sscanf@plt>
  40a690:	cmp	w0, #0x1
  40a694:	b.eq	40a6a0 <ll_name_to_index@@Base+0x188>  // b.none
  40a698:	stur	wzr, [x29, #-4]
  40a69c:	b	40a6a8 <ll_name_to_index@@Base+0x190>
  40a6a0:	ldr	w8, [sp, #12]
  40a6a4:	stur	w8, [x29, #-4]
  40a6a8:	ldur	w0, [x29, #-4]
  40a6ac:	ldp	x29, x30, [sp, #32]
  40a6b0:	add	sp, sp, #0x30
  40a6b4:	ret

000000000040a6b8 <ll_drop_by_index@@Base>:
  40a6b8:	sub	sp, sp, #0x20
  40a6bc:	stp	x29, x30, [sp, #16]
  40a6c0:	add	x29, sp, #0x10
  40a6c4:	stur	w0, [x29, #-4]
  40a6c8:	ldur	w0, [x29, #-4]
  40a6cc:	bl	409fa4 <ll_remember_index@@Base+0x110>
  40a6d0:	str	x0, [sp]
  40a6d4:	ldr	x8, [sp]
  40a6d8:	cbnz	x8, 40a6e0 <ll_drop_by_index@@Base+0x28>
  40a6dc:	b	40a6fc <ll_drop_by_index@@Base+0x44>
  40a6e0:	ldr	x0, [sp]
  40a6e4:	bl	40a708 <ll_drop_by_index@@Base+0x50>
  40a6e8:	ldr	x8, [sp]
  40a6ec:	add	x0, x8, #0x10
  40a6f0:	bl	40a708 <ll_drop_by_index@@Base+0x50>
  40a6f4:	ldr	x0, [sp]
  40a6f8:	bl	405020 <free@plt>
  40a6fc:	ldp	x29, x30, [sp, #16]
  40a700:	add	sp, sp, #0x20
  40a704:	ret
  40a708:	sub	sp, sp, #0x20
  40a70c:	str	x0, [sp, #24]
  40a710:	ldr	x8, [sp, #24]
  40a714:	ldr	x8, [x8]
  40a718:	str	x8, [sp, #16]
  40a71c:	ldr	x8, [sp, #24]
  40a720:	ldr	x8, [x8, #8]
  40a724:	str	x8, [sp, #8]
  40a728:	ldr	x8, [sp, #16]
  40a72c:	ldr	x9, [sp, #8]
  40a730:	str	x8, [x9]
  40a734:	ldr	x8, [sp, #16]
  40a738:	cbz	x8, 40a748 <ll_drop_by_index@@Base+0x90>
  40a73c:	ldr	x8, [sp, #8]
  40a740:	ldr	x9, [sp, #16]
  40a744:	str	x8, [x9, #8]
  40a748:	add	sp, sp, #0x20
  40a74c:	ret

000000000040a750 <ll_init_map@@Base>:
  40a750:	sub	sp, sp, #0x20
  40a754:	stp	x29, x30, [sp, #16]
  40a758:	add	x29, sp, #0x10
  40a75c:	adrp	x8, 423000 <memcpy@GLIBC_2.17>
  40a760:	add	x8, x8, #0xd68
  40a764:	str	x0, [sp, #8]
  40a768:	ldr	w9, [x8]
  40a76c:	cbz	w9, 40a774 <ll_init_map@@Base+0x24>
  40a770:	b	40a804 <ll_init_map@@Base+0xb4>
  40a774:	ldr	x0, [sp, #8]
  40a778:	mov	w8, wzr
  40a77c:	mov	w1, w8
  40a780:	bl	40e488 <rtnl_linkdump_req@@Base>
  40a784:	cmp	w0, #0x0
  40a788:	cset	w8, ge  // ge = tcont
  40a78c:	tbnz	w8, #0, 40a7a4 <ll_init_map@@Base+0x54>
  40a790:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40a794:	add	x0, x0, #0x618
  40a798:	bl	404cf0 <perror@plt>
  40a79c:	mov	w0, #0x1                   	// #1
  40a7a0:	bl	404ce0 <exit@plt>
  40a7a4:	ldr	x0, [sp, #8]
  40a7a8:	adrp	x1, 422000 <_IO_stdin_used@@Base+0x10b00>
  40a7ac:	ldr	x1, [x1, #4008]
  40a7b0:	mov	x8, xzr
  40a7b4:	mov	x2, x8
  40a7b8:	mov	w9, wzr
  40a7bc:	mov	w3, w9
  40a7c0:	bl	40ed04 <rtnl_dump_filter_nc@@Base>
  40a7c4:	cmp	w0, #0x0
  40a7c8:	cset	w9, ge  // ge = tcont
  40a7cc:	tbnz	w9, #0, 40a7f4 <ll_init_map@@Base+0xa4>
  40a7d0:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40a7d4:	ldr	x8, [x8, #3992]
  40a7d8:	ldr	x0, [x8]
  40a7dc:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40a7e0:	add	x1, x1, #0x631
  40a7e4:	bl	4051e0 <fprintf@plt>
  40a7e8:	mov	w9, #0x1                   	// #1
  40a7ec:	mov	w0, w9
  40a7f0:	bl	404ce0 <exit@plt>
  40a7f4:	mov	w8, #0x1                   	// #1
  40a7f8:	adrp	x9, 423000 <memcpy@GLIBC_2.17>
  40a7fc:	add	x9, x9, #0xd68
  40a800:	str	w8, [x9]
  40a804:	ldp	x29, x30, [sp, #16]
  40a808:	add	sp, sp, #0x20
  40a80c:	ret
  40a810:	sub	sp, sp, #0x60
  40a814:	stp	x29, x30, [sp, #80]
  40a818:	add	x29, sp, #0x50
  40a81c:	stur	x0, [x29, #-8]
  40a820:	ldur	x8, [x29, #-8]
  40a824:	ldr	x8, [x8, #48]
  40a828:	stur	x8, [x29, #-32]
  40a82c:	ldur	x8, [x29, #-32]
  40a830:	mov	x9, #0xffffffffffffffd0    	// #-48
  40a834:	add	x8, x8, x9
  40a838:	str	x8, [sp, #40]
  40a83c:	ldr	x8, [sp, #40]
  40a840:	stur	x8, [x29, #-16]
  40a844:	ldur	x8, [x29, #-16]
  40a848:	ldr	x8, [x8, #48]
  40a84c:	str	x8, [sp, #32]
  40a850:	ldr	x8, [sp, #32]
  40a854:	add	x8, x8, x9
  40a858:	str	x8, [sp, #24]
  40a85c:	ldr	x8, [sp, #24]
  40a860:	stur	x8, [x29, #-24]
  40a864:	ldur	x8, [x29, #-16]
  40a868:	add	x8, x8, #0x30
  40a86c:	ldur	x9, [x29, #-8]
  40a870:	add	x9, x9, #0x30
  40a874:	cmp	x8, x9
  40a878:	b.eq	40a8bc <ll_init_map@@Base+0x16c>  // b.none
  40a87c:	ldur	x0, [x29, #-16]
  40a880:	mov	w8, wzr
  40a884:	and	w1, w8, #0x1
  40a888:	bl	40a8c8 <ll_init_map@@Base+0x178>
  40a88c:	ldur	x8, [x29, #-24]
  40a890:	stur	x8, [x29, #-16]
  40a894:	ldur	x8, [x29, #-24]
  40a898:	ldr	x8, [x8, #48]
  40a89c:	str	x8, [sp, #16]
  40a8a0:	ldr	x8, [sp, #16]
  40a8a4:	mov	x9, #0xffffffffffffffd0    	// #-48
  40a8a8:	add	x8, x8, x9
  40a8ac:	str	x8, [sp, #8]
  40a8b0:	ldr	x8, [sp, #8]
  40a8b4:	stur	x8, [x29, #-24]
  40a8b8:	b	40a864 <ll_init_map@@Base+0x114>
  40a8bc:	ldp	x29, x30, [sp, #80]
  40a8c0:	add	sp, sp, #0x60
  40a8c4:	ret
  40a8c8:	sub	sp, sp, #0x20
  40a8cc:	stp	x29, x30, [sp, #16]
  40a8d0:	add	x29, sp, #0x10
  40a8d4:	str	x0, [sp, #8]
  40a8d8:	and	w8, w1, #0x1
  40a8dc:	strb	w8, [sp, #7]
  40a8e0:	ldr	x9, [sp, #8]
  40a8e4:	add	x0, x9, #0x10
  40a8e8:	bl	40a708 <ll_drop_by_index@@Base+0x50>
  40a8ec:	ldrb	w8, [sp, #7]
  40a8f0:	tbnz	w8, #0, 40a8f8 <ll_init_map@@Base+0x1a8>
  40a8f4:	b	40a904 <ll_init_map@@Base+0x1b4>
  40a8f8:	ldr	x0, [sp, #8]
  40a8fc:	bl	40a708 <ll_drop_by_index@@Base+0x50>
  40a900:	b	40a910 <ll_init_map@@Base+0x1c0>
  40a904:	ldr	x8, [sp, #8]
  40a908:	add	x0, x8, #0x30
  40a90c:	bl	40a924 <ll_init_map@@Base+0x1d4>
  40a910:	ldr	x0, [sp, #8]
  40a914:	bl	405020 <free@plt>
  40a918:	ldp	x29, x30, [sp, #16]
  40a91c:	add	sp, sp, #0x20
  40a920:	ret
  40a924:	sub	sp, sp, #0x20
  40a928:	stp	x29, x30, [sp, #16]
  40a92c:	add	x29, sp, #0x10
  40a930:	str	x0, [sp, #8]
  40a934:	ldr	x8, [sp, #8]
  40a938:	ldr	x0, [x8, #8]
  40a93c:	ldr	x8, [sp, #8]
  40a940:	ldr	x1, [x8]
  40a944:	bl	40a954 <ll_init_map@@Base+0x204>
  40a948:	ldp	x29, x30, [sp, #16]
  40a94c:	add	sp, sp, #0x20
  40a950:	ret
  40a954:	sub	sp, sp, #0x10
  40a958:	str	x0, [sp, #8]
  40a95c:	str	x1, [sp]
  40a960:	ldr	x8, [sp, #8]
  40a964:	ldr	x9, [sp]
  40a968:	str	x8, [x9, #8]
  40a96c:	ldr	x8, [sp]
  40a970:	ldr	x9, [sp, #8]
  40a974:	str	x8, [x9]
  40a978:	add	sp, sp, #0x10
  40a97c:	ret
  40a980:	sub	sp, sp, #0x30
  40a984:	stp	x29, x30, [sp, #32]
  40a988:	add	x29, sp, #0x20
  40a98c:	stur	x0, [x29, #-8]
  40a990:	str	x1, [sp, #16]
  40a994:	str	x2, [sp, #8]
  40a998:	ldr	x8, [sp, #16]
  40a99c:	ldr	w9, [x8, #8]
  40a9a0:	ldur	x8, [x29, #-8]
  40a9a4:	str	w9, [x8, #32]
  40a9a8:	ldur	x8, [x29, #-8]
  40a9ac:	add	x0, x8, #0x40
  40a9b0:	ldr	x1, [sp, #8]
  40a9b4:	bl	404fb0 <strcmp@plt>
  40a9b8:	cbnz	w0, 40a9c0 <ll_init_map@@Base+0x270>
  40a9bc:	b	40aa04 <ll_init_map@@Base+0x2b4>
  40a9c0:	ldur	x8, [x29, #-8]
  40a9c4:	add	x0, x8, #0x10
  40a9c8:	bl	40a708 <ll_drop_by_index@@Base+0x50>
  40a9cc:	ldr	x0, [sp, #8]
  40a9d0:	bl	409e44 <namehash@@Base>
  40a9d4:	and	w9, w0, #0x3ff
  40a9d8:	str	w9, [sp, #4]
  40a9dc:	ldur	x8, [x29, #-8]
  40a9e0:	add	x0, x8, #0x10
  40a9e4:	ldr	w9, [sp, #4]
  40a9e8:	mov	w8, w9
  40a9ec:	mov	x10, #0x8                   	// #8
  40a9f0:	mul	x8, x10, x8
  40a9f4:	adrp	x10, 425000 <stderr@@GLIBC_2.17+0x1cd8>
  40a9f8:	add	x10, x10, #0xd70
  40a9fc:	add	x1, x10, x8
  40aa00:	bl	40abf4 <ll_init_map@@Base+0x4a4>
  40aa04:	ldp	x29, x30, [sp, #32]
  40aa08:	add	sp, sp, #0x30
  40aa0c:	ret
  40aa10:	sub	sp, sp, #0x10
  40aa14:	str	x0, [sp, #8]
  40aa18:	ldr	x8, [sp, #8]
  40aa1c:	add	x0, x8, #0x4
  40aa20:	add	sp, sp, #0x10
  40aa24:	ret
  40aa28:	sub	sp, sp, #0x80
  40aa2c:	stp	x29, x30, [sp, #112]
  40aa30:	add	x29, sp, #0x70
  40aa34:	stur	x0, [x29, #-8]
  40aa38:	stur	x1, [x29, #-16]
  40aa3c:	stur	x2, [x29, #-24]
  40aa40:	ldur	x8, [x29, #-24]
  40aa44:	ldr	x8, [x8, #416]
  40aa48:	stur	x8, [x29, #-40]
  40aa4c:	ldur	x8, [x29, #-40]
  40aa50:	cbnz	x8, 40aa60 <ll_init_map@@Base+0x310>
  40aa54:	ldur	x0, [x29, #-8]
  40aa58:	bl	40a810 <ll_init_map@@Base+0xc0>
  40aa5c:	b	40abe8 <ll_init_map@@Base+0x498>
  40aa60:	ldur	x8, [x29, #-8]
  40aa64:	ldr	x8, [x8, #48]
  40aa68:	str	x8, [sp, #48]
  40aa6c:	ldr	x8, [sp, #48]
  40aa70:	mov	x9, #0xffffffffffffffd0    	// #-48
  40aa74:	add	x8, x8, x9
  40aa78:	str	x8, [sp, #40]
  40aa7c:	ldr	x8, [sp, #40]
  40aa80:	stur	x8, [x29, #-48]
  40aa84:	ldur	x8, [x29, #-40]
  40aa88:	ldrh	w10, [x8]
  40aa8c:	mov	w0, w10
  40aa90:	sxtw	x8, w0
  40aa94:	subs	x8, x8, #0x4
  40aa98:	stur	w8, [x29, #-52]
  40aa9c:	ldur	x9, [x29, #-40]
  40aaa0:	add	x9, x9, #0x4
  40aaa4:	stur	x9, [x29, #-32]
  40aaa8:	ldur	w8, [x29, #-52]
  40aaac:	mov	w9, #0x0                   	// #0
  40aab0:	cmp	w8, #0x4
  40aab4:	str	w9, [sp, #4]
  40aab8:	b.lt	40aaf0 <ll_init_map@@Base+0x3a0>  // b.tstop
  40aabc:	ldur	x8, [x29, #-32]
  40aac0:	ldrh	w9, [x8]
  40aac4:	mov	w8, w9
  40aac8:	mov	w9, #0x0                   	// #0
  40aacc:	cmp	x8, #0x4
  40aad0:	str	w9, [sp, #4]
  40aad4:	b.cc	40aaf0 <ll_init_map@@Base+0x3a0>  // b.lo, b.ul, b.last
  40aad8:	ldur	x8, [x29, #-32]
  40aadc:	ldrh	w9, [x8]
  40aae0:	ldur	w10, [x29, #-52]
  40aae4:	cmp	w9, w10
  40aae8:	cset	w9, le
  40aaec:	str	w9, [sp, #4]
  40aaf0:	ldr	w8, [sp, #4]
  40aaf4:	tbnz	w8, #0, 40aafc <ll_init_map@@Base+0x3ac>
  40aaf8:	b	40aba4 <ll_init_map@@Base+0x454>
  40aafc:	ldur	x8, [x29, #-32]
  40ab00:	ldrh	w9, [x8, #2]
  40ab04:	cmp	w9, #0x35
  40ab08:	b.eq	40ab10 <ll_init_map@@Base+0x3c0>  // b.none
  40ab0c:	b	40ab58 <ll_init_map@@Base+0x408>
  40ab10:	ldur	x8, [x29, #-48]
  40ab14:	cbz	x8, 40ab30 <ll_init_map@@Base+0x3e0>
  40ab18:	ldur	x0, [x29, #-32]
  40ab1c:	bl	40aa10 <ll_init_map@@Base+0x2c0>
  40ab20:	ldur	x8, [x29, #-48]
  40ab24:	add	x1, x8, #0x40
  40ab28:	bl	404fb0 <strcmp@plt>
  40ab2c:	cbz	w0, 40ab34 <ll_init_map@@Base+0x3e4>
  40ab30:	b	40abd0 <ll_init_map@@Base+0x480>
  40ab34:	ldur	x8, [x29, #-48]
  40ab38:	ldr	x8, [x8, #48]
  40ab3c:	str	x8, [sp, #32]
  40ab40:	ldr	x8, [sp, #32]
  40ab44:	mov	x9, #0xffffffffffffffd0    	// #-48
  40ab48:	add	x8, x8, x9
  40ab4c:	str	x8, [sp, #24]
  40ab50:	ldr	x8, [sp, #24]
  40ab54:	stur	x8, [x29, #-48]
  40ab58:	ldur	x8, [x29, #-32]
  40ab5c:	ldrh	w9, [x8]
  40ab60:	add	w9, w9, #0x4
  40ab64:	subs	w9, w9, #0x1
  40ab68:	and	w9, w9, #0xfffffffc
  40ab6c:	ldur	w10, [x29, #-52]
  40ab70:	subs	w9, w10, w9
  40ab74:	stur	w9, [x29, #-52]
  40ab78:	ldur	x8, [x29, #-32]
  40ab7c:	ldur	x11, [x29, #-32]
  40ab80:	ldrh	w9, [x11]
  40ab84:	add	w9, w9, #0x4
  40ab88:	subs	w9, w9, #0x1
  40ab8c:	and	w9, w9, #0xfffffffc
  40ab90:	mov	w11, w9
  40ab94:	ubfx	x11, x11, #0, #32
  40ab98:	add	x8, x8, x11
  40ab9c:	stur	x8, [x29, #-32]
  40aba0:	b	40aaa8 <ll_init_map@@Base+0x358>
  40aba4:	ldur	x8, [x29, #-48]
  40aba8:	ldr	x8, [x8, #48]
  40abac:	str	x8, [sp, #16]
  40abb0:	ldr	x8, [sp, #16]
  40abb4:	mov	x9, #0xffffffffffffffd0    	// #-48
  40abb8:	add	x8, x8, x9
  40abbc:	str	x8, [sp, #8]
  40abc0:	ldr	x8, [sp, #8]
  40abc4:	cbz	x8, 40abcc <ll_init_map@@Base+0x47c>
  40abc8:	b	40abd0 <ll_init_map@@Base+0x480>
  40abcc:	b	40abe8 <ll_init_map@@Base+0x498>
  40abd0:	ldur	x0, [x29, #-8]
  40abd4:	bl	40a810 <ll_init_map@@Base+0xc0>
  40abd8:	ldur	x0, [x29, #-8]
  40abdc:	ldur	x1, [x29, #-16]
  40abe0:	ldur	x2, [x29, #-24]
  40abe4:	bl	40ac4c <ll_init_map@@Base+0x4fc>
  40abe8:	ldp	x29, x30, [sp, #112]
  40abec:	add	sp, sp, #0x80
  40abf0:	ret
  40abf4:	sub	sp, sp, #0x20
  40abf8:	str	x0, [sp, #24]
  40abfc:	str	x1, [sp, #16]
  40ac00:	ldr	x8, [sp, #16]
  40ac04:	ldr	x8, [x8]
  40ac08:	str	x8, [sp, #8]
  40ac0c:	ldr	x8, [sp, #8]
  40ac10:	ldr	x9, [sp, #24]
  40ac14:	str	x8, [x9]
  40ac18:	ldr	x8, [sp, #8]
  40ac1c:	cbz	x8, 40ac2c <ll_init_map@@Base+0x4dc>
  40ac20:	ldr	x8, [sp, #24]
  40ac24:	ldr	x9, [sp, #8]
  40ac28:	str	x8, [x9, #8]
  40ac2c:	ldr	x8, [sp, #24]
  40ac30:	ldr	x9, [sp, #16]
  40ac34:	str	x8, [x9]
  40ac38:	ldr	x8, [sp, #16]
  40ac3c:	ldr	x9, [sp, #24]
  40ac40:	str	x8, [x9, #8]
  40ac44:	add	sp, sp, #0x20
  40ac48:	ret
  40ac4c:	sub	sp, sp, #0x50
  40ac50:	stp	x29, x30, [sp, #64]
  40ac54:	add	x29, sp, #0x40
  40ac58:	stur	x0, [x29, #-8]
  40ac5c:	stur	x1, [x29, #-16]
  40ac60:	stur	x2, [x29, #-24]
  40ac64:	ldur	x8, [x29, #-24]
  40ac68:	ldr	x8, [x8, #416]
  40ac6c:	str	x8, [sp, #24]
  40ac70:	ldr	x8, [sp, #24]
  40ac74:	cbnz	x8, 40ac7c <ll_init_map@@Base+0x52c>
  40ac78:	b	40ad80 <ll_init_map@@Base+0x630>
  40ac7c:	ldr	x8, [sp, #24]
  40ac80:	ldrh	w9, [x8]
  40ac84:	mov	w0, w9
  40ac88:	sxtw	x8, w0
  40ac8c:	subs	x8, x8, #0x4
  40ac90:	str	w8, [sp, #20]
  40ac94:	ldr	x10, [sp, #24]
  40ac98:	add	x10, x10, #0x4
  40ac9c:	str	x10, [sp, #32]
  40aca0:	ldr	w8, [sp, #20]
  40aca4:	mov	w9, #0x0                   	// #0
  40aca8:	cmp	w8, #0x4
  40acac:	str	w9, [sp, #16]
  40acb0:	b.lt	40ace8 <ll_init_map@@Base+0x598>  // b.tstop
  40acb4:	ldr	x8, [sp, #32]
  40acb8:	ldrh	w9, [x8]
  40acbc:	mov	w8, w9
  40acc0:	mov	w9, #0x0                   	// #0
  40acc4:	cmp	x8, #0x4
  40acc8:	str	w9, [sp, #16]
  40accc:	b.cc	40ace8 <ll_init_map@@Base+0x598>  // b.lo, b.ul, b.last
  40acd0:	ldr	x8, [sp, #32]
  40acd4:	ldrh	w9, [x8]
  40acd8:	ldr	w10, [sp, #20]
  40acdc:	cmp	w9, w10
  40ace0:	cset	w9, le
  40ace4:	str	w9, [sp, #16]
  40ace8:	ldr	w8, [sp, #16]
  40acec:	tbnz	w8, #0, 40acf4 <ll_init_map@@Base+0x5a4>
  40acf0:	b	40ad80 <ll_init_map@@Base+0x630>
  40acf4:	ldr	x8, [sp, #32]
  40acf8:	ldrh	w9, [x8, #2]
  40acfc:	cmp	w9, #0x35
  40ad00:	b.eq	40ad08 <ll_init_map@@Base+0x5b8>  // b.none
  40ad04:	b	40ad34 <ll_init_map@@Base+0x5e4>
  40ad08:	ldur	x0, [x29, #-16]
  40ad0c:	ldr	x8, [sp, #32]
  40ad10:	str	x0, [sp, #8]
  40ad14:	mov	x0, x8
  40ad18:	bl	40aa10 <ll_init_map@@Base+0x2c0>
  40ad1c:	ldur	x2, [x29, #-8]
  40ad20:	ldr	x8, [sp, #8]
  40ad24:	str	x0, [sp]
  40ad28:	mov	x0, x8
  40ad2c:	ldr	x1, [sp]
  40ad30:	bl	40ad8c <ll_init_map@@Base+0x63c>
  40ad34:	ldr	x8, [sp, #32]
  40ad38:	ldrh	w9, [x8]
  40ad3c:	add	w9, w9, #0x4
  40ad40:	subs	w9, w9, #0x1
  40ad44:	and	w9, w9, #0xfffffffc
  40ad48:	ldr	w10, [sp, #20]
  40ad4c:	subs	w9, w10, w9
  40ad50:	str	w9, [sp, #20]
  40ad54:	ldr	x8, [sp, #32]
  40ad58:	ldr	x11, [sp, #32]
  40ad5c:	ldrh	w9, [x11]
  40ad60:	add	w9, w9, #0x4
  40ad64:	subs	w9, w9, #0x1
  40ad68:	and	w9, w9, #0xfffffffc
  40ad6c:	mov	w11, w9
  40ad70:	ubfx	x11, x11, #0, #32
  40ad74:	add	x8, x8, x11
  40ad78:	str	x8, [sp, #32]
  40ad7c:	b	40aca0 <ll_init_map@@Base+0x550>
  40ad80:	ldp	x29, x30, [sp, #64]
  40ad84:	add	sp, sp, #0x50
  40ad88:	ret
  40ad8c:	sub	sp, sp, #0x40
  40ad90:	stp	x29, x30, [sp, #48]
  40ad94:	add	x29, sp, #0x30
  40ad98:	stur	x0, [x29, #-16]
  40ad9c:	str	x1, [sp, #24]
  40ada0:	str	x2, [sp, #16]
  40ada4:	ldr	x0, [sp, #24]
  40ada8:	bl	404cc0 <strlen@plt>
  40adac:	add	x8, x0, #0x40
  40adb0:	add	x0, x8, #0x1
  40adb4:	bl	404e40 <malloc@plt>
  40adb8:	str	x0, [sp, #8]
  40adbc:	ldr	x8, [sp, #8]
  40adc0:	cbnz	x8, 40add0 <ll_init_map@@Base+0x680>
  40adc4:	mov	x8, xzr
  40adc8:	stur	x8, [x29, #-8]
  40adcc:	b	40aeb0 <ll_init_map@@Base+0x760>
  40add0:	ldur	x8, [x29, #-16]
  40add4:	ldr	w9, [x8, #4]
  40add8:	ldr	x8, [sp, #8]
  40addc:	str	w9, [x8, #36]
  40ade0:	ldr	x8, [sp, #8]
  40ade4:	add	x0, x8, #0x40
  40ade8:	ldr	x1, [sp, #24]
  40adec:	bl	4050b0 <strcpy@plt>
  40adf0:	ldur	x8, [x29, #-16]
  40adf4:	ldrh	w9, [x8, #2]
  40adf8:	ldr	x8, [sp, #8]
  40adfc:	strh	w9, [x8, #40]
  40ae00:	ldur	x8, [x29, #-16]
  40ae04:	ldr	w9, [x8, #8]
  40ae08:	ldr	x8, [sp, #8]
  40ae0c:	str	w9, [x8, #32]
  40ae10:	ldr	x8, [sp, #16]
  40ae14:	cbz	x8, 40ae30 <ll_init_map@@Base+0x6e0>
  40ae18:	ldr	x8, [sp, #8]
  40ae1c:	add	x0, x8, #0x30
  40ae20:	ldr	x8, [sp, #16]
  40ae24:	add	x1, x8, #0x30
  40ae28:	bl	40aec0 <ll_init_map@@Base+0x770>
  40ae2c:	b	40ae70 <ll_init_map@@Base+0x720>
  40ae30:	ldur	x8, [x29, #-16]
  40ae34:	ldr	w9, [x8, #4]
  40ae38:	and	w9, w9, #0x3ff
  40ae3c:	str	w9, [sp, #4]
  40ae40:	ldr	x0, [sp, #8]
  40ae44:	ldr	w9, [sp, #4]
  40ae48:	mov	w8, w9
  40ae4c:	mov	x10, #0x8                   	// #8
  40ae50:	mul	x8, x10, x8
  40ae54:	adrp	x10, 423000 <memcpy@GLIBC_2.17>
  40ae58:	add	x10, x10, #0xd70
  40ae5c:	add	x1, x10, x8
  40ae60:	bl	40abf4 <ll_init_map@@Base+0x4a4>
  40ae64:	ldr	x8, [sp, #8]
  40ae68:	add	x0, x8, #0x30
  40ae6c:	bl	40aef4 <ll_init_map@@Base+0x7a4>
  40ae70:	ldr	x0, [sp, #24]
  40ae74:	bl	409e44 <namehash@@Base>
  40ae78:	and	w8, w0, #0x3ff
  40ae7c:	str	w8, [sp, #4]
  40ae80:	ldr	x9, [sp, #8]
  40ae84:	add	x0, x9, #0x10
  40ae88:	ldr	w8, [sp, #4]
  40ae8c:	mov	w9, w8
  40ae90:	mov	x10, #0x8                   	// #8
  40ae94:	mul	x9, x10, x9
  40ae98:	adrp	x10, 425000 <stderr@@GLIBC_2.17+0x1cd8>
  40ae9c:	add	x10, x10, #0xd70
  40aea0:	add	x1, x10, x9
  40aea4:	bl	40abf4 <ll_init_map@@Base+0x4a4>
  40aea8:	ldr	x9, [sp, #8]
  40aeac:	stur	x9, [x29, #-8]
  40aeb0:	ldur	x0, [x29, #-8]
  40aeb4:	ldp	x29, x30, [sp, #48]
  40aeb8:	add	sp, sp, #0x40
  40aebc:	ret
  40aec0:	sub	sp, sp, #0x20
  40aec4:	stp	x29, x30, [sp, #16]
  40aec8:	add	x29, sp, #0x10
  40aecc:	str	x0, [sp, #8]
  40aed0:	str	x1, [sp]
  40aed4:	ldr	x0, [sp, #8]
  40aed8:	ldr	x8, [sp]
  40aedc:	ldr	x1, [x8, #8]
  40aee0:	ldr	x2, [sp]
  40aee4:	bl	40af1c <ll_init_map@@Base+0x7cc>
  40aee8:	ldp	x29, x30, [sp, #16]
  40aeec:	add	sp, sp, #0x20
  40aef0:	ret
  40aef4:	sub	sp, sp, #0x10
  40aef8:	str	x0, [sp, #8]
  40aefc:	ldr	x8, [sp, #8]
  40af00:	ldr	x9, [sp, #8]
  40af04:	str	x8, [x9]
  40af08:	ldr	x8, [sp, #8]
  40af0c:	ldr	x9, [sp, #8]
  40af10:	str	x8, [x9, #8]
  40af14:	add	sp, sp, #0x10
  40af18:	ret
  40af1c:	sub	sp, sp, #0x20
  40af20:	str	x0, [sp, #24]
  40af24:	str	x1, [sp, #16]
  40af28:	str	x2, [sp, #8]
  40af2c:	ldr	x8, [sp, #24]
  40af30:	ldr	x9, [sp, #8]
  40af34:	str	x8, [x9, #8]
  40af38:	ldr	x8, [sp, #8]
  40af3c:	ldr	x9, [sp, #24]
  40af40:	str	x8, [x9]
  40af44:	ldr	x8, [sp, #16]
  40af48:	ldr	x9, [sp, #24]
  40af4c:	str	x8, [x9, #8]
  40af50:	ldr	x8, [sp, #24]
  40af54:	ldr	x9, [sp, #16]
  40af58:	str	x8, [x9]
  40af5c:	add	sp, sp, #0x20
  40af60:	ret

000000000040af64 <ll_addr_n2a@@Base>:
  40af64:	sub	sp, sp, #0x40
  40af68:	stp	x29, x30, [sp, #48]
  40af6c:	add	x29, sp, #0x30
  40af70:	stur	x0, [x29, #-16]
  40af74:	stur	w1, [x29, #-20]
  40af78:	str	w2, [sp, #24]
  40af7c:	str	x3, [sp, #16]
  40af80:	str	w4, [sp, #12]
  40af84:	ldur	w8, [x29, #-20]
  40af88:	cmp	w8, #0x4
  40af8c:	b.ne	40afd0 <ll_addr_n2a@@Base+0x6c>  // b.any
  40af90:	ldr	w8, [sp, #24]
  40af94:	cmp	w8, #0x300
  40af98:	b.eq	40afb4 <ll_addr_n2a@@Base+0x50>  // b.none
  40af9c:	ldr	w8, [sp, #24]
  40afa0:	cmp	w8, #0x308
  40afa4:	b.eq	40afb4 <ll_addr_n2a@@Base+0x50>  // b.none
  40afa8:	ldr	w8, [sp, #24]
  40afac:	cmp	w8, #0x30a
  40afb0:	b.ne	40afd0 <ll_addr_n2a@@Base+0x6c>  // b.any
  40afb4:	ldur	x1, [x29, #-16]
  40afb8:	ldr	x2, [sp, #16]
  40afbc:	ldr	w3, [sp, #12]
  40afc0:	mov	w0, #0x2                   	// #2
  40afc4:	bl	405200 <inet_ntop@plt>
  40afc8:	stur	x0, [x29, #-8]
  40afcc:	b	40b0d0 <ll_addr_n2a@@Base+0x16c>
  40afd0:	ldur	w8, [x29, #-20]
  40afd4:	cmp	w8, #0x10
  40afd8:	b.ne	40b010 <ll_addr_n2a@@Base+0xac>  // b.any
  40afdc:	ldr	w8, [sp, #24]
  40afe0:	cmp	w8, #0x301
  40afe4:	b.eq	40aff4 <ll_addr_n2a@@Base+0x90>  // b.none
  40afe8:	ldr	w8, [sp, #24]
  40afec:	cmp	w8, #0x337
  40aff0:	b.ne	40b010 <ll_addr_n2a@@Base+0xac>  // b.any
  40aff4:	ldur	x1, [x29, #-16]
  40aff8:	ldr	x2, [sp, #16]
  40affc:	ldr	w3, [sp, #12]
  40b000:	mov	w0, #0xa                   	// #10
  40b004:	bl	405200 <inet_ntop@plt>
  40b008:	stur	x0, [x29, #-8]
  40b00c:	b	40b0d0 <ll_addr_n2a@@Base+0x16c>
  40b010:	ldr	x0, [sp, #16]
  40b014:	ldrsw	x1, [sp, #12]
  40b018:	ldur	x8, [x29, #-16]
  40b01c:	ldrb	w3, [x8]
  40b020:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40b024:	add	x2, x2, #0xcdf
  40b028:	bl	404dd0 <snprintf@plt>
  40b02c:	mov	w9, #0x1                   	// #1
  40b030:	str	w9, [sp, #8]
  40b034:	mov	w9, #0x2                   	// #2
  40b038:	str	w9, [sp, #4]
  40b03c:	ldr	w8, [sp, #8]
  40b040:	ldur	w9, [x29, #-20]
  40b044:	mov	w10, #0x0                   	// #0
  40b048:	cmp	w8, w9
  40b04c:	str	w10, [sp]
  40b050:	b.ge	40b068 <ll_addr_n2a@@Base+0x104>  // b.tcont
  40b054:	ldr	w8, [sp, #4]
  40b058:	ldr	w9, [sp, #12]
  40b05c:	cmp	w8, w9
  40b060:	cset	w8, lt  // lt = tstop
  40b064:	str	w8, [sp]
  40b068:	ldr	w8, [sp]
  40b06c:	tbnz	w8, #0, 40b074 <ll_addr_n2a@@Base+0x110>
  40b070:	b	40b0c8 <ll_addr_n2a@@Base+0x164>
  40b074:	ldr	x8, [sp, #16]
  40b078:	ldrsw	x9, [sp, #4]
  40b07c:	add	x0, x8, x9
  40b080:	ldr	w10, [sp, #12]
  40b084:	ldr	w11, [sp, #4]
  40b088:	subs	w10, w10, w11
  40b08c:	mov	w1, w10
  40b090:	sxtw	x1, w1
  40b094:	ldur	x8, [x29, #-16]
  40b098:	ldrsw	x9, [sp, #8]
  40b09c:	ldrb	w3, [x8, x9]
  40b0a0:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40b0a4:	add	x2, x2, #0xcde
  40b0a8:	bl	404dd0 <snprintf@plt>
  40b0ac:	ldr	w8, [sp, #8]
  40b0b0:	add	w8, w8, #0x1
  40b0b4:	str	w8, [sp, #8]
  40b0b8:	ldr	w8, [sp, #4]
  40b0bc:	add	w8, w8, #0x3
  40b0c0:	str	w8, [sp, #4]
  40b0c4:	b	40b03c <ll_addr_n2a@@Base+0xd8>
  40b0c8:	ldr	x8, [sp, #16]
  40b0cc:	stur	x8, [x29, #-8]
  40b0d0:	ldur	x0, [x29, #-8]
  40b0d4:	ldp	x29, x30, [sp, #48]
  40b0d8:	add	sp, sp, #0x40
  40b0dc:	ret

000000000040b0e0 <ll_addr_a2n@@Base>:
  40b0e0:	sub	sp, sp, #0x170
  40b0e4:	stp	x29, x30, [sp, #336]
  40b0e8:	str	x28, [sp, #352]
  40b0ec:	add	x29, sp, #0x150
  40b0f0:	mov	w8, #0x2e                  	// #46
  40b0f4:	adrp	x9, 422000 <_IO_stdin_used@@Base+0x10b00>
  40b0f8:	ldr	x9, [x9, #3992]
  40b0fc:	adrp	x10, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40b100:	add	x10, x10, #0xce4
  40b104:	stur	x0, [x29, #-16]
  40b108:	stur	w1, [x29, #-20]
  40b10c:	stur	x2, [x29, #-32]
  40b110:	ldur	x0, [x29, #-32]
  40b114:	mov	w1, w8
  40b118:	str	x9, [sp, #16]
  40b11c:	str	x10, [sp, #8]
  40b120:	bl	405060 <strchr@plt>
  40b124:	cbz	x0, 40b18c <ll_addr_a2n@@Base+0xac>
  40b128:	ldur	x1, [x29, #-32]
  40b12c:	add	x0, sp, #0x28
  40b130:	mov	w2, #0x2                   	// #2
  40b134:	bl	406b28 <get_addr_1@@Base>
  40b138:	cbz	w0, 40b15c <ll_addr_a2n@@Base+0x7c>
  40b13c:	ldr	x8, [sp, #16]
  40b140:	ldr	x0, [x8]
  40b144:	ldur	x2, [x29, #-32]
  40b148:	ldr	x1, [sp, #8]
  40b14c:	bl	4051e0 <fprintf@plt>
  40b150:	mov	w9, #0xffffffff            	// #-1
  40b154:	stur	w9, [x29, #-4]
  40b158:	b	40b28c <ll_addr_a2n@@Base+0x1ac>
  40b15c:	ldur	w8, [x29, #-20]
  40b160:	cmp	w8, #0x4
  40b164:	b.ge	40b174 <ll_addr_a2n@@Base+0x94>  // b.tcont
  40b168:	mov	w8, #0xffffffff            	// #-1
  40b16c:	stur	w8, [x29, #-4]
  40b170:	b	40b28c <ll_addr_a2n@@Base+0x1ac>
  40b174:	ldur	x8, [x29, #-16]
  40b178:	ldr	w9, [sp, #48]
  40b17c:	str	w9, [x8]
  40b180:	mov	w9, #0x4                   	// #4
  40b184:	stur	w9, [x29, #-4]
  40b188:	b	40b28c <ll_addr_a2n@@Base+0x1ac>
  40b18c:	str	wzr, [sp, #36]
  40b190:	ldr	w8, [sp, #36]
  40b194:	ldur	w9, [x29, #-20]
  40b198:	cmp	w8, w9
  40b19c:	b.ge	40b280 <ll_addr_a2n@@Base+0x1a0>  // b.tcont
  40b1a0:	ldur	x0, [x29, #-32]
  40b1a4:	mov	w1, #0x3a                  	// #58
  40b1a8:	bl	405060 <strchr@plt>
  40b1ac:	str	x0, [sp, #24]
  40b1b0:	ldr	x8, [sp, #24]
  40b1b4:	cbz	x8, 40b1d0 <ll_addr_a2n@@Base+0xf0>
  40b1b8:	ldr	x8, [sp, #24]
  40b1bc:	mov	w9, #0x0                   	// #0
  40b1c0:	strb	w9, [x8]
  40b1c4:	ldr	x8, [sp, #24]
  40b1c8:	add	x8, x8, #0x1
  40b1cc:	str	x8, [sp, #24]
  40b1d0:	ldur	x0, [x29, #-32]
  40b1d4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40b1d8:	add	x1, x1, #0xcfd
  40b1dc:	add	x2, sp, #0x20
  40b1e0:	bl	405150 <__isoc99_sscanf@plt>
  40b1e4:	cmp	w0, #0x1
  40b1e8:	b.eq	40b20c <ll_addr_a2n@@Base+0x12c>  // b.none
  40b1ec:	ldr	x8, [sp, #16]
  40b1f0:	ldr	x0, [x8]
  40b1f4:	ldur	x2, [x29, #-32]
  40b1f8:	ldr	x1, [sp, #8]
  40b1fc:	bl	4051e0 <fprintf@plt>
  40b200:	mov	w9, #0xffffffff            	// #-1
  40b204:	stur	w9, [x29, #-4]
  40b208:	b	40b28c <ll_addr_a2n@@Base+0x1ac>
  40b20c:	ldr	w8, [sp, #32]
  40b210:	cmp	w8, #0x0
  40b214:	cset	w8, lt  // lt = tstop
  40b218:	tbnz	w8, #0, 40b228 <ll_addr_a2n@@Base+0x148>
  40b21c:	ldr	w8, [sp, #32]
  40b220:	cmp	w8, #0xff
  40b224:	b.le	40b248 <ll_addr_a2n@@Base+0x168>
  40b228:	ldr	x8, [sp, #16]
  40b22c:	ldr	x0, [x8]
  40b230:	ldur	x2, [x29, #-32]
  40b234:	ldr	x1, [sp, #8]
  40b238:	bl	4051e0 <fprintf@plt>
  40b23c:	mov	w9, #0xffffffff            	// #-1
  40b240:	stur	w9, [x29, #-4]
  40b244:	b	40b28c <ll_addr_a2n@@Base+0x1ac>
  40b248:	ldr	w8, [sp, #32]
  40b24c:	ldur	x9, [x29, #-16]
  40b250:	ldrsw	x10, [sp, #36]
  40b254:	add	x9, x9, x10
  40b258:	strb	w8, [x9]
  40b25c:	ldr	x9, [sp, #24]
  40b260:	cbnz	x9, 40b268 <ll_addr_a2n@@Base+0x188>
  40b264:	b	40b280 <ll_addr_a2n@@Base+0x1a0>
  40b268:	ldr	x8, [sp, #24]
  40b26c:	stur	x8, [x29, #-32]
  40b270:	ldr	w8, [sp, #36]
  40b274:	add	w8, w8, #0x1
  40b278:	str	w8, [sp, #36]
  40b27c:	b	40b190 <ll_addr_a2n@@Base+0xb0>
  40b280:	ldr	w8, [sp, #36]
  40b284:	add	w8, w8, #0x1
  40b288:	stur	w8, [x29, #-4]
  40b28c:	ldur	w0, [x29, #-4]
  40b290:	ldr	x28, [sp, #352]
  40b294:	ldp	x29, x30, [sp, #336]
  40b298:	add	sp, sp, #0x170
  40b29c:	ret

000000000040b2a0 <new_json_obj@@Base>:
  40b2a0:	sub	sp, sp, #0x20
  40b2a4:	stp	x29, x30, [sp, #16]
  40b2a8:	add	x29, sp, #0x10
  40b2ac:	stur	w0, [x29, #-4]
  40b2b0:	ldur	w0, [x29, #-4]
  40b2b4:	mov	w8, #0x1                   	// #1
  40b2b8:	and	w1, w8, #0x1
  40b2bc:	bl	40b2cc <new_json_obj@@Base+0x2c>
  40b2c0:	ldp	x29, x30, [sp, #16]
  40b2c4:	add	sp, sp, #0x20
  40b2c8:	ret
  40b2cc:	sub	sp, sp, #0x20
  40b2d0:	stp	x29, x30, [sp, #16]
  40b2d4:	add	x29, sp, #0x10
  40b2d8:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b2dc:	add	x8, x8, #0xd70
  40b2e0:	mov	w9, #0x1                   	// #1
  40b2e4:	stur	w0, [x29, #-4]
  40b2e8:	and	w9, w1, w9
  40b2ec:	sturb	w9, [x29, #-5]
  40b2f0:	ldur	w9, [x29, #-4]
  40b2f4:	str	x8, [sp]
  40b2f8:	cbz	w9, 40b36c <new_json_obj@@Base+0xcc>
  40b2fc:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40b300:	ldr	x8, [x8, #4016]
  40b304:	ldr	x0, [x8]
  40b308:	bl	40cbf0 <jsonw_new@@Base>
  40b30c:	ldr	x8, [sp]
  40b310:	str	x0, [x8]
  40b314:	ldr	x9, [x8]
  40b318:	cbnz	x9, 40b330 <new_json_obj@@Base+0x90>
  40b31c:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40b320:	add	x0, x0, #0xd1f
  40b324:	bl	404cf0 <perror@plt>
  40b328:	mov	w0, #0x1                   	// #1
  40b32c:	bl	404ce0 <exit@plt>
  40b330:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40b334:	ldr	x8, [x8, #4056]
  40b338:	ldr	w9, [x8]
  40b33c:	cbz	w9, 40b354 <new_json_obj@@Base+0xb4>
  40b340:	ldr	x8, [sp]
  40b344:	ldr	x0, [x8]
  40b348:	mov	w9, #0x1                   	// #1
  40b34c:	and	w1, w9, #0x1
  40b350:	bl	40cce4 <jsonw_pretty@@Base>
  40b354:	ldurb	w8, [x29, #-5]
  40b358:	tbnz	w8, #0, 40b360 <new_json_obj@@Base+0xc0>
  40b35c:	b	40b36c <new_json_obj@@Base+0xcc>
  40b360:	ldr	x8, [sp]
  40b364:	ldr	x0, [x8]
  40b368:	bl	40d1e4 <jsonw_start_array@@Base>
  40b36c:	ldp	x29, x30, [sp, #16]
  40b370:	add	sp, sp, #0x20
  40b374:	ret

000000000040b378 <delete_json_obj@@Base>:
  40b378:	stp	x29, x30, [sp, #-16]!
  40b37c:	mov	x29, sp
  40b380:	mov	w8, #0x1                   	// #1
  40b384:	and	w0, w8, #0x1
  40b388:	bl	40b394 <delete_json_obj@@Base+0x1c>
  40b38c:	ldp	x29, x30, [sp], #16
  40b390:	ret
  40b394:	sub	sp, sp, #0x20
  40b398:	stp	x29, x30, [sp, #16]
  40b39c:	add	x29, sp, #0x10
  40b3a0:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b3a4:	add	x8, x8, #0xd70
  40b3a8:	and	w9, w0, #0x1
  40b3ac:	sturb	w9, [x29, #-1]
  40b3b0:	ldr	x10, [x8]
  40b3b4:	str	x8, [sp]
  40b3b8:	cbz	x10, 40b3dc <delete_json_obj@@Base+0x64>
  40b3bc:	ldurb	w8, [x29, #-1]
  40b3c0:	tbnz	w8, #0, 40b3c8 <delete_json_obj@@Base+0x50>
  40b3c4:	b	40b3d4 <delete_json_obj@@Base+0x5c>
  40b3c8:	ldr	x8, [sp]
  40b3cc:	ldr	x0, [x8]
  40b3d0:	bl	40d22c <jsonw_end_array@@Base>
  40b3d4:	ldr	x0, [sp]
  40b3d8:	bl	40cc50 <jsonw_destroy@@Base>
  40b3dc:	ldp	x29, x30, [sp, #16]
  40b3e0:	add	sp, sp, #0x20
  40b3e4:	ret

000000000040b3e8 <new_json_obj_plain@@Base>:
  40b3e8:	sub	sp, sp, #0x20
  40b3ec:	stp	x29, x30, [sp, #16]
  40b3f0:	add	x29, sp, #0x10
  40b3f4:	stur	w0, [x29, #-4]
  40b3f8:	ldur	w0, [x29, #-4]
  40b3fc:	mov	w8, wzr
  40b400:	and	w1, w8, #0x1
  40b404:	bl	40b2cc <new_json_obj@@Base+0x2c>
  40b408:	ldp	x29, x30, [sp, #16]
  40b40c:	add	sp, sp, #0x20
  40b410:	ret

000000000040b414 <delete_json_obj_plain@@Base>:
  40b414:	stp	x29, x30, [sp, #-16]!
  40b418:	mov	x29, sp
  40b41c:	mov	w8, wzr
  40b420:	and	w0, w8, #0x1
  40b424:	bl	40b394 <delete_json_obj@@Base+0x1c>
  40b428:	ldp	x29, x30, [sp], #16
  40b42c:	ret

000000000040b430 <is_json_context@@Base>:
  40b430:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b434:	add	x8, x8, #0xd70
  40b438:	ldr	x8, [x8]
  40b43c:	cmp	x8, #0x0
  40b440:	cset	w9, ne  // ne = any
  40b444:	and	w0, w9, #0x1
  40b448:	ret

000000000040b44c <get_json_writer@@Base>:
  40b44c:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b450:	add	x8, x8, #0xd70
  40b454:	ldr	x0, [x8]
  40b458:	ret

000000000040b45c <open_json_object@@Base>:
  40b45c:	sub	sp, sp, #0x20
  40b460:	stp	x29, x30, [sp, #16]
  40b464:	add	x29, sp, #0x10
  40b468:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b46c:	add	x8, x8, #0xd70
  40b470:	str	x0, [sp, #8]
  40b474:	ldr	x9, [x8]
  40b478:	str	x8, [sp]
  40b47c:	cbz	x9, 40b4a4 <open_json_object@@Base+0x48>
  40b480:	ldr	x8, [sp, #8]
  40b484:	cbz	x8, 40b498 <open_json_object@@Base+0x3c>
  40b488:	ldr	x8, [sp]
  40b48c:	ldr	x0, [x8]
  40b490:	ldr	x1, [sp, #8]
  40b494:	bl	40cd10 <jsonw_name@@Base>
  40b498:	ldr	x8, [sp]
  40b49c:	ldr	x0, [x8]
  40b4a0:	bl	40d0a0 <jsonw_start_object@@Base>
  40b4a4:	ldp	x29, x30, [sp, #16]
  40b4a8:	add	sp, sp, #0x20
  40b4ac:	ret

000000000040b4b0 <close_json_object@@Base>:
  40b4b0:	stp	x29, x30, [sp, #-16]!
  40b4b4:	mov	x29, sp
  40b4b8:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b4bc:	add	x8, x8, #0xd70
  40b4c0:	ldr	x8, [x8]
  40b4c4:	cbz	x8, 40b4d8 <close_json_object@@Base+0x28>
  40b4c8:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b4cc:	add	x8, x8, #0xd70
  40b4d0:	ldr	x0, [x8]
  40b4d4:	bl	40d124 <jsonw_end_object@@Base>
  40b4d8:	ldp	x29, x30, [sp], #16
  40b4dc:	ret

000000000040b4e0 <open_json_array@@Base>:
  40b4e0:	sub	sp, sp, #0x30
  40b4e4:	stp	x29, x30, [sp, #32]
  40b4e8:	add	x29, sp, #0x20
  40b4ec:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b4f0:	add	x8, x8, #0xd70
  40b4f4:	stur	w0, [x29, #-4]
  40b4f8:	str	x1, [sp, #16]
  40b4fc:	ldur	w9, [x29, #-4]
  40b500:	and	w9, w9, #0x2
  40b504:	str	x8, [sp, #8]
  40b508:	cbnz	w9, 40b518 <open_json_array@@Base+0x38>
  40b50c:	ldur	w8, [x29, #-4]
  40b510:	and	w8, w8, #0x4
  40b514:	cbz	w8, 40b54c <open_json_array@@Base+0x6c>
  40b518:	ldr	x8, [sp, #8]
  40b51c:	ldr	x9, [x8]
  40b520:	cbz	x9, 40b54c <open_json_array@@Base+0x6c>
  40b524:	ldr	x8, [sp, #16]
  40b528:	cbz	x8, 40b53c <open_json_array@@Base+0x5c>
  40b52c:	ldr	x8, [sp, #8]
  40b530:	ldr	x0, [x8]
  40b534:	ldr	x1, [sp, #16]
  40b538:	bl	40cd10 <jsonw_name@@Base>
  40b53c:	ldr	x8, [sp, #8]
  40b540:	ldr	x0, [x8]
  40b544:	bl	40d1e4 <jsonw_start_array@@Base>
  40b548:	b	40b580 <open_json_array@@Base+0xa0>
  40b54c:	ldr	x8, [sp, #8]
  40b550:	ldr	x9, [x8]
  40b554:	cbnz	x9, 40b580 <open_json_array@@Base+0xa0>
  40b558:	ldur	w8, [x29, #-4]
  40b55c:	and	w8, w8, #0x1
  40b560:	cbnz	w8, 40b570 <open_json_array@@Base+0x90>
  40b564:	ldur	w8, [x29, #-4]
  40b568:	and	w8, w8, #0x4
  40b56c:	cbz	w8, 40b580 <open_json_array@@Base+0xa0>
  40b570:	ldr	x1, [sp, #16]
  40b574:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40b578:	add	x0, x0, #0x914
  40b57c:	bl	405190 <printf@plt>
  40b580:	ldp	x29, x30, [sp, #32]
  40b584:	add	sp, sp, #0x30
  40b588:	ret

000000000040b58c <close_json_array@@Base>:
  40b58c:	sub	sp, sp, #0x30
  40b590:	stp	x29, x30, [sp, #32]
  40b594:	add	x29, sp, #0x20
  40b598:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b59c:	add	x8, x8, #0xd70
  40b5a0:	stur	w0, [x29, #-4]
  40b5a4:	str	x1, [sp, #16]
  40b5a8:	ldur	w9, [x29, #-4]
  40b5ac:	and	w9, w9, #0x2
  40b5b0:	str	x8, [sp, #8]
  40b5b4:	cbnz	w9, 40b5c4 <close_json_array@@Base+0x38>
  40b5b8:	ldur	w8, [x29, #-4]
  40b5bc:	and	w8, w8, #0x4
  40b5c0:	cbz	w8, 40b5e0 <close_json_array@@Base+0x54>
  40b5c4:	ldr	x8, [sp, #8]
  40b5c8:	ldr	x9, [x8]
  40b5cc:	cbz	x9, 40b5e0 <close_json_array@@Base+0x54>
  40b5d0:	ldr	x8, [sp, #8]
  40b5d4:	ldr	x0, [x8]
  40b5d8:	bl	40d22c <jsonw_end_array@@Base>
  40b5dc:	b	40b614 <close_json_array@@Base+0x88>
  40b5e0:	ldr	x8, [sp, #8]
  40b5e4:	ldr	x9, [x8]
  40b5e8:	cbnz	x9, 40b614 <close_json_array@@Base+0x88>
  40b5ec:	ldur	w8, [x29, #-4]
  40b5f0:	and	w8, w8, #0x1
  40b5f4:	cbnz	w8, 40b604 <close_json_array@@Base+0x78>
  40b5f8:	ldur	w8, [x29, #-4]
  40b5fc:	and	w8, w8, #0x4
  40b600:	cbz	w8, 40b614 <close_json_array@@Base+0x88>
  40b604:	ldr	x1, [sp, #16]
  40b608:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40b60c:	add	x0, x0, #0x914
  40b610:	bl	405190 <printf@plt>
  40b614:	ldp	x29, x30, [sp, #32]
  40b618:	add	sp, sp, #0x30
  40b61c:	ret

000000000040b620 <print_color_int@@Base>:
  40b620:	sub	sp, sp, #0x40
  40b624:	stp	x29, x30, [sp, #48]
  40b628:	add	x29, sp, #0x30
  40b62c:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b630:	add	x8, x8, #0xd70
  40b634:	stur	w0, [x29, #-4]
  40b638:	stur	w1, [x29, #-8]
  40b63c:	stur	x2, [x29, #-16]
  40b640:	str	x3, [sp, #24]
  40b644:	str	w4, [sp, #20]
  40b648:	ldur	w9, [x29, #-4]
  40b64c:	and	w9, w9, #0x2
  40b650:	str	x8, [sp, #8]
  40b654:	cbnz	w9, 40b664 <print_color_int@@Base+0x44>
  40b658:	ldur	w8, [x29, #-4]
  40b65c:	and	w8, w8, #0x4
  40b660:	cbz	w8, 40b6a4 <print_color_int@@Base+0x84>
  40b664:	ldr	x8, [sp, #8]
  40b668:	ldr	x9, [x8]
  40b66c:	cbz	x9, 40b6a4 <print_color_int@@Base+0x84>
  40b670:	ldur	x8, [x29, #-16]
  40b674:	cbnz	x8, 40b68c <print_color_int@@Base+0x6c>
  40b678:	ldr	x8, [sp, #8]
  40b67c:	ldr	x0, [x8]
  40b680:	ldr	w1, [sp, #20]
  40b684:	bl	40d4fc <jsonw_int@@Base>
  40b688:	b	40b6a0 <print_color_int@@Base+0x80>
  40b68c:	ldr	x8, [sp, #8]
  40b690:	ldr	x0, [x8]
  40b694:	ldur	x1, [x29, #-16]
  40b698:	ldr	w2, [sp, #20]
  40b69c:	bl	40d7d0 <jsonw_int_field@@Base>
  40b6a0:	b	40b6e4 <print_color_int@@Base+0xc4>
  40b6a4:	ldr	x8, [sp, #8]
  40b6a8:	ldr	x9, [x8]
  40b6ac:	cbnz	x9, 40b6e4 <print_color_int@@Base+0xc4>
  40b6b0:	ldur	w8, [x29, #-4]
  40b6b4:	and	w8, w8, #0x1
  40b6b8:	cbnz	w8, 40b6c8 <print_color_int@@Base+0xa8>
  40b6bc:	ldur	w8, [x29, #-4]
  40b6c0:	and	w8, w8, #0x4
  40b6c4:	cbz	w8, 40b6e4 <print_color_int@@Base+0xc4>
  40b6c8:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40b6cc:	ldr	x8, [x8, #4016]
  40b6d0:	ldr	x0, [x8]
  40b6d4:	ldur	w1, [x29, #-8]
  40b6d8:	ldr	x2, [sp, #24]
  40b6dc:	ldr	w3, [sp, #20]
  40b6e0:	bl	40c5b0 <color_fprintf@@Base>
  40b6e4:	ldp	x29, x30, [sp, #48]
  40b6e8:	add	sp, sp, #0x40
  40b6ec:	ret

000000000040b6f0 <print_color_s64@@Base>:
  40b6f0:	sub	sp, sp, #0x40
  40b6f4:	stp	x29, x30, [sp, #48]
  40b6f8:	add	x29, sp, #0x30
  40b6fc:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b700:	add	x8, x8, #0xd70
  40b704:	stur	w0, [x29, #-4]
  40b708:	stur	w1, [x29, #-8]
  40b70c:	stur	x2, [x29, #-16]
  40b710:	str	x3, [sp, #24]
  40b714:	str	x4, [sp, #16]
  40b718:	ldur	w9, [x29, #-4]
  40b71c:	and	w9, w9, #0x2
  40b720:	str	x8, [sp, #8]
  40b724:	cbnz	w9, 40b734 <print_color_s64@@Base+0x44>
  40b728:	ldur	w8, [x29, #-4]
  40b72c:	and	w8, w8, #0x4
  40b730:	cbz	w8, 40b774 <print_color_s64@@Base+0x84>
  40b734:	ldr	x8, [sp, #8]
  40b738:	ldr	x9, [x8]
  40b73c:	cbz	x9, 40b774 <print_color_s64@@Base+0x84>
  40b740:	ldur	x8, [x29, #-16]
  40b744:	cbnz	x8, 40b75c <print_color_s64@@Base+0x6c>
  40b748:	ldr	x8, [sp, #8]
  40b74c:	ldr	x0, [x8]
  40b750:	ldr	x1, [sp, #16]
  40b754:	bl	40d534 <jsonw_s64@@Base>
  40b758:	b	40b770 <print_color_s64@@Base+0x80>
  40b75c:	ldr	x8, [sp, #8]
  40b760:	ldr	x0, [x8]
  40b764:	ldur	x1, [x29, #-16]
  40b768:	ldr	x2, [sp, #16]
  40b76c:	bl	40d80c <jsonw_s64_field@@Base>
  40b770:	b	40b7b4 <print_color_s64@@Base+0xc4>
  40b774:	ldr	x8, [sp, #8]
  40b778:	ldr	x9, [x8]
  40b77c:	cbnz	x9, 40b7b4 <print_color_s64@@Base+0xc4>
  40b780:	ldur	w8, [x29, #-4]
  40b784:	and	w8, w8, #0x1
  40b788:	cbnz	w8, 40b798 <print_color_s64@@Base+0xa8>
  40b78c:	ldur	w8, [x29, #-4]
  40b790:	and	w8, w8, #0x4
  40b794:	cbz	w8, 40b7b4 <print_color_s64@@Base+0xc4>
  40b798:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40b79c:	ldr	x8, [x8, #4016]
  40b7a0:	ldr	x0, [x8]
  40b7a4:	ldur	w1, [x29, #-8]
  40b7a8:	ldr	x2, [sp, #24]
  40b7ac:	ldr	x3, [sp, #16]
  40b7b0:	bl	40c5b0 <color_fprintf@@Base>
  40b7b4:	ldp	x29, x30, [sp, #48]
  40b7b8:	add	sp, sp, #0x40
  40b7bc:	ret

000000000040b7c0 <print_color_hhu@@Base>:
  40b7c0:	sub	sp, sp, #0x40
  40b7c4:	stp	x29, x30, [sp, #48]
  40b7c8:	add	x29, sp, #0x30
  40b7cc:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b7d0:	add	x8, x8, #0xd70
  40b7d4:	stur	w0, [x29, #-4]
  40b7d8:	stur	w1, [x29, #-8]
  40b7dc:	stur	x2, [x29, #-16]
  40b7e0:	str	x3, [sp, #24]
  40b7e4:	strb	w4, [sp, #23]
  40b7e8:	ldur	w9, [x29, #-4]
  40b7ec:	and	w9, w9, #0x2
  40b7f0:	str	x8, [sp, #8]
  40b7f4:	cbnz	w9, 40b804 <print_color_hhu@@Base+0x44>
  40b7f8:	ldur	w8, [x29, #-4]
  40b7fc:	and	w8, w8, #0x4
  40b800:	cbz	w8, 40b844 <print_color_hhu@@Base+0x84>
  40b804:	ldr	x8, [sp, #8]
  40b808:	ldr	x9, [x8]
  40b80c:	cbz	x9, 40b844 <print_color_hhu@@Base+0x84>
  40b810:	ldur	x8, [x29, #-16]
  40b814:	cbnz	x8, 40b82c <print_color_hhu@@Base+0x6c>
  40b818:	ldr	x8, [sp, #8]
  40b81c:	ldr	x0, [x8]
  40b820:	ldrb	w1, [sp, #23]
  40b824:	bl	40d374 <jsonw_hhu@@Base>
  40b828:	b	40b840 <print_color_hhu@@Base+0x80>
  40b82c:	ldr	x8, [sp, #8]
  40b830:	ldr	x0, [x8]
  40b834:	ldur	x1, [x29, #-16]
  40b838:	ldrb	w2, [sp, #23]
  40b83c:	bl	40d6e0 <jsonw_hhu_field@@Base>
  40b840:	b	40b884 <print_color_hhu@@Base+0xc4>
  40b844:	ldr	x8, [sp, #8]
  40b848:	ldr	x9, [x8]
  40b84c:	cbnz	x9, 40b884 <print_color_hhu@@Base+0xc4>
  40b850:	ldur	w8, [x29, #-4]
  40b854:	and	w8, w8, #0x1
  40b858:	cbnz	w8, 40b868 <print_color_hhu@@Base+0xa8>
  40b85c:	ldur	w8, [x29, #-4]
  40b860:	and	w8, w8, #0x4
  40b864:	cbz	w8, 40b884 <print_color_hhu@@Base+0xc4>
  40b868:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40b86c:	ldr	x8, [x8, #4016]
  40b870:	ldr	x0, [x8]
  40b874:	ldur	w1, [x29, #-8]
  40b878:	ldr	x2, [sp, #24]
  40b87c:	ldrb	w3, [sp, #23]
  40b880:	bl	40c5b0 <color_fprintf@@Base>
  40b884:	ldp	x29, x30, [sp, #48]
  40b888:	add	sp, sp, #0x40
  40b88c:	ret

000000000040b890 <print_color_hu@@Base>:
  40b890:	sub	sp, sp, #0x40
  40b894:	stp	x29, x30, [sp, #48]
  40b898:	add	x29, sp, #0x30
  40b89c:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b8a0:	add	x8, x8, #0xd70
  40b8a4:	stur	w0, [x29, #-4]
  40b8a8:	stur	w1, [x29, #-8]
  40b8ac:	stur	x2, [x29, #-16]
  40b8b0:	str	x3, [sp, #24]
  40b8b4:	strh	w4, [sp, #22]
  40b8b8:	ldur	w9, [x29, #-4]
  40b8bc:	and	w9, w9, #0x2
  40b8c0:	str	x8, [sp, #8]
  40b8c4:	cbnz	w9, 40b8d4 <print_color_hu@@Base+0x44>
  40b8c8:	ldur	w8, [x29, #-4]
  40b8cc:	and	w8, w8, #0x4
  40b8d0:	cbz	w8, 40b914 <print_color_hu@@Base+0x84>
  40b8d4:	ldr	x8, [sp, #8]
  40b8d8:	ldr	x9, [x8]
  40b8dc:	cbz	x9, 40b914 <print_color_hu@@Base+0x84>
  40b8e0:	ldur	x8, [x29, #-16]
  40b8e4:	cbnz	x8, 40b8fc <print_color_hu@@Base+0x6c>
  40b8e8:	ldr	x8, [sp, #8]
  40b8ec:	ldr	x0, [x8]
  40b8f0:	ldrh	w1, [sp, #22]
  40b8f4:	bl	40d3ac <jsonw_hu@@Base>
  40b8f8:	b	40b910 <print_color_hu@@Base+0x80>
  40b8fc:	ldr	x8, [sp, #8]
  40b900:	ldr	x0, [x8]
  40b904:	ldur	x1, [x29, #-16]
  40b908:	ldrh	w2, [sp, #22]
  40b90c:	bl	40d71c <jsonw_hu_field@@Base>
  40b910:	b	40b954 <print_color_hu@@Base+0xc4>
  40b914:	ldr	x8, [sp, #8]
  40b918:	ldr	x9, [x8]
  40b91c:	cbnz	x9, 40b954 <print_color_hu@@Base+0xc4>
  40b920:	ldur	w8, [x29, #-4]
  40b924:	and	w8, w8, #0x1
  40b928:	cbnz	w8, 40b938 <print_color_hu@@Base+0xa8>
  40b92c:	ldur	w8, [x29, #-4]
  40b930:	and	w8, w8, #0x4
  40b934:	cbz	w8, 40b954 <print_color_hu@@Base+0xc4>
  40b938:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40b93c:	ldr	x8, [x8, #4016]
  40b940:	ldr	x0, [x8]
  40b944:	ldur	w1, [x29, #-8]
  40b948:	ldr	x2, [sp, #24]
  40b94c:	ldrh	w3, [sp, #22]
  40b950:	bl	40c5b0 <color_fprintf@@Base>
  40b954:	ldp	x29, x30, [sp, #48]
  40b958:	add	sp, sp, #0x40
  40b95c:	ret

000000000040b960 <print_color_uint@@Base>:
  40b960:	sub	sp, sp, #0x40
  40b964:	stp	x29, x30, [sp, #48]
  40b968:	add	x29, sp, #0x30
  40b96c:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40b970:	add	x8, x8, #0xd70
  40b974:	stur	w0, [x29, #-4]
  40b978:	stur	w1, [x29, #-8]
  40b97c:	stur	x2, [x29, #-16]
  40b980:	str	x3, [sp, #24]
  40b984:	str	w4, [sp, #20]
  40b988:	ldur	w9, [x29, #-4]
  40b98c:	and	w9, w9, #0x2
  40b990:	str	x8, [sp, #8]
  40b994:	cbnz	w9, 40b9a4 <print_color_uint@@Base+0x44>
  40b998:	ldur	w8, [x29, #-4]
  40b99c:	and	w8, w8, #0x4
  40b9a0:	cbz	w8, 40b9e4 <print_color_uint@@Base+0x84>
  40b9a4:	ldr	x8, [sp, #8]
  40b9a8:	ldr	x9, [x8]
  40b9ac:	cbz	x9, 40b9e4 <print_color_uint@@Base+0x84>
  40b9b0:	ldur	x8, [x29, #-16]
  40b9b4:	cbnz	x8, 40b9cc <print_color_uint@@Base+0x6c>
  40b9b8:	ldr	x8, [sp, #8]
  40b9bc:	ldr	x0, [x8]
  40b9c0:	ldr	w1, [sp, #20]
  40b9c4:	bl	40d3e4 <jsonw_uint@@Base>
  40b9c8:	b	40b9e0 <print_color_uint@@Base+0x80>
  40b9cc:	ldr	x8, [sp, #8]
  40b9d0:	ldr	x0, [x8]
  40b9d4:	ldur	x1, [x29, #-16]
  40b9d8:	ldr	w2, [sp, #20]
  40b9dc:	bl	40d62c <jsonw_uint_field@@Base>
  40b9e0:	b	40ba24 <print_color_uint@@Base+0xc4>
  40b9e4:	ldr	x8, [sp, #8]
  40b9e8:	ldr	x9, [x8]
  40b9ec:	cbnz	x9, 40ba24 <print_color_uint@@Base+0xc4>
  40b9f0:	ldur	w8, [x29, #-4]
  40b9f4:	and	w8, w8, #0x1
  40b9f8:	cbnz	w8, 40ba08 <print_color_uint@@Base+0xa8>
  40b9fc:	ldur	w8, [x29, #-4]
  40ba00:	and	w8, w8, #0x4
  40ba04:	cbz	w8, 40ba24 <print_color_uint@@Base+0xc4>
  40ba08:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40ba0c:	ldr	x8, [x8, #4016]
  40ba10:	ldr	x0, [x8]
  40ba14:	ldur	w1, [x29, #-8]
  40ba18:	ldr	x2, [sp, #24]
  40ba1c:	ldr	w3, [sp, #20]
  40ba20:	bl	40c5b0 <color_fprintf@@Base>
  40ba24:	ldp	x29, x30, [sp, #48]
  40ba28:	add	sp, sp, #0x40
  40ba2c:	ret

000000000040ba30 <print_color_u64@@Base>:
  40ba30:	sub	sp, sp, #0x40
  40ba34:	stp	x29, x30, [sp, #48]
  40ba38:	add	x29, sp, #0x30
  40ba3c:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40ba40:	add	x8, x8, #0xd70
  40ba44:	stur	w0, [x29, #-4]
  40ba48:	stur	w1, [x29, #-8]
  40ba4c:	stur	x2, [x29, #-16]
  40ba50:	str	x3, [sp, #24]
  40ba54:	str	x4, [sp, #16]
  40ba58:	ldur	w9, [x29, #-4]
  40ba5c:	and	w9, w9, #0x2
  40ba60:	str	x8, [sp, #8]
  40ba64:	cbnz	w9, 40ba74 <print_color_u64@@Base+0x44>
  40ba68:	ldur	w8, [x29, #-4]
  40ba6c:	and	w8, w8, #0x4
  40ba70:	cbz	w8, 40bab4 <print_color_u64@@Base+0x84>
  40ba74:	ldr	x8, [sp, #8]
  40ba78:	ldr	x9, [x8]
  40ba7c:	cbz	x9, 40bab4 <print_color_u64@@Base+0x84>
  40ba80:	ldur	x8, [x29, #-16]
  40ba84:	cbnz	x8, 40ba9c <print_color_u64@@Base+0x6c>
  40ba88:	ldr	x8, [sp, #8]
  40ba8c:	ldr	x0, [x8]
  40ba90:	ldr	x1, [sp, #16]
  40ba94:	bl	40d41c <jsonw_u64@@Base>
  40ba98:	b	40bab0 <print_color_u64@@Base+0x80>
  40ba9c:	ldr	x8, [sp, #8]
  40baa0:	ldr	x0, [x8]
  40baa4:	ldur	x1, [x29, #-16]
  40baa8:	ldr	x2, [sp, #16]
  40baac:	bl	40d668 <jsonw_u64_field@@Base>
  40bab0:	b	40baf4 <print_color_u64@@Base+0xc4>
  40bab4:	ldr	x8, [sp, #8]
  40bab8:	ldr	x9, [x8]
  40babc:	cbnz	x9, 40baf4 <print_color_u64@@Base+0xc4>
  40bac0:	ldur	w8, [x29, #-4]
  40bac4:	and	w8, w8, #0x1
  40bac8:	cbnz	w8, 40bad8 <print_color_u64@@Base+0xa8>
  40bacc:	ldur	w8, [x29, #-4]
  40bad0:	and	w8, w8, #0x4
  40bad4:	cbz	w8, 40baf4 <print_color_u64@@Base+0xc4>
  40bad8:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40badc:	ldr	x8, [x8, #4016]
  40bae0:	ldr	x0, [x8]
  40bae4:	ldur	w1, [x29, #-8]
  40bae8:	ldr	x2, [sp, #24]
  40baec:	ldr	x3, [sp, #16]
  40baf0:	bl	40c5b0 <color_fprintf@@Base>
  40baf4:	ldp	x29, x30, [sp, #48]
  40baf8:	add	sp, sp, #0x40
  40bafc:	ret

000000000040bb00 <print_color_luint@@Base>:
  40bb00:	sub	sp, sp, #0x40
  40bb04:	stp	x29, x30, [sp, #48]
  40bb08:	add	x29, sp, #0x30
  40bb0c:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40bb10:	add	x8, x8, #0xd70
  40bb14:	stur	w0, [x29, #-4]
  40bb18:	stur	w1, [x29, #-8]
  40bb1c:	stur	x2, [x29, #-16]
  40bb20:	str	x3, [sp, #24]
  40bb24:	str	x4, [sp, #16]
  40bb28:	ldur	w9, [x29, #-4]
  40bb2c:	and	w9, w9, #0x2
  40bb30:	str	x8, [sp, #8]
  40bb34:	cbnz	w9, 40bb44 <print_color_luint@@Base+0x44>
  40bb38:	ldur	w8, [x29, #-4]
  40bb3c:	and	w8, w8, #0x4
  40bb40:	cbz	w8, 40bb84 <print_color_luint@@Base+0x84>
  40bb44:	ldr	x8, [sp, #8]
  40bb48:	ldr	x9, [x8]
  40bb4c:	cbz	x9, 40bb84 <print_color_luint@@Base+0x84>
  40bb50:	ldur	x8, [x29, #-16]
  40bb54:	cbnz	x8, 40bb6c <print_color_luint@@Base+0x6c>
  40bb58:	ldr	x8, [sp, #8]
  40bb5c:	ldr	x0, [x8]
  40bb60:	ldr	x1, [sp, #16]
  40bb64:	bl	40d48c <jsonw_luint@@Base>
  40bb68:	b	40bb80 <print_color_luint@@Base+0x80>
  40bb6c:	ldr	x8, [sp, #8]
  40bb70:	ldr	x0, [x8]
  40bb74:	ldur	x1, [x29, #-16]
  40bb78:	ldr	x2, [sp, #16]
  40bb7c:	bl	40d758 <jsonw_luint_field@@Base>
  40bb80:	b	40bbc4 <print_color_luint@@Base+0xc4>
  40bb84:	ldr	x8, [sp, #8]
  40bb88:	ldr	x9, [x8]
  40bb8c:	cbnz	x9, 40bbc4 <print_color_luint@@Base+0xc4>
  40bb90:	ldur	w8, [x29, #-4]
  40bb94:	and	w8, w8, #0x1
  40bb98:	cbnz	w8, 40bba8 <print_color_luint@@Base+0xa8>
  40bb9c:	ldur	w8, [x29, #-4]
  40bba0:	and	w8, w8, #0x4
  40bba4:	cbz	w8, 40bbc4 <print_color_luint@@Base+0xc4>
  40bba8:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40bbac:	ldr	x8, [x8, #4016]
  40bbb0:	ldr	x0, [x8]
  40bbb4:	ldur	w1, [x29, #-8]
  40bbb8:	ldr	x2, [sp, #24]
  40bbbc:	ldr	x3, [sp, #16]
  40bbc0:	bl	40c5b0 <color_fprintf@@Base>
  40bbc4:	ldp	x29, x30, [sp, #48]
  40bbc8:	add	sp, sp, #0x40
  40bbcc:	ret

000000000040bbd0 <print_color_lluint@@Base>:
  40bbd0:	sub	sp, sp, #0x40
  40bbd4:	stp	x29, x30, [sp, #48]
  40bbd8:	add	x29, sp, #0x30
  40bbdc:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40bbe0:	add	x8, x8, #0xd70
  40bbe4:	stur	w0, [x29, #-4]
  40bbe8:	stur	w1, [x29, #-8]
  40bbec:	stur	x2, [x29, #-16]
  40bbf0:	str	x3, [sp, #24]
  40bbf4:	str	x4, [sp, #16]
  40bbf8:	ldur	w9, [x29, #-4]
  40bbfc:	and	w9, w9, #0x2
  40bc00:	str	x8, [sp, #8]
  40bc04:	cbnz	w9, 40bc14 <print_color_lluint@@Base+0x44>
  40bc08:	ldur	w8, [x29, #-4]
  40bc0c:	and	w8, w8, #0x4
  40bc10:	cbz	w8, 40bc54 <print_color_lluint@@Base+0x84>
  40bc14:	ldr	x8, [sp, #8]
  40bc18:	ldr	x9, [x8]
  40bc1c:	cbz	x9, 40bc54 <print_color_lluint@@Base+0x84>
  40bc20:	ldur	x8, [x29, #-16]
  40bc24:	cbnz	x8, 40bc3c <print_color_lluint@@Base+0x6c>
  40bc28:	ldr	x8, [sp, #8]
  40bc2c:	ldr	x0, [x8]
  40bc30:	ldr	x1, [sp, #16]
  40bc34:	bl	40d4c4 <jsonw_lluint@@Base>
  40bc38:	b	40bc50 <print_color_lluint@@Base+0x80>
  40bc3c:	ldr	x8, [sp, #8]
  40bc40:	ldr	x0, [x8]
  40bc44:	ldur	x1, [x29, #-16]
  40bc48:	ldr	x2, [sp, #16]
  40bc4c:	bl	40d794 <jsonw_lluint_field@@Base>
  40bc50:	b	40bc94 <print_color_lluint@@Base+0xc4>
  40bc54:	ldr	x8, [sp, #8]
  40bc58:	ldr	x9, [x8]
  40bc5c:	cbnz	x9, 40bc94 <print_color_lluint@@Base+0xc4>
  40bc60:	ldur	w8, [x29, #-4]
  40bc64:	and	w8, w8, #0x1
  40bc68:	cbnz	w8, 40bc78 <print_color_lluint@@Base+0xa8>
  40bc6c:	ldur	w8, [x29, #-4]
  40bc70:	and	w8, w8, #0x4
  40bc74:	cbz	w8, 40bc94 <print_color_lluint@@Base+0xc4>
  40bc78:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40bc7c:	ldr	x8, [x8, #4016]
  40bc80:	ldr	x0, [x8]
  40bc84:	ldur	w1, [x29, #-8]
  40bc88:	ldr	x2, [sp, #24]
  40bc8c:	ldr	x3, [sp, #16]
  40bc90:	bl	40c5b0 <color_fprintf@@Base>
  40bc94:	ldp	x29, x30, [sp, #48]
  40bc98:	add	sp, sp, #0x40
  40bc9c:	ret

000000000040bca0 <print_color_float@@Base>:
  40bca0:	sub	sp, sp, #0x40
  40bca4:	stp	x29, x30, [sp, #48]
  40bca8:	add	x29, sp, #0x30
  40bcac:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40bcb0:	add	x8, x8, #0xd70
  40bcb4:	stur	w0, [x29, #-4]
  40bcb8:	stur	w1, [x29, #-8]
  40bcbc:	stur	x2, [x29, #-16]
  40bcc0:	str	x3, [sp, #24]
  40bcc4:	str	d0, [sp, #16]
  40bcc8:	ldur	w9, [x29, #-4]
  40bccc:	and	w9, w9, #0x2
  40bcd0:	str	x8, [sp, #8]
  40bcd4:	cbnz	w9, 40bce4 <print_color_float@@Base+0x44>
  40bcd8:	ldur	w8, [x29, #-4]
  40bcdc:	and	w8, w8, #0x4
  40bce0:	cbz	w8, 40bd24 <print_color_float@@Base+0x84>
  40bce4:	ldr	x8, [sp, #8]
  40bce8:	ldr	x9, [x8]
  40bcec:	cbz	x9, 40bd24 <print_color_float@@Base+0x84>
  40bcf0:	ldur	x8, [x29, #-16]
  40bcf4:	cbnz	x8, 40bd0c <print_color_float@@Base+0x6c>
  40bcf8:	ldr	x8, [sp, #8]
  40bcfc:	ldr	x0, [x8]
  40bd00:	ldr	d0, [sp, #16]
  40bd04:	bl	40d340 <jsonw_float@@Base>
  40bd08:	b	40bd20 <print_color_float@@Base+0x80>
  40bd0c:	ldr	x8, [sp, #8]
  40bd10:	ldr	x0, [x8]
  40bd14:	ldur	x1, [x29, #-16]
  40bd18:	ldr	d0, [sp, #16]
  40bd1c:	bl	40d5f0 <jsonw_float_field@@Base>
  40bd20:	b	40bd64 <print_color_float@@Base+0xc4>
  40bd24:	ldr	x8, [sp, #8]
  40bd28:	ldr	x9, [x8]
  40bd2c:	cbnz	x9, 40bd64 <print_color_float@@Base+0xc4>
  40bd30:	ldur	w8, [x29, #-4]
  40bd34:	and	w8, w8, #0x1
  40bd38:	cbnz	w8, 40bd48 <print_color_float@@Base+0xa8>
  40bd3c:	ldur	w8, [x29, #-4]
  40bd40:	and	w8, w8, #0x4
  40bd44:	cbz	w8, 40bd64 <print_color_float@@Base+0xc4>
  40bd48:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40bd4c:	ldr	x8, [x8, #4016]
  40bd50:	ldr	x0, [x8]
  40bd54:	ldur	w1, [x29, #-8]
  40bd58:	ldr	x2, [sp, #24]
  40bd5c:	ldr	d0, [sp, #16]
  40bd60:	bl	40c5b0 <color_fprintf@@Base>
  40bd64:	ldp	x29, x30, [sp, #48]
  40bd68:	add	sp, sp, #0x40
  40bd6c:	ret

000000000040bd70 <print_uint_name_value@@Base>:
  40bd70:	sub	sp, sp, #0x70
  40bd74:	stp	x29, x30, [sp, #96]
  40bd78:	add	x29, sp, #0x60
  40bd7c:	mov	x8, #0x40                  	// #64
  40bd80:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40bd84:	add	x2, x2, #0xd00
  40bd88:	mov	w9, #0x4                   	// #4
  40bd8c:	add	x10, sp, #0x14
  40bd90:	stur	x0, [x29, #-8]
  40bd94:	stur	w1, [x29, #-12]
  40bd98:	ldur	x3, [x29, #-8]
  40bd9c:	mov	x0, x10
  40bda0:	mov	x1, x8
  40bda4:	str	w9, [sp, #16]
  40bda8:	str	x10, [sp, #8]
  40bdac:	bl	404dd0 <snprintf@plt>
  40bdb0:	ldur	x1, [x29, #-8]
  40bdb4:	ldur	w3, [x29, #-12]
  40bdb8:	ldr	w9, [sp, #16]
  40bdbc:	mov	w0, w9
  40bdc0:	ldr	x2, [sp, #8]
  40bdc4:	bl	40bdd4 <print_uint_name_value@@Base+0x64>
  40bdc8:	ldp	x29, x30, [sp, #96]
  40bdcc:	add	sp, sp, #0x70
  40bdd0:	ret
  40bdd4:	sub	sp, sp, #0x30
  40bdd8:	stp	x29, x30, [sp, #32]
  40bddc:	add	x29, sp, #0x20
  40bde0:	mov	w8, #0x6                   	// #6
  40bde4:	stur	w0, [x29, #-4]
  40bde8:	str	x1, [sp, #16]
  40bdec:	str	x2, [sp, #8]
  40bdf0:	str	w3, [sp, #4]
  40bdf4:	ldur	w0, [x29, #-4]
  40bdf8:	ldr	x2, [sp, #16]
  40bdfc:	ldr	x3, [sp, #8]
  40be00:	ldr	w4, [sp, #4]
  40be04:	mov	w1, w8
  40be08:	bl	40b960 <print_color_uint@@Base>
  40be0c:	ldp	x29, x30, [sp, #32]
  40be10:	add	sp, sp, #0x30
  40be14:	ret

000000000040be18 <print_string_name_value@@Base>:
  40be18:	sub	sp, sp, #0x70
  40be1c:	stp	x29, x30, [sp, #96]
  40be20:	add	x29, sp, #0x60
  40be24:	mov	x8, #0x40                  	// #64
  40be28:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40be2c:	add	x2, x2, #0xd07
  40be30:	mov	w9, #0x4                   	// #4
  40be34:	add	x10, sp, #0x10
  40be38:	stur	x0, [x29, #-8]
  40be3c:	stur	x1, [x29, #-16]
  40be40:	ldur	x3, [x29, #-8]
  40be44:	mov	x0, x10
  40be48:	mov	x1, x8
  40be4c:	str	w9, [sp, #12]
  40be50:	str	x10, [sp]
  40be54:	bl	404dd0 <snprintf@plt>
  40be58:	ldur	x1, [x29, #-8]
  40be5c:	ldur	x3, [x29, #-16]
  40be60:	ldr	w9, [sp, #12]
  40be64:	mov	w0, w9
  40be68:	ldr	x2, [sp]
  40be6c:	bl	40be7c <print_string_name_value@@Base+0x64>
  40be70:	ldp	x29, x30, [sp, #96]
  40be74:	add	sp, sp, #0x70
  40be78:	ret
  40be7c:	sub	sp, sp, #0x30
  40be80:	stp	x29, x30, [sp, #32]
  40be84:	add	x29, sp, #0x20
  40be88:	mov	w8, #0x6                   	// #6
  40be8c:	stur	w0, [x29, #-4]
  40be90:	str	x1, [sp, #16]
  40be94:	str	x2, [sp, #8]
  40be98:	str	x3, [sp]
  40be9c:	ldur	w0, [x29, #-4]
  40bea0:	ldr	x2, [sp, #16]
  40bea4:	ldr	x3, [sp, #8]
  40bea8:	ldr	x4, [sp]
  40beac:	mov	w1, w8
  40beb0:	bl	40bec0 <print_color_string@@Base>
  40beb4:	ldp	x29, x30, [sp, #32]
  40beb8:	add	sp, sp, #0x30
  40bebc:	ret

000000000040bec0 <print_color_string@@Base>:
  40bec0:	sub	sp, sp, #0x40
  40bec4:	stp	x29, x30, [sp, #48]
  40bec8:	add	x29, sp, #0x30
  40becc:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40bed0:	add	x8, x8, #0xd70
  40bed4:	stur	w0, [x29, #-4]
  40bed8:	stur	w1, [x29, #-8]
  40bedc:	stur	x2, [x29, #-16]
  40bee0:	str	x3, [sp, #24]
  40bee4:	str	x4, [sp, #16]
  40bee8:	ldur	w9, [x29, #-4]
  40beec:	and	w9, w9, #0x2
  40bef0:	str	x8, [sp, #8]
  40bef4:	cbnz	w9, 40bf04 <print_color_string@@Base+0x44>
  40bef8:	ldur	w8, [x29, #-4]
  40befc:	and	w8, w8, #0x4
  40bf00:	cbz	w8, 40bf70 <print_color_string@@Base+0xb0>
  40bf04:	ldr	x8, [sp, #8]
  40bf08:	ldr	x9, [x8]
  40bf0c:	cbz	x9, 40bf70 <print_color_string@@Base+0xb0>
  40bf10:	ldur	x8, [x29, #-16]
  40bf14:	cbz	x8, 40bf34 <print_color_string@@Base+0x74>
  40bf18:	ldr	x8, [sp, #16]
  40bf1c:	cbnz	x8, 40bf34 <print_color_string@@Base+0x74>
  40bf20:	ldr	x8, [sp, #8]
  40bf24:	ldr	x0, [x8]
  40bf28:	ldur	x1, [x29, #-16]
  40bf2c:	bl	40cd10 <jsonw_name@@Base>
  40bf30:	b	40bf6c <print_color_string@@Base+0xac>
  40bf34:	ldur	x8, [x29, #-16]
  40bf38:	cbnz	x8, 40bf58 <print_color_string@@Base+0x98>
  40bf3c:	ldr	x8, [sp, #16]
  40bf40:	cbz	x8, 40bf58 <print_color_string@@Base+0x98>
  40bf44:	ldr	x8, [sp, #8]
  40bf48:	ldr	x0, [x8]
  40bf4c:	ldr	x1, [sp, #16]
  40bf50:	bl	40d28c <jsonw_string@@Base>
  40bf54:	b	40bf6c <print_color_string@@Base+0xac>
  40bf58:	ldr	x8, [sp, #8]
  40bf5c:	ldr	x0, [x8]
  40bf60:	ldur	x1, [x29, #-16]
  40bf64:	ldr	x2, [sp, #16]
  40bf68:	bl	40d56c <jsonw_string_field@@Base>
  40bf6c:	b	40bfb0 <print_color_string@@Base+0xf0>
  40bf70:	ldr	x8, [sp, #8]
  40bf74:	ldr	x9, [x8]
  40bf78:	cbnz	x9, 40bfb0 <print_color_string@@Base+0xf0>
  40bf7c:	ldur	w8, [x29, #-4]
  40bf80:	and	w8, w8, #0x1
  40bf84:	cbnz	w8, 40bf94 <print_color_string@@Base+0xd4>
  40bf88:	ldur	w8, [x29, #-4]
  40bf8c:	and	w8, w8, #0x4
  40bf90:	cbz	w8, 40bfb0 <print_color_string@@Base+0xf0>
  40bf94:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40bf98:	ldr	x8, [x8, #4016]
  40bf9c:	ldr	x0, [x8]
  40bfa0:	ldur	w1, [x29, #-8]
  40bfa4:	ldr	x2, [sp, #24]
  40bfa8:	ldr	x3, [sp, #16]
  40bfac:	bl	40c5b0 <color_fprintf@@Base>
  40bfb0:	ldp	x29, x30, [sp, #48]
  40bfb4:	add	sp, sp, #0x40
  40bfb8:	ret

000000000040bfbc <print_color_bool@@Base>:
  40bfbc:	sub	sp, sp, #0x40
  40bfc0:	stp	x29, x30, [sp, #48]
  40bfc4:	add	x29, sp, #0x30
  40bfc8:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40bfcc:	add	x8, x8, #0xd70
  40bfd0:	mov	w9, #0x1                   	// #1
  40bfd4:	stur	w0, [x29, #-4]
  40bfd8:	stur	w1, [x29, #-8]
  40bfdc:	stur	x2, [x29, #-16]
  40bfe0:	str	x3, [sp, #24]
  40bfe4:	and	w9, w4, w9
  40bfe8:	strb	w9, [sp, #23]
  40bfec:	ldur	w9, [x29, #-4]
  40bff0:	and	w9, w9, #0x2
  40bff4:	str	x8, [sp, #8]
  40bff8:	cbnz	w9, 40c008 <print_color_bool@@Base+0x4c>
  40bffc:	ldur	w8, [x29, #-4]
  40c000:	and	w8, w8, #0x4
  40c004:	cbz	w8, 40c050 <print_color_bool@@Base+0x94>
  40c008:	ldr	x8, [sp, #8]
  40c00c:	ldr	x9, [x8]
  40c010:	cbz	x9, 40c050 <print_color_bool@@Base+0x94>
  40c014:	ldur	x8, [x29, #-16]
  40c018:	cbz	x8, 40c038 <print_color_bool@@Base+0x7c>
  40c01c:	ldr	x8, [sp, #8]
  40c020:	ldr	x0, [x8]
  40c024:	ldur	x1, [x29, #-16]
  40c028:	ldrb	w9, [sp, #23]
  40c02c:	and	w2, w9, #0x1
  40c030:	bl	40d5a8 <jsonw_bool_field@@Base>
  40c034:	b	40c04c <print_color_bool@@Base+0x90>
  40c038:	ldr	x8, [sp, #8]
  40c03c:	ldr	x0, [x8]
  40c040:	ldrb	w9, [sp, #23]
  40c044:	and	w1, w9, #0x1
  40c048:	bl	40d2c0 <jsonw_bool@@Base>
  40c04c:	b	40c0a8 <print_color_bool@@Base+0xec>
  40c050:	ldr	x8, [sp, #8]
  40c054:	ldr	x9, [x8]
  40c058:	cbnz	x9, 40c0a8 <print_color_bool@@Base+0xec>
  40c05c:	ldur	w8, [x29, #-4]
  40c060:	and	w8, w8, #0x1
  40c064:	cbnz	w8, 40c074 <print_color_bool@@Base+0xb8>
  40c068:	ldur	w8, [x29, #-4]
  40c06c:	and	w8, w8, #0x4
  40c070:	cbz	w8, 40c0a8 <print_color_bool@@Base+0xec>
  40c074:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40c078:	ldr	x8, [x8, #4016]
  40c07c:	ldr	x0, [x8]
  40c080:	ldur	w1, [x29, #-8]
  40c084:	ldr	x2, [sp, #24]
  40c088:	ldrb	w9, [sp, #23]
  40c08c:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c090:	add	x8, x8, #0xd13
  40c094:	adrp	x10, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c098:	add	x10, x10, #0xd0e
  40c09c:	tst	w9, #0x1
  40c0a0:	csel	x3, x10, x8, ne  // ne = any
  40c0a4:	bl	40c5b0 <color_fprintf@@Base>
  40c0a8:	ldp	x29, x30, [sp, #48]
  40c0ac:	add	sp, sp, #0x40
  40c0b0:	ret

000000000040c0b4 <print_color_0xhex@@Base>:
  40c0b4:	sub	sp, sp, #0x80
  40c0b8:	stp	x29, x30, [sp, #112]
  40c0bc:	add	x29, sp, #0x70
  40c0c0:	stur	w0, [x29, #-4]
  40c0c4:	stur	w1, [x29, #-8]
  40c0c8:	stur	x2, [x29, #-16]
  40c0cc:	stur	x3, [x29, #-24]
  40c0d0:	stur	x4, [x29, #-32]
  40c0d4:	ldur	w8, [x29, #-4]
  40c0d8:	and	w8, w8, #0x2
  40c0dc:	cbnz	w8, 40c0ec <print_color_0xhex@@Base+0x38>
  40c0e0:	ldur	w8, [x29, #-4]
  40c0e4:	and	w8, w8, #0x4
  40c0e8:	cbz	w8, 40c13c <print_color_0xhex@@Base+0x88>
  40c0ec:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40c0f0:	add	x8, x8, #0xd70
  40c0f4:	ldr	x8, [x8]
  40c0f8:	cbz	x8, 40c13c <print_color_0xhex@@Base+0x88>
  40c0fc:	ldur	x3, [x29, #-32]
  40c100:	add	x8, sp, #0x10
  40c104:	mov	x0, x8
  40c108:	mov	x1, #0x40                  	// #64
  40c10c:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c110:	add	x2, x2, #0xd19
  40c114:	str	x8, [sp, #8]
  40c118:	bl	404dd0 <snprintf@plt>
  40c11c:	ldur	x1, [x29, #-16]
  40c120:	mov	w9, #0x2                   	// #2
  40c124:	mov	w0, w9
  40c128:	mov	x8, xzr
  40c12c:	mov	x2, x8
  40c130:	ldr	x3, [sp, #8]
  40c134:	bl	40be7c <print_string_name_value@@Base+0x64>
  40c138:	b	40c180 <print_color_0xhex@@Base+0xcc>
  40c13c:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40c140:	add	x8, x8, #0xd70
  40c144:	ldr	x8, [x8]
  40c148:	cbnz	x8, 40c180 <print_color_0xhex@@Base+0xcc>
  40c14c:	ldur	w8, [x29, #-4]
  40c150:	and	w8, w8, #0x1
  40c154:	cbnz	w8, 40c164 <print_color_0xhex@@Base+0xb0>
  40c158:	ldur	w8, [x29, #-4]
  40c15c:	and	w8, w8, #0x4
  40c160:	cbz	w8, 40c180 <print_color_0xhex@@Base+0xcc>
  40c164:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40c168:	ldr	x8, [x8, #4016]
  40c16c:	ldr	x0, [x8]
  40c170:	ldur	w1, [x29, #-8]
  40c174:	ldur	x2, [x29, #-24]
  40c178:	ldur	x3, [x29, #-32]
  40c17c:	bl	40c5b0 <color_fprintf@@Base>
  40c180:	ldp	x29, x30, [sp, #112]
  40c184:	add	sp, sp, #0x80
  40c188:	ret

000000000040c18c <print_color_hex@@Base>:
  40c18c:	sub	sp, sp, #0x80
  40c190:	stp	x29, x30, [sp, #112]
  40c194:	add	x29, sp, #0x70
  40c198:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40c19c:	add	x8, x8, #0xd70
  40c1a0:	stur	w0, [x29, #-4]
  40c1a4:	stur	w1, [x29, #-8]
  40c1a8:	stur	x2, [x29, #-16]
  40c1ac:	stur	x3, [x29, #-24]
  40c1b0:	stur	w4, [x29, #-28]
  40c1b4:	ldur	w9, [x29, #-4]
  40c1b8:	and	w9, w9, #0x2
  40c1bc:	str	x8, [sp, #8]
  40c1c0:	cbnz	w9, 40c1d0 <print_color_hex@@Base+0x44>
  40c1c4:	ldur	w8, [x29, #-4]
  40c1c8:	and	w8, w8, #0x4
  40c1cc:	cbz	w8, 40c228 <print_color_hex@@Base+0x9c>
  40c1d0:	ldr	x8, [sp, #8]
  40c1d4:	ldr	x9, [x8]
  40c1d8:	cbz	x9, 40c228 <print_color_hex@@Base+0x9c>
  40c1dc:	ldur	w3, [x29, #-28]
  40c1e0:	add	x0, sp, #0x14
  40c1e4:	mov	x1, #0x40                  	// #64
  40c1e8:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c1ec:	add	x2, x2, #0xcfd
  40c1f0:	bl	404dd0 <snprintf@plt>
  40c1f4:	ldur	x8, [x29, #-16]
  40c1f8:	cbz	x8, 40c214 <print_color_hex@@Base+0x88>
  40c1fc:	ldr	x8, [sp, #8]
  40c200:	ldr	x0, [x8]
  40c204:	ldur	x1, [x29, #-16]
  40c208:	add	x2, sp, #0x14
  40c20c:	bl	40d56c <jsonw_string_field@@Base>
  40c210:	b	40c224 <print_color_hex@@Base+0x98>
  40c214:	ldr	x8, [sp, #8]
  40c218:	ldr	x0, [x8]
  40c21c:	add	x1, sp, #0x14
  40c220:	bl	40d28c <jsonw_string@@Base>
  40c224:	b	40c268 <print_color_hex@@Base+0xdc>
  40c228:	ldr	x8, [sp, #8]
  40c22c:	ldr	x9, [x8]
  40c230:	cbnz	x9, 40c268 <print_color_hex@@Base+0xdc>
  40c234:	ldur	w8, [x29, #-4]
  40c238:	and	w8, w8, #0x1
  40c23c:	cbnz	w8, 40c24c <print_color_hex@@Base+0xc0>
  40c240:	ldur	w8, [x29, #-4]
  40c244:	and	w8, w8, #0x4
  40c248:	cbz	w8, 40c268 <print_color_hex@@Base+0xdc>
  40c24c:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40c250:	ldr	x8, [x8, #4016]
  40c254:	ldr	x0, [x8]
  40c258:	ldur	w1, [x29, #-8]
  40c25c:	ldur	x2, [x29, #-24]
  40c260:	ldur	w3, [x29, #-28]
  40c264:	bl	40c5b0 <color_fprintf@@Base>
  40c268:	ldp	x29, x30, [sp, #112]
  40c26c:	add	sp, sp, #0x80
  40c270:	ret

000000000040c274 <print_color_null@@Base>:
  40c274:	sub	sp, sp, #0x40
  40c278:	stp	x29, x30, [sp, #48]
  40c27c:	add	x29, sp, #0x30
  40c280:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40c284:	add	x8, x8, #0xd70
  40c288:	stur	w0, [x29, #-4]
  40c28c:	stur	w1, [x29, #-8]
  40c290:	stur	x2, [x29, #-16]
  40c294:	str	x3, [sp, #24]
  40c298:	str	x4, [sp, #16]
  40c29c:	ldur	w9, [x29, #-4]
  40c2a0:	and	w9, w9, #0x2
  40c2a4:	str	x8, [sp, #8]
  40c2a8:	cbnz	w9, 40c2b8 <print_color_null@@Base+0x44>
  40c2ac:	ldur	w8, [x29, #-4]
  40c2b0:	and	w8, w8, #0x4
  40c2b4:	cbz	w8, 40c2f0 <print_color_null@@Base+0x7c>
  40c2b8:	ldr	x8, [sp, #8]
  40c2bc:	ldr	x9, [x8]
  40c2c0:	cbz	x9, 40c2f0 <print_color_null@@Base+0x7c>
  40c2c4:	ldur	x8, [x29, #-16]
  40c2c8:	cbz	x8, 40c2e0 <print_color_null@@Base+0x6c>
  40c2cc:	ldr	x8, [sp, #8]
  40c2d0:	ldr	x0, [x8]
  40c2d4:	ldur	x1, [x29, #-16]
  40c2d8:	bl	40d848 <jsonw_null_field@@Base>
  40c2dc:	b	40c2ec <print_color_null@@Base+0x78>
  40c2e0:	ldr	x8, [sp, #8]
  40c2e4:	ldr	x0, [x8]
  40c2e8:	bl	40d314 <jsonw_null@@Base>
  40c2ec:	b	40c330 <print_color_null@@Base+0xbc>
  40c2f0:	ldr	x8, [sp, #8]
  40c2f4:	ldr	x9, [x8]
  40c2f8:	cbnz	x9, 40c330 <print_color_null@@Base+0xbc>
  40c2fc:	ldur	w8, [x29, #-4]
  40c300:	and	w8, w8, #0x1
  40c304:	cbnz	w8, 40c314 <print_color_null@@Base+0xa0>
  40c308:	ldur	w8, [x29, #-4]
  40c30c:	and	w8, w8, #0x4
  40c310:	cbz	w8, 40c330 <print_color_null@@Base+0xbc>
  40c314:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40c318:	ldr	x8, [x8, #4016]
  40c31c:	ldr	x0, [x8]
  40c320:	ldur	w1, [x29, #-8]
  40c324:	ldr	x2, [sp, #24]
  40c328:	ldr	x3, [sp, #16]
  40c32c:	bl	40c5b0 <color_fprintf@@Base>
  40c330:	ldp	x29, x30, [sp, #48]
  40c334:	add	sp, sp, #0x40
  40c338:	ret

000000000040c33c <print_nl@@Base>:
  40c33c:	stp	x29, x30, [sp, #-16]!
  40c340:	mov	x29, sp
  40c344:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40c348:	add	x8, x8, #0xd70
  40c34c:	ldr	x8, [x8]
  40c350:	cbnz	x8, 40c36c <print_nl@@Base+0x30>
  40c354:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40c358:	ldr	x8, [x8, #4048]
  40c35c:	ldr	x1, [x8]
  40c360:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c364:	add	x0, x0, #0x914
  40c368:	bl	405190 <printf@plt>
  40c36c:	ldp	x29, x30, [sp], #16
  40c370:	ret

000000000040c374 <check_enable_color@@Base>:
  40c374:	sub	sp, sp, #0x20
  40c378:	stp	x29, x30, [sp, #16]
  40c37c:	add	x29, sp, #0x10
  40c380:	str	w0, [sp, #8]
  40c384:	str	w1, [sp, #4]
  40c388:	ldr	w8, [sp, #4]
  40c38c:	cbnz	w8, 40c398 <check_enable_color@@Base+0x24>
  40c390:	ldr	w8, [sp, #8]
  40c394:	cbnz	w8, 40c3a8 <check_enable_color@@Base+0x34>
  40c398:	mov	w8, wzr
  40c39c:	and	w8, w8, #0x1
  40c3a0:	sturb	w8, [x29, #-1]
  40c3a4:	b	40c3ec <check_enable_color@@Base+0x78>
  40c3a8:	ldr	w8, [sp, #8]
  40c3ac:	cmp	w8, #0x2
  40c3b0:	b.eq	40c3cc <check_enable_color@@Base+0x58>  // b.none
  40c3b4:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40c3b8:	ldr	x8, [x8, #4016]
  40c3bc:	ldr	x0, [x8]
  40c3c0:	bl	404de0 <fileno@plt>
  40c3c4:	bl	4050e0 <isatty@plt>
  40c3c8:	cbz	w0, 40c3e0 <check_enable_color@@Base+0x6c>
  40c3cc:	bl	40c400 <check_enable_color@@Base+0x8c>
  40c3d0:	mov	w8, #0x1                   	// #1
  40c3d4:	and	w8, w8, #0x1
  40c3d8:	sturb	w8, [x29, #-1]
  40c3dc:	b	40c3ec <check_enable_color@@Base+0x78>
  40c3e0:	mov	w8, wzr
  40c3e4:	and	w8, w8, #0x1
  40c3e8:	sturb	w8, [x29, #-1]
  40c3ec:	ldurb	w8, [x29, #-1]
  40c3f0:	and	w0, w8, #0x1
  40c3f4:	ldp	x29, x30, [sp, #16]
  40c3f8:	add	sp, sp, #0x20
  40c3fc:	ret
  40c400:	stp	x29, x30, [sp, #-16]!
  40c404:	mov	x29, sp
  40c408:	mov	w8, #0x1                   	// #1
  40c40c:	adrp	x9, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40c410:	add	x9, x9, #0xd78
  40c414:	str	w8, [x9]
  40c418:	bl	40c824 <oper_state_color@@Base+0x60>
  40c41c:	ldp	x29, x30, [sp], #16
  40c420:	ret

000000000040c424 <matches_color@@Base>:
  40c424:	stp	x29, x30, [sp, #-16]!
  40c428:	mov	x29, sp
  40c42c:	sub	sp, sp, #0x50
  40c430:	stur	x0, [x29, #-16]
  40c434:	stur	x1, [x29, #-24]
  40c438:	ldur	x8, [x29, #-24]
  40c43c:	cbnz	x8, 40c450 <matches_color@@Base+0x2c>
  40c440:	mov	w8, wzr
  40c444:	and	w8, w8, #0x1
  40c448:	sturb	w8, [x29, #-1]
  40c44c:	b	40c59c <matches_color@@Base+0x178>
  40c450:	ldur	x8, [x29, #-16]
  40c454:	stur	x8, [x29, #-48]
  40c458:	ldur	x0, [x29, #-48]
  40c45c:	bl	404cc0 <strlen@plt>
  40c460:	mov	x8, #0x1                   	// #1
  40c464:	add	x9, x0, #0x1
  40c468:	stur	x9, [x29, #-56]
  40c46c:	ldur	x9, [x29, #-56]
  40c470:	mul	x8, x9, x8
  40c474:	add	x8, x8, #0xf
  40c478:	and	x8, x8, #0xfffffffffffffff0
  40c47c:	mov	x9, sp
  40c480:	subs	x8, x9, x8
  40c484:	mov	sp, x8
  40c488:	stur	x8, [x29, #-64]
  40c48c:	ldur	x8, [x29, #-64]
  40c490:	ldur	x1, [x29, #-48]
  40c494:	ldur	x2, [x29, #-56]
  40c498:	mov	x0, x8
  40c49c:	stur	x8, [x29, #-80]
  40c4a0:	bl	404c90 <memcpy@plt>
  40c4a4:	ldur	x8, [x29, #-80]
  40c4a8:	stur	x8, [x29, #-72]
  40c4ac:	ldur	x9, [x29, #-72]
  40c4b0:	stur	x9, [x29, #-32]
  40c4b4:	ldur	x0, [x29, #-32]
  40c4b8:	mov	w1, #0x3d                  	// #61
  40c4bc:	bl	405130 <strchrnul@plt>
  40c4c0:	stur	x0, [x29, #-40]
  40c4c4:	ldur	x8, [x29, #-40]
  40c4c8:	ldrb	w10, [x8]
  40c4cc:	cbz	w10, 40c4e4 <matches_color@@Base+0xc0>
  40c4d0:	ldur	x8, [x29, #-40]
  40c4d4:	add	x9, x8, #0x1
  40c4d8:	stur	x9, [x29, #-40]
  40c4dc:	mov	w10, #0x0                   	// #0
  40c4e0:	strb	w10, [x8]
  40c4e4:	ldur	x0, [x29, #-32]
  40c4e8:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c4ec:	add	x1, x1, #0xd2b
  40c4f0:	bl	4079f8 <matches@@Base>
  40c4f4:	tbnz	w0, #0, 40c4fc <matches_color@@Base+0xd8>
  40c4f8:	b	40c50c <matches_color@@Base+0xe8>
  40c4fc:	mov	w8, wzr
  40c500:	and	w8, w8, #0x1
  40c504:	sturb	w8, [x29, #-1]
  40c508:	b	40c59c <matches_color@@Base+0x178>
  40c50c:	ldur	x8, [x29, #-40]
  40c510:	ldrb	w9, [x8]
  40c514:	cbz	w9, 40c52c <matches_color@@Base+0x108>
  40c518:	ldur	x0, [x29, #-40]
  40c51c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c520:	add	x1, x1, #0xd32
  40c524:	bl	404fb0 <strcmp@plt>
  40c528:	cbnz	w0, 40c53c <matches_color@@Base+0x118>
  40c52c:	ldur	x8, [x29, #-24]
  40c530:	mov	w9, #0x2                   	// #2
  40c534:	str	w9, [x8]
  40c538:	b	40c590 <matches_color@@Base+0x16c>
  40c53c:	ldur	x0, [x29, #-40]
  40c540:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c544:	add	x1, x1, #0xd39
  40c548:	bl	404fb0 <strcmp@plt>
  40c54c:	cbnz	w0, 40c560 <matches_color@@Base+0x13c>
  40c550:	ldur	x8, [x29, #-24]
  40c554:	mov	w9, #0x1                   	// #1
  40c558:	str	w9, [x8]
  40c55c:	b	40c590 <matches_color@@Base+0x16c>
  40c560:	ldur	x0, [x29, #-40]
  40c564:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c568:	add	x1, x1, #0xd3e
  40c56c:	bl	404fb0 <strcmp@plt>
  40c570:	cbnz	w0, 40c580 <matches_color@@Base+0x15c>
  40c574:	ldur	x8, [x29, #-24]
  40c578:	str	wzr, [x8]
  40c57c:	b	40c590 <matches_color@@Base+0x16c>
  40c580:	mov	w8, wzr
  40c584:	and	w8, w8, #0x1
  40c588:	sturb	w8, [x29, #-1]
  40c58c:	b	40c59c <matches_color@@Base+0x178>
  40c590:	mov	w8, #0x1                   	// #1
  40c594:	and	w8, w8, #0x1
  40c598:	sturb	w8, [x29, #-1]
  40c59c:	ldurb	w8, [x29, #-1]
  40c5a0:	and	w0, w8, #0x1
  40c5a4:	mov	sp, x29
  40c5a8:	ldp	x29, x30, [sp], #16
  40c5ac:	ret

000000000040c5b0 <color_fprintf@@Base>:
  40c5b0:	sub	sp, sp, #0x170
  40c5b4:	stp	x29, x30, [sp, #336]
  40c5b8:	str	x28, [sp, #352]
  40c5bc:	add	x29, sp, #0x150
  40c5c0:	str	q7, [sp, #144]
  40c5c4:	str	q6, [sp, #128]
  40c5c8:	str	q5, [sp, #112]
  40c5cc:	str	q4, [sp, #96]
  40c5d0:	str	q3, [sp, #80]
  40c5d4:	str	q2, [sp, #64]
  40c5d8:	str	q1, [sp, #48]
  40c5dc:	str	q0, [sp, #32]
  40c5e0:	str	x7, [sp, #200]
  40c5e4:	str	x6, [sp, #192]
  40c5e8:	str	x5, [sp, #184]
  40c5ec:	str	x4, [sp, #176]
  40c5f0:	str	x3, [sp, #168]
  40c5f4:	stur	x0, [x29, #-8]
  40c5f8:	stur	w1, [x29, #-12]
  40c5fc:	stur	x2, [x29, #-24]
  40c600:	mov	w8, wzr
  40c604:	stur	w8, [x29, #-28]
  40c608:	mov	w8, #0xffffff80            	// #-128
  40c60c:	stur	w8, [x29, #-36]
  40c610:	mov	w8, #0xffffffd8            	// #-40
  40c614:	stur	w8, [x29, #-40]
  40c618:	add	x9, sp, #0x20
  40c61c:	add	x9, x9, #0x80
  40c620:	stur	x9, [x29, #-48]
  40c624:	add	x9, sp, #0xa8
  40c628:	add	x9, x9, #0x28
  40c62c:	stur	x9, [x29, #-56]
  40c630:	add	x9, x29, #0x20
  40c634:	stur	x9, [x29, #-64]
  40c638:	adrp	x9, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40c63c:	ldr	w8, [x9, #3448]
  40c640:	cbz	w8, 40c658 <color_fprintf@@Base+0xa8>
  40c644:	b	40c648 <color_fprintf@@Base+0x98>
  40c648:	ldur	w8, [x29, #-12]
  40c64c:	subs	w8, w8, #0x6
  40c650:	b.ne	40c680 <color_fprintf@@Base+0xd0>  // b.any
  40c654:	b	40c658 <color_fprintf@@Base+0xa8>
  40c658:	ldur	x0, [x29, #-8]
  40c65c:	ldur	x1, [x29, #-24]
  40c660:	ldur	q0, [x29, #-64]
  40c664:	ldur	q1, [x29, #-48]
  40c668:	stur	q1, [x29, #-80]
  40c66c:	stur	q0, [x29, #-96]
  40c670:	sub	x2, x29, #0x60
  40c674:	bl	405180 <vfprintf@plt>
  40c678:	stur	w0, [x29, #-28]
  40c67c:	b	40c758 <color_fprintf@@Base+0x1a8>
  40c680:	ldur	x8, [x29, #-8]
  40c684:	adrp	x9, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40c688:	ldr	w10, [x9, #3452]
  40c68c:	str	x8, [sp, #24]
  40c690:	cbz	w10, 40c6b4 <color_fprintf@@Base+0x104>
  40c694:	b	40c698 <color_fprintf@@Base+0xe8>
  40c698:	ldur	w8, [x29, #-12]
  40c69c:	mov	w9, w8
  40c6a0:	adrp	x10, 423000 <memcpy@GLIBC_2.17>
  40c6a4:	add	x10, x10, #0x2e8
  40c6a8:	ldr	w8, [x10, x9, lsl #2]
  40c6ac:	str	w8, [sp, #20]
  40c6b0:	b	40c6d0 <color_fprintf@@Base+0x120>
  40c6b4:	ldur	w8, [x29, #-12]
  40c6b8:	mov	w9, w8
  40c6bc:	adrp	x10, 423000 <memcpy@GLIBC_2.17>
  40c6c0:	add	x10, x10, #0x304
  40c6c4:	ldr	w8, [x10, x9, lsl #2]
  40c6c8:	str	w8, [sp, #20]
  40c6cc:	b	40c6d0 <color_fprintf@@Base+0x120>
  40c6d0:	ldr	w8, [sp, #20]
  40c6d4:	adrp	x9, 422000 <_IO_stdin_used@@Base+0x10b00>
  40c6d8:	add	x9, x9, #0xd10
  40c6dc:	ldr	x2, [x9, w8, uxtw #3]
  40c6e0:	adrp	x10, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c6e4:	add	x10, x10, #0x914
  40c6e8:	ldr	x0, [sp, #24]
  40c6ec:	mov	x1, x10
  40c6f0:	str	x9, [sp, #8]
  40c6f4:	str	x10, [sp]
  40c6f8:	bl	4051e0 <fprintf@plt>
  40c6fc:	ldur	w8, [x29, #-28]
  40c700:	add	w8, w8, w0
  40c704:	stur	w8, [x29, #-28]
  40c708:	ldur	x0, [x29, #-8]
  40c70c:	ldur	x1, [x29, #-24]
  40c710:	ldur	q0, [x29, #-64]
  40c714:	ldur	q1, [x29, #-48]
  40c718:	stur	q1, [x29, #-112]
  40c71c:	stur	q0, [x29, #-128]
  40c720:	sub	x2, x29, #0x80
  40c724:	bl	405180 <vfprintf@plt>
  40c728:	ldur	w8, [x29, #-28]
  40c72c:	add	w8, w8, w0
  40c730:	stur	w8, [x29, #-28]
  40c734:	ldur	x0, [x29, #-8]
  40c738:	ldr	x9, [sp, #8]
  40c73c:	ldr	x2, [x9, #112]
  40c740:	ldr	x1, [sp]
  40c744:	bl	4051e0 <fprintf@plt>
  40c748:	ldur	w8, [x29, #-28]
  40c74c:	add	w8, w8, w0
  40c750:	stur	w8, [x29, #-28]
  40c754:	b	40c758 <color_fprintf@@Base+0x1a8>
  40c758:	ldur	w0, [x29, #-28]
  40c75c:	ldr	x28, [sp, #352]
  40c760:	ldp	x29, x30, [sp, #336]
  40c764:	add	sp, sp, #0x170
  40c768:	ret

000000000040c76c <ifa_family_color@@Base>:
  40c76c:	sub	sp, sp, #0x10
  40c770:	strb	w0, [sp, #11]
  40c774:	ldrb	w8, [sp, #11]
  40c778:	cmp	w8, #0x2
  40c77c:	str	w8, [sp, #4]
  40c780:	b.eq	40c798 <ifa_family_color@@Base+0x2c>  // b.none
  40c784:	b	40c788 <ifa_family_color@@Base+0x1c>
  40c788:	ldr	w8, [sp, #4]
  40c78c:	cmp	w8, #0xa
  40c790:	b.eq	40c7a4 <ifa_family_color@@Base+0x38>  // b.none
  40c794:	b	40c7b0 <ifa_family_color@@Base+0x44>
  40c798:	mov	w8, #0x2                   	// #2
  40c79c:	str	w8, [sp, #12]
  40c7a0:	b	40c7b8 <ifa_family_color@@Base+0x4c>
  40c7a4:	mov	w8, #0x3                   	// #3
  40c7a8:	str	w8, [sp, #12]
  40c7ac:	b	40c7b8 <ifa_family_color@@Base+0x4c>
  40c7b0:	mov	w8, #0x6                   	// #6
  40c7b4:	str	w8, [sp, #12]
  40c7b8:	ldr	w0, [sp, #12]
  40c7bc:	add	sp, sp, #0x10
  40c7c0:	ret

000000000040c7c4 <oper_state_color@@Base>:
  40c7c4:	sub	sp, sp, #0x10
  40c7c8:	strb	w0, [sp, #11]
  40c7cc:	ldrb	w8, [sp, #11]
  40c7d0:	cmp	w8, #0x2
  40c7d4:	str	w8, [sp, #4]
  40c7d8:	b.eq	40c804 <oper_state_color@@Base+0x40>  // b.none
  40c7dc:	b	40c7e0 <oper_state_color@@Base+0x1c>
  40c7e0:	ldr	w8, [sp, #4]
  40c7e4:	cmp	w8, #0x6
  40c7e8:	cset	w9, eq  // eq = none
  40c7ec:	eor	w9, w9, #0x1
  40c7f0:	tbnz	w9, #0, 40c810 <oper_state_color@@Base+0x4c>
  40c7f4:	b	40c7f8 <oper_state_color@@Base+0x34>
  40c7f8:	mov	w8, #0x4                   	// #4
  40c7fc:	str	w8, [sp, #12]
  40c800:	b	40c818 <oper_state_color@@Base+0x54>
  40c804:	mov	w8, #0x5                   	// #5
  40c808:	str	w8, [sp, #12]
  40c80c:	b	40c818 <oper_state_color@@Base+0x54>
  40c810:	mov	w8, #0x6                   	// #6
  40c814:	str	w8, [sp, #12]
  40c818:	ldr	w0, [sp, #12]
  40c81c:	add	sp, sp, #0x10
  40c820:	ret
  40c824:	sub	sp, sp, #0x20
  40c828:	stp	x29, x30, [sp, #16]
  40c82c:	add	x29, sp, #0x10
  40c830:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c834:	add	x0, x0, #0xd44
  40c838:	bl	4051c0 <getenv@plt>
  40c83c:	str	x0, [sp, #8]
  40c840:	ldr	x8, [sp, #8]
  40c844:	cbz	x8, 40c8a8 <oper_state_color@@Base+0xe4>
  40c848:	ldr	x0, [sp, #8]
  40c84c:	mov	w1, #0x3b                  	// #59
  40c850:	bl	404f50 <strrchr@plt>
  40c854:	str	x0, [sp, #8]
  40c858:	cbz	x0, 40c8a8 <oper_state_color@@Base+0xe4>
  40c85c:	ldr	x8, [sp, #8]
  40c860:	ldrb	w9, [x8, #1]
  40c864:	cmp	w9, #0x30
  40c868:	b.lt	40c87c <oper_state_color@@Base+0xb8>  // b.tstop
  40c86c:	ldr	x8, [sp, #8]
  40c870:	ldrb	w9, [x8, #1]
  40c874:	cmp	w9, #0x36
  40c878:	b.le	40c88c <oper_state_color@@Base+0xc8>
  40c87c:	ldr	x8, [sp, #8]
  40c880:	ldrb	w9, [x8, #1]
  40c884:	cmp	w9, #0x38
  40c888:	b.ne	40c8a8 <oper_state_color@@Base+0xe4>  // b.any
  40c88c:	ldr	x8, [sp, #8]
  40c890:	ldrb	w9, [x8, #2]
  40c894:	cbnz	w9, 40c8a8 <oper_state_color@@Base+0xe4>
  40c898:	adrp	x8, 427000 <stderr@@GLIBC_2.17+0x3cd8>
  40c89c:	add	x8, x8, #0xd7c
  40c8a0:	mov	w9, #0x1                   	// #1
  40c8a4:	str	w9, [x8]
  40c8a8:	ldp	x29, x30, [sp, #16]
  40c8ac:	add	sp, sp, #0x20
  40c8b0:	ret

000000000040c8b4 <mpls_ntop@@Base>:
  40c8b4:	sub	sp, sp, #0x40
  40c8b8:	stp	x29, x30, [sp, #48]
  40c8bc:	add	x29, sp, #0x30
  40c8c0:	stur	w0, [x29, #-12]
  40c8c4:	str	x1, [sp, #24]
  40c8c8:	str	x2, [sp, #16]
  40c8cc:	str	x3, [sp, #8]
  40c8d0:	ldur	w8, [x29, #-12]
  40c8d4:	cmp	w8, #0x1c
  40c8d8:	cset	w8, eq  // eq = none
  40c8dc:	eor	w8, w8, #0x1
  40c8e0:	tbnz	w8, #0, 40c908 <mpls_ntop@@Base+0x54>
  40c8e4:	b	40c8e8 <mpls_ntop@@Base+0x34>
  40c8e8:	bl	4051b0 <__errno_location@plt>
  40c8ec:	str	wzr, [x0]
  40c8f0:	ldr	x0, [sp, #24]
  40c8f4:	ldr	x1, [sp, #16]
  40c8f8:	ldr	x2, [sp, #8]
  40c8fc:	bl	40c92c <mpls_ntop@@Base+0x78>
  40c900:	stur	x0, [x29, #-8]
  40c904:	b	40c91c <mpls_ntop@@Base+0x68>
  40c908:	bl	4051b0 <__errno_location@plt>
  40c90c:	mov	w8, #0x61                  	// #97
  40c910:	str	w8, [x0]
  40c914:	mov	x8, xzr
  40c918:	stur	x8, [x29, #-8]
  40c91c:	ldur	x0, [x29, #-8]
  40c920:	ldp	x29, x30, [sp, #48]
  40c924:	add	sp, sp, #0x40
  40c928:	ret
  40c92c:	sub	sp, sp, #0x50
  40c930:	stp	x29, x30, [sp, #64]
  40c934:	add	x29, sp, #0x40
  40c938:	stur	x0, [x29, #-16]
  40c93c:	stur	x1, [x29, #-24]
  40c940:	str	x2, [sp, #32]
  40c944:	ldr	x8, [sp, #32]
  40c948:	str	x8, [sp, #24]
  40c94c:	ldur	x8, [x29, #-24]
  40c950:	str	x8, [sp, #16]
  40c954:	str	wzr, [sp, #12]
  40c958:	ldur	x8, [x29, #-16]
  40c95c:	ldrsw	x9, [sp, #12]
  40c960:	mov	w10, w9
  40c964:	add	w10, w10, #0x1
  40c968:	str	w10, [sp, #12]
  40c96c:	ldr	w0, [x8, x9, lsl #2]
  40c970:	bl	404d70 <ntohl@plt>
  40c974:	str	w0, [sp, #8]
  40c978:	ldr	w10, [sp, #8]
  40c97c:	and	w10, w10, #0xfffff000
  40c980:	lsr	w10, w10, #12
  40c984:	str	w10, [sp, #4]
  40c988:	ldr	x0, [sp, #16]
  40c98c:	ldr	x1, [sp, #24]
  40c990:	ldr	w3, [sp, #4]
  40c994:	adrp	x2, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40c998:	add	x2, x2, #0xd04
  40c99c:	bl	404dd0 <snprintf@plt>
  40c9a0:	str	w0, [sp]
  40c9a4:	ldrsw	x8, [sp]
  40c9a8:	ldr	x9, [sp, #24]
  40c9ac:	cmp	x8, x9
  40c9b0:	b.cc	40c9b8 <mpls_ntop@@Base+0x104>  // b.lo, b.ul, b.last
  40c9b4:	b	40ca20 <mpls_ntop@@Base+0x16c>
  40c9b8:	ldr	w8, [sp, #8]
  40c9bc:	and	w8, w8, #0x100
  40c9c0:	cbz	w8, 40c9d0 <mpls_ntop@@Base+0x11c>
  40c9c4:	ldur	x8, [x29, #-24]
  40c9c8:	stur	x8, [x29, #-8]
  40c9cc:	b	40ca34 <mpls_ntop@@Base+0x180>
  40c9d0:	ldrsw	x8, [sp]
  40c9d4:	ldr	x9, [sp, #16]
  40c9d8:	add	x8, x9, x8
  40c9dc:	str	x8, [sp, #16]
  40c9e0:	ldrsw	x8, [sp]
  40c9e4:	ldr	x9, [sp, #24]
  40c9e8:	subs	x8, x9, x8
  40c9ec:	str	x8, [sp, #24]
  40c9f0:	ldr	x8, [sp, #24]
  40c9f4:	cbz	x8, 40ca1c <mpls_ntop@@Base+0x168>
  40c9f8:	ldr	x8, [sp, #16]
  40c9fc:	mov	w9, #0x2f                  	// #47
  40ca00:	strb	w9, [x8]
  40ca04:	ldr	x8, [sp, #16]
  40ca08:	add	x8, x8, #0x1
  40ca0c:	str	x8, [sp, #16]
  40ca10:	ldr	x8, [sp, #24]
  40ca14:	subs	x8, x8, #0x1
  40ca18:	str	x8, [sp, #24]
  40ca1c:	b	40c958 <mpls_ntop@@Base+0xa4>
  40ca20:	bl	4051b0 <__errno_location@plt>
  40ca24:	mov	w8, #0xfffffff9            	// #-7
  40ca28:	str	w8, [x0]
  40ca2c:	mov	x9, xzr
  40ca30:	stur	x9, [x29, #-8]
  40ca34:	ldur	x0, [x29, #-8]
  40ca38:	ldp	x29, x30, [sp, #64]
  40ca3c:	add	sp, sp, #0x50
  40ca40:	ret

000000000040ca44 <mpls_pton@@Base>:
  40ca44:	sub	sp, sp, #0x40
  40ca48:	stp	x29, x30, [sp, #48]
  40ca4c:	add	x29, sp, #0x30
  40ca50:	mov	x8, #0x4                   	// #4
  40ca54:	stur	w0, [x29, #-4]
  40ca58:	stur	x1, [x29, #-16]
  40ca5c:	str	x2, [sp, #24]
  40ca60:	str	x3, [sp, #16]
  40ca64:	ldr	x9, [sp, #16]
  40ca68:	udiv	x8, x9, x8
  40ca6c:	str	w8, [sp, #12]
  40ca70:	ldur	w8, [x29, #-4]
  40ca74:	cmp	w8, #0x1c
  40ca78:	cset	w8, eq  // eq = none
  40ca7c:	eor	w8, w8, #0x1
  40ca80:	tbnz	w8, #0, 40caa8 <mpls_pton@@Base+0x64>
  40ca84:	b	40ca88 <mpls_pton@@Base+0x44>
  40ca88:	bl	4051b0 <__errno_location@plt>
  40ca8c:	str	wzr, [x0]
  40ca90:	ldur	x0, [x29, #-16]
  40ca94:	ldr	x1, [sp, #24]
  40ca98:	ldr	w2, [sp, #12]
  40ca9c:	bl	40cacc <mpls_pton@@Base+0x88>
  40caa0:	str	w0, [sp, #8]
  40caa4:	b	40cabc <mpls_pton@@Base+0x78>
  40caa8:	bl	4051b0 <__errno_location@plt>
  40caac:	mov	w8, #0x61                  	// #97
  40cab0:	str	w8, [x0]
  40cab4:	mov	w8, #0xffffffff            	// #-1
  40cab8:	str	w8, [sp, #8]
  40cabc:	ldr	w0, [sp, #8]
  40cac0:	ldp	x29, x30, [sp, #48]
  40cac4:	add	sp, sp, #0x40
  40cac8:	ret
  40cacc:	sub	sp, sp, #0x50
  40cad0:	stp	x29, x30, [sp, #64]
  40cad4:	add	x29, sp, #0x40
  40cad8:	stur	x0, [x29, #-16]
  40cadc:	stur	x1, [x29, #-24]
  40cae0:	stur	w2, [x29, #-28]
  40cae4:	str	wzr, [sp, #20]
  40cae8:	ldr	w8, [sp, #20]
  40caec:	ldur	w9, [x29, #-28]
  40caf0:	cmp	w8, w9
  40caf4:	b.cs	40cbc4 <mpls_pton@@Base+0x180>  // b.hs, b.nlast
  40caf8:	ldur	x0, [x29, #-16]
  40cafc:	add	x1, sp, #0x18
  40cb00:	mov	w8, wzr
  40cb04:	mov	w2, w8
  40cb08:	bl	404cb0 <strtoul@plt>
  40cb0c:	str	x0, [sp, #8]
  40cb10:	ldr	x9, [sp, #8]
  40cb14:	cmp	x9, #0x100, lsl #12
  40cb18:	b.cc	40cb24 <mpls_pton@@Base+0xe0>  // b.lo, b.ul, b.last
  40cb1c:	stur	wzr, [x29, #-4]
  40cb20:	b	40cbe0 <mpls_pton@@Base+0x19c>
  40cb24:	ldr	x8, [sp, #24]
  40cb28:	ldur	x9, [x29, #-16]
  40cb2c:	cmp	x8, x9
  40cb30:	b.ne	40cb3c <mpls_pton@@Base+0xf8>  // b.any
  40cb34:	stur	wzr, [x29, #-4]
  40cb38:	b	40cbe0 <mpls_pton@@Base+0x19c>
  40cb3c:	ldr	x8, [sp, #8]
  40cb40:	lsl	x8, x8, #12
  40cb44:	mov	w0, w8
  40cb48:	bl	404d10 <htonl@plt>
  40cb4c:	ldur	x9, [x29, #-24]
  40cb50:	str	w0, [x9]
  40cb54:	ldr	x9, [sp, #24]
  40cb58:	ldrb	w8, [x9]
  40cb5c:	cbnz	w8, 40cb84 <mpls_pton@@Base+0x140>
  40cb60:	mov	w0, #0x100                 	// #256
  40cb64:	bl	404d10 <htonl@plt>
  40cb68:	ldur	x8, [x29, #-24]
  40cb6c:	ldr	w9, [x8]
  40cb70:	orr	w9, w9, w0
  40cb74:	str	w9, [x8]
  40cb78:	mov	w9, #0x1                   	// #1
  40cb7c:	stur	w9, [x29, #-4]
  40cb80:	b	40cbe0 <mpls_pton@@Base+0x19c>
  40cb84:	ldr	x8, [sp, #24]
  40cb88:	ldrb	w9, [x8]
  40cb8c:	cmp	w9, #0x2f
  40cb90:	b.eq	40cb9c <mpls_pton@@Base+0x158>  // b.none
  40cb94:	stur	wzr, [x29, #-4]
  40cb98:	b	40cbe0 <mpls_pton@@Base+0x19c>
  40cb9c:	ldr	x8, [sp, #24]
  40cba0:	add	x8, x8, #0x1
  40cba4:	stur	x8, [x29, #-16]
  40cba8:	ldur	x8, [x29, #-24]
  40cbac:	add	x8, x8, #0x4
  40cbb0:	stur	x8, [x29, #-24]
  40cbb4:	ldr	w8, [sp, #20]
  40cbb8:	add	w8, w8, #0x1
  40cbbc:	str	w8, [sp, #20]
  40cbc0:	b	40cae8 <mpls_pton@@Base+0xa4>
  40cbc4:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40cbc8:	ldr	x8, [x8, #3992]
  40cbcc:	ldr	x0, [x8]
  40cbd0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cbd4:	add	x1, x1, #0xdb5
  40cbd8:	bl	4051e0 <fprintf@plt>
  40cbdc:	stur	wzr, [x29, #-4]
  40cbe0:	ldur	w0, [x29, #-4]
  40cbe4:	ldp	x29, x30, [sp, #64]
  40cbe8:	add	sp, sp, #0x50
  40cbec:	ret

000000000040cbf0 <jsonw_new@@Base>:
  40cbf0:	sub	sp, sp, #0x20
  40cbf4:	stp	x29, x30, [sp, #16]
  40cbf8:	add	x29, sp, #0x10
  40cbfc:	mov	x8, #0x10                  	// #16
  40cc00:	str	x0, [sp, #8]
  40cc04:	mov	x0, x8
  40cc08:	bl	404e40 <malloc@plt>
  40cc0c:	str	x0, [sp]
  40cc10:	ldr	x8, [sp]
  40cc14:	cbz	x8, 40cc40 <jsonw_new@@Base+0x50>
  40cc18:	ldr	x8, [sp, #8]
  40cc1c:	ldr	x9, [sp]
  40cc20:	str	x8, [x9]
  40cc24:	ldr	x8, [sp]
  40cc28:	str	wzr, [x8, #8]
  40cc2c:	ldr	x8, [sp]
  40cc30:	mov	w10, #0x0                   	// #0
  40cc34:	strb	w10, [x8, #12]
  40cc38:	ldr	x8, [sp]
  40cc3c:	strb	w10, [x8, #13]
  40cc40:	ldr	x0, [sp]
  40cc44:	ldp	x29, x30, [sp, #16]
  40cc48:	add	sp, sp, #0x20
  40cc4c:	ret

000000000040cc50 <jsonw_destroy@@Base>:
  40cc50:	sub	sp, sp, #0x20
  40cc54:	stp	x29, x30, [sp, #16]
  40cc58:	add	x29, sp, #0x10
  40cc5c:	str	x0, [sp, #8]
  40cc60:	ldr	x8, [sp, #8]
  40cc64:	ldr	x8, [x8]
  40cc68:	str	x8, [sp]
  40cc6c:	ldr	x8, [sp]
  40cc70:	ldr	w9, [x8, #8]
  40cc74:	cbnz	w9, 40cc7c <jsonw_destroy@@Base+0x2c>
  40cc78:	b	40cc9c <jsonw_destroy@@Base+0x4c>
  40cc7c:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cc80:	add	x0, x0, #0xdce
  40cc84:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cc88:	add	x1, x1, #0xddf
  40cc8c:	mov	w2, #0x6e                  	// #110
  40cc90:	adrp	x3, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cc94:	add	x3, x3, #0xded
  40cc98:	bl	4051a0 <__assert_fail@plt>
  40cc9c:	ldr	x8, [sp]
  40cca0:	ldr	x1, [x8]
  40cca4:	adrp	x0, 412000 <_IO_stdin_used@@Base+0xb00>
  40cca8:	add	x0, x0, #0x203
  40ccac:	bl	404cd0 <fputs@plt>
  40ccb0:	ldr	x8, [sp]
  40ccb4:	ldr	x8, [x8]
  40ccb8:	mov	x0, x8
  40ccbc:	bl	4050a0 <fflush@plt>
  40ccc0:	ldr	x8, [sp]
  40ccc4:	mov	x0, x8
  40ccc8:	bl	405020 <free@plt>
  40cccc:	ldr	x8, [sp, #8]
  40ccd0:	mov	x9, xzr
  40ccd4:	str	x9, [x8]
  40ccd8:	ldp	x29, x30, [sp, #16]
  40ccdc:	add	sp, sp, #0x20
  40cce0:	ret

000000000040cce4 <jsonw_pretty@@Base>:
  40cce4:	sub	sp, sp, #0x10
  40cce8:	str	x0, [sp, #8]
  40ccec:	mov	w8, #0x1                   	// #1
  40ccf0:	and	w8, w1, w8
  40ccf4:	strb	w8, [sp, #7]
  40ccf8:	ldrb	w8, [sp, #7]
  40ccfc:	ldr	x9, [sp, #8]
  40cd00:	and	w8, w8, #0x1
  40cd04:	strb	w8, [x9, #12]
  40cd08:	add	sp, sp, #0x10
  40cd0c:	ret

000000000040cd10 <jsonw_name@@Base>:
  40cd10:	sub	sp, sp, #0x30
  40cd14:	stp	x29, x30, [sp, #32]
  40cd18:	add	x29, sp, #0x20
  40cd1c:	mov	w8, #0x0                   	// #0
  40cd20:	mov	w9, #0x3a                  	// #58
  40cd24:	stur	x0, [x29, #-8]
  40cd28:	str	x1, [sp, #16]
  40cd2c:	ldur	x0, [x29, #-8]
  40cd30:	str	w8, [sp, #12]
  40cd34:	str	w9, [sp, #8]
  40cd38:	bl	40cd98 <jsonw_name@@Base+0x88>
  40cd3c:	ldur	x0, [x29, #-8]
  40cd40:	bl	40cde0 <jsonw_name@@Base+0xd0>
  40cd44:	ldur	x10, [x29, #-8]
  40cd48:	ldr	w8, [sp, #12]
  40cd4c:	strb	w8, [x10, #13]
  40cd50:	ldur	x0, [x29, #-8]
  40cd54:	ldr	x1, [sp, #16]
  40cd58:	bl	40ce28 <jsonw_name@@Base+0x118>
  40cd5c:	ldur	x10, [x29, #-8]
  40cd60:	ldr	x1, [x10]
  40cd64:	ldr	w0, [sp, #8]
  40cd68:	bl	404db0 <putc@plt>
  40cd6c:	ldur	x10, [x29, #-8]
  40cd70:	ldrb	w8, [x10, #12]
  40cd74:	tbnz	w8, #0, 40cd7c <jsonw_name@@Base+0x6c>
  40cd78:	b	40cd8c <jsonw_name@@Base+0x7c>
  40cd7c:	ldur	x8, [x29, #-8]
  40cd80:	ldr	x1, [x8]
  40cd84:	mov	w0, #0x20                  	// #32
  40cd88:	bl	404db0 <putc@plt>
  40cd8c:	ldp	x29, x30, [sp, #32]
  40cd90:	add	sp, sp, #0x30
  40cd94:	ret
  40cd98:	sub	sp, sp, #0x20
  40cd9c:	stp	x29, x30, [sp, #16]
  40cda0:	add	x29, sp, #0x10
  40cda4:	str	x0, [sp, #8]
  40cda8:	ldr	x8, [sp, #8]
  40cdac:	ldrb	w9, [x8, #13]
  40cdb0:	cbz	w9, 40cdc8 <jsonw_name@@Base+0xb8>
  40cdb4:	ldr	x8, [sp, #8]
  40cdb8:	ldrb	w0, [x8, #13]
  40cdbc:	ldr	x8, [sp, #8]
  40cdc0:	ldr	x1, [x8]
  40cdc4:	bl	404db0 <putc@plt>
  40cdc8:	ldr	x8, [sp, #8]
  40cdcc:	mov	w9, #0x2c                  	// #44
  40cdd0:	strb	w9, [x8, #13]
  40cdd4:	ldp	x29, x30, [sp, #16]
  40cdd8:	add	sp, sp, #0x20
  40cddc:	ret
  40cde0:	sub	sp, sp, #0x20
  40cde4:	stp	x29, x30, [sp, #16]
  40cde8:	add	x29, sp, #0x10
  40cdec:	str	x0, [sp, #8]
  40cdf0:	ldr	x8, [sp, #8]
  40cdf4:	ldrb	w9, [x8, #12]
  40cdf8:	tbnz	w9, #0, 40ce00 <jsonw_name@@Base+0xf0>
  40cdfc:	b	40ce1c <jsonw_name@@Base+0x10c>
  40ce00:	ldr	x8, [sp, #8]
  40ce04:	ldr	x1, [x8]
  40ce08:	mov	w0, #0xa                   	// #10
  40ce0c:	bl	404db0 <putc@plt>
  40ce10:	ldr	x8, [sp, #8]
  40ce14:	mov	x0, x8
  40ce18:	bl	40d87c <jsonw_null_field@@Base+0x34>
  40ce1c:	ldp	x29, x30, [sp, #16]
  40ce20:	add	sp, sp, #0x20
  40ce24:	ret
  40ce28:	sub	sp, sp, #0x30
  40ce2c:	stp	x29, x30, [sp, #32]
  40ce30:	add	x29, sp, #0x20
  40ce34:	mov	w8, #0x22                  	// #34
  40ce38:	stur	x0, [x29, #-8]
  40ce3c:	str	x1, [sp, #16]
  40ce40:	ldur	x9, [x29, #-8]
  40ce44:	ldr	x1, [x9]
  40ce48:	mov	w0, w8
  40ce4c:	bl	404db0 <putc@plt>
  40ce50:	ldr	x8, [sp, #16]
  40ce54:	ldrb	w9, [x8]
  40ce58:	cbz	w9, 40cfc8 <jsonw_name@@Base+0x2b8>
  40ce5c:	ldr	x8, [sp, #16]
  40ce60:	ldrb	w9, [x8]
  40ce64:	cmp	w9, #0x8
  40ce68:	str	w9, [sp, #12]
  40ce6c:	b.eq	40cf44 <jsonw_name@@Base+0x234>  // b.none
  40ce70:	b	40ce74 <jsonw_name@@Base+0x164>
  40ce74:	ldr	w8, [sp, #12]
  40ce78:	cmp	w8, #0x9
  40ce7c:	b.eq	40cee4 <jsonw_name@@Base+0x1d4>  // b.none
  40ce80:	b	40ce84 <jsonw_name@@Base+0x174>
  40ce84:	ldr	w8, [sp, #12]
  40ce88:	cmp	w8, #0xa
  40ce8c:	b.eq	40cefc <jsonw_name@@Base+0x1ec>  // b.none
  40ce90:	b	40ce94 <jsonw_name@@Base+0x184>
  40ce94:	ldr	w8, [sp, #12]
  40ce98:	cmp	w8, #0xc
  40ce9c:	b.eq	40cf2c <jsonw_name@@Base+0x21c>  // b.none
  40cea0:	b	40cea4 <jsonw_name@@Base+0x194>
  40cea4:	ldr	w8, [sp, #12]
  40cea8:	cmp	w8, #0xd
  40ceac:	b.eq	40cf14 <jsonw_name@@Base+0x204>  // b.none
  40ceb0:	b	40ceb4 <jsonw_name@@Base+0x1a4>
  40ceb4:	ldr	w8, [sp, #12]
  40ceb8:	cmp	w8, #0x22
  40cebc:	b.eq	40cf74 <jsonw_name@@Base+0x264>  // b.none
  40cec0:	b	40cec4 <jsonw_name@@Base+0x1b4>
  40cec4:	ldr	w8, [sp, #12]
  40cec8:	cmp	w8, #0x27
  40cecc:	b.eq	40cf8c <jsonw_name@@Base+0x27c>  // b.none
  40ced0:	b	40ced4 <jsonw_name@@Base+0x1c4>
  40ced4:	ldr	w8, [sp, #12]
  40ced8:	cmp	w8, #0x5c
  40cedc:	b.eq	40cf5c <jsonw_name@@Base+0x24c>  // b.none
  40cee0:	b	40cfa4 <jsonw_name@@Base+0x294>
  40cee4:	ldur	x8, [x29, #-8]
  40cee8:	ldr	x1, [x8]
  40ceec:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cef0:	add	x0, x0, #0xe39
  40cef4:	bl	404cd0 <fputs@plt>
  40cef8:	b	40cfb8 <jsonw_name@@Base+0x2a8>
  40cefc:	ldur	x8, [x29, #-8]
  40cf00:	ldr	x1, [x8]
  40cf04:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cf08:	add	x0, x0, #0xe3c
  40cf0c:	bl	404cd0 <fputs@plt>
  40cf10:	b	40cfb8 <jsonw_name@@Base+0x2a8>
  40cf14:	ldur	x8, [x29, #-8]
  40cf18:	ldr	x1, [x8]
  40cf1c:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cf20:	add	x0, x0, #0xe3f
  40cf24:	bl	404cd0 <fputs@plt>
  40cf28:	b	40cfb8 <jsonw_name@@Base+0x2a8>
  40cf2c:	ldur	x8, [x29, #-8]
  40cf30:	ldr	x1, [x8]
  40cf34:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cf38:	add	x0, x0, #0xe42
  40cf3c:	bl	404cd0 <fputs@plt>
  40cf40:	b	40cfb8 <jsonw_name@@Base+0x2a8>
  40cf44:	ldur	x8, [x29, #-8]
  40cf48:	ldr	x1, [x8]
  40cf4c:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cf50:	add	x0, x0, #0xe45
  40cf54:	bl	404cd0 <fputs@plt>
  40cf58:	b	40cfb8 <jsonw_name@@Base+0x2a8>
  40cf5c:	ldur	x8, [x29, #-8]
  40cf60:	ldr	x1, [x8]
  40cf64:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cf68:	add	x0, x0, #0xe48
  40cf6c:	bl	404cd0 <fputs@plt>
  40cf70:	b	40cfb8 <jsonw_name@@Base+0x2a8>
  40cf74:	ldur	x8, [x29, #-8]
  40cf78:	ldr	x1, [x8]
  40cf7c:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cf80:	add	x0, x0, #0xe4b
  40cf84:	bl	404cd0 <fputs@plt>
  40cf88:	b	40cfb8 <jsonw_name@@Base+0x2a8>
  40cf8c:	ldur	x8, [x29, #-8]
  40cf90:	ldr	x1, [x8]
  40cf94:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40cf98:	add	x0, x0, #0xe4e
  40cf9c:	bl	404cd0 <fputs@plt>
  40cfa0:	b	40cfb8 <jsonw_name@@Base+0x2a8>
  40cfa4:	ldr	x8, [sp, #16]
  40cfa8:	ldrb	w0, [x8]
  40cfac:	ldur	x8, [x29, #-8]
  40cfb0:	ldr	x1, [x8]
  40cfb4:	bl	404db0 <putc@plt>
  40cfb8:	ldr	x8, [sp, #16]
  40cfbc:	add	x8, x8, #0x1
  40cfc0:	str	x8, [sp, #16]
  40cfc4:	b	40ce50 <jsonw_name@@Base+0x140>
  40cfc8:	ldur	x8, [x29, #-8]
  40cfcc:	ldr	x1, [x8]
  40cfd0:	mov	w0, #0x22                  	// #34
  40cfd4:	bl	404db0 <putc@plt>
  40cfd8:	ldp	x29, x30, [sp, #32]
  40cfdc:	add	sp, sp, #0x30
  40cfe0:	ret

000000000040cfe4 <jsonw_printf@@Base>:
  40cfe4:	sub	sp, sp, #0x120
  40cfe8:	stp	x29, x30, [sp, #256]
  40cfec:	str	x28, [sp, #272]
  40cff0:	add	x29, sp, #0x100
  40cff4:	str	q7, [sp, #112]
  40cff8:	str	q6, [sp, #96]
  40cffc:	str	q5, [sp, #80]
  40d000:	str	q4, [sp, #64]
  40d004:	str	q3, [sp, #48]
  40d008:	str	q2, [sp, #32]
  40d00c:	str	q1, [sp, #16]
  40d010:	str	q0, [sp]
  40d014:	str	x7, [sp, #168]
  40d018:	str	x6, [sp, #160]
  40d01c:	str	x5, [sp, #152]
  40d020:	str	x4, [sp, #144]
  40d024:	str	x3, [sp, #136]
  40d028:	str	x2, [sp, #128]
  40d02c:	stur	x0, [x29, #-8]
  40d030:	stur	x1, [x29, #-16]
  40d034:	mov	w8, #0xffffff80            	// #-128
  40d038:	stur	w8, [x29, #-20]
  40d03c:	mov	w8, #0xffffffd0            	// #-48
  40d040:	stur	w8, [x29, #-24]
  40d044:	mov	x9, sp
  40d048:	add	x9, x9, #0x80
  40d04c:	stur	x9, [x29, #-32]
  40d050:	add	x9, sp, #0x80
  40d054:	add	x9, x9, #0x30
  40d058:	stur	x9, [x29, #-40]
  40d05c:	add	x9, x29, #0x20
  40d060:	stur	x9, [x29, #-48]
  40d064:	ldur	x0, [x29, #-8]
  40d068:	bl	40cd98 <jsonw_name@@Base+0x88>
  40d06c:	ldur	x9, [x29, #-8]
  40d070:	ldr	x0, [x9]
  40d074:	ldur	x1, [x29, #-16]
  40d078:	ldur	q0, [x29, #-48]
  40d07c:	ldur	q1, [x29, #-32]
  40d080:	stur	q1, [x29, #-64]
  40d084:	stur	q0, [x29, #-80]
  40d088:	sub	x2, x29, #0x50
  40d08c:	bl	405180 <vfprintf@plt>
  40d090:	ldr	x28, [sp, #272]
  40d094:	ldp	x29, x30, [sp, #256]
  40d098:	add	sp, sp, #0x120
  40d09c:	ret

000000000040d0a0 <jsonw_start_object@@Base>:
  40d0a0:	sub	sp, sp, #0x20
  40d0a4:	stp	x29, x30, [sp, #16]
  40d0a8:	add	x29, sp, #0x10
  40d0ac:	mov	w1, #0x7b                  	// #123
  40d0b0:	str	x0, [sp, #8]
  40d0b4:	ldr	x0, [sp, #8]
  40d0b8:	bl	40d0c8 <jsonw_start_object@@Base+0x28>
  40d0bc:	ldp	x29, x30, [sp, #16]
  40d0c0:	add	sp, sp, #0x20
  40d0c4:	ret
  40d0c8:	sub	sp, sp, #0x20
  40d0cc:	stp	x29, x30, [sp, #16]
  40d0d0:	add	x29, sp, #0x10
  40d0d4:	mov	w8, #0x0                   	// #0
  40d0d8:	str	x0, [sp, #8]
  40d0dc:	str	w1, [sp, #4]
  40d0e0:	ldr	x0, [sp, #8]
  40d0e4:	str	w8, [sp]
  40d0e8:	bl	40cd98 <jsonw_name@@Base+0x88>
  40d0ec:	ldr	w0, [sp, #4]
  40d0f0:	ldr	x9, [sp, #8]
  40d0f4:	ldr	x1, [x9]
  40d0f8:	bl	404db0 <putc@plt>
  40d0fc:	ldr	x9, [sp, #8]
  40d100:	ldr	w8, [x9, #8]
  40d104:	add	w8, w8, #0x1
  40d108:	str	w8, [x9, #8]
  40d10c:	ldr	x9, [sp, #8]
  40d110:	ldr	w8, [sp]
  40d114:	strb	w8, [x9, #13]
  40d118:	ldp	x29, x30, [sp, #16]
  40d11c:	add	sp, sp, #0x20
  40d120:	ret

000000000040d124 <jsonw_end_object@@Base>:
  40d124:	sub	sp, sp, #0x20
  40d128:	stp	x29, x30, [sp, #16]
  40d12c:	add	x29, sp, #0x10
  40d130:	mov	w1, #0x7d                  	// #125
  40d134:	str	x0, [sp, #8]
  40d138:	ldr	x0, [sp, #8]
  40d13c:	bl	40d14c <jsonw_end_object@@Base+0x28>
  40d140:	ldp	x29, x30, [sp, #16]
  40d144:	add	sp, sp, #0x20
  40d148:	ret
  40d14c:	sub	sp, sp, #0x20
  40d150:	stp	x29, x30, [sp, #16]
  40d154:	add	x29, sp, #0x10
  40d158:	str	x0, [sp, #8]
  40d15c:	str	w1, [sp, #4]
  40d160:	ldr	x8, [sp, #8]
  40d164:	ldr	w9, [x8, #8]
  40d168:	cmp	w9, #0x0
  40d16c:	cset	w9, ls  // ls = plast
  40d170:	tbnz	w9, #0, 40d178 <jsonw_end_object@@Base+0x54>
  40d174:	b	40d198 <jsonw_end_object@@Base+0x74>
  40d178:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d17c:	add	x0, x0, #0xe51
  40d180:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d184:	add	x1, x1, #0xddf
  40d188:	mov	w2, #0x85                  	// #133
  40d18c:	adrp	x3, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d190:	add	x3, x3, #0xe61
  40d194:	bl	4051a0 <__assert_fail@plt>
  40d198:	ldr	x8, [sp, #8]
  40d19c:	ldr	w9, [x8, #8]
  40d1a0:	subs	w9, w9, #0x1
  40d1a4:	str	w9, [x8, #8]
  40d1a8:	ldr	x8, [sp, #8]
  40d1ac:	ldrb	w9, [x8, #13]
  40d1b0:	cbz	w9, 40d1bc <jsonw_end_object@@Base+0x98>
  40d1b4:	ldr	x0, [sp, #8]
  40d1b8:	bl	40cde0 <jsonw_name@@Base+0xd0>
  40d1bc:	ldr	w0, [sp, #4]
  40d1c0:	ldr	x8, [sp, #8]
  40d1c4:	ldr	x1, [x8]
  40d1c8:	bl	404db0 <putc@plt>
  40d1cc:	ldr	x8, [sp, #8]
  40d1d0:	mov	w9, #0x2c                  	// #44
  40d1d4:	strb	w9, [x8, #13]
  40d1d8:	ldp	x29, x30, [sp, #16]
  40d1dc:	add	sp, sp, #0x20
  40d1e0:	ret

000000000040d1e4 <jsonw_start_array@@Base>:
  40d1e4:	sub	sp, sp, #0x20
  40d1e8:	stp	x29, x30, [sp, #16]
  40d1ec:	add	x29, sp, #0x10
  40d1f0:	mov	w1, #0x5b                  	// #91
  40d1f4:	str	x0, [sp, #8]
  40d1f8:	ldr	x0, [sp, #8]
  40d1fc:	bl	40d0c8 <jsonw_start_object@@Base+0x28>
  40d200:	ldr	x8, [sp, #8]
  40d204:	ldrb	w9, [x8, #12]
  40d208:	tbnz	w9, #0, 40d210 <jsonw_start_array@@Base+0x2c>
  40d20c:	b	40d220 <jsonw_start_array@@Base+0x3c>
  40d210:	ldr	x8, [sp, #8]
  40d214:	ldr	x1, [x8]
  40d218:	mov	w0, #0x20                  	// #32
  40d21c:	bl	404db0 <putc@plt>
  40d220:	ldp	x29, x30, [sp, #16]
  40d224:	add	sp, sp, #0x20
  40d228:	ret

000000000040d22c <jsonw_end_array@@Base>:
  40d22c:	sub	sp, sp, #0x20
  40d230:	stp	x29, x30, [sp, #16]
  40d234:	add	x29, sp, #0x10
  40d238:	str	x0, [sp, #8]
  40d23c:	ldr	x8, [sp, #8]
  40d240:	ldrb	w9, [x8, #12]
  40d244:	tbnz	w9, #0, 40d24c <jsonw_end_array@@Base+0x20>
  40d248:	b	40d268 <jsonw_end_array@@Base+0x3c>
  40d24c:	ldr	x8, [sp, #8]
  40d250:	ldrb	w9, [x8, #13]
  40d254:	cbz	w9, 40d268 <jsonw_end_array@@Base+0x3c>
  40d258:	ldr	x8, [sp, #8]
  40d25c:	ldr	x1, [x8]
  40d260:	mov	w0, #0x20                  	// #32
  40d264:	bl	404db0 <putc@plt>
  40d268:	ldr	x8, [sp, #8]
  40d26c:	mov	w9, #0x0                   	// #0
  40d270:	strb	w9, [x8, #13]
  40d274:	ldr	x0, [sp, #8]
  40d278:	mov	w1, #0x5d                  	// #93
  40d27c:	bl	40d14c <jsonw_end_object@@Base+0x28>
  40d280:	ldp	x29, x30, [sp, #16]
  40d284:	add	sp, sp, #0x20
  40d288:	ret

000000000040d28c <jsonw_string@@Base>:
  40d28c:	sub	sp, sp, #0x20
  40d290:	stp	x29, x30, [sp, #16]
  40d294:	add	x29, sp, #0x10
  40d298:	str	x0, [sp, #8]
  40d29c:	str	x1, [sp]
  40d2a0:	ldr	x0, [sp, #8]
  40d2a4:	bl	40cd98 <jsonw_name@@Base+0x88>
  40d2a8:	ldr	x0, [sp, #8]
  40d2ac:	ldr	x1, [sp]
  40d2b0:	bl	40ce28 <jsonw_name@@Base+0x118>
  40d2b4:	ldp	x29, x30, [sp, #16]
  40d2b8:	add	sp, sp, #0x20
  40d2bc:	ret

000000000040d2c0 <jsonw_bool@@Base>:
  40d2c0:	sub	sp, sp, #0x20
  40d2c4:	stp	x29, x30, [sp, #16]
  40d2c8:	add	x29, sp, #0x10
  40d2cc:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d2d0:	add	x8, x8, #0xd0e
  40d2d4:	adrp	x9, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d2d8:	add	x9, x9, #0xd13
  40d2dc:	adrp	x10, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d2e0:	add	x10, x10, #0x914
  40d2e4:	str	x0, [sp, #8]
  40d2e8:	and	w11, w1, #0x1
  40d2ec:	strb	w11, [sp, #7]
  40d2f0:	ldr	x0, [sp, #8]
  40d2f4:	ldrb	w11, [sp, #7]
  40d2f8:	tst	w11, #0x1
  40d2fc:	csel	x2, x8, x9, ne  // ne = any
  40d300:	mov	x1, x10
  40d304:	bl	40cfe4 <jsonw_printf@@Base>
  40d308:	ldp	x29, x30, [sp, #16]
  40d30c:	add	sp, sp, #0x20
  40d310:	ret

000000000040d314 <jsonw_null@@Base>:
  40d314:	sub	sp, sp, #0x20
  40d318:	stp	x29, x30, [sp, #16]
  40d31c:	add	x29, sp, #0x10
  40d320:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d324:	add	x1, x1, #0xe12
  40d328:	str	x0, [sp, #8]
  40d32c:	ldr	x0, [sp, #8]
  40d330:	bl	40cfe4 <jsonw_printf@@Base>
  40d334:	ldp	x29, x30, [sp, #16]
  40d338:	add	sp, sp, #0x20
  40d33c:	ret

000000000040d340 <jsonw_float@@Base>:
  40d340:	sub	sp, sp, #0x20
  40d344:	stp	x29, x30, [sp, #16]
  40d348:	add	x29, sp, #0x10
  40d34c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d350:	add	x1, x1, #0xe17
  40d354:	str	x0, [sp, #8]
  40d358:	str	d0, [sp]
  40d35c:	ldr	x0, [sp, #8]
  40d360:	ldr	d0, [sp]
  40d364:	bl	40cfe4 <jsonw_printf@@Base>
  40d368:	ldp	x29, x30, [sp, #16]
  40d36c:	add	sp, sp, #0x20
  40d370:	ret

000000000040d374 <jsonw_hhu@@Base>:
  40d374:	sub	sp, sp, #0x20
  40d378:	stp	x29, x30, [sp, #16]
  40d37c:	add	x29, sp, #0x10
  40d380:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d384:	add	x8, x8, #0xe1a
  40d388:	str	x0, [sp, #8]
  40d38c:	strb	w1, [sp, #7]
  40d390:	ldr	x0, [sp, #8]
  40d394:	ldrb	w2, [sp, #7]
  40d398:	mov	x1, x8
  40d39c:	bl	40cfe4 <jsonw_printf@@Base>
  40d3a0:	ldp	x29, x30, [sp, #16]
  40d3a4:	add	sp, sp, #0x20
  40d3a8:	ret

000000000040d3ac <jsonw_hu@@Base>:
  40d3ac:	sub	sp, sp, #0x20
  40d3b0:	stp	x29, x30, [sp, #16]
  40d3b4:	add	x29, sp, #0x10
  40d3b8:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d3bc:	add	x8, x8, #0xe1f
  40d3c0:	str	x0, [sp, #8]
  40d3c4:	strh	w1, [sp, #6]
  40d3c8:	ldr	x0, [sp, #8]
  40d3cc:	ldrh	w2, [sp, #6]
  40d3d0:	mov	x1, x8
  40d3d4:	bl	40cfe4 <jsonw_printf@@Base>
  40d3d8:	ldp	x29, x30, [sp, #16]
  40d3dc:	add	sp, sp, #0x20
  40d3e0:	ret

000000000040d3e4 <jsonw_uint@@Base>:
  40d3e4:	sub	sp, sp, #0x20
  40d3e8:	stp	x29, x30, [sp, #16]
  40d3ec:	add	x29, sp, #0x10
  40d3f0:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d3f4:	add	x8, x8, #0xd04
  40d3f8:	str	x0, [sp, #8]
  40d3fc:	str	w1, [sp, #4]
  40d400:	ldr	x0, [sp, #8]
  40d404:	ldr	w2, [sp, #4]
  40d408:	mov	x1, x8
  40d40c:	bl	40cfe4 <jsonw_printf@@Base>
  40d410:	ldp	x29, x30, [sp, #16]
  40d414:	add	sp, sp, #0x20
  40d418:	ret

000000000040d41c <jsonw_u64@@Base>:
  40d41c:	sub	sp, sp, #0x20
  40d420:	stp	x29, x30, [sp, #16]
  40d424:	add	x29, sp, #0x10
  40d428:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d42c:	add	x8, x8, #0xe23
  40d430:	str	x0, [sp, #8]
  40d434:	str	x1, [sp]
  40d438:	ldr	x0, [sp, #8]
  40d43c:	ldr	x2, [sp]
  40d440:	mov	x1, x8
  40d444:	bl	40cfe4 <jsonw_printf@@Base>
  40d448:	ldp	x29, x30, [sp, #16]
  40d44c:	add	sp, sp, #0x20
  40d450:	ret

000000000040d454 <jsonw_xint@@Base>:
  40d454:	sub	sp, sp, #0x20
  40d458:	stp	x29, x30, [sp, #16]
  40d45c:	add	x29, sp, #0x10
  40d460:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d464:	add	x8, x8, #0xe27
  40d468:	str	x0, [sp, #8]
  40d46c:	str	x1, [sp]
  40d470:	ldr	x0, [sp, #8]
  40d474:	ldr	x2, [sp]
  40d478:	mov	x1, x8
  40d47c:	bl	40cfe4 <jsonw_printf@@Base>
  40d480:	ldp	x29, x30, [sp, #16]
  40d484:	add	sp, sp, #0x20
  40d488:	ret

000000000040d48c <jsonw_luint@@Base>:
  40d48c:	sub	sp, sp, #0x20
  40d490:	stp	x29, x30, [sp, #16]
  40d494:	add	x29, sp, #0x10
  40d498:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d49c:	add	x8, x8, #0xe23
  40d4a0:	str	x0, [sp, #8]
  40d4a4:	str	x1, [sp]
  40d4a8:	ldr	x0, [sp, #8]
  40d4ac:	ldr	x2, [sp]
  40d4b0:	mov	x1, x8
  40d4b4:	bl	40cfe4 <jsonw_printf@@Base>
  40d4b8:	ldp	x29, x30, [sp, #16]
  40d4bc:	add	sp, sp, #0x20
  40d4c0:	ret

000000000040d4c4 <jsonw_lluint@@Base>:
  40d4c4:	sub	sp, sp, #0x20
  40d4c8:	stp	x29, x30, [sp, #16]
  40d4cc:	add	x29, sp, #0x10
  40d4d0:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d4d4:	add	x8, x8, #0xe2b
  40d4d8:	str	x0, [sp, #8]
  40d4dc:	str	x1, [sp]
  40d4e0:	ldr	x0, [sp, #8]
  40d4e4:	ldr	x2, [sp]
  40d4e8:	mov	x1, x8
  40d4ec:	bl	40cfe4 <jsonw_printf@@Base>
  40d4f0:	ldp	x29, x30, [sp, #16]
  40d4f4:	add	sp, sp, #0x20
  40d4f8:	ret

000000000040d4fc <jsonw_int@@Base>:
  40d4fc:	sub	sp, sp, #0x20
  40d500:	stp	x29, x30, [sp, #16]
  40d504:	add	x29, sp, #0x10
  40d508:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d50c:	add	x8, x8, #0xc7b
  40d510:	str	x0, [sp, #8]
  40d514:	str	w1, [sp, #4]
  40d518:	ldr	x0, [sp, #8]
  40d51c:	ldr	w2, [sp, #4]
  40d520:	mov	x1, x8
  40d524:	bl	40cfe4 <jsonw_printf@@Base>
  40d528:	ldp	x29, x30, [sp, #16]
  40d52c:	add	sp, sp, #0x20
  40d530:	ret

000000000040d534 <jsonw_s64@@Base>:
  40d534:	sub	sp, sp, #0x20
  40d538:	stp	x29, x30, [sp, #16]
  40d53c:	add	x29, sp, #0x10
  40d540:	adrp	x8, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d544:	add	x8, x8, #0xe30
  40d548:	str	x0, [sp, #8]
  40d54c:	str	x1, [sp]
  40d550:	ldr	x0, [sp, #8]
  40d554:	ldr	x2, [sp]
  40d558:	mov	x1, x8
  40d55c:	bl	40cfe4 <jsonw_printf@@Base>
  40d560:	ldp	x29, x30, [sp, #16]
  40d564:	add	sp, sp, #0x20
  40d568:	ret

000000000040d56c <jsonw_string_field@@Base>:
  40d56c:	sub	sp, sp, #0x30
  40d570:	stp	x29, x30, [sp, #32]
  40d574:	add	x29, sp, #0x20
  40d578:	stur	x0, [x29, #-8]
  40d57c:	str	x1, [sp, #16]
  40d580:	str	x2, [sp, #8]
  40d584:	ldur	x0, [x29, #-8]
  40d588:	ldr	x1, [sp, #16]
  40d58c:	bl	40cd10 <jsonw_name@@Base>
  40d590:	ldur	x0, [x29, #-8]
  40d594:	ldr	x1, [sp, #8]
  40d598:	bl	40d28c <jsonw_string@@Base>
  40d59c:	ldp	x29, x30, [sp, #32]
  40d5a0:	add	sp, sp, #0x30
  40d5a4:	ret

000000000040d5a8 <jsonw_bool_field@@Base>:
  40d5a8:	sub	sp, sp, #0x30
  40d5ac:	stp	x29, x30, [sp, #32]
  40d5b0:	add	x29, sp, #0x20
  40d5b4:	stur	x0, [x29, #-8]
  40d5b8:	str	x1, [sp, #16]
  40d5bc:	mov	w8, #0x1                   	// #1
  40d5c0:	and	w8, w2, w8
  40d5c4:	strb	w8, [sp, #15]
  40d5c8:	ldur	x0, [x29, #-8]
  40d5cc:	ldr	x1, [sp, #16]
  40d5d0:	bl	40cd10 <jsonw_name@@Base>
  40d5d4:	ldur	x0, [x29, #-8]
  40d5d8:	ldrb	w8, [sp, #15]
  40d5dc:	and	w1, w8, #0x1
  40d5e0:	bl	40d2c0 <jsonw_bool@@Base>
  40d5e4:	ldp	x29, x30, [sp, #32]
  40d5e8:	add	sp, sp, #0x30
  40d5ec:	ret

000000000040d5f0 <jsonw_float_field@@Base>:
  40d5f0:	sub	sp, sp, #0x30
  40d5f4:	stp	x29, x30, [sp, #32]
  40d5f8:	add	x29, sp, #0x20
  40d5fc:	stur	x0, [x29, #-8]
  40d600:	str	x1, [sp, #16]
  40d604:	str	d0, [sp, #8]
  40d608:	ldur	x0, [x29, #-8]
  40d60c:	ldr	x1, [sp, #16]
  40d610:	bl	40cd10 <jsonw_name@@Base>
  40d614:	ldur	x0, [x29, #-8]
  40d618:	ldr	d0, [sp, #8]
  40d61c:	bl	40d340 <jsonw_float@@Base>
  40d620:	ldp	x29, x30, [sp, #32]
  40d624:	add	sp, sp, #0x30
  40d628:	ret

000000000040d62c <jsonw_uint_field@@Base>:
  40d62c:	sub	sp, sp, #0x30
  40d630:	stp	x29, x30, [sp, #32]
  40d634:	add	x29, sp, #0x20
  40d638:	stur	x0, [x29, #-8]
  40d63c:	str	x1, [sp, #16]
  40d640:	str	w2, [sp, #12]
  40d644:	ldur	x0, [x29, #-8]
  40d648:	ldr	x1, [sp, #16]
  40d64c:	bl	40cd10 <jsonw_name@@Base>
  40d650:	ldur	x0, [x29, #-8]
  40d654:	ldr	w1, [sp, #12]
  40d658:	bl	40d3e4 <jsonw_uint@@Base>
  40d65c:	ldp	x29, x30, [sp, #32]
  40d660:	add	sp, sp, #0x30
  40d664:	ret

000000000040d668 <jsonw_u64_field@@Base>:
  40d668:	sub	sp, sp, #0x30
  40d66c:	stp	x29, x30, [sp, #32]
  40d670:	add	x29, sp, #0x20
  40d674:	stur	x0, [x29, #-8]
  40d678:	str	x1, [sp, #16]
  40d67c:	str	x2, [sp, #8]
  40d680:	ldur	x0, [x29, #-8]
  40d684:	ldr	x1, [sp, #16]
  40d688:	bl	40cd10 <jsonw_name@@Base>
  40d68c:	ldur	x0, [x29, #-8]
  40d690:	ldr	x1, [sp, #8]
  40d694:	bl	40d41c <jsonw_u64@@Base>
  40d698:	ldp	x29, x30, [sp, #32]
  40d69c:	add	sp, sp, #0x30
  40d6a0:	ret

000000000040d6a4 <jsonw_xint_field@@Base>:
  40d6a4:	sub	sp, sp, #0x30
  40d6a8:	stp	x29, x30, [sp, #32]
  40d6ac:	add	x29, sp, #0x20
  40d6b0:	stur	x0, [x29, #-8]
  40d6b4:	str	x1, [sp, #16]
  40d6b8:	str	x2, [sp, #8]
  40d6bc:	ldur	x0, [x29, #-8]
  40d6c0:	ldr	x1, [sp, #16]
  40d6c4:	bl	40cd10 <jsonw_name@@Base>
  40d6c8:	ldur	x0, [x29, #-8]
  40d6cc:	ldr	x1, [sp, #8]
  40d6d0:	bl	40d454 <jsonw_xint@@Base>
  40d6d4:	ldp	x29, x30, [sp, #32]
  40d6d8:	add	sp, sp, #0x30
  40d6dc:	ret

000000000040d6e0 <jsonw_hhu_field@@Base>:
  40d6e0:	sub	sp, sp, #0x30
  40d6e4:	stp	x29, x30, [sp, #32]
  40d6e8:	add	x29, sp, #0x20
  40d6ec:	stur	x0, [x29, #-8]
  40d6f0:	str	x1, [sp, #16]
  40d6f4:	strb	w2, [sp, #15]
  40d6f8:	ldur	x0, [x29, #-8]
  40d6fc:	ldr	x1, [sp, #16]
  40d700:	bl	40cd10 <jsonw_name@@Base>
  40d704:	ldur	x0, [x29, #-8]
  40d708:	ldrb	w1, [sp, #15]
  40d70c:	bl	40d374 <jsonw_hhu@@Base>
  40d710:	ldp	x29, x30, [sp, #32]
  40d714:	add	sp, sp, #0x30
  40d718:	ret

000000000040d71c <jsonw_hu_field@@Base>:
  40d71c:	sub	sp, sp, #0x30
  40d720:	stp	x29, x30, [sp, #32]
  40d724:	add	x29, sp, #0x20
  40d728:	stur	x0, [x29, #-8]
  40d72c:	str	x1, [sp, #16]
  40d730:	strh	w2, [sp, #14]
  40d734:	ldur	x0, [x29, #-8]
  40d738:	ldr	x1, [sp, #16]
  40d73c:	bl	40cd10 <jsonw_name@@Base>
  40d740:	ldur	x0, [x29, #-8]
  40d744:	ldrh	w1, [sp, #14]
  40d748:	bl	40d3ac <jsonw_hu@@Base>
  40d74c:	ldp	x29, x30, [sp, #32]
  40d750:	add	sp, sp, #0x30
  40d754:	ret

000000000040d758 <jsonw_luint_field@@Base>:
  40d758:	sub	sp, sp, #0x30
  40d75c:	stp	x29, x30, [sp, #32]
  40d760:	add	x29, sp, #0x20
  40d764:	stur	x0, [x29, #-8]
  40d768:	str	x1, [sp, #16]
  40d76c:	str	x2, [sp, #8]
  40d770:	ldur	x0, [x29, #-8]
  40d774:	ldr	x1, [sp, #16]
  40d778:	bl	40cd10 <jsonw_name@@Base>
  40d77c:	ldur	x0, [x29, #-8]
  40d780:	ldr	x1, [sp, #8]
  40d784:	bl	40d48c <jsonw_luint@@Base>
  40d788:	ldp	x29, x30, [sp, #32]
  40d78c:	add	sp, sp, #0x30
  40d790:	ret

000000000040d794 <jsonw_lluint_field@@Base>:
  40d794:	sub	sp, sp, #0x30
  40d798:	stp	x29, x30, [sp, #32]
  40d79c:	add	x29, sp, #0x20
  40d7a0:	stur	x0, [x29, #-8]
  40d7a4:	str	x1, [sp, #16]
  40d7a8:	str	x2, [sp, #8]
  40d7ac:	ldur	x0, [x29, #-8]
  40d7b0:	ldr	x1, [sp, #16]
  40d7b4:	bl	40cd10 <jsonw_name@@Base>
  40d7b8:	ldur	x0, [x29, #-8]
  40d7bc:	ldr	x1, [sp, #8]
  40d7c0:	bl	40d4c4 <jsonw_lluint@@Base>
  40d7c4:	ldp	x29, x30, [sp, #32]
  40d7c8:	add	sp, sp, #0x30
  40d7cc:	ret

000000000040d7d0 <jsonw_int_field@@Base>:
  40d7d0:	sub	sp, sp, #0x30
  40d7d4:	stp	x29, x30, [sp, #32]
  40d7d8:	add	x29, sp, #0x20
  40d7dc:	stur	x0, [x29, #-8]
  40d7e0:	str	x1, [sp, #16]
  40d7e4:	str	w2, [sp, #12]
  40d7e8:	ldur	x0, [x29, #-8]
  40d7ec:	ldr	x1, [sp, #16]
  40d7f0:	bl	40cd10 <jsonw_name@@Base>
  40d7f4:	ldur	x0, [x29, #-8]
  40d7f8:	ldr	w1, [sp, #12]
  40d7fc:	bl	40d4fc <jsonw_int@@Base>
  40d800:	ldp	x29, x30, [sp, #32]
  40d804:	add	sp, sp, #0x30
  40d808:	ret

000000000040d80c <jsonw_s64_field@@Base>:
  40d80c:	sub	sp, sp, #0x30
  40d810:	stp	x29, x30, [sp, #32]
  40d814:	add	x29, sp, #0x20
  40d818:	stur	x0, [x29, #-8]
  40d81c:	str	x1, [sp, #16]
  40d820:	str	x2, [sp, #8]
  40d824:	ldur	x0, [x29, #-8]
  40d828:	ldr	x1, [sp, #16]
  40d82c:	bl	40cd10 <jsonw_name@@Base>
  40d830:	ldur	x0, [x29, #-8]
  40d834:	ldr	x1, [sp, #8]
  40d838:	bl	40d534 <jsonw_s64@@Base>
  40d83c:	ldp	x29, x30, [sp, #32]
  40d840:	add	sp, sp, #0x30
  40d844:	ret

000000000040d848 <jsonw_null_field@@Base>:
  40d848:	sub	sp, sp, #0x20
  40d84c:	stp	x29, x30, [sp, #16]
  40d850:	add	x29, sp, #0x10
  40d854:	str	x0, [sp, #8]
  40d858:	str	x1, [sp]
  40d85c:	ldr	x0, [sp, #8]
  40d860:	ldr	x1, [sp]
  40d864:	bl	40cd10 <jsonw_name@@Base>
  40d868:	ldr	x0, [sp, #8]
  40d86c:	bl	40d314 <jsonw_null@@Base>
  40d870:	ldp	x29, x30, [sp, #16]
  40d874:	add	sp, sp, #0x20
  40d878:	ret
  40d87c:	sub	sp, sp, #0x20
  40d880:	stp	x29, x30, [sp, #16]
  40d884:	add	x29, sp, #0x10
  40d888:	str	x0, [sp, #8]
  40d88c:	str	wzr, [sp, #4]
  40d890:	ldr	w8, [sp, #4]
  40d894:	ldr	x9, [sp, #8]
  40d898:	ldr	w10, [x9, #8]
  40d89c:	cmp	w8, w10
  40d8a0:	b.cs	40d8c8 <jsonw_null_field@@Base+0x80>  // b.hs, b.nlast
  40d8a4:	ldr	x8, [sp, #8]
  40d8a8:	ldr	x1, [x8]
  40d8ac:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40d8b0:	add	x0, x0, #0xe34
  40d8b4:	bl	404cd0 <fputs@plt>
  40d8b8:	ldr	w8, [sp, #4]
  40d8bc:	add	w8, w8, #0x1
  40d8c0:	str	w8, [sp, #4]
  40d8c4:	b	40d890 <jsonw_null_field@@Base+0x48>
  40d8c8:	ldp	x29, x30, [sp, #16]
  40d8cc:	add	sp, sp, #0x20
  40d8d0:	ret

000000000040d8d4 <nl_dump_ext_ack@@Base>:
  40d8d4:	sub	sp, sp, #0x10
  40d8d8:	mov	w8, wzr
  40d8dc:	str	x0, [sp, #8]
  40d8e0:	str	x1, [sp]
  40d8e4:	mov	w0, w8
  40d8e8:	add	sp, sp, #0x10
  40d8ec:	ret

000000000040d8f0 <nl_dump_ext_ack_done@@Base>:
  40d8f0:	sub	sp, sp, #0x10
  40d8f4:	mov	w8, wzr
  40d8f8:	str	x0, [sp, #8]
  40d8fc:	str	w1, [sp, #4]
  40d900:	mov	w0, w8
  40d904:	add	sp, sp, #0x10
  40d908:	ret

000000000040d90c <rtnl_set_strict_dump@@Base>:
  40d90c:	sub	sp, sp, #0x20
  40d910:	stp	x29, x30, [sp, #16]
  40d914:	add	x29, sp, #0x10
  40d918:	mov	w8, #0x1                   	// #1
  40d91c:	mov	w1, #0x10e                 	// #270
  40d920:	mov	w2, #0xc                   	// #12
  40d924:	mov	w4, #0x4                   	// #4
  40d928:	add	x3, sp, #0x4
  40d92c:	str	x0, [sp, #8]
  40d930:	str	w8, [sp, #4]
  40d934:	ldr	x9, [sp, #8]
  40d938:	ldr	w0, [x9]
  40d93c:	bl	404e50 <setsockopt@plt>
  40d940:	cmp	w0, #0x0
  40d944:	cset	w8, ge  // ge = tcont
  40d948:	tbnz	w8, #0, 40d950 <rtnl_set_strict_dump@@Base+0x44>
  40d94c:	b	40d960 <rtnl_set_strict_dump@@Base+0x54>
  40d950:	ldr	x8, [sp, #8]
  40d954:	ldr	w9, [x8, #48]
  40d958:	orr	w9, w9, #0x4
  40d95c:	str	w9, [x8, #48]
  40d960:	ldp	x29, x30, [sp, #16]
  40d964:	add	sp, sp, #0x20
  40d968:	ret

000000000040d96c <rtnl_add_nl_group@@Base>:
  40d96c:	sub	sp, sp, #0x20
  40d970:	stp	x29, x30, [sp, #16]
  40d974:	add	x29, sp, #0x10
  40d978:	mov	w8, #0x10e                 	// #270
  40d97c:	mov	w2, #0x1                   	// #1
  40d980:	mov	w4, #0x4                   	// #4
  40d984:	add	x3, sp, #0x4
  40d988:	str	x0, [sp, #8]
  40d98c:	str	w1, [sp, #4]
  40d990:	ldr	x9, [sp, #8]
  40d994:	ldr	w0, [x9]
  40d998:	mov	w1, w8
  40d99c:	bl	404e50 <setsockopt@plt>
  40d9a0:	ldp	x29, x30, [sp, #16]
  40d9a4:	add	sp, sp, #0x20
  40d9a8:	ret

000000000040d9ac <rtnl_close@@Base>:
  40d9ac:	sub	sp, sp, #0x20
  40d9b0:	stp	x29, x30, [sp, #16]
  40d9b4:	add	x29, sp, #0x10
  40d9b8:	str	x0, [sp, #8]
  40d9bc:	ldr	x8, [sp, #8]
  40d9c0:	ldr	w9, [x8]
  40d9c4:	cmp	w9, #0x0
  40d9c8:	cset	w9, lt  // lt = tstop
  40d9cc:	tbnz	w9, #0, 40d9e8 <rtnl_close@@Base+0x3c>
  40d9d0:	ldr	x8, [sp, #8]
  40d9d4:	ldr	w0, [x8]
  40d9d8:	bl	404f40 <close@plt>
  40d9dc:	ldr	x8, [sp, #8]
  40d9e0:	mov	w9, #0xffffffff            	// #-1
  40d9e4:	str	w9, [x8]
  40d9e8:	ldp	x29, x30, [sp, #16]
  40d9ec:	add	sp, sp, #0x20
  40d9f0:	ret

000000000040d9f4 <rtnl_open_byproto@@Base>:
  40d9f4:	sub	sp, sp, #0x50
  40d9f8:	stp	x29, x30, [sp, #64]
  40d9fc:	add	x29, sp, #0x40
  40da00:	mov	w8, #0x8000                	// #32768
  40da04:	mov	w9, #0x1                   	// #1
  40da08:	mov	x10, #0x38                  	// #56
  40da0c:	mov	w11, #0x10                  	// #16
  40da10:	mov	w12, #0x3                   	// #3
  40da14:	movk	w12, #0x8, lsl #16
  40da18:	mov	w13, wzr
  40da1c:	stur	x0, [x29, #-16]
  40da20:	stur	w1, [x29, #-20]
  40da24:	stur	w2, [x29, #-24]
  40da28:	str	w8, [sp, #32]
  40da2c:	str	w9, [sp, #28]
  40da30:	ldur	x0, [x29, #-16]
  40da34:	mov	w1, w13
  40da38:	mov	x2, x10
  40da3c:	str	w11, [sp, #4]
  40da40:	str	w12, [sp]
  40da44:	bl	404ea0 <memset@plt>
  40da48:	ldur	w8, [x29, #-24]
  40da4c:	ldur	x10, [x29, #-16]
  40da50:	str	w8, [x10, #36]
  40da54:	ldur	w2, [x29, #-24]
  40da58:	ldr	w0, [sp, #4]
  40da5c:	ldr	w1, [sp]
  40da60:	bl	405090 <socket@plt>
  40da64:	ldur	x10, [x29, #-16]
  40da68:	str	w0, [x10]
  40da6c:	ldur	x10, [x29, #-16]
  40da70:	ldr	w8, [x10]
  40da74:	cmp	w8, #0x0
  40da78:	cset	w8, ge  // ge = tcont
  40da7c:	tbnz	w8, #0, 40da98 <rtnl_open_byproto@@Base+0xa4>
  40da80:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40da84:	add	x0, x0, #0xe86
  40da88:	bl	404cf0 <perror@plt>
  40da8c:	mov	w8, #0xffffffff            	// #-1
  40da90:	stur	w8, [x29, #-4]
  40da94:	b	40dc7c <rtnl_open_byproto@@Base+0x288>
  40da98:	ldur	x8, [x29, #-16]
  40da9c:	ldr	w0, [x8]
  40daa0:	mov	w1, #0x1                   	// #1
  40daa4:	mov	w2, #0x7                   	// #7
  40daa8:	add	x3, sp, #0x20
  40daac:	mov	w4, #0x4                   	// #4
  40dab0:	bl	404e50 <setsockopt@plt>
  40dab4:	cmp	w0, #0x0
  40dab8:	cset	w9, ge  // ge = tcont
  40dabc:	tbnz	w9, #0, 40dad8 <rtnl_open_byproto@@Base+0xe4>
  40dac0:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40dac4:	add	x0, x0, #0xea1
  40dac8:	bl	404cf0 <perror@plt>
  40dacc:	mov	w8, #0xffffffff            	// #-1
  40dad0:	stur	w8, [x29, #-4]
  40dad4:	b	40dc7c <rtnl_open_byproto@@Base+0x288>
  40dad8:	ldur	x8, [x29, #-16]
  40dadc:	ldr	w0, [x8]
  40dae0:	mov	w1, #0x1                   	// #1
  40dae4:	mov	w2, #0x8                   	// #8
  40dae8:	adrp	x3, 422000 <_IO_stdin_used@@Base+0x10b00>
  40daec:	ldr	x3, [x3, #4024]
  40daf0:	mov	w4, #0x4                   	// #4
  40daf4:	bl	404e50 <setsockopt@plt>
  40daf8:	cmp	w0, #0x0
  40dafc:	cset	w9, ge  // ge = tcont
  40db00:	tbnz	w9, #0, 40db1c <rtnl_open_byproto@@Base+0x128>
  40db04:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40db08:	add	x0, x0, #0xeab
  40db0c:	bl	404cf0 <perror@plt>
  40db10:	mov	w8, #0xffffffff            	// #-1
  40db14:	stur	w8, [x29, #-4]
  40db18:	b	40dc7c <rtnl_open_byproto@@Base+0x288>
  40db1c:	ldur	x8, [x29, #-16]
  40db20:	ldr	w0, [x8]
  40db24:	mov	w1, #0x10e                 	// #270
  40db28:	mov	w2, #0xb                   	// #11
  40db2c:	add	x3, sp, #0x1c
  40db30:	mov	w4, #0x4                   	// #4
  40db34:	bl	404e50 <setsockopt@plt>
  40db38:	ldur	x8, [x29, #-16]
  40db3c:	stur	xzr, [x8, #4]
  40db40:	str	wzr, [x8, #12]
  40db44:	ldur	x8, [x29, #-16]
  40db48:	mov	w9, #0x10                  	// #16
  40db4c:	strh	w9, [x8, #4]
  40db50:	ldur	w9, [x29, #-20]
  40db54:	ldur	x8, [x29, #-16]
  40db58:	str	w9, [x8, #12]
  40db5c:	ldur	x8, [x29, #-16]
  40db60:	ldr	w9, [x8]
  40db64:	ldur	x8, [x29, #-16]
  40db68:	add	x8, x8, #0x4
  40db6c:	str	x8, [sp, #16]
  40db70:	ldr	x1, [sp, #16]
  40db74:	mov	w0, w9
  40db78:	mov	w2, #0xc                   	// #12
  40db7c:	bl	404d60 <bind@plt>
  40db80:	cmp	w0, #0x0
  40db84:	cset	w9, ge  // ge = tcont
  40db88:	tbnz	w9, #0, 40dba4 <rtnl_open_byproto@@Base+0x1b0>
  40db8c:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40db90:	add	x0, x0, #0xeb5
  40db94:	bl	404cf0 <perror@plt>
  40db98:	mov	w8, #0xffffffff            	// #-1
  40db9c:	stur	w8, [x29, #-4]
  40dba0:	b	40dc7c <rtnl_open_byproto@@Base+0x288>
  40dba4:	sub	x2, x29, #0x1c
  40dba8:	mov	w8, #0xc                   	// #12
  40dbac:	stur	w8, [x29, #-28]
  40dbb0:	ldur	x9, [x29, #-16]
  40dbb4:	ldr	w0, [x9]
  40dbb8:	ldur	x9, [x29, #-16]
  40dbbc:	add	x9, x9, #0x4
  40dbc0:	str	x9, [sp, #8]
  40dbc4:	ldr	x1, [sp, #8]
  40dbc8:	bl	4051d0 <getsockname@plt>
  40dbcc:	cmp	w0, #0x0
  40dbd0:	cset	w8, ge  // ge = tcont
  40dbd4:	tbnz	w8, #0, 40dbf0 <rtnl_open_byproto@@Base+0x1fc>
  40dbd8:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40dbdc:	add	x0, x0, #0xed0
  40dbe0:	bl	404cf0 <perror@plt>
  40dbe4:	mov	w8, #0xffffffff            	// #-1
  40dbe8:	stur	w8, [x29, #-4]
  40dbec:	b	40dc7c <rtnl_open_byproto@@Base+0x288>
  40dbf0:	ldur	w8, [x29, #-28]
  40dbf4:	mov	w9, w8
  40dbf8:	cmp	x9, #0xc
  40dbfc:	b.eq	40dc28 <rtnl_open_byproto@@Base+0x234>  // b.none
  40dc00:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40dc04:	ldr	x8, [x8, #3992]
  40dc08:	ldr	x0, [x8]
  40dc0c:	ldur	w2, [x29, #-28]
  40dc10:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40dc14:	add	x1, x1, #0xee3
  40dc18:	bl	4051e0 <fprintf@plt>
  40dc1c:	mov	w9, #0xffffffff            	// #-1
  40dc20:	stur	w9, [x29, #-4]
  40dc24:	b	40dc7c <rtnl_open_byproto@@Base+0x288>
  40dc28:	ldur	x8, [x29, #-16]
  40dc2c:	ldrh	w9, [x8, #4]
  40dc30:	cmp	w9, #0x10
  40dc34:	b.eq	40dc64 <rtnl_open_byproto@@Base+0x270>  // b.none
  40dc38:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40dc3c:	ldr	x8, [x8, #3992]
  40dc40:	ldr	x0, [x8]
  40dc44:	ldur	x8, [x29, #-16]
  40dc48:	ldrh	w2, [x8, #4]
  40dc4c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40dc50:	add	x1, x1, #0xefc
  40dc54:	bl	4051e0 <fprintf@plt>
  40dc58:	mov	w9, #0xffffffff            	// #-1
  40dc5c:	stur	w9, [x29, #-4]
  40dc60:	b	40dc7c <rtnl_open_byproto@@Base+0x288>
  40dc64:	mov	x8, xzr
  40dc68:	mov	x0, x8
  40dc6c:	bl	404e20 <time@plt>
  40dc70:	ldur	x8, [x29, #-16]
  40dc74:	str	w0, [x8, #28]
  40dc78:	stur	wzr, [x29, #-4]
  40dc7c:	ldur	w0, [x29, #-4]
  40dc80:	ldp	x29, x30, [sp, #64]
  40dc84:	add	sp, sp, #0x50
  40dc88:	ret

000000000040dc8c <rtnl_open@@Base>:
  40dc8c:	sub	sp, sp, #0x20
  40dc90:	stp	x29, x30, [sp, #16]
  40dc94:	add	x29, sp, #0x10
  40dc98:	mov	w8, wzr
  40dc9c:	str	x0, [sp, #8]
  40dca0:	str	w1, [sp, #4]
  40dca4:	ldr	x0, [sp, #8]
  40dca8:	ldr	w1, [sp, #4]
  40dcac:	mov	w2, w8
  40dcb0:	bl	40d9f4 <rtnl_open_byproto@@Base>
  40dcb4:	ldp	x29, x30, [sp, #16]
  40dcb8:	add	sp, sp, #0x20
  40dcbc:	ret

000000000040dcc0 <rtnl_nexthopdump_req@@Base>:
  40dcc0:	sub	sp, sp, #0xf0
  40dcc4:	stp	x29, x30, [sp, #224]
  40dcc8:	add	x29, sp, #0xe0
  40dccc:	sub	x8, x29, #0x20
  40dcd0:	mov	x9, #0x98                  	// #152
  40dcd4:	mov	w10, #0x18                  	// #24
  40dcd8:	mov	w11, #0x6a                  	// #106
  40dcdc:	mov	w12, #0x301                 	// #769
  40dce0:	mov	w13, wzr
  40dce4:	add	x14, sp, #0x28
  40dce8:	str	x0, [x8, #16]
  40dcec:	stur	w1, [x29, #-20]
  40dcf0:	str	x2, [x8]
  40dcf4:	mov	x0, x14
  40dcf8:	mov	w1, w13
  40dcfc:	mov	x2, x9
  40dd00:	str	x8, [sp, #24]
  40dd04:	str	w10, [sp, #20]
  40dd08:	str	w11, [sp, #16]
  40dd0c:	str	w12, [sp, #12]
  40dd10:	str	x14, [sp]
  40dd14:	bl	404ea0 <memset@plt>
  40dd18:	ldr	w10, [sp, #20]
  40dd1c:	str	w10, [sp, #40]
  40dd20:	ldr	w11, [sp, #16]
  40dd24:	ldr	x8, [sp]
  40dd28:	strh	w11, [x8, #4]
  40dd2c:	ldr	w12, [sp, #12]
  40dd30:	strh	w12, [x8, #6]
  40dd34:	ldr	x9, [sp, #24]
  40dd38:	ldr	x14, [x9, #16]
  40dd3c:	ldr	w13, [x14, #28]
  40dd40:	add	w13, w13, #0x1
  40dd44:	str	w13, [x14, #28]
  40dd48:	ldr	x14, [x9, #16]
  40dd4c:	str	w13, [x14, #32]
  40dd50:	str	w13, [sp, #48]
  40dd54:	ldur	w13, [x29, #-20]
  40dd58:	strb	w13, [x8, #16]
  40dd5c:	ldr	x14, [x9]
  40dd60:	cbz	x14, 40dd90 <rtnl_nexthopdump_req@@Base+0xd0>
  40dd64:	ldr	x8, [sp, #24]
  40dd68:	ldr	x9, [x8]
  40dd6c:	add	x0, sp, #0x28
  40dd70:	mov	w1, #0x98                  	// #152
  40dd74:	blr	x9
  40dd78:	str	w0, [sp, #36]
  40dd7c:	ldr	w10, [sp, #36]
  40dd80:	cbz	w10, 40dd90 <rtnl_nexthopdump_req@@Base+0xd0>
  40dd84:	ldr	w8, [sp, #36]
  40dd88:	stur	w8, [x29, #-4]
  40dd8c:	b	40ddb4 <rtnl_nexthopdump_req@@Base+0xf4>
  40dd90:	ldr	x8, [sp, #24]
  40dd94:	ldr	x9, [x8, #16]
  40dd98:	ldr	w0, [x9]
  40dd9c:	add	x1, sp, #0x28
  40dda0:	mov	x2, #0x98                  	// #152
  40dda4:	mov	w10, wzr
  40dda8:	mov	w3, w10
  40ddac:	bl	405040 <send@plt>
  40ddb0:	stur	w0, [x29, #-4]
  40ddb4:	ldur	w0, [x29, #-4]
  40ddb8:	ldp	x29, x30, [sp, #224]
  40ddbc:	add	sp, sp, #0xf0
  40ddc0:	ret

000000000040ddc4 <rtnl_addrdump_req@@Base>:
  40ddc4:	sub	sp, sp, #0xf0
  40ddc8:	stp	x29, x30, [sp, #224]
  40ddcc:	add	x29, sp, #0xe0
  40ddd0:	sub	x8, x29, #0x20
  40ddd4:	mov	x9, #0x98                  	// #152
  40ddd8:	mov	w10, #0x18                  	// #24
  40dddc:	mov	w11, #0x16                  	// #22
  40dde0:	mov	w12, #0x301                 	// #769
  40dde4:	mov	w13, wzr
  40dde8:	add	x14, sp, #0x28
  40ddec:	str	x0, [x8, #16]
  40ddf0:	stur	w1, [x29, #-20]
  40ddf4:	str	x2, [x8]
  40ddf8:	mov	x0, x14
  40ddfc:	mov	w1, w13
  40de00:	mov	x2, x9
  40de04:	str	x8, [sp, #24]
  40de08:	str	w10, [sp, #20]
  40de0c:	str	w11, [sp, #16]
  40de10:	str	w12, [sp, #12]
  40de14:	str	x14, [sp]
  40de18:	bl	404ea0 <memset@plt>
  40de1c:	ldr	w10, [sp, #20]
  40de20:	str	w10, [sp, #40]
  40de24:	ldr	w11, [sp, #16]
  40de28:	ldr	x8, [sp]
  40de2c:	strh	w11, [x8, #4]
  40de30:	ldr	w12, [sp, #12]
  40de34:	strh	w12, [x8, #6]
  40de38:	ldr	x9, [sp, #24]
  40de3c:	ldr	x14, [x9, #16]
  40de40:	ldr	w13, [x14, #28]
  40de44:	add	w13, w13, #0x1
  40de48:	str	w13, [x14, #28]
  40de4c:	ldr	x14, [x9, #16]
  40de50:	str	w13, [x14, #32]
  40de54:	str	w13, [sp, #48]
  40de58:	ldur	w13, [x29, #-20]
  40de5c:	strb	w13, [x8, #16]
  40de60:	ldr	x14, [x9]
  40de64:	cbz	x14, 40de94 <rtnl_addrdump_req@@Base+0xd0>
  40de68:	ldr	x8, [sp, #24]
  40de6c:	ldr	x9, [x8]
  40de70:	add	x0, sp, #0x28
  40de74:	mov	w1, #0x98                  	// #152
  40de78:	blr	x9
  40de7c:	str	w0, [sp, #36]
  40de80:	ldr	w10, [sp, #36]
  40de84:	cbz	w10, 40de94 <rtnl_addrdump_req@@Base+0xd0>
  40de88:	ldr	w8, [sp, #36]
  40de8c:	stur	w8, [x29, #-4]
  40de90:	b	40deb8 <rtnl_addrdump_req@@Base+0xf4>
  40de94:	ldr	x8, [sp, #24]
  40de98:	ldr	x9, [x8, #16]
  40de9c:	ldr	w0, [x9]
  40dea0:	add	x1, sp, #0x28
  40dea4:	mov	x2, #0x98                  	// #152
  40dea8:	mov	w10, wzr
  40deac:	mov	w3, w10
  40deb0:	bl	405040 <send@plt>
  40deb4:	stur	w0, [x29, #-4]
  40deb8:	ldur	w0, [x29, #-4]
  40debc:	ldp	x29, x30, [sp, #224]
  40dec0:	add	sp, sp, #0xf0
  40dec4:	ret

000000000040dec8 <rtnl_addrlbldump_req@@Base>:
  40dec8:	sub	sp, sp, #0x40
  40decc:	stp	x29, x30, [sp, #48]
  40ded0:	add	x29, sp, #0x30
  40ded4:	mov	w8, #0x1c                  	// #28
  40ded8:	mov	w9, #0x4a                  	// #74
  40dedc:	mov	w10, #0x301                 	// #769
  40dee0:	mov	w11, wzr
  40dee4:	mov	w12, #0x0                   	// #0
  40dee8:	mov	x2, #0x1c                  	// #28
  40deec:	add	x13, sp, #0x8
  40def0:	stur	x0, [x29, #-8]
  40def4:	stur	w1, [x29, #-12]
  40def8:	str	w8, [sp, #8]
  40defc:	strh	w9, [x13, #4]
  40df00:	strh	w10, [x13, #6]
  40df04:	ldur	x14, [x29, #-8]
  40df08:	ldr	w8, [x14, #28]
  40df0c:	add	w8, w8, #0x1
  40df10:	str	w8, [x14, #28]
  40df14:	ldur	x14, [x29, #-8]
  40df18:	str	w8, [x14, #32]
  40df1c:	str	w8, [sp, #16]
  40df20:	str	wzr, [sp, #20]
  40df24:	ldur	w8, [x29, #-12]
  40df28:	strb	w8, [x13, #16]
  40df2c:	strb	w12, [x13, #17]
  40df30:	strb	w12, [x13, #18]
  40df34:	strb	w12, [x13, #19]
  40df38:	str	wzr, [sp, #28]
  40df3c:	str	wzr, [sp, #32]
  40df40:	ldur	x14, [x29, #-8]
  40df44:	ldr	w0, [x14]
  40df48:	mov	x1, x13
  40df4c:	mov	w3, w11
  40df50:	bl	405040 <send@plt>
  40df54:	ldp	x29, x30, [sp, #48]
  40df58:	add	sp, sp, #0x40
  40df5c:	ret

000000000040df60 <rtnl_routedump_req@@Base>:
  40df60:	sub	sp, sp, #0xf0
  40df64:	stp	x29, x30, [sp, #224]
  40df68:	add	x29, sp, #0xe0
  40df6c:	mov	x8, #0x9c                  	// #156
  40df70:	mov	w9, #0x1c                  	// #28
  40df74:	mov	w10, #0x1a                  	// #26
  40df78:	mov	w11, #0x301                 	// #769
  40df7c:	mov	w12, wzr
  40df80:	add	x13, sp, #0x24
  40df84:	stur	x0, [x29, #-16]
  40df88:	stur	w1, [x29, #-20]
  40df8c:	stur	x2, [x29, #-32]
  40df90:	mov	x0, x13
  40df94:	mov	w1, w12
  40df98:	mov	x2, x8
  40df9c:	str	w9, [sp, #28]
  40dfa0:	str	w10, [sp, #24]
  40dfa4:	str	w11, [sp, #20]
  40dfa8:	str	x13, [sp, #8]
  40dfac:	bl	404ea0 <memset@plt>
  40dfb0:	ldr	w9, [sp, #28]
  40dfb4:	str	w9, [sp, #36]
  40dfb8:	ldr	w10, [sp, #24]
  40dfbc:	ldr	x8, [sp, #8]
  40dfc0:	strh	w10, [x8, #4]
  40dfc4:	ldr	w11, [sp, #20]
  40dfc8:	strh	w11, [x8, #6]
  40dfcc:	ldur	x13, [x29, #-16]
  40dfd0:	ldr	w12, [x13, #28]
  40dfd4:	add	w12, w12, #0x1
  40dfd8:	str	w12, [x13, #28]
  40dfdc:	ldur	x13, [x29, #-16]
  40dfe0:	str	w12, [x13, #32]
  40dfe4:	str	w12, [sp, #44]
  40dfe8:	ldur	w12, [x29, #-20]
  40dfec:	strb	w12, [x8, #16]
  40dff0:	ldur	x13, [x29, #-32]
  40dff4:	cbz	x13, 40e020 <rtnl_routedump_req@@Base+0xc0>
  40dff8:	ldur	x8, [x29, #-32]
  40dffc:	add	x0, sp, #0x24
  40e000:	mov	w1, #0x9c                  	// #156
  40e004:	blr	x8
  40e008:	str	w0, [sp, #32]
  40e00c:	ldr	w9, [sp, #32]
  40e010:	cbz	w9, 40e020 <rtnl_routedump_req@@Base+0xc0>
  40e014:	ldr	w8, [sp, #32]
  40e018:	stur	w8, [x29, #-4]
  40e01c:	b	40e040 <rtnl_routedump_req@@Base+0xe0>
  40e020:	ldur	x8, [x29, #-16]
  40e024:	ldr	w0, [x8]
  40e028:	add	x1, sp, #0x24
  40e02c:	mov	x2, #0x9c                  	// #156
  40e030:	mov	w9, wzr
  40e034:	mov	w3, w9
  40e038:	bl	405040 <send@plt>
  40e03c:	stur	w0, [x29, #-4]
  40e040:	ldur	w0, [x29, #-4]
  40e044:	ldp	x29, x30, [sp, #224]
  40e048:	add	sp, sp, #0xf0
  40e04c:	ret

000000000040e050 <rtnl_ruledump_req@@Base>:
  40e050:	sub	sp, sp, #0x40
  40e054:	stp	x29, x30, [sp, #48]
  40e058:	add	x29, sp, #0x30
  40e05c:	mov	w8, #0x1c                  	// #28
  40e060:	mov	w9, #0x22                  	// #34
  40e064:	mov	w10, #0x301                 	// #769
  40e068:	mov	w11, wzr
  40e06c:	mov	w12, #0x0                   	// #0
  40e070:	mov	x2, #0x1c                  	// #28
  40e074:	add	x13, sp, #0x8
  40e078:	stur	x0, [x29, #-8]
  40e07c:	stur	w1, [x29, #-12]
  40e080:	str	w8, [sp, #8]
  40e084:	strh	w9, [x13, #4]
  40e088:	strh	w10, [x13, #6]
  40e08c:	ldur	x14, [x29, #-8]
  40e090:	ldr	w8, [x14, #28]
  40e094:	add	w8, w8, #0x1
  40e098:	str	w8, [x14, #28]
  40e09c:	ldur	x14, [x29, #-8]
  40e0a0:	str	w8, [x14, #32]
  40e0a4:	str	w8, [sp, #16]
  40e0a8:	str	wzr, [sp, #20]
  40e0ac:	ldur	w8, [x29, #-12]
  40e0b0:	strb	w8, [x13, #16]
  40e0b4:	strb	w12, [x13, #17]
  40e0b8:	strb	w12, [x13, #18]
  40e0bc:	strb	w12, [x13, #19]
  40e0c0:	strb	w12, [x13, #20]
  40e0c4:	strb	w12, [x13, #21]
  40e0c8:	strb	w12, [x13, #22]
  40e0cc:	strb	w12, [x13, #23]
  40e0d0:	str	wzr, [sp, #32]
  40e0d4:	ldur	x14, [x29, #-8]
  40e0d8:	ldr	w0, [x14]
  40e0dc:	mov	x1, x13
  40e0e0:	mov	w3, w11
  40e0e4:	bl	405040 <send@plt>
  40e0e8:	ldp	x29, x30, [sp, #48]
  40e0ec:	add	sp, sp, #0x40
  40e0f0:	ret

000000000040e0f4 <rtnl_neighdump_req@@Base>:
  40e0f4:	sub	sp, sp, #0x180
  40e0f8:	stp	x29, x30, [sp, #352]
  40e0fc:	str	x28, [sp, #368]
  40e100:	add	x29, sp, #0x160
  40e104:	mov	x8, #0x11c                 	// #284
  40e108:	mov	w9, #0x1c                  	// #28
  40e10c:	mov	w10, #0x1e                  	// #30
  40e110:	mov	w11, #0x301                 	// #769
  40e114:	mov	w12, wzr
  40e118:	add	x13, sp, #0x24
  40e11c:	stur	x0, [x29, #-16]
  40e120:	stur	w1, [x29, #-20]
  40e124:	stur	x2, [x29, #-32]
  40e128:	mov	x0, x13
  40e12c:	mov	w1, w12
  40e130:	mov	x2, x8
  40e134:	str	w9, [sp, #28]
  40e138:	str	w10, [sp, #24]
  40e13c:	str	w11, [sp, #20]
  40e140:	str	x13, [sp, #8]
  40e144:	bl	404ea0 <memset@plt>
  40e148:	ldr	w9, [sp, #28]
  40e14c:	str	w9, [sp, #36]
  40e150:	ldr	w10, [sp, #24]
  40e154:	ldr	x8, [sp, #8]
  40e158:	strh	w10, [x8, #4]
  40e15c:	ldr	w11, [sp, #20]
  40e160:	strh	w11, [x8, #6]
  40e164:	ldur	x13, [x29, #-16]
  40e168:	ldr	w12, [x13, #28]
  40e16c:	add	w12, w12, #0x1
  40e170:	str	w12, [x13, #28]
  40e174:	ldur	x13, [x29, #-16]
  40e178:	str	w12, [x13, #32]
  40e17c:	str	w12, [sp, #44]
  40e180:	ldur	w12, [x29, #-20]
  40e184:	strb	w12, [x8, #16]
  40e188:	ldur	x13, [x29, #-32]
  40e18c:	cbz	x13, 40e1b8 <rtnl_neighdump_req@@Base+0xc4>
  40e190:	ldur	x8, [x29, #-32]
  40e194:	add	x0, sp, #0x24
  40e198:	mov	w1, #0x11c                 	// #284
  40e19c:	blr	x8
  40e1a0:	str	w0, [sp, #32]
  40e1a4:	ldr	w9, [sp, #32]
  40e1a8:	cbz	w9, 40e1b8 <rtnl_neighdump_req@@Base+0xc4>
  40e1ac:	ldr	w8, [sp, #32]
  40e1b0:	stur	w8, [x29, #-4]
  40e1b4:	b	40e1d8 <rtnl_neighdump_req@@Base+0xe4>
  40e1b8:	ldur	x8, [x29, #-16]
  40e1bc:	ldr	w0, [x8]
  40e1c0:	add	x1, sp, #0x24
  40e1c4:	mov	x2, #0x11c                 	// #284
  40e1c8:	mov	w9, wzr
  40e1cc:	mov	w3, w9
  40e1d0:	bl	405040 <send@plt>
  40e1d4:	stur	w0, [x29, #-4]
  40e1d8:	ldur	w0, [x29, #-4]
  40e1dc:	ldr	x28, [sp, #368]
  40e1e0:	ldp	x29, x30, [sp, #352]
  40e1e4:	add	sp, sp, #0x180
  40e1e8:	ret

000000000040e1ec <rtnl_neightbldump_req@@Base>:
  40e1ec:	sub	sp, sp, #0x30
  40e1f0:	stp	x29, x30, [sp, #32]
  40e1f4:	add	x29, sp, #0x20
  40e1f8:	mov	w8, #0x14                  	// #20
  40e1fc:	mov	w9, #0x42                  	// #66
  40e200:	mov	w10, #0x301                 	// #769
  40e204:	mov	w11, wzr
  40e208:	mov	w12, #0x0                   	// #0
  40e20c:	mov	w13, #0x0                   	// #0
  40e210:	mov	x2, #0x14                  	// #20
  40e214:	mov	x14, sp
  40e218:	stur	x0, [x29, #-8]
  40e21c:	stur	w1, [x29, #-12]
  40e220:	str	w8, [sp]
  40e224:	strh	w9, [x14, #4]
  40e228:	strh	w10, [x14, #6]
  40e22c:	ldur	x15, [x29, #-8]
  40e230:	ldr	w8, [x15, #28]
  40e234:	add	w8, w8, #0x1
  40e238:	str	w8, [x15, #28]
  40e23c:	ldur	x15, [x29, #-8]
  40e240:	str	w8, [x15, #32]
  40e244:	str	w8, [sp, #8]
  40e248:	str	wzr, [sp, #12]
  40e24c:	ldur	w8, [x29, #-12]
  40e250:	strb	w8, [x14, #16]
  40e254:	strb	w12, [x14, #17]
  40e258:	strh	w13, [x14, #18]
  40e25c:	ldur	x15, [x29, #-8]
  40e260:	ldr	w0, [x15]
  40e264:	mov	x1, x14
  40e268:	mov	w3, w11
  40e26c:	bl	405040 <send@plt>
  40e270:	ldp	x29, x30, [sp, #32]
  40e274:	add	sp, sp, #0x30
  40e278:	ret

000000000040e27c <rtnl_mdbdump_req@@Base>:
  40e27c:	sub	sp, sp, #0x40
  40e280:	stp	x29, x30, [sp, #48]
  40e284:	add	x29, sp, #0x30
  40e288:	mov	w8, #0x18                  	// #24
  40e28c:	mov	w9, #0x56                  	// #86
  40e290:	mov	w10, #0x301                 	// #769
  40e294:	mov	w11, wzr
  40e298:	mov	x2, #0x18                  	// #24
  40e29c:	add	x12, sp, #0xc
  40e2a0:	stur	x0, [x29, #-8]
  40e2a4:	stur	w1, [x29, #-12]
  40e2a8:	str	w8, [sp, #12]
  40e2ac:	strh	w9, [x12, #4]
  40e2b0:	strh	w10, [x12, #6]
  40e2b4:	ldur	x13, [x29, #-8]
  40e2b8:	ldr	w8, [x13, #28]
  40e2bc:	add	w8, w8, #0x1
  40e2c0:	str	w8, [x13, #28]
  40e2c4:	ldur	x13, [x29, #-8]
  40e2c8:	str	w8, [x13, #32]
  40e2cc:	str	w8, [sp, #20]
  40e2d0:	str	wzr, [sp, #24]
  40e2d4:	ldur	w8, [x29, #-12]
  40e2d8:	strb	w8, [x12, #16]
  40e2dc:	str	wzr, [sp, #32]
  40e2e0:	ldur	x13, [x29, #-8]
  40e2e4:	ldr	w0, [x13]
  40e2e8:	mov	x1, x12
  40e2ec:	mov	w3, w11
  40e2f0:	bl	405040 <send@plt>
  40e2f4:	ldp	x29, x30, [sp, #48]
  40e2f8:	add	sp, sp, #0x40
  40e2fc:	ret

000000000040e300 <rtnl_netconfdump_req@@Base>:
  40e300:	sub	sp, sp, #0x30
  40e304:	stp	x29, x30, [sp, #32]
  40e308:	add	x29, sp, #0x20
  40e30c:	mov	w8, #0x14                  	// #20
  40e310:	mov	w9, #0x52                  	// #82
  40e314:	mov	w10, #0x301                 	// #769
  40e318:	mov	w11, wzr
  40e31c:	mov	x2, #0x14                  	// #20
  40e320:	mov	x12, sp
  40e324:	stur	x0, [x29, #-8]
  40e328:	stur	w1, [x29, #-12]
  40e32c:	str	w8, [sp]
  40e330:	strh	w9, [x12, #4]
  40e334:	strh	w10, [x12, #6]
  40e338:	ldur	x13, [x29, #-8]
  40e33c:	ldr	w8, [x13, #28]
  40e340:	add	w8, w8, #0x1
  40e344:	str	w8, [x13, #28]
  40e348:	ldur	x13, [x29, #-8]
  40e34c:	str	w8, [x13, #32]
  40e350:	str	w8, [sp, #8]
  40e354:	str	wzr, [sp, #12]
  40e358:	ldur	w8, [x29, #-12]
  40e35c:	strb	w8, [x12, #16]
  40e360:	ldur	x13, [x29, #-8]
  40e364:	ldr	w0, [x13]
  40e368:	mov	x1, x12
  40e36c:	mov	w3, w11
  40e370:	bl	405040 <send@plt>
  40e374:	ldp	x29, x30, [sp, #32]
  40e378:	add	sp, sp, #0x30
  40e37c:	ret

000000000040e380 <rtnl_nsiddump_req_filter_fn@@Base>:
  40e380:	stp	x29, x30, [sp, #-32]!
  40e384:	str	x28, [sp, #16]
  40e388:	mov	x29, sp
  40e38c:	sub	sp, sp, #0x450
  40e390:	mov	x8, #0x414                 	// #1044
  40e394:	mov	w9, #0x14                  	// #20
  40e398:	mov	w10, #0x5a                  	// #90
  40e39c:	mov	w11, #0x301                 	// #769
  40e3a0:	mov	w12, wzr
  40e3a4:	add	x13, sp, #0x1c
  40e3a8:	stur	x0, [x29, #-16]
  40e3ac:	stur	w1, [x29, #-20]
  40e3b0:	stur	x2, [x29, #-32]
  40e3b4:	mov	x0, x13
  40e3b8:	mov	w1, w12
  40e3bc:	mov	x2, x8
  40e3c0:	str	w9, [sp, #20]
  40e3c4:	str	w10, [sp, #16]
  40e3c8:	str	w11, [sp, #12]
  40e3cc:	str	x13, [sp]
  40e3d0:	bl	404ea0 <memset@plt>
  40e3d4:	ldr	w9, [sp, #20]
  40e3d8:	str	w9, [sp, #28]
  40e3dc:	ldr	w10, [sp, #16]
  40e3e0:	ldr	x8, [sp]
  40e3e4:	strh	w10, [x8, #4]
  40e3e8:	ldr	w11, [sp, #12]
  40e3ec:	strh	w11, [x8, #6]
  40e3f0:	ldur	x13, [x29, #-16]
  40e3f4:	ldr	w12, [x13, #28]
  40e3f8:	add	w12, w12, #0x1
  40e3fc:	str	w12, [x13, #28]
  40e400:	ldur	x13, [x29, #-16]
  40e404:	str	w12, [x13, #32]
  40e408:	str	w12, [sp, #36]
  40e40c:	ldur	w12, [x29, #-20]
  40e410:	strb	w12, [x8, #16]
  40e414:	ldur	x13, [x29, #-32]
  40e418:	cbnz	x13, 40e428 <rtnl_nsiddump_req_filter_fn@@Base+0xa8>
  40e41c:	mov	w8, #0xffffffea            	// #-22
  40e420:	stur	w8, [x29, #-4]
  40e424:	b	40e474 <rtnl_nsiddump_req_filter_fn@@Base+0xf4>
  40e428:	ldur	x8, [x29, #-32]
  40e42c:	add	x0, sp, #0x1c
  40e430:	mov	w1, #0x414                 	// #1044
  40e434:	blr	x8
  40e438:	str	w0, [sp, #24]
  40e43c:	ldr	w9, [sp, #24]
  40e440:	cbz	w9, 40e450 <rtnl_nsiddump_req_filter_fn@@Base+0xd0>
  40e444:	ldr	w8, [sp, #24]
  40e448:	stur	w8, [x29, #-4]
  40e44c:	b	40e474 <rtnl_nsiddump_req_filter_fn@@Base+0xf4>
  40e450:	ldur	x8, [x29, #-16]
  40e454:	ldr	w0, [x8]
  40e458:	add	x1, sp, #0x1c
  40e45c:	ldr	w9, [sp, #28]
  40e460:	mov	w2, w9
  40e464:	mov	w9, wzr
  40e468:	mov	w3, w9
  40e46c:	bl	405040 <send@plt>
  40e470:	stur	w0, [x29, #-4]
  40e474:	ldur	w0, [x29, #-4]
  40e478:	add	sp, sp, #0x450
  40e47c:	ldr	x28, [sp, #16]
  40e480:	ldp	x29, x30, [sp], #32
  40e484:	ret

000000000040e488 <rtnl_linkdump_req@@Base>:
  40e488:	sub	sp, sp, #0x30
  40e48c:	stp	x29, x30, [sp, #32]
  40e490:	add	x29, sp, #0x20
  40e494:	str	x0, [sp, #16]
  40e498:	str	w1, [sp, #12]
  40e49c:	ldr	w8, [sp, #12]
  40e4a0:	cbnz	w8, 40e4bc <rtnl_linkdump_req@@Base+0x34>
  40e4a4:	ldr	x0, [sp, #16]
  40e4a8:	ldr	w1, [sp, #12]
  40e4ac:	mov	w2, #0x1                   	// #1
  40e4b0:	bl	40e4dc <rtnl_linkdump_req_filter@@Base>
  40e4b4:	stur	w0, [x29, #-4]
  40e4b8:	b	40e4cc <rtnl_linkdump_req@@Base+0x44>
  40e4bc:	ldr	x0, [sp, #16]
  40e4c0:	ldr	w1, [sp, #12]
  40e4c4:	bl	40e5c4 <rtnl_linkdump_req_filter@@Base+0xe8>
  40e4c8:	stur	w0, [x29, #-4]
  40e4cc:	ldur	w0, [x29, #-4]
  40e4d0:	ldp	x29, x30, [sp, #32]
  40e4d4:	add	sp, sp, #0x30
  40e4d8:	ret

000000000040e4dc <rtnl_linkdump_req_filter@@Base>:
  40e4dc:	sub	sp, sp, #0x50
  40e4e0:	stp	x29, x30, [sp, #64]
  40e4e4:	add	x29, sp, #0x40
  40e4e8:	stur	x0, [x29, #-16]
  40e4ec:	stur	w1, [x29, #-20]
  40e4f0:	stur	w2, [x29, #-24]
  40e4f4:	ldur	w8, [x29, #-20]
  40e4f8:	cbz	w8, 40e508 <rtnl_linkdump_req_filter@@Base+0x2c>
  40e4fc:	ldur	w8, [x29, #-20]
  40e500:	cmp	w8, #0x7
  40e504:	b.ne	40e5a4 <rtnl_linkdump_req_filter@@Base+0xc8>  // b.any
  40e508:	mov	x8, sp
  40e50c:	mov	w9, #0x28                  	// #40
  40e510:	str	w9, [sp]
  40e514:	mov	w9, #0x12                  	// #18
  40e518:	strh	w9, [x8, #4]
  40e51c:	mov	w9, #0x301                 	// #769
  40e520:	strh	w9, [x8, #6]
  40e524:	ldur	x10, [x29, #-16]
  40e528:	ldr	w9, [x10, #28]
  40e52c:	add	w9, w9, #0x1
  40e530:	str	w9, [x10, #28]
  40e534:	ldur	x10, [x29, #-16]
  40e538:	str	w9, [x10, #32]
  40e53c:	str	w9, [sp, #8]
  40e540:	mov	w9, wzr
  40e544:	str	wzr, [sp, #12]
  40e548:	ldur	w11, [x29, #-20]
  40e54c:	strb	w11, [x8, #16]
  40e550:	mov	w11, #0x0                   	// #0
  40e554:	strb	w11, [x8, #17]
  40e558:	mov	w11, #0x0                   	// #0
  40e55c:	strh	w11, [x8, #18]
  40e560:	str	wzr, [sp, #20]
  40e564:	str	wzr, [sp, #24]
  40e568:	str	wzr, [sp, #28]
  40e56c:	mov	w11, #0x8                   	// #8
  40e570:	strh	w11, [x8, #32]
  40e574:	mov	w11, #0x1d                  	// #29
  40e578:	strh	w11, [x8, #34]
  40e57c:	ldur	w11, [x29, #-24]
  40e580:	str	w11, [sp, #36]
  40e584:	ldur	x10, [x29, #-16]
  40e588:	ldr	w0, [x10]
  40e58c:	mov	x1, x8
  40e590:	mov	x2, #0x28                  	// #40
  40e594:	mov	w3, w9
  40e598:	bl	405040 <send@plt>
  40e59c:	stur	w0, [x29, #-4]
  40e5a0:	b	40e5b4 <rtnl_linkdump_req_filter@@Base+0xd8>
  40e5a4:	ldur	x0, [x29, #-16]
  40e5a8:	ldur	w1, [x29, #-20]
  40e5ac:	bl	40e5c4 <rtnl_linkdump_req_filter@@Base+0xe8>
  40e5b0:	stur	w0, [x29, #-4]
  40e5b4:	ldur	w0, [x29, #-4]
  40e5b8:	ldp	x29, x30, [sp, #64]
  40e5bc:	add	sp, sp, #0x50
  40e5c0:	ret
  40e5c4:	sub	sp, sp, #0x40
  40e5c8:	stp	x29, x30, [sp, #48]
  40e5cc:	add	x29, sp, #0x30
  40e5d0:	mov	w8, #0x20                  	// #32
  40e5d4:	mov	w9, #0x12                  	// #18
  40e5d8:	mov	w10, #0x301                 	// #769
  40e5dc:	mov	w11, wzr
  40e5e0:	mov	w12, #0x0                   	// #0
  40e5e4:	mov	w13, #0x0                   	// #0
  40e5e8:	mov	x2, #0x20                  	// #32
  40e5ec:	add	x14, sp, #0x4
  40e5f0:	stur	x0, [x29, #-8]
  40e5f4:	stur	w1, [x29, #-12]
  40e5f8:	str	w8, [sp, #4]
  40e5fc:	strh	w9, [x14, #4]
  40e600:	strh	w10, [x14, #6]
  40e604:	ldur	x15, [x29, #-8]
  40e608:	ldr	w8, [x15, #28]
  40e60c:	add	w8, w8, #0x1
  40e610:	str	w8, [x15, #28]
  40e614:	ldur	x15, [x29, #-8]
  40e618:	str	w8, [x15, #32]
  40e61c:	str	w8, [sp, #12]
  40e620:	str	wzr, [sp, #16]
  40e624:	ldur	w8, [x29, #-12]
  40e628:	strb	w8, [x14, #16]
  40e62c:	strb	w12, [x14, #17]
  40e630:	strh	w13, [x14, #18]
  40e634:	str	wzr, [sp, #24]
  40e638:	str	wzr, [sp, #28]
  40e63c:	str	wzr, [sp, #32]
  40e640:	ldur	x15, [x29, #-8]
  40e644:	ldr	w0, [x15]
  40e648:	mov	x1, x14
  40e64c:	mov	w3, w11
  40e650:	bl	405040 <send@plt>
  40e654:	ldp	x29, x30, [sp, #48]
  40e658:	add	sp, sp, #0x40
  40e65c:	ret

000000000040e660 <rtnl_linkdump_req_filter_fn@@Base>:
  40e660:	stp	x29, x30, [sp, #-32]!
  40e664:	str	x28, [sp, #16]
  40e668:	mov	x29, sp
  40e66c:	sub	sp, sp, #0x460
  40e670:	sub	x8, x29, #0x20
  40e674:	str	x0, [x8, #16]
  40e678:	stur	w1, [x29, #-20]
  40e67c:	str	x2, [x8]
  40e680:	ldur	w9, [x29, #-20]
  40e684:	str	x8, [sp, #16]
  40e688:	cbz	w9, 40e698 <rtnl_linkdump_req_filter_fn@@Base+0x38>
  40e68c:	ldur	w8, [x29, #-20]
  40e690:	cmp	w8, #0x11
  40e694:	b.ne	40e764 <rtnl_linkdump_req_filter_fn@@Base+0x104>  // b.any
  40e698:	add	x8, sp, #0x20
  40e69c:	mov	x0, x8
  40e6a0:	mov	w9, wzr
  40e6a4:	mov	w1, w9
  40e6a8:	mov	x2, #0x420                 	// #1056
  40e6ac:	str	x8, [sp, #8]
  40e6b0:	bl	404ea0 <memset@plt>
  40e6b4:	mov	w9, #0x20                  	// #32
  40e6b8:	str	w9, [sp, #32]
  40e6bc:	mov	w9, #0x12                  	// #18
  40e6c0:	ldr	x8, [sp, #8]
  40e6c4:	strh	w9, [x8, #4]
  40e6c8:	mov	w9, #0x301                 	// #769
  40e6cc:	strh	w9, [x8, #6]
  40e6d0:	ldr	x10, [sp, #16]
  40e6d4:	ldr	x11, [x10, #16]
  40e6d8:	ldr	w9, [x11, #28]
  40e6dc:	add	w9, w9, #0x1
  40e6e0:	str	w9, [x11, #28]
  40e6e4:	ldr	x11, [x10, #16]
  40e6e8:	str	w9, [x11, #32]
  40e6ec:	str	w9, [sp, #40]
  40e6f0:	ldur	w9, [x29, #-20]
  40e6f4:	strb	w9, [x8, #16]
  40e6f8:	ldr	x11, [x10]
  40e6fc:	cbnz	x11, 40e70c <rtnl_linkdump_req_filter_fn@@Base+0xac>
  40e700:	mov	w8, #0xffffffea            	// #-22
  40e704:	stur	w8, [x29, #-4]
  40e708:	b	40e778 <rtnl_linkdump_req_filter_fn@@Base+0x118>
  40e70c:	ldr	x8, [sp, #16]
  40e710:	ldr	x9, [x8]
  40e714:	add	x0, sp, #0x20
  40e718:	mov	w1, #0x420                 	// #1056
  40e71c:	blr	x9
  40e720:	str	w0, [sp, #28]
  40e724:	ldr	w10, [sp, #28]
  40e728:	cbz	w10, 40e738 <rtnl_linkdump_req_filter_fn@@Base+0xd8>
  40e72c:	ldr	w8, [sp, #28]
  40e730:	stur	w8, [x29, #-4]
  40e734:	b	40e778 <rtnl_linkdump_req_filter_fn@@Base+0x118>
  40e738:	ldr	x8, [sp, #16]
  40e73c:	ldr	x9, [x8, #16]
  40e740:	ldr	w0, [x9]
  40e744:	add	x1, sp, #0x20
  40e748:	ldr	w10, [sp, #32]
  40e74c:	mov	w2, w10
  40e750:	mov	w10, wzr
  40e754:	mov	w3, w10
  40e758:	bl	405040 <send@plt>
  40e75c:	stur	w0, [x29, #-4]
  40e760:	b	40e778 <rtnl_linkdump_req_filter_fn@@Base+0x118>
  40e764:	ldr	x8, [sp, #16]
  40e768:	ldr	x0, [x8, #16]
  40e76c:	ldur	w1, [x29, #-20]
  40e770:	bl	40e5c4 <rtnl_linkdump_req_filter@@Base+0xe8>
  40e774:	stur	w0, [x29, #-4]
  40e778:	ldur	w0, [x29, #-4]
  40e77c:	add	sp, sp, #0x460
  40e780:	ldr	x28, [sp, #16]
  40e784:	ldp	x29, x30, [sp], #32
  40e788:	ret

000000000040e78c <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40e78c:	sub	sp, sp, #0x100
  40e790:	stp	x29, x30, [sp, #240]
  40e794:	add	x29, sp, #0xf0
  40e798:	sub	x8, x29, #0x18
  40e79c:	mov	x2, #0xa0                  	// #160
  40e7a0:	mov	w9, #0x20                  	// #32
  40e7a4:	mov	w10, #0x1e                  	// #30
  40e7a8:	mov	w11, #0x301                 	// #769
  40e7ac:	mov	w12, #0x7                   	// #7
  40e7b0:	mov	w13, #0xa0                  	// #160
  40e7b4:	mov	w14, wzr
  40e7b8:	add	x15, sp, #0x38
  40e7bc:	str	x0, [x8, #8]
  40e7c0:	str	x1, [x8]
  40e7c4:	mov	x0, x15
  40e7c8:	mov	w1, w14
  40e7cc:	str	x8, [sp, #40]
  40e7d0:	str	w9, [sp, #36]
  40e7d4:	str	w10, [sp, #32]
  40e7d8:	str	w11, [sp, #28]
  40e7dc:	str	w12, [sp, #24]
  40e7e0:	str	w13, [sp, #20]
  40e7e4:	str	x15, [sp, #8]
  40e7e8:	bl	404ea0 <memset@plt>
  40e7ec:	ldr	w9, [sp, #36]
  40e7f0:	str	w9, [sp, #56]
  40e7f4:	ldr	w10, [sp, #32]
  40e7f8:	ldr	x8, [sp, #8]
  40e7fc:	strh	w10, [x8, #4]
  40e800:	ldr	w11, [sp, #28]
  40e804:	strh	w11, [x8, #6]
  40e808:	ldr	x15, [sp, #40]
  40e80c:	ldr	x16, [x15, #8]
  40e810:	ldr	w12, [x16, #28]
  40e814:	add	w12, w12, #0x1
  40e818:	str	w12, [x16, #28]
  40e81c:	ldr	x16, [x15, #8]
  40e820:	str	w12, [x16, #32]
  40e824:	str	w12, [sp, #64]
  40e828:	ldr	w12, [sp, #24]
  40e82c:	strb	w12, [x8, #16]
  40e830:	ldr	x16, [x15]
  40e834:	mov	x0, x8
  40e838:	ldr	w1, [sp, #20]
  40e83c:	blr	x16
  40e840:	str	w0, [sp, #52]
  40e844:	ldr	w9, [sp, #52]
  40e848:	cbz	w9, 40e858 <rtnl_fdb_linkdump_req_filter_fn@@Base+0xcc>
  40e84c:	ldr	w8, [sp, #52]
  40e850:	stur	w8, [x29, #-4]
  40e854:	b	40e87c <rtnl_fdb_linkdump_req_filter_fn@@Base+0xf0>
  40e858:	ldr	x8, [sp, #40]
  40e85c:	ldr	x9, [x8, #8]
  40e860:	ldr	w0, [x9]
  40e864:	add	x1, sp, #0x38
  40e868:	mov	x2, #0xa0                  	// #160
  40e86c:	mov	w10, wzr
  40e870:	mov	w3, w10
  40e874:	bl	405040 <send@plt>
  40e878:	stur	w0, [x29, #-4]
  40e87c:	ldur	w0, [x29, #-4]
  40e880:	ldp	x29, x30, [sp, #240]
  40e884:	add	sp, sp, #0x100
  40e888:	ret

000000000040e88c <rtnl_statsdump_req_filter@@Base>:
  40e88c:	sub	sp, sp, #0x40
  40e890:	stp	x29, x30, [sp, #48]
  40e894:	add	x29, sp, #0x30
  40e898:	mov	x8, #0x1c                  	// #28
  40e89c:	mov	w9, #0x1c                  	// #28
  40e8a0:	mov	w10, #0x5e                  	// #94
  40e8a4:	mov	w11, #0x301                 	// #769
  40e8a8:	mov	w12, wzr
  40e8ac:	mov	x13, sp
  40e8b0:	stur	x0, [x29, #-8]
  40e8b4:	stur	w1, [x29, #-12]
  40e8b8:	stur	w2, [x29, #-16]
  40e8bc:	str	xzr, [sp]
  40e8c0:	str	xzr, [sp, #8]
  40e8c4:	str	xzr, [sp, #16]
  40e8c8:	str	wzr, [sp, #24]
  40e8cc:	str	w9, [sp]
  40e8d0:	strh	w10, [x13, #4]
  40e8d4:	strh	w11, [x13, #6]
  40e8d8:	str	wzr, [sp, #12]
  40e8dc:	ldur	x14, [x29, #-8]
  40e8e0:	ldr	w9, [x14, #28]
  40e8e4:	add	w9, w9, #0x1
  40e8e8:	str	w9, [x14, #28]
  40e8ec:	ldur	x14, [x29, #-8]
  40e8f0:	str	w9, [x14, #32]
  40e8f4:	str	w9, [sp, #8]
  40e8f8:	ldur	w9, [x29, #-12]
  40e8fc:	strb	w9, [x13, #16]
  40e900:	ldur	w9, [x29, #-16]
  40e904:	str	w9, [sp, #24]
  40e908:	ldur	x14, [x29, #-8]
  40e90c:	ldr	w0, [x14]
  40e910:	mov	x1, x13
  40e914:	mov	x2, x8
  40e918:	mov	w3, w12
  40e91c:	bl	405040 <send@plt>
  40e920:	ldp	x29, x30, [sp, #48]
  40e924:	add	sp, sp, #0x40
  40e928:	ret

000000000040e92c <rtnl_send@@Base>:
  40e92c:	sub	sp, sp, #0x30
  40e930:	stp	x29, x30, [sp, #32]
  40e934:	add	x29, sp, #0x20
  40e938:	mov	w8, wzr
  40e93c:	stur	x0, [x29, #-8]
  40e940:	str	x1, [sp, #16]
  40e944:	str	w2, [sp, #12]
  40e948:	ldur	x9, [x29, #-8]
  40e94c:	ldr	w0, [x9]
  40e950:	ldr	x1, [sp, #16]
  40e954:	ldrsw	x2, [sp, #12]
  40e958:	mov	w3, w8
  40e95c:	bl	405040 <send@plt>
  40e960:	ldp	x29, x30, [sp, #32]
  40e964:	add	sp, sp, #0x30
  40e968:	ret

000000000040e96c <rtnl_send_check@@Base>:
  40e96c:	stp	x29, x30, [sp, #-32]!
  40e970:	str	x28, [sp, #16]
  40e974:	mov	x29, sp
  40e978:	sub	sp, sp, #0x440
  40e97c:	mov	w8, wzr
  40e980:	stur	x0, [x29, #-16]
  40e984:	stur	x1, [x29, #-24]
  40e988:	stur	w2, [x29, #-28]
  40e98c:	ldur	x9, [x29, #-16]
  40e990:	ldr	w0, [x9]
  40e994:	ldur	x1, [x29, #-24]
  40e998:	ldursw	x2, [x29, #-28]
  40e99c:	mov	w3, w8
  40e9a0:	bl	405040 <send@plt>
  40e9a4:	stur	w0, [x29, #-44]
  40e9a8:	ldur	w8, [x29, #-44]
  40e9ac:	cmp	w8, #0x0
  40e9b0:	cset	w8, ge  // ge = tcont
  40e9b4:	tbnz	w8, #0, 40e9c4 <rtnl_send_check@@Base+0x58>
  40e9b8:	ldur	w8, [x29, #-44]
  40e9bc:	stur	w8, [x29, #-4]
  40e9c0:	b	40eb38 <rtnl_send_check@@Base+0x1cc>
  40e9c4:	ldur	x8, [x29, #-16]
  40e9c8:	ldr	w0, [x8]
  40e9cc:	add	x1, sp, #0x14
  40e9d0:	mov	x2, #0x400                 	// #1024
  40e9d4:	mov	w3, #0x42                  	// #66
  40e9d8:	bl	404f60 <recv@plt>
  40e9dc:	stur	w0, [x29, #-44]
  40e9e0:	ldur	w9, [x29, #-44]
  40e9e4:	cmp	w9, #0x0
  40e9e8:	cset	w9, ge  // ge = tcont
  40e9ec:	tbnz	w9, #0, 40ea14 <rtnl_send_check@@Base+0xa8>
  40e9f0:	bl	4051b0 <__errno_location@plt>
  40e9f4:	ldr	w8, [x0]
  40e9f8:	cmp	w8, #0xb
  40e9fc:	b.ne	40ea08 <rtnl_send_check@@Base+0x9c>  // b.any
  40ea00:	stur	wzr, [x29, #-4]
  40ea04:	b	40eb38 <rtnl_send_check@@Base+0x1cc>
  40ea08:	mov	w8, #0xffffffff            	// #-1
  40ea0c:	stur	w8, [x29, #-4]
  40ea10:	b	40eb38 <rtnl_send_check@@Base+0x1cc>
  40ea14:	add	x8, sp, #0x14
  40ea18:	stur	x8, [x29, #-40]
  40ea1c:	ldur	w8, [x29, #-44]
  40ea20:	mov	w9, #0x0                   	// #0
  40ea24:	cmp	w8, #0x10
  40ea28:	str	w9, [sp, #4]
  40ea2c:	b.lt	40ea64 <rtnl_send_check@@Base+0xf8>  // b.tstop
  40ea30:	ldur	x8, [x29, #-40]
  40ea34:	ldr	w9, [x8]
  40ea38:	mov	w8, w9
  40ea3c:	mov	w9, #0x0                   	// #0
  40ea40:	cmp	x8, #0x10
  40ea44:	str	w9, [sp, #4]
  40ea48:	b.cc	40ea64 <rtnl_send_check@@Base+0xf8>  // b.lo, b.ul, b.last
  40ea4c:	ldur	x8, [x29, #-40]
  40ea50:	ldr	w9, [x8]
  40ea54:	ldur	w10, [x29, #-44]
  40ea58:	cmp	w9, w10
  40ea5c:	cset	w9, ls  // ls = plast
  40ea60:	str	w9, [sp, #4]
  40ea64:	ldr	w8, [sp, #4]
  40ea68:	tbnz	w8, #0, 40ea70 <rtnl_send_check@@Base+0x104>
  40ea6c:	b	40eb34 <rtnl_send_check@@Base+0x1c8>
  40ea70:	ldur	x8, [x29, #-40]
  40ea74:	ldrh	w9, [x8, #4]
  40ea78:	cmp	w9, #0x2
  40ea7c:	b.ne	40eae8 <rtnl_send_check@@Base+0x17c>  // b.any
  40ea80:	ldur	x8, [x29, #-40]
  40ea84:	add	x8, x8, #0x10
  40ea88:	str	x8, [sp, #8]
  40ea8c:	ldur	x8, [x29, #-40]
  40ea90:	ldr	w9, [x8]
  40ea94:	mov	w8, w9
  40ea98:	cmp	x8, #0x24
  40ea9c:	b.cs	40eabc <rtnl_send_check@@Base+0x150>  // b.hs, b.nlast
  40eaa0:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40eaa4:	ldr	x8, [x8, #3992]
  40eaa8:	ldr	x0, [x8]
  40eaac:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40eab0:	add	x1, x1, #0xf15
  40eab4:	bl	4051e0 <fprintf@plt>
  40eab8:	b	40eadc <rtnl_send_check@@Base+0x170>
  40eabc:	ldr	x8, [sp, #8]
  40eac0:	ldr	w9, [x8]
  40eac4:	mov	w10, wzr
  40eac8:	subs	w9, w10, w9
  40eacc:	str	w9, [sp]
  40ead0:	bl	4051b0 <__errno_location@plt>
  40ead4:	ldr	w9, [sp]
  40ead8:	str	w9, [x0]
  40eadc:	mov	w8, #0xffffffff            	// #-1
  40eae0:	stur	w8, [x29, #-4]
  40eae4:	b	40eb38 <rtnl_send_check@@Base+0x1cc>
  40eae8:	ldur	x8, [x29, #-40]
  40eaec:	ldr	w9, [x8]
  40eaf0:	add	w9, w9, #0x4
  40eaf4:	subs	w9, w9, #0x1
  40eaf8:	and	w9, w9, #0xfffffffc
  40eafc:	ldur	w10, [x29, #-44]
  40eb00:	subs	w9, w10, w9
  40eb04:	stur	w9, [x29, #-44]
  40eb08:	ldur	x8, [x29, #-40]
  40eb0c:	ldur	x11, [x29, #-40]
  40eb10:	ldr	w9, [x11]
  40eb14:	add	w9, w9, #0x4
  40eb18:	subs	w9, w9, #0x1
  40eb1c:	and	w9, w9, #0xfffffffc
  40eb20:	mov	w11, w9
  40eb24:	ubfx	x11, x11, #0, #32
  40eb28:	add	x8, x8, x11
  40eb2c:	stur	x8, [x29, #-40]
  40eb30:	b	40ea1c <rtnl_send_check@@Base+0xb0>
  40eb34:	stur	wzr, [x29, #-4]
  40eb38:	ldur	w0, [x29, #-4]
  40eb3c:	add	sp, sp, #0x440
  40eb40:	ldr	x28, [sp, #16]
  40eb44:	ldp	x29, x30, [sp], #32
  40eb48:	ret

000000000040eb4c <rtnl_dump_request@@Base>:
  40eb4c:	sub	sp, sp, #0xa0
  40eb50:	stp	x29, x30, [sp, #144]
  40eb54:	add	x29, sp, #0x90
  40eb58:	mov	w8, #0x301                 	// #769
  40eb5c:	mov	w9, wzr
  40eb60:	adrp	x10, 412000 <_IO_stdin_used@@Base+0xb00>
  40eb64:	add	x10, x10, #0x21c
  40eb68:	mov	x11, #0x10                  	// #16
  40eb6c:	mov	w12, #0xc                   	// #12
  40eb70:	mov	x13, #0x2                   	// #2
  40eb74:	mov	x14, xzr
  40eb78:	sub	x15, x29, #0x2c
  40eb7c:	sub	x16, x29, #0x38
  40eb80:	add	x17, sp, #0x38
  40eb84:	mov	x18, sp
  40eb88:	stur	x0, [x29, #-8]
  40eb8c:	stur	w1, [x29, #-12]
  40eb90:	stur	x2, [x29, #-24]
  40eb94:	stur	w3, [x29, #-28]
  40eb98:	ldur	w1, [x29, #-28]
  40eb9c:	add	w1, w1, #0x10
  40eba0:	stur	w1, [x29, #-44]
  40eba4:	ldur	w1, [x29, #-12]
  40eba8:	strh	w1, [x15, #4]
  40ebac:	strh	w8, [x15, #6]
  40ebb0:	ldur	x0, [x29, #-8]
  40ebb4:	ldr	w8, [x0, #28]
  40ebb8:	add	w8, w8, #0x1
  40ebbc:	str	w8, [x0, #28]
  40ebc0:	ldur	x0, [x29, #-8]
  40ebc4:	str	w8, [x0, #32]
  40ebc8:	stur	w8, [x29, #-36]
  40ebcc:	stur	wzr, [x29, #-32]
  40ebd0:	ldr	x0, [x10]
  40ebd4:	stur	x0, [x29, #-56]
  40ebd8:	ldr	w8, [x10, #8]
  40ebdc:	stur	w8, [x29, #-48]
  40ebe0:	str	x15, [sp, #56]
  40ebe4:	str	x11, [sp, #64]
  40ebe8:	ldur	x10, [x29, #-24]
  40ebec:	str	x10, [x17, #16]
  40ebf0:	ldursw	x10, [x29, #-28]
  40ebf4:	str	x10, [sp, #80]
  40ebf8:	str	x16, [sp]
  40ebfc:	str	w12, [sp, #8]
  40ec00:	str	x17, [x18, #16]
  40ec04:	str	x13, [sp, #24]
  40ec08:	str	x14, [x18, #32]
  40ec0c:	str	xzr, [sp, #40]
  40ec10:	str	wzr, [sp, #48]
  40ec14:	ldur	x10, [x29, #-8]
  40ec18:	ldr	w0, [x10]
  40ec1c:	mov	x1, x18
  40ec20:	mov	w2, w9
  40ec24:	bl	404ec0 <sendmsg@plt>
  40ec28:	ldp	x29, x30, [sp, #144]
  40ec2c:	add	sp, sp, #0xa0
  40ec30:	ret

000000000040ec34 <rtnl_dump_request_n@@Base>:
  40ec34:	sub	sp, sp, #0x80
  40ec38:	stp	x29, x30, [sp, #112]
  40ec3c:	add	x29, sp, #0x70
  40ec40:	adrp	x8, 412000 <_IO_stdin_used@@Base+0xb00>
  40ec44:	add	x8, x8, #0x228
  40ec48:	mov	w9, #0xc                   	// #12
  40ec4c:	mov	x10, #0x1                   	// #1
  40ec50:	mov	x11, xzr
  40ec54:	mov	w12, wzr
  40ec58:	mov	w13, #0x301                 	// #769
  40ec5c:	sub	x14, x29, #0x20
  40ec60:	sub	x15, x29, #0x30
  40ec64:	add	x16, sp, #0x8
  40ec68:	stur	x0, [x29, #-8]
  40ec6c:	stur	x1, [x29, #-16]
  40ec70:	ldr	x17, [x8]
  40ec74:	stur	x17, [x29, #-32]
  40ec78:	ldr	w18, [x8, #8]
  40ec7c:	stur	w18, [x29, #-24]
  40ec80:	ldur	x8, [x29, #-16]
  40ec84:	stur	x8, [x29, #-48]
  40ec88:	ldur	x8, [x29, #-16]
  40ec8c:	ldr	w18, [x8]
  40ec90:	mov	w8, w18
  40ec94:	stur	x8, [x29, #-40]
  40ec98:	str	x14, [sp, #8]
  40ec9c:	str	w9, [sp, #16]
  40eca0:	str	x15, [x16, #16]
  40eca4:	str	x10, [sp, #32]
  40eca8:	str	x11, [x16, #32]
  40ecac:	str	xzr, [sp, #48]
  40ecb0:	str	wzr, [sp, #56]
  40ecb4:	ldur	x8, [x29, #-16]
  40ecb8:	strh	w13, [x8, #6]
  40ecbc:	ldur	x8, [x29, #-16]
  40ecc0:	str	wzr, [x8, #12]
  40ecc4:	ldur	x8, [x29, #-8]
  40ecc8:	ldr	w9, [x8, #28]
  40eccc:	add	w9, w9, #0x1
  40ecd0:	str	w9, [x8, #28]
  40ecd4:	ldur	x8, [x29, #-8]
  40ecd8:	str	w9, [x8, #32]
  40ecdc:	ldur	x8, [x29, #-16]
  40ece0:	str	w9, [x8, #8]
  40ece4:	ldur	x8, [x29, #-8]
  40ece8:	ldr	w0, [x8]
  40ecec:	mov	x1, x16
  40ecf0:	mov	w2, w12
  40ecf4:	bl	404ec0 <sendmsg@plt>
  40ecf8:	ldp	x29, x30, [sp, #112]
  40ecfc:	add	sp, sp, #0x80
  40ed00:	ret

000000000040ed04 <rtnl_dump_filter_nc@@Base>:
  40ed04:	sub	sp, sp, #0x60
  40ed08:	stp	x29, x30, [sp, #80]
  40ed0c:	add	x29, sp, #0x50
  40ed10:	mov	w8, #0x0                   	// #0
  40ed14:	mov	x9, sp
  40ed18:	stur	x0, [x29, #-8]
  40ed1c:	stur	x1, [x29, #-16]
  40ed20:	stur	x2, [x29, #-24]
  40ed24:	sturh	w3, [x29, #-26]
  40ed28:	ldur	x10, [x29, #-16]
  40ed2c:	str	x10, [sp]
  40ed30:	ldur	x10, [x29, #-24]
  40ed34:	str	x10, [x9, #8]
  40ed38:	ldurh	w11, [x29, #-26]
  40ed3c:	strh	w11, [x9, #16]
  40ed40:	str	xzr, [sp, #24]
  40ed44:	str	xzr, [sp, #32]
  40ed48:	str	xzr, [sp, #40]
  40ed4c:	strh	w8, [x9, #40]
  40ed50:	ldur	x0, [x29, #-8]
  40ed54:	mov	x1, x9
  40ed58:	bl	40ed68 <rtnl_dump_filter_nc@@Base+0x64>
  40ed5c:	ldp	x29, x30, [sp, #80]
  40ed60:	add	sp, sp, #0x60
  40ed64:	ret
  40ed68:	sub	sp, sp, #0xd0
  40ed6c:	stp	x29, x30, [sp, #192]
  40ed70:	add	x29, sp, #0xc0
  40ed74:	sub	x8, x29, #0x18
  40ed78:	mov	w9, #0xc                   	// #12
  40ed7c:	mov	x10, #0x1                   	// #1
  40ed80:	mov	x11, xzr
  40ed84:	adrp	x12, 422000 <_IO_stdin_used@@Base+0x10b00>
  40ed88:	ldr	x12, [x12, #3992]
  40ed8c:	sub	x13, x29, #0x24
  40ed90:	sub	x14, x29, #0x38
  40ed94:	add	x15, sp, #0x50
  40ed98:	str	x0, [x8, #8]
  40ed9c:	str	x1, [x8]
  40eda0:	str	x13, [sp, #80]
  40eda4:	str	w9, [sp, #88]
  40eda8:	str	x14, [x15, #16]
  40edac:	str	x10, [sp, #104]
  40edb0:	str	x11, [x15, #32]
  40edb4:	str	xzr, [sp, #120]
  40edb8:	str	wzr, [sp, #128]
  40edbc:	str	wzr, [sp, #68]
  40edc0:	str	x8, [sp, #24]
  40edc4:	str	x12, [sp, #16]
  40edc8:	str	wzr, [sp, #52]
  40edcc:	str	wzr, [sp, #48]
  40edd0:	ldr	x8, [sp, #24]
  40edd4:	ldr	x9, [x8, #8]
  40edd8:	ldr	w0, [x9]
  40eddc:	add	x1, sp, #0x50
  40ede0:	add	x2, sp, #0x48
  40ede4:	bl	410cac <__parse_rtattr_nested_compat@@Base+0x118>
  40ede8:	str	w0, [sp, #64]
  40edec:	ldr	w10, [sp, #64]
  40edf0:	cmp	w10, #0x0
  40edf4:	cset	w10, ge  // ge = tcont
  40edf8:	tbnz	w10, #0, 40ee08 <rtnl_dump_filter_nc@@Base+0x104>
  40edfc:	ldr	w8, [sp, #64]
  40ee00:	stur	w8, [x29, #-4]
  40ee04:	b	40f0f0 <rtnl_dump_filter_nc@@Base+0x3ec>
  40ee08:	ldr	x8, [sp, #24]
  40ee0c:	ldr	x9, [x8, #8]
  40ee10:	ldr	x9, [x9, #40]
  40ee14:	cbz	x9, 40ee48 <rtnl_dump_filter_nc@@Base+0x144>
  40ee18:	ldr	x0, [sp, #72]
  40ee1c:	ldr	w8, [sp, #64]
  40ee20:	add	w8, w8, #0x4
  40ee24:	subs	w8, w8, #0x1
  40ee28:	and	w8, w8, #0xfffffffc
  40ee2c:	mov	w9, w8
  40ee30:	ubfx	x2, x9, #0, #32
  40ee34:	ldr	x9, [sp, #24]
  40ee38:	ldr	x10, [x9, #8]
  40ee3c:	ldr	x3, [x10, #40]
  40ee40:	mov	x1, #0x1                   	// #1
  40ee44:	bl	405080 <fwrite@plt>
  40ee48:	ldr	x8, [sp, #24]
  40ee4c:	ldr	x9, [x8]
  40ee50:	str	x9, [sp, #56]
  40ee54:	ldr	x8, [sp, #56]
  40ee58:	ldr	x8, [x8]
  40ee5c:	cbz	x8, 40f068 <rtnl_dump_filter_nc@@Base+0x364>
  40ee60:	ldr	x8, [sp, #72]
  40ee64:	str	x8, [sp, #40]
  40ee68:	ldr	w9, [sp, #64]
  40ee6c:	str	w9, [sp, #48]
  40ee70:	ldr	w8, [sp, #48]
  40ee74:	mov	w9, #0x0                   	// #0
  40ee78:	cmp	w8, #0x10
  40ee7c:	str	w9, [sp, #12]
  40ee80:	b.lt	40eeb8 <rtnl_dump_filter_nc@@Base+0x1b4>  // b.tstop
  40ee84:	ldr	x8, [sp, #40]
  40ee88:	ldr	w9, [x8]
  40ee8c:	mov	w8, w9
  40ee90:	mov	w9, #0x0                   	// #0
  40ee94:	cmp	x8, #0x10
  40ee98:	str	w9, [sp, #12]
  40ee9c:	b.cc	40eeb8 <rtnl_dump_filter_nc@@Base+0x1b4>  // b.lo, b.ul, b.last
  40eea0:	ldr	x8, [sp, #40]
  40eea4:	ldr	w9, [x8]
  40eea8:	ldr	w10, [sp, #48]
  40eeac:	cmp	w9, w10
  40eeb0:	cset	w9, ls  // ls = plast
  40eeb4:	str	w9, [sp, #12]
  40eeb8:	ldr	w8, [sp, #12]
  40eebc:	tbnz	w8, #0, 40eec4 <rtnl_dump_filter_nc@@Base+0x1c0>
  40eec0:	b	40f058 <rtnl_dump_filter_nc@@Base+0x354>
  40eec4:	str	wzr, [sp, #36]
  40eec8:	ldr	x8, [sp, #56]
  40eecc:	ldrh	w9, [x8, #16]
  40eed0:	ldr	x8, [sp, #40]
  40eed4:	ldrh	w10, [x8, #6]
  40eed8:	bic	w9, w10, w9
  40eedc:	strh	w9, [x8, #6]
  40eee0:	ldur	w9, [x29, #-32]
  40eee4:	cbnz	w9, 40ef20 <rtnl_dump_filter_nc@@Base+0x21c>
  40eee8:	ldr	x8, [sp, #40]
  40eeec:	ldr	w9, [x8, #12]
  40eef0:	ldr	x8, [sp, #24]
  40eef4:	ldr	x10, [x8, #8]
  40eef8:	ldr	w11, [x10, #8]
  40eefc:	cmp	w9, w11
  40ef00:	b.ne	40ef20 <rtnl_dump_filter_nc@@Base+0x21c>  // b.any
  40ef04:	ldr	x8, [sp, #40]
  40ef08:	ldr	w9, [x8, #8]
  40ef0c:	ldr	x8, [sp, #24]
  40ef10:	ldr	x10, [x8, #8]
  40ef14:	ldr	w11, [x10, #32]
  40ef18:	cmp	w9, w11
  40ef1c:	b.eq	40ef24 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40ef20:	b	40f00c <rtnl_dump_filter_nc@@Base+0x308>
  40ef24:	ldr	x8, [sp, #40]
  40ef28:	ldrh	w9, [x8, #6]
  40ef2c:	and	w9, w9, #0x10
  40ef30:	cbz	w9, 40ef3c <rtnl_dump_filter_nc@@Base+0x238>
  40ef34:	mov	w8, #0x1                   	// #1
  40ef38:	str	w8, [sp, #68]
  40ef3c:	ldr	x8, [sp, #40]
  40ef40:	ldrh	w9, [x8, #4]
  40ef44:	cmp	w9, #0x3
  40ef48:	b.ne	40ef88 <rtnl_dump_filter_nc@@Base+0x284>  // b.any
  40ef4c:	ldr	x0, [sp, #40]
  40ef50:	bl	410df0 <__parse_rtattr_nested_compat@@Base+0x25c>
  40ef54:	str	w0, [sp, #36]
  40ef58:	ldr	w8, [sp, #36]
  40ef5c:	cmp	w8, #0x0
  40ef60:	cset	w8, ge  // ge = tcont
  40ef64:	tbnz	w8, #0, 40ef7c <rtnl_dump_filter_nc@@Base+0x278>
  40ef68:	ldr	x0, [sp, #72]
  40ef6c:	bl	405020 <free@plt>
  40ef70:	mov	w8, #0xffffffff            	// #-1
  40ef74:	stur	w8, [x29, #-4]
  40ef78:	b	40f0f0 <rtnl_dump_filter_nc@@Base+0x3ec>
  40ef7c:	mov	w8, #0x1                   	// #1
  40ef80:	str	w8, [sp, #52]
  40ef84:	b	40f058 <rtnl_dump_filter_nc@@Base+0x354>
  40ef88:	ldr	x8, [sp, #40]
  40ef8c:	ldrh	w9, [x8, #4]
  40ef90:	cmp	w9, #0x2
  40ef94:	b.ne	40efbc <rtnl_dump_filter_nc@@Base+0x2b8>  // b.any
  40ef98:	ldr	x8, [sp, #24]
  40ef9c:	ldr	x0, [x8, #8]
  40efa0:	ldr	x1, [sp, #40]
  40efa4:	bl	410f30 <__parse_rtattr_nested_compat@@Base+0x39c>
  40efa8:	ldr	x0, [sp, #72]
  40efac:	bl	405020 <free@plt>
  40efb0:	mov	w9, #0xffffffff            	// #-1
  40efb4:	stur	w9, [x29, #-4]
  40efb8:	b	40f0f0 <rtnl_dump_filter_nc@@Base+0x3ec>
  40efbc:	ldr	x8, [sp, #24]
  40efc0:	ldr	x9, [x8, #8]
  40efc4:	ldr	x9, [x9, #40]
  40efc8:	cbnz	x9, 40f00c <rtnl_dump_filter_nc@@Base+0x308>
  40efcc:	ldr	x8, [sp, #56]
  40efd0:	ldr	x8, [x8]
  40efd4:	ldr	x0, [sp, #40]
  40efd8:	ldr	x9, [sp, #56]
  40efdc:	ldr	x1, [x9, #8]
  40efe0:	blr	x8
  40efe4:	str	w0, [sp, #36]
  40efe8:	ldr	w10, [sp, #36]
  40efec:	cmp	w10, #0x0
  40eff0:	cset	w10, ge  // ge = tcont
  40eff4:	tbnz	w10, #0, 40f00c <rtnl_dump_filter_nc@@Base+0x308>
  40eff8:	ldr	x0, [sp, #72]
  40effc:	bl	405020 <free@plt>
  40f000:	ldr	w8, [sp, #36]
  40f004:	stur	w8, [x29, #-4]
  40f008:	b	40f0f0 <rtnl_dump_filter_nc@@Base+0x3ec>
  40f00c:	ldr	x8, [sp, #40]
  40f010:	ldr	w9, [x8]
  40f014:	add	w9, w9, #0x4
  40f018:	subs	w9, w9, #0x1
  40f01c:	and	w9, w9, #0xfffffffc
  40f020:	ldr	w10, [sp, #48]
  40f024:	subs	w9, w10, w9
  40f028:	str	w9, [sp, #48]
  40f02c:	ldr	x8, [sp, #40]
  40f030:	ldr	x11, [sp, #40]
  40f034:	ldr	w9, [x11]
  40f038:	add	w9, w9, #0x4
  40f03c:	subs	w9, w9, #0x1
  40f040:	and	w9, w9, #0xfffffffc
  40f044:	mov	w11, w9
  40f048:	ubfx	x11, x11, #0, #32
  40f04c:	add	x8, x8, x11
  40f050:	str	x8, [sp, #40]
  40f054:	b	40ee70 <rtnl_dump_filter_nc@@Base+0x16c>
  40f058:	ldr	x8, [sp, #56]
  40f05c:	add	x8, x8, #0x18
  40f060:	str	x8, [sp, #56]
  40f064:	b	40ee54 <rtnl_dump_filter_nc@@Base+0x150>
  40f068:	ldr	x0, [sp, #72]
  40f06c:	bl	405020 <free@plt>
  40f070:	ldr	w8, [sp, #52]
  40f074:	cbz	w8, 40f09c <rtnl_dump_filter_nc@@Base+0x398>
  40f078:	ldr	w8, [sp, #68]
  40f07c:	cbz	w8, 40f094 <rtnl_dump_filter_nc@@Base+0x390>
  40f080:	ldr	x8, [sp, #16]
  40f084:	ldr	x0, [x8]
  40f088:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  40f08c:	add	x1, x1, #0x123
  40f090:	bl	4051e0 <fprintf@plt>
  40f094:	stur	wzr, [x29, #-4]
  40f098:	b	40f0f0 <rtnl_dump_filter_nc@@Base+0x3ec>
  40f09c:	ldr	w8, [sp, #128]
  40f0a0:	and	w8, w8, #0x20
  40f0a4:	cbz	w8, 40f0c0 <rtnl_dump_filter_nc@@Base+0x3bc>
  40f0a8:	ldr	x8, [sp, #16]
  40f0ac:	ldr	x0, [x8]
  40f0b0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f0b4:	add	x1, x1, #0xfbb
  40f0b8:	bl	4051e0 <fprintf@plt>
  40f0bc:	b	40edc8 <rtnl_dump_filter_nc@@Base+0xc4>
  40f0c0:	ldr	w8, [sp, #48]
  40f0c4:	cbz	w8, 40f0ec <rtnl_dump_filter_nc@@Base+0x3e8>
  40f0c8:	ldr	x8, [sp, #16]
  40f0cc:	ldr	x0, [x8]
  40f0d0:	ldr	w2, [sp, #48]
  40f0d4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f0d8:	add	x1, x1, #0xfce
  40f0dc:	bl	4051e0 <fprintf@plt>
  40f0e0:	mov	w9, #0x1                   	// #1
  40f0e4:	mov	w0, w9
  40f0e8:	bl	404ce0 <exit@plt>
  40f0ec:	b	40edc8 <rtnl_dump_filter_nc@@Base+0xc4>
  40f0f0:	ldur	w0, [x29, #-4]
  40f0f4:	ldp	x29, x30, [sp, #192]
  40f0f8:	add	sp, sp, #0xd0
  40f0fc:	ret

000000000040f100 <rtnl_talk@@Base>:
  40f100:	sub	sp, sp, #0x30
  40f104:	stp	x29, x30, [sp, #32]
  40f108:	add	x29, sp, #0x20
  40f10c:	mov	x8, xzr
  40f110:	stur	x0, [x29, #-8]
  40f114:	str	x1, [sp, #16]
  40f118:	str	x2, [sp, #8]
  40f11c:	ldur	x0, [x29, #-8]
  40f120:	ldr	x1, [sp, #16]
  40f124:	ldr	x2, [sp, #8]
  40f128:	mov	w9, #0x1                   	// #1
  40f12c:	and	w3, w9, #0x1
  40f130:	mov	x4, x8
  40f134:	bl	40f144 <rtnl_talk@@Base+0x44>
  40f138:	ldp	x29, x30, [sp, #32]
  40f13c:	add	sp, sp, #0x30
  40f140:	ret
  40f144:	sub	sp, sp, #0x50
  40f148:	stp	x29, x30, [sp, #64]
  40f14c:	add	x29, sp, #0x40
  40f150:	mov	x8, #0x1                   	// #1
  40f154:	add	x9, sp, #0x8
  40f158:	stur	x0, [x29, #-8]
  40f15c:	stur	x1, [x29, #-16]
  40f160:	stur	x2, [x29, #-24]
  40f164:	mov	w10, #0x1                   	// #1
  40f168:	and	w10, w3, w10
  40f16c:	sturb	w10, [x29, #-25]
  40f170:	str	x4, [sp, #24]
  40f174:	ldur	x11, [x29, #-16]
  40f178:	str	x11, [sp, #8]
  40f17c:	ldur	x11, [x29, #-16]
  40f180:	ldr	w10, [x11]
  40f184:	mov	w11, w10
  40f188:	str	x11, [sp, #16]
  40f18c:	ldur	x0, [x29, #-8]
  40f190:	ldur	x3, [x29, #-24]
  40f194:	ldurb	w10, [x29, #-25]
  40f198:	ldr	x5, [sp, #24]
  40f19c:	mov	x1, x9
  40f1a0:	mov	x2, x8
  40f1a4:	and	w4, w10, #0x1
  40f1a8:	bl	40f204 <rtnl_talk_iov@@Base+0x4c>
  40f1ac:	ldp	x29, x30, [sp, #64]
  40f1b0:	add	sp, sp, #0x50
  40f1b4:	ret

000000000040f1b8 <rtnl_talk_iov@@Base>:
  40f1b8:	sub	sp, sp, #0x30
  40f1bc:	stp	x29, x30, [sp, #32]
  40f1c0:	add	x29, sp, #0x20
  40f1c4:	mov	x8, xzr
  40f1c8:	stur	x0, [x29, #-8]
  40f1cc:	str	x1, [sp, #16]
  40f1d0:	str	x2, [sp, #8]
  40f1d4:	str	x3, [sp]
  40f1d8:	ldur	x0, [x29, #-8]
  40f1dc:	ldr	x1, [sp, #16]
  40f1e0:	ldr	x2, [sp, #8]
  40f1e4:	ldr	x3, [sp]
  40f1e8:	mov	w9, #0x1                   	// #1
  40f1ec:	and	w4, w9, #0x1
  40f1f0:	mov	x5, x8
  40f1f4:	bl	40f204 <rtnl_talk_iov@@Base+0x4c>
  40f1f8:	ldp	x29, x30, [sp, #32]
  40f1fc:	add	sp, sp, #0x30
  40f200:	ret
  40f204:	sub	sp, sp, #0xf0
  40f208:	stp	x29, x30, [sp, #224]
  40f20c:	add	x29, sp, #0xe0
  40f210:	sub	x8, x29, #0x38
  40f214:	adrp	x9, 412000 <_IO_stdin_used@@Base+0xb00>
  40f218:	add	x9, x9, #0x240
  40f21c:	mov	w10, #0xc                   	// #12
  40f220:	mov	x11, xzr
  40f224:	mov	w12, #0x1                   	// #1
  40f228:	adrp	x13, 422000 <_IO_stdin_used@@Base+0x10b00>
  40f22c:	ldr	x13, [x13, #3992]
  40f230:	sub	x14, x29, #0x48
  40f234:	add	x15, sp, #0x50
  40f238:	str	x0, [x8, #40]
  40f23c:	str	x1, [x8, #32]
  40f240:	str	x2, [x8, #24]
  40f244:	str	x3, [x8, #16]
  40f248:	and	w12, w4, w12
  40f24c:	sturb	w12, [x29, #-41]
  40f250:	str	x5, [x8]
  40f254:	ldr	x16, [x9]
  40f258:	stur	x16, [x29, #-72]
  40f25c:	ldr	w12, [x9, #8]
  40f260:	stur	w12, [x29, #-64]
  40f264:	str	x14, [sp, #80]
  40f268:	str	w10, [sp, #88]
  40f26c:	ldr	x9, [x8, #32]
  40f270:	str	x9, [x15, #16]
  40f274:	ldr	x9, [x8, #24]
  40f278:	str	x9, [sp, #104]
  40f27c:	str	x11, [x15, #32]
  40f280:	str	xzr, [sp, #120]
  40f284:	str	wzr, [sp, #128]
  40f288:	str	wzr, [sp, #76]
  40f28c:	str	wzr, [sp, #60]
  40f290:	str	x8, [sp, #16]
  40f294:	str	x13, [sp, #8]
  40f298:	ldrsw	x8, [sp, #60]
  40f29c:	ldr	x9, [sp, #16]
  40f2a0:	ldr	x10, [x9, #24]
  40f2a4:	cmp	x8, x10
  40f2a8:	b.cs	40f310 <rtnl_talk_iov@@Base+0x158>  // b.hs, b.nlast
  40f2ac:	ldr	x8, [sp, #16]
  40f2b0:	ldr	x9, [x8, #32]
  40f2b4:	ldrsw	x10, [sp, #60]
  40f2b8:	mov	x11, #0x10                  	// #16
  40f2bc:	mul	x10, x11, x10
  40f2c0:	add	x9, x9, x10
  40f2c4:	ldr	x9, [x9]
  40f2c8:	str	x9, [sp, #64]
  40f2cc:	ldr	x9, [x8, #40]
  40f2d0:	ldr	w12, [x9, #28]
  40f2d4:	add	w12, w12, #0x1
  40f2d8:	str	w12, [x9, #28]
  40f2dc:	str	w12, [sp, #76]
  40f2e0:	ldr	x9, [sp, #64]
  40f2e4:	str	w12, [x9, #8]
  40f2e8:	ldr	x9, [x8, #16]
  40f2ec:	cbnz	x9, 40f300 <rtnl_talk_iov@@Base+0x148>
  40f2f0:	ldr	x8, [sp, #64]
  40f2f4:	ldrh	w9, [x8, #6]
  40f2f8:	orr	w9, w9, #0x4
  40f2fc:	strh	w9, [x8, #6]
  40f300:	ldr	w8, [sp, #60]
  40f304:	add	w8, w8, #0x1
  40f308:	str	w8, [sp, #60]
  40f30c:	b	40f298 <rtnl_talk_iov@@Base+0xe0>
  40f310:	ldr	x8, [sp, #16]
  40f314:	ldr	x9, [x8, #40]
  40f318:	ldr	w0, [x9]
  40f31c:	add	x1, sp, #0x50
  40f320:	mov	w10, wzr
  40f324:	mov	w2, w10
  40f328:	bl	404ec0 <sendmsg@plt>
  40f32c:	str	w0, [sp, #56]
  40f330:	ldr	w10, [sp, #56]
  40f334:	cmp	w10, #0x0
  40f338:	cset	w10, ge  // ge = tcont
  40f33c:	tbnz	w10, #0, 40f358 <rtnl_talk_iov@@Base+0x1a0>
  40f340:	adrp	x0, 412000 <_IO_stdin_used@@Base+0xb00>
  40f344:	add	x0, x0, #0x1ba
  40f348:	bl	404cf0 <perror@plt>
  40f34c:	mov	w8, #0xffffffff            	// #-1
  40f350:	stur	w8, [x29, #-4]
  40f354:	b	40f748 <rtnl_talk_iov@@Base+0x590>
  40f358:	add	x8, sp, #0x50
  40f35c:	sub	x9, x29, #0x58
  40f360:	str	x9, [x8, #16]
  40f364:	mov	x8, #0x1                   	// #1
  40f368:	str	x8, [sp, #104]
  40f36c:	str	wzr, [sp, #60]
  40f370:	ldr	x8, [sp, #16]
  40f374:	ldr	x9, [x8, #40]
  40f378:	ldr	w0, [x9]
  40f37c:	add	x1, sp, #0x50
  40f380:	add	x2, sp, #0x30
  40f384:	bl	410cac <__parse_rtattr_nested_compat@@Base+0x118>
  40f388:	str	w0, [sp, #56]
  40f38c:	ldr	w10, [sp, #60]
  40f390:	add	w10, w10, #0x1
  40f394:	str	w10, [sp, #60]
  40f398:	ldr	w10, [sp, #56]
  40f39c:	cmp	w10, #0x0
  40f3a0:	cset	w10, ge  // ge = tcont
  40f3a4:	tbnz	w10, #0, 40f3b4 <rtnl_talk_iov@@Base+0x1fc>
  40f3a8:	ldr	w8, [sp, #56]
  40f3ac:	stur	w8, [x29, #-4]
  40f3b0:	b	40f748 <rtnl_talk_iov@@Base+0x590>
  40f3b4:	ldr	w8, [sp, #88]
  40f3b8:	mov	w9, w8
  40f3bc:	cmp	x9, #0xc
  40f3c0:	b.eq	40f3e8 <rtnl_talk_iov@@Base+0x230>  // b.none
  40f3c4:	ldr	x8, [sp, #8]
  40f3c8:	ldr	x0, [x8]
  40f3cc:	ldr	w2, [sp, #88]
  40f3d0:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  40f3d4:	add	x1, x1, #0x1d3
  40f3d8:	bl	4051e0 <fprintf@plt>
  40f3dc:	mov	w9, #0x1                   	// #1
  40f3e0:	mov	w0, w9
  40f3e4:	bl	404ce0 <exit@plt>
  40f3e8:	ldr	x8, [sp, #48]
  40f3ec:	str	x8, [sp, #64]
  40f3f0:	ldrsw	x8, [sp, #56]
  40f3f4:	cmp	x8, #0x10
  40f3f8:	b.cc	40f6ec <rtnl_talk_iov@@Base+0x534>  // b.lo, b.ul, b.last
  40f3fc:	ldr	x8, [sp, #64]
  40f400:	ldr	w9, [x8]
  40f404:	str	w9, [sp, #44]
  40f408:	ldrsw	x8, [sp, #44]
  40f40c:	subs	x8, x8, #0x10
  40f410:	str	w8, [sp, #40]
  40f414:	ldr	w8, [sp, #40]
  40f418:	cmp	w8, #0x0
  40f41c:	cset	w8, lt  // lt = tstop
  40f420:	tbnz	w8, #0, 40f434 <rtnl_talk_iov@@Base+0x27c>
  40f424:	ldr	w8, [sp, #44]
  40f428:	ldr	w9, [sp, #56]
  40f42c:	cmp	w8, w9
  40f430:	b.le	40f490 <rtnl_talk_iov@@Base+0x2d8>
  40f434:	ldr	w8, [sp, #128]
  40f438:	and	w8, w8, #0x20
  40f43c:	cbz	w8, 40f46c <rtnl_talk_iov@@Base+0x2b4>
  40f440:	ldr	x8, [sp, #8]
  40f444:	ldr	x0, [x8]
  40f448:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f44c:	add	x1, x1, #0xf8a
  40f450:	bl	4051e0 <fprintf@plt>
  40f454:	ldr	x8, [sp, #48]
  40f458:	mov	x0, x8
  40f45c:	bl	405020 <free@plt>
  40f460:	mov	w9, #0xffffffff            	// #-1
  40f464:	stur	w9, [x29, #-4]
  40f468:	b	40f748 <rtnl_talk_iov@@Base+0x590>
  40f46c:	ldr	x8, [sp, #8]
  40f470:	ldr	x0, [x8]
  40f474:	ldr	w2, [sp, #44]
  40f478:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f47c:	add	x1, x1, #0xf9d
  40f480:	bl	4051e0 <fprintf@plt>
  40f484:	mov	w9, #0x1                   	// #1
  40f488:	mov	w0, w9
  40f48c:	bl	404ce0 <exit@plt>
  40f490:	ldur	w8, [x29, #-68]
  40f494:	cbnz	w8, 40f4f0 <rtnl_talk_iov@@Base+0x338>
  40f498:	ldr	x8, [sp, #64]
  40f49c:	ldr	w9, [x8, #12]
  40f4a0:	ldr	x8, [sp, #16]
  40f4a4:	ldr	x10, [x8, #40]
  40f4a8:	ldr	w11, [x10, #8]
  40f4ac:	cmp	w9, w11
  40f4b0:	b.ne	40f4f0 <rtnl_talk_iov@@Base+0x338>  // b.any
  40f4b4:	ldr	x8, [sp, #64]
  40f4b8:	ldr	w9, [x8, #8]
  40f4bc:	ldr	w10, [sp, #76]
  40f4c0:	cmp	w9, w10
  40f4c4:	b.hi	40f4f0 <rtnl_talk_iov@@Base+0x338>  // b.pmore
  40f4c8:	ldr	x8, [sp, #64]
  40f4cc:	ldr	w9, [x8, #8]
  40f4d0:	mov	w8, w9
  40f4d4:	ldr	w9, [sp, #76]
  40f4d8:	mov	w10, w9
  40f4dc:	ldr	x11, [sp, #16]
  40f4e0:	ldr	x12, [x11, #24]
  40f4e4:	subs	x10, x10, x12
  40f4e8:	cmp	x8, x10
  40f4ec:	b.cs	40f534 <rtnl_talk_iov@@Base+0x37c>  // b.hs, b.nlast
  40f4f0:	ldr	w8, [sp, #44]
  40f4f4:	add	w8, w8, #0x4
  40f4f8:	subs	w8, w8, #0x1
  40f4fc:	and	w8, w8, #0xfffffffc
  40f500:	ldr	w9, [sp, #56]
  40f504:	subs	w8, w9, w8
  40f508:	str	w8, [sp, #56]
  40f50c:	ldr	x10, [sp, #64]
  40f510:	ldr	w8, [sp, #44]
  40f514:	add	w8, w8, #0x4
  40f518:	subs	w8, w8, #0x1
  40f51c:	and	w8, w8, #0xfffffffc
  40f520:	mov	w11, w8
  40f524:	ubfx	x11, x11, #0, #32
  40f528:	add	x10, x10, x11
  40f52c:	str	x10, [sp, #64]
  40f530:	b	40f3f0 <rtnl_talk_iov@@Base+0x238>
  40f534:	ldr	x8, [sp, #64]
  40f538:	ldrh	w9, [x8, #4]
  40f53c:	cmp	w9, #0x2
  40f540:	b.ne	40f670 <rtnl_talk_iov@@Base+0x4b8>  // b.any
  40f544:	ldr	x8, [sp, #64]
  40f548:	add	x8, x8, #0x10
  40f54c:	str	x8, [sp, #32]
  40f550:	ldr	x8, [sp, #32]
  40f554:	ldr	w9, [x8]
  40f558:	str	w9, [sp, #28]
  40f55c:	ldrsw	x8, [sp, #40]
  40f560:	cmp	x8, #0x14
  40f564:	b.cs	40f594 <rtnl_talk_iov@@Base+0x3dc>  // b.hs, b.nlast
  40f568:	ldr	x8, [sp, #8]
  40f56c:	ldr	x0, [x8]
  40f570:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f574:	add	x1, x1, #0xf15
  40f578:	bl	4051e0 <fprintf@plt>
  40f57c:	ldr	x8, [sp, #48]
  40f580:	mov	x0, x8
  40f584:	bl	405020 <free@plt>
  40f588:	mov	w9, #0xffffffff            	// #-1
  40f58c:	stur	w9, [x29, #-4]
  40f590:	b	40f748 <rtnl_talk_iov@@Base+0x590>
  40f594:	ldr	w8, [sp, #28]
  40f598:	cbnz	w8, 40f5b0 <rtnl_talk_iov@@Base+0x3f8>
  40f59c:	ldr	x0, [sp, #64]
  40f5a0:	ldr	x8, [sp, #16]
  40f5a4:	ldr	x1, [x8]
  40f5a8:	bl	40d8d4 <nl_dump_ext_ack@@Base>
  40f5ac:	b	40f600 <rtnl_talk_iov@@Base+0x448>
  40f5b0:	ldr	w8, [sp, #28]
  40f5b4:	mov	w9, wzr
  40f5b8:	subs	w8, w9, w8
  40f5bc:	str	w8, [sp, #4]
  40f5c0:	bl	4051b0 <__errno_location@plt>
  40f5c4:	ldr	w8, [sp, #4]
  40f5c8:	str	w8, [x0]
  40f5cc:	ldr	x10, [sp, #16]
  40f5d0:	ldr	x11, [x10, #40]
  40f5d4:	ldr	w9, [x11, #36]
  40f5d8:	cmp	w9, #0x4
  40f5dc:	b.eq	40f600 <rtnl_talk_iov@@Base+0x448>  // b.none
  40f5e0:	ldurb	w8, [x29, #-41]
  40f5e4:	tbnz	w8, #0, 40f5ec <rtnl_talk_iov@@Base+0x434>
  40f5e8:	b	40f600 <rtnl_talk_iov@@Base+0x448>
  40f5ec:	ldr	x0, [sp, #64]
  40f5f0:	ldr	x1, [sp, #32]
  40f5f4:	ldr	x8, [sp, #16]
  40f5f8:	ldr	x2, [x8]
  40f5fc:	bl	411124 <__parse_rtattr_nested_compat@@Base+0x590>
  40f600:	ldr	x8, [sp, #16]
  40f604:	ldr	x9, [x8, #16]
  40f608:	cbz	x9, 40f620 <rtnl_talk_iov@@Base+0x468>
  40f60c:	ldr	x8, [sp, #48]
  40f610:	ldr	x9, [sp, #16]
  40f614:	ldr	x10, [x9, #16]
  40f618:	str	x8, [x10]
  40f61c:	b	40f628 <rtnl_talk_iov@@Base+0x470>
  40f620:	ldr	x0, [sp, #48]
  40f624:	bl	405020 <free@plt>
  40f628:	ldrsw	x8, [sp, #60]
  40f62c:	ldr	x9, [sp, #16]
  40f630:	ldr	x10, [x9, #24]
  40f634:	cmp	x8, x10
  40f638:	b.cs	40f640 <rtnl_talk_iov@@Base+0x488>  // b.hs, b.nlast
  40f63c:	b	40f370 <rtnl_talk_iov@@Base+0x1b8>
  40f640:	ldr	w8, [sp, #28]
  40f644:	cbz	w8, 40f65c <rtnl_talk_iov@@Base+0x4a4>
  40f648:	ldr	w8, [sp, #60]
  40f64c:	mov	w9, wzr
  40f650:	subs	w8, w9, w8
  40f654:	str	w8, [sp]
  40f658:	b	40f664 <rtnl_talk_iov@@Base+0x4ac>
  40f65c:	mov	w8, wzr
  40f660:	str	w8, [sp]
  40f664:	ldr	w8, [sp]
  40f668:	stur	w8, [x29, #-4]
  40f66c:	b	40f748 <rtnl_talk_iov@@Base+0x590>
  40f670:	ldr	x8, [sp, #16]
  40f674:	ldr	x9, [x8, #16]
  40f678:	cbz	x9, 40f694 <rtnl_talk_iov@@Base+0x4dc>
  40f67c:	ldr	x8, [sp, #48]
  40f680:	ldr	x9, [sp, #16]
  40f684:	ldr	x10, [x9, #16]
  40f688:	str	x8, [x10]
  40f68c:	stur	wzr, [x29, #-4]
  40f690:	b	40f748 <rtnl_talk_iov@@Base+0x590>
  40f694:	ldr	x8, [sp, #8]
  40f698:	ldr	x0, [x8]
  40f69c:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  40f6a0:	add	x1, x1, #0x1f0
  40f6a4:	bl	4051e0 <fprintf@plt>
  40f6a8:	ldr	w9, [sp, #44]
  40f6ac:	add	w9, w9, #0x4
  40f6b0:	subs	w9, w9, #0x1
  40f6b4:	and	w9, w9, #0xfffffffc
  40f6b8:	ldr	w10, [sp, #56]
  40f6bc:	subs	w9, w10, w9
  40f6c0:	str	w9, [sp, #56]
  40f6c4:	ldr	x8, [sp, #64]
  40f6c8:	ldr	w9, [sp, #44]
  40f6cc:	add	w9, w9, #0x4
  40f6d0:	subs	w9, w9, #0x1
  40f6d4:	and	w9, w9, #0xfffffffc
  40f6d8:	mov	w11, w9
  40f6dc:	ubfx	x11, x11, #0, #32
  40f6e0:	add	x8, x8, x11
  40f6e4:	str	x8, [sp, #64]
  40f6e8:	b	40f3f0 <rtnl_talk_iov@@Base+0x238>
  40f6ec:	ldr	x0, [sp, #48]
  40f6f0:	bl	405020 <free@plt>
  40f6f4:	ldr	w8, [sp, #128]
  40f6f8:	and	w8, w8, #0x20
  40f6fc:	cbz	w8, 40f718 <rtnl_talk_iov@@Base+0x560>
  40f700:	ldr	x8, [sp, #8]
  40f704:	ldr	x0, [x8]
  40f708:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f70c:	add	x1, x1, #0xfbb
  40f710:	bl	4051e0 <fprintf@plt>
  40f714:	b	40f370 <rtnl_talk_iov@@Base+0x1b8>
  40f718:	ldr	w8, [sp, #56]
  40f71c:	cbz	w8, 40f744 <rtnl_talk_iov@@Base+0x58c>
  40f720:	ldr	x8, [sp, #8]
  40f724:	ldr	x0, [x8]
  40f728:	ldr	w2, [sp, #56]
  40f72c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f730:	add	x1, x1, #0xfce
  40f734:	bl	4051e0 <fprintf@plt>
  40f738:	mov	w9, #0x1                   	// #1
  40f73c:	mov	w0, w9
  40f740:	bl	404ce0 <exit@plt>
  40f744:	b	40f370 <rtnl_talk_iov@@Base+0x1b8>
  40f748:	ldur	w0, [x29, #-4]
  40f74c:	ldp	x29, x30, [sp, #224]
  40f750:	add	sp, sp, #0xf0
  40f754:	ret

000000000040f758 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40f758:	sub	sp, sp, #0x30
  40f75c:	stp	x29, x30, [sp, #32]
  40f760:	add	x29, sp, #0x20
  40f764:	mov	x8, xzr
  40f768:	stur	x0, [x29, #-8]
  40f76c:	str	x1, [sp, #16]
  40f770:	str	x2, [sp, #8]
  40f774:	ldur	x0, [x29, #-8]
  40f778:	ldr	x1, [sp, #16]
  40f77c:	ldr	x2, [sp, #8]
  40f780:	mov	w9, wzr
  40f784:	and	w3, w9, #0x1
  40f788:	mov	x4, x8
  40f78c:	bl	40f144 <rtnl_talk@@Base+0x44>
  40f790:	ldp	x29, x30, [sp, #32]
  40f794:	add	sp, sp, #0x30
  40f798:	ret

000000000040f79c <rtnl_listen_all_nsid@@Base>:
  40f79c:	sub	sp, sp, #0x30
  40f7a0:	stp	x29, x30, [sp, #32]
  40f7a4:	add	x29, sp, #0x20
  40f7a8:	mov	w8, #0x1                   	// #1
  40f7ac:	mov	w1, #0x10e                 	// #270
  40f7b0:	mov	w2, #0x8                   	// #8
  40f7b4:	mov	w4, #0x4                   	// #4
  40f7b8:	add	x3, sp, #0xc
  40f7bc:	str	x0, [sp, #16]
  40f7c0:	str	w8, [sp, #12]
  40f7c4:	ldr	x9, [sp, #16]
  40f7c8:	ldr	w0, [x9]
  40f7cc:	bl	404e50 <setsockopt@plt>
  40f7d0:	cmp	w0, #0x0
  40f7d4:	cset	w8, ge  // ge = tcont
  40f7d8:	tbnz	w8, #0, 40f7f4 <rtnl_listen_all_nsid@@Base+0x58>
  40f7dc:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f7e0:	add	x0, x0, #0xf26
  40f7e4:	bl	404cf0 <perror@plt>
  40f7e8:	mov	w8, #0xffffffff            	// #-1
  40f7ec:	stur	w8, [x29, #-4]
  40f7f0:	b	40f808 <rtnl_listen_all_nsid@@Base+0x6c>
  40f7f4:	ldr	x8, [sp, #16]
  40f7f8:	ldr	w9, [x8, #48]
  40f7fc:	orr	w9, w9, #0x1
  40f800:	str	w9, [x8, #48]
  40f804:	stur	wzr, [x29, #-4]
  40f808:	ldur	w0, [x29, #-4]
  40f80c:	ldp	x29, x30, [sp, #32]
  40f810:	add	sp, sp, #0x30
  40f814:	ret

000000000040f818 <rtnl_listen@@Base>:
  40f818:	stp	x29, x30, [sp, #-32]!
  40f81c:	str	x28, [sp, #16]
  40f820:	mov	x29, sp
  40f824:	sub	sp, sp, #0x6, lsl #12
  40f828:	sub	sp, sp, #0xe0
  40f82c:	sub	x8, x29, #0x88
  40f830:	adrp	x9, 412000 <_IO_stdin_used@@Base+0xb00>
  40f834:	add	x9, x9, #0x234
  40f838:	mov	w10, #0xc                   	// #12
  40f83c:	mov	x11, #0x1                   	// #1
  40f840:	mov	x12, xzr
  40f844:	adrp	x13, 422000 <_IO_stdin_used@@Base+0x10b00>
  40f848:	ldr	x13, [x13, #3992]
  40f84c:	sub	x14, x29, #0x40
  40f850:	sub	x15, x29, #0x50
  40f854:	sub	x16, x29, #0x88
  40f858:	str	x0, [x8, #120]
  40f85c:	str	x1, [x8, #112]
  40f860:	str	x2, [x8, #104]
  40f864:	ldr	x17, [x9]
  40f868:	str	x17, [x8, #72]
  40f86c:	ldr	w18, [x9, #8]
  40f870:	str	w18, [x8, #80]
  40f874:	str	x14, [x8]
  40f878:	str	w10, [x8, #8]
  40f87c:	str	x15, [x16, #16]
  40f880:	str	x11, [x8, #24]
  40f884:	str	x12, [x16, #32]
  40f888:	str	xzr, [x8, #40]
  40f88c:	str	wzr, [x8, #48]
  40f890:	ldr	x9, [x8, #120]
  40f894:	ldr	w10, [x9, #48]
  40f898:	and	w10, w10, #0x1
  40f89c:	str	x8, [sp, #40]
  40f8a0:	str	x13, [sp, #32]
  40f8a4:	cbz	w10, 40f8c0 <rtnl_listen@@Base+0xa8>
  40f8a8:	sub	x8, x29, #0x88
  40f8ac:	add	x9, sp, #0x58
  40f8b0:	str	x9, [x8, #32]
  40f8b4:	mov	x8, #0x2000                	// #8192
  40f8b8:	ldr	x9, [sp, #40]
  40f8bc:	str	x8, [x9, #40]
  40f8c0:	add	x8, sp, #0x2, lsl #12
  40f8c4:	add	x8, x8, #0x58
  40f8c8:	ldr	x9, [sp, #40]
  40f8cc:	str	x8, [x9, #56]
  40f8d0:	mov	x8, #0x4000                	// #16384
  40f8d4:	ldr	x9, [sp, #40]
  40f8d8:	str	x8, [x9, #64]
  40f8dc:	ldr	x8, [x9, #120]
  40f8e0:	ldr	w0, [x8]
  40f8e4:	sub	x1, x29, #0x88
  40f8e8:	mov	w10, wzr
  40f8ec:	mov	w2, w10
  40f8f0:	bl	404ca0 <recvmsg@plt>
  40f8f4:	ldr	x8, [sp, #40]
  40f8f8:	str	w0, [x8, #100]
  40f8fc:	ldr	w10, [x8, #100]
  40f900:	cmp	w10, #0x0
  40f904:	cset	w10, ge  // ge = tcont
  40f908:	tbnz	w10, #0, 40f98c <rtnl_listen@@Base+0x174>
  40f90c:	bl	4051b0 <__errno_location@plt>
  40f910:	ldr	w8, [x0]
  40f914:	cmp	w8, #0x4
  40f918:	b.eq	40f92c <rtnl_listen@@Base+0x114>  // b.none
  40f91c:	bl	4051b0 <__errno_location@plt>
  40f920:	ldr	w8, [x0]
  40f924:	cmp	w8, #0xb
  40f928:	b.ne	40f930 <rtnl_listen@@Base+0x118>  // b.any
  40f92c:	b	40f8d0 <rtnl_listen@@Base+0xb8>
  40f930:	ldr	x8, [sp, #32]
  40f934:	ldr	x0, [x8]
  40f938:	str	x0, [sp, #24]
  40f93c:	bl	4051b0 <__errno_location@plt>
  40f940:	ldr	w0, [x0]
  40f944:	bl	404f30 <strerror@plt>
  40f948:	str	x0, [sp, #16]
  40f94c:	bl	4051b0 <__errno_location@plt>
  40f950:	ldr	w3, [x0]
  40f954:	ldr	x0, [sp, #24]
  40f958:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f95c:	add	x1, x1, #0xf3e
  40f960:	ldr	x2, [sp, #16]
  40f964:	bl	4051e0 <fprintf@plt>
  40f968:	bl	4051b0 <__errno_location@plt>
  40f96c:	ldr	w9, [x0]
  40f970:	cmp	w9, #0x69
  40f974:	b.ne	40f97c <rtnl_listen@@Base+0x164>  // b.any
  40f978:	b	40f8d0 <rtnl_listen@@Base+0xb8>
  40f97c:	mov	w8, #0xffffffff            	// #-1
  40f980:	ldr	x9, [sp, #40]
  40f984:	str	w8, [x9, #132]
  40f988:	b	40fc48 <rtnl_listen@@Base+0x430>
  40f98c:	ldr	x8, [sp, #40]
  40f990:	ldr	w9, [x8, #100]
  40f994:	cbnz	w9, 40f9bc <rtnl_listen@@Base+0x1a4>
  40f998:	ldr	x8, [sp, #32]
  40f99c:	ldr	x0, [x8]
  40f9a0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f9a4:	add	x1, x1, #0xf5d
  40f9a8:	bl	4051e0 <fprintf@plt>
  40f9ac:	mov	w9, #0xffffffff            	// #-1
  40f9b0:	ldr	x8, [sp, #40]
  40f9b4:	str	w9, [x8, #132]
  40f9b8:	b	40fc48 <rtnl_listen@@Base+0x430>
  40f9bc:	ldr	x8, [sp, #40]
  40f9c0:	ldr	w9, [x8, #8]
  40f9c4:	mov	w10, w9
  40f9c8:	cmp	x10, #0xc
  40f9cc:	b.eq	40f9f8 <rtnl_listen@@Base+0x1e0>  // b.none
  40f9d0:	ldr	x8, [sp, #32]
  40f9d4:	ldr	x0, [x8]
  40f9d8:	ldr	x9, [sp, #40]
  40f9dc:	ldr	w2, [x9, #8]
  40f9e0:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40f9e4:	add	x1, x1, #0xf6d
  40f9e8:	bl	4051e0 <fprintf@plt>
  40f9ec:	mov	w10, #0x1                   	// #1
  40f9f0:	mov	w0, w10
  40f9f4:	bl	404ce0 <exit@plt>
  40f9f8:	ldr	x8, [sp, #40]
  40f9fc:	ldr	x9, [x8, #120]
  40fa00:	ldr	w10, [x9, #48]
  40fa04:	and	w10, w10, #0x1
  40fa08:	cbz	w10, 40faac <rtnl_listen@@Base+0x294>
  40fa0c:	str	wzr, [sp, #84]
  40fa10:	mov	w8, #0xffffffff            	// #-1
  40fa14:	str	w8, [sp, #84]
  40fa18:	ldr	x9, [sp, #40]
  40fa1c:	ldr	x10, [x9, #40]
  40fa20:	cmp	x10, #0x10
  40fa24:	b.cc	40fa38 <rtnl_listen@@Base+0x220>  // b.lo, b.ul, b.last
  40fa28:	sub	x8, x29, #0x88
  40fa2c:	ldr	x8, [x8, #32]
  40fa30:	str	x8, [sp, #8]
  40fa34:	b	40fa40 <rtnl_listen@@Base+0x228>
  40fa38:	mov	x8, xzr
  40fa3c:	str	x8, [sp, #8]
  40fa40:	ldr	x8, [sp, #8]
  40fa44:	str	x8, [sp, #72]
  40fa48:	ldr	x8, [sp, #72]
  40fa4c:	cbz	x8, 40faac <rtnl_listen@@Base+0x294>
  40fa50:	ldr	x8, [sp, #72]
  40fa54:	ldr	w9, [x8, #8]
  40fa58:	cmp	w9, #0x10e
  40fa5c:	b.ne	40fa98 <rtnl_listen@@Base+0x280>  // b.any
  40fa60:	ldr	x8, [sp, #72]
  40fa64:	ldr	w9, [x8, #12]
  40fa68:	cmp	w9, #0x8
  40fa6c:	b.ne	40fa98 <rtnl_listen@@Base+0x280>  // b.any
  40fa70:	ldr	x8, [sp, #72]
  40fa74:	ldr	x8, [x8]
  40fa78:	cmp	x8, #0x14
  40fa7c:	b.ne	40fa98 <rtnl_listen@@Base+0x280>  // b.any
  40fa80:	ldr	x8, [sp, #72]
  40fa84:	add	x8, x8, #0x10
  40fa88:	str	x8, [sp, #64]
  40fa8c:	ldr	x8, [sp, #64]
  40fa90:	ldr	w9, [x8]
  40fa94:	str	w9, [sp, #84]
  40fa98:	ldr	x1, [sp, #72]
  40fa9c:	sub	x0, x29, #0x88
  40faa0:	bl	404d00 <__cmsg_nxthdr@plt>
  40faa4:	str	x0, [sp, #72]
  40faa8:	b	40fa48 <rtnl_listen@@Base+0x230>
  40faac:	add	x8, sp, #0x2, lsl #12
  40fab0:	add	x8, x8, #0x58
  40fab4:	ldr	x9, [sp, #40]
  40fab8:	str	x8, [x9, #88]
  40fabc:	ldr	x8, [sp, #40]
  40fac0:	ldrsw	x9, [x8, #100]
  40fac4:	cmp	x9, #0x10
  40fac8:	b.cc	40fbe8 <rtnl_listen@@Base+0x3d0>  // b.lo, b.ul, b.last
  40facc:	ldr	x8, [sp, #40]
  40fad0:	ldr	x9, [x8, #88]
  40fad4:	ldr	w10, [x9]
  40fad8:	str	w10, [sp, #56]
  40fadc:	ldrsw	x9, [sp, #56]
  40fae0:	subs	x9, x9, #0x10
  40fae4:	str	w9, [sp, #52]
  40fae8:	ldr	w9, [sp, #52]
  40faec:	cmp	w9, #0x0
  40faf0:	cset	w9, lt  // lt = tstop
  40faf4:	tbnz	w9, #0, 40fb0c <rtnl_listen@@Base+0x2f4>
  40faf8:	ldr	w8, [sp, #56]
  40fafc:	ldr	x9, [sp, #40]
  40fb00:	ldr	w10, [x9, #100]
  40fb04:	cmp	w8, w10
  40fb08:	b.le	40fb64 <rtnl_listen@@Base+0x34c>
  40fb0c:	ldr	x8, [sp, #40]
  40fb10:	ldr	w9, [x8, #48]
  40fb14:	and	w9, w9, #0x20
  40fb18:	cbz	w9, 40fb40 <rtnl_listen@@Base+0x328>
  40fb1c:	ldr	x8, [sp, #32]
  40fb20:	ldr	x0, [x8]
  40fb24:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40fb28:	add	x1, x1, #0xf8a
  40fb2c:	bl	4051e0 <fprintf@plt>
  40fb30:	mov	w9, #0xffffffff            	// #-1
  40fb34:	ldr	x8, [sp, #40]
  40fb38:	str	w9, [x8, #132]
  40fb3c:	b	40fc48 <rtnl_listen@@Base+0x430>
  40fb40:	ldr	x8, [sp, #32]
  40fb44:	ldr	x0, [x8]
  40fb48:	ldr	w2, [sp, #56]
  40fb4c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40fb50:	add	x1, x1, #0xf9d
  40fb54:	bl	4051e0 <fprintf@plt>
  40fb58:	mov	w9, #0x1                   	// #1
  40fb5c:	mov	w0, w9
  40fb60:	bl	404ce0 <exit@plt>
  40fb64:	ldr	x8, [sp, #40]
  40fb68:	ldr	x9, [x8, #112]
  40fb6c:	ldr	x1, [x8, #88]
  40fb70:	ldr	x2, [x8, #104]
  40fb74:	add	x0, sp, #0x54
  40fb78:	blr	x9
  40fb7c:	str	w0, [sp, #60]
  40fb80:	ldr	w10, [sp, #60]
  40fb84:	cmp	w10, #0x0
  40fb88:	cset	w10, ge  // ge = tcont
  40fb8c:	tbnz	w10, #0, 40fba0 <rtnl_listen@@Base+0x388>
  40fb90:	ldr	w8, [sp, #60]
  40fb94:	ldr	x9, [sp, #40]
  40fb98:	str	w8, [x9, #132]
  40fb9c:	b	40fc48 <rtnl_listen@@Base+0x430>
  40fba0:	ldr	w8, [sp, #56]
  40fba4:	add	w8, w8, #0x4
  40fba8:	subs	w8, w8, #0x1
  40fbac:	and	w8, w8, #0xfffffffc
  40fbb0:	ldr	x9, [sp, #40]
  40fbb4:	ldr	w10, [x9, #100]
  40fbb8:	subs	w8, w10, w8
  40fbbc:	str	w8, [x9, #100]
  40fbc0:	ldr	x11, [x9, #88]
  40fbc4:	ldr	w8, [sp, #56]
  40fbc8:	add	w8, w8, #0x4
  40fbcc:	subs	w8, w8, #0x1
  40fbd0:	and	w8, w8, #0xfffffffc
  40fbd4:	mov	w12, w8
  40fbd8:	ubfx	x12, x12, #0, #32
  40fbdc:	add	x11, x11, x12
  40fbe0:	str	x11, [x9, #88]
  40fbe4:	b	40fabc <rtnl_listen@@Base+0x2a4>
  40fbe8:	ldr	x8, [sp, #40]
  40fbec:	ldr	w9, [x8, #48]
  40fbf0:	and	w9, w9, #0x20
  40fbf4:	cbz	w9, 40fc10 <rtnl_listen@@Base+0x3f8>
  40fbf8:	ldr	x8, [sp, #32]
  40fbfc:	ldr	x0, [x8]
  40fc00:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40fc04:	add	x1, x1, #0xfbb
  40fc08:	bl	4051e0 <fprintf@plt>
  40fc0c:	b	40f8d0 <rtnl_listen@@Base+0xb8>
  40fc10:	ldr	x8, [sp, #40]
  40fc14:	ldr	w9, [x8, #100]
  40fc18:	cbz	w9, 40fc44 <rtnl_listen@@Base+0x42c>
  40fc1c:	ldr	x8, [sp, #32]
  40fc20:	ldr	x0, [x8]
  40fc24:	ldr	x9, [sp, #40]
  40fc28:	ldr	w2, [x9, #100]
  40fc2c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40fc30:	add	x1, x1, #0xfce
  40fc34:	bl	4051e0 <fprintf@plt>
  40fc38:	mov	w10, #0x1                   	// #1
  40fc3c:	mov	w0, w10
  40fc40:	bl	404ce0 <exit@plt>
  40fc44:	b	40f8d0 <rtnl_listen@@Base+0xb8>
  40fc48:	ldr	x8, [sp, #40]
  40fc4c:	ldr	w0, [x8, #132]
  40fc50:	add	sp, sp, #0x6, lsl #12
  40fc54:	add	sp, sp, #0xe0
  40fc58:	ldr	x28, [sp, #16]
  40fc5c:	ldp	x29, x30, [sp], #32
  40fc60:	ret

000000000040fc64 <rtnl_from_file@@Base>:
  40fc64:	stp	x29, x30, [sp, #-32]!
  40fc68:	str	x28, [sp, #16]
  40fc6c:	mov	x29, sp
  40fc70:	sub	sp, sp, #0x4, lsl #12
  40fc74:	sub	sp, sp, #0x70
  40fc78:	sub	x8, x29, #0x28
  40fc7c:	adrp	x9, 422000 <_IO_stdin_used@@Base+0x10b00>
  40fc80:	ldr	x9, [x9, #3992]
  40fc84:	add	x10, sp, #0x48
  40fc88:	str	x0, [x8, #24]
  40fc8c:	str	x1, [x8, #16]
  40fc90:	str	x2, [x8, #8]
  40fc94:	str	x10, [sp, #64]
  40fc98:	str	x8, [sp, #40]
  40fc9c:	str	x9, [sp, #32]
  40fca0:	ldr	x8, [sp, #40]
  40fca4:	ldr	x3, [x8, #24]
  40fca8:	add	x0, sp, #0x48
  40fcac:	mov	x1, #0x1                   	// #1
  40fcb0:	mov	x2, #0x10                  	// #16
  40fcb4:	bl	404ff0 <fread@plt>
  40fcb8:	ldr	x8, [sp, #40]
  40fcbc:	str	x0, [x8]
  40fcc0:	ldr	x9, [x8]
  40fcc4:	cbnz	x9, 40fce4 <rtnl_from_file@@Base+0x80>
  40fcc8:	ldr	x8, [sp, #40]
  40fccc:	ldr	x0, [x8, #24]
  40fcd0:	bl	404f90 <feof@plt>
  40fcd4:	cbz	w0, 40fce4 <rtnl_from_file@@Base+0x80>
  40fcd8:	ldr	x8, [sp, #40]
  40fcdc:	str	wzr, [x8, #36]
  40fce0:	b	40febc <rtnl_from_file@@Base+0x258>
  40fce4:	ldr	x8, [sp, #40]
  40fce8:	ldr	x9, [x8]
  40fcec:	cmp	x9, #0x10
  40fcf0:	b.eq	40fd44 <rtnl_from_file@@Base+0xe0>  // b.none
  40fcf4:	ldr	x8, [sp, #40]
  40fcf8:	ldr	x0, [x8, #24]
  40fcfc:	bl	405210 <ferror@plt>
  40fd00:	cbz	w0, 40fd10 <rtnl_from_file@@Base+0xac>
  40fd04:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40fd08:	add	x0, x0, #0xfe5
  40fd0c:	bl	404cf0 <perror@plt>
  40fd10:	ldr	x8, [sp, #40]
  40fd14:	ldr	x0, [x8, #24]
  40fd18:	bl	404f90 <feof@plt>
  40fd1c:	cbz	w0, 40fd34 <rtnl_from_file@@Base+0xd0>
  40fd20:	ldr	x8, [sp, #32]
  40fd24:	ldr	x0, [x8]
  40fd28:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40fd2c:	add	x1, x1, #0xffb
  40fd30:	bl	4051e0 <fprintf@plt>
  40fd34:	mov	w8, #0xffffffff            	// #-1
  40fd38:	ldr	x9, [sp, #40]
  40fd3c:	str	w8, [x9, #36]
  40fd40:	b	40febc <rtnl_from_file@@Base+0x258>
  40fd44:	ldr	x8, [sp, #64]
  40fd48:	ldr	w9, [x8]
  40fd4c:	str	w9, [sp, #56]
  40fd50:	ldrsw	x8, [sp, #56]
  40fd54:	subs	x8, x8, #0x10
  40fd58:	str	w8, [sp, #52]
  40fd5c:	ldr	w8, [sp, #52]
  40fd60:	cmp	w8, #0x0
  40fd64:	cset	w8, lt  // lt = tstop
  40fd68:	tbnz	w8, #0, 40fd78 <rtnl_from_file@@Base+0x114>
  40fd6c:	ldrsw	x8, [sp, #56]
  40fd70:	cmp	x8, #0x4, lsl #12
  40fd74:	b.ls	40fdcc <rtnl_from_file@@Base+0x168>  // b.plast
  40fd78:	ldr	x8, [sp, #32]
  40fd7c:	ldr	x0, [x8]
  40fd80:	ldr	w2, [sp, #56]
  40fd84:	ldr	x9, [sp, #40]
  40fd88:	ldr	x10, [x9, #24]
  40fd8c:	str	x0, [sp, #24]
  40fd90:	mov	x0, x10
  40fd94:	str	w2, [sp, #20]
  40fd98:	bl	404d80 <ftell@plt>
  40fd9c:	ldr	x8, [sp, #24]
  40fda0:	str	x0, [sp, #8]
  40fda4:	mov	x0, x8
  40fda8:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  40fdac:	add	x1, x1, #0x1e
  40fdb0:	ldr	w2, [sp, #20]
  40fdb4:	ldr	x3, [sp, #8]
  40fdb8:	bl	4051e0 <fprintf@plt>
  40fdbc:	mov	w11, #0xffffffff            	// #-1
  40fdc0:	ldr	x8, [sp, #40]
  40fdc4:	str	w11, [x8, #36]
  40fdc8:	b	40febc <rtnl_from_file@@Base+0x258>
  40fdcc:	ldr	x8, [sp, #64]
  40fdd0:	add	x0, x8, #0x10
  40fdd4:	ldr	w9, [sp, #52]
  40fdd8:	add	w9, w9, #0x4
  40fddc:	subs	w9, w9, #0x1
  40fde0:	and	w9, w9, #0xfffffffc
  40fde4:	mov	w8, w9
  40fde8:	ubfx	x2, x8, #0, #32
  40fdec:	ldr	x8, [sp, #40]
  40fdf0:	ldr	x3, [x8, #24]
  40fdf4:	mov	x1, #0x1                   	// #1
  40fdf8:	bl	404ff0 <fread@plt>
  40fdfc:	ldr	x8, [sp, #40]
  40fe00:	str	x0, [x8]
  40fe04:	ldr	x10, [x8]
  40fe08:	ldr	w9, [sp, #52]
  40fe0c:	add	w9, w9, #0x4
  40fe10:	subs	w9, w9, #0x1
  40fe14:	and	w9, w9, #0xfffffffc
  40fe18:	mov	w11, w9
  40fe1c:	ubfx	x11, x11, #0, #32
  40fe20:	cmp	x10, x11
  40fe24:	b.eq	40fe78 <rtnl_from_file@@Base+0x214>  // b.none
  40fe28:	ldr	x8, [sp, #40]
  40fe2c:	ldr	x0, [x8, #24]
  40fe30:	bl	405210 <ferror@plt>
  40fe34:	cbz	w0, 40fe44 <rtnl_from_file@@Base+0x1e0>
  40fe38:	adrp	x0, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40fe3c:	add	x0, x0, #0xfe5
  40fe40:	bl	404cf0 <perror@plt>
  40fe44:	ldr	x8, [sp, #40]
  40fe48:	ldr	x0, [x8, #24]
  40fe4c:	bl	404f90 <feof@plt>
  40fe50:	cbz	w0, 40fe68 <rtnl_from_file@@Base+0x204>
  40fe54:	ldr	x8, [sp, #32]
  40fe58:	ldr	x0, [x8]
  40fe5c:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  40fe60:	add	x1, x1, #0xffb
  40fe64:	bl	4051e0 <fprintf@plt>
  40fe68:	mov	w8, #0xffffffff            	// #-1
  40fe6c:	ldr	x9, [sp, #40]
  40fe70:	str	w8, [x9, #36]
  40fe74:	b	40febc <rtnl_from_file@@Base+0x258>
  40fe78:	ldr	x8, [sp, #40]
  40fe7c:	ldr	x9, [x8, #16]
  40fe80:	ldr	x1, [sp, #64]
  40fe84:	ldr	x2, [x8, #8]
  40fe88:	mov	x10, xzr
  40fe8c:	mov	x0, x10
  40fe90:	blr	x9
  40fe94:	str	w0, [sp, #60]
  40fe98:	ldr	w11, [sp, #60]
  40fe9c:	cmp	w11, #0x0
  40fea0:	cset	w11, ge  // ge = tcont
  40fea4:	tbnz	w11, #0, 40feb8 <rtnl_from_file@@Base+0x254>
  40fea8:	ldr	w8, [sp, #60]
  40feac:	ldr	x9, [sp, #40]
  40feb0:	str	w8, [x9, #36]
  40feb4:	b	40febc <rtnl_from_file@@Base+0x258>
  40feb8:	b	40fca0 <rtnl_from_file@@Base+0x3c>
  40febc:	ldr	x8, [sp, #40]
  40fec0:	ldr	w0, [x8, #36]
  40fec4:	add	sp, sp, #0x4, lsl #12
  40fec8:	add	sp, sp, #0x70
  40fecc:	ldr	x28, [sp, #16]
  40fed0:	ldp	x29, x30, [sp], #32
  40fed4:	ret

000000000040fed8 <addattr@@Base>:
  40fed8:	sub	sp, sp, #0x20
  40fedc:	stp	x29, x30, [sp, #16]
  40fee0:	add	x29, sp, #0x10
  40fee4:	mov	x8, xzr
  40fee8:	mov	w9, wzr
  40feec:	str	x0, [sp, #8]
  40fef0:	str	w1, [sp, #4]
  40fef4:	str	w2, [sp]
  40fef8:	ldr	x0, [sp, #8]
  40fefc:	ldr	w1, [sp, #4]
  40ff00:	ldr	w2, [sp]
  40ff04:	mov	x3, x8
  40ff08:	mov	w4, w9
  40ff0c:	bl	40ff1c <addattr_l@@Base>
  40ff10:	ldp	x29, x30, [sp, #16]
  40ff14:	add	sp, sp, #0x20
  40ff18:	ret

000000000040ff1c <addattr_l@@Base>:
  40ff1c:	sub	sp, sp, #0x40
  40ff20:	stp	x29, x30, [sp, #48]
  40ff24:	add	x29, sp, #0x30
  40ff28:	stur	x0, [x29, #-16]
  40ff2c:	stur	w1, [x29, #-20]
  40ff30:	str	w2, [sp, #24]
  40ff34:	str	x3, [sp, #16]
  40ff38:	str	w4, [sp, #12]
  40ff3c:	ldrsw	x8, [sp, #12]
  40ff40:	add	x8, x8, #0x4
  40ff44:	str	w8, [sp, #8]
  40ff48:	ldur	x9, [x29, #-16]
  40ff4c:	ldr	w8, [x9]
  40ff50:	add	w8, w8, #0x4
  40ff54:	subs	w8, w8, #0x1
  40ff58:	and	w8, w8, #0xfffffffc
  40ff5c:	ldr	w10, [sp, #8]
  40ff60:	add	w10, w10, #0x4
  40ff64:	subs	w10, w10, #0x1
  40ff68:	and	w10, w10, #0xfffffffc
  40ff6c:	add	w8, w8, w10
  40ff70:	ldur	w10, [x29, #-20]
  40ff74:	cmp	w8, w10
  40ff78:	b.ls	40ffa4 <addattr_l@@Base+0x88>  // b.plast
  40ff7c:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  40ff80:	ldr	x8, [x8, #3992]
  40ff84:	ldr	x0, [x8]
  40ff88:	ldur	w2, [x29, #-20]
  40ff8c:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  40ff90:	add	x1, x1, #0x41
  40ff94:	bl	4051e0 <fprintf@plt>
  40ff98:	mov	w9, #0xffffffff            	// #-1
  40ff9c:	stur	w9, [x29, #-4]
  40ffa0:	b	410034 <addattr_l@@Base+0x118>
  40ffa4:	ldur	x8, [x29, #-16]
  40ffa8:	ldur	x9, [x29, #-16]
  40ffac:	ldr	w10, [x9]
  40ffb0:	add	w10, w10, #0x4
  40ffb4:	subs	w10, w10, #0x1
  40ffb8:	and	w10, w10, #0xfffffffc
  40ffbc:	mov	w9, w10
  40ffc0:	ubfx	x9, x9, #0, #32
  40ffc4:	add	x8, x8, x9
  40ffc8:	str	x8, [sp]
  40ffcc:	ldr	w10, [sp, #24]
  40ffd0:	ldr	x8, [sp]
  40ffd4:	strh	w10, [x8, #2]
  40ffd8:	ldr	w10, [sp, #8]
  40ffdc:	ldr	x8, [sp]
  40ffe0:	strh	w10, [x8]
  40ffe4:	ldr	w10, [sp, #12]
  40ffe8:	cbz	w10, 410000 <addattr_l@@Base+0xe4>
  40ffec:	ldr	x8, [sp]
  40fff0:	add	x0, x8, #0x4
  40fff4:	ldr	x1, [sp, #16]
  40fff8:	ldrsw	x2, [sp, #12]
  40fffc:	bl	404c90 <memcpy@plt>
  410000:	ldur	x8, [x29, #-16]
  410004:	ldr	w9, [x8]
  410008:	add	w9, w9, #0x4
  41000c:	subs	w9, w9, #0x1
  410010:	and	w9, w9, #0xfffffffc
  410014:	ldr	w10, [sp, #8]
  410018:	add	w10, w10, #0x4
  41001c:	subs	w10, w10, #0x1
  410020:	and	w10, w10, #0xfffffffc
  410024:	add	w9, w9, w10
  410028:	ldur	x8, [x29, #-16]
  41002c:	str	w9, [x8]
  410030:	stur	wzr, [x29, #-4]
  410034:	ldur	w0, [x29, #-4]
  410038:	ldp	x29, x30, [sp, #48]
  41003c:	add	sp, sp, #0x40
  410040:	ret

0000000000410044 <addattr8@@Base>:
  410044:	sub	sp, sp, #0x30
  410048:	stp	x29, x30, [sp, #32]
  41004c:	add	x29, sp, #0x20
  410050:	mov	w4, #0x1                   	// #1
  410054:	add	x8, sp, #0xf
  410058:	stur	x0, [x29, #-8]
  41005c:	stur	w1, [x29, #-12]
  410060:	str	w2, [sp, #16]
  410064:	strb	w3, [sp, #15]
  410068:	ldur	x0, [x29, #-8]
  41006c:	ldur	w1, [x29, #-12]
  410070:	ldr	w2, [sp, #16]
  410074:	mov	x3, x8
  410078:	bl	40ff1c <addattr_l@@Base>
  41007c:	ldp	x29, x30, [sp, #32]
  410080:	add	sp, sp, #0x30
  410084:	ret

0000000000410088 <addattr16@@Base>:
  410088:	sub	sp, sp, #0x30
  41008c:	stp	x29, x30, [sp, #32]
  410090:	add	x29, sp, #0x20
  410094:	mov	w4, #0x2                   	// #2
  410098:	add	x8, sp, #0xe
  41009c:	stur	x0, [x29, #-8]
  4100a0:	stur	w1, [x29, #-12]
  4100a4:	str	w2, [sp, #16]
  4100a8:	strh	w3, [sp, #14]
  4100ac:	ldur	x0, [x29, #-8]
  4100b0:	ldur	w1, [x29, #-12]
  4100b4:	ldr	w2, [sp, #16]
  4100b8:	mov	x3, x8
  4100bc:	bl	40ff1c <addattr_l@@Base>
  4100c0:	ldp	x29, x30, [sp, #32]
  4100c4:	add	sp, sp, #0x30
  4100c8:	ret

00000000004100cc <addattr32@@Base>:
  4100cc:	sub	sp, sp, #0x30
  4100d0:	stp	x29, x30, [sp, #32]
  4100d4:	add	x29, sp, #0x20
  4100d8:	mov	w4, #0x4                   	// #4
  4100dc:	add	x8, sp, #0xc
  4100e0:	stur	x0, [x29, #-8]
  4100e4:	stur	w1, [x29, #-12]
  4100e8:	str	w2, [sp, #16]
  4100ec:	str	w3, [sp, #12]
  4100f0:	ldur	x0, [x29, #-8]
  4100f4:	ldur	w1, [x29, #-12]
  4100f8:	ldr	w2, [sp, #16]
  4100fc:	mov	x3, x8
  410100:	bl	40ff1c <addattr_l@@Base>
  410104:	ldp	x29, x30, [sp, #32]
  410108:	add	sp, sp, #0x30
  41010c:	ret

0000000000410110 <addattr64@@Base>:
  410110:	sub	sp, sp, #0x30
  410114:	stp	x29, x30, [sp, #32]
  410118:	add	x29, sp, #0x20
  41011c:	mov	w4, #0x8                   	// #8
  410120:	add	x8, sp, #0x8
  410124:	stur	x0, [x29, #-8]
  410128:	stur	w1, [x29, #-12]
  41012c:	str	w2, [sp, #16]
  410130:	str	x3, [sp, #8]
  410134:	ldur	x0, [x29, #-8]
  410138:	ldur	w1, [x29, #-12]
  41013c:	ldr	w2, [sp, #16]
  410140:	mov	x3, x8
  410144:	bl	40ff1c <addattr_l@@Base>
  410148:	ldp	x29, x30, [sp, #32]
  41014c:	add	sp, sp, #0x30
  410150:	ret

0000000000410154 <addattrstrz@@Base>:
  410154:	sub	sp, sp, #0x40
  410158:	stp	x29, x30, [sp, #48]
  41015c:	add	x29, sp, #0x30
  410160:	stur	x0, [x29, #-8]
  410164:	stur	w1, [x29, #-12]
  410168:	stur	w2, [x29, #-16]
  41016c:	str	x3, [sp, #24]
  410170:	ldur	x0, [x29, #-8]
  410174:	ldur	w1, [x29, #-12]
  410178:	ldur	w2, [x29, #-16]
  41017c:	ldr	x3, [sp, #24]
  410180:	ldr	x8, [sp, #24]
  410184:	str	x0, [sp, #16]
  410188:	mov	x0, x8
  41018c:	str	w1, [sp, #12]
  410190:	str	w2, [sp, #8]
  410194:	str	x3, [sp]
  410198:	bl	404cc0 <strlen@plt>
  41019c:	add	x8, x0, #0x1
  4101a0:	ldr	x0, [sp, #16]
  4101a4:	ldr	w1, [sp, #12]
  4101a8:	ldr	w2, [sp, #8]
  4101ac:	ldr	x3, [sp]
  4101b0:	mov	w4, w8
  4101b4:	bl	40ff1c <addattr_l@@Base>
  4101b8:	ldp	x29, x30, [sp, #48]
  4101bc:	add	sp, sp, #0x40
  4101c0:	ret

00000000004101c4 <addraw_l@@Base>:
  4101c4:	sub	sp, sp, #0x40
  4101c8:	stp	x29, x30, [sp, #48]
  4101cc:	add	x29, sp, #0x30
  4101d0:	stur	x0, [x29, #-16]
  4101d4:	stur	w1, [x29, #-20]
  4101d8:	str	x2, [sp, #16]
  4101dc:	str	w3, [sp, #12]
  4101e0:	ldur	x8, [x29, #-16]
  4101e4:	ldr	w9, [x8]
  4101e8:	add	w9, w9, #0x4
  4101ec:	subs	w9, w9, #0x1
  4101f0:	and	w9, w9, #0xfffffffc
  4101f4:	ldr	w10, [sp, #12]
  4101f8:	add	w10, w10, #0x4
  4101fc:	subs	w10, w10, #0x1
  410200:	and	w10, w10, #0xfffffffc
  410204:	add	w9, w9, w10
  410208:	ldur	w10, [x29, #-20]
  41020c:	cmp	w9, w10
  410210:	b.ls	41023c <addraw_l@@Base+0x78>  // b.plast
  410214:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  410218:	ldr	x8, [x8, #3992]
  41021c:	ldr	x0, [x8]
  410220:	ldur	w2, [x29, #-20]
  410224:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  410228:	add	x1, x1, #0x70
  41022c:	bl	4051e0 <fprintf@plt>
  410230:	mov	w9, #0xffffffff            	// #-1
  410234:	stur	w9, [x29, #-4]
  410238:	b	4102f8 <addraw_l@@Base+0x134>
  41023c:	ldur	x8, [x29, #-16]
  410240:	ldur	x9, [x29, #-16]
  410244:	ldr	w10, [x9]
  410248:	add	w10, w10, #0x4
  41024c:	subs	w10, w10, #0x1
  410250:	and	w10, w10, #0xfffffffc
  410254:	mov	w9, w10
  410258:	ubfx	x9, x9, #0, #32
  41025c:	add	x0, x8, x9
  410260:	ldr	x1, [sp, #16]
  410264:	ldrsw	x2, [sp, #12]
  410268:	bl	404c90 <memcpy@plt>
  41026c:	ldur	x8, [x29, #-16]
  410270:	ldur	x9, [x29, #-16]
  410274:	ldr	w10, [x9]
  410278:	add	w10, w10, #0x4
  41027c:	subs	w10, w10, #0x1
  410280:	and	w10, w10, #0xfffffffc
  410284:	mov	w9, w10
  410288:	ubfx	x9, x9, #0, #32
  41028c:	add	x8, x8, x9
  410290:	ldrsw	x9, [sp, #12]
  410294:	add	x0, x8, x9
  410298:	ldr	w10, [sp, #12]
  41029c:	add	w10, w10, #0x4
  4102a0:	subs	w10, w10, #0x1
  4102a4:	and	w10, w10, #0xfffffffc
  4102a8:	ldr	w11, [sp, #12]
  4102ac:	subs	w10, w10, w11
  4102b0:	mov	w8, w10
  4102b4:	ubfx	x2, x8, #0, #32
  4102b8:	mov	w10, wzr
  4102bc:	mov	w1, w10
  4102c0:	bl	404ea0 <memset@plt>
  4102c4:	ldur	x8, [x29, #-16]
  4102c8:	ldr	w10, [x8]
  4102cc:	add	w10, w10, #0x4
  4102d0:	subs	w10, w10, #0x1
  4102d4:	and	w10, w10, #0xfffffffc
  4102d8:	ldr	w11, [sp, #12]
  4102dc:	add	w11, w11, #0x4
  4102e0:	subs	w11, w11, #0x1
  4102e4:	and	w11, w11, #0xfffffffc
  4102e8:	add	w10, w10, w11
  4102ec:	ldur	x8, [x29, #-16]
  4102f0:	str	w10, [x8]
  4102f4:	stur	wzr, [x29, #-4]
  4102f8:	ldur	w0, [x29, #-4]
  4102fc:	ldp	x29, x30, [sp, #48]
  410300:	add	sp, sp, #0x40
  410304:	ret

0000000000410308 <addattr_nest@@Base>:
  410308:	sub	sp, sp, #0x30
  41030c:	stp	x29, x30, [sp, #32]
  410310:	add	x29, sp, #0x20
  410314:	mov	x8, xzr
  410318:	mov	w9, wzr
  41031c:	stur	x0, [x29, #-8]
  410320:	stur	w1, [x29, #-12]
  410324:	str	w2, [sp, #16]
  410328:	ldur	x10, [x29, #-8]
  41032c:	ldur	x11, [x29, #-8]
  410330:	ldr	w12, [x11]
  410334:	add	w12, w12, #0x4
  410338:	subs	w12, w12, #0x1
  41033c:	and	w12, w12, #0xfffffffc
  410340:	mov	w11, w12
  410344:	ubfx	x11, x11, #0, #32
  410348:	add	x10, x10, x11
  41034c:	str	x10, [sp, #8]
  410350:	ldur	x0, [x29, #-8]
  410354:	ldur	w1, [x29, #-12]
  410358:	ldr	w2, [sp, #16]
  41035c:	mov	x3, x8
  410360:	mov	w4, w9
  410364:	bl	40ff1c <addattr_l@@Base>
  410368:	ldr	x8, [sp, #8]
  41036c:	mov	x0, x8
  410370:	ldp	x29, x30, [sp, #32]
  410374:	add	sp, sp, #0x30
  410378:	ret

000000000041037c <addattr_nest_end@@Base>:
  41037c:	sub	sp, sp, #0x10
  410380:	str	x0, [sp, #8]
  410384:	str	x1, [sp]
  410388:	ldr	x8, [sp, #8]
  41038c:	ldr	x9, [sp, #8]
  410390:	ldr	w10, [x9]
  410394:	add	w10, w10, #0x4
  410398:	subs	w10, w10, #0x1
  41039c:	and	w10, w10, #0xfffffffc
  4103a0:	mov	w9, w10
  4103a4:	ubfx	x9, x9, #0, #32
  4103a8:	add	x8, x8, x9
  4103ac:	ldr	x9, [sp]
  4103b0:	subs	x8, x8, x9
  4103b4:	ldr	x9, [sp]
  4103b8:	strh	w8, [x9]
  4103bc:	ldr	x9, [sp, #8]
  4103c0:	ldr	w0, [x9]
  4103c4:	add	sp, sp, #0x10
  4103c8:	ret

00000000004103cc <addattr_nest_compat@@Base>:
  4103cc:	sub	sp, sp, #0x40
  4103d0:	stp	x29, x30, [sp, #48]
  4103d4:	add	x29, sp, #0x30
  4103d8:	stur	x0, [x29, #-8]
  4103dc:	stur	w1, [x29, #-12]
  4103e0:	stur	w2, [x29, #-16]
  4103e4:	str	x3, [sp, #24]
  4103e8:	str	w4, [sp, #20]
  4103ec:	ldur	x8, [x29, #-8]
  4103f0:	ldur	x9, [x29, #-8]
  4103f4:	ldr	w10, [x9]
  4103f8:	add	w10, w10, #0x4
  4103fc:	subs	w10, w10, #0x1
  410400:	and	w10, w10, #0xfffffffc
  410404:	mov	w9, w10
  410408:	ubfx	x9, x9, #0, #32
  41040c:	add	x8, x8, x9
  410410:	str	x8, [sp, #8]
  410414:	ldur	x0, [x29, #-8]
  410418:	ldur	w1, [x29, #-12]
  41041c:	ldur	w2, [x29, #-16]
  410420:	ldr	x3, [sp, #24]
  410424:	ldr	w4, [sp, #20]
  410428:	bl	40ff1c <addattr_l@@Base>
  41042c:	ldur	x8, [x29, #-8]
  410430:	ldur	w1, [x29, #-12]
  410434:	ldur	w2, [x29, #-16]
  410438:	mov	x0, x8
  41043c:	bl	410308 <addattr_nest@@Base>
  410440:	ldr	x8, [sp, #8]
  410444:	mov	x0, x8
  410448:	ldp	x29, x30, [sp, #48]
  41044c:	add	sp, sp, #0x40
  410450:	ret

0000000000410454 <addattr_nest_compat_end@@Base>:
  410454:	sub	sp, sp, #0x30
  410458:	stp	x29, x30, [sp, #32]
  41045c:	add	x29, sp, #0x20
  410460:	stur	x0, [x29, #-8]
  410464:	str	x1, [sp, #16]
  410468:	ldr	x8, [sp, #16]
  41046c:	ldr	x9, [sp, #16]
  410470:	ldrh	w10, [x9]
  410474:	add	w10, w10, #0x4
  410478:	subs	w10, w10, #0x1
  41047c:	and	w10, w10, #0xfffffffc
  410480:	mov	w9, w10
  410484:	ubfx	x9, x9, #0, #32
  410488:	add	x8, x8, x9
  41048c:	str	x8, [sp, #8]
  410490:	ldur	x8, [x29, #-8]
  410494:	ldur	x9, [x29, #-8]
  410498:	ldr	w10, [x9]
  41049c:	add	w10, w10, #0x4
  4104a0:	subs	w10, w10, #0x1
  4104a4:	and	w10, w10, #0xfffffffc
  4104a8:	mov	w9, w10
  4104ac:	ubfx	x9, x9, #0, #32
  4104b0:	add	x8, x8, x9
  4104b4:	ldr	x9, [sp, #16]
  4104b8:	subs	x8, x8, x9
  4104bc:	ldr	x9, [sp, #16]
  4104c0:	strh	w8, [x9]
  4104c4:	ldur	x0, [x29, #-8]
  4104c8:	ldr	x1, [sp, #8]
  4104cc:	bl	41037c <addattr_nest_end@@Base>
  4104d0:	ldur	x9, [x29, #-8]
  4104d4:	ldr	w8, [x9]
  4104d8:	mov	w0, w8
  4104dc:	ldp	x29, x30, [sp, #32]
  4104e0:	add	sp, sp, #0x30
  4104e4:	ret

00000000004104e8 <rta_addattr32@@Base>:
  4104e8:	sub	sp, sp, #0x40
  4104ec:	stp	x29, x30, [sp, #48]
  4104f0:	add	x29, sp, #0x30
  4104f4:	mov	w8, #0x8                   	// #8
  4104f8:	stur	x0, [x29, #-16]
  4104fc:	stur	w1, [x29, #-20]
  410500:	str	w2, [sp, #24]
  410504:	str	w3, [sp, #20]
  410508:	str	w8, [sp, #16]
  41050c:	ldur	x9, [x29, #-16]
  410510:	ldrh	w8, [x9]
  410514:	add	w8, w8, #0x4
  410518:	subs	w8, w8, #0x1
  41051c:	and	w8, w8, #0xfffffffc
  410520:	ldr	w10, [sp, #16]
  410524:	add	w8, w8, w10
  410528:	ldur	w10, [x29, #-20]
  41052c:	cmp	w8, w10
  410530:	b.ls	41055c <rta_addattr32@@Base+0x74>  // b.plast
  410534:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  410538:	ldr	x8, [x8, #3992]
  41053c:	ldr	x0, [x8]
  410540:	ldur	w2, [x29, #-20]
  410544:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  410548:	add	x1, x1, #0x9e
  41054c:	bl	4051e0 <fprintf@plt>
  410550:	mov	w9, #0xffffffff            	// #-1
  410554:	stur	w9, [x29, #-4]
  410558:	b	4105d0 <rta_addattr32@@Base+0xe8>
  41055c:	ldur	x8, [x29, #-16]
  410560:	ldur	x9, [x29, #-16]
  410564:	ldrh	w10, [x9]
  410568:	add	w10, w10, #0x4
  41056c:	subs	w10, w10, #0x1
  410570:	and	w10, w10, #0xfffffffc
  410574:	mov	w9, w10
  410578:	ubfx	x9, x9, #0, #32
  41057c:	add	x8, x8, x9
  410580:	str	x8, [sp, #8]
  410584:	ldr	w10, [sp, #24]
  410588:	ldr	x8, [sp, #8]
  41058c:	strh	w10, [x8, #2]
  410590:	ldr	w10, [sp, #16]
  410594:	ldr	x8, [sp, #8]
  410598:	strh	w10, [x8]
  41059c:	ldr	x8, [sp, #8]
  4105a0:	ldr	w10, [sp, #20]
  4105a4:	str	w10, [x8, #4]
  4105a8:	ldur	x8, [x29, #-16]
  4105ac:	ldrh	w10, [x8]
  4105b0:	add	w10, w10, #0x4
  4105b4:	subs	w10, w10, #0x1
  4105b8:	and	w10, w10, #0xfffffffc
  4105bc:	ldr	w11, [sp, #16]
  4105c0:	add	w10, w10, w11
  4105c4:	ldur	x8, [x29, #-16]
  4105c8:	strh	w10, [x8]
  4105cc:	stur	wzr, [x29, #-4]
  4105d0:	ldur	w0, [x29, #-4]
  4105d4:	ldp	x29, x30, [sp, #48]
  4105d8:	add	sp, sp, #0x40
  4105dc:	ret

00000000004105e0 <rta_addattr_l@@Base>:
  4105e0:	sub	sp, sp, #0x50
  4105e4:	stp	x29, x30, [sp, #64]
  4105e8:	add	x29, sp, #0x40
  4105ec:	stur	x0, [x29, #-16]
  4105f0:	stur	w1, [x29, #-20]
  4105f4:	stur	w2, [x29, #-24]
  4105f8:	str	x3, [sp, #32]
  4105fc:	str	w4, [sp, #28]
  410600:	ldrsw	x8, [sp, #28]
  410604:	add	x8, x8, #0x4
  410608:	str	w8, [sp, #12]
  41060c:	ldur	x9, [x29, #-16]
  410610:	ldrh	w8, [x9]
  410614:	add	w8, w8, #0x4
  410618:	subs	w8, w8, #0x1
  41061c:	and	w8, w8, #0xfffffffc
  410620:	ldr	w10, [sp, #12]
  410624:	add	w10, w10, #0x4
  410628:	subs	w10, w10, #0x1
  41062c:	and	w10, w10, #0xfffffffc
  410630:	add	w8, w8, w10
  410634:	ldur	w10, [x29, #-20]
  410638:	cmp	w8, w10
  41063c:	b.ls	410668 <rta_addattr_l@@Base+0x88>  // b.plast
  410640:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  410644:	ldr	x8, [x8, #3992]
  410648:	ldr	x0, [x8]
  41064c:	ldur	w2, [x29, #-20]
  410650:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  410654:	add	x1, x1, #0xd3
  410658:	bl	4051e0 <fprintf@plt>
  41065c:	mov	w9, #0xffffffff            	// #-1
  410660:	stur	w9, [x29, #-4]
  410664:	b	4106f8 <rta_addattr_l@@Base+0x118>
  410668:	ldur	x8, [x29, #-16]
  41066c:	ldur	x9, [x29, #-16]
  410670:	ldrh	w10, [x9]
  410674:	add	w10, w10, #0x4
  410678:	subs	w10, w10, #0x1
  41067c:	and	w10, w10, #0xfffffffc
  410680:	mov	w9, w10
  410684:	ubfx	x9, x9, #0, #32
  410688:	add	x8, x8, x9
  41068c:	str	x8, [sp, #16]
  410690:	ldur	w10, [x29, #-24]
  410694:	ldr	x8, [sp, #16]
  410698:	strh	w10, [x8, #2]
  41069c:	ldr	w10, [sp, #12]
  4106a0:	ldr	x8, [sp, #16]
  4106a4:	strh	w10, [x8]
  4106a8:	ldr	w10, [sp, #28]
  4106ac:	cbz	w10, 4106c4 <rta_addattr_l@@Base+0xe4>
  4106b0:	ldr	x8, [sp, #16]
  4106b4:	add	x0, x8, #0x4
  4106b8:	ldr	x1, [sp, #32]
  4106bc:	ldrsw	x2, [sp, #28]
  4106c0:	bl	404c90 <memcpy@plt>
  4106c4:	ldur	x8, [x29, #-16]
  4106c8:	ldrh	w9, [x8]
  4106cc:	add	w9, w9, #0x4
  4106d0:	subs	w9, w9, #0x1
  4106d4:	and	w9, w9, #0xfffffffc
  4106d8:	ldr	w10, [sp, #12]
  4106dc:	add	w10, w10, #0x4
  4106e0:	subs	w10, w10, #0x1
  4106e4:	and	w10, w10, #0xfffffffc
  4106e8:	add	w9, w9, w10
  4106ec:	ldur	x8, [x29, #-16]
  4106f0:	strh	w9, [x8]
  4106f4:	stur	wzr, [x29, #-4]
  4106f8:	ldur	w0, [x29, #-4]
  4106fc:	ldp	x29, x30, [sp, #64]
  410700:	add	sp, sp, #0x50
  410704:	ret

0000000000410708 <rta_addattr8@@Base>:
  410708:	sub	sp, sp, #0x30
  41070c:	stp	x29, x30, [sp, #32]
  410710:	add	x29, sp, #0x20
  410714:	mov	w4, #0x1                   	// #1
  410718:	add	x8, sp, #0xf
  41071c:	stur	x0, [x29, #-8]
  410720:	stur	w1, [x29, #-12]
  410724:	str	w2, [sp, #16]
  410728:	strb	w3, [sp, #15]
  41072c:	ldur	x0, [x29, #-8]
  410730:	ldur	w1, [x29, #-12]
  410734:	ldr	w2, [sp, #16]
  410738:	mov	x3, x8
  41073c:	bl	4105e0 <rta_addattr_l@@Base>
  410740:	ldp	x29, x30, [sp, #32]
  410744:	add	sp, sp, #0x30
  410748:	ret

000000000041074c <rta_addattr16@@Base>:
  41074c:	sub	sp, sp, #0x30
  410750:	stp	x29, x30, [sp, #32]
  410754:	add	x29, sp, #0x20
  410758:	mov	w4, #0x2                   	// #2
  41075c:	add	x8, sp, #0xe
  410760:	stur	x0, [x29, #-8]
  410764:	stur	w1, [x29, #-12]
  410768:	str	w2, [sp, #16]
  41076c:	strh	w3, [sp, #14]
  410770:	ldur	x0, [x29, #-8]
  410774:	ldur	w1, [x29, #-12]
  410778:	ldr	w2, [sp, #16]
  41077c:	mov	x3, x8
  410780:	bl	4105e0 <rta_addattr_l@@Base>
  410784:	ldp	x29, x30, [sp, #32]
  410788:	add	sp, sp, #0x30
  41078c:	ret

0000000000410790 <rta_addattr64@@Base>:
  410790:	sub	sp, sp, #0x30
  410794:	stp	x29, x30, [sp, #32]
  410798:	add	x29, sp, #0x20
  41079c:	mov	w4, #0x8                   	// #8
  4107a0:	add	x8, sp, #0x8
  4107a4:	stur	x0, [x29, #-8]
  4107a8:	stur	w1, [x29, #-12]
  4107ac:	str	w2, [sp, #16]
  4107b0:	str	x3, [sp, #8]
  4107b4:	ldur	x0, [x29, #-8]
  4107b8:	ldur	w1, [x29, #-12]
  4107bc:	ldr	w2, [sp, #16]
  4107c0:	mov	x3, x8
  4107c4:	bl	4105e0 <rta_addattr_l@@Base>
  4107c8:	ldp	x29, x30, [sp, #32]
  4107cc:	add	sp, sp, #0x30
  4107d0:	ret

00000000004107d4 <rta_nest@@Base>:
  4107d4:	sub	sp, sp, #0x30
  4107d8:	stp	x29, x30, [sp, #32]
  4107dc:	add	x29, sp, #0x20
  4107e0:	mov	x8, xzr
  4107e4:	mov	w9, wzr
  4107e8:	stur	x0, [x29, #-8]
  4107ec:	stur	w1, [x29, #-12]
  4107f0:	str	w2, [sp, #16]
  4107f4:	ldur	x10, [x29, #-8]
  4107f8:	ldur	x11, [x29, #-8]
  4107fc:	ldrh	w12, [x11]
  410800:	add	w12, w12, #0x4
  410804:	subs	w12, w12, #0x1
  410808:	and	w12, w12, #0xfffffffc
  41080c:	mov	w11, w12
  410810:	ubfx	x11, x11, #0, #32
  410814:	add	x10, x10, x11
  410818:	str	x10, [sp, #8]
  41081c:	ldur	x0, [x29, #-8]
  410820:	ldur	w1, [x29, #-12]
  410824:	ldr	w2, [sp, #16]
  410828:	mov	x3, x8
  41082c:	mov	w4, w9
  410830:	bl	4105e0 <rta_addattr_l@@Base>
  410834:	ldr	x8, [sp, #8]
  410838:	ldrh	w9, [x8, #2]
  41083c:	orr	w9, w9, #0x8000
  410840:	strh	w9, [x8, #2]
  410844:	ldr	x8, [sp, #8]
  410848:	mov	x0, x8
  41084c:	ldp	x29, x30, [sp, #32]
  410850:	add	sp, sp, #0x30
  410854:	ret

0000000000410858 <rta_nest_end@@Base>:
  410858:	sub	sp, sp, #0x10
  41085c:	str	x0, [sp, #8]
  410860:	str	x1, [sp]
  410864:	ldr	x8, [sp, #8]
  410868:	ldr	x9, [sp, #8]
  41086c:	ldrh	w10, [x9]
  410870:	add	w10, w10, #0x4
  410874:	subs	w10, w10, #0x1
  410878:	and	w10, w10, #0xfffffffc
  41087c:	mov	w9, w10
  410880:	ubfx	x9, x9, #0, #32
  410884:	add	x8, x8, x9
  410888:	ldr	x9, [sp]
  41088c:	subs	x8, x8, x9
  410890:	ldr	x9, [sp]
  410894:	strh	w8, [x9]
  410898:	ldr	x9, [sp, #8]
  41089c:	ldrh	w0, [x9]
  4108a0:	add	sp, sp, #0x10
  4108a4:	ret

00000000004108a8 <parse_rtattr@@Base>:
  4108a8:	sub	sp, sp, #0x30
  4108ac:	stp	x29, x30, [sp, #32]
  4108b0:	add	x29, sp, #0x20
  4108b4:	stur	x0, [x29, #-8]
  4108b8:	stur	w1, [x29, #-12]
  4108bc:	str	x2, [sp, #8]
  4108c0:	str	w3, [sp, #4]
  4108c4:	ldur	x0, [x29, #-8]
  4108c8:	ldur	w1, [x29, #-12]
  4108cc:	ldr	x2, [sp, #8]
  4108d0:	ldr	w3, [sp, #4]
  4108d4:	mov	w8, wzr
  4108d8:	mov	w4, w8
  4108dc:	bl	4108ec <parse_rtattr_flags@@Base>
  4108e0:	ldp	x29, x30, [sp, #32]
  4108e4:	add	sp, sp, #0x30
  4108e8:	ret

00000000004108ec <parse_rtattr_flags@@Base>:
  4108ec:	sub	sp, sp, #0x40
  4108f0:	stp	x29, x30, [sp, #48]
  4108f4:	add	x29, sp, #0x30
  4108f8:	mov	x8, #0x8                   	// #8
  4108fc:	mov	w9, wzr
  410900:	stur	x0, [x29, #-8]
  410904:	stur	w1, [x29, #-12]
  410908:	str	x2, [sp, #24]
  41090c:	str	w3, [sp, #20]
  410910:	strh	w4, [sp, #18]
  410914:	ldur	x0, [x29, #-8]
  410918:	ldur	w10, [x29, #-12]
  41091c:	add	w10, w10, #0x1
  410920:	mov	w2, w10
  410924:	sxtw	x11, w2
  410928:	mul	x2, x8, x11
  41092c:	mov	w1, w9
  410930:	bl	404ea0 <memset@plt>
  410934:	ldr	w8, [sp, #20]
  410938:	mov	w9, #0x0                   	// #0
  41093c:	cmp	w8, #0x4
  410940:	str	w9, [sp, #12]
  410944:	b.lt	41097c <parse_rtattr_flags@@Base+0x90>  // b.tstop
  410948:	ldr	x8, [sp, #24]
  41094c:	ldrh	w9, [x8]
  410950:	mov	w8, w9
  410954:	mov	w9, #0x0                   	// #0
  410958:	cmp	x8, #0x4
  41095c:	str	w9, [sp, #12]
  410960:	b.cc	41097c <parse_rtattr_flags@@Base+0x90>  // b.lo, b.ul, b.last
  410964:	ldr	x8, [sp, #24]
  410968:	ldrh	w9, [x8]
  41096c:	ldr	w10, [sp, #20]
  410970:	cmp	w9, w10
  410974:	cset	w9, le
  410978:	str	w9, [sp, #12]
  41097c:	ldr	w8, [sp, #12]
  410980:	tbnz	w8, #0, 410988 <parse_rtattr_flags@@Base+0x9c>
  410984:	b	410a38 <parse_rtattr_flags@@Base+0x14c>
  410988:	ldr	x8, [sp, #24]
  41098c:	ldrh	w9, [x8, #2]
  410990:	ldrh	w10, [sp, #18]
  410994:	bic	w9, w9, w10
  410998:	strh	w9, [sp, #16]
  41099c:	ldrh	w9, [sp, #16]
  4109a0:	ldur	w10, [x29, #-12]
  4109a4:	cmp	w9, w10
  4109a8:	b.gt	4109ec <parse_rtattr_flags@@Base+0x100>
  4109ac:	ldur	x8, [x29, #-8]
  4109b0:	ldrh	w9, [sp, #16]
  4109b4:	mov	w10, w9
  4109b8:	mov	x11, #0x8                   	// #8
  4109bc:	mul	x10, x11, x10
  4109c0:	add	x8, x8, x10
  4109c4:	ldr	x8, [x8]
  4109c8:	cbnz	x8, 4109ec <parse_rtattr_flags@@Base+0x100>
  4109cc:	ldr	x8, [sp, #24]
  4109d0:	ldur	x9, [x29, #-8]
  4109d4:	ldrh	w10, [sp, #16]
  4109d8:	mov	w11, w10
  4109dc:	mov	x12, #0x8                   	// #8
  4109e0:	mul	x11, x12, x11
  4109e4:	add	x9, x9, x11
  4109e8:	str	x8, [x9]
  4109ec:	ldr	x8, [sp, #24]
  4109f0:	ldrh	w9, [x8]
  4109f4:	add	w9, w9, #0x4
  4109f8:	subs	w9, w9, #0x1
  4109fc:	and	w9, w9, #0xfffffffc
  410a00:	ldr	w10, [sp, #20]
  410a04:	subs	w9, w10, w9
  410a08:	str	w9, [sp, #20]
  410a0c:	ldr	x8, [sp, #24]
  410a10:	ldr	x11, [sp, #24]
  410a14:	ldrh	w9, [x11]
  410a18:	add	w9, w9, #0x4
  410a1c:	subs	w9, w9, #0x1
  410a20:	and	w9, w9, #0xfffffffc
  410a24:	mov	w11, w9
  410a28:	ubfx	x11, x11, #0, #32
  410a2c:	add	x8, x8, x11
  410a30:	str	x8, [sp, #24]
  410a34:	b	410934 <parse_rtattr_flags@@Base+0x48>
  410a38:	ldr	w8, [sp, #20]
  410a3c:	cbz	w8, 410a64 <parse_rtattr_flags@@Base+0x178>
  410a40:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  410a44:	ldr	x8, [x8, #3992]
  410a48:	ldr	x0, [x8]
  410a4c:	ldr	w2, [sp, #20]
  410a50:	ldr	x8, [sp, #24]
  410a54:	ldrh	w3, [x8]
  410a58:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  410a5c:	add	x1, x1, #0x108
  410a60:	bl	4051e0 <fprintf@plt>
  410a64:	mov	w8, wzr
  410a68:	mov	w0, w8
  410a6c:	ldp	x29, x30, [sp, #48]
  410a70:	add	sp, sp, #0x40
  410a74:	ret

0000000000410a78 <parse_rtattr_one@@Base>:
  410a78:	sub	sp, sp, #0x30
  410a7c:	stp	x29, x30, [sp, #32]
  410a80:	add	x29, sp, #0x20
  410a84:	stur	w0, [x29, #-12]
  410a88:	str	x1, [sp, #8]
  410a8c:	str	w2, [sp, #4]
  410a90:	ldr	w8, [sp, #4]
  410a94:	mov	w9, #0x0                   	// #0
  410a98:	cmp	w8, #0x4
  410a9c:	str	w9, [sp]
  410aa0:	b.lt	410ad8 <parse_rtattr_one@@Base+0x60>  // b.tstop
  410aa4:	ldr	x8, [sp, #8]
  410aa8:	ldrh	w9, [x8]
  410aac:	mov	w8, w9
  410ab0:	mov	w9, #0x0                   	// #0
  410ab4:	cmp	x8, #0x4
  410ab8:	str	w9, [sp]
  410abc:	b.cc	410ad8 <parse_rtattr_one@@Base+0x60>  // b.lo, b.ul, b.last
  410ac0:	ldr	x8, [sp, #8]
  410ac4:	ldrh	w9, [x8]
  410ac8:	ldr	w10, [sp, #4]
  410acc:	cmp	w9, w10
  410ad0:	cset	w9, le
  410ad4:	str	w9, [sp]
  410ad8:	ldr	w8, [sp]
  410adc:	tbnz	w8, #0, 410ae4 <parse_rtattr_one@@Base+0x6c>
  410ae0:	b	410b50 <parse_rtattr_one@@Base+0xd8>
  410ae4:	ldr	x8, [sp, #8]
  410ae8:	ldrh	w9, [x8, #2]
  410aec:	ldur	w10, [x29, #-12]
  410af0:	cmp	w9, w10
  410af4:	b.ne	410b04 <parse_rtattr_one@@Base+0x8c>  // b.any
  410af8:	ldr	x8, [sp, #8]
  410afc:	stur	x8, [x29, #-8]
  410b00:	b	410b84 <parse_rtattr_one@@Base+0x10c>
  410b04:	ldr	x8, [sp, #8]
  410b08:	ldrh	w9, [x8]
  410b0c:	add	w9, w9, #0x4
  410b10:	subs	w9, w9, #0x1
  410b14:	and	w9, w9, #0xfffffffc
  410b18:	ldr	w10, [sp, #4]
  410b1c:	subs	w9, w10, w9
  410b20:	str	w9, [sp, #4]
  410b24:	ldr	x8, [sp, #8]
  410b28:	ldr	x11, [sp, #8]
  410b2c:	ldrh	w9, [x11]
  410b30:	add	w9, w9, #0x4
  410b34:	subs	w9, w9, #0x1
  410b38:	and	w9, w9, #0xfffffffc
  410b3c:	mov	w11, w9
  410b40:	ubfx	x11, x11, #0, #32
  410b44:	add	x8, x8, x11
  410b48:	str	x8, [sp, #8]
  410b4c:	b	410a90 <parse_rtattr_one@@Base+0x18>
  410b50:	ldr	w8, [sp, #4]
  410b54:	cbz	w8, 410b7c <parse_rtattr_one@@Base+0x104>
  410b58:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  410b5c:	ldr	x8, [x8, #3992]
  410b60:	ldr	x0, [x8]
  410b64:	ldr	w2, [sp, #4]
  410b68:	ldr	x8, [sp, #8]
  410b6c:	ldrh	w3, [x8]
  410b70:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  410b74:	add	x1, x1, #0x108
  410b78:	bl	4051e0 <fprintf@plt>
  410b7c:	mov	x8, xzr
  410b80:	stur	x8, [x29, #-8]
  410b84:	ldur	x0, [x29, #-8]
  410b88:	ldp	x29, x30, [sp, #32]
  410b8c:	add	sp, sp, #0x30
  410b90:	ret

0000000000410b94 <__parse_rtattr_nested_compat@@Base>:
  410b94:	sub	sp, sp, #0x40
  410b98:	stp	x29, x30, [sp, #48]
  410b9c:	add	x29, sp, #0x30
  410ba0:	stur	x0, [x29, #-16]
  410ba4:	stur	w1, [x29, #-20]
  410ba8:	str	x2, [sp, #16]
  410bac:	str	w3, [sp, #12]
  410bb0:	ldr	x8, [sp, #16]
  410bb4:	ldrh	w9, [x8]
  410bb8:	mov	w0, w9
  410bbc:	sxtw	x8, w0
  410bc0:	subs	x8, x8, #0x4
  410bc4:	ldrsw	x10, [sp, #12]
  410bc8:	cmp	x8, x10
  410bcc:	b.cs	410bdc <__parse_rtattr_nested_compat@@Base+0x48>  // b.hs, b.nlast
  410bd0:	mov	w8, #0xffffffff            	// #-1
  410bd4:	stur	w8, [x29, #-4]
  410bd8:	b	410c9c <__parse_rtattr_nested_compat@@Base+0x108>
  410bdc:	ldr	x8, [sp, #16]
  410be0:	ldrh	w9, [x8]
  410be4:	mov	w0, w9
  410be8:	sxtw	x8, w0
  410bec:	subs	x8, x8, #0x4
  410bf0:	ldr	w9, [sp, #12]
  410bf4:	add	w9, w9, #0x4
  410bf8:	subs	w9, w9, #0x1
  410bfc:	and	w9, w9, #0xfffffffc
  410c00:	mov	w10, w9
  410c04:	ubfx	x10, x10, #0, #32
  410c08:	add	x10, x10, #0x4
  410c0c:	cmp	x8, x10
  410c10:	b.cc	410c70 <__parse_rtattr_nested_compat@@Base+0xdc>  // b.lo, b.ul, b.last
  410c14:	ldr	x8, [sp, #16]
  410c18:	add	x8, x8, #0x4
  410c1c:	ldr	w9, [sp, #12]
  410c20:	add	w9, w9, #0x4
  410c24:	subs	w9, w9, #0x1
  410c28:	and	w9, w9, #0xfffffffc
  410c2c:	mov	w10, w9
  410c30:	ubfx	x10, x10, #0, #32
  410c34:	add	x8, x8, x10
  410c38:	str	x8, [sp, #16]
  410c3c:	ldur	x0, [x29, #-16]
  410c40:	ldur	w1, [x29, #-20]
  410c44:	ldr	x8, [sp, #16]
  410c48:	add	x2, x8, #0x4
  410c4c:	ldr	x8, [sp, #16]
  410c50:	ldrh	w9, [x8]
  410c54:	mov	w3, w9
  410c58:	sxtw	x8, w3
  410c5c:	subs	x8, x8, #0x4
  410c60:	mov	w3, w8
  410c64:	bl	4108a8 <parse_rtattr@@Base>
  410c68:	stur	w0, [x29, #-4]
  410c6c:	b	410c9c <__parse_rtattr_nested_compat@@Base+0x108>
  410c70:	ldur	x0, [x29, #-16]
  410c74:	ldur	w8, [x29, #-20]
  410c78:	add	w8, w8, #0x1
  410c7c:	mov	w1, w8
  410c80:	sxtw	x9, w1
  410c84:	mov	x10, #0x8                   	// #8
  410c88:	mul	x2, x10, x9
  410c8c:	mov	w8, wzr
  410c90:	mov	w1, w8
  410c94:	bl	404ea0 <memset@plt>
  410c98:	stur	wzr, [x29, #-4]
  410c9c:	ldur	w0, [x29, #-4]
  410ca0:	ldp	x29, x30, [sp, #48]
  410ca4:	add	sp, sp, #0x40
  410ca8:	ret
  410cac:	sub	sp, sp, #0x40
  410cb0:	stp	x29, x30, [sp, #48]
  410cb4:	add	x29, sp, #0x30
  410cb8:	mov	x8, xzr
  410cbc:	mov	w9, #0x22                  	// #34
  410cc0:	stur	w0, [x29, #-8]
  410cc4:	stur	x1, [x29, #-16]
  410cc8:	str	x2, [sp, #24]
  410ccc:	ldur	x10, [x29, #-16]
  410cd0:	ldr	x10, [x10, #16]
  410cd4:	str	x10, [sp, #16]
  410cd8:	ldr	x10, [sp, #16]
  410cdc:	str	x8, [x10]
  410ce0:	ldr	x8, [sp, #16]
  410ce4:	str	xzr, [x8, #8]
  410ce8:	ldur	w0, [x29, #-8]
  410cec:	ldur	x1, [x29, #-16]
  410cf0:	mov	w2, w9
  410cf4:	bl	410ffc <__parse_rtattr_nested_compat@@Base+0x468>
  410cf8:	str	w0, [sp, #4]
  410cfc:	ldr	w9, [sp, #4]
  410d00:	cmp	w9, #0x0
  410d04:	cset	w9, ge  // ge = tcont
  410d08:	tbnz	w9, #0, 410d18 <__parse_rtattr_nested_compat@@Base+0x184>
  410d0c:	ldr	w8, [sp, #4]
  410d10:	stur	w8, [x29, #-4]
  410d14:	b	410de0 <__parse_rtattr_nested_compat@@Base+0x24c>
  410d18:	ldr	w8, [sp, #4]
  410d1c:	cmp	w8, #0x8, lsl #12
  410d20:	b.ge	410d2c <__parse_rtattr_nested_compat@@Base+0x198>  // b.tcont
  410d24:	mov	w8, #0x8000                	// #32768
  410d28:	str	w8, [sp, #4]
  410d2c:	ldrsw	x0, [sp, #4]
  410d30:	bl	404e40 <malloc@plt>
  410d34:	str	x0, [sp, #8]
  410d38:	ldr	x8, [sp, #8]
  410d3c:	cbnz	x8, 410d64 <__parse_rtattr_nested_compat@@Base+0x1d0>
  410d40:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  410d44:	ldr	x8, [x8, #3992]
  410d48:	ldr	x0, [x8]
  410d4c:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  410d50:	add	x1, x1, #0x152
  410d54:	bl	4051e0 <fprintf@plt>
  410d58:	mov	w9, #0xfffffff4            	// #-12
  410d5c:	stur	w9, [x29, #-4]
  410d60:	b	410de0 <__parse_rtattr_nested_compat@@Base+0x24c>
  410d64:	ldr	x8, [sp, #8]
  410d68:	ldr	x9, [sp, #16]
  410d6c:	str	x8, [x9]
  410d70:	ldrsw	x8, [sp, #4]
  410d74:	ldr	x9, [sp, #16]
  410d78:	str	x8, [x9, #8]
  410d7c:	ldur	w0, [x29, #-8]
  410d80:	ldur	x1, [x29, #-16]
  410d84:	mov	w10, wzr
  410d88:	mov	w2, w10
  410d8c:	bl	410ffc <__parse_rtattr_nested_compat@@Base+0x468>
  410d90:	str	w0, [sp, #4]
  410d94:	ldr	w10, [sp, #4]
  410d98:	cmp	w10, #0x0
  410d9c:	cset	w10, ge  // ge = tcont
  410da0:	tbnz	w10, #0, 410db8 <__parse_rtattr_nested_compat@@Base+0x224>
  410da4:	ldr	x0, [sp, #8]
  410da8:	bl	405020 <free@plt>
  410dac:	ldr	w8, [sp, #4]
  410db0:	stur	w8, [x29, #-4]
  410db4:	b	410de0 <__parse_rtattr_nested_compat@@Base+0x24c>
  410db8:	ldr	x8, [sp, #24]
  410dbc:	cbz	x8, 410dd0 <__parse_rtattr_nested_compat@@Base+0x23c>
  410dc0:	ldr	x8, [sp, #8]
  410dc4:	ldr	x9, [sp, #24]
  410dc8:	str	x8, [x9]
  410dcc:	b	410dd8 <__parse_rtattr_nested_compat@@Base+0x244>
  410dd0:	ldr	x0, [sp, #8]
  410dd4:	bl	405020 <free@plt>
  410dd8:	ldr	w8, [sp, #4]
  410ddc:	stur	w8, [x29, #-4]
  410de0:	ldur	w0, [x29, #-4]
  410de4:	ldp	x29, x30, [sp, #48]
  410de8:	add	sp, sp, #0x40
  410dec:	ret
  410df0:	sub	sp, sp, #0x30
  410df4:	stp	x29, x30, [sp, #32]
  410df8:	add	x29, sp, #0x20
  410dfc:	str	x0, [sp, #16]
  410e00:	ldr	x8, [sp, #16]
  410e04:	ldr	w9, [x8, #16]
  410e08:	str	w9, [sp, #12]
  410e0c:	ldr	x8, [sp, #16]
  410e10:	ldr	w9, [x8]
  410e14:	mov	w8, w9
  410e18:	cmp	x8, #0x14
  410e1c:	b.cs	410e44 <__parse_rtattr_nested_compat@@Base+0x2b0>  // b.hs, b.nlast
  410e20:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  410e24:	ldr	x8, [x8, #3992]
  410e28:	ldr	x0, [x8]
  410e2c:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  410e30:	add	x1, x1, #0x173
  410e34:	bl	4051e0 <fprintf@plt>
  410e38:	mov	w9, #0xffffffff            	// #-1
  410e3c:	stur	w9, [x29, #-4]
  410e40:	b	410f20 <__parse_rtattr_nested_compat@@Base+0x38c>
  410e44:	ldr	w8, [sp, #12]
  410e48:	cmp	w8, #0x0
  410e4c:	cset	w8, ge  // ge = tcont
  410e50:	tbnz	w8, #0, 410f0c <__parse_rtattr_nested_compat@@Base+0x378>
  410e54:	ldr	x0, [sp, #16]
  410e58:	ldr	w1, [sp, #12]
  410e5c:	bl	40d8f0 <nl_dump_ext_ack_done@@Base>
  410e60:	cbz	w0, 410e70 <__parse_rtattr_nested_compat@@Base+0x2dc>
  410e64:	ldr	w8, [sp, #12]
  410e68:	stur	w8, [x29, #-4]
  410e6c:	b	410f20 <__parse_rtattr_nested_compat@@Base+0x38c>
  410e70:	ldr	w8, [sp, #12]
  410e74:	mov	w9, wzr
  410e78:	subs	w8, w9, w8
  410e7c:	str	w8, [sp, #8]
  410e80:	bl	4051b0 <__errno_location@plt>
  410e84:	ldr	w8, [sp, #8]
  410e88:	str	w8, [x0]
  410e8c:	bl	4051b0 <__errno_location@plt>
  410e90:	ldr	w8, [x0]
  410e94:	cmp	w8, #0x2
  410e98:	str	w8, [sp, #4]
  410e9c:	b.eq	410ecc <__parse_rtattr_nested_compat@@Base+0x338>  // b.none
  410ea0:	b	410ea4 <__parse_rtattr_nested_compat@@Base+0x310>
  410ea4:	ldr	w8, [sp, #4]
  410ea8:	cmp	w8, #0x5a
  410eac:	b.eq	410ed8 <__parse_rtattr_nested_compat@@Base+0x344>  // b.none
  410eb0:	b	410eb4 <__parse_rtattr_nested_compat@@Base+0x320>
  410eb4:	ldr	w8, [sp, #4]
  410eb8:	cmp	w8, #0x5f
  410ebc:	cset	w9, eq  // eq = none
  410ec0:	eor	w9, w9, #0x1
  410ec4:	tbnz	w9, #0, 410ef4 <__parse_rtattr_nested_compat@@Base+0x360>
  410ec8:	b	410ecc <__parse_rtattr_nested_compat@@Base+0x338>
  410ecc:	mov	w8, #0xffffffff            	// #-1
  410ed0:	stur	w8, [x29, #-4]
  410ed4:	b	410f20 <__parse_rtattr_nested_compat@@Base+0x38c>
  410ed8:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  410edc:	ldr	x8, [x8, #3992]
  410ee0:	ldr	x0, [x8]
  410ee4:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  410ee8:	add	x1, x1, #0x183
  410eec:	bl	4051e0 <fprintf@plt>
  410ef0:	b	410f00 <__parse_rtattr_nested_compat@@Base+0x36c>
  410ef4:	adrp	x0, 412000 <_IO_stdin_used@@Base+0xb00>
  410ef8:	add	x0, x0, #0x1a8
  410efc:	bl	404cf0 <perror@plt>
  410f00:	ldr	w8, [sp, #12]
  410f04:	stur	w8, [x29, #-4]
  410f08:	b	410f20 <__parse_rtattr_nested_compat@@Base+0x38c>
  410f0c:	ldr	x0, [sp, #16]
  410f10:	mov	x8, xzr
  410f14:	mov	x1, x8
  410f18:	bl	40d8d4 <nl_dump_ext_ack@@Base>
  410f1c:	stur	wzr, [x29, #-4]
  410f20:	ldur	w0, [x29, #-4]
  410f24:	ldp	x29, x30, [sp, #32]
  410f28:	add	sp, sp, #0x30
  410f2c:	ret
  410f30:	sub	sp, sp, #0x30
  410f34:	stp	x29, x30, [sp, #32]
  410f38:	add	x29, sp, #0x20
  410f3c:	stur	x0, [x29, #-8]
  410f40:	str	x1, [sp, #16]
  410f44:	ldr	x8, [sp, #16]
  410f48:	ldr	w9, [x8]
  410f4c:	mov	w8, w9
  410f50:	cmp	x8, #0x24
  410f54:	b.cs	410f74 <__parse_rtattr_nested_compat@@Base+0x3e0>  // b.hs, b.nlast
  410f58:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  410f5c:	ldr	x8, [x8, #3992]
  410f60:	ldr	x0, [x8]
  410f64:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  410f68:	add	x1, x1, #0xf15
  410f6c:	bl	4051e0 <fprintf@plt>
  410f70:	b	410ff0 <__parse_rtattr_nested_compat@@Base+0x45c>
  410f74:	ldr	x8, [sp, #16]
  410f78:	add	x8, x8, #0x10
  410f7c:	str	x8, [sp, #8]
  410f80:	ldr	x8, [sp, #8]
  410f84:	ldr	w9, [x8]
  410f88:	mov	w10, wzr
  410f8c:	subs	w9, w10, w9
  410f90:	str	w9, [sp, #4]
  410f94:	bl	4051b0 <__errno_location@plt>
  410f98:	ldr	w9, [sp, #4]
  410f9c:	str	w9, [x0]
  410fa0:	ldur	x8, [x29, #-8]
  410fa4:	ldr	w10, [x8, #36]
  410fa8:	cmp	w10, #0x4
  410fac:	b.ne	410fd4 <__parse_rtattr_nested_compat@@Base+0x440>  // b.any
  410fb0:	bl	4051b0 <__errno_location@plt>
  410fb4:	ldr	w8, [x0]
  410fb8:	cmp	w8, #0x2
  410fbc:	b.eq	410fd0 <__parse_rtattr_nested_compat@@Base+0x43c>  // b.none
  410fc0:	bl	4051b0 <__errno_location@plt>
  410fc4:	ldr	w8, [x0]
  410fc8:	cmp	w8, #0x5f
  410fcc:	b.ne	410fd4 <__parse_rtattr_nested_compat@@Base+0x440>  // b.any
  410fd0:	b	410ff0 <__parse_rtattr_nested_compat@@Base+0x45c>
  410fd4:	ldur	x8, [x29, #-8]
  410fd8:	ldr	w9, [x8, #48]
  410fdc:	and	w9, w9, #0x2
  410fe0:	cbnz	w9, 410ff0 <__parse_rtattr_nested_compat@@Base+0x45c>
  410fe4:	adrp	x0, 412000 <_IO_stdin_used@@Base+0xb00>
  410fe8:	add	x0, x0, #0x1a8
  410fec:	bl	404cf0 <perror@plt>
  410ff0:	ldp	x29, x30, [sp, #32]
  410ff4:	add	sp, sp, #0x30
  410ff8:	ret
  410ffc:	sub	sp, sp, #0x40
  411000:	stp	x29, x30, [sp, #48]
  411004:	add	x29, sp, #0x30
  411008:	stur	w0, [x29, #-8]
  41100c:	stur	x1, [x29, #-16]
  411010:	stur	w2, [x29, #-20]
  411014:	ldur	w0, [x29, #-8]
  411018:	ldur	x1, [x29, #-16]
  41101c:	ldur	w2, [x29, #-20]
  411020:	bl	404ca0 <recvmsg@plt>
  411024:	str	w0, [sp, #24]
  411028:	ldr	w8, [sp, #24]
  41102c:	cmp	w8, #0x0
  411030:	cset	w8, ge  // ge = tcont
  411034:	mov	w9, #0x0                   	// #0
  411038:	str	w9, [sp, #20]
  41103c:	tbnz	w8, #0, 411074 <__parse_rtattr_nested_compat@@Base+0x4e0>
  411040:	bl	4051b0 <__errno_location@plt>
  411044:	ldr	w8, [x0]
  411048:	mov	w9, #0x1                   	// #1
  41104c:	cmp	w8, #0x4
  411050:	str	w9, [sp, #16]
  411054:	b.eq	41106c <__parse_rtattr_nested_compat@@Base+0x4d8>  // b.none
  411058:	bl	4051b0 <__errno_location@plt>
  41105c:	ldr	w8, [x0]
  411060:	cmp	w8, #0xb
  411064:	cset	w8, eq  // eq = none
  411068:	str	w8, [sp, #16]
  41106c:	ldr	w8, [sp, #16]
  411070:	str	w8, [sp, #20]
  411074:	ldr	w8, [sp, #20]
  411078:	tbnz	w8, #0, 411014 <__parse_rtattr_nested_compat@@Base+0x480>
  41107c:	ldr	w8, [sp, #24]
  411080:	cmp	w8, #0x0
  411084:	cset	w8, ge  // ge = tcont
  411088:	tbnz	w8, #0, 4110e0 <__parse_rtattr_nested_compat@@Base+0x54c>
  41108c:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  411090:	ldr	x8, [x8, #3992]
  411094:	ldr	x0, [x8]
  411098:	str	x0, [sp, #8]
  41109c:	bl	4051b0 <__errno_location@plt>
  4110a0:	ldr	w0, [x0]
  4110a4:	bl	404f30 <strerror@plt>
  4110a8:	str	x0, [sp]
  4110ac:	bl	4051b0 <__errno_location@plt>
  4110b0:	ldr	w3, [x0]
  4110b4:	ldr	x0, [sp, #8]
  4110b8:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4110bc:	add	x1, x1, #0xf3e
  4110c0:	ldr	x2, [sp]
  4110c4:	bl	4051e0 <fprintf@plt>
  4110c8:	bl	4051b0 <__errno_location@plt>
  4110cc:	ldr	w9, [x0]
  4110d0:	mov	w10, wzr
  4110d4:	subs	w9, w10, w9
  4110d8:	stur	w9, [x29, #-4]
  4110dc:	b	411114 <__parse_rtattr_nested_compat@@Base+0x580>
  4110e0:	ldr	w8, [sp, #24]
  4110e4:	cbnz	w8, 41110c <__parse_rtattr_nested_compat@@Base+0x578>
  4110e8:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  4110ec:	ldr	x8, [x8, #3992]
  4110f0:	ldr	x0, [x8]
  4110f4:	adrp	x1, 411000 <__parse_rtattr_nested_compat@@Base+0x46c>
  4110f8:	add	x1, x1, #0xf5d
  4110fc:	bl	4051e0 <fprintf@plt>
  411100:	mov	w9, #0xffffffc3            	// #-61
  411104:	stur	w9, [x29, #-4]
  411108:	b	411114 <__parse_rtattr_nested_compat@@Base+0x580>
  41110c:	ldr	w8, [sp, #24]
  411110:	stur	w8, [x29, #-4]
  411114:	ldur	w0, [x29, #-4]
  411118:	ldp	x29, x30, [sp, #48]
  41111c:	add	sp, sp, #0x40
  411120:	ret
  411124:	sub	sp, sp, #0x40
  411128:	stp	x29, x30, [sp, #48]
  41112c:	add	x29, sp, #0x30
  411130:	stur	x0, [x29, #-8]
  411134:	stur	x1, [x29, #-16]
  411138:	str	x2, [sp, #24]
  41113c:	ldur	x0, [x29, #-8]
  411140:	ldr	x1, [sp, #24]
  411144:	bl	40d8d4 <nl_dump_ext_ack@@Base>
  411148:	cbz	w0, 411150 <__parse_rtattr_nested_compat@@Base+0x5bc>
  41114c:	b	411194 <__parse_rtattr_nested_compat@@Base+0x600>
  411150:	adrp	x8, 422000 <_IO_stdin_used@@Base+0x10b00>
  411154:	ldr	x8, [x8, #3992]
  411158:	ldr	x0, [x8]
  41115c:	ldur	x8, [x29, #-16]
  411160:	ldr	w9, [x8]
  411164:	mov	w10, wzr
  411168:	subs	w9, w10, w9
  41116c:	str	x0, [sp, #16]
  411170:	mov	w0, w9
  411174:	bl	404f30 <strerror@plt>
  411178:	ldr	x8, [sp, #16]
  41117c:	str	x0, [sp, #8]
  411180:	mov	x0, x8
  411184:	adrp	x1, 412000 <_IO_stdin_used@@Base+0xb00>
  411188:	add	x1, x1, #0x205
  41118c:	ldr	x2, [sp, #8]
  411190:	bl	4051e0 <fprintf@plt>
  411194:	ldp	x29, x30, [sp, #48]
  411198:	add	sp, sp, #0x40
  41119c:	ret
  4111a0:	stp	x29, x30, [sp, #-48]!
  4111a4:	mov	x29, sp
  4111a8:	str	q0, [sp, #16]
  4111ac:	str	q1, [sp, #32]
  4111b0:	ldp	x6, x1, [sp, #16]
  4111b4:	ldp	x7, x0, [sp, #32]
  4111b8:	mrs	x2, fpcr
  4111bc:	ubfx	x4, x1, #48, #15
  4111c0:	lsr	x2, x1, #63
  4111c4:	lsr	x3, x0, #63
  4111c8:	ubfx	x9, x0, #0, #48
  4111cc:	mov	x5, #0x7fff                	// #32767
  4111d0:	mov	x10, x6
  4111d4:	cmp	x4, x5
  4111d8:	and	w2, w2, #0xff
  4111dc:	ubfx	x1, x1, #0, #48
  4111e0:	and	w3, w3, #0xff
  4111e4:	ubfx	x0, x0, #48, #15
  4111e8:	b.eq	41121c <__parse_rtattr_nested_compat@@Base+0x688>  // b.none
  4111ec:	cmp	x0, x5
  4111f0:	b.eq	411208 <__parse_rtattr_nested_compat@@Base+0x674>  // b.none
  4111f4:	cmp	x4, x0
  4111f8:	mov	w0, #0x1                   	// #1
  4111fc:	b.eq	411234 <__parse_rtattr_nested_compat@@Base+0x6a0>  // b.none
  411200:	ldp	x29, x30, [sp], #48
  411204:	ret
  411208:	orr	x8, x9, x7
  41120c:	cbnz	x8, 411298 <__parse_rtattr_nested_compat@@Base+0x704>
  411210:	mov	w0, #0x1                   	// #1
  411214:	ldp	x29, x30, [sp], #48
  411218:	ret
  41121c:	orr	x5, x1, x6
  411220:	cbnz	x5, 411268 <__parse_rtattr_nested_compat@@Base+0x6d4>
  411224:	cmp	x0, x4
  411228:	b.ne	411210 <__parse_rtattr_nested_compat@@Base+0x67c>  // b.any
  41122c:	orr	x8, x9, x7
  411230:	cbnz	x8, 411298 <__parse_rtattr_nested_compat@@Base+0x704>
  411234:	cmp	x1, x9
  411238:	mov	w0, #0x1                   	// #1
  41123c:	ccmp	x6, x7, #0x0, eq  // eq = none
  411240:	b.ne	411200 <__parse_rtattr_nested_compat@@Base+0x66c>  // b.any
  411244:	cmp	w2, w3
  411248:	mov	w0, #0x0                   	// #0
  41124c:	b.eq	411200 <__parse_rtattr_nested_compat@@Base+0x66c>  // b.none
  411250:	mov	w0, #0x1                   	// #1
  411254:	cbnz	x4, 411200 <__parse_rtattr_nested_compat@@Base+0x66c>
  411258:	orr	x1, x1, x10
  41125c:	cmp	x1, #0x0
  411260:	cset	w0, ne  // ne = any
  411264:	b	411200 <__parse_rtattr_nested_compat@@Base+0x66c>
  411268:	tst	x1, #0x800000000000
  41126c:	b.ne	411284 <__parse_rtattr_nested_compat@@Base+0x6f0>  // b.any
  411270:	mov	w0, #0x1                   	// #1
  411274:	bl	4113f8 <__parse_rtattr_nested_compat@@Base+0x864>
  411278:	mov	w0, #0x1                   	// #1
  41127c:	ldp	x29, x30, [sp], #48
  411280:	ret
  411284:	cmp	x0, x4
  411288:	mov	w0, #0x1                   	// #1
  41128c:	b.ne	411200 <__parse_rtattr_nested_compat@@Base+0x66c>  // b.any
  411290:	orr	x8, x9, x7
  411294:	cbz	x8, 411200 <__parse_rtattr_nested_compat@@Base+0x66c>
  411298:	tst	x9, #0x800000000000
  41129c:	b.eq	411270 <__parse_rtattr_nested_compat@@Base+0x6dc>  // b.none
  4112a0:	b	411210 <__parse_rtattr_nested_compat@@Base+0x67c>
  4112a4:	nop
  4112a8:	mrs	x0, fpcr
  4112ac:	fmov	x0, d0
  4112b0:	ubfx	x1, x0, #52, #11
  4112b4:	lsr	x4, x0, #63
  4112b8:	add	x2, x1, #0x1
  4112bc:	and	w4, w4, #0xff
  4112c0:	tst	x2, #0x7fe
  4112c4:	ubfx	x0, x0, #0, #52
  4112c8:	b.eq	4112fc <__parse_rtattr_nested_compat@@Base+0x768>  // b.none
  4112cc:	lsr	x5, x0, #4
  4112d0:	mov	x3, #0x0                   	// #0
  4112d4:	and	x5, x5, #0xffffffffffff
  4112d8:	mov	w2, #0x3c00                	// #15360
  4112dc:	add	w1, w1, w2
  4112e0:	lsl	x0, x0, #60
  4112e4:	bfxil	x3, x5, #0, #48
  4112e8:	fmov	d0, x0
  4112ec:	bfi	x3, x1, #48, #15
  4112f0:	bfi	x3, x4, #63, #1
  4112f4:	fmov	v0.d[1], x3
  4112f8:	ret
  4112fc:	cbnz	x1, 411350 <__parse_rtattr_nested_compat@@Base+0x7bc>
  411300:	cbz	x0, 41139c <__parse_rtattr_nested_compat@@Base+0x808>
  411304:	clz	x2, x0
  411308:	cmp	w2, #0xe
  41130c:	b.gt	4113e8 <__parse_rtattr_nested_compat@@Base+0x854>
  411310:	add	w1, w2, #0x31
  411314:	mov	w5, #0xf                   	// #15
  411318:	sub	w5, w5, w2
  41131c:	lsr	x5, x0, x5
  411320:	lsl	x0, x0, x1
  411324:	and	x5, x5, #0xffffffffffff
  411328:	mov	w1, #0x3c0c                	// #15372
  41132c:	mov	x3, #0x0                   	// #0
  411330:	sub	w1, w1, w2
  411334:	and	w1, w1, #0x7fff
  411338:	bfxil	x3, x5, #0, #48
  41133c:	fmov	d0, x0
  411340:	bfi	x3, x1, #48, #15
  411344:	bfi	x3, x4, #63, #1
  411348:	fmov	v0.d[1], x3
  41134c:	ret
  411350:	cbz	x0, 4113c0 <__parse_rtattr_nested_compat@@Base+0x82c>
  411354:	lsr	x1, x0, #4
  411358:	mov	x3, #0x0                   	// #0
  41135c:	orr	x1, x1, #0x800000000000
  411360:	lsl	x2, x0, #60
  411364:	fmov	d0, x2
  411368:	bfxil	x3, x1, #0, #48
  41136c:	orr	x3, x3, #0x7fff000000000000
  411370:	bfi	x3, x4, #63, #1
  411374:	fmov	v0.d[1], x3
  411378:	tbnz	x0, #51, 4113e4 <__parse_rtattr_nested_compat@@Base+0x850>
  41137c:	stp	x29, x30, [sp, #-32]!
  411380:	mov	w0, #0x1                   	// #1
  411384:	mov	x29, sp
  411388:	str	q0, [sp, #16]
  41138c:	bl	4113f8 <__parse_rtattr_nested_compat@@Base+0x864>
  411390:	ldr	q0, [sp, #16]
  411394:	ldp	x29, x30, [sp], #32
  411398:	ret
  41139c:	mov	x5, #0x0                   	// #0
  4113a0:	mov	x3, #0x0                   	// #0
  4113a4:	bfxil	x3, x5, #0, #48
  4113a8:	mov	w1, #0x0                   	// #0
  4113ac:	fmov	d0, x0
  4113b0:	bfi	x3, x1, #48, #15
  4113b4:	bfi	x3, x4, #63, #1
  4113b8:	fmov	v0.d[1], x3
  4113bc:	ret
  4113c0:	mov	x5, #0x0                   	// #0
  4113c4:	mov	x3, #0x0                   	// #0
  4113c8:	bfxil	x3, x5, #0, #48
  4113cc:	mov	w1, #0x7fff                	// #32767
  4113d0:	fmov	d0, x0
  4113d4:	bfi	x3, x1, #48, #15
  4113d8:	bfi	x3, x4, #63, #1
  4113dc:	fmov	v0.d[1], x3
  4113e0:	ret
  4113e4:	ret
  4113e8:	sub	w5, w2, #0xf
  4113ec:	lsl	x5, x0, x5
  4113f0:	mov	x0, #0x0                   	// #0
  4113f4:	b	411324 <__parse_rtattr_nested_compat@@Base+0x790>
  4113f8:	tbz	w0, #0, 411408 <__parse_rtattr_nested_compat@@Base+0x874>
  4113fc:	movi	v1.2s, #0x0
  411400:	fdiv	s0, s1, s1
  411404:	mrs	x1, fpsr
  411408:	tbz	w0, #1, 41141c <__parse_rtattr_nested_compat@@Base+0x888>
  41140c:	fmov	s1, #1.000000000000000000e+00
  411410:	movi	v2.2s, #0x0
  411414:	fdiv	s0, s1, s2
  411418:	mrs	x1, fpsr
  41141c:	tbz	w0, #2, 41143c <__parse_rtattr_nested_compat@@Base+0x8a8>
  411420:	mov	w2, #0xc5ae                	// #50606
  411424:	mov	w1, #0x7f7fffff            	// #2139095039
  411428:	movk	w2, #0x749d, lsl #16
  41142c:	fmov	s1, w1
  411430:	fmov	s2, w2
  411434:	fadd	s0, s1, s2
  411438:	mrs	x1, fpsr
  41143c:	tbz	w0, #3, 41144c <__parse_rtattr_nested_compat@@Base+0x8b8>
  411440:	movi	v1.2s, #0x80, lsl #16
  411444:	fmul	s0, s1, s1
  411448:	mrs	x1, fpsr
  41144c:	tbz	w0, #4, 411464 <__parse_rtattr_nested_compat@@Base+0x8d0>
  411450:	mov	w0, #0x7f7fffff            	// #2139095039
  411454:	fmov	s2, #1.000000000000000000e+00
  411458:	fmov	s1, w0
  41145c:	fsub	s0, s1, s2
  411460:	mrs	x0, fpsr
  411464:	ret

0000000000411468 <__libc_csu_init@@Base>:
  411468:	stp	x29, x30, [sp, #-64]!
  41146c:	mov	x29, sp
  411470:	stp	x19, x20, [sp, #16]
  411474:	adrp	x20, 422000 <_IO_stdin_used@@Base+0x10b00>
  411478:	add	x20, x20, #0xd08
  41147c:	stp	x21, x22, [sp, #32]
  411480:	adrp	x21, 422000 <_IO_stdin_used@@Base+0x10b00>
  411484:	add	x21, x21, #0xd00
  411488:	sub	x20, x20, x21
  41148c:	mov	w22, w0
  411490:	stp	x23, x24, [sp, #48]
  411494:	mov	x23, x1
  411498:	mov	x24, x2
  41149c:	bl	404c58 <memcpy@plt-0x38>
  4114a0:	cmp	xzr, x20, asr #3
  4114a4:	b.eq	4114d0 <__libc_csu_init@@Base+0x68>  // b.none
  4114a8:	asr	x20, x20, #3
  4114ac:	mov	x19, #0x0                   	// #0
  4114b0:	ldr	x3, [x21, x19, lsl #3]
  4114b4:	mov	x2, x24
  4114b8:	add	x19, x19, #0x1
  4114bc:	mov	x1, x23
  4114c0:	mov	w0, w22
  4114c4:	blr	x3
  4114c8:	cmp	x20, x19
  4114cc:	b.ne	4114b0 <__libc_csu_init@@Base+0x48>  // b.any
  4114d0:	ldp	x19, x20, [sp, #16]
  4114d4:	ldp	x21, x22, [sp, #32]
  4114d8:	ldp	x23, x24, [sp, #48]
  4114dc:	ldp	x29, x30, [sp], #64
  4114e0:	ret
  4114e4:	nop

00000000004114e8 <__libc_csu_fini@@Base>:
  4114e8:	ret

Disassembly of section .fini:

00000000004114ec <.fini>:
  4114ec:	stp	x29, x30, [sp, #-16]!
  4114f0:	mov	x29, sp
  4114f4:	ldp	x29, x30, [sp], #16
  4114f8:	ret
