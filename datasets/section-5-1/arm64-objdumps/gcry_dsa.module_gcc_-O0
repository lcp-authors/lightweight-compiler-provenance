
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_dsa.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <check_secret_key>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	ldr	x0, [x0, #24]
  14:	ldr	w0, [x0, #4]
  18:	bl	0 <_gcry_mpi_alloc>
  1c:	str	x0, [sp, #40]
  20:	ldr	x0, [sp, #24]
  24:	ldr	x1, [x0, #16]
  28:	ldr	x0, [sp, #24]
  2c:	ldr	x2, [x0, #32]
  30:	ldr	x0, [sp, #24]
  34:	ldr	x0, [x0]
  38:	mov	x3, x0
  3c:	ldr	x0, [sp, #40]
  40:	bl	0 <gcry_mpi_powm>
  44:	ldr	x0, [sp, #24]
  48:	ldr	x0, [x0, #24]
  4c:	mov	x1, x0
  50:	ldr	x0, [sp, #40]
  54:	bl	0 <gcry_mpi_cmp>
  58:	cmp	w0, #0x0
  5c:	cset	w0, eq  // eq = none
  60:	and	w0, w0, #0xff
  64:	str	w0, [sp, #36]
  68:	ldr	x0, [sp, #40]
  6c:	bl	0 <_gcry_mpi_free>
  70:	ldr	w0, [sp, #36]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

000000000000007c <verify>:
  7c:	stp	x29, x30, [sp, #-144]!
  80:	mov	x29, sp
  84:	str	x0, [sp, #40]
  88:	str	x1, [sp, #32]
  8c:	str	x2, [sp, #24]
  90:	str	x3, [sp, #16]
  94:	mov	x1, #0x0                   	// #0
  98:	ldr	x0, [sp, #40]
  9c:	bl	0 <gcry_mpi_cmp_ui>
  a0:	cmp	w0, #0x0
  a4:	b.le	c4 <verify+0x48>
  a8:	ldr	x0, [sp, #16]
  ac:	ldr	x0, [x0, #8]
  b0:	mov	x1, x0
  b4:	ldr	x0, [sp, #40]
  b8:	bl	0 <gcry_mpi_cmp>
  bc:	cmp	w0, #0x0
  c0:	b.lt	cc <verify+0x50>  // b.tstop
  c4:	mov	w0, #0x0                   	// #0
  c8:	b	250 <verify+0x1d4>
  cc:	mov	x1, #0x0                   	// #0
  d0:	ldr	x0, [sp, #32]
  d4:	bl	0 <gcry_mpi_cmp_ui>
  d8:	cmp	w0, #0x0
  dc:	b.le	fc <verify+0x80>
  e0:	ldr	x0, [sp, #16]
  e4:	ldr	x0, [x0, #8]
  e8:	mov	x1, x0
  ec:	ldr	x0, [sp, #32]
  f0:	bl	0 <gcry_mpi_cmp>
  f4:	cmp	w0, #0x0
  f8:	b.lt	104 <verify+0x88>  // b.tstop
  fc:	mov	w0, #0x0                   	// #0
 100:	b	250 <verify+0x1d4>
 104:	ldr	x0, [sp, #16]
 108:	ldr	x0, [x0, #8]
 10c:	ldr	w0, [x0, #4]
 110:	bl	0 <_gcry_mpi_alloc>
 114:	str	x0, [sp, #136]
 118:	ldr	x0, [sp, #16]
 11c:	ldr	x0, [x0, #8]
 120:	ldr	w0, [x0, #4]
 124:	bl	0 <_gcry_mpi_alloc>
 128:	str	x0, [sp, #128]
 12c:	ldr	x0, [sp, #16]
 130:	ldr	x0, [x0, #8]
 134:	ldr	w0, [x0, #4]
 138:	bl	0 <_gcry_mpi_alloc>
 13c:	str	x0, [sp, #120]
 140:	ldr	x0, [sp, #16]
 144:	ldr	x0, [x0]
 148:	ldr	w0, [x0, #4]
 14c:	bl	0 <_gcry_mpi_alloc>
 150:	str	x0, [sp, #112]
 154:	ldr	x0, [sp, #16]
 158:	ldr	x0, [x0, #8]
 15c:	mov	x2, x0
 160:	ldr	x1, [sp, #32]
 164:	ldr	x0, [sp, #136]
 168:	bl	0 <gcry_mpi_invm>
 16c:	ldr	x0, [sp, #16]
 170:	ldr	x0, [x0, #8]
 174:	mov	x3, x0
 178:	ldr	x2, [sp, #136]
 17c:	ldr	x1, [sp, #24]
 180:	ldr	x0, [sp, #128]
 184:	bl	0 <gcry_mpi_mulm>
 188:	ldr	x0, [sp, #16]
 18c:	ldr	x0, [x0, #8]
 190:	mov	x3, x0
 194:	ldr	x2, [sp, #136]
 198:	ldr	x1, [sp, #40]
 19c:	ldr	x0, [sp, #120]
 1a0:	bl	0 <gcry_mpi_mulm>
 1a4:	ldr	x0, [sp, #16]
 1a8:	ldr	x0, [x0, #16]
 1ac:	str	x0, [sp, #80]
 1b0:	ldr	x0, [sp, #128]
 1b4:	str	x0, [sp, #56]
 1b8:	ldr	x0, [sp, #16]
 1bc:	ldr	x0, [x0, #24]
 1c0:	str	x0, [sp, #88]
 1c4:	ldr	x0, [sp, #120]
 1c8:	str	x0, [sp, #64]
 1cc:	str	xzr, [sp, #96]
 1d0:	str	xzr, [sp, #72]
 1d4:	ldr	x0, [sp, #16]
 1d8:	ldr	x2, [x0]
 1dc:	add	x1, sp, #0x38
 1e0:	add	x0, sp, #0x50
 1e4:	mov	x3, x2
 1e8:	mov	x2, x1
 1ec:	mov	x1, x0
 1f0:	ldr	x0, [sp, #112]
 1f4:	bl	0 <_gcry_mpi_mulpowm>
 1f8:	ldr	x0, [sp, #16]
 1fc:	ldr	x0, [x0, #8]
 200:	mov	x2, x0
 204:	ldr	x1, [sp, #112]
 208:	ldr	x0, [sp, #112]
 20c:	bl	0 <_gcry_mpi_fdiv_r>
 210:	ldr	x1, [sp, #40]
 214:	ldr	x0, [sp, #112]
 218:	bl	0 <gcry_mpi_cmp>
 21c:	cmp	w0, #0x0
 220:	cset	w0, eq  // eq = none
 224:	and	w0, w0, #0xff
 228:	str	w0, [sp, #108]
 22c:	ldr	x0, [sp, #136]
 230:	bl	0 <_gcry_mpi_free>
 234:	ldr	x0, [sp, #128]
 238:	bl	0 <_gcry_mpi_free>
 23c:	ldr	x0, [sp, #120]
 240:	bl	0 <_gcry_mpi_free>
 244:	ldr	x0, [sp, #112]
 248:	bl	0 <_gcry_mpi_free>
 24c:	ldr	w0, [sp, #108]
 250:	ldp	x29, x30, [sp], #144
 254:	ret

0000000000000258 <dsa_check_secret_key>:
 258:	stp	x29, x30, [sp, #-80]!
 25c:	mov	x29, sp
 260:	str	w0, [sp, #28]
 264:	str	x1, [sp, #16]
 268:	str	wzr, [sp, #76]
 26c:	ldr	x0, [sp, #16]
 270:	ldr	x0, [x0]
 274:	cmp	x0, #0x0
 278:	b.eq	2cc <dsa_check_secret_key+0x74>  // b.none
 27c:	ldr	x0, [sp, #16]
 280:	add	x0, x0, #0x8
 284:	ldr	x0, [x0]
 288:	cmp	x0, #0x0
 28c:	b.eq	2cc <dsa_check_secret_key+0x74>  // b.none
 290:	ldr	x0, [sp, #16]
 294:	add	x0, x0, #0x10
 298:	ldr	x0, [x0]
 29c:	cmp	x0, #0x0
 2a0:	b.eq	2cc <dsa_check_secret_key+0x74>  // b.none
 2a4:	ldr	x0, [sp, #16]
 2a8:	add	x0, x0, #0x18
 2ac:	ldr	x0, [x0]
 2b0:	cmp	x0, #0x0
 2b4:	b.eq	2cc <dsa_check_secret_key+0x74>  // b.none
 2b8:	ldr	x0, [sp, #16]
 2bc:	add	x0, x0, #0x20
 2c0:	ldr	x0, [x0]
 2c4:	cmp	x0, #0x0
 2c8:	b.ne	2d8 <dsa_check_secret_key+0x80>  // b.any
 2cc:	mov	w0, #0x1                   	// #1
 2d0:	str	w0, [sp, #76]
 2d4:	b	32c <dsa_check_secret_key+0xd4>
 2d8:	ldr	x0, [sp, #16]
 2dc:	ldr	x0, [x0]
 2e0:	str	x0, [sp, #32]
 2e4:	ldr	x0, [sp, #16]
 2e8:	ldr	x0, [x0, #8]
 2ec:	str	x0, [sp, #40]
 2f0:	ldr	x0, [sp, #16]
 2f4:	ldr	x0, [x0, #16]
 2f8:	str	x0, [sp, #48]
 2fc:	ldr	x0, [sp, #16]
 300:	ldr	x0, [x0, #24]
 304:	str	x0, [sp, #56]
 308:	ldr	x0, [sp, #16]
 30c:	ldr	x0, [x0, #32]
 310:	str	x0, [sp, #64]
 314:	add	x0, sp, #0x20
 318:	bl	0 <check_secret_key>
 31c:	cmp	w0, #0x0
 320:	b.ne	32c <dsa_check_secret_key+0xd4>  // b.any
 324:	mov	w0, #0x2                   	// #2
 328:	str	w0, [sp, #76]
 32c:	ldr	w0, [sp, #76]
 330:	ldp	x29, x30, [sp], #80
 334:	ret

0000000000000338 <dsa_verify>:
 338:	stp	x29, x30, [sp, #-112]!
 33c:	mov	x29, sp
 340:	str	w0, [sp, #60]
 344:	str	x1, [sp, #48]
 348:	str	x2, [sp, #40]
 34c:	str	x3, [sp, #32]
 350:	str	x4, [sp, #24]
 354:	str	x5, [sp, #16]
 358:	str	wzr, [sp, #108]
 35c:	ldr	x0, [sp, #40]
 360:	ldr	x0, [x0]
 364:	cmp	x0, #0x0
 368:	b.eq	3d8 <dsa_verify+0xa0>  // b.none
 36c:	ldr	x0, [sp, #40]
 370:	add	x0, x0, #0x8
 374:	ldr	x0, [x0]
 378:	cmp	x0, #0x0
 37c:	b.eq	3d8 <dsa_verify+0xa0>  // b.none
 380:	ldr	x0, [sp, #48]
 384:	cmp	x0, #0x0
 388:	b.eq	3d8 <dsa_verify+0xa0>  // b.none
 38c:	ldr	x0, [sp, #32]
 390:	ldr	x0, [x0]
 394:	cmp	x0, #0x0
 398:	b.eq	3d8 <dsa_verify+0xa0>  // b.none
 39c:	ldr	x0, [sp, #32]
 3a0:	add	x0, x0, #0x8
 3a4:	ldr	x0, [x0]
 3a8:	cmp	x0, #0x0
 3ac:	b.eq	3d8 <dsa_verify+0xa0>  // b.none
 3b0:	ldr	x0, [sp, #32]
 3b4:	add	x0, x0, #0x10
 3b8:	ldr	x0, [x0]
 3bc:	cmp	x0, #0x0
 3c0:	b.eq	3d8 <dsa_verify+0xa0>  // b.none
 3c4:	ldr	x0, [sp, #32]
 3c8:	add	x0, x0, #0x18
 3cc:	ldr	x0, [x0]
 3d0:	cmp	x0, #0x0
 3d4:	b.ne	3e4 <dsa_verify+0xac>  // b.any
 3d8:	mov	w0, #0x1                   	// #1
 3dc:	str	w0, [sp, #108]
 3e0:	b	450 <dsa_verify+0x118>
 3e4:	ldr	x0, [sp, #32]
 3e8:	ldr	x0, [x0]
 3ec:	str	x0, [sp, #72]
 3f0:	ldr	x0, [sp, #32]
 3f4:	ldr	x0, [x0, #8]
 3f8:	str	x0, [sp, #80]
 3fc:	ldr	x0, [sp, #32]
 400:	ldr	x0, [x0, #16]
 404:	str	x0, [sp, #88]
 408:	ldr	x0, [sp, #32]
 40c:	ldr	x0, [x0, #24]
 410:	str	x0, [sp, #96]
 414:	ldr	x0, [sp, #40]
 418:	ldr	x4, [x0]
 41c:	ldr	x0, [sp, #40]
 420:	add	x0, x0, #0x8
 424:	ldr	x0, [x0]
 428:	add	x1, sp, #0x48
 42c:	mov	x3, x1
 430:	ldr	x2, [sp, #48]
 434:	mov	x1, x0
 438:	mov	x0, x4
 43c:	bl	7c <verify>
 440:	cmp	w0, #0x0
 444:	b.ne	450 <dsa_verify+0x118>  // b.any
 448:	mov	w0, #0x3                   	// #3
 44c:	str	w0, [sp, #108]
 450:	ldr	w0, [sp, #108]
 454:	ldp	x29, x30, [sp], #112
 458:	ret

000000000000045c <dsa_get_nbits>:
 45c:	stp	x29, x30, [sp, #-32]!
 460:	mov	x29, sp
 464:	str	w0, [sp, #28]
 468:	str	x1, [sp, #16]
 46c:	ldr	x0, [sp, #16]
 470:	ldr	x0, [x0]
 474:	bl	0 <gcry_mpi_get_nbits>
 478:	ldp	x29, x30, [sp], #32
 47c:	ret

0000000000000480 <grub_mod_init>:
 480:	sub	sp, sp, #0x10
 484:	str	x0, [sp, #8]
 488:	adrp	x0, 0 <check_secret_key>
 48c:	add	x0, x0, #0x0
 490:	ldr	x0, [x0]
 494:	adrp	x1, 0 <check_secret_key>
 498:	add	x1, x1, #0x0
 49c:	ldr	x1, [x1]
 4a0:	str	x1, [x0]
 4a4:	nop
 4a8:	add	sp, sp, #0x10
 4ac:	ret
	...

00000000000004c0 <grub_mod_fini>:
 4c0:	adrp	x0, 0 <check_secret_key>
 4c4:	add	x0, x0, #0x0
 4c8:	ldr	x0, [x0]
 4cc:	str	xzr, [x0]
 4d0:	nop
 4d4:	ret
	...
