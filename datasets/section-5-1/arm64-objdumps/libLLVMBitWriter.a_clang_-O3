In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMBitWriter.a_clang_-O3:

BitWriter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMWriteBitcodeToFile>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x20, x19, [sp, #112]
   c:	add	x29, sp, #0x60
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	stur	wzr, [x29, #-16]
  1c:	bl	0 <_ZNSt3_V215system_categoryEv>
  20:	stur	x0, [x29, #-8]
  24:	cbz	x20, 38 <LLVMWriteBitcodeToFile+0x38>
  28:	mov	x0, x20
  2c:	bl	0 <strlen>
  30:	mov	x2, x0
  34:	b	3c <LLVMWriteBitcodeToFile+0x3c>
  38:	mov	x2, xzr
  3c:	add	x0, sp, #0x8
  40:	sub	x3, x29, #0x10
  44:	mov	x1, x20
  48:	mov	w4, wzr
  4c:	bl	0 <_ZN4llvm14raw_fd_ostreamC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
  50:	ldur	w8, [x29, #-16]
  54:	cbz	w8, 60 <LLVMWriteBitcodeToFile+0x60>
  58:	mov	w19, #0xffffffff            	// #-1
  5c:	b	80 <LLVMWriteBitcodeToFile+0x80>
  60:	add	x1, sp, #0x8
  64:	mov	x0, x19
  68:	mov	w2, wzr
  6c:	mov	x3, xzr
  70:	mov	w4, wzr
  74:	mov	x5, xzr
  78:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
  7c:	mov	w19, wzr
  80:	add	x0, sp, #0x8
  84:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
  88:	mov	w0, w19
  8c:	ldp	x20, x19, [sp, #112]
  90:	ldp	x29, x30, [sp, #96]
  94:	add	sp, sp, #0x80
  98:	ret

000000000000009c <LLVMWriteBitcodeToFD>:
  9c:	sub	sp, sp, #0x70
  a0:	stp	x29, x30, [sp, #80]
  a4:	str	x19, [sp, #96]
  a8:	add	x29, sp, #0x50
  ac:	cmp	w2, #0x0
  b0:	cset	w2, ne  // ne = any
  b4:	cmp	w3, #0x0
  b8:	mov	x19, x0
  bc:	cset	w3, ne  // ne = any
  c0:	add	x0, sp, #0x8
  c4:	bl	0 <_ZN4llvm14raw_fd_ostreamC1Eibb>
  c8:	add	x1, sp, #0x8
  cc:	mov	x0, x19
  d0:	mov	w2, wzr
  d4:	mov	x3, xzr
  d8:	mov	w4, wzr
  dc:	mov	x5, xzr
  e0:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
  e4:	add	x0, sp, #0x8
  e8:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
  ec:	ldr	x19, [sp, #96]
  f0:	ldp	x29, x30, [sp, #80]
  f4:	mov	w0, wzr
  f8:	add	sp, sp, #0x70
  fc:	ret

0000000000000100 <LLVMWriteBitcodeToFileHandle>:
 100:	sub	sp, sp, #0x70
 104:	stp	x29, x30, [sp, #80]
 108:	str	x19, [sp, #96]
 10c:	add	x29, sp, #0x50
 110:	mov	x19, x0
 114:	add	x0, sp, #0x8
 118:	mov	w2, #0x1                   	// #1
 11c:	mov	w3, wzr
 120:	bl	0 <_ZN4llvm14raw_fd_ostreamC1Eibb>
 124:	add	x1, sp, #0x8
 128:	mov	x0, x19
 12c:	mov	w2, wzr
 130:	mov	x3, xzr
 134:	mov	w4, wzr
 138:	mov	x5, xzr
 13c:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
 140:	add	x0, sp, #0x8
 144:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 148:	ldr	x19, [sp, #96]
 14c:	ldp	x29, x30, [sp, #80]
 150:	mov	w0, wzr
 154:	add	sp, sp, #0x70
 158:	ret

000000000000015c <LLVMWriteBitcodeToMemoryBuffer>:
 15c:	sub	sp, sp, #0x90
 160:	stp	x29, x30, [sp, #112]
 164:	stp	x20, x19, [sp, #128]
 168:	add	x29, sp, #0x70
 16c:	sturb	wzr, [x29, #-16]
 170:	stp	xzr, xzr, [sp, #48]
 174:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
 178:	ldr	x10, [x10]
 17c:	sub	x8, x29, #0x20
 180:	mov	w9, #0x1                   	// #1
 184:	add	x20, x8, #0x10
 188:	str	w9, [sp, #64]
 18c:	add	x9, x10, #0x10
 190:	add	x1, sp, #0x20
 194:	mov	w2, wzr
 198:	mov	x3, xzr
 19c:	mov	w4, wzr
 1a0:	mov	x5, xzr
 1a4:	stp	x20, xzr, [x29, #-32]
 1a8:	stp	x9, xzr, [sp, #32]
 1ac:	str	x8, [sp, #72]
 1b0:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
 1b4:	ldr	x8, [sp, #56]
 1b8:	ldr	x9, [sp, #40]
 1bc:	cmp	x8, x9
 1c0:	b.eq	1cc <LLVMWriteBitcodeToMemoryBuffer+0x70>  // b.none
 1c4:	add	x0, sp, #0x20
 1c8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 1cc:	ldr	x8, [sp, #72]
 1d0:	mov	x2, sp
 1d4:	ldp	x0, x1, [x8]
 1d8:	mov	w8, #0x101                 	// #257
 1dc:	strh	w8, [sp, #16]
 1e0:	add	x8, sp, #0x18
 1e4:	stp	xzr, xzr, [sp]
 1e8:	bl	0 <_ZN4llvm12MemoryBuffer16getMemBufferCopyENS_9StringRefERKNS_5TwineE>
 1ec:	ldr	x19, [sp, #24]
 1f0:	add	x0, sp, #0x20
 1f4:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 1f8:	ldur	x0, [x29, #-32]
 1fc:	cmp	x0, x20
 200:	b.eq	208 <LLVMWriteBitcodeToMemoryBuffer+0xac>  // b.none
 204:	bl	0 <_ZdlPv>
 208:	mov	x0, x19
 20c:	ldp	x20, x19, [sp, #128]
 210:	ldp	x29, x30, [sp, #112]
 214:	add	sp, sp, #0x90
 218:	ret

BitcodeWriter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	str	x21, [sp, #16]
       8:	stp	x20, x19, [sp, #32]
       c:	mov	x29, sp
      10:	mov	x20, x0
      14:	str	x1, [x0]
      18:	mov	w0, #0x60                  	// #96
      1c:	mov	x19, x1
      20:	bl	0 <_Znwm>
      24:	mov	w8, #0x2                   	// #2
      28:	movi	v0.2d, #0x0
      2c:	stp	x19, xzr, [x0]
      30:	str	xzr, [x0, #88]
      34:	str	w8, [x0, #16]
      38:	stur	q0, [x0, #24]
      3c:	stur	q0, [x0, #40]
      40:	stur	q0, [x0, #56]
      44:	stur	q0, [x0, #72]
      48:	str	x0, [x20, #8]
      4c:	add	x0, x20, #0x10
      50:	mov	w1, #0x3                   	// #3
      54:	mov	w2, #0x1                   	// #1
      58:	mov	w19, #0x1                   	// #1
      5c:	bl	0 <_ZN4llvm18StringTableBuilderC1ENS0_4KindEj>
      60:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
      64:	ldr	d0, [x9]
      68:	mov	x8, x20
      6c:	str	xzr, [x8, #152]!
      70:	sub	x9, x8, #0x30
      74:	stp	xzr, xzr, [x8, #-80]
      78:	stp	x8, xzr, [x8, #-16]
      7c:	str	x19, [x8, #8]
      80:	strh	wzr, [x8, #24]
      84:	stp	xzr, xzr, [x8, #40]
      88:	str	xzr, [x8, #32]
      8c:	stur	x9, [x8, #-64]
      90:	stur	d0, [x8, #-56]
      94:	ldr	x20, [x20, #8]
      98:	mov	w10, #0x42                  	// #66
      9c:	ldp	w8, w9, [x20, #8]
      a0:	lsl	w10, w10, w8
      a4:	add	w8, w8, #0x8
      a8:	orr	w21, w9, w10
      ac:	cmp	w8, #0x20
      b0:	str	w21, [x20, #12]
      b4:	b.cc	124 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x124>  // b.lo, b.ul, b.last
      b8:	ldr	x19, [x20]
      bc:	ldp	w8, w9, [x19, #8]
      c0:	sub	x9, x9, x8
      c4:	cmp	x9, #0x3
      c8:	b.hi	e4 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0xe4>  // b.pmore
      cc:	add	x2, x8, #0x4
      d0:	add	x1, x19, #0x10
      d4:	mov	w3, #0x1                   	// #1
      d8:	mov	x0, x19
      dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
      e0:	ldr	w8, [x19, #8]
      e4:	ldr	x9, [x19]
      e8:	str	w21, [x9, x8]
      ec:	ldp	w8, w9, [x19, #8]
      f0:	add	x8, x8, #0x4
      f4:	cmp	x8, x9
      f8:	b.hi	3dc <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3dc>  // b.pmore
      fc:	str	w8, [x19, #8]
     100:	ldr	w8, [x20, #8]
     104:	mov	w9, #0x42                  	// #66
     108:	neg	w10, w8
     10c:	cmp	w8, #0x0
     110:	add	w8, w8, #0x8
     114:	lsr	w9, w9, w10
     118:	csel	w21, wzr, w9, eq  // eq = none
     11c:	and	w8, w8, #0x1f
     120:	str	w21, [x20, #12]
     124:	mov	w9, #0x43                  	// #67
     128:	lsl	w9, w9, w8
     12c:	cmp	w8, #0x18
     130:	orr	w21, w9, w21
     134:	stp	w8, w21, [x20, #8]
     138:	b.cs	154 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x154>  // b.hs, b.nlast
     13c:	add	w8, w8, #0x8
     140:	cmp	w8, #0x1c
     144:	str	w8, [x20, #8]
     148:	b.cs	1c8 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x1c8>  // b.hs, b.nlast
     14c:	add	w8, w8, #0x4
     150:	b	224 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x224>
     154:	ldr	x19, [x20]
     158:	ldp	w8, w9, [x19, #8]
     15c:	sub	x9, x9, x8
     160:	cmp	x9, #0x3
     164:	b.hi	180 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x180>  // b.pmore
     168:	add	x2, x8, #0x4
     16c:	add	x1, x19, #0x10
     170:	mov	w3, #0x1                   	// #1
     174:	mov	x0, x19
     178:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     17c:	ldr	w8, [x19, #8]
     180:	ldr	x9, [x19]
     184:	str	w21, [x9, x8]
     188:	ldp	w8, w9, [x19, #8]
     18c:	add	x8, x8, #0x4
     190:	cmp	x8, x9
     194:	b.hi	3dc <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3dc>  // b.pmore
     198:	str	w8, [x19, #8]
     19c:	ldr	w8, [x20, #8]
     1a0:	mov	w9, #0x43                  	// #67
     1a4:	neg	w10, w8
     1a8:	cmp	w8, #0x0
     1ac:	add	w8, w8, #0x8
     1b0:	lsr	w9, w9, w10
     1b4:	csel	w21, wzr, w9, eq  // eq = none
     1b8:	and	w8, w8, #0x1f
     1bc:	stp	w8, w21, [x20, #8]
     1c0:	cmp	w8, #0x1c
     1c4:	b.cc	14c <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x14c>  // b.lo, b.ul, b.last
     1c8:	ldr	x19, [x20]
     1cc:	ldp	w8, w9, [x19, #8]
     1d0:	sub	x9, x9, x8
     1d4:	cmp	x9, #0x3
     1d8:	b.hi	1f4 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x1f4>  // b.pmore
     1dc:	add	x2, x8, #0x4
     1e0:	add	x1, x19, #0x10
     1e4:	mov	w3, #0x1                   	// #1
     1e8:	mov	x0, x19
     1ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     1f0:	ldr	w8, [x19, #8]
     1f4:	ldr	x9, [x19]
     1f8:	str	w21, [x9, x8]
     1fc:	ldp	w8, w9, [x19, #8]
     200:	add	x8, x8, #0x4
     204:	cmp	x8, x9
     208:	b.hi	3dc <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3dc>  // b.pmore
     20c:	str	w8, [x19, #8]
     210:	ldr	w8, [x20, #8]
     214:	mov	w21, wzr
     218:	str	wzr, [x20, #12]
     21c:	add	w8, w8, #0x4
     220:	and	w8, w8, #0x1f
     224:	mov	w9, #0xc                   	// #12
     228:	lsl	w9, w9, w8
     22c:	cmp	w8, #0x1c
     230:	orr	w21, w9, w21
     234:	stp	w8, w21, [x20, #8]
     238:	b.cs	244 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x244>  // b.hs, b.nlast
     23c:	add	w8, w8, #0x4
     240:	b	2b0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x2b0>
     244:	ldr	x19, [x20]
     248:	ldp	w8, w9, [x19, #8]
     24c:	sub	x9, x9, x8
     250:	cmp	x9, #0x3
     254:	b.hi	270 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x270>  // b.pmore
     258:	add	x2, x8, #0x4
     25c:	add	x1, x19, #0x10
     260:	mov	w3, #0x1                   	// #1
     264:	mov	x0, x19
     268:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     26c:	ldr	w8, [x19, #8]
     270:	ldr	x9, [x19]
     274:	str	w21, [x9, x8]
     278:	ldp	w8, w9, [x19, #8]
     27c:	add	x8, x8, #0x4
     280:	cmp	x8, x9
     284:	b.hi	3dc <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3dc>  // b.pmore
     288:	str	w8, [x19, #8]
     28c:	ldr	w8, [x20, #8]
     290:	mov	w9, #0xc                   	// #12
     294:	neg	w10, w8
     298:	cmp	w8, #0x0
     29c:	add	w8, w8, #0x4
     2a0:	lsr	w9, w9, w10
     2a4:	csel	w21, wzr, w9, eq  // eq = none
     2a8:	and	w8, w8, #0x1f
     2ac:	str	w21, [x20, #12]
     2b0:	mov	w9, #0xe                   	// #14
     2b4:	lsl	w9, w9, w8
     2b8:	cmp	w8, #0x1c
     2bc:	orr	w21, w9, w21
     2c0:	stp	w8, w21, [x20, #8]
     2c4:	b.cs	2d0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x2d0>  // b.hs, b.nlast
     2c8:	add	w8, w8, #0x4
     2cc:	b	33c <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x33c>
     2d0:	ldr	x19, [x20]
     2d4:	ldp	w8, w9, [x19, #8]
     2d8:	sub	x9, x9, x8
     2dc:	cmp	x9, #0x3
     2e0:	b.hi	2fc <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x2fc>  // b.pmore
     2e4:	add	x2, x8, #0x4
     2e8:	add	x1, x19, #0x10
     2ec:	mov	w3, #0x1                   	// #1
     2f0:	mov	x0, x19
     2f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     2f8:	ldr	w8, [x19, #8]
     2fc:	ldr	x9, [x19]
     300:	str	w21, [x9, x8]
     304:	ldp	w8, w9, [x19, #8]
     308:	add	x8, x8, #0x4
     30c:	cmp	x8, x9
     310:	b.hi	3dc <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3dc>  // b.pmore
     314:	str	w8, [x19, #8]
     318:	ldr	w8, [x20, #8]
     31c:	mov	w9, #0xe                   	// #14
     320:	neg	w10, w8
     324:	cmp	w8, #0x0
     328:	add	w8, w8, #0x4
     32c:	lsr	w9, w9, w10
     330:	csel	w21, wzr, w9, eq  // eq = none
     334:	and	w8, w8, #0x1f
     338:	str	w21, [x20, #12]
     33c:	mov	w9, #0xd                   	// #13
     340:	lsl	w9, w9, w8
     344:	cmp	w8, #0x1c
     348:	orr	w21, w9, w21
     34c:	stp	w8, w21, [x20, #8]
     350:	b.cs	35c <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x35c>  // b.hs, b.nlast
     354:	add	w8, w8, #0x4
     358:	b	3c8 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3c8>
     35c:	ldr	x19, [x20]
     360:	ldp	w8, w9, [x19, #8]
     364:	sub	x9, x9, x8
     368:	cmp	x9, #0x3
     36c:	b.hi	388 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x388>  // b.pmore
     370:	add	x2, x8, #0x4
     374:	add	x1, x19, #0x10
     378:	mov	w3, #0x1                   	// #1
     37c:	mov	x0, x19
     380:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     384:	ldr	w8, [x19, #8]
     388:	ldr	x9, [x19]
     38c:	str	w21, [x9, x8]
     390:	ldp	w8, w9, [x19, #8]
     394:	add	x8, x8, #0x4
     398:	cmp	x8, x9
     39c:	b.hi	3dc <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3dc>  // b.pmore
     3a0:	str	w8, [x19, #8]
     3a4:	ldr	w8, [x20, #8]
     3a8:	mov	w9, #0xd                   	// #13
     3ac:	neg	w10, w8
     3b0:	cmp	w8, #0x0
     3b4:	add	w8, w8, #0x4
     3b8:	lsr	w9, w9, w10
     3bc:	csel	w9, wzr, w9, eq  // eq = none
     3c0:	and	w8, w8, #0x1f
     3c4:	str	w9, [x20, #12]
     3c8:	str	w8, [x20, #8]
     3cc:	ldp	x20, x19, [sp, #32]
     3d0:	ldr	x21, [sp, #16]
     3d4:	ldp	x29, x30, [sp], #48
     3d8:	ret
     3dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     3e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     3e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     3e8:	add	x0, x0, #0x0
     3ec:	add	x1, x1, #0x0
     3f0:	add	x3, x3, #0x0
     3f4:	mov	w2, #0x43                  	// #67
     3f8:	bl	0 <__assert_fail>

00000000000003fc <_ZN4llvm13BitcodeWriterD1Ev>:
     3fc:	stp	x29, x30, [sp, #-48]!
     400:	stp	x22, x21, [sp, #16]
     404:	stp	x20, x19, [sp, #32]
     408:	mov	x29, sp
     40c:	ldrb	w8, [x0, #176]
     410:	cbz	w8, 4c4 <_ZN4llvm13BitcodeWriterD1Ev+0xc8>
     414:	mov	x19, x0
     418:	ldr	x0, [x0, #184]
     41c:	cbz	x0, 424 <_ZN4llvm13BitcodeWriterD1Ev+0x28>
     420:	bl	0 <_ZdlPv>
     424:	mov	x21, x19
     428:	ldr	x20, [x21, #88]!
     42c:	ldr	w8, [x21, #8]
     430:	cbz	w8, 448 <_ZN4llvm13BitcodeWriterD1Ev+0x4c>
     434:	lsl	x22, x8, #3
     438:	ldr	x0, [x20], #8
     43c:	bl	0 <free>
     440:	subs	x22, x22, #0x8
     444:	b.ne	438 <_ZN4llvm13BitcodeWriterD1Ev+0x3c>  // b.any
     448:	ldr	w8, [x19, #144]
     44c:	ldr	x20, [x19, #136]
     450:	cbz	w8, 46c <_ZN4llvm13BitcodeWriterD1Ev+0x70>
     454:	lsl	x22, x8, #4
     458:	ldr	x0, [x20], #16
     45c:	bl	0 <free>
     460:	subs	x22, x22, #0x10
     464:	b.ne	458 <_ZN4llvm13BitcodeWriterD1Ev+0x5c>  // b.any
     468:	ldr	x20, [x19, #136]
     46c:	add	x8, x19, #0x98
     470:	cmp	x20, x8
     474:	b.eq	480 <_ZN4llvm13BitcodeWriterD1Ev+0x84>  // b.none
     478:	mov	x0, x20
     47c:	bl	0 <free>
     480:	ldr	x0, [x21], #16
     484:	cmp	x0, x21
     488:	b.eq	490 <_ZN4llvm13BitcodeWriterD1Ev+0x94>  // b.none
     48c:	bl	0 <free>
     490:	add	x0, x19, #0x10
     494:	bl	0 <_ZN4llvm18StringTableBuilderD1Ev>
     498:	ldr	x20, [x19, #8]
     49c:	cbz	x20, 4b0 <_ZN4llvm13BitcodeWriterD1Ev+0xb4>
     4a0:	mov	x0, x20
     4a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4a8:	mov	x0, x20
     4ac:	bl	0 <_ZdlPv>
     4b0:	str	xzr, [x19, #8]
     4b4:	ldp	x20, x19, [sp, #32]
     4b8:	ldp	x22, x21, [sp, #16]
     4bc:	ldp	x29, x30, [sp], #48
     4c0:	ret
     4c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4d0:	add	x0, x0, #0x0
     4d4:	add	x1, x1, #0x0
     4d8:	add	x3, x3, #0x0
     4dc:	mov	w2, #0x1112                	// #4370
     4e0:	bl	0 <__assert_fail>

00000000000004e4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>:
     4e4:	sub	sp, sp, #0x70
     4e8:	stp	x29, x30, [sp, #32]
     4ec:	stp	x26, x25, [sp, #48]
     4f0:	stp	x24, x23, [sp, #64]
     4f4:	stp	x22, x21, [sp, #80]
     4f8:	stp	x20, x19, [sp, #96]
     4fc:	add	x29, sp, #0x20
     500:	mov	x19, x0
     504:	ldr	x0, [x0, #8]
     508:	mov	w23, w2
     50c:	mov	w2, #0x3                   	// #3
     510:	mov	x20, x4
     514:	mov	x21, x3
     518:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     51c:	mov	w0, #0x220                 	// #544
     520:	bl	0 <_Znwm>
     524:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     528:	ldr	x8, [x8]
     52c:	movi	v0.2s, #0x1
     530:	str	d0, [x0, #8]
     534:	movi	v0.2d, #0x0
     538:	mov	x9, x0
     53c:	ldur	w12, [sp, #11]
     540:	add	x8, x8, #0x10
     544:	mov	x22, x0
     548:	mov	w10, #0x20                  	// #32
     54c:	mov	w25, w23
     550:	str	x8, [x0]
     554:	mov	w8, #0x1                   	// #1
     558:	stp	q0, q0, [x0, #48]
     55c:	stp	q0, q0, [x0, #80]
     560:	stp	q0, q0, [x0, #112]
     564:	stp	q0, q0, [x0, #144]
     568:	stp	q0, q0, [x0, #176]
     56c:	stp	q0, q0, [x0, #208]
     570:	stp	q0, q0, [x0, #240]
     574:	stp	q0, q0, [x0, #272]
     578:	stp	q0, q0, [x0, #304]
     57c:	stp	q0, q0, [x0, #336]
     580:	stp	q0, q0, [x0, #368]
     584:	stp	q0, q0, [x0, #400]
     588:	stp	q0, q0, [x0, #432]
     58c:	stp	q0, q0, [x0, #464]
     590:	stp	q0, q0, [x0, #496]
     594:	str	q0, [x9, #32]!
     598:	mov	w11, #0xff                  	// #255
     59c:	str	q0, [x0, #528]
     5a0:	str	x9, [x22, #16]!
     5a4:	stp	w8, w10, [x0, #24]
     5a8:	str	x25, [x9]
     5ac:	mov	w10, #0xa                   	// #10
     5b0:	strb	w11, [x0, #40]
     5b4:	ldr	w11, [x0, #28]
     5b8:	ldur	w9, [sp, #11]
     5bc:	strb	w10, [x0, #56]
     5c0:	str	w12, [x0, #44]
     5c4:	ldr	w10, [sp, #8]
     5c8:	ldr	w12, [sp, #8]
     5cc:	mov	w8, w8
     5d0:	cmp	w8, w11
     5d4:	stur	w10, [x0, #41]
     5d8:	str	w9, [x0, #60]
     5dc:	str	xzr, [x0, #48]
     5e0:	stur	w12, [x0, #57]
     5e4:	b.cs	738 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x254>  // b.hs, b.nlast
     5e8:	add	w8, w8, #0x1
     5ec:	str	w8, [x0, #24]
     5f0:	ldr	x24, [x19, #8]
     5f4:	stp	x22, x0, [sp, #16]
     5f8:	mov	x1, x22
     5fc:	mov	x0, x24
     600:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     604:	ldp	x1, x8, [x24, #32]
     608:	add	x23, x24, #0x18
     60c:	cmp	x1, x8
     610:	b.eq	630 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x14c>  // b.none
     614:	stp	x22, xzr, [x1]
     618:	ldr	x9, [sp, #24]
     61c:	add	x8, x1, #0x10
     620:	stp	xzr, xzr, [sp, #16]
     624:	str	x9, [x1, #8]
     628:	str	x8, [x24, #32]
     62c:	b	640 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x15c>
     630:	add	x2, sp, #0x10
     634:	mov	x0, x23
     638:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     63c:	ldr	x8, [x24, #32]
     640:	ldr	x9, [x23]
     644:	ldr	x23, [sp, #24]
     648:	sub	x8, x8, x9
     64c:	lsr	x8, x8, #4
     650:	add	w22, w8, #0x3
     654:	cbz	x23, 6d8 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>
     658:	adrp	x24, 0 <__pthread_key_create>
     65c:	ldr	x24, [x24]
     660:	add	x8, x23, #0x8
     664:	cbz	x24, 684 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1a0>
     668:	ldaxr	w9, [x8]
     66c:	sub	w10, w9, #0x1
     670:	stlxr	w11, w10, [x8]
     674:	cbnz	w11, 668 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x184>
     678:	cmp	w9, #0x1
     67c:	b.eq	698 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1b4>  // b.none
     680:	b	6d8 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>
     684:	ldr	w9, [x8]
     688:	sub	w10, w9, #0x1
     68c:	str	w10, [x8]
     690:	cmp	w9, #0x1
     694:	b.ne	6d8 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>  // b.any
     698:	mov	x26, x23
     69c:	ldr	x8, [x26], #12
     6a0:	mov	x0, x23
     6a4:	ldr	x8, [x8, #16]
     6a8:	blr	x8
     6ac:	cbz	x24, 720 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x23c>
     6b0:	ldaxr	w8, [x26]
     6b4:	sub	w9, w8, #0x1
     6b8:	stlxr	w10, w9, [x26]
     6bc:	cbnz	w10, 6b0 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1cc>
     6c0:	cmp	w8, #0x1
     6c4:	b.ne	6d8 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>  // b.any
     6c8:	ldr	x8, [x23]
     6cc:	mov	x0, x23
     6d0:	ldr	x8, [x8, #24]
     6d4:	blr	x8
     6d8:	ldr	x0, [x19, #8]
     6dc:	add	x2, sp, #0x8
     6e0:	mov	w3, #0x1                   	// #1
     6e4:	mov	w1, w22
     6e8:	mov	x4, x21
     6ec:	mov	x5, x20
     6f0:	mov	x6, xzr
     6f4:	str	x25, [sp, #8]
     6f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     6fc:	ldr	x0, [x19, #8]
     700:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     704:	ldp	x20, x19, [sp, #96]
     708:	ldp	x22, x21, [sp, #80]
     70c:	ldp	x24, x23, [sp, #64]
     710:	ldp	x26, x25, [sp, #48]
     714:	ldp	x29, x30, [sp, #32]
     718:	add	sp, sp, #0x70
     71c:	ret
     720:	ldr	w8, [x26]
     724:	sub	w9, w8, #0x1
     728:	str	w9, [x26]
     72c:	cmp	w8, #0x1
     730:	b.eq	6c8 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1e4>  // b.none
     734:	b	6d8 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>
     738:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     73c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     740:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     744:	add	x0, x0, #0x0
     748:	add	x1, x1, #0x0
     74c:	add	x3, x3, #0x0
     750:	mov	w2, #0x43                  	// #67
     754:	bl	0 <__assert_fail>

0000000000000758 <_ZN4llvm13BitcodeWriter11writeSymtabEv>:
     758:	sub	sp, sp, #0xc0
     75c:	stp	x29, x30, [sp, #112]
     760:	str	x25, [sp, #128]
     764:	stp	x24, x23, [sp, #144]
     768:	stp	x22, x21, [sp, #160]
     76c:	stp	x20, x19, [sp, #176]
     770:	add	x29, sp, #0x70
     774:	ldrb	w8, [x0, #176]
     778:	cbnz	w8, 908 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1b0>
     77c:	ldrb	w8, [x0, #177]
     780:	mov	x19, x0
     784:	cbnz	w8, 908 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1b0>
     788:	ldp	x20, x21, [x19, #184]
     78c:	cmp	x20, x21
     790:	b.eq	840 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xe8>  // b.none
     794:	sub	x8, x29, #0x20
     798:	add	x9, sp, #0x18
     79c:	add	x22, x8, #0x10
     7a0:	add	x23, x9, #0x10
     7a4:	mov	w24, #0x104                 	// #260
     7a8:	b	7bc <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x64>
     7ac:	cbnz	w25, 8ec <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x194>
     7b0:	add	x20, x20, #0x8
     7b4:	cmp	x21, x20
     7b8:	b.eq	83c <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xe4>  // b.none
     7bc:	ldr	x8, [x20]
     7c0:	ldr	x9, [x8, #96]
     7c4:	cbz	x9, 7b0 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x58>
     7c8:	add	x8, x8, #0xf0
     7cc:	add	x0, sp, #0x18
     7d0:	mov	x1, sp
     7d4:	stp	x22, xzr, [x29, #-32]
     7d8:	sturb	wzr, [x29, #-16]
     7dc:	strh	w24, [sp, #16]
     7e0:	stp	x8, xzr, [sp]
     7e4:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     7e8:	add	x0, sp, #0x18
     7ec:	sub	x1, x29, #0x20
     7f0:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
     7f4:	cbz	x0, 828 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xd0>
     7f8:	ldr	x8, [x0, #104]
     7fc:	cmp	x8, #0x0
     800:	cset	w25, eq  // eq = none
     804:	ldr	x0, [sp, #24]
     808:	cmp	x0, x23
     80c:	b.eq	814 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xbc>  // b.none
     810:	bl	0 <_ZdlPv>
     814:	ldur	x0, [x29, #-32]
     818:	cmp	x0, x22
     81c:	b.eq	7ac <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x54>  // b.none
     820:	bl	0 <_ZdlPv>
     824:	b	7ac <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x54>
     828:	mov	w25, #0x1                   	// #1
     82c:	ldr	x0, [sp, #24]
     830:	cmp	x0, x23
     834:	b.ne	810 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xb8>  // b.any
     838:	b	814 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xbc>
     83c:	ldp	x20, x21, [x19, #184]
     840:	mov	w8, #0x1                   	// #1
     844:	add	x9, sp, #0x18
     848:	sub	x10, x21, x20
     84c:	strb	w8, [x19, #177]
     850:	add	x8, x9, #0x10
     854:	add	x3, x19, #0x10
     858:	stp	x8, xzr, [sp, #24]
     85c:	asr	x1, x10, #3
     860:	add	x4, x19, #0x48
     864:	sub	x8, x29, #0x20
     868:	add	x2, sp, #0x18
     86c:	mov	x0, x20
     870:	bl	0 <_ZN4llvm8irsymtab5buildENS_8ArrayRefIPNS_6ModuleEEERNS_11SmallVectorIcLj0EEERNS_18StringTableBuilderERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     874:	ldur	x8, [x29, #-32]
     878:	tst	x8, #0xfffffffffffffffe
     87c:	and	x10, x8, #0xfffffffffffffffe
     880:	cset	w9, ne  // ne = any
     884:	orr	x9, x10, x9
     888:	stur	x9, [x29, #-32]
     88c:	cbz	x10, 8b8 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x160>
     890:	orr	x8, x8, #0x1
     894:	add	x0, x29, #0x18
     898:	str	x8, [x29, #24]
     89c:	stur	xzr, [x29, #-32]
     8a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     8a4:	ldr	x8, [x29, #24]
     8a8:	cbnz	x8, 930 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1d8>
     8ac:	ldur	x8, [x29, #-32]
     8b0:	cbz	x8, 8d4 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x17c>
     8b4:	b	928 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1d0>
     8b8:	cbnz	x9, 928 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1d0>
     8bc:	ldr	x3, [sp, #24]
     8c0:	ldr	w4, [sp, #32]
     8c4:	mov	w1, #0x19                  	// #25
     8c8:	mov	w2, #0x1                   	// #1
     8cc:	mov	x0, x19
     8d0:	bl	4e4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>
     8d4:	ldr	x0, [sp, #24]
     8d8:	add	x8, sp, #0x18
     8dc:	add	x8, x8, #0x10
     8e0:	cmp	x0, x8
     8e4:	b.eq	8ec <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x194>  // b.none
     8e8:	bl	0 <free>
     8ec:	ldp	x20, x19, [sp, #176]
     8f0:	ldp	x22, x21, [sp, #160]
     8f4:	ldp	x24, x23, [sp, #144]
     8f8:	ldr	x25, [sp, #128]
     8fc:	ldp	x29, x30, [sp, #112]
     900:	add	sp, sp, #0xc0
     904:	ret
     908:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     90c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     910:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     914:	add	x0, x0, #0x0
     918:	add	x1, x1, #0x0
     91c:	add	x3, x3, #0x0
     920:	mov	w2, #0x1122                	// #4386
     924:	bl	0 <__assert_fail>
     928:	sub	x0, x29, #0x20
     92c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     930:	add	x0, x29, #0x18
     934:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000938 <_ZN4llvm13BitcodeWriter11writeStrtabEv>:
     938:	stp	x29, x30, [sp, #-48]!
     93c:	stp	x22, x21, [sp, #16]
     940:	stp	x20, x19, [sp, #32]
     944:	mov	x29, sp
     948:	ldrb	w8, [x0, #176]
     94c:	cbnz	w8, 9e4 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0xac>
     950:	add	x20, x0, #0x10
     954:	mov	x19, x0
     958:	mov	x0, x20
     95c:	bl	0 <_ZN4llvm18StringTableBuilder15finalizeInOrderEv>
     960:	ldr	x22, [x19, #48]
     964:	cbz	x22, 98c <_ZN4llvm13BitcodeWriter11writeStrtabEv+0x54>
     968:	tbnz	x22, #63, a04 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0xcc>
     96c:	mov	x0, x22
     970:	bl	0 <_Znwm>
     974:	mov	w1, wzr
     978:	mov	x2, x22
     97c:	mov	x21, x0
     980:	bl	0 <memset>
     984:	add	x22, x21, x22
     988:	b	990 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0x58>
     98c:	mov	x21, xzr
     990:	mov	x0, x20
     994:	mov	x1, x21
     998:	bl	0 <_ZNK4llvm18StringTableBuilder5writeEPh>
     99c:	sub	x4, x22, x21
     9a0:	mov	w1, #0x17                  	// #23
     9a4:	mov	w2, #0x1                   	// #1
     9a8:	mov	x0, x19
     9ac:	mov	x3, x21
     9b0:	mov	w20, #0x1                   	// #1
     9b4:	bl	4e4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>
     9b8:	strb	w20, [x19, #176]
     9bc:	cbz	x21, 9d4 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0x9c>
     9c0:	mov	x0, x21
     9c4:	ldp	x20, x19, [sp, #32]
     9c8:	ldp	x22, x21, [sp, #16]
     9cc:	ldp	x29, x30, [sp], #48
     9d0:	b	0 <_ZdlPv>
     9d4:	ldp	x20, x19, [sp, #32]
     9d8:	ldp	x22, x21, [sp, #16]
     9dc:	ldp	x29, x30, [sp], #48
     9e0:	ret
     9e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9f0:	add	x0, x0, #0x0
     9f4:	add	x1, x1, #0x0
     9f8:	add	x3, x3, #0x0
     9fc:	mov	w2, #0x1142                	// #4418
     a00:	bl	0 <__assert_fail>
     a04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     a08:	add	x0, x0, #0x0
     a0c:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000a10 <_ZN4llvm13BitcodeWriter10copyStrtabENS_9StringRefE>:
     a10:	stp	x29, x30, [sp, #-32]!
     a14:	stp	x20, x19, [sp, #16]
     a18:	mov	x29, sp
     a1c:	mov	x4, x2
     a20:	mov	x3, x1
     a24:	mov	w1, #0x17                  	// #23
     a28:	mov	w2, #0x1                   	// #1
     a2c:	mov	x19, x0
     a30:	mov	w20, #0x1                   	// #1
     a34:	bl	4e4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>
     a38:	strb	w20, [x19, #176]
     a3c:	ldp	x20, x19, [sp, #16]
     a40:	ldp	x29, x30, [sp], #32
     a44:	ret

0000000000000a48 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>:
     a48:	stp	x29, x30, [sp, #-96]!
     a4c:	stp	x28, x27, [sp, #16]
     a50:	stp	x26, x25, [sp, #32]
     a54:	stp	x24, x23, [sp, #48]
     a58:	stp	x22, x21, [sp, #64]
     a5c:	stp	x20, x19, [sp, #80]
     a60:	mov	x29, sp
     a64:	sub	sp, sp, #0x340
     a68:	ldrb	w8, [x0, #176]
     a6c:	cbnz	w8, bf8 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1b0>
     a70:	ldr	x8, [x1, #168]
     a74:	mov	x23, x1
     a78:	cbnz	x8, c18 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1d0>
     a7c:	mov	x28, x0
     a80:	ldr	x10, [x28, #200]!
     a84:	mov	x27, x5
     a88:	mov	w22, w4
     a8c:	mov	x5, x3
     a90:	mov	x8, x28
     a94:	ldr	x9, [x8, #-8]!
     a98:	mov	w21, w2
     a9c:	mov	x24, x0
     aa0:	cmp	x9, x10
     aa4:	b.eq	ab8 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x70>  // b.none
     aa8:	str	x23, [x9]
     aac:	ldr	x9, [x8]
     ab0:	add	x9, x9, #0x8
     ab4:	b	b54 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x10c>
     ab8:	ldr	x25, [x24, #184]
     abc:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
     ac0:	str	x5, [sp, #8]
     ac4:	sub	x26, x9, x25
     ac8:	cmp	x26, x8
     acc:	b.eq	c38 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1f0>  // b.none
     ad0:	asr	x20, x26, #3
     ad4:	cmp	x26, #0x0
     ad8:	csinc	x8, x20, xzr, ne  // ne = any
     adc:	adds	x8, x8, x20
     ae0:	lsr	x10, x8, #60
     ae4:	cset	w9, cs  // cs = hs, nlast
     ae8:	cmp	x10, #0x0
     aec:	cset	w10, ne  // ne = any
     af0:	orr	w9, w9, w10
     af4:	cmp	w9, #0x0
     af8:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
     afc:	csel	x19, x9, x8, ne  // ne = any
     b00:	str	x27, [sp, #16]
     b04:	cbz	x19, be0 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x198>
     b08:	lsl	x0, x19, #3
     b0c:	bl	0 <_Znwm>
     b10:	mov	x27, x0
     b14:	add	x20, x27, x20, lsl #3
     b18:	cmp	x26, #0x1
     b1c:	str	x23, [x20]
     b20:	b.lt	b34 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xec>  // b.tstop
     b24:	mov	x0, x27
     b28:	mov	x1, x25
     b2c:	mov	x2, x26
     b30:	bl	0 <memmove>
     b34:	add	x20, x20, #0x8
     b38:	cbz	x25, b44 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xfc>
     b3c:	mov	x0, x25
     b40:	bl	0 <_ZdlPv>
     b44:	stp	x27, x20, [x24, #184]
     b48:	add	x9, x27, x19, lsl #3
     b4c:	ldp	x5, x27, [sp, #8]
     b50:	mov	x8, x28
     b54:	str	x9, [x8]
     b58:	ldp	x19, x25, [x24]
     b5c:	add	x2, x24, #0x10
     b60:	and	w4, w21, #0x1
     b64:	add	x0, sp, #0x18
     b68:	mov	x1, x23
     b6c:	mov	x3, x25
     b70:	and	w20, w22, #0x1
     b74:	add	x21, sp, #0x18
     b78:	bl	7ff0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE>
     b7c:	add	x0, x21, #0x2a8
     b80:	str	x19, [sp, #680]
     b84:	strb	w20, [sp, #688]
     b88:	str	x27, [sp, #696]
     b8c:	bl	0 <_ZN4llvm4SHA14initEv>
     b90:	ldr	x8, [x25]
     b94:	ldr	w9, [x25, #8]
     b98:	add	x0, sp, #0x18
     b9c:	ldr	w8, [x8, #8]
     ba0:	add	x8, x9, x8, lsl #3
     ba4:	str	x8, [sp, #816]
     ba8:	bl	c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv>
     bac:	ldr	x1, [sp, #632]
     bb0:	add	x0, x21, #0x250
     bb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     bb8:	add	x0, x21, #0x18
     bbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     bc0:	add	sp, sp, #0x340
     bc4:	ldp	x20, x19, [sp, #80]
     bc8:	ldp	x22, x21, [sp, #64]
     bcc:	ldp	x24, x23, [sp, #48]
     bd0:	ldp	x26, x25, [sp, #32]
     bd4:	ldp	x28, x27, [sp, #16]
     bd8:	ldp	x29, x30, [sp], #96
     bdc:	ret
     be0:	mov	x27, xzr
     be4:	add	x20, x27, x20, lsl #3
     be8:	cmp	x26, #0x1
     bec:	str	x23, [x20]
     bf0:	b.ge	b24 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xdc>  // b.tcont
     bf4:	b	b34 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xec>
     bf8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     bfc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c00:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c04:	add	x0, x0, #0x0
     c08:	add	x1, x1, #0x0
     c0c:	add	x3, x3, #0x0
     c10:	mov	w2, #0x1158                	// #4440
     c14:	bl	0 <__assert_fail>
     c18:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c1c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c20:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c24:	add	x0, x0, #0x0
     c28:	add	x1, x1, #0x0
     c2c:	add	x3, x3, #0x0
     c30:	mov	w2, #0x115e                	// #4446
     c34:	bl	0 <__assert_fail>
     c38:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c3c:	add	x0, x0, #0x0
     c40:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv>:
     c44:	stp	d11, d10, [sp, #-128]!
     c48:	stp	d9, d8, [sp, #16]
     c4c:	stp	x29, x30, [sp, #32]
     c50:	stp	x28, x27, [sp, #48]
     c54:	stp	x26, x25, [sp, #64]
     c58:	stp	x24, x23, [sp, #80]
     c5c:	stp	x22, x21, [sp, #96]
     c60:	stp	x20, x19, [sp, #112]
     c64:	mov	x29, sp
     c68:	sub	sp, sp, #0x410
     c6c:	ldr	x20, [x0]
     c70:	mov	x19, x0
     c74:	mov	w1, #0xd                   	// #13
     c78:	mov	w2, #0x5                   	// #5
     c7c:	mov	x0, x20
     c80:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c84:	mov	w0, #0x220                 	// #544
     c88:	bl	0 <_Znwm>
     c8c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c90:	ldr	x9, [x9]
     c94:	movi	v0.2s, #0x1
     c98:	str	d0, [x0, #8]
     c9c:	movi	v0.2d, #0x0
     ca0:	mov	x8, x0
     ca4:	add	x9, x9, #0x10
     ca8:	mov	x22, x0
     cac:	str	x9, [x0]
     cb0:	mov	w9, #0x20                  	// #32
     cb4:	stp	q0, q0, [x0, #48]
     cb8:	stp	q0, q0, [x0, #80]
     cbc:	stp	q0, q0, [x0, #112]
     cc0:	stp	q0, q0, [x0, #144]
     cc4:	stp	q0, q0, [x0, #176]
     cc8:	stp	q0, q0, [x0, #208]
     ccc:	stp	q0, q0, [x0, #240]
     cd0:	stp	q0, q0, [x0, #272]
     cd4:	stp	q0, q0, [x0, #304]
     cd8:	stp	q0, q0, [x0, #336]
     cdc:	stp	q0, q0, [x0, #368]
     ce0:	stp	q0, q0, [x0, #400]
     ce4:	stp	q0, q0, [x0, #432]
     ce8:	stp	q0, q0, [x0, #464]
     cec:	stp	q0, q0, [x0, #496]
     cf0:	str	q0, [x8, #32]!
     cf4:	str	q0, [x0, #528]
     cf8:	str	x8, [x22, #16]!
     cfc:	str	w9, [x0, #28]
     d00:	mov	w9, #0x1                   	// #1
     d04:	str	x9, [x8]
     d08:	mov	w8, #0xff                  	// #255
     d0c:	mov	w9, #0x6                   	// #6
     d10:	strb	w8, [x0, #40]
     d14:	mov	w8, #0x8                   	// #8
     d18:	strb	w9, [x0, #56]
     d1c:	mov	w9, #0x3                   	// #3
     d20:	str	xzr, [x0, #48]
     d24:	str	xzr, [x0, #64]
     d28:	strb	w8, [x0, #72]
     d2c:	str	w9, [x0, #24]
     d30:	stp	x22, x0, [sp, #144]
     d34:	mov	x0, x20
     d38:	mov	x1, x22
     d3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     d40:	ldp	x1, x8, [x20, #32]
     d44:	add	x21, x20, #0x18
     d48:	cmp	x1, x8
     d4c:	b.eq	d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x128>  // b.none
     d50:	stp	x22, xzr, [x1]
     d54:	ldr	x9, [sp, #152]
     d58:	add	x8, x1, #0x10
     d5c:	stp	xzr, xzr, [sp, #144]
     d60:	str	x9, [x1, #8]
     d64:	str	x8, [x20, #32]
     d68:	b	d7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x138>
     d6c:	add	x2, sp, #0x90
     d70:	mov	x0, x21
     d74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     d78:	ldr	x8, [x20, #32]
     d7c:	ldr	x9, [x21]
     d80:	ldr	x23, [sp, #152]
     d84:	sub	x8, x8, x9
     d88:	lsr	x8, x8, #4
     d8c:	add	w22, w8, #0x3
     d90:	cbz	x23, e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>
     d94:	adrp	x9, 0 <__pthread_key_create>
     d98:	ldr	x9, [x9]
     d9c:	add	x8, x23, #0x8
     da0:	cbz	x9, dc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x17c>
     da4:	ldaxr	w9, [x8]
     da8:	sub	w10, w9, #0x1
     dac:	stlxr	w11, w10, [x8]
     db0:	cbnz	w11, da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x160>
     db4:	cmp	w9, #0x1
     db8:	b.eq	dd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x190>  // b.none
     dbc:	b	e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>
     dc0:	ldr	w9, [x8]
     dc4:	sub	w10, w9, #0x1
     dc8:	str	w10, [x8]
     dcc:	cmp	w9, #0x1
     dd0:	b.ne	e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>  // b.any
     dd4:	mov	x24, x23
     dd8:	ldr	x8, [x24], #12
     ddc:	mov	x0, x23
     de0:	ldr	x8, [x8, #16]
     de4:	blr	x8
     de8:	adrp	x8, 0 <__pthread_key_create>
     dec:	ldr	x8, [x8]
     df0:	cbz	x8, 36e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2a9c>
     df4:	ldaxr	w8, [x24]
     df8:	sub	w9, w8, #0x1
     dfc:	stlxr	w10, w9, [x24]
     e00:	cbnz	w10, df4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b0>
     e04:	cmp	w8, #0x1
     e08:	b.ne	e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>  // b.any
     e0c:	ldr	x8, [x23]
     e10:	mov	x0, x23
     e14:	ldr	x8, [x8, #24]
     e18:	blr	x8
     e1c:	adrp	x2, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e20:	add	x2, x2, #0x0
     e24:	mov	w1, #0x1                   	// #1
     e28:	mov	w3, #0xa                   	// #10
     e2c:	mov	x0, x20
     e30:	mov	w4, w22
     e34:	bl	11698 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
     e38:	mov	w0, #0x220                 	// #544
     e3c:	bl	0 <_Znwm>
     e40:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e44:	ldr	x8, [x8]
     e48:	movi	v0.2s, #0x1
     e4c:	str	d0, [x0, #8]
     e50:	movi	v0.2d, #0x0
     e54:	add	x8, x8, #0x10
     e58:	mov	x9, x0
     e5c:	mov	x22, x0
     e60:	str	x8, [x0]
     e64:	mov	w8, #0x2                   	// #2
     e68:	stp	q0, q0, [x0, #48]
     e6c:	stp	q0, q0, [x0, #80]
     e70:	stp	q0, q0, [x0, #112]
     e74:	stp	q0, q0, [x0, #144]
     e78:	stp	q0, q0, [x0, #176]
     e7c:	stp	q0, q0, [x0, #208]
     e80:	stp	q0, q0, [x0, #240]
     e84:	stp	q0, q0, [x0, #272]
     e88:	stp	q0, q0, [x0, #304]
     e8c:	stp	q0, q0, [x0, #336]
     e90:	stp	q0, q0, [x0, #368]
     e94:	stp	q0, q0, [x0, #400]
     e98:	stp	q0, q0, [x0, #432]
     e9c:	stp	q0, q0, [x0, #464]
     ea0:	stp	q0, q0, [x0, #496]
     ea4:	str	q0, [x9, #32]!
     ea8:	str	q0, [x0, #528]
     eac:	str	x9, [x22, #16]!
     eb0:	str	x8, [x9]
     eb4:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     eb8:	ldr	d8, [x9]
     ebc:	mov	w8, #0xff                  	// #255
     ec0:	mov	w9, #0x6                   	// #6
     ec4:	strb	w8, [x0, #40]
     ec8:	mov	w8, #0x4                   	// #4
     ecc:	str	x9, [x0, #48]
     ed0:	strb	w8, [x0, #56]
     ed4:	str	d8, [x0, #24]
     ed8:	stp	x22, x0, [sp, #416]
     edc:	mov	x0, x20
     ee0:	mov	x1, x22
     ee4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     ee8:	ldp	x1, x8, [x20, #32]
     eec:	cmp	x1, x8
     ef0:	b.eq	f10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2cc>  // b.none
     ef4:	stp	x22, xzr, [x1]
     ef8:	ldr	x9, [sp, #424]
     efc:	add	x8, x1, #0x10
     f00:	stp	xzr, xzr, [sp, #416]
     f04:	str	x9, [x1, #8]
     f08:	str	x8, [x20, #32]
     f0c:	b	f20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dc>
     f10:	add	x2, sp, #0x1a0
     f14:	mov	x0, x21
     f18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     f1c:	ldr	x8, [x20, #32]
     f20:	ldr	x9, [x21]
     f24:	ldr	x22, [sp, #424]
     f28:	sub	x8, x8, x9
     f2c:	lsr	x8, x8, #4
     f30:	add	w21, w8, #0x3
     f34:	cbz	x22, fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>
     f38:	adrp	x9, 0 <__pthread_key_create>
     f3c:	ldr	x9, [x9]
     f40:	add	x8, x22, #0x8
     f44:	cbz	x9, f64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x320>
     f48:	ldaxr	w9, [x8]
     f4c:	sub	w10, w9, #0x1
     f50:	stlxr	w11, w10, [x8]
     f54:	cbnz	w11, f48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x304>
     f58:	cmp	w9, #0x1
     f5c:	b.eq	f78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x334>  // b.none
     f60:	b	fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>
     f64:	ldr	w9, [x8]
     f68:	sub	w10, w9, #0x1
     f6c:	str	w10, [x8]
     f70:	cmp	w9, #0x1
     f74:	b.ne	fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>  // b.any
     f78:	mov	x23, x22
     f7c:	ldr	x8, [x23], #12
     f80:	mov	x0, x22
     f84:	ldr	x8, [x8, #16]
     f88:	blr	x8
     f8c:	adrp	x8, 0 <__pthread_key_create>
     f90:	ldr	x8, [x8]
     f94:	cbz	x8, 36f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ab4>
     f98:	ldaxr	w8, [x23]
     f9c:	sub	w9, w8, #0x1
     fa0:	stlxr	w10, w9, [x23]
     fa4:	cbnz	w10, f98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x354>
     fa8:	cmp	w8, #0x1
     fac:	b.ne	fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>  // b.any
     fb0:	ldr	x8, [x22]
     fb4:	mov	x0, x22
     fb8:	ldr	x8, [x8, #24]
     fbc:	blr	x8
     fc0:	add	x8, sp, #0x1f8
     fc4:	movi	v10.2s, #0x1
     fc8:	add	x22, x8, #0x10
     fcc:	add	x2, sp, #0x1f8
     fd0:	mov	w1, #0x2                   	// #2
     fd4:	mov	x0, x20
     fd8:	mov	w3, w21
     fdc:	str	wzr, [sp, #520]
     fe0:	str	x22, [sp, #504]
     fe4:	str	d10, [sp, #512]
     fe8:	mov	w23, #0x2                   	// #2
     fec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     ff0:	mov	x0, x20
     ff4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     ff8:	ldr	x0, [sp, #504]
     ffc:	cmp	x0, x22
    1000:	b.eq	1008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c4>  // b.none
    1004:	bl	0 <free>
    1008:	ldr	x0, [x19]
    100c:	mov	w1, #0x8                   	// #8
    1010:	mov	w2, #0x3                   	// #3
    1014:	mov	w20, #0x8                   	// #8
    1018:	mov	w21, #0x3                   	// #3
    101c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1020:	ldr	x8, [x19, #656]
    1024:	ldr	x0, [x19]
    1028:	mov	w9, #0x1                   	// #1
    102c:	add	x2, sp, #0x1f8
    1030:	ldr	w8, [x8, #8]
    1034:	mov	w1, #0x1                   	// #1
    1038:	mov	w3, wzr
    103c:	str	x23, [sp, #144]
    1040:	str	x8, [sp]
    1044:	add	x8, sp, #0x90
    1048:	stp	x8, x9, [sp, #504]
    104c:	add	x22, sp, #0x1f8
    1050:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1054:	mov	x0, x19
    1058:	bl	814c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv>
    105c:	ldr	x0, [x19]
    1060:	mov	w1, #0x11                  	// #17
    1064:	mov	w2, #0x4                   	// #4
    1068:	add	x26, x19, #0x18
    106c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1070:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1074:	ldr	d9, [x8]
    1078:	add	x8, x22, #0x10
    107c:	mov	x0, x26
    1080:	str	x8, [sp, #8]
    1084:	str	x8, [sp, #504]
    1088:	str	d9, [sp, #512]
    108c:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    1090:	mov	x22, x0
    1094:	mov	w0, #0x220                 	// #544
    1098:	bl	0 <_Znwm>
    109c:	str	d10, [x0, #8]
    10a0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    10a4:	ldr	x8, [x8]
    10a8:	movi	v0.2d, #0x0
    10ac:	mov	x9, x0
    10b0:	mov	x1, x0
    10b4:	add	x8, x8, #0x10
    10b8:	str	x8, [x0]
    10bc:	mov	w8, #0x20                  	// #32
    10c0:	stp	q0, q0, [x0, #48]
    10c4:	stp	q0, q0, [x0, #80]
    10c8:	stp	q0, q0, [x0, #112]
    10cc:	stp	q0, q0, [x0, #144]
    10d0:	stp	q0, q0, [x0, #176]
    10d4:	stp	q0, q0, [x0, #208]
    10d8:	stp	q0, q0, [x0, #240]
    10dc:	stp	q0, q0, [x0, #272]
    10e0:	stp	q0, q0, [x0, #304]
    10e4:	stp	q0, q0, [x0, #336]
    10e8:	stp	q0, q0, [x0, #368]
    10ec:	stp	q0, q0, [x0, #400]
    10f0:	stp	q0, q0, [x0, #432]
    10f4:	stp	q0, q0, [x0, #464]
    10f8:	stp	q0, q0, [x0, #496]
    10fc:	str	q0, [x9, #32]!
    1100:	str	q0, [x0, #528]
    1104:	str	x9, [x1, #16]!
    1108:	stp	w21, w8, [x0, #24]
    110c:	mov	w8, #0xff                  	// #255
    1110:	str	x20, [x9]
    1114:	strb	w8, [x0, #40]
    1118:	str	x22, [x0, #48]
    111c:	strb	w23, [x0, #56]
    1120:	str	xzr, [x0, #64]
    1124:	strb	w8, [x0, #72]
    1128:	ldr	x23, [x19]
    112c:	stp	x1, x0, [sp, #144]
    1130:	mov	x0, x23
    1134:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1138:	ldp	x1, x8, [x23, #32]
    113c:	add	x24, x23, #0x18
    1140:	cmp	x1, x8
    1144:	b.eq	1174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x530>  // b.none
    1148:	str	xzr, [x1, #8]
    114c:	ldr	q0, [sp, #144]
    1150:	add	x27, x1, #0x10
    1154:	str	xzr, [sp, #152]
    1158:	str	q0, [x1]
    115c:	str	xzr, [sp, #144]
    1160:	str	x27, [x23, #32]
    1164:	ldr	x23, [sp, #152]
    1168:	ldr	x21, [x24]
    116c:	cbnz	x23, 1190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x54c>
    1170:	b	1218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5d4>
    1174:	add	x2, sp, #0x90
    1178:	mov	x0, x24
    117c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1180:	ldr	x27, [x23, #32]
    1184:	ldr	x23, [sp, #152]
    1188:	ldr	x21, [x24]
    118c:	cbz	x23, 1218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5d4>
    1190:	adrp	x9, 0 <__pthread_key_create>
    1194:	ldr	x9, [x9]
    1198:	add	x8, x23, #0x8
    119c:	cbz	x9, 11bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x578>
    11a0:	ldaxr	w9, [x8]
    11a4:	sub	w10, w9, #0x1
    11a8:	stlxr	w11, w10, [x8]
    11ac:	cbnz	w11, 11a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x55c>
    11b0:	cmp	w9, #0x1
    11b4:	b.eq	11d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x58c>  // b.none
    11b8:	b	1218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5d4>
    11bc:	ldr	w9, [x8]
    11c0:	sub	w10, w9, #0x1
    11c4:	str	w10, [x8]
    11c8:	cmp	w9, #0x1
    11cc:	b.ne	1218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5d4>  // b.any
    11d0:	mov	x20, x23
    11d4:	ldr	x8, [x20], #12
    11d8:	mov	x0, x23
    11dc:	ldr	x8, [x8, #16]
    11e0:	blr	x8
    11e4:	adrp	x8, 0 <__pthread_key_create>
    11e8:	ldr	x8, [x8]
    11ec:	cbz	x8, 3710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2acc>
    11f0:	ldaxr	w8, [x20]
    11f4:	sub	w9, w8, #0x1
    11f8:	stlxr	w10, w9, [x20]
    11fc:	cbnz	w10, 11f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5ac>
    1200:	cmp	w8, #0x1
    1204:	b.ne	1218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5d4>  // b.any
    1208:	ldr	x8, [x23]
    120c:	mov	x0, x23
    1210:	ldr	x8, [x8, #24]
    1214:	blr	x8
    1218:	mov	w0, #0x220                 	// #544
    121c:	bl	0 <_Znwm>
    1220:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1224:	ldr	x8, [x8]
    1228:	movi	v0.2s, #0x1
    122c:	str	d0, [x0, #8]
    1230:	movi	v0.2d, #0x0
    1234:	add	x8, x8, #0x10
    1238:	mov	x1, x0
    123c:	mov	x24, x0
    1240:	mov	w9, #0x15                  	// #21
    1244:	str	x8, [x0]
    1248:	stp	q0, q0, [x0, #48]
    124c:	stp	q0, q0, [x0, #80]
    1250:	stp	q0, q0, [x0, #112]
    1254:	stp	q0, q0, [x0, #144]
    1258:	stp	q0, q0, [x0, #176]
    125c:	stp	q0, q0, [x0, #208]
    1260:	stp	q0, q0, [x0, #240]
    1264:	stp	q0, q0, [x0, #272]
    1268:	stp	q0, q0, [x0, #304]
    126c:	stp	q0, q0, [x0, #336]
    1270:	stp	q0, q0, [x0, #368]
    1274:	stp	q0, q0, [x0, #400]
    1278:	stp	q0, q0, [x0, #432]
    127c:	stp	q0, q0, [x0, #464]
    1280:	stp	q0, q0, [x0, #496]
    1284:	str	q0, [x1, #32]!
    1288:	str	q0, [x0, #528]
    128c:	str	x1, [x24, #16]!
    1290:	str	x9, [x1]
    1294:	str	d8, [x0, #24]
    1298:	mov	w10, #0xff                  	// #255
    129c:	ldp	w8, w9, [x0, #24]
    12a0:	ldr	w14, [sp, #64]
    12a4:	strb	w10, [x0, #40]
    12a8:	ldur	w10, [sp, #67]
    12ac:	mov	w11, #0x1                   	// #1
    12b0:	mov	w12, #0x2                   	// #2
    12b4:	mov	w13, #0x6                   	// #6
    12b8:	cmp	w8, w9
    12bc:	str	x11, [x0, #48]
    12c0:	strb	w12, [x0, #56]
    12c4:	strb	w13, [x0, #72]
    12c8:	str	w10, [x0, #76]
    12cc:	stur	w14, [x0, #73]
    12d0:	str	xzr, [x0, #64]
    12d4:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    12d8:	add	w8, w8, #0x1
    12dc:	mov	x23, x0
    12e0:	cmp	w8, w9
    12e4:	str	w8, [x0, #24]
    12e8:	b.cs	5114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x44d0>  // b.hs, b.nlast
    12ec:	ldr	x9, [x23, #16]
    12f0:	mov	w10, #0x2                   	// #2
    12f4:	add	x8, x9, w8, uxtw #4
    12f8:	str	x22, [x8]
    12fc:	strb	w10, [x8, #8]
    1300:	add	x9, sp, #0xa4
    1304:	ldur	w9, [x9, #255]
    1308:	ldr	w10, [sp, #416]
    130c:	str	w9, [x8, #12]
    1310:	stur	w10, [x8, #9]
    1314:	ldp	w8, w9, [x23, #24]
    1318:	cmp	w8, w9
    131c:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    1320:	add	w8, w8, #0x1
    1324:	str	w8, [x23, #24]
    1328:	ldr	x25, [x19]
    132c:	mov	x1, x24
    1330:	stp	x24, x23, [sp, #416]
    1334:	mov	x0, x25
    1338:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    133c:	ldp	x1, x8, [x25, #32]
    1340:	add	x24, x25, #0x18
    1344:	cmp	x1, x8
    1348:	b.eq	137c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x738>  // b.none
    134c:	str	xzr, [x1, #8]
    1350:	ldr	q0, [sp, #416]
    1354:	add	x8, x1, #0x10
    1358:	str	xzr, [sp, #424]
    135c:	str	x8, [sp, #24]
    1360:	str	q0, [x1]
    1364:	str	xzr, [sp, #416]
    1368:	str	x8, [x25, #32]
    136c:	ldr	x23, [sp, #424]
    1370:	ldr	x25, [x24]
    1374:	cbnz	x23, 139c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x758>
    1378:	b	1424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7e0>
    137c:	add	x2, sp, #0x1a0
    1380:	mov	x0, x24
    1384:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1388:	ldr	x8, [x25, #32]
    138c:	str	x8, [sp, #24]
    1390:	ldr	x23, [sp, #424]
    1394:	ldr	x25, [x24]
    1398:	cbz	x23, 1424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7e0>
    139c:	adrp	x9, 0 <__pthread_key_create>
    13a0:	ldr	x9, [x9]
    13a4:	add	x8, x23, #0x8
    13a8:	cbz	x9, 13c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x784>
    13ac:	ldaxr	w9, [x8]
    13b0:	sub	w10, w9, #0x1
    13b4:	stlxr	w11, w10, [x8]
    13b8:	cbnz	w11, 13ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x768>
    13bc:	cmp	w9, #0x1
    13c0:	b.eq	13dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x798>  // b.none
    13c4:	b	1424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7e0>
    13c8:	ldr	w9, [x8]
    13cc:	sub	w10, w9, #0x1
    13d0:	str	w10, [x8]
    13d4:	cmp	w9, #0x1
    13d8:	b.ne	1424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7e0>  // b.any
    13dc:	mov	x20, x23
    13e0:	ldr	x8, [x20], #12
    13e4:	mov	x0, x23
    13e8:	ldr	x8, [x8, #16]
    13ec:	blr	x8
    13f0:	adrp	x8, 0 <__pthread_key_create>
    13f4:	ldr	x8, [x8]
    13f8:	cbz	x8, 3728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ae4>
    13fc:	ldaxr	w8, [x20]
    1400:	sub	w9, w8, #0x1
    1404:	stlxr	w10, w9, [x20]
    1408:	cbnz	w10, 13fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7b8>
    140c:	cmp	w8, #0x1
    1410:	b.ne	1424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7e0>  // b.any
    1414:	ldr	x8, [x23]
    1418:	mov	x0, x23
    141c:	ldr	x8, [x8, #24]
    1420:	blr	x8
    1424:	mov	w0, #0x220                 	// #544
    1428:	bl	0 <_Znwm>
    142c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1430:	ldr	x8, [x8]
    1434:	movi	v0.2s, #0x1
    1438:	str	d0, [x0, #8]
    143c:	movi	v0.2d, #0x0
    1440:	add	x8, x8, #0x10
    1444:	mov	x1, x0
    1448:	mov	x24, x0
    144c:	mov	w9, #0x12                  	// #18
    1450:	str	x8, [x0]
    1454:	stp	q0, q0, [x0, #48]
    1458:	stp	q0, q0, [x0, #80]
    145c:	stp	q0, q0, [x0, #112]
    1460:	stp	q0, q0, [x0, #144]
    1464:	stp	q0, q0, [x0, #176]
    1468:	stp	q0, q0, [x0, #208]
    146c:	stp	q0, q0, [x0, #240]
    1470:	stp	q0, q0, [x0, #272]
    1474:	stp	q0, q0, [x0, #304]
    1478:	stp	q0, q0, [x0, #336]
    147c:	stp	q0, q0, [x0, #368]
    1480:	stp	q0, q0, [x0, #400]
    1484:	stp	q0, q0, [x0, #432]
    1488:	stp	q0, q0, [x0, #464]
    148c:	stp	q0, q0, [x0, #496]
    1490:	str	q0, [x1, #32]!
    1494:	str	q0, [x0, #528]
    1498:	str	x1, [x24, #16]!
    149c:	str	x9, [x1]
    14a0:	str	d8, [x0, #24]
    14a4:	mov	w10, #0xff                  	// #255
    14a8:	ldp	w8, w9, [x0, #24]
    14ac:	ldr	w14, [sp, #64]
    14b0:	strb	w10, [x0, #40]
    14b4:	ldur	w10, [sp, #67]
    14b8:	mov	w11, #0x1                   	// #1
    14bc:	mov	w12, #0x2                   	// #2
    14c0:	mov	w13, #0x6                   	// #6
    14c4:	cmp	w8, w9
    14c8:	str	x11, [x0, #48]
    14cc:	strb	w12, [x0, #56]
    14d0:	strb	w13, [x0, #72]
    14d4:	str	w10, [x0, #76]
    14d8:	stur	w14, [x0, #73]
    14dc:	str	xzr, [x0, #64]
    14e0:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    14e4:	add	w8, w8, #0x1
    14e8:	mov	x23, x0
    14ec:	cmp	w8, w9
    14f0:	str	w8, [x0, #24]
    14f4:	b.cs	512c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x44e8>  // b.hs, b.nlast
    14f8:	ldr	x9, [x23, #16]
    14fc:	mov	w10, #0x2                   	// #2
    1500:	str	x25, [sp, #40]
    1504:	add	x8, x9, w8, uxtw #4
    1508:	str	x22, [x8]
    150c:	strb	w10, [x8, #8]
    1510:	ldur	w9, [sp, #67]
    1514:	ldr	w10, [sp, #64]
    1518:	str	w9, [x8, #12]
    151c:	stur	w10, [x8, #9]
    1520:	ldp	w8, w9, [x23, #24]
    1524:	cmp	w8, w9
    1528:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    152c:	add	w8, w8, #0x1
    1530:	str	w8, [x23, #24]
    1534:	ldr	x25, [x19]
    1538:	mov	x1, x24
    153c:	str	x21, [sp, #48]
    1540:	stp	x24, x23, [sp, #64]
    1544:	mov	x0, x25
    1548:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    154c:	ldp	x1, x8, [x25, #32]
    1550:	add	x24, x25, #0x18
    1554:	cmp	x1, x8
    1558:	b.eq	1588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x944>  // b.none
    155c:	str	xzr, [x1, #8]
    1560:	ldr	q0, [sp, #64]
    1564:	add	x21, x1, #0x10
    1568:	str	xzr, [sp, #72]
    156c:	str	q0, [x1]
    1570:	str	xzr, [sp, #64]
    1574:	str	x21, [x25, #32]
    1578:	ldr	x23, [sp, #72]
    157c:	ldr	x25, [x24]
    1580:	cbnz	x23, 15a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x960>
    1584:	b	162c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9e8>
    1588:	add	x2, sp, #0x40
    158c:	mov	x0, x24
    1590:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1594:	ldr	x21, [x25, #32]
    1598:	ldr	x23, [sp, #72]
    159c:	ldr	x25, [x24]
    15a0:	cbz	x23, 162c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9e8>
    15a4:	adrp	x9, 0 <__pthread_key_create>
    15a8:	ldr	x9, [x9]
    15ac:	add	x8, x23, #0x8
    15b0:	cbz	x9, 15d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x98c>
    15b4:	ldaxr	w9, [x8]
    15b8:	sub	w10, w9, #0x1
    15bc:	stlxr	w11, w10, [x8]
    15c0:	cbnz	w11, 15b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x970>
    15c4:	cmp	w9, #0x1
    15c8:	b.eq	15e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9a0>  // b.none
    15cc:	b	162c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9e8>
    15d0:	ldr	w9, [x8]
    15d4:	sub	w10, w9, #0x1
    15d8:	str	w10, [x8]
    15dc:	cmp	w9, #0x1
    15e0:	b.ne	162c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9e8>  // b.any
    15e4:	mov	x20, x23
    15e8:	ldr	x8, [x20], #12
    15ec:	mov	x0, x23
    15f0:	ldr	x8, [x8, #16]
    15f4:	blr	x8
    15f8:	adrp	x8, 0 <__pthread_key_create>
    15fc:	ldr	x8, [x8]
    1600:	cbz	x8, 3740 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2afc>
    1604:	ldaxr	w8, [x20]
    1608:	sub	w9, w8, #0x1
    160c:	stlxr	w10, w9, [x20]
    1610:	cbnz	w10, 1604 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9c0>
    1614:	cmp	w8, #0x1
    1618:	b.ne	162c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9e8>  // b.any
    161c:	ldr	x8, [x23]
    1620:	mov	x0, x23
    1624:	ldr	x8, [x8, #24]
    1628:	blr	x8
    162c:	mov	w0, #0x220                 	// #544
    1630:	bl	0 <_Znwm>
    1634:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1638:	ldr	x8, [x8]
    163c:	movi	v0.2s, #0x1
    1640:	str	d0, [x0, #8]
    1644:	movi	v0.2d, #0x0
    1648:	add	x8, x8, #0x10
    164c:	mov	x9, x0
    1650:	mov	x1, x0
    1654:	mov	w10, #0x13                  	// #19
    1658:	str	x8, [x0]
    165c:	stp	q0, q0, [x0, #48]
    1660:	stp	q0, q0, [x0, #80]
    1664:	stp	q0, q0, [x0, #112]
    1668:	stp	q0, q0, [x0, #144]
    166c:	stp	q0, q0, [x0, #176]
    1670:	stp	q0, q0, [x0, #208]
    1674:	stp	q0, q0, [x0, #240]
    1678:	stp	q0, q0, [x0, #272]
    167c:	stp	q0, q0, [x0, #304]
    1680:	stp	q0, q0, [x0, #336]
    1684:	stp	q0, q0, [x0, #368]
    1688:	stp	q0, q0, [x0, #400]
    168c:	stp	q0, q0, [x0, #432]
    1690:	stp	q0, q0, [x0, #464]
    1694:	stp	q0, q0, [x0, #496]
    1698:	str	q0, [x9, #32]!
    169c:	mov	w11, #0xff                  	// #255
    16a0:	mov	w8, #0x6                   	// #6
    16a4:	str	q0, [x0, #528]
    16a8:	str	x9, [x1, #16]!
    16ac:	str	x10, [x9]
    16b0:	str	d8, [x0, #24]
    16b4:	mov	w9, #0x8                   	// #8
    16b8:	strb	w11, [x0, #40]
    16bc:	strb	w8, [x0, #56]
    16c0:	ldp	w8, w11, [x0, #24]
    16c4:	ldur	w10, [sp, #131]
    16c8:	strb	w9, [x0, #72]
    16cc:	ldr	w9, [sp, #128]
    16d0:	cmp	w8, w11
    16d4:	str	w10, [x0, #76]
    16d8:	str	xzr, [x0, #48]
    16dc:	str	xzr, [x0, #64]
    16e0:	stur	w9, [x0, #73]
    16e4:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    16e8:	add	w8, w8, #0x1
    16ec:	str	w8, [x0, #24]
    16f0:	ldr	x23, [x19]
    16f4:	stp	x1, x0, [sp, #128]
    16f8:	mov	x0, x23
    16fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1700:	ldp	x1, x8, [x23, #32]
    1704:	add	x24, x23, #0x18
    1708:	str	x26, [sp, #56]
    170c:	str	x27, [sp, #32]
    1710:	cmp	x1, x8
    1714:	str	x21, [sp, #16]
    1718:	b.eq	1748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb04>  // b.none
    171c:	str	xzr, [x1, #8]
    1720:	ldr	q0, [sp, #128]
    1724:	add	x26, x1, #0x10
    1728:	str	xzr, [sp, #136]
    172c:	str	q0, [x1]
    1730:	str	xzr, [sp, #128]
    1734:	str	x26, [x23, #32]
    1738:	ldr	x23, [sp, #136]
    173c:	ldr	x21, [x24]
    1740:	cbnz	x23, 1764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb20>
    1744:	b	17ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xba8>
    1748:	add	x2, sp, #0x80
    174c:	mov	x0, x24
    1750:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1754:	ldr	x26, [x23, #32]
    1758:	ldr	x23, [sp, #136]
    175c:	ldr	x21, [x24]
    1760:	cbz	x23, 17ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xba8>
    1764:	adrp	x9, 0 <__pthread_key_create>
    1768:	ldr	x9, [x9]
    176c:	add	x8, x23, #0x8
    1770:	cbz	x9, 1790 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb4c>
    1774:	ldaxr	w9, [x8]
    1778:	sub	w10, w9, #0x1
    177c:	stlxr	w11, w10, [x8]
    1780:	cbnz	w11, 1774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb30>
    1784:	cmp	w9, #0x1
    1788:	b.eq	17a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb60>  // b.none
    178c:	b	17ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xba8>
    1790:	ldr	w9, [x8]
    1794:	sub	w10, w9, #0x1
    1798:	str	w10, [x8]
    179c:	cmp	w9, #0x1
    17a0:	b.ne	17ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xba8>  // b.any
    17a4:	mov	x20, x23
    17a8:	ldr	x8, [x20], #12
    17ac:	mov	x0, x23
    17b0:	ldr	x8, [x8, #16]
    17b4:	blr	x8
    17b8:	adrp	x8, 0 <__pthread_key_create>
    17bc:	ldr	x8, [x8]
    17c0:	cbz	x8, 3758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b14>
    17c4:	ldaxr	w8, [x20]
    17c8:	sub	w9, w8, #0x1
    17cc:	stlxr	w10, w9, [x20]
    17d0:	cbnz	w10, 17c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb80>
    17d4:	cmp	w8, #0x1
    17d8:	b.ne	17ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xba8>  // b.any
    17dc:	ldr	x8, [x23]
    17e0:	mov	x0, x23
    17e4:	ldr	x8, [x8, #24]
    17e8:	blr	x8
    17ec:	mov	w0, #0x220                 	// #544
    17f0:	bl	0 <_Znwm>
    17f4:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    17f8:	ldr	x8, [x8]
    17fc:	movi	v0.2s, #0x1
    1800:	str	d0, [x0, #8]
    1804:	movi	v0.2d, #0x0
    1808:	add	x8, x8, #0x10
    180c:	mov	x1, x0
    1810:	mov	x24, x0
    1814:	mov	w9, #0x14                  	// #20
    1818:	str	x8, [x0]
    181c:	stp	q0, q0, [x0, #48]
    1820:	stp	q0, q0, [x0, #80]
    1824:	stp	q0, q0, [x0, #112]
    1828:	stp	q0, q0, [x0, #144]
    182c:	stp	q0, q0, [x0, #176]
    1830:	stp	q0, q0, [x0, #208]
    1834:	stp	q0, q0, [x0, #240]
    1838:	stp	q0, q0, [x0, #272]
    183c:	stp	q0, q0, [x0, #304]
    1840:	stp	q0, q0, [x0, #336]
    1844:	stp	q0, q0, [x0, #368]
    1848:	stp	q0, q0, [x0, #400]
    184c:	stp	q0, q0, [x0, #432]
    1850:	stp	q0, q0, [x0, #464]
    1854:	stp	q0, q0, [x0, #496]
    1858:	str	q0, [x1, #32]!
    185c:	str	q0, [x0, #528]
    1860:	str	x1, [x24, #16]!
    1864:	str	x9, [x1]
    1868:	str	d8, [x0, #24]
    186c:	mov	w10, #0xff                  	// #255
    1870:	ldp	w8, w9, [x0, #24]
    1874:	ldr	w14, [sp, #112]
    1878:	strb	w10, [x0, #40]
    187c:	ldur	w10, [sp, #115]
    1880:	mov	w11, #0x1                   	// #1
    1884:	mov	w12, #0x2                   	// #2
    1888:	mov	w13, #0x6                   	// #6
    188c:	cmp	w8, w9
    1890:	str	x11, [x0, #48]
    1894:	strb	w12, [x0, #56]
    1898:	strb	w13, [x0, #72]
    189c:	str	w10, [x0, #76]
    18a0:	stur	w14, [x0, #73]
    18a4:	str	xzr, [x0, #64]
    18a8:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    18ac:	add	w8, w8, #0x1
    18b0:	mov	x23, x0
    18b4:	cmp	w8, w9
    18b8:	str	w8, [x0, #24]
    18bc:	b.cs	5144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4500>  // b.hs, b.nlast
    18c0:	ldr	x9, [x23, #16]
    18c4:	mov	w10, #0x2                   	// #2
    18c8:	add	x8, x9, w8, uxtw #4
    18cc:	str	x22, [x8]
    18d0:	strb	w10, [x8, #8]
    18d4:	ldur	w9, [sp, #115]
    18d8:	ldr	w10, [sp, #112]
    18dc:	str	w9, [x8, #12]
    18e0:	stur	w10, [x8, #9]
    18e4:	ldp	w8, w9, [x23, #24]
    18e8:	cmp	w8, w9
    18ec:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    18f0:	add	w8, w8, #0x1
    18f4:	str	w8, [x23, #24]
    18f8:	mov	x27, x25
    18fc:	ldr	x25, [x19]
    1900:	mov	x1, x24
    1904:	stp	x24, x23, [sp, #112]
    1908:	mov	x0, x25
    190c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1910:	ldp	x1, x8, [x25, #32]
    1914:	add	x24, x25, #0x18
    1918:	cmp	x1, x8
    191c:	b.eq	194c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd08>  // b.none
    1920:	str	xzr, [x1, #8]
    1924:	ldr	q0, [sp, #112]
    1928:	add	x20, x1, #0x10
    192c:	str	xzr, [sp, #120]
    1930:	str	q0, [x1]
    1934:	str	xzr, [sp, #112]
    1938:	str	x20, [x25, #32]
    193c:	ldr	x23, [sp, #120]
    1940:	ldr	x24, [x24]
    1944:	cbnz	x23, 1968 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd24>
    1948:	b	19f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xdac>
    194c:	add	x2, sp, #0x70
    1950:	mov	x0, x24
    1954:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1958:	ldr	x20, [x25, #32]
    195c:	ldr	x23, [sp, #120]
    1960:	ldr	x24, [x24]
    1964:	cbz	x23, 19f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xdac>
    1968:	adrp	x9, 0 <__pthread_key_create>
    196c:	ldr	x9, [x9]
    1970:	add	x8, x23, #0x8
    1974:	cbz	x9, 1994 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd50>
    1978:	ldaxr	w9, [x8]
    197c:	sub	w10, w9, #0x1
    1980:	stlxr	w11, w10, [x8]
    1984:	cbnz	w11, 1978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd34>
    1988:	cmp	w9, #0x1
    198c:	b.eq	19a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd64>  // b.none
    1990:	b	19f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xdac>
    1994:	ldr	w9, [x8]
    1998:	sub	w10, w9, #0x1
    199c:	str	w10, [x8]
    19a0:	cmp	w9, #0x1
    19a4:	b.ne	19f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xdac>  // b.any
    19a8:	mov	x25, x23
    19ac:	ldr	x8, [x25], #12
    19b0:	mov	x0, x23
    19b4:	ldr	x8, [x8, #16]
    19b8:	blr	x8
    19bc:	adrp	x8, 0 <__pthread_key_create>
    19c0:	ldr	x8, [x8]
    19c4:	cbz	x8, 3770 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b2c>
    19c8:	ldaxr	w8, [x25]
    19cc:	sub	w9, w8, #0x1
    19d0:	stlxr	w10, w9, [x25]
    19d4:	cbnz	w10, 19c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd84>
    19d8:	cmp	w8, #0x1
    19dc:	b.ne	19f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xdac>  // b.any
    19e0:	ldr	x8, [x23]
    19e4:	mov	x0, x23
    19e8:	ldr	x8, [x8, #24]
    19ec:	blr	x8
    19f0:	mov	w0, #0x220                 	// #544
    19f4:	bl	0 <_Znwm>
    19f8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    19fc:	ldr	x8, [x8]
    1a00:	movi	v0.2s, #0x1
    1a04:	str	d0, [x0, #8]
    1a08:	movi	v0.2d, #0x0
    1a0c:	add	x8, x8, #0x10
    1a10:	mov	x9, x0
    1a14:	mov	x1, x0
    1a18:	mov	w10, #0xb                   	// #11
    1a1c:	str	x8, [x0]
    1a20:	stp	q0, q0, [x0, #48]
    1a24:	stp	q0, q0, [x0, #80]
    1a28:	stp	q0, q0, [x0, #112]
    1a2c:	stp	q0, q0, [x0, #144]
    1a30:	stp	q0, q0, [x0, #176]
    1a34:	stp	q0, q0, [x0, #208]
    1a38:	stp	q0, q0, [x0, #240]
    1a3c:	stp	q0, q0, [x0, #272]
    1a40:	stp	q0, q0, [x0, #304]
    1a44:	stp	q0, q0, [x0, #336]
    1a48:	stp	q0, q0, [x0, #368]
    1a4c:	stp	q0, q0, [x0, #400]
    1a50:	stp	q0, q0, [x0, #432]
    1a54:	stp	q0, q0, [x0, #464]
    1a58:	stp	q0, q0, [x0, #496]
    1a5c:	str	q0, [x9, #32]!
    1a60:	mov	w8, #0x8                   	// #8
    1a64:	str	q0, [x0, #528]
    1a68:	str	x9, [x1, #16]!
    1a6c:	str	x10, [x9]
    1a70:	mov	w9, #0x4                   	// #4
    1a74:	str	d8, [x0, #24]
    1a78:	mov	w11, #0xff                  	// #255
    1a7c:	str	x8, [x0, #48]
    1a80:	strb	w9, [x0, #56]
    1a84:	ldp	w8, w9, [x0, #24]
    1a88:	strb	w11, [x0, #40]
    1a8c:	ldur	w11, [sp, #99]
    1a90:	ldr	w12, [sp, #96]
    1a94:	mov	w10, #0x2                   	// #2
    1a98:	cmp	w8, w9
    1a9c:	str	x22, [x0, #64]
    1aa0:	strb	w10, [x0, #72]
    1aa4:	str	w11, [x0, #76]
    1aa8:	stur	w12, [x0, #73]
    1aac:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    1ab0:	add	w8, w8, #0x1
    1ab4:	str	w8, [x0, #24]
    1ab8:	ldr	x22, [x19]
    1abc:	stp	x1, x0, [sp, #96]
    1ac0:	mov	x0, x22
    1ac4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1ac8:	ldp	x1, x8, [x22, #32]
    1acc:	add	x23, x22, #0x18
    1ad0:	cmp	x1, x8
    1ad4:	b.eq	1b04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xec0>  // b.none
    1ad8:	str	xzr, [x1, #8]
    1adc:	ldr	q0, [sp, #96]
    1ae0:	add	x25, x1, #0x10
    1ae4:	str	xzr, [sp, #104]
    1ae8:	str	q0, [x1]
    1aec:	str	xzr, [sp, #96]
    1af0:	str	x25, [x22, #32]
    1af4:	ldr	x22, [sp, #104]
    1af8:	ldr	x23, [x23]
    1afc:	cbnz	x22, 1b20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xedc>
    1b00:	b	1ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf64>
    1b04:	add	x2, sp, #0x60
    1b08:	mov	x0, x23
    1b0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1b10:	ldr	x25, [x22, #32]
    1b14:	ldr	x22, [sp, #104]
    1b18:	ldr	x23, [x23]
    1b1c:	cbz	x22, 1ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf64>
    1b20:	adrp	x9, 0 <__pthread_key_create>
    1b24:	ldr	x9, [x9]
    1b28:	add	x8, x22, #0x8
    1b2c:	cbz	x9, 1b4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf08>
    1b30:	ldaxr	w9, [x8]
    1b34:	sub	w10, w9, #0x1
    1b38:	stlxr	w11, w10, [x8]
    1b3c:	cbnz	w11, 1b30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xeec>
    1b40:	cmp	w9, #0x1
    1b44:	b.eq	1b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf1c>  // b.none
    1b48:	b	1ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf64>
    1b4c:	ldr	w9, [x8]
    1b50:	sub	w10, w9, #0x1
    1b54:	str	w10, [x8]
    1b58:	cmp	w9, #0x1
    1b5c:	b.ne	1ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf64>  // b.any
    1b60:	mov	x28, x22
    1b64:	ldr	x8, [x28], #12
    1b68:	mov	x0, x22
    1b6c:	ldr	x8, [x8, #16]
    1b70:	blr	x8
    1b74:	adrp	x8, 0 <__pthread_key_create>
    1b78:	ldr	x8, [x8]
    1b7c:	cbz	x8, 3788 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b44>
    1b80:	ldaxr	w8, [x28]
    1b84:	sub	w9, w8, #0x1
    1b88:	stlxr	w10, w9, [x28]
    1b8c:	cbnz	w10, 1b80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf3c>
    1b90:	cmp	w8, #0x1
    1b94:	b.ne	1ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf64>  // b.any
    1b98:	ldr	x8, [x22]
    1b9c:	mov	x0, x22
    1ba0:	ldr	x8, [x8, #24]
    1ba4:	blr	x8
    1ba8:	ldp	x10, x9, [x19, #80]
    1bac:	ldr	w8, [sp, #512]
    1bb0:	ldr	w11, [sp, #516]
    1bb4:	sub	x9, x9, x10
    1bb8:	asr	x22, x9, #3
    1bbc:	cmp	w8, w11
    1bc0:	b.cs	515c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4518>  // b.hs, b.nlast
    1bc4:	ldr	x9, [sp, #504]
    1bc8:	str	x22, [x9, w8, uxtw #3]
    1bcc:	ldr	w8, [sp, #512]
    1bd0:	ldr	w9, [sp, #516]
    1bd4:	cmp	w8, w9
    1bd8:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    1bdc:	add	w8, w8, #0x1
    1be0:	str	w8, [sp, #512]
    1be4:	ldr	x0, [x19]
    1be8:	add	x2, sp, #0x1f8
    1bec:	mov	w1, #0x1                   	// #1
    1bf0:	mov	w3, wzr
    1bf4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1bf8:	str	wzr, [sp, #512]
    1bfc:	ldp	x8, x9, [x19, #80]
    1c00:	sub	x9, x9, x8
    1c04:	lsr	x10, x9, #3
    1c08:	cbz	w10, 2534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x18f0>
    1c0c:	ldp	x10, x14, [sp, #24]
    1c10:	ldp	x11, x15, [sp, #40]
    1c14:	sub	x12, x26, x21
    1c18:	sub	x13, x25, x23
    1c1c:	adrp	x21, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1c20:	sub	x10, x10, x11
    1c24:	ldr	x11, [sp, #16]
    1c28:	sub	x14, x14, x15
    1c2c:	sub	x15, x20, x24
    1c30:	mov	x28, xzr
    1c34:	sub	x11, x11, x27
    1c38:	ubfx	x27, x9, #3, #32
    1c3c:	lsr	x9, x10, #4
    1c40:	lsr	x10, x11, #4
    1c44:	add	w9, w9, #0x3
    1c48:	lsr	x11, x12, #4
    1c4c:	str	w9, [sp, #40]
    1c50:	add	w9, w10, #0x3
    1c54:	lsr	x12, x13, #4
    1c58:	lsr	x13, x14, #4
    1c5c:	str	w9, [sp, #32]
    1c60:	add	w9, w11, #0x3
    1c64:	lsr	x14, x15, #4
    1c68:	str	w9, [sp, #16]
    1c6c:	add	w9, w13, #0x3
    1c70:	add	x21, x21, #0x0
    1c74:	mov	w26, #0x14                  	// #20
    1c78:	add	w22, w12, #0x3
    1c7c:	str	w9, [sp, #48]
    1c80:	add	w9, w14, #0x3
    1c84:	str	w9, [sp, #24]
    1c88:	ldr	x23, [x8, x28, lsl #3]
    1c8c:	ldr	w8, [x23, #8]
    1c90:	and	w9, w8, #0xff
    1c94:	cmp	w9, #0x10
    1c98:	b.hi	1f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1348>  // b.pmore
    1c9c:	and	x9, x8, #0xff
    1ca0:	adr	x10, 1cb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x106c>
    1ca4:	ldrh	w11, [x21, x9, lsl #1]
    1ca8:	add	x10, x10, x11, lsl #2
    1cac:	br	x10
    1cb0:	mov	w24, wzr
    1cb4:	mov	w25, #0x2                   	// #2
    1cb8:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1cbc:	cbz	x23, 54d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x488c>
    1cc0:	ldr	w8, [sp, #516]
    1cc4:	ldr	x20, [x23, #32]
    1cc8:	cbz	w8, 2400 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x17bc>
    1ccc:	mov	w8, wzr
    1cd0:	ldr	x9, [sp, #504]
    1cd4:	str	x20, [x9, w8, uxtw #3]
    1cd8:	ldr	w8, [sp, #512]
    1cdc:	ldr	w9, [sp, #516]
    1ce0:	cmp	w8, w9
    1ce4:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    1ce8:	add	w8, w8, #0x1
    1cec:	str	w8, [sp, #512]
    1cf0:	ldr	w10, [x19, #72]
    1cf4:	ldr	x11, [x19, #56]
    1cf8:	cbz	w10, 2144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1500>
    1cfc:	ldr	x12, [x23, #24]
    1d00:	orr	x13, x12, #0x8
    1d04:	cmn	x13, #0x8
    1d08:	b.eq	52d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4694>  // b.none
    1d0c:	ubfx	x13, x12, #4, #28
    1d10:	eor	w14, w13, w12, lsr #9
    1d14:	sub	w13, w10, #0x1
    1d18:	and	w14, w14, w13
    1d1c:	add	x15, x11, w14, uxtw #4
    1d20:	ldr	x16, [x15]
    1d24:	cmp	x16, x12
    1d28:	b.eq	2148 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1504>  // b.none
    1d2c:	mov	w17, #0x1                   	// #1
    1d30:	cmn	x16, #0x8
    1d34:	b.eq	2144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1500>  // b.none
    1d38:	add	w14, w14, w17
    1d3c:	and	w14, w14, w13
    1d40:	add	x15, x11, w14, uxtw #4
    1d44:	ldr	x16, [x15]
    1d48:	add	w17, w17, #0x1
    1d4c:	cmp	x16, x12
    1d50:	b.eq	2148 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1504>  // b.none
    1d54:	b	1d30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x10ec>
    1d58:	cbz	x23, 54f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48ac>
    1d5c:	ldr	w8, [sp, #516]
    1d60:	ldr	x20, [x23, #32]
    1d64:	cbz	w8, 241c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x17d8>
    1d68:	mov	w8, wzr
    1d6c:	ldr	x9, [sp, #504]
    1d70:	str	x20, [x9, w8, uxtw #3]
    1d74:	ldr	w8, [sp, #512]
    1d78:	ldr	w9, [sp, #516]
    1d7c:	cmp	w8, w9
    1d80:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    1d84:	add	w8, w8, #0x1
    1d88:	str	w8, [sp, #512]
    1d8c:	ldr	w10, [x19, #72]
    1d90:	ldr	x11, [x19, #56]
    1d94:	cbz	w10, 21c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x157c>
    1d98:	ldr	x12, [x23, #24]
    1d9c:	orr	x13, x12, #0x8
    1da0:	cmn	x13, #0x8
    1da4:	b.eq	52d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4694>  // b.none
    1da8:	ubfx	x13, x12, #4, #28
    1dac:	eor	w14, w13, w12, lsr #9
    1db0:	sub	w13, w10, #0x1
    1db4:	and	w14, w14, w13
    1db8:	add	x15, x11, w14, uxtw #4
    1dbc:	ldr	x16, [x15]
    1dc0:	cmp	x16, x12
    1dc4:	b.eq	21c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1580>  // b.none
    1dc8:	mov	w17, #0x1                   	// #1
    1dcc:	cmn	x16, #0x8
    1dd0:	b.eq	21c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x157c>  // b.none
    1dd4:	add	w14, w14, w17
    1dd8:	and	w14, w14, w13
    1ddc:	add	x15, x11, w14, uxtw #4
    1de0:	ldr	x16, [x15]
    1de4:	add	w17, w17, #0x1
    1de8:	cmp	x16, x12
    1dec:	b.eq	21c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1580>  // b.none
    1df0:	b	1dcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1188>
    1df4:	cbz	x23, 5510 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48cc>
    1df8:	ldr	w9, [sp, #516]
    1dfc:	lsr	x20, x8, #8
    1e00:	cbz	w9, 2438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x17f4>
    1e04:	mov	w8, wzr
    1e08:	ldr	x9, [sp, #504]
    1e0c:	str	x20, [x9, w8, uxtw #3]
    1e10:	ldr	w8, [sp, #512]
    1e14:	ldr	w9, [sp, #516]
    1e18:	cmp	w8, w9
    1e1c:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    1e20:	add	w8, w8, #0x1
    1e24:	mov	w24, wzr
    1e28:	str	w8, [sp, #512]
    1e2c:	mov	w25, #0x7                   	// #7
    1e30:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1e34:	mov	w24, wzr
    1e38:	mov	w25, #0xd                   	// #13
    1e3c:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1e40:	cbz	x23, 5530 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x48ec>
    1e44:	ldr	w9, [sp, #516]
    1e48:	cmp	w8, #0xff
    1e4c:	cset	w20, hi  // hi = pmore
    1e50:	cbz	w9, 2454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1810>
    1e54:	mov	w8, wzr
    1e58:	ldr	x9, [sp, #504]
    1e5c:	str	x20, [x9, w8, uxtw #3]
    1e60:	ldr	w8, [sp, #512]
    1e64:	ldr	w9, [sp, #516]
    1e68:	cmp	w8, w9
    1e6c:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    1e70:	add	w8, w8, #0x1
    1e74:	str	w8, [sp, #512]
    1e78:	ldr	w10, [x19, #72]
    1e7c:	ldr	x11, [x19, #56]
    1e80:	cbz	w10, 220c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x15c8>
    1e84:	ldr	x12, [x23, #16]
    1e88:	ldr	x12, [x12]
    1e8c:	orr	x13, x12, #0x8
    1e90:	cmn	x13, #0x8
    1e94:	b.eq	52d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4694>  // b.none
    1e98:	ubfx	x13, x12, #4, #28
    1e9c:	eor	w14, w13, w12, lsr #9
    1ea0:	sub	w13, w10, #0x1
    1ea4:	and	w14, w14, w13
    1ea8:	add	x15, x11, w14, uxtw #4
    1eac:	ldr	x16, [x15]
    1eb0:	cmp	x16, x12
    1eb4:	b.eq	2210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x15cc>  // b.none
    1eb8:	mov	w17, #0x1                   	// #1
    1ebc:	cmn	x16, #0x8
    1ec0:	b.eq	220c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x15c8>  // b.none
    1ec4:	add	w14, w14, w17
    1ec8:	and	w14, w14, w13
    1ecc:	add	x15, x11, w14, uxtw #4
    1ed0:	ldr	x16, [x15]
    1ed4:	add	w17, w17, #0x1
    1ed8:	cmp	x16, x12
    1edc:	b.eq	2210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x15cc>  // b.none
    1ee0:	b	1ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1278>
    1ee4:	mov	w24, wzr
    1ee8:	mov	w25, #0x11                  	// #17
    1eec:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1ef0:	mov	w24, wzr
    1ef4:	mov	w25, #0x3                   	// #3
    1ef8:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1efc:	cbz	x23, 5550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x490c>
    1f00:	ldr	w8, [x19, #72]
    1f04:	ldr	x9, [x19, #56]
    1f08:	cbz	w8, 2344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1700>
    1f0c:	ldr	x10, [x23, #24]
    1f10:	orr	x11, x10, #0x8
    1f14:	cmn	x11, #0x8
    1f18:	b.eq	52d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4694>  // b.none
    1f1c:	ubfx	x11, x10, #4, #28
    1f20:	eor	w12, w11, w10, lsr #9
    1f24:	sub	w11, w8, #0x1
    1f28:	and	w12, w12, w11
    1f2c:	add	x13, x9, w12, uxtw #4
    1f30:	ldr	x14, [x13]
    1f34:	cmp	x14, x10
    1f38:	b.eq	2348 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1704>  // b.none
    1f3c:	mov	w15, #0x1                   	// #1
    1f40:	cmn	x14, #0x8
    1f44:	b.eq	2344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1700>  // b.none
    1f48:	add	w12, w12, w15
    1f4c:	and	w12, w12, w11
    1f50:	add	x13, x9, w12, uxtw #4
    1f54:	ldr	x14, [x13]
    1f58:	add	w15, w15, #0x1
    1f5c:	cmp	x14, x10
    1f60:	b.eq	2348 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1704>  // b.none
    1f64:	b	1f40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x12fc>
    1f68:	mov	w24, wzr
    1f6c:	mov	w25, #0x4                   	// #4
    1f70:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1f74:	mov	w24, wzr
    1f78:	mov	w25, #0x5                   	// #5
    1f7c:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1f80:	mov	w24, wzr
    1f84:	mov	w25, #0xa                   	// #10
    1f88:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1f8c:	mov	w25, wzr
    1f90:	mov	w24, wzr
    1f94:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1f98:	mov	w24, wzr
    1f9c:	mov	w25, #0xe                   	// #14
    1fa0:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    1fa4:	cbz	x23, 5570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x492c>
    1fa8:	ldr	w9, [sp, #516]
    1fac:	ubfx	x20, x8, #9, #1
    1fb0:	cbz	w9, 2470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x182c>
    1fb4:	mov	w8, wzr
    1fb8:	ldr	x9, [sp, #504]
    1fbc:	str	x20, [x9, w8, uxtw #3]
    1fc0:	ldr	w9, [sp, #512]
    1fc4:	ldr	w8, [sp, #516]
    1fc8:	cmp	w9, w8
    1fcc:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    1fd0:	add	w9, w9, #0x1
    1fd4:	str	w9, [sp, #512]
    1fd8:	ldr	w10, [x23, #12]
    1fdc:	cbz	w10, 20e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x149c>
    1fe0:	ldr	x20, [x23, #16]
    1fe4:	add	x24, x20, x10, lsl #3
    1fe8:	ldr	w10, [x19, #72]
    1fec:	ldr	x11, [x19, #56]
    1ff0:	cbz	w10, 2050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x140c>
    1ff4:	ldr	x12, [x20]
    1ff8:	orr	x13, x12, #0x8
    1ffc:	cmn	x13, #0x8
    2000:	b.eq	52d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4694>  // b.none
    2004:	ubfx	x13, x12, #4, #28
    2008:	eor	w14, w13, w12, lsr #9
    200c:	sub	w13, w10, #0x1
    2010:	and	w14, w14, w13
    2014:	add	x15, x11, w14, uxtw #4
    2018:	ldr	x16, [x15]
    201c:	cmp	x16, x12
    2020:	b.eq	2054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1410>  // b.none
    2024:	mov	w17, #0x1                   	// #1
    2028:	cmn	x16, #0x8
    202c:	b.eq	2050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x140c>  // b.none
    2030:	add	w14, w14, w17
    2034:	and	w14, w14, w13
    2038:	add	x15, x11, w14, uxtw #4
    203c:	ldr	x16, [x15]
    2040:	add	w17, w17, #0x1
    2044:	cmp	x16, x12
    2048:	b.eq	2054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1410>  // b.none
    204c:	b	2028 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x13e4>
    2050:	add	x15, x11, x10, lsl #4
    2054:	add	x10, x11, x10, lsl #4
    2058:	cmp	x15, x10
    205c:	b.eq	5338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46f4>  // b.none
    2060:	ldr	w10, [x15, #8]
    2064:	cmp	w9, w8
    2068:	sub	w25, w10, #0x1
    206c:	b.cs	20a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x145c>  // b.hs, b.nlast
    2070:	ldr	x8, [sp, #504]
    2074:	str	x25, [x8, w9, uxtw #3]
    2078:	ldr	w9, [sp, #512]
    207c:	ldr	w8, [sp, #516]
    2080:	cmp	w9, w8
    2084:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2088:	add	x20, x20, #0x8
    208c:	add	w9, w9, #0x1
    2090:	cmp	x20, x24
    2094:	str	w9, [sp, #512]
    2098:	b.ne	1fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x13a4>  // b.any
    209c:	b	20e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x149c>
    20a0:	ldr	x1, [sp, #8]
    20a4:	add	x0, sp, #0x1f8
    20a8:	mov	w3, #0x8                   	// #8
    20ac:	mov	x2, xzr
    20b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    20b4:	ldr	w9, [sp, #512]
    20b8:	b	2070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x142c>
    20bc:	mov	w24, wzr
    20c0:	mov	w25, #0xf                   	// #15
    20c4:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    20c8:	mov	w24, wzr
    20cc:	mov	w25, #0x10                  	// #16
    20d0:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    20d4:	mov	w24, wzr
    20d8:	mov	w25, #0x16                  	// #22
    20dc:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    20e0:	ldr	w8, [x23, #8]
    20e4:	tbnz	w8, #10, 2138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x14f4>
    20e8:	lsl	w9, w8, #23
    20ec:	tst	w8, #0x100
    20f0:	mov	w8, #0x6                   	// #6
    20f4:	csel	w25, w8, w26, eq  // eq = none
    20f8:	ldr	w8, [sp, #24]
    20fc:	mov	x0, x23
    2100:	and	w24, w8, w9, asr #31
    2104:	bl	0 <_ZNK4llvm10StructType7getNameEv>
    2108:	cbz	x1, 23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    210c:	ldr	x26, [x19]
    2110:	mov	x0, x23
    2114:	bl	0 <_ZNK4llvm10StructType7getNameEv>
    2118:	ldr	w4, [sp, #16]
    211c:	mov	x2, x0
    2120:	mov	x3, x1
    2124:	mov	w1, #0x13                  	// #19
    2128:	mov	x0, x26
    212c:	mov	w26, #0x14                  	// #20
    2130:	bl	11698 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    2134:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    2138:	ldr	w24, [sp, #32]
    213c:	mov	w25, #0x12                  	// #18
    2140:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    2144:	add	x15, x11, x10, lsl #4
    2148:	add	x10, x11, x10, lsl #4
    214c:	cmp	x15, x10
    2150:	b.eq	5338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46f4>  // b.none
    2154:	ldr	w10, [x15, #8]
    2158:	cmp	w8, w9
    215c:	sub	w20, w10, #0x1
    2160:	b.cs	248c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1848>  // b.hs, b.nlast
    2164:	ldr	x9, [sp, #504]
    2168:	str	x20, [x9, w8, uxtw #3]
    216c:	ldr	w8, [sp, #512]
    2170:	ldr	w9, [sp, #516]
    2174:	cmp	w8, w9
    2178:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    217c:	add	w8, w8, #0x1
    2180:	str	w8, [sp, #512]
    2184:	ldrb	w10, [x23, #40]
    2188:	cbz	w10, 23cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1788>
    218c:	cmp	w8, w9
    2190:	b.cs	2518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x18d4>  // b.hs, b.nlast
    2194:	ldr	x9, [sp, #504]
    2198:	mov	w10, #0x1                   	// #1
    219c:	str	x10, [x9, w8, uxtw #3]
    21a0:	ldr	w8, [sp, #512]
    21a4:	ldr	w9, [sp, #516]
    21a8:	cmp	w8, w9
    21ac:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    21b0:	mov	w24, wzr
    21b4:	add	w8, w8, #0x1
    21b8:	str	w8, [sp, #512]
    21bc:	b	23d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x178c>
    21c0:	add	x15, x11, x10, lsl #4
    21c4:	add	x10, x11, x10, lsl #4
    21c8:	cmp	x15, x10
    21cc:	b.eq	5338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46f4>  // b.none
    21d0:	ldr	w10, [x15, #8]
    21d4:	cmp	w8, w9
    21d8:	sub	w20, w10, #0x1
    21dc:	b.cs	24a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1864>  // b.hs, b.nlast
    21e0:	ldr	x9, [sp, #504]
    21e4:	str	x20, [x9, w8, uxtw #3]
    21e8:	ldr	w8, [sp, #512]
    21ec:	ldr	w9, [sp, #516]
    21f0:	cmp	w8, w9
    21f4:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    21f8:	add	w8, w8, #0x1
    21fc:	str	w8, [sp, #512]
    2200:	mov	w25, #0xb                   	// #11
    2204:	mov	w24, w22
    2208:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    220c:	add	x15, x11, x10, lsl #4
    2210:	add	x10, x11, x10, lsl #4
    2214:	cmp	x15, x10
    2218:	b.eq	5338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46f4>  // b.none
    221c:	ldr	w10, [x15, #8]
    2220:	cmp	w8, w9
    2224:	sub	w20, w10, #0x1
    2228:	b.cs	24c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1880>  // b.hs, b.nlast
    222c:	ldr	x9, [sp, #504]
    2230:	str	x20, [x9, w8, uxtw #3]
    2234:	ldr	w9, [sp, #512]
    2238:	ldr	w8, [sp, #516]
    223c:	cmp	w9, w8
    2240:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2244:	add	w9, w9, #0x1
    2248:	str	w9, [sp, #512]
    224c:	ldr	w10, [x23, #12]
    2250:	subs	w10, w10, #0x1
    2254:	b.eq	2338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16f4>  // b.none
    2258:	mov	x20, xzr
    225c:	mov	w24, w10
    2260:	ldr	w10, [x19, #72]
    2264:	ldr	x11, [x19, #56]
    2268:	add	x20, x20, #0x1
    226c:	cbz	w10, 22d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x168c>
    2270:	ldr	x12, [x23, #16]
    2274:	ldr	x12, [x12, x20, lsl #3]
    2278:	orr	x13, x12, #0x8
    227c:	cmn	x13, #0x8
    2280:	b.eq	52d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4694>  // b.none
    2284:	ubfx	x13, x12, #4, #28
    2288:	eor	w14, w13, w12, lsr #9
    228c:	sub	w13, w10, #0x1
    2290:	and	w14, w14, w13
    2294:	add	x15, x11, w14, uxtw #4
    2298:	ldr	x16, [x15]
    229c:	cmp	x16, x12
    22a0:	b.eq	22d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1690>  // b.none
    22a4:	mov	w17, #0x1                   	// #1
    22a8:	cmn	x16, #0x8
    22ac:	b.eq	22d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x168c>  // b.none
    22b0:	add	w14, w14, w17
    22b4:	and	w14, w14, w13
    22b8:	add	x15, x11, w14, uxtw #4
    22bc:	ldr	x16, [x15]
    22c0:	add	w17, w17, #0x1
    22c4:	cmp	x16, x12
    22c8:	b.eq	22d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1690>  // b.none
    22cc:	b	22a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1664>
    22d0:	add	x15, x11, x10, lsl #4
    22d4:	add	x10, x11, x10, lsl #4
    22d8:	cmp	x15, x10
    22dc:	b.eq	5338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46f4>  // b.none
    22e0:	ldr	w10, [x15, #8]
    22e4:	cmp	w9, w8
    22e8:	sub	w25, w10, #0x1
    22ec:	b.cs	231c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16d8>  // b.hs, b.nlast
    22f0:	ldr	x8, [sp, #504]
    22f4:	str	x25, [x8, w9, uxtw #3]
    22f8:	ldr	w9, [sp, #512]
    22fc:	ldr	w8, [sp, #516]
    2300:	cmp	w9, w8
    2304:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2308:	add	w9, w9, #0x1
    230c:	cmp	x20, x24
    2310:	str	w9, [sp, #512]
    2314:	b.ne	2260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x161c>  // b.any
    2318:	b	2338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16f4>
    231c:	ldr	x1, [sp, #8]
    2320:	add	x0, sp, #0x1f8
    2324:	mov	w3, #0x8                   	// #8
    2328:	mov	x2, xzr
    232c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2330:	ldr	w9, [sp, #512]
    2334:	b	22f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16ac>
    2338:	ldr	w24, [sp, #40]
    233c:	mov	w25, #0x15                  	// #21
    2340:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    2344:	add	x13, x9, x8, lsl #4
    2348:	add	x8, x9, x8, lsl #4
    234c:	cmp	x13, x8
    2350:	b.eq	5338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46f4>  // b.none
    2354:	ldr	w8, [x13, #8]
    2358:	ldr	w9, [sp, #516]
    235c:	sub	w20, w8, #0x1
    2360:	cbz	w9, 24e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x189c>
    2364:	mov	w8, wzr
    2368:	ldr	x9, [sp, #504]
    236c:	str	x20, [x9, w8, uxtw #3]
    2370:	ldr	w8, [sp, #512]
    2374:	ldr	w9, [sp, #516]
    2378:	cmp	w8, w9
    237c:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2380:	add	w8, w8, #0x1
    2384:	str	w8, [sp, #512]
    2388:	ldr	w10, [x23, #8]
    238c:	cmp	w8, w9
    2390:	lsr	x20, x10, #8
    2394:	b.cs	24fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x18b8>  // b.hs, b.nlast
    2398:	ldr	x9, [sp, #504]
    239c:	str	x20, [x9, w8, uxtw #3]
    23a0:	ldr	w8, [sp, #512]
    23a4:	ldr	w9, [sp, #516]
    23a8:	cmp	w8, w9
    23ac:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    23b0:	add	w8, w8, #0x1
    23b4:	str	w8, [sp, #512]
    23b8:	ldr	w8, [sp, #48]
    23bc:	cmp	w20, #0x0
    23c0:	mov	w25, #0x8                   	// #8
    23c4:	csel	w24, w8, wzr, eq  // eq = none
    23c8:	b	23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1790>
    23cc:	mov	w24, wzr
    23d0:	mov	w25, #0xc                   	// #12
    23d4:	ldr	x0, [x19]
    23d8:	add	x2, sp, #0x1f8
    23dc:	mov	w1, w25
    23e0:	mov	w3, w24
    23e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    23e8:	add	x28, x28, #0x1
    23ec:	cmp	x28, x27
    23f0:	str	wzr, [sp, #512]
    23f4:	b.eq	2534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x18f0>  // b.none
    23f8:	ldr	x8, [x19, #80]
    23fc:	b	1c88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1044>
    2400:	ldr	x1, [sp, #8]
    2404:	add	x0, sp, #0x1f8
    2408:	mov	w3, #0x8                   	// #8
    240c:	mov	x2, xzr
    2410:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2414:	ldr	w8, [sp, #512]
    2418:	b	1cd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x108c>
    241c:	ldr	x1, [sp, #8]
    2420:	add	x0, sp, #0x1f8
    2424:	mov	w3, #0x8                   	// #8
    2428:	mov	x2, xzr
    242c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2430:	ldr	w8, [sp, #512]
    2434:	b	1d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1128>
    2438:	ldr	x1, [sp, #8]
    243c:	add	x0, sp, #0x1f8
    2440:	mov	w3, #0x8                   	// #8
    2444:	mov	x2, xzr
    2448:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    244c:	ldr	w8, [sp, #512]
    2450:	b	1e08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x11c4>
    2454:	ldr	x1, [sp, #8]
    2458:	add	x0, sp, #0x1f8
    245c:	mov	w3, #0x8                   	// #8
    2460:	mov	x2, xzr
    2464:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2468:	ldr	w8, [sp, #512]
    246c:	b	1e58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1214>
    2470:	ldr	x1, [sp, #8]
    2474:	add	x0, sp, #0x1f8
    2478:	mov	w3, #0x8                   	// #8
    247c:	mov	x2, xzr
    2480:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2484:	ldr	w8, [sp, #512]
    2488:	b	1fb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1374>
    248c:	ldr	x1, [sp, #8]
    2490:	add	x0, sp, #0x1f8
    2494:	mov	w3, #0x8                   	// #8
    2498:	mov	x2, xzr
    249c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    24a0:	ldr	w8, [sp, #512]
    24a4:	b	2164 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1520>
    24a8:	ldr	x1, [sp, #8]
    24ac:	add	x0, sp, #0x1f8
    24b0:	mov	w3, #0x8                   	// #8
    24b4:	mov	x2, xzr
    24b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    24bc:	ldr	w8, [sp, #512]
    24c0:	b	21e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x159c>
    24c4:	ldr	x1, [sp, #8]
    24c8:	add	x0, sp, #0x1f8
    24cc:	mov	w3, #0x8                   	// #8
    24d0:	mov	x2, xzr
    24d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    24d8:	ldr	w8, [sp, #512]
    24dc:	b	222c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x15e8>
    24e0:	ldr	x1, [sp, #8]
    24e4:	add	x0, sp, #0x1f8
    24e8:	mov	w3, #0x8                   	// #8
    24ec:	mov	x2, xzr
    24f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    24f4:	ldr	w8, [sp, #512]
    24f8:	b	2368 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1724>
    24fc:	ldr	x1, [sp, #8]
    2500:	add	x0, sp, #0x1f8
    2504:	mov	w3, #0x8                   	// #8
    2508:	mov	x2, xzr
    250c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2510:	ldr	w8, [sp, #512]
    2514:	b	2398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1754>
    2518:	ldr	x1, [sp, #8]
    251c:	add	x0, sp, #0x1f8
    2520:	mov	w3, #0x8                   	// #8
    2524:	mov	x2, xzr
    2528:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    252c:	ldr	w8, [sp, #512]
    2530:	b	2194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1550>
    2534:	ldr	x0, [x19]
    2538:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    253c:	ldr	x0, [sp, #504]
    2540:	add	x8, sp, #0x1f8
    2544:	add	x8, x8, #0x10
    2548:	cmp	x0, x8
    254c:	b.eq	2554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1910>  // b.none
    2550:	bl	0 <free>
    2554:	ldp	x8, x9, [x19, #384]
    2558:	cmp	x8, x9
    255c:	b.eq	2bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1fa8>  // b.none
    2560:	ldr	x0, [x19]
    2564:	mov	w1, #0xa                   	// #10
    2568:	mov	w2, #0x3                   	// #3
    256c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2570:	add	x8, sp, #0x1f8
    2574:	add	x8, x8, #0x10
    2578:	str	d9, [sp, #512]
    257c:	str	x8, [sp, #48]
    2580:	str	x8, [sp, #504]
    2584:	ldp	x22, x8, [x19, #384]
    2588:	cmp	x22, x8
    258c:	str	x8, [sp, #40]
    2590:	b.eq	2bd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f8c>  // b.none
    2594:	add	x24, x19, #0x160
    2598:	mov	w27, #0x1                   	// #1
    259c:	mov	w21, #0x18                  	// #24
    25a0:	b	25d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1990>
    25a4:	ldr	x0, [x19]
    25a8:	add	x2, sp, #0x1f8
    25ac:	mov	w1, #0x3                   	// #3
    25b0:	mov	w3, wzr
    25b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    25b8:	ldr	x8, [sp, #40]
    25bc:	add	x22, x22, #0x10
    25c0:	mov	x24, x21
    25c4:	mov	w21, #0x18                  	// #24
    25c8:	cmp	x22, x8
    25cc:	str	wzr, [sp, #512]
    25d0:	b.eq	2bd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f8c>  // b.none
    25d4:	ldp	x20, x8, [x22]
    25d8:	str	x8, [sp, #64]
    25dc:	stp	x20, x8, [sp, #144]
    25e0:	cbz	x8, 2608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x19c4>
    25e4:	add	x1, sp, #0x90
    25e8:	add	x2, sp, #0x1a0
    25ec:	mov	x0, x24
    25f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    25f4:	tbz	w0, #0, 2610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x19cc>
    25f8:	ldr	x8, [sp, #416]
    25fc:	ldr	x9, [x24, #8]
    2600:	ldr	w10, [x24, #24]
    2604:	b	261c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x19d8>
    2608:	mov	w9, wzr
    260c:	b	2630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x19ec>
    2610:	ldr	x9, [x24, #8]
    2614:	ldr	w10, [x24, #24]
    2618:	madd	x8, x10, x21, x9
    261c:	madd	x9, x10, x21, x9
    2620:	cmp	x8, x9
    2624:	b.eq	52b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4674>  // b.none
    2628:	ldr	w9, [x8, #16]
    262c:	ldr	w8, [sp, #512]
    2630:	ldr	w10, [sp, #516]
    2634:	mov	w23, w9
    2638:	cmp	w8, w10
    263c:	b.cs	2b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f54>  // b.hs, b.nlast
    2640:	ldr	x9, [sp, #504]
    2644:	str	x23, [x9, w8, uxtw #3]
    2648:	ldr	w8, [sp, #512]
    264c:	ldr	w9, [sp, #516]
    2650:	cmp	w8, w9
    2654:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2658:	add	w8, w8, #0x1
    265c:	and	x20, x20, #0xffffffff
    2660:	cmp	w8, w9
    2664:	str	w8, [sp, #512]
    2668:	b.cs	2bb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f70>  // b.hs, b.nlast
    266c:	ldr	x9, [sp, #504]
    2670:	str	x20, [x9, w8, uxtw #3]
    2674:	ldr	w8, [sp, #512]
    2678:	ldr	w9, [sp, #516]
    267c:	cmp	w8, w9
    2680:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2684:	add	w8, w8, #0x1
    2688:	add	x0, sp, #0x40
    268c:	mov	x21, x24
    2690:	str	w8, [sp, #512]
    2694:	bl	0 <_ZNK4llvm12AttributeSet5beginEv>
    2698:	mov	x23, x0
    269c:	add	x0, sp, #0x40
    26a0:	bl	0 <_ZNK4llvm12AttributeSet3endEv>
    26a4:	mov	x24, x0
    26a8:	cmp	x23, x0
    26ac:	b.eq	25a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1960>  // b.none
    26b0:	ldr	x8, [x23]
    26b4:	add	x0, sp, #0x90
    26b8:	str	x8, [sp, #144]
    26bc:	bl	0 <_ZNK4llvm9Attribute15isEnumAttributeEv>
    26c0:	tbz	w0, #0, 2704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1ac0>
    26c4:	ldr	w8, [sp, #512]
    26c8:	ldr	w9, [sp, #516]
    26cc:	cmp	w8, w9
    26d0:	b.cs	2a9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e58>  // b.hs, b.nlast
    26d4:	ldr	x9, [sp, #504]
    26d8:	str	xzr, [x9, w8, uxtw #3]
    26dc:	ldr	w8, [sp, #512]
    26e0:	ldr	w9, [sp, #516]
    26e4:	cmp	w8, w9
    26e8:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    26ec:	add	w8, w8, #0x1
    26f0:	add	x0, sp, #0x90
    26f4:	str	w8, [sp, #512]
    26f8:	bl	0 <_ZNK4llvm9Attribute13getKindAsEnumEv>
    26fc:	bl	11818 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>
    2700:	b	2788 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b44>
    2704:	add	x0, sp, #0x90
    2708:	bl	0 <_ZNK4llvm9Attribute14isIntAttributeEv>
    270c:	tbz	w0, #0, 27cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b88>
    2710:	ldr	w8, [sp, #512]
    2714:	ldr	w9, [sp, #516]
    2718:	cmp	w8, w9
    271c:	b.cs	2ab8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e74>  // b.hs, b.nlast
    2720:	ldr	x9, [sp, #504]
    2724:	str	x27, [x9, w8, uxtw #3]
    2728:	ldr	w8, [sp, #512]
    272c:	ldr	w9, [sp, #516]
    2730:	cmp	w8, w9
    2734:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2738:	add	w8, w8, #0x1
    273c:	add	x0, sp, #0x90
    2740:	str	w8, [sp, #512]
    2744:	bl	0 <_ZNK4llvm9Attribute13getKindAsEnumEv>
    2748:	bl	11818 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>
    274c:	ldr	w8, [sp, #512]
    2750:	ldr	w9, [sp, #516]
    2754:	mov	x25, x0
    2758:	cmp	w8, w9
    275c:	b.cs	2ad4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e90>  // b.hs, b.nlast
    2760:	ldr	x9, [sp, #504]
    2764:	str	x25, [x9, w8, uxtw #3]
    2768:	ldr	w8, [sp, #512]
    276c:	ldr	w9, [sp, #516]
    2770:	cmp	w8, w9
    2774:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2778:	add	w8, w8, #0x1
    277c:	add	x0, sp, #0x90
    2780:	str	w8, [sp, #512]
    2784:	bl	0 <_ZNK4llvm9Attribute13getValueAsIntEv>
    2788:	ldr	w8, [sp, #512]
    278c:	ldr	w9, [sp, #516]
    2790:	mov	x25, x0
    2794:	cmp	w8, w9
    2798:	b.cs	2a80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e3c>  // b.hs, b.nlast
    279c:	ldr	x9, [sp, #504]
    27a0:	str	x25, [x9, w8, uxtw #3]
    27a4:	ldr	w8, [sp, #512]
    27a8:	ldr	w9, [sp, #516]
    27ac:	cmp	w8, w9
    27b0:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    27b4:	add	w8, w8, #0x1
    27b8:	str	w8, [sp, #512]
    27bc:	add	x23, x23, #0x8
    27c0:	cmp	x23, x24
    27c4:	b.ne	26b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1a6c>  // b.any
    27c8:	b	25a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1960>
    27cc:	add	x0, sp, #0x90
    27d0:	bl	0 <_ZNK4llvm9Attribute17isStringAttributeEv>
    27d4:	tbz	w0, #0, 2948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d04>
    27d8:	add	x0, sp, #0x90
    27dc:	bl	0 <_ZNK4llvm9Attribute15getKindAsStringEv>
    27e0:	mov	x28, x0
    27e4:	add	x0, sp, #0x90
    27e8:	mov	x27, x1
    27ec:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
    27f0:	ldr	w8, [sp, #512]
    27f4:	ldr	w9, [sp, #516]
    27f8:	cmp	x1, #0x0
    27fc:	mov	w10, #0x3                   	// #3
    2800:	mov	x25, x1
    2804:	cinc	x20, x10, ne  // ne = any
    2808:	cmp	w8, w9
    280c:	mov	x26, x0
    2810:	b.cs	2af0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1eac>  // b.hs, b.nlast
    2814:	ldr	x9, [sp, #504]
    2818:	str	x20, [x9, w8, uxtw #3]
    281c:	ldr	w8, [sp, #512]
    2820:	ldr	w9, [sp, #516]
    2824:	cmp	w8, w9
    2828:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    282c:	add	x8, x8, #0x1
    2830:	sub	x9, x9, x8
    2834:	cmp	x27, x9
    2838:	str	w8, [sp, #512]
    283c:	b.ls	2858 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c14>  // b.plast
    2840:	ldr	x1, [sp, #48]
    2844:	add	x2, x27, x8
    2848:	add	x0, sp, #0x1f8
    284c:	mov	w3, #0x8                   	// #8
    2850:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2854:	ldr	w8, [sp, #512]
    2858:	cmp	x27, #0x1
    285c:	b.lt	2888 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c44>  // b.tstop
    2860:	ldr	x9, [sp, #504]
    2864:	add	x10, x28, x27
    2868:	sub	x10, x10, x28
    286c:	add	x10, x10, #0x1
    2870:	add	x9, x9, x8, lsl #3
    2874:	ldrb	w11, [x28], #1
    2878:	sub	x10, x10, #0x1
    287c:	cmp	x10, #0x1
    2880:	str	x11, [x9], #8
    2884:	b.gt	2874 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c30>
    2888:	ldr	w9, [sp, #516]
    288c:	add	x8, x8, x27
    2890:	cmp	x8, x9
    2894:	b.hi	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.pmore
    2898:	cmp	w9, w8
    289c:	mov	w27, #0x1                   	// #1
    28a0:	str	w8, [sp, #512]
    28a4:	b.ls	2b0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1ec8>  // b.plast
    28a8:	ldr	x9, [sp, #504]
    28ac:	str	xzr, [x9, w8, uxtw #3]
    28b0:	ldr	w8, [sp, #512]
    28b4:	ldr	w9, [sp, #516]
    28b8:	cmp	w8, w9
    28bc:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    28c0:	add	x8, x8, #0x1
    28c4:	str	w8, [sp, #512]
    28c8:	cbz	x25, 27bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b78>
    28cc:	sub	x9, x9, x8
    28d0:	cmp	x25, x9
    28d4:	b.ls	28f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1cac>  // b.plast
    28d8:	ldr	x1, [sp, #48]
    28dc:	add	x2, x25, x8
    28e0:	add	x0, sp, #0x1f8
    28e4:	mov	w3, #0x8                   	// #8
    28e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    28ec:	ldr	w8, [sp, #512]
    28f0:	cmp	x25, #0x1
    28f4:	b.lt	2920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1cdc>  // b.tstop
    28f8:	ldr	x9, [sp, #504]
    28fc:	add	x10, x26, x25
    2900:	sub	x10, x10, x26
    2904:	add	x10, x10, #0x1
    2908:	add	x9, x9, x8, lsl #3
    290c:	ldrb	w11, [x26], #1
    2910:	sub	x10, x10, #0x1
    2914:	cmp	x10, #0x1
    2918:	str	x11, [x9], #8
    291c:	b.gt	290c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1cc8>
    2920:	ldr	w9, [sp, #516]
    2924:	add	x8, x8, x25
    2928:	cmp	x8, x9
    292c:	b.hi	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.pmore
    2930:	cmp	w9, w8
    2934:	str	w8, [sp, #512]
    2938:	b.ls	2b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f1c>  // b.plast
    293c:	ldr	x9, [sp, #504]
    2940:	str	xzr, [x9, w8, uxtw #3]
    2944:	b	27a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b60>
    2948:	add	x0, sp, #0x90
    294c:	bl	0 <_ZNK4llvm9Attribute15isTypeAttributeEv>
    2950:	tbz	w0, #0, 5358 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4714>
    2954:	add	x0, sp, #0x90
    2958:	bl	0 <_ZNK4llvm9Attribute14getValueAsTypeEv>
    295c:	ldr	w8, [sp, #512]
    2960:	ldr	w9, [sp, #516]
    2964:	cmp	x0, #0x0
    2968:	mov	w10, #0x5                   	// #5
    296c:	mov	x25, x0
    2970:	cinc	x20, x10, ne  // ne = any
    2974:	cmp	w8, w9
    2978:	b.cs	2b28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1ee4>  // b.hs, b.nlast
    297c:	ldr	x9, [sp, #504]
    2980:	str	x20, [x9, w8, uxtw #3]
    2984:	ldr	w8, [sp, #512]
    2988:	ldr	w9, [sp, #516]
    298c:	cmp	w8, w9
    2990:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2994:	add	w8, w8, #0x1
    2998:	add	x0, sp, #0x90
    299c:	str	w8, [sp, #512]
    29a0:	bl	0 <_ZNK4llvm9Attribute13getKindAsEnumEv>
    29a4:	bl	11818 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>
    29a8:	ldr	w8, [sp, #512]
    29ac:	ldr	w9, [sp, #516]
    29b0:	mov	x26, x0
    29b4:	cmp	w8, w9
    29b8:	b.cs	2b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f00>  // b.hs, b.nlast
    29bc:	ldr	x9, [sp, #504]
    29c0:	str	x26, [x9, w8, uxtw #3]
    29c4:	ldr	w8, [sp, #512]
    29c8:	ldr	w9, [sp, #516]
    29cc:	cmp	w8, w9
    29d0:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    29d4:	add	w8, w8, #0x1
    29d8:	str	w8, [sp, #512]
    29dc:	cbz	x25, 27bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b78>
    29e0:	add	x0, sp, #0x90
    29e4:	bl	0 <_ZNK4llvm9Attribute14getValueAsTypeEv>
    29e8:	ldr	w8, [x19, #72]
    29ec:	ldr	x9, [x19, #56]
    29f0:	cbz	w8, 2a4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e08>
    29f4:	orr	x10, x0, #0x8
    29f8:	cmn	x10, #0x8
    29fc:	b.eq	52d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4694>  // b.none
    2a00:	ubfx	x10, x0, #4, #28
    2a04:	eor	w11, w10, w0, lsr #9
    2a08:	sub	w10, w8, #0x1
    2a0c:	and	w11, w11, w10
    2a10:	add	x12, x9, w11, uxtw #4
    2a14:	ldr	x13, [x12]
    2a18:	cmp	x13, x0
    2a1c:	b.eq	2a50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e0c>  // b.none
    2a20:	mov	w14, #0x1                   	// #1
    2a24:	cmn	x13, #0x8
    2a28:	b.eq	2a4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e08>  // b.none
    2a2c:	add	w11, w11, w14
    2a30:	and	w11, w11, w10
    2a34:	add	x12, x9, w11, uxtw #4
    2a38:	ldr	x13, [x12]
    2a3c:	add	w14, w14, #0x1
    2a40:	cmp	x13, x0
    2a44:	b.eq	2a50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e0c>  // b.none
    2a48:	b	2a24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1de0>
    2a4c:	add	x12, x9, x8, lsl #4
    2a50:	add	x8, x9, x8, lsl #4
    2a54:	cmp	x12, x8
    2a58:	b.eq	5338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46f4>  // b.none
    2a5c:	ldr	w8, [sp, #512]
    2a60:	ldr	w9, [sp, #516]
    2a64:	ldr	w10, [x12, #8]
    2a68:	cmp	w8, w9
    2a6c:	sub	w20, w10, #0x1
    2a70:	b.cs	2b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f38>  // b.hs, b.nlast
    2a74:	ldr	x9, [sp, #504]
    2a78:	str	x20, [x9, w8, uxtw #3]
    2a7c:	b	27a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b60>
    2a80:	ldr	x1, [sp, #48]
    2a84:	add	x0, sp, #0x1f8
    2a88:	mov	w3, #0x8                   	// #8
    2a8c:	mov	x2, xzr
    2a90:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a94:	ldr	w8, [sp, #512]
    2a98:	b	279c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b58>
    2a9c:	ldr	x1, [sp, #48]
    2aa0:	add	x0, sp, #0x1f8
    2aa4:	mov	w3, #0x8                   	// #8
    2aa8:	mov	x2, xzr
    2aac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ab0:	ldr	w8, [sp, #512]
    2ab4:	b	26d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1a90>
    2ab8:	ldr	x1, [sp, #48]
    2abc:	add	x0, sp, #0x1f8
    2ac0:	mov	w3, #0x8                   	// #8
    2ac4:	mov	x2, xzr
    2ac8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2acc:	ldr	w8, [sp, #512]
    2ad0:	b	2720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1adc>
    2ad4:	ldr	x1, [sp, #48]
    2ad8:	add	x0, sp, #0x1f8
    2adc:	mov	w3, #0x8                   	// #8
    2ae0:	mov	x2, xzr
    2ae4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ae8:	ldr	w8, [sp, #512]
    2aec:	b	2760 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b1c>
    2af0:	ldr	x1, [sp, #48]
    2af4:	add	x0, sp, #0x1f8
    2af8:	mov	w3, #0x8                   	// #8
    2afc:	mov	x2, xzr
    2b00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b04:	ldr	w8, [sp, #512]
    2b08:	b	2814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1bd0>
    2b0c:	ldr	x1, [sp, #48]
    2b10:	add	x0, sp, #0x1f8
    2b14:	mov	w3, #0x8                   	// #8
    2b18:	mov	x2, xzr
    2b1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b20:	ldr	w8, [sp, #512]
    2b24:	b	28a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c64>
    2b28:	ldr	x1, [sp, #48]
    2b2c:	add	x0, sp, #0x1f8
    2b30:	mov	w3, #0x8                   	// #8
    2b34:	mov	x2, xzr
    2b38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b3c:	ldr	w8, [sp, #512]
    2b40:	b	297c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d38>
    2b44:	ldr	x1, [sp, #48]
    2b48:	add	x0, sp, #0x1f8
    2b4c:	mov	w3, #0x8                   	// #8
    2b50:	mov	x2, xzr
    2b54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b58:	ldr	w8, [sp, #512]
    2b5c:	b	29bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d78>
    2b60:	ldr	x1, [sp, #48]
    2b64:	add	x0, sp, #0x1f8
    2b68:	mov	w3, #0x8                   	// #8
    2b6c:	mov	x2, xzr
    2b70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b74:	ldr	w8, [sp, #512]
    2b78:	b	293c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1cf8>
    2b7c:	ldr	x1, [sp, #48]
    2b80:	add	x0, sp, #0x1f8
    2b84:	mov	w3, #0x8                   	// #8
    2b88:	mov	x2, xzr
    2b8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b90:	ldr	w8, [sp, #512]
    2b94:	b	2a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e30>
    2b98:	ldr	x1, [sp, #48]
    2b9c:	add	x0, sp, #0x1f8
    2ba0:	mov	w3, #0x8                   	// #8
    2ba4:	mov	x2, xzr
    2ba8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2bac:	ldr	w8, [sp, #512]
    2bb0:	b	2640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x19fc>
    2bb4:	ldr	x1, [sp, #48]
    2bb8:	add	x0, sp, #0x1f8
    2bbc:	mov	w3, #0x8                   	// #8
    2bc0:	mov	x2, xzr
    2bc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2bc8:	ldr	w8, [sp, #512]
    2bcc:	b	266c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1a28>
    2bd0:	ldr	x0, [x19]
    2bd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2bd8:	ldr	x0, [sp, #504]
    2bdc:	ldr	x8, [sp, #48]
    2be0:	cmp	x0, x8
    2be4:	b.eq	2bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1fa8>  // b.none
    2be8:	bl	0 <free>
    2bec:	ldp	x8, x9, [x19, #440]
    2bf0:	cmp	x8, x9
    2bf4:	b.eq	2d50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x210c>  // b.none
    2bf8:	ldr	x0, [x19]
    2bfc:	mov	w1, #0x9                   	// #9
    2c00:	mov	w2, #0x3                   	// #3
    2c04:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2c08:	add	x8, sp, #0x1f8
    2c0c:	add	x21, x8, #0x10
    2c10:	str	d9, [sp, #512]
    2c14:	str	x21, [sp, #504]
    2c18:	ldp	x8, x9, [x19, #440]
    2c1c:	sub	x9, x9, x8
    2c20:	lsr	x10, x9, #3
    2c24:	cbz	w10, 2d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x20f4>
    2c28:	mov	x20, xzr
    2c2c:	add	x22, x19, #0x160
    2c30:	ubfx	x25, x9, #3, #32
    2c34:	mov	w26, #0x18                  	// #24
    2c38:	ldr	x8, [x8, x20, lsl #3]
    2c3c:	add	x0, sp, #0x40
    2c40:	str	x8, [sp, #64]
    2c44:	bl	0 <_ZNK4llvm13AttributeList14getNumAttrSetsEv>
    2c48:	cbz	w0, 2d0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x20c8>
    2c4c:	mov	w23, w0
    2c50:	mov	w27, wzr
    2c54:	b	2c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2040>
    2c58:	ldr	x8, [sp, #504]
    2c5c:	str	x24, [x8, w9, uxtw #3]
    2c60:	ldr	w8, [sp, #512]
    2c64:	ldr	w9, [sp, #516]
    2c68:	cmp	w8, w9
    2c6c:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2c70:	add	w8, w8, #0x1
    2c74:	str	w8, [sp, #512]
    2c78:	add	w27, w27, #0x1
    2c7c:	cmp	w23, w27
    2c80:	b.eq	2d0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x20c8>  // b.none
    2c84:	sub	w24, w27, #0x1
    2c88:	add	x0, sp, #0x40
    2c8c:	mov	w1, w24
    2c90:	bl	0 <_ZNK4llvm13AttributeList13getAttributesEj>
    2c94:	cbz	x0, 2c78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2034>
    2c98:	mov	w8, w24
    2c9c:	stp	x8, x0, [sp, #144]
    2ca0:	add	x1, sp, #0x90
    2ca4:	add	x2, sp, #0x1a0
    2ca8:	mov	x0, x22
    2cac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2cb0:	tbz	w0, #0, 2cc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2080>
    2cb4:	ldr	x8, [sp, #416]
    2cb8:	ldr	x9, [x22, #8]
    2cbc:	ldr	w10, [x22, #24]
    2cc0:	b	2cd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x208c>
    2cc4:	ldr	x9, [x22, #8]
    2cc8:	ldr	w10, [x22, #24]
    2ccc:	madd	x8, x10, x26, x9
    2cd0:	madd	x9, x10, x26, x9
    2cd4:	cmp	x8, x9
    2cd8:	b.eq	52b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4674>  // b.none
    2cdc:	ldr	w9, [sp, #512]
    2ce0:	ldr	w10, [sp, #516]
    2ce4:	ldr	w24, [x8, #16]
    2ce8:	cmp	w9, w10
    2cec:	b.cc	2c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2014>  // b.lo, b.ul, b.last
    2cf0:	add	x0, sp, #0x1f8
    2cf4:	mov	w3, #0x8                   	// #8
    2cf8:	mov	x1, x21
    2cfc:	mov	x2, xzr
    2d00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2d04:	ldr	w9, [sp, #512]
    2d08:	b	2c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2014>
    2d0c:	ldr	x0, [x19]
    2d10:	add	x2, sp, #0x1f8
    2d14:	mov	w1, #0x2                   	// #2
    2d18:	mov	w3, wzr
    2d1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2d20:	add	x20, x20, #0x1
    2d24:	cmp	x20, x25
    2d28:	str	wzr, [sp, #512]
    2d2c:	b.eq	2d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x20f4>  // b.none
    2d30:	ldr	x8, [x19, #440]
    2d34:	b	2c38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1ff4>
    2d38:	ldr	x0, [x19]
    2d3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2d40:	ldr	x0, [sp, #504]
    2d44:	cmp	x0, x21
    2d48:	b.eq	2d50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x210c>  // b.none
    2d4c:	bl	0 <free>
    2d50:	add	x8, sp, #0x1f8
    2d54:	add	x21, x8, #0x10
    2d58:	str	d9, [sp, #512]
    2d5c:	str	x21, [sp, #504]
    2d60:	ldp	x20, x27, [x19, #208]
    2d64:	cmp	x20, x27
    2d68:	b.eq	2f10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x22cc>  // b.none
    2d6c:	add	x22, x19, #0x2a8
    2d70:	ldr	x23, [x20]
    2d74:	mov	x0, x23
    2d78:	bl	0 <_ZNK4llvm6Comdat7getNameEv>
    2d7c:	ldrb	w8, [x19, #664]
    2d80:	mov	x24, x0
    2d84:	mov	x25, x1
    2d88:	cbz	w8, 2d9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2158>
    2d8c:	mov	x0, x22
    2d90:	mov	x1, x24
    2d94:	mov	x2, x25
    2d98:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    2d9c:	cmn	x24, #0x2
    2da0:	b.eq	5398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4754>  // b.none
    2da4:	cmn	x24, #0x1
    2da8:	b.eq	53b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4774>  // b.none
    2dac:	ldr	x26, [x19, #8]
    2db0:	mov	x0, x24
    2db4:	mov	x1, x25
    2db8:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    2dbc:	lsr	x8, x25, #32
    2dc0:	cbnz	x8, 53d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4794>
    2dc4:	orr	x2, x25, x0, lsl #32
    2dc8:	mov	x0, x26
    2dcc:	mov	x1, x24
    2dd0:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    2dd4:	ldr	w8, [sp, #512]
    2dd8:	ldr	w9, [sp, #516]
    2ddc:	mov	x24, x0
    2de0:	cmp	w8, w9
    2de4:	b.cs	2ea4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2260>  // b.hs, b.nlast
    2de8:	ldr	x9, [sp, #504]
    2dec:	str	w24, [x9, w8, uxtw #2]
    2df0:	ldr	w8, [sp, #512]
    2df4:	ldr	w9, [sp, #516]
    2df8:	cmp	w8, w9
    2dfc:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2e00:	add	w8, w8, #0x1
    2e04:	mov	x0, x23
    2e08:	str	w8, [sp, #512]
    2e0c:	bl	0 <_ZNK4llvm6Comdat7getNameEv>
    2e10:	ldr	w8, [sp, #512]
    2e14:	ldr	w9, [sp, #516]
    2e18:	mov	x24, x1
    2e1c:	cmp	w8, w9
    2e20:	b.cs	2ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x227c>  // b.hs, b.nlast
    2e24:	ldr	x9, [sp, #504]
    2e28:	str	w24, [x9, w8, uxtw #2]
    2e2c:	ldr	w8, [sp, #512]
    2e30:	ldr	w9, [sp, #516]
    2e34:	cmp	w8, w9
    2e38:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2e3c:	add	w8, w8, #0x1
    2e40:	str	w8, [sp, #512]
    2e44:	ldr	w10, [x23, #8]
    2e48:	cmp	w10, #0x5
    2e4c:	b.cs	53f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x47b4>  // b.hs, b.nlast
    2e50:	cmp	w8, w9
    2e54:	add	w23, w10, #0x1
    2e58:	b.cs	2edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2298>  // b.hs, b.nlast
    2e5c:	ldr	x9, [sp, #504]
    2e60:	str	w23, [x9, w8, uxtw #2]
    2e64:	ldr	w8, [sp, #512]
    2e68:	ldr	w9, [sp, #516]
    2e6c:	cmp	w8, w9
    2e70:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2e74:	add	w8, w8, #0x1
    2e78:	str	w8, [sp, #512]
    2e7c:	ldr	x0, [x19]
    2e80:	add	x2, sp, #0x1f8
    2e84:	mov	w1, #0xc                   	// #12
    2e88:	mov	w3, wzr
    2e8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2e90:	add	x20, x20, #0x8
    2e94:	cmp	x27, x20
    2e98:	str	wzr, [sp, #512]
    2e9c:	b.ne	2d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x212c>  // b.any
    2ea0:	b	2ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x22b4>
    2ea4:	add	x0, sp, #0x1f8
    2ea8:	mov	w3, #0x4                   	// #4
    2eac:	mov	x1, x21
    2eb0:	mov	x2, xzr
    2eb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2eb8:	ldr	w8, [sp, #512]
    2ebc:	b	2de8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x21a4>
    2ec0:	add	x0, sp, #0x1f8
    2ec4:	mov	w3, #0x4                   	// #4
    2ec8:	mov	x1, x21
    2ecc:	mov	x2, xzr
    2ed0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ed4:	ldr	w8, [sp, #512]
    2ed8:	b	2e24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x21e0>
    2edc:	add	x0, sp, #0x1f8
    2ee0:	mov	w3, #0x4                   	// #4
    2ee4:	mov	x1, x21
    2ee8:	mov	x2, xzr
    2eec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ef0:	ldr	w8, [sp, #512]
    2ef4:	b	2e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2218>
    2ef8:	ldr	x0, [sp, #504]
    2efc:	add	x8, sp, #0x1f8
    2f00:	add	x8, x8, #0x10
    2f04:	cmp	x0, x8
    2f08:	b.eq	2f10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x22cc>  // b.none
    2f0c:	bl	0 <free>
    2f10:	mov	x0, x19
    2f14:	bl	b838 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv>
    2f18:	ldp	x8, x9, [x19, #136]
    2f1c:	ldr	x27, [sp, #56]
    2f20:	sub	x9, x9, x8
    2f24:	lsr	x2, x9, #4
    2f28:	cbz	w2, 2f78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2334>
    2f2c:	mov	w1, wzr
    2f30:	b	2f40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x22fc>
    2f34:	add	w1, w1, #0x1
    2f38:	cmp	w2, w1
    2f3c:	b.eq	2f78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2334>  // b.none
    2f40:	mov	w9, w1
    2f44:	lsl	x9, x9, #4
    2f48:	ldr	x9, [x8, x9]
    2f4c:	cbz	x9, 5430 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x47ec>
    2f50:	ldrb	w9, [x9, #16]
    2f54:	cbz	w9, 2f34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x22f0>
    2f58:	cmp	w9, #0x3
    2f5c:	b.eq	2f34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x22f0>  // b.none
    2f60:	sub	w9, w9, #0x1
    2f64:	cmp	w9, #0x2
    2f68:	b.cc	2f34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x22f0>  // b.lo, b.ul, b.last
    2f6c:	mov	w3, #0x1                   	// #1
    2f70:	mov	x0, x19
    2f74:	bl	11b84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb>
    2f78:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2f7c:	ldr	d10, [x9]
    2f80:	add	x8, sp, #0x1f8
    2f84:	add	x21, x8, #0x10
    2f88:	add	x8, sp, #0x90
    2f8c:	add	x20, x8, #0x10
    2f90:	str	d9, [sp, #512]
    2f94:	str	x21, [sp, #504]
    2f98:	str	x20, [sp, #144]
    2f9c:	str	d10, [sp, #152]
    2fa0:	ldr	x0, [x19, #16]
    2fa4:	add	x1, sp, #0x90
    2fa8:	bl	0 <_ZNK4llvm6Module14getMDKindNamesERNS_15SmallVectorImplINS_9StringRefEEE>
    2fac:	ldr	w8, [sp, #152]
    2fb0:	cbz	w8, 30cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2488>
    2fb4:	ldr	x0, [x19]
    2fb8:	mov	w1, #0x16                  	// #22
    2fbc:	mov	w2, #0x3                   	// #3
    2fc0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2fc4:	ldr	w22, [sp, #152]
    2fc8:	cbz	w22, 30c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2480>
    2fcc:	ldr	w8, [sp, #512]
    2fd0:	mov	w9, wzr
    2fd4:	ldr	w10, [sp, #516]
    2fd8:	mov	w23, w9
    2fdc:	cmp	w8, w10
    2fe0:	b.cs	30a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2464>  // b.hs, b.nlast
    2fe4:	ldr	x9, [sp, #504]
    2fe8:	str	x23, [x9, w8, uxtw #3]
    2fec:	ldr	w8, [sp, #512]
    2ff0:	ldr	w9, [sp, #516]
    2ff4:	cmp	w8, w9
    2ff8:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    2ffc:	ldr	w10, [sp, #152]
    3000:	add	x8, x8, #0x1
    3004:	str	w8, [sp, #512]
    3008:	cmp	w10, w23
    300c:	b.ls	5450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x480c>  // b.plast
    3010:	ldr	x10, [sp, #144]
    3014:	sub	x9, x9, x8
    3018:	add	x10, x10, x23, lsl #4
    301c:	ldp	x25, x24, [x10]
    3020:	cmp	x24, x9
    3024:	b.ls	3040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x23fc>  // b.plast
    3028:	add	x2, x24, x8
    302c:	add	x0, sp, #0x1f8
    3030:	mov	w3, #0x8                   	// #8
    3034:	mov	x1, x21
    3038:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    303c:	ldr	w8, [sp, #512]
    3040:	cmp	x24, #0x1
    3044:	b.lt	3068 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2424>  // b.tstop
    3048:	ldr	x9, [sp, #504]
    304c:	add	x10, x24, #0x1
    3050:	add	x9, x9, x8, lsl #3
    3054:	ldrb	w11, [x25], #1
    3058:	sub	x10, x10, #0x1
    305c:	cmp	x10, #0x1
    3060:	str	x11, [x9], #8
    3064:	b.gt	3054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2410>
    3068:	ldr	w9, [sp, #516]
    306c:	add	x8, x8, x24
    3070:	cmp	x8, x9
    3074:	b.hi	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.pmore
    3078:	str	w8, [sp, #512]
    307c:	ldr	x0, [x19]
    3080:	add	x2, sp, #0x1f8
    3084:	mov	w1, #0x6                   	// #6
    3088:	mov	w3, wzr
    308c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3090:	add	w9, w23, #0x1
    3094:	mov	w8, wzr
    3098:	cmp	w9, w22
    309c:	str	wzr, [sp, #512]
    30a0:	b.ne	2fd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2390>  // b.any
    30a4:	b	30c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2480>
    30a8:	add	x0, sp, #0x1f8
    30ac:	mov	w3, #0x8                   	// #8
    30b0:	mov	x1, x21
    30b4:	mov	x2, xzr
    30b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    30bc:	ldr	w8, [sp, #512]
    30c0:	b	2fe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x23a0>
    30c4:	ldr	x0, [x19]
    30c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    30cc:	ldr	x0, [sp, #144]
    30d0:	cmp	x0, x20
    30d4:	b.eq	30dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2498>  // b.none
    30d8:	bl	0 <free>
    30dc:	ldr	x0, [sp, #504]
    30e0:	add	x8, sp, #0x1f8
    30e4:	add	x8, x8, #0x10
    30e8:	cmp	x0, x8
    30ec:	b.eq	30f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x24b0>  // b.none
    30f0:	bl	0 <free>
    30f4:	ldp	x9, x8, [x19, #232]
    30f8:	ldr	w10, [x19, #564]
    30fc:	adrp	x28, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3100:	sub	x8, x8, x9
    3104:	cmp	x10, x8, asr #3
    3108:	b.cc	3120 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x24dc>  // b.lo, b.ul, b.last
    310c:	ldr	x8, [x19, #16]
    3110:	ldr	x9, [x8, #72]!
    3114:	and	x9, x9, #0xfffffffffffffff8
    3118:	cmp	x8, x9
    311c:	b.eq	3e08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31c4>  // b.none
    3120:	ldr	x0, [x19]
    3124:	mov	w1, #0xf                   	// #15
    3128:	mov	w2, #0x4                   	// #4
    312c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3130:	add	x8, sp, #0x1f8
    3134:	add	x21, x8, #0x10
    3138:	mov	w0, #0x70                  	// #112
    313c:	str	d9, [sp, #512]
    3140:	stp	xzr, xzr, [sp, #416]
    3144:	str	x21, [sp, #504]
    3148:	str	xzr, [sp, #432]
    314c:	bl	0 <_Znwm>
    3150:	ldp	x23, x8, [sp, #416]
    3154:	mov	x22, x0
    3158:	movi	v0.2d, #0x0
    315c:	stp	q0, q0, [x0, #80]
    3160:	sub	x2, x8, x23
    3164:	cmp	x2, #0x1
    3168:	stp	q0, q0, [x0, #48]
    316c:	stp	q0, q0, [x0, #16]
    3170:	str	q0, [x0]
    3174:	b.lt	3184 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2540>  // b.tstop
    3178:	mov	x0, x22
    317c:	mov	x1, x23
    3180:	bl	0 <memmove>
    3184:	cbz	x23, 3190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x254c>
    3188:	mov	x0, x23
    318c:	bl	0 <_ZdlPv>
    3190:	add	x8, x22, #0x70
    3194:	mov	x0, x19
    3198:	stp	x22, x8, [sp, #416]
    319c:	str	x8, [sp, #432]
    31a0:	bl	14a38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv>
    31a4:	ldr	x8, [sp, #416]
    31a8:	str	w0, [x8, #4]
    31ac:	mov	x0, x19
    31b0:	bl	14e40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv>
    31b4:	ldr	x8, [sp, #416]
    31b8:	str	w0, [x8, #16]
    31bc:	mov	w0, #0x220                 	// #544
    31c0:	bl	0 <_Znwm>
    31c4:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    31c8:	ldr	x8, [x8]
    31cc:	movi	v0.2s, #0x1
    31d0:	str	d0, [x0, #8]
    31d4:	movi	v0.2d, #0x0
    31d8:	add	x8, x8, #0x10
    31dc:	mov	x9, x0
    31e0:	mov	x1, x0
    31e4:	mov	w10, #0x26                  	// #38
    31e8:	str	x8, [x0]
    31ec:	stp	q0, q0, [x0, #48]
    31f0:	stp	q0, q0, [x0, #80]
    31f4:	stp	q0, q0, [x0, #112]
    31f8:	stp	q0, q0, [x0, #144]
    31fc:	stp	q0, q0, [x0, #176]
    3200:	stp	q0, q0, [x0, #208]
    3204:	stp	q0, q0, [x0, #240]
    3208:	stp	q0, q0, [x0, #272]
    320c:	stp	q0, q0, [x0, #304]
    3210:	stp	q0, q0, [x0, #336]
    3214:	stp	q0, q0, [x0, #368]
    3218:	stp	q0, q0, [x0, #400]
    321c:	stp	q0, q0, [x0, #432]
    3220:	stp	q0, q0, [x0, #464]
    3224:	stp	q0, q0, [x0, #496]
    3228:	str	q0, [x9, #32]!
    322c:	str	q0, [x0, #528]
    3230:	str	x9, [x1, #16]!
    3234:	str	x10, [x9]
    3238:	str	d8, [x0, #24]
    323c:	mov	w11, #0xff                  	// #255
    3240:	ldp	w8, w10, [x0, #24]
    3244:	ldur	w9, [sp, #147]
    3248:	strb	w11, [x0, #40]
    324c:	ldr	w11, [sp, #144]
    3250:	mov	w12, #0x20                  	// #32
    3254:	mov	w13, #0x2                   	// #2
    3258:	cmp	w8, w10
    325c:	str	x12, [x0, #48]
    3260:	strb	w13, [x0, #56]
    3264:	str	x12, [x0, #64]
    3268:	strb	w13, [x0, #72]
    326c:	str	w9, [x0, #76]
    3270:	stur	w11, [x0, #73]
    3274:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    3278:	add	w8, w8, #0x1
    327c:	str	w8, [x0, #24]
    3280:	ldr	x22, [x19]
    3284:	stp	x1, x0, [sp, #128]
    3288:	mov	x0, x22
    328c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3290:	ldp	x1, x8, [x22, #32]
    3294:	add	x23, x22, #0x18
    3298:	cmp	x1, x8
    329c:	b.eq	32cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2688>  // b.none
    32a0:	str	xzr, [x1, #8]
    32a4:	ldr	q0, [sp, #128]
    32a8:	add	x20, x1, #0x10
    32ac:	str	xzr, [sp, #136]
    32b0:	str	q0, [x1]
    32b4:	str	xzr, [sp, #128]
    32b8:	str	x20, [x22, #32]
    32bc:	ldr	x22, [sp, #136]
    32c0:	ldr	x24, [x23]
    32c4:	cbnz	x22, 32e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x26a4>
    32c8:	b	3370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x272c>
    32cc:	add	x2, sp, #0x80
    32d0:	mov	x0, x23
    32d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    32d8:	ldr	x20, [x22, #32]
    32dc:	ldr	x22, [sp, #136]
    32e0:	ldr	x24, [x23]
    32e4:	cbz	x22, 3370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x272c>
    32e8:	adrp	x9, 0 <__pthread_key_create>
    32ec:	ldr	x9, [x9]
    32f0:	add	x8, x22, #0x8
    32f4:	cbz	x9, 3314 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x26d0>
    32f8:	ldaxr	w9, [x8]
    32fc:	sub	w10, w9, #0x1
    3300:	stlxr	w11, w10, [x8]
    3304:	cbnz	w11, 32f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x26b4>
    3308:	cmp	w9, #0x1
    330c:	b.eq	3328 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x26e4>  // b.none
    3310:	b	3370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x272c>
    3314:	ldr	w9, [x8]
    3318:	sub	w10, w9, #0x1
    331c:	str	w10, [x8]
    3320:	cmp	w9, #0x1
    3324:	b.ne	3370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x272c>  // b.any
    3328:	mov	x23, x22
    332c:	ldr	x8, [x23], #12
    3330:	mov	x0, x22
    3334:	ldr	x8, [x8, #16]
    3338:	blr	x8
    333c:	adrp	x8, 0 <__pthread_key_create>
    3340:	ldr	x8, [x8]
    3344:	cbz	x8, 37a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b5c>
    3348:	ldaxr	w8, [x23]
    334c:	sub	w9, w8, #0x1
    3350:	stlxr	w10, w9, [x23]
    3354:	cbnz	w10, 3348 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2704>
    3358:	cmp	w8, #0x1
    335c:	b.ne	3370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x272c>  // b.any
    3360:	ldr	x8, [x22]
    3364:	mov	x0, x22
    3368:	ldr	x8, [x8, #24]
    336c:	blr	x8
    3370:	mov	w0, #0x220                 	// #544
    3374:	bl	0 <_Znwm>
    3378:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    337c:	ldr	x8, [x8]
    3380:	movi	v0.2s, #0x1
    3384:	str	d0, [x0, #8]
    3388:	movi	v0.2d, #0x0
    338c:	add	x8, x8, #0x10
    3390:	mov	x9, x0
    3394:	mov	x1, x0
    3398:	mov	w10, #0x27                  	// #39
    339c:	str	x8, [x0]
    33a0:	stp	q0, q0, [x0, #48]
    33a4:	stp	q0, q0, [x0, #80]
    33a8:	stp	q0, q0, [x0, #112]
    33ac:	stp	q0, q0, [x0, #144]
    33b0:	stp	q0, q0, [x0, #176]
    33b4:	stp	q0, q0, [x0, #208]
    33b8:	stp	q0, q0, [x0, #240]
    33bc:	stp	q0, q0, [x0, #272]
    33c0:	stp	q0, q0, [x0, #304]
    33c4:	stp	q0, q0, [x0, #336]
    33c8:	stp	q0, q0, [x0, #368]
    33cc:	stp	q0, q0, [x0, #400]
    33d0:	stp	q0, q0, [x0, #432]
    33d4:	stp	q0, q0, [x0, #464]
    33d8:	stp	q0, q0, [x0, #496]
    33dc:	str	q0, [x9, #32]!
    33e0:	mov	w11, #0xff                  	// #255
    33e4:	mov	w8, #0x6                   	// #6
    33e8:	str	q0, [x0, #528]
    33ec:	str	x9, [x1, #16]!
    33f0:	str	x10, [x9]
    33f4:	str	d8, [x0, #24]
    33f8:	mov	w9, #0x4                   	// #4
    33fc:	strb	w11, [x0, #40]
    3400:	strb	w8, [x0, #56]
    3404:	str	x8, [x0, #64]
    3408:	ldp	w8, w11, [x0, #24]
    340c:	ldur	w10, [sp, #67]
    3410:	strb	w9, [x0, #72]
    3414:	ldr	w9, [sp, #64]
    3418:	cmp	w8, w11
    341c:	str	w10, [x0, #76]
    3420:	str	xzr, [x0, #48]
    3424:	stur	w9, [x0, #73]
    3428:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    342c:	add	w8, w8, #0x1
    3430:	str	w8, [x0, #24]
    3434:	ldr	x22, [x19]
    3438:	stp	x1, x0, [sp, #112]
    343c:	mov	x0, x22
    3440:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3444:	ldp	x1, x8, [x22, #32]
    3448:	add	x23, x22, #0x18
    344c:	cmp	x1, x8
    3450:	b.eq	3480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x283c>  // b.none
    3454:	str	xzr, [x1, #8]
    3458:	ldr	q0, [sp, #112]
    345c:	add	x25, x1, #0x10
    3460:	str	xzr, [sp, #120]
    3464:	str	q0, [x1]
    3468:	str	xzr, [sp, #112]
    346c:	str	x25, [x22, #32]
    3470:	ldr	x22, [sp, #120]
    3474:	ldr	x26, [x23]
    3478:	cbnz	x22, 349c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2858>
    347c:	b	3524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28e0>
    3480:	add	x2, sp, #0x70
    3484:	mov	x0, x23
    3488:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    348c:	ldr	x25, [x22, #32]
    3490:	ldr	x22, [sp, #120]
    3494:	ldr	x26, [x23]
    3498:	cbz	x22, 3524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28e0>
    349c:	adrp	x9, 0 <__pthread_key_create>
    34a0:	ldr	x9, [x9]
    34a4:	add	x8, x22, #0x8
    34a8:	cbz	x9, 34c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2884>
    34ac:	ldaxr	w9, [x8]
    34b0:	sub	w10, w9, #0x1
    34b4:	stlxr	w11, w10, [x8]
    34b8:	cbnz	w11, 34ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2868>
    34bc:	cmp	w9, #0x1
    34c0:	b.eq	34dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2898>  // b.none
    34c4:	b	3524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28e0>
    34c8:	ldr	w9, [x8]
    34cc:	sub	w10, w9, #0x1
    34d0:	str	w10, [x8]
    34d4:	cmp	w9, #0x1
    34d8:	b.ne	3524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28e0>  // b.any
    34dc:	mov	x23, x22
    34e0:	ldr	x8, [x23], #12
    34e4:	mov	x0, x22
    34e8:	ldr	x8, [x8, #16]
    34ec:	blr	x8
    34f0:	adrp	x8, 0 <__pthread_key_create>
    34f4:	ldr	x8, [x8]
    34f8:	cbz	x8, 37b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b74>
    34fc:	ldaxr	w8, [x23]
    3500:	sub	w9, w8, #0x1
    3504:	stlxr	w10, w9, [x23]
    3508:	cbnz	w10, 34fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28b8>
    350c:	cmp	w8, #0x1
    3510:	b.ne	3524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28e0>  // b.any
    3514:	ldr	x8, [x22]
    3518:	mov	x0, x22
    351c:	ldr	x8, [x8, #24]
    3520:	blr	x8
    3524:	ldp	x8, x10, [x19, #232]
    3528:	ldr	w9, [x19, #564]
    352c:	ldr	w2, [x19, #568]
    3530:	sub	x10, x10, x8
    3534:	add	x11, x2, x9
    3538:	cmp	x11, x10, asr #3
    353c:	b.hi	54b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x486c>  // b.pmore
    3540:	add	x1, x8, x9, lsl #3
    3544:	add	x3, sp, #0x1f8
    3548:	mov	x0, x19
    354c:	bl	15244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE>
    3550:	ldp	x8, x11, [x19, #232]
    3554:	ldr	w9, [x19, #564]
    3558:	ldr	w10, [x19, #568]
    355c:	adrp	x27, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3560:	sub	x11, x11, x8
    3564:	ldr	w12, [x27]
    3568:	asr	x11, x11, #3
    356c:	sub	x11, x11, x9
    3570:	sub	x28, x11, x10
    3574:	cmp	x28, x12
    3578:	b.ls	35b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2974>  // b.plast
    357c:	stp	xzr, xzr, [sp, #144]
    3580:	ldr	x0, [x19]
    3584:	sub	x8, x20, x24
    3588:	lsr	x8, x8, #4
    358c:	add	w3, w8, #0x3
    3590:	add	x2, sp, #0x90
    3594:	mov	w1, #0x26                  	// #38
    3598:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    359c:	ldp	x8, x11, [x19, #232]
    35a0:	ldr	w9, [x19, #564]
    35a4:	ldr	w10, [x19, #568]
    35a8:	sub	x11, x11, x8
    35ac:	asr	x11, x11, #3
    35b0:	sub	x11, x11, x9
    35b4:	sub	x28, x11, x10
    35b8:	ldr	x11, [x19]
    35bc:	ldr	x12, [x11]
    35c0:	ldr	w20, [x11, #8]
    35c4:	lsr	x11, x28, #60
    35c8:	ldr	w24, [x12, #8]
    35cc:	stp	xzr, xzr, [sp, #64]
    35d0:	str	xzr, [sp, #80]
    35d4:	cbnz	x11, 55d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x498c>
    35d8:	cbz	x28, 363c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x29f8>
    35dc:	lsl	x0, x28, #3
    35e0:	bl	0 <_Znwm>
    35e4:	ldp	x23, x8, [sp, #64]
    35e8:	mov	x22, x0
    35ec:	sub	x2, x8, x23
    35f0:	cmp	x2, #0x1
    35f4:	b.lt	3604 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x29c0>  // b.tstop
    35f8:	mov	x0, x22
    35fc:	mov	x1, x23
    3600:	bl	0 <memmove>
    3604:	cbz	x23, 3610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x29cc>
    3608:	mov	x0, x23
    360c:	bl	0 <_ZdlPv>
    3610:	add	x8, x22, x28, lsl #3
    3614:	stp	x22, x22, [sp, #64]
    3618:	str	x8, [sp, #80]
    361c:	ldp	x8, x11, [x19, #232]
    3620:	ldr	w9, [x19, #564]
    3624:	ldr	w10, [x19, #568]
    3628:	sub	x11, x11, x8
    362c:	asr	x11, x11, #3
    3630:	sub	x11, x11, x9
    3634:	sub	x2, x11, x10
    3638:	b	3640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x29fc>
    363c:	mov	x2, xzr
    3640:	add	x8, x8, x9, lsl #3
    3644:	add	x1, x8, x10, lsl #3
    3648:	add	x3, sp, #0x1f8
    364c:	add	x4, sp, #0x1a0
    3650:	add	x5, sp, #0x40
    3654:	mov	x0, x19
    3658:	bl	15768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE>
    365c:	ldp	x8, x9, [x19, #232]
    3660:	ldr	w10, [x19, #564]
    3664:	ldr	w11, [x19, #568]
    3668:	adrp	x28, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    366c:	sub	x8, x9, x8
    3670:	ldr	w9, [x27]
    3674:	asr	x8, x8, #3
    3678:	ldr	x27, [sp, #56]
    367c:	sub	x8, x8, x10
    3680:	sub	x8, x8, x11
    3684:	cmp	x8, x9
    3688:	b.ls	385c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2c18>  // b.plast
    368c:	ldr	x0, [x19]
    3690:	sub	x8, x25, x26
    3694:	lsr	x8, x8, #4
    3698:	add	w22, w8, #0x3
    369c:	ldr	x9, [x0]
    36a0:	ldr	w8, [x0, #8]
    36a4:	add	x20, x20, x24, lsl #3
    36a8:	sub	x1, x20, #0x40
    36ac:	ldr	w9, [x9, #8]
    36b0:	sub	x8, x8, x20
    36b4:	add	x2, x8, x9, lsl #3
    36b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    36bc:	ldp	x12, x8, [sp, #64]
    36c0:	cmp	x12, x8
    36c4:	b.eq	3838 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bf4>  // b.none
    36c8:	sub	x9, x8, x12
    36cc:	sub	x9, x9, #0x8
    36d0:	cmp	x9, #0x17
    36d4:	b.hi	37d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b8c>  // b.pmore
    36d8:	mov	x9, x12
    36dc:	b	3820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bdc>
    36e0:	ldr	w8, [x24]
    36e4:	sub	w9, w8, #0x1
    36e8:	str	w9, [x24]
    36ec:	cmp	w8, #0x1
    36f0:	b.eq	e0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c8>  // b.none
    36f4:	b	e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>
    36f8:	ldr	w8, [x23]
    36fc:	sub	w9, w8, #0x1
    3700:	str	w9, [x23]
    3704:	cmp	w8, #0x1
    3708:	b.eq	fb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36c>  // b.none
    370c:	b	fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>
    3710:	ldr	w8, [x20]
    3714:	sub	w9, w8, #0x1
    3718:	str	w9, [x20]
    371c:	cmp	w8, #0x1
    3720:	b.eq	1208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5c4>  // b.none
    3724:	b	1218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5d4>
    3728:	ldr	w8, [x20]
    372c:	sub	w9, w8, #0x1
    3730:	str	w9, [x20]
    3734:	cmp	w8, #0x1
    3738:	b.eq	1414 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7d0>  // b.none
    373c:	b	1424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7e0>
    3740:	ldr	w8, [x20]
    3744:	sub	w9, w8, #0x1
    3748:	str	w9, [x20]
    374c:	cmp	w8, #0x1
    3750:	b.eq	161c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9d8>  // b.none
    3754:	b	162c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9e8>
    3758:	ldr	w8, [x20]
    375c:	sub	w9, w8, #0x1
    3760:	str	w9, [x20]
    3764:	cmp	w8, #0x1
    3768:	b.eq	17dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb98>  // b.none
    376c:	b	17ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xba8>
    3770:	ldr	w8, [x25]
    3774:	sub	w9, w8, #0x1
    3778:	str	w9, [x25]
    377c:	cmp	w8, #0x1
    3780:	b.eq	19e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd9c>  // b.none
    3784:	b	19f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xdac>
    3788:	ldr	w8, [x28]
    378c:	sub	w9, w8, #0x1
    3790:	str	w9, [x28]
    3794:	cmp	w8, #0x1
    3798:	b.eq	1b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf54>  // b.none
    379c:	b	1ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf64>
    37a0:	ldr	w8, [x23]
    37a4:	sub	w9, w8, #0x1
    37a8:	str	w9, [x23]
    37ac:	cmp	w8, #0x1
    37b0:	b.eq	3360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x271c>  // b.none
    37b4:	b	3370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x272c>
    37b8:	ldr	w8, [x23]
    37bc:	sub	w9, w8, #0x1
    37c0:	str	w9, [x23]
    37c4:	cmp	w8, #0x1
    37c8:	b.eq	3514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28d0>  // b.none
    37cc:	b	3524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28e0>
    37d0:	lsr	x9, x9, #3
    37d4:	add	x10, x9, #0x1
    37d8:	and	x11, x10, #0x3ffffffffffffffc
    37dc:	dup	v0.2d, x20
    37e0:	add	x9, x12, x11, lsl #3
    37e4:	add	x12, x12, #0x10
    37e8:	mov	x13, x11
    37ec:	ldur	q1, [x12, #-16]
    37f0:	subs	x13, x13, #0x4
    37f4:	ext	v2.16b, v0.16b, v1.16b, #8
    37f8:	ldr	q0, [x12]
    37fc:	sub	v2.2d, v1.2d, v2.2d
    3800:	ext	v1.16b, v1.16b, v0.16b, #8
    3804:	sub	v1.2d, v0.2d, v1.2d
    3808:	stp	q2, q1, [x12, #-16]
    380c:	add	x12, x12, #0x20
    3810:	b.ne	37ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ba8>  // b.any
    3814:	cmp	x10, x11
    3818:	b.eq	3838 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bf4>  // b.none
    381c:	mov	x20, v0.d[1]
    3820:	ldr	x10, [x9]
    3824:	sub	x11, x10, x20
    3828:	str	x11, [x9], #8
    382c:	cmp	x8, x9
    3830:	mov	x20, x10
    3834:	b.ne	3820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2bdc>  // b.any
    3838:	ldr	x0, [x19]
    383c:	add	x2, sp, #0x40
    3840:	mov	w1, #0x27                  	// #39
    3844:	mov	w3, w22
    3848:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    384c:	ldp	x8, x9, [sp, #64]
    3850:	cmp	x9, x8
    3854:	b.eq	385c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2c18>  // b.none
    3858:	str	x8, [sp, #72]
    385c:	ldr	x8, [x19, #16]
    3860:	mov	x9, x8
    3864:	ldr	x10, [x9, #72]!
    3868:	and	x10, x10, #0xfffffffffffffff8
    386c:	cmp	x9, x10
    3870:	b.eq	3c08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fc4>  // b.none
    3874:	mov	w0, #0x220                 	// #544
    3878:	bl	0 <_Znwm>
    387c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3880:	ldr	x8, [x8]
    3884:	movi	v0.2s, #0x1
    3888:	str	d0, [x0, #8]
    388c:	movi	v0.2d, #0x0
    3890:	add	x8, x8, #0x10
    3894:	mov	x9, x0
    3898:	mov	x22, x0
    389c:	str	x8, [x0]
    38a0:	mov	w8, #0x4                   	// #4
    38a4:	stp	q0, q0, [x0, #48]
    38a8:	stp	q0, q0, [x0, #80]
    38ac:	stp	q0, q0, [x0, #112]
    38b0:	stp	q0, q0, [x0, #144]
    38b4:	stp	q0, q0, [x0, #176]
    38b8:	stp	q0, q0, [x0, #208]
    38bc:	stp	q0, q0, [x0, #240]
    38c0:	stp	q0, q0, [x0, #272]
    38c4:	stp	q0, q0, [x0, #304]
    38c8:	stp	q0, q0, [x0, #336]
    38cc:	stp	q0, q0, [x0, #368]
    38d0:	stp	q0, q0, [x0, #400]
    38d4:	stp	q0, q0, [x0, #432]
    38d8:	stp	q0, q0, [x0, #464]
    38dc:	stp	q0, q0, [x0, #496]
    38e0:	str	q0, [x9, #32]!
    38e4:	str	q0, [x0, #528]
    38e8:	str	x9, [x22, #16]!
    38ec:	str	x8, [x9]
    38f0:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    38f4:	ldr	d0, [x9]
    38f8:	mov	w8, #0xff                  	// #255
    38fc:	strb	w8, [x0, #40]
    3900:	mov	w8, #0x8                   	// #8
    3904:	mov	w9, #0x6                   	// #6
    3908:	str	x8, [x0, #64]
    390c:	mov	w8, #0x2                   	// #2
    3910:	str	xzr, [x0, #48]
    3914:	strb	w9, [x0, #56]
    3918:	strb	w8, [x0, #72]
    391c:	str	d0, [x0, #24]
    3920:	ldr	x24, [x19]
    3924:	stp	x22, x0, [sp, #144]
    3928:	mov	x1, x22
    392c:	mov	x0, x24
    3930:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3934:	ldp	x1, x8, [x24, #32]
    3938:	add	x23, x24, #0x18
    393c:	cmp	x1, x8
    3940:	b.eq	396c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d28>  // b.none
    3944:	stp	x22, xzr, [x1]
    3948:	ldr	x8, [sp, #152]
    394c:	add	x25, x1, #0x10
    3950:	stp	xzr, xzr, [sp, #144]
    3954:	str	x8, [x1, #8]
    3958:	str	x25, [x24, #32]
    395c:	ldr	x22, [sp, #152]
    3960:	ldr	x23, [x23]
    3964:	cbnz	x22, 3988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d44>
    3968:	b	3a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dcc>
    396c:	add	x2, sp, #0x90
    3970:	mov	x0, x23
    3974:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3978:	ldr	x25, [x24, #32]
    397c:	ldr	x22, [sp, #152]
    3980:	ldr	x23, [x23]
    3984:	cbz	x22, 3a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dcc>
    3988:	adrp	x9, 0 <__pthread_key_create>
    398c:	ldr	x9, [x9]
    3990:	add	x8, x22, #0x8
    3994:	cbz	x9, 39b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d70>
    3998:	ldaxr	w9, [x8]
    399c:	sub	w10, w9, #0x1
    39a0:	stlxr	w11, w10, [x8]
    39a4:	cbnz	w11, 3998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d54>
    39a8:	cmp	w9, #0x1
    39ac:	b.eq	39c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d84>  // b.none
    39b0:	b	3a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dcc>
    39b4:	ldr	w9, [x8]
    39b8:	sub	w10, w9, #0x1
    39bc:	str	w10, [x8]
    39c0:	cmp	w9, #0x1
    39c4:	b.ne	3a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dcc>  // b.any
    39c8:	mov	x20, x22
    39cc:	ldr	x8, [x20], #12
    39d0:	mov	x0, x22
    39d4:	ldr	x8, [x8, #16]
    39d8:	blr	x8
    39dc:	adrp	x8, 0 <__pthread_key_create>
    39e0:	ldr	x8, [x8]
    39e4:	cbz	x8, 50fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x44b8>
    39e8:	ldaxr	w8, [x20]
    39ec:	sub	w9, w8, #0x1
    39f0:	stlxr	w10, w9, [x20]
    39f4:	cbnz	w10, 39e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2da4>
    39f8:	cmp	w8, #0x1
    39fc:	b.ne	3a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dcc>  // b.any
    3a00:	ldr	x8, [x22]
    3a04:	mov	x0, x22
    3a08:	ldr	x8, [x8, #24]
    3a0c:	blr	x8
    3a10:	ldr	x8, [x19, #16]
    3a14:	ldr	x22, [x8, #80]
    3a18:	add	x20, x8, #0x48
    3a1c:	cmp	x20, x22
    3a20:	b.eq	3c08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fc4>  // b.none
    3a24:	sub	x8, x25, x23
    3a28:	lsr	x8, x8, #4
    3a2c:	add	w23, w8, #0x3
    3a30:	b	3a58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2e14>
    3a34:	ldr	x0, [x19]
    3a38:	add	x2, sp, #0x1f8
    3a3c:	mov	w1, #0xa                   	// #10
    3a40:	mov	w3, wzr
    3a44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3a48:	str	wzr, [sp, #512]
    3a4c:	ldr	x22, [x22, #8]
    3a50:	cmp	x20, x22
    3a54:	b.eq	3c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fc0>  // b.none
    3a58:	ldrb	w8, [x22]
    3a5c:	tbnz	w8, #2, 5470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x482c>
    3a60:	mov	x0, x22
    3a64:	bl	0 <_ZNK4llvm11NamedMDNode7getNameEv>
    3a68:	ldr	w9, [sp, #516]
    3a6c:	ldr	w8, [sp, #512]
    3a70:	mov	x24, x1
    3a74:	mov	x25, x0
    3a78:	sub	x9, x9, x8
    3a7c:	cmp	x1, x9
    3a80:	b.ls	3a9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2e58>  // b.plast
    3a84:	add	x2, x24, x8
    3a88:	add	x0, sp, #0x1f8
    3a8c:	mov	w3, #0x8                   	// #8
    3a90:	mov	x1, x21
    3a94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3a98:	ldr	w8, [sp, #512]
    3a9c:	cmp	x24, #0x1
    3aa0:	b.lt	3acc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2e88>  // b.tstop
    3aa4:	ldr	x9, [sp, #504]
    3aa8:	add	x10, x25, x24
    3aac:	sub	x10, x10, x25
    3ab0:	add	x10, x10, #0x1
    3ab4:	add	x9, x9, x8, lsl #3
    3ab8:	ldrb	w11, [x25], #1
    3abc:	sub	x10, x10, #0x1
    3ac0:	cmp	x10, #0x1
    3ac4:	str	x11, [x9], #8
    3ac8:	b.gt	3ab8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2e74>
    3acc:	ldr	w9, [sp, #516]
    3ad0:	add	x8, x8, x24
    3ad4:	cmp	x8, x9
    3ad8:	b.hi	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.pmore
    3adc:	str	w8, [sp, #512]
    3ae0:	ldr	x0, [x19]
    3ae4:	add	x2, sp, #0x1f8
    3ae8:	mov	w1, #0x4                   	// #4
    3aec:	mov	w3, w23
    3af0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3af4:	mov	x0, x22
    3af8:	str	wzr, [sp, #512]
    3afc:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
    3b00:	cbz	w0, 3a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2df0>
    3b04:	mov	w24, w0
    3b08:	mov	w1, wzr
    3b0c:	mov	x25, xzr
    3b10:	mov	x0, x22
    3b14:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
    3b18:	ldr	w9, [x19, #304]
    3b1c:	cbz	w9, 51b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4574>
    3b20:	orr	x8, x0, #0x4
    3b24:	cmn	x8, #0x4
    3b28:	b.eq	5198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4554>  // b.none
    3b2c:	ldr	x8, [x19, #288]
    3b30:	ubfx	x10, x0, #4, #28
    3b34:	eor	w11, w10, w0, lsr #9
    3b38:	sub	w10, w9, #0x1
    3b3c:	and	w9, w11, w10
    3b40:	lsl	x11, x9, #4
    3b44:	ldr	x11, [x8, x11]
    3b48:	cmp	x11, x0
    3b4c:	b.ne	3ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f64>  // b.any
    3b50:	add	x8, x8, x9, lsl #4
    3b54:	ldr	x8, [x8, #8]
    3b58:	lsr	x9, x8, #32
    3b5c:	cbz	x9, 51b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4574>
    3b60:	ldr	w8, [sp, #512]
    3b64:	ldr	w10, [sp, #516]
    3b68:	sub	w26, w9, #0x1
    3b6c:	cmp	w8, w10
    3b70:	b.cs	3be8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fa4>  // b.hs, b.nlast
    3b74:	ldr	x9, [sp, #504]
    3b78:	str	x26, [x9, w8, uxtw #3]
    3b7c:	ldr	w8, [sp, #512]
    3b80:	ldr	w9, [sp, #516]
    3b84:	cmp	w8, w9
    3b88:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    3b8c:	add	x1, x25, #0x1
    3b90:	add	w8, w8, #0x1
    3b94:	cmp	w24, w1
    3b98:	and	x25, x1, #0xffffffff
    3b9c:	str	w8, [sp, #512]
    3ba0:	b.ne	3b10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ecc>  // b.any
    3ba4:	b	3a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2df0>
    3ba8:	mov	w12, #0x1                   	// #1
    3bac:	cmn	x11, #0x4
    3bb0:	b.eq	51b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4574>  // b.none
    3bb4:	add	w9, w9, w12
    3bb8:	and	w9, w9, w10
    3bbc:	lsl	x11, x9, #4
    3bc0:	ldr	x11, [x8, x11]
    3bc4:	add	w12, w12, #0x1
    3bc8:	cmp	x11, x0
    3bcc:	b.ne	3bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f68>  // b.any
    3bd0:	mov	w9, w9
    3bd4:	add	x8, x8, x9, lsl #4
    3bd8:	ldr	x8, [x8, #8]
    3bdc:	lsr	x9, x8, #32
    3be0:	cbnz	x9, 3b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f1c>
    3be4:	b	51b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4574>
    3be8:	add	x0, sp, #0x1f8
    3bec:	mov	w3, #0x8                   	// #8
    3bf0:	mov	x1, x21
    3bf4:	mov	x2, xzr
    3bf8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3bfc:	ldr	w8, [sp, #512]
    3c00:	b	3b74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f30>
    3c04:	ldr	x8, [x19, #16]
    3c08:	ldr	x20, [x8, #32]
    3c0c:	add	x23, x8, #0x18
    3c10:	cmp	x23, x20
    3c14:	b.eq	3cf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x30b0>  // b.none
    3c18:	ldr	d11, [x28]
    3c1c:	add	x8, sp, #0x90
    3c20:	add	x21, x8, #0x10
    3c24:	b	3c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ff0>
    3c28:	ldr	x20, [x20, #8]
    3c2c:	cmp	x23, x20
    3c30:	b.eq	3cf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x30ac>  // b.none
    3c34:	ldrb	w8, [x20]
    3c38:	tbnz	w8, #2, 5318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46d4>
    3c3c:	sub	x8, x20, #0x38
    3c40:	cmp	x20, #0x0
    3c44:	csel	x22, xzr, x8, eq  // eq = none
    3c48:	mov	x0, x22
    3c4c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    3c50:	tbz	w0, #0, 3c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fe4>
    3c54:	ldrb	w8, [x22, #34]
    3c58:	tbz	w8, #5, 3c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fe4>
    3c5c:	mov	x0, x27
    3c60:	mov	x1, x22
    3c64:	str	x21, [sp, #144]
    3c68:	str	d11, [sp, #152]
    3c6c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3c70:	ldp	w8, w9, [sp, #152]
    3c74:	mov	w24, w0
    3c78:	cmp	w8, w9
    3c7c:	b.cs	3cd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3090>  // b.hs, b.nlast
    3c80:	ldr	x9, [sp, #144]
    3c84:	str	x24, [x9, w8, uxtw #3]
    3c88:	ldp	w8, w9, [sp, #152]
    3c8c:	cmp	w8, w9
    3c90:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    3c94:	add	w8, w8, #0x1
    3c98:	add	x1, sp, #0x90
    3c9c:	mov	x0, x19
    3ca0:	mov	x2, x22
    3ca4:	str	w8, [sp, #152]
    3ca8:	bl	1f710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>
    3cac:	ldr	x0, [x19]
    3cb0:	add	x2, sp, #0x90
    3cb4:	mov	w1, #0x24                  	// #36
    3cb8:	mov	w3, wzr
    3cbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3cc0:	ldr	x0, [sp, #144]
    3cc4:	cmp	x0, x21
    3cc8:	b.eq	3c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fe4>  // b.none
    3ccc:	bl	0 <free>
    3cd0:	b	3c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fe4>
    3cd4:	add	x0, sp, #0x90
    3cd8:	mov	w3, #0x8                   	// #8
    3cdc:	mov	x1, x21
    3ce0:	mov	x2, xzr
    3ce4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3ce8:	ldr	w8, [sp, #152]
    3cec:	b	3c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x303c>
    3cf0:	ldr	x8, [x19, #16]
    3cf4:	ldr	x20, [x8, #16]
    3cf8:	add	x23, x8, #0x8
    3cfc:	cmp	x23, x20
    3d00:	b.eq	3dd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x318c>  // b.none
    3d04:	ldr	d11, [x28]
    3d08:	add	x8, sp, #0x90
    3d0c:	add	x21, x8, #0x10
    3d10:	b	3d20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x30dc>
    3d14:	ldr	x20, [x20, #8]
    3d18:	cmp	x23, x20
    3d1c:	b.eq	3dd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x318c>  // b.none
    3d20:	ldrb	w8, [x20]
    3d24:	tbnz	w8, #2, 5410 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x47cc>
    3d28:	sub	x8, x20, #0x38
    3d2c:	cmp	x20, #0x0
    3d30:	csel	x22, xzr, x8, eq  // eq = none
    3d34:	ldrb	w8, [x22, #34]
    3d38:	tbz	w8, #5, 3d14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x30d0>
    3d3c:	mov	x0, x27
    3d40:	mov	x1, x22
    3d44:	str	x21, [sp, #144]
    3d48:	str	d11, [sp, #152]
    3d4c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3d50:	ldp	w8, w9, [sp, #152]
    3d54:	mov	w24, w0
    3d58:	cmp	w8, w9
    3d5c:	b.cs	3db4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3170>  // b.hs, b.nlast
    3d60:	ldr	x9, [sp, #144]
    3d64:	str	x24, [x9, w8, uxtw #3]
    3d68:	ldp	w8, w9, [sp, #152]
    3d6c:	cmp	w8, w9
    3d70:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    3d74:	add	w8, w8, #0x1
    3d78:	add	x1, sp, #0x90
    3d7c:	mov	x0, x19
    3d80:	mov	x2, x22
    3d84:	str	w8, [sp, #152]
    3d88:	bl	1f710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>
    3d8c:	ldr	x0, [x19]
    3d90:	add	x2, sp, #0x90
    3d94:	mov	w1, #0x24                  	// #36
    3d98:	mov	w3, wzr
    3d9c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3da0:	ldr	x0, [sp, #144]
    3da4:	cmp	x0, x21
    3da8:	b.eq	3d14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x30d0>  // b.none
    3dac:	bl	0 <free>
    3db0:	b	3d14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x30d0>
    3db4:	add	x0, sp, #0x90
    3db8:	mov	w3, #0x8                   	// #8
    3dbc:	mov	x1, x21
    3dc0:	mov	x2, xzr
    3dc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3dc8:	ldr	w8, [sp, #152]
    3dcc:	b	3d60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x311c>
    3dd0:	ldr	x0, [x19]
    3dd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3dd8:	ldr	x0, [sp, #64]
    3ddc:	cbz	x0, 3de4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31a0>
    3de0:	bl	0 <_ZdlPv>
    3de4:	ldr	x0, [sp, #416]
    3de8:	cbz	x0, 3df0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31ac>
    3dec:	bl	0 <_ZdlPv>
    3df0:	ldr	x0, [sp, #504]
    3df4:	add	x8, sp, #0x1f8
    3df8:	add	x8, x8, #0x10
    3dfc:	cmp	x0, x8
    3e00:	b.eq	3e08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31c4>  // b.none
    3e04:	bl	0 <free>
    3e08:	ldrb	w8, [x19, #344]
    3e0c:	cbz	w8, 3e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31d8>
    3e10:	mov	x0, x19
    3e14:	mov	x1, xzr
    3e18:	bl	e8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE>
    3e1c:	add	x8, sp, #0x90
    3e20:	add	x20, x8, #0x10
    3e24:	str	x20, [sp, #144]
    3e28:	str	d10, [sp, #152]
    3e2c:	ldr	x0, [x19, #16]
    3e30:	add	x1, sp, #0x90
    3e34:	bl	0 <_ZNK4llvm6Module20getOperandBundleTagsERNS_15SmallVectorImplINS_9StringRefEEE>
    3e38:	ldr	w8, [sp, #152]
    3e3c:	cbz	w8, 3f34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32f0>
    3e40:	ldr	x0, [x19]
    3e44:	mov	w1, #0x15                  	// #21
    3e48:	mov	w2, #0x3                   	// #3
    3e4c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3e50:	ldr	w8, [sp, #152]
    3e54:	add	x9, sp, #0x1f8
    3e58:	add	x21, x9, #0x10
    3e5c:	str	x21, [sp, #504]
    3e60:	str	d9, [sp, #512]
    3e64:	cbz	w8, 3f1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32d8>
    3e68:	ldr	x23, [sp, #144]
    3e6c:	add	x24, x23, x8, lsl #4
    3e70:	mov	w8, #0x40                  	// #64
    3e74:	ldp	x25, x22, [x23]
    3e78:	cmp	x22, w8, uxtw
    3e7c:	b.ls	3e94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3250>  // b.plast
    3e80:	b	3ea4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3260>
    3e84:	ldr	w8, [sp, #516]
    3e88:	ldp	x25, x22, [x23]
    3e8c:	cmp	x22, w8, uxtw
    3e90:	b.hi	3ea4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3260>  // b.pmore
    3e94:	mov	x8, xzr
    3e98:	cmp	x22, #0x1
    3e9c:	b.ge	3ec4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3280>  // b.tcont
    3ea0:	b	3ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32a0>
    3ea4:	add	x0, sp, #0x1f8
    3ea8:	mov	w3, #0x8                   	// #8
    3eac:	mov	x1, x21
    3eb0:	mov	x2, x22
    3eb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3eb8:	ldr	w8, [sp, #512]
    3ebc:	cmp	x22, #0x1
    3ec0:	b.lt	3ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32a0>  // b.tstop
    3ec4:	ldr	x9, [sp, #504]
    3ec8:	add	x10, x22, #0x1
    3ecc:	add	x9, x9, x8, lsl #3
    3ed0:	ldrb	w11, [x25], #1
    3ed4:	sub	x10, x10, #0x1
    3ed8:	cmp	x10, #0x1
    3edc:	str	x11, [x9], #8
    3ee0:	b.gt	3ed0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x328c>
    3ee4:	ldr	w9, [sp, #516]
    3ee8:	add	x8, x8, x22
    3eec:	cmp	x8, x9
    3ef0:	b.hi	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.pmore
    3ef4:	str	w8, [sp, #512]
    3ef8:	ldr	x0, [x19]
    3efc:	add	x2, sp, #0x1f8
    3f00:	mov	w1, #0x1                   	// #1
    3f04:	mov	w3, wzr
    3f08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3f0c:	add	x23, x23, #0x10
    3f10:	cmp	x23, x24
    3f14:	str	wzr, [sp, #512]
    3f18:	b.ne	3e84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3240>  // b.any
    3f1c:	ldr	x0, [x19]
    3f20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3f24:	ldr	x0, [sp, #504]
    3f28:	cmp	x0, x21
    3f2c:	b.eq	3f34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32f0>  // b.none
    3f30:	bl	0 <free>
    3f34:	ldr	x0, [sp, #144]
    3f38:	cmp	x0, x20
    3f3c:	b.eq	3f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3300>  // b.none
    3f40:	bl	0 <free>
    3f44:	add	x8, sp, #0x90
    3f48:	add	x20, x8, #0x10
    3f4c:	str	x20, [sp, #144]
    3f50:	str	d10, [sp, #152]
    3f54:	ldr	x8, [x19, #16]
    3f58:	add	x1, sp, #0x90
    3f5c:	ldr	x0, [x8]
    3f60:	bl	0 <_ZNK4llvm11LLVMContext17getSyncScopeNamesERNS_15SmallVectorImplINS_9StringRefEEE>
    3f64:	ldr	w8, [sp, #152]
    3f68:	cbz	w8, 4060 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x341c>
    3f6c:	ldr	x0, [x19]
    3f70:	mov	w1, #0x1a                  	// #26
    3f74:	mov	w2, #0x2                   	// #2
    3f78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3f7c:	ldr	w8, [sp, #152]
    3f80:	add	x9, sp, #0x1f8
    3f84:	add	x21, x9, #0x10
    3f88:	str	x21, [sp, #504]
    3f8c:	str	d9, [sp, #512]
    3f90:	cbz	w8, 4048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3404>
    3f94:	ldr	x23, [sp, #144]
    3f98:	add	x24, x23, x8, lsl #4
    3f9c:	mov	w8, #0x40                  	// #64
    3fa0:	ldp	x25, x22, [x23]
    3fa4:	cmp	x22, w8, uxtw
    3fa8:	b.ls	3fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x337c>  // b.plast
    3fac:	b	3fd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x338c>
    3fb0:	ldr	w8, [sp, #516]
    3fb4:	ldp	x25, x22, [x23]
    3fb8:	cmp	x22, w8, uxtw
    3fbc:	b.hi	3fd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x338c>  // b.pmore
    3fc0:	mov	x8, xzr
    3fc4:	cmp	x22, #0x1
    3fc8:	b.ge	3ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x33ac>  // b.tcont
    3fcc:	b	4010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x33cc>
    3fd0:	add	x0, sp, #0x1f8
    3fd4:	mov	w3, #0x8                   	// #8
    3fd8:	mov	x1, x21
    3fdc:	mov	x2, x22
    3fe0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3fe4:	ldr	w8, [sp, #512]
    3fe8:	cmp	x22, #0x1
    3fec:	b.lt	4010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x33cc>  // b.tstop
    3ff0:	ldr	x9, [sp, #504]
    3ff4:	add	x10, x22, #0x1
    3ff8:	add	x9, x9, x8, lsl #3
    3ffc:	ldrb	w11, [x25], #1
    4000:	sub	x10, x10, #0x1
    4004:	cmp	x10, #0x1
    4008:	str	x11, [x9], #8
    400c:	b.gt	3ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x33b8>
    4010:	ldr	w9, [sp, #516]
    4014:	add	x8, x8, x22
    4018:	cmp	x8, x9
    401c:	b.hi	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.pmore
    4020:	str	w8, [sp, #512]
    4024:	ldr	x0, [x19]
    4028:	add	x2, sp, #0x1f8
    402c:	mov	w1, #0x1                   	// #1
    4030:	mov	w3, wzr
    4034:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4038:	add	x23, x23, #0x10
    403c:	cmp	x23, x24
    4040:	str	wzr, [sp, #512]
    4044:	b.ne	3fb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x336c>  // b.any
    4048:	ldr	x0, [x19]
    404c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4050:	ldr	x0, [sp, #504]
    4054:	cmp	x0, x21
    4058:	b.eq	4060 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x341c>  // b.none
    405c:	bl	0 <free>
    4060:	ldr	x0, [sp, #144]
    4064:	cmp	x0, x20
    4068:	b.eq	4070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x342c>  // b.none
    406c:	bl	0 <free>
    4070:	stp	xzr, xzr, [sp, #64]
    4074:	str	wzr, [sp, #88]
    4078:	str	xzr, [sp, #80]
    407c:	ldr	x8, [x19, #16]
    4080:	ldr	x20, [x8, #32]
    4084:	add	x21, x8, #0x18
    4088:	cmp	x21, x20
    408c:	b.eq	4c10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3fcc>  // b.none
    4090:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4094:	ldr	d10, [x11]
    4098:	ldr	d11, [x28]
    409c:	add	x8, sp, #0x90
    40a0:	add	x9, sp, #0x1f8
    40a4:	add	x10, sp, #0x1a0
    40a8:	add	x8, x8, #0x10
    40ac:	str	x8, [sp, #32]
    40b0:	add	x22, x9, #0x10
    40b4:	add	x8, x10, #0x10
    40b8:	stp	x8, x21, [sp, #8]
    40bc:	str	x22, [sp, #40]
    40c0:	b	40d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x348c>
    40c4:	ldr	x20, [x20, #8]
    40c8:	cmp	x21, x20
    40cc:	b.eq	4c10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3fcc>  // b.none
    40d0:	ldrb	w8, [x20]
    40d4:	tbnz	w8, #2, 5318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46d4>
    40d8:	sub	x8, x20, #0x38
    40dc:	cmp	x20, #0x0
    40e0:	csel	x23, xzr, x8, eq  // eq = none
    40e4:	mov	x0, x23
    40e8:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    40ec:	tbnz	w0, #0, 40c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3480>
    40f0:	ldrb	w8, [x20]
    40f4:	str	x20, [sp, #24]
    40f8:	tbnz	w8, #2, 5318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46d4>
    40fc:	ldr	x0, [x19]
    4100:	ldr	w8, [sp, #88]
    4104:	ldr	x9, [x0]
    4108:	ldr	w21, [x0, #8]
    410c:	ldr	w20, [x9, #8]
    4110:	str	x23, [sp, #504]
    4114:	cbz	w8, 4188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3544>
    4118:	orr	x9, x23, #0x8
    411c:	cmn	x9, #0x8
    4120:	b.eq	5378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4734>  // b.none
    4124:	ldr	x9, [sp, #72]
    4128:	ubfx	x10, x23, #4, #28
    412c:	eor	w11, w10, w23, lsr #9
    4130:	sub	w10, w8, #0x1
    4134:	and	w11, w10, w11
    4138:	add	x8, x9, w11, uxtw #4
    413c:	ldr	x13, [x8]
    4140:	cmp	x13, x23
    4144:	b.eq	41ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3568>  // b.none
    4148:	mov	x12, xzr
    414c:	mov	w14, #0x1                   	// #1
    4150:	cmn	x13, #0x8
    4154:	b.eq	4c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3fc0>  // b.none
    4158:	cmp	x12, #0x0
    415c:	add	w11, w11, w14
    4160:	mov	x15, #0xfffffffffffffff0    	// #-16
    4164:	ccmp	x13, x15, #0x0, eq  // eq = none
    4168:	and	w11, w11, w10
    416c:	csel	x12, x12, x8, ne  // ne = any
    4170:	add	x8, x9, w11, uxtw #4
    4174:	ldr	x13, [x8]
    4178:	add	w14, w14, #0x1
    417c:	cmp	x13, x23
    4180:	b.eq	41ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3568>  // b.none
    4184:	b	4150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x350c>
    4188:	mov	x3, xzr
    418c:	add	x0, sp, #0x40
    4190:	add	x1, sp, #0x1f8
    4194:	add	x2, sp, #0x1f8
    4198:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    419c:	ldr	x9, [sp, #504]
    41a0:	mov	x8, x0
    41a4:	stp	x9, xzr, [x0]
    41a8:	ldr	x0, [x19]
    41ac:	add	x9, x21, x20, lsl #3
    41b0:	mov	w1, #0xc                   	// #12
    41b4:	mov	w2, #0x4                   	// #4
    41b8:	str	x9, [x8, #8]
    41bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    41c0:	mov	x0, x27
    41c4:	mov	x1, x23
    41c8:	bl	0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE>
    41cc:	ldr	x8, [sp, #32]
    41d0:	add	x2, sp, #0x90
    41d4:	mov	w1, #0x1                   	// #1
    41d8:	mov	w3, wzr
    41dc:	str	x8, [sp, #144]
    41e0:	ldr	x8, [x19, #544]
    41e4:	ldr	x9, [x19, #536]
    41e8:	str	d10, [sp, #152]
    41ec:	sub	x8, x8, x9
    41f0:	lsr	x8, x8, #3
    41f4:	str	w8, [sp, #160]
    41f8:	ldr	x0, [x19]
    41fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4200:	str	wzr, [sp, #152]
    4204:	ldr	w24, [x19, #576]
    4208:	ldr	w1, [x19, #572]
    420c:	mov	x0, x19
    4210:	mov	w3, wzr
    4214:	mov	w2, w24
    4218:	bl	11b84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb>
    421c:	ldp	x9, x8, [x19, #232]
    4220:	ldr	w10, [x19, #564]
    4224:	sub	x8, x8, x9
    4228:	cmp	x10, x8, asr #3
    422c:	b.cs	42c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3680>  // b.hs, b.nlast
    4230:	ldr	x0, [x19]
    4234:	mov	w1, #0xf                   	// #15
    4238:	mov	w2, #0x3                   	// #3
    423c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4240:	str	x22, [sp, #504]
    4244:	str	d9, [sp, #512]
    4248:	ldp	x8, x10, [x19, #232]
    424c:	ldr	w9, [x19, #564]
    4250:	ldr	w2, [x19, #568]
    4254:	sub	x10, x10, x8
    4258:	add	x11, x2, x9
    425c:	cmp	x11, x10, asr #3
    4260:	b.hi	54b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x486c>  // b.pmore
    4264:	add	x1, x8, x9, lsl #3
    4268:	add	x3, sp, #0x1f8
    426c:	mov	x0, x19
    4270:	bl	15244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE>
    4274:	ldp	x8, x9, [x19, #232]
    4278:	ldr	w10, [x19, #564]
    427c:	ldr	w11, [x19, #568]
    4280:	add	x3, sp, #0x1f8
    4284:	sub	x9, x9, x8
    4288:	asr	x9, x9, #3
    428c:	add	x8, x8, x10, lsl #3
    4290:	sub	x9, x9, x10
    4294:	sub	x2, x9, x11
    4298:	add	x1, x8, x11, lsl #3
    429c:	mov	x0, x19
    42a0:	mov	x4, xzr
    42a4:	mov	x5, xzr
    42a8:	bl	15768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE>
    42ac:	ldr	x0, [x19]
    42b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    42b4:	ldr	x0, [sp, #504]
    42b8:	cmp	x0, x22
    42bc:	b.eq	42c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3680>  // b.none
    42c0:	bl	0 <free>
    42c4:	ldr	x26, [x23, #80]
    42c8:	ldrb	w8, [x23, #34]
    42cc:	add	x28, x23, #0x48
    42d0:	str	x23, [sp, #48]
    42d4:	cmp	x28, x26
    42d8:	ubfx	w21, w8, #5, #1
    42dc:	b.eq	4684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a40>  // b.none
    42e0:	mov	x27, xzr
    42e4:	b	42f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36b0>
    42e8:	ldr	x26, [x26, #8]
    42ec:	cmp	x28, x26
    42f0:	b.eq	4684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a40>  // b.none
    42f4:	ldrb	w8, [x26]
    42f8:	tbnz	w8, #2, 5298 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4654>
    42fc:	sub	x8, x26, #0x18
    4300:	cmp	x26, #0x0
    4304:	csel	x8, xzr, x8, eq  // eq = none
    4308:	ldr	x22, [x8, #48]
    430c:	add	x20, x8, #0x28
    4310:	cmp	x20, x22
    4314:	b.ne	4340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36fc>  // b.any
    4318:	b	42e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36a4>
    431c:	ldr	x0, [x19]
    4320:	add	x2, sp, #0x90
    4324:	mov	w1, #0x21                  	// #33
    4328:	mov	w3, wzr
    432c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4330:	ldr	x22, [x22, #8]
    4334:	orr	w21, w21, w23
    4338:	cmp	x20, x22
    433c:	b.eq	42e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36a4>  // b.none
    4340:	ldrb	w8, [x22]
    4344:	tbnz	w8, #2, 51f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45b4>
    4348:	sub	x8, x22, #0x18
    434c:	cmp	x22, #0x0
    4350:	csel	x25, xzr, x8, eq  // eq = none
    4354:	add	x3, sp, #0x90
    4358:	mov	x0, x19
    435c:	mov	x1, x25
    4360:	mov	w2, w24
    4364:	bl	1f924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE>
    4368:	ldrb	w8, [x22]
    436c:	tbnz	w8, #2, 51f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45b4>
    4370:	ldr	x8, [x25]
    4374:	ldrsh	w9, [x25, #18]
    4378:	add	x0, x25, #0x30
    437c:	ldrb	w8, [x8, #8]
    4380:	cmp	w8, #0x0
    4384:	cinc	w24, w24, ne  // ne = any
    4388:	cmp	w9, #0x0
    438c:	cset	w23, lt  // lt = tstop
    4390:	bl	0 <_ZNK4llvm8DebugLoc3getEv>
    4394:	cbz	x0, 4330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36ec>
    4398:	mov	x25, x0
    439c:	cmp	x0, x27
    43a0:	b.eq	431c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36d8>  // b.none
    43a4:	ldp	w8, w9, [sp, #152]
    43a8:	ldr	w27, [x25, #4]
    43ac:	cmp	w8, w9
    43b0:	b.cs	4560 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x391c>  // b.hs, b.nlast
    43b4:	ldr	x9, [sp, #144]
    43b8:	str	w27, [x9, w8, uxtw #2]
    43bc:	ldp	w8, w9, [sp, #152]
    43c0:	cmp	w8, w9
    43c4:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    43c8:	add	w8, w8, #0x1
    43cc:	str	w8, [sp, #152]
    43d0:	ldrh	w27, [x25, #2]
    43d4:	cmp	w8, w9
    43d8:	b.cs	457c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3938>  // b.hs, b.nlast
    43dc:	ldr	x9, [sp, #144]
    43e0:	str	w27, [x9, w8, uxtw #2]
    43e4:	ldp	w8, w9, [sp, #152]
    43e8:	cmp	w8, w9
    43ec:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    43f0:	add	w8, w8, #0x1
    43f4:	str	w8, [sp, #152]
    43f8:	ldr	w10, [x25, #8]
    43fc:	cbz	w10, 5218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45d4>
    4400:	sub	x10, x25, x10, lsl #3
    4404:	ldr	x10, [x10]
    4408:	cbz	x10, 5238 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45f4>
    440c:	ldrb	w11, [x10]
    4410:	sub	w11, w11, #0x11
    4414:	cmp	w11, #0x3
    4418:	b.cs	5258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4614>  // b.hs, b.nlast
    441c:	ldr	w12, [x19, #304]
    4420:	cbz	w12, 45f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39b0>
    4424:	orr	x11, x10, #0x4
    4428:	cmn	x11, #0x4
    442c:	b.eq	5198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4554>  // b.none
    4430:	ldr	x11, [x19, #288]
    4434:	ubfx	x13, x10, #4, #28
    4438:	eor	w14, w13, w10, lsr #9
    443c:	sub	w13, w12, #0x1
    4440:	and	w12, w13, w14
    4444:	lsl	x14, x12, #4
    4448:	ldr	x14, [x11, x14]
    444c:	cmp	x14, x10
    4450:	b.ne	45b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3970>  // b.any
    4454:	add	x10, x11, x12, lsl #4
    4458:	ldr	w27, [x10, #12]
    445c:	cmp	w8, w9
    4460:	b.cs	4600 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39bc>  // b.hs, b.nlast
    4464:	ldr	x9, [sp, #144]
    4468:	str	w27, [x9, w8, uxtw #2]
    446c:	ldp	w8, w9, [sp, #152]
    4470:	cmp	w8, w9
    4474:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    4478:	add	w8, w8, #0x1
    447c:	str	w8, [sp, #152]
    4480:	ldr	w10, [x25, #8]
    4484:	cmp	w10, #0x2
    4488:	b.ne	44ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3868>  // b.any
    448c:	ldur	x10, [x25, #-8]
    4490:	cbz	x10, 44a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x385c>
    4494:	ldrb	w11, [x10]
    4498:	cmp	w11, #0x5
    449c:	b.ne	5278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4634>  // b.any
    44a0:	ldr	w12, [x19, #304]
    44a4:	cbnz	w12, 44b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3874>
    44a8:	b	465c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a18>
    44ac:	mov	x10, xzr
    44b0:	ldr	w12, [x19, #304]
    44b4:	cbz	w12, 465c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a18>
    44b8:	orr	x11, x10, #0x4
    44bc:	cmn	x11, #0x4
    44c0:	b.eq	5198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4554>  // b.none
    44c4:	ldr	x11, [x19, #288]
    44c8:	ubfx	x13, x10, #4, #28
    44cc:	eor	w14, w13, w10, lsr #9
    44d0:	sub	w13, w12, #0x1
    44d4:	and	w12, w14, w13
    44d8:	lsl	x14, x12, #4
    44dc:	ldr	x14, [x11, x14]
    44e0:	cmp	x14, x10
    44e4:	b.ne	461c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39d8>  // b.any
    44e8:	add	x10, x11, x12, lsl #4
    44ec:	ldr	w27, [x10, #12]
    44f0:	cmp	w8, w9
    44f4:	b.cs	4668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a24>  // b.hs, b.nlast
    44f8:	ldr	x9, [sp, #144]
    44fc:	str	w27, [x9, w8, uxtw #2]
    4500:	ldp	w8, w9, [sp, #152]
    4504:	cmp	w8, w9
    4508:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    450c:	add	w8, w8, #0x1
    4510:	str	w8, [sp, #152]
    4514:	ldrb	w10, [x25, #1]
    4518:	cmp	w8, w9
    451c:	lsr	w27, w10, #7
    4520:	b.cs	4598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3954>  // b.hs, b.nlast
    4524:	ldr	x9, [sp, #144]
    4528:	str	w27, [x9, w8, uxtw #2]
    452c:	ldp	w8, w9, [sp, #152]
    4530:	cmp	w8, w9
    4534:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    4538:	add	w8, w8, #0x1
    453c:	str	w8, [sp, #152]
    4540:	ldr	x0, [x19]
    4544:	add	x2, sp, #0x90
    4548:	mov	w1, #0x23                  	// #35
    454c:	mov	w3, wzr
    4550:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4554:	mov	x27, x25
    4558:	str	wzr, [sp, #152]
    455c:	b	4330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36ec>
    4560:	ldr	x1, [sp, #32]
    4564:	add	x0, sp, #0x90
    4568:	mov	w3, #0x4                   	// #4
    456c:	mov	x2, xzr
    4570:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4574:	ldr	w8, [sp, #152]
    4578:	b	43b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3770>
    457c:	ldr	x1, [sp, #32]
    4580:	add	x0, sp, #0x90
    4584:	mov	w3, #0x4                   	// #4
    4588:	mov	x2, xzr
    458c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4590:	ldr	w8, [sp, #152]
    4594:	b	43dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3798>
    4598:	ldr	x1, [sp, #32]
    459c:	add	x0, sp, #0x90
    45a0:	mov	w3, #0x4                   	// #4
    45a4:	mov	x2, xzr
    45a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    45ac:	ldr	w8, [sp, #152]
    45b0:	b	4524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38e0>
    45b4:	mov	w15, #0x1                   	// #1
    45b8:	cmn	x14, #0x4
    45bc:	b.eq	45f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39b0>  // b.none
    45c0:	add	w12, w12, w15
    45c4:	and	w12, w12, w13
    45c8:	lsl	x14, x12, #4
    45cc:	ldr	x14, [x11, x14]
    45d0:	add	w15, w15, #0x1
    45d4:	cmp	x14, x10
    45d8:	b.ne	45b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3974>  // b.any
    45dc:	mov	w12, w12
    45e0:	add	x10, x11, x12, lsl #4
    45e4:	ldr	w27, [x10, #12]
    45e8:	cmp	w8, w9
    45ec:	b.cc	4464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3820>  // b.lo, b.ul, b.last
    45f0:	b	4600 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39bc>
    45f4:	mov	w27, wzr
    45f8:	cmp	w8, w9
    45fc:	b.cc	4464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3820>  // b.lo, b.ul, b.last
    4600:	ldr	x1, [sp, #32]
    4604:	add	x0, sp, #0x90
    4608:	mov	w3, #0x4                   	// #4
    460c:	mov	x2, xzr
    4610:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4614:	ldr	w8, [sp, #152]
    4618:	b	4464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3820>
    461c:	mov	w15, #0x1                   	// #1
    4620:	cmn	x14, #0x4
    4624:	b.eq	465c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a18>  // b.none
    4628:	add	w12, w12, w15
    462c:	and	w12, w12, w13
    4630:	lsl	x14, x12, #4
    4634:	ldr	x14, [x11, x14]
    4638:	add	w15, w15, #0x1
    463c:	cmp	x14, x10
    4640:	b.ne	4620 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39dc>  // b.any
    4644:	mov	w12, w12
    4648:	add	x10, x11, x12, lsl #4
    464c:	ldr	w27, [x10, #12]
    4650:	cmp	w8, w9
    4654:	b.cc	44f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38b4>  // b.lo, b.ul, b.last
    4658:	b	4668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a24>
    465c:	mov	w27, wzr
    4660:	cmp	w8, w9
    4664:	b.cc	44f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38b4>  // b.lo, b.ul, b.last
    4668:	ldr	x1, [sp, #32]
    466c:	add	x0, sp, #0x90
    4670:	mov	w3, #0x4                   	// #4
    4674:	mov	x2, xzr
    4678:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    467c:	ldr	w8, [sp, #152]
    4680:	b	44f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38b4>
    4684:	ldp	x8, x27, [sp, #48]
    4688:	ldr	x22, [sp, #40]
    468c:	ldr	x20, [x8, #104]
    4690:	cbz	x20, 48f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3cac>
    4694:	ldr	w8, [x20, #12]
    4698:	cbz	w8, 48f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3cac>
    469c:	ldr	x0, [x19]
    46a0:	mov	w1, #0xe                   	// #14
    46a4:	mov	w2, #0x4                   	// #4
    46a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    46ac:	str	x22, [sp, #504]
    46b0:	str	d9, [sp, #512]
    46b4:	ldr	w8, [x20, #8]
    46b8:	ldr	x9, [x20]
    46bc:	cbz	w8, 46e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3aa4>
    46c0:	add	x10, x9, #0x8
    46c4:	mov	x20, x9
    46c8:	b	46d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a90>
    46cc:	mov	x20, x10
    46d0:	add	x10, x10, #0x8
    46d4:	ldur	x11, [x10, #-8]
    46d8:	cbz	x11, 46cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a88>
    46dc:	cmn	x11, #0x8
    46e0:	b.eq	46cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a88>  // b.none
    46e4:	b	46ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3aa8>
    46e8:	mov	x20, x9
    46ec:	add	x22, x9, x8, lsl #3
    46f0:	cmp	x22, x20
    46f4:	b.eq	48d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c90>  // b.none
    46f8:	ldr	x26, [x20]
    46fc:	mov	x23, x26
    4700:	ldr	x8, [x23], #16
    4704:	cbz	x8, 4770 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b2c>
    4708:	mov	w10, #0x1                   	// #1
    470c:	mov	x9, x23
    4710:	b	472c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ae8>
    4714:	mov	w10, wzr
    4718:	sxtb	w11, w11
    471c:	tbnz	w11, #31, 477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b38>
    4720:	subs	x8, x8, #0x1
    4724:	add	x9, x9, #0x1
    4728:	b.eq	4774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b30>  // b.none
    472c:	ldrb	w11, [x9]
    4730:	tbz	w10, #0, 4714 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ad0>
    4734:	sub	w10, w11, #0x30
    4738:	cmp	w10, #0xa
    473c:	mov	w10, #0x1                   	// #1
    4740:	b.cc	4718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ad4>  // b.lo, b.ul, b.last
    4744:	and	w12, w11, #0xffffffdf
    4748:	sub	w12, w12, #0x41
    474c:	and	w12, w12, #0xff
    4750:	cmp	w12, #0x1a
    4754:	b.cc	4718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ad4>  // b.lo, b.ul, b.last
    4758:	cmp	w11, #0x2e
    475c:	mov	w10, #0x1                   	// #1
    4760:	b.eq	4720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3adc>  // b.none
    4764:	cmp	w11, #0x5f
    4768:	b.eq	4720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3adc>  // b.none
    476c:	b	4714 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ad0>
    4770:	mov	w10, #0x1                   	// #1
    4774:	eor	w24, w10, #0x1
    4778:	b	4780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b3c>
    477c:	mov	w24, #0x2                   	// #2
    4780:	ldr	x1, [x26, #8]
    4784:	mov	x0, x27
    4788:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    478c:	ldr	w8, [sp, #512]
    4790:	ldr	w9, [sp, #516]
    4794:	mov	w25, w0
    4798:	cmp	w8, w9
    479c:	b.cs	48b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c74>  // b.hs, b.nlast
    47a0:	ldr	x9, [sp, #504]
    47a4:	str	x25, [x9, w8, uxtw #3]
    47a8:	ldr	w9, [sp, #512]
    47ac:	ldr	w8, [sp, #516]
    47b0:	cmp	w9, w8
    47b4:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    47b8:	add	w9, w9, #0x1
    47bc:	str	w9, [sp, #512]
    47c0:	ldr	x10, [x26, #8]
    47c4:	cbz	x10, 52f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46b4>
    47c8:	ldrb	w10, [x10, #16]
    47cc:	cmp	w10, #0x12
    47d0:	b.ne	47f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3bb0>  // b.any
    47d4:	cmp	w24, #0x0
    47d8:	mov	w10, #0x4                   	// #4
    47dc:	mov	w11, #0x7                   	// #7
    47e0:	csel	w24, w11, w10, eq  // eq = none
    47e4:	mov	w25, #0x2                   	// #2
    47e8:	ldr	x26, [x26]
    47ec:	cbnz	x26, 4844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c00>
    47f0:	b	487c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c38>
    47f4:	cbz	w24, 4814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3bd0>
    47f8:	cmp	w24, #0x1
    47fc:	mov	w10, #0x4                   	// #4
    4800:	cinc	w24, w10, eq  // eq = none
    4804:	mov	w25, #0x1                   	// #1
    4808:	ldr	x26, [x26]
    480c:	cbnz	x26, 4844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c00>
    4810:	b	487c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c38>
    4814:	mov	w24, #0x6                   	// #6
    4818:	mov	w25, #0x1                   	// #1
    481c:	ldr	x26, [x26]
    4820:	cbnz	x26, 4844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c00>
    4824:	b	487c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c38>
    4828:	ldr	x1, [sp, #40]
    482c:	add	x0, sp, #0x1f8
    4830:	mov	w3, #0x8                   	// #8
    4834:	mov	x2, xzr
    4838:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    483c:	ldr	w9, [sp, #512]
    4840:	b	4850 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c0c>
    4844:	ldrb	w27, [x23]
    4848:	cmp	w9, w8
    484c:	b.cs	4828 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3be4>  // b.hs, b.nlast
    4850:	ldr	x8, [sp, #504]
    4854:	str	x27, [x8, w9, uxtw #3]
    4858:	ldr	w9, [sp, #512]
    485c:	ldr	w8, [sp, #516]
    4860:	cmp	w9, w8
    4864:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    4868:	add	w9, w9, #0x1
    486c:	subs	x26, x26, #0x1
    4870:	add	x23, x23, #0x1
    4874:	str	w9, [sp, #512]
    4878:	b.ne	4844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c00>  // b.any
    487c:	ldr	x0, [x19]
    4880:	add	x2, sp, #0x1f8
    4884:	mov	w1, w25
    4888:	mov	w3, w24
    488c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4890:	ldr	x27, [sp, #56]
    4894:	add	x20, x20, #0x8
    4898:	str	wzr, [sp, #512]
    489c:	b	48a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c60>
    48a0:	add	x20, x20, #0x8
    48a4:	ldr	x8, [x20]
    48a8:	cbz	x8, 48a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c5c>
    48ac:	cmn	x8, #0x8
    48b0:	b.eq	48a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c5c>  // b.none
    48b4:	b	46f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3aac>
    48b8:	ldr	x1, [sp, #40]
    48bc:	add	x0, sp, #0x1f8
    48c0:	mov	w3, #0x8                   	// #8
    48c4:	mov	x2, xzr
    48c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    48cc:	ldr	w8, [sp, #512]
    48d0:	b	47a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b5c>
    48d4:	ldr	x0, [x19]
    48d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    48dc:	ldr	x0, [sp, #504]
    48e0:	ldr	x22, [sp, #40]
    48e4:	cmp	x0, x22
    48e8:	b.eq	48f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3cac>  // b.none
    48ec:	bl	0 <free>
    48f0:	tbz	w21, #0, 4bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f80>
    48f4:	ldr	x0, [x19]
    48f8:	mov	w1, #0x10                  	// #16
    48fc:	mov	w2, #0x3                   	// #3
    4900:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4904:	ldr	x20, [sp, #48]
    4908:	str	x22, [sp, #504]
    490c:	str	d9, [sp, #512]
    4910:	ldrb	w8, [x20, #34]
    4914:	tbz	w8, #5, 4940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3cfc>
    4918:	add	x1, sp, #0x1f8
    491c:	mov	x0, x19
    4920:	mov	x2, x20
    4924:	bl	1f710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>
    4928:	ldr	x0, [x19]
    492c:	add	x2, sp, #0x1f8
    4930:	mov	w1, #0xb                   	// #11
    4934:	mov	w3, wzr
    4938:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    493c:	str	wzr, [sp, #512]
    4940:	ldr	x8, [sp, #8]
    4944:	str	d11, [sp, #424]
    4948:	str	x8, [sp, #416]
    494c:	ldr	x20, [x20, #80]
    4950:	b	4958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d14>
    4954:	ldr	x20, [x20, #8]
    4958:	cmp	x28, x20
    495c:	b.eq	4b94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f50>  // b.none
    4960:	ldrb	w8, [x20]
    4964:	tbnz	w8, #2, 5298 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4654>
    4968:	sub	x8, x20, #0x18
    496c:	cmp	x20, #0x0
    4970:	csel	x8, xzr, x8, eq  // eq = none
    4974:	ldr	x21, [x8, #48]
    4978:	add	x22, x8, #0x28
    497c:	b	499c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d58>
    4980:	ldr	x0, [x19]
    4984:	add	x2, sp, #0x1f8
    4988:	mov	w1, #0xb                   	// #11
    498c:	mov	w3, wzr
    4990:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4994:	str	wzr, [sp, #512]
    4998:	ldr	x21, [x21, #8]
    499c:	cmp	x22, x21
    49a0:	b.eq	4954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d10>  // b.none
    49a4:	ldrb	w8, [x21]
    49a8:	tbnz	w8, #2, 51f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x45b4>
    49ac:	sub	x8, x21, #0x18
    49b0:	cmp	x21, #0x0
    49b4:	csel	x24, xzr, x8, eq  // eq = none
    49b8:	str	wzr, [sp, #424]
    49bc:	ldrsh	w8, [x24, #18]
    49c0:	tbz	w8, #31, 4998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d54>
    49c4:	add	x1, sp, #0x1a0
    49c8:	mov	x0, x24
    49cc:	bl	0 <_ZNK4llvm11Instruction35getAllMetadataOtherThanDebugLocImplERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
    49d0:	ldr	w8, [sp, #424]
    49d4:	cbz	w8, 4998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d54>
    49d8:	mov	x0, x27
    49dc:	mov	x1, x24
    49e0:	bl	0 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE>
    49e4:	ldr	w8, [sp, #512]
    49e8:	ldr	w9, [sp, #516]
    49ec:	mov	w23, w0
    49f0:	cmp	w8, w9
    49f4:	b.cs	4b78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f34>  // b.hs, b.nlast
    49f8:	ldr	x9, [sp, #504]
    49fc:	str	x23, [x9, w8, uxtw #3]
    4a00:	ldr	w9, [sp, #512]
    4a04:	ldr	w8, [sp, #516]
    4a08:	cmp	w9, w8
    4a0c:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    4a10:	ldr	w23, [sp, #424]
    4a14:	add	w9, w9, #0x1
    4a18:	str	w9, [sp, #512]
    4a1c:	cbz	w23, 4980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d3c>
    4a20:	mov	x24, xzr
    4a24:	ldr	x10, [sp, #416]
    4a28:	lsl	x11, x24, #4
    4a2c:	cmp	w9, w8
    4a30:	ldr	w25, [x10, x11]
    4a34:	b.cs	4b00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ebc>  // b.hs, b.nlast
    4a38:	ldr	x8, [sp, #504]
    4a3c:	str	x25, [x8, w9, uxtw #3]
    4a40:	ldr	w8, [sp, #512]
    4a44:	ldr	w9, [sp, #516]
    4a48:	cmp	w8, w9
    4a4c:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    4a50:	ldr	w10, [sp, #424]
    4a54:	add	w8, w8, #0x1
    4a58:	str	w8, [sp, #512]
    4a5c:	cmp	x24, x10
    4a60:	b.cs	51d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4594>  // b.hs, b.nlast
    4a64:	ldr	w12, [x19, #304]
    4a68:	cbz	w12, 51b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4574>
    4a6c:	ldr	x10, [sp, #416]
    4a70:	add	x10, x10, x24, lsl #4
    4a74:	ldr	x10, [x10, #8]
    4a78:	orr	x11, x10, #0x4
    4a7c:	cmn	x11, #0x4
    4a80:	b.eq	5198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4554>  // b.none
    4a84:	ldr	x11, [x19, #288]
    4a88:	ubfx	x13, x10, #4, #28
    4a8c:	eor	w14, w13, w10, lsr #9
    4a90:	sub	w13, w12, #0x1
    4a94:	and	w12, w14, w13
    4a98:	lsl	x14, x12, #4
    4a9c:	ldr	x14, [x11, x14]
    4aa0:	cmp	x14, x10
    4aa4:	b.ne	4b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ed8>  // b.any
    4aa8:	add	x10, x11, x12, lsl #4
    4aac:	ldr	x10, [x10, #8]
    4ab0:	lsr	x10, x10, #32
    4ab4:	cbz	x10, 51b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4574>
    4ab8:	cmp	w8, w9
    4abc:	sub	w25, w10, #0x1
    4ac0:	b.cs	4b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f18>  // b.hs, b.nlast
    4ac4:	ldr	x9, [sp, #504]
    4ac8:	str	x25, [x9, w8, uxtw #3]
    4acc:	ldr	w9, [sp, #512]
    4ad0:	ldr	w8, [sp, #516]
    4ad4:	cmp	w9, w8
    4ad8:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    4adc:	add	x24, x24, #0x1
    4ae0:	add	w9, w9, #0x1
    4ae4:	cmp	x24, x23
    4ae8:	str	w9, [sp, #512]
    4aec:	b.eq	4980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d3c>  // b.none
    4af0:	ldr	w10, [sp, #424]
    4af4:	cmp	x24, x10
    4af8:	b.cc	4a24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3de0>  // b.lo, b.ul, b.last
    4afc:	b	51d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4594>
    4b00:	ldr	x1, [sp, #40]
    4b04:	add	x0, sp, #0x1f8
    4b08:	mov	w3, #0x8                   	// #8
    4b0c:	mov	x2, xzr
    4b10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4b14:	ldr	w9, [sp, #512]
    4b18:	b	4a38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3df4>
    4b1c:	mov	w15, #0x1                   	// #1
    4b20:	cmn	x14, #0x4
    4b24:	b.eq	51b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4574>  // b.none
    4b28:	add	w12, w12, w15
    4b2c:	and	w12, w12, w13
    4b30:	lsl	x14, x12, #4
    4b34:	ldr	x14, [x11, x14]
    4b38:	add	w15, w15, #0x1
    4b3c:	cmp	x14, x10
    4b40:	b.ne	4b20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3edc>  // b.any
    4b44:	mov	w12, w12
    4b48:	add	x10, x11, x12, lsl #4
    4b4c:	ldr	x10, [x10, #8]
    4b50:	lsr	x10, x10, #32
    4b54:	cbnz	x10, 4ab8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3e74>
    4b58:	b	51b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4574>
    4b5c:	ldr	x1, [sp, #40]
    4b60:	add	x0, sp, #0x1f8
    4b64:	mov	w3, #0x8                   	// #8
    4b68:	mov	x2, xzr
    4b6c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4b70:	ldr	w8, [sp, #512]
    4b74:	b	4ac4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3e80>
    4b78:	ldr	x1, [sp, #40]
    4b7c:	add	x0, sp, #0x1f8
    4b80:	mov	w3, #0x8                   	// #8
    4b84:	mov	x2, xzr
    4b88:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4b8c:	ldr	w8, [sp, #512]
    4b90:	b	49f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3db4>
    4b94:	ldr	x0, [x19]
    4b98:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4b9c:	ldr	x0, [sp, #416]
    4ba0:	ldr	x8, [sp, #8]
    4ba4:	cmp	x0, x8
    4ba8:	b.eq	4bb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f6c>  // b.none
    4bac:	bl	0 <free>
    4bb0:	ldr	x0, [sp, #504]
    4bb4:	ldr	x22, [sp, #40]
    4bb8:	cmp	x0, x22
    4bbc:	b.eq	4bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f80>  // b.none
    4bc0:	bl	0 <free>
    4bc4:	ldrb	w8, [x19, #344]
    4bc8:	cbz	w8, 4bd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f94>
    4bcc:	ldr	x1, [sp, #48]
    4bd0:	mov	x0, x19
    4bd4:	bl	e8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE>
    4bd8:	mov	x0, x27
    4bdc:	bl	0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv>
    4be0:	ldr	x0, [x19]
    4be4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4be8:	ldr	x0, [sp, #144]
    4bec:	ldp	x20, x8, [sp, #24]
    4bf0:	ldr	x21, [sp, #16]
    4bf4:	cmp	x0, x8
    4bf8:	b.eq	40c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3480>  // b.none
    4bfc:	bl	0 <free>
    4c00:	b	40c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3480>
    4c04:	cmp	x12, #0x0
    4c08:	csel	x3, x8, x12, eq  // eq = none
    4c0c:	b	418c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3548>
    4c10:	ldr	x8, [x19, #584]
    4c14:	cbz	x8, 4c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3fdc>
    4c18:	mov	x0, x19
    4c1c:	bl	eba8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv>
    4c20:	ldr	x9, [x19]
    4c24:	ldr	x11, [x19, #792]
    4c28:	ldr	x8, [x9]
    4c2c:	ldr	w9, [x9, #8]
    4c30:	ldr	w10, [x8, #8]
    4c34:	add	x9, x9, x10, lsl #3
    4c38:	sub	x9, x9, x11
    4c3c:	tst	x9, #0x1f
    4c40:	b.ne	5590 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x494c>  // b.any
    4c44:	ldr	x11, [x19, #648]
    4c48:	ubfx	x12, x11, #3, #32
    4c4c:	cmp	x12, x10
    4c50:	b.cs	55b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x496c>  // b.hs, b.nlast
    4c54:	ldr	x8, [x8]
    4c58:	ands	x11, x11, #0x7
    4c5c:	add	x8, x8, x12
    4c60:	ldr	w10, [x8]
    4c64:	b.eq	4ccc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4088>  // b.none
    4c68:	ldr	w12, [x8, #4]
    4c6c:	neg	w14, w11
    4c70:	mov	w15, #0xffffffff            	// #-1
    4c74:	lsr	w13, w10, w11
    4c78:	lsl	w15, w15, w14
    4c7c:	bic	w13, w13, w15
    4c80:	lsl	w12, w12, w14
    4c84:	orr	w12, w12, w13
    4c88:	cbnz	w12, 4cd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4090>
    4c8c:	lsr	x9, x9, #5
    4c90:	add	w9, w9, #0x1
    4c94:	cbz	x11, 4cf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x40b0>
    4c98:	ldr	w12, [x8, #4]
    4c9c:	mov	w13, #0xffffffff            	// #-1
    4ca0:	neg	w15, w11
    4ca4:	lsl	w14, w9, w11
    4ca8:	lsl	w11, w13, w11
    4cac:	lsr	w9, w9, w15
    4cb0:	bic	w10, w10, w11
    4cb4:	bic	w9, w9, w11
    4cb8:	and	w11, w12, w11
    4cbc:	orr	w10, w10, w14
    4cc0:	orr	w9, w11, w9
    4cc4:	stp	w10, w9, [x8]
    4cc8:	b	4cf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x40b4>
    4ccc:	mov	w12, w10
    4cd0:	cbz	w12, 4c8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4048>
    4cd4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4cd8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4cdc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ce0:	add	x0, x0, #0x0
    4ce4:	add	x1, x1, #0x0
    4ce8:	add	x3, x3, #0x0
    4cec:	mov	w2, #0x6d                  	// #109
    4cf0:	bl	0 <__assert_fail>
    4cf4:	str	w9, [x8]
    4cf8:	ldr	x0, [x19]
    4cfc:	mov	w1, #0xe                   	// #14
    4d00:	mov	w2, #0x4                   	// #4
    4d04:	mov	w20, #0x4                   	// #4
    4d08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4d0c:	mov	w0, #0x220                 	// #544
    4d10:	bl	0 <_Znwm>
    4d14:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4d18:	ldr	x8, [x8]
    4d1c:	movi	v0.2s, #0x1
    4d20:	str	d0, [x0, #8]
    4d24:	movi	v0.2d, #0x0
    4d28:	add	x8, x8, #0x10
    4d2c:	mov	x9, x0
    4d30:	mov	x21, x0
    4d34:	mov	w10, #0x3                   	// #3
    4d38:	str	x8, [x0]
    4d3c:	stp	q0, q0, [x0, #48]
    4d40:	stp	q0, q0, [x0, #80]
    4d44:	stp	q0, q0, [x0, #112]
    4d48:	stp	q0, q0, [x0, #144]
    4d4c:	stp	q0, q0, [x0, #176]
    4d50:	stp	q0, q0, [x0, #208]
    4d54:	stp	q0, q0, [x0, #240]
    4d58:	stp	q0, q0, [x0, #272]
    4d5c:	stp	q0, q0, [x0, #304]
    4d60:	stp	q0, q0, [x0, #336]
    4d64:	stp	q0, q0, [x0, #368]
    4d68:	stp	q0, q0, [x0, #400]
    4d6c:	stp	q0, q0, [x0, #432]
    4d70:	stp	q0, q0, [x0, #464]
    4d74:	stp	q0, q0, [x0, #496]
    4d78:	str	q0, [x9, #32]!
    4d7c:	mov	w8, #0x8                   	// #8
    4d80:	str	q0, [x0, #528]
    4d84:	str	x9, [x21, #16]!
    4d88:	str	x10, [x9]
    4d8c:	str	d8, [x0, #24]
    4d90:	mov	w11, #0xff                  	// #255
    4d94:	str	x8, [x0, #48]
    4d98:	str	x8, [x0, #64]
    4d9c:	ldp	w8, w10, [x0, #24]
    4da0:	ldur	w9, [sp, #147]
    4da4:	strb	w11, [x0, #40]
    4da8:	ldr	w11, [sp, #144]
    4dac:	cmp	w8, w10
    4db0:	strb	w20, [x0, #56]
    4db4:	strb	w20, [x0, #72]
    4db8:	str	w9, [x0, #76]
    4dbc:	stur	w11, [x0, #73]
    4dc0:	b.cs	5178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4534>  // b.hs, b.nlast
    4dc4:	add	w8, w8, #0x1
    4dc8:	str	w8, [x0, #24]
    4dcc:	ldr	x23, [x19]
    4dd0:	stp	x21, x0, [sp, #504]
    4dd4:	mov	x1, x21
    4dd8:	mov	x0, x23
    4ddc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4de0:	ldp	x1, x8, [x23, #32]
    4de4:	add	x22, x23, #0x18
    4de8:	cmp	x1, x8
    4dec:	b.eq	4e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x41d4>  // b.none
    4df0:	stp	x21, xzr, [x1]
    4df4:	ldr	x8, [sp, #512]
    4df8:	add	x24, x1, #0x10
    4dfc:	stp	xzr, xzr, [sp, #504]
    4e00:	str	x8, [x1, #8]
    4e04:	str	x24, [x23, #32]
    4e08:	ldr	x21, [sp, #512]
    4e0c:	ldr	x22, [x22]
    4e10:	cbnz	x21, 4e34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x41f0>
    4e14:	b	4ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4278>
    4e18:	add	x2, sp, #0x1f8
    4e1c:	mov	x0, x22
    4e20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e24:	ldr	x24, [x23, #32]
    4e28:	ldr	x21, [sp, #512]
    4e2c:	ldr	x22, [x22]
    4e30:	cbz	x21, 4ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4278>
    4e34:	adrp	x9, 0 <__pthread_key_create>
    4e38:	ldr	x9, [x9]
    4e3c:	add	x8, x21, #0x8
    4e40:	cbz	x9, 4e60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x421c>
    4e44:	ldaxr	w9, [x8]
    4e48:	sub	w10, w9, #0x1
    4e4c:	stlxr	w11, w10, [x8]
    4e50:	cbnz	w11, 4e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4200>
    4e54:	cmp	w9, #0x1
    4e58:	b.eq	4e74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4230>  // b.none
    4e5c:	b	4ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4278>
    4e60:	ldr	w9, [x8]
    4e64:	sub	w10, w9, #0x1
    4e68:	str	w10, [x8]
    4e6c:	cmp	w9, #0x1
    4e70:	b.ne	4ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4278>  // b.any
    4e74:	mov	x20, x21
    4e78:	ldr	x8, [x20], #12
    4e7c:	mov	x0, x21
    4e80:	ldr	x8, [x8, #16]
    4e84:	blr	x8
    4e88:	adrp	x8, 0 <__pthread_key_create>
    4e8c:	ldr	x8, [x8]
    4e90:	cbz	x8, 50e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x44a0>
    4e94:	ldaxr	w8, [x20]
    4e98:	sub	w9, w8, #0x1
    4e9c:	stlxr	w10, w9, [x20]
    4ea0:	cbnz	w10, 4e94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4250>
    4ea4:	cmp	w8, #0x1
    4ea8:	b.ne	4ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4278>  // b.any
    4eac:	ldr	x8, [x21]
    4eb0:	mov	x0, x21
    4eb4:	ldr	x8, [x8, #24]
    4eb8:	blr	x8
    4ebc:	ldr	x8, [x19, #16]
    4ec0:	ldr	x20, [x8, #32]
    4ec4:	add	x23, x8, #0x18
    4ec8:	cmp	x23, x20
    4ecc:	b.eq	4ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43b8>  // b.none
    4ed0:	sub	x8, x24, x22
    4ed4:	lsr	x8, x8, #4
    4ed8:	add	w21, w8, #0x3
    4edc:	mov	x24, #0xfffffffffffffff0    	// #-16
    4ee0:	b	4ef0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42ac>
    4ee4:	ldr	x20, [x20, #8]
    4ee8:	cmp	x23, x20
    4eec:	b.eq	4ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43b8>  // b.none
    4ef0:	ldrb	w8, [x20]
    4ef4:	tbnz	w8, #2, 5318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x46d4>
    4ef8:	sub	x8, x20, #0x38
    4efc:	cmp	x20, #0x0
    4f00:	csel	x22, xzr, x8, eq  // eq = none
    4f04:	mov	x0, x22
    4f08:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    4f0c:	tbnz	w0, #0, 4ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42a0>
    4f10:	mov	x0, x27
    4f14:	mov	x1, x22
    4f18:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    4f1c:	ldr	w9, [sp, #88]
    4f20:	mov	w8, w0
    4f24:	str	x8, [sp, #144]
    4f28:	str	x22, [sp, #416]
    4f2c:	cbz	w9, 4f9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4358>
    4f30:	orr	x8, x22, #0x8
    4f34:	cmn	x8, #0x8
    4f38:	b.eq	5378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4734>  // b.none
    4f3c:	ldr	x8, [sp, #72]
    4f40:	ubfx	x10, x22, #4, #28
    4f44:	eor	w10, w10, w22, lsr #9
    4f48:	sub	w9, w9, #0x1
    4f4c:	and	w10, w9, w10
    4f50:	add	x0, x8, w10, uxtw #4
    4f54:	ldr	x12, [x0]
    4f58:	cmp	x12, x22
    4f5c:	b.eq	4fb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4374>  // b.none
    4f60:	mov	x11, xzr
    4f64:	mov	w13, #0x1                   	// #1
    4f68:	cmn	x12, #0x8
    4f6c:	b.eq	4ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43ac>  // b.none
    4f70:	cmp	x11, #0x0
    4f74:	add	w10, w10, w13
    4f78:	ccmp	x12, x24, #0x0, eq  // eq = none
    4f7c:	and	w10, w10, w9
    4f80:	csel	x11, x11, x0, ne  // ne = any
    4f84:	add	x0, x8, w10, uxtw #4
    4f88:	ldr	x12, [x0]
    4f8c:	add	w13, w13, #0x1
    4f90:	cmp	x12, x22
    4f94:	b.eq	4fb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4374>  // b.none
    4f98:	b	4f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4324>
    4f9c:	mov	x3, xzr
    4fa0:	add	x0, sp, #0x40
    4fa4:	add	x1, sp, #0x1a0
    4fa8:	add	x2, sp, #0x1a0
    4fac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fb0:	ldr	x8, [sp, #416]
    4fb4:	stp	x8, xzr, [x0]
    4fb8:	ldr	x8, [x0, #8]
    4fbc:	ldr	x9, [x19, #792]
    4fc0:	sub	x8, x8, x9
    4fc4:	tst	x8, #0x1f
    4fc8:	b.ne	5490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x484c>  // b.any
    4fcc:	lsr	x8, x8, #5
    4fd0:	add	x8, x8, #0x1
    4fd4:	str	x8, [sp, #152]
    4fd8:	ldr	x0, [x19]
    4fdc:	add	x2, sp, #0x90
    4fe0:	mov	w1, #0x3                   	// #3
    4fe4:	mov	w3, w21
    4fe8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fec:	b	4ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42a0>
    4ff0:	cmp	x11, #0x0
    4ff4:	csel	x3, x0, x11, eq  // eq = none
    4ff8:	b	4fa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x435c>
    4ffc:	ldr	x0, [x19]
    5000:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5004:	ldrb	w8, [x19, #664]
    5008:	cbz	w8, 50ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4468>
    500c:	ldr	x9, [x19, #656]
    5010:	ldr	x10, [sp]
    5014:	ldr	w8, [x9, #8]
    5018:	cmp	w8, w10
    501c:	b.ls	55dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4998>  // b.plast
    5020:	ldr	x9, [x9]
    5024:	add	x20, x19, #0x2a8
    5028:	sub	x2, x8, x10
    502c:	mov	x0, x20
    5030:	add	x1, x9, x10
    5034:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    5038:	mov	x0, x20
    503c:	bl	0 <_ZN4llvm4SHA16resultEv>
    5040:	ldr	w8, [x0]
    5044:	add	x2, sp, #0x1f8
    5048:	mov	w1, #0x11                  	// #17
    504c:	mov	w3, wzr
    5050:	rev	w8, w8
    5054:	str	w8, [sp, #504]
    5058:	ldr	w8, [x0, #4]
    505c:	rev	w8, w8
    5060:	str	w8, [sp, #508]
    5064:	ldr	w8, [x0, #8]
    5068:	rev	w8, w8
    506c:	str	w8, [sp, #512]
    5070:	ldr	w8, [x0, #12]
    5074:	rev	w8, w8
    5078:	str	w8, [sp, #516]
    507c:	ldr	w8, [x0, #16]
    5080:	rev	w8, w8
    5084:	str	w8, [sp, #520]
    5088:	ldr	x0, [x19]
    508c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5090:	ldr	x8, [x19, #672]
    5094:	cbz	x8, 50ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4468>
    5098:	add	x10, sp, #0xf9
    509c:	ldr	w9, [sp, #520]
    50a0:	ldur	q0, [x10, #255]
    50a4:	str	w9, [x8, #16]
    50a8:	str	q0, [x8]
    50ac:	ldr	x0, [x19]
    50b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50b4:	ldr	x0, [sp, #72]
    50b8:	bl	0 <_ZdlPv>
    50bc:	add	sp, sp, #0x410
    50c0:	ldp	x20, x19, [sp, #112]
    50c4:	ldp	x22, x21, [sp, #96]
    50c8:	ldp	x24, x23, [sp, #80]
    50cc:	ldp	x26, x25, [sp, #64]
    50d0:	ldp	x28, x27, [sp, #48]
    50d4:	ldp	x29, x30, [sp, #32]
    50d8:	ldp	d9, d8, [sp, #16]
    50dc:	ldp	d11, d10, [sp], #128
    50e0:	ret
    50e4:	ldr	w8, [x20]
    50e8:	sub	w9, w8, #0x1
    50ec:	str	w9, [x20]
    50f0:	cmp	w8, #0x1
    50f4:	b.eq	4eac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4268>  // b.none
    50f8:	b	4ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4278>
    50fc:	ldr	w8, [x20]
    5100:	sub	w9, w8, #0x1
    5104:	str	w9, [x20]
    5108:	cmp	w8, #0x1
    510c:	b.eq	3a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dbc>  // b.none
    5110:	b	3a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dcc>
    5114:	mov	w3, #0x10                  	// #16
    5118:	mov	x0, x24
    511c:	mov	x2, xzr
    5120:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5124:	ldr	w8, [x23, #24]
    5128:	b	12ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x6a8>
    512c:	mov	w3, #0x10                  	// #16
    5130:	mov	x0, x24
    5134:	mov	x2, xzr
    5138:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    513c:	ldr	w8, [x23, #24]
    5140:	b	14f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x8b4>
    5144:	mov	w3, #0x10                  	// #16
    5148:	mov	x0, x24
    514c:	mov	x2, xzr
    5150:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5154:	ldr	w8, [x23, #24]
    5158:	b	18c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xc7c>
    515c:	ldr	x1, [sp, #8]
    5160:	add	x0, sp, #0x1f8
    5164:	mov	w3, #0x8                   	// #8
    5168:	mov	x2, xzr
    516c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5170:	ldr	w8, [sp, #512]
    5174:	b	1bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf80>
    5178:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    517c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5180:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5184:	add	x0, x0, #0x0
    5188:	add	x1, x1, #0x0
    518c:	add	x3, x3, #0x0
    5190:	mov	w2, #0x43                  	// #67
    5194:	bl	0 <__assert_fail>
    5198:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    519c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51a4:	add	x0, x0, #0x0
    51a8:	add	x1, x1, #0x0
    51ac:	add	x3, x3, #0x0
    51b0:	mov	w2, #0x252                 	// #594
    51b4:	bl	0 <__assert_fail>
    51b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51c0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51c4:	add	x0, x0, #0x0
    51c8:	add	x1, x1, #0x0
    51cc:	add	x3, x3, #0x0
    51d0:	mov	w2, #0x9b                  	// #155
    51d4:	bl	0 <__assert_fail>
    51d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51e4:	add	x0, x0, #0x0
    51e8:	add	x1, x1, #0x0
    51ec:	add	x3, x3, #0x0
    51f0:	mov	w2, #0x95                  	// #149
    51f4:	bl	0 <__assert_fail>
    51f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    51fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5200:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5204:	add	x0, x0, #0x0
    5208:	add	x1, x1, #0x0
    520c:	add	x3, x3, #0x0
    5210:	mov	w2, #0x8b                  	// #139
    5214:	bl	0 <__assert_fail>
    5218:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    521c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5220:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5224:	add	x0, x0, #0x0
    5228:	add	x1, x1, #0x0
    522c:	add	x3, x3, #0x0
    5230:	mov	w2, #0x436                 	// #1078
    5234:	bl	0 <__assert_fail>
    5238:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    523c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5240:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5244:	add	x0, x0, #0x0
    5248:	add	x1, x1, #0x0
    524c:	add	x3, x3, #0x0
    5250:	mov	w2, #0x69                  	// #105
    5254:	bl	0 <__assert_fail>
    5258:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    525c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5260:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5264:	add	x0, x0, #0x0
    5268:	add	x1, x1, #0x0
    526c:	add	x3, x3, #0x0
    5270:	mov	w2, #0x108                 	// #264
    5274:	bl	0 <__assert_fail>
    5278:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    527c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5280:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5284:	add	x0, x0, #0x0
    5288:	add	x1, x1, #0x0
    528c:	add	x3, x3, #0x0
    5290:	mov	w2, #0x134                 	// #308
    5294:	bl	0 <__assert_fail>
    5298:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    529c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52a4:	add	x0, x0, #0x0
    52a8:	add	x1, x1, #0x0
    52ac:	add	x3, x3, #0x0
    52b0:	mov	w2, #0x8b                  	// #139
    52b4:	bl	0 <__assert_fail>
    52b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52c0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52c4:	add	x0, x0, #0x0
    52c8:	add	x1, x1, #0x0
    52cc:	add	x3, x3, #0x0
    52d0:	mov	w2, #0xbb                  	// #187
    52d4:	bl	0 <__assert_fail>
    52d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52e4:	add	x0, x0, #0x0
    52e8:	add	x1, x1, #0x0
    52ec:	add	x3, x3, #0x0
    52f0:	mov	w2, #0x252                 	// #594
    52f4:	bl	0 <__assert_fail>
    52f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    52fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5300:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5304:	add	x0, x0, #0x0
    5308:	add	x1, x1, #0x0
    530c:	add	x3, x3, #0x0
    5310:	mov	w2, #0x69                  	// #105
    5314:	bl	0 <__assert_fail>
    5318:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    531c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5320:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5324:	add	x0, x0, #0x0
    5328:	add	x1, x1, #0x0
    532c:	add	x3, x3, #0x0
    5330:	mov	w2, #0x8b                  	// #139
    5334:	bl	0 <__assert_fail>
    5338:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    533c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5340:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5344:	add	x0, x0, #0x0
    5348:	add	x1, x1, #0x0
    534c:	add	x3, x3, #0x0
    5350:	mov	w2, #0xa9                  	// #169
    5354:	bl	0 <__assert_fail>
    5358:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    535c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5360:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5364:	add	x0, x0, #0x0
    5368:	add	x1, x1, #0x0
    536c:	add	x3, x3, #0x0
    5370:	mov	w2, #0x304                 	// #772
    5374:	bl	0 <__assert_fail>
    5378:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    537c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5380:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5384:	add	x0, x0, #0x0
    5388:	add	x1, x1, #0x0
    538c:	add	x3, x3, #0x0
    5390:	mov	w2, #0x252                 	// #594
    5394:	bl	0 <__assert_fail>
    5398:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    539c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53a4:	add	x0, x0, #0x0
    53a8:	add	x1, x1, #0x0
    53ac:	add	x3, x3, #0x0
    53b0:	mov	w2, #0xeb                  	// #235
    53b4:	bl	0 <__assert_fail>
    53b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53c0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53c4:	add	x0, x0, #0x0
    53c8:	add	x1, x1, #0x0
    53cc:	add	x3, x3, #0x0
    53d0:	mov	w2, #0xe9                  	// #233
    53d4:	bl	0 <__assert_fail>
    53d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53e4:	add	x0, x0, #0x0
    53e8:	add	x1, x1, #0x0
    53ec:	add	x3, x3, #0x0
    53f0:	mov	w2, #0x29                  	// #41
    53f4:	bl	0 <__assert_fail>
    53f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5400:	add	x0, x0, #0x0
    5404:	add	x1, x1, #0x0
    5408:	mov	w2, #0x435                 	// #1077
    540c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5410:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5414:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5418:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    541c:	add	x0, x0, #0x0
    5420:	add	x1, x1, #0x0
    5424:	add	x3, x3, #0x0
    5428:	mov	w2, #0x8b                  	// #139
    542c:	bl	0 <__assert_fail>
    5430:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5434:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5438:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    543c:	add	x0, x0, #0x0
    5440:	add	x1, x1, #0x0
    5444:	add	x3, x3, #0x0
    5448:	mov	w2, #0x69                  	// #105
    544c:	bl	0 <__assert_fail>
    5450:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5454:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5458:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    545c:	add	x0, x0, #0x0
    5460:	add	x1, x1, #0x0
    5464:	add	x3, x3, #0x0
    5468:	mov	w2, #0x95                  	// #149
    546c:	bl	0 <__assert_fail>
    5470:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5474:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5478:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    547c:	add	x0, x0, #0x0
    5480:	add	x1, x1, #0x0
    5484:	add	x3, x3, #0x0
    5488:	mov	w2, #0x8b                  	// #139
    548c:	bl	0 <__assert_fail>
    5490:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5494:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5498:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    549c:	add	x0, x0, #0x0
    54a0:	add	x1, x1, #0x0
    54a4:	add	x3, x3, #0x0
    54a8:	mov	w2, #0xc0a                 	// #3082
    54ac:	bl	0 <__assert_fail>
    54b0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54b4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54b8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54bc:	add	x0, x0, #0x0
    54c0:	add	x1, x1, #0x0
    54c4:	add	x3, x3, #0x0
    54c8:	mov	w2, #0xbd                  	// #189
    54cc:	bl	0 <__assert_fail>
    54d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54d4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54d8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54dc:	add	x0, x0, #0x0
    54e0:	add	x1, x1, #0x0
    54e4:	add	x3, x3, #0x0
    54e8:	mov	w2, #0x69                  	// #105
    54ec:	bl	0 <__assert_fail>
    54f0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54f4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54f8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    54fc:	add	x0, x0, #0x0
    5500:	add	x1, x1, #0x0
    5504:	add	x3, x3, #0x0
    5508:	mov	w2, #0x69                  	// #105
    550c:	bl	0 <__assert_fail>
    5510:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5514:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5518:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    551c:	add	x0, x0, #0x0
    5520:	add	x1, x1, #0x0
    5524:	add	x3, x3, #0x0
    5528:	mov	w2, #0x69                  	// #105
    552c:	bl	0 <__assert_fail>
    5530:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5534:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5538:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    553c:	add	x0, x0, #0x0
    5540:	add	x1, x1, #0x0
    5544:	add	x3, x3, #0x0
    5548:	mov	w2, #0x69                  	// #105
    554c:	bl	0 <__assert_fail>
    5550:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5554:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5558:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    555c:	add	x0, x0, #0x0
    5560:	add	x1, x1, #0x0
    5564:	add	x3, x3, #0x0
    5568:	mov	w2, #0x69                  	// #105
    556c:	bl	0 <__assert_fail>
    5570:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5574:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5578:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    557c:	add	x0, x0, #0x0
    5580:	add	x1, x1, #0x0
    5584:	add	x3, x3, #0x0
    5588:	mov	w2, #0x69                  	// #105
    558c:	bl	0 <__assert_fail>
    5590:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5594:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5598:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    559c:	add	x0, x0, #0x0
    55a0:	add	x1, x1, #0x0
    55a4:	add	x3, x3, #0x0
    55a8:	mov	w2, #0xbf1                 	// #3057
    55ac:	bl	0 <__assert_fail>
    55b0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55b4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55b8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55bc:	add	x0, x0, #0x0
    55c0:	add	x1, x1, #0x0
    55c4:	add	x3, x3, #0x0
    55c8:	mov	w2, #0x95                  	// #149
    55cc:	bl	0 <__assert_fail>
    55d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55d4:	add	x0, x0, #0x0
    55d8:	bl	0 <_ZSt20__throw_length_errorPKc>
    55dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55e8:	add	x0, x0, #0x0
    55ec:	add	x1, x1, #0x0
    55f0:	add	x3, x3, #0x0
    55f4:	mov	w2, #0x99                  	// #153
    55f8:	bl	0 <__assert_fail>

00000000000055fc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE>:
    55fc:	str	d8, [sp, #-96]!
    5600:	stp	x29, x30, [sp, #16]
    5604:	stp	x28, x25, [sp, #32]
    5608:	stp	x24, x23, [sp, #48]
    560c:	stp	x22, x21, [sp, #64]
    5610:	stp	x20, x19, [sp, #80]
    5614:	mov	x29, sp
    5618:	sub	sp, sp, #0x210
    561c:	ldr	x8, [x0, #8]
    5620:	add	x10, sp, #0x8
    5624:	add	x9, x0, #0x10
    5628:	add	x19, x10, #0x20
    562c:	add	x10, x10, #0x28
    5630:	stp	x1, x2, [sp, #24]
    5634:	str	wzr, [sp, #48]
    5638:	stp	xzr, x10, [sp, #56]
    563c:	stp	x10, xzr, [sp, #72]
    5640:	stp	x8, x9, [sp, #8]
    5644:	str	wzr, [sp, #88]
    5648:	cbz	x2, 5844 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x248>
    564c:	ldr	x20, [x2, #24]
    5650:	add	x21, x2, #0x8
    5654:	cmp	x20, x21
    5658:	b.ne	5674 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x78>  // b.any
    565c:	b	5854 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x258>
    5660:	mov	x0, x20
    5664:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    5668:	mov	x20, x0
    566c:	cmp	x0, x21
    5670:	b.eq	5854 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x258>  // b.none
    5674:	ldr	w9, [x20, #88]
    5678:	ldp	x22, x8, [x20, #64]
    567c:	ldr	w10, [x20, #80]
    5680:	add	x23, x8, x9, lsl #4
    5684:	cbz	w10, 577c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x180>
    5688:	mov	x24, x8
    568c:	cbz	w9, 56b8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xbc>
    5690:	lsl	x10, x9, #4
    5694:	add	x9, x10, x8
    5698:	mov	x24, x8
    569c:	ldr	x11, [x24]
    56a0:	cmn	x11, #0x2
    56a4:	b.cc	56b8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xbc>  // b.lo, b.ul, b.last
    56a8:	subs	x10, x10, #0x10
    56ac:	add	x24, x24, #0x10
    56b0:	b.ne	569c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa0>  // b.any
    56b4:	mov	x24, x9
    56b8:	cmp	x24, x23
    56bc:	cbz	x8, 5788 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x18c>
    56c0:	b.eq	5660 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>  // b.none
    56c4:	ldr	x8, [x24]
    56c8:	ldr	w10, [sp, #88]
    56cc:	ldr	x9, [x24, #8]
    56d0:	add	x1, sp, #0x90
    56d4:	mov	x0, x19
    56d8:	add	w25, w10, #0x1
    56dc:	stp	x8, x9, [sp, #144]
    56e0:	str	w25, [sp, #88]
    56e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    56e8:	str	w25, [x0]
    56ec:	ldr	x8, [x24, #8]
    56f0:	cbz	x8, 61c8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xbcc>
    56f4:	ldr	w9, [x8, #8]
    56f8:	cbnz	w9, 5738 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x13c>
    56fc:	ldr	x9, [x8, #64]
    5700:	cmp	x9, #0x7
    5704:	b.ls	61e8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xbec>  // b.plast
    5708:	ldr	x8, [x8, #72]
    570c:	cbz	x8, 6208 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc0c>
    5710:	and	x9, x9, #0xfffffffffffffff8
    5714:	ldr	w10, [sp, #88]
    5718:	ldr	x9, [x9]
    571c:	add	x1, sp, #0x90
    5720:	mov	x0, x19
    5724:	add	w25, w10, #0x1
    5728:	stp	x9, x8, [sp, #144]
    572c:	str	w25, [sp, #88]
    5730:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5734:	str	w25, [x0]
    5738:	ldr	x8, [x20, #64]
    573c:	cmp	x8, x22
    5740:	b.ne	6228 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc2c>  // b.any
    5744:	add	x24, x24, #0x10
    5748:	cmp	x24, x23
    574c:	b.hi	6248 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc4c>  // b.pmore
    5750:	b.eq	5660 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>  // b.none
    5754:	ldr	x8, [x24]
    5758:	cmn	x8, #0x2
    575c:	b.cc	5770 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x174>  // b.lo, b.ul, b.last
    5760:	add	x24, x24, #0x10
    5764:	cmp	x23, x24
    5768:	b.ne	5754 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x158>  // b.any
    576c:	b	5660 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>
    5770:	cmp	x23, x24
    5774:	b.ne	56c8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xcc>  // b.any
    5778:	b	5660 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>
    577c:	mov	x24, x23
    5780:	cmp	x24, x23
    5784:	cbnz	x8, 56c0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc4>
    5788:	b.eq	5660 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>  // b.none
    578c:	ldr	x8, [x24]
    5790:	ldr	w10, [sp, #88]
    5794:	ldr	x9, [x24, #8]
    5798:	add	x1, sp, #0x90
    579c:	mov	x0, x19
    57a0:	add	w25, w10, #0x1
    57a4:	stp	x8, x9, [sp, #144]
    57a8:	str	w25, [sp, #88]
    57ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    57b0:	str	w25, [x0]
    57b4:	ldr	x8, [x24, #8]
    57b8:	cbz	x8, 61c8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xbcc>
    57bc:	ldr	w9, [x8, #8]
    57c0:	cbnz	w9, 5800 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x204>
    57c4:	ldr	x9, [x8, #64]
    57c8:	cmp	x9, #0x8
    57cc:	b.cc	61e8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xbec>  // b.lo, b.ul, b.last
    57d0:	ldr	x8, [x8, #72]
    57d4:	cbz	x8, 6208 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc0c>
    57d8:	and	x9, x9, #0xfffffffffffffff8
    57dc:	ldr	w10, [sp, #88]
    57e0:	ldr	x9, [x9]
    57e4:	add	x1, sp, #0x90
    57e8:	mov	x0, x19
    57ec:	add	w25, w10, #0x1
    57f0:	stp	x9, x8, [sp, #144]
    57f4:	str	w25, [sp, #88]
    57f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    57fc:	str	w25, [x0]
    5800:	ldr	x8, [x20, #64]
    5804:	cmp	x8, x22
    5808:	b.ne	6228 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc2c>  // b.any
    580c:	add	x24, x24, #0x10
    5810:	cmp	x24, x23
    5814:	b.hi	6248 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc4c>  // b.pmore
    5818:	b.eq	5660 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>  // b.none
    581c:	ldr	x8, [x24]
    5820:	cmn	x8, #0x2
    5824:	b.cc	5838 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x23c>  // b.lo, b.ul, b.last
    5828:	add	x24, x24, #0x10
    582c:	cmp	x23, x24
    5830:	b.ne	581c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x220>  // b.any
    5834:	b	5660 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>
    5838:	cmp	x23, x24
    583c:	b.ne	5790 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x194>  // b.any
    5840:	b	5660 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>
    5844:	ldr	x20, [x1, #24]
    5848:	add	x21, x1, #0x8
    584c:	cmp	x20, x21
    5850:	b.ne	59a0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3a4>  // b.any
    5854:	ldr	x0, [sp, #8]
    5858:	mov	w1, #0x8                   	// #8
    585c:	mov	w2, #0x3                   	// #3
    5860:	mov	w22, #0x8                   	// #8
    5864:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5868:	ldr	x0, [sp, #8]
    586c:	mov	w23, #0x2                   	// #2
    5870:	add	x8, sp, #0x60
    5874:	mov	w21, #0x1                   	// #1
    5878:	add	x2, sp, #0x90
    587c:	mov	w1, #0x1                   	// #1
    5880:	mov	w3, wzr
    5884:	str	x23, [sp, #96]
    5888:	stp	x8, x21, [sp, #144]
    588c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5890:	ldr	x0, [sp, #8]
    5894:	mov	w1, #0x13                  	// #19
    5898:	mov	w2, #0x3                   	// #3
    589c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    58a0:	mov	w0, #0x220                 	// #544
    58a4:	bl	0 <_Znwm>
    58a8:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    58ac:	ldr	x24, [x24]
    58b0:	movi	v0.2s, #0x1
    58b4:	str	d0, [x0, #8]
    58b8:	movi	v0.2d, #0x0
    58bc:	mov	x8, x0
    58c0:	add	x9, x24, #0x10
    58c4:	str	x9, [x0]
    58c8:	mov	x20, x0
    58cc:	stp	q0, q0, [x0, #48]
    58d0:	stp	q0, q0, [x0, #80]
    58d4:	stp	q0, q0, [x0, #112]
    58d8:	stp	q0, q0, [x0, #144]
    58dc:	stp	q0, q0, [x0, #176]
    58e0:	stp	q0, q0, [x0, #208]
    58e4:	stp	q0, q0, [x0, #240]
    58e8:	stp	q0, q0, [x0, #272]
    58ec:	stp	q0, q0, [x0, #304]
    58f0:	stp	q0, q0, [x0, #336]
    58f4:	stp	q0, q0, [x0, #368]
    58f8:	stp	q0, q0, [x0, #400]
    58fc:	stp	q0, q0, [x0, #432]
    5900:	stp	q0, q0, [x0, #464]
    5904:	stp	q0, q0, [x0, #496]
    5908:	str	q0, [x8, #32]!
    590c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5910:	str	q0, [x0, #528]
    5914:	str	x8, [x20, #16]!
    5918:	str	x21, [x8]
    591c:	ldr	d8, [x9]
    5920:	ldr	x21, [sp, #8]
    5924:	mov	w8, #0xff                  	// #255
    5928:	mov	w9, #0x4                   	// #4
    592c:	strb	w8, [x0, #40]
    5930:	mov	w8, #0x6                   	// #6
    5934:	strb	w9, [x0, #56]
    5938:	str	x22, [x0, #48]
    593c:	str	xzr, [x0, #64]
    5940:	strb	w8, [x0, #72]
    5944:	str	x22, [x0, #80]
    5948:	strb	w23, [x0, #88]
    594c:	str	d8, [x0, #24]
    5950:	stp	x20, x0, [x29, #-24]
    5954:	mov	x0, x21
    5958:	mov	x1, x20
    595c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5960:	ldp	x1, x8, [x21, #32]
    5964:	add	x22, x21, #0x18
    5968:	cmp	x1, x8
    596c:	b.eq	59e0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3e4>  // b.none
    5970:	stp	x20, xzr, [x1]
    5974:	ldur	x9, [x29, #-16]
    5978:	add	x8, x1, #0x10
    597c:	stp	xzr, xzr, [x29, #-24]
    5980:	str	x9, [x1, #8]
    5984:	str	x8, [x21, #32]
    5988:	b	59f0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3f4>
    598c:	mov	x0, x20
    5990:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    5994:	mov	x20, x0
    5998:	cmp	x0, x21
    599c:	b.eq	5854 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x258>  // b.none
    59a0:	ldp	x22, x23, [x20, #56]
    59a4:	cmp	x22, x23
    59a8:	b.eq	598c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x390>  // b.none
    59ac:	ldr	x8, [x22], #8
    59b0:	ldr	w10, [sp, #88]
    59b4:	ldr	x9, [x20, #32]
    59b8:	add	x1, sp, #0x90
    59bc:	mov	x0, x19
    59c0:	add	w24, w10, #0x1
    59c4:	stp	x9, x8, [sp, #144]
    59c8:	str	w24, [sp, #88]
    59cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    59d0:	cmp	x23, x22
    59d4:	str	w24, [x0]
    59d8:	b.ne	59ac <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3b0>  // b.any
    59dc:	b	598c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x390>
    59e0:	sub	x2, x29, #0x18
    59e4:	mov	x0, x22
    59e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    59ec:	ldr	x8, [x21, #32]
    59f0:	ldr	x9, [x22]
    59f4:	adrp	x23, 0 <__pthread_key_create>
    59f8:	ldur	x20, [x29, #-16]
    59fc:	ldr	x23, [x23]
    5a00:	sub	x8, x8, x9
    5a04:	lsr	x8, x8, #4
    5a08:	add	w21, w8, #0x3
    5a0c:	cbz	x20, 5a88 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x48c>
    5a10:	add	x8, x20, #0x8
    5a14:	cbz	x23, 5a34 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x438>
    5a18:	ldaxr	w9, [x8]
    5a1c:	sub	w10, w9, #0x1
    5a20:	stlxr	w11, w10, [x8]
    5a24:	cbnz	w11, 5a18 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x41c>
    5a28:	cmp	w9, #0x1
    5a2c:	b.eq	5a48 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x44c>  // b.none
    5a30:	b	5a88 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x48c>
    5a34:	ldr	w9, [x8]
    5a38:	sub	w10, w9, #0x1
    5a3c:	str	w10, [x8]
    5a40:	cmp	w9, #0x1
    5a44:	b.ne	5a88 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x48c>  // b.any
    5a48:	mov	x22, x20
    5a4c:	ldr	x8, [x22], #12
    5a50:	mov	x0, x20
    5a54:	ldr	x8, [x8, #16]
    5a58:	blr	x8
    5a5c:	cbz	x23, 6118 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb1c>
    5a60:	ldaxr	w8, [x22]
    5a64:	sub	w9, w8, #0x1
    5a68:	stlxr	w10, w9, [x22]
    5a6c:	cbnz	w10, 5a60 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x464>
    5a70:	cmp	w8, #0x1
    5a74:	b.ne	5a88 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x48c>  // b.any
    5a78:	ldr	x8, [x20]
    5a7c:	mov	x0, x20
    5a80:	ldr	x8, [x8, #24]
    5a84:	blr	x8
    5a88:	mov	w0, #0x220                 	// #544
    5a8c:	add	x25, sp, #0x90
    5a90:	stur	w21, [x29, #-4]
    5a94:	bl	0 <_Znwm>
    5a98:	movi	v0.2s, #0x1
    5a9c:	add	x8, x24, #0x10
    5aa0:	str	d0, [x0, #8]
    5aa4:	movi	v0.2d, #0x0
    5aa8:	mov	x9, x0
    5aac:	mov	x1, x0
    5ab0:	str	x8, [x0]
    5ab4:	mov	w8, #0x1                   	// #1
    5ab8:	stp	q0, q0, [x0, #48]
    5abc:	stp	q0, q0, [x0, #80]
    5ac0:	stp	q0, q0, [x0, #112]
    5ac4:	stp	q0, q0, [x0, #144]
    5ac8:	stp	q0, q0, [x0, #176]
    5acc:	stp	q0, q0, [x0, #208]
    5ad0:	stp	q0, q0, [x0, #240]
    5ad4:	stp	q0, q0, [x0, #272]
    5ad8:	stp	q0, q0, [x0, #304]
    5adc:	stp	q0, q0, [x0, #336]
    5ae0:	stp	q0, q0, [x0, #368]
    5ae4:	stp	q0, q0, [x0, #400]
    5ae8:	stp	q0, q0, [x0, #432]
    5aec:	stp	q0, q0, [x0, #464]
    5af0:	stp	q0, q0, [x0, #496]
    5af4:	str	q0, [x9, #32]!
    5af8:	ldr	x20, [sp, #8]
    5afc:	str	q0, [x0, #528]
    5b00:	str	x9, [x1, #16]!
    5b04:	str	x8, [x9]
    5b08:	mov	w8, #0xff                  	// #255
    5b0c:	mov	w9, #0x8                   	// #8
    5b10:	strb	w8, [x0, #40]
    5b14:	mov	w8, #0x4                   	// #4
    5b18:	str	x9, [x0, #48]
    5b1c:	mov	w9, #0x6                   	// #6
    5b20:	strb	w8, [x0, #56]
    5b24:	mov	w8, #0x7                   	// #7
    5b28:	strb	w9, [x0, #72]
    5b2c:	mov	w9, #0x2                   	// #2
    5b30:	str	x8, [x0, #80]
    5b34:	str	xzr, [x0, #64]
    5b38:	strb	w9, [x0, #88]
    5b3c:	str	d8, [x0, #24]
    5b40:	stp	x1, x0, [x29, #-48]
    5b44:	mov	x0, x20
    5b48:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5b4c:	ldp	x1, x8, [x20, #32]
    5b50:	add	x21, x20, #0x18
    5b54:	cmp	x1, x8
    5b58:	b.eq	5b7c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x580>  // b.none
    5b5c:	str	xzr, [x1, #8]
    5b60:	ldr	q0, [x25, #336]
    5b64:	add	x8, x1, #0x10
    5b68:	stur	xzr, [x29, #-40]
    5b6c:	str	q0, [x1]
    5b70:	stur	xzr, [x29, #-48]
    5b74:	str	x8, [x20, #32]
    5b78:	b	5b8c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x590>
    5b7c:	sub	x2, x29, #0x30
    5b80:	mov	x0, x21
    5b84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5b88:	ldr	x8, [x20, #32]
    5b8c:	ldr	x9, [x21]
    5b90:	ldur	x20, [x29, #-40]
    5b94:	sub	x8, x8, x9
    5b98:	lsr	x8, x8, #4
    5b9c:	add	w21, w8, #0x3
    5ba0:	cbz	x20, 5c1c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x620>
    5ba4:	add	x8, x20, #0x8
    5ba8:	cbz	x23, 5bc8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x5cc>
    5bac:	ldaxr	w9, [x8]
    5bb0:	sub	w10, w9, #0x1
    5bb4:	stlxr	w11, w10, [x8]
    5bb8:	cbnz	w11, 5bac <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x5b0>
    5bbc:	cmp	w9, #0x1
    5bc0:	b.eq	5bdc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x5e0>  // b.none
    5bc4:	b	5c1c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x620>
    5bc8:	ldr	w9, [x8]
    5bcc:	sub	w10, w9, #0x1
    5bd0:	str	w10, [x8]
    5bd4:	cmp	w9, #0x1
    5bd8:	b.ne	5c1c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x620>  // b.any
    5bdc:	mov	x22, x20
    5be0:	ldr	x8, [x22], #12
    5be4:	mov	x0, x20
    5be8:	ldr	x8, [x8, #16]
    5bec:	blr	x8
    5bf0:	cbz	x23, 6130 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb34>
    5bf4:	ldaxr	w8, [x22]
    5bf8:	sub	w9, w8, #0x1
    5bfc:	stlxr	w10, w9, [x22]
    5c00:	cbnz	w10, 5bf4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x5f8>
    5c04:	cmp	w8, #0x1
    5c08:	b.ne	5c1c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x620>  // b.any
    5c0c:	ldr	x8, [x20]
    5c10:	mov	x0, x20
    5c14:	ldr	x8, [x8, #24]
    5c18:	blr	x8
    5c1c:	mov	w0, #0x220                 	// #544
    5c20:	stur	w21, [x29, #-28]
    5c24:	bl	0 <_Znwm>
    5c28:	movi	v0.2s, #0x1
    5c2c:	add	x8, x24, #0x10
    5c30:	str	d0, [x0, #8]
    5c34:	movi	v0.2d, #0x0
    5c38:	mov	x9, x0
    5c3c:	mov	x1, x0
    5c40:	str	x8, [x0]
    5c44:	mov	w8, #0x1                   	// #1
    5c48:	stp	q0, q0, [x0, #48]
    5c4c:	stp	q0, q0, [x0, #80]
    5c50:	stp	q0, q0, [x0, #112]
    5c54:	stp	q0, q0, [x0, #144]
    5c58:	stp	q0, q0, [x0, #176]
    5c5c:	stp	q0, q0, [x0, #208]
    5c60:	stp	q0, q0, [x0, #240]
    5c64:	stp	q0, q0, [x0, #272]
    5c68:	stp	q0, q0, [x0, #304]
    5c6c:	stp	q0, q0, [x0, #336]
    5c70:	stp	q0, q0, [x0, #368]
    5c74:	stp	q0, q0, [x0, #400]
    5c78:	stp	q0, q0, [x0, #432]
    5c7c:	stp	q0, q0, [x0, #464]
    5c80:	stp	q0, q0, [x0, #496]
    5c84:	str	q0, [x9, #32]!
    5c88:	ldr	x20, [sp, #8]
    5c8c:	str	q0, [x0, #528]
    5c90:	str	x9, [x1, #16]!
    5c94:	str	x8, [x9]
    5c98:	mov	w8, #0xff                  	// #255
    5c9c:	strb	w8, [x0, #40]
    5ca0:	mov	w8, #0x4                   	// #4
    5ca4:	mov	w9, #0x8                   	// #8
    5ca8:	strb	w8, [x0, #56]
    5cac:	mov	w8, #0x6                   	// #6
    5cb0:	strb	w8, [x0, #72]
    5cb4:	str	x9, [x0, #48]
    5cb8:	str	xzr, [x0, #64]
    5cbc:	str	xzr, [x0, #80]
    5cc0:	strb	w9, [x0, #88]
    5cc4:	str	d8, [x0, #24]
    5cc8:	stp	x1, x0, [x29, #-80]
    5ccc:	mov	x0, x20
    5cd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5cd4:	ldp	x1, x8, [x20, #32]
    5cd8:	add	x21, x20, #0x18
    5cdc:	cmp	x1, x8
    5ce0:	b.eq	5d04 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x708>  // b.none
    5ce4:	str	xzr, [x1, #8]
    5ce8:	ldr	q0, [x25, #304]
    5cec:	add	x8, x1, #0x10
    5cf0:	stur	xzr, [x29, #-72]
    5cf4:	str	q0, [x1]
    5cf8:	stur	xzr, [x29, #-80]
    5cfc:	str	x8, [x20, #32]
    5d00:	b	5d14 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x718>
    5d04:	sub	x2, x29, #0x50
    5d08:	mov	x0, x21
    5d0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5d10:	ldr	x8, [x20, #32]
    5d14:	ldr	x9, [x21]
    5d18:	ldur	x20, [x29, #-72]
    5d1c:	sub	x8, x8, x9
    5d20:	lsr	x8, x8, #4
    5d24:	add	w21, w8, #0x3
    5d28:	cbz	x20, 5da4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x7a8>
    5d2c:	add	x8, x20, #0x8
    5d30:	cbz	x23, 5d50 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x754>
    5d34:	ldaxr	w9, [x8]
    5d38:	sub	w10, w9, #0x1
    5d3c:	stlxr	w11, w10, [x8]
    5d40:	cbnz	w11, 5d34 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x738>
    5d44:	cmp	w9, #0x1
    5d48:	b.eq	5d64 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x768>  // b.none
    5d4c:	b	5da4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x7a8>
    5d50:	ldr	w9, [x8]
    5d54:	sub	w10, w9, #0x1
    5d58:	str	w10, [x8]
    5d5c:	cmp	w9, #0x1
    5d60:	b.ne	5da4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x7a8>  // b.any
    5d64:	mov	x22, x20
    5d68:	ldr	x8, [x22], #12
    5d6c:	mov	x0, x20
    5d70:	ldr	x8, [x8, #16]
    5d74:	blr	x8
    5d78:	cbz	x23, 6148 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb4c>
    5d7c:	ldaxr	w8, [x22]
    5d80:	sub	w9, w8, #0x1
    5d84:	stlxr	w10, w9, [x22]
    5d88:	cbnz	w10, 5d7c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x780>
    5d8c:	cmp	w8, #0x1
    5d90:	b.ne	5da4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x7a8>  // b.any
    5d94:	ldr	x8, [x20]
    5d98:	mov	x0, x20
    5d9c:	ldr	x8, [x8, #24]
    5da0:	blr	x8
    5da4:	mov	w0, #0x220                 	// #544
    5da8:	stur	w21, [x29, #-52]
    5dac:	bl	0 <_Znwm>
    5db0:	movi	v0.2s, #0x1
    5db4:	add	x8, x24, #0x10
    5db8:	str	d0, [x0, #8]
    5dbc:	movi	v0.2d, #0x0
    5dc0:	mov	x1, x0
    5dc4:	mov	x21, x0
    5dc8:	mov	w10, #0x2                   	// #2
    5dcc:	str	x8, [x0]
    5dd0:	stp	q0, q0, [x0, #48]
    5dd4:	stp	q0, q0, [x0, #80]
    5dd8:	stp	q0, q0, [x0, #112]
    5ddc:	stp	q0, q0, [x0, #144]
    5de0:	stp	q0, q0, [x0, #176]
    5de4:	stp	q0, q0, [x0, #208]
    5de8:	stp	q0, q0, [x0, #240]
    5dec:	stp	q0, q0, [x0, #272]
    5df0:	stp	q0, q0, [x0, #304]
    5df4:	stp	q0, q0, [x0, #336]
    5df8:	stp	q0, q0, [x0, #368]
    5dfc:	stp	q0, q0, [x0, #400]
    5e00:	stp	q0, q0, [x0, #432]
    5e04:	stp	q0, q0, [x0, #464]
    5e08:	stp	q0, q0, [x0, #496]
    5e0c:	str	q0, [x1, #32]!
    5e10:	mov	w9, #0xff                  	// #255
    5e14:	str	q0, [x0, #528]
    5e18:	str	x1, [x21, #16]!
    5e1c:	str	x10, [x1]
    5e20:	str	d8, [x0, #24]
    5e24:	mov	w11, #0x20                  	// #32
    5e28:	strb	w9, [x0, #40]
    5e2c:	ldp	w8, w9, [x0, #24]
    5e30:	ldur	w12, [x25, #3]
    5e34:	str	x11, [x0, #48]
    5e38:	str	x11, [x0, #64]
    5e3c:	str	x11, [x0, #80]
    5e40:	str	x11, [x0, #96]
    5e44:	ldr	w11, [sp, #144]
    5e48:	cmp	w8, w9
    5e4c:	strb	w10, [x0, #56]
    5e50:	strb	w10, [x0, #72]
    5e54:	strb	w10, [x0, #88]
    5e58:	strb	w10, [x0, #104]
    5e5c:	str	w12, [x0, #108]
    5e60:	stur	w11, [x0, #105]
    5e64:	b.cs	6268 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc6c>  // b.hs, b.nlast
    5e68:	add	w8, w8, #0x1
    5e6c:	mov	x20, x0
    5e70:	cmp	w8, w9
    5e74:	str	w8, [x0, #24]
    5e78:	b.cs	61b0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xbb4>  // b.hs, b.nlast
    5e7c:	ldr	x9, [x20, #16]
    5e80:	mov	w10, #0x20                  	// #32
    5e84:	mov	w11, #0x2                   	// #2
    5e88:	add	x8, x9, w8, uxtw #4
    5e8c:	str	x10, [x8]
    5e90:	strb	w11, [x8, #8]
    5e94:	ldur	w9, [x25, #3]
    5e98:	ldr	w10, [sp, #144]
    5e9c:	str	w9, [x8, #12]
    5ea0:	stur	w10, [x8, #9]
    5ea4:	ldp	w8, w9, [x20, #24]
    5ea8:	cmp	w8, w9
    5eac:	b.cs	6268 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc6c>  // b.hs, b.nlast
    5eb0:	ldr	x22, [sp, #8]
    5eb4:	add	w8, w8, #0x1
    5eb8:	mov	x1, x21
    5ebc:	str	w8, [x20, #24]
    5ec0:	mov	x0, x22
    5ec4:	stp	x21, x20, [x29, #-112]
    5ec8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ecc:	ldp	x1, x8, [x22, #32]
    5ed0:	add	x20, x22, #0x18
    5ed4:	cmp	x1, x8
    5ed8:	b.eq	5efc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x900>  // b.none
    5edc:	str	xzr, [x1, #8]
    5ee0:	ldr	q0, [x25, #272]
    5ee4:	add	x8, x1, #0x10
    5ee8:	stur	xzr, [x29, #-104]
    5eec:	str	q0, [x1]
    5ef0:	stur	xzr, [x29, #-112]
    5ef4:	str	x8, [x22, #32]
    5ef8:	b	5f0c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x910>
    5efc:	sub	x2, x29, #0x70
    5f00:	mov	x0, x20
    5f04:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5f08:	ldr	x8, [x22, #32]
    5f0c:	ldr	x9, [x20]
    5f10:	ldur	x20, [x29, #-104]
    5f14:	sub	x8, x8, x9
    5f18:	lsr	x8, x8, #4
    5f1c:	add	w21, w8, #0x3
    5f20:	cbz	x20, 5f9c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9a0>
    5f24:	add	x8, x20, #0x8
    5f28:	cbz	x23, 5f48 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x94c>
    5f2c:	ldaxr	w9, [x8]
    5f30:	sub	w10, w9, #0x1
    5f34:	stlxr	w11, w10, [x8]
    5f38:	cbnz	w11, 5f2c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x930>
    5f3c:	cmp	w9, #0x1
    5f40:	b.eq	5f5c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x960>  // b.none
    5f44:	b	5f9c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9a0>
    5f48:	ldr	w9, [x8]
    5f4c:	sub	w10, w9, #0x1
    5f50:	str	w10, [x8]
    5f54:	cmp	w9, #0x1
    5f58:	b.ne	5f9c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9a0>  // b.any
    5f5c:	mov	x22, x20
    5f60:	ldr	x8, [x22], #12
    5f64:	mov	x0, x20
    5f68:	ldr	x8, [x8, #16]
    5f6c:	blr	x8
    5f70:	cbz	x23, 6160 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb64>
    5f74:	ldaxr	w8, [x22]
    5f78:	sub	w9, w8, #0x1
    5f7c:	stlxr	w10, w9, [x22]
    5f80:	cbnz	w10, 5f74 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x978>
    5f84:	cmp	w8, #0x1
    5f88:	b.ne	5f9c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9a0>  // b.any
    5f8c:	ldr	x8, [x20]
    5f90:	mov	x0, x20
    5f94:	ldr	x8, [x8, #24]
    5f98:	blr	x8
    5f9c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5fa0:	ldr	d0, [x8]
    5fa4:	ldr	x8, [sp, #32]
    5fa8:	add	x9, sp, #0x90
    5fac:	sub	x12, x29, #0x1c
    5fb0:	stp	x12, x9, [sp, #112]
    5fb4:	add	x9, x9, #0x10
    5fb8:	sub	x10, x29, #0x4
    5fbc:	sub	x11, x29, #0x34
    5fc0:	add	x13, sp, #0x8
    5fc4:	str	x9, [sp, #144]
    5fc8:	sub	x9, x29, #0x54
    5fcc:	stur	w21, [x29, #-84]
    5fd0:	stp	x10, x11, [sp, #96]
    5fd4:	str	d0, [sp, #152]
    5fd8:	stp	x13, x9, [sp, #128]
    5fdc:	cbz	x8, 60e0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xae4>
    5fe0:	ldr	x20, [x8, #24]
    5fe4:	add	x21, x8, #0x8
    5fe8:	cmp	x20, x21
    5fec:	b.ne	606c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa70>  // b.any
    5ff0:	ldr	x0, [sp, #8]
    5ff4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ff8:	ldr	x0, [sp, #144]
    5ffc:	add	x8, sp, #0x90
    6000:	add	x8, x8, #0x10
    6004:	cmp	x0, x8
    6008:	b.eq	6010 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa14>  // b.none
    600c:	bl	0 <free>
    6010:	add	x0, sp, #0x8
    6014:	bl	26818 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv>
    6018:	ldr	x0, [sp, #8]
    601c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6020:	ldr	x1, [sp, #56]
    6024:	mov	x0, x19
    6028:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    602c:	add	sp, sp, #0x210
    6030:	ldp	x20, x19, [sp, #80]
    6034:	ldp	x22, x21, [sp, #64]
    6038:	ldp	x24, x23, [sp, #48]
    603c:	ldp	x28, x25, [sp, #32]
    6040:	ldp	x29, x30, [sp, #16]
    6044:	ldr	d8, [sp], #96
    6048:	ret
    604c:	ldr	x1, [x8]
    6050:	add	x0, sp, #0x60
    6054:	bl	28dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE>
    6058:	mov	x0, x20
    605c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    6060:	mov	x20, x0
    6064:	cmp	x0, x21
    6068:	b.eq	5ff0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9f4>  // b.none
    606c:	ldr	x22, [sp, #24]
    6070:	ldp	x1, x2, [x20, #32]
    6074:	add	x0, x22, #0x30
    6078:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    607c:	ldr	x8, [x22, #48]
    6080:	cmn	w0, #0x1
    6084:	b.eq	6090 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa94>  // b.none
    6088:	sxtw	x9, w0
    608c:	b	6094 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa98>
    6090:	ldr	w9, [x22, #56]
    6094:	ldr	x10, [sp, #24]
    6098:	add	x8, x8, x9, lsl #3
    609c:	ldr	x11, [x10, #48]
    60a0:	ldr	w10, [x10, #56]
    60a4:	add	x9, x11, x10, lsl #3
    60a8:	cmp	x8, x9
    60ac:	b.ne	604c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa50>  // b.any
    60b0:	ldr	x8, [sp, #32]
    60b4:	ldr	x8, [x8, #40]
    60b8:	cmp	x8, #0x1
    60bc:	b.eq	6058 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa5c>  // b.none
    60c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    60c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    60c8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    60cc:	add	x0, x0, #0x0
    60d0:	add	x1, x1, #0x0
    60d4:	add	x3, x3, #0x0
    60d8:	mov	w2, #0x1d8                 	// #472
    60dc:	bl	0 <__assert_fail>
    60e0:	ldr	x9, [sp, #24]
    60e4:	ldr	w8, [x9, #56]
    60e8:	ldr	x9, [x9, #48]
    60ec:	cbz	w8, 6178 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb7c>
    60f0:	add	x10, x9, #0x8
    60f4:	mov	x20, x9
    60f8:	b	6104 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb08>
    60fc:	mov	x20, x10
    6100:	add	x10, x10, #0x8
    6104:	ldur	x11, [x10, #-8]
    6108:	cbz	x11, 60fc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb00>
    610c:	cmn	x11, #0x8
    6110:	b.eq	60fc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb00>  // b.none
    6114:	b	617c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb80>
    6118:	ldr	w8, [x22]
    611c:	sub	w9, w8, #0x1
    6120:	str	w9, [x22]
    6124:	cmp	w8, #0x1
    6128:	b.eq	5a78 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x47c>  // b.none
    612c:	b	5a88 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x48c>
    6130:	ldr	w8, [x22]
    6134:	sub	w9, w8, #0x1
    6138:	str	w9, [x22]
    613c:	cmp	w8, #0x1
    6140:	b.eq	5c0c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x610>  // b.none
    6144:	b	5c1c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x620>
    6148:	ldr	w8, [x22]
    614c:	sub	w9, w8, #0x1
    6150:	str	w9, [x22]
    6154:	cmp	w8, #0x1
    6158:	b.eq	5d94 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x798>  // b.none
    615c:	b	5da4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x7a8>
    6160:	ldr	w8, [x22]
    6164:	sub	w9, w8, #0x1
    6168:	str	w9, [x22]
    616c:	cmp	w8, #0x1
    6170:	b.eq	5f8c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x990>  // b.none
    6174:	b	5f9c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9a0>
    6178:	mov	x20, x9
    617c:	add	x21, x9, x8, lsl #3
    6180:	cmp	x21, x20
    6184:	b.eq	5ff0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9f4>  // b.none
    6188:	ldr	x1, [x20], #8
    618c:	add	x0, sp, #0x60
    6190:	bl	28dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE>
    6194:	b	619c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xba0>
    6198:	add	x20, x20, #0x8
    619c:	ldr	x8, [x20]
    61a0:	cbz	x8, 6198 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb9c>
    61a4:	cmn	x8, #0x8
    61a8:	b.eq	6198 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb9c>  // b.none
    61ac:	b	6180 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb84>
    61b0:	mov	w3, #0x10                  	// #16
    61b4:	mov	x0, x21
    61b8:	mov	x2, xzr
    61bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    61c0:	ldr	w8, [x20, #24]
    61c4:	b	5e7c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x880>
    61c8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    61cc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    61d0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    61d4:	add	x0, x0, #0x0
    61d8:	add	x1, x1, #0x0
    61dc:	add	x3, x3, #0x0
    61e0:	mov	w2, #0x69                  	// #105
    61e4:	bl	0 <__assert_fail>
    61e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    61ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    61f0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    61f4:	add	x0, x0, #0x0
    61f8:	add	x1, x1, #0x0
    61fc:	add	x3, x3, #0x0
    6200:	mov	w2, #0x1d8                 	// #472
    6204:	bl	0 <__assert_fail>
    6208:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    620c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6210:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6214:	add	x0, x0, #0x0
    6218:	add	x1, x1, #0x0
    621c:	add	x3, x3, #0x0
    6220:	mov	w2, #0x1cb                 	// #459
    6224:	bl	0 <__assert_fail>
    6228:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    622c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6230:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6234:	add	x0, x0, #0x0
    6238:	add	x1, x1, #0x0
    623c:	add	x3, x3, #0x0
    6240:	mov	w2, #0x4cf                 	// #1231
    6244:	bl	0 <__assert_fail>
    6248:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    624c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6250:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6254:	add	x0, x0, #0x0
    6258:	add	x1, x1, #0x0
    625c:	add	x3, x3, #0x0
    6260:	mov	w2, #0x4e0                 	// #1248
    6264:	bl	0 <__assert_fail>
    6268:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    626c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6270:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6274:	add	x0, x0, #0x0
    6278:	add	x1, x1, #0x0
    627c:	add	x3, x3, #0x0
    6280:	mov	w2, #0x43                  	// #67
    6284:	bl	0 <__assert_fail>

0000000000006288 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>:
    6288:	sub	sp, sp, #0x170
    628c:	stp	x29, x30, [sp, #288]
    6290:	stp	x28, x25, [sp, #304]
    6294:	stp	x24, x23, [sp, #320]
    6298:	stp	x22, x21, [sp, #336]
    629c:	stp	x20, x19, [sp, #352]
    62a0:	add	x29, sp, #0x120
    62a4:	sub	x8, x29, #0x10
    62a8:	add	x20, x8, #0x10
    62ac:	mov	x22, x3
    62b0:	mov	w25, w2
    62b4:	mov	x19, x1
    62b8:	mov	x24, x0
    62bc:	sub	x0, x29, #0x10
    62c0:	mov	w2, #0x40000               	// #262144
    62c4:	mov	w3, #0x1                   	// #1
    62c8:	mov	x1, x20
    62cc:	mov	x21, x5
    62d0:	mov	w23, w4
    62d4:	stp	x20, xzr, [x29, #-16]
    62d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    62dc:	add	x8, x24, #0xf0
    62e0:	mov	w9, #0x104                 	// #260
    62e4:	sub	x0, x29, #0x48
    62e8:	add	x1, sp, #0x8
    62ec:	strh	w9, [sp, #24]
    62f0:	stp	x8, xzr, [sp, #8]
    62f4:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    62f8:	ldur	w8, [x29, #-28]
    62fc:	orr	w9, w8, #0x8
    6300:	cmp	w9, #0xb
    6304:	b.eq	6328 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xa0>  // b.none
    6308:	cmp	w8, #0x1c
    630c:	b.hi	64bc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x234>  // b.pmore
    6310:	mov	w9, #0x1                   	// #1
    6314:	lsl	w8, w9, w8
    6318:	mov	w9, #0x80                  	// #128
    631c:	movk	w9, #0x1800, lsl #16
    6320:	tst	w8, w9
    6324:	b.eq	64bc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x234>  // b.none
    6328:	ldur	x1, [x29, #-16]
    632c:	sub	x0, x29, #0x10
    6330:	add	x3, sp, #0x8
    6334:	mov	w2, #0x14                  	// #20
    6338:	strb	wzr, [sp, #8]
    633c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6340:	add	x0, sp, #0x8
    6344:	sub	x1, x29, #0x10
    6348:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    634c:	and	w2, w25, #0x1
    6350:	and	w4, w23, #0x1
    6354:	add	x0, sp, #0x8
    6358:	mov	x1, x24
    635c:	mov	x3, x22
    6360:	mov	x5, x21
    6364:	bl	a48 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
    6368:	add	x0, sp, #0x8
    636c:	bl	758 <_ZN4llvm13BitcodeWriter11writeSymtabEv>
    6370:	add	x0, sp, #0x8
    6374:	bl	938 <_ZN4llvm13BitcodeWriter11writeStrtabEv>
    6378:	ldur	w8, [x29, #-28]
    637c:	orr	w9, w8, #0x8
    6380:	cmp	w9, #0xb
    6384:	b.eq	63a8 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x120>  // b.none
    6388:	cmp	w8, #0x1c
    638c:	b.hi	64cc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x244>  // b.pmore
    6390:	mov	w9, #0x1                   	// #1
    6394:	lsl	w8, w9, w8
    6398:	mov	w9, #0x80                  	// #128
    639c:	movk	w9, #0x1800, lsl #16
    63a0:	tst	w8, w9
    63a4:	b.eq	64cc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x244>  // b.none
    63a8:	ldur	w8, [x29, #-40]
    63ac:	sub	w8, w8, #0x1
    63b0:	cmp	w8, #0x1f
    63b4:	b.hi	63e8 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x160>  // b.pmore
    63b8:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    63bc:	add	x9, x9, #0x0
    63c0:	adr	x10, 63d8 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x150>
    63c4:	ldrb	w11, [x9, x8]
    63c8:	add	x10, x10, x11, lsl #2
    63cc:	mov	w8, #0x7                   	// #7
    63d0:	movk	w8, #0x100, lsl #16
    63d4:	br	x10
    63d8:	mov	w8, #0xc                   	// #12
    63dc:	b	63fc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>
    63e0:	mov	w8, #0x7                   	// #7
    63e4:	b	63fc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>
    63e8:	mov	w8, #0xffffffff            	// #-1
    63ec:	b	63fc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>
    63f0:	mov	w8, #0x12                  	// #18
    63f4:	b	63fc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>
    63f8:	add	w8, w8, #0xb
    63fc:	ldur	w10, [x29, #-8]
    6400:	cmp	w10, #0x13
    6404:	b.ls	6584 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2fc>  // b.plast
    6408:	ldur	x9, [x29, #-16]
    640c:	mov	w11, #0xc0de                	// #49374
    6410:	movk	w11, #0xb17, lsl #16
    6414:	str	w11, [x9]
    6418:	ldur	w9, [x29, #-8]
    641c:	cmp	w9, #0x4
    6420:	b.ls	6564 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2dc>  // b.plast
    6424:	ldur	x9, [x29, #-16]
    6428:	str	wzr, [x9, #4]
    642c:	ldur	w9, [x29, #-8]
    6430:	cmp	w9, #0x8
    6434:	b.ls	6564 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2dc>  // b.plast
    6438:	ldur	x11, [x29, #-16]
    643c:	mov	w9, #0x14                  	// #20
    6440:	str	w9, [x11, #8]
    6444:	ldur	w9, [x29, #-8]
    6448:	cmp	w9, #0xc
    644c:	b.ls	6564 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2dc>  // b.plast
    6450:	sub	w10, w10, #0x14
    6454:	cmp	w9, #0x10
    6458:	str	w10, [x11, #12]
    645c:	b.ls	6564 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2dc>  // b.plast
    6460:	tst	w9, #0xf
    6464:	str	w8, [x11, #16]
    6468:	b.eq	64e0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x258>  // b.none
    646c:	ldur	w8, [x29, #-4]
    6470:	cmp	w9, w8
    6474:	b.cs	64a0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x218>  // b.hs, b.nlast
    6478:	ldur	x8, [x29, #-16]
    647c:	strb	wzr, [x8, w9, uxtw]
    6480:	ldp	w9, w8, [x29, #-8]
    6484:	cmp	w9, w8
    6488:	b.cs	6544 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2bc>  // b.hs, b.nlast
    648c:	add	w9, w9, #0x1
    6490:	tst	w9, #0xf
    6494:	stur	w9, [x29, #-8]
    6498:	b.ne	6470 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1e8>  // b.any
    649c:	b	64e0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x258>
    64a0:	sub	x0, x29, #0x10
    64a4:	mov	w3, #0x1                   	// #1
    64a8:	mov	x1, x20
    64ac:	mov	x2, xzr
    64b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    64b4:	ldur	w9, [x29, #-8]
    64b8:	b	6478 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1f0>
    64bc:	ldur	w8, [x29, #-20]
    64c0:	cmp	w8, #0x3
    64c4:	b.eq	6328 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xa0>  // b.none
    64c8:	b	6340 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xb8>
    64cc:	ldur	w8, [x29, #-20]
    64d0:	cmp	w8, #0x3
    64d4:	b.eq	63a8 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x120>  // b.none
    64d8:	ldur	w9, [x29, #-8]
    64dc:	cbz	w9, 65a4 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x31c>
    64e0:	ldur	x1, [x29, #-16]
    64e4:	mov	w2, w9
    64e8:	mov	x0, x19
    64ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    64f0:	add	x0, sp, #0x8
    64f4:	bl	3fc <_ZN4llvm13BitcodeWriterD1Ev>
    64f8:	ldur	x0, [x29, #-72]
    64fc:	sub	x8, x29, #0x48
    6500:	add	x8, x8, #0x10
    6504:	cmp	x0, x8
    6508:	b.eq	6510 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x288>  // b.none
    650c:	bl	0 <_ZdlPv>
    6510:	ldur	x0, [x29, #-16]
    6514:	sub	x8, x29, #0x10
    6518:	add	x8, x8, #0x10
    651c:	cmp	x0, x8
    6520:	b.eq	6528 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2a0>  // b.none
    6524:	bl	0 <free>
    6528:	ldp	x20, x19, [sp, #352]
    652c:	ldp	x22, x21, [sp, #336]
    6530:	ldp	x24, x23, [sp, #320]
    6534:	ldp	x28, x25, [sp, #304]
    6538:	ldp	x29, x30, [sp, #288]
    653c:	add	sp, sp, #0x170
    6540:	ret
    6544:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6548:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    654c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6550:	add	x0, x0, #0x0
    6554:	add	x1, x1, #0x0
    6558:	add	x3, x3, #0x0
    655c:	mov	w2, #0x43                  	// #67
    6560:	bl	0 <__assert_fail>
    6564:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6568:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    656c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6570:	add	x0, x0, #0x0
    6574:	add	x1, x1, #0x0
    6578:	add	x3, x3, #0x0
    657c:	mov	w2, #0x95                  	// #149
    6580:	bl	0 <__assert_fail>
    6584:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6588:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    658c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6590:	add	x0, x0, #0x0
    6594:	add	x1, x1, #0x0
    6598:	add	x3, x3, #0x0
    659c:	mov	w2, #0x10f1                	// #4337
    65a0:	bl	0 <__assert_fail>
    65a4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    65a8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    65ac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    65b0:	add	x0, x0, #0x0
    65b4:	add	x1, x1, #0x0
    65b8:	add	x3, x3, #0x0
    65bc:	mov	w2, #0x9e                  	// #158
    65c0:	bl	0 <__assert_fail>

00000000000065c4 <_ZN4llvm16WriteIndexToFileERKNS_18ModuleSummaryIndexERNS_11raw_ostreamEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSE_EEEESt4lessISB_ESaISt4pairIKSB_SK_EEE>:
    65c4:	sub	sp, sp, #0x120
    65c8:	stp	x29, x30, [sp, #224]
    65cc:	str	x28, [sp, #240]
    65d0:	stp	x22, x21, [sp, #256]
    65d4:	stp	x20, x19, [sp, #272]
    65d8:	add	x29, sp, #0xe0
    65dc:	sub	x8, x29, #0x10
    65e0:	add	x19, x8, #0x10
    65e4:	mov	x21, x2
    65e8:	mov	x20, x1
    65ec:	mov	x22, x0
    65f0:	sub	x0, x29, #0x10
    65f4:	mov	w2, #0x40000               	// #262144
    65f8:	mov	w3, #0x1                   	// #1
    65fc:	mov	x1, x19
    6600:	stp	x19, xzr, [x29, #-16]
    6604:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6608:	mov	x0, sp
    660c:	sub	x1, x29, #0x10
    6610:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6614:	mov	x0, sp
    6618:	mov	x1, x22
    661c:	mov	x2, x21
    6620:	bl	55fc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE>
    6624:	mov	x0, sp
    6628:	bl	938 <_ZN4llvm13BitcodeWriter11writeStrtabEv>
    662c:	ldur	w2, [x29, #-8]
    6630:	cbz	w2, 6670 <_ZN4llvm16WriteIndexToFileERKNS_18ModuleSummaryIndexERNS_11raw_ostreamEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSE_EEEESt4lessISB_ESaISt4pairIKSB_SK_EEE+0xac>
    6634:	ldur	x1, [x29, #-16]
    6638:	mov	x0, x20
    663c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    6640:	mov	x0, sp
    6644:	bl	3fc <_ZN4llvm13BitcodeWriterD1Ev>
    6648:	ldur	x0, [x29, #-16]
    664c:	cmp	x0, x19
    6650:	b.eq	6658 <_ZN4llvm16WriteIndexToFileERKNS_18ModuleSummaryIndexERNS_11raw_ostreamEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSE_EEEESt4lessISB_ESaISt4pairIKSB_SK_EEE+0x94>  // b.none
    6654:	bl	0 <free>
    6658:	ldp	x20, x19, [sp, #272]
    665c:	ldp	x22, x21, [sp, #256]
    6660:	ldr	x28, [sp, #240]
    6664:	ldp	x29, x30, [sp, #224]
    6668:	add	sp, sp, #0x120
    666c:	ret
    6670:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6674:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6678:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    667c:	add	x0, x0, #0x0
    6680:	add	x1, x1, #0x0
    6684:	add	x3, x3, #0x0
    6688:	mov	w2, #0x9e                  	// #158
    668c:	bl	0 <__assert_fail>

0000000000006690 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE>:
    6690:	stp	x29, x30, [sp, #-96]!
    6694:	stp	x28, x27, [sp, #16]
    6698:	stp	x26, x25, [sp, #32]
    669c:	stp	x24, x23, [sp, #48]
    66a0:	stp	x22, x21, [sp, #64]
    66a4:	stp	x20, x19, [sp, #80]
    66a8:	mov	x29, sp
    66ac:	sub	sp, sp, #0x3d0
    66b0:	ldrb	w8, [x0, #176]
    66b4:	cbnz	w8, 7634 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xfa4>
    66b8:	ldr	x8, [x1, #168]
    66bc:	mov	x21, x1
    66c0:	cbnz	x8, 7654 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xfc4>
    66c4:	mov	x26, x0
    66c8:	ldr	x10, [x26, #200]!
    66cc:	mov	x19, x3
    66d0:	mov	x20, x2
    66d4:	mov	x22, x0
    66d8:	mov	x8, x26
    66dc:	ldr	x9, [x8, #-8]!
    66e0:	cmp	x9, x10
    66e4:	b.eq	66f8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x68>  // b.none
    66e8:	str	x21, [x9]
    66ec:	ldr	x9, [x8]
    66f0:	add	x9, x9, #0x8
    66f4:	b	6788 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf8>
    66f8:	ldr	x23, [x22, #184]
    66fc:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    6700:	sub	x24, x9, x23
    6704:	cmp	x24, x8
    6708:	b.eq	7674 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xfe4>  // b.none
    670c:	asr	x28, x24, #3
    6710:	cmp	x24, #0x0
    6714:	csinc	x8, x28, xzr, ne  // ne = any
    6718:	adds	x8, x8, x28
    671c:	lsr	x10, x8, #60
    6720:	cset	w9, cs  // cs = hs, nlast
    6724:	cmp	x10, #0x0
    6728:	cset	w10, ne  // ne = any
    672c:	orr	w9, w9, w10
    6730:	cmp	w9, #0x0
    6734:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    6738:	csel	x27, x9, x8, ne  // ne = any
    673c:	cbz	x27, 7504 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe74>
    6740:	lsl	x0, x27, #3
    6744:	bl	0 <_Znwm>
    6748:	mov	x25, x0
    674c:	add	x28, x25, x28, lsl #3
    6750:	cmp	x24, #0x1
    6754:	str	x21, [x28]
    6758:	b.lt	676c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdc>  // b.tstop
    675c:	mov	x0, x25
    6760:	mov	x1, x23
    6764:	mov	x2, x24
    6768:	bl	0 <memmove>
    676c:	add	x24, x28, #0x8
    6770:	cbz	x23, 677c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xec>
    6774:	mov	x0, x23
    6778:	bl	0 <_ZdlPv>
    677c:	add	x9, x25, x27, lsl #3
    6780:	mov	x8, x26
    6784:	stp	x25, x24, [x22, #184]
    6788:	str	x9, [x8]
    678c:	ldr	x3, [x22, #8]
    6790:	add	x2, x22, #0x10
    6794:	add	x0, sp, #0x8
    6798:	mov	x1, x21
    679c:	mov	w4, wzr
    67a0:	mov	x5, x20
    67a4:	bl	7ff0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE>
    67a8:	ldr	x0, [sp, #8]
    67ac:	mov	w1, #0x8                   	// #8
    67b0:	mov	w2, #0x3                   	// #3
    67b4:	str	x19, [sp, #664]
    67b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    67bc:	ldr	x0, [sp, #8]
    67c0:	mov	w8, #0x2                   	// #2
    67c4:	add	x9, sp, #0x2a0
    67c8:	str	x8, [sp, #672]
    67cc:	mov	w8, #0x1                   	// #1
    67d0:	add	x2, sp, #0x2b8
    67d4:	mov	w1, #0x1                   	// #1
    67d8:	mov	w3, wzr
    67dc:	str	x9, [sp, #696]
    67e0:	str	x8, [sp, #704]
    67e4:	add	x19, sp, #0x2b8
    67e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    67ec:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    67f0:	ldr	d0, [x8]
    67f4:	ldr	x9, [sp, #24]
    67f8:	add	x19, x19, #0x10
    67fc:	str	x19, [sp, #696]
    6800:	str	d0, [sp, #704]
    6804:	ldr	x8, [x9, #216]
    6808:	cbz	x8, 6874 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x1e4>
    680c:	ldr	x9, [x9, #208]
    6810:	mov	w10, #0x1                   	// #1
    6814:	b	6830 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x1a0>
    6818:	mov	w10, wzr
    681c:	sxtb	w11, w11
    6820:	tbnz	w11, #31, 6890 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x200>
    6824:	subs	x8, x8, #0x1
    6828:	add	x9, x9, #0x1
    682c:	b.eq	687c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x1ec>  // b.none
    6830:	ldrb	w11, [x9]
    6834:	tbz	w10, #0, 6818 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x188>
    6838:	sub	w10, w11, #0x30
    683c:	cmp	w10, #0xa
    6840:	mov	w10, #0x1                   	// #1
    6844:	b.cc	681c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x18c>  // b.lo, b.ul, b.last
    6848:	and	w12, w11, #0xffffffdf
    684c:	sub	w12, w12, #0x41
    6850:	and	w12, w12, #0xff
    6854:	cmp	w12, #0x1a
    6858:	b.cc	681c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x18c>  // b.lo, b.ul, b.last
    685c:	cmp	w11, #0x2e
    6860:	mov	w10, #0x1                   	// #1
    6864:	b.eq	6824 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x194>  // b.none
    6868:	cmp	w11, #0x5f
    686c:	b.eq	6824 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x194>  // b.none
    6870:	b	6818 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x188>
    6874:	add	x20, sp, #0x2b0
    6878:	b	6884 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x1f4>
    687c:	add	x20, sp, #0x2b0
    6880:	cbz	w10, 68a0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x210>
    6884:	mov	x22, xzr
    6888:	mov	w21, #0x8                   	// #8
    688c:	b	68a8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x218>
    6890:	add	x20, sp, #0x2b0
    6894:	mov	w21, #0x2                   	// #2
    6898:	mov	w22, #0x8                   	// #8
    689c:	b	68a8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x218>
    68a0:	mov	w21, #0x2                   	// #2
    68a4:	mov	w22, #0x7                   	// #7
    68a8:	mov	w0, #0x220                 	// #544
    68ac:	bl	0 <_Znwm>
    68b0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    68b4:	ldr	x8, [x8]
    68b8:	movi	v0.2s, #0x1
    68bc:	str	d0, [x0, #8]
    68c0:	movi	v0.2d, #0x0
    68c4:	mov	x9, x0
    68c8:	add	x8, x8, #0x10
    68cc:	mov	x1, x0
    68d0:	str	x8, [x0]
    68d4:	mov	w8, #0x10                  	// #16
    68d8:	stp	q0, q0, [x0, #48]
    68dc:	stp	q0, q0, [x0, #80]
    68e0:	stp	q0, q0, [x0, #112]
    68e4:	stp	q0, q0, [x0, #144]
    68e8:	stp	q0, q0, [x0, #176]
    68ec:	stp	q0, q0, [x0, #208]
    68f0:	stp	q0, q0, [x0, #240]
    68f4:	stp	q0, q0, [x0, #272]
    68f8:	stp	q0, q0, [x0, #304]
    68fc:	stp	q0, q0, [x0, #336]
    6900:	stp	q0, q0, [x0, #368]
    6904:	stp	q0, q0, [x0, #400]
    6908:	stp	q0, q0, [x0, #432]
    690c:	stp	q0, q0, [x0, #464]
    6910:	stp	q0, q0, [x0, #496]
    6914:	str	q0, [x9, #32]!
    6918:	str	q0, [x0, #528]
    691c:	str	x9, [x1, #16]!
    6920:	str	x8, [x9]
    6924:	mov	w8, #0xff                  	// #255
    6928:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    692c:	ldr	d0, [x9]
    6930:	strb	w8, [x0, #40]
    6934:	ldr	w8, [x20]
    6938:	ldur	w10, [x20, #3]
    693c:	ldr	x20, [sp, #8]
    6940:	mov	w9, #0x6                   	// #6
    6944:	strb	w9, [x0, #56]
    6948:	mov	w9, #0x3                   	// #3
    694c:	str	x22, [x0, #64]
    6950:	str	xzr, [x0, #48]
    6954:	strb	w21, [x0, #72]
    6958:	str	w10, [x0, #76]
    695c:	stur	w8, [x0, #73]
    6960:	str	d0, [x0, #24]
    6964:	str	w9, [x0, #24]
    6968:	str	x0, [sp, #680]
    696c:	mov	x0, x20
    6970:	str	x1, [sp, #672]
    6974:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6978:	ldp	x1, x8, [x20, #32]
    697c:	add	x21, x20, #0x18
    6980:	cmp	x1, x8
    6984:	b.eq	69b4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x324>  // b.none
    6988:	str	xzr, [x1, #8]
    698c:	ldr	q0, [sp, #672]
    6990:	add	x22, x1, #0x10
    6994:	str	xzr, [sp, #680]
    6998:	str	q0, [x1]
    699c:	str	xzr, [sp, #672]
    69a0:	str	x22, [x20, #32]
    69a4:	ldr	x20, [sp, #680]
    69a8:	ldr	x21, [x21]
    69ac:	cbnz	x20, 69d0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x340>
    69b0:	b	6a50 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3c0>
    69b4:	add	x2, sp, #0x2a0
    69b8:	mov	x0, x21
    69bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    69c0:	ldr	x22, [x20, #32]
    69c4:	ldr	x20, [sp, #680]
    69c8:	ldr	x21, [x21]
    69cc:	cbz	x20, 6a50 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3c0>
    69d0:	adrp	x23, 0 <__pthread_key_create>
    69d4:	ldr	x23, [x23]
    69d8:	add	x8, x20, #0x8
    69dc:	cbz	x23, 69fc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x36c>
    69e0:	ldaxr	w9, [x8]
    69e4:	sub	w10, w9, #0x1
    69e8:	stlxr	w11, w10, [x8]
    69ec:	cbnz	w11, 69e0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x350>
    69f0:	cmp	w9, #0x1
    69f4:	b.eq	6a10 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x380>  // b.none
    69f8:	b	6a50 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3c0>
    69fc:	ldr	w9, [x8]
    6a00:	sub	w10, w9, #0x1
    6a04:	str	w10, [x8]
    6a08:	cmp	w9, #0x1
    6a0c:	b.ne	6a50 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3c0>  // b.any
    6a10:	mov	x24, x20
    6a14:	ldr	x8, [x24], #12
    6a18:	mov	x0, x20
    6a1c:	ldr	x8, [x8, #16]
    6a20:	blr	x8
    6a24:	cbz	x23, 74ec <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe5c>
    6a28:	ldaxr	w8, [x24]
    6a2c:	sub	w9, w8, #0x1
    6a30:	stlxr	w10, w9, [x24]
    6a34:	cbnz	w10, 6a28 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x398>
    6a38:	cmp	w8, #0x1
    6a3c:	b.ne	6a50 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3c0>  // b.any
    6a40:	ldr	x8, [x20]
    6a44:	mov	x0, x20
    6a48:	ldr	x8, [x8, #24]
    6a4c:	blr	x8
    6a50:	ldr	x8, [sp, #24]
    6a54:	ldr	x20, [x8, #216]
    6a58:	cbz	x20, 6ac0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x430>
    6a5c:	ldr	x23, [x8, #208]
    6a60:	ldr	w8, [sp, #704]
    6a64:	ldr	w9, [sp, #708]
    6a68:	ldrb	w24, [x23]
    6a6c:	cmp	w8, w9
    6a70:	b.cs	6aa4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x414>  // b.hs, b.nlast
    6a74:	ldr	x9, [sp, #696]
    6a78:	str	w24, [x9, w8, uxtw #2]
    6a7c:	ldr	w8, [sp, #704]
    6a80:	ldr	w9, [sp, #708]
    6a84:	cmp	w8, w9
    6a88:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6a8c:	add	w8, w8, #0x1
    6a90:	subs	x20, x20, #0x1
    6a94:	add	x23, x23, #0x1
    6a98:	str	w8, [sp, #704]
    6a9c:	b.ne	6a68 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3d8>  // b.any
    6aa0:	b	6ac0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x430>
    6aa4:	add	x0, sp, #0x2b8
    6aa8:	mov	w3, #0x4                   	// #4
    6aac:	mov	x1, x19
    6ab0:	mov	x2, xzr
    6ab4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6ab8:	ldr	w8, [sp, #704]
    6abc:	b	6a74 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3e4>
    6ac0:	ldr	x0, [sp, #8]
    6ac4:	sub	x8, x22, x21
    6ac8:	lsr	x8, x8, #4
    6acc:	add	w3, w8, #0x3
    6ad0:	add	x2, sp, #0x2b8
    6ad4:	mov	w1, #0x10                  	// #16
    6ad8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6adc:	ldr	x8, [sp, #24]
    6ae0:	str	wzr, [sp, #704]
    6ae4:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ae8:	add	x24, x24, #0x0
    6aec:	ldr	x25, [x8, #16]
    6af0:	add	x26, x8, #0x8
    6af4:	cmp	x26, x25
    6af8:	b.eq	6d4c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6bc>  // b.none
    6afc:	ldrb	w8, [x25]
    6b00:	tbnz	w8, #2, 75b4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf24>
    6b04:	ldr	x21, [sp, #16]
    6b08:	sub	x8, x25, #0x38
    6b0c:	cmp	x25, #0x0
    6b10:	csel	x20, xzr, x8, eq  // eq = none
    6b14:	mov	x0, x20
    6b18:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6b1c:	cmn	x0, #0x2
    6b20:	b.eq	753c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xeac>  // b.none
    6b24:	mov	x22, x0
    6b28:	cmn	x0, #0x1
    6b2c:	b.eq	755c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xecc>  // b.none
    6b30:	mov	x0, x22
    6b34:	mov	x23, x1
    6b38:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    6b3c:	lsr	x8, x23, #32
    6b40:	cbnz	x8, 757c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xeec>
    6b44:	orr	x2, x23, x0, lsl #32
    6b48:	mov	x0, x21
    6b4c:	mov	x1, x22
    6b50:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    6b54:	ldr	w8, [sp, #704]
    6b58:	ldr	w9, [sp, #708]
    6b5c:	mov	x21, x0
    6b60:	cmp	w8, w9
    6b64:	b.cs	6ca0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x610>  // b.hs, b.nlast
    6b68:	ldr	x9, [sp, #696]
    6b6c:	str	w21, [x9, w8, uxtw #2]
    6b70:	ldr	w8, [sp, #704]
    6b74:	ldr	w9, [sp, #708]
    6b78:	cmp	w8, w9
    6b7c:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6b80:	add	w8, w8, #0x1
    6b84:	mov	x0, x20
    6b88:	str	w8, [sp, #704]
    6b8c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6b90:	ldr	w8, [sp, #704]
    6b94:	ldr	w9, [sp, #708]
    6b98:	mov	x21, x1
    6b9c:	cmp	w8, w9
    6ba0:	b.cs	6cbc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x62c>  // b.hs, b.nlast
    6ba4:	ldr	x9, [sp, #696]
    6ba8:	str	w21, [x9, w8, uxtw #2]
    6bac:	ldr	w8, [sp, #704]
    6bb0:	ldr	w9, [sp, #708]
    6bb4:	cmp	w8, w9
    6bb8:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6bbc:	add	w8, w8, #0x1
    6bc0:	cmp	w8, w9
    6bc4:	str	w8, [sp, #704]
    6bc8:	b.cs	6cd8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x648>  // b.hs, b.nlast
    6bcc:	ldr	x9, [sp, #696]
    6bd0:	str	wzr, [x9, w8, uxtw #2]
    6bd4:	ldr	w8, [sp, #704]
    6bd8:	ldr	w9, [sp, #708]
    6bdc:	cmp	w8, w9
    6be0:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6be4:	add	w8, w8, #0x1
    6be8:	cmp	w8, w9
    6bec:	str	w8, [sp, #704]
    6bf0:	b.cs	6cf4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x664>  // b.hs, b.nlast
    6bf4:	ldr	x9, [sp, #696]
    6bf8:	str	wzr, [x9, w8, uxtw #2]
    6bfc:	ldr	w8, [sp, #704]
    6c00:	ldr	w9, [sp, #708]
    6c04:	cmp	w8, w9
    6c08:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6c0c:	add	w8, w8, #0x1
    6c10:	cmp	w8, w9
    6c14:	str	w8, [sp, #704]
    6c18:	b.cs	6d10 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x680>  // b.hs, b.nlast
    6c1c:	ldr	x9, [sp, #696]
    6c20:	str	wzr, [x9, w8, uxtw #2]
    6c24:	ldr	w8, [sp, #704]
    6c28:	ldr	w9, [sp, #708]
    6c2c:	cmp	w8, w9
    6c30:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6c34:	add	w8, w8, #0x1
    6c38:	str	w8, [sp, #704]
    6c3c:	ldr	w10, [x20, #32]
    6c40:	and	x10, x10, #0xf
    6c44:	cmp	w10, #0xb
    6c48:	b.cs	759c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf0c>  // b.hs, b.nlast
    6c4c:	ldr	w20, [x24, x10, lsl #2]
    6c50:	cmp	w8, w9
    6c54:	b.cs	6d2c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x69c>  // b.hs, b.nlast
    6c58:	ldr	x9, [sp, #696]
    6c5c:	str	w20, [x9, w8, uxtw #2]
    6c60:	ldr	w8, [sp, #704]
    6c64:	ldr	w9, [sp, #708]
    6c68:	cmp	w8, w9
    6c6c:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6c70:	ldr	x0, [sp, #8]
    6c74:	add	w8, w8, #0x1
    6c78:	add	x2, sp, #0x2b8
    6c7c:	mov	w1, #0x7                   	// #7
    6c80:	mov	w3, wzr
    6c84:	str	w8, [sp, #704]
    6c88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6c8c:	str	wzr, [sp, #704]
    6c90:	ldr	x25, [x25, #8]
    6c94:	cmp	x26, x25
    6c98:	b.ne	6afc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x46c>  // b.any
    6c9c:	b	6d48 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6b8>
    6ca0:	add	x0, sp, #0x2b8
    6ca4:	mov	w3, #0x4                   	// #4
    6ca8:	mov	x1, x19
    6cac:	mov	x2, xzr
    6cb0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6cb4:	ldr	w8, [sp, #704]
    6cb8:	b	6b68 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x4d8>
    6cbc:	add	x0, sp, #0x2b8
    6cc0:	mov	w3, #0x4                   	// #4
    6cc4:	mov	x1, x19
    6cc8:	mov	x2, xzr
    6ccc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6cd0:	ldr	w8, [sp, #704]
    6cd4:	b	6ba4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x514>
    6cd8:	add	x0, sp, #0x2b8
    6cdc:	mov	w3, #0x4                   	// #4
    6ce0:	mov	x1, x19
    6ce4:	mov	x2, xzr
    6ce8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6cec:	ldr	w8, [sp, #704]
    6cf0:	b	6bcc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x53c>
    6cf4:	add	x0, sp, #0x2b8
    6cf8:	mov	w3, #0x4                   	// #4
    6cfc:	mov	x1, x19
    6d00:	mov	x2, xzr
    6d04:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6d08:	ldr	w8, [sp, #704]
    6d0c:	b	6bf4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x564>
    6d10:	add	x0, sp, #0x2b8
    6d14:	mov	w3, #0x4                   	// #4
    6d18:	mov	x1, x19
    6d1c:	mov	x2, xzr
    6d20:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6d24:	ldr	w8, [sp, #704]
    6d28:	b	6c1c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x58c>
    6d2c:	add	x0, sp, #0x2b8
    6d30:	mov	w3, #0x4                   	// #4
    6d34:	mov	x1, x19
    6d38:	mov	x2, xzr
    6d3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6d40:	ldr	w8, [sp, #704]
    6d44:	b	6c58 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x5c8>
    6d48:	ldr	x8, [sp, #24]
    6d4c:	ldr	x25, [x8, #32]
    6d50:	add	x26, x8, #0x18
    6d54:	cmp	x26, x25
    6d58:	b.eq	6fac <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x91c>  // b.none
    6d5c:	ldrb	w8, [x25]
    6d60:	tbnz	w8, #2, 75d4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf44>
    6d64:	ldr	x21, [sp, #16]
    6d68:	sub	x8, x25, #0x38
    6d6c:	cmp	x25, #0x0
    6d70:	csel	x20, xzr, x8, eq  // eq = none
    6d74:	mov	x0, x20
    6d78:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6d7c:	cmn	x0, #0x2
    6d80:	b.eq	753c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xeac>  // b.none
    6d84:	mov	x22, x0
    6d88:	cmn	x0, #0x1
    6d8c:	b.eq	755c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xecc>  // b.none
    6d90:	mov	x0, x22
    6d94:	mov	x23, x1
    6d98:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    6d9c:	lsr	x8, x23, #32
    6da0:	cbnz	x8, 757c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xeec>
    6da4:	orr	x2, x23, x0, lsl #32
    6da8:	mov	x0, x21
    6dac:	mov	x1, x22
    6db0:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    6db4:	ldr	w8, [sp, #704]
    6db8:	ldr	w9, [sp, #708]
    6dbc:	mov	x21, x0
    6dc0:	cmp	w8, w9
    6dc4:	b.cs	6f00 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x870>  // b.hs, b.nlast
    6dc8:	ldr	x9, [sp, #696]
    6dcc:	str	w21, [x9, w8, uxtw #2]
    6dd0:	ldr	w8, [sp, #704]
    6dd4:	ldr	w9, [sp, #708]
    6dd8:	cmp	w8, w9
    6ddc:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6de0:	add	w8, w8, #0x1
    6de4:	mov	x0, x20
    6de8:	str	w8, [sp, #704]
    6dec:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6df0:	ldr	w8, [sp, #704]
    6df4:	ldr	w9, [sp, #708]
    6df8:	mov	x21, x1
    6dfc:	cmp	w8, w9
    6e00:	b.cs	6f1c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x88c>  // b.hs, b.nlast
    6e04:	ldr	x9, [sp, #696]
    6e08:	str	w21, [x9, w8, uxtw #2]
    6e0c:	ldr	w8, [sp, #704]
    6e10:	ldr	w9, [sp, #708]
    6e14:	cmp	w8, w9
    6e18:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6e1c:	add	w8, w8, #0x1
    6e20:	cmp	w8, w9
    6e24:	str	w8, [sp, #704]
    6e28:	b.cs	6f38 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x8a8>  // b.hs, b.nlast
    6e2c:	ldr	x9, [sp, #696]
    6e30:	str	wzr, [x9, w8, uxtw #2]
    6e34:	ldr	w8, [sp, #704]
    6e38:	ldr	w9, [sp, #708]
    6e3c:	cmp	w8, w9
    6e40:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6e44:	add	w8, w8, #0x1
    6e48:	cmp	w8, w9
    6e4c:	str	w8, [sp, #704]
    6e50:	b.cs	6f54 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x8c4>  // b.hs, b.nlast
    6e54:	ldr	x9, [sp, #696]
    6e58:	str	wzr, [x9, w8, uxtw #2]
    6e5c:	ldr	w8, [sp, #704]
    6e60:	ldr	w9, [sp, #708]
    6e64:	cmp	w8, w9
    6e68:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6e6c:	add	w8, w8, #0x1
    6e70:	cmp	w8, w9
    6e74:	str	w8, [sp, #704]
    6e78:	b.cs	6f70 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x8e0>  // b.hs, b.nlast
    6e7c:	ldr	x9, [sp, #696]
    6e80:	str	wzr, [x9, w8, uxtw #2]
    6e84:	ldr	w8, [sp, #704]
    6e88:	ldr	w9, [sp, #708]
    6e8c:	cmp	w8, w9
    6e90:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6e94:	add	w8, w8, #0x1
    6e98:	str	w8, [sp, #704]
    6e9c:	ldr	w10, [x20, #32]
    6ea0:	and	x10, x10, #0xf
    6ea4:	cmp	w10, #0xb
    6ea8:	b.cs	759c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf0c>  // b.hs, b.nlast
    6eac:	ldr	w20, [x24, x10, lsl #2]
    6eb0:	cmp	w8, w9
    6eb4:	b.cs	6f8c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x8fc>  // b.hs, b.nlast
    6eb8:	ldr	x9, [sp, #696]
    6ebc:	str	w20, [x9, w8, uxtw #2]
    6ec0:	ldr	w8, [sp, #704]
    6ec4:	ldr	w9, [sp, #708]
    6ec8:	cmp	w8, w9
    6ecc:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    6ed0:	ldr	x0, [sp, #8]
    6ed4:	add	w8, w8, #0x1
    6ed8:	add	x2, sp, #0x2b8
    6edc:	mov	w1, #0x8                   	// #8
    6ee0:	mov	w3, wzr
    6ee4:	str	w8, [sp, #704]
    6ee8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6eec:	str	wzr, [sp, #704]
    6ef0:	ldr	x25, [x25, #8]
    6ef4:	cmp	x26, x25
    6ef8:	b.ne	6d5c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6cc>  // b.any
    6efc:	b	6fa8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x918>
    6f00:	add	x0, sp, #0x2b8
    6f04:	mov	w3, #0x4                   	// #4
    6f08:	mov	x1, x19
    6f0c:	mov	x2, xzr
    6f10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6f14:	ldr	w8, [sp, #704]
    6f18:	b	6dc8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x738>
    6f1c:	add	x0, sp, #0x2b8
    6f20:	mov	w3, #0x4                   	// #4
    6f24:	mov	x1, x19
    6f28:	mov	x2, xzr
    6f2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6f30:	ldr	w8, [sp, #704]
    6f34:	b	6e04 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x774>
    6f38:	add	x0, sp, #0x2b8
    6f3c:	mov	w3, #0x4                   	// #4
    6f40:	mov	x1, x19
    6f44:	mov	x2, xzr
    6f48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6f4c:	ldr	w8, [sp, #704]
    6f50:	b	6e2c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x79c>
    6f54:	add	x0, sp, #0x2b8
    6f58:	mov	w3, #0x4                   	// #4
    6f5c:	mov	x1, x19
    6f60:	mov	x2, xzr
    6f64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6f68:	ldr	w8, [sp, #704]
    6f6c:	b	6e54 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x7c4>
    6f70:	add	x0, sp, #0x2b8
    6f74:	mov	w3, #0x4                   	// #4
    6f78:	mov	x1, x19
    6f7c:	mov	x2, xzr
    6f80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6f84:	ldr	w8, [sp, #704]
    6f88:	b	6e7c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x7ec>
    6f8c:	add	x0, sp, #0x2b8
    6f90:	mov	w3, #0x4                   	// #4
    6f94:	mov	x1, x19
    6f98:	mov	x2, xzr
    6f9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6fa0:	ldr	w8, [sp, #704]
    6fa4:	b	6eb8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x828>
    6fa8:	ldr	x8, [sp, #24]
    6fac:	ldr	x25, [x8, #48]
    6fb0:	add	x26, x8, #0x28
    6fb4:	cmp	x26, x25
    6fb8:	b.eq	720c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb7c>  // b.none
    6fbc:	ldrb	w8, [x25]
    6fc0:	tbnz	w8, #2, 75f4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf64>
    6fc4:	ldr	x21, [sp, #16]
    6fc8:	sub	x8, x25, #0x30
    6fcc:	cmp	x25, #0x0
    6fd0:	csel	x20, xzr, x8, eq  // eq = none
    6fd4:	mov	x0, x20
    6fd8:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6fdc:	cmn	x0, #0x2
    6fe0:	b.eq	753c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xeac>  // b.none
    6fe4:	mov	x22, x0
    6fe8:	cmn	x0, #0x1
    6fec:	b.eq	755c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xecc>  // b.none
    6ff0:	mov	x0, x22
    6ff4:	mov	x23, x1
    6ff8:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    6ffc:	lsr	x8, x23, #32
    7000:	cbnz	x8, 757c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xeec>
    7004:	orr	x2, x23, x0, lsl #32
    7008:	mov	x0, x21
    700c:	mov	x1, x22
    7010:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    7014:	ldr	w8, [sp, #704]
    7018:	ldr	w9, [sp, #708]
    701c:	mov	x21, x0
    7020:	cmp	w8, w9
    7024:	b.cs	7160 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xad0>  // b.hs, b.nlast
    7028:	ldr	x9, [sp, #696]
    702c:	str	w21, [x9, w8, uxtw #2]
    7030:	ldr	w8, [sp, #704]
    7034:	ldr	w9, [sp, #708]
    7038:	cmp	w8, w9
    703c:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    7040:	add	w8, w8, #0x1
    7044:	mov	x0, x20
    7048:	str	w8, [sp, #704]
    704c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    7050:	ldr	w8, [sp, #704]
    7054:	ldr	w9, [sp, #708]
    7058:	mov	x21, x1
    705c:	cmp	w8, w9
    7060:	b.cs	717c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xaec>  // b.hs, b.nlast
    7064:	ldr	x9, [sp, #696]
    7068:	str	w21, [x9, w8, uxtw #2]
    706c:	ldr	w8, [sp, #704]
    7070:	ldr	w9, [sp, #708]
    7074:	cmp	w8, w9
    7078:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    707c:	add	w8, w8, #0x1
    7080:	cmp	w8, w9
    7084:	str	w8, [sp, #704]
    7088:	b.cs	7198 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb08>  // b.hs, b.nlast
    708c:	ldr	x9, [sp, #696]
    7090:	str	wzr, [x9, w8, uxtw #2]
    7094:	ldr	w8, [sp, #704]
    7098:	ldr	w9, [sp, #708]
    709c:	cmp	w8, w9
    70a0:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    70a4:	add	w8, w8, #0x1
    70a8:	cmp	w8, w9
    70ac:	str	w8, [sp, #704]
    70b0:	b.cs	71b4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb24>  // b.hs, b.nlast
    70b4:	ldr	x9, [sp, #696]
    70b8:	str	wzr, [x9, w8, uxtw #2]
    70bc:	ldr	w8, [sp, #704]
    70c0:	ldr	w9, [sp, #708]
    70c4:	cmp	w8, w9
    70c8:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    70cc:	add	w8, w8, #0x1
    70d0:	cmp	w8, w9
    70d4:	str	w8, [sp, #704]
    70d8:	b.cs	71d0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb40>  // b.hs, b.nlast
    70dc:	ldr	x9, [sp, #696]
    70e0:	str	wzr, [x9, w8, uxtw #2]
    70e4:	ldr	w8, [sp, #704]
    70e8:	ldr	w9, [sp, #708]
    70ec:	cmp	w8, w9
    70f0:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    70f4:	add	w8, w8, #0x1
    70f8:	str	w8, [sp, #704]
    70fc:	ldr	w10, [x20, #32]
    7100:	and	x10, x10, #0xf
    7104:	cmp	w10, #0xb
    7108:	b.cs	759c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf0c>  // b.hs, b.nlast
    710c:	ldr	w20, [x24, x10, lsl #2]
    7110:	cmp	w8, w9
    7114:	b.cs	71ec <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb5c>  // b.hs, b.nlast
    7118:	ldr	x9, [sp, #696]
    711c:	str	w20, [x9, w8, uxtw #2]
    7120:	ldr	w8, [sp, #704]
    7124:	ldr	w9, [sp, #708]
    7128:	cmp	w8, w9
    712c:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    7130:	ldr	x0, [sp, #8]
    7134:	add	w8, w8, #0x1
    7138:	add	x2, sp, #0x2b8
    713c:	mov	w1, #0xe                   	// #14
    7140:	mov	w3, wzr
    7144:	str	w8, [sp, #704]
    7148:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    714c:	str	wzr, [sp, #704]
    7150:	ldr	x25, [x25, #8]
    7154:	cmp	x26, x25
    7158:	b.ne	6fbc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x92c>  // b.any
    715c:	b	7208 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb78>
    7160:	add	x0, sp, #0x2b8
    7164:	mov	w3, #0x4                   	// #4
    7168:	mov	x1, x19
    716c:	mov	x2, xzr
    7170:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7174:	ldr	w8, [sp, #704]
    7178:	b	7028 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x998>
    717c:	add	x0, sp, #0x2b8
    7180:	mov	w3, #0x4                   	// #4
    7184:	mov	x1, x19
    7188:	mov	x2, xzr
    718c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7190:	ldr	w8, [sp, #704]
    7194:	b	7064 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x9d4>
    7198:	add	x0, sp, #0x2b8
    719c:	mov	w3, #0x4                   	// #4
    71a0:	mov	x1, x19
    71a4:	mov	x2, xzr
    71a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    71ac:	ldr	w8, [sp, #704]
    71b0:	b	708c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x9fc>
    71b4:	add	x0, sp, #0x2b8
    71b8:	mov	w3, #0x4                   	// #4
    71bc:	mov	x1, x19
    71c0:	mov	x2, xzr
    71c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    71c8:	ldr	w8, [sp, #704]
    71cc:	b	70b4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xa24>
    71d0:	add	x0, sp, #0x2b8
    71d4:	mov	w3, #0x4                   	// #4
    71d8:	mov	x1, x19
    71dc:	mov	x2, xzr
    71e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    71e4:	ldr	w8, [sp, #704]
    71e8:	b	70dc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xa4c>
    71ec:	add	x0, sp, #0x2b8
    71f0:	mov	w3, #0x4                   	// #4
    71f4:	mov	x1, x19
    71f8:	mov	x2, xzr
    71fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7200:	ldr	w8, [sp, #704]
    7204:	b	7118 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xa88>
    7208:	ldr	x8, [sp, #24]
    720c:	ldr	x25, [x8, #64]
    7210:	add	x26, x8, #0x38
    7214:	cmp	x26, x25
    7218:	b.eq	7468 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdd8>  // b.none
    721c:	ldrb	w8, [x25]
    7220:	tbnz	w8, #2, 7614 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf84>
    7224:	ldr	x21, [sp, #16]
    7228:	sub	x8, x25, #0x30
    722c:	cmp	x25, #0x0
    7230:	csel	x20, xzr, x8, eq  // eq = none
    7234:	mov	x0, x20
    7238:	bl	0 <_ZNK4llvm5Value7getNameEv>
    723c:	cmn	x0, #0x2
    7240:	b.eq	753c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xeac>  // b.none
    7244:	mov	x22, x0
    7248:	cmn	x0, #0x1
    724c:	b.eq	755c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xecc>  // b.none
    7250:	mov	x0, x22
    7254:	mov	x23, x1
    7258:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    725c:	lsr	x8, x23, #32
    7260:	cbnz	x8, 757c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xeec>
    7264:	orr	x2, x23, x0, lsl #32
    7268:	mov	x0, x21
    726c:	mov	x1, x22
    7270:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    7274:	ldr	w8, [sp, #704]
    7278:	ldr	w9, [sp, #708]
    727c:	mov	x21, x0
    7280:	cmp	w8, w9
    7284:	b.cs	73c0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd30>  // b.hs, b.nlast
    7288:	ldr	x9, [sp, #696]
    728c:	str	w21, [x9, w8, uxtw #2]
    7290:	ldr	w8, [sp, #704]
    7294:	ldr	w9, [sp, #708]
    7298:	cmp	w8, w9
    729c:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    72a0:	add	w8, w8, #0x1
    72a4:	mov	x0, x20
    72a8:	str	w8, [sp, #704]
    72ac:	bl	0 <_ZNK4llvm5Value7getNameEv>
    72b0:	ldr	w8, [sp, #704]
    72b4:	ldr	w9, [sp, #708]
    72b8:	mov	x21, x1
    72bc:	cmp	w8, w9
    72c0:	b.cs	73dc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd4c>  // b.hs, b.nlast
    72c4:	ldr	x9, [sp, #696]
    72c8:	str	w21, [x9, w8, uxtw #2]
    72cc:	ldr	w8, [sp, #704]
    72d0:	ldr	w9, [sp, #708]
    72d4:	cmp	w8, w9
    72d8:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    72dc:	add	w8, w8, #0x1
    72e0:	cmp	w8, w9
    72e4:	str	w8, [sp, #704]
    72e8:	b.cs	73f8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd68>  // b.hs, b.nlast
    72ec:	ldr	x9, [sp, #696]
    72f0:	str	wzr, [x9, w8, uxtw #2]
    72f4:	ldr	w8, [sp, #704]
    72f8:	ldr	w9, [sp, #708]
    72fc:	cmp	w8, w9
    7300:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    7304:	add	w8, w8, #0x1
    7308:	cmp	w8, w9
    730c:	str	w8, [sp, #704]
    7310:	b.cs	7414 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd84>  // b.hs, b.nlast
    7314:	ldr	x9, [sp, #696]
    7318:	str	wzr, [x9, w8, uxtw #2]
    731c:	ldr	w8, [sp, #704]
    7320:	ldr	w9, [sp, #708]
    7324:	cmp	w8, w9
    7328:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    732c:	add	w8, w8, #0x1
    7330:	cmp	w8, w9
    7334:	str	w8, [sp, #704]
    7338:	b.cs	7430 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xda0>  // b.hs, b.nlast
    733c:	ldr	x9, [sp, #696]
    7340:	str	wzr, [x9, w8, uxtw #2]
    7344:	ldr	w8, [sp, #704]
    7348:	ldr	w9, [sp, #708]
    734c:	cmp	w8, w9
    7350:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    7354:	add	w8, w8, #0x1
    7358:	str	w8, [sp, #704]
    735c:	ldr	w10, [x20, #32]
    7360:	and	x10, x10, #0xf
    7364:	cmp	w10, #0xb
    7368:	b.cs	759c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf0c>  // b.hs, b.nlast
    736c:	ldr	w20, [x24, x10, lsl #2]
    7370:	cmp	w8, w9
    7374:	b.cs	744c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdbc>  // b.hs, b.nlast
    7378:	ldr	x9, [sp, #696]
    737c:	str	w20, [x9, w8, uxtw #2]
    7380:	ldr	w8, [sp, #704]
    7384:	ldr	w9, [sp, #708]
    7388:	cmp	w8, w9
    738c:	b.cs	751c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe8c>  // b.hs, b.nlast
    7390:	ldr	x0, [sp, #8]
    7394:	add	w8, w8, #0x1
    7398:	add	x2, sp, #0x2b8
    739c:	mov	w1, #0x12                  	// #18
    73a0:	mov	w3, wzr
    73a4:	str	w8, [sp, #704]
    73a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    73ac:	str	wzr, [sp, #704]
    73b0:	ldr	x25, [x25, #8]
    73b4:	cmp	x26, x25
    73b8:	b.ne	721c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb8c>  // b.any
    73bc:	b	7468 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdd8>
    73c0:	add	x0, sp, #0x2b8
    73c4:	mov	w3, #0x4                   	// #4
    73c8:	mov	x1, x19
    73cc:	mov	x2, xzr
    73d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    73d4:	ldr	w8, [sp, #704]
    73d8:	b	7288 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xbf8>
    73dc:	add	x0, sp, #0x2b8
    73e0:	mov	w3, #0x4                   	// #4
    73e4:	mov	x1, x19
    73e8:	mov	x2, xzr
    73ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    73f0:	ldr	w8, [sp, #704]
    73f4:	b	72c4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xc34>
    73f8:	add	x0, sp, #0x2b8
    73fc:	mov	w3, #0x4                   	// #4
    7400:	mov	x1, x19
    7404:	mov	x2, xzr
    7408:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    740c:	ldr	w8, [sp, #704]
    7410:	b	72ec <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xc5c>
    7414:	add	x0, sp, #0x2b8
    7418:	mov	w3, #0x4                   	// #4
    741c:	mov	x1, x19
    7420:	mov	x2, xzr
    7424:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7428:	ldr	w8, [sp, #704]
    742c:	b	7314 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xc84>
    7430:	add	x0, sp, #0x2b8
    7434:	mov	w3, #0x4                   	// #4
    7438:	mov	x1, x19
    743c:	mov	x2, xzr
    7440:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7444:	ldr	w8, [sp, #704]
    7448:	b	733c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xcac>
    744c:	add	x0, sp, #0x2b8
    7450:	mov	w3, #0x4                   	// #4
    7454:	mov	x1, x19
    7458:	mov	x2, xzr
    745c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7460:	ldr	w8, [sp, #704]
    7464:	b	7378 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xce8>
    7468:	ldr	x0, [sp, #696]
    746c:	add	x8, sp, #0x2b8
    7470:	add	x8, x8, #0x10
    7474:	cmp	x0, x8
    7478:	b.eq	7480 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.none
    747c:	bl	0 <free>
    7480:	add	x0, sp, #0x8
    7484:	add	x19, sp, #0x8
    7488:	bl	eba8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv>
    748c:	ldr	x8, [sp, #664]
    7490:	ldr	x0, [sp, #8]
    7494:	mov	w9, #0x5                   	// #5
    7498:	add	x2, sp, #0x2b8
    749c:	mov	w1, #0x11                  	// #17
    74a0:	mov	w3, wzr
    74a4:	str	x8, [sp, #696]
    74a8:	str	x9, [sp, #704]
    74ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74b0:	ldr	x0, [sp, #8]
    74b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74b8:	ldr	x1, [sp, #616]
    74bc:	add	x0, x19, #0x250
    74c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74c4:	add	x0, x19, #0x18
    74c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74cc:	add	sp, sp, #0x3d0
    74d0:	ldp	x20, x19, [sp, #80]
    74d4:	ldp	x22, x21, [sp, #64]
    74d8:	ldp	x24, x23, [sp, #48]
    74dc:	ldp	x26, x25, [sp, #32]
    74e0:	ldp	x28, x27, [sp, #16]
    74e4:	ldp	x29, x30, [sp], #96
    74e8:	ret
    74ec:	ldr	w8, [x24]
    74f0:	sub	w9, w8, #0x1
    74f4:	str	w9, [x24]
    74f8:	cmp	w8, #0x1
    74fc:	b.eq	6a40 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3b0>  // b.none
    7500:	b	6a50 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3c0>
    7504:	mov	x25, xzr
    7508:	add	x28, x25, x28, lsl #3
    750c:	cmp	x24, #0x1
    7510:	str	x21, [x28]
    7514:	b.ge	675c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xcc>  // b.tcont
    7518:	b	676c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdc>
    751c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7520:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7524:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7528:	add	x0, x0, #0x0
    752c:	add	x1, x1, #0x0
    7530:	add	x3, x3, #0x0
    7534:	mov	w2, #0x43                  	// #67
    7538:	bl	0 <__assert_fail>
    753c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7540:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7544:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7548:	add	x0, x0, #0x0
    754c:	add	x1, x1, #0x0
    7550:	add	x3, x3, #0x0
    7554:	mov	w2, #0xeb                  	// #235
    7558:	bl	0 <__assert_fail>
    755c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7560:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7564:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7568:	add	x0, x0, #0x0
    756c:	add	x1, x1, #0x0
    7570:	add	x3, x3, #0x0
    7574:	mov	w2, #0xe9                  	// #233
    7578:	bl	0 <__assert_fail>
    757c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7580:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7584:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7588:	add	x0, x0, #0x0
    758c:	add	x1, x1, #0x0
    7590:	add	x3, x3, #0x0
    7594:	mov	w2, #0x29                  	// #41
    7598:	bl	0 <__assert_fail>
    759c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75a4:	add	x0, x0, #0x0
    75a8:	add	x1, x1, #0x0
    75ac:	mov	w2, #0x3e3                 	// #995
    75b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    75b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75c0:	add	x0, x0, #0x0
    75c4:	add	x1, x1, #0x0
    75c8:	add	x3, x3, #0x0
    75cc:	mov	w2, #0x8b                  	// #139
    75d0:	bl	0 <__assert_fail>
    75d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75e0:	add	x0, x0, #0x0
    75e4:	add	x1, x1, #0x0
    75e8:	add	x3, x3, #0x0
    75ec:	mov	w2, #0x8b                  	// #139
    75f0:	bl	0 <__assert_fail>
    75f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75f8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    75fc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7600:	add	x0, x0, #0x0
    7604:	add	x1, x1, #0x0
    7608:	add	x3, x3, #0x0
    760c:	mov	w2, #0x8b                  	// #139
    7610:	bl	0 <__assert_fail>
    7614:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7618:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    761c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7620:	add	x0, x0, #0x0
    7624:	add	x1, x1, #0x0
    7628:	add	x3, x3, #0x0
    762c:	mov	w2, #0x8b                  	// #139
    7630:	bl	0 <__assert_fail>
    7634:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7638:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    763c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7640:	add	x0, x0, #0x0
    7644:	add	x1, x1, #0x0
    7648:	add	x3, x3, #0x0
    764c:	mov	w2, #0x122b                	// #4651
    7650:	bl	0 <__assert_fail>
    7654:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7658:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    765c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7660:	add	x0, x0, #0x0
    7664:	add	x1, x1, #0x0
    7668:	add	x3, x3, #0x0
    766c:	mov	w2, #0x1231                	// #4657
    7670:	bl	0 <__assert_fail>
    7674:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7678:	add	x0, x0, #0x0
    767c:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000007680 <_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE>:
    7680:	sub	sp, sp, #0x120
    7684:	stp	x29, x30, [sp, #224]
    7688:	stp	x28, x23, [sp, #240]
    768c:	stp	x22, x21, [sp, #256]
    7690:	stp	x20, x19, [sp, #272]
    7694:	add	x29, sp, #0xe0
    7698:	sub	x8, x29, #0x10
    769c:	add	x19, x8, #0x10
    76a0:	mov	x21, x3
    76a4:	mov	x22, x2
    76a8:	mov	x20, x1
    76ac:	mov	x23, x0
    76b0:	sub	x0, x29, #0x10
    76b4:	mov	w2, #0x40000               	// #262144
    76b8:	mov	w3, #0x1                   	// #1
    76bc:	mov	x1, x19
    76c0:	stp	x19, xzr, [x29, #-16]
    76c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    76c8:	mov	x0, sp
    76cc:	sub	x1, x29, #0x10
    76d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76d4:	mov	x0, sp
    76d8:	mov	x1, x23
    76dc:	mov	x2, x22
    76e0:	mov	x3, x21
    76e4:	bl	6690 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE>
    76e8:	mov	x0, sp
    76ec:	bl	758 <_ZN4llvm13BitcodeWriter11writeSymtabEv>
    76f0:	mov	x0, sp
    76f4:	bl	938 <_ZN4llvm13BitcodeWriter11writeStrtabEv>
    76f8:	ldur	w2, [x29, #-8]
    76fc:	cbz	w2, 773c <_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xbc>
    7700:	ldur	x1, [x29, #-16]
    7704:	mov	x0, x20
    7708:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    770c:	mov	x0, sp
    7710:	bl	3fc <_ZN4llvm13BitcodeWriterD1Ev>
    7714:	ldur	x0, [x29, #-16]
    7718:	cmp	x0, x19
    771c:	b.eq	7724 <_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xa4>  // b.none
    7720:	bl	0 <free>
    7724:	ldp	x20, x19, [sp, #272]
    7728:	ldp	x22, x21, [sp, #256]
    772c:	ldp	x28, x23, [sp, #240]
    7730:	ldp	x29, x30, [sp, #224]
    7734:	add	sp, sp, #0x120
    7738:	ret
    773c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7740:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7744:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7748:	add	x0, x0, #0x0
    774c:	add	x1, x1, #0x0
    7750:	add	x3, x3, #0x0
    7754:	mov	w2, #0x9e                  	// #158
    7758:	bl	0 <__assert_fail>

000000000000775c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE>:
    775c:	sub	sp, sp, #0x190
    7760:	stp	x29, x30, [sp, #304]
    7764:	stp	x28, x27, [sp, #320]
    7768:	stp	x26, x25, [sp, #336]
    776c:	stp	x24, x23, [sp, #352]
    7770:	stp	x22, x21, [sp, #368]
    7774:	stp	x20, x19, [sp, #384]
    7778:	add	x29, sp, #0x130
    777c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7780:	ldr	d0, [x9]
    7784:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7788:	sub	x8, x29, #0x28
    778c:	sub	x10, x29, #0x70
    7790:	stur	d0, [x29, #-32]
    7794:	ldr	d0, [x9]
    7798:	add	x11, x8, #0x10
    779c:	add	x8, x10, #0x28
    77a0:	stur	x11, [x29, #-40]
    77a4:	stp	xzr, x8, [x29, #-112]
    77a8:	stur	x8, [x29, #-96]
    77ac:	stur	d0, [x29, #-88]
    77b0:	stur	wzr, [x29, #-80]
    77b4:	mov	x19, x0
    77b8:	ldr	x0, [x0]
    77bc:	stp	x11, x4, [sp, #32]
    77c0:	str	w3, [sp, #52]
    77c4:	mov	w25, w2
    77c8:	mov	x24, x1
    77cc:	add	x21, x10, #0x18
    77d0:	add	x22, x10, #0x1c
    77d4:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    77d8:	mov	w1, wzr
    77dc:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    77e0:	mov	x20, x0
    77e4:	sub	x1, x29, #0x70
    77e8:	mov	w2, #0x1                   	// #1
    77ec:	mov	x0, x19
    77f0:	bl	0 <_ZN4llvm26collectUsedGlobalVariablesERKNS_6ModuleERNS_15SmallPtrSetImplIPNS_11GlobalValueEEEb>
    77f4:	ldp	x8, x28, [x29, #-104]
    77f8:	mov	x26, x0
    77fc:	cmp	x28, x8
    7800:	csel	x8, x22, x21, eq  // eq = none
    7804:	ldr	w8, [x8]
    7808:	add	x21, x28, x8, lsl #3
    780c:	cbz	w8, 7834 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0xd8>
    7810:	lsl	x9, x8, #3
    7814:	add	x8, x9, x28
    7818:	ldr	x10, [x28]
    781c:	cmn	x10, #0x2
    7820:	b.cc	7834 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0xd8>  // b.lo, b.ul, b.last
    7824:	subs	x9, x9, #0x8
    7828:	add	x28, x28, #0x8
    782c:	b.ne	7818 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0xbc>  // b.any
    7830:	mov	x28, x8
    7834:	cmp	x28, x21
    7838:	b.eq	797c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x220>  // b.none
    783c:	ldur	x22, [x29, #-112]
    7840:	mov	w23, #0x7564                	// #30052
    7844:	movk	w23, #0x656c, lsl #16
    7848:	cmp	x28, x21
    784c:	b.cs	7ef0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x794>  // b.hs, b.nlast
    7850:	ldr	x27, [x28]
    7854:	mov	x0, x27
    7858:	bl	0 <_ZNK4llvm5Value7getNameEv>
    785c:	cmp	x1, #0x14
    7860:	b.ne	78a4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x148>  // b.any
    7864:	ldp	x8, x9, [x0]
    7868:	mov	x11, #0x6c6c                	// #27756
    786c:	movk	x11, #0x6d76, lsl #16
    7870:	movk	x11, #0x652e, lsl #32
    7874:	movk	x11, #0x626d, lsl #48
    7878:	eor	x8, x8, x11
    787c:	mov	x11, #0x6465                	// #25701
    7880:	ldr	w10, [x0, #16]
    7884:	movk	x11, #0x6564, lsl #16
    7888:	movk	x11, #0x2e64, lsl #32
    788c:	movk	x11, #0x6f6d, lsl #48
    7890:	eor	x9, x9, x11
    7894:	eor	x10, x10, x23
    7898:	orr	x8, x8, x9
    789c:	orr	x8, x8, x10
    78a0:	cbz	x8, 791c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1c0>
    78a4:	mov	x0, x27
    78a8:	bl	0 <_ZNK4llvm5Value7getNameEv>
    78ac:	cmp	x1, #0xc
    78b0:	b.ne	78e4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x188>  // b.any
    78b4:	ldr	x8, [x0]
    78b8:	mov	x10, #0x6c6c                	// #27756
    78bc:	movk	x10, #0x6d76, lsl #16
    78c0:	ldr	w9, [x0, #8]
    78c4:	movk	x10, #0x632e, lsl #32
    78c8:	movk	x10, #0x646d, lsl #48
    78cc:	eor	x8, x8, x10
    78d0:	mov	w10, #0x696c                	// #26988
    78d4:	movk	w10, #0x656e, lsl #16
    78d8:	eor	x9, x9, x10
    78dc:	orr	x8, x8, x9
    78e0:	cbz	x8, 791c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1c0>
    78e4:	mov	x0, x27
    78e8:	mov	x1, x20
    78ec:	bl	0 <_ZN4llvm12ConstantExpr32getPointerBitCastOrAddrSpaceCastEPNS_8ConstantEPNS_4TypeE>
    78f0:	ldp	w8, w9, [x29, #-32]
    78f4:	mov	x27, x0
    78f8:	cmp	w8, w9
    78fc:	b.cs	7960 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x204>  // b.hs, b.nlast
    7900:	ldur	x9, [x29, #-40]
    7904:	str	x27, [x9, w8, uxtw #3]
    7908:	ldp	w8, w9, [x29, #-32]
    790c:	cmp	w8, w9
    7910:	b.cs	7ed0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x774>  // b.hs, b.nlast
    7914:	add	w8, w8, #0x1
    7918:	stur	w8, [x29, #-32]
    791c:	ldur	x8, [x29, #-112]
    7920:	cmp	x8, x22
    7924:	b.ne	7f10 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x7b4>  // b.any
    7928:	add	x28, x28, #0x8
    792c:	cmp	x28, x21
    7930:	b.hi	7f30 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x7d4>  // b.pmore
    7934:	b.eq	797c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x220>  // b.none
    7938:	ldr	x8, [x28]
    793c:	cmn	x8, #0x2
    7940:	b.cc	7954 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1f8>  // b.lo, b.ul, b.last
    7944:	add	x28, x28, #0x8
    7948:	cmp	x21, x28
    794c:	b.ne	7938 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1dc>  // b.any
    7950:	b	797c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x220>
    7954:	cmp	x21, x28
    7958:	b.ne	7848 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0xec>  // b.any
    795c:	b	797c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x220>
    7960:	ldr	x1, [sp, #32]
    7964:	sub	x0, x29, #0x28
    7968:	mov	w3, #0x8                   	// #8
    796c:	mov	x2, xzr
    7970:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7974:	ldur	w8, [x29, #-32]
    7978:	b	7900 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1a4>
    797c:	cbz	x26, 7988 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x22c>
    7980:	mov	x0, x26
    7984:	bl	0 <_ZN4llvm14GlobalVariable15eraseFromParentEv>
    7988:	sub	x8, x29, #0x90
    798c:	add	x9, x19, #0xf0
    7990:	mov	w10, #0x104                 	// #260
    7994:	add	x28, x8, #0x10
    7998:	add	x0, sp, #0x68
    799c:	add	x1, sp, #0x38
    79a0:	sturb	wzr, [x29, #-128]
    79a4:	strh	w10, [sp, #72]
    79a8:	stp	x28, xzr, [x29, #-144]
    79ac:	stp	x9, xzr, [sp, #56]
    79b0:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    79b4:	mov	x27, xzr
    79b8:	mov	x26, xzr
    79bc:	tbz	w25, #0, 7ac0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x364>
    79c0:	ldr	x27, [x24, #8]
    79c4:	cbz	x27, 7a2c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d0>
    79c8:	ldr	x26, [x24]
    79cc:	ldrb	w8, [x26]
    79d0:	cmp	w8, #0x42
    79d4:	b.eq	7a08 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2ac>  // b.none
    79d8:	cmp	w8, #0xde
    79dc:	b.ne	7a2c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d0>  // b.any
    79e0:	ldrb	w8, [x26, #1]
    79e4:	cmp	w8, #0xc0
    79e8:	b.ne	7a2c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d0>  // b.any
    79ec:	ldrb	w8, [x26, #2]
    79f0:	cmp	w8, #0x17
    79f4:	b.ne	7a2c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d0>  // b.any
    79f8:	ldrb	w8, [x26, #3]
    79fc:	cmp	w8, #0xb
    7a00:	b.ne	7a2c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d0>  // b.any
    7a04:	b	7ac0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x364>
    7a08:	ldrb	w8, [x26, #1]
    7a0c:	cmp	w8, #0x43
    7a10:	b.ne	7a2c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d0>  // b.any
    7a14:	ldrb	w8, [x26, #2]
    7a18:	cmp	w8, #0xc0
    7a1c:	b.ne	7a2c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d0>  // b.any
    7a20:	ldrb	w8, [x26, #3]
    7a24:	cmp	w8, #0xde
    7a28:	b.eq	7ac0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x364>  // b.none
    7a2c:	stp	xzr, xzr, [sp, #72]
    7a30:	adrp	x9, 0 <_ZTVN4llvm18raw_string_ostreamE>
    7a34:	ldr	x9, [x9]
    7a38:	mov	w8, #0x1                   	// #1
    7a3c:	sub	x10, x29, #0x90
    7a40:	str	w8, [sp, #88]
    7a44:	add	x8, x9, #0x10
    7a48:	add	x1, sp, #0x38
    7a4c:	mov	w2, #0x1                   	// #1
    7a50:	mov	x0, x19
    7a54:	mov	x3, xzr
    7a58:	mov	w4, wzr
    7a5c:	mov	x5, xzr
    7a60:	stp	x8, xzr, [sp, #56]
    7a64:	str	x10, [sp, #96]
    7a68:	bl	6288 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
    7a6c:	ldr	x8, [sp, #80]
    7a70:	ldr	x9, [sp, #64]
    7a74:	cmp	x8, x9
    7a78:	b.eq	7aac <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x350>  // b.none
    7a7c:	add	x0, sp, #0x38
    7a80:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    7a84:	ldr	x8, [sp, #96]
    7a88:	ldr	x9, [sp, #80]
    7a8c:	ldr	x10, [sp, #64]
    7a90:	ldr	x26, [x8]
    7a94:	cmp	x9, x10
    7a98:	b.eq	7ab4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x358>  // b.none
    7a9c:	add	x0, sp, #0x38
    7aa0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    7aa4:	ldr	x8, [sp, #96]
    7aa8:	b	7ab4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x358>
    7aac:	ldr	x8, [sp, #96]
    7ab0:	ldr	x26, [x8]
    7ab4:	ldr	x27, [x8, #8]
    7ab8:	add	x0, sp, #0x38
    7abc:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    7ac0:	ldr	x0, [x19]
    7ac4:	mov	w1, #0x8                   	// #8
    7ac8:	bl	0 <_ZN4llvm4Type9getIntNTyERNS_11LLVMContextEj>
    7acc:	mov	x1, x27
    7ad0:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    7ad4:	mov	x2, x0
    7ad8:	mov	x0, x26
    7adc:	mov	x1, x27
    7ae0:	bl	0 <_ZN4llvm22ConstantDataSequential7getImplENS_9StringRefEPNS_4TypeE>
    7ae4:	mov	x25, x0
    7ae8:	mov	w0, #0x58                  	// #88
    7aec:	mov	w1, #0x1                   	// #1
    7af0:	bl	0 <_ZN4llvm4UsernwEmj>
    7af4:	ldr	x2, [x25]
    7af8:	mov	w8, #0x101                 	// #257
    7afc:	add	x6, sp, #0x38
    7b00:	mov	w3, #0x1                   	// #1
    7b04:	mov	w4, #0x8                   	// #8
    7b08:	mov	x1, x19
    7b0c:	mov	x5, x25
    7b10:	mov	x7, xzr
    7b14:	mov	x24, x0
    7b18:	stp	xzr, xzr, [sp, #56]
    7b1c:	strh	w8, [sp, #72]
    7b20:	strb	wzr, [sp, #16]
    7b24:	str	wzr, [sp, #8]
    7b28:	str	wzr, [sp]
    7b2c:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    7b30:	ldr	w8, [sp, #156]
    7b34:	cmp	w8, #0x5
    7b38:	b.hi	7f70 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x814>  // b.pmore
    7b3c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7b40:	add	x9, x9, #0x0
    7b44:	adr	x10, 7b5c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x400>
    7b48:	ldrh	w11, [x9, x8, lsl #1]
    7b4c:	add	x10, x10, x11, lsl #2
    7b50:	adrp	x25, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7b54:	add	x25, x25, #0x0
    7b58:	br	x10
    7b5c:	adrp	x25, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7b60:	add	x25, x25, #0x0
    7b64:	mov	x0, x25
    7b68:	bl	0 <strlen>
    7b6c:	mov	x2, x0
    7b70:	mov	x0, x24
    7b74:	mov	x1, x25
    7b78:	bl	0 <_ZN4llvm12GlobalObject10setSectionENS_9StringRefE>
    7b7c:	mov	x0, x24
    7b80:	mov	x1, x20
    7b84:	bl	0 <_ZN4llvm12ConstantExpr32getPointerBitCastOrAddrSpaceCastEPNS_8ConstantEPNS_4TypeE>
    7b88:	ldp	w8, w9, [x29, #-32]
    7b8c:	mov	x25, x0
    7b90:	cmp	w8, w9
    7b94:	b.cs	7e98 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x73c>  // b.hs, b.nlast
    7b98:	ldur	x9, [x29, #-40]
    7b9c:	str	x25, [x9, w8, uxtw #3]
    7ba0:	ldp	w8, w9, [x29, #-32]
    7ba4:	cmp	w8, w9
    7ba8:	b.cs	7ed0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x774>  // b.hs, b.nlast
    7bac:	adrp	x26, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7bb0:	add	x26, x26, #0x0
    7bb4:	add	w8, w8, #0x1
    7bb8:	mov	w2, #0x14                  	// #20
    7bbc:	mov	w3, #0x1                   	// #1
    7bc0:	mov	x0, x19
    7bc4:	mov	x1, x26
    7bc8:	stur	w8, [x29, #-32]
    7bcc:	bl	0 <_ZNK4llvm6Module17getGlobalVariableENS_9StringRefEb>
    7bd0:	cbz	x0, 7c0c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x4b0>
    7bd4:	mov	x25, x0
    7bd8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    7bdc:	ldr	x8, [x25, #8]
    7be0:	cbz	x8, 7f50 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x7f4>
    7be4:	ldr	x8, [x8, #8]
    7be8:	cbnz	x8, 7f50 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x7f4>
    7bec:	mov	x0, x24
    7bf0:	mov	x1, x25
    7bf4:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    7bf8:	mov	x0, x25
    7bfc:	bl	0 <_ZN4llvm14GlobalVariable15eraseFromParentEv>
    7c00:	ldr	w8, [sp, #52]
    7c04:	tbnz	w8, #0, 7c2c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x4d0>
    7c08:	b	7d78 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x61c>
    7c0c:	mov	w8, #0x103                 	// #259
    7c10:	add	x1, sp, #0x38
    7c14:	mov	x0, x24
    7c18:	stp	x26, xzr, [sp, #56]
    7c1c:	strh	w8, [sp, #72]
    7c20:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    7c24:	ldr	w8, [sp, #52]
    7c28:	tbz	w8, #0, 7d78 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x61c>
    7c2c:	ldr	x8, [sp, #40]
    7c30:	ldr	x0, [x19]
    7c34:	mov	w1, #0x8                   	// #8
    7c38:	ldp	x23, x8, [x8]
    7c3c:	sub	x22, x8, x23
    7c40:	bl	0 <_ZN4llvm4Type9getIntNTyERNS_11LLVMContextEj>
    7c44:	mov	x1, x22
    7c48:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    7c4c:	mov	x2, x0
    7c50:	mov	x0, x23
    7c54:	mov	x1, x22
    7c58:	bl	0 <_ZN4llvm22ConstantDataSequential7getImplENS_9StringRefEPNS_4TypeE>
    7c5c:	mov	x23, x0
    7c60:	mov	w0, #0x58                  	// #88
    7c64:	mov	w1, #0x1                   	// #1
    7c68:	bl	0 <_ZN4llvm4UsernwEmj>
    7c6c:	ldr	x2, [x23]
    7c70:	mov	w8, #0x101                 	// #257
    7c74:	add	x6, sp, #0x38
    7c78:	mov	w3, #0x1                   	// #1
    7c7c:	mov	w4, #0x8                   	// #8
    7c80:	mov	x1, x19
    7c84:	mov	x5, x23
    7c88:	mov	x7, xzr
    7c8c:	mov	x22, x0
    7c90:	stp	xzr, xzr, [sp, #56]
    7c94:	strh	w8, [sp, #72]
    7c98:	strb	wzr, [sp, #16]
    7c9c:	str	wzr, [sp, #8]
    7ca0:	str	wzr, [sp]
    7ca4:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    7ca8:	ldr	w8, [sp, #156]
    7cac:	cmp	w8, #0x5
    7cb0:	b.hi	7fc0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x864>  // b.pmore
    7cb4:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7cb8:	add	x9, x9, #0x0
    7cbc:	adr	x10, 7cd4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x578>
    7cc0:	ldrb	w11, [x9, x8]
    7cc4:	add	x10, x10, x11, lsl #2
    7cc8:	adrp	x23, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ccc:	add	x23, x23, #0x0
    7cd0:	br	x10
    7cd4:	adrp	x23, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7cd8:	add	x23, x23, #0x0
    7cdc:	mov	x0, x23
    7ce0:	bl	0 <strlen>
    7ce4:	mov	x2, x0
    7ce8:	mov	x0, x22
    7cec:	mov	x1, x23
    7cf0:	bl	0 <_ZN4llvm12GlobalObject10setSectionENS_9StringRefE>
    7cf4:	mov	x0, x22
    7cf8:	mov	x1, x20
    7cfc:	bl	0 <_ZN4llvm12ConstantExpr32getPointerBitCastOrAddrSpaceCastEPNS_8ConstantEPNS_4TypeE>
    7d00:	ldp	w8, w9, [x29, #-32]
    7d04:	mov	x23, x0
    7d08:	cmp	w8, w9
    7d0c:	b.cs	7eb4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x758>  // b.hs, b.nlast
    7d10:	ldur	x9, [x29, #-40]
    7d14:	str	x23, [x9, w8, uxtw #3]
    7d18:	ldp	w8, w9, [x29, #-32]
    7d1c:	cmp	w8, w9
    7d20:	b.cs	7ed0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x774>  // b.hs, b.nlast
    7d24:	adrp	x23, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7d28:	add	x23, x23, #0x0
    7d2c:	add	w8, w8, #0x1
    7d30:	mov	w2, #0xc                   	// #12
    7d34:	mov	w3, #0x1                   	// #1
    7d38:	mov	x0, x19
    7d3c:	mov	x1, x23
    7d40:	stur	w8, [x29, #-32]
    7d44:	bl	0 <_ZNK4llvm6Module17getGlobalVariableENS_9StringRefEb>
    7d48:	cbz	x0, 7e74 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x718>
    7d4c:	mov	x21, x0
    7d50:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    7d54:	ldr	x8, [x21, #8]
    7d58:	cbz	x8, 7fa0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x844>
    7d5c:	ldr	x8, [x8, #8]
    7d60:	cbnz	x8, 7fa0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x844>
    7d64:	mov	x0, x22
    7d68:	mov	x1, x21
    7d6c:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    7d70:	mov	x0, x21
    7d74:	bl	0 <_ZN4llvm14GlobalVariable15eraseFromParentEv>
    7d78:	ldur	w1, [x29, #-32]
    7d7c:	cbz	w1, 7e04 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6a8>
    7d80:	mov	x0, x20
    7d84:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    7d88:	mov	x20, x0
    7d8c:	mov	w0, #0x58                  	// #88
    7d90:	mov	w1, #0x1                   	// #1
    7d94:	bl	0 <_ZN4llvm4UsernwEmj>
    7d98:	ldur	x1, [x29, #-40]
    7d9c:	ldur	w2, [x29, #-32]
    7da0:	mov	x21, x0
    7da4:	mov	x0, x20
    7da8:	bl	0 <_ZN4llvm13ConstantArray3getEPNS_9ArrayTypeENS_8ArrayRefIPNS_8ConstantEEE>
    7dac:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7db0:	mov	x5, x0
    7db4:	add	x8, x8, #0x0
    7db8:	mov	w9, #0x103                 	// #259
    7dbc:	add	x6, sp, #0x38
    7dc0:	mov	w4, #0x6                   	// #6
    7dc4:	mov	x0, x21
    7dc8:	mov	x1, x19
    7dcc:	mov	x2, x20
    7dd0:	mov	w3, wzr
    7dd4:	mov	x7, xzr
    7dd8:	stp	x8, xzr, [sp, #56]
    7ddc:	strh	w9, [sp, #72]
    7de0:	strb	wzr, [sp, #16]
    7de4:	str	wzr, [sp, #8]
    7de8:	str	wzr, [sp]
    7dec:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    7df0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7df4:	add	x1, x1, #0x0
    7df8:	mov	w2, #0xd                   	// #13
    7dfc:	mov	x0, x21
    7e00:	bl	0 <_ZN4llvm12GlobalObject10setSectionENS_9StringRefE>
    7e04:	ldr	x0, [sp, #104]
    7e08:	add	x8, sp, #0x68
    7e0c:	add	x8, x8, #0x10
    7e10:	cmp	x0, x8
    7e14:	b.eq	7e1c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6c0>  // b.none
    7e18:	bl	0 <_ZdlPv>
    7e1c:	ldur	x0, [x29, #-144]
    7e20:	cmp	x0, x28
    7e24:	b.eq	7e2c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6d0>  // b.none
    7e28:	bl	0 <_ZdlPv>
    7e2c:	ldp	x8, x0, [x29, #-104]
    7e30:	cmp	x0, x8
    7e34:	b.eq	7e3c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6e0>  // b.none
    7e38:	bl	0 <free>
    7e3c:	ldur	x0, [x29, #-40]
    7e40:	sub	x8, x29, #0x28
    7e44:	add	x8, x8, #0x10
    7e48:	cmp	x0, x8
    7e4c:	b.eq	7e54 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6f8>  // b.none
    7e50:	bl	0 <free>
    7e54:	ldp	x20, x19, [sp, #384]
    7e58:	ldp	x22, x21, [sp, #368]
    7e5c:	ldp	x24, x23, [sp, #352]
    7e60:	ldp	x26, x25, [sp, #336]
    7e64:	ldp	x28, x27, [sp, #320]
    7e68:	ldp	x29, x30, [sp, #304]
    7e6c:	add	sp, sp, #0x190
    7e70:	ret
    7e74:	mov	w8, #0x103                 	// #259
    7e78:	add	x1, sp, #0x38
    7e7c:	mov	x0, x22
    7e80:	stp	x23, xzr, [sp, #56]
    7e84:	strh	w8, [sp, #72]
    7e88:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    7e8c:	ldur	w1, [x29, #-32]
    7e90:	cbnz	w1, 7d80 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x624>
    7e94:	b	7e04 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6a8>
    7e98:	ldr	x1, [sp, #32]
    7e9c:	sub	x0, x29, #0x28
    7ea0:	mov	w3, #0x8                   	// #8
    7ea4:	mov	x2, xzr
    7ea8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7eac:	ldur	w8, [x29, #-32]
    7eb0:	b	7b98 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x43c>
    7eb4:	ldr	x1, [sp, #32]
    7eb8:	sub	x0, x29, #0x28
    7ebc:	mov	w3, #0x8                   	// #8
    7ec0:	mov	x2, xzr
    7ec4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7ec8:	ldur	w8, [x29, #-32]
    7ecc:	b	7d10 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x5b4>
    7ed0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ed4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ed8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7edc:	add	x0, x0, #0x0
    7ee0:	add	x1, x1, #0x0
    7ee4:	add	x3, x3, #0x0
    7ee8:	mov	w2, #0x43                  	// #67
    7eec:	bl	0 <__assert_fail>
    7ef0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ef4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ef8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7efc:	add	x0, x0, #0x0
    7f00:	add	x1, x1, #0x0
    7f04:	add	x3, x3, #0x0
    7f08:	mov	w2, #0x121                 	// #289
    7f0c:	bl	0 <__assert_fail>
    7f10:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f14:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f18:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f1c:	add	x0, x0, #0x0
    7f20:	add	x1, x1, #0x0
    7f24:	add	x3, x3, #0x0
    7f28:	mov	w2, #0x126                 	// #294
    7f2c:	bl	0 <__assert_fail>
    7f30:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f34:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f38:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f3c:	add	x0, x0, #0x0
    7f40:	add	x1, x1, #0x0
    7f44:	add	x3, x3, #0x0
    7f48:	mov	w2, #0xf8                  	// #248
    7f4c:	bl	0 <__assert_fail>
    7f50:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f54:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f58:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f5c:	add	x0, x0, #0x0
    7f60:	add	x1, x1, #0x0
    7f64:	add	x3, x3, #0x0
    7f68:	mov	w2, #0x129b                	// #4763
    7f6c:	bl	0 <__assert_fail>
    7f70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f78:	add	x0, x0, #0x0
    7f7c:	add	x1, x1, #0x0
    7f80:	mov	w2, #0x1257                	// #4695
    7f84:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7f88:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f8c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f90:	add	x0, x0, #0x0
    7f94:	add	x1, x1, #0x0
    7f98:	mov	w2, #0x1254                	// #4692
    7f9c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7fa0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7fa4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7fa8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7fac:	add	x0, x0, #0x0
    7fb0:	add	x1, x1, #0x0
    7fb4:	add	x3, x3, #0x0
    7fb8:	mov	w2, #0x12b1                	// #4785
    7fbc:	bl	0 <__assert_fail>
    7fc0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7fc4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7fc8:	add	x0, x0, #0x0
    7fcc:	add	x1, x1, #0x0
    7fd0:	mov	w2, #0x1267                	// #4711
    7fd4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7fd8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7fdc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7fe0:	add	x0, x0, #0x0
    7fe4:	add	x1, x1, #0x0
    7fe8:	mov	w2, #0x1264                	// #4708
    7fec:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000007ff0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE>:
    7ff0:	stp	x29, x30, [sp, #-96]!
    7ff4:	str	x27, [sp, #16]
    7ff8:	stp	x26, x25, [sp, #32]
    7ffc:	stp	x24, x23, [sp, #48]
    8000:	stp	x22, x21, [sp, #64]
    8004:	stp	x20, x19, [sp, #80]
    8008:	mov	x29, sp
    800c:	mov	x19, x0
    8010:	stp	x3, x2, [x0]
    8014:	str	x1, [x0, #16]
    8018:	add	x0, x0, #0x18
    801c:	and	w2, w4, #0x1
    8020:	mov	x21, x5
    8024:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8028:	ldp	x10, x9, [x19, #136]
    802c:	add	x8, x19, #0x258
    8030:	str	x8, [x19, #616]
    8034:	str	x8, [x19, #624]
    8038:	sub	x8, x9, x10
    803c:	lsr	x8, x8, #4
    8040:	str	x21, [x19, #584]
    8044:	str	wzr, [x19, #600]
    8048:	str	xzr, [x19, #608]
    804c:	str	xzr, [x19, #632]
    8050:	str	xzr, [x19, #648]
    8054:	str	w8, [x19, #640]
    8058:	cbz	x21, 8110 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x120>
    805c:	ldr	x20, [x21, #24]
    8060:	add	x22, x21, #0x8
    8064:	cmp	x20, x22
    8068:	b.eq	8110 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x120>  // b.none
    806c:	add	x21, x19, #0x250
    8070:	b	8088 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x98>
    8074:	mov	x0, x20
    8078:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    807c:	mov	x20, x0
    8080:	cmp	x0, x22
    8084:	b.eq	8110 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x120>  // b.none
    8088:	ldp	x23, x24, [x20, #56]
    808c:	b	8094 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xa4>
    8090:	add	x23, x23, #0x8
    8094:	cmp	x23, x24
    8098:	b.eq	8074 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x84>  // b.none
    809c:	ldr	x8, [x23]
    80a0:	cbz	x8, 812c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x13c>
    80a4:	ldr	w9, [x8, #8]
    80a8:	cmp	w9, #0x1
    80ac:	b.ne	8090 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xa0>  // b.any
    80b0:	ldp	x25, x8, [x8, #80]
    80b4:	subs	x8, x8, x25
    80b8:	b.eq	8090 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xa0>  // b.none
    80bc:	asr	x8, x8, #4
    80c0:	lsl	x26, x8, #4
    80c4:	b	80f8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x108>
    80c8:	ldr	x8, [x8]
    80cc:	add	x1, x29, #0x18
    80d0:	mov	x0, x21
    80d4:	str	x8, [x29, #24]
    80d8:	ldr	w8, [x19, #640]
    80dc:	add	w27, w8, #0x1
    80e0:	str	w27, [x19, #640]
    80e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    80e8:	str	w27, [x0]
    80ec:	subs	x26, x26, #0x10
    80f0:	add	x25, x25, #0x10
    80f4:	b.eq	8090 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xa0>  // b.none
    80f8:	ldr	x9, [x25]
    80fc:	and	x8, x9, #0xfffffffffffffff8
    8100:	tbz	w9, #0, 80c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xd8>
    8104:	ldr	x9, [x8, #8]
    8108:	cbnz	x9, 80ec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xfc>
    810c:	b	80c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xd8>
    8110:	ldp	x20, x19, [sp, #80]
    8114:	ldp	x22, x21, [sp, #64]
    8118:	ldp	x24, x23, [sp, #48]
    811c:	ldp	x26, x25, [sp, #32]
    8120:	ldr	x27, [sp, #16]
    8124:	ldp	x29, x30, [sp], #96
    8128:	ret
    812c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8130:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8134:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8138:	add	x0, x0, #0x0
    813c:	add	x1, x1, #0x0
    8140:	add	x3, x3, #0x0
    8144:	mov	w2, #0x69                  	// #105
    8148:	bl	0 <__assert_fail>

000000000000814c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv>:
    814c:	sub	sp, sp, #0x1a0
    8150:	str	d8, [sp, #304]
    8154:	stp	x29, x30, [sp, #320]
    8158:	stp	x28, x27, [sp, #336]
    815c:	stp	x26, x25, [sp, #352]
    8160:	stp	x24, x23, [sp, #368]
    8164:	stp	x22, x21, [sp, #384]
    8168:	stp	x20, x19, [sp, #400]
    816c:	add	x29, sp, #0x130
    8170:	mov	x19, x0
    8174:	ldr	x0, [x0]
    8178:	sub	x25, x29, #0x10
    817c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8180:	mov	w0, #0x220                 	// #544
    8184:	bl	0 <_Znwm>
    8188:	adrp	x27, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    818c:	ldr	x27, [x27]
    8190:	movi	v0.2s, #0x1
    8194:	mov	x23, x0
    8198:	str	d0, [x23, #8]!
    819c:	movi	v0.2d, #0x0
    81a0:	mov	x22, x0
    81a4:	add	x12, x27, #0x10
    81a8:	mov	x21, x0
    81ac:	mov	w8, #0x20                  	// #32
    81b0:	mov	w9, #0x3                   	// #3
    81b4:	str	x12, [x0]
    81b8:	mov	w12, #0x1                   	// #1
    81bc:	stp	q0, q0, [x0, #48]
    81c0:	stp	q0, q0, [x0, #80]
    81c4:	stp	q0, q0, [x0, #112]
    81c8:	stp	q0, q0, [x0, #144]
    81cc:	stp	q0, q0, [x0, #176]
    81d0:	stp	q0, q0, [x0, #208]
    81d4:	stp	q0, q0, [x0, #240]
    81d8:	stp	q0, q0, [x0, #272]
    81dc:	stp	q0, q0, [x0, #304]
    81e0:	stp	q0, q0, [x0, #336]
    81e4:	stp	q0, q0, [x0, #368]
    81e8:	stp	q0, q0, [x0, #400]
    81ec:	stp	q0, q0, [x0, #432]
    81f0:	stp	q0, q0, [x0, #464]
    81f4:	stp	q0, q0, [x0, #496]
    81f8:	str	q0, [x22, #32]!
    81fc:	ldur	w11, [x25, #3]
    8200:	str	q0, [x0, #528]
    8204:	str	x22, [x21, #16]!
    8208:	stp	w12, w8, [x0, #24]
    820c:	str	x9, [x22]
    8210:	ldur	w9, [x29, #-16]
    8214:	mov	w8, #0x8                   	// #8
    8218:	mov	w10, #0x2                   	// #2
    821c:	str	x8, [x0, #48]
    8220:	str	w11, [x0, #44]
    8224:	stur	w9, [x0, #41]
    8228:	ldp	w8, w9, [x0, #24]
    822c:	strb	w10, [x0, #40]
    8230:	ldur	w10, [x29, #-16]
    8234:	ldur	w12, [x25, #3]
    8238:	mov	w11, #0x4                   	// #4
    823c:	cmp	w8, w9
    8240:	strb	w11, [x0, #56]
    8244:	str	w12, [x0, #60]
    8248:	stur	w10, [x0, #57]
    824c:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8250:	add	w8, w8, #0x1
    8254:	mov	x20, x0
    8258:	cmp	w8, w9
    825c:	str	w8, [x0, #24]
    8260:	b.cs	b210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x30c4>  // b.hs, b.nlast
    8264:	ldr	x9, [x20, #16]
    8268:	mov	w10, #0x6                   	// #6
    826c:	add	x8, x9, w8, uxtw #4
    8270:	str	xzr, [x8]
    8274:	strb	w10, [x8, #8]
    8278:	ldur	w9, [x25, #3]
    827c:	ldur	w10, [x29, #-16]
    8280:	str	w9, [x8, #12]
    8284:	stur	w10, [x8, #9]
    8288:	ldp	w8, w9, [x20, #24]
    828c:	cmp	w8, w9
    8290:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8294:	add	w8, w8, #0x1
    8298:	cmp	w8, w9
    829c:	str	w8, [x20, #24]
    82a0:	b.cs	b22c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x30e0>  // b.hs, b.nlast
    82a4:	ldr	x9, [x20, #16]
    82a8:	mov	w10, #0x8                   	// #8
    82ac:	mov	w11, #0x2                   	// #2
    82b0:	add	x8, x9, w8, uxtw #4
    82b4:	str	x10, [x8]
    82b8:	strb	w11, [x8, #8]
    82bc:	ldur	w9, [x25, #3]
    82c0:	ldur	w10, [x29, #-16]
    82c4:	str	w9, [x8, #12]
    82c8:	stur	w10, [x8, #9]
    82cc:	ldp	w8, w9, [x20, #24]
    82d0:	cmp	w8, w9
    82d4:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    82d8:	add	w8, w8, #0x1
    82dc:	str	w8, [x20, #24]
    82e0:	adrp	x26, 0 <__pthread_key_create>
    82e4:	ldr	x0, [x19]
    82e8:	ldr	x26, [x26]
    82ec:	stp	x21, x20, [x29, #-32]
    82f0:	cbz	x26, 8308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bc>
    82f4:	ldaxr	w8, [x23]
    82f8:	add	w8, w8, #0x1
    82fc:	stlxr	w9, w8, [x23]
    8300:	cbnz	w9, 82f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1a8>
    8304:	b	8314 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1c8>
    8308:	ldr	w8, [x23]
    830c:	add	w8, w8, #0x1
    8310:	str	w8, [x23]
    8314:	sub	x2, x29, #0x20
    8318:	mov	w1, #0xe                   	// #14
    831c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8320:	ldur	x22, [x29, #-24]
    8324:	mov	w21, w0
    8328:	cbz	x22, 83a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>
    832c:	add	x8, x22, #0x8
    8330:	cbz	x26, 8350 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x204>
    8334:	ldaxr	w9, [x8]
    8338:	sub	w10, w9, #0x1
    833c:	stlxr	w11, w10, [x8]
    8340:	cbnz	w11, 8334 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e8>
    8344:	cmp	w9, #0x1
    8348:	b.eq	8364 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x218>  // b.none
    834c:	b	83a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>
    8350:	ldr	w9, [x8]
    8354:	sub	w10, w9, #0x1
    8358:	str	w10, [x8]
    835c:	cmp	w9, #0x1
    8360:	b.ne	83a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>  // b.any
    8364:	mov	x24, x22
    8368:	ldr	x8, [x24], #12
    836c:	mov	x0, x22
    8370:	ldr	x8, [x8, #16]
    8374:	blr	x8
    8378:	cbz	x26, b060 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f14>
    837c:	ldaxr	w8, [x24]
    8380:	sub	w9, w8, #0x1
    8384:	stlxr	w10, w9, [x24]
    8388:	cbnz	w10, 837c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x230>
    838c:	cmp	w8, #0x1
    8390:	b.ne	83a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>  // b.any
    8394:	ldr	x8, [x22]
    8398:	mov	x0, x22
    839c:	ldr	x8, [x8, #24]
    83a0:	blr	x8
    83a4:	cmp	w21, #0x4
    83a8:	b.ne	b688 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x353c>  // b.any
    83ac:	cbz	x26, 83cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x280>
    83b0:	ldaxr	w8, [x23]
    83b4:	sub	w9, w8, #0x1
    83b8:	stlxr	w10, w9, [x23]
    83bc:	cbnz	w10, 83b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x264>
    83c0:	cmp	w8, #0x1
    83c4:	b.eq	83e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x294>  // b.none
    83c8:	b	8420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d4>
    83cc:	ldr	w8, [x23]
    83d0:	sub	w9, w8, #0x1
    83d4:	str	w9, [x23]
    83d8:	cmp	w8, #0x1
    83dc:	b.ne	8420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d4>  // b.any
    83e0:	ldr	x8, [x20]
    83e4:	mov	x0, x20
    83e8:	add	x21, x20, #0xc
    83ec:	ldr	x8, [x8, #16]
    83f0:	blr	x8
    83f4:	cbz	x26, aeb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d64>
    83f8:	ldaxr	w8, [x21]
    83fc:	sub	w9, w8, #0x1
    8400:	stlxr	w10, w9, [x21]
    8404:	cbnz	w10, 83f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ac>
    8408:	cmp	w8, #0x1
    840c:	b.ne	8420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d4>  // b.any
    8410:	ldr	x8, [x20]
    8414:	mov	x0, x20
    8418:	ldr	x8, [x8, #24]
    841c:	blr	x8
    8420:	mov	w0, #0x220                 	// #544
    8424:	bl	0 <_Znwm>
    8428:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    842c:	ldr	d8, [x9]
    8430:	movi	v0.2s, #0x1
    8434:	mov	x23, x0
    8438:	add	x8, x27, #0x10
    843c:	str	d0, [x23, #8]!
    8440:	movi	v0.2d, #0x0
    8444:	mov	x22, x0
    8448:	mov	x21, x0
    844c:	mov	w10, #0x1                   	// #1
    8450:	str	x8, [x0]
    8454:	stp	q0, q0, [x0, #48]
    8458:	stp	q0, q0, [x0, #80]
    845c:	stp	q0, q0, [x0, #112]
    8460:	stp	q0, q0, [x0, #144]
    8464:	stp	q0, q0, [x0, #176]
    8468:	stp	q0, q0, [x0, #208]
    846c:	stp	q0, q0, [x0, #240]
    8470:	stp	q0, q0, [x0, #272]
    8474:	stp	q0, q0, [x0, #304]
    8478:	stp	q0, q0, [x0, #336]
    847c:	stp	q0, q0, [x0, #368]
    8480:	stp	q0, q0, [x0, #400]
    8484:	stp	q0, q0, [x0, #432]
    8488:	stp	q0, q0, [x0, #464]
    848c:	stp	q0, q0, [x0, #496]
    8490:	str	q0, [x22, #32]!
    8494:	str	q0, [x0, #528]
    8498:	str	x22, [x21, #16]!
    849c:	str	d8, [x0, #24]
    84a0:	str	x10, [x22]
    84a4:	ldp	w8, w9, [x0, #24]
    84a8:	ldur	w12, [x25, #3]
    84ac:	ldur	w10, [x29, #-16]
    84b0:	mov	w11, #0xff                  	// #255
    84b4:	cmp	w8, w9
    84b8:	strb	w11, [x0, #40]
    84bc:	str	w12, [x0, #44]
    84c0:	stur	w10, [x0, #41]
    84c4:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    84c8:	add	w8, w8, #0x1
    84cc:	mov	x20, x0
    84d0:	cmp	w8, w9
    84d4:	str	w8, [x0, #24]
    84d8:	b.cs	b248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x30fc>  // b.hs, b.nlast
    84dc:	ldr	x9, [x20, #16]
    84e0:	mov	w10, #0x8                   	// #8
    84e4:	mov	w11, #0x4                   	// #4
    84e8:	add	x8, x9, w8, uxtw #4
    84ec:	str	x10, [x8]
    84f0:	strb	w11, [x8, #8]
    84f4:	ldur	w9, [x25, #3]
    84f8:	ldur	w10, [x29, #-16]
    84fc:	str	w9, [x8, #12]
    8500:	stur	w10, [x8, #9]
    8504:	ldp	w8, w9, [x20, #24]
    8508:	cmp	w8, w9
    850c:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8510:	add	w8, w8, #0x1
    8514:	cmp	w8, w9
    8518:	str	w8, [x20, #24]
    851c:	b.cs	b264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3118>  // b.hs, b.nlast
    8520:	ldr	x9, [x20, #16]
    8524:	mov	w10, #0x6                   	// #6
    8528:	add	x8, x9, w8, uxtw #4
    852c:	str	xzr, [x8]
    8530:	strb	w10, [x8, #8]
    8534:	ldur	w9, [x25, #3]
    8538:	ldur	w10, [x29, #-16]
    853c:	str	w9, [x8, #12]
    8540:	stur	w10, [x8, #9]
    8544:	ldp	w8, w9, [x20, #24]
    8548:	cmp	w8, w9
    854c:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8550:	add	w8, w8, #0x1
    8554:	cmp	w8, w9
    8558:	str	w8, [x20, #24]
    855c:	b.cs	b280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3134>  // b.hs, b.nlast
    8560:	ldr	x9, [x20, #16]
    8564:	mov	w10, #0x7                   	// #7
    8568:	mov	w11, #0x2                   	// #2
    856c:	add	x8, x9, w8, uxtw #4
    8570:	str	x10, [x8]
    8574:	strb	w11, [x8, #8]
    8578:	ldur	w9, [x25, #3]
    857c:	ldur	w10, [x29, #-16]
    8580:	str	w9, [x8, #12]
    8584:	stur	w10, [x8, #9]
    8588:	ldp	w8, w9, [x20, #24]
    858c:	cmp	w8, w9
    8590:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8594:	add	w8, w8, #0x1
    8598:	str	w8, [x20, #24]
    859c:	ldr	x0, [x19]
    85a0:	stp	x21, x20, [x29, #-48]
    85a4:	cbz	x26, 85bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x470>
    85a8:	ldaxr	w8, [x23]
    85ac:	add	w8, w8, #0x1
    85b0:	stlxr	w9, w8, [x23]
    85b4:	cbnz	w9, 85a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x45c>
    85b8:	b	85c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x47c>
    85bc:	ldr	w8, [x23]
    85c0:	add	w8, w8, #0x1
    85c4:	str	w8, [x23]
    85c8:	sub	x2, x29, #0x30
    85cc:	mov	w1, #0xe                   	// #14
    85d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    85d4:	ldur	x22, [x29, #-40]
    85d8:	mov	w21, w0
    85dc:	cbz	x22, 8658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>
    85e0:	add	x8, x22, #0x8
    85e4:	cbz	x26, 8604 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x4b8>
    85e8:	ldaxr	w9, [x8]
    85ec:	sub	w10, w9, #0x1
    85f0:	stlxr	w11, w10, [x8]
    85f4:	cbnz	w11, 85e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x49c>
    85f8:	cmp	w9, #0x1
    85fc:	b.eq	8618 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x4cc>  // b.none
    8600:	b	8658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>
    8604:	ldr	w9, [x8]
    8608:	sub	w10, w9, #0x1
    860c:	str	w10, [x8]
    8610:	cmp	w9, #0x1
    8614:	b.ne	8658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>  // b.any
    8618:	mov	x24, x22
    861c:	ldr	x8, [x24], #12
    8620:	mov	x0, x22
    8624:	ldr	x8, [x8, #16]
    8628:	blr	x8
    862c:	cbz	x26, b078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f2c>
    8630:	ldaxr	w8, [x24]
    8634:	sub	w9, w8, #0x1
    8638:	stlxr	w10, w9, [x24]
    863c:	cbnz	w10, 8630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x4e4>
    8640:	cmp	w8, #0x1
    8644:	b.ne	8658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>  // b.any
    8648:	ldr	x8, [x22]
    864c:	mov	x0, x22
    8650:	ldr	x8, [x8, #24]
    8654:	blr	x8
    8658:	cmp	w21, #0x5
    865c:	b.ne	b6a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3554>  // b.any
    8660:	cbz	x26, 8680 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x534>
    8664:	ldaxr	w8, [x23]
    8668:	sub	w9, w8, #0x1
    866c:	stlxr	w10, w9, [x23]
    8670:	cbnz	w10, 8664 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x518>
    8674:	cmp	w8, #0x1
    8678:	b.eq	8694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x548>  // b.none
    867c:	b	86d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x588>
    8680:	ldr	w8, [x23]
    8684:	sub	w9, w8, #0x1
    8688:	str	w9, [x23]
    868c:	cmp	w8, #0x1
    8690:	b.ne	86d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x588>  // b.any
    8694:	ldr	x8, [x20]
    8698:	mov	x0, x20
    869c:	add	x21, x20, #0xc
    86a0:	ldr	x8, [x8, #16]
    86a4:	blr	x8
    86a8:	cbz	x26, aec8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d7c>
    86ac:	ldaxr	w8, [x21]
    86b0:	sub	w9, w8, #0x1
    86b4:	stlxr	w10, w9, [x21]
    86b8:	cbnz	w10, 86ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x560>
    86bc:	cmp	w8, #0x1
    86c0:	b.ne	86d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x588>  // b.any
    86c4:	ldr	x8, [x20]
    86c8:	mov	x0, x20
    86cc:	ldr	x8, [x8, #24]
    86d0:	blr	x8
    86d4:	mov	w0, #0x220                 	// #544
    86d8:	bl	0 <_Znwm>
    86dc:	movi	v0.2s, #0x1
    86e0:	mov	x23, x0
    86e4:	add	x8, x27, #0x10
    86e8:	str	d0, [x23, #8]!
    86ec:	movi	v0.2d, #0x0
    86f0:	mov	x22, x0
    86f4:	mov	x21, x0
    86f8:	mov	w9, #0x1                   	// #1
    86fc:	str	x8, [x0]
    8700:	stp	q0, q0, [x0, #48]
    8704:	stp	q0, q0, [x0, #80]
    8708:	stp	q0, q0, [x0, #112]
    870c:	stp	q0, q0, [x0, #144]
    8710:	stp	q0, q0, [x0, #176]
    8714:	stp	q0, q0, [x0, #208]
    8718:	stp	q0, q0, [x0, #240]
    871c:	stp	q0, q0, [x0, #272]
    8720:	stp	q0, q0, [x0, #304]
    8724:	stp	q0, q0, [x0, #336]
    8728:	stp	q0, q0, [x0, #368]
    872c:	stp	q0, q0, [x0, #400]
    8730:	stp	q0, q0, [x0, #432]
    8734:	stp	q0, q0, [x0, #464]
    8738:	stp	q0, q0, [x0, #496]
    873c:	str	q0, [x22, #32]!
    8740:	str	q0, [x0, #528]
    8744:	str	x22, [x21, #16]!
    8748:	str	d8, [x0, #24]
    874c:	str	x9, [x22]
    8750:	ldp	w8, w9, [x0, #24]
    8754:	ldur	w11, [x25, #3]
    8758:	ldur	w12, [x29, #-16]
    875c:	mov	w10, #0xff                  	// #255
    8760:	cmp	w8, w9
    8764:	strb	w10, [x0, #40]
    8768:	str	w11, [x0, #44]
    876c:	stur	w12, [x0, #41]
    8770:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8774:	add	w8, w8, #0x1
    8778:	mov	x20, x0
    877c:	cmp	w8, w9
    8780:	str	w8, [x0, #24]
    8784:	b.cs	b29c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3150>  // b.hs, b.nlast
    8788:	ldr	x9, [x20, #16]
    878c:	mov	w10, #0x8                   	// #8
    8790:	mov	w11, #0x4                   	// #4
    8794:	add	x8, x9, w8, uxtw #4
    8798:	str	x10, [x8]
    879c:	strb	w11, [x8, #8]
    87a0:	ldur	w9, [x25, #3]
    87a4:	ldur	w10, [x29, #-16]
    87a8:	str	w9, [x8, #12]
    87ac:	stur	w10, [x8, #9]
    87b0:	ldp	w8, w9, [x20, #24]
    87b4:	cmp	w8, w9
    87b8:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    87bc:	add	w8, w8, #0x1
    87c0:	cmp	w8, w9
    87c4:	str	w8, [x20, #24]
    87c8:	b.cs	b2b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x316c>  // b.hs, b.nlast
    87cc:	ldr	x9, [x20, #16]
    87d0:	mov	w10, #0x6                   	// #6
    87d4:	add	x8, x9, w8, uxtw #4
    87d8:	str	xzr, [x8]
    87dc:	strb	w10, [x8, #8]
    87e0:	ldur	w9, [x25, #3]
    87e4:	ldur	w10, [x29, #-16]
    87e8:	str	w9, [x8, #12]
    87ec:	stur	w10, [x8, #9]
    87f0:	ldp	w8, w9, [x20, #24]
    87f4:	cmp	w8, w9
    87f8:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    87fc:	add	w8, w8, #0x1
    8800:	cmp	w8, w9
    8804:	str	w8, [x20, #24]
    8808:	b.cs	b2d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3188>  // b.hs, b.nlast
    880c:	ldr	x9, [x20, #16]
    8810:	mov	w10, #0x8                   	// #8
    8814:	add	x8, x9, w8, uxtw #4
    8818:	str	xzr, [x8]
    881c:	strb	w10, [x8, #8]
    8820:	ldur	w9, [x25, #3]
    8824:	ldur	w10, [x29, #-16]
    8828:	str	w9, [x8, #12]
    882c:	stur	w10, [x8, #9]
    8830:	ldp	w8, w9, [x20, #24]
    8834:	cmp	w8, w9
    8838:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    883c:	add	w8, w8, #0x1
    8840:	str	w8, [x20, #24]
    8844:	ldr	x0, [x19]
    8848:	stp	x21, x20, [x29, #-64]
    884c:	cbz	x26, 8864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x718>
    8850:	ldaxr	w8, [x23]
    8854:	add	w8, w8, #0x1
    8858:	stlxr	w9, w8, [x23]
    885c:	cbnz	w9, 8850 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x704>
    8860:	b	8870 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x724>
    8864:	ldr	w8, [x23]
    8868:	add	w8, w8, #0x1
    886c:	str	w8, [x23]
    8870:	sub	x2, x29, #0x40
    8874:	mov	w1, #0xe                   	// #14
    8878:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    887c:	ldur	x22, [x29, #-56]
    8880:	mov	w21, w0
    8884:	cbz	x22, 8900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>
    8888:	add	x8, x22, #0x8
    888c:	cbz	x26, 88ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x760>
    8890:	ldaxr	w9, [x8]
    8894:	sub	w10, w9, #0x1
    8898:	stlxr	w11, w10, [x8]
    889c:	cbnz	w11, 8890 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x744>
    88a0:	cmp	w9, #0x1
    88a4:	b.eq	88c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x774>  // b.none
    88a8:	b	8900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>
    88ac:	ldr	w9, [x8]
    88b0:	sub	w10, w9, #0x1
    88b4:	str	w10, [x8]
    88b8:	cmp	w9, #0x1
    88bc:	b.ne	8900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>  // b.any
    88c0:	mov	x24, x22
    88c4:	ldr	x8, [x24], #12
    88c8:	mov	x0, x22
    88cc:	ldr	x8, [x8, #16]
    88d0:	blr	x8
    88d4:	cbz	x26, b090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f44>
    88d8:	ldaxr	w8, [x24]
    88dc:	sub	w9, w8, #0x1
    88e0:	stlxr	w10, w9, [x24]
    88e4:	cbnz	w10, 88d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x78c>
    88e8:	cmp	w8, #0x1
    88ec:	b.ne	8900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>  // b.any
    88f0:	ldr	x8, [x22]
    88f4:	mov	x0, x22
    88f8:	ldr	x8, [x8, #24]
    88fc:	blr	x8
    8900:	cmp	w21, #0x6
    8904:	b.ne	b6b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x356c>  // b.any
    8908:	cbz	x26, 8928 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7dc>
    890c:	ldaxr	w8, [x23]
    8910:	sub	w9, w8, #0x1
    8914:	stlxr	w10, w9, [x23]
    8918:	cbnz	w10, 890c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7c0>
    891c:	cmp	w8, #0x1
    8920:	b.eq	893c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7f0>  // b.none
    8924:	b	897c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x830>
    8928:	ldr	w8, [x23]
    892c:	sub	w9, w8, #0x1
    8930:	str	w9, [x23]
    8934:	cmp	w8, #0x1
    8938:	b.ne	897c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x830>  // b.any
    893c:	ldr	x8, [x20]
    8940:	mov	x0, x20
    8944:	add	x21, x20, #0xc
    8948:	ldr	x8, [x8, #16]
    894c:	blr	x8
    8950:	cbz	x26, aee0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d94>
    8954:	ldaxr	w8, [x21]
    8958:	sub	w9, w8, #0x1
    895c:	stlxr	w10, w9, [x21]
    8960:	cbnz	w10, 8954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x808>
    8964:	cmp	w8, #0x1
    8968:	b.ne	897c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x830>  // b.any
    896c:	ldr	x8, [x20]
    8970:	mov	x0, x20
    8974:	ldr	x8, [x8, #24]
    8978:	blr	x8
    897c:	mov	w0, #0x220                 	// #544
    8980:	bl	0 <_Znwm>
    8984:	movi	v0.2s, #0x1
    8988:	mov	x23, x0
    898c:	add	x8, x27, #0x10
    8990:	str	d0, [x23, #8]!
    8994:	movi	v0.2d, #0x0
    8998:	mov	x22, x0
    899c:	mov	x21, x0
    89a0:	mov	w9, #0x2                   	// #2
    89a4:	str	x8, [x0]
    89a8:	stp	q0, q0, [x0, #48]
    89ac:	stp	q0, q0, [x0, #80]
    89b0:	stp	q0, q0, [x0, #112]
    89b4:	stp	q0, q0, [x0, #144]
    89b8:	stp	q0, q0, [x0, #176]
    89bc:	stp	q0, q0, [x0, #208]
    89c0:	stp	q0, q0, [x0, #240]
    89c4:	stp	q0, q0, [x0, #272]
    89c8:	stp	q0, q0, [x0, #304]
    89cc:	stp	q0, q0, [x0, #336]
    89d0:	stp	q0, q0, [x0, #368]
    89d4:	stp	q0, q0, [x0, #400]
    89d8:	stp	q0, q0, [x0, #432]
    89dc:	stp	q0, q0, [x0, #464]
    89e0:	stp	q0, q0, [x0, #496]
    89e4:	str	q0, [x22, #32]!
    89e8:	str	q0, [x0, #528]
    89ec:	str	x22, [x21, #16]!
    89f0:	str	d8, [x0, #24]
    89f4:	str	x9, [x22]
    89f8:	ldp	w8, w9, [x0, #24]
    89fc:	ldur	w11, [x25, #3]
    8a00:	ldur	w12, [x29, #-16]
    8a04:	mov	w10, #0xff                  	// #255
    8a08:	cmp	w8, w9
    8a0c:	strb	w10, [x0, #40]
    8a10:	str	w11, [x0, #44]
    8a14:	stur	w12, [x0, #41]
    8a18:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8a1c:	add	w8, w8, #0x1
    8a20:	mov	x20, x0
    8a24:	cmp	w8, w9
    8a28:	str	w8, [x0, #24]
    8a2c:	b.cs	b2f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x31a4>  // b.hs, b.nlast
    8a30:	ldr	x9, [x20, #16]
    8a34:	mov	w10, #0x8                   	// #8
    8a38:	mov	w11, #0x4                   	// #4
    8a3c:	add	x8, x9, w8, uxtw #4
    8a40:	str	x10, [x8]
    8a44:	strb	w11, [x8, #8]
    8a48:	ldur	w9, [x25, #3]
    8a4c:	ldur	w10, [x29, #-16]
    8a50:	str	w9, [x8, #12]
    8a54:	stur	w10, [x8, #9]
    8a58:	ldp	w8, w9, [x20, #24]
    8a5c:	cmp	w8, w9
    8a60:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8a64:	add	w8, w8, #0x1
    8a68:	cmp	w8, w9
    8a6c:	str	w8, [x20, #24]
    8a70:	b.cs	b30c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x31c0>  // b.hs, b.nlast
    8a74:	ldr	x9, [x20, #16]
    8a78:	mov	w10, #0x6                   	// #6
    8a7c:	add	x8, x9, w8, uxtw #4
    8a80:	str	xzr, [x8]
    8a84:	strb	w10, [x8, #8]
    8a88:	ldur	w9, [x25, #3]
    8a8c:	ldur	w10, [x29, #-16]
    8a90:	str	w9, [x8, #12]
    8a94:	stur	w10, [x8, #9]
    8a98:	ldp	w8, w9, [x20, #24]
    8a9c:	cmp	w8, w9
    8aa0:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8aa4:	add	w8, w8, #0x1
    8aa8:	cmp	w8, w9
    8aac:	str	w8, [x20, #24]
    8ab0:	b.cs	b328 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x31dc>  // b.hs, b.nlast
    8ab4:	ldr	x9, [x20, #16]
    8ab8:	mov	w10, #0x8                   	// #8
    8abc:	add	x8, x9, w8, uxtw #4
    8ac0:	str	xzr, [x8]
    8ac4:	strb	w10, [x8, #8]
    8ac8:	ldur	w9, [x25, #3]
    8acc:	ldur	w10, [x29, #-16]
    8ad0:	str	w9, [x8, #12]
    8ad4:	stur	w10, [x8, #9]
    8ad8:	ldp	w8, w9, [x20, #24]
    8adc:	cmp	w8, w9
    8ae0:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8ae4:	add	w8, w8, #0x1
    8ae8:	str	w8, [x20, #24]
    8aec:	ldr	x0, [x19]
    8af0:	stp	x21, x20, [x29, #-80]
    8af4:	cbz	x26, 8b0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x9c0>
    8af8:	ldaxr	w8, [x23]
    8afc:	add	w8, w8, #0x1
    8b00:	stlxr	w9, w8, [x23]
    8b04:	cbnz	w9, 8af8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x9ac>
    8b08:	b	8b18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x9cc>
    8b0c:	ldr	w8, [x23]
    8b10:	add	w8, w8, #0x1
    8b14:	str	w8, [x23]
    8b18:	sub	x2, x29, #0x50
    8b1c:	mov	w1, #0xe                   	// #14
    8b20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8b24:	ldur	x22, [x29, #-72]
    8b28:	mov	w21, w0
    8b2c:	cbz	x22, 8ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>
    8b30:	add	x8, x22, #0x8
    8b34:	cbz	x26, 8b54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa08>
    8b38:	ldaxr	w9, [x8]
    8b3c:	sub	w10, w9, #0x1
    8b40:	stlxr	w11, w10, [x8]
    8b44:	cbnz	w11, 8b38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x9ec>
    8b48:	cmp	w9, #0x1
    8b4c:	b.eq	8b68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa1c>  // b.none
    8b50:	b	8ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>
    8b54:	ldr	w9, [x8]
    8b58:	sub	w10, w9, #0x1
    8b5c:	str	w10, [x8]
    8b60:	cmp	w9, #0x1
    8b64:	b.ne	8ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>  // b.any
    8b68:	mov	x24, x22
    8b6c:	ldr	x8, [x24], #12
    8b70:	mov	x0, x22
    8b74:	ldr	x8, [x8, #16]
    8b78:	blr	x8
    8b7c:	cbz	x26, b0a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f5c>
    8b80:	ldaxr	w8, [x24]
    8b84:	sub	w9, w8, #0x1
    8b88:	stlxr	w10, w9, [x24]
    8b8c:	cbnz	w10, 8b80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa34>
    8b90:	cmp	w8, #0x1
    8b94:	b.ne	8ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>  // b.any
    8b98:	ldr	x8, [x22]
    8b9c:	mov	x0, x22
    8ba0:	ldr	x8, [x8, #24]
    8ba4:	blr	x8
    8ba8:	cmp	w21, #0x7
    8bac:	b.ne	b6d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3584>  // b.any
    8bb0:	cbz	x26, 8bd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa84>
    8bb4:	ldaxr	w8, [x23]
    8bb8:	sub	w9, w8, #0x1
    8bbc:	stlxr	w10, w9, [x23]
    8bc0:	cbnz	w10, 8bb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa68>
    8bc4:	cmp	w8, #0x1
    8bc8:	b.eq	8be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa98>  // b.none
    8bcc:	b	8c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xad8>
    8bd0:	ldr	w8, [x23]
    8bd4:	sub	w9, w8, #0x1
    8bd8:	str	w9, [x23]
    8bdc:	cmp	w8, #0x1
    8be0:	b.ne	8c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xad8>  // b.any
    8be4:	ldr	x8, [x20]
    8be8:	mov	x0, x20
    8bec:	add	x21, x20, #0xc
    8bf0:	ldr	x8, [x8, #16]
    8bf4:	blr	x8
    8bf8:	cbz	x26, aef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2dac>
    8bfc:	ldaxr	w8, [x21]
    8c00:	sub	w9, w8, #0x1
    8c04:	stlxr	w10, w9, [x21]
    8c08:	cbnz	w10, 8bfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xab0>
    8c0c:	cmp	w8, #0x1
    8c10:	b.ne	8c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xad8>  // b.any
    8c14:	ldr	x8, [x20]
    8c18:	mov	x0, x20
    8c1c:	ldr	x8, [x8, #24]
    8c20:	blr	x8
    8c24:	mov	w0, #0x220                 	// #544
    8c28:	bl	0 <_Znwm>
    8c2c:	movi	v0.2s, #0x1
    8c30:	mov	x28, x0
    8c34:	add	x8, x27, #0x10
    8c38:	str	d0, [x28, #8]!
    8c3c:	movi	v0.2d, #0x0
    8c40:	mov	x23, x0
    8c44:	mov	x22, x0
    8c48:	mov	w9, #0x1                   	// #1
    8c4c:	str	x8, [x0]
    8c50:	stp	q0, q0, [x0, #48]
    8c54:	stp	q0, q0, [x0, #80]
    8c58:	stp	q0, q0, [x0, #112]
    8c5c:	stp	q0, q0, [x0, #144]
    8c60:	stp	q0, q0, [x0, #176]
    8c64:	stp	q0, q0, [x0, #208]
    8c68:	stp	q0, q0, [x0, #240]
    8c6c:	stp	q0, q0, [x0, #272]
    8c70:	stp	q0, q0, [x0, #304]
    8c74:	stp	q0, q0, [x0, #336]
    8c78:	stp	q0, q0, [x0, #368]
    8c7c:	stp	q0, q0, [x0, #400]
    8c80:	stp	q0, q0, [x0, #432]
    8c84:	stp	q0, q0, [x0, #464]
    8c88:	stp	q0, q0, [x0, #496]
    8c8c:	str	q0, [x23, #32]!
    8c90:	str	q0, [x0, #528]
    8c94:	str	x23, [x22, #16]!
    8c98:	str	d8, [x0, #24]
    8c9c:	str	x9, [x23]
    8ca0:	ldp	w8, w9, [x0, #24]
    8ca4:	ldur	w11, [x25, #3]
    8ca8:	ldur	w12, [x29, #-16]
    8cac:	mov	w10, #0xff                  	// #255
    8cb0:	cmp	w8, w9
    8cb4:	strb	w10, [x0, #40]
    8cb8:	str	w11, [x0, #44]
    8cbc:	stur	w12, [x0, #41]
    8cc0:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8cc4:	add	w8, w8, #0x1
    8cc8:	add	x20, x19, #0x18
    8ccc:	mov	x21, x0
    8cd0:	str	w8, [x0, #24]
    8cd4:	mov	x0, x20
    8cd8:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    8cdc:	ldp	w8, w9, [x21, #24]
    8ce0:	mov	x24, x0
    8ce4:	cmp	w8, w9
    8ce8:	b.cs	b344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x31f8>  // b.hs, b.nlast
    8cec:	ldr	x9, [x21, #16]
    8cf0:	mov	w10, #0x2                   	// #2
    8cf4:	add	x8, x9, w8, uxtw #4
    8cf8:	str	x24, [x8]
    8cfc:	strb	w10, [x8, #8]
    8d00:	ldur	w9, [x25, #3]
    8d04:	ldur	w10, [x29, #-16]
    8d08:	str	w9, [x8, #12]
    8d0c:	stur	w10, [x8, #9]
    8d10:	ldp	w8, w9, [x21, #24]
    8d14:	cmp	w8, w9
    8d18:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8d1c:	add	w8, w8, #0x1
    8d20:	str	w8, [x21, #24]
    8d24:	ldr	x0, [x19]
    8d28:	stp	x22, x21, [x29, #-96]
    8d2c:	cbz	x26, 8d44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xbf8>
    8d30:	ldaxr	w8, [x28]
    8d34:	add	w8, w8, #0x1
    8d38:	stlxr	w9, w8, [x28]
    8d3c:	cbnz	w9, 8d30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xbe4>
    8d40:	b	8d50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc04>
    8d44:	ldr	w8, [x28]
    8d48:	add	w8, w8, #0x1
    8d4c:	str	w8, [x28]
    8d50:	sub	x2, x29, #0x60
    8d54:	mov	w1, #0xb                   	// #11
    8d58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8d5c:	ldur	x23, [x29, #-88]
    8d60:	mov	w22, w0
    8d64:	cbz	x23, 8de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>
    8d68:	add	x8, x23, #0x8
    8d6c:	cbz	x26, 8d8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc40>
    8d70:	ldaxr	w9, [x8]
    8d74:	sub	w10, w9, #0x1
    8d78:	stlxr	w11, w10, [x8]
    8d7c:	cbnz	w11, 8d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc24>
    8d80:	cmp	w9, #0x1
    8d84:	b.eq	8da0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc54>  // b.none
    8d88:	b	8de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>
    8d8c:	ldr	w9, [x8]
    8d90:	sub	w10, w9, #0x1
    8d94:	str	w10, [x8]
    8d98:	cmp	w9, #0x1
    8d9c:	b.ne	8de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>  // b.any
    8da0:	mov	x24, x23
    8da4:	ldr	x8, [x24], #12
    8da8:	mov	x0, x23
    8dac:	ldr	x8, [x8, #16]
    8db0:	blr	x8
    8db4:	cbz	x26, b0c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f74>
    8db8:	ldaxr	w8, [x24]
    8dbc:	sub	w9, w8, #0x1
    8dc0:	stlxr	w10, w9, [x24]
    8dc4:	cbnz	w10, 8db8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc6c>
    8dc8:	cmp	w8, #0x1
    8dcc:	b.ne	8de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>  // b.any
    8dd0:	ldr	x8, [x23]
    8dd4:	mov	x0, x23
    8dd8:	ldr	x8, [x8, #24]
    8ddc:	blr	x8
    8de0:	cmp	w22, #0x4
    8de4:	b.ne	b6e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x359c>  // b.any
    8de8:	cbz	x26, 8e08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xcbc>
    8dec:	ldaxr	w8, [x28]
    8df0:	sub	w9, w8, #0x1
    8df4:	stlxr	w10, w9, [x28]
    8df8:	cbnz	w10, 8dec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xca0>
    8dfc:	cmp	w8, #0x1
    8e00:	b.eq	8e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xcd0>  // b.none
    8e04:	b	8e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd10>
    8e08:	ldr	w8, [x28]
    8e0c:	sub	w9, w8, #0x1
    8e10:	str	w9, [x28]
    8e14:	cmp	w8, #0x1
    8e18:	b.ne	8e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd10>  // b.any
    8e1c:	ldr	x8, [x21]
    8e20:	mov	x0, x21
    8e24:	add	x22, x21, #0xc
    8e28:	ldr	x8, [x8, #16]
    8e2c:	blr	x8
    8e30:	cbz	x26, af10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2dc4>
    8e34:	ldaxr	w8, [x22]
    8e38:	sub	w9, w8, #0x1
    8e3c:	stlxr	w10, w9, [x22]
    8e40:	cbnz	w10, 8e34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xce8>
    8e44:	cmp	w8, #0x1
    8e48:	b.ne	8e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd10>  // b.any
    8e4c:	ldr	x8, [x21]
    8e50:	mov	x0, x21
    8e54:	ldr	x8, [x8, #24]
    8e58:	blr	x8
    8e5c:	mov	w0, #0x220                 	// #544
    8e60:	bl	0 <_Znwm>
    8e64:	movi	v0.2s, #0x1
    8e68:	mov	x24, x0
    8e6c:	add	x8, x27, #0x10
    8e70:	str	d0, [x24, #8]!
    8e74:	movi	v0.2d, #0x0
    8e78:	mov	x1, x0
    8e7c:	mov	x22, x0
    8e80:	mov	w9, #0x4                   	// #4
    8e84:	str	x8, [x0]
    8e88:	stp	q0, q0, [x0, #48]
    8e8c:	stp	q0, q0, [x0, #80]
    8e90:	stp	q0, q0, [x0, #112]
    8e94:	stp	q0, q0, [x0, #144]
    8e98:	stp	q0, q0, [x0, #176]
    8e9c:	stp	q0, q0, [x0, #208]
    8ea0:	stp	q0, q0, [x0, #240]
    8ea4:	stp	q0, q0, [x0, #272]
    8ea8:	stp	q0, q0, [x0, #304]
    8eac:	stp	q0, q0, [x0, #336]
    8eb0:	stp	q0, q0, [x0, #368]
    8eb4:	stp	q0, q0, [x0, #400]
    8eb8:	stp	q0, q0, [x0, #432]
    8ebc:	stp	q0, q0, [x0, #464]
    8ec0:	stp	q0, q0, [x0, #496]
    8ec4:	str	q0, [x1, #32]!
    8ec8:	str	q0, [x0, #528]
    8ecc:	str	x1, [x22, #16]!
    8ed0:	str	d8, [x0, #24]
    8ed4:	str	x9, [x1]
    8ed8:	ldp	w8, w9, [x0, #24]
    8edc:	ldur	w11, [x25, #3]
    8ee0:	ldur	w12, [x29, #-16]
    8ee4:	mov	w10, #0xff                  	// #255
    8ee8:	cmp	w8, w9
    8eec:	strb	w10, [x0, #40]
    8ef0:	str	w11, [x0, #44]
    8ef4:	stur	w12, [x0, #41]
    8ef8:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8efc:	add	w8, w8, #0x1
    8f00:	mov	x21, x0
    8f04:	cmp	w8, w9
    8f08:	str	w8, [x0, #24]
    8f0c:	b.cs	b360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3214>  // b.hs, b.nlast
    8f10:	ldr	x9, [x21, #16]
    8f14:	mov	w10, #0x8                   	// #8
    8f18:	mov	w11, #0x4                   	// #4
    8f1c:	add	x8, x9, w8, uxtw #4
    8f20:	str	x10, [x8]
    8f24:	strb	w11, [x8, #8]
    8f28:	ldur	w9, [x25, #3]
    8f2c:	ldur	w10, [x29, #-16]
    8f30:	str	w9, [x8, #12]
    8f34:	stur	w10, [x8, #9]
    8f38:	ldp	w8, w9, [x21, #24]
    8f3c:	cmp	w8, w9
    8f40:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8f44:	add	w8, w8, #0x1
    8f48:	str	w8, [x21, #24]
    8f4c:	ldr	x0, [x19]
    8f50:	stp	x22, x21, [x29, #-112]
    8f54:	cbz	x26, 8f6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe20>
    8f58:	ldaxr	w8, [x24]
    8f5c:	add	w8, w8, #0x1
    8f60:	stlxr	w9, w8, [x24]
    8f64:	cbnz	w9, 8f58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe0c>
    8f68:	b	8f78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe2c>
    8f6c:	ldr	w8, [x24]
    8f70:	add	w8, w8, #0x1
    8f74:	str	w8, [x24]
    8f78:	sub	x2, x29, #0x70
    8f7c:	mov	w1, #0xb                   	// #11
    8f80:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8f84:	ldur	x23, [x29, #-104]
    8f88:	mov	w22, w0
    8f8c:	cbz	x23, 9008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>
    8f90:	add	x8, x23, #0x8
    8f94:	cbz	x26, 8fb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe68>
    8f98:	ldaxr	w9, [x8]
    8f9c:	sub	w10, w9, #0x1
    8fa0:	stlxr	w11, w10, [x8]
    8fa4:	cbnz	w11, 8f98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe4c>
    8fa8:	cmp	w9, #0x1
    8fac:	b.eq	8fc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe7c>  // b.none
    8fb0:	b	9008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>
    8fb4:	ldr	w9, [x8]
    8fb8:	sub	w10, w9, #0x1
    8fbc:	str	w10, [x8]
    8fc0:	cmp	w9, #0x1
    8fc4:	b.ne	9008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>  // b.any
    8fc8:	mov	x28, x23
    8fcc:	ldr	x8, [x28], #12
    8fd0:	mov	x0, x23
    8fd4:	ldr	x8, [x8, #16]
    8fd8:	blr	x8
    8fdc:	cbz	x26, b0d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f8c>
    8fe0:	ldaxr	w8, [x28]
    8fe4:	sub	w9, w8, #0x1
    8fe8:	stlxr	w10, w9, [x28]
    8fec:	cbnz	w10, 8fe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe94>
    8ff0:	cmp	w8, #0x1
    8ff4:	b.ne	9008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>  // b.any
    8ff8:	ldr	x8, [x23]
    8ffc:	mov	x0, x23
    9000:	ldr	x8, [x8, #24]
    9004:	blr	x8
    9008:	cmp	w22, #0x5
    900c:	b.ne	b700 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x35b4>  // b.any
    9010:	cbz	x26, 9030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xee4>
    9014:	ldaxr	w8, [x24]
    9018:	sub	w9, w8, #0x1
    901c:	stlxr	w10, w9, [x24]
    9020:	cbnz	w10, 9014 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xec8>
    9024:	cmp	w8, #0x1
    9028:	b.eq	9044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xef8>  // b.none
    902c:	b	9084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf38>
    9030:	ldr	w8, [x24]
    9034:	sub	w9, w8, #0x1
    9038:	str	w9, [x24]
    903c:	cmp	w8, #0x1
    9040:	b.ne	9084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf38>  // b.any
    9044:	ldr	x8, [x21]
    9048:	mov	x0, x21
    904c:	add	x22, x21, #0xc
    9050:	ldr	x8, [x8, #16]
    9054:	blr	x8
    9058:	cbz	x26, af28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ddc>
    905c:	ldaxr	w8, [x22]
    9060:	sub	w9, w8, #0x1
    9064:	stlxr	w10, w9, [x22]
    9068:	cbnz	w10, 905c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf10>
    906c:	cmp	w8, #0x1
    9070:	b.ne	9084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf38>  // b.any
    9074:	ldr	x8, [x21]
    9078:	mov	x0, x21
    907c:	ldr	x8, [x8, #24]
    9080:	blr	x8
    9084:	mov	w0, #0x220                 	// #544
    9088:	bl	0 <_Znwm>
    908c:	movi	v0.2s, #0x1
    9090:	mov	x28, x0
    9094:	add	x8, x27, #0x10
    9098:	str	d0, [x28, #8]!
    909c:	movi	v0.2d, #0x0
    90a0:	mov	x23, x0
    90a4:	mov	x22, x0
    90a8:	mov	w9, #0xb                   	// #11
    90ac:	str	x8, [x0]
    90b0:	stp	q0, q0, [x0, #48]
    90b4:	stp	q0, q0, [x0, #80]
    90b8:	stp	q0, q0, [x0, #112]
    90bc:	stp	q0, q0, [x0, #144]
    90c0:	stp	q0, q0, [x0, #176]
    90c4:	stp	q0, q0, [x0, #208]
    90c8:	stp	q0, q0, [x0, #240]
    90cc:	stp	q0, q0, [x0, #272]
    90d0:	stp	q0, q0, [x0, #304]
    90d4:	stp	q0, q0, [x0, #336]
    90d8:	stp	q0, q0, [x0, #368]
    90dc:	stp	q0, q0, [x0, #400]
    90e0:	stp	q0, q0, [x0, #432]
    90e4:	stp	q0, q0, [x0, #464]
    90e8:	stp	q0, q0, [x0, #496]
    90ec:	str	q0, [x23, #32]!
    90f0:	str	q0, [x0, #528]
    90f4:	str	x23, [x22, #16]!
    90f8:	str	d8, [x0, #24]
    90fc:	str	x9, [x23]
    9100:	ldp	w8, w9, [x0, #24]
    9104:	ldur	w11, [x25, #3]
    9108:	ldur	w12, [x29, #-16]
    910c:	mov	w10, #0xff                  	// #255
    9110:	cmp	w8, w9
    9114:	strb	w10, [x0, #40]
    9118:	str	w11, [x0, #44]
    911c:	stur	w12, [x0, #41]
    9120:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9124:	add	w8, w8, #0x1
    9128:	mov	x21, x0
    912c:	cmp	w8, w9
    9130:	str	w8, [x0, #24]
    9134:	b.cs	b378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x322c>  // b.hs, b.nlast
    9138:	ldr	x9, [x21, #16]
    913c:	mov	w10, #0x4                   	// #4
    9140:	mov	w11, #0x2                   	// #2
    9144:	add	x8, x9, w8, uxtw #4
    9148:	str	x10, [x8]
    914c:	strb	w11, [x8, #8]
    9150:	ldur	w9, [x25, #3]
    9154:	ldur	w10, [x29, #-16]
    9158:	str	w9, [x8, #12]
    915c:	stur	w10, [x8, #9]
    9160:	ldp	w8, w9, [x21, #24]
    9164:	cmp	w8, w9
    9168:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    916c:	add	w8, w8, #0x1
    9170:	mov	x0, x20
    9174:	str	w8, [x21, #24]
    9178:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    917c:	ldp	w8, w9, [x21, #24]
    9180:	mov	x24, x0
    9184:	cmp	w8, w9
    9188:	b.cs	b394 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3248>  // b.hs, b.nlast
    918c:	ldr	x9, [x21, #16]
    9190:	mov	w10, #0x2                   	// #2
    9194:	add	x8, x9, w8, uxtw #4
    9198:	str	x24, [x8]
    919c:	strb	w10, [x8, #8]
    91a0:	ldur	w9, [x25, #3]
    91a4:	ldur	w10, [x29, #-16]
    91a8:	str	w9, [x8, #12]
    91ac:	stur	w10, [x8, #9]
    91b0:	ldp	w8, w9, [x21, #24]
    91b4:	cmp	w8, w9
    91b8:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    91bc:	add	w8, w8, #0x1
    91c0:	cmp	w8, w9
    91c4:	str	w8, [x21, #24]
    91c8:	b.cs	b3b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3264>  // b.hs, b.nlast
    91cc:	ldr	x9, [x21, #16]
    91d0:	mov	w10, #0x8                   	// #8
    91d4:	mov	w11, #0x4                   	// #4
    91d8:	add	x8, x9, w8, uxtw #4
    91dc:	str	x10, [x8]
    91e0:	strb	w11, [x8, #8]
    91e4:	ldur	w9, [x25, #3]
    91e8:	ldur	w10, [x29, #-16]
    91ec:	str	w9, [x8, #12]
    91f0:	stur	w10, [x8, #9]
    91f4:	ldp	w8, w9, [x21, #24]
    91f8:	cmp	w8, w9
    91fc:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9200:	add	w8, w8, #0x1
    9204:	str	w8, [x21, #24]
    9208:	ldr	x0, [x19]
    920c:	stp	x22, x21, [x29, #-128]
    9210:	cbz	x26, 9228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x10dc>
    9214:	ldaxr	w8, [x28]
    9218:	add	w8, w8, #0x1
    921c:	stlxr	w9, w8, [x28]
    9220:	cbnz	w9, 9214 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x10c8>
    9224:	b	9234 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x10e8>
    9228:	ldr	w8, [x28]
    922c:	add	w8, w8, #0x1
    9230:	str	w8, [x28]
    9234:	sub	x2, x29, #0x80
    9238:	mov	w1, #0xb                   	// #11
    923c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9240:	ldur	x23, [x29, #-120]
    9244:	mov	w22, w0
    9248:	cbz	x23, 92c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>
    924c:	add	x8, x23, #0x8
    9250:	cbz	x26, 9270 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1124>
    9254:	ldaxr	w9, [x8]
    9258:	sub	w10, w9, #0x1
    925c:	stlxr	w11, w10, [x8]
    9260:	cbnz	w11, 9254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1108>
    9264:	cmp	w9, #0x1
    9268:	b.eq	9284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1138>  // b.none
    926c:	b	92c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>
    9270:	ldr	w9, [x8]
    9274:	sub	w10, w9, #0x1
    9278:	str	w10, [x8]
    927c:	cmp	w9, #0x1
    9280:	b.ne	92c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>  // b.any
    9284:	mov	x24, x23
    9288:	ldr	x8, [x24], #12
    928c:	mov	x0, x23
    9290:	ldr	x8, [x8, #16]
    9294:	blr	x8
    9298:	cbz	x26, b0f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2fa4>
    929c:	ldaxr	w8, [x24]
    92a0:	sub	w9, w8, #0x1
    92a4:	stlxr	w10, w9, [x24]
    92a8:	cbnz	w10, 929c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1150>
    92ac:	cmp	w8, #0x1
    92b0:	b.ne	92c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>  // b.any
    92b4:	ldr	x8, [x23]
    92b8:	mov	x0, x23
    92bc:	ldr	x8, [x8, #24]
    92c0:	blr	x8
    92c4:	cmp	w22, #0x6
    92c8:	b.ne	b718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x35cc>  // b.any
    92cc:	cbz	x26, 92ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11a0>
    92d0:	ldaxr	w8, [x28]
    92d4:	sub	w9, w8, #0x1
    92d8:	stlxr	w10, w9, [x28]
    92dc:	cbnz	w10, 92d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1184>
    92e0:	cmp	w8, #0x1
    92e4:	b.eq	9300 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11b4>  // b.none
    92e8:	b	9340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11f4>
    92ec:	ldr	w8, [x28]
    92f0:	sub	w9, w8, #0x1
    92f4:	str	w9, [x28]
    92f8:	cmp	w8, #0x1
    92fc:	b.ne	9340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11f4>  // b.any
    9300:	ldr	x8, [x21]
    9304:	mov	x0, x21
    9308:	add	x22, x21, #0xc
    930c:	ldr	x8, [x8, #16]
    9310:	blr	x8
    9314:	cbz	x26, af40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2df4>
    9318:	ldaxr	w8, [x22]
    931c:	sub	w9, w8, #0x1
    9320:	stlxr	w10, w9, [x22]
    9324:	cbnz	w10, 9318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11cc>
    9328:	cmp	w8, #0x1
    932c:	b.ne	9340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11f4>  // b.any
    9330:	ldr	x8, [x21]
    9334:	mov	x0, x21
    9338:	ldr	x8, [x8, #24]
    933c:	blr	x8
    9340:	mov	w0, #0x220                 	// #544
    9344:	bl	0 <_Znwm>
    9348:	movi	v0.2s, #0x1
    934c:	mov	x24, x0
    9350:	add	x9, x27, #0x10
    9354:	str	d0, [x24, #8]!
    9358:	movi	v0.2d, #0x0
    935c:	mov	x10, x0
    9360:	mov	x8, x0
    9364:	mov	w11, #0x2                   	// #2
    9368:	str	x9, [x0]
    936c:	stp	q0, q0, [x0, #48]
    9370:	stp	q0, q0, [x0, #80]
    9374:	stp	q0, q0, [x0, #112]
    9378:	stp	q0, q0, [x0, #144]
    937c:	stp	q0, q0, [x0, #176]
    9380:	stp	q0, q0, [x0, #208]
    9384:	stp	q0, q0, [x0, #240]
    9388:	stp	q0, q0, [x0, #272]
    938c:	stp	q0, q0, [x0, #304]
    9390:	stp	q0, q0, [x0, #336]
    9394:	stp	q0, q0, [x0, #368]
    9398:	stp	q0, q0, [x0, #400]
    939c:	stp	q0, q0, [x0, #432]
    93a0:	stp	q0, q0, [x0, #464]
    93a4:	stp	q0, q0, [x0, #496]
    93a8:	str	q0, [x10, #32]!
    93ac:	str	q0, [x0, #528]
    93b0:	str	x10, [x8, #16]!
    93b4:	str	d8, [x0, #24]
    93b8:	str	x11, [x10]
    93bc:	ldp	w9, w10, [x0, #24]
    93c0:	ldur	w13, [x25, #3]
    93c4:	ldur	w11, [x29, #-16]
    93c8:	mov	w12, #0xff                  	// #255
    93cc:	cmp	w9, w10
    93d0:	strb	w12, [x0, #40]
    93d4:	str	w13, [x0, #44]
    93d8:	stur	w11, [x0, #41]
    93dc:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    93e0:	add	w9, w9, #0x1
    93e4:	str	w9, [x0, #24]
    93e8:	mov	x21, x0
    93ec:	ldr	x0, [x19]
    93f0:	stp	x8, x21, [x29, #-144]
    93f4:	cbz	x26, 940c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x12c0>
    93f8:	ldaxr	w8, [x24]
    93fc:	add	w8, w8, #0x1
    9400:	stlxr	w9, w8, [x24]
    9404:	cbnz	w9, 93f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x12ac>
    9408:	b	9414 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x12c8>
    940c:	mov	w8, #0x2                   	// #2
    9410:	str	w8, [x24]
    9414:	sub	x2, x29, #0x90
    9418:	mov	w1, #0xb                   	// #11
    941c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9420:	ldur	x23, [x29, #-136]
    9424:	mov	w22, w0
    9428:	cbz	x23, 94a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>
    942c:	add	x8, x23, #0x8
    9430:	cbz	x26, 9450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1304>
    9434:	ldaxr	w9, [x8]
    9438:	sub	w10, w9, #0x1
    943c:	stlxr	w11, w10, [x8]
    9440:	cbnz	w11, 9434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x12e8>
    9444:	cmp	w9, #0x1
    9448:	b.eq	9464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1318>  // b.none
    944c:	b	94a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>
    9450:	ldr	w9, [x8]
    9454:	sub	w10, w9, #0x1
    9458:	str	w10, [x8]
    945c:	cmp	w9, #0x1
    9460:	b.ne	94a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>  // b.any
    9464:	mov	x28, x23
    9468:	ldr	x8, [x28], #12
    946c:	mov	x0, x23
    9470:	ldr	x8, [x8, #16]
    9474:	blr	x8
    9478:	cbz	x26, b108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2fbc>
    947c:	ldaxr	w8, [x28]
    9480:	sub	w9, w8, #0x1
    9484:	stlxr	w10, w9, [x28]
    9488:	cbnz	w10, 947c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1330>
    948c:	cmp	w8, #0x1
    9490:	b.ne	94a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>  // b.any
    9494:	ldr	x8, [x23]
    9498:	mov	x0, x23
    949c:	ldr	x8, [x8, #24]
    94a0:	blr	x8
    94a4:	cmp	w22, #0x7
    94a8:	b.ne	b730 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x35e4>  // b.any
    94ac:	cbz	x26, 94cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1380>
    94b0:	ldaxr	w8, [x24]
    94b4:	sub	w9, w8, #0x1
    94b8:	stlxr	w10, w9, [x24]
    94bc:	cbnz	w10, 94b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1364>
    94c0:	cmp	w8, #0x1
    94c4:	b.eq	94e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1394>  // b.none
    94c8:	b	9520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13d4>
    94cc:	ldr	w8, [x24]
    94d0:	sub	w9, w8, #0x1
    94d4:	str	w9, [x24]
    94d8:	cmp	w8, #0x1
    94dc:	b.ne	9520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13d4>  // b.any
    94e0:	ldr	x8, [x21]
    94e4:	mov	x0, x21
    94e8:	add	x22, x21, #0xc
    94ec:	ldr	x8, [x8, #16]
    94f0:	blr	x8
    94f4:	cbz	x26, af58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e0c>
    94f8:	ldaxr	w8, [x22]
    94fc:	sub	w9, w8, #0x1
    9500:	stlxr	w10, w9, [x22]
    9504:	cbnz	w10, 94f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13ac>
    9508:	cmp	w8, #0x1
    950c:	b.ne	9520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13d4>  // b.any
    9510:	ldr	x8, [x21]
    9514:	mov	x0, x21
    9518:	ldr	x8, [x8, #24]
    951c:	blr	x8
    9520:	mov	w0, #0x220                 	// #544
    9524:	bl	0 <_Znwm>
    9528:	movi	v0.2s, #0x1
    952c:	mov	x28, x0
    9530:	add	x8, x27, #0x10
    9534:	str	d0, [x28, #8]!
    9538:	movi	v0.2d, #0x0
    953c:	mov	x23, x0
    9540:	mov	x22, x0
    9544:	mov	w9, #0x14                  	// #20
    9548:	str	x8, [x0]
    954c:	stp	q0, q0, [x0, #48]
    9550:	stp	q0, q0, [x0, #80]
    9554:	stp	q0, q0, [x0, #112]
    9558:	stp	q0, q0, [x0, #144]
    955c:	stp	q0, q0, [x0, #176]
    9560:	stp	q0, q0, [x0, #208]
    9564:	stp	q0, q0, [x0, #240]
    9568:	stp	q0, q0, [x0, #272]
    956c:	stp	q0, q0, [x0, #304]
    9570:	stp	q0, q0, [x0, #336]
    9574:	stp	q0, q0, [x0, #368]
    9578:	stp	q0, q0, [x0, #400]
    957c:	stp	q0, q0, [x0, #432]
    9580:	stp	q0, q0, [x0, #464]
    9584:	stp	q0, q0, [x0, #496]
    9588:	str	q0, [x23, #32]!
    958c:	str	q0, [x0, #528]
    9590:	str	x23, [x22, #16]!
    9594:	str	d8, [x0, #24]
    9598:	str	x9, [x23]
    959c:	ldp	w8, w9, [x0, #24]
    95a0:	ldur	w11, [x25, #3]
    95a4:	ldur	w12, [x29, #-16]
    95a8:	mov	w10, #0xff                  	// #255
    95ac:	cmp	w8, w9
    95b0:	strb	w10, [x0, #40]
    95b4:	str	w11, [x0, #44]
    95b8:	stur	w12, [x0, #41]
    95bc:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    95c0:	add	w8, w8, #0x1
    95c4:	mov	x21, x0
    95c8:	cmp	w8, w9
    95cc:	str	w8, [x0, #24]
    95d0:	b.cs	b3cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3280>  // b.hs, b.nlast
    95d4:	ldr	x9, [x21, #16]
    95d8:	mov	w10, #0x6                   	// #6
    95dc:	mov	w11, #0x4                   	// #4
    95e0:	add	x8, x9, w8, uxtw #4
    95e4:	str	x10, [x8]
    95e8:	strb	w11, [x8, #8]
    95ec:	ldur	w9, [x25, #3]
    95f0:	ldur	w10, [x29, #-16]
    95f4:	str	w9, [x8, #12]
    95f8:	stur	w10, [x8, #9]
    95fc:	ldp	w8, w9, [x21, #24]
    9600:	cmp	w8, w9
    9604:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9608:	add	w8, w8, #0x1
    960c:	mov	x0, x20
    9610:	str	w8, [x21, #24]
    9614:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    9618:	ldp	w8, w9, [x21, #24]
    961c:	mov	x24, x0
    9620:	cmp	w8, w9
    9624:	b.cs	b3e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x329c>  // b.hs, b.nlast
    9628:	ldr	x9, [x21, #16]
    962c:	mov	w10, #0x2                   	// #2
    9630:	add	x8, x9, w8, uxtw #4
    9634:	str	x24, [x8]
    9638:	strb	w10, [x8, #8]
    963c:	ldur	w9, [x25, #3]
    9640:	ldur	w10, [x29, #-16]
    9644:	str	w9, [x8, #12]
    9648:	stur	w10, [x8, #9]
    964c:	ldp	w8, w9, [x21, #24]
    9650:	cmp	w8, w9
    9654:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9658:	add	w8, w8, #0x1
    965c:	cmp	w8, w9
    9660:	str	w8, [x21, #24]
    9664:	b.cs	b404 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x32b8>  // b.hs, b.nlast
    9668:	ldr	x9, [x21, #16]
    966c:	mov	w10, #0x4                   	// #4
    9670:	add	x8, x9, w8, uxtw #4
    9674:	str	x10, [x8]
    9678:	strb	w10, [x8, #8]
    967c:	ldur	w9, [x25, #3]
    9680:	ldur	w10, [x29, #-16]
    9684:	str	w9, [x8, #12]
    9688:	stur	w10, [x8, #9]
    968c:	ldp	w8, w9, [x21, #24]
    9690:	cmp	w8, w9
    9694:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9698:	add	w8, w8, #0x1
    969c:	cmp	w8, w9
    96a0:	str	w8, [x21, #24]
    96a4:	b.cs	b420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x32d4>  // b.hs, b.nlast
    96a8:	ldr	x9, [x21, #16]
    96ac:	mov	w10, #0x1                   	// #1
    96b0:	mov	w11, #0x2                   	// #2
    96b4:	add	x8, x9, w8, uxtw #4
    96b8:	str	x10, [x8]
    96bc:	strb	w11, [x8, #8]
    96c0:	ldur	w9, [x25, #3]
    96c4:	ldur	w10, [x29, #-16]
    96c8:	str	w9, [x8, #12]
    96cc:	stur	w10, [x8, #9]
    96d0:	ldp	w8, w9, [x21, #24]
    96d4:	cmp	w8, w9
    96d8:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    96dc:	add	w8, w8, #0x1
    96e0:	str	w8, [x21, #24]
    96e4:	ldr	x0, [x19]
    96e8:	stp	x22, x21, [sp, #144]
    96ec:	cbz	x26, 9704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x15b8>
    96f0:	ldaxr	w8, [x28]
    96f4:	add	w8, w8, #0x1
    96f8:	stlxr	w9, w8, [x28]
    96fc:	cbnz	w9, 96f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x15a4>
    9700:	b	9710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x15c4>
    9704:	ldr	w8, [x28]
    9708:	add	w8, w8, #0x1
    970c:	str	w8, [x28]
    9710:	add	x2, sp, #0x90
    9714:	mov	w1, #0xc                   	// #12
    9718:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    971c:	ldr	x23, [sp, #152]
    9720:	mov	w22, w0
    9724:	cbz	x23, 97a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>
    9728:	add	x8, x23, #0x8
    972c:	cbz	x26, 974c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1600>
    9730:	ldaxr	w9, [x8]
    9734:	sub	w10, w9, #0x1
    9738:	stlxr	w11, w10, [x8]
    973c:	cbnz	w11, 9730 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x15e4>
    9740:	cmp	w9, #0x1
    9744:	b.eq	9760 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1614>  // b.none
    9748:	b	97a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>
    974c:	ldr	w9, [x8]
    9750:	sub	w10, w9, #0x1
    9754:	str	w10, [x8]
    9758:	cmp	w9, #0x1
    975c:	b.ne	97a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>  // b.any
    9760:	mov	x24, x23
    9764:	ldr	x8, [x24], #12
    9768:	mov	x0, x23
    976c:	ldr	x8, [x8, #16]
    9770:	blr	x8
    9774:	cbz	x26, b120 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2fd4>
    9778:	ldaxr	w8, [x24]
    977c:	sub	w9, w8, #0x1
    9780:	stlxr	w10, w9, [x24]
    9784:	cbnz	w10, 9778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x162c>
    9788:	cmp	w8, #0x1
    978c:	b.ne	97a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>  // b.any
    9790:	ldr	x8, [x23]
    9794:	mov	x0, x23
    9798:	ldr	x8, [x8, #24]
    979c:	blr	x8
    97a0:	cmp	w22, #0x4
    97a4:	b.ne	b748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x35fc>  // b.any
    97a8:	cbz	x26, 97c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x167c>
    97ac:	ldaxr	w8, [x28]
    97b0:	sub	w9, w8, #0x1
    97b4:	stlxr	w10, w9, [x28]
    97b8:	cbnz	w10, 97ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1660>
    97bc:	cmp	w8, #0x1
    97c0:	b.eq	97dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1690>  // b.none
    97c4:	b	981c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16d0>
    97c8:	ldr	w8, [x28]
    97cc:	sub	w9, w8, #0x1
    97d0:	str	w9, [x28]
    97d4:	cmp	w8, #0x1
    97d8:	b.ne	981c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16d0>  // b.any
    97dc:	ldr	x8, [x21]
    97e0:	mov	x0, x21
    97e4:	add	x22, x21, #0xc
    97e8:	ldr	x8, [x8, #16]
    97ec:	blr	x8
    97f0:	cbz	x26, af70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e24>
    97f4:	ldaxr	w8, [x22]
    97f8:	sub	w9, w8, #0x1
    97fc:	stlxr	w10, w9, [x22]
    9800:	cbnz	w10, 97f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16a8>
    9804:	cmp	w8, #0x1
    9808:	b.ne	981c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16d0>  // b.any
    980c:	ldr	x8, [x21]
    9810:	mov	x0, x21
    9814:	ldr	x8, [x8, #24]
    9818:	blr	x8
    981c:	mov	w0, #0x220                 	// #544
    9820:	bl	0 <_Znwm>
    9824:	movi	v0.2s, #0x1
    9828:	mov	x24, x0
    982c:	add	x8, x27, #0x10
    9830:	str	d0, [x24, #8]!
    9834:	movi	v0.2d, #0x0
    9838:	mov	x23, x0
    983c:	mov	x22, x0
    9840:	mov	w9, #0x38                  	// #56
    9844:	str	x8, [x0]
    9848:	stp	q0, q0, [x0, #48]
    984c:	stp	q0, q0, [x0, #80]
    9850:	stp	q0, q0, [x0, #112]
    9854:	stp	q0, q0, [x0, #144]
    9858:	stp	q0, q0, [x0, #176]
    985c:	stp	q0, q0, [x0, #208]
    9860:	stp	q0, q0, [x0, #240]
    9864:	stp	q0, q0, [x0, #272]
    9868:	stp	q0, q0, [x0, #304]
    986c:	stp	q0, q0, [x0, #336]
    9870:	stp	q0, q0, [x0, #368]
    9874:	stp	q0, q0, [x0, #400]
    9878:	stp	q0, q0, [x0, #432]
    987c:	stp	q0, q0, [x0, #464]
    9880:	stp	q0, q0, [x0, #496]
    9884:	str	q0, [x23, #32]!
    9888:	str	q0, [x0, #528]
    988c:	str	x23, [x22, #16]!
    9890:	str	d8, [x0, #24]
    9894:	str	x9, [x23]
    9898:	ldp	w8, w9, [x0, #24]
    989c:	ldur	w11, [x25, #3]
    98a0:	ldur	w12, [x29, #-16]
    98a4:	mov	w10, #0xff                  	// #255
    98a8:	cmp	w8, w9
    98ac:	strb	w10, [x0, #40]
    98b0:	str	w11, [x0, #44]
    98b4:	stur	w12, [x0, #41]
    98b8:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    98bc:	add	w8, w8, #0x1
    98c0:	mov	x21, x0
    98c4:	cmp	w8, w9
    98c8:	str	w8, [x0, #24]
    98cc:	b.cs	b43c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x32f0>  // b.hs, b.nlast
    98d0:	ldr	x9, [x21, #16]
    98d4:	mov	w10, #0x6                   	// #6
    98d8:	mov	w11, #0x4                   	// #4
    98dc:	add	x8, x9, w8, uxtw #4
    98e0:	str	x10, [x8]
    98e4:	strb	w11, [x8, #8]
    98e8:	ldur	w9, [x25, #3]
    98ec:	ldur	w10, [x29, #-16]
    98f0:	str	w9, [x8, #12]
    98f4:	stur	w10, [x8, #9]
    98f8:	ldp	w8, w9, [x21, #24]
    98fc:	cmp	w8, w9
    9900:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9904:	add	w8, w8, #0x1
    9908:	cmp	w8, w9
    990c:	str	w8, [x21, #24]
    9910:	b.cs	b458 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x330c>  // b.hs, b.nlast
    9914:	ldr	x9, [x21, #16]
    9918:	mov	w10, #0x4                   	// #4
    991c:	mov	w11, #0x2                   	// #2
    9920:	add	x8, x9, w8, uxtw #4
    9924:	str	x10, [x8]
    9928:	strb	w11, [x8, #8]
    992c:	ldur	w9, [x25, #3]
    9930:	ldur	w10, [x29, #-16]
    9934:	str	w9, [x8, #12]
    9938:	stur	w10, [x8, #9]
    993c:	ldp	w8, w9, [x21, #24]
    9940:	cmp	w8, w9
    9944:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9948:	add	w8, w8, #0x1
    994c:	str	w8, [x21, #24]
    9950:	ldr	x0, [x19]
    9954:	stp	x22, x21, [sp, #128]
    9958:	cbz	x26, 9970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1824>
    995c:	ldaxr	w8, [x24]
    9960:	add	w8, w8, #0x1
    9964:	stlxr	w9, w8, [x24]
    9968:	cbnz	w9, 995c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1810>
    996c:	b	997c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1830>
    9970:	ldr	w8, [x24]
    9974:	add	w8, w8, #0x1
    9978:	str	w8, [x24]
    997c:	add	x2, sp, #0x80
    9980:	mov	w1, #0xc                   	// #12
    9984:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9988:	ldr	x23, [sp, #136]
    998c:	mov	w22, w0
    9990:	cbz	x23, 9a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>
    9994:	add	x8, x23, #0x8
    9998:	cbz	x26, 99b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x186c>
    999c:	ldaxr	w9, [x8]
    99a0:	sub	w10, w9, #0x1
    99a4:	stlxr	w11, w10, [x8]
    99a8:	cbnz	w11, 999c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1850>
    99ac:	cmp	w9, #0x1
    99b0:	b.eq	99cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1880>  // b.none
    99b4:	b	9a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>
    99b8:	ldr	w9, [x8]
    99bc:	sub	w10, w9, #0x1
    99c0:	str	w10, [x8]
    99c4:	cmp	w9, #0x1
    99c8:	b.ne	9a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>  // b.any
    99cc:	mov	x28, x23
    99d0:	ldr	x8, [x28], #12
    99d4:	mov	x0, x23
    99d8:	ldr	x8, [x8, #16]
    99dc:	blr	x8
    99e0:	cbz	x26, b138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2fec>
    99e4:	ldaxr	w8, [x28]
    99e8:	sub	w9, w8, #0x1
    99ec:	stlxr	w10, w9, [x28]
    99f0:	cbnz	w10, 99e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1898>
    99f4:	cmp	w8, #0x1
    99f8:	b.ne	9a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>  // b.any
    99fc:	ldr	x8, [x23]
    9a00:	mov	x0, x23
    9a04:	ldr	x8, [x8, #24]
    9a08:	blr	x8
    9a0c:	cmp	w22, #0x5
    9a10:	b.ne	b760 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3614>  // b.any
    9a14:	cbz	x26, 9a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18e8>
    9a18:	ldaxr	w8, [x24]
    9a1c:	sub	w9, w8, #0x1
    9a20:	stlxr	w10, w9, [x24]
    9a24:	cbnz	w10, 9a18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18cc>
    9a28:	cmp	w8, #0x1
    9a2c:	b.eq	9a48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18fc>  // b.none
    9a30:	b	9a88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x193c>
    9a34:	ldr	w8, [x24]
    9a38:	sub	w9, w8, #0x1
    9a3c:	str	w9, [x24]
    9a40:	cmp	w8, #0x1
    9a44:	b.ne	9a88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x193c>  // b.any
    9a48:	ldr	x8, [x21]
    9a4c:	mov	x0, x21
    9a50:	add	x22, x21, #0xc
    9a54:	ldr	x8, [x8, #16]
    9a58:	blr	x8
    9a5c:	cbz	x26, af88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e3c>
    9a60:	ldaxr	w8, [x22]
    9a64:	sub	w9, w8, #0x1
    9a68:	stlxr	w10, w9, [x22]
    9a6c:	cbnz	w10, 9a60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1914>
    9a70:	cmp	w8, #0x1
    9a74:	b.ne	9a88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x193c>  // b.any
    9a78:	ldr	x8, [x21]
    9a7c:	mov	x0, x21
    9a80:	ldr	x8, [x8, #24]
    9a84:	blr	x8
    9a88:	mov	w0, #0x220                 	// #544
    9a8c:	bl	0 <_Znwm>
    9a90:	movi	v0.2s, #0x1
    9a94:	mov	x24, x0
    9a98:	add	x8, x27, #0x10
    9a9c:	str	d0, [x24, #8]!
    9aa0:	movi	v0.2d, #0x0
    9aa4:	mov	x23, x0
    9aa8:	mov	x22, x0
    9aac:	mov	w9, #0x38                  	// #56
    9ab0:	str	x8, [x0]
    9ab4:	stp	q0, q0, [x0, #48]
    9ab8:	stp	q0, q0, [x0, #80]
    9abc:	stp	q0, q0, [x0, #112]
    9ac0:	stp	q0, q0, [x0, #144]
    9ac4:	stp	q0, q0, [x0, #176]
    9ac8:	stp	q0, q0, [x0, #208]
    9acc:	stp	q0, q0, [x0, #240]
    9ad0:	stp	q0, q0, [x0, #272]
    9ad4:	stp	q0, q0, [x0, #304]
    9ad8:	stp	q0, q0, [x0, #336]
    9adc:	stp	q0, q0, [x0, #368]
    9ae0:	stp	q0, q0, [x0, #400]
    9ae4:	stp	q0, q0, [x0, #432]
    9ae8:	stp	q0, q0, [x0, #464]
    9aec:	stp	q0, q0, [x0, #496]
    9af0:	str	q0, [x23, #32]!
    9af4:	str	q0, [x0, #528]
    9af8:	str	x23, [x22, #16]!
    9afc:	str	d8, [x0, #24]
    9b00:	str	x9, [x23]
    9b04:	ldp	w8, w9, [x0, #24]
    9b08:	ldur	w11, [x25, #3]
    9b0c:	ldur	w12, [x29, #-16]
    9b10:	mov	w10, #0xff                  	// #255
    9b14:	cmp	w8, w9
    9b18:	strb	w10, [x0, #40]
    9b1c:	str	w11, [x0, #44]
    9b20:	stur	w12, [x0, #41]
    9b24:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9b28:	add	w8, w8, #0x1
    9b2c:	mov	x21, x0
    9b30:	cmp	w8, w9
    9b34:	str	w8, [x0, #24]
    9b38:	b.cs	b474 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3328>  // b.hs, b.nlast
    9b3c:	ldr	x9, [x21, #16]
    9b40:	mov	w10, #0x6                   	// #6
    9b44:	mov	w11, #0x4                   	// #4
    9b48:	add	x8, x9, w8, uxtw #4
    9b4c:	str	x10, [x8]
    9b50:	strb	w11, [x8, #8]
    9b54:	ldur	w9, [x25, #3]
    9b58:	ldur	w10, [x29, #-16]
    9b5c:	str	w9, [x8, #12]
    9b60:	stur	w10, [x8, #9]
    9b64:	ldp	w8, w9, [x21, #24]
    9b68:	cmp	w8, w9
    9b6c:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9b70:	add	w8, w8, #0x1
    9b74:	cmp	w8, w9
    9b78:	str	w8, [x21, #24]
    9b7c:	b.cs	b490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3344>  // b.hs, b.nlast
    9b80:	ldr	x9, [x21, #16]
    9b84:	mov	w10, #0x4                   	// #4
    9b88:	mov	w11, #0x2                   	// #2
    9b8c:	add	x8, x9, w8, uxtw #4
    9b90:	str	x10, [x8]
    9b94:	strb	w11, [x8, #8]
    9b98:	ldur	w9, [x25, #3]
    9b9c:	ldur	w10, [x29, #-16]
    9ba0:	str	w9, [x8, #12]
    9ba4:	stur	w10, [x8, #9]
    9ba8:	ldp	w8, w9, [x21, #24]
    9bac:	cmp	w8, w9
    9bb0:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9bb4:	add	w8, w8, #0x1
    9bb8:	cmp	w8, w9
    9bbc:	str	w8, [x21, #24]
    9bc0:	b.cs	b4ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3360>  // b.hs, b.nlast
    9bc4:	ldr	x9, [x21, #16]
    9bc8:	mov	w10, #0x8                   	// #8
    9bcc:	mov	w11, #0x2                   	// #2
    9bd0:	add	x8, x9, w8, uxtw #4
    9bd4:	str	x10, [x8]
    9bd8:	strb	w11, [x8, #8]
    9bdc:	ldur	w9, [x25, #3]
    9be0:	ldur	w10, [x29, #-16]
    9be4:	str	w9, [x8, #12]
    9be8:	stur	w10, [x8, #9]
    9bec:	ldp	w8, w9, [x21, #24]
    9bf0:	cmp	w8, w9
    9bf4:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9bf8:	add	w8, w8, #0x1
    9bfc:	str	w8, [x21, #24]
    9c00:	ldr	x0, [x19]
    9c04:	stp	x22, x21, [sp, #112]
    9c08:	cbz	x26, 9c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ad4>
    9c0c:	ldaxr	w8, [x24]
    9c10:	add	w8, w8, #0x1
    9c14:	stlxr	w9, w8, [x24]
    9c18:	cbnz	w9, 9c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ac0>
    9c1c:	b	9c2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ae0>
    9c20:	ldr	w8, [x24]
    9c24:	add	w8, w8, #0x1
    9c28:	str	w8, [x24]
    9c2c:	add	x2, sp, #0x70
    9c30:	mov	w1, #0xc                   	// #12
    9c34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9c38:	ldr	x23, [sp, #120]
    9c3c:	mov	w22, w0
    9c40:	cbz	x23, 9cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>
    9c44:	add	x8, x23, #0x8
    9c48:	cbz	x26, 9c68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b1c>
    9c4c:	ldaxr	w9, [x8]
    9c50:	sub	w10, w9, #0x1
    9c54:	stlxr	w11, w10, [x8]
    9c58:	cbnz	w11, 9c4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b00>
    9c5c:	cmp	w9, #0x1
    9c60:	b.eq	9c7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b30>  // b.none
    9c64:	b	9cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>
    9c68:	ldr	w9, [x8]
    9c6c:	sub	w10, w9, #0x1
    9c70:	str	w10, [x8]
    9c74:	cmp	w9, #0x1
    9c78:	b.ne	9cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>  // b.any
    9c7c:	mov	x28, x23
    9c80:	ldr	x8, [x28], #12
    9c84:	mov	x0, x23
    9c88:	ldr	x8, [x8, #16]
    9c8c:	blr	x8
    9c90:	cbz	x26, b150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3004>
    9c94:	ldaxr	w8, [x28]
    9c98:	sub	w9, w8, #0x1
    9c9c:	stlxr	w10, w9, [x28]
    9ca0:	cbnz	w10, 9c94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b48>
    9ca4:	cmp	w8, #0x1
    9ca8:	b.ne	9cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>  // b.any
    9cac:	ldr	x8, [x23]
    9cb0:	mov	x0, x23
    9cb4:	ldr	x8, [x8, #24]
    9cb8:	blr	x8
    9cbc:	cmp	w22, #0x6
    9cc0:	b.ne	b778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x362c>  // b.any
    9cc4:	cbz	x26, 9ce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b98>
    9cc8:	ldaxr	w8, [x24]
    9ccc:	sub	w9, w8, #0x1
    9cd0:	stlxr	w10, w9, [x24]
    9cd4:	cbnz	w10, 9cc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b7c>
    9cd8:	cmp	w8, #0x1
    9cdc:	b.eq	9cf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bac>  // b.none
    9ce0:	b	9d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bec>
    9ce4:	ldr	w8, [x24]
    9ce8:	sub	w9, w8, #0x1
    9cec:	str	w9, [x24]
    9cf0:	cmp	w8, #0x1
    9cf4:	b.ne	9d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bec>  // b.any
    9cf8:	ldr	x8, [x21]
    9cfc:	mov	x0, x21
    9d00:	add	x22, x21, #0xc
    9d04:	ldr	x8, [x8, #16]
    9d08:	blr	x8
    9d0c:	cbz	x26, afa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e54>
    9d10:	ldaxr	w8, [x22]
    9d14:	sub	w9, w8, #0x1
    9d18:	stlxr	w10, w9, [x22]
    9d1c:	cbnz	w10, 9d10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bc4>
    9d20:	cmp	w8, #0x1
    9d24:	b.ne	9d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bec>  // b.any
    9d28:	ldr	x8, [x21]
    9d2c:	mov	x0, x21
    9d30:	ldr	x8, [x8, #24]
    9d34:	blr	x8
    9d38:	mov	w0, #0x220                 	// #544
    9d3c:	bl	0 <_Znwm>
    9d40:	movi	v0.2s, #0x1
    9d44:	mov	x24, x0
    9d48:	add	x8, x27, #0x10
    9d4c:	str	d0, [x24, #8]!
    9d50:	movi	v0.2d, #0x0
    9d54:	mov	x23, x0
    9d58:	mov	x22, x0
    9d5c:	mov	w9, #0x2                   	// #2
    9d60:	str	x8, [x0]
    9d64:	stp	q0, q0, [x0, #48]
    9d68:	stp	q0, q0, [x0, #80]
    9d6c:	stp	q0, q0, [x0, #112]
    9d70:	stp	q0, q0, [x0, #144]
    9d74:	stp	q0, q0, [x0, #176]
    9d78:	stp	q0, q0, [x0, #208]
    9d7c:	stp	q0, q0, [x0, #240]
    9d80:	stp	q0, q0, [x0, #272]
    9d84:	stp	q0, q0, [x0, #304]
    9d88:	stp	q0, q0, [x0, #336]
    9d8c:	stp	q0, q0, [x0, #368]
    9d90:	stp	q0, q0, [x0, #400]
    9d94:	stp	q0, q0, [x0, #432]
    9d98:	stp	q0, q0, [x0, #464]
    9d9c:	stp	q0, q0, [x0, #496]
    9da0:	str	q0, [x23, #32]!
    9da4:	str	q0, [x0, #528]
    9da8:	str	x23, [x22, #16]!
    9dac:	str	d8, [x0, #24]
    9db0:	str	x9, [x23]
    9db4:	ldp	w8, w9, [x0, #24]
    9db8:	ldur	w11, [x25, #3]
    9dbc:	ldur	w12, [x29, #-16]
    9dc0:	mov	w10, #0xff                  	// #255
    9dc4:	cmp	w8, w9
    9dc8:	strb	w10, [x0, #40]
    9dcc:	str	w11, [x0, #44]
    9dd0:	stur	w12, [x0, #41]
    9dd4:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9dd8:	add	w8, w8, #0x1
    9ddc:	mov	x21, x0
    9de0:	cmp	w8, w9
    9de4:	str	w8, [x0, #24]
    9de8:	b.cs	b4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x337c>  // b.hs, b.nlast
    9dec:	ldr	x9, [x21, #16]
    9df0:	mov	w10, #0x6                   	// #6
    9df4:	mov	w11, #0x4                   	// #4
    9df8:	add	x8, x9, w8, uxtw #4
    9dfc:	str	x10, [x8]
    9e00:	strb	w11, [x8, #8]
    9e04:	ldur	w9, [x25, #3]
    9e08:	ldur	w10, [x29, #-16]
    9e0c:	str	w9, [x8, #12]
    9e10:	stur	w10, [x8, #9]
    9e14:	ldp	w8, w9, [x21, #24]
    9e18:	cmp	w8, w9
    9e1c:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9e20:	add	w8, w8, #0x1
    9e24:	cmp	w8, w9
    9e28:	str	w8, [x21, #24]
    9e2c:	b.cs	b4e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3398>  // b.hs, b.nlast
    9e30:	ldr	x9, [x21, #16]
    9e34:	mov	w10, #0x6                   	// #6
    9e38:	mov	w11, #0x4                   	// #4
    9e3c:	add	x8, x9, w8, uxtw #4
    9e40:	str	x10, [x8]
    9e44:	strb	w11, [x8, #8]
    9e48:	ldur	w9, [x25, #3]
    9e4c:	ldur	w10, [x29, #-16]
    9e50:	str	w9, [x8, #12]
    9e54:	stur	w10, [x8, #9]
    9e58:	ldp	w8, w9, [x21, #24]
    9e5c:	cmp	w8, w9
    9e60:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9e64:	add	w8, w8, #0x1
    9e68:	cmp	w8, w9
    9e6c:	str	w8, [x21, #24]
    9e70:	b.cs	b500 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x33b4>  // b.hs, b.nlast
    9e74:	ldr	x9, [x21, #16]
    9e78:	mov	w10, #0x4                   	// #4
    9e7c:	mov	w11, #0x2                   	// #2
    9e80:	add	x8, x9, w8, uxtw #4
    9e84:	str	x10, [x8]
    9e88:	strb	w11, [x8, #8]
    9e8c:	ldur	w9, [x25, #3]
    9e90:	ldur	w10, [x29, #-16]
    9e94:	str	w9, [x8, #12]
    9e98:	stur	w10, [x8, #9]
    9e9c:	ldp	w8, w9, [x21, #24]
    9ea0:	cmp	w8, w9
    9ea4:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9ea8:	add	w8, w8, #0x1
    9eac:	str	w8, [x21, #24]
    9eb0:	ldr	x0, [x19]
    9eb4:	stp	x22, x21, [sp, #96]
    9eb8:	cbz	x26, 9ed0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1d84>
    9ebc:	ldaxr	w8, [x24]
    9ec0:	add	w8, w8, #0x1
    9ec4:	stlxr	w9, w8, [x24]
    9ec8:	cbnz	w9, 9ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1d70>
    9ecc:	b	9edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1d90>
    9ed0:	ldr	w8, [x24]
    9ed4:	add	w8, w8, #0x1
    9ed8:	str	w8, [x24]
    9edc:	add	x2, sp, #0x60
    9ee0:	mov	w1, #0xc                   	// #12
    9ee4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9ee8:	ldr	x23, [sp, #104]
    9eec:	mov	w22, w0
    9ef0:	cbz	x23, 9f6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>
    9ef4:	add	x8, x23, #0x8
    9ef8:	cbz	x26, 9f18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1dcc>
    9efc:	ldaxr	w9, [x8]
    9f00:	sub	w10, w9, #0x1
    9f04:	stlxr	w11, w10, [x8]
    9f08:	cbnz	w11, 9efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1db0>
    9f0c:	cmp	w9, #0x1
    9f10:	b.eq	9f2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1de0>  // b.none
    9f14:	b	9f6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>
    9f18:	ldr	w9, [x8]
    9f1c:	sub	w10, w9, #0x1
    9f20:	str	w10, [x8]
    9f24:	cmp	w9, #0x1
    9f28:	b.ne	9f6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>  // b.any
    9f2c:	mov	x28, x23
    9f30:	ldr	x8, [x28], #12
    9f34:	mov	x0, x23
    9f38:	ldr	x8, [x8, #16]
    9f3c:	blr	x8
    9f40:	cbz	x26, b168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x301c>
    9f44:	ldaxr	w8, [x28]
    9f48:	sub	w9, w8, #0x1
    9f4c:	stlxr	w10, w9, [x28]
    9f50:	cbnz	w10, 9f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1df8>
    9f54:	cmp	w8, #0x1
    9f58:	b.ne	9f6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>  // b.any
    9f5c:	ldr	x8, [x23]
    9f60:	mov	x0, x23
    9f64:	ldr	x8, [x8, #24]
    9f68:	blr	x8
    9f6c:	cmp	w22, #0x7
    9f70:	b.ne	b790 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3644>  // b.any
    9f74:	cbz	x26, 9f94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e48>
    9f78:	ldaxr	w8, [x24]
    9f7c:	sub	w9, w8, #0x1
    9f80:	stlxr	w10, w9, [x24]
    9f84:	cbnz	w10, 9f78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e2c>
    9f88:	cmp	w8, #0x1
    9f8c:	b.eq	9fa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e5c>  // b.none
    9f90:	b	9fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e9c>
    9f94:	ldr	w8, [x24]
    9f98:	sub	w9, w8, #0x1
    9f9c:	str	w9, [x24]
    9fa0:	cmp	w8, #0x1
    9fa4:	b.ne	9fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e9c>  // b.any
    9fa8:	ldr	x8, [x21]
    9fac:	mov	x0, x21
    9fb0:	add	x22, x21, #0xc
    9fb4:	ldr	x8, [x8, #16]
    9fb8:	blr	x8
    9fbc:	cbz	x26, afb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e6c>
    9fc0:	ldaxr	w8, [x22]
    9fc4:	sub	w9, w8, #0x1
    9fc8:	stlxr	w10, w9, [x22]
    9fcc:	cbnz	w10, 9fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e74>
    9fd0:	cmp	w8, #0x1
    9fd4:	b.ne	9fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e9c>  // b.any
    9fd8:	ldr	x8, [x21]
    9fdc:	mov	x0, x21
    9fe0:	ldr	x8, [x8, #24]
    9fe4:	blr	x8
    9fe8:	mov	w0, #0x220                 	// #544
    9fec:	bl	0 <_Znwm>
    9ff0:	movi	v0.2s, #0x1
    9ff4:	mov	x24, x0
    9ff8:	add	x8, x27, #0x10
    9ffc:	str	d0, [x24, #8]!
    a000:	movi	v0.2d, #0x0
    a004:	mov	x23, x0
    a008:	mov	x22, x0
    a00c:	mov	w9, #0x2                   	// #2
    a010:	str	x8, [x0]
    a014:	stp	q0, q0, [x0, #48]
    a018:	stp	q0, q0, [x0, #80]
    a01c:	stp	q0, q0, [x0, #112]
    a020:	stp	q0, q0, [x0, #144]
    a024:	stp	q0, q0, [x0, #176]
    a028:	stp	q0, q0, [x0, #208]
    a02c:	stp	q0, q0, [x0, #240]
    a030:	stp	q0, q0, [x0, #272]
    a034:	stp	q0, q0, [x0, #304]
    a038:	stp	q0, q0, [x0, #336]
    a03c:	stp	q0, q0, [x0, #368]
    a040:	stp	q0, q0, [x0, #400]
    a044:	stp	q0, q0, [x0, #432]
    a048:	stp	q0, q0, [x0, #464]
    a04c:	stp	q0, q0, [x0, #496]
    a050:	str	q0, [x23, #32]!
    a054:	str	q0, [x0, #528]
    a058:	str	x23, [x22, #16]!
    a05c:	str	d8, [x0, #24]
    a060:	str	x9, [x23]
    a064:	ldp	w8, w9, [x0, #24]
    a068:	ldur	w11, [x25, #3]
    a06c:	ldur	w12, [x29, #-16]
    a070:	mov	w10, #0xff                  	// #255
    a074:	cmp	w8, w9
    a078:	strb	w10, [x0, #40]
    a07c:	str	w11, [x0, #44]
    a080:	stur	w12, [x0, #41]
    a084:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a088:	add	w8, w8, #0x1
    a08c:	mov	x21, x0
    a090:	cmp	w8, w9
    a094:	str	w8, [x0, #24]
    a098:	b.cs	b51c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x33d0>  // b.hs, b.nlast
    a09c:	ldr	x9, [x21, #16]
    a0a0:	mov	w10, #0x6                   	// #6
    a0a4:	mov	w11, #0x4                   	// #4
    a0a8:	add	x8, x9, w8, uxtw #4
    a0ac:	str	x10, [x8]
    a0b0:	strb	w11, [x8, #8]
    a0b4:	ldur	w9, [x25, #3]
    a0b8:	ldur	w10, [x29, #-16]
    a0bc:	str	w9, [x8, #12]
    a0c0:	stur	w10, [x8, #9]
    a0c4:	ldp	w8, w9, [x21, #24]
    a0c8:	cmp	w8, w9
    a0cc:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a0d0:	add	w8, w8, #0x1
    a0d4:	cmp	w8, w9
    a0d8:	str	w8, [x21, #24]
    a0dc:	b.cs	b538 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x33ec>  // b.hs, b.nlast
    a0e0:	ldr	x9, [x21, #16]
    a0e4:	mov	w10, #0x6                   	// #6
    a0e8:	mov	w11, #0x4                   	// #4
    a0ec:	add	x8, x9, w8, uxtw #4
    a0f0:	str	x10, [x8]
    a0f4:	strb	w11, [x8, #8]
    a0f8:	ldur	w9, [x25, #3]
    a0fc:	ldur	w10, [x29, #-16]
    a100:	str	w9, [x8, #12]
    a104:	stur	w10, [x8, #9]
    a108:	ldp	w8, w9, [x21, #24]
    a10c:	cmp	w8, w9
    a110:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a114:	add	w8, w8, #0x1
    a118:	cmp	w8, w9
    a11c:	str	w8, [x21, #24]
    a120:	b.cs	b554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3408>  // b.hs, b.nlast
    a124:	ldr	x9, [x21, #16]
    a128:	mov	w10, #0x4                   	// #4
    a12c:	mov	w11, #0x2                   	// #2
    a130:	add	x8, x9, w8, uxtw #4
    a134:	str	x10, [x8]
    a138:	strb	w11, [x8, #8]
    a13c:	ldur	w9, [x25, #3]
    a140:	ldur	w10, [x29, #-16]
    a144:	str	w9, [x8, #12]
    a148:	stur	w10, [x8, #9]
    a14c:	ldp	w8, w9, [x21, #24]
    a150:	cmp	w8, w9
    a154:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a158:	add	w8, w8, #0x1
    a15c:	cmp	w8, w9
    a160:	str	w8, [x21, #24]
    a164:	b.cs	b570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3424>  // b.hs, b.nlast
    a168:	ldr	x9, [x21, #16]
    a16c:	mov	w10, #0x8                   	// #8
    a170:	mov	w11, #0x2                   	// #2
    a174:	add	x8, x9, w8, uxtw #4
    a178:	str	x10, [x8]
    a17c:	strb	w11, [x8, #8]
    a180:	ldur	w9, [x25, #3]
    a184:	ldur	w10, [x29, #-16]
    a188:	str	w9, [x8, #12]
    a18c:	stur	w10, [x8, #9]
    a190:	ldp	w8, w9, [x21, #24]
    a194:	cmp	w8, w9
    a198:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a19c:	add	w8, w8, #0x1
    a1a0:	str	w8, [x21, #24]
    a1a4:	ldr	x0, [x19]
    a1a8:	stp	x22, x21, [sp, #80]
    a1ac:	cbz	x26, a1c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2078>
    a1b0:	ldaxr	w8, [x24]
    a1b4:	add	w8, w8, #0x1
    a1b8:	stlxr	w9, w8, [x24]
    a1bc:	cbnz	w9, a1b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2064>
    a1c0:	b	a1d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2084>
    a1c4:	ldr	w8, [x24]
    a1c8:	add	w8, w8, #0x1
    a1cc:	str	w8, [x24]
    a1d0:	add	x2, sp, #0x50
    a1d4:	mov	w1, #0xc                   	// #12
    a1d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a1dc:	ldr	x23, [sp, #88]
    a1e0:	mov	w22, w0
    a1e4:	cbz	x23, a260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>
    a1e8:	add	x8, x23, #0x8
    a1ec:	cbz	x26, a20c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x20c0>
    a1f0:	ldaxr	w9, [x8]
    a1f4:	sub	w10, w9, #0x1
    a1f8:	stlxr	w11, w10, [x8]
    a1fc:	cbnz	w11, a1f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x20a4>
    a200:	cmp	w9, #0x1
    a204:	b.eq	a220 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x20d4>  // b.none
    a208:	b	a260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>
    a20c:	ldr	w9, [x8]
    a210:	sub	w10, w9, #0x1
    a214:	str	w10, [x8]
    a218:	cmp	w9, #0x1
    a21c:	b.ne	a260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>  // b.any
    a220:	mov	x28, x23
    a224:	ldr	x8, [x28], #12
    a228:	mov	x0, x23
    a22c:	ldr	x8, [x8, #16]
    a230:	blr	x8
    a234:	cbz	x26, b180 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3034>
    a238:	ldaxr	w8, [x28]
    a23c:	sub	w9, w8, #0x1
    a240:	stlxr	w10, w9, [x28]
    a244:	cbnz	w10, a238 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x20ec>
    a248:	cmp	w8, #0x1
    a24c:	b.ne	a260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>  // b.any
    a250:	ldr	x8, [x23]
    a254:	mov	x0, x23
    a258:	ldr	x8, [x8, #24]
    a25c:	blr	x8
    a260:	cmp	w22, #0x8
    a264:	b.ne	b7a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x365c>  // b.any
    a268:	cbz	x26, a288 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x213c>
    a26c:	ldaxr	w8, [x24]
    a270:	sub	w9, w8, #0x1
    a274:	stlxr	w10, w9, [x24]
    a278:	cbnz	w10, a26c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2120>
    a27c:	cmp	w8, #0x1
    a280:	b.eq	a29c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2150>  // b.none
    a284:	b	a2dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2190>
    a288:	ldr	w8, [x24]
    a28c:	sub	w9, w8, #0x1
    a290:	str	w9, [x24]
    a294:	cmp	w8, #0x1
    a298:	b.ne	a2dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2190>  // b.any
    a29c:	ldr	x8, [x21]
    a2a0:	mov	x0, x21
    a2a4:	add	x22, x21, #0xc
    a2a8:	ldr	x8, [x8, #16]
    a2ac:	blr	x8
    a2b0:	cbz	x26, afd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e84>
    a2b4:	ldaxr	w8, [x22]
    a2b8:	sub	w9, w8, #0x1
    a2bc:	stlxr	w10, w9, [x22]
    a2c0:	cbnz	w10, a2b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2168>
    a2c4:	cmp	w8, #0x1
    a2c8:	b.ne	a2dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2190>  // b.any
    a2cc:	ldr	x8, [x21]
    a2d0:	mov	x0, x21
    a2d4:	ldr	x8, [x8, #24]
    a2d8:	blr	x8
    a2dc:	mov	w0, #0x220                 	// #544
    a2e0:	bl	0 <_Znwm>
    a2e4:	movi	v0.2s, #0x1
    a2e8:	mov	x24, x0
    a2ec:	add	x8, x27, #0x10
    a2f0:	str	d0, [x24, #8]!
    a2f4:	movi	v0.2d, #0x0
    a2f8:	mov	x23, x0
    a2fc:	mov	x22, x0
    a300:	mov	w9, #0x3                   	// #3
    a304:	str	x8, [x0]
    a308:	stp	q0, q0, [x0, #48]
    a30c:	stp	q0, q0, [x0, #80]
    a310:	stp	q0, q0, [x0, #112]
    a314:	stp	q0, q0, [x0, #144]
    a318:	stp	q0, q0, [x0, #176]
    a31c:	stp	q0, q0, [x0, #208]
    a320:	stp	q0, q0, [x0, #240]
    a324:	stp	q0, q0, [x0, #272]
    a328:	stp	q0, q0, [x0, #304]
    a32c:	stp	q0, q0, [x0, #336]
    a330:	stp	q0, q0, [x0, #368]
    a334:	stp	q0, q0, [x0, #400]
    a338:	stp	q0, q0, [x0, #432]
    a33c:	stp	q0, q0, [x0, #464]
    a340:	stp	q0, q0, [x0, #496]
    a344:	str	q0, [x23, #32]!
    a348:	str	q0, [x0, #528]
    a34c:	str	x23, [x22, #16]!
    a350:	str	d8, [x0, #24]
    a354:	str	x9, [x23]
    a358:	ldp	w8, w9, [x0, #24]
    a35c:	ldur	w11, [x25, #3]
    a360:	ldur	w12, [x29, #-16]
    a364:	mov	w10, #0xff                  	// #255
    a368:	cmp	w8, w9
    a36c:	strb	w10, [x0, #40]
    a370:	str	w11, [x0, #44]
    a374:	stur	w12, [x0, #41]
    a378:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a37c:	add	w8, w8, #0x1
    a380:	mov	x21, x0
    a384:	cmp	w8, w9
    a388:	str	w8, [x0, #24]
    a38c:	b.cs	b58c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3440>  // b.hs, b.nlast
    a390:	ldr	x9, [x21, #16]
    a394:	mov	w10, #0x6                   	// #6
    a398:	mov	w11, #0x4                   	// #4
    a39c:	add	x8, x9, w8, uxtw #4
    a3a0:	str	x10, [x8]
    a3a4:	strb	w11, [x8, #8]
    a3a8:	ldur	w9, [x25, #3]
    a3ac:	ldur	w10, [x29, #-16]
    a3b0:	str	w9, [x8, #12]
    a3b4:	stur	w10, [x8, #9]
    a3b8:	ldp	w8, w9, [x21, #24]
    a3bc:	cmp	w8, w9
    a3c0:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a3c4:	add	w8, w8, #0x1
    a3c8:	mov	x0, x20
    a3cc:	str	w8, [x21, #24]
    a3d0:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    a3d4:	ldp	w8, w9, [x21, #24]
    a3d8:	mov	x20, x0
    a3dc:	cmp	w8, w9
    a3e0:	b.cs	b5a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x345c>  // b.hs, b.nlast
    a3e4:	ldr	x9, [x21, #16]
    a3e8:	mov	w10, #0x2                   	// #2
    a3ec:	add	x8, x9, w8, uxtw #4
    a3f0:	str	x20, [x8]
    a3f4:	strb	w10, [x8, #8]
    a3f8:	ldur	w9, [x25, #3]
    a3fc:	ldur	w10, [x29, #-16]
    a400:	str	w9, [x8, #12]
    a404:	stur	w10, [x8, #9]
    a408:	ldp	w8, w9, [x21, #24]
    a40c:	cmp	w8, w9
    a410:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a414:	add	w8, w8, #0x1
    a418:	cmp	w8, w9
    a41c:	str	w8, [x21, #24]
    a420:	b.cs	b5c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3478>  // b.hs, b.nlast
    a424:	ldr	x9, [x21, #16]
    a428:	mov	w10, #0x4                   	// #4
    a42c:	mov	w11, #0x2                   	// #2
    a430:	add	x8, x9, w8, uxtw #4
    a434:	str	x10, [x8]
    a438:	strb	w11, [x8, #8]
    a43c:	ldur	w9, [x25, #3]
    a440:	ldur	w10, [x29, #-16]
    a444:	str	w9, [x8, #12]
    a448:	stur	w10, [x8, #9]
    a44c:	ldp	w8, w9, [x21, #24]
    a450:	cmp	w8, w9
    a454:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a458:	add	w8, w8, #0x1
    a45c:	str	w8, [x21, #24]
    a460:	ldr	x0, [x19]
    a464:	stp	x22, x21, [sp, #64]
    a468:	cbz	x26, a480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2334>
    a46c:	ldaxr	w8, [x24]
    a470:	add	w8, w8, #0x1
    a474:	stlxr	w9, w8, [x24]
    a478:	cbnz	w9, a46c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2320>
    a47c:	b	a48c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2340>
    a480:	ldr	w8, [x24]
    a484:	add	w8, w8, #0x1
    a488:	str	w8, [x24]
    a48c:	add	x2, sp, #0x40
    a490:	mov	w1, #0xc                   	// #12
    a494:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a498:	ldr	x22, [sp, #72]
    a49c:	mov	w20, w0
    a4a0:	cbz	x22, a51c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>
    a4a4:	add	x8, x22, #0x8
    a4a8:	cbz	x26, a4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x237c>
    a4ac:	ldaxr	w9, [x8]
    a4b0:	sub	w10, w9, #0x1
    a4b4:	stlxr	w11, w10, [x8]
    a4b8:	cbnz	w11, a4ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2360>
    a4bc:	cmp	w9, #0x1
    a4c0:	b.eq	a4dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2390>  // b.none
    a4c4:	b	a51c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>
    a4c8:	ldr	w9, [x8]
    a4cc:	sub	w10, w9, #0x1
    a4d0:	str	w10, [x8]
    a4d4:	cmp	w9, #0x1
    a4d8:	b.ne	a51c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>  // b.any
    a4dc:	mov	x23, x22
    a4e0:	ldr	x8, [x23], #12
    a4e4:	mov	x0, x22
    a4e8:	ldr	x8, [x8, #16]
    a4ec:	blr	x8
    a4f0:	cbz	x26, b198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x304c>
    a4f4:	ldaxr	w8, [x23]
    a4f8:	sub	w9, w8, #0x1
    a4fc:	stlxr	w10, w9, [x23]
    a500:	cbnz	w10, a4f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23a8>
    a504:	cmp	w8, #0x1
    a508:	b.ne	a51c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>  // b.any
    a50c:	ldr	x8, [x22]
    a510:	mov	x0, x22
    a514:	ldr	x8, [x8, #24]
    a518:	blr	x8
    a51c:	cmp	w20, #0x9
    a520:	b.ne	b7c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3674>  // b.any
    a524:	cbz	x26, a544 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23f8>
    a528:	ldaxr	w8, [x24]
    a52c:	sub	w9, w8, #0x1
    a530:	stlxr	w10, w9, [x24]
    a534:	cbnz	w10, a528 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23dc>
    a538:	cmp	w8, #0x1
    a53c:	b.eq	a558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x240c>  // b.none
    a540:	b	a598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x244c>
    a544:	ldr	w8, [x24]
    a548:	sub	w9, w8, #0x1
    a54c:	str	w9, [x24]
    a550:	cmp	w8, #0x1
    a554:	b.ne	a598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x244c>  // b.any
    a558:	ldr	x8, [x21]
    a55c:	mov	x0, x21
    a560:	add	x20, x21, #0xc
    a564:	ldr	x8, [x8, #16]
    a568:	blr	x8
    a56c:	cbz	x26, afe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e9c>
    a570:	ldaxr	w8, [x20]
    a574:	sub	w9, w8, #0x1
    a578:	stlxr	w10, w9, [x20]
    a57c:	cbnz	w10, a570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2424>
    a580:	cmp	w8, #0x1
    a584:	b.ne	a598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x244c>  // b.any
    a588:	ldr	x8, [x21]
    a58c:	mov	x0, x21
    a590:	ldr	x8, [x8, #24]
    a594:	blr	x8
    a598:	mov	w0, #0x220                 	// #544
    a59c:	bl	0 <_Znwm>
    a5a0:	movi	v0.2s, #0x1
    a5a4:	mov	x23, x0
    a5a8:	add	x9, x27, #0x10
    a5ac:	str	d0, [x23, #8]!
    a5b0:	movi	v0.2d, #0x0
    a5b4:	mov	x10, x0
    a5b8:	mov	x8, x0
    a5bc:	mov	w11, #0xa                   	// #10
    a5c0:	str	x9, [x0]
    a5c4:	stp	q0, q0, [x0, #48]
    a5c8:	stp	q0, q0, [x0, #80]
    a5cc:	stp	q0, q0, [x0, #112]
    a5d0:	stp	q0, q0, [x0, #144]
    a5d4:	stp	q0, q0, [x0, #176]
    a5d8:	stp	q0, q0, [x0, #208]
    a5dc:	stp	q0, q0, [x0, #240]
    a5e0:	stp	q0, q0, [x0, #272]
    a5e4:	stp	q0, q0, [x0, #304]
    a5e8:	stp	q0, q0, [x0, #336]
    a5ec:	stp	q0, q0, [x0, #368]
    a5f0:	stp	q0, q0, [x0, #400]
    a5f4:	stp	q0, q0, [x0, #432]
    a5f8:	stp	q0, q0, [x0, #464]
    a5fc:	stp	q0, q0, [x0, #496]
    a600:	str	q0, [x10, #32]!
    a604:	str	q0, [x0, #528]
    a608:	str	x10, [x8, #16]!
    a60c:	str	d8, [x0, #24]
    a610:	str	x11, [x10]
    a614:	ldp	w9, w10, [x0, #24]
    a618:	ldur	w13, [x25, #3]
    a61c:	ldur	w11, [x29, #-16]
    a620:	mov	w12, #0xff                  	// #255
    a624:	cmp	w9, w10
    a628:	strb	w12, [x0, #40]
    a62c:	str	w13, [x0, #44]
    a630:	stur	w11, [x0, #41]
    a634:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a638:	add	w9, w9, #0x1
    a63c:	str	w9, [x0, #24]
    a640:	mov	x20, x0
    a644:	ldr	x0, [x19]
    a648:	stp	x8, x20, [sp, #48]
    a64c:	cbz	x26, a664 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2518>
    a650:	ldaxr	w8, [x23]
    a654:	add	w8, w8, #0x1
    a658:	stlxr	w9, w8, [x23]
    a65c:	cbnz	w9, a650 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2504>
    a660:	b	a66c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2520>
    a664:	mov	w8, #0x2                   	// #2
    a668:	str	w8, [x23]
    a66c:	add	x2, sp, #0x30
    a670:	mov	w1, #0xc                   	// #12
    a674:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a678:	ldr	x22, [sp, #56]
    a67c:	mov	w21, w0
    a680:	cbz	x22, a6fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>
    a684:	add	x8, x22, #0x8
    a688:	cbz	x26, a6a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x255c>
    a68c:	ldaxr	w9, [x8]
    a690:	sub	w10, w9, #0x1
    a694:	stlxr	w11, w10, [x8]
    a698:	cbnz	w11, a68c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2540>
    a69c:	cmp	w9, #0x1
    a6a0:	b.eq	a6bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2570>  // b.none
    a6a4:	b	a6fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>
    a6a8:	ldr	w9, [x8]
    a6ac:	sub	w10, w9, #0x1
    a6b0:	str	w10, [x8]
    a6b4:	cmp	w9, #0x1
    a6b8:	b.ne	a6fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>  // b.any
    a6bc:	mov	x24, x22
    a6c0:	ldr	x8, [x24], #12
    a6c4:	mov	x0, x22
    a6c8:	ldr	x8, [x8, #16]
    a6cc:	blr	x8
    a6d0:	cbz	x26, b1b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3064>
    a6d4:	ldaxr	w8, [x24]
    a6d8:	sub	w9, w8, #0x1
    a6dc:	stlxr	w10, w9, [x24]
    a6e0:	cbnz	w10, a6d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2588>
    a6e4:	cmp	w8, #0x1
    a6e8:	b.ne	a6fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>  // b.any
    a6ec:	ldr	x8, [x22]
    a6f0:	mov	x0, x22
    a6f4:	ldr	x8, [x8, #24]
    a6f8:	blr	x8
    a6fc:	cmp	w21, #0xa
    a700:	b.ne	b7d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x368c>  // b.any
    a704:	cbz	x26, a724 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25d8>
    a708:	ldaxr	w8, [x23]
    a70c:	sub	w9, w8, #0x1
    a710:	stlxr	w10, w9, [x23]
    a714:	cbnz	w10, a708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25bc>
    a718:	cmp	w8, #0x1
    a71c:	b.eq	a738 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25ec>  // b.none
    a720:	b	a778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x262c>
    a724:	ldr	w8, [x23]
    a728:	sub	w9, w8, #0x1
    a72c:	str	w9, [x23]
    a730:	cmp	w8, #0x1
    a734:	b.ne	a778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x262c>  // b.any
    a738:	ldr	x8, [x20]
    a73c:	mov	x0, x20
    a740:	add	x21, x20, #0xc
    a744:	ldr	x8, [x8, #16]
    a748:	blr	x8
    a74c:	cbz	x26, b000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2eb4>
    a750:	ldaxr	w8, [x21]
    a754:	sub	w9, w8, #0x1
    a758:	stlxr	w10, w9, [x21]
    a75c:	cbnz	w10, a750 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2604>
    a760:	cmp	w8, #0x1
    a764:	b.ne	a778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x262c>  // b.any
    a768:	ldr	x8, [x20]
    a76c:	mov	x0, x20
    a770:	ldr	x8, [x8, #24]
    a774:	blr	x8
    a778:	mov	w0, #0x220                 	// #544
    a77c:	bl	0 <_Znwm>
    a780:	movi	v0.2s, #0x1
    a784:	mov	x23, x0
    a788:	add	x8, x27, #0x10
    a78c:	str	d0, [x23, #8]!
    a790:	movi	v0.2d, #0x0
    a794:	mov	x1, x0
    a798:	mov	x21, x0
    a79c:	mov	w9, #0xa                   	// #10
    a7a0:	str	x8, [x0]
    a7a4:	stp	q0, q0, [x0, #48]
    a7a8:	stp	q0, q0, [x0, #80]
    a7ac:	stp	q0, q0, [x0, #112]
    a7b0:	stp	q0, q0, [x0, #144]
    a7b4:	stp	q0, q0, [x0, #176]
    a7b8:	stp	q0, q0, [x0, #208]
    a7bc:	stp	q0, q0, [x0, #240]
    a7c0:	stp	q0, q0, [x0, #272]
    a7c4:	stp	q0, q0, [x0, #304]
    a7c8:	stp	q0, q0, [x0, #336]
    a7cc:	stp	q0, q0, [x0, #368]
    a7d0:	stp	q0, q0, [x0, #400]
    a7d4:	stp	q0, q0, [x0, #432]
    a7d8:	stp	q0, q0, [x0, #464]
    a7dc:	stp	q0, q0, [x0, #496]
    a7e0:	str	q0, [x1, #32]!
    a7e4:	str	q0, [x0, #528]
    a7e8:	str	x1, [x21, #16]!
    a7ec:	str	d8, [x0, #24]
    a7f0:	str	x9, [x1]
    a7f4:	ldp	w8, w9, [x0, #24]
    a7f8:	ldur	w11, [x25, #3]
    a7fc:	ldur	w12, [x29, #-16]
    a800:	mov	w10, #0xff                  	// #255
    a804:	cmp	w8, w9
    a808:	strb	w10, [x0, #40]
    a80c:	str	w11, [x0, #44]
    a810:	stur	w12, [x0, #41]
    a814:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a818:	add	w8, w8, #0x1
    a81c:	mov	x20, x0
    a820:	cmp	w8, w9
    a824:	str	w8, [x0, #24]
    a828:	b.cs	b5e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3494>  // b.hs, b.nlast
    a82c:	ldr	x9, [x20, #16]
    a830:	mov	w10, #0x6                   	// #6
    a834:	mov	w11, #0x4                   	// #4
    a838:	add	x8, x9, w8, uxtw #4
    a83c:	str	x10, [x8]
    a840:	strb	w11, [x8, #8]
    a844:	ldur	w9, [x25, #3]
    a848:	ldur	w10, [x29, #-16]
    a84c:	str	w9, [x8, #12]
    a850:	stur	w10, [x8, #9]
    a854:	ldp	w8, w9, [x20, #24]
    a858:	cmp	w8, w9
    a85c:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a860:	add	w8, w8, #0x1
    a864:	str	w8, [x20, #24]
    a868:	ldr	x0, [x19]
    a86c:	stp	x21, x20, [sp, #32]
    a870:	cbz	x26, a888 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x273c>
    a874:	ldaxr	w8, [x23]
    a878:	add	w8, w8, #0x1
    a87c:	stlxr	w9, w8, [x23]
    a880:	cbnz	w9, a874 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2728>
    a884:	b	a894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2748>
    a888:	ldr	w8, [x23]
    a88c:	add	w8, w8, #0x1
    a890:	str	w8, [x23]
    a894:	add	x2, sp, #0x20
    a898:	mov	w1, #0xc                   	// #12
    a89c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a8a0:	ldr	x22, [sp, #40]
    a8a4:	mov	w21, w0
    a8a8:	cbz	x22, a924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>
    a8ac:	add	x8, x22, #0x8
    a8b0:	cbz	x26, a8d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2784>
    a8b4:	ldaxr	w9, [x8]
    a8b8:	sub	w10, w9, #0x1
    a8bc:	stlxr	w11, w10, [x8]
    a8c0:	cbnz	w11, a8b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2768>
    a8c4:	cmp	w9, #0x1
    a8c8:	b.eq	a8e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2798>  // b.none
    a8cc:	b	a924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>
    a8d0:	ldr	w9, [x8]
    a8d4:	sub	w10, w9, #0x1
    a8d8:	str	w10, [x8]
    a8dc:	cmp	w9, #0x1
    a8e0:	b.ne	a924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>  // b.any
    a8e4:	mov	x24, x22
    a8e8:	ldr	x8, [x24], #12
    a8ec:	mov	x0, x22
    a8f0:	ldr	x8, [x8, #16]
    a8f4:	blr	x8
    a8f8:	cbz	x26, b1c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x307c>
    a8fc:	ldaxr	w8, [x24]
    a900:	sub	w9, w8, #0x1
    a904:	stlxr	w10, w9, [x24]
    a908:	cbnz	w10, a8fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27b0>
    a90c:	cmp	w8, #0x1
    a910:	b.ne	a924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>  // b.any
    a914:	ldr	x8, [x22]
    a918:	mov	x0, x22
    a91c:	ldr	x8, [x8, #24]
    a920:	blr	x8
    a924:	cmp	w21, #0xb
    a928:	b.ne	b7f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x36a4>  // b.any
    a92c:	cbz	x26, a94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2800>
    a930:	ldaxr	w8, [x23]
    a934:	sub	w9, w8, #0x1
    a938:	stlxr	w10, w9, [x23]
    a93c:	cbnz	w10, a930 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27e4>
    a940:	cmp	w8, #0x1
    a944:	b.eq	a960 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2814>  // b.none
    a948:	b	a9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2854>
    a94c:	ldr	w8, [x23]
    a950:	sub	w9, w8, #0x1
    a954:	str	w9, [x23]
    a958:	cmp	w8, #0x1
    a95c:	b.ne	a9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2854>  // b.any
    a960:	ldr	x8, [x20]
    a964:	mov	x0, x20
    a968:	add	x21, x20, #0xc
    a96c:	ldr	x8, [x8, #16]
    a970:	blr	x8
    a974:	cbz	x26, b018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ecc>
    a978:	ldaxr	w8, [x21]
    a97c:	sub	w9, w8, #0x1
    a980:	stlxr	w10, w9, [x21]
    a984:	cbnz	w10, a978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x282c>
    a988:	cmp	w8, #0x1
    a98c:	b.ne	a9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2854>  // b.any
    a990:	ldr	x8, [x20]
    a994:	mov	x0, x20
    a998:	ldr	x8, [x8, #24]
    a99c:	blr	x8
    a9a0:	mov	w0, #0x220                 	// #544
    a9a4:	bl	0 <_Znwm>
    a9a8:	movi	v0.2s, #0x1
    a9ac:	mov	x23, x0
    a9b0:	add	x9, x27, #0x10
    a9b4:	str	d0, [x23, #8]!
    a9b8:	movi	v0.2d, #0x0
    a9bc:	mov	x10, x0
    a9c0:	mov	x8, x0
    a9c4:	mov	w11, #0xf                   	// #15
    a9c8:	str	x9, [x0]
    a9cc:	stp	q0, q0, [x0, #48]
    a9d0:	stp	q0, q0, [x0, #80]
    a9d4:	stp	q0, q0, [x0, #112]
    a9d8:	stp	q0, q0, [x0, #144]
    a9dc:	stp	q0, q0, [x0, #176]
    a9e0:	stp	q0, q0, [x0, #208]
    a9e4:	stp	q0, q0, [x0, #240]
    a9e8:	stp	q0, q0, [x0, #272]
    a9ec:	stp	q0, q0, [x0, #304]
    a9f0:	stp	q0, q0, [x0, #336]
    a9f4:	stp	q0, q0, [x0, #368]
    a9f8:	stp	q0, q0, [x0, #400]
    a9fc:	stp	q0, q0, [x0, #432]
    aa00:	stp	q0, q0, [x0, #464]
    aa04:	stp	q0, q0, [x0, #496]
    aa08:	str	q0, [x10, #32]!
    aa0c:	str	q0, [x0, #528]
    aa10:	str	x10, [x8, #16]!
    aa14:	str	d8, [x0, #24]
    aa18:	str	x11, [x10]
    aa1c:	ldp	w9, w10, [x0, #24]
    aa20:	ldur	w13, [x25, #3]
    aa24:	ldur	w11, [x29, #-16]
    aa28:	mov	w12, #0xff                  	// #255
    aa2c:	cmp	w9, w10
    aa30:	strb	w12, [x0, #40]
    aa34:	str	w13, [x0, #44]
    aa38:	stur	w11, [x0, #41]
    aa3c:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    aa40:	add	w9, w9, #0x1
    aa44:	str	w9, [x0, #24]
    aa48:	mov	x20, x0
    aa4c:	ldr	x0, [x19]
    aa50:	stp	x8, x20, [sp, #16]
    aa54:	cbz	x26, aa6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2920>
    aa58:	ldaxr	w8, [x23]
    aa5c:	add	w8, w8, #0x1
    aa60:	stlxr	w9, w8, [x23]
    aa64:	cbnz	w9, aa58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x290c>
    aa68:	b	aa74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2928>
    aa6c:	mov	w8, #0x2                   	// #2
    aa70:	str	w8, [x23]
    aa74:	add	x2, sp, #0x10
    aa78:	mov	w1, #0xc                   	// #12
    aa7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    aa80:	ldr	x22, [sp, #24]
    aa84:	mov	w21, w0
    aa88:	cbz	x22, ab04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>
    aa8c:	add	x8, x22, #0x8
    aa90:	cbz	x26, aab0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2964>
    aa94:	ldaxr	w9, [x8]
    aa98:	sub	w10, w9, #0x1
    aa9c:	stlxr	w11, w10, [x8]
    aaa0:	cbnz	w11, aa94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2948>
    aaa4:	cmp	w9, #0x1
    aaa8:	b.eq	aac4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2978>  // b.none
    aaac:	b	ab04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>
    aab0:	ldr	w9, [x8]
    aab4:	sub	w10, w9, #0x1
    aab8:	str	w10, [x8]
    aabc:	cmp	w9, #0x1
    aac0:	b.ne	ab04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>  // b.any
    aac4:	mov	x24, x22
    aac8:	ldr	x8, [x24], #12
    aacc:	mov	x0, x22
    aad0:	ldr	x8, [x8, #16]
    aad4:	blr	x8
    aad8:	cbz	x26, b1e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3094>
    aadc:	ldaxr	w8, [x24]
    aae0:	sub	w9, w8, #0x1
    aae4:	stlxr	w10, w9, [x24]
    aae8:	cbnz	w10, aadc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2990>
    aaec:	cmp	w8, #0x1
    aaf0:	b.ne	ab04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>  // b.any
    aaf4:	ldr	x8, [x22]
    aaf8:	mov	x0, x22
    aafc:	ldr	x8, [x8, #24]
    ab00:	blr	x8
    ab04:	cmp	w21, #0xc
    ab08:	b.ne	b808 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x36bc>  // b.any
    ab0c:	cbz	x26, ab2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29e0>
    ab10:	ldaxr	w8, [x23]
    ab14:	sub	w9, w8, #0x1
    ab18:	stlxr	w10, w9, [x23]
    ab1c:	cbnz	w10, ab10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29c4>
    ab20:	cmp	w8, #0x1
    ab24:	b.eq	ab40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29f4>  // b.none
    ab28:	b	ab80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a34>
    ab2c:	ldr	w8, [x23]
    ab30:	sub	w9, w8, #0x1
    ab34:	str	w9, [x23]
    ab38:	cmp	w8, #0x1
    ab3c:	b.ne	ab80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a34>  // b.any
    ab40:	ldr	x8, [x20]
    ab44:	mov	x0, x20
    ab48:	add	x21, x20, #0xc
    ab4c:	ldr	x8, [x8, #16]
    ab50:	blr	x8
    ab54:	cbz	x26, b030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ee4>
    ab58:	ldaxr	w8, [x21]
    ab5c:	sub	w9, w8, #0x1
    ab60:	stlxr	w10, w9, [x21]
    ab64:	cbnz	w10, ab58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a0c>
    ab68:	cmp	w8, #0x1
    ab6c:	b.ne	ab80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a34>  // b.any
    ab70:	ldr	x8, [x20]
    ab74:	mov	x0, x20
    ab78:	ldr	x8, [x8, #24]
    ab7c:	blr	x8
    ab80:	mov	w0, #0x220                 	// #544
    ab84:	bl	0 <_Znwm>
    ab88:	movi	v0.2s, #0x1
    ab8c:	mov	x23, x0
    ab90:	add	x8, x27, #0x10
    ab94:	str	d0, [x23, #8]!
    ab98:	movi	v0.2d, #0x0
    ab9c:	mov	x22, x0
    aba0:	mov	x21, x0
    aba4:	mov	w9, #0x2b                  	// #43
    aba8:	str	x8, [x0]
    abac:	stp	q0, q0, [x0, #48]
    abb0:	stp	q0, q0, [x0, #80]
    abb4:	stp	q0, q0, [x0, #112]
    abb8:	stp	q0, q0, [x0, #144]
    abbc:	stp	q0, q0, [x0, #176]
    abc0:	stp	q0, q0, [x0, #208]
    abc4:	stp	q0, q0, [x0, #240]
    abc8:	stp	q0, q0, [x0, #272]
    abcc:	stp	q0, q0, [x0, #304]
    abd0:	stp	q0, q0, [x0, #336]
    abd4:	stp	q0, q0, [x0, #368]
    abd8:	stp	q0, q0, [x0, #400]
    abdc:	stp	q0, q0, [x0, #432]
    abe0:	stp	q0, q0, [x0, #464]
    abe4:	stp	q0, q0, [x0, #496]
    abe8:	str	q0, [x22, #32]!
    abec:	str	q0, [x0, #528]
    abf0:	str	x22, [x21, #16]!
    abf4:	str	d8, [x0, #24]
    abf8:	str	x9, [x22]
    abfc:	ldp	w8, w9, [x0, #24]
    ac00:	ldur	w11, [x25, #3]
    ac04:	ldur	w12, [x29, #-16]
    ac08:	mov	w10, #0xff                  	// #255
    ac0c:	cmp	w8, w9
    ac10:	strb	w10, [x0, #40]
    ac14:	str	w11, [x0, #44]
    ac18:	stur	w12, [x0, #41]
    ac1c:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    ac20:	add	w8, w8, #0x1
    ac24:	mov	x20, x0
    ac28:	cmp	w8, w9
    ac2c:	str	w8, [x0, #24]
    ac30:	b.cs	b5f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x34ac>  // b.hs, b.nlast
    ac34:	ldr	x9, [x20, #16]
    ac38:	mov	w10, #0x1                   	// #1
    ac3c:	mov	w11, #0x2                   	// #2
    ac40:	add	x8, x9, w8, uxtw #4
    ac44:	str	x10, [x8]
    ac48:	strb	w11, [x8, #8]
    ac4c:	ldur	w9, [x25, #3]
    ac50:	ldur	w10, [x29, #-16]
    ac54:	str	w9, [x8, #12]
    ac58:	stur	w10, [x8, #9]
    ac5c:	ldp	w8, w9, [x20, #24]
    ac60:	cmp	w8, w9
    ac64:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    ac68:	add	w8, w8, #0x1
    ac6c:	str	w8, [x20, #24]
    ac70:	ldp	x11, x10, [x19, #80]
    ac74:	mov	w12, #0x20                  	// #32
    ac78:	cmp	w8, w9
    ac7c:	sub	x10, x10, x11
    ac80:	lsr	x10, x10, #3
    ac84:	clz	w10, w10
    ac88:	sub	w24, w12, w10
    ac8c:	b.cs	b614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x34c8>  // b.hs, b.nlast
    ac90:	ldr	x9, [x20, #16]
    ac94:	mov	w10, #0x2                   	// #2
    ac98:	add	x8, x9, w8, uxtw #4
    ac9c:	str	x24, [x8]
    aca0:	strb	w10, [x8, #8]
    aca4:	ldur	w9, [x25, #3]
    aca8:	ldur	w10, [x29, #-16]
    acac:	str	w9, [x8, #12]
    acb0:	stur	w10, [x8, #9]
    acb4:	ldp	w8, w9, [x20, #24]
    acb8:	cmp	w8, w9
    acbc:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    acc0:	add	w8, w8, #0x1
    acc4:	cmp	w8, w9
    acc8:	str	w8, [x20, #24]
    accc:	b.cs	b630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x34e4>  // b.hs, b.nlast
    acd0:	ldr	x9, [x20, #16]
    acd4:	mov	w10, #0x6                   	// #6
    acd8:	add	x8, x9, w8, uxtw #4
    acdc:	str	xzr, [x8]
    ace0:	strb	w10, [x8, #8]
    ace4:	ldur	w9, [x25, #3]
    ace8:	ldur	w10, [x29, #-16]
    acec:	str	w9, [x8, #12]
    acf0:	stur	w10, [x8, #9]
    acf4:	ldp	w8, w9, [x20, #24]
    acf8:	cmp	w8, w9
    acfc:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    ad00:	add	w8, w8, #0x1
    ad04:	cmp	w8, w9
    ad08:	str	w8, [x20, #24]
    ad0c:	b.cs	b64c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3500>  // b.hs, b.nlast
    ad10:	ldr	x9, [x20, #16]
    ad14:	mov	w10, #0x6                   	// #6
    ad18:	mov	w11, #0x4                   	// #4
    ad1c:	add	x8, x9, w8, uxtw #4
    ad20:	str	x10, [x8]
    ad24:	strb	w11, [x8, #8]
    ad28:	ldur	w9, [x25, #3]
    ad2c:	ldur	w10, [x29, #-16]
    ad30:	str	w9, [x8, #12]
    ad34:	stur	w10, [x8, #9]
    ad38:	ldp	w8, w9, [x20, #24]
    ad3c:	cmp	w8, w9
    ad40:	b.cs	b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    ad44:	add	w8, w8, #0x1
    ad48:	str	w8, [x20, #24]
    ad4c:	ldr	x0, [x19]
    ad50:	stp	x21, x20, [sp]
    ad54:	cbz	x26, ad6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c20>
    ad58:	ldaxr	w8, [x23]
    ad5c:	add	w8, w8, #0x1
    ad60:	stlxr	w9, w8, [x23]
    ad64:	cbnz	w9, ad58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c0c>
    ad68:	b	ad78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c2c>
    ad6c:	ldr	w8, [x23]
    ad70:	add	w8, w8, #0x1
    ad74:	str	w8, [x23]
    ad78:	mov	x2, sp
    ad7c:	mov	w1, #0xc                   	// #12
    ad80:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ad84:	ldr	x22, [sp, #8]
    ad88:	mov	w21, w0
    ad8c:	cbz	x22, ae08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>
    ad90:	add	x8, x22, #0x8
    ad94:	cbz	x26, adb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c68>
    ad98:	ldaxr	w9, [x8]
    ad9c:	sub	w10, w9, #0x1
    ada0:	stlxr	w11, w10, [x8]
    ada4:	cbnz	w11, ad98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c4c>
    ada8:	cmp	w9, #0x1
    adac:	b.eq	adc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c7c>  // b.none
    adb0:	b	ae08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>
    adb4:	ldr	w9, [x8]
    adb8:	sub	w10, w9, #0x1
    adbc:	str	w10, [x8]
    adc0:	cmp	w9, #0x1
    adc4:	b.ne	ae08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>  // b.any
    adc8:	mov	x24, x22
    adcc:	ldr	x8, [x24], #12
    add0:	mov	x0, x22
    add4:	ldr	x8, [x8, #16]
    add8:	blr	x8
    addc:	cbz	x26, b1f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x30ac>
    ade0:	ldaxr	w8, [x24]
    ade4:	sub	w9, w8, #0x1
    ade8:	stlxr	w10, w9, [x24]
    adec:	cbnz	w10, ade0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c94>
    adf0:	cmp	w8, #0x1
    adf4:	b.ne	ae08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>  // b.any
    adf8:	ldr	x8, [x22]
    adfc:	mov	x0, x22
    ae00:	ldr	x8, [x8, #24]
    ae04:	blr	x8
    ae08:	cmp	w21, #0xd
    ae0c:	b.ne	b820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x36d4>  // b.any
    ae10:	cbz	x26, ae30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ce4>
    ae14:	ldaxr	w8, [x23]
    ae18:	sub	w9, w8, #0x1
    ae1c:	stlxr	w10, w9, [x23]
    ae20:	cbnz	w10, ae14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cc8>
    ae24:	cmp	w8, #0x1
    ae28:	b.eq	ae44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cf8>  // b.none
    ae2c:	b	ae84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d38>
    ae30:	ldr	w8, [x23]
    ae34:	sub	w9, w8, #0x1
    ae38:	str	w9, [x23]
    ae3c:	cmp	w8, #0x1
    ae40:	b.ne	ae84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d38>  // b.any
    ae44:	ldr	x8, [x20]
    ae48:	mov	x0, x20
    ae4c:	add	x21, x20, #0xc
    ae50:	ldr	x8, [x8, #16]
    ae54:	blr	x8
    ae58:	cbz	x26, b048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2efc>
    ae5c:	ldaxr	w8, [x21]
    ae60:	sub	w9, w8, #0x1
    ae64:	stlxr	w10, w9, [x21]
    ae68:	cbnz	w10, ae5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d10>
    ae6c:	cmp	w8, #0x1
    ae70:	b.ne	ae84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d38>  // b.any
    ae74:	ldr	x8, [x20]
    ae78:	mov	x0, x20
    ae7c:	ldr	x8, [x8, #24]
    ae80:	blr	x8
    ae84:	ldr	x0, [x19]
    ae88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ae8c:	ldp	x20, x19, [sp, #400]
    ae90:	ldp	x22, x21, [sp, #384]
    ae94:	ldp	x24, x23, [sp, #368]
    ae98:	ldp	x26, x25, [sp, #352]
    ae9c:	ldp	x28, x27, [sp, #336]
    aea0:	ldp	x29, x30, [sp, #320]
    aea4:	ldr	d8, [sp, #304]
    aea8:	add	sp, sp, #0x1a0
    aeac:	ret
    aeb0:	ldr	w8, [x21]
    aeb4:	sub	w9, w8, #0x1
    aeb8:	str	w9, [x21]
    aebc:	cmp	w8, #0x1
    aec0:	b.eq	8410 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c4>  // b.none
    aec4:	b	8420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d4>
    aec8:	ldr	w8, [x21]
    aecc:	sub	w9, w8, #0x1
    aed0:	str	w9, [x21]
    aed4:	cmp	w8, #0x1
    aed8:	b.eq	86c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x578>  // b.none
    aedc:	b	86d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x588>
    aee0:	ldr	w8, [x21]
    aee4:	sub	w9, w8, #0x1
    aee8:	str	w9, [x21]
    aeec:	cmp	w8, #0x1
    aef0:	b.eq	896c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x820>  // b.none
    aef4:	b	897c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x830>
    aef8:	ldr	w8, [x21]
    aefc:	sub	w9, w8, #0x1
    af00:	str	w9, [x21]
    af04:	cmp	w8, #0x1
    af08:	b.eq	8c14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xac8>  // b.none
    af0c:	b	8c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xad8>
    af10:	ldr	w8, [x22]
    af14:	sub	w9, w8, #0x1
    af18:	str	w9, [x22]
    af1c:	cmp	w8, #0x1
    af20:	b.eq	8e4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd00>  // b.none
    af24:	b	8e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd10>
    af28:	ldr	w8, [x22]
    af2c:	sub	w9, w8, #0x1
    af30:	str	w9, [x22]
    af34:	cmp	w8, #0x1
    af38:	b.eq	9074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf28>  // b.none
    af3c:	b	9084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf38>
    af40:	ldr	w8, [x22]
    af44:	sub	w9, w8, #0x1
    af48:	str	w9, [x22]
    af4c:	cmp	w8, #0x1
    af50:	b.eq	9330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11e4>  // b.none
    af54:	b	9340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11f4>
    af58:	ldr	w8, [x22]
    af5c:	sub	w9, w8, #0x1
    af60:	str	w9, [x22]
    af64:	cmp	w8, #0x1
    af68:	b.eq	9510 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13c4>  // b.none
    af6c:	b	9520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13d4>
    af70:	ldr	w8, [x22]
    af74:	sub	w9, w8, #0x1
    af78:	str	w9, [x22]
    af7c:	cmp	w8, #0x1
    af80:	b.eq	980c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16c0>  // b.none
    af84:	b	981c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16d0>
    af88:	ldr	w8, [x22]
    af8c:	sub	w9, w8, #0x1
    af90:	str	w9, [x22]
    af94:	cmp	w8, #0x1
    af98:	b.eq	9a78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x192c>  // b.none
    af9c:	b	9a88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x193c>
    afa0:	ldr	w8, [x22]
    afa4:	sub	w9, w8, #0x1
    afa8:	str	w9, [x22]
    afac:	cmp	w8, #0x1
    afb0:	b.eq	9d28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bdc>  // b.none
    afb4:	b	9d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bec>
    afb8:	ldr	w8, [x22]
    afbc:	sub	w9, w8, #0x1
    afc0:	str	w9, [x22]
    afc4:	cmp	w8, #0x1
    afc8:	b.eq	9fd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e8c>  // b.none
    afcc:	b	9fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e9c>
    afd0:	ldr	w8, [x22]
    afd4:	sub	w9, w8, #0x1
    afd8:	str	w9, [x22]
    afdc:	cmp	w8, #0x1
    afe0:	b.eq	a2cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2180>  // b.none
    afe4:	b	a2dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2190>
    afe8:	ldr	w8, [x20]
    afec:	sub	w9, w8, #0x1
    aff0:	str	w9, [x20]
    aff4:	cmp	w8, #0x1
    aff8:	b.eq	a588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x243c>  // b.none
    affc:	b	a598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x244c>
    b000:	ldr	w8, [x21]
    b004:	sub	w9, w8, #0x1
    b008:	str	w9, [x21]
    b00c:	cmp	w8, #0x1
    b010:	b.eq	a768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x261c>  // b.none
    b014:	b	a778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x262c>
    b018:	ldr	w8, [x21]
    b01c:	sub	w9, w8, #0x1
    b020:	str	w9, [x21]
    b024:	cmp	w8, #0x1
    b028:	b.eq	a990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2844>  // b.none
    b02c:	b	a9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2854>
    b030:	ldr	w8, [x21]
    b034:	sub	w9, w8, #0x1
    b038:	str	w9, [x21]
    b03c:	cmp	w8, #0x1
    b040:	b.eq	ab70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a24>  // b.none
    b044:	b	ab80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a34>
    b048:	ldr	w8, [x21]
    b04c:	sub	w9, w8, #0x1
    b050:	str	w9, [x21]
    b054:	cmp	w8, #0x1
    b058:	b.eq	ae74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d28>  // b.none
    b05c:	b	ae84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d38>
    b060:	ldr	w8, [x24]
    b064:	sub	w9, w8, #0x1
    b068:	str	w9, [x24]
    b06c:	cmp	w8, #0x1
    b070:	b.eq	8394 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x248>  // b.none
    b074:	b	83a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>
    b078:	ldr	w8, [x24]
    b07c:	sub	w9, w8, #0x1
    b080:	str	w9, [x24]
    b084:	cmp	w8, #0x1
    b088:	b.eq	8648 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x4fc>  // b.none
    b08c:	b	8658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>
    b090:	ldr	w8, [x24]
    b094:	sub	w9, w8, #0x1
    b098:	str	w9, [x24]
    b09c:	cmp	w8, #0x1
    b0a0:	b.eq	88f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7a4>  // b.none
    b0a4:	b	8900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>
    b0a8:	ldr	w8, [x24]
    b0ac:	sub	w9, w8, #0x1
    b0b0:	str	w9, [x24]
    b0b4:	cmp	w8, #0x1
    b0b8:	b.eq	8b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa4c>  // b.none
    b0bc:	b	8ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>
    b0c0:	ldr	w8, [x24]
    b0c4:	sub	w9, w8, #0x1
    b0c8:	str	w9, [x24]
    b0cc:	cmp	w8, #0x1
    b0d0:	b.eq	8dd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc84>  // b.none
    b0d4:	b	8de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>
    b0d8:	ldr	w8, [x28]
    b0dc:	sub	w9, w8, #0x1
    b0e0:	str	w9, [x28]
    b0e4:	cmp	w8, #0x1
    b0e8:	b.eq	8ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xeac>  // b.none
    b0ec:	b	9008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>
    b0f0:	ldr	w8, [x24]
    b0f4:	sub	w9, w8, #0x1
    b0f8:	str	w9, [x24]
    b0fc:	cmp	w8, #0x1
    b100:	b.eq	92b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1168>  // b.none
    b104:	b	92c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>
    b108:	ldr	w8, [x28]
    b10c:	sub	w9, w8, #0x1
    b110:	str	w9, [x28]
    b114:	cmp	w8, #0x1
    b118:	b.eq	9494 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1348>  // b.none
    b11c:	b	94a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>
    b120:	ldr	w8, [x24]
    b124:	sub	w9, w8, #0x1
    b128:	str	w9, [x24]
    b12c:	cmp	w8, #0x1
    b130:	b.eq	9790 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1644>  // b.none
    b134:	b	97a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>
    b138:	ldr	w8, [x28]
    b13c:	sub	w9, w8, #0x1
    b140:	str	w9, [x28]
    b144:	cmp	w8, #0x1
    b148:	b.eq	99fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18b0>  // b.none
    b14c:	b	9a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>
    b150:	ldr	w8, [x28]
    b154:	sub	w9, w8, #0x1
    b158:	str	w9, [x28]
    b15c:	cmp	w8, #0x1
    b160:	b.eq	9cac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b60>  // b.none
    b164:	b	9cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>
    b168:	ldr	w8, [x28]
    b16c:	sub	w9, w8, #0x1
    b170:	str	w9, [x28]
    b174:	cmp	w8, #0x1
    b178:	b.eq	9f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e10>  // b.none
    b17c:	b	9f6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>
    b180:	ldr	w8, [x28]
    b184:	sub	w9, w8, #0x1
    b188:	str	w9, [x28]
    b18c:	cmp	w8, #0x1
    b190:	b.eq	a250 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2104>  // b.none
    b194:	b	a260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>
    b198:	ldr	w8, [x23]
    b19c:	sub	w9, w8, #0x1
    b1a0:	str	w9, [x23]
    b1a4:	cmp	w8, #0x1
    b1a8:	b.eq	a50c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23c0>  // b.none
    b1ac:	b	a51c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>
    b1b0:	ldr	w8, [x24]
    b1b4:	sub	w9, w8, #0x1
    b1b8:	str	w9, [x24]
    b1bc:	cmp	w8, #0x1
    b1c0:	b.eq	a6ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25a0>  // b.none
    b1c4:	b	a6fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>
    b1c8:	ldr	w8, [x24]
    b1cc:	sub	w9, w8, #0x1
    b1d0:	str	w9, [x24]
    b1d4:	cmp	w8, #0x1
    b1d8:	b.eq	a914 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27c8>  // b.none
    b1dc:	b	a924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>
    b1e0:	ldr	w8, [x24]
    b1e4:	sub	w9, w8, #0x1
    b1e8:	str	w9, [x24]
    b1ec:	cmp	w8, #0x1
    b1f0:	b.eq	aaf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29a8>  // b.none
    b1f4:	b	ab04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>
    b1f8:	ldr	w8, [x24]
    b1fc:	sub	w9, w8, #0x1
    b200:	str	w9, [x24]
    b204:	cmp	w8, #0x1
    b208:	b.eq	adf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cac>  // b.none
    b20c:	b	ae08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>
    b210:	mov	w3, #0x10                  	// #16
    b214:	mov	x0, x21
    b218:	mov	x1, x22
    b21c:	mov	x2, xzr
    b220:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b224:	ldr	w8, [x20, #24]
    b228:	b	8264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x118>
    b22c:	mov	w3, #0x10                  	// #16
    b230:	mov	x0, x21
    b234:	mov	x1, x22
    b238:	mov	x2, xzr
    b23c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b240:	ldr	w8, [x20, #24]
    b244:	b	82a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x158>
    b248:	mov	w3, #0x10                  	// #16
    b24c:	mov	x0, x21
    b250:	mov	x1, x22
    b254:	mov	x2, xzr
    b258:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b25c:	ldr	w8, [x20, #24]
    b260:	b	84dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x390>
    b264:	mov	w3, #0x10                  	// #16
    b268:	mov	x0, x21
    b26c:	mov	x1, x22
    b270:	mov	x2, xzr
    b274:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b278:	ldr	w8, [x20, #24]
    b27c:	b	8520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3d4>
    b280:	mov	w3, #0x10                  	// #16
    b284:	mov	x0, x21
    b288:	mov	x1, x22
    b28c:	mov	x2, xzr
    b290:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b294:	ldr	w8, [x20, #24]
    b298:	b	8560 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x414>
    b29c:	mov	w3, #0x10                  	// #16
    b2a0:	mov	x0, x21
    b2a4:	mov	x1, x22
    b2a8:	mov	x2, xzr
    b2ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b2b0:	ldr	w8, [x20, #24]
    b2b4:	b	8788 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x63c>
    b2b8:	mov	w3, #0x10                  	// #16
    b2bc:	mov	x0, x21
    b2c0:	mov	x1, x22
    b2c4:	mov	x2, xzr
    b2c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b2cc:	ldr	w8, [x20, #24]
    b2d0:	b	87cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x680>
    b2d4:	mov	w3, #0x10                  	// #16
    b2d8:	mov	x0, x21
    b2dc:	mov	x1, x22
    b2e0:	mov	x2, xzr
    b2e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b2e8:	ldr	w8, [x20, #24]
    b2ec:	b	880c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x6c0>
    b2f0:	mov	w3, #0x10                  	// #16
    b2f4:	mov	x0, x21
    b2f8:	mov	x1, x22
    b2fc:	mov	x2, xzr
    b300:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b304:	ldr	w8, [x20, #24]
    b308:	b	8a30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x8e4>
    b30c:	mov	w3, #0x10                  	// #16
    b310:	mov	x0, x21
    b314:	mov	x1, x22
    b318:	mov	x2, xzr
    b31c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b320:	ldr	w8, [x20, #24]
    b324:	b	8a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x928>
    b328:	mov	w3, #0x10                  	// #16
    b32c:	mov	x0, x21
    b330:	mov	x1, x22
    b334:	mov	x2, xzr
    b338:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b33c:	ldr	w8, [x20, #24]
    b340:	b	8ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x968>
    b344:	mov	w3, #0x10                  	// #16
    b348:	mov	x0, x22
    b34c:	mov	x1, x23
    b350:	mov	x2, xzr
    b354:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b358:	ldr	w8, [x21, #24]
    b35c:	b	8cec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xba0>
    b360:	mov	w3, #0x10                  	// #16
    b364:	mov	x0, x22
    b368:	mov	x2, xzr
    b36c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b370:	ldr	w8, [x21, #24]
    b374:	b	8f10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xdc4>
    b378:	mov	w3, #0x10                  	// #16
    b37c:	mov	x0, x22
    b380:	mov	x1, x23
    b384:	mov	x2, xzr
    b388:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b38c:	ldr	w8, [x21, #24]
    b390:	b	9138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xfec>
    b394:	mov	w3, #0x10                  	// #16
    b398:	mov	x0, x22
    b39c:	mov	x1, x23
    b3a0:	mov	x2, xzr
    b3a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b3a8:	ldr	w8, [x21, #24]
    b3ac:	b	918c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1040>
    b3b0:	mov	w3, #0x10                  	// #16
    b3b4:	mov	x0, x22
    b3b8:	mov	x1, x23
    b3bc:	mov	x2, xzr
    b3c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b3c4:	ldr	w8, [x21, #24]
    b3c8:	b	91cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1080>
    b3cc:	mov	w3, #0x10                  	// #16
    b3d0:	mov	x0, x22
    b3d4:	mov	x1, x23
    b3d8:	mov	x2, xzr
    b3dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b3e0:	ldr	w8, [x21, #24]
    b3e4:	b	95d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1488>
    b3e8:	mov	w3, #0x10                  	// #16
    b3ec:	mov	x0, x22
    b3f0:	mov	x1, x23
    b3f4:	mov	x2, xzr
    b3f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b3fc:	ldr	w8, [x21, #24]
    b400:	b	9628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x14dc>
    b404:	mov	w3, #0x10                  	// #16
    b408:	mov	x0, x22
    b40c:	mov	x1, x23
    b410:	mov	x2, xzr
    b414:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b418:	ldr	w8, [x21, #24]
    b41c:	b	9668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x151c>
    b420:	mov	w3, #0x10                  	// #16
    b424:	mov	x0, x22
    b428:	mov	x1, x23
    b42c:	mov	x2, xzr
    b430:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b434:	ldr	w8, [x21, #24]
    b438:	b	96a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x155c>
    b43c:	mov	w3, #0x10                  	// #16
    b440:	mov	x0, x22
    b444:	mov	x1, x23
    b448:	mov	x2, xzr
    b44c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b450:	ldr	w8, [x21, #24]
    b454:	b	98d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1784>
    b458:	mov	w3, #0x10                  	// #16
    b45c:	mov	x0, x22
    b460:	mov	x1, x23
    b464:	mov	x2, xzr
    b468:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b46c:	ldr	w8, [x21, #24]
    b470:	b	9914 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x17c8>
    b474:	mov	w3, #0x10                  	// #16
    b478:	mov	x0, x22
    b47c:	mov	x1, x23
    b480:	mov	x2, xzr
    b484:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b488:	ldr	w8, [x21, #24]
    b48c:	b	9b3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x19f0>
    b490:	mov	w3, #0x10                  	// #16
    b494:	mov	x0, x22
    b498:	mov	x1, x23
    b49c:	mov	x2, xzr
    b4a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b4a4:	ldr	w8, [x21, #24]
    b4a8:	b	9b80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1a34>
    b4ac:	mov	w3, #0x10                  	// #16
    b4b0:	mov	x0, x22
    b4b4:	mov	x1, x23
    b4b8:	mov	x2, xzr
    b4bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b4c0:	ldr	w8, [x21, #24]
    b4c4:	b	9bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1a78>
    b4c8:	mov	w3, #0x10                  	// #16
    b4cc:	mov	x0, x22
    b4d0:	mov	x1, x23
    b4d4:	mov	x2, xzr
    b4d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b4dc:	ldr	w8, [x21, #24]
    b4e0:	b	9dec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ca0>
    b4e4:	mov	w3, #0x10                  	// #16
    b4e8:	mov	x0, x22
    b4ec:	mov	x1, x23
    b4f0:	mov	x2, xzr
    b4f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b4f8:	ldr	w8, [x21, #24]
    b4fc:	b	9e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ce4>
    b500:	mov	w3, #0x10                  	// #16
    b504:	mov	x0, x22
    b508:	mov	x1, x23
    b50c:	mov	x2, xzr
    b510:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b514:	ldr	w8, [x21, #24]
    b518:	b	9e74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1d28>
    b51c:	mov	w3, #0x10                  	// #16
    b520:	mov	x0, x22
    b524:	mov	x1, x23
    b528:	mov	x2, xzr
    b52c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b530:	ldr	w8, [x21, #24]
    b534:	b	a09c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1f50>
    b538:	mov	w3, #0x10                  	// #16
    b53c:	mov	x0, x22
    b540:	mov	x1, x23
    b544:	mov	x2, xzr
    b548:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b54c:	ldr	w8, [x21, #24]
    b550:	b	a0e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1f94>
    b554:	mov	w3, #0x10                  	// #16
    b558:	mov	x0, x22
    b55c:	mov	x1, x23
    b560:	mov	x2, xzr
    b564:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b568:	ldr	w8, [x21, #24]
    b56c:	b	a124 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1fd8>
    b570:	mov	w3, #0x10                  	// #16
    b574:	mov	x0, x22
    b578:	mov	x1, x23
    b57c:	mov	x2, xzr
    b580:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b584:	ldr	w8, [x21, #24]
    b588:	b	a168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x201c>
    b58c:	mov	w3, #0x10                  	// #16
    b590:	mov	x0, x22
    b594:	mov	x1, x23
    b598:	mov	x2, xzr
    b59c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b5a0:	ldr	w8, [x21, #24]
    b5a4:	b	a390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2244>
    b5a8:	mov	w3, #0x10                  	// #16
    b5ac:	mov	x0, x22
    b5b0:	mov	x1, x23
    b5b4:	mov	x2, xzr
    b5b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b5bc:	ldr	w8, [x21, #24]
    b5c0:	b	a3e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2298>
    b5c4:	mov	w3, #0x10                  	// #16
    b5c8:	mov	x0, x22
    b5cc:	mov	x1, x23
    b5d0:	mov	x2, xzr
    b5d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b5d8:	ldr	w8, [x21, #24]
    b5dc:	b	a424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x22d8>
    b5e0:	mov	w3, #0x10                  	// #16
    b5e4:	mov	x0, x21
    b5e8:	mov	x2, xzr
    b5ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b5f0:	ldr	w8, [x20, #24]
    b5f4:	b	a82c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x26e0>
    b5f8:	mov	w3, #0x10                  	// #16
    b5fc:	mov	x0, x21
    b600:	mov	x1, x22
    b604:	mov	x2, xzr
    b608:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b60c:	ldr	w8, [x20, #24]
    b610:	b	ac34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ae8>
    b614:	mov	w3, #0x10                  	// #16
    b618:	mov	x0, x21
    b61c:	mov	x1, x22
    b620:	mov	x2, xzr
    b624:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b628:	ldr	w8, [x20, #24]
    b62c:	b	ac90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2b44>
    b630:	mov	w3, #0x10                  	// #16
    b634:	mov	x0, x21
    b638:	mov	x1, x22
    b63c:	mov	x2, xzr
    b640:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b644:	ldr	w8, [x20, #24]
    b648:	b	acd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2b84>
    b64c:	mov	w3, #0x10                  	// #16
    b650:	mov	x0, x21
    b654:	mov	x1, x22
    b658:	mov	x2, xzr
    b65c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b660:	ldr	w8, [x20, #24]
    b664:	b	ad10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2bc4>
    b668:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b66c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b670:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b674:	add	x0, x0, #0x0
    b678:	add	x1, x1, #0x0
    b67c:	add	x3, x3, #0x0
    b680:	mov	w2, #0x43                  	// #67
    b684:	bl	0 <__assert_fail>
    b688:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b68c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b690:	add	x0, x0, #0x0
    b694:	add	x1, x1, #0x0
    b698:	mov	w2, #0xcc1                 	// #3265
    b69c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b6a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b6a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b6a8:	add	x0, x0, #0x0
    b6ac:	add	x1, x1, #0x0
    b6b0:	mov	w2, #0xccc                 	// #3276
    b6b4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b6b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b6bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b6c0:	add	x0, x0, #0x0
    b6c4:	add	x1, x1, #0x0
    b6c8:	mov	w2, #0xcd6                 	// #3286
    b6cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b6d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b6d4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b6d8:	add	x0, x0, #0x0
    b6dc:	add	x1, x1, #0x0
    b6e0:	mov	w2, #0xce0                 	// #3296
    b6e4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b6e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b6ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b6f0:	add	x0, x0, #0x0
    b6f4:	add	x1, x1, #0x0
    b6f8:	mov	w2, #0xcea                 	// #3306
    b6fc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b700:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b704:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b708:	add	x0, x0, #0x0
    b70c:	add	x1, x1, #0x0
    b710:	mov	w2, #0xcf3                 	// #3315
    b714:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b718:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b71c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b720:	add	x0, x0, #0x0
    b724:	add	x1, x1, #0x0
    b728:	mov	w2, #0xd00                 	// #3328
    b72c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b730:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b734:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b738:	add	x0, x0, #0x0
    b73c:	add	x1, x1, #0x0
    b740:	mov	w2, #0xd07                 	// #3335
    b744:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b748:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b74c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b750:	add	x0, x0, #0x0
    b754:	add	x1, x1, #0x0
    b758:	mov	w2, #0xd16                 	// #3350
    b75c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b760:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b764:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b768:	add	x0, x0, #0x0
    b76c:	add	x1, x1, #0x0
    b770:	mov	w2, #0xd1f                 	// #3359
    b774:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b778:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b77c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b780:	add	x0, x0, #0x0
    b784:	add	x1, x1, #0x0
    b788:	mov	w2, #0xd29                 	// #3369
    b78c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b790:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b794:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b798:	add	x0, x0, #0x0
    b79c:	add	x1, x1, #0x0
    b7a0:	mov	w2, #0xd33                 	// #3379
    b7a4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b7a8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b7ac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b7b0:	add	x0, x0, #0x0
    b7b4:	add	x1, x1, #0x0
    b7b8:	mov	w2, #0xd3e                 	// #3390
    b7bc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b7c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b7c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b7c8:	add	x0, x0, #0x0
    b7cc:	add	x1, x1, #0x0
    b7d0:	mov	w2, #0xd49                 	// #3401
    b7d4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b7d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b7dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b7e0:	add	x0, x0, #0x0
    b7e4:	add	x1, x1, #0x0
    b7e8:	mov	w2, #0xd51                 	// #3409
    b7ec:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b7f0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b7f4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b7f8:	add	x0, x0, #0x0
    b7fc:	add	x1, x1, #0x0
    b800:	mov	w2, #0xd59                 	// #3417
    b804:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b808:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b80c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b810:	add	x0, x0, #0x0
    b814:	add	x1, x1, #0x0
    b818:	mov	w2, #0xd60                 	// #3424
    b81c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b820:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b824:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b828:	add	x0, x0, #0x0
    b82c:	add	x1, x1, #0x0
    b830:	mov	w2, #0xd6c                 	// #3436
    b834:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000b838 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv>:
    b838:	stp	x29, x30, [sp, #-96]!
    b83c:	stp	x28, x27, [sp, #16]
    b840:	stp	x26, x25, [sp, #32]
    b844:	stp	x24, x23, [sp, #48]
    b848:	stp	x22, x21, [sp, #64]
    b84c:	stp	x20, x19, [sp, #80]
    b850:	mov	x29, sp
    b854:	sub	sp, sp, #0x1e0
    b858:	ldr	x8, [x0, #16]
    b85c:	mov	x19, x0
    b860:	ldr	x3, [x8, #248]
    b864:	cbz	x3, b880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x48>
    b868:	ldr	x0, [x19]
    b86c:	ldr	x2, [x8, #240]
    b870:	mov	w1, #0x2                   	// #2
    b874:	mov	w4, wzr
    b878:	bl	11698 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    b87c:	ldr	x8, [x19, #16]
    b880:	ldr	x3, [x8, #488]
    b884:	cbz	x3, b8a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x68>
    b888:	ldr	x0, [x19]
    b88c:	ldr	x2, [x8, #480]
    b890:	mov	w1, #0x3                   	// #3
    b894:	mov	w4, wzr
    b898:	bl	11698 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    b89c:	ldr	x8, [x19, #16]
    b8a0:	ldr	x3, [x8, #96]
    b8a4:	cbz	x3, b8c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x88>
    b8a8:	ldr	x0, [x19]
    b8ac:	ldr	x2, [x8, #88]
    b8b0:	mov	w1, #0x4                   	// #4
    b8b4:	mov	w4, wzr
    b8b8:	bl	11698 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    b8bc:	ldr	x8, [x19, #16]
    b8c0:	sub	x9, x29, #0x50
    b8c4:	sub	x10, x29, #0x80
    b8c8:	add	x9, x9, #0x8
    b8cc:	add	x10, x10, #0x8
    b8d0:	stur	wzr, [x29, #-72]
    b8d4:	stur	wzr, [x29, #-120]
    b8d8:	stp	xzr, x9, [x29, #-64]
    b8dc:	stp	x9, xzr, [x29, #-48]
    b8e0:	stp	xzr, x10, [x29, #-112]
    b8e4:	stp	x10, xzr, [x29, #-96]
    b8e8:	ldr	x24, [x8, #16]
    b8ec:	add	x26, x8, #0x8
    b8f0:	cmp	x26, x24
    b8f4:	b.eq	bac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x290>  // b.none
    b8f8:	add	x8, sp, #0x40
    b8fc:	mov	w23, wzr
    b900:	mov	w25, wzr
    b904:	add	x27, x8, #0x10
    b908:	b	b918 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xe0>
    b90c:	ldr	x24, [x24, #8]
    b910:	cmp	x26, x24
    b914:	b.eq	bab0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x278>  // b.none
    b918:	ldrb	w8, [x24]
    b91c:	tbnz	w8, #2, e774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f3c>
    b920:	sub	x8, x24, #0x38
    b924:	cmp	x24, #0x0
    b928:	csel	x20, xzr, x8, eq  // eq = none
    b92c:	mov	x0, x20
    b930:	bl	0 <_ZNK4llvm11GlobalValue12getAlignmentEv>
    b934:	ldr	w8, [x19, #72]
    b938:	ldr	x9, [x19, #56]
    b93c:	cmp	w23, w0
    b940:	csel	w23, w0, w23, cc  // cc = lo, ul, last
    b944:	cbz	w8, b9a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16c>
    b948:	ldr	x10, [x20, #24]
    b94c:	orr	x11, x10, #0x8
    b950:	cmn	x11, #0x8
    b954:	b.eq	e694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e5c>  // b.none
    b958:	ubfx	x11, x10, #4, #28
    b95c:	eor	w12, w11, w10, lsr #9
    b960:	sub	w11, w8, #0x1
    b964:	and	w12, w12, w11
    b968:	add	x13, x9, w12, uxtw #4
    b96c:	ldr	x14, [x13]
    b970:	cmp	x14, x10
    b974:	b.eq	b9a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x170>  // b.none
    b978:	mov	w15, #0x1                   	// #1
    b97c:	cmn	x14, #0x8
    b980:	b.eq	b9a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16c>  // b.none
    b984:	add	w12, w12, w15
    b988:	and	w12, w12, w11
    b98c:	add	x13, x9, w12, uxtw #4
    b990:	ldr	x14, [x13]
    b994:	add	w15, w15, #0x1
    b998:	cmp	x14, x10
    b99c:	b.eq	b9a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x170>  // b.none
    b9a0:	b	b97c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x144>
    b9a4:	add	x13, x9, x8, lsl #4
    b9a8:	add	x8, x9, x8, lsl #4
    b9ac:	cmp	x13, x8
    b9b0:	b.eq	e6b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e7c>  // b.none
    b9b4:	ldr	w8, [x13, #8]
    b9b8:	mov	x0, x20
    b9bc:	sub	w8, w8, #0x1
    b9c0:	cmp	w25, w8
    b9c4:	csel	w25, w8, w25, cc  // cc = lo, ul, last
    b9c8:	bl	0 <_ZNK4llvm11GlobalValue10getSectionEv>
    b9cc:	cbz	x1, b90c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd4>
    b9d0:	mov	x0, x20
    b9d4:	bl	0 <_ZNK4llvm11GlobalValue10getSectionEv>
    b9d8:	str	x27, [sp, #64]
    b9dc:	cbz	x0, ba2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f4>
    b9e0:	mov	x21, x0
    b9e4:	mov	x22, x1
    b9e8:	cmp	x1, #0x10
    b9ec:	mov	x0, x27
    b9f0:	str	x1, [sp, #16]
    b9f4:	b.cc	ba14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1dc>  // b.lo, b.ul, b.last
    b9f8:	add	x0, sp, #0x40
    b9fc:	add	x1, sp, #0x10
    ba00:	mov	x2, xzr
    ba04:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    ba08:	ldr	x8, [sp, #16]
    ba0c:	str	x0, [sp, #64]
    ba10:	str	x8, [sp, #80]
    ba14:	cbz	x22, ba44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x20c>
    ba18:	cmp	x22, #0x1
    ba1c:	b.ne	ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x200>  // b.any
    ba20:	ldrb	w8, [x21]
    ba24:	strb	w8, [x0]
    ba28:	b	ba44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x20c>
    ba2c:	str	xzr, [sp, #72]
    ba30:	strb	wzr, [sp, #80]
    ba34:	b	ba54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x21c>
    ba38:	mov	x1, x21
    ba3c:	mov	x2, x22
    ba40:	bl	0 <memcpy>
    ba44:	ldr	x8, [sp, #16]
    ba48:	ldr	x9, [sp, #64]
    ba4c:	str	x8, [sp, #72]
    ba50:	strb	wzr, [x9, x8]
    ba54:	sub	x0, x29, #0x50
    ba58:	add	x1, sp, #0x40
    ba5c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ba60:	ldr	x8, [sp, #64]
    ba64:	mov	x21, x0
    ba68:	cmp	x8, x27
    ba6c:	b.eq	ba78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x240>  // b.none
    ba70:	mov	x0, x8
    ba74:	bl	0 <_ZdlPv>
    ba78:	ldr	w8, [x21]
    ba7c:	cbnz	w8, b90c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd4>
    ba80:	ldr	x22, [x19]
    ba84:	mov	x0, x20
    ba88:	bl	0 <_ZNK4llvm11GlobalValue10getSectionEv>
    ba8c:	mov	x2, x0
    ba90:	mov	x3, x1
    ba94:	mov	w1, #0x5                   	// #5
    ba98:	mov	x0, x22
    ba9c:	mov	w4, wzr
    baa0:	bl	11698 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    baa4:	ldur	x8, [x29, #-40]
    baa8:	str	w8, [x21]
    baac:	b	b90c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd4>
    bab0:	ldr	x8, [x19, #16]
    bab4:	ldr	x24, [x8, #32]
    bab8:	add	x26, x8, #0x18
    babc:	cmp	x26, x24
    bac0:	b.ne	bae0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a8>  // b.any
    bac4:	b	bc98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x460>
    bac8:	mov	w25, wzr
    bacc:	mov	w23, wzr
    bad0:	ldr	x24, [x8, #32]
    bad4:	add	x26, x8, #0x18
    bad8:	cmp	x26, x24
    badc:	b.eq	bc98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x460>  // b.none
    bae0:	add	x8, sp, #0x40
    bae4:	add	x28, x8, #0x10
    bae8:	mov	w27, #0x1                   	// #1
    baec:	b	bafc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c4>
    baf0:	ldr	x24, [x24, #8]
    baf4:	cmp	x26, x24
    baf8:	b.eq	bc94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x45c>  // b.none
    bafc:	ldrb	w8, [x24]
    bb00:	tbnz	w8, #2, e794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f5c>
    bb04:	sub	x8, x24, #0x38
    bb08:	cmp	x24, #0x0
    bb0c:	csel	x20, xzr, x8, eq  // eq = none
    bb10:	ldr	w8, [x20, #32]
    bb14:	mov	w10, #0x1f                  	// #31
    bb18:	ubfx	w9, w8, #16, #5
    bb1c:	add	w9, w9, #0xff
    bb20:	tst	w10, w8, lsr #16
    bb24:	orr	w9, w9, #0x100
    bb28:	csel	w9, wzr, w9, eq  // eq = none
    bb2c:	lsl	w10, w9, #23
    bb30:	lsl	x9, x27, x9
    bb34:	and	w9, w9, w10, asr #31
    bb38:	cmp	w23, w9
    bb3c:	csel	w23, w9, w23, cc  // cc = lo, ul, last
    bb40:	tbz	w8, #22, bbf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3bc>
    bb44:	mov	x0, x20
    bb48:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    bb4c:	str	x28, [sp, #64]
    bb50:	cbz	x0, bba0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x368>
    bb54:	mov	x21, x0
    bb58:	mov	x22, x1
    bb5c:	cmp	x1, #0x10
    bb60:	mov	x0, x28
    bb64:	str	x1, [sp, #16]
    bb68:	b.cc	bb88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x350>  // b.lo, b.ul, b.last
    bb6c:	add	x0, sp, #0x40
    bb70:	add	x1, sp, #0x10
    bb74:	mov	x2, xzr
    bb78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    bb7c:	ldr	x8, [sp, #16]
    bb80:	str	x0, [sp, #64]
    bb84:	str	x8, [sp, #80]
    bb88:	cbz	x22, bbb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x380>
    bb8c:	cmp	x22, #0x1
    bb90:	b.ne	bbac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x374>  // b.any
    bb94:	ldrb	w8, [x21]
    bb98:	strb	w8, [x0]
    bb9c:	b	bbb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x380>
    bba0:	str	xzr, [sp, #72]
    bba4:	strb	wzr, [sp, #80]
    bba8:	b	bbc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x390>
    bbac:	mov	x1, x21
    bbb0:	mov	x2, x22
    bbb4:	bl	0 <memcpy>
    bbb8:	ldr	x8, [sp, #16]
    bbbc:	ldr	x9, [sp, #64]
    bbc0:	str	x8, [sp, #72]
    bbc4:	strb	wzr, [x9, x8]
    bbc8:	sub	x0, x29, #0x50
    bbcc:	add	x1, sp, #0x40
    bbd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bbd4:	ldr	x8, [sp, #64]
    bbd8:	mov	x21, x0
    bbdc:	cmp	x8, x28
    bbe0:	b.eq	bbec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3b4>  // b.none
    bbe4:	mov	x0, x8
    bbe8:	bl	0 <_ZdlPv>
    bbec:	ldr	w8, [x21]
    bbf0:	cbz	w8, bc48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x410>
    bbf4:	ldrb	w8, [x20, #19]
    bbf8:	tbz	w8, #6, baf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b8>
    bbfc:	mov	x0, x20
    bc00:	bl	0 <_ZNK4llvm8Function5getGCB5cxx11Ev>
    bc04:	mov	x1, x0
    bc08:	sub	x0, x29, #0x80
    bc0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc10:	ldr	w8, [x0]
    bc14:	cbnz	w8, baf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b8>
    bc18:	ldr	x22, [x19]
    bc1c:	mov	x21, x0
    bc20:	mov	x0, x20
    bc24:	bl	0 <_ZNK4llvm8Function5getGCB5cxx11Ev>
    bc28:	ldp	x2, x3, [x0]
    bc2c:	mov	w1, #0xb                   	// #11
    bc30:	mov	x0, x22
    bc34:	mov	w4, wzr
    bc38:	bl	11698 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    bc3c:	ldur	x8, [x29, #-88]
    bc40:	str	w8, [x21]
    bc44:	b	baf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b8>
    bc48:	ldrb	w8, [x20, #34]
    bc4c:	ldr	x22, [x19]
    bc50:	tbnz	w8, #6, bc60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x428>
    bc54:	mov	x2, xzr
    bc58:	mov	x3, xzr
    bc5c:	b	bc70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x438>
    bc60:	mov	x0, x20
    bc64:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    bc68:	mov	x2, x0
    bc6c:	mov	x3, x1
    bc70:	mov	w1, #0x5                   	// #5
    bc74:	mov	x0, x22
    bc78:	mov	w4, wzr
    bc7c:	bl	11698 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    bc80:	ldur	x8, [x29, #-40]
    bc84:	str	w8, [x21]
    bc88:	ldrb	w8, [x20, #19]
    bc8c:	tbz	w8, #6, baf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b8>
    bc90:	b	bbfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3c4>
    bc94:	ldr	x8, [x19, #16]
    bc98:	ldr	x9, [x8, #8]!
    bc9c:	adrp	x22, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bca0:	adrp	x28, 0 <__pthread_key_create>
    bca4:	ldr	x22, [x22]
    bca8:	ldr	x28, [x28]
    bcac:	and	x9, x9, #0xfffffffffffffff8
    bcb0:	cmp	x8, x9
    bcb4:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bcb8:	b.eq	bf48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x710>  // b.none
    bcbc:	mov	w0, #0x220                 	// #544
    bcc0:	bl	0 <_Znwm>
    bcc4:	movi	v0.2s, #0x1
    bcc8:	mov	x27, x22
    bccc:	add	x8, x22, #0x10
    bcd0:	str	d0, [x0, #8]
    bcd4:	movi	v0.2d, #0x0
    bcd8:	mov	x22, x0
    bcdc:	str	x8, [x0]
    bce0:	stp	q0, q0, [x0, #48]
    bce4:	stp	q0, q0, [x0, #80]
    bce8:	stp	q0, q0, [x0, #112]
    bcec:	stp	q0, q0, [x0, #144]
    bcf0:	stp	q0, q0, [x0, #176]
    bcf4:	stp	q0, q0, [x0, #208]
    bcf8:	stp	q0, q0, [x0, #240]
    bcfc:	stp	q0, q0, [x0, #272]
    bd00:	stp	q0, q0, [x0, #304]
    bd04:	stp	q0, q0, [x0, #336]
    bd08:	stp	q0, q0, [x0, #368]
    bd0c:	stp	q0, q0, [x0, #400]
    bd10:	stp	q0, q0, [x0, #432]
    bd14:	stp	q0, q0, [x0, #464]
    bd18:	stp	q0, q0, [x0, #496]
    bd1c:	str	q0, [x0, #528]
    bd20:	str	q0, [x22, #32]!
    bd24:	ldr	d0, [x24]
    bd28:	ldr	w9, [sp, #64]
    bd2c:	ldur	w10, [sp, #67]
    bd30:	mov	x21, x0
    bd34:	mov	x26, x0
    bd38:	mov	w8, #0x7                   	// #7
    bd3c:	str	x22, [x21, #16]!
    bd40:	str	d0, [x26, #24]!
    bd44:	str	x8, [x22]
    bd48:	mov	w8, #0xff                  	// #255
    bd4c:	strb	w8, [x0, #40]
    bd50:	str	w10, [x0, #44]
    bd54:	stur	w9, [x0, #41]
    bd58:	ldr	w8, [x26]
    bd5c:	ldr	w9, [x0, #28]
    bd60:	cmp	w8, w9
    bd64:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    bd68:	add	w8, w8, #0x1
    bd6c:	mov	x20, x0
    bd70:	cmp	w8, w9
    bd74:	str	w8, [x26]
    bd78:	b.cs	e4fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cc4>  // b.hs, b.nlast
    bd7c:	ldr	x9, [x20, #16]
    bd80:	mov	w10, #0x8                   	// #8
    bd84:	mov	w11, #0x4                   	// #4
    bd88:	add	x8, x9, w8, uxtw #4
    bd8c:	str	x10, [x8]
    bd90:	strb	w11, [x8, #8]
    bd94:	ldur	w9, [sp, #67]
    bd98:	ldr	w10, [sp, #64]
    bd9c:	str	w9, [x8, #12]
    bda0:	stur	w10, [x8, #9]
    bda4:	ldp	w8, w9, [x20, #24]
    bda8:	cmp	w8, w9
    bdac:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    bdb0:	add	w8, w8, #0x1
    bdb4:	cmp	w8, w9
    bdb8:	str	w8, [x26]
    bdbc:	b.cs	e518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ce0>  // b.hs, b.nlast
    bdc0:	ldr	x9, [x20, #16]
    bdc4:	mov	w10, #0x8                   	// #8
    bdc8:	mov	w11, #0x4                   	// #4
    bdcc:	add	x8, x9, w8, uxtw #4
    bdd0:	str	x10, [x8]
    bdd4:	strb	w11, [x8, #8]
    bdd8:	ldur	w9, [sp, #67]
    bddc:	ldr	w10, [sp, #64]
    bde0:	str	w9, [x8, #12]
    bde4:	stur	w10, [x8, #9]
    bde8:	ldp	w8, w9, [x20, #24]
    bdec:	cmp	w8, w9
    bdf0:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    bdf4:	add	w8, w8, #0x1
    bdf8:	clz	w10, w25
    bdfc:	mov	w11, #0x20                  	// #32
    be00:	cmp	w8, w9
    be04:	sub	w25, w11, w10
    be08:	str	w8, [x26]
    be0c:	b.cs	e534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cfc>  // b.hs, b.nlast
    be10:	ldr	x9, [x20, #16]
    be14:	mov	w10, #0x2                   	// #2
    be18:	add	x8, x9, w8, uxtw #4
    be1c:	str	x25, [x8]
    be20:	strb	w10, [x8, #8]
    be24:	ldur	w9, [sp, #67]
    be28:	ldr	w10, [sp, #64]
    be2c:	str	w9, [x8, #12]
    be30:	stur	w10, [x8, #9]
    be34:	ldp	w8, w9, [x20, #24]
    be38:	cmp	w8, w9
    be3c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    be40:	add	w8, w8, #0x1
    be44:	cmp	w8, w9
    be48:	str	w8, [x26]
    be4c:	b.cs	e550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d18>  // b.hs, b.nlast
    be50:	ldr	x9, [x20, #16]
    be54:	mov	w10, #0x6                   	// #6
    be58:	mov	w11, #0x4                   	// #4
    be5c:	add	x8, x9, w8, uxtw #4
    be60:	str	x10, [x8]
    be64:	strb	w11, [x8, #8]
    be68:	ldur	w9, [sp, #67]
    be6c:	ldr	w10, [sp, #64]
    be70:	str	w9, [x8, #12]
    be74:	stur	w10, [x8, #9]
    be78:	ldp	w8, w9, [x20, #24]
    be7c:	cmp	w8, w9
    be80:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    be84:	add	w8, w8, #0x1
    be88:	cmp	w8, w9
    be8c:	str	w8, [x26]
    be90:	b.cs	e56c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d34>  // b.hs, b.nlast
    be94:	ldr	x9, [x20, #16]
    be98:	mov	w10, #0x6                   	// #6
    be9c:	mov	w11, #0x4                   	// #4
    bea0:	add	x8, x9, w8, uxtw #4
    bea4:	str	x10, [x8]
    bea8:	strb	w11, [x8, #8]
    beac:	ldur	w9, [sp, #67]
    beb0:	ldr	w10, [sp, #64]
    beb4:	str	w9, [x8, #12]
    beb8:	stur	w10, [x8, #9]
    bebc:	ldp	w8, w9, [x20, #24]
    bec0:	cmp	w8, w9
    bec4:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    bec8:	add	w8, w8, #0x1
    becc:	cmp	w8, w9
    bed0:	str	w8, [x26]
    bed4:	b.cs	e588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d50>  // b.hs, b.nlast
    bed8:	ldr	x9, [x20, #16]
    bedc:	mov	w10, #0x5                   	// #5
    bee0:	mov	w11, #0x2                   	// #2
    bee4:	add	x8, x9, w8, uxtw #4
    bee8:	str	x10, [x8]
    beec:	strb	w11, [x8, #8]
    bef0:	ldur	w9, [sp, #67]
    bef4:	ldr	w10, [sp, #64]
    bef8:	str	w9, [x8, #12]
    befc:	stur	w10, [x8, #9]
    bf00:	ldp	w8, w9, [x20, #24]
    bf04:	cmp	w8, w9
    bf08:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    bf0c:	add	w8, w8, #0x1
    bf10:	str	w8, [x26]
    bf14:	cbz	w23, bf50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x718>
    bf18:	clz	w10, w23
    bf1c:	mov	w11, #0x20                  	// #32
    bf20:	sub	w10, w11, w10
    bf24:	clz	w10, w10
    bf28:	cmp	w8, w9
    bf2c:	sub	w23, w11, w10
    bf30:	b.cs	e5a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d6c>  // b.hs, b.nlast
    bf34:	ldr	x9, [x20, #16]
    bf38:	mov	w10, #0x2                   	// #2
    bf3c:	add	x8, x9, w8, uxtw #4
    bf40:	str	x23, [x8]
    bf44:	b	bf68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x730>
    bf48:	str	wzr, [sp, #12]
    bf4c:	b	c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8b4>
    bf50:	cmp	w8, w9
    bf54:	b.cs	e5dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2da4>  // b.hs, b.nlast
    bf58:	ldr	x9, [x20, #16]
    bf5c:	mov	w10, #0xff                  	// #255
    bf60:	add	x8, x9, w8, uxtw #4
    bf64:	str	xzr, [x8]
    bf68:	strb	w10, [x8, #8]
    bf6c:	ldur	w9, [sp, #67]
    bf70:	ldr	w10, [sp, #64]
    bf74:	str	w9, [x8, #12]
    bf78:	stur	w10, [x8, #9]
    bf7c:	ldp	w8, w9, [x20, #24]
    bf80:	cmp	w8, w9
    bf84:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    bf88:	ldur	x10, [x29, #-40]
    bf8c:	add	w8, w8, #0x1
    bf90:	str	w8, [x26]
    bf94:	cbz	x10, bfc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x788>
    bf98:	clz	w10, w10
    bf9c:	mov	w11, #0x20                  	// #32
    bfa0:	cmp	w8, w9
    bfa4:	sub	w23, w11, w10
    bfa8:	b.cs	e5c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d88>  // b.hs, b.nlast
    bfac:	ldr	x9, [x20, #16]
    bfb0:	mov	w10, #0x2                   	// #2
    bfb4:	add	x8, x9, w8, uxtw #4
    bfb8:	str	x23, [x8]
    bfbc:	b	bfd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x7a0>
    bfc0:	cmp	w8, w9
    bfc4:	b.cs	e5f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dc0>  // b.hs, b.nlast
    bfc8:	ldr	x9, [x20, #16]
    bfcc:	mov	w10, #0xff                  	// #255
    bfd0:	add	x8, x9, w8, uxtw #4
    bfd4:	str	xzr, [x8]
    bfd8:	strb	w10, [x8, #8]
    bfdc:	ldur	w9, [sp, #67]
    bfe0:	ldr	w10, [sp, #64]
    bfe4:	str	w9, [x8, #12]
    bfe8:	stur	w10, [x8, #9]
    bfec:	ldp	w8, w9, [x20, #24]
    bff0:	cmp	w8, w9
    bff4:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    bff8:	add	w8, w8, #0x1
    bffc:	str	w8, [x26]
    c000:	ldr	x22, [x19]
    c004:	mov	x1, x21
    c008:	stp	x21, x20, [x29, #-144]
    c00c:	mov	x0, x22
    c010:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c014:	ldp	x1, x8, [x22, #32]
    c018:	add	x20, x22, #0x18
    c01c:	cmp	x1, x8
    c020:	b.eq	c044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x80c>  // b.none
    c024:	str	xzr, [x1, #8]
    c028:	ldur	q0, [x29, #-144]
    c02c:	add	x8, x1, #0x10
    c030:	stur	xzr, [x29, #-136]
    c034:	str	q0, [x1]
    c038:	stur	xzr, [x29, #-144]
    c03c:	str	x8, [x22, #32]
    c040:	b	c054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x81c>
    c044:	sub	x2, x29, #0x90
    c048:	mov	x0, x20
    c04c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c050:	ldr	x8, [x22, #32]
    c054:	ldr	x9, [x20]
    c058:	ldur	x20, [x29, #-136]
    c05c:	mov	x22, x27
    c060:	sub	x8, x8, x9
    c064:	lsr	x8, x8, #4
    c068:	add	w8, w8, #0x3
    c06c:	str	w8, [sp, #12]
    c070:	cbz	x20, c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8b4>
    c074:	add	x8, x20, #0x8
    c078:	cbz	x28, c098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x860>
    c07c:	ldaxr	w9, [x8]
    c080:	sub	w10, w9, #0x1
    c084:	stlxr	w11, w10, [x8]
    c088:	cbnz	w11, c07c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x844>
    c08c:	cmp	w9, #0x1
    c090:	b.eq	c0ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x874>  // b.none
    c094:	b	c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8b4>
    c098:	ldr	w9, [x8]
    c09c:	sub	w10, w9, #0x1
    c0a0:	str	w10, [x8]
    c0a4:	cmp	w9, #0x1
    c0a8:	b.ne	c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8b4>  // b.any
    c0ac:	mov	x21, x20
    c0b0:	ldr	x8, [x21], #12
    c0b4:	mov	x0, x20
    c0b8:	ldr	x8, [x8, #16]
    c0bc:	blr	x8
    c0c0:	cbz	x28, e4ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c74>
    c0c4:	ldaxr	w8, [x21]
    c0c8:	sub	w9, w8, #0x1
    c0cc:	stlxr	w10, w9, [x21]
    c0d0:	cbnz	w10, c0c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x88c>
    c0d4:	cmp	w8, #0x1
    c0d8:	b.ne	c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8b4>  // b.any
    c0dc:	ldr	x8, [x20]
    c0e0:	mov	x0, x20
    c0e4:	ldr	x8, [x8, #24]
    c0e8:	blr	x8
    c0ec:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c0f0:	ldr	d0, [x8]
    c0f4:	add	x8, sp, #0x40
    c0f8:	add	x8, x8, #0x10
    c0fc:	str	x8, [sp, #64]
    c100:	str	d0, [sp, #72]
    c104:	ldr	x9, [x19, #16]
    c108:	str	x8, [sp]
    c10c:	sub	x20, x29, #0x20
    c110:	ldr	x8, [x9, #216]
    c114:	cbz	x8, c180 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x948>
    c118:	ldr	x9, [x9, #208]
    c11c:	mov	w10, #0x1                   	// #1
    c120:	b	c13c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x904>
    c124:	mov	w10, wzr
    c128:	sxtb	w11, w11
    c12c:	tbnz	w11, #31, c19c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x964>
    c130:	subs	x8, x8, #0x1
    c134:	add	x9, x9, #0x1
    c138:	b.eq	c188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x950>  // b.none
    c13c:	ldrb	w11, [x9]
    c140:	tbz	w10, #0, c124 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8ec>
    c144:	sub	w10, w11, #0x30
    c148:	cmp	w10, #0xa
    c14c:	mov	w10, #0x1                   	// #1
    c150:	b.cc	c128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8f0>  // b.lo, b.ul, b.last
    c154:	and	w12, w11, #0xffffffdf
    c158:	sub	w12, w12, #0x41
    c15c:	and	w12, w12, #0xff
    c160:	cmp	w12, #0x1a
    c164:	b.cc	c128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8f0>  // b.lo, b.ul, b.last
    c168:	cmp	w11, #0x2e
    c16c:	mov	w10, #0x1                   	// #1
    c170:	b.eq	c130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8f8>  // b.none
    c174:	cmp	w11, #0x5f
    c178:	b.eq	c130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8f8>  // b.none
    c17c:	b	c124 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8ec>
    c180:	add	x25, sp, #0x10
    c184:	b	c190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x958>
    c188:	add	x25, sp, #0x10
    c18c:	cbz	w10, c1ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x974>
    c190:	mov	x27, xzr
    c194:	mov	w26, #0x8                   	// #8
    c198:	b	c1b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x97c>
    c19c:	add	x25, sp, #0x10
    c1a0:	mov	w26, #0x2                   	// #2
    c1a4:	mov	w27, #0x8                   	// #8
    c1a8:	b	c1b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x97c>
    c1ac:	mov	w26, #0x2                   	// #2
    c1b0:	mov	w27, #0x7                   	// #7
    c1b4:	mov	w0, #0x220                 	// #544
    c1b8:	bl	0 <_Znwm>
    c1bc:	movi	v0.2s, #0x1
    c1c0:	add	x8, x22, #0x10
    c1c4:	str	d0, [x0, #8]
    c1c8:	movi	v0.2d, #0x0
    c1cc:	mov	x23, x0
    c1d0:	str	x8, [x0]
    c1d4:	stp	q0, q0, [x0, #48]
    c1d8:	stp	q0, q0, [x0, #80]
    c1dc:	stp	q0, q0, [x0, #112]
    c1e0:	stp	q0, q0, [x0, #144]
    c1e4:	stp	q0, q0, [x0, #176]
    c1e8:	stp	q0, q0, [x0, #208]
    c1ec:	stp	q0, q0, [x0, #240]
    c1f0:	stp	q0, q0, [x0, #272]
    c1f4:	stp	q0, q0, [x0, #304]
    c1f8:	stp	q0, q0, [x0, #336]
    c1fc:	stp	q0, q0, [x0, #368]
    c200:	stp	q0, q0, [x0, #400]
    c204:	stp	q0, q0, [x0, #432]
    c208:	stp	q0, q0, [x0, #464]
    c20c:	stp	q0, q0, [x0, #496]
    c210:	str	q0, [x0, #528]
    c214:	str	q0, [x23, #32]!
    c218:	ldr	d0, [x24]
    c21c:	mov	x22, x0
    c220:	mov	w8, #0x10                  	// #16
    c224:	str	x23, [x22, #16]!
    c228:	str	d0, [x0, #24]
    c22c:	str	x8, [x23]
    c230:	ldp	w8, w9, [x0, #24]
    c234:	ldur	w11, [x20, #3]
    c238:	ldur	w12, [x29, #-32]
    c23c:	mov	w10, #0xff                  	// #255
    c240:	cmp	w8, w9
    c244:	strb	w10, [x0, #40]
    c248:	str	w11, [x0, #44]
    c24c:	stur	w12, [x0, #41]
    c250:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c254:	add	w8, w8, #0x1
    c258:	mov	x21, x0
    c25c:	cmp	w8, w9
    c260:	str	w8, [x0, #24]
    c264:	b.cs	e4c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c8c>  // b.hs, b.nlast
    c268:	ldr	x9, [x21, #16]
    c26c:	mov	w10, #0x6                   	// #6
    c270:	add	x8, x9, w8, uxtw #4
    c274:	str	xzr, [x8]
    c278:	strb	w10, [x8, #8]
    c27c:	ldur	w9, [x20, #3]
    c280:	ldur	w10, [x29, #-32]
    c284:	str	w9, [x8, #12]
    c288:	stur	w10, [x8, #9]
    c28c:	ldp	w8, w9, [x21, #24]
    c290:	cmp	w8, w9
    c294:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c298:	add	w8, w8, #0x1
    c29c:	cmp	w8, w9
    c2a0:	str	w8, [x21, #24]
    c2a4:	b.cs	e4e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ca8>  // b.hs, b.nlast
    c2a8:	ldr	x9, [x21, #16]
    c2ac:	add	x8, x9, w8, uxtw #4
    c2b0:	str	x27, [x8]
    c2b4:	strb	w26, [x8, #8]
    c2b8:	ldur	w9, [x25, #3]
    c2bc:	ldr	w10, [x25]
    c2c0:	str	w9, [x8, #12]
    c2c4:	stur	w10, [x8, #9]
    c2c8:	ldp	w8, w9, [x21, #24]
    c2cc:	cmp	w8, w9
    c2d0:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c2d4:	add	w8, w8, #0x1
    c2d8:	str	w8, [x21, #24]
    c2dc:	ldr	x23, [x19]
    c2e0:	mov	x1, x22
    c2e4:	stp	x22, x21, [sp, #48]
    c2e8:	mov	x0, x23
    c2ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c2f0:	ldp	x1, x8, [x23, #32]
    c2f4:	add	x22, x23, #0x18
    c2f8:	cmp	x1, x8
    c2fc:	b.eq	c32c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xaf4>  // b.none
    c300:	str	xzr, [x1, #8]
    c304:	ldr	q0, [sp, #48]
    c308:	add	x20, x1, #0x10
    c30c:	str	xzr, [sp, #56]
    c310:	str	q0, [x1]
    c314:	str	xzr, [sp, #48]
    c318:	str	x20, [x23, #32]
    c31c:	ldr	x21, [sp, #56]
    c320:	ldr	x22, [x22]
    c324:	cbnz	x21, c348 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb10>
    c328:	b	c3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb88>
    c32c:	add	x2, sp, #0x30
    c330:	mov	x0, x22
    c334:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c338:	ldr	x20, [x23, #32]
    c33c:	ldr	x21, [sp, #56]
    c340:	ldr	x22, [x22]
    c344:	cbz	x21, c3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb88>
    c348:	add	x8, x21, #0x8
    c34c:	cbz	x28, c36c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb34>
    c350:	ldaxr	w9, [x8]
    c354:	sub	w10, w9, #0x1
    c358:	stlxr	w11, w10, [x8]
    c35c:	cbnz	w11, c350 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb18>
    c360:	cmp	w9, #0x1
    c364:	b.eq	c380 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb48>  // b.none
    c368:	b	c3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb88>
    c36c:	ldr	w9, [x8]
    c370:	sub	w10, w9, #0x1
    c374:	str	w10, [x8]
    c378:	cmp	w9, #0x1
    c37c:	b.ne	c3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb88>  // b.any
    c380:	mov	x23, x21
    c384:	ldr	x8, [x23], #12
    c388:	mov	x0, x21
    c38c:	ldr	x8, [x8, #16]
    c390:	blr	x8
    c394:	cbz	x28, e47c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c44>
    c398:	ldaxr	w8, [x23]
    c39c:	sub	w9, w8, #0x1
    c3a0:	stlxr	w10, w9, [x23]
    c3a4:	cbnz	w10, c398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb60>
    c3a8:	cmp	w8, #0x1
    c3ac:	b.ne	c3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb88>  // b.any
    c3b0:	ldr	x8, [x21]
    c3b4:	mov	x0, x21
    c3b8:	ldr	x8, [x8, #24]
    c3bc:	blr	x8
    c3c0:	ldr	x8, [x19, #16]
    c3c4:	ldr	x21, [x8, #216]
    c3c8:	cbz	x21, c428 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xbf0>
    c3cc:	ldr	x23, [x8, #208]
    c3d0:	ldp	w8, w9, [sp, #72]
    c3d4:	ldrb	w24, [x23]
    c3d8:	cmp	w8, w9
    c3dc:	b.cs	c40c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xbd4>  // b.hs, b.nlast
    c3e0:	ldr	x9, [sp, #64]
    c3e4:	str	w24, [x9, w8, uxtw #2]
    c3e8:	ldp	w8, w9, [sp, #72]
    c3ec:	cmp	w8, w9
    c3f0:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c3f4:	add	w8, w8, #0x1
    c3f8:	subs	x21, x21, #0x1
    c3fc:	add	x23, x23, #0x1
    c400:	str	w8, [sp, #72]
    c404:	b.ne	c3d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb9c>  // b.any
    c408:	b	c428 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xbf0>
    c40c:	ldr	x1, [sp]
    c410:	add	x0, sp, #0x40
    c414:	mov	w3, #0x4                   	// #4
    c418:	mov	x2, xzr
    c41c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c420:	ldr	w8, [sp, #72]
    c424:	b	c3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xba8>
    c428:	ldr	x0, [x19]
    c42c:	sub	x8, x20, x22
    c430:	lsr	x8, x8, #4
    c434:	add	w3, w8, #0x3
    c438:	add	x2, sp, #0x40
    c43c:	mov	w1, #0x10                  	// #16
    c440:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c444:	str	wzr, [sp, #72]
    c448:	ldr	x8, [x19, #16]
    c44c:	ldr	x20, [x8, #16]
    c450:	add	x27, x8, #0x8
    c454:	cmp	x27, x20
    c458:	b.eq	cdb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1580>  // b.none
    c45c:	add	x8, sp, #0x10
    c460:	add	x21, x19, #0x2a8
    c464:	add	x22, x19, #0x18
    c468:	add	x28, x8, #0x10
    c46c:	ldrb	w8, [x20]
    c470:	tbnz	w8, #2, e774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f3c>
    c474:	sub	x8, x20, #0x38
    c478:	cmp	x20, #0x0
    c47c:	csel	x23, xzr, x8, eq  // eq = none
    c480:	mov	x0, x23
    c484:	bl	0 <_ZNK4llvm5Value7getNameEv>
    c488:	ldrb	w8, [x19, #664]
    c48c:	mov	x24, x0
    c490:	mov	x25, x1
    c494:	cbz	w8, c4a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xc70>
    c498:	mov	x0, x21
    c49c:	mov	x1, x24
    c4a0:	mov	x2, x25
    c4a4:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    c4a8:	cmn	x24, #0x2
    c4ac:	b.eq	e634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dfc>  // b.none
    c4b0:	cmn	x24, #0x1
    c4b4:	b.eq	e654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e1c>  // b.none
    c4b8:	ldr	x26, [x19, #8]
    c4bc:	mov	x0, x24
    c4c0:	mov	x1, x25
    c4c4:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    c4c8:	lsr	x8, x25, #32
    c4cc:	cbnz	x8, e674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e3c>
    c4d0:	orr	x2, x25, x0, lsl #32
    c4d4:	mov	x0, x26
    c4d8:	mov	x1, x24
    c4dc:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    c4e0:	ldp	w8, w9, [sp, #72]
    c4e4:	mov	x24, x0
    c4e8:	cmp	w8, w9
    c4ec:	b.cs	cbd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x13a0>  // b.hs, b.nlast
    c4f0:	ldr	x9, [sp, #64]
    c4f4:	str	w24, [x9, w8, uxtw #2]
    c4f8:	ldp	w8, w9, [sp, #72]
    c4fc:	cmp	w8, w9
    c500:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c504:	add	w8, w8, #0x1
    c508:	mov	x0, x23
    c50c:	str	w8, [sp, #72]
    c510:	bl	0 <_ZNK4llvm5Value7getNameEv>
    c514:	ldp	w8, w9, [sp, #72]
    c518:	mov	x24, x1
    c51c:	cmp	w8, w9
    c520:	b.cs	cbf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x13bc>  // b.hs, b.nlast
    c524:	ldr	x9, [sp, #64]
    c528:	str	w24, [x9, w8, uxtw #2]
    c52c:	ldp	w8, w9, [sp, #72]
    c530:	cmp	w8, w9
    c534:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c538:	add	w8, w8, #0x1
    c53c:	str	w8, [sp, #72]
    c540:	ldr	w10, [x19, #72]
    c544:	ldr	x11, [x19, #56]
    c548:	cbz	w10, c5a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd70>
    c54c:	ldr	x12, [x23, #24]
    c550:	orr	x13, x12, #0x8
    c554:	cmn	x13, #0x8
    c558:	b.eq	e694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e5c>  // b.none
    c55c:	ubfx	x13, x12, #4, #28
    c560:	eor	w14, w13, w12, lsr #9
    c564:	sub	w13, w10, #0x1
    c568:	and	w14, w14, w13
    c56c:	add	x15, x11, w14, uxtw #4
    c570:	ldr	x16, [x15]
    c574:	cmp	x16, x12
    c578:	b.eq	c5ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd74>  // b.none
    c57c:	mov	w17, #0x1                   	// #1
    c580:	cmn	x16, #0x8
    c584:	b.eq	c5a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd70>  // b.none
    c588:	add	w14, w14, w17
    c58c:	and	w14, w14, w13
    c590:	add	x15, x11, w14, uxtw #4
    c594:	ldr	x16, [x15]
    c598:	add	w17, w17, #0x1
    c59c:	cmp	x16, x12
    c5a0:	b.eq	c5ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd74>  // b.none
    c5a4:	b	c580 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd48>
    c5a8:	add	x15, x11, x10, lsl #4
    c5ac:	add	x10, x11, x10, lsl #4
    c5b0:	cmp	x15, x10
    c5b4:	b.eq	e6b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e7c>  // b.none
    c5b8:	ldr	w10, [x15, #8]
    c5bc:	cmp	w8, w9
    c5c0:	sub	w24, w10, #0x1
    c5c4:	b.cs	cc10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x13d8>  // b.hs, b.nlast
    c5c8:	ldr	x9, [sp, #64]
    c5cc:	str	w24, [x9, w8, uxtw #2]
    c5d0:	ldp	w8, w9, [sp, #72]
    c5d4:	cmp	w8, w9
    c5d8:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c5dc:	add	w8, w8, #0x1
    c5e0:	str	w8, [sp, #72]
    c5e4:	ldr	x10, [x23]
    c5e8:	cbz	x10, e704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ecc>
    c5ec:	ldr	w10, [x10, #8]
    c5f0:	and	w11, w10, #0xff
    c5f4:	cmp	w11, #0xf
    c5f8:	b.ne	e724 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2eec>  // b.any
    c5fc:	ldrb	w11, [x23, #80]
    c600:	lsr	w10, w10, #6
    c604:	and	w10, w10, #0x3fffffc
    c608:	cmp	w8, w9
    c60c:	bfxil	w10, w11, #0, #1
    c610:	orr	w24, w10, #0x2
    c614:	b.cs	cc2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x13f4>  // b.hs, b.nlast
    c618:	ldr	x9, [sp, #64]
    c61c:	str	w24, [x9, w8, uxtw #2]
    c620:	ldp	w8, w9, [sp, #72]
    c624:	cmp	w8, w9
    c628:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c62c:	add	w8, w8, #0x1
    c630:	mov	x0, x23
    c634:	str	w8, [sp, #72]
    c638:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    c63c:	tbz	w0, #0, c648 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xe10>
    c640:	mov	w24, wzr
    c644:	b	c664 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xe2c>
    c648:	mov	x0, x23
    c64c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    c650:	tbnz	w0, #0, e8ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3074>
    c654:	ldur	x1, [x23, #-24]
    c658:	mov	x0, x22
    c65c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    c660:	add	w24, w0, #0x1
    c664:	ldp	w8, w9, [sp, #72]
    c668:	cmp	w8, w9
    c66c:	b.cs	cc48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1410>  // b.hs, b.nlast
    c670:	ldr	x9, [sp, #64]
    c674:	str	w24, [x9, w8, uxtw #2]
    c678:	ldp	w8, w9, [sp, #72]
    c67c:	cmp	w8, w9
    c680:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c684:	add	w8, w8, #0x1
    c688:	str	w8, [sp, #72]
    c68c:	ldr	w10, [x23, #32]
    c690:	and	x10, x10, #0xf
    c694:	cmp	w10, #0xb
    c698:	b.cs	e6d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e9c>  // b.hs, b.nlast
    c69c:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c6a0:	add	x11, x11, #0x0
    c6a4:	ldr	w24, [x11, x10, lsl #2]
    c6a8:	cmp	w8, w9
    c6ac:	b.cs	cc64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x142c>  // b.hs, b.nlast
    c6b0:	ldr	x9, [sp, #64]
    c6b4:	str	w24, [x9, w8, uxtw #2]
    c6b8:	ldp	w8, w9, [sp, #72]
    c6bc:	cmp	w8, w9
    c6c0:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c6c4:	add	w8, w8, #0x1
    c6c8:	str	w8, [sp, #72]
    c6cc:	ldrh	w10, [x23, #34]
    c6d0:	mov	w12, #0x1                   	// #1
    c6d4:	and	w11, w10, #0x1f
    c6d8:	tst	w10, #0x1f
    c6dc:	add	w10, w11, #0xff
    c6e0:	orr	w10, w10, #0x100
    c6e4:	csel	w10, wzr, w10, eq  // eq = none
    c6e8:	lsl	w11, w10, #23
    c6ec:	lsl	x10, x12, x10
    c6f0:	and	w10, w10, w11, asr #31
    c6f4:	clz	w10, w10
    c6f8:	cmp	w8, w9
    c6fc:	mov	w9, #0x20                  	// #32
    c700:	sub	w24, w9, w10
    c704:	b.cs	cc80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1448>  // b.hs, b.nlast
    c708:	ldr	x9, [sp, #64]
    c70c:	str	w24, [x9, w8, uxtw #2]
    c710:	ldp	w8, w9, [sp, #72]
    c714:	cmp	w8, w9
    c718:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c71c:	add	w8, w8, #0x1
    c720:	str	w8, [sp, #72]
    c724:	ldrb	w10, [x23, #34]
    c728:	tbnz	w10, #6, c754 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf1c>
    c72c:	cmp	w8, w9
    c730:	b.cs	cd7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1544>  // b.hs, b.nlast
    c734:	ldr	x9, [sp, #64]
    c738:	str	wzr, [x9, w8, uxtw #2]
    c73c:	ldp	w8, w9, [sp, #72]
    c740:	cmp	w8, w9
    c744:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c748:	add	w8, w8, #0x1
    c74c:	str	w8, [sp, #72]
    c750:	b	c820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfe8>
    c754:	mov	x0, x23
    c758:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    c75c:	str	x28, [sp, #16]
    c760:	cbz	x0, c7b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf78>
    c764:	mov	x24, x0
    c768:	mov	x25, x1
    c76c:	cmp	x1, #0x10
    c770:	mov	x0, x28
    c774:	stur	x1, [x29, #-32]
    c778:	b.cc	c798 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf60>  // b.lo, b.ul, b.last
    c77c:	add	x0, sp, #0x10
    c780:	sub	x1, x29, #0x20
    c784:	mov	x2, xzr
    c788:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    c78c:	ldur	x8, [x29, #-32]
    c790:	str	x0, [sp, #16]
    c794:	str	x8, [sp, #32]
    c798:	cbz	x25, c7c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf90>
    c79c:	cmp	x25, #0x1
    c7a0:	b.ne	c7bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf84>  // b.any
    c7a4:	ldrb	w8, [x24]
    c7a8:	strb	w8, [x0]
    c7ac:	b	c7c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf90>
    c7b0:	str	xzr, [sp, #24]
    c7b4:	strb	wzr, [sp, #32]
    c7b8:	b	c7d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfa0>
    c7bc:	mov	x1, x24
    c7c0:	mov	x2, x25
    c7c4:	bl	0 <memcpy>
    c7c8:	ldur	x8, [x29, #-32]
    c7cc:	ldr	x9, [sp, #16]
    c7d0:	str	x8, [sp, #24]
    c7d4:	strb	wzr, [x9, x8]
    c7d8:	sub	x0, x29, #0x50
    c7dc:	add	x1, sp, #0x10
    c7e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c7e4:	ldp	w8, w9, [sp, #72]
    c7e8:	ldr	w24, [x0]
    c7ec:	cmp	w8, w9
    c7f0:	b.cs	cd98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1560>  // b.hs, b.nlast
    c7f4:	ldr	x9, [sp, #64]
    c7f8:	str	w24, [x9, w8, uxtw #2]
    c7fc:	ldp	w8, w9, [sp, #72]
    c800:	cmp	w8, w9
    c804:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c808:	ldr	x0, [sp, #16]
    c80c:	add	w8, w8, #0x1
    c810:	str	w8, [sp, #72]
    c814:	cmp	x0, x28
    c818:	b.eq	c820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfe8>  // b.none
    c81c:	bl	0 <_ZdlPv>
    c820:	ldr	w8, [x23, #32]
    c824:	mov	w9, #0x1cf0                	// #7408
    c828:	tst	w8, w9
    c82c:	b.eq	cb44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x130c>  // b.none
    c830:	ubfx	w24, w8, #4, #2
    c834:	cmp	w24, #0x3
    c838:	b.eq	e6ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2eb4>  // b.none
    c83c:	ldp	w8, w9, [sp, #72]
    c840:	cmp	w8, w9
    c844:	b.cs	cc9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1464>  // b.hs, b.nlast
    c848:	ldr	x9, [sp, #64]
    c84c:	str	w24, [x9, w8, uxtw #2]
    c850:	ldp	w8, w9, [sp, #72]
    c854:	cmp	w8, w9
    c858:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c85c:	add	w8, w8, #0x1
    c860:	str	w8, [sp, #72]
    c864:	ldr	w10, [x23, #32]
    c868:	ubfx	w24, w10, #10, #3
    c86c:	cmp	w24, #0x5
    c870:	b.cs	e7b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f7c>  // b.hs, b.nlast
    c874:	cmp	w8, w9
    c878:	b.cs	ccb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1480>  // b.hs, b.nlast
    c87c:	ldr	x9, [sp, #64]
    c880:	str	w24, [x9, w8, uxtw #2]
    c884:	ldp	w8, w9, [sp, #72]
    c888:	cmp	w8, w9
    c88c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c890:	add	w8, w8, #0x1
    c894:	str	w8, [sp, #72]
    c898:	ldr	w10, [x23, #32]
    c89c:	ubfx	x10, x10, #6, #2
    c8a0:	cmp	w10, #0x3
    c8a4:	b.eq	e75c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f24>  // b.none
    c8a8:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c8ac:	add	x11, x11, #0x0
    c8b0:	ldr	w24, [x11, x10, lsl #2]
    c8b4:	cmp	w8, w9
    c8b8:	b.cs	ccd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x149c>  // b.hs, b.nlast
    c8bc:	ldr	x9, [sp, #64]
    c8c0:	str	w24, [x9, w8, uxtw #2]
    c8c4:	ldp	w8, w9, [sp, #72]
    c8c8:	cmp	w8, w9
    c8cc:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c8d0:	add	w8, w8, #0x1
    c8d4:	str	w8, [sp, #72]
    c8d8:	ldrb	w10, [x23, #80]
    c8dc:	cmp	w8, w9
    c8e0:	ubfx	w24, w10, #1, #1
    c8e4:	b.cs	ccf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x14b8>  // b.hs, b.nlast
    c8e8:	ldr	x9, [sp, #64]
    c8ec:	str	w24, [x9, w8, uxtw #2]
    c8f0:	ldp	w8, w9, [sp, #72]
    c8f4:	cmp	w8, w9
    c8f8:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c8fc:	add	w8, w8, #0x1
    c900:	str	w8, [sp, #72]
    c904:	ldr	w10, [x23, #32]
    c908:	ubfx	w24, w10, #8, #2
    c90c:	cmp	w24, #0x3
    c910:	b.eq	e744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f0c>  // b.none
    c914:	cmp	w8, w9
    c918:	b.cs	cd0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x14d4>  // b.hs, b.nlast
    c91c:	ldr	x9, [sp, #64]
    c920:	str	w24, [x9, w8, uxtw #2]
    c924:	ldp	w8, w9, [sp, #72]
    c928:	cmp	w8, w9
    c92c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c930:	add	w8, w8, #0x1
    c934:	str	w8, [sp, #72]
    c938:	ldr	x1, [x23, #48]
    c93c:	cbz	x1, cb74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x133c>
    c940:	mov	x0, x22
    c944:	bl	0 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE>
    c948:	ldp	w8, w9, [sp, #72]
    c94c:	mov	w24, w0
    c950:	cmp	w8, w9
    c954:	b.cs	cb80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1348>  // b.hs, b.nlast
    c958:	ldr	x9, [sp, #64]
    c95c:	str	w24, [x9, w8, uxtw #2]
    c960:	ldp	w8, w9, [sp, #72]
    c964:	cmp	w8, w9
    c968:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    c96c:	add	w8, w8, #0x1
    c970:	str	w8, [sp, #72]
    c974:	ldr	x8, [x23, #72]
    c978:	cbz	x8, ca04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11cc>
    c97c:	mov	w9, #0xffffffff            	// #-1
    c980:	mov	x0, x23
    c984:	str	w9, [sp, #16]
    c988:	str	x8, [sp, #24]
    c98c:	bl	0 <_ZNK4llvm5Value10getContextEv>
    c990:	add	x1, sp, #0x10
    c994:	mov	w2, #0x1                   	// #1
    c998:	bl	0 <_ZN4llvm13AttributeList3getERNS_11LLVMContextENS_8ArrayRefISt4pairIjNS_12AttributeSetEEEE>
    c99c:	cbz	x0, ca04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11cc>
    c9a0:	ldr	w8, [x19, #432]
    c9a4:	ldr	x9, [x19, #416]
    c9a8:	cbz	w8, cb9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1364>
    c9ac:	orr	x10, x0, #0x4
    c9b0:	cmn	x10, #0x4
    c9b4:	b.eq	e7cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f94>  // b.none
    c9b8:	ubfx	x10, x0, #4, #28
    c9bc:	eor	w11, w10, w0, lsr #9
    c9c0:	sub	w10, w8, #0x1
    c9c4:	and	w11, w10, w11
    c9c8:	add	x12, x9, w11, uxtw #4
    c9cc:	ldr	x13, [x12]
    c9d0:	cmp	x13, x0
    c9d4:	b.eq	cba0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1368>  // b.none
    c9d8:	mov	w14, #0x1                   	// #1
    c9dc:	cmn	x13, #0x4
    c9e0:	b.eq	cb9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1364>  // b.none
    c9e4:	add	w11, w11, w14
    c9e8:	and	w11, w11, w10
    c9ec:	add	x12, x9, w11, uxtw #4
    c9f0:	ldr	x13, [x12]
    c9f4:	add	w14, w14, #0x1
    c9f8:	cmp	x13, x0
    c9fc:	b.eq	cba0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1368>  // b.none
    ca00:	b	c9dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11a4>
    ca04:	mov	w24, wzr
    ca08:	ldp	w8, w9, [sp, #72]
    ca0c:	cmp	w8, w9
    ca10:	b.cs	cbbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1384>  // b.hs, b.nlast
    ca14:	ldr	x9, [sp, #64]
    ca18:	str	w24, [x9, w8, uxtw #2]
    ca1c:	ldp	w8, w9, [sp, #72]
    ca20:	cmp	w8, w9
    ca24:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    ca28:	add	w8, w8, #0x1
    ca2c:	str	w8, [sp, #72]
    ca30:	ldr	w10, [x23, #32]
    ca34:	cmp	w8, w9
    ca38:	ubfx	w24, w10, #14, #1
    ca3c:	b.cs	cd28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x14f0>  // b.hs, b.nlast
    ca40:	ldr	x9, [sp, #64]
    ca44:	str	w24, [x9, w8, uxtw #2]
    ca48:	ldp	w8, w9, [sp, #72]
    ca4c:	cmp	w8, w9
    ca50:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    ca54:	add	w8, w8, #0x1
    ca58:	mov	x0, x23
    ca5c:	str	w8, [sp, #72]
    ca60:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    ca64:	ldrb	w8, [x19, #664]
    ca68:	mov	x24, x0
    ca6c:	mov	x25, x1
    ca70:	cbz	w8, ca84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x124c>
    ca74:	mov	x0, x21
    ca78:	mov	x1, x24
    ca7c:	mov	x2, x25
    ca80:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    ca84:	cmn	x24, #0x2
    ca88:	b.eq	e634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dfc>  // b.none
    ca8c:	cmn	x24, #0x1
    ca90:	b.eq	e654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e1c>  // b.none
    ca94:	ldr	x26, [x19, #8]
    ca98:	mov	x0, x24
    ca9c:	mov	x1, x25
    caa0:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    caa4:	lsr	x8, x25, #32
    caa8:	cbnz	x8, e674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e3c>
    caac:	orr	x2, x25, x0, lsl #32
    cab0:	mov	x0, x26
    cab4:	mov	x1, x24
    cab8:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    cabc:	ldp	w8, w9, [sp, #72]
    cac0:	mov	x24, x0
    cac4:	cmp	w8, w9
    cac8:	b.cs	cd44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x150c>  // b.hs, b.nlast
    cacc:	ldr	x9, [sp, #64]
    cad0:	str	w24, [x9, w8, uxtw #2]
    cad4:	ldp	w8, w9, [sp, #72]
    cad8:	cmp	w8, w9
    cadc:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    cae0:	add	w8, w8, #0x1
    cae4:	mov	x0, x23
    cae8:	str	w8, [sp, #72]
    caec:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    caf0:	ldp	w8, w9, [sp, #72]
    caf4:	mov	x23, x1
    caf8:	cmp	w8, w9
    cafc:	b.cs	cd60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1528>  // b.hs, b.nlast
    cb00:	ldr	x9, [sp, #64]
    cb04:	str	w23, [x9, w8, uxtw #2]
    cb08:	ldp	w8, w9, [sp, #72]
    cb0c:	cmp	w8, w9
    cb10:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    cb14:	mov	w3, wzr
    cb18:	add	w8, w8, #0x1
    cb1c:	str	w8, [sp, #72]
    cb20:	ldr	x0, [x19]
    cb24:	add	x2, sp, #0x40
    cb28:	mov	w1, #0x7                   	// #7
    cb2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb30:	str	wzr, [sp, #72]
    cb34:	ldr	x20, [x20, #8]
    cb38:	cmp	x27, x20
    cb3c:	b.ne	c46c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xc34>  // b.any
    cb40:	b	cdb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x157c>
    cb44:	tst	w8, #0x300
    cb48:	b.ne	c830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xff8>  // b.any
    cb4c:	ldrb	w9, [x23, #80]
    cb50:	tbnz	w9, #1, c830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xff8>
    cb54:	ldr	x9, [x23, #48]
    cb58:	cbnz	x9, c830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xff8>
    cb5c:	tst	w8, #0xc000
    cb60:	b.ne	c830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xff8>  // b.any
    cb64:	ldr	x9, [x23, #72]
    cb68:	ldr	w3, [sp, #12]
    cb6c:	cbz	x9, cb20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x12e8>
    cb70:	b	c830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xff8>
    cb74:	mov	w24, wzr
    cb78:	cmp	w8, w9
    cb7c:	b.cc	c958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1120>  // b.lo, b.ul, b.last
    cb80:	ldr	x1, [sp]
    cb84:	add	x0, sp, #0x40
    cb88:	mov	w3, #0x4                   	// #4
    cb8c:	mov	x2, xzr
    cb90:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cb94:	ldr	w8, [sp, #72]
    cb98:	b	c958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1120>
    cb9c:	add	x12, x9, x8, lsl #4
    cba0:	add	x8, x9, x8, lsl #4
    cba4:	cmp	x12, x8
    cba8:	b.eq	e84c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3014>  // b.none
    cbac:	ldr	w24, [x12, #8]
    cbb0:	ldp	w8, w9, [sp, #72]
    cbb4:	cmp	w8, w9
    cbb8:	b.cc	ca14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11dc>  // b.lo, b.ul, b.last
    cbbc:	ldr	x1, [sp]
    cbc0:	add	x0, sp, #0x40
    cbc4:	mov	w3, #0x4                   	// #4
    cbc8:	mov	x2, xzr
    cbcc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cbd0:	ldr	w8, [sp, #72]
    cbd4:	b	ca14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11dc>
    cbd8:	ldr	x1, [sp]
    cbdc:	add	x0, sp, #0x40
    cbe0:	mov	w3, #0x4                   	// #4
    cbe4:	mov	x2, xzr
    cbe8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cbec:	ldr	w8, [sp, #72]
    cbf0:	b	c4f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xcb8>
    cbf4:	ldr	x1, [sp]
    cbf8:	add	x0, sp, #0x40
    cbfc:	mov	w3, #0x4                   	// #4
    cc00:	mov	x2, xzr
    cc04:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cc08:	ldr	w8, [sp, #72]
    cc0c:	b	c524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xcec>
    cc10:	ldr	x1, [sp]
    cc14:	add	x0, sp, #0x40
    cc18:	mov	w3, #0x4                   	// #4
    cc1c:	mov	x2, xzr
    cc20:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cc24:	ldr	w8, [sp, #72]
    cc28:	b	c5c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd90>
    cc2c:	ldr	x1, [sp]
    cc30:	add	x0, sp, #0x40
    cc34:	mov	w3, #0x4                   	// #4
    cc38:	mov	x2, xzr
    cc3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cc40:	ldr	w8, [sp, #72]
    cc44:	b	c618 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xde0>
    cc48:	ldr	x1, [sp]
    cc4c:	add	x0, sp, #0x40
    cc50:	mov	w3, #0x4                   	// #4
    cc54:	mov	x2, xzr
    cc58:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cc5c:	ldr	w8, [sp, #72]
    cc60:	b	c670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xe38>
    cc64:	ldr	x1, [sp]
    cc68:	add	x0, sp, #0x40
    cc6c:	mov	w3, #0x4                   	// #4
    cc70:	mov	x2, xzr
    cc74:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cc78:	ldr	w8, [sp, #72]
    cc7c:	b	c6b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xe78>
    cc80:	ldr	x1, [sp]
    cc84:	add	x0, sp, #0x40
    cc88:	mov	w3, #0x4                   	// #4
    cc8c:	mov	x2, xzr
    cc90:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cc94:	ldr	w8, [sp, #72]
    cc98:	b	c708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xed0>
    cc9c:	ldr	x1, [sp]
    cca0:	add	x0, sp, #0x40
    cca4:	mov	w3, #0x4                   	// #4
    cca8:	mov	x2, xzr
    ccac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ccb0:	ldr	w8, [sp, #72]
    ccb4:	b	c848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1010>
    ccb8:	ldr	x1, [sp]
    ccbc:	add	x0, sp, #0x40
    ccc0:	mov	w3, #0x4                   	// #4
    ccc4:	mov	x2, xzr
    ccc8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cccc:	ldr	w8, [sp, #72]
    ccd0:	b	c87c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1044>
    ccd4:	ldr	x1, [sp]
    ccd8:	add	x0, sp, #0x40
    ccdc:	mov	w3, #0x4                   	// #4
    cce0:	mov	x2, xzr
    cce4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cce8:	ldr	w8, [sp, #72]
    ccec:	b	c8bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1084>
    ccf0:	ldr	x1, [sp]
    ccf4:	add	x0, sp, #0x40
    ccf8:	mov	w3, #0x4                   	// #4
    ccfc:	mov	x2, xzr
    cd00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cd04:	ldr	w8, [sp, #72]
    cd08:	b	c8e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x10b0>
    cd0c:	ldr	x1, [sp]
    cd10:	add	x0, sp, #0x40
    cd14:	mov	w3, #0x4                   	// #4
    cd18:	mov	x2, xzr
    cd1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cd20:	ldr	w8, [sp, #72]
    cd24:	b	c91c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x10e4>
    cd28:	ldr	x1, [sp]
    cd2c:	add	x0, sp, #0x40
    cd30:	mov	w3, #0x4                   	// #4
    cd34:	mov	x2, xzr
    cd38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cd3c:	ldr	w8, [sp, #72]
    cd40:	b	ca40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1208>
    cd44:	ldr	x1, [sp]
    cd48:	add	x0, sp, #0x40
    cd4c:	mov	w3, #0x4                   	// #4
    cd50:	mov	x2, xzr
    cd54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cd58:	ldr	w8, [sp, #72]
    cd5c:	b	cacc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1294>
    cd60:	ldr	x1, [sp]
    cd64:	add	x0, sp, #0x40
    cd68:	mov	w3, #0x4                   	// #4
    cd6c:	mov	x2, xzr
    cd70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cd74:	ldr	w8, [sp, #72]
    cd78:	b	cb00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x12c8>
    cd7c:	ldr	x1, [sp]
    cd80:	add	x0, sp, #0x40
    cd84:	mov	w3, #0x4                   	// #4
    cd88:	mov	x2, xzr
    cd8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cd90:	ldr	w8, [sp, #72]
    cd94:	b	c734 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xefc>
    cd98:	ldr	x1, [sp]
    cd9c:	add	x0, sp, #0x40
    cda0:	mov	w3, #0x4                   	// #4
    cda4:	mov	x2, xzr
    cda8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cdac:	ldr	w8, [sp, #72]
    cdb0:	b	c7f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfbc>
    cdb4:	ldr	x8, [x19, #16]
    cdb8:	ldr	x20, [x8, #32]
    cdbc:	add	x28, x8, #0x18
    cdc0:	cmp	x28, x20
    cdc4:	b.eq	d7e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1fb0>  // b.none
    cdc8:	add	x8, sp, #0x10
    cdcc:	add	x21, x19, #0x2a8
    cdd0:	add	x22, x19, #0x18
    cdd4:	add	x27, x8, #0x10
    cdd8:	ldrb	w8, [x20]
    cddc:	tbnz	w8, #2, e794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f5c>
    cde0:	sub	x8, x20, #0x38
    cde4:	cmp	x20, #0x0
    cde8:	csel	x23, xzr, x8, eq  // eq = none
    cdec:	mov	x0, x23
    cdf0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    cdf4:	ldrb	w8, [x19, #664]
    cdf8:	mov	x24, x0
    cdfc:	mov	x25, x1
    ce00:	cbz	w8, ce14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x15dc>
    ce04:	mov	x0, x21
    ce08:	mov	x1, x24
    ce0c:	mov	x2, x25
    ce10:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    ce14:	cmn	x24, #0x2
    ce18:	b.eq	e634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dfc>  // b.none
    ce1c:	cmn	x24, #0x1
    ce20:	b.eq	e654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e1c>  // b.none
    ce24:	ldr	x26, [x19, #8]
    ce28:	mov	x0, x24
    ce2c:	mov	x1, x25
    ce30:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    ce34:	lsr	x8, x25, #32
    ce38:	cbnz	x8, e674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e3c>
    ce3c:	orr	x2, x25, x0, lsl #32
    ce40:	mov	x0, x26
    ce44:	mov	x1, x24
    ce48:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    ce4c:	ldp	w8, w9, [sp, #72]
    ce50:	mov	x24, x0
    ce54:	cmp	w8, w9
    ce58:	b.cs	d598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d60>  // b.hs, b.nlast
    ce5c:	ldr	x9, [sp, #64]
    ce60:	str	w24, [x9, w8, uxtw #2]
    ce64:	ldp	w8, w9, [sp, #72]
    ce68:	cmp	w8, w9
    ce6c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    ce70:	add	w8, w8, #0x1
    ce74:	mov	x0, x23
    ce78:	str	w8, [sp, #72]
    ce7c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    ce80:	ldp	w8, w9, [sp, #72]
    ce84:	mov	x24, x1
    ce88:	cmp	w8, w9
    ce8c:	b.cs	d5b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d7c>  // b.hs, b.nlast
    ce90:	ldr	x9, [sp, #64]
    ce94:	str	w24, [x9, w8, uxtw #2]
    ce98:	ldp	w8, w9, [sp, #72]
    ce9c:	cmp	w8, w9
    cea0:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    cea4:	add	w8, w8, #0x1
    cea8:	str	w8, [sp, #72]
    ceac:	ldr	x10, [x23, #24]
    ceb0:	cbz	x10, e80c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2fd4>
    ceb4:	ldrb	w11, [x10, #8]
    ceb8:	cmp	w11, #0xc
    cebc:	b.ne	e82c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ff4>  // b.any
    cec0:	ldr	w11, [x19, #72]
    cec4:	ldr	x12, [x19, #56]
    cec8:	cbz	w11, cf24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16ec>
    cecc:	orr	x13, x10, #0x8
    ced0:	cmn	x13, #0x8
    ced4:	b.eq	e694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e5c>  // b.none
    ced8:	ubfx	x13, x10, #4, #28
    cedc:	eor	w14, w13, w10, lsr #9
    cee0:	sub	w13, w11, #0x1
    cee4:	and	w14, w13, w14
    cee8:	add	x15, x12, w14, uxtw #4
    ceec:	ldr	x16, [x15]
    cef0:	cmp	x16, x10
    cef4:	b.eq	cf28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16f0>  // b.none
    cef8:	mov	w17, #0x1                   	// #1
    cefc:	cmn	x16, #0x8
    cf00:	b.eq	cf24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16ec>  // b.none
    cf04:	add	w14, w14, w17
    cf08:	and	w14, w14, w13
    cf0c:	add	x15, x12, w14, uxtw #4
    cf10:	ldr	x16, [x15]
    cf14:	add	w17, w17, #0x1
    cf18:	cmp	x16, x10
    cf1c:	b.eq	cf28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16f0>  // b.none
    cf20:	b	cefc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16c4>
    cf24:	add	x15, x12, x11, lsl #4
    cf28:	add	x10, x12, x11, lsl #4
    cf2c:	cmp	x15, x10
    cf30:	b.eq	e6b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e7c>  // b.none
    cf34:	ldr	w10, [x15, #8]
    cf38:	cmp	w8, w9
    cf3c:	sub	w24, w10, #0x1
    cf40:	b.cs	d5d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d98>  // b.hs, b.nlast
    cf44:	ldr	x9, [sp, #64]
    cf48:	str	w24, [x9, w8, uxtw #2]
    cf4c:	ldp	w8, w9, [sp, #72]
    cf50:	cmp	w8, w9
    cf54:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    cf58:	add	w8, w8, #0x1
    cf5c:	str	w8, [sp, #72]
    cf60:	ldrh	w10, [x23, #18]
    cf64:	cmp	w8, w9
    cf68:	ubfx	w24, w10, #4, #10
    cf6c:	b.cs	d5ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1db4>  // b.hs, b.nlast
    cf70:	ldr	x9, [sp, #64]
    cf74:	str	w24, [x9, w8, uxtw #2]
    cf78:	ldp	w8, w9, [sp, #72]
    cf7c:	cmp	w8, w9
    cf80:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    cf84:	add	w8, w8, #0x1
    cf88:	mov	x0, x23
    cf8c:	str	w8, [sp, #72]
    cf90:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    cf94:	ldp	w8, w9, [sp, #72]
    cf98:	and	w24, w0, #0x1
    cf9c:	cmp	w8, w9
    cfa0:	b.cs	d608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1dd0>  // b.hs, b.nlast
    cfa4:	ldr	x9, [sp, #64]
    cfa8:	str	w24, [x9, w8, uxtw #2]
    cfac:	ldp	w8, w9, [sp, #72]
    cfb0:	cmp	w8, w9
    cfb4:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    cfb8:	add	w8, w8, #0x1
    cfbc:	str	w8, [sp, #72]
    cfc0:	ldr	w10, [x23, #32]
    cfc4:	and	x10, x10, #0xf
    cfc8:	cmp	w10, #0xb
    cfcc:	b.cs	e6d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e9c>  // b.hs, b.nlast
    cfd0:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cfd4:	add	x11, x11, #0x0
    cfd8:	ldr	w24, [x11, x10, lsl #2]
    cfdc:	cmp	w8, w9
    cfe0:	b.cs	d624 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1dec>  // b.hs, b.nlast
    cfe4:	ldr	x9, [sp, #64]
    cfe8:	str	w24, [x9, w8, uxtw #2]
    cfec:	ldp	w8, w9, [sp, #72]
    cff0:	cmp	w8, w9
    cff4:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    cff8:	add	w8, w8, #0x1
    cffc:	str	w8, [sp, #72]
    d000:	ldr	x12, [x23, #112]
    d004:	cbz	x12, d06c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1834>
    d008:	ldr	w10, [x19, #432]
    d00c:	ldr	x11, [x19, #416]
    d010:	cbz	w10, d074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x183c>
    d014:	orr	x13, x12, #0x4
    d018:	cmn	x13, #0x4
    d01c:	b.eq	e7cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f94>  // b.none
    d020:	ubfx	x13, x12, #4, #28
    d024:	eor	w14, w13, w12, lsr #9
    d028:	sub	w13, w10, #0x1
    d02c:	and	w14, w13, w14
    d030:	add	x15, x11, w14, uxtw #4
    d034:	ldr	x16, [x15]
    d038:	cmp	x16, x12
    d03c:	b.eq	d078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1840>  // b.none
    d040:	mov	w17, #0x1                   	// #1
    d044:	cmn	x16, #0x4
    d048:	b.eq	d074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x183c>  // b.none
    d04c:	add	w14, w14, w17
    d050:	and	w14, w14, w13
    d054:	add	x15, x11, w14, uxtw #4
    d058:	ldr	x16, [x15]
    d05c:	add	w17, w17, #0x1
    d060:	cmp	x16, x12
    d064:	b.eq	d078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1840>  // b.none
    d068:	b	d044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x180c>
    d06c:	mov	w24, wzr
    d070:	b	d088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1850>
    d074:	add	x15, x11, x10, lsl #4
    d078:	add	x10, x11, x10, lsl #4
    d07c:	cmp	x15, x10
    d080:	b.eq	e84c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3014>  // b.none
    d084:	ldr	w24, [x15, #8]
    d088:	cmp	w8, w9
    d08c:	b.cs	d640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e08>  // b.hs, b.nlast
    d090:	ldr	x9, [sp, #64]
    d094:	str	w24, [x9, w8, uxtw #2]
    d098:	ldp	w8, w9, [sp, #72]
    d09c:	cmp	w8, w9
    d0a0:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d0a4:	add	w8, w8, #0x1
    d0a8:	str	w8, [sp, #72]
    d0ac:	ldrh	w10, [x23, #34]
    d0b0:	mov	w12, #0x1                   	// #1
    d0b4:	and	w11, w10, #0x1f
    d0b8:	tst	w10, #0x1f
    d0bc:	add	w10, w11, #0xff
    d0c0:	orr	w10, w10, #0x100
    d0c4:	csel	w10, wzr, w10, eq  // eq = none
    d0c8:	lsl	w11, w10, #23
    d0cc:	lsl	x10, x12, x10
    d0d0:	and	w10, w10, w11, asr #31
    d0d4:	clz	w10, w10
    d0d8:	cmp	w8, w9
    d0dc:	mov	w9, #0x20                  	// #32
    d0e0:	sub	w24, w9, w10
    d0e4:	b.cs	d65c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e24>  // b.hs, b.nlast
    d0e8:	ldr	x9, [sp, #64]
    d0ec:	str	w24, [x9, w8, uxtw #2]
    d0f0:	ldp	w8, w9, [sp, #72]
    d0f4:	cmp	w8, w9
    d0f8:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d0fc:	add	w8, w8, #0x1
    d100:	str	w8, [sp, #72]
    d104:	ldrb	w10, [x23, #34]
    d108:	tbnz	w10, #6, d134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x18fc>
    d10c:	cmp	w8, w9
    d110:	b.cs	d7ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f74>  // b.hs, b.nlast
    d114:	ldr	x9, [sp, #64]
    d118:	str	wzr, [x9, w8, uxtw #2]
    d11c:	ldp	w8, w9, [sp, #72]
    d120:	cmp	w8, w9
    d124:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d128:	add	w8, w8, #0x1
    d12c:	str	w8, [sp, #72]
    d130:	b	d200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x19c8>
    d134:	mov	x0, x23
    d138:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    d13c:	str	x27, [sp, #16]
    d140:	cbz	x0, d190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1958>
    d144:	mov	x24, x0
    d148:	mov	x25, x1
    d14c:	cmp	x1, #0x10
    d150:	mov	x0, x27
    d154:	stur	x1, [x29, #-32]
    d158:	b.cc	d178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1940>  // b.lo, b.ul, b.last
    d15c:	add	x0, sp, #0x10
    d160:	sub	x1, x29, #0x20
    d164:	mov	x2, xzr
    d168:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    d16c:	ldur	x8, [x29, #-32]
    d170:	str	x0, [sp, #16]
    d174:	str	x8, [sp, #32]
    d178:	cbz	x25, d1a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1970>
    d17c:	cmp	x25, #0x1
    d180:	b.ne	d19c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1964>  // b.any
    d184:	ldrb	w8, [x24]
    d188:	strb	w8, [x0]
    d18c:	b	d1a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1970>
    d190:	str	xzr, [sp, #24]
    d194:	strb	wzr, [sp, #32]
    d198:	b	d1b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1980>
    d19c:	mov	x1, x24
    d1a0:	mov	x2, x25
    d1a4:	bl	0 <memcpy>
    d1a8:	ldur	x8, [x29, #-32]
    d1ac:	ldr	x9, [sp, #16]
    d1b0:	str	x8, [sp, #24]
    d1b4:	strb	wzr, [x9, x8]
    d1b8:	sub	x0, x29, #0x50
    d1bc:	add	x1, sp, #0x10
    d1c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d1c4:	ldp	w8, w9, [sp, #72]
    d1c8:	ldr	w24, [x0]
    d1cc:	cmp	w8, w9
    d1d0:	b.cs	d7c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f90>  // b.hs, b.nlast
    d1d4:	ldr	x9, [sp, #64]
    d1d8:	str	w24, [x9, w8, uxtw #2]
    d1dc:	ldp	w8, w9, [sp, #72]
    d1e0:	cmp	w8, w9
    d1e4:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d1e8:	ldr	x0, [sp, #16]
    d1ec:	add	w8, w8, #0x1
    d1f0:	str	w8, [sp, #72]
    d1f4:	cmp	x0, x27
    d1f8:	b.eq	d200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x19c8>  // b.none
    d1fc:	bl	0 <_ZdlPv>
    d200:	ldr	w8, [x23, #32]
    d204:	ubfx	w24, w8, #4, #2
    d208:	cmp	w24, #0x3
    d20c:	b.eq	e6ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2eb4>  // b.none
    d210:	ldp	w8, w9, [sp, #72]
    d214:	cmp	w8, w9
    d218:	b.cs	d678 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e40>  // b.hs, b.nlast
    d21c:	ldr	x9, [sp, #64]
    d220:	str	w24, [x9, w8, uxtw #2]
    d224:	ldp	w8, w9, [sp, #72]
    d228:	cmp	w8, w9
    d22c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d230:	add	w8, w8, #0x1
    d234:	str	w8, [sp, #72]
    d238:	ldrb	w10, [x23, #19]
    d23c:	tbnz	w10, #6, d248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1a10>
    d240:	mov	w24, wzr
    d244:	b	d264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1a2c>
    d248:	mov	x0, x23
    d24c:	bl	0 <_ZNK4llvm8Function5getGCB5cxx11Ev>
    d250:	mov	x1, x0
    d254:	sub	x0, x29, #0x80
    d258:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d25c:	ldr	w24, [x0]
    d260:	ldp	w8, w9, [sp, #72]
    d264:	cmp	w8, w9
    d268:	b.cs	d694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e5c>  // b.hs, b.nlast
    d26c:	ldr	x9, [sp, #64]
    d270:	str	w24, [x9, w8, uxtw #2]
    d274:	ldp	w8, w9, [sp, #72]
    d278:	cmp	w8, w9
    d27c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d280:	add	w8, w8, #0x1
    d284:	str	w8, [sp, #72]
    d288:	ldr	w10, [x23, #32]
    d28c:	ubfx	x10, x10, #6, #2
    d290:	cmp	w10, #0x3
    d294:	b.eq	e75c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f24>  // b.none
    d298:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d29c:	add	x11, x11, #0x0
    d2a0:	ldr	w24, [x11, x10, lsl #2]
    d2a4:	cmp	w8, w9
    d2a8:	b.cs	d6b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e78>  // b.hs, b.nlast
    d2ac:	ldr	x9, [sp, #64]
    d2b0:	str	w24, [x9, w8, uxtw #2]
    d2b4:	ldp	w8, w9, [sp, #72]
    d2b8:	cmp	w8, w9
    d2bc:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d2c0:	add	w8, w8, #0x1
    d2c4:	str	w8, [sp, #72]
    d2c8:	ldrb	w10, [x23, #18]
    d2cc:	tbnz	w10, #2, d2d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1aa0>
    d2d0:	mov	w24, wzr
    d2d4:	b	d2f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1abc>
    d2d8:	mov	x0, x23
    d2dc:	bl	0 <_ZNK4llvm8Function15getPrologueDataEv>
    d2e0:	mov	x1, x0
    d2e4:	mov	x0, x22
    d2e8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    d2ec:	ldp	w8, w9, [sp, #72]
    d2f0:	add	w24, w0, #0x1
    d2f4:	cmp	w8, w9
    d2f8:	b.cs	d6cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e94>  // b.hs, b.nlast
    d2fc:	ldr	x9, [sp, #64]
    d300:	str	w24, [x9, w8, uxtw #2]
    d304:	ldp	w8, w9, [sp, #72]
    d308:	cmp	w8, w9
    d30c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d310:	add	w8, w8, #0x1
    d314:	str	w8, [sp, #72]
    d318:	ldr	w10, [x23, #32]
    d31c:	ubfx	w24, w10, #8, #2
    d320:	cmp	w24, #0x3
    d324:	b.eq	e744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f0c>  // b.none
    d328:	cmp	w8, w9
    d32c:	b.cs	d6e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1eb0>  // b.hs, b.nlast
    d330:	ldr	x9, [sp, #64]
    d334:	str	w24, [x9, w8, uxtw #2]
    d338:	ldp	w8, w9, [sp, #72]
    d33c:	cmp	w8, w9
    d340:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d344:	add	w8, w8, #0x1
    d348:	str	w8, [sp, #72]
    d34c:	ldr	x1, [x23, #48]
    d350:	cbz	x1, d570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d38>
    d354:	mov	x0, x22
    d358:	bl	0 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE>
    d35c:	ldp	w8, w9, [sp, #72]
    d360:	mov	w24, w0
    d364:	cmp	w8, w9
    d368:	b.cs	d57c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d44>  // b.hs, b.nlast
    d36c:	ldr	x9, [sp, #64]
    d370:	str	w24, [x9, w8, uxtw #2]
    d374:	ldp	w8, w9, [sp, #72]
    d378:	cmp	w8, w9
    d37c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d380:	add	w8, w8, #0x1
    d384:	str	w8, [sp, #72]
    d388:	ldrb	w10, [x23, #18]
    d38c:	tbnz	w10, #1, d398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b60>
    d390:	mov	w24, wzr
    d394:	b	d3b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b7c>
    d398:	mov	x0, x23
    d39c:	bl	0 <_ZNK4llvm8Function13getPrefixDataEv>
    d3a0:	mov	x1, x0
    d3a4:	mov	x0, x22
    d3a8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    d3ac:	ldp	w8, w9, [sp, #72]
    d3b0:	add	w24, w0, #0x1
    d3b4:	cmp	w8, w9
    d3b8:	b.cs	d704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ecc>  // b.hs, b.nlast
    d3bc:	ldr	x9, [sp, #64]
    d3c0:	str	w24, [x9, w8, uxtw #2]
    d3c4:	ldp	w8, w9, [sp, #72]
    d3c8:	cmp	w8, w9
    d3cc:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d3d0:	add	w8, w8, #0x1
    d3d4:	str	w8, [sp, #72]
    d3d8:	ldrb	w10, [x23, #18]
    d3dc:	tbnz	w10, #3, d3e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1bb0>
    d3e0:	mov	w24, wzr
    d3e4:	b	d404 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1bcc>
    d3e8:	mov	x0, x23
    d3ec:	bl	0 <_ZNK4llvm8Function16getPersonalityFnEv>
    d3f0:	mov	x1, x0
    d3f4:	mov	x0, x22
    d3f8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    d3fc:	ldp	w8, w9, [sp, #72]
    d400:	add	w24, w0, #0x1
    d404:	cmp	w8, w9
    d408:	b.cs	d720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ee8>  // b.hs, b.nlast
    d40c:	ldr	x9, [sp, #64]
    d410:	str	w24, [x9, w8, uxtw #2]
    d414:	ldp	w8, w9, [sp, #72]
    d418:	cmp	w8, w9
    d41c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d420:	add	w8, w8, #0x1
    d424:	str	w8, [sp, #72]
    d428:	ldr	w10, [x23, #32]
    d42c:	cmp	w8, w9
    d430:	ubfx	w24, w10, #14, #1
    d434:	b.cs	d73c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f04>  // b.hs, b.nlast
    d438:	ldr	x9, [sp, #64]
    d43c:	str	w24, [x9, w8, uxtw #2]
    d440:	ldp	w8, w9, [sp, #72]
    d444:	cmp	w8, w9
    d448:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d44c:	add	w8, w8, #0x1
    d450:	mov	x0, x23
    d454:	str	w8, [sp, #72]
    d458:	bl	0 <_ZNK4llvm11GlobalValue15getAddressSpaceEv>
    d45c:	ldp	w8, w9, [sp, #72]
    d460:	mov	w24, w0
    d464:	cmp	w8, w9
    d468:	b.cs	d758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f20>  // b.hs, b.nlast
    d46c:	ldr	x9, [sp, #64]
    d470:	str	w24, [x9, w8, uxtw #2]
    d474:	ldp	w8, w9, [sp, #72]
    d478:	cmp	w8, w9
    d47c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d480:	add	w8, w8, #0x1
    d484:	mov	x0, x23
    d488:	str	w8, [sp, #72]
    d48c:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    d490:	ldrb	w8, [x19, #664]
    d494:	mov	x24, x0
    d498:	mov	x25, x1
    d49c:	cbz	w8, d4b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1c78>
    d4a0:	mov	x0, x21
    d4a4:	mov	x1, x24
    d4a8:	mov	x2, x25
    d4ac:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    d4b0:	cmn	x24, #0x2
    d4b4:	b.eq	e634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dfc>  // b.none
    d4b8:	cmn	x24, #0x1
    d4bc:	b.eq	e654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e1c>  // b.none
    d4c0:	ldr	x26, [x19, #8]
    d4c4:	mov	x0, x24
    d4c8:	mov	x1, x25
    d4cc:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    d4d0:	lsr	x8, x25, #32
    d4d4:	cbnz	x8, e674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e3c>
    d4d8:	orr	x2, x25, x0, lsl #32
    d4dc:	mov	x0, x26
    d4e0:	mov	x1, x24
    d4e4:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    d4e8:	ldp	w8, w9, [sp, #72]
    d4ec:	mov	x24, x0
    d4f0:	cmp	w8, w9
    d4f4:	b.cs	d774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f3c>  // b.hs, b.nlast
    d4f8:	ldr	x9, [sp, #64]
    d4fc:	str	w24, [x9, w8, uxtw #2]
    d500:	ldp	w8, w9, [sp, #72]
    d504:	cmp	w8, w9
    d508:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d50c:	add	w8, w8, #0x1
    d510:	mov	x0, x23
    d514:	str	w8, [sp, #72]
    d518:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    d51c:	ldp	w8, w9, [sp, #72]
    d520:	mov	x23, x1
    d524:	cmp	w8, w9
    d528:	b.cs	d790 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f58>  // b.hs, b.nlast
    d52c:	ldr	x9, [sp, #64]
    d530:	str	w23, [x9, w8, uxtw #2]
    d534:	ldp	w8, w9, [sp, #72]
    d538:	cmp	w8, w9
    d53c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d540:	add	w8, w8, #0x1
    d544:	str	w8, [sp, #72]
    d548:	ldr	x0, [x19]
    d54c:	add	x2, sp, #0x40
    d550:	mov	w1, #0x8                   	// #8
    d554:	mov	w3, wzr
    d558:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d55c:	str	wzr, [sp, #72]
    d560:	ldr	x20, [x20, #8]
    d564:	cmp	x28, x20
    d568:	b.ne	cdd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x15a0>  // b.any
    d56c:	b	d7e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1fac>
    d570:	mov	w24, wzr
    d574:	cmp	w8, w9
    d578:	b.cc	d36c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b34>  // b.lo, b.ul, b.last
    d57c:	ldr	x1, [sp]
    d580:	add	x0, sp, #0x40
    d584:	mov	w3, #0x4                   	// #4
    d588:	mov	x2, xzr
    d58c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d590:	ldr	w8, [sp, #72]
    d594:	b	d36c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b34>
    d598:	ldr	x1, [sp]
    d59c:	add	x0, sp, #0x40
    d5a0:	mov	w3, #0x4                   	// #4
    d5a4:	mov	x2, xzr
    d5a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d5ac:	ldr	w8, [sp, #72]
    d5b0:	b	ce5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1624>
    d5b4:	ldr	x1, [sp]
    d5b8:	add	x0, sp, #0x40
    d5bc:	mov	w3, #0x4                   	// #4
    d5c0:	mov	x2, xzr
    d5c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d5c8:	ldr	w8, [sp, #72]
    d5cc:	b	ce90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1658>
    d5d0:	ldr	x1, [sp]
    d5d4:	add	x0, sp, #0x40
    d5d8:	mov	w3, #0x4                   	// #4
    d5dc:	mov	x2, xzr
    d5e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d5e4:	ldr	w8, [sp, #72]
    d5e8:	b	cf44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x170c>
    d5ec:	ldr	x1, [sp]
    d5f0:	add	x0, sp, #0x40
    d5f4:	mov	w3, #0x4                   	// #4
    d5f8:	mov	x2, xzr
    d5fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d600:	ldr	w8, [sp, #72]
    d604:	b	cf70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1738>
    d608:	ldr	x1, [sp]
    d60c:	add	x0, sp, #0x40
    d610:	mov	w3, #0x4                   	// #4
    d614:	mov	x2, xzr
    d618:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d61c:	ldr	w8, [sp, #72]
    d620:	b	cfa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x176c>
    d624:	ldr	x1, [sp]
    d628:	add	x0, sp, #0x40
    d62c:	mov	w3, #0x4                   	// #4
    d630:	mov	x2, xzr
    d634:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d638:	ldr	w8, [sp, #72]
    d63c:	b	cfe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x17ac>
    d640:	ldr	x1, [sp]
    d644:	add	x0, sp, #0x40
    d648:	mov	w3, #0x4                   	// #4
    d64c:	mov	x2, xzr
    d650:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d654:	ldr	w8, [sp, #72]
    d658:	b	d090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1858>
    d65c:	ldr	x1, [sp]
    d660:	add	x0, sp, #0x40
    d664:	mov	w3, #0x4                   	// #4
    d668:	mov	x2, xzr
    d66c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d670:	ldr	w8, [sp, #72]
    d674:	b	d0e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x18b0>
    d678:	ldr	x1, [sp]
    d67c:	add	x0, sp, #0x40
    d680:	mov	w3, #0x4                   	// #4
    d684:	mov	x2, xzr
    d688:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d68c:	ldr	w8, [sp, #72]
    d690:	b	d21c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x19e4>
    d694:	ldr	x1, [sp]
    d698:	add	x0, sp, #0x40
    d69c:	mov	w3, #0x4                   	// #4
    d6a0:	mov	x2, xzr
    d6a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d6a8:	ldr	w8, [sp, #72]
    d6ac:	b	d26c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1a34>
    d6b0:	ldr	x1, [sp]
    d6b4:	add	x0, sp, #0x40
    d6b8:	mov	w3, #0x4                   	// #4
    d6bc:	mov	x2, xzr
    d6c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d6c4:	ldr	w8, [sp, #72]
    d6c8:	b	d2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1a74>
    d6cc:	ldr	x1, [sp]
    d6d0:	add	x0, sp, #0x40
    d6d4:	mov	w3, #0x4                   	// #4
    d6d8:	mov	x2, xzr
    d6dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d6e0:	ldr	w8, [sp, #72]
    d6e4:	b	d2fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ac4>
    d6e8:	ldr	x1, [sp]
    d6ec:	add	x0, sp, #0x40
    d6f0:	mov	w3, #0x4                   	// #4
    d6f4:	mov	x2, xzr
    d6f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d6fc:	ldr	w8, [sp, #72]
    d700:	b	d330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1af8>
    d704:	ldr	x1, [sp]
    d708:	add	x0, sp, #0x40
    d70c:	mov	w3, #0x4                   	// #4
    d710:	mov	x2, xzr
    d714:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d718:	ldr	w8, [sp, #72]
    d71c:	b	d3bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b84>
    d720:	ldr	x1, [sp]
    d724:	add	x0, sp, #0x40
    d728:	mov	w3, #0x4                   	// #4
    d72c:	mov	x2, xzr
    d730:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d734:	ldr	w8, [sp, #72]
    d738:	b	d40c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1bd4>
    d73c:	ldr	x1, [sp]
    d740:	add	x0, sp, #0x40
    d744:	mov	w3, #0x4                   	// #4
    d748:	mov	x2, xzr
    d74c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d750:	ldr	w8, [sp, #72]
    d754:	b	d438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1c00>
    d758:	ldr	x1, [sp]
    d75c:	add	x0, sp, #0x40
    d760:	mov	w3, #0x4                   	// #4
    d764:	mov	x2, xzr
    d768:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d76c:	ldr	w8, [sp, #72]
    d770:	b	d46c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1c34>
    d774:	ldr	x1, [sp]
    d778:	add	x0, sp, #0x40
    d77c:	mov	w3, #0x4                   	// #4
    d780:	mov	x2, xzr
    d784:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d788:	ldr	w8, [sp, #72]
    d78c:	b	d4f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1cc0>
    d790:	ldr	x1, [sp]
    d794:	add	x0, sp, #0x40
    d798:	mov	w3, #0x4                   	// #4
    d79c:	mov	x2, xzr
    d7a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d7a4:	ldr	w8, [sp, #72]
    d7a8:	b	d52c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1cf4>
    d7ac:	ldr	x1, [sp]
    d7b0:	add	x0, sp, #0x40
    d7b4:	mov	w3, #0x4                   	// #4
    d7b8:	mov	x2, xzr
    d7bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d7c0:	ldr	w8, [sp, #72]
    d7c4:	b	d114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x18dc>
    d7c8:	ldr	x1, [sp]
    d7cc:	add	x0, sp, #0x40
    d7d0:	mov	w3, #0x4                   	// #4
    d7d4:	mov	x2, xzr
    d7d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d7dc:	ldr	w8, [sp, #72]
    d7e0:	b	d1d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x199c>
    d7e4:	ldr	x8, [x19, #16]
    d7e8:	ldr	x20, [x8, #48]
    d7ec:	adrp	x28, 0 <__pthread_key_create>
    d7f0:	ldr	x28, [x28]
    d7f4:	add	x27, x8, #0x28
    d7f8:	cmp	x27, x20
    d7fc:	b.eq	dda8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2570>  // b.none
    d800:	add	x21, x19, #0x2a8
    d804:	add	x22, x19, #0x18
    d808:	ldrb	w8, [x20]
    d80c:	tbnz	w8, #2, e86c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3034>
    d810:	sub	x8, x20, #0x30
    d814:	cmp	x20, #0x0
    d818:	csel	x23, xzr, x8, eq  // eq = none
    d81c:	mov	x0, x23
    d820:	bl	0 <_ZNK4llvm5Value7getNameEv>
    d824:	ldrb	w8, [x19, #664]
    d828:	mov	x24, x0
    d82c:	mov	x25, x1
    d830:	cbz	w8, d844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x200c>
    d834:	mov	x0, x21
    d838:	mov	x1, x24
    d83c:	mov	x2, x25
    d840:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    d844:	cmn	x24, #0x2
    d848:	b.eq	e634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dfc>  // b.none
    d84c:	cmn	x24, #0x1
    d850:	b.eq	e654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e1c>  // b.none
    d854:	ldr	x26, [x19, #8]
    d858:	mov	x0, x24
    d85c:	mov	x1, x25
    d860:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    d864:	lsr	x8, x25, #32
    d868:	cbnz	x8, e674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e3c>
    d86c:	orr	x2, x25, x0, lsl #32
    d870:	mov	x0, x26
    d874:	mov	x1, x24
    d878:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    d87c:	ldp	w8, w9, [sp, #72]
    d880:	mov	x24, x0
    d884:	cmp	w8, w9
    d888:	b.cs	dc38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2400>  // b.hs, b.nlast
    d88c:	ldr	x9, [sp, #64]
    d890:	str	w24, [x9, w8, uxtw #2]
    d894:	ldp	w8, w9, [sp, #72]
    d898:	cmp	w8, w9
    d89c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d8a0:	add	w8, w8, #0x1
    d8a4:	mov	x0, x23
    d8a8:	str	w8, [sp, #72]
    d8ac:	bl	0 <_ZNK4llvm5Value7getNameEv>
    d8b0:	ldp	w8, w9, [sp, #72]
    d8b4:	mov	x24, x1
    d8b8:	cmp	w8, w9
    d8bc:	b.cs	dc54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x241c>  // b.hs, b.nlast
    d8c0:	ldr	x9, [sp, #64]
    d8c4:	str	w24, [x9, w8, uxtw #2]
    d8c8:	ldp	w8, w9, [sp, #72]
    d8cc:	cmp	w8, w9
    d8d0:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d8d4:	add	w8, w8, #0x1
    d8d8:	str	w8, [sp, #72]
    d8dc:	ldr	w10, [x19, #72]
    d8e0:	ldr	x11, [x19, #56]
    d8e4:	cbz	w10, d944 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x210c>
    d8e8:	ldr	x12, [x23, #24]
    d8ec:	orr	x13, x12, #0x8
    d8f0:	cmn	x13, #0x8
    d8f4:	b.eq	e694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e5c>  // b.none
    d8f8:	ubfx	x13, x12, #4, #28
    d8fc:	eor	w14, w13, w12, lsr #9
    d900:	sub	w13, w10, #0x1
    d904:	and	w14, w14, w13
    d908:	add	x15, x11, w14, uxtw #4
    d90c:	ldr	x16, [x15]
    d910:	cmp	x16, x12
    d914:	b.eq	d948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2110>  // b.none
    d918:	mov	w17, #0x1                   	// #1
    d91c:	cmn	x16, #0x8
    d920:	b.eq	d944 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x210c>  // b.none
    d924:	add	w14, w14, w17
    d928:	and	w14, w14, w13
    d92c:	add	x15, x11, w14, uxtw #4
    d930:	ldr	x16, [x15]
    d934:	add	w17, w17, #0x1
    d938:	cmp	x16, x12
    d93c:	b.eq	d948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2110>  // b.none
    d940:	b	d91c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x20e4>
    d944:	add	x15, x11, x10, lsl #4
    d948:	add	x10, x11, x10, lsl #4
    d94c:	cmp	x15, x10
    d950:	b.eq	e6b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e7c>  // b.none
    d954:	ldr	w10, [x15, #8]
    d958:	cmp	w8, w9
    d95c:	sub	w24, w10, #0x1
    d960:	b.cs	dc70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2438>  // b.hs, b.nlast
    d964:	ldr	x9, [sp, #64]
    d968:	str	w24, [x9, w8, uxtw #2]
    d96c:	ldp	w8, w9, [sp, #72]
    d970:	cmp	w8, w9
    d974:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d978:	add	w8, w8, #0x1
    d97c:	str	w8, [sp, #72]
    d980:	ldr	x10, [x23]
    d984:	cbz	x10, e704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ecc>
    d988:	ldr	w10, [x10, #8]
    d98c:	and	w11, w10, #0xff
    d990:	cmp	w11, #0xf
    d994:	b.ne	e724 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2eec>  // b.any
    d998:	cmp	w8, w9
    d99c:	lsr	w24, w10, #8
    d9a0:	b.cs	dc8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2454>  // b.hs, b.nlast
    d9a4:	ldr	x9, [sp, #64]
    d9a8:	str	w24, [x9, w8, uxtw #2]
    d9ac:	ldp	w8, w9, [sp, #72]
    d9b0:	cmp	w8, w9
    d9b4:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    d9b8:	add	w8, w8, #0x1
    d9bc:	str	w8, [sp, #72]
    d9c0:	ldur	x1, [x23, #-24]
    d9c4:	cbz	x1, d9d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x219c>
    d9c8:	ldrb	w8, [x1, #16]
    d9cc:	cmp	w8, #0x11
    d9d0:	b.cs	e7ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2fb4>  // b.hs, b.nlast
    d9d4:	mov	x0, x22
    d9d8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    d9dc:	ldp	w8, w9, [sp, #72]
    d9e0:	mov	w24, w0
    d9e4:	cmp	w8, w9
    d9e8:	b.cs	dca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2470>  // b.hs, b.nlast
    d9ec:	ldr	x9, [sp, #64]
    d9f0:	str	w24, [x9, w8, uxtw #2]
    d9f4:	ldp	w8, w9, [sp, #72]
    d9f8:	cmp	w8, w9
    d9fc:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    da00:	add	w8, w8, #0x1
    da04:	str	w8, [sp, #72]
    da08:	ldr	w10, [x23, #32]
    da0c:	and	x10, x10, #0xf
    da10:	cmp	w10, #0xb
    da14:	b.cs	e6d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e9c>  // b.hs, b.nlast
    da18:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    da1c:	add	x11, x11, #0x0
    da20:	ldr	w24, [x11, x10, lsl #2]
    da24:	cmp	w8, w9
    da28:	b.cs	dcc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x248c>  // b.hs, b.nlast
    da2c:	ldr	x9, [sp, #64]
    da30:	str	w24, [x9, w8, uxtw #2]
    da34:	ldp	w8, w9, [sp, #72]
    da38:	cmp	w8, w9
    da3c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    da40:	add	w8, w8, #0x1
    da44:	str	w8, [sp, #72]
    da48:	ldr	w10, [x23, #32]
    da4c:	ubfx	w24, w10, #4, #2
    da50:	cmp	w24, #0x3
    da54:	b.eq	e6ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2eb4>  // b.none
    da58:	cmp	w8, w9
    da5c:	b.cs	dce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x24a8>  // b.hs, b.nlast
    da60:	ldr	x9, [sp, #64]
    da64:	str	w24, [x9, w8, uxtw #2]
    da68:	ldp	w8, w9, [sp, #72]
    da6c:	cmp	w8, w9
    da70:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    da74:	add	w8, w8, #0x1
    da78:	str	w8, [sp, #72]
    da7c:	ldr	w10, [x23, #32]
    da80:	ubfx	w24, w10, #8, #2
    da84:	cmp	w24, #0x3
    da88:	b.eq	e744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f0c>  // b.none
    da8c:	cmp	w8, w9
    da90:	b.cs	dcfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x24c4>  // b.hs, b.nlast
    da94:	ldr	x9, [sp, #64]
    da98:	str	w24, [x9, w8, uxtw #2]
    da9c:	ldp	w8, w9, [sp, #72]
    daa0:	cmp	w8, w9
    daa4:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    daa8:	add	w8, w8, #0x1
    daac:	str	w8, [sp, #72]
    dab0:	ldr	w10, [x23, #32]
    dab4:	ubfx	w24, w10, #10, #3
    dab8:	cmp	w24, #0x5
    dabc:	b.cs	e7b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f7c>  // b.hs, b.nlast
    dac0:	cmp	w8, w9
    dac4:	b.cs	dd18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x24e0>  // b.hs, b.nlast
    dac8:	ldr	x9, [sp, #64]
    dacc:	str	w24, [x9, w8, uxtw #2]
    dad0:	ldp	w8, w9, [sp, #72]
    dad4:	cmp	w8, w9
    dad8:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    dadc:	add	w8, w8, #0x1
    dae0:	str	w8, [sp, #72]
    dae4:	ldr	w10, [x23, #32]
    dae8:	ubfx	x10, x10, #6, #2
    daec:	cmp	w10, #0x3
    daf0:	b.eq	e75c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2f24>  // b.none
    daf4:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    daf8:	add	x11, x11, #0x0
    dafc:	ldr	w24, [x11, x10, lsl #2]
    db00:	cmp	w8, w9
    db04:	b.cs	dd34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x24fc>  // b.hs, b.nlast
    db08:	ldr	x9, [sp, #64]
    db0c:	str	w24, [x9, w8, uxtw #2]
    db10:	ldp	w8, w9, [sp, #72]
    db14:	cmp	w8, w9
    db18:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    db1c:	add	w8, w8, #0x1
    db20:	str	w8, [sp, #72]
    db24:	ldr	w10, [x23, #32]
    db28:	cmp	w8, w9
    db2c:	ubfx	w24, w10, #14, #1
    db30:	b.cs	dd50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2518>  // b.hs, b.nlast
    db34:	ldr	x9, [sp, #64]
    db38:	str	w24, [x9, w8, uxtw #2]
    db3c:	ldp	w8, w9, [sp, #72]
    db40:	cmp	w8, w9
    db44:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    db48:	add	w8, w8, #0x1
    db4c:	mov	x0, x23
    db50:	str	w8, [sp, #72]
    db54:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    db58:	ldrb	w8, [x19, #664]
    db5c:	mov	x24, x0
    db60:	mov	x25, x1
    db64:	cbz	w8, db78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2340>
    db68:	mov	x0, x21
    db6c:	mov	x1, x24
    db70:	mov	x2, x25
    db74:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    db78:	cmn	x24, #0x2
    db7c:	b.eq	e634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dfc>  // b.none
    db80:	cmn	x24, #0x1
    db84:	b.eq	e654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e1c>  // b.none
    db88:	ldr	x26, [x19, #8]
    db8c:	mov	x0, x24
    db90:	mov	x1, x25
    db94:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    db98:	lsr	x8, x25, #32
    db9c:	cbnz	x8, e674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e3c>
    dba0:	orr	x2, x25, x0, lsl #32
    dba4:	mov	x0, x26
    dba8:	mov	x1, x24
    dbac:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    dbb0:	ldp	w8, w9, [sp, #72]
    dbb4:	mov	x24, x0
    dbb8:	cmp	w8, w9
    dbbc:	b.cs	dd6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2534>  // b.hs, b.nlast
    dbc0:	ldr	x9, [sp, #64]
    dbc4:	str	w24, [x9, w8, uxtw #2]
    dbc8:	ldp	w8, w9, [sp, #72]
    dbcc:	cmp	w8, w9
    dbd0:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    dbd4:	add	w8, w8, #0x1
    dbd8:	mov	x0, x23
    dbdc:	str	w8, [sp, #72]
    dbe0:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    dbe4:	ldp	w8, w9, [sp, #72]
    dbe8:	mov	x23, x1
    dbec:	cmp	w8, w9
    dbf0:	b.cs	dd88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2550>  // b.hs, b.nlast
    dbf4:	ldr	x9, [sp, #64]
    dbf8:	str	w23, [x9, w8, uxtw #2]
    dbfc:	ldp	w8, w9, [sp, #72]
    dc00:	cmp	w8, w9
    dc04:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    dc08:	add	w8, w8, #0x1
    dc0c:	str	w8, [sp, #72]
    dc10:	ldr	x0, [x19]
    dc14:	add	x2, sp, #0x40
    dc18:	mov	w1, #0xe                   	// #14
    dc1c:	mov	w3, wzr
    dc20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc24:	str	wzr, [sp, #72]
    dc28:	ldr	x20, [x20, #8]
    dc2c:	cmp	x27, x20
    dc30:	b.ne	d808 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1fd0>  // b.any
    dc34:	b	dda4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x256c>
    dc38:	ldr	x1, [sp]
    dc3c:	add	x0, sp, #0x40
    dc40:	mov	w3, #0x4                   	// #4
    dc44:	mov	x2, xzr
    dc48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dc4c:	ldr	w8, [sp, #72]
    dc50:	b	d88c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2054>
    dc54:	ldr	x1, [sp]
    dc58:	add	x0, sp, #0x40
    dc5c:	mov	w3, #0x4                   	// #4
    dc60:	mov	x2, xzr
    dc64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dc68:	ldr	w8, [sp, #72]
    dc6c:	b	d8c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2088>
    dc70:	ldr	x1, [sp]
    dc74:	add	x0, sp, #0x40
    dc78:	mov	w3, #0x4                   	// #4
    dc7c:	mov	x2, xzr
    dc80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dc84:	ldr	w8, [sp, #72]
    dc88:	b	d964 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x212c>
    dc8c:	ldr	x1, [sp]
    dc90:	add	x0, sp, #0x40
    dc94:	mov	w3, #0x4                   	// #4
    dc98:	mov	x2, xzr
    dc9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dca0:	ldr	w8, [sp, #72]
    dca4:	b	d9a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x216c>
    dca8:	ldr	x1, [sp]
    dcac:	add	x0, sp, #0x40
    dcb0:	mov	w3, #0x4                   	// #4
    dcb4:	mov	x2, xzr
    dcb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dcbc:	ldr	w8, [sp, #72]
    dcc0:	b	d9ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x21b4>
    dcc4:	ldr	x1, [sp]
    dcc8:	add	x0, sp, #0x40
    dccc:	mov	w3, #0x4                   	// #4
    dcd0:	mov	x2, xzr
    dcd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dcd8:	ldr	w8, [sp, #72]
    dcdc:	b	da2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x21f4>
    dce0:	ldr	x1, [sp]
    dce4:	add	x0, sp, #0x40
    dce8:	mov	w3, #0x4                   	// #4
    dcec:	mov	x2, xzr
    dcf0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dcf4:	ldr	w8, [sp, #72]
    dcf8:	b	da60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2228>
    dcfc:	ldr	x1, [sp]
    dd00:	add	x0, sp, #0x40
    dd04:	mov	w3, #0x4                   	// #4
    dd08:	mov	x2, xzr
    dd0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd10:	ldr	w8, [sp, #72]
    dd14:	b	da94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x225c>
    dd18:	ldr	x1, [sp]
    dd1c:	add	x0, sp, #0x40
    dd20:	mov	w3, #0x4                   	// #4
    dd24:	mov	x2, xzr
    dd28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd2c:	ldr	w8, [sp, #72]
    dd30:	b	dac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2290>
    dd34:	ldr	x1, [sp]
    dd38:	add	x0, sp, #0x40
    dd3c:	mov	w3, #0x4                   	// #4
    dd40:	mov	x2, xzr
    dd44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd48:	ldr	w8, [sp, #72]
    dd4c:	b	db08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x22d0>
    dd50:	ldr	x1, [sp]
    dd54:	add	x0, sp, #0x40
    dd58:	mov	w3, #0x4                   	// #4
    dd5c:	mov	x2, xzr
    dd60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd64:	ldr	w8, [sp, #72]
    dd68:	b	db34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x22fc>
    dd6c:	ldr	x1, [sp]
    dd70:	add	x0, sp, #0x40
    dd74:	mov	w3, #0x4                   	// #4
    dd78:	mov	x2, xzr
    dd7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd80:	ldr	w8, [sp, #72]
    dd84:	b	dbc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2388>
    dd88:	ldr	x1, [sp]
    dd8c:	add	x0, sp, #0x40
    dd90:	mov	w3, #0x4                   	// #4
    dd94:	mov	x2, xzr
    dd98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd9c:	ldr	w8, [sp, #72]
    dda0:	b	dbf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x23bc>
    dda4:	ldr	x8, [x19, #16]
    dda8:	ldr	x20, [x8, #64]
    ddac:	add	x27, x8, #0x38
    ddb0:	cmp	x27, x20
    ddb4:	b.eq	e260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a28>  // b.none
    ddb8:	add	x21, x19, #0x2a8
    ddbc:	add	x22, x19, #0x18
    ddc0:	ldrb	w8, [x20]
    ddc4:	tbnz	w8, #2, e88c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3054>
    ddc8:	sub	x8, x20, #0x30
    ddcc:	cmp	x20, #0x0
    ddd0:	csel	x23, xzr, x8, eq  // eq = none
    ddd4:	mov	x0, x23
    ddd8:	bl	0 <_ZNK4llvm5Value7getNameEv>
    dddc:	ldrb	w8, [x19, #664]
    dde0:	mov	x24, x0
    dde4:	mov	x25, x1
    dde8:	cbz	w8, ddfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x25c4>
    ddec:	mov	x0, x21
    ddf0:	mov	x1, x24
    ddf4:	mov	x2, x25
    ddf8:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    ddfc:	cmn	x24, #0x2
    de00:	b.eq	e634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dfc>  // b.none
    de04:	cmn	x24, #0x1
    de08:	b.eq	e654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e1c>  // b.none
    de0c:	ldr	x26, [x19, #8]
    de10:	mov	x0, x24
    de14:	mov	x1, x25
    de18:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    de1c:	lsr	x8, x25, #32
    de20:	cbnz	x8, e674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e3c>
    de24:	orr	x2, x25, x0, lsl #32
    de28:	mov	x0, x26
    de2c:	mov	x1, x24
    de30:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    de34:	ldp	w8, w9, [sp, #72]
    de38:	mov	x24, x0
    de3c:	cmp	w8, w9
    de40:	b.cs	e148 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2910>  // b.hs, b.nlast
    de44:	ldr	x9, [sp, #64]
    de48:	str	w24, [x9, w8, uxtw #2]
    de4c:	ldp	w8, w9, [sp, #72]
    de50:	cmp	w8, w9
    de54:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    de58:	add	w8, w8, #0x1
    de5c:	mov	x0, x23
    de60:	str	w8, [sp, #72]
    de64:	bl	0 <_ZNK4llvm5Value7getNameEv>
    de68:	ldp	w8, w9, [sp, #72]
    de6c:	mov	x24, x1
    de70:	cmp	w8, w9
    de74:	b.cs	e164 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x292c>  // b.hs, b.nlast
    de78:	ldr	x9, [sp, #64]
    de7c:	str	w24, [x9, w8, uxtw #2]
    de80:	ldp	w8, w9, [sp, #72]
    de84:	cmp	w8, w9
    de88:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    de8c:	add	w8, w8, #0x1
    de90:	str	w8, [sp, #72]
    de94:	ldr	w10, [x19, #72]
    de98:	ldr	x11, [x19, #56]
    de9c:	cbz	w10, defc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x26c4>
    dea0:	ldr	x12, [x23, #24]
    dea4:	orr	x13, x12, #0x8
    dea8:	cmn	x13, #0x8
    deac:	b.eq	e694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e5c>  // b.none
    deb0:	ubfx	x13, x12, #4, #28
    deb4:	eor	w14, w13, w12, lsr #9
    deb8:	sub	w13, w10, #0x1
    debc:	and	w14, w14, w13
    dec0:	add	x15, x11, w14, uxtw #4
    dec4:	ldr	x16, [x15]
    dec8:	cmp	x16, x12
    decc:	b.eq	df00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x26c8>  // b.none
    ded0:	mov	w17, #0x1                   	// #1
    ded4:	cmn	x16, #0x8
    ded8:	b.eq	defc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x26c4>  // b.none
    dedc:	add	w14, w14, w17
    dee0:	and	w14, w14, w13
    dee4:	add	x15, x11, w14, uxtw #4
    dee8:	ldr	x16, [x15]
    deec:	add	w17, w17, #0x1
    def0:	cmp	x16, x12
    def4:	b.eq	df00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x26c8>  // b.none
    def8:	b	ded4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x269c>
    defc:	add	x15, x11, x10, lsl #4
    df00:	add	x10, x11, x10, lsl #4
    df04:	cmp	x15, x10
    df08:	b.eq	e6b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e7c>  // b.none
    df0c:	ldr	w10, [x15, #8]
    df10:	cmp	w8, w9
    df14:	sub	w24, w10, #0x1
    df18:	b.cs	e180 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2948>  // b.hs, b.nlast
    df1c:	ldr	x9, [sp, #64]
    df20:	str	w24, [x9, w8, uxtw #2]
    df24:	ldp	w8, w9, [sp, #72]
    df28:	cmp	w8, w9
    df2c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    df30:	add	w8, w8, #0x1
    df34:	str	w8, [sp, #72]
    df38:	ldr	x10, [x23]
    df3c:	cbz	x10, e704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ecc>
    df40:	ldr	w10, [x10, #8]
    df44:	and	w11, w10, #0xff
    df48:	cmp	w11, #0xf
    df4c:	b.ne	e724 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2eec>  // b.any
    df50:	cmp	w8, w9
    df54:	lsr	w24, w10, #8
    df58:	b.cs	e19c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2964>  // b.hs, b.nlast
    df5c:	ldr	x9, [sp, #64]
    df60:	str	w24, [x9, w8, uxtw #2]
    df64:	ldp	w8, w9, [sp, #72]
    df68:	cmp	w8, w9
    df6c:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    df70:	add	w8, w8, #0x1
    df74:	str	w8, [sp, #72]
    df78:	ldur	x1, [x23, #-24]
    df7c:	cbz	x1, df8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2754>
    df80:	ldrb	w8, [x1, #16]
    df84:	cmp	w8, #0x11
    df88:	b.cs	e7ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2fb4>  // b.hs, b.nlast
    df8c:	mov	x0, x22
    df90:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    df94:	ldp	w8, w9, [sp, #72]
    df98:	mov	w24, w0
    df9c:	cmp	w8, w9
    dfa0:	b.cs	e1b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2980>  // b.hs, b.nlast
    dfa4:	ldr	x9, [sp, #64]
    dfa8:	str	w24, [x9, w8, uxtw #2]
    dfac:	ldp	w8, w9, [sp, #72]
    dfb0:	cmp	w8, w9
    dfb4:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    dfb8:	add	w8, w8, #0x1
    dfbc:	str	w8, [sp, #72]
    dfc0:	ldr	w10, [x23, #32]
    dfc4:	and	x10, x10, #0xf
    dfc8:	cmp	w10, #0xb
    dfcc:	b.cs	e6d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e9c>  // b.hs, b.nlast
    dfd0:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dfd4:	add	x11, x11, #0x0
    dfd8:	ldr	w24, [x11, x10, lsl #2]
    dfdc:	cmp	w8, w9
    dfe0:	b.cs	e1d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x299c>  // b.hs, b.nlast
    dfe4:	ldr	x9, [sp, #64]
    dfe8:	str	w24, [x9, w8, uxtw #2]
    dfec:	ldp	w8, w9, [sp, #72]
    dff0:	cmp	w8, w9
    dff4:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    dff8:	add	w8, w8, #0x1
    dffc:	str	w8, [sp, #72]
    e000:	ldr	w10, [x23, #32]
    e004:	ubfx	w24, w10, #4, #2
    e008:	cmp	w24, #0x3
    e00c:	b.eq	e6ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2eb4>  // b.none
    e010:	cmp	w8, w9
    e014:	b.cs	e1f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x29b8>  // b.hs, b.nlast
    e018:	ldr	x9, [sp, #64]
    e01c:	str	w24, [x9, w8, uxtw #2]
    e020:	ldp	w8, w9, [sp, #72]
    e024:	cmp	w8, w9
    e028:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    e02c:	add	w8, w8, #0x1
    e030:	str	w8, [sp, #72]
    e034:	ldr	w10, [x23, #32]
    e038:	cmp	w8, w9
    e03c:	ubfx	w24, w10, #14, #1
    e040:	b.cs	e20c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x29d4>  // b.hs, b.nlast
    e044:	ldr	x9, [sp, #64]
    e048:	str	w24, [x9, w8, uxtw #2]
    e04c:	ldp	w8, w9, [sp, #72]
    e050:	cmp	w8, w9
    e054:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    e058:	add	w8, w8, #0x1
    e05c:	mov	x0, x23
    e060:	str	w8, [sp, #72]
    e064:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    e068:	ldrb	w8, [x19, #664]
    e06c:	mov	x24, x0
    e070:	mov	x25, x1
    e074:	cbz	w8, e088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2850>
    e078:	mov	x0, x21
    e07c:	mov	x1, x24
    e080:	mov	x2, x25
    e084:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    e088:	cmn	x24, #0x2
    e08c:	b.eq	e634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dfc>  // b.none
    e090:	cmn	x24, #0x1
    e094:	b.eq	e654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e1c>  // b.none
    e098:	ldr	x26, [x19, #8]
    e09c:	mov	x0, x24
    e0a0:	mov	x1, x25
    e0a4:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
    e0a8:	lsr	x8, x25, #32
    e0ac:	cbnz	x8, e674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e3c>
    e0b0:	orr	x2, x25, x0, lsl #32
    e0b4:	mov	x0, x26
    e0b8:	mov	x1, x24
    e0bc:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
    e0c0:	ldp	w8, w9, [sp, #72]
    e0c4:	mov	x24, x0
    e0c8:	cmp	w8, w9
    e0cc:	b.cs	e228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x29f0>  // b.hs, b.nlast
    e0d0:	ldr	x9, [sp, #64]
    e0d4:	str	w24, [x9, w8, uxtw #2]
    e0d8:	ldp	w8, w9, [sp, #72]
    e0dc:	cmp	w8, w9
    e0e0:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    e0e4:	add	w8, w8, #0x1
    e0e8:	mov	x0, x23
    e0ec:	str	w8, [sp, #72]
    e0f0:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    e0f4:	ldp	w8, w9, [sp, #72]
    e0f8:	mov	x23, x1
    e0fc:	cmp	w8, w9
    e100:	b.cs	e244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a0c>  // b.hs, b.nlast
    e104:	ldr	x9, [sp, #64]
    e108:	str	w23, [x9, w8, uxtw #2]
    e10c:	ldp	w8, w9, [sp, #72]
    e110:	cmp	w8, w9
    e114:	b.cs	e614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ddc>  // b.hs, b.nlast
    e118:	add	w8, w8, #0x1
    e11c:	str	w8, [sp, #72]
    e120:	ldr	x0, [x19]
    e124:	add	x2, sp, #0x40
    e128:	mov	w1, #0x12                  	// #18
    e12c:	mov	w3, wzr
    e130:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e134:	str	wzr, [sp, #72]
    e138:	ldr	x20, [x20, #8]
    e13c:	cmp	x27, x20
    e140:	b.ne	ddc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2588>  // b.any
    e144:	b	e260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a28>
    e148:	ldr	x1, [sp]
    e14c:	add	x0, sp, #0x40
    e150:	mov	w3, #0x4                   	// #4
    e154:	mov	x2, xzr
    e158:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e15c:	ldr	w8, [sp, #72]
    e160:	b	de44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x260c>
    e164:	ldr	x1, [sp]
    e168:	add	x0, sp, #0x40
    e16c:	mov	w3, #0x4                   	// #4
    e170:	mov	x2, xzr
    e174:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e178:	ldr	w8, [sp, #72]
    e17c:	b	de78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2640>
    e180:	ldr	x1, [sp]
    e184:	add	x0, sp, #0x40
    e188:	mov	w3, #0x4                   	// #4
    e18c:	mov	x2, xzr
    e190:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e194:	ldr	w8, [sp, #72]
    e198:	b	df1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x26e4>
    e19c:	ldr	x1, [sp]
    e1a0:	add	x0, sp, #0x40
    e1a4:	mov	w3, #0x4                   	// #4
    e1a8:	mov	x2, xzr
    e1ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e1b0:	ldr	w8, [sp, #72]
    e1b4:	b	df5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2724>
    e1b8:	ldr	x1, [sp]
    e1bc:	add	x0, sp, #0x40
    e1c0:	mov	w3, #0x4                   	// #4
    e1c4:	mov	x2, xzr
    e1c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e1cc:	ldr	w8, [sp, #72]
    e1d0:	b	dfa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x276c>
    e1d4:	ldr	x1, [sp]
    e1d8:	add	x0, sp, #0x40
    e1dc:	mov	w3, #0x4                   	// #4
    e1e0:	mov	x2, xzr
    e1e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e1e8:	ldr	w8, [sp, #72]
    e1ec:	b	dfe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x27ac>
    e1f0:	ldr	x1, [sp]
    e1f4:	add	x0, sp, #0x40
    e1f8:	mov	w3, #0x4                   	// #4
    e1fc:	mov	x2, xzr
    e200:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e204:	ldr	w8, [sp, #72]
    e208:	b	e018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x27e0>
    e20c:	ldr	x1, [sp]
    e210:	add	x0, sp, #0x40
    e214:	mov	w3, #0x4                   	// #4
    e218:	mov	x2, xzr
    e21c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e220:	ldr	w8, [sp, #72]
    e224:	b	e044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x280c>
    e228:	ldr	x1, [sp]
    e22c:	add	x0, sp, #0x40
    e230:	mov	w3, #0x4                   	// #4
    e234:	mov	x2, xzr
    e238:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e23c:	ldr	w8, [sp, #72]
    e240:	b	e0d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2898>
    e244:	ldr	x1, [sp]
    e248:	add	x0, sp, #0x40
    e24c:	mov	w3, #0x4                   	// #4
    e250:	mov	x2, xzr
    e254:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e258:	ldr	w8, [sp, #72]
    e25c:	b	e104 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x28cc>
    e260:	mov	w0, #0x220                 	// #544
    e264:	bl	0 <_Znwm>
    e268:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e26c:	ldr	x8, [x8]
    e270:	movi	v0.2s, #0x1
    e274:	str	d0, [x0, #8]
    e278:	movi	v0.2d, #0x0
    e27c:	add	x8, x8, #0x10
    e280:	mov	x9, x0
    e284:	mov	x20, x0
    e288:	str	x8, [x0]
    e28c:	mov	w8, #0xd                   	// #13
    e290:	stp	q0, q0, [x0, #48]
    e294:	stp	q0, q0, [x0, #80]
    e298:	stp	q0, q0, [x0, #112]
    e29c:	stp	q0, q0, [x0, #144]
    e2a0:	stp	q0, q0, [x0, #176]
    e2a4:	stp	q0, q0, [x0, #208]
    e2a8:	stp	q0, q0, [x0, #240]
    e2ac:	stp	q0, q0, [x0, #272]
    e2b0:	stp	q0, q0, [x0, #304]
    e2b4:	stp	q0, q0, [x0, #336]
    e2b8:	stp	q0, q0, [x0, #368]
    e2bc:	stp	q0, q0, [x0, #400]
    e2c0:	stp	q0, q0, [x0, #432]
    e2c4:	stp	q0, q0, [x0, #464]
    e2c8:	stp	q0, q0, [x0, #496]
    e2cc:	str	q0, [x9, #32]!
    e2d0:	str	q0, [x0, #528]
    e2d4:	str	x9, [x20, #16]!
    e2d8:	str	x8, [x9]
    e2dc:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e2e0:	ldr	d0, [x9]
    e2e4:	mov	w8, #0xff                  	// #255
    e2e8:	mov	w9, #0x20                  	// #32
    e2ec:	strb	w8, [x0, #40]
    e2f0:	mov	w8, #0x2                   	// #2
    e2f4:	str	x9, [x0, #48]
    e2f8:	strb	w8, [x0, #56]
    e2fc:	str	d0, [x0, #24]
    e300:	ldr	x22, [x19]
    e304:	stp	x20, x0, [sp, #16]
    e308:	mov	x1, x20
    e30c:	mov	x0, x22
    e310:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e314:	ldp	x1, x8, [x22, #32]
    e318:	add	x21, x22, #0x18
    e31c:	cmp	x1, x8
    e320:	b.eq	e340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b08>  // b.none
    e324:	stp	x20, xzr, [x1]
    e328:	ldr	x9, [sp, #24]
    e32c:	add	x8, x1, #0x10
    e330:	stp	xzr, xzr, [sp, #16]
    e334:	str	x9, [x1, #8]
    e338:	str	x8, [x22, #32]
    e33c:	b	e350 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b18>
    e340:	add	x2, sp, #0x10
    e344:	mov	x0, x21
    e348:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e34c:	ldr	x8, [x22, #32]
    e350:	ldr	x9, [x21]
    e354:	ldr	x21, [sp, #24]
    e358:	sub	x8, x8, x9
    e35c:	lsr	x8, x8, #4
    e360:	add	w20, w8, #0x3
    e364:	cbz	x21, e3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ba8>
    e368:	add	x8, x21, #0x8
    e36c:	cbz	x28, e38c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b54>
    e370:	ldaxr	w9, [x8]
    e374:	sub	w10, w9, #0x1
    e378:	stlxr	w11, w10, [x8]
    e37c:	cbnz	w11, e370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b38>
    e380:	cmp	w9, #0x1
    e384:	b.eq	e3a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b68>  // b.none
    e388:	b	e3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ba8>
    e38c:	ldr	w9, [x8]
    e390:	sub	w10, w9, #0x1
    e394:	str	w10, [x8]
    e398:	cmp	w9, #0x1
    e39c:	b.ne	e3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ba8>  // b.any
    e3a0:	mov	x22, x21
    e3a4:	ldr	x8, [x22], #12
    e3a8:	mov	x0, x21
    e3ac:	ldr	x8, [x8, #16]
    e3b0:	blr	x8
    e3b4:	cbz	x28, e494 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c5c>
    e3b8:	ldaxr	w8, [x22]
    e3bc:	sub	w9, w8, #0x1
    e3c0:	stlxr	w10, w9, [x22]
    e3c4:	cbnz	w10, e3b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b80>
    e3c8:	cmp	w8, #0x1
    e3cc:	b.ne	e3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ba8>  // b.any
    e3d0:	ldr	x8, [x21]
    e3d4:	mov	x0, x21
    e3d8:	ldr	x8, [x8, #24]
    e3dc:	blr	x8
    e3e0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e3e4:	add	x8, x8, #0x0
    e3e8:	ldr	q0, [x8]
    e3ec:	sub	x2, x29, #0x20
    e3f0:	mov	w3, #0x2                   	// #2
    e3f4:	mov	w1, w20
    e3f8:	stur	q0, [x29, #-32]
    e3fc:	ldr	x0, [x19]
    e400:	mov	x4, xzr
    e404:	mov	x5, xzr
    e408:	mov	x6, xzr
    e40c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e410:	ldr	x8, [x19]
    e414:	ldr	x9, [x8]
    e418:	ldr	w8, [x8, #8]
    e41c:	ldr	w9, [x9, #8]
    e420:	add	x8, x8, x9, lsl #3
    e424:	sub	x8, x8, #0x20
    e428:	str	x8, [x19, #648]
    e42c:	ldr	x0, [sp, #64]
    e430:	add	x8, sp, #0x40
    e434:	add	x8, x8, #0x10
    e438:	cmp	x0, x8
    e43c:	b.eq	e444 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c0c>  // b.none
    e440:	bl	0 <free>
    e444:	ldur	x1, [x29, #-112]
    e448:	sub	x0, x29, #0x80
    e44c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e450:	ldur	x1, [x29, #-64]
    e454:	sub	x0, x29, #0x50
    e458:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e45c:	add	sp, sp, #0x1e0
    e460:	ldp	x20, x19, [sp, #80]
    e464:	ldp	x22, x21, [sp, #64]
    e468:	ldp	x24, x23, [sp, #48]
    e46c:	ldp	x26, x25, [sp, #32]
    e470:	ldp	x28, x27, [sp, #16]
    e474:	ldp	x29, x30, [sp], #96
    e478:	ret
    e47c:	ldr	w8, [x23]
    e480:	sub	w9, w8, #0x1
    e484:	str	w9, [x23]
    e488:	cmp	w8, #0x1
    e48c:	b.eq	c3b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb78>  // b.none
    e490:	b	c3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb88>
    e494:	ldr	w8, [x22]
    e498:	sub	w9, w8, #0x1
    e49c:	str	w9, [x22]
    e4a0:	cmp	w8, #0x1
    e4a4:	b.eq	e3d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b98>  // b.none
    e4a8:	b	e3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ba8>
    e4ac:	ldr	w8, [x21]
    e4b0:	sub	w9, w8, #0x1
    e4b4:	str	w9, [x21]
    e4b8:	cmp	w8, #0x1
    e4bc:	b.eq	c0dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8a4>  // b.none
    e4c0:	b	c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8b4>
    e4c4:	mov	w3, #0x10                  	// #16
    e4c8:	mov	x0, x22
    e4cc:	mov	x1, x23
    e4d0:	mov	x2, xzr
    e4d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e4d8:	ldr	w8, [x21, #24]
    e4dc:	b	c268 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xa30>
    e4e0:	mov	w3, #0x10                  	// #16
    e4e4:	mov	x0, x22
    e4e8:	mov	x1, x23
    e4ec:	mov	x2, xzr
    e4f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e4f4:	ldr	w8, [x21, #24]
    e4f8:	b	c2a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xa70>
    e4fc:	mov	w3, #0x10                  	// #16
    e500:	mov	x0, x21
    e504:	mov	x1, x22
    e508:	mov	x2, xzr
    e50c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e510:	ldr	w8, [x26]
    e514:	b	bd7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x544>
    e518:	mov	w3, #0x10                  	// #16
    e51c:	mov	x0, x21
    e520:	mov	x1, x22
    e524:	mov	x2, xzr
    e528:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e52c:	ldr	w8, [x26]
    e530:	b	bdc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x588>
    e534:	mov	w3, #0x10                  	// #16
    e538:	mov	x0, x21
    e53c:	mov	x1, x22
    e540:	mov	x2, xzr
    e544:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e548:	ldr	w8, [x26]
    e54c:	b	be10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x5d8>
    e550:	mov	w3, #0x10                  	// #16
    e554:	mov	x0, x21
    e558:	mov	x1, x22
    e55c:	mov	x2, xzr
    e560:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e564:	ldr	w8, [x26]
    e568:	b	be50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x618>
    e56c:	mov	w3, #0x10                  	// #16
    e570:	mov	x0, x21
    e574:	mov	x1, x22
    e578:	mov	x2, xzr
    e57c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e580:	ldr	w8, [x26]
    e584:	b	be94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x65c>
    e588:	mov	w3, #0x10                  	// #16
    e58c:	mov	x0, x21
    e590:	mov	x1, x22
    e594:	mov	x2, xzr
    e598:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e59c:	ldr	w8, [x26]
    e5a0:	b	bed8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x6a0>
    e5a4:	mov	w3, #0x10                  	// #16
    e5a8:	mov	x0, x21
    e5ac:	mov	x1, x22
    e5b0:	mov	x2, xzr
    e5b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e5b8:	ldr	w8, [x26]
    e5bc:	b	bf34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x6fc>
    e5c0:	mov	w3, #0x10                  	// #16
    e5c4:	mov	x0, x21
    e5c8:	mov	x1, x22
    e5cc:	mov	x2, xzr
    e5d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e5d4:	ldr	w8, [x26]
    e5d8:	b	bfac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x774>
    e5dc:	mov	w3, #0x10                  	// #16
    e5e0:	mov	x0, x21
    e5e4:	mov	x1, x22
    e5e8:	mov	x2, xzr
    e5ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e5f0:	ldr	w8, [x26]
    e5f4:	b	bf58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x720>
    e5f8:	mov	w3, #0x10                  	// #16
    e5fc:	mov	x0, x21
    e600:	mov	x1, x22
    e604:	mov	x2, xzr
    e608:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e60c:	ldr	w8, [x26]
    e610:	b	bfc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x790>
    e614:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e618:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e61c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e620:	add	x0, x0, #0x0
    e624:	add	x1, x1, #0x0
    e628:	add	x3, x3, #0x0
    e62c:	mov	w2, #0x43                  	// #67
    e630:	bl	0 <__assert_fail>
    e634:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e638:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e63c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e640:	add	x0, x0, #0x0
    e644:	add	x1, x1, #0x0
    e648:	add	x3, x3, #0x0
    e64c:	mov	w2, #0xeb                  	// #235
    e650:	bl	0 <__assert_fail>
    e654:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e658:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e65c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e660:	add	x0, x0, #0x0
    e664:	add	x1, x1, #0x0
    e668:	add	x3, x3, #0x0
    e66c:	mov	w2, #0xe9                  	// #233
    e670:	bl	0 <__assert_fail>
    e674:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e678:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e67c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e680:	add	x0, x0, #0x0
    e684:	add	x1, x1, #0x0
    e688:	add	x3, x3, #0x0
    e68c:	mov	w2, #0x29                  	// #41
    e690:	bl	0 <__assert_fail>
    e694:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e698:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e69c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6a0:	add	x0, x0, #0x0
    e6a4:	add	x1, x1, #0x0
    e6a8:	add	x3, x3, #0x0
    e6ac:	mov	w2, #0x252                 	// #594
    e6b0:	bl	0 <__assert_fail>
    e6b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6c0:	add	x0, x0, #0x0
    e6c4:	add	x1, x1, #0x0
    e6c8:	add	x3, x3, #0x0
    e6cc:	mov	w2, #0xa9                  	// #169
    e6d0:	bl	0 <__assert_fail>
    e6d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6dc:	add	x0, x0, #0x0
    e6e0:	add	x1, x1, #0x0
    e6e4:	mov	w2, #0x3e3                 	// #995
    e6e8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    e6ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e6f4:	add	x0, x0, #0x0
    e6f8:	add	x1, x1, #0x0
    e6fc:	mov	w2, #0x411                 	// #1041
    e700:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    e704:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e708:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e70c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e710:	add	x0, x0, #0x0
    e714:	add	x1, x1, #0x0
    e718:	add	x3, x3, #0x0
    e71c:	mov	w2, #0x69                  	// #105
    e720:	bl	0 <__assert_fail>
    e724:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e728:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e72c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e730:	add	x0, x0, #0x0
    e734:	add	x1, x1, #0x0
    e738:	add	x3, x3, #0x0
    e73c:	mov	w2, #0x108                 	// #264
    e740:	bl	0 <__assert_fail>
    e744:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e748:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e74c:	add	x0, x0, #0x0
    e750:	add	x1, x1, #0x0
    e754:	mov	w2, #0x41a                 	// #1050
    e758:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    e75c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e760:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e764:	add	x0, x0, #0x0
    e768:	add	x1, x1, #0x0
    e76c:	mov	w2, #0x43e                 	// #1086
    e770:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    e774:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e778:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e77c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e780:	add	x0, x0, #0x0
    e784:	add	x1, x1, #0x0
    e788:	add	x3, x3, #0x0
    e78c:	mov	w2, #0x8b                  	// #139
    e790:	bl	0 <__assert_fail>
    e794:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e798:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e79c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7a0:	add	x0, x0, #0x0
    e7a4:	add	x1, x1, #0x0
    e7a8:	add	x3, x3, #0x0
    e7ac:	mov	w2, #0x8b                  	// #139
    e7b0:	bl	0 <__assert_fail>
    e7b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7bc:	add	x0, x0, #0x0
    e7c0:	add	x1, x1, #0x0
    e7c4:	mov	w2, #0x425                 	// #1061
    e7c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    e7cc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7d0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7d4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7d8:	add	x0, x0, #0x0
    e7dc:	add	x1, x1, #0x0
    e7e0:	add	x3, x3, #0x0
    e7e4:	mov	w2, #0x252                 	// #594
    e7e8:	bl	0 <__assert_fail>
    e7ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7f4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e7f8:	add	x0, x0, #0x0
    e7fc:	add	x1, x1, #0x0
    e800:	add	x3, x3, #0x0
    e804:	mov	w2, #0x134                 	// #308
    e808:	bl	0 <__assert_fail>
    e80c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e810:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e814:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e818:	add	x0, x0, #0x0
    e81c:	add	x1, x1, #0x0
    e820:	add	x3, x3, #0x0
    e824:	mov	w2, #0x69                  	// #105
    e828:	bl	0 <__assert_fail>
    e82c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e830:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e834:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e838:	add	x0, x0, #0x0
    e83c:	add	x1, x1, #0x0
    e840:	add	x3, x3, #0x0
    e844:	mov	w2, #0x108                 	// #264
    e848:	bl	0 <__assert_fail>
    e84c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e850:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e854:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e858:	add	x0, x0, #0x0
    e85c:	add	x1, x1, #0x0
    e860:	add	x3, x3, #0x0
    e864:	mov	w2, #0xb3                  	// #179
    e868:	bl	0 <__assert_fail>
    e86c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e870:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e874:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e878:	add	x0, x0, #0x0
    e87c:	add	x1, x1, #0x0
    e880:	add	x3, x3, #0x0
    e884:	mov	w2, #0x8b                  	// #139
    e888:	bl	0 <__assert_fail>
    e88c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e890:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e894:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e898:	add	x0, x0, #0x0
    e89c:	add	x1, x1, #0x0
    e8a0:	add	x3, x3, #0x0
    e8a4:	mov	w2, #0x8b                  	// #139
    e8a8:	bl	0 <__assert_fail>
    e8ac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e8b0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e8b4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e8b8:	add	x0, x0, #0x0
    e8bc:	add	x1, x1, #0x0
    e8c0:	add	x3, x3, #0x0
    e8c4:	mov	w2, #0x89                  	// #137
    e8c8:	bl	0 <__assert_fail>

000000000000e8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE>:
    e8cc:	str	d8, [sp, #-112]!
    e8d0:	stp	x29, x30, [sp, #16]
    e8d4:	stp	x28, x27, [sp, #32]
    e8d8:	stp	x26, x25, [sp, #48]
    e8dc:	stp	x24, x23, [sp, #64]
    e8e0:	stp	x22, x21, [sp, #80]
    e8e4:	stp	x20, x19, [sp, #96]
    e8e8:	mov	x29, sp
    e8ec:	sub	sp, sp, #0x220
    e8f0:	ldrb	w8, [x0, #344]
    e8f4:	cbz	w8, eb88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x2bc>
    e8f8:	ldp	x9, x8, [x0, #24]
    e8fc:	mov	x19, x0
    e900:	cmp	x9, x8
    e904:	b.eq	eb04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x238>  // b.none
    e908:	ldur	x8, [x8, #-32]
    e90c:	mov	x20, x1
    e910:	cmp	x8, x1
    e914:	b.ne	eb04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x238>  // b.any
    e918:	ldr	x0, [x19]
    e91c:	mov	w1, #0x12                  	// #18
    e920:	mov	w2, #0x3                   	// #3
    e924:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e928:	ldp	x8, x26, [x19, #24]
    e92c:	cmp	x8, x26
    e930:	b.eq	eafc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x230>  // b.none
    e934:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e938:	ldr	d8, [x8]
    e93c:	add	x8, sp, #0x8
    e940:	add	x21, x19, #0x18
    e944:	add	x22, x8, #0x10
    e948:	mov	w25, #0x1                   	// #1
    e94c:	b	e95c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x90>
    e950:	ldr	x8, [x19, #24]
    e954:	cmp	x8, x26
    e958:	b.eq	eafc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x230>  // b.none
    e95c:	ldur	x8, [x26, #-32]
    e960:	cmp	x8, x20
    e964:	b.ne	eafc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x230>  // b.any
    e968:	ldp	x27, x8, [x26, #-24]
    e96c:	sub	x28, x8, x27
    e970:	asr	x24, x28, #2
    e974:	cmp	x24, #0x1
    e978:	b.ls	eb48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x27c>  // b.plast
    e97c:	ldur	x8, [x26, #-40]
    e980:	cbz	x8, eb68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x29c>
    e984:	ldrb	w8, [x8, #16]
    e988:	str	x22, [sp, #8]
    e98c:	str	d8, [sp, #16]
    e990:	cmp	w8, #0x12
    e994:	cinc	w23, w25, eq  // eq = none
    e998:	cmp	x24, #0x41
    e99c:	b.cc	e9b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0xe8>  // b.lo, b.ul, b.last
    e9a0:	add	x0, sp, #0x8
    e9a4:	mov	w3, #0x8                   	// #8
    e9a8:	mov	x1, x22
    e9ac:	mov	x2, x24
    e9b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e9b4:	cmp	x28, #0x0
    e9b8:	b.le	e9ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x120>
    e9bc:	lsr	x9, x28, #2
    e9c0:	ldr	x10, [sp, #8]
    e9c4:	ldr	w8, [sp, #16]
    e9c8:	cmp	x9, #0x0
    e9cc:	cset	w11, ne  // ne = any
    e9d0:	sub	x11, x9, x11
    e9d4:	add	x11, x11, #0x1
    e9d8:	cmp	x11, #0x4
    e9dc:	add	x14, x10, x8, lsl #3
    e9e0:	b.cs	e9f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x128>  // b.hs, b.nlast
    e9e4:	mov	x10, x14
    e9e8:	b	ea38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x16c>
    e9ec:	ldr	w8, [sp, #16]
    e9f0:	b	ea50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x184>
    e9f4:	and	x12, x11, #0xfffffffffffffffc
    e9f8:	add	x13, x27, #0x8
    e9fc:	sub	x9, x9, x12
    ea00:	add	x10, x14, x12, lsl #3
    ea04:	add	x27, x27, x12, lsl #2
    ea08:	add	x14, x14, #0x10
    ea0c:	mov	x15, x12
    ea10:	ldp	d0, d1, [x13, #-8]
    ea14:	add	x13, x13, #0x10
    ea18:	subs	x15, x15, #0x4
    ea1c:	uxtl	v0.2d, v0.2s
    ea20:	uxtl	v1.2d, v1.2s
    ea24:	stp	q0, q1, [x14, #-16]
    ea28:	add	x14, x14, #0x20
    ea2c:	b.ne	ea10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x144>  // b.any
    ea30:	cmp	x11, x12
    ea34:	b.eq	ea50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x184>  // b.none
    ea38:	add	x9, x9, #0x1
    ea3c:	ldr	w11, [x27], #4
    ea40:	sub	x9, x9, #0x1
    ea44:	cmp	x9, #0x1
    ea48:	str	x11, [x10], #8
    ea4c:	b.gt	ea3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x170>
    ea50:	ldr	w9, [sp, #20]
    ea54:	add	x8, x8, x24
    ea58:	cmp	x8, x9
    ea5c:	b.hi	eb28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x25c>  // b.pmore
    ea60:	str	w8, [sp, #16]
    ea64:	ldur	x1, [x26, #-40]
    ea68:	mov	x0, x21
    ea6c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ea70:	ldp	w8, w9, [sp, #16]
    ea74:	mov	w24, w0
    ea78:	cmp	w8, w9
    ea7c:	b.cs	eae0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x214>  // b.hs, b.nlast
    ea80:	ldr	x9, [sp, #8]
    ea84:	str	x24, [x9, w8, uxtw #3]
    ea88:	ldp	w8, w9, [sp, #16]
    ea8c:	cmp	w8, w9
    ea90:	b.cs	eb28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x25c>  // b.hs, b.nlast
    ea94:	add	w8, w8, #0x1
    ea98:	str	w8, [sp, #16]
    ea9c:	ldr	x0, [x19]
    eaa0:	add	x2, sp, #0x8
    eaa4:	mov	w1, w23
    eaa8:	mov	w3, wzr
    eaac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eab0:	ldr	x0, [sp, #8]
    eab4:	cmp	x0, x22
    eab8:	b.eq	eac0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x1f4>  // b.none
    eabc:	bl	0 <free>
    eac0:	ldr	x8, [x19, #32]
    eac4:	sub	x26, x8, #0x28
    eac8:	str	x26, [x19, #32]
    eacc:	ldur	x0, [x8, #-24]
    ead0:	cbz	x0, e950 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x84>
    ead4:	bl	0 <_ZdlPv>
    ead8:	ldr	x26, [x19, #32]
    eadc:	b	e950 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x84>
    eae0:	add	x0, sp, #0x8
    eae4:	mov	w3, #0x8                   	// #8
    eae8:	mov	x1, x22
    eaec:	mov	x2, xzr
    eaf0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    eaf4:	ldr	w8, [sp, #16]
    eaf8:	b	ea80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x1b4>
    eafc:	ldr	x0, [x19]
    eb00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb04:	add	sp, sp, #0x220
    eb08:	ldp	x20, x19, [sp, #96]
    eb0c:	ldp	x22, x21, [sp, #80]
    eb10:	ldp	x24, x23, [sp, #64]
    eb14:	ldp	x26, x25, [sp, #48]
    eb18:	ldp	x28, x27, [sp, #32]
    eb1c:	ldp	x29, x30, [sp, #16]
    eb20:	ldr	d8, [sp], #112
    eb24:	ret
    eb28:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb2c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb30:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb34:	add	x0, x0, #0x0
    eb38:	add	x1, x1, #0x0
    eb3c:	add	x3, x3, #0x0
    eb40:	mov	w2, #0x43                  	// #67
    eb44:	bl	0 <__assert_fail>
    eb48:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb4c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb50:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb54:	add	x0, x0, #0x0
    eb58:	add	x1, x1, #0x0
    eb5c:	add	x3, x3, #0x0
    eb60:	mov	w2, #0xc44                 	// #3140
    eb64:	bl	0 <__assert_fail>
    eb68:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb6c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb70:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb74:	add	x0, x0, #0x0
    eb78:	add	x1, x1, #0x0
    eb7c:	add	x3, x3, #0x0
    eb80:	mov	w2, #0x69                  	// #105
    eb84:	bl	0 <__assert_fail>
    eb88:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb8c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb90:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eb94:	add	x0, x0, #0x0
    eb98:	add	x1, x1, #0x0
    eb9c:	add	x3, x3, #0x0
    eba0:	mov	w2, #0xc52                 	// #3154
    eba4:	bl	0 <__assert_fail>

000000000000eba8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv>:
    eba8:	str	d8, [sp, #-112]!
    ebac:	stp	x29, x30, [sp, #16]
    ebb0:	stp	x28, x27, [sp, #32]
    ebb4:	stp	x26, x25, [sp, #48]
    ebb8:	stp	x24, x23, [sp, #64]
    ebbc:	stp	x22, x21, [sp, #80]
    ebc0:	stp	x20, x19, [sp, #96]
    ebc4:	mov	x29, sp
    ebc8:	sub	sp, sp, #0x3b0
    ebcc:	mov	x26, x0
    ebd0:	ldr	x0, [x0, #16]
    ebd4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ebd8:	add	x1, x1, #0x0
    ebdc:	mov	w2, #0x7                   	// #7
    ebe0:	bl	0 <_ZNK4llvm6Module13getModuleFlagENS_9StringRefE>
    ebe4:	cbz	x0, ec50 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xa8>
    ebe8:	ldrb	w8, [x0]
    ebec:	cmp	w8, #0x1
    ebf0:	b.ne	115f8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2a50>  // b.any
    ebf4:	ldr	x8, [x0, #136]
    ebf8:	cbz	x8, 11618 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2a70>
    ebfc:	ldrb	w9, [x8, #16]
    ec00:	cmp	w9, #0x11
    ec04:	b.cs	11638 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2a90>  // b.hs, b.nlast
    ec08:	cmp	w9, #0xd
    ec0c:	b.ne	11658 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2ab0>  // b.any
    ec10:	ldr	w19, [x8, #32]
    ec14:	add	x20, x8, #0x18
    ec18:	cmp	w19, #0x40
    ec1c:	b.ls	ec38 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x90>  // b.plast
    ec20:	mov	x0, x20
    ec24:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ec28:	sub	w8, w19, w0
    ec2c:	cmp	w8, #0x41
    ec30:	b.cs	11678 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2ad0>  // b.hs, b.nlast
    ec34:	ldr	x20, [x20]
    ec38:	ldr	x8, [x20]
    ec3c:	mov	w9, #0x14                  	// #20
    ec40:	cmp	x8, #0x0
    ec44:	mov	w8, #0x18                  	// #24
    ec48:	csel	w1, w8, w9, eq  // eq = none
    ec4c:	b	ec54 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xac>
    ec50:	mov	w1, #0x14                  	// #20
    ec54:	ldr	x0, [x26]
    ec58:	mov	w2, #0x4                   	// #4
    ec5c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ec60:	ldr	x0, [x26]
    ec64:	mov	w8, #0x8                   	// #8
    ec68:	sub	x19, x29, #0xa0
    ec6c:	mov	w20, #0x1                   	// #1
    ec70:	add	x2, sp, #0x70
    ec74:	mov	w1, #0xa                   	// #10
    ec78:	mov	w3, wzr
    ec7c:	stur	x8, [x29, #-160]
    ec80:	stp	x19, x20, [sp, #112]
    ec84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ec88:	ldr	x8, [x26, #584]
    ec8c:	ldr	x0, [x26]
    ec90:	add	x2, sp, #0x70
    ec94:	mov	w1, #0x14                  	// #20
    ec98:	ldrb	w8, [x8, #229]
    ec9c:	mov	w3, wzr
    eca0:	stp	x19, x20, [sp, #112]
    eca4:	lsl	x8, x8, #3
    eca8:	stur	x8, [x29, #-160]
    ecac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ecb0:	ldr	x8, [x26, #584]
    ecb4:	ldr	x9, [x8, #24]
    ecb8:	add	x8, x8, #0x8
    ecbc:	cmp	x9, x8
    ecc0:	b.eq	f06c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x4c4>  // b.none
    ecc4:	ldr	x20, [x26, #616]
    ecc8:	add	x25, x26, #0x258
    eccc:	cmp	x20, x25
    ecd0:	b.eq	ed18 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x170>  // b.none
    ecd4:	sub	x21, x29, #0xa0
    ecd8:	mov	w22, #0x2                   	// #2
    ecdc:	ldr	w8, [x20, #40]
    ece0:	ldr	x0, [x26]
    ece4:	add	x2, sp, #0x70
    ece8:	mov	w1, #0x10                  	// #16
    ecec:	stur	x8, [x29, #-160]
    ecf0:	ldr	x8, [x20, #32]
    ecf4:	mov	w3, wzr
    ecf8:	stp	x21, x22, [sp, #112]
    ecfc:	stur	x8, [x29, #-152]
    ed00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ed04:	mov	x0, x20
    ed08:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    ed0c:	mov	x20, x0
    ed10:	cmp	x0, x25
    ed14:	b.ne	ecdc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x134>  // b.any
    ed18:	mov	w0, #0x220                 	// #544
    ed1c:	bl	0 <_Znwm>
    ed20:	adrp	x23, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ed24:	ldr	x23, [x23]
    ed28:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ed2c:	ldr	d8, [x8]
    ed30:	movi	v0.2s, #0x1
    ed34:	add	x10, x23, #0x10
    ed38:	str	x10, [x0]
    ed3c:	ldr	w8, [sp, #112]
    ed40:	ldur	w10, [sp, #115]
    ed44:	str	d0, [x0, #8]
    ed48:	movi	v0.2d, #0x0
    ed4c:	mov	x22, x0
    ed50:	mov	x21, x0
    ed54:	mov	x24, x0
    ed58:	mov	w9, #0x2                   	// #2
    ed5c:	stp	q0, q0, [x0, #48]
    ed60:	stp	q0, q0, [x0, #80]
    ed64:	stp	q0, q0, [x0, #112]
    ed68:	stp	q0, q0, [x0, #144]
    ed6c:	stp	q0, q0, [x0, #176]
    ed70:	stp	q0, q0, [x0, #208]
    ed74:	stp	q0, q0, [x0, #240]
    ed78:	stp	q0, q0, [x0, #272]
    ed7c:	stp	q0, q0, [x0, #304]
    ed80:	stp	q0, q0, [x0, #336]
    ed84:	stp	q0, q0, [x0, #368]
    ed88:	stp	q0, q0, [x0, #400]
    ed8c:	stp	q0, q0, [x0, #432]
    ed90:	stp	q0, q0, [x0, #464]
    ed94:	stp	q0, q0, [x0, #496]
    ed98:	str	q0, [x22, #32]!
    ed9c:	str	q0, [x0, #528]
    eda0:	str	x22, [x21, #16]!
    eda4:	str	d8, [x24, #24]!
    eda8:	str	x9, [x22]
    edac:	mov	w9, #0xff                  	// #255
    edb0:	strb	w9, [x0, #40]
    edb4:	str	w10, [x0, #44]
    edb8:	stur	w8, [x0, #41]
    edbc:	ldr	w8, [x24]
    edc0:	ldr	w9, [x0, #28]
    edc4:	cmp	w8, w9
    edc8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    edcc:	add	w8, w8, #0x1
    edd0:	mov	x20, x0
    edd4:	cmp	w8, w9
    edd8:	str	w8, [x24]
    eddc:	b.cs	10fd0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2428>  // b.hs, b.nlast
    ede0:	ldr	x9, [x20, #16]
    ede4:	mov	w10, #0x8                   	// #8
    ede8:	mov	w11, #0x4                   	// #4
    edec:	add	x8, x9, w8, uxtw #4
    edf0:	str	x10, [x8]
    edf4:	strb	w11, [x8, #8]
    edf8:	ldur	w9, [sp, #115]
    edfc:	ldr	w10, [sp, #112]
    ee00:	str	w9, [x8, #12]
    ee04:	stur	w10, [x8, #9]
    ee08:	ldp	w8, w9, [x20, #24]
    ee0c:	cmp	w8, w9
    ee10:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    ee14:	add	w8, w8, #0x1
    ee18:	cmp	w8, w9
    ee1c:	str	w8, [x24]
    ee20:	b.cs	10fec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2444>  // b.hs, b.nlast
    ee24:	ldr	x9, [x20, #16]
    ee28:	mov	w10, #0x6                   	// #6
    ee2c:	mov	w11, #0x4                   	// #4
    ee30:	add	x8, x9, w8, uxtw #4
    ee34:	str	x10, [x8]
    ee38:	strb	w11, [x8, #8]
    ee3c:	ldur	w9, [sp, #115]
    ee40:	ldr	w10, [sp, #112]
    ee44:	str	w9, [x8, #12]
    ee48:	stur	w10, [x8, #9]
    ee4c:	ldp	w8, w9, [x20, #24]
    ee50:	cmp	w8, w9
    ee54:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    ee58:	add	w8, w8, #0x1
    ee5c:	cmp	w8, w9
    ee60:	str	w8, [x24]
    ee64:	b.cs	11008 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2460>  // b.hs, b.nlast
    ee68:	ldr	x9, [x20, #16]
    ee6c:	mov	w10, #0x8                   	// #8
    ee70:	mov	w11, #0x4                   	// #4
    ee74:	add	x8, x9, w8, uxtw #4
    ee78:	str	x10, [x8]
    ee7c:	strb	w11, [x8, #8]
    ee80:	ldur	w9, [sp, #115]
    ee84:	ldr	w10, [sp, #112]
    ee88:	str	w9, [x8, #12]
    ee8c:	stur	w10, [x8, #9]
    ee90:	ldp	w8, w9, [x20, #24]
    ee94:	cmp	w8, w9
    ee98:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    ee9c:	add	w8, w8, #0x1
    eea0:	cmp	w8, w9
    eea4:	str	w8, [x24]
    eea8:	b.cs	11024 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x247c>  // b.hs, b.nlast
    eeac:	ldr	x9, [x20, #16]
    eeb0:	mov	w10, #0x4                   	// #4
    eeb4:	add	x8, x9, w8, uxtw #4
    eeb8:	str	x10, [x8]
    eebc:	strb	w10, [x8, #8]
    eec0:	ldur	w9, [sp, #115]
    eec4:	ldr	w10, [sp, #112]
    eec8:	str	w9, [x8, #12]
    eecc:	stur	w10, [x8, #9]
    eed0:	ldp	w8, w9, [x20, #24]
    eed4:	cmp	w8, w9
    eed8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    eedc:	add	w8, w8, #0x1
    eee0:	cmp	w8, w9
    eee4:	str	w8, [x24]
    eee8:	b.cs	11040 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2498>  // b.hs, b.nlast
    eeec:	ldr	x9, [x20, #16]
    eef0:	mov	w10, #0x4                   	// #4
    eef4:	add	x8, x9, w8, uxtw #4
    eef8:	str	x10, [x8]
    eefc:	strb	w10, [x8, #8]
    ef00:	ldur	w9, [sp, #115]
    ef04:	ldr	w10, [sp, #112]
    ef08:	str	w9, [x8, #12]
    ef0c:	stur	w10, [x8, #9]
    ef10:	ldp	w8, w9, [x20, #24]
    ef14:	cmp	w8, w9
    ef18:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    ef1c:	add	w8, w8, #0x1
    ef20:	cmp	w8, w9
    ef24:	str	w8, [x24]
    ef28:	b.cs	1105c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x24b4>  // b.hs, b.nlast
    ef2c:	ldr	x9, [x20, #16]
    ef30:	mov	w10, #0x4                   	// #4
    ef34:	add	x8, x9, w8, uxtw #4
    ef38:	str	x10, [x8]
    ef3c:	strb	w10, [x8, #8]
    ef40:	ldur	w9, [sp, #115]
    ef44:	ldr	w10, [sp, #112]
    ef48:	str	w9, [x8, #12]
    ef4c:	stur	w10, [x8, #9]
    ef50:	ldp	w8, w9, [x20, #24]
    ef54:	cmp	w8, w9
    ef58:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    ef5c:	add	w8, w8, #0x1
    ef60:	cmp	w8, w9
    ef64:	str	w8, [x24]
    ef68:	b.cs	11078 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x24d0>  // b.hs, b.nlast
    ef6c:	ldr	x9, [x20, #16]
    ef70:	mov	w10, #0x4                   	// #4
    ef74:	add	x8, x9, w8, uxtw #4
    ef78:	str	x10, [x8]
    ef7c:	strb	w10, [x8, #8]
    ef80:	ldur	w9, [sp, #115]
    ef84:	ldr	w10, [sp, #112]
    ef88:	str	w9, [x8, #12]
    ef8c:	stur	w10, [x8, #9]
    ef90:	ldp	w8, w9, [x20, #24]
    ef94:	cmp	w8, w9
    ef98:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    ef9c:	add	w8, w8, #0x1
    efa0:	cmp	w8, w9
    efa4:	str	w8, [x24]
    efa8:	b.cs	11094 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x24ec>  // b.hs, b.nlast
    efac:	ldr	x9, [x20, #16]
    efb0:	mov	w10, #0x6                   	// #6
    efb4:	add	x8, x9, w8, uxtw #4
    efb8:	str	xzr, [x8]
    efbc:	strb	w10, [x8, #8]
    efc0:	ldur	w9, [sp, #115]
    efc4:	ldr	w10, [sp, #112]
    efc8:	str	w9, [x8, #12]
    efcc:	stur	w10, [x8, #9]
    efd0:	ldp	w8, w9, [x20, #24]
    efd4:	cmp	w8, w9
    efd8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    efdc:	add	w8, w8, #0x1
    efe0:	cmp	w8, w9
    efe4:	str	w8, [x24]
    efe8:	b.cs	110b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2508>  // b.hs, b.nlast
    efec:	ldr	x9, [x20, #16]
    eff0:	mov	w10, #0x8                   	// #8
    eff4:	mov	w11, #0x4                   	// #4
    eff8:	add	x8, x9, w8, uxtw #4
    effc:	str	x10, [x8]
    f000:	strb	w11, [x8, #8]
    f004:	ldur	w9, [sp, #115]
    f008:	ldr	w10, [sp, #112]
    f00c:	str	w9, [x8, #12]
    f010:	stur	w10, [x8, #9]
    f014:	ldp	w8, w9, [x20, #24]
    f018:	cmp	w8, w9
    f01c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f020:	add	w8, w8, #0x1
    f024:	str	w8, [x20, #24]
    f028:	ldr	x22, [x26]
    f02c:	mov	x1, x21
    f030:	stp	x21, x20, [x29, #-224]
    f034:	mov	x0, x22
    f038:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f03c:	ldp	x1, x8, [x22, #32]
    f040:	add	x21, x22, #0x18
    f044:	cmp	x1, x8
    f048:	b.eq	f078 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x4d0>  // b.none
    f04c:	str	xzr, [x1, #8]
    f050:	ldur	q0, [x29, #-224]
    f054:	add	x19, x1, #0x10
    f058:	stur	xzr, [x29, #-216]
    f05c:	str	q0, [x1]
    f060:	stur	xzr, [x29, #-224]
    f064:	str	x19, [x22, #32]
    f068:	b	f088 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x4e0>
    f06c:	ldr	x0, [x26]
    f070:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f074:	b	10f1c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2374>
    f078:	sub	x2, x29, #0xe0
    f07c:	mov	x0, x21
    f080:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f084:	ldr	x19, [x22, #32]
    f088:	adrp	x28, 0 <__pthread_key_create>
    f08c:	ldur	x20, [x29, #-216]
    f090:	ldr	x27, [x21]
    f094:	ldr	x28, [x28]
    f098:	cbz	x20, f114 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>
    f09c:	add	x8, x20, #0x8
    f0a0:	cbz	x28, f0c0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x518>
    f0a4:	ldaxr	w9, [x8]
    f0a8:	sub	w10, w9, #0x1
    f0ac:	stlxr	w11, w10, [x8]
    f0b0:	cbnz	w11, f0a4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x4fc>
    f0b4:	cmp	w9, #0x1
    f0b8:	b.eq	f0d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x52c>  // b.none
    f0bc:	b	f114 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>
    f0c0:	ldr	w9, [x8]
    f0c4:	sub	w10, w9, #0x1
    f0c8:	str	w10, [x8]
    f0cc:	cmp	w9, #0x1
    f0d0:	b.ne	f114 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>  // b.any
    f0d4:	mov	x21, x20
    f0d8:	ldr	x8, [x21], #12
    f0dc:	mov	x0, x20
    f0e0:	ldr	x8, [x8, #16]
    f0e4:	blr	x8
    f0e8:	cbz	x28, 10f40 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2398>
    f0ec:	ldaxr	w8, [x21]
    f0f0:	sub	w9, w8, #0x1
    f0f4:	stlxr	w10, w9, [x21]
    f0f8:	cbnz	w10, f0ec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x544>
    f0fc:	cmp	w8, #0x1
    f100:	b.ne	f114 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>  // b.any
    f104:	ldr	x8, [x20]
    f108:	mov	x0, x20
    f10c:	ldr	x8, [x8, #24]
    f110:	blr	x8
    f114:	mov	w0, #0x220                 	// #544
    f118:	bl	0 <_Znwm>
    f11c:	add	x8, x23, #0x10
    f120:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f124:	movi	v0.2s, #0x1
    f128:	str	x8, [x0]
    f12c:	ldrb	w8, [x9]
    f130:	str	d0, [x0, #8]
    f134:	movi	v0.2d, #0x0
    f138:	mov	x22, x0
    f13c:	stp	q0, q0, [x0, #48]
    f140:	stp	q0, q0, [x0, #80]
    f144:	stp	q0, q0, [x0, #112]
    f148:	stp	q0, q0, [x0, #144]
    f14c:	stp	q0, q0, [x0, #176]
    f150:	stp	q0, q0, [x0, #208]
    f154:	stp	q0, q0, [x0, #240]
    f158:	stp	q0, q0, [x0, #272]
    f15c:	stp	q0, q0, [x0, #304]
    f160:	stp	q0, q0, [x0, #336]
    f164:	stp	q0, q0, [x0, #368]
    f168:	stp	q0, q0, [x0, #400]
    f16c:	stp	q0, q0, [x0, #432]
    f170:	stp	q0, q0, [x0, #464]
    f174:	stp	q0, q0, [x0, #496]
    f178:	str	q0, [x22, #32]!
    f17c:	mov	x21, x0
    f180:	mov	x24, x0
    f184:	mov	x20, x0
    f188:	str	q0, [x0, #528]
    f18c:	str	x22, [x21, #16]!
    f190:	str	d8, [x24, #24]!
    f194:	cbz	w8, f1a0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x5f8>
    f198:	mov	w10, #0x13                  	// #19
    f19c:	b	f1a4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x5fc>
    f1a0:	mov	w10, #0x1                   	// #1
    f1a4:	ldp	w8, w9, [x20, #24]
    f1a8:	ldr	w12, [sp, #112]
    f1ac:	ldur	w13, [sp, #115]
    f1b0:	mov	w11, #0xff                  	// #255
    f1b4:	cmp	w8, w9
    f1b8:	str	x10, [x20, #32]
    f1bc:	strb	w11, [x20, #40]
    f1c0:	str	w13, [x20, #44]
    f1c4:	stur	w12, [x20, #41]
    f1c8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f1cc:	add	w8, w8, #0x1
    f1d0:	cmp	w8, w9
    f1d4:	str	w8, [x24]
    f1d8:	b.cs	110cc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2524>  // b.hs, b.nlast
    f1dc:	ldr	x9, [x20, #16]
    f1e0:	mov	w10, #0x8                   	// #8
    f1e4:	mov	w11, #0x4                   	// #4
    f1e8:	add	x8, x9, w8, uxtw #4
    f1ec:	str	x10, [x8]
    f1f0:	strb	w11, [x8, #8]
    f1f4:	ldur	w9, [sp, #115]
    f1f8:	ldr	w10, [sp, #112]
    f1fc:	str	w9, [x8, #12]
    f200:	stur	w10, [x8, #9]
    f204:	ldp	w8, w9, [x20, #24]
    f208:	cmp	w8, w9
    f20c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f210:	add	w8, w8, #0x1
    f214:	cmp	w8, w9
    f218:	str	w8, [x24]
    f21c:	b.cs	110e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2540>  // b.hs, b.nlast
    f220:	ldr	x9, [x20, #16]
    f224:	mov	w10, #0x6                   	// #6
    f228:	mov	w11, #0x4                   	// #4
    f22c:	add	x8, x9, w8, uxtw #4
    f230:	str	x10, [x8]
    f234:	strb	w11, [x8, #8]
    f238:	ldur	w9, [sp, #115]
    f23c:	ldr	w10, [sp, #112]
    f240:	str	w9, [x8, #12]
    f244:	stur	w10, [x8, #9]
    f248:	ldp	w8, w9, [x20, #24]
    f24c:	cmp	w8, w9
    f250:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f254:	add	w8, w8, #0x1
    f258:	cmp	w8, w9
    f25c:	str	w8, [x24]
    f260:	b.cs	11104 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x255c>  // b.hs, b.nlast
    f264:	ldr	x9, [x20, #16]
    f268:	mov	w10, #0x8                   	// #8
    f26c:	mov	w11, #0x4                   	// #4
    f270:	add	x8, x9, w8, uxtw #4
    f274:	str	x10, [x8]
    f278:	strb	w11, [x8, #8]
    f27c:	ldur	w9, [sp, #115]
    f280:	ldr	w10, [sp, #112]
    f284:	str	w9, [x8, #12]
    f288:	stur	w10, [x8, #9]
    f28c:	ldp	w8, w9, [x20, #24]
    f290:	cmp	w8, w9
    f294:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f298:	add	w8, w8, #0x1
    f29c:	cmp	w8, w9
    f2a0:	str	w8, [x24]
    f2a4:	b.cs	11120 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2578>  // b.hs, b.nlast
    f2a8:	ldr	x9, [x20, #16]
    f2ac:	mov	w10, #0x4                   	// #4
    f2b0:	add	x8, x9, w8, uxtw #4
    f2b4:	str	x10, [x8]
    f2b8:	strb	w10, [x8, #8]
    f2bc:	ldur	w9, [sp, #115]
    f2c0:	ldr	w10, [sp, #112]
    f2c4:	str	w9, [x8, #12]
    f2c8:	stur	w10, [x8, #9]
    f2cc:	ldp	w8, w9, [x20, #24]
    f2d0:	cmp	w8, w9
    f2d4:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f2d8:	add	w8, w8, #0x1
    f2dc:	cmp	w8, w9
    f2e0:	str	w8, [x24]
    f2e4:	b.cs	1113c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2594>  // b.hs, b.nlast
    f2e8:	ldr	x9, [x20, #16]
    f2ec:	mov	w10, #0x4                   	// #4
    f2f0:	add	x8, x9, w8, uxtw #4
    f2f4:	str	x10, [x8]
    f2f8:	strb	w10, [x8, #8]
    f2fc:	ldur	w9, [sp, #115]
    f300:	ldr	w10, [sp, #112]
    f304:	str	w9, [x8, #12]
    f308:	stur	w10, [x8, #9]
    f30c:	ldp	w8, w9, [x20, #24]
    f310:	cmp	w8, w9
    f314:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f318:	add	w8, w8, #0x1
    f31c:	cmp	w8, w9
    f320:	str	w8, [x24]
    f324:	b.cs	11158 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x25b0>  // b.hs, b.nlast
    f328:	ldr	x9, [x20, #16]
    f32c:	mov	w10, #0x4                   	// #4
    f330:	add	x8, x9, w8, uxtw #4
    f334:	str	x10, [x8]
    f338:	strb	w10, [x8, #8]
    f33c:	ldur	w9, [sp, #115]
    f340:	ldr	w10, [sp, #112]
    f344:	str	w9, [x8, #12]
    f348:	stur	w10, [x8, #9]
    f34c:	ldp	w8, w9, [x20, #24]
    f350:	cmp	w8, w9
    f354:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f358:	add	w8, w8, #0x1
    f35c:	cmp	w8, w9
    f360:	str	w8, [x24]
    f364:	b.cs	11174 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x25cc>  // b.hs, b.nlast
    f368:	ldr	x9, [x20, #16]
    f36c:	mov	w10, #0x4                   	// #4
    f370:	add	x8, x9, w8, uxtw #4
    f374:	str	x10, [x8]
    f378:	strb	w10, [x8, #8]
    f37c:	ldur	w9, [sp, #115]
    f380:	ldr	w10, [sp, #112]
    f384:	str	w9, [x8, #12]
    f388:	stur	w10, [x8, #9]
    f38c:	ldp	w8, w9, [x20, #24]
    f390:	cmp	w8, w9
    f394:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f398:	add	w8, w8, #0x1
    f39c:	cmp	w8, w9
    f3a0:	str	w8, [x24]
    f3a4:	b.cs	11190 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x25e8>  // b.hs, b.nlast
    f3a8:	ldr	x9, [x20, #16]
    f3ac:	mov	w10, #0x6                   	// #6
    f3b0:	add	x8, x9, w8, uxtw #4
    f3b4:	str	xzr, [x8]
    f3b8:	strb	w10, [x8, #8]
    f3bc:	ldur	w9, [sp, #115]
    f3c0:	ldr	w10, [sp, #112]
    f3c4:	str	w9, [x8, #12]
    f3c8:	stur	w10, [x8, #9]
    f3cc:	ldp	w8, w9, [x20, #24]
    f3d0:	cmp	w8, w9
    f3d4:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f3d8:	add	w8, w8, #0x1
    f3dc:	cmp	w8, w9
    f3e0:	str	w8, [x24]
    f3e4:	b.cs	111ac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2604>  // b.hs, b.nlast
    f3e8:	ldr	x9, [x20, #16]
    f3ec:	mov	w10, #0x8                   	// #8
    f3f0:	mov	w11, #0x4                   	// #4
    f3f4:	add	x8, x9, w8, uxtw #4
    f3f8:	str	x10, [x8]
    f3fc:	strb	w11, [x8, #8]
    f400:	ldur	w9, [sp, #115]
    f404:	ldr	w10, [sp, #112]
    f408:	str	w9, [x8, #12]
    f40c:	stur	w10, [x8, #9]
    f410:	ldp	w8, w9, [x20, #24]
    f414:	cmp	w8, w9
    f418:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f41c:	add	w8, w8, #0x1
    f420:	str	w8, [x20, #24]
    f424:	ldr	x22, [x26]
    f428:	mov	x1, x21
    f42c:	stp	x21, x20, [x29, #-240]
    f430:	mov	x0, x22
    f434:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f438:	ldp	x1, x8, [x22, #32]
    f43c:	add	x21, x22, #0x18
    f440:	cmp	x1, x8
    f444:	b.eq	f478 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x8d0>  // b.none
    f448:	str	xzr, [x1, #8]
    f44c:	ldur	q0, [x29, #-240]
    f450:	add	x24, x1, #0x10
    f454:	stur	xzr, [x29, #-232]
    f458:	str	q0, [x1]
    f45c:	stur	xzr, [x29, #-240]
    f460:	str	x24, [x22, #32]
    f464:	ldur	x20, [x29, #-232]
    f468:	ldr	x8, [x21]
    f46c:	str	x8, [sp, #96]
    f470:	cbnz	x20, f498 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x8f0>
    f474:	b	f510 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x968>
    f478:	sub	x2, x29, #0xf0
    f47c:	mov	x0, x21
    f480:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f484:	ldr	x24, [x22, #32]
    f488:	ldur	x20, [x29, #-232]
    f48c:	ldr	x8, [x21]
    f490:	str	x8, [sp, #96]
    f494:	cbz	x20, f510 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x968>
    f498:	add	x8, x20, #0x8
    f49c:	cbz	x28, f4bc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x914>
    f4a0:	ldaxr	w9, [x8]
    f4a4:	sub	w10, w9, #0x1
    f4a8:	stlxr	w11, w10, [x8]
    f4ac:	cbnz	w11, f4a0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x8f8>
    f4b0:	cmp	w9, #0x1
    f4b4:	b.eq	f4d0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x928>  // b.none
    f4b8:	b	f510 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x968>
    f4bc:	ldr	w9, [x8]
    f4c0:	sub	w10, w9, #0x1
    f4c4:	str	w10, [x8]
    f4c8:	cmp	w9, #0x1
    f4cc:	b.ne	f510 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x968>  // b.any
    f4d0:	mov	x21, x20
    f4d4:	ldr	x8, [x21], #12
    f4d8:	mov	x0, x20
    f4dc:	ldr	x8, [x8, #16]
    f4e0:	blr	x8
    f4e4:	cbz	x28, 10f58 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x23b0>
    f4e8:	ldaxr	w8, [x21]
    f4ec:	sub	w9, w8, #0x1
    f4f0:	stlxr	w10, w9, [x21]
    f4f4:	cbnz	w10, f4e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x940>
    f4f8:	cmp	w8, #0x1
    f4fc:	b.ne	f510 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x968>  // b.any
    f500:	ldr	x8, [x20]
    f504:	mov	x0, x20
    f508:	ldr	x8, [x8, #24]
    f50c:	blr	x8
    f510:	mov	w0, #0x220                 	// #544
    f514:	bl	0 <_Znwm>
    f518:	movi	v0.2s, #0x1
    f51c:	add	x8, x23, #0x10
    f520:	str	d0, [x0, #8]
    f524:	movi	v0.2d, #0x0
    f528:	mov	x22, x0
    f52c:	mov	x21, x0
    f530:	mov	w9, #0x3                   	// #3
    f534:	str	x8, [x0]
    f538:	stp	q0, q0, [x0, #48]
    f53c:	stp	q0, q0, [x0, #80]
    f540:	stp	q0, q0, [x0, #112]
    f544:	stp	q0, q0, [x0, #144]
    f548:	stp	q0, q0, [x0, #176]
    f54c:	stp	q0, q0, [x0, #208]
    f550:	stp	q0, q0, [x0, #240]
    f554:	stp	q0, q0, [x0, #272]
    f558:	stp	q0, q0, [x0, #304]
    f55c:	stp	q0, q0, [x0, #336]
    f560:	stp	q0, q0, [x0, #368]
    f564:	stp	q0, q0, [x0, #400]
    f568:	stp	q0, q0, [x0, #432]
    f56c:	stp	q0, q0, [x0, #464]
    f570:	stp	q0, q0, [x0, #496]
    f574:	str	q0, [x22, #32]!
    f578:	str	q0, [x0, #528]
    f57c:	str	x22, [x21, #16]!
    f580:	str	d8, [x0, #24]
    f584:	str	x9, [x22]
    f588:	ldp	w8, w9, [x0, #24]
    f58c:	ldur	w11, [sp, #115]
    f590:	ldr	w12, [sp, #112]
    f594:	mov	w10, #0xff                  	// #255
    f598:	cmp	w8, w9
    f59c:	strb	w10, [x0, #40]
    f5a0:	str	w11, [x0, #44]
    f5a4:	stur	w12, [x0, #41]
    f5a8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f5ac:	add	w8, w8, #0x1
    f5b0:	mov	x20, x0
    f5b4:	cmp	w8, w9
    f5b8:	str	w8, [x0, #24]
    f5bc:	b.cs	111c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2620>  // b.hs, b.nlast
    f5c0:	ldr	x9, [x20, #16]
    f5c4:	mov	w10, #0x8                   	// #8
    f5c8:	mov	w11, #0x4                   	// #4
    f5cc:	add	x8, x9, w8, uxtw #4
    f5d0:	str	x10, [x8]
    f5d4:	strb	w11, [x8, #8]
    f5d8:	ldur	w9, [sp, #115]
    f5dc:	ldr	w10, [sp, #112]
    f5e0:	str	w9, [x8, #12]
    f5e4:	stur	w10, [x8, #9]
    f5e8:	ldp	w8, w9, [x20, #24]
    f5ec:	cmp	w8, w9
    f5f0:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f5f4:	add	w8, w8, #0x1
    f5f8:	cmp	w8, w9
    f5fc:	str	w8, [x20, #24]
    f600:	b.cs	111e4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x263c>  // b.hs, b.nlast
    f604:	ldr	x9, [x20, #16]
    f608:	mov	w10, #0x6                   	// #6
    f60c:	mov	w11, #0x4                   	// #4
    f610:	add	x8, x9, w8, uxtw #4
    f614:	str	x10, [x8]
    f618:	strb	w11, [x8, #8]
    f61c:	ldur	w9, [sp, #115]
    f620:	ldr	w10, [sp, #112]
    f624:	str	w9, [x8, #12]
    f628:	stur	w10, [x8, #9]
    f62c:	ldp	w8, w9, [x20, #24]
    f630:	cmp	w8, w9
    f634:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f638:	add	w8, w8, #0x1
    f63c:	cmp	w8, w9
    f640:	str	w8, [x20, #24]
    f644:	b.cs	11200 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2658>  // b.hs, b.nlast
    f648:	ldr	x9, [x20, #16]
    f64c:	mov	w10, #0x6                   	// #6
    f650:	add	x8, x9, w8, uxtw #4
    f654:	str	xzr, [x8]
    f658:	strb	w10, [x8, #8]
    f65c:	ldur	w9, [sp, #115]
    f660:	ldr	w10, [sp, #112]
    f664:	str	w9, [x8, #12]
    f668:	stur	w10, [x8, #9]
    f66c:	ldp	w8, w9, [x20, #24]
    f670:	cmp	w8, w9
    f674:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f678:	add	w8, w8, #0x1
    f67c:	cmp	w8, w9
    f680:	str	w8, [x20, #24]
    f684:	b.cs	1121c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2674>  // b.hs, b.nlast
    f688:	ldr	x9, [x20, #16]
    f68c:	mov	w10, #0x8                   	// #8
    f690:	mov	w11, #0x4                   	// #4
    f694:	add	x8, x9, w8, uxtw #4
    f698:	str	x10, [x8]
    f69c:	strb	w11, [x8, #8]
    f6a0:	ldur	w9, [sp, #115]
    f6a4:	ldr	w10, [sp, #112]
    f6a8:	str	w9, [x8, #12]
    f6ac:	stur	w10, [x8, #9]
    f6b0:	ldp	w8, w9, [x20, #24]
    f6b4:	cmp	w8, w9
    f6b8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f6bc:	add	w8, w8, #0x1
    f6c0:	str	w8, [x20, #24]
    f6c4:	ldr	x22, [x26]
    f6c8:	mov	x1, x21
    f6cc:	stp	x21, x20, [x29, #-256]
    f6d0:	mov	x0, x22
    f6d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f6d8:	ldp	x1, x8, [x22, #32]
    f6dc:	add	x21, x22, #0x18
    f6e0:	cmp	x1, x8
    f6e4:	b.eq	f71c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb74>  // b.none
    f6e8:	str	xzr, [x1, #8]
    f6ec:	ldur	q0, [x29, #-256]
    f6f0:	add	x8, x1, #0x10
    f6f4:	stur	xzr, [x29, #-248]
    f6f8:	str	x8, [sp, #72]
    f6fc:	str	q0, [x1]
    f700:	stur	xzr, [x29, #-256]
    f704:	str	x8, [x22, #32]
    f708:	ldur	x20, [x29, #-248]
    f70c:	ldr	x8, [x21]
    f710:	str	x8, [sp, #64]
    f714:	cbnz	x20, f740 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb98>
    f718:	b	f7b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc10>
    f71c:	sub	x2, x29, #0x100
    f720:	mov	x0, x21
    f724:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f728:	ldr	x8, [x22, #32]
    f72c:	str	x8, [sp, #72]
    f730:	ldur	x20, [x29, #-248]
    f734:	ldr	x8, [x21]
    f738:	str	x8, [sp, #64]
    f73c:	cbz	x20, f7b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc10>
    f740:	add	x8, x20, #0x8
    f744:	cbz	x28, f764 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbbc>
    f748:	ldaxr	w9, [x8]
    f74c:	sub	w10, w9, #0x1
    f750:	stlxr	w11, w10, [x8]
    f754:	cbnz	w11, f748 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xba0>
    f758:	cmp	w9, #0x1
    f75c:	b.eq	f778 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbd0>  // b.none
    f760:	b	f7b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc10>
    f764:	ldr	w9, [x8]
    f768:	sub	w10, w9, #0x1
    f76c:	str	w10, [x8]
    f770:	cmp	w9, #0x1
    f774:	b.ne	f7b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc10>  // b.any
    f778:	mov	x21, x20
    f77c:	ldr	x8, [x21], #12
    f780:	mov	x0, x20
    f784:	ldr	x8, [x8, #16]
    f788:	blr	x8
    f78c:	cbz	x28, 10f70 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x23c8>
    f790:	ldaxr	w8, [x21]
    f794:	sub	w9, w8, #0x1
    f798:	stlxr	w10, w9, [x21]
    f79c:	cbnz	w10, f790 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbe8>
    f7a0:	cmp	w8, #0x1
    f7a4:	b.ne	f7b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc10>  // b.any
    f7a8:	ldr	x8, [x20]
    f7ac:	mov	x0, x20
    f7b0:	ldr	x8, [x8, #24]
    f7b4:	blr	x8
    f7b8:	mov	w0, #0x220                 	// #544
    f7bc:	bl	0 <_Znwm>
    f7c0:	movi	v0.2s, #0x1
    f7c4:	add	x8, x23, #0x10
    f7c8:	str	d0, [x0, #8]
    f7cc:	movi	v0.2d, #0x0
    f7d0:	mov	x22, x0
    f7d4:	mov	x21, x0
    f7d8:	mov	w9, #0x17                  	// #23
    f7dc:	str	x8, [x0]
    f7e0:	stp	q0, q0, [x0, #48]
    f7e4:	stp	q0, q0, [x0, #80]
    f7e8:	stp	q0, q0, [x0, #112]
    f7ec:	stp	q0, q0, [x0, #144]
    f7f0:	stp	q0, q0, [x0, #176]
    f7f4:	stp	q0, q0, [x0, #208]
    f7f8:	stp	q0, q0, [x0, #240]
    f7fc:	stp	q0, q0, [x0, #272]
    f800:	stp	q0, q0, [x0, #304]
    f804:	stp	q0, q0, [x0, #336]
    f808:	stp	q0, q0, [x0, #368]
    f80c:	stp	q0, q0, [x0, #400]
    f810:	stp	q0, q0, [x0, #432]
    f814:	stp	q0, q0, [x0, #464]
    f818:	stp	q0, q0, [x0, #496]
    f81c:	str	q0, [x22, #32]!
    f820:	str	q0, [x0, #528]
    f824:	str	x22, [x21, #16]!
    f828:	str	d8, [x0, #24]
    f82c:	str	x9, [x22]
    f830:	ldp	w8, w9, [x0, #24]
    f834:	ldur	w11, [sp, #115]
    f838:	ldr	w12, [sp, #112]
    f83c:	mov	w10, #0xff                  	// #255
    f840:	cmp	w8, w9
    f844:	strb	w10, [x0, #40]
    f848:	str	w11, [x0, #44]
    f84c:	stur	w12, [x0, #41]
    f850:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f854:	add	w8, w8, #0x1
    f858:	mov	x20, x0
    f85c:	cmp	w8, w9
    f860:	str	w8, [x0, #24]
    f864:	b.cs	11238 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2690>  // b.hs, b.nlast
    f868:	ldr	x9, [x20, #16]
    f86c:	mov	w10, #0x8                   	// #8
    f870:	mov	w11, #0x4                   	// #4
    f874:	add	x8, x9, w8, uxtw #4
    f878:	str	x10, [x8]
    f87c:	strb	w11, [x8, #8]
    f880:	ldur	w9, [sp, #115]
    f884:	ldr	w10, [sp, #112]
    f888:	str	w9, [x8, #12]
    f88c:	stur	w10, [x8, #9]
    f890:	ldp	w8, w9, [x20, #24]
    f894:	cmp	w8, w9
    f898:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f89c:	add	w8, w8, #0x1
    f8a0:	cmp	w8, w9
    f8a4:	str	w8, [x20, #24]
    f8a8:	b.cs	11254 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x26ac>  // b.hs, b.nlast
    f8ac:	ldr	x9, [x20, #16]
    f8b0:	mov	w10, #0x6                   	// #6
    f8b4:	mov	w11, #0x4                   	// #4
    f8b8:	add	x8, x9, w8, uxtw #4
    f8bc:	str	x10, [x8]
    f8c0:	strb	w11, [x8, #8]
    f8c4:	ldur	w9, [sp, #115]
    f8c8:	ldr	w10, [sp, #112]
    f8cc:	str	w9, [x8, #12]
    f8d0:	stur	w10, [x8, #9]
    f8d4:	ldp	w8, w9, [x20, #24]
    f8d8:	cmp	w8, w9
    f8dc:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f8e0:	add	w8, w8, #0x1
    f8e4:	cmp	w8, w9
    f8e8:	str	w8, [x20, #24]
    f8ec:	b.cs	11270 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x26c8>  // b.hs, b.nlast
    f8f0:	ldr	x9, [x20, #16]
    f8f4:	mov	w10, #0x4                   	// #4
    f8f8:	add	x8, x9, w8, uxtw #4
    f8fc:	str	x10, [x8]
    f900:	strb	w10, [x8, #8]
    f904:	ldur	w9, [sp, #115]
    f908:	ldr	w10, [sp, #112]
    f90c:	str	w9, [x8, #12]
    f910:	stur	w10, [x8, #9]
    f914:	ldp	w8, w9, [x20, #24]
    f918:	cmp	w8, w9
    f91c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f920:	add	w8, w8, #0x1
    f924:	cmp	w8, w9
    f928:	str	w8, [x20, #24]
    f92c:	b.cs	1128c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x26e4>  // b.hs, b.nlast
    f930:	ldr	x9, [x20, #16]
    f934:	mov	w10, #0x6                   	// #6
    f938:	add	x8, x9, w8, uxtw #4
    f93c:	str	xzr, [x8]
    f940:	strb	w10, [x8, #8]
    f944:	ldur	w9, [sp, #115]
    f948:	ldr	w10, [sp, #112]
    f94c:	str	w9, [x8, #12]
    f950:	stur	w10, [x8, #9]
    f954:	ldp	w8, w9, [x20, #24]
    f958:	cmp	w8, w9
    f95c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f960:	add	w8, w8, #0x1
    f964:	cmp	w8, w9
    f968:	str	w8, [x20, #24]
    f96c:	b.cs	112a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2700>  // b.hs, b.nlast
    f970:	ldr	x9, [x20, #16]
    f974:	mov	w10, #0x8                   	// #8
    f978:	mov	w11, #0x4                   	// #4
    f97c:	add	x8, x9, w8, uxtw #4
    f980:	str	x10, [x8]
    f984:	strb	w11, [x8, #8]
    f988:	ldur	w9, [sp, #115]
    f98c:	ldr	w10, [sp, #112]
    f990:	str	w9, [x8, #12]
    f994:	stur	w10, [x8, #9]
    f998:	ldp	w8, w9, [x20, #24]
    f99c:	cmp	w8, w9
    f9a0:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    f9a4:	add	w8, w8, #0x1
    f9a8:	str	w8, [x20, #24]
    f9ac:	ldr	x22, [x26]
    f9b0:	mov	x1, x21
    f9b4:	str	x21, [sp, #672]
    f9b8:	str	x20, [sp, #680]
    f9bc:	mov	x0, x22
    f9c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f9c4:	ldp	x1, x8, [x22, #32]
    f9c8:	add	x21, x22, #0x18
    f9cc:	cmp	x1, x8
    f9d0:	b.eq	fa08 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe60>  // b.none
    f9d4:	str	xzr, [x1, #8]
    f9d8:	ldr	q0, [sp, #672]
    f9dc:	add	x8, x1, #0x10
    f9e0:	str	xzr, [sp, #680]
    f9e4:	str	x8, [sp, #40]
    f9e8:	str	q0, [x1]
    f9ec:	str	xzr, [sp, #672]
    f9f0:	str	x8, [x22, #32]
    f9f4:	ldr	x20, [sp, #680]
    f9f8:	ldr	x8, [x21]
    f9fc:	str	x8, [sp, #32]
    fa00:	cbnz	x20, fa2c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe84>
    fa04:	b	faa4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xefc>
    fa08:	add	x2, sp, #0x2a0
    fa0c:	mov	x0, x21
    fa10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fa14:	ldr	x8, [x22, #32]
    fa18:	str	x8, [sp, #40]
    fa1c:	ldr	x20, [sp, #680]
    fa20:	ldr	x8, [x21]
    fa24:	str	x8, [sp, #32]
    fa28:	cbz	x20, faa4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xefc>
    fa2c:	add	x8, x20, #0x8
    fa30:	cbz	x28, fa50 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xea8>
    fa34:	ldaxr	w9, [x8]
    fa38:	sub	w10, w9, #0x1
    fa3c:	stlxr	w11, w10, [x8]
    fa40:	cbnz	w11, fa34 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe8c>
    fa44:	cmp	w9, #0x1
    fa48:	b.eq	fa64 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xebc>  // b.none
    fa4c:	b	faa4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xefc>
    fa50:	ldr	w9, [x8]
    fa54:	sub	w10, w9, #0x1
    fa58:	str	w10, [x8]
    fa5c:	cmp	w9, #0x1
    fa60:	b.ne	faa4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xefc>  // b.any
    fa64:	mov	x21, x20
    fa68:	ldr	x8, [x21], #12
    fa6c:	mov	x0, x20
    fa70:	ldr	x8, [x8, #16]
    fa74:	blr	x8
    fa78:	cbz	x28, 10f88 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x23e0>
    fa7c:	ldaxr	w8, [x21]
    fa80:	sub	w9, w8, #0x1
    fa84:	stlxr	w10, w9, [x21]
    fa88:	cbnz	w10, fa7c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xed4>
    fa8c:	cmp	w8, #0x1
    fa90:	b.ne	faa4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xefc>  // b.any
    fa94:	ldr	x8, [x20]
    fa98:	mov	x0, x20
    fa9c:	ldr	x8, [x8, #24]
    faa0:	blr	x8
    faa4:	mov	w0, #0x220                 	// #544
    faa8:	bl	0 <_Znwm>
    faac:	movi	v0.2s, #0x1
    fab0:	add	x8, x23, #0x10
    fab4:	str	d0, [x0, #8]
    fab8:	movi	v0.2d, #0x0
    fabc:	mov	x22, x0
    fac0:	mov	x21, x0
    fac4:	mov	w9, #0x7                   	// #7
    fac8:	str	x8, [x0]
    facc:	stp	q0, q0, [x0, #48]
    fad0:	stp	q0, q0, [x0, #80]
    fad4:	stp	q0, q0, [x0, #112]
    fad8:	stp	q0, q0, [x0, #144]
    fadc:	stp	q0, q0, [x0, #176]
    fae0:	stp	q0, q0, [x0, #208]
    fae4:	stp	q0, q0, [x0, #240]
    fae8:	stp	q0, q0, [x0, #272]
    faec:	stp	q0, q0, [x0, #304]
    faf0:	stp	q0, q0, [x0, #336]
    faf4:	stp	q0, q0, [x0, #368]
    faf8:	stp	q0, q0, [x0, #400]
    fafc:	stp	q0, q0, [x0, #432]
    fb00:	stp	q0, q0, [x0, #464]
    fb04:	stp	q0, q0, [x0, #496]
    fb08:	str	q0, [x22, #32]!
    fb0c:	str	q0, [x0, #528]
    fb10:	str	x22, [x21, #16]!
    fb14:	str	d8, [x0, #24]
    fb18:	str	x9, [x22]
    fb1c:	ldp	w8, w9, [x0, #24]
    fb20:	ldur	w11, [sp, #115]
    fb24:	ldr	w12, [sp, #112]
    fb28:	mov	w10, #0xff                  	// #255
    fb2c:	cmp	w8, w9
    fb30:	strb	w10, [x0, #40]
    fb34:	str	w11, [x0, #44]
    fb38:	stur	w12, [x0, #41]
    fb3c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    fb40:	add	w8, w8, #0x1
    fb44:	mov	x20, x0
    fb48:	cmp	w8, w9
    fb4c:	str	w8, [x0, #24]
    fb50:	b.cs	112c4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x271c>  // b.hs, b.nlast
    fb54:	ldr	x9, [x20, #16]
    fb58:	mov	w10, #0x8                   	// #8
    fb5c:	mov	w11, #0x4                   	// #4
    fb60:	add	x8, x9, w8, uxtw #4
    fb64:	str	x10, [x8]
    fb68:	strb	w11, [x8, #8]
    fb6c:	ldur	w9, [sp, #115]
    fb70:	ldr	w10, [sp, #112]
    fb74:	str	w9, [x8, #12]
    fb78:	stur	w10, [x8, #9]
    fb7c:	ldp	w8, w9, [x20, #24]
    fb80:	cmp	w8, w9
    fb84:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    fb88:	add	w8, w8, #0x1
    fb8c:	cmp	w8, w9
    fb90:	str	w8, [x20, #24]
    fb94:	b.cs	112e0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2738>  // b.hs, b.nlast
    fb98:	ldr	x9, [x20, #16]
    fb9c:	mov	w10, #0x6                   	// #6
    fba0:	mov	w11, #0x4                   	// #4
    fba4:	add	x8, x9, w8, uxtw #4
    fba8:	str	x10, [x8]
    fbac:	strb	w11, [x8, #8]
    fbb0:	ldur	w9, [sp, #115]
    fbb4:	ldr	w10, [sp, #112]
    fbb8:	str	w9, [x8, #12]
    fbbc:	stur	w10, [x8, #9]
    fbc0:	ldp	w8, w9, [x20, #24]
    fbc4:	cmp	w8, w9
    fbc8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    fbcc:	add	w8, w8, #0x1
    fbd0:	cmp	w8, w9
    fbd4:	str	w8, [x20, #24]
    fbd8:	b.cs	112fc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2754>  // b.hs, b.nlast
    fbdc:	ldr	x9, [x20, #16]
    fbe0:	mov	w10, #0x8                   	// #8
    fbe4:	mov	w11, #0x4                   	// #4
    fbe8:	add	x8, x9, w8, uxtw #4
    fbec:	str	x10, [x8]
    fbf0:	strb	w11, [x8, #8]
    fbf4:	ldur	w9, [sp, #115]
    fbf8:	ldr	w10, [sp, #112]
    fbfc:	str	w9, [x8, #12]
    fc00:	stur	w10, [x8, #9]
    fc04:	ldp	w8, w9, [x20, #24]
    fc08:	cmp	w8, w9
    fc0c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    fc10:	add	w8, w8, #0x1
    fc14:	str	w8, [x20, #24]
    fc18:	ldr	x22, [x26]
    fc1c:	mov	x1, x21
    fc20:	str	x21, [sp, #656]
    fc24:	str	x20, [sp, #664]
    fc28:	mov	x0, x22
    fc2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc30:	ldp	x1, x8, [x22, #32]
    fc34:	add	x21, x22, #0x18
    fc38:	cmp	x1, x8
    fc3c:	b.eq	fc74 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10cc>  // b.none
    fc40:	str	xzr, [x1, #8]
    fc44:	ldr	q0, [sp, #656]
    fc48:	add	x8, x1, #0x10
    fc4c:	str	xzr, [sp, #664]
    fc50:	str	x8, [sp, #24]
    fc54:	str	q0, [x1]
    fc58:	str	xzr, [sp, #656]
    fc5c:	str	x8, [x22, #32]
    fc60:	ldr	x20, [sp, #664]
    fc64:	ldr	x8, [x21]
    fc68:	str	x8, [sp, #56]
    fc6c:	cbnz	x20, fc98 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10f0>
    fc70:	b	fd10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1168>
    fc74:	add	x2, sp, #0x290
    fc78:	mov	x0, x21
    fc7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fc80:	ldr	x8, [x22, #32]
    fc84:	str	x8, [sp, #24]
    fc88:	ldr	x20, [sp, #664]
    fc8c:	ldr	x8, [x21]
    fc90:	str	x8, [sp, #56]
    fc94:	cbz	x20, fd10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1168>
    fc98:	add	x8, x20, #0x8
    fc9c:	cbz	x28, fcbc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1114>
    fca0:	ldaxr	w9, [x8]
    fca4:	sub	w10, w9, #0x1
    fca8:	stlxr	w11, w10, [x8]
    fcac:	cbnz	w11, fca0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10f8>
    fcb0:	cmp	w9, #0x1
    fcb4:	b.eq	fcd0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1128>  // b.none
    fcb8:	b	fd10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1168>
    fcbc:	ldr	w9, [x8]
    fcc0:	sub	w10, w9, #0x1
    fcc4:	str	w10, [x8]
    fcc8:	cmp	w9, #0x1
    fccc:	b.ne	fd10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1168>  // b.any
    fcd0:	mov	x21, x20
    fcd4:	ldr	x8, [x21], #12
    fcd8:	mov	x0, x20
    fcdc:	ldr	x8, [x8, #16]
    fce0:	blr	x8
    fce4:	cbz	x28, 10fa0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x23f8>
    fce8:	ldaxr	w8, [x21]
    fcec:	sub	w9, w8, #0x1
    fcf0:	stlxr	w10, w9, [x21]
    fcf4:	cbnz	w10, fce8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1140>
    fcf8:	cmp	w8, #0x1
    fcfc:	b.ne	fd10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1168>  // b.any
    fd00:	ldr	x8, [x20]
    fd04:	mov	x0, x20
    fd08:	ldr	x8, [x8, #24]
    fd0c:	blr	x8
    fd10:	mov	w0, #0x220                 	// #544
    fd14:	bl	0 <_Znwm>
    fd18:	movi	v0.2s, #0x1
    fd1c:	add	x8, x23, #0x10
    fd20:	str	d0, [x0, #8]
    fd24:	movi	v0.2d, #0x0
    fd28:	mov	x22, x0
    fd2c:	mov	x21, x0
    fd30:	mov	w9, #0x16                  	// #22
    fd34:	str	x8, [x0]
    fd38:	stp	q0, q0, [x0, #48]
    fd3c:	stp	q0, q0, [x0, #80]
    fd40:	stp	q0, q0, [x0, #112]
    fd44:	stp	q0, q0, [x0, #144]
    fd48:	stp	q0, q0, [x0, #176]
    fd4c:	stp	q0, q0, [x0, #208]
    fd50:	stp	q0, q0, [x0, #240]
    fd54:	stp	q0, q0, [x0, #272]
    fd58:	stp	q0, q0, [x0, #304]
    fd5c:	stp	q0, q0, [x0, #336]
    fd60:	stp	q0, q0, [x0, #368]
    fd64:	stp	q0, q0, [x0, #400]
    fd68:	stp	q0, q0, [x0, #432]
    fd6c:	stp	q0, q0, [x0, #464]
    fd70:	stp	q0, q0, [x0, #496]
    fd74:	str	q0, [x22, #32]!
    fd78:	str	q0, [x0, #528]
    fd7c:	str	x22, [x21, #16]!
    fd80:	str	d8, [x0, #24]
    fd84:	str	x9, [x22]
    fd88:	ldp	w8, w9, [x0, #24]
    fd8c:	ldur	w11, [sp, #115]
    fd90:	ldr	w12, [sp, #112]
    fd94:	mov	w10, #0xff                  	// #255
    fd98:	cmp	w8, w9
    fd9c:	strb	w10, [x0, #40]
    fda0:	str	w11, [x0, #44]
    fda4:	stur	w12, [x0, #41]
    fda8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    fdac:	add	w8, w8, #0x1
    fdb0:	mov	x20, x0
    fdb4:	cmp	w8, w9
    fdb8:	str	w8, [x0, #24]
    fdbc:	b.cs	11318 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2770>  // b.hs, b.nlast
    fdc0:	ldr	x9, [x20, #16]
    fdc4:	mov	w10, #0x8                   	// #8
    fdc8:	mov	w11, #0x4                   	// #4
    fdcc:	add	x8, x9, w8, uxtw #4
    fdd0:	str	x10, [x8]
    fdd4:	strb	w11, [x8, #8]
    fdd8:	ldur	w9, [sp, #115]
    fddc:	ldr	w10, [sp, #112]
    fde0:	str	w9, [x8, #12]
    fde4:	stur	w10, [x8, #9]
    fde8:	ldp	w8, w9, [x20, #24]
    fdec:	cmp	w8, w9
    fdf0:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    fdf4:	add	w8, w8, #0x1
    fdf8:	cmp	w8, w9
    fdfc:	str	w8, [x20, #24]
    fe00:	b.cs	11334 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x278c>  // b.hs, b.nlast
    fe04:	ldr	x9, [x20, #16]
    fe08:	mov	w10, #0x8                   	// #8
    fe0c:	mov	w11, #0x4                   	// #4
    fe10:	add	x8, x9, w8, uxtw #4
    fe14:	str	x10, [x8]
    fe18:	strb	w11, [x8, #8]
    fe1c:	ldur	w9, [sp, #115]
    fe20:	ldr	w10, [sp, #112]
    fe24:	str	w9, [x8, #12]
    fe28:	stur	w10, [x8, #9]
    fe2c:	ldp	w8, w9, [x20, #24]
    fe30:	cmp	w8, w9
    fe34:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    fe38:	add	w8, w8, #0x1
    fe3c:	cmp	w8, w9
    fe40:	str	w8, [x20, #24]
    fe44:	b.cs	11350 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27a8>  // b.hs, b.nlast
    fe48:	ldr	x9, [x20, #16]
    fe4c:	mov	w10, #0x6                   	// #6
    fe50:	add	x8, x9, w8, uxtw #4
    fe54:	str	xzr, [x8]
    fe58:	strb	w10, [x8, #8]
    fe5c:	ldur	w9, [sp, #115]
    fe60:	ldr	w10, [sp, #112]
    fe64:	str	w9, [x8, #12]
    fe68:	stur	w10, [x8, #9]
    fe6c:	ldp	w8, w9, [x20, #24]
    fe70:	cmp	w8, w9
    fe74:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    fe78:	add	w8, w8, #0x1
    fe7c:	cmp	w8, w9
    fe80:	str	w8, [x20, #24]
    fe84:	b.cs	1136c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27c4>  // b.hs, b.nlast
    fe88:	ldr	x9, [x20, #16]
    fe8c:	mov	w10, #0x8                   	// #8
    fe90:	mov	w11, #0x4                   	// #4
    fe94:	add	x8, x9, w8, uxtw #4
    fe98:	str	x10, [x8]
    fe9c:	strb	w11, [x8, #8]
    fea0:	ldur	w9, [sp, #115]
    fea4:	ldr	w10, [sp, #112]
    fea8:	str	w9, [x8, #12]
    feac:	stur	w10, [x8, #9]
    feb0:	ldp	w8, w9, [x20, #24]
    feb4:	cmp	w8, w9
    feb8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
    febc:	add	w8, w8, #0x1
    fec0:	str	w8, [x20, #24]
    fec4:	ldr	x22, [x26]
    fec8:	mov	x1, x21
    fecc:	str	x21, [sp, #640]
    fed0:	str	x20, [sp, #648]
    fed4:	mov	x0, x22
    fed8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fedc:	ldp	x1, x8, [x22, #32]
    fee0:	add	x21, x22, #0x18
    fee4:	cmp	x1, x8
    fee8:	b.eq	ff20 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1378>  // b.none
    feec:	str	xzr, [x1, #8]
    fef0:	ldr	q0, [sp, #640]
    fef4:	add	x8, x1, #0x10
    fef8:	str	xzr, [sp, #648]
    fefc:	str	x8, [sp, #16]
    ff00:	str	q0, [x1]
    ff04:	str	xzr, [sp, #640]
    ff08:	str	x8, [x22, #32]
    ff0c:	ldr	x20, [sp, #648]
    ff10:	ldr	x8, [x21]
    ff14:	str	x8, [sp, #48]
    ff18:	cbnz	x20, ff44 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x139c>
    ff1c:	b	ffbc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1414>
    ff20:	add	x2, sp, #0x280
    ff24:	mov	x0, x21
    ff28:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ff2c:	ldr	x8, [x22, #32]
    ff30:	str	x8, [sp, #16]
    ff34:	ldr	x20, [sp, #648]
    ff38:	ldr	x8, [x21]
    ff3c:	str	x8, [sp, #48]
    ff40:	cbz	x20, ffbc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1414>
    ff44:	add	x8, x20, #0x8
    ff48:	cbz	x28, ff68 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13c0>
    ff4c:	ldaxr	w9, [x8]
    ff50:	sub	w10, w9, #0x1
    ff54:	stlxr	w11, w10, [x8]
    ff58:	cbnz	w11, ff4c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13a4>
    ff5c:	cmp	w9, #0x1
    ff60:	b.eq	ff7c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13d4>  // b.none
    ff64:	b	ffbc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1414>
    ff68:	ldr	w9, [x8]
    ff6c:	sub	w10, w9, #0x1
    ff70:	str	w10, [x8]
    ff74:	cmp	w9, #0x1
    ff78:	b.ne	ffbc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1414>  // b.any
    ff7c:	mov	x21, x20
    ff80:	ldr	x8, [x21], #12
    ff84:	mov	x0, x20
    ff88:	ldr	x8, [x8, #16]
    ff8c:	blr	x8
    ff90:	cbz	x28, 10fb8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2410>
    ff94:	ldaxr	w8, [x21]
    ff98:	sub	w9, w8, #0x1
    ff9c:	stlxr	w10, w9, [x21]
    ffa0:	cbnz	w10, ff94 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13ec>
    ffa4:	cmp	w8, #0x1
    ffa8:	b.ne	ffbc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1414>  // b.any
    ffac:	ldr	x8, [x20]
    ffb0:	mov	x0, x20
    ffb4:	ldr	x8, [x8, #24]
    ffb8:	blr	x8
    ffbc:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ffc0:	ldr	d0, [x8]
    ffc4:	add	x8, sp, #0x70
    ffc8:	add	x8, x8, #0x10
    ffcc:	str	x8, [sp, #112]
    ffd0:	str	d0, [sp, #120]
    ffd4:	str	x8, [sp, #8]
    ffd8:	ldr	x8, [x26, #16]
    ffdc:	str	x26, [x29, #8]
    ffe0:	ldr	x28, [x8, #32]
    ffe4:	add	x9, x8, #0x18
    ffe8:	str	x9, [sp, #104]
    ffec:	cmp	x9, x28
    fff0:	b.eq	10684 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1adc>  // b.none
    fff4:	mov	x8, x27
    fff8:	sub	x8, x19, x8
    fffc:	str	x8, [sp, #88]
   10000:	ldr	x8, [sp, #96]
   10004:	add	x27, x26, #0x250
   10008:	add	x21, x26, #0x18
   1000c:	sub	x8, x24, x8
   10010:	str	x8, [sp, #80]
   10014:	sub	x8, x29, #0xd0
   10018:	add	x8, x8, #0x10
   1001c:	str	x8, [sp, #96]
   10020:	b	10040 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1498>
   10024:	mov	x0, x22
   10028:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
   1002c:	tbz	w0, #0, 114b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2910>
   10030:	ldr	x28, [x28, #8]
   10034:	ldr	x8, [sp, #104]
   10038:	cmp	x8, x28
   1003c:	b.eq	1067c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1ad4>  // b.none
   10040:	ldrb	w8, [x28]
   10044:	tbnz	w8, #2, 113e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2840>
   10048:	sub	x8, x28, #0x38
   1004c:	cmp	x28, #0x0
   10050:	csel	x22, xzr, x8, eq  // eq = none
   10054:	ldrb	w8, [x22, #23]
   10058:	tbz	w8, #5, 11408 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2860>
   1005c:	ldr	x8, [x29, #8]
   10060:	mov	x0, x22
   10064:	ldr	x26, [x8, #584]
   10068:	sub	x8, x29, #0xd0
   1006c:	bl	0 <_ZNK4llvm11GlobalValue19getGlobalIdentifierB5cxx11Ev>
   10070:	ldp	x23, x24, [x29, #-208]
   10074:	sub	x0, x29, #0xa0
   10078:	bl	0 <_ZN4llvm3MD5C1Ev>
   1007c:	sub	x0, x29, #0xa0
   10080:	mov	x1, x23
   10084:	mov	x2, x24
   10088:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
   1008c:	sub	x0, x29, #0xa0
   10090:	sub	x1, x29, #0xb0
   10094:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
   10098:	ldur	x0, [x29, #-208]
   1009c:	ldr	x8, [sp, #96]
   100a0:	ldur	x23, [x29, #-176]
   100a4:	cmp	x0, x8
   100a8:	b.eq	100b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1508>  // b.none
   100ac:	bl	0 <_ZdlPv>
   100b0:	ldr	x10, [x26, #16]
   100b4:	cbz	x10, 10024 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x147c>
   100b8:	add	x8, x26, #0x8
   100bc:	mov	x9, x8
   100c0:	ldr	x11, [x10, #32]
   100c4:	add	x12, x10, #0x18
   100c8:	add	x13, x10, #0x10
   100cc:	cmp	x11, x23
   100d0:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   100d4:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   100d8:	ldr	x10, [x10]
   100dc:	cbnz	x10, 100c0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1518>
   100e0:	cmp	x9, x8
   100e4:	b.eq	10024 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x147c>  // b.none
   100e8:	ldr	x10, [x9, #32]
   100ec:	cmp	x10, x23
   100f0:	csel	x9, x8, x9, hi  // hi = pmore
   100f4:	add	x10, x9, #0x20
   100f8:	cmp	x9, x8
   100fc:	csel	x8, xzr, x10, eq  // eq = none
   10100:	tst	x8, #0x7
   10104:	b.ne	114f8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2950>  // b.any
   10108:	cmp	x8, #0x8
   1010c:	b.cc	10024 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x147c>  // b.lo, b.ul, b.last
   10110:	and	x9, x8, #0xfffffffffffffff8
   10114:	ldp	x8, x9, [x9, #24]
   10118:	cmp	x9, x8
   1011c:	b.eq	10024 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x147c>  // b.none
   10120:	ldr	x23, [x8]
   10124:	mov	x0, x21
   10128:	mov	x1, x22
   1012c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   10130:	ldp	w8, w9, [sp, #120]
   10134:	mov	w24, w0
   10138:	cmp	w8, w9
   1013c:	b.cs	105b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1a10>  // b.hs, b.nlast
   10140:	ldr	x9, [sp, #112]
   10144:	str	x24, [x9, w8, uxtw #3]
   10148:	ldp	w8, w9, [sp, #120]
   1014c:	cmp	w8, w9
   10150:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10154:	add	w8, w8, #0x1
   10158:	str	w8, [sp, #120]
   1015c:	cbz	x23, 11578 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x29d0>
   10160:	ldr	w8, [x23, #8]
   10164:	cmp	w8, #0x1
   10168:	b.ne	11598 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x29f0>  // b.any
   1016c:	ldr	x8, [x29, #8]
   10170:	mov	x1, x23
   10174:	ldr	x0, [x8]
   10178:	bl	26410 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE>
   1017c:	mov	x0, x23
   10180:	bl	0 <_ZNK4llvm15FunctionSummary16specialRefCountsEv>
   10184:	ldp	w8, w9, [sp, #120]
   10188:	ldrb	w26, [x23, #12]
   1018c:	mov	x24, x0
   10190:	cmp	w8, w9
   10194:	b.cs	105d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1a2c>  // b.hs, b.nlast
   10198:	ldr	x9, [sp, #112]
   1019c:	str	x26, [x9, w8, uxtw #3]
   101a0:	ldp	w8, w9, [sp, #120]
   101a4:	cmp	w8, w9
   101a8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   101ac:	add	w8, w8, #0x1
   101b0:	str	w8, [sp, #120]
   101b4:	ldr	w26, [x23, #64]
   101b8:	cmp	w8, w9
   101bc:	b.cs	105f0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1a48>  // b.hs, b.nlast
   101c0:	ldr	x9, [sp, #112]
   101c4:	str	x26, [x9, w8, uxtw #3]
   101c8:	ldp	w8, w9, [sp, #120]
   101cc:	cmp	w8, w9
   101d0:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   101d4:	add	w8, w8, #0x1
   101d8:	str	w8, [sp, #120]
   101dc:	ldr	w10, [x23, #68]
   101e0:	cmp	w8, w9
   101e4:	and	x26, x10, #0x3f
   101e8:	b.cs	1060c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1a64>  // b.hs, b.nlast
   101ec:	ldr	x9, [sp, #112]
   101f0:	str	x26, [x9, w8, uxtw #3]
   101f4:	ldp	w8, w9, [sp, #120]
   101f8:	cmp	w8, w9
   101fc:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10200:	add	w8, w8, #0x1
   10204:	str	w8, [sp, #120]
   10208:	ldp	x10, x11, [x23, #40]
   1020c:	cmp	w8, w9
   10210:	sub	x10, x11, x10
   10214:	asr	x19, x10, #3
   10218:	b.cs	10628 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1a80>  // b.hs, b.nlast
   1021c:	ldr	x9, [sp, #112]
   10220:	str	x19, [x9, w8, uxtw #3]
   10224:	ldp	w8, w9, [sp, #120]
   10228:	cmp	w8, w9
   1022c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10230:	add	w8, w8, #0x1
   10234:	cmp	w8, w9
   10238:	and	x26, x24, #0xffffffff
   1023c:	str	w8, [sp, #120]
   10240:	b.cs	10644 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1a9c>  // b.hs, b.nlast
   10244:	ldr	x9, [sp, #112]
   10248:	str	x26, [x9, w8, uxtw #3]
   1024c:	ldp	w8, w9, [sp, #120]
   10250:	cmp	w8, w9
   10254:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10258:	add	w8, w8, #0x1
   1025c:	lsr	x24, x24, #32
   10260:	cmp	w8, w9
   10264:	str	w8, [sp, #120]
   10268:	b.cs	10660 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1ab8>  // b.hs, b.nlast
   1026c:	ldr	x9, [sp, #112]
   10270:	str	x24, [x9, w8, uxtw #3]
   10274:	ldp	w8, w9, [sp, #120]
   10278:	cmp	w8, w9
   1027c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10280:	add	w8, w8, #0x1
   10284:	str	w8, [sp, #120]
   10288:	ldp	x24, x8, [x23, #40]
   1028c:	subs	x8, x8, x24
   10290:	b.eq	1030c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1764>  // b.none
   10294:	asr	x8, x8, #3
   10298:	lsl	x26, x8, #3
   1029c:	ldr	x8, [x24]
   102a0:	tbz	w8, #0, 113a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2800>
   102a4:	and	x8, x8, #0xfffffffffffffff8
   102a8:	ldr	x1, [x8, #8]
   102ac:	mov	x0, x21
   102b0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   102b4:	ldp	w8, w9, [sp, #120]
   102b8:	mov	w20, w0
   102bc:	cmp	w8, w9
   102c0:	b.cs	102f0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1748>  // b.hs, b.nlast
   102c4:	ldr	x9, [sp, #112]
   102c8:	str	x20, [x9, w8, uxtw #3]
   102cc:	ldp	w8, w9, [sp, #120]
   102d0:	cmp	w8, w9
   102d4:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   102d8:	add	w8, w8, #0x1
   102dc:	subs	x26, x26, #0x8
   102e0:	add	x24, x24, #0x8
   102e4:	str	w8, [sp, #120]
   102e8:	b.ne	1029c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x16f4>  // b.any
   102ec:	b	1030c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1764>
   102f0:	ldr	x1, [sp, #8]
   102f4:	add	x0, sp, #0x70
   102f8:	mov	w3, #0x8                   	// #8
   102fc:	mov	x2, xzr
   10300:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10304:	ldr	w8, [sp, #120]
   10308:	b	102c4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x171c>
   1030c:	mov	x0, x22
   10310:	mov	w1, wzr
   10314:	bl	0 <_ZNK4llvm8Function13getEntryCountEb>
   10318:	adrp	x8, 0 <ForceSummaryEdgesCold>
   1031c:	ldp	x24, x23, [x23, #80]
   10320:	ldr	x8, [x8]
   10324:	cmp	x23, x24
   10328:	ldr	w8, [x8]
   1032c:	orr	w22, w8, w1
   10330:	b.eq	10560 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x19b8>  // b.none
   10334:	cbz	w22, 10470 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18c8>
   10338:	ldr	x9, [x24]
   1033c:	and	x8, x9, #0xfffffffffffffff8
   10340:	tbz	w9, #0, 10358 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x17b0>
   10344:	ldr	x1, [x8, #8]
   10348:	cbz	x1, 10358 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x17b0>
   1034c:	mov	x0, x21
   10350:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   10354:	b	103a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1800>
   10358:	ldr	x10, [x27, #16]
   1035c:	cbz	x10, 113c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2820>
   10360:	ldr	x8, [x8]
   10364:	mov	x9, x25
   10368:	ldr	x11, [x10, #32]
   1036c:	add	x12, x10, #0x18
   10370:	add	x13, x10, #0x10
   10374:	cmp	x11, x8
   10378:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   1037c:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   10380:	ldr	x10, [x10]
   10384:	cbnz	x10, 10368 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x17c0>
   10388:	cmp	x9, x25
   1038c:	b.eq	113c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2820>  // b.none
   10390:	ldr	x10, [x9, #32]
   10394:	cmp	x10, x8
   10398:	csel	x8, x25, x9, hi  // hi = pmore
   1039c:	cmp	x8, x25
   103a0:	b.eq	113c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2820>  // b.none
   103a4:	ldr	w0, [x8, #40]
   103a8:	ldp	w8, w9, [sp, #120]
   103ac:	mov	w26, w0
   103b0:	cmp	w8, w9
   103b4:	b.cs	10410 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1868>  // b.hs, b.nlast
   103b8:	ldr	x9, [sp, #112]
   103bc:	str	x26, [x9, w8, uxtw #3]
   103c0:	ldp	w8, w9, [sp, #120]
   103c4:	cmp	w8, w9
   103c8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   103cc:	add	w8, w8, #0x1
   103d0:	str	w8, [sp, #120]
   103d4:	ldr	w10, [x24, #8]
   103d8:	cmp	w8, w9
   103dc:	and	x19, x10, #0x7
   103e0:	b.cs	1042c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1884>  // b.hs, b.nlast
   103e4:	ldr	x9, [sp, #112]
   103e8:	str	x19, [x9, w8, uxtw #3]
   103ec:	ldp	w8, w9, [sp, #120]
   103f0:	cmp	w8, w9
   103f4:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   103f8:	add	x24, x24, #0x10
   103fc:	add	w8, w8, #0x1
   10400:	cmp	x24, x23
   10404:	str	w8, [sp, #120]
   10408:	b.ne	10338 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1790>  // b.any
   1040c:	b	10560 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x19b8>
   10410:	ldr	x1, [sp, #8]
   10414:	add	x0, sp, #0x70
   10418:	mov	w3, #0x8                   	// #8
   1041c:	mov	x2, xzr
   10420:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10424:	ldr	w8, [sp, #120]
   10428:	b	103b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1810>
   1042c:	ldr	x1, [sp, #8]
   10430:	add	x0, sp, #0x70
   10434:	mov	w3, #0x8                   	// #8
   10438:	mov	x2, xzr
   1043c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10440:	ldr	w8, [sp, #120]
   10444:	b	103e4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x183c>
   10448:	ldr	x9, [sp, #112]
   1044c:	str	x19, [x9, w8, uxtw #3]
   10450:	ldp	w8, w9, [sp, #120]
   10454:	cmp	w8, w9
   10458:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   1045c:	add	w8, w8, #0x1
   10460:	str	w8, [sp, #120]
   10464:	add	x24, x24, #0x10
   10468:	cmp	x24, x23
   1046c:	b.eq	10560 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x19b8>  // b.none
   10470:	ldr	x9, [x24]
   10474:	and	x8, x9, #0xfffffffffffffff8
   10478:	tbz	w9, #0, 10490 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18e8>
   1047c:	ldr	x1, [x8, #8]
   10480:	cbz	x1, 10490 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18e8>
   10484:	mov	x0, x21
   10488:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1048c:	b	104e0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1938>
   10490:	ldr	x10, [x27, #16]
   10494:	cbz	x10, 113c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2820>
   10498:	ldr	x8, [x8]
   1049c:	mov	x9, x25
   104a0:	ldr	x11, [x10, #32]
   104a4:	add	x12, x10, #0x18
   104a8:	add	x13, x10, #0x10
   104ac:	cmp	x11, x8
   104b0:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   104b4:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   104b8:	ldr	x10, [x10]
   104bc:	cbnz	x10, 104a0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18f8>
   104c0:	cmp	x9, x25
   104c4:	b.eq	113c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2820>  // b.none
   104c8:	ldr	x10, [x9, #32]
   104cc:	cmp	x10, x8
   104d0:	csel	x8, x25, x9, hi  // hi = pmore
   104d4:	cmp	x8, x25
   104d8:	b.eq	113c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2820>  // b.none
   104dc:	ldr	w0, [x8, #40]
   104e0:	ldp	w8, w9, [sp, #120]
   104e4:	mov	w20, w0
   104e8:	cmp	w8, w9
   104ec:	b.cs	10544 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x199c>  // b.hs, b.nlast
   104f0:	ldr	x9, [sp, #112]
   104f4:	str	x20, [x9, w8, uxtw #3]
   104f8:	ldp	w8, w9, [sp, #120]
   104fc:	cmp	w8, w9
   10500:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10504:	adrp	x10, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10508:	ldrb	w10, [x10]
   1050c:	add	w8, w8, #0x1
   10510:	str	w8, [sp, #120]
   10514:	cbz	w10, 10464 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18bc>
   10518:	ldr	w10, [x24, #8]
   1051c:	cmp	w8, w9
   10520:	lsr	x19, x10, #3
   10524:	b.cc	10448 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18a0>  // b.lo, b.ul, b.last
   10528:	ldr	x1, [sp, #8]
   1052c:	add	x0, sp, #0x70
   10530:	mov	w3, #0x8                   	// #8
   10534:	mov	x2, xzr
   10538:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1053c:	ldr	w8, [sp, #120]
   10540:	b	10448 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18a0>
   10544:	ldr	x1, [sp, #8]
   10548:	add	x0, sp, #0x70
   1054c:	mov	w3, #0x8                   	// #8
   10550:	mov	x2, xzr
   10554:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10558:	ldr	w8, [sp, #120]
   1055c:	b	104f0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1948>
   10560:	ldr	x9, [x29, #8]
   10564:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10568:	ldrb	w8, [x8]
   1056c:	add	x2, sp, #0x70
   10570:	ldr	x0, [x9]
   10574:	ldp	x10, x9, [sp, #80]
   10578:	cmp	w8, #0x0
   1057c:	mov	w8, #0x13                  	// #19
   10580:	csinc	w8, w8, wzr, ne  // ne = any
   10584:	cmp	w22, #0x0
   10588:	csel	x9, x9, x10, ne  // ne = any
   1058c:	lsr	x9, x9, #4
   10590:	add	w3, w9, #0x3
   10594:	mov	w9, #0x2                   	// #2
   10598:	csel	w1, w9, w8, ne  // ne = any
   1059c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   105a0:	str	wzr, [sp, #120]
   105a4:	ldr	x28, [x28, #8]
   105a8:	ldr	x8, [sp, #104]
   105ac:	cmp	x8, x28
   105b0:	b.ne	10040 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1498>  // b.any
   105b4:	b	1067c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1ad4>
   105b8:	ldr	x1, [sp, #8]
   105bc:	add	x0, sp, #0x70
   105c0:	mov	w3, #0x8                   	// #8
   105c4:	mov	x2, xzr
   105c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   105cc:	ldr	w8, [sp, #120]
   105d0:	b	10140 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1598>
   105d4:	ldr	x1, [sp, #8]
   105d8:	add	x0, sp, #0x70
   105dc:	mov	w3, #0x8                   	// #8
   105e0:	mov	x2, xzr
   105e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   105e8:	ldr	w8, [sp, #120]
   105ec:	b	10198 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x15f0>
   105f0:	ldr	x1, [sp, #8]
   105f4:	add	x0, sp, #0x70
   105f8:	mov	w3, #0x8                   	// #8
   105fc:	mov	x2, xzr
   10600:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10604:	ldr	w8, [sp, #120]
   10608:	b	101c0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1618>
   1060c:	ldr	x1, [sp, #8]
   10610:	add	x0, sp, #0x70
   10614:	mov	w3, #0x8                   	// #8
   10618:	mov	x2, xzr
   1061c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10620:	ldr	w8, [sp, #120]
   10624:	b	101ec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1644>
   10628:	ldr	x1, [sp, #8]
   1062c:	add	x0, sp, #0x70
   10630:	mov	w3, #0x8                   	// #8
   10634:	mov	x2, xzr
   10638:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1063c:	ldr	w8, [sp, #120]
   10640:	b	1021c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1674>
   10644:	ldr	x1, [sp, #8]
   10648:	add	x0, sp, #0x70
   1064c:	mov	w3, #0x8                   	// #8
   10650:	mov	x2, xzr
   10654:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10658:	ldr	w8, [sp, #120]
   1065c:	b	10244 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x169c>
   10660:	ldr	x1, [sp, #8]
   10664:	add	x0, sp, #0x70
   10668:	mov	w3, #0x8                   	// #8
   1066c:	mov	x2, xzr
   10670:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10674:	ldr	w8, [sp, #120]
   10678:	b	1026c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x16c4>
   1067c:	ldr	x8, [x29, #8]
   10680:	ldr	x8, [x8, #16]
   10684:	ldr	x20, [x8, #16]
   10688:	add	x27, x8, #0x8
   1068c:	cmp	x27, x20
   10690:	b.eq	10b1c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f74>  // b.none
   10694:	ldp	x9, x8, [sp, #64]
   10698:	ldr	x11, [x29, #8]
   1069c:	sub	x8, x8, x9
   106a0:	ldp	x10, x9, [sp, #32]
   106a4:	lsr	x8, x8, #4
   106a8:	add	w8, w8, #0x3
   106ac:	add	x21, x11, #0x18
   106b0:	sub	x9, x9, x10
   106b4:	sub	x10, x29, #0xd0
   106b8:	lsr	x9, x9, #4
   106bc:	add	x28, x10, #0x10
   106c0:	str	w8, [sp, #88]
   106c4:	add	w8, w9, #0x3
   106c8:	str	w8, [sp, #80]
   106cc:	b	106f8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1b50>
   106d0:	ldr	x8, [x29, #8]
   106d4:	ldr	w3, [sp, #88]
   106d8:	add	x2, sp, #0x70
   106dc:	mov	w1, #0x3                   	// #3
   106e0:	ldr	x0, [x8]
   106e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   106e8:	str	wzr, [sp, #120]
   106ec:	ldr	x20, [x20, #8]
   106f0:	cmp	x27, x20
   106f4:	b.eq	10b14 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f6c>  // b.none
   106f8:	ldrb	w8, [x20]
   106fc:	tbnz	w8, #2, 11418 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2870>
   10700:	ldr	x8, [x29, #8]
   10704:	cmp	x20, #0x0
   10708:	ldr	x23, [x8, #584]
   1070c:	sub	x8, x20, #0x38
   10710:	csel	x24, xzr, x8, eq  // eq = none
   10714:	sub	x8, x29, #0xd0
   10718:	mov	x0, x24
   1071c:	bl	0 <_ZNK4llvm11GlobalValue19getGlobalIdentifierB5cxx11Ev>
   10720:	ldp	x25, x26, [x29, #-208]
   10724:	sub	x0, x29, #0xa0
   10728:	bl	0 <_ZN4llvm3MD5C1Ev>
   1072c:	sub	x0, x29, #0xa0
   10730:	mov	x1, x25
   10734:	mov	x2, x26
   10738:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
   1073c:	sub	x0, x29, #0xa0
   10740:	sub	x1, x29, #0xb0
   10744:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
   10748:	ldur	x0, [x29, #-208]
   1074c:	ldur	x22, [x29, #-176]
   10750:	cmp	x0, x28
   10754:	b.eq	1075c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1bb4>  // b.none
   10758:	bl	0 <_ZdlPv>
   1075c:	ldr	x10, [x23, #16]
   10760:	cbz	x10, 107cc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c24>
   10764:	add	x8, x23, #0x8
   10768:	mov	x9, x8
   1076c:	ldr	x11, [x10, #32]
   10770:	add	x12, x10, #0x18
   10774:	add	x13, x10, #0x10
   10778:	cmp	x11, x22
   1077c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   10780:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   10784:	ldr	x10, [x10]
   10788:	cbnz	x10, 1076c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1bc4>
   1078c:	cmp	x9, x8
   10790:	b.eq	107cc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c24>  // b.none
   10794:	ldr	x10, [x9, #32]
   10798:	cmp	x10, x22
   1079c:	csel	x9, x8, x9, hi  // hi = pmore
   107a0:	add	x10, x9, #0x20
   107a4:	cmp	x9, x8
   107a8:	csel	x8, xzr, x10, eq  // eq = none
   107ac:	tst	x8, #0x7
   107b0:	b.ne	114f8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2950>  // b.any
   107b4:	cmp	x8, #0x8
   107b8:	b.cc	107cc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c24>  // b.lo, b.ul, b.last
   107bc:	and	x9, x8, #0xfffffffffffffff8
   107c0:	ldp	x8, x9, [x9, #24]
   107c4:	cmp	x9, x8
   107c8:	b.ne	107e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c40>  // b.any
   107cc:	mov	x0, x24
   107d0:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
   107d4:	tbz	w0, #0, 114d8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2930>
   107d8:	ldr	x20, [x20, #8]
   107dc:	cmp	x27, x20
   107e0:	b.ne	106f8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1b50>  // b.any
   107e4:	b	10b14 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f6c>
   107e8:	ldr	x25, [x8]
   107ec:	mov	x0, x21
   107f0:	mov	x1, x24
   107f4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   107f8:	ldp	w8, w9, [sp, #120]
   107fc:	mov	w22, w0
   10800:	cmp	w8, w9
   10804:	b.cs	10aa4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1efc>  // b.hs, b.nlast
   10808:	ldr	x9, [sp, #112]
   1080c:	str	x22, [x9, w8, uxtw #3]
   10810:	ldp	w8, w9, [sp, #120]
   10814:	cmp	w8, w9
   10818:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   1081c:	add	w8, w8, #0x1
   10820:	str	w8, [sp, #120]
   10824:	cbz	x25, 115b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2a10>
   10828:	ldr	w10, [x25, #8]
   1082c:	cmp	w10, #0x2
   10830:	b.ne	115d8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2a30>  // b.any
   10834:	ldrb	w22, [x25, #12]
   10838:	cmp	w8, w9
   1083c:	b.cs	10ac0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f18>  // b.hs, b.nlast
   10840:	ldr	x9, [sp, #112]
   10844:	str	x22, [x9, w8, uxtw #3]
   10848:	ldp	w8, w9, [sp, #120]
   1084c:	cmp	w8, w9
   10850:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10854:	add	w8, w8, #0x1
   10858:	str	w8, [sp, #120]
   1085c:	ldr	w10, [x25, #72]
   10860:	cmp	w8, w9
   10864:	and	x22, x10, #0x3
   10868:	b.cs	10adc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f34>  // b.hs, b.nlast
   1086c:	ldr	x9, [sp, #112]
   10870:	str	x22, [x9, w8, uxtw #3]
   10874:	ldp	w9, w8, [sp, #120]
   10878:	cmp	w9, w8
   1087c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10880:	add	w24, w9, #0x1
   10884:	str	w24, [sp, #120]
   10888:	ldr	x9, [x25, #64]
   1088c:	cbz	x9, 108d8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d30>
   10890:	ldp	x26, x9, [x9]
   10894:	subs	x22, x9, x26
   10898:	b.eq	108e4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d3c>  // b.none
   1089c:	ldp	x9, x10, [x25, #40]
   108a0:	cmp	w24, w8
   108a4:	sub	x9, x10, x9
   108a8:	asr	x19, x9, #3
   108ac:	b.cs	10af8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f50>  // b.hs, b.nlast
   108b0:	ldr	x8, [sp, #112]
   108b4:	str	x19, [x8, w24, uxtw #3]
   108b8:	ldp	w8, w9, [sp, #120]
   108bc:	cmp	w8, w9
   108c0:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   108c4:	mov	w23, wzr
   108c8:	asr	x19, x22, #4
   108cc:	add	w24, w8, #0x1
   108d0:	str	w24, [sp, #120]
   108d4:	b	108ec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d44>
   108d8:	mov	x19, xzr
   108dc:	mov	x26, xzr
   108e0:	b	108e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d40>
   108e4:	mov	x19, xzr
   108e8:	mov	w23, #0x1                   	// #1
   108ec:	ldp	x22, x8, [x25, #40]
   108f0:	mov	w25, w24
   108f4:	mov	x9, x25
   108f8:	subs	x10, x8, x22
   108fc:	mov	w8, w24
   10900:	b.eq	10990 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1de8>  // b.none
   10904:	asr	x8, x10, #3
   10908:	str	w23, [sp, #96]
   1090c:	lsl	x23, x8, #3
   10910:	str	x19, [sp, #104]
   10914:	ldr	x8, [x22]
   10918:	tbz	w8, #0, 113a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2800>
   1091c:	and	x8, x8, #0xfffffffffffffff8
   10920:	ldr	x1, [x8, #8]
   10924:	mov	x0, x21
   10928:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1092c:	ldp	w8, w9, [sp, #120]
   10930:	mov	w19, w0
   10934:	cmp	w8, w9
   10938:	b.cs	10968 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1dc0>  // b.hs, b.nlast
   1093c:	ldr	x9, [sp, #112]
   10940:	str	x19, [x9, w8, uxtw #3]
   10944:	ldp	w8, w9, [sp, #120]
   10948:	cmp	w8, w9
   1094c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10950:	add	x8, x8, #0x1
   10954:	subs	x23, x23, #0x8
   10958:	add	x22, x22, #0x8
   1095c:	str	w8, [sp, #120]
   10960:	b.ne	10914 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d6c>  // b.any
   10964:	b	10984 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1ddc>
   10968:	ldr	x1, [sp, #8]
   1096c:	add	x0, sp, #0x70
   10970:	mov	w3, #0x8                   	// #8
   10974:	mov	x2, xzr
   10978:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1097c:	ldr	w8, [sp, #120]
   10980:	b	1093c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d94>
   10984:	ldr	x19, [sp, #104]
   10988:	ldr	w23, [sp, #96]
   1098c:	mov	x9, x8
   10990:	cmp	w24, w8
   10994:	b.eq	109d0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1e28>  // b.none
   10998:	ldr	x8, [sp, #112]
   1099c:	add	x24, x8, x25, lsl #3
   109a0:	add	x25, x8, x9, lsl #3
   109a4:	sub	x8, x25, x24
   109a8:	asr	x8, x8, #3
   109ac:	clz	x8, x8
   109b0:	mov	w9, #0x7e                  	// #126
   109b4:	sub	x2, x9, x8, lsl #1
   109b8:	mov	x0, x24
   109bc:	mov	x1, x25
   109c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109c4:	mov	x0, x24
   109c8:	mov	x1, x25
   109cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109d0:	tbnz	w23, #0, 106d0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1b28>
   109d4:	cbz	x19, 10a90 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1ee8>
   109d8:	add	x22, x26, x19, lsl #4
   109dc:	ldr	x8, [x26]
   109e0:	tbz	w8, #0, 113a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2800>
   109e4:	and	x8, x8, #0xfffffffffffffff8
   109e8:	ldr	x1, [x8, #8]
   109ec:	mov	x0, x21
   109f0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   109f4:	ldp	w8, w9, [sp, #120]
   109f8:	mov	w19, w0
   109fc:	cmp	w8, w9
   10a00:	b.cs	10a58 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1eb0>  // b.hs, b.nlast
   10a04:	ldr	x9, [sp, #112]
   10a08:	str	x19, [x9, w8, uxtw #3]
   10a0c:	ldp	w8, w9, [sp, #120]
   10a10:	cmp	w8, w9
   10a14:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10a18:	add	w8, w8, #0x1
   10a1c:	cmp	w8, w9
   10a20:	str	w8, [sp, #120]
   10a24:	b.cs	10a74 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1ecc>  // b.hs, b.nlast
   10a28:	ldr	x9, [sp, #112]
   10a2c:	ldr	x10, [x26, #8]
   10a30:	str	x10, [x9, w8, uxtw #3]
   10a34:	ldp	w8, w9, [sp, #120]
   10a38:	cmp	w8, w9
   10a3c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10a40:	add	x26, x26, #0x10
   10a44:	add	w8, w8, #0x1
   10a48:	cmp	x26, x22
   10a4c:	str	w8, [sp, #120]
   10a50:	b.ne	109dc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1e34>  // b.any
   10a54:	b	10a90 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1ee8>
   10a58:	ldr	x1, [sp, #8]
   10a5c:	add	x0, sp, #0x70
   10a60:	mov	w3, #0x8                   	// #8
   10a64:	mov	x2, xzr
   10a68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10a6c:	ldr	w8, [sp, #120]
   10a70:	b	10a04 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1e5c>
   10a74:	ldr	x1, [sp, #8]
   10a78:	add	x0, sp, #0x70
   10a7c:	mov	w3, #0x8                   	// #8
   10a80:	mov	x2, xzr
   10a84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10a88:	ldr	w8, [sp, #120]
   10a8c:	b	10a28 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1e80>
   10a90:	ldr	x8, [x29, #8]
   10a94:	ldr	w3, [sp, #80]
   10a98:	add	x2, sp, #0x70
   10a9c:	mov	w1, #0x17                  	// #23
   10aa0:	b	106e0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1b38>
   10aa4:	ldr	x1, [sp, #8]
   10aa8:	add	x0, sp, #0x70
   10aac:	mov	w3, #0x8                   	// #8
   10ab0:	mov	x2, xzr
   10ab4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10ab8:	ldr	w8, [sp, #120]
   10abc:	b	10808 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c60>
   10ac0:	ldr	x1, [sp, #8]
   10ac4:	add	x0, sp, #0x70
   10ac8:	mov	w3, #0x8                   	// #8
   10acc:	mov	x2, xzr
   10ad0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10ad4:	ldr	w8, [sp, #120]
   10ad8:	b	10840 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c98>
   10adc:	ldr	x1, [sp, #8]
   10ae0:	add	x0, sp, #0x70
   10ae4:	mov	w3, #0x8                   	// #8
   10ae8:	mov	x2, xzr
   10aec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10af0:	ldr	w8, [sp, #120]
   10af4:	b	1086c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1cc4>
   10af8:	ldr	x1, [sp, #8]
   10afc:	add	x0, sp, #0x70
   10b00:	mov	w3, #0x8                   	// #8
   10b04:	mov	x2, xzr
   10b08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10b0c:	ldr	w24, [sp, #120]
   10b10:	b	108b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d08>
   10b14:	ldr	x8, [x29, #8]
   10b18:	ldr	x8, [x8, #16]
   10b1c:	ldr	x20, [x8, #48]
   10b20:	add	x27, x8, #0x28
   10b24:	cmp	x27, x20
   10b28:	b.eq	10d10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2168>  // b.none
   10b2c:	ldr	x8, [sp, #24]
   10b30:	ldr	x9, [sp, #56]
   10b34:	sub	x8, x8, x9
   10b38:	ldr	x9, [x29, #8]
   10b3c:	lsr	x8, x8, #4
   10b40:	add	w22, w8, #0x3
   10b44:	add	x21, x9, #0x18
   10b48:	sub	x9, x29, #0xd0
   10b4c:	add	x28, x9, #0x10
   10b50:	b	10b60 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1fb8>
   10b54:	ldr	x20, [x20, #8]
   10b58:	cmp	x27, x20
   10b5c:	b.eq	10d10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2168>  // b.none
   10b60:	ldrb	w8, [x20]
   10b64:	tbnz	w8, #2, 11438 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2890>
   10b68:	sub	x8, x20, #0x30
   10b6c:	cmp	x20, #0x0
   10b70:	csel	x24, xzr, x8, eq  // eq = none
   10b74:	mov	x0, x24
   10b78:	bl	0 <_ZNK4llvm20GlobalIndirectSymbol13getBaseObjectEv>
   10b7c:	ldrb	w8, [x0, #23]
   10b80:	tbz	w8, #5, 10b54 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1fac>
   10b84:	mov	x23, x0
   10b88:	mov	x0, x21
   10b8c:	mov	x1, x24
   10b90:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   10b94:	mov	w25, w0
   10b98:	mov	x0, x21
   10b9c:	mov	x1, x23
   10ba0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   10ba4:	ldp	w8, w9, [sp, #120]
   10ba8:	mov	w23, w0
   10bac:	mov	w19, w25
   10bb0:	cmp	w8, w9
   10bb4:	b.cs	10cbc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2114>  // b.hs, b.nlast
   10bb8:	ldr	x9, [sp, #112]
   10bbc:	str	x19, [x9, w8, uxtw #3]
   10bc0:	ldp	w8, w9, [sp, #120]
   10bc4:	cmp	w8, w9
   10bc8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10bcc:	add	w8, w8, #0x1
   10bd0:	str	w8, [sp, #120]
   10bd4:	ldrb	w8, [x24, #23]
   10bd8:	tbz	w8, #5, 11518 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2970>
   10bdc:	ldr	x8, [x29, #8]
   10be0:	mov	x0, x24
   10be4:	ldr	x25, [x8, #584]
   10be8:	sub	x8, x29, #0xd0
   10bec:	bl	0 <_ZNK4llvm11GlobalValue19getGlobalIdentifierB5cxx11Ev>
   10bf0:	ldp	x24, x26, [x29, #-208]
   10bf4:	sub	x0, x29, #0xa0
   10bf8:	bl	0 <_ZN4llvm3MD5C1Ev>
   10bfc:	sub	x0, x29, #0xa0
   10c00:	mov	x1, x24
   10c04:	mov	x2, x26
   10c08:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
   10c0c:	sub	x0, x29, #0xa0
   10c10:	sub	x1, x29, #0xb0
   10c14:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
   10c18:	ldur	x0, [x29, #-208]
   10c1c:	ldur	x24, [x29, #-176]
   10c20:	cmp	x0, x28
   10c24:	b.eq	10c2c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2084>  // b.none
   10c28:	bl	0 <_ZdlPv>
   10c2c:	mov	w2, #0x1                   	// #1
   10c30:	mov	x0, x25
   10c34:	mov	x1, x24
   10c38:	bl	0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryEmb>
   10c3c:	cbz	x0, 11538 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2990>
   10c40:	ldr	w8, [x0, #8]
   10c44:	cbnz	w8, 11558 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x29b0>
   10c48:	ldp	w8, w9, [sp, #120]
   10c4c:	ldrb	w24, [x0, #12]
   10c50:	cmp	w8, w9
   10c54:	b.cs	10cd8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2130>  // b.hs, b.nlast
   10c58:	ldr	x9, [sp, #112]
   10c5c:	str	x24, [x9, w8, uxtw #3]
   10c60:	ldp	w8, w9, [sp, #120]
   10c64:	cmp	w8, w9
   10c68:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10c6c:	add	w8, w8, #0x1
   10c70:	cmp	w8, w9
   10c74:	mov	w19, w23
   10c78:	str	w8, [sp, #120]
   10c7c:	b.cs	10cf4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x214c>  // b.hs, b.nlast
   10c80:	ldr	x9, [sp, #112]
   10c84:	str	x19, [x9, w8, uxtw #3]
   10c88:	ldp	w8, w9, [sp, #120]
   10c8c:	cmp	w8, w9
   10c90:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10c94:	add	w8, w8, #0x1
   10c98:	str	w8, [sp, #120]
   10c9c:	ldr	x8, [x29, #8]
   10ca0:	add	x2, sp, #0x70
   10ca4:	mov	w1, #0x7                   	// #7
   10ca8:	mov	w3, w22
   10cac:	ldr	x0, [x8]
   10cb0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10cb4:	str	wzr, [sp, #120]
   10cb8:	b	10b54 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1fac>
   10cbc:	ldr	x1, [sp, #8]
   10cc0:	add	x0, sp, #0x70
   10cc4:	mov	w3, #0x8                   	// #8
   10cc8:	mov	x2, xzr
   10ccc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10cd0:	ldr	w8, [sp, #120]
   10cd4:	b	10bb8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2010>
   10cd8:	ldr	x1, [sp, #8]
   10cdc:	add	x0, sp, #0x70
   10ce0:	mov	w3, #0x8                   	// #8
   10ce4:	mov	x2, xzr
   10ce8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10cec:	ldr	w8, [sp, #120]
   10cf0:	b	10c58 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x20b0>
   10cf4:	ldr	x1, [sp, #8]
   10cf8:	add	x0, sp, #0x70
   10cfc:	mov	w3, #0x8                   	// #8
   10d00:	mov	x2, xzr
   10d04:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10d08:	ldr	w8, [sp, #120]
   10d0c:	b	10c80 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x20d8>
   10d10:	ldr	x27, [x29, #8]
   10d14:	ldr	x8, [x27, #584]
   10d18:	ldr	x21, [x8, #152]
   10d1c:	add	x20, x8, #0x88
   10d20:	cmp	x21, x20
   10d24:	b.eq	10efc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2354>  // b.none
   10d28:	ldr	x8, [sp, #16]
   10d2c:	ldr	x9, [sp, #48]
   10d30:	add	x23, x27, #0x18
   10d34:	sub	x8, x8, x9
   10d38:	lsr	x8, x8, #4
   10d3c:	add	w22, w8, #0x3
   10d40:	b	10d70 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x21c8>
   10d44:	ldr	x0, [x27]
   10d48:	add	x2, sp, #0x70
   10d4c:	mov	w1, #0x16                  	// #22
   10d50:	mov	w3, w22
   10d54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10d58:	mov	x0, x21
   10d5c:	str	wzr, [sp, #120]
   10d60:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   10d64:	mov	x21, x0
   10d68:	cmp	x0, x20
   10d6c:	b.eq	10efc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2354>  // b.none
   10d70:	ldr	x24, [x21, #32]
   10d74:	cmn	x24, #0x2
   10d78:	b.eq	11458 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x28b0>  // b.none
   10d7c:	cmn	x24, #0x1
   10d80:	b.eq	11478 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x28d0>  // b.none
   10d84:	ldr	x26, [x21, #40]
   10d88:	ldr	x25, [x27, #8]
   10d8c:	mov	x0, x24
   10d90:	mov	x1, x26
   10d94:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
   10d98:	lsr	x8, x26, #32
   10d9c:	cbnz	x8, 11498 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x28f0>
   10da0:	orr	x2, x26, x0, lsl #32
   10da4:	mov	x0, x25
   10da8:	mov	x1, x24
   10dac:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
   10db0:	ldp	w8, w9, [sp, #120]
   10db4:	mov	x24, x0
   10db8:	cmp	w8, w9
   10dbc:	b.cs	10ec4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x231c>  // b.hs, b.nlast
   10dc0:	ldr	x9, [sp, #112]
   10dc4:	str	x24, [x9, w8, uxtw #3]
   10dc8:	ldp	w8, w9, [sp, #120]
   10dcc:	cmp	w8, w9
   10dd0:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10dd4:	add	w8, w8, #0x1
   10dd8:	str	w8, [sp, #120]
   10ddc:	ldr	x24, [x21, #40]
   10de0:	cmp	w8, w9
   10de4:	b.cs	10ee0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2338>  // b.hs, b.nlast
   10de8:	ldr	x9, [sp, #112]
   10dec:	str	x24, [x9, w8, uxtw #3]
   10df0:	ldp	w9, w8, [sp, #120]
   10df4:	cmp	w9, w8
   10df8:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10dfc:	add	w9, w9, #0x1
   10e00:	str	w9, [sp, #120]
   10e04:	ldp	x24, x25, [x21, #64]
   10e08:	cmp	x24, x25
   10e0c:	b.eq	10d44 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x219c>  // b.none
   10e10:	cmp	w9, w8
   10e14:	b.cs	10e8c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x22e4>  // b.hs, b.nlast
   10e18:	ldr	x8, [sp, #112]
   10e1c:	ldr	x10, [x24]
   10e20:	str	x10, [x8, w9, uxtw #3]
   10e24:	ldp	w8, w9, [sp, #120]
   10e28:	cmp	w8, w9
   10e2c:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10e30:	add	w8, w8, #0x1
   10e34:	str	w8, [sp, #120]
   10e38:	ldr	x8, [x24, #8]
   10e3c:	tbz	w8, #0, 113a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2800>
   10e40:	and	x8, x8, #0xfffffffffffffff8
   10e44:	ldr	x1, [x8, #8]
   10e48:	mov	x0, x23
   10e4c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   10e50:	ldp	w8, w9, [sp, #120]
   10e54:	mov	w19, w0
   10e58:	cmp	w8, w9
   10e5c:	b.cs	10ea8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2300>  // b.hs, b.nlast
   10e60:	ldr	x9, [sp, #112]
   10e64:	str	x19, [x9, w8, uxtw #3]
   10e68:	ldp	w9, w8, [sp, #120]
   10e6c:	cmp	w9, w8
   10e70:	b.cs	11388 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27e0>  // b.hs, b.nlast
   10e74:	add	x24, x24, #0x10
   10e78:	add	w9, w9, #0x1
   10e7c:	cmp	x24, x25
   10e80:	str	w9, [sp, #120]
   10e84:	b.ne	10e10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2268>  // b.any
   10e88:	b	10d44 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x219c>
   10e8c:	ldr	x1, [sp, #8]
   10e90:	add	x0, sp, #0x70
   10e94:	mov	w3, #0x8                   	// #8
   10e98:	mov	x2, xzr
   10e9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10ea0:	ldr	w9, [sp, #120]
   10ea4:	b	10e18 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2270>
   10ea8:	ldr	x1, [sp, #8]
   10eac:	add	x0, sp, #0x70
   10eb0:	mov	w3, #0x8                   	// #8
   10eb4:	mov	x2, xzr
   10eb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10ebc:	ldr	w8, [sp, #120]
   10ec0:	b	10e60 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x22b8>
   10ec4:	ldr	x1, [sp, #8]
   10ec8:	add	x0, sp, #0x70
   10ecc:	mov	w3, #0x8                   	// #8
   10ed0:	mov	x2, xzr
   10ed4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10ed8:	ldr	w8, [sp, #120]
   10edc:	b	10dc0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2218>
   10ee0:	ldr	x1, [sp, #8]
   10ee4:	add	x0, sp, #0x70
   10ee8:	mov	w3, #0x8                   	// #8
   10eec:	mov	x2, xzr
   10ef0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10ef4:	ldr	w8, [sp, #120]
   10ef8:	b	10de8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2240>
   10efc:	ldr	x0, [x27]
   10f00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10f04:	ldr	x0, [sp, #112]
   10f08:	add	x8, sp, #0x70
   10f0c:	add	x8, x8, #0x10
   10f10:	cmp	x0, x8
   10f14:	b.eq	10f1c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2374>  // b.none
   10f18:	bl	0 <free>
   10f1c:	add	sp, sp, #0x3b0
   10f20:	ldp	x20, x19, [sp, #96]
   10f24:	ldp	x22, x21, [sp, #80]
   10f28:	ldp	x24, x23, [sp, #64]
   10f2c:	ldp	x26, x25, [sp, #48]
   10f30:	ldp	x28, x27, [sp, #32]
   10f34:	ldp	x29, x30, [sp, #16]
   10f38:	ldr	d8, [sp], #112
   10f3c:	ret
   10f40:	ldr	w8, [x21]
   10f44:	sub	w9, w8, #0x1
   10f48:	str	w9, [x21]
   10f4c:	cmp	w8, #0x1
   10f50:	b.eq	f104 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x55c>  // b.none
   10f54:	b	f114 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>
   10f58:	ldr	w8, [x21]
   10f5c:	sub	w9, w8, #0x1
   10f60:	str	w9, [x21]
   10f64:	cmp	w8, #0x1
   10f68:	b.eq	f500 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x958>  // b.none
   10f6c:	b	f510 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x968>
   10f70:	ldr	w8, [x21]
   10f74:	sub	w9, w8, #0x1
   10f78:	str	w9, [x21]
   10f7c:	cmp	w8, #0x1
   10f80:	b.eq	f7a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc00>  // b.none
   10f84:	b	f7b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xc10>
   10f88:	ldr	w8, [x21]
   10f8c:	sub	w9, w8, #0x1
   10f90:	str	w9, [x21]
   10f94:	cmp	w8, #0x1
   10f98:	b.eq	fa94 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xeec>  // b.none
   10f9c:	b	faa4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xefc>
   10fa0:	ldr	w8, [x21]
   10fa4:	sub	w9, w8, #0x1
   10fa8:	str	w9, [x21]
   10fac:	cmp	w8, #0x1
   10fb0:	b.eq	fd00 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1158>  // b.none
   10fb4:	b	fd10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1168>
   10fb8:	ldr	w8, [x21]
   10fbc:	sub	w9, w8, #0x1
   10fc0:	str	w9, [x21]
   10fc4:	cmp	w8, #0x1
   10fc8:	b.eq	ffac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1404>  // b.none
   10fcc:	b	ffbc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1414>
   10fd0:	mov	w3, #0x10                  	// #16
   10fd4:	mov	x0, x21
   10fd8:	mov	x1, x22
   10fdc:	mov	x2, xzr
   10fe0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10fe4:	ldr	w8, [x24]
   10fe8:	b	ede0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x238>
   10fec:	mov	w3, #0x10                  	// #16
   10ff0:	mov	x0, x21
   10ff4:	mov	x1, x22
   10ff8:	mov	x2, xzr
   10ffc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11000:	ldr	w8, [x24]
   11004:	b	ee24 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27c>
   11008:	mov	w3, #0x10                  	// #16
   1100c:	mov	x0, x21
   11010:	mov	x1, x22
   11014:	mov	x2, xzr
   11018:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1101c:	ldr	w8, [x24]
   11020:	b	ee68 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2c0>
   11024:	mov	w3, #0x10                  	// #16
   11028:	mov	x0, x21
   1102c:	mov	x1, x22
   11030:	mov	x2, xzr
   11034:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11038:	ldr	w8, [x24]
   1103c:	b	eeac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x304>
   11040:	mov	w3, #0x10                  	// #16
   11044:	mov	x0, x21
   11048:	mov	x1, x22
   1104c:	mov	x2, xzr
   11050:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11054:	ldr	w8, [x24]
   11058:	b	eeec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x344>
   1105c:	mov	w3, #0x10                  	// #16
   11060:	mov	x0, x21
   11064:	mov	x1, x22
   11068:	mov	x2, xzr
   1106c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11070:	ldr	w8, [x24]
   11074:	b	ef2c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x384>
   11078:	mov	w3, #0x10                  	// #16
   1107c:	mov	x0, x21
   11080:	mov	x1, x22
   11084:	mov	x2, xzr
   11088:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1108c:	ldr	w8, [x24]
   11090:	b	ef6c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x3c4>
   11094:	mov	w3, #0x10                  	// #16
   11098:	mov	x0, x21
   1109c:	mov	x1, x22
   110a0:	mov	x2, xzr
   110a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   110a8:	ldr	w8, [x24]
   110ac:	b	efac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x404>
   110b0:	mov	w3, #0x10                  	// #16
   110b4:	mov	x0, x21
   110b8:	mov	x1, x22
   110bc:	mov	x2, xzr
   110c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   110c4:	ldr	w8, [x24]
   110c8:	b	efec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x444>
   110cc:	mov	w3, #0x10                  	// #16
   110d0:	mov	x0, x21
   110d4:	mov	x1, x22
   110d8:	mov	x2, xzr
   110dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   110e0:	ldr	w8, [x24]
   110e4:	b	f1dc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x634>
   110e8:	mov	w3, #0x10                  	// #16
   110ec:	mov	x0, x21
   110f0:	mov	x1, x22
   110f4:	mov	x2, xzr
   110f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   110fc:	ldr	w8, [x24]
   11100:	b	f220 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x678>
   11104:	mov	w3, #0x10                  	// #16
   11108:	mov	x0, x21
   1110c:	mov	x1, x22
   11110:	mov	x2, xzr
   11114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11118:	ldr	w8, [x24]
   1111c:	b	f264 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x6bc>
   11120:	mov	w3, #0x10                  	// #16
   11124:	mov	x0, x21
   11128:	mov	x1, x22
   1112c:	mov	x2, xzr
   11130:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11134:	ldr	w8, [x24]
   11138:	b	f2a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x700>
   1113c:	mov	w3, #0x10                  	// #16
   11140:	mov	x0, x21
   11144:	mov	x1, x22
   11148:	mov	x2, xzr
   1114c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11150:	ldr	w8, [x24]
   11154:	b	f2e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x740>
   11158:	mov	w3, #0x10                  	// #16
   1115c:	mov	x0, x21
   11160:	mov	x1, x22
   11164:	mov	x2, xzr
   11168:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1116c:	ldr	w8, [x24]
   11170:	b	f328 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x780>
   11174:	mov	w3, #0x10                  	// #16
   11178:	mov	x0, x21
   1117c:	mov	x1, x22
   11180:	mov	x2, xzr
   11184:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11188:	ldr	w8, [x24]
   1118c:	b	f368 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x7c0>
   11190:	mov	w3, #0x10                  	// #16
   11194:	mov	x0, x21
   11198:	mov	x1, x22
   1119c:	mov	x2, xzr
   111a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   111a4:	ldr	w8, [x24]
   111a8:	b	f3a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x800>
   111ac:	mov	w3, #0x10                  	// #16
   111b0:	mov	x0, x21
   111b4:	mov	x1, x22
   111b8:	mov	x2, xzr
   111bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   111c0:	ldr	w8, [x24]
   111c4:	b	f3e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x840>
   111c8:	mov	w3, #0x10                  	// #16
   111cc:	mov	x0, x21
   111d0:	mov	x1, x22
   111d4:	mov	x2, xzr
   111d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   111dc:	ldr	w8, [x20, #24]
   111e0:	b	f5c0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xa18>
   111e4:	mov	w3, #0x10                  	// #16
   111e8:	mov	x0, x21
   111ec:	mov	x1, x22
   111f0:	mov	x2, xzr
   111f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   111f8:	ldr	w8, [x20, #24]
   111fc:	b	f604 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xa5c>
   11200:	mov	w3, #0x10                  	// #16
   11204:	mov	x0, x21
   11208:	mov	x1, x22
   1120c:	mov	x2, xzr
   11210:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11214:	ldr	w8, [x20, #24]
   11218:	b	f648 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xaa0>
   1121c:	mov	w3, #0x10                  	// #16
   11220:	mov	x0, x21
   11224:	mov	x1, x22
   11228:	mov	x2, xzr
   1122c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11230:	ldr	w8, [x20, #24]
   11234:	b	f688 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xae0>
   11238:	mov	w3, #0x10                  	// #16
   1123c:	mov	x0, x21
   11240:	mov	x1, x22
   11244:	mov	x2, xzr
   11248:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1124c:	ldr	w8, [x20, #24]
   11250:	b	f868 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xcc0>
   11254:	mov	w3, #0x10                  	// #16
   11258:	mov	x0, x21
   1125c:	mov	x1, x22
   11260:	mov	x2, xzr
   11264:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11268:	ldr	w8, [x20, #24]
   1126c:	b	f8ac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xd04>
   11270:	mov	w3, #0x10                  	// #16
   11274:	mov	x0, x21
   11278:	mov	x1, x22
   1127c:	mov	x2, xzr
   11280:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11284:	ldr	w8, [x20, #24]
   11288:	b	f8f0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xd48>
   1128c:	mov	w3, #0x10                  	// #16
   11290:	mov	x0, x21
   11294:	mov	x1, x22
   11298:	mov	x2, xzr
   1129c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   112a0:	ldr	w8, [x20, #24]
   112a4:	b	f930 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xd88>
   112a8:	mov	w3, #0x10                  	// #16
   112ac:	mov	x0, x21
   112b0:	mov	x1, x22
   112b4:	mov	x2, xzr
   112b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   112bc:	ldr	w8, [x20, #24]
   112c0:	b	f970 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xdc8>
   112c4:	mov	w3, #0x10                  	// #16
   112c8:	mov	x0, x21
   112cc:	mov	x1, x22
   112d0:	mov	x2, xzr
   112d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   112d8:	ldr	w8, [x20, #24]
   112dc:	b	fb54 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xfac>
   112e0:	mov	w3, #0x10                  	// #16
   112e4:	mov	x0, x21
   112e8:	mov	x1, x22
   112ec:	mov	x2, xzr
   112f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   112f4:	ldr	w8, [x20, #24]
   112f8:	b	fb98 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xff0>
   112fc:	mov	w3, #0x10                  	// #16
   11300:	mov	x0, x21
   11304:	mov	x1, x22
   11308:	mov	x2, xzr
   1130c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11310:	ldr	w8, [x20, #24]
   11314:	b	fbdc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1034>
   11318:	mov	w3, #0x10                  	// #16
   1131c:	mov	x0, x21
   11320:	mov	x1, x22
   11324:	mov	x2, xzr
   11328:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1132c:	ldr	w8, [x20, #24]
   11330:	b	fdc0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1218>
   11334:	mov	w3, #0x10                  	// #16
   11338:	mov	x0, x21
   1133c:	mov	x1, x22
   11340:	mov	x2, xzr
   11344:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11348:	ldr	w8, [x20, #24]
   1134c:	b	fe04 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x125c>
   11350:	mov	w3, #0x10                  	// #16
   11354:	mov	x0, x21
   11358:	mov	x1, x22
   1135c:	mov	x2, xzr
   11360:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11364:	ldr	w8, [x20, #24]
   11368:	b	fe48 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x12a0>
   1136c:	mov	w3, #0x10                  	// #16
   11370:	mov	x0, x21
   11374:	mov	x1, x22
   11378:	mov	x2, xzr
   1137c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11380:	ldr	w8, [x20, #24]
   11384:	b	fe88 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x12e0>
   11388:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1138c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11390:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11394:	add	x0, x0, #0x0
   11398:	add	x1, x1, #0x0
   1139c:	add	x3, x3, #0x0
   113a0:	mov	w2, #0x43                  	// #67
   113a4:	bl	0 <__assert_fail>
   113a8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   113ac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   113b0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   113b4:	add	x0, x0, #0x0
   113b8:	add	x1, x1, #0x0
   113bc:	add	x3, x3, #0x0
   113c0:	mov	w2, #0xb4                  	// #180
   113c4:	bl	0 <__assert_fail>
   113c8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   113cc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   113d0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   113d4:	add	x0, x0, #0x0
   113d8:	add	x1, x1, #0x0
   113dc:	add	x3, x3, #0x0
   113e0:	mov	w2, #0xe6                  	// #230
   113e4:	bl	0 <__assert_fail>
   113e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   113ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   113f0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   113f4:	add	x0, x0, #0x0
   113f8:	add	x1, x1, #0x0
   113fc:	add	x3, x3, #0x0
   11400:	mov	w2, #0x8b                  	// #139
   11404:	bl	0 <__assert_fail>
   11408:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1140c:	add	x0, x0, #0x0
   11410:	mov	w1, #0x1                   	// #1
   11414:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
   11418:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1141c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11420:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11424:	add	x0, x0, #0x0
   11428:	add	x1, x1, #0x0
   1142c:	add	x3, x3, #0x0
   11430:	mov	w2, #0x8b                  	// #139
   11434:	bl	0 <__assert_fail>
   11438:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1143c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11440:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11444:	add	x0, x0, #0x0
   11448:	add	x1, x1, #0x0
   1144c:	add	x3, x3, #0x0
   11450:	mov	w2, #0x8b                  	// #139
   11454:	bl	0 <__assert_fail>
   11458:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1145c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11460:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11464:	add	x0, x0, #0x0
   11468:	add	x1, x1, #0x0
   1146c:	add	x3, x3, #0x0
   11470:	mov	w2, #0xeb                  	// #235
   11474:	bl	0 <__assert_fail>
   11478:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1147c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11480:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11484:	add	x0, x0, #0x0
   11488:	add	x1, x1, #0x0
   1148c:	add	x3, x3, #0x0
   11490:	mov	w2, #0xe9                  	// #233
   11494:	bl	0 <__assert_fail>
   11498:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1149c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   114a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   114a4:	add	x0, x0, #0x0
   114a8:	add	x1, x1, #0x0
   114ac:	add	x3, x3, #0x0
   114b0:	mov	w2, #0x29                  	// #41
   114b4:	bl	0 <__assert_fail>
   114b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   114bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   114c0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   114c4:	add	x0, x0, #0x0
   114c8:	add	x1, x1, #0x0
   114cc:	add	x3, x3, #0x0
   114d0:	mov	w2, #0xf07                 	// #3847
   114d4:	bl	0 <__assert_fail>
   114d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   114dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   114e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   114e4:	add	x0, x0, #0x0
   114e8:	add	x1, x1, #0x0
   114ec:	add	x3, x3, #0x0
   114f0:	mov	w2, #0xe6d                 	// #3693
   114f4:	bl	0 <__assert_fail>
   114f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   114fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11500:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11504:	add	x0, x0, #0x0
   11508:	add	x1, x1, #0x0
   1150c:	add	x3, x3, #0x0
   11510:	mov	w2, #0xb3                  	// #179
   11514:	bl	0 <__assert_fail>
   11518:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1151c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11520:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11524:	add	x0, x0, #0x0
   11528:	add	x1, x1, #0x0
   1152c:	add	x3, x3, #0x0
   11530:	mov	w2, #0x4cc                 	// #1228
   11534:	bl	0 <__assert_fail>
   11538:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1153c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11540:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11544:	add	x0, x0, #0x0
   11548:	add	x1, x1, #0x0
   1154c:	add	x3, x3, #0x0
   11550:	mov	w2, #0x69                  	// #105
   11554:	bl	0 <__assert_fail>
   11558:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1155c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11560:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11564:	add	x0, x0, #0x0
   11568:	add	x1, x1, #0x0
   1156c:	add	x3, x3, #0x0
   11570:	mov	w2, #0x108                 	// #264
   11574:	bl	0 <__assert_fail>
   11578:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1157c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11580:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11584:	add	x0, x0, #0x0
   11588:	add	x1, x1, #0x0
   1158c:	add	x3, x3, #0x0
   11590:	mov	w2, #0x69                  	// #105
   11594:	bl	0 <__assert_fail>
   11598:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1159c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   115a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   115a4:	add	x0, x0, #0x0
   115a8:	add	x1, x1, #0x0
   115ac:	add	x3, x3, #0x0
   115b0:	mov	w2, #0x108                 	// #264
   115b4:	bl	0 <__assert_fail>
   115b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   115bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   115c0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   115c4:	add	x0, x0, #0x0
   115c8:	add	x1, x1, #0x0
   115cc:	add	x3, x3, #0x0
   115d0:	mov	w2, #0x69                  	// #105
   115d4:	bl	0 <__assert_fail>
   115d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   115dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   115e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   115e4:	add	x0, x0, #0x0
   115e8:	add	x1, x1, #0x0
   115ec:	add	x3, x3, #0x0
   115f0:	mov	w2, #0x108                 	// #264
   115f4:	bl	0 <__assert_fail>
   115f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   115fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11600:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11604:	add	x0, x0, #0x0
   11608:	add	x1, x1, #0x0
   1160c:	add	x3, x3, #0x0
   11610:	mov	w2, #0x134                 	// #308
   11614:	bl	0 <__assert_fail>
   11618:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1161c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11620:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11624:	add	x0, x0, #0x0
   11628:	add	x1, x1, #0x0
   1162c:	add	x3, x3, #0x0
   11630:	mov	w2, #0x69                  	// #105
   11634:	bl	0 <__assert_fail>
   11638:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1163c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11640:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11644:	add	x0, x0, #0x0
   11648:	add	x1, x1, #0x0
   1164c:	add	x3, x3, #0x0
   11650:	mov	w2, #0x108                 	// #264
   11654:	bl	0 <__assert_fail>
   11658:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1165c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11660:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11664:	add	x0, x0, #0x0
   11668:	add	x1, x1, #0x0
   1166c:	add	x3, x3, #0x0
   11670:	mov	w2, #0x108                 	// #264
   11674:	bl	0 <__assert_fail>
   11678:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1167c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11680:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11684:	add	x0, x0, #0x0
   11688:	add	x1, x1, #0x0
   1168c:	add	x3, x3, #0x0
   11690:	mov	w2, #0x657                 	// #1623
   11694:	bl	0 <__assert_fail>

0000000000011698 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>:
   11698:	sub	sp, sp, #0x170
   1169c:	stp	x29, x30, [sp, #272]
   116a0:	str	x28, [sp, #288]
   116a4:	stp	x26, x25, [sp, #304]
   116a8:	stp	x24, x23, [sp, #320]
   116ac:	stp	x22, x21, [sp, #336]
   116b0:	stp	x20, x19, [sp, #352]
   116b4:	add	x29, sp, #0x110
   116b8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   116bc:	ldr	d0, [x8]
   116c0:	mov	x8, sp
   116c4:	mov	w22, w4
   116c8:	mov	x23, x3
   116cc:	mov	w19, w1
   116d0:	mov	x20, x0
   116d4:	add	x21, x8, #0x10
   116d8:	str	x21, [sp]
   116dc:	str	d0, [sp, #8]
   116e0:	cbz	w23, 11794 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xfc>
   116e4:	mov	x24, x2
   116e8:	mov	x25, xzr
   116ec:	mov	w8, wzr
   116f0:	mov	w9, #0x40                  	// #64
   116f4:	cbz	w22, 11738 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>
   116f8:	cmp	x23, x25
   116fc:	b.ls	117d8 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x140>  // b.plast
   11700:	ldrb	w10, [x24, x25]
   11704:	sub	w11, w10, #0x30
   11708:	cmp	w11, #0xa
   1170c:	b.cc	11738 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>  // b.lo, b.ul, b.last
   11710:	and	w11, w10, #0xffffffdf
   11714:	sub	w11, w11, #0x41
   11718:	and	w11, w11, #0xff
   1171c:	cmp	w11, #0x1a
   11720:	b.cc	11738 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>  // b.lo, b.ul, b.last
   11724:	cmp	w10, #0x5f
   11728:	b.eq	11738 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>  // b.none
   1172c:	cmp	w10, #0x2e
   11730:	b.eq	11738 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>  // b.none
   11734:	mov	w22, wzr
   11738:	cmp	x23, x25
   1173c:	b.ls	117d8 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x140>  // b.plast
   11740:	ldrb	w26, [x24, x25]
   11744:	cmp	w8, w9
   11748:	b.cs	11778 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xe0>  // b.hs, b.nlast
   1174c:	ldr	x9, [sp]
   11750:	str	w26, [x9, w8, uxtw #2]
   11754:	ldp	w8, w9, [sp, #8]
   11758:	cmp	w8, w9
   1175c:	b.cs	117f8 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x160>  // b.hs, b.nlast
   11760:	add	x25, x25, #0x1
   11764:	add	w8, w8, #0x1
   11768:	cmp	w23, w25
   1176c:	str	w8, [sp, #8]
   11770:	b.ne	116f4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x5c>  // b.any
   11774:	b	11794 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xfc>
   11778:	mov	x0, sp
   1177c:	mov	w3, #0x4                   	// #4
   11780:	mov	x1, x21
   11784:	mov	x2, xzr
   11788:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1178c:	ldr	w8, [sp, #8]
   11790:	b	1174c <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xb4>
   11794:	mov	x2, sp
   11798:	mov	x0, x20
   1179c:	mov	w1, w19
   117a0:	mov	w3, w22
   117a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   117a8:	ldr	x0, [sp]
   117ac:	cmp	x0, x21
   117b0:	b.eq	117b8 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x120>  // b.none
   117b4:	bl	0 <free>
   117b8:	ldp	x20, x19, [sp, #352]
   117bc:	ldp	x22, x21, [sp, #336]
   117c0:	ldp	x24, x23, [sp, #320]
   117c4:	ldp	x26, x25, [sp, #304]
   117c8:	ldr	x28, [sp, #288]
   117cc:	ldp	x29, x30, [sp, #272]
   117d0:	add	sp, sp, #0x170
   117d4:	ret
   117d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   117dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   117e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   117e4:	add	x0, x0, #0x0
   117e8:	add	x1, x1, #0x0
   117ec:	add	x3, x3, #0x0
   117f0:	mov	w2, #0xfa                  	// #250
   117f4:	bl	0 <__assert_fail>
   117f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   117fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11800:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11804:	add	x0, x0, #0x0
   11808:	add	x1, x1, #0x0
   1180c:	add	x3, x3, #0x0
   11810:	mov	w2, #0x43                  	// #67
   11814:	bl	0 <__assert_fail>

0000000000011818 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>:
   11818:	stp	x29, x30, [sp, #-16]!
   1181c:	mov	x29, sp
   11820:	cmp	w0, #0x41
   11824:	b.hi	11b3c <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x324>  // b.pmore
   11828:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1182c:	mov	w8, w0
   11830:	add	x9, x9, #0x0
   11834:	adr	x10, 11848 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x30>
   11838:	ldrb	w11, [x9, x8]
   1183c:	add	x10, x10, x11, lsl #2
   11840:	mov	w0, #0x1                   	// #1
   11844:	br	x10
   11848:	mov	w0, #0x33                  	// #51
   1184c:	ldp	x29, x30, [sp], #16
   11850:	ret
   11854:	mov	w0, #0x25                  	// #37
   11858:	ldp	x29, x30, [sp], #16
   1185c:	ret
   11860:	mov	w0, #0x2c                  	// #44
   11864:	ldp	x29, x30, [sp], #16
   11868:	ret
   1186c:	mov	w0, #0x20                  	// #32
   11870:	ldp	x29, x30, [sp], #16
   11874:	ret
   11878:	mov	w0, #0x27                  	// #39
   1187c:	ldp	x29, x30, [sp], #16
   11880:	ret
   11884:	mov	w0, #0x39                  	// #57
   11888:	ldp	x29, x30, [sp], #16
   1188c:	ret
   11890:	mov	w0, #0x13                  	// #19
   11894:	ldp	x29, x30, [sp], #16
   11898:	ret
   1189c:	mov	w0, #0x1a                  	// #26
   118a0:	ldp	x29, x30, [sp], #16
   118a4:	ret
   118a8:	mov	w0, #0x36                  	// #54
   118ac:	ldp	x29, x30, [sp], #16
   118b0:	ret
   118b4:	mov	w0, #0x2                   	// #2
   118b8:	ldp	x29, x30, [sp], #16
   118bc:	ret
   118c0:	mov	w0, #0x3                   	// #3
   118c4:	ldp	x29, x30, [sp], #16
   118c8:	ret
   118cc:	mov	w0, #0x3c                  	// #60
   118d0:	ldp	x29, x30, [sp], #16
   118d4:	ret
   118d8:	mov	w0, #0x31                  	// #49
   118dc:	ldp	x29, x30, [sp], #16
   118e0:	ret
   118e4:	mov	w0, #0x4                   	// #4
   118e8:	ldp	x29, x30, [sp], #16
   118ec:	ret
   118f0:	mov	w0, #0xc                   	// #12
   118f4:	ldp	x29, x30, [sp], #16
   118f8:	ret
   118fc:	mov	w0, #0x3e                  	// #62
   11900:	ldp	x29, x30, [sp], #16
   11904:	ret
   11908:	mov	w0, #0xf                   	// #15
   1190c:	ldp	x29, x30, [sp], #16
   11910:	ret
   11914:	mov	w0, #0x16                  	// #22
   11918:	ldp	x29, x30, [sp], #16
   1191c:	ret
   11920:	mov	w0, #0x1e                  	// #30
   11924:	ldp	x29, x30, [sp], #16
   11928:	ret
   1192c:	mov	w0, #0x1f                  	// #31
   11930:	ldp	x29, x30, [sp], #16
   11934:	ret
   11938:	mov	w0, #0x3a                  	// #58
   1193c:	ldp	x29, x30, [sp], #16
   11940:	ret
   11944:	mov	w0, #0x2f                  	// #47
   11948:	ldp	x29, x30, [sp], #16
   1194c:	ret
   11950:	mov	w0, #0x21                  	// #33
   11954:	ldp	x29, x30, [sp], #16
   11958:	ret
   1195c:	mov	w0, #0x2d                  	// #45
   11960:	ldp	x29, x30, [sp], #16
   11964:	ret
   11968:	mov	w0, #0x23                  	// #35
   1196c:	ldp	x29, x30, [sp], #16
   11970:	ret
   11974:	mov	w0, #0x24                  	// #36
   11978:	ldp	x29, x30, [sp], #16
   1197c:	ret
   11980:	mov	w0, #0x2b                  	// #43
   11984:	ldp	x29, x30, [sp], #16
   11988:	ret
   1198c:	mov	w0, #0x29                  	// #41
   11990:	ldp	x29, x30, [sp], #16
   11994:	ret
   11998:	mov	w0, #0x2a                  	// #42
   1199c:	ldp	x29, x30, [sp], #16
   119a0:	ret
   119a4:	mov	w0, #0x26                  	// #38
   119a8:	ldp	x29, x30, [sp], #16
   119ac:	ret
   119b0:	mov	w0, #0x5                   	// #5
   119b4:	ldp	x29, x30, [sp], #16
   119b8:	ret
   119bc:	mov	w0, #0x32                  	// #50
   119c0:	ldp	x29, x30, [sp], #16
   119c4:	ret
   119c8:	mov	w0, #0x28                  	// #40
   119cc:	ldp	x29, x30, [sp], #16
   119d0:	ret
   119d4:	mov	w0, #0x6                   	// #6
   119d8:	ldp	x29, x30, [sp], #16
   119dc:	ret
   119e0:	mov	w0, #0x7                   	// #7
   119e4:	ldp	x29, x30, [sp], #16
   119e8:	ret
   119ec:	mov	w0, #0x8                   	// #8
   119f0:	ldp	x29, x30, [sp], #16
   119f4:	ret
   119f8:	mov	w0, #0x9                   	// #9
   119fc:	ldp	x29, x30, [sp], #16
   11a00:	ret
   11a04:	mov	w0, #0xa                   	// #10
   11a08:	ldp	x29, x30, [sp], #16
   11a0c:	ret
   11a10:	mov	w0, #0xb                   	// #11
   11a14:	ldp	x29, x30, [sp], #16
   11a18:	ret
   11a1c:	mov	w0, #0x38                  	// #56
   11a20:	ldp	x29, x30, [sp], #16
   11a24:	ret
   11a28:	mov	w0, #0x11                  	// #17
   11a2c:	ldp	x29, x30, [sp], #16
   11a30:	ret
   11a34:	mov	w0, #0x3f                  	// #63
   11a38:	ldp	x29, x30, [sp], #16
   11a3c:	ret
   11a40:	mov	w0, #0x12                  	// #18
   11a44:	ldp	x29, x30, [sp], #16
   11a48:	ret
   11a4c:	mov	w0, #0x15                  	// #21
   11a50:	ldp	x29, x30, [sp], #16
   11a54:	ret
   11a58:	mov	w0, #0x17                  	// #23
   11a5c:	ldp	x29, x30, [sp], #16
   11a60:	ret
   11a64:	mov	w0, #0x18                  	// #24
   11a68:	ldp	x29, x30, [sp], #16
   11a6c:	ret
   11a70:	mov	w0, #0x37                  	// #55
   11a74:	ldp	x29, x30, [sp], #16
   11a78:	ret
   11a7c:	mov	w0, #0x3d                  	// #61
   11a80:	ldp	x29, x30, [sp], #16
   11a84:	ret
   11a88:	mov	w0, #0x34                  	// #52
   11a8c:	ldp	x29, x30, [sp], #16
   11a90:	ret
   11a94:	mov	w0, #0x22                  	// #34
   11a98:	ldp	x29, x30, [sp], #16
   11a9c:	ret
   11aa0:	mov	w0, #0xd                   	// #13
   11aa4:	ldp	x29, x30, [sp], #16
   11aa8:	ret
   11aac:	mov	w0, #0x30                  	// #48
   11ab0:	ldp	x29, x30, [sp], #16
   11ab4:	ret
   11ab8:	mov	w0, #0x10                  	// #16
   11abc:	ldp	x29, x30, [sp], #16
   11ac0:	ret
   11ac4:	mov	w0, #0x14                  	// #20
   11ac8:	ldp	x29, x30, [sp], #16
   11acc:	ret
   11ad0:	mov	w0, #0x1b                  	// #27
   11ad4:	ldp	x29, x30, [sp], #16
   11ad8:	ret
   11adc:	mov	w0, #0x1d                  	// #29
   11ae0:	ldp	x29, x30, [sp], #16
   11ae4:	ret
   11ae8:	mov	w0, #0x2e                  	// #46
   11aec:	ldp	x29, x30, [sp], #16
   11af0:	ret
   11af4:	mov	w0, #0xe                   	// #14
   11af8:	ldp	x29, x30, [sp], #16
   11afc:	ret
   11b00:	mov	w0, #0x40                  	// #64
   11b04:	ldp	x29, x30, [sp], #16
   11b08:	ret
   11b0c:	mov	w0, #0x19                  	// #25
   11b10:	ldp	x29, x30, [sp], #16
   11b14:	ret
   11b18:	mov	w0, #0x1c                  	// #28
   11b1c:	ldp	x29, x30, [sp], #16
   11b20:	ret
   11b24:	mov	w0, #0x35                  	// #53
   11b28:	ldp	x29, x30, [sp], #16
   11b2c:	ret
   11b30:	mov	w0, #0x3b                  	// #59
   11b34:	ldp	x29, x30, [sp], #16
   11b38:	ret
   11b3c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11b40:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11b44:	add	x0, x0, #0x0
   11b48:	add	x1, x1, #0x0
   11b4c:	mov	w2, #0x2df                 	// #735
   11b50:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   11b54:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11b58:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11b5c:	add	x0, x0, #0x0
   11b60:	add	x1, x1, #0x0
   11b64:	mov	w2, #0x2dc                 	// #732
   11b68:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   11b6c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11b70:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11b74:	add	x0, x0, #0x0
   11b78:	add	x1, x1, #0x0
   11b7c:	mov	w2, #0x2da                 	// #730
   11b80:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000011b84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb>:
   11b84:	str	d8, [sp, #-112]!
   11b88:	stp	x29, x30, [sp, #16]
   11b8c:	stp	x28, x27, [sp, #32]
   11b90:	stp	x26, x25, [sp, #48]
   11b94:	stp	x24, x23, [sp, #64]
   11b98:	stp	x22, x21, [sp, #80]
   11b9c:	stp	x20, x19, [sp, #96]
   11ba0:	mov	x29, sp
   11ba4:	sub	sp, sp, #0x2d0
   11ba8:	cmp	w1, w2
   11bac:	str	w2, [sp, #44]
   11bb0:	b.eq	145a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a20>  // b.none
   11bb4:	mov	x27, x0
   11bb8:	ldr	x0, [x0]
   11bbc:	mov	w20, w1
   11bc0:	mov	w1, #0xb                   	// #11
   11bc4:	mov	w2, #0x4                   	// #4
   11bc8:	mov	w22, w3
   11bcc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11bd0:	str	x27, [x29, #8]
   11bd4:	tbz	w22, #0, 11d60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1dc>
   11bd8:	mov	w0, #0x220                 	// #544
   11bdc:	bl	0 <_Znwm>
   11be0:	adrp	x26, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11be4:	ldr	x26, [x26]
   11be8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11bec:	ldr	d8, [x8]
   11bf0:	movi	v0.2s, #0x1
   11bf4:	str	d0, [x0, #8]
   11bf8:	movi	v0.2d, #0x0
   11bfc:	mov	x24, x0
   11c00:	add	x10, x26, #0x10
   11c04:	mov	x23, x0
   11c08:	mov	w9, #0x7                   	// #7
   11c0c:	stp	q0, q0, [x0, #48]
   11c10:	stp	q0, q0, [x0, #80]
   11c14:	stp	q0, q0, [x0, #112]
   11c18:	stp	q0, q0, [x0, #144]
   11c1c:	stp	q0, q0, [x0, #176]
   11c20:	stp	q0, q0, [x0, #208]
   11c24:	stp	q0, q0, [x0, #240]
   11c28:	stp	q0, q0, [x0, #272]
   11c2c:	stp	q0, q0, [x0, #304]
   11c30:	stp	q0, q0, [x0, #336]
   11c34:	stp	q0, q0, [x0, #368]
   11c38:	stp	q0, q0, [x0, #400]
   11c3c:	stp	q0, q0, [x0, #432]
   11c40:	stp	q0, q0, [x0, #464]
   11c44:	stp	q0, q0, [x0, #496]
   11c48:	str	x10, [x0]
   11c4c:	str	q0, [x24, #32]!
   11c50:	str	q0, [x0, #528]
   11c54:	str	x24, [x23, #16]!
   11c58:	str	d8, [x0, #24]
   11c5c:	str	x9, [x24]
   11c60:	ldp	w8, w9, [x0, #24]
   11c64:	ldur	w11, [sp, #115]
   11c68:	ldr	w12, [sp, #112]
   11c6c:	mov	w10, #0xff                  	// #255
   11c70:	cmp	w8, w9
   11c74:	strb	w10, [x0, #40]
   11c78:	str	w11, [x0, #44]
   11c7c:	stur	w12, [x0, #41]
   11c80:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   11c84:	add	w8, w8, #0x1
   11c88:	mov	x22, x0
   11c8c:	cmp	w8, w9
   11c90:	str	w8, [x0, #24]
   11c94:	b.cs	145c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a44>  // b.hs, b.nlast
   11c98:	ldr	x9, [x22, #16]
   11c9c:	mov	w10, #0x6                   	// #6
   11ca0:	add	x8, x9, w8, uxtw #4
   11ca4:	str	xzr, [x8]
   11ca8:	strb	w10, [x8, #8]
   11cac:	ldur	w9, [sp, #115]
   11cb0:	ldr	w10, [sp, #112]
   11cb4:	str	w9, [x8, #12]
   11cb8:	stur	w10, [x8, #9]
   11cbc:	ldp	w8, w9, [x22, #24]
   11cc0:	cmp	w8, w9
   11cc4:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   11cc8:	ldr	w10, [sp, #44]
   11ccc:	add	w8, w8, #0x1
   11cd0:	mov	w11, #0x20                  	// #32
   11cd4:	cmp	w8, w9
   11cd8:	clz	w10, w10
   11cdc:	sub	w19, w11, w10
   11ce0:	str	w8, [x22, #24]
   11ce4:	b.cs	145e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a60>  // b.hs, b.nlast
   11ce8:	ldr	x9, [x22, #16]
   11cec:	mov	w10, #0x2                   	// #2
   11cf0:	add	x8, x9, w8, uxtw #4
   11cf4:	str	x19, [x8]
   11cf8:	strb	w10, [x8, #8]
   11cfc:	ldur	w9, [sp, #115]
   11d00:	ldr	w10, [sp, #112]
   11d04:	str	w9, [x8, #12]
   11d08:	stur	w10, [x8, #9]
   11d0c:	ldp	w8, w9, [x22, #24]
   11d10:	cmp	w8, w9
   11d14:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   11d18:	add	w8, w8, #0x1
   11d1c:	str	w8, [x22, #24]
   11d20:	ldr	x24, [x27]
   11d24:	mov	x1, x23
   11d28:	stp	x23, x22, [x29, #-24]
   11d2c:	mov	x0, x24
   11d30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11d34:	ldp	x1, x8, [x24, #32]
   11d38:	add	x25, x24, #0x18
   11d3c:	cmp	x1, x8
   11d40:	b.eq	11d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e4>  // b.none
   11d44:	stp	x23, xzr, [x1]
   11d48:	ldur	x8, [x29, #-16]
   11d4c:	add	x19, x1, #0x10
   11d50:	stp	xzr, xzr, [x29, #-24]
   11d54:	str	x8, [x1, #8]
   11d58:	str	x19, [x24, #32]
   11d5c:	b	11d78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f4>
   11d60:	stp	xzr, xzr, [sp, #16]
   11d64:	b	124dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x958>
   11d68:	sub	x2, x29, #0x18
   11d6c:	mov	x0, x25
   11d70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11d74:	ldr	x19, [x24, #32]
   11d78:	adrp	x21, 0 <__pthread_key_create>
   11d7c:	ldur	x22, [x29, #-16]
   11d80:	ldr	x25, [x25]
   11d84:	ldr	x21, [x21]
   11d88:	cbz	x22, 11e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x298>
   11d8c:	add	x8, x22, #0x8
   11d90:	cbz	x21, 11db0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x22c>
   11d94:	ldaxr	w9, [x8]
   11d98:	sub	w10, w9, #0x1
   11d9c:	stlxr	w11, w10, [x8]
   11da0:	cbnz	w11, 11d94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x210>
   11da4:	cmp	w9, #0x1
   11da8:	b.eq	11dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x240>  // b.none
   11dac:	b	11e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x298>
   11db0:	ldr	w9, [x8]
   11db4:	sub	w10, w9, #0x1
   11db8:	str	w10, [x8]
   11dbc:	cmp	w9, #0x1
   11dc0:	b.ne	11e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x298>  // b.any
   11dc4:	mov	x23, x19
   11dc8:	mov	x19, x22
   11dcc:	ldr	x8, [x19], #12
   11dd0:	mov	x0, x22
   11dd4:	ldr	x8, [x8, #16]
   11dd8:	blr	x8
   11ddc:	cbz	x21, 11df4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x270>
   11de0:	ldaxr	w8, [x19]
   11de4:	sub	w9, w8, #0x1
   11de8:	stlxr	w10, w9, [x19]
   11dec:	cbnz	w10, 11de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x25c>
   11df0:	b	11e00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x27c>
   11df4:	ldr	w8, [x19]
   11df8:	sub	w9, w8, #0x1
   11dfc:	str	w9, [x19]
   11e00:	cmp	w8, #0x1
   11e04:	mov	x19, x23
   11e08:	b.ne	11e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x298>  // b.any
   11e0c:	ldr	x8, [x22]
   11e10:	mov	x0, x22
   11e14:	ldr	x8, [x8, #24]
   11e18:	blr	x8
   11e1c:	mov	w0, #0x220                 	// #544
   11e20:	bl	0 <_Znwm>
   11e24:	movi	v0.2s, #0x1
   11e28:	add	x8, x26, #0x10
   11e2c:	str	d0, [x0, #8]
   11e30:	movi	v0.2d, #0x0
   11e34:	mov	x24, x0
   11e38:	mov	x23, x0
   11e3c:	mov	w9, #0x8                   	// #8
   11e40:	str	x8, [x0]
   11e44:	stp	q0, q0, [x0, #48]
   11e48:	stp	q0, q0, [x0, #80]
   11e4c:	stp	q0, q0, [x0, #112]
   11e50:	stp	q0, q0, [x0, #144]
   11e54:	stp	q0, q0, [x0, #176]
   11e58:	stp	q0, q0, [x0, #208]
   11e5c:	stp	q0, q0, [x0, #240]
   11e60:	stp	q0, q0, [x0, #272]
   11e64:	stp	q0, q0, [x0, #304]
   11e68:	stp	q0, q0, [x0, #336]
   11e6c:	stp	q0, q0, [x0, #368]
   11e70:	stp	q0, q0, [x0, #400]
   11e74:	stp	q0, q0, [x0, #432]
   11e78:	stp	q0, q0, [x0, #464]
   11e7c:	stp	q0, q0, [x0, #496]
   11e80:	str	q0, [x24, #32]!
   11e84:	str	q0, [x0, #528]
   11e88:	str	x24, [x23, #16]!
   11e8c:	str	d8, [x0, #24]
   11e90:	str	x9, [x24]
   11e94:	ldp	w8, w9, [x0, #24]
   11e98:	ldur	w11, [sp, #115]
   11e9c:	ldr	w12, [sp, #112]
   11ea0:	mov	w10, #0xff                  	// #255
   11ea4:	cmp	w8, w9
   11ea8:	strb	w10, [x0, #40]
   11eac:	str	w11, [x0, #44]
   11eb0:	stur	w12, [x0, #41]
   11eb4:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   11eb8:	add	w8, w8, #0x1
   11ebc:	mov	x22, x0
   11ec0:	cmp	w8, w9
   11ec4:	str	w8, [x0, #24]
   11ec8:	b.cs	14600 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a7c>  // b.hs, b.nlast
   11ecc:	ldr	x9, [x22, #16]
   11ed0:	mov	w10, #0x6                   	// #6
   11ed4:	add	x8, x9, w8, uxtw #4
   11ed8:	str	xzr, [x8]
   11edc:	strb	w10, [x8, #8]
   11ee0:	ldur	w9, [sp, #115]
   11ee4:	ldr	w10, [sp, #112]
   11ee8:	str	w9, [x8, #12]
   11eec:	stur	w10, [x8, #9]
   11ef0:	ldp	w8, w9, [x22, #24]
   11ef4:	cmp	w8, w9
   11ef8:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   11efc:	add	w8, w8, #0x1
   11f00:	cmp	w8, w9
   11f04:	str	w8, [x22, #24]
   11f08:	b.cs	1461c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a98>  // b.hs, b.nlast
   11f0c:	ldr	x9, [x22, #16]
   11f10:	mov	w10, #0x8                   	// #8
   11f14:	mov	w11, #0x2                   	// #2
   11f18:	add	x8, x9, w8, uxtw #4
   11f1c:	str	x10, [x8]
   11f20:	strb	w11, [x8, #8]
   11f24:	ldur	w9, [sp, #115]
   11f28:	ldr	w10, [sp, #112]
   11f2c:	str	w9, [x8, #12]
   11f30:	stur	w10, [x8, #9]
   11f34:	ldp	w8, w9, [x22, #24]
   11f38:	cmp	w8, w9
   11f3c:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   11f40:	add	w8, w8, #0x1
   11f44:	str	w8, [x22, #24]
   11f48:	ldr	x24, [x27]
   11f4c:	mov	x1, x23
   11f50:	stp	x23, x22, [x29, #-48]
   11f54:	mov	x0, x24
   11f58:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11f5c:	ldp	x1, x8, [x24, #32]
   11f60:	add	x23, x24, #0x18
   11f64:	cmp	x1, x8
   11f68:	b.eq	11f9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x418>  // b.none
   11f6c:	str	xzr, [x1, #8]
   11f70:	ldur	q0, [x29, #-48]
   11f74:	add	x28, x1, #0x10
   11f78:	stur	xzr, [x29, #-40]
   11f7c:	str	q0, [x1]
   11f80:	stur	xzr, [x29, #-48]
   11f84:	str	x28, [x24, #32]
   11f88:	ldur	x22, [x29, #-40]
   11f8c:	ldr	x8, [x23]
   11f90:	str	x8, [sp, #48]
   11f94:	cbnz	x22, 11fbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x438>
   11f98:	b	1204c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4c8>
   11f9c:	sub	x2, x29, #0x30
   11fa0:	mov	x0, x23
   11fa4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11fa8:	ldr	x28, [x24, #32]
   11fac:	ldur	x22, [x29, #-40]
   11fb0:	ldr	x8, [x23]
   11fb4:	str	x8, [sp, #48]
   11fb8:	cbz	x22, 1204c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4c8>
   11fbc:	add	x8, x22, #0x8
   11fc0:	cbz	x21, 11fe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x45c>
   11fc4:	ldaxr	w9, [x8]
   11fc8:	sub	w10, w9, #0x1
   11fcc:	stlxr	w11, w10, [x8]
   11fd0:	cbnz	w11, 11fc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x440>
   11fd4:	cmp	w9, #0x1
   11fd8:	b.eq	11ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x470>  // b.none
   11fdc:	b	1204c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4c8>
   11fe0:	ldr	w9, [x8]
   11fe4:	sub	w10, w9, #0x1
   11fe8:	str	w10, [x8]
   11fec:	cmp	w9, #0x1
   11ff0:	b.ne	1204c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4c8>  // b.any
   11ff4:	mov	x23, x19
   11ff8:	mov	x19, x22
   11ffc:	ldr	x8, [x19], #12
   12000:	mov	x0, x22
   12004:	ldr	x8, [x8, #16]
   12008:	blr	x8
   1200c:	cbz	x21, 12024 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4a0>
   12010:	ldaxr	w8, [x19]
   12014:	sub	w9, w8, #0x1
   12018:	stlxr	w10, w9, [x19]
   1201c:	cbnz	w10, 12010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x48c>
   12020:	b	12030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4ac>
   12024:	ldr	w8, [x19]
   12028:	sub	w9, w8, #0x1
   1202c:	str	w9, [x19]
   12030:	cmp	w8, #0x1
   12034:	mov	x19, x23
   12038:	b.ne	1204c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4c8>  // b.any
   1203c:	ldr	x8, [x22]
   12040:	mov	x0, x22
   12044:	ldr	x8, [x8, #24]
   12048:	blr	x8
   1204c:	mov	w0, #0x220                 	// #544
   12050:	bl	0 <_Znwm>
   12054:	movi	v0.2s, #0x1
   12058:	add	x8, x26, #0x10
   1205c:	str	d0, [x0, #8]
   12060:	movi	v0.2d, #0x0
   12064:	mov	x24, x0
   12068:	mov	x23, x0
   1206c:	mov	w9, #0x9                   	// #9
   12070:	str	x8, [x0]
   12074:	stp	q0, q0, [x0, #48]
   12078:	stp	q0, q0, [x0, #80]
   1207c:	stp	q0, q0, [x0, #112]
   12080:	stp	q0, q0, [x0, #144]
   12084:	stp	q0, q0, [x0, #176]
   12088:	stp	q0, q0, [x0, #208]
   1208c:	stp	q0, q0, [x0, #240]
   12090:	stp	q0, q0, [x0, #272]
   12094:	stp	q0, q0, [x0, #304]
   12098:	stp	q0, q0, [x0, #336]
   1209c:	stp	q0, q0, [x0, #368]
   120a0:	stp	q0, q0, [x0, #400]
   120a4:	stp	q0, q0, [x0, #432]
   120a8:	stp	q0, q0, [x0, #464]
   120ac:	stp	q0, q0, [x0, #496]
   120b0:	str	q0, [x24, #32]!
   120b4:	str	q0, [x0, #528]
   120b8:	str	x24, [x23, #16]!
   120bc:	str	d8, [x0, #24]
   120c0:	str	x9, [x24]
   120c4:	ldp	w8, w9, [x0, #24]
   120c8:	ldur	w11, [sp, #115]
   120cc:	ldr	w12, [sp, #112]
   120d0:	mov	w10, #0xff                  	// #255
   120d4:	cmp	w8, w9
   120d8:	strb	w10, [x0, #40]
   120dc:	str	w11, [x0, #44]
   120e0:	stur	w12, [x0, #41]
   120e4:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   120e8:	add	w8, w8, #0x1
   120ec:	mov	x22, x0
   120f0:	cmp	w8, w9
   120f4:	str	w8, [x0, #24]
   120f8:	b.cs	14638 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab4>  // b.hs, b.nlast
   120fc:	ldr	x9, [x22, #16]
   12100:	mov	w10, #0x6                   	// #6
   12104:	str	x28, [sp, #56]
   12108:	add	x8, x9, w8, uxtw #4
   1210c:	str	xzr, [x8]
   12110:	strb	w10, [x8, #8]
   12114:	ldur	w9, [sp, #115]
   12118:	ldr	w10, [sp, #112]
   1211c:	str	w9, [x8, #12]
   12120:	stur	w10, [x8, #9]
   12124:	ldp	w8, w9, [x22, #24]
   12128:	cmp	w8, w9
   1212c:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12130:	add	w8, w8, #0x1
   12134:	mov	x28, x25
   12138:	cmp	w8, w9
   1213c:	str	w8, [x22, #24]
   12140:	b.cs	14654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ad0>  // b.hs, b.nlast
   12144:	ldr	x9, [x22, #16]
   12148:	mov	w10, #0x7                   	// #7
   1214c:	mov	w11, #0x2                   	// #2
   12150:	add	x8, x9, w8, uxtw #4
   12154:	str	x10, [x8]
   12158:	strb	w11, [x8, #8]
   1215c:	ldur	w9, [sp, #115]
   12160:	ldr	w10, [sp, #112]
   12164:	str	w9, [x8, #12]
   12168:	stur	w10, [x8, #9]
   1216c:	ldp	w8, w9, [x22, #24]
   12170:	cmp	w8, w9
   12174:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12178:	add	w8, w8, #0x1
   1217c:	str	w8, [x22, #24]
   12180:	ldr	x24, [x27]
   12184:	mov	x1, x23
   12188:	mov	x25, x21
   1218c:	mov	x21, x26
   12190:	mov	x0, x24
   12194:	stp	x23, x22, [x29, #-64]
   12198:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1219c:	ldp	x1, x8, [x24, #32]
   121a0:	add	x23, x24, #0x18
   121a4:	cmp	x1, x8
   121a8:	b.eq	121d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x654>  // b.none
   121ac:	str	xzr, [x1, #8]
   121b0:	ldur	q0, [x29, #-64]
   121b4:	add	x26, x1, #0x10
   121b8:	stur	xzr, [x29, #-56]
   121bc:	str	q0, [x1]
   121c0:	stur	xzr, [x29, #-64]
   121c4:	str	x26, [x24, #32]
   121c8:	ldur	x22, [x29, #-56]
   121cc:	ldr	x27, [x23]
   121d0:	cbnz	x22, 121f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x670>
   121d4:	b	12284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x700>
   121d8:	sub	x2, x29, #0x40
   121dc:	mov	x0, x23
   121e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   121e4:	ldr	x26, [x24, #32]
   121e8:	ldur	x22, [x29, #-56]
   121ec:	ldr	x27, [x23]
   121f0:	cbz	x22, 12284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x700>
   121f4:	add	x8, x22, #0x8
   121f8:	cbz	x25, 12218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x694>
   121fc:	ldaxr	w9, [x8]
   12200:	sub	w10, w9, #0x1
   12204:	stlxr	w11, w10, [x8]
   12208:	cbnz	w11, 121fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x678>
   1220c:	cmp	w9, #0x1
   12210:	b.eq	1222c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6a8>  // b.none
   12214:	b	12284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x700>
   12218:	ldr	w9, [x8]
   1221c:	sub	w10, w9, #0x1
   12220:	str	w10, [x8]
   12224:	cmp	w9, #0x1
   12228:	b.ne	12284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x700>  // b.any
   1222c:	mov	x23, x19
   12230:	mov	x19, x22
   12234:	ldr	x8, [x19], #12
   12238:	mov	x0, x22
   1223c:	ldr	x8, [x8, #16]
   12240:	blr	x8
   12244:	cbz	x25, 1225c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6d8>
   12248:	ldaxr	w8, [x19]
   1224c:	sub	w9, w8, #0x1
   12250:	stlxr	w10, w9, [x19]
   12254:	cbnz	w10, 12248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6c4>
   12258:	b	12268 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6e4>
   1225c:	ldr	w8, [x19]
   12260:	sub	w9, w8, #0x1
   12264:	str	w9, [x19]
   12268:	cmp	w8, #0x1
   1226c:	mov	x19, x23
   12270:	b.ne	12284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x700>  // b.any
   12274:	ldr	x8, [x22]
   12278:	mov	x0, x22
   1227c:	ldr	x8, [x8, #24]
   12280:	blr	x8
   12284:	mov	w0, #0x220                 	// #544
   12288:	bl	0 <_Znwm>
   1228c:	movi	v0.2s, #0x1
   12290:	add	x8, x21, #0x10
   12294:	str	d0, [x0, #8]
   12298:	movi	v0.2d, #0x0
   1229c:	mov	x24, x0
   122a0:	mov	x23, x0
   122a4:	mov	w9, #0x9                   	// #9
   122a8:	str	x8, [x0]
   122ac:	stp	q0, q0, [x0, #48]
   122b0:	stp	q0, q0, [x0, #80]
   122b4:	stp	q0, q0, [x0, #112]
   122b8:	stp	q0, q0, [x0, #144]
   122bc:	stp	q0, q0, [x0, #176]
   122c0:	stp	q0, q0, [x0, #208]
   122c4:	stp	q0, q0, [x0, #240]
   122c8:	stp	q0, q0, [x0, #272]
   122cc:	stp	q0, q0, [x0, #304]
   122d0:	stp	q0, q0, [x0, #336]
   122d4:	stp	q0, q0, [x0, #368]
   122d8:	stp	q0, q0, [x0, #400]
   122dc:	stp	q0, q0, [x0, #432]
   122e0:	stp	q0, q0, [x0, #464]
   122e4:	stp	q0, q0, [x0, #496]
   122e8:	str	q0, [x24, #32]!
   122ec:	str	q0, [x0, #528]
   122f0:	str	x24, [x23, #16]!
   122f4:	str	d8, [x0, #24]
   122f8:	str	x9, [x24]
   122fc:	ldp	w8, w9, [x0, #24]
   12300:	ldur	w11, [sp, #115]
   12304:	ldr	w12, [sp, #112]
   12308:	mov	w10, #0xff                  	// #255
   1230c:	cmp	w8, w9
   12310:	strb	w10, [x0, #40]
   12314:	str	w11, [x0, #44]
   12318:	stur	w12, [x0, #41]
   1231c:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12320:	add	w8, w8, #0x1
   12324:	mov	x22, x0
   12328:	cmp	w8, w9
   1232c:	str	w8, [x0, #24]
   12330:	b.cs	14670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2aec>  // b.hs, b.nlast
   12334:	ldr	x9, [x22, #16]
   12338:	mov	w10, #0x6                   	// #6
   1233c:	add	x8, x9, w8, uxtw #4
   12340:	str	xzr, [x8]
   12344:	strb	w10, [x8, #8]
   12348:	ldur	w9, [sp, #115]
   1234c:	ldr	w10, [sp, #112]
   12350:	str	w9, [x8, #12]
   12354:	stur	w10, [x8, #9]
   12358:	ldp	w8, w9, [x22, #24]
   1235c:	cmp	w8, w9
   12360:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12364:	add	w8, w8, #0x1
   12368:	cmp	w8, w9
   1236c:	str	w8, [x22, #24]
   12370:	b.cs	1468c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b08>  // b.hs, b.nlast
   12374:	ldr	x9, [x22, #16]
   12378:	mov	w10, #0x8                   	// #8
   1237c:	add	x8, x9, w8, uxtw #4
   12380:	str	xzr, [x8]
   12384:	strb	w10, [x8, #8]
   12388:	ldur	w9, [sp, #115]
   1238c:	ldr	w10, [sp, #112]
   12390:	str	w9, [x8, #12]
   12394:	stur	w10, [x8, #9]
   12398:	ldp	w8, w9, [x22, #24]
   1239c:	cmp	w8, w9
   123a0:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   123a4:	ldp	x11, x10, [sp, #48]
   123a8:	add	w8, w8, #0x1
   123ac:	str	w8, [x22, #24]
   123b0:	sub	x9, x19, x28
   123b4:	sub	x10, x10, x11
   123b8:	sub	x11, x26, x27
   123bc:	ldr	x27, [x29, #8]
   123c0:	lsr	x9, x9, #4
   123c4:	lsr	x10, x10, #4
   123c8:	add	w8, w9, #0x3
   123cc:	ldr	x24, [x27]
   123d0:	lsr	x11, x11, #4
   123d4:	str	w8, [sp, #28]
   123d8:	add	w8, w10, #0x3
   123dc:	str	w8, [sp, #20]
   123e0:	add	w8, w11, #0x3
   123e4:	mov	x0, x24
   123e8:	mov	x1, x23
   123ec:	str	w8, [sp, #24]
   123f0:	stp	x23, x22, [x29, #-80]
   123f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   123f8:	ldp	x1, x8, [x24, #32]
   123fc:	add	x22, x24, #0x18
   12400:	cmp	x1, x8
   12404:	b.eq	12428 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8a4>  // b.none
   12408:	str	xzr, [x1, #8]
   1240c:	ldur	q0, [x29, #-80]
   12410:	add	x8, x1, #0x10
   12414:	stur	xzr, [x29, #-72]
   12418:	str	q0, [x1]
   1241c:	stur	xzr, [x29, #-80]
   12420:	str	x8, [x24, #32]
   12424:	b	12438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8b4>
   12428:	sub	x2, x29, #0x50
   1242c:	mov	x0, x22
   12430:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12434:	ldr	x8, [x24, #32]
   12438:	ldr	x9, [x22]
   1243c:	ldur	x22, [x29, #-72]
   12440:	sub	x8, x8, x9
   12444:	lsr	x8, x8, #4
   12448:	add	w8, w8, #0x3
   1244c:	str	w8, [sp, #16]
   12450:	cbz	x22, 124dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x958>
   12454:	add	x8, x22, #0x8
   12458:	cbz	x25, 12478 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8f4>
   1245c:	ldaxr	w9, [x8]
   12460:	sub	w10, w9, #0x1
   12464:	stlxr	w11, w10, [x8]
   12468:	cbnz	w11, 1245c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8d8>
   1246c:	cmp	w9, #0x1
   12470:	b.eq	1248c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x908>  // b.none
   12474:	b	124dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x958>
   12478:	ldr	w9, [x8]
   1247c:	sub	w10, w9, #0x1
   12480:	str	w10, [x8]
   12484:	cmp	w9, #0x1
   12488:	b.ne	124dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x958>  // b.any
   1248c:	mov	x19, x22
   12490:	ldr	x8, [x19], #12
   12494:	mov	x0, x22
   12498:	ldr	x8, [x8, #16]
   1249c:	blr	x8
   124a0:	cbz	x25, 124b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x934>
   124a4:	ldaxr	w8, [x19]
   124a8:	sub	w9, w8, #0x1
   124ac:	stlxr	w10, w9, [x19]
   124b0:	cbnz	w10, 124a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x920>
   124b4:	b	124c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x940>
   124b8:	ldr	w8, [x19]
   124bc:	sub	w9, w8, #0x1
   124c0:	str	w9, [x19]
   124c4:	cmp	w8, #0x1
   124c8:	b.ne	124dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x958>  // b.any
   124cc:	ldr	x8, [x22]
   124d0:	mov	x0, x22
   124d4:	ldr	x8, [x8, #24]
   124d8:	blr	x8
   124dc:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   124e0:	ldr	d0, [x9]
   124e4:	ldr	w22, [sp, #44]
   124e8:	add	x10, x27, #0x18
   124ec:	add	x8, sp, #0x70
   124f0:	str	x10, [sp, #48]
   124f4:	add	x10, sp, #0x40
   124f8:	mov	x26, xzr
   124fc:	add	x8, x8, #0x10
   12500:	add	x9, x10, #0x8
   12504:	str	x9, [sp, #32]
   12508:	str	x8, [sp, #56]
   1250c:	str	x8, [sp, #112]
   12510:	str	d0, [sp, #120]
   12514:	b	1254c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9c8>
   12518:	mov	x21, x26
   1251c:	mov	w3, wzr
   12520:	mov	w26, #0x2                   	// #2
   12524:	ldr	x27, [x29, #8]
   12528:	add	x2, sp, #0x70
   1252c:	mov	w1, w26
   12530:	ldr	x0, [x27]
   12534:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12538:	mov	x26, x21
   1253c:	add	w20, w20, #0x1
   12540:	cmp	w20, w22
   12544:	str	wzr, [sp, #120]
   12548:	b.eq	14584 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a00>  // b.none
   1254c:	ldr	x8, [x27, #136]
   12550:	mov	w9, w20
   12554:	lsl	x9, x9, #4
   12558:	ldr	x25, [x8, x9]
   1255c:	ldr	x24, [x25]
   12560:	cmp	x24, x26
   12564:	b.eq	12630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xaac>  // b.none
   12568:	ldr	w8, [x27, #72]
   1256c:	ldr	x9, [x27, #56]
   12570:	cbz	w8, 125cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa48>
   12574:	orr	x10, x24, #0x8
   12578:	cmn	x10, #0x8
   1257c:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   12580:	ubfx	x10, x24, #4, #28
   12584:	eor	w11, w10, w24, lsr #9
   12588:	sub	w10, w8, #0x1
   1258c:	and	w11, w10, w11
   12590:	add	x12, x9, w11, uxtw #4
   12594:	ldr	x13, [x12]
   12598:	cmp	x13, x24
   1259c:	b.eq	125d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa4c>  // b.none
   125a0:	mov	w14, #0x1                   	// #1
   125a4:	cmn	x13, #0x8
   125a8:	b.eq	125cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa48>  // b.none
   125ac:	add	w11, w11, w14
   125b0:	and	w11, w11, w10
   125b4:	add	x12, x9, w11, uxtw #4
   125b8:	ldr	x13, [x12]
   125bc:	add	w14, w14, #0x1
   125c0:	cmp	x13, x24
   125c4:	b.eq	125d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa4c>  // b.none
   125c8:	b	125a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa20>
   125cc:	add	x12, x9, x8, lsl #4
   125d0:	add	x8, x9, x8, lsl #4
   125d4:	cmp	x12, x8
   125d8:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   125dc:	ldr	w8, [x12, #8]
   125e0:	ldr	w9, [sp, #124]
   125e4:	sub	w19, w8, #0x1
   125e8:	cbz	w9, 13d90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x220c>
   125ec:	mov	w8, wzr
   125f0:	ldr	x9, [sp, #112]
   125f4:	str	x19, [x9, w8, uxtw #3]
   125f8:	ldp	w8, w9, [sp, #120]
   125fc:	cmp	w8, w9
   12600:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12604:	add	x3, x8, #0x1
   12608:	str	w3, [sp, #120]
   1260c:	ldr	x0, [x27]
   12610:	ldr	x2, [sp, #112]
   12614:	mov	w1, #0x4                   	// #4
   12618:	mov	x6, #0x100000001           	// #4294967297
   1261c:	mov	x4, xzr
   12620:	mov	x5, xzr
   12624:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12628:	mov	x26, x24
   1262c:	str	wzr, [sp, #120]
   12630:	cbz	x25, 146c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b44>
   12634:	ldrb	w8, [x25, #16]
   12638:	cmp	w8, #0x14
   1263c:	b.ne	12718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xb94>  // b.any
   12640:	ldrb	w8, [x25, #96]
   12644:	ldrb	w9, [x25, #97]
   12648:	ldr	w10, [x25, #100]
   1264c:	ldr	w11, [sp, #124]
   12650:	orr	x8, x8, x9, lsl #1
   12654:	lsl	w9, w10, #2
   12658:	and	x9, x9, #0x4
   1265c:	orr	x19, x8, x9
   12660:	cbz	w11, 1406c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24e8>
   12664:	mov	w8, wzr
   12668:	ldr	x9, [sp, #112]
   1266c:	str	x19, [x9, w8, uxtw #3]
   12670:	ldp	w8, w9, [sp, #120]
   12674:	cmp	w8, w9
   12678:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   1267c:	add	w8, w8, #0x1
   12680:	str	w8, [sp, #120]
   12684:	ldr	x19, [x25, #32]
   12688:	cmp	w8, w9
   1268c:	b.cs	14088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2504>  // b.hs, b.nlast
   12690:	ldr	x9, [sp, #112]
   12694:	str	x19, [x9, w8, uxtw #3]
   12698:	ldp	w9, w8, [sp, #120]
   1269c:	cmp	w9, w8
   126a0:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   126a4:	add	x9, x9, #0x1
   126a8:	str	w9, [sp, #120]
   126ac:	ldp	x23, x19, [x25, #24]
   126b0:	sub	x8, x8, x9
   126b4:	cmp	x19, x8
   126b8:	b.ls	126d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xb4c>  // b.plast
   126bc:	ldr	x1, [sp, #56]
   126c0:	add	x2, x19, x9
   126c4:	add	x0, sp, #0x70
   126c8:	mov	w3, #0x8                   	// #8
   126cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   126d0:	cmp	x19, #0x0
   126d4:	b.le	127a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc1c>
   126d8:	ldr	x9, [sp, #112]
   126dc:	ldr	w8, [sp, #120]
   126e0:	add	x10, x23, x19
   126e4:	sub	x10, x10, x23
   126e8:	add	x10, x10, #0x1
   126ec:	add	x9, x9, x8, lsl #3
   126f0:	ldrb	w11, [x23], #1
   126f4:	sub	x10, x10, #0x1
   126f8:	cmp	x10, #0x1
   126fc:	str	x11, [x9], #8
   12700:	b.gt	126f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xb6c>
   12704:	ldr	w9, [sp, #124]
   12708:	add	x8, x8, x19
   1270c:	cmp	x8, x9
   12710:	b.ls	127b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc2c>  // b.plast
   12714:	b	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>
   12718:	cmp	w8, #0x11
   1271c:	b.cs	14728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ba4>  // b.hs, b.nlast
   12720:	mov	x0, x25
   12724:	bl	0 <_ZNK4llvm8Constant11isNullValueEv>
   12728:	tbnz	w0, #0, 12518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x994>
   1272c:	ldrb	w8, [x25, #16]
   12730:	cmp	w8, #0x9
   12734:	b.eq	128c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd40>  // b.none
   12738:	cmp	w8, #0xe
   1273c:	b.eq	12884 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd00>  // b.none
   12740:	cmp	w8, #0xd
   12744:	b.ne	128d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd50>  // b.any
   12748:	ldr	w19, [x25, #32]
   1274c:	add	x24, x25, #0x18
   12750:	cmp	w19, #0x40
   12754:	b.hi	12a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xe8c>  // b.pmore
   12758:	mov	x0, x24
   1275c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12760:	lsl	x19, x0, #1
   12764:	tbnz	x0, #63, 12c14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1090>
   12768:	ldp	w8, w9, [sp, #120]
   1276c:	cmp	w8, w9
   12770:	b.cs	12c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10a4>  // b.hs, b.nlast
   12774:	ldr	x9, [sp, #112]
   12778:	str	x19, [x9, w8, uxtw #3]
   1277c:	ldp	w8, w9, [sp, #120]
   12780:	cmp	w8, w9
   12784:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12788:	add	w8, w8, #0x1
   1278c:	mov	x21, x26
   12790:	mov	w26, #0x4                   	// #4
   12794:	str	w8, [sp, #120]
   12798:	mov	w3, #0x5                   	// #5
   1279c:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   127a0:	ldp	w8, w9, [sp, #120]
   127a4:	add	x8, x8, x19
   127a8:	cmp	x8, x9
   127ac:	b.hi	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.pmore
   127b0:	str	w8, [sp, #120]
   127b4:	ldr	x19, [x25, #64]
   127b8:	cmp	w9, w8
   127bc:	b.ls	140a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2520>  // b.plast
   127c0:	ldr	x9, [sp, #112]
   127c4:	str	x19, [x9, w8, uxtw #3]
   127c8:	ldp	w9, w8, [sp, #120]
   127cc:	cmp	w9, w8
   127d0:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   127d4:	add	x9, x9, #0x1
   127d8:	str	w9, [sp, #120]
   127dc:	ldp	x23, x19, [x25, #56]
   127e0:	sub	x8, x8, x9
   127e4:	cmp	x19, x8
   127e8:	b.ls	12800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc7c>  // b.plast
   127ec:	ldr	x1, [sp, #56]
   127f0:	add	x2, x19, x9
   127f4:	add	x0, sp, #0x70
   127f8:	mov	w3, #0x8                   	// #8
   127fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12800:	cmp	x19, #0x0
   12804:	b.le	12848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xcc4>
   12808:	ldr	x9, [sp, #112]
   1280c:	ldr	w8, [sp, #120]
   12810:	add	x10, x23, x19
   12814:	sub	x10, x10, x23
   12818:	add	x10, x10, #0x1
   1281c:	add	x9, x9, x8, lsl #3
   12820:	ldrb	w11, [x23], #1
   12824:	sub	x10, x10, #0x1
   12828:	cmp	x10, #0x1
   1282c:	str	x11, [x9], #8
   12830:	b.gt	12820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc9c>
   12834:	ldr	w9, [sp, #124]
   12838:	add	x8, x8, x19
   1283c:	cmp	x8, x9
   12840:	b.ls	12858 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xcd4>  // b.plast
   12844:	b	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>
   12848:	ldp	w8, w9, [sp, #120]
   1284c:	add	x8, x8, x19
   12850:	cmp	x8, x9
   12854:	b.hi	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.pmore
   12858:	str	w8, [sp, #120]
   1285c:	ldr	x0, [x27]
   12860:	add	x2, sp, #0x70
   12864:	mov	w1, #0x17                  	// #23
   12868:	mov	w3, wzr
   1286c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12870:	add	w20, w20, #0x1
   12874:	cmp	w20, w22
   12878:	str	wzr, [sp, #120]
   1287c:	b.ne	1254c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9c8>  // b.any
   12880:	b	14584 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a00>
   12884:	ldr	x8, [x25]
   12888:	ldrb	w8, [x8, #8]
   1288c:	sub	w9, w8, #0x1
   12890:	cmp	w9, #0x3
   12894:	b.cc	12aa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf20>  // b.lo, b.ul, b.last
   12898:	sub	w9, w8, #0x5
   1289c:	cmp	w9, #0x2
   128a0:	b.cs	12c9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1118>  // b.hs, b.nlast
   128a4:	ldr	x19, [x25, #32]!
   128a8:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   128ac:	add	x8, sp, #0x40
   128b0:	cmp	x0, x19
   128b4:	b.eq	12d5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11d8>  // b.none
   128b8:	mov	x0, x25
   128bc:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   128c0:	b	12d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11e0>
   128c4:	mov	x21, x26
   128c8:	mov	w3, wzr
   128cc:	mov	w26, #0x3                   	// #3
   128d0:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   128d4:	ldr	x21, [x29, #8]
   128d8:	sub	w9, w8, #0xb
   128dc:	cmp	w9, #0x1
   128e0:	b.hi	12b14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf90>  // b.pmore
   128e4:	mov	w1, #0x8                   	// #8
   128e8:	mov	x0, x25
   128ec:	bl	0 <_ZNK4llvm22ConstantDataSequential8isStringEj>
   128f0:	ldrb	w8, [x25, #16]
   128f4:	sub	w9, w8, #0xb
   128f8:	tbz	w0, #0, 12b08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf84>
   128fc:	and	w8, w9, #0xff
   12900:	cmp	w8, #0x2
   12904:	b.cs	14748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2bc4>  // b.hs, b.nlast
   12908:	mov	x0, x25
   1290c:	mov	x21, x26
   12910:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
   12914:	mov	w24, w0
   12918:	mov	x0, x25
   1291c:	bl	0 <_ZNK4llvm22ConstantDataSequential9isCStringEv>
   12920:	and	w8, w0, #0x1
   12924:	sub	w19, w24, w8
   12928:	ldr	w8, [sp, #20]
   1292c:	tst	w0, #0x1
   12930:	mov	w27, w0
   12934:	csel	w8, wzr, w8, ne  // ne = any
   12938:	str	w8, [sp, #12]
   1293c:	mov	w8, #0x8                   	// #8
   12940:	cinc	w26, w8, ne  // ne = any
   12944:	cbz	w19, 12ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1324>
   12948:	mov	w28, wzr
   1294c:	mov	w23, w27
   12950:	b	12964 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xde0>
   12954:	mov	w27, wzr
   12958:	add	w28, w28, #0x1
   1295c:	cmp	w19, w28
   12960:	b.eq	12eac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1328>  // b.none
   12964:	mov	x0, x25
   12968:	mov	w1, w28
   1296c:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
   12970:	ldp	w8, w9, [sp, #120]
   12974:	mov	x24, x0
   12978:	and	x22, x0, #0xff
   1297c:	cmp	w8, w9
   12980:	b.cs	129f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xe70>  // b.hs, b.nlast
   12984:	ldr	x9, [sp, #112]
   12988:	str	x22, [x9, w8, uxtw #3]
   1298c:	ldp	w8, w9, [sp, #120]
   12990:	cmp	w8, w9
   12994:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12998:	ldr	w22, [sp, #44]
   1299c:	bic	w9, w23, w24, lsr #7
   129a0:	add	w8, w8, #0x1
   129a4:	and	w23, w9, #0x1
   129a8:	str	w8, [sp, #120]
   129ac:	tbz	w27, #0, 12954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xdd0>
   129b0:	sub	w8, w24, #0x30
   129b4:	and	w8, w8, #0xff
   129b8:	cmp	w8, #0xa
   129bc:	mov	w27, #0x1                   	// #1
   129c0:	b.cc	12958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xdd4>  // b.lo, b.ul, b.last
   129c4:	and	w8, w24, #0xffffffdf
   129c8:	sub	w8, w8, #0x41
   129cc:	and	w8, w8, #0xff
   129d0:	cmp	w8, #0x1a
   129d4:	b.cc	12958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xdd4>  // b.lo, b.ul, b.last
   129d8:	and	w8, w24, #0xff
   129dc:	cmp	w8, #0x2e
   129e0:	mov	w27, #0x1                   	// #1
   129e4:	b.eq	12958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xdd4>  // b.none
   129e8:	cmp	w8, #0x5f
   129ec:	b.eq	12958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xdd4>  // b.none
   129f0:	b	12954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xdd0>
   129f4:	ldr	x1, [sp, #56]
   129f8:	add	x0, sp, #0x70
   129fc:	mov	w3, #0x8                   	// #8
   12a00:	mov	x2, xzr
   12a04:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12a08:	ldr	w8, [sp, #120]
   12a0c:	b	12984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xe00>
   12a10:	mov	x0, x24
   12a14:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   12a18:	subs	w8, w19, w0
   12a1c:	ldr	x19, [x24]
   12a20:	sub	w8, w8, #0x1
   12a24:	lsr	w8, w8, #6
   12a28:	mov	w9, #0x1                   	// #1
   12a2c:	csinc	w23, w9, w8, eq  // eq = none
   12a30:	ldr	x8, [x19]
   12a34:	lsl	x24, x8, #1
   12a38:	tbnz	x8, #63, 12a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xef0>
   12a3c:	ldp	w8, w9, [sp, #120]
   12a40:	cmp	w8, w9
   12a44:	b.cs	12a88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf04>  // b.hs, b.nlast
   12a48:	ldr	x9, [sp, #112]
   12a4c:	str	x24, [x9, w8, uxtw #3]
   12a50:	ldp	w8, w9, [sp, #120]
   12a54:	cmp	w8, w9
   12a58:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12a5c:	add	w8, w8, #0x1
   12a60:	subs	w23, w23, #0x1
   12a64:	add	x19, x19, #0x8
   12a68:	str	w8, [sp, #120]
   12a6c:	b.ne	12a30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xeac>  // b.any
   12a70:	b	12af8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf74>
   12a74:	ldp	w8, w9, [sp, #120]
   12a78:	neg	x10, x24
   12a7c:	orr	x24, x10, #0x1
   12a80:	cmp	w8, w9
   12a84:	b.cc	12a48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xec4>  // b.lo, b.ul, b.last
   12a88:	ldr	x1, [sp, #56]
   12a8c:	add	x0, sp, #0x70
   12a90:	mov	w3, #0x8                   	// #8
   12a94:	mov	x2, xzr
   12a98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12a9c:	ldr	w8, [sp, #120]
   12aa0:	b	12a48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xec4>
   12aa4:	ldr	x19, [x25, #32]!
   12aa8:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   12aac:	add	x8, sp, #0x40
   12ab0:	cmp	x0, x19
   12ab4:	b.eq	12c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10c0>  // b.none
   12ab8:	mov	x0, x25
   12abc:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   12ac0:	ldr	w19, [sp, #72]
   12ac4:	cmp	w19, #0x41
   12ac8:	b.cs	12c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10d4>  // b.hs, b.nlast
   12acc:	add	x9, sp, #0x40
   12ad0:	ldp	w8, w10, [sp, #120]
   12ad4:	ldr	x19, [x9]
   12ad8:	cmp	w8, w10
   12adc:	b.cs	12c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10fc>  // b.hs, b.nlast
   12ae0:	ldr	x9, [sp, #112]
   12ae4:	str	x19, [x9, w8, uxtw #3]
   12ae8:	ldp	w8, w9, [sp, #120]
   12aec:	cmp	w8, w9
   12af0:	b.cc	12dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1240>  // b.lo, b.ul, b.last
   12af4:	b	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>
   12af8:	mov	x21, x26
   12afc:	mov	w3, wzr
   12b00:	mov	w26, #0x5                   	// #5
   12b04:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   12b08:	and	w9, w9, #0xff
   12b0c:	cmp	w9, #0x1
   12b10:	b.ls	12df4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1270>  // b.plast
   12b14:	sub	w9, w8, #0x6
   12b18:	cmp	w9, #0x2
   12b1c:	b.hi	12bb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x102c>  // b.pmore
   12b20:	ldr	w8, [x25, #20]
   12b24:	tbnz	w8, #30, 12cc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1140>
   12b28:	and	w8, w8, #0xfffffff
   12b2c:	mov	w9, #0x18                  	// #24
   12b30:	mneg	x9, x8, x9
   12b34:	add	x19, x25, x9
   12b38:	mov	x21, x26
   12b3c:	cbz	x8, 12cd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1150>
   12b40:	add	x8, x8, x8, lsl #1
   12b44:	lsl	x23, x8, #3
   12b48:	ldr	x1, [x19]
   12b4c:	ldr	x0, [sp, #48]
   12b50:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   12b54:	ldp	w8, w9, [sp, #120]
   12b58:	mov	w22, w0
   12b5c:	cmp	w8, w9
   12b60:	b.cs	12b94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1010>  // b.hs, b.nlast
   12b64:	ldr	x9, [sp, #112]
   12b68:	str	x22, [x9, w8, uxtw #3]
   12b6c:	ldp	w8, w9, [sp, #120]
   12b70:	cmp	w8, w9
   12b74:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12b78:	add	w8, w8, #0x1
   12b7c:	add	x19, x19, #0x18
   12b80:	subs	x23, x23, #0x18
   12b84:	mov	w26, #0x7                   	// #7
   12b88:	str	w8, [sp, #120]
   12b8c:	b.ne	12b48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xfc4>  // b.any
   12b90:	b	12c08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1084>
   12b94:	ldr	x1, [sp, #56]
   12b98:	add	x0, sp, #0x70
   12b9c:	mov	w3, #0x8                   	// #8
   12ba0:	mov	x2, xzr
   12ba4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12ba8:	ldr	w8, [sp, #120]
   12bac:	b	12b64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xfe0>
   12bb0:	cmp	w8, #0x4
   12bb4:	b.eq	12ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x115c>  // b.none
   12bb8:	cmp	w8, #0x5
   12bbc:	b.ne	14768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2be4>  // b.any
   12bc0:	ldrh	w8, [x25, #18]
   12bc4:	sub	w9, w8, #0xc
   12bc8:	cmp	w9, #0x33
   12bcc:	b.hi	13150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x15cc>  // b.pmore
   12bd0:	adrp	x12, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12bd4:	add	x12, x12, #0x0
   12bd8:	adr	x10, 12be8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1064>
   12bdc:	ldrh	w11, [x12, x9, lsl #1]
   12be0:	add	x10, x10, x11, lsl #2
   12be4:	br	x10
   12be8:	ldr	w9, [x25, #20]
   12bec:	and	x8, x9, #0xfffffff
   12bf0:	cbz	w8, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   12bf4:	tbnz	w9, #30, 132a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x171c>
   12bf8:	mov	w9, #0x18                  	// #24
   12bfc:	mneg	x8, x8, x9
   12c00:	add	x10, x25, x8
   12c04:	b	132a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1720>
   12c08:	ldr	w3, [sp, #28]
   12c0c:	ldr	w22, [sp, #44]
   12c10:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   12c14:	ldp	w8, w9, [sp, #120]
   12c18:	neg	x10, x19
   12c1c:	orr	x19, x10, #0x1
   12c20:	cmp	w8, w9
   12c24:	b.cc	12774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xbf0>  // b.lo, b.ul, b.last
   12c28:	ldr	x1, [sp, #56]
   12c2c:	add	x0, sp, #0x70
   12c30:	mov	w3, #0x8                   	// #8
   12c34:	mov	x2, xzr
   12c38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12c3c:	ldr	w8, [sp, #120]
   12c40:	b	12774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xbf0>
   12c44:	mov	x0, x25
   12c48:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   12c4c:	ldr	w19, [sp, #72]
   12c50:	cmp	w19, #0x41
   12c54:	b.cc	12acc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf48>  // b.lo, b.ul, b.last
   12c58:	add	x0, sp, #0x40
   12c5c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   12c60:	sub	w8, w19, w0
   12c64:	cmp	w8, #0x41
   12c68:	b.cs	14788 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c04>  // b.hs, b.nlast
   12c6c:	ldr	x9, [sp, #64]
   12c70:	ldp	w8, w10, [sp, #120]
   12c74:	ldr	x19, [x9]
   12c78:	cmp	w8, w10
   12c7c:	b.cc	12ae0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf5c>  // b.lo, b.ul, b.last
   12c80:	ldr	x1, [sp, #56]
   12c84:	add	x0, sp, #0x70
   12c88:	mov	w3, #0x8                   	// #8
   12c8c:	mov	x2, xzr
   12c90:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12c94:	ldr	w8, [sp, #120]
   12c98:	b	12ae0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf5c>
   12c9c:	cmp	w8, #0x4
   12ca0:	b.ne	147a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c24>  // b.any
   12ca4:	ldr	x19, [x25, #32]!
   12ca8:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   12cac:	add	x8, sp, #0x40
   12cb0:	cmp	x0, x19
   12cb4:	b.eq	12ecc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1348>  // b.none
   12cb8:	mov	x0, x25
   12cbc:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   12cc0:	b	12ed4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1350>
   12cc4:	ldur	x19, [x25, #-8]
   12cc8:	and	x8, x8, #0xfffffff
   12ccc:	mov	x21, x26
   12cd0:	cbnz	x8, 12b40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xfbc>
   12cd4:	ldr	w3, [sp, #28]
   12cd8:	mov	w26, #0x7                   	// #7
   12cdc:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   12ce0:	ldur	x8, [x25, #-48]
   12ce4:	ldr	x8, [x8]
   12ce8:	cbz	x8, 147c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c44>
   12cec:	ldrb	w9, [x8, #8]
   12cf0:	cmp	w9, #0xf
   12cf4:	b.ne	147e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c64>  // b.any
   12cf8:	ldr	w9, [x21, #72]
   12cfc:	ldr	x10, [x21, #56]
   12d00:	cbz	w9, 1302c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x14a8>
   12d04:	orr	x11, x8, #0x8
   12d08:	cmn	x11, #0x8
   12d0c:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   12d10:	ubfx	x11, x8, #4, #28
   12d14:	eor	w12, w11, w8, lsr #9
   12d18:	sub	w11, w9, #0x1
   12d1c:	and	w12, w11, w12
   12d20:	add	x13, x10, w12, uxtw #4
   12d24:	ldr	x14, [x13]
   12d28:	cmp	x14, x8
   12d2c:	b.eq	13030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x14ac>  // b.none
   12d30:	mov	w15, #0x1                   	// #1
   12d34:	cmn	x14, #0x8
   12d38:	b.eq	1302c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x14a8>  // b.none
   12d3c:	add	w12, w12, w15
   12d40:	and	w12, w12, w11
   12d44:	add	x13, x10, w12, uxtw #4
   12d48:	ldr	x14, [x13]
   12d4c:	add	w15, w15, #0x1
   12d50:	cmp	x14, x8
   12d54:	b.eq	13030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x14ac>  // b.none
   12d58:	b	12d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11b0>
   12d5c:	mov	x0, x25
   12d60:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   12d64:	ldr	w9, [sp, #72]
   12d68:	ldr	x10, [sp, #64]
   12d6c:	ldp	w8, w11, [sp, #120]
   12d70:	cmp	w9, #0x41
   12d74:	add	x9, sp, #0x40
   12d78:	csel	x19, x9, x10, cc  // cc = lo, ul, last
   12d7c:	cmp	w8, w11
   12d80:	b.cs	14178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x25f4>  // b.hs, b.nlast
   12d84:	ldr	x9, [sp, #112]
   12d88:	ldr	x10, [x19]
   12d8c:	str	x10, [x9, w8, uxtw #3]
   12d90:	ldp	w8, w9, [sp, #120]
   12d94:	cmp	w8, w9
   12d98:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12d9c:	add	w8, w8, #0x1
   12da0:	cmp	w8, w9
   12da4:	str	w8, [sp, #120]
   12da8:	b.cs	14194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2610>  // b.hs, b.nlast
   12dac:	ldr	x9, [sp, #112]
   12db0:	ldr	x10, [x19, #8]
   12db4:	str	x10, [x9, w8, uxtw #3]
   12db8:	ldp	w8, w9, [sp, #120]
   12dbc:	cmp	w8, w9
   12dc0:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12dc4:	ldr	w9, [sp, #72]
   12dc8:	mov	x21, x26
   12dcc:	add	w8, w8, #0x1
   12dd0:	str	w8, [sp, #120]
   12dd4:	cmp	w9, #0x41
   12dd8:	b.cc	12de8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1264>  // b.lo, b.ul, b.last
   12ddc:	ldr	x0, [sp, #64]
   12de0:	cbz	x0, 12de8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1264>
   12de4:	bl	0 <_ZdaPv>
   12de8:	mov	w3, wzr
   12dec:	mov	w26, #0x6                   	// #6
   12df0:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   12df4:	ldr	x8, [x25]
   12df8:	cbz	x8, 14808 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c84>
   12dfc:	ldrb	w9, [x8, #8]
   12e00:	cmp	w9, #0xe
   12e04:	b.eq	12e10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x128c>  // b.none
   12e08:	cmp	w9, #0x10
   12e0c:	b.ne	14828 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ca4>  // b.any
   12e10:	ldr	x8, [x8, #24]
   12e14:	cbz	x8, 14848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2cc4>
   12e18:	ldrb	w19, [x8, #8]
   12e1c:	mov	x0, x25
   12e20:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
   12e24:	cmp	w19, #0xb
   12e28:	mov	w27, w0
   12e2c:	mov	x21, x26
   12e30:	b.ne	12f2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13a8>  // b.any
   12e34:	cbz	w27, 130ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1568>
   12e38:	mov	w24, wzr
   12e3c:	mov	x0, x25
   12e40:	mov	w1, w24
   12e44:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
   12e48:	ldp	w8, w9, [sp, #120]
   12e4c:	mov	x26, x0
   12e50:	cmp	w8, w9
   12e54:	b.cs	12e8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1308>  // b.hs, b.nlast
   12e58:	ldr	x9, [sp, #112]
   12e5c:	str	x26, [x9, w8, uxtw #3]
   12e60:	ldp	w8, w9, [sp, #120]
   12e64:	cmp	w8, w9
   12e68:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12e6c:	add	w24, w24, #0x1
   12e70:	mov	w3, wzr
   12e74:	add	w8, w8, #0x1
   12e78:	cmp	w27, w24
   12e7c:	mov	w26, #0x16                  	// #22
   12e80:	str	w8, [sp, #120]
   12e84:	b.ne	12e3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x12b8>  // b.any
   12e88:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   12e8c:	ldr	x1, [sp, #56]
   12e90:	add	x0, sp, #0x70
   12e94:	mov	w3, #0x8                   	// #8
   12e98:	mov	x2, xzr
   12e9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12ea0:	ldr	w8, [sp, #120]
   12ea4:	b	12e58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x12d4>
   12ea8:	mov	w23, w27
   12eac:	ldr	w8, [sp, #24]
   12eb0:	ldr	w9, [sp, #12]
   12eb4:	tst	w23, #0x1
   12eb8:	csel	w8, w8, w9, ne  // ne = any
   12ebc:	ldr	w9, [sp, #16]
   12ec0:	tst	w27, #0x1
   12ec4:	csel	w3, w9, w8, ne  // ne = any
   12ec8:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   12ecc:	mov	x0, x25
   12ed0:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   12ed4:	ldr	w9, [sp, #72]
   12ed8:	ldr	x10, [sp, #64]
   12edc:	ldp	w8, w11, [sp, #120]
   12ee0:	cmp	w9, #0x41
   12ee4:	add	x9, sp, #0x40
   12ee8:	csel	x19, x9, x10, cc  // cc = lo, ul, last
   12eec:	ldp	x10, x9, [x19]
   12ef0:	cmp	w8, w11
   12ef4:	extr	x22, x9, x10, #16
   12ef8:	b.cs	141b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x262c>  // b.hs, b.nlast
   12efc:	ldr	x9, [sp, #112]
   12f00:	str	x22, [x9, w8, uxtw #3]
   12f04:	ldp	w8, w9, [sp, #120]
   12f08:	cmp	w8, w9
   12f0c:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12f10:	add	w8, w8, #0x1
   12f14:	str	w8, [sp, #120]
   12f18:	ldrh	w19, [x19]
   12f1c:	ldr	w22, [sp, #44]
   12f20:	cmp	w8, w9
   12f24:	b.cc	12ae0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf5c>  // b.lo, b.ul, b.last
   12f28:	b	12c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10fc>
   12f2c:	cbz	w27, 130ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1568>
   12f30:	mov	w28, wzr
   12f34:	b	12f54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13d0>
   12f38:	add	x0, sp, #0x40
   12f3c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12f40:	add	w28, w28, #0x1
   12f44:	mov	w3, wzr
   12f48:	cmp	w27, w28
   12f4c:	mov	w26, #0x16                  	// #22
   12f50:	b.eq	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>  // b.none
   12f54:	add	x8, sp, #0x40
   12f58:	mov	x0, x25
   12f5c:	mov	w1, w28
   12f60:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsAPFloatEj>
   12f64:	ldr	x19, [sp, #72]
   12f68:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   12f6c:	add	x8, sp, #0x60
   12f70:	cmp	x0, x19
   12f74:	b.eq	12f94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1410>  // b.none
   12f78:	ldr	x0, [sp, #32]
   12f7c:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   12f80:	ldr	w19, [sp, #104]
   12f84:	cmp	w19, #0x41
   12f88:	b.cs	12fa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1424>  // b.hs, b.nlast
   12f8c:	add	x8, sp, #0x60
   12f90:	b	12fc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1444>
   12f94:	ldr	x0, [sp, #32]
   12f98:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   12f9c:	ldr	w19, [sp, #104]
   12fa0:	cmp	w19, #0x41
   12fa4:	b.cc	12f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1408>  // b.lo, b.ul, b.last
   12fa8:	add	x0, sp, #0x60
   12fac:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   12fb0:	sub	w8, w19, w0
   12fb4:	cmp	w8, #0x40
   12fb8:	b.ls	12fc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1440>  // b.plast
   12fbc:	mov	x19, #0xffffffffffffffff    	// #-1
   12fc0:	b	12fcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1448>
   12fc4:	ldr	x8, [sp, #96]
   12fc8:	ldr	x19, [x8]
   12fcc:	ldp	w8, w9, [sp, #120]
   12fd0:	cmp	w8, w9
   12fd4:	b.cs	13010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x148c>  // b.hs, b.nlast
   12fd8:	ldr	x9, [sp, #112]
   12fdc:	str	x19, [x9, w8, uxtw #3]
   12fe0:	ldp	w8, w9, [sp, #120]
   12fe4:	cmp	w8, w9
   12fe8:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   12fec:	ldr	w9, [sp, #104]
   12ff0:	add	w8, w8, #0x1
   12ff4:	str	w8, [sp, #120]
   12ff8:	cmp	w9, #0x41
   12ffc:	b.cc	12f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13b4>  // b.lo, b.ul, b.last
   13000:	ldr	x0, [sp, #96]
   13004:	cbz	x0, 12f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13b4>
   13008:	bl	0 <_ZdaPv>
   1300c:	b	12f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13b4>
   13010:	ldr	x1, [sp, #56]
   13014:	add	x0, sp, #0x70
   13018:	mov	w3, #0x8                   	// #8
   1301c:	mov	x2, xzr
   13020:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13024:	ldr	w8, [sp, #120]
   13028:	b	12fd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1454>
   1302c:	add	x13, x10, x9, lsl #4
   13030:	add	x8, x10, x9, lsl #4
   13034:	cmp	x13, x8
   13038:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   1303c:	ldp	w8, w9, [sp, #120]
   13040:	ldr	w10, [x13, #8]
   13044:	cmp	w8, w9
   13048:	sub	w19, w10, #0x1
   1304c:	b.cs	141cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2648>  // b.hs, b.nlast
   13050:	ldr	x9, [sp, #112]
   13054:	str	x19, [x9, w8, uxtw #3]
   13058:	ldp	w8, w9, [sp, #120]
   1305c:	cmp	w8, w9
   13060:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13064:	add	w8, w8, #0x1
   13068:	str	w8, [sp, #120]
   1306c:	ldur	x1, [x25, #-48]
   13070:	ldr	x0, [sp, #48]
   13074:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13078:	ldp	w8, w9, [sp, #120]
   1307c:	mov	w19, w0
   13080:	cmp	w8, w9
   13084:	b.cs	141e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2664>  // b.hs, b.nlast
   13088:	ldr	x9, [sp, #112]
   1308c:	str	x19, [x9, w8, uxtw #3]
   13090:	ldp	w8, w9, [sp, #120]
   13094:	cmp	w8, w9
   13098:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   1309c:	add	w8, w8, #0x1
   130a0:	str	w8, [sp, #120]
   130a4:	ldur	x1, [x25, #-24]
   130a8:	ldr	x0, [sp, #48]
   130ac:	bl	0 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE>
   130b0:	ldp	w8, w9, [sp, #120]
   130b4:	mov	w19, w0
   130b8:	cmp	w8, w9
   130bc:	b.cs	14204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2680>  // b.hs, b.nlast
   130c0:	ldr	x9, [sp, #112]
   130c4:	str	x19, [x9, w8, uxtw #3]
   130c8:	ldp	w8, w9, [sp, #120]
   130cc:	cmp	w8, w9
   130d0:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   130d4:	mov	x21, x26
   130d8:	mov	w3, wzr
   130dc:	add	w8, w8, #0x1
   130e0:	mov	w26, #0x15                  	// #21
   130e4:	str	w8, [sp, #120]
   130e8:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   130ec:	mov	w3, wzr
   130f0:	mov	w26, #0x16                  	// #22
   130f4:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   130f8:	ldr	w8, [x25, #20]
   130fc:	and	w8, w8, #0xfffffff
   13100:	cmp	w8, #0x1
   13104:	b.ne	14868 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ce4>  // b.any
   13108:	ldp	w8, w9, [sp, #120]
   1310c:	cmp	w8, w9
   13110:	b.cs	14290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x270c>  // b.hs, b.nlast
   13114:	ldr	x9, [sp, #112]
   13118:	str	xzr, [x9, w8, uxtw #3]
   1311c:	ldp	w8, w9, [sp, #120]
   13120:	cmp	w8, w9
   13124:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13128:	add	w8, w8, #0x1
   1312c:	str	w8, [sp, #120]
   13130:	ldr	w9, [x25, #20]
   13134:	and	x8, x9, #0xfffffff
   13138:	cbz	w8, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   1313c:	tbnz	w9, #30, 13450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x18cc>
   13140:	mov	w9, #0x18                  	// #24
   13144:	mneg	x8, x8, x9
   13148:	add	x8, x25, x8
   1314c:	b	13454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x18d0>
   13150:	sub	w9, w8, #0x26
   13154:	cmp	w9, #0xc
   13158:	b.hi	134d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1950>  // b.pmore
   1315c:	cmp	w9, #0xd
   13160:	b.cs	14888 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d04>  // b.hs, b.nlast
   13164:	ldp	w8, w10, [sp, #120]
   13168:	and	x19, x9, #0xffff
   1316c:	cmp	w8, w10
   13170:	b.cs	144a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2920>  // b.hs, b.nlast
   13174:	ldr	x9, [sp, #112]
   13178:	str	x19, [x9, w8, uxtw #3]
   1317c:	ldp	w8, w9, [sp, #120]
   13180:	cmp	w8, w9
   13184:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13188:	add	w8, w8, #0x1
   1318c:	str	w8, [sp, #120]
   13190:	ldr	w11, [x25, #20]
   13194:	and	x10, x11, #0xfffffff
   13198:	cbz	w10, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   1319c:	tbnz	w11, #30, 13dac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2228>
   131a0:	mov	w11, #0x18                  	// #24
   131a4:	mneg	x10, x10, x11
   131a8:	add	x12, x25, x10
   131ac:	b	13db0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x222c>
   131b0:	mov	x0, x25
   131b4:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
   131b8:	ldr	w8, [x21, #72]
   131bc:	ldr	x9, [x21, #56]
   131c0:	cbz	w8, 1381c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c98>
   131c4:	orr	x10, x0, #0x8
   131c8:	cmn	x10, #0x8
   131cc:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   131d0:	ubfx	x10, x0, #4, #28
   131d4:	eor	w11, w10, w0, lsr #9
   131d8:	sub	w10, w8, #0x1
   131dc:	and	w11, w11, w10
   131e0:	add	x12, x9, w11, uxtw #4
   131e4:	ldr	x13, [x12]
   131e8:	cmp	x13, x0
   131ec:	b.eq	13820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c9c>  // b.none
   131f0:	mov	w14, #0x1                   	// #1
   131f4:	cmn	x13, #0x8
   131f8:	b.eq	1381c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c98>  // b.none
   131fc:	add	w11, w11, w14
   13200:	and	w11, w11, w10
   13204:	add	x12, x9, w11, uxtw #4
   13208:	ldr	x13, [x12]
   1320c:	add	w14, w14, #0x1
   13210:	cmp	x13, x0
   13214:	b.eq	13820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c9c>  // b.none
   13218:	b	131f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1670>
   1321c:	ldr	w9, [x25, #20]
   13220:	and	x8, x9, #0xfffffff
   13224:	cbz	w8, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   13228:	tbnz	w9, #30, 13548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x19c4>
   1322c:	mov	w9, #0x18                  	// #24
   13230:	mneg	x8, x8, x9
   13234:	add	x10, x25, x8
   13238:	b	1354c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x19c8>
   1323c:	ldr	w9, [x25, #20]
   13240:	and	x8, x9, #0xfffffff
   13244:	cbz	w8, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   13248:	tbnz	w9, #30, 135b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a34>
   1324c:	mov	w9, #0x18                  	// #24
   13250:	mneg	x8, x8, x9
   13254:	add	x8, x25, x8
   13258:	b	135bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a38>
   1325c:	ldr	w8, [x25, #20]
   13260:	and	x9, x8, #0xfffffff
   13264:	cbz	w9, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   13268:	ldr	x10, [x25]
   1326c:	tbnz	w8, #30, 13618 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a94>
   13270:	mov	w11, #0x18                  	// #24
   13274:	mneg	x11, x9, x11
   13278:	add	x11, x25, x11
   1327c:	b	1361c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a98>
   13280:	ldr	w9, [x25, #20]
   13284:	and	x8, x9, #0xfffffff
   13288:	cbz	w8, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   1328c:	tbnz	w9, #30, 13640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1abc>
   13290:	mov	w9, #0x18                  	// #24
   13294:	mneg	x8, x8, x9
   13298:	add	x8, x25, x8
   1329c:	b	13644 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ac0>
   132a0:	ldur	x10, [x25, #-8]
   132a4:	ldr	w8, [x21, #72]
   132a8:	ldr	x9, [x21, #56]
   132ac:	cbz	w8, 13310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x178c>
   132b0:	ldr	x10, [x10]
   132b4:	ldr	x10, [x10]
   132b8:	orr	x11, x10, #0x8
   132bc:	cmn	x11, #0x8
   132c0:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   132c4:	ubfx	x11, x10, #4, #28
   132c8:	eor	w12, w11, w10, lsr #9
   132cc:	sub	w11, w8, #0x1
   132d0:	and	w12, w12, w11
   132d4:	add	x13, x9, w12, uxtw #4
   132d8:	ldr	x14, [x13]
   132dc:	cmp	x14, x10
   132e0:	b.eq	13314 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1790>  // b.none
   132e4:	mov	w15, #0x1                   	// #1
   132e8:	cmn	x14, #0x8
   132ec:	b.eq	13310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x178c>  // b.none
   132f0:	add	w12, w12, w15
   132f4:	and	w12, w12, w11
   132f8:	add	x13, x9, w12, uxtw #4
   132fc:	ldr	x14, [x13]
   13300:	add	w15, w15, #0x1
   13304:	cmp	x14, x10
   13308:	b.eq	13314 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1790>  // b.none
   1330c:	b	132e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1764>
   13310:	add	x13, x9, x8, lsl #4
   13314:	add	x8, x9, x8, lsl #4
   13318:	cmp	x13, x8
   1331c:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   13320:	ldp	w8, w9, [sp, #120]
   13324:	ldr	w10, [x13, #8]
   13328:	cmp	w8, w9
   1332c:	sub	w19, w10, #0x1
   13330:	b.cs	14220 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x269c>  // b.hs, b.nlast
   13334:	ldr	x9, [sp, #112]
   13338:	str	x19, [x9, w8, uxtw #3]
   1333c:	ldp	w8, w9, [sp, #120]
   13340:	cmp	w8, w9
   13344:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13348:	add	w8, w8, #0x1
   1334c:	str	w8, [sp, #120]
   13350:	ldr	w9, [x25, #20]
   13354:	and	x8, x9, #0xfffffff
   13358:	cbz	w8, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   1335c:	tbnz	w9, #30, 13370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x17ec>
   13360:	mov	w9, #0x18                  	// #24
   13364:	mneg	x8, x8, x9
   13368:	add	x8, x25, x8
   1336c:	b	13374 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x17f0>
   13370:	ldur	x8, [x25, #-8]
   13374:	ldr	x1, [x8]
   13378:	ldr	x0, [sp, #48]
   1337c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13380:	ldp	w8, w9, [sp, #120]
   13384:	mov	w19, w0
   13388:	cmp	w8, w9
   1338c:	b.cs	1423c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x26b8>  // b.hs, b.nlast
   13390:	ldr	x9, [sp, #112]
   13394:	str	x19, [x9, w8, uxtw #3]
   13398:	ldp	w8, w9, [sp, #120]
   1339c:	cmp	w8, w9
   133a0:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   133a4:	add	w8, w8, #0x1
   133a8:	str	w8, [sp, #120]
   133ac:	ldr	w9, [x25, #20]
   133b0:	and	x8, x9, #0xfffffff
   133b4:	cmp	w8, #0x1
   133b8:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   133bc:	tbnz	w9, #30, 133d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x184c>
   133c0:	mov	w9, #0x18                  	// #24
   133c4:	mneg	x8, x8, x9
   133c8:	add	x8, x25, x8
   133cc:	b	133d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1850>
   133d0:	ldur	x8, [x25, #-8]
   133d4:	ldr	x1, [x8, #24]
   133d8:	ldr	x0, [sp, #48]
   133dc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   133e0:	ldp	w8, w9, [sp, #120]
   133e4:	mov	w19, w0
   133e8:	cmp	w8, w9
   133ec:	b.cs	14258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x26d4>  // b.hs, b.nlast
   133f0:	ldr	x9, [sp, #112]
   133f4:	str	x19, [x9, w8, uxtw #3]
   133f8:	ldp	w8, w9, [sp, #120]
   133fc:	cmp	w8, w9
   13400:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13404:	add	w8, w8, #0x1
   13408:	mov	x0, x25
   1340c:	str	w8, [sp, #120]
   13410:	bl	0 <_ZNK4llvm12ConstantExpr12getPredicateEv>
   13414:	ldp	w8, w9, [sp, #120]
   13418:	mov	w19, w0
   1341c:	cmp	w8, w9
   13420:	b.cs	14274 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x26f0>  // b.hs, b.nlast
   13424:	ldr	x9, [sp, #112]
   13428:	str	x19, [x9, w8, uxtw #3]
   1342c:	ldp	w8, w9, [sp, #120]
   13430:	cmp	w8, w9
   13434:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13438:	add	w8, w8, #0x1
   1343c:	mov	x21, x26
   13440:	mov	w3, wzr
   13444:	str	w8, [sp, #120]
   13448:	mov	w26, #0x11                  	// #17
   1344c:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   13450:	ldur	x8, [x25, #-8]
   13454:	ldr	x1, [x8]
   13458:	ldr	x0, [sp, #48]
   1345c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13460:	ldp	w8, w9, [sp, #120]
   13464:	mov	w19, w0
   13468:	cmp	w8, w9
   1346c:	b.cs	142ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2728>  // b.hs, b.nlast
   13470:	ldr	x9, [sp, #112]
   13474:	str	x19, [x9, w8, uxtw #3]
   13478:	ldp	w8, w9, [sp, #120]
   1347c:	cmp	w8, w9
   13480:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13484:	add	w8, w8, #0x1
   13488:	mov	x0, x25
   1348c:	str	w8, [sp, #120]
   13490:	bl	148f8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   13494:	cbz	x0, 13d04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2180>
   13498:	ldp	w8, w9, [sp, #120]
   1349c:	mov	x24, x0
   134a0:	cmp	w8, w9
   134a4:	b.cs	1446c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x28e8>  // b.hs, b.nlast
   134a8:	ldr	x9, [sp, #112]
   134ac:	str	x24, [x9, w8, uxtw #3]
   134b0:	ldp	w8, w9, [sp, #120]
   134b4:	cmp	w8, w9
   134b8:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   134bc:	add	w8, w8, #0x1
   134c0:	mov	x21, x26
   134c4:	mov	w3, wzr
   134c8:	str	w8, [sp, #120]
   134cc:	mov	w26, #0x19                  	// #25
   134d0:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   134d4:	ldr	w9, [x25, #20]
   134d8:	and	w9, w9, #0xfffffff
   134dc:	cmp	w9, #0x2
   134e0:	b.ne	148a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d1c>  // b.any
   134e4:	sub	w9, w8, #0xd
   134e8:	cmp	w9, #0x12
   134ec:	b.cs	148c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d3c>  // b.hs, b.nlast
   134f0:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   134f4:	ldp	w8, w10, [sp, #120]
   134f8:	sxth	x9, w9
   134fc:	add	x11, x11, #0x0
   13500:	ldr	x19, [x11, x9, lsl #3]
   13504:	cmp	w8, w10
   13508:	b.cs	144c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x293c>  // b.hs, b.nlast
   1350c:	ldr	x9, [sp, #112]
   13510:	str	x19, [x9, w8, uxtw #3]
   13514:	ldp	w8, w9, [sp, #120]
   13518:	cmp	w8, w9
   1351c:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13520:	add	w8, w8, #0x1
   13524:	str	w8, [sp, #120]
   13528:	ldr	w9, [x25, #20]
   1352c:	and	x8, x9, #0xfffffff
   13530:	cbz	w8, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   13534:	tbnz	w9, #30, 13e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2298>
   13538:	mov	w9, #0x18                  	// #24
   1353c:	mneg	x8, x8, x9
   13540:	add	x8, x25, x8
   13544:	b	13e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x229c>
   13548:	ldur	x10, [x25, #-8]
   1354c:	ldr	w8, [x21, #72]
   13550:	ldr	x9, [x21, #56]
   13554:	cbz	w8, 13a7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ef8>
   13558:	ldr	x10, [x10]
   1355c:	ldr	x10, [x10]
   13560:	orr	x11, x10, #0x8
   13564:	cmn	x11, #0x8
   13568:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   1356c:	ubfx	x11, x10, #4, #28
   13570:	eor	w12, w11, w10, lsr #9
   13574:	sub	w11, w8, #0x1
   13578:	and	w12, w12, w11
   1357c:	add	x13, x9, w12, uxtw #4
   13580:	ldr	x14, [x13]
   13584:	cmp	x14, x10
   13588:	b.eq	13a80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1efc>  // b.none
   1358c:	mov	w15, #0x1                   	// #1
   13590:	cmn	x14, #0x8
   13594:	b.eq	13a7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ef8>  // b.none
   13598:	add	w12, w12, w15
   1359c:	and	w12, w12, w11
   135a0:	add	x13, x9, w12, uxtw #4
   135a4:	ldr	x14, [x13]
   135a8:	add	w15, w15, #0x1
   135ac:	cmp	x14, x10
   135b0:	b.eq	13a80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1efc>  // b.none
   135b4:	b	13590 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a0c>
   135b8:	ldur	x8, [x25, #-8]
   135bc:	ldr	x1, [x8]
   135c0:	ldr	x0, [sp, #48]
   135c4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   135c8:	ldp	w8, w9, [sp, #120]
   135cc:	mov	w19, w0
   135d0:	cmp	w8, w9
   135d4:	b.cs	142c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2744>  // b.hs, b.nlast
   135d8:	ldr	x9, [sp, #112]
   135dc:	str	x19, [x9, w8, uxtw #3]
   135e0:	ldp	w8, w9, [sp, #120]
   135e4:	cmp	w8, w9
   135e8:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   135ec:	add	w8, w8, #0x1
   135f0:	str	w8, [sp, #120]
   135f4:	ldr	w9, [x25, #20]
   135f8:	and	x8, x9, #0xfffffff
   135fc:	cmp	w8, #0x1
   13600:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   13604:	tbnz	w9, #30, 136a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b1c>
   13608:	mov	w9, #0x18                  	// #24
   1360c:	mneg	x8, x8, x9
   13610:	add	x8, x25, x8
   13614:	b	136a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b20>
   13618:	ldur	x11, [x25, #-8]
   1361c:	ldr	x11, [x11]
   13620:	ldr	x11, [x11]
   13624:	cmp	x10, x11
   13628:	b.eq	13d14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2190>  // b.none
   1362c:	tbnz	w8, #30, 13d20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x219c>
   13630:	mov	w8, #0x18                  	// #24
   13634:	mneg	x8, x9, x8
   13638:	add	x10, x25, x8
   1363c:	b	13d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x21a0>
   13640:	ldur	x8, [x25, #-8]
   13644:	ldr	x1, [x8]
   13648:	ldr	x0, [sp, #48]
   1364c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13650:	ldp	w8, w9, [sp, #120]
   13654:	mov	w19, w0
   13658:	cmp	w8, w9
   1365c:	b.cs	142e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2760>  // b.hs, b.nlast
   13660:	ldr	x9, [sp, #112]
   13664:	str	x19, [x9, w8, uxtw #3]
   13668:	ldp	w8, w9, [sp, #120]
   1366c:	cmp	w8, w9
   13670:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13674:	add	w8, w8, #0x1
   13678:	str	w8, [sp, #120]
   1367c:	ldr	w9, [x25, #20]
   13680:	and	x8, x9, #0xfffffff
   13684:	cmp	w8, #0x1
   13688:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   1368c:	tbnz	w9, #30, 13700 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b7c>
   13690:	mov	w9, #0x18                  	// #24
   13694:	mneg	x8, x8, x9
   13698:	add	x8, x25, x8
   1369c:	b	13704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b80>
   136a0:	ldur	x8, [x25, #-8]
   136a4:	ldr	x1, [x8, #24]
   136a8:	ldr	x0, [sp, #48]
   136ac:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   136b0:	ldp	w8, w9, [sp, #120]
   136b4:	mov	w19, w0
   136b8:	cmp	w8, w9
   136bc:	b.cs	14300 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x277c>  // b.hs, b.nlast
   136c0:	ldr	x9, [sp, #112]
   136c4:	str	x19, [x9, w8, uxtw #3]
   136c8:	ldp	w8, w9, [sp, #120]
   136cc:	cmp	w8, w9
   136d0:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   136d4:	add	w8, w8, #0x1
   136d8:	str	w8, [sp, #120]
   136dc:	ldr	w11, [x25, #20]
   136e0:	and	x10, x11, #0xfffffff
   136e4:	cmp	w10, #0x2
   136e8:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   136ec:	tbnz	w11, #30, 13760 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1bdc>
   136f0:	mov	w11, #0x18                  	// #24
   136f4:	mneg	x10, x10, x11
   136f8:	add	x12, x25, x10
   136fc:	b	13764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1be0>
   13700:	ldur	x8, [x25, #-8]
   13704:	ldr	x1, [x8, #24]
   13708:	ldr	x0, [sp, #48]
   1370c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13710:	ldp	w8, w9, [sp, #120]
   13714:	mov	w19, w0
   13718:	cmp	w8, w9
   1371c:	b.cs	1431c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2798>  // b.hs, b.nlast
   13720:	ldr	x9, [sp, #112]
   13724:	str	x19, [x9, w8, uxtw #3]
   13728:	ldp	w8, w9, [sp, #120]
   1372c:	cmp	w8, w9
   13730:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13734:	add	w8, w8, #0x1
   13738:	str	w8, [sp, #120]
   1373c:	ldr	w9, [x25, #20]
   13740:	and	x8, x9, #0xfffffff
   13744:	cmp	w8, #0x2
   13748:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   1374c:	tbnz	w9, #30, 137d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c4c>
   13750:	mov	w9, #0x18                  	// #24
   13754:	mneg	x8, x8, x9
   13758:	add	x8, x25, x8
   1375c:	b	137d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c50>
   13760:	ldur	x12, [x25, #-8]
   13764:	ldr	w10, [x21, #72]
   13768:	ldr	x11, [x21, #56]
   1376c:	cbz	w10, 13bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2028>
   13770:	ldr	x12, [x12, #48]
   13774:	ldr	x12, [x12]
   13778:	orr	x13, x12, #0x8
   1377c:	cmn	x13, #0x8
   13780:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   13784:	ubfx	x13, x12, #4, #28
   13788:	eor	w14, w13, w12, lsr #9
   1378c:	sub	w13, w10, #0x1
   13790:	and	w14, w14, w13
   13794:	add	x15, x11, w14, uxtw #4
   13798:	ldr	x16, [x15]
   1379c:	cmp	x16, x12
   137a0:	b.eq	13bb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x202c>  // b.none
   137a4:	mov	w17, #0x1                   	// #1
   137a8:	cmn	x16, #0x8
   137ac:	b.eq	13bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2028>  // b.none
   137b0:	add	w14, w14, w17
   137b4:	and	w14, w14, w13
   137b8:	add	x15, x11, w14, uxtw #4
   137bc:	ldr	x16, [x15]
   137c0:	add	w17, w17, #0x1
   137c4:	cmp	x16, x12
   137c8:	b.eq	13bb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x202c>  // b.none
   137cc:	b	137a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c24>
   137d0:	ldur	x8, [x25, #-8]
   137d4:	ldr	x1, [x8, #48]
   137d8:	ldr	x0, [sp, #48]
   137dc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   137e0:	ldp	w8, w9, [sp, #120]
   137e4:	mov	w19, w0
   137e8:	cmp	w8, w9
   137ec:	b.cs	14338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x27b4>  // b.hs, b.nlast
   137f0:	ldr	x9, [sp, #112]
   137f4:	str	x19, [x9, w8, uxtw #3]
   137f8:	ldp	w8, w9, [sp, #120]
   137fc:	cmp	w8, w9
   13800:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13804:	add	w8, w8, #0x1
   13808:	mov	x21, x26
   1380c:	mov	w3, wzr
   13810:	str	w8, [sp, #120]
   13814:	mov	w26, #0xd                   	// #13
   13818:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   1381c:	add	x12, x9, x8, lsl #4
   13820:	add	x8, x9, x8, lsl #4
   13824:	cmp	x12, x8
   13828:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   1382c:	ldp	w8, w9, [sp, #120]
   13830:	ldr	w10, [x12, #8]
   13834:	cmp	w8, w9
   13838:	sub	w19, w10, #0x1
   1383c:	b.cs	14354 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x27d0>  // b.hs, b.nlast
   13840:	ldr	x9, [sp, #112]
   13844:	str	x19, [x9, w8, uxtw #3]
   13848:	ldp	w8, w9, [sp, #120]
   1384c:	cmp	w8, w9
   13850:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13854:	add	w8, w8, #0x1
   13858:	str	w8, [sp, #120]
   1385c:	ldrb	w10, [x25, #17]
   13860:	cmp	x10, #0x4
   13864:	b.cs	13880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1cfc>  // b.hs, b.nlast
   13868:	tst	w10, #0x2
   1386c:	mov	w10, #0x14                  	// #20
   13870:	mov	w11, #0xc                   	// #12
   13874:	mov	x21, x26
   13878:	csel	w26, w11, w10, eq  // eq = none
   1387c:	b	138c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d3c>
   13880:	ubfx	x11, x10, #2, #30
   13884:	ubfx	x19, x10, #1, #1
   13888:	sub	w10, w11, #0x1
   1388c:	and	x10, x10, #0xff
   13890:	cmp	w8, w9
   13894:	bfi	x19, x10, #1, #8
   13898:	b.cs	144dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2958>  // b.hs, b.nlast
   1389c:	ldr	x9, [sp, #112]
   138a0:	str	x19, [x9, w8, uxtw #3]
   138a4:	ldp	w8, w9, [sp, #120]
   138a8:	cmp	w8, w9
   138ac:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   138b0:	add	w8, w8, #0x1
   138b4:	mov	x21, x26
   138b8:	str	w8, [sp, #120]
   138bc:	mov	w26, #0x18                  	// #24
   138c0:	ldr	w10, [x25, #20]
   138c4:	and	x24, x10, #0xfffffff
   138c8:	cbz	w24, 13a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ef0>
   138cc:	cbz	w24, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   138d0:	mov	x27, xzr
   138d4:	mov	x11, x24
   138d8:	tbnz	w10, #30, 138fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d78>
   138dc:	mov	w10, #0x18                  	// #24
   138e0:	mneg	x10, x11, x10
   138e4:	add	x12, x25, x10
   138e8:	ldr	x11, [x29, #8]
   138ec:	ldr	w10, [x11, #72]
   138f0:	ldr	x11, [x11, #56]
   138f4:	cbnz	w10, 13910 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d8c>
   138f8:	b	13978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1df4>
   138fc:	ldur	x12, [x25, #-8]
   13900:	ldr	x11, [x29, #8]
   13904:	ldr	w10, [x11, #72]
   13908:	ldr	x11, [x11, #56]
   1390c:	cbz	w10, 13978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1df4>
   13910:	mov	w13, #0x18                  	// #24
   13914:	mul	x13, x27, x13
   13918:	ldr	x12, [x12, x13]
   1391c:	ldr	x12, [x12]
   13920:	orr	x13, x12, #0x8
   13924:	cmn	x13, #0x8
   13928:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   1392c:	ubfx	x13, x12, #4, #28
   13930:	eor	w14, w13, w12, lsr #9
   13934:	sub	w13, w10, #0x1
   13938:	and	w14, w14, w13
   1393c:	add	x15, x11, w14, uxtw #4
   13940:	ldr	x16, [x15]
   13944:	cmp	x16, x12
   13948:	b.eq	1397c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1df8>  // b.none
   1394c:	mov	w17, #0x1                   	// #1
   13950:	cmn	x16, #0x8
   13954:	b.eq	13978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1df4>  // b.none
   13958:	add	w14, w14, w17
   1395c:	and	w14, w14, w13
   13960:	add	x15, x11, w14, uxtw #4
   13964:	ldr	x16, [x15]
   13968:	add	w17, w17, #0x1
   1396c:	cmp	x16, x12
   13970:	b.eq	1397c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1df8>  // b.none
   13974:	b	13950 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1dcc>
   13978:	add	x15, x11, x10, lsl #4
   1397c:	add	x10, x11, x10, lsl #4
   13980:	cmp	x15, x10
   13984:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   13988:	ldr	w10, [x15, #8]
   1398c:	cmp	w8, w9
   13990:	sub	w19, w10, #0x1
   13994:	b.cs	13a3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1eb8>  // b.hs, b.nlast
   13998:	ldr	x9, [sp, #112]
   1399c:	str	x19, [x9, w8, uxtw #3]
   139a0:	ldp	w8, w9, [sp, #120]
   139a4:	cmp	w8, w9
   139a8:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   139ac:	add	w8, w8, #0x1
   139b0:	str	w8, [sp, #120]
   139b4:	ldr	w9, [x25, #20]
   139b8:	and	x8, x9, #0xfffffff
   139bc:	cmp	x27, x8
   139c0:	b.cs	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.hs, b.nlast
   139c4:	tbnz	w9, #30, 139d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e54>
   139c8:	mov	w9, #0x18                  	// #24
   139cc:	mneg	x8, x8, x9
   139d0:	add	x8, x25, x8
   139d4:	b	139dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e58>
   139d8:	ldur	x8, [x25, #-8]
   139dc:	mov	w9, #0x18                  	// #24
   139e0:	mul	x9, x27, x9
   139e4:	ldr	x1, [x8, x9]
   139e8:	ldr	x0, [sp, #48]
   139ec:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   139f0:	ldp	w8, w9, [sp, #120]
   139f4:	mov	w19, w0
   139f8:	cmp	w8, w9
   139fc:	b.cs	13a58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ed4>  // b.hs, b.nlast
   13a00:	ldr	x9, [sp, #112]
   13a04:	str	x19, [x9, w8, uxtw #3]
   13a08:	ldp	w8, w9, [sp, #120]
   13a0c:	cmp	w8, w9
   13a10:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13a14:	add	x27, x27, #0x1
   13a18:	add	w8, w8, #0x1
   13a1c:	cmp	x27, x24
   13a20:	str	w8, [sp, #120]
   13a24:	b.eq	13a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ef0>  // b.none
   13a28:	ldr	w10, [x25, #20]
   13a2c:	and	x11, x10, #0xfffffff
   13a30:	cmp	x27, x11
   13a34:	b.cc	138d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d54>  // b.lo, b.ul, b.last
   13a38:	b	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   13a3c:	ldr	x1, [sp, #56]
   13a40:	add	x0, sp, #0x70
   13a44:	mov	w3, #0x8                   	// #8
   13a48:	mov	x2, xzr
   13a4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13a50:	ldr	w8, [sp, #120]
   13a54:	b	13998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e14>
   13a58:	ldr	x1, [sp, #56]
   13a5c:	add	x0, sp, #0x70
   13a60:	mov	w3, #0x8                   	// #8
   13a64:	mov	x2, xzr
   13a68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13a6c:	ldr	w8, [sp, #120]
   13a70:	b	13a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e7c>
   13a74:	mov	w3, wzr
   13a78:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   13a7c:	add	x13, x9, x8, lsl #4
   13a80:	add	x8, x9, x8, lsl #4
   13a84:	cmp	x13, x8
   13a88:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   13a8c:	ldp	w8, w9, [sp, #120]
   13a90:	ldr	w10, [x13, #8]
   13a94:	cmp	w8, w9
   13a98:	sub	w19, w10, #0x1
   13a9c:	b.cs	14370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x27ec>  // b.hs, b.nlast
   13aa0:	ldr	x9, [sp, #112]
   13aa4:	str	x19, [x9, w8, uxtw #3]
   13aa8:	ldp	w8, w9, [sp, #120]
   13aac:	cmp	w8, w9
   13ab0:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13ab4:	add	w8, w8, #0x1
   13ab8:	str	w8, [sp, #120]
   13abc:	ldr	w9, [x25, #20]
   13ac0:	and	x8, x9, #0xfffffff
   13ac4:	cbz	w8, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   13ac8:	tbnz	w9, #30, 13adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f58>
   13acc:	mov	w9, #0x18                  	// #24
   13ad0:	mneg	x8, x8, x9
   13ad4:	add	x8, x25, x8
   13ad8:	b	13ae0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f5c>
   13adc:	ldur	x8, [x25, #-8]
   13ae0:	ldr	x1, [x8]
   13ae4:	ldr	x0, [sp, #48]
   13ae8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13aec:	ldp	w8, w9, [sp, #120]
   13af0:	mov	w19, w0
   13af4:	cmp	w8, w9
   13af8:	b.cs	1438c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2808>  // b.hs, b.nlast
   13afc:	ldr	x9, [sp, #112]
   13b00:	str	x19, [x9, w8, uxtw #3]
   13b04:	ldp	w8, w9, [sp, #120]
   13b08:	cmp	w8, w9
   13b0c:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13b10:	add	w8, w8, #0x1
   13b14:	str	w8, [sp, #120]
   13b18:	ldr	w11, [x25, #20]
   13b1c:	and	x10, x11, #0xfffffff
   13b20:	cmp	w10, #0x1
   13b24:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   13b28:	tbnz	w11, #30, 13b3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1fb8>
   13b2c:	mov	w11, #0x18                  	// #24
   13b30:	mneg	x10, x10, x11
   13b34:	add	x12, x25, x10
   13b38:	b	13b40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1fbc>
   13b3c:	ldur	x12, [x25, #-8]
   13b40:	ldr	w10, [x21, #72]
   13b44:	ldr	x11, [x21, #56]
   13b48:	cbz	w10, 13c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x20d4>
   13b4c:	ldr	x12, [x12, #24]
   13b50:	ldr	x12, [x12]
   13b54:	orr	x13, x12, #0x8
   13b58:	cmn	x13, #0x8
   13b5c:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   13b60:	ubfx	x13, x12, #4, #28
   13b64:	eor	w14, w13, w12, lsr #9
   13b68:	sub	w13, w10, #0x1
   13b6c:	and	w14, w14, w13
   13b70:	add	x15, x11, w14, uxtw #4
   13b74:	ldr	x16, [x15]
   13b78:	cmp	x16, x12
   13b7c:	b.eq	13c5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x20d8>  // b.none
   13b80:	mov	w17, #0x1                   	// #1
   13b84:	cmn	x16, #0x8
   13b88:	b.eq	13c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x20d4>  // b.none
   13b8c:	add	w14, w14, w17
   13b90:	and	w14, w14, w13
   13b94:	add	x15, x11, w14, uxtw #4
   13b98:	ldr	x16, [x15]
   13b9c:	add	w17, w17, #0x1
   13ba0:	cmp	x16, x12
   13ba4:	b.eq	13c5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x20d8>  // b.none
   13ba8:	b	13b84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2000>
   13bac:	add	x15, x11, x10, lsl #4
   13bb0:	add	x10, x11, x10, lsl #4
   13bb4:	cmp	x15, x10
   13bb8:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   13bbc:	ldr	w10, [x15, #8]
   13bc0:	cmp	w8, w9
   13bc4:	sub	w19, w10, #0x1
   13bc8:	b.cs	143a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2824>  // b.hs, b.nlast
   13bcc:	ldr	x9, [sp, #112]
   13bd0:	str	x19, [x9, w8, uxtw #3]
   13bd4:	ldp	w8, w9, [sp, #120]
   13bd8:	cmp	w8, w9
   13bdc:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13be0:	add	w8, w8, #0x1
   13be4:	str	w8, [sp, #120]
   13be8:	ldr	w9, [x25, #20]
   13bec:	and	x8, x9, #0xfffffff
   13bf0:	cmp	w8, #0x2
   13bf4:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   13bf8:	tbnz	w9, #30, 13c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2088>
   13bfc:	mov	w9, #0x18                  	// #24
   13c00:	mneg	x8, x8, x9
   13c04:	add	x8, x25, x8
   13c08:	b	13c10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x208c>
   13c0c:	ldur	x8, [x25, #-8]
   13c10:	ldr	x1, [x8, #48]
   13c14:	ldr	x0, [sp, #48]
   13c18:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13c1c:	ldp	w8, w9, [sp, #120]
   13c20:	mov	w19, w0
   13c24:	cmp	w8, w9
   13c28:	b.cs	143c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2840>  // b.hs, b.nlast
   13c2c:	ldr	x9, [sp, #112]
   13c30:	str	x19, [x9, w8, uxtw #3]
   13c34:	ldp	w8, w9, [sp, #120]
   13c38:	cmp	w8, w9
   13c3c:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13c40:	add	w8, w8, #0x1
   13c44:	mov	x21, x26
   13c48:	mov	w3, wzr
   13c4c:	str	w8, [sp, #120]
   13c50:	mov	w26, #0xf                   	// #15
   13c54:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   13c58:	add	x15, x11, x10, lsl #4
   13c5c:	add	x10, x11, x10, lsl #4
   13c60:	cmp	x15, x10
   13c64:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   13c68:	ldr	w10, [x15, #8]
   13c6c:	cmp	w8, w9
   13c70:	sub	w19, w10, #0x1
   13c74:	b.cs	143e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x285c>  // b.hs, b.nlast
   13c78:	ldr	x9, [sp, #112]
   13c7c:	str	x19, [x9, w8, uxtw #3]
   13c80:	ldp	w8, w9, [sp, #120]
   13c84:	cmp	w8, w9
   13c88:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13c8c:	add	w8, w8, #0x1
   13c90:	str	w8, [sp, #120]
   13c94:	ldr	w9, [x25, #20]
   13c98:	and	x8, x9, #0xfffffff
   13c9c:	cmp	w8, #0x1
   13ca0:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   13ca4:	tbnz	w9, #30, 13cb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2134>
   13ca8:	mov	w9, #0x18                  	// #24
   13cac:	mneg	x8, x8, x9
   13cb0:	add	x8, x25, x8
   13cb4:	b	13cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2138>
   13cb8:	ldur	x8, [x25, #-8]
   13cbc:	ldr	x1, [x8, #24]
   13cc0:	ldr	x0, [sp, #48]
   13cc4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13cc8:	ldp	w8, w9, [sp, #120]
   13ccc:	mov	w19, w0
   13cd0:	cmp	w8, w9
   13cd4:	b.cs	143fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2878>  // b.hs, b.nlast
   13cd8:	ldr	x9, [sp, #112]
   13cdc:	str	x19, [x9, w8, uxtw #3]
   13ce0:	ldp	w8, w9, [sp, #120]
   13ce4:	cmp	w8, w9
   13ce8:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13cec:	add	w8, w8, #0x1
   13cf0:	mov	x21, x26
   13cf4:	mov	w3, wzr
   13cf8:	str	w8, [sp, #120]
   13cfc:	mov	w26, #0xe                   	// #14
   13d00:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   13d04:	mov	x21, x26
   13d08:	mov	w3, wzr
   13d0c:	mov	w26, #0x19                  	// #25
   13d10:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   13d14:	mov	x21, x26
   13d18:	mov	w26, #0x10                  	// #16
   13d1c:	b	13f4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x23c8>
   13d20:	ldur	x10, [x25, #-8]
   13d24:	ldr	w8, [x21, #72]
   13d28:	ldr	x9, [x21, #56]
   13d2c:	cbz	w8, 13f00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x237c>
   13d30:	ldr	x10, [x10]
   13d34:	ldr	x10, [x10]
   13d38:	orr	x11, x10, #0x8
   13d3c:	cmn	x11, #0x8
   13d40:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   13d44:	ubfx	x11, x10, #4, #28
   13d48:	eor	w12, w11, w10, lsr #9
   13d4c:	sub	w11, w8, #0x1
   13d50:	and	w12, w12, w11
   13d54:	add	x13, x9, w12, uxtw #4
   13d58:	ldr	x14, [x13]
   13d5c:	cmp	x14, x10
   13d60:	b.eq	13f04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2380>  // b.none
   13d64:	mov	w15, #0x1                   	// #1
   13d68:	cmn	x14, #0x8
   13d6c:	b.eq	13f00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x237c>  // b.none
   13d70:	add	w12, w12, w15
   13d74:	and	w12, w12, w11
   13d78:	add	x13, x9, w12, uxtw #4
   13d7c:	ldr	x14, [x13]
   13d80:	add	w15, w15, #0x1
   13d84:	cmp	x14, x10
   13d88:	b.eq	13f04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2380>  // b.none
   13d8c:	b	13d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x21e4>
   13d90:	ldr	x1, [sp, #56]
   13d94:	add	x0, sp, #0x70
   13d98:	mov	w3, #0x8                   	// #8
   13d9c:	mov	x2, xzr
   13da0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13da4:	ldr	w8, [sp, #120]
   13da8:	b	125f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa6c>
   13dac:	ldur	x12, [x25, #-8]
   13db0:	ldr	w10, [x21, #72]
   13db4:	ldr	x11, [x21, #56]
   13db8:	cbz	w10, 140c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x253c>
   13dbc:	ldr	x12, [x12]
   13dc0:	ldr	x12, [x12]
   13dc4:	orr	x13, x12, #0x8
   13dc8:	cmn	x13, #0x8
   13dcc:	b.eq	146e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b64>  // b.none
   13dd0:	ubfx	x13, x12, #4, #28
   13dd4:	eor	w14, w13, w12, lsr #9
   13dd8:	sub	w13, w10, #0x1
   13ddc:	and	w14, w14, w13
   13de0:	add	x15, x11, w14, uxtw #4
   13de4:	ldr	x16, [x15]
   13de8:	cmp	x16, x12
   13dec:	b.eq	140c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2540>  // b.none
   13df0:	mov	w17, #0x1                   	// #1
   13df4:	cmn	x16, #0x8
   13df8:	b.eq	140c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x253c>  // b.none
   13dfc:	add	w14, w14, w17
   13e00:	and	w14, w14, w13
   13e04:	add	x15, x11, w14, uxtw #4
   13e08:	ldr	x16, [x15]
   13e0c:	add	w17, w17, #0x1
   13e10:	cmp	x16, x12
   13e14:	b.eq	140c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2540>  // b.none
   13e18:	b	13df4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2270>
   13e1c:	ldur	x8, [x25, #-8]
   13e20:	ldr	x1, [x8]
   13e24:	ldr	x0, [sp, #48]
   13e28:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13e2c:	ldp	w8, w9, [sp, #120]
   13e30:	mov	w19, w0
   13e34:	cmp	w8, w9
   13e38:	b.cs	144f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2974>  // b.hs, b.nlast
   13e3c:	ldr	x9, [sp, #112]
   13e40:	str	x19, [x9, w8, uxtw #3]
   13e44:	ldp	w8, w9, [sp, #120]
   13e48:	cmp	w8, w9
   13e4c:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13e50:	add	w8, w8, #0x1
   13e54:	str	w8, [sp, #120]
   13e58:	ldr	w9, [x25, #20]
   13e5c:	and	x8, x9, #0xfffffff
   13e60:	cmp	w8, #0x1
   13e64:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   13e68:	tbnz	w9, #30, 13e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x22f8>
   13e6c:	mov	w9, #0x18                  	// #24
   13e70:	mneg	x8, x8, x9
   13e74:	add	x8, x25, x8
   13e78:	b	13e80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x22fc>
   13e7c:	ldur	x8, [x25, #-8]
   13e80:	ldr	x1, [x8, #24]
   13e84:	ldr	x0, [sp, #48]
   13e88:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13e8c:	ldp	w8, w9, [sp, #120]
   13e90:	mov	w19, w0
   13e94:	cmp	w8, w9
   13e98:	b.cs	14514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2990>  // b.hs, b.nlast
   13e9c:	ldr	x9, [sp, #112]
   13ea0:	str	x19, [x9, w8, uxtw #3]
   13ea4:	ldp	w8, w9, [sp, #120]
   13ea8:	cmp	w8, w9
   13eac:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13eb0:	add	w8, w8, #0x1
   13eb4:	mov	x0, x25
   13eb8:	str	w8, [sp, #120]
   13ebc:	bl	148f8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   13ec0:	cbz	x0, 14168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x25e4>
   13ec4:	ldp	w8, w9, [sp, #120]
   13ec8:	mov	x24, x0
   13ecc:	cmp	w8, w9
   13ed0:	b.cs	14568 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x29e4>  // b.hs, b.nlast
   13ed4:	ldr	x9, [sp, #112]
   13ed8:	str	x24, [x9, w8, uxtw #3]
   13edc:	ldp	w8, w9, [sp, #120]
   13ee0:	cmp	w8, w9
   13ee4:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13ee8:	add	w8, w8, #0x1
   13eec:	mov	x21, x26
   13ef0:	mov	w3, wzr
   13ef4:	str	w8, [sp, #120]
   13ef8:	mov	w26, #0xa                   	// #10
   13efc:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   13f00:	add	x13, x9, x8, lsl #4
   13f04:	add	x8, x9, x8, lsl #4
   13f08:	cmp	x13, x8
   13f0c:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   13f10:	ldp	w8, w9, [sp, #120]
   13f14:	ldr	w10, [x13, #8]
   13f18:	cmp	w8, w9
   13f1c:	sub	w19, w10, #0x1
   13f20:	b.cs	14488 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2904>  // b.hs, b.nlast
   13f24:	ldr	x9, [sp, #112]
   13f28:	str	x19, [x9, w8, uxtw #3]
   13f2c:	ldp	w8, w9, [sp, #120]
   13f30:	cmp	w8, w9
   13f34:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13f38:	add	w8, w8, #0x1
   13f3c:	str	w8, [sp, #120]
   13f40:	ldr	w8, [x25, #20]
   13f44:	mov	x21, x26
   13f48:	mov	w26, #0x13                  	// #19
   13f4c:	ands	w9, w8, #0xfffffff
   13f50:	b.eq	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.none
   13f54:	tbnz	w8, #30, 13f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x23e4>
   13f58:	mov	w8, #0x18                  	// #24
   13f5c:	mneg	x8, x9, x8
   13f60:	add	x8, x25, x8
   13f64:	b	13f6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x23e8>
   13f68:	ldur	x8, [x25, #-8]
   13f6c:	ldr	x1, [x8]
   13f70:	ldr	x0, [sp, #48]
   13f74:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13f78:	ldp	w8, w9, [sp, #120]
   13f7c:	mov	w19, w0
   13f80:	cmp	w8, w9
   13f84:	b.cs	14418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2894>  // b.hs, b.nlast
   13f88:	ldr	x9, [sp, #112]
   13f8c:	str	x19, [x9, w8, uxtw #3]
   13f90:	ldp	w8, w9, [sp, #120]
   13f94:	cmp	w8, w9
   13f98:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13f9c:	add	w8, w8, #0x1
   13fa0:	str	w8, [sp, #120]
   13fa4:	ldr	w9, [x25, #20]
   13fa8:	and	x8, x9, #0xfffffff
   13fac:	cmp	w8, #0x1
   13fb0:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   13fb4:	tbnz	w9, #30, 13fc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2444>
   13fb8:	mov	w9, #0x18                  	// #24
   13fbc:	mneg	x8, x8, x9
   13fc0:	add	x8, x25, x8
   13fc4:	b	13fcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2448>
   13fc8:	ldur	x8, [x25, #-8]
   13fcc:	ldr	x1, [x8, #24]
   13fd0:	ldr	x0, [sp, #48]
   13fd4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13fd8:	ldp	w8, w9, [sp, #120]
   13fdc:	mov	w19, w0
   13fe0:	cmp	w8, w9
   13fe4:	b.cs	14434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x28b0>  // b.hs, b.nlast
   13fe8:	ldr	x9, [sp, #112]
   13fec:	str	x19, [x9, w8, uxtw #3]
   13ff0:	ldp	w8, w9, [sp, #120]
   13ff4:	cmp	w8, w9
   13ff8:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   13ffc:	add	w8, w8, #0x1
   14000:	str	w8, [sp, #120]
   14004:	ldr	w9, [x25, #20]
   14008:	and	x8, x9, #0xfffffff
   1400c:	cmp	w8, #0x2
   14010:	b.ls	148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>  // b.plast
   14014:	tbnz	w9, #30, 14028 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24a4>
   14018:	mov	w9, #0x18                  	// #24
   1401c:	mneg	x8, x8, x9
   14020:	add	x8, x25, x8
   14024:	b	1402c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24a8>
   14028:	ldur	x8, [x25, #-8]
   1402c:	ldr	x1, [x8, #48]
   14030:	ldr	x0, [sp, #48]
   14034:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   14038:	ldp	w8, w9, [sp, #120]
   1403c:	mov	w19, w0
   14040:	cmp	w8, w9
   14044:	b.cs	14450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x28cc>  // b.hs, b.nlast
   14048:	ldr	x9, [sp, #112]
   1404c:	str	x19, [x9, w8, uxtw #3]
   14050:	ldp	w8, w9, [sp, #120]
   14054:	cmp	w8, w9
   14058:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   1405c:	add	w8, w8, #0x1
   14060:	mov	w3, wzr
   14064:	str	w8, [sp, #120]
   14068:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   1406c:	ldr	x1, [sp, #56]
   14070:	add	x0, sp, #0x70
   14074:	mov	w3, #0x8                   	// #8
   14078:	mov	x2, xzr
   1407c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14080:	ldr	w8, [sp, #120]
   14084:	b	12668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xae4>
   14088:	ldr	x1, [sp, #56]
   1408c:	add	x0, sp, #0x70
   14090:	mov	w3, #0x8                   	// #8
   14094:	mov	x2, xzr
   14098:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1409c:	ldr	w8, [sp, #120]
   140a0:	b	12690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xb0c>
   140a4:	ldr	x1, [sp, #56]
   140a8:	add	x0, sp, #0x70
   140ac:	mov	w3, #0x8                   	// #8
   140b0:	mov	x2, xzr
   140b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   140b8:	ldr	w8, [sp, #120]
   140bc:	b	127c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc3c>
   140c0:	add	x15, x11, x10, lsl #4
   140c4:	add	x10, x11, x10, lsl #4
   140c8:	cmp	x15, x10
   140cc:	b.eq	14708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b84>  // b.none
   140d0:	ldr	w10, [x15, #8]
   140d4:	cmp	w8, w9
   140d8:	sub	w19, w10, #0x1
   140dc:	b.cs	14530 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x29ac>  // b.hs, b.nlast
   140e0:	ldr	x9, [sp, #112]
   140e4:	str	x19, [x9, w8, uxtw #3]
   140e8:	ldp	w8, w9, [sp, #120]
   140ec:	cmp	w8, w9
   140f0:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   140f4:	add	w8, w8, #0x1
   140f8:	str	w8, [sp, #120]
   140fc:	ldr	w9, [x25, #20]
   14100:	and	x8, x9, #0xfffffff
   14104:	cbz	w8, 148d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d54>
   14108:	tbnz	w9, #30, 1411c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2598>
   1410c:	mov	w9, #0x18                  	// #24
   14110:	mneg	x8, x8, x9
   14114:	add	x8, x25, x8
   14118:	b	14120 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x259c>
   1411c:	ldur	x8, [x25, #-8]
   14120:	ldr	x1, [x8]
   14124:	ldr	x0, [sp, #48]
   14128:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1412c:	ldp	w8, w9, [sp, #120]
   14130:	mov	w19, w0
   14134:	cmp	w8, w9
   14138:	b.cs	1454c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x29c8>  // b.hs, b.nlast
   1413c:	ldr	x9, [sp, #112]
   14140:	str	x19, [x9, w8, uxtw #3]
   14144:	ldp	w8, w9, [sp, #120]
   14148:	cmp	w8, w9
   1414c:	b.cs	146a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b24>  // b.hs, b.nlast
   14150:	add	w8, w8, #0x1
   14154:	mov	x21, x26
   14158:	mov	w26, #0xb                   	// #11
   1415c:	str	w8, [sp, #120]
   14160:	mov	w3, #0x6                   	// #6
   14164:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   14168:	mov	x21, x26
   1416c:	mov	w3, wzr
   14170:	mov	w26, #0xa                   	// #10
   14174:	b	12524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9a0>
   14178:	ldr	x1, [sp, #56]
   1417c:	add	x0, sp, #0x70
   14180:	mov	w3, #0x8                   	// #8
   14184:	mov	x2, xzr
   14188:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1418c:	ldr	w8, [sp, #120]
   14190:	b	12d84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1200>
   14194:	ldr	x1, [sp, #56]
   14198:	add	x0, sp, #0x70
   1419c:	mov	w3, #0x8                   	// #8
   141a0:	mov	x2, xzr
   141a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   141a8:	ldr	w8, [sp, #120]
   141ac:	b	12dac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1228>
   141b0:	ldr	x1, [sp, #56]
   141b4:	add	x0, sp, #0x70
   141b8:	mov	w3, #0x8                   	// #8
   141bc:	mov	x2, xzr
   141c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   141c4:	ldr	w8, [sp, #120]
   141c8:	b	12efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1378>
   141cc:	ldr	x1, [sp, #56]
   141d0:	add	x0, sp, #0x70
   141d4:	mov	w3, #0x8                   	// #8
   141d8:	mov	x2, xzr
   141dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   141e0:	ldr	w8, [sp, #120]
   141e4:	b	13050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x14cc>
   141e8:	ldr	x1, [sp, #56]
   141ec:	add	x0, sp, #0x70
   141f0:	mov	w3, #0x8                   	// #8
   141f4:	mov	x2, xzr
   141f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   141fc:	ldr	w8, [sp, #120]
   14200:	b	13088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1504>
   14204:	ldr	x1, [sp, #56]
   14208:	add	x0, sp, #0x70
   1420c:	mov	w3, #0x8                   	// #8
   14210:	mov	x2, xzr
   14214:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14218:	ldr	w8, [sp, #120]
   1421c:	b	130c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x153c>
   14220:	ldr	x1, [sp, #56]
   14224:	add	x0, sp, #0x70
   14228:	mov	w3, #0x8                   	// #8
   1422c:	mov	x2, xzr
   14230:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14234:	ldr	w8, [sp, #120]
   14238:	b	13334 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x17b0>
   1423c:	ldr	x1, [sp, #56]
   14240:	add	x0, sp, #0x70
   14244:	mov	w3, #0x8                   	// #8
   14248:	mov	x2, xzr
   1424c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14250:	ldr	w8, [sp, #120]
   14254:	b	13390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x180c>
   14258:	ldr	x1, [sp, #56]
   1425c:	add	x0, sp, #0x70
   14260:	mov	w3, #0x8                   	// #8
   14264:	mov	x2, xzr
   14268:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1426c:	ldr	w8, [sp, #120]
   14270:	b	133f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x186c>
   14274:	ldr	x1, [sp, #56]
   14278:	add	x0, sp, #0x70
   1427c:	mov	w3, #0x8                   	// #8
   14280:	mov	x2, xzr
   14284:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14288:	ldr	w8, [sp, #120]
   1428c:	b	13424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x18a0>
   14290:	ldr	x1, [sp, #56]
   14294:	add	x0, sp, #0x70
   14298:	mov	w3, #0x8                   	// #8
   1429c:	mov	x2, xzr
   142a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   142a4:	ldr	w8, [sp, #120]
   142a8:	b	13114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1590>
   142ac:	ldr	x1, [sp, #56]
   142b0:	add	x0, sp, #0x70
   142b4:	mov	w3, #0x8                   	// #8
   142b8:	mov	x2, xzr
   142bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   142c0:	ldr	w8, [sp, #120]
   142c4:	b	13470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x18ec>
   142c8:	ldr	x1, [sp, #56]
   142cc:	add	x0, sp, #0x70
   142d0:	mov	w3, #0x8                   	// #8
   142d4:	mov	x2, xzr
   142d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   142dc:	ldr	w8, [sp, #120]
   142e0:	b	135d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a54>
   142e4:	ldr	x1, [sp, #56]
   142e8:	add	x0, sp, #0x70
   142ec:	mov	w3, #0x8                   	// #8
   142f0:	mov	x2, xzr
   142f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   142f8:	ldr	w8, [sp, #120]
   142fc:	b	13660 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1adc>
   14300:	ldr	x1, [sp, #56]
   14304:	add	x0, sp, #0x70
   14308:	mov	w3, #0x8                   	// #8
   1430c:	mov	x2, xzr
   14310:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14314:	ldr	w8, [sp, #120]
   14318:	b	136c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b3c>
   1431c:	ldr	x1, [sp, #56]
   14320:	add	x0, sp, #0x70
   14324:	mov	w3, #0x8                   	// #8
   14328:	mov	x2, xzr
   1432c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14330:	ldr	w8, [sp, #120]
   14334:	b	13720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b9c>
   14338:	ldr	x1, [sp, #56]
   1433c:	add	x0, sp, #0x70
   14340:	mov	w3, #0x8                   	// #8
   14344:	mov	x2, xzr
   14348:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1434c:	ldr	w8, [sp, #120]
   14350:	b	137f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c6c>
   14354:	ldr	x1, [sp, #56]
   14358:	add	x0, sp, #0x70
   1435c:	mov	w3, #0x8                   	// #8
   14360:	mov	x2, xzr
   14364:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14368:	ldr	w8, [sp, #120]
   1436c:	b	13840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1cbc>
   14370:	ldr	x1, [sp, #56]
   14374:	add	x0, sp, #0x70
   14378:	mov	w3, #0x8                   	// #8
   1437c:	mov	x2, xzr
   14380:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14384:	ldr	w8, [sp, #120]
   14388:	b	13aa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f1c>
   1438c:	ldr	x1, [sp, #56]
   14390:	add	x0, sp, #0x70
   14394:	mov	w3, #0x8                   	// #8
   14398:	mov	x2, xzr
   1439c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   143a0:	ldr	w8, [sp, #120]
   143a4:	b	13afc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f78>
   143a8:	ldr	x1, [sp, #56]
   143ac:	add	x0, sp, #0x70
   143b0:	mov	w3, #0x8                   	// #8
   143b4:	mov	x2, xzr
   143b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   143bc:	ldr	w8, [sp, #120]
   143c0:	b	13bcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2048>
   143c4:	ldr	x1, [sp, #56]
   143c8:	add	x0, sp, #0x70
   143cc:	mov	w3, #0x8                   	// #8
   143d0:	mov	x2, xzr
   143d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   143d8:	ldr	w8, [sp, #120]
   143dc:	b	13c2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x20a8>
   143e0:	ldr	x1, [sp, #56]
   143e4:	add	x0, sp, #0x70
   143e8:	mov	w3, #0x8                   	// #8
   143ec:	mov	x2, xzr
   143f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   143f4:	ldr	w8, [sp, #120]
   143f8:	b	13c78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x20f4>
   143fc:	ldr	x1, [sp, #56]
   14400:	add	x0, sp, #0x70
   14404:	mov	w3, #0x8                   	// #8
   14408:	mov	x2, xzr
   1440c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14410:	ldr	w8, [sp, #120]
   14414:	b	13cd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2154>
   14418:	ldr	x1, [sp, #56]
   1441c:	add	x0, sp, #0x70
   14420:	mov	w3, #0x8                   	// #8
   14424:	mov	x2, xzr
   14428:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1442c:	ldr	w8, [sp, #120]
   14430:	b	13f88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2404>
   14434:	ldr	x1, [sp, #56]
   14438:	add	x0, sp, #0x70
   1443c:	mov	w3, #0x8                   	// #8
   14440:	mov	x2, xzr
   14444:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14448:	ldr	w8, [sp, #120]
   1444c:	b	13fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2464>
   14450:	ldr	x1, [sp, #56]
   14454:	add	x0, sp, #0x70
   14458:	mov	w3, #0x8                   	// #8
   1445c:	mov	x2, xzr
   14460:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14464:	ldr	w8, [sp, #120]
   14468:	b	14048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24c4>
   1446c:	ldr	x1, [sp, #56]
   14470:	add	x0, sp, #0x70
   14474:	mov	w3, #0x8                   	// #8
   14478:	mov	x2, xzr
   1447c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14480:	ldr	w8, [sp, #120]
   14484:	b	134a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1924>
   14488:	ldr	x1, [sp, #56]
   1448c:	add	x0, sp, #0x70
   14490:	mov	w3, #0x8                   	// #8
   14494:	mov	x2, xzr
   14498:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1449c:	ldr	w8, [sp, #120]
   144a0:	b	13f24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x23a0>
   144a4:	ldr	x1, [sp, #56]
   144a8:	add	x0, sp, #0x70
   144ac:	mov	w3, #0x8                   	// #8
   144b0:	mov	x2, xzr
   144b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   144b8:	ldr	w8, [sp, #120]
   144bc:	b	13174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x15f0>
   144c0:	ldr	x1, [sp, #56]
   144c4:	add	x0, sp, #0x70
   144c8:	mov	w3, #0x8                   	// #8
   144cc:	mov	x2, xzr
   144d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   144d4:	ldr	w8, [sp, #120]
   144d8:	b	1350c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1988>
   144dc:	ldr	x1, [sp, #56]
   144e0:	add	x0, sp, #0x70
   144e4:	mov	w3, #0x8                   	// #8
   144e8:	mov	x2, xzr
   144ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   144f0:	ldr	w8, [sp, #120]
   144f4:	b	1389c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d18>
   144f8:	ldr	x1, [sp, #56]
   144fc:	add	x0, sp, #0x70
   14500:	mov	w3, #0x8                   	// #8
   14504:	mov	x2, xzr
   14508:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1450c:	ldr	w8, [sp, #120]
   14510:	b	13e3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x22b8>
   14514:	ldr	x1, [sp, #56]
   14518:	add	x0, sp, #0x70
   1451c:	mov	w3, #0x8                   	// #8
   14520:	mov	x2, xzr
   14524:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14528:	ldr	w8, [sp, #120]
   1452c:	b	13e9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2318>
   14530:	ldr	x1, [sp, #56]
   14534:	add	x0, sp, #0x70
   14538:	mov	w3, #0x8                   	// #8
   1453c:	mov	x2, xzr
   14540:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14544:	ldr	w8, [sp, #120]
   14548:	b	140e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x255c>
   1454c:	ldr	x1, [sp, #56]
   14550:	add	x0, sp, #0x70
   14554:	mov	w3, #0x8                   	// #8
   14558:	mov	x2, xzr
   1455c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14560:	ldr	w8, [sp, #120]
   14564:	b	1413c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x25b8>
   14568:	ldr	x1, [sp, #56]
   1456c:	add	x0, sp, #0x70
   14570:	mov	w3, #0x8                   	// #8
   14574:	mov	x2, xzr
   14578:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1457c:	ldr	w8, [sp, #120]
   14580:	b	13ed4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2350>
   14584:	ldr	x0, [x27]
   14588:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1458c:	ldr	x0, [sp, #112]
   14590:	add	x8, sp, #0x70
   14594:	add	x8, x8, #0x10
   14598:	cmp	x0, x8
   1459c:	b.eq	145a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a20>  // b.none
   145a0:	bl	0 <free>
   145a4:	add	sp, sp, #0x2d0
   145a8:	ldp	x20, x19, [sp, #96]
   145ac:	ldp	x22, x21, [sp, #80]
   145b0:	ldp	x24, x23, [sp, #64]
   145b4:	ldp	x26, x25, [sp, #48]
   145b8:	ldp	x28, x27, [sp, #32]
   145bc:	ldp	x29, x30, [sp, #16]
   145c0:	ldr	d8, [sp], #112
   145c4:	ret
   145c8:	mov	w3, #0x10                  	// #16
   145cc:	mov	x0, x23
   145d0:	mov	x1, x24
   145d4:	mov	x2, xzr
   145d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   145dc:	ldr	w8, [x22, #24]
   145e0:	b	11c98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x114>
   145e4:	mov	w3, #0x10                  	// #16
   145e8:	mov	x0, x23
   145ec:	mov	x1, x24
   145f0:	mov	x2, xzr
   145f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   145f8:	ldr	w8, [x22, #24]
   145fc:	b	11ce8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x164>
   14600:	mov	w3, #0x10                  	// #16
   14604:	mov	x0, x23
   14608:	mov	x1, x24
   1460c:	mov	x2, xzr
   14610:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14614:	ldr	w8, [x22, #24]
   14618:	b	11ecc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x348>
   1461c:	mov	w3, #0x10                  	// #16
   14620:	mov	x0, x23
   14624:	mov	x1, x24
   14628:	mov	x2, xzr
   1462c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14630:	ldr	w8, [x22, #24]
   14634:	b	11f0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x388>
   14638:	mov	w3, #0x10                  	// #16
   1463c:	mov	x0, x23
   14640:	mov	x1, x24
   14644:	mov	x2, xzr
   14648:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1464c:	ldr	w8, [x22, #24]
   14650:	b	120fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x578>
   14654:	mov	w3, #0x10                  	// #16
   14658:	mov	x0, x23
   1465c:	mov	x1, x24
   14660:	mov	x2, xzr
   14664:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14668:	ldr	w8, [x22, #24]
   1466c:	b	12144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x5c0>
   14670:	mov	w3, #0x10                  	// #16
   14674:	mov	x0, x23
   14678:	mov	x1, x24
   1467c:	mov	x2, xzr
   14680:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14684:	ldr	w8, [x22, #24]
   14688:	b	12334 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x7b0>
   1468c:	mov	w3, #0x10                  	// #16
   14690:	mov	x0, x23
   14694:	mov	x1, x24
   14698:	mov	x2, xzr
   1469c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   146a0:	ldr	w8, [x22, #24]
   146a4:	b	12374 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x7f0>
   146a8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   146ac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   146b0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   146b4:	add	x0, x0, #0x0
   146b8:	add	x1, x1, #0x0
   146bc:	add	x3, x3, #0x0
   146c0:	mov	w2, #0x43                  	// #67
   146c4:	bl	0 <__assert_fail>
   146c8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   146cc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   146d0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   146d4:	add	x0, x0, #0x0
   146d8:	add	x1, x1, #0x0
   146dc:	add	x3, x3, #0x0
   146e0:	mov	w2, #0x69                  	// #105
   146e4:	bl	0 <__assert_fail>
   146e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   146ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   146f0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   146f4:	add	x0, x0, #0x0
   146f8:	add	x1, x1, #0x0
   146fc:	add	x3, x3, #0x0
   14700:	mov	w2, #0x252                 	// #594
   14704:	bl	0 <__assert_fail>
   14708:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1470c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14710:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14714:	add	x0, x0, #0x0
   14718:	add	x1, x1, #0x0
   1471c:	add	x3, x3, #0x0
   14720:	mov	w2, #0xa9                  	// #169
   14724:	bl	0 <__assert_fail>
   14728:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1472c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14730:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14734:	add	x0, x0, #0x0
   14738:	add	x1, x1, #0x0
   1473c:	add	x3, x3, #0x0
   14740:	mov	w2, #0x108                 	// #264
   14744:	bl	0 <__assert_fail>
   14748:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1474c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14750:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14754:	add	x0, x0, #0x0
   14758:	add	x1, x1, #0x0
   1475c:	add	x3, x3, #0x0
   14760:	mov	w2, #0x108                 	// #264
   14764:	bl	0 <__assert_fail>
   14768:	mov	x0, x25
   1476c:	bl	0 <_ZNK4llvm5Value4dumpEv>
   14770:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14774:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14778:	add	x0, x0, #0x0
   1477c:	add	x1, x1, #0x0
   14780:	mov	w2, #0x9df                 	// #2527
   14784:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   14788:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1478c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14790:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14794:	add	x0, x0, #0x0
   14798:	add	x1, x1, #0x0
   1479c:	add	x3, x3, #0x0
   147a0:	mov	w2, #0x657                 	// #1623
   147a4:	bl	0 <__assert_fail>
   147a8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   147ac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   147b0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   147b4:	add	x0, x0, #0x0
   147b8:	add	x1, x1, #0x0
   147bc:	add	x3, x3, #0x0
   147c0:	mov	w2, #0x94f                 	// #2383
   147c4:	bl	0 <__assert_fail>
   147c8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   147cc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   147d0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   147d4:	add	x0, x0, #0x0
   147d8:	add	x1, x1, #0x0
   147dc:	add	x3, x3, #0x0
   147e0:	mov	w2, #0x69                  	// #105
   147e4:	bl	0 <__assert_fail>
   147e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   147ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   147f0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   147f4:	add	x0, x0, #0x0
   147f8:	add	x1, x1, #0x0
   147fc:	add	x3, x3, #0x0
   14800:	mov	w2, #0x108                 	// #264
   14804:	bl	0 <__assert_fail>
   14808:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1480c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14810:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14814:	add	x0, x0, #0x0
   14818:	add	x1, x1, #0x0
   1481c:	add	x3, x3, #0x0
   14820:	mov	w2, #0x69                  	// #105
   14824:	bl	0 <__assert_fail>
   14828:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1482c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14830:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14834:	add	x0, x0, #0x0
   14838:	add	x1, x1, #0x0
   1483c:	add	x3, x3, #0x0
   14840:	mov	w2, #0x108                 	// #264
   14844:	bl	0 <__assert_fail>
   14848:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1484c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14850:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14854:	add	x0, x0, #0x0
   14858:	add	x1, x1, #0x0
   1485c:	add	x3, x3, #0x0
   14860:	mov	w2, #0x69                  	// #105
   14864:	bl	0 <__assert_fail>
   14868:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1486c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14870:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14874:	add	x0, x0, #0x0
   14878:	add	x1, x1, #0x0
   1487c:	add	x3, x3, #0x0
   14880:	mov	w2, #0x992                 	// #2450
   14884:	bl	0 <__assert_fail>
   14888:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1488c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14890:	add	x0, x0, #0x0
   14894:	add	x1, x1, #0x0
   14898:	mov	w2, #0x1f8                 	// #504
   1489c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   148a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   148a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   148a8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   148ac:	add	x0, x0, #0x0
   148b0:	add	x1, x1, #0x0
   148b4:	add	x3, x3, #0x0
   148b8:	mov	w2, #0x987                 	// #2439
   148bc:	bl	0 <__assert_fail>
   148c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   148c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   148c8:	add	x0, x0, #0x0
   148cc:	add	x1, x1, #0x0
   148d0:	mov	w2, #0x212                 	// #530
   148d4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   148d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   148dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   148e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   148e4:	add	x0, x0, #0x0
   148e8:	add	x1, x1, #0x0
   148ec:	add	x3, x3, #0x0
   148f0:	mov	w2, #0xaa                  	// #170
   148f4:	bl	0 <__assert_fail>

00000000000148f8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>:
   148f8:	stp	x29, x30, [sp, #-16]!
   148fc:	mov	x29, sp
   14900:	cbz	x0, 14a18 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x120>
   14904:	ldrb	w8, [x0, #16]
   14908:	cmp	w8, #0x18
   1490c:	b.cc	14958 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x60>  // b.lo, b.ul, b.last
   14910:	sub	w9, w8, #0x25
   14914:	ror	w9, w9, #1
   14918:	cmp	w9, #0x6
   1491c:	b.hi	14934 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x3c>  // b.pmore
   14920:	mov	w10, #0x1                   	// #1
   14924:	lsl	w9, w10, w9
   14928:	mov	w10, #0x47                  	// #71
   1492c:	tst	w9, w10
   14930:	b.ne	14988 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x90>  // b.any
   14934:	cmp	w8, #0x33
   14938:	b.hi	149c4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>  // b.pmore
   1493c:	mov	w9, #0x1                   	// #1
   14940:	lsl	x8, x9, x8
   14944:	mov	x9, #0x180000000000        	// #26388279066624
   14948:	movk	x9, #0xc, lsl #48
   1494c:	tst	x8, x9
   14950:	b.ne	149b4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xbc>  // b.any
   14954:	b	149c4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>
   14958:	cmp	w8, #0x5
   1495c:	b.ne	149c4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>  // b.any
   14960:	ldrh	w8, [x0, #18]
   14964:	sub	w9, w8, #0xd
   14968:	ror	w9, w9, #1
   1496c:	cmp	w9, #0x6
   14970:	b.hi	14998 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xa0>  // b.pmore
   14974:	mov	w10, #0x1                   	// #1
   14978:	lsl	w9, w10, w9
   1497c:	mov	w10, #0x47                  	// #71
   14980:	tst	w9, w10
   14984:	b.eq	14998 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xa0>  // b.none
   14988:	ldrb	w8, [x0, #17]
   1498c:	ubfx	x0, x8, #1, #2
   14990:	ldp	x29, x30, [sp], #16
   14994:	ret
   14998:	cmp	w8, #0x1b
   1499c:	b.hi	149c4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>  // b.pmore
   149a0:	mov	w9, #0x1                   	// #1
   149a4:	lsl	w8, w9, w8
   149a8:	mov	w9, #0xc180000             	// #202899456
   149ac:	tst	w8, w9
   149b0:	b.eq	149c4 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>  // b.none
   149b4:	ldrb	w8, [x0, #17]
   149b8:	ubfx	x0, x8, #1, #1
   149bc:	ldp	x29, x30, [sp], #16
   149c0:	ret
   149c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   149c8:	cbz	x0, 149bc <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xc4>
   149cc:	ldrsb	w8, [x0, #17]
   149d0:	mov	w9, #0xffffff82            	// #-126
   149d4:	ubfx	w10, w8, #1, #7
   149d8:	orr	w11, w10, w8, lsl #6
   149dc:	and	w9, w11, w9
   149e0:	and	w11, w10, #0x4
   149e4:	orr	w9, w9, w11
   149e8:	and	w11, w10, #0x8
   149ec:	orr	w9, w9, w11
   149f0:	and	w11, w10, #0x10
   149f4:	and	w10, w10, #0x20
   149f8:	orr	w9, w9, w11
   149fc:	orr	w9, w9, w10
   14a00:	and	x9, x9, #0xfe
   14a04:	orr	x10, x9, #0x40
   14a08:	cmp	w8, #0x0
   14a0c:	csel	x0, x10, x9, lt  // lt = tstop
   14a10:	ldp	x29, x30, [sp], #16
   14a14:	ret
   14a18:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14a1c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14a20:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14a24:	add	x0, x0, #0x0
   14a28:	add	x1, x1, #0x0
   14a2c:	add	x3, x3, #0x0
   14a30:	mov	w2, #0x69                  	// #105
   14a34:	bl	0 <__assert_fail>

0000000000014a38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv>:
   14a38:	sub	sp, sp, #0x50
   14a3c:	stp	x29, x30, [sp, #32]
   14a40:	stp	x22, x21, [sp, #48]
   14a44:	stp	x20, x19, [sp, #64]
   14a48:	add	x29, sp, #0x20
   14a4c:	mov	x19, x0
   14a50:	mov	w0, #0x220                 	// #544
   14a54:	bl	0 <_Znwm>
   14a58:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14a5c:	ldr	x8, [x8]
   14a60:	movi	v0.2s, #0x1
   14a64:	str	d0, [x0, #8]
   14a68:	movi	v0.2d, #0x0
   14a6c:	mov	x22, x0
   14a70:	add	x8, x8, #0x10
   14a74:	mov	x21, x0
   14a78:	mov	w9, #0x20                  	// #32
   14a7c:	str	x8, [x0]
   14a80:	mov	w8, #0x1                   	// #1
   14a84:	stp	q0, q0, [x0, #48]
   14a88:	stp	q0, q0, [x0, #80]
   14a8c:	stp	q0, q0, [x0, #112]
   14a90:	stp	q0, q0, [x0, #144]
   14a94:	stp	q0, q0, [x0, #176]
   14a98:	stp	q0, q0, [x0, #208]
   14a9c:	stp	q0, q0, [x0, #240]
   14aa0:	stp	q0, q0, [x0, #272]
   14aa4:	stp	q0, q0, [x0, #304]
   14aa8:	stp	q0, q0, [x0, #336]
   14aac:	stp	q0, q0, [x0, #368]
   14ab0:	stp	q0, q0, [x0, #400]
   14ab4:	stp	q0, q0, [x0, #432]
   14ab8:	stp	q0, q0, [x0, #464]
   14abc:	stp	q0, q0, [x0, #496]
   14ac0:	str	q0, [x22, #32]!
   14ac4:	ldur	w12, [x29, #-5]
   14ac8:	str	q0, [x0, #528]
   14acc:	str	x22, [x21, #16]!
   14ad0:	stp	w8, w9, [x0, #24]
   14ad4:	ldur	w9, [x29, #-8]
   14ad8:	mov	w10, #0x7                   	// #7
   14adc:	str	x10, [x22]
   14ae0:	mov	w11, #0xff                  	// #255
   14ae4:	str	w12, [x0, #44]
   14ae8:	stur	w9, [x0, #41]
   14aec:	ldr	w9, [x0, #28]
   14af0:	ldur	w10, [x29, #-8]
   14af4:	strb	w11, [x0, #40]
   14af8:	ldur	w11, [x29, #-5]
   14afc:	str	x8, [x0, #48]
   14b00:	mov	w8, w8
   14b04:	mov	w12, #0x2                   	// #2
   14b08:	cmp	w8, w9
   14b0c:	strb	w12, [x0, #56]
   14b10:	str	w11, [x0, #60]
   14b14:	stur	w10, [x0, #57]
   14b18:	b.cs	14e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14b1c:	add	w8, w8, #0x1
   14b20:	mov	x20, x0
   14b24:	cmp	w8, w9
   14b28:	str	w8, [x0, #24]
   14b2c:	b.cs	14d94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x35c>  // b.hs, b.nlast
   14b30:	ldr	x9, [x20, #16]
   14b34:	mov	w10, #0x6                   	// #6
   14b38:	mov	w11, #0x4                   	// #4
   14b3c:	add	x8, x9, w8, uxtw #4
   14b40:	str	x10, [x8]
   14b44:	strb	w11, [x8, #8]
   14b48:	ldur	w9, [x29, #-5]
   14b4c:	ldur	w10, [x29, #-8]
   14b50:	str	w9, [x8, #12]
   14b54:	stur	w10, [x8, #9]
   14b58:	ldp	w8, w9, [x20, #24]
   14b5c:	cmp	w8, w9
   14b60:	b.cs	14e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14b64:	add	w8, w8, #0x1
   14b68:	cmp	w8, w9
   14b6c:	str	w8, [x20, #24]
   14b70:	b.cs	14db0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x378>  // b.hs, b.nlast
   14b74:	ldr	x9, [x20, #16]
   14b78:	mov	w10, #0x8                   	// #8
   14b7c:	mov	w11, #0x4                   	// #4
   14b80:	add	x8, x9, w8, uxtw #4
   14b84:	str	x10, [x8]
   14b88:	strb	w11, [x8, #8]
   14b8c:	ldur	w9, [x29, #-5]
   14b90:	ldur	w10, [x29, #-8]
   14b94:	str	w9, [x8, #12]
   14b98:	stur	w10, [x8, #9]
   14b9c:	ldp	w8, w9, [x20, #24]
   14ba0:	cmp	w8, w9
   14ba4:	b.cs	14e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14ba8:	add	w8, w8, #0x1
   14bac:	cmp	w8, w9
   14bb0:	str	w8, [x20, #24]
   14bb4:	b.cs	14dcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x394>  // b.hs, b.nlast
   14bb8:	ldr	x9, [x20, #16]
   14bbc:	mov	w10, #0x6                   	// #6
   14bc0:	mov	w11, #0x4                   	// #4
   14bc4:	add	x8, x9, w8, uxtw #4
   14bc8:	str	x10, [x8]
   14bcc:	strb	w11, [x8, #8]
   14bd0:	ldur	w9, [x29, #-5]
   14bd4:	ldur	w10, [x29, #-8]
   14bd8:	str	w9, [x8, #12]
   14bdc:	stur	w10, [x8, #9]
   14be0:	ldp	w8, w9, [x20, #24]
   14be4:	cmp	w8, w9
   14be8:	b.cs	14e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14bec:	add	w8, w8, #0x1
   14bf0:	cmp	w8, w9
   14bf4:	str	w8, [x20, #24]
   14bf8:	b.cs	14de8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3b0>  // b.hs, b.nlast
   14bfc:	ldr	x9, [x20, #16]
   14c00:	mov	w10, #0x6                   	// #6
   14c04:	mov	w11, #0x4                   	// #4
   14c08:	add	x8, x9, w8, uxtw #4
   14c0c:	str	x10, [x8]
   14c10:	strb	w11, [x8, #8]
   14c14:	ldur	w9, [x29, #-5]
   14c18:	ldur	w10, [x29, #-8]
   14c1c:	str	w9, [x8, #12]
   14c20:	stur	w10, [x8, #9]
   14c24:	ldp	w8, w9, [x20, #24]
   14c28:	cmp	w8, w9
   14c2c:	b.cs	14e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14c30:	add	w8, w8, #0x1
   14c34:	cmp	w8, w9
   14c38:	str	w8, [x20, #24]
   14c3c:	b.cs	14e04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3cc>  // b.hs, b.nlast
   14c40:	ldr	x9, [x20, #16]
   14c44:	mov	w10, #0x1                   	// #1
   14c48:	mov	w11, #0x2                   	// #2
   14c4c:	add	x8, x9, w8, uxtw #4
   14c50:	str	x10, [x8]
   14c54:	strb	w11, [x8, #8]
   14c58:	ldur	w9, [x29, #-5]
   14c5c:	ldur	w10, [x29, #-8]
   14c60:	str	w9, [x8, #12]
   14c64:	stur	w10, [x8, #9]
   14c68:	ldp	w8, w9, [x20, #24]
   14c6c:	cmp	w8, w9
   14c70:	b.cs	14e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14c74:	add	w8, w8, #0x1
   14c78:	str	w8, [x20, #24]
   14c7c:	ldr	x19, [x19]
   14c80:	mov	x1, x21
   14c84:	stp	x21, x20, [sp, #8]
   14c88:	mov	x0, x19
   14c8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14c90:	ldp	x1, x8, [x19, #32]
   14c94:	add	x20, x19, #0x18
   14c98:	cmp	x1, x8
   14c9c:	b.eq	14cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x284>  // b.none
   14ca0:	stp	x21, xzr, [x1]
   14ca4:	ldr	x9, [sp, #16]
   14ca8:	add	x8, x1, #0x10
   14cac:	stp	xzr, xzr, [sp, #8]
   14cb0:	str	x9, [x1, #8]
   14cb4:	str	x8, [x19, #32]
   14cb8:	b	14ccc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x294>
   14cbc:	add	x2, sp, #0x8
   14cc0:	mov	x0, x20
   14cc4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14cc8:	ldr	x8, [x19, #32]
   14ccc:	ldr	x9, [x20]
   14cd0:	ldr	x20, [sp, #16]
   14cd4:	sub	x8, x8, x9
   14cd8:	lsr	x8, x8, #4
   14cdc:	add	w19, w8, #0x3
   14ce0:	cbz	x20, 14d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>
   14ce4:	adrp	x21, 0 <__pthread_key_create>
   14ce8:	ldr	x21, [x21]
   14cec:	add	x8, x20, #0x8
   14cf0:	cbz	x21, 14d10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x2d8>
   14cf4:	ldaxr	w9, [x8]
   14cf8:	sub	w10, w9, #0x1
   14cfc:	stlxr	w11, w10, [x8]
   14d00:	cbnz	w11, 14cf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x2bc>
   14d04:	cmp	w9, #0x1
   14d08:	b.eq	14d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x2ec>  // b.none
   14d0c:	b	14d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>
   14d10:	ldr	w9, [x8]
   14d14:	sub	w10, w9, #0x1
   14d18:	str	w10, [x8]
   14d1c:	cmp	w9, #0x1
   14d20:	b.ne	14d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>  // b.any
   14d24:	mov	x22, x20
   14d28:	ldr	x8, [x22], #12
   14d2c:	mov	x0, x20
   14d30:	ldr	x8, [x8, #16]
   14d34:	blr	x8
   14d38:	cbz	x21, 14d7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x344>
   14d3c:	ldaxr	w8, [x22]
   14d40:	sub	w9, w8, #0x1
   14d44:	stlxr	w10, w9, [x22]
   14d48:	cbnz	w10, 14d3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x304>
   14d4c:	cmp	w8, #0x1
   14d50:	b.ne	14d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>  // b.any
   14d54:	ldr	x8, [x20]
   14d58:	mov	x0, x20
   14d5c:	ldr	x8, [x8, #24]
   14d60:	blr	x8
   14d64:	mov	w0, w19
   14d68:	ldp	x20, x19, [sp, #64]
   14d6c:	ldp	x22, x21, [sp, #48]
   14d70:	ldp	x29, x30, [sp, #32]
   14d74:	add	sp, sp, #0x50
   14d78:	ret
   14d7c:	ldr	w8, [x22]
   14d80:	sub	w9, w8, #0x1
   14d84:	str	w9, [x22]
   14d88:	cmp	w8, #0x1
   14d8c:	b.eq	14d54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x31c>  // b.none
   14d90:	b	14d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>
   14d94:	mov	w3, #0x10                  	// #16
   14d98:	mov	x0, x21
   14d9c:	mov	x1, x22
   14da0:	mov	x2, xzr
   14da4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14da8:	ldr	w8, [x20, #24]
   14dac:	b	14b30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0xf8>
   14db0:	mov	w3, #0x10                  	// #16
   14db4:	mov	x0, x21
   14db8:	mov	x1, x22
   14dbc:	mov	x2, xzr
   14dc0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14dc4:	ldr	w8, [x20, #24]
   14dc8:	b	14b74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x13c>
   14dcc:	mov	w3, #0x10                  	// #16
   14dd0:	mov	x0, x21
   14dd4:	mov	x1, x22
   14dd8:	mov	x2, xzr
   14ddc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14de0:	ldr	w8, [x20, #24]
   14de4:	b	14bb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x180>
   14de8:	mov	w3, #0x10                  	// #16
   14dec:	mov	x0, x21
   14df0:	mov	x1, x22
   14df4:	mov	x2, xzr
   14df8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14dfc:	ldr	w8, [x20, #24]
   14e00:	b	14bfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x1c4>
   14e04:	mov	w3, #0x10                  	// #16
   14e08:	mov	x0, x21
   14e0c:	mov	x1, x22
   14e10:	mov	x2, xzr
   14e14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14e18:	ldr	w8, [x20, #24]
   14e1c:	b	14c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x208>
   14e20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14e24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14e28:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14e2c:	add	x0, x0, #0x0
   14e30:	add	x1, x1, #0x0
   14e34:	add	x3, x3, #0x0
   14e38:	mov	w2, #0x43                  	// #67
   14e3c:	bl	0 <__assert_fail>

0000000000014e40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv>:
   14e40:	sub	sp, sp, #0x50
   14e44:	stp	x29, x30, [sp, #32]
   14e48:	stp	x22, x21, [sp, #48]
   14e4c:	stp	x20, x19, [sp, #64]
   14e50:	add	x29, sp, #0x20
   14e54:	mov	x19, x0
   14e58:	mov	w0, #0x220                 	// #544
   14e5c:	bl	0 <_Znwm>
   14e60:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14e64:	ldr	x8, [x8]
   14e68:	movi	v0.2s, #0x1
   14e6c:	str	d0, [x0, #8]
   14e70:	movi	v0.2d, #0x0
   14e74:	mov	x22, x0
   14e78:	add	x8, x8, #0x10
   14e7c:	mov	x21, x0
   14e80:	mov	w9, #0x20                  	// #32
   14e84:	str	x8, [x0]
   14e88:	mov	w8, #0x1                   	// #1
   14e8c:	stp	q0, q0, [x0, #48]
   14e90:	stp	q0, q0, [x0, #80]
   14e94:	stp	q0, q0, [x0, #112]
   14e98:	stp	q0, q0, [x0, #144]
   14e9c:	stp	q0, q0, [x0, #176]
   14ea0:	stp	q0, q0, [x0, #208]
   14ea4:	stp	q0, q0, [x0, #240]
   14ea8:	stp	q0, q0, [x0, #272]
   14eac:	stp	q0, q0, [x0, #304]
   14eb0:	stp	q0, q0, [x0, #336]
   14eb4:	stp	q0, q0, [x0, #368]
   14eb8:	stp	q0, q0, [x0, #400]
   14ebc:	stp	q0, q0, [x0, #432]
   14ec0:	stp	q0, q0, [x0, #464]
   14ec4:	stp	q0, q0, [x0, #496]
   14ec8:	str	q0, [x22, #32]!
   14ecc:	ldur	w12, [x29, #-5]
   14ed0:	str	q0, [x0, #528]
   14ed4:	str	x22, [x21, #16]!
   14ed8:	stp	w8, w9, [x0, #24]
   14edc:	ldur	w9, [x29, #-8]
   14ee0:	mov	w10, #0xc                   	// #12
   14ee4:	str	x10, [x22]
   14ee8:	mov	w11, #0xff                  	// #255
   14eec:	str	w12, [x0, #44]
   14ef0:	stur	w9, [x0, #41]
   14ef4:	ldr	w9, [x0, #28]
   14ef8:	ldur	w10, [x29, #-8]
   14efc:	strb	w11, [x0, #40]
   14f00:	ldur	w11, [x29, #-5]
   14f04:	str	x8, [x0, #48]
   14f08:	mov	w8, w8
   14f0c:	mov	w12, #0x2                   	// #2
   14f10:	cmp	w8, w9
   14f14:	strb	w12, [x0, #56]
   14f18:	str	w11, [x0, #60]
   14f1c:	stur	w10, [x0, #57]
   14f20:	b.cs	15224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   14f24:	add	w8, w8, #0x1
   14f28:	mov	x20, x0
   14f2c:	cmp	w8, w9
   14f30:	str	w8, [x0, #24]
   14f34:	b.cs	15198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x358>  // b.hs, b.nlast
   14f38:	ldr	x9, [x20, #16]
   14f3c:	mov	w10, #0x6                   	// #6
   14f40:	mov	w11, #0x4                   	// #4
   14f44:	add	x8, x9, w8, uxtw #4
   14f48:	str	x10, [x8]
   14f4c:	strb	w11, [x8, #8]
   14f50:	ldur	w9, [x29, #-5]
   14f54:	ldur	w10, [x29, #-8]
   14f58:	str	w9, [x8, #12]
   14f5c:	stur	w10, [x8, #9]
   14f60:	ldp	w8, w9, [x20, #24]
   14f64:	cmp	w8, w9
   14f68:	b.cs	15224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   14f6c:	add	w8, w8, #0x1
   14f70:	cmp	w8, w9
   14f74:	str	w8, [x20, #24]
   14f78:	b.cs	151b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x374>  // b.hs, b.nlast
   14f7c:	ldr	x9, [x20, #16]
   14f80:	mov	w10, #0x1                   	// #1
   14f84:	mov	w11, #0x2                   	// #2
   14f88:	add	x8, x9, w8, uxtw #4
   14f8c:	str	x10, [x8]
   14f90:	strb	w11, [x8, #8]
   14f94:	ldur	w9, [x29, #-5]
   14f98:	ldur	w10, [x29, #-8]
   14f9c:	str	w9, [x8, #12]
   14fa0:	stur	w10, [x8, #9]
   14fa4:	ldp	w8, w9, [x20, #24]
   14fa8:	cmp	w8, w9
   14fac:	b.cs	15224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   14fb0:	add	w8, w8, #0x1
   14fb4:	cmp	w8, w9
   14fb8:	str	w8, [x20, #24]
   14fbc:	b.cs	151d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x390>  // b.hs, b.nlast
   14fc0:	ldr	x9, [x20, #16]
   14fc4:	mov	w10, #0x6                   	// #6
   14fc8:	mov	w11, #0x4                   	// #4
   14fcc:	add	x8, x9, w8, uxtw #4
   14fd0:	str	x10, [x8]
   14fd4:	strb	w11, [x8, #8]
   14fd8:	ldur	w9, [x29, #-5]
   14fdc:	ldur	w10, [x29, #-8]
   14fe0:	str	w9, [x8, #12]
   14fe4:	stur	w10, [x8, #9]
   14fe8:	ldp	w8, w9, [x20, #24]
   14fec:	cmp	w8, w9
   14ff0:	b.cs	15224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   14ff4:	add	w8, w8, #0x1
   14ff8:	cmp	w8, w9
   14ffc:	str	w8, [x20, #24]
   15000:	b.cs	151ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3ac>  // b.hs, b.nlast
   15004:	ldr	x9, [x20, #16]
   15008:	mov	w10, #0x6                   	// #6
   1500c:	add	x8, x9, w8, uxtw #4
   15010:	str	xzr, [x8]
   15014:	strb	w10, [x8, #8]
   15018:	ldur	w9, [x29, #-5]
   1501c:	ldur	w10, [x29, #-8]
   15020:	str	w9, [x8, #12]
   15024:	stur	w10, [x8, #9]
   15028:	ldp	w8, w9, [x20, #24]
   1502c:	cmp	w8, w9
   15030:	b.cs	15224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   15034:	add	w8, w8, #0x1
   15038:	cmp	w8, w9
   1503c:	str	w8, [x20, #24]
   15040:	b.cs	15208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3c8>  // b.hs, b.nlast
   15044:	ldr	x9, [x20, #16]
   15048:	mov	w10, #0x6                   	// #6
   1504c:	mov	w11, #0x4                   	// #4
   15050:	add	x8, x9, w8, uxtw #4
   15054:	str	x10, [x8]
   15058:	strb	w11, [x8, #8]
   1505c:	ldur	w9, [x29, #-5]
   15060:	ldur	w10, [x29, #-8]
   15064:	str	w9, [x8, #12]
   15068:	stur	w10, [x8, #9]
   1506c:	ldp	w8, w9, [x20, #24]
   15070:	cmp	w8, w9
   15074:	b.cs	15224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   15078:	add	w8, w8, #0x1
   1507c:	str	w8, [x20, #24]
   15080:	ldr	x19, [x19]
   15084:	mov	x1, x21
   15088:	stp	x21, x20, [sp, #8]
   1508c:	mov	x0, x19
   15090:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15094:	ldp	x1, x8, [x19, #32]
   15098:	add	x20, x19, #0x18
   1509c:	cmp	x1, x8
   150a0:	b.eq	150c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x280>  // b.none
   150a4:	stp	x21, xzr, [x1]
   150a8:	ldr	x9, [sp, #16]
   150ac:	add	x8, x1, #0x10
   150b0:	stp	xzr, xzr, [sp, #8]
   150b4:	str	x9, [x1, #8]
   150b8:	str	x8, [x19, #32]
   150bc:	b	150d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x290>
   150c0:	add	x2, sp, #0x8
   150c4:	mov	x0, x20
   150c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   150cc:	ldr	x8, [x19, #32]
   150d0:	ldr	x9, [x20]
   150d4:	ldr	x20, [sp, #16]
   150d8:	sub	x8, x8, x9
   150dc:	lsr	x8, x8, #4
   150e0:	add	w19, w8, #0x3
   150e4:	cbz	x20, 15168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>
   150e8:	adrp	x21, 0 <__pthread_key_create>
   150ec:	ldr	x21, [x21]
   150f0:	add	x8, x20, #0x8
   150f4:	cbz	x21, 15114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x2d4>
   150f8:	ldaxr	w9, [x8]
   150fc:	sub	w10, w9, #0x1
   15100:	stlxr	w11, w10, [x8]
   15104:	cbnz	w11, 150f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x2b8>
   15108:	cmp	w9, #0x1
   1510c:	b.eq	15128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x2e8>  // b.none
   15110:	b	15168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>
   15114:	ldr	w9, [x8]
   15118:	sub	w10, w9, #0x1
   1511c:	str	w10, [x8]
   15120:	cmp	w9, #0x1
   15124:	b.ne	15168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>  // b.any
   15128:	mov	x22, x20
   1512c:	ldr	x8, [x22], #12
   15130:	mov	x0, x20
   15134:	ldr	x8, [x8, #16]
   15138:	blr	x8
   1513c:	cbz	x21, 15180 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x340>
   15140:	ldaxr	w8, [x22]
   15144:	sub	w9, w8, #0x1
   15148:	stlxr	w10, w9, [x22]
   1514c:	cbnz	w10, 15140 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x300>
   15150:	cmp	w8, #0x1
   15154:	b.ne	15168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>  // b.any
   15158:	ldr	x8, [x20]
   1515c:	mov	x0, x20
   15160:	ldr	x8, [x8, #24]
   15164:	blr	x8
   15168:	mov	w0, w19
   1516c:	ldp	x20, x19, [sp, #64]
   15170:	ldp	x22, x21, [sp, #48]
   15174:	ldp	x29, x30, [sp, #32]
   15178:	add	sp, sp, #0x50
   1517c:	ret
   15180:	ldr	w8, [x22]
   15184:	sub	w9, w8, #0x1
   15188:	str	w9, [x22]
   1518c:	cmp	w8, #0x1
   15190:	b.eq	15158 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x318>  // b.none
   15194:	b	15168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>
   15198:	mov	w3, #0x10                  	// #16
   1519c:	mov	x0, x21
   151a0:	mov	x1, x22
   151a4:	mov	x2, xzr
   151a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   151ac:	ldr	w8, [x20, #24]
   151b0:	b	14f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0xf8>
   151b4:	mov	w3, #0x10                  	// #16
   151b8:	mov	x0, x21
   151bc:	mov	x1, x22
   151c0:	mov	x2, xzr
   151c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   151c8:	ldr	w8, [x20, #24]
   151cc:	b	14f7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x13c>
   151d0:	mov	w3, #0x10                  	// #16
   151d4:	mov	x0, x21
   151d8:	mov	x1, x22
   151dc:	mov	x2, xzr
   151e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   151e4:	ldr	w8, [x20, #24]
   151e8:	b	14fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x180>
   151ec:	mov	w3, #0x10                  	// #16
   151f0:	mov	x0, x21
   151f4:	mov	x1, x22
   151f8:	mov	x2, xzr
   151fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15200:	ldr	w8, [x20, #24]
   15204:	b	15004 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x1c4>
   15208:	mov	w3, #0x10                  	// #16
   1520c:	mov	x0, x21
   15210:	mov	x1, x22
   15214:	mov	x2, xzr
   15218:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1521c:	ldr	w8, [x20, #24]
   15220:	b	15044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x204>
   15224:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15228:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1522c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15230:	add	x0, x0, #0x0
   15234:	add	x1, x1, #0x0
   15238:	add	x3, x3, #0x0
   1523c:	mov	w2, #0x43                  	// #67
   15240:	bl	0 <__assert_fail>

0000000000015244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE>:
   15244:	sub	sp, sp, #0x1d0
   15248:	stp	x29, x30, [sp, #368]
   1524c:	str	x28, [sp, #384]
   15250:	stp	x26, x25, [sp, #400]
   15254:	stp	x24, x23, [sp, #416]
   15258:	stp	x22, x21, [sp, #432]
   1525c:	stp	x20, x19, [sp, #448]
   15260:	add	x29, sp, #0x170
   15264:	cbz	x2, 1567c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x438>
   15268:	ldp	w8, w9, [x3, #8]
   1526c:	mov	x19, x3
   15270:	mov	x22, x2
   15274:	mov	x21, x1
   15278:	mov	x20, x0
   1527c:	cmp	w8, w9
   15280:	b.cs	156b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x470>  // b.hs, b.nlast
   15284:	ldr	x9, [x19]
   15288:	mov	w10, #0x23                  	// #35
   1528c:	str	x10, [x9, w8, uxtw #3]
   15290:	ldp	w8, w9, [x19, #8]
   15294:	cmp	w8, w9
   15298:	b.cs	15748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.hs, b.nlast
   1529c:	add	w8, w8, #0x1
   152a0:	cmp	w8, w9
   152a4:	str	w8, [x19, #8]
   152a8:	b.cs	156d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x48c>  // b.hs, b.nlast
   152ac:	ldr	x9, [x19]
   152b0:	str	x22, [x9, w8, uxtw #3]
   152b4:	ldp	w8, w9, [x19, #8]
   152b8:	cmp	w8, w9
   152bc:	b.cs	15748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.hs, b.nlast
   152c0:	add	w8, w8, #0x1
   152c4:	adrp	x10, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   152c8:	movi	v0.2d, #0x0
   152cc:	str	w8, [x19, #8]
   152d0:	stur	q0, [sp, #24]
   152d4:	stur	q0, [sp, #40]
   152d8:	stur	q0, [sp, #56]
   152dc:	stur	q0, [sp, #72]
   152e0:	ldr	d0, [x10]
   152e4:	add	x9, sp, #0x60
   152e8:	mov	w8, #0x2                   	// #2
   152ec:	add	x23, x9, #0x10
   152f0:	add	x25, x21, x22, lsl #3
   152f4:	mov	x26, x21
   152f8:	stp	x9, xzr, [sp]
   152fc:	str	w8, [sp, #16]
   15300:	stp	xzr, x23, [sp, #88]
   15304:	str	d0, [sp, #104]
   15308:	b	15328 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0xe4>
   1530c:	mov	w1, w24
   15310:	mov	x0, sp
   15314:	mov	w2, #0x6                   	// #6
   15318:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1531c:	add	x26, x26, #0x8
   15320:	cmp	x26, x25
   15324:	b.eq	15370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x12c>  // b.none
   15328:	ldr	x0, [x26]
   1532c:	cbz	x0, 15708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4c4>
   15330:	ldrb	w8, [x0]
   15334:	cbnz	w8, 15728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4e4>
   15338:	bl	0 <_ZNK4llvm8MDString9getStringEv>
   1533c:	mov	x24, x1
   15340:	cmp	w24, #0x20
   15344:	b.cc	1530c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0xc8>  // b.lo, b.ul, b.last
   15348:	mov	w1, #0x20                  	// #32
   1534c:	bfxil	w1, w24, #0, #5
   15350:	mov	x0, sp
   15354:	mov	w2, #0x6                   	// #6
   15358:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1535c:	lsr	w1, w24, #5
   15360:	cmp	w24, #0x3ff
   15364:	mov	w24, w1
   15368:	b.hi	15348 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x104>  // b.pmore
   1536c:	b	15310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0xcc>
   15370:	ldr	w8, [sp, #8]
   15374:	cbz	w8, 153c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x184>
   15378:	ldr	x24, [sp]
   1537c:	ldr	w25, [sp, #12]
   15380:	ldp	w8, w9, [x24, #8]
   15384:	sub	x9, x9, x8
   15388:	cmp	x9, #0x3
   1538c:	b.hi	153a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x164>  // b.pmore
   15390:	add	x2, x8, #0x4
   15394:	add	x1, x24, #0x10
   15398:	mov	w3, #0x1                   	// #1
   1539c:	mov	x0, x24
   153a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   153a4:	ldr	w8, [x24, #8]
   153a8:	ldr	x9, [x24]
   153ac:	str	w25, [x9, x8]
   153b0:	ldp	w8, w9, [x24, #8]
   153b4:	add	x8, x8, #0x4
   153b8:	cmp	x8, x9
   153bc:	b.hi	15748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.pmore
   153c0:	str	w8, [x24, #8]
   153c4:	str	xzr, [sp, #8]
   153c8:	mov	x0, sp
   153cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   153d0:	ldp	w8, w9, [x19, #8]
   153d4:	ldr	w24, [sp, #104]
   153d8:	cmp	w8, w9
   153dc:	b.cs	156ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4a8>  // b.hs, b.nlast
   153e0:	ldr	x9, [x19]
   153e4:	str	x24, [x9, w8, uxtw #3]
   153e8:	ldp	w8, w9, [x19, #8]
   153ec:	cmp	w8, w9
   153f0:	b.cs	15748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.hs, b.nlast
   153f4:	add	w8, w8, #0x1
   153f8:	lsl	x25, x22, #3
   153fc:	str	w8, [x19, #8]
   15400:	ldr	x0, [x21]
   15404:	cbz	x0, 15708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4c4>
   15408:	ldrb	w8, [x0]
   1540c:	cbnz	w8, 15728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4e4>
   15410:	bl	0 <_ZNK4llvm8MDString9getStringEv>
   15414:	ldp	w8, w9, [sp, #104]
   15418:	mov	x22, x1
   1541c:	mov	x24, x0
   15420:	sub	x9, x9, x8
   15424:	cmp	x1, x9
   15428:	b.ls	15440 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x1fc>  // b.plast
   1542c:	add	x2, x22, x8
   15430:	add	x0, sp, #0x60
   15434:	mov	w3, #0x1                   	// #1
   15438:	mov	x1, x23
   1543c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15440:	cbz	x22, 1545c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x218>
   15444:	ldr	x8, [sp, #96]
   15448:	ldr	w9, [sp, #104]
   1544c:	mov	x1, x24
   15450:	mov	x2, x22
   15454:	add	x0, x8, x9
   15458:	bl	0 <memcpy>
   1545c:	ldp	w8, w9, [sp, #104]
   15460:	add	x8, x22, x8
   15464:	cmp	x8, x9
   15468:	b.hi	15748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.pmore
   1546c:	subs	x25, x25, #0x8
   15470:	add	x21, x21, #0x8
   15474:	str	w8, [sp, #104]
   15478:	b.ne	15400 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x1bc>  // b.any
   1547c:	ldr	x21, [x20]
   15480:	mov	w0, #0x220                 	// #544
   15484:	bl	0 <_Znwm>
   15488:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1548c:	ldr	x8, [x8]
   15490:	movi	v0.2s, #0x1
   15494:	str	d0, [x0, #8]
   15498:	movi	v0.2d, #0x0
   1549c:	mov	x9, x0
   154a0:	add	x8, x8, #0x10
   154a4:	mov	x22, x0
   154a8:	mov	w10, #0x23                  	// #35
   154ac:	str	x8, [x0]
   154b0:	stp	q0, q0, [x0, #48]
   154b4:	stp	q0, q0, [x0, #80]
   154b8:	stp	q0, q0, [x0, #112]
   154bc:	stp	q0, q0, [x0, #144]
   154c0:	stp	q0, q0, [x0, #176]
   154c4:	stp	q0, q0, [x0, #208]
   154c8:	stp	q0, q0, [x0, #240]
   154cc:	stp	q0, q0, [x0, #272]
   154d0:	stp	q0, q0, [x0, #304]
   154d4:	stp	q0, q0, [x0, #336]
   154d8:	stp	q0, q0, [x0, #368]
   154dc:	stp	q0, q0, [x0, #400]
   154e0:	stp	q0, q0, [x0, #432]
   154e4:	stp	q0, q0, [x0, #464]
   154e8:	stp	q0, q0, [x0, #496]
   154ec:	str	q0, [x9, #32]!
   154f0:	str	q0, [x0, #528]
   154f4:	str	x9, [x22, #16]!
   154f8:	str	x10, [x9]
   154fc:	adrp	x10, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15500:	ldr	d0, [x10]
   15504:	mov	w8, #0x6                   	// #6
   15508:	mov	w9, #0x4                   	// #4
   1550c:	mov	w11, #0xff                  	// #255
   15510:	str	d0, [x0, #24]
   15514:	mov	w10, #0xa                   	// #10
   15518:	str	x8, [x0, #48]
   1551c:	strb	w9, [x0, #56]
   15520:	str	x8, [x0, #64]
   15524:	strb	w9, [x0, #72]
   15528:	ldp	w8, w9, [x0, #24]
   1552c:	strb	w11, [x0, #40]
   15530:	ldur	w11, [sp, #3]
   15534:	strb	w10, [x0, #88]
   15538:	ldr	w10, [sp]
   1553c:	cmp	w8, w9
   15540:	str	w11, [x0, #92]
   15544:	str	xzr, [x0, #80]
   15548:	stur	w10, [x0, #89]
   1554c:	b.cs	15748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.hs, b.nlast
   15550:	add	w8, w8, #0x1
   15554:	str	w8, [x0, #24]
   15558:	ldr	x20, [x20]
   1555c:	stp	x22, x0, [sp]
   15560:	mov	x1, x22
   15564:	mov	x0, x20
   15568:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1556c:	ldp	x1, x8, [x20, #32]
   15570:	add	x23, x20, #0x18
   15574:	cmp	x1, x8
   15578:	b.eq	15598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x354>  // b.none
   1557c:	stp	x22, xzr, [x1]
   15580:	ldr	x9, [sp, #8]
   15584:	add	x8, x1, #0x10
   15588:	stp	xzr, xzr, [sp]
   1558c:	str	x9, [x1, #8]
   15590:	str	x8, [x20, #32]
   15594:	b	155a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x364>
   15598:	mov	x2, sp
   1559c:	mov	x0, x23
   155a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   155a4:	ldr	x8, [x20, #32]
   155a8:	ldr	x9, [x23]
   155ac:	ldr	x22, [sp, #8]
   155b0:	sub	x8, x8, x9
   155b4:	lsr	x8, x8, #4
   155b8:	add	w20, w8, #0x3
   155bc:	cbz	x22, 15640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>
   155c0:	adrp	x23, 0 <__pthread_key_create>
   155c4:	ldr	x23, [x23]
   155c8:	add	x8, x22, #0x8
   155cc:	cbz	x23, 155ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3a8>
   155d0:	ldaxr	w9, [x8]
   155d4:	sub	w10, w9, #0x1
   155d8:	stlxr	w11, w10, [x8]
   155dc:	cbnz	w11, 155d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x38c>
   155e0:	cmp	w9, #0x1
   155e4:	b.eq	15600 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3bc>  // b.none
   155e8:	b	15640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>
   155ec:	ldr	w9, [x8]
   155f0:	sub	w10, w9, #0x1
   155f4:	str	w10, [x8]
   155f8:	cmp	w9, #0x1
   155fc:	b.ne	15640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>  // b.any
   15600:	mov	x24, x22
   15604:	ldr	x8, [x24], #12
   15608:	mov	x0, x22
   1560c:	ldr	x8, [x8, #16]
   15610:	blr	x8
   15614:	cbz	x23, 1569c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x458>
   15618:	ldaxr	w8, [x24]
   1561c:	sub	w9, w8, #0x1
   15620:	stlxr	w10, w9, [x24]
   15624:	cbnz	w10, 15618 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3d4>
   15628:	cmp	w8, #0x1
   1562c:	b.ne	15640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>  // b.any
   15630:	ldr	x8, [x22]
   15634:	mov	x0, x22
   15638:	ldr	x8, [x8, #24]
   1563c:	blr	x8
   15640:	ldr	x4, [sp, #96]
   15644:	ldr	w5, [sp, #104]
   15648:	ldr	x2, [x19]
   1564c:	ldr	w3, [x19, #8]
   15650:	mov	x0, x21
   15654:	mov	w1, w20
   15658:	mov	x6, xzr
   1565c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15660:	str	wzr, [x19, #8]
   15664:	ldr	x0, [sp, #96]
   15668:	add	x8, sp, #0x60
   1566c:	add	x8, x8, #0x10
   15670:	cmp	x0, x8
   15674:	b.eq	1567c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x438>  // b.none
   15678:	bl	0 <free>
   1567c:	ldp	x20, x19, [sp, #448]
   15680:	ldp	x22, x21, [sp, #432]
   15684:	ldp	x24, x23, [sp, #416]
   15688:	ldp	x26, x25, [sp, #400]
   1568c:	ldr	x28, [sp, #384]
   15690:	ldp	x29, x30, [sp, #368]
   15694:	add	sp, sp, #0x1d0
   15698:	ret
   1569c:	ldr	w8, [x24]
   156a0:	sub	w9, w8, #0x1
   156a4:	str	w9, [x24]
   156a8:	cmp	w8, #0x1
   156ac:	b.eq	15630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3ec>  // b.none
   156b0:	b	15640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>
   156b4:	add	x1, x19, #0x10
   156b8:	mov	w3, #0x8                   	// #8
   156bc:	mov	x0, x19
   156c0:	mov	x2, xzr
   156c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   156c8:	ldr	w8, [x19, #8]
   156cc:	b	15284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x40>
   156d0:	add	x1, x19, #0x10
   156d4:	mov	w3, #0x8                   	// #8
   156d8:	mov	x0, x19
   156dc:	mov	x2, xzr
   156e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   156e4:	ldr	w8, [x19, #8]
   156e8:	b	152ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x68>
   156ec:	add	x1, x19, #0x10
   156f0:	mov	w3, #0x8                   	// #8
   156f4:	mov	x0, x19
   156f8:	mov	x2, xzr
   156fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15700:	ldr	w8, [x19, #8]
   15704:	b	153e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x19c>
   15708:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1570c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15710:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15714:	add	x0, x0, #0x0
   15718:	add	x1, x1, #0x0
   1571c:	add	x3, x3, #0x0
   15720:	mov	w2, #0x69                  	// #105
   15724:	bl	0 <__assert_fail>
   15728:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1572c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15730:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15734:	add	x0, x0, #0x0
   15738:	add	x1, x1, #0x0
   1573c:	add	x3, x3, #0x0
   15740:	mov	w2, #0x108                 	// #264
   15744:	bl	0 <__assert_fail>
   15748:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1574c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15750:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15754:	add	x0, x0, #0x0
   15758:	add	x1, x1, #0x0
   1575c:	add	x3, x3, #0x0
   15760:	mov	w2, #0x43                  	// #67
   15764:	bl	0 <__assert_fail>

0000000000015768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE>:
   15768:	sub	sp, sp, #0xa0
   1576c:	stp	x29, x30, [sp, #64]
   15770:	stp	x28, x27, [sp, #80]
   15774:	stp	x26, x25, [sp, #96]
   15778:	stp	x24, x23, [sp, #112]
   1577c:	stp	x22, x21, [sp, #128]
   15780:	stp	x20, x19, [sp, #144]
   15784:	add	x29, sp, #0x40
   15788:	cbz	x2, 17154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x19ec>
   1578c:	add	x8, x5, #0x10
   15790:	stp	x8, xzr, [x29, #-16]
   15794:	add	x8, x3, #0x10
   15798:	mov	x28, x5
   1579c:	mov	x23, x4
   157a0:	mov	x21, x3
   157a4:	mov	x22, x1
   157a8:	mov	x25, x0
   157ac:	add	x27, x1, x2, lsl #3
   157b0:	add	x24, x5, #0x8
   157b4:	str	x8, [sp]
   157b8:	add	x8, x0, #0x18
   157bc:	stur	x8, [x29, #-24]
   157c0:	stp	x27, x24, [sp, #16]
   157c4:	str	x0, [sp, #8]
   157c8:	b	15838 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd0>
   157cc:	ldr	x24, [sp, #24]
   157d0:	mov	x20, xzr
   157d4:	cmp	w8, w9
   157d8:	b.cc	157f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8c>  // b.lo, b.ul, b.last
   157dc:	ldr	x1, [sp]
   157e0:	mov	w3, #0x8                   	// #8
   157e4:	mov	x0, x21
   157e8:	mov	x2, xzr
   157ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   157f0:	ldr	w8, [x21, #8]
   157f4:	ldr	x9, [x21]
   157f8:	str	x20, [x9, w8, uxtw #3]
   157fc:	ldp	w8, w9, [x21, #8]
   15800:	cmp	w8, w9
   15804:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15808:	add	w8, w8, #0x1
   1580c:	str	w8, [x21, #8]
   15810:	ldr	x0, [x25]
   15814:	mov	w1, #0x25                  	// #37
   15818:	mov	x2, x21
   1581c:	mov	w3, w27
   15820:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15824:	str	wzr, [x21, #8]
   15828:	ldr	x27, [sp, #16]
   1582c:	add	x22, x22, #0x8
   15830:	cmp	x22, x27
   15834:	b.eq	17154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x19ec>  // b.none
   15838:	ldr	x26, [x22]
   1583c:	cbz	x28, 15934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1cc>
   15840:	ldr	x9, [x25]
   15844:	ldur	x11, [x29, #-16]
   15848:	ldr	x8, [x24]
   1584c:	ldr	x10, [x9]
   15850:	ldr	x11, [x11]
   15854:	ldr	w9, [x9, #8]
   15858:	ldr	w10, [x10, #8]
   1585c:	cmp	x8, x11
   15860:	add	x20, x9, x10, lsl #3
   15864:	b.eq	15874 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10c>  // b.none
   15868:	str	x20, [x8], #8
   1586c:	mov	x9, x24
   15870:	b	15930 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1c8>
   15874:	ldr	x27, [x28]
   15878:	str	x26, [sp, #32]
   1587c:	mov	x26, x21
   15880:	mov	x21, x22
   15884:	mov	x22, x23
   15888:	mov	x23, x28
   1588c:	sub	x28, x8, x27
   15890:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
   15894:	cmp	x28, x8
   15898:	b.eq	1724c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1ae4>  // b.none
   1589c:	asr	x19, x28, #3
   158a0:	cmp	x28, #0x0
   158a4:	csinc	x8, x19, xzr, ne  // ne = any
   158a8:	adds	x8, x8, x19
   158ac:	lsr	x10, x8, #60
   158b0:	cset	w9, cs  // cs = hs, nlast
   158b4:	cmp	x10, #0x0
   158b8:	cset	w10, ne  // ne = any
   158bc:	orr	w9, w9, w10
   158c0:	cmp	w9, #0x0
   158c4:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
   158c8:	csel	x25, x9, x8, ne  // ne = any
   158cc:	cbz	x25, 15aac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x344>
   158d0:	lsl	x0, x25, #3
   158d4:	bl	0 <_Znwm>
   158d8:	mov	x24, x0
   158dc:	add	x19, x24, x19, lsl #3
   158e0:	cmp	x28, #0x1
   158e4:	str	x20, [x19]
   158e8:	b.lt	158fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x194>  // b.tstop
   158ec:	mov	x0, x24
   158f0:	mov	x1, x27
   158f4:	mov	x2, x28
   158f8:	bl	0 <memmove>
   158fc:	add	x19, x19, #0x8
   15900:	cbz	x27, 1590c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a4>
   15904:	mov	x0, x27
   15908:	bl	0 <_ZdlPv>
   1590c:	stp	x24, x19, [x23]
   15910:	mov	x28, x23
   15914:	add	x8, x24, x25, lsl #3
   15918:	ldur	x9, [x29, #-16]
   1591c:	mov	x23, x22
   15920:	mov	x22, x21
   15924:	mov	x21, x26
   15928:	ldp	x25, x27, [sp, #8]
   1592c:	ldp	x24, x26, [sp, #24]
   15930:	str	x8, [x9]
   15934:	cbz	x26, 17194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a2c>
   15938:	ldrb	w8, [x26]
   1593c:	sub	w9, w8, #0x4
   15940:	cmp	w9, #0x1b
   15944:	b.ls	159c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x258>  // b.plast
   15948:	sub	w8, w8, #0x1
   1594c:	cmp	w8, #0x2
   15950:	b.cs	171f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a8c>  // b.hs, b.nlast
   15954:	ldr	x26, [x26, #136]
   15958:	ldr	w8, [x25, #72]
   1595c:	ldr	x9, [x25, #56]
   15960:	cbz	w8, 15a18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x2b0>
   15964:	ldr	x10, [x26]
   15968:	orr	x11, x10, #0x8
   1596c:	cmn	x11, #0x8
   15970:	b.eq	171d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a6c>  // b.none
   15974:	ubfx	x11, x10, #4, #28
   15978:	eor	w12, w11, w10, lsr #9
   1597c:	sub	w11, w8, #0x1
   15980:	and	w12, w12, w11
   15984:	add	x13, x9, w12, uxtw #4
   15988:	ldr	x14, [x13]
   1598c:	cmp	x14, x10
   15990:	b.eq	15a1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x2b4>  // b.none
   15994:	mov	w15, #0x1                   	// #1
   15998:	cmn	x14, #0x8
   1599c:	b.eq	15a18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x2b0>  // b.none
   159a0:	add	w12, w12, w15
   159a4:	and	w12, w12, w11
   159a8:	add	x13, x9, w12, uxtw #4
   159ac:	ldr	x14, [x13]
   159b0:	add	w15, w15, #0x1
   159b4:	cmp	x14, x10
   159b8:	b.eq	15a1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x2b4>  // b.none
   159bc:	b	15998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x230>
   159c0:	ldrb	w8, [x26, #1]
   159c4:	and	w8, w8, #0x7f
   159c8:	cmp	w8, #0x2
   159cc:	b.eq	171b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a4c>  // b.none
   159d0:	ldr	w10, [x26, #12]
   159d4:	cbnz	w10, 171b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a4c>
   159d8:	cmp	w9, #0x1b
   159dc:	b.hi	17214 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1aac>  // b.pmore
   159e0:	adrp	x12, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   159e4:	add	x12, x12, #0x0
   159e8:	adr	x10, 159f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x290>
   159ec:	ldrh	w11, [x12, x9, lsl #1]
   159f0:	add	x10, x10, x11, lsl #2
   159f4:	br	x10
   159f8:	cbz	x23, 164f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd8c>
   159fc:	ldr	x8, [x23]
   15a00:	mov	x0, x25
   15a04:	mov	x1, x26
   15a08:	mov	x2, x21
   15a0c:	ldr	w3, [x8]
   15a10:	bl	17378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj>
   15a14:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15a18:	add	x13, x9, x8, lsl #4
   15a1c:	add	x8, x9, x8, lsl #4
   15a20:	cmp	x13, x8
   15a24:	b.eq	1722c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1ac4>  // b.none
   15a28:	ldp	w8, w9, [x21, #8]
   15a2c:	ldr	w10, [x13, #8]
   15a30:	cmp	w8, w9
   15a34:	sub	w19, w10, #0x1
   15a38:	b.cs	16bb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1450>  // b.hs, b.nlast
   15a3c:	ldr	x9, [x21]
   15a40:	str	x19, [x9, w8, uxtw #3]
   15a44:	ldp	w8, w9, [x21, #8]
   15a48:	cmp	w8, w9
   15a4c:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15a50:	ldur	x0, [x29, #-24]
   15a54:	add	w8, w8, #0x1
   15a58:	mov	x1, x26
   15a5c:	str	w8, [x21, #8]
   15a60:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   15a64:	ldp	w8, w9, [x21, #8]
   15a68:	mov	w19, w0
   15a6c:	cmp	w8, w9
   15a70:	b.cs	16bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x146c>  // b.hs, b.nlast
   15a74:	ldr	x9, [x21]
   15a78:	str	x19, [x9, w8, uxtw #3]
   15a7c:	ldp	w8, w9, [x21, #8]
   15a80:	cmp	w8, w9
   15a84:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15a88:	add	w8, w8, #0x1
   15a8c:	str	w8, [x21, #8]
   15a90:	ldr	x0, [x25]
   15a94:	mov	w1, #0x2                   	// #2
   15a98:	mov	x2, x21
   15a9c:	mov	w3, wzr
   15aa0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15aa4:	str	wzr, [x21, #8]
   15aa8:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15aac:	mov	x24, xzr
   15ab0:	add	x19, x24, x19, lsl #3
   15ab4:	cmp	x28, #0x1
   15ab8:	str	x20, [x19]
   15abc:	b.ge	158ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x184>  // b.tcont
   15ac0:	b	158fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x194>
   15ac4:	cbz	x23, 16298 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb30>
   15ac8:	ldr	x8, [x23]
   15acc:	mov	x0, x25
   15ad0:	mov	x1, x26
   15ad4:	mov	x2, x21
   15ad8:	ldr	w3, [x8, #108]
   15adc:	bl	1f154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj>
   15ae0:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15ae4:	cbz	x23, 162b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb48>
   15ae8:	ldr	x9, [x23]
   15aec:	ldrb	w10, [x26, #24]
   15af0:	cmp	w8, #0x1
   15af4:	ldp	w8, w11, [x21, #8]
   15af8:	ldr	w27, [x9, #64]
   15afc:	lsl	w9, w10, #1
   15b00:	cset	w12, eq  // eq = none
   15b04:	and	x9, x9, #0x2
   15b08:	cmp	w8, w11
   15b0c:	orr	x19, x9, x12
   15b10:	b.cs	16bf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1488>  // b.hs, b.nlast
   15b14:	ldr	x9, [x21]
   15b18:	str	x19, [x9, w8, uxtw #3]
   15b1c:	ldp	w8, w9, [x21, #8]
   15b20:	cmp	w8, w9
   15b24:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15b28:	add	w8, w8, #0x1
   15b2c:	str	w8, [x21, #8]
   15b30:	mov	x24, x26
   15b34:	ldr	w10, [x24, #8]!
   15b38:	cmp	w10, #0x1
   15b3c:	b.ls	17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>  // b.plast
   15b40:	sub	x10, x24, x10, lsl #3
   15b44:	ldr	x10, [x10]
   15b48:	cbz	x10, 15b64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x3fc>
   15b4c:	ldrb	w11, [x10]
   15b50:	sub	w12, w11, #0xb
   15b54:	cmp	w12, #0xb
   15b58:	b.cs	16b88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1420>  // b.hs, b.nlast
   15b5c:	cmp	w12, #0xb
   15b60:	b.cs	16b94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x142c>  // b.hs, b.nlast
   15b64:	ldr	w12, [x25, #304]
   15b68:	cbz	w12, 16cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1554>
   15b6c:	orr	x11, x10, #0x4
   15b70:	cmn	x11, #0x4
   15b74:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   15b78:	ldr	x11, [x25, #288]
   15b7c:	ubfx	x13, x10, #4, #28
   15b80:	eor	w14, w13, w10, lsr #9
   15b84:	sub	w13, w12, #0x1
   15b88:	and	w12, w14, w13
   15b8c:	lsl	x14, x12, #4
   15b90:	ldr	x14, [x11, x14]
   15b94:	cmp	x14, x10
   15b98:	b.ne	16c7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1514>  // b.any
   15b9c:	add	x10, x11, x12, lsl #4
   15ba0:	ldr	w20, [x10, #12]
   15ba4:	cmp	w8, w9
   15ba8:	b.cs	16cc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1560>  // b.hs, b.nlast
   15bac:	ldr	x9, [x21]
   15bb0:	str	x20, [x9, w8, uxtw #3]
   15bb4:	ldp	w8, w9, [x21, #8]
   15bb8:	cmp	w8, w9
   15bbc:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15bc0:	add	w8, w8, #0x1
   15bc4:	str	w8, [x21, #8]
   15bc8:	ldr	w10, [x24]
   15bcc:	cmp	w10, #0x2
   15bd0:	b.ls	17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>  // b.plast
   15bd4:	sub	x10, x26, x10, lsl #3
   15bd8:	ldr	x10, [x10, #16]
   15bdc:	ldr	x24, [sp, #24]
   15be0:	cbz	x10, 15bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x484>
   15be4:	ldrb	w11, [x10]
   15be8:	cbnz	w11, 172f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b90>
   15bec:	ldr	w12, [x25, #304]
   15bf0:	cbz	w12, 169e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1278>
   15bf4:	orr	x11, x10, #0x4
   15bf8:	cmn	x11, #0x4
   15bfc:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   15c00:	ldr	x11, [x25, #288]
   15c04:	ubfx	x13, x10, #4, #28
   15c08:	eor	w14, w13, w10, lsr #9
   15c0c:	sub	w13, w12, #0x1
   15c10:	and	w12, w14, w13
   15c14:	lsl	x14, x12, #4
   15c18:	ldr	x14, [x11, x14]
   15c1c:	cmp	x14, x10
   15c20:	b.ne	16ce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x157c>  // b.any
   15c24:	add	x10, x11, x12, lsl #4
   15c28:	ldr	w20, [x10, #12]
   15c2c:	cmp	w8, w9
   15c30:	b.cs	169ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1284>  // b.hs, b.nlast
   15c34:	ldr	x9, [x21]
   15c38:	str	x20, [x9, w8, uxtw #3]
   15c3c:	ldp	w8, w9, [x21, #8]
   15c40:	cmp	w8, w9
   15c44:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15c48:	add	w8, w8, #0x1
   15c4c:	str	w8, [x21, #8]
   15c50:	ldr	x0, [x25]
   15c54:	mov	w1, #0x18                  	// #24
   15c58:	b	15818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb0>
   15c5c:	cbz	x23, 1641c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xcb4>
   15c60:	ldr	x8, [x23]
   15c64:	mov	x0, x25
   15c68:	mov	x1, x26
   15c6c:	mov	x2, x21
   15c70:	ldr	w3, [x8, #56]
   15c74:	bl	1bb78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj>
   15c78:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15c7c:	cbz	x23, 16434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xccc>
   15c80:	ldr	x8, [x23]
   15c84:	mov	x0, x25
   15c88:	mov	x1, x26
   15c8c:	mov	x2, x21
   15c90:	ldr	w3, [x8, #44]
   15c94:	bl	19b04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj>
   15c98:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15c9c:	cbz	x23, 1644c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xce4>
   15ca0:	ldr	x8, [x23]
   15ca4:	add	x3, x8, #0x10
   15ca8:	b	16450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xce8>
   15cac:	cbz	x23, 16464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xcfc>
   15cb0:	ldr	x8, [x23]
   15cb4:	mov	x0, x25
   15cb8:	mov	x1, x26
   15cbc:	mov	x2, x21
   15cc0:	ldr	w3, [x8, #48]
   15cc4:	bl	1a0b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj>
   15cc8:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15ccc:	cbz	x23, 1647c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd14>
   15cd0:	ldr	x8, [x23]
   15cd4:	mov	x0, x25
   15cd8:	mov	x1, x26
   15cdc:	mov	x2, x21
   15ce0:	ldr	w3, [x8, #36]
   15ce4:	bl	18bdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj>
   15ce8:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15cec:	cbz	x23, 16494 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd2c>
   15cf0:	ldr	x8, [x23]
   15cf4:	mov	x0, x25
   15cf8:	mov	x1, x26
   15cfc:	mov	x2, x21
   15d00:	ldr	w3, [x8, #96]
   15d04:	bl	1e420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj>
   15d08:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15d0c:	cbz	x23, 164ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd44>
   15d10:	ldr	x8, [x23]
   15d14:	mov	x0, x25
   15d18:	mov	x1, x26
   15d1c:	mov	x2, x21
   15d20:	ldr	w3, [x8, #100]
   15d24:	bl	1ea2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj>
   15d28:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15d2c:	cbz	x23, 164c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd5c>
   15d30:	ldr	x8, [x23]
   15d34:	mov	x0, x25
   15d38:	mov	x1, x26
   15d3c:	mov	x2, x21
   15d40:	ldr	w3, [x8, #8]
   15d44:	bl	179c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj>
   15d48:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15d4c:	cbz	x23, 164dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd74>
   15d50:	ldr	x8, [x23]
   15d54:	mov	x0, x25
   15d58:	mov	x1, x26
   15d5c:	mov	x2, x21
   15d60:	ldr	w3, [x8, #60]
   15d64:	bl	1bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj>
   15d68:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15d6c:	cbz	x23, 1650c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xda4>
   15d70:	ldr	x10, [x23]
   15d74:	ldp	w9, w11, [x21, #8]
   15d78:	cmp	w8, #0x1
   15d7c:	cset	w19, eq  // eq = none
   15d80:	ldr	w27, [x10, #12]
   15d84:	cmp	w9, w11
   15d88:	b.cs	16c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x14a4>  // b.hs, b.nlast
   15d8c:	ldr	x8, [x21]
   15d90:	str	x19, [x8, w9, uxtw #3]
   15d94:	ldp	w8, w9, [x21, #8]
   15d98:	cmp	w8, w9
   15d9c:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15da0:	add	w8, w8, #0x1
   15da4:	str	w8, [x21, #8]
   15da8:	mov	x24, x26
   15dac:	ldr	w10, [x24, #8]!
   15db0:	cbz	w10, 17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>
   15db4:	sub	x10, x26, x10, lsl #3
   15db8:	ldr	x10, [x10]
   15dbc:	cbz	x10, 15dcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x664>
   15dc0:	ldrb	w11, [x10]
   15dc4:	cmp	w11, #0x18
   15dc8:	b.ne	17298 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b30>  // b.any
   15dcc:	ldr	w12, [x25, #304]
   15dd0:	cbz	w12, 16d58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x15f0>
   15dd4:	orr	x11, x10, #0x4
   15dd8:	cmn	x11, #0x4
   15ddc:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   15de0:	ldr	x11, [x25, #288]
   15de4:	ubfx	x13, x10, #4, #28
   15de8:	eor	w14, w13, w10, lsr #9
   15dec:	sub	w13, w12, #0x1
   15df0:	and	w12, w14, w13
   15df4:	lsl	x14, x12, #4
   15df8:	ldr	x14, [x11, x14]
   15dfc:	cmp	x14, x10
   15e00:	b.ne	16d18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x15b0>  // b.any
   15e04:	add	x10, x11, x12, lsl #4
   15e08:	ldr	w20, [x10, #12]
   15e0c:	cmp	w8, w9
   15e10:	b.cs	16d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x15fc>  // b.hs, b.nlast
   15e14:	ldr	x9, [x21]
   15e18:	str	x20, [x9, w8, uxtw #3]
   15e1c:	ldp	w8, w9, [x21, #8]
   15e20:	cmp	w8, w9
   15e24:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15e28:	add	w8, w8, #0x1
   15e2c:	str	w8, [x21, #8]
   15e30:	ldr	w10, [x24]
   15e34:	cmp	w10, #0x1
   15e38:	b.ls	17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>  // b.plast
   15e3c:	sub	x10, x24, x10, lsl #3
   15e40:	ldr	x10, [x10]
   15e44:	cbz	x10, 172b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b50>
   15e48:	ldrb	w11, [x10]
   15e4c:	ldr	x24, [sp, #24]
   15e50:	cmp	w11, #0x6
   15e54:	b.ne	172d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b70>  // b.any
   15e58:	ldr	w12, [x25, #304]
   15e5c:	cbz	w12, 157d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x68>
   15e60:	orr	x11, x10, #0x4
   15e64:	cmn	x11, #0x4
   15e68:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   15e6c:	ldr	x11, [x25, #288]
   15e70:	ubfx	x13, x10, #4, #28
   15e74:	eor	w14, w13, w10, lsr #9
   15e78:	sub	w13, w12, #0x1
   15e7c:	and	w12, w13, w14
   15e80:	lsl	x14, x12, #4
   15e84:	ldr	x14, [x11, x14]
   15e88:	cmp	x14, x10
   15e8c:	b.ne	16d80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1618>  // b.any
   15e90:	add	x10, x11, x12, lsl #4
   15e94:	ldr	w20, [x10, #12]
   15e98:	cmp	w8, w9
   15e9c:	b.cc	157f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8c>  // b.lo, b.ul, b.last
   15ea0:	b	157dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15ea4:	cbz	x23, 1665c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xef4>
   15ea8:	ldr	x8, [x23]
   15eac:	mov	x0, x25
   15eb0:	mov	x1, x26
   15eb4:	mov	x2, x21
   15eb8:	ldr	w3, [x8, #28]
   15ebc:	bl	17fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj>
   15ec0:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15ec4:	cbz	x23, 16674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf0c>
   15ec8:	ldr	x8, [x23]
   15ecc:	add	x3, x8, #0x4
   15ed0:	b	16678 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf10>
   15ed4:	cbz	x23, 1668c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf24>
   15ed8:	ldr	x8, [x23]
   15edc:	mov	x0, x25
   15ee0:	mov	x1, x26
   15ee4:	mov	x2, x21
   15ee8:	ldr	w3, [x8, #68]
   15eec:	bl	1c344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj>
   15ef0:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15ef4:	cbz	x23, 166a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf3c>
   15ef8:	ldr	x8, [x23]
   15efc:	mov	x0, x25
   15f00:	mov	x1, x26
   15f04:	mov	x2, x21
   15f08:	ldr	w3, [x8, #20]
   15f0c:	bl	17d90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj>
   15f10:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15f14:	cbz	x23, 166bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf54>
   15f18:	ldr	x8, [x23]
   15f1c:	mov	x0, x25
   15f20:	mov	x1, x26
   15f24:	mov	x2, x21
   15f28:	ldr	w3, [x8, #52]
   15f2c:	bl	1ad18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj>
   15f30:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15f34:	cbz	x23, 166d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf6c>
   15f38:	ldr	x8, [x23]
   15f3c:	mov	x0, x25
   15f40:	mov	x1, x26
   15f44:	mov	x2, x21
   15f48:	ldr	w3, [x8, #80]
   15f4c:	bl	1c96c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj>
   15f50:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15f54:	cbz	x23, 166ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf84>
   15f58:	ldr	x8, [x23]
   15f5c:	mov	x0, x25
   15f60:	mov	x1, x26
   15f64:	mov	x2, x21
   15f68:	ldr	w3, [x8, #84]
   15f6c:	bl	1d308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj>
   15f70:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   15f74:	cbz	x23, 16704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf9c>
   15f78:	ldr	x10, [x23]
   15f7c:	ldr	w11, [x26, #4]
   15f80:	ldp	w9, w12, [x21, #8]
   15f84:	ldr	w27, [x10, #24]
   15f88:	cmp	w11, #0x0
   15f8c:	cset	w10, ne  // ne = any
   15f90:	cmp	w8, #0x1
   15f94:	cset	w19, eq  // eq = none
   15f98:	cmp	w9, w12
   15f9c:	bfi	x19, x10, #1, #1
   15fa0:	b.cs	16c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x14c0>  // b.hs, b.nlast
   15fa4:	ldr	x8, [x21]
   15fa8:	str	x19, [x8, w9, uxtw #3]
   15fac:	ldp	w8, w9, [x21, #8]
   15fb0:	cmp	w8, w9
   15fb4:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15fb8:	add	w8, w8, #0x1
   15fbc:	str	w8, [x21, #8]
   15fc0:	ldr	x10, [x26, #24]
   15fc4:	cmp	w8, w9
   15fc8:	lsl	x11, x10, #1
   15fcc:	eor	x19, x11, x10, asr #63
   15fd0:	b.cs	16c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x14dc>  // b.hs, b.nlast
   15fd4:	ldr	x9, [x21]
   15fd8:	str	x19, [x9, w8, uxtw #3]
   15fdc:	ldp	w8, w9, [x21, #8]
   15fe0:	cmp	w8, w9
   15fe4:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   15fe8:	add	w8, w8, #0x1
   15fec:	str	w8, [x21, #8]
   15ff0:	ldr	w10, [x26, #8]
   15ff4:	cbz	w10, 17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>
   15ff8:	sub	x10, x26, x10, lsl #3
   15ffc:	ldr	x10, [x10]
   16000:	cbz	x10, 1600c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8a4>
   16004:	ldrb	w11, [x10]
   16008:	cbnz	w11, 172f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b90>
   1600c:	ldr	w12, [x25, #304]
   16010:	cbz	w12, 16a08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x12a0>
   16014:	orr	x11, x10, #0x4
   16018:	cmn	x11, #0x4
   1601c:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   16020:	ldr	x11, [x25, #288]
   16024:	ubfx	x13, x10, #4, #28
   16028:	eor	w14, w13, w10, lsr #9
   1602c:	sub	w13, w12, #0x1
   16030:	and	w12, w14, w13
   16034:	lsl	x14, x12, #4
   16038:	ldr	x14, [x11, x14]
   1603c:	cmp	x14, x10
   16040:	b.ne	16dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x165c>  // b.any
   16044:	add	x10, x11, x12, lsl #4
   16048:	ldr	w20, [x10, #12]
   1604c:	cmp	w8, w9
   16050:	b.cs	16a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x12ac>  // b.hs, b.nlast
   16054:	ldr	x9, [x21]
   16058:	str	x20, [x9, w8, uxtw #3]
   1605c:	ldp	w8, w9, [x21, #8]
   16060:	cmp	w8, w9
   16064:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   16068:	add	w8, w8, #0x1
   1606c:	str	w8, [x21, #8]
   16070:	ldr	x0, [x25]
   16074:	mov	w1, #0xe                   	// #14
   16078:	b	15818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb0>
   1607c:	cbz	x23, 16800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1098>
   16080:	ldr	x8, [x23]
   16084:	mov	x0, x25
   16088:	mov	x1, x26
   1608c:	mov	x2, x21
   16090:	ldr	w3, [x8, #32]
   16094:	bl	18324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj>
   16098:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   1609c:	cbz	x23, 16818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10b0>
   160a0:	ldr	x8, [x23]
   160a4:	mov	x0, x25
   160a8:	mov	x1, x26
   160ac:	mov	x2, x21
   160b0:	ldr	w3, [x8, #40]
   160b4:	bl	19864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj>
   160b8:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   160bc:	cbz	x23, 16830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10c8>
   160c0:	ldr	x10, [x23]
   160c4:	ldp	w9, w11, [x21, #8]
   160c8:	cmp	w8, #0x1
   160cc:	cset	w19, eq  // eq = none
   160d0:	ldr	w27, [x10, #72]
   160d4:	cmp	w9, w11
   160d8:	b.cs	16c60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x14f8>  // b.hs, b.nlast
   160dc:	ldr	x8, [x21]
   160e0:	str	x19, [x8, w9, uxtw #3]
   160e4:	ldp	w8, w9, [x21, #8]
   160e8:	cmp	w8, w9
   160ec:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   160f0:	add	w8, w8, #0x1
   160f4:	str	w8, [x21, #8]
   160f8:	mov	x24, x26
   160fc:	ldr	w10, [x24, #8]!
   16100:	cbz	w10, 17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>
   16104:	sub	x10, x26, x10, lsl #3
   16108:	ldr	x10, [x10]
   1610c:	cbz	x10, 16118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x9b0>
   16110:	ldrb	w11, [x10]
   16114:	cbnz	w11, 172f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b90>
   16118:	ldr	w12, [x25, #304]
   1611c:	cbz	w12, 16e38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x16d0>
   16120:	orr	x11, x10, #0x4
   16124:	cmn	x11, #0x4
   16128:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   1612c:	ldr	x11, [x25, #288]
   16130:	ubfx	x13, x10, #4, #28
   16134:	eor	w14, w13, w10, lsr #9
   16138:	sub	w13, w12, #0x1
   1613c:	and	w12, w14, w13
   16140:	lsl	x14, x12, #4
   16144:	ldr	x14, [x11, x14]
   16148:	cmp	x14, x10
   1614c:	b.ne	16df8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1690>  // b.any
   16150:	add	x10, x11, x12, lsl #4
   16154:	ldr	w20, [x10, #12]
   16158:	cmp	w8, w9
   1615c:	b.cs	16e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x16dc>  // b.hs, b.nlast
   16160:	ldr	x9, [x21]
   16164:	str	x20, [x9, w8, uxtw #3]
   16168:	ldp	w8, w9, [x21, #8]
   1616c:	cmp	w8, w9
   16170:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   16174:	add	w8, w8, #0x1
   16178:	str	w8, [x21, #8]
   1617c:	ldr	w10, [x24]
   16180:	cmp	w10, #0x1
   16184:	b.ls	17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>  // b.plast
   16188:	sub	x10, x24, x10, lsl #3
   1618c:	ldr	x10, [x10]
   16190:	cbz	x10, 16a30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x12c8>
   16194:	ldrb	w11, [x10]
   16198:	ldr	x24, [sp, #24]
   1619c:	sub	w11, w11, #0xb
   161a0:	cmp	w11, #0x4
   161a4:	b.cs	17318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1bb0>  // b.hs, b.nlast
   161a8:	ldr	w12, [x25, #304]
   161ac:	cbz	w12, 16a3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x12d4>
   161b0:	orr	x11, x10, #0x4
   161b4:	cmn	x11, #0x4
   161b8:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   161bc:	ldr	x11, [x25, #288]
   161c0:	ubfx	x13, x10, #4, #28
   161c4:	eor	w14, w13, w10, lsr #9
   161c8:	sub	w13, w12, #0x1
   161cc:	and	w12, w14, w13
   161d0:	lsl	x14, x12, #4
   161d4:	ldr	x14, [x11, x14]
   161d8:	cmp	x14, x10
   161dc:	b.ne	16e60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x16f8>  // b.any
   161e0:	add	x10, x11, x12, lsl #4
   161e4:	ldr	w20, [x10, #12]
   161e8:	cmp	w8, w9
   161ec:	b.cs	16a48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x12e0>  // b.hs, b.nlast
   161f0:	ldr	x9, [x21]
   161f4:	str	x20, [x9, w8, uxtw #3]
   161f8:	ldp	w8, w9, [x21, #8]
   161fc:	cmp	w8, w9
   16200:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   16204:	add	w8, w8, #0x1
   16208:	str	w8, [x21, #8]
   1620c:	ldr	x0, [x25]
   16210:	mov	w1, #0x19                  	// #25
   16214:	b	15818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb0>
   16218:	cbz	x23, 16980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1218>
   1621c:	ldr	x8, [x23]
   16220:	mov	x0, x25
   16224:	mov	x1, x26
   16228:	mov	x2, x21
   1622c:	ldr	w3, [x8, #88]
   16230:	bl	1d91c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj>
   16234:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16238:	cbz	x23, 16998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1230>
   1623c:	ldr	x8, [x23]
   16240:	mov	x0, x25
   16244:	mov	x1, x26
   16248:	mov	x2, x21
   1624c:	ldr	w3, [x8, #76]
   16250:	bl	1c528 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj>
   16254:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16258:	cbz	x23, 169b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1248>
   1625c:	ldr	x8, [x23]
   16260:	mov	x0, x25
   16264:	mov	x1, x26
   16268:	mov	x2, x21
   1626c:	ldr	w3, [x8, #92]
   16270:	bl	1dd90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj>
   16274:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16278:	cbz	x23, 169c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1260>
   1627c:	ldr	x8, [x23]
   16280:	mov	x0, x25
   16284:	mov	x1, x26
   16288:	mov	x2, x21
   1628c:	ldr	w3, [x8, #104]
   16290:	bl	1edac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj>
   16294:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16298:	mov	x0, x25
   1629c:	mov	x1, x26
   162a0:	mov	x2, x21
   162a4:	mov	w3, wzr
   162a8:	bl	1f154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj>
   162ac:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   162b0:	ldrb	w9, [x26, #24]
   162b4:	cmp	w8, #0x1
   162b8:	ldp	w8, w10, [x21, #8]
   162bc:	cset	w11, eq  // eq = none
   162c0:	lsl	w9, w9, #1
   162c4:	and	x9, x9, #0x2
   162c8:	cmp	w8, w10
   162cc:	orr	x19, x9, x11
   162d0:	b.cs	16ed0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1768>  // b.hs, b.nlast
   162d4:	ldr	x9, [x21]
   162d8:	str	x19, [x9, w8, uxtw #3]
   162dc:	ldp	w8, w9, [x21, #8]
   162e0:	cmp	w8, w9
   162e4:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   162e8:	add	w8, w8, #0x1
   162ec:	str	w8, [x21, #8]
   162f0:	mov	x24, x26
   162f4:	ldr	w10, [x24, #8]!
   162f8:	cmp	w10, #0x1
   162fc:	b.ls	17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>  // b.plast
   16300:	sub	x10, x24, x10, lsl #3
   16304:	ldr	x10, [x10]
   16308:	cbz	x10, 16324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xbbc>
   1630c:	ldrb	w11, [x10]
   16310:	sub	w12, w11, #0xb
   16314:	cmp	w12, #0xb
   16318:	b.cs	16ba0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1438>  // b.hs, b.nlast
   1631c:	cmp	w12, #0xb
   16320:	b.cs	16bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1444>  // b.hs, b.nlast
   16324:	ldr	w12, [x25, #304]
   16328:	cbz	w12, 16a64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x12fc>
   1632c:	orr	x11, x10, #0x4
   16330:	cmn	x11, #0x4
   16334:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   16338:	ldr	x11, [x25, #288]
   1633c:	ubfx	x13, x10, #4, #28
   16340:	eor	w14, w13, w10, lsr #9
   16344:	sub	w13, w12, #0x1
   16348:	and	w12, w14, w13
   1634c:	lsl	x14, x12, #4
   16350:	ldr	x14, [x11, x14]
   16354:	cmp	x14, x10
   16358:	b.ne	16f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17f4>  // b.any
   1635c:	add	x10, x11, x12, lsl #4
   16360:	ldr	w20, [x10, #12]
   16364:	cmp	w8, w9
   16368:	b.cs	16a70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1308>  // b.hs, b.nlast
   1636c:	ldr	x9, [x21]
   16370:	str	x20, [x9, w8, uxtw #3]
   16374:	ldp	w8, w9, [x21, #8]
   16378:	cmp	w8, w9
   1637c:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   16380:	add	w8, w8, #0x1
   16384:	str	w8, [x21, #8]
   16388:	ldr	w10, [x24]
   1638c:	cmp	w10, #0x2
   16390:	b.ls	17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>  // b.plast
   16394:	sub	x10, x26, x10, lsl #3
   16398:	ldr	x10, [x10, #16]
   1639c:	ldr	x24, [sp, #24]
   163a0:	cbz	x10, 163ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc44>
   163a4:	ldrb	w11, [x10]
   163a8:	cbnz	w11, 172f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b90>
   163ac:	ldr	w12, [x25, #304]
   163b0:	cbz	w12, 16a8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1324>
   163b4:	orr	x11, x10, #0x4
   163b8:	cmn	x11, #0x4
   163bc:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   163c0:	ldr	x11, [x25, #288]
   163c4:	ubfx	x13, x10, #4, #28
   163c8:	eor	w14, w13, w10, lsr #9
   163cc:	sub	w13, w12, #0x1
   163d0:	and	w12, w14, w13
   163d4:	lsl	x14, x12, #4
   163d8:	ldr	x14, [x11, x14]
   163dc:	cmp	x14, x10
   163e0:	b.ne	16f90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1828>  // b.any
   163e4:	add	x10, x11, x12, lsl #4
   163e8:	ldr	w20, [x10, #12]
   163ec:	cmp	w8, w9
   163f0:	b.cs	16a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1330>  // b.hs, b.nlast
   163f4:	ldr	x9, [x21]
   163f8:	str	x20, [x9, w8, uxtw #3]
   163fc:	ldp	w8, w9, [x21, #8]
   16400:	cmp	w8, w9
   16404:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   16408:	add	w8, w8, #0x1
   1640c:	str	w8, [x21, #8]
   16410:	ldr	x0, [x25]
   16414:	mov	w1, #0x18                  	// #24
   16418:	b	15a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x330>
   1641c:	mov	x0, x25
   16420:	mov	x1, x26
   16424:	mov	x2, x21
   16428:	mov	w3, wzr
   1642c:	bl	1bb78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj>
   16430:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16434:	mov	x0, x25
   16438:	mov	x1, x26
   1643c:	mov	x2, x21
   16440:	mov	w3, wzr
   16444:	bl	19b04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj>
   16448:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   1644c:	sub	x3, x29, #0x8
   16450:	mov	x0, x25
   16454:	mov	x1, x26
   16458:	mov	x2, x21
   1645c:	bl	17b14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj>
   16460:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16464:	mov	x0, x25
   16468:	mov	x1, x26
   1646c:	mov	x2, x21
   16470:	mov	w3, wzr
   16474:	bl	1a0b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj>
   16478:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   1647c:	mov	x0, x25
   16480:	mov	x1, x26
   16484:	mov	x2, x21
   16488:	mov	w3, wzr
   1648c:	bl	18bdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj>
   16490:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16494:	mov	x0, x25
   16498:	mov	x1, x26
   1649c:	mov	x2, x21
   164a0:	mov	w3, wzr
   164a4:	bl	1e420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj>
   164a8:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   164ac:	mov	x0, x25
   164b0:	mov	x1, x26
   164b4:	mov	x2, x21
   164b8:	mov	w3, wzr
   164bc:	bl	1ea2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj>
   164c0:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   164c4:	mov	x0, x25
   164c8:	mov	x1, x26
   164cc:	mov	x2, x21
   164d0:	mov	w3, wzr
   164d4:	bl	179c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj>
   164d8:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   164dc:	mov	x0, x25
   164e0:	mov	x1, x26
   164e4:	mov	x2, x21
   164e8:	mov	w3, wzr
   164ec:	bl	1bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj>
   164f0:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   164f4:	mov	x0, x25
   164f8:	mov	x1, x26
   164fc:	mov	x2, x21
   16500:	mov	w3, wzr
   16504:	bl	17378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj>
   16508:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   1650c:	ldp	w9, w10, [x21, #8]
   16510:	cmp	w8, #0x1
   16514:	cset	w19, eq  // eq = none
   16518:	cmp	w9, w10
   1651c:	b.cs	16eec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1784>  // b.hs, b.nlast
   16520:	ldr	x8, [x21]
   16524:	str	x19, [x8, w9, uxtw #3]
   16528:	ldp	w8, w9, [x21, #8]
   1652c:	cmp	w8, w9
   16530:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   16534:	add	w8, w8, #0x1
   16538:	str	w8, [x21, #8]
   1653c:	mov	x24, x26
   16540:	ldr	w10, [x24, #8]!
   16544:	cbz	w10, 17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>
   16548:	sub	x10, x26, x10, lsl #3
   1654c:	ldr	x10, [x10]
   16550:	cbz	x10, 16560 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xdf8>
   16554:	ldrb	w11, [x10]
   16558:	cmp	w11, #0x18
   1655c:	b.ne	17298 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b30>  // b.any
   16560:	ldr	w12, [x25, #304]
   16564:	cbz	w12, 16ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x134c>
   16568:	orr	x11, x10, #0x4
   1656c:	cmn	x11, #0x4
   16570:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   16574:	ldr	x11, [x25, #288]
   16578:	ubfx	x13, x10, #4, #28
   1657c:	eor	w14, w13, w10, lsr #9
   16580:	sub	w13, w12, #0x1
   16584:	and	w12, w14, w13
   16588:	lsl	x14, x12, #4
   1658c:	ldr	x14, [x11, x14]
   16590:	cmp	x14, x10
   16594:	b.ne	16fc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x185c>  // b.any
   16598:	add	x10, x11, x12, lsl #4
   1659c:	ldr	w20, [x10, #12]
   165a0:	cmp	w8, w9
   165a4:	b.cs	16ac0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1358>  // b.hs, b.nlast
   165a8:	ldr	x9, [x21]
   165ac:	str	x20, [x9, w8, uxtw #3]
   165b0:	ldp	w8, w9, [x21, #8]
   165b4:	cmp	w8, w9
   165b8:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   165bc:	add	w8, w8, #0x1
   165c0:	str	w8, [x21, #8]
   165c4:	ldr	w10, [x24]
   165c8:	cmp	w10, #0x1
   165cc:	b.ls	17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>  // b.plast
   165d0:	sub	x10, x24, x10, lsl #3
   165d4:	ldr	x10, [x10]
   165d8:	cbz	x10, 172b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b50>
   165dc:	ldrb	w11, [x10]
   165e0:	ldr	x24, [sp, #24]
   165e4:	cmp	w11, #0x6
   165e8:	b.ne	172d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b70>  // b.any
   165ec:	ldr	w12, [x25, #304]
   165f0:	cbz	w12, 16b04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x139c>
   165f4:	orr	x11, x10, #0x4
   165f8:	cmn	x11, #0x4
   165fc:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   16600:	ldr	x11, [x25, #288]
   16604:	ubfx	x13, x10, #4, #28
   16608:	eor	w14, w13, w10, lsr #9
   1660c:	sub	w13, w12, #0x1
   16610:	and	w12, w13, w14
   16614:	lsl	x14, x12, #4
   16618:	ldr	x14, [x11, x14]
   1661c:	cmp	x14, x10
   16620:	b.ne	16ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1890>  // b.any
   16624:	add	x10, x11, x12, lsl #4
   16628:	ldr	w20, [x10, #12]
   1662c:	cmp	w8, w9
   16630:	b.cs	16b10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x13a8>  // b.hs, b.nlast
   16634:	ldr	x9, [x21]
   16638:	str	x20, [x9, w8, uxtw #3]
   1663c:	ldp	w8, w9, [x21, #8]
   16640:	cmp	w8, w9
   16644:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   16648:	add	w8, w8, #0x1
   1664c:	str	w8, [x21, #8]
   16650:	ldr	x0, [x25]
   16654:	mov	w1, #0x25                  	// #37
   16658:	b	15a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x330>
   1665c:	mov	x0, x25
   16660:	mov	x1, x26
   16664:	mov	x2, x21
   16668:	mov	w3, wzr
   1666c:	bl	17fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj>
   16670:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16674:	sub	x3, x29, #0x4
   16678:	mov	x0, x25
   1667c:	mov	x1, x26
   16680:	mov	x2, x21
   16684:	bl	17570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj>
   16688:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   1668c:	mov	x0, x25
   16690:	mov	x1, x26
   16694:	mov	x2, x21
   16698:	mov	w3, wzr
   1669c:	bl	1c344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj>
   166a0:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   166a4:	mov	x0, x25
   166a8:	mov	x1, x26
   166ac:	mov	x2, x21
   166b0:	mov	w3, wzr
   166b4:	bl	17d90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj>
   166b8:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   166bc:	mov	x0, x25
   166c0:	mov	x1, x26
   166c4:	mov	x2, x21
   166c8:	mov	w3, wzr
   166cc:	bl	1ad18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj>
   166d0:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   166d4:	mov	x0, x25
   166d8:	mov	x1, x26
   166dc:	mov	x2, x21
   166e0:	mov	w3, wzr
   166e4:	bl	1c96c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj>
   166e8:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   166ec:	mov	x0, x25
   166f0:	mov	x1, x26
   166f4:	mov	x2, x21
   166f8:	mov	w3, wzr
   166fc:	bl	1d308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj>
   16700:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16704:	ldr	w10, [x26, #4]
   16708:	ldp	w9, w11, [x21, #8]
   1670c:	cmp	w10, #0x0
   16710:	cset	w10, ne  // ne = any
   16714:	cmp	w8, #0x1
   16718:	cset	w19, eq  // eq = none
   1671c:	cmp	w9, w11
   16720:	bfi	x19, x10, #1, #1
   16724:	b.cs	16f08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17a0>  // b.hs, b.nlast
   16728:	ldr	x8, [x21]
   1672c:	str	x19, [x8, w9, uxtw #3]
   16730:	ldp	w8, w9, [x21, #8]
   16734:	cmp	w8, w9
   16738:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   1673c:	add	w8, w8, #0x1
   16740:	str	w8, [x21, #8]
   16744:	ldr	x10, [x26, #24]
   16748:	cmp	w8, w9
   1674c:	lsl	x11, x10, #1
   16750:	eor	x19, x11, x10, asr #63
   16754:	b.cs	16f24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17bc>  // b.hs, b.nlast
   16758:	ldr	x9, [x21]
   1675c:	str	x19, [x9, w8, uxtw #3]
   16760:	ldp	w8, w9, [x21, #8]
   16764:	cmp	w8, w9
   16768:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   1676c:	add	w8, w8, #0x1
   16770:	str	w8, [x21, #8]
   16774:	ldr	w10, [x26, #8]
   16778:	cbz	w10, 17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>
   1677c:	sub	x10, x26, x10, lsl #3
   16780:	ldr	x10, [x10]
   16784:	cbz	x10, 16790 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1028>
   16788:	ldrb	w11, [x10]
   1678c:	cbnz	w11, 172f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b90>
   16790:	ldr	w12, [x25, #304]
   16794:	cbz	w12, 16b2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x13c4>
   16798:	orr	x11, x10, #0x4
   1679c:	cmn	x11, #0x4
   167a0:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   167a4:	ldr	x11, [x25, #288]
   167a8:	ubfx	x13, x10, #4, #28
   167ac:	eor	w14, w13, w10, lsr #9
   167b0:	sub	w13, w12, #0x1
   167b4:	and	w12, w14, w13
   167b8:	lsl	x14, x12, #4
   167bc:	ldr	x14, [x11, x14]
   167c0:	cmp	x14, x10
   167c4:	b.ne	1702c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x18c4>  // b.any
   167c8:	add	x10, x11, x12, lsl #4
   167cc:	ldr	w20, [x10, #12]
   167d0:	cmp	w8, w9
   167d4:	b.cs	16b38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x13d0>  // b.hs, b.nlast
   167d8:	ldr	x9, [x21]
   167dc:	str	x20, [x9, w8, uxtw #3]
   167e0:	ldp	w8, w9, [x21, #8]
   167e4:	cmp	w8, w9
   167e8:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   167ec:	add	w8, w8, #0x1
   167f0:	str	w8, [x21, #8]
   167f4:	ldr	x0, [x25]
   167f8:	mov	w1, #0xe                   	// #14
   167fc:	b	15a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x330>
   16800:	mov	x0, x25
   16804:	mov	x1, x26
   16808:	mov	x2, x21
   1680c:	mov	w3, wzr
   16810:	bl	18324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj>
   16814:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16818:	mov	x0, x25
   1681c:	mov	x1, x26
   16820:	mov	x2, x21
   16824:	mov	w3, wzr
   16828:	bl	19864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj>
   1682c:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16830:	ldp	w9, w10, [x21, #8]
   16834:	cmp	w8, #0x1
   16838:	cset	w19, eq  // eq = none
   1683c:	cmp	w9, w10
   16840:	b.cs	16f40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17d8>  // b.hs, b.nlast
   16844:	ldr	x8, [x21]
   16848:	str	x19, [x8, w9, uxtw #3]
   1684c:	ldp	w8, w9, [x21, #8]
   16850:	cmp	w8, w9
   16854:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   16858:	add	w8, w8, #0x1
   1685c:	str	w8, [x21, #8]
   16860:	mov	x24, x26
   16864:	ldr	w10, [x24, #8]!
   16868:	cbz	w10, 17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>
   1686c:	sub	x10, x26, x10, lsl #3
   16870:	ldr	x10, [x10]
   16874:	cbz	x10, 16880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1118>
   16878:	ldrb	w11, [x10]
   1687c:	cbnz	w11, 172f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b90>
   16880:	ldr	w12, [x25, #304]
   16884:	cbz	w12, 16adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1374>
   16888:	orr	x11, x10, #0x4
   1688c:	cmn	x11, #0x4
   16890:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   16894:	ldr	x11, [x25, #288]
   16898:	ubfx	x13, x10, #4, #28
   1689c:	eor	w14, w13, w10, lsr #9
   168a0:	sub	w13, w12, #0x1
   168a4:	and	w12, w14, w13
   168a8:	lsl	x14, x12, #4
   168ac:	ldr	x14, [x11, x14]
   168b0:	cmp	x14, x10
   168b4:	b.ne	17060 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x18f8>  // b.any
   168b8:	add	x10, x11, x12, lsl #4
   168bc:	ldr	w20, [x10, #12]
   168c0:	cmp	w8, w9
   168c4:	b.cs	16ae8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1380>  // b.hs, b.nlast
   168c8:	ldr	x9, [x21]
   168cc:	str	x20, [x9, w8, uxtw #3]
   168d0:	ldp	w8, w9, [x21, #8]
   168d4:	cmp	w8, w9
   168d8:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   168dc:	add	w8, w8, #0x1
   168e0:	str	w8, [x21, #8]
   168e4:	ldr	w10, [x24]
   168e8:	cmp	w10, #0x1
   168ec:	b.ls	17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1b10>  // b.plast
   168f0:	sub	x10, x24, x10, lsl #3
   168f4:	ldr	x10, [x10]
   168f8:	cbz	x10, 16b54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x13ec>
   168fc:	ldrb	w11, [x10]
   16900:	ldr	x24, [sp, #24]
   16904:	sub	w11, w11, #0xb
   16908:	cmp	w11, #0x4
   1690c:	b.cs	17318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1bb0>  // b.hs, b.nlast
   16910:	ldr	w12, [x25, #304]
   16914:	cbz	w12, 16b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x13f8>
   16918:	orr	x11, x10, #0x4
   1691c:	cmn	x11, #0x4
   16920:	b.eq	17258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1af0>  // b.none
   16924:	ldr	x11, [x25, #288]
   16928:	ubfx	x13, x10, #4, #28
   1692c:	eor	w14, w13, w10, lsr #9
   16930:	sub	w13, w12, #0x1
   16934:	and	w12, w14, w13
   16938:	lsl	x14, x12, #4
   1693c:	ldr	x14, [x11, x14]
   16940:	cmp	x14, x10
   16944:	b.ne	17094 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x192c>  // b.any
   16948:	add	x10, x11, x12, lsl #4
   1694c:	ldr	w20, [x10, #12]
   16950:	cmp	w8, w9
   16954:	b.cs	16b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1404>  // b.hs, b.nlast
   16958:	ldr	x9, [x21]
   1695c:	str	x20, [x9, w8, uxtw #3]
   16960:	ldp	w8, w9, [x21, #8]
   16964:	cmp	w8, w9
   16968:	b.cs	17174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1a0c>  // b.hs, b.nlast
   1696c:	add	w8, w8, #0x1
   16970:	str	w8, [x21, #8]
   16974:	ldr	x0, [x25]
   16978:	mov	w1, #0x19                  	// #25
   1697c:	b	15a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x330>
   16980:	mov	x0, x25
   16984:	mov	x1, x26
   16988:	mov	x2, x21
   1698c:	mov	w3, wzr
   16990:	bl	1d91c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj>
   16994:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   16998:	mov	x0, x25
   1699c:	mov	x1, x26
   169a0:	mov	x2, x21
   169a4:	mov	w3, wzr
   169a8:	bl	1c528 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj>
   169ac:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   169b0:	mov	x0, x25
   169b4:	mov	x1, x26
   169b8:	mov	x2, x21
   169bc:	mov	w3, wzr
   169c0:	bl	1dd90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj>
   169c4:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   169c8:	mov	x0, x25
   169cc:	mov	x1, x26
   169d0:	mov	x2, x21
   169d4:	mov	w3, wzr
   169d8:	bl	1edac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj>
   169dc:	b	1582c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc4>
   169e0:	mov	x20, xzr
   169e4:	cmp	w8, w9
   169e8:	b.cc	15c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4cc>  // b.lo, b.ul, b.last
   169ec:	ldr	x1, [sp]
   169f0:	mov	w3, #0x8                   	// #8
   169f4:	mov	x0, x21
   169f8:	mov	x2, xzr
   169fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16a00:	ldr	w8, [x21, #8]
   16a04:	b	15c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4cc>
   16a08:	mov	x20, xzr
   16a0c:	cmp	w8, w9
   16a10:	b.cc	16054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8ec>  // b.lo, b.ul, b.last
   16a14:	ldr	x1, [sp]
   16a18:	mov	w3, #0x8                   	// #8
   16a1c:	mov	x0, x21
   16a20:	mov	x2, xzr
   16a24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16a28:	ldr	w8, [x21, #8]
   16a2c:	b	16054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8ec>
   16a30:	ldr	x24, [sp, #24]
   16a34:	ldr	w12, [x25, #304]
   16a38:	cbnz	w12, 161b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa48>
   16a3c:	mov	x20, xzr
   16a40:	cmp	w8, w9
   16a44:	b.cc	161f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa88>  // b.lo, b.ul, b.last
   16a48:	ldr	x1, [sp]
   16a4c:	mov	w3, #0x8                   	// #8
   16a50:	mov	x0, x21
   16a54:	mov	x2, xzr
   16a58:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16a5c:	ldr	w8, [x21, #8]
   16a60:	b	161f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa88>
   16a64:	mov	x20, xzr
   16a68:	cmp	w8, w9
   16a6c:	b.cc	1636c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc04>  // b.lo, b.ul, b.last
   16a70:	ldr	x1, [sp]
   16a74:	mov	w3, #0x8                   	// #8
   16a78:	mov	x0, x21
   16a7c:	mov	x2, xzr
   16a80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16a84:	ldr	w8, [x21, #8]
   16a88:	b	1636c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc04>
   16a8c:	mov	x20, xzr
   16a90:	cmp	w8, w9
   16a94:	b.cc	163f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc8c>  // b.lo, b.ul, b.last
   16a98:	ldr	x1, [sp]
   16a9c:	mov	w3, #0x8                   	// #8
   16aa0:	mov	x0, x21
   16aa4:	mov	x2, xzr
   16aa8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16aac:	ldr	w8, [x21, #8]
   16ab0:	b	163f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc8c>
   16ab4:	mov	x20, xzr
   16ab8:	cmp	w8, w9
   16abc:	b.cc	165a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe40>  // b.lo, b.ul, b.last
   16ac0:	ldr	x1, [sp]
   16ac4:	mov	w3, #0x8                   	// #8
   16ac8:	mov	x0, x21
   16acc:	mov	x2, xzr
   16ad0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16ad4:	ldr	w8, [x21, #8]
   16ad8:	b	165a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe40>
   16adc:	mov	x20, xzr
   16ae0:	cmp	w8, w9
   16ae4:	b.cc	168c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1160>  // b.lo, b.ul, b.last
   16ae8:	ldr	x1, [sp]
   16aec:	mov	w3, #0x8                   	// #8
   16af0:	mov	x0, x21
   16af4:	mov	x2, xzr
   16af8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16afc:	ldr	w8, [x21, #8]
   16b00:	b	168c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1160>
   16b04:	mov	x20, xzr
   16b08:	cmp	w8, w9
   16b0c:	b.cc	16634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xecc>  // b.lo, b.ul, b.last
   16b10:	ldr	x1, [sp]
   16b14:	mov	w3, #0x8                   	// #8
   16b18:	mov	x0, x21
   16b1c:	mov	x2, xzr
   16b20:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16b24:	ldr	w8, [x21, #8]
   16b28:	b	16634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xecc>
   16b2c:	mov	x20, xzr
   16b30:	cmp	w8, w9
   16b34:	b.cc	167d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1070>  // b.lo, b.ul, b.last
   16b38:	ldr	x1, [sp]
   16b3c:	mov	w3, #0x8                   	// #8
   16b40:	mov	x0, x21
   16b44:	mov	x2, xzr
   16b48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16b4c:	ldr	w8, [x21, #8]
   16b50:	b	167d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1070>
   16b54:	ldr	x24, [sp, #24]
   16b58:	ldr	w12, [x25, #304]
   16b5c:	cbnz	w12, 16918 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11b0>
   16b60:	mov	x20, xzr
   16b64:	cmp	w8, w9
   16b68:	b.cc	16958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11f0>  // b.lo, b.ul, b.last
   16b6c:	ldr	x1, [sp]
   16b70:	mov	w3, #0x8                   	// #8
   16b74:	mov	x0, x21
   16b78:	mov	x2, xzr
   16b7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16b80:	ldr	w8, [x21, #8]
   16b84:	b	16958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11f0>
   16b88:	cmp	w11, #0x1f
   16b8c:	b.eq	15b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x3f4>  // b.none
   16b90:	b	17338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1bd0>
   16b94:	cmp	w11, #0x1f
   16b98:	b.eq	15b64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x3fc>  // b.none
   16b9c:	b	17358 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1bf0>
   16ba0:	cmp	w11, #0x1f
   16ba4:	b.eq	1631c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xbb4>  // b.none
   16ba8:	b	17338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1bd0>
   16bac:	cmp	w11, #0x1f
   16bb0:	b.eq	16324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xbbc>  // b.none
   16bb4:	b	17358 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1bf0>
   16bb8:	ldr	x1, [sp]
   16bbc:	mov	w3, #0x8                   	// #8
   16bc0:	mov	x0, x21
   16bc4:	mov	x2, xzr
   16bc8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16bcc:	ldr	w8, [x21, #8]
   16bd0:	b	15a3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x2d4>
   16bd4:	ldr	x1, [sp]
   16bd8:	mov	w3, #0x8                   	// #8
   16bdc:	mov	x0, x21
   16be0:	mov	x2, xzr
   16be4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16be8:	ldr	w8, [x21, #8]
   16bec:	b	15a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x30c>
   16bf0:	ldr	x1, [sp]
   16bf4:	mov	w3, #0x8                   	// #8
   16bf8:	mov	x0, x21
   16bfc:	mov	x2, xzr
   16c00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16c04:	ldr	w8, [x21, #8]
   16c08:	b	15b14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x3ac>
   16c0c:	ldr	x1, [sp]
   16c10:	mov	w3, #0x8                   	// #8
   16c14:	mov	x0, x21
   16c18:	mov	x2, xzr
   16c1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16c20:	ldr	w9, [x21, #8]
   16c24:	b	15d8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x624>
   16c28:	ldr	x1, [sp]
   16c2c:	mov	w3, #0x8                   	// #8
   16c30:	mov	x0, x21
   16c34:	mov	x2, xzr
   16c38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16c3c:	ldr	w9, [x21, #8]
   16c40:	b	15fa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x83c>
   16c44:	ldr	x1, [sp]
   16c48:	mov	w3, #0x8                   	// #8
   16c4c:	mov	x0, x21
   16c50:	mov	x2, xzr
   16c54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16c58:	ldr	w8, [x21, #8]
   16c5c:	b	15fd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x86c>
   16c60:	ldr	x1, [sp]
   16c64:	mov	w3, #0x8                   	// #8
   16c68:	mov	x0, x21
   16c6c:	mov	x2, xzr
   16c70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16c74:	ldr	w9, [x21, #8]
   16c78:	b	160dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x974>
   16c7c:	mov	w15, #0x1                   	// #1
   16c80:	cmn	x14, #0x4
   16c84:	b.eq	16cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1554>  // b.none
   16c88:	add	w12, w12, w15
   16c8c:	and	w12, w12, w13
   16c90:	lsl	x14, x12, #4
   16c94:	ldr	x14, [x11, x14]
   16c98:	add	w15, w15, #0x1
   16c9c:	cmp	x14, x10
   16ca0:	b.ne	16c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1518>  // b.any
   16ca4:	mov	w12, w12
   16ca8:	add	x10, x11, x12, lsl #4
   16cac:	ldr	w20, [x10, #12]
   16cb0:	cmp	w8, w9
   16cb4:	b.cc	15bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x444>  // b.lo, b.ul, b.last
   16cb8:	b	16cc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1560>
   16cbc:	mov	x20, xzr
   16cc0:	cmp	w8, w9
   16cc4:	b.cc	15bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x444>  // b.lo, b.ul, b.last
   16cc8:	ldr	x1, [sp]
   16ccc:	mov	w3, #0x8                   	// #8
   16cd0:	mov	x0, x21
   16cd4:	mov	x2, xzr
   16cd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16cdc:	ldr	w8, [x21, #8]
   16ce0:	b	15bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x444>
   16ce4:	mov	w15, #0x1                   	// #1
   16ce8:	cmn	x14, #0x4
   16cec:	b.eq	16e94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x172c>  // b.none
   16cf0:	add	w12, w12, w15
   16cf4:	and	w12, w12, w13
   16cf8:	lsl	x14, x12, #4
   16cfc:	ldr	x14, [x11, x14]
   16d00:	add	w15, w15, #0x1
   16d04:	cmp	x14, x10
   16d08:	b.ne	16ce8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1580>  // b.any
   16d0c:	ldr	x24, [sp, #24]
   16d10:	mov	w12, w12
   16d14:	b	15c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4bc>
   16d18:	mov	w15, #0x1                   	// #1
   16d1c:	cmn	x14, #0x4
   16d20:	b.eq	16d58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x15f0>  // b.none
   16d24:	add	w12, w12, w15
   16d28:	and	w12, w12, w13
   16d2c:	lsl	x14, x12, #4
   16d30:	ldr	x14, [x11, x14]
   16d34:	add	w15, w15, #0x1
   16d38:	cmp	x14, x10
   16d3c:	b.ne	16d1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x15b4>  // b.any
   16d40:	mov	w12, w12
   16d44:	add	x10, x11, x12, lsl #4
   16d48:	ldr	w20, [x10, #12]
   16d4c:	cmp	w8, w9
   16d50:	b.cc	15e14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6ac>  // b.lo, b.ul, b.last
   16d54:	b	16d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x15fc>
   16d58:	mov	x20, xzr
   16d5c:	cmp	w8, w9
   16d60:	b.cc	15e14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6ac>  // b.lo, b.ul, b.last
   16d64:	ldr	x1, [sp]
   16d68:	mov	w3, #0x8                   	// #8
   16d6c:	mov	x0, x21
   16d70:	mov	x2, xzr
   16d74:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16d78:	ldr	w8, [x21, #8]
   16d7c:	b	15e14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6ac>
   16d80:	mov	w15, #0x1                   	// #1
   16d84:	cmn	x14, #0x4
   16d88:	b.eq	157cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x64>  // b.none
   16d8c:	add	w12, w12, w15
   16d90:	and	w12, w12, w13
   16d94:	lsl	x14, x12, #4
   16d98:	ldr	x14, [x11, x14]
   16d9c:	add	w15, w15, #0x1
   16da0:	cmp	x14, x10
   16da4:	b.ne	16d84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x161c>  // b.any
   16da8:	ldr	x24, [sp, #24]
   16dac:	mov	w12, w12
   16db0:	add	x10, x11, x12, lsl #4
   16db4:	ldr	w20, [x10, #12]
   16db8:	cmp	w8, w9
   16dbc:	b.cc	157f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8c>  // b.lo, b.ul, b.last
   16dc0:	b	157dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   16dc4:	mov	w15, #0x1                   	// #1
   16dc8:	cmn	x14, #0x4
   16dcc:	b.eq	16ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1740>  // b.none
   16dd0:	add	w12, w12, w15
   16dd4:	and	w12, w12, w13
   16dd8:	lsl	x14, x12, #4
   16ddc:	ldr	x14, [x11, x14]
   16de0:	add	w15, w15, #0x1
   16de4:	cmp	x14, x10
   16de8:	b.ne	16dc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1660>  // b.any
   16dec:	ldr	x24, [sp, #24]
   16df0:	mov	w12, w12
   16df4:	b	16044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8dc>
   16df8:	mov	w15, #0x1                   	// #1
   16dfc:	cmn	x14, #0x4
   16e00:	b.eq	16e38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x16d0>  // b.none
   16e04:	add	w12, w12, w15
   16e08:	and	w12, w12, w13
   16e0c:	lsl	x14, x12, #4
   16e10:	ldr	x14, [x11, x14]
   16e14:	add	w15, w15, #0x1
   16e18:	cmp	x14, x10
   16e1c:	b.ne	16dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1694>  // b.any
   16e20:	mov	w12, w12
   16e24:	add	x10, x11, x12, lsl #4
   16e28:	ldr	w20, [x10, #12]
   16e2c:	cmp	w8, w9
   16e30:	b.cc	16160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x9f8>  // b.lo, b.ul, b.last
   16e34:	b	16e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x16dc>
   16e38:	mov	x20, xzr
   16e3c:	cmp	w8, w9
   16e40:	b.cc	16160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x9f8>  // b.lo, b.ul, b.last
   16e44:	ldr	x1, [sp]
   16e48:	mov	w3, #0x8                   	// #8
   16e4c:	mov	x0, x21
   16e50:	mov	x2, xzr
   16e54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16e58:	ldr	w8, [x21, #8]
   16e5c:	b	16160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x9f8>
   16e60:	mov	w15, #0x1                   	// #1
   16e64:	cmn	x14, #0x4
   16e68:	b.eq	16ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1754>  // b.none
   16e6c:	add	w12, w12, w15
   16e70:	and	w12, w12, w13
   16e74:	lsl	x14, x12, #4
   16e78:	ldr	x14, [x11, x14]
   16e7c:	add	w15, w15, #0x1
   16e80:	cmp	x14, x10
   16e84:	b.ne	16e64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x16fc>  // b.any
   16e88:	ldr	x24, [sp, #24]
   16e8c:	mov	w12, w12
   16e90:	b	161e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa78>
   16e94:	ldr	x24, [sp, #24]
   16e98:	mov	x20, xzr
   16e9c:	cmp	w8, w9
   16ea0:	b.cc	15c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4cc>  // b.lo, b.ul, b.last
   16ea4:	b	169ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1284>
   16ea8:	ldr	x24, [sp, #24]
   16eac:	mov	x20, xzr
   16eb0:	cmp	w8, w9
   16eb4:	b.cc	16054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8ec>  // b.lo, b.ul, b.last
   16eb8:	b	16a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x12ac>
   16ebc:	ldr	x24, [sp, #24]
   16ec0:	mov	x20, xzr
   16ec4:	cmp	w8, w9
   16ec8:	b.cc	161f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa88>  // b.lo, b.ul, b.last
   16ecc:	b	16a48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x12e0>
   16ed0:	ldr	x1, [sp]
   16ed4:	mov	w3, #0x8                   	// #8
   16ed8:	mov	x0, x21
   16edc:	mov	x2, xzr
   16ee0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16ee4:	ldr	w8, [x21, #8]
   16ee8:	b	162d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb6c>
   16eec:	ldr	x1, [sp]
   16ef0:	mov	w3, #0x8                   	// #8
   16ef4:	mov	x0, x21
   16ef8:	mov	x2, xzr
   16efc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16f00:	ldr	w9, [x21, #8]
   16f04:	b	16520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xdb8>
   16f08:	ldr	x1, [sp]
   16f0c:	mov	w3, #0x8                   	// #8
   16f10:	mov	x0, x21
   16f14:	mov	x2, xzr
   16f18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16f1c:	ldr	w9, [x21, #8]
   16f20:	b	16728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xfc0>
   16f24:	ldr	x1, [sp]
   16f28:	mov	w3, #0x8                   	// #8
   16f2c:	mov	x0, x21
   16f30:	mov	x2, xzr
   16f34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16f38:	ldr	w8, [x21, #8]
   16f3c:	b	16758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xff0>
   16f40:	ldr	x1, [sp]
   16f44:	mov	w3, #0x8                   	// #8
   16f48:	mov	x0, x21
   16f4c:	mov	x2, xzr
   16f50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16f54:	ldr	w9, [x21, #8]
   16f58:	b	16844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10dc>
   16f5c:	mov	w15, #0x1                   	// #1
   16f60:	cmn	x14, #0x4
   16f64:	b.eq	170c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1960>  // b.none
   16f68:	add	w12, w12, w15
   16f6c:	and	w12, w12, w13
   16f70:	lsl	x14, x12, #4
   16f74:	ldr	x14, [x11, x14]
   16f78:	add	w15, w15, #0x1
   16f7c:	cmp	x14, x10
   16f80:	b.ne	16f60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x17f8>  // b.any
   16f84:	ldr	x27, [sp, #16]
   16f88:	mov	w12, w12
   16f8c:	b	1635c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xbf4>
   16f90:	mov	w15, #0x1                   	// #1
   16f94:	cmn	x14, #0x4
   16f98:	b.eq	170dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1974>  // b.none
   16f9c:	add	w12, w12, w15
   16fa0:	and	w12, w12, w13
   16fa4:	lsl	x14, x12, #4
   16fa8:	ldr	x14, [x11, x14]
   16fac:	add	w15, w15, #0x1
   16fb0:	cmp	x14, x10
   16fb4:	b.ne	16f94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x182c>  // b.any
   16fb8:	ldp	x27, x24, [sp, #16]
   16fbc:	mov	w12, w12
   16fc0:	b	163e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc7c>
   16fc4:	mov	w15, #0x1                   	// #1
   16fc8:	cmn	x14, #0x4
   16fcc:	b.eq	170f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1988>  // b.none
   16fd0:	add	w12, w12, w15
   16fd4:	and	w12, w12, w13
   16fd8:	lsl	x14, x12, #4
   16fdc:	ldr	x14, [x11, x14]
   16fe0:	add	w15, w15, #0x1
   16fe4:	cmp	x14, x10
   16fe8:	b.ne	16fc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1860>  // b.any
   16fec:	ldr	x27, [sp, #16]
   16ff0:	mov	w12, w12
   16ff4:	b	16598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe30>
   16ff8:	mov	w15, #0x1                   	// #1
   16ffc:	cmn	x14, #0x4
   17000:	b.eq	17104 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x199c>  // b.none
   17004:	add	w12, w12, w15
   17008:	and	w12, w12, w13
   1700c:	lsl	x14, x12, #4
   17010:	ldr	x14, [x11, x14]
   17014:	add	w15, w15, #0x1
   17018:	cmp	x14, x10
   1701c:	b.ne	16ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1894>  // b.any
   17020:	ldp	x27, x24, [sp, #16]
   17024:	mov	w12, w12
   17028:	b	16624 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xebc>
   1702c:	mov	w15, #0x1                   	// #1
   17030:	cmn	x14, #0x4
   17034:	b.eq	17118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x19b0>  // b.none
   17038:	add	w12, w12, w15
   1703c:	and	w12, w12, w13
   17040:	lsl	x14, x12, #4
   17044:	ldr	x14, [x11, x14]
   17048:	add	w15, w15, #0x1
   1704c:	cmp	x14, x10
   17050:	b.ne	17030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x18c8>  // b.any
   17054:	ldp	x27, x24, [sp, #16]
   17058:	mov	w12, w12
   1705c:	b	167c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1060>
   17060:	mov	w15, #0x1                   	// #1
   17064:	cmn	x14, #0x4
   17068:	b.eq	1712c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x19c4>  // b.none
   1706c:	add	w12, w12, w15
   17070:	and	w12, w12, w13
   17074:	lsl	x14, x12, #4
   17078:	ldr	x14, [x11, x14]
   1707c:	add	w15, w15, #0x1
   17080:	cmp	x14, x10
   17084:	b.ne	17064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x18fc>  // b.any
   17088:	ldr	x27, [sp, #16]
   1708c:	mov	w12, w12
   17090:	b	168b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1150>
   17094:	mov	w15, #0x1                   	// #1
   17098:	cmn	x14, #0x4
   1709c:	b.eq	17140 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x19d8>  // b.none
   170a0:	add	w12, w12, w15
   170a4:	and	w12, w12, w13
   170a8:	lsl	x14, x12, #4
   170ac:	ldr	x14, [x11, x14]
   170b0:	add	w15, w15, #0x1
   170b4:	cmp	x14, x10
   170b8:	b.ne	17098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1930>  // b.any
   170bc:	ldp	x27, x24, [sp, #16]
   170c0:	mov	w12, w12
   170c4:	b	16948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11e0>
   170c8:	ldr	x27, [sp, #16]
   170cc:	mov	x20, xzr
   170d0:	cmp	w8, w9
   170d4:	b.cc	1636c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc04>  // b.lo, b.ul, b.last
   170d8:	b	16a70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1308>
   170dc:	ldp	x27, x24, [sp, #16]
   170e0:	mov	x20, xzr
   170e4:	cmp	w8, w9
   170e8:	b.cc	163f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc8c>  // b.lo, b.ul, b.last
   170ec:	b	16a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1330>
   170f0:	ldr	x27, [sp, #16]
   170f4:	mov	x20, xzr
   170f8:	cmp	w8, w9
   170fc:	b.cc	165a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe40>  // b.lo, b.ul, b.last
   17100:	b	16ac0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1358>
   17104:	ldp	x27, x24, [sp, #16]
   17108:	mov	x20, xzr
   1710c:	cmp	w8, w9
   17110:	b.cc	16634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xecc>  // b.lo, b.ul, b.last
   17114:	b	16b10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x13a8>
   17118:	ldp	x27, x24, [sp, #16]
   1711c:	mov	x20, xzr
   17120:	cmp	w8, w9
   17124:	b.cc	167d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1070>  // b.lo, b.ul, b.last
   17128:	b	16b38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x13d0>
   1712c:	ldr	x27, [sp, #16]
   17130:	mov	x20, xzr
   17134:	cmp	w8, w9
   17138:	b.cc	168c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1160>  // b.lo, b.ul, b.last
   1713c:	b	16ae8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1380>
   17140:	ldp	x27, x24, [sp, #16]
   17144:	mov	x20, xzr
   17148:	cmp	w8, w9
   1714c:	b.cc	16958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11f0>  // b.lo, b.ul, b.last
   17150:	b	16b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1404>
   17154:	ldp	x20, x19, [sp, #144]
   17158:	ldp	x22, x21, [sp, #128]
   1715c:	ldp	x24, x23, [sp, #112]
   17160:	ldp	x26, x25, [sp, #96]
   17164:	ldp	x28, x27, [sp, #80]
   17168:	ldp	x29, x30, [sp, #64]
   1716c:	add	sp, sp, #0xa0
   17170:	ret
   17174:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17178:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1717c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17180:	add	x0, x0, #0x0
   17184:	add	x1, x1, #0x0
   17188:	add	x3, x3, #0x0
   1718c:	mov	w2, #0x43                  	// #67
   17190:	bl	0 <__assert_fail>
   17194:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17198:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1719c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   171a0:	add	x0, x0, #0x0
   171a4:	add	x1, x1, #0x0
   171a8:	add	x3, x3, #0x0
   171ac:	mov	w2, #0x69                  	// #105
   171b0:	bl	0 <__assert_fail>
   171b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   171b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   171bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   171c0:	add	x0, x0, #0x0
   171c4:	add	x1, x1, #0x0
   171c8:	add	x3, x3, #0x0
   171cc:	mov	w2, #0x7e4                 	// #2020
   171d0:	bl	0 <__assert_fail>
   171d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   171d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   171dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   171e0:	add	x0, x0, #0x0
   171e4:	add	x1, x1, #0x0
   171e8:	add	x3, x3, #0x0
   171ec:	mov	w2, #0x252                 	// #594
   171f0:	bl	0 <__assert_fail>
   171f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   171f8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   171fc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17200:	add	x0, x0, #0x0
   17204:	add	x1, x1, #0x0
   17208:	add	x3, x3, #0x0
   1720c:	mov	w2, #0x108                 	// #264
   17210:	bl	0 <__assert_fail>
   17214:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17218:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1721c:	add	x0, x0, #0x0
   17220:	add	x1, x1, #0x0
   17224:	mov	w2, #0x7e8                 	// #2024
   17228:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1722c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17230:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17234:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17238:	add	x0, x0, #0x0
   1723c:	add	x1, x1, #0x0
   17240:	add	x3, x3, #0x0
   17244:	mov	w2, #0xa9                  	// #169
   17248:	bl	0 <__assert_fail>
   1724c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17250:	add	x0, x0, #0x0
   17254:	bl	0 <_ZSt20__throw_length_errorPKc>
   17258:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1725c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17260:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17264:	add	x0, x0, #0x0
   17268:	add	x1, x1, #0x0
   1726c:	add	x3, x3, #0x0
   17270:	mov	w2, #0x252                 	// #594
   17274:	bl	0 <__assert_fail>
   17278:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1727c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17280:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17284:	add	x0, x0, #0x0
   17288:	add	x1, x1, #0x0
   1728c:	add	x3, x3, #0x0
   17290:	mov	w2, #0x436                 	// #1078
   17294:	bl	0 <__assert_fail>
   17298:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1729c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   172a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   172a4:	add	x0, x0, #0x0
   172a8:	add	x1, x1, #0x0
   172ac:	add	x3, x3, #0x0
   172b0:	mov	w2, #0x134                 	// #308
   172b4:	bl	0 <__assert_fail>
   172b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   172bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   172c0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   172c4:	add	x0, x0, #0x0
   172c8:	add	x1, x1, #0x0
   172cc:	add	x3, x3, #0x0
   172d0:	mov	w2, #0x69                  	// #105
   172d4:	bl	0 <__assert_fail>
   172d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   172dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   172e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   172e4:	add	x0, x0, #0x0
   172e8:	add	x1, x1, #0x0
   172ec:	add	x3, x3, #0x0
   172f0:	mov	w2, #0x108                 	// #264
   172f4:	bl	0 <__assert_fail>
   172f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   172fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17300:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17304:	add	x0, x0, #0x0
   17308:	add	x1, x1, #0x0
   1730c:	add	x3, x3, #0x0
   17310:	mov	w2, #0x121                 	// #289
   17314:	bl	0 <__assert_fail>
   17318:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1731c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17320:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17324:	add	x0, x0, #0x0
   17328:	add	x1, x1, #0x0
   1732c:	add	x3, x3, #0x0
   17330:	mov	w2, #0x134                 	// #308
   17334:	bl	0 <__assert_fail>
   17338:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1733c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17340:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17344:	add	x0, x0, #0x0
   17348:	add	x1, x1, #0x0
   1734c:	add	x3, x3, #0x0
   17350:	mov	w2, #0x134                 	// #308
   17354:	bl	0 <__assert_fail>
   17358:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1735c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17360:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17364:	add	x0, x0, #0x0
   17368:	add	x1, x1, #0x0
   1736c:	add	x3, x3, #0x0
   17370:	mov	w2, #0x108                 	// #264
   17374:	bl	0 <__assert_fail>

0000000000017378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj>:
   17378:	stp	x29, x30, [sp, #-80]!
   1737c:	stp	x26, x25, [sp, #16]
   17380:	stp	x24, x23, [sp, #32]
   17384:	stp	x22, x21, [sp, #48]
   17388:	stp	x20, x19, [sp, #64]
   1738c:	mov	x29, sp
   17390:	ldr	w24, [x1, #8]
   17394:	mov	w20, w3
   17398:	mov	x19, x2
   1739c:	mov	x21, x1
   173a0:	mov	x22, x0
   173a4:	cbz	w24, 174ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x134>
   173a8:	mov	x25, xzr
   173ac:	add	x23, x19, #0x10
   173b0:	mov	x8, x24
   173b4:	sub	x8, x21, x8, lsl #3
   173b8:	ldr	x8, [x8, x25, lsl #3]
   173bc:	cbz	x8, 173cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x54>
   173c0:	ldrb	w9, [x8]
   173c4:	cmp	w9, #0x2
   173c8:	b.eq	17550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x1d8>  // b.none
   173cc:	ldr	w10, [x22, #304]
   173d0:	cbz	w10, 17480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x108>
   173d4:	orr	x9, x8, #0x4
   173d8:	cmn	x9, #0x4
   173dc:	b.eq	174f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x178>  // b.none
   173e0:	ldr	x9, [x22, #288]
   173e4:	ubfx	x11, x8, #4, #28
   173e8:	eor	w12, w11, w8, lsr #9
   173ec:	sub	w11, w10, #0x1
   173f0:	and	w10, w11, w12
   173f4:	lsl	x12, x10, #4
   173f8:	ldr	x12, [x9, x12]
   173fc:	cmp	x12, x8
   17400:	b.ne	17450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xd8>  // b.any
   17404:	add	x8, x9, x10, lsl #4
   17408:	ldr	w26, [x8, #12]
   1740c:	ldp	w8, w9, [x19, #8]
   17410:	cmp	w8, w9
   17414:	b.cs	17490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x118>  // b.hs, b.nlast
   17418:	ldr	x9, [x19]
   1741c:	str	x26, [x9, w8, uxtw #3]
   17420:	ldp	w8, w9, [x19, #8]
   17424:	cmp	w8, w9
   17428:	b.cs	17510 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x198>  // b.hs, b.nlast
   1742c:	add	x25, x25, #0x1
   17430:	add	w8, w8, #0x1
   17434:	cmp	x25, x24
   17438:	str	w8, [x19, #8]
   1743c:	b.eq	174ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x134>  // b.none
   17440:	ldr	w8, [x21, #8]
   17444:	cmp	x25, x8
   17448:	b.cc	173b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x3c>  // b.lo, b.ul, b.last
   1744c:	b	17530 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x1b8>
   17450:	mov	w13, #0x1                   	// #1
   17454:	cmn	x12, #0x4
   17458:	b.eq	17480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x108>  // b.none
   1745c:	add	w10, w10, w13
   17460:	and	w10, w10, w11
   17464:	lsl	x12, x10, #4
   17468:	ldr	x12, [x9, x12]
   1746c:	add	w13, w13, #0x1
   17470:	cmp	x12, x8
   17474:	b.ne	17454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xdc>  // b.any
   17478:	mov	w10, w10
   1747c:	b	17404 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x8c>
   17480:	mov	x26, xzr
   17484:	ldp	w8, w9, [x19, #8]
   17488:	cmp	w8, w9
   1748c:	b.cc	17418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xa0>  // b.lo, b.ul, b.last
   17490:	mov	w3, #0x8                   	// #8
   17494:	mov	x0, x19
   17498:	mov	x1, x23
   1749c:	mov	x2, xzr
   174a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   174a4:	ldr	w8, [x19, #8]
   174a8:	b	17418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xa0>
   174ac:	ldrb	w8, [x21, #1]
   174b0:	ldr	x0, [x22]
   174b4:	mov	w9, #0x3                   	// #3
   174b8:	mov	x2, x19
   174bc:	and	w8, w8, #0x7f
   174c0:	cmp	w8, #0x1
   174c4:	mov	w8, #0x5                   	// #5
   174c8:	csel	w1, w8, w9, eq  // eq = none
   174cc:	mov	w3, w20
   174d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   174d4:	str	wzr, [x19, #8]
   174d8:	ldp	x20, x19, [sp, #64]
   174dc:	ldp	x22, x21, [sp, #48]
   174e0:	ldp	x24, x23, [sp, #32]
   174e4:	ldp	x26, x25, [sp, #16]
   174e8:	ldp	x29, x30, [sp], #80
   174ec:	ret
   174f0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   174f4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   174f8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   174fc:	add	x0, x0, #0x0
   17500:	add	x1, x1, #0x0
   17504:	add	x3, x3, #0x0
   17508:	mov	w2, #0x252                 	// #594
   1750c:	bl	0 <__assert_fail>
   17510:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17514:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17518:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1751c:	add	x0, x0, #0x0
   17520:	add	x1, x1, #0x0
   17524:	add	x3, x3, #0x0
   17528:	mov	w2, #0x43                  	// #67
   1752c:	bl	0 <__assert_fail>
   17530:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17534:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17538:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1753c:	add	x0, x0, #0x0
   17540:	add	x1, x1, #0x0
   17544:	add	x3, x3, #0x0
   17548:	mov	w2, #0x436                 	// #1078
   1754c:	bl	0 <__assert_fail>
   17550:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17554:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17558:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1755c:	add	x0, x0, #0x0
   17560:	add	x1, x1, #0x0
   17564:	add	x3, x3, #0x0
   17568:	mov	w2, #0x59e                 	// #1438
   1756c:	bl	0 <__assert_fail>

0000000000017570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj>:
   17570:	stp	x29, x30, [sp, #-64]!
   17574:	str	x23, [sp, #16]
   17578:	stp	x22, x21, [sp, #32]
   1757c:	stp	x20, x19, [sp, #48]
   17580:	mov	x29, sp
   17584:	ldr	w8, [x3]
   17588:	mov	x20, x3
   1758c:	mov	x19, x2
   17590:	mov	x22, x1
   17594:	mov	x21, x0
   17598:	cbnz	w8, 175a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x38>
   1759c:	mov	x0, x21
   175a0:	bl	14a38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv>
   175a4:	str	w0, [x20]
   175a8:	ldrb	w9, [x22, #1]
   175ac:	ldp	w8, w10, [x19, #8]
   175b0:	and	w9, w9, #0x7f
   175b4:	cmp	w9, #0x1
   175b8:	cset	w23, eq  // eq = none
   175bc:	cmp	w8, w10
   175c0:	b.cs	177b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x240>  // b.hs, b.nlast
   175c4:	ldr	x9, [x19]
   175c8:	str	x23, [x9, w8, uxtw #3]
   175cc:	ldp	w8, w9, [x19, #8]
   175d0:	cmp	w8, w9
   175d4:	b.cs	17900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x390>  // b.hs, b.nlast
   175d8:	add	w8, w8, #0x1
   175dc:	str	w8, [x19, #8]
   175e0:	ldr	w23, [x22, #4]
   175e4:	cmp	w8, w9
   175e8:	b.cs	177cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x25c>  // b.hs, b.nlast
   175ec:	ldr	x9, [x19]
   175f0:	str	x23, [x9, w8, uxtw #3]
   175f4:	ldp	w8, w9, [x19, #8]
   175f8:	cmp	w8, w9
   175fc:	b.cs	17900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x390>  // b.hs, b.nlast
   17600:	add	w8, w8, #0x1
   17604:	str	w8, [x19, #8]
   17608:	ldrh	w23, [x22, #2]
   1760c:	cmp	w8, w9
   17610:	b.cs	177e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x278>  // b.hs, b.nlast
   17614:	ldr	x9, [x19]
   17618:	str	x23, [x9, w8, uxtw #3]
   1761c:	ldp	w8, w9, [x19, #8]
   17620:	cmp	w8, w9
   17624:	b.cs	17900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x390>  // b.hs, b.nlast
   17628:	add	w8, w8, #0x1
   1762c:	str	w8, [x19, #8]
   17630:	ldr	w10, [x22, #8]
   17634:	cbz	w10, 17940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x3d0>
   17638:	sub	x10, x22, x10, lsl #3
   1763c:	ldr	x10, [x10]
   17640:	cbz	x10, 17960 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x3f0>
   17644:	ldrb	w11, [x10]
   17648:	sub	w11, w11, #0x11
   1764c:	cmp	w11, #0x3
   17650:	b.cs	17980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x410>  // b.hs, b.nlast
   17654:	ldr	w12, [x21, #304]
   17658:	cbz	w12, 17840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2d0>
   1765c:	orr	x11, x10, #0x4
   17660:	cmn	x11, #0x4
   17664:	b.eq	17920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x3b0>  // b.none
   17668:	ldr	x11, [x21, #288]
   1766c:	ubfx	x13, x10, #4, #28
   17670:	eor	w14, w13, w10, lsr #9
   17674:	sub	w13, w12, #0x1
   17678:	and	w12, w13, w14
   1767c:	lsl	x14, x12, #4
   17680:	ldr	x14, [x11, x14]
   17684:	cmp	x14, x10
   17688:	b.ne	17804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x294>  // b.any
   1768c:	add	x10, x11, x12, lsl #4
   17690:	ldr	x10, [x10, #8]
   17694:	lsr	x10, x10, #32
   17698:	cbz	x10, 17840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2d0>
   1769c:	cmp	w8, w9
   176a0:	sub	w23, w10, #0x1
   176a4:	b.cs	17860 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2f0>  // b.hs, b.nlast
   176a8:	ldr	x9, [x19]
   176ac:	str	x23, [x9, w8, uxtw #3]
   176b0:	ldp	w8, w9, [x19, #8]
   176b4:	cmp	w8, w9
   176b8:	b.cs	17900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x390>  // b.hs, b.nlast
   176bc:	add	w8, w8, #0x1
   176c0:	str	w8, [x19, #8]
   176c4:	ldr	w10, [x22, #8]
   176c8:	cmp	w10, #0x2
   176cc:	b.ne	176f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x180>  // b.any
   176d0:	ldur	x10, [x22, #-8]
   176d4:	cbz	x10, 176e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x174>
   176d8:	ldrb	w11, [x10]
   176dc:	cmp	w11, #0x5
   176e0:	b.ne	179a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x430>  // b.any
   176e4:	ldr	w12, [x21, #304]
   176e8:	cbnz	w12, 176fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x18c>
   176ec:	b	178d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x368>
   176f0:	mov	x10, xzr
   176f4:	ldr	w12, [x21, #304]
   176f8:	cbz	w12, 178d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x368>
   176fc:	orr	x11, x10, #0x4
   17700:	cmn	x11, #0x4
   17704:	b.eq	17920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x3b0>  // b.none
   17708:	ldr	x11, [x21, #288]
   1770c:	ubfx	x13, x10, #4, #28
   17710:	eor	w14, w13, w10, lsr #9
   17714:	sub	w13, w12, #0x1
   17718:	and	w12, w14, w13
   1771c:	lsl	x14, x12, #4
   17720:	ldr	x14, [x11, x14]
   17724:	cmp	x14, x10
   17728:	b.ne	17898 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x328>  // b.any
   1772c:	add	x10, x11, x12, lsl #4
   17730:	ldr	w23, [x10, #12]
   17734:	cmp	w8, w9
   17738:	b.cs	178e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x374>  // b.hs, b.nlast
   1773c:	ldr	x9, [x19]
   17740:	str	x23, [x9, w8, uxtw #3]
   17744:	ldp	w8, w9, [x19, #8]
   17748:	cmp	w8, w9
   1774c:	b.cs	17900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x390>  // b.hs, b.nlast
   17750:	add	w8, w8, #0x1
   17754:	str	w8, [x19, #8]
   17758:	ldrb	w10, [x22, #1]
   1775c:	cmp	w8, w9
   17760:	lsr	x22, x10, #7
   17764:	b.cs	1787c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x30c>  // b.hs, b.nlast
   17768:	ldr	x9, [x19]
   1776c:	str	x22, [x9, w8, uxtw #3]
   17770:	ldp	w8, w9, [x19, #8]
   17774:	cmp	w8, w9
   17778:	b.cs	17900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x390>  // b.hs, b.nlast
   1777c:	add	w8, w8, #0x1
   17780:	str	w8, [x19, #8]
   17784:	ldr	x0, [x21]
   17788:	ldr	w3, [x20]
   1778c:	mov	w1, #0x7                   	// #7
   17790:	mov	x2, x19
   17794:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17798:	str	wzr, [x19, #8]
   1779c:	ldp	x20, x19, [sp, #48]
   177a0:	ldp	x22, x21, [sp, #32]
   177a4:	ldr	x23, [sp, #16]
   177a8:	ldp	x29, x30, [sp], #64
   177ac:	ret
   177b0:	add	x1, x19, #0x10
   177b4:	mov	w3, #0x8                   	// #8
   177b8:	mov	x0, x19
   177bc:	mov	x2, xzr
   177c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   177c4:	ldr	w8, [x19, #8]
   177c8:	b	175c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x54>
   177cc:	add	x1, x19, #0x10
   177d0:	mov	w3, #0x8                   	// #8
   177d4:	mov	x0, x19
   177d8:	mov	x2, xzr
   177dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   177e0:	ldr	w8, [x19, #8]
   177e4:	b	175ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x7c>
   177e8:	add	x1, x19, #0x10
   177ec:	mov	w3, #0x8                   	// #8
   177f0:	mov	x0, x19
   177f4:	mov	x2, xzr
   177f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   177fc:	ldr	w8, [x19, #8]
   17800:	b	17614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0xa4>
   17804:	mov	w15, #0x1                   	// #1
   17808:	cmn	x14, #0x4
   1780c:	b.eq	17840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2d0>  // b.none
   17810:	add	w12, w12, w15
   17814:	and	w12, w12, w13
   17818:	lsl	x14, x12, #4
   1781c:	ldr	x14, [x11, x14]
   17820:	add	w15, w15, #0x1
   17824:	cmp	x14, x10
   17828:	b.ne	17808 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x298>  // b.any
   1782c:	mov	w12, w12
   17830:	add	x10, x11, x12, lsl #4
   17834:	ldr	x10, [x10, #8]
   17838:	lsr	x10, x10, #32
   1783c:	cbnz	x10, 1769c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x12c>
   17840:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17844:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17848:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1784c:	add	x0, x0, #0x0
   17850:	add	x1, x1, #0x0
   17854:	add	x3, x3, #0x0
   17858:	mov	w2, #0x9b                  	// #155
   1785c:	bl	0 <__assert_fail>
   17860:	add	x1, x19, #0x10
   17864:	mov	w3, #0x8                   	// #8
   17868:	mov	x0, x19
   1786c:	mov	x2, xzr
   17870:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17874:	ldr	w8, [x19, #8]
   17878:	b	176a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x138>
   1787c:	add	x1, x19, #0x10
   17880:	mov	w3, #0x8                   	// #8
   17884:	mov	x0, x19
   17888:	mov	x2, xzr
   1788c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17890:	ldr	w8, [x19, #8]
   17894:	b	17768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x1f8>
   17898:	mov	w15, #0x1                   	// #1
   1789c:	cmn	x14, #0x4
   178a0:	b.eq	178d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x368>  // b.none
   178a4:	add	w12, w12, w15
   178a8:	and	w12, w12, w13
   178ac:	lsl	x14, x12, #4
   178b0:	ldr	x14, [x11, x14]
   178b4:	add	w15, w15, #0x1
   178b8:	cmp	x14, x10
   178bc:	b.ne	1789c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x32c>  // b.any
   178c0:	mov	w12, w12
   178c4:	add	x10, x11, x12, lsl #4
   178c8:	ldr	w23, [x10, #12]
   178cc:	cmp	w8, w9
   178d0:	b.cc	1773c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x1cc>  // b.lo, b.ul, b.last
   178d4:	b	178e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x374>
   178d8:	mov	x23, xzr
   178dc:	cmp	w8, w9
   178e0:	b.cc	1773c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x1cc>  // b.lo, b.ul, b.last
   178e4:	add	x1, x19, #0x10
   178e8:	mov	w3, #0x8                   	// #8
   178ec:	mov	x0, x19
   178f0:	mov	x2, xzr
   178f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   178f8:	ldr	w8, [x19, #8]
   178fc:	b	1773c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x1cc>
   17900:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17904:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17908:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1790c:	add	x0, x0, #0x0
   17910:	add	x1, x1, #0x0
   17914:	add	x3, x3, #0x0
   17918:	mov	w2, #0x43                  	// #67
   1791c:	bl	0 <__assert_fail>
   17920:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17924:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17928:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1792c:	add	x0, x0, #0x0
   17930:	add	x1, x1, #0x0
   17934:	add	x3, x3, #0x0
   17938:	mov	w2, #0x252                 	// #594
   1793c:	bl	0 <__assert_fail>
   17940:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17944:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17948:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1794c:	add	x0, x0, #0x0
   17950:	add	x1, x1, #0x0
   17954:	add	x3, x3, #0x0
   17958:	mov	w2, #0x436                 	// #1078
   1795c:	bl	0 <__assert_fail>
   17960:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17964:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17968:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1796c:	add	x0, x0, #0x0
   17970:	add	x1, x1, #0x0
   17974:	add	x3, x3, #0x0
   17978:	mov	w2, #0x69                  	// #105
   1797c:	bl	0 <__assert_fail>
   17980:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17984:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17988:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1798c:	add	x0, x0, #0x0
   17990:	add	x1, x1, #0x0
   17994:	add	x3, x3, #0x0
   17998:	mov	w2, #0x108                 	// #264
   1799c:	bl	0 <__assert_fail>
   179a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   179a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   179a8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   179ac:	add	x0, x0, #0x0
   179b0:	add	x1, x1, #0x0
   179b4:	add	x3, x3, #0x0
   179b8:	mov	w2, #0x134                 	// #308
   179bc:	bl	0 <__assert_fail>

00000000000179c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj>:
   179c0:	stp	x29, x30, [sp, #-64]!
   179c4:	stp	x24, x23, [sp, #16]
   179c8:	stp	x22, x21, [sp, #32]
   179cc:	stp	x20, x19, [sp, #48]
   179d0:	mov	x29, sp
   179d4:	ldp	x9, x10, [x1, #24]
   179d8:	ldr	w8, [x2, #12]
   179dc:	mov	x20, x2
   179e0:	mov	w19, w3
   179e4:	sub	x9, x10, x9
   179e8:	asr	x9, x9, #3
   179ec:	add	x2, x9, #0x1
   179f0:	mov	x22, x1
   179f4:	cmp	x2, x8
   179f8:	mov	x21, x0
   179fc:	b.ls	17a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x54>  // b.plast
   17a00:	add	x1, x20, #0x10
   17a04:	mov	w3, #0x8                   	// #8
   17a08:	mov	x0, x20
   17a0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17a10:	ldr	w8, [x20, #12]
   17a14:	ldrb	w10, [x22, #1]
   17a18:	ldr	w9, [x20, #8]
   17a1c:	and	w10, w10, #0x7f
   17a20:	cmp	w10, #0x1
   17a24:	cset	w10, eq  // eq = none
   17a28:	cmp	w9, w8
   17a2c:	orr	x23, x10, #0x6
   17a30:	b.cs	17ad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x118>  // b.hs, b.nlast
   17a34:	ldr	x8, [x20]
   17a38:	str	x23, [x8, w9, uxtw #3]
   17a3c:	ldp	w9, w8, [x20, #8]
   17a40:	cmp	w9, w8
   17a44:	b.cs	17af4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x134>  // b.hs, b.nlast
   17a48:	add	x9, x9, #0x1
   17a4c:	str	w9, [x20, #8]
   17a50:	ldp	x23, x10, [x22, #24]
   17a54:	sub	x8, x8, x9
   17a58:	sub	x22, x10, x23
   17a5c:	asr	x24, x22, #3
   17a60:	cmp	x24, x8
   17a64:	b.ls	17a7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0xbc>  // b.plast
   17a68:	add	x2, x24, x9
   17a6c:	add	x1, x20, #0x10
   17a70:	mov	w3, #0x8                   	// #8
   17a74:	mov	x0, x20
   17a78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17a7c:	cbz	x22, 17a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0xd8>
   17a80:	ldr	x8, [x20]
   17a84:	ldr	w9, [x20, #8]
   17a88:	mov	x1, x23
   17a8c:	mov	x2, x22
   17a90:	add	x0, x8, x9, lsl #3
   17a94:	bl	0 <memcpy>
   17a98:	ldp	w8, w9, [x20, #8]
   17a9c:	add	x8, x24, x8
   17aa0:	cmp	x8, x9
   17aa4:	b.hi	17af4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x134>  // b.pmore
   17aa8:	str	w8, [x20, #8]
   17aac:	ldr	x0, [x21]
   17ab0:	mov	w1, #0x1d                  	// #29
   17ab4:	mov	x2, x20
   17ab8:	mov	w3, w19
   17abc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17ac0:	str	wzr, [x20, #8]
   17ac4:	ldp	x20, x19, [sp, #48]
   17ac8:	ldp	x22, x21, [sp, #32]
   17acc:	ldp	x24, x23, [sp, #16]
   17ad0:	ldp	x29, x30, [sp], #64
   17ad4:	ret
   17ad8:	add	x1, x20, #0x10
   17adc:	mov	w3, #0x8                   	// #8
   17ae0:	mov	x0, x20
   17ae4:	mov	x2, xzr
   17ae8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17aec:	ldr	w9, [x20, #8]
   17af0:	b	17a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x74>
   17af4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17af8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17afc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17b00:	add	x0, x0, #0x0
   17b04:	add	x1, x1, #0x0
   17b08:	add	x3, x3, #0x0
   17b0c:	mov	w2, #0x43                  	// #67
   17b10:	bl	0 <__assert_fail>

0000000000017b14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj>:
   17b14:	stp	x29, x30, [sp, #-80]!
   17b18:	str	x25, [sp, #16]
   17b1c:	stp	x24, x23, [sp, #32]
   17b20:	stp	x22, x21, [sp, #48]
   17b24:	stp	x20, x19, [sp, #64]
   17b28:	mov	x29, sp
   17b2c:	ldr	w8, [x3]
   17b30:	mov	x20, x3
   17b34:	mov	x19, x2
   17b38:	mov	x21, x1
   17b3c:	mov	x22, x0
   17b40:	cbnz	w8, 17b50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x3c>
   17b44:	mov	x0, x22
   17b48:	bl	14e40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv>
   17b4c:	str	w0, [x20]
   17b50:	ldrb	w9, [x21, #1]
   17b54:	ldp	w8, w10, [x19, #8]
   17b58:	and	w9, w9, #0x7f
   17b5c:	cmp	w9, #0x1
   17b60:	cset	w23, eq  // eq = none
   17b64:	cmp	w8, w10
   17b68:	b.cs	17cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x1e8>  // b.hs, b.nlast
   17b6c:	ldr	x9, [x19]
   17b70:	str	x23, [x9, w8, uxtw #3]
   17b74:	ldp	w8, w9, [x19, #8]
   17b78:	cmp	w8, w9
   17b7c:	b.cs	17d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x25c>  // b.hs, b.nlast
   17b80:	add	w8, w8, #0x1
   17b84:	str	w8, [x19, #8]
   17b88:	ldrh	w23, [x21, #2]
   17b8c:	cmp	w8, w9
   17b90:	b.cs	17d18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x204>  // b.hs, b.nlast
   17b94:	ldr	x9, [x19]
   17b98:	str	x23, [x9, w8, uxtw #3]
   17b9c:	ldp	w8, w9, [x19, #8]
   17ba0:	cmp	w8, w9
   17ba4:	b.cs	17d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x25c>  // b.hs, b.nlast
   17ba8:	add	w8, w8, #0x1
   17bac:	cmp	w8, w9
   17bb0:	str	w8, [x19, #8]
   17bb4:	b.cs	17d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x220>  // b.hs, b.nlast
   17bb8:	ldr	x9, [x19]
   17bbc:	str	xzr, [x9, w8, uxtw #3]
   17bc0:	ldp	w9, w8, [x19, #8]
   17bc4:	cmp	w9, w8
   17bc8:	b.cs	17d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x25c>  // b.hs, b.nlast
   17bcc:	add	w9, w9, #0x1
   17bd0:	str	w9, [x19, #8]
   17bd4:	ldr	w10, [x21, #8]
   17bd8:	neg	x11, x10
   17bdc:	lsl	x11, x11, #3
   17be0:	cbz	x11, 17ccc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x1b8>
   17be4:	sub	x24, x21, x10, lsl #3
   17be8:	add	x23, x19, #0x10
   17bec:	ldr	w12, [x22, #304]
   17bf0:	cbz	w12, 17ca4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x190>
   17bf4:	ldr	x10, [x24]
   17bf8:	orr	x11, x10, #0x4
   17bfc:	cmn	x11, #0x4
   17c00:	b.eq	17d50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x23c>  // b.none
   17c04:	ldr	x11, [x22, #288]
   17c08:	ubfx	x13, x10, #4, #28
   17c0c:	eor	w14, w13, w10, lsr #9
   17c10:	sub	w13, w12, #0x1
   17c14:	and	w12, w14, w13
   17c18:	lsl	x14, x12, #4
   17c1c:	ldr	x14, [x11, x14]
   17c20:	cmp	x14, x10
   17c24:	b.ne	17c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x150>  // b.any
   17c28:	add	x10, x11, x12, lsl #4
   17c2c:	ldr	w25, [x10, #12]
   17c30:	cmp	w9, w8
   17c34:	b.cs	17cb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x19c>  // b.hs, b.nlast
   17c38:	ldr	x8, [x19]
   17c3c:	str	x25, [x8, w9, uxtw #3]
   17c40:	ldp	w9, w8, [x19, #8]
   17c44:	cmp	w9, w8
   17c48:	b.cs	17d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x25c>  // b.hs, b.nlast
   17c4c:	add	x24, x24, #0x8
   17c50:	add	w9, w9, #0x1
   17c54:	cmp	x24, x21
   17c58:	str	w9, [x19, #8]
   17c5c:	b.ne	17bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0xd8>  // b.any
   17c60:	b	17ccc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x1b8>
   17c64:	mov	w15, #0x1                   	// #1
   17c68:	cmn	x14, #0x4
   17c6c:	b.eq	17ca4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x190>  // b.none
   17c70:	add	w12, w12, w15
   17c74:	and	w12, w12, w13
   17c78:	lsl	x14, x12, #4
   17c7c:	ldr	x14, [x11, x14]
   17c80:	add	w15, w15, #0x1
   17c84:	cmp	x14, x10
   17c88:	b.ne	17c68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x154>  // b.any
   17c8c:	mov	w12, w12
   17c90:	add	x10, x11, x12, lsl #4
   17c94:	ldr	w25, [x10, #12]
   17c98:	cmp	w9, w8
   17c9c:	b.cc	17c38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x124>  // b.lo, b.ul, b.last
   17ca0:	b	17cb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x19c>
   17ca4:	mov	x25, xzr
   17ca8:	cmp	w9, w8
   17cac:	b.cc	17c38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x124>  // b.lo, b.ul, b.last
   17cb0:	mov	w3, #0x8                   	// #8
   17cb4:	mov	x0, x19
   17cb8:	mov	x1, x23
   17cbc:	mov	x2, xzr
   17cc0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17cc4:	ldr	w9, [x19, #8]
   17cc8:	b	17c38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x124>
   17ccc:	ldr	x0, [x22]
   17cd0:	ldr	w3, [x20]
   17cd4:	mov	w1, #0xc                   	// #12
   17cd8:	mov	x2, x19
   17cdc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17ce0:	str	wzr, [x19, #8]
   17ce4:	ldp	x20, x19, [sp, #64]
   17ce8:	ldp	x22, x21, [sp, #48]
   17cec:	ldp	x24, x23, [sp, #32]
   17cf0:	ldr	x25, [sp, #16]
   17cf4:	ldp	x29, x30, [sp], #80
   17cf8:	ret
   17cfc:	add	x1, x19, #0x10
   17d00:	mov	w3, #0x8                   	// #8
   17d04:	mov	x0, x19
   17d08:	mov	x2, xzr
   17d0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17d10:	ldr	w8, [x19, #8]
   17d14:	b	17b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x58>
   17d18:	add	x1, x19, #0x10
   17d1c:	mov	w3, #0x8                   	// #8
   17d20:	mov	x0, x19
   17d24:	mov	x2, xzr
   17d28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17d2c:	ldr	w8, [x19, #8]
   17d30:	b	17b94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x80>
   17d34:	add	x1, x19, #0x10
   17d38:	mov	w3, #0x8                   	// #8
   17d3c:	mov	x0, x19
   17d40:	mov	x2, xzr
   17d44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17d48:	ldr	w8, [x19, #8]
   17d4c:	b	17bb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0xa4>
   17d50:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17d54:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17d58:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17d5c:	add	x0, x0, #0x0
   17d60:	add	x1, x1, #0x0
   17d64:	add	x3, x3, #0x0
   17d68:	mov	w2, #0x252                 	// #594
   17d6c:	bl	0 <__assert_fail>
   17d70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17d74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17d78:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17d7c:	add	x0, x0, #0x0
   17d80:	add	x1, x1, #0x0
   17d84:	add	x3, x3, #0x0
   17d88:	mov	w2, #0x43                  	// #67
   17d8c:	bl	0 <__assert_fail>

0000000000017d90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj>:
   17d90:	stp	x29, x30, [sp, #-64]!
   17d94:	str	x23, [sp, #16]
   17d98:	stp	x22, x21, [sp, #32]
   17d9c:	stp	x20, x19, [sp, #48]
   17da0:	mov	x29, sp
   17da4:	ldrb	w9, [x1, #1]
   17da8:	ldp	w8, w10, [x2, #8]
   17dac:	mov	w20, w3
   17db0:	mov	x19, x2
   17db4:	and	w9, w9, #0x7f
   17db8:	cmp	w9, #0x1
   17dbc:	cset	w9, eq  // eq = none
   17dc0:	mov	x22, x1
   17dc4:	mov	x21, x0
   17dc8:	cmp	w8, w10
   17dcc:	orr	x23, x9, #0x2
   17dd0:	b.cs	17ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x130>  // b.hs, b.nlast
   17dd4:	ldr	x9, [x19]
   17dd8:	str	x23, [x9, w8, uxtw #3]
   17ddc:	ldp	w8, w9, [x19, #8]
   17de0:	cmp	w8, w9
   17de4:	b.cs	17f60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1d0>  // b.hs, b.nlast
   17de8:	add	w8, w8, #0x1
   17dec:	str	w8, [x19, #8]
   17df0:	ldr	w10, [x22, #8]
   17df4:	cbz	w10, 17fa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x210>
   17df8:	ldr	w12, [x21, #304]
   17dfc:	cbz	w12, 17f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1a8>
   17e00:	sub	x10, x22, x10, lsl #3
   17e04:	ldr	x10, [x10]
   17e08:	orr	x11, x10, #0x4
   17e0c:	cmn	x11, #0x4
   17e10:	b.eq	17f80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1f0>  // b.none
   17e14:	ldr	x11, [x21, #288]
   17e18:	ubfx	x13, x10, #4, #28
   17e1c:	eor	w14, w13, w10, lsr #9
   17e20:	sub	w13, w12, #0x1
   17e24:	and	w12, w14, w13
   17e28:	lsl	x14, x12, #4
   17e2c:	ldr	x14, [x11, x14]
   17e30:	cmp	x14, x10
   17e34:	b.ne	17ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x168>  // b.any
   17e38:	add	x10, x11, x12, lsl #4
   17e3c:	ldr	w23, [x10, #12]
   17e40:	cmp	w8, w9
   17e44:	b.cs	17f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1b4>  // b.hs, b.nlast
   17e48:	ldr	x9, [x19]
   17e4c:	str	x23, [x9, w8, uxtw #3]
   17e50:	ldp	w8, w9, [x19, #8]
   17e54:	cmp	w8, w9
   17e58:	b.cs	17f60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1d0>  // b.hs, b.nlast
   17e5c:	add	w8, w8, #0x1
   17e60:	str	w8, [x19, #8]
   17e64:	ldr	x10, [x22, #24]
   17e68:	cmp	w8, w9
   17e6c:	lsl	x11, x10, #1
   17e70:	eor	x22, x11, x10, asr #63
   17e74:	b.cs	17edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x14c>  // b.hs, b.nlast
   17e78:	ldr	x9, [x19]
   17e7c:	str	x22, [x9, w8, uxtw #3]
   17e80:	ldp	w8, w9, [x19, #8]
   17e84:	cmp	w8, w9
   17e88:	b.cs	17f60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1d0>  // b.hs, b.nlast
   17e8c:	add	w8, w8, #0x1
   17e90:	str	w8, [x19, #8]
   17e94:	ldr	x0, [x21]
   17e98:	mov	w1, #0xd                   	// #13
   17e9c:	mov	x2, x19
   17ea0:	mov	w3, w20
   17ea4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17ea8:	str	wzr, [x19, #8]
   17eac:	ldp	x20, x19, [sp, #48]
   17eb0:	ldp	x22, x21, [sp, #32]
   17eb4:	ldr	x23, [sp, #16]
   17eb8:	ldp	x29, x30, [sp], #64
   17ebc:	ret
   17ec0:	add	x1, x19, #0x10
   17ec4:	mov	w3, #0x8                   	// #8
   17ec8:	mov	x0, x19
   17ecc:	mov	x2, xzr
   17ed0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17ed4:	ldr	w8, [x19, #8]
   17ed8:	b	17dd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x44>
   17edc:	add	x1, x19, #0x10
   17ee0:	mov	w3, #0x8                   	// #8
   17ee4:	mov	x0, x19
   17ee8:	mov	x2, xzr
   17eec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17ef0:	ldr	w8, [x19, #8]
   17ef4:	b	17e78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0xe8>
   17ef8:	mov	w15, #0x1                   	// #1
   17efc:	cmn	x14, #0x4
   17f00:	b.eq	17f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1a8>  // b.none
   17f04:	add	w12, w12, w15
   17f08:	and	w12, w12, w13
   17f0c:	lsl	x14, x12, #4
   17f10:	ldr	x14, [x11, x14]
   17f14:	add	w15, w15, #0x1
   17f18:	cmp	x14, x10
   17f1c:	b.ne	17efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x16c>  // b.any
   17f20:	mov	w12, w12
   17f24:	add	x10, x11, x12, lsl #4
   17f28:	ldr	w23, [x10, #12]
   17f2c:	cmp	w8, w9
   17f30:	b.cc	17e48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0xb8>  // b.lo, b.ul, b.last
   17f34:	b	17f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1b4>
   17f38:	mov	x23, xzr
   17f3c:	cmp	w8, w9
   17f40:	b.cc	17e48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0xb8>  // b.lo, b.ul, b.last
   17f44:	add	x1, x19, #0x10
   17f48:	mov	w3, #0x8                   	// #8
   17f4c:	mov	x0, x19
   17f50:	mov	x2, xzr
   17f54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17f58:	ldr	w8, [x19, #8]
   17f5c:	b	17e48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0xb8>
   17f60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f6c:	add	x0, x0, #0x0
   17f70:	add	x1, x1, #0x0
   17f74:	add	x3, x3, #0x0
   17f78:	mov	w2, #0x43                  	// #67
   17f7c:	bl	0 <__assert_fail>
   17f80:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f84:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f88:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f8c:	add	x0, x0, #0x0
   17f90:	add	x1, x1, #0x0
   17f94:	add	x3, x3, #0x0
   17f98:	mov	w2, #0x252                 	// #594
   17f9c:	bl	0 <__assert_fail>
   17fa0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17fa4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17fa8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17fac:	add	x0, x0, #0x0
   17fb0:	add	x1, x1, #0x0
   17fb4:	add	x3, x3, #0x0
   17fb8:	mov	w2, #0x436                 	// #1078
   17fbc:	bl	0 <__assert_fail>

0000000000017fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj>:
   17fc0:	stp	x29, x30, [sp, #-64]!
   17fc4:	str	x23, [sp, #16]
   17fc8:	stp	x22, x21, [sp, #32]
   17fcc:	stp	x20, x19, [sp, #48]
   17fd0:	mov	x29, sp
   17fd4:	ldrb	w9, [x1, #1]
   17fd8:	ldp	w8, w10, [x2, #8]
   17fdc:	mov	w20, w3
   17fe0:	mov	x19, x2
   17fe4:	and	w9, w9, #0x7f
   17fe8:	cmp	w9, #0x1
   17fec:	mov	x22, x1
   17ff0:	cset	w23, eq  // eq = none
   17ff4:	cmp	w8, w10
   17ff8:	mov	x21, x0
   17ffc:	b.cs	18194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x1d4>  // b.hs, b.nlast
   18000:	ldr	x9, [x19]
   18004:	str	x23, [x9, w8, uxtw #3]
   18008:	ldp	w8, w9, [x19, #8]
   1800c:	cmp	w8, w9
   18010:	b.cs	182a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   18014:	add	w8, w8, #0x1
   18018:	str	w8, [x19, #8]
   1801c:	ldrh	w23, [x22, #2]
   18020:	cmp	w8, w9
   18024:	b.cs	181b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x1f0>  // b.hs, b.nlast
   18028:	ldr	x9, [x19]
   1802c:	str	x23, [x9, w8, uxtw #3]
   18030:	ldp	w8, w9, [x19, #8]
   18034:	cmp	w8, w9
   18038:	b.cs	182a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   1803c:	add	w8, w8, #0x1
   18040:	str	w8, [x19, #8]
   18044:	ldr	w10, [x22, #8]
   18048:	cmp	w10, #0x2
   1804c:	b.ls	182e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x324>  // b.plast
   18050:	sub	x10, x22, x10, lsl #3
   18054:	ldr	x10, [x10, #16]
   18058:	cbz	x10, 18064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0xa4>
   1805c:	ldrb	w11, [x10]
   18060:	cbnz	w11, 18304 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x344>
   18064:	ldr	w12, [x21, #304]
   18068:	cbz	w12, 1827c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2bc>
   1806c:	orr	x11, x10, #0x4
   18070:	cmn	x11, #0x4
   18074:	b.eq	182c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x304>  // b.none
   18078:	ldr	x11, [x21, #288]
   1807c:	ubfx	x13, x10, #4, #28
   18080:	eor	w14, w13, w10, lsr #9
   18084:	sub	w13, w12, #0x1
   18088:	and	w12, w14, w13
   1808c:	lsl	x14, x12, #4
   18090:	ldr	x14, [x11, x14]
   18094:	cmp	x14, x10
   18098:	b.ne	1823c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x27c>  // b.any
   1809c:	add	x10, x11, x12, lsl #4
   180a0:	ldr	w23, [x10, #12]
   180a4:	cmp	w8, w9
   180a8:	b.cs	18288 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2c8>  // b.hs, b.nlast
   180ac:	ldr	x9, [x19]
   180b0:	str	x23, [x9, w8, uxtw #3]
   180b4:	ldp	w8, w9, [x19, #8]
   180b8:	cmp	w8, w9
   180bc:	b.cs	182a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   180c0:	add	w8, w8, #0x1
   180c4:	str	w8, [x19, #8]
   180c8:	ldr	x23, [x22, #32]
   180cc:	cmp	w8, w9
   180d0:	b.cs	181cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x20c>  // b.hs, b.nlast
   180d4:	ldr	x9, [x19]
   180d8:	str	x23, [x9, w8, uxtw #3]
   180dc:	ldp	w8, w9, [x19, #8]
   180e0:	cmp	w8, w9
   180e4:	b.cs	182a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   180e8:	add	w8, w8, #0x1
   180ec:	str	w8, [x19, #8]
   180f0:	ldr	w23, [x22, #48]
   180f4:	cmp	w8, w9
   180f8:	b.cs	181e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x228>  // b.hs, b.nlast
   180fc:	ldr	x9, [x19]
   18100:	str	x23, [x9, w8, uxtw #3]
   18104:	ldp	w8, w9, [x19, #8]
   18108:	cmp	w8, w9
   1810c:	b.cs	182a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   18110:	add	w8, w8, #0x1
   18114:	str	w8, [x19, #8]
   18118:	ldr	w23, [x22, #52]
   1811c:	cmp	w8, w9
   18120:	b.cs	18204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x244>  // b.hs, b.nlast
   18124:	ldr	x9, [x19]
   18128:	str	x23, [x9, w8, uxtw #3]
   1812c:	ldp	w8, w9, [x19, #8]
   18130:	cmp	w8, w9
   18134:	b.cs	182a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   18138:	add	w8, w8, #0x1
   1813c:	str	w8, [x19, #8]
   18140:	ldr	w22, [x22, #28]
   18144:	cmp	w8, w9
   18148:	b.cs	18220 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x260>  // b.hs, b.nlast
   1814c:	ldr	x9, [x19]
   18150:	str	x22, [x9, w8, uxtw #3]
   18154:	ldp	w8, w9, [x19, #8]
   18158:	cmp	w8, w9
   1815c:	b.cs	182a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   18160:	add	w8, w8, #0x1
   18164:	str	w8, [x19, #8]
   18168:	ldr	x0, [x21]
   1816c:	mov	w1, #0xf                   	// #15
   18170:	mov	x2, x19
   18174:	mov	w3, w20
   18178:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1817c:	str	wzr, [x19, #8]
   18180:	ldp	x20, x19, [sp, #48]
   18184:	ldp	x22, x21, [sp, #32]
   18188:	ldr	x23, [sp, #16]
   1818c:	ldp	x29, x30, [sp], #64
   18190:	ret
   18194:	add	x1, x19, #0x10
   18198:	mov	w3, #0x8                   	// #8
   1819c:	mov	x0, x19
   181a0:	mov	x2, xzr
   181a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   181a8:	ldr	w8, [x19, #8]
   181ac:	b	18000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x40>
   181b0:	add	x1, x19, #0x10
   181b4:	mov	w3, #0x8                   	// #8
   181b8:	mov	x0, x19
   181bc:	mov	x2, xzr
   181c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   181c4:	ldr	w8, [x19, #8]
   181c8:	b	18028 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x68>
   181cc:	add	x1, x19, #0x10
   181d0:	mov	w3, #0x8                   	// #8
   181d4:	mov	x0, x19
   181d8:	mov	x2, xzr
   181dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   181e0:	ldr	w8, [x19, #8]
   181e4:	b	180d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x114>
   181e8:	add	x1, x19, #0x10
   181ec:	mov	w3, #0x8                   	// #8
   181f0:	mov	x0, x19
   181f4:	mov	x2, xzr
   181f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   181fc:	ldr	w8, [x19, #8]
   18200:	b	180fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x13c>
   18204:	add	x1, x19, #0x10
   18208:	mov	w3, #0x8                   	// #8
   1820c:	mov	x0, x19
   18210:	mov	x2, xzr
   18214:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18218:	ldr	w8, [x19, #8]
   1821c:	b	18124 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x164>
   18220:	add	x1, x19, #0x10
   18224:	mov	w3, #0x8                   	// #8
   18228:	mov	x0, x19
   1822c:	mov	x2, xzr
   18230:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18234:	ldr	w8, [x19, #8]
   18238:	b	1814c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x18c>
   1823c:	mov	w15, #0x1                   	// #1
   18240:	cmn	x14, #0x4
   18244:	b.eq	1827c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2bc>  // b.none
   18248:	add	w12, w12, w15
   1824c:	and	w12, w12, w13
   18250:	lsl	x14, x12, #4
   18254:	ldr	x14, [x11, x14]
   18258:	add	w15, w15, #0x1
   1825c:	cmp	x14, x10
   18260:	b.ne	18240 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x280>  // b.any
   18264:	mov	w12, w12
   18268:	add	x10, x11, x12, lsl #4
   1826c:	ldr	w23, [x10, #12]
   18270:	cmp	w8, w9
   18274:	b.cc	180ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0xec>  // b.lo, b.ul, b.last
   18278:	b	18288 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2c8>
   1827c:	mov	x23, xzr
   18280:	cmp	w8, w9
   18284:	b.cc	180ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0xec>  // b.lo, b.ul, b.last
   18288:	add	x1, x19, #0x10
   1828c:	mov	w3, #0x8                   	// #8
   18290:	mov	x0, x19
   18294:	mov	x2, xzr
   18298:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1829c:	ldr	w8, [x19, #8]
   182a0:	b	180ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0xec>
   182a4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   182a8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   182ac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   182b0:	add	x0, x0, #0x0
   182b4:	add	x1, x1, #0x0
   182b8:	add	x3, x3, #0x0
   182bc:	mov	w2, #0x43                  	// #67
   182c0:	bl	0 <__assert_fail>
   182c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   182c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   182cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   182d0:	add	x0, x0, #0x0
   182d4:	add	x1, x1, #0x0
   182d8:	add	x3, x3, #0x0
   182dc:	mov	w2, #0x252                 	// #594
   182e0:	bl	0 <__assert_fail>
   182e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   182e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   182ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   182f0:	add	x0, x0, #0x0
   182f4:	add	x1, x1, #0x0
   182f8:	add	x3, x3, #0x0
   182fc:	mov	w2, #0x436                 	// #1078
   18300:	bl	0 <__assert_fail>
   18304:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18308:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1830c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18310:	add	x0, x0, #0x0
   18314:	add	x1, x1, #0x0
   18318:	add	x3, x3, #0x0
   1831c:	mov	w2, #0x121                 	// #289
   18320:	bl	0 <__assert_fail>

0000000000018324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj>:
   18324:	stp	x29, x30, [sp, #-64]!
   18328:	str	x23, [sp, #16]
   1832c:	stp	x22, x21, [sp, #32]
   18330:	stp	x20, x19, [sp, #48]
   18334:	mov	x29, sp
   18338:	ldrb	w9, [x1, #1]
   1833c:	ldp	w8, w10, [x2, #8]
   18340:	mov	w20, w3
   18344:	mov	x19, x2
   18348:	and	w9, w9, #0x7f
   1834c:	cmp	w9, #0x1
   18350:	mov	x22, x1
   18354:	cset	w23, eq  // eq = none
   18358:	cmp	w8, w10
   1835c:	mov	x21, x0
   18360:	b.cs	18818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x4f4>  // b.hs, b.nlast
   18364:	ldr	x9, [x19]
   18368:	str	x23, [x9, w8, uxtw #3]
   1836c:	ldp	w8, w9, [x19, #8]
   18370:	cmp	w8, w9
   18374:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   18378:	add	w8, w8, #0x1
   1837c:	str	w8, [x19, #8]
   18380:	ldrh	w23, [x22, #2]
   18384:	cmp	w8, w9
   18388:	b.cs	18834 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x510>  // b.hs, b.nlast
   1838c:	ldr	x9, [x19]
   18390:	str	x23, [x9, w8, uxtw #3]
   18394:	ldp	w8, w9, [x19, #8]
   18398:	cmp	w8, w9
   1839c:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   183a0:	add	w8, w8, #0x1
   183a4:	str	w8, [x19, #8]
   183a8:	ldr	w10, [x22, #8]
   183ac:	cmp	w10, #0x2
   183b0:	b.ls	18b3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x818>  // b.plast
   183b4:	sub	x10, x22, x10, lsl #3
   183b8:	ldr	x10, [x10, #16]
   183bc:	cbz	x10, 183c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0xa4>
   183c0:	ldrb	w11, [x10]
   183c4:	cbnz	w11, 18b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x858>
   183c8:	ldr	w12, [x21, #304]
   183cc:	cbz	w12, 1891c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x5f8>
   183d0:	orr	x11, x10, #0x4
   183d4:	cmn	x11, #0x4
   183d8:	b.eq	18b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7f8>  // b.none
   183dc:	ldr	x11, [x21, #288]
   183e0:	ubfx	x13, x10, #4, #28
   183e4:	eor	w14, w13, w10, lsr #9
   183e8:	sub	w13, w12, #0x1
   183ec:	and	w12, w14, w13
   183f0:	lsl	x14, x12, #4
   183f4:	ldr	x14, [x11, x14]
   183f8:	cmp	x14, x10
   183fc:	b.ne	188dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x5b8>  // b.any
   18400:	add	x10, x11, x12, lsl #4
   18404:	ldr	w23, [x10, #12]
   18408:	cmp	w8, w9
   1840c:	b.cs	18928 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x604>  // b.hs, b.nlast
   18410:	ldr	x9, [x19]
   18414:	str	x23, [x9, w8, uxtw #3]
   18418:	ldp	w8, w9, [x19, #8]
   1841c:	cmp	w8, w9
   18420:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   18424:	add	w8, w8, #0x1
   18428:	str	w8, [x19, #8]
   1842c:	cbz	x22, 18b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x838>
   18430:	ldrb	w10, [x22]
   18434:	cmp	w10, #0xf
   18438:	b.ne	18448 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x124>  // b.any
   1843c:	mov	x10, x22
   18440:	cbnz	x10, 1845c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x138>
   18444:	b	18468 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x144>
   18448:	ldr	w10, [x22, #8]
   1844c:	cbz	w10, 18b3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x818>
   18450:	sub	x10, x22, x10, lsl #3
   18454:	ldr	x10, [x10]
   18458:	cbz	x10, 18468 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x144>
   1845c:	ldrb	w11, [x10]
   18460:	cmp	w11, #0xf
   18464:	b.ne	18b9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x878>  // b.any
   18468:	ldr	w12, [x21, #304]
   1846c:	cbz	w12, 18984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x660>
   18470:	orr	x11, x10, #0x4
   18474:	cmn	x11, #0x4
   18478:	b.eq	18b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7f8>  // b.none
   1847c:	ldr	x11, [x21, #288]
   18480:	ubfx	x13, x10, #4, #28
   18484:	eor	w14, w13, w10, lsr #9
   18488:	sub	w13, w12, #0x1
   1848c:	and	w12, w14, w13
   18490:	lsl	x14, x12, #4
   18494:	ldr	x14, [x11, x14]
   18498:	cmp	x14, x10
   1849c:	b.ne	18944 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x620>  // b.any
   184a0:	add	x10, x11, x12, lsl #4
   184a4:	ldr	w23, [x10, #12]
   184a8:	cmp	w8, w9
   184ac:	b.cs	18990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x66c>  // b.hs, b.nlast
   184b0:	ldr	x9, [x19]
   184b4:	str	x23, [x9, w8, uxtw #3]
   184b8:	ldp	w8, w9, [x19, #8]
   184bc:	cmp	w8, w9
   184c0:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   184c4:	add	w8, w8, #0x1
   184c8:	str	w8, [x19, #8]
   184cc:	ldr	w23, [x22, #24]
   184d0:	cmp	w8, w9
   184d4:	b.cs	18850 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x52c>  // b.hs, b.nlast
   184d8:	ldr	x9, [x19]
   184dc:	str	x23, [x9, w8, uxtw #3]
   184e0:	ldp	w8, w9, [x19, #8]
   184e4:	cmp	w8, w9
   184e8:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   184ec:	add	w8, w8, #0x1
   184f0:	str	w8, [x19, #8]
   184f4:	ldr	w10, [x22, #8]
   184f8:	cmp	w10, #0x1
   184fc:	b.ls	18b3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x818>  // b.plast
   18500:	sub	x10, x22, x10, lsl #3
   18504:	ldr	x10, [x10, #8]
   18508:	cbz	x10, 18524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x200>
   1850c:	ldrb	w11, [x10]
   18510:	sub	w12, w11, #0xb
   18514:	cmp	w12, #0xb
   18518:	b.cs	187c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x4a4>  // b.hs, b.nlast
   1851c:	cmp	w12, #0xb
   18520:	b.cs	187f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x4cc>  // b.hs, b.nlast
   18524:	ldr	w12, [x21, #304]
   18528:	cbz	w12, 189ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6c8>
   1852c:	orr	x11, x10, #0x4
   18530:	cmn	x11, #0x4
   18534:	b.eq	18b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7f8>  // b.none
   18538:	ldr	x11, [x21, #288]
   1853c:	ubfx	x13, x10, #4, #28
   18540:	eor	w14, w13, w10, lsr #9
   18544:	sub	w13, w12, #0x1
   18548:	and	w12, w14, w13
   1854c:	lsl	x14, x12, #4
   18550:	ldr	x14, [x11, x14]
   18554:	cmp	x14, x10
   18558:	b.ne	189ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x688>  // b.any
   1855c:	add	x10, x11, x12, lsl #4
   18560:	ldr	w23, [x10, #12]
   18564:	cmp	w8, w9
   18568:	b.cs	189f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6d4>  // b.hs, b.nlast
   1856c:	ldr	x9, [x19]
   18570:	str	x23, [x9, w8, uxtw #3]
   18574:	ldp	w8, w9, [x19, #8]
   18578:	cmp	w8, w9
   1857c:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   18580:	add	w8, w8, #0x1
   18584:	str	w8, [x19, #8]
   18588:	ldr	w10, [x22, #8]
   1858c:	cmp	w10, #0x3
   18590:	b.ls	18b3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x818>  // b.plast
   18594:	sub	x10, x22, x10, lsl #3
   18598:	ldr	x10, [x10, #24]
   1859c:	cbz	x10, 185b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x28c>
   185a0:	ldrb	w11, [x10]
   185a4:	sub	w11, w11, #0xb
   185a8:	cmp	w11, #0x4
   185ac:	b.cs	18bbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x898>  // b.hs, b.nlast
   185b0:	ldr	w12, [x21, #304]
   185b4:	cbz	w12, 18a54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x730>
   185b8:	orr	x11, x10, #0x4
   185bc:	cmn	x11, #0x4
   185c0:	b.eq	18b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7f8>  // b.none
   185c4:	ldr	x11, [x21, #288]
   185c8:	ubfx	x13, x10, #4, #28
   185cc:	eor	w14, w13, w10, lsr #9
   185d0:	sub	w13, w12, #0x1
   185d4:	and	w12, w14, w13
   185d8:	lsl	x14, x12, #4
   185dc:	ldr	x14, [x11, x14]
   185e0:	cmp	x14, x10
   185e4:	b.ne	18a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6f0>  // b.any
   185e8:	add	x10, x11, x12, lsl #4
   185ec:	ldr	w23, [x10, #12]
   185f0:	cmp	w8, w9
   185f4:	b.cs	18a60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x73c>  // b.hs, b.nlast
   185f8:	ldr	x9, [x19]
   185fc:	str	x23, [x9, w8, uxtw #3]
   18600:	ldp	w8, w9, [x19, #8]
   18604:	cmp	w8, w9
   18608:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   1860c:	add	w8, w8, #0x1
   18610:	str	w8, [x19, #8]
   18614:	ldr	x23, [x22, #32]
   18618:	cmp	w8, w9
   1861c:	b.cs	1886c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x548>  // b.hs, b.nlast
   18620:	ldr	x9, [x19]
   18624:	str	x23, [x9, w8, uxtw #3]
   18628:	ldp	w8, w9, [x19, #8]
   1862c:	cmp	w8, w9
   18630:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   18634:	add	w8, w8, #0x1
   18638:	str	w8, [x19, #8]
   1863c:	ldr	w23, [x22, #48]
   18640:	cmp	w8, w9
   18644:	b.cs	18888 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x564>  // b.hs, b.nlast
   18648:	ldr	x9, [x19]
   1864c:	str	x23, [x9, w8, uxtw #3]
   18650:	ldp	w8, w9, [x19, #8]
   18654:	cmp	w8, w9
   18658:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   1865c:	add	w8, w8, #0x1
   18660:	str	w8, [x19, #8]
   18664:	ldr	x23, [x22, #40]
   18668:	cmp	w8, w9
   1866c:	b.cs	188a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x580>  // b.hs, b.nlast
   18670:	ldr	x9, [x19]
   18674:	str	x23, [x9, w8, uxtw #3]
   18678:	ldp	w8, w9, [x19, #8]
   1867c:	cmp	w8, w9
   18680:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   18684:	add	w8, w8, #0x1
   18688:	str	w8, [x19, #8]
   1868c:	ldr	w23, [x22, #28]
   18690:	cmp	w8, w9
   18694:	b.cs	188c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x59c>  // b.hs, b.nlast
   18698:	ldr	x9, [x19]
   1869c:	str	x23, [x9, w8, uxtw #3]
   186a0:	ldp	w8, w9, [x19, #8]
   186a4:	cmp	w8, w9
   186a8:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   186ac:	add	w8, w8, #0x1
   186b0:	str	w8, [x19, #8]
   186b4:	ldr	w10, [x22, #8]
   186b8:	cmp	w10, #0x4
   186bc:	b.ls	18b3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x818>  // b.plast
   186c0:	ldr	w12, [x21, #304]
   186c4:	cbz	w12, 18abc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x798>
   186c8:	sub	x10, x22, x10, lsl #3
   186cc:	ldr	x10, [x10, #32]
   186d0:	orr	x11, x10, #0x4
   186d4:	cmn	x11, #0x4
   186d8:	b.eq	18b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7f8>  // b.none
   186dc:	ldr	x11, [x21, #288]
   186e0:	ubfx	x13, x10, #4, #28
   186e4:	eor	w14, w13, w10, lsr #9
   186e8:	sub	w13, w12, #0x1
   186ec:	and	w12, w14, w13
   186f0:	lsl	x14, x12, #4
   186f4:	ldr	x14, [x11, x14]
   186f8:	cmp	x14, x10
   186fc:	b.ne	18a7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x758>  // b.any
   18700:	add	x10, x11, x12, lsl #4
   18704:	ldr	w23, [x10, #12]
   18708:	cmp	w8, w9
   1870c:	b.cs	18ac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7a4>  // b.hs, b.nlast
   18710:	ldr	x9, [x19]
   18714:	str	x23, [x9, w8, uxtw #3]
   18718:	ldp	w8, w9, [x19, #8]
   1871c:	cmp	w8, w9
   18720:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   18724:	add	w8, w8, #0x1
   18728:	str	w8, [x19, #8]
   1872c:	ldur	x10, [x22, #52]
   18730:	tst	x10, #0xff00000000
   18734:	b.eq	1878c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x468>  // b.none
   18738:	cmp	w8, w9
   1873c:	add	w22, w10, #0x1
   18740:	b.cs	18ae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7c0>  // b.hs, b.nlast
   18744:	ldr	x9, [x19]
   18748:	str	x22, [x9, w8, uxtw #3]
   1874c:	ldp	w8, w9, [x19, #8]
   18750:	cmp	w8, w9
   18754:	b.cs	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x484>  // b.hs, b.nlast
   18758:	add	w8, w8, #0x1
   1875c:	str	w8, [x19, #8]
   18760:	ldr	x0, [x21]
   18764:	mov	w1, #0x11                  	// #17
   18768:	mov	x2, x19
   1876c:	mov	w3, w20
   18770:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18774:	str	wzr, [x19, #8]
   18778:	ldp	x20, x19, [sp, #48]
   1877c:	ldp	x22, x21, [sp, #32]
   18780:	ldr	x23, [sp, #16]
   18784:	ldp	x29, x30, [sp], #64
   18788:	ret
   1878c:	cmp	w8, w9
   18790:	b.cs	18b00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7dc>  // b.hs, b.nlast
   18794:	ldr	x9, [x19]
   18798:	str	xzr, [x9, w8, uxtw #3]
   1879c:	ldp	w8, w9, [x19, #8]
   187a0:	cmp	w8, w9
   187a4:	b.cc	18758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x434>  // b.lo, b.ul, b.last
   187a8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   187ac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   187b0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   187b4:	add	x0, x0, #0x0
   187b8:	add	x1, x1, #0x0
   187bc:	add	x3, x3, #0x0
   187c0:	mov	w2, #0x43                  	// #67
   187c4:	bl	0 <__assert_fail>
   187c8:	cmp	w11, #0x1f
   187cc:	b.eq	1851c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x1f8>  // b.none
   187d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   187d4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   187d8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   187dc:	add	x0, x0, #0x0
   187e0:	add	x1, x1, #0x0
   187e4:	add	x3, x3, #0x0
   187e8:	mov	w2, #0x134                 	// #308
   187ec:	bl	0 <__assert_fail>
   187f0:	cmp	w11, #0x1f
   187f4:	b.eq	18524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x200>  // b.none
   187f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   187fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18800:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18804:	add	x0, x0, #0x0
   18808:	add	x1, x1, #0x0
   1880c:	add	x3, x3, #0x0
   18810:	mov	w2, #0x108                 	// #264
   18814:	bl	0 <__assert_fail>
   18818:	add	x1, x19, #0x10
   1881c:	mov	w3, #0x8                   	// #8
   18820:	mov	x0, x19
   18824:	mov	x2, xzr
   18828:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1882c:	ldr	w8, [x19, #8]
   18830:	b	18364 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x40>
   18834:	add	x1, x19, #0x10
   18838:	mov	w3, #0x8                   	// #8
   1883c:	mov	x0, x19
   18840:	mov	x2, xzr
   18844:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18848:	ldr	w8, [x19, #8]
   1884c:	b	1838c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x68>
   18850:	add	x1, x19, #0x10
   18854:	mov	w3, #0x8                   	// #8
   18858:	mov	x0, x19
   1885c:	mov	x2, xzr
   18860:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18864:	ldr	w8, [x19, #8]
   18868:	b	184d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x1b4>
   1886c:	add	x1, x19, #0x10
   18870:	mov	w3, #0x8                   	// #8
   18874:	mov	x0, x19
   18878:	mov	x2, xzr
   1887c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18880:	ldr	w8, [x19, #8]
   18884:	b	18620 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x2fc>
   18888:	add	x1, x19, #0x10
   1888c:	mov	w3, #0x8                   	// #8
   18890:	mov	x0, x19
   18894:	mov	x2, xzr
   18898:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1889c:	ldr	w8, [x19, #8]
   188a0:	b	18648 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x324>
   188a4:	add	x1, x19, #0x10
   188a8:	mov	w3, #0x8                   	// #8
   188ac:	mov	x0, x19
   188b0:	mov	x2, xzr
   188b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   188b8:	ldr	w8, [x19, #8]
   188bc:	b	18670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x34c>
   188c0:	add	x1, x19, #0x10
   188c4:	mov	w3, #0x8                   	// #8
   188c8:	mov	x0, x19
   188cc:	mov	x2, xzr
   188d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   188d4:	ldr	w8, [x19, #8]
   188d8:	b	18698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x374>
   188dc:	mov	w15, #0x1                   	// #1
   188e0:	cmn	x14, #0x4
   188e4:	b.eq	1891c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x5f8>  // b.none
   188e8:	add	w12, w12, w15
   188ec:	and	w12, w12, w13
   188f0:	lsl	x14, x12, #4
   188f4:	ldr	x14, [x11, x14]
   188f8:	add	w15, w15, #0x1
   188fc:	cmp	x14, x10
   18900:	b.ne	188e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x5bc>  // b.any
   18904:	mov	w12, w12
   18908:	add	x10, x11, x12, lsl #4
   1890c:	ldr	w23, [x10, #12]
   18910:	cmp	w8, w9
   18914:	b.cc	18410 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0xec>  // b.lo, b.ul, b.last
   18918:	b	18928 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x604>
   1891c:	mov	x23, xzr
   18920:	cmp	w8, w9
   18924:	b.cc	18410 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0xec>  // b.lo, b.ul, b.last
   18928:	add	x1, x19, #0x10
   1892c:	mov	w3, #0x8                   	// #8
   18930:	mov	x0, x19
   18934:	mov	x2, xzr
   18938:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1893c:	ldr	w8, [x19, #8]
   18940:	b	18410 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0xec>
   18944:	mov	w15, #0x1                   	// #1
   18948:	cmn	x14, #0x4
   1894c:	b.eq	18984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x660>  // b.none
   18950:	add	w12, w12, w15
   18954:	and	w12, w12, w13
   18958:	lsl	x14, x12, #4
   1895c:	ldr	x14, [x11, x14]
   18960:	add	w15, w15, #0x1
   18964:	cmp	x14, x10
   18968:	b.ne	18948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x624>  // b.any
   1896c:	mov	w12, w12
   18970:	add	x10, x11, x12, lsl #4
   18974:	ldr	w23, [x10, #12]
   18978:	cmp	w8, w9
   1897c:	b.cc	184b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   18980:	b	18990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x66c>
   18984:	mov	x23, xzr
   18988:	cmp	w8, w9
   1898c:	b.cc	184b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   18990:	add	x1, x19, #0x10
   18994:	mov	w3, #0x8                   	// #8
   18998:	mov	x0, x19
   1899c:	mov	x2, xzr
   189a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   189a4:	ldr	w8, [x19, #8]
   189a8:	b	184b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x18c>
   189ac:	mov	w15, #0x1                   	// #1
   189b0:	cmn	x14, #0x4
   189b4:	b.eq	189ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6c8>  // b.none
   189b8:	add	w12, w12, w15
   189bc:	and	w12, w12, w13
   189c0:	lsl	x14, x12, #4
   189c4:	ldr	x14, [x11, x14]
   189c8:	add	w15, w15, #0x1
   189cc:	cmp	x14, x10
   189d0:	b.ne	189b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x68c>  // b.any
   189d4:	mov	w12, w12
   189d8:	add	x10, x11, x12, lsl #4
   189dc:	ldr	w23, [x10, #12]
   189e0:	cmp	w8, w9
   189e4:	b.cc	1856c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x248>  // b.lo, b.ul, b.last
   189e8:	b	189f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6d4>
   189ec:	mov	x23, xzr
   189f0:	cmp	w8, w9
   189f4:	b.cc	1856c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x248>  // b.lo, b.ul, b.last
   189f8:	add	x1, x19, #0x10
   189fc:	mov	w3, #0x8                   	// #8
   18a00:	mov	x0, x19
   18a04:	mov	x2, xzr
   18a08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18a0c:	ldr	w8, [x19, #8]
   18a10:	b	1856c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x248>
   18a14:	mov	w15, #0x1                   	// #1
   18a18:	cmn	x14, #0x4
   18a1c:	b.eq	18a54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x730>  // b.none
   18a20:	add	w12, w12, w15
   18a24:	and	w12, w12, w13
   18a28:	lsl	x14, x12, #4
   18a2c:	ldr	x14, [x11, x14]
   18a30:	add	w15, w15, #0x1
   18a34:	cmp	x14, x10
   18a38:	b.ne	18a18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6f4>  // b.any
   18a3c:	mov	w12, w12
   18a40:	add	x10, x11, x12, lsl #4
   18a44:	ldr	w23, [x10, #12]
   18a48:	cmp	w8, w9
   18a4c:	b.cc	185f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.lo, b.ul, b.last
   18a50:	b	18a60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x73c>
   18a54:	mov	x23, xzr
   18a58:	cmp	w8, w9
   18a5c:	b.cc	185f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.lo, b.ul, b.last
   18a60:	add	x1, x19, #0x10
   18a64:	mov	w3, #0x8                   	// #8
   18a68:	mov	x0, x19
   18a6c:	mov	x2, xzr
   18a70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18a74:	ldr	w8, [x19, #8]
   18a78:	b	185f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x2d4>
   18a7c:	mov	w15, #0x1                   	// #1
   18a80:	cmn	x14, #0x4
   18a84:	b.eq	18abc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x798>  // b.none
   18a88:	add	w12, w12, w15
   18a8c:	and	w12, w12, w13
   18a90:	lsl	x14, x12, #4
   18a94:	ldr	x14, [x11, x14]
   18a98:	add	w15, w15, #0x1
   18a9c:	cmp	x14, x10
   18aa0:	b.ne	18a80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x75c>  // b.any
   18aa4:	mov	w12, w12
   18aa8:	add	x10, x11, x12, lsl #4
   18aac:	ldr	w23, [x10, #12]
   18ab0:	cmp	w8, w9
   18ab4:	b.cc	18710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x3ec>  // b.lo, b.ul, b.last
   18ab8:	b	18ac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7a4>
   18abc:	mov	x23, xzr
   18ac0:	cmp	w8, w9
   18ac4:	b.cc	18710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x3ec>  // b.lo, b.ul, b.last
   18ac8:	add	x1, x19, #0x10
   18acc:	mov	w3, #0x8                   	// #8
   18ad0:	mov	x0, x19
   18ad4:	mov	x2, xzr
   18ad8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18adc:	ldr	w8, [x19, #8]
   18ae0:	b	18710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x3ec>
   18ae4:	add	x1, x19, #0x10
   18ae8:	mov	w3, #0x8                   	// #8
   18aec:	mov	x0, x19
   18af0:	mov	x2, xzr
   18af4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18af8:	ldr	w8, [x19, #8]
   18afc:	b	18744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x420>
   18b00:	add	x1, x19, #0x10
   18b04:	mov	w3, #0x8                   	// #8
   18b08:	mov	x0, x19
   18b0c:	mov	x2, xzr
   18b10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18b14:	ldr	w8, [x19, #8]
   18b18:	b	18794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x470>
   18b1c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b20:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b24:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b28:	add	x0, x0, #0x0
   18b2c:	add	x1, x1, #0x0
   18b30:	add	x3, x3, #0x0
   18b34:	mov	w2, #0x252                 	// #594
   18b38:	bl	0 <__assert_fail>
   18b3c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b40:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b44:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b48:	add	x0, x0, #0x0
   18b4c:	add	x1, x1, #0x0
   18b50:	add	x3, x3, #0x0
   18b54:	mov	w2, #0x436                 	// #1078
   18b58:	bl	0 <__assert_fail>
   18b5c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b60:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b64:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b68:	add	x0, x0, #0x0
   18b6c:	add	x1, x1, #0x0
   18b70:	add	x3, x3, #0x0
   18b74:	mov	w2, #0x69                  	// #105
   18b78:	bl	0 <__assert_fail>
   18b7c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b80:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b84:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18b88:	add	x0, x0, #0x0
   18b8c:	add	x1, x1, #0x0
   18b90:	add	x3, x3, #0x0
   18b94:	mov	w2, #0x121                 	// #289
   18b98:	bl	0 <__assert_fail>
   18b9c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18ba0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18ba4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18ba8:	add	x0, x0, #0x0
   18bac:	add	x1, x1, #0x0
   18bb0:	add	x3, x3, #0x0
   18bb4:	mov	w2, #0x134                 	// #308
   18bb8:	bl	0 <__assert_fail>
   18bbc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18bc0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18bc4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18bc8:	add	x0, x0, #0x0
   18bcc:	add	x1, x1, #0x0
   18bd0:	add	x3, x3, #0x0
   18bd4:	mov	w2, #0x134                 	// #308
   18bd8:	bl	0 <__assert_fail>

0000000000018bdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj>:
   18bdc:	stp	x29, x30, [sp, #-64]!
   18be0:	str	x23, [sp, #16]
   18be4:	stp	x22, x21, [sp, #32]
   18be8:	stp	x20, x19, [sp, #48]
   18bec:	mov	x29, sp
   18bf0:	ldrb	w9, [x1, #1]
   18bf4:	ldp	w8, w10, [x2, #8]
   18bf8:	mov	w20, w3
   18bfc:	mov	x19, x2
   18c00:	and	w9, w9, #0x7f
   18c04:	cmp	w9, #0x1
   18c08:	cset	w9, eq  // eq = none
   18c0c:	mov	x22, x1
   18c10:	mov	x21, x0
   18c14:	cmp	w8, w10
   18c18:	orr	x23, x9, #0x2
   18c1c:	b.cs	192bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x6e0>  // b.hs, b.nlast
   18c20:	ldr	x9, [x19]
   18c24:	str	x23, [x9, w8, uxtw #3]
   18c28:	ldp	w8, w9, [x19, #8]
   18c2c:	cmp	w8, w9
   18c30:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18c34:	add	w8, w8, #0x1
   18c38:	str	w8, [x19, #8]
   18c3c:	ldrh	w23, [x22, #2]
   18c40:	cmp	w8, w9
   18c44:	b.cs	192d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x6fc>  // b.hs, b.nlast
   18c48:	ldr	x9, [x19]
   18c4c:	str	x23, [x9, w8, uxtw #3]
   18c50:	ldp	w8, w9, [x19, #8]
   18c54:	cmp	w8, w9
   18c58:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18c5c:	add	w8, w8, #0x1
   18c60:	str	w8, [x19, #8]
   18c64:	ldr	w10, [x22, #8]
   18c68:	cmp	w10, #0x2
   18c6c:	b.ls	19784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xba8>  // b.plast
   18c70:	sub	x10, x22, x10, lsl #3
   18c74:	ldr	x10, [x10, #16]
   18c78:	cbz	x10, 18c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa8>
   18c7c:	ldrb	w11, [x10]
   18c80:	cbnz	w11, 197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xc08>
   18c84:	ldr	w12, [x21, #304]
   18c88:	cbz	w12, 193dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x800>
   18c8c:	orr	x11, x10, #0x4
   18c90:	cmn	x11, #0x4
   18c94:	b.eq	19764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb88>  // b.none
   18c98:	ldr	x11, [x21, #288]
   18c9c:	ubfx	x13, x10, #4, #28
   18ca0:	eor	w14, w13, w10, lsr #9
   18ca4:	sub	w13, w12, #0x1
   18ca8:	and	w12, w14, w13
   18cac:	lsl	x14, x12, #4
   18cb0:	ldr	x14, [x11, x14]
   18cb4:	cmp	x14, x10
   18cb8:	b.ne	1939c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x7c0>  // b.any
   18cbc:	add	x10, x11, x12, lsl #4
   18cc0:	ldr	w23, [x10, #12]
   18cc4:	cmp	w8, w9
   18cc8:	b.cs	193e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x80c>  // b.hs, b.nlast
   18ccc:	ldr	x9, [x19]
   18cd0:	str	x23, [x9, w8, uxtw #3]
   18cd4:	ldp	w8, w9, [x19, #8]
   18cd8:	cmp	w8, w9
   18cdc:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18ce0:	add	w8, w8, #0x1
   18ce4:	str	w8, [x19, #8]
   18ce8:	cbz	x22, 19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xc28>
   18cec:	ldrb	w10, [x22]
   18cf0:	cmp	w10, #0xf
   18cf4:	b.ne	18d04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x128>  // b.any
   18cf8:	mov	x10, x22
   18cfc:	cbnz	x10, 18d18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x13c>
   18d00:	b	18d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x148>
   18d04:	ldr	w10, [x22, #8]
   18d08:	cbz	w10, 19784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xba8>
   18d0c:	sub	x10, x22, x10, lsl #3
   18d10:	ldr	x10, [x10]
   18d14:	cbz	x10, 18d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x148>
   18d18:	ldrb	w11, [x10]
   18d1c:	cmp	w11, #0xf
   18d20:	b.ne	19824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xc48>  // b.any
   18d24:	ldr	w12, [x21, #304]
   18d28:	cbz	w12, 19444 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x868>
   18d2c:	orr	x11, x10, #0x4
   18d30:	cmn	x11, #0x4
   18d34:	b.eq	19764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb88>  // b.none
   18d38:	ldr	x11, [x21, #288]
   18d3c:	ubfx	x13, x10, #4, #28
   18d40:	eor	w14, w13, w10, lsr #9
   18d44:	sub	w13, w12, #0x1
   18d48:	and	w12, w14, w13
   18d4c:	lsl	x14, x12, #4
   18d50:	ldr	x14, [x11, x14]
   18d54:	cmp	x14, x10
   18d58:	b.ne	19404 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x828>  // b.any
   18d5c:	add	x10, x11, x12, lsl #4
   18d60:	ldr	w23, [x10, #12]
   18d64:	cmp	w8, w9
   18d68:	b.cs	19450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x874>  // b.hs, b.nlast
   18d6c:	ldr	x9, [x19]
   18d70:	str	x23, [x9, w8, uxtw #3]
   18d74:	ldp	w8, w9, [x19, #8]
   18d78:	cmp	w8, w9
   18d7c:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18d80:	add	w8, w8, #0x1
   18d84:	str	w8, [x19, #8]
   18d88:	ldr	w23, [x22, #24]
   18d8c:	cmp	w8, w9
   18d90:	b.cs	192f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x718>  // b.hs, b.nlast
   18d94:	ldr	x9, [x19]
   18d98:	str	x23, [x9, w8, uxtw #3]
   18d9c:	ldp	w8, w9, [x19, #8]
   18da0:	cmp	w8, w9
   18da4:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18da8:	add	w8, w8, #0x1
   18dac:	str	w8, [x19, #8]
   18db0:	ldr	w10, [x22, #8]
   18db4:	cmp	w10, #0x1
   18db8:	b.ls	19784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xba8>  // b.plast
   18dbc:	sub	x10, x22, x10, lsl #3
   18dc0:	ldr	x10, [x10, #8]
   18dc4:	cbz	x10, 18de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x204>
   18dc8:	ldrb	w11, [x10]
   18dcc:	sub	w12, w11, #0xb
   18dd0:	cmp	w12, #0xb
   18dd4:	b.cs	1926c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x690>  // b.hs, b.nlast
   18dd8:	cmp	w12, #0xb
   18ddc:	b.cs	19294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x6b8>  // b.hs, b.nlast
   18de0:	ldr	w12, [x21, #304]
   18de4:	cbz	w12, 194ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8d0>
   18de8:	orr	x11, x10, #0x4
   18dec:	cmn	x11, #0x4
   18df0:	b.eq	19764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb88>  // b.none
   18df4:	ldr	x11, [x21, #288]
   18df8:	ubfx	x13, x10, #4, #28
   18dfc:	eor	w14, w13, w10, lsr #9
   18e00:	sub	w13, w12, #0x1
   18e04:	and	w12, w14, w13
   18e08:	lsl	x14, x12, #4
   18e0c:	ldr	x14, [x11, x14]
   18e10:	cmp	x14, x10
   18e14:	b.ne	1946c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x890>  // b.any
   18e18:	add	x10, x11, x12, lsl #4
   18e1c:	ldr	w23, [x10, #12]
   18e20:	cmp	w8, w9
   18e24:	b.cs	194b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8dc>  // b.hs, b.nlast
   18e28:	ldr	x9, [x19]
   18e2c:	str	x23, [x9, w8, uxtw #3]
   18e30:	ldp	w8, w9, [x19, #8]
   18e34:	cmp	w8, w9
   18e38:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18e3c:	add	w8, w8, #0x1
   18e40:	str	w8, [x19, #8]
   18e44:	ldr	w10, [x22, #8]
   18e48:	cmp	w10, #0x3
   18e4c:	b.ls	19784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xba8>  // b.plast
   18e50:	sub	x10, x22, x10, lsl #3
   18e54:	ldr	x10, [x10, #24]
   18e58:	cbz	x10, 18e6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x290>
   18e5c:	ldrb	w11, [x10]
   18e60:	sub	w11, w11, #0xb
   18e64:	cmp	w11, #0x4
   18e68:	b.cs	197a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xbc8>  // b.hs, b.nlast
   18e6c:	ldr	w12, [x21, #304]
   18e70:	cbz	w12, 19514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x938>
   18e74:	orr	x11, x10, #0x4
   18e78:	cmn	x11, #0x4
   18e7c:	b.eq	19764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb88>  // b.none
   18e80:	ldr	x11, [x21, #288]
   18e84:	ubfx	x13, x10, #4, #28
   18e88:	eor	w14, w13, w10, lsr #9
   18e8c:	sub	w13, w12, #0x1
   18e90:	and	w12, w14, w13
   18e94:	lsl	x14, x12, #4
   18e98:	ldr	x14, [x11, x14]
   18e9c:	cmp	x14, x10
   18ea0:	b.ne	194d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8f8>  // b.any
   18ea4:	add	x10, x11, x12, lsl #4
   18ea8:	ldr	w23, [x10, #12]
   18eac:	cmp	w8, w9
   18eb0:	b.cs	19520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x944>  // b.hs, b.nlast
   18eb4:	ldr	x9, [x19]
   18eb8:	str	x23, [x9, w8, uxtw #3]
   18ebc:	ldp	w8, w9, [x19, #8]
   18ec0:	cmp	w8, w9
   18ec4:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18ec8:	add	w8, w8, #0x1
   18ecc:	str	w8, [x19, #8]
   18ed0:	ldr	x23, [x22, #32]
   18ed4:	cmp	w8, w9
   18ed8:	b.cs	19310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x734>  // b.hs, b.nlast
   18edc:	ldr	x9, [x19]
   18ee0:	str	x23, [x9, w8, uxtw #3]
   18ee4:	ldp	w8, w9, [x19, #8]
   18ee8:	cmp	w8, w9
   18eec:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18ef0:	add	w8, w8, #0x1
   18ef4:	str	w8, [x19, #8]
   18ef8:	ldr	w23, [x22, #48]
   18efc:	cmp	w8, w9
   18f00:	b.cs	1932c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x750>  // b.hs, b.nlast
   18f04:	ldr	x9, [x19]
   18f08:	str	x23, [x9, w8, uxtw #3]
   18f0c:	ldp	w8, w9, [x19, #8]
   18f10:	cmp	w8, w9
   18f14:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18f18:	add	w8, w8, #0x1
   18f1c:	str	w8, [x19, #8]
   18f20:	ldr	x23, [x22, #40]
   18f24:	cmp	w8, w9
   18f28:	b.cs	19348 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x76c>  // b.hs, b.nlast
   18f2c:	ldr	x9, [x19]
   18f30:	str	x23, [x9, w8, uxtw #3]
   18f34:	ldp	w8, w9, [x19, #8]
   18f38:	cmp	w8, w9
   18f3c:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18f40:	add	w8, w8, #0x1
   18f44:	str	w8, [x19, #8]
   18f48:	ldr	w23, [x22, #28]
   18f4c:	cmp	w8, w9
   18f50:	b.cs	19364 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x788>  // b.hs, b.nlast
   18f54:	ldr	x9, [x19]
   18f58:	str	x23, [x9, w8, uxtw #3]
   18f5c:	ldp	w8, w9, [x19, #8]
   18f60:	cmp	w8, w9
   18f64:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18f68:	add	w8, w8, #0x1
   18f6c:	str	w8, [x19, #8]
   18f70:	ldr	w10, [x22, #8]
   18f74:	cmp	w10, #0x4
   18f78:	b.ls	19784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xba8>  // b.plast
   18f7c:	sub	x10, x22, x10, lsl #3
   18f80:	ldr	x10, [x10, #32]
   18f84:	cbz	x10, 18f94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x3b8>
   18f88:	ldrb	w11, [x10]
   18f8c:	cmp	w11, #0x4
   18f90:	b.ne	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xbe8>  // b.any
   18f94:	ldr	w12, [x21, #304]
   18f98:	cbz	w12, 1957c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9a0>
   18f9c:	orr	x11, x10, #0x4
   18fa0:	cmn	x11, #0x4
   18fa4:	b.eq	19764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb88>  // b.none
   18fa8:	ldr	x11, [x21, #288]
   18fac:	ubfx	x13, x10, #4, #28
   18fb0:	eor	w14, w13, w10, lsr #9
   18fb4:	sub	w13, w12, #0x1
   18fb8:	and	w12, w13, w14
   18fbc:	lsl	x14, x12, #4
   18fc0:	ldr	x14, [x11, x14]
   18fc4:	cmp	x14, x10
   18fc8:	b.ne	1953c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x960>  // b.any
   18fcc:	add	x10, x11, x12, lsl #4
   18fd0:	ldr	w23, [x10, #12]
   18fd4:	cmp	w8, w9
   18fd8:	b.cs	19588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9ac>  // b.hs, b.nlast
   18fdc:	ldr	x9, [x19]
   18fe0:	str	x23, [x9, w8, uxtw #3]
   18fe4:	ldp	w8, w9, [x19, #8]
   18fe8:	cmp	w8, w9
   18fec:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   18ff0:	add	w8, w8, #0x1
   18ff4:	str	w8, [x19, #8]
   18ff8:	ldr	w23, [x22, #52]
   18ffc:	cmp	w8, w9
   19000:	b.cs	19380 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x7a4>  // b.hs, b.nlast
   19004:	ldr	x9, [x19]
   19008:	str	x23, [x9, w8, uxtw #3]
   1900c:	ldp	w8, w9, [x19, #8]
   19010:	cmp	w8, w9
   19014:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   19018:	add	w8, w8, #0x1
   1901c:	str	w8, [x19, #8]
   19020:	ldr	w10, [x22, #8]
   19024:	cmp	w10, #0x5
   19028:	b.ls	19784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xba8>  // b.plast
   1902c:	sub	x10, x22, x10, lsl #3
   19030:	ldr	x10, [x10, #40]
   19034:	cbz	x10, 19048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x46c>
   19038:	ldrb	w11, [x10]
   1903c:	sub	w11, w11, #0xb
   19040:	cmp	w11, #0x4
   19044:	b.cs	197a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xbc8>  // b.hs, b.nlast
   19048:	ldr	w12, [x21, #304]
   1904c:	cbz	w12, 195e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa08>
   19050:	orr	x11, x10, #0x4
   19054:	cmn	x11, #0x4
   19058:	b.eq	19764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb88>  // b.none
   1905c:	ldr	x11, [x21, #288]
   19060:	ubfx	x13, x10, #4, #28
   19064:	eor	w14, w13, w10, lsr #9
   19068:	sub	w13, w12, #0x1
   1906c:	and	w12, w14, w13
   19070:	lsl	x14, x12, #4
   19074:	ldr	x14, [x11, x14]
   19078:	cmp	x14, x10
   1907c:	b.ne	195a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9c8>  // b.any
   19080:	add	x10, x11, x12, lsl #4
   19084:	ldr	w23, [x10, #12]
   19088:	cmp	w8, w9
   1908c:	b.cs	195f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa14>  // b.hs, b.nlast
   19090:	ldr	x9, [x19]
   19094:	str	x23, [x9, w8, uxtw #3]
   19098:	ldp	w8, w9, [x19, #8]
   1909c:	cmp	w8, w9
   190a0:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   190a4:	add	w8, w8, #0x1
   190a8:	str	w8, [x19, #8]
   190ac:	ldr	w10, [x22, #8]
   190b0:	cmp	w10, #0x6
   190b4:	b.ls	19784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xba8>  // b.plast
   190b8:	sub	x10, x22, x10, lsl #3
   190bc:	ldr	x10, [x10, #48]
   190c0:	cbz	x10, 190d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x4f4>
   190c4:	ldrb	w11, [x10]
   190c8:	cmp	w11, #0x4
   190cc:	b.ne	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xbe8>  // b.any
   190d0:	ldr	w12, [x21, #304]
   190d4:	cbz	w12, 1964c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa70>
   190d8:	orr	x11, x10, #0x4
   190dc:	cmn	x11, #0x4
   190e0:	b.eq	19764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb88>  // b.none
   190e4:	ldr	x11, [x21, #288]
   190e8:	ubfx	x13, x10, #4, #28
   190ec:	eor	w14, w13, w10, lsr #9
   190f0:	sub	w13, w12, #0x1
   190f4:	and	w12, w13, w14
   190f8:	lsl	x14, x12, #4
   190fc:	ldr	x14, [x11, x14]
   19100:	cmp	x14, x10
   19104:	b.ne	1960c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa30>  // b.any
   19108:	add	x10, x11, x12, lsl #4
   1910c:	ldr	w23, [x10, #12]
   19110:	cmp	w8, w9
   19114:	b.cs	19658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa7c>  // b.hs, b.nlast
   19118:	ldr	x9, [x19]
   1911c:	str	x23, [x9, w8, uxtw #3]
   19120:	ldp	w8, w9, [x19, #8]
   19124:	cmp	w8, w9
   19128:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   1912c:	add	w8, w8, #0x1
   19130:	str	w8, [x19, #8]
   19134:	ldr	w10, [x22, #8]
   19138:	cmp	w10, #0x7
   1913c:	b.ls	19784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xba8>  // b.plast
   19140:	sub	x10, x22, x10, lsl #3
   19144:	ldr	x10, [x10, #56]
   19148:	cbz	x10, 19154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x578>
   1914c:	ldrb	w11, [x10]
   19150:	cbnz	w11, 197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xc08>
   19154:	ldr	w12, [x21, #304]
   19158:	cbz	w12, 196b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>
   1915c:	orr	x11, x10, #0x4
   19160:	cmn	x11, #0x4
   19164:	b.eq	19764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb88>  // b.none
   19168:	ldr	x11, [x21, #288]
   1916c:	ubfx	x13, x10, #4, #28
   19170:	eor	w14, w13, w10, lsr #9
   19174:	sub	w13, w12, #0x1
   19178:	and	w12, w14, w13
   1917c:	lsl	x14, x12, #4
   19180:	ldr	x14, [x11, x14]
   19184:	cmp	x14, x10
   19188:	b.ne	19674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa98>  // b.any
   1918c:	add	x10, x11, x12, lsl #4
   19190:	ldr	w23, [x10, #12]
   19194:	cmp	w8, w9
   19198:	b.cs	196c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xae4>  // b.hs, b.nlast
   1919c:	ldr	x9, [x19]
   191a0:	str	x23, [x9, w8, uxtw #3]
   191a4:	ldp	w8, w9, [x19, #8]
   191a8:	cmp	w8, w9
   191ac:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   191b0:	add	w8, w8, #0x1
   191b4:	str	w8, [x19, #8]
   191b8:	ldr	w10, [x22, #8]
   191bc:	cmp	w10, #0x8
   191c0:	b.ls	19784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xba8>  // b.plast
   191c4:	sub	x10, x22, x10, lsl #3
   191c8:	ldr	x10, [x10, #64]
   191cc:	cbz	x10, 191dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x600>
   191d0:	ldrb	w11, [x10]
   191d4:	cmp	w11, #0xc
   191d8:	b.ne	19844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xc68>  // b.any
   191dc:	ldr	w12, [x21, #304]
   191e0:	cbz	w12, 1971c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb40>
   191e4:	orr	x11, x10, #0x4
   191e8:	cmn	x11, #0x4
   191ec:	b.eq	19764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb88>  // b.none
   191f0:	ldr	x11, [x21, #288]
   191f4:	ubfx	x13, x10, #4, #28
   191f8:	eor	w14, w13, w10, lsr #9
   191fc:	sub	w13, w12, #0x1
   19200:	and	w12, w14, w13
   19204:	lsl	x14, x12, #4
   19208:	ldr	x14, [x11, x14]
   1920c:	cmp	x14, x10
   19210:	b.ne	196dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb00>  // b.any
   19214:	add	x10, x11, x12, lsl #4
   19218:	ldr	w22, [x10, #12]
   1921c:	cmp	w8, w9
   19220:	b.cs	19728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb4c>  // b.hs, b.nlast
   19224:	ldr	x9, [x19]
   19228:	str	x22, [x9, w8, uxtw #3]
   1922c:	ldp	w8, w9, [x19, #8]
   19230:	cmp	w8, w9
   19234:	b.cs	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb68>  // b.hs, b.nlast
   19238:	add	w8, w8, #0x1
   1923c:	str	w8, [x19, #8]
   19240:	ldr	x0, [x21]
   19244:	mov	w1, #0x12                  	// #18
   19248:	mov	x2, x19
   1924c:	mov	w3, w20
   19250:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19254:	str	wzr, [x19, #8]
   19258:	ldp	x20, x19, [sp, #48]
   1925c:	ldp	x22, x21, [sp, #32]
   19260:	ldr	x23, [sp, #16]
   19264:	ldp	x29, x30, [sp], #64
   19268:	ret
   1926c:	cmp	w11, #0x1f
   19270:	b.eq	18dd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x1fc>  // b.none
   19274:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19278:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1927c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19280:	add	x0, x0, #0x0
   19284:	add	x1, x1, #0x0
   19288:	add	x3, x3, #0x0
   1928c:	mov	w2, #0x134                 	// #308
   19290:	bl	0 <__assert_fail>
   19294:	cmp	w11, #0x1f
   19298:	b.eq	18de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x204>  // b.none
   1929c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   192a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   192a4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   192a8:	add	x0, x0, #0x0
   192ac:	add	x1, x1, #0x0
   192b0:	add	x3, x3, #0x0
   192b4:	mov	w2, #0x108                 	// #264
   192b8:	bl	0 <__assert_fail>
   192bc:	add	x1, x19, #0x10
   192c0:	mov	w3, #0x8                   	// #8
   192c4:	mov	x0, x19
   192c8:	mov	x2, xzr
   192cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   192d0:	ldr	w8, [x19, #8]
   192d4:	b	18c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x44>
   192d8:	add	x1, x19, #0x10
   192dc:	mov	w3, #0x8                   	// #8
   192e0:	mov	x0, x19
   192e4:	mov	x2, xzr
   192e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   192ec:	ldr	w8, [x19, #8]
   192f0:	b	18c48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x6c>
   192f4:	add	x1, x19, #0x10
   192f8:	mov	w3, #0x8                   	// #8
   192fc:	mov	x0, x19
   19300:	mov	x2, xzr
   19304:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19308:	ldr	w8, [x19, #8]
   1930c:	b	18d94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x1b8>
   19310:	add	x1, x19, #0x10
   19314:	mov	w3, #0x8                   	// #8
   19318:	mov	x0, x19
   1931c:	mov	x2, xzr
   19320:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19324:	ldr	w8, [x19, #8]
   19328:	b	18edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x300>
   1932c:	add	x1, x19, #0x10
   19330:	mov	w3, #0x8                   	// #8
   19334:	mov	x0, x19
   19338:	mov	x2, xzr
   1933c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19340:	ldr	w8, [x19, #8]
   19344:	b	18f04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x328>
   19348:	add	x1, x19, #0x10
   1934c:	mov	w3, #0x8                   	// #8
   19350:	mov	x0, x19
   19354:	mov	x2, xzr
   19358:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1935c:	ldr	w8, [x19, #8]
   19360:	b	18f2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x350>
   19364:	add	x1, x19, #0x10
   19368:	mov	w3, #0x8                   	// #8
   1936c:	mov	x0, x19
   19370:	mov	x2, xzr
   19374:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19378:	ldr	w8, [x19, #8]
   1937c:	b	18f54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x378>
   19380:	add	x1, x19, #0x10
   19384:	mov	w3, #0x8                   	// #8
   19388:	mov	x0, x19
   1938c:	mov	x2, xzr
   19390:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19394:	ldr	w8, [x19, #8]
   19398:	b	19004 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x428>
   1939c:	mov	w15, #0x1                   	// #1
   193a0:	cmn	x14, #0x4
   193a4:	b.eq	193dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x800>  // b.none
   193a8:	add	w12, w12, w15
   193ac:	and	w12, w12, w13
   193b0:	lsl	x14, x12, #4
   193b4:	ldr	x14, [x11, x14]
   193b8:	add	w15, w15, #0x1
   193bc:	cmp	x14, x10
   193c0:	b.ne	193a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x7c4>  // b.any
   193c4:	mov	w12, w12
   193c8:	add	x10, x11, x12, lsl #4
   193cc:	ldr	w23, [x10, #12]
   193d0:	cmp	w8, w9
   193d4:	b.cc	18ccc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xf0>  // b.lo, b.ul, b.last
   193d8:	b	193e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x80c>
   193dc:	mov	x23, xzr
   193e0:	cmp	w8, w9
   193e4:	b.cc	18ccc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xf0>  // b.lo, b.ul, b.last
   193e8:	add	x1, x19, #0x10
   193ec:	mov	w3, #0x8                   	// #8
   193f0:	mov	x0, x19
   193f4:	mov	x2, xzr
   193f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   193fc:	ldr	w8, [x19, #8]
   19400:	b	18ccc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xf0>
   19404:	mov	w15, #0x1                   	// #1
   19408:	cmn	x14, #0x4
   1940c:	b.eq	19444 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x868>  // b.none
   19410:	add	w12, w12, w15
   19414:	and	w12, w12, w13
   19418:	lsl	x14, x12, #4
   1941c:	ldr	x14, [x11, x14]
   19420:	add	w15, w15, #0x1
   19424:	cmp	x14, x10
   19428:	b.ne	19408 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x82c>  // b.any
   1942c:	mov	w12, w12
   19430:	add	x10, x11, x12, lsl #4
   19434:	ldr	w23, [x10, #12]
   19438:	cmp	w8, w9
   1943c:	b.cc	18d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x190>  // b.lo, b.ul, b.last
   19440:	b	19450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x874>
   19444:	mov	x23, xzr
   19448:	cmp	w8, w9
   1944c:	b.cc	18d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x190>  // b.lo, b.ul, b.last
   19450:	add	x1, x19, #0x10
   19454:	mov	w3, #0x8                   	// #8
   19458:	mov	x0, x19
   1945c:	mov	x2, xzr
   19460:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19464:	ldr	w8, [x19, #8]
   19468:	b	18d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x190>
   1946c:	mov	w15, #0x1                   	// #1
   19470:	cmn	x14, #0x4
   19474:	b.eq	194ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8d0>  // b.none
   19478:	add	w12, w12, w15
   1947c:	and	w12, w12, w13
   19480:	lsl	x14, x12, #4
   19484:	ldr	x14, [x11, x14]
   19488:	add	w15, w15, #0x1
   1948c:	cmp	x14, x10
   19490:	b.ne	19470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x894>  // b.any
   19494:	mov	w12, w12
   19498:	add	x10, x11, x12, lsl #4
   1949c:	ldr	w23, [x10, #12]
   194a0:	cmp	w8, w9
   194a4:	b.cc	18e28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x24c>  // b.lo, b.ul, b.last
   194a8:	b	194b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8dc>
   194ac:	mov	x23, xzr
   194b0:	cmp	w8, w9
   194b4:	b.cc	18e28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x24c>  // b.lo, b.ul, b.last
   194b8:	add	x1, x19, #0x10
   194bc:	mov	w3, #0x8                   	// #8
   194c0:	mov	x0, x19
   194c4:	mov	x2, xzr
   194c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   194cc:	ldr	w8, [x19, #8]
   194d0:	b	18e28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x24c>
   194d4:	mov	w15, #0x1                   	// #1
   194d8:	cmn	x14, #0x4
   194dc:	b.eq	19514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x938>  // b.none
   194e0:	add	w12, w12, w15
   194e4:	and	w12, w12, w13
   194e8:	lsl	x14, x12, #4
   194ec:	ldr	x14, [x11, x14]
   194f0:	add	w15, w15, #0x1
   194f4:	cmp	x14, x10
   194f8:	b.ne	194d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8fc>  // b.any
   194fc:	mov	w12, w12
   19500:	add	x10, x11, x12, lsl #4
   19504:	ldr	w23, [x10, #12]
   19508:	cmp	w8, w9
   1950c:	b.cc	18eb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x2d8>  // b.lo, b.ul, b.last
   19510:	b	19520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x944>
   19514:	mov	x23, xzr
   19518:	cmp	w8, w9
   1951c:	b.cc	18eb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x2d8>  // b.lo, b.ul, b.last
   19520:	add	x1, x19, #0x10
   19524:	mov	w3, #0x8                   	// #8
   19528:	mov	x0, x19
   1952c:	mov	x2, xzr
   19530:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19534:	ldr	w8, [x19, #8]
   19538:	b	18eb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x2d8>
   1953c:	mov	w15, #0x1                   	// #1
   19540:	cmn	x14, #0x4
   19544:	b.eq	1957c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9a0>  // b.none
   19548:	add	w12, w12, w15
   1954c:	and	w12, w12, w13
   19550:	lsl	x14, x12, #4
   19554:	ldr	x14, [x11, x14]
   19558:	add	w15, w15, #0x1
   1955c:	cmp	x14, x10
   19560:	b.ne	19540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x964>  // b.any
   19564:	mov	w12, w12
   19568:	add	x10, x11, x12, lsl #4
   1956c:	ldr	w23, [x10, #12]
   19570:	cmp	w8, w9
   19574:	b.cc	18fdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x400>  // b.lo, b.ul, b.last
   19578:	b	19588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9ac>
   1957c:	mov	x23, xzr
   19580:	cmp	w8, w9
   19584:	b.cc	18fdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x400>  // b.lo, b.ul, b.last
   19588:	add	x1, x19, #0x10
   1958c:	mov	w3, #0x8                   	// #8
   19590:	mov	x0, x19
   19594:	mov	x2, xzr
   19598:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1959c:	ldr	w8, [x19, #8]
   195a0:	b	18fdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x400>
   195a4:	mov	w15, #0x1                   	// #1
   195a8:	cmn	x14, #0x4
   195ac:	b.eq	195e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa08>  // b.none
   195b0:	add	w12, w12, w15
   195b4:	and	w12, w12, w13
   195b8:	lsl	x14, x12, #4
   195bc:	ldr	x14, [x11, x14]
   195c0:	add	w15, w15, #0x1
   195c4:	cmp	x14, x10
   195c8:	b.ne	195a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9cc>  // b.any
   195cc:	mov	w12, w12
   195d0:	add	x10, x11, x12, lsl #4
   195d4:	ldr	w23, [x10, #12]
   195d8:	cmp	w8, w9
   195dc:	b.cc	19090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x4b4>  // b.lo, b.ul, b.last
   195e0:	b	195f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa14>
   195e4:	mov	x23, xzr
   195e8:	cmp	w8, w9
   195ec:	b.cc	19090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x4b4>  // b.lo, b.ul, b.last
   195f0:	add	x1, x19, #0x10
   195f4:	mov	w3, #0x8                   	// #8
   195f8:	mov	x0, x19
   195fc:	mov	x2, xzr
   19600:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19604:	ldr	w8, [x19, #8]
   19608:	b	19090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x4b4>
   1960c:	mov	w15, #0x1                   	// #1
   19610:	cmn	x14, #0x4
   19614:	b.eq	1964c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa70>  // b.none
   19618:	add	w12, w12, w15
   1961c:	and	w12, w12, w13
   19620:	lsl	x14, x12, #4
   19624:	ldr	x14, [x11, x14]
   19628:	add	w15, w15, #0x1
   1962c:	cmp	x14, x10
   19630:	b.ne	19610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa34>  // b.any
   19634:	mov	w12, w12
   19638:	add	x10, x11, x12, lsl #4
   1963c:	ldr	w23, [x10, #12]
   19640:	cmp	w8, w9
   19644:	b.cc	19118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x53c>  // b.lo, b.ul, b.last
   19648:	b	19658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa7c>
   1964c:	mov	x23, xzr
   19650:	cmp	w8, w9
   19654:	b.cc	19118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x53c>  // b.lo, b.ul, b.last
   19658:	add	x1, x19, #0x10
   1965c:	mov	w3, #0x8                   	// #8
   19660:	mov	x0, x19
   19664:	mov	x2, xzr
   19668:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1966c:	ldr	w8, [x19, #8]
   19670:	b	19118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x53c>
   19674:	mov	w15, #0x1                   	// #1
   19678:	cmn	x14, #0x4
   1967c:	b.eq	196b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.none
   19680:	add	w12, w12, w15
   19684:	and	w12, w12, w13
   19688:	lsl	x14, x12, #4
   1968c:	ldr	x14, [x11, x14]
   19690:	add	w15, w15, #0x1
   19694:	cmp	x14, x10
   19698:	b.ne	19678 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa9c>  // b.any
   1969c:	mov	w12, w12
   196a0:	add	x10, x11, x12, lsl #4
   196a4:	ldr	w23, [x10, #12]
   196a8:	cmp	w8, w9
   196ac:	b.cc	1919c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x5c0>  // b.lo, b.ul, b.last
   196b0:	b	196c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xae4>
   196b4:	mov	x23, xzr
   196b8:	cmp	w8, w9
   196bc:	b.cc	1919c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x5c0>  // b.lo, b.ul, b.last
   196c0:	add	x1, x19, #0x10
   196c4:	mov	w3, #0x8                   	// #8
   196c8:	mov	x0, x19
   196cc:	mov	x2, xzr
   196d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   196d4:	ldr	w8, [x19, #8]
   196d8:	b	1919c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x5c0>
   196dc:	mov	w15, #0x1                   	// #1
   196e0:	cmn	x14, #0x4
   196e4:	b.eq	1971c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb40>  // b.none
   196e8:	add	w12, w12, w15
   196ec:	and	w12, w12, w13
   196f0:	lsl	x14, x12, #4
   196f4:	ldr	x14, [x11, x14]
   196f8:	add	w15, w15, #0x1
   196fc:	cmp	x14, x10
   19700:	b.ne	196e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb04>  // b.any
   19704:	mov	w12, w12
   19708:	add	x10, x11, x12, lsl #4
   1970c:	ldr	w22, [x10, #12]
   19710:	cmp	w8, w9
   19714:	b.cc	19224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x648>  // b.lo, b.ul, b.last
   19718:	b	19728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb4c>
   1971c:	mov	x22, xzr
   19720:	cmp	w8, w9
   19724:	b.cc	19224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x648>  // b.lo, b.ul, b.last
   19728:	add	x1, x19, #0x10
   1972c:	mov	w3, #0x8                   	// #8
   19730:	mov	x0, x19
   19734:	mov	x2, xzr
   19738:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1973c:	ldr	w8, [x19, #8]
   19740:	b	19224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x648>
   19744:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19748:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1974c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19750:	add	x0, x0, #0x0
   19754:	add	x1, x1, #0x0
   19758:	add	x3, x3, #0x0
   1975c:	mov	w2, #0x43                  	// #67
   19760:	bl	0 <__assert_fail>
   19764:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19768:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1976c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19770:	add	x0, x0, #0x0
   19774:	add	x1, x1, #0x0
   19778:	add	x3, x3, #0x0
   1977c:	mov	w2, #0x252                 	// #594
   19780:	bl	0 <__assert_fail>
   19784:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19788:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1978c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19790:	add	x0, x0, #0x0
   19794:	add	x1, x1, #0x0
   19798:	add	x3, x3, #0x0
   1979c:	mov	w2, #0x436                 	// #1078
   197a0:	bl	0 <__assert_fail>
   197a4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197a8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197ac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197b0:	add	x0, x0, #0x0
   197b4:	add	x1, x1, #0x0
   197b8:	add	x3, x3, #0x0
   197bc:	mov	w2, #0x134                 	// #308
   197c0:	bl	0 <__assert_fail>
   197c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197d0:	add	x0, x0, #0x0
   197d4:	add	x1, x1, #0x0
   197d8:	add	x3, x3, #0x0
   197dc:	mov	w2, #0x134                 	// #308
   197e0:	bl	0 <__assert_fail>
   197e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197f0:	add	x0, x0, #0x0
   197f4:	add	x1, x1, #0x0
   197f8:	add	x3, x3, #0x0
   197fc:	mov	w2, #0x121                 	// #289
   19800:	bl	0 <__assert_fail>
   19804:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19808:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1980c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19810:	add	x0, x0, #0x0
   19814:	add	x1, x1, #0x0
   19818:	add	x3, x3, #0x0
   1981c:	mov	w2, #0x69                  	// #105
   19820:	bl	0 <__assert_fail>
   19824:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19828:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1982c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19830:	add	x0, x0, #0x0
   19834:	add	x1, x1, #0x0
   19838:	add	x3, x3, #0x0
   1983c:	mov	w2, #0x134                 	// #308
   19840:	bl	0 <__assert_fail>
   19844:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19848:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1984c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19850:	add	x0, x0, #0x0
   19854:	add	x1, x1, #0x0
   19858:	add	x3, x3, #0x0
   1985c:	mov	w2, #0x121                 	// #289
   19860:	bl	0 <__assert_fail>

0000000000019864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj>:
   19864:	stp	x29, x30, [sp, #-64]!
   19868:	str	x23, [sp, #16]
   1986c:	stp	x22, x21, [sp, #32]
   19870:	stp	x20, x19, [sp, #48]
   19874:	mov	x29, sp
   19878:	ldrb	w9, [x1, #1]
   1987c:	ldp	w8, w10, [x2, #8]
   19880:	mov	w20, w3
   19884:	mov	x19, x2
   19888:	and	w9, w9, #0x7f
   1988c:	cmp	w9, #0x1
   19890:	cset	w9, eq  // eq = none
   19894:	mov	x22, x1
   19898:	mov	x21, x0
   1989c:	cmp	w8, w10
   198a0:	orr	x23, x9, #0x2
   198a4:	b.cs	199c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x164>  // b.hs, b.nlast
   198a8:	ldr	x9, [x19]
   198ac:	str	x23, [x9, w8, uxtw #3]
   198b0:	ldp	w8, w9, [x19, #8]
   198b4:	cmp	w8, w9
   198b8:	b.cs	19a84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x220>  // b.hs, b.nlast
   198bc:	add	w8, w8, #0x1
   198c0:	str	w8, [x19, #8]
   198c4:	ldr	w23, [x22, #28]
   198c8:	cmp	w8, w9
   198cc:	b.cs	199e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x180>  // b.hs, b.nlast
   198d0:	ldr	x9, [x19]
   198d4:	str	x23, [x9, w8, uxtw #3]
   198d8:	ldp	w8, w9, [x19, #8]
   198dc:	cmp	w8, w9
   198e0:	b.cs	19a84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x220>  // b.hs, b.nlast
   198e4:	add	w8, w8, #0x1
   198e8:	str	w8, [x19, #8]
   198ec:	ldr	w10, [x22, #8]
   198f0:	cmp	w10, #0x3
   198f4:	b.ls	19ac4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x260>  // b.plast
   198f8:	sub	x10, x22, x10, lsl #3
   198fc:	ldr	x10, [x10, #24]
   19900:	cbz	x10, 19910 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0xac>
   19904:	ldrb	w11, [x10]
   19908:	cmp	w11, #0x4
   1990c:	b.ne	19ae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x280>  // b.any
   19910:	ldr	w12, [x21, #304]
   19914:	cbz	w12, 19a5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x1f8>
   19918:	orr	x11, x10, #0x4
   1991c:	cmn	x11, #0x4
   19920:	b.eq	19aa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x240>  // b.none
   19924:	ldr	x11, [x21, #288]
   19928:	ubfx	x13, x10, #4, #28
   1992c:	eor	w14, w13, w10, lsr #9
   19930:	sub	w13, w12, #0x1
   19934:	and	w12, w14, w13
   19938:	lsl	x14, x12, #4
   1993c:	ldr	x14, [x11, x14]
   19940:	cmp	x14, x10
   19944:	b.ne	19a1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x1b8>  // b.any
   19948:	add	x10, x11, x12, lsl #4
   1994c:	ldr	w23, [x10, #12]
   19950:	cmp	w8, w9
   19954:	b.cs	19a68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x204>  // b.hs, b.nlast
   19958:	ldr	x9, [x19]
   1995c:	str	x23, [x9, w8, uxtw #3]
   19960:	ldp	w8, w9, [x19, #8]
   19964:	cmp	w8, w9
   19968:	b.cs	19a84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x220>  // b.hs, b.nlast
   1996c:	add	w8, w8, #0x1
   19970:	str	w8, [x19, #8]
   19974:	ldrb	w22, [x22, #52]
   19978:	cmp	w8, w9
   1997c:	b.cs	19a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x19c>  // b.hs, b.nlast
   19980:	ldr	x9, [x19]
   19984:	str	x22, [x9, w8, uxtw #3]
   19988:	ldp	w8, w9, [x19, #8]
   1998c:	cmp	w8, w9
   19990:	b.cs	19a84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x220>  // b.hs, b.nlast
   19994:	add	w8, w8, #0x1
   19998:	str	w8, [x19, #8]
   1999c:	ldr	x0, [x21]
   199a0:	mov	w1, #0x13                  	// #19
   199a4:	mov	x2, x19
   199a8:	mov	w3, w20
   199ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   199b0:	str	wzr, [x19, #8]
   199b4:	ldp	x20, x19, [sp, #48]
   199b8:	ldp	x22, x21, [sp, #32]
   199bc:	ldr	x23, [sp, #16]
   199c0:	ldp	x29, x30, [sp], #64
   199c4:	ret
   199c8:	add	x1, x19, #0x10
   199cc:	mov	w3, #0x8                   	// #8
   199d0:	mov	x0, x19
   199d4:	mov	x2, xzr
   199d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   199dc:	ldr	w8, [x19, #8]
   199e0:	b	198a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x44>
   199e4:	add	x1, x19, #0x10
   199e8:	mov	w3, #0x8                   	// #8
   199ec:	mov	x0, x19
   199f0:	mov	x2, xzr
   199f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   199f8:	ldr	w8, [x19, #8]
   199fc:	b	198d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x6c>
   19a00:	add	x1, x19, #0x10
   19a04:	mov	w3, #0x8                   	// #8
   19a08:	mov	x0, x19
   19a0c:	mov	x2, xzr
   19a10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19a14:	ldr	w8, [x19, #8]
   19a18:	b	19980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x11c>
   19a1c:	mov	w15, #0x1                   	// #1
   19a20:	cmn	x14, #0x4
   19a24:	b.eq	19a5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x1f8>  // b.none
   19a28:	add	w12, w12, w15
   19a2c:	and	w12, w12, w13
   19a30:	lsl	x14, x12, #4
   19a34:	ldr	x14, [x11, x14]
   19a38:	add	w15, w15, #0x1
   19a3c:	cmp	x14, x10
   19a40:	b.ne	19a20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x1bc>  // b.any
   19a44:	mov	w12, w12
   19a48:	add	x10, x11, x12, lsl #4
   19a4c:	ldr	w23, [x10, #12]
   19a50:	cmp	w8, w9
   19a54:	b.cc	19958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0xf4>  // b.lo, b.ul, b.last
   19a58:	b	19a68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x204>
   19a5c:	mov	x23, xzr
   19a60:	cmp	w8, w9
   19a64:	b.cc	19958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0xf4>  // b.lo, b.ul, b.last
   19a68:	add	x1, x19, #0x10
   19a6c:	mov	w3, #0x8                   	// #8
   19a70:	mov	x0, x19
   19a74:	mov	x2, xzr
   19a78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19a7c:	ldr	w8, [x19, #8]
   19a80:	b	19958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0xf4>
   19a84:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19a88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19a8c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19a90:	add	x0, x0, #0x0
   19a94:	add	x1, x1, #0x0
   19a98:	add	x3, x3, #0x0
   19a9c:	mov	w2, #0x43                  	// #67
   19aa0:	bl	0 <__assert_fail>
   19aa4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19aa8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19aac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19ab0:	add	x0, x0, #0x0
   19ab4:	add	x1, x1, #0x0
   19ab8:	add	x3, x3, #0x0
   19abc:	mov	w2, #0x252                 	// #594
   19ac0:	bl	0 <__assert_fail>
   19ac4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19ac8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19acc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19ad0:	add	x0, x0, #0x0
   19ad4:	add	x1, x1, #0x0
   19ad8:	add	x3, x3, #0x0
   19adc:	mov	w2, #0x436                 	// #1078
   19ae0:	bl	0 <__assert_fail>
   19ae4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19ae8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19aec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19af0:	add	x0, x0, #0x0
   19af4:	add	x1, x1, #0x0
   19af8:	add	x3, x3, #0x0
   19afc:	mov	w2, #0x134                 	// #308
   19b00:	bl	0 <__assert_fail>

0000000000019b04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj>:
   19b04:	stp	x29, x30, [sp, #-64]!
   19b08:	str	x23, [sp, #16]
   19b0c:	stp	x22, x21, [sp, #32]
   19b10:	stp	x20, x19, [sp, #48]
   19b14:	mov	x29, sp
   19b18:	ldrb	w9, [x1, #1]
   19b1c:	ldp	w8, w10, [x2, #8]
   19b20:	mov	w20, w3
   19b24:	mov	x19, x2
   19b28:	and	w9, w9, #0x7f
   19b2c:	cmp	w9, #0x1
   19b30:	mov	x22, x1
   19b34:	cset	w23, eq  // eq = none
   19b38:	cmp	w8, w10
   19b3c:	mov	x21, x0
   19b40:	b.cs	19d54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x250>  // b.hs, b.nlast
   19b44:	ldr	x9, [x19]
   19b48:	str	x23, [x9, w8, uxtw #3]
   19b4c:	ldp	w8, w9, [x19, #8]
   19b50:	cmp	w8, w9
   19b54:	b.cs	1a018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x514>  // b.hs, b.nlast
   19b58:	add	w8, w8, #0x1
   19b5c:	str	w8, [x19, #8]
   19b60:	ldr	w10, [x22, #8]
   19b64:	cbz	w10, 1a058 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x554>
   19b68:	sub	x10, x22, x10, lsl #3
   19b6c:	ldr	x10, [x10]
   19b70:	cbz	x10, 19b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x78>
   19b74:	ldrb	w11, [x10]
   19b78:	cbnz	w11, 1a078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x574>
   19b7c:	ldr	w12, [x21, #304]
   19b80:	cbz	w12, 19db0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x2ac>
   19b84:	orr	x11, x10, #0x4
   19b88:	cmn	x11, #0x4
   19b8c:	b.eq	1a038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x534>  // b.none
   19b90:	ldr	x11, [x21, #288]
   19b94:	ubfx	x13, x10, #4, #28
   19b98:	eor	w14, w13, w10, lsr #9
   19b9c:	sub	w13, w12, #0x1
   19ba0:	and	w12, w14, w13
   19ba4:	lsl	x14, x12, #4
   19ba8:	ldr	x14, [x11, x14]
   19bac:	cmp	x14, x10
   19bb0:	b.ne	19d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x26c>  // b.any
   19bb4:	add	x10, x11, x12, lsl #4
   19bb8:	ldr	w23, [x10, #12]
   19bbc:	cmp	w8, w9
   19bc0:	b.cs	19dbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x2b8>  // b.hs, b.nlast
   19bc4:	ldr	x9, [x19]
   19bc8:	str	x23, [x9, w8, uxtw #3]
   19bcc:	ldp	w8, w9, [x19, #8]
   19bd0:	cmp	w8, w9
   19bd4:	b.cs	1a018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x514>  // b.hs, b.nlast
   19bd8:	add	w8, w8, #0x1
   19bdc:	str	w8, [x19, #8]
   19be0:	ldr	w10, [x22, #8]
   19be4:	cmp	w10, #0x1
   19be8:	b.ls	1a058 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x554>  // b.plast
   19bec:	sub	x10, x22, x10, lsl #3
   19bf0:	ldr	x10, [x10, #8]
   19bf4:	cbz	x10, 19c00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xfc>
   19bf8:	ldrb	w11, [x10]
   19bfc:	cbnz	w11, 1a078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x574>
   19c00:	ldr	w12, [x21, #304]
   19c04:	cbz	w12, 19e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x314>
   19c08:	orr	x11, x10, #0x4
   19c0c:	cmn	x11, #0x4
   19c10:	b.eq	1a038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x534>  // b.none
   19c14:	ldr	x11, [x21, #288]
   19c18:	ubfx	x13, x10, #4, #28
   19c1c:	eor	w14, w13, w10, lsr #9
   19c20:	sub	w13, w12, #0x1
   19c24:	and	w12, w14, w13
   19c28:	lsl	x14, x12, #4
   19c2c:	ldr	x14, [x11, x14]
   19c30:	cmp	x14, x10
   19c34:	b.ne	19dd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x2d4>  // b.any
   19c38:	add	x10, x11, x12, lsl #4
   19c3c:	ldr	w23, [x10, #12]
   19c40:	cmp	w8, w9
   19c44:	b.cs	19e24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x320>  // b.hs, b.nlast
   19c48:	ldr	x9, [x19]
   19c4c:	str	x23, [x9, w8, uxtw #3]
   19c50:	ldp	w8, w9, [x19, #8]
   19c54:	cmp	w8, w9
   19c58:	b.cs	1a018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x514>  // b.hs, b.nlast
   19c5c:	add	w8, w8, #0x1
   19c60:	str	w8, [x19, #8]
   19c64:	ldrb	w10, [x22, #40]
   19c68:	cbz	w10, 19cec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x1e8>
   19c6c:	ldr	w23, [x22, #24]
   19c70:	cmp	w8, w9
   19c74:	b.cs	19e40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x33c>  // b.hs, b.nlast
   19c78:	ldr	x9, [x19]
   19c7c:	str	x23, [x9, w8, uxtw #3]
   19c80:	ldp	w8, w9, [x19, #8]
   19c84:	cmp	w8, w9
   19c88:	b.cs	1a018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x514>  // b.hs, b.nlast
   19c8c:	add	w8, w8, #0x1
   19c90:	str	w8, [x19, #8]
   19c94:	ldrb	w10, [x22, #40]
   19c98:	cbz	w10, 1a098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x594>
   19c9c:	ldr	w12, [x21, #304]
   19ca0:	cbz	w12, 19eec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3e8>
   19ca4:	ldr	x10, [x22, #32]
   19ca8:	orr	x11, x10, #0x4
   19cac:	cmn	x11, #0x4
   19cb0:	b.eq	1a038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x534>  // b.none
   19cb4:	ldr	x11, [x21, #288]
   19cb8:	ubfx	x13, x10, #4, #28
   19cbc:	eor	w14, w13, w10, lsr #9
   19cc0:	sub	w13, w12, #0x1
   19cc4:	and	w12, w13, w14
   19cc8:	lsl	x14, x12, #4
   19ccc:	ldr	x14, [x11, x14]
   19cd0:	cmp	x14, x10
   19cd4:	b.ne	19e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x358>  // b.any
   19cd8:	add	x10, x11, x12, lsl #4
   19cdc:	ldr	w23, [x10, #12]
   19ce0:	cmp	w8, w9
   19ce4:	b.cc	19ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3f4>  // b.lo, b.ul, b.last
   19ce8:	b	19d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x234>
   19cec:	cmp	w8, w9
   19cf0:	b.cs	19e8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x388>  // b.hs, b.nlast
   19cf4:	ldr	x9, [x19]
   19cf8:	str	xzr, [x9, w8, uxtw #3]
   19cfc:	ldp	w8, w9, [x19, #8]
   19d00:	cmp	w8, w9
   19d04:	b.cs	1a018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x514>  // b.hs, b.nlast
   19d08:	add	w8, w8, #0x1
   19d0c:	str	w8, [x19, #8]
   19d10:	ldr	w12, [x21, #304]
   19d14:	cbz	w12, 19eec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3e8>
   19d18:	ldr	x10, [x21, #288]
   19d1c:	ldr	x14, [x10]
   19d20:	cbnz	x14, 19ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3a4>
   19d24:	mov	x11, xzr
   19d28:	add	x10, x10, xzr, lsl #4
   19d2c:	ldr	w23, [x10, #12]
   19d30:	cmp	w8, w9
   19d34:	b.cc	19ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3f4>  // b.lo, b.ul, b.last
   19d38:	add	x1, x19, #0x10
   19d3c:	mov	w3, #0x8                   	// #8
   19d40:	mov	x0, x19
   19d44:	mov	x2, xzr
   19d48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19d4c:	ldr	w8, [x19, #8]
   19d50:	b	19ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3f4>
   19d54:	add	x1, x19, #0x10
   19d58:	mov	w3, #0x8                   	// #8
   19d5c:	mov	x0, x19
   19d60:	mov	x2, xzr
   19d64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19d68:	ldr	w8, [x19, #8]
   19d6c:	b	19b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x40>
   19d70:	mov	w15, #0x1                   	// #1
   19d74:	cmn	x14, #0x4
   19d78:	b.eq	19db0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x2ac>  // b.none
   19d7c:	add	w12, w12, w15
   19d80:	and	w12, w12, w13
   19d84:	lsl	x14, x12, #4
   19d88:	ldr	x14, [x11, x14]
   19d8c:	add	w15, w15, #0x1
   19d90:	cmp	x14, x10
   19d94:	b.ne	19d74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x270>  // b.any
   19d98:	mov	w12, w12
   19d9c:	add	x10, x11, x12, lsl #4
   19da0:	ldr	w23, [x10, #12]
   19da4:	cmp	w8, w9
   19da8:	b.cc	19bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xc0>  // b.lo, b.ul, b.last
   19dac:	b	19dbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x2b8>
   19db0:	mov	x23, xzr
   19db4:	cmp	w8, w9
   19db8:	b.cc	19bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xc0>  // b.lo, b.ul, b.last
   19dbc:	add	x1, x19, #0x10
   19dc0:	mov	w3, #0x8                   	// #8
   19dc4:	mov	x0, x19
   19dc8:	mov	x2, xzr
   19dcc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19dd0:	ldr	w8, [x19, #8]
   19dd4:	b	19bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xc0>
   19dd8:	mov	w15, #0x1                   	// #1
   19ddc:	cmn	x14, #0x4
   19de0:	b.eq	19e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x314>  // b.none
   19de4:	add	w12, w12, w15
   19de8:	and	w12, w12, w13
   19dec:	lsl	x14, x12, #4
   19df0:	ldr	x14, [x11, x14]
   19df4:	add	w15, w15, #0x1
   19df8:	cmp	x14, x10
   19dfc:	b.ne	19ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x2d8>  // b.any
   19e00:	mov	w12, w12
   19e04:	add	x10, x11, x12, lsl #4
   19e08:	ldr	w23, [x10, #12]
   19e0c:	cmp	w8, w9
   19e10:	b.cc	19c48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x144>  // b.lo, b.ul, b.last
   19e14:	b	19e24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x320>
   19e18:	mov	x23, xzr
   19e1c:	cmp	w8, w9
   19e20:	b.cc	19c48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x144>  // b.lo, b.ul, b.last
   19e24:	add	x1, x19, #0x10
   19e28:	mov	w3, #0x8                   	// #8
   19e2c:	mov	x0, x19
   19e30:	mov	x2, xzr
   19e34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19e38:	ldr	w8, [x19, #8]
   19e3c:	b	19c48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x144>
   19e40:	add	x1, x19, #0x10
   19e44:	mov	w3, #0x8                   	// #8
   19e48:	mov	x0, x19
   19e4c:	mov	x2, xzr
   19e50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19e54:	ldr	w8, [x19, #8]
   19e58:	b	19c78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x174>
   19e5c:	mov	w15, #0x1                   	// #1
   19e60:	cmn	x14, #0x4
   19e64:	b.eq	19eec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3e8>  // b.none
   19e68:	add	w12, w12, w15
   19e6c:	and	w12, w12, w13
   19e70:	lsl	x14, x12, #4
   19e74:	ldr	x14, [x11, x14]
   19e78:	add	w15, w15, #0x1
   19e7c:	cmp	x14, x10
   19e80:	b.ne	19e60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x35c>  // b.any
   19e84:	mov	w12, w12
   19e88:	b	19cd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x1d4>
   19e8c:	add	x1, x19, #0x10
   19e90:	mov	w3, #0x8                   	// #8
   19e94:	mov	x0, x19
   19e98:	mov	x2, xzr
   19e9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19ea0:	ldr	w8, [x19, #8]
   19ea4:	b	19cf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x1f0>
   19ea8:	mov	w11, wzr
   19eac:	sub	w12, w12, #0x1
   19eb0:	mov	w13, #0x1                   	// #1
   19eb4:	cmn	x14, #0x4
   19eb8:	b.eq	19eec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3e8>  // b.none
   19ebc:	add	w11, w11, w13
   19ec0:	and	w11, w11, w12
   19ec4:	lsl	x14, x11, #4
   19ec8:	ldr	x14, [x10, x14]
   19ecc:	add	w13, w13, #0x1
   19ed0:	cbnz	x14, 19eb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3b0>
   19ed4:	mov	w11, w11
   19ed8:	add	x10, x10, x11, lsl #4
   19edc:	ldr	w23, [x10, #12]
   19ee0:	cmp	w8, w9
   19ee4:	b.cc	19ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3f4>  // b.lo, b.ul, b.last
   19ee8:	b	19d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x234>
   19eec:	mov	x23, xzr
   19ef0:	cmp	w8, w9
   19ef4:	b.cs	19d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x234>  // b.hs, b.nlast
   19ef8:	ldr	x9, [x19]
   19efc:	str	x23, [x9, w8, uxtw #3]
   19f00:	ldp	w9, w8, [x19, #8]
   19f04:	cmp	w9, w8
   19f08:	b.cs	1a018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x514>  // b.hs, b.nlast
   19f0c:	add	w9, w9, #0x1
   19f10:	str	w9, [x19, #8]
   19f14:	ldrb	w10, [x22, #56]
   19f18:	cbz	w10, 19f84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x480>
   19f1c:	ldr	w12, [x21, #304]
   19f20:	cbz	w12, 19ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4ec>
   19f24:	ldr	x10, [x22, #48]
   19f28:	orr	x11, x10, #0x4
   19f2c:	cmn	x11, #0x4
   19f30:	b.eq	1a038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x534>  // b.none
   19f34:	ldr	x11, [x21, #288]
   19f38:	ubfx	x13, x10, #4, #28
   19f3c:	eor	w14, w13, w10, lsr #9
   19f40:	sub	w13, w12, #0x1
   19f44:	and	w12, w13, w14
   19f48:	lsl	x14, x12, #4
   19f4c:	ldr	x14, [x11, x14]
   19f50:	cmp	x14, x10
   19f54:	b.ne	19fb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4ac>  // b.any
   19f58:	add	x10, x11, x12, lsl #4
   19f5c:	ldr	w22, [x10, #12]
   19f60:	cmp	w9, w8
   19f64:	b.cs	19ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4f8>  // b.hs, b.nlast
   19f68:	ldr	x8, [x19]
   19f6c:	str	x22, [x8, w9, uxtw #3]
   19f70:	ldp	w8, w9, [x19, #8]
   19f74:	cmp	w8, w9
   19f78:	b.cs	1a018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x514>  // b.hs, b.nlast
   19f7c:	add	w8, w8, #0x1
   19f80:	str	w8, [x19, #8]
   19f84:	ldr	x0, [x21]
   19f88:	mov	w1, #0x10                  	// #16
   19f8c:	mov	x2, x19
   19f90:	mov	w3, w20
   19f94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19f98:	str	wzr, [x19, #8]
   19f9c:	ldp	x20, x19, [sp, #48]
   19fa0:	ldp	x22, x21, [sp, #32]
   19fa4:	ldr	x23, [sp, #16]
   19fa8:	ldp	x29, x30, [sp], #64
   19fac:	ret
   19fb0:	mov	w15, #0x1                   	// #1
   19fb4:	cmn	x14, #0x4
   19fb8:	b.eq	19ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4ec>  // b.none
   19fbc:	add	w12, w12, w15
   19fc0:	and	w12, w12, w13
   19fc4:	lsl	x14, x12, #4
   19fc8:	ldr	x14, [x11, x14]
   19fcc:	add	w15, w15, #0x1
   19fd0:	cmp	x14, x10
   19fd4:	b.ne	19fb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4b0>  // b.any
   19fd8:	mov	w12, w12
   19fdc:	add	x10, x11, x12, lsl #4
   19fe0:	ldr	w22, [x10, #12]
   19fe4:	cmp	w9, w8
   19fe8:	b.cc	19f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x464>  // b.lo, b.ul, b.last
   19fec:	b	19ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4f8>
   19ff0:	mov	x22, xzr
   19ff4:	cmp	w9, w8
   19ff8:	b.cc	19f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x464>  // b.lo, b.ul, b.last
   19ffc:	add	x1, x19, #0x10
   1a000:	mov	w3, #0x8                   	// #8
   1a004:	mov	x0, x19
   1a008:	mov	x2, xzr
   1a00c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a010:	ldr	w9, [x19, #8]
   1a014:	b	19f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x464>
   1a018:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a01c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a020:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a024:	add	x0, x0, #0x0
   1a028:	add	x1, x1, #0x0
   1a02c:	add	x3, x3, #0x0
   1a030:	mov	w2, #0x43                  	// #67
   1a034:	bl	0 <__assert_fail>
   1a038:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a03c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a040:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a044:	add	x0, x0, #0x0
   1a048:	add	x1, x1, #0x0
   1a04c:	add	x3, x3, #0x0
   1a050:	mov	w2, #0x252                 	// #594
   1a054:	bl	0 <__assert_fail>
   1a058:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a05c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a060:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a064:	add	x0, x0, #0x0
   1a068:	add	x1, x1, #0x0
   1a06c:	add	x3, x3, #0x0
   1a070:	mov	w2, #0x436                 	// #1078
   1a074:	bl	0 <__assert_fail>
   1a078:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a07c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a080:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a084:	add	x0, x0, #0x0
   1a088:	add	x1, x1, #0x0
   1a08c:	add	x3, x3, #0x0
   1a090:	mov	w2, #0x121                 	// #289
   1a094:	bl	0 <__assert_fail>
   1a098:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a09c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a0a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a0a4:	add	x0, x0, #0x0
   1a0a8:	add	x1, x1, #0x0
   1a0ac:	add	x3, x3, #0x0
   1a0b0:	mov	w2, #0xad                  	// #173
   1a0b4:	bl	0 <__assert_fail>

000000000001a0b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj>:
   1a0b8:	stp	x29, x30, [sp, #-64]!
   1a0bc:	str	x23, [sp, #16]
   1a0c0:	stp	x22, x21, [sp, #32]
   1a0c4:	stp	x20, x19, [sp, #48]
   1a0c8:	mov	x29, sp
   1a0cc:	ldrb	w8, [x1, #1]
   1a0d0:	and	w8, w8, #0x7f
   1a0d4:	cmp	w8, #0x1
   1a0d8:	b.ne	1acd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xc20>  // b.any
   1a0dc:	ldp	w8, w9, [x2, #8]
   1a0e0:	mov	w20, w3
   1a0e4:	mov	x19, x2
   1a0e8:	mov	x22, x1
   1a0ec:	mov	x21, x0
   1a0f0:	cmp	w8, w9
   1a0f4:	b.cs	1a778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x6c0>  // b.hs, b.nlast
   1a0f8:	ldr	x9, [x19]
   1a0fc:	mov	w10, #0x1                   	// #1
   1a100:	str	x10, [x9, w8, uxtw #3]
   1a104:	ldp	w8, w9, [x19, #8]
   1a108:	cmp	w8, w9
   1a10c:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a110:	add	w8, w8, #0x1
   1a114:	str	w8, [x19, #8]
   1a118:	ldr	w23, [x22, #24]
   1a11c:	cmp	w8, w9
   1a120:	b.cs	1a794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x6dc>  // b.hs, b.nlast
   1a124:	ldr	x9, [x19]
   1a128:	str	x23, [x9, w8, uxtw #3]
   1a12c:	ldp	w8, w9, [x19, #8]
   1a130:	cmp	w8, w9
   1a134:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a138:	add	w8, w8, #0x1
   1a13c:	str	w8, [x19, #8]
   1a140:	ldrb	w10, [x22]
   1a144:	cmp	w10, #0xf
   1a148:	b.ne	1a158 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa0>  // b.any
   1a14c:	mov	x10, x22
   1a150:	cbnz	x10, 1a16c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb4>
   1a154:	b	1a178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xc0>
   1a158:	ldr	w10, [x22, #8]
   1a15c:	cbz	w10, 1ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbc0>
   1a160:	sub	x10, x22, x10, lsl #3
   1a164:	ldr	x10, [x10]
   1a168:	cbz	x10, 1a178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xc0>
   1a16c:	ldrb	w11, [x10]
   1a170:	cmp	w11, #0xf
   1a174:	b.ne	1acf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xc40>  // b.any
   1a178:	ldr	w12, [x21, #304]
   1a17c:	cbz	w12, 1a8d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x818>
   1a180:	orr	x11, x10, #0x4
   1a184:	cmn	x11, #0x4
   1a188:	b.eq	1ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xba0>  // b.none
   1a18c:	ldr	x11, [x21, #288]
   1a190:	ubfx	x13, x10, #4, #28
   1a194:	eor	w14, w13, w10, lsr #9
   1a198:	sub	w13, w12, #0x1
   1a19c:	and	w12, w14, w13
   1a1a0:	lsl	x14, x12, #4
   1a1a4:	ldr	x14, [x11, x14]
   1a1a8:	cmp	x14, x10
   1a1ac:	b.ne	1a890 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x7d8>  // b.any
   1a1b0:	add	x10, x11, x12, lsl #4
   1a1b4:	ldr	w23, [x10, #12]
   1a1b8:	cmp	w8, w9
   1a1bc:	b.cs	1a8dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x824>  // b.hs, b.nlast
   1a1c0:	ldr	x9, [x19]
   1a1c4:	str	x23, [x9, w8, uxtw #3]
   1a1c8:	ldp	w8, w9, [x19, #8]
   1a1cc:	cmp	w8, w9
   1a1d0:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a1d4:	add	w8, w8, #0x1
   1a1d8:	str	w8, [x19, #8]
   1a1dc:	ldr	w10, [x22, #8]
   1a1e0:	cmp	w10, #0x1
   1a1e4:	b.ls	1ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbc0>  // b.plast
   1a1e8:	sub	x10, x22, x10, lsl #3
   1a1ec:	ldr	x10, [x10, #8]
   1a1f0:	cbz	x10, 1a1fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x144>
   1a1f4:	ldrb	w11, [x10]
   1a1f8:	cbnz	w11, 1acb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xc00>
   1a1fc:	ldr	w12, [x21, #304]
   1a200:	cbz	w12, 1a938 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x880>
   1a204:	orr	x11, x10, #0x4
   1a208:	cmn	x11, #0x4
   1a20c:	b.eq	1ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xba0>  // b.none
   1a210:	ldr	x11, [x21, #288]
   1a214:	ubfx	x13, x10, #4, #28
   1a218:	eor	w14, w13, w10, lsr #9
   1a21c:	sub	w13, w12, #0x1
   1a220:	and	w12, w14, w13
   1a224:	lsl	x14, x12, #4
   1a228:	ldr	x14, [x11, x14]
   1a22c:	cmp	x14, x10
   1a230:	b.ne	1a8f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x840>  // b.any
   1a234:	add	x10, x11, x12, lsl #4
   1a238:	ldr	w23, [x10, #12]
   1a23c:	cmp	w8, w9
   1a240:	b.cs	1a944 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x88c>  // b.hs, b.nlast
   1a244:	ldr	x9, [x19]
   1a248:	str	x23, [x9, w8, uxtw #3]
   1a24c:	ldp	w8, w9, [x19, #8]
   1a250:	cmp	w8, w9
   1a254:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a258:	add	w8, w8, #0x1
   1a25c:	str	w8, [x19, #8]
   1a260:	ldrb	w23, [x22, #28]
   1a264:	cmp	w8, w9
   1a268:	b.cs	1a7b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x6f8>  // b.hs, b.nlast
   1a26c:	ldr	x9, [x19]
   1a270:	str	x23, [x9, w8, uxtw #3]
   1a274:	ldp	w8, w9, [x19, #8]
   1a278:	cmp	w8, w9
   1a27c:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a280:	add	w8, w8, #0x1
   1a284:	str	w8, [x19, #8]
   1a288:	ldr	w10, [x22, #8]
   1a28c:	cmp	w10, #0x2
   1a290:	b.ls	1ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbc0>  // b.plast
   1a294:	sub	x10, x22, x10, lsl #3
   1a298:	ldr	x10, [x10, #16]
   1a29c:	cbz	x10, 1a2a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x1f0>
   1a2a0:	ldrb	w11, [x10]
   1a2a4:	cbnz	w11, 1acb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xc00>
   1a2a8:	ldr	w12, [x21, #304]
   1a2ac:	cbz	w12, 1a9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8e8>
   1a2b0:	orr	x11, x10, #0x4
   1a2b4:	cmn	x11, #0x4
   1a2b8:	b.eq	1ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xba0>  // b.none
   1a2bc:	ldr	x11, [x21, #288]
   1a2c0:	ubfx	x13, x10, #4, #28
   1a2c4:	eor	w14, w13, w10, lsr #9
   1a2c8:	sub	w13, w12, #0x1
   1a2cc:	and	w12, w14, w13
   1a2d0:	lsl	x14, x12, #4
   1a2d4:	ldr	x14, [x11, x14]
   1a2d8:	cmp	x14, x10
   1a2dc:	b.ne	1a960 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8a8>  // b.any
   1a2e0:	add	x10, x11, x12, lsl #4
   1a2e4:	ldr	w23, [x10, #12]
   1a2e8:	cmp	w8, w9
   1a2ec:	b.cs	1a9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8f4>  // b.hs, b.nlast
   1a2f0:	ldr	x9, [x19]
   1a2f4:	str	x23, [x9, w8, uxtw #3]
   1a2f8:	ldp	w8, w9, [x19, #8]
   1a2fc:	cmp	w8, w9
   1a300:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a304:	add	w8, w8, #0x1
   1a308:	str	w8, [x19, #8]
   1a30c:	ldr	w23, [x22, #32]
   1a310:	cmp	w8, w9
   1a314:	b.cs	1a7cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x714>  // b.hs, b.nlast
   1a318:	ldr	x9, [x19]
   1a31c:	str	x23, [x9, w8, uxtw #3]
   1a320:	ldp	w8, w9, [x19, #8]
   1a324:	cmp	w8, w9
   1a328:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a32c:	add	w8, w8, #0x1
   1a330:	str	w8, [x19, #8]
   1a334:	ldr	w10, [x22, #8]
   1a338:	cmp	w10, #0x3
   1a33c:	b.ls	1ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbc0>  // b.plast
   1a340:	sub	x10, x22, x10, lsl #3
   1a344:	ldr	x10, [x10, #24]
   1a348:	cbz	x10, 1a354 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x29c>
   1a34c:	ldrb	w11, [x10]
   1a350:	cbnz	w11, 1acb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xc00>
   1a354:	ldr	w12, [x21, #304]
   1a358:	cbz	w12, 1aa08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x950>
   1a35c:	orr	x11, x10, #0x4
   1a360:	cmn	x11, #0x4
   1a364:	b.eq	1ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xba0>  // b.none
   1a368:	ldr	x11, [x21, #288]
   1a36c:	ubfx	x13, x10, #4, #28
   1a370:	eor	w14, w13, w10, lsr #9
   1a374:	sub	w13, w12, #0x1
   1a378:	and	w12, w14, w13
   1a37c:	lsl	x14, x12, #4
   1a380:	ldr	x14, [x11, x14]
   1a384:	cmp	x14, x10
   1a388:	b.ne	1a9c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x910>  // b.any
   1a38c:	add	x10, x11, x12, lsl #4
   1a390:	ldr	w23, [x10, #12]
   1a394:	cmp	w8, w9
   1a398:	b.cs	1aa14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x95c>  // b.hs, b.nlast
   1a39c:	ldr	x9, [x19]
   1a3a0:	str	x23, [x9, w8, uxtw #3]
   1a3a4:	ldp	w8, w9, [x19, #8]
   1a3a8:	cmp	w8, w9
   1a3ac:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a3b0:	add	w8, w8, #0x1
   1a3b4:	str	w8, [x19, #8]
   1a3b8:	ldr	w23, [x22, #36]
   1a3bc:	cmp	w8, w9
   1a3c0:	b.cs	1a7e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x730>  // b.hs, b.nlast
   1a3c4:	ldr	x9, [x19]
   1a3c8:	str	x23, [x9, w8, uxtw #3]
   1a3cc:	ldp	w8, w9, [x19, #8]
   1a3d0:	cmp	w8, w9
   1a3d4:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a3d8:	add	w8, w8, #0x1
   1a3dc:	str	w8, [x19, #8]
   1a3e0:	ldr	w10, [x22, #8]
   1a3e4:	cmp	w10, #0x4
   1a3e8:	b.ls	1ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbc0>  // b.plast
   1a3ec:	sub	x10, x22, x10, lsl #3
   1a3f0:	ldr	x10, [x10, #32]
   1a3f4:	cbz	x10, 1a404 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x34c>
   1a3f8:	ldrb	w11, [x10]
   1a3fc:	cmp	w11, #0x4
   1a400:	b.ne	1ac98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbe0>  // b.any
   1a404:	ldr	w12, [x21, #304]
   1a408:	cbz	w12, 1aa70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9b8>
   1a40c:	orr	x11, x10, #0x4
   1a410:	cmn	x11, #0x4
   1a414:	b.eq	1ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xba0>  // b.none
   1a418:	ldr	x11, [x21, #288]
   1a41c:	ubfx	x13, x10, #4, #28
   1a420:	eor	w14, w13, w10, lsr #9
   1a424:	sub	w13, w12, #0x1
   1a428:	and	w12, w13, w14
   1a42c:	lsl	x14, x12, #4
   1a430:	ldr	x14, [x11, x14]
   1a434:	cmp	x14, x10
   1a438:	b.ne	1aa30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x978>  // b.any
   1a43c:	add	x10, x11, x12, lsl #4
   1a440:	ldr	w23, [x10, #12]
   1a444:	cmp	w8, w9
   1a448:	b.cs	1aa7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9c4>  // b.hs, b.nlast
   1a44c:	ldr	x9, [x19]
   1a450:	str	x23, [x9, w8, uxtw #3]
   1a454:	ldp	w8, w9, [x19, #8]
   1a458:	cmp	w8, w9
   1a45c:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a460:	add	w8, w8, #0x1
   1a464:	str	w8, [x19, #8]
   1a468:	ldr	w10, [x22, #8]
   1a46c:	cmp	w10, #0x5
   1a470:	b.ls	1ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbc0>  // b.plast
   1a474:	sub	x10, x22, x10, lsl #3
   1a478:	ldr	x10, [x10, #40]
   1a47c:	cbz	x10, 1a48c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x3d4>
   1a480:	ldrb	w11, [x10]
   1a484:	cmp	w11, #0x4
   1a488:	b.ne	1ac98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbe0>  // b.any
   1a48c:	ldr	w12, [x21, #304]
   1a490:	cbz	w12, 1aad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa20>
   1a494:	orr	x11, x10, #0x4
   1a498:	cmn	x11, #0x4
   1a49c:	b.eq	1ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xba0>  // b.none
   1a4a0:	ldr	x11, [x21, #288]
   1a4a4:	ubfx	x13, x10, #4, #28
   1a4a8:	eor	w14, w13, w10, lsr #9
   1a4ac:	sub	w13, w12, #0x1
   1a4b0:	and	w12, w13, w14
   1a4b4:	lsl	x14, x12, #4
   1a4b8:	ldr	x14, [x11, x14]
   1a4bc:	cmp	x14, x10
   1a4c0:	b.ne	1aa98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9e0>  // b.any
   1a4c4:	add	x10, x11, x12, lsl #4
   1a4c8:	ldr	w23, [x10, #12]
   1a4cc:	cmp	w8, w9
   1a4d0:	b.cs	1aae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa2c>  // b.hs, b.nlast
   1a4d4:	ldr	x9, [x19]
   1a4d8:	str	x23, [x9, w8, uxtw #3]
   1a4dc:	ldp	w8, w9, [x19, #8]
   1a4e0:	cmp	w8, w9
   1a4e4:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a4e8:	add	w8, w8, #0x1
   1a4ec:	cmp	w8, w9
   1a4f0:	str	w8, [x19, #8]
   1a4f4:	b.cs	1a804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x74c>  // b.hs, b.nlast
   1a4f8:	ldr	x9, [x19]
   1a4fc:	str	xzr, [x9, w8, uxtw #3]
   1a500:	ldp	w8, w9, [x19, #8]
   1a504:	cmp	w8, w9
   1a508:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a50c:	add	w8, w8, #0x1
   1a510:	str	w8, [x19, #8]
   1a514:	ldr	w10, [x22, #8]
   1a518:	cmp	w10, #0x6
   1a51c:	b.ls	1ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbc0>  // b.plast
   1a520:	sub	x10, x22, x10, lsl #3
   1a524:	ldr	x10, [x10, #48]
   1a528:	cbz	x10, 1a538 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x480>
   1a52c:	ldrb	w11, [x10]
   1a530:	cmp	w11, #0x4
   1a534:	b.ne	1ac98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbe0>  // b.any
   1a538:	ldr	w12, [x21, #304]
   1a53c:	cbz	w12, 1ab40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa88>
   1a540:	orr	x11, x10, #0x4
   1a544:	cmn	x11, #0x4
   1a548:	b.eq	1ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xba0>  // b.none
   1a54c:	ldr	x11, [x21, #288]
   1a550:	ubfx	x13, x10, #4, #28
   1a554:	eor	w14, w13, w10, lsr #9
   1a558:	sub	w13, w12, #0x1
   1a55c:	and	w12, w13, w14
   1a560:	lsl	x14, x12, #4
   1a564:	ldr	x14, [x11, x14]
   1a568:	cmp	x14, x10
   1a56c:	b.ne	1ab00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa48>  // b.any
   1a570:	add	x10, x11, x12, lsl #4
   1a574:	ldr	w23, [x10, #12]
   1a578:	cmp	w8, w9
   1a57c:	b.cs	1ab4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa94>  // b.hs, b.nlast
   1a580:	ldr	x9, [x19]
   1a584:	str	x23, [x9, w8, uxtw #3]
   1a588:	ldp	w8, w9, [x19, #8]
   1a58c:	cmp	w8, w9
   1a590:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a594:	add	w8, w8, #0x1
   1a598:	str	w8, [x19, #8]
   1a59c:	ldr	w10, [x22, #8]
   1a5a0:	cmp	w10, #0x7
   1a5a4:	b.ls	1ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbc0>  // b.plast
   1a5a8:	sub	x10, x22, x10, lsl #3
   1a5ac:	ldr	x10, [x10, #56]
   1a5b0:	cbz	x10, 1a5c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x508>
   1a5b4:	ldrb	w11, [x10]
   1a5b8:	cmp	w11, #0x4
   1a5bc:	b.ne	1ac98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbe0>  // b.any
   1a5c0:	ldr	w12, [x21, #304]
   1a5c4:	cbz	w12, 1aba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>
   1a5c8:	orr	x11, x10, #0x4
   1a5cc:	cmn	x11, #0x4
   1a5d0:	b.eq	1ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xba0>  // b.none
   1a5d4:	ldr	x11, [x21, #288]
   1a5d8:	ubfx	x13, x10, #4, #28
   1a5dc:	eor	w14, w13, w10, lsr #9
   1a5e0:	sub	w13, w12, #0x1
   1a5e4:	and	w12, w13, w14
   1a5e8:	lsl	x14, x12, #4
   1a5ec:	ldr	x14, [x11, x14]
   1a5f0:	cmp	x14, x10
   1a5f4:	b.ne	1ab68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xab0>  // b.any
   1a5f8:	add	x10, x11, x12, lsl #4
   1a5fc:	ldr	w23, [x10, #12]
   1a600:	cmp	w8, w9
   1a604:	b.cs	1abb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xafc>  // b.hs, b.nlast
   1a608:	ldr	x9, [x19]
   1a60c:	str	x23, [x9, w8, uxtw #3]
   1a610:	ldp	w8, w9, [x19, #8]
   1a614:	cmp	w8, w9
   1a618:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a61c:	add	w8, w8, #0x1
   1a620:	str	w8, [x19, #8]
   1a624:	ldr	x23, [x22, #40]
   1a628:	cmp	w8, w9
   1a62c:	b.cs	1a820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x768>  // b.hs, b.nlast
   1a630:	ldr	x9, [x19]
   1a634:	str	x23, [x9, w8, uxtw #3]
   1a638:	ldp	w8, w9, [x19, #8]
   1a63c:	cmp	w8, w9
   1a640:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a644:	add	w8, w8, #0x1
   1a648:	str	w8, [x19, #8]
   1a64c:	ldr	w10, [x22, #8]
   1a650:	cmp	w10, #0x8
   1a654:	b.ls	1ac78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbc0>  // b.plast
   1a658:	sub	x10, x22, x10, lsl #3
   1a65c:	ldr	x10, [x10, #64]
   1a660:	cbz	x10, 1a670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x5b8>
   1a664:	ldrb	w11, [x10]
   1a668:	cmp	w11, #0x4
   1a66c:	b.ne	1ac98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbe0>  // b.any
   1a670:	ldr	w12, [x21, #304]
   1a674:	cbz	w12, 1ac10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb58>
   1a678:	orr	x11, x10, #0x4
   1a67c:	cmn	x11, #0x4
   1a680:	b.eq	1ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xba0>  // b.none
   1a684:	ldr	x11, [x21, #288]
   1a688:	ubfx	x13, x10, #4, #28
   1a68c:	eor	w14, w13, w10, lsr #9
   1a690:	sub	w13, w12, #0x1
   1a694:	and	w12, w14, w13
   1a698:	lsl	x14, x12, #4
   1a69c:	ldr	x14, [x11, x14]
   1a6a0:	cmp	x14, x10
   1a6a4:	b.ne	1abd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb18>  // b.any
   1a6a8:	add	x10, x11, x12, lsl #4
   1a6ac:	ldr	w23, [x10, #12]
   1a6b0:	cmp	w8, w9
   1a6b4:	b.cs	1ac1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb64>  // b.hs, b.nlast
   1a6b8:	ldr	x9, [x19]
   1a6bc:	str	x23, [x9, w8, uxtw #3]
   1a6c0:	ldp	w8, w9, [x19, #8]
   1a6c4:	cmp	w8, w9
   1a6c8:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a6cc:	add	w8, w8, #0x1
   1a6d0:	str	w8, [x19, #8]
   1a6d4:	ldrb	w23, [x22, #48]
   1a6d8:	cmp	w8, w9
   1a6dc:	b.cs	1a83c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x784>  // b.hs, b.nlast
   1a6e0:	ldr	x9, [x19]
   1a6e4:	str	x23, [x9, w8, uxtw #3]
   1a6e8:	ldp	w8, w9, [x19, #8]
   1a6ec:	cmp	w8, w9
   1a6f0:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a6f4:	add	w8, w8, #0x1
   1a6f8:	str	w8, [x19, #8]
   1a6fc:	ldrb	w23, [x22, #49]
   1a700:	cmp	w8, w9
   1a704:	b.cs	1a858 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x7a0>  // b.hs, b.nlast
   1a708:	ldr	x9, [x19]
   1a70c:	str	x23, [x9, w8, uxtw #3]
   1a710:	ldp	w8, w9, [x19, #8]
   1a714:	cmp	w8, w9
   1a718:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a71c:	add	w8, w8, #0x1
   1a720:	str	w8, [x19, #8]
   1a724:	ldr	w22, [x22, #52]
   1a728:	cmp	w8, w9
   1a72c:	b.cs	1a874 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x7bc>  // b.hs, b.nlast
   1a730:	ldr	x9, [x19]
   1a734:	str	x22, [x9, w8, uxtw #3]
   1a738:	ldp	w8, w9, [x19, #8]
   1a73c:	cmp	w8, w9
   1a740:	b.cs	1ac38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb80>  // b.hs, b.nlast
   1a744:	add	w8, w8, #0x1
   1a748:	str	w8, [x19, #8]
   1a74c:	ldr	x0, [x21]
   1a750:	mov	w1, #0x14                  	// #20
   1a754:	mov	x2, x19
   1a758:	mov	w3, w20
   1a75c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a760:	str	wzr, [x19, #8]
   1a764:	ldp	x20, x19, [sp, #48]
   1a768:	ldp	x22, x21, [sp, #32]
   1a76c:	ldr	x23, [sp, #16]
   1a770:	ldp	x29, x30, [sp], #64
   1a774:	ret
   1a778:	add	x1, x19, #0x10
   1a77c:	mov	w3, #0x8                   	// #8
   1a780:	mov	x0, x19
   1a784:	mov	x2, xzr
   1a788:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a78c:	ldr	w8, [x19, #8]
   1a790:	b	1a0f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x40>
   1a794:	add	x1, x19, #0x10
   1a798:	mov	w3, #0x8                   	// #8
   1a79c:	mov	x0, x19
   1a7a0:	mov	x2, xzr
   1a7a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a7a8:	ldr	w8, [x19, #8]
   1a7ac:	b	1a124 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x6c>
   1a7b0:	add	x1, x19, #0x10
   1a7b4:	mov	w3, #0x8                   	// #8
   1a7b8:	mov	x0, x19
   1a7bc:	mov	x2, xzr
   1a7c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a7c4:	ldr	w8, [x19, #8]
   1a7c8:	b	1a26c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x1b4>
   1a7cc:	add	x1, x19, #0x10
   1a7d0:	mov	w3, #0x8                   	// #8
   1a7d4:	mov	x0, x19
   1a7d8:	mov	x2, xzr
   1a7dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a7e0:	ldr	w8, [x19, #8]
   1a7e4:	b	1a318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x260>
   1a7e8:	add	x1, x19, #0x10
   1a7ec:	mov	w3, #0x8                   	// #8
   1a7f0:	mov	x0, x19
   1a7f4:	mov	x2, xzr
   1a7f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a7fc:	ldr	w8, [x19, #8]
   1a800:	b	1a3c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x30c>
   1a804:	add	x1, x19, #0x10
   1a808:	mov	w3, #0x8                   	// #8
   1a80c:	mov	x0, x19
   1a810:	mov	x2, xzr
   1a814:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a818:	ldr	w8, [x19, #8]
   1a81c:	b	1a4f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x440>
   1a820:	add	x1, x19, #0x10
   1a824:	mov	w3, #0x8                   	// #8
   1a828:	mov	x0, x19
   1a82c:	mov	x2, xzr
   1a830:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a834:	ldr	w8, [x19, #8]
   1a838:	b	1a630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x578>
   1a83c:	add	x1, x19, #0x10
   1a840:	mov	w3, #0x8                   	// #8
   1a844:	mov	x0, x19
   1a848:	mov	x2, xzr
   1a84c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a850:	ldr	w8, [x19, #8]
   1a854:	b	1a6e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x628>
   1a858:	add	x1, x19, #0x10
   1a85c:	mov	w3, #0x8                   	// #8
   1a860:	mov	x0, x19
   1a864:	mov	x2, xzr
   1a868:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a86c:	ldr	w8, [x19, #8]
   1a870:	b	1a708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x650>
   1a874:	add	x1, x19, #0x10
   1a878:	mov	w3, #0x8                   	// #8
   1a87c:	mov	x0, x19
   1a880:	mov	x2, xzr
   1a884:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a888:	ldr	w8, [x19, #8]
   1a88c:	b	1a730 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x678>
   1a890:	mov	w15, #0x1                   	// #1
   1a894:	cmn	x14, #0x4
   1a898:	b.eq	1a8d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x818>  // b.none
   1a89c:	add	w12, w12, w15
   1a8a0:	and	w12, w12, w13
   1a8a4:	lsl	x14, x12, #4
   1a8a8:	ldr	x14, [x11, x14]
   1a8ac:	add	w15, w15, #0x1
   1a8b0:	cmp	x14, x10
   1a8b4:	b.ne	1a894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x7dc>  // b.any
   1a8b8:	mov	w12, w12
   1a8bc:	add	x10, x11, x12, lsl #4
   1a8c0:	ldr	w23, [x10, #12]
   1a8c4:	cmp	w8, w9
   1a8c8:	b.cc	1a1c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x108>  // b.lo, b.ul, b.last
   1a8cc:	b	1a8dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x824>
   1a8d0:	mov	x23, xzr
   1a8d4:	cmp	w8, w9
   1a8d8:	b.cc	1a1c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x108>  // b.lo, b.ul, b.last
   1a8dc:	add	x1, x19, #0x10
   1a8e0:	mov	w3, #0x8                   	// #8
   1a8e4:	mov	x0, x19
   1a8e8:	mov	x2, xzr
   1a8ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a8f0:	ldr	w8, [x19, #8]
   1a8f4:	b	1a1c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x108>
   1a8f8:	mov	w15, #0x1                   	// #1
   1a8fc:	cmn	x14, #0x4
   1a900:	b.eq	1a938 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x880>  // b.none
   1a904:	add	w12, w12, w15
   1a908:	and	w12, w12, w13
   1a90c:	lsl	x14, x12, #4
   1a910:	ldr	x14, [x11, x14]
   1a914:	add	w15, w15, #0x1
   1a918:	cmp	x14, x10
   1a91c:	b.ne	1a8fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x844>  // b.any
   1a920:	mov	w12, w12
   1a924:	add	x10, x11, x12, lsl #4
   1a928:	ldr	w23, [x10, #12]
   1a92c:	cmp	w8, w9
   1a930:	b.cc	1a244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   1a934:	b	1a944 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x88c>
   1a938:	mov	x23, xzr
   1a93c:	cmp	w8, w9
   1a940:	b.cc	1a244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   1a944:	add	x1, x19, #0x10
   1a948:	mov	w3, #0x8                   	// #8
   1a94c:	mov	x0, x19
   1a950:	mov	x2, xzr
   1a954:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a958:	ldr	w8, [x19, #8]
   1a95c:	b	1a244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x18c>
   1a960:	mov	w15, #0x1                   	// #1
   1a964:	cmn	x14, #0x4
   1a968:	b.eq	1a9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8e8>  // b.none
   1a96c:	add	w12, w12, w15
   1a970:	and	w12, w12, w13
   1a974:	lsl	x14, x12, #4
   1a978:	ldr	x14, [x11, x14]
   1a97c:	add	w15, w15, #0x1
   1a980:	cmp	x14, x10
   1a984:	b.ne	1a964 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8ac>  // b.any
   1a988:	mov	w12, w12
   1a98c:	add	x10, x11, x12, lsl #4
   1a990:	ldr	w23, [x10, #12]
   1a994:	cmp	w8, w9
   1a998:	b.cc	1a2f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x238>  // b.lo, b.ul, b.last
   1a99c:	b	1a9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8f4>
   1a9a0:	mov	x23, xzr
   1a9a4:	cmp	w8, w9
   1a9a8:	b.cc	1a2f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x238>  // b.lo, b.ul, b.last
   1a9ac:	add	x1, x19, #0x10
   1a9b0:	mov	w3, #0x8                   	// #8
   1a9b4:	mov	x0, x19
   1a9b8:	mov	x2, xzr
   1a9bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a9c0:	ldr	w8, [x19, #8]
   1a9c4:	b	1a2f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x238>
   1a9c8:	mov	w15, #0x1                   	// #1
   1a9cc:	cmn	x14, #0x4
   1a9d0:	b.eq	1aa08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x950>  // b.none
   1a9d4:	add	w12, w12, w15
   1a9d8:	and	w12, w12, w13
   1a9dc:	lsl	x14, x12, #4
   1a9e0:	ldr	x14, [x11, x14]
   1a9e4:	add	w15, w15, #0x1
   1a9e8:	cmp	x14, x10
   1a9ec:	b.ne	1a9cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x914>  // b.any
   1a9f0:	mov	w12, w12
   1a9f4:	add	x10, x11, x12, lsl #4
   1a9f8:	ldr	w23, [x10, #12]
   1a9fc:	cmp	w8, w9
   1aa00:	b.cc	1a39c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x2e4>  // b.lo, b.ul, b.last
   1aa04:	b	1aa14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x95c>
   1aa08:	mov	x23, xzr
   1aa0c:	cmp	w8, w9
   1aa10:	b.cc	1a39c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x2e4>  // b.lo, b.ul, b.last
   1aa14:	add	x1, x19, #0x10
   1aa18:	mov	w3, #0x8                   	// #8
   1aa1c:	mov	x0, x19
   1aa20:	mov	x2, xzr
   1aa24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1aa28:	ldr	w8, [x19, #8]
   1aa2c:	b	1a39c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x2e4>
   1aa30:	mov	w15, #0x1                   	// #1
   1aa34:	cmn	x14, #0x4
   1aa38:	b.eq	1aa70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9b8>  // b.none
   1aa3c:	add	w12, w12, w15
   1aa40:	and	w12, w12, w13
   1aa44:	lsl	x14, x12, #4
   1aa48:	ldr	x14, [x11, x14]
   1aa4c:	add	w15, w15, #0x1
   1aa50:	cmp	x14, x10
   1aa54:	b.ne	1aa34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x97c>  // b.any
   1aa58:	mov	w12, w12
   1aa5c:	add	x10, x11, x12, lsl #4
   1aa60:	ldr	w23, [x10, #12]
   1aa64:	cmp	w8, w9
   1aa68:	b.cc	1a44c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x394>  // b.lo, b.ul, b.last
   1aa6c:	b	1aa7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9c4>
   1aa70:	mov	x23, xzr
   1aa74:	cmp	w8, w9
   1aa78:	b.cc	1a44c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x394>  // b.lo, b.ul, b.last
   1aa7c:	add	x1, x19, #0x10
   1aa80:	mov	w3, #0x8                   	// #8
   1aa84:	mov	x0, x19
   1aa88:	mov	x2, xzr
   1aa8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1aa90:	ldr	w8, [x19, #8]
   1aa94:	b	1a44c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x394>
   1aa98:	mov	w15, #0x1                   	// #1
   1aa9c:	cmn	x14, #0x4
   1aaa0:	b.eq	1aad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa20>  // b.none
   1aaa4:	add	w12, w12, w15
   1aaa8:	and	w12, w12, w13
   1aaac:	lsl	x14, x12, #4
   1aab0:	ldr	x14, [x11, x14]
   1aab4:	add	w15, w15, #0x1
   1aab8:	cmp	x14, x10
   1aabc:	b.ne	1aa9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9e4>  // b.any
   1aac0:	mov	w12, w12
   1aac4:	add	x10, x11, x12, lsl #4
   1aac8:	ldr	w23, [x10, #12]
   1aacc:	cmp	w8, w9
   1aad0:	b.cc	1a4d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x41c>  // b.lo, b.ul, b.last
   1aad4:	b	1aae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa2c>
   1aad8:	mov	x23, xzr
   1aadc:	cmp	w8, w9
   1aae0:	b.cc	1a4d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x41c>  // b.lo, b.ul, b.last
   1aae4:	add	x1, x19, #0x10
   1aae8:	mov	w3, #0x8                   	// #8
   1aaec:	mov	x0, x19
   1aaf0:	mov	x2, xzr
   1aaf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1aaf8:	ldr	w8, [x19, #8]
   1aafc:	b	1a4d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x41c>
   1ab00:	mov	w15, #0x1                   	// #1
   1ab04:	cmn	x14, #0x4
   1ab08:	b.eq	1ab40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa88>  // b.none
   1ab0c:	add	w12, w12, w15
   1ab10:	and	w12, w12, w13
   1ab14:	lsl	x14, x12, #4
   1ab18:	ldr	x14, [x11, x14]
   1ab1c:	add	w15, w15, #0x1
   1ab20:	cmp	x14, x10
   1ab24:	b.ne	1ab04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa4c>  // b.any
   1ab28:	mov	w12, w12
   1ab2c:	add	x10, x11, x12, lsl #4
   1ab30:	ldr	w23, [x10, #12]
   1ab34:	cmp	w8, w9
   1ab38:	b.cc	1a580 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x4c8>  // b.lo, b.ul, b.last
   1ab3c:	b	1ab4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa94>
   1ab40:	mov	x23, xzr
   1ab44:	cmp	w8, w9
   1ab48:	b.cc	1a580 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x4c8>  // b.lo, b.ul, b.last
   1ab4c:	add	x1, x19, #0x10
   1ab50:	mov	w3, #0x8                   	// #8
   1ab54:	mov	x0, x19
   1ab58:	mov	x2, xzr
   1ab5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ab60:	ldr	w8, [x19, #8]
   1ab64:	b	1a580 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x4c8>
   1ab68:	mov	w15, #0x1                   	// #1
   1ab6c:	cmn	x14, #0x4
   1ab70:	b.eq	1aba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.none
   1ab74:	add	w12, w12, w15
   1ab78:	and	w12, w12, w13
   1ab7c:	lsl	x14, x12, #4
   1ab80:	ldr	x14, [x11, x14]
   1ab84:	add	w15, w15, #0x1
   1ab88:	cmp	x14, x10
   1ab8c:	b.ne	1ab6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xab4>  // b.any
   1ab90:	mov	w12, w12
   1ab94:	add	x10, x11, x12, lsl #4
   1ab98:	ldr	w23, [x10, #12]
   1ab9c:	cmp	w8, w9
   1aba0:	b.cc	1a608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x550>  // b.lo, b.ul, b.last
   1aba4:	b	1abb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xafc>
   1aba8:	mov	x23, xzr
   1abac:	cmp	w8, w9
   1abb0:	b.cc	1a608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x550>  // b.lo, b.ul, b.last
   1abb4:	add	x1, x19, #0x10
   1abb8:	mov	w3, #0x8                   	// #8
   1abbc:	mov	x0, x19
   1abc0:	mov	x2, xzr
   1abc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1abc8:	ldr	w8, [x19, #8]
   1abcc:	b	1a608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x550>
   1abd0:	mov	w15, #0x1                   	// #1
   1abd4:	cmn	x14, #0x4
   1abd8:	b.eq	1ac10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb58>  // b.none
   1abdc:	add	w12, w12, w15
   1abe0:	and	w12, w12, w13
   1abe4:	lsl	x14, x12, #4
   1abe8:	ldr	x14, [x11, x14]
   1abec:	add	w15, w15, #0x1
   1abf0:	cmp	x14, x10
   1abf4:	b.ne	1abd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb1c>  // b.any
   1abf8:	mov	w12, w12
   1abfc:	add	x10, x11, x12, lsl #4
   1ac00:	ldr	w23, [x10, #12]
   1ac04:	cmp	w8, w9
   1ac08:	b.cc	1a6b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x600>  // b.lo, b.ul, b.last
   1ac0c:	b	1ac1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb64>
   1ac10:	mov	x23, xzr
   1ac14:	cmp	w8, w9
   1ac18:	b.cc	1a6b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x600>  // b.lo, b.ul, b.last
   1ac1c:	add	x1, x19, #0x10
   1ac20:	mov	w3, #0x8                   	// #8
   1ac24:	mov	x0, x19
   1ac28:	mov	x2, xzr
   1ac2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ac30:	ldr	w8, [x19, #8]
   1ac34:	b	1a6b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x600>
   1ac38:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac3c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac40:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac44:	add	x0, x0, #0x0
   1ac48:	add	x1, x1, #0x0
   1ac4c:	add	x3, x3, #0x0
   1ac50:	mov	w2, #0x43                  	// #67
   1ac54:	bl	0 <__assert_fail>
   1ac58:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac5c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac60:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac64:	add	x0, x0, #0x0
   1ac68:	add	x1, x1, #0x0
   1ac6c:	add	x3, x3, #0x0
   1ac70:	mov	w2, #0x252                 	// #594
   1ac74:	bl	0 <__assert_fail>
   1ac78:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac7c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac80:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac84:	add	x0, x0, #0x0
   1ac88:	add	x1, x1, #0x0
   1ac8c:	add	x3, x3, #0x0
   1ac90:	mov	w2, #0x436                 	// #1078
   1ac94:	bl	0 <__assert_fail>
   1ac98:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac9c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1aca0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1aca4:	add	x0, x0, #0x0
   1aca8:	add	x1, x1, #0x0
   1acac:	add	x3, x3, #0x0
   1acb0:	mov	w2, #0x134                 	// #308
   1acb4:	bl	0 <__assert_fail>
   1acb8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1acbc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1acc0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1acc4:	add	x0, x0, #0x0
   1acc8:	add	x1, x1, #0x0
   1accc:	add	x3, x3, #0x0
   1acd0:	mov	w2, #0x121                 	// #289
   1acd4:	bl	0 <__assert_fail>
   1acd8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1acdc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ace0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ace4:	add	x0, x0, #0x0
   1ace8:	add	x1, x1, #0x0
   1acec:	add	x3, x3, #0x0
   1acf0:	mov	w2, #0x66c                 	// #1644
   1acf4:	bl	0 <__assert_fail>
   1acf8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1acfc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad00:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad04:	add	x0, x0, #0x0
   1ad08:	add	x1, x1, #0x0
   1ad0c:	add	x3, x3, #0x0
   1ad10:	mov	w2, #0x134                 	// #308
   1ad14:	bl	0 <__assert_fail>

000000000001ad18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj>:
   1ad18:	stp	x29, x30, [sp, #-64]!
   1ad1c:	str	x23, [sp, #16]
   1ad20:	stp	x22, x21, [sp, #32]
   1ad24:	stp	x20, x19, [sp, #48]
   1ad28:	mov	x29, sp
   1ad2c:	ldrb	w9, [x1, #1]
   1ad30:	ldp	w8, w10, [x2, #8]
   1ad34:	mov	w20, w3
   1ad38:	mov	x19, x2
   1ad3c:	and	w9, w9, #0x7f
   1ad40:	cmp	w9, #0x1
   1ad44:	cset	w9, eq  // eq = none
   1ad48:	mov	x22, x1
   1ad4c:	mov	x21, x0
   1ad50:	cmp	w8, w10
   1ad54:	orr	x23, x9, #0x6
   1ad58:	b.cs	1b4fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x7e4>  // b.hs, b.nlast
   1ad5c:	ldr	x9, [x19]
   1ad60:	str	x23, [x9, w8, uxtw #3]
   1ad64:	ldp	w8, w9, [x19, #8]
   1ad68:	cmp	w8, w9
   1ad6c:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1ad70:	add	w8, w8, #0x1
   1ad74:	str	w8, [x19, #8]
   1ad78:	ldr	w10, [x22, #8]
   1ad7c:	cmp	w10, #0x1
   1ad80:	b.ls	1ba78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd60>  // b.plast
   1ad84:	sub	x10, x22, x10, lsl #3
   1ad88:	ldr	x10, [x10, #8]
   1ad8c:	cbz	x10, 1ada8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x90>
   1ad90:	ldrb	w11, [x10]
   1ad94:	sub	w12, w11, #0xb
   1ad98:	cmp	w12, #0xb
   1ad9c:	b.cs	1b4ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x794>  // b.hs, b.nlast
   1ada0:	cmp	w12, #0xb
   1ada4:	b.cs	1b4d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x7bc>  // b.hs, b.nlast
   1ada8:	ldr	w12, [x21, #304]
   1adac:	cbz	w12, 1b600 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8e8>
   1adb0:	orr	x11, x10, #0x4
   1adb4:	cmn	x11, #0x4
   1adb8:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1adbc:	ldr	x11, [x21, #288]
   1adc0:	ubfx	x13, x10, #4, #28
   1adc4:	eor	w14, w13, w10, lsr #9
   1adc8:	sub	w13, w12, #0x1
   1adcc:	and	w12, w14, w13
   1add0:	lsl	x14, x12, #4
   1add4:	ldr	x14, [x11, x14]
   1add8:	cmp	x14, x10
   1addc:	b.ne	1b5c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8a8>  // b.any
   1ade0:	add	x10, x11, x12, lsl #4
   1ade4:	ldr	w23, [x10, #12]
   1ade8:	cmp	w8, w9
   1adec:	b.cs	1b60c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8f4>  // b.hs, b.nlast
   1adf0:	ldr	x9, [x19]
   1adf4:	str	x23, [x9, w8, uxtw #3]
   1adf8:	ldp	w8, w9, [x19, #8]
   1adfc:	cmp	w8, w9
   1ae00:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1ae04:	add	w8, w8, #0x1
   1ae08:	str	w8, [x19, #8]
   1ae0c:	ldr	w10, [x22, #8]
   1ae10:	cmp	w10, #0x2
   1ae14:	b.ls	1ba78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd60>  // b.plast
   1ae18:	sub	x10, x22, x10, lsl #3
   1ae1c:	ldr	x10, [x10, #16]
   1ae20:	cbz	x10, 1ae2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x114>
   1ae24:	ldrb	w11, [x10]
   1ae28:	cbnz	w11, 1ba98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd80>
   1ae2c:	ldr	w12, [x21, #304]
   1ae30:	cbz	w12, 1b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x950>
   1ae34:	orr	x11, x10, #0x4
   1ae38:	cmn	x11, #0x4
   1ae3c:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1ae40:	ldr	x11, [x21, #288]
   1ae44:	ubfx	x13, x10, #4, #28
   1ae48:	eor	w14, w13, w10, lsr #9
   1ae4c:	sub	w13, w12, #0x1
   1ae50:	and	w12, w14, w13
   1ae54:	lsl	x14, x12, #4
   1ae58:	ldr	x14, [x11, x14]
   1ae5c:	cmp	x14, x10
   1ae60:	b.ne	1b628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x910>  // b.any
   1ae64:	add	x10, x11, x12, lsl #4
   1ae68:	ldr	w23, [x10, #12]
   1ae6c:	cmp	w8, w9
   1ae70:	b.cs	1b674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x95c>  // b.hs, b.nlast
   1ae74:	ldr	x9, [x19]
   1ae78:	str	x23, [x9, w8, uxtw #3]
   1ae7c:	ldp	w8, w9, [x19, #8]
   1ae80:	cmp	w8, w9
   1ae84:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1ae88:	add	w8, w8, #0x1
   1ae8c:	str	w8, [x19, #8]
   1ae90:	ldr	w10, [x22, #8]
   1ae94:	cmp	w10, #0x3
   1ae98:	b.ls	1ba78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd60>  // b.plast
   1ae9c:	sub	x10, x22, x10, lsl #3
   1aea0:	ldr	x10, [x10, #24]
   1aea4:	cbz	x10, 1aeb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x198>
   1aea8:	ldrb	w11, [x10]
   1aeac:	cbnz	w11, 1ba98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd80>
   1aeb0:	ldr	w12, [x21, #304]
   1aeb4:	cbz	w12, 1b6d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9b8>
   1aeb8:	orr	x11, x10, #0x4
   1aebc:	cmn	x11, #0x4
   1aec0:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1aec4:	ldr	x11, [x21, #288]
   1aec8:	ubfx	x13, x10, #4, #28
   1aecc:	eor	w14, w13, w10, lsr #9
   1aed0:	sub	w13, w12, #0x1
   1aed4:	and	w12, w14, w13
   1aed8:	lsl	x14, x12, #4
   1aedc:	ldr	x14, [x11, x14]
   1aee0:	cmp	x14, x10
   1aee4:	b.ne	1b690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x978>  // b.any
   1aee8:	add	x10, x11, x12, lsl #4
   1aeec:	ldr	w23, [x10, #12]
   1aef0:	cmp	w8, w9
   1aef4:	b.cs	1b6dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9c4>  // b.hs, b.nlast
   1aef8:	ldr	x9, [x19]
   1aefc:	str	x23, [x9, w8, uxtw #3]
   1af00:	ldp	w8, w9, [x19, #8]
   1af04:	cmp	w8, w9
   1af08:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1af0c:	add	w8, w8, #0x1
   1af10:	str	w8, [x19, #8]
   1af14:	cbz	x22, 1bad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xdc0>
   1af18:	ldrb	w10, [x22]
   1af1c:	cmp	w10, #0xf
   1af20:	b.ne	1af30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x218>  // b.any
   1af24:	mov	x10, x22
   1af28:	cbnz	x10, 1af44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x22c>
   1af2c:	b	1af50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x238>
   1af30:	ldr	w10, [x22, #8]
   1af34:	cbz	w10, 1ba78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd60>
   1af38:	sub	x10, x22, x10, lsl #3
   1af3c:	ldr	x10, [x10]
   1af40:	cbz	x10, 1af50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x238>
   1af44:	ldrb	w11, [x10]
   1af48:	cmp	w11, #0xf
   1af4c:	b.ne	1baf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xde0>  // b.any
   1af50:	ldr	w12, [x21, #304]
   1af54:	cbz	w12, 1b738 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa20>
   1af58:	orr	x11, x10, #0x4
   1af5c:	cmn	x11, #0x4
   1af60:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1af64:	ldr	x11, [x21, #288]
   1af68:	ubfx	x13, x10, #4, #28
   1af6c:	eor	w14, w13, w10, lsr #9
   1af70:	sub	w13, w12, #0x1
   1af74:	and	w12, w14, w13
   1af78:	lsl	x14, x12, #4
   1af7c:	ldr	x14, [x11, x14]
   1af80:	cmp	x14, x10
   1af84:	b.ne	1b6f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9e0>  // b.any
   1af88:	add	x10, x11, x12, lsl #4
   1af8c:	ldr	w23, [x10, #12]
   1af90:	cmp	w8, w9
   1af94:	b.cs	1b744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa2c>  // b.hs, b.nlast
   1af98:	ldr	x9, [x19]
   1af9c:	str	x23, [x9, w8, uxtw #3]
   1afa0:	ldp	w8, w9, [x19, #8]
   1afa4:	cmp	w8, w9
   1afa8:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1afac:	add	w8, w8, #0x1
   1afb0:	str	w8, [x19, #8]
   1afb4:	ldr	w23, [x22, #24]
   1afb8:	cmp	w8, w9
   1afbc:	b.cs	1b518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x800>  // b.hs, b.nlast
   1afc0:	ldr	x9, [x19]
   1afc4:	str	x23, [x9, w8, uxtw #3]
   1afc8:	ldp	w8, w9, [x19, #8]
   1afcc:	cmp	w8, w9
   1afd0:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1afd4:	add	w8, w8, #0x1
   1afd8:	str	w8, [x19, #8]
   1afdc:	ldr	w10, [x22, #8]
   1afe0:	cmp	w10, #0x4
   1afe4:	b.ls	1ba78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd60>  // b.plast
   1afe8:	sub	x10, x22, x10, lsl #3
   1afec:	ldr	x10, [x10, #32]
   1aff0:	cbz	x10, 1b000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x2e8>
   1aff4:	ldrb	w11, [x10]
   1aff8:	cmp	w11, #0xe
   1affc:	b.ne	1bb18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xe00>  // b.any
   1b000:	ldr	w12, [x21, #304]
   1b004:	cbz	w12, 1b7a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa88>
   1b008:	orr	x11, x10, #0x4
   1b00c:	cmn	x11, #0x4
   1b010:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1b014:	ldr	x11, [x21, #288]
   1b018:	ubfx	x13, x10, #4, #28
   1b01c:	eor	w14, w13, w10, lsr #9
   1b020:	sub	w13, w12, #0x1
   1b024:	and	w12, w14, w13
   1b028:	lsl	x14, x12, #4
   1b02c:	ldr	x14, [x11, x14]
   1b030:	cmp	x14, x10
   1b034:	b.ne	1b760 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa48>  // b.any
   1b038:	add	x10, x11, x12, lsl #4
   1b03c:	ldr	w23, [x10, #12]
   1b040:	cmp	w8, w9
   1b044:	b.cs	1b7ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa94>  // b.hs, b.nlast
   1b048:	ldr	x9, [x19]
   1b04c:	str	x23, [x9, w8, uxtw #3]
   1b050:	ldp	w8, w9, [x19, #8]
   1b054:	cmp	w8, w9
   1b058:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b05c:	add	w8, w8, #0x1
   1b060:	str	w8, [x19, #8]
   1b064:	ldr	w23, [x22, #28]
   1b068:	cmp	w8, w9
   1b06c:	b.cs	1b534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x81c>  // b.hs, b.nlast
   1b070:	ldr	x9, [x19]
   1b074:	str	x23, [x9, w8, uxtw #3]
   1b078:	ldp	w8, w9, [x19, #8]
   1b07c:	cmp	w8, w9
   1b080:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b084:	add	w8, w8, #0x1
   1b088:	str	w8, [x19, #8]
   1b08c:	ldr	w10, [x22, #8]
   1b090:	cmp	w10, #0x9
   1b094:	b.cc	1b0c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3a8>  // b.lo, b.ul, b.last
   1b098:	sub	x10, x22, x10, lsl #3
   1b09c:	ldr	x10, [x10, #64]
   1b0a0:	cbz	x10, 1b0b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x39c>
   1b0a4:	ldrb	w11, [x10]
   1b0a8:	sub	w11, w11, #0xb
   1b0ac:	cmp	w11, #0x4
   1b0b0:	b.cs	1bb58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xe40>  // b.hs, b.nlast
   1b0b4:	ldr	w12, [x21, #304]
   1b0b8:	cbnz	w12, 1b0cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3b4>
   1b0bc:	b	1b808 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xaf0>
   1b0c0:	mov	x10, xzr
   1b0c4:	ldr	w12, [x21, #304]
   1b0c8:	cbz	w12, 1b808 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xaf0>
   1b0cc:	orr	x11, x10, #0x4
   1b0d0:	cmn	x11, #0x4
   1b0d4:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1b0d8:	ldr	x11, [x21, #288]
   1b0dc:	ubfx	x13, x10, #4, #28
   1b0e0:	eor	w14, w13, w10, lsr #9
   1b0e4:	sub	w13, w12, #0x1
   1b0e8:	and	w12, w14, w13
   1b0ec:	lsl	x14, x12, #4
   1b0f0:	ldr	x14, [x11, x14]
   1b0f4:	cmp	x14, x10
   1b0f8:	b.ne	1b7c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xab0>  // b.any
   1b0fc:	add	x10, x11, x12, lsl #4
   1b100:	ldr	w23, [x10, #12]
   1b104:	cmp	w8, w9
   1b108:	b.cs	1b814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xafc>  // b.hs, b.nlast
   1b10c:	ldr	x9, [x19]
   1b110:	str	x23, [x9, w8, uxtw #3]
   1b114:	ldp	w8, w9, [x19, #8]
   1b118:	cmp	w8, w9
   1b11c:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b120:	add	w8, w8, #0x1
   1b124:	str	w8, [x19, #8]
   1b128:	ldr	w23, [x22, #44]
   1b12c:	cmp	w8, w9
   1b130:	b.cs	1b550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x838>  // b.hs, b.nlast
   1b134:	ldr	x9, [x19]
   1b138:	str	x23, [x9, w8, uxtw #3]
   1b13c:	ldp	w8, w9, [x19, #8]
   1b140:	cmp	w8, w9
   1b144:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b148:	add	w8, w8, #0x1
   1b14c:	str	w8, [x19, #8]
   1b150:	ldr	w23, [x22, #32]
   1b154:	cmp	w8, w9
   1b158:	b.cs	1b56c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x854>  // b.hs, b.nlast
   1b15c:	ldr	x9, [x19]
   1b160:	str	x23, [x9, w8, uxtw #3]
   1b164:	ldp	w8, w9, [x19, #8]
   1b168:	cmp	w8, w9
   1b16c:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b170:	add	w8, w8, #0x1
   1b174:	str	w8, [x19, #8]
   1b178:	ldr	w23, [x22, #40]
   1b17c:	cmp	w8, w9
   1b180:	b.cs	1b588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x870>  // b.hs, b.nlast
   1b184:	ldr	x9, [x19]
   1b188:	str	x23, [x9, w8, uxtw #3]
   1b18c:	ldp	w8, w9, [x19, #8]
   1b190:	cmp	w8, w9
   1b194:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b198:	add	w8, w8, #0x1
   1b19c:	str	w8, [x19, #8]
   1b1a0:	ldr	w10, [x22, #8]
   1b1a4:	cmp	w10, #0x5
   1b1a8:	b.ls	1ba78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd60>  // b.plast
   1b1ac:	ldr	w12, [x21, #304]
   1b1b0:	cbz	w12, 1b870 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb58>
   1b1b4:	sub	x10, x22, x10, lsl #3
   1b1b8:	ldr	x10, [x10, #40]
   1b1bc:	orr	x11, x10, #0x4
   1b1c0:	cmn	x11, #0x4
   1b1c4:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1b1c8:	ldr	x11, [x21, #288]
   1b1cc:	ubfx	x13, x10, #4, #28
   1b1d0:	eor	w14, w13, w10, lsr #9
   1b1d4:	sub	w13, w12, #0x1
   1b1d8:	and	w12, w14, w13
   1b1dc:	lsl	x14, x12, #4
   1b1e0:	ldr	x14, [x11, x14]
   1b1e4:	cmp	x14, x10
   1b1e8:	b.ne	1b830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb18>  // b.any
   1b1ec:	add	x10, x11, x12, lsl #4
   1b1f0:	ldr	w23, [x10, #12]
   1b1f4:	cmp	w8, w9
   1b1f8:	b.cs	1b87c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb64>  // b.hs, b.nlast
   1b1fc:	ldr	x9, [x19]
   1b200:	str	x23, [x9, w8, uxtw #3]
   1b204:	ldp	w8, w9, [x19, #8]
   1b208:	cmp	w8, w9
   1b20c:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b210:	add	w8, w8, #0x1
   1b214:	str	w8, [x19, #8]
   1b218:	ldr	w10, [x22, #8]
   1b21c:	cmp	w10, #0xa
   1b220:	b.cc	1b248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x530>  // b.lo, b.ul, b.last
   1b224:	sub	x10, x22, x10, lsl #3
   1b228:	ldr	x10, [x10, #72]
   1b22c:	cbz	x10, 1b23c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x524>
   1b230:	ldrb	w11, [x10]
   1b234:	cmp	w11, #0x4
   1b238:	b.ne	1bab8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xda0>  // b.any
   1b23c:	ldr	w12, [x21, #304]
   1b240:	cbnz	w12, 1b254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x53c>
   1b244:	b	1b8d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbc0>
   1b248:	mov	x10, xzr
   1b24c:	ldr	w12, [x21, #304]
   1b250:	cbz	w12, 1b8d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbc0>
   1b254:	orr	x11, x10, #0x4
   1b258:	cmn	x11, #0x4
   1b25c:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1b260:	ldr	x11, [x21, #288]
   1b264:	ubfx	x13, x10, #4, #28
   1b268:	eor	w14, w13, w10, lsr #9
   1b26c:	sub	w13, w12, #0x1
   1b270:	and	w12, w13, w14
   1b274:	lsl	x14, x12, #4
   1b278:	ldr	x14, [x11, x14]
   1b27c:	cmp	x14, x10
   1b280:	b.ne	1b898 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb80>  // b.any
   1b284:	add	x10, x11, x12, lsl #4
   1b288:	ldr	w23, [x10, #12]
   1b28c:	cmp	w8, w9
   1b290:	b.cs	1b8e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbcc>  // b.hs, b.nlast
   1b294:	ldr	x9, [x19]
   1b298:	str	x23, [x9, w8, uxtw #3]
   1b29c:	ldp	w8, w9, [x19, #8]
   1b2a0:	cmp	w8, w9
   1b2a4:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b2a8:	add	w8, w8, #0x1
   1b2ac:	str	w8, [x19, #8]
   1b2b0:	ldr	w10, [x22, #8]
   1b2b4:	cmp	w10, #0x6
   1b2b8:	b.ls	1ba78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd60>  // b.plast
   1b2bc:	sub	x10, x22, x10, lsl #3
   1b2c0:	ldr	x10, [x10, #48]
   1b2c4:	cbz	x10, 1b2d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x5bc>
   1b2c8:	ldrb	w11, [x10]
   1b2cc:	cmp	w11, #0x11
   1b2d0:	b.ne	1bb38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xe20>  // b.any
   1b2d4:	ldr	w12, [x21, #304]
   1b2d8:	cbz	w12, 1b940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc28>
   1b2dc:	orr	x11, x10, #0x4
   1b2e0:	cmn	x11, #0x4
   1b2e4:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1b2e8:	ldr	x11, [x21, #288]
   1b2ec:	ubfx	x13, x10, #4, #28
   1b2f0:	eor	w14, w13, w10, lsr #9
   1b2f4:	sub	w13, w12, #0x1
   1b2f8:	and	w12, w14, w13
   1b2fc:	lsl	x14, x12, #4
   1b300:	ldr	x14, [x11, x14]
   1b304:	cmp	x14, x10
   1b308:	b.ne	1b900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbe8>  // b.any
   1b30c:	add	x10, x11, x12, lsl #4
   1b310:	ldr	w23, [x10, #12]
   1b314:	cmp	w8, w9
   1b318:	b.cs	1b94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc34>  // b.hs, b.nlast
   1b31c:	ldr	x9, [x19]
   1b320:	str	x23, [x9, w8, uxtw #3]
   1b324:	ldp	w8, w9, [x19, #8]
   1b328:	cmp	w8, w9
   1b32c:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b330:	add	w8, w8, #0x1
   1b334:	str	w8, [x19, #8]
   1b338:	ldr	w10, [x22, #8]
   1b33c:	cmp	w10, #0x7
   1b340:	b.ls	1ba78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd60>  // b.plast
   1b344:	sub	x10, x22, x10, lsl #3
   1b348:	ldr	x10, [x10, #56]
   1b34c:	cbz	x10, 1b35c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x644>
   1b350:	ldrb	w11, [x10]
   1b354:	cmp	w11, #0x4
   1b358:	b.ne	1bab8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xda0>  // b.any
   1b35c:	ldr	w12, [x21, #304]
   1b360:	cbz	w12, 1b9a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>
   1b364:	orr	x11, x10, #0x4
   1b368:	cmn	x11, #0x4
   1b36c:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1b370:	ldr	x11, [x21, #288]
   1b374:	ubfx	x13, x10, #4, #28
   1b378:	eor	w14, w13, w10, lsr #9
   1b37c:	sub	w13, w12, #0x1
   1b380:	and	w12, w14, w13
   1b384:	lsl	x14, x12, #4
   1b388:	ldr	x14, [x11, x14]
   1b38c:	cmp	x14, x10
   1b390:	b.ne	1b968 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc50>  // b.any
   1b394:	add	x10, x11, x12, lsl #4
   1b398:	ldr	w23, [x10, #12]
   1b39c:	cmp	w8, w9
   1b3a0:	b.cs	1b9b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc9c>  // b.hs, b.nlast
   1b3a4:	ldr	x9, [x19]
   1b3a8:	str	x23, [x9, w8, uxtw #3]
   1b3ac:	ldp	w8, w9, [x19, #8]
   1b3b0:	cmp	w8, w9
   1b3b4:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b3b8:	add	w8, w8, #0x1
   1b3bc:	str	w8, [x19, #8]
   1b3c0:	ldrsw	x23, [x22, #36]
   1b3c4:	cmp	w8, w9
   1b3c8:	b.cs	1b5a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x88c>  // b.hs, b.nlast
   1b3cc:	ldr	x9, [x19]
   1b3d0:	str	x23, [x9, w8, uxtw #3]
   1b3d4:	ldp	w8, w9, [x19, #8]
   1b3d8:	cmp	w8, w9
   1b3dc:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b3e0:	add	w8, w8, #0x1
   1b3e4:	str	w8, [x19, #8]
   1b3e8:	ldr	w10, [x22, #8]
   1b3ec:	cmp	w10, #0xb
   1b3f0:	b.cc	1b418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x700>  // b.lo, b.ul, b.last
   1b3f4:	sub	x10, x22, x10, lsl #3
   1b3f8:	ldr	x10, [x10, #80]
   1b3fc:	cbz	x10, 1b40c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x6f4>
   1b400:	ldrb	w11, [x10]
   1b404:	cmp	w11, #0x4
   1b408:	b.ne	1bab8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xda0>  // b.any
   1b40c:	ldr	w12, [x21, #304]
   1b410:	cbnz	w12, 1b424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x70c>
   1b414:	b	1ba10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcf8>
   1b418:	mov	x10, xzr
   1b41c:	ldr	w12, [x21, #304]
   1b420:	cbz	w12, 1ba10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcf8>
   1b424:	orr	x11, x10, #0x4
   1b428:	cmn	x11, #0x4
   1b42c:	b.eq	1ba58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd40>  // b.none
   1b430:	ldr	x11, [x21, #288]
   1b434:	ubfx	x13, x10, #4, #28
   1b438:	eor	w14, w13, w10, lsr #9
   1b43c:	sub	w13, w12, #0x1
   1b440:	and	w12, w14, w13
   1b444:	lsl	x14, x12, #4
   1b448:	ldr	x14, [x11, x14]
   1b44c:	cmp	x14, x10
   1b450:	b.ne	1b9d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcb8>  // b.any
   1b454:	add	x10, x11, x12, lsl #4
   1b458:	ldr	w22, [x10, #12]
   1b45c:	cmp	w8, w9
   1b460:	b.cs	1ba1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd04>  // b.hs, b.nlast
   1b464:	ldr	x9, [x19]
   1b468:	str	x22, [x9, w8, uxtw #3]
   1b46c:	ldp	w8, w9, [x19, #8]
   1b470:	cmp	w8, w9
   1b474:	b.cs	1ba38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd20>  // b.hs, b.nlast
   1b478:	add	w8, w8, #0x1
   1b47c:	str	w8, [x19, #8]
   1b480:	ldr	x0, [x21]
   1b484:	mov	w1, #0x15                  	// #21
   1b488:	mov	x2, x19
   1b48c:	mov	w3, w20
   1b490:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b494:	str	wzr, [x19, #8]
   1b498:	ldp	x20, x19, [sp, #48]
   1b49c:	ldp	x22, x21, [sp, #32]
   1b4a0:	ldr	x23, [sp, #16]
   1b4a4:	ldp	x29, x30, [sp], #64
   1b4a8:	ret
   1b4ac:	cmp	w11, #0x1f
   1b4b0:	b.eq	1ada0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x88>  // b.none
   1b4b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b4b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b4bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b4c0:	add	x0, x0, #0x0
   1b4c4:	add	x1, x1, #0x0
   1b4c8:	add	x3, x3, #0x0
   1b4cc:	mov	w2, #0x134                 	// #308
   1b4d0:	bl	0 <__assert_fail>
   1b4d4:	cmp	w11, #0x1f
   1b4d8:	b.eq	1ada8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x90>  // b.none
   1b4dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b4e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b4e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b4e8:	add	x0, x0, #0x0
   1b4ec:	add	x1, x1, #0x0
   1b4f0:	add	x3, x3, #0x0
   1b4f4:	mov	w2, #0x108                 	// #264
   1b4f8:	bl	0 <__assert_fail>
   1b4fc:	add	x1, x19, #0x10
   1b500:	mov	w3, #0x8                   	// #8
   1b504:	mov	x0, x19
   1b508:	mov	x2, xzr
   1b50c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b510:	ldr	w8, [x19, #8]
   1b514:	b	1ad5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x44>
   1b518:	add	x1, x19, #0x10
   1b51c:	mov	w3, #0x8                   	// #8
   1b520:	mov	x0, x19
   1b524:	mov	x2, xzr
   1b528:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b52c:	ldr	w8, [x19, #8]
   1b530:	b	1afc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x2a8>
   1b534:	add	x1, x19, #0x10
   1b538:	mov	w3, #0x8                   	// #8
   1b53c:	mov	x0, x19
   1b540:	mov	x2, xzr
   1b544:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b548:	ldr	w8, [x19, #8]
   1b54c:	b	1b070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x358>
   1b550:	add	x1, x19, #0x10
   1b554:	mov	w3, #0x8                   	// #8
   1b558:	mov	x0, x19
   1b55c:	mov	x2, xzr
   1b560:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b564:	ldr	w8, [x19, #8]
   1b568:	b	1b134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x41c>
   1b56c:	add	x1, x19, #0x10
   1b570:	mov	w3, #0x8                   	// #8
   1b574:	mov	x0, x19
   1b578:	mov	x2, xzr
   1b57c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b580:	ldr	w8, [x19, #8]
   1b584:	b	1b15c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x444>
   1b588:	add	x1, x19, #0x10
   1b58c:	mov	w3, #0x8                   	// #8
   1b590:	mov	x0, x19
   1b594:	mov	x2, xzr
   1b598:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b59c:	ldr	w8, [x19, #8]
   1b5a0:	b	1b184 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x46c>
   1b5a4:	add	x1, x19, #0x10
   1b5a8:	mov	w3, #0x8                   	// #8
   1b5ac:	mov	x0, x19
   1b5b0:	mov	x2, xzr
   1b5b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b5b8:	ldr	w8, [x19, #8]
   1b5bc:	b	1b3cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x6b4>
   1b5c0:	mov	w15, #0x1                   	// #1
   1b5c4:	cmn	x14, #0x4
   1b5c8:	b.eq	1b600 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8e8>  // b.none
   1b5cc:	add	w12, w12, w15
   1b5d0:	and	w12, w12, w13
   1b5d4:	lsl	x14, x12, #4
   1b5d8:	ldr	x14, [x11, x14]
   1b5dc:	add	w15, w15, #0x1
   1b5e0:	cmp	x14, x10
   1b5e4:	b.ne	1b5c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8ac>  // b.any
   1b5e8:	mov	w12, w12
   1b5ec:	add	x10, x11, x12, lsl #4
   1b5f0:	ldr	w23, [x10, #12]
   1b5f4:	cmp	w8, w9
   1b5f8:	b.cc	1adf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd8>  // b.lo, b.ul, b.last
   1b5fc:	b	1b60c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8f4>
   1b600:	mov	x23, xzr
   1b604:	cmp	w8, w9
   1b608:	b.cc	1adf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd8>  // b.lo, b.ul, b.last
   1b60c:	add	x1, x19, #0x10
   1b610:	mov	w3, #0x8                   	// #8
   1b614:	mov	x0, x19
   1b618:	mov	x2, xzr
   1b61c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b620:	ldr	w8, [x19, #8]
   1b624:	b	1adf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd8>
   1b628:	mov	w15, #0x1                   	// #1
   1b62c:	cmn	x14, #0x4
   1b630:	b.eq	1b668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x950>  // b.none
   1b634:	add	w12, w12, w15
   1b638:	and	w12, w12, w13
   1b63c:	lsl	x14, x12, #4
   1b640:	ldr	x14, [x11, x14]
   1b644:	add	w15, w15, #0x1
   1b648:	cmp	x14, x10
   1b64c:	b.ne	1b62c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x914>  // b.any
   1b650:	mov	w12, w12
   1b654:	add	x10, x11, x12, lsl #4
   1b658:	ldr	w23, [x10, #12]
   1b65c:	cmp	w8, w9
   1b660:	b.cc	1ae74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x15c>  // b.lo, b.ul, b.last
   1b664:	b	1b674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x95c>
   1b668:	mov	x23, xzr
   1b66c:	cmp	w8, w9
   1b670:	b.cc	1ae74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x15c>  // b.lo, b.ul, b.last
   1b674:	add	x1, x19, #0x10
   1b678:	mov	w3, #0x8                   	// #8
   1b67c:	mov	x0, x19
   1b680:	mov	x2, xzr
   1b684:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b688:	ldr	w8, [x19, #8]
   1b68c:	b	1ae74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x15c>
   1b690:	mov	w15, #0x1                   	// #1
   1b694:	cmn	x14, #0x4
   1b698:	b.eq	1b6d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9b8>  // b.none
   1b69c:	add	w12, w12, w15
   1b6a0:	and	w12, w12, w13
   1b6a4:	lsl	x14, x12, #4
   1b6a8:	ldr	x14, [x11, x14]
   1b6ac:	add	w15, w15, #0x1
   1b6b0:	cmp	x14, x10
   1b6b4:	b.ne	1b694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x97c>  // b.any
   1b6b8:	mov	w12, w12
   1b6bc:	add	x10, x11, x12, lsl #4
   1b6c0:	ldr	w23, [x10, #12]
   1b6c4:	cmp	w8, w9
   1b6c8:	b.cc	1aef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x1e0>  // b.lo, b.ul, b.last
   1b6cc:	b	1b6dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9c4>
   1b6d0:	mov	x23, xzr
   1b6d4:	cmp	w8, w9
   1b6d8:	b.cc	1aef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x1e0>  // b.lo, b.ul, b.last
   1b6dc:	add	x1, x19, #0x10
   1b6e0:	mov	w3, #0x8                   	// #8
   1b6e4:	mov	x0, x19
   1b6e8:	mov	x2, xzr
   1b6ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b6f0:	ldr	w8, [x19, #8]
   1b6f4:	b	1aef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x1e0>
   1b6f8:	mov	w15, #0x1                   	// #1
   1b6fc:	cmn	x14, #0x4
   1b700:	b.eq	1b738 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa20>  // b.none
   1b704:	add	w12, w12, w15
   1b708:	and	w12, w12, w13
   1b70c:	lsl	x14, x12, #4
   1b710:	ldr	x14, [x11, x14]
   1b714:	add	w15, w15, #0x1
   1b718:	cmp	x14, x10
   1b71c:	b.ne	1b6fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9e4>  // b.any
   1b720:	mov	w12, w12
   1b724:	add	x10, x11, x12, lsl #4
   1b728:	ldr	w23, [x10, #12]
   1b72c:	cmp	w8, w9
   1b730:	b.cc	1af98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x280>  // b.lo, b.ul, b.last
   1b734:	b	1b744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa2c>
   1b738:	mov	x23, xzr
   1b73c:	cmp	w8, w9
   1b740:	b.cc	1af98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x280>  // b.lo, b.ul, b.last
   1b744:	add	x1, x19, #0x10
   1b748:	mov	w3, #0x8                   	// #8
   1b74c:	mov	x0, x19
   1b750:	mov	x2, xzr
   1b754:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b758:	ldr	w8, [x19, #8]
   1b75c:	b	1af98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x280>
   1b760:	mov	w15, #0x1                   	// #1
   1b764:	cmn	x14, #0x4
   1b768:	b.eq	1b7a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa88>  // b.none
   1b76c:	add	w12, w12, w15
   1b770:	and	w12, w12, w13
   1b774:	lsl	x14, x12, #4
   1b778:	ldr	x14, [x11, x14]
   1b77c:	add	w15, w15, #0x1
   1b780:	cmp	x14, x10
   1b784:	b.ne	1b764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa4c>  // b.any
   1b788:	mov	w12, w12
   1b78c:	add	x10, x11, x12, lsl #4
   1b790:	ldr	w23, [x10, #12]
   1b794:	cmp	w8, w9
   1b798:	b.cc	1b048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x330>  // b.lo, b.ul, b.last
   1b79c:	b	1b7ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa94>
   1b7a0:	mov	x23, xzr
   1b7a4:	cmp	w8, w9
   1b7a8:	b.cc	1b048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x330>  // b.lo, b.ul, b.last
   1b7ac:	add	x1, x19, #0x10
   1b7b0:	mov	w3, #0x8                   	// #8
   1b7b4:	mov	x0, x19
   1b7b8:	mov	x2, xzr
   1b7bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b7c0:	ldr	w8, [x19, #8]
   1b7c4:	b	1b048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x330>
   1b7c8:	mov	w15, #0x1                   	// #1
   1b7cc:	cmn	x14, #0x4
   1b7d0:	b.eq	1b808 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xaf0>  // b.none
   1b7d4:	add	w12, w12, w15
   1b7d8:	and	w12, w12, w13
   1b7dc:	lsl	x14, x12, #4
   1b7e0:	ldr	x14, [x11, x14]
   1b7e4:	add	w15, w15, #0x1
   1b7e8:	cmp	x14, x10
   1b7ec:	b.ne	1b7cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xab4>  // b.any
   1b7f0:	mov	w12, w12
   1b7f4:	add	x10, x11, x12, lsl #4
   1b7f8:	ldr	w23, [x10, #12]
   1b7fc:	cmp	w8, w9
   1b800:	b.cc	1b10c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3f4>  // b.lo, b.ul, b.last
   1b804:	b	1b814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xafc>
   1b808:	mov	x23, xzr
   1b80c:	cmp	w8, w9
   1b810:	b.cc	1b10c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3f4>  // b.lo, b.ul, b.last
   1b814:	add	x1, x19, #0x10
   1b818:	mov	w3, #0x8                   	// #8
   1b81c:	mov	x0, x19
   1b820:	mov	x2, xzr
   1b824:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b828:	ldr	w8, [x19, #8]
   1b82c:	b	1b10c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3f4>
   1b830:	mov	w15, #0x1                   	// #1
   1b834:	cmn	x14, #0x4
   1b838:	b.eq	1b870 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb58>  // b.none
   1b83c:	add	w12, w12, w15
   1b840:	and	w12, w12, w13
   1b844:	lsl	x14, x12, #4
   1b848:	ldr	x14, [x11, x14]
   1b84c:	add	w15, w15, #0x1
   1b850:	cmp	x14, x10
   1b854:	b.ne	1b834 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb1c>  // b.any
   1b858:	mov	w12, w12
   1b85c:	add	x10, x11, x12, lsl #4
   1b860:	ldr	w23, [x10, #12]
   1b864:	cmp	w8, w9
   1b868:	b.cc	1b1fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x4e4>  // b.lo, b.ul, b.last
   1b86c:	b	1b87c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb64>
   1b870:	mov	x23, xzr
   1b874:	cmp	w8, w9
   1b878:	b.cc	1b1fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x4e4>  // b.lo, b.ul, b.last
   1b87c:	add	x1, x19, #0x10
   1b880:	mov	w3, #0x8                   	// #8
   1b884:	mov	x0, x19
   1b888:	mov	x2, xzr
   1b88c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b890:	ldr	w8, [x19, #8]
   1b894:	b	1b1fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x4e4>
   1b898:	mov	w15, #0x1                   	// #1
   1b89c:	cmn	x14, #0x4
   1b8a0:	b.eq	1b8d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbc0>  // b.none
   1b8a4:	add	w12, w12, w15
   1b8a8:	and	w12, w12, w13
   1b8ac:	lsl	x14, x12, #4
   1b8b0:	ldr	x14, [x11, x14]
   1b8b4:	add	w15, w15, #0x1
   1b8b8:	cmp	x14, x10
   1b8bc:	b.ne	1b89c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb84>  // b.any
   1b8c0:	mov	w12, w12
   1b8c4:	add	x10, x11, x12, lsl #4
   1b8c8:	ldr	w23, [x10, #12]
   1b8cc:	cmp	w8, w9
   1b8d0:	b.cc	1b294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x57c>  // b.lo, b.ul, b.last
   1b8d4:	b	1b8e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbcc>
   1b8d8:	mov	x23, xzr
   1b8dc:	cmp	w8, w9
   1b8e0:	b.cc	1b294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x57c>  // b.lo, b.ul, b.last
   1b8e4:	add	x1, x19, #0x10
   1b8e8:	mov	w3, #0x8                   	// #8
   1b8ec:	mov	x0, x19
   1b8f0:	mov	x2, xzr
   1b8f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b8f8:	ldr	w8, [x19, #8]
   1b8fc:	b	1b294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x57c>
   1b900:	mov	w15, #0x1                   	// #1
   1b904:	cmn	x14, #0x4
   1b908:	b.eq	1b940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc28>  // b.none
   1b90c:	add	w12, w12, w15
   1b910:	and	w12, w12, w13
   1b914:	lsl	x14, x12, #4
   1b918:	ldr	x14, [x11, x14]
   1b91c:	add	w15, w15, #0x1
   1b920:	cmp	x14, x10
   1b924:	b.ne	1b904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbec>  // b.any
   1b928:	mov	w12, w12
   1b92c:	add	x10, x11, x12, lsl #4
   1b930:	ldr	w23, [x10, #12]
   1b934:	cmp	w8, w9
   1b938:	b.cc	1b31c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x604>  // b.lo, b.ul, b.last
   1b93c:	b	1b94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc34>
   1b940:	mov	x23, xzr
   1b944:	cmp	w8, w9
   1b948:	b.cc	1b31c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x604>  // b.lo, b.ul, b.last
   1b94c:	add	x1, x19, #0x10
   1b950:	mov	w3, #0x8                   	// #8
   1b954:	mov	x0, x19
   1b958:	mov	x2, xzr
   1b95c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b960:	ldr	w8, [x19, #8]
   1b964:	b	1b31c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x604>
   1b968:	mov	w15, #0x1                   	// #1
   1b96c:	cmn	x14, #0x4
   1b970:	b.eq	1b9a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   1b974:	add	w12, w12, w15
   1b978:	and	w12, w12, w13
   1b97c:	lsl	x14, x12, #4
   1b980:	ldr	x14, [x11, x14]
   1b984:	add	w15, w15, #0x1
   1b988:	cmp	x14, x10
   1b98c:	b.ne	1b96c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc54>  // b.any
   1b990:	mov	w12, w12
   1b994:	add	x10, x11, x12, lsl #4
   1b998:	ldr	w23, [x10, #12]
   1b99c:	cmp	w8, w9
   1b9a0:	b.cc	1b3a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x68c>  // b.lo, b.ul, b.last
   1b9a4:	b	1b9b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc9c>
   1b9a8:	mov	x23, xzr
   1b9ac:	cmp	w8, w9
   1b9b0:	b.cc	1b3a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x68c>  // b.lo, b.ul, b.last
   1b9b4:	add	x1, x19, #0x10
   1b9b8:	mov	w3, #0x8                   	// #8
   1b9bc:	mov	x0, x19
   1b9c0:	mov	x2, xzr
   1b9c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b9c8:	ldr	w8, [x19, #8]
   1b9cc:	b	1b3a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x68c>
   1b9d0:	mov	w15, #0x1                   	// #1
   1b9d4:	cmn	x14, #0x4
   1b9d8:	b.eq	1ba10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcf8>  // b.none
   1b9dc:	add	w12, w12, w15
   1b9e0:	and	w12, w12, w13
   1b9e4:	lsl	x14, x12, #4
   1b9e8:	ldr	x14, [x11, x14]
   1b9ec:	add	w15, w15, #0x1
   1b9f0:	cmp	x14, x10
   1b9f4:	b.ne	1b9d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcbc>  // b.any
   1b9f8:	mov	w12, w12
   1b9fc:	add	x10, x11, x12, lsl #4
   1ba00:	ldr	w22, [x10, #12]
   1ba04:	cmp	w8, w9
   1ba08:	b.cc	1b464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x74c>  // b.lo, b.ul, b.last
   1ba0c:	b	1ba1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd04>
   1ba10:	mov	x22, xzr
   1ba14:	cmp	w8, w9
   1ba18:	b.cc	1b464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x74c>  // b.lo, b.ul, b.last
   1ba1c:	add	x1, x19, #0x10
   1ba20:	mov	w3, #0x8                   	// #8
   1ba24:	mov	x0, x19
   1ba28:	mov	x2, xzr
   1ba2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ba30:	ldr	w8, [x19, #8]
   1ba34:	b	1b464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x74c>
   1ba38:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba3c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba40:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba44:	add	x0, x0, #0x0
   1ba48:	add	x1, x1, #0x0
   1ba4c:	add	x3, x3, #0x0
   1ba50:	mov	w2, #0x43                  	// #67
   1ba54:	bl	0 <__assert_fail>
   1ba58:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba5c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba60:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba64:	add	x0, x0, #0x0
   1ba68:	add	x1, x1, #0x0
   1ba6c:	add	x3, x3, #0x0
   1ba70:	mov	w2, #0x252                 	// #594
   1ba74:	bl	0 <__assert_fail>
   1ba78:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba7c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba80:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba84:	add	x0, x0, #0x0
   1ba88:	add	x1, x1, #0x0
   1ba8c:	add	x3, x3, #0x0
   1ba90:	mov	w2, #0x436                 	// #1078
   1ba94:	bl	0 <__assert_fail>
   1ba98:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ba9c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1baa0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1baa4:	add	x0, x0, #0x0
   1baa8:	add	x1, x1, #0x0
   1baac:	add	x3, x3, #0x0
   1bab0:	mov	w2, #0x121                 	// #289
   1bab4:	bl	0 <__assert_fail>
   1bab8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1babc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bac0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bac4:	add	x0, x0, #0x0
   1bac8:	add	x1, x1, #0x0
   1bacc:	add	x3, x3, #0x0
   1bad0:	mov	w2, #0x134                 	// #308
   1bad4:	bl	0 <__assert_fail>
   1bad8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1badc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bae0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bae4:	add	x0, x0, #0x0
   1bae8:	add	x1, x1, #0x0
   1baec:	add	x3, x3, #0x0
   1baf0:	mov	w2, #0x69                  	// #105
   1baf4:	bl	0 <__assert_fail>
   1baf8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bafc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb00:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb04:	add	x0, x0, #0x0
   1bb08:	add	x1, x1, #0x0
   1bb0c:	add	x3, x3, #0x0
   1bb10:	mov	w2, #0x134                 	// #308
   1bb14:	bl	0 <__assert_fail>
   1bb18:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb1c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb20:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb24:	add	x0, x0, #0x0
   1bb28:	add	x1, x1, #0x0
   1bb2c:	add	x3, x3, #0x0
   1bb30:	mov	w2, #0x134                 	// #308
   1bb34:	bl	0 <__assert_fail>
   1bb38:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb3c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb40:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb44:	add	x0, x0, #0x0
   1bb48:	add	x1, x1, #0x0
   1bb4c:	add	x3, x3, #0x0
   1bb50:	mov	w2, #0x134                 	// #308
   1bb54:	bl	0 <__assert_fail>
   1bb58:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb5c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb60:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bb64:	add	x0, x0, #0x0
   1bb68:	add	x1, x1, #0x0
   1bb6c:	add	x3, x3, #0x0
   1bb70:	mov	w2, #0x134                 	// #308
   1bb74:	bl	0 <__assert_fail>

000000000001bb78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj>:
   1bb78:	stp	x29, x30, [sp, #-64]!
   1bb7c:	str	x23, [sp, #16]
   1bb80:	stp	x22, x21, [sp, #32]
   1bb84:	stp	x20, x19, [sp, #48]
   1bb88:	mov	x29, sp
   1bb8c:	ldrb	w9, [x1, #1]
   1bb90:	ldp	w8, w10, [x2, #8]
   1bb94:	mov	w20, w3
   1bb98:	mov	x19, x2
   1bb9c:	and	w9, w9, #0x7f
   1bba0:	cmp	w9, #0x1
   1bba4:	mov	x22, x1
   1bba8:	cset	w23, eq  // eq = none
   1bbac:	cmp	w8, w10
   1bbb0:	mov	x21, x0
   1bbb4:	b.cs	1bd7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x204>  // b.hs, b.nlast
   1bbb8:	ldr	x9, [x19]
   1bbbc:	str	x23, [x9, w8, uxtw #3]
   1bbc0:	ldp	w8, w9, [x19, #8]
   1bbc4:	cmp	w8, w9
   1bbc8:	b.cs	1bea0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x328>  // b.hs, b.nlast
   1bbcc:	add	w8, w8, #0x1
   1bbd0:	str	w8, [x19, #8]
   1bbd4:	ldr	w10, [x22, #8]
   1bbd8:	cmp	w10, #0x1
   1bbdc:	b.ls	1bee0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x368>  // b.plast
   1bbe0:	sub	x10, x22, x10, lsl #3
   1bbe4:	ldr	x10, [x10, #8]
   1bbe8:	cbz	x10, 1bf00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x388>
   1bbec:	ldrb	w11, [x10]
   1bbf0:	sub	w11, w11, #0x11
   1bbf4:	cmp	w11, #0x3
   1bbf8:	b.cs	1bf20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x3a8>  // b.hs, b.nlast
   1bbfc:	ldr	w12, [x21, #304]
   1bc00:	cbz	w12, 1be10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x298>
   1bc04:	orr	x11, x10, #0x4
   1bc08:	cmn	x11, #0x4
   1bc0c:	b.eq	1bec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x348>  // b.none
   1bc10:	ldr	x11, [x21, #288]
   1bc14:	ubfx	x13, x10, #4, #28
   1bc18:	eor	w14, w13, w10, lsr #9
   1bc1c:	sub	w13, w12, #0x1
   1bc20:	and	w12, w13, w14
   1bc24:	lsl	x14, x12, #4
   1bc28:	ldr	x14, [x11, x14]
   1bc2c:	cmp	x14, x10
   1bc30:	b.ne	1bdd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x258>  // b.any
   1bc34:	add	x10, x11, x12, lsl #4
   1bc38:	ldr	w23, [x10, #12]
   1bc3c:	cmp	w8, w9
   1bc40:	b.cs	1be1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x2a4>  // b.hs, b.nlast
   1bc44:	ldr	x9, [x19]
   1bc48:	str	x23, [x9, w8, uxtw #3]
   1bc4c:	ldp	w8, w9, [x19, #8]
   1bc50:	cmp	w8, w9
   1bc54:	b.cs	1bea0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x328>  // b.hs, b.nlast
   1bc58:	add	w8, w8, #0x1
   1bc5c:	str	w8, [x19, #8]
   1bc60:	cbz	x22, 1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x3c8>
   1bc64:	ldrb	w10, [x22]
   1bc68:	cmp	w10, #0xf
   1bc6c:	b.ne	1bc7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x104>  // b.any
   1bc70:	mov	x10, x22
   1bc74:	cbnz	x10, 1bc90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x118>
   1bc78:	b	1bc9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x124>
   1bc7c:	ldr	w10, [x22, #8]
   1bc80:	cbz	w10, 1bee0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x368>
   1bc84:	sub	x10, x22, x10, lsl #3
   1bc88:	ldr	x10, [x10]
   1bc8c:	cbz	x10, 1bc9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x124>
   1bc90:	ldrb	w11, [x10]
   1bc94:	cmp	w11, #0xf
   1bc98:	b.ne	1bf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x3e8>  // b.any
   1bc9c:	ldr	w12, [x21, #304]
   1bca0:	cbz	w12, 1be78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x300>
   1bca4:	orr	x11, x10, #0x4
   1bca8:	cmn	x11, #0x4
   1bcac:	b.eq	1bec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x348>  // b.none
   1bcb0:	ldr	x11, [x21, #288]
   1bcb4:	ubfx	x13, x10, #4, #28
   1bcb8:	eor	w14, w13, w10, lsr #9
   1bcbc:	sub	w13, w12, #0x1
   1bcc0:	and	w12, w14, w13
   1bcc4:	lsl	x14, x12, #4
   1bcc8:	ldr	x14, [x11, x14]
   1bccc:	cmp	x14, x10
   1bcd0:	b.ne	1be38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x2c0>  // b.any
   1bcd4:	add	x10, x11, x12, lsl #4
   1bcd8:	ldr	w23, [x10, #12]
   1bcdc:	cmp	w8, w9
   1bce0:	b.cs	1be84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x30c>  // b.hs, b.nlast
   1bce4:	ldr	x9, [x19]
   1bce8:	str	x23, [x9, w8, uxtw #3]
   1bcec:	ldp	w8, w9, [x19, #8]
   1bcf0:	cmp	w8, w9
   1bcf4:	b.cs	1bea0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x328>  // b.hs, b.nlast
   1bcf8:	add	w8, w8, #0x1
   1bcfc:	str	w8, [x19, #8]
   1bd00:	ldr	w23, [x22, #24]
   1bd04:	cmp	w8, w9
   1bd08:	b.cs	1bd98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x220>  // b.hs, b.nlast
   1bd0c:	ldr	x9, [x19]
   1bd10:	str	x23, [x9, w8, uxtw #3]
   1bd14:	ldp	w8, w9, [x19, #8]
   1bd18:	cmp	w8, w9
   1bd1c:	b.cs	1bea0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x328>  // b.hs, b.nlast
   1bd20:	add	w8, w8, #0x1
   1bd24:	str	w8, [x19, #8]
   1bd28:	ldrh	w22, [x22, #28]
   1bd2c:	cmp	w8, w9
   1bd30:	b.cs	1bdb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x23c>  // b.hs, b.nlast
   1bd34:	ldr	x9, [x19]
   1bd38:	str	x22, [x9, w8, uxtw #3]
   1bd3c:	ldp	w8, w9, [x19, #8]
   1bd40:	cmp	w8, w9
   1bd44:	b.cs	1bea0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x328>  // b.hs, b.nlast
   1bd48:	add	w8, w8, #0x1
   1bd4c:	str	w8, [x19, #8]
   1bd50:	ldr	x0, [x21]
   1bd54:	mov	w1, #0x16                  	// #22
   1bd58:	mov	x2, x19
   1bd5c:	mov	w3, w20
   1bd60:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bd64:	str	wzr, [x19, #8]
   1bd68:	ldp	x20, x19, [sp, #48]
   1bd6c:	ldp	x22, x21, [sp, #32]
   1bd70:	ldr	x23, [sp, #16]
   1bd74:	ldp	x29, x30, [sp], #64
   1bd78:	ret
   1bd7c:	add	x1, x19, #0x10
   1bd80:	mov	w3, #0x8                   	// #8
   1bd84:	mov	x0, x19
   1bd88:	mov	x2, xzr
   1bd8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bd90:	ldr	w8, [x19, #8]
   1bd94:	b	1bbb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x40>
   1bd98:	add	x1, x19, #0x10
   1bd9c:	mov	w3, #0x8                   	// #8
   1bda0:	mov	x0, x19
   1bda4:	mov	x2, xzr
   1bda8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bdac:	ldr	w8, [x19, #8]
   1bdb0:	b	1bd0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x194>
   1bdb4:	add	x1, x19, #0x10
   1bdb8:	mov	w3, #0x8                   	// #8
   1bdbc:	mov	x0, x19
   1bdc0:	mov	x2, xzr
   1bdc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bdc8:	ldr	w8, [x19, #8]
   1bdcc:	b	1bd34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x1bc>
   1bdd0:	mov	w15, #0x1                   	// #1
   1bdd4:	cmn	x14, #0x4
   1bdd8:	b.eq	1be10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x298>  // b.none
   1bddc:	add	w12, w12, w15
   1bde0:	and	w12, w12, w13
   1bde4:	lsl	x14, x12, #4
   1bde8:	ldr	x14, [x11, x14]
   1bdec:	add	w15, w15, #0x1
   1bdf0:	cmp	x14, x10
   1bdf4:	b.ne	1bdd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x25c>  // b.any
   1bdf8:	mov	w12, w12
   1bdfc:	add	x10, x11, x12, lsl #4
   1be00:	ldr	w23, [x10, #12]
   1be04:	cmp	w8, w9
   1be08:	b.cc	1bc44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0xcc>  // b.lo, b.ul, b.last
   1be0c:	b	1be1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x2a4>
   1be10:	mov	x23, xzr
   1be14:	cmp	w8, w9
   1be18:	b.cc	1bc44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0xcc>  // b.lo, b.ul, b.last
   1be1c:	add	x1, x19, #0x10
   1be20:	mov	w3, #0x8                   	// #8
   1be24:	mov	x0, x19
   1be28:	mov	x2, xzr
   1be2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1be30:	ldr	w8, [x19, #8]
   1be34:	b	1bc44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0xcc>
   1be38:	mov	w15, #0x1                   	// #1
   1be3c:	cmn	x14, #0x4
   1be40:	b.eq	1be78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x300>  // b.none
   1be44:	add	w12, w12, w15
   1be48:	and	w12, w12, w13
   1be4c:	lsl	x14, x12, #4
   1be50:	ldr	x14, [x11, x14]
   1be54:	add	w15, w15, #0x1
   1be58:	cmp	x14, x10
   1be5c:	b.ne	1be3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x2c4>  // b.any
   1be60:	mov	w12, w12
   1be64:	add	x10, x11, x12, lsl #4
   1be68:	ldr	w23, [x10, #12]
   1be6c:	cmp	w8, w9
   1be70:	b.cc	1bce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x16c>  // b.lo, b.ul, b.last
   1be74:	b	1be84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x30c>
   1be78:	mov	x23, xzr
   1be7c:	cmp	w8, w9
   1be80:	b.cc	1bce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x16c>  // b.lo, b.ul, b.last
   1be84:	add	x1, x19, #0x10
   1be88:	mov	w3, #0x8                   	// #8
   1be8c:	mov	x0, x19
   1be90:	mov	x2, xzr
   1be94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1be98:	ldr	w8, [x19, #8]
   1be9c:	b	1bce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x16c>
   1bea0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bea4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bea8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1beac:	add	x0, x0, #0x0
   1beb0:	add	x1, x1, #0x0
   1beb4:	add	x3, x3, #0x0
   1beb8:	mov	w2, #0x43                  	// #67
   1bebc:	bl	0 <__assert_fail>
   1bec0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bec4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bec8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1becc:	add	x0, x0, #0x0
   1bed0:	add	x1, x1, #0x0
   1bed4:	add	x3, x3, #0x0
   1bed8:	mov	w2, #0x252                 	// #594
   1bedc:	bl	0 <__assert_fail>
   1bee0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bee4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bee8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1beec:	add	x0, x0, #0x0
   1bef0:	add	x1, x1, #0x0
   1bef4:	add	x3, x3, #0x0
   1bef8:	mov	w2, #0x436                 	// #1078
   1befc:	bl	0 <__assert_fail>
   1bf00:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf04:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf08:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf0c:	add	x0, x0, #0x0
   1bf10:	add	x1, x1, #0x0
   1bf14:	add	x3, x3, #0x0
   1bf18:	mov	w2, #0x69                  	// #105
   1bf1c:	bl	0 <__assert_fail>
   1bf20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf28:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf2c:	add	x0, x0, #0x0
   1bf30:	add	x1, x1, #0x0
   1bf34:	add	x3, x3, #0x0
   1bf38:	mov	w2, #0x108                 	// #264
   1bf3c:	bl	0 <__assert_fail>
   1bf40:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf44:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf48:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf4c:	add	x0, x0, #0x0
   1bf50:	add	x1, x1, #0x0
   1bf54:	add	x3, x3, #0x0
   1bf58:	mov	w2, #0x69                  	// #105
   1bf5c:	bl	0 <__assert_fail>
   1bf60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf6c:	add	x0, x0, #0x0
   1bf70:	add	x1, x1, #0x0
   1bf74:	add	x3, x3, #0x0
   1bf78:	mov	w2, #0x134                 	// #308
   1bf7c:	bl	0 <__assert_fail>

000000000001bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj>:
   1bf80:	stp	x29, x30, [sp, #-64]!
   1bf84:	str	x23, [sp, #16]
   1bf88:	stp	x22, x21, [sp, #32]
   1bf8c:	stp	x20, x19, [sp, #48]
   1bf90:	mov	x29, sp
   1bf94:	ldrb	w9, [x1, #1]
   1bf98:	ldp	w8, w10, [x2, #8]
   1bf9c:	mov	w20, w3
   1bfa0:	mov	x19, x2
   1bfa4:	and	w9, w9, #0x7f
   1bfa8:	cmp	w9, #0x1
   1bfac:	mov	x22, x1
   1bfb0:	cset	w23, eq  // eq = none
   1bfb4:	cmp	w8, w10
   1bfb8:	mov	x21, x0
   1bfbc:	b.cs	1c15c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x1dc>  // b.hs, b.nlast
   1bfc0:	ldr	x9, [x19]
   1bfc4:	str	x23, [x9, w8, uxtw #3]
   1bfc8:	ldp	w8, w9, [x19, #8]
   1bfcc:	cmp	w8, w9
   1bfd0:	b.cs	1c264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   1bfd4:	add	w8, w8, #0x1
   1bfd8:	str	w8, [x19, #8]
   1bfdc:	ldr	w10, [x22, #8]
   1bfe0:	cmp	w10, #0x1
   1bfe4:	b.ls	1c2a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x324>  // b.plast
   1bfe8:	sub	x10, x22, x10, lsl #3
   1bfec:	ldr	x10, [x10, #8]
   1bff0:	cbz	x10, 1c2c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x344>
   1bff4:	ldrb	w11, [x10]
   1bff8:	sub	w11, w11, #0x11
   1bffc:	cmp	w11, #0x3
   1c000:	b.cs	1c2e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x364>  // b.hs, b.nlast
   1c004:	ldr	w12, [x21, #304]
   1c008:	cbz	w12, 1c1d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x254>
   1c00c:	orr	x11, x10, #0x4
   1c010:	cmn	x11, #0x4
   1c014:	b.eq	1c284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x304>  // b.none
   1c018:	ldr	x11, [x21, #288]
   1c01c:	ubfx	x13, x10, #4, #28
   1c020:	eor	w14, w13, w10, lsr #9
   1c024:	sub	w13, w12, #0x1
   1c028:	and	w12, w13, w14
   1c02c:	lsl	x14, x12, #4
   1c030:	ldr	x14, [x11, x14]
   1c034:	cmp	x14, x10
   1c038:	b.ne	1c194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x214>  // b.any
   1c03c:	add	x10, x11, x12, lsl #4
   1c040:	ldr	w23, [x10, #12]
   1c044:	cmp	w8, w9
   1c048:	b.cs	1c1e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x260>  // b.hs, b.nlast
   1c04c:	ldr	x9, [x19]
   1c050:	str	x23, [x9, w8, uxtw #3]
   1c054:	ldp	w8, w9, [x19, #8]
   1c058:	cmp	w8, w9
   1c05c:	b.cs	1c264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   1c060:	add	w8, w8, #0x1
   1c064:	str	w8, [x19, #8]
   1c068:	cbz	x22, 1c304 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x384>
   1c06c:	ldrb	w10, [x22]
   1c070:	cmp	w10, #0xf
   1c074:	b.ne	1c084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x104>  // b.any
   1c078:	mov	x10, x22
   1c07c:	cbnz	x10, 1c098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x118>
   1c080:	b	1c0a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x124>
   1c084:	ldr	w10, [x22, #8]
   1c088:	cbz	w10, 1c2a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x324>
   1c08c:	sub	x10, x22, x10, lsl #3
   1c090:	ldr	x10, [x10]
   1c094:	cbz	x10, 1c0a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x124>
   1c098:	ldrb	w11, [x10]
   1c09c:	cmp	w11, #0xf
   1c0a0:	b.ne	1c324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x3a4>  // b.any
   1c0a4:	ldr	w12, [x21, #304]
   1c0a8:	cbz	w12, 1c23c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2bc>
   1c0ac:	orr	x11, x10, #0x4
   1c0b0:	cmn	x11, #0x4
   1c0b4:	b.eq	1c284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x304>  // b.none
   1c0b8:	ldr	x11, [x21, #288]
   1c0bc:	ubfx	x13, x10, #4, #28
   1c0c0:	eor	w14, w13, w10, lsr #9
   1c0c4:	sub	w13, w12, #0x1
   1c0c8:	and	w12, w14, w13
   1c0cc:	lsl	x14, x12, #4
   1c0d0:	ldr	x14, [x11, x14]
   1c0d4:	cmp	x14, x10
   1c0d8:	b.ne	1c1fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x27c>  // b.any
   1c0dc:	add	x10, x11, x12, lsl #4
   1c0e0:	ldr	w23, [x10, #12]
   1c0e4:	cmp	w8, w9
   1c0e8:	b.cs	1c248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2c8>  // b.hs, b.nlast
   1c0ec:	ldr	x9, [x19]
   1c0f0:	str	x23, [x9, w8, uxtw #3]
   1c0f4:	ldp	w8, w9, [x19, #8]
   1c0f8:	cmp	w8, w9
   1c0fc:	b.cs	1c264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   1c100:	add	w8, w8, #0x1
   1c104:	str	w8, [x19, #8]
   1c108:	ldr	w22, [x22, #24]
   1c10c:	cmp	w8, w9
   1c110:	b.cs	1c178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x1f8>  // b.hs, b.nlast
   1c114:	ldr	x9, [x19]
   1c118:	str	x22, [x9, w8, uxtw #3]
   1c11c:	ldp	w8, w9, [x19, #8]
   1c120:	cmp	w8, w9
   1c124:	b.cs	1c264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   1c128:	add	w8, w8, #0x1
   1c12c:	str	w8, [x19, #8]
   1c130:	ldr	x0, [x21]
   1c134:	mov	w1, #0x17                  	// #23
   1c138:	mov	x2, x19
   1c13c:	mov	w3, w20
   1c140:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c144:	str	wzr, [x19, #8]
   1c148:	ldp	x20, x19, [sp, #48]
   1c14c:	ldp	x22, x21, [sp, #32]
   1c150:	ldr	x23, [sp, #16]
   1c154:	ldp	x29, x30, [sp], #64
   1c158:	ret
   1c15c:	add	x1, x19, #0x10
   1c160:	mov	w3, #0x8                   	// #8
   1c164:	mov	x0, x19
   1c168:	mov	x2, xzr
   1c16c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c170:	ldr	w8, [x19, #8]
   1c174:	b	1bfc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x40>
   1c178:	add	x1, x19, #0x10
   1c17c:	mov	w3, #0x8                   	// #8
   1c180:	mov	x0, x19
   1c184:	mov	x2, xzr
   1c188:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c18c:	ldr	w8, [x19, #8]
   1c190:	b	1c114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x194>
   1c194:	mov	w15, #0x1                   	// #1
   1c198:	cmn	x14, #0x4
   1c19c:	b.eq	1c1d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x254>  // b.none
   1c1a0:	add	w12, w12, w15
   1c1a4:	and	w12, w12, w13
   1c1a8:	lsl	x14, x12, #4
   1c1ac:	ldr	x14, [x11, x14]
   1c1b0:	add	w15, w15, #0x1
   1c1b4:	cmp	x14, x10
   1c1b8:	b.ne	1c198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x218>  // b.any
   1c1bc:	mov	w12, w12
   1c1c0:	add	x10, x11, x12, lsl #4
   1c1c4:	ldr	w23, [x10, #12]
   1c1c8:	cmp	w8, w9
   1c1cc:	b.cc	1c04c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0xcc>  // b.lo, b.ul, b.last
   1c1d0:	b	1c1e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x260>
   1c1d4:	mov	x23, xzr
   1c1d8:	cmp	w8, w9
   1c1dc:	b.cc	1c04c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0xcc>  // b.lo, b.ul, b.last
   1c1e0:	add	x1, x19, #0x10
   1c1e4:	mov	w3, #0x8                   	// #8
   1c1e8:	mov	x0, x19
   1c1ec:	mov	x2, xzr
   1c1f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c1f4:	ldr	w8, [x19, #8]
   1c1f8:	b	1c04c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0xcc>
   1c1fc:	mov	w15, #0x1                   	// #1
   1c200:	cmn	x14, #0x4
   1c204:	b.eq	1c23c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2bc>  // b.none
   1c208:	add	w12, w12, w15
   1c20c:	and	w12, w12, w13
   1c210:	lsl	x14, x12, #4
   1c214:	ldr	x14, [x11, x14]
   1c218:	add	w15, w15, #0x1
   1c21c:	cmp	x14, x10
   1c220:	b.ne	1c200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x280>  // b.any
   1c224:	mov	w12, w12
   1c228:	add	x10, x11, x12, lsl #4
   1c22c:	ldr	w23, [x10, #12]
   1c230:	cmp	w8, w9
   1c234:	b.cc	1c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x16c>  // b.lo, b.ul, b.last
   1c238:	b	1c248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2c8>
   1c23c:	mov	x23, xzr
   1c240:	cmp	w8, w9
   1c244:	b.cc	1c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x16c>  // b.lo, b.ul, b.last
   1c248:	add	x1, x19, #0x10
   1c24c:	mov	w3, #0x8                   	// #8
   1c250:	mov	x0, x19
   1c254:	mov	x2, xzr
   1c258:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c25c:	ldr	w8, [x19, #8]
   1c260:	b	1c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x16c>
   1c264:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c268:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c26c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c270:	add	x0, x0, #0x0
   1c274:	add	x1, x1, #0x0
   1c278:	add	x3, x3, #0x0
   1c27c:	mov	w2, #0x43                  	// #67
   1c280:	bl	0 <__assert_fail>
   1c284:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c288:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c28c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c290:	add	x0, x0, #0x0
   1c294:	add	x1, x1, #0x0
   1c298:	add	x3, x3, #0x0
   1c29c:	mov	w2, #0x252                 	// #594
   1c2a0:	bl	0 <__assert_fail>
   1c2a4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c2a8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c2ac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c2b0:	add	x0, x0, #0x0
   1c2b4:	add	x1, x1, #0x0
   1c2b8:	add	x3, x3, #0x0
   1c2bc:	mov	w2, #0x436                 	// #1078
   1c2c0:	bl	0 <__assert_fail>
   1c2c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c2c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c2cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c2d0:	add	x0, x0, #0x0
   1c2d4:	add	x1, x1, #0x0
   1c2d8:	add	x3, x3, #0x0
   1c2dc:	mov	w2, #0x69                  	// #105
   1c2e0:	bl	0 <__assert_fail>
   1c2e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c2e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c2ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c2f0:	add	x0, x0, #0x0
   1c2f4:	add	x1, x1, #0x0
   1c2f8:	add	x3, x3, #0x0
   1c2fc:	mov	w2, #0x108                 	// #264
   1c300:	bl	0 <__assert_fail>
   1c304:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c308:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c30c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c310:	add	x0, x0, #0x0
   1c314:	add	x1, x1, #0x0
   1c318:	add	x3, x3, #0x0
   1c31c:	mov	w2, #0x69                  	// #105
   1c320:	bl	0 <__assert_fail>
   1c324:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c328:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c32c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c330:	add	x0, x0, #0x0
   1c334:	add	x1, x1, #0x0
   1c338:	add	x3, x3, #0x0
   1c33c:	mov	w2, #0x134                 	// #308
   1c340:	bl	0 <__assert_fail>

000000000001c344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj>:
   1c344:	stp	x29, x30, [sp, #-80]!
   1c348:	str	x25, [sp, #16]
   1c34c:	stp	x24, x23, [sp, #32]
   1c350:	stp	x22, x21, [sp, #48]
   1c354:	stp	x20, x19, [sp, #64]
   1c358:	mov	x29, sp
   1c35c:	ldrb	w9, [x1, #1]
   1c360:	ldp	w8, w10, [x2, #8]
   1c364:	mov	w20, w3
   1c368:	mov	x19, x2
   1c36c:	and	w9, w9, #0x7f
   1c370:	cmp	w9, #0x1
   1c374:	mov	x21, x1
   1c378:	cset	w23, eq  // eq = none
   1c37c:	cmp	w8, w10
   1c380:	mov	x22, x0
   1c384:	b.cs	1c4cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x188>  // b.hs, b.nlast
   1c388:	ldr	x9, [x19]
   1c38c:	str	x23, [x9, w8, uxtw #3]
   1c390:	ldp	w9, w8, [x19, #8]
   1c394:	cmp	w9, w8
   1c398:	b.cs	1c508 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x1c4>  // b.hs, b.nlast
   1c39c:	add	w9, w9, #0x1
   1c3a0:	str	w9, [x19, #8]
   1c3a4:	ldr	w10, [x21, #8]
   1c3a8:	neg	x11, x10
   1c3ac:	lsl	x11, x11, #3
   1c3b0:	cbz	x11, 1c49c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x158>
   1c3b4:	sub	x24, x21, x10, lsl #3
   1c3b8:	add	x23, x19, #0x10
   1c3bc:	ldr	w12, [x22, #304]
   1c3c0:	cbz	w12, 1c474 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x130>
   1c3c4:	ldr	x10, [x24]
   1c3c8:	orr	x11, x10, #0x4
   1c3cc:	cmn	x11, #0x4
   1c3d0:	b.eq	1c4e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x1a4>  // b.none
   1c3d4:	ldr	x11, [x22, #288]
   1c3d8:	ubfx	x13, x10, #4, #28
   1c3dc:	eor	w14, w13, w10, lsr #9
   1c3e0:	sub	w13, w12, #0x1
   1c3e4:	and	w12, w14, w13
   1c3e8:	lsl	x14, x12, #4
   1c3ec:	ldr	x14, [x11, x14]
   1c3f0:	cmp	x14, x10
   1c3f4:	b.ne	1c434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xf0>  // b.any
   1c3f8:	add	x10, x11, x12, lsl #4
   1c3fc:	ldr	w25, [x10, #12]
   1c400:	cmp	w9, w8
   1c404:	b.cs	1c480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x13c>  // b.hs, b.nlast
   1c408:	ldr	x8, [x19]
   1c40c:	str	x25, [x8, w9, uxtw #3]
   1c410:	ldp	w9, w8, [x19, #8]
   1c414:	cmp	w9, w8
   1c418:	b.cs	1c508 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x1c4>  // b.hs, b.nlast
   1c41c:	add	x24, x24, #0x8
   1c420:	add	w9, w9, #0x1
   1c424:	cmp	x24, x21
   1c428:	str	w9, [x19, #8]
   1c42c:	b.ne	1c3bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x78>  // b.any
   1c430:	b	1c49c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x158>
   1c434:	mov	w15, #0x1                   	// #1
   1c438:	cmn	x14, #0x4
   1c43c:	b.eq	1c474 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x130>  // b.none
   1c440:	add	w12, w12, w15
   1c444:	and	w12, w12, w13
   1c448:	lsl	x14, x12, #4
   1c44c:	ldr	x14, [x11, x14]
   1c450:	add	w15, w15, #0x1
   1c454:	cmp	x14, x10
   1c458:	b.ne	1c438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xf4>  // b.any
   1c45c:	mov	w12, w12
   1c460:	add	x10, x11, x12, lsl #4
   1c464:	ldr	w25, [x10, #12]
   1c468:	cmp	w9, w8
   1c46c:	b.cc	1c408 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xc4>  // b.lo, b.ul, b.last
   1c470:	b	1c480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x13c>
   1c474:	mov	x25, xzr
   1c478:	cmp	w9, w8
   1c47c:	b.cc	1c408 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xc4>  // b.lo, b.ul, b.last
   1c480:	mov	w3, #0x8                   	// #8
   1c484:	mov	x0, x19
   1c488:	mov	x1, x23
   1c48c:	mov	x2, xzr
   1c490:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c494:	ldr	w9, [x19, #8]
   1c498:	b	1c408 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xc4>
   1c49c:	ldr	x0, [x22]
   1c4a0:	mov	w1, #0x20                  	// #32
   1c4a4:	mov	x2, x19
   1c4a8:	mov	w3, w20
   1c4ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c4b0:	str	wzr, [x19, #8]
   1c4b4:	ldp	x20, x19, [sp, #64]
   1c4b8:	ldp	x22, x21, [sp, #48]
   1c4bc:	ldp	x24, x23, [sp, #32]
   1c4c0:	ldr	x25, [sp, #16]
   1c4c4:	ldp	x29, x30, [sp], #80
   1c4c8:	ret
   1c4cc:	add	x1, x19, #0x10
   1c4d0:	mov	w3, #0x8                   	// #8
   1c4d4:	mov	x0, x19
   1c4d8:	mov	x2, xzr
   1c4dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c4e0:	ldr	w8, [x19, #8]
   1c4e4:	b	1c388 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x44>
   1c4e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c4ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c4f0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c4f4:	add	x0, x0, #0x0
   1c4f8:	add	x1, x1, #0x0
   1c4fc:	add	x3, x3, #0x0
   1c500:	mov	w2, #0x252                 	// #594
   1c504:	bl	0 <__assert_fail>
   1c508:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c50c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c510:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c514:	add	x0, x0, #0x0
   1c518:	add	x1, x1, #0x0
   1c51c:	add	x3, x3, #0x0
   1c520:	mov	w2, #0x43                  	// #67
   1c524:	bl	0 <__assert_fail>

000000000001c528 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj>:
   1c528:	stp	x29, x30, [sp, #-64]!
   1c52c:	str	x23, [sp, #16]
   1c530:	stp	x22, x21, [sp, #32]
   1c534:	stp	x20, x19, [sp, #48]
   1c538:	mov	x29, sp
   1c53c:	ldrb	w9, [x1, #1]
   1c540:	ldp	w8, w10, [x2, #8]
   1c544:	mov	w20, w3
   1c548:	mov	x19, x2
   1c54c:	and	w9, w9, #0x7f
   1c550:	cmp	w9, #0x1
   1c554:	mov	x22, x1
   1c558:	cset	w23, eq  // eq = none
   1c55c:	cmp	w8, w10
   1c560:	mov	x21, x0
   1c564:	b.cs	1c75c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x234>  // b.hs, b.nlast
   1c568:	ldr	x9, [x19]
   1c56c:	str	x23, [x9, w8, uxtw #3]
   1c570:	ldp	w8, w9, [x19, #8]
   1c574:	cmp	w8, w9
   1c578:	b.cs	1c8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3a4>  // b.hs, b.nlast
   1c57c:	add	w8, w8, #0x1
   1c580:	str	w8, [x19, #8]
   1c584:	ldrh	w23, [x22, #2]
   1c588:	cmp	w8, w9
   1c58c:	b.cs	1c778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x250>  // b.hs, b.nlast
   1c590:	ldr	x9, [x19]
   1c594:	str	x23, [x9, w8, uxtw #3]
   1c598:	ldp	w8, w9, [x19, #8]
   1c59c:	cmp	w8, w9
   1c5a0:	b.cs	1c8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3a4>  // b.hs, b.nlast
   1c5a4:	add	w8, w8, #0x1
   1c5a8:	str	w8, [x19, #8]
   1c5ac:	ldr	w10, [x22, #8]
   1c5b0:	cbz	w10, 1c90c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3e4>
   1c5b4:	sub	x10, x22, x10, lsl #3
   1c5b8:	ldr	x10, [x10]
   1c5bc:	cbz	x10, 1c5c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0xa0>
   1c5c0:	ldrb	w11, [x10]
   1c5c4:	cbnz	w11, 1c92c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x404>
   1c5c8:	ldr	w12, [x21, #304]
   1c5cc:	cbz	w12, 1c7d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2ac>
   1c5d0:	orr	x11, x10, #0x4
   1c5d4:	cmn	x11, #0x4
   1c5d8:	b.eq	1c8ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3c4>  // b.none
   1c5dc:	ldr	x11, [x21, #288]
   1c5e0:	ubfx	x13, x10, #4, #28
   1c5e4:	eor	w14, w13, w10, lsr #9
   1c5e8:	sub	w13, w12, #0x1
   1c5ec:	and	w12, w14, w13
   1c5f0:	lsl	x14, x12, #4
   1c5f4:	ldr	x14, [x11, x14]
   1c5f8:	cmp	x14, x10
   1c5fc:	b.ne	1c794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x26c>  // b.any
   1c600:	add	x10, x11, x12, lsl #4
   1c604:	ldr	w23, [x10, #12]
   1c608:	cmp	w8, w9
   1c60c:	b.cs	1c7e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2b8>  // b.hs, b.nlast
   1c610:	ldr	x9, [x19]
   1c614:	str	x23, [x9, w8, uxtw #3]
   1c618:	ldp	w8, w9, [x19, #8]
   1c61c:	cmp	w8, w9
   1c620:	b.cs	1c8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3a4>  // b.hs, b.nlast
   1c624:	add	w8, w8, #0x1
   1c628:	str	w8, [x19, #8]
   1c62c:	ldr	w10, [x22, #8]
   1c630:	cmp	w10, #0x1
   1c634:	b.ls	1c90c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3e4>  // b.plast
   1c638:	sub	x10, x22, x10, lsl #3
   1c63c:	ldr	x10, [x10, #8]
   1c640:	cbz	x10, 1c654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x12c>
   1c644:	ldrb	w11, [x10]
   1c648:	sub	w11, w11, #0xb
   1c64c:	cmp	w11, #0x4
   1c650:	b.cs	1c94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x424>  // b.hs, b.nlast
   1c654:	ldr	w12, [x21, #304]
   1c658:	cbz	w12, 1c83c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x314>
   1c65c:	orr	x11, x10, #0x4
   1c660:	cmn	x11, #0x4
   1c664:	b.eq	1c8ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3c4>  // b.none
   1c668:	ldr	x11, [x21, #288]
   1c66c:	ubfx	x13, x10, #4, #28
   1c670:	eor	w14, w13, w10, lsr #9
   1c674:	sub	w13, w12, #0x1
   1c678:	and	w12, w14, w13
   1c67c:	lsl	x14, x12, #4
   1c680:	ldr	x14, [x11, x14]
   1c684:	cmp	x14, x10
   1c688:	b.ne	1c7fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2d4>  // b.any
   1c68c:	add	x10, x11, x12, lsl #4
   1c690:	ldr	w23, [x10, #12]
   1c694:	cmp	w8, w9
   1c698:	b.cs	1c848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x320>  // b.hs, b.nlast
   1c69c:	ldr	x9, [x19]
   1c6a0:	str	x23, [x9, w8, uxtw #3]
   1c6a4:	ldp	w8, w9, [x19, #8]
   1c6a8:	cmp	w8, w9
   1c6ac:	b.cs	1c8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3a4>  // b.hs, b.nlast
   1c6b0:	add	w8, w8, #0x1
   1c6b4:	str	w8, [x19, #8]
   1c6b8:	ldr	w10, [x22, #8]
   1c6bc:	cmp	w10, #0x2
   1c6c0:	b.ls	1c90c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3e4>  // b.plast
   1c6c4:	ldr	w12, [x21, #304]
   1c6c8:	cbz	w12, 1c8a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x37c>
   1c6cc:	sub	x10, x22, x10, lsl #3
   1c6d0:	ldr	x10, [x10, #16]
   1c6d4:	orr	x11, x10, #0x4
   1c6d8:	cmn	x11, #0x4
   1c6dc:	b.eq	1c8ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3c4>  // b.none
   1c6e0:	ldr	x11, [x21, #288]
   1c6e4:	ubfx	x13, x10, #4, #28
   1c6e8:	eor	w14, w13, w10, lsr #9
   1c6ec:	sub	w13, w12, #0x1
   1c6f0:	and	w12, w14, w13
   1c6f4:	lsl	x14, x12, #4
   1c6f8:	ldr	x14, [x11, x14]
   1c6fc:	cmp	x14, x10
   1c700:	b.ne	1c864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x33c>  // b.any
   1c704:	add	x10, x11, x12, lsl #4
   1c708:	ldr	w22, [x10, #12]
   1c70c:	cmp	w8, w9
   1c710:	b.cs	1c8b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x388>  // b.hs, b.nlast
   1c714:	ldr	x9, [x19]
   1c718:	str	x22, [x9, w8, uxtw #3]
   1c71c:	ldp	w8, w9, [x19, #8]
   1c720:	cmp	w8, w9
   1c724:	b.cs	1c8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3a4>  // b.hs, b.nlast
   1c728:	add	w8, w8, #0x1
   1c72c:	str	w8, [x19, #8]
   1c730:	ldr	x0, [x21]
   1c734:	mov	w1, #0x1a                  	// #26
   1c738:	mov	x2, x19
   1c73c:	mov	w3, w20
   1c740:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c744:	str	wzr, [x19, #8]
   1c748:	ldp	x20, x19, [sp, #48]
   1c74c:	ldp	x22, x21, [sp, #32]
   1c750:	ldr	x23, [sp, #16]
   1c754:	ldp	x29, x30, [sp], #64
   1c758:	ret
   1c75c:	add	x1, x19, #0x10
   1c760:	mov	w3, #0x8                   	// #8
   1c764:	mov	x0, x19
   1c768:	mov	x2, xzr
   1c76c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c770:	ldr	w8, [x19, #8]
   1c774:	b	1c568 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x40>
   1c778:	add	x1, x19, #0x10
   1c77c:	mov	w3, #0x8                   	// #8
   1c780:	mov	x0, x19
   1c784:	mov	x2, xzr
   1c788:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c78c:	ldr	w8, [x19, #8]
   1c790:	b	1c590 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x68>
   1c794:	mov	w15, #0x1                   	// #1
   1c798:	cmn	x14, #0x4
   1c79c:	b.eq	1c7d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2ac>  // b.none
   1c7a0:	add	w12, w12, w15
   1c7a4:	and	w12, w12, w13
   1c7a8:	lsl	x14, x12, #4
   1c7ac:	ldr	x14, [x11, x14]
   1c7b0:	add	w15, w15, #0x1
   1c7b4:	cmp	x14, x10
   1c7b8:	b.ne	1c798 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x270>  // b.any
   1c7bc:	mov	w12, w12
   1c7c0:	add	x10, x11, x12, lsl #4
   1c7c4:	ldr	w23, [x10, #12]
   1c7c8:	cmp	w8, w9
   1c7cc:	b.cc	1c610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0xe8>  // b.lo, b.ul, b.last
   1c7d0:	b	1c7e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2b8>
   1c7d4:	mov	x23, xzr
   1c7d8:	cmp	w8, w9
   1c7dc:	b.cc	1c610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0xe8>  // b.lo, b.ul, b.last
   1c7e0:	add	x1, x19, #0x10
   1c7e4:	mov	w3, #0x8                   	// #8
   1c7e8:	mov	x0, x19
   1c7ec:	mov	x2, xzr
   1c7f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c7f4:	ldr	w8, [x19, #8]
   1c7f8:	b	1c610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0xe8>
   1c7fc:	mov	w15, #0x1                   	// #1
   1c800:	cmn	x14, #0x4
   1c804:	b.eq	1c83c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x314>  // b.none
   1c808:	add	w12, w12, w15
   1c80c:	and	w12, w12, w13
   1c810:	lsl	x14, x12, #4
   1c814:	ldr	x14, [x11, x14]
   1c818:	add	w15, w15, #0x1
   1c81c:	cmp	x14, x10
   1c820:	b.ne	1c800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2d8>  // b.any
   1c824:	mov	w12, w12
   1c828:	add	x10, x11, x12, lsl #4
   1c82c:	ldr	w23, [x10, #12]
   1c830:	cmp	w8, w9
   1c834:	b.cc	1c69c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x174>  // b.lo, b.ul, b.last
   1c838:	b	1c848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x320>
   1c83c:	mov	x23, xzr
   1c840:	cmp	w8, w9
   1c844:	b.cc	1c69c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x174>  // b.lo, b.ul, b.last
   1c848:	add	x1, x19, #0x10
   1c84c:	mov	w3, #0x8                   	// #8
   1c850:	mov	x0, x19
   1c854:	mov	x2, xzr
   1c858:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c85c:	ldr	w8, [x19, #8]
   1c860:	b	1c69c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x174>
   1c864:	mov	w15, #0x1                   	// #1
   1c868:	cmn	x14, #0x4
   1c86c:	b.eq	1c8a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x37c>  // b.none
   1c870:	add	w12, w12, w15
   1c874:	and	w12, w12, w13
   1c878:	lsl	x14, x12, #4
   1c87c:	ldr	x14, [x11, x14]
   1c880:	add	w15, w15, #0x1
   1c884:	cmp	x14, x10
   1c888:	b.ne	1c868 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x340>  // b.any
   1c88c:	mov	w12, w12
   1c890:	add	x10, x11, x12, lsl #4
   1c894:	ldr	w22, [x10, #12]
   1c898:	cmp	w8, w9
   1c89c:	b.cc	1c714 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x1ec>  // b.lo, b.ul, b.last
   1c8a0:	b	1c8b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x388>
   1c8a4:	mov	x22, xzr
   1c8a8:	cmp	w8, w9
   1c8ac:	b.cc	1c714 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x1ec>  // b.lo, b.ul, b.last
   1c8b0:	add	x1, x19, #0x10
   1c8b4:	mov	w3, #0x8                   	// #8
   1c8b8:	mov	x0, x19
   1c8bc:	mov	x2, xzr
   1c8c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c8c4:	ldr	w8, [x19, #8]
   1c8c8:	b	1c714 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x1ec>
   1c8cc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c8d0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c8d4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c8d8:	add	x0, x0, #0x0
   1c8dc:	add	x1, x1, #0x0
   1c8e0:	add	x3, x3, #0x0
   1c8e4:	mov	w2, #0x43                  	// #67
   1c8e8:	bl	0 <__assert_fail>
   1c8ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c8f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c8f4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c8f8:	add	x0, x0, #0x0
   1c8fc:	add	x1, x1, #0x0
   1c900:	add	x3, x3, #0x0
   1c904:	mov	w2, #0x252                 	// #594
   1c908:	bl	0 <__assert_fail>
   1c90c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c910:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c914:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c918:	add	x0, x0, #0x0
   1c91c:	add	x1, x1, #0x0
   1c920:	add	x3, x3, #0x0
   1c924:	mov	w2, #0x436                 	// #1078
   1c928:	bl	0 <__assert_fail>
   1c92c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c930:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c934:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c938:	add	x0, x0, #0x0
   1c93c:	add	x1, x1, #0x0
   1c940:	add	x3, x3, #0x0
   1c944:	mov	w2, #0x121                 	// #289
   1c948:	bl	0 <__assert_fail>
   1c94c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c950:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c954:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c958:	add	x0, x0, #0x0
   1c95c:	add	x1, x1, #0x0
   1c960:	add	x3, x3, #0x0
   1c964:	mov	w2, #0x134                 	// #308
   1c968:	bl	0 <__assert_fail>

000000000001c96c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj>:
   1c96c:	stp	x29, x30, [sp, #-64]!
   1c970:	str	x23, [sp, #16]
   1c974:	stp	x22, x21, [sp, #32]
   1c978:	stp	x20, x19, [sp, #48]
   1c97c:	mov	x29, sp
   1c980:	ldrb	w9, [x1, #1]
   1c984:	ldp	w8, w10, [x2, #8]
   1c988:	mov	w20, w3
   1c98c:	mov	x19, x2
   1c990:	and	w9, w9, #0x7f
   1c994:	cmp	w9, #0x1
   1c998:	cset	w9, eq  // eq = none
   1c99c:	mov	x22, x1
   1c9a0:	mov	x21, x0
   1c9a4:	cmp	w8, w10
   1c9a8:	orr	x23, x9, #0x4
   1c9ac:	b.cs	1cea4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x538>  // b.hs, b.nlast
   1c9b0:	ldr	x9, [x19]
   1c9b4:	str	x23, [x9, w8, uxtw #3]
   1c9b8:	ldp	w8, w9, [x19, #8]
   1c9bc:	cmp	w8, w9
   1c9c0:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1c9c4:	add	w8, w8, #0x1
   1c9c8:	str	w8, [x19, #8]
   1c9cc:	ldr	w10, [x22, #8]
   1c9d0:	cbz	w10, 1d248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8dc>
   1c9d4:	sub	x10, x22, x10, lsl #3
   1c9d8:	ldr	x10, [x10]
   1c9dc:	cbz	x10, 1c9f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8c>
   1c9e0:	ldrb	w11, [x10]
   1c9e4:	sub	w12, w11, #0xb
   1c9e8:	cmp	w12, #0xb
   1c9ec:	b.cs	1ce54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x4e8>  // b.hs, b.nlast
   1c9f0:	cmp	w12, #0xb
   1c9f4:	b.cs	1ce7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x510>  // b.hs, b.nlast
   1c9f8:	ldr	w12, [x21, #304]
   1c9fc:	cbz	w12, 1cf70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x604>
   1ca00:	orr	x11, x10, #0x4
   1ca04:	cmn	x11, #0x4
   1ca08:	b.eq	1d228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8bc>  // b.none
   1ca0c:	ldr	x11, [x21, #288]
   1ca10:	ubfx	x13, x10, #4, #28
   1ca14:	eor	w14, w13, w10, lsr #9
   1ca18:	sub	w13, w12, #0x1
   1ca1c:	and	w12, w14, w13
   1ca20:	lsl	x14, x12, #4
   1ca24:	ldr	x14, [x11, x14]
   1ca28:	cmp	x14, x10
   1ca2c:	b.ne	1cf30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x5c4>  // b.any
   1ca30:	add	x10, x11, x12, lsl #4
   1ca34:	ldr	w23, [x10, #12]
   1ca38:	cmp	w8, w9
   1ca3c:	b.cs	1cf7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x610>  // b.hs, b.nlast
   1ca40:	ldr	x9, [x19]
   1ca44:	str	x23, [x9, w8, uxtw #3]
   1ca48:	ldp	w8, w9, [x19, #8]
   1ca4c:	cmp	w8, w9
   1ca50:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1ca54:	add	w8, w8, #0x1
   1ca58:	str	w8, [x19, #8]
   1ca5c:	ldr	w10, [x22, #8]
   1ca60:	cmp	w10, #0x1
   1ca64:	b.ls	1d248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8dc>  // b.plast
   1ca68:	sub	x10, x22, x10, lsl #3
   1ca6c:	ldr	x10, [x10, #8]
   1ca70:	cbz	x10, 1ca7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x110>
   1ca74:	ldrb	w11, [x10]
   1ca78:	cbnz	w11, 1d268 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8fc>
   1ca7c:	ldr	w12, [x21, #304]
   1ca80:	cbz	w12, 1cfd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x66c>
   1ca84:	orr	x11, x10, #0x4
   1ca88:	cmn	x11, #0x4
   1ca8c:	b.eq	1d228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8bc>  // b.none
   1ca90:	ldr	x11, [x21, #288]
   1ca94:	ubfx	x13, x10, #4, #28
   1ca98:	eor	w14, w13, w10, lsr #9
   1ca9c:	sub	w13, w12, #0x1
   1caa0:	and	w12, w14, w13
   1caa4:	lsl	x14, x12, #4
   1caa8:	ldr	x14, [x11, x14]
   1caac:	cmp	x14, x10
   1cab0:	b.ne	1cf98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x62c>  // b.any
   1cab4:	add	x10, x11, x12, lsl #4
   1cab8:	ldr	w23, [x10, #12]
   1cabc:	cmp	w8, w9
   1cac0:	b.cs	1cfe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x678>  // b.hs, b.nlast
   1cac4:	ldr	x9, [x19]
   1cac8:	str	x23, [x9, w8, uxtw #3]
   1cacc:	ldp	w8, w9, [x19, #8]
   1cad0:	cmp	w8, w9
   1cad4:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1cad8:	add	w8, w8, #0x1
   1cadc:	str	w8, [x19, #8]
   1cae0:	ldr	w10, [x22, #8]
   1cae4:	cmp	w10, #0x5
   1cae8:	b.ls	1d248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8dc>  // b.plast
   1caec:	sub	x10, x22, x10, lsl #3
   1caf0:	ldr	x10, [x10, #40]
   1caf4:	cbz	x10, 1cb00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x194>
   1caf8:	ldrb	w11, [x10]
   1cafc:	cbnz	w11, 1d268 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8fc>
   1cb00:	ldr	w12, [x21, #304]
   1cb04:	cbz	w12, 1d040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6d4>
   1cb08:	orr	x11, x10, #0x4
   1cb0c:	cmn	x11, #0x4
   1cb10:	b.eq	1d228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8bc>  // b.none
   1cb14:	ldr	x11, [x21, #288]
   1cb18:	ubfx	x13, x10, #4, #28
   1cb1c:	eor	w14, w13, w10, lsr #9
   1cb20:	sub	w13, w12, #0x1
   1cb24:	and	w12, w14, w13
   1cb28:	lsl	x14, x12, #4
   1cb2c:	ldr	x14, [x11, x14]
   1cb30:	cmp	x14, x10
   1cb34:	b.ne	1d000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x694>  // b.any
   1cb38:	add	x10, x11, x12, lsl #4
   1cb3c:	ldr	w23, [x10, #12]
   1cb40:	cmp	w8, w9
   1cb44:	b.cs	1d04c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6e0>  // b.hs, b.nlast
   1cb48:	ldr	x9, [x19]
   1cb4c:	str	x23, [x9, w8, uxtw #3]
   1cb50:	ldp	w8, w9, [x19, #8]
   1cb54:	cmp	w8, w9
   1cb58:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1cb5c:	add	w8, w8, #0x1
   1cb60:	str	w8, [x19, #8]
   1cb64:	ldr	w10, [x22, #8]
   1cb68:	cmp	w10, #0x2
   1cb6c:	b.ls	1d248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8dc>  // b.plast
   1cb70:	sub	x10, x22, x10, lsl #3
   1cb74:	ldr	x10, [x10, #16]
   1cb78:	cbz	x10, 1cb88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x21c>
   1cb7c:	ldrb	w11, [x10]
   1cb80:	cmp	w11, #0xf
   1cb84:	b.ne	1d288 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x91c>  // b.any
   1cb88:	ldr	w12, [x21, #304]
   1cb8c:	cbz	w12, 1d0a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x73c>
   1cb90:	orr	x11, x10, #0x4
   1cb94:	cmn	x11, #0x4
   1cb98:	b.eq	1d228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8bc>  // b.none
   1cb9c:	ldr	x11, [x21, #288]
   1cba0:	ubfx	x13, x10, #4, #28
   1cba4:	eor	w14, w13, w10, lsr #9
   1cba8:	sub	w13, w12, #0x1
   1cbac:	and	w12, w14, w13
   1cbb0:	lsl	x14, x12, #4
   1cbb4:	ldr	x14, [x11, x14]
   1cbb8:	cmp	x14, x10
   1cbbc:	b.ne	1d068 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6fc>  // b.any
   1cbc0:	add	x10, x11, x12, lsl #4
   1cbc4:	ldr	w23, [x10, #12]
   1cbc8:	cmp	w8, w9
   1cbcc:	b.cs	1d0b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x748>  // b.hs, b.nlast
   1cbd0:	ldr	x9, [x19]
   1cbd4:	str	x23, [x9, w8, uxtw #3]
   1cbd8:	ldp	w8, w9, [x19, #8]
   1cbdc:	cmp	w8, w9
   1cbe0:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1cbe4:	add	w8, w8, #0x1
   1cbe8:	str	w8, [x19, #8]
   1cbec:	ldr	w23, [x22, #24]
   1cbf0:	cmp	w8, w9
   1cbf4:	b.cs	1cec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1cbf8:	ldr	x9, [x19]
   1cbfc:	str	x23, [x9, w8, uxtw #3]
   1cc00:	ldp	w8, w9, [x19, #8]
   1cc04:	cmp	w8, w9
   1cc08:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1cc0c:	add	w8, w8, #0x1
   1cc10:	str	w8, [x19, #8]
   1cc14:	ldr	w10, [x22, #8]
   1cc18:	cmp	w10, #0x3
   1cc1c:	b.ls	1d248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8dc>  // b.plast
   1cc20:	sub	x10, x22, x10, lsl #3
   1cc24:	ldr	x10, [x10, #24]
   1cc28:	cbz	x10, 1cc3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x2d0>
   1cc2c:	ldrb	w11, [x10]
   1cc30:	sub	w11, w11, #0xb
   1cc34:	cmp	w11, #0x4
   1cc38:	b.cs	1d2a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x93c>  // b.hs, b.nlast
   1cc3c:	ldr	w12, [x21, #304]
   1cc40:	cbz	w12, 1d110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7a4>
   1cc44:	orr	x11, x10, #0x4
   1cc48:	cmn	x11, #0x4
   1cc4c:	b.eq	1d228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8bc>  // b.none
   1cc50:	ldr	x11, [x21, #288]
   1cc54:	ubfx	x13, x10, #4, #28
   1cc58:	eor	w14, w13, w10, lsr #9
   1cc5c:	sub	w13, w12, #0x1
   1cc60:	and	w12, w14, w13
   1cc64:	lsl	x14, x12, #4
   1cc68:	ldr	x14, [x11, x14]
   1cc6c:	cmp	x14, x10
   1cc70:	b.ne	1d0d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x764>  // b.any
   1cc74:	add	x10, x11, x12, lsl #4
   1cc78:	ldr	w23, [x10, #12]
   1cc7c:	cmp	w8, w9
   1cc80:	b.cs	1d11c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7b0>  // b.hs, b.nlast
   1cc84:	ldr	x9, [x19]
   1cc88:	str	x23, [x9, w8, uxtw #3]
   1cc8c:	ldp	w8, w9, [x19, #8]
   1cc90:	cmp	w8, w9
   1cc94:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1cc98:	add	w8, w8, #0x1
   1cc9c:	str	w8, [x19, #8]
   1cca0:	ldrb	w23, [x22, #32]
   1cca4:	cmp	w8, w9
   1cca8:	b.cs	1cedc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x570>  // b.hs, b.nlast
   1ccac:	ldr	x9, [x19]
   1ccb0:	str	x23, [x9, w8, uxtw #3]
   1ccb4:	ldp	w8, w9, [x19, #8]
   1ccb8:	cmp	w8, w9
   1ccbc:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1ccc0:	add	w8, w8, #0x1
   1ccc4:	str	w8, [x19, #8]
   1ccc8:	ldrb	w23, [x22, #33]
   1cccc:	cmp	w8, w9
   1ccd0:	b.cs	1cef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x58c>  // b.hs, b.nlast
   1ccd4:	ldr	x9, [x19]
   1ccd8:	str	x23, [x9, w8, uxtw #3]
   1ccdc:	ldp	w8, w9, [x19, #8]
   1cce0:	cmp	w8, w9
   1cce4:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1cce8:	add	w8, w8, #0x1
   1ccec:	str	w8, [x19, #8]
   1ccf0:	ldr	w10, [x22, #8]
   1ccf4:	cmp	w10, #0x6
   1ccf8:	b.ls	1d248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8dc>  // b.plast
   1ccfc:	sub	x10, x22, x10, lsl #3
   1cd00:	ldr	x10, [x10, #48]
   1cd04:	cbz	x10, 1cd14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x3a8>
   1cd08:	ldrb	w11, [x10]
   1cd0c:	cmp	w11, #0xc
   1cd10:	b.ne	1d2c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x95c>  // b.any
   1cd14:	ldr	w12, [x21, #304]
   1cd18:	cbz	w12, 1d178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x80c>
   1cd1c:	orr	x11, x10, #0x4
   1cd20:	cmn	x11, #0x4
   1cd24:	b.eq	1d228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8bc>  // b.none
   1cd28:	ldr	x11, [x21, #288]
   1cd2c:	ubfx	x13, x10, #4, #28
   1cd30:	eor	w14, w13, w10, lsr #9
   1cd34:	sub	w13, w12, #0x1
   1cd38:	and	w12, w14, w13
   1cd3c:	lsl	x14, x12, #4
   1cd40:	ldr	x14, [x11, x14]
   1cd44:	cmp	x14, x10
   1cd48:	b.ne	1d138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7cc>  // b.any
   1cd4c:	add	x10, x11, x12, lsl #4
   1cd50:	ldr	w23, [x10, #12]
   1cd54:	cmp	w8, w9
   1cd58:	b.cs	1d184 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x818>  // b.hs, b.nlast
   1cd5c:	ldr	x9, [x19]
   1cd60:	str	x23, [x9, w8, uxtw #3]
   1cd64:	ldp	w8, w9, [x19, #8]
   1cd68:	cmp	w8, w9
   1cd6c:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1cd70:	add	w8, w8, #0x1
   1cd74:	str	w8, [x19, #8]
   1cd78:	ldr	w10, [x22, #8]
   1cd7c:	cmp	w10, #0x7
   1cd80:	b.ls	1d248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8dc>  // b.plast
   1cd84:	sub	x10, x22, x10, lsl #3
   1cd88:	ldr	x10, [x10, #56]
   1cd8c:	cbz	x10, 1cd9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x430>
   1cd90:	ldrb	w11, [x10]
   1cd94:	cmp	w11, #0x4
   1cd98:	b.ne	1d2e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x97c>  // b.any
   1cd9c:	ldr	w12, [x21, #304]
   1cda0:	cbz	w12, 1d1e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x874>
   1cda4:	orr	x11, x10, #0x4
   1cda8:	cmn	x11, #0x4
   1cdac:	b.eq	1d228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8bc>  // b.none
   1cdb0:	ldr	x11, [x21, #288]
   1cdb4:	ubfx	x13, x10, #4, #28
   1cdb8:	eor	w14, w13, w10, lsr #9
   1cdbc:	sub	w13, w12, #0x1
   1cdc0:	and	w12, w14, w13
   1cdc4:	lsl	x14, x12, #4
   1cdc8:	ldr	x14, [x11, x14]
   1cdcc:	cmp	x14, x10
   1cdd0:	b.ne	1d1a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x834>  // b.any
   1cdd4:	add	x10, x11, x12, lsl #4
   1cdd8:	ldr	w23, [x10, #12]
   1cddc:	cmp	w8, w9
   1cde0:	b.cs	1d1ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x880>  // b.hs, b.nlast
   1cde4:	ldr	x9, [x19]
   1cde8:	str	x23, [x9, w8, uxtw #3]
   1cdec:	ldp	w8, w9, [x19, #8]
   1cdf0:	cmp	w8, w9
   1cdf4:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1cdf8:	add	w8, w8, #0x1
   1cdfc:	str	w8, [x19, #8]
   1ce00:	ldr	w22, [x22, #28]
   1ce04:	cmp	w8, w9
   1ce08:	b.cs	1cf14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x5a8>  // b.hs, b.nlast
   1ce0c:	ldr	x9, [x19]
   1ce10:	str	x22, [x9, w8, uxtw #3]
   1ce14:	ldp	w8, w9, [x19, #8]
   1ce18:	cmp	w8, w9
   1ce1c:	b.cs	1d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x89c>  // b.hs, b.nlast
   1ce20:	add	w8, w8, #0x1
   1ce24:	str	w8, [x19, #8]
   1ce28:	ldr	x0, [x21]
   1ce2c:	mov	w1, #0x1b                  	// #27
   1ce30:	mov	x2, x19
   1ce34:	mov	w3, w20
   1ce38:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ce3c:	str	wzr, [x19, #8]
   1ce40:	ldp	x20, x19, [sp, #48]
   1ce44:	ldp	x22, x21, [sp, #32]
   1ce48:	ldr	x23, [sp, #16]
   1ce4c:	ldp	x29, x30, [sp], #64
   1ce50:	ret
   1ce54:	cmp	w11, #0x1f
   1ce58:	b.eq	1c9f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x84>  // b.none
   1ce5c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ce60:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ce64:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ce68:	add	x0, x0, #0x0
   1ce6c:	add	x1, x1, #0x0
   1ce70:	add	x3, x3, #0x0
   1ce74:	mov	w2, #0x134                 	// #308
   1ce78:	bl	0 <__assert_fail>
   1ce7c:	cmp	w11, #0x1f
   1ce80:	b.eq	1c9f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8c>  // b.none
   1ce84:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ce88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ce8c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ce90:	add	x0, x0, #0x0
   1ce94:	add	x1, x1, #0x0
   1ce98:	add	x3, x3, #0x0
   1ce9c:	mov	w2, #0x108                 	// #264
   1cea0:	bl	0 <__assert_fail>
   1cea4:	add	x1, x19, #0x10
   1cea8:	mov	w3, #0x8                   	// #8
   1ceac:	mov	x0, x19
   1ceb0:	mov	x2, xzr
   1ceb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ceb8:	ldr	w8, [x19, #8]
   1cebc:	b	1c9b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x44>
   1cec0:	add	x1, x19, #0x10
   1cec4:	mov	w3, #0x8                   	// #8
   1cec8:	mov	x0, x19
   1cecc:	mov	x2, xzr
   1ced0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ced4:	ldr	w8, [x19, #8]
   1ced8:	b	1cbf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x28c>
   1cedc:	add	x1, x19, #0x10
   1cee0:	mov	w3, #0x8                   	// #8
   1cee4:	mov	x0, x19
   1cee8:	mov	x2, xzr
   1ceec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cef0:	ldr	w8, [x19, #8]
   1cef4:	b	1ccac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x340>
   1cef8:	add	x1, x19, #0x10
   1cefc:	mov	w3, #0x8                   	// #8
   1cf00:	mov	x0, x19
   1cf04:	mov	x2, xzr
   1cf08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cf0c:	ldr	w8, [x19, #8]
   1cf10:	b	1ccd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x368>
   1cf14:	add	x1, x19, #0x10
   1cf18:	mov	w3, #0x8                   	// #8
   1cf1c:	mov	x0, x19
   1cf20:	mov	x2, xzr
   1cf24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cf28:	ldr	w8, [x19, #8]
   1cf2c:	b	1ce0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x4a0>
   1cf30:	mov	w15, #0x1                   	// #1
   1cf34:	cmn	x14, #0x4
   1cf38:	b.eq	1cf70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x604>  // b.none
   1cf3c:	add	w12, w12, w15
   1cf40:	and	w12, w12, w13
   1cf44:	lsl	x14, x12, #4
   1cf48:	ldr	x14, [x11, x14]
   1cf4c:	add	w15, w15, #0x1
   1cf50:	cmp	x14, x10
   1cf54:	b.ne	1cf34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x5c8>  // b.any
   1cf58:	mov	w12, w12
   1cf5c:	add	x10, x11, x12, lsl #4
   1cf60:	ldr	w23, [x10, #12]
   1cf64:	cmp	w8, w9
   1cf68:	b.cc	1ca40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0xd4>  // b.lo, b.ul, b.last
   1cf6c:	b	1cf7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x610>
   1cf70:	mov	x23, xzr
   1cf74:	cmp	w8, w9
   1cf78:	b.cc	1ca40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0xd4>  // b.lo, b.ul, b.last
   1cf7c:	add	x1, x19, #0x10
   1cf80:	mov	w3, #0x8                   	// #8
   1cf84:	mov	x0, x19
   1cf88:	mov	x2, xzr
   1cf8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cf90:	ldr	w8, [x19, #8]
   1cf94:	b	1ca40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0xd4>
   1cf98:	mov	w15, #0x1                   	// #1
   1cf9c:	cmn	x14, #0x4
   1cfa0:	b.eq	1cfd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x66c>  // b.none
   1cfa4:	add	w12, w12, w15
   1cfa8:	and	w12, w12, w13
   1cfac:	lsl	x14, x12, #4
   1cfb0:	ldr	x14, [x11, x14]
   1cfb4:	add	w15, w15, #0x1
   1cfb8:	cmp	x14, x10
   1cfbc:	b.ne	1cf9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x630>  // b.any
   1cfc0:	mov	w12, w12
   1cfc4:	add	x10, x11, x12, lsl #4
   1cfc8:	ldr	w23, [x10, #12]
   1cfcc:	cmp	w8, w9
   1cfd0:	b.cc	1cac4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x158>  // b.lo, b.ul, b.last
   1cfd4:	b	1cfe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x678>
   1cfd8:	mov	x23, xzr
   1cfdc:	cmp	w8, w9
   1cfe0:	b.cc	1cac4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x158>  // b.lo, b.ul, b.last
   1cfe4:	add	x1, x19, #0x10
   1cfe8:	mov	w3, #0x8                   	// #8
   1cfec:	mov	x0, x19
   1cff0:	mov	x2, xzr
   1cff4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cff8:	ldr	w8, [x19, #8]
   1cffc:	b	1cac4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x158>
   1d000:	mov	w15, #0x1                   	// #1
   1d004:	cmn	x14, #0x4
   1d008:	b.eq	1d040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6d4>  // b.none
   1d00c:	add	w12, w12, w15
   1d010:	and	w12, w12, w13
   1d014:	lsl	x14, x12, #4
   1d018:	ldr	x14, [x11, x14]
   1d01c:	add	w15, w15, #0x1
   1d020:	cmp	x14, x10
   1d024:	b.ne	1d004 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x698>  // b.any
   1d028:	mov	w12, w12
   1d02c:	add	x10, x11, x12, lsl #4
   1d030:	ldr	w23, [x10, #12]
   1d034:	cmp	w8, w9
   1d038:	b.cc	1cb48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x1dc>  // b.lo, b.ul, b.last
   1d03c:	b	1d04c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6e0>
   1d040:	mov	x23, xzr
   1d044:	cmp	w8, w9
   1d048:	b.cc	1cb48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x1dc>  // b.lo, b.ul, b.last
   1d04c:	add	x1, x19, #0x10
   1d050:	mov	w3, #0x8                   	// #8
   1d054:	mov	x0, x19
   1d058:	mov	x2, xzr
   1d05c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d060:	ldr	w8, [x19, #8]
   1d064:	b	1cb48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x1dc>
   1d068:	mov	w15, #0x1                   	// #1
   1d06c:	cmn	x14, #0x4
   1d070:	b.eq	1d0a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x73c>  // b.none
   1d074:	add	w12, w12, w15
   1d078:	and	w12, w12, w13
   1d07c:	lsl	x14, x12, #4
   1d080:	ldr	x14, [x11, x14]
   1d084:	add	w15, w15, #0x1
   1d088:	cmp	x14, x10
   1d08c:	b.ne	1d06c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x700>  // b.any
   1d090:	mov	w12, w12
   1d094:	add	x10, x11, x12, lsl #4
   1d098:	ldr	w23, [x10, #12]
   1d09c:	cmp	w8, w9
   1d0a0:	b.cc	1cbd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x264>  // b.lo, b.ul, b.last
   1d0a4:	b	1d0b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x748>
   1d0a8:	mov	x23, xzr
   1d0ac:	cmp	w8, w9
   1d0b0:	b.cc	1cbd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x264>  // b.lo, b.ul, b.last
   1d0b4:	add	x1, x19, #0x10
   1d0b8:	mov	w3, #0x8                   	// #8
   1d0bc:	mov	x0, x19
   1d0c0:	mov	x2, xzr
   1d0c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d0c8:	ldr	w8, [x19, #8]
   1d0cc:	b	1cbd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x264>
   1d0d0:	mov	w15, #0x1                   	// #1
   1d0d4:	cmn	x14, #0x4
   1d0d8:	b.eq	1d110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7a4>  // b.none
   1d0dc:	add	w12, w12, w15
   1d0e0:	and	w12, w12, w13
   1d0e4:	lsl	x14, x12, #4
   1d0e8:	ldr	x14, [x11, x14]
   1d0ec:	add	w15, w15, #0x1
   1d0f0:	cmp	x14, x10
   1d0f4:	b.ne	1d0d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x768>  // b.any
   1d0f8:	mov	w12, w12
   1d0fc:	add	x10, x11, x12, lsl #4
   1d100:	ldr	w23, [x10, #12]
   1d104:	cmp	w8, w9
   1d108:	b.cc	1cc84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x318>  // b.lo, b.ul, b.last
   1d10c:	b	1d11c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7b0>
   1d110:	mov	x23, xzr
   1d114:	cmp	w8, w9
   1d118:	b.cc	1cc84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x318>  // b.lo, b.ul, b.last
   1d11c:	add	x1, x19, #0x10
   1d120:	mov	w3, #0x8                   	// #8
   1d124:	mov	x0, x19
   1d128:	mov	x2, xzr
   1d12c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d130:	ldr	w8, [x19, #8]
   1d134:	b	1cc84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x318>
   1d138:	mov	w15, #0x1                   	// #1
   1d13c:	cmn	x14, #0x4
   1d140:	b.eq	1d178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x80c>  // b.none
   1d144:	add	w12, w12, w15
   1d148:	and	w12, w12, w13
   1d14c:	lsl	x14, x12, #4
   1d150:	ldr	x14, [x11, x14]
   1d154:	add	w15, w15, #0x1
   1d158:	cmp	x14, x10
   1d15c:	b.ne	1d13c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7d0>  // b.any
   1d160:	mov	w12, w12
   1d164:	add	x10, x11, x12, lsl #4
   1d168:	ldr	w23, [x10, #12]
   1d16c:	cmp	w8, w9
   1d170:	b.cc	1cd5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x3f0>  // b.lo, b.ul, b.last
   1d174:	b	1d184 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x818>
   1d178:	mov	x23, xzr
   1d17c:	cmp	w8, w9
   1d180:	b.cc	1cd5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x3f0>  // b.lo, b.ul, b.last
   1d184:	add	x1, x19, #0x10
   1d188:	mov	w3, #0x8                   	// #8
   1d18c:	mov	x0, x19
   1d190:	mov	x2, xzr
   1d194:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d198:	ldr	w8, [x19, #8]
   1d19c:	b	1cd5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x3f0>
   1d1a0:	mov	w15, #0x1                   	// #1
   1d1a4:	cmn	x14, #0x4
   1d1a8:	b.eq	1d1e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x874>  // b.none
   1d1ac:	add	w12, w12, w15
   1d1b0:	and	w12, w12, w13
   1d1b4:	lsl	x14, x12, #4
   1d1b8:	ldr	x14, [x11, x14]
   1d1bc:	add	w15, w15, #0x1
   1d1c0:	cmp	x14, x10
   1d1c4:	b.ne	1d1a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x838>  // b.any
   1d1c8:	mov	w12, w12
   1d1cc:	add	x10, x11, x12, lsl #4
   1d1d0:	ldr	w23, [x10, #12]
   1d1d4:	cmp	w8, w9
   1d1d8:	b.cc	1cde4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x478>  // b.lo, b.ul, b.last
   1d1dc:	b	1d1ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x880>
   1d1e0:	mov	x23, xzr
   1d1e4:	cmp	w8, w9
   1d1e8:	b.cc	1cde4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x478>  // b.lo, b.ul, b.last
   1d1ec:	add	x1, x19, #0x10
   1d1f0:	mov	w3, #0x8                   	// #8
   1d1f4:	mov	x0, x19
   1d1f8:	mov	x2, xzr
   1d1fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d200:	ldr	w8, [x19, #8]
   1d204:	b	1cde4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x478>
   1d208:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d20c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d210:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d214:	add	x0, x0, #0x0
   1d218:	add	x1, x1, #0x0
   1d21c:	add	x3, x3, #0x0
   1d220:	mov	w2, #0x43                  	// #67
   1d224:	bl	0 <__assert_fail>
   1d228:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d22c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d230:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d234:	add	x0, x0, #0x0
   1d238:	add	x1, x1, #0x0
   1d23c:	add	x3, x3, #0x0
   1d240:	mov	w2, #0x252                 	// #594
   1d244:	bl	0 <__assert_fail>
   1d248:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d24c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d250:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d254:	add	x0, x0, #0x0
   1d258:	add	x1, x1, #0x0
   1d25c:	add	x3, x3, #0x0
   1d260:	mov	w2, #0x436                 	// #1078
   1d264:	bl	0 <__assert_fail>
   1d268:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d26c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d270:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d274:	add	x0, x0, #0x0
   1d278:	add	x1, x1, #0x0
   1d27c:	add	x3, x3, #0x0
   1d280:	mov	w2, #0x121                 	// #289
   1d284:	bl	0 <__assert_fail>
   1d288:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d28c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d290:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d294:	add	x0, x0, #0x0
   1d298:	add	x1, x1, #0x0
   1d29c:	add	x3, x3, #0x0
   1d2a0:	mov	w2, #0x134                 	// #308
   1d2a4:	bl	0 <__assert_fail>
   1d2a8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d2ac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d2b0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d2b4:	add	x0, x0, #0x0
   1d2b8:	add	x1, x1, #0x0
   1d2bc:	add	x3, x3, #0x0
   1d2c0:	mov	w2, #0x134                 	// #308
   1d2c4:	bl	0 <__assert_fail>
   1d2c8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d2cc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d2d0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d2d4:	add	x0, x0, #0x0
   1d2d8:	add	x1, x1, #0x0
   1d2dc:	add	x3, x3, #0x0
   1d2e0:	mov	w2, #0x134                 	// #308
   1d2e4:	bl	0 <__assert_fail>
   1d2e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d2ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d2f0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d2f4:	add	x0, x0, #0x0
   1d2f8:	add	x1, x1, #0x0
   1d2fc:	add	x3, x3, #0x0
   1d300:	mov	w2, #0x121                 	// #289
   1d304:	bl	0 <__assert_fail>

000000000001d308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj>:
   1d308:	stp	x29, x30, [sp, #-64]!
   1d30c:	str	x23, [sp, #16]
   1d310:	stp	x22, x21, [sp, #32]
   1d314:	stp	x20, x19, [sp, #48]
   1d318:	mov	x29, sp
   1d31c:	ldrb	w9, [x1, #1]
   1d320:	ldp	w8, w10, [x2, #8]
   1d324:	mov	w20, w3
   1d328:	mov	x19, x2
   1d32c:	and	w9, w9, #0x7f
   1d330:	cmp	w9, #0x1
   1d334:	cset	w9, eq  // eq = none
   1d338:	mov	x22, x1
   1d33c:	mov	x21, x0
   1d340:	cmp	w8, w10
   1d344:	orr	x23, x9, #0x2
   1d348:	b.cs	1d63c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x334>  // b.hs, b.nlast
   1d34c:	ldr	x9, [x19]
   1d350:	str	x23, [x9, w8, uxtw #3]
   1d354:	ldp	w8, w9, [x19, #8]
   1d358:	cmp	w8, w9
   1d35c:	b.cs	1d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1d360:	add	w8, w8, #0x1
   1d364:	mov	x0, x22
   1d368:	str	w8, [x19, #8]
   1d36c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d370:	ldr	w9, [x21, #304]
   1d374:	cbz	w9, 1d6f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x3f0>
   1d378:	orr	x8, x0, #0x4
   1d37c:	cmn	x8, #0x4
   1d380:	b.eq	1d87c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x574>  // b.none
   1d384:	ldr	x8, [x21, #288]
   1d388:	ubfx	x10, x0, #4, #28
   1d38c:	eor	w11, w10, w0, lsr #9
   1d390:	sub	w10, w9, #0x1
   1d394:	and	w9, w11, w10
   1d398:	lsl	x11, x9, #4
   1d39c:	ldr	x11, [x8, x11]
   1d3a0:	cmp	x11, x0
   1d3a4:	b.ne	1d6c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x3c0>  // b.any
   1d3a8:	add	x8, x8, x9, lsl #4
   1d3ac:	ldr	w23, [x8, #12]
   1d3b0:	ldp	w8, w9, [x19, #8]
   1d3b4:	cmp	w8, w9
   1d3b8:	b.cs	1d708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x400>  // b.hs, b.nlast
   1d3bc:	ldr	x9, [x19]
   1d3c0:	str	x23, [x9, w8, uxtw #3]
   1d3c4:	ldp	w8, w9, [x19, #8]
   1d3c8:	cmp	w8, w9
   1d3cc:	b.cs	1d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1d3d0:	add	w8, w8, #0x1
   1d3d4:	str	w8, [x19, #8]
   1d3d8:	ldr	w10, [x22, #8]
   1d3dc:	cmp	w10, #0x1
   1d3e0:	b.ls	1d89c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x594>  // b.plast
   1d3e4:	sub	x10, x22, x10, lsl #3
   1d3e8:	ldr	x10, [x10, #8]
   1d3ec:	cbz	x10, 1d3f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xf0>
   1d3f0:	ldrb	w11, [x10]
   1d3f4:	cbnz	w11, 1d8bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x5b4>
   1d3f8:	ldr	w12, [x21, #304]
   1d3fc:	cbz	w12, 1d764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x45c>
   1d400:	orr	x11, x10, #0x4
   1d404:	cmn	x11, #0x4
   1d408:	b.eq	1d87c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x574>  // b.none
   1d40c:	ldr	x11, [x21, #288]
   1d410:	ubfx	x13, x10, #4, #28
   1d414:	eor	w14, w13, w10, lsr #9
   1d418:	sub	w13, w12, #0x1
   1d41c:	and	w12, w14, w13
   1d420:	lsl	x14, x12, #4
   1d424:	ldr	x14, [x11, x14]
   1d428:	cmp	x14, x10
   1d42c:	b.ne	1d724 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x41c>  // b.any
   1d430:	add	x10, x11, x12, lsl #4
   1d434:	ldr	w23, [x10, #12]
   1d438:	cmp	w8, w9
   1d43c:	b.cs	1d770 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x468>  // b.hs, b.nlast
   1d440:	ldr	x9, [x19]
   1d444:	str	x23, [x9, w8, uxtw #3]
   1d448:	ldp	w8, w9, [x19, #8]
   1d44c:	cmp	w8, w9
   1d450:	b.cs	1d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1d454:	add	w8, w8, #0x1
   1d458:	str	w8, [x19, #8]
   1d45c:	ldr	w10, [x22, #8]
   1d460:	cmp	w10, #0x2
   1d464:	b.ls	1d89c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x594>  // b.plast
   1d468:	sub	x10, x22, x10, lsl #3
   1d46c:	ldr	x10, [x10, #16]
   1d470:	cbz	x10, 1d480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x178>
   1d474:	ldrb	w11, [x10]
   1d478:	cmp	w11, #0xf
   1d47c:	b.ne	1d8dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x5d4>  // b.any
   1d480:	ldr	w12, [x21, #304]
   1d484:	cbz	w12, 1d7cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4c4>
   1d488:	orr	x11, x10, #0x4
   1d48c:	cmn	x11, #0x4
   1d490:	b.eq	1d87c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x574>  // b.none
   1d494:	ldr	x11, [x21, #288]
   1d498:	ubfx	x13, x10, #4, #28
   1d49c:	eor	w14, w13, w10, lsr #9
   1d4a0:	sub	w13, w12, #0x1
   1d4a4:	and	w12, w14, w13
   1d4a8:	lsl	x14, x12, #4
   1d4ac:	ldr	x14, [x11, x14]
   1d4b0:	cmp	x14, x10
   1d4b4:	b.ne	1d78c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x484>  // b.any
   1d4b8:	add	x10, x11, x12, lsl #4
   1d4bc:	ldr	w23, [x10, #12]
   1d4c0:	cmp	w8, w9
   1d4c4:	b.cs	1d7d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4d0>  // b.hs, b.nlast
   1d4c8:	ldr	x9, [x19]
   1d4cc:	str	x23, [x9, w8, uxtw #3]
   1d4d0:	ldp	w8, w9, [x19, #8]
   1d4d4:	cmp	w8, w9
   1d4d8:	b.cs	1d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1d4dc:	add	w8, w8, #0x1
   1d4e0:	str	w8, [x19, #8]
   1d4e4:	ldr	w23, [x22, #24]
   1d4e8:	cmp	w8, w9
   1d4ec:	b.cs	1d658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x350>  // b.hs, b.nlast
   1d4f0:	ldr	x9, [x19]
   1d4f4:	str	x23, [x9, w8, uxtw #3]
   1d4f8:	ldp	w8, w9, [x19, #8]
   1d4fc:	cmp	w8, w9
   1d500:	b.cs	1d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1d504:	add	w8, w8, #0x1
   1d508:	str	w8, [x19, #8]
   1d50c:	ldr	w10, [x22, #8]
   1d510:	cmp	w10, #0x3
   1d514:	b.ls	1d89c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x594>  // b.plast
   1d518:	sub	x10, x22, x10, lsl #3
   1d51c:	ldr	x10, [x10, #24]
   1d520:	cbz	x10, 1d534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x22c>
   1d524:	ldrb	w11, [x10]
   1d528:	sub	w11, w11, #0xb
   1d52c:	cmp	w11, #0x4
   1d530:	b.cs	1d8fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x5f4>  // b.hs, b.nlast
   1d534:	ldr	w12, [x21, #304]
   1d538:	cbz	w12, 1d834 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x52c>
   1d53c:	orr	x11, x10, #0x4
   1d540:	cmn	x11, #0x4
   1d544:	b.eq	1d87c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x574>  // b.none
   1d548:	ldr	x11, [x21, #288]
   1d54c:	ubfx	x13, x10, #4, #28
   1d550:	eor	w14, w13, w10, lsr #9
   1d554:	sub	w13, w12, #0x1
   1d558:	and	w12, w14, w13
   1d55c:	lsl	x14, x12, #4
   1d560:	ldr	x14, [x11, x14]
   1d564:	cmp	x14, x10
   1d568:	b.ne	1d7f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4ec>  // b.any
   1d56c:	add	x10, x11, x12, lsl #4
   1d570:	ldr	w23, [x10, #12]
   1d574:	cmp	w8, w9
   1d578:	b.cs	1d840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x538>  // b.hs, b.nlast
   1d57c:	ldr	x9, [x19]
   1d580:	str	x23, [x9, w8, uxtw #3]
   1d584:	ldp	w8, w9, [x19, #8]
   1d588:	cmp	w8, w9
   1d58c:	b.cs	1d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1d590:	add	w8, w8, #0x1
   1d594:	str	w8, [x19, #8]
   1d598:	ldrh	w23, [x22, #32]
   1d59c:	cmp	w8, w9
   1d5a0:	b.cs	1d674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x36c>  // b.hs, b.nlast
   1d5a4:	ldr	x9, [x19]
   1d5a8:	str	x23, [x9, w8, uxtw #3]
   1d5ac:	ldp	w8, w9, [x19, #8]
   1d5b0:	cmp	w8, w9
   1d5b4:	b.cs	1d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1d5b8:	add	w8, w8, #0x1
   1d5bc:	str	w8, [x19, #8]
   1d5c0:	ldr	w23, [x22, #36]
   1d5c4:	cmp	w8, w9
   1d5c8:	b.cs	1d690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x388>  // b.hs, b.nlast
   1d5cc:	ldr	x9, [x19]
   1d5d0:	str	x23, [x9, w8, uxtw #3]
   1d5d4:	ldp	w8, w9, [x19, #8]
   1d5d8:	cmp	w8, w9
   1d5dc:	b.cs	1d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1d5e0:	add	w8, w8, #0x1
   1d5e4:	str	w8, [x19, #8]
   1d5e8:	ldr	w22, [x22, #28]
   1d5ec:	cmp	w8, w9
   1d5f0:	b.cs	1d6ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x3a4>  // b.hs, b.nlast
   1d5f4:	ldr	x9, [x19]
   1d5f8:	str	x22, [x9, w8, uxtw #3]
   1d5fc:	ldp	w8, w9, [x19, #8]
   1d600:	cmp	w8, w9
   1d604:	b.cs	1d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1d608:	add	w8, w8, #0x1
   1d60c:	str	w8, [x19, #8]
   1d610:	ldr	x0, [x21]
   1d614:	mov	w1, #0x1c                  	// #28
   1d618:	mov	x2, x19
   1d61c:	mov	w3, w20
   1d620:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d624:	str	wzr, [x19, #8]
   1d628:	ldp	x20, x19, [sp, #48]
   1d62c:	ldp	x22, x21, [sp, #32]
   1d630:	ldr	x23, [sp, #16]
   1d634:	ldp	x29, x30, [sp], #64
   1d638:	ret
   1d63c:	add	x1, x19, #0x10
   1d640:	mov	w3, #0x8                   	// #8
   1d644:	mov	x0, x19
   1d648:	mov	x2, xzr
   1d64c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d650:	ldr	w8, [x19, #8]
   1d654:	b	1d34c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x44>
   1d658:	add	x1, x19, #0x10
   1d65c:	mov	w3, #0x8                   	// #8
   1d660:	mov	x0, x19
   1d664:	mov	x2, xzr
   1d668:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d66c:	ldr	w8, [x19, #8]
   1d670:	b	1d4f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x1e8>
   1d674:	add	x1, x19, #0x10
   1d678:	mov	w3, #0x8                   	// #8
   1d67c:	mov	x0, x19
   1d680:	mov	x2, xzr
   1d684:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d688:	ldr	w8, [x19, #8]
   1d68c:	b	1d5a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x29c>
   1d690:	add	x1, x19, #0x10
   1d694:	mov	w3, #0x8                   	// #8
   1d698:	mov	x0, x19
   1d69c:	mov	x2, xzr
   1d6a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d6a4:	ldr	w8, [x19, #8]
   1d6a8:	b	1d5cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x2c4>
   1d6ac:	add	x1, x19, #0x10
   1d6b0:	mov	w3, #0x8                   	// #8
   1d6b4:	mov	x0, x19
   1d6b8:	mov	x2, xzr
   1d6bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d6c0:	ldr	w8, [x19, #8]
   1d6c4:	b	1d5f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x2ec>
   1d6c8:	mov	w12, #0x1                   	// #1
   1d6cc:	cmn	x11, #0x4
   1d6d0:	b.eq	1d6f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x3f0>  // b.none
   1d6d4:	add	w9, w9, w12
   1d6d8:	and	w9, w9, w10
   1d6dc:	lsl	x11, x9, #4
   1d6e0:	ldr	x11, [x8, x11]
   1d6e4:	add	w12, w12, #0x1
   1d6e8:	cmp	x11, x0
   1d6ec:	b.ne	1d6cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x3c4>  // b.any
   1d6f0:	mov	w9, w9
   1d6f4:	b	1d3a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xa0>
   1d6f8:	mov	x23, xzr
   1d6fc:	ldp	w8, w9, [x19, #8]
   1d700:	cmp	w8, w9
   1d704:	b.cc	1d3bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xb4>  // b.lo, b.ul, b.last
   1d708:	add	x1, x19, #0x10
   1d70c:	mov	w3, #0x8                   	// #8
   1d710:	mov	x0, x19
   1d714:	mov	x2, xzr
   1d718:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d71c:	ldr	w8, [x19, #8]
   1d720:	b	1d3bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xb4>
   1d724:	mov	w15, #0x1                   	// #1
   1d728:	cmn	x14, #0x4
   1d72c:	b.eq	1d764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x45c>  // b.none
   1d730:	add	w12, w12, w15
   1d734:	and	w12, w12, w13
   1d738:	lsl	x14, x12, #4
   1d73c:	ldr	x14, [x11, x14]
   1d740:	add	w15, w15, #0x1
   1d744:	cmp	x14, x10
   1d748:	b.ne	1d728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x420>  // b.any
   1d74c:	mov	w12, w12
   1d750:	add	x10, x11, x12, lsl #4
   1d754:	ldr	w23, [x10, #12]
   1d758:	cmp	w8, w9
   1d75c:	b.cc	1d440 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x138>  // b.lo, b.ul, b.last
   1d760:	b	1d770 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x468>
   1d764:	mov	x23, xzr
   1d768:	cmp	w8, w9
   1d76c:	b.cc	1d440 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x138>  // b.lo, b.ul, b.last
   1d770:	add	x1, x19, #0x10
   1d774:	mov	w3, #0x8                   	// #8
   1d778:	mov	x0, x19
   1d77c:	mov	x2, xzr
   1d780:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d784:	ldr	w8, [x19, #8]
   1d788:	b	1d440 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x138>
   1d78c:	mov	w15, #0x1                   	// #1
   1d790:	cmn	x14, #0x4
   1d794:	b.eq	1d7cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4c4>  // b.none
   1d798:	add	w12, w12, w15
   1d79c:	and	w12, w12, w13
   1d7a0:	lsl	x14, x12, #4
   1d7a4:	ldr	x14, [x11, x14]
   1d7a8:	add	w15, w15, #0x1
   1d7ac:	cmp	x14, x10
   1d7b0:	b.ne	1d790 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x488>  // b.any
   1d7b4:	mov	w12, w12
   1d7b8:	add	x10, x11, x12, lsl #4
   1d7bc:	ldr	w23, [x10, #12]
   1d7c0:	cmp	w8, w9
   1d7c4:	b.cc	1d4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x1c0>  // b.lo, b.ul, b.last
   1d7c8:	b	1d7d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4d0>
   1d7cc:	mov	x23, xzr
   1d7d0:	cmp	w8, w9
   1d7d4:	b.cc	1d4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x1c0>  // b.lo, b.ul, b.last
   1d7d8:	add	x1, x19, #0x10
   1d7dc:	mov	w3, #0x8                   	// #8
   1d7e0:	mov	x0, x19
   1d7e4:	mov	x2, xzr
   1d7e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d7ec:	ldr	w8, [x19, #8]
   1d7f0:	b	1d4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x1c0>
   1d7f4:	mov	w15, #0x1                   	// #1
   1d7f8:	cmn	x14, #0x4
   1d7fc:	b.eq	1d834 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x52c>  // b.none
   1d800:	add	w12, w12, w15
   1d804:	and	w12, w12, w13
   1d808:	lsl	x14, x12, #4
   1d80c:	ldr	x14, [x11, x14]
   1d810:	add	w15, w15, #0x1
   1d814:	cmp	x14, x10
   1d818:	b.ne	1d7f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4f0>  // b.any
   1d81c:	mov	w12, w12
   1d820:	add	x10, x11, x12, lsl #4
   1d824:	ldr	w23, [x10, #12]
   1d828:	cmp	w8, w9
   1d82c:	b.cc	1d57c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x274>  // b.lo, b.ul, b.last
   1d830:	b	1d840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x538>
   1d834:	mov	x23, xzr
   1d838:	cmp	w8, w9
   1d83c:	b.cc	1d57c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x274>  // b.lo, b.ul, b.last
   1d840:	add	x1, x19, #0x10
   1d844:	mov	w3, #0x8                   	// #8
   1d848:	mov	x0, x19
   1d84c:	mov	x2, xzr
   1d850:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d854:	ldr	w8, [x19, #8]
   1d858:	b	1d57c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x274>
   1d85c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d860:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d864:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d868:	add	x0, x0, #0x0
   1d86c:	add	x1, x1, #0x0
   1d870:	add	x3, x3, #0x0
   1d874:	mov	w2, #0x43                  	// #67
   1d878:	bl	0 <__assert_fail>
   1d87c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d880:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d884:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d888:	add	x0, x0, #0x0
   1d88c:	add	x1, x1, #0x0
   1d890:	add	x3, x3, #0x0
   1d894:	mov	w2, #0x252                 	// #594
   1d898:	bl	0 <__assert_fail>
   1d89c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d8a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d8a4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d8a8:	add	x0, x0, #0x0
   1d8ac:	add	x1, x1, #0x0
   1d8b0:	add	x3, x3, #0x0
   1d8b4:	mov	w2, #0x436                 	// #1078
   1d8b8:	bl	0 <__assert_fail>
   1d8bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d8c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d8c4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d8c8:	add	x0, x0, #0x0
   1d8cc:	add	x1, x1, #0x0
   1d8d0:	add	x3, x3, #0x0
   1d8d4:	mov	w2, #0x121                 	// #289
   1d8d8:	bl	0 <__assert_fail>
   1d8dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d8e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d8e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d8e8:	add	x0, x0, #0x0
   1d8ec:	add	x1, x1, #0x0
   1d8f0:	add	x3, x3, #0x0
   1d8f4:	mov	w2, #0x134                 	// #308
   1d8f8:	bl	0 <__assert_fail>
   1d8fc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d900:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d904:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d908:	add	x0, x0, #0x0
   1d90c:	add	x1, x1, #0x0
   1d910:	add	x3, x3, #0x0
   1d914:	mov	w2, #0x134                 	// #308
   1d918:	bl	0 <__assert_fail>

000000000001d91c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj>:
   1d91c:	stp	x29, x30, [sp, #-64]!
   1d920:	str	x23, [sp, #16]
   1d924:	stp	x22, x21, [sp, #32]
   1d928:	stp	x20, x19, [sp, #48]
   1d92c:	mov	x29, sp
   1d930:	ldrb	w9, [x1, #1]
   1d934:	ldp	w8, w10, [x2, #8]
   1d938:	mov	w20, w3
   1d93c:	mov	x19, x2
   1d940:	and	w9, w9, #0x7f
   1d944:	cmp	w9, #0x1
   1d948:	mov	x22, x1
   1d94c:	cset	w23, eq  // eq = none
   1d950:	cmp	w8, w10
   1d954:	mov	x21, x0
   1d958:	b.cs	1db60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x244>  // b.hs, b.nlast
   1d95c:	ldr	x9, [x19]
   1d960:	str	x23, [x9, w8, uxtw #3]
   1d964:	ldp	w8, w9, [x19, #8]
   1d968:	cmp	w8, w9
   1d96c:	b.cs	1dcd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3b4>  // b.hs, b.nlast
   1d970:	add	w8, w8, #0x1
   1d974:	str	w8, [x19, #8]
   1d978:	ldr	w10, [x22, #8]
   1d97c:	cbz	w10, 1dd10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3f4>
   1d980:	sub	x10, x22, x10, lsl #3
   1d984:	ldr	x10, [x10]
   1d988:	cbz	x10, 1d99c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x80>
   1d98c:	ldrb	w11, [x10]
   1d990:	sub	w11, w11, #0x11
   1d994:	cmp	w11, #0x3
   1d998:	b.cs	1dd30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x414>  // b.hs, b.nlast
   1d99c:	ldr	w12, [x21, #304]
   1d9a0:	cbz	w12, 1dbd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2bc>
   1d9a4:	orr	x11, x10, #0x4
   1d9a8:	cmn	x11, #0x4
   1d9ac:	b.eq	1dcf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3d4>  // b.none
   1d9b0:	ldr	x11, [x21, #288]
   1d9b4:	ubfx	x13, x10, #4, #28
   1d9b8:	eor	w14, w13, w10, lsr #9
   1d9bc:	sub	w13, w12, #0x1
   1d9c0:	and	w12, w14, w13
   1d9c4:	lsl	x14, x12, #4
   1d9c8:	ldr	x14, [x11, x14]
   1d9cc:	cmp	x14, x10
   1d9d0:	b.ne	1db98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x27c>  // b.any
   1d9d4:	add	x10, x11, x12, lsl #4
   1d9d8:	ldr	w23, [x10, #12]
   1d9dc:	cmp	w8, w9
   1d9e0:	b.cs	1dbe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2c8>  // b.hs, b.nlast
   1d9e4:	ldr	x9, [x19]
   1d9e8:	str	x23, [x9, w8, uxtw #3]
   1d9ec:	ldp	w8, w9, [x19, #8]
   1d9f0:	cmp	w8, w9
   1d9f4:	b.cs	1dcd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3b4>  // b.hs, b.nlast
   1d9f8:	add	w8, w8, #0x1
   1d9fc:	str	w8, [x19, #8]
   1da00:	ldr	w10, [x22, #8]
   1da04:	cmp	w10, #0x1
   1da08:	b.ls	1dd10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3f4>  // b.plast
   1da0c:	sub	x10, x22, x10, lsl #3
   1da10:	ldr	x10, [x10, #8]
   1da14:	cbz	x10, 1da20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x104>
   1da18:	ldrb	w11, [x10]
   1da1c:	cbnz	w11, 1dd50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x434>
   1da20:	ldr	w12, [x21, #304]
   1da24:	cbz	w12, 1dc40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x324>
   1da28:	orr	x11, x10, #0x4
   1da2c:	cmn	x11, #0x4
   1da30:	b.eq	1dcf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3d4>  // b.none
   1da34:	ldr	x11, [x21, #288]
   1da38:	ubfx	x13, x10, #4, #28
   1da3c:	eor	w14, w13, w10, lsr #9
   1da40:	sub	w13, w12, #0x1
   1da44:	and	w12, w14, w13
   1da48:	lsl	x14, x12, #4
   1da4c:	ldr	x14, [x11, x14]
   1da50:	cmp	x14, x10
   1da54:	b.ne	1dc00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2e4>  // b.any
   1da58:	add	x10, x11, x12, lsl #4
   1da5c:	ldr	w23, [x10, #12]
   1da60:	cmp	w8, w9
   1da64:	b.cs	1dc4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x330>  // b.hs, b.nlast
   1da68:	ldr	x9, [x19]
   1da6c:	str	x23, [x9, w8, uxtw #3]
   1da70:	ldp	w8, w9, [x19, #8]
   1da74:	cmp	w8, w9
   1da78:	b.cs	1dcd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3b4>  // b.hs, b.nlast
   1da7c:	add	w8, w8, #0x1
   1da80:	str	w8, [x19, #8]
   1da84:	ldr	w10, [x22, #8]
   1da88:	cmp	w10, #0x2
   1da8c:	b.ls	1dd10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3f4>  // b.plast
   1da90:	sub	x10, x22, x10, lsl #3
   1da94:	ldr	x10, [x10, #16]
   1da98:	cbz	x10, 1daa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x18c>
   1da9c:	ldrb	w11, [x10]
   1daa0:	cmp	w11, #0xf
   1daa4:	b.ne	1dd70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x454>  // b.any
   1daa8:	ldr	w12, [x21, #304]
   1daac:	cbz	w12, 1dca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x38c>
   1dab0:	orr	x11, x10, #0x4
   1dab4:	cmn	x11, #0x4
   1dab8:	b.eq	1dcf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3d4>  // b.none
   1dabc:	ldr	x11, [x21, #288]
   1dac0:	ubfx	x13, x10, #4, #28
   1dac4:	eor	w14, w13, w10, lsr #9
   1dac8:	sub	w13, w12, #0x1
   1dacc:	and	w12, w14, w13
   1dad0:	lsl	x14, x12, #4
   1dad4:	ldr	x14, [x11, x14]
   1dad8:	cmp	x14, x10
   1dadc:	b.ne	1dc68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x34c>  // b.any
   1dae0:	add	x10, x11, x12, lsl #4
   1dae4:	ldr	w23, [x10, #12]
   1dae8:	cmp	w8, w9
   1daec:	b.cs	1dcb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x398>  // b.hs, b.nlast
   1daf0:	ldr	x9, [x19]
   1daf4:	str	x23, [x9, w8, uxtw #3]
   1daf8:	ldp	w8, w9, [x19, #8]
   1dafc:	cmp	w8, w9
   1db00:	b.cs	1dcd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3b4>  // b.hs, b.nlast
   1db04:	add	w8, w8, #0x1
   1db08:	str	w8, [x19, #8]
   1db0c:	ldr	w22, [x22, #24]
   1db10:	cmp	w8, w9
   1db14:	b.cs	1db7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x260>  // b.hs, b.nlast
   1db18:	ldr	x9, [x19]
   1db1c:	str	x22, [x9, w8, uxtw #3]
   1db20:	ldp	w8, w9, [x19, #8]
   1db24:	cmp	w8, w9
   1db28:	b.cs	1dcd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3b4>  // b.hs, b.nlast
   1db2c:	add	w8, w8, #0x1
   1db30:	str	w8, [x19, #8]
   1db34:	ldr	x0, [x21]
   1db38:	mov	w1, #0x28                  	// #40
   1db3c:	mov	x2, x19
   1db40:	mov	w3, w20
   1db44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1db48:	str	wzr, [x19, #8]
   1db4c:	ldp	x20, x19, [sp, #48]
   1db50:	ldp	x22, x21, [sp, #32]
   1db54:	ldr	x23, [sp, #16]
   1db58:	ldp	x29, x30, [sp], #64
   1db5c:	ret
   1db60:	add	x1, x19, #0x10
   1db64:	mov	w3, #0x8                   	// #8
   1db68:	mov	x0, x19
   1db6c:	mov	x2, xzr
   1db70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1db74:	ldr	w8, [x19, #8]
   1db78:	b	1d95c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x40>
   1db7c:	add	x1, x19, #0x10
   1db80:	mov	w3, #0x8                   	// #8
   1db84:	mov	x0, x19
   1db88:	mov	x2, xzr
   1db8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1db90:	ldr	w8, [x19, #8]
   1db94:	b	1db18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x1fc>
   1db98:	mov	w15, #0x1                   	// #1
   1db9c:	cmn	x14, #0x4
   1dba0:	b.eq	1dbd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2bc>  // b.none
   1dba4:	add	w12, w12, w15
   1dba8:	and	w12, w12, w13
   1dbac:	lsl	x14, x12, #4
   1dbb0:	ldr	x14, [x11, x14]
   1dbb4:	add	w15, w15, #0x1
   1dbb8:	cmp	x14, x10
   1dbbc:	b.ne	1db9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x280>  // b.any
   1dbc0:	mov	w12, w12
   1dbc4:	add	x10, x11, x12, lsl #4
   1dbc8:	ldr	w23, [x10, #12]
   1dbcc:	cmp	w8, w9
   1dbd0:	b.cc	1d9e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0xc8>  // b.lo, b.ul, b.last
   1dbd4:	b	1dbe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2c8>
   1dbd8:	mov	x23, xzr
   1dbdc:	cmp	w8, w9
   1dbe0:	b.cc	1d9e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0xc8>  // b.lo, b.ul, b.last
   1dbe4:	add	x1, x19, #0x10
   1dbe8:	mov	w3, #0x8                   	// #8
   1dbec:	mov	x0, x19
   1dbf0:	mov	x2, xzr
   1dbf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dbf8:	ldr	w8, [x19, #8]
   1dbfc:	b	1d9e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0xc8>
   1dc00:	mov	w15, #0x1                   	// #1
   1dc04:	cmn	x14, #0x4
   1dc08:	b.eq	1dc40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x324>  // b.none
   1dc0c:	add	w12, w12, w15
   1dc10:	and	w12, w12, w13
   1dc14:	lsl	x14, x12, #4
   1dc18:	ldr	x14, [x11, x14]
   1dc1c:	add	w15, w15, #0x1
   1dc20:	cmp	x14, x10
   1dc24:	b.ne	1dc04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2e8>  // b.any
   1dc28:	mov	w12, w12
   1dc2c:	add	x10, x11, x12, lsl #4
   1dc30:	ldr	w23, [x10, #12]
   1dc34:	cmp	w8, w9
   1dc38:	b.cc	1da68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x14c>  // b.lo, b.ul, b.last
   1dc3c:	b	1dc4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x330>
   1dc40:	mov	x23, xzr
   1dc44:	cmp	w8, w9
   1dc48:	b.cc	1da68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x14c>  // b.lo, b.ul, b.last
   1dc4c:	add	x1, x19, #0x10
   1dc50:	mov	w3, #0x8                   	// #8
   1dc54:	mov	x0, x19
   1dc58:	mov	x2, xzr
   1dc5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dc60:	ldr	w8, [x19, #8]
   1dc64:	b	1da68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x14c>
   1dc68:	mov	w15, #0x1                   	// #1
   1dc6c:	cmn	x14, #0x4
   1dc70:	b.eq	1dca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x38c>  // b.none
   1dc74:	add	w12, w12, w15
   1dc78:	and	w12, w12, w13
   1dc7c:	lsl	x14, x12, #4
   1dc80:	ldr	x14, [x11, x14]
   1dc84:	add	w15, w15, #0x1
   1dc88:	cmp	x14, x10
   1dc8c:	b.ne	1dc6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x350>  // b.any
   1dc90:	mov	w12, w12
   1dc94:	add	x10, x11, x12, lsl #4
   1dc98:	ldr	w23, [x10, #12]
   1dc9c:	cmp	w8, w9
   1dca0:	b.cc	1daf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x1d4>  // b.lo, b.ul, b.last
   1dca4:	b	1dcb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x398>
   1dca8:	mov	x23, xzr
   1dcac:	cmp	w8, w9
   1dcb0:	b.cc	1daf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x1d4>  // b.lo, b.ul, b.last
   1dcb4:	add	x1, x19, #0x10
   1dcb8:	mov	w3, #0x8                   	// #8
   1dcbc:	mov	x0, x19
   1dcc0:	mov	x2, xzr
   1dcc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dcc8:	ldr	w8, [x19, #8]
   1dccc:	b	1daf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x1d4>
   1dcd0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcd4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcd8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcdc:	add	x0, x0, #0x0
   1dce0:	add	x1, x1, #0x0
   1dce4:	add	x3, x3, #0x0
   1dce8:	mov	w2, #0x43                  	// #67
   1dcec:	bl	0 <__assert_fail>
   1dcf0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcf4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcf8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcfc:	add	x0, x0, #0x0
   1dd00:	add	x1, x1, #0x0
   1dd04:	add	x3, x3, #0x0
   1dd08:	mov	w2, #0x252                 	// #594
   1dd0c:	bl	0 <__assert_fail>
   1dd10:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd14:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd18:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd1c:	add	x0, x0, #0x0
   1dd20:	add	x1, x1, #0x0
   1dd24:	add	x3, x3, #0x0
   1dd28:	mov	w2, #0x436                 	// #1078
   1dd2c:	bl	0 <__assert_fail>
   1dd30:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd34:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd38:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd3c:	add	x0, x0, #0x0
   1dd40:	add	x1, x1, #0x0
   1dd44:	add	x3, x3, #0x0
   1dd48:	mov	w2, #0x134                 	// #308
   1dd4c:	bl	0 <__assert_fail>
   1dd50:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd54:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd58:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd5c:	add	x0, x0, #0x0
   1dd60:	add	x1, x1, #0x0
   1dd64:	add	x3, x3, #0x0
   1dd68:	mov	w2, #0x121                 	// #289
   1dd6c:	bl	0 <__assert_fail>
   1dd70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd78:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd7c:	add	x0, x0, #0x0
   1dd80:	add	x1, x1, #0x0
   1dd84:	add	x3, x3, #0x0
   1dd88:	mov	w2, #0x134                 	// #308
   1dd8c:	bl	0 <__assert_fail>

000000000001dd90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj>:
   1dd90:	stp	x29, x30, [sp, #-64]!
   1dd94:	str	x23, [sp, #16]
   1dd98:	stp	x22, x21, [sp, #32]
   1dd9c:	stp	x20, x19, [sp, #48]
   1dda0:	mov	x29, sp
   1dda4:	ldrb	w9, [x1, #1]
   1dda8:	ldp	w8, w10, [x2, #8]
   1ddac:	mov	w20, w3
   1ddb0:	mov	x19, x2
   1ddb4:	and	w9, w9, #0x7f
   1ddb8:	cmp	w9, #0x1
   1ddbc:	mov	x22, x1
   1ddc0:	cset	w23, eq  // eq = none
   1ddc4:	cmp	w8, w10
   1ddc8:	mov	x21, x0
   1ddcc:	b.cs	1e104 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x374>  // b.hs, b.nlast
   1ddd0:	ldr	x9, [x19]
   1ddd4:	str	x23, [x9, w8, uxtw #3]
   1ddd8:	ldp	w8, w9, [x19, #8]
   1dddc:	cmp	w8, w9
   1dde0:	b.cs	1e360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5d0>  // b.hs, b.nlast
   1dde4:	add	w8, w8, #0x1
   1dde8:	str	w8, [x19, #8]
   1ddec:	ldr	w10, [x22, #8]
   1ddf0:	cbz	w10, 1e3a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x610>
   1ddf4:	sub	x10, x22, x10, lsl #3
   1ddf8:	ldr	x10, [x10]
   1ddfc:	cbz	x10, 1de08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x78>
   1de00:	ldrb	w11, [x10]
   1de04:	cbnz	w11, 1e3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x630>
   1de08:	ldr	w12, [x21, #304]
   1de0c:	cbz	w12, 1e198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x408>
   1de10:	orr	x11, x10, #0x4
   1de14:	cmn	x11, #0x4
   1de18:	b.eq	1e380 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5f0>  // b.none
   1de1c:	ldr	x11, [x21, #288]
   1de20:	ubfx	x13, x10, #4, #28
   1de24:	eor	w14, w13, w10, lsr #9
   1de28:	sub	w13, w12, #0x1
   1de2c:	and	w12, w14, w13
   1de30:	lsl	x14, x12, #4
   1de34:	ldr	x14, [x11, x14]
   1de38:	cmp	x14, x10
   1de3c:	b.ne	1e158 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x3c8>  // b.any
   1de40:	add	x10, x11, x12, lsl #4
   1de44:	ldr	w23, [x10, #12]
   1de48:	cmp	w8, w9
   1de4c:	b.cs	1e1a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x414>  // b.hs, b.nlast
   1de50:	ldr	x9, [x19]
   1de54:	str	x23, [x9, w8, uxtw #3]
   1de58:	ldp	w8, w9, [x19, #8]
   1de5c:	cmp	w8, w9
   1de60:	b.cs	1e360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5d0>  // b.hs, b.nlast
   1de64:	add	w8, w8, #0x1
   1de68:	str	w8, [x19, #8]
   1de6c:	ldr	w10, [x22, #8]
   1de70:	cmp	w10, #0x1
   1de74:	b.ls	1e3a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x610>  // b.plast
   1de78:	sub	x10, x22, x10, lsl #3
   1de7c:	ldr	x10, [x10, #8]
   1de80:	cbz	x10, 1de90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x100>
   1de84:	ldrb	w11, [x10]
   1de88:	cmp	w11, #0xf
   1de8c:	b.ne	1e3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x650>  // b.any
   1de90:	ldr	w12, [x21, #304]
   1de94:	cbz	w12, 1e200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x470>
   1de98:	orr	x11, x10, #0x4
   1de9c:	cmn	x11, #0x4
   1dea0:	b.eq	1e380 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5f0>  // b.none
   1dea4:	ldr	x11, [x21, #288]
   1dea8:	ubfx	x13, x10, #4, #28
   1deac:	eor	w14, w13, w10, lsr #9
   1deb0:	sub	w13, w12, #0x1
   1deb4:	and	w12, w14, w13
   1deb8:	lsl	x14, x12, #4
   1debc:	ldr	x14, [x11, x14]
   1dec0:	cmp	x14, x10
   1dec4:	b.ne	1e1c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x430>  // b.any
   1dec8:	add	x10, x11, x12, lsl #4
   1decc:	ldr	w23, [x10, #12]
   1ded0:	cmp	w8, w9
   1ded4:	b.cs	1e20c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x47c>  // b.hs, b.nlast
   1ded8:	ldr	x9, [x19]
   1dedc:	str	x23, [x9, w8, uxtw #3]
   1dee0:	ldp	w8, w9, [x19, #8]
   1dee4:	cmp	w8, w9
   1dee8:	b.cs	1e360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5d0>  // b.hs, b.nlast
   1deec:	add	w8, w8, #0x1
   1def0:	str	w8, [x19, #8]
   1def4:	ldr	w23, [x22, #24]
   1def8:	cmp	w8, w9
   1defc:	b.cs	1e120 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x390>  // b.hs, b.nlast
   1df00:	ldr	x9, [x19]
   1df04:	str	x23, [x9, w8, uxtw #3]
   1df08:	ldp	w8, w9, [x19, #8]
   1df0c:	cmp	w8, w9
   1df10:	b.cs	1e360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5d0>  // b.hs, b.nlast
   1df14:	add	w8, w8, #0x1
   1df18:	str	w8, [x19, #8]
   1df1c:	ldr	w10, [x22, #8]
   1df20:	cmp	w10, #0x3
   1df24:	b.ls	1e3a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x610>  // b.plast
   1df28:	sub	x10, x22, x10, lsl #3
   1df2c:	ldr	x10, [x10, #24]
   1df30:	cbz	x10, 1df3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x1ac>
   1df34:	ldrb	w11, [x10]
   1df38:	cbnz	w11, 1e3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x630>
   1df3c:	ldr	w12, [x21, #304]
   1df40:	cbz	w12, 1e268 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x4d8>
   1df44:	orr	x11, x10, #0x4
   1df48:	cmn	x11, #0x4
   1df4c:	b.eq	1e380 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5f0>  // b.none
   1df50:	ldr	x11, [x21, #288]
   1df54:	ubfx	x13, x10, #4, #28
   1df58:	eor	w14, w13, w10, lsr #9
   1df5c:	sub	w13, w12, #0x1
   1df60:	and	w12, w14, w13
   1df64:	lsl	x14, x12, #4
   1df68:	ldr	x14, [x11, x14]
   1df6c:	cmp	x14, x10
   1df70:	b.ne	1e228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x498>  // b.any
   1df74:	add	x10, x11, x12, lsl #4
   1df78:	ldr	w23, [x10, #12]
   1df7c:	cmp	w8, w9
   1df80:	b.cs	1e274 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x4e4>  // b.hs, b.nlast
   1df84:	ldr	x9, [x19]
   1df88:	str	x23, [x9, w8, uxtw #3]
   1df8c:	ldp	w8, w9, [x19, #8]
   1df90:	cmp	w8, w9
   1df94:	b.cs	1e360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5d0>  // b.hs, b.nlast
   1df98:	add	w8, w8, #0x1
   1df9c:	str	w8, [x19, #8]
   1dfa0:	ldr	w10, [x22, #8]
   1dfa4:	cmp	w10, #0x2
   1dfa8:	b.ls	1e3a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x610>  // b.plast
   1dfac:	sub	x10, x22, x10, lsl #3
   1dfb0:	ldr	x10, [x10, #16]
   1dfb4:	cbz	x10, 1dfc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x230>
   1dfb8:	ldrb	w11, [x10]
   1dfbc:	cbnz	w11, 1e3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x630>
   1dfc0:	ldr	w12, [x21, #304]
   1dfc4:	cbz	w12, 1e2d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x540>
   1dfc8:	orr	x11, x10, #0x4
   1dfcc:	cmn	x11, #0x4
   1dfd0:	b.eq	1e380 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5f0>  // b.none
   1dfd4:	ldr	x11, [x21, #288]
   1dfd8:	ubfx	x13, x10, #4, #28
   1dfdc:	eor	w14, w13, w10, lsr #9
   1dfe0:	sub	w13, w12, #0x1
   1dfe4:	and	w12, w14, w13
   1dfe8:	lsl	x14, x12, #4
   1dfec:	ldr	x14, [x11, x14]
   1dff0:	cmp	x14, x10
   1dff4:	b.ne	1e290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x500>  // b.any
   1dff8:	add	x10, x11, x12, lsl #4
   1dffc:	ldr	w23, [x10, #12]
   1e000:	cmp	w8, w9
   1e004:	b.cs	1e2dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x54c>  // b.hs, b.nlast
   1e008:	ldr	x9, [x19]
   1e00c:	str	x23, [x9, w8, uxtw #3]
   1e010:	ldp	w8, w9, [x19, #8]
   1e014:	cmp	w8, w9
   1e018:	b.cs	1e360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5d0>  // b.hs, b.nlast
   1e01c:	add	w8, w8, #0x1
   1e020:	str	w8, [x19, #8]
   1e024:	ldr	w23, [x22, #28]
   1e028:	cmp	w8, w9
   1e02c:	b.cs	1e13c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x3ac>  // b.hs, b.nlast
   1e030:	ldr	x9, [x19]
   1e034:	str	x23, [x9, w8, uxtw #3]
   1e038:	ldp	w8, w9, [x19, #8]
   1e03c:	cmp	w8, w9
   1e040:	b.cs	1e360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5d0>  // b.hs, b.nlast
   1e044:	add	w8, w8, #0x1
   1e048:	str	w8, [x19, #8]
   1e04c:	ldr	w10, [x22, #8]
   1e050:	cmp	w10, #0x4
   1e054:	b.ls	1e3a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x610>  // b.plast
   1e058:	sub	x10, x22, x10, lsl #3
   1e05c:	ldr	x10, [x10, #32]
   1e060:	cbz	x10, 1e074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x2e4>
   1e064:	ldrb	w11, [x10]
   1e068:	sub	w11, w11, #0xb
   1e06c:	cmp	w11, #0x4
   1e070:	b.cs	1e400 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x670>  // b.hs, b.nlast
   1e074:	ldr	w12, [x21, #304]
   1e078:	cbz	w12, 1e338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5a8>
   1e07c:	orr	x11, x10, #0x4
   1e080:	cmn	x11, #0x4
   1e084:	b.eq	1e380 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5f0>  // b.none
   1e088:	ldr	x11, [x21, #288]
   1e08c:	ubfx	x13, x10, #4, #28
   1e090:	eor	w14, w13, w10, lsr #9
   1e094:	sub	w13, w12, #0x1
   1e098:	and	w12, w14, w13
   1e09c:	lsl	x14, x12, #4
   1e0a0:	ldr	x14, [x11, x14]
   1e0a4:	cmp	x14, x10
   1e0a8:	b.ne	1e2f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x568>  // b.any
   1e0ac:	add	x10, x11, x12, lsl #4
   1e0b0:	ldr	w22, [x10, #12]
   1e0b4:	cmp	w8, w9
   1e0b8:	b.cs	1e344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5b4>  // b.hs, b.nlast
   1e0bc:	ldr	x9, [x19]
   1e0c0:	str	x22, [x9, w8, uxtw #3]
   1e0c4:	ldp	w8, w9, [x19, #8]
   1e0c8:	cmp	w8, w9
   1e0cc:	b.cs	1e360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5d0>  // b.hs, b.nlast
   1e0d0:	add	w8, w8, #0x1
   1e0d4:	str	w8, [x19, #8]
   1e0d8:	ldr	x0, [x21]
   1e0dc:	mov	w1, #0x1e                  	// #30
   1e0e0:	mov	x2, x19
   1e0e4:	mov	w3, w20
   1e0e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e0ec:	str	wzr, [x19, #8]
   1e0f0:	ldp	x20, x19, [sp, #48]
   1e0f4:	ldp	x22, x21, [sp, #32]
   1e0f8:	ldr	x23, [sp, #16]
   1e0fc:	ldp	x29, x30, [sp], #64
   1e100:	ret
   1e104:	add	x1, x19, #0x10
   1e108:	mov	w3, #0x8                   	// #8
   1e10c:	mov	x0, x19
   1e110:	mov	x2, xzr
   1e114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e118:	ldr	w8, [x19, #8]
   1e11c:	b	1ddd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x40>
   1e120:	add	x1, x19, #0x10
   1e124:	mov	w3, #0x8                   	// #8
   1e128:	mov	x0, x19
   1e12c:	mov	x2, xzr
   1e130:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e134:	ldr	w8, [x19, #8]
   1e138:	b	1df00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x170>
   1e13c:	add	x1, x19, #0x10
   1e140:	mov	w3, #0x8                   	// #8
   1e144:	mov	x0, x19
   1e148:	mov	x2, xzr
   1e14c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e150:	ldr	w8, [x19, #8]
   1e154:	b	1e030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x2a0>
   1e158:	mov	w15, #0x1                   	// #1
   1e15c:	cmn	x14, #0x4
   1e160:	b.eq	1e198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x408>  // b.none
   1e164:	add	w12, w12, w15
   1e168:	and	w12, w12, w13
   1e16c:	lsl	x14, x12, #4
   1e170:	ldr	x14, [x11, x14]
   1e174:	add	w15, w15, #0x1
   1e178:	cmp	x14, x10
   1e17c:	b.ne	1e15c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x3cc>  // b.any
   1e180:	mov	w12, w12
   1e184:	add	x10, x11, x12, lsl #4
   1e188:	ldr	w23, [x10, #12]
   1e18c:	cmp	w8, w9
   1e190:	b.cc	1de50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0xc0>  // b.lo, b.ul, b.last
   1e194:	b	1e1a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x414>
   1e198:	mov	x23, xzr
   1e19c:	cmp	w8, w9
   1e1a0:	b.cc	1de50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0xc0>  // b.lo, b.ul, b.last
   1e1a4:	add	x1, x19, #0x10
   1e1a8:	mov	w3, #0x8                   	// #8
   1e1ac:	mov	x0, x19
   1e1b0:	mov	x2, xzr
   1e1b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e1b8:	ldr	w8, [x19, #8]
   1e1bc:	b	1de50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0xc0>
   1e1c0:	mov	w15, #0x1                   	// #1
   1e1c4:	cmn	x14, #0x4
   1e1c8:	b.eq	1e200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x470>  // b.none
   1e1cc:	add	w12, w12, w15
   1e1d0:	and	w12, w12, w13
   1e1d4:	lsl	x14, x12, #4
   1e1d8:	ldr	x14, [x11, x14]
   1e1dc:	add	w15, w15, #0x1
   1e1e0:	cmp	x14, x10
   1e1e4:	b.ne	1e1c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x434>  // b.any
   1e1e8:	mov	w12, w12
   1e1ec:	add	x10, x11, x12, lsl #4
   1e1f0:	ldr	w23, [x10, #12]
   1e1f4:	cmp	w8, w9
   1e1f8:	b.cc	1ded8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x148>  // b.lo, b.ul, b.last
   1e1fc:	b	1e20c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x47c>
   1e200:	mov	x23, xzr
   1e204:	cmp	w8, w9
   1e208:	b.cc	1ded8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x148>  // b.lo, b.ul, b.last
   1e20c:	add	x1, x19, #0x10
   1e210:	mov	w3, #0x8                   	// #8
   1e214:	mov	x0, x19
   1e218:	mov	x2, xzr
   1e21c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e220:	ldr	w8, [x19, #8]
   1e224:	b	1ded8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x148>
   1e228:	mov	w15, #0x1                   	// #1
   1e22c:	cmn	x14, #0x4
   1e230:	b.eq	1e268 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x4d8>  // b.none
   1e234:	add	w12, w12, w15
   1e238:	and	w12, w12, w13
   1e23c:	lsl	x14, x12, #4
   1e240:	ldr	x14, [x11, x14]
   1e244:	add	w15, w15, #0x1
   1e248:	cmp	x14, x10
   1e24c:	b.ne	1e22c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x49c>  // b.any
   1e250:	mov	w12, w12
   1e254:	add	x10, x11, x12, lsl #4
   1e258:	ldr	w23, [x10, #12]
   1e25c:	cmp	w8, w9
   1e260:	b.cc	1df84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x1f4>  // b.lo, b.ul, b.last
   1e264:	b	1e274 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x4e4>
   1e268:	mov	x23, xzr
   1e26c:	cmp	w8, w9
   1e270:	b.cc	1df84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x1f4>  // b.lo, b.ul, b.last
   1e274:	add	x1, x19, #0x10
   1e278:	mov	w3, #0x8                   	// #8
   1e27c:	mov	x0, x19
   1e280:	mov	x2, xzr
   1e284:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e288:	ldr	w8, [x19, #8]
   1e28c:	b	1df84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x1f4>
   1e290:	mov	w15, #0x1                   	// #1
   1e294:	cmn	x14, #0x4
   1e298:	b.eq	1e2d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x540>  // b.none
   1e29c:	add	w12, w12, w15
   1e2a0:	and	w12, w12, w13
   1e2a4:	lsl	x14, x12, #4
   1e2a8:	ldr	x14, [x11, x14]
   1e2ac:	add	w15, w15, #0x1
   1e2b0:	cmp	x14, x10
   1e2b4:	b.ne	1e294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x504>  // b.any
   1e2b8:	mov	w12, w12
   1e2bc:	add	x10, x11, x12, lsl #4
   1e2c0:	ldr	w23, [x10, #12]
   1e2c4:	cmp	w8, w9
   1e2c8:	b.cc	1e008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x278>  // b.lo, b.ul, b.last
   1e2cc:	b	1e2dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x54c>
   1e2d0:	mov	x23, xzr
   1e2d4:	cmp	w8, w9
   1e2d8:	b.cc	1e008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x278>  // b.lo, b.ul, b.last
   1e2dc:	add	x1, x19, #0x10
   1e2e0:	mov	w3, #0x8                   	// #8
   1e2e4:	mov	x0, x19
   1e2e8:	mov	x2, xzr
   1e2ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e2f0:	ldr	w8, [x19, #8]
   1e2f4:	b	1e008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x278>
   1e2f8:	mov	w15, #0x1                   	// #1
   1e2fc:	cmn	x14, #0x4
   1e300:	b.eq	1e338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5a8>  // b.none
   1e304:	add	w12, w12, w15
   1e308:	and	w12, w12, w13
   1e30c:	lsl	x14, x12, #4
   1e310:	ldr	x14, [x11, x14]
   1e314:	add	w15, w15, #0x1
   1e318:	cmp	x14, x10
   1e31c:	b.ne	1e2fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x56c>  // b.any
   1e320:	mov	w12, w12
   1e324:	add	x10, x11, x12, lsl #4
   1e328:	ldr	w22, [x10, #12]
   1e32c:	cmp	w8, w9
   1e330:	b.cc	1e0bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x32c>  // b.lo, b.ul, b.last
   1e334:	b	1e344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5b4>
   1e338:	mov	x22, xzr
   1e33c:	cmp	w8, w9
   1e340:	b.cc	1e0bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x32c>  // b.lo, b.ul, b.last
   1e344:	add	x1, x19, #0x10
   1e348:	mov	w3, #0x8                   	// #8
   1e34c:	mov	x0, x19
   1e350:	mov	x2, xzr
   1e354:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e358:	ldr	w8, [x19, #8]
   1e35c:	b	1e0bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x32c>
   1e360:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e364:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e368:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e36c:	add	x0, x0, #0x0
   1e370:	add	x1, x1, #0x0
   1e374:	add	x3, x3, #0x0
   1e378:	mov	w2, #0x43                  	// #67
   1e37c:	bl	0 <__assert_fail>
   1e380:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e384:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e388:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e38c:	add	x0, x0, #0x0
   1e390:	add	x1, x1, #0x0
   1e394:	add	x3, x3, #0x0
   1e398:	mov	w2, #0x252                 	// #594
   1e39c:	bl	0 <__assert_fail>
   1e3a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e3a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e3a8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e3ac:	add	x0, x0, #0x0
   1e3b0:	add	x1, x1, #0x0
   1e3b4:	add	x3, x3, #0x0
   1e3b8:	mov	w2, #0x436                 	// #1078
   1e3bc:	bl	0 <__assert_fail>
   1e3c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e3c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e3c8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e3cc:	add	x0, x0, #0x0
   1e3d0:	add	x1, x1, #0x0
   1e3d4:	add	x3, x3, #0x0
   1e3d8:	mov	w2, #0x121                 	// #289
   1e3dc:	bl	0 <__assert_fail>
   1e3e0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e3e4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e3e8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e3ec:	add	x0, x0, #0x0
   1e3f0:	add	x1, x1, #0x0
   1e3f4:	add	x3, x3, #0x0
   1e3f8:	mov	w2, #0x134                 	// #308
   1e3fc:	bl	0 <__assert_fail>
   1e400:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e404:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e408:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e40c:	add	x0, x0, #0x0
   1e410:	add	x1, x1, #0x0
   1e414:	add	x3, x3, #0x0
   1e418:	mov	w2, #0x134                 	// #308
   1e41c:	bl	0 <__assert_fail>

000000000001e420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj>:
   1e420:	stp	x29, x30, [sp, #-64]!
   1e424:	str	x23, [sp, #16]
   1e428:	stp	x22, x21, [sp, #32]
   1e42c:	stp	x20, x19, [sp, #48]
   1e430:	mov	x29, sp
   1e434:	ldrb	w9, [x1, #1]
   1e438:	ldp	w8, w10, [x2, #8]
   1e43c:	mov	w20, w3
   1e440:	mov	x19, x2
   1e444:	and	w9, w9, #0x7f
   1e448:	cmp	w9, #0x1
   1e44c:	mov	x22, x1
   1e450:	cset	w23, eq  // eq = none
   1e454:	cmp	w8, w10
   1e458:	mov	x21, x0
   1e45c:	b.cs	1e7b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x398>  // b.hs, b.nlast
   1e460:	ldr	x9, [x19]
   1e464:	str	x23, [x9, w8, uxtw #3]
   1e468:	ldp	w8, w9, [x19, #8]
   1e46c:	cmp	w8, w9
   1e470:	b.cs	1e9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.hs, b.nlast
   1e474:	add	w8, w8, #0x1
   1e478:	str	w8, [x19, #8]
   1e47c:	ldrh	w23, [x22, #2]
   1e480:	cmp	w8, w9
   1e484:	b.cs	1e7d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x3b4>  // b.hs, b.nlast
   1e488:	ldr	x9, [x19]
   1e48c:	str	x23, [x9, w8, uxtw #3]
   1e490:	ldp	w8, w9, [x19, #8]
   1e494:	cmp	w8, w9
   1e498:	b.cs	1e9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.hs, b.nlast
   1e49c:	add	w8, w8, #0x1
   1e4a0:	str	w8, [x19, #8]
   1e4a4:	ldr	w10, [x22, #8]
   1e4a8:	cbz	w10, 1e9ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5cc>
   1e4ac:	sub	x10, x22, x10, lsl #3
   1e4b0:	ldr	x10, [x10]
   1e4b4:	cbz	x10, 1e4d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xb0>
   1e4b8:	ldrb	w11, [x10]
   1e4bc:	sub	w12, w11, #0xb
   1e4c0:	cmp	w12, #0xb
   1e4c4:	b.cs	1e718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x2f8>  // b.hs, b.nlast
   1e4c8:	cmp	w12, #0xb
   1e4cc:	b.cs	1e740 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x320>  // b.hs, b.nlast
   1e4d0:	ldr	w12, [x21, #304]
   1e4d4:	cbz	w12, 1e84c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x42c>
   1e4d8:	orr	x11, x10, #0x4
   1e4dc:	cmn	x11, #0x4
   1e4e0:	b.eq	1e9cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5ac>  // b.none
   1e4e4:	ldr	x11, [x21, #288]
   1e4e8:	ubfx	x13, x10, #4, #28
   1e4ec:	eor	w14, w13, w10, lsr #9
   1e4f0:	sub	w13, w12, #0x1
   1e4f4:	and	w12, w14, w13
   1e4f8:	lsl	x14, x12, #4
   1e4fc:	ldr	x14, [x11, x14]
   1e500:	cmp	x14, x10
   1e504:	b.ne	1e80c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x3ec>  // b.any
   1e508:	add	x10, x11, x12, lsl #4
   1e50c:	ldr	w23, [x10, #12]
   1e510:	cmp	w8, w9
   1e514:	b.cs	1e858 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x438>  // b.hs, b.nlast
   1e518:	ldr	x9, [x19]
   1e51c:	str	x23, [x9, w8, uxtw #3]
   1e520:	ldp	w8, w9, [x19, #8]
   1e524:	cmp	w8, w9
   1e528:	b.cs	1e9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.hs, b.nlast
   1e52c:	add	w8, w8, #0x1
   1e530:	str	w8, [x19, #8]
   1e534:	ldr	w10, [x22, #8]
   1e538:	cmp	w10, #0x1
   1e53c:	b.ls	1e9ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5cc>  // b.plast
   1e540:	sub	x10, x22, x10, lsl #3
   1e544:	ldr	x10, [x10, #8]
   1e548:	cbz	x10, 1e564 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x144>
   1e54c:	ldrb	w11, [x10]
   1e550:	sub	w12, w11, #0x8
   1e554:	cmp	w12, #0x15
   1e558:	b.cs	1e768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x348>  // b.hs, b.nlast
   1e55c:	cmp	w12, #0x15
   1e560:	b.cs	1e790 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x370>  // b.hs, b.nlast
   1e564:	ldr	w12, [x21, #304]
   1e568:	cbz	w12, 1e8b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x494>
   1e56c:	orr	x11, x10, #0x4
   1e570:	cmn	x11, #0x4
   1e574:	b.eq	1e9cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5ac>  // b.none
   1e578:	ldr	x11, [x21, #288]
   1e57c:	ubfx	x13, x10, #4, #28
   1e580:	eor	w14, w13, w10, lsr #9
   1e584:	sub	w13, w12, #0x1
   1e588:	and	w12, w14, w13
   1e58c:	lsl	x14, x12, #4
   1e590:	ldr	x14, [x11, x14]
   1e594:	cmp	x14, x10
   1e598:	b.ne	1e874 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x454>  // b.any
   1e59c:	add	x10, x11, x12, lsl #4
   1e5a0:	ldr	w23, [x10, #12]
   1e5a4:	cmp	w8, w9
   1e5a8:	b.cs	1e8c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4a0>  // b.hs, b.nlast
   1e5ac:	ldr	x9, [x19]
   1e5b0:	str	x23, [x9, w8, uxtw #3]
   1e5b4:	ldp	w8, w9, [x19, #8]
   1e5b8:	cmp	w8, w9
   1e5bc:	b.cs	1e9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.hs, b.nlast
   1e5c0:	add	w8, w8, #0x1
   1e5c4:	str	w8, [x19, #8]
   1e5c8:	ldr	w23, [x22, #24]
   1e5cc:	cmp	w8, w9
   1e5d0:	b.cs	1e7f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x3d0>  // b.hs, b.nlast
   1e5d4:	ldr	x9, [x19]
   1e5d8:	str	x23, [x9, w8, uxtw #3]
   1e5dc:	ldp	w8, w9, [x19, #8]
   1e5e0:	cmp	w8, w9
   1e5e4:	b.cs	1e9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.hs, b.nlast
   1e5e8:	add	w8, w8, #0x1
   1e5ec:	str	w8, [x19, #8]
   1e5f0:	ldr	w10, [x22, #8]
   1e5f4:	cmp	w10, #0x2
   1e5f8:	b.ls	1e9ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5cc>  // b.plast
   1e5fc:	sub	x10, x22, x10, lsl #3
   1e600:	ldr	x10, [x10, #16]
   1e604:	cbz	x10, 1e610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x1f0>
   1e608:	ldrb	w11, [x10]
   1e60c:	cbnz	w11, 1ea0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5ec>
   1e610:	ldr	w12, [x21, #304]
   1e614:	cbz	w12, 1e91c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4fc>
   1e618:	orr	x11, x10, #0x4
   1e61c:	cmn	x11, #0x4
   1e620:	b.eq	1e9cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5ac>  // b.none
   1e624:	ldr	x11, [x21, #288]
   1e628:	ubfx	x13, x10, #4, #28
   1e62c:	eor	w14, w13, w10, lsr #9
   1e630:	sub	w13, w12, #0x1
   1e634:	and	w12, w14, w13
   1e638:	lsl	x14, x12, #4
   1e63c:	ldr	x14, [x11, x14]
   1e640:	cmp	x14, x10
   1e644:	b.ne	1e8dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4bc>  // b.any
   1e648:	add	x10, x11, x12, lsl #4
   1e64c:	ldr	w23, [x10, #12]
   1e650:	cmp	w8, w9
   1e654:	b.cs	1e928 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x508>  // b.hs, b.nlast
   1e658:	ldr	x9, [x19]
   1e65c:	str	x23, [x9, w8, uxtw #3]
   1e660:	ldp	w8, w9, [x19, #8]
   1e664:	cmp	w8, w9
   1e668:	b.cs	1e9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.hs, b.nlast
   1e66c:	add	w8, w8, #0x1
   1e670:	str	w8, [x19, #8]
   1e674:	ldr	w10, [x22, #8]
   1e678:	cmp	w10, #0x3
   1e67c:	b.ls	1e9ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5cc>  // b.plast
   1e680:	ldr	w12, [x21, #304]
   1e684:	cbz	w12, 1e984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x564>
   1e688:	sub	x10, x22, x10, lsl #3
   1e68c:	ldr	x10, [x10, #24]
   1e690:	orr	x11, x10, #0x4
   1e694:	cmn	x11, #0x4
   1e698:	b.eq	1e9cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5ac>  // b.none
   1e69c:	ldr	x11, [x21, #288]
   1e6a0:	ubfx	x13, x10, #4, #28
   1e6a4:	eor	w14, w13, w10, lsr #9
   1e6a8:	sub	w13, w12, #0x1
   1e6ac:	and	w12, w14, w13
   1e6b0:	lsl	x14, x12, #4
   1e6b4:	ldr	x14, [x11, x14]
   1e6b8:	cmp	x14, x10
   1e6bc:	b.ne	1e944 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x524>  // b.any
   1e6c0:	add	x10, x11, x12, lsl #4
   1e6c4:	ldr	w22, [x10, #12]
   1e6c8:	cmp	w8, w9
   1e6cc:	b.cs	1e990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x570>  // b.hs, b.nlast
   1e6d0:	ldr	x9, [x19]
   1e6d4:	str	x22, [x9, w8, uxtw #3]
   1e6d8:	ldp	w8, w9, [x19, #8]
   1e6dc:	cmp	w8, w9
   1e6e0:	b.cs	1e9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.hs, b.nlast
   1e6e4:	add	w8, w8, #0x1
   1e6e8:	str	w8, [x19, #8]
   1e6ec:	ldr	x0, [x21]
   1e6f0:	mov	w1, #0x1f                  	// #31
   1e6f4:	mov	x2, x19
   1e6f8:	mov	w3, w20
   1e6fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e700:	str	wzr, [x19, #8]
   1e704:	ldp	x20, x19, [sp, #48]
   1e708:	ldp	x22, x21, [sp, #32]
   1e70c:	ldr	x23, [sp, #16]
   1e710:	ldp	x29, x30, [sp], #64
   1e714:	ret
   1e718:	cmp	w11, #0x1f
   1e71c:	b.eq	1e4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xa8>  // b.none
   1e720:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e724:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e728:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e72c:	add	x0, x0, #0x0
   1e730:	add	x1, x1, #0x0
   1e734:	add	x3, x3, #0x0
   1e738:	mov	w2, #0x134                 	// #308
   1e73c:	bl	0 <__assert_fail>
   1e740:	cmp	w11, #0x1f
   1e744:	b.eq	1e4d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xb0>  // b.none
   1e748:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e74c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e750:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e754:	add	x0, x0, #0x0
   1e758:	add	x1, x1, #0x0
   1e75c:	add	x3, x3, #0x0
   1e760:	mov	w2, #0x108                 	// #264
   1e764:	bl	0 <__assert_fail>
   1e768:	cmp	w11, #0x1f
   1e76c:	b.eq	1e55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x13c>  // b.none
   1e770:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e774:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e778:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e77c:	add	x0, x0, #0x0
   1e780:	add	x1, x1, #0x0
   1e784:	add	x3, x3, #0x0
   1e788:	mov	w2, #0x134                 	// #308
   1e78c:	bl	0 <__assert_fail>
   1e790:	cmp	w11, #0x1f
   1e794:	b.eq	1e564 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x144>  // b.none
   1e798:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e79c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e7a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e7a4:	add	x0, x0, #0x0
   1e7a8:	add	x1, x1, #0x0
   1e7ac:	add	x3, x3, #0x0
   1e7b0:	mov	w2, #0x108                 	// #264
   1e7b4:	bl	0 <__assert_fail>
   1e7b8:	add	x1, x19, #0x10
   1e7bc:	mov	w3, #0x8                   	// #8
   1e7c0:	mov	x0, x19
   1e7c4:	mov	x2, xzr
   1e7c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e7cc:	ldr	w8, [x19, #8]
   1e7d0:	b	1e460 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x40>
   1e7d4:	add	x1, x19, #0x10
   1e7d8:	mov	w3, #0x8                   	// #8
   1e7dc:	mov	x0, x19
   1e7e0:	mov	x2, xzr
   1e7e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e7e8:	ldr	w8, [x19, #8]
   1e7ec:	b	1e488 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x68>
   1e7f0:	add	x1, x19, #0x10
   1e7f4:	mov	w3, #0x8                   	// #8
   1e7f8:	mov	x0, x19
   1e7fc:	mov	x2, xzr
   1e800:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e804:	ldr	w8, [x19, #8]
   1e808:	b	1e5d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x1b4>
   1e80c:	mov	w15, #0x1                   	// #1
   1e810:	cmn	x14, #0x4
   1e814:	b.eq	1e84c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x42c>  // b.none
   1e818:	add	w12, w12, w15
   1e81c:	and	w12, w12, w13
   1e820:	lsl	x14, x12, #4
   1e824:	ldr	x14, [x11, x14]
   1e828:	add	w15, w15, #0x1
   1e82c:	cmp	x14, x10
   1e830:	b.ne	1e810 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x3f0>  // b.any
   1e834:	mov	w12, w12
   1e838:	add	x10, x11, x12, lsl #4
   1e83c:	ldr	w23, [x10, #12]
   1e840:	cmp	w8, w9
   1e844:	b.cc	1e518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xf8>  // b.lo, b.ul, b.last
   1e848:	b	1e858 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x438>
   1e84c:	mov	x23, xzr
   1e850:	cmp	w8, w9
   1e854:	b.cc	1e518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xf8>  // b.lo, b.ul, b.last
   1e858:	add	x1, x19, #0x10
   1e85c:	mov	w3, #0x8                   	// #8
   1e860:	mov	x0, x19
   1e864:	mov	x2, xzr
   1e868:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e86c:	ldr	w8, [x19, #8]
   1e870:	b	1e518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xf8>
   1e874:	mov	w15, #0x1                   	// #1
   1e878:	cmn	x14, #0x4
   1e87c:	b.eq	1e8b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x494>  // b.none
   1e880:	add	w12, w12, w15
   1e884:	and	w12, w12, w13
   1e888:	lsl	x14, x12, #4
   1e88c:	ldr	x14, [x11, x14]
   1e890:	add	w15, w15, #0x1
   1e894:	cmp	x14, x10
   1e898:	b.ne	1e878 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x458>  // b.any
   1e89c:	mov	w12, w12
   1e8a0:	add	x10, x11, x12, lsl #4
   1e8a4:	ldr	w23, [x10, #12]
   1e8a8:	cmp	w8, w9
   1e8ac:	b.cc	1e5ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   1e8b0:	b	1e8c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4a0>
   1e8b4:	mov	x23, xzr
   1e8b8:	cmp	w8, w9
   1e8bc:	b.cc	1e5ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   1e8c0:	add	x1, x19, #0x10
   1e8c4:	mov	w3, #0x8                   	// #8
   1e8c8:	mov	x0, x19
   1e8cc:	mov	x2, xzr
   1e8d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e8d4:	ldr	w8, [x19, #8]
   1e8d8:	b	1e5ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x18c>
   1e8dc:	mov	w15, #0x1                   	// #1
   1e8e0:	cmn	x14, #0x4
   1e8e4:	b.eq	1e91c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4fc>  // b.none
   1e8e8:	add	w12, w12, w15
   1e8ec:	and	w12, w12, w13
   1e8f0:	lsl	x14, x12, #4
   1e8f4:	ldr	x14, [x11, x14]
   1e8f8:	add	w15, w15, #0x1
   1e8fc:	cmp	x14, x10
   1e900:	b.ne	1e8e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4c0>  // b.any
   1e904:	mov	w12, w12
   1e908:	add	x10, x11, x12, lsl #4
   1e90c:	ldr	w23, [x10, #12]
   1e910:	cmp	w8, w9
   1e914:	b.cc	1e658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x238>  // b.lo, b.ul, b.last
   1e918:	b	1e928 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x508>
   1e91c:	mov	x23, xzr
   1e920:	cmp	w8, w9
   1e924:	b.cc	1e658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x238>  // b.lo, b.ul, b.last
   1e928:	add	x1, x19, #0x10
   1e92c:	mov	w3, #0x8                   	// #8
   1e930:	mov	x0, x19
   1e934:	mov	x2, xzr
   1e938:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e93c:	ldr	w8, [x19, #8]
   1e940:	b	1e658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x238>
   1e944:	mov	w15, #0x1                   	// #1
   1e948:	cmn	x14, #0x4
   1e94c:	b.eq	1e984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x564>  // b.none
   1e950:	add	w12, w12, w15
   1e954:	and	w12, w12, w13
   1e958:	lsl	x14, x12, #4
   1e95c:	ldr	x14, [x11, x14]
   1e960:	add	w15, w15, #0x1
   1e964:	cmp	x14, x10
   1e968:	b.ne	1e948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x528>  // b.any
   1e96c:	mov	w12, w12
   1e970:	add	x10, x11, x12, lsl #4
   1e974:	ldr	w22, [x10, #12]
   1e978:	cmp	w8, w9
   1e97c:	b.cc	1e6d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x2b0>  // b.lo, b.ul, b.last
   1e980:	b	1e990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x570>
   1e984:	mov	x22, xzr
   1e988:	cmp	w8, w9
   1e98c:	b.cc	1e6d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x2b0>  // b.lo, b.ul, b.last
   1e990:	add	x1, x19, #0x10
   1e994:	mov	w3, #0x8                   	// #8
   1e998:	mov	x0, x19
   1e99c:	mov	x2, xzr
   1e9a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e9a4:	ldr	w8, [x19, #8]
   1e9a8:	b	1e6d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x2b0>
   1e9ac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e9b0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e9b4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e9b8:	add	x0, x0, #0x0
   1e9bc:	add	x1, x1, #0x0
   1e9c0:	add	x3, x3, #0x0
   1e9c4:	mov	w2, #0x43                  	// #67
   1e9c8:	bl	0 <__assert_fail>
   1e9cc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e9d0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e9d4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e9d8:	add	x0, x0, #0x0
   1e9dc:	add	x1, x1, #0x0
   1e9e0:	add	x3, x3, #0x0
   1e9e4:	mov	w2, #0x252                 	// #594
   1e9e8:	bl	0 <__assert_fail>
   1e9ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e9f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e9f4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e9f8:	add	x0, x0, #0x0
   1e9fc:	add	x1, x1, #0x0
   1ea00:	add	x3, x3, #0x0
   1ea04:	mov	w2, #0x436                 	// #1078
   1ea08:	bl	0 <__assert_fail>
   1ea0c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ea10:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ea14:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ea18:	add	x0, x0, #0x0
   1ea1c:	add	x1, x1, #0x0
   1ea20:	add	x3, x3, #0x0
   1ea24:	mov	w2, #0x121                 	// #289
   1ea28:	bl	0 <__assert_fail>

000000000001ea2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj>:
   1ea2c:	stp	x29, x30, [sp, #-64]!
   1ea30:	str	x23, [sp, #16]
   1ea34:	stp	x22, x21, [sp, #32]
   1ea38:	stp	x20, x19, [sp, #48]
   1ea3c:	mov	x29, sp
   1ea40:	ldrb	w9, [x1, #1]
   1ea44:	ldp	w8, w10, [x2, #8]
   1ea48:	mov	w20, w3
   1ea4c:	mov	x19, x2
   1ea50:	and	w9, w9, #0x7f
   1ea54:	cmp	w9, #0x1
   1ea58:	mov	x22, x1
   1ea5c:	cset	w23, eq  // eq = none
   1ea60:	cmp	w8, w10
   1ea64:	mov	x21, x0
   1ea68:	b.cs	1ec08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x1dc>  // b.hs, b.nlast
   1ea6c:	ldr	x9, [x19]
   1ea70:	str	x23, [x9, w8, uxtw #3]
   1ea74:	ldp	w8, w9, [x19, #8]
   1ea78:	cmp	w8, w9
   1ea7c:	b.cs	1ed2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x300>  // b.hs, b.nlast
   1ea80:	add	w8, w8, #0x1
   1ea84:	str	w8, [x19, #8]
   1ea88:	ldrh	w23, [x22, #2]
   1ea8c:	cmp	w8, w9
   1ea90:	b.cs	1ec24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x1f8>  // b.hs, b.nlast
   1ea94:	ldr	x9, [x19]
   1ea98:	str	x23, [x9, w8, uxtw #3]
   1ea9c:	ldp	w8, w9, [x19, #8]
   1eaa0:	cmp	w8, w9
   1eaa4:	b.cs	1ed2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x300>  // b.hs, b.nlast
   1eaa8:	add	w8, w8, #0x1
   1eaac:	str	w8, [x19, #8]
   1eab0:	ldr	w23, [x22, #24]
   1eab4:	cmp	w8, w9
   1eab8:	b.cs	1ec40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x214>  // b.hs, b.nlast
   1eabc:	ldr	x9, [x19]
   1eac0:	str	x23, [x9, w8, uxtw #3]
   1eac4:	ldp	w8, w9, [x19, #8]
   1eac8:	cmp	w8, w9
   1eacc:	b.cs	1ed2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x300>  // b.hs, b.nlast
   1ead0:	add	w8, w8, #0x1
   1ead4:	str	w8, [x19, #8]
   1ead8:	ldr	w10, [x22, #8]
   1eadc:	cbz	w10, 1ed6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x340>
   1eae0:	sub	x10, x22, x10, lsl #3
   1eae4:	ldr	x10, [x10]
   1eae8:	cbz	x10, 1eaf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0xc8>
   1eaec:	ldrb	w11, [x10]
   1eaf0:	cbnz	w11, 1ed8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x360>
   1eaf4:	ldr	w12, [x21, #304]
   1eaf8:	cbz	w12, 1ec9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x270>
   1eafc:	orr	x11, x10, #0x4
   1eb00:	cmn	x11, #0x4
   1eb04:	b.eq	1ed4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x320>  // b.none
   1eb08:	ldr	x11, [x21, #288]
   1eb0c:	ubfx	x13, x10, #4, #28
   1eb10:	eor	w14, w13, w10, lsr #9
   1eb14:	sub	w13, w12, #0x1
   1eb18:	and	w12, w14, w13
   1eb1c:	lsl	x14, x12, #4
   1eb20:	ldr	x14, [x11, x14]
   1eb24:	cmp	x14, x10
   1eb28:	b.ne	1ec5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x230>  // b.any
   1eb2c:	add	x10, x11, x12, lsl #4
   1eb30:	ldr	w23, [x10, #12]
   1eb34:	cmp	w8, w9
   1eb38:	b.cs	1eca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x27c>  // b.hs, b.nlast
   1eb3c:	ldr	x9, [x19]
   1eb40:	str	x23, [x9, w8, uxtw #3]
   1eb44:	ldp	w8, w9, [x19, #8]
   1eb48:	cmp	w8, w9
   1eb4c:	b.cs	1ed2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x300>  // b.hs, b.nlast
   1eb50:	add	w8, w8, #0x1
   1eb54:	str	w8, [x19, #8]
   1eb58:	ldr	w10, [x22, #8]
   1eb5c:	cmp	w10, #0x1
   1eb60:	b.ls	1ed6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x340>  // b.plast
   1eb64:	sub	x10, x22, x10, lsl #3
   1eb68:	ldr	x10, [x10, #8]
   1eb6c:	cbz	x10, 1eb78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x14c>
   1eb70:	ldrb	w11, [x10]
   1eb74:	cbnz	w11, 1ed8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x360>
   1eb78:	ldr	w12, [x21, #304]
   1eb7c:	cbz	w12, 1ed04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2d8>
   1eb80:	orr	x11, x10, #0x4
   1eb84:	cmn	x11, #0x4
   1eb88:	b.eq	1ed4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x320>  // b.none
   1eb8c:	ldr	x11, [x21, #288]
   1eb90:	ubfx	x13, x10, #4, #28
   1eb94:	eor	w14, w13, w10, lsr #9
   1eb98:	sub	w13, w12, #0x1
   1eb9c:	and	w12, w14, w13
   1eba0:	lsl	x14, x12, #4
   1eba4:	ldr	x14, [x11, x14]
   1eba8:	cmp	x14, x10
   1ebac:	b.ne	1ecc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x298>  // b.any
   1ebb0:	add	x10, x11, x12, lsl #4
   1ebb4:	ldr	w22, [x10, #12]
   1ebb8:	cmp	w8, w9
   1ebbc:	b.cs	1ed10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2e4>  // b.hs, b.nlast
   1ebc0:	ldr	x9, [x19]
   1ebc4:	str	x22, [x9, w8, uxtw #3]
   1ebc8:	ldp	w8, w9, [x19, #8]
   1ebcc:	cmp	w8, w9
   1ebd0:	b.cs	1ed2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x300>  // b.hs, b.nlast
   1ebd4:	add	w8, w8, #0x1
   1ebd8:	str	w8, [x19, #8]
   1ebdc:	ldr	x0, [x21]
   1ebe0:	mov	w1, #0x21                  	// #33
   1ebe4:	mov	x2, x19
   1ebe8:	mov	w3, w20
   1ebec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ebf0:	str	wzr, [x19, #8]
   1ebf4:	ldp	x20, x19, [sp, #48]
   1ebf8:	ldp	x22, x21, [sp, #32]
   1ebfc:	ldr	x23, [sp, #16]
   1ec00:	ldp	x29, x30, [sp], #64
   1ec04:	ret
   1ec08:	add	x1, x19, #0x10
   1ec0c:	mov	w3, #0x8                   	// #8
   1ec10:	mov	x0, x19
   1ec14:	mov	x2, xzr
   1ec18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ec1c:	ldr	w8, [x19, #8]
   1ec20:	b	1ea6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x40>
   1ec24:	add	x1, x19, #0x10
   1ec28:	mov	w3, #0x8                   	// #8
   1ec2c:	mov	x0, x19
   1ec30:	mov	x2, xzr
   1ec34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ec38:	ldr	w8, [x19, #8]
   1ec3c:	b	1ea94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x68>
   1ec40:	add	x1, x19, #0x10
   1ec44:	mov	w3, #0x8                   	// #8
   1ec48:	mov	x0, x19
   1ec4c:	mov	x2, xzr
   1ec50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ec54:	ldr	w8, [x19, #8]
   1ec58:	b	1eabc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x90>
   1ec5c:	mov	w15, #0x1                   	// #1
   1ec60:	cmn	x14, #0x4
   1ec64:	b.eq	1ec9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x270>  // b.none
   1ec68:	add	w12, w12, w15
   1ec6c:	and	w12, w12, w13
   1ec70:	lsl	x14, x12, #4
   1ec74:	ldr	x14, [x11, x14]
   1ec78:	add	w15, w15, #0x1
   1ec7c:	cmp	x14, x10
   1ec80:	b.ne	1ec60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x234>  // b.any
   1ec84:	mov	w12, w12
   1ec88:	add	x10, x11, x12, lsl #4
   1ec8c:	ldr	w23, [x10, #12]
   1ec90:	cmp	w8, w9
   1ec94:	b.cc	1eb3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x110>  // b.lo, b.ul, b.last
   1ec98:	b	1eca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x27c>
   1ec9c:	mov	x23, xzr
   1eca0:	cmp	w8, w9
   1eca4:	b.cc	1eb3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x110>  // b.lo, b.ul, b.last
   1eca8:	add	x1, x19, #0x10
   1ecac:	mov	w3, #0x8                   	// #8
   1ecb0:	mov	x0, x19
   1ecb4:	mov	x2, xzr
   1ecb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ecbc:	ldr	w8, [x19, #8]
   1ecc0:	b	1eb3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x110>
   1ecc4:	mov	w15, #0x1                   	// #1
   1ecc8:	cmn	x14, #0x4
   1eccc:	b.eq	1ed04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2d8>  // b.none
   1ecd0:	add	w12, w12, w15
   1ecd4:	and	w12, w12, w13
   1ecd8:	lsl	x14, x12, #4
   1ecdc:	ldr	x14, [x11, x14]
   1ece0:	add	w15, w15, #0x1
   1ece4:	cmp	x14, x10
   1ece8:	b.ne	1ecc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x29c>  // b.any
   1ecec:	mov	w12, w12
   1ecf0:	add	x10, x11, x12, lsl #4
   1ecf4:	ldr	w22, [x10, #12]
   1ecf8:	cmp	w8, w9
   1ecfc:	b.cc	1ebc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x194>  // b.lo, b.ul, b.last
   1ed00:	b	1ed10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2e4>
   1ed04:	mov	x22, xzr
   1ed08:	cmp	w8, w9
   1ed0c:	b.cc	1ebc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x194>  // b.lo, b.ul, b.last
   1ed10:	add	x1, x19, #0x10
   1ed14:	mov	w3, #0x8                   	// #8
   1ed18:	mov	x0, x19
   1ed1c:	mov	x2, xzr
   1ed20:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ed24:	ldr	w8, [x19, #8]
   1ed28:	b	1ebc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x194>
   1ed2c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed30:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed34:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed38:	add	x0, x0, #0x0
   1ed3c:	add	x1, x1, #0x0
   1ed40:	add	x3, x3, #0x0
   1ed44:	mov	w2, #0x43                  	// #67
   1ed48:	bl	0 <__assert_fail>
   1ed4c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed50:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed54:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed58:	add	x0, x0, #0x0
   1ed5c:	add	x1, x1, #0x0
   1ed60:	add	x3, x3, #0x0
   1ed64:	mov	w2, #0x252                 	// #594
   1ed68:	bl	0 <__assert_fail>
   1ed6c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed70:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed74:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed78:	add	x0, x0, #0x0
   1ed7c:	add	x1, x1, #0x0
   1ed80:	add	x3, x3, #0x0
   1ed84:	mov	w2, #0x436                 	// #1078
   1ed88:	bl	0 <__assert_fail>
   1ed8c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed90:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed94:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed98:	add	x0, x0, #0x0
   1ed9c:	add	x1, x1, #0x0
   1eda0:	add	x3, x3, #0x0
   1eda4:	mov	w2, #0x121                 	// #289
   1eda8:	bl	0 <__assert_fail>

000000000001edac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj>:
   1edac:	stp	x29, x30, [sp, #-64]!
   1edb0:	str	x23, [sp, #16]
   1edb4:	stp	x22, x21, [sp, #32]
   1edb8:	stp	x20, x19, [sp, #48]
   1edbc:	mov	x29, sp
   1edc0:	ldrb	w9, [x1, #1]
   1edc4:	ldp	w8, w10, [x2, #8]
   1edc8:	mov	w20, w3
   1edcc:	mov	x19, x2
   1edd0:	and	w9, w9, #0x7f
   1edd4:	cmp	w9, #0x1
   1edd8:	mov	x22, x1
   1eddc:	cset	w23, eq  // eq = none
   1ede0:	cmp	w8, w10
   1ede4:	mov	x21, x0
   1ede8:	b.cs	1ef90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x1e4>  // b.hs, b.nlast
   1edec:	ldr	x9, [x19]
   1edf0:	str	x23, [x9, w8, uxtw #3]
   1edf4:	ldp	w8, w9, [x19, #8]
   1edf8:	cmp	w8, w9
   1edfc:	b.cs	1f0b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1ee00:	add	w8, w8, #0x1
   1ee04:	str	w8, [x19, #8]
   1ee08:	ldrh	w23, [x22, #2]
   1ee0c:	cmp	w8, w9
   1ee10:	b.cs	1efac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x200>  // b.hs, b.nlast
   1ee14:	ldr	x9, [x19]
   1ee18:	str	x23, [x9, w8, uxtw #3]
   1ee1c:	ldp	w8, w9, [x19, #8]
   1ee20:	cmp	w8, w9
   1ee24:	b.cs	1f0b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1ee28:	add	w8, w8, #0x1
   1ee2c:	str	w8, [x19, #8]
   1ee30:	ldr	w23, [x22, #24]
   1ee34:	cmp	w8, w9
   1ee38:	b.cs	1efc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x21c>  // b.hs, b.nlast
   1ee3c:	ldr	x9, [x19]
   1ee40:	str	x23, [x9, w8, uxtw #3]
   1ee44:	ldp	w8, w9, [x19, #8]
   1ee48:	cmp	w8, w9
   1ee4c:	b.cs	1f0b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1ee50:	add	w8, w8, #0x1
   1ee54:	str	w8, [x19, #8]
   1ee58:	ldr	w10, [x22, #8]
   1ee5c:	cbz	w10, 1f0f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x348>
   1ee60:	sub	x10, x22, x10, lsl #3
   1ee64:	ldr	x10, [x10]
   1ee68:	cbz	x10, 1ee78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0xcc>
   1ee6c:	ldrb	w11, [x10]
   1ee70:	cmp	w11, #0xf
   1ee74:	b.ne	1f114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x368>  // b.any
   1ee78:	ldr	w12, [x21, #304]
   1ee7c:	cbz	w12, 1f024 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x278>
   1ee80:	orr	x11, x10, #0x4
   1ee84:	cmn	x11, #0x4
   1ee88:	b.eq	1f0d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x328>  // b.none
   1ee8c:	ldr	x11, [x21, #288]
   1ee90:	ubfx	x13, x10, #4, #28
   1ee94:	eor	w14, w13, w10, lsr #9
   1ee98:	sub	w13, w12, #0x1
   1ee9c:	and	w12, w14, w13
   1eea0:	lsl	x14, x12, #4
   1eea4:	ldr	x14, [x11, x14]
   1eea8:	cmp	x14, x10
   1eeac:	b.ne	1efe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x238>  // b.any
   1eeb0:	add	x10, x11, x12, lsl #4
   1eeb4:	ldr	w23, [x10, #12]
   1eeb8:	cmp	w8, w9
   1eebc:	b.cs	1f030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x284>  // b.hs, b.nlast
   1eec0:	ldr	x9, [x19]
   1eec4:	str	x23, [x9, w8, uxtw #3]
   1eec8:	ldp	w8, w9, [x19, #8]
   1eecc:	cmp	w8, w9
   1eed0:	b.cs	1f0b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1eed4:	add	w8, w8, #0x1
   1eed8:	str	w8, [x19, #8]
   1eedc:	ldr	w10, [x22, #8]
   1eee0:	cmp	w10, #0x1
   1eee4:	b.ls	1f0f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x348>  // b.plast
   1eee8:	sub	x10, x22, x10, lsl #3
   1eeec:	ldr	x10, [x10, #8]
   1eef0:	cbz	x10, 1ef00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x154>
   1eef4:	ldrb	w11, [x10]
   1eef8:	cmp	w11, #0x4
   1eefc:	b.ne	1f134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x388>  // b.any
   1ef00:	ldr	w12, [x21, #304]
   1ef04:	cbz	w12, 1f08c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2e0>
   1ef08:	orr	x11, x10, #0x4
   1ef0c:	cmn	x11, #0x4
   1ef10:	b.eq	1f0d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x328>  // b.none
   1ef14:	ldr	x11, [x21, #288]
   1ef18:	ubfx	x13, x10, #4, #28
   1ef1c:	eor	w14, w13, w10, lsr #9
   1ef20:	sub	w13, w12, #0x1
   1ef24:	and	w12, w14, w13
   1ef28:	lsl	x14, x12, #4
   1ef2c:	ldr	x14, [x11, x14]
   1ef30:	cmp	x14, x10
   1ef34:	b.ne	1f04c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2a0>  // b.any
   1ef38:	add	x10, x11, x12, lsl #4
   1ef3c:	ldr	w22, [x10, #12]
   1ef40:	cmp	w8, w9
   1ef44:	b.cs	1f098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2ec>  // b.hs, b.nlast
   1ef48:	ldr	x9, [x19]
   1ef4c:	str	x22, [x9, w8, uxtw #3]
   1ef50:	ldp	w8, w9, [x19, #8]
   1ef54:	cmp	w8, w9
   1ef58:	b.cs	1f0b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1ef5c:	add	w8, w8, #0x1
   1ef60:	str	w8, [x19, #8]
   1ef64:	ldr	x0, [x21]
   1ef68:	mov	w1, #0x22                  	// #34
   1ef6c:	mov	x2, x19
   1ef70:	mov	w3, w20
   1ef74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ef78:	str	wzr, [x19, #8]
   1ef7c:	ldp	x20, x19, [sp, #48]
   1ef80:	ldp	x22, x21, [sp, #32]
   1ef84:	ldr	x23, [sp, #16]
   1ef88:	ldp	x29, x30, [sp], #64
   1ef8c:	ret
   1ef90:	add	x1, x19, #0x10
   1ef94:	mov	w3, #0x8                   	// #8
   1ef98:	mov	x0, x19
   1ef9c:	mov	x2, xzr
   1efa0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1efa4:	ldr	w8, [x19, #8]
   1efa8:	b	1edec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x40>
   1efac:	add	x1, x19, #0x10
   1efb0:	mov	w3, #0x8                   	// #8
   1efb4:	mov	x0, x19
   1efb8:	mov	x2, xzr
   1efbc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1efc0:	ldr	w8, [x19, #8]
   1efc4:	b	1ee14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x68>
   1efc8:	add	x1, x19, #0x10
   1efcc:	mov	w3, #0x8                   	// #8
   1efd0:	mov	x0, x19
   1efd4:	mov	x2, xzr
   1efd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1efdc:	ldr	w8, [x19, #8]
   1efe0:	b	1ee3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x90>
   1efe4:	mov	w15, #0x1                   	// #1
   1efe8:	cmn	x14, #0x4
   1efec:	b.eq	1f024 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x278>  // b.none
   1eff0:	add	w12, w12, w15
   1eff4:	and	w12, w12, w13
   1eff8:	lsl	x14, x12, #4
   1effc:	ldr	x14, [x11, x14]
   1f000:	add	w15, w15, #0x1
   1f004:	cmp	x14, x10
   1f008:	b.ne	1efe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x23c>  // b.any
   1f00c:	mov	w12, w12
   1f010:	add	x10, x11, x12, lsl #4
   1f014:	ldr	w23, [x10, #12]
   1f018:	cmp	w8, w9
   1f01c:	b.cc	1eec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x114>  // b.lo, b.ul, b.last
   1f020:	b	1f030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x284>
   1f024:	mov	x23, xzr
   1f028:	cmp	w8, w9
   1f02c:	b.cc	1eec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x114>  // b.lo, b.ul, b.last
   1f030:	add	x1, x19, #0x10
   1f034:	mov	w3, #0x8                   	// #8
   1f038:	mov	x0, x19
   1f03c:	mov	x2, xzr
   1f040:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f044:	ldr	w8, [x19, #8]
   1f048:	b	1eec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x114>
   1f04c:	mov	w15, #0x1                   	// #1
   1f050:	cmn	x14, #0x4
   1f054:	b.eq	1f08c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2e0>  // b.none
   1f058:	add	w12, w12, w15
   1f05c:	and	w12, w12, w13
   1f060:	lsl	x14, x12, #4
   1f064:	ldr	x14, [x11, x14]
   1f068:	add	w15, w15, #0x1
   1f06c:	cmp	x14, x10
   1f070:	b.ne	1f050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2a4>  // b.any
   1f074:	mov	w12, w12
   1f078:	add	x10, x11, x12, lsl #4
   1f07c:	ldr	w22, [x10, #12]
   1f080:	cmp	w8, w9
   1f084:	b.cc	1ef48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x19c>  // b.lo, b.ul, b.last
   1f088:	b	1f098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2ec>
   1f08c:	mov	x22, xzr
   1f090:	cmp	w8, w9
   1f094:	b.cc	1ef48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x19c>  // b.lo, b.ul, b.last
   1f098:	add	x1, x19, #0x10
   1f09c:	mov	w3, #0x8                   	// #8
   1f0a0:	mov	x0, x19
   1f0a4:	mov	x2, xzr
   1f0a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f0ac:	ldr	w8, [x19, #8]
   1f0b0:	b	1ef48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x19c>
   1f0b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f0b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f0bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f0c0:	add	x0, x0, #0x0
   1f0c4:	add	x1, x1, #0x0
   1f0c8:	add	x3, x3, #0x0
   1f0cc:	mov	w2, #0x43                  	// #67
   1f0d0:	bl	0 <__assert_fail>
   1f0d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f0d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f0dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f0e0:	add	x0, x0, #0x0
   1f0e4:	add	x1, x1, #0x0
   1f0e8:	add	x3, x3, #0x0
   1f0ec:	mov	w2, #0x252                 	// #594
   1f0f0:	bl	0 <__assert_fail>
   1f0f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f0f8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f0fc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f100:	add	x0, x0, #0x0
   1f104:	add	x1, x1, #0x0
   1f108:	add	x3, x3, #0x0
   1f10c:	mov	w2, #0x436                 	// #1078
   1f110:	bl	0 <__assert_fail>
   1f114:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f118:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f11c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f120:	add	x0, x0, #0x0
   1f124:	add	x1, x1, #0x0
   1f128:	add	x3, x3, #0x0
   1f12c:	mov	w2, #0x134                 	// #308
   1f130:	bl	0 <__assert_fail>
   1f134:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f138:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f13c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f140:	add	x0, x0, #0x0
   1f144:	add	x1, x1, #0x0
   1f148:	add	x3, x3, #0x0
   1f14c:	mov	w2, #0x134                 	// #308
   1f150:	bl	0 <__assert_fail>

000000000001f154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj>:
   1f154:	stp	x29, x30, [sp, #-64]!
   1f158:	str	x23, [sp, #16]
   1f15c:	stp	x22, x21, [sp, #32]
   1f160:	stp	x20, x19, [sp, #48]
   1f164:	mov	x29, sp
   1f168:	ldrb	w9, [x1, #1]
   1f16c:	ldp	w8, w10, [x2, #8]
   1f170:	mov	w20, w3
   1f174:	mov	x19, x2
   1f178:	and	w9, w9, #0x7f
   1f17c:	cmp	w9, #0x1
   1f180:	mov	x22, x1
   1f184:	cset	w23, eq  // eq = none
   1f188:	cmp	w8, w10
   1f18c:	mov	x21, x0
   1f190:	b.cs	1f478 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x324>  // b.hs, b.nlast
   1f194:	ldr	x9, [x19]
   1f198:	str	x23, [x9, w8, uxtw #3]
   1f19c:	ldp	w8, w9, [x19, #8]
   1f1a0:	cmp	w8, w9
   1f1a4:	b.cs	1f650 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>  // b.hs, b.nlast
   1f1a8:	add	w8, w8, #0x1
   1f1ac:	str	w8, [x19, #8]
   1f1b0:	ldr	w10, [x22, #8]
   1f1b4:	cbz	w10, 1f690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x53c>
   1f1b8:	sub	x10, x22, x10, lsl #3
   1f1bc:	ldr	x10, [x10]
   1f1c0:	cbz	x10, 1f1dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x88>
   1f1c4:	ldrb	w11, [x10]
   1f1c8:	sub	w12, w11, #0xb
   1f1cc:	cmp	w12, #0xb
   1f1d0:	b.cs	1f428 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x2d4>  // b.hs, b.nlast
   1f1d4:	cmp	w12, #0xb
   1f1d8:	b.cs	1f450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x2fc>  // b.hs, b.nlast
   1f1dc:	ldr	w12, [x21, #304]
   1f1e0:	cbz	w12, 1f4f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x39c>
   1f1e4:	orr	x11, x10, #0x4
   1f1e8:	cmn	x11, #0x4
   1f1ec:	b.eq	1f670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x51c>  // b.none
   1f1f0:	ldr	x11, [x21, #288]
   1f1f4:	ubfx	x13, x10, #4, #28
   1f1f8:	eor	w14, w13, w10, lsr #9
   1f1fc:	sub	w13, w12, #0x1
   1f200:	and	w12, w14, w13
   1f204:	lsl	x14, x12, #4
   1f208:	ldr	x14, [x11, x14]
   1f20c:	cmp	x14, x10
   1f210:	b.ne	1f4b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x35c>  // b.any
   1f214:	add	x10, x11, x12, lsl #4
   1f218:	ldr	w23, [x10, #12]
   1f21c:	cmp	w8, w9
   1f220:	b.cs	1f4fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x3a8>  // b.hs, b.nlast
   1f224:	ldr	x9, [x19]
   1f228:	str	x23, [x9, w8, uxtw #3]
   1f22c:	ldp	w8, w9, [x19, #8]
   1f230:	cmp	w8, w9
   1f234:	b.cs	1f650 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>  // b.hs, b.nlast
   1f238:	add	w8, w8, #0x1
   1f23c:	str	w8, [x19, #8]
   1f240:	ldr	w10, [x22, #8]
   1f244:	cmp	w10, #0x1
   1f248:	b.ls	1f690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x53c>  // b.plast
   1f24c:	sub	x10, x22, x10, lsl #3
   1f250:	ldr	x10, [x10, #8]
   1f254:	cbz	x10, 1f264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x110>
   1f258:	ldrb	w11, [x10]
   1f25c:	cmp	w11, #0x18
   1f260:	b.ne	1f6b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x55c>  // b.any
   1f264:	ldr	w12, [x21, #304]
   1f268:	cbz	w12, 1f558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x404>
   1f26c:	orr	x11, x10, #0x4
   1f270:	cmn	x11, #0x4
   1f274:	b.eq	1f670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x51c>  // b.none
   1f278:	ldr	x11, [x21, #288]
   1f27c:	ubfx	x13, x10, #4, #28
   1f280:	eor	w14, w13, w10, lsr #9
   1f284:	sub	w13, w12, #0x1
   1f288:	and	w12, w14, w13
   1f28c:	lsl	x14, x12, #4
   1f290:	ldr	x14, [x11, x14]
   1f294:	cmp	x14, x10
   1f298:	b.ne	1f518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x3c4>  // b.any
   1f29c:	add	x10, x11, x12, lsl #4
   1f2a0:	ldr	w23, [x10, #12]
   1f2a4:	cmp	w8, w9
   1f2a8:	b.cs	1f564 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x410>  // b.hs, b.nlast
   1f2ac:	ldr	x9, [x19]
   1f2b0:	str	x23, [x9, w8, uxtw #3]
   1f2b4:	ldp	w8, w9, [x19, #8]
   1f2b8:	cmp	w8, w9
   1f2bc:	b.cs	1f650 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>  // b.hs, b.nlast
   1f2c0:	add	w8, w8, #0x1
   1f2c4:	str	w8, [x19, #8]
   1f2c8:	ldr	w10, [x22, #8]
   1f2cc:	cmp	w10, #0x2
   1f2d0:	b.ls	1f690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x53c>  // b.plast
   1f2d4:	sub	x10, x22, x10, lsl #3
   1f2d8:	ldr	x10, [x10, #16]
   1f2dc:	cbz	x10, 1f2e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x194>
   1f2e0:	ldrb	w11, [x10]
   1f2e4:	cbnz	w11, 1f6d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x57c>
   1f2e8:	ldr	w12, [x21, #304]
   1f2ec:	cbz	w12, 1f5c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x46c>
   1f2f0:	orr	x11, x10, #0x4
   1f2f4:	cmn	x11, #0x4
   1f2f8:	b.eq	1f670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x51c>  // b.none
   1f2fc:	ldr	x11, [x21, #288]
   1f300:	ubfx	x13, x10, #4, #28
   1f304:	eor	w14, w13, w10, lsr #9
   1f308:	sub	w13, w12, #0x1
   1f30c:	and	w12, w14, w13
   1f310:	lsl	x14, x12, #4
   1f314:	ldr	x14, [x11, x14]
   1f318:	cmp	x14, x10
   1f31c:	b.ne	1f580 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x42c>  // b.any
   1f320:	add	x10, x11, x12, lsl #4
   1f324:	ldr	w23, [x10, #12]
   1f328:	cmp	w8, w9
   1f32c:	b.cs	1f5cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x478>  // b.hs, b.nlast
   1f330:	ldr	x9, [x19]
   1f334:	str	x23, [x9, w8, uxtw #3]
   1f338:	ldp	w8, w9, [x19, #8]
   1f33c:	cmp	w8, w9
   1f340:	b.cs	1f650 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>  // b.hs, b.nlast
   1f344:	add	w8, w8, #0x1
   1f348:	str	w8, [x19, #8]
   1f34c:	ldr	w10, [x22, #8]
   1f350:	cmp	w10, #0x3
   1f354:	b.ls	1f690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x53c>  // b.plast
   1f358:	sub	x10, x22, x10, lsl #3
   1f35c:	ldr	x10, [x10, #24]
   1f360:	cbz	x10, 1f370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x21c>
   1f364:	ldrb	w11, [x10]
   1f368:	cmp	w11, #0xf
   1f36c:	b.ne	1f6f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x59c>  // b.any
   1f370:	ldr	w12, [x21, #304]
   1f374:	cbz	w12, 1f628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4d4>
   1f378:	orr	x11, x10, #0x4
   1f37c:	cmn	x11, #0x4
   1f380:	b.eq	1f670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x51c>  // b.none
   1f384:	ldr	x11, [x21, #288]
   1f388:	ubfx	x13, x10, #4, #28
   1f38c:	eor	w14, w13, w10, lsr #9
   1f390:	sub	w13, w12, #0x1
   1f394:	and	w12, w14, w13
   1f398:	lsl	x14, x12, #4
   1f39c:	ldr	x14, [x11, x14]
   1f3a0:	cmp	x14, x10
   1f3a4:	b.ne	1f5e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x494>  // b.any
   1f3a8:	add	x10, x11, x12, lsl #4
   1f3ac:	ldr	w23, [x10, #12]
   1f3b0:	cmp	w8, w9
   1f3b4:	b.cs	1f634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4e0>  // b.hs, b.nlast
   1f3b8:	ldr	x9, [x19]
   1f3bc:	str	x23, [x9, w8, uxtw #3]
   1f3c0:	ldp	w8, w9, [x19, #8]
   1f3c4:	cmp	w8, w9
   1f3c8:	b.cs	1f650 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>  // b.hs, b.nlast
   1f3cc:	add	w8, w8, #0x1
   1f3d0:	str	w8, [x19, #8]
   1f3d4:	ldr	w22, [x22, #24]
   1f3d8:	cmp	w8, w9
   1f3dc:	b.cs	1f494 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x340>  // b.hs, b.nlast
   1f3e0:	ldr	x9, [x19]
   1f3e4:	str	x22, [x9, w8, uxtw #3]
   1f3e8:	ldp	w8, w9, [x19, #8]
   1f3ec:	cmp	w8, w9
   1f3f0:	b.cs	1f650 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>  // b.hs, b.nlast
   1f3f4:	add	w8, w8, #0x1
   1f3f8:	str	w8, [x19, #8]
   1f3fc:	ldr	x0, [x21]
   1f400:	mov	w1, #0x2c                  	// #44
   1f404:	mov	x2, x19
   1f408:	mov	w3, w20
   1f40c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f410:	str	wzr, [x19, #8]
   1f414:	ldp	x20, x19, [sp, #48]
   1f418:	ldp	x22, x21, [sp, #32]
   1f41c:	ldr	x23, [sp, #16]
   1f420:	ldp	x29, x30, [sp], #64
   1f424:	ret
   1f428:	cmp	w11, #0x1f
   1f42c:	b.eq	1f1d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x80>  // b.none
   1f430:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f434:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f438:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f43c:	add	x0, x0, #0x0
   1f440:	add	x1, x1, #0x0
   1f444:	add	x3, x3, #0x0
   1f448:	mov	w2, #0x134                 	// #308
   1f44c:	bl	0 <__assert_fail>
   1f450:	cmp	w11, #0x1f
   1f454:	b.eq	1f1dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x88>  // b.none
   1f458:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f45c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f460:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f464:	add	x0, x0, #0x0
   1f468:	add	x1, x1, #0x0
   1f46c:	add	x3, x3, #0x0
   1f470:	mov	w2, #0x108                 	// #264
   1f474:	bl	0 <__assert_fail>
   1f478:	add	x1, x19, #0x10
   1f47c:	mov	w3, #0x8                   	// #8
   1f480:	mov	x0, x19
   1f484:	mov	x2, xzr
   1f488:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f48c:	ldr	w8, [x19, #8]
   1f490:	b	1f194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x40>
   1f494:	add	x1, x19, #0x10
   1f498:	mov	w3, #0x8                   	// #8
   1f49c:	mov	x0, x19
   1f4a0:	mov	x2, xzr
   1f4a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f4a8:	ldr	w8, [x19, #8]
   1f4ac:	b	1f3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x28c>
   1f4b0:	mov	w15, #0x1                   	// #1
   1f4b4:	cmn	x14, #0x4
   1f4b8:	b.eq	1f4f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x39c>  // b.none
   1f4bc:	add	w12, w12, w15
   1f4c0:	and	w12, w12, w13
   1f4c4:	lsl	x14, x12, #4
   1f4c8:	ldr	x14, [x11, x14]
   1f4cc:	add	w15, w15, #0x1
   1f4d0:	cmp	x14, x10
   1f4d4:	b.ne	1f4b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x360>  // b.any
   1f4d8:	mov	w12, w12
   1f4dc:	add	x10, x11, x12, lsl #4
   1f4e0:	ldr	w23, [x10, #12]
   1f4e4:	cmp	w8, w9
   1f4e8:	b.cc	1f224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0xd0>  // b.lo, b.ul, b.last
   1f4ec:	b	1f4fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x3a8>
   1f4f0:	mov	x23, xzr
   1f4f4:	cmp	w8, w9
   1f4f8:	b.cc	1f224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0xd0>  // b.lo, b.ul, b.last
   1f4fc:	add	x1, x19, #0x10
   1f500:	mov	w3, #0x8                   	// #8
   1f504:	mov	x0, x19
   1f508:	mov	x2, xzr
   1f50c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f510:	ldr	w8, [x19, #8]
   1f514:	b	1f224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0xd0>
   1f518:	mov	w15, #0x1                   	// #1
   1f51c:	cmn	x14, #0x4
   1f520:	b.eq	1f558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x404>  // b.none
   1f524:	add	w12, w12, w15
   1f528:	and	w12, w12, w13
   1f52c:	lsl	x14, x12, #4
   1f530:	ldr	x14, [x11, x14]
   1f534:	add	w15, w15, #0x1
   1f538:	cmp	x14, x10
   1f53c:	b.ne	1f51c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x3c8>  // b.any
   1f540:	mov	w12, w12
   1f544:	add	x10, x11, x12, lsl #4
   1f548:	ldr	w23, [x10, #12]
   1f54c:	cmp	w8, w9
   1f550:	b.cc	1f2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x158>  // b.lo, b.ul, b.last
   1f554:	b	1f564 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x410>
   1f558:	mov	x23, xzr
   1f55c:	cmp	w8, w9
   1f560:	b.cc	1f2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x158>  // b.lo, b.ul, b.last
   1f564:	add	x1, x19, #0x10
   1f568:	mov	w3, #0x8                   	// #8
   1f56c:	mov	x0, x19
   1f570:	mov	x2, xzr
   1f574:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f578:	ldr	w8, [x19, #8]
   1f57c:	b	1f2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x158>
   1f580:	mov	w15, #0x1                   	// #1
   1f584:	cmn	x14, #0x4
   1f588:	b.eq	1f5c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x46c>  // b.none
   1f58c:	add	w12, w12, w15
   1f590:	and	w12, w12, w13
   1f594:	lsl	x14, x12, #4
   1f598:	ldr	x14, [x11, x14]
   1f59c:	add	w15, w15, #0x1
   1f5a0:	cmp	x14, x10
   1f5a4:	b.ne	1f584 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x430>  // b.any
   1f5a8:	mov	w12, w12
   1f5ac:	add	x10, x11, x12, lsl #4
   1f5b0:	ldr	w23, [x10, #12]
   1f5b4:	cmp	w8, w9
   1f5b8:	b.cc	1f330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x1dc>  // b.lo, b.ul, b.last
   1f5bc:	b	1f5cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x478>
   1f5c0:	mov	x23, xzr
   1f5c4:	cmp	w8, w9
   1f5c8:	b.cc	1f330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x1dc>  // b.lo, b.ul, b.last
   1f5cc:	add	x1, x19, #0x10
   1f5d0:	mov	w3, #0x8                   	// #8
   1f5d4:	mov	x0, x19
   1f5d8:	mov	x2, xzr
   1f5dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f5e0:	ldr	w8, [x19, #8]
   1f5e4:	b	1f330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x1dc>
   1f5e8:	mov	w15, #0x1                   	// #1
   1f5ec:	cmn	x14, #0x4
   1f5f0:	b.eq	1f628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4d4>  // b.none
   1f5f4:	add	w12, w12, w15
   1f5f8:	and	w12, w12, w13
   1f5fc:	lsl	x14, x12, #4
   1f600:	ldr	x14, [x11, x14]
   1f604:	add	w15, w15, #0x1
   1f608:	cmp	x14, x10
   1f60c:	b.ne	1f5ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x498>  // b.any
   1f610:	mov	w12, w12
   1f614:	add	x10, x11, x12, lsl #4
   1f618:	ldr	w23, [x10, #12]
   1f61c:	cmp	w8, w9
   1f620:	b.cc	1f3b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x264>  // b.lo, b.ul, b.last
   1f624:	b	1f634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4e0>
   1f628:	mov	x23, xzr
   1f62c:	cmp	w8, w9
   1f630:	b.cc	1f3b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x264>  // b.lo, b.ul, b.last
   1f634:	add	x1, x19, #0x10
   1f638:	mov	w3, #0x8                   	// #8
   1f63c:	mov	x0, x19
   1f640:	mov	x2, xzr
   1f644:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f648:	ldr	w8, [x19, #8]
   1f64c:	b	1f3b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x264>
   1f650:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f654:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f658:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f65c:	add	x0, x0, #0x0
   1f660:	add	x1, x1, #0x0
   1f664:	add	x3, x3, #0x0
   1f668:	mov	w2, #0x43                  	// #67
   1f66c:	bl	0 <__assert_fail>
   1f670:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f674:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f678:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f67c:	add	x0, x0, #0x0
   1f680:	add	x1, x1, #0x0
   1f684:	add	x3, x3, #0x0
   1f688:	mov	w2, #0x252                 	// #594
   1f68c:	bl	0 <__assert_fail>
   1f690:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f694:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f698:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f69c:	add	x0, x0, #0x0
   1f6a0:	add	x1, x1, #0x0
   1f6a4:	add	x3, x3, #0x0
   1f6a8:	mov	w2, #0x436                 	// #1078
   1f6ac:	bl	0 <__assert_fail>
   1f6b0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f6b4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f6b8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f6bc:	add	x0, x0, #0x0
   1f6c0:	add	x1, x1, #0x0
   1f6c4:	add	x3, x3, #0x0
   1f6c8:	mov	w2, #0x134                 	// #308
   1f6cc:	bl	0 <__assert_fail>
   1f6d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f6d4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f6d8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f6dc:	add	x0, x0, #0x0
   1f6e0:	add	x1, x1, #0x0
   1f6e4:	add	x3, x3, #0x0
   1f6e8:	mov	w2, #0x121                 	// #289
   1f6ec:	bl	0 <__assert_fail>
   1f6f0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f6f4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f6f8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f6fc:	add	x0, x0, #0x0
   1f700:	add	x1, x1, #0x0
   1f704:	add	x3, x3, #0x0
   1f708:	mov	w2, #0x134                 	// #308
   1f70c:	bl	0 <__assert_fail>

000000000001f710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>:
   1f710:	sub	sp, sp, #0xa0
   1f714:	stp	x29, x30, [sp, #80]
   1f718:	str	x25, [sp, #96]
   1f71c:	stp	x24, x23, [sp, #112]
   1f720:	stp	x22, x21, [sp, #128]
   1f724:	stp	x20, x19, [sp, #144]
   1f728:	add	x29, sp, #0x50
   1f72c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f730:	ldr	d0, [x8]
   1f734:	mov	x8, sp
   1f738:	mov	x19, x1
   1f73c:	mov	x21, x0
   1f740:	add	x23, x8, #0x10
   1f744:	mov	x1, sp
   1f748:	mov	x0, x2
   1f74c:	str	x23, [sp]
   1f750:	str	d0, [sp, #8]
   1f754:	bl	0 <_ZNK4llvm12GlobalObject14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
   1f758:	ldr	w10, [sp, #8]
   1f75c:	ldr	x20, [sp]
   1f760:	cbz	w10, 1f898 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x188>
   1f764:	ldp	w8, w9, [x19, #8]
   1f768:	add	x24, x20, x10, lsl #4
   1f76c:	add	x22, x19, #0x10
   1f770:	ldr	w25, [x20]
   1f774:	cmp	w8, w9
   1f778:	b.cs	1f81c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x10c>  // b.hs, b.nlast
   1f77c:	ldr	x9, [x19]
   1f780:	str	x25, [x9, w8, uxtw #3]
   1f784:	ldp	w8, w9, [x19, #8]
   1f788:	cmp	w8, w9
   1f78c:	b.cs	1f8e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x1d4>  // b.hs, b.nlast
   1f790:	add	w8, w8, #0x1
   1f794:	str	w8, [x19, #8]
   1f798:	ldr	w12, [x21, #304]
   1f79c:	cbz	w12, 1f904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x1f4>
   1f7a0:	ldr	x10, [x20, #8]
   1f7a4:	orr	x11, x10, #0x4
   1f7a8:	cmn	x11, #0x4
   1f7ac:	b.eq	1f8c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x1b4>  // b.none
   1f7b0:	ldr	x11, [x21, #288]
   1f7b4:	ubfx	x13, x10, #4, #28
   1f7b8:	eor	w14, w13, w10, lsr #9
   1f7bc:	sub	w13, w12, #0x1
   1f7c0:	and	w12, w14, w13
   1f7c4:	lsl	x14, x12, #4
   1f7c8:	ldr	x14, [x11, x14]
   1f7cc:	cmp	x14, x10
   1f7d0:	b.ne	1f838 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x128>  // b.any
   1f7d4:	add	x10, x11, x12, lsl #4
   1f7d8:	ldr	x10, [x10, #8]
   1f7dc:	lsr	x10, x10, #32
   1f7e0:	cbz	x10, 1f904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x1f4>
   1f7e4:	cmp	w8, w9
   1f7e8:	sub	w25, w10, #0x1
   1f7ec:	b.cs	1f878 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x168>  // b.hs, b.nlast
   1f7f0:	ldr	x9, [x19]
   1f7f4:	str	x25, [x9, w8, uxtw #3]
   1f7f8:	ldp	w8, w9, [x19, #8]
   1f7fc:	cmp	w8, w9
   1f800:	b.cs	1f8e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x1d4>  // b.hs, b.nlast
   1f804:	add	x20, x20, #0x10
   1f808:	add	w8, w8, #0x1
   1f80c:	cmp	x20, x24
   1f810:	str	w8, [x19, #8]
   1f814:	b.ne	1f770 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x60>  // b.any
   1f818:	b	1f894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x184>
   1f81c:	mov	w3, #0x8                   	// #8
   1f820:	mov	x0, x19
   1f824:	mov	x1, x22
   1f828:	mov	x2, xzr
   1f82c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f830:	ldr	w8, [x19, #8]
   1f834:	b	1f77c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x6c>
   1f838:	mov	w15, #0x1                   	// #1
   1f83c:	cmn	x14, #0x4
   1f840:	b.eq	1f904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x1f4>  // b.none
   1f844:	add	w12, w12, w15
   1f848:	and	w12, w12, w13
   1f84c:	lsl	x14, x12, #4
   1f850:	ldr	x14, [x11, x14]
   1f854:	add	w15, w15, #0x1
   1f858:	cmp	x14, x10
   1f85c:	b.ne	1f83c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x12c>  // b.any
   1f860:	mov	w12, w12
   1f864:	add	x10, x11, x12, lsl #4
   1f868:	ldr	x10, [x10, #8]
   1f86c:	lsr	x10, x10, #32
   1f870:	cbnz	x10, 1f7e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0xd4>
   1f874:	b	1f904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x1f4>
   1f878:	mov	w3, #0x8                   	// #8
   1f87c:	mov	x0, x19
   1f880:	mov	x1, x22
   1f884:	mov	x2, xzr
   1f888:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1f88c:	ldr	w8, [x19, #8]
   1f890:	b	1f7f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0xe0>
   1f894:	ldr	x20, [sp]
   1f898:	cmp	x20, x23
   1f89c:	b.eq	1f8a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x198>  // b.none
   1f8a0:	mov	x0, x20
   1f8a4:	bl	0 <free>
   1f8a8:	ldp	x20, x19, [sp, #144]
   1f8ac:	ldp	x22, x21, [sp, #128]
   1f8b0:	ldp	x24, x23, [sp, #112]
   1f8b4:	ldr	x25, [sp, #96]
   1f8b8:	ldp	x29, x30, [sp, #80]
   1f8bc:	add	sp, sp, #0xa0
   1f8c0:	ret
   1f8c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f8c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f8cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f8d0:	add	x0, x0, #0x0
   1f8d4:	add	x1, x1, #0x0
   1f8d8:	add	x3, x3, #0x0
   1f8dc:	mov	w2, #0x252                 	// #594
   1f8e0:	bl	0 <__assert_fail>
   1f8e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f8e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f8ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f8f0:	add	x0, x0, #0x0
   1f8f4:	add	x1, x1, #0x0
   1f8f8:	add	x3, x3, #0x0
   1f8fc:	mov	w2, #0x43                  	// #67
   1f900:	bl	0 <__assert_fail>
   1f904:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f908:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f90c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f910:	add	x0, x0, #0x0
   1f914:	add	x1, x1, #0x0
   1f918:	add	x3, x3, #0x0
   1f91c:	mov	w2, #0x9b                  	// #155
   1f920:	bl	0 <__assert_fail>

000000000001f924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE>:
   1f924:	stp	x29, x30, [sp, #-96]!
   1f928:	stp	x28, x27, [sp, #16]
   1f92c:	stp	x26, x25, [sp, #32]
   1f930:	stp	x24, x23, [sp, #48]
   1f934:	stp	x22, x21, [sp, #64]
   1f938:	stp	x20, x19, [sp, #80]
   1f93c:	mov	x29, sp
   1f940:	sub	sp, sp, #0x440
   1f944:	str	x0, [sp, #24]
   1f948:	add	x0, x0, #0x18
   1f94c:	mov	x20, x3
   1f950:	mov	w23, w2
   1f954:	mov	x21, x1
   1f958:	str	x0, [sp, #32]
   1f95c:	bl	0 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE>
   1f960:	mov	x27, x21
   1f964:	ldrb	w8, [x27, #16]!
   1f968:	sub	w9, w8, #0x19
   1f96c:	cmp	w9, #0x42
   1f970:	b.hi	20334 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xa10>  // b.pmore
   1f974:	adrp	x10, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1f978:	add	x10, x10, #0x0
   1f97c:	adr	x11, 1f998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x74>
   1f980:	ldrh	w12, [x10, x9, lsl #1]
   1f984:	add	x11, x11, x12, lsl #2
   1f988:	mov	w24, #0xf                   	// #15
   1f98c:	mov	w25, #0xc                   	// #12
   1f990:	mov	w22, w23
   1f994:	br	x11
   1f998:	ldur	x1, [x21, #-24]
   1f99c:	ldr	x0, [sp, #32]
   1f9a0:	cmp	w8, #0x4c
   1f9a4:	mov	w8, #0x32                  	// #50
   1f9a8:	cinc	w24, w8, ne  // ne = any
   1f9ac:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f9b0:	ldp	w8, w9, [x20, #8]
   1f9b4:	sub	w19, w23, w0
   1f9b8:	cmp	w8, w9
   1f9bc:	b.cs	24d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5414>  // b.hs, b.nlast
   1f9c0:	ldr	x9, [x20]
   1f9c4:	str	w19, [x9, w8, uxtw #2]
   1f9c8:	ldp	w8, w9, [x20, #8]
   1f9cc:	cmp	w8, w9
   1f9d0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   1f9d4:	add	w8, w8, #0x1
   1f9d8:	str	w8, [x20, #8]
   1f9dc:	ldr	w10, [x21, #20]
   1f9e0:	cmp	w8, w9
   1f9e4:	and	w10, w10, #0xfffffff
   1f9e8:	sub	w28, w10, #0x1
   1f9ec:	b.cs	24d54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5430>  // b.hs, b.nlast
   1f9f0:	ldr	x9, [x20]
   1f9f4:	str	w28, [x9, w8, uxtw #2]
   1f9f8:	ldp	w8, w9, [x20, #8]
   1f9fc:	cmp	w8, w9
   1fa00:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   1fa04:	add	w8, w8, #0x1
   1fa08:	str	w8, [x20, #8]
   1fa0c:	cbz	w28, 2353c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c18>
   1fa10:	mov	x25, xzr
   1fa14:	add	x8, x20, #0x10
   1fa18:	mov	w19, #0x18                  	// #24
   1fa1c:	str	x8, [sp, #16]
   1fa20:	b	1fa50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12c>
   1fa24:	ldr	x9, [x20]
   1fa28:	str	w23, [x9, w8, uxtw #2]
   1fa2c:	ldp	w8, w9, [x20, #8]
   1fa30:	cmp	w8, w9
   1fa34:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   1fa38:	add	w8, w8, #0x1
   1fa3c:	mov	w23, w22
   1fa40:	str	w8, [x20, #8]
   1fa44:	add	x25, x25, #0x1
   1fa48:	cmp	x25, x28
   1fa4c:	b.eq	2353c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c18>  // b.none
   1fa50:	ldr	w8, [x21, #20]
   1fa54:	and	x8, x8, #0xfffffff
   1fa58:	cmp	x25, x8
   1fa5c:	b.cs	25c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6320>  // b.hs, b.nlast
   1fa60:	mneg	x8, x8, x19
   1fa64:	add	x8, x21, x8
   1fa68:	mul	x9, x25, x19
   1fa6c:	ldr	x26, [x8, x9]
   1fa70:	ldr	x0, [sp, #32]
   1fa74:	mov	x1, x26
   1fa78:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1fa7c:	ldp	w8, w9, [x20, #8]
   1fa80:	mov	w27, w0
   1fa84:	sub	w23, w23, w0
   1fa88:	cmp	w8, w9
   1fa8c:	b.cs	1fb60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x23c>  // b.hs, b.nlast
   1fa90:	ldr	x9, [x20]
   1fa94:	str	w23, [x9, w8, uxtw #2]
   1fa98:	ldp	w8, w9, [x20, #8]
   1fa9c:	cmp	w8, w9
   1faa0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   1faa4:	add	w8, w8, #0x1
   1faa8:	mov	w23, w22
   1faac:	cmp	w27, w22
   1fab0:	str	w8, [x20, #8]
   1fab4:	b.cc	1fa44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x120>  // b.lo, b.ul, b.last
   1fab8:	ldr	x11, [sp, #24]
   1fabc:	ldr	w10, [x11, #72]
   1fac0:	ldr	x11, [x11, #56]
   1fac4:	cbz	w10, 1fb24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x200>
   1fac8:	ldr	x12, [x26]
   1facc:	orr	x13, x12, #0x8
   1fad0:	cmn	x13, #0x8
   1fad4:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   1fad8:	ubfx	x13, x12, #4, #28
   1fadc:	eor	w14, w13, w12, lsr #9
   1fae0:	sub	w13, w10, #0x1
   1fae4:	and	w14, w14, w13
   1fae8:	add	x15, x11, w14, uxtw #4
   1faec:	ldr	x16, [x15]
   1faf0:	cmp	x16, x12
   1faf4:	b.eq	1fb28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x204>  // b.none
   1faf8:	mov	w17, #0x1                   	// #1
   1fafc:	cmn	x16, #0x8
   1fb00:	b.eq	1fb24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x200>  // b.none
   1fb04:	add	w14, w14, w17
   1fb08:	and	w14, w14, w13
   1fb0c:	add	x15, x11, w14, uxtw #4
   1fb10:	ldr	x16, [x15]
   1fb14:	add	w17, w17, #0x1
   1fb18:	cmp	x16, x12
   1fb1c:	b.eq	1fb28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x204>  // b.none
   1fb20:	b	1fafc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d8>
   1fb24:	add	x15, x11, x10, lsl #4
   1fb28:	add	x10, x11, x10, lsl #4
   1fb2c:	cmp	x15, x10
   1fb30:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   1fb34:	ldr	w10, [x15, #8]
   1fb38:	cmp	w8, w9
   1fb3c:	sub	w23, w10, #0x1
   1fb40:	b.cc	1fa24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x100>  // b.lo, b.ul, b.last
   1fb44:	ldr	x1, [sp, #16]
   1fb48:	mov	w3, #0x4                   	// #4
   1fb4c:	mov	x0, x20
   1fb50:	mov	x2, xzr
   1fb54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fb58:	ldr	w8, [x20, #8]
   1fb5c:	b	1fa24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x100>
   1fb60:	ldr	x1, [sp, #16]
   1fb64:	mov	w3, #0x4                   	// #4
   1fb68:	mov	x0, x20
   1fb6c:	mov	x2, xzr
   1fb70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fb74:	ldr	w8, [x20, #8]
   1fb78:	b	1fa90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16c>
   1fb7c:	ldr	w9, [x21, #20]
   1fb80:	and	x8, x9, #0xfffffff
   1fb84:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1fb88:	ldr	x22, [sp, #32]
   1fb8c:	tbnz	w9, #30, 2027c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x958>
   1fb90:	mov	w9, #0x18                  	// #24
   1fb94:	mneg	x8, x8, x9
   1fb98:	add	x8, x21, x8
   1fb9c:	b	20280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x95c>
   1fba0:	ldr	x9, [sp, #24]
   1fba4:	ldr	w8, [x9, #72]
   1fba8:	ldr	x9, [x9, #56]
   1fbac:	cbz	w8, 2104c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1728>
   1fbb0:	ldr	x10, [x21]
   1fbb4:	ldr	x22, [sp, #32]
   1fbb8:	orr	x11, x10, #0x8
   1fbbc:	cmn	x11, #0x8
   1fbc0:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   1fbc4:	ubfx	x11, x10, #4, #28
   1fbc8:	eor	w12, w11, w10, lsr #9
   1fbcc:	sub	w11, w8, #0x1
   1fbd0:	and	w12, w12, w11
   1fbd4:	add	x13, x9, w12, uxtw #4
   1fbd8:	ldr	x14, [x13]
   1fbdc:	cmp	x14, x10
   1fbe0:	b.eq	21054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1730>  // b.none
   1fbe4:	ldr	x22, [sp, #32]
   1fbe8:	mov	w15, #0x1                   	// #1
   1fbec:	cmn	x14, #0x8
   1fbf0:	b.eq	2104c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1728>  // b.none
   1fbf4:	add	w12, w12, w15
   1fbf8:	and	w12, w12, w11
   1fbfc:	add	x13, x9, w12, uxtw #4
   1fc00:	ldr	x14, [x13]
   1fc04:	add	w15, w15, #0x1
   1fc08:	cmp	x14, x10
   1fc0c:	b.eq	21054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1730>  // b.none
   1fc10:	b	1fbec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c8>
   1fc14:	ldr	w9, [x21, #20]
   1fc18:	and	x8, x9, #0xfffffff
   1fc1c:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1fc20:	ldr	x22, [sp, #32]
   1fc24:	tbnz	w9, #30, 20364 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xa40>
   1fc28:	mov	w9, #0x18                  	// #24
   1fc2c:	mneg	x8, x8, x9
   1fc30:	add	x8, x21, x8
   1fc34:	b	20368 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xa44>
   1fc38:	ldr	w9, [x21, #20]
   1fc3c:	and	x8, x9, #0xfffffff
   1fc40:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1fc44:	ldr	x22, [sp, #32]
   1fc48:	tbnz	w9, #30, 2041c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xaf8>
   1fc4c:	mov	w9, #0x18                  	// #24
   1fc50:	mneg	x8, x8, x9
   1fc54:	add	x10, x21, x8
   1fc58:	b	20420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xafc>
   1fc5c:	ldr	w9, [x21, #20]
   1fc60:	and	x8, x9, #0xfffffff
   1fc64:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1fc68:	ldr	x22, [sp, #32]
   1fc6c:	tbnz	w9, #30, 20490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xb6c>
   1fc70:	mov	w9, #0x18                  	// #24
   1fc74:	mneg	x8, x8, x9
   1fc78:	add	x8, x21, x8
   1fc7c:	b	20494 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xb70>
   1fc80:	mov	x0, x21
   1fc84:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
   1fc88:	ldr	w9, [x21, #20]
   1fc8c:	and	x8, x9, #0xfffffff
   1fc90:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1fc94:	mov	w24, w0
   1fc98:	ldr	x0, [sp, #32]
   1fc9c:	tbnz	w9, #30, 20548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc24>
   1fca0:	mov	w9, #0x18                  	// #24
   1fca4:	mneg	x8, x8, x9
   1fca8:	add	x8, x21, x8
   1fcac:	b	2054c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc28>
   1fcb0:	ldur	x1, [x21, #-48]
   1fcb4:	cbz	x1, 25f74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6650>
   1fcb8:	ldrb	w8, [x1, #16]
   1fcbc:	ldr	x22, [sp, #32]
   1fcc0:	cmp	w8, #0x4c
   1fcc4:	b.ne	25f94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6670>  // b.any
   1fcc8:	mov	x0, x22
   1fccc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1fcd0:	ldp	w8, w9, [x20, #8]
   1fcd4:	sub	w19, w23, w0
   1fcd8:	cmp	w8, w9
   1fcdc:	b.cs	24de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x54bc>  // b.hs, b.nlast
   1fce0:	ldr	x9, [x20]
   1fce4:	str	w19, [x9, w8, uxtw #2]
   1fce8:	ldp	w8, w9, [x20, #8]
   1fcec:	cmp	w8, w9
   1fcf0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   1fcf4:	add	w8, w8, #0x1
   1fcf8:	str	w8, [x20, #8]
   1fcfc:	ldur	x1, [x21, #-24]
   1fd00:	cbz	x1, 25dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64d8>
   1fd04:	ldrb	w8, [x1, #16]
   1fd08:	cmp	w8, #0x12
   1fd0c:	b.ne	25e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64f8>  // b.any
   1fd10:	mov	x0, x22
   1fd14:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1fd18:	ldp	w8, w9, [x20, #8]
   1fd1c:	mov	w21, w0
   1fd20:	cmp	w8, w9
   1fd24:	b.cs	24dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x54d8>  // b.hs, b.nlast
   1fd28:	ldr	x9, [x20]
   1fd2c:	str	w21, [x9, w8, uxtw #2]
   1fd30:	ldp	w8, w9, [x20, #8]
   1fd34:	cmp	w8, w9
   1fd38:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   1fd3c:	add	w8, w8, #0x1
   1fd40:	mov	w25, wzr
   1fd44:	str	w8, [x20, #8]
   1fd48:	mov	w24, #0x31                  	// #49
   1fd4c:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   1fd50:	ldr	w9, [x21, #20]
   1fd54:	and	x8, x9, #0xfffffff
   1fd58:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1fd5c:	ldr	x0, [sp, #32]
   1fd60:	tbnz	w9, #30, 20604 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xce0>
   1fd64:	mov	w9, #0x18                  	// #24
   1fd68:	mneg	x8, x8, x9
   1fd6c:	add	x8, x21, x8
   1fd70:	b	20608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xce4>
   1fd74:	mov	x26, x21
   1fd78:	ldr	x24, [x26, #-24]!
   1fd7c:	ldr	w8, [x26, #44]
   1fd80:	ldr	x28, [x26, #88]
   1fd84:	tbnz	w8, #31, 21f04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x25e0>
   1fd88:	mov	x25, xzr
   1fd8c:	mov	x8, xzr
   1fd90:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ed0>
   1fd94:	ldr	w9, [x21, #20]
   1fd98:	and	x8, x9, #0xfffffff
   1fd9c:	cmp	w8, #0x1
   1fda0:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   1fda4:	ldr	x22, [sp, #32]
   1fda8:	tbnz	w9, #30, 206c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xd9c>
   1fdac:	mov	w9, #0x18                  	// #24
   1fdb0:	mneg	x8, x8, x9
   1fdb4:	add	x8, x21, x8
   1fdb8:	b	206c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xda0>
   1fdbc:	ldr	w9, [x21, #20]
   1fdc0:	and	x8, x9, #0xfffffff
   1fdc4:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1fdc8:	ldr	x22, [sp, #32]
   1fdcc:	tbnz	w9, #30, 20778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xe54>
   1fdd0:	mov	w9, #0x18                  	// #24
   1fdd4:	mneg	x8, x8, x9
   1fdd8:	add	x8, x21, x8
   1fddc:	b	2077c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xe58>
   1fde0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1fde4:	ldr	d0, [x8]
   1fde8:	ldr	x9, [sp, #24]
   1fdec:	add	x8, sp, #0x28
   1fdf0:	add	x20, x8, #0x10
   1fdf4:	str	x20, [sp, #40]
   1fdf8:	str	d0, [sp, #48]
   1fdfc:	ldr	w8, [x9, #72]
   1fe00:	ldr	x9, [x9, #56]
   1fe04:	cbz	w8, 21478 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b54>
   1fe08:	ldr	x10, [x21]
   1fe0c:	ldr	x22, [sp, #32]
   1fe10:	orr	x11, x10, #0x8
   1fe14:	cmn	x11, #0x8
   1fe18:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   1fe1c:	ubfx	x11, x10, #4, #28
   1fe20:	eor	w12, w11, w10, lsr #9
   1fe24:	sub	w11, w8, #0x1
   1fe28:	and	w12, w12, w11
   1fe2c:	add	x13, x9, w12, uxtw #4
   1fe30:	ldr	x14, [x13]
   1fe34:	cmp	x14, x10
   1fe38:	b.eq	21480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b5c>  // b.none
   1fe3c:	ldr	x22, [sp, #32]
   1fe40:	mov	w15, #0x1                   	// #1
   1fe44:	cmn	x14, #0x8
   1fe48:	b.eq	21478 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b54>  // b.none
   1fe4c:	add	w12, w12, w15
   1fe50:	and	w12, w12, w11
   1fe54:	add	x13, x9, w12, uxtw #4
   1fe58:	ldr	x14, [x13]
   1fe5c:	add	w15, w15, #0x1
   1fe60:	cmp	x14, x10
   1fe64:	b.eq	21480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b5c>  // b.none
   1fe68:	b	1fe44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x520>
   1fe6c:	ldr	x9, [sp, #24]
   1fe70:	ldr	w8, [x9, #72]
   1fe74:	ldr	x9, [x9, #56]
   1fe78:	cbz	w8, 2164c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d28>
   1fe7c:	ldr	x10, [x21, #56]
   1fe80:	ldr	x22, [sp, #32]
   1fe84:	orr	x11, x10, #0x8
   1fe88:	cmn	x11, #0x8
   1fe8c:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   1fe90:	ubfx	x11, x10, #4, #28
   1fe94:	eor	w12, w11, w10, lsr #9
   1fe98:	sub	w11, w8, #0x1
   1fe9c:	and	w12, w12, w11
   1fea0:	add	x13, x9, w12, uxtw #4
   1fea4:	ldr	x14, [x13]
   1fea8:	cmp	x14, x10
   1feac:	b.eq	21654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d30>  // b.none
   1feb0:	ldr	x22, [sp, #32]
   1feb4:	mov	w15, #0x1                   	// #1
   1feb8:	cmn	x14, #0x8
   1febc:	b.eq	2164c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d28>  // b.none
   1fec0:	add	w12, w12, w15
   1fec4:	and	w12, w12, w11
   1fec8:	add	x13, x9, w12, uxtw #4
   1fecc:	ldr	x14, [x13]
   1fed0:	add	w15, w15, #0x1
   1fed4:	cmp	x14, x10
   1fed8:	b.eq	21654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d30>  // b.none
   1fedc:	b	1feb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x594>
   1fee0:	ldr	w8, [x21, #20]
   1fee4:	and	x27, x8, #0xfffffff
   1fee8:	cbz	w27, 22048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2724>
   1feec:	cmp	w27, #0x1
   1fef0:	b.ne	22050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x272c>  // b.any
   1fef4:	ldr	x0, [sp, #32]
   1fef8:	tbnz	w8, #30, 23728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e04>
   1fefc:	sub	x8, x21, #0x18
   1ff00:	b	2372c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e08>
   1ff04:	ldur	x1, [x21, #-24]
   1ff08:	cbz	x1, 21f20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x25fc>
   1ff0c:	ldrb	w8, [x1, #16]
   1ff10:	ldr	x19, [sp, #32]
   1ff14:	cmp	w8, #0x12
   1ff18:	b.eq	21f24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2600>  // b.none
   1ff1c:	b	260a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6780>
   1ff20:	ldr	w9, [x21, #20]
   1ff24:	and	x8, x9, #0xfffffff
   1ff28:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1ff2c:	ldr	x22, [sp, #32]
   1ff30:	tbnz	w9, #30, 20830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf0c>
   1ff34:	mov	w9, #0x18                  	// #24
   1ff38:	mneg	x8, x8, x9
   1ff3c:	add	x10, x21, x8
   1ff40:	b	20834 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf10>
   1ff44:	ldr	w9, [x21, #20]
   1ff48:	and	x8, x9, #0xfffffff
   1ff4c:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1ff50:	ldr	x0, [sp, #32]
   1ff54:	tbnz	w9, #30, 208a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf80>
   1ff58:	mov	w9, #0x18                  	// #24
   1ff5c:	mneg	x8, x8, x9
   1ff60:	add	x8, x21, x8
   1ff64:	b	208a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf84>
   1ff68:	ldr	w9, [x21, #20]
   1ff6c:	and	x8, x9, #0xfffffff
   1ff70:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1ff74:	ldr	x22, [sp, #32]
   1ff78:	tbnz	w9, #30, 208f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xfd0>
   1ff7c:	mov	w9, #0x18                  	// #24
   1ff80:	mneg	x8, x8, x9
   1ff84:	add	x8, x21, x8
   1ff88:	b	208f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xfd4>
   1ff8c:	ldr	w9, [x21, #20]
   1ff90:	and	x8, x9, #0xfffffff
   1ff94:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   1ff98:	ldr	x22, [sp, #32]
   1ff9c:	tbnz	w9, #30, 209ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1088>
   1ffa0:	mov	w9, #0x18                  	// #24
   1ffa4:	mneg	x8, x8, x9
   1ffa8:	add	x8, x21, x8
   1ffac:	b	209b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x108c>
   1ffb0:	ldur	x24, [x21, #-24]
   1ffb4:	ldr	w8, [x21, #20]
   1ffb8:	ldr	x26, [x21, #64]
   1ffbc:	tbnz	w8, #31, 22010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x26ec>
   1ffc0:	mov	x25, xzr
   1ffc4:	mov	x8, xzr
   1ffc8:	b	23e9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4578>
   1ffcc:	ldr	w9, [x21, #20]
   1ffd0:	and	x8, x9, #0xfffffff
   1ffd4:	cbz	w8, 25c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6340>
   1ffd8:	ldr	x22, [sp, #32]
   1ffdc:	tbnz	w9, #30, 20ad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x11ac>
   1ffe0:	mov	w9, #0x18                  	// #24
   1ffe4:	mneg	x8, x8, x9
   1ffe8:	add	x10, x21, x8
   1ffec:	b	20ad4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x11b0>
   1fff0:	mov	x0, x21
   1fff4:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
   1fff8:	ldr	w9, [x21, #20]
   1fffc:	tst	w0, #0x1
   20000:	mov	w8, #0x2c                  	// #44
   20004:	cinc	w24, w8, ne  // ne = any
   20008:	and	x8, x9, #0xfffffff
   2000c:	cmp	w8, #0x1
   20010:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   20014:	ldr	x22, [sp, #32]
   20018:	tbnz	w9, #30, 20b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1220>
   2001c:	mov	w9, #0x18                  	// #24
   20020:	mneg	x8, x8, x9
   20024:	add	x8, x21, x8
   20028:	b	20b48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1224>
   2002c:	mov	x0, x21
   20030:	bl	0 <_ZNK4llvm17GetElementPtrInst10isInBoundsEv>
   20034:	ldp	w8, w9, [x20, #8]
   20038:	and	w19, w0, #0x1
   2003c:	cmp	w8, w9
   20040:	b.cs	24e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x54f4>  // b.hs, b.nlast
   20044:	ldr	x9, [x20]
   20048:	ldr	x22, [sp, #32]
   2004c:	str	w19, [x9, w8, uxtw #2]
   20050:	ldp	w8, w9, [x20, #8]
   20054:	cmp	w8, w9
   20058:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2005c:	ldr	x11, [sp, #24]
   20060:	add	w8, w8, #0x1
   20064:	str	w8, [x20, #8]
   20068:	ldr	w10, [x11, #72]
   2006c:	ldr	x11, [x11, #56]
   20070:	cbz	w10, 21c14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22f0>
   20074:	ldr	x12, [x21, #56]
   20078:	orr	x13, x12, #0x8
   2007c:	cmn	x13, #0x8
   20080:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20084:	ubfx	x13, x12, #4, #28
   20088:	eor	w14, w13, w12, lsr #9
   2008c:	sub	w13, w10, #0x1
   20090:	and	w14, w14, w13
   20094:	add	x15, x11, w14, uxtw #4
   20098:	ldr	x16, [x15]
   2009c:	cmp	x16, x12
   200a0:	b.eq	21c18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22f4>  // b.none
   200a4:	mov	w17, #0x1                   	// #1
   200a8:	cmn	x16, #0x8
   200ac:	b.eq	21c14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22f0>  // b.none
   200b0:	add	w14, w14, w17
   200b4:	and	w14, w14, w13
   200b8:	add	x15, x11, w14, uxtw #4
   200bc:	ldr	x16, [x15]
   200c0:	add	w17, w17, #0x1
   200c4:	cmp	x16, x12
   200c8:	b.eq	21c18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22f4>  // b.none
   200cc:	b	200a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x784>
   200d0:	ldr	w9, [x21, #20]
   200d4:	and	x8, x9, #0xfffffff
   200d8:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   200dc:	ldr	x0, [sp, #32]
   200e0:	tbnz	w9, #30, 20bfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12d8>
   200e4:	mov	w9, #0x18                  	// #24
   200e8:	mneg	x8, x8, x9
   200ec:	add	x8, x21, x8
   200f0:	b	20c00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12dc>
   200f4:	ldr	w8, [x21, #20]
   200f8:	mov	w9, #0x18                  	// #24
   200fc:	and	x8, x8, #0xfffffff
   20100:	mneg	x8, x8, x9
   20104:	ldr	x1, [x21, x8]
   20108:	cbz	x1, 25fb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6690>
   2010c:	ldrb	w8, [x1, #16]
   20110:	ldr	x22, [sp, #32]
   20114:	cmp	w8, #0x4b
   20118:	b.ne	25fd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x66b0>  // b.any
   2011c:	mov	x0, x22
   20120:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20124:	ldp	w8, w9, [x20, #8]
   20128:	sub	w19, w23, w0
   2012c:	cmp	w8, w9
   20130:	b.cs	24e34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5510>  // b.hs, b.nlast
   20134:	ldr	x9, [x20]
   20138:	str	w19, [x9, w8, uxtw #2]
   2013c:	ldp	w8, w9, [x20, #8]
   20140:	cmp	w8, w9
   20144:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20148:	add	w8, w8, #0x1
   2014c:	str	w8, [x20, #8]
   20150:	ldrb	w8, [x21, #18]
   20154:	tbnz	w8, #0, 20ed4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x15b0>
   20158:	mov	w25, wzr
   2015c:	mov	w24, #0x30                  	// #48
   20160:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   20164:	ldr	w9, [x21, #20]
   20168:	and	x8, x9, #0xfffffff
   2016c:	cbz	w8, 25f1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65f8>
   20170:	ldr	x22, [sp, #32]
   20174:	tbnz	w9, #30, 20c50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x132c>
   20178:	mov	w9, #0x18                  	// #24
   2017c:	mneg	x8, x8, x9
   20180:	add	x8, x21, x8
   20184:	b	20c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1330>
   20188:	ldr	w8, [x21, #20]
   2018c:	ldr	x28, [x21, #64]
   20190:	tbnz	w8, #31, 2202c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2708>
   20194:	mov	x24, xzr
   20198:	mov	x8, xzr
   2019c:	b	2449c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b78>
   201a0:	ldr	w9, [x21, #20]
   201a4:	and	x8, x9, #0xfffffff
   201a8:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   201ac:	ldr	x0, [sp, #32]
   201b0:	tbnz	w9, #30, 20d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1444>
   201b4:	mov	w9, #0x18                  	// #24
   201b8:	mneg	x8, x8, x9
   201bc:	add	x8, x21, x8
   201c0:	b	20d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1448>
   201c4:	ldr	w9, [x21, #20]
   201c8:	and	x8, x9, #0xfffffff
   201cc:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   201d0:	ldr	x22, [sp, #32]
   201d4:	tbnz	w9, #30, 20e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x14f8>
   201d8:	mov	w9, #0x18                  	// #24
   201dc:	mneg	x8, x8, x9
   201e0:	add	x8, x21, x8
   201e4:	b	20e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x14fc>
   201e8:	ldrh	w9, [x21, #18]
   201ec:	ubfx	w8, w9, #1, #14
   201f0:	cmp	w8, #0x8
   201f4:	b.cs	25dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a0>  // b.hs, b.nlast
   201f8:	lsr	w9, w9, #1
   201fc:	mov	w10, #0xf7                  	// #247
   20200:	lsr	w9, w10, w9
   20204:	tbz	w9, #0, 25dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a0>
   20208:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2020c:	ldp	w9, w10, [x20, #8]
   20210:	add	x11, x11, #0x0
   20214:	ldr	w19, [x11, w8, uxtw #2]
   20218:	cmp	w9, w10
   2021c:	b.cs	24e50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x552c>  // b.hs, b.nlast
   20220:	ldr	x8, [x20]
   20224:	str	w19, [x8, w9, uxtw #2]
   20228:	ldp	w8, w9, [x20, #8]
   2022c:	cmp	w8, w9
   20230:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20234:	add	w8, w8, #0x1
   20238:	str	w8, [x20, #8]
   2023c:	ldrb	w10, [x27]
   20240:	cmp	w10, #0x3b
   20244:	b.ne	25ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x66d0>  // b.any
   20248:	ldrb	w19, [x21, #56]
   2024c:	cmp	w8, w9
   20250:	b.cs	24e6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5548>  // b.hs, b.nlast
   20254:	ldr	x9, [x20]
   20258:	str	w19, [x9, w8, uxtw #2]
   2025c:	ldp	w8, w9, [x20, #8]
   20260:	cmp	w8, w9
   20264:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20268:	add	w8, w8, #0x1
   2026c:	mov	w25, wzr
   20270:	str	w8, [x20, #8]
   20274:	mov	w24, #0x24                  	// #36
   20278:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   2027c:	ldur	x8, [x21, #-8]
   20280:	ldr	x24, [x8]
   20284:	mov	x0, x22
   20288:	mov	x1, x24
   2028c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20290:	ldp	w8, w9, [x20, #8]
   20294:	mov	w25, w0
   20298:	sub	w19, w23, w0
   2029c:	cmp	w8, w9
   202a0:	b.cs	24d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x544c>  // b.hs, b.nlast
   202a4:	ldr	x9, [x20]
   202a8:	str	w19, [x9, w8, uxtw #2]
   202ac:	ldp	w8, w9, [x20, #8]
   202b0:	cmp	w8, w9
   202b4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   202b8:	add	w8, w8, #0x1
   202bc:	cmp	w25, w23
   202c0:	str	w8, [x20, #8]
   202c4:	b.cc	21e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24f4>  // b.lo, b.ul, b.last
   202c8:	ldr	x11, [sp, #24]
   202cc:	ldr	w10, [x11, #72]
   202d0:	ldr	x11, [x11, #56]
   202d4:	cbz	w10, 21ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24b8>
   202d8:	ldr	x12, [x24]
   202dc:	orr	x13, x12, #0x8
   202e0:	cmn	x13, #0x8
   202e4:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   202e8:	ubfx	x13, x12, #4, #28
   202ec:	eor	w14, w13, w12, lsr #9
   202f0:	sub	w13, w10, #0x1
   202f4:	and	w14, w14, w13
   202f8:	add	x15, x11, w14, uxtw #4
   202fc:	ldr	x16, [x15]
   20300:	cmp	x16, x12
   20304:	b.eq	21de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24bc>  // b.none
   20308:	mov	w17, #0x1                   	// #1
   2030c:	cmn	x16, #0x8
   20310:	b.eq	21ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24b8>  // b.none
   20314:	add	w14, w14, w17
   20318:	and	w14, w14, w13
   2031c:	add	x15, x11, w14, uxtw #4
   20320:	ldr	x16, [x15]
   20324:	add	w17, w17, #0x1
   20328:	cmp	x16, x12
   2032c:	b.eq	21de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24bc>  // b.none
   20330:	b	2030c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x9e8>
   20334:	sub	w9, w8, #0x3e
   20338:	cmp	w9, #0xc
   2033c:	b.hi	2101c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16f8>  // b.pmore
   20340:	ldr	w9, [x21, #20]
   20344:	ldr	x0, [sp, #32]
   20348:	and	x8, x9, #0xfffffff
   2034c:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   20350:	tbnz	w9, #30, 22228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2904>
   20354:	mov	w9, #0x18                  	// #24
   20358:	mneg	x8, x8, x9
   2035c:	add	x8, x21, x8
   20360:	b	2222c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2908>
   20364:	ldur	x8, [x21, #-8]
   20368:	ldr	x24, [x8]
   2036c:	mov	x0, x22
   20370:	mov	x1, x24
   20374:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20378:	ldp	w8, w9, [x20, #8]
   2037c:	mov	w25, w0
   20380:	sub	w19, w23, w0
   20384:	cmp	w8, w9
   20388:	b.cs	24e88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5564>  // b.hs, b.nlast
   2038c:	ldr	x9, [x20]
   20390:	str	w19, [x9, w8, uxtw #2]
   20394:	ldp	w8, w9, [x20, #8]
   20398:	cmp	w8, w9
   2039c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   203a0:	add	w8, w8, #0x1
   203a4:	cmp	w25, w23
   203a8:	str	w8, [x20, #8]
   203ac:	b.cc	223e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2abc>  // b.lo, b.ul, b.last
   203b0:	ldr	x11, [sp, #24]
   203b4:	ldr	w10, [x11, #72]
   203b8:	ldr	x11, [x11, #56]
   203bc:	cbz	w10, 223a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a80>
   203c0:	ldr	x12, [x24]
   203c4:	orr	x13, x12, #0x8
   203c8:	cmn	x13, #0x8
   203cc:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   203d0:	ubfx	x13, x12, #4, #28
   203d4:	eor	w14, w13, w12, lsr #9
   203d8:	sub	w13, w10, #0x1
   203dc:	and	w14, w14, w13
   203e0:	add	x15, x11, w14, uxtw #4
   203e4:	ldr	x16, [x15]
   203e8:	cmp	x16, x12
   203ec:	b.eq	223a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a84>  // b.none
   203f0:	mov	w17, #0x1                   	// #1
   203f4:	cmn	x16, #0x8
   203f8:	b.eq	223a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a80>  // b.none
   203fc:	add	w14, w14, w17
   20400:	and	w14, w14, w13
   20404:	add	x15, x11, w14, uxtw #4
   20408:	ldr	x16, [x15]
   2040c:	add	w17, w17, #0x1
   20410:	cmp	x16, x12
   20414:	b.eq	223a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a84>  // b.none
   20418:	b	203f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xad0>
   2041c:	ldur	x10, [x21, #-8]
   20420:	ldr	x9, [sp, #24]
   20424:	ldr	w8, [x9, #72]
   20428:	ldr	x9, [x9, #56]
   2042c:	cbz	w8, 21328 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a04>
   20430:	ldr	x10, [x10]
   20434:	ldr	x10, [x10]
   20438:	orr	x11, x10, #0x8
   2043c:	cmn	x11, #0x8
   20440:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20444:	ubfx	x11, x10, #4, #28
   20448:	eor	w12, w11, w10, lsr #9
   2044c:	sub	w11, w8, #0x1
   20450:	and	w12, w12, w11
   20454:	add	x13, x9, w12, uxtw #4
   20458:	ldr	x14, [x13]
   2045c:	cmp	x14, x10
   20460:	b.eq	2132c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a08>  // b.none
   20464:	mov	w15, #0x1                   	// #1
   20468:	cmn	x14, #0x8
   2046c:	b.eq	21328 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a04>  // b.none
   20470:	add	w12, w12, w15
   20474:	and	w12, w12, w11
   20478:	add	x13, x9, w12, uxtw #4
   2047c:	ldr	x14, [x13]
   20480:	add	w15, w15, #0x1
   20484:	cmp	x14, x10
   20488:	b.eq	2132c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a08>  // b.none
   2048c:	b	20468 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xb44>
   20490:	ldur	x8, [x21, #-8]
   20494:	ldr	x24, [x8]
   20498:	mov	x0, x22
   2049c:	mov	x1, x24
   204a0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   204a4:	ldp	w8, w9, [x20, #8]
   204a8:	mov	w25, w0
   204ac:	sub	w19, w23, w0
   204b0:	cmp	w8, w9
   204b4:	b.cs	24ea4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5580>  // b.hs, b.nlast
   204b8:	ldr	x9, [x20]
   204bc:	str	w19, [x9, w8, uxtw #2]
   204c0:	ldp	w8, w9, [x20, #8]
   204c4:	cmp	w8, w9
   204c8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   204cc:	add	w8, w8, #0x1
   204d0:	cmp	w25, w23
   204d4:	str	w8, [x20, #8]
   204d8:	b.cc	2254c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c28>  // b.lo, b.ul, b.last
   204dc:	ldr	x11, [sp, #24]
   204e0:	ldr	w10, [x11, #72]
   204e4:	ldr	x11, [x11, #56]
   204e8:	cbz	w10, 22510 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bec>
   204ec:	ldr	x12, [x24]
   204f0:	orr	x13, x12, #0x8
   204f4:	cmn	x13, #0x8
   204f8:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   204fc:	ubfx	x13, x12, #4, #28
   20500:	eor	w14, w13, w12, lsr #9
   20504:	sub	w13, w10, #0x1
   20508:	and	w14, w14, w13
   2050c:	add	x15, x11, w14, uxtw #4
   20510:	ldr	x16, [x15]
   20514:	cmp	x16, x12
   20518:	b.eq	22514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bf0>  // b.none
   2051c:	mov	w17, #0x1                   	// #1
   20520:	cmn	x16, #0x8
   20524:	b.eq	22510 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bec>  // b.none
   20528:	add	w14, w14, w17
   2052c:	and	w14, w14, w13
   20530:	add	x15, x11, w14, uxtw #4
   20534:	ldr	x16, [x15]
   20538:	add	w17, w17, #0x1
   2053c:	cmp	x16, x12
   20540:	b.eq	22514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bf0>  // b.none
   20544:	b	20520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xbfc>
   20548:	ldur	x8, [x21, #-8]
   2054c:	ldr	x25, [x8]
   20550:	mov	x1, x25
   20554:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20558:	ldp	w8, w9, [x20, #8]
   2055c:	mov	w22, w0
   20560:	sub	w19, w23, w0
   20564:	cmp	w8, w9
   20568:	b.cs	24ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x559c>  // b.hs, b.nlast
   2056c:	ldr	x9, [x20]
   20570:	str	w19, [x9, w8, uxtw #2]
   20574:	ldp	w8, w9, [x20, #8]
   20578:	cmp	w8, w9
   2057c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20580:	add	w8, w8, #0x1
   20584:	cmp	w22, w23
   20588:	str	w8, [x20, #8]
   2058c:	b.cs	20598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc74>  // b.hs, b.nlast
   20590:	mov	w11, #0x4                   	// #4
   20594:	b	226f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2dd0>
   20598:	ldr	x11, [sp, #24]
   2059c:	ldr	w10, [x11, #72]
   205a0:	ldr	x11, [x11, #56]
   205a4:	cbz	w10, 226b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d90>
   205a8:	ldr	x12, [x25]
   205ac:	orr	x13, x12, #0x8
   205b0:	cmn	x13, #0x8
   205b4:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   205b8:	ubfx	x13, x12, #4, #28
   205bc:	eor	w14, w13, w12, lsr #9
   205c0:	sub	w13, w10, #0x1
   205c4:	and	w14, w14, w13
   205c8:	add	x15, x11, w14, uxtw #4
   205cc:	ldr	x16, [x15]
   205d0:	cmp	x16, x12
   205d4:	b.eq	226b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d94>  // b.none
   205d8:	mov	w17, #0x1                   	// #1
   205dc:	cmn	x16, #0x8
   205e0:	b.eq	226b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d90>  // b.none
   205e4:	add	w14, w14, w17
   205e8:	and	w14, w14, w13
   205ec:	add	x15, x11, w14, uxtw #4
   205f0:	ldr	x16, [x15]
   205f4:	add	w17, w17, #0x1
   205f8:	cmp	x16, x12
   205fc:	b.eq	226b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d94>  // b.none
   20600:	b	205dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xcb8>
   20604:	ldur	x8, [x21, #-8]
   20608:	ldr	x21, [x8]
   2060c:	mov	x1, x21
   20610:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20614:	ldp	w8, w9, [x20, #8]
   20618:	mov	w22, w0
   2061c:	sub	w19, w23, w0
   20620:	cmp	w8, w9
   20624:	b.cs	24edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x55b8>  // b.hs, b.nlast
   20628:	ldr	x9, [x20]
   2062c:	str	w19, [x9, w8, uxtw #2]
   20630:	ldp	w8, w9, [x20, #8]
   20634:	cmp	w8, w9
   20638:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2063c:	add	w8, w8, #0x1
   20640:	cmp	w22, w23
   20644:	str	w8, [x20, #8]
   20648:	b.cs	20654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xd30>  // b.hs, b.nlast
   2064c:	mov	w25, wzr
   20650:	b	2292c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3008>
   20654:	ldr	x11, [sp, #24]
   20658:	ldr	w10, [x11, #72]
   2065c:	ldr	x11, [x11, #56]
   20660:	cbz	w10, 228ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fc8>
   20664:	ldr	x12, [x21]
   20668:	orr	x13, x12, #0x8
   2066c:	cmn	x13, #0x8
   20670:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20674:	ubfx	x13, x12, #4, #28
   20678:	eor	w14, w13, w12, lsr #9
   2067c:	sub	w13, w10, #0x1
   20680:	and	w14, w14, w13
   20684:	add	x15, x11, w14, uxtw #4
   20688:	ldr	x16, [x15]
   2068c:	cmp	x16, x12
   20690:	b.eq	228f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fcc>  // b.none
   20694:	mov	w17, #0x1                   	// #1
   20698:	cmn	x16, #0x8
   2069c:	b.eq	228ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fc8>  // b.none
   206a0:	add	w14, w14, w17
   206a4:	and	w14, w14, w13
   206a8:	add	x15, x11, w14, uxtw #4
   206ac:	ldr	x16, [x15]
   206b0:	add	w17, w17, #0x1
   206b4:	cmp	x16, x12
   206b8:	b.eq	228f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fcc>  // b.none
   206bc:	b	20698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xd74>
   206c0:	ldur	x8, [x21, #-8]
   206c4:	ldr	x24, [x8, #24]
   206c8:	mov	x0, x22
   206cc:	mov	x1, x24
   206d0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   206d4:	ldp	w8, w9, [x20, #8]
   206d8:	mov	w25, w0
   206dc:	sub	w19, w23, w0
   206e0:	cmp	w8, w9
   206e4:	b.cs	24ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x55d4>  // b.hs, b.nlast
   206e8:	ldr	x9, [x20]
   206ec:	str	w19, [x9, w8, uxtw #2]
   206f0:	ldp	w8, w9, [x20, #8]
   206f4:	cmp	w8, w9
   206f8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   206fc:	add	w8, w8, #0x1
   20700:	cmp	w25, w23
   20704:	str	w8, [x20, #8]
   20708:	b.cc	22970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x304c>  // b.lo, b.ul, b.last
   2070c:	ldr	x11, [sp, #24]
   20710:	ldr	w10, [x11, #72]
   20714:	ldr	x11, [x11, #56]
   20718:	cbz	w10, 22934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3010>
   2071c:	ldr	x12, [x24]
   20720:	orr	x13, x12, #0x8
   20724:	cmn	x13, #0x8
   20728:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   2072c:	ubfx	x13, x12, #4, #28
   20730:	eor	w14, w13, w12, lsr #9
   20734:	sub	w13, w10, #0x1
   20738:	and	w14, w14, w13
   2073c:	add	x15, x11, w14, uxtw #4
   20740:	ldr	x16, [x15]
   20744:	cmp	x16, x12
   20748:	b.eq	22938 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3014>  // b.none
   2074c:	mov	w17, #0x1                   	// #1
   20750:	cmn	x16, #0x8
   20754:	b.eq	22934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3010>  // b.none
   20758:	add	w14, w14, w17
   2075c:	and	w14, w14, w13
   20760:	add	x15, x11, w14, uxtw #4
   20764:	ldr	x16, [x15]
   20768:	add	w17, w17, #0x1
   2076c:	cmp	x16, x12
   20770:	b.eq	22938 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3014>  // b.none
   20774:	b	20750 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xe2c>
   20778:	ldur	x8, [x21, #-8]
   2077c:	ldr	x24, [x8]
   20780:	mov	x0, x22
   20784:	mov	x1, x24
   20788:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2078c:	ldp	w8, w9, [x20, #8]
   20790:	mov	w25, w0
   20794:	sub	w19, w23, w0
   20798:	cmp	w8, w9
   2079c:	b.cs	24f14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x55f0>  // b.hs, b.nlast
   207a0:	ldr	x9, [x20]
   207a4:	str	w19, [x9, w8, uxtw #2]
   207a8:	ldp	w8, w9, [x20, #8]
   207ac:	cmp	w8, w9
   207b0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   207b4:	add	w8, w8, #0x1
   207b8:	cmp	w25, w23
   207bc:	str	w8, [x20, #8]
   207c0:	b.cc	22ae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x31c0>  // b.lo, b.ul, b.last
   207c4:	ldr	x11, [sp, #24]
   207c8:	ldr	w10, [x11, #72]
   207cc:	ldr	x11, [x11, #56]
   207d0:	cbz	w10, 22aa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3184>
   207d4:	ldr	x12, [x24]
   207d8:	orr	x13, x12, #0x8
   207dc:	cmn	x13, #0x8
   207e0:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   207e4:	ubfx	x13, x12, #4, #28
   207e8:	eor	w14, w13, w12, lsr #9
   207ec:	sub	w13, w10, #0x1
   207f0:	and	w14, w14, w13
   207f4:	add	x15, x11, w14, uxtw #4
   207f8:	ldr	x16, [x15]
   207fc:	cmp	x16, x12
   20800:	b.eq	22aac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3188>  // b.none
   20804:	mov	w17, #0x1                   	// #1
   20808:	cmn	x16, #0x8
   2080c:	b.eq	22aa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3184>  // b.none
   20810:	add	w14, w14, w17
   20814:	and	w14, w14, w13
   20818:	add	x15, x11, w14, uxtw #4
   2081c:	ldr	x16, [x15]
   20820:	add	w17, w17, #0x1
   20824:	cmp	x16, x12
   20828:	b.eq	22aac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3188>  // b.none
   2082c:	b	20808 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xee4>
   20830:	ldur	x10, [x21, #-8]
   20834:	ldr	x9, [sp, #24]
   20838:	ldr	w8, [x9, #72]
   2083c:	ldr	x9, [x9, #56]
   20840:	cbz	w8, 21724 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e00>
   20844:	ldr	x10, [x10]
   20848:	ldr	x10, [x10]
   2084c:	orr	x11, x10, #0x8
   20850:	cmn	x11, #0x8
   20854:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20858:	ubfx	x11, x10, #4, #28
   2085c:	eor	w12, w11, w10, lsr #9
   20860:	sub	w11, w8, #0x1
   20864:	and	w12, w12, w11
   20868:	add	x13, x9, w12, uxtw #4
   2086c:	ldr	x14, [x13]
   20870:	cmp	x14, x10
   20874:	b.eq	21728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e04>  // b.none
   20878:	mov	w15, #0x1                   	// #1
   2087c:	cmn	x14, #0x8
   20880:	b.eq	21724 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e00>  // b.none
   20884:	add	w12, w12, w15
   20888:	and	w12, w12, w11
   2088c:	add	x13, x9, w12, uxtw #4
   20890:	ldr	x14, [x13]
   20894:	add	w15, w15, #0x1
   20898:	cmp	x14, x10
   2089c:	b.eq	21728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e04>  // b.none
   208a0:	b	2087c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf58>
   208a4:	ldur	x8, [x21, #-8]
   208a8:	ldr	x24, [x8]
   208ac:	mov	x1, x24
   208b0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   208b4:	ldp	w8, w9, [x20, #8]
   208b8:	mov	w22, w0
   208bc:	sub	w19, w23, w0
   208c0:	cmp	w8, w9
   208c4:	b.cs	24f30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x560c>  // b.hs, b.nlast
   208c8:	ldr	x9, [x20]
   208cc:	str	w19, [x9, w8, uxtw #2]
   208d0:	ldp	w8, w9, [x20, #8]
   208d4:	cmp	w8, w9
   208d8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   208dc:	add	w8, w8, #0x1
   208e0:	cmp	w22, w23
   208e4:	str	w8, [x20, #8]
   208e8:	b.cs	20a64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1140>  // b.hs, b.nlast
   208ec:	mov	w25, #0x5                   	// #5
   208f0:	b	22c6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3348>
   208f4:	ldur	x8, [x21, #-8]
   208f8:	ldr	x24, [x8]
   208fc:	mov	x0, x22
   20900:	mov	x1, x24
   20904:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20908:	ldp	w8, w9, [x20, #8]
   2090c:	mov	w25, w0
   20910:	sub	w19, w23, w0
   20914:	cmp	w8, w9
   20918:	b.cs	24f4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5628>  // b.hs, b.nlast
   2091c:	ldr	x9, [x20]
   20920:	str	w19, [x9, w8, uxtw #2]
   20924:	ldp	w8, w9, [x20, #8]
   20928:	cmp	w8, w9
   2092c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20930:	add	w8, w8, #0x1
   20934:	cmp	w25, w23
   20938:	str	w8, [x20, #8]
   2093c:	b.cc	22d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3400>  // b.lo, b.ul, b.last
   20940:	ldr	x11, [sp, #24]
   20944:	ldr	w10, [x11, #72]
   20948:	ldr	x11, [x11, #56]
   2094c:	cbz	w10, 22ce8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33c4>
   20950:	ldr	x12, [x24]
   20954:	orr	x13, x12, #0x8
   20958:	cmn	x13, #0x8
   2095c:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20960:	ubfx	x13, x12, #4, #28
   20964:	eor	w14, w13, w12, lsr #9
   20968:	sub	w13, w10, #0x1
   2096c:	and	w14, w14, w13
   20970:	add	x15, x11, w14, uxtw #4
   20974:	ldr	x16, [x15]
   20978:	cmp	x16, x12
   2097c:	b.eq	22cec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33c8>  // b.none
   20980:	mov	w17, #0x1                   	// #1
   20984:	cmn	x16, #0x8
   20988:	b.eq	22ce8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33c4>  // b.none
   2098c:	add	w14, w14, w17
   20990:	and	w14, w14, w13
   20994:	add	x15, x11, w14, uxtw #4
   20998:	ldr	x16, [x15]
   2099c:	add	w17, w17, #0x1
   209a0:	cmp	x16, x12
   209a4:	b.eq	22cec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33c8>  // b.none
   209a8:	b	20984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1060>
   209ac:	ldur	x8, [x21, #-8]
   209b0:	ldr	x24, [x8]
   209b4:	mov	x0, x22
   209b8:	mov	x1, x24
   209bc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   209c0:	ldp	w8, w9, [x20, #8]
   209c4:	mov	w25, w0
   209c8:	sub	w19, w23, w0
   209cc:	cmp	w8, w9
   209d0:	b.cs	24f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5644>  // b.hs, b.nlast
   209d4:	ldr	x9, [x20]
   209d8:	str	w19, [x9, w8, uxtw #2]
   209dc:	ldp	w8, w9, [x20, #8]
   209e0:	cmp	w8, w9
   209e4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   209e8:	add	w8, w8, #0x1
   209ec:	cmp	w25, w23
   209f0:	str	w8, [x20, #8]
   209f4:	b.cc	22e2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3508>  // b.lo, b.ul, b.last
   209f8:	ldr	x11, [sp, #24]
   209fc:	ldr	w10, [x11, #72]
   20a00:	ldr	x11, [x11, #56]
   20a04:	cbz	w10, 22df0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34cc>
   20a08:	ldr	x12, [x24]
   20a0c:	orr	x13, x12, #0x8
   20a10:	cmn	x13, #0x8
   20a14:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20a18:	ubfx	x13, x12, #4, #28
   20a1c:	eor	w14, w13, w12, lsr #9
   20a20:	sub	w13, w10, #0x1
   20a24:	and	w14, w14, w13
   20a28:	add	x15, x11, w14, uxtw #4
   20a2c:	ldr	x16, [x15]
   20a30:	cmp	x16, x12
   20a34:	b.eq	22df4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34d0>  // b.none
   20a38:	mov	w17, #0x1                   	// #1
   20a3c:	cmn	x16, #0x8
   20a40:	b.eq	22df0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34cc>  // b.none
   20a44:	add	w14, w14, w17
   20a48:	and	w14, w14, w13
   20a4c:	add	x15, x11, w14, uxtw #4
   20a50:	ldr	x16, [x15]
   20a54:	add	w17, w17, #0x1
   20a58:	cmp	x16, x12
   20a5c:	b.eq	22df4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34d0>  // b.none
   20a60:	b	20a3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1118>
   20a64:	ldr	x11, [sp, #24]
   20a68:	ldr	w10, [x11, #72]
   20a6c:	ldr	x11, [x11, #56]
   20a70:	cbz	w10, 22c2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3308>
   20a74:	ldr	x12, [x24]
   20a78:	orr	x13, x12, #0x8
   20a7c:	cmn	x13, #0x8
   20a80:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20a84:	ubfx	x13, x12, #4, #28
   20a88:	eor	w14, w13, w12, lsr #9
   20a8c:	sub	w13, w10, #0x1
   20a90:	and	w14, w14, w13
   20a94:	add	x15, x11, w14, uxtw #4
   20a98:	ldr	x16, [x15]
   20a9c:	cmp	x16, x12
   20aa0:	b.eq	22c30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x330c>  // b.none
   20aa4:	mov	w17, #0x1                   	// #1
   20aa8:	cmn	x16, #0x8
   20aac:	b.eq	22c2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3308>  // b.none
   20ab0:	add	w14, w14, w17
   20ab4:	and	w14, w14, w13
   20ab8:	add	x15, x11, w14, uxtw #4
   20abc:	ldr	x16, [x15]
   20ac0:	add	w17, w17, #0x1
   20ac4:	cmp	x16, x12
   20ac8:	b.eq	22c30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x330c>  // b.none
   20acc:	b	20aa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1184>
   20ad0:	ldur	x10, [x21, #-8]
   20ad4:	ldr	x9, [sp, #24]
   20ad8:	ldr	w8, [x9, #72]
   20adc:	ldr	x9, [x9, #56]
   20ae0:	cbz	w8, 21880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f5c>
   20ae4:	ldr	x10, [x10]
   20ae8:	ldr	x10, [x10]
   20aec:	orr	x11, x10, #0x8
   20af0:	cmn	x11, #0x8
   20af4:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20af8:	ubfx	x11, x10, #4, #28
   20afc:	eor	w12, w11, w10, lsr #9
   20b00:	sub	w11, w8, #0x1
   20b04:	and	w12, w12, w11
   20b08:	add	x13, x9, w12, uxtw #4
   20b0c:	ldr	x14, [x13]
   20b10:	cmp	x14, x10
   20b14:	b.eq	21884 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f60>  // b.none
   20b18:	mov	w15, #0x1                   	// #1
   20b1c:	cmn	x14, #0x8
   20b20:	b.eq	21880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f5c>  // b.none
   20b24:	add	w12, w12, w15
   20b28:	and	w12, w12, w11
   20b2c:	add	x13, x9, w12, uxtw #4
   20b30:	ldr	x14, [x13]
   20b34:	add	w15, w15, #0x1
   20b38:	cmp	x14, x10
   20b3c:	b.eq	21884 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f60>  // b.none
   20b40:	b	20b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x11f8>
   20b44:	ldur	x8, [x21, #-8]
   20b48:	ldr	x25, [x8, #24]
   20b4c:	mov	x0, x22
   20b50:	mov	x1, x25
   20b54:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20b58:	ldp	w8, w9, [x20, #8]
   20b5c:	mov	w26, w0
   20b60:	sub	w19, w23, w0
   20b64:	cmp	w8, w9
   20b68:	b.cs	24f84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5660>  // b.hs, b.nlast
   20b6c:	ldr	x9, [x20]
   20b70:	str	w19, [x9, w8, uxtw #2]
   20b74:	ldp	w8, w9, [x20, #8]
   20b78:	cmp	w8, w9
   20b7c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20b80:	add	w8, w8, #0x1
   20b84:	cmp	w26, w23
   20b88:	str	w8, [x20, #8]
   20b8c:	b.cc	22f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3620>  // b.lo, b.ul, b.last
   20b90:	ldr	x11, [sp, #24]
   20b94:	ldr	w10, [x11, #72]
   20b98:	ldr	x11, [x11, #56]
   20b9c:	cbz	w10, 22f08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35e4>
   20ba0:	ldr	x12, [x25]
   20ba4:	orr	x13, x12, #0x8
   20ba8:	cmn	x13, #0x8
   20bac:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20bb0:	ubfx	x13, x12, #4, #28
   20bb4:	eor	w14, w13, w12, lsr #9
   20bb8:	sub	w13, w10, #0x1
   20bbc:	and	w14, w14, w13
   20bc0:	add	x15, x11, w14, uxtw #4
   20bc4:	ldr	x16, [x15]
   20bc8:	cmp	x16, x12
   20bcc:	b.eq	22f0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35e8>  // b.none
   20bd0:	mov	w17, #0x1                   	// #1
   20bd4:	cmn	x16, #0x8
   20bd8:	b.eq	22f08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35e4>  // b.none
   20bdc:	add	w14, w14, w17
   20be0:	and	w14, w14, w13
   20be4:	add	x15, x11, w14, uxtw #4
   20be8:	ldr	x16, [x15]
   20bec:	add	w17, w17, #0x1
   20bf0:	cmp	x16, x12
   20bf4:	b.eq	22f0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35e8>  // b.none
   20bf8:	b	20bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12b0>
   20bfc:	ldur	x8, [x21, #-8]
   20c00:	ldr	x21, [x8]
   20c04:	mov	x1, x21
   20c08:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20c0c:	ldp	w8, w9, [x20, #8]
   20c10:	mov	w22, w0
   20c14:	sub	w19, w23, w0
   20c18:	cmp	w8, w9
   20c1c:	b.cs	24fa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x567c>  // b.hs, b.nlast
   20c20:	ldr	x9, [x20]
   20c24:	str	w19, [x9, w8, uxtw #2]
   20c28:	ldp	w8, w9, [x20, #8]
   20c2c:	cmp	w8, w9
   20c30:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20c34:	add	w8, w8, #0x1
   20c38:	cmp	w22, w23
   20c3c:	str	w8, [x20, #8]
   20c40:	b.cs	20cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x13d8>  // b.hs, b.nlast
   20c44:	mov	w25, wzr
   20c48:	mov	w24, #0x27                  	// #39
   20c4c:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   20c50:	ldur	x8, [x21, #-8]
   20c54:	ldr	x1, [x8]
   20c58:	mov	x0, x22
   20c5c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20c60:	ldp	w8, w9, [x20, #8]
   20c64:	sub	w19, w23, w0
   20c68:	cmp	w8, w9
   20c6c:	b.cs	24fbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5698>  // b.hs, b.nlast
   20c70:	ldr	x9, [x20]
   20c74:	str	w19, [x9, w8, uxtw #2]
   20c78:	ldp	w8, w9, [x20, #8]
   20c7c:	cmp	w8, w9
   20c80:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20c84:	add	w8, w8, #0x1
   20c88:	str	w8, [x20, #8]
   20c8c:	ldrb	w11, [x21, #18]
   20c90:	ldr	w10, [x21, #20]
   20c94:	mov	w12, #0xfffffffe            	// #-2
   20c98:	tst	w11, #0x1
   20c9c:	and	w10, w10, #0xfffffff
   20ca0:	cinc	w11, w12, eq  // eq = none
   20ca4:	cmp	w8, w9
   20ca8:	add	w19, w11, w10
   20cac:	b.cs	24fd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x56b4>  // b.hs, b.nlast
   20cb0:	ldr	x9, [x20]
   20cb4:	str	w19, [x9, w8, uxtw #2]
   20cb8:	ldp	w8, w9, [x20, #8]
   20cbc:	cmp	w8, w9
   20cc0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20cc4:	add	w8, w8, #0x1
   20cc8:	str	w8, [x20, #8]
   20ccc:	ldr	w10, [x21, #20]
   20cd0:	tbnz	w10, #30, 20f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1618>
   20cd4:	ldrh	w8, [x21, #18]
   20cd8:	and	w10, w10, #0xfffffff
   20cdc:	mov	w11, #0x18                  	// #24
   20ce0:	mneg	x9, x10, x11
   20ce4:	tst	w8, #0x1
   20ce8:	mov	w12, #0x30                  	// #48
   20cec:	add	x9, x21, x9
   20cf0:	csel	x11, x11, x12, eq  // eq = none
   20cf4:	add	x19, x9, x11
   20cf8:	b	20f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1638>
   20cfc:	ldr	x11, [sp, #24]
   20d00:	ldr	w10, [x11, #72]
   20d04:	ldr	x11, [x11, #56]
   20d08:	cbz	w10, 2301c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36f8>
   20d0c:	ldr	x12, [x21]
   20d10:	orr	x13, x12, #0x8
   20d14:	cmn	x13, #0x8
   20d18:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20d1c:	ubfx	x13, x12, #4, #28
   20d20:	eor	w14, w13, w12, lsr #9
   20d24:	sub	w13, w10, #0x1
   20d28:	and	w14, w14, w13
   20d2c:	add	x15, x11, w14, uxtw #4
   20d30:	ldr	x16, [x15]
   20d34:	cmp	x16, x12
   20d38:	b.eq	23020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36fc>  // b.none
   20d3c:	mov	w17, #0x1                   	// #1
   20d40:	cmn	x16, #0x8
   20d44:	b.eq	2301c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36f8>  // b.none
   20d48:	add	w14, w14, w17
   20d4c:	and	w14, w14, w13
   20d50:	add	x15, x11, w14, uxtw #4
   20d54:	ldr	x16, [x15]
   20d58:	add	w17, w17, #0x1
   20d5c:	cmp	x16, x12
   20d60:	b.eq	23020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36fc>  // b.none
   20d64:	b	20d40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x141c>
   20d68:	ldur	x8, [x21, #-8]
   20d6c:	ldr	x24, [x8]
   20d70:	mov	x1, x24
   20d74:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20d78:	ldp	w8, w9, [x20, #8]
   20d7c:	mov	w22, w0
   20d80:	sub	w19, w23, w0
   20d84:	cmp	w8, w9
   20d88:	b.cs	24ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x56d0>  // b.hs, b.nlast
   20d8c:	ldr	x9, [x20]
   20d90:	str	w19, [x9, w8, uxtw #2]
   20d94:	ldp	w9, w8, [x20, #8]
   20d98:	cmp	w9, w8
   20d9c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20da0:	add	w9, w9, #0x1
   20da4:	cmp	w22, w23
   20da8:	str	w9, [x20, #8]
   20dac:	b.cc	23228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3904>  // b.lo, b.ul, b.last
   20db0:	ldr	x11, [sp, #24]
   20db4:	ldr	w10, [x11, #72]
   20db8:	ldr	x11, [x11, #56]
   20dbc:	cbz	w10, 231ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38c8>
   20dc0:	ldr	x12, [x24]
   20dc4:	orr	x13, x12, #0x8
   20dc8:	cmn	x13, #0x8
   20dcc:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20dd0:	ubfx	x13, x12, #4, #28
   20dd4:	eor	w14, w13, w12, lsr #9
   20dd8:	sub	w13, w10, #0x1
   20ddc:	and	w14, w14, w13
   20de0:	add	x15, x11, w14, uxtw #4
   20de4:	ldr	x16, [x15]
   20de8:	cmp	x16, x12
   20dec:	b.eq	231f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38cc>  // b.none
   20df0:	mov	w17, #0x1                   	// #1
   20df4:	cmn	x16, #0x8
   20df8:	b.eq	231ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38c8>  // b.none
   20dfc:	add	w14, w14, w17
   20e00:	and	w14, w14, w13
   20e04:	add	x15, x11, w14, uxtw #4
   20e08:	ldr	x16, [x15]
   20e0c:	add	w17, w17, #0x1
   20e10:	cmp	x16, x12
   20e14:	b.eq	231f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38cc>  // b.none
   20e18:	b	20df4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x14d0>
   20e1c:	ldur	x8, [x21, #-8]
   20e20:	ldr	x24, [x8]
   20e24:	mov	x0, x22
   20e28:	mov	x1, x24
   20e2c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20e30:	ldp	w8, w9, [x20, #8]
   20e34:	mov	w25, w0
   20e38:	sub	w19, w23, w0
   20e3c:	cmp	w8, w9
   20e40:	b.cs	25010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x56ec>  // b.hs, b.nlast
   20e44:	ldr	x9, [x20]
   20e48:	str	w19, [x9, w8, uxtw #2]
   20e4c:	ldp	w8, w9, [x20, #8]
   20e50:	cmp	w8, w9
   20e54:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20e58:	add	w8, w8, #0x1
   20e5c:	cmp	w25, w23
   20e60:	str	w8, [x20, #8]
   20e64:	b.cc	232dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x39b8>  // b.lo, b.ul, b.last
   20e68:	ldr	x11, [sp, #24]
   20e6c:	ldr	w10, [x11, #72]
   20e70:	ldr	x11, [x11, #56]
   20e74:	cbz	w10, 232a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x397c>
   20e78:	ldr	x12, [x24]
   20e7c:	orr	x13, x12, #0x8
   20e80:	cmn	x13, #0x8
   20e84:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   20e88:	ubfx	x13, x12, #4, #28
   20e8c:	eor	w14, w13, w12, lsr #9
   20e90:	sub	w13, w10, #0x1
   20e94:	and	w14, w14, w13
   20e98:	add	x15, x11, w14, uxtw #4
   20e9c:	ldr	x16, [x15]
   20ea0:	cmp	x16, x12
   20ea4:	b.eq	232a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3980>  // b.none
   20ea8:	mov	w17, #0x1                   	// #1
   20eac:	cmn	x16, #0x8
   20eb0:	b.eq	232a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x397c>  // b.none
   20eb4:	add	w14, w14, w17
   20eb8:	and	w14, w14, w13
   20ebc:	add	x15, x11, w14, uxtw #4
   20ec0:	ldr	x16, [x15]
   20ec4:	add	w17, w17, #0x1
   20ec8:	cmp	x16, x12
   20ecc:	b.eq	232a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3980>  // b.none
   20ed0:	b	20eac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1588>
   20ed4:	ldr	w8, [x21, #20]
   20ed8:	mov	w9, #0x18                  	// #24
   20edc:	and	x8, x8, #0xfffffff
   20ee0:	mneg	x8, x8, x9
   20ee4:	add	x8, x21, x8
   20ee8:	ldr	x1, [x8, #24]
   20eec:	cbz	x1, 25dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64d8>
   20ef0:	ldrb	w8, [x1, #16]
   20ef4:	cmp	w8, #0x12
   20ef8:	b.ne	25e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64f8>  // b.any
   20efc:	mov	x0, x22
   20f00:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20f04:	ldp	w8, w9, [x20, #8]
   20f08:	mov	w21, w0
   20f0c:	cmp	w8, w9
   20f10:	b.cs	25748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e24>  // b.hs, b.nlast
   20f14:	ldr	x9, [x20]
   20f18:	str	w21, [x9, w8, uxtw #2]
   20f1c:	ldp	w8, w9, [x20, #8]
   20f20:	cmp	w8, w9
   20f24:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20f28:	add	w8, w8, #0x1
   20f2c:	mov	w25, wzr
   20f30:	str	w8, [x20, #8]
   20f34:	mov	w24, #0x30                  	// #48
   20f38:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   20f3c:	ldrh	w8, [x21, #18]
   20f40:	ldur	x9, [x21, #-8]
   20f44:	mov	w11, #0x30                  	// #48
   20f48:	mov	w12, #0x18                  	// #24
   20f4c:	tst	w8, #0x1
   20f50:	csel	x11, x12, x11, eq  // eq = none
   20f54:	add	x19, x9, x11
   20f58:	and	x10, x10, #0xfffffff
   20f5c:	mov	w11, #0x18                  	// #24
   20f60:	madd	x25, x10, x11, x9
   20f64:	cmp	x19, x25
   20f68:	b.eq	20fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16c4>  // b.none
   20f6c:	add	x23, x20, #0x10
   20f70:	ldr	x1, [x19]
   20f74:	cbz	x1, 25ce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63c0>
   20f78:	ldrb	w8, [x1, #16]
   20f7c:	cmp	w8, #0x12
   20f80:	b.ne	25d04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63e0>  // b.any
   20f84:	mov	x0, x22
   20f88:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20f8c:	ldp	w8, w9, [x20, #8]
   20f90:	mov	w24, w0
   20f94:	cmp	w8, w9
   20f98:	b.cs	20fc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16a4>  // b.hs, b.nlast
   20f9c:	ldr	x9, [x20]
   20fa0:	str	w24, [x9, w8, uxtw #2]
   20fa4:	ldp	w8, w9, [x20, #8]
   20fa8:	cmp	w8, w9
   20fac:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   20fb0:	add	x19, x19, #0x18
   20fb4:	add	w8, w8, #0x1
   20fb8:	cmp	x25, x19
   20fbc:	str	w8, [x20, #8]
   20fc0:	b.ne	20f70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x164c>  // b.any
   20fc4:	b	20fe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16c0>
   20fc8:	mov	w3, #0x4                   	// #4
   20fcc:	mov	x0, x20
   20fd0:	mov	x1, x23
   20fd4:	mov	x2, xzr
   20fd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   20fdc:	ldr	w8, [x20, #8]
   20fe0:	b	20f9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1678>
   20fe4:	ldrh	w8, [x21, #18]
   20fe8:	tbnz	w8, #0, 20ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16d4>
   20fec:	mov	w25, wzr
   20ff0:	mov	w24, #0x34                  	// #52
   20ff4:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   20ff8:	ldr	w9, [x21, #20]
   20ffc:	and	x8, x9, #0xfffffff
   21000:	cmp	w8, #0x1
   21004:	b.ls	25f1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65f8>  // b.plast
   21008:	tbnz	w9, #30, 221d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x28ac>
   2100c:	mov	w9, #0x18                  	// #24
   21010:	mneg	x8, x8, x9
   21014:	add	x8, x21, x8
   21018:	b	221d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x28b0>
   2101c:	ldr	x22, [sp, #32]
   21020:	sub	w8, w8, #0x25
   21024:	cmp	w8, #0x12
   21028:	b.cs	260c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x67a0>  // b.hs, b.nlast
   2102c:	ldr	w9, [x21, #20]
   21030:	and	x8, x9, #0xfffffff
   21034:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   21038:	tbnz	w9, #30, 22278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2954>
   2103c:	mov	w9, #0x18                  	// #24
   21040:	mneg	x8, x8, x9
   21044:	add	x8, x21, x8
   21048:	b	2227c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2958>
   2104c:	ldr	x22, [sp, #32]
   21050:	add	x13, x9, x8, lsl #4
   21054:	add	x8, x9, x8, lsl #4
   21058:	cmp	x13, x8
   2105c:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21060:	ldp	w8, w9, [x20, #8]
   21064:	ldr	w10, [x13, #8]
   21068:	cmp	w8, w9
   2106c:	sub	w19, w10, #0x1
   21070:	b.cs	2502c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5708>  // b.hs, b.nlast
   21074:	ldr	x9, [x20]
   21078:	str	w19, [x9, w8, uxtw #2]
   2107c:	ldp	w8, w9, [x20, #8]
   21080:	cmp	w8, w9
   21084:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21088:	add	w8, w8, #0x1
   2108c:	str	w8, [x20, #8]
   21090:	ldrh	w10, [x21, #18]
   21094:	cmp	w8, w9
   21098:	and	w19, w10, #0x1
   2109c:	b.cs	25048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5724>  // b.hs, b.nlast
   210a0:	ldr	x9, [x20]
   210a4:	str	w19, [x9, w8, uxtw #2]
   210a8:	ldp	w8, w9, [x20, #8]
   210ac:	cmp	w8, w9
   210b0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   210b4:	add	w8, w8, #0x1
   210b8:	str	w8, [x20, #8]
   210bc:	ldr	w10, [x21, #20]
   210c0:	cmp	w8, w9
   210c4:	and	w19, w10, #0xfffffff
   210c8:	b.cs	25064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5740>  // b.hs, b.nlast
   210cc:	ldr	x9, [x20]
   210d0:	str	w19, [x9, w8, uxtw #2]
   210d4:	ldp	w8, w9, [x20, #8]
   210d8:	cmp	w8, w9
   210dc:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   210e0:	add	w8, w8, #0x1
   210e4:	str	w8, [x20, #8]
   210e8:	ldr	w10, [x21, #20]
   210ec:	and	x27, x10, #0xfffffff
   210f0:	cbz	w27, 2131c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19f8>
   210f4:	mov	x28, xzr
   210f8:	add	x11, x20, #0x10
   210fc:	mov	w24, #0x18                  	// #24
   21100:	str	x11, [sp, #32]
   21104:	tbz	w10, #30, 21110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17ec>
   21108:	ldur	x10, [x21, #-8]
   2110c:	b	2111c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17f8>
   21110:	and	w10, w10, #0xfffffff
   21114:	mneg	x10, x10, x24
   21118:	add	x10, x21, x10
   2111c:	mul	x11, x28, x24
   21120:	ldr	x10, [x10, x11]
   21124:	ldr	x10, [x10]
   21128:	cbz	x10, 25d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6400>
   2112c:	ldrb	w10, [x10, #8]
   21130:	cmp	w10, #0xe
   21134:	b.ne	21150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x182c>  // b.any
   21138:	cmp	w8, w9
   2113c:	b.cs	212c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19a4>  // b.hs, b.nlast
   21140:	ldr	x9, [x20]
   21144:	mov	w10, #0x1                   	// #1
   21148:	str	w10, [x9, w8, uxtw #2]
   2114c:	b	21160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x183c>
   21150:	cmp	w8, w9
   21154:	b.cs	212e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19c0>  // b.hs, b.nlast
   21158:	ldr	x9, [x20]
   2115c:	str	wzr, [x9, w8, uxtw #2]
   21160:	ldp	w8, w9, [x20, #8]
   21164:	cmp	w8, w9
   21168:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2116c:	add	w8, w8, #0x1
   21170:	str	w8, [x20, #8]
   21174:	ldr	w8, [x21, #20]
   21178:	tbnz	w8, #30, 2118c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1868>
   2117c:	and	x8, x8, #0xfffffff
   21180:	mneg	x8, x8, x24
   21184:	add	x8, x21, x8
   21188:	b	21190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x186c>
   2118c:	ldur	x8, [x21, #-8]
   21190:	mul	x9, x28, x24
   21194:	ldr	x25, [x8, x9]
   21198:	cbz	x25, 25d44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6420>
   2119c:	ldrb	w8, [x25, #16]
   211a0:	cmp	w8, #0x11
   211a4:	b.cs	25d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6440>  // b.hs, b.nlast
   211a8:	mov	x0, x22
   211ac:	mov	x1, x25
   211b0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   211b4:	ldp	w8, w9, [x20, #8]
   211b8:	mov	w26, w0
   211bc:	sub	w19, w23, w0
   211c0:	cmp	w8, w9
   211c4:	b.cs	212ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1988>  // b.hs, b.nlast
   211c8:	ldr	x9, [x20]
   211cc:	str	w19, [x9, w8, uxtw #2]
   211d0:	ldp	w8, w9, [x20, #8]
   211d4:	cmp	w8, w9
   211d8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   211dc:	add	w8, w8, #0x1
   211e0:	cmp	w26, w23
   211e4:	str	w8, [x20, #8]
   211e8:	b.cc	21294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1970>  // b.lo, b.ul, b.last
   211ec:	ldr	x11, [sp, #24]
   211f0:	ldr	w10, [x11, #72]
   211f4:	ldr	x11, [x11, #56]
   211f8:	cbz	w10, 21258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1934>
   211fc:	ldr	x12, [x25]
   21200:	orr	x13, x12, #0x8
   21204:	cmn	x13, #0x8
   21208:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   2120c:	ubfx	x13, x12, #4, #28
   21210:	eor	w14, w13, w12, lsr #9
   21214:	sub	w13, w10, #0x1
   21218:	and	w14, w14, w13
   2121c:	add	x15, x11, w14, uxtw #4
   21220:	ldr	x16, [x15]
   21224:	cmp	x16, x12
   21228:	b.eq	2125c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1938>  // b.none
   2122c:	mov	w17, #0x1                   	// #1
   21230:	cmn	x16, #0x8
   21234:	b.eq	21258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1934>  // b.none
   21238:	add	w14, w14, w17
   2123c:	and	w14, w14, w13
   21240:	add	x15, x11, w14, uxtw #4
   21244:	ldr	x16, [x15]
   21248:	add	w17, w17, #0x1
   2124c:	cmp	x16, x12
   21250:	b.eq	2125c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1938>  // b.none
   21254:	b	21230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x190c>
   21258:	add	x15, x11, x10, lsl #4
   2125c:	add	x10, x11, x10, lsl #4
   21260:	cmp	x15, x10
   21264:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21268:	ldr	w10, [x15, #8]
   2126c:	cmp	w8, w9
   21270:	sub	w19, w10, #0x1
   21274:	b.cs	21300 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19dc>  // b.hs, b.nlast
   21278:	ldr	x9, [x20]
   2127c:	str	w19, [x9, w8, uxtw #2]
   21280:	ldp	w8, w9, [x20, #8]
   21284:	cmp	w8, w9
   21288:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2128c:	add	w8, w8, #0x1
   21290:	str	w8, [x20, #8]
   21294:	add	x28, x28, #0x1
   21298:	cmp	x28, x27
   2129c:	b.eq	2131c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19f8>  // b.none
   212a0:	ldr	w10, [x21, #20]
   212a4:	tbnz	w10, #30, 21108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17e4>
   212a8:	b	21110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17ec>
   212ac:	ldr	x1, [sp, #32]
   212b0:	mov	w3, #0x4                   	// #4
   212b4:	mov	x0, x20
   212b8:	mov	x2, xzr
   212bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   212c0:	ldr	w8, [x20, #8]
   212c4:	b	211c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x18a4>
   212c8:	ldr	x1, [sp, #32]
   212cc:	mov	w3, #0x4                   	// #4
   212d0:	mov	x0, x20
   212d4:	mov	x2, xzr
   212d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   212dc:	ldr	w8, [x20, #8]
   212e0:	b	21140 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x181c>
   212e4:	ldr	x1, [sp, #32]
   212e8:	mov	w3, #0x4                   	// #4
   212ec:	mov	x0, x20
   212f0:	mov	x2, xzr
   212f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   212f8:	ldr	w8, [x20, #8]
   212fc:	b	21158 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1834>
   21300:	ldr	x1, [sp, #32]
   21304:	mov	w3, #0x4                   	// #4
   21308:	mov	x0, x20
   2130c:	mov	x2, xzr
   21310:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   21314:	ldr	w8, [x20, #8]
   21318:	b	21278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1954>
   2131c:	mov	w25, wzr
   21320:	mov	w24, #0x2f                  	// #47
   21324:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   21328:	add	x13, x9, x8, lsl #4
   2132c:	add	x8, x9, x8, lsl #4
   21330:	cmp	x13, x8
   21334:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21338:	ldp	w8, w9, [x20, #8]
   2133c:	ldr	w10, [x13, #8]
   21340:	cmp	w8, w9
   21344:	sub	w19, w10, #0x1
   21348:	b.cs	25080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x575c>  // b.hs, b.nlast
   2134c:	ldr	x9, [x20]
   21350:	str	w19, [x9, w8, uxtw #2]
   21354:	ldp	w8, w9, [x20, #8]
   21358:	cmp	w8, w9
   2135c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21360:	add	w8, w8, #0x1
   21364:	str	w8, [x20, #8]
   21368:	ldr	w9, [x21, #20]
   2136c:	and	x8, x9, #0xfffffff
   21370:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   21374:	tbnz	w9, #30, 21388 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a64>
   21378:	mov	w9, #0x18                  	// #24
   2137c:	mneg	x8, x8, x9
   21380:	add	x8, x21, x8
   21384:	b	2138c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a68>
   21388:	ldur	x8, [x21, #-8]
   2138c:	ldr	x1, [x8]
   21390:	mov	x0, x22
   21394:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21398:	ldp	w8, w9, [x20, #8]
   2139c:	sub	w19, w23, w0
   213a0:	cmp	w8, w9
   213a4:	b.cs	2509c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5778>  // b.hs, b.nlast
   213a8:	ldr	x9, [x20]
   213ac:	str	w19, [x9, w8, uxtw #2]
   213b0:	ldp	w8, w9, [x20, #8]
   213b4:	cmp	w8, w9
   213b8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   213bc:	ldr	x11, [sp, #24]
   213c0:	add	w8, w8, #0x1
   213c4:	str	w8, [x20, #8]
   213c8:	ldr	w10, [x11, #72]
   213cc:	ldr	x11, [x11, #56]
   213d0:	cbz	w10, 21430 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b0c>
   213d4:	ldr	x12, [x21]
   213d8:	orr	x13, x12, #0x8
   213dc:	cmn	x13, #0x8
   213e0:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   213e4:	ubfx	x13, x12, #4, #28
   213e8:	eor	w14, w13, w12, lsr #9
   213ec:	sub	w13, w10, #0x1
   213f0:	and	w14, w14, w13
   213f4:	add	x15, x11, w14, uxtw #4
   213f8:	ldr	x16, [x15]
   213fc:	cmp	x16, x12
   21400:	b.eq	21434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b10>  // b.none
   21404:	mov	w17, #0x1                   	// #1
   21408:	cmn	x16, #0x8
   2140c:	b.eq	21430 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b0c>  // b.none
   21410:	add	w14, w14, w17
   21414:	and	w14, w14, w13
   21418:	add	x15, x11, w14, uxtw #4
   2141c:	ldr	x16, [x15]
   21420:	add	w17, w17, #0x1
   21424:	cmp	x16, x12
   21428:	b.eq	21434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b10>  // b.none
   2142c:	b	21408 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ae4>
   21430:	add	x15, x11, x10, lsl #4
   21434:	add	x10, x11, x10, lsl #4
   21438:	cmp	x15, x10
   2143c:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21440:	ldr	w10, [x15, #8]
   21444:	cmp	w8, w9
   21448:	sub	w19, w10, #0x1
   2144c:	b.cs	250b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5794>  // b.hs, b.nlast
   21450:	ldr	x9, [x20]
   21454:	str	w19, [x9, w8, uxtw #2]
   21458:	ldp	w8, w9, [x20, #8]
   2145c:	cmp	w8, w9
   21460:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21464:	add	w8, w8, #0x1
   21468:	mov	w25, wzr
   2146c:	str	w8, [x20, #8]
   21470:	mov	w24, #0x17                  	// #23
   21474:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   21478:	ldr	x22, [sp, #32]
   2147c:	add	x13, x9, x8, lsl #4
   21480:	add	x8, x9, x8, lsl #4
   21484:	cmp	x13, x8
   21488:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   2148c:	ldr	w8, [x13, #8]
   21490:	mov	w9, #0x1                   	// #1
   21494:	str	w9, [sp, #48]
   21498:	sub	w8, w8, #0x1
   2149c:	str	x8, [sp, #56]
   214a0:	ldr	w8, [x21, #20]
   214a4:	and	x24, x8, #0xfffffff
   214a8:	cbz	w24, 215dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1cb8>
   214ac:	mov	x25, xzr
   214b0:	mov	w26, #0x1                   	// #1
   214b4:	mov	w27, #0x18                  	// #24
   214b8:	mov	x9, x24
   214bc:	tbnz	w8, #30, 214cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ba8>
   214c0:	mneg	x8, x9, x27
   214c4:	add	x8, x21, x8
   214c8:	b	214d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1bac>
   214cc:	ldur	x8, [x21, #-8]
   214d0:	ldr	x1, [x8, x25]
   214d4:	mov	x0, x22
   214d8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   214dc:	subs	w8, w23, w0
   214e0:	sbfiz	x19, x8, #1, #32
   214e4:	b.mi	21590 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c6c>  // b.first
   214e8:	ldp	w8, w9, [sp, #48]
   214ec:	cmp	w8, w9
   214f0:	b.cs	215a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c80>  // b.hs, b.nlast
   214f4:	ldr	x9, [sp, #40]
   214f8:	str	x19, [x9, w8, uxtw #3]
   214fc:	ldp	w8, w9, [sp, #48]
   21500:	cmp	w8, w9
   21504:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21508:	add	w8, w8, #0x1
   2150c:	str	w8, [sp, #48]
   21510:	ldr	w8, [x21, #20]
   21514:	tbnz	w8, #30, 21528 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c04>
   21518:	and	x8, x8, #0xfffffff
   2151c:	mneg	x8, x8, x27
   21520:	add	x8, x21, x8
   21524:	b	2152c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c08>
   21528:	ldur	x8, [x21, #-8]
   2152c:	ldr	w9, [x21, #56]
   21530:	mov	x0, x22
   21534:	madd	x8, x9, x27, x8
   21538:	ldr	x1, [x8, x26, lsl #3]
   2153c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21540:	ldp	w8, w9, [sp, #48]
   21544:	mov	w19, w0
   21548:	cmp	w8, w9
   2154c:	b.cs	215c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c9c>  // b.hs, b.nlast
   21550:	ldr	x9, [sp, #40]
   21554:	str	x19, [x9, w8, uxtw #3]
   21558:	ldp	w8, w9, [sp, #48]
   2155c:	cmp	w8, w9
   21560:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21564:	add	w8, w8, #0x1
   21568:	cmp	x24, x26
   2156c:	str	w8, [sp, #48]
   21570:	b.eq	215dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1cb8>  // b.none
   21574:	ldr	w8, [x21, #20]
   21578:	add	x25, x25, #0x18
   2157c:	and	x9, x8, #0xfffffff
   21580:	cmp	x26, x9
   21584:	add	x26, x26, #0x1
   21588:	b.cc	214bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b98>  // b.lo, b.ul, b.last
   2158c:	b	25d84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6460>
   21590:	ldp	w8, w9, [sp, #48]
   21594:	neg	x10, x19
   21598:	orr	x19, x10, #0x1
   2159c:	cmp	w8, w9
   215a0:	b.cc	214f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1bd0>  // b.lo, b.ul, b.last
   215a4:	add	x0, sp, #0x28
   215a8:	mov	w3, #0x8                   	// #8
   215ac:	mov	x1, x20
   215b0:	mov	x2, xzr
   215b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   215b8:	ldr	w8, [sp, #48]
   215bc:	b	214f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1bd0>
   215c0:	add	x0, sp, #0x28
   215c4:	mov	w3, #0x8                   	// #8
   215c8:	mov	x1, x20
   215cc:	mov	x2, xzr
   215d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   215d4:	ldr	w8, [sp, #48]
   215d8:	b	21550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c2c>
   215dc:	mov	x0, x21
   215e0:	bl	148f8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   215e4:	cbz	x0, 21614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1cf0>
   215e8:	ldp	w8, w9, [sp, #48]
   215ec:	mov	x21, x0
   215f0:	cmp	w8, w9
   215f4:	b.cs	2572c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e08>  // b.hs, b.nlast
   215f8:	ldr	x9, [sp, #40]
   215fc:	str	x21, [x9, w8, uxtw #3]
   21600:	ldp	w8, w9, [sp, #48]
   21604:	cmp	w8, w9
   21608:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2160c:	add	w8, w8, #0x1
   21610:	str	w8, [sp, #48]
   21614:	ldr	x8, [sp, #24]
   21618:	add	x2, sp, #0x28
   2161c:	mov	w1, #0x10                  	// #16
   21620:	mov	w3, wzr
   21624:	ldr	x0, [x8]
   21628:	add	x19, sp, #0x28
   2162c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   21630:	ldr	x0, [sp, #40]
   21634:	add	x8, x19, #0x10
   21638:	str	wzr, [sp, #48]
   2163c:	cmp	x0, x8
   21640:	b.eq	24d18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53f4>  // b.none
   21644:	bl	0 <free>
   21648:	b	24d18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53f4>
   2164c:	ldr	x22, [sp, #32]
   21650:	add	x13, x9, x8, lsl #4
   21654:	add	x8, x9, x8, lsl #4
   21658:	cmp	x13, x8
   2165c:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21660:	ldp	w8, w9, [x20, #8]
   21664:	ldr	w10, [x13, #8]
   21668:	cmp	w8, w9
   2166c:	sub	w19, w10, #0x1
   21670:	b.cs	250d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x57b0>  // b.hs, b.nlast
   21674:	ldr	x9, [x20]
   21678:	str	w19, [x9, w8, uxtw #2]
   2167c:	ldp	w8, w9, [x20, #8]
   21680:	cmp	w8, w9
   21684:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21688:	add	w8, w8, #0x1
   2168c:	str	w8, [x20, #8]
   21690:	ldr	w11, [x21, #20]
   21694:	and	x10, x11, #0xfffffff
   21698:	cbz	w10, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   2169c:	tbnz	w11, #30, 216b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d8c>
   216a0:	mov	w11, #0x18                  	// #24
   216a4:	mneg	x10, x10, x11
   216a8:	add	x12, x21, x10
   216ac:	b	216b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d90>
   216b0:	ldur	x12, [x21, #-8]
   216b4:	ldr	x11, [sp, #24]
   216b8:	ldr	w10, [x11, #72]
   216bc:	ldr	x11, [x11, #56]
   216c0:	cbz	w10, 21b00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21dc>
   216c4:	ldr	x12, [x12]
   216c8:	ldr	x12, [x12]
   216cc:	orr	x13, x12, #0x8
   216d0:	cmn	x13, #0x8
   216d4:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   216d8:	ubfx	x13, x12, #4, #28
   216dc:	eor	w14, w13, w12, lsr #9
   216e0:	sub	w13, w10, #0x1
   216e4:	and	w14, w14, w13
   216e8:	add	x15, x11, w14, uxtw #4
   216ec:	ldr	x16, [x15]
   216f0:	cmp	x16, x12
   216f4:	b.eq	21b04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21e0>  // b.none
   216f8:	mov	w17, #0x1                   	// #1
   216fc:	cmn	x16, #0x8
   21700:	b.eq	21b00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21dc>  // b.none
   21704:	add	w14, w14, w17
   21708:	and	w14, w14, w13
   2170c:	add	x15, x11, w14, uxtw #4
   21710:	ldr	x16, [x15]
   21714:	add	w17, w17, #0x1
   21718:	cmp	x16, x12
   2171c:	b.eq	21b04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21e0>  // b.none
   21720:	b	216fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1dd8>
   21724:	add	x13, x9, x8, lsl #4
   21728:	add	x8, x9, x8, lsl #4
   2172c:	cmp	x13, x8
   21730:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21734:	ldp	w8, w9, [x20, #8]
   21738:	ldr	w10, [x13, #8]
   2173c:	cmp	w8, w9
   21740:	sub	w19, w10, #0x1
   21744:	b.cs	250f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x57cc>  // b.hs, b.nlast
   21748:	ldr	x9, [x20]
   2174c:	str	w19, [x9, w8, uxtw #2]
   21750:	ldp	w8, w9, [x20, #8]
   21754:	cmp	w8, w9
   21758:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2175c:	add	w8, w8, #0x1
   21760:	str	w8, [x20, #8]
   21764:	ldr	w9, [x21, #20]
   21768:	and	x8, x9, #0xfffffff
   2176c:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   21770:	tbnz	w9, #30, 21784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e60>
   21774:	mov	w9, #0x18                  	// #24
   21778:	mneg	x8, x8, x9
   2177c:	add	x8, x21, x8
   21780:	b	21788 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e64>
   21784:	ldur	x8, [x21, #-8]
   21788:	ldr	x1, [x8]
   2178c:	mov	x0, x22
   21790:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21794:	ldp	w8, w9, [x20, #8]
   21798:	sub	w19, w23, w0
   2179c:	cmp	w8, w9
   217a0:	b.cs	2510c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x57e8>  // b.hs, b.nlast
   217a4:	ldr	x9, [x20]
   217a8:	str	w19, [x9, w8, uxtw #2]
   217ac:	ldp	w8, w9, [x20, #8]
   217b0:	cmp	w8, w9
   217b4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   217b8:	add	w8, w8, #0x1
   217bc:	str	w8, [x20, #8]
   217c0:	ldr	w8, [x21, #20]
   217c4:	and	x19, x8, #0xfffffff
   217c8:	cmp	w19, #0x1
   217cc:	b.ne	217dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1eb8>  // b.any
   217d0:	mov	w25, wzr
   217d4:	mov	w24, #0x1f                  	// #31
   217d8:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   217dc:	cbz	w19, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   217e0:	add	x23, x20, #0x10
   217e4:	mov	w25, #0x2                   	// #2
   217e8:	mov	w26, #0x18                  	// #24
   217ec:	mov	w27, #0x18                  	// #24
   217f0:	mov	x9, x19
   217f4:	tbnz	w8, #30, 21804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ee0>
   217f8:	mneg	x8, x9, x26
   217fc:	add	x8, x21, x8
   21800:	b	21808 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ee4>
   21804:	ldur	x8, [x21, #-8]
   21808:	ldr	x1, [x8, x27]
   2180c:	mov	x0, x22
   21810:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21814:	ldp	w8, w9, [x20, #8]
   21818:	mov	w24, w0
   2181c:	cmp	w8, w9
   21820:	b.cs	21864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f40>  // b.hs, b.nlast
   21824:	ldr	x9, [x20]
   21828:	str	w24, [x9, w8, uxtw #2]
   2182c:	ldp	w8, w9, [x20, #8]
   21830:	cmp	w8, w9
   21834:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21838:	add	w8, w8, #0x1
   2183c:	cmp	x19, x25
   21840:	str	w8, [x20, #8]
   21844:	b.eq	217d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1eac>  // b.none
   21848:	ldr	w8, [x21, #20]
   2184c:	add	x27, x27, #0x18
   21850:	and	x9, x8, #0xfffffff
   21854:	cmp	x25, x9
   21858:	add	x25, x25, #0x1
   2185c:	b.cc	217f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ed0>  // b.lo, b.ul, b.last
   21860:	b	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   21864:	mov	w3, #0x4                   	// #4
   21868:	mov	x0, x20
   2186c:	mov	x1, x23
   21870:	mov	x2, xzr
   21874:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   21878:	ldr	w8, [x20, #8]
   2187c:	b	21824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f00>
   21880:	add	x13, x9, x8, lsl #4
   21884:	add	x8, x9, x8, lsl #4
   21888:	cmp	x13, x8
   2188c:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21890:	ldp	w8, w9, [x20, #8]
   21894:	ldr	w10, [x13, #8]
   21898:	cmp	w8, w9
   2189c:	sub	w19, w10, #0x1
   218a0:	b.cs	25128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5804>  // b.hs, b.nlast
   218a4:	ldr	x9, [x20]
   218a8:	str	w19, [x9, w8, uxtw #2]
   218ac:	ldp	w8, w9, [x20, #8]
   218b0:	cmp	w8, w9
   218b4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   218b8:	add	w8, w8, #0x1
   218bc:	str	w8, [x20, #8]
   218c0:	ldr	w9, [x21, #20]
   218c4:	and	x8, x9, #0xfffffff
   218c8:	cbz	w8, 25c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6340>
   218cc:	tbnz	w9, #30, 218e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1fbc>
   218d0:	mov	w9, #0x18                  	// #24
   218d4:	mneg	x8, x8, x9
   218d8:	add	x8, x21, x8
   218dc:	b	218e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1fc0>
   218e0:	ldur	x8, [x21, #-8]
   218e4:	ldr	x1, [x8]
   218e8:	mov	x0, x22
   218ec:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   218f0:	ldp	w8, w9, [x20, #8]
   218f4:	sub	w19, w23, w0
   218f8:	cmp	w8, w9
   218fc:	b.cs	25144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5820>  // b.hs, b.nlast
   21900:	ldr	x9, [x20]
   21904:	str	w19, [x9, w8, uxtw #2]
   21908:	ldp	w8, w9, [x20, #8]
   2190c:	cmp	w8, w9
   21910:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21914:	add	w8, w8, #0x1
   21918:	str	w8, [x20, #8]
   2191c:	ldr	w9, [x21, #20]
   21920:	and	x8, x9, #0xfffffff
   21924:	cmp	w8, #0x1
   21928:	b.ls	25c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6340>  // b.plast
   2192c:	tbnz	w9, #30, 21940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x201c>
   21930:	mov	w9, #0x18                  	// #24
   21934:	mneg	x8, x8, x9
   21938:	add	x8, x21, x8
   2193c:	b	21944 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2020>
   21940:	ldur	x8, [x21, #-8]
   21944:	ldr	x1, [x8, #24]
   21948:	cbz	x1, 25ce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63c0>
   2194c:	ldrb	w8, [x1, #16]
   21950:	cmp	w8, #0x12
   21954:	b.ne	25f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6618>  // b.any
   21958:	mov	x0, x22
   2195c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21960:	ldp	w8, w9, [x20, #8]
   21964:	mov	w23, w0
   21968:	cmp	w8, w9
   2196c:	b.cs	25160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x583c>  // b.hs, b.nlast
   21970:	ldr	x9, [x20]
   21974:	str	w23, [x9, w8, uxtw #2]
   21978:	ldp	w8, w9, [x20, #8]
   2197c:	cmp	w8, w9
   21980:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21984:	add	w8, w8, #0x1
   21988:	str	w8, [x20, #8]
   2198c:	ldr	w8, [x21, #20]
   21990:	add	x9, x20, #0x10
   21994:	str	x9, [sp, #16]
   21998:	mov	x25, xzr
   2199c:	ubfx	w9, w8, #1, #27
   219a0:	sub	w9, w9, #0x1
   219a4:	mov	w19, #0x1                   	// #1
   219a8:	mov	w26, #0x30                  	// #48
   219ac:	lsl	x28, x9, #1
   219b0:	mov	w23, #0xffffffff            	// #-1
   219b4:	cmp	x28, x25
   219b8:	b.eq	21af4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21d0>  // b.none
   219bc:	ubfx	w9, w8, #1, #27
   219c0:	sub	w27, w19, #0x1
   219c4:	sub	w9, w9, #0x1
   219c8:	cmp	w9, w27
   219cc:	b.ls	25c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6360>  // b.plast
   219d0:	and	w9, w8, #0xfffffff
   219d4:	add	x25, x25, #0x2
   219d8:	cmp	w9, w25
   219dc:	b.ls	25c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6340>  // b.plast
   219e0:	tbnz	w8, #30, 219f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x20d0>
   219e4:	mov	w8, #0x18                  	// #24
   219e8:	mneg	x8, x9, x8
   219ec:	add	x8, x21, x8
   219f0:	b	219f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x20d4>
   219f4:	ldur	x8, [x21, #-8]
   219f8:	ldr	x1, [x8, x26]
   219fc:	mov	x0, x22
   21a00:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21a04:	ldp	w8, w9, [x20, #8]
   21a08:	mov	w24, w0
   21a0c:	cmp	w8, w9
   21a10:	b.cs	21abc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2198>  // b.hs, b.nlast
   21a14:	ldr	x9, [x20]
   21a18:	str	w24, [x9, w8, uxtw #2]
   21a1c:	ldp	w8, w9, [x20, #8]
   21a20:	cmp	w8, w9
   21a24:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21a28:	add	w8, w8, #0x1
   21a2c:	str	w8, [x20, #8]
   21a30:	ldr	w8, [x21, #20]
   21a34:	cmn	w19, #0x1
   21a38:	ubfx	w8, w8, #1, #27
   21a3c:	sub	w8, w8, #0x1
   21a40:	b.eq	21a4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2128>  // b.none
   21a44:	cmp	w8, w27
   21a48:	b.ls	25ca4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6380>  // b.plast
   21a4c:	cmp	w8, w27
   21a50:	ccmp	w19, w23, #0x4, hi  // hi = pmore
   21a54:	csel	w1, wzr, w19, eq  // eq = none
   21a58:	mov	x0, x21
   21a5c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   21a60:	mov	x1, x0
   21a64:	mov	x0, x22
   21a68:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21a6c:	ldp	w8, w9, [x20, #8]
   21a70:	mov	w24, w0
   21a74:	cmp	w8, w9
   21a78:	b.cs	21ad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21b4>  // b.hs, b.nlast
   21a7c:	ldr	x9, [x20]
   21a80:	str	w24, [x9, w8, uxtw #2]
   21a84:	ldp	w8, w9, [x20, #8]
   21a88:	cmp	w8, w9
   21a8c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21a90:	add	w8, w8, #0x1
   21a94:	str	w8, [x20, #8]
   21a98:	ldr	w8, [x21, #20]
   21a9c:	add	w19, w19, #0x1
   21aa0:	sub	w9, w19, #0x1
   21aa4:	add	x26, x26, #0x30
   21aa8:	ubfx	w10, w8, #1, #27
   21aac:	sub	w10, w10, #0x1
   21ab0:	cmp	w10, w9
   21ab4:	b.cs	219b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2090>  // b.hs, b.nlast
   21ab8:	b	25cc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63a0>
   21abc:	ldr	x1, [sp, #16]
   21ac0:	mov	w3, #0x4                   	// #4
   21ac4:	mov	x0, x20
   21ac8:	mov	x2, xzr
   21acc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   21ad0:	ldr	w8, [x20, #8]
   21ad4:	b	21a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x20f0>
   21ad8:	ldr	x1, [sp, #16]
   21adc:	mov	w3, #0x4                   	// #4
   21ae0:	mov	x0, x20
   21ae4:	mov	x2, xzr
   21ae8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   21aec:	ldr	w8, [x20, #8]
   21af0:	b	21a7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2158>
   21af4:	mov	w25, wzr
   21af8:	mov	w24, #0xc                   	// #12
   21afc:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   21b00:	add	x15, x11, x10, lsl #4
   21b04:	add	x10, x11, x10, lsl #4
   21b08:	cmp	x15, x10
   21b0c:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21b10:	ldr	w10, [x15, #8]
   21b14:	cmp	w8, w9
   21b18:	sub	w19, w10, #0x1
   21b1c:	b.cs	2517c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5858>  // b.hs, b.nlast
   21b20:	ldr	x9, [x20]
   21b24:	str	w19, [x9, w8, uxtw #2]
   21b28:	ldp	w8, w9, [x20, #8]
   21b2c:	cmp	w8, w9
   21b30:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21b34:	add	w8, w8, #0x1
   21b38:	str	w8, [x20, #8]
   21b3c:	ldr	w9, [x21, #20]
   21b40:	and	x8, x9, #0xfffffff
   21b44:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   21b48:	tbnz	w9, #30, 21b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2238>
   21b4c:	mov	w9, #0x18                  	// #24
   21b50:	mneg	x8, x8, x9
   21b54:	add	x8, x21, x8
   21b58:	b	21b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x223c>
   21b5c:	ldur	x8, [x21, #-8]
   21b60:	ldr	x1, [x8]
   21b64:	mov	x0, x22
   21b68:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21b6c:	ldp	w8, w9, [x20, #8]
   21b70:	mov	w22, w0
   21b74:	cmp	w8, w9
   21b78:	b.cs	25198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5874>  // b.hs, b.nlast
   21b7c:	ldr	x9, [x20]
   21b80:	str	w22, [x9, w8, uxtw #2]
   21b84:	ldp	w8, w9, [x20, #8]
   21b88:	cmp	w8, w9
   21b8c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21b90:	add	w8, w8, #0x1
   21b94:	str	w8, [x20, #8]
   21b98:	ldrh	w10, [x21, #18]
   21b9c:	mov	w11, #0x1                   	// #1
   21ba0:	and	w12, w10, #0x1f
   21ba4:	add	w12, w12, #0xff
   21ba8:	tst	w10, #0x1f
   21bac:	orr	w12, w12, #0x100
   21bb0:	csel	w12, wzr, w12, eq  // eq = none
   21bb4:	lsl	w13, w12, #23
   21bb8:	lsl	x11, x11, x12
   21bbc:	and	w11, w11, w13, asr #31
   21bc0:	clz	w11, w11
   21bc4:	cbz	w11, 26014 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x66f0>
   21bc8:	mov	w12, #0x20                  	// #32
   21bcc:	lsr	w13, w10, #6
   21bd0:	and	w10, w10, #0x20
   21bd4:	sub	w11, w12, w11
   21bd8:	bfi	w10, w13, #7, #1
   21bdc:	orr	w10, w10, w11
   21be0:	cmp	w8, w9
   21be4:	orr	w19, w10, #0x40
   21be8:	b.cs	251b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5890>  // b.hs, b.nlast
   21bec:	ldr	x9, [x20]
   21bf0:	str	w19, [x9, w8, uxtw #2]
   21bf4:	ldp	w8, w9, [x20, #8]
   21bf8:	cmp	w8, w9
   21bfc:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21c00:	add	w8, w8, #0x1
   21c04:	mov	w25, wzr
   21c08:	str	w8, [x20, #8]
   21c0c:	mov	w24, #0x13                  	// #19
   21c10:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   21c14:	add	x15, x11, x10, lsl #4
   21c18:	add	x10, x11, x10, lsl #4
   21c1c:	cmp	x15, x10
   21c20:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21c24:	ldr	w10, [x15, #8]
   21c28:	cmp	w8, w9
   21c2c:	sub	w19, w10, #0x1
   21c30:	b.cs	251d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x58ac>  // b.hs, b.nlast
   21c34:	ldr	x9, [x20]
   21c38:	str	w19, [x9, w8, uxtw #2]
   21c3c:	ldp	w8, w9, [x20, #8]
   21c40:	cmp	w8, w9
   21c44:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21c48:	add	w8, w8, #0x1
   21c4c:	str	w8, [x20, #8]
   21c50:	ldr	w8, [x21, #20]
   21c54:	and	x27, x8, #0xfffffff
   21c58:	cbz	w27, 21dd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24ac>
   21c5c:	add	x9, x20, #0x10
   21c60:	mov	x28, xzr
   21c64:	str	x9, [sp, #16]
   21c68:	mov	w24, #0x18                  	// #24
   21c6c:	mov	x9, x27
   21c70:	tbnz	w8, #30, 21c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x235c>
   21c74:	mneg	x8, x9, x24
   21c78:	add	x8, x21, x8
   21c7c:	b	21c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2360>
   21c80:	ldur	x8, [x21, #-8]
   21c84:	mul	x9, x28, x24
   21c88:	ldr	x25, [x8, x9]
   21c8c:	mov	x0, x22
   21c90:	mov	x1, x25
   21c94:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21c98:	ldp	w8, w9, [x20, #8]
   21c9c:	mov	w26, w0
   21ca0:	sub	w19, w23, w0
   21ca4:	cmp	w8, w9
   21ca8:	b.cs	21d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2474>  // b.hs, b.nlast
   21cac:	ldr	x9, [x20]
   21cb0:	str	w19, [x9, w8, uxtw #2]
   21cb4:	ldp	w8, w9, [x20, #8]
   21cb8:	cmp	w8, w9
   21cbc:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21cc0:	add	w8, w8, #0x1
   21cc4:	cmp	w26, w23
   21cc8:	str	w8, [x20, #8]
   21ccc:	b.cc	21d78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2454>  // b.lo, b.ul, b.last
   21cd0:	ldr	x11, [sp, #24]
   21cd4:	ldr	w10, [x11, #72]
   21cd8:	ldr	x11, [x11, #56]
   21cdc:	cbz	w10, 21d3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2418>
   21ce0:	ldr	x12, [x25]
   21ce4:	orr	x13, x12, #0x8
   21ce8:	cmn	x13, #0x8
   21cec:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   21cf0:	ubfx	x13, x12, #4, #28
   21cf4:	eor	w14, w13, w12, lsr #9
   21cf8:	sub	w13, w10, #0x1
   21cfc:	and	w14, w14, w13
   21d00:	add	x15, x11, w14, uxtw #4
   21d04:	ldr	x16, [x15]
   21d08:	cmp	x16, x12
   21d0c:	b.eq	21d40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x241c>  // b.none
   21d10:	mov	w17, #0x1                   	// #1
   21d14:	cmn	x16, #0x8
   21d18:	b.eq	21d3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2418>  // b.none
   21d1c:	add	w14, w14, w17
   21d20:	and	w14, w14, w13
   21d24:	add	x15, x11, w14, uxtw #4
   21d28:	ldr	x16, [x15]
   21d2c:	add	w17, w17, #0x1
   21d30:	cmp	x16, x12
   21d34:	b.eq	21d40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x241c>  // b.none
   21d38:	b	21d14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x23f0>
   21d3c:	add	x15, x11, x10, lsl #4
   21d40:	add	x10, x11, x10, lsl #4
   21d44:	cmp	x15, x10
   21d48:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21d4c:	ldr	w10, [x15, #8]
   21d50:	cmp	w8, w9
   21d54:	sub	w19, w10, #0x1
   21d58:	b.cs	21db4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2490>  // b.hs, b.nlast
   21d5c:	ldr	x9, [x20]
   21d60:	str	w19, [x9, w8, uxtw #2]
   21d64:	ldp	w8, w9, [x20, #8]
   21d68:	cmp	w8, w9
   21d6c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21d70:	add	w8, w8, #0x1
   21d74:	str	w8, [x20, #8]
   21d78:	add	x28, x28, #0x1
   21d7c:	cmp	x28, x27
   21d80:	b.eq	21dd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24ac>  // b.none
   21d84:	ldr	w8, [x21, #20]
   21d88:	and	x9, x8, #0xfffffff
   21d8c:	cmp	x28, x9
   21d90:	b.cc	21c70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x234c>  // b.lo, b.ul, b.last
   21d94:	b	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   21d98:	ldr	x1, [sp, #16]
   21d9c:	mov	w3, #0x4                   	// #4
   21da0:	mov	x0, x20
   21da4:	mov	x2, xzr
   21da8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   21dac:	ldr	w8, [x20, #8]
   21db0:	b	21cac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2388>
   21db4:	ldr	x1, [sp, #16]
   21db8:	mov	w3, #0x4                   	// #4
   21dbc:	mov	x0, x20
   21dc0:	mov	x2, xzr
   21dc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   21dc8:	ldr	w8, [x20, #8]
   21dcc:	b	21d5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2438>
   21dd0:	mov	w24, #0x2b                  	// #43
   21dd4:	mov	w25, #0xd                   	// #13
   21dd8:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   21ddc:	add	x15, x11, x10, lsl #4
   21de0:	add	x10, x11, x10, lsl #4
   21de4:	cmp	x15, x10
   21de8:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   21dec:	ldr	w10, [x15, #8]
   21df0:	cmp	w8, w9
   21df4:	sub	w19, w10, #0x1
   21df8:	b.cs	251ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x58c8>  // b.hs, b.nlast
   21dfc:	ldr	x9, [x20]
   21e00:	str	w19, [x9, w8, uxtw #2]
   21e04:	ldp	w8, w9, [x20, #8]
   21e08:	cmp	w8, w9
   21e0c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21e10:	add	w8, w8, #0x1
   21e14:	str	w8, [x20, #8]
   21e18:	ldr	w9, [x21, #20]
   21e1c:	and	x8, x9, #0xfffffff
   21e20:	cmp	w8, #0x1
   21e24:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   21e28:	tbnz	w9, #30, 21e3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2518>
   21e2c:	mov	w9, #0x18                  	// #24
   21e30:	mneg	x8, x8, x9
   21e34:	add	x8, x21, x8
   21e38:	b	21e40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x251c>
   21e3c:	ldur	x8, [x21, #-8]
   21e40:	ldr	x1, [x8, #24]
   21e44:	mov	x0, x22
   21e48:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21e4c:	ldp	w8, w9, [x20, #8]
   21e50:	sub	w19, w23, w0
   21e54:	cmp	w8, w9
   21e58:	b.cs	24d8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5468>  // b.hs, b.nlast
   21e5c:	ldr	x9, [x20]
   21e60:	str	w19, [x9, w8, uxtw #2]
   21e64:	ldp	w8, w9, [x20, #8]
   21e68:	cmp	w8, w9
   21e6c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21e70:	add	w8, w8, #0x1
   21e74:	str	w8, [x20, #8]
   21e78:	ldrb	w10, [x27]
   21e7c:	sub	w10, w10, #0x4d
   21e80:	cmp	w10, #0x2
   21e84:	b.cs	25ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6598>  // b.hs, b.nlast
   21e88:	ldrh	w10, [x21, #18]
   21e8c:	cmp	w8, w9
   21e90:	and	w19, w10, #0x7fff
   21e94:	b.cs	24da8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5484>  // b.hs, b.nlast
   21e98:	ldr	x9, [x20]
   21e9c:	str	w19, [x9, w8, uxtw #2]
   21ea0:	ldp	w8, w9, [x20, #8]
   21ea4:	cmp	w8, w9
   21ea8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21eac:	add	w8, w8, #0x1
   21eb0:	mov	x0, x21
   21eb4:	str	w8, [x20, #8]
   21eb8:	bl	148f8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   21ebc:	cbz	x0, 21ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x25d4>
   21ec0:	ldp	w8, w9, [x20, #8]
   21ec4:	mov	x21, x0
   21ec8:	cmp	w8, w9
   21ecc:	b.cs	24dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x54a0>  // b.hs, b.nlast
   21ed0:	ldr	x9, [x20]
   21ed4:	str	w21, [x9, w8, uxtw #2]
   21ed8:	ldp	w8, w9, [x20, #8]
   21edc:	cmp	w8, w9
   21ee0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21ee4:	add	w8, w8, #0x1
   21ee8:	mov	w25, wzr
   21eec:	str	w8, [x20, #8]
   21ef0:	mov	w24, #0x1c                  	// #28
   21ef4:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   21ef8:	mov	w25, wzr
   21efc:	mov	w24, #0x1c                  	// #28
   21f00:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   21f04:	mov	x0, x21
   21f08:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   21f0c:	ldr	w8, [x21, #20]
   21f10:	mov	x25, x0
   21f14:	tbnz	w8, #31, 237e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ec4>
   21f18:	mov	x8, xzr
   21f1c:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ed0>
   21f20:	ldr	x19, [sp, #32]
   21f24:	mov	x0, x19
   21f28:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21f2c:	ldp	w8, w9, [x20, #8]
   21f30:	mov	w24, w0
   21f34:	cmp	w8, w9
   21f38:	b.cs	25208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x58e4>  // b.hs, b.nlast
   21f3c:	ldr	x9, [x20]
   21f40:	str	w24, [x9, w8, uxtw #2]
   21f44:	ldp	w8, w9, [x20, #8]
   21f48:	cmp	w8, w9
   21f4c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21f50:	add	w8, w8, #0x1
   21f54:	str	w8, [x20, #8]
   21f58:	ldr	w8, [x21, #20]
   21f5c:	and	w8, w8, #0xfffffff
   21f60:	cmp	w8, #0x3
   21f64:	b.ne	22004 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x26e0>  // b.any
   21f68:	ldur	x1, [x21, #-48]
   21f6c:	cbz	x1, 21f7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2658>
   21f70:	ldrb	w8, [x1, #16]
   21f74:	cmp	w8, #0x12
   21f78:	b.ne	260a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6780>  // b.any
   21f7c:	mov	x0, x19
   21f80:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21f84:	ldp	w8, w9, [x20, #8]
   21f88:	mov	w24, w0
   21f8c:	cmp	w8, w9
   21f90:	b.cs	25764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e40>  // b.hs, b.nlast
   21f94:	ldr	x9, [x20]
   21f98:	str	w24, [x9, w8, uxtw #2]
   21f9c:	ldp	w8, w9, [x20, #8]
   21fa0:	cmp	w8, w9
   21fa4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21fa8:	add	w8, w8, #0x1
   21fac:	str	w8, [x20, #8]
   21fb0:	ldr	w8, [x21, #20]
   21fb4:	and	w8, w8, #0xfffffff
   21fb8:	cmp	w8, #0x3
   21fbc:	b.ne	260e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x67c0>  // b.any
   21fc0:	ldur	x1, [x21, #-72]
   21fc4:	mov	x0, x19
   21fc8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21fcc:	ldp	w8, w9, [x20, #8]
   21fd0:	sub	w19, w23, w0
   21fd4:	cmp	w8, w9
   21fd8:	b.cs	25780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e5c>  // b.hs, b.nlast
   21fdc:	ldr	x9, [x20]
   21fe0:	str	w19, [x9, w8, uxtw #2]
   21fe4:	ldp	w8, w9, [x20, #8]
   21fe8:	cmp	w8, w9
   21fec:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   21ff0:	add	w8, w8, #0x1
   21ff4:	mov	w25, wzr
   21ff8:	str	w8, [x20, #8]
   21ffc:	mov	w24, #0xb                   	// #11
   22000:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   22004:	mov	w25, wzr
   22008:	mov	w24, #0xb                   	// #11
   2200c:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   22010:	mov	x0, x21
   22014:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   22018:	ldr	w8, [x21, #20]
   2201c:	mov	x25, x0
   22020:	tbnz	w8, #31, 23e90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x456c>
   22024:	mov	x8, xzr
   22028:	b	23e9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4578>
   2202c:	mov	x0, x21
   22030:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   22034:	ldr	w8, [x21, #20]
   22038:	mov	x24, x0
   2203c:	tbnz	w8, #31, 24490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b6c>
   22040:	mov	x8, xzr
   22044:	b	2449c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b78>
   22048:	mov	w25, #0xa                   	// #10
   2204c:	b	24cf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d4>
   22050:	ldr	x22, [sp, #32]
   22054:	add	x9, x20, #0x10
   22058:	mov	x28, xzr
   2205c:	str	x9, [sp, #16]
   22060:	mov	w24, #0x18                  	// #24
   22064:	mov	x9, x27
   22068:	tbnz	w8, #30, 22078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2754>
   2206c:	mneg	x8, x9, x24
   22070:	add	x8, x21, x8
   22074:	b	2207c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2758>
   22078:	ldur	x8, [x21, #-8]
   2207c:	mul	x9, x28, x24
   22080:	ldr	x25, [x8, x9]
   22084:	mov	x0, x22
   22088:	mov	x1, x25
   2208c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22090:	ldp	w8, w9, [x20, #8]
   22094:	mov	w26, w0
   22098:	sub	w19, w23, w0
   2209c:	cmp	w8, w9
   220a0:	b.cs	22190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x286c>  // b.hs, b.nlast
   220a4:	ldr	x9, [x20]
   220a8:	str	w19, [x9, w8, uxtw #2]
   220ac:	ldp	w8, w9, [x20, #8]
   220b0:	cmp	w8, w9
   220b4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   220b8:	add	w8, w8, #0x1
   220bc:	cmp	w26, w23
   220c0:	str	w8, [x20, #8]
   220c4:	b.cc	22170 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x284c>  // b.lo, b.ul, b.last
   220c8:	ldr	x11, [sp, #24]
   220cc:	ldr	w10, [x11, #72]
   220d0:	ldr	x11, [x11, #56]
   220d4:	cbz	w10, 22134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2810>
   220d8:	ldr	x12, [x25]
   220dc:	orr	x13, x12, #0x8
   220e0:	cmn	x13, #0x8
   220e4:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   220e8:	ubfx	x13, x12, #4, #28
   220ec:	eor	w14, w13, w12, lsr #9
   220f0:	sub	w13, w10, #0x1
   220f4:	and	w14, w14, w13
   220f8:	add	x15, x11, w14, uxtw #4
   220fc:	ldr	x16, [x15]
   22100:	cmp	x16, x12
   22104:	b.eq	22138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2814>  // b.none
   22108:	mov	w17, #0x1                   	// #1
   2210c:	cmn	x16, #0x8
   22110:	b.eq	22134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2810>  // b.none
   22114:	add	w14, w14, w17
   22118:	and	w14, w14, w13
   2211c:	add	x15, x11, w14, uxtw #4
   22120:	ldr	x16, [x15]
   22124:	add	w17, w17, #0x1
   22128:	cmp	x16, x12
   2212c:	b.eq	22138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2814>  // b.none
   22130:	b	2210c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x27e8>
   22134:	add	x15, x11, x10, lsl #4
   22138:	add	x10, x11, x10, lsl #4
   2213c:	cmp	x15, x10
   22140:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   22144:	ldr	w10, [x15, #8]
   22148:	cmp	w8, w9
   2214c:	sub	w19, w10, #0x1
   22150:	b.cs	221ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2888>  // b.hs, b.nlast
   22154:	ldr	x9, [x20]
   22158:	str	w19, [x9, w8, uxtw #2]
   2215c:	ldp	w8, w9, [x20, #8]
   22160:	cmp	w8, w9
   22164:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22168:	add	w8, w8, #0x1
   2216c:	str	w8, [x20, #8]
   22170:	add	x28, x28, #0x1
   22174:	cmp	x28, x27
   22178:	b.eq	221c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x28a4>  // b.none
   2217c:	ldr	w8, [x21, #20]
   22180:	and	x9, x8, #0xfffffff
   22184:	cmp	x28, x9
   22188:	b.cc	22068 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2744>  // b.lo, b.ul, b.last
   2218c:	b	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   22190:	ldr	x1, [sp, #16]
   22194:	mov	w3, #0x4                   	// #4
   22198:	mov	x0, x20
   2219c:	mov	x2, xzr
   221a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   221a4:	ldr	w8, [x20, #8]
   221a8:	b	220a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2780>
   221ac:	ldr	x1, [sp, #16]
   221b0:	mov	w3, #0x4                   	// #4
   221b4:	mov	x0, x20
   221b8:	mov	x2, xzr
   221bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   221c0:	ldr	w8, [x20, #8]
   221c4:	b	22154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2830>
   221c8:	mov	w25, wzr
   221cc:	b	24cf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d4>
   221d0:	ldur	x8, [x21, #-8]
   221d4:	ldr	x1, [x8, #24]
   221d8:	cbz	x1, 25ce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63c0>
   221dc:	ldrb	w8, [x1, #16]
   221e0:	cmp	w8, #0x12
   221e4:	b.ne	25f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6618>  // b.any
   221e8:	mov	x0, x22
   221ec:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   221f0:	ldp	w8, w9, [x20, #8]
   221f4:	mov	w21, w0
   221f8:	cmp	w8, w9
   221fc:	b.cs	2579c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e78>  // b.hs, b.nlast
   22200:	ldr	x9, [x20]
   22204:	str	w21, [x9, w8, uxtw #2]
   22208:	ldp	w8, w9, [x20, #8]
   2220c:	cmp	w8, w9
   22210:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22214:	add	w8, w8, #0x1
   22218:	mov	w25, wzr
   2221c:	str	w8, [x20, #8]
   22220:	mov	w24, #0x34                  	// #52
   22224:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   22228:	ldur	x8, [x21, #-8]
   2222c:	ldr	x24, [x8]
   22230:	mov	x1, x24
   22234:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22238:	ldp	w8, w9, [x20, #8]
   2223c:	mov	w22, w0
   22240:	sub	w19, w23, w0
   22244:	cmp	w8, w9
   22248:	b.cs	25a90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x616c>  // b.hs, b.nlast
   2224c:	ldr	x9, [x20]
   22250:	str	w19, [x9, w8, uxtw #2]
   22254:	ldp	w8, w9, [x20, #8]
   22258:	cmp	w8, w9
   2225c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22260:	add	w8, w8, #0x1
   22264:	cmp	w22, w23
   22268:	str	w8, [x20, #8]
   2226c:	b.cs	222cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x29a8>  // b.hs, b.nlast
   22270:	mov	w25, #0x9                   	// #9
   22274:	b	24aa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x517c>
   22278:	ldur	x8, [x21, #-8]
   2227c:	ldr	x24, [x8]
   22280:	mov	x0, x22
   22284:	mov	x1, x24
   22288:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2228c:	ldp	w8, w9, [x20, #8]
   22290:	mov	w25, w0
   22294:	sub	w19, w23, w0
   22298:	cmp	w8, w9
   2229c:	b.cs	25aac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6188>  // b.hs, b.nlast
   222a0:	ldr	x9, [x20]
   222a4:	str	w19, [x9, w8, uxtw #2]
   222a8:	ldp	w8, w9, [x20, #8]
   222ac:	cmp	w8, w9
   222b0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   222b4:	add	w8, w8, #0x1
   222b8:	cmp	w25, w23
   222bc:	str	w8, [x20, #8]
   222c0:	b.cs	22338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a14>  // b.hs, b.nlast
   222c4:	mov	w25, #0x7                   	// #7
   222c8:	b	24bc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x52a4>
   222cc:	ldr	x11, [sp, #24]
   222d0:	ldr	w10, [x11, #72]
   222d4:	ldr	x11, [x11, #56]
   222d8:	cbz	w10, 24a60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x513c>
   222dc:	ldr	x12, [x24]
   222e0:	orr	x13, x12, #0x8
   222e4:	cmn	x13, #0x8
   222e8:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   222ec:	ubfx	x13, x12, #4, #28
   222f0:	eor	w14, w13, w12, lsr #9
   222f4:	sub	w13, w10, #0x1
   222f8:	and	w14, w14, w13
   222fc:	add	x15, x11, w14, uxtw #4
   22300:	ldr	x16, [x15]
   22304:	cmp	x16, x12
   22308:	b.eq	24a64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5140>  // b.none
   2230c:	mov	w17, #0x1                   	// #1
   22310:	cmn	x16, #0x8
   22314:	b.eq	24a60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x513c>  // b.none
   22318:	add	w14, w14, w17
   2231c:	and	w14, w14, w13
   22320:	add	x15, x11, w14, uxtw #4
   22324:	ldr	x16, [x15]
   22328:	add	w17, w17, #0x1
   2232c:	cmp	x16, x12
   22330:	b.eq	24a64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5140>  // b.none
   22334:	b	22310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x29ec>
   22338:	ldr	x11, [sp, #24]
   2233c:	ldr	w10, [x11, #72]
   22340:	ldr	x11, [x11, #56]
   22344:	cbz	w10, 24b88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5264>
   22348:	ldr	x12, [x24]
   2234c:	orr	x13, x12, #0x8
   22350:	cmn	x13, #0x8
   22354:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   22358:	ubfx	x13, x12, #4, #28
   2235c:	eor	w14, w13, w12, lsr #9
   22360:	sub	w13, w10, #0x1
   22364:	and	w14, w14, w13
   22368:	add	x15, x11, w14, uxtw #4
   2236c:	ldr	x16, [x15]
   22370:	cmp	x16, x12
   22374:	b.eq	24b8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5268>  // b.none
   22378:	mov	w17, #0x1                   	// #1
   2237c:	cmn	x16, #0x8
   22380:	b.eq	24b88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5264>  // b.none
   22384:	add	w14, w14, w17
   22388:	and	w14, w14, w13
   2238c:	add	x15, x11, w14, uxtw #4
   22390:	ldr	x16, [x15]
   22394:	add	w17, w17, #0x1
   22398:	cmp	x16, x12
   2239c:	b.eq	24b8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5268>  // b.none
   223a0:	b	2237c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a58>
   223a4:	add	x15, x11, x10, lsl #4
   223a8:	add	x10, x11, x10, lsl #4
   223ac:	cmp	x15, x10
   223b0:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   223b4:	ldr	w10, [x15, #8]
   223b8:	cmp	w8, w9
   223bc:	sub	w19, w10, #0x1
   223c0:	b.cs	257b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e94>  // b.hs, b.nlast
   223c4:	ldr	x9, [x20]
   223c8:	str	w19, [x9, w8, uxtw #2]
   223cc:	ldp	w8, w9, [x20, #8]
   223d0:	cmp	w8, w9
   223d4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   223d8:	add	w8, w8, #0x1
   223dc:	str	w8, [x20, #8]
   223e0:	ldr	w9, [x21, #20]
   223e4:	and	x8, x9, #0xfffffff
   223e8:	cmp	w8, #0x1
   223ec:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   223f0:	tbnz	w9, #30, 22404 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ae0>
   223f4:	mov	w9, #0x18                  	// #24
   223f8:	mneg	x8, x8, x9
   223fc:	add	x8, x21, x8
   22400:	b	22408 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ae4>
   22404:	ldur	x8, [x21, #-8]
   22408:	ldr	x21, [x8, #24]
   2240c:	mov	x0, x22
   22410:	mov	x1, x21
   22414:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22418:	ldp	w8, w9, [x20, #8]
   2241c:	mov	w22, w0
   22420:	sub	w19, w23, w0
   22424:	cmp	w8, w9
   22428:	b.cs	25224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5900>  // b.hs, b.nlast
   2242c:	ldr	x9, [x20]
   22430:	str	w19, [x9, w8, uxtw #2]
   22434:	ldp	w8, w9, [x20, #8]
   22438:	cmp	w8, w9
   2243c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22440:	add	w8, w8, #0x1
   22444:	cmp	w22, w23
   22448:	str	w8, [x20, #8]
   2244c:	b.cs	2245c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2b38>  // b.hs, b.nlast
   22450:	mov	w25, wzr
   22454:	mov	w24, #0x6                   	// #6
   22458:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   2245c:	ldr	x11, [sp, #24]
   22460:	ldr	w10, [x11, #72]
   22464:	ldr	x11, [x11, #56]
   22468:	cbz	w10, 224c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ba4>
   2246c:	ldr	x12, [x21]
   22470:	orr	x13, x12, #0x8
   22474:	cmn	x13, #0x8
   22478:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   2247c:	ubfx	x13, x12, #4, #28
   22480:	eor	w14, w13, w12, lsr #9
   22484:	sub	w13, w10, #0x1
   22488:	and	w14, w14, w13
   2248c:	add	x15, x11, w14, uxtw #4
   22490:	ldr	x16, [x15]
   22494:	cmp	x16, x12
   22498:	b.eq	224cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ba8>  // b.none
   2249c:	mov	w17, #0x1                   	// #1
   224a0:	cmn	x16, #0x8
   224a4:	b.eq	224c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ba4>  // b.none
   224a8:	add	w14, w14, w17
   224ac:	and	w14, w14, w13
   224b0:	add	x15, x11, w14, uxtw #4
   224b4:	ldr	x16, [x15]
   224b8:	add	w17, w17, #0x1
   224bc:	cmp	x16, x12
   224c0:	b.eq	224cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ba8>  // b.none
   224c4:	b	224a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2b7c>
   224c8:	add	x15, x11, x10, lsl #4
   224cc:	add	x10, x11, x10, lsl #4
   224d0:	cmp	x15, x10
   224d4:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   224d8:	ldr	w10, [x15, #8]
   224dc:	cmp	w8, w9
   224e0:	sub	w19, w10, #0x1
   224e4:	b.cs	257d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5eb0>  // b.hs, b.nlast
   224e8:	ldr	x9, [x20]
   224ec:	str	w19, [x9, w8, uxtw #2]
   224f0:	ldp	w8, w9, [x20, #8]
   224f4:	cmp	w8, w9
   224f8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   224fc:	add	w8, w8, #0x1
   22500:	mov	w25, wzr
   22504:	str	w8, [x20, #8]
   22508:	mov	w24, #0x6                   	// #6
   2250c:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   22510:	add	x15, x11, x10, lsl #4
   22514:	add	x10, x11, x10, lsl #4
   22518:	cmp	x15, x10
   2251c:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   22520:	ldr	w10, [x15, #8]
   22524:	cmp	w8, w9
   22528:	sub	w19, w10, #0x1
   2252c:	b.cs	257f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ecc>  // b.hs, b.nlast
   22530:	ldr	x9, [x20]
   22534:	str	w19, [x9, w8, uxtw #2]
   22538:	ldp	w8, w9, [x20, #8]
   2253c:	cmp	w8, w9
   22540:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22544:	add	w8, w8, #0x1
   22548:	str	w8, [x20, #8]
   2254c:	ldr	w9, [x21, #20]
   22550:	and	x8, x9, #0xfffffff
   22554:	cmp	w8, #0x1
   22558:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   2255c:	tbnz	w9, #30, 22570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c4c>
   22560:	mov	w9, #0x18                  	// #24
   22564:	mneg	x8, x8, x9
   22568:	add	x8, x21, x8
   2256c:	b	22574 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c50>
   22570:	ldur	x8, [x21, #-8]
   22574:	ldr	x1, [x8, #24]
   22578:	mov	x0, x22
   2257c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22580:	ldp	w8, w9, [x20, #8]
   22584:	sub	w19, w23, w0
   22588:	cmp	w8, w9
   2258c:	b.cs	25240 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x591c>  // b.hs, b.nlast
   22590:	ldr	x9, [x20]
   22594:	str	w19, [x9, w8, uxtw #2]
   22598:	ldp	w8, w9, [x20, #8]
   2259c:	cmp	w8, w9
   225a0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   225a4:	add	w8, w8, #0x1
   225a8:	str	w8, [x20, #8]
   225ac:	ldrb	w10, [x27]
   225b0:	cmp	w10, #0x3d
   225b4:	b.ne	25e3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6518>  // b.any
   225b8:	ldrh	w10, [x21, #18]
   225bc:	ubfx	w19, w10, #5, #10
   225c0:	cmp	w19, #0xd
   225c4:	b.cs	26034 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6710>  // b.hs, b.nlast
   225c8:	cmp	w8, w9
   225cc:	b.cs	2525c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5938>  // b.hs, b.nlast
   225d0:	ldr	x9, [x20]
   225d4:	str	w19, [x9, w8, uxtw #2]
   225d8:	ldp	w8, w9, [x20, #8]
   225dc:	cmp	w8, w9
   225e0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   225e4:	add	w8, w8, #0x1
   225e8:	str	w8, [x20, #8]
   225ec:	ldrb	w10, [x27]
   225f0:	cmp	w10, #0x3d
   225f4:	b.ne	25e3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6518>  // b.any
   225f8:	ldrh	w10, [x21, #18]
   225fc:	cmp	w8, w9
   22600:	and	w19, w10, #0x1
   22604:	b.cs	25278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5954>  // b.hs, b.nlast
   22608:	ldr	x9, [x20]
   2260c:	str	w19, [x9, w8, uxtw #2]
   22610:	ldp	w8, w9, [x20, #8]
   22614:	cmp	w8, w9
   22618:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2261c:	add	w8, w8, #0x1
   22620:	str	w8, [x20, #8]
   22624:	ldrb	w10, [x27]
   22628:	cmp	w10, #0x3d
   2262c:	b.ne	25e3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6518>  // b.any
   22630:	ldrh	w10, [x21, #18]
   22634:	mov	w11, #0xf7                  	// #247
   22638:	ubfx	x10, x10, #2, #3
   2263c:	lsr	w11, w11, w10
   22640:	tbz	w11, #0, 25dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a0>
   22644:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   22648:	add	x11, x11, #0x0
   2264c:	ldr	w19, [x11, x10, lsl #2]
   22650:	cmp	w8, w9
   22654:	b.cs	25294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5970>  // b.hs, b.nlast
   22658:	ldr	x9, [x20]
   2265c:	str	w19, [x9, w8, uxtw #2]
   22660:	ldp	w8, w9, [x20, #8]
   22664:	cmp	w8, w9
   22668:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2266c:	add	w8, w8, #0x1
   22670:	str	w8, [x20, #8]
   22674:	ldrb	w10, [x27]
   22678:	cmp	w10, #0x3d
   2267c:	b.ne	25e3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6518>  // b.any
   22680:	ldrb	w19, [x21, #56]
   22684:	cmp	w8, w9
   22688:	b.cs	252b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x598c>  // b.hs, b.nlast
   2268c:	ldr	x9, [x20]
   22690:	str	w19, [x9, w8, uxtw #2]
   22694:	ldp	w8, w9, [x20, #8]
   22698:	cmp	w8, w9
   2269c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   226a0:	add	w8, w8, #0x1
   226a4:	mov	w25, wzr
   226a8:	str	w8, [x20, #8]
   226ac:	mov	w24, #0x26                  	// #38
   226b0:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   226b4:	add	x15, x11, x10, lsl #4
   226b8:	add	x10, x11, x10, lsl #4
   226bc:	cmp	x15, x10
   226c0:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   226c4:	ldr	w10, [x15, #8]
   226c8:	cmp	w8, w9
   226cc:	sub	w19, w10, #0x1
   226d0:	b.cs	2580c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ee8>  // b.hs, b.nlast
   226d4:	ldr	x9, [x20]
   226d8:	str	w19, [x9, w8, uxtw #2]
   226dc:	ldp	w8, w9, [x20, #8]
   226e0:	cmp	w8, w9
   226e4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   226e8:	mov	w11, wzr
   226ec:	add	w8, w8, #0x1
   226f0:	str	w8, [x20, #8]
   226f4:	ldr	x12, [sp, #24]
   226f8:	tst	w24, #0x1
   226fc:	csel	w25, wzr, w11, ne  // ne = any
   22700:	mov	w13, #0x29                  	// #41
   22704:	ldr	w10, [x12, #72]
   22708:	ldr	x11, [x12, #56]
   2270c:	mov	w12, #0x14                  	// #20
   22710:	csel	w24, w13, w12, ne  // ne = any
   22714:	cbz	w10, 22774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e50>
   22718:	ldr	x12, [x21]
   2271c:	orr	x13, x12, #0x8
   22720:	cmn	x13, #0x8
   22724:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   22728:	ubfx	x13, x12, #4, #28
   2272c:	eor	w14, w13, w12, lsr #9
   22730:	sub	w13, w10, #0x1
   22734:	and	w14, w14, w13
   22738:	add	x15, x11, w14, uxtw #4
   2273c:	ldr	x16, [x15]
   22740:	cmp	x16, x12
   22744:	b.eq	22778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e54>  // b.none
   22748:	mov	w17, #0x1                   	// #1
   2274c:	cmn	x16, #0x8
   22750:	b.eq	22774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e50>  // b.none
   22754:	add	w14, w14, w17
   22758:	and	w14, w14, w13
   2275c:	add	x15, x11, w14, uxtw #4
   22760:	ldr	x16, [x15]
   22764:	add	w17, w17, #0x1
   22768:	cmp	x16, x12
   2276c:	b.eq	22778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e54>  // b.none
   22770:	b	2274c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e28>
   22774:	add	x15, x11, x10, lsl #4
   22778:	add	x10, x11, x10, lsl #4
   2277c:	cmp	x15, x10
   22780:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   22784:	ldr	w10, [x15, #8]
   22788:	cmp	w8, w9
   2278c:	sub	w19, w10, #0x1
   22790:	b.cs	252cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x59a8>  // b.hs, b.nlast
   22794:	ldr	x9, [x20]
   22798:	str	w19, [x9, w8, uxtw #2]
   2279c:	ldp	w8, w9, [x20, #8]
   227a0:	cmp	w8, w9
   227a4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   227a8:	add	w8, w8, #0x1
   227ac:	str	w8, [x20, #8]
   227b0:	ldrb	w10, [x27]
   227b4:	cmp	w10, #0x38
   227b8:	b.ne	25e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6538>  // b.any
   227bc:	ldrh	w10, [x21, #18]
   227c0:	mov	w11, #0x1f                  	// #31
   227c4:	mov	w12, #0x1                   	// #1
   227c8:	mov	w13, #0x20                  	// #32
   227cc:	ubfx	w14, w10, #1, #5
   227d0:	tst	w11, w10, lsr #1
   227d4:	add	w10, w14, #0xff
   227d8:	orr	w10, w10, #0x100
   227dc:	csel	w10, wzr, w10, eq  // eq = none
   227e0:	lsl	w11, w10, #23
   227e4:	lsl	x10, x12, x10
   227e8:	and	w10, w10, w11, asr #31
   227ec:	clz	w10, w10
   227f0:	cmp	w8, w9
   227f4:	sub	w19, w13, w10
   227f8:	b.cs	252e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x59c4>  // b.hs, b.nlast
   227fc:	ldr	x9, [x20]
   22800:	str	w19, [x9, w8, uxtw #2]
   22804:	ldp	w8, w9, [x20, #8]
   22808:	cmp	w8, w9
   2280c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22810:	add	w8, w8, #0x1
   22814:	str	w8, [x20, #8]
   22818:	ldrb	w10, [x27]
   2281c:	cmp	w10, #0x38
   22820:	b.ne	25e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6538>  // b.any
   22824:	ldrh	w10, [x21, #18]
   22828:	cmp	w8, w9
   2282c:	and	w19, w10, #0x1
   22830:	b.cs	25304 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x59e0>  // b.hs, b.nlast
   22834:	ldr	x9, [x20]
   22838:	str	w19, [x9, w8, uxtw #2]
   2283c:	ldp	w8, w9, [x20, #8]
   22840:	cmp	w8, w9
   22844:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22848:	add	w8, w8, #0x1
   2284c:	str	w8, [x20, #8]
   22850:	ldrb	w8, [x27]
   22854:	cmp	w8, #0x38
   22858:	b.ne	25e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6538>  // b.any
   2285c:	mov	x0, x21
   22860:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
   22864:	tbz	w0, #0, 24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   22868:	ldrb	w8, [x27]
   2286c:	cmp	w8, #0x38
   22870:	b.ne	25e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6538>  // b.any
   22874:	ldrh	w8, [x21, #18]
   22878:	ubfx	x9, x8, #7, #3
   2287c:	mov	w8, #0xf7                  	// #247
   22880:	lsr	w8, w8, w9
   22884:	tbz	w8, #0, 25dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a0>
   22888:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2288c:	ldp	w8, w10, [x20, #8]
   22890:	add	x11, x11, #0x0
   22894:	ldr	w19, [x11, x9, lsl #2]
   22898:	cmp	w8, w10
   2289c:	b.cs	25828 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f04>  // b.hs, b.nlast
   228a0:	ldr	x9, [x20]
   228a4:	str	w19, [x9, w8, uxtw #2]
   228a8:	ldp	w8, w9, [x20, #8]
   228ac:	cmp	w8, w9
   228b0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   228b4:	add	w8, w8, #0x1
   228b8:	str	w8, [x20, #8]
   228bc:	ldrb	w10, [x27]
   228c0:	cmp	w10, #0x38
   228c4:	b.ne	25e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6538>  // b.any
   228c8:	ldrb	w19, [x21, #56]
   228cc:	cmp	w8, w9
   228d0:	b.cs	25844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f20>  // b.hs, b.nlast
   228d4:	ldr	x9, [x20]
   228d8:	str	w19, [x9, w8, uxtw #2]
   228dc:	ldp	w8, w9, [x20, #8]
   228e0:	cmp	w8, w9
   228e4:	b.cc	23530 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c0c>  // b.lo, b.ul, b.last
   228e8:	b	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>
   228ec:	add	x15, x11, x10, lsl #4
   228f0:	add	x10, x11, x10, lsl #4
   228f4:	cmp	x15, x10
   228f8:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   228fc:	ldr	w10, [x15, #8]
   22900:	cmp	w8, w9
   22904:	sub	w19, w10, #0x1
   22908:	b.cs	25860 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f3c>  // b.hs, b.nlast
   2290c:	ldr	x9, [x20]
   22910:	str	w19, [x9, w8, uxtw #2]
   22914:	ldp	w8, w9, [x20, #8]
   22918:	cmp	w8, w9
   2291c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22920:	mov	w25, wzr
   22924:	add	w8, w8, #0x1
   22928:	str	w8, [x20, #8]
   2292c:	mov	w24, #0x3a                  	// #58
   22930:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   22934:	add	x15, x11, x10, lsl #4
   22938:	add	x10, x11, x10, lsl #4
   2293c:	cmp	x15, x10
   22940:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   22944:	ldr	w10, [x15, #8]
   22948:	cmp	w8, w9
   2294c:	sub	w19, w10, #0x1
   22950:	b.cs	2587c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f58>  // b.hs, b.nlast
   22954:	ldr	x9, [x20]
   22958:	str	w19, [x9, w8, uxtw #2]
   2295c:	ldp	w8, w9, [x20, #8]
   22960:	cmp	w8, w9
   22964:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22968:	add	w8, w8, #0x1
   2296c:	str	w8, [x20, #8]
   22970:	ldr	w9, [x21, #20]
   22974:	and	x8, x9, #0xfffffff
   22978:	cmp	w8, #0x2
   2297c:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   22980:	tbnz	w9, #30, 22994 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3070>
   22984:	mov	w9, #0x18                  	// #24
   22988:	mneg	x8, x8, x9
   2298c:	add	x8, x21, x8
   22990:	b	22998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3074>
   22994:	ldur	x8, [x21, #-8]
   22998:	ldr	x1, [x8, #48]
   2299c:	mov	x0, x22
   229a0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   229a4:	ldp	w8, w9, [x20, #8]
   229a8:	sub	w19, w23, w0
   229ac:	cmp	w8, w9
   229b0:	b.cs	25320 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x59fc>  // b.hs, b.nlast
   229b4:	ldr	x9, [x20]
   229b8:	str	w19, [x9, w8, uxtw #2]
   229bc:	ldp	w8, w9, [x20, #8]
   229c0:	cmp	w8, w9
   229c4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   229c8:	add	w8, w8, #0x1
   229cc:	str	w8, [x20, #8]
   229d0:	ldr	w9, [x21, #20]
   229d4:	and	x8, x9, #0xfffffff
   229d8:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   229dc:	tbnz	w9, #30, 229f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x30cc>
   229e0:	mov	w9, #0x18                  	// #24
   229e4:	mneg	x8, x8, x9
   229e8:	add	x8, x21, x8
   229ec:	b	229f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x30d0>
   229f0:	ldur	x8, [x21, #-8]
   229f4:	ldr	x24, [x8]
   229f8:	mov	x0, x22
   229fc:	mov	x1, x24
   22a00:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22a04:	ldp	w8, w9, [x20, #8]
   22a08:	mov	w22, w0
   22a0c:	sub	w19, w23, w0
   22a10:	cmp	w8, w9
   22a14:	b.cs	2533c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a18>  // b.hs, b.nlast
   22a18:	ldr	x9, [x20]
   22a1c:	str	w19, [x9, w8, uxtw #2]
   22a20:	ldp	w8, w9, [x20, #8]
   22a24:	cmp	w8, w9
   22a28:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22a2c:	add	w8, w8, #0x1
   22a30:	cmp	w22, w23
   22a34:	str	w8, [x20, #8]
   22a38:	b.cc	230a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x377c>  // b.lo, b.ul, b.last
   22a3c:	ldr	x11, [sp, #24]
   22a40:	ldr	w10, [x11, #72]
   22a44:	ldr	x11, [x11, #56]
   22a48:	cbz	w10, 23064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3740>
   22a4c:	ldr	x12, [x24]
   22a50:	orr	x13, x12, #0x8
   22a54:	cmn	x13, #0x8
   22a58:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   22a5c:	ubfx	x13, x12, #4, #28
   22a60:	eor	w14, w13, w12, lsr #9
   22a64:	sub	w13, w10, #0x1
   22a68:	and	w14, w14, w13
   22a6c:	add	x15, x11, w14, uxtw #4
   22a70:	ldr	x16, [x15]
   22a74:	cmp	x16, x12
   22a78:	b.eq	23068 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3744>  // b.none
   22a7c:	mov	w17, #0x1                   	// #1
   22a80:	cmn	x16, #0x8
   22a84:	b.eq	23064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3740>  // b.none
   22a88:	add	w14, w14, w17
   22a8c:	and	w14, w14, w13
   22a90:	add	x15, x11, w14, uxtw #4
   22a94:	ldr	x16, [x15]
   22a98:	add	w17, w17, #0x1
   22a9c:	cmp	x16, x12
   22aa0:	b.eq	23068 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3744>  // b.none
   22aa4:	b	22a80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x315c>
   22aa8:	add	x15, x11, x10, lsl #4
   22aac:	add	x10, x11, x10, lsl #4
   22ab0:	cmp	x15, x10
   22ab4:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   22ab8:	ldr	w10, [x15, #8]
   22abc:	cmp	w8, w9
   22ac0:	sub	w19, w10, #0x1
   22ac4:	b.cs	25898 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f74>  // b.hs, b.nlast
   22ac8:	ldr	x9, [x20]
   22acc:	str	w19, [x9, w8, uxtw #2]
   22ad0:	ldp	w8, w9, [x20, #8]
   22ad4:	cmp	w8, w9
   22ad8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22adc:	add	w8, w8, #0x1
   22ae0:	str	w8, [x20, #8]
   22ae4:	ldr	w9, [x21, #20]
   22ae8:	and	x8, x9, #0xfffffff
   22aec:	cmp	w8, #0x1
   22af0:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   22af4:	tbnz	w9, #30, 22b08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x31e4>
   22af8:	mov	w9, #0x18                  	// #24
   22afc:	mneg	x8, x8, x9
   22b00:	add	x8, x21, x8
   22b04:	b	22b0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x31e8>
   22b08:	ldur	x8, [x21, #-8]
   22b0c:	ldr	x1, [x8, #24]
   22b10:	mov	x0, x22
   22b14:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22b18:	ldp	w8, w9, [x20, #8]
   22b1c:	sub	w19, w23, w0
   22b20:	cmp	w8, w9
   22b24:	b.cs	25358 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a34>  // b.hs, b.nlast
   22b28:	ldr	x9, [x20]
   22b2c:	str	w19, [x9, w8, uxtw #2]
   22b30:	ldp	w8, w9, [x20, #8]
   22b34:	cmp	w8, w9
   22b38:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22b3c:	add	w8, w8, #0x1
   22b40:	str	w8, [x20, #8]
   22b44:	ldr	w9, [x21, #20]
   22b48:	and	x8, x9, #0xfffffff
   22b4c:	cmp	w8, #0x2
   22b50:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   22b54:	tbnz	w9, #30, 22b68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3244>
   22b58:	mov	w9, #0x18                  	// #24
   22b5c:	mneg	x8, x8, x9
   22b60:	add	x8, x21, x8
   22b64:	b	22b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3248>
   22b68:	ldur	x8, [x21, #-8]
   22b6c:	ldr	x21, [x8, #48]
   22b70:	mov	x0, x22
   22b74:	mov	x1, x21
   22b78:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22b7c:	ldp	w8, w9, [x20, #8]
   22b80:	mov	w22, w0
   22b84:	sub	w19, w23, w0
   22b88:	cmp	w8, w9
   22b8c:	b.cs	25374 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a50>  // b.hs, b.nlast
   22b90:	ldr	x9, [x20]
   22b94:	str	w19, [x9, w8, uxtw #2]
   22b98:	ldp	w8, w9, [x20, #8]
   22b9c:	cmp	w8, w9
   22ba0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22ba4:	add	w8, w8, #0x1
   22ba8:	cmp	w22, w23
   22bac:	str	w8, [x20, #8]
   22bb0:	b.cs	22bc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x329c>  // b.hs, b.nlast
   22bb4:	mov	w25, wzr
   22bb8:	mov	w24, #0x7                   	// #7
   22bbc:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   22bc0:	ldr	x11, [sp, #24]
   22bc4:	ldr	w10, [x11, #72]
   22bc8:	ldr	x11, [x11, #56]
   22bcc:	cbz	w10, 230f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37cc>
   22bd0:	ldr	x12, [x21]
   22bd4:	orr	x13, x12, #0x8
   22bd8:	cmn	x13, #0x8
   22bdc:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   22be0:	ubfx	x13, x12, #4, #28
   22be4:	eor	w14, w13, w12, lsr #9
   22be8:	sub	w13, w10, #0x1
   22bec:	and	w14, w14, w13
   22bf0:	add	x15, x11, w14, uxtw #4
   22bf4:	ldr	x16, [x15]
   22bf8:	cmp	x16, x12
   22bfc:	b.eq	230f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37d0>  // b.none
   22c00:	mov	w17, #0x1                   	// #1
   22c04:	cmn	x16, #0x8
   22c08:	b.eq	230f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37cc>  // b.none
   22c0c:	add	w14, w14, w17
   22c10:	and	w14, w14, w13
   22c14:	add	x15, x11, w14, uxtw #4
   22c18:	ldr	x16, [x15]
   22c1c:	add	w17, w17, #0x1
   22c20:	cmp	x16, x12
   22c24:	b.eq	230f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37d0>  // b.none
   22c28:	b	22c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x32e0>
   22c2c:	add	x15, x11, x10, lsl #4
   22c30:	add	x10, x11, x10, lsl #4
   22c34:	cmp	x15, x10
   22c38:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   22c3c:	ldr	w10, [x15, #8]
   22c40:	cmp	w8, w9
   22c44:	sub	w19, w10, #0x1
   22c48:	b.cs	258b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f90>  // b.hs, b.nlast
   22c4c:	ldr	x9, [x20]
   22c50:	str	w19, [x9, w8, uxtw #2]
   22c54:	ldp	w8, w9, [x20, #8]
   22c58:	cmp	w8, w9
   22c5c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22c60:	mov	w25, wzr
   22c64:	add	w8, w8, #0x1
   22c68:	str	w8, [x20, #8]
   22c6c:	ldrb	w10, [x27]
   22c70:	cmp	w10, #0x24
   22c74:	b.ne	2604c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6728>  // b.any
   22c78:	cmp	w8, w9
   22c7c:	b.cs	25390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a6c>  // b.hs, b.nlast
   22c80:	ldr	x9, [x20]
   22c84:	str	wzr, [x9, w8, uxtw #2]
   22c88:	ldp	w8, w9, [x20, #8]
   22c8c:	cmp	w8, w9
   22c90:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22c94:	add	w8, w8, #0x1
   22c98:	mov	x0, x21
   22c9c:	str	w8, [x20, #8]
   22ca0:	bl	148f8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   22ca4:	cbz	x0, 22ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33bc>
   22ca8:	ldp	w8, w9, [x20, #8]
   22cac:	cmp	w25, #0x5
   22cb0:	mov	w10, #0x6                   	// #6
   22cb4:	mov	x21, x0
   22cb8:	csel	w25, w10, w25, eq  // eq = none
   22cbc:	cmp	w8, w9
   22cc0:	b.cs	256d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5db4>  // b.hs, b.nlast
   22cc4:	ldr	x9, [x20]
   22cc8:	str	w21, [x9, w8, uxtw #2]
   22ccc:	ldp	w8, w9, [x20, #8]
   22cd0:	cmp	w8, w9
   22cd4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22cd8:	add	w8, w8, #0x1
   22cdc:	str	w8, [x20, #8]
   22ce0:	mov	w24, #0x38                  	// #56
   22ce4:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   22ce8:	add	x15, x11, x10, lsl #4
   22cec:	add	x10, x11, x10, lsl #4
   22cf0:	cmp	x15, x10
   22cf4:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   22cf8:	ldr	w10, [x15, #8]
   22cfc:	cmp	w8, w9
   22d00:	sub	w19, w10, #0x1
   22d04:	b.cs	258d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5fac>  // b.hs, b.nlast
   22d08:	ldr	x9, [x20]
   22d0c:	str	w19, [x9, w8, uxtw #2]
   22d10:	ldp	w8, w9, [x20, #8]
   22d14:	cmp	w8, w9
   22d18:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22d1c:	add	w8, w8, #0x1
   22d20:	str	w8, [x20, #8]
   22d24:	ldr	w9, [x21, #20]
   22d28:	and	x8, x9, #0xfffffff
   22d2c:	cmp	w8, #0x1
   22d30:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   22d34:	tbnz	w9, #30, 22d48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3424>
   22d38:	mov	w9, #0x18                  	// #24
   22d3c:	mneg	x8, x8, x9
   22d40:	add	x8, x21, x8
   22d44:	b	22d4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3428>
   22d48:	ldur	x8, [x21, #-8]
   22d4c:	ldr	x1, [x8, #24]
   22d50:	mov	x0, x22
   22d54:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22d58:	ldp	w8, w9, [x20, #8]
   22d5c:	sub	w19, w23, w0
   22d60:	cmp	w8, w9
   22d64:	b.cs	253ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a88>  // b.hs, b.nlast
   22d68:	ldr	x9, [x20]
   22d6c:	str	w19, [x9, w8, uxtw #2]
   22d70:	ldp	w8, w9, [x20, #8]
   22d74:	cmp	w8, w9
   22d78:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22d7c:	add	w8, w8, #0x1
   22d80:	str	w8, [x20, #8]
   22d84:	ldr	w9, [x21, #20]
   22d88:	and	x8, x9, #0xfffffff
   22d8c:	cmp	w8, #0x2
   22d90:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   22d94:	tbnz	w9, #30, 22da8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3484>
   22d98:	mov	w9, #0x18                  	// #24
   22d9c:	mneg	x8, x8, x9
   22da0:	add	x8, x21, x8
   22da4:	b	22dac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3488>
   22da8:	ldur	x8, [x21, #-8]
   22dac:	ldr	x1, [x8, #48]
   22db0:	mov	x0, x22
   22db4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22db8:	ldp	w8, w9, [x20, #8]
   22dbc:	sub	w19, w23, w0
   22dc0:	cmp	w8, w9
   22dc4:	b.cs	253c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5aa4>  // b.hs, b.nlast
   22dc8:	ldr	x9, [x20]
   22dcc:	str	w19, [x9, w8, uxtw #2]
   22dd0:	ldp	w8, w9, [x20, #8]
   22dd4:	cmp	w8, w9
   22dd8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22ddc:	add	w8, w8, #0x1
   22de0:	mov	w25, wzr
   22de4:	str	w8, [x20, #8]
   22de8:	mov	w24, #0x8                   	// #8
   22dec:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   22df0:	add	x15, x11, x10, lsl #4
   22df4:	add	x10, x11, x10, lsl #4
   22df8:	cmp	x15, x10
   22dfc:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   22e00:	ldr	w10, [x15, #8]
   22e04:	cmp	w8, w9
   22e08:	sub	w19, w10, #0x1
   22e0c:	b.cs	258ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5fc8>  // b.hs, b.nlast
   22e10:	ldr	x9, [x20]
   22e14:	str	w19, [x9, w8, uxtw #2]
   22e18:	ldp	w8, w9, [x20, #8]
   22e1c:	cmp	w8, w9
   22e20:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22e24:	add	w8, w8, #0x1
   22e28:	str	w8, [x20, #8]
   22e2c:	ldr	w9, [x21, #20]
   22e30:	and	x8, x9, #0xfffffff
   22e34:	cmp	w8, #0x1
   22e38:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   22e3c:	tbnz	w9, #30, 22e50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x352c>
   22e40:	mov	w9, #0x18                  	// #24
   22e44:	mneg	x8, x8, x9
   22e48:	add	x8, x21, x8
   22e4c:	b	22e54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3530>
   22e50:	ldur	x8, [x21, #-8]
   22e54:	ldr	x24, [x8, #24]
   22e58:	mov	x0, x22
   22e5c:	mov	x1, x24
   22e60:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22e64:	ldp	w8, w9, [x20, #8]
   22e68:	mov	w22, w0
   22e6c:	sub	w19, w23, w0
   22e70:	cmp	w8, w9
   22e74:	b.cs	253e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ac0>  // b.hs, b.nlast
   22e78:	ldr	x9, [x20]
   22e7c:	str	w19, [x9, w8, uxtw #2]
   22e80:	ldp	w9, w8, [x20, #8]
   22e84:	cmp	w9, w8
   22e88:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22e8c:	add	w9, w9, #0x1
   22e90:	cmp	w22, w23
   22e94:	str	w9, [x20, #8]
   22e98:	b.cc	23174 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3850>  // b.lo, b.ul, b.last
   22e9c:	ldr	x11, [sp, #24]
   22ea0:	ldr	w10, [x11, #72]
   22ea4:	ldr	x11, [x11, #56]
   22ea8:	cbz	w10, 23138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3814>
   22eac:	ldr	x12, [x24]
   22eb0:	orr	x13, x12, #0x8
   22eb4:	cmn	x13, #0x8
   22eb8:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   22ebc:	ubfx	x13, x12, #4, #28
   22ec0:	eor	w14, w13, w12, lsr #9
   22ec4:	sub	w13, w10, #0x1
   22ec8:	and	w14, w14, w13
   22ecc:	add	x15, x11, w14, uxtw #4
   22ed0:	ldr	x16, [x15]
   22ed4:	cmp	x16, x12
   22ed8:	b.eq	2313c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3818>  // b.none
   22edc:	mov	w17, #0x1                   	// #1
   22ee0:	cmn	x16, #0x8
   22ee4:	b.eq	23138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3814>  // b.none
   22ee8:	add	w14, w14, w17
   22eec:	and	w14, w14, w13
   22ef0:	add	x15, x11, w14, uxtw #4
   22ef4:	ldr	x16, [x15]
   22ef8:	add	w17, w17, #0x1
   22efc:	cmp	x16, x12
   22f00:	b.eq	2313c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3818>  // b.none
   22f04:	b	22ee0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35bc>
   22f08:	add	x15, x11, x10, lsl #4
   22f0c:	add	x10, x11, x10, lsl #4
   22f10:	cmp	x15, x10
   22f14:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   22f18:	ldr	w10, [x15, #8]
   22f1c:	cmp	w8, w9
   22f20:	sub	w19, w10, #0x1
   22f24:	b.cs	25908 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5fe4>  // b.hs, b.nlast
   22f28:	ldr	x9, [x20]
   22f2c:	str	w19, [x9, w8, uxtw #2]
   22f30:	ldp	w8, w9, [x20, #8]
   22f34:	cmp	w8, w9
   22f38:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22f3c:	add	w8, w8, #0x1
   22f40:	str	w8, [x20, #8]
   22f44:	ldr	w9, [x21, #20]
   22f48:	and	x8, x9, #0xfffffff
   22f4c:	cbz	w8, 25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   22f50:	tbnz	w9, #30, 22f64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3640>
   22f54:	mov	w9, #0x18                  	// #24
   22f58:	mneg	x8, x8, x9
   22f5c:	add	x8, x21, x8
   22f60:	b	22f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3644>
   22f64:	ldur	x8, [x21, #-8]
   22f68:	ldr	x25, [x8]
   22f6c:	mov	x0, x22
   22f70:	mov	x1, x25
   22f74:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22f78:	ldp	w8, w9, [x20, #8]
   22f7c:	mov	w22, w0
   22f80:	sub	w19, w23, w0
   22f84:	cmp	w8, w9
   22f88:	b.cs	25400 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5adc>  // b.hs, b.nlast
   22f8c:	ldr	x9, [x20]
   22f90:	str	w19, [x9, w8, uxtw #2]
   22f94:	ldp	w8, w9, [x20, #8]
   22f98:	cmp	w8, w9
   22f9c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   22fa0:	add	w8, w8, #0x1
   22fa4:	cmp	w22, w23
   22fa8:	str	w8, [x20, #8]
   22fac:	b.cc	233f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ad0>  // b.lo, b.ul, b.last
   22fb0:	ldr	x11, [sp, #24]
   22fb4:	ldr	w10, [x11, #72]
   22fb8:	ldr	x11, [x11, #56]
   22fbc:	cbz	w10, 233b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a94>
   22fc0:	ldr	x12, [x25]
   22fc4:	orr	x13, x12, #0x8
   22fc8:	cmn	x13, #0x8
   22fcc:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   22fd0:	ubfx	x13, x12, #4, #28
   22fd4:	eor	w14, w13, w12, lsr #9
   22fd8:	sub	w13, w10, #0x1
   22fdc:	and	w14, w14, w13
   22fe0:	add	x15, x11, w14, uxtw #4
   22fe4:	ldr	x16, [x15]
   22fe8:	cmp	x16, x12
   22fec:	b.eq	233bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a98>  // b.none
   22ff0:	mov	w17, #0x1                   	// #1
   22ff4:	cmn	x16, #0x8
   22ff8:	b.eq	233b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a94>  // b.none
   22ffc:	add	w14, w14, w17
   23000:	and	w14, w14, w13
   23004:	add	x15, x11, w14, uxtw #4
   23008:	ldr	x16, [x15]
   2300c:	add	w17, w17, #0x1
   23010:	cmp	x16, x12
   23014:	b.eq	233bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a98>  // b.none
   23018:	b	22ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36d0>
   2301c:	add	x15, x11, x10, lsl #4
   23020:	add	x10, x11, x10, lsl #4
   23024:	cmp	x15, x10
   23028:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   2302c:	ldr	w10, [x15, #8]
   23030:	cmp	w8, w9
   23034:	sub	w19, w10, #0x1
   23038:	b.cs	25924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6000>  // b.hs, b.nlast
   2303c:	ldr	x9, [x20]
   23040:	str	w19, [x9, w8, uxtw #2]
   23044:	ldp	w8, w9, [x20, #8]
   23048:	cmp	w8, w9
   2304c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23050:	add	w8, w8, #0x1
   23054:	mov	w25, wzr
   23058:	str	w8, [x20, #8]
   2305c:	mov	w24, #0x27                  	// #39
   23060:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   23064:	add	x15, x11, x10, lsl #4
   23068:	add	x10, x11, x10, lsl #4
   2306c:	cmp	x15, x10
   23070:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   23074:	ldr	w10, [x15, #8]
   23078:	cmp	w8, w9
   2307c:	sub	w19, w10, #0x1
   23080:	b.cs	25940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x601c>  // b.hs, b.nlast
   23084:	ldr	x9, [x20]
   23088:	str	w19, [x9, w8, uxtw #2]
   2308c:	ldp	w8, w9, [x20, #8]
   23090:	cmp	w8, w9
   23094:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23098:	add	w8, w8, #0x1
   2309c:	str	w8, [x20, #8]
   230a0:	mov	x0, x21
   230a4:	bl	148f8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   230a8:	cbz	x0, 230e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37c0>
   230ac:	ldp	w8, w9, [x20, #8]
   230b0:	mov	x21, x0
   230b4:	cmp	w8, w9
   230b8:	b.cs	256f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5dd0>  // b.hs, b.nlast
   230bc:	ldr	x9, [x20]
   230c0:	str	w21, [x9, w8, uxtw #2]
   230c4:	ldp	w8, w9, [x20, #8]
   230c8:	cmp	w8, w9
   230cc:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   230d0:	add	w8, w8, #0x1
   230d4:	mov	w25, wzr
   230d8:	str	w8, [x20, #8]
   230dc:	mov	w24, #0x1d                  	// #29
   230e0:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   230e4:	mov	w25, wzr
   230e8:	mov	w24, #0x1d                  	// #29
   230ec:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   230f0:	add	x15, x11, x10, lsl #4
   230f4:	add	x10, x11, x10, lsl #4
   230f8:	cmp	x15, x10
   230fc:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   23100:	ldr	w10, [x15, #8]
   23104:	cmp	w8, w9
   23108:	sub	w19, w10, #0x1
   2310c:	b.cs	2595c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6038>  // b.hs, b.nlast
   23110:	ldr	x9, [x20]
   23114:	str	w19, [x9, w8, uxtw #2]
   23118:	ldp	w8, w9, [x20, #8]
   2311c:	cmp	w8, w9
   23120:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23124:	add	w8, w8, #0x1
   23128:	mov	w25, wzr
   2312c:	str	w8, [x20, #8]
   23130:	mov	w24, #0x7                   	// #7
   23134:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   23138:	add	x15, x11, x10, lsl #4
   2313c:	add	x10, x11, x10, lsl #4
   23140:	cmp	x15, x10
   23144:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   23148:	ldr	w10, [x15, #8]
   2314c:	cmp	w9, w8
   23150:	sub	w19, w10, #0x1
   23154:	b.cs	25978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6054>  // b.hs, b.nlast
   23158:	ldr	x8, [x20]
   2315c:	str	w19, [x8, w9, uxtw #2]
   23160:	ldp	w9, w8, [x20, #8]
   23164:	cmp	w9, w8
   23168:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2316c:	add	w9, w9, #0x1
   23170:	str	w9, [x20, #8]
   23174:	ldrb	w10, [x27]
   23178:	cmp	w10, #0x59
   2317c:	b.ne	26064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6740>  // b.any
   23180:	ldr	w19, [x21, #64]
   23184:	ldr	x22, [x21, #56]
   23188:	mov	w10, w8
   2318c:	mov	w8, w9
   23190:	sub	x9, x10, x8
   23194:	cmp	x9, x19
   23198:	b.cs	231b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x388c>  // b.hs, b.nlast
   2319c:	add	x2, x19, x8
   231a0:	add	x1, x20, #0x10
   231a4:	mov	w3, #0x4                   	// #4
   231a8:	mov	x0, x20
   231ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   231b0:	cbz	w19, 231cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38a8>
   231b4:	ldr	x8, [x20]
   231b8:	ldr	w9, [x20, #8]
   231bc:	lsl	x2, x19, #2
   231c0:	mov	x1, x22
   231c4:	add	x0, x8, x9, lsl #2
   231c8:	bl	0 <memcpy>
   231cc:	ldp	w8, w9, [x20, #8]
   231d0:	add	x8, x8, x19
   231d4:	cmp	x8, x9
   231d8:	b.hi	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.pmore
   231dc:	mov	w25, wzr
   231e0:	str	w8, [x20, #8]
   231e4:	mov	w24, #0x1b                  	// #27
   231e8:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   231ec:	add	x15, x11, x10, lsl #4
   231f0:	add	x10, x11, x10, lsl #4
   231f4:	cmp	x15, x10
   231f8:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   231fc:	ldr	w10, [x15, #8]
   23200:	cmp	w9, w8
   23204:	sub	w19, w10, #0x1
   23208:	b.cs	25994 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6070>  // b.hs, b.nlast
   2320c:	ldr	x8, [x20]
   23210:	str	w19, [x8, w9, uxtw #2]
   23214:	ldp	w9, w8, [x20, #8]
   23218:	cmp	w9, w8
   2321c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23220:	add	w9, w9, #0x1
   23224:	str	w9, [x20, #8]
   23228:	ldrb	w10, [x27]
   2322c:	cmp	w10, #0x58
   23230:	b.ne	26084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6760>  // b.any
   23234:	ldr	w19, [x21, #64]
   23238:	ldr	x22, [x21, #56]
   2323c:	mov	w10, w8
   23240:	mov	w8, w9
   23244:	sub	x9, x10, x8
   23248:	cmp	x9, x19
   2324c:	b.cs	23264 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3940>  // b.hs, b.nlast
   23250:	add	x2, x19, x8
   23254:	add	x1, x20, #0x10
   23258:	mov	w3, #0x4                   	// #4
   2325c:	mov	x0, x20
   23260:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23264:	cbz	w19, 23280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x395c>
   23268:	ldr	x8, [x20]
   2326c:	ldr	w9, [x20, #8]
   23270:	lsl	x2, x19, #2
   23274:	mov	x1, x22
   23278:	add	x0, x8, x9, lsl #2
   2327c:	bl	0 <memcpy>
   23280:	ldp	w8, w9, [x20, #8]
   23284:	add	x8, x8, x19
   23288:	cmp	x8, x9
   2328c:	b.hi	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.pmore
   23290:	mov	w25, wzr
   23294:	str	w8, [x20, #8]
   23298:	mov	w24, #0x1a                  	// #26
   2329c:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   232a0:	add	x15, x11, x10, lsl #4
   232a4:	add	x10, x11, x10, lsl #4
   232a8:	cmp	x15, x10
   232ac:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   232b0:	ldr	w10, [x15, #8]
   232b4:	cmp	w8, w9
   232b8:	sub	w19, w10, #0x1
   232bc:	b.cs	259b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x608c>  // b.hs, b.nlast
   232c0:	ldr	x9, [x20]
   232c4:	str	w19, [x9, w8, uxtw #2]
   232c8:	ldp	w8, w9, [x20, #8]
   232cc:	cmp	w8, w9
   232d0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   232d4:	add	w8, w8, #0x1
   232d8:	str	w8, [x20, #8]
   232dc:	ldr	w9, [x21, #20]
   232e0:	and	x8, x9, #0xfffffff
   232e4:	cmp	w8, #0x1
   232e8:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   232ec:	tbnz	w9, #30, 23300 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x39dc>
   232f0:	mov	w9, #0x18                  	// #24
   232f4:	mneg	x8, x8, x9
   232f8:	add	x8, x21, x8
   232fc:	b	23304 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x39e0>
   23300:	ldur	x8, [x21, #-8]
   23304:	ldr	x24, [x8, #24]
   23308:	mov	x0, x22
   2330c:	mov	x1, x24
   23310:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   23314:	ldp	w8, w9, [x20, #8]
   23318:	mov	w25, w0
   2331c:	sub	w19, w23, w0
   23320:	cmp	w8, w9
   23324:	b.cs	2541c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5af8>  // b.hs, b.nlast
   23328:	ldr	x9, [x20]
   2332c:	str	w19, [x9, w8, uxtw #2]
   23330:	ldp	w8, w9, [x20, #8]
   23334:	cmp	w8, w9
   23338:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2333c:	add	w8, w8, #0x1
   23340:	cmp	w25, w23
   23344:	str	w8, [x20, #8]
   23348:	b.cc	23580 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c5c>  // b.lo, b.ul, b.last
   2334c:	ldr	x11, [sp, #24]
   23350:	ldr	w10, [x11, #72]
   23354:	ldr	x11, [x11, #56]
   23358:	cbz	w10, 23544 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c20>
   2335c:	ldr	x12, [x24]
   23360:	orr	x13, x12, #0x8
   23364:	cmn	x13, #0x8
   23368:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   2336c:	ubfx	x13, x12, #4, #28
   23370:	eor	w14, w13, w12, lsr #9
   23374:	sub	w13, w10, #0x1
   23378:	and	w14, w14, w13
   2337c:	add	x15, x11, w14, uxtw #4
   23380:	ldr	x16, [x15]
   23384:	cmp	x16, x12
   23388:	b.eq	23548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c24>  // b.none
   2338c:	mov	w17, #0x1                   	// #1
   23390:	cmn	x16, #0x8
   23394:	b.eq	23544 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c20>  // b.none
   23398:	add	w14, w14, w17
   2339c:	and	w14, w14, w13
   233a0:	add	x15, x11, w14, uxtw #4
   233a4:	ldr	x16, [x15]
   233a8:	add	w17, w17, #0x1
   233ac:	cmp	x16, x12
   233b0:	b.eq	23548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c24>  // b.none
   233b4:	b	23390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a6c>
   233b8:	add	x15, x11, x10, lsl #4
   233bc:	add	x10, x11, x10, lsl #4
   233c0:	cmp	x15, x10
   233c4:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   233c8:	ldr	w10, [x15, #8]
   233cc:	cmp	w8, w9
   233d0:	sub	w19, w10, #0x1
   233d4:	b.cs	259cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x60a8>  // b.hs, b.nlast
   233d8:	ldr	x9, [x20]
   233dc:	str	w19, [x9, w8, uxtw #2]
   233e0:	ldp	w8, w9, [x20, #8]
   233e4:	cmp	w8, w9
   233e8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   233ec:	add	w8, w8, #0x1
   233f0:	str	w8, [x20, #8]
   233f4:	ldrb	w10, [x27]
   233f8:	cmp	w10, #0x39
   233fc:	b.ne	25e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6558>  // b.any
   23400:	ldrh	w10, [x21, #18]
   23404:	mov	w11, #0x1f                  	// #31
   23408:	mov	w12, #0x1                   	// #1
   2340c:	mov	w13, #0x20                  	// #32
   23410:	ubfx	w14, w10, #1, #5
   23414:	tst	w11, w10, lsr #1
   23418:	add	w10, w14, #0xff
   2341c:	orr	w10, w10, #0x100
   23420:	csel	w10, wzr, w10, eq  // eq = none
   23424:	lsl	w11, w10, #23
   23428:	lsl	x10, x12, x10
   2342c:	and	w10, w10, w11, asr #31
   23430:	clz	w10, w10
   23434:	cmp	w8, w9
   23438:	sub	w19, w13, w10
   2343c:	b.cs	25438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b14>  // b.hs, b.nlast
   23440:	ldr	x9, [x20]
   23444:	str	w19, [x9, w8, uxtw #2]
   23448:	ldp	w8, w9, [x20, #8]
   2344c:	cmp	w8, w9
   23450:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23454:	add	w8, w8, #0x1
   23458:	str	w8, [x20, #8]
   2345c:	ldrb	w10, [x27]
   23460:	cmp	w10, #0x39
   23464:	b.ne	25e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6558>  // b.any
   23468:	ldrh	w10, [x21, #18]
   2346c:	cmp	w8, w9
   23470:	and	w19, w10, #0x1
   23474:	b.cs	25454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b30>  // b.hs, b.nlast
   23478:	ldr	x9, [x20]
   2347c:	str	w19, [x9, w8, uxtw #2]
   23480:	ldp	w8, w9, [x20, #8]
   23484:	cmp	w8, w9
   23488:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2348c:	add	w8, w8, #0x1
   23490:	str	w8, [x20, #8]
   23494:	ldrb	w8, [x27]
   23498:	cmp	w8, #0x39
   2349c:	b.ne	25e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6558>  // b.any
   234a0:	mov	x0, x21
   234a4:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
   234a8:	tbz	w0, #0, 2353c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c18>
   234ac:	ldrb	w8, [x27]
   234b0:	cmp	w8, #0x39
   234b4:	b.ne	25e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6558>  // b.any
   234b8:	ldrh	w8, [x21, #18]
   234bc:	ubfx	x9, x8, #7, #3
   234c0:	mov	w8, #0xf7                  	// #247
   234c4:	lsr	w8, w8, w9
   234c8:	tbz	w8, #0, 25dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a0>
   234cc:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   234d0:	ldp	w8, w10, [x20, #8]
   234d4:	add	x11, x11, #0x0
   234d8:	ldr	w19, [x11, x9, lsl #2]
   234dc:	cmp	w8, w10
   234e0:	b.cs	259e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x60c4>  // b.hs, b.nlast
   234e4:	ldr	x9, [x20]
   234e8:	str	w19, [x9, w8, uxtw #2]
   234ec:	ldp	w8, w9, [x20, #8]
   234f0:	cmp	w8, w9
   234f4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   234f8:	add	w8, w8, #0x1
   234fc:	str	w8, [x20, #8]
   23500:	ldrb	w10, [x27]
   23504:	cmp	w10, #0x39
   23508:	b.ne	25e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6558>  // b.any
   2350c:	ldrb	w19, [x21, #56]
   23510:	cmp	w8, w9
   23514:	b.cs	25a04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x60e0>  // b.hs, b.nlast
   23518:	ldr	x9, [x20]
   2351c:	str	w19, [x9, w8, uxtw #2]
   23520:	ldp	w8, w9, [x20, #8]
   23524:	cmp	w8, w9
   23528:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2352c:	mov	w25, wzr
   23530:	add	w8, w8, #0x1
   23534:	str	w8, [x20, #8]
   23538:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   2353c:	mov	w25, wzr
   23540:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   23544:	add	x15, x11, x10, lsl #4
   23548:	add	x10, x11, x10, lsl #4
   2354c:	cmp	x15, x10
   23550:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   23554:	ldr	w10, [x15, #8]
   23558:	cmp	w8, w9
   2355c:	sub	w19, w10, #0x1
   23560:	b.cs	25a20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x60fc>  // b.hs, b.nlast
   23564:	ldr	x9, [x20]
   23568:	str	w19, [x9, w8, uxtw #2]
   2356c:	ldp	w8, w9, [x20, #8]
   23570:	cmp	w8, w9
   23574:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23578:	add	w8, w8, #0x1
   2357c:	str	w8, [x20, #8]
   23580:	ldr	w9, [x21, #20]
   23584:	and	x8, x9, #0xfffffff
   23588:	cmp	w8, #0x2
   2358c:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   23590:	tbnz	w9, #30, 235a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c80>
   23594:	mov	w9, #0x18                  	// #24
   23598:	mneg	x8, x8, x9
   2359c:	add	x8, x21, x8
   235a0:	b	235a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c84>
   235a4:	ldur	x8, [x21, #-8]
   235a8:	ldr	x1, [x8, #48]
   235ac:	mov	x0, x22
   235b0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   235b4:	ldp	w8, w9, [x20, #8]
   235b8:	sub	w19, w23, w0
   235bc:	cmp	w8, w9
   235c0:	b.cs	25470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b4c>  // b.hs, b.nlast
   235c4:	ldr	x9, [x20]
   235c8:	str	w19, [x9, w8, uxtw #2]
   235cc:	ldp	w8, w9, [x20, #8]
   235d0:	cmp	w8, w9
   235d4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   235d8:	add	w8, w8, #0x1
   235dc:	str	w8, [x20, #8]
   235e0:	ldrb	w10, [x27]
   235e4:	cmp	w10, #0x3c
   235e8:	b.ne	25ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64b8>  // b.any
   235ec:	ldrh	w10, [x21, #18]
   235f0:	cmp	w8, w9
   235f4:	and	w19, w10, #0x1
   235f8:	b.cs	2548c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b68>  // b.hs, b.nlast
   235fc:	ldr	x9, [x20]
   23600:	str	w19, [x9, w8, uxtw #2]
   23604:	ldp	w8, w9, [x20, #8]
   23608:	cmp	w8, w9
   2360c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23610:	add	w8, w8, #0x1
   23614:	str	w8, [x20, #8]
   23618:	ldrb	w10, [x27]
   2361c:	cmp	w10, #0x3c
   23620:	b.ne	25ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64b8>  // b.any
   23624:	ldrh	w10, [x21, #18]
   23628:	mov	w11, #0xf7                  	// #247
   2362c:	ubfx	x10, x10, #2, #3
   23630:	lsr	w11, w11, w10
   23634:	tbz	w11, #0, 25dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a0>
   23638:	adrp	x19, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2363c:	add	x19, x19, #0x0
   23640:	ldr	w22, [x19, x10, lsl #2]
   23644:	cmp	w8, w9
   23648:	b.cs	254a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b84>  // b.hs, b.nlast
   2364c:	ldr	x9, [x20]
   23650:	str	w22, [x9, w8, uxtw #2]
   23654:	ldp	w8, w9, [x20, #8]
   23658:	cmp	w8, w9
   2365c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23660:	add	w8, w8, #0x1
   23664:	str	w8, [x20, #8]
   23668:	ldrb	w10, [x27]
   2366c:	cmp	w10, #0x3c
   23670:	b.ne	25ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64b8>  // b.any
   23674:	ldrb	w22, [x21, #56]
   23678:	cmp	w8, w9
   2367c:	b.cs	254c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ba0>  // b.hs, b.nlast
   23680:	ldr	x9, [x20]
   23684:	str	w22, [x9, w8, uxtw #2]
   23688:	ldp	w8, w9, [x20, #8]
   2368c:	cmp	w8, w9
   23690:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23694:	add	w8, w8, #0x1
   23698:	str	w8, [x20, #8]
   2369c:	ldrb	w10, [x27]
   236a0:	cmp	w10, #0x3c
   236a4:	b.ne	25ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64b8>  // b.any
   236a8:	ldrh	w10, [x21, #18]
   236ac:	mov	w11, #0xf7                  	// #247
   236b0:	ubfx	x10, x10, #5, #3
   236b4:	lsr	w11, w11, w10
   236b8:	tbz	w11, #0, 25dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a0>
   236bc:	ldr	w19, [x19, x10, lsl #2]
   236c0:	cmp	w8, w9
   236c4:	b.cs	254e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5bbc>  // b.hs, b.nlast
   236c8:	ldr	x9, [x20]
   236cc:	str	w19, [x9, w8, uxtw #2]
   236d0:	ldp	w8, w9, [x20, #8]
   236d4:	cmp	w8, w9
   236d8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   236dc:	add	w8, w8, #0x1
   236e0:	str	w8, [x20, #8]
   236e4:	ldrb	w10, [x27]
   236e8:	cmp	w10, #0x3c
   236ec:	b.ne	25ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64b8>  // b.any
   236f0:	ldrh	w10, [x21, #18]
   236f4:	cmp	w8, w9
   236f8:	ubfx	w19, w10, #8, #1
   236fc:	b.cs	254fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5bd8>  // b.hs, b.nlast
   23700:	ldr	x9, [x20]
   23704:	str	w19, [x9, w8, uxtw #2]
   23708:	ldp	w8, w9, [x20, #8]
   2370c:	cmp	w8, w9
   23710:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23714:	add	w8, w8, #0x1
   23718:	mov	w25, wzr
   2371c:	str	w8, [x20, #8]
   23720:	mov	w24, #0x2e                  	// #46
   23724:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   23728:	ldur	x8, [x21, #-8]
   2372c:	ldr	x21, [x8]
   23730:	mov	x1, x21
   23734:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   23738:	ldp	w8, w9, [x20, #8]
   2373c:	mov	w22, w0
   23740:	sub	w19, w23, w0
   23744:	cmp	w8, w9
   23748:	b.cs	25b38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6214>  // b.hs, b.nlast
   2374c:	ldr	x9, [x20]
   23750:	str	w19, [x9, w8, uxtw #2]
   23754:	ldp	w8, w9, [x20, #8]
   23758:	cmp	w8, w9
   2375c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23760:	add	w8, w8, #0x1
   23764:	cmp	w22, w23
   23768:	str	w8, [x20, #8]
   2376c:	b.cs	2377c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e58>  // b.hs, b.nlast
   23770:	mov	w24, #0xa                   	// #10
   23774:	mov	w25, #0xb                   	// #11
   23778:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   2377c:	ldr	x11, [sp, #24]
   23780:	ldr	w10, [x11, #72]
   23784:	ldr	x11, [x11, #56]
   23788:	cbz	w10, 24cb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5394>
   2378c:	ldr	x12, [x21]
   23790:	orr	x13, x12, #0x8
   23794:	cmn	x13, #0x8
   23798:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   2379c:	ubfx	x13, x12, #4, #28
   237a0:	eor	w14, w13, w12, lsr #9
   237a4:	sub	w13, w10, #0x1
   237a8:	and	w14, w14, w13
   237ac:	add	x15, x11, w14, uxtw #4
   237b0:	ldr	x16, [x15]
   237b4:	cmp	x16, x12
   237b8:	b.eq	24cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5398>  // b.none
   237bc:	mov	w17, #0x1                   	// #1
   237c0:	cmn	x16, #0x8
   237c4:	b.eq	24cb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5394>  // b.none
   237c8:	add	w14, w14, w17
   237cc:	and	w14, w14, w13
   237d0:	add	x15, x11, w14, uxtw #4
   237d4:	ldr	x16, [x15]
   237d8:	add	w17, w17, #0x1
   237dc:	cmp	x16, x12
   237e0:	b.eq	24cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5398>  // b.none
   237e4:	b	237c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e9c>
   237e8:	mov	x0, x21
   237ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   237f0:	add	x8, x0, x1
   237f4:	sub	x8, x8, x25
   237f8:	lsr	x8, x8, #4
   237fc:	cbz	w8, 2381c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ef8>
   23800:	tst	x21, #0x7
   23804:	b.ne	25edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65b8>  // b.any
   23808:	ldr	x0, [sp, #24]
   2380c:	and	x8, x21, #0xfffffffffffffff9
   23810:	orr	x1, x8, #0x4
   23814:	mov	w2, w23
   23818:	bl	26134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>
   2381c:	ldr	x10, [x21, #56]
   23820:	cbz	x10, 2388c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f68>
   23824:	ldr	x9, [sp, #24]
   23828:	ldr	w8, [x9, #432]
   2382c:	ldr	x9, [x9, #416]
   23830:	cbz	w8, 23894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f70>
   23834:	orr	x11, x10, #0x4
   23838:	cmn	x11, #0x4
   2383c:	b.eq	25e9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6578>  // b.none
   23840:	ubfx	x11, x10, #4, #28
   23844:	eor	w12, w11, w10, lsr #9
   23848:	sub	w11, w8, #0x1
   2384c:	and	w12, w11, w12
   23850:	add	x13, x9, w12, uxtw #4
   23854:	ldr	x14, [x13]
   23858:	cmp	x14, x10
   2385c:	b.eq	23898 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f74>  // b.none
   23860:	mov	w15, #0x1                   	// #1
   23864:	cmn	x14, #0x4
   23868:	b.eq	23894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f70>  // b.none
   2386c:	add	w12, w12, w15
   23870:	and	w12, w12, w11
   23874:	add	x13, x9, w12, uxtw #4
   23878:	ldr	x14, [x13]
   2387c:	add	w15, w15, #0x1
   23880:	cmp	x14, x10
   23884:	b.eq	23898 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f74>  // b.none
   23888:	b	23864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f40>
   2388c:	mov	w19, wzr
   23890:	b	238a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f84>
   23894:	add	x13, x9, x8, lsl #4
   23898:	add	x8, x9, x8, lsl #4
   2389c:	cmp	x13, x8
   238a0:	b.eq	25efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65d8>  // b.none
   238a4:	ldr	w19, [x13, #8]
   238a8:	ldp	w8, w9, [x20, #8]
   238ac:	cmp	w8, w9
   238b0:	b.cs	25518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5bf4>  // b.hs, b.nlast
   238b4:	ldr	x9, [x20]
   238b8:	str	w19, [x9, w8, uxtw #2]
   238bc:	ldp	w8, w9, [x20, #8]
   238c0:	cmp	w8, w9
   238c4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   238c8:	add	w8, w8, #0x1
   238cc:	str	w8, [x20, #8]
   238d0:	ldrh	w10, [x21, #18]
   238d4:	cmp	w8, w9
   238d8:	lsr	w10, w10, #1
   238dc:	and	w10, w10, #0x3ffe
   238e0:	orr	w19, w10, #0x8000
   238e4:	b.cs	25534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c10>  // b.hs, b.nlast
   238e8:	ldr	x9, [x20]
   238ec:	str	w19, [x9, w8, uxtw #2]
   238f0:	ldp	w8, w9, [x20, #8]
   238f4:	cmp	w8, w9
   238f8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   238fc:	add	w8, w8, #0x1
   23900:	str	w8, [x20, #8]
   23904:	ldr	w8, [x21, #72]
   23908:	mov	w9, #0x18                  	// #24
   2390c:	mneg	x8, x8, x9
   23910:	add	x8, x26, x8
   23914:	ldur	x1, [x8, #-24]
   23918:	cbz	x1, 25dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64d8>
   2391c:	ldrb	w8, [x1, #16]
   23920:	cmp	w8, #0x12
   23924:	b.ne	25e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64f8>  // b.any
   23928:	ldr	x0, [sp, #32]
   2392c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   23930:	ldp	w8, w9, [x20, #8]
   23934:	mov	w25, w0
   23938:	cmp	w8, w9
   2393c:	b.cs	25550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c2c>  // b.hs, b.nlast
   23940:	ldr	x9, [x20]
   23944:	str	w25, [x9, w8, uxtw #2]
   23948:	ldp	w8, w9, [x20, #8]
   2394c:	cmp	w8, w9
   23950:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23954:	add	w8, w8, #0x1
   23958:	str	w8, [x20, #8]
   2395c:	ldr	w19, [x21, #72]
   23960:	cmp	w8, w9
   23964:	b.cs	2556c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c48>  // b.hs, b.nlast
   23968:	ldr	x9, [x20]
   2396c:	str	w19, [x9, w8, uxtw #2]
   23970:	ldp	w9, w8, [x20, #8]
   23974:	cmp	w9, w8
   23978:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2397c:	add	w9, w9, #0x1
   23980:	str	w9, [x20, #8]
   23984:	ldr	w10, [x21, #72]
   23988:	cbz	w10, 23a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4110>
   2398c:	add	x8, x20, #0x10
   23990:	stp	x8, x24, [sp, #8]
   23994:	sub	x19, x21, #0x18
   23998:	sub	x24, x10, #0x1
   2399c:	mov	x25, #0xffffffffffffffe8    	// #-24
   239a0:	mov	w8, w10
   239a4:	mul	x8, x8, x25
   239a8:	ldr	x1, [x19, x8]
   239ac:	cbz	x1, 239bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4098>
   239b0:	ldrb	w8, [x1, #16]
   239b4:	cmp	w8, #0x12
   239b8:	b.ne	25da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6480>  // b.any
   239bc:	ldr	x0, [sp, #32]
   239c0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   239c4:	ldp	w8, w9, [x20, #8]
   239c8:	mov	w26, w0
   239cc:	cmp	w8, w9
   239d0:	b.cs	23a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x40f0>  // b.hs, b.nlast
   239d4:	ldr	x9, [x20]
   239d8:	str	w26, [x9, w8, uxtw #2]
   239dc:	ldp	w9, w8, [x20, #8]
   239e0:	cmp	w9, w8
   239e4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   239e8:	add	w9, w9, #0x1
   239ec:	str	w9, [x20, #8]
   239f0:	cbz	x24, 23a30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x410c>
   239f4:	ldr	w10, [x21, #72]
   239f8:	add	x19, x19, #0x18
   239fc:	sub	x24, x24, #0x1
   23a00:	mov	w8, w10
   23a04:	mul	x8, x8, x25
   23a08:	ldr	x1, [x19, x8]
   23a0c:	cbnz	x1, 239b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x408c>
   23a10:	b	239bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4098>
   23a14:	ldr	x1, [sp, #8]
   23a18:	mov	w3, #0x4                   	// #4
   23a1c:	mov	x0, x20
   23a20:	mov	x2, xzr
   23a24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23a28:	ldr	w8, [x20, #8]
   23a2c:	b	239d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x40b0>
   23a30:	ldr	x24, [sp, #16]
   23a34:	ldr	x11, [sp, #24]
   23a38:	ldr	w10, [x11, #72]
   23a3c:	ldr	x11, [x11, #56]
   23a40:	cbz	w10, 23a9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4178>
   23a44:	orr	x12, x28, #0x8
   23a48:	cmn	x12, #0x8
   23a4c:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   23a50:	ubfx	x12, x28, #4, #28
   23a54:	eor	w13, w12, w28, lsr #9
   23a58:	sub	w12, w10, #0x1
   23a5c:	and	w13, w12, w13
   23a60:	add	x14, x11, w13, uxtw #4
   23a64:	ldr	x15, [x14]
   23a68:	cmp	x15, x28
   23a6c:	b.eq	23aa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x417c>  // b.none
   23a70:	mov	w16, #0x1                   	// #1
   23a74:	cmn	x15, #0x8
   23a78:	b.eq	23a9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4178>  // b.none
   23a7c:	add	w13, w13, w16
   23a80:	and	w13, w13, w12
   23a84:	add	x14, x11, w13, uxtw #4
   23a88:	ldr	x15, [x14]
   23a8c:	add	w16, w16, #0x1
   23a90:	cmp	x15, x28
   23a94:	b.eq	23aa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x417c>  // b.none
   23a98:	b	23a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4150>
   23a9c:	add	x14, x11, x10, lsl #4
   23aa0:	add	x10, x11, x10, lsl #4
   23aa4:	cmp	x14, x10
   23aa8:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   23aac:	ldr	w10, [x14, #8]
   23ab0:	cmp	w9, w8
   23ab4:	sub	w19, w10, #0x1
   23ab8:	b.cs	25588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c64>  // b.hs, b.nlast
   23abc:	ldr	x8, [x20]
   23ac0:	str	w19, [x8, w9, uxtw #2]
   23ac4:	ldp	w8, w9, [x20, #8]
   23ac8:	cmp	w8, w9
   23acc:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23ad0:	ldr	x0, [sp, #32]
   23ad4:	add	w8, w8, #0x1
   23ad8:	mov	x1, x24
   23adc:	str	w8, [x20, #8]
   23ae0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   23ae4:	ldp	w8, w9, [x20, #8]
   23ae8:	mov	w25, w0
   23aec:	sub	w19, w23, w0
   23af0:	cmp	w8, w9
   23af4:	b.cs	255a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c80>  // b.hs, b.nlast
   23af8:	ldr	x9, [x20]
   23afc:	str	w19, [x9, w8, uxtw #2]
   23b00:	ldp	w8, w9, [x20, #8]
   23b04:	cmp	w8, w9
   23b08:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23b0c:	add	w8, w8, #0x1
   23b10:	cmp	w25, w23
   23b14:	str	w8, [x20, #8]
   23b18:	b.cc	23bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x42a0>  // b.lo, b.ul, b.last
   23b1c:	ldr	x11, [sp, #24]
   23b20:	ldr	w10, [x11, #72]
   23b24:	ldr	x11, [x11, #56]
   23b28:	cbz	w10, 23b88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4264>
   23b2c:	ldr	x12, [x24]
   23b30:	orr	x13, x12, #0x8
   23b34:	cmn	x13, #0x8
   23b38:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   23b3c:	ubfx	x13, x12, #4, #28
   23b40:	eor	w14, w13, w12, lsr #9
   23b44:	sub	w13, w10, #0x1
   23b48:	and	w14, w14, w13
   23b4c:	add	x15, x11, w14, uxtw #4
   23b50:	ldr	x16, [x15]
   23b54:	cmp	x16, x12
   23b58:	b.eq	23b8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4268>  // b.none
   23b5c:	mov	w17, #0x1                   	// #1
   23b60:	cmn	x16, #0x8
   23b64:	b.eq	23b88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4264>  // b.none
   23b68:	add	w14, w14, w17
   23b6c:	and	w14, w14, w13
   23b70:	add	x15, x11, w14, uxtw #4
   23b74:	ldr	x16, [x15]
   23b78:	add	w17, w17, #0x1
   23b7c:	cmp	x16, x12
   23b80:	b.eq	23b8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4268>  // b.none
   23b84:	b	23b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x423c>
   23b88:	add	x15, x11, x10, lsl #4
   23b8c:	add	x10, x11, x10, lsl #4
   23b90:	cmp	x15, x10
   23b94:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   23b98:	ldr	w10, [x15, #8]
   23b9c:	cmp	w8, w9
   23ba0:	sub	w19, w10, #0x1
   23ba4:	b.cs	25a3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6118>  // b.hs, b.nlast
   23ba8:	ldr	x9, [x20]
   23bac:	str	w19, [x9, w8, uxtw #2]
   23bb0:	ldp	w8, w9, [x20, #8]
   23bb4:	cmp	w8, w9
   23bb8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23bbc:	add	w8, w8, #0x1
   23bc0:	str	w8, [x20, #8]
   23bc4:	ldr	w8, [x28, #12]
   23bc8:	subs	w8, w8, #0x1
   23bcc:	b.eq	23c70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x434c>  // b.none
   23bd0:	mov	x19, xzr
   23bd4:	add	x24, x20, #0x10
   23bd8:	mov	w25, w8
   23bdc:	mov	w26, #0x18                  	// #24
   23be0:	ldr	w9, [x21, #20]
   23be4:	and	x8, x9, #0xfffffff
   23be8:	cmp	x19, x8
   23bec:	b.cs	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.hs, b.nlast
   23bf0:	tbnz	w9, #30, 23c00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x42dc>
   23bf4:	mneg	x8, x8, x26
   23bf8:	add	x8, x21, x8
   23bfc:	b	23c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x42e0>
   23c00:	ldur	x8, [x21, #-8]
   23c04:	mul	x9, x19, x26
   23c08:	ldr	x1, [x8, x9]
   23c0c:	ldr	x0, [sp, #32]
   23c10:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   23c14:	ldp	w8, w9, [x20, #8]
   23c18:	sub	w23, w23, w0
   23c1c:	cmp	w8, w9
   23c20:	b.cs	23c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4330>  // b.hs, b.nlast
   23c24:	ldr	x9, [x20]
   23c28:	str	w23, [x9, w8, uxtw #2]
   23c2c:	ldp	w8, w9, [x20, #8]
   23c30:	cmp	w8, w9
   23c34:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23c38:	add	x19, x19, #0x1
   23c3c:	add	w8, w8, #0x1
   23c40:	cmp	x19, x25
   23c44:	mov	w23, w22
   23c48:	str	w8, [x20, #8]
   23c4c:	b.ne	23be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x42bc>  // b.any
   23c50:	b	23c70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x434c>
   23c54:	mov	w3, #0x4                   	// #4
   23c58:	mov	x0, x20
   23c5c:	mov	x1, x24
   23c60:	mov	x2, xzr
   23c64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23c68:	ldr	w8, [x20, #8]
   23c6c:	b	23c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4300>
   23c70:	ldr	w8, [x28, #8]
   23c74:	cmp	w8, #0xff
   23c78:	b.ls	23d0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x43e8>  // b.plast
   23c7c:	ldrb	w8, [x27]
   23c80:	ldr	w19, [x28, #12]
   23c84:	cmp	w8, #0x50
   23c88:	b.eq	23cb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4394>  // b.none
   23c8c:	cmp	w8, #0x23
   23c90:	b.eq	23ca4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4380>  // b.none
   23c94:	cmp	w8, #0x1d
   23c98:	b.ne	25f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6638>  // b.any
   23c9c:	mov	x8, #0xfffffffffffffffe    	// #-2
   23ca0:	b	23cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4398>
   23ca4:	mov	x0, x21
   23ca8:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
   23cac:	mov	x8, xzr
   23cb0:	sub	x8, x8, w0, uxtw
   23cb4:	b	23cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4398>
   23cb8:	mov	x8, xzr
   23cbc:	mov	w23, #0x18                  	// #24
   23cc0:	mov	x0, x21
   23cc4:	sub	w19, w19, #0x1
   23cc8:	madd	x24, x8, x23, x21
   23ccc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   23cd0:	ldr	w8, [x21, #20]
   23cd4:	mov	w9, w0
   23cd8:	mneg	x9, x9, x23
   23cdc:	add	x10, x24, x9
   23ce0:	and	x9, x8, #0xfffffff
   23ce4:	mneg	x11, x9, x23
   23ce8:	add	x11, x21, x11
   23cec:	sub	x10, x10, x11
   23cf0:	sub	x10, x10, #0x18
   23cf4:	mov	w11, #0xaaab                	// #43691
   23cf8:	lsr	x10, x10, #3
   23cfc:	movk	w11, #0xaaaa, lsl #16
   23d00:	mul	w27, w10, w11
   23d04:	cmp	w19, w27
   23d08:	b.ne	23d18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x43f4>  // b.any
   23d0c:	mov	w25, wzr
   23d10:	mov	w24, #0x39                  	// #57
   23d14:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   23d18:	cmp	w19, w9
   23d1c:	b.cs	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.hs, b.nlast
   23d20:	add	x23, x20, #0x10
   23d24:	mov	w28, w19
   23d28:	mov	w24, #0x18                  	// #24
   23d2c:	tbnz	w8, #30, 23d3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4418>
   23d30:	mneg	x8, x9, x24
   23d34:	add	x8, x21, x8
   23d38:	b	23d40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x441c>
   23d3c:	ldur	x8, [x21, #-8]
   23d40:	mul	x9, x28, x24
   23d44:	ldr	x25, [x8, x9]
   23d48:	ldr	x0, [sp, #32]
   23d4c:	mov	x1, x25
   23d50:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   23d54:	ldp	w8, w9, [x20, #8]
   23d58:	mov	w26, w0
   23d5c:	sub	w19, w22, w0
   23d60:	cmp	w8, w9
   23d64:	b.cs	23e58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4534>  // b.hs, b.nlast
   23d68:	ldr	x9, [x20]
   23d6c:	str	w19, [x9, w8, uxtw #2]
   23d70:	ldp	w8, w9, [x20, #8]
   23d74:	cmp	w8, w9
   23d78:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23d7c:	add	w8, w8, #0x1
   23d80:	cmp	w26, w22
   23d84:	str	w8, [x20, #8]
   23d88:	b.cc	23e34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4510>  // b.lo, b.ul, b.last
   23d8c:	ldr	x11, [sp, #24]
   23d90:	ldr	w10, [x11, #72]
   23d94:	ldr	x11, [x11, #56]
   23d98:	cbz	w10, 23df8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44d4>
   23d9c:	ldr	x12, [x25]
   23da0:	orr	x13, x12, #0x8
   23da4:	cmn	x13, #0x8
   23da8:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   23dac:	ubfx	x13, x12, #4, #28
   23db0:	eor	w14, w13, w12, lsr #9
   23db4:	sub	w13, w10, #0x1
   23db8:	and	w14, w14, w13
   23dbc:	add	x15, x11, w14, uxtw #4
   23dc0:	ldr	x16, [x15]
   23dc4:	cmp	x16, x12
   23dc8:	b.eq	23dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44d8>  // b.none
   23dcc:	mov	w17, #0x1                   	// #1
   23dd0:	cmn	x16, #0x8
   23dd4:	b.eq	23df8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44d4>  // b.none
   23dd8:	add	w14, w14, w17
   23ddc:	and	w14, w14, w13
   23de0:	add	x15, x11, w14, uxtw #4
   23de4:	ldr	x16, [x15]
   23de8:	add	w17, w17, #0x1
   23dec:	cmp	x16, x12
   23df0:	b.eq	23dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44d8>  // b.none
   23df4:	b	23dd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44ac>
   23df8:	add	x15, x11, x10, lsl #4
   23dfc:	add	x10, x11, x10, lsl #4
   23e00:	cmp	x15, x10
   23e04:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   23e08:	ldr	w10, [x15, #8]
   23e0c:	cmp	w8, w9
   23e10:	sub	w19, w10, #0x1
   23e14:	b.cs	23e74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4550>  // b.hs, b.nlast
   23e18:	ldr	x9, [x20]
   23e1c:	str	w19, [x9, w8, uxtw #2]
   23e20:	ldp	w8, w9, [x20, #8]
   23e24:	cmp	w8, w9
   23e28:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23e2c:	add	w8, w8, #0x1
   23e30:	str	w8, [x20, #8]
   23e34:	add	w8, w28, #0x1
   23e38:	cmp	w8, w27
   23e3c:	b.eq	23d0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x43e8>  // b.none
   23e40:	ldr	w8, [x21, #20]
   23e44:	add	x28, x28, #0x1
   23e48:	and	x9, x8, #0xfffffff
   23e4c:	cmp	x28, x9
   23e50:	b.cc	23d2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4408>  // b.lo, b.ul, b.last
   23e54:	b	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   23e58:	mov	w3, #0x4                   	// #4
   23e5c:	mov	x0, x20
   23e60:	mov	x1, x23
   23e64:	mov	x2, xzr
   23e68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23e6c:	ldr	w8, [x20, #8]
   23e70:	b	23d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4444>
   23e74:	mov	w3, #0x4                   	// #4
   23e78:	mov	x0, x20
   23e7c:	mov	x1, x23
   23e80:	mov	x2, xzr
   23e84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23e88:	ldr	w8, [x20, #8]
   23e8c:	b	23e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44f4>
   23e90:	mov	x0, x21
   23e94:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   23e98:	add	x8, x0, x1
   23e9c:	sub	x8, x8, x25
   23ea0:	lsr	x8, x8, #4
   23ea4:	cbz	w8, 23ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x459c>
   23ea8:	tst	x21, #0x7
   23eac:	b.ne	25edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65b8>  // b.any
   23eb0:	ldr	x0, [sp, #24]
   23eb4:	and	x1, x21, #0xfffffffffffffff9
   23eb8:	mov	w2, w23
   23ebc:	bl	26134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>
   23ec0:	ldr	x10, [x21, #56]
   23ec4:	cbz	x10, 23f30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x460c>
   23ec8:	ldr	x9, [sp, #24]
   23ecc:	ldr	w8, [x9, #432]
   23ed0:	ldr	x9, [x9, #416]
   23ed4:	cbz	w8, 23f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4614>
   23ed8:	orr	x11, x10, #0x4
   23edc:	cmn	x11, #0x4
   23ee0:	b.eq	25e9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6578>  // b.none
   23ee4:	ubfx	x11, x10, #4, #28
   23ee8:	eor	w12, w11, w10, lsr #9
   23eec:	sub	w11, w8, #0x1
   23ef0:	and	w12, w11, w12
   23ef4:	add	x13, x9, w12, uxtw #4
   23ef8:	ldr	x14, [x13]
   23efc:	cmp	x14, x10
   23f00:	b.eq	23f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4618>  // b.none
   23f04:	mov	w15, #0x1                   	// #1
   23f08:	cmn	x14, #0x4
   23f0c:	b.eq	23f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4614>  // b.none
   23f10:	add	w12, w12, w15
   23f14:	and	w12, w12, w11
   23f18:	add	x13, x9, w12, uxtw #4
   23f1c:	ldr	x14, [x13]
   23f20:	add	w15, w15, #0x1
   23f24:	cmp	x14, x10
   23f28:	b.eq	23f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4618>  // b.none
   23f2c:	b	23f08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x45e4>
   23f30:	mov	w19, wzr
   23f34:	b	23f4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4628>
   23f38:	add	x13, x9, x8, lsl #4
   23f3c:	add	x8, x9, x8, lsl #4
   23f40:	cmp	x13, x8
   23f44:	b.eq	25efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65d8>  // b.none
   23f48:	ldr	w19, [x13, #8]
   23f4c:	ldp	w8, w9, [x20, #8]
   23f50:	cmp	w8, w9
   23f54:	b.cs	255c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c9c>  // b.hs, b.nlast
   23f58:	ldr	x9, [x20]
   23f5c:	str	w19, [x9, w8, uxtw #2]
   23f60:	ldp	w8, w9, [x20, #8]
   23f64:	cmp	w8, w9
   23f68:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23f6c:	add	w8, w8, #0x1
   23f70:	str	w8, [x20, #8]
   23f74:	ldrh	w10, [x21, #18]
   23f78:	cmp	w8, w9
   23f7c:	lsr	w10, w10, #2
   23f80:	orr	w19, w10, #0x2000
   23f84:	b.cs	255dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5cb8>  // b.hs, b.nlast
   23f88:	ldr	x9, [x20]
   23f8c:	str	w19, [x9, w8, uxtw #2]
   23f90:	ldp	w8, w9, [x20, #8]
   23f94:	cmp	w8, w9
   23f98:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23f9c:	add	w8, w8, #0x1
   23fa0:	str	w8, [x20, #8]
   23fa4:	ldur	x1, [x21, #-72]
   23fa8:	cbz	x1, 25dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64d8>
   23fac:	ldrb	w8, [x1, #16]
   23fb0:	cmp	w8, #0x12
   23fb4:	b.ne	25e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64f8>  // b.any
   23fb8:	ldr	x0, [sp, #32]
   23fbc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   23fc0:	ldp	w8, w9, [x20, #8]
   23fc4:	mov	w25, w0
   23fc8:	cmp	w8, w9
   23fcc:	b.cs	255f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5cd4>  // b.hs, b.nlast
   23fd0:	ldr	x9, [x20]
   23fd4:	str	w25, [x9, w8, uxtw #2]
   23fd8:	ldp	w8, w9, [x20, #8]
   23fdc:	cmp	w8, w9
   23fe0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   23fe4:	add	w8, w8, #0x1
   23fe8:	str	w8, [x20, #8]
   23fec:	ldur	x1, [x21, #-48]
   23ff0:	cbz	x1, 25dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64d8>
   23ff4:	ldrb	w8, [x1, #16]
   23ff8:	cmp	w8, #0x12
   23ffc:	b.ne	25e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64f8>  // b.any
   24000:	ldr	x0, [sp, #32]
   24004:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   24008:	ldp	w8, w9, [x20, #8]
   2400c:	mov	w25, w0
   24010:	cmp	w8, w9
   24014:	b.cs	25614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5cf0>  // b.hs, b.nlast
   24018:	ldr	x9, [x20]
   2401c:	str	w25, [x9, w8, uxtw #2]
   24020:	ldp	w8, w9, [x20, #8]
   24024:	cmp	w8, w9
   24028:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2402c:	ldr	x11, [sp, #24]
   24030:	add	w8, w8, #0x1
   24034:	str	w8, [x20, #8]
   24038:	ldr	w10, [x11, #72]
   2403c:	ldr	x11, [x11, #56]
   24040:	cbz	w10, 2409c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4778>
   24044:	orr	x12, x26, #0x8
   24048:	cmn	x12, #0x8
   2404c:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   24050:	ubfx	x12, x26, #4, #28
   24054:	eor	w13, w12, w26, lsr #9
   24058:	sub	w12, w10, #0x1
   2405c:	and	w13, w12, w13
   24060:	add	x14, x11, w13, uxtw #4
   24064:	ldr	x15, [x14]
   24068:	cmp	x15, x26
   2406c:	b.eq	240a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x477c>  // b.none
   24070:	mov	w16, #0x1                   	// #1
   24074:	cmn	x15, #0x8
   24078:	b.eq	2409c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4778>  // b.none
   2407c:	add	w13, w13, w16
   24080:	and	w13, w13, w12
   24084:	add	x14, x11, w13, uxtw #4
   24088:	ldr	x15, [x14]
   2408c:	add	w16, w16, #0x1
   24090:	cmp	x15, x26
   24094:	b.eq	240a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x477c>  // b.none
   24098:	b	24074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4750>
   2409c:	add	x14, x11, x10, lsl #4
   240a0:	add	x10, x11, x10, lsl #4
   240a4:	cmp	x14, x10
   240a8:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   240ac:	ldr	w10, [x14, #8]
   240b0:	cmp	w8, w9
   240b4:	sub	w19, w10, #0x1
   240b8:	b.cs	25630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d0c>  // b.hs, b.nlast
   240bc:	ldr	x9, [x20]
   240c0:	str	w19, [x9, w8, uxtw #2]
   240c4:	ldp	w8, w9, [x20, #8]
   240c8:	cmp	w8, w9
   240cc:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   240d0:	ldr	x0, [sp, #32]
   240d4:	add	w8, w8, #0x1
   240d8:	mov	x1, x24
   240dc:	str	w8, [x20, #8]
   240e0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   240e4:	ldp	w8, w9, [x20, #8]
   240e8:	mov	w25, w0
   240ec:	sub	w19, w23, w0
   240f0:	cmp	w8, w9
   240f4:	b.cs	2564c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d28>  // b.hs, b.nlast
   240f8:	ldr	x9, [x20]
   240fc:	str	w19, [x9, w8, uxtw #2]
   24100:	ldp	w8, w9, [x20, #8]
   24104:	cmp	w8, w9
   24108:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2410c:	add	w8, w8, #0x1
   24110:	cmp	w25, w23
   24114:	str	w8, [x20, #8]
   24118:	b.cc	241c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x48a0>  // b.lo, b.ul, b.last
   2411c:	ldr	x11, [sp, #24]
   24120:	ldr	w10, [x11, #72]
   24124:	ldr	x11, [x11, #56]
   24128:	cbz	w10, 24188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4864>
   2412c:	ldr	x12, [x24]
   24130:	orr	x13, x12, #0x8
   24134:	cmn	x13, #0x8
   24138:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   2413c:	ubfx	x13, x12, #4, #28
   24140:	eor	w14, w13, w12, lsr #9
   24144:	sub	w13, w10, #0x1
   24148:	and	w14, w14, w13
   2414c:	add	x15, x11, w14, uxtw #4
   24150:	ldr	x16, [x15]
   24154:	cmp	x16, x12
   24158:	b.eq	2418c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4868>  // b.none
   2415c:	mov	w17, #0x1                   	// #1
   24160:	cmn	x16, #0x8
   24164:	b.eq	24188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4864>  // b.none
   24168:	add	w14, w14, w17
   2416c:	and	w14, w14, w13
   24170:	add	x15, x11, w14, uxtw #4
   24174:	ldr	x16, [x15]
   24178:	add	w17, w17, #0x1
   2417c:	cmp	x16, x12
   24180:	b.eq	2418c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4868>  // b.none
   24184:	b	24160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x483c>
   24188:	add	x15, x11, x10, lsl #4
   2418c:	add	x10, x11, x10, lsl #4
   24190:	cmp	x15, x10
   24194:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   24198:	ldr	w10, [x15, #8]
   2419c:	cmp	w8, w9
   241a0:	sub	w19, w10, #0x1
   241a4:	b.cs	25a58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6134>  // b.hs, b.nlast
   241a8:	ldr	x9, [x20]
   241ac:	str	w19, [x9, w8, uxtw #2]
   241b0:	ldp	w8, w9, [x20, #8]
   241b4:	cmp	w8, w9
   241b8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   241bc:	add	w8, w8, #0x1
   241c0:	str	w8, [x20, #8]
   241c4:	ldr	w8, [x26, #12]
   241c8:	subs	w8, w8, #0x1
   241cc:	b.eq	24270 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x494c>  // b.none
   241d0:	mov	x19, xzr
   241d4:	add	x24, x20, #0x10
   241d8:	mov	w25, w8
   241dc:	mov	w28, #0x18                  	// #24
   241e0:	ldr	w9, [x21, #20]
   241e4:	and	x8, x9, #0xfffffff
   241e8:	cmp	x19, x8
   241ec:	b.cs	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.hs, b.nlast
   241f0:	tbnz	w9, #30, 24200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x48dc>
   241f4:	mneg	x8, x8, x28
   241f8:	add	x8, x21, x8
   241fc:	b	24204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x48e0>
   24200:	ldur	x8, [x21, #-8]
   24204:	mul	x9, x19, x28
   24208:	ldr	x1, [x8, x9]
   2420c:	ldr	x0, [sp, #32]
   24210:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   24214:	ldp	w8, w9, [x20, #8]
   24218:	sub	w23, w23, w0
   2421c:	cmp	w8, w9
   24220:	b.cs	24254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4930>  // b.hs, b.nlast
   24224:	ldr	x9, [x20]
   24228:	str	w23, [x9, w8, uxtw #2]
   2422c:	ldp	w8, w9, [x20, #8]
   24230:	cmp	w8, w9
   24234:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24238:	add	x19, x19, #0x1
   2423c:	add	w8, w8, #0x1
   24240:	cmp	x19, x25
   24244:	mov	w23, w22
   24248:	str	w8, [x20, #8]
   2424c:	b.ne	241e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x48bc>  // b.any
   24250:	b	24270 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x494c>
   24254:	mov	w3, #0x4                   	// #4
   24258:	mov	x0, x20
   2425c:	mov	x1, x24
   24260:	mov	x2, xzr
   24264:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24268:	ldr	w8, [x20, #8]
   2426c:	b	24224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4900>
   24270:	ldr	w8, [x26, #8]
   24274:	cmp	w8, #0xff
   24278:	b.ls	2430c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x49e8>  // b.plast
   2427c:	ldrb	w8, [x27]
   24280:	ldr	w19, [x26, #12]
   24284:	cmp	w8, #0x50
   24288:	b.eq	242b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4994>  // b.none
   2428c:	cmp	w8, #0x23
   24290:	b.eq	242a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4980>  // b.none
   24294:	cmp	w8, #0x1d
   24298:	b.ne	25f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6638>  // b.any
   2429c:	mov	x8, #0xfffffffffffffffe    	// #-2
   242a0:	b	242bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4998>
   242a4:	mov	x0, x21
   242a8:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
   242ac:	mov	x8, xzr
   242b0:	sub	x8, x8, w0, uxtw
   242b4:	b	242bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4998>
   242b8:	mov	x8, xzr
   242bc:	mov	w23, #0x18                  	// #24
   242c0:	mov	x0, x21
   242c4:	sub	w19, w19, #0x1
   242c8:	madd	x24, x8, x23, x21
   242cc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   242d0:	ldr	w8, [x21, #20]
   242d4:	mov	w9, w0
   242d8:	mneg	x9, x9, x23
   242dc:	add	x10, x24, x9
   242e0:	and	x9, x8, #0xfffffff
   242e4:	mneg	x11, x9, x23
   242e8:	add	x11, x21, x11
   242ec:	sub	x10, x10, x11
   242f0:	sub	x10, x10, #0x18
   242f4:	mov	w11, #0xaaab                	// #43691
   242f8:	lsr	x10, x10, #3
   242fc:	movk	w11, #0xaaaa, lsl #16
   24300:	mul	w27, w10, w11
   24304:	cmp	w19, w27
   24308:	b.ne	24318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x49f4>  // b.any
   2430c:	mov	w25, wzr
   24310:	mov	w24, #0xd                   	// #13
   24314:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   24318:	cmp	w19, w9
   2431c:	b.cs	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.hs, b.nlast
   24320:	add	x23, x20, #0x10
   24324:	mov	w28, w19
   24328:	mov	w24, #0x18                  	// #24
   2432c:	tbnz	w8, #30, 2433c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4a18>
   24330:	mneg	x8, x9, x24
   24334:	add	x8, x21, x8
   24338:	b	24340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4a1c>
   2433c:	ldur	x8, [x21, #-8]
   24340:	mul	x9, x28, x24
   24344:	ldr	x25, [x8, x9]
   24348:	ldr	x0, [sp, #32]
   2434c:	mov	x1, x25
   24350:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   24354:	ldp	w8, w9, [x20, #8]
   24358:	mov	w26, w0
   2435c:	sub	w19, w22, w0
   24360:	cmp	w8, w9
   24364:	b.cs	24458 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b34>  // b.hs, b.nlast
   24368:	ldr	x9, [x20]
   2436c:	str	w19, [x9, w8, uxtw #2]
   24370:	ldp	w8, w9, [x20, #8]
   24374:	cmp	w8, w9
   24378:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2437c:	add	w8, w8, #0x1
   24380:	cmp	w26, w22
   24384:	str	w8, [x20, #8]
   24388:	b.cc	24434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b10>  // b.lo, b.ul, b.last
   2438c:	ldr	x11, [sp, #24]
   24390:	ldr	w10, [x11, #72]
   24394:	ldr	x11, [x11, #56]
   24398:	cbz	w10, 243f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ad4>
   2439c:	ldr	x12, [x25]
   243a0:	orr	x13, x12, #0x8
   243a4:	cmn	x13, #0x8
   243a8:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   243ac:	ubfx	x13, x12, #4, #28
   243b0:	eor	w14, w13, w12, lsr #9
   243b4:	sub	w13, w10, #0x1
   243b8:	and	w14, w14, w13
   243bc:	add	x15, x11, w14, uxtw #4
   243c0:	ldr	x16, [x15]
   243c4:	cmp	x16, x12
   243c8:	b.eq	243fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ad8>  // b.none
   243cc:	mov	w17, #0x1                   	// #1
   243d0:	cmn	x16, #0x8
   243d4:	b.eq	243f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ad4>  // b.none
   243d8:	add	w14, w14, w17
   243dc:	and	w14, w14, w13
   243e0:	add	x15, x11, w14, uxtw #4
   243e4:	ldr	x16, [x15]
   243e8:	add	w17, w17, #0x1
   243ec:	cmp	x16, x12
   243f0:	b.eq	243fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ad8>  // b.none
   243f4:	b	243d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4aac>
   243f8:	add	x15, x11, x10, lsl #4
   243fc:	add	x10, x11, x10, lsl #4
   24400:	cmp	x15, x10
   24404:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   24408:	ldr	w10, [x15, #8]
   2440c:	cmp	w8, w9
   24410:	sub	w19, w10, #0x1
   24414:	b.cs	24474 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b50>  // b.hs, b.nlast
   24418:	ldr	x9, [x20]
   2441c:	str	w19, [x9, w8, uxtw #2]
   24420:	ldp	w8, w9, [x20, #8]
   24424:	cmp	w8, w9
   24428:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2442c:	add	w8, w8, #0x1
   24430:	str	w8, [x20, #8]
   24434:	add	w8, w28, #0x1
   24438:	cmp	w8, w27
   2443c:	b.eq	2430c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x49e8>  // b.none
   24440:	ldr	w8, [x21, #20]
   24444:	add	x28, x28, #0x1
   24448:	and	x9, x8, #0xfffffff
   2444c:	cmp	x28, x9
   24450:	b.cc	2432c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4a08>  // b.lo, b.ul, b.last
   24454:	b	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>
   24458:	mov	w3, #0x4                   	// #4
   2445c:	mov	x0, x20
   24460:	mov	x1, x23
   24464:	mov	x2, xzr
   24468:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2446c:	ldr	w8, [x20, #8]
   24470:	b	24368 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4a44>
   24474:	mov	w3, #0x4                   	// #4
   24478:	mov	x0, x20
   2447c:	mov	x1, x23
   24480:	mov	x2, xzr
   24484:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24488:	ldr	w8, [x20, #8]
   2448c:	b	24418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4af4>
   24490:	mov	x0, x21
   24494:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   24498:	add	x8, x0, x1
   2449c:	sub	x8, x8, x24
   244a0:	lsr	x8, x8, #4
   244a4:	cbz	w8, 244c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ba0>
   244a8:	tst	x21, #0x7
   244ac:	b.ne	25edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65b8>  // b.any
   244b0:	ldr	x0, [sp, #24]
   244b4:	and	x8, x21, #0xfffffffffffffff9
   244b8:	orr	x1, x8, #0x2
   244bc:	mov	w2, w23
   244c0:	bl	26134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>
   244c4:	ldr	x10, [x21, #56]
   244c8:	cbz	x10, 24534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c10>
   244cc:	ldr	x9, [sp, #24]
   244d0:	ldr	w8, [x9, #432]
   244d4:	ldr	x9, [x9, #416]
   244d8:	cbz	w8, 2453c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c18>
   244dc:	orr	x11, x10, #0x4
   244e0:	cmn	x11, #0x4
   244e4:	b.eq	25e9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6578>  // b.none
   244e8:	ubfx	x11, x10, #4, #28
   244ec:	eor	w12, w11, w10, lsr #9
   244f0:	sub	w11, w8, #0x1
   244f4:	and	w12, w11, w12
   244f8:	add	x13, x9, w12, uxtw #4
   244fc:	ldr	x14, [x13]
   24500:	cmp	x14, x10
   24504:	b.eq	24540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c1c>  // b.none
   24508:	mov	w15, #0x1                   	// #1
   2450c:	cmn	x14, #0x4
   24510:	b.eq	2453c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c18>  // b.none
   24514:	add	w12, w12, w15
   24518:	and	w12, w12, w11
   2451c:	add	x13, x9, w12, uxtw #4
   24520:	ldr	x14, [x13]
   24524:	add	w15, w15, #0x1
   24528:	cmp	x14, x10
   2452c:	b.eq	24540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c1c>  // b.none
   24530:	b	2450c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4be8>
   24534:	mov	w19, wzr
   24538:	b	24550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c2c>
   2453c:	add	x13, x9, x8, lsl #4
   24540:	add	x8, x9, x8, lsl #4
   24544:	cmp	x13, x8
   24548:	b.eq	25efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65d8>  // b.none
   2454c:	ldr	w19, [x13, #8]
   24550:	ldp	w8, w9, [x20, #8]
   24554:	cmp	w8, w9
   24558:	b.cs	25668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d44>  // b.hs, b.nlast
   2455c:	ldr	x9, [x20]
   24560:	str	w19, [x9, w8, uxtw #2]
   24564:	ldp	w8, w9, [x20, #8]
   24568:	cmp	w8, w9
   2456c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24570:	add	w8, w8, #0x1
   24574:	mov	x0, x21
   24578:	str	w8, [x20, #8]
   2457c:	bl	148f8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   24580:	ldrh	w9, [x21, #18]
   24584:	mov	x24, x0
   24588:	mov	w8, #0x8000                	// #32768
   2458c:	movk	w8, #0x2, lsl #16
   24590:	and	w11, w9, #0x3
   24594:	cmp	w11, #0x3
   24598:	sub	w12, w11, #0x1
   2459c:	cset	w13, eq  // eq = none
   245a0:	cmp	w11, #0x2
   245a4:	cset	w11, eq  // eq = none
   245a8:	cmp	w12, #0x2
   245ac:	mov	w10, #0x8000                	// #32768
   245b0:	cset	w12, cc  // cc = lo, ul, last
   245b4:	cmp	w24, #0x0
   245b8:	lsr	w9, w9, #1
   245bc:	csel	w10, w10, w8, eq  // eq = none
   245c0:	ldp	w8, w14, [x20, #8]
   245c4:	and	w9, w9, #0x3ffe
   245c8:	orr	w9, w10, w9
   245cc:	bfi	w9, w11, #14, #1
   245d0:	bfi	w9, w13, #16, #1
   245d4:	cmp	w8, w14
   245d8:	orr	w19, w9, w12
   245dc:	b.cs	25684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d60>  // b.hs, b.nlast
   245e0:	ldr	x9, [x20]
   245e4:	str	w19, [x9, w8, uxtw #2]
   245e8:	ldp	w8, w9, [x20, #8]
   245ec:	cmp	w8, w9
   245f0:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   245f4:	add	w8, w8, #0x1
   245f8:	str	w8, [x20, #8]
   245fc:	cbz	w24, 24624 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d00>
   24600:	cmp	w8, w9
   24604:	b.cs	25710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5dec>  // b.hs, b.nlast
   24608:	ldr	x9, [x20]
   2460c:	str	w24, [x9, w8, uxtw #2]
   24610:	ldp	w8, w9, [x20, #8]
   24614:	cmp	w8, w9
   24618:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2461c:	add	w8, w8, #0x1
   24620:	str	w8, [x20, #8]
   24624:	ldr	x11, [sp, #24]
   24628:	ldr	w10, [x11, #72]
   2462c:	ldr	x11, [x11, #56]
   24630:	cbz	w10, 2468c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d68>
   24634:	orr	x12, x28, #0x8
   24638:	cmn	x12, #0x8
   2463c:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   24640:	ubfx	x12, x28, #4, #28
   24644:	eor	w13, w12, w28, lsr #9
   24648:	sub	w12, w10, #0x1
   2464c:	and	w13, w12, w13
   24650:	add	x14, x11, w13, uxtw #4
   24654:	ldr	x15, [x14]
   24658:	cmp	x15, x28
   2465c:	b.eq	24690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d6c>  // b.none
   24660:	mov	w16, #0x1                   	// #1
   24664:	cmn	x15, #0x8
   24668:	b.eq	2468c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d68>  // b.none
   2466c:	add	w13, w13, w16
   24670:	and	w13, w13, w12
   24674:	add	x14, x11, w13, uxtw #4
   24678:	ldr	x15, [x14]
   2467c:	add	w16, w16, #0x1
   24680:	cmp	x15, x28
   24684:	b.eq	24690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d6c>  // b.none
   24688:	b	24664 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d40>
   2468c:	add	x14, x11, x10, lsl #4
   24690:	add	x10, x11, x10, lsl #4
   24694:	cmp	x14, x10
   24698:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   2469c:	ldr	w10, [x14, #8]
   246a0:	cmp	w8, w9
   246a4:	sub	w19, w10, #0x1
   246a8:	b.cs	256a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d7c>  // b.hs, b.nlast
   246ac:	ldr	x9, [x20]
   246b0:	str	w19, [x9, w8, uxtw #2]
   246b4:	ldp	w8, w9, [x20, #8]
   246b8:	cmp	w8, w9
   246bc:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   246c0:	add	w8, w8, #0x1
   246c4:	str	w8, [x20, #8]
   246c8:	ldur	x24, [x21, #-24]
   246cc:	ldr	x0, [sp, #32]
   246d0:	mov	x1, x24
   246d4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   246d8:	ldp	w8, w9, [x20, #8]
   246dc:	mov	w25, w0
   246e0:	sub	w19, w23, w0
   246e4:	cmp	w8, w9
   246e8:	b.cs	256bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d98>  // b.hs, b.nlast
   246ec:	ldr	x9, [x20]
   246f0:	str	w19, [x9, w8, uxtw #2]
   246f4:	ldp	w8, w9, [x20, #8]
   246f8:	cmp	w8, w9
   246fc:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24700:	add	w8, w8, #0x1
   24704:	cmp	w25, w23
   24708:	str	w8, [x20, #8]
   2470c:	b.cc	247b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e94>  // b.lo, b.ul, b.last
   24710:	ldr	x11, [sp, #24]
   24714:	ldr	w10, [x11, #72]
   24718:	ldr	x11, [x11, #56]
   2471c:	cbz	w10, 2477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e58>
   24720:	ldr	x12, [x24]
   24724:	orr	x13, x12, #0x8
   24728:	cmn	x13, #0x8
   2472c:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   24730:	ubfx	x13, x12, #4, #28
   24734:	eor	w14, w13, w12, lsr #9
   24738:	sub	w13, w10, #0x1
   2473c:	and	w14, w14, w13
   24740:	add	x15, x11, w14, uxtw #4
   24744:	ldr	x16, [x15]
   24748:	cmp	x16, x12
   2474c:	b.eq	24780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e5c>  // b.none
   24750:	mov	w17, #0x1                   	// #1
   24754:	cmn	x16, #0x8
   24758:	b.eq	2477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e58>  // b.none
   2475c:	add	w14, w14, w17
   24760:	and	w14, w14, w13
   24764:	add	x15, x11, w14, uxtw #4
   24768:	ldr	x16, [x15]
   2476c:	add	w17, w17, #0x1
   24770:	cmp	x16, x12
   24774:	b.eq	24780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e5c>  // b.none
   24778:	b	24754 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e30>
   2477c:	add	x15, x11, x10, lsl #4
   24780:	add	x10, x11, x10, lsl #4
   24784:	cmp	x15, x10
   24788:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   2478c:	ldr	w10, [x15, #8]
   24790:	cmp	w8, w9
   24794:	sub	w19, w10, #0x1
   24798:	b.cs	25a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6150>  // b.hs, b.nlast
   2479c:	ldr	x9, [x20]
   247a0:	str	w19, [x9, w8, uxtw #2]
   247a4:	ldp	w8, w9, [x20, #8]
   247a8:	cmp	w8, w9
   247ac:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   247b0:	add	w8, w8, #0x1
   247b4:	str	w8, [x20, #8]
   247b8:	ldr	w8, [x28, #12]
   247bc:	subs	w8, w8, #0x1
   247c0:	b.eq	24868 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f44>  // b.none
   247c4:	mov	x24, xzr
   247c8:	add	x25, x20, #0x10
   247cc:	mov	w19, w8
   247d0:	ldr	x8, [x28, #16]
   247d4:	mov	x0, x21
   247d8:	mov	w1, w24
   247dc:	add	x8, x8, x24, lsl #3
   247e0:	ldr	x8, [x8, #8]
   247e4:	ldrb	w23, [x8, #8]
   247e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247ec:	mov	x1, x0
   247f0:	ldr	x0, [sp, #32]
   247f4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   247f8:	cmp	w23, #0x7
   247fc:	mov	w26, w0
   24800:	b.ne	2482c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f08>  // b.any
   24804:	ldp	w8, w9, [x20, #8]
   24808:	cmp	w8, w9
   2480c:	b.cc	24840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f1c>  // b.lo, b.ul, b.last
   24810:	mov	w3, #0x4                   	// #4
   24814:	mov	x0, x20
   24818:	mov	x1, x25
   2481c:	mov	x2, xzr
   24820:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24824:	ldr	w8, [x20, #8]
   24828:	b	24840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f1c>
   2482c:	ldp	w8, w9, [x20, #8]
   24830:	sub	w26, w22, w26
   24834:	cmp	w8, w9
   24838:	mov	w9, w22
   2483c:	b.cs	24810 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4eec>  // b.hs, b.nlast
   24840:	ldr	x9, [x20]
   24844:	str	w26, [x9, w8, uxtw #2]
   24848:	ldp	w8, w9, [x20, #8]
   2484c:	cmp	w8, w9
   24850:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24854:	add	x24, x24, #0x1
   24858:	add	w8, w8, #0x1
   2485c:	cmp	x19, x24
   24860:	str	w8, [x20, #8]
   24864:	b.ne	247d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4eac>  // b.any
   24868:	ldr	w8, [x28, #8]
   2486c:	cmp	w8, #0xff
   24870:	b.ls	24904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4fe0>  // b.plast
   24874:	ldrb	w8, [x27]
   24878:	ldr	w19, [x28, #12]
   2487c:	cmp	w8, #0x50
   24880:	b.eq	248b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f8c>  // b.none
   24884:	cmp	w8, #0x23
   24888:	b.eq	2489c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f78>  // b.none
   2488c:	cmp	w8, #0x1d
   24890:	b.ne	25f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6638>  // b.any
   24894:	mov	x8, #0xfffffffffffffffe    	// #-2
   24898:	b	248b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f90>
   2489c:	mov	x0, x21
   248a0:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
   248a4:	mov	x8, xzr
   248a8:	sub	x8, x8, w0, uxtw
   248ac:	b	248b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f90>
   248b0:	mov	x8, xzr
   248b4:	sub	w26, w19, #0x1
   248b8:	mov	w19, #0x18                  	// #24
   248bc:	mov	x0, x21
   248c0:	madd	x23, x8, x19, x21
   248c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248c8:	ldr	w8, [x21, #20]
   248cc:	mov	w9, w0
   248d0:	mneg	x9, x9, x19
   248d4:	add	x9, x23, x9
   248d8:	and	x8, x8, #0xfffffff
   248dc:	mneg	x8, x8, x19
   248e0:	add	x8, x21, x8
   248e4:	sub	x8, x9, x8
   248e8:	sub	x8, x8, #0x18
   248ec:	mov	w9, #0xaaab                	// #43691
   248f0:	lsr	x8, x8, #3
   248f4:	movk	w9, #0xaaaa, lsl #16
   248f8:	mul	w28, w8, w9
   248fc:	cmp	w26, w28
   24900:	b.ne	24910 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4fec>  // b.any
   24904:	mov	w25, wzr
   24908:	mov	w24, #0x22                  	// #34
   2490c:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   24910:	add	x27, x20, #0x10
   24914:	b	24948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5024>
   24918:	ldr	x9, [x20]
   2491c:	str	w19, [x9, w8, uxtw #2]
   24920:	ldp	w8, w9, [x20, #8]
   24924:	cmp	w8, w9
   24928:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2492c:	add	w8, w8, #0x1
   24930:	str	w8, [x20, #8]
   24934:	add	w26, w26, #0x1
   24938:	mov	w25, wzr
   2493c:	cmp	w26, w28
   24940:	mov	w24, #0x22                  	// #34
   24944:	b.eq	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>  // b.none
   24948:	mov	x0, x21
   2494c:	mov	w1, w26
   24950:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24954:	mov	x24, x0
   24958:	ldr	x0, [sp, #32]
   2495c:	mov	x1, x24
   24960:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   24964:	ldp	w8, w9, [x20, #8]
   24968:	mov	w25, w0
   2496c:	sub	w19, w22, w0
   24970:	cmp	w8, w9
   24974:	b.cs	24a44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5120>  // b.hs, b.nlast
   24978:	ldr	x9, [x20]
   2497c:	str	w19, [x9, w8, uxtw #2]
   24980:	ldp	w8, w9, [x20, #8]
   24984:	cmp	w8, w9
   24988:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   2498c:	add	w8, w8, #0x1
   24990:	cmp	w25, w22
   24994:	str	w8, [x20, #8]
   24998:	b.cc	24934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5010>  // b.lo, b.ul, b.last
   2499c:	ldr	x11, [sp, #24]
   249a0:	ldr	w10, [x11, #72]
   249a4:	ldr	x11, [x11, #56]
   249a8:	cbz	w10, 24a08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50e4>
   249ac:	ldr	x12, [x24]
   249b0:	orr	x13, x12, #0x8
   249b4:	cmn	x13, #0x8
   249b8:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   249bc:	ubfx	x13, x12, #4, #28
   249c0:	eor	w14, w13, w12, lsr #9
   249c4:	sub	w13, w10, #0x1
   249c8:	and	w14, w14, w13
   249cc:	add	x15, x11, w14, uxtw #4
   249d0:	ldr	x16, [x15]
   249d4:	cmp	x16, x12
   249d8:	b.eq	24a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50e8>  // b.none
   249dc:	mov	w17, #0x1                   	// #1
   249e0:	cmn	x16, #0x8
   249e4:	b.eq	24a08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50e4>  // b.none
   249e8:	add	w14, w14, w17
   249ec:	and	w14, w14, w13
   249f0:	add	x15, x11, w14, uxtw #4
   249f4:	ldr	x16, [x15]
   249f8:	add	w17, w17, #0x1
   249fc:	cmp	x16, x12
   24a00:	b.eq	24a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50e8>  // b.none
   24a04:	b	249e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50bc>
   24a08:	add	x15, x11, x10, lsl #4
   24a0c:	add	x10, x11, x10, lsl #4
   24a10:	cmp	x15, x10
   24a14:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   24a18:	ldr	w10, [x15, #8]
   24a1c:	cmp	w8, w9
   24a20:	sub	w19, w10, #0x1
   24a24:	b.cc	24918 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ff4>  // b.lo, b.ul, b.last
   24a28:	mov	w3, #0x4                   	// #4
   24a2c:	mov	x0, x20
   24a30:	mov	x1, x27
   24a34:	mov	x2, xzr
   24a38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24a3c:	ldr	w8, [x20, #8]
   24a40:	b	24918 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ff4>
   24a44:	mov	w3, #0x4                   	// #4
   24a48:	mov	x0, x20
   24a4c:	mov	x1, x27
   24a50:	mov	x2, xzr
   24a54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24a58:	ldr	w8, [x20, #8]
   24a5c:	b	24978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5054>
   24a60:	add	x15, x11, x10, lsl #4
   24a64:	add	x10, x11, x10, lsl #4
   24a68:	cmp	x15, x10
   24a6c:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   24a70:	ldr	w10, [x15, #8]
   24a74:	cmp	w8, w9
   24a78:	sub	w19, w10, #0x1
   24a7c:	b.cs	25b70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x624c>  // b.hs, b.nlast
   24a80:	ldr	x9, [x20]
   24a84:	str	w19, [x9, w8, uxtw #2]
   24a88:	ldp	w8, w9, [x20, #8]
   24a8c:	cmp	w8, w9
   24a90:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24a94:	mov	w25, wzr
   24a98:	add	w8, w8, #0x1
   24a9c:	str	w8, [x20, #8]
   24aa0:	ldr	x11, [sp, #24]
   24aa4:	ldr	w10, [x11, #72]
   24aa8:	ldr	x11, [x11, #56]
   24aac:	cbz	w10, 24b0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51e8>
   24ab0:	ldr	x12, [x21]
   24ab4:	orr	x13, x12, #0x8
   24ab8:	cmn	x13, #0x8
   24abc:	b.eq	25c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62e0>  // b.none
   24ac0:	ubfx	x13, x12, #4, #28
   24ac4:	eor	w14, w13, w12, lsr #9
   24ac8:	sub	w13, w10, #0x1
   24acc:	and	w14, w14, w13
   24ad0:	add	x15, x11, w14, uxtw #4
   24ad4:	ldr	x16, [x15]
   24ad8:	cmp	x16, x12
   24adc:	b.eq	24b10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51ec>  // b.none
   24ae0:	mov	w17, #0x1                   	// #1
   24ae4:	cmn	x16, #0x8
   24ae8:	b.eq	24b0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51e8>  // b.none
   24aec:	add	w14, w14, w17
   24af0:	and	w14, w14, w13
   24af4:	add	x15, x11, w14, uxtw #4
   24af8:	ldr	x16, [x15]
   24afc:	add	w17, w17, #0x1
   24b00:	cmp	x16, x12
   24b04:	b.eq	24b10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51ec>  // b.none
   24b08:	b	24ae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51c0>
   24b0c:	add	x15, x11, x10, lsl #4
   24b10:	add	x10, x11, x10, lsl #4
   24b14:	cmp	x15, x10
   24b18:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   24b1c:	ldr	w10, [x15, #8]
   24b20:	cmp	w8, w9
   24b24:	sub	w19, w10, #0x1
   24b28:	b.cs	25ac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x61a4>  // b.hs, b.nlast
   24b2c:	ldr	x9, [x20]
   24b30:	str	w19, [x9, w8, uxtw #2]
   24b34:	ldp	w8, w9, [x20, #8]
   24b38:	cmp	w8, w9
   24b3c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24b40:	add	w8, w8, #0x1
   24b44:	str	w8, [x20, #8]
   24b48:	ldrb	w10, [x27]
   24b4c:	sub	w10, w10, #0x3e
   24b50:	cmp	w10, #0xd
   24b54:	b.cs	26104 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x67e0>  // b.hs, b.nlast
   24b58:	cmp	w8, w9
   24b5c:	and	w19, w10, #0xff
   24b60:	b.cs	25ae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x61c0>  // b.hs, b.nlast
   24b64:	ldr	x9, [x20]
   24b68:	str	w19, [x9, w8, uxtw #2]
   24b6c:	ldp	w8, w9, [x20, #8]
   24b70:	cmp	w8, w9
   24b74:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24b78:	add	w8, w8, #0x1
   24b7c:	str	w8, [x20, #8]
   24b80:	mov	w24, #0x3                   	// #3
   24b84:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   24b88:	add	x15, x11, x10, lsl #4
   24b8c:	add	x10, x11, x10, lsl #4
   24b90:	cmp	x15, x10
   24b94:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   24b98:	ldr	w10, [x15, #8]
   24b9c:	cmp	w8, w9
   24ba0:	sub	w19, w10, #0x1
   24ba4:	b.cs	25b8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6268>  // b.hs, b.nlast
   24ba8:	ldr	x9, [x20]
   24bac:	str	w19, [x9, w8, uxtw #2]
   24bb0:	ldp	w8, w9, [x20, #8]
   24bb4:	cmp	w8, w9
   24bb8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24bbc:	mov	w25, wzr
   24bc0:	add	w8, w8, #0x1
   24bc4:	str	w8, [x20, #8]
   24bc8:	ldr	w9, [x21, #20]
   24bcc:	and	x8, x9, #0xfffffff
   24bd0:	cmp	w8, #0x1
   24bd4:	b.ls	25be4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62c0>  // b.plast
   24bd8:	tbnz	w9, #30, 24bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x52c8>
   24bdc:	mov	w9, #0x18                  	// #24
   24be0:	mneg	x8, x8, x9
   24be4:	add	x8, x21, x8
   24be8:	b	24bf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x52cc>
   24bec:	ldur	x8, [x21, #-8]
   24bf0:	ldr	x1, [x8, #24]
   24bf4:	mov	x0, x22
   24bf8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   24bfc:	ldp	w8, w9, [x20, #8]
   24c00:	sub	w19, w23, w0
   24c04:	cmp	w8, w9
   24c08:	b.cs	25b00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x61dc>  // b.hs, b.nlast
   24c0c:	ldr	x9, [x20]
   24c10:	str	w19, [x9, w8, uxtw #2]
   24c14:	ldp	w8, w9, [x20, #8]
   24c18:	cmp	w8, w9
   24c1c:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24c20:	add	w8, w8, #0x1
   24c24:	str	w8, [x20, #8]
   24c28:	ldrb	w10, [x27]
   24c2c:	sub	w10, w10, #0x25
   24c30:	cmp	w10, #0x12
   24c34:	b.cs	2611c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x67f8>  // b.hs, b.nlast
   24c38:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24c3c:	sxtb	x10, w10
   24c40:	add	x11, x11, #0x0
   24c44:	ldr	w19, [x11, x10, lsl #2]
   24c48:	cmp	w8, w9
   24c4c:	b.cs	25b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x61f8>  // b.hs, b.nlast
   24c50:	ldr	x9, [x20]
   24c54:	str	w19, [x9, w8, uxtw #2]
   24c58:	ldp	w8, w9, [x20, #8]
   24c5c:	cmp	w8, w9
   24c60:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24c64:	add	w8, w8, #0x1
   24c68:	mov	x0, x21
   24c6c:	str	w8, [x20, #8]
   24c70:	bl	148f8 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   24c74:	cbz	x0, 24cb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x538c>
   24c78:	ldp	w8, w9, [x20, #8]
   24c7c:	cmp	w25, #0x7
   24c80:	mov	w10, #0x8                   	// #8
   24c84:	mov	x21, x0
   24c88:	csel	w25, w10, w25, eq  // eq = none
   24c8c:	cmp	w8, w9
   24c90:	b.cs	25b54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6230>  // b.hs, b.nlast
   24c94:	ldr	x9, [x20]
   24c98:	str	w21, [x9, w8, uxtw #2]
   24c9c:	ldp	w8, w9, [x20, #8]
   24ca0:	cmp	w8, w9
   24ca4:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24ca8:	add	w8, w8, #0x1
   24cac:	str	w8, [x20, #8]
   24cb0:	mov	w24, #0x2                   	// #2
   24cb4:	b	24cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53d8>
   24cb8:	add	x15, x11, x10, lsl #4
   24cbc:	add	x10, x11, x10, lsl #4
   24cc0:	cmp	x15, x10
   24cc4:	b.eq	25c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6300>  // b.none
   24cc8:	ldr	w10, [x15, #8]
   24ccc:	cmp	w8, w9
   24cd0:	sub	w19, w10, #0x1
   24cd4:	b.cs	25ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6284>  // b.hs, b.nlast
   24cd8:	ldr	x9, [x20]
   24cdc:	str	w19, [x9, w8, uxtw #2]
   24ce0:	ldp	w8, w9, [x20, #8]
   24ce4:	cmp	w8, w9
   24ce8:	b.cs	25bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62a0>  // b.hs, b.nlast
   24cec:	add	w8, w8, #0x1
   24cf0:	mov	w25, wzr
   24cf4:	str	w8, [x20, #8]
   24cf8:	mov	w24, #0xa                   	// #10
   24cfc:	ldr	x8, [sp, #24]
   24d00:	mov	w1, w24
   24d04:	mov	x2, x20
   24d08:	mov	w3, w25
   24d0c:	ldr	x0, [x8]
   24d10:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24d14:	str	wzr, [x20, #8]
   24d18:	add	sp, sp, #0x440
   24d1c:	ldp	x20, x19, [sp, #80]
   24d20:	ldp	x22, x21, [sp, #64]
   24d24:	ldp	x24, x23, [sp, #48]
   24d28:	ldp	x26, x25, [sp, #32]
   24d2c:	ldp	x28, x27, [sp, #16]
   24d30:	ldp	x29, x30, [sp], #96
   24d34:	ret
   24d38:	add	x1, x20, #0x10
   24d3c:	mov	w3, #0x4                   	// #4
   24d40:	mov	x0, x20
   24d44:	mov	x2, xzr
   24d48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24d4c:	ldr	w8, [x20, #8]
   24d50:	b	1f9c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x9c>
   24d54:	add	x1, x20, #0x10
   24d58:	mov	w3, #0x4                   	// #4
   24d5c:	mov	x0, x20
   24d60:	mov	x2, xzr
   24d64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24d68:	ldr	w8, [x20, #8]
   24d6c:	b	1f9f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xcc>
   24d70:	add	x1, x20, #0x10
   24d74:	mov	w3, #0x4                   	// #4
   24d78:	mov	x0, x20
   24d7c:	mov	x2, xzr
   24d80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24d84:	ldr	w8, [x20, #8]
   24d88:	b	202a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x980>
   24d8c:	add	x1, x20, #0x10
   24d90:	mov	w3, #0x4                   	// #4
   24d94:	mov	x0, x20
   24d98:	mov	x2, xzr
   24d9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24da0:	ldr	w8, [x20, #8]
   24da4:	b	21e5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2538>
   24da8:	add	x1, x20, #0x10
   24dac:	mov	w3, #0x4                   	// #4
   24db0:	mov	x0, x20
   24db4:	mov	x2, xzr
   24db8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24dbc:	ldr	w8, [x20, #8]
   24dc0:	b	21e98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2574>
   24dc4:	add	x1, x20, #0x10
   24dc8:	mov	w3, #0x4                   	// #4
   24dcc:	mov	x0, x20
   24dd0:	mov	x2, xzr
   24dd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24dd8:	ldr	w8, [x20, #8]
   24ddc:	b	21ed0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x25ac>
   24de0:	add	x1, x20, #0x10
   24de4:	mov	w3, #0x4                   	// #4
   24de8:	mov	x0, x20
   24dec:	mov	x2, xzr
   24df0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24df4:	ldr	w8, [x20, #8]
   24df8:	b	1fce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3bc>
   24dfc:	add	x1, x20, #0x10
   24e00:	mov	w3, #0x4                   	// #4
   24e04:	mov	x0, x20
   24e08:	mov	x2, xzr
   24e0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24e10:	ldr	w8, [x20, #8]
   24e14:	b	1fd28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x404>
   24e18:	add	x1, x20, #0x10
   24e1c:	mov	w3, #0x4                   	// #4
   24e20:	mov	x0, x20
   24e24:	mov	x2, xzr
   24e28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24e2c:	ldr	w8, [x20, #8]
   24e30:	b	20044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x720>
   24e34:	add	x1, x20, #0x10
   24e38:	mov	w3, #0x4                   	// #4
   24e3c:	mov	x0, x20
   24e40:	mov	x2, xzr
   24e44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24e48:	ldr	w8, [x20, #8]
   24e4c:	b	20134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x810>
   24e50:	add	x1, x20, #0x10
   24e54:	mov	w3, #0x4                   	// #4
   24e58:	mov	x0, x20
   24e5c:	mov	x2, xzr
   24e60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24e64:	ldr	w9, [x20, #8]
   24e68:	b	20220 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x8fc>
   24e6c:	add	x1, x20, #0x10
   24e70:	mov	w3, #0x4                   	// #4
   24e74:	mov	x0, x20
   24e78:	mov	x2, xzr
   24e7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24e80:	ldr	w8, [x20, #8]
   24e84:	b	20254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x930>
   24e88:	add	x1, x20, #0x10
   24e8c:	mov	w3, #0x4                   	// #4
   24e90:	mov	x0, x20
   24e94:	mov	x2, xzr
   24e98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24e9c:	ldr	w8, [x20, #8]
   24ea0:	b	2038c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xa68>
   24ea4:	add	x1, x20, #0x10
   24ea8:	mov	w3, #0x4                   	// #4
   24eac:	mov	x0, x20
   24eb0:	mov	x2, xzr
   24eb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24eb8:	ldr	w8, [x20, #8]
   24ebc:	b	204b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xb94>
   24ec0:	add	x1, x20, #0x10
   24ec4:	mov	w3, #0x4                   	// #4
   24ec8:	mov	x0, x20
   24ecc:	mov	x2, xzr
   24ed0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24ed4:	ldr	w8, [x20, #8]
   24ed8:	b	2056c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc48>
   24edc:	add	x1, x20, #0x10
   24ee0:	mov	w3, #0x4                   	// #4
   24ee4:	mov	x0, x20
   24ee8:	mov	x2, xzr
   24eec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24ef0:	ldr	w8, [x20, #8]
   24ef4:	b	20628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xd04>
   24ef8:	add	x1, x20, #0x10
   24efc:	mov	w3, #0x4                   	// #4
   24f00:	mov	x0, x20
   24f04:	mov	x2, xzr
   24f08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24f0c:	ldr	w8, [x20, #8]
   24f10:	b	206e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xdc4>
   24f14:	add	x1, x20, #0x10
   24f18:	mov	w3, #0x4                   	// #4
   24f1c:	mov	x0, x20
   24f20:	mov	x2, xzr
   24f24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24f28:	ldr	w8, [x20, #8]
   24f2c:	b	207a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xe7c>
   24f30:	add	x1, x20, #0x10
   24f34:	mov	w3, #0x4                   	// #4
   24f38:	mov	x0, x20
   24f3c:	mov	x2, xzr
   24f40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24f44:	ldr	w8, [x20, #8]
   24f48:	b	208c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xfa4>
   24f4c:	add	x1, x20, #0x10
   24f50:	mov	w3, #0x4                   	// #4
   24f54:	mov	x0, x20
   24f58:	mov	x2, xzr
   24f5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24f60:	ldr	w8, [x20, #8]
   24f64:	b	2091c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xff8>
   24f68:	add	x1, x20, #0x10
   24f6c:	mov	w3, #0x4                   	// #4
   24f70:	mov	x0, x20
   24f74:	mov	x2, xzr
   24f78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24f7c:	ldr	w8, [x20, #8]
   24f80:	b	209d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x10b0>
   24f84:	add	x1, x20, #0x10
   24f88:	mov	w3, #0x4                   	// #4
   24f8c:	mov	x0, x20
   24f90:	mov	x2, xzr
   24f94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24f98:	ldr	w8, [x20, #8]
   24f9c:	b	20b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1248>
   24fa0:	add	x1, x20, #0x10
   24fa4:	mov	w3, #0x4                   	// #4
   24fa8:	mov	x0, x20
   24fac:	mov	x2, xzr
   24fb0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24fb4:	ldr	w8, [x20, #8]
   24fb8:	b	20c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12fc>
   24fbc:	add	x1, x20, #0x10
   24fc0:	mov	w3, #0x4                   	// #4
   24fc4:	mov	x0, x20
   24fc8:	mov	x2, xzr
   24fcc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24fd0:	ldr	w8, [x20, #8]
   24fd4:	b	20c70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x134c>
   24fd8:	add	x1, x20, #0x10
   24fdc:	mov	w3, #0x4                   	// #4
   24fe0:	mov	x0, x20
   24fe4:	mov	x2, xzr
   24fe8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24fec:	ldr	w8, [x20, #8]
   24ff0:	b	20cb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x138c>
   24ff4:	add	x1, x20, #0x10
   24ff8:	mov	w3, #0x4                   	// #4
   24ffc:	mov	x0, x20
   25000:	mov	x2, xzr
   25004:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25008:	ldr	w8, [x20, #8]
   2500c:	b	20d8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1468>
   25010:	add	x1, x20, #0x10
   25014:	mov	w3, #0x4                   	// #4
   25018:	mov	x0, x20
   2501c:	mov	x2, xzr
   25020:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25024:	ldr	w8, [x20, #8]
   25028:	b	20e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1520>
   2502c:	add	x1, x20, #0x10
   25030:	mov	w3, #0x4                   	// #4
   25034:	mov	x0, x20
   25038:	mov	x2, xzr
   2503c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25040:	ldr	w8, [x20, #8]
   25044:	b	21074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1750>
   25048:	add	x1, x20, #0x10
   2504c:	mov	w3, #0x4                   	// #4
   25050:	mov	x0, x20
   25054:	mov	x2, xzr
   25058:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2505c:	ldr	w8, [x20, #8]
   25060:	b	210a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x177c>
   25064:	add	x1, x20, #0x10
   25068:	mov	w3, #0x4                   	// #4
   2506c:	mov	x0, x20
   25070:	mov	x2, xzr
   25074:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25078:	ldr	w8, [x20, #8]
   2507c:	b	210cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17a8>
   25080:	add	x1, x20, #0x10
   25084:	mov	w3, #0x4                   	// #4
   25088:	mov	x0, x20
   2508c:	mov	x2, xzr
   25090:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25094:	ldr	w8, [x20, #8]
   25098:	b	2134c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a28>
   2509c:	add	x1, x20, #0x10
   250a0:	mov	w3, #0x4                   	// #4
   250a4:	mov	x0, x20
   250a8:	mov	x2, xzr
   250ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   250b0:	ldr	w8, [x20, #8]
   250b4:	b	213a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a84>
   250b8:	add	x1, x20, #0x10
   250bc:	mov	w3, #0x4                   	// #4
   250c0:	mov	x0, x20
   250c4:	mov	x2, xzr
   250c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   250cc:	ldr	w8, [x20, #8]
   250d0:	b	21450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b2c>
   250d4:	add	x1, x20, #0x10
   250d8:	mov	w3, #0x4                   	// #4
   250dc:	mov	x0, x20
   250e0:	mov	x2, xzr
   250e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   250e8:	ldr	w8, [x20, #8]
   250ec:	b	21674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d50>
   250f0:	add	x1, x20, #0x10
   250f4:	mov	w3, #0x4                   	// #4
   250f8:	mov	x0, x20
   250fc:	mov	x2, xzr
   25100:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25104:	ldr	w8, [x20, #8]
   25108:	b	21748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e24>
   2510c:	add	x1, x20, #0x10
   25110:	mov	w3, #0x4                   	// #4
   25114:	mov	x0, x20
   25118:	mov	x2, xzr
   2511c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25120:	ldr	w8, [x20, #8]
   25124:	b	217a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e80>
   25128:	add	x1, x20, #0x10
   2512c:	mov	w3, #0x4                   	// #4
   25130:	mov	x0, x20
   25134:	mov	x2, xzr
   25138:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2513c:	ldr	w8, [x20, #8]
   25140:	b	218a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f80>
   25144:	add	x1, x20, #0x10
   25148:	mov	w3, #0x4                   	// #4
   2514c:	mov	x0, x20
   25150:	mov	x2, xzr
   25154:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25158:	ldr	w8, [x20, #8]
   2515c:	b	21900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1fdc>
   25160:	add	x1, x20, #0x10
   25164:	mov	w3, #0x4                   	// #4
   25168:	mov	x0, x20
   2516c:	mov	x2, xzr
   25170:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25174:	ldr	w8, [x20, #8]
   25178:	b	21970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x204c>
   2517c:	add	x1, x20, #0x10
   25180:	mov	w3, #0x4                   	// #4
   25184:	mov	x0, x20
   25188:	mov	x2, xzr
   2518c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25190:	ldr	w8, [x20, #8]
   25194:	b	21b20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21fc>
   25198:	add	x1, x20, #0x10
   2519c:	mov	w3, #0x4                   	// #4
   251a0:	mov	x0, x20
   251a4:	mov	x2, xzr
   251a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   251ac:	ldr	w8, [x20, #8]
   251b0:	b	21b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2258>
   251b4:	add	x1, x20, #0x10
   251b8:	mov	w3, #0x4                   	// #4
   251bc:	mov	x0, x20
   251c0:	mov	x2, xzr
   251c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   251c8:	ldr	w8, [x20, #8]
   251cc:	b	21bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22c8>
   251d0:	add	x1, x20, #0x10
   251d4:	mov	w3, #0x4                   	// #4
   251d8:	mov	x0, x20
   251dc:	mov	x2, xzr
   251e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   251e4:	ldr	w8, [x20, #8]
   251e8:	b	21c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2310>
   251ec:	add	x1, x20, #0x10
   251f0:	mov	w3, #0x4                   	// #4
   251f4:	mov	x0, x20
   251f8:	mov	x2, xzr
   251fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25200:	ldr	w8, [x20, #8]
   25204:	b	21dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24d8>
   25208:	add	x1, x20, #0x10
   2520c:	mov	w3, #0x4                   	// #4
   25210:	mov	x0, x20
   25214:	mov	x2, xzr
   25218:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2521c:	ldr	w8, [x20, #8]
   25220:	b	21f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2618>
   25224:	add	x1, x20, #0x10
   25228:	mov	w3, #0x4                   	// #4
   2522c:	mov	x0, x20
   25230:	mov	x2, xzr
   25234:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25238:	ldr	w8, [x20, #8]
   2523c:	b	2242c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2b08>
   25240:	add	x1, x20, #0x10
   25244:	mov	w3, #0x4                   	// #4
   25248:	mov	x0, x20
   2524c:	mov	x2, xzr
   25250:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25254:	ldr	w8, [x20, #8]
   25258:	b	22590 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c6c>
   2525c:	add	x1, x20, #0x10
   25260:	mov	w3, #0x4                   	// #4
   25264:	mov	x0, x20
   25268:	mov	x2, xzr
   2526c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25270:	ldr	w8, [x20, #8]
   25274:	b	225d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2cac>
   25278:	add	x1, x20, #0x10
   2527c:	mov	w3, #0x4                   	// #4
   25280:	mov	x0, x20
   25284:	mov	x2, xzr
   25288:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2528c:	ldr	w8, [x20, #8]
   25290:	b	22608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ce4>
   25294:	add	x1, x20, #0x10
   25298:	mov	w3, #0x4                   	// #4
   2529c:	mov	x0, x20
   252a0:	mov	x2, xzr
   252a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   252a8:	ldr	w8, [x20, #8]
   252ac:	b	22658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d34>
   252b0:	add	x1, x20, #0x10
   252b4:	mov	w3, #0x4                   	// #4
   252b8:	mov	x0, x20
   252bc:	mov	x2, xzr
   252c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   252c4:	ldr	w8, [x20, #8]
   252c8:	b	2268c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d68>
   252cc:	add	x1, x20, #0x10
   252d0:	mov	w3, #0x4                   	// #4
   252d4:	mov	x0, x20
   252d8:	mov	x2, xzr
   252dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   252e0:	ldr	w8, [x20, #8]
   252e4:	b	22794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e70>
   252e8:	add	x1, x20, #0x10
   252ec:	mov	w3, #0x4                   	// #4
   252f0:	mov	x0, x20
   252f4:	mov	x2, xzr
   252f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   252fc:	ldr	w8, [x20, #8]
   25300:	b	227fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ed8>
   25304:	add	x1, x20, #0x10
   25308:	mov	w3, #0x4                   	// #4
   2530c:	mov	x0, x20
   25310:	mov	x2, xzr
   25314:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25318:	ldr	w8, [x20, #8]
   2531c:	b	22834 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2f10>
   25320:	add	x1, x20, #0x10
   25324:	mov	w3, #0x4                   	// #4
   25328:	mov	x0, x20
   2532c:	mov	x2, xzr
   25330:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25334:	ldr	w8, [x20, #8]
   25338:	b	229b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3090>
   2533c:	add	x1, x20, #0x10
   25340:	mov	w3, #0x4                   	// #4
   25344:	mov	x0, x20
   25348:	mov	x2, xzr
   2534c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25350:	ldr	w8, [x20, #8]
   25354:	b	22a18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x30f4>
   25358:	add	x1, x20, #0x10
   2535c:	mov	w3, #0x4                   	// #4
   25360:	mov	x0, x20
   25364:	mov	x2, xzr
   25368:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2536c:	ldr	w8, [x20, #8]
   25370:	b	22b28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3204>
   25374:	add	x1, x20, #0x10
   25378:	mov	w3, #0x4                   	// #4
   2537c:	mov	x0, x20
   25380:	mov	x2, xzr
   25384:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25388:	ldr	w8, [x20, #8]
   2538c:	b	22b90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x326c>
   25390:	add	x1, x20, #0x10
   25394:	mov	w3, #0x4                   	// #4
   25398:	mov	x0, x20
   2539c:	mov	x2, xzr
   253a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   253a4:	ldr	w8, [x20, #8]
   253a8:	b	22c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x335c>
   253ac:	add	x1, x20, #0x10
   253b0:	mov	w3, #0x4                   	// #4
   253b4:	mov	x0, x20
   253b8:	mov	x2, xzr
   253bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   253c0:	ldr	w8, [x20, #8]
   253c4:	b	22d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3444>
   253c8:	add	x1, x20, #0x10
   253cc:	mov	w3, #0x4                   	// #4
   253d0:	mov	x0, x20
   253d4:	mov	x2, xzr
   253d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   253dc:	ldr	w8, [x20, #8]
   253e0:	b	22dc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34a4>
   253e4:	add	x1, x20, #0x10
   253e8:	mov	w3, #0x4                   	// #4
   253ec:	mov	x0, x20
   253f0:	mov	x2, xzr
   253f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   253f8:	ldr	w8, [x20, #8]
   253fc:	b	22e78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3554>
   25400:	add	x1, x20, #0x10
   25404:	mov	w3, #0x4                   	// #4
   25408:	mov	x0, x20
   2540c:	mov	x2, xzr
   25410:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25414:	ldr	w8, [x20, #8]
   25418:	b	22f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3668>
   2541c:	add	x1, x20, #0x10
   25420:	mov	w3, #0x4                   	// #4
   25424:	mov	x0, x20
   25428:	mov	x2, xzr
   2542c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25430:	ldr	w8, [x20, #8]
   25434:	b	23328 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a04>
   25438:	add	x1, x20, #0x10
   2543c:	mov	w3, #0x4                   	// #4
   25440:	mov	x0, x20
   25444:	mov	x2, xzr
   25448:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2544c:	ldr	w8, [x20, #8]
   25450:	b	23440 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3b1c>
   25454:	add	x1, x20, #0x10
   25458:	mov	w3, #0x4                   	// #4
   2545c:	mov	x0, x20
   25460:	mov	x2, xzr
   25464:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25468:	ldr	w8, [x20, #8]
   2546c:	b	23478 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3b54>
   25470:	add	x1, x20, #0x10
   25474:	mov	w3, #0x4                   	// #4
   25478:	mov	x0, x20
   2547c:	mov	x2, xzr
   25480:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25484:	ldr	w8, [x20, #8]
   25488:	b	235c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ca0>
   2548c:	add	x1, x20, #0x10
   25490:	mov	w3, #0x4                   	// #4
   25494:	mov	x0, x20
   25498:	mov	x2, xzr
   2549c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   254a0:	ldr	w8, [x20, #8]
   254a4:	b	235fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3cd8>
   254a8:	add	x1, x20, #0x10
   254ac:	mov	w3, #0x4                   	// #4
   254b0:	mov	x0, x20
   254b4:	mov	x2, xzr
   254b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   254bc:	ldr	w8, [x20, #8]
   254c0:	b	2364c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3d28>
   254c4:	add	x1, x20, #0x10
   254c8:	mov	w3, #0x4                   	// #4
   254cc:	mov	x0, x20
   254d0:	mov	x2, xzr
   254d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   254d8:	ldr	w8, [x20, #8]
   254dc:	b	23680 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3d5c>
   254e0:	add	x1, x20, #0x10
   254e4:	mov	w3, #0x4                   	// #4
   254e8:	mov	x0, x20
   254ec:	mov	x2, xzr
   254f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   254f4:	ldr	w8, [x20, #8]
   254f8:	b	236c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3da4>
   254fc:	add	x1, x20, #0x10
   25500:	mov	w3, #0x4                   	// #4
   25504:	mov	x0, x20
   25508:	mov	x2, xzr
   2550c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25510:	ldr	w8, [x20, #8]
   25514:	b	23700 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ddc>
   25518:	add	x1, x20, #0x10
   2551c:	mov	w3, #0x4                   	// #4
   25520:	mov	x0, x20
   25524:	mov	x2, xzr
   25528:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2552c:	ldr	w8, [x20, #8]
   25530:	b	238b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f90>
   25534:	add	x1, x20, #0x10
   25538:	mov	w3, #0x4                   	// #4
   2553c:	mov	x0, x20
   25540:	mov	x2, xzr
   25544:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25548:	ldr	w8, [x20, #8]
   2554c:	b	238e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3fc4>
   25550:	add	x1, x20, #0x10
   25554:	mov	w3, #0x4                   	// #4
   25558:	mov	x0, x20
   2555c:	mov	x2, xzr
   25560:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25564:	ldr	w8, [x20, #8]
   25568:	b	23940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x401c>
   2556c:	add	x1, x20, #0x10
   25570:	mov	w3, #0x4                   	// #4
   25574:	mov	x0, x20
   25578:	mov	x2, xzr
   2557c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25580:	ldr	w8, [x20, #8]
   25584:	b	23968 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4044>
   25588:	add	x1, x20, #0x10
   2558c:	mov	w3, #0x4                   	// #4
   25590:	mov	x0, x20
   25594:	mov	x2, xzr
   25598:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2559c:	ldr	w9, [x20, #8]
   255a0:	b	23abc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4198>
   255a4:	add	x1, x20, #0x10
   255a8:	mov	w3, #0x4                   	// #4
   255ac:	mov	x0, x20
   255b0:	mov	x2, xzr
   255b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   255b8:	ldr	w8, [x20, #8]
   255bc:	b	23af8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x41d4>
   255c0:	add	x1, x20, #0x10
   255c4:	mov	w3, #0x4                   	// #4
   255c8:	mov	x0, x20
   255cc:	mov	x2, xzr
   255d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   255d4:	ldr	w8, [x20, #8]
   255d8:	b	23f58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4634>
   255dc:	add	x1, x20, #0x10
   255e0:	mov	w3, #0x4                   	// #4
   255e4:	mov	x0, x20
   255e8:	mov	x2, xzr
   255ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   255f0:	ldr	w8, [x20, #8]
   255f4:	b	23f88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4664>
   255f8:	add	x1, x20, #0x10
   255fc:	mov	w3, #0x4                   	// #4
   25600:	mov	x0, x20
   25604:	mov	x2, xzr
   25608:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2560c:	ldr	w8, [x20, #8]
   25610:	b	23fd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x46ac>
   25614:	add	x1, x20, #0x10
   25618:	mov	w3, #0x4                   	// #4
   2561c:	mov	x0, x20
   25620:	mov	x2, xzr
   25624:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25628:	ldr	w8, [x20, #8]
   2562c:	b	24018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x46f4>
   25630:	add	x1, x20, #0x10
   25634:	mov	w3, #0x4                   	// #4
   25638:	mov	x0, x20
   2563c:	mov	x2, xzr
   25640:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25644:	ldr	w8, [x20, #8]
   25648:	b	240bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4798>
   2564c:	add	x1, x20, #0x10
   25650:	mov	w3, #0x4                   	// #4
   25654:	mov	x0, x20
   25658:	mov	x2, xzr
   2565c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25660:	ldr	w8, [x20, #8]
   25664:	b	240f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x47d4>
   25668:	add	x1, x20, #0x10
   2566c:	mov	w3, #0x4                   	// #4
   25670:	mov	x0, x20
   25674:	mov	x2, xzr
   25678:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2567c:	ldr	w8, [x20, #8]
   25680:	b	2455c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c38>
   25684:	add	x1, x20, #0x10
   25688:	mov	w3, #0x4                   	// #4
   2568c:	mov	x0, x20
   25690:	mov	x2, xzr
   25694:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25698:	ldr	w8, [x20, #8]
   2569c:	b	245e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4cbc>
   256a0:	add	x1, x20, #0x10
   256a4:	mov	w3, #0x4                   	// #4
   256a8:	mov	x0, x20
   256ac:	mov	x2, xzr
   256b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   256b4:	ldr	w8, [x20, #8]
   256b8:	b	246ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d88>
   256bc:	add	x1, x20, #0x10
   256c0:	mov	w3, #0x4                   	// #4
   256c4:	mov	x0, x20
   256c8:	mov	x2, xzr
   256cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   256d0:	ldr	w8, [x20, #8]
   256d4:	b	246ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4dc8>
   256d8:	add	x1, x20, #0x10
   256dc:	mov	w3, #0x4                   	// #4
   256e0:	mov	x0, x20
   256e4:	mov	x2, xzr
   256e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   256ec:	ldr	w8, [x20, #8]
   256f0:	b	22cc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33a0>
   256f4:	add	x1, x20, #0x10
   256f8:	mov	w3, #0x4                   	// #4
   256fc:	mov	x0, x20
   25700:	mov	x2, xzr
   25704:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25708:	ldr	w8, [x20, #8]
   2570c:	b	230bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3798>
   25710:	add	x1, x20, #0x10
   25714:	mov	w3, #0x4                   	// #4
   25718:	mov	x0, x20
   2571c:	mov	x2, xzr
   25720:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25724:	ldr	w8, [x20, #8]
   25728:	b	24608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ce4>
   2572c:	add	x0, sp, #0x28
   25730:	mov	w3, #0x8                   	// #8
   25734:	mov	x1, x20
   25738:	mov	x2, xzr
   2573c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25740:	ldr	w8, [sp, #48]
   25744:	b	215f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1cd4>
   25748:	add	x1, x20, #0x10
   2574c:	mov	w3, #0x4                   	// #4
   25750:	mov	x0, x20
   25754:	mov	x2, xzr
   25758:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2575c:	ldr	w8, [x20, #8]
   25760:	b	20f14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x15f0>
   25764:	add	x1, x20, #0x10
   25768:	mov	w3, #0x4                   	// #4
   2576c:	mov	x0, x20
   25770:	mov	x2, xzr
   25774:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25778:	ldr	w8, [x20, #8]
   2577c:	b	21f94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2670>
   25780:	add	x1, x20, #0x10
   25784:	mov	w3, #0x4                   	// #4
   25788:	mov	x0, x20
   2578c:	mov	x2, xzr
   25790:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25794:	ldr	w8, [x20, #8]
   25798:	b	21fdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x26b8>
   2579c:	add	x1, x20, #0x10
   257a0:	mov	w3, #0x4                   	// #4
   257a4:	mov	x0, x20
   257a8:	mov	x2, xzr
   257ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   257b0:	ldr	w8, [x20, #8]
   257b4:	b	22200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x28dc>
   257b8:	add	x1, x20, #0x10
   257bc:	mov	w3, #0x4                   	// #4
   257c0:	mov	x0, x20
   257c4:	mov	x2, xzr
   257c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   257cc:	ldr	w8, [x20, #8]
   257d0:	b	223c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2aa0>
   257d4:	add	x1, x20, #0x10
   257d8:	mov	w3, #0x4                   	// #4
   257dc:	mov	x0, x20
   257e0:	mov	x2, xzr
   257e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   257e8:	ldr	w8, [x20, #8]
   257ec:	b	224e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bc4>
   257f0:	add	x1, x20, #0x10
   257f4:	mov	w3, #0x4                   	// #4
   257f8:	mov	x0, x20
   257fc:	mov	x2, xzr
   25800:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25804:	ldr	w8, [x20, #8]
   25808:	b	22530 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c0c>
   2580c:	add	x1, x20, #0x10
   25810:	mov	w3, #0x4                   	// #4
   25814:	mov	x0, x20
   25818:	mov	x2, xzr
   2581c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25820:	ldr	w8, [x20, #8]
   25824:	b	226d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2db0>
   25828:	add	x1, x20, #0x10
   2582c:	mov	w3, #0x4                   	// #4
   25830:	mov	x0, x20
   25834:	mov	x2, xzr
   25838:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2583c:	ldr	w8, [x20, #8]
   25840:	b	228a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2f7c>
   25844:	add	x1, x20, #0x10
   25848:	mov	w3, #0x4                   	// #4
   2584c:	mov	x0, x20
   25850:	mov	x2, xzr
   25854:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25858:	ldr	w8, [x20, #8]
   2585c:	b	228d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fb0>
   25860:	add	x1, x20, #0x10
   25864:	mov	w3, #0x4                   	// #4
   25868:	mov	x0, x20
   2586c:	mov	x2, xzr
   25870:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25874:	ldr	w8, [x20, #8]
   25878:	b	2290c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fe8>
   2587c:	add	x1, x20, #0x10
   25880:	mov	w3, #0x4                   	// #4
   25884:	mov	x0, x20
   25888:	mov	x2, xzr
   2588c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25890:	ldr	w8, [x20, #8]
   25894:	b	22954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3030>
   25898:	add	x1, x20, #0x10
   2589c:	mov	w3, #0x4                   	// #4
   258a0:	mov	x0, x20
   258a4:	mov	x2, xzr
   258a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   258ac:	ldr	w8, [x20, #8]
   258b0:	b	22ac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x31a4>
   258b4:	add	x1, x20, #0x10
   258b8:	mov	w3, #0x4                   	// #4
   258bc:	mov	x0, x20
   258c0:	mov	x2, xzr
   258c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   258c8:	ldr	w8, [x20, #8]
   258cc:	b	22c4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3328>
   258d0:	add	x1, x20, #0x10
   258d4:	mov	w3, #0x4                   	// #4
   258d8:	mov	x0, x20
   258dc:	mov	x2, xzr
   258e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   258e4:	ldr	w8, [x20, #8]
   258e8:	b	22d08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33e4>
   258ec:	add	x1, x20, #0x10
   258f0:	mov	w3, #0x4                   	// #4
   258f4:	mov	x0, x20
   258f8:	mov	x2, xzr
   258fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25900:	ldr	w8, [x20, #8]
   25904:	b	22e10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34ec>
   25908:	add	x1, x20, #0x10
   2590c:	mov	w3, #0x4                   	// #4
   25910:	mov	x0, x20
   25914:	mov	x2, xzr
   25918:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2591c:	ldr	w8, [x20, #8]
   25920:	b	22f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3604>
   25924:	add	x1, x20, #0x10
   25928:	mov	w3, #0x4                   	// #4
   2592c:	mov	x0, x20
   25930:	mov	x2, xzr
   25934:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25938:	ldr	w8, [x20, #8]
   2593c:	b	2303c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3718>
   25940:	add	x1, x20, #0x10
   25944:	mov	w3, #0x4                   	// #4
   25948:	mov	x0, x20
   2594c:	mov	x2, xzr
   25950:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25954:	ldr	w8, [x20, #8]
   25958:	b	23084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3760>
   2595c:	add	x1, x20, #0x10
   25960:	mov	w3, #0x4                   	// #4
   25964:	mov	x0, x20
   25968:	mov	x2, xzr
   2596c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25970:	ldr	w8, [x20, #8]
   25974:	b	23110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37ec>
   25978:	add	x1, x20, #0x10
   2597c:	mov	w3, #0x4                   	// #4
   25980:	mov	x0, x20
   25984:	mov	x2, xzr
   25988:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2598c:	ldr	w9, [x20, #8]
   25990:	b	23158 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3834>
   25994:	add	x1, x20, #0x10
   25998:	mov	w3, #0x4                   	// #4
   2599c:	mov	x0, x20
   259a0:	mov	x2, xzr
   259a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   259a8:	ldr	w9, [x20, #8]
   259ac:	b	2320c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38e8>
   259b0:	add	x1, x20, #0x10
   259b4:	mov	w3, #0x4                   	// #4
   259b8:	mov	x0, x20
   259bc:	mov	x2, xzr
   259c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   259c4:	ldr	w8, [x20, #8]
   259c8:	b	232c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x399c>
   259cc:	add	x1, x20, #0x10
   259d0:	mov	w3, #0x4                   	// #4
   259d4:	mov	x0, x20
   259d8:	mov	x2, xzr
   259dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   259e0:	ldr	w8, [x20, #8]
   259e4:	b	233d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ab4>
   259e8:	add	x1, x20, #0x10
   259ec:	mov	w3, #0x4                   	// #4
   259f0:	mov	x0, x20
   259f4:	mov	x2, xzr
   259f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   259fc:	ldr	w8, [x20, #8]
   25a00:	b	234e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3bc0>
   25a04:	add	x1, x20, #0x10
   25a08:	mov	w3, #0x4                   	// #4
   25a0c:	mov	x0, x20
   25a10:	mov	x2, xzr
   25a14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25a18:	ldr	w8, [x20, #8]
   25a1c:	b	23518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3bf4>
   25a20:	add	x1, x20, #0x10
   25a24:	mov	w3, #0x4                   	// #4
   25a28:	mov	x0, x20
   25a2c:	mov	x2, xzr
   25a30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25a34:	ldr	w8, [x20, #8]
   25a38:	b	23564 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c40>
   25a3c:	add	x1, x20, #0x10
   25a40:	mov	w3, #0x4                   	// #4
   25a44:	mov	x0, x20
   25a48:	mov	x2, xzr
   25a4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25a50:	ldr	w8, [x20, #8]
   25a54:	b	23ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4284>
   25a58:	add	x1, x20, #0x10
   25a5c:	mov	w3, #0x4                   	// #4
   25a60:	mov	x0, x20
   25a64:	mov	x2, xzr
   25a68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25a6c:	ldr	w8, [x20, #8]
   25a70:	b	241a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4884>
   25a74:	add	x1, x20, #0x10
   25a78:	mov	w3, #0x4                   	// #4
   25a7c:	mov	x0, x20
   25a80:	mov	x2, xzr
   25a84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25a88:	ldr	w8, [x20, #8]
   25a8c:	b	2479c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e78>
   25a90:	add	x1, x20, #0x10
   25a94:	mov	w3, #0x4                   	// #4
   25a98:	mov	x0, x20
   25a9c:	mov	x2, xzr
   25aa0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25aa4:	ldr	w8, [x20, #8]
   25aa8:	b	2224c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2928>
   25aac:	add	x1, x20, #0x10
   25ab0:	mov	w3, #0x4                   	// #4
   25ab4:	mov	x0, x20
   25ab8:	mov	x2, xzr
   25abc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25ac0:	ldr	w8, [x20, #8]
   25ac4:	b	222a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x297c>
   25ac8:	add	x1, x20, #0x10
   25acc:	mov	w3, #0x4                   	// #4
   25ad0:	mov	x0, x20
   25ad4:	mov	x2, xzr
   25ad8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25adc:	ldr	w8, [x20, #8]
   25ae0:	b	24b2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5208>
   25ae4:	add	x1, x20, #0x10
   25ae8:	mov	w3, #0x4                   	// #4
   25aec:	mov	x0, x20
   25af0:	mov	x2, xzr
   25af4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25af8:	ldr	w8, [x20, #8]
   25afc:	b	24b64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5240>
   25b00:	add	x1, x20, #0x10
   25b04:	mov	w3, #0x4                   	// #4
   25b08:	mov	x0, x20
   25b0c:	mov	x2, xzr
   25b10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25b14:	ldr	w8, [x20, #8]
   25b18:	b	24c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x52e8>
   25b1c:	add	x1, x20, #0x10
   25b20:	mov	w3, #0x4                   	// #4
   25b24:	mov	x0, x20
   25b28:	mov	x2, xzr
   25b2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25b30:	ldr	w8, [x20, #8]
   25b34:	b	24c50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x532c>
   25b38:	add	x1, x20, #0x10
   25b3c:	mov	w3, #0x4                   	// #4
   25b40:	mov	x0, x20
   25b44:	mov	x2, xzr
   25b48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25b4c:	ldr	w8, [x20, #8]
   25b50:	b	2374c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e28>
   25b54:	add	x1, x20, #0x10
   25b58:	mov	w3, #0x4                   	// #4
   25b5c:	mov	x0, x20
   25b60:	mov	x2, xzr
   25b64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25b68:	ldr	w8, [x20, #8]
   25b6c:	b	24c94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5370>
   25b70:	add	x1, x20, #0x10
   25b74:	mov	w3, #0x4                   	// #4
   25b78:	mov	x0, x20
   25b7c:	mov	x2, xzr
   25b80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25b84:	ldr	w8, [x20, #8]
   25b88:	b	24a80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x515c>
   25b8c:	add	x1, x20, #0x10
   25b90:	mov	w3, #0x4                   	// #4
   25b94:	mov	x0, x20
   25b98:	mov	x2, xzr
   25b9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25ba0:	ldr	w8, [x20, #8]
   25ba4:	b	24ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5284>
   25ba8:	add	x1, x20, #0x10
   25bac:	mov	w3, #0x4                   	// #4
   25bb0:	mov	x0, x20
   25bb4:	mov	x2, xzr
   25bb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25bbc:	ldr	w8, [x20, #8]
   25bc0:	b	24cd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53b4>
   25bc4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25bc8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25bcc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25bd0:	add	x0, x0, #0x0
   25bd4:	add	x1, x1, #0x0
   25bd8:	add	x3, x3, #0x0
   25bdc:	mov	w2, #0x43                  	// #67
   25be0:	bl	0 <__assert_fail>
   25be4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25be8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25bec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25bf0:	add	x0, x0, #0x0
   25bf4:	add	x1, x1, #0x0
   25bf8:	add	x3, x3, #0x0
   25bfc:	mov	w2, #0xaa                  	// #170
   25c00:	bl	0 <__assert_fail>
   25c04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c10:	add	x0, x0, #0x0
   25c14:	add	x1, x1, #0x0
   25c18:	add	x3, x3, #0x0
   25c1c:	mov	w2, #0x252                 	// #594
   25c20:	bl	0 <__assert_fail>
   25c24:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c28:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c2c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c30:	add	x0, x0, #0x0
   25c34:	add	x1, x1, #0x0
   25c38:	add	x3, x3, #0x0
   25c3c:	mov	w2, #0xa9                  	// #169
   25c40:	bl	0 <__assert_fail>
   25c44:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c48:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c4c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c50:	add	x0, x0, #0x0
   25c54:	add	x1, x1, #0x0
   25c58:	add	x3, x3, #0x0
   25c5c:	mov	w2, #0x8b0                 	// #2224
   25c60:	bl	0 <__assert_fail>
   25c64:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c68:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c6c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c70:	add	x0, x0, #0x0
   25c74:	add	x1, x1, #0x0
   25c78:	add	x3, x3, #0x0
   25c7c:	mov	w2, #0xdbe                 	// #3518
   25c80:	bl	0 <__assert_fail>
   25c84:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c8c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c90:	add	x0, x0, #0x0
   25c94:	add	x1, x1, #0x0
   25c98:	add	x3, x3, #0x0
   25c9c:	mov	w2, #0xc79                 	// #3193
   25ca0:	bl	0 <__assert_fail>
   25ca4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ca8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25cac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25cb0:	add	x0, x0, #0x0
   25cb4:	add	x1, x1, #0x0
   25cb8:	add	x3, x3, #0x0
   25cbc:	mov	w2, #0xc81                 	// #3201
   25cc0:	bl	0 <__assert_fail>
   25cc4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25cc8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ccc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25cd0:	add	x0, x0, #0x0
   25cd4:	add	x1, x1, #0x0
   25cd8:	add	x3, x3, #0x0
   25cdc:	mov	w2, #0xcd4                 	// #3284
   25ce0:	bl	0 <__assert_fail>
   25ce4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ce8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25cec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25cf0:	add	x0, x0, #0x0
   25cf4:	add	x1, x1, #0x0
   25cf8:	add	x3, x3, #0x0
   25cfc:	mov	w2, #0x69                  	// #105
   25d00:	bl	0 <__assert_fail>
   25d04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d10:	add	x0, x0, #0x0
   25d14:	add	x1, x1, #0x0
   25d18:	add	x3, x3, #0x0
   25d1c:	mov	w2, #0x108                 	// #264
   25d20:	bl	0 <__assert_fail>
   25d24:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d28:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d2c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d30:	add	x0, x0, #0x0
   25d34:	add	x1, x1, #0x0
   25d38:	add	x3, x3, #0x0
   25d3c:	mov	w2, #0x69                  	// #105
   25d40:	bl	0 <__assert_fail>
   25d44:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d48:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d4c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d50:	add	x0, x0, #0x0
   25d54:	add	x1, x1, #0x0
   25d58:	add	x3, x3, #0x0
   25d5c:	mov	w2, #0x5b                  	// #91
   25d60:	bl	0 <__assert_fail>
   25d64:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d68:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d6c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d70:	add	x0, x0, #0x0
   25d74:	add	x1, x1, #0x0
   25d78:	add	x3, x3, #0x0
   25d7c:	mov	w2, #0xfa                  	// #250
   25d80:	bl	0 <__assert_fail>
   25d84:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d8c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25d90:	add	x0, x0, #0x0
   25d94:	add	x1, x1, #0x0
   25d98:	add	x3, x3, #0x0
   25d9c:	mov	w2, #0xadf                 	// #2783
   25da0:	bl	0 <__assert_fail>
   25da4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25da8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25dac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25db0:	add	x0, x0, #0x0
   25db4:	add	x1, x1, #0x0
   25db8:	add	x3, x3, #0x0
   25dbc:	mov	w2, #0x121                 	// #289
   25dc0:	bl	0 <__assert_fail>
   25dc4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25dc8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25dcc:	add	x0, x0, #0x0
   25dd0:	add	x1, x1, #0x0
   25dd4:	mov	w2, #0x245                 	// #581
   25dd8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   25ddc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25de0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25de4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25de8:	add	x0, x0, #0x0
   25dec:	add	x1, x1, #0x0
   25df0:	add	x3, x3, #0x0
   25df4:	mov	w2, #0x101                 	// #257
   25df8:	bl	0 <__assert_fail>
   25dfc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e00:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e04:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e08:	add	x0, x0, #0x0
   25e0c:	add	x1, x1, #0x0
   25e10:	add	x3, x3, #0x0
   25e14:	mov	w2, #0x5b                  	// #91
   25e18:	bl	0 <__assert_fail>
   25e1c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e20:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e24:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e28:	add	x0, x0, #0x0
   25e2c:	add	x1, x1, #0x0
   25e30:	add	x3, x3, #0x0
   25e34:	mov	w2, #0xfa                  	// #250
   25e38:	bl	0 <__assert_fail>
   25e3c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e40:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e44:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e48:	add	x0, x0, #0x0
   25e4c:	add	x1, x1, #0x0
   25e50:	add	x3, x3, #0x0
   25e54:	mov	w2, #0x101                 	// #257
   25e58:	bl	0 <__assert_fail>
   25e5c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e60:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e64:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e68:	add	x0, x0, #0x0
   25e6c:	add	x1, x1, #0x0
   25e70:	add	x3, x3, #0x0
   25e74:	mov	w2, #0x101                 	// #257
   25e78:	bl	0 <__assert_fail>
   25e7c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e80:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e84:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25e88:	add	x0, x0, #0x0
   25e8c:	add	x1, x1, #0x0
   25e90:	add	x3, x3, #0x0
   25e94:	mov	w2, #0x101                 	// #257
   25e98:	bl	0 <__assert_fail>
   25e9c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ea0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ea4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ea8:	add	x0, x0, #0x0
   25eac:	add	x1, x1, #0x0
   25eb0:	add	x3, x3, #0x0
   25eb4:	mov	w2, #0x252                 	// #594
   25eb8:	bl	0 <__assert_fail>
   25ebc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ec0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ec4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ec8:	add	x0, x0, #0x0
   25ecc:	add	x1, x1, #0x0
   25ed0:	add	x3, x3, #0x0
   25ed4:	mov	w2, #0x101                 	// #257
   25ed8:	bl	0 <__assert_fail>
   25edc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ee0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ee4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ee8:	add	x0, x0, #0x0
   25eec:	add	x1, x1, #0x0
   25ef0:	add	x3, x3, #0x0
   25ef4:	mov	w2, #0xb3                  	// #179
   25ef8:	bl	0 <__assert_fail>
   25efc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f00:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f04:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f08:	add	x0, x0, #0x0
   25f0c:	add	x1, x1, #0x0
   25f10:	add	x3, x3, #0x0
   25f14:	mov	w2, #0xb3                  	// #179
   25f18:	bl	0 <__assert_fail>
   25f1c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f20:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f24:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f28:	add	x0, x0, #0x0
   25f2c:	add	x1, x1, #0x0
   25f30:	add	x3, x3, #0x0
   25f34:	mov	w2, #0x1126                	// #4390
   25f38:	bl	0 <__assert_fail>
   25f3c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f40:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f44:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f48:	add	x0, x0, #0x0
   25f4c:	add	x1, x1, #0x0
   25f50:	add	x3, x3, #0x0
   25f54:	mov	w2, #0x108                 	// #264
   25f58:	bl	0 <__assert_fail>
   25f5c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f60:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f64:	add	x0, x0, #0x0
   25f68:	add	x1, x1, #0x0
   25f6c:	mov	w2, #0x46a                 	// #1130
   25f70:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   25f74:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f78:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f7c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f80:	add	x0, x0, #0x0
   25f84:	add	x1, x1, #0x0
   25f88:	add	x3, x3, #0x0
   25f8c:	mov	w2, #0x5b                  	// #91
   25f90:	bl	0 <__assert_fail>
   25f94:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f98:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f9c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25fa0:	add	x0, x0, #0x0
   25fa4:	add	x1, x1, #0x0
   25fa8:	add	x3, x3, #0x0
   25fac:	mov	w2, #0xfa                  	// #250
   25fb0:	bl	0 <__assert_fail>
   25fb4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25fb8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25fbc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25fc0:	add	x0, x0, #0x0
   25fc4:	add	x1, x1, #0x0
   25fc8:	add	x3, x3, #0x0
   25fcc:	mov	w2, #0x5b                  	// #91
   25fd0:	bl	0 <__assert_fail>
   25fd4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25fd8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25fdc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25fe0:	add	x0, x0, #0x0
   25fe4:	add	x1, x1, #0x0
   25fe8:	add	x3, x3, #0x0
   25fec:	mov	w2, #0xfa                  	// #250
   25ff0:	bl	0 <__assert_fail>
   25ff4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ff8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ffc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26000:	add	x0, x0, #0x0
   26004:	add	x1, x1, #0x0
   26008:	add	x3, x3, #0x0
   2600c:	mov	w2, #0x101                 	// #257
   26010:	bl	0 <__assert_fail>
   26014:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26018:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2601c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26020:	add	x0, x0, #0x0
   26024:	add	x1, x1, #0x0
   26028:	add	x3, x3, #0x0
   2602c:	mov	w2, #0xb69                 	// #2921
   26030:	bl	0 <__assert_fail>
   26034:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26038:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2603c:	add	x0, x0, #0x0
   26040:	add	x1, x1, #0x0
   26044:	mov	w2, #0x22a                 	// #554
   26048:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   2604c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26050:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26054:	add	x0, x0, #0x0
   26058:	add	x1, x1, #0x0
   2605c:	mov	w2, #0x20b                 	// #523
   26060:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   26064:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26068:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2606c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26070:	add	x0, x0, #0x0
   26074:	add	x1, x1, #0x0
   26078:	add	x3, x3, #0x0
   2607c:	mov	w2, #0x108                 	// #264
   26080:	bl	0 <__assert_fail>
   26084:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26088:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2608c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26090:	add	x0, x0, #0x0
   26094:	add	x1, x1, #0x0
   26098:	add	x3, x3, #0x0
   2609c:	mov	w2, #0x108                 	// #264
   260a0:	bl	0 <__assert_fail>
   260a4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   260a8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   260ac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   260b0:	add	x0, x0, #0x0
   260b4:	add	x1, x1, #0x0
   260b8:	add	x3, x3, #0x0
   260bc:	mov	w2, #0x134                 	// #308
   260c0:	bl	0 <__assert_fail>
   260c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   260c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   260cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   260d0:	add	x0, x0, #0x0
   260d4:	add	x1, x1, #0x0
   260d8:	add	x3, x3, #0x0
   260dc:	mov	w2, #0xa39                 	// #2617
   260e0:	bl	0 <__assert_fail>
   260e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   260e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   260ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   260f0:	add	x0, x0, #0x0
   260f4:	add	x1, x1, #0x0
   260f8:	add	x3, x3, #0x0
   260fc:	mov	w2, #0xbf7                 	// #3063
   26100:	bl	0 <__assert_fail>
   26104:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26108:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2610c:	add	x0, x0, #0x0
   26110:	add	x1, x1, #0x0
   26114:	mov	w2, #0x1f8                 	// #504
   26118:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   2611c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26120:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26124:	add	x0, x0, #0x0
   26128:	add	x1, x1, #0x0
   2612c:	mov	w2, #0x212                 	// #530
   26130:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000026134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>:
   26134:	sub	sp, sp, #0x1b0
   26138:	stp	x29, x30, [sp, #336]
   2613c:	stp	x28, x27, [sp, #352]
   26140:	stp	x26, x25, [sp, #368]
   26144:	stp	x24, x23, [sp, #384]
   26148:	stp	x22, x21, [sp, #400]
   2614c:	stp	x20, x19, [sp, #416]
   26150:	add	x29, sp, #0x150
   26154:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26158:	ldr	d0, [x8]
   2615c:	add	x8, sp, #0x30
   26160:	mov	x20, x0
   26164:	add	x8, x8, #0x10
   26168:	and	x0, x1, #0xfffffffffffffff8
   2616c:	mov	w19, w2
   26170:	stur	x1, [x29, #-16]
   26174:	str	x8, [sp, #8]
   26178:	str	x8, [sp, #48]
   2617c:	str	d0, [sp, #56]
   26180:	bl	0 <_ZNK4llvm5Value10getContextEv>
   26184:	str	x0, [sp, #16]
   26188:	sub	x0, x29, #0x10
   2618c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26190:	cbz	w0, 2637c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x248>
   26194:	mov	w23, w0
   26198:	mov	w24, wzr
   2619c:	add	x25, x20, #0x18
   261a0:	b	261c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x94>
   261a4:	ldr	x0, [x20]
   261a8:	add	x2, sp, #0x30
   261ac:	mov	w1, #0x37                  	// #55
   261b0:	mov	w3, wzr
   261b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   261b8:	add	w24, w24, #0x1
   261bc:	cmp	w24, w23
   261c0:	str	wzr, [sp, #56]
   261c4:	b.eq	2637c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x248>  // b.none
   261c8:	add	x8, sp, #0x18
   261cc:	sub	x0, x29, #0x10
   261d0:	mov	w1, w24
   261d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   261d8:	ldr	x1, [sp, #40]
   261dc:	ldr	x2, [x1], #16
   261e0:	ldr	x0, [sp, #16]
   261e4:	bl	0 <_ZNK4llvm11LLVMContext21getOperandBundleTagIDENS_9StringRefE>
   261e8:	ldp	w8, w9, [sp, #56]
   261ec:	mov	w26, w0
   261f0:	cmp	w8, w9
   261f4:	b.cs	26360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x22c>  // b.hs, b.nlast
   261f8:	ldr	x9, [sp, #48]
   261fc:	str	w26, [x9, w8, uxtw #2]
   26200:	ldp	w8, w9, [sp, #56]
   26204:	cmp	w8, w9
   26208:	b.cs	263b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x27c>  // b.hs, b.nlast
   2620c:	ldr	x9, [sp, #32]
   26210:	add	w8, w8, #0x1
   26214:	str	w8, [sp, #56]
   26218:	cbz	x9, 261a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x70>
   2621c:	ldr	x21, [sp, #24]
   26220:	mov	w8, #0x18                  	// #24
   26224:	madd	x28, x9, x8, x21
   26228:	b	26238 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x104>
   2622c:	add	x21, x21, #0x18
   26230:	cmp	x21, x28
   26234:	b.eq	261a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x70>  // b.none
   26238:	ldr	x26, [x21]
   2623c:	mov	x0, x25
   26240:	mov	x1, x26
   26244:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   26248:	ldp	w8, w9, [sp, #56]
   2624c:	mov	w27, w0
   26250:	sub	w22, w19, w0
   26254:	cmp	w8, w9
   26258:	b.cs	26328 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1f4>  // b.hs, b.nlast
   2625c:	ldr	x9, [sp, #48]
   26260:	str	w22, [x9, w8, uxtw #2]
   26264:	ldp	w8, w9, [sp, #56]
   26268:	cmp	w8, w9
   2626c:	b.cs	263b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x27c>  // b.hs, b.nlast
   26270:	add	w8, w8, #0x1
   26274:	cmp	w27, w19
   26278:	str	w8, [sp, #56]
   2627c:	b.cc	2622c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xf8>  // b.lo, b.ul, b.last
   26280:	ldr	w10, [x20, #72]
   26284:	ldr	x11, [x20, #56]
   26288:	cbz	w10, 262e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1b4>
   2628c:	ldr	x12, [x26]
   26290:	orr	x13, x12, #0x8
   26294:	cmn	x13, #0x8
   26298:	b.eq	263d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x29c>  // b.none
   2629c:	ubfx	x13, x12, #4, #28
   262a0:	eor	w14, w13, w12, lsr #9
   262a4:	sub	w13, w10, #0x1
   262a8:	and	w14, w14, w13
   262ac:	add	x15, x11, w14, uxtw #4
   262b0:	ldr	x16, [x15]
   262b4:	cmp	x16, x12
   262b8:	b.eq	262ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1b8>  // b.none
   262bc:	mov	w17, #0x1                   	// #1
   262c0:	cmn	x16, #0x8
   262c4:	b.eq	262e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1b4>  // b.none
   262c8:	add	w14, w14, w17
   262cc:	and	w14, w14, w13
   262d0:	add	x15, x11, w14, uxtw #4
   262d4:	ldr	x16, [x15]
   262d8:	add	w17, w17, #0x1
   262dc:	cmp	x16, x12
   262e0:	b.eq	262ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1b8>  // b.none
   262e4:	b	262c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x18c>
   262e8:	add	x15, x11, x10, lsl #4
   262ec:	add	x10, x11, x10, lsl #4
   262f0:	cmp	x15, x10
   262f4:	b.eq	263f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x2bc>  // b.none
   262f8:	ldr	w10, [x15, #8]
   262fc:	cmp	w8, w9
   26300:	sub	w22, w10, #0x1
   26304:	b.cs	26344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x210>  // b.hs, b.nlast
   26308:	ldr	x9, [sp, #48]
   2630c:	str	w22, [x9, w8, uxtw #2]
   26310:	ldp	w8, w9, [sp, #56]
   26314:	cmp	w8, w9
   26318:	b.cs	263b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x27c>  // b.hs, b.nlast
   2631c:	add	w8, w8, #0x1
   26320:	str	w8, [sp, #56]
   26324:	b	2622c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xf8>
   26328:	ldr	x1, [sp, #8]
   2632c:	add	x0, sp, #0x30
   26330:	mov	w3, #0x4                   	// #4
   26334:	mov	x2, xzr
   26338:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2633c:	ldr	w8, [sp, #56]
   26340:	b	2625c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x128>
   26344:	ldr	x1, [sp, #8]
   26348:	add	x0, sp, #0x30
   2634c:	mov	w3, #0x4                   	// #4
   26350:	mov	x2, xzr
   26354:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26358:	ldr	w8, [sp, #56]
   2635c:	b	26308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1d4>
   26360:	ldr	x1, [sp, #8]
   26364:	add	x0, sp, #0x30
   26368:	mov	w3, #0x4                   	// #4
   2636c:	mov	x2, xzr
   26370:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26374:	ldr	w8, [sp, #56]
   26378:	b	261f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xc4>
   2637c:	ldr	x0, [sp, #48]
   26380:	ldr	x8, [sp, #8]
   26384:	cmp	x0, x8
   26388:	b.eq	26390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x25c>  // b.none
   2638c:	bl	0 <free>
   26390:	ldp	x20, x19, [sp, #416]
   26394:	ldp	x22, x21, [sp, #400]
   26398:	ldp	x24, x23, [sp, #384]
   2639c:	ldp	x26, x25, [sp, #368]
   263a0:	ldp	x28, x27, [sp, #352]
   263a4:	ldp	x29, x30, [sp, #336]
   263a8:	add	sp, sp, #0x1b0
   263ac:	ret
   263b0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   263b4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   263b8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   263bc:	add	x0, x0, #0x0
   263c0:	add	x1, x1, #0x0
   263c4:	add	x3, x3, #0x0
   263c8:	mov	w2, #0x43                  	// #67
   263cc:	bl	0 <__assert_fail>
   263d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   263d4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   263d8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   263dc:	add	x0, x0, #0x0
   263e0:	add	x1, x1, #0x0
   263e4:	add	x3, x3, #0x0
   263e8:	mov	w2, #0x252                 	// #594
   263ec:	bl	0 <__assert_fail>
   263f0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   263f4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   263f8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   263fc:	add	x0, x0, #0x0
   26400:	add	x1, x1, #0x0
   26404:	add	x3, x3, #0x0
   26408:	mov	w2, #0xa9                  	// #169
   2640c:	bl	0 <__assert_fail>

0000000000026410 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE>:
   26410:	stp	x29, x30, [sp, #-64]!
   26414:	stp	x28, x23, [sp, #16]
   26418:	stp	x22, x21, [sp, #32]
   2641c:	stp	x20, x19, [sp, #48]
   26420:	mov	x29, sp
   26424:	sub	sp, sp, #0x210
   26428:	ldr	x8, [x1, #104]
   2642c:	mov	x21, x1
   26430:	mov	x19, x0
   26434:	cbz	x8, 26464 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x54>
   26438:	ldp	x9, x10, [x8]
   2643c:	subs	x10, x10, x9
   26440:	b.eq	26464 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x54>  // b.none
   26444:	asr	x8, x10, #3
   26448:	mov	x2, sp
   2644c:	mov	w1, #0xb                   	// #11
   26450:	mov	x0, x19
   26454:	mov	w3, wzr
   26458:	stp	x9, x8, [sp]
   2645c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26460:	ldr	x8, [x21, #104]
   26464:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26468:	ldr	d0, [x9]
   2646c:	mov	x9, sp
   26470:	add	x20, x9, #0x10
   26474:	str	x20, [sp]
   26478:	str	d0, [sp, #8]
   2647c:	cbz	x8, 267d0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   26480:	ldp	x22, x9, [x8, #24]
   26484:	subs	x9, x9, x22
   26488:	b.eq	26550 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x140>  // b.none
   2648c:	mov	w8, wzr
   26490:	add	x23, x22, x9
   26494:	mov	w9, #0x40                  	// #64
   26498:	str	wzr, [sp, #8]
   2649c:	cmp	w8, w9
   264a0:	b.cs	264fc <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0xec>  // b.hs, b.nlast
   264a4:	ldr	x9, [sp]
   264a8:	ldr	x10, [x22]
   264ac:	str	x10, [x9, w8, uxtw #3]
   264b0:	ldp	w8, w9, [sp, #8]
   264b4:	cmp	w8, w9
   264b8:	b.cs	267f8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   264bc:	add	w8, w8, #0x1
   264c0:	cmp	w8, w9
   264c4:	str	w8, [sp, #8]
   264c8:	b.cs	26518 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x108>  // b.hs, b.nlast
   264cc:	ldr	x9, [sp]
   264d0:	ldr	x10, [x22, #8]
   264d4:	str	x10, [x9, w8, uxtw #3]
   264d8:	ldp	w8, w9, [sp, #8]
   264dc:	cmp	w8, w9
   264e0:	b.cs	267f8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   264e4:	add	x22, x22, #0x10
   264e8:	add	w8, w8, #0x1
   264ec:	cmp	x22, x23
   264f0:	str	w8, [sp, #8]
   264f4:	b.ne	2649c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x8c>  // b.any
   264f8:	b	26534 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x124>
   264fc:	mov	x0, sp
   26500:	mov	w3, #0x8                   	// #8
   26504:	mov	x1, x20
   26508:	mov	x2, xzr
   2650c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26510:	ldr	w8, [sp, #8]
   26514:	b	264a4 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x94>
   26518:	mov	x0, sp
   2651c:	mov	w3, #0x8                   	// #8
   26520:	mov	x1, x20
   26524:	mov	x2, xzr
   26528:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2652c:	ldr	w8, [sp, #8]
   26530:	b	264cc <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0xbc>
   26534:	mov	x2, sp
   26538:	mov	w1, #0xc                   	// #12
   2653c:	mov	x0, x19
   26540:	mov	w3, wzr
   26544:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26548:	ldr	x8, [x21, #104]
   2654c:	cbz	x8, 267d0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   26550:	ldp	x22, x9, [x8, #48]
   26554:	subs	x10, x9, x22
   26558:	b.eq	26620 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x210>  // b.none
   2655c:	ldr	w9, [sp, #12]
   26560:	mov	w8, wzr
   26564:	add	x23, x22, x10
   26568:	str	wzr, [sp, #8]
   2656c:	cmp	w8, w9
   26570:	b.cs	265cc <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1bc>  // b.hs, b.nlast
   26574:	ldr	x9, [sp]
   26578:	ldr	x10, [x22]
   2657c:	str	x10, [x9, w8, uxtw #3]
   26580:	ldp	w8, w9, [sp, #8]
   26584:	cmp	w8, w9
   26588:	b.cs	267f8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   2658c:	add	w8, w8, #0x1
   26590:	cmp	w8, w9
   26594:	str	w8, [sp, #8]
   26598:	b.cs	265e8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1d8>  // b.hs, b.nlast
   2659c:	ldr	x9, [sp]
   265a0:	ldr	x10, [x22, #8]
   265a4:	str	x10, [x9, w8, uxtw #3]
   265a8:	ldp	w8, w9, [sp, #8]
   265ac:	cmp	w8, w9
   265b0:	b.cs	267f8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   265b4:	add	x22, x22, #0x10
   265b8:	add	w8, w8, #0x1
   265bc:	cmp	x22, x23
   265c0:	str	w8, [sp, #8]
   265c4:	b.ne	2656c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x15c>  // b.any
   265c8:	b	26604 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1f4>
   265cc:	mov	x0, sp
   265d0:	mov	w3, #0x8                   	// #8
   265d4:	mov	x1, x20
   265d8:	mov	x2, xzr
   265dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   265e0:	ldr	w8, [sp, #8]
   265e4:	b	26574 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x164>
   265e8:	mov	x0, sp
   265ec:	mov	w3, #0x8                   	// #8
   265f0:	mov	x1, x20
   265f4:	mov	x2, xzr
   265f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   265fc:	ldr	w8, [sp, #8]
   26600:	b	2659c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x18c>
   26604:	mov	x2, sp
   26608:	mov	w1, #0xd                   	// #13
   2660c:	mov	x0, x19
   26610:	mov	w3, wzr
   26614:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26618:	ldr	x8, [x21, #104]
   2661c:	cbz	x8, 267d0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   26620:	ldp	x22, x23, [x8, #72]
   26624:	cmp	x23, x22
   26628:	b.eq	266fc <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2ec>  // b.none
   2662c:	ldr	w9, [sp, #12]
   26630:	mov	w8, wzr
   26634:	str	wzr, [sp, #8]
   26638:	cbz	w9, 266bc <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2ac>
   2663c:	ldr	x9, [sp]
   26640:	ldr	x10, [x22]
   26644:	str	x10, [x9, w8, uxtw #3]
   26648:	ldp	w8, w9, [sp, #8]
   2664c:	cmp	w8, w9
   26650:	b.cs	267f8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   26654:	add	w8, w8, #0x1
   26658:	cmp	w8, w9
   2665c:	str	w8, [sp, #8]
   26660:	b.cs	266d8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2c8>  // b.hs, b.nlast
   26664:	ldr	x9, [sp]
   26668:	ldr	x10, [x22, #8]
   2666c:	str	x10, [x9, w8, uxtw #3]
   26670:	ldp	w8, w9, [sp, #8]
   26674:	cmp	w8, w9
   26678:	b.cs	267f8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   2667c:	add	x8, x8, #0x1
   26680:	ldr	x9, [sp]
   26684:	str	w8, [sp, #8]
   26688:	ldp	x2, x3, [x22, #16]
   2668c:	mov	x0, sp
   26690:	add	x1, x9, x8, lsl #3
   26694:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26698:	mov	x2, sp
   2669c:	mov	w1, #0xe                   	// #14
   266a0:	mov	x0, x19
   266a4:	mov	w3, wzr
   266a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   266ac:	add	x22, x22, #0x28
   266b0:	cmp	x22, x23
   266b4:	b.ne	2662c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x21c>  // b.any
   266b8:	b	266f4 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2e4>
   266bc:	mov	x0, sp
   266c0:	mov	w3, #0x8                   	// #8
   266c4:	mov	x1, x20
   266c8:	mov	x2, xzr
   266cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   266d0:	ldr	w8, [sp, #8]
   266d4:	b	2663c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x22c>
   266d8:	mov	x0, sp
   266dc:	mov	w3, #0x8                   	// #8
   266e0:	mov	x1, x20
   266e4:	mov	x2, xzr
   266e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   266ec:	ldr	w8, [sp, #8]
   266f0:	b	26664 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x254>
   266f4:	ldr	x8, [x21, #104]
   266f8:	cbz	x8, 267d0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   266fc:	ldp	x21, x22, [x8, #96]
   26700:	cmp	x22, x21
   26704:	b.eq	267d0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>  // b.none
   26708:	ldr	w9, [sp, #12]
   2670c:	mov	w8, wzr
   26710:	str	wzr, [sp, #8]
   26714:	cbz	w9, 26798 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x388>
   26718:	ldr	x9, [sp]
   2671c:	ldr	x10, [x21]
   26720:	str	x10, [x9, w8, uxtw #3]
   26724:	ldp	w8, w9, [sp, #8]
   26728:	cmp	w8, w9
   2672c:	b.cs	267f8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   26730:	add	w8, w8, #0x1
   26734:	cmp	w8, w9
   26738:	str	w8, [sp, #8]
   2673c:	b.cs	267b4 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3a4>  // b.hs, b.nlast
   26740:	ldr	x9, [sp]
   26744:	ldr	x10, [x21, #8]
   26748:	str	x10, [x9, w8, uxtw #3]
   2674c:	ldp	w8, w9, [sp, #8]
   26750:	cmp	w8, w9
   26754:	b.cs	267f8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   26758:	add	x8, x8, #0x1
   2675c:	ldr	x9, [sp]
   26760:	str	w8, [sp, #8]
   26764:	ldp	x2, x3, [x21, #16]
   26768:	mov	x0, sp
   2676c:	add	x1, x9, x8, lsl #3
   26770:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26774:	mov	x2, sp
   26778:	mov	w1, #0xf                   	// #15
   2677c:	mov	x0, x19
   26780:	mov	w3, wzr
   26784:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26788:	add	x21, x21, #0x28
   2678c:	cmp	x21, x22
   26790:	b.ne	26708 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2f8>  // b.any
   26794:	b	267d0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   26798:	mov	x0, sp
   2679c:	mov	w3, #0x8                   	// #8
   267a0:	mov	x1, x20
   267a4:	mov	x2, xzr
   267a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   267ac:	ldr	w8, [sp, #8]
   267b0:	b	26718 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x308>
   267b4:	mov	x0, sp
   267b8:	mov	w3, #0x8                   	// #8
   267bc:	mov	x1, x20
   267c0:	mov	x2, xzr
   267c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   267c8:	ldr	w8, [sp, #8]
   267cc:	b	26740 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x330>
   267d0:	ldr	x0, [sp]
   267d4:	cmp	x0, x20
   267d8:	b.eq	267e0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3d0>  // b.none
   267dc:	bl	0 <free>
   267e0:	add	sp, sp, #0x210
   267e4:	ldp	x20, x19, [sp, #48]
   267e8:	ldp	x22, x21, [sp, #32]
   267ec:	ldp	x28, x23, [sp, #16]
   267f0:	ldp	x29, x30, [sp], #64
   267f4:	ret
   267f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   267fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26800:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26804:	add	x0, x0, #0x0
   26808:	add	x1, x1, #0x0
   2680c:	add	x3, x3, #0x0
   26810:	mov	w2, #0x43                  	// #67
   26814:	bl	0 <__assert_fail>

0000000000026818 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv>:
   26818:	str	d8, [sp, #-112]!
   2681c:	stp	x29, x30, [sp, #16]
   26820:	stp	x28, x27, [sp, #32]
   26824:	stp	x26, x25, [sp, #48]
   26828:	stp	x24, x23, [sp, #64]
   2682c:	stp	x22, x21, [sp, #80]
   26830:	stp	x20, x19, [sp, #96]
   26834:	mov	x29, sp
   26838:	sub	sp, sp, #0x640
   2683c:	mov	x27, x0
   26840:	ldr	x0, [x0]
   26844:	mov	w1, #0x14                  	// #20
   26848:	mov	w2, #0x3                   	// #3
   2684c:	add	x23, sp, #0x310
   26850:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26854:	ldr	x0, [x27]
   26858:	mov	w8, #0x8                   	// #8
   2685c:	add	x19, sp, #0xe0
   26860:	mov	w20, #0x1                   	// #1
   26864:	add	x2, sp, #0x310
   26868:	mov	w1, #0xa                   	// #10
   2686c:	mov	w3, wzr
   26870:	str	x8, [sp, #224]
   26874:	str	x19, [sp, #784]
   26878:	str	x20, [sp, #792]
   2687c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26880:	ldr	x8, [x27, #16]
   26884:	ldr	x0, [x27]
   26888:	add	x2, sp, #0x310
   2688c:	mov	w1, #0x14                  	// #20
   26890:	ldrb	w9, [x8, #227]
   26894:	ldrb	w10, [x8, #224]
   26898:	ldrb	w11, [x8, #226]
   2689c:	mov	w3, wzr
   268a0:	cmp	w9, #0x0
   268a4:	orr	x9, x10, #0x2
   268a8:	csel	x9, x10, x9, eq  // eq = none
   268ac:	ldrb	w10, [x8, #229]
   268b0:	cmp	w11, #0x0
   268b4:	orr	x11, x9, #0x4
   268b8:	csel	x9, x9, x11, eq  // eq = none
   268bc:	ldrb	w11, [x8, #230]
   268c0:	cmp	w10, #0x0
   268c4:	orr	x10, x9, #0x8
   268c8:	ldrb	w8, [x8, #225]
   268cc:	csel	x9, x9, x10, eq  // eq = none
   268d0:	cmp	w11, #0x0
   268d4:	orr	x10, x9, #0x10
   268d8:	csel	x9, x9, x10, eq  // eq = none
   268dc:	cmp	w8, #0x0
   268e0:	orr	x8, x9, #0x20
   268e4:	csel	x8, x9, x8, eq  // eq = none
   268e8:	str	x8, [sp, #224]
   268ec:	str	x19, [sp, #784]
   268f0:	str	x20, [sp, #792]
   268f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   268f8:	ldr	x20, [x27, #56]
   268fc:	add	x21, x27, #0x28
   26900:	cmp	x20, x21
   26904:	b.eq	2694c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x134>  // b.none
   26908:	mov	w22, #0x2                   	// #2
   2690c:	ldr	w8, [x20, #40]
   26910:	ldr	x0, [x27]
   26914:	add	x2, sp, #0x310
   26918:	mov	w1, #0x10                  	// #16
   2691c:	str	x8, [sp, #224]
   26920:	ldr	x8, [x20, #32]
   26924:	mov	w3, wzr
   26928:	str	x19, [sp, #784]
   2692c:	str	x22, [sp, #792]
   26930:	str	x8, [sp, #232]
   26934:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26938:	mov	x0, x20
   2693c:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
   26940:	mov	x20, x0
   26944:	cmp	x0, x21
   26948:	b.ne	2690c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf4>  // b.any
   2694c:	mov	w0, #0x220                 	// #544
   26950:	bl	0 <_Znwm>
   26954:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26958:	ldr	x24, [x24]
   2695c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26960:	ldr	d8, [x8]
   26964:	movi	v0.2s, #0x1
   26968:	add	x10, x24, #0x10
   2696c:	str	x10, [x0]
   26970:	ldr	w8, [sp, #784]
   26974:	ldur	w10, [x23, #3]
   26978:	str	d0, [x0, #8]
   2697c:	movi	v0.2d, #0x0
   26980:	mov	x22, x0
   26984:	mov	x21, x0
   26988:	mov	x25, x0
   2698c:	mov	w9, #0x4                   	// #4
   26990:	stp	q0, q0, [x0, #48]
   26994:	stp	q0, q0, [x0, #80]
   26998:	stp	q0, q0, [x0, #112]
   2699c:	stp	q0, q0, [x0, #144]
   269a0:	stp	q0, q0, [x0, #176]
   269a4:	stp	q0, q0, [x0, #208]
   269a8:	stp	q0, q0, [x0, #240]
   269ac:	stp	q0, q0, [x0, #272]
   269b0:	stp	q0, q0, [x0, #304]
   269b4:	stp	q0, q0, [x0, #336]
   269b8:	stp	q0, q0, [x0, #368]
   269bc:	stp	q0, q0, [x0, #400]
   269c0:	stp	q0, q0, [x0, #432]
   269c4:	stp	q0, q0, [x0, #464]
   269c8:	stp	q0, q0, [x0, #496]
   269cc:	str	q0, [x22, #32]!
   269d0:	str	q0, [x0, #528]
   269d4:	str	x22, [x21, #16]!
   269d8:	str	d8, [x25, #24]!
   269dc:	str	x9, [x22]
   269e0:	mov	w9, #0xff                  	// #255
   269e4:	strb	w9, [x0, #40]
   269e8:	str	w10, [x0, #44]
   269ec:	stur	w8, [x0, #41]
   269f0:	ldr	w8, [x25]
   269f4:	ldr	w9, [x0, #28]
   269f8:	cmp	w8, w9
   269fc:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26a00:	add	w8, w8, #0x1
   26a04:	mov	x20, x0
   26a08:	cmp	w8, w9
   26a0c:	str	w8, [x25]
   26a10:	b.cs	288ec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x20d4>  // b.hs, b.nlast
   26a14:	ldr	x9, [x20, #16]
   26a18:	mov	w10, #0x8                   	// #8
   26a1c:	mov	w11, #0x4                   	// #4
   26a20:	add	x8, x9, w8, uxtw #4
   26a24:	str	x10, [x8]
   26a28:	strb	w11, [x8, #8]
   26a2c:	ldur	w9, [x23, #3]
   26a30:	ldr	w10, [sp, #784]
   26a34:	str	w9, [x8, #12]
   26a38:	stur	w10, [x8, #9]
   26a3c:	ldp	w8, w9, [x20, #24]
   26a40:	cmp	w8, w9
   26a44:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26a48:	add	w8, w8, #0x1
   26a4c:	cmp	w8, w9
   26a50:	str	w8, [x25]
   26a54:	b.cs	28908 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x20f0>  // b.hs, b.nlast
   26a58:	ldr	x9, [x20, #16]
   26a5c:	mov	w10, #0x8                   	// #8
   26a60:	mov	w11, #0x4                   	// #4
   26a64:	add	x8, x9, w8, uxtw #4
   26a68:	str	x10, [x8]
   26a6c:	strb	w11, [x8, #8]
   26a70:	ldur	w9, [x23, #3]
   26a74:	ldr	w10, [sp, #784]
   26a78:	str	w9, [x8, #12]
   26a7c:	stur	w10, [x8, #9]
   26a80:	ldp	w8, w9, [x20, #24]
   26a84:	cmp	w8, w9
   26a88:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26a8c:	add	w8, w8, #0x1
   26a90:	cmp	w8, w9
   26a94:	str	w8, [x25]
   26a98:	b.cs	28924 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x210c>  // b.hs, b.nlast
   26a9c:	ldr	x9, [x20, #16]
   26aa0:	mov	w10, #0x6                   	// #6
   26aa4:	mov	w11, #0x4                   	// #4
   26aa8:	add	x8, x9, w8, uxtw #4
   26aac:	str	x10, [x8]
   26ab0:	strb	w11, [x8, #8]
   26ab4:	ldur	w9, [x23, #3]
   26ab8:	ldr	w10, [sp, #784]
   26abc:	str	w9, [x8, #12]
   26ac0:	stur	w10, [x8, #9]
   26ac4:	ldp	w8, w9, [x20, #24]
   26ac8:	cmp	w8, w9
   26acc:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26ad0:	add	w8, w8, #0x1
   26ad4:	cmp	w8, w9
   26ad8:	str	w8, [x25]
   26adc:	b.cs	28940 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2128>  // b.hs, b.nlast
   26ae0:	ldr	x9, [x20, #16]
   26ae4:	mov	w10, #0x8                   	// #8
   26ae8:	mov	w11, #0x4                   	// #4
   26aec:	add	x8, x9, w8, uxtw #4
   26af0:	str	x10, [x8]
   26af4:	strb	w11, [x8, #8]
   26af8:	ldur	w9, [x23, #3]
   26afc:	ldr	w10, [sp, #784]
   26b00:	str	w9, [x8, #12]
   26b04:	stur	w10, [x8, #9]
   26b08:	ldp	w8, w9, [x20, #24]
   26b0c:	cmp	w8, w9
   26b10:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26b14:	add	w8, w8, #0x1
   26b18:	cmp	w8, w9
   26b1c:	str	w8, [x25]
   26b20:	b.cs	2895c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2144>  // b.hs, b.nlast
   26b24:	ldr	x9, [x20, #16]
   26b28:	mov	w10, #0x4                   	// #4
   26b2c:	add	x8, x9, w8, uxtw #4
   26b30:	str	x10, [x8]
   26b34:	strb	w10, [x8, #8]
   26b38:	ldur	w9, [x23, #3]
   26b3c:	ldr	w10, [sp, #784]
   26b40:	str	w9, [x8, #12]
   26b44:	stur	w10, [x8, #9]
   26b48:	ldp	w8, w9, [x20, #24]
   26b4c:	cmp	w8, w9
   26b50:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26b54:	add	w8, w8, #0x1
   26b58:	cmp	w8, w9
   26b5c:	str	w8, [x25]
   26b60:	b.cs	28978 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2160>  // b.hs, b.nlast
   26b64:	ldr	x9, [x20, #16]
   26b68:	mov	w10, #0x8                   	// #8
   26b6c:	mov	w11, #0x4                   	// #4
   26b70:	add	x8, x9, w8, uxtw #4
   26b74:	str	x10, [x8]
   26b78:	strb	w11, [x8, #8]
   26b7c:	ldur	w9, [x23, #3]
   26b80:	ldr	w10, [sp, #784]
   26b84:	str	w9, [x8, #12]
   26b88:	stur	w10, [x8, #9]
   26b8c:	ldp	w8, w9, [x20, #24]
   26b90:	cmp	w8, w9
   26b94:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26b98:	add	w8, w8, #0x1
   26b9c:	cmp	w8, w9
   26ba0:	str	w8, [x25]
   26ba4:	b.cs	28994 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x217c>  // b.hs, b.nlast
   26ba8:	ldr	x9, [x20, #16]
   26bac:	mov	w10, #0x4                   	// #4
   26bb0:	add	x8, x9, w8, uxtw #4
   26bb4:	str	x10, [x8]
   26bb8:	strb	w10, [x8, #8]
   26bbc:	ldur	w9, [x23, #3]
   26bc0:	ldr	w10, [sp, #784]
   26bc4:	str	w9, [x8, #12]
   26bc8:	stur	w10, [x8, #9]
   26bcc:	ldp	w8, w9, [x20, #24]
   26bd0:	cmp	w8, w9
   26bd4:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26bd8:	add	w8, w8, #0x1
   26bdc:	cmp	w8, w9
   26be0:	str	w8, [x25]
   26be4:	b.cs	289b0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2198>  // b.hs, b.nlast
   26be8:	ldr	x9, [x20, #16]
   26bec:	mov	w10, #0x4                   	// #4
   26bf0:	add	x8, x9, w8, uxtw #4
   26bf4:	str	x10, [x8]
   26bf8:	strb	w10, [x8, #8]
   26bfc:	ldur	w9, [x23, #3]
   26c00:	ldr	w10, [sp, #784]
   26c04:	str	w9, [x8, #12]
   26c08:	stur	w10, [x8, #9]
   26c0c:	ldp	w8, w9, [x20, #24]
   26c10:	cmp	w8, w9
   26c14:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26c18:	add	w8, w8, #0x1
   26c1c:	cmp	w8, w9
   26c20:	str	w8, [x25]
   26c24:	b.cs	289cc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x21b4>  // b.hs, b.nlast
   26c28:	ldr	x9, [x20, #16]
   26c2c:	mov	w10, #0x4                   	// #4
   26c30:	add	x8, x9, w8, uxtw #4
   26c34:	str	x10, [x8]
   26c38:	strb	w10, [x8, #8]
   26c3c:	ldur	w9, [x23, #3]
   26c40:	ldr	w10, [sp, #784]
   26c44:	str	w9, [x8, #12]
   26c48:	stur	w10, [x8, #9]
   26c4c:	ldp	w8, w9, [x20, #24]
   26c50:	cmp	w8, w9
   26c54:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26c58:	add	w8, w8, #0x1
   26c5c:	cmp	w8, w9
   26c60:	str	w8, [x25]
   26c64:	b.cs	289e8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x21d0>  // b.hs, b.nlast
   26c68:	ldr	x9, [x20, #16]
   26c6c:	mov	w10, #0x6                   	// #6
   26c70:	add	x8, x9, w8, uxtw #4
   26c74:	str	xzr, [x8]
   26c78:	strb	w10, [x8, #8]
   26c7c:	ldur	w9, [x23, #3]
   26c80:	ldr	w10, [sp, #784]
   26c84:	str	w9, [x8, #12]
   26c88:	stur	w10, [x8, #9]
   26c8c:	ldp	w8, w9, [x20, #24]
   26c90:	cmp	w8, w9
   26c94:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26c98:	add	w8, w8, #0x1
   26c9c:	cmp	w8, w9
   26ca0:	str	w8, [x25]
   26ca4:	b.cs	28a04 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x21ec>  // b.hs, b.nlast
   26ca8:	ldr	x9, [x20, #16]
   26cac:	mov	w10, #0x8                   	// #8
   26cb0:	mov	w11, #0x4                   	// #4
   26cb4:	add	x8, x9, w8, uxtw #4
   26cb8:	str	x10, [x8]
   26cbc:	strb	w11, [x8, #8]
   26cc0:	ldur	w9, [x23, #3]
   26cc4:	ldr	w10, [sp, #784]
   26cc8:	str	w9, [x8, #12]
   26ccc:	stur	w10, [x8, #9]
   26cd0:	ldp	w8, w9, [x20, #24]
   26cd4:	cmp	w8, w9
   26cd8:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26cdc:	add	w8, w8, #0x1
   26ce0:	str	w8, [x20, #24]
   26ce4:	ldr	x22, [x27]
   26ce8:	mov	x1, x21
   26cec:	stp	x21, x20, [x29, #-208]
   26cf0:	mov	x0, x22
   26cf4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26cf8:	ldp	x1, x8, [x22, #32]
   26cfc:	add	x20, x22, #0x18
   26d00:	cmp	x1, x8
   26d04:	b.eq	26d28 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x510>  // b.none
   26d08:	str	xzr, [x1, #8]
   26d0c:	ldur	q0, [x29, #-208]
   26d10:	add	x8, x1, #0x10
   26d14:	stur	xzr, [x29, #-200]
   26d18:	str	q0, [x1]
   26d1c:	stur	xzr, [x29, #-208]
   26d20:	str	x8, [x22, #32]
   26d24:	b	26d38 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x520>
   26d28:	sub	x2, x29, #0xd0
   26d2c:	mov	x0, x20
   26d30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26d34:	ldr	x8, [x22, #32]
   26d38:	ldr	x9, [x20]
   26d3c:	adrp	x25, 0 <__pthread_key_create>
   26d40:	ldur	x20, [x29, #-200]
   26d44:	ldr	x25, [x25]
   26d48:	sub	x8, x8, x9
   26d4c:	lsr	x8, x8, #4
   26d50:	add	w19, w8, #0x3
   26d54:	cbz	x20, 26dd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>
   26d58:	add	x8, x20, #0x8
   26d5c:	cbz	x25, 26d7c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x564>
   26d60:	ldaxr	w9, [x8]
   26d64:	sub	w10, w9, #0x1
   26d68:	stlxr	w11, w10, [x8]
   26d6c:	cbnz	w11, 26d60 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x548>
   26d70:	cmp	w9, #0x1
   26d74:	b.eq	26d90 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x578>  // b.none
   26d78:	b	26dd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>
   26d7c:	ldr	w9, [x8]
   26d80:	sub	w10, w9, #0x1
   26d84:	str	w10, [x8]
   26d88:	cmp	w9, #0x1
   26d8c:	b.ne	26dd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>  // b.any
   26d90:	mov	x21, x20
   26d94:	ldr	x8, [x21], #12
   26d98:	mov	x0, x20
   26d9c:	ldr	x8, [x8, #16]
   26da0:	blr	x8
   26da4:	cbz	x25, 2888c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2074>
   26da8:	ldaxr	w8, [x21]
   26dac:	sub	w9, w8, #0x1
   26db0:	stlxr	w10, w9, [x21]
   26db4:	cbnz	w10, 26da8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x590>
   26db8:	cmp	w8, #0x1
   26dbc:	b.ne	26dd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>  // b.any
   26dc0:	ldr	x8, [x20]
   26dc4:	mov	x0, x20
   26dc8:	ldr	x8, [x8, #24]
   26dcc:	blr	x8
   26dd0:	mov	w0, #0x220                 	// #544
   26dd4:	stur	w19, [x29, #-188]
   26dd8:	bl	0 <_Znwm>
   26ddc:	add	x8, x24, #0x10
   26de0:	movi	v0.2s, #0x1
   26de4:	ldr	w10, [sp, #784]
   26de8:	str	x8, [x0]
   26dec:	ldur	w8, [x23, #3]
   26df0:	str	d0, [x0, #8]
   26df4:	movi	v0.2d, #0x0
   26df8:	mov	x22, x0
   26dfc:	mov	x21, x0
   26e00:	mov	x26, x0
   26e04:	mov	w9, #0x5                   	// #5
   26e08:	stp	q0, q0, [x0, #48]
   26e0c:	stp	q0, q0, [x0, #80]
   26e10:	stp	q0, q0, [x0, #112]
   26e14:	stp	q0, q0, [x0, #144]
   26e18:	stp	q0, q0, [x0, #176]
   26e1c:	stp	q0, q0, [x0, #208]
   26e20:	stp	q0, q0, [x0, #240]
   26e24:	stp	q0, q0, [x0, #272]
   26e28:	stp	q0, q0, [x0, #304]
   26e2c:	stp	q0, q0, [x0, #336]
   26e30:	stp	q0, q0, [x0, #368]
   26e34:	stp	q0, q0, [x0, #400]
   26e38:	stp	q0, q0, [x0, #432]
   26e3c:	stp	q0, q0, [x0, #464]
   26e40:	stp	q0, q0, [x0, #496]
   26e44:	str	q0, [x22, #32]!
   26e48:	str	q0, [x0, #528]
   26e4c:	str	x22, [x21, #16]!
   26e50:	str	d8, [x26, #24]!
   26e54:	str	x9, [x22]
   26e58:	mov	w9, #0xff                  	// #255
   26e5c:	strb	w9, [x0, #40]
   26e60:	str	w8, [x0, #44]
   26e64:	stur	w10, [x0, #41]
   26e68:	ldr	w8, [x26]
   26e6c:	ldr	w9, [x0, #28]
   26e70:	cmp	w8, w9
   26e74:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26e78:	add	w8, w8, #0x1
   26e7c:	mov	x20, x0
   26e80:	cmp	w8, w9
   26e84:	str	w8, [x26]
   26e88:	b.cs	28a20 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2208>  // b.hs, b.nlast
   26e8c:	ldr	x9, [x20, #16]
   26e90:	mov	w10, #0x8                   	// #8
   26e94:	mov	w11, #0x4                   	// #4
   26e98:	add	x8, x9, w8, uxtw #4
   26e9c:	str	x10, [x8]
   26ea0:	strb	w11, [x8, #8]
   26ea4:	ldur	w9, [x23, #3]
   26ea8:	ldr	w10, [sp, #784]
   26eac:	str	w9, [x8, #12]
   26eb0:	stur	w10, [x8, #9]
   26eb4:	ldp	w8, w9, [x20, #24]
   26eb8:	cmp	w8, w9
   26ebc:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26ec0:	add	w8, w8, #0x1
   26ec4:	cmp	w8, w9
   26ec8:	str	w8, [x26]
   26ecc:	b.cs	28a3c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2224>  // b.hs, b.nlast
   26ed0:	ldr	x9, [x20, #16]
   26ed4:	mov	w10, #0x8                   	// #8
   26ed8:	mov	w11, #0x4                   	// #4
   26edc:	add	x8, x9, w8, uxtw #4
   26ee0:	str	x10, [x8]
   26ee4:	strb	w11, [x8, #8]
   26ee8:	ldur	w9, [x23, #3]
   26eec:	ldr	w10, [sp, #784]
   26ef0:	str	w9, [x8, #12]
   26ef4:	stur	w10, [x8, #9]
   26ef8:	ldp	w8, w9, [x20, #24]
   26efc:	cmp	w8, w9
   26f00:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26f04:	add	w8, w8, #0x1
   26f08:	cmp	w8, w9
   26f0c:	str	w8, [x26]
   26f10:	b.cs	28a58 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2240>  // b.hs, b.nlast
   26f14:	ldr	x9, [x20, #16]
   26f18:	mov	w10, #0x6                   	// #6
   26f1c:	mov	w11, #0x4                   	// #4
   26f20:	add	x8, x9, w8, uxtw #4
   26f24:	str	x10, [x8]
   26f28:	strb	w11, [x8, #8]
   26f2c:	ldur	w9, [x23, #3]
   26f30:	ldr	w10, [sp, #784]
   26f34:	str	w9, [x8, #12]
   26f38:	stur	w10, [x8, #9]
   26f3c:	ldp	w8, w9, [x20, #24]
   26f40:	cmp	w8, w9
   26f44:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26f48:	add	w8, w8, #0x1
   26f4c:	cmp	w8, w9
   26f50:	str	w8, [x26]
   26f54:	b.cs	28a74 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x225c>  // b.hs, b.nlast
   26f58:	ldr	x9, [x20, #16]
   26f5c:	mov	w10, #0x8                   	// #8
   26f60:	mov	w11, #0x4                   	// #4
   26f64:	add	x8, x9, w8, uxtw #4
   26f68:	str	x10, [x8]
   26f6c:	strb	w11, [x8, #8]
   26f70:	ldur	w9, [x23, #3]
   26f74:	ldr	w10, [sp, #784]
   26f78:	str	w9, [x8, #12]
   26f7c:	stur	w10, [x8, #9]
   26f80:	ldp	w8, w9, [x20, #24]
   26f84:	cmp	w8, w9
   26f88:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26f8c:	add	w8, w8, #0x1
   26f90:	cmp	w8, w9
   26f94:	str	w8, [x26]
   26f98:	b.cs	28a90 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2278>  // b.hs, b.nlast
   26f9c:	ldr	x9, [x20, #16]
   26fa0:	mov	w10, #0x4                   	// #4
   26fa4:	add	x8, x9, w8, uxtw #4
   26fa8:	str	x10, [x8]
   26fac:	strb	w10, [x8, #8]
   26fb0:	ldur	w9, [x23, #3]
   26fb4:	ldr	w10, [sp, #784]
   26fb8:	str	w9, [x8, #12]
   26fbc:	stur	w10, [x8, #9]
   26fc0:	ldp	w8, w9, [x20, #24]
   26fc4:	cmp	w8, w9
   26fc8:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   26fcc:	add	w8, w8, #0x1
   26fd0:	cmp	w8, w9
   26fd4:	str	w8, [x26]
   26fd8:	b.cs	28aac <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2294>  // b.hs, b.nlast
   26fdc:	ldr	x9, [x20, #16]
   26fe0:	mov	w10, #0x8                   	// #8
   26fe4:	mov	w11, #0x4                   	// #4
   26fe8:	add	x8, x9, w8, uxtw #4
   26fec:	str	x10, [x8]
   26ff0:	strb	w11, [x8, #8]
   26ff4:	ldur	w9, [x23, #3]
   26ff8:	ldr	w10, [sp, #784]
   26ffc:	str	w9, [x8, #12]
   27000:	stur	w10, [x8, #9]
   27004:	ldp	w8, w9, [x20, #24]
   27008:	cmp	w8, w9
   2700c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27010:	add	w8, w8, #0x1
   27014:	cmp	w8, w9
   27018:	str	w8, [x26]
   2701c:	b.cs	28ac8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x22b0>  // b.hs, b.nlast
   27020:	ldr	x9, [x20, #16]
   27024:	mov	w10, #0x4                   	// #4
   27028:	add	x8, x9, w8, uxtw #4
   2702c:	str	x10, [x8]
   27030:	strb	w10, [x8, #8]
   27034:	ldur	w9, [x23, #3]
   27038:	ldr	w10, [sp, #784]
   2703c:	str	w9, [x8, #12]
   27040:	stur	w10, [x8, #9]
   27044:	ldp	w8, w9, [x20, #24]
   27048:	cmp	w8, w9
   2704c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27050:	add	w8, w8, #0x1
   27054:	cmp	w8, w9
   27058:	str	w8, [x26]
   2705c:	b.cs	28ae4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x22cc>  // b.hs, b.nlast
   27060:	ldr	x9, [x20, #16]
   27064:	mov	w10, #0x4                   	// #4
   27068:	add	x8, x9, w8, uxtw #4
   2706c:	str	x10, [x8]
   27070:	strb	w10, [x8, #8]
   27074:	ldur	w9, [x23, #3]
   27078:	ldr	w10, [sp, #784]
   2707c:	str	w9, [x8, #12]
   27080:	stur	w10, [x8, #9]
   27084:	ldp	w8, w9, [x20, #24]
   27088:	cmp	w8, w9
   2708c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27090:	add	w8, w8, #0x1
   27094:	cmp	w8, w9
   27098:	str	w8, [x26]
   2709c:	b.cs	28b00 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x22e8>  // b.hs, b.nlast
   270a0:	ldr	x9, [x20, #16]
   270a4:	mov	w10, #0x4                   	// #4
   270a8:	add	x8, x9, w8, uxtw #4
   270ac:	str	x10, [x8]
   270b0:	strb	w10, [x8, #8]
   270b4:	ldur	w9, [x23, #3]
   270b8:	ldr	w10, [sp, #784]
   270bc:	str	w9, [x8, #12]
   270c0:	stur	w10, [x8, #9]
   270c4:	ldp	w8, w9, [x20, #24]
   270c8:	cmp	w8, w9
   270cc:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   270d0:	add	w8, w8, #0x1
   270d4:	cmp	w8, w9
   270d8:	str	w8, [x26]
   270dc:	b.cs	28b1c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2304>  // b.hs, b.nlast
   270e0:	ldr	x9, [x20, #16]
   270e4:	mov	w10, #0x6                   	// #6
   270e8:	add	x8, x9, w8, uxtw #4
   270ec:	str	xzr, [x8]
   270f0:	strb	w10, [x8, #8]
   270f4:	ldur	w9, [x23, #3]
   270f8:	ldr	w10, [sp, #784]
   270fc:	str	w9, [x8, #12]
   27100:	stur	w10, [x8, #9]
   27104:	ldp	w8, w9, [x20, #24]
   27108:	cmp	w8, w9
   2710c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27110:	add	w8, w8, #0x1
   27114:	cmp	w8, w9
   27118:	str	w8, [x26]
   2711c:	b.cs	28b38 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2320>  // b.hs, b.nlast
   27120:	ldr	x9, [x20, #16]
   27124:	mov	w10, #0x8                   	// #8
   27128:	mov	w11, #0x4                   	// #4
   2712c:	add	x8, x9, w8, uxtw #4
   27130:	str	x10, [x8]
   27134:	strb	w11, [x8, #8]
   27138:	ldur	w9, [x23, #3]
   2713c:	ldr	w10, [sp, #784]
   27140:	str	w9, [x8, #12]
   27144:	stur	w10, [x8, #9]
   27148:	ldp	w8, w9, [x20, #24]
   2714c:	cmp	w8, w9
   27150:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27154:	add	w8, w8, #0x1
   27158:	str	w8, [x20, #24]
   2715c:	ldr	x22, [x27]
   27160:	mov	x1, x21
   27164:	stp	x21, x20, [x29, #-240]
   27168:	mov	x0, x22
   2716c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27170:	ldp	x1, x8, [x22, #32]
   27174:	add	x20, x22, #0x18
   27178:	cmp	x1, x8
   2717c:	b.eq	271a0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x988>  // b.none
   27180:	str	xzr, [x1, #8]
   27184:	ldur	q0, [x29, #-240]
   27188:	add	x8, x1, #0x10
   2718c:	stur	xzr, [x29, #-232]
   27190:	str	q0, [x1]
   27194:	stur	xzr, [x29, #-240]
   27198:	str	x8, [x22, #32]
   2719c:	b	271b0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x998>
   271a0:	sub	x2, x29, #0xf0
   271a4:	mov	x0, x20
   271a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   271ac:	ldr	x8, [x22, #32]
   271b0:	ldr	x9, [x20]
   271b4:	ldur	x20, [x29, #-232]
   271b8:	sub	x8, x8, x9
   271bc:	lsr	x8, x8, #4
   271c0:	add	w19, w8, #0x3
   271c4:	cbz	x20, 27240 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>
   271c8:	add	x8, x20, #0x8
   271cc:	cbz	x25, 271ec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x9d4>
   271d0:	ldaxr	w9, [x8]
   271d4:	sub	w10, w9, #0x1
   271d8:	stlxr	w11, w10, [x8]
   271dc:	cbnz	w11, 271d0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x9b8>
   271e0:	cmp	w9, #0x1
   271e4:	b.eq	27200 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x9e8>  // b.none
   271e8:	b	27240 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>
   271ec:	ldr	w9, [x8]
   271f0:	sub	w10, w9, #0x1
   271f4:	str	w10, [x8]
   271f8:	cmp	w9, #0x1
   271fc:	b.ne	27240 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>  // b.any
   27200:	mov	x21, x20
   27204:	ldr	x8, [x21], #12
   27208:	mov	x0, x20
   2720c:	ldr	x8, [x8, #16]
   27210:	blr	x8
   27214:	cbz	x25, 288a4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x208c>
   27218:	ldaxr	w8, [x21]
   2721c:	sub	w9, w8, #0x1
   27220:	stlxr	w10, w9, [x21]
   27224:	cbnz	w10, 27218 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa00>
   27228:	cmp	w8, #0x1
   2722c:	b.ne	27240 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>  // b.any
   27230:	ldr	x8, [x20]
   27234:	mov	x0, x20
   27238:	ldr	x8, [x8, #24]
   2723c:	blr	x8
   27240:	mov	w0, #0x220                 	// #544
   27244:	stur	w19, [x29, #-212]
   27248:	bl	0 <_Znwm>
   2724c:	movi	v0.2s, #0x1
   27250:	add	x8, x24, #0x10
   27254:	str	d0, [x0, #8]
   27258:	movi	v0.2d, #0x0
   2725c:	mov	x22, x0
   27260:	mov	x21, x0
   27264:	mov	w9, #0x6                   	// #6
   27268:	str	x8, [x0]
   2726c:	stp	q0, q0, [x0, #48]
   27270:	stp	q0, q0, [x0, #80]
   27274:	stp	q0, q0, [x0, #112]
   27278:	stp	q0, q0, [x0, #144]
   2727c:	stp	q0, q0, [x0, #176]
   27280:	stp	q0, q0, [x0, #208]
   27284:	stp	q0, q0, [x0, #240]
   27288:	stp	q0, q0, [x0, #272]
   2728c:	stp	q0, q0, [x0, #304]
   27290:	stp	q0, q0, [x0, #336]
   27294:	stp	q0, q0, [x0, #368]
   27298:	stp	q0, q0, [x0, #400]
   2729c:	stp	q0, q0, [x0, #432]
   272a0:	stp	q0, q0, [x0, #464]
   272a4:	stp	q0, q0, [x0, #496]
   272a8:	str	q0, [x22, #32]!
   272ac:	str	q0, [x0, #528]
   272b0:	str	x22, [x21, #16]!
   272b4:	str	d8, [x0, #24]
   272b8:	str	x9, [x22]
   272bc:	ldp	w8, w9, [x0, #24]
   272c0:	ldur	w11, [x23, #3]
   272c4:	ldr	w12, [sp, #784]
   272c8:	mov	w10, #0xff                  	// #255
   272cc:	cmp	w8, w9
   272d0:	strb	w10, [x0, #40]
   272d4:	str	w11, [x0, #44]
   272d8:	stur	w12, [x0, #41]
   272dc:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   272e0:	add	w8, w8, #0x1
   272e4:	mov	x20, x0
   272e8:	cmp	w8, w9
   272ec:	str	w8, [x0, #24]
   272f0:	b.cs	28b54 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x233c>  // b.hs, b.nlast
   272f4:	ldr	x9, [x20, #16]
   272f8:	mov	w10, #0x8                   	// #8
   272fc:	mov	w11, #0x4                   	// #4
   27300:	add	x8, x9, w8, uxtw #4
   27304:	str	x10, [x8]
   27308:	strb	w11, [x8, #8]
   2730c:	ldur	w9, [x23, #3]
   27310:	ldr	w10, [sp, #784]
   27314:	str	w9, [x8, #12]
   27318:	stur	w10, [x8, #9]
   2731c:	ldp	w8, w9, [x20, #24]
   27320:	cmp	w8, w9
   27324:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27328:	add	w8, w8, #0x1
   2732c:	cmp	w8, w9
   27330:	str	w8, [x20, #24]
   27334:	b.cs	28b70 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2358>  // b.hs, b.nlast
   27338:	ldr	x9, [x20, #16]
   2733c:	mov	w10, #0x8                   	// #8
   27340:	mov	w11, #0x4                   	// #4
   27344:	add	x8, x9, w8, uxtw #4
   27348:	str	x10, [x8]
   2734c:	strb	w11, [x8, #8]
   27350:	ldur	w9, [x23, #3]
   27354:	ldr	w10, [sp, #784]
   27358:	str	w9, [x8, #12]
   2735c:	stur	w10, [x8, #9]
   27360:	ldp	w8, w9, [x20, #24]
   27364:	cmp	w8, w9
   27368:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   2736c:	add	w8, w8, #0x1
   27370:	cmp	w8, w9
   27374:	str	w8, [x20, #24]
   27378:	b.cs	28b8c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2374>  // b.hs, b.nlast
   2737c:	ldr	x9, [x20, #16]
   27380:	mov	w10, #0x6                   	// #6
   27384:	mov	w11, #0x4                   	// #4
   27388:	add	x8, x9, w8, uxtw #4
   2738c:	str	x10, [x8]
   27390:	strb	w11, [x8, #8]
   27394:	ldur	w9, [x23, #3]
   27398:	ldr	w10, [sp, #784]
   2739c:	str	w9, [x8, #12]
   273a0:	stur	w10, [x8, #9]
   273a4:	ldp	w8, w9, [x20, #24]
   273a8:	cmp	w8, w9
   273ac:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   273b0:	add	w8, w8, #0x1
   273b4:	cmp	w8, w9
   273b8:	str	w8, [x20, #24]
   273bc:	b.cs	28ba8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2390>  // b.hs, b.nlast
   273c0:	ldr	x9, [x20, #16]
   273c4:	mov	w10, #0x6                   	// #6
   273c8:	add	x8, x9, w8, uxtw #4
   273cc:	str	xzr, [x8]
   273d0:	strb	w10, [x8, #8]
   273d4:	ldur	w9, [x23, #3]
   273d8:	ldr	w10, [sp, #784]
   273dc:	str	w9, [x8, #12]
   273e0:	stur	w10, [x8, #9]
   273e4:	ldp	w8, w9, [x20, #24]
   273e8:	cmp	w8, w9
   273ec:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   273f0:	add	w8, w8, #0x1
   273f4:	cmp	w8, w9
   273f8:	str	w8, [x20, #24]
   273fc:	b.cs	28bc4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x23ac>  // b.hs, b.nlast
   27400:	ldr	x9, [x20, #16]
   27404:	mov	w10, #0x8                   	// #8
   27408:	mov	w11, #0x4                   	// #4
   2740c:	add	x8, x9, w8, uxtw #4
   27410:	str	x10, [x8]
   27414:	strb	w11, [x8, #8]
   27418:	ldur	w9, [x23, #3]
   2741c:	ldr	w10, [sp, #784]
   27420:	str	w9, [x8, #12]
   27424:	stur	w10, [x8, #9]
   27428:	ldp	w8, w9, [x20, #24]
   2742c:	cmp	w8, w9
   27430:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27434:	add	w8, w8, #0x1
   27438:	str	w8, [x20, #24]
   2743c:	ldr	x22, [x27]
   27440:	mov	x1, x21
   27444:	str	x21, [sp, #1328]
   27448:	str	x20, [sp, #1336]
   2744c:	mov	x0, x22
   27450:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27454:	ldp	x1, x8, [x22, #32]
   27458:	add	x20, x22, #0x18
   2745c:	cmp	x1, x8
   27460:	b.eq	27484 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xc6c>  // b.none
   27464:	str	xzr, [x1, #8]
   27468:	ldr	q0, [sp, #1328]
   2746c:	add	x8, x1, #0x10
   27470:	str	xzr, [sp, #1336]
   27474:	str	q0, [x1]
   27478:	str	xzr, [sp, #1328]
   2747c:	str	x8, [x22, #32]
   27480:	b	27494 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xc7c>
   27484:	add	x2, sp, #0x530
   27488:	mov	x0, x20
   2748c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27490:	ldr	x8, [x22, #32]
   27494:	ldr	x9, [x20]
   27498:	ldr	x20, [sp, #1336]
   2749c:	sub	x8, x8, x9
   274a0:	lsr	x8, x8, #4
   274a4:	add	w19, w8, #0x3
   274a8:	cbz	x20, 27524 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>
   274ac:	add	x8, x20, #0x8
   274b0:	cbz	x25, 274d0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xcb8>
   274b4:	ldaxr	w9, [x8]
   274b8:	sub	w10, w9, #0x1
   274bc:	stlxr	w11, w10, [x8]
   274c0:	cbnz	w11, 274b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xc9c>
   274c4:	cmp	w9, #0x1
   274c8:	b.eq	274e4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xccc>  // b.none
   274cc:	b	27524 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>
   274d0:	ldr	w9, [x8]
   274d4:	sub	w10, w9, #0x1
   274d8:	str	w10, [x8]
   274dc:	cmp	w9, #0x1
   274e0:	b.ne	27524 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>  // b.any
   274e4:	mov	x21, x20
   274e8:	ldr	x8, [x21], #12
   274ec:	mov	x0, x20
   274f0:	ldr	x8, [x8, #16]
   274f4:	blr	x8
   274f8:	cbz	x25, 288bc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x20a4>
   274fc:	ldaxr	w8, [x21]
   27500:	sub	w9, w8, #0x1
   27504:	stlxr	w10, w9, [x21]
   27508:	cbnz	w10, 274fc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xce4>
   2750c:	cmp	w8, #0x1
   27510:	b.ne	27524 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>  // b.any
   27514:	ldr	x8, [x20]
   27518:	mov	x0, x20
   2751c:	ldr	x8, [x8, #24]
   27520:	blr	x8
   27524:	mov	w0, #0x220                 	// #544
   27528:	stur	w19, [x29, #-244]
   2752c:	bl	0 <_Znwm>
   27530:	movi	v0.2s, #0x1
   27534:	add	x8, x24, #0x10
   27538:	str	d0, [x0, #8]
   2753c:	movi	v0.2d, #0x0
   27540:	mov	x22, x0
   27544:	mov	x21, x0
   27548:	mov	w9, #0x8                   	// #8
   2754c:	str	x8, [x0]
   27550:	stp	q0, q0, [x0, #48]
   27554:	stp	q0, q0, [x0, #80]
   27558:	stp	q0, q0, [x0, #112]
   2755c:	stp	q0, q0, [x0, #144]
   27560:	stp	q0, q0, [x0, #176]
   27564:	stp	q0, q0, [x0, #208]
   27568:	stp	q0, q0, [x0, #240]
   2756c:	stp	q0, q0, [x0, #272]
   27570:	stp	q0, q0, [x0, #304]
   27574:	stp	q0, q0, [x0, #336]
   27578:	stp	q0, q0, [x0, #368]
   2757c:	stp	q0, q0, [x0, #400]
   27580:	stp	q0, q0, [x0, #432]
   27584:	stp	q0, q0, [x0, #464]
   27588:	stp	q0, q0, [x0, #496]
   2758c:	str	q0, [x22, #32]!
   27590:	str	q0, [x0, #528]
   27594:	str	x22, [x21, #16]!
   27598:	str	d8, [x0, #24]
   2759c:	str	x9, [x22]
   275a0:	ldp	w8, w9, [x0, #24]
   275a4:	ldur	w11, [x23, #3]
   275a8:	ldr	w12, [sp, #784]
   275ac:	mov	w10, #0xff                  	// #255
   275b0:	cmp	w8, w9
   275b4:	strb	w10, [x0, #40]
   275b8:	str	w11, [x0, #44]
   275bc:	stur	w12, [x0, #41]
   275c0:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   275c4:	add	w8, w8, #0x1
   275c8:	mov	x20, x0
   275cc:	cmp	w8, w9
   275d0:	str	w8, [x0, #24]
   275d4:	b.cs	28be0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x23c8>  // b.hs, b.nlast
   275d8:	ldr	x9, [x20, #16]
   275dc:	mov	w10, #0x8                   	// #8
   275e0:	mov	w11, #0x4                   	// #4
   275e4:	add	x8, x9, w8, uxtw #4
   275e8:	str	x10, [x8]
   275ec:	strb	w11, [x8, #8]
   275f0:	ldur	w9, [x23, #3]
   275f4:	ldr	w10, [sp, #784]
   275f8:	str	w9, [x8, #12]
   275fc:	stur	w10, [x8, #9]
   27600:	ldp	w8, w9, [x20, #24]
   27604:	cmp	w8, w9
   27608:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   2760c:	add	w8, w8, #0x1
   27610:	cmp	w8, w9
   27614:	str	w8, [x20, #24]
   27618:	b.cs	28bfc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x23e4>  // b.hs, b.nlast
   2761c:	ldr	x9, [x20, #16]
   27620:	mov	w10, #0x8                   	// #8
   27624:	mov	w11, #0x4                   	// #4
   27628:	add	x8, x9, w8, uxtw #4
   2762c:	str	x10, [x8]
   27630:	strb	w11, [x8, #8]
   27634:	ldur	w9, [x23, #3]
   27638:	ldr	w10, [sp, #784]
   2763c:	str	w9, [x8, #12]
   27640:	stur	w10, [x8, #9]
   27644:	ldp	w8, w9, [x20, #24]
   27648:	cmp	w8, w9
   2764c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27650:	add	w8, w8, #0x1
   27654:	cmp	w8, w9
   27658:	str	w8, [x20, #24]
   2765c:	b.cs	28c18 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2400>  // b.hs, b.nlast
   27660:	ldr	x9, [x20, #16]
   27664:	mov	w10, #0x6                   	// #6
   27668:	mov	w11, #0x4                   	// #4
   2766c:	add	x8, x9, w8, uxtw #4
   27670:	str	x10, [x8]
   27674:	strb	w11, [x8, #8]
   27678:	ldur	w9, [x23, #3]
   2767c:	ldr	w10, [sp, #784]
   27680:	str	w9, [x8, #12]
   27684:	stur	w10, [x8, #9]
   27688:	ldp	w8, w9, [x20, #24]
   2768c:	cmp	w8, w9
   27690:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27694:	add	w8, w8, #0x1
   27698:	cmp	w8, w9
   2769c:	str	w8, [x20, #24]
   276a0:	b.cs	28c34 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x241c>  // b.hs, b.nlast
   276a4:	ldr	x9, [x20, #16]
   276a8:	mov	w10, #0x8                   	// #8
   276ac:	mov	w11, #0x4                   	// #4
   276b0:	add	x8, x9, w8, uxtw #4
   276b4:	str	x10, [x8]
   276b8:	strb	w11, [x8, #8]
   276bc:	ldur	w9, [x23, #3]
   276c0:	ldr	w10, [sp, #784]
   276c4:	str	w9, [x8, #12]
   276c8:	stur	w10, [x8, #9]
   276cc:	ldp	w8, w9, [x20, #24]
   276d0:	cmp	w8, w9
   276d4:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   276d8:	add	w8, w8, #0x1
   276dc:	str	w8, [x20, #24]
   276e0:	ldr	x22, [x27]
   276e4:	mov	x1, x21
   276e8:	str	x21, [sp, #1312]
   276ec:	str	x20, [sp, #1320]
   276f0:	mov	x0, x22
   276f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   276f8:	ldp	x1, x8, [x22, #32]
   276fc:	add	x21, x22, #0x18
   27700:	cmp	x1, x8
   27704:	b.eq	27734 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf1c>  // b.none
   27708:	str	xzr, [x1, #8]
   2770c:	ldr	q0, [sp, #1312]
   27710:	add	x24, x1, #0x10
   27714:	str	xzr, [sp, #1320]
   27718:	str	q0, [x1]
   2771c:	str	xzr, [sp, #1312]
   27720:	str	x24, [x22, #32]
   27724:	ldr	x20, [sp, #1320]
   27728:	ldr	x22, [x21]
   2772c:	cbnz	x20, 27750 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf38>
   27730:	b	277c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfb0>
   27734:	add	x2, sp, #0x520
   27738:	mov	x0, x21
   2773c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27740:	ldr	x24, [x22, #32]
   27744:	ldr	x20, [sp, #1320]
   27748:	ldr	x22, [x21]
   2774c:	cbz	x20, 277c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfb0>
   27750:	add	x8, x20, #0x8
   27754:	cbz	x25, 27774 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf5c>
   27758:	ldaxr	w9, [x8]
   2775c:	sub	w10, w9, #0x1
   27760:	stlxr	w11, w10, [x8]
   27764:	cbnz	w11, 27758 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf40>
   27768:	cmp	w9, #0x1
   2776c:	b.eq	27788 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf70>  // b.none
   27770:	b	277c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfb0>
   27774:	ldr	w9, [x8]
   27778:	sub	w10, w9, #0x1
   2777c:	str	w10, [x8]
   27780:	cmp	w9, #0x1
   27784:	b.ne	277c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfb0>  // b.any
   27788:	mov	x19, x20
   2778c:	ldr	x8, [x19], #12
   27790:	mov	x0, x20
   27794:	ldr	x8, [x8, #16]
   27798:	blr	x8
   2779c:	cbz	x25, 288d4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x20bc>
   277a0:	ldaxr	w8, [x19]
   277a4:	sub	w9, w8, #0x1
   277a8:	stlxr	w10, w9, [x19]
   277ac:	cbnz	w10, 277a0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf88>
   277b0:	cmp	w8, #0x1
   277b4:	b.ne	277c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfb0>  // b.any
   277b8:	ldr	x8, [x20]
   277bc:	mov	x0, x20
   277c0:	ldr	x8, [x8, #24]
   277c4:	blr	x8
   277c8:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   277cc:	ldr	d0, [x9]
   277d0:	add	x8, sp, #0x310
   277d4:	add	x10, sp, #0xe0
   277d8:	add	x11, sp, #0xb0
   277dc:	add	x12, sp, #0x70
   277e0:	add	x13, sp, #0x2f0
   277e4:	sub	x14, x29, #0xf4
   277e8:	add	x15, sp, #0xa0
   277ec:	sub	x16, x29, #0xd4
   277f0:	sub	x17, x29, #0xbc
   277f4:	add	x18, x8, #0x10
   277f8:	add	x9, x10, #0x10
   277fc:	stp	x13, x8, [sp, #48]
   27800:	add	x8, x11, #0x8
   27804:	add	x25, x12, #0x8
   27808:	str	xzr, [sp, #760]
   2780c:	str	xzr, [sp, #752]
   27810:	str	wzr, [sp, #776]
   27814:	str	xzr, [sp, #768]
   27818:	str	wzr, [sp, #184]
   2781c:	str	wzr, [sp, #120]
   27820:	stp	x10, x27, [sp, #160]
   27824:	stp	x10, x14, [sp, #64]
   27828:	stp	x12, x27, [sp, #32]
   2782c:	stp	x15, x11, [sp, #80]
   27830:	str	x18, [sp, #784]
   27834:	stp	xzr, x9, [sp, #216]
   27838:	stp	xzr, x8, [sp, #192]
   2783c:	str	x8, [sp, #208]
   27840:	stp	xzr, x25, [sp, #128]
   27844:	stp	x25, xzr, [sp, #144]
   27848:	str	d0, [sp, #792]
   2784c:	str	d0, [sp, #232]
   27850:	stp	x16, x17, [sp, #96]
   27854:	str	x8, [sp, #8]
   27858:	ldr	x8, [x27, #24]
   2785c:	str	x9, [x29, #8]
   27860:	str	x27, [sp, #24]
   27864:	cbz	x8, 27a08 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x11f0>
   27868:	ldr	x21, [x8, #24]
   2786c:	add	x23, x8, #0x8
   27870:	cmp	x21, x23
   27874:	b.ne	27890 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1078>  // b.any
   27878:	b	27a1c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1204>
   2787c:	mov	x0, x21
   27880:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   27884:	mov	x21, x0
   27888:	cmp	x0, x23
   2788c:	b.eq	27a1c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1204>  // b.none
   27890:	ldr	w9, [x21, #88]
   27894:	ldp	x26, x8, [x21, #64]
   27898:	ldr	w10, [x21, #80]
   2789c:	add	x27, x8, x9, lsl #4
   278a0:	cbz	w10, 2796c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1154>
   278a4:	mov	x28, x8
   278a8:	cbz	w9, 278d4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x10bc>
   278ac:	lsl	x10, x9, #4
   278b0:	add	x9, x10, x8
   278b4:	mov	x28, x8
   278b8:	ldr	x11, [x28]
   278bc:	cmn	x11, #0x2
   278c0:	b.cc	278d4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x10bc>  // b.lo, b.ul, b.last
   278c4:	subs	x10, x10, #0x10
   278c8:	add	x28, x28, #0x10
   278cc:	b.ne	278b8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x10a0>  // b.any
   278d0:	mov	x28, x9
   278d4:	cmp	x28, x27
   278d8:	cbz	x8, 27978 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1160>
   278dc:	b.eq	2787c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1064>  // b.none
   278e0:	ldp	x1, x2, [x28]
   278e4:	add	x0, sp, #0x20
   278e8:	mov	w3, wzr
   278ec:	bl	29518 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
   278f0:	ldr	x8, [x28, #8]
   278f4:	cbz	x8, 28d50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2538>
   278f8:	ldr	w9, [x8, #8]
   278fc:	cbnz	w9, 27928 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1110>
   27900:	ldr	x9, [x8, #64]
   27904:	cmp	x9, #0x7
   27908:	b.ls	28d70 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2558>  // b.plast
   2790c:	ldr	x2, [x8, #72]
   27910:	cbz	x2, 28cd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x24b8>
   27914:	and	x8, x9, #0xfffffffffffffff8
   27918:	ldr	x1, [x8]
   2791c:	add	x0, sp, #0x20
   27920:	mov	w3, #0x1                   	// #1
   27924:	bl	29518 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
   27928:	ldr	x8, [x21, #64]
   2792c:	cmp	x8, x26
   27930:	b.ne	28d90 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2578>  // b.any
   27934:	add	x28, x28, #0x10
   27938:	cmp	x28, x27
   2793c:	b.hi	28db0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2598>  // b.pmore
   27940:	b.eq	2787c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1064>  // b.none
   27944:	ldr	x8, [x28]
   27948:	cmn	x8, #0x2
   2794c:	b.cc	27960 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1148>  // b.lo, b.ul, b.last
   27950:	add	x28, x28, #0x10
   27954:	cmp	x27, x28
   27958:	b.ne	27944 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x112c>  // b.any
   2795c:	b	2787c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1064>
   27960:	cmp	x27, x28
   27964:	b.ne	278e0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x10c8>  // b.any
   27968:	b	2787c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1064>
   2796c:	mov	x28, x27
   27970:	cmp	x28, x27
   27974:	cbnz	x8, 278dc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x10c4>
   27978:	b.eq	2787c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1064>  // b.none
   2797c:	ldp	x1, x2, [x28]
   27980:	add	x0, sp, #0x20
   27984:	mov	w3, wzr
   27988:	bl	29518 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
   2798c:	ldr	x8, [x28, #8]
   27990:	cbz	x8, 28d50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2538>
   27994:	ldr	w9, [x8, #8]
   27998:	cbnz	w9, 279c4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x11ac>
   2799c:	ldr	x9, [x8, #64]
   279a0:	cmp	x9, #0x8
   279a4:	b.cc	28d70 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2558>  // b.lo, b.ul, b.last
   279a8:	ldr	x2, [x8, #72]
   279ac:	cbz	x2, 28cd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x24b8>
   279b0:	and	x8, x9, #0xfffffffffffffff8
   279b4:	ldr	x1, [x8]
   279b8:	add	x0, sp, #0x20
   279bc:	mov	w3, #0x1                   	// #1
   279c0:	bl	29518 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
   279c4:	ldr	x8, [x21, #64]
   279c8:	cmp	x8, x26
   279cc:	b.ne	28d90 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2578>  // b.any
   279d0:	add	x28, x28, #0x10
   279d4:	cmp	x28, x27
   279d8:	b.hi	28db0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2598>  // b.pmore
   279dc:	b.eq	2787c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1064>  // b.none
   279e0:	ldr	x8, [x28]
   279e4:	cmn	x8, #0x2
   279e8:	b.cc	279fc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x11e4>  // b.lo, b.ul, b.last
   279ec:	add	x28, x28, #0x10
   279f0:	cmp	x27, x28
   279f4:	b.ne	279e0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x11c8>  // b.any
   279f8:	b	2787c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1064>
   279fc:	cmp	x27, x28
   27a00:	b.ne	2797c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1164>  // b.any
   27a04:	b	2787c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1064>
   27a08:	ldr	x8, [x27, #16]
   27a0c:	ldr	x21, [x8, #24]
   27a10:	add	x19, x8, #0x8
   27a14:	cmp	x21, x19
   27a18:	b.ne	27dd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x15b8>  // b.any
   27a1c:	ldr	w8, [sp, #792]
   27a20:	ldr	x27, [sp, #24]
   27a24:	cbz	w8, 27dfc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x15e4>
   27a28:	ldr	x23, [sp, #784]
   27a2c:	sub	x9, x24, x22
   27a30:	lsr	x9, x9, #4
   27a34:	add	w21, w9, #0x3
   27a38:	add	x24, x23, x8, lsl #3
   27a3c:	mov	x26, #0xfffffffffffffff0    	// #-16
   27a40:	b	27a50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1238>
   27a44:	add	x23, x23, #0x8
   27a48:	cmp	x23, x24
   27a4c:	b.eq	27dfc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x15e4>  // b.none
   27a50:	ldr	x28, [x23]
   27a54:	ldr	w9, [sp, #776]
   27a58:	stur	x28, [x29, #-168]
   27a5c:	cbz	w9, 27acc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x12b4>
   27a60:	orr	x8, x28, #0x8
   27a64:	cmn	x8, #0x8
   27a68:	b.eq	28cf0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x24d8>  // b.none
   27a6c:	ldr	x8, [sp, #760]
   27a70:	ubfx	x10, x28, #4, #28
   27a74:	eor	w10, w10, w28, lsr #9
   27a78:	sub	w9, w9, #0x1
   27a7c:	and	w10, w10, w9
   27a80:	add	x0, x8, w10, uxtw #4
   27a84:	ldr	x12, [x0]
   27a88:	cmp	x12, x28
   27a8c:	b.eq	27aec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x12d4>  // b.none
   27a90:	mov	x11, xzr
   27a94:	mov	w13, #0x1                   	// #1
   27a98:	cmn	x12, #0x8
   27a9c:	b.eq	27d88 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1570>  // b.none
   27aa0:	cmp	x11, #0x0
   27aa4:	add	w10, w10, w13
   27aa8:	ccmp	x12, x26, #0x0, eq  // eq = none
   27aac:	and	w10, w10, w9
   27ab0:	csel	x11, x11, x0, ne  // ne = any
   27ab4:	add	x0, x8, w10, uxtw #4
   27ab8:	ldr	x12, [x0]
   27abc:	add	w13, w13, #0x1
   27ac0:	cmp	x12, x28
   27ac4:	b.eq	27aec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x12d4>  // b.none
   27ac8:	b	27a98 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1280>
   27acc:	mov	x3, xzr
   27ad0:	add	x0, sp, #0x2f0
   27ad4:	sub	x1, x29, #0xa8
   27ad8:	sub	x2, x29, #0xa8
   27adc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27ae0:	ldur	x8, [x29, #-168]
   27ae4:	str	wzr, [x0, #8]
   27ae8:	str	x8, [x0]
   27aec:	ldr	w19, [x0, #8]
   27af0:	cbz	w19, 28d10 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x24f8>
   27af4:	ldp	w8, w9, [sp, #232]
   27af8:	cmp	w8, w9
   27afc:	b.cs	27d34 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x151c>  // b.hs, b.nlast
   27b00:	ldr	x9, [sp, #224]
   27b04:	str	x19, [x9, w8, uxtw #3]
   27b08:	ldp	w8, w9, [sp, #232]
   27b0c:	cmp	w8, w9
   27b10:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27b14:	add	w8, w8, #0x1
   27b18:	str	w8, [sp, #232]
   27b1c:	ldr	x19, [x27, #16]
   27b20:	ldp	x1, x2, [x28, #24]
   27b24:	add	x0, x19, #0x30
   27b28:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
   27b2c:	cmn	w0, #0x1
   27b30:	b.eq	27b44 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x132c>  // b.none
   27b34:	ldr	w9, [x19, #56]
   27b38:	sxtw	x8, w0
   27b3c:	cmp	x8, x9
   27b40:	b.ne	27d00 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14e8>  // b.any
   27b44:	mov	x19, xzr
   27b48:	ldp	w8, w9, [sp, #232]
   27b4c:	cmp	w8, w9
   27b50:	b.cs	27d18 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1500>  // b.hs, b.nlast
   27b54:	ldr	x9, [sp, #224]
   27b58:	str	x19, [x9, w8, uxtw #3]
   27b5c:	ldp	w8, w9, [sp, #232]
   27b60:	cmp	w8, w9
   27b64:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27b68:	add	w8, w8, #0x1
   27b6c:	str	w8, [sp, #232]
   27b70:	ldrb	w19, [x28, #12]
   27b74:	cmp	w8, w9
   27b78:	b.cs	27d50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1538>  // b.hs, b.nlast
   27b7c:	ldr	x9, [sp, #224]
   27b80:	str	x19, [x9, w8, uxtw #3]
   27b84:	ldp	w8, w9, [sp, #232]
   27b88:	cmp	w8, w9
   27b8c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27b90:	add	w8, w8, #0x1
   27b94:	str	w8, [sp, #232]
   27b98:	ldr	x8, [x28, #72]
   27b9c:	cbz	x8, 28cd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x24b8>
   27ba0:	ldr	w10, [sp, #776]
   27ba4:	stur	x8, [x29, #-168]
   27ba8:	cbz	w10, 27c18 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1400>
   27bac:	orr	x9, x8, #0x8
   27bb0:	cmn	x9, #0x8
   27bb4:	b.eq	28cf0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x24d8>  // b.none
   27bb8:	ldr	x9, [sp, #760]
   27bbc:	ubfx	x11, x8, #4, #28
   27bc0:	eor	w11, w11, w8, lsr #9
   27bc4:	sub	w10, w10, #0x1
   27bc8:	and	w11, w11, w10
   27bcc:	add	x0, x9, w11, uxtw #4
   27bd0:	ldr	x13, [x0]
   27bd4:	cmp	x13, x8
   27bd8:	b.eq	27c38 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1420>  // b.none
   27bdc:	mov	x12, xzr
   27be0:	mov	w14, #0x1                   	// #1
   27be4:	cmn	x13, #0x8
   27be8:	b.eq	27d94 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x157c>  // b.none
   27bec:	cmp	x12, #0x0
   27bf0:	add	w11, w11, w14
   27bf4:	ccmp	x13, x26, #0x0, eq  // eq = none
   27bf8:	and	w11, w11, w10
   27bfc:	csel	x12, x12, x0, ne  // ne = any
   27c00:	add	x0, x9, w11, uxtw #4
   27c04:	ldr	x13, [x0]
   27c08:	add	w14, w14, #0x1
   27c0c:	cmp	x13, x8
   27c10:	b.eq	27c38 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1420>  // b.none
   27c14:	b	27be4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x13cc>
   27c18:	mov	x3, xzr
   27c1c:	add	x0, sp, #0x2f0
   27c20:	sub	x1, x29, #0xa8
   27c24:	sub	x2, x29, #0xa8
   27c28:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27c2c:	ldur	x8, [x29, #-168]
   27c30:	str	wzr, [x0, #8]
   27c34:	str	x8, [x0]
   27c38:	ldr	w19, [x0, #8]
   27c3c:	cbz	w19, 28d30 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2518>
   27c40:	ldp	w8, w9, [sp, #232]
   27c44:	cmp	w8, w9
   27c48:	b.cs	27d6c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1554>  // b.hs, b.nlast
   27c4c:	ldr	x9, [sp, #224]
   27c50:	str	x19, [x9, w8, uxtw #3]
   27c54:	ldp	w8, w9, [sp, #232]
   27c58:	cmp	w8, w9
   27c5c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27c60:	add	w8, w8, #0x1
   27c64:	str	w8, [sp, #232]
   27c68:	ldr	x0, [x27]
   27c6c:	add	x2, sp, #0xe0
   27c70:	mov	w1, #0x8                   	// #8
   27c74:	mov	w3, w21
   27c78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27c7c:	str	wzr, [sp, #232]
   27c80:	ldrb	w8, [x28, #12]
   27c84:	and	w8, w8, #0xf
   27c88:	sub	w8, w8, #0x7
   27c8c:	cmp	w8, #0x1
   27c90:	b.hi	27ce0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14c8>  // b.pmore
   27c94:	ldp	x22, x19, [sp, #160]
   27c98:	ldr	x20, [x28, #16]
   27c9c:	ldp	w8, w9, [x22, #8]
   27ca0:	cmp	w8, w9
   27ca4:	b.cs	27da0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1588>  // b.hs, b.nlast
   27ca8:	ldr	x9, [x22]
   27cac:	str	x20, [x9, w8, uxtw #3]
   27cb0:	ldp	w8, w9, [x22, #8]
   27cb4:	cmp	w8, w9
   27cb8:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27cbc:	add	w8, w8, #0x1
   27cc0:	str	w8, [x22, #8]
   27cc4:	ldr	x0, [x19]
   27cc8:	ldr	x2, [sp, #160]
   27ccc:	mov	w1, #0x9                   	// #9
   27cd0:	mov	w3, wzr
   27cd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27cd8:	ldr	x8, [sp, #160]
   27cdc:	str	wzr, [x8, #8]
   27ce0:	ldr	x0, [x28, #72]
   27ce4:	cbz	x0, 28cd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x24b8>
   27ce8:	ldr	w8, [x0, #8]
   27cec:	cmp	w8, #0x1
   27cf0:	b.ne	27a44 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x122c>  // b.any
   27cf4:	add	x1, sp, #0xb0
   27cf8:	bl	29040 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE>
   27cfc:	b	27a44 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x122c>
   27d00:	ldr	x9, [x19, #48]
   27d04:	ldr	x8, [x9, x8, lsl #3]
   27d08:	ldr	x19, [x8, #8]
   27d0c:	ldp	w8, w9, [sp, #232]
   27d10:	cmp	w8, w9
   27d14:	b.cc	27b54 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x133c>  // b.lo, b.ul, b.last
   27d18:	ldr	x1, [x29, #8]
   27d1c:	add	x0, sp, #0xe0
   27d20:	mov	w3, #0x8                   	// #8
   27d24:	mov	x2, xzr
   27d28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27d2c:	ldr	w8, [sp, #232]
   27d30:	b	27b54 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x133c>
   27d34:	ldr	x1, [x29, #8]
   27d38:	add	x0, sp, #0xe0
   27d3c:	mov	w3, #0x8                   	// #8
   27d40:	mov	x2, xzr
   27d44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27d48:	ldr	w8, [sp, #232]
   27d4c:	b	27b00 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x12e8>
   27d50:	ldr	x1, [x29, #8]
   27d54:	add	x0, sp, #0xe0
   27d58:	mov	w3, #0x8                   	// #8
   27d5c:	mov	x2, xzr
   27d60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27d64:	ldr	w8, [sp, #232]
   27d68:	b	27b7c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1364>
   27d6c:	ldr	x1, [x29, #8]
   27d70:	add	x0, sp, #0xe0
   27d74:	mov	w3, #0x8                   	// #8
   27d78:	mov	x2, xzr
   27d7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27d80:	ldr	w8, [sp, #232]
   27d84:	b	27c4c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1434>
   27d88:	cmp	x11, #0x0
   27d8c:	csel	x3, x0, x11, eq  // eq = none
   27d90:	b	27ad0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x12b8>
   27d94:	cmp	x12, #0x0
   27d98:	csel	x3, x0, x12, eq  // eq = none
   27d9c:	b	27c1c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1404>
   27da0:	add	x1, x22, #0x10
   27da4:	mov	w3, #0x8                   	// #8
   27da8:	mov	x0, x22
   27dac:	mov	x2, xzr
   27db0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27db4:	ldr	w8, [x22, #8]
   27db8:	b	27ca8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1490>
   27dbc:	mov	x0, x21
   27dc0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   27dc4:	mov	x21, x0
   27dc8:	cmp	x0, x19
   27dcc:	b.eq	27a1c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1204>  // b.none
   27dd0:	ldp	x20, x23, [x21, #56]
   27dd4:	cmp	x20, x23
   27dd8:	b.eq	27dbc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x15a4>  // b.none
   27ddc:	ldr	x2, [x20], #8
   27de0:	ldr	x1, [x21, #32]
   27de4:	add	x0, sp, #0x20
   27de8:	mov	w3, wzr
   27dec:	bl	29518 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
   27df0:	cmp	x23, x20
   27df4:	b.ne	27ddc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x15c4>  // b.any
   27df8:	b	27dbc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x15a4>
   27dfc:	ldr	x8, [x27, #16]
   27e00:	ldr	x9, [x8, #272]
   27e04:	cbz	x9, 27e3c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1624>
   27e08:	add	x8, x8, #0xe8
   27e0c:	ldr	x21, [x8, #24]
   27e10:	add	x26, x8, #0x8
   27e14:	cmp	x21, x26
   27e18:	b.ne	28548 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d30>  // b.any
   27e1c:	ldr	w8, [sp, #232]
   27e20:	cbz	w8, 27e3c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1624>
   27e24:	ldr	x0, [x27]
   27e28:	add	x2, sp, #0xe0
   27e2c:	mov	w1, #0x11                  	// #17
   27e30:	mov	w3, wzr
   27e34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27e38:	str	wzr, [sp, #232]
   27e3c:	ldr	x8, [x27, #16]
   27e40:	ldr	x9, [x8, #320]
   27e44:	cbz	x9, 27e7c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1664>
   27e48:	add	x8, x8, #0x118
   27e4c:	ldr	x21, [x8, #24]
   27e50:	add	x26, x8, #0x8
   27e54:	cmp	x21, x26
   27e58:	b.ne	286d4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ebc>  // b.any
   27e5c:	ldr	w8, [sp, #232]
   27e60:	cbz	w8, 27e7c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1664>
   27e64:	ldr	x0, [x27]
   27e68:	add	x2, sp, #0xe0
   27e6c:	mov	w1, #0x12                  	// #18
   27e70:	mov	w3, wzr
   27e74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27e78:	str	wzr, [sp, #232]
   27e7c:	ldr	x0, [sp, #200]
   27e80:	b	27e8c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1674>
   27e84:	ldr	x0, [sp, #16]
   27e88:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   27e8c:	ldr	x8, [sp, #8]
   27e90:	cmp	x0, x8
   27e94:	b.eq	28810 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ff8>  // b.none
   27e98:	ldr	x8, [x27, #16]
   27e9c:	str	x0, [sp, #16]
   27ea0:	ldr	x22, [x8, #96]
   27ea4:	add	x28, x8, #0x58
   27ea8:	cbz	x22, 27ee4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16cc>
   27eac:	ldr	x8, [x0, #32]
   27eb0:	b	27ec0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16a8>
   27eb4:	ldr	x10, [x22, #24]
   27eb8:	mov	x22, x10
   27ebc:	cbz	x10, 27ee4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16cc>
   27ec0:	ldr	x9, [x22, #32]
   27ec4:	cmp	x9, x8
   27ec8:	b.cc	27eb4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x169c>  // b.lo, b.ul, b.last
   27ecc:	ldr	x10, [x22, #16]
   27ed0:	cmp	x8, x9
   27ed4:	b.cs	284e4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ccc>  // b.hs, b.nlast
   27ed8:	mov	x28, x22
   27edc:	mov	x22, x10
   27ee0:	cbnz	x10, 27ec0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16a8>
   27ee4:	mov	x22, x28
   27ee8:	cmp	x22, x28
   27eec:	b.ne	27f24 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x170c>  // b.any
   27ef0:	b	27e84 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x166c>
   27ef4:	ldr	x27, [sp, #24]
   27ef8:	add	x2, sp, #0xe0
   27efc:	mov	w1, #0x15                  	// #21
   27f00:	mov	w3, wzr
   27f04:	ldr	x0, [x27]
   27f08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27f0c:	mov	x0, x22
   27f10:	str	wzr, [sp, #232]
   27f14:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   27f18:	mov	x22, x0
   27f1c:	cmp	x0, x28
   27f20:	b.eq	27e84 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x166c>  // b.none
   27f24:	ldr	x24, [x22, #40]
   27f28:	cmn	x24, #0x2
   27f2c:	b.eq	28c70 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2458>  // b.none
   27f30:	cmn	x24, #0x1
   27f34:	b.eq	28c90 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2478>  // b.none
   27f38:	ldr	x25, [x22, #48]
   27f3c:	ldr	x23, [x27, #8]
   27f40:	mov	x0, x24
   27f44:	mov	x1, x25
   27f48:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
   27f4c:	lsr	x8, x25, #32
   27f50:	cbnz	x8, 28cb0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2498>
   27f54:	orr	x2, x25, x0, lsl #32
   27f58:	mov	x0, x23
   27f5c:	mov	x1, x24
   27f60:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
   27f64:	ldp	w8, w9, [sp, #232]
   27f68:	mov	x24, x0
   27f6c:	cmp	w8, w9
   27f70:	b.cs	28404 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1bec>  // b.hs, b.nlast
   27f74:	ldr	x9, [sp, #224]
   27f78:	str	x24, [x9, w8, uxtw #3]
   27f7c:	ldp	w8, w9, [sp, #232]
   27f80:	cmp	w8, w9
   27f84:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27f88:	add	w8, w8, #0x1
   27f8c:	str	w8, [sp, #232]
   27f90:	ldr	x19, [x22, #48]
   27f94:	cmp	w8, w9
   27f98:	b.cs	28420 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c08>  // b.hs, b.nlast
   27f9c:	ldr	x9, [sp, #224]
   27fa0:	str	x19, [x9, w8, uxtw #3]
   27fa4:	ldp	w8, w9, [sp, #232]
   27fa8:	cmp	w8, w9
   27fac:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27fb0:	add	w8, w8, #0x1
   27fb4:	str	w8, [sp, #232]
   27fb8:	ldr	w19, [x22, #72]
   27fbc:	cmp	w8, w9
   27fc0:	b.cs	2843c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c24>  // b.hs, b.nlast
   27fc4:	ldr	x9, [sp, #224]
   27fc8:	str	x19, [x9, w8, uxtw #3]
   27fcc:	ldp	w8, w9, [sp, #232]
   27fd0:	cmp	w8, w9
   27fd4:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   27fd8:	add	w8, w8, #0x1
   27fdc:	str	w8, [sp, #232]
   27fe0:	ldr	w19, [x22, #76]
   27fe4:	cmp	w8, w9
   27fe8:	b.cs	28458 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c40>  // b.hs, b.nlast
   27fec:	ldr	x9, [sp, #224]
   27ff0:	str	x19, [x9, w8, uxtw #3]
   27ff4:	ldp	w8, w9, [sp, #232]
   27ff8:	cmp	w8, w9
   27ffc:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   28000:	add	w8, w8, #0x1
   28004:	cmp	w8, w9
   28008:	str	w8, [sp, #232]
   2800c:	b.cs	28474 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c5c>  // b.hs, b.nlast
   28010:	ldr	x9, [sp, #224]
   28014:	ldr	x10, [x22, #80]
   28018:	str	x10, [x9, w8, uxtw #3]
   2801c:	ldp	w8, w9, [sp, #232]
   28020:	cmp	w8, w9
   28024:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   28028:	add	w8, w8, #0x1
   2802c:	cmp	w8, w9
   28030:	str	w8, [sp, #232]
   28034:	b.cs	28490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c78>  // b.hs, b.nlast
   28038:	ldr	x9, [sp, #224]
   2803c:	ldr	x10, [x22, #88]
   28040:	str	x10, [x9, w8, uxtw #3]
   28044:	ldp	w8, w9, [sp, #232]
   28048:	cmp	w8, w9
   2804c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   28050:	add	w8, w8, #0x1
   28054:	str	w8, [sp, #232]
   28058:	ldrb	w19, [x22, #96]
   2805c:	cmp	w8, w9
   28060:	b.cs	284ac <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c94>  // b.hs, b.nlast
   28064:	ldr	x9, [sp, #224]
   28068:	str	x19, [x9, w8, uxtw #3]
   2806c:	ldp	w8, w9, [sp, #232]
   28070:	cmp	w8, w9
   28074:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   28078:	add	w8, w8, #0x1
   2807c:	cmp	w8, w9
   28080:	str	w8, [sp, #232]
   28084:	b.cs	284c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1cb0>  // b.hs, b.nlast
   28088:	ldr	x9, [sp, #224]
   2808c:	ldr	x10, [x22, #104]
   28090:	str	x10, [x9, w8, uxtw #3]
   28094:	ldp	w8, w19, [sp, #232]
   28098:	cmp	w8, w19
   2809c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   280a0:	add	w20, w8, #0x1
   280a4:	str	w20, [sp, #232]
   280a8:	ldr	x24, [x22, #136]
   280ac:	add	x27, x22, #0x78
   280b0:	cmp	x24, x27
   280b4:	b.ne	280d0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x18b8>  // b.any
   280b8:	b	27ef4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16dc>
   280bc:	mov	x0, x24
   280c0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   280c4:	mov	x24, x0
   280c8:	cmp	x0, x27
   280cc:	b.eq	27ef4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16dc>  // b.none
   280d0:	ldr	x21, [x24, #32]
   280d4:	cmp	w20, w19
   280d8:	b.cs	28378 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b60>  // b.hs, b.nlast
   280dc:	ldr	x8, [sp, #224]
   280e0:	str	x21, [x8, w20, uxtw #3]
   280e4:	ldp	w8, w9, [sp, #232]
   280e8:	cmp	w8, w9
   280ec:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   280f0:	add	w8, w8, #0x1
   280f4:	add	x21, x24, #0x28
   280f8:	str	w8, [sp, #232]
   280fc:	ldr	w19, [x21]
   28100:	cmp	w8, w9
   28104:	b.cs	28394 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b7c>  // b.hs, b.nlast
   28108:	ldr	x9, [sp, #224]
   2810c:	str	x19, [x9, w8, uxtw #3]
   28110:	ldp	w8, w9, [sp, #232]
   28114:	cmp	w8, w9
   28118:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   2811c:	add	w8, w8, #0x1
   28120:	str	w8, [sp, #232]
   28124:	ldr	x25, [x21, #8]
   28128:	cmn	x25, #0x2
   2812c:	b.eq	28c70 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2458>  // b.none
   28130:	cmn	x25, #0x1
   28134:	b.eq	28c90 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2478>  // b.none
   28138:	ldr	x26, [x21, #16]
   2813c:	mov	x0, x25
   28140:	mov	x1, x26
   28144:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
   28148:	lsr	x8, x26, #32
   2814c:	cbnz	x8, 28cb0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2498>
   28150:	orr	x2, x26, x0, lsl #32
   28154:	mov	x0, x23
   28158:	mov	x1, x25
   2815c:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
   28160:	ldp	w8, w9, [sp, #232]
   28164:	mov	x25, x0
   28168:	cmp	w8, w9
   2816c:	b.cs	283b0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b98>  // b.hs, b.nlast
   28170:	ldr	x9, [sp, #224]
   28174:	str	x25, [x9, w8, uxtw #3]
   28178:	ldp	w8, w9, [sp, #232]
   2817c:	cmp	w8, w9
   28180:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   28184:	add	w8, w8, #0x1
   28188:	str	w8, [sp, #232]
   2818c:	ldr	x19, [x21, #16]
   28190:	cmp	w8, w9
   28194:	b.cs	283cc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1bb4>  // b.hs, b.nlast
   28198:	ldr	x9, [sp, #224]
   2819c:	str	x19, [x9, w8, uxtw #3]
   281a0:	ldp	w8, w9, [sp, #232]
   281a4:	cmp	w8, w9
   281a8:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   281ac:	add	w8, w8, #0x1
   281b0:	str	w8, [sp, #232]
   281b4:	ldr	x19, [x21, #80]
   281b8:	cmp	w8, w9
   281bc:	b.cs	283e8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1bd0>  // b.hs, b.nlast
   281c0:	ldr	x9, [sp, #224]
   281c4:	str	x19, [x9, w8, uxtw #3]
   281c8:	ldp	w8, w19, [sp, #232]
   281cc:	cmp	w8, w19
   281d0:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   281d4:	add	w20, w8, #0x1
   281d8:	str	w20, [sp, #232]
   281dc:	ldr	x25, [x21, #64]
   281e0:	add	x26, x21, #0x30
   281e4:	cmp	x25, x26
   281e8:	b.eq	280bc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x18a4>  // b.none
   281ec:	ldp	x9, x8, [x25, #32]
   281f0:	cmp	w20, w19
   281f4:	sub	x8, x8, x9
   281f8:	asr	x19, x8, #3
   281fc:	b.cs	282ec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ad4>  // b.hs, b.nlast
   28200:	ldr	x8, [sp, #224]
   28204:	str	x19, [x8, w20, uxtw #3]
   28208:	ldp	w8, w9, [sp, #232]
   2820c:	cmp	w8, w9
   28210:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   28214:	add	x8, x8, #0x1
   28218:	ldr	x9, [sp, #224]
   2821c:	str	w8, [sp, #232]
   28220:	ldp	x2, x3, [x25, #32]
   28224:	add	x0, sp, #0xe0
   28228:	add	x1, x9, x8, lsl #3
   2822c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28230:	ldp	w8, w9, [sp, #232]
   28234:	ldr	w19, [x25, #56]
   28238:	cmp	w8, w9
   2823c:	b.cs	28308 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1af0>  // b.hs, b.nlast
   28240:	ldr	x9, [sp, #224]
   28244:	str	x19, [x9, w8, uxtw #3]
   28248:	ldp	w8, w9, [sp, #232]
   2824c:	cmp	w8, w9
   28250:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   28254:	add	w8, w8, #0x1
   28258:	cmp	w8, w9
   2825c:	str	w8, [sp, #232]
   28260:	b.cs	28324 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b0c>  // b.hs, b.nlast
   28264:	ldr	x9, [sp, #224]
   28268:	ldr	x10, [x25, #64]
   2826c:	str	x10, [x9, w8, uxtw #3]
   28270:	ldp	w8, w9, [sp, #232]
   28274:	cmp	w8, w9
   28278:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   2827c:	add	w8, w8, #0x1
   28280:	str	w8, [sp, #232]
   28284:	ldr	w19, [x25, #72]
   28288:	cmp	w8, w9
   2828c:	b.cs	28340 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b28>  // b.hs, b.nlast
   28290:	ldr	x9, [sp, #224]
   28294:	str	x19, [x9, w8, uxtw #3]
   28298:	ldp	w8, w9, [sp, #232]
   2829c:	cmp	w8, w9
   282a0:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   282a4:	add	w8, w8, #0x1
   282a8:	str	w8, [sp, #232]
   282ac:	ldr	w19, [x25, #76]
   282b0:	cmp	w8, w9
   282b4:	b.cs	2835c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b44>  // b.hs, b.nlast
   282b8:	ldr	x9, [sp, #224]
   282bc:	str	x19, [x9, w8, uxtw #3]
   282c0:	ldp	w8, w19, [sp, #232]
   282c4:	cmp	w8, w19
   282c8:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   282cc:	add	w20, w8, #0x1
   282d0:	mov	x0, x25
   282d4:	str	w20, [sp, #232]
   282d8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   282dc:	mov	x25, x0
   282e0:	cmp	x0, x26
   282e4:	b.ne	281ec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x19d4>  // b.any
   282e8:	b	280bc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x18a4>
   282ec:	ldr	x1, [x29, #8]
   282f0:	add	x0, sp, #0xe0
   282f4:	mov	w3, #0x8                   	// #8
   282f8:	mov	x2, xzr
   282fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28300:	ldr	w20, [sp, #232]
   28304:	b	28200 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x19e8>
   28308:	ldr	x1, [x29, #8]
   2830c:	add	x0, sp, #0xe0
   28310:	mov	w3, #0x8                   	// #8
   28314:	mov	x2, xzr
   28318:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2831c:	ldr	w8, [sp, #232]
   28320:	b	28240 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1a28>
   28324:	ldr	x1, [x29, #8]
   28328:	add	x0, sp, #0xe0
   2832c:	mov	w3, #0x8                   	// #8
   28330:	mov	x2, xzr
   28334:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28338:	ldr	w8, [sp, #232]
   2833c:	b	28264 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1a4c>
   28340:	ldr	x1, [x29, #8]
   28344:	add	x0, sp, #0xe0
   28348:	mov	w3, #0x8                   	// #8
   2834c:	mov	x2, xzr
   28350:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28354:	ldr	w8, [sp, #232]
   28358:	b	28290 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1a78>
   2835c:	ldr	x1, [x29, #8]
   28360:	add	x0, sp, #0xe0
   28364:	mov	w3, #0x8                   	// #8
   28368:	mov	x2, xzr
   2836c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28370:	ldr	w8, [sp, #232]
   28374:	b	282b8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1aa0>
   28378:	ldr	x1, [x29, #8]
   2837c:	add	x0, sp, #0xe0
   28380:	mov	w3, #0x8                   	// #8
   28384:	mov	x2, xzr
   28388:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2838c:	ldr	w20, [sp, #232]
   28390:	b	280dc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x18c4>
   28394:	ldr	x1, [x29, #8]
   28398:	add	x0, sp, #0xe0
   2839c:	mov	w3, #0x8                   	// #8
   283a0:	mov	x2, xzr
   283a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   283a8:	ldr	w8, [sp, #232]
   283ac:	b	28108 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x18f0>
   283b0:	ldr	x1, [x29, #8]
   283b4:	add	x0, sp, #0xe0
   283b8:	mov	w3, #0x8                   	// #8
   283bc:	mov	x2, xzr
   283c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   283c4:	ldr	w8, [sp, #232]
   283c8:	b	28170 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1958>
   283cc:	ldr	x1, [x29, #8]
   283d0:	add	x0, sp, #0xe0
   283d4:	mov	w3, #0x8                   	// #8
   283d8:	mov	x2, xzr
   283dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   283e0:	ldr	w8, [sp, #232]
   283e4:	b	28198 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1980>
   283e8:	ldr	x1, [x29, #8]
   283ec:	add	x0, sp, #0xe0
   283f0:	mov	w3, #0x8                   	// #8
   283f4:	mov	x2, xzr
   283f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   283fc:	ldr	w8, [sp, #232]
   28400:	b	281c0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x19a8>
   28404:	ldr	x1, [x29, #8]
   28408:	add	x0, sp, #0xe0
   2840c:	mov	w3, #0x8                   	// #8
   28410:	mov	x2, xzr
   28414:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28418:	ldr	w8, [sp, #232]
   2841c:	b	27f74 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x175c>
   28420:	ldr	x1, [x29, #8]
   28424:	add	x0, sp, #0xe0
   28428:	mov	w3, #0x8                   	// #8
   2842c:	mov	x2, xzr
   28430:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28434:	ldr	w8, [sp, #232]
   28438:	b	27f9c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1784>
   2843c:	ldr	x1, [x29, #8]
   28440:	add	x0, sp, #0xe0
   28444:	mov	w3, #0x8                   	// #8
   28448:	mov	x2, xzr
   2844c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28450:	ldr	w8, [sp, #232]
   28454:	b	27fc4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x17ac>
   28458:	ldr	x1, [x29, #8]
   2845c:	add	x0, sp, #0xe0
   28460:	mov	w3, #0x8                   	// #8
   28464:	mov	x2, xzr
   28468:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2846c:	ldr	w8, [sp, #232]
   28470:	b	27fec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x17d4>
   28474:	ldr	x1, [x29, #8]
   28478:	add	x0, sp, #0xe0
   2847c:	mov	w3, #0x8                   	// #8
   28480:	mov	x2, xzr
   28484:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28488:	ldr	w8, [sp, #232]
   2848c:	b	28010 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x17f8>
   28490:	ldr	x1, [x29, #8]
   28494:	add	x0, sp, #0xe0
   28498:	mov	w3, #0x8                   	// #8
   2849c:	mov	x2, xzr
   284a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   284a4:	ldr	w8, [sp, #232]
   284a8:	b	28038 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1820>
   284ac:	ldr	x1, [x29, #8]
   284b0:	add	x0, sp, #0xe0
   284b4:	mov	w3, #0x8                   	// #8
   284b8:	mov	x2, xzr
   284bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   284c0:	ldr	w8, [sp, #232]
   284c4:	b	28064 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x184c>
   284c8:	ldr	x1, [x29, #8]
   284cc:	add	x0, sp, #0xe0
   284d0:	mov	w3, #0x8                   	// #8
   284d4:	mov	x2, xzr
   284d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   284dc:	ldr	w8, [sp, #232]
   284e0:	b	28088 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1870>
   284e4:	ldr	x9, [x22, #24]
   284e8:	cbz	x10, 2850c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1cf4>
   284ec:	ldr	x11, [x10, #32]
   284f0:	add	x12, x10, #0x18
   284f4:	add	x13, x10, #0x10
   284f8:	cmp	x11, x8
   284fc:	csel	x22, x22, x10, cc  // cc = lo, ul, last
   28500:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   28504:	ldr	x10, [x10]
   28508:	cbnz	x10, 284ec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1cd4>
   2850c:	cbz	x9, 27ee8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16d0>
   28510:	ldr	x10, [x9, #32]
   28514:	add	x11, x9, #0x10
   28518:	add	x12, x9, #0x18
   2851c:	cmp	x8, x10
   28520:	csel	x28, x9, x28, cc  // cc = lo, ul, last
   28524:	csel	x9, x11, x12, cc  // cc = lo, ul, last
   28528:	ldr	x9, [x9]
   2852c:	cbnz	x9, 28510 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1cf8>
   28530:	b	27ee8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16d0>
   28534:	mov	x0, x21
   28538:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   2853c:	mov	x21, x0
   28540:	cmp	x0, x26
   28544:	b.eq	27e1c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1604>  // b.none
   28548:	ldp	x22, x23, [x21, #32]
   2854c:	cbz	x23, 28564 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d4c>
   28550:	ldrb	w8, [x22]
   28554:	cmp	w8, #0x1
   28558:	b.ne	28564 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d4c>  // b.any
   2855c:	add	x22, x22, #0x1
   28560:	sub	x23, x23, #0x1
   28564:	sub	x0, x29, #0xa8
   28568:	bl	0 <_ZN4llvm3MD5C1Ev>
   2856c:	sub	x0, x29, #0xa8
   28570:	mov	x1, x22
   28574:	mov	x2, x23
   28578:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
   2857c:	sub	x0, x29, #0xa8
   28580:	sub	x1, x29, #0xb8
   28584:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
   28588:	ldr	x10, [sp, #128]
   2858c:	cbz	x10, 28534 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d1c>
   28590:	ldur	x8, [x29, #-184]
   28594:	mov	x9, x25
   28598:	ldr	x11, [x10, #32]
   2859c:	add	x12, x10, #0x18
   285a0:	add	x13, x10, #0x10
   285a4:	cmp	x11, x8
   285a8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   285ac:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   285b0:	ldr	x10, [x10]
   285b4:	cbnz	x10, 28598 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d80>
   285b8:	cmp	x9, x25
   285bc:	b.eq	28534 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d1c>  // b.none
   285c0:	ldr	x10, [x9, #32]
   285c4:	cmp	x8, x10
   285c8:	csel	x8, x25, x9, cc  // cc = lo, ul, last
   285cc:	cmp	x8, x25
   285d0:	b.eq	28534 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d1c>  // b.none
   285d4:	ldr	x22, [x21, #32]
   285d8:	cmn	x22, #0x2
   285dc:	b.eq	28c70 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2458>  // b.none
   285e0:	cmn	x22, #0x1
   285e4:	b.eq	28c90 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2478>  // b.none
   285e8:	ldr	x24, [x21, #40]
   285ec:	ldr	x23, [x27, #8]
   285f0:	mov	x0, x22
   285f4:	mov	x1, x24
   285f8:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
   285fc:	lsr	x8, x24, #32
   28600:	cbnz	x8, 28cb0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2498>
   28604:	orr	x2, x24, x0, lsl #32
   28608:	mov	x0, x23
   2860c:	mov	x1, x22
   28610:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
   28614:	ldp	w8, w9, [sp, #232]
   28618:	mov	x22, x0
   2861c:	cmp	w8, w9
   28620:	b.cs	2866c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e54>  // b.hs, b.nlast
   28624:	ldr	x9, [sp, #224]
   28628:	str	x22, [x9, w8, uxtw #3]
   2862c:	ldp	w8, w9, [sp, #232]
   28630:	cmp	w8, w9
   28634:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   28638:	add	w8, w8, #0x1
   2863c:	str	w8, [sp, #232]
   28640:	ldr	x19, [x21, #40]
   28644:	cmp	w8, w9
   28648:	b.cs	28688 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e70>  // b.hs, b.nlast
   2864c:	ldr	x9, [sp, #224]
   28650:	str	x19, [x9, w8, uxtw #3]
   28654:	ldp	w8, w9, [sp, #232]
   28658:	cmp	w8, w9
   2865c:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   28660:	add	w8, w8, #0x1
   28664:	str	w8, [sp, #232]
   28668:	b	28534 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d1c>
   2866c:	ldr	x1, [x29, #8]
   28670:	add	x0, sp, #0xe0
   28674:	mov	w3, #0x8                   	// #8
   28678:	mov	x2, xzr
   2867c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28680:	ldr	w8, [sp, #232]
   28684:	b	28624 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e0c>
   28688:	ldr	x1, [x29, #8]
   2868c:	add	x0, sp, #0xe0
   28690:	mov	w3, #0x8                   	// #8
   28694:	mov	x2, xzr
   28698:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2869c:	ldr	w8, [sp, #232]
   286a0:	b	2864c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e34>
   286a4:	ldr	x9, [sp, #224]
   286a8:	str	x19, [x9, w8, uxtw #3]
   286ac:	ldp	w8, w9, [sp, #232]
   286b0:	cmp	w8, w9
   286b4:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   286b8:	add	w8, w8, #0x1
   286bc:	str	w8, [sp, #232]
   286c0:	mov	x0, x21
   286c4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   286c8:	mov	x21, x0
   286cc:	cmp	x0, x26
   286d0:	b.eq	27e5c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1644>  // b.none
   286d4:	ldp	x22, x23, [x21, #32]
   286d8:	cbz	x23, 286f0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ed8>
   286dc:	ldrb	w8, [x22]
   286e0:	cmp	w8, #0x1
   286e4:	b.ne	286f0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ed8>  // b.any
   286e8:	add	x22, x22, #0x1
   286ec:	sub	x23, x23, #0x1
   286f0:	sub	x0, x29, #0xa8
   286f4:	bl	0 <_ZN4llvm3MD5C1Ev>
   286f8:	sub	x0, x29, #0xa8
   286fc:	mov	x1, x22
   28700:	mov	x2, x23
   28704:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
   28708:	sub	x0, x29, #0xa8
   2870c:	sub	x1, x29, #0xb8
   28710:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
   28714:	ldr	x10, [sp, #128]
   28718:	cbz	x10, 286c0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ea8>
   2871c:	ldur	x8, [x29, #-184]
   28720:	mov	x9, x25
   28724:	ldr	x11, [x10, #32]
   28728:	add	x12, x10, #0x18
   2872c:	add	x13, x10, #0x10
   28730:	cmp	x11, x8
   28734:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   28738:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   2873c:	ldr	x10, [x10]
   28740:	cbnz	x10, 28724 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1f0c>
   28744:	cmp	x9, x25
   28748:	b.eq	286c0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ea8>  // b.none
   2874c:	ldr	x10, [x9, #32]
   28750:	cmp	x8, x10
   28754:	csel	x8, x25, x9, cc  // cc = lo, ul, last
   28758:	cmp	x8, x25
   2875c:	b.eq	286c0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ea8>  // b.none
   28760:	ldr	x22, [x21, #32]
   28764:	cmn	x22, #0x2
   28768:	b.eq	28c70 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2458>  // b.none
   2876c:	cmn	x22, #0x1
   28770:	b.eq	28c90 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2478>  // b.none
   28774:	ldr	x24, [x21, #40]
   28778:	ldr	x23, [x27, #8]
   2877c:	mov	x0, x22
   28780:	mov	x1, x24
   28784:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
   28788:	lsr	x8, x24, #32
   2878c:	cbnz	x8, 28cb0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2498>
   28790:	orr	x2, x24, x0, lsl #32
   28794:	mov	x0, x23
   28798:	mov	x1, x22
   2879c:	bl	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
   287a0:	ldp	w8, w9, [sp, #232]
   287a4:	mov	x22, x0
   287a8:	cmp	w8, w9
   287ac:	b.cs	287f4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1fdc>  // b.hs, b.nlast
   287b0:	ldr	x9, [sp, #224]
   287b4:	str	x22, [x9, w8, uxtw #3]
   287b8:	ldp	w8, w9, [sp, #232]
   287bc:	cmp	w8, w9
   287c0:	b.cs	28c50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2438>  // b.hs, b.nlast
   287c4:	add	w8, w8, #0x1
   287c8:	str	w8, [sp, #232]
   287cc:	ldr	x19, [x21, #40]
   287d0:	cmp	w8, w9
   287d4:	b.cc	286a4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e8c>  // b.lo, b.ul, b.last
   287d8:	ldr	x1, [x29, #8]
   287dc:	add	x0, sp, #0xe0
   287e0:	mov	w3, #0x8                   	// #8
   287e4:	mov	x2, xzr
   287e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   287ec:	ldr	w8, [sp, #232]
   287f0:	b	286a4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e8c>
   287f4:	ldr	x1, [x29, #8]
   287f8:	add	x0, sp, #0xe0
   287fc:	mov	w3, #0x8                   	// #8
   28800:	mov	x2, xzr
   28804:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28808:	ldr	w8, [sp, #232]
   2880c:	b	287b0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1f98>
   28810:	ldr	x0, [x27]
   28814:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28818:	ldr	x1, [sp, #128]
   2881c:	add	x0, sp, #0x70
   28820:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28824:	ldr	x1, [sp, #192]
   28828:	add	x0, sp, #0xb0
   2882c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28830:	ldr	x0, [sp, #224]
   28834:	add	x8, sp, #0xe0
   28838:	add	x8, x8, #0x10
   2883c:	cmp	x0, x8
   28840:	b.eq	28848 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2030>  // b.none
   28844:	bl	0 <free>
   28848:	ldr	x0, [sp, #760]
   2884c:	bl	0 <_ZdlPv>
   28850:	ldr	x0, [sp, #784]
   28854:	add	x8, sp, #0x310
   28858:	add	x8, x8, #0x10
   2885c:	cmp	x0, x8
   28860:	b.eq	28868 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2050>  // b.none
   28864:	bl	0 <free>
   28868:	add	sp, sp, #0x640
   2886c:	ldp	x20, x19, [sp, #96]
   28870:	ldp	x22, x21, [sp, #80]
   28874:	ldp	x24, x23, [sp, #64]
   28878:	ldp	x26, x25, [sp, #48]
   2887c:	ldp	x28, x27, [sp, #32]
   28880:	ldp	x29, x30, [sp, #16]
   28884:	ldr	d8, [sp], #112
   28888:	ret
   2888c:	ldr	w8, [x21]
   28890:	sub	w9, w8, #0x1
   28894:	str	w9, [x21]
   28898:	cmp	w8, #0x1
   2889c:	b.eq	26dc0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5a8>  // b.none
   288a0:	b	26dd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>
   288a4:	ldr	w8, [x21]
   288a8:	sub	w9, w8, #0x1
   288ac:	str	w9, [x21]
   288b0:	cmp	w8, #0x1
   288b4:	b.eq	27230 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa18>  // b.none
   288b8:	b	27240 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>
   288bc:	ldr	w8, [x21]
   288c0:	sub	w9, w8, #0x1
   288c4:	str	w9, [x21]
   288c8:	cmp	w8, #0x1
   288cc:	b.eq	27514 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xcfc>  // b.none
   288d0:	b	27524 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>
   288d4:	ldr	w8, [x19]
   288d8:	sub	w9, w8, #0x1
   288dc:	str	w9, [x19]
   288e0:	cmp	w8, #0x1
   288e4:	b.eq	277b8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfa0>  // b.none
   288e8:	b	277c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfb0>
   288ec:	mov	w3, #0x10                  	// #16
   288f0:	mov	x0, x21
   288f4:	mov	x1, x22
   288f8:	mov	x2, xzr
   288fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28900:	ldr	w8, [x25]
   28904:	b	26a14 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1fc>
   28908:	mov	w3, #0x10                  	// #16
   2890c:	mov	x0, x21
   28910:	mov	x1, x22
   28914:	mov	x2, xzr
   28918:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2891c:	ldr	w8, [x25]
   28920:	b	26a58 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x240>
   28924:	mov	w3, #0x10                  	// #16
   28928:	mov	x0, x21
   2892c:	mov	x1, x22
   28930:	mov	x2, xzr
   28934:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28938:	ldr	w8, [x25]
   2893c:	b	26a9c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x284>
   28940:	mov	w3, #0x10                  	// #16
   28944:	mov	x0, x21
   28948:	mov	x1, x22
   2894c:	mov	x2, xzr
   28950:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28954:	ldr	w8, [x25]
   28958:	b	26ae0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2c8>
   2895c:	mov	w3, #0x10                  	// #16
   28960:	mov	x0, x21
   28964:	mov	x1, x22
   28968:	mov	x2, xzr
   2896c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28970:	ldr	w8, [x25]
   28974:	b	26b24 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x30c>
   28978:	mov	w3, #0x10                  	// #16
   2897c:	mov	x0, x21
   28980:	mov	x1, x22
   28984:	mov	x2, xzr
   28988:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2898c:	ldr	w8, [x25]
   28990:	b	26b64 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x34c>
   28994:	mov	w3, #0x10                  	// #16
   28998:	mov	x0, x21
   2899c:	mov	x1, x22
   289a0:	mov	x2, xzr
   289a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   289a8:	ldr	w8, [x25]
   289ac:	b	26ba8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x390>
   289b0:	mov	w3, #0x10                  	// #16
   289b4:	mov	x0, x21
   289b8:	mov	x1, x22
   289bc:	mov	x2, xzr
   289c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   289c4:	ldr	w8, [x25]
   289c8:	b	26be8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x3d0>
   289cc:	mov	w3, #0x10                  	// #16
   289d0:	mov	x0, x21
   289d4:	mov	x1, x22
   289d8:	mov	x2, xzr
   289dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   289e0:	ldr	w8, [x25]
   289e4:	b	26c28 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x410>
   289e8:	mov	w3, #0x10                  	// #16
   289ec:	mov	x0, x21
   289f0:	mov	x1, x22
   289f4:	mov	x2, xzr
   289f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   289fc:	ldr	w8, [x25]
   28a00:	b	26c68 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x450>
   28a04:	mov	w3, #0x10                  	// #16
   28a08:	mov	x0, x21
   28a0c:	mov	x1, x22
   28a10:	mov	x2, xzr
   28a14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28a18:	ldr	w8, [x25]
   28a1c:	b	26ca8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x490>
   28a20:	mov	w3, #0x10                  	// #16
   28a24:	mov	x0, x21
   28a28:	mov	x1, x22
   28a2c:	mov	x2, xzr
   28a30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28a34:	ldr	w8, [x26]
   28a38:	b	26e8c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x674>
   28a3c:	mov	w3, #0x10                  	// #16
   28a40:	mov	x0, x21
   28a44:	mov	x1, x22
   28a48:	mov	x2, xzr
   28a4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28a50:	ldr	w8, [x26]
   28a54:	b	26ed0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x6b8>
   28a58:	mov	w3, #0x10                  	// #16
   28a5c:	mov	x0, x21
   28a60:	mov	x1, x22
   28a64:	mov	x2, xzr
   28a68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28a6c:	ldr	w8, [x26]
   28a70:	b	26f14 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x6fc>
   28a74:	mov	w3, #0x10                  	// #16
   28a78:	mov	x0, x21
   28a7c:	mov	x1, x22
   28a80:	mov	x2, xzr
   28a84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28a88:	ldr	w8, [x26]
   28a8c:	b	26f58 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x740>
   28a90:	mov	w3, #0x10                  	// #16
   28a94:	mov	x0, x21
   28a98:	mov	x1, x22
   28a9c:	mov	x2, xzr
   28aa0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28aa4:	ldr	w8, [x26]
   28aa8:	b	26f9c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x784>
   28aac:	mov	w3, #0x10                  	// #16
   28ab0:	mov	x0, x21
   28ab4:	mov	x1, x22
   28ab8:	mov	x2, xzr
   28abc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28ac0:	ldr	w8, [x26]
   28ac4:	b	26fdc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x7c4>
   28ac8:	mov	w3, #0x10                  	// #16
   28acc:	mov	x0, x21
   28ad0:	mov	x1, x22
   28ad4:	mov	x2, xzr
   28ad8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28adc:	ldr	w8, [x26]
   28ae0:	b	27020 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x808>
   28ae4:	mov	w3, #0x10                  	// #16
   28ae8:	mov	x0, x21
   28aec:	mov	x1, x22
   28af0:	mov	x2, xzr
   28af4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28af8:	ldr	w8, [x26]
   28afc:	b	27060 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x848>
   28b00:	mov	w3, #0x10                  	// #16
   28b04:	mov	x0, x21
   28b08:	mov	x1, x22
   28b0c:	mov	x2, xzr
   28b10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28b14:	ldr	w8, [x26]
   28b18:	b	270a0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x888>
   28b1c:	mov	w3, #0x10                  	// #16
   28b20:	mov	x0, x21
   28b24:	mov	x1, x22
   28b28:	mov	x2, xzr
   28b2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28b30:	ldr	w8, [x26]
   28b34:	b	270e0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x8c8>
   28b38:	mov	w3, #0x10                  	// #16
   28b3c:	mov	x0, x21
   28b40:	mov	x1, x22
   28b44:	mov	x2, xzr
   28b48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28b4c:	ldr	w8, [x26]
   28b50:	b	27120 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x908>
   28b54:	mov	w3, #0x10                  	// #16
   28b58:	mov	x0, x21
   28b5c:	mov	x1, x22
   28b60:	mov	x2, xzr
   28b64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28b68:	ldr	w8, [x20, #24]
   28b6c:	b	272f4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xadc>
   28b70:	mov	w3, #0x10                  	// #16
   28b74:	mov	x0, x21
   28b78:	mov	x1, x22
   28b7c:	mov	x2, xzr
   28b80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28b84:	ldr	w8, [x20, #24]
   28b88:	b	27338 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xb20>
   28b8c:	mov	w3, #0x10                  	// #16
   28b90:	mov	x0, x21
   28b94:	mov	x1, x22
   28b98:	mov	x2, xzr
   28b9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28ba0:	ldr	w8, [x20, #24]
   28ba4:	b	2737c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xb64>
   28ba8:	mov	w3, #0x10                  	// #16
   28bac:	mov	x0, x21
   28bb0:	mov	x1, x22
   28bb4:	mov	x2, xzr
   28bb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28bbc:	ldr	w8, [x20, #24]
   28bc0:	b	273c0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xba8>
   28bc4:	mov	w3, #0x10                  	// #16
   28bc8:	mov	x0, x21
   28bcc:	mov	x1, x22
   28bd0:	mov	x2, xzr
   28bd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28bd8:	ldr	w8, [x20, #24]
   28bdc:	b	27400 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xbe8>
   28be0:	mov	w3, #0x10                  	// #16
   28be4:	mov	x0, x21
   28be8:	mov	x1, x22
   28bec:	mov	x2, xzr
   28bf0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28bf4:	ldr	w8, [x20, #24]
   28bf8:	b	275d8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xdc0>
   28bfc:	mov	w3, #0x10                  	// #16
   28c00:	mov	x0, x21
   28c04:	mov	x1, x22
   28c08:	mov	x2, xzr
   28c0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28c10:	ldr	w8, [x20, #24]
   28c14:	b	2761c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xe04>
   28c18:	mov	w3, #0x10                  	// #16
   28c1c:	mov	x0, x21
   28c20:	mov	x1, x22
   28c24:	mov	x2, xzr
   28c28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28c2c:	ldr	w8, [x20, #24]
   28c30:	b	27660 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xe48>
   28c34:	mov	w3, #0x10                  	// #16
   28c38:	mov	x0, x21
   28c3c:	mov	x1, x22
   28c40:	mov	x2, xzr
   28c44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28c48:	ldr	w8, [x20, #24]
   28c4c:	b	276a4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xe8c>
   28c50:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28c54:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28c58:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28c5c:	add	x0, x0, #0x0
   28c60:	add	x1, x1, #0x0
   28c64:	add	x3, x3, #0x0
   28c68:	mov	w2, #0x43                  	// #67
   28c6c:	bl	0 <__assert_fail>
   28c70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28c74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28c78:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28c7c:	add	x0, x0, #0x0
   28c80:	add	x1, x1, #0x0
   28c84:	add	x3, x3, #0x0
   28c88:	mov	w2, #0xeb                  	// #235
   28c8c:	bl	0 <__assert_fail>
   28c90:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28c94:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28c98:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28c9c:	add	x0, x0, #0x0
   28ca0:	add	x1, x1, #0x0
   28ca4:	add	x3, x3, #0x0
   28ca8:	mov	w2, #0xe9                  	// #233
   28cac:	bl	0 <__assert_fail>
   28cb0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28cb4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28cb8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28cbc:	add	x0, x0, #0x0
   28cc0:	add	x1, x1, #0x0
   28cc4:	add	x3, x3, #0x0
   28cc8:	mov	w2, #0x29                  	// #41
   28ccc:	bl	0 <__assert_fail>
   28cd0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28cd4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28cd8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28cdc:	add	x0, x0, #0x0
   28ce0:	add	x1, x1, #0x0
   28ce4:	add	x3, x3, #0x0
   28ce8:	mov	w2, #0x1cb                 	// #459
   28cec:	bl	0 <__assert_fail>
   28cf0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28cf4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28cf8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28cfc:	add	x0, x0, #0x0
   28d00:	add	x1, x1, #0x0
   28d04:	add	x3, x3, #0x0
   28d08:	mov	w2, #0x252                 	// #594
   28d0c:	bl	0 <__assert_fail>
   28d10:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d14:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d18:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d1c:	add	x0, x0, #0x0
   28d20:	add	x1, x1, #0x0
   28d24:	add	x3, x3, #0x0
   28d28:	mov	w2, #0x101c                	// #4124
   28d2c:	bl	0 <__assert_fail>
   28d30:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d34:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d38:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d3c:	add	x0, x0, #0x0
   28d40:	add	x1, x1, #0x0
   28d44:	add	x3, x3, #0x0
   28d48:	mov	w2, #0x1021                	// #4129
   28d4c:	bl	0 <__assert_fail>
   28d50:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d54:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d58:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d5c:	add	x0, x0, #0x0
   28d60:	add	x1, x1, #0x0
   28d64:	add	x3, x3, #0x0
   28d68:	mov	w2, #0x69                  	// #105
   28d6c:	bl	0 <__assert_fail>
   28d70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d78:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d7c:	add	x0, x0, #0x0
   28d80:	add	x1, x1, #0x0
   28d84:	add	x3, x3, #0x0
   28d88:	mov	w2, #0x1d8                 	// #472
   28d8c:	bl	0 <__assert_fail>
   28d90:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d94:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d98:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28d9c:	add	x0, x0, #0x0
   28da0:	add	x1, x1, #0x0
   28da4:	add	x3, x3, #0x0
   28da8:	mov	w2, #0x4cf                 	// #1231
   28dac:	bl	0 <__assert_fail>
   28db0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28db4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28db8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28dbc:	add	x0, x0, #0x0
   28dc0:	add	x1, x1, #0x0
   28dc4:	add	x3, x3, #0x0
   28dc8:	mov	w2, #0x4e0                 	// #1248
   28dcc:	bl	0 <__assert_fail>

0000000000028dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE>:
   28dd0:	stp	x29, x30, [sp, #-80]!
   28dd4:	stp	x26, x25, [sp, #16]
   28dd8:	stp	x24, x23, [sp, #32]
   28ddc:	stp	x22, x21, [sp, #48]
   28de0:	stp	x20, x19, [sp, #64]
   28de4:	mov	x29, sp
   28de8:	mov	x24, x1
   28dec:	ldr	x23, [x0, #32]
   28df0:	ldr	x25, [x24], #40
   28df4:	mov	x20, x1
   28df8:	mov	x19, x0
   28dfc:	cbz	x25, 28e70 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xa0>
   28e00:	mov	w10, #0x1                   	// #1
   28e04:	mov	x8, x25
   28e08:	mov	x9, x24
   28e0c:	b	28e28 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x58>
   28e10:	mov	w10, wzr
   28e14:	sxtb	w11, w11
   28e18:	tbnz	w11, #31, 28e78 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xa8>
   28e1c:	subs	x8, x8, #0x1
   28e20:	add	x9, x9, #0x1
   28e24:	b.eq	28e6c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x9c>  // b.none
   28e28:	ldrb	w11, [x9]
   28e2c:	tbz	w10, #0, 28e10 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x40>
   28e30:	sub	w10, w11, #0x30
   28e34:	cmp	w10, #0xa
   28e38:	mov	w10, #0x1                   	// #1
   28e3c:	b.cc	28e14 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x44>  // b.lo, b.ul, b.last
   28e40:	and	w12, w11, #0xffffffdf
   28e44:	sub	w12, w12, #0x41
   28e48:	and	w12, w12, #0xff
   28e4c:	cmp	w12, #0x1a
   28e50:	b.cc	28e14 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x44>  // b.lo, b.ul, b.last
   28e54:	cmp	w11, #0x2e
   28e58:	mov	w10, #0x1                   	// #1
   28e5c:	b.eq	28e1c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x4c>  // b.none
   28e60:	cmp	w11, #0x5f
   28e64:	b.eq	28e1c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x4c>  // b.none
   28e68:	b	28e10 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x40>
   28e6c:	cbz	w10, 28e80 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xb0>
   28e70:	add	x8, x19, #0x8
   28e74:	b	28e84 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xb4>
   28e78:	mov	x8, x19
   28e7c:	b	28e84 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xb4>
   28e80:	add	x8, x19, #0x10
   28e84:	ldr	x22, [x19, #24]
   28e88:	ldr	x9, [x8]
   28e8c:	ldr	w26, [x20, #8]
   28e90:	ldp	w8, w10, [x22, #8]
   28e94:	ldr	w21, [x9]
   28e98:	cmp	w8, w10
   28e9c:	b.cs	29004 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x234>  // b.hs, b.nlast
   28ea0:	ldr	x9, [x22]
   28ea4:	str	w26, [x9, w8, uxtw #2]
   28ea8:	ldp	w8, w9, [x22, #8]
   28eac:	cmp	w8, w9
   28eb0:	b.cs	29020 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x250>  // b.hs, b.nlast
   28eb4:	add	w8, w8, #0x1
   28eb8:	str	w8, [x22, #8]
   28ebc:	ldr	x22, [x19, #24]
   28ec0:	add	x10, x24, x25
   28ec4:	sub	x25, x10, x24
   28ec8:	ldp	w8, w9, [x22, #8]
   28ecc:	sub	x9, x9, x8
   28ed0:	cmp	x25, x9
   28ed4:	b.ls	28ef0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x120>  // b.plast
   28ed8:	add	x2, x25, x8
   28edc:	add	x1, x22, #0x10
   28ee0:	mov	w3, #0x4                   	// #4
   28ee4:	mov	x0, x22
   28ee8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28eec:	ldr	w8, [x22, #8]
   28ef0:	cmp	x25, #0x1
   28ef4:	b.lt	28f1c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x14c>  // b.tstop
   28ef8:	ldr	x9, [x22]
   28efc:	add	x8, x9, x8, lsl #2
   28f00:	add	x9, x25, #0x1
   28f04:	ldrb	w10, [x24], #1
   28f08:	sub	x9, x9, #0x1
   28f0c:	cmp	x9, #0x1
   28f10:	str	w10, [x8], #4
   28f14:	b.gt	28f04 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x134>
   28f18:	ldr	w8, [x22, #8]
   28f1c:	ldr	w9, [x22, #12]
   28f20:	add	x8, x8, x25
   28f24:	cmp	x8, x9
   28f28:	b.hi	29020 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x250>  // b.pmore
   28f2c:	str	w8, [x22, #8]
   28f30:	ldr	x0, [x23]
   28f34:	ldr	x2, [x19, #24]
   28f38:	mov	w1, #0x1                   	// #1
   28f3c:	mov	w3, w21
   28f40:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28f44:	mov	x21, x20
   28f48:	ldr	w8, [x21, #16]!
   28f4c:	cbnz	w8, 28f6c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x19c>
   28f50:	ldr	w8, [x20, #20]
   28f54:	cbnz	w8, 28f6c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x19c>
   28f58:	ldr	w8, [x20, #24]
   28f5c:	cbnz	w8, 28f6c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x19c>
   28f60:	ldp	w8, w9, [x20, #28]
   28f64:	orr	w8, w8, w9
   28f68:	cbz	w8, 28fe4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x214>
   28f6c:	ldr	x20, [x19, #24]
   28f70:	ldr	w8, [x20, #12]
   28f74:	str	wzr, [x20, #8]
   28f78:	cmp	w8, #0x4
   28f7c:	b.hi	28f9c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x1cc>  // b.pmore
   28f80:	add	x1, x20, #0x10
   28f84:	mov	w2, #0x5                   	// #5
   28f88:	mov	w3, #0x4                   	// #4
   28f8c:	mov	x0, x20
   28f90:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28f94:	ldr	w8, [x20, #8]
   28f98:	b	28fa0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x1d0>
   28f9c:	mov	x8, xzr
   28fa0:	ldr	x9, [x20]
   28fa4:	ldr	w10, [x21, #16]
   28fa8:	ldr	q0, [x21]
   28fac:	add	x8, x9, x8, lsl #2
   28fb0:	str	w10, [x8, #16]
   28fb4:	str	q0, [x8]
   28fb8:	ldp	w8, w9, [x20, #8]
   28fbc:	add	x8, x8, #0x5
   28fc0:	cmp	x8, x9
   28fc4:	b.hi	29020 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x250>  // b.pmore
   28fc8:	str	w8, [x20, #8]
   28fcc:	ldr	x8, [x19, #40]
   28fd0:	ldr	x0, [x23]
   28fd4:	ldr	x2, [x19, #24]
   28fd8:	mov	w1, #0x2                   	// #2
   28fdc:	ldr	w3, [x8]
   28fe0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28fe4:	ldr	x8, [x19, #24]
   28fe8:	str	wzr, [x8, #8]
   28fec:	ldp	x20, x19, [sp, #64]
   28ff0:	ldp	x22, x21, [sp, #48]
   28ff4:	ldp	x24, x23, [sp, #32]
   28ff8:	ldp	x26, x25, [sp, #16]
   28ffc:	ldp	x29, x30, [sp], #80
   29000:	ret
   29004:	add	x1, x22, #0x10
   29008:	mov	w3, #0x4                   	// #4
   2900c:	mov	x0, x22
   29010:	mov	x2, xzr
   29014:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   29018:	ldr	w8, [x22, #8]
   2901c:	b	28ea0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xd0>
   29020:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   29024:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   29028:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2902c:	add	x0, x0, #0x0
   29030:	add	x1, x1, #0x0
   29034:	add	x3, x3, #0x0
   29038:	mov	w2, #0x43                  	// #67
   2903c:	bl	0 <__assert_fail>

0000000000029040 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE>:
   29040:	stp	x29, x30, [sp, #-80]!
   29044:	str	x25, [sp, #16]
   29048:	stp	x24, x23, [sp, #32]
   2904c:	stp	x22, x21, [sp, #48]
   29050:	stp	x20, x19, [sp, #64]
   29054:	mov	x29, sp
   29058:	ldr	x8, [x0, #104]
   2905c:	cbz	x8, 29500 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4c0>
   29060:	ldp	x24, x25, [x8]
   29064:	mov	x20, x0
   29068:	mov	x19, x1
   2906c:	cmp	x25, x24
   29070:	b.eq	29158 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x118>  // b.none
   29074:	b.eq	29158 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x118>  // b.none
   29078:	add	x21, x19, #0x8
   2907c:	b	290cc <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x8c>
   29080:	ldr	x8, [x24]
   29084:	ldr	x9, [x22, #32]
   29088:	cmp	x8, x9
   2908c:	cset	w23, cc  // cc = lo, ul, last
   29090:	mov	w0, #0x28                  	// #40
   29094:	bl	0 <_Znwm>
   29098:	ldr	x8, [x24]
   2909c:	mov	x1, x0
   290a0:	mov	x2, x22
   290a4:	mov	x3, x21
   290a8:	str	x8, [x0, #32]
   290ac:	mov	w0, w23
   290b0:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
   290b4:	ldr	x8, [x19, #40]
   290b8:	add	x8, x8, #0x1
   290bc:	str	x8, [x19, #40]
   290c0:	add	x24, x24, #0x8
   290c4:	cmp	x24, x25
   290c8:	b.eq	29150 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x110>  // b.none
   290cc:	ldr	x9, [x19, #16]
   290d0:	cbz	x9, 29114 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xd4>
   290d4:	ldr	x8, [x24]
   290d8:	ldr	x10, [x9, #32]
   290dc:	mov	x22, x9
   290e0:	add	x9, x9, #0x10
   290e4:	add	x11, x22, #0x18
   290e8:	cmp	x8, x10
   290ec:	csel	x9, x9, x11, cc  // cc = lo, ul, last
   290f0:	ldr	x9, [x9]
   290f4:	cbnz	x9, 290d8 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x98>
   290f8:	cmp	x8, x10
   290fc:	mov	x0, x22
   29100:	b.cs	29130 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xf0>  // b.hs, b.nlast
   29104:	ldr	x8, [x19, #24]
   29108:	cmp	x8, x22
   2910c:	b.ne	29124 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xe4>  // b.any
   29110:	b	2913c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xfc>
   29114:	mov	x22, x21
   29118:	ldr	x8, [x19, #24]
   2911c:	cmp	x8, x22
   29120:	b.eq	2913c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xfc>  // b.none
   29124:	mov	x0, x22
   29128:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
   2912c:	ldr	x8, [x24]
   29130:	ldr	x9, [x0, #32]
   29134:	cmp	x9, x8
   29138:	b.cs	290c0 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x80>  // b.hs, b.nlast
   2913c:	cbz	x22, 290c0 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x80>
   29140:	cmp	x21, x22
   29144:	b.ne	29080 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x40>  // b.any
   29148:	mov	w23, #0x1                   	// #1
   2914c:	b	29090 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x50>
   29150:	ldr	x8, [x20, #104]
   29154:	cbz	x8, 29500 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4c0>
   29158:	ldp	x24, x25, [x8, #24]
   2915c:	cmp	x25, x24
   29160:	b.eq	29244 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x204>  // b.none
   29164:	add	x21, x19, #0x8
   29168:	b	291b8 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x178>
   2916c:	ldr	x8, [x24]
   29170:	ldr	x9, [x22, #32]
   29174:	cmp	x8, x9
   29178:	cset	w23, cc  // cc = lo, ul, last
   2917c:	mov	w0, #0x28                  	// #40
   29180:	bl	0 <_Znwm>
   29184:	ldr	x8, [x24]
   29188:	mov	x1, x0
   2918c:	mov	x2, x22
   29190:	mov	x3, x21
   29194:	str	x8, [x0, #32]
   29198:	mov	w0, w23
   2919c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
   291a0:	ldr	x8, [x19, #40]
   291a4:	add	x8, x8, #0x1
   291a8:	str	x8, [x19, #40]
   291ac:	add	x24, x24, #0x10
   291b0:	cmp	x24, x25
   291b4:	b.eq	2923c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x1fc>  // b.none
   291b8:	ldr	x9, [x19, #16]
   291bc:	cbz	x9, 29200 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x1c0>
   291c0:	ldr	x8, [x24]
   291c4:	ldr	x10, [x9, #32]
   291c8:	mov	x22, x9
   291cc:	add	x9, x9, #0x10
   291d0:	add	x11, x22, #0x18
   291d4:	cmp	x8, x10
   291d8:	csel	x9, x9, x11, cc  // cc = lo, ul, last
   291dc:	ldr	x9, [x9]
   291e0:	cbnz	x9, 291c4 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x184>
   291e4:	cmp	x8, x10
   291e8:	mov	x0, x22
   291ec:	b.cs	2921c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x1dc>  // b.hs, b.nlast
   291f0:	ldr	x8, [x19, #24]
   291f4:	cmp	x8, x22
   291f8:	b.ne	29210 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x1d0>  // b.any
   291fc:	b	29228 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x1e8>
   29200:	mov	x22, x21
   29204:	ldr	x8, [x19, #24]
   29208:	cmp	x8, x22
   2920c:	b.eq	29228 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x1e8>  // b.none
   29210:	mov	x0, x22
   29214:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
   29218:	ldr	x8, [x24]
   2921c:	ldr	x9, [x0, #32]
   29220:	cmp	x9, x8
   29224:	b.cs	291ac <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x16c>  // b.hs, b.nlast
   29228:	cbz	x22, 291ac <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x16c>
   2922c:	cmp	x21, x22
   29230:	b.ne	2916c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x12c>  // b.any
   29234:	mov	w23, #0x1                   	// #1
   29238:	b	2917c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   2923c:	ldr	x8, [x20, #104]
   29240:	cbz	x8, 29500 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4c0>
   29244:	ldp	x24, x25, [x8, #48]
   29248:	cmp	x25, x24
   2924c:	b.eq	29330 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x2f0>  // b.none
   29250:	add	x21, x19, #0x8
   29254:	b	292a4 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x264>
   29258:	ldr	x8, [x24]
   2925c:	ldr	x9, [x22, #32]
   29260:	cmp	x8, x9
   29264:	cset	w23, cc  // cc = lo, ul, last
   29268:	mov	w0, #0x28                  	// #40
   2926c:	bl	0 <_Znwm>
   29270:	ldr	x8, [x24]
   29274:	mov	x1, x0
   29278:	mov	x2, x22
   2927c:	mov	x3, x21
   29280:	str	x8, [x0, #32]
   29284:	mov	w0, w23
   29288:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
   2928c:	ldr	x8, [x19, #40]
   29290:	add	x8, x8, #0x1
   29294:	str	x8, [x19, #40]
   29298:	add	x24, x24, #0x10
   2929c:	cmp	x24, x25
   292a0:	b.eq	29328 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x2e8>  // b.none
   292a4:	ldr	x9, [x19, #16]
   292a8:	cbz	x9, 292ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x2ac>
   292ac:	ldr	x8, [x24]
   292b0:	ldr	x10, [x9, #32]
   292b4:	mov	x22, x9
   292b8:	add	x9, x9, #0x10
   292bc:	add	x11, x22, #0x18
   292c0:	cmp	x8, x10
   292c4:	csel	x9, x9, x11, cc  // cc = lo, ul, last
   292c8:	ldr	x9, [x9]
   292cc:	cbnz	x9, 292b0 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x270>
   292d0:	cmp	x8, x10
   292d4:	mov	x0, x22
   292d8:	b.cs	29308 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x2c8>  // b.hs, b.nlast
   292dc:	ldr	x8, [x19, #24]
   292e0:	cmp	x8, x22
   292e4:	b.ne	292fc <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x2bc>  // b.any
   292e8:	b	29314 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x2d4>
   292ec:	mov	x22, x21
   292f0:	ldr	x8, [x19, #24]
   292f4:	cmp	x8, x22
   292f8:	b.eq	29314 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x2d4>  // b.none
   292fc:	mov	x0, x22
   29300:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
   29304:	ldr	x8, [x24]
   29308:	ldr	x9, [x0, #32]
   2930c:	cmp	x9, x8
   29310:	b.cs	29298 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x258>  // b.hs, b.nlast
   29314:	cbz	x22, 29298 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x258>
   29318:	cmp	x21, x22
   2931c:	b.ne	29258 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x218>  // b.any
   29320:	mov	w23, #0x1                   	// #1
   29324:	b	29268 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x228>
   29328:	ldr	x8, [x20, #104]
   2932c:	cbz	x8, 29500 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4c0>
   29330:	ldp	x24, x25, [x8, #72]
   29334:	cmp	x25, x24
   29338:	b.eq	2941c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x3dc>  // b.none
   2933c:	add	x21, x19, #0x8
   29340:	b	29390 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x350>
   29344:	ldr	x8, [x24]
   29348:	ldr	x9, [x22, #32]
   2934c:	cmp	x8, x9
   29350:	cset	w23, cc  // cc = lo, ul, last
   29354:	mov	w0, #0x28                  	// #40
   29358:	bl	0 <_Znwm>
   2935c:	ldr	x8, [x24]
   29360:	mov	x1, x0
   29364:	mov	x2, x22
   29368:	mov	x3, x21
   2936c:	str	x8, [x0, #32]
   29370:	mov	w0, w23
   29374:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
   29378:	ldr	x8, [x19, #40]
   2937c:	add	x8, x8, #0x1
   29380:	str	x8, [x19, #40]
   29384:	add	x24, x24, #0x28
   29388:	cmp	x24, x25
   2938c:	b.eq	29414 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x3d4>  // b.none
   29390:	ldr	x9, [x19, #16]
   29394:	cbz	x9, 293d8 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x398>
   29398:	ldr	x8, [x24]
   2939c:	ldr	x10, [x9, #32]
   293a0:	mov	x22, x9
   293a4:	add	x9, x9, #0x10
   293a8:	add	x11, x22, #0x18
   293ac:	cmp	x8, x10
   293b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
   293b4:	ldr	x9, [x9]
   293b8:	cbnz	x9, 2939c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x35c>
   293bc:	cmp	x8, x10
   293c0:	mov	x0, x22
   293c4:	b.cs	293f4 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x3b4>  // b.hs, b.nlast
   293c8:	ldr	x8, [x19, #24]
   293cc:	cmp	x8, x22
   293d0:	b.ne	293e8 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x3a8>  // b.any
   293d4:	b	29400 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x3c0>
   293d8:	mov	x22, x21
   293dc:	ldr	x8, [x19, #24]
   293e0:	cmp	x8, x22
   293e4:	b.eq	29400 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x3c0>  // b.none
   293e8:	mov	x0, x22
   293ec:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
   293f0:	ldr	x8, [x24]
   293f4:	ldr	x9, [x0, #32]
   293f8:	cmp	x9, x8
   293fc:	b.cs	29384 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x344>  // b.hs, b.nlast
   29400:	cbz	x22, 29384 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x344>
   29404:	cmp	x21, x22
   29408:	b.ne	29344 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x304>  // b.any
   2940c:	mov	w23, #0x1                   	// #1
   29410:	b	29354 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x314>
   29414:	ldr	x8, [x20, #104]
   29418:	cbz	x8, 29500 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4c0>
   2941c:	ldp	x23, x24, [x8, #96]
   29420:	cmp	x24, x23
   29424:	b.eq	29500 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4c0>  // b.none
   29428:	add	x20, x19, #0x8
   2942c:	b	2947c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x43c>
   29430:	ldr	x8, [x23]
   29434:	ldr	x9, [x21, #32]
   29438:	cmp	x8, x9
   2943c:	cset	w22, cc  // cc = lo, ul, last
   29440:	mov	w0, #0x28                  	// #40
   29444:	bl	0 <_Znwm>
   29448:	ldr	x8, [x23]
   2944c:	mov	x1, x0
   29450:	mov	x2, x21
   29454:	mov	x3, x20
   29458:	str	x8, [x0, #32]
   2945c:	mov	w0, w22
   29460:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
   29464:	ldr	x8, [x19, #40]
   29468:	add	x8, x8, #0x1
   2946c:	str	x8, [x19, #40]
   29470:	add	x23, x23, #0x28
   29474:	cmp	x23, x24
   29478:	b.eq	29500 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4c0>  // b.none
   2947c:	ldr	x9, [x19, #16]
   29480:	cbz	x9, 294c4 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x484>
   29484:	ldr	x8, [x23]
   29488:	ldr	x10, [x9, #32]
   2948c:	mov	x21, x9
   29490:	add	x9, x9, #0x10
   29494:	add	x11, x21, #0x18
   29498:	cmp	x8, x10
   2949c:	csel	x9, x9, x11, cc  // cc = lo, ul, last
   294a0:	ldr	x9, [x9]
   294a4:	cbnz	x9, 29488 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x448>
   294a8:	cmp	x8, x10
   294ac:	mov	x0, x21
   294b0:	b.cs	294e0 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4a0>  // b.hs, b.nlast
   294b4:	ldr	x8, [x19, #24]
   294b8:	cmp	x8, x21
   294bc:	b.ne	294d4 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x494>  // b.any
   294c0:	b	294ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4ac>
   294c4:	mov	x21, x20
   294c8:	ldr	x8, [x19, #24]
   294cc:	cmp	x8, x21
   294d0:	b.eq	294ec <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x4ac>  // b.none
   294d4:	mov	x0, x21
   294d8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
   294dc:	ldr	x8, [x23]
   294e0:	ldr	x9, [x0, #32]
   294e4:	cmp	x9, x8
   294e8:	b.cs	29470 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x430>  // b.hs, b.nlast
   294ec:	cbz	x21, 29470 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x430>
   294f0:	cmp	x20, x21
   294f4:	b.ne	29430 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x3f0>  // b.any
   294f8:	mov	w22, #0x1                   	// #1
   294fc:	b	29440 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x400>
   29500:	ldp	x20, x19, [sp, #64]
   29504:	ldp	x22, x21, [sp, #48]
   29508:	ldp	x24, x23, [sp, #32]
   2950c:	ldr	x25, [sp, #16]
   29510:	ldp	x29, x30, [sp], #80
   29514:	ret

0000000000029518 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>:
   29518:	sub	sp, sp, #0x80
   2951c:	stp	x29, x30, [sp, #32]
   29520:	stp	x28, x27, [sp, #48]
   29524:	stp	x26, x25, [sp, #64]
   29528:	stp	x24, x23, [sp, #80]
   2952c:	stp	x22, x21, [sp, #96]
   29530:	stp	x20, x19, [sp, #112]
   29534:	add	x29, sp, #0x20
   29538:	ldr	x20, [x0, #8]
   2953c:	stur	x2, [x29, #-8]
   29540:	cbz	x2, 2a284 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd6c>
   29544:	ldr	x26, [x0]
   29548:	mov	x21, x2
   2954c:	mov	x22, x1
   29550:	mov	x19, x0
   29554:	ldr	x9, [x26, #16]
   29558:	add	x23, x26, #0x8
   2955c:	str	w3, [sp, #8]
   29560:	str	x20, [sp, #16]
   29564:	cbz	x9, 295a4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8c>
   29568:	ldr	x8, [x9, #32]
   2956c:	mov	x24, x9
   29570:	add	x9, x9, #0x10
   29574:	add	x10, x24, #0x18
   29578:	cmp	x22, x8
   2957c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   29580:	ldr	x9, [x9]
   29584:	cbnz	x9, 29568 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x50>
   29588:	cmp	x22, x8
   2958c:	mov	x0, x24
   29590:	b.cs	295bc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa4>  // b.hs, b.nlast
   29594:	ldr	x8, [x26, #24]
   29598:	cmp	x8, x24
   2959c:	b.ne	295b4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x9c>  // b.any
   295a0:	b	295c8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb0>
   295a4:	mov	x24, x23
   295a8:	ldr	x8, [x26, #24]
   295ac:	cmp	x8, x24
   295b0:	b.eq	295c8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb0>  // b.none
   295b4:	mov	x0, x24
   295b8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
   295bc:	ldr	x8, [x0, #32]
   295c0:	cmp	x8, x22
   295c4:	b.cs	29614 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xfc>  // b.hs, b.nlast
   295c8:	cbz	x24, 29614 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xfc>
   295cc:	cmp	x23, x24
   295d0:	b.eq	295e4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcc>  // b.none
   295d4:	ldr	x8, [x24, #32]
   295d8:	cmp	x22, x8
   295dc:	cset	w25, cc  // cc = lo, ul, last
   295e0:	b	295e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0>
   295e4:	mov	w25, #0x1                   	// #1
   295e8:	mov	w0, #0x28                  	// #40
   295ec:	bl	0 <_Znwm>
   295f0:	mov	x1, x0
   295f4:	str	x22, [x0, #32]
   295f8:	mov	w0, w25
   295fc:	mov	x2, x24
   29600:	mov	x3, x23
   29604:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
   29608:	ldr	x8, [x26, #40]
   2960c:	add	x8, x8, #0x1
   29610:	str	x8, [x26, #40]
   29614:	ldp	x26, x27, [x21, #40]
   29618:	cmp	x27, x26
   2961c:	b.ne	29738 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x220>  // b.any
   29620:	ldr	x24, [sp, #16]
   29624:	ldr	x8, [x24, #48]
   29628:	cbz	x8, 2a244 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd2c>
   2962c:	add	x23, x24, #0x28
   29630:	add	x26, x24, #0x20
   29634:	mov	x9, x23
   29638:	ldr	x10, [x8, #32]
   2963c:	add	x11, x8, #0x18
   29640:	add	x12, x8, #0x10
   29644:	cmp	x10, x22
   29648:	csel	x9, x9, x8, cc  // cc = lo, ul, last
   2964c:	csel	x8, x11, x12, cc  // cc = lo, ul, last
   29650:	ldr	x8, [x8]
   29654:	cbnz	x8, 29638 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x120>
   29658:	cmp	x9, x23
   2965c:	b.eq	2a244 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd2c>  // b.none
   29660:	ldr	x8, [x9, #32]
   29664:	cmp	x8, x22
   29668:	csel	x9, x23, x9, hi  // hi = pmore
   2966c:	cmp	x9, x23
   29670:	b.eq	2a244 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd2c>  // b.none
   29674:	ldr	x0, [x19, #16]
   29678:	ldr	w22, [x9, #40]
   2967c:	ldr	w8, [x0, #24]
   29680:	cbz	w8, 297c8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x2b0>
   29684:	orr	x9, x21, #0x8
   29688:	cmn	x9, #0x8
   2968c:	b.eq	2a264 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd4c>  // b.none
   29690:	ldr	x9, [x0, #8]
   29694:	ubfx	x10, x21, #4, #28
   29698:	eor	w11, w10, w21, lsr #9
   2969c:	sub	w10, w8, #0x1
   296a0:	and	w11, w11, w10
   296a4:	add	x8, x9, w11, uxtw #4
   296a8:	ldr	x13, [x8]
   296ac:	cmp	x13, x21
   296b0:	b.eq	297e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x2d0>  // b.none
   296b4:	mov	x12, xzr
   296b8:	mov	w15, #0x1                   	// #1
   296bc:	mov	x14, #0xfffffffffffffff0    	// #-16
   296c0:	cmn	x13, #0x8
   296c4:	b.eq	2a048 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb30>  // b.none
   296c8:	cmp	x12, #0x0
   296cc:	add	w11, w11, w15
   296d0:	ccmp	x13, x14, #0x0, eq  // eq = none
   296d4:	and	w11, w11, w10
   296d8:	csel	x12, x12, x8, ne  // ne = any
   296dc:	add	x8, x9, w11, uxtw #4
   296e0:	ldr	x13, [x8]
   296e4:	add	w15, w15, #0x1
   296e8:	cmp	x13, x21
   296ec:	b.eq	297e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x2d0>  // b.none
   296f0:	b	296c0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x1a8>
   296f4:	ldr	x8, [x24, #32]
   296f8:	cmp	x20, x8
   296fc:	cset	w25, cc  // cc = lo, ul, last
   29700:	mov	w0, #0x28                  	// #40
   29704:	bl	0 <_Znwm>
   29708:	mov	x1, x0
   2970c:	str	x20, [x0, #32]
   29710:	mov	w0, w25
   29714:	mov	x2, x24
   29718:	mov	x3, x23
   2971c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
   29720:	ldr	x8, [x28, #40]
   29724:	add	x8, x8, #0x1
   29728:	str	x8, [x28, #40]
   2972c:	add	x26, x26, #0x8
   29730:	cmp	x26, x27
   29734:	b.eq	29620 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x108>  // b.none
   29738:	ldr	x8, [x26]
   2973c:	ldr	x28, [x19]
   29740:	and	x8, x8, #0xfffffffffffffff8
   29744:	ldr	x9, [x28, #16]
   29748:	ldr	x20, [x8]
   2974c:	add	x23, x28, #0x8
   29750:	cbz	x9, 29790 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x278>
   29754:	ldr	x8, [x9, #32]
   29758:	mov	x24, x9
   2975c:	add	x9, x9, #0x10
   29760:	add	x10, x24, #0x18
   29764:	cmp	x20, x8
   29768:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   2976c:	ldr	x9, [x9]
   29770:	cbnz	x9, 29754 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x23c>
   29774:	cmp	x20, x8
   29778:	mov	x0, x24
   2977c:	b.cs	297a8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x290>  // b.hs, b.nlast
   29780:	ldr	x8, [x28, #24]
   29784:	cmp	x8, x24
   29788:	b.ne	297a0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x288>  // b.any
   2978c:	b	297b4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x29c>
   29790:	mov	x24, x23
   29794:	ldr	x8, [x28, #24]
   29798:	cmp	x8, x24
   2979c:	b.eq	297b4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x29c>  // b.none
   297a0:	mov	x0, x24
   297a4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
   297a8:	ldr	x8, [x0, #32]
   297ac:	cmp	x8, x20
   297b0:	b.cs	2972c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x214>  // b.hs, b.nlast
   297b4:	cbz	x24, 2972c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x214>
   297b8:	cmp	x23, x24
   297bc:	b.ne	296f4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x1dc>  // b.any
   297c0:	mov	w25, #0x1                   	// #1
   297c4:	b	29700 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x1e8>
   297c8:	mov	x3, xzr
   297cc:	sub	x1, x29, #0x8
   297d0:	sub	x2, x29, #0x8
   297d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   297d8:	ldur	x9, [x29, #-8]
   297dc:	mov	x8, x0
   297e0:	str	wzr, [x0, #8]
   297e4:	str	x9, [x0]
   297e8:	str	w22, [x8, #8]
   297ec:	ldr	w8, [sp, #8]
   297f0:	tbnz	w8, #0, 2a028 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb10>
   297f4:	ldur	x20, [x29, #-8]
   297f8:	cbz	x20, 2a2a4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd8c>
   297fc:	ldr	w8, [x20, #8]
   29800:	cmp	w8, #0x0
   29804:	csel	x21, x20, xzr, eq  // eq = none
   29808:	cbz	x21, 2983c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x324>
   2980c:	ldr	x19, [x19, #24]
   29810:	ldp	w8, w9, [x19, #8]
   29814:	cmp	w8, w9
   29818:	b.cs	2a054 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb3c>  // b.hs, b.nlast
   2981c:	ldr	x9, [x19]
   29820:	str	x21, [x9, w8, uxtw #3]
   29824:	ldp	w8, w9, [x19, #8]
   29828:	cmp	w8, w9
   2982c:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29830:	add	w8, w8, #0x1
   29834:	str	w8, [x19, #8]
   29838:	b	2a028 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb10>
   2983c:	cmp	w8, #0x1
   29840:	b.eq	298b0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x398>  // b.none
   29844:	cmp	w8, #0x2
   29848:	b.ne	2a304 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xdec>  // b.any
   2984c:	ldr	x21, [x19, #32]
   29850:	ldp	w8, w9, [x21, #8]
   29854:	cmp	w8, w9
   29858:	b.cs	2a070 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb58>  // b.hs, b.nlast
   2985c:	ldr	x9, [x21]
   29860:	str	x22, [x9, w8, uxtw #3]
   29864:	ldp	w8, w9, [x21, #8]
   29868:	cmp	w8, w9
   2986c:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29870:	add	w8, w8, #0x1
   29874:	str	w8, [x21, #8]
   29878:	ldr	x22, [x24, #16]
   2987c:	ldp	x1, x2, [x20, #24]
   29880:	ldr	x21, [x19, #32]
   29884:	add	x0, x22, #0x30
   29888:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
   2988c:	cmn	w0, #0x1
   29890:	b.eq	29930 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x418>  // b.none
   29894:	ldr	w9, [x22, #56]
   29898:	sxtw	x8, w0
   2989c:	mov	x14, x26
   298a0:	cmp	x8, x9
   298a4:	b.ne	29948 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x430>  // b.any
   298a8:	mov	x22, xzr
   298ac:	b	29954 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x43c>
   298b0:	ldr	x0, [x24]
   298b4:	mov	x1, x20
   298b8:	str	x26, [sp, #8]
   298bc:	bl	26410 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE>
   298c0:	ldr	x1, [x19, #56]
   298c4:	mov	x0, x20
   298c8:	bl	29040 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE>
   298cc:	ldr	x21, [x19, #32]
   298d0:	ldp	w8, w9, [x21, #8]
   298d4:	cmp	w8, w9
   298d8:	b.cs	2a08c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb74>  // b.hs, b.nlast
   298dc:	ldr	x9, [x21]
   298e0:	str	x22, [x9, w8, uxtw #3]
   298e4:	ldp	w8, w9, [x21, #8]
   298e8:	cmp	w8, w9
   298ec:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   298f0:	add	w8, w8, #0x1
   298f4:	str	w8, [x21, #8]
   298f8:	ldr	x22, [x24, #16]
   298fc:	ldp	x1, x2, [x20, #24]
   29900:	ldr	x21, [x19, #32]
   29904:	add	x0, x22, #0x30
   29908:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
   2990c:	cmn	w0, #0x1
   29910:	b.eq	2993c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x424>  // b.none
   29914:	ldr	w9, [x22, #56]
   29918:	ldr	x16, [sp, #8]
   2991c:	sxtw	x8, w0
   29920:	cmp	x8, x9
   29924:	b.ne	29ab0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x598>  // b.any
   29928:	mov	x22, xzr
   2992c:	b	29abc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5a4>
   29930:	mov	x22, xzr
   29934:	mov	x14, x26
   29938:	b	29954 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x43c>
   2993c:	ldr	x16, [sp, #8]
   29940:	mov	x22, xzr
   29944:	b	29abc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5a4>
   29948:	ldr	x9, [x22, #48]
   2994c:	ldr	x8, [x9, x8, lsl #3]
   29950:	ldr	x22, [x8, #8]
   29954:	ldp	w8, w9, [x21, #8]
   29958:	cmp	w8, w9
   2995c:	b.cs	2a0a8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb90>  // b.hs, b.nlast
   29960:	ldr	x9, [x21]
   29964:	str	x22, [x9, w8, uxtw #3]
   29968:	ldp	w8, w9, [x21, #8]
   2996c:	cmp	w8, w9
   29970:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29974:	add	w8, w8, #0x1
   29978:	str	w8, [x21, #8]
   2997c:	ldr	x21, [x19, #32]
   29980:	ldrb	w22, [x20, #12]
   29984:	ldp	w8, w9, [x21, #8]
   29988:	cmp	w8, w9
   2998c:	b.cs	2a0c8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xbb0>  // b.hs, b.nlast
   29990:	ldr	x9, [x21]
   29994:	str	x22, [x9, w8, uxtw #3]
   29998:	ldp	w8, w9, [x21, #8]
   2999c:	cmp	w8, w9
   299a0:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   299a4:	add	w8, w8, #0x1
   299a8:	str	w8, [x21, #8]
   299ac:	ldr	x21, [x19, #32]
   299b0:	ldr	w10, [x20, #72]
   299b4:	ldp	w8, w9, [x21, #8]
   299b8:	and	x22, x10, #0x3
   299bc:	cmp	w8, w9
   299c0:	b.cs	2a0e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xbd0>  // b.hs, b.nlast
   299c4:	ldr	x9, [x21]
   299c8:	str	x22, [x9, w8, uxtw #3]
   299cc:	ldp	w8, w9, [x21, #8]
   299d0:	cmp	w8, w9
   299d4:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   299d8:	add	w8, w8, #0x1
   299dc:	str	w8, [x21, #8]
   299e0:	ldp	x21, x22, [x20, #40]
   299e4:	cmp	x22, x21
   299e8:	b.ne	29a08 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4f0>  // b.any
   299ec:	ldp	x2, x8, [x19, #32]
   299f0:	ldr	x0, [x24]
   299f4:	mov	w1, #0x6                   	// #6
   299f8:	b	29fb0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa98>
   299fc:	add	x21, x21, #0x8
   29a00:	cmp	x21, x22
   29a04:	b.eq	299ec <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4d4>  // b.none
   29a08:	ldr	x10, [x14, #16]
   29a0c:	cbz	x10, 299fc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4e4>
   29a10:	ldr	x8, [x21]
   29a14:	mov	x9, x23
   29a18:	and	x8, x8, #0xfffffffffffffff8
   29a1c:	ldr	x8, [x8]
   29a20:	ldr	x11, [x10, #32]
   29a24:	add	x12, x10, #0x18
   29a28:	add	x13, x10, #0x10
   29a2c:	cmp	x11, x8
   29a30:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   29a34:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   29a38:	ldr	x10, [x10]
   29a3c:	cbnz	x10, 29a20 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x508>
   29a40:	cmp	x9, x23
   29a44:	b.eq	299fc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4e4>  // b.none
   29a48:	ldr	x10, [x9, #32]
   29a4c:	cmp	x10, x8
   29a50:	csel	x9, x23, x9, hi  // hi = pmore
   29a54:	cmp	x9, x23
   29a58:	b.eq	299fc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4e4>  // b.none
   29a5c:	ldr	x20, [x19, #32]
   29a60:	ldr	w25, [x9, #40]
   29a64:	ldp	w8, w10, [x20, #8]
   29a68:	cmp	w8, w10
   29a6c:	b.cs	29a90 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x578>  // b.hs, b.nlast
   29a70:	ldr	x9, [x20]
   29a74:	str	x25, [x9, w8, uxtw #3]
   29a78:	ldp	w8, w9, [x20, #8]
   29a7c:	cmp	w8, w9
   29a80:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29a84:	add	w8, w8, #0x1
   29a88:	str	w8, [x20, #8]
   29a8c:	b	299fc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4e4>
   29a90:	add	x1, x20, #0x10
   29a94:	mov	w3, #0x8                   	// #8
   29a98:	mov	x0, x20
   29a9c:	mov	x2, xzr
   29aa0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   29aa4:	ldr	w8, [x20, #8]
   29aa8:	mov	x14, x26
   29aac:	b	29a70 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x558>
   29ab0:	ldr	x9, [x22, #48]
   29ab4:	ldr	x8, [x9, x8, lsl #3]
   29ab8:	ldr	x22, [x8, #8]
   29abc:	ldp	w8, w9, [x21, #8]
   29ac0:	cmp	w8, w9
   29ac4:	b.cs	2a108 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xbf0>  // b.hs, b.nlast
   29ac8:	ldr	x9, [x21]
   29acc:	str	x22, [x9, w8, uxtw #3]
   29ad0:	ldp	w8, w9, [x21, #8]
   29ad4:	cmp	w8, w9
   29ad8:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29adc:	add	w8, w8, #0x1
   29ae0:	str	w8, [x21, #8]
   29ae4:	ldr	x21, [x19, #32]
   29ae8:	ldrb	w22, [x20, #12]
   29aec:	ldp	w8, w9, [x21, #8]
   29af0:	cmp	w8, w9
   29af4:	b.cs	2a128 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc10>  // b.hs, b.nlast
   29af8:	ldr	x9, [x21]
   29afc:	str	x22, [x9, w8, uxtw #3]
   29b00:	ldp	w8, w9, [x21, #8]
   29b04:	cmp	w8, w9
   29b08:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29b0c:	add	w8, w8, #0x1
   29b10:	str	w8, [x21, #8]
   29b14:	ldr	x21, [x19, #32]
   29b18:	ldr	w22, [x20, #64]
   29b1c:	ldp	w8, w9, [x21, #8]
   29b20:	cmp	w8, w9
   29b24:	b.cs	2a148 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc30>  // b.hs, b.nlast
   29b28:	ldr	x9, [x21]
   29b2c:	str	x22, [x9, w8, uxtw #3]
   29b30:	ldp	w8, w9, [x21, #8]
   29b34:	cmp	w8, w9
   29b38:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29b3c:	add	w8, w8, #0x1
   29b40:	str	w8, [x21, #8]
   29b44:	ldr	x21, [x19, #32]
   29b48:	ldr	w10, [x20, #68]
   29b4c:	ldp	w8, w9, [x21, #8]
   29b50:	and	x22, x10, #0x3f
   29b54:	cmp	w8, w9
   29b58:	b.cs	2a168 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc50>  // b.hs, b.nlast
   29b5c:	ldr	x9, [x21]
   29b60:	str	x22, [x9, w8, uxtw #3]
   29b64:	ldp	w8, w9, [x21, #8]
   29b68:	cmp	w8, w9
   29b6c:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29b70:	add	w8, w8, #0x1
   29b74:	str	w8, [x21, #8]
   29b78:	ldr	x21, [x19, #32]
   29b7c:	ldr	x22, [x20, #72]
   29b80:	ldp	w8, w9, [x21, #8]
   29b84:	cmp	w8, w9
   29b88:	b.cs	2a188 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc70>  // b.hs, b.nlast
   29b8c:	ldr	x9, [x21]
   29b90:	str	x22, [x9, w8, uxtw #3]
   29b94:	ldp	w8, w9, [x21, #8]
   29b98:	cmp	w8, w9
   29b9c:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29ba0:	add	w8, w8, #0x1
   29ba4:	str	w8, [x21, #8]
   29ba8:	ldr	x21, [x19, #32]
   29bac:	ldp	w8, w9, [x21, #8]
   29bb0:	cmp	w8, w9
   29bb4:	b.cs	2a1a8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc90>  // b.hs, b.nlast
   29bb8:	ldr	x9, [x21]
   29bbc:	str	xzr, [x9, w8, uxtw #3]
   29bc0:	ldp	w8, w9, [x21, #8]
   29bc4:	cmp	w8, w9
   29bc8:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29bcc:	add	w8, w8, #0x1
   29bd0:	str	w8, [x21, #8]
   29bd4:	ldr	x21, [x19, #32]
   29bd8:	ldp	w8, w9, [x21, #8]
   29bdc:	cmp	w8, w9
   29be0:	b.cs	2a1c8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcb0>  // b.hs, b.nlast
   29be4:	ldr	x9, [x21]
   29be8:	str	xzr, [x9, w8, uxtw #3]
   29bec:	ldp	w8, w9, [x21, #8]
   29bf0:	cmp	w8, w9
   29bf4:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29bf8:	add	w8, w8, #0x1
   29bfc:	str	w8, [x21, #8]
   29c00:	ldr	x21, [x19, #32]
   29c04:	ldp	w8, w9, [x21, #8]
   29c08:	cmp	w8, w9
   29c0c:	b.cs	2a1e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcd0>  // b.hs, b.nlast
   29c10:	ldr	x9, [x21]
   29c14:	str	xzr, [x9, w8, uxtw #3]
   29c18:	ldp	w8, w9, [x21, #8]
   29c1c:	cmp	w8, w9
   29c20:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29c24:	add	w8, w8, #0x1
   29c28:	str	w8, [x21, #8]
   29c2c:	ldp	x28, x26, [x20, #40]
   29c30:	cmp	x26, x28
   29c34:	b.eq	29d28 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x810>  // b.none
   29c38:	mov	w27, wzr
   29c3c:	mov	w25, wzr
   29c40:	mov	w22, wzr
   29c44:	b	29c54 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x73c>
   29c48:	add	x28, x28, #0x8
   29c4c:	cmp	x28, x26
   29c50:	b.eq	29d34 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x81c>  // b.none
   29c54:	ldr	x10, [x16, #16]
   29c58:	cbz	x10, 29c48 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x730>
   29c5c:	ldr	x8, [x28]
   29c60:	mov	x9, x23
   29c64:	and	x8, x8, #0xfffffffffffffff8
   29c68:	ldr	x8, [x8]
   29c6c:	ldr	x11, [x10, #32]
   29c70:	add	x12, x10, #0x18
   29c74:	add	x13, x10, #0x10
   29c78:	cmp	x11, x8
   29c7c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   29c80:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   29c84:	ldr	x10, [x10]
   29c88:	cbnz	x10, 29c6c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x754>
   29c8c:	cmp	x9, x23
   29c90:	b.eq	29c48 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x730>  // b.none
   29c94:	ldr	x10, [x9, #32]
   29c98:	cmp	x10, x8
   29c9c:	csel	x9, x23, x9, hi  // hi = pmore
   29ca0:	cmp	x9, x23
   29ca4:	b.eq	29c48 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x730>  // b.none
   29ca8:	ldr	x21, [x19, #32]
   29cac:	ldr	w24, [x9, #40]
   29cb0:	ldp	w8, w10, [x21, #8]
   29cb4:	cmp	w8, w10
   29cb8:	b.cs	29d08 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x7f0>  // b.hs, b.nlast
   29cbc:	ldr	x9, [x21]
   29cc0:	str	x24, [x9, w8, uxtw #3]
   29cc4:	ldp	w8, w9, [x21, #8]
   29cc8:	cmp	w8, w9
   29ccc:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29cd0:	add	w8, w8, #0x1
   29cd4:	str	w8, [x21, #8]
   29cd8:	ldr	x8, [x28]
   29cdc:	mvn	w9, w8
   29ce0:	tst	x9, #0x6
   29ce4:	b.eq	2a2c4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xdac>  // b.none
   29ce8:	ubfx	w10, w8, #2, #1
   29cec:	tst	x8, #0x2
   29cf0:	ubfx	x9, x8, #1, #1
   29cf4:	csel	w8, w10, wzr, eq  // eq = none
   29cf8:	add	w25, w25, w9
   29cfc:	add	w22, w22, w8
   29d00:	add	w27, w27, #0x1
   29d04:	b	29c48 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x730>
   29d08:	add	x1, x21, #0x10
   29d0c:	mov	w3, #0x8                   	// #8
   29d10:	mov	x0, x21
   29d14:	mov	x2, xzr
   29d18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   29d1c:	ldr	x16, [sp, #8]
   29d20:	ldr	w8, [x21, #8]
   29d24:	b	29cbc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x7a4>
   29d28:	mov	w22, wzr
   29d2c:	mov	w25, wzr
   29d30:	mov	w27, wzr
   29d34:	ldr	x2, [x19, #32]
   29d38:	ldr	w8, [x2, #8]
   29d3c:	cmp	w8, #0x6
   29d40:	b.ls	2a2e4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xdcc>  // b.plast
   29d44:	ldr	x9, [x2]
   29d48:	mov	w10, w27
   29d4c:	cmp	w8, #0x7
   29d50:	str	x10, [x9, #48]
   29d54:	b.eq	2a2e4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xdcc>  // b.none
   29d58:	ldr	x27, [sp, #16]
   29d5c:	mov	w10, w25
   29d60:	cmp	w8, #0x8
   29d64:	str	x10, [x9, #56]
   29d68:	b.ls	2a2e4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xdcc>  // b.plast
   29d6c:	mov	w8, w22
   29d70:	str	x8, [x9, #64]
   29d74:	ldp	x21, x22, [x20, #80]
   29d78:	subs	x8, x22, x21
   29d7c:	b.eq	29fa0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa88>  // b.none
   29d80:	asr	x9, x8, #4
   29d84:	lsl	x9, x9, #4
   29d88:	sub	x10, x9, #0x10
   29d8c:	add	x9, x21, #0x8
   29d90:	ldr	w11, [x9], #16
   29d94:	and	w25, w11, #0x7
   29d98:	cbnz	w25, 29dac <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x894>
   29d9c:	sub	x11, x10, #0x10
   29da0:	mov	x12, x10
   29da4:	mov	x10, x11
   29da8:	cbnz	x12, 29d90 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x878>
   29dac:	cbnz	x8, 29ddc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8c4>
   29db0:	b	29f90 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa78>
   29db4:	ldr	x9, [x20]
   29db8:	str	x24, [x9, w8, uxtw #3]
   29dbc:	ldp	w8, w9, [x20, #8]
   29dc0:	cmp	w8, w9
   29dc4:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29dc8:	add	w8, w8, #0x1
   29dcc:	str	w8, [x20, #8]
   29dd0:	add	x21, x21, #0x10
   29dd4:	cmp	x21, x22
   29dd8:	b.eq	29f8c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa74>  // b.none
   29ddc:	ldr	x8, [x21]
   29de0:	and	x9, x8, #0xfffffffffffffff8
   29de4:	ldr	x8, [x16, #16]
   29de8:	ldr	x9, [x9]
   29dec:	cbz	x8, 29ea4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x98c>
   29df0:	mov	x11, x8
   29df4:	mov	x10, x23
   29df8:	ldr	x12, [x11, #32]
   29dfc:	add	x13, x11, #0x18
   29e00:	add	x14, x11, #0x10
   29e04:	cmp	x12, x9
   29e08:	csel	x10, x10, x11, cc  // cc = lo, ul, last
   29e0c:	csel	x11, x13, x14, cc  // cc = lo, ul, last
   29e10:	ldr	x11, [x11]
   29e14:	cbnz	x11, 29df8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8e0>
   29e18:	cmp	x10, x23
   29e1c:	b.eq	29ea4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x98c>  // b.none
   29e20:	ldr	x11, [x10, #32]
   29e24:	cmp	x11, x9
   29e28:	csel	x10, x23, x10, hi  // hi = pmore
   29e2c:	cmp	x10, x23
   29e30:	b.eq	29ea4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x98c>  // b.none
   29e34:	ldr	w26, [x10, #40]
   29e38:	ldr	x20, [x19, #32]
   29e3c:	mov	w24, w26
   29e40:	ldp	w8, w9, [x20, #8]
   29e44:	cmp	w8, w9
   29e48:	b.cs	29f6c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa54>  // b.hs, b.nlast
   29e4c:	ldr	x9, [x20]
   29e50:	str	x24, [x9, w8, uxtw #3]
   29e54:	ldp	w8, w9, [x20, #8]
   29e58:	cmp	w8, w9
   29e5c:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   29e60:	add	w8, w8, #0x1
   29e64:	str	w8, [x20, #8]
   29e68:	cbz	w25, 29dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8b8>
   29e6c:	ldr	x20, [x19, #32]
   29e70:	ldr	w10, [x21, #8]
   29e74:	ldp	w8, w9, [x20, #8]
   29e78:	and	x24, x10, #0x7
   29e7c:	cmp	w8, w9
   29e80:	b.cc	29db4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x89c>  // b.lo, b.ul, b.last
   29e84:	add	x1, x20, #0x10
   29e88:	mov	w3, #0x8                   	// #8
   29e8c:	mov	x0, x20
   29e90:	mov	x2, xzr
   29e94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   29e98:	ldr	x16, [sp, #8]
   29e9c:	ldr	w8, [x20, #8]
   29ea0:	b	29db4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x89c>
   29ea4:	ldr	x0, [x27, #16]
   29ea8:	ldr	x12, [x0, #192]
   29eac:	cbz	x12, 29dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8b8>
   29eb0:	add	x10, x0, #0xb8
   29eb4:	mov	x11, x10
   29eb8:	ldr	x13, [x12, #32]
   29ebc:	add	x14, x12, #0x18
   29ec0:	add	x15, x12, #0x10
   29ec4:	cmp	x13, x9
   29ec8:	csel	x11, x11, x12, cc  // cc = lo, ul, last
   29ecc:	csel	x12, x14, x15, cc  // cc = lo, ul, last
   29ed0:	ldr	x12, [x12]
   29ed4:	cbnz	x12, 29eb8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x9a0>
   29ed8:	cmp	x11, x10
   29edc:	b.eq	29dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8b8>  // b.none
   29ee0:	ldr	x12, [x11, #32]
   29ee4:	cmp	x12, x9
   29ee8:	csel	x9, x10, x11, hi  // hi = pmore
   29eec:	cmp	x9, x10
   29ef0:	b.eq	29dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8b8>  // b.none
   29ef4:	ldr	x1, [x9, #40]
   29ef8:	cbz	x1, 29dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8b8>
   29efc:	cbz	x8, 29dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8b8>
   29f00:	mov	x9, x23
   29f04:	ldr	x10, [x8, #32]
   29f08:	add	x11, x8, #0x18
   29f0c:	add	x12, x8, #0x10
   29f10:	cmp	x10, x1
   29f14:	csel	x9, x9, x8, cc  // cc = lo, ul, last
   29f18:	csel	x8, x11, x12, cc  // cc = lo, ul, last
   29f1c:	ldr	x8, [x8]
   29f20:	cbnz	x8, 29f04 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x9ec>
   29f24:	cmp	x9, x23
   29f28:	b.eq	29dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8b8>  // b.none
   29f2c:	ldr	x8, [x9, #32]
   29f30:	cmp	x8, x1
   29f34:	csel	x8, x23, x9, hi  // hi = pmore
   29f38:	cmp	x8, x23
   29f3c:	b.eq	29dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8b8>  // b.none
   29f40:	ldr	w26, [x8, #40]
   29f44:	mov	w2, wzr
   29f48:	bl	0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryEmb>
   29f4c:	cbz	x0, 29f64 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa4c>
   29f50:	ldr	w8, [x0, #8]
   29f54:	ldr	x16, [sp, #8]
   29f58:	cmp	w8, #0x2
   29f5c:	b.eq	29dd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8b8>  // b.none
   29f60:	b	29e38 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x920>
   29f64:	ldr	x16, [sp, #8]
   29f68:	b	29e38 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x920>
   29f6c:	add	x1, x20, #0x10
   29f70:	mov	w3, #0x8                   	// #8
   29f74:	mov	x0, x20
   29f78:	mov	x2, xzr
   29f7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   29f80:	ldr	x16, [sp, #8]
   29f84:	ldr	w8, [x20, #8]
   29f88:	b	29e4c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x934>
   29f8c:	ldr	x2, [x19, #32]
   29f90:	cbz	w25, 29fa0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa88>
   29f94:	add	x8, x19, #0x40
   29f98:	mov	w1, #0x5                   	// #5
   29f9c:	b	29fa8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa90>
   29fa0:	add	x8, x19, #0x48
   29fa4:	mov	w1, #0x4                   	// #4
   29fa8:	ldr	x8, [x8]
   29fac:	ldr	x0, [x27]
   29fb0:	ldr	w3, [x8]
   29fb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   29fb8:	ldr	x8, [x19, #32]
   29fbc:	str	wzr, [x8, #8]
   29fc0:	ldur	x8, [x29, #-8]
   29fc4:	ldrb	w9, [x8, #12]
   29fc8:	and	w9, w9, #0xf
   29fcc:	sub	w9, w9, #0x7
   29fd0:	cmp	w9, #0x1
   29fd4:	b.hi	2a028 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb10>  // b.pmore
   29fd8:	ldr	x20, [x19, #48]
   29fdc:	ldr	x22, [x8, #16]
   29fe0:	ldp	x19, x21, [x20]
   29fe4:	ldp	w9, w10, [x19, #8]
   29fe8:	cmp	w9, w10
   29fec:	b.cs	2a208 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf0>  // b.hs, b.nlast
   29ff0:	ldr	x8, [x19]
   29ff4:	str	x22, [x8, w9, uxtw #3]
   29ff8:	ldp	w8, w9, [x19, #8]
   29ffc:	cmp	w8, w9
   2a000:	b.cs	2a224 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd0c>  // b.hs, b.nlast
   2a004:	add	w8, w8, #0x1
   2a008:	str	w8, [x19, #8]
   2a00c:	ldr	x0, [x21]
   2a010:	ldr	x2, [x20]
   2a014:	mov	w1, #0x9                   	// #9
   2a018:	mov	w3, wzr
   2a01c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a020:	ldr	x8, [x20]
   2a024:	str	wzr, [x8, #8]
   2a028:	ldp	x20, x19, [sp, #112]
   2a02c:	ldp	x22, x21, [sp, #96]
   2a030:	ldp	x24, x23, [sp, #80]
   2a034:	ldp	x26, x25, [sp, #64]
   2a038:	ldp	x28, x27, [sp, #48]
   2a03c:	ldp	x29, x30, [sp, #32]
   2a040:	add	sp, sp, #0x80
   2a044:	ret
   2a048:	cmp	x12, #0x0
   2a04c:	csel	x3, x8, x12, eq  // eq = none
   2a050:	b	297cc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x2b4>
   2a054:	add	x1, x19, #0x10
   2a058:	mov	w3, #0x8                   	// #8
   2a05c:	mov	x0, x19
   2a060:	mov	x2, xzr
   2a064:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a068:	ldr	w8, [x19, #8]
   2a06c:	b	2981c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x304>
   2a070:	add	x1, x21, #0x10
   2a074:	mov	w3, #0x8                   	// #8
   2a078:	mov	x0, x21
   2a07c:	mov	x2, xzr
   2a080:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a084:	ldr	w8, [x21, #8]
   2a088:	b	2985c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x344>
   2a08c:	add	x1, x21, #0x10
   2a090:	mov	w3, #0x8                   	// #8
   2a094:	mov	x0, x21
   2a098:	mov	x2, xzr
   2a09c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a0a0:	ldr	w8, [x21, #8]
   2a0a4:	b	298dc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x3c4>
   2a0a8:	add	x1, x21, #0x10
   2a0ac:	mov	w3, #0x8                   	// #8
   2a0b0:	mov	x0, x21
   2a0b4:	mov	x2, xzr
   2a0b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a0bc:	ldr	w8, [x21, #8]
   2a0c0:	mov	x14, x26
   2a0c4:	b	29960 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x448>
   2a0c8:	add	x1, x21, #0x10
   2a0cc:	mov	w3, #0x8                   	// #8
   2a0d0:	mov	x0, x21
   2a0d4:	mov	x2, xzr
   2a0d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a0dc:	ldr	w8, [x21, #8]
   2a0e0:	mov	x14, x26
   2a0e4:	b	29990 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x478>
   2a0e8:	add	x1, x21, #0x10
   2a0ec:	mov	w3, #0x8                   	// #8
   2a0f0:	mov	x0, x21
   2a0f4:	mov	x2, xzr
   2a0f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a0fc:	ldr	w8, [x21, #8]
   2a100:	mov	x14, x26
   2a104:	b	299c4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4ac>
   2a108:	add	x1, x21, #0x10
   2a10c:	mov	w3, #0x8                   	// #8
   2a110:	mov	x0, x21
   2a114:	mov	x2, xzr
   2a118:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a11c:	ldr	x16, [sp, #8]
   2a120:	ldr	w8, [x21, #8]
   2a124:	b	29ac8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5b0>
   2a128:	add	x1, x21, #0x10
   2a12c:	mov	w3, #0x8                   	// #8
   2a130:	mov	x0, x21
   2a134:	mov	x2, xzr
   2a138:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a13c:	ldr	x16, [sp, #8]
   2a140:	ldr	w8, [x21, #8]
   2a144:	b	29af8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5e0>
   2a148:	add	x1, x21, #0x10
   2a14c:	mov	w3, #0x8                   	// #8
   2a150:	mov	x0, x21
   2a154:	mov	x2, xzr
   2a158:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a15c:	ldr	x16, [sp, #8]
   2a160:	ldr	w8, [x21, #8]
   2a164:	b	29b28 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x610>
   2a168:	add	x1, x21, #0x10
   2a16c:	mov	w3, #0x8                   	// #8
   2a170:	mov	x0, x21
   2a174:	mov	x2, xzr
   2a178:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a17c:	ldr	x16, [sp, #8]
   2a180:	ldr	w8, [x21, #8]
   2a184:	b	29b5c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x644>
   2a188:	add	x1, x21, #0x10
   2a18c:	mov	w3, #0x8                   	// #8
   2a190:	mov	x0, x21
   2a194:	mov	x2, xzr
   2a198:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a19c:	ldr	x16, [sp, #8]
   2a1a0:	ldr	w8, [x21, #8]
   2a1a4:	b	29b8c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x674>
   2a1a8:	add	x1, x21, #0x10
   2a1ac:	mov	w3, #0x8                   	// #8
   2a1b0:	mov	x0, x21
   2a1b4:	mov	x2, xzr
   2a1b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a1bc:	ldr	x16, [sp, #8]
   2a1c0:	ldr	w8, [x21, #8]
   2a1c4:	b	29bb8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x6a0>
   2a1c8:	add	x1, x21, #0x10
   2a1cc:	mov	w3, #0x8                   	// #8
   2a1d0:	mov	x0, x21
   2a1d4:	mov	x2, xzr
   2a1d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a1dc:	ldr	x16, [sp, #8]
   2a1e0:	ldr	w8, [x21, #8]
   2a1e4:	b	29be4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x6cc>
   2a1e8:	add	x1, x21, #0x10
   2a1ec:	mov	w3, #0x8                   	// #8
   2a1f0:	mov	x0, x21
   2a1f4:	mov	x2, xzr
   2a1f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a1fc:	ldr	x16, [sp, #8]
   2a200:	ldr	w8, [x21, #8]
   2a204:	b	29c10 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x6f8>
   2a208:	add	x1, x19, #0x10
   2a20c:	mov	w3, #0x8                   	// #8
   2a210:	mov	x0, x19
   2a214:	mov	x2, xzr
   2a218:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2a21c:	ldr	w9, [x19, #8]
   2a220:	b	29ff0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xad8>
   2a224:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a228:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a22c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a230:	add	x0, x0, #0x0
   2a234:	add	x1, x1, #0x0
   2a238:	add	x3, x3, #0x0
   2a23c:	mov	w2, #0x43                  	// #67
   2a240:	bl	0 <__assert_fail>
   2a244:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a248:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a24c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a250:	add	x0, x0, #0x0
   2a254:	add	x1, x1, #0x0
   2a258:	add	x3, x3, #0x0
   2a25c:	mov	w2, #0xfa1                 	// #4001
   2a260:	bl	0 <__assert_fail>
   2a264:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a268:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a26c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a270:	add	x0, x0, #0x0
   2a274:	add	x1, x1, #0x0
   2a278:	add	x3, x3, #0x0
   2a27c:	mov	w2, #0x252                 	// #594
   2a280:	bl	0 <__assert_fail>
   2a284:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a288:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a28c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a290:	add	x0, x0, #0x0
   2a294:	add	x1, x1, #0x0
   2a298:	add	x3, x3, #0x0
   2a29c:	mov	w2, #0xf9b                 	// #3995
   2a2a0:	bl	0 <__assert_fail>
   2a2a4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a2a8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a2ac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a2b0:	add	x0, x0, #0x0
   2a2b4:	add	x1, x1, #0x0
   2a2b8:	add	x3, x3, #0x0
   2a2bc:	mov	w2, #0x69                  	// #105
   2a2c0:	bl	0 <__assert_fail>
   2a2c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a2c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a2cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a2d0:	add	x0, x0, #0x0
   2a2d4:	add	x1, x1, #0x0
   2a2d8:	add	x3, x3, #0x0
   2a2dc:	mov	w2, #0xc3                  	// #195
   2a2e0:	bl	0 <__assert_fail>
   2a2e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a2e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a2ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a2f0:	add	x0, x0, #0x0
   2a2f4:	add	x1, x1, #0x0
   2a2f8:	add	x3, x3, #0x0
   2a2fc:	mov	w2, #0x95                  	// #149
   2a300:	bl	0 <__assert_fail>
   2a304:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a308:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a30c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2a310:	add	x0, x0, #0x0
   2a314:	add	x1, x1, #0x0
   2a318:	add	x3, x3, #0x0
   2a31c:	mov	w2, #0x108                 	// #264
   2a320:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIjLb0ENS0_6parserIjEEEE>
  10:	ldr	x8, [x0, #184]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev+0x38>
  28:	add	x0, x19, #0xa8
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  3c:	ldp	x8, x0, [x19, #96]
  40:	ldr	x9, [x9]
  44:	cmp	x0, x8
  48:	add	x9, x9, #0x10
  4c:	str	x9, [x19]
  50:	b.eq	58 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x8, [x19, #88]
  5c:	ldr	x0, [x19, #64]
  60:	add	x9, x19, #0x50
  64:	add	x8, x8, #0x1
  68:	cmp	x0, x9
  6c:	str	x8, [x19, #88]
  70:	b.eq	80 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev+0x80>  // b.none
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	0 <free>
  80:	ldr	x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  10:	ldr	x8, [x0, #184]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x38>
  28:	add	x0, x19, #0xa8
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  3c:	ldp	x8, x0, [x19, #96]
  40:	ldr	x9, [x9]
  44:	cmp	x0, x8
  48:	add	x9, x9, #0x10
  4c:	str	x9, [x19]
  50:	b.eq	58 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x8, [x19, #88]
  5c:	ldr	x0, [x19, #64]
  60:	add	x9, x19, #0x50
  64:	add	x8, x8, #0x1
  68:	cmp	x0, x9
  6c:	str	x8, [x19, #88]
  70:	b.eq	80 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x80>  // b.none
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	0 <free>
  80:	ldr	x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter13EnterSubblockEjj:

0000000000000000 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	mov	w21, w2
  1c:	ldr	w2, [x0, #16]
  20:	mov	w20, w1
  24:	mov	w1, #0x1                   	// #1
  28:	mov	x19, x0
  2c:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  30:	cmp	w20, #0x80
  34:	mov	w1, w20
  38:	b.cc	64 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x64>  // b.lo, b.ul, b.last
  3c:	mov	w22, w20
  40:	mov	w1, #0x80                  	// #128
  44:	bfxil	w1, w22, #0, #7
  48:	mov	w2, #0x8                   	// #8
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  54:	lsr	w1, w22, #7
  58:	lsr	w8, w22, #14
  5c:	mov	w22, w1
  60:	cbnz	w8, 40 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x40>
  64:	mov	w2, #0x8                   	// #8
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  70:	cmp	w21, #0x8
  74:	mov	w1, w21
  78:	b.cc	a4 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xa4>  // b.lo, b.ul, b.last
  7c:	mov	w22, w21
  80:	mov	w1, #0x8                   	// #8
  84:	bfxil	w1, w22, #0, #3
  88:	mov	w2, #0x4                   	// #4
  8c:	mov	x0, x19
  90:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  94:	lsr	w1, w22, #3
  98:	cmp	w22, #0x3f
  9c:	mov	w22, w1
  a0:	b.hi	80 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x80>  // b.pmore
  a4:	mov	w2, #0x4                   	// #4
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  b0:	ldr	w8, [x19, #8]
  b4:	cbz	w8, 108 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x108>
  b8:	ldr	x22, [x19]
  bc:	ldr	w23, [x19, #12]
  c0:	ldp	w8, w9, [x22, #8]
  c4:	sub	x9, x9, x8
  c8:	cmp	x9, #0x3
  cc:	b.hi	e8 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xe8>  // b.pmore
  d0:	add	x2, x8, #0x4
  d4:	add	x1, x22, #0x10
  d8:	mov	w3, #0x1                   	// #1
  dc:	mov	x0, x22
  e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  e4:	ldr	w8, [x22, #8]
  e8:	ldr	x9, [x22]
  ec:	str	w23, [x9, x8]
  f0:	ldp	w8, w9, [x22, #8]
  f4:	add	x8, x8, #0x4
  f8:	cmp	x8, x9
  fc:	b.hi	258 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x258>  // b.pmore
 100:	str	w8, [x22, #8]
 104:	str	xzr, [x19, #8]
 108:	ldr	x22, [x19]
 10c:	ldr	w8, [x22, #8]
 110:	tst	x8, #0x3
 114:	b.ne	278 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x278>  // b.any
 118:	lsr	x9, x8, #2
 11c:	str	x9, [x29, #24]
 120:	ldp	w23, w9, [x19, #12]
 124:	stur	w9, [x29, #-4]
 128:	ldr	w9, [x22, #12]
 12c:	sub	x9, x9, x8
 130:	cmp	x9, #0x3
 134:	b.hi	150 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x150>  // b.pmore
 138:	add	x2, x8, #0x4
 13c:	add	x1, x22, #0x10
 140:	mov	w3, #0x1                   	// #1
 144:	mov	x0, x22
 148:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 14c:	ldr	w8, [x22, #8]
 150:	ldr	x9, [x22]
 154:	str	w23, [x9, x8]
 158:	ldp	w8, w9, [x22, #8]
 15c:	add	x8, x8, #0x4
 160:	cmp	x8, x9
 164:	b.hi	258 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x258>  // b.pmore
 168:	str	w8, [x22, #8]
 16c:	ldr	w8, [x19, #8]
 170:	ldp	x1, x9, [x19, #56]
 174:	str	w21, [x19, #16]
 178:	and	w8, w8, #0x1f
 17c:	cmp	x1, x9
 180:	stp	w8, wzr, [x19, #8]
 184:	b.eq	1ac <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x1ac>  // b.none
 188:	ldur	w8, [x29, #-4]
 18c:	ldr	x9, [x29, #24]
 190:	stp	xzr, xzr, [x1, #24]
 194:	str	w8, [x1]
 198:	stp	x9, xzr, [x1, #8]
 19c:	ldr	x8, [x19, #56]
 1a0:	add	x8, x8, #0x28
 1a4:	str	x8, [x19, #56]
 1a8:	b	1c0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x1c0>
 1ac:	add	x0, x19, #0x30
 1b0:	sub	x2, x29, #0x4
 1b4:	add	x3, x29, #0x18
 1b8:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 1bc:	ldr	x8, [x19, #56]
 1c0:	ldr	q1, [x19, #24]!
 1c4:	ldur	x10, [x8, #-24]
 1c8:	ldur	q0, [x8, #-16]
 1cc:	stur	q1, [x8, #-24]
 1d0:	ldr	x9, [x19, #16]
 1d4:	stur	x9, [x8, #-8]
 1d8:	ldp	x8, x9, [x19, #48]
 1dc:	str	x10, [x19]
 1e0:	stur	q0, [x19, #8]
 1e4:	cmp	x8, x9
 1e8:	b.eq	210 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x210>  // b.none
 1ec:	mov	x10, x9
 1f0:	ldr	w11, [x10, #-32]!
 1f4:	cmp	w11, w20
 1f8:	b.ne	210 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x210>  // b.any
 1fc:	ldp	x2, x3, [x10, #8]
 200:	fmov	x1, d0
 204:	mov	x0, x19
 208:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 20c:	b	240 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x240>
 210:	sub	x9, x9, x8
 214:	lsr	x9, x9, #5
 218:	cbz	w9, 240 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x240>
 21c:	mov	w11, wzr
 220:	mov	w10, w11
 224:	add	x10, x8, x10, lsl #5
 228:	ldr	w12, [x10]
 22c:	cmp	w12, w20
 230:	b.eq	1fc <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x1fc>  // b.none
 234:	add	w11, w11, #0x1
 238:	cmp	w9, w11
 23c:	b.ne	220 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x220>  // b.any
 240:	ldp	x20, x19, [sp, #64]
 244:	ldp	x22, x21, [sp, #48]
 248:	ldr	x23, [sp, #32]
 24c:	ldp	x29, x30, [sp, #16]
 250:	add	sp, sp, #0x50
 254:	ret
 258:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 25c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 260:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 264:	add	x0, x0, #0x0
 268:	add	x1, x1, #0x0
 26c:	add	x3, x3, #0x0
 270:	mov	w2, #0x43                  	// #67
 274:	bl	0 <__assert_fail>
 278:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 27c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 280:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 284:	add	x0, x0, #0x0
 288:	add	x1, x1, #0x0
 28c:	add	x3, x3, #0x0
 290:	mov	w2, #0x4f                  	// #79
 294:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter9ExitBlockEv:

0000000000000000 <_ZN4llvm15BitstreamWriter9ExitBlockEv>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	x8, x21, [x0, #48]
  18:	cmp	x8, x21
  1c:	b.eq	1d8 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x1d8>  // b.none
  20:	ldr	w2, [x0, #16]
  24:	mov	w1, wzr
  28:	mov	x19, x0
  2c:	bl	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  30:	ldr	w8, [x19, #8]
  34:	cbz	w8, 88 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x88>
  38:	ldr	x20, [x19]
  3c:	ldr	w22, [x19, #12]
  40:	ldp	w8, w9, [x20, #8]
  44:	sub	x9, x9, x8
  48:	cmp	x9, #0x3
  4c:	b.hi	68 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x68>  // b.pmore
  50:	add	x2, x8, #0x4
  54:	add	x1, x20, #0x10
  58:	mov	w3, #0x1                   	// #1
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  64:	ldr	w8, [x20, #8]
  68:	ldr	x9, [x20]
  6c:	str	w22, [x9, x8]
  70:	ldp	w8, w9, [x20, #8]
  74:	add	x8, x8, #0x4
  78:	cmp	x8, x9
  7c:	b.hi	258 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x258>  // b.pmore
  80:	str	w8, [x20, #8]
  84:	str	xzr, [x19, #8]
  88:	ldr	x10, [x19]
  8c:	ldr	w8, [x10, #8]
  90:	tst	x8, #0x3
  94:	b.ne	1f8 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x1f8>  // b.any
  98:	ldur	w11, [x21, #-32]
  9c:	lsl	w9, w11, #2
  a0:	cmp	x9, x8
  a4:	b.cs	218 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x218>  // b.hs, b.nlast
  a8:	ldr	x10, [x10]
  ac:	ldr	w12, [x10, x9]
  b0:	cbnz	w12, 238 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x238>
  b4:	lsr	x8, x8, #2
  b8:	mvn	w11, w11
  bc:	add	w8, w11, w8
  c0:	str	w8, [x10, x9]
  c4:	ldur	w8, [x21, #-40]
  c8:	sub	x1, x21, #0x18
  cc:	add	x0, x19, #0x18
  d0:	str	w8, [x19, #16]
  d4:	bl	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  d8:	ldr	x21, [x19, #56]
  dc:	sub	x8, x21, #0x28
  e0:	str	x8, [x19, #56]
  e4:	ldp	x19, x22, [x21, #-24]
  e8:	cmp	x19, x22
  ec:	b.eq	1a8 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x1a8>  // b.none
  f0:	adrp	x23, 0 <__pthread_key_create>
  f4:	ldr	x23, [x23]
  f8:	b	108 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x108>
  fc:	add	x19, x19, #0x10
 100:	cmp	x19, x22
 104:	b.eq	1a4 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x1a4>  // b.none
 108:	ldr	x20, [x19, #8]
 10c:	cbz	x20, fc <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xfc>
 110:	add	x8, x20, #0x8
 114:	cbz	x23, 134 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x134>
 118:	ldaxr	w9, [x8]
 11c:	sub	w10, w9, #0x1
 120:	stlxr	w11, w10, [x8]
 124:	cbnz	w11, 118 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x118>
 128:	cmp	w9, #0x1
 12c:	b.ne	fc <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xfc>  // b.any
 130:	b	148 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x148>
 134:	ldr	w9, [x8]
 138:	sub	w10, w9, #0x1
 13c:	str	w10, [x8]
 140:	cmp	w9, #0x1
 144:	b.ne	fc <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xfc>  // b.any
 148:	mov	x24, x20
 14c:	ldr	x8, [x24], #12
 150:	mov	x0, x20
 154:	ldr	x8, [x8, #16]
 158:	blr	x8
 15c:	cbz	x23, 17c <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x17c>
 160:	ldaxr	w8, [x24]
 164:	sub	w9, w8, #0x1
 168:	stlxr	w10, w9, [x24]
 16c:	cbnz	w10, 160 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x160>
 170:	cmp	w8, #0x1
 174:	b.ne	fc <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xfc>  // b.any
 178:	b	190 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x190>
 17c:	ldr	w8, [x24]
 180:	sub	w9, w8, #0x1
 184:	str	w9, [x24]
 188:	cmp	w8, #0x1
 18c:	b.ne	fc <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xfc>  // b.any
 190:	ldr	x8, [x20]
 194:	mov	x0, x20
 198:	ldr	x8, [x8, #24]
 19c:	blr	x8
 1a0:	b	fc <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xfc>
 1a4:	ldur	x19, [x21, #-24]
 1a8:	cbz	x19, 1c4 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x1c4>
 1ac:	mov	x0, x19
 1b0:	ldp	x20, x19, [sp, #48]
 1b4:	ldp	x22, x21, [sp, #32]
 1b8:	ldp	x24, x23, [sp, #16]
 1bc:	ldp	x29, x30, [sp], #64
 1c0:	b	0 <_ZdlPv>
 1c4:	ldp	x20, x19, [sp, #48]
 1c8:	ldp	x22, x21, [sp, #32]
 1cc:	ldp	x24, x23, [sp, #16]
 1d0:	ldp	x29, x30, [sp], #64
 1d4:	ret
 1d8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1dc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1e0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1e4:	add	x0, x0, #0x0
 1e8:	add	x1, x1, #0x0
 1ec:	add	x3, x3, #0x0
 1f0:	mov	w2, #0xe5                  	// #229
 1f4:	bl	0 <__assert_fail>
 1f8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1fc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 200:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 204:	add	x0, x0, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x3, x3, #0x0
 210:	mov	w2, #0x4f                  	// #79
 214:	bl	0 <__assert_fail>
 218:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 21c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 220:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 224:	add	x0, x0, #0x0
 228:	add	x1, x1, #0x0
 22c:	add	x3, x3, #0x0
 230:	mov	w2, #0x95                  	// #149
 234:	bl	0 <__assert_fail>
 238:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 23c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 240:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 244:	add	x0, x0, #0x0
 248:	add	x1, x1, #0x0
 24c:	add	x3, x3, #0x0
 250:	mov	w2, #0x6d                  	// #109
 254:	bl	0 <__assert_fail>
 258:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 25c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 260:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 264:	add	x0, x0, #0x0
 268:	add	x1, x1, #0x0
 26c:	add	x3, x3, #0x0
 270:	mov	w2, #0x43                  	// #67
 274:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12consumeErrorENS_5ErrorE:

0000000000000000 <_ZN4llvm12consumeErrorENS_5ErrorE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #112]
   8:	add	x29, sp, #0x70
   c:	ldr	x8, [x0]
  10:	str	xzr, [x0]
  14:	add	x0, sp, #0x10
  18:	add	x1, sp, #0x8
  1c:	orr	x8, x8, #0x1
  20:	str	x8, [sp, #16]
  24:	add	x8, sp, #0x18
  28:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  2c:	ldr	x8, [sp, #24]
  30:	tst	x8, #0xfffffffffffffffe
  34:	and	x9, x8, #0xfffffffffffffffe
  38:	cset	w8, ne  // ne = any
  3c:	orr	x8, x9, x8
  40:	str	x8, [sp, #24]
  44:	cbnz	x9, 60 <_ZN4llvm12consumeErrorENS_5ErrorE+0x60>
  48:	cbnz	x8, d0 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd0>
  4c:	ldr	x8, [sp, #16]
  50:	cbnz	x8, d8 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd8>
  54:	ldp	x29, x30, [sp, #112]
  58:	add	sp, sp, #0x80
  5c:	ret
  60:	sturb	wzr, [x29, #-16]
  64:	stp	xzr, xzr, [sp, #48]
  68:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
  6c:	ldr	x10, [x10]
  70:	sub	x8, x29, #0x20
  74:	mov	w9, #0x1                   	// #1
  78:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  7c:	add	x11, x8, #0x10
  80:	str	w9, [sp, #64]
  84:	add	x9, x10, #0x10
  88:	add	x1, x1, #0x0
  8c:	add	x0, sp, #0x20
  90:	stp	x11, xzr, [x29, #-32]
  94:	stp	x9, xzr, [sp, #32]
  98:	str	x8, [sp, #72]
  9c:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  ac:	add	x1, sp, #0x18
  b0:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  b4:	add	x0, sp, #0x20
  b8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  bc:	ldr	x0, [x0]
  c0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  c4:	add	x1, x1, #0x0
  c8:	mov	w2, #0x2c9                 	// #713
  cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  d0:	add	x0, sp, #0x18
  d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  d8:	add	x0, sp, #0x10
  dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm15SmallVectorImplIcE6insertEPcmRKc:

0000000000000000 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0]
  1c:	ldr	w8, [x0, #8]
  20:	mov	x20, x3
  24:	mov	x19, x2
  28:	mov	x21, x0
  2c:	add	x10, x9, x8
  30:	cmp	x10, x1
  34:	sub	x25, x1, x9
  38:	b.eq	e0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xe0>  // b.none
  3c:	cmp	x9, x1
  40:	b.hi	204 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x204>  // b.pmore
  44:	cmp	x10, x1
  48:	b.cc	224 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x224>  // b.lo, b.ul, b.last
  4c:	ldr	w10, [x21, #12]
  50:	add	x2, x8, x19
  54:	cmp	x2, x10
  58:	b.ls	74 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x74>  // b.plast
  5c:	add	x1, x21, #0x10
  60:	mov	w3, #0x1                   	// #1
  64:	mov	x0, x21
  68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  6c:	ldr	x9, [x21]
  70:	ldr	w8, [x21, #8]
  74:	add	x22, x9, x25
  78:	add	x23, x9, x8
  7c:	sub	x24, x23, x22
  80:	cmp	x24, x19
  84:	b.cs	110 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x110>  // b.hs, b.nlast
  88:	ldr	w11, [x21, #12]
  8c:	add	x10, x8, x19
  90:	cmp	x10, x11
  94:	b.hi	1e4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1e4>  // b.pmore
  98:	cmp	x25, x8
  9c:	str	w10, [x21, #8]
  a0:	b.eq	b8 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xb8>  // b.none
  a4:	add	x8, x9, w10, uxtw
  a8:	sub	x0, x8, x24
  ac:	mov	x1, x22
  b0:	mov	x2, x24
  b4:	bl	0 <memcpy>
  b8:	cbz	x24, cc <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xcc>
  bc:	ldrb	w1, [x20]
  c0:	mov	x0, x22
  c4:	mov	x2, x24
  c8:	bl	0 <memset>
  cc:	subs	x2, x19, x24
  d0:	b.eq	1c8 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1c8>  // b.none
  d4:	ldrb	w1, [x20]
  d8:	mov	x0, x23
  dc:	b	1c4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1c4>
  e0:	ldr	w10, [x21, #12]
  e4:	sub	x11, x10, x8
  e8:	cmp	x11, x19
  ec:	b.cs	144 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x144>  // b.hs, b.nlast
  f0:	add	x2, x8, x19
  f4:	add	x1, x21, #0x10
  f8:	mov	w3, #0x1                   	// #1
  fc:	mov	x0, x21
 100:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 104:	ldr	x9, [x21]
 108:	ldr	w8, [x21, #8]
 10c:	b	148 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x148>
 110:	ldr	w10, [x21, #12]
 114:	sub	x24, x23, x19
 118:	sub	x11, x10, x8
 11c:	cmp	x11, x19
 120:	b.cs	178 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x178>  // b.hs, b.nlast
 124:	add	x2, x8, x19
 128:	add	x1, x21, #0x10
 12c:	mov	w3, #0x1                   	// #1
 130:	mov	x0, x21
 134:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 138:	ldr	x9, [x21]
 13c:	ldr	w8, [x21, #8]
 140:	b	17c <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x17c>
 144:	cbz	x19, 15c <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x15c>
 148:	ldrb	w1, [x20]
 14c:	add	x0, x9, x8
 150:	mov	x2, x19
 154:	bl	0 <memset>
 158:	ldp	w8, w10, [x21, #8]
 15c:	add	x8, x8, x19
 160:	cmp	x8, x10
 164:	b.hi	1e4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1e4>  // b.pmore
 168:	ldr	x9, [x21]
 16c:	str	w8, [x21, #8]
 170:	add	x22, x9, x25
 174:	b	1c8 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1c8>
 178:	cbz	x19, 190 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x190>
 17c:	add	x0, x9, x8
 180:	mov	x1, x24
 184:	mov	x2, x19
 188:	bl	0 <memmove>
 18c:	ldp	w8, w10, [x21, #8]
 190:	add	x8, x8, x19
 194:	cmp	x8, x10
 198:	b.hi	1e4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1e4>  // b.pmore
 19c:	subs	x2, x24, x22
 1a0:	str	w8, [x21, #8]
 1a4:	b.eq	1b4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1b4>  // b.none
 1a8:	sub	x0, x23, x2
 1ac:	mov	x1, x22
 1b0:	bl	0 <memmove>
 1b4:	cbz	x19, 1c8 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1c8>
 1b8:	ldrb	w1, [x20]
 1bc:	mov	x0, x22
 1c0:	mov	x2, x19
 1c4:	bl	0 <memset>
 1c8:	mov	x0, x22
 1cc:	ldp	x20, x19, [sp, #64]
 1d0:	ldp	x22, x21, [sp, #48]
 1d4:	ldp	x24, x23, [sp, #32]
 1d8:	ldr	x25, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #80
 1e0:	ret
 1e4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 1e8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 1ec:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 1f0:	add	x0, x0, #0x0
 1f4:	add	x1, x1, #0x0
 1f8:	add	x3, x3, #0x0
 1fc:	mov	w2, #0x43                  	// #67
 200:	bl	0 <__assert_fail>
 204:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 208:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 20c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 210:	add	x0, x0, #0x0
 214:	add	x1, x1, #0x0
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x217                 	// #535
 220:	bl	0 <__assert_fail>
 224:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 228:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 22c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 230:	add	x0, x0, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x3, x3, #0x0
 23c:	mov	w2, #0x218                 	// #536
 240:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter4EmitEjj:

0000000000000000 <_ZN4llvm15BitstreamWriter4EmitEjj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	w8, w2, #0x1
  18:	cmp	w8, #0x1f
  1c:	b.hi	dc <_ZN4llvm15BitstreamWriter4EmitEjj+0xdc>  // b.pmore
  20:	neg	w8, w2
  24:	mov	w9, #0xffffffff            	// #-1
  28:	lsr	w8, w9, w8
  2c:	mov	w20, w2
  30:	mov	w21, w1
  34:	bics	wzr, w1, w8
  38:	b.ne	fc <_ZN4llvm15BitstreamWriter4EmitEjj+0xfc>  // b.any
  3c:	ldp	w8, w9, [x0, #8]
  40:	mov	x19, x0
  44:	lsl	w10, w21, w8
  48:	add	w8, w8, w20
  4c:	orr	w23, w9, w10
  50:	cmp	w8, #0x20
  54:	str	w23, [x0, #12]
  58:	b.cc	c4 <_ZN4llvm15BitstreamWriter4EmitEjj+0xc4>  // b.lo, b.ul, b.last
  5c:	ldr	x22, [x19]
  60:	ldp	w8, w9, [x22, #8]
  64:	sub	x9, x9, x8
  68:	cmp	x9, #0x3
  6c:	b.hi	88 <_ZN4llvm15BitstreamWriter4EmitEjj+0x88>  // b.pmore
  70:	add	x2, x8, #0x4
  74:	add	x1, x22, #0x10
  78:	mov	w3, #0x1                   	// #1
  7c:	mov	x0, x22
  80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  84:	ldr	w8, [x22, #8]
  88:	ldr	x9, [x22]
  8c:	str	w23, [x9, x8]
  90:	ldp	w8, w9, [x22, #8]
  94:	add	x8, x8, #0x4
  98:	cmp	x8, x9
  9c:	b.hi	11c <_ZN4llvm15BitstreamWriter4EmitEjj+0x11c>  // b.pmore
  a0:	str	w8, [x22, #8]
  a4:	ldr	w8, [x19, #8]
  a8:	neg	w9, w8
  ac:	cmp	w8, #0x0
  b0:	add	w8, w8, w20
  b4:	lsr	w9, w21, w9
  b8:	csel	w9, wzr, w9, eq  // eq = none
  bc:	and	w8, w8, #0x1f
  c0:	str	w9, [x19, #12]
  c4:	str	w8, [x19, #8]
  c8:	ldp	x20, x19, [sp, #48]
  cc:	ldp	x22, x21, [sp, #32]
  d0:	ldr	x23, [sp, #16]
  d4:	ldp	x29, x30, [sp], #64
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  e0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x78                  	// #120
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 100:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 104:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x79                  	// #121
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 120:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 124:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x43                  	// #67
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x25, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x25, x20
  24:	cmp	x8, x9
  28:	b.eq	150 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.none
  2c:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  30:	asr	x9, x8, #3
  34:	movk	x10, #0xcccd
  38:	cmp	x8, #0x0
  3c:	mul	x9, x9, x10
  40:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  44:	csinc	x10, x9, xzr, ne  // ne = any
  48:	movk	x8, #0x333, lsl #48
  4c:	adds	x9, x10, x9
  50:	cset	w10, cs  // cs = hs, nlast
  54:	cmp	x9, x8
  58:	cset	w11, hi  // hi = pmore
  5c:	orr	w10, w10, w11
  60:	cmp	w10, #0x0
  64:	csel	x26, x8, x9, ne  // ne = any
  68:	add	x8, x26, x26, lsl #2
  6c:	mov	x19, x0
  70:	lsl	x0, x8, #3
  74:	mov	x23, x3
  78:	mov	x24, x2
  7c:	mov	x21, x1
  80:	bl	0 <_Znwm>
  84:	ldr	w8, [x24]
  88:	ldr	x9, [x23]
  8c:	subs	x10, x21, x20
  90:	add	x10, x0, x10
  94:	mov	x22, x0
  98:	str	w8, [x10]
  9c:	mov	x8, x0
  a0:	stp	x9, xzr, [x10, #8]
  a4:	stp	xzr, xzr, [x10, #24]
  a8:	b.eq	e0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.none
  ac:	mov	x9, x20
  b0:	ldr	q0, [x9]
  b4:	str	q0, [x8]
  b8:	ldr	q0, [x9, #16]
  bc:	str	q0, [x8, #16]
  c0:	ldr	x10, [x9, #32]
  c4:	str	x10, [x8, #32]
  c8:	stp	xzr, xzr, [x9, #16]
  cc:	str	xzr, [x9, #32]
  d0:	add	x9, x9, #0x28
  d4:	cmp	x9, x21
  d8:	add	x8, x8, #0x28
  dc:	b.ne	b0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb0>  // b.any
  e0:	cmp	x25, x21
  e4:	add	x23, x8, #0x28
  e8:	b.eq	11c <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>  // b.none
  ec:	ldr	q0, [x21]
  f0:	str	q0, [x23]
  f4:	ldr	q0, [x21, #16]
  f8:	str	q0, [x23, #16]
  fc:	ldr	x8, [x21, #32]
 100:	str	x8, [x23, #32]
 104:	stp	xzr, xzr, [x21, #16]
 108:	str	xzr, [x21, #32]
 10c:	add	x21, x21, #0x28
 110:	cmp	x21, x25
 114:	add	x23, x23, #0x28
 118:	b.ne	ec <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>  // b.any
 11c:	cbz	x20, 128 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x128>
 120:	mov	x0, x20
 124:	bl	0 <_ZdlPv>
 128:	mov	w8, #0x28                  	// #40
 12c:	madd	x8, x26, x8, x22
 130:	stp	x22, x23, [x19]
 134:	str	x8, [x19, #16]
 138:	ldp	x20, x19, [sp, #64]
 13c:	ldp	x22, x21, [sp, #48]
 140:	ldp	x24, x23, [sp, #32]
 144:	ldp	x26, x25, [sp, #16]
 148:	ldp	x29, x30, [sp], #80
 14c:	ret
 150:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	cmp	x2, x3
  20:	b.eq	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x364>  // b.none
  24:	ldp	x22, x9, [x0, #8]
  28:	sub	x24, x3, x2
  2c:	asr	x8, x24, #4
  30:	mov	x23, x3
  34:	sub	x9, x9, x22
  38:	mov	x20, x2
  3c:	mov	x19, x1
  40:	mov	x21, x0
  44:	cmp	x8, x9, asr #4
  48:	b.ls	b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xb4>  // b.plast
  4c:	ldr	x9, [x21]
  50:	sub	x10, x22, x9
  54:	asr	x11, x10, #4
  58:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  5c:	sub	x12, x10, x11
  60:	cmp	x12, x8
  64:	b.cc	79c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x79c>  // b.lo, b.ul, b.last
  68:	cmp	x11, x8
  6c:	csel	x8, x8, x11, cc  // cc = lo, ul, last
  70:	adds	x8, x8, x11
  74:	lsr	x12, x8, #59
  78:	cset	w11, cs  // cs = hs, nlast
  7c:	cmp	x12, #0x0
  80:	cset	w12, ne  // ne = any
  84:	orr	w11, w11, w12
  88:	cmp	w11, #0x0
  8c:	csel	x24, x10, x8, ne  // ne = any
  90:	cbz	x24, 278 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x278>
  94:	lsl	x0, x24, #4
  98:	bl	0 <_Znwm>
  9c:	ldr	x9, [x21]
  a0:	mov	x22, x0
  a4:	cmp	x9, x19
  a8:	mov	x25, x22
  ac:	b.ne	288 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x288>  // b.any
  b0:	b	2a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2a8>
  b4:	sub	x9, x22, x19
  b8:	asr	x9, x9, #4
  bc:	subs	x10, x8, x9
  c0:	b.cs	20c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x20c>  // b.hs, b.nlast
  c4:	sub	x23, x22, x8, lsl #4
  c8:	cbz	x24, 5b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5b0>
  cc:	sub	x10, x24, #0x10
  d0:	lsr	x9, x10, #4
  d4:	cbz	x9, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x584>
  d8:	add	x11, x22, #0x8
  dc:	and	x10, x10, #0xfffffffffffffff0
  e0:	mvn	x11, x11
  e4:	cmp	x10, x11
  e8:	b.hi	584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x584>  // b.pmore
  ec:	neg	x12, x8
  f0:	add	x11, x22, x12, lsl #4
  f4:	add	x11, x11, #0x8
  f8:	mvn	x11, x11
  fc:	cmp	x10, x11
 100:	mov	x11, x22
 104:	mov	x10, x23
 108:	b.hi	58c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x58c>  // b.pmore
 10c:	add	x10, x22, x9, lsl #4
 110:	sub	x11, x9, x8
 114:	add	x18, x10, #0x8
 118:	add	x10, x22, x11, lsl #4
 11c:	add	x12, x22, x12, lsl #4
 120:	add	x13, x9, #0x1
 124:	cmp	x22, x10
 128:	add	x0, x12, #0x8
 12c:	sub	x11, x13, x8
 130:	add	x1, x22, x13, lsl #4
 134:	add	x12, x10, #0x8
 138:	cset	w13, cc  // cc = lo, ul, last
 13c:	cmp	x23, x18
 140:	add	x15, x22, x11, lsl #4
 144:	cset	w11, cc  // cc = lo, ul, last
 148:	cmp	x22, x12
 14c:	and	w2, w13, w11
 150:	cset	w13, cc  // cc = lo, ul, last
 154:	cmp	x23, x12
 158:	add	x17, x22, #0x8
 15c:	cset	w12, cc  // cc = lo, ul, last
 160:	cmp	x23, x10
 164:	cset	w14, cc  // cc = lo, ul, last
 168:	cmp	x17, x15
 16c:	cset	w10, cc  // cc = lo, ul, last
 170:	cmp	x0, x18
 174:	cset	w16, cc  // cc = lo, ul, last
 178:	cmp	x17, x1
 17c:	cset	w15, cc  // cc = lo, ul, last
 180:	cmp	x17, x18
 184:	cset	w18, cc  // cc = lo, ul, last
 188:	cmp	x0, x1
 18c:	cset	w17, cc  // cc = lo, ul, last
 190:	tbnz	w2, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x584>
 194:	and	w11, w13, w11
 198:	tbnz	w11, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x584>
 19c:	and	w11, w12, w14
 1a0:	tbnz	w11, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x584>
 1a4:	and	w11, w10, w16
 1a8:	tbnz	w11, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x584>
 1ac:	and	w11, w15, w18
 1b0:	tbnz	w11, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x584>
 1b4:	and	w12, w17, w10
 1b8:	mov	x11, x22
 1bc:	mov	x10, x23
 1c0:	tbnz	w12, #0, 58c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x58c>
 1c4:	add	x9, x9, #0x1
 1c8:	and	x12, x9, #0x1ffffffffffffffe
 1cc:	lsl	x10, x12, #4
 1d0:	neg	x13, x8, lsl #4
 1d4:	add	x11, x22, x10
 1d8:	add	x10, x23, x10
 1dc:	movi	v0.2d, #0x0
 1e0:	mov	x14, x12
 1e4:	mov	x15, x22
 1e8:	add	x16, x15, x13
 1ec:	ldp	q2, q1, [x16]
 1f0:	subs	x14, x14, #0x2
 1f4:	stp	q2, q1, [x15], #32
 1f8:	stp	q0, q0, [x16]
 1fc:	b.ne	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1e8>  // b.any
 200:	cmp	x9, x12
 204:	b.ne	58c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x58c>  // b.any
 208:	b	5b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5b0>
 20c:	adrp	x24, 0 <__pthread_key_create>
 210:	ldr	x24, [x24]
 214:	add	x9, x20, x9, lsl #4
 218:	cmp	x9, x23
 21c:	mov	x11, x22
 220:	b.eq	438 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x438>  // b.none
 224:	mov	x12, x9
 228:	b	248 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x248>
 22c:	ldr	w14, [x13]
 230:	add	w14, w14, #0x1
 234:	str	w14, [x13]
 238:	add	x12, x12, #0x10
 23c:	cmp	x12, x23
 240:	add	x11, x11, #0x10
 244:	b.eq	434 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x434>  // b.none
 248:	ldr	x13, [x12]
 24c:	str	x13, [x11]
 250:	ldr	x13, [x12, #8]
 254:	str	x13, [x11, #8]
 258:	cbz	x13, 238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x238>
 25c:	add	x13, x13, #0x8
 260:	cbz	x24, 22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x22c>
 264:	ldaxr	w14, [x13]
 268:	add	w14, w14, #0x1
 26c:	stlxr	w15, w14, [x13]
 270:	cbnz	w15, 264 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x264>
 274:	b	238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x238>
 278:	mov	x22, xzr
 27c:	cmp	x9, x19
 280:	mov	x25, x22
 284:	b.eq	2a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2a8>  // b.none
 288:	mov	x25, x22
 28c:	str	xzr, [x25, #8]
 290:	ldr	q0, [x9]
 294:	str	xzr, [x9, #8]
 298:	str	q0, [x25], #16
 29c:	str	xzr, [x9], #16
 2a0:	cmp	x9, x19
 2a4:	b.ne	28c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x28c>  // b.any
 2a8:	adrp	x26, 0 <__pthread_key_create>
 2ac:	ldr	x26, [x26]
 2b0:	b	2d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2d0>
 2b4:	ldr	w9, [x8]
 2b8:	add	w9, w9, #0x1
 2bc:	str	w9, [x8]
 2c0:	add	x20, x20, #0x10
 2c4:	cmp	x20, x23
 2c8:	add	x25, x25, #0x10
 2cc:	b.eq	300 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x300>  // b.none
 2d0:	ldr	x8, [x20]
 2d4:	str	x8, [x25]
 2d8:	ldr	x8, [x20, #8]
 2dc:	str	x8, [x25, #8]
 2e0:	cbz	x8, 2c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2c0>
 2e4:	add	x8, x8, #0x8
 2e8:	cbz	x26, 2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2b4>
 2ec:	ldaxr	w9, [x8]
 2f0:	add	w9, w9, #0x1
 2f4:	stlxr	w10, w9, [x8]
 2f8:	cbnz	w10, 2ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2ec>
 2fc:	b	2c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2c0>
 300:	ldr	x20, [x21, #8]
 304:	cmp	x20, x19
 308:	b.eq	340 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x340>  // b.none
 30c:	mov	x8, xzr
 310:	add	x9, x25, x8
 314:	add	x10, x19, x8
 318:	str	xzr, [x9, #8]
 31c:	ldr	q0, [x10]
 320:	add	x11, x10, #0x10
 324:	cmp	x11, x20
 328:	add	x8, x8, #0x10
 32c:	str	xzr, [x10, #8]
 330:	str	q0, [x9]
 334:	str	xzr, [x10]
 338:	b.ne	310 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x310>  // b.any
 33c:	add	x25, x25, x8
 340:	ldr	x23, [x21]
 344:	cmp	x23, x20
 348:	b.ne	38c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x38c>  // b.any
 34c:	cbz	x20, 358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x358>
 350:	mov	x0, x20
 354:	bl	0 <_ZdlPv>
 358:	add	x8, x22, x24, lsl #4
 35c:	stp	x22, x25, [x21]
 360:	str	x8, [x21, #16]
 364:	ldp	x20, x19, [sp, #80]
 368:	ldp	x22, x21, [sp, #64]
 36c:	ldp	x24, x23, [sp, #48]
 370:	ldp	x26, x25, [sp, #32]
 374:	ldr	x27, [sp, #16]
 378:	ldp	x29, x30, [sp], #96
 37c:	ret
 380:	add	x23, x23, #0x10
 384:	cmp	x23, x20
 388:	b.eq	428 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x428>  // b.none
 38c:	ldr	x19, [x23, #8]
 390:	cbz	x19, 380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x380>
 394:	add	x8, x19, #0x8
 398:	cbz	x26, 3b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3b8>
 39c:	ldaxr	w9, [x8]
 3a0:	sub	w10, w9, #0x1
 3a4:	stlxr	w11, w10, [x8]
 3a8:	cbnz	w11, 39c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x39c>
 3ac:	cmp	w9, #0x1
 3b0:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x380>  // b.any
 3b4:	b	3cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3cc>
 3b8:	ldr	w9, [x8]
 3bc:	sub	w10, w9, #0x1
 3c0:	str	w10, [x8]
 3c4:	cmp	w9, #0x1
 3c8:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x380>  // b.any
 3cc:	mov	x27, x19
 3d0:	ldr	x8, [x27], #12
 3d4:	mov	x0, x19
 3d8:	ldr	x8, [x8, #16]
 3dc:	blr	x8
 3e0:	cbz	x26, 400 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x400>
 3e4:	ldaxr	w8, [x27]
 3e8:	sub	w9, w8, #0x1
 3ec:	stlxr	w10, w9, [x27]
 3f0:	cbnz	w10, 3e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3e4>
 3f4:	cmp	w8, #0x1
 3f8:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x380>  // b.any
 3fc:	b	414 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x414>
 400:	ldr	w8, [x27]
 404:	sub	w9, w8, #0x1
 408:	str	w9, [x27]
 40c:	cmp	w8, #0x1
 410:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x380>  // b.any
 414:	ldr	x8, [x19]
 418:	mov	x0, x19
 41c:	ldr	x8, [x8, #24]
 420:	blr	x8
 424:	b	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x380>
 428:	ldr	x20, [x21]
 42c:	cbnz	x20, 350 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x350>
 430:	b	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x358>
 434:	ldr	x11, [x21, #8]
 438:	add	x10, x11, x10, lsl #4
 43c:	cmp	x22, x19
 440:	str	x10, [x21, #8]
 444:	b.eq	470 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x470>  // b.none
 448:	add	x10, x10, #0x8
 44c:	mov	x12, x19
 450:	str	xzr, [x10]
 454:	ldr	q0, [x12]
 458:	str	xzr, [x12, #8]
 45c:	stur	q0, [x10, #-8]
 460:	str	xzr, [x12], #16
 464:	cmp	x12, x22
 468:	add	x10, x10, #0x10
 46c:	b.ne	450 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x450>  // b.any
 470:	add	x10, x11, x8, lsl #4
 474:	sub	x8, x9, x20
 478:	cmp	x8, #0x1
 47c:	str	x10, [x21, #8]
 480:	b.lt	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x364>  // b.tstop
 484:	lsr	x22, x8, #4
 488:	b	4a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4a0>
 48c:	str	x23, [x19, #8]
 490:	add	x20, x20, #0x10
 494:	subs	x22, x22, #0x1
 498:	add	x19, x19, #0x10
 49c:	b.le	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x364>
 4a0:	ldr	x8, [x20]
 4a4:	ldr	x21, [x19, #8]
 4a8:	str	x8, [x19]
 4ac:	ldr	x23, [x20, #8]
 4b0:	cmp	x23, x21
 4b4:	b.eq	490 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x490>  // b.none
 4b8:	cbz	x23, 4d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4d8>
 4bc:	add	x8, x23, #0x8
 4c0:	cbz	x24, 4e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4e0>
 4c4:	ldaxr	w9, [x8]
 4c8:	add	w9, w9, #0x1
 4cc:	stlxr	w10, w9, [x8]
 4d0:	cbnz	w10, 4c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4c4>
 4d4:	ldr	x21, [x19, #8]
 4d8:	cbnz	x21, 4f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4f0>
 4dc:	b	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x48c>
 4e0:	ldr	w9, [x8]
 4e4:	add	w9, w9, #0x1
 4e8:	str	w9, [x8]
 4ec:	cbz	x21, 48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x48c>
 4f0:	add	x8, x21, #0x8
 4f4:	cbz	x24, 514 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x514>
 4f8:	ldaxr	w9, [x8]
 4fc:	sub	w10, w9, #0x1
 500:	stlxr	w11, w10, [x8]
 504:	cbnz	w11, 4f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4f8>
 508:	cmp	w9, #0x1
 50c:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x48c>  // b.any
 510:	b	528 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x528>
 514:	ldr	w9, [x8]
 518:	sub	w10, w9, #0x1
 51c:	str	w10, [x8]
 520:	cmp	w9, #0x1
 524:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x48c>  // b.any
 528:	mov	x25, x21
 52c:	ldr	x8, [x25], #12
 530:	mov	x0, x21
 534:	ldr	x8, [x8, #16]
 538:	blr	x8
 53c:	cbz	x24, 55c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x55c>
 540:	ldaxr	w8, [x25]
 544:	sub	w9, w8, #0x1
 548:	stlxr	w10, w9, [x25]
 54c:	cbnz	w10, 540 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x540>
 550:	cmp	w8, #0x1
 554:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x48c>  // b.any
 558:	b	570 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x570>
 55c:	ldr	w8, [x25]
 560:	sub	w9, w8, #0x1
 564:	str	w9, [x25]
 568:	cmp	w8, #0x1
 56c:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x48c>  // b.any
 570:	ldr	x8, [x21]
 574:	mov	x0, x21
 578:	ldr	x8, [x8, #24]
 57c:	blr	x8
 580:	b	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x48c>
 584:	mov	x11, x22
 588:	mov	x10, x23
 58c:	add	x9, x11, #0x8
 590:	str	xzr, [x9]
 594:	ldr	q0, [x10]
 598:	str	xzr, [x10, #8]
 59c:	stur	q0, [x9, #-8]
 5a0:	str	xzr, [x10], #16
 5a4:	cmp	x10, x22
 5a8:	add	x9, x9, #0x10
 5ac:	b.ne	590 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x590>  // b.any
 5b0:	add	x9, x22, x8, lsl #4
 5b4:	sub	x8, x23, x19
 5b8:	cmp	x8, #0x1
 5bc:	str	x9, [x21, #8]
 5c0:	b.lt	68c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x68c>  // b.tstop
 5c4:	adrp	x26, 0 <__pthread_key_create>
 5c8:	ldr	x26, [x26]
 5cc:	lsr	x25, x8, #4
 5d0:	b	5dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5dc>
 5d4:	subs	x25, x25, #0x1
 5d8:	b.le	68c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x68c>
 5dc:	ldr	x8, [x23, #-16]!
 5e0:	ldr	x9, [x23, #8]
 5e4:	stp	xzr, xzr, [x23]
 5e8:	str	x8, [x22, #-16]!
 5ec:	ldr	x21, [x22, #8]
 5f0:	str	x9, [x22, #8]
 5f4:	cbz	x21, 5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5d4>
 5f8:	add	x8, x21, #0x8
 5fc:	cbz	x26, 61c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x61c>
 600:	ldaxr	w9, [x8]
 604:	sub	w10, w9, #0x1
 608:	stlxr	w11, w10, [x8]
 60c:	cbnz	w11, 600 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x600>
 610:	cmp	w9, #0x1
 614:	b.ne	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5d4>  // b.any
 618:	b	630 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x630>
 61c:	ldr	w9, [x8]
 620:	sub	w10, w9, #0x1
 624:	str	w10, [x8]
 628:	cmp	w9, #0x1
 62c:	b.ne	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5d4>  // b.any
 630:	mov	x27, x21
 634:	ldr	x8, [x27], #12
 638:	mov	x0, x21
 63c:	ldr	x8, [x8, #16]
 640:	blr	x8
 644:	cbz	x26, 664 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x664>
 648:	ldaxr	w8, [x27]
 64c:	sub	w9, w8, #0x1
 650:	stlxr	w10, w9, [x27]
 654:	cbnz	w10, 648 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x648>
 658:	cmp	w8, #0x1
 65c:	b.ne	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5d4>  // b.any
 660:	b	678 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x678>
 664:	ldr	w8, [x27]
 668:	sub	w9, w8, #0x1
 66c:	str	w9, [x27]
 670:	cmp	w8, #0x1
 674:	b.ne	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5d4>  // b.any
 678:	ldr	x8, [x21]
 67c:	mov	x0, x21
 680:	ldr	x8, [x8, #24]
 684:	blr	x8
 688:	b	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5d4>
 68c:	cmp	x24, #0x1
 690:	b.lt	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x364>  // b.tstop
 694:	adrp	x23, 0 <__pthread_key_create>
 698:	ldr	x23, [x23]
 69c:	lsr	x22, x24, #4
 6a0:	b	6b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6b8>
 6a4:	str	x24, [x19, #8]
 6a8:	add	x20, x20, #0x10
 6ac:	subs	x22, x22, #0x1
 6b0:	add	x19, x19, #0x10
 6b4:	b.le	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x364>
 6b8:	ldr	x8, [x20]
 6bc:	ldr	x21, [x19, #8]
 6c0:	str	x8, [x19]
 6c4:	ldr	x24, [x20, #8]
 6c8:	cmp	x24, x21
 6cc:	b.eq	6a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6a8>  // b.none
 6d0:	cbz	x24, 6f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6f0>
 6d4:	add	x8, x24, #0x8
 6d8:	cbz	x23, 6f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6f8>
 6dc:	ldaxr	w9, [x8]
 6e0:	add	w9, w9, #0x1
 6e4:	stlxr	w10, w9, [x8]
 6e8:	cbnz	w10, 6dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6dc>
 6ec:	ldr	x21, [x19, #8]
 6f0:	cbnz	x21, 708 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x708>
 6f4:	b	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6a4>
 6f8:	ldr	w9, [x8]
 6fc:	add	w9, w9, #0x1
 700:	str	w9, [x8]
 704:	cbz	x21, 6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6a4>
 708:	add	x8, x21, #0x8
 70c:	cbz	x23, 72c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x72c>
 710:	ldaxr	w9, [x8]
 714:	sub	w10, w9, #0x1
 718:	stlxr	w11, w10, [x8]
 71c:	cbnz	w11, 710 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x710>
 720:	cmp	w9, #0x1
 724:	b.ne	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6a4>  // b.any
 728:	b	740 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x740>
 72c:	ldr	w9, [x8]
 730:	sub	w10, w9, #0x1
 734:	str	w10, [x8]
 738:	cmp	w9, #0x1
 73c:	b.ne	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6a4>  // b.any
 740:	mov	x25, x21
 744:	ldr	x8, [x25], #12
 748:	mov	x0, x21
 74c:	ldr	x8, [x8, #16]
 750:	blr	x8
 754:	cbz	x23, 774 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x774>
 758:	ldaxr	w8, [x25]
 75c:	sub	w9, w8, #0x1
 760:	stlxr	w10, w9, [x25]
 764:	cbnz	w10, 758 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x758>
 768:	cmp	w8, #0x1
 76c:	b.ne	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6a4>  // b.any
 770:	b	788 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x788>
 774:	ldr	w8, [x25]
 778:	sub	w9, w8, #0x1
 77c:	str	w9, [x25]
 780:	cmp	w8, #0x1
 784:	b.ne	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6a4>  // b.any
 788:	ldr	x8, [x21]
 78c:	mov	x0, x21
 790:	ldr	x8, [x8, #24]
 794:	blr	x8
 798:	b	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6a4>
 79c:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
 7a0:	add	x0, x0, #0x0
 7a4:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE:

0000000000000000 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w2, [x0, #16]
  18:	mov	x20, x1
  1c:	mov	w1, #0x2                   	// #2
  20:	mov	x19, x0
  24:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  28:	ldr	w21, [x20, #8]
  2c:	cmp	w21, #0x10
  30:	b.cs	3c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x3c>  // b.hs, b.nlast
  34:	mov	w1, w21
  38:	b	60 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x60>
  3c:	mov	w1, #0x10                  	// #16
  40:	bfxil	w1, w21, #0, #4
  44:	mov	w2, #0x5                   	// #5
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  50:	lsr	w1, w21, #4
  54:	cmp	w21, #0xff
  58:	mov	w21, w1
  5c:	b.hi	3c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x3c>  // b.pmore
  60:	mov	w2, #0x5                   	// #5
  64:	mov	x0, x19
  68:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  6c:	ldr	w22, [x20, #8]
  70:	cbz	w22, 208 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x208>
  74:	mov	x23, xzr
  78:	ldr	x8, [x20]
  7c:	mov	w2, #0x1                   	// #1
  80:	mov	x0, x19
  84:	add	x21, x8, x23, lsl #4
  88:	mov	x24, x21
  8c:	ldrb	w8, [x24, #8]!
  90:	and	w1, w8, #0x1
  94:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  98:	ldrb	w8, [x24]
  9c:	tbnz	w8, #0, 14c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x14c>
  a0:	ubfx	w1, w8, #1, #3
  a4:	mov	w2, #0x3                   	// #3
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  b0:	ldrb	w8, [x24]
  b4:	tbnz	w8, #0, 22c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x22c>
  b8:	ubfx	w8, w8, #1, #3
  bc:	sub	w9, w8, #0x3
  c0:	cmp	w9, #0x3
  c4:	b.cc	1d0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1d0>  // b.lo, b.ul, b.last
  c8:	sub	w8, w8, #0x1
  cc:	cmp	w8, #0x2
  d0:	b.cs	21c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x21c>  // b.hs, b.nlast
  d4:	ldr	x24, [x21]
  d8:	lsr	x8, x24, #32
  dc:	mov	w21, w24
  e0:	cbnz	x8, f4 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0xf4>
  e4:	cmp	w21, #0x10
  e8:	b.cs	120 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x120>  // b.hs, b.nlast
  ec:	mov	w1, w21
  f0:	b	144 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x144>
  f4:	mov	w1, #0x10                  	// #16
  f8:	bfxil	w1, w21, #0, #4
  fc:	mov	w2, #0x5                   	// #5
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 108:	lsr	x21, x24, #4
 10c:	cmp	x24, #0xff
 110:	mov	x24, x21
 114:	b.hi	f4 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0xf4>  // b.pmore
 118:	mov	w2, #0x5                   	// #5
 11c:	b	194 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x194>
 120:	mov	w1, #0x10                  	// #16
 124:	bfxil	w1, w21, #0, #4
 128:	mov	w2, #0x5                   	// #5
 12c:	mov	x0, x19
 130:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 134:	lsr	w1, w21, #4
 138:	cmp	w21, #0xff
 13c:	mov	w21, w1
 140:	b.hi	120 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x120>  // b.pmore
 144:	mov	w2, #0x5                   	// #5
 148:	b	1c8 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1c8>
 14c:	ldr	x24, [x21]
 150:	lsr	x8, x24, #32
 154:	mov	w21, w24
 158:	cbnz	x8, 16c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x16c>
 15c:	cmp	w21, #0x80
 160:	b.cs	1a0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1a0>  // b.hs, b.nlast
 164:	mov	w1, w21
 168:	b	1c4 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1c4>
 16c:	mov	w1, #0x80                  	// #128
 170:	bfxil	w1, w21, #0, #7
 174:	mov	w2, #0x8                   	// #8
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 180:	lsr	x21, x24, #7
 184:	lsr	x8, x24, #14
 188:	mov	x24, x21
 18c:	cbnz	x8, 16c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x16c>
 190:	mov	w2, #0x8                   	// #8
 194:	mov	x0, x19
 198:	mov	w1, w21
 19c:	b	1cc <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1cc>
 1a0:	mov	w1, #0x80                  	// #128
 1a4:	bfxil	w1, w21, #0, #7
 1a8:	mov	w2, #0x8                   	// #8
 1ac:	mov	x0, x19
 1b0:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1b4:	lsr	w1, w21, #7
 1b8:	lsr	w8, w21, #14
 1bc:	mov	w21, w1
 1c0:	cbnz	w8, 1a0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1a0>
 1c4:	mov	w2, #0x8                   	// #8
 1c8:	mov	x0, x19
 1cc:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1d0:	add	x23, x23, #0x1
 1d4:	cmp	x23, x22
 1d8:	b.eq	208 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x208>  // b.none
 1dc:	ldr	w8, [x20, #8]
 1e0:	cmp	x23, x8
 1e4:	b.cc	78 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x78>  // b.lo, b.ul, b.last
 1e8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1ec:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1f0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x99                  	// #153
 204:	bl	0 <__assert_fail>
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldp	x24, x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret
 21c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 220:	add	x0, x0, #0x0
 224:	mov	w1, #0x1                   	// #1
 228:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
 22c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 230:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 234:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 238:	add	x0, x0, #0x0
 23c:	add	x1, x1, #0x0
 240:	add	x3, x3, #0x0
 244:	mov	w2, #0x77                  	// #119
 248:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter9EmitVBR64Emj:

0000000000000000 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cmp	w2, #0x21
  18:	b.cs	c8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xc8>  // b.hs, b.nlast
  1c:	mov	w19, w2
  20:	mov	x20, x1
  24:	mov	x21, x0
  28:	lsr	x8, x1, #32
  2c:	cbnz	x8, 6c <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x6c>
  30:	sub	w22, w19, #0x1
  34:	mov	w8, #0x1                   	// #1
  38:	lsl	w23, w8, w22
  3c:	cmp	w23, w20
  40:	b.hi	a8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xa8>  // b.pmore
  44:	sub	w24, w23, #0x1
  48:	and	w8, w20, w24
  4c:	orr	w1, w8, w23
  50:	mov	x0, x21
  54:	mov	w2, w19
  58:	bl	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  5c:	lsr	w20, w20, w22
  60:	cmp	w20, w23
  64:	b.cs	48 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x48>  // b.hs, b.nlast
  68:	b	a8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xa8>
  6c:	sub	w8, w19, #0x1
  70:	mov	w9, #0x1                   	// #1
  74:	lsl	w22, w9, w8
  78:	cmp	x22, x20
  7c:	b.hi	a8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xa8>  // b.pmore
  80:	sub	w23, w22, #0x1
  84:	mov	w24, w8
  88:	and	w8, w20, w23
  8c:	orr	w1, w8, w22
  90:	mov	x0, x21
  94:	mov	w2, w19
  98:	bl	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  9c:	lsr	x20, x20, x24
  a0:	cmp	x20, x22
  a4:	b.cs	88 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x88>  // b.hs, b.nlast
  a8:	mov	x0, x21
  ac:	mov	w1, w20
  b0:	mov	w2, w19
  b4:	ldp	x20, x19, [sp, #48]
  b8:	ldp	x22, x21, [sp, #32]
  bc:	ldp	x24, x23, [sp, #16]
  c0:	ldp	x29, x30, [sp], #64
  c4:	b	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0xa0                  	// #160
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x20, x24, [x0]
  24:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  28:	sub	x8, x24, x20
  2c:	cmp	x8, x9
  30:	b.eq	290 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x290>  // b.none
  34:	asr	x9, x8, #4
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #59
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  5c:	cmp	w10, #0x0
  60:	csel	x9, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x20
  68:	mov	x23, x2
  6c:	mov	x19, x0
  70:	mov	x21, x1
  74:	asr	x25, x8, #4
  78:	str	x9, [sp, #8]
  7c:	cbz	x9, 90 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x90>
  80:	lsl	x0, x9, #4
  84:	bl	0 <_Znwm>
  88:	mov	x22, x0
  8c:	b	94 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x94>
  90:	mov	x22, xzr
  94:	ldr	q0, [x23]
  98:	stp	xzr, xzr, [x23]
  9c:	adrp	x26, 0 <__pthread_key_create>
  a0:	cmp	x20, x21
  a4:	str	q0, [x22, x25, lsl #4]
  a8:	ldr	x26, [x26]
  ac:	mov	x27, x22
  b0:	b.eq	180 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.none
  b4:	mov	x27, x22
  b8:	mov	x28, x20
  bc:	b	d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd0>
  c0:	add	x28, x28, #0x10
  c4:	cmp	x28, x21
  c8:	add	x27, x27, #0x10
  cc:	b.eq	180 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.none
  d0:	str	xzr, [x27, #8]
  d4:	ldr	q0, [x28]
  d8:	str	xzr, [x28, #8]
  dc:	str	q0, [x27]
  e0:	ldr	x25, [x28, #8]
  e4:	str	xzr, [x28]
  e8:	cbz	x25, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
  ec:	add	x8, x25, #0x8
  f0:	cbz	x26, 110 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x110>
  f4:	ldaxr	w9, [x8]
  f8:	sub	w10, w9, #0x1
  fc:	stlxr	w11, w10, [x8]
 100:	cbnz	w11, f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xf4>
 104:	cmp	w9, #0x1
 108:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 10c:	b	124 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x124>
 110:	ldr	w9, [x8]
 114:	sub	w10, w9, #0x1
 118:	str	w10, [x8]
 11c:	cmp	w9, #0x1
 120:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 124:	mov	x23, x25
 128:	ldr	x8, [x23], #12
 12c:	mov	x0, x25
 130:	ldr	x8, [x8, #16]
 134:	blr	x8
 138:	cbz	x26, 158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x158>
 13c:	ldaxr	w8, [x23]
 140:	sub	w9, w8, #0x1
 144:	stlxr	w10, w9, [x23]
 148:	cbnz	w10, 13c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x13c>
 14c:	cmp	w8, #0x1
 150:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 154:	b	16c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x16c>
 158:	ldr	w8, [x23]
 15c:	sub	w9, w8, #0x1
 160:	str	w9, [x23]
 164:	cmp	w8, #0x1
 168:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 16c:	ldr	x8, [x25]
 170:	mov	x0, x25
 174:	ldr	x8, [x8, #24]
 178:	blr	x8
 17c:	b	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
 180:	cmp	x24, x21
 184:	add	x27, x27, #0x10
 188:	b.eq	254 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x254>  // b.none
 18c:	ldr	x28, [sp, #8]
 190:	b	1a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a4>
 194:	add	x21, x21, #0x10
 198:	cmp	x21, x24
 19c:	add	x27, x27, #0x10
 1a0:	b.eq	258 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x258>  // b.none
 1a4:	str	xzr, [x27, #8]
 1a8:	ldr	q0, [x21]
 1ac:	str	xzr, [x21, #8]
 1b0:	str	q0, [x27]
 1b4:	ldr	x23, [x21, #8]
 1b8:	str	xzr, [x21]
 1bc:	cbz	x23, 194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>
 1c0:	add	x8, x23, #0x8
 1c4:	cbz	x26, 1e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1e4>
 1c8:	ldaxr	w9, [x8]
 1cc:	sub	w10, w9, #0x1
 1d0:	stlxr	w11, w10, [x8]
 1d4:	cbnz	w11, 1c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c8>
 1d8:	cmp	w9, #0x1
 1dc:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 1e0:	b	1f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f8>
 1e4:	ldr	w9, [x8]
 1e8:	sub	w10, w9, #0x1
 1ec:	str	w10, [x8]
 1f0:	cmp	w9, #0x1
 1f4:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 1f8:	mov	x25, x23
 1fc:	ldr	x8, [x25], #12
 200:	mov	x0, x23
 204:	ldr	x8, [x8, #16]
 208:	blr	x8
 20c:	cbz	x26, 22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x22c>
 210:	ldaxr	w8, [x25]
 214:	sub	w9, w8, #0x1
 218:	stlxr	w10, w9, [x25]
 21c:	cbnz	w10, 210 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x210>
 220:	cmp	w8, #0x1
 224:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 228:	b	240 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x240>
 22c:	ldr	w8, [x25]
 230:	sub	w9, w8, #0x1
 234:	str	w9, [x25]
 238:	cmp	w8, #0x1
 23c:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 240:	ldr	x8, [x23]
 244:	mov	x0, x23
 248:	ldr	x8, [x8, #24]
 24c:	blr	x8
 250:	b	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>
 254:	ldr	x28, [sp, #8]
 258:	cbz	x20, 264 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x264>
 25c:	mov	x0, x20
 260:	bl	0 <_ZdlPv>
 264:	add	x8, x22, x28, lsl #4
 268:	stp	x22, x27, [x19]
 26c:	str	x8, [x19, #16]
 270:	ldp	x20, x19, [sp, #96]
 274:	ldp	x22, x21, [sp, #80]
 278:	ldp	x24, x23, [sp, #64]
 27c:	ldp	x26, x25, [sp, #48]
 280:	ldp	x28, x27, [sp, #32]
 284:	ldp	x29, x30, [sp, #16]
 288:	add	sp, sp, #0x70
 28c:	ret
 290:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 294:	add	x0, x0, #0x0
 298:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x19, x0
  20:	cmp	x1, x0
  24:	b.eq	3f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3f0>  // b.none
  28:	ldp	x22, x21, [x1]
  2c:	ldr	x8, [x19, #16]
  30:	ldr	x24, [x19]
  34:	mov	x20, x1
  38:	sub	x0, x21, x22
  3c:	asr	x23, x0, #4
  40:	sub	x8, x8, x24
  44:	cmp	x23, x8, asr #4
  48:	b.ls	6c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x6c>  // b.plast
  4c:	cbz	x0, 2a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2a0>
  50:	lsr	x8, x23, #59
  54:	cbnz	x8, 534 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x534>
  58:	bl	0 <_Znwm>
  5c:	mov	x20, x0
  60:	cmp	x22, x21
  64:	b.ne	2ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2ac>  // b.any
  68:	b	308 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x308>
  6c:	ldr	x25, [x19, #8]
  70:	sub	x9, x25, x24
  74:	asr	x8, x9, #4
  78:	cmp	x8, x23
  7c:	b.cs	190 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x190>  // b.hs, b.nlast
  80:	cmp	x9, #0x1
  84:	b.lt	420 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x420>  // b.tstop
  88:	adrp	x26, 0 <__pthread_key_create>
  8c:	ldr	x26, [x26]
  90:	lsr	x25, x9, #4
  94:	b	ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xac>
  98:	str	x27, [x24, #8]
  9c:	add	x22, x22, #0x10
  a0:	subs	x25, x25, #0x1
  a4:	add	x24, x24, #0x10
  a8:	b.le	410 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x410>
  ac:	ldr	x8, [x22]
  b0:	ldr	x21, [x24, #8]
  b4:	str	x8, [x24]
  b8:	ldr	x27, [x22, #8]
  bc:	cmp	x27, x21
  c0:	b.eq	9c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x9c>  // b.none
  c4:	cbz	x27, e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xe4>
  c8:	add	x8, x27, #0x8
  cc:	cbz	x26, ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xec>
  d0:	ldaxr	w9, [x8]
  d4:	add	w9, w9, #0x1
  d8:	stlxr	w10, w9, [x8]
  dc:	cbnz	w10, d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xd0>
  e0:	ldr	x21, [x24, #8]
  e4:	cbnz	x21, fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xfc>
  e8:	b	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>
  ec:	ldr	w9, [x8]
  f0:	add	w9, w9, #0x1
  f4:	str	w9, [x8]
  f8:	cbz	x21, 98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>
  fc:	add	x8, x21, #0x8
 100:	cbz	x26, 120 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x120>
 104:	ldaxr	w9, [x8]
 108:	sub	w10, w9, #0x1
 10c:	stlxr	w11, w10, [x8]
 110:	cbnz	w11, 104 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x104>
 114:	cmp	w9, #0x1
 118:	b.ne	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>  // b.any
 11c:	b	134 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x134>
 120:	ldr	w9, [x8]
 124:	sub	w10, w9, #0x1
 128:	str	w10, [x8]
 12c:	cmp	w9, #0x1
 130:	b.ne	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>  // b.any
 134:	mov	x28, x21
 138:	ldr	x8, [x28], #12
 13c:	mov	x0, x21
 140:	ldr	x8, [x8, #16]
 144:	blr	x8
 148:	cbz	x26, 168 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x168>
 14c:	ldaxr	w8, [x28]
 150:	sub	w9, w8, #0x1
 154:	stlxr	w10, w9, [x28]
 158:	cbnz	w10, 14c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x14c>
 15c:	cmp	w8, #0x1
 160:	b.ne	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>  // b.any
 164:	b	17c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x17c>
 168:	ldr	w8, [x28]
 16c:	sub	w9, w8, #0x1
 170:	str	w9, [x28]
 174:	cmp	w8, #0x1
 178:	b.ne	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>  // b.any
 17c:	ldr	x8, [x21]
 180:	mov	x0, x21
 184:	ldr	x8, [x8, #24]
 188:	blr	x8
 18c:	b	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>
 190:	adrp	x21, 0 <__pthread_key_create>
 194:	ldr	x21, [x21]
 198:	cmp	x0, #0x1
 19c:	b.lt	490 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x490>  // b.tstop
 1a0:	lsr	x25, x0, #4
 1a4:	b	1bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1bc>
 1a8:	str	x26, [x24, #8]
 1ac:	add	x22, x22, #0x10
 1b0:	subs	x25, x25, #0x1
 1b4:	add	x24, x24, #0x10
 1b8:	b.le	484 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x484>
 1bc:	ldr	x8, [x22]
 1c0:	ldr	x20, [x24, #8]
 1c4:	str	x8, [x24]
 1c8:	ldr	x26, [x22, #8]
 1cc:	cmp	x26, x20
 1d0:	b.eq	1ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1ac>  // b.none
 1d4:	cbz	x26, 1f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1f4>
 1d8:	add	x8, x26, #0x8
 1dc:	cbz	x21, 1fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1fc>
 1e0:	ldaxr	w9, [x8]
 1e4:	add	w9, w9, #0x1
 1e8:	stlxr	w10, w9, [x8]
 1ec:	cbnz	w10, 1e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e0>
 1f0:	ldr	x20, [x24, #8]
 1f4:	cbnz	x20, 20c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x20c>
 1f8:	b	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>
 1fc:	ldr	w9, [x8]
 200:	add	w9, w9, #0x1
 204:	str	w9, [x8]
 208:	cbz	x20, 1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>
 20c:	add	x8, x20, #0x8
 210:	cbz	x21, 230 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x230>
 214:	ldaxr	w9, [x8]
 218:	sub	w10, w9, #0x1
 21c:	stlxr	w11, w10, [x8]
 220:	cbnz	w11, 214 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x214>
 224:	cmp	w9, #0x1
 228:	b.ne	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.any
 22c:	b	244 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x244>
 230:	ldr	w9, [x8]
 234:	sub	w10, w9, #0x1
 238:	str	w10, [x8]
 23c:	cmp	w9, #0x1
 240:	b.ne	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.any
 244:	mov	x27, x20
 248:	ldr	x8, [x27], #12
 24c:	mov	x0, x20
 250:	ldr	x8, [x8, #16]
 254:	blr	x8
 258:	cbz	x21, 278 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x278>
 25c:	ldaxr	w8, [x27]
 260:	sub	w9, w8, #0x1
 264:	stlxr	w10, w9, [x27]
 268:	cbnz	w10, 25c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x25c>
 26c:	cmp	w8, #0x1
 270:	b.ne	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.any
 274:	b	28c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x28c>
 278:	ldr	w8, [x27]
 27c:	sub	w9, w8, #0x1
 280:	str	w9, [x27]
 284:	cmp	w8, #0x1
 288:	b.ne	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.any
 28c:	ldr	x8, [x20]
 290:	mov	x0, x20
 294:	ldr	x8, [x8, #24]
 298:	blr	x8
 29c:	b	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>
 2a0:	mov	x20, xzr
 2a4:	cmp	x22, x21
 2a8:	b.eq	308 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x308>  // b.none
 2ac:	adrp	x8, 0 <__pthread_key_create>
 2b0:	ldr	x8, [x8]
 2b4:	mov	x9, x20
 2b8:	b	2d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2d8>
 2bc:	ldr	w11, [x10]
 2c0:	add	w11, w11, #0x1
 2c4:	str	w11, [x10]
 2c8:	add	x22, x22, #0x10
 2cc:	cmp	x22, x21
 2d0:	add	x9, x9, #0x10
 2d4:	b.eq	308 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x308>  // b.none
 2d8:	ldr	x10, [x22]
 2dc:	str	x10, [x9]
 2e0:	ldr	x10, [x22, #8]
 2e4:	str	x10, [x9, #8]
 2e8:	cbz	x10, 2c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2c8>
 2ec:	add	x10, x10, #0x8
 2f0:	cbz	x8, 2bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2bc>
 2f4:	ldaxr	w11, [x10]
 2f8:	add	w11, w11, #0x1
 2fc:	stlxr	w12, w11, [x10]
 300:	cbnz	w12, 2f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2f4>
 304:	b	2c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2c8>
 308:	ldp	x21, x24, [x19]
 30c:	cmp	x21, x24
 310:	b.eq	3cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3cc>  // b.none
 314:	adrp	x25, 0 <__pthread_key_create>
 318:	ldr	x25, [x25]
 31c:	b	32c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x32c>
 320:	add	x21, x21, #0x10
 324:	cmp	x21, x24
 328:	b.eq	3c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3c8>  // b.none
 32c:	ldr	x22, [x21, #8]
 330:	cbz	x22, 320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>
 334:	add	x8, x22, #0x8
 338:	cbz	x25, 358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x358>
 33c:	ldaxr	w9, [x8]
 340:	sub	w10, w9, #0x1
 344:	stlxr	w11, w10, [x8]
 348:	cbnz	w11, 33c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x33c>
 34c:	cmp	w9, #0x1
 350:	b.ne	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>  // b.any
 354:	b	36c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x36c>
 358:	ldr	w9, [x8]
 35c:	sub	w10, w9, #0x1
 360:	str	w10, [x8]
 364:	cmp	w9, #0x1
 368:	b.ne	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>  // b.any
 36c:	mov	x26, x22
 370:	ldr	x8, [x26], #12
 374:	mov	x0, x22
 378:	ldr	x8, [x8, #16]
 37c:	blr	x8
 380:	cbz	x25, 3a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3a0>
 384:	ldaxr	w8, [x26]
 388:	sub	w9, w8, #0x1
 38c:	stlxr	w10, w9, [x26]
 390:	cbnz	w10, 384 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x384>
 394:	cmp	w8, #0x1
 398:	b.ne	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>  // b.any
 39c:	b	3b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3b4>
 3a0:	ldr	w8, [x26]
 3a4:	sub	w9, w8, #0x1
 3a8:	str	w9, [x26]
 3ac:	cmp	w8, #0x1
 3b0:	b.ne	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>  // b.any
 3b4:	ldr	x8, [x22]
 3b8:	mov	x0, x22
 3bc:	ldr	x8, [x8, #24]
 3c0:	blr	x8
 3c4:	b	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>
 3c8:	ldr	x21, [x19]
 3cc:	cbz	x21, 3d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3d8>
 3d0:	mov	x0, x21
 3d4:	bl	0 <_ZdlPv>
 3d8:	add	x8, x20, x23, lsl #4
 3dc:	str	x20, [x19]
 3e0:	str	x8, [x19, #16]
 3e4:	ldr	x8, [x19]
 3e8:	add	x8, x8, x23, lsl #4
 3ec:	str	x8, [x19, #8]
 3f0:	mov	x0, x19
 3f4:	ldp	x20, x19, [sp, #80]
 3f8:	ldp	x22, x21, [sp, #64]
 3fc:	ldp	x24, x23, [sp, #48]
 400:	ldp	x26, x25, [sp, #32]
 404:	ldp	x28, x27, [sp, #16]
 408:	ldp	x29, x30, [sp], #96
 40c:	ret
 410:	ldp	x8, x25, [x19]
 414:	ldp	x22, x21, [x20]
 418:	sub	x8, x25, x8
 41c:	asr	x8, x8, #4
 420:	add	x8, x22, x8, lsl #4
 424:	cmp	x8, x21
 428:	b.eq	3e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3e4>  // b.none
 42c:	adrp	x9, 0 <__pthread_key_create>
 430:	ldr	x9, [x9]
 434:	b	454 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x454>
 438:	ldr	w11, [x10]
 43c:	add	w11, w11, #0x1
 440:	str	w11, [x10]
 444:	add	x8, x8, #0x10
 448:	cmp	x8, x21
 44c:	add	x25, x25, #0x10
 450:	b.eq	3e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3e4>  // b.none
 454:	ldr	x10, [x8]
 458:	str	x10, [x25]
 45c:	ldr	x10, [x8, #8]
 460:	str	x10, [x25, #8]
 464:	cbz	x10, 444 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x444>
 468:	add	x10, x10, #0x8
 46c:	cbz	x9, 438 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x438>
 470:	ldaxr	w11, [x10]
 474:	add	w11, w11, #0x1
 478:	stlxr	w12, w11, [x10]
 47c:	cbnz	w12, 470 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x470>
 480:	b	444 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x444>
 484:	ldr	x25, [x19, #8]
 488:	b	490 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x490>
 48c:	add	x24, x24, #0x10
 490:	cmp	x24, x25
 494:	b.eq	3e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3e4>  // b.none
 498:	ldr	x20, [x24, #8]
 49c:	cbz	x20, 48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>
 4a0:	add	x8, x20, #0x8
 4a4:	cbz	x21, 4c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4c4>
 4a8:	ldaxr	w9, [x8]
 4ac:	sub	w10, w9, #0x1
 4b0:	stlxr	w11, w10, [x8]
 4b4:	cbnz	w11, 4a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4a8>
 4b8:	cmp	w9, #0x1
 4bc:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>  // b.any
 4c0:	b	4d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4d8>
 4c4:	ldr	w9, [x8]
 4c8:	sub	w10, w9, #0x1
 4cc:	str	w10, [x8]
 4d0:	cmp	w9, #0x1
 4d4:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>  // b.any
 4d8:	mov	x22, x20
 4dc:	ldr	x8, [x22], #12
 4e0:	mov	x0, x20
 4e4:	ldr	x8, [x8, #16]
 4e8:	blr	x8
 4ec:	cbz	x21, 50c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x50c>
 4f0:	ldaxr	w8, [x22]
 4f4:	sub	w9, w8, #0x1
 4f8:	stlxr	w10, w9, [x22]
 4fc:	cbnz	w10, 4f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4f0>
 500:	cmp	w8, #0x1
 504:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>  // b.any
 508:	b	520 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x520>
 50c:	ldr	w8, [x22]
 510:	sub	w9, w8, #0x1
 514:	str	w9, [x22]
 518:	cmp	w8, #0x1
 51c:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>  // b.any
 520:	ldr	x8, [x20]
 524:	mov	x0, x20
 528:	ldr	x8, [x8, #24]
 52c:	blr	x8
 530:	b	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>
 534:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldr	x21, [x0]
  20:	mov	x19, x8
  24:	tst	x21, #0xfffffffffffffffe
  28:	and	x20, x21, #0xfffffffffffffffe
  2c:	cset	w8, ne  // ne = any
  30:	orr	x8, x20, x8
  34:	str	x8, [x0]
  38:	cbz	x20, 13c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x13c>
  3c:	str	xzr, [x0]
  40:	ldr	x8, [x20]
  44:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  48:	mov	x0, x20
  4c:	ldr	x8, [x8, #48]
  50:	ldr	x1, [x1]
  54:	blr	x8
  58:	tbz	w0, #0, 144 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x144>
  5c:	mov	w8, #0x1                   	// #1
  60:	str	x8, [x19]
  64:	ldp	x23, x24, [x20, #8]
  68:	cmp	x23, x24
  6c:	b.eq	128 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x128>  // b.none
  70:	adrp	x21, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  74:	ldr	x21, [x21]
  78:	mov	w25, #0x1                   	// #1
  7c:	mov	w8, #0x1                   	// #1
  80:	str	x8, [sp, #8]
  84:	str	xzr, [x19]
  88:	ldr	x22, [x23]
  8c:	str	xzr, [x23]
  90:	mov	x1, x21
  94:	ldr	x8, [x22]
  98:	mov	x0, x22
  9c:	ldr	x8, [x8, #48]
  a0:	blr	x8
  a4:	tbz	w0, #0, dc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xdc>
  a8:	ldr	x8, [x22]
  ac:	mov	x0, x22
  b0:	mov	x1, x21
  b4:	ldr	x8, [x8, #48]
  b8:	blr	x8
  bc:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
  c0:	str	x25, [sp]
  c4:	cbz	x22, e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  c8:	ldr	x8, [x22]
  cc:	mov	x0, x22
  d0:	ldr	x8, [x8, #8]
  d4:	blr	x8
  d8:	b	e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  dc:	orr	x8, x22, #0x1
  e0:	str	x8, [sp]
  e4:	add	x8, x29, #0x18
  e8:	add	x0, sp, #0x8
  ec:	mov	x1, sp
  f0:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  f4:	ldr	x8, [x19]
  f8:	cbnz	x8, 1d0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d0>
  fc:	ldr	x8, [x29, #24]
 100:	ldr	x9, [sp]
 104:	str	xzr, [x29, #24]
 108:	orr	x8, x8, #0x1
 10c:	str	x8, [x19]
 110:	cbnz	x9, 1d8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d8>
 114:	ldr	x9, [sp, #8]
 118:	cbnz	x9, 1e0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e0>
 11c:	add	x23, x23, #0x8
 120:	cmp	x24, x23
 124:	b.ne	80 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x80>  // b.any
 128:	ldr	x8, [x20]
 12c:	mov	x0, x20
 130:	ldr	x8, [x8, #8]
 134:	blr	x8
 138:	b	1b4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b4>
 13c:	mov	w8, #0x1                   	// #1
 140:	b	1b0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b0>
 144:	ldr	x8, [x20]
 148:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 14c:	mov	x0, x20
 150:	ldr	x8, [x8, #48]
 154:	ldr	x1, [x1]
 158:	blr	x8
 15c:	tbz	w0, #0, 1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 160:	ldr	x8, [x20]
 164:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 168:	mov	x0, x20
 16c:	ldr	x8, [x8, #48]
 170:	ldr	x1, [x1]
 174:	blr	x8
 178:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
 17c:	mov	w8, #0x1                   	// #1
 180:	str	x8, [x19]
 184:	ldr	x8, [x20]
 188:	mov	x0, x20
 18c:	ldp	x20, x19, [sp, #80]
 190:	ldp	x22, x21, [sp, #64]
 194:	ldr	x1, [x8, #8]
 198:	ldp	x24, x23, [sp, #48]
 19c:	ldr	x25, [sp, #32]
 1a0:	ldp	x29, x30, [sp, #16]
 1a4:	add	sp, sp, #0x60
 1a8:	br	x1
 1ac:	orr	x8, x21, #0x1
 1b0:	str	x8, [x19]
 1b4:	ldp	x20, x19, [sp, #80]
 1b8:	ldp	x22, x21, [sp, #64]
 1bc:	ldp	x24, x23, [sp, #48]
 1c0:	ldr	x25, [sp, #32]
 1c4:	ldp	x29, x30, [sp, #16]
 1c8:	add	sp, sp, #0x60
 1cc:	ret
 1d0:	mov	x0, x19
 1d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1d8:	mov	x0, sp
 1dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e0:	add	x0, sp, #0x8
 1e4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e8:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1ec:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f0:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x329                 	// #809
 204:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	40 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x40>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ldp	x9, x8, [x19, #16]
  44:	sub	x9, x9, x8
  48:	cmp	x9, #0x6
  4c:	b.hi	74 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x74>  // b.pmore
  50:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  54:	add	x1, x1, #0x0
  58:	mov	w2, #0x7                   	// #7
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  64:	mov	x0, x19
  68:	ldr	x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	mov	w9, #0x6563                	// #25955
  78:	mov	w10, #0x7573                	// #30067
  7c:	movk	w9, #0x7373, lsl #16
  80:	movk	w10, #0x6363, lsl #16
  84:	stur	w9, [x8, #3]
  88:	str	w10, [x8]
  8c:	ldr	x8, [x19, #24]
  90:	add	x8, x8, #0x7
  94:	str	x8, [x19, #24]
  98:	mov	x0, x19
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x8, x0, [x19, #16]
  2c:	sub	x8, x8, x0
  30:	cmp	x21, x8
  34:	b.ls	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.plast
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	mov	x2, x21
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x21, xzr
  58:	ldp	x8, x0, [x19, #16]
  5c:	sub	x8, x8, x0
  60:	cmp	x21, x8
  64:	b.hi	38 <_ZN4llvm11raw_ostreamlsEPKc+0x38>  // b.pmore
  68:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  6c:	mov	x1, x20
  70:	mov	x2, x21
  74:	bl	0 <memcpy>
  78:	ldr	x8, [x19, #24]
  7c:	add	x8, x8, x21
  80:	str	x8, [x19, #24]
  84:	mov	x0, x19
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x8
  20:	ldr	x8, [x0]
  24:	mov	x20, x1
  28:	tst	x8, #0xfffffffffffffffe
  2c:	and	x9, x8, #0xfffffffffffffffe
  30:	cset	w8, ne  // ne = any
  34:	orr	x8, x9, x8
  38:	str	x8, [x0]
  3c:	cbz	x9, 320 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x320>
  40:	ldr	x8, [x20]
  44:	mov	x21, x0
  48:	tst	x8, #0xfffffffffffffffe
  4c:	and	x9, x8, #0xfffffffffffffffe
  50:	cset	w8, ne  // ne = any
  54:	orr	x8, x9, x8
  58:	str	x8, [x20]
  5c:	cbz	x9, 2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
  60:	ldr	x9, [x21]
  64:	ands	x0, x9, #0xfffffffffffffffe
  68:	b.eq	128 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x128>  // b.none
  6c:	ldr	x8, [x0]
  70:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  74:	ldr	x8, [x8, #48]
  78:	ldr	x1, [x1]
  7c:	blr	x8
  80:	tbz	w0, #0, 124 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x124>
  84:	ldr	x8, [x20]
  88:	ldr	x9, [x21]
  8c:	ands	x0, x8, #0xfffffffffffffffe
  90:	and	x24, x9, #0xfffffffffffffffe
  94:	b.eq	268 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x268>  // b.none
  98:	ldr	x8, [x0]
  9c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  a0:	ldr	x8, [x8, #48]
  a4:	ldr	x1, [x1]
  a8:	blr	x8
  ac:	ldr	x8, [x20]
  b0:	and	x22, x8, #0xfffffffffffffffe
  b4:	tbz	w0, #0, 26c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x26c>
  b8:	str	xzr, [x20]
  bc:	ldp	x20, x25, [x22, #8]
  c0:	cmp	x20, x25
  c4:	b.eq	114 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x114>  // b.none
  c8:	add	x23, x24, #0x8
  cc:	b	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>
  d0:	mov	x0, x23
  d4:	mov	x2, x20
  d8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  dc:	add	x20, x20, #0x8
  e0:	cmp	x25, x20
  e4:	b.eq	114 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x114>  // b.none
  e8:	ldp	x1, x8, [x24, #16]
  ec:	cmp	x1, x8
  f0:	b.eq	d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xd0>  // b.none
  f4:	ldr	x8, [x20]
  f8:	str	xzr, [x20], #8
  fc:	str	x8, [x1]
 100:	ldr	x8, [x24, #16]
 104:	add	x8, x8, #0x8
 108:	str	x8, [x24, #16]
 10c:	cmp	x25, x20
 110:	b.ne	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>  // b.any
 114:	cbz	x22, 2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
 118:	ldr	x8, [x22]
 11c:	mov	x0, x22
 120:	b	2e4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2e4>
 124:	ldr	x8, [x20]
 128:	ands	x0, x8, #0xfffffffffffffffe
 12c:	b.eq	1f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f4>  // b.none
 130:	ldr	x8, [x0]
 134:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 138:	ldr	x8, [x8, #48]
 13c:	ldr	x1, [x1]
 140:	blr	x8
 144:	tbz	w0, #0, 1f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f4>
 148:	ldr	x8, [x20]
 14c:	and	x8, x8, #0xfffffffffffffffe
 150:	mov	x0, x8
 154:	ldr	x13, [x0, #8]!
 158:	ldr	x9, [x21]
 15c:	and	x11, x9, #0xfffffffffffffffe
 160:	str	x11, [x29, #24]
 164:	str	xzr, [x21]
 168:	ldr	x9, [x0]
 16c:	ldp	x10, x12, [x8, #16]
 170:	sub	x14, x13, x9
 174:	cmp	x10, x12
 178:	asr	x12, x14, #3
 17c:	b.eq	2bc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2bc>  // b.none
 180:	cmp	x10, x13
 184:	b.eq	300 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x300>  // b.none
 188:	ldur	x11, [x10, #-8]
 18c:	add	x21, x9, x12, lsl #3
 190:	stp	xzr, x11, [x10, #-8]
 194:	ldr	x10, [x8, #16]
 198:	sub	x9, x10, #0x8
 19c:	add	x11, x10, #0x8
 1a0:	sub	x10, x9, x21
 1a4:	cmp	x10, #0x1
 1a8:	str	x11, [x8, #16]
 1ac:	b.lt	298 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x298>  // b.tstop
 1b0:	lsr	x8, x10, #3
 1b4:	add	x22, x8, #0x1
 1b8:	mov	x23, x9
 1bc:	b	1d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d0>
 1c0:	sub	x22, x22, #0x1
 1c4:	cmp	x22, #0x1
 1c8:	mov	x9, x23
 1cc:	b.le	298 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x298>
 1d0:	ldr	x8, [x23, #-8]!
 1d4:	str	xzr, [x23]
 1d8:	ldr	x0, [x9]
 1dc:	str	x8, [x9]
 1e0:	cbz	x0, 1c0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1c0>
 1e4:	ldr	x8, [x0]
 1e8:	ldr	x8, [x8, #8]
 1ec:	blr	x8
 1f0:	b	1c0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1c0>
 1f4:	mov	w0, #0x20                  	// #32
 1f8:	bl	0 <_Znwm>
 1fc:	ldr	x8, [x21]
 200:	add	x1, sp, #0x8
 204:	mov	x2, sp
 208:	mov	x22, x0
 20c:	and	x8, x8, #0xfffffffffffffffe
 210:	str	x8, [sp, #8]
 214:	str	xzr, [x21]
 218:	ldr	x8, [x20]
 21c:	and	x8, x8, #0xfffffffffffffffe
 220:	str	x8, [sp]
 224:	str	xzr, [x20]
 228:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 22c:	ldr	x0, [sp]
 230:	orr	x8, x22, #0x1
 234:	str	x8, [x19]
 238:	cbz	x0, 248 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x248>
 23c:	ldr	x8, [x0]
 240:	ldr	x8, [x8, #8]
 244:	blr	x8
 248:	ldr	x0, [sp, #8]
 24c:	str	xzr, [sp]
 250:	cbz	x0, 260 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x260>
 254:	ldr	x8, [x0]
 258:	ldr	x8, [x8, #8]
 25c:	blr	x8
 260:	str	xzr, [sp, #8]
 264:	b	330 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x330>
 268:	mov	x22, xzr
 26c:	str	x22, [x29, #24]
 270:	str	xzr, [x20]
 274:	ldp	x1, x8, [x24, #16]
 278:	cmp	x1, x8
 27c:	b.eq	2cc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2cc>  // b.none
 280:	str	xzr, [x29, #24]
 284:	str	x22, [x1], #8
 288:	str	x1, [x24, #16]
 28c:	ldr	x0, [x29, #24]
 290:	cbnz	x0, 2e0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2e0>
 294:	b	2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
 298:	ldr	x8, [x29, #24]
 29c:	str	xzr, [x29, #24]
 2a0:	ldr	x0, [x21]
 2a4:	str	x8, [x21]
 2a8:	cbz	x0, 30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2ac:	ldr	x8, [x0]
 2b0:	ldr	x8, [x8, #8]
 2b4:	blr	x8
 2b8:	b	30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2bc:	add	x1, x9, x12, lsl #3
 2c0:	add	x2, x29, #0x18
 2c4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 2c8:	b	30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2cc:	add	x0, x24, #0x8
 2d0:	add	x2, x29, #0x18
 2d4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 2d8:	ldr	x0, [x29, #24]
 2dc:	cbz	x0, 2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
 2e0:	ldr	x8, [x0]
 2e4:	ldr	x8, [x8, #8]
 2e8:	blr	x8
 2ec:	ldr	x8, [x21]
 2f0:	orr	x8, x8, #0x1
 2f4:	str	x8, [x19]
 2f8:	str	xzr, [x21]
 2fc:	b	330 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x330>
 300:	str	xzr, [x29, #24]
 304:	str	x11, [x10], #8
 308:	str	x10, [x8, #16]
 30c:	ldr	x0, [x29, #24]
 310:	cbz	x0, 320 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x320>
 314:	ldr	x8, [x0]
 318:	ldr	x8, [x8, #8]
 31c:	blr	x8
 320:	ldr	x8, [x20]
 324:	orr	x8, x8, #0x1
 328:	str	x8, [x19]
 32c:	str	xzr, [x20]
 330:	ldp	x20, x19, [sp, #80]
 334:	ldp	x22, x21, [sp, #64]
 338:	ldp	x24, x23, [sp, #48]
 33c:	ldr	x25, [sp, #32]
 340:	ldp	x29, x30, [sp, #16]
 344:	add	sp, sp, #0x60
 348:	ret

Disassembly of section .text._ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_:

0000000000000000 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  14:	ldr	x8, [x8]
  18:	mov	x20, x0
  1c:	mov	x19, x0
  20:	mov	x22, x1
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0]
  2c:	str	xzr, [x20, #8]!
  30:	stp	xzr, xzr, [x0, #16]
  34:	ldr	x0, [x1]
  38:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  3c:	mov	x21, x2
  40:	ldr	x8, [x0]
  44:	ldr	x8, [x8, #48]
  48:	ldr	x1, [x1]
  4c:	blr	x8
  50:	tbnz	w0, #0, f8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf8>
  54:	ldr	x0, [x21]
  58:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  5c:	ldr	x8, [x0]
  60:	ldr	x8, [x8, #48]
  64:	ldr	x1, [x1]
  68:	blr	x8
  6c:	tbnz	w0, #0, f8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf8>
  70:	ldp	x1, x8, [x19, #16]
  74:	cmp	x1, x8
  78:	b.eq	c8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xc8>  // b.none
  7c:	ldr	x8, [x22]
  80:	str	xzr, [x22]
  84:	str	x8, [x1]
  88:	ldr	x8, [x19, #16]
  8c:	add	x1, x8, #0x8
  90:	str	x1, [x19, #16]
  94:	ldr	x8, [x19, #24]
  98:	cmp	x1, x8
  9c:	b.eq	e0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xe0>  // b.none
  a0:	ldr	x8, [x21]
  a4:	str	xzr, [x21]
  a8:	str	x8, [x1]
  ac:	ldr	x8, [x19, #16]
  b0:	add	x8, x8, #0x8
  b4:	str	x8, [x19, #16]
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	mov	x0, x20
  cc:	mov	x2, x22
  d0:	bl	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  d4:	ldp	x1, x8, [x19, #16]
  d8:	cmp	x1, x8
  dc:	b.ne	a0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xa0>  // b.any
  e0:	mov	x0, x20
  e4:	mov	x2, x21
  e8:	ldp	x20, x19, [sp, #32]
  ec:	ldp	x22, x21, [sp, #16]
  f0:	ldp	x29, x30, [sp], #48
  f4:	b	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  f8:	adrp	x0, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  fc:	adrp	x1, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
 100:	adrp	x3, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x182                 	// #386
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	144 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x144>  // b.none
  2c:	asr	x9, x8, #3
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #60
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #3
  70:	cbz	x25, 84 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #3
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	x8, [x23]
  8c:	str	xzr, [x23]
  90:	cmp	x20, x21
  94:	mov	x23, x22
  98:	str	x8, [x22, x26, lsl #3]
  9c:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  a0:	mov	x23, x22
  a4:	mov	x26, x20
  a8:	b	bc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xbc>
  ac:	str	xzr, [x26], #8
  b0:	cmp	x21, x26
  b4:	add	x23, x23, #0x8
  b8:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  bc:	ldr	x8, [x26]
  c0:	str	xzr, [x26]
  c4:	str	x8, [x23]
  c8:	ldr	x0, [x26]
  cc:	cbz	x0, ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  d0:	ldr	x8, [x0]
  d4:	ldr	x8, [x8, #8]
  d8:	blr	x8
  dc:	b	ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  e0:	str	xzr, [x21], #8
  e4:	cmp	x24, x21
  e8:	add	x23, x23, #0x8
  ec:	b.eq	114 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x114>  // b.none
  f0:	ldr	x8, [x21]
  f4:	str	xzr, [x21]
  f8:	str	x8, [x23]
  fc:	ldr	x0, [x21]
 100:	cbz	x0, e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 104:	ldr	x8, [x0]
 108:	ldr	x8, [x8, #8]
 10c:	blr	x8
 110:	b	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 114:	cbz	x20, 120 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	add	x8, x22, x25, lsl #3
 124:	stp	x22, x23, [x19]
 128:	str	x8, [x19, #16]
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldp	x26, x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_:

0000000000000000 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 6c <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x6c>
  28:	ldr	x9, [x22]
  2c:	mov	x21, x20
  30:	ldr	x10, [x8, #32]
  34:	add	x11, x8, #0x18
  38:	add	x12, x8, #0x10
  3c:	cmp	x10, x9
  40:	csel	x21, x21, x8, cc  // cc = lo, ul, last
  44:	csel	x8, x11, x12, cc  // cc = lo, ul, last
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 30 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x30>
  50:	cmp	x21, x20
  54:	b.eq	70 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x70>  // b.none
  58:	ldr	x8, [x22]
  5c:	ldr	x9, [x21, #32]
  60:	cmp	x8, x9
  64:	b.cc	70 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x70>  // b.lo, b.ul, b.last
  68:	b	f0 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xf0>
  6c:	mov	x21, x20
  70:	mov	w0, #0x30                  	// #48
  74:	bl	0 <_Znwm>
  78:	ldr	x8, [x22]
  7c:	mov	x23, x0
  80:	mov	x22, x0
  84:	mov	x1, x21
  88:	str	x8, [x23, #32]!
  8c:	str	wzr, [x0, #40]
  90:	mov	x0, x19
  94:	mov	x2, x23
  98:	bl	0 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_>
  9c:	mov	x21, x0
  a0:	cbz	x1, e8 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xe8>
  a4:	mov	x2, x1
  a8:	mov	w0, #0x1                   	// #1
  ac:	cbnz	x21, c8 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xc8>
  b0:	cmp	x20, x2
  b4:	b.eq	c8 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xc8>  // b.none
  b8:	ldr	x8, [x23]
  bc:	ldr	x9, [x2, #32]
  c0:	cmp	x8, x9
  c4:	cset	w0, cc  // cc = lo, ul, last
  c8:	mov	x1, x22
  cc:	mov	x3, x20
  d0:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  d4:	ldr	x8, [x19, #40]
  d8:	mov	x21, x22
  dc:	add	x8, x8, #0x1
  e0:	str	x8, [x19, #40]
  e4:	b	f0 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xf0>
  e8:	mov	x0, x22
  ec:	bl	0 <_ZdlPv>
  f0:	add	x0, x21, #0x28
  f4:	ldp	x20, x19, [sp, #48]
  f8:	ldp	x22, x21, [sp, #32]
  fc:	ldr	x23, [sp, #16]
 100:	ldp	x29, x30, [sp], #64
 104:	ret

Disassembly of section .text._ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x74>  // b.none
  2c:	ldr	x22, [x22]
  30:	ldr	x8, [x20, #32]
  34:	cmp	x22, x8
  38:	b.cs	dc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xdc>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	124 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x124>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	x8, [x0, #32]
  54:	cmp	x8, x22
  58:	b.cs	130 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x130>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	20c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x20c>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	x9, [x22]
  84:	ldr	x8, [x19, #32]
  88:	cmp	x8, x9
  8c:	b.cc	1dc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1dc>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 170 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x170>
  98:	ldr	x8, [x22]
  9c:	ldr	x10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	x8, x10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x9c>
  bc:	cmp	x8, x10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cs	18c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x18c>  // b.hs, b.nlast
  cc:	ldr	x8, [x21, #24]
  d0:	cmp	x8, x20
  d4:	b.ne	180 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x180>  // b.any
  d8:	b	1dc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1dc>
  dc:	cmp	x8, x22
  e0:	b.cs	11c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x11c>  // b.hs, b.nlast
  e4:	ldr	x19, [x21, #32]
  e8:	cmp	x19, x20
  ec:	b.eq	1dc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1dc>  // b.none
  f0:	mov	x0, x20
  f4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  f8:	ldr	x8, [x0, #32]
  fc:	cmp	x22, x8
 100:	b.cs	198 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x198>  // b.hs, b.nlast
 104:	ldr	x8, [x20, #24]
 108:	cmp	x8, #0x0
 10c:	csel	x8, xzr, x0, eq  // eq = none
 110:	csel	x19, x20, x0, eq  // eq = none
 114:	mov	x20, x8
 118:	b	20c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x20c>
 11c:	mov	x19, xzr
 120:	b	20c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x20c>
 124:	mov	x20, x24
 128:	mov	x19, x24
 12c:	b	20c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x20c>
 130:	ldr	x9, [x21, #16]
 134:	cbz	x9, 1d0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1d0>
 138:	ldr	x8, [x9, #32]
 13c:	mov	x19, x9
 140:	add	x9, x9, #0x10
 144:	add	x10, x19, #0x18
 148:	cmp	x22, x8
 14c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 150:	ldr	x9, [x9]
 154:	cbnz	x9, 138 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x138>
 158:	cmp	x22, x8
 15c:	mov	x0, x19
 160:	b.cs	1fc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1fc>  // b.hs, b.nlast
 164:	cmp	x24, x19
 168:	b.ne	1f4 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1f4>  // b.any
 16c:	b	1dc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1dc>
 170:	mov	x19, x23
 174:	ldr	x8, [x21, #24]
 178:	cmp	x8, x20
 17c:	b.eq	1dc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1dc>  // b.none
 180:	mov	x0, x20
 184:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 188:	ldr	x8, [x22]
 18c:	ldr	x9, [x0, #32]
 190:	cmp	x9, x8
 194:	b	204 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x204>
 198:	ldr	x9, [x21, #16]
 19c:	cbz	x9, 1e4 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1e4>
 1a0:	ldr	x8, [x9, #32]
 1a4:	mov	x19, x9
 1a8:	add	x9, x9, #0x10
 1ac:	add	x10, x19, #0x18
 1b0:	cmp	x22, x8
 1b4:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1b8:	ldr	x9, [x9]
 1bc:	cbnz	x9, 1a0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1a0>
 1c0:	cmp	x22, x8
 1c4:	mov	x0, x19
 1c8:	b.cc	1e8 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1e8>  // b.lo, b.ul, b.last
 1cc:	b	1fc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1fc>
 1d0:	mov	x19, x23
 1d4:	cmp	x24, x19
 1d8:	b.ne	1f4 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1f4>  // b.any
 1dc:	mov	x20, xzr
 1e0:	b	20c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x20c>
 1e4:	mov	x19, x23
 1e8:	ldr	x8, [x21, #24]
 1ec:	cmp	x8, x19
 1f0:	b.eq	1dc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1dc>  // b.none
 1f4:	mov	x0, x19
 1f8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1fc:	ldr	x8, [x0, #32]
 200:	cmp	x8, x22
 204:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 208:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 20c:	mov	x0, x20
 210:	mov	x1, x19
 214:	ldp	x20, x19, [sp, #48]
 218:	ldp	x22, x21, [sp, #32]
 21c:	ldp	x24, x23, [sp, #16]
 220:	ldp	x29, x30, [sp], #64
 224:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  ec:	cbz	w19, 158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x158>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x158>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	16c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x16c>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	w23, [x8, x22, lsl #2]
 128:	cmp	w23, #0x20
 12c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 130:	mov	w1, #0x20                  	// #32
 134:	bfxil	w1, w23, #0, #5
 138:	mov	w2, #0x6                   	// #6
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 144:	lsr	w1, w23, #5
 148:	cmp	w23, #0x3ff
 14c:	mov	w23, w1
 150:	b.hi	130 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x130>  // b.pmore
 154:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xfc>
 158:	ldp	x20, x19, [sp, #48]
 15c:	ldp	x22, x21, [sp, #32]
 160:	ldr	x23, [sp, #16]
 164:	ldp	x29, x30, [sp], #64
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 170:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 174:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x99                  	// #153
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  ec:	cbz	w19, 158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x158>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x158>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	16c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x16c>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	w23, [x8, x22, lsl #2]
 128:	cmp	w23, #0x20
 12c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 130:	mov	w1, #0x20                  	// #32
 134:	bfxil	w1, w23, #0, #5
 138:	mov	w2, #0x6                   	// #6
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 144:	lsr	w1, w23, #5
 148:	cmp	w23, #0x3ff
 14c:	mov	w23, w1
 150:	b.hi	130 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x130>  // b.pmore
 154:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xfc>
 158:	ldp	x20, x19, [sp, #48]
 15c:	ldp	x22, x21, [sp, #32]
 160:	ldr	x23, [sp, #16]
 164:	ldp	x29, x30, [sp], #64
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 170:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 174:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x99                  	// #153
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE:

0000000000000000 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	stur	x5, [x29, #-8]
  24:	ldp	x8, x10, [x0, #24]
  28:	sub	w9, w1, #0x4
  2c:	sub	x10, x10, x8
  30:	cmp	x9, x10, asr #4
  34:	b.cs	440 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x440>  // b.hs, b.nlast
  38:	mov	x23, x2
  3c:	lsl	x9, x9, #4
  40:	ldr	w2, [x0, #16]
  44:	ldr	x25, [x8, x9]
  48:	mov	x24, x6
  4c:	mov	x21, x4
  50:	mov	x19, x3
  54:	mov	x22, x0
  58:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  5c:	ldr	w26, [x25, #8]
  60:	tst	x24, #0xff00000000
  64:	b.eq	9c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x9c>  // b.none
  68:	cbz	w26, 4a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4a0>
  6c:	ldr	x1, [x25]
  70:	ldrb	w8, [x1, #8]
  74:	tbnz	w8, #0, 2b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2b4>
  78:	ubfx	w8, w8, #1, #3
  7c:	cmp	w8, #0x5
  80:	b.eq	4c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4c0>  // b.none
  84:	cmp	w8, #0x3
  88:	b.eq	4c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4c0>  // b.none
  8c:	mov	x0, x22
  90:	mov	w2, w24
  94:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  98:	b	2c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2c0>
  9c:	mov	w27, wzr
  a0:	cmp	w27, w26
  a4:	b.eq	2cc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2cc>  // b.none
  a8:	ldur	x8, [x29, #-8]
  ac:	mov	w28, wzr
  b0:	mov	x20, x21
  b4:	str	x21, [sp, #16]
  b8:	and	x9, x8, #0xffffffff
  bc:	lsr	x8, x8, #32
  c0:	stp	x9, x8, [sp]
  c4:	b	f0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf0>
  c8:	mov	w8, w28
  cc:	cmp	x19, x8
  d0:	b.ls	380 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x380>  // b.plast
  d4:	ldr	w2, [x23, x8, lsl #2]
  d8:	mov	x0, x22
  dc:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  e0:	add	w28, w28, #0x1
  e4:	add	w27, w27, #0x1
  e8:	cmp	w27, w26
  ec:	b.eq	2d4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2d4>  // b.none
  f0:	ldr	w8, [x25, #8]
  f4:	cmp	w8, w27
  f8:	b.ls	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.plast
  fc:	ldr	x9, [x25]
 100:	add	x1, x9, w27, uxtw #4
 104:	ldrb	w10, [x1, #8]
 108:	tbnz	w10, #0, 1c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1c0>
 10c:	ubfx	w10, w10, #1, #3
 110:	cmp	w10, #0x5
 114:	b.eq	1e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1e0>  // b.none
 118:	cmp	w10, #0x3
 11c:	b.ne	c8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc8>  // b.any
 120:	add	w10, w27, #0x2
 124:	cmp	w10, w26
 128:	b.ne	3a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3a0>  // b.any
 12c:	add	w27, w27, #0x1
 130:	cmp	w8, w27
 134:	b.ls	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.plast
 138:	add	x24, x9, w27, uxtw #4
 13c:	cbz	x20, 234 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x234>
 140:	cmp	x19, w28, uxtw
 144:	b.ne	3c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3c0>  // b.any
 148:	ldur	x8, [x29, #-8]
 14c:	cmp	w8, #0x20
 150:	mov	w1, w8
 154:	b.cc	184 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x184>  // b.lo, b.ul, b.last
 158:	ldur	x8, [x29, #-8]
 15c:	mov	w21, w8
 160:	mov	w1, #0x20                  	// #32
 164:	bfxil	w1, w21, #0, #5
 168:	mov	w2, #0x6                   	// #6
 16c:	mov	x0, x22
 170:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 174:	lsr	w1, w21, #5
 178:	cmp	w21, #0x3ff
 17c:	mov	w21, w1
 180:	b.hi	160 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x160>  // b.pmore
 184:	mov	w2, #0x6                   	// #6
 188:	mov	x0, x22
 18c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 190:	ldur	x8, [x29, #-8]
 194:	cbz	w8, 1b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1b4>
 198:	ldr	x21, [sp]
 19c:	ldrb	w2, [x20], #1
 1a0:	mov	x0, x22
 1a4:	mov	x1, x24
 1a8:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 1ac:	subs	x21, x21, #0x1
 1b0:	b.ne	19c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x19c>  // b.any
 1b4:	ldr	x21, [sp, #16]
 1b8:	mov	x20, xzr
 1bc:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 1c0:	mov	w8, w28
 1c4:	cmp	x19, x8
 1c8:	b.ls	360 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x360>  // b.plast
 1cc:	ldr	w8, [x23, x8, lsl #2]
 1d0:	ldr	x9, [x1]
 1d4:	cmp	x9, x8
 1d8:	b.eq	e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe0>  // b.none
 1dc:	b	340 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x340>
 1e0:	mov	w8, w28
 1e4:	cbz	x20, 21c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x21c>
 1e8:	cmp	x19, x8
 1ec:	b.ne	3e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3e0>  // b.any
 1f0:	cmp	x20, x21
 1f4:	b.ne	400 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x400>  // b.any
 1f8:	ldr	x8, [sp, #8]
 1fc:	cbnz	x8, 420 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x420>
 200:	ldur	x2, [x29, #-8]
 204:	mov	w3, #0x1                   	// #1
 208:	mov	x0, x22
 20c:	mov	x1, x21
 210:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 214:	mov	x20, xzr
 218:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 21c:	sub	x2, x19, x8
 220:	add	x1, x23, x8, lsl #2
 224:	mov	w3, #0x1                   	// #1
 228:	mov	x0, x22
 22c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 230:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 234:	sub	w20, w19, w28
 238:	cmp	w20, #0x20
 23c:	b.cs	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.hs, b.nlast
 240:	mov	w1, w20
 244:	b	26c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x26c>
 248:	mov	w1, #0x20                  	// #32
 24c:	bfxil	w1, w20, #0, #5
 250:	mov	w2, #0x6                   	// #6
 254:	mov	x0, x22
 258:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 25c:	lsr	w1, w20, #5
 260:	cmp	w20, #0x3ff
 264:	mov	w20, w1
 268:	b.hi	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.pmore
 26c:	mov	w2, #0x6                   	// #6
 270:	mov	x0, x22
 274:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 278:	cmp	w28, w19
 27c:	b.eq	2a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2a8>  // b.none
 280:	mov	w20, w28
 284:	cmp	x19, x20
 288:	b.ls	320 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x320>  // b.plast
 28c:	ldr	w2, [x23, x20, lsl #2]
 290:	mov	x0, x22
 294:	mov	x1, x24
 298:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 29c:	add	w28, w20, #0x1
 2a0:	cmp	w19, w28
 2a4:	b.ne	280 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x280>  // b.any
 2a8:	mov	x20, xzr
 2ac:	mov	w28, w19
 2b0:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 2b4:	ldr	x8, [x1]
 2b8:	cmp	x8, w24, uxtw
 2bc:	b.ne	340 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x340>  // b.any
 2c0:	mov	w27, #0x1                   	// #1
 2c4:	cmp	w27, w26
 2c8:	b.ne	a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa8>  // b.any
 2cc:	mov	w28, wzr
 2d0:	mov	x20, x21
 2d4:	cmp	x19, w28, uxtw
 2d8:	b.ne	460 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x460>  // b.any
 2dc:	cbnz	x20, 480 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x480>
 2e0:	ldp	x20, x19, [sp, #112]
 2e4:	ldp	x22, x21, [sp, #96]
 2e8:	ldp	x24, x23, [sp, #80]
 2ec:	ldp	x26, x25, [sp, #64]
 2f0:	ldp	x28, x27, [sp, #48]
 2f4:	ldp	x29, x30, [sp, #32]
 2f8:	add	sp, sp, #0x80
 2fc:	ret
 300:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 304:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 308:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 30c:	add	x0, x0, #0x0
 310:	add	x1, x1, #0x0
 314:	add	x3, x3, #0x0
 318:	mov	w2, #0x99                  	// #153
 31c:	bl	0 <__assert_fail>
 320:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 324:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 328:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 32c:	add	x0, x0, #0x0
 330:	add	x1, x1, #0x0
 334:	add	x3, x3, #0x0
 338:	mov	w2, #0xfa                  	// #250
 33c:	bl	0 <__assert_fail>
 340:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 344:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 348:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 34c:	add	x0, x0, #0x0
 350:	add	x1, x1, #0x0
 354:	add	x3, x3, #0x0
 358:	mov	w2, #0x107                 	// #263
 35c:	bl	0 <__assert_fail>
 360:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 364:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 368:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 36c:	add	x0, x0, #0x0
 370:	add	x1, x1, #0x0
 374:	add	x3, x3, #0x0
 378:	mov	w2, #0x145                 	// #325
 37c:	bl	0 <__assert_fail>
 380:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 384:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 388:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 38c:	add	x0, x0, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x3, x3, #0x0
 398:	mov	w2, #0x173                 	// #371
 39c:	bl	0 <__assert_fail>
 3a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ac:	add	x0, x0, #0x0
 3b0:	add	x1, x1, #0x0
 3b4:	add	x3, x3, #0x0
 3b8:	mov	w2, #0x14a                 	// #330
 3bc:	bl	0 <__assert_fail>
 3c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3cc:	add	x0, x0, #0x0
 3d0:	add	x1, x1, #0x0
 3d4:	add	x3, x3, #0x0
 3d8:	mov	w2, #0x151                 	// #337
 3dc:	bl	0 <__assert_fail>
 3e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x169                 	// #361
 3fc:	bl	0 <__assert_fail>
 400:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 404:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 408:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 40c:	add	x0, x0, #0x0
 410:	add	x1, x1, #0x0
 414:	add	x3, x3, #0x0
 418:	mov	w2, #0x16b                 	// #363
 41c:	bl	0 <__assert_fail>
 420:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 424:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 428:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 42c:	add	x0, x0, #0x0
 430:	add	x1, x1, #0x0
 434:	add	x3, x3, #0x0
 438:	mov	w2, #0x16c                 	// #364
 43c:	bl	0 <__assert_fail>
 440:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 444:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 448:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 44c:	add	x0, x0, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x3, x3, #0x0
 458:	mov	w2, #0x12d                 	// #301
 45c:	bl	0 <__assert_fail>
 460:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 464:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 468:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 46c:	add	x0, x0, #0x0
 470:	add	x1, x1, #0x0
 474:	add	x3, x3, #0x0
 478:	mov	w2, #0x178                 	// #376
 47c:	bl	0 <__assert_fail>
 480:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 484:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 488:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 48c:	add	x0, x0, #0x0
 490:	add	x1, x1, #0x0
 494:	add	x3, x3, #0x0
 498:	mov	w2, #0x17a                 	// #378
 49c:	bl	0 <__assert_fail>
 4a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4ac:	add	x0, x0, #0x0
 4b0:	add	x1, x1, #0x0
 4b4:	add	x3, x3, #0x0
 4b8:	mov	w2, #0x134                 	// #308
 4bc:	bl	0 <__assert_fail>
 4c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4cc:	add	x0, x0, #0x0
 4d0:	add	x1, x1, #0x0
 4d4:	add	x3, x3, #0x0
 4d8:	mov	w2, #0x13c                 	// #316
 4dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #8]
   c:	tbnz	w8, #0, fc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xfc>
  10:	ubfx	w8, w8, #1, #3
  14:	cmp	w8, #0x1
  18:	b.eq	68 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x68>  // b.none
  1c:	cmp	w8, #0x2
  20:	b.eq	50 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x50>  // b.none
  24:	cmp	w8, #0x4
  28:	b.ne	11c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x11c>  // b.any
  2c:	sub	w8, w2, #0x61
  30:	and	w8, w8, #0xff
  34:	cmp	w8, #0x19
  38:	and	w8, w2, #0xff
  3c:	b.hi	88 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x88>  // b.pmore
  40:	sub	w1, w8, #0x61
  44:	mov	w2, #0x6                   	// #6
  48:	ldp	x29, x30, [sp], #16
  4c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  50:	ldr	x8, [x1]
  54:	cbz	x8, 80 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x80>
  58:	mov	w1, w2
  5c:	mov	w2, w8
  60:	ldp	x29, x30, [sp], #16
  64:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  68:	ldr	x8, [x1]
  6c:	cbz	x8, 80 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x80>
  70:	mov	w1, w2
  74:	mov	w2, w8
  78:	ldp	x29, x30, [sp], #16
  7c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  80:	ldp	x29, x30, [sp], #16
  84:	ret
  88:	sub	w9, w2, #0x41
  8c:	and	w9, w9, #0xff
  90:	cmp	w9, #0x19
  94:	b.hi	a8 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xa8>  // b.pmore
  98:	sub	w1, w8, #0x27
  9c:	mov	w2, #0x6                   	// #6
  a0:	ldp	x29, x30, [sp], #16
  a4:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  a8:	sub	w9, w2, #0x30
  ac:	and	w9, w9, #0xff
  b0:	cmp	w9, #0x9
  b4:	b.hi	c8 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xc8>  // b.pmore
  b8:	add	w1, w8, #0x4
  bc:	mov	w2, #0x6                   	// #6
  c0:	ldp	x29, x30, [sp], #16
  c4:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  c8:	and	w8, w2, #0xff
  cc:	cmp	w8, #0x2e
  d0:	b.eq	ec <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xec>  // b.none
  d4:	cmp	w8, #0x5f
  d8:	b.ne	134 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x134>  // b.any
  dc:	mov	w1, #0x3f                  	// #63
  e0:	mov	w2, #0x6                   	// #6
  e4:	ldp	x29, x30, [sp], #16
  e8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  ec:	mov	w1, #0x3e                  	// #62
  f0:	mov	w2, #0x6                   	// #6
  f4:	ldp	x29, x30, [sp], #16
  f8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  fc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 100:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 104:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x10e                 	// #270
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 120:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	mov	w2, #0x112                 	// #274
 130:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 134:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 138:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	mov	w2, #0x99                  	// #153
 148:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #8]
   c:	tbnz	w8, #0, fc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xfc>
  10:	ubfx	w8, w8, #1, #3
  14:	cmp	w8, #0x1
  18:	b.eq	68 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x68>  // b.none
  1c:	cmp	w8, #0x2
  20:	b.eq	50 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x50>  // b.none
  24:	cmp	w8, #0x4
  28:	b.ne	11c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x11c>  // b.any
  2c:	sub	w8, w2, #0x61
  30:	and	w8, w8, #0xff
  34:	cmp	w8, #0x19
  38:	and	w8, w2, #0xff
  3c:	b.hi	88 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x88>  // b.pmore
  40:	sub	w1, w8, #0x61
  44:	mov	w2, #0x6                   	// #6
  48:	ldp	x29, x30, [sp], #16
  4c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  50:	ldr	x8, [x1]
  54:	cbz	x8, 80 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x80>
  58:	and	x1, x2, #0xff
  5c:	mov	w2, w8
  60:	ldp	x29, x30, [sp], #16
  64:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  68:	ldr	x8, [x1]
  6c:	cbz	x8, 80 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x80>
  70:	and	w1, w2, #0xff
  74:	mov	w2, w8
  78:	ldp	x29, x30, [sp], #16
  7c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  80:	ldp	x29, x30, [sp], #16
  84:	ret
  88:	sub	w9, w2, #0x41
  8c:	and	w9, w9, #0xff
  90:	cmp	w9, #0x19
  94:	b.hi	a8 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xa8>  // b.pmore
  98:	sub	w1, w8, #0x27
  9c:	mov	w2, #0x6                   	// #6
  a0:	ldp	x29, x30, [sp], #16
  a4:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  a8:	sub	w9, w2, #0x30
  ac:	and	w9, w9, #0xff
  b0:	cmp	w9, #0x9
  b4:	b.hi	c8 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xc8>  // b.pmore
  b8:	add	w1, w8, #0x4
  bc:	mov	w2, #0x6                   	// #6
  c0:	ldp	x29, x30, [sp], #16
  c4:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  c8:	and	w8, w2, #0xff
  cc:	cmp	w8, #0x2e
  d0:	b.eq	ec <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xec>  // b.none
  d4:	cmp	w8, #0x5f
  d8:	b.ne	134 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x134>  // b.any
  dc:	mov	w1, #0x3f                  	// #63
  e0:	mov	w2, #0x6                   	// #6
  e4:	ldp	x29, x30, [sp], #16
  e8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  ec:	mov	w1, #0x3e                  	// #62
  f0:	mov	w2, #0x6                   	// #6
  f4:	ldp	x29, x30, [sp], #16
  f8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  fc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 100:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 104:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x10e                 	// #270
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 120:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	mov	w2, #0x112                 	// #274
 130:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 134:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 138:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	mov	w2, #0x99                  	// #153
 148:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb:

0000000000000000 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x2
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	tbz	w3, #0, 68 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x68>
  24:	cmp	w21, #0x20
  28:	b.cs	34 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x34>  // b.hs, b.nlast
  2c:	mov	w1, w21
  30:	b	5c <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x5c>
  34:	mov	w22, w21
  38:	mov	w1, #0x20                  	// #32
  3c:	bfxil	w1, w22, #0, #5
  40:	mov	w2, #0x6                   	// #6
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  4c:	lsr	w1, w22, #5
  50:	cmp	w22, #0x3ff
  54:	mov	w22, w1
  58:	b.hi	38 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x38>  // b.pmore
  5c:	mov	w2, #0x6                   	// #6
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  68:	ldr	w8, [x19, #8]
  6c:	cbz	w8, c0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0xc0>
  70:	ldr	x22, [x19]
  74:	ldr	w23, [x19, #12]
  78:	ldp	w8, w9, [x22, #8]
  7c:	sub	x9, x9, x8
  80:	cmp	x9, #0x3
  84:	b.hi	a0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0xa0>  // b.pmore
  88:	add	x2, x8, #0x4
  8c:	add	x1, x22, #0x10
  90:	mov	w3, #0x1                   	// #1
  94:	mov	x0, x22
  98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  9c:	ldr	w8, [x22, #8]
  a0:	ldr	x9, [x22]
  a4:	str	w23, [x9, x8]
  a8:	ldp	w8, w9, [x22, #8]
  ac:	add	x8, x8, #0x4
  b0:	cmp	x8, x9
  b4:	b.hi	198 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x198>  // b.pmore
  b8:	str	w8, [x22, #8]
  bc:	str	xzr, [x19, #8]
  c0:	cbz	x21, 174 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x174>
  c4:	lsl	x22, x21, #2
  c8:	ldr	w23, [x20]
  cc:	cmp	w23, #0x100
  d0:	b.cs	1b8 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x1b8>  // b.hs, b.nlast
  d4:	ldr	x21, [x19]
  d8:	ldp	w8, w9, [x21, #8]
  dc:	cmp	w8, w9
  e0:	b.cs	110 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x110>  // b.hs, b.nlast
  e4:	ldr	x9, [x21]
  e8:	strb	w23, [x9, w8, uxtw]
  ec:	ldp	w8, w9, [x21, #8]
  f0:	cmp	w8, w9
  f4:	b.cs	198 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x198>  // b.hs, b.nlast
  f8:	add	w8, w8, #0x1
  fc:	subs	x22, x22, #0x4
 100:	add	x20, x20, #0x4
 104:	str	w8, [x21, #8]
 108:	b.ne	c8 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0xc8>  // b.any
 10c:	b	174 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x174>
 110:	add	x1, x21, #0x10
 114:	mov	w3, #0x1                   	// #1
 118:	mov	x0, x21
 11c:	mov	x2, xzr
 120:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 124:	ldr	w8, [x21, #8]
 128:	b	e4 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0xe4>
 12c:	ldp	w8, w9, [x20, #8]
 130:	cmp	w8, w9
 134:	b.cs	158 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x158>  // b.hs, b.nlast
 138:	ldr	x9, [x20]
 13c:	strb	wzr, [x9, w8, uxtw]
 140:	ldp	w8, w9, [x20, #8]
 144:	cmp	w8, w9
 148:	b.cs	198 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x198>  // b.hs, b.nlast
 14c:	add	w8, w8, #0x1
 150:	str	w8, [x20, #8]
 154:	b	174 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x174>
 158:	add	x1, x20, #0x10
 15c:	mov	w3, #0x1                   	// #1
 160:	mov	x0, x20
 164:	mov	x2, xzr
 168:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 16c:	ldr	w8, [x20, #8]
 170:	b	138 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x138>
 174:	ldr	x20, [x19]
 178:	ldrb	w8, [x20, #8]
 17c:	tst	w8, #0x3
 180:	b.ne	12c <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x12c>  // b.any
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldr	x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 19c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1a0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x43                  	// #67
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1bc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1c0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x18a                 	// #394
 1d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb:

0000000000000000 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x2
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	tbz	w3, #0, 68 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x68>
  24:	cmp	w20, #0x20
  28:	b.cs	34 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x34>  // b.hs, b.nlast
  2c:	mov	w1, w20
  30:	b	5c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x5c>
  34:	mov	w22, w20
  38:	mov	w1, #0x20                  	// #32
  3c:	bfxil	w1, w22, #0, #5
  40:	mov	w2, #0x6                   	// #6
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
  4c:	lsr	w1, w22, #5
  50:	cmp	w22, #0x3ff
  54:	mov	w22, w1
  58:	b.hi	38 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x38>  // b.pmore
  5c:	mov	w2, #0x6                   	// #6
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
  68:	ldr	w8, [x19, #8]
  6c:	cbz	w8, c0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0xc0>
  70:	ldr	x22, [x19]
  74:	ldr	w23, [x19, #12]
  78:	ldp	w8, w9, [x22, #8]
  7c:	sub	x9, x9, x8
  80:	cmp	x9, #0x3
  84:	b.hi	a0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0xa0>  // b.pmore
  88:	add	x2, x8, #0x4
  8c:	add	x1, x22, #0x10
  90:	mov	w3, #0x1                   	// #1
  94:	mov	x0, x22
  98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  9c:	ldr	w8, [x22, #8]
  a0:	ldr	x9, [x22]
  a4:	str	w23, [x9, x8]
  a8:	ldp	w8, w9, [x22, #8]
  ac:	add	x8, x8, #0x4
  b0:	cmp	x8, x9
  b4:	b.hi	18c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x18c>  // b.pmore
  b8:	str	w8, [x22, #8]
  bc:	str	xzr, [x19, #8]
  c0:	cbz	x20, 168 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x168>
  c4:	ldr	x22, [x19]
  c8:	ldrb	w23, [x21]
  cc:	ldp	w8, w9, [x22, #8]
  d0:	cmp	w8, w9
  d4:	b.cs	104 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x104>  // b.hs, b.nlast
  d8:	ldr	x9, [x22]
  dc:	strb	w23, [x9, w8, uxtw]
  e0:	ldp	w8, w9, [x22, #8]
  e4:	cmp	w8, w9
  e8:	b.cs	18c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x18c>  // b.hs, b.nlast
  ec:	add	w8, w8, #0x1
  f0:	subs	x20, x20, #0x1
  f4:	add	x21, x21, #0x1
  f8:	str	w8, [x22, #8]
  fc:	b.ne	c4 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0xc4>  // b.any
 100:	b	168 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x168>
 104:	add	x1, x22, #0x10
 108:	mov	w3, #0x1                   	// #1
 10c:	mov	x0, x22
 110:	mov	x2, xzr
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	ldr	w8, [x22, #8]
 11c:	b	d8 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0xd8>
 120:	ldp	w8, w9, [x20, #8]
 124:	cmp	w8, w9
 128:	b.cs	14c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x14c>  // b.hs, b.nlast
 12c:	ldr	x9, [x20]
 130:	strb	wzr, [x9, w8, uxtw]
 134:	ldp	w8, w9, [x20, #8]
 138:	cmp	w8, w9
 13c:	b.cs	18c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x18c>  // b.hs, b.nlast
 140:	add	w8, w8, #0x1
 144:	str	w8, [x20, #8]
 148:	b	168 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x168>
 14c:	add	x1, x20, #0x10
 150:	mov	w3, #0x1                   	// #1
 154:	mov	x0, x20
 158:	mov	x2, xzr
 15c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 160:	ldr	w8, [x20, #8]
 164:	b	12c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x12c>
 168:	ldr	x20, [x19]
 16c:	ldrb	w8, [x20, #8]
 170:	tst	w8, #0x3
 174:	b.ne	120 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x120>  // b.any
 178:	ldp	x20, x19, [sp, #48]
 17c:	ldp	x22, x21, [sp, #32]
 180:	ldr	x23, [sp, #16]
 184:	ldp	x29, x30, [sp], #64
 188:	ret
 18c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
 190:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
 194:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x43                  	// #67
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  ec:	cbz	w19, 190 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x190>
  f0:	mov	w8, wzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 108:	add	w8, w22, #0x1
 10c:	cmp	w8, w19
 110:	b.eq	190 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x190>  // b.none
 114:	ldr	x9, [x21, #8]
 118:	mov	w22, w8
 11c:	cmp	x9, x22
 120:	b.ls	1a4 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x1a4>  // b.plast
 124:	ldr	x8, [x21]
 128:	ldr	x24, [x8, x22, lsl #3]
 12c:	lsr	x8, x24, #32
 130:	mov	w23, w24
 134:	cbnz	x8, 168 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x168>
 138:	cmp	w23, #0x20
 13c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 140:	mov	w1, #0x20                  	// #32
 144:	bfxil	w1, w23, #0, #5
 148:	mov	w2, #0x6                   	// #6
 14c:	mov	x0, x20
 150:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 154:	lsr	w1, w23, #5
 158:	cmp	w23, #0x400
 15c:	mov	w23, w1
 160:	b.cs	140 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x140>  // b.hs, b.nlast
 164:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xfc>
 168:	mov	w1, #0x20                  	// #32
 16c:	bfxil	w1, w23, #0, #5
 170:	mov	w2, #0x6                   	// #6
 174:	mov	x0, x20
 178:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 17c:	lsr	x23, x24, #5
 180:	cmp	x24, #0x3ff
 184:	mov	x24, x23
 188:	b.hi	168 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x168>  // b.pmore
 18c:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xf8>
 190:	ldp	x20, x19, [sp, #48]
 194:	ldp	x22, x21, [sp, #32]
 198:	ldp	x24, x23, [sp, #16]
 19c:	ldp	x29, x30, [sp], #64
 1a0:	ret
 1a4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 1a8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 1ac:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0xfa                  	// #250
 1c0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE:

0000000000000000 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	stur	x5, [x29, #-8]
  24:	ldp	x8, x10, [x0, #24]
  28:	sub	w9, w1, #0x4
  2c:	sub	x10, x10, x8
  30:	cmp	x9, x10, asr #4
  34:	b.cs	440 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x440>  // b.hs, b.nlast
  38:	mov	x23, x2
  3c:	lsl	x9, x9, #4
  40:	ldr	w2, [x0, #16]
  44:	ldr	x25, [x8, x9]
  48:	mov	x24, x6
  4c:	mov	x21, x4
  50:	mov	x19, x3
  54:	mov	x22, x0
  58:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  5c:	ldr	w26, [x25, #8]
  60:	tst	x24, #0xff00000000
  64:	b.eq	9c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x9c>  // b.none
  68:	cbz	w26, 4a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4a0>
  6c:	ldr	x1, [x25]
  70:	ldrb	w8, [x1, #8]
  74:	tbnz	w8, #0, 2b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2b4>
  78:	ubfx	w8, w8, #1, #3
  7c:	cmp	w8, #0x5
  80:	b.eq	4c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4c0>  // b.none
  84:	cmp	w8, #0x3
  88:	b.eq	4c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4c0>  // b.none
  8c:	mov	x0, x22
  90:	mov	w2, w24
  94:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  98:	b	2c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2c0>
  9c:	mov	w27, wzr
  a0:	cmp	w27, w26
  a4:	b.eq	2cc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2cc>  // b.none
  a8:	ldur	x8, [x29, #-8]
  ac:	mov	w28, wzr
  b0:	mov	x20, x21
  b4:	str	x21, [sp, #16]
  b8:	and	x9, x8, #0xffffffff
  bc:	lsr	x8, x8, #32
  c0:	stp	x9, x8, [sp]
  c4:	b	f0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf0>
  c8:	mov	w8, w28
  cc:	cmp	x19, x8
  d0:	b.ls	380 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x380>  // b.plast
  d4:	ldr	x2, [x23, x8, lsl #3]
  d8:	mov	x0, x22
  dc:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  e0:	add	w28, w28, #0x1
  e4:	add	w27, w27, #0x1
  e8:	cmp	w27, w26
  ec:	b.eq	2d4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2d4>  // b.none
  f0:	ldr	w8, [x25, #8]
  f4:	cmp	w8, w27
  f8:	b.ls	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.plast
  fc:	ldr	x9, [x25]
 100:	add	x1, x9, w27, uxtw #4
 104:	ldrb	w10, [x1, #8]
 108:	tbnz	w10, #0, 1c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1c0>
 10c:	ubfx	w10, w10, #1, #3
 110:	cmp	w10, #0x5
 114:	b.eq	1e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1e0>  // b.none
 118:	cmp	w10, #0x3
 11c:	b.ne	c8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc8>  // b.any
 120:	add	w10, w27, #0x2
 124:	cmp	w10, w26
 128:	b.ne	3a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3a0>  // b.any
 12c:	add	w27, w27, #0x1
 130:	cmp	w8, w27
 134:	b.ls	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.plast
 138:	add	x24, x9, w27, uxtw #4
 13c:	cbz	x20, 234 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x234>
 140:	cmp	x19, w28, uxtw
 144:	b.ne	3c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3c0>  // b.any
 148:	ldur	x8, [x29, #-8]
 14c:	cmp	w8, #0x20
 150:	mov	w1, w8
 154:	b.cc	184 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x184>  // b.lo, b.ul, b.last
 158:	ldur	x8, [x29, #-8]
 15c:	mov	w21, w8
 160:	mov	w1, #0x20                  	// #32
 164:	bfxil	w1, w21, #0, #5
 168:	mov	w2, #0x6                   	// #6
 16c:	mov	x0, x22
 170:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 174:	lsr	w1, w21, #5
 178:	cmp	w21, #0x3ff
 17c:	mov	w21, w1
 180:	b.hi	160 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x160>  // b.pmore
 184:	mov	w2, #0x6                   	// #6
 188:	mov	x0, x22
 18c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 190:	ldur	x8, [x29, #-8]
 194:	cbz	w8, 1b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1b4>
 198:	ldr	x21, [sp]
 19c:	ldrb	w2, [x20], #1
 1a0:	mov	x0, x22
 1a4:	mov	x1, x24
 1a8:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 1ac:	subs	x21, x21, #0x1
 1b0:	b.ne	19c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x19c>  // b.any
 1b4:	ldr	x21, [sp, #16]
 1b8:	mov	x20, xzr
 1bc:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 1c0:	mov	w8, w28
 1c4:	cmp	x19, x8
 1c8:	b.ls	340 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x340>  // b.plast
 1cc:	ldr	x8, [x23, x8, lsl #3]
 1d0:	ldr	x9, [x1]
 1d4:	cmp	x9, x8
 1d8:	b.eq	e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe0>  // b.none
 1dc:	b	360 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x360>
 1e0:	mov	w8, w28
 1e4:	cbz	x20, 21c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x21c>
 1e8:	cmp	x19, x8
 1ec:	b.ne	3e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3e0>  // b.any
 1f0:	cmp	x20, x21
 1f4:	b.ne	400 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x400>  // b.any
 1f8:	ldr	x8, [sp, #8]
 1fc:	cbnz	x8, 420 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x420>
 200:	ldur	x2, [x29, #-8]
 204:	mov	w3, #0x1                   	// #1
 208:	mov	x0, x22
 20c:	mov	x1, x21
 210:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 214:	mov	x20, xzr
 218:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 21c:	sub	x2, x19, x8
 220:	add	x1, x23, x8, lsl #3
 224:	mov	w3, #0x1                   	// #1
 228:	mov	x0, x22
 22c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 230:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 234:	sub	w20, w19, w28
 238:	cmp	w20, #0x20
 23c:	b.cs	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.hs, b.nlast
 240:	mov	w1, w20
 244:	b	26c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x26c>
 248:	mov	w1, #0x20                  	// #32
 24c:	bfxil	w1, w20, #0, #5
 250:	mov	w2, #0x6                   	// #6
 254:	mov	x0, x22
 258:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 25c:	lsr	w1, w20, #5
 260:	cmp	w20, #0x3ff
 264:	mov	w20, w1
 268:	b.hi	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.pmore
 26c:	mov	w2, #0x6                   	// #6
 270:	mov	x0, x22
 274:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 278:	cmp	w28, w19
 27c:	b.eq	2a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2a8>  // b.none
 280:	mov	w20, w28
 284:	cmp	x19, x20
 288:	b.ls	320 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x320>  // b.plast
 28c:	ldr	x2, [x23, x20, lsl #3]
 290:	mov	x0, x22
 294:	mov	x1, x24
 298:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 29c:	add	w28, w20, #0x1
 2a0:	cmp	w19, w28
 2a4:	b.ne	280 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x280>  // b.any
 2a8:	mov	x20, xzr
 2ac:	mov	w28, w19
 2b0:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 2b4:	ldr	x8, [x1]
 2b8:	cmp	x8, w24, uxtw
 2bc:	b.ne	4e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4e0>  // b.any
 2c0:	mov	w27, #0x1                   	// #1
 2c4:	cmp	w27, w26
 2c8:	b.ne	a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa8>  // b.any
 2cc:	mov	w28, wzr
 2d0:	mov	x20, x21
 2d4:	cmp	x19, w28, uxtw
 2d8:	b.ne	460 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x460>  // b.any
 2dc:	cbnz	x20, 480 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x480>
 2e0:	ldp	x20, x19, [sp, #112]
 2e4:	ldp	x22, x21, [sp, #96]
 2e8:	ldp	x24, x23, [sp, #80]
 2ec:	ldp	x26, x25, [sp, #64]
 2f0:	ldp	x28, x27, [sp, #48]
 2f4:	ldp	x29, x30, [sp, #32]
 2f8:	add	sp, sp, #0x80
 2fc:	ret
 300:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 304:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 308:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 30c:	add	x0, x0, #0x0
 310:	add	x1, x1, #0x0
 314:	add	x3, x3, #0x0
 318:	mov	w2, #0x99                  	// #153
 31c:	bl	0 <__assert_fail>
 320:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 324:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 328:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 32c:	add	x0, x0, #0x0
 330:	add	x1, x1, #0x0
 334:	add	x3, x3, #0x0
 338:	mov	w2, #0xfa                  	// #250
 33c:	bl	0 <__assert_fail>
 340:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 344:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 348:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 34c:	add	x0, x0, #0x0
 350:	add	x1, x1, #0x0
 354:	add	x3, x3, #0x0
 358:	mov	w2, #0x145                 	// #325
 35c:	bl	0 <__assert_fail>
 360:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 364:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 368:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 36c:	add	x0, x0, #0x0
 370:	add	x1, x1, #0x0
 374:	add	x3, x3, #0x0
 378:	mov	w2, #0x107                 	// #263
 37c:	bl	0 <__assert_fail>
 380:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 384:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 388:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 38c:	add	x0, x0, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x3, x3, #0x0
 398:	mov	w2, #0x173                 	// #371
 39c:	bl	0 <__assert_fail>
 3a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ac:	add	x0, x0, #0x0
 3b0:	add	x1, x1, #0x0
 3b4:	add	x3, x3, #0x0
 3b8:	mov	w2, #0x14a                 	// #330
 3bc:	bl	0 <__assert_fail>
 3c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3cc:	add	x0, x0, #0x0
 3d0:	add	x1, x1, #0x0
 3d4:	add	x3, x3, #0x0
 3d8:	mov	w2, #0x151                 	// #337
 3dc:	bl	0 <__assert_fail>
 3e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x169                 	// #361
 3fc:	bl	0 <__assert_fail>
 400:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 404:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 408:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 40c:	add	x0, x0, #0x0
 410:	add	x1, x1, #0x0
 414:	add	x3, x3, #0x0
 418:	mov	w2, #0x16b                 	// #363
 41c:	bl	0 <__assert_fail>
 420:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 424:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 428:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 42c:	add	x0, x0, #0x0
 430:	add	x1, x1, #0x0
 434:	add	x3, x3, #0x0
 438:	mov	w2, #0x16c                 	// #364
 43c:	bl	0 <__assert_fail>
 440:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 444:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 448:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 44c:	add	x0, x0, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x3, x3, #0x0
 458:	mov	w2, #0x12d                 	// #301
 45c:	bl	0 <__assert_fail>
 460:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 464:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 468:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 46c:	add	x0, x0, #0x0
 470:	add	x1, x1, #0x0
 474:	add	x3, x3, #0x0
 478:	mov	w2, #0x178                 	// #376
 47c:	bl	0 <__assert_fail>
 480:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 484:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 488:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 48c:	add	x0, x0, #0x0
 490:	add	x1, x1, #0x0
 494:	add	x3, x3, #0x0
 498:	mov	w2, #0x17a                 	// #378
 49c:	bl	0 <__assert_fail>
 4a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4ac:	add	x0, x0, #0x0
 4b0:	add	x1, x1, #0x0
 4b4:	add	x3, x3, #0x0
 4b8:	mov	w2, #0x134                 	// #308
 4bc:	bl	0 <__assert_fail>
 4c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4cc:	add	x0, x0, #0x0
 4d0:	add	x1, x1, #0x0
 4d4:	add	x3, x3, #0x0
 4d8:	mov	w2, #0x13c                 	// #316
 4dc:	bl	0 <__assert_fail>
 4e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4ec:	add	x0, x0, #0x0
 4f0:	add	x1, x1, #0x0
 4f4:	add	x3, x3, #0x0
 4f8:	mov	w2, #0x107                 	// #263
 4fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #8]
   c:	tbnz	w8, #0, fc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xfc>
  10:	ubfx	w8, w8, #1, #3
  14:	cmp	w8, #0x1
  18:	b.eq	68 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x68>  // b.none
  1c:	cmp	w8, #0x2
  20:	b.eq	50 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x50>  // b.none
  24:	cmp	w8, #0x4
  28:	b.ne	11c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x11c>  // b.any
  2c:	sub	w8, w2, #0x61
  30:	and	w8, w8, #0xff
  34:	cmp	w8, #0x19
  38:	and	w8, w2, #0xff
  3c:	b.hi	88 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x88>  // b.pmore
  40:	sub	w1, w8, #0x61
  44:	mov	w2, #0x6                   	// #6
  48:	ldp	x29, x30, [sp], #16
  4c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  50:	ldr	x8, [x1]
  54:	cbz	x8, 80 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x80>
  58:	mov	x1, x2
  5c:	mov	w2, w8
  60:	ldp	x29, x30, [sp], #16
  64:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  68:	ldr	x8, [x1]
  6c:	cbz	x8, 80 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x80>
  70:	mov	w1, w2
  74:	mov	w2, w8
  78:	ldp	x29, x30, [sp], #16
  7c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  80:	ldp	x29, x30, [sp], #16
  84:	ret
  88:	sub	w9, w2, #0x41
  8c:	and	w9, w9, #0xff
  90:	cmp	w9, #0x19
  94:	b.hi	a8 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xa8>  // b.pmore
  98:	sub	w1, w8, #0x27
  9c:	mov	w2, #0x6                   	// #6
  a0:	ldp	x29, x30, [sp], #16
  a4:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  a8:	sub	w9, w2, #0x30
  ac:	and	w9, w9, #0xff
  b0:	cmp	w9, #0x9
  b4:	b.hi	c8 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xc8>  // b.pmore
  b8:	add	w1, w8, #0x4
  bc:	mov	w2, #0x6                   	// #6
  c0:	ldp	x29, x30, [sp], #16
  c4:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  c8:	and	w8, w2, #0xff
  cc:	cmp	w8, #0x2e
  d0:	b.eq	ec <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xec>  // b.none
  d4:	cmp	w8, #0x5f
  d8:	b.ne	134 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x134>  // b.any
  dc:	mov	w1, #0x3f                  	// #63
  e0:	mov	w2, #0x6                   	// #6
  e4:	ldp	x29, x30, [sp], #16
  e8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  ec:	mov	w1, #0x3e                  	// #62
  f0:	mov	w2, #0x6                   	// #6
  f4:	ldp	x29, x30, [sp], #16
  f8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  fc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 100:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 104:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x10e                 	// #270
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 120:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	mov	w2, #0x112                 	// #274
 130:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 134:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 138:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	mov	w2, #0x99                  	// #153
 148:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb:

0000000000000000 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x2
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	tbz	w3, #0, 68 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x68>
  24:	cmp	w21, #0x20
  28:	b.cs	34 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x34>  // b.hs, b.nlast
  2c:	mov	w1, w21
  30:	b	5c <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x5c>
  34:	mov	w22, w21
  38:	mov	w1, #0x20                  	// #32
  3c:	bfxil	w1, w22, #0, #5
  40:	mov	w2, #0x6                   	// #6
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  4c:	lsr	w1, w22, #5
  50:	cmp	w22, #0x3ff
  54:	mov	w22, w1
  58:	b.hi	38 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x38>  // b.pmore
  5c:	mov	w2, #0x6                   	// #6
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  68:	ldr	w8, [x19, #8]
  6c:	cbz	w8, c0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0xc0>
  70:	ldr	x22, [x19]
  74:	ldr	w23, [x19, #12]
  78:	ldp	w8, w9, [x22, #8]
  7c:	sub	x9, x9, x8
  80:	cmp	x9, #0x3
  84:	b.hi	a0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0xa0>  // b.pmore
  88:	add	x2, x8, #0x4
  8c:	add	x1, x22, #0x10
  90:	mov	w3, #0x1                   	// #1
  94:	mov	x0, x22
  98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  9c:	ldr	w8, [x22, #8]
  a0:	ldr	x9, [x22]
  a4:	str	w23, [x9, x8]
  a8:	ldp	w8, w9, [x22, #8]
  ac:	add	x8, x8, #0x4
  b0:	cmp	x8, x9
  b4:	b.hi	198 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x198>  // b.pmore
  b8:	str	w8, [x22, #8]
  bc:	str	xzr, [x19, #8]
  c0:	cbz	x21, 174 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x174>
  c4:	lsl	x22, x21, #3
  c8:	ldr	x23, [x20]
  cc:	cmp	x23, #0x100
  d0:	b.cs	1b8 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x1b8>  // b.hs, b.nlast
  d4:	ldr	x21, [x19]
  d8:	ldp	w8, w9, [x21, #8]
  dc:	cmp	w8, w9
  e0:	b.cs	110 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x110>  // b.hs, b.nlast
  e4:	ldr	x9, [x21]
  e8:	strb	w23, [x9, w8, uxtw]
  ec:	ldp	w8, w9, [x21, #8]
  f0:	cmp	w8, w9
  f4:	b.cs	198 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x198>  // b.hs, b.nlast
  f8:	add	w8, w8, #0x1
  fc:	subs	x22, x22, #0x8
 100:	add	x20, x20, #0x8
 104:	str	w8, [x21, #8]
 108:	b.ne	c8 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0xc8>  // b.any
 10c:	b	174 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x174>
 110:	add	x1, x21, #0x10
 114:	mov	w3, #0x1                   	// #1
 118:	mov	x0, x21
 11c:	mov	x2, xzr
 120:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 124:	ldr	w8, [x21, #8]
 128:	b	e4 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0xe4>
 12c:	ldp	w8, w9, [x20, #8]
 130:	cmp	w8, w9
 134:	b.cs	158 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x158>  // b.hs, b.nlast
 138:	ldr	x9, [x20]
 13c:	strb	wzr, [x9, w8, uxtw]
 140:	ldp	w8, w9, [x20, #8]
 144:	cmp	w8, w9
 148:	b.cs	198 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x198>  // b.hs, b.nlast
 14c:	add	w8, w8, #0x1
 150:	str	w8, [x20, #8]
 154:	b	174 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x174>
 158:	add	x1, x20, #0x10
 15c:	mov	w3, #0x1                   	// #1
 160:	mov	x0, x20
 164:	mov	x2, xzr
 168:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 16c:	ldr	w8, [x20, #8]
 170:	b	138 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x138>
 174:	ldr	x20, [x19]
 178:	ldrb	w8, [x20, #8]
 17c:	tst	w8, #0x3
 180:	b.ne	12c <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x12c>  // b.any
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldr	x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 19c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1a0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x43                  	// #67
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1bc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1c0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x18a                 	// #394
 1d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv:

0000000000000000 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	w2, #0x2                   	// #2
  20:	mov	w1, wzr
  24:	mov	x19, x0
  28:	bl	0 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv>
  2c:	ldp	x22, x23, [x19, #72]
  30:	mov	w8, #0xffffffff            	// #-1
  34:	str	w8, [x19, #20]
  38:	cmp	x23, x22
  3c:	b.eq	130 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x130>  // b.none
  40:	adrp	x24, 0 <__pthread_key_create>
  44:	ldr	x24, [x24]
  48:	mov	x25, x22
  4c:	b	5c <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x5c>
  50:	add	x25, x25, #0x20
  54:	cmp	x25, x23
  58:	b.eq	12c <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x12c>  // b.none
  5c:	ldp	x20, x26, [x25, #8]
  60:	cmp	x20, x26
  64:	b.ne	7c <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x7c>  // b.any
  68:	cbnz	x20, 120 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x120>
  6c:	b	50 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x50>
  70:	add	x20, x20, #0x10
  74:	cmp	x20, x26
  78:	b.eq	118 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x118>  // b.none
  7c:	ldr	x21, [x20, #8]
  80:	cbz	x21, 70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>
  84:	add	x8, x21, #0x8
  88:	cbz	x24, a8 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0xa8>
  8c:	ldaxr	w9, [x8]
  90:	sub	w10, w9, #0x1
  94:	stlxr	w11, w10, [x8]
  98:	cbnz	w11, 8c <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x8c>
  9c:	cmp	w9, #0x1
  a0:	b.ne	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>  // b.any
  a4:	b	bc <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0xbc>
  a8:	ldr	w9, [x8]
  ac:	sub	w10, w9, #0x1
  b0:	str	w10, [x8]
  b4:	cmp	w9, #0x1
  b8:	b.ne	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>  // b.any
  bc:	mov	x27, x21
  c0:	ldr	x8, [x27], #12
  c4:	mov	x0, x21
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	cbz	x24, f0 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0xf0>
  d4:	ldaxr	w8, [x27]
  d8:	sub	w9, w8, #0x1
  dc:	stlxr	w10, w9, [x27]
  e0:	cbnz	w10, d4 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0xd4>
  e4:	cmp	w8, #0x1
  e8:	b.ne	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>  // b.any
  ec:	b	104 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x104>
  f0:	ldr	w8, [x27]
  f4:	sub	w9, w8, #0x1
  f8:	str	w9, [x27]
  fc:	cmp	w8, #0x1
 100:	b.ne	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>  // b.any
 104:	ldr	x8, [x21]
 108:	mov	x0, x21
 10c:	ldr	x8, [x8, #24]
 110:	blr	x8
 114:	b	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>
 118:	ldr	x20, [x25, #8]
 11c:	cbz	x20, 50 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x50>
 120:	mov	x0, x20
 124:	bl	0 <_ZdlPv>
 128:	b	50 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x50>
 12c:	str	x22, [x19, #80]
 130:	ldp	x20, x19, [sp, #80]
 134:	ldp	x22, x21, [sp, #64]
 138:	ldp	x24, x23, [sp, #48]
 13c:	ldp	x26, x25, [sp, #32]
 140:	ldr	x27, [sp, #16]
 144:	ldp	x29, x30, [sp], #96
 148:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE:

0000000000000000 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	ldr	w8, [x0, #20]
  18:	mov	x21, x0
  1c:	mov	w20, w1
  20:	mov	x19, x2
  24:	cmp	w8, w1
  28:	b.eq	70 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x70>  // b.none
  2c:	adrp	x9, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  30:	ldr	d0, [x9]
  34:	add	x8, sp, #0x8
  38:	add	x22, x8, #0x10
  3c:	add	x2, sp, #0x8
  40:	mov	w1, #0x1                   	// #1
  44:	mov	x0, x21
  48:	mov	w3, wzr
  4c:	str	x22, [sp, #8]
  50:	str	w20, [sp, #24]
  54:	str	d0, [sp, #16]
  58:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  5c:	str	w20, [x21, #20]
  60:	ldr	x0, [sp, #8]
  64:	cmp	x0, x22
  68:	b.eq	70 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x70>  // b.none
  6c:	bl	0 <free>
  70:	ldr	x1, [x19]
  74:	mov	x0, x21
  78:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  7c:	ldp	x8, x1, [x21, #72]
  80:	cmp	x8, x1
  84:	b.eq	98 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x98>  // b.none
  88:	mov	x22, x1
  8c:	ldr	w9, [x22, #-32]!
  90:	cmp	w9, w20
  94:	b.eq	fc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xfc>  // b.none
  98:	sub	x9, x1, x8
  9c:	lsr	x9, x9, #5
  a0:	cbz	w9, c8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xc8>
  a4:	mov	w10, wzr
  a8:	mov	w11, w10
  ac:	add	x22, x8, x11, lsl #5
  b0:	ldr	w11, [x22]
  b4:	cmp	w11, w20
  b8:	b.eq	fc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xfc>  // b.none
  bc:	add	w10, w10, #0x1
  c0:	cmp	w9, w10
  c4:	b.ne	a8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xa8>  // b.any
  c8:	ldr	x8, [x21, #88]
  cc:	cmp	x1, x8
  d0:	b.eq	ec <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xec>  // b.none
  d4:	movi	v0.2d, #0x0
  d8:	stp	q0, q0, [x1]
  dc:	ldr	x8, [x21, #80]
  e0:	add	x22, x8, #0x20
  e4:	str	x22, [x21, #80]
  e8:	b	f8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xf8>
  ec:	add	x0, x21, #0x48
  f0:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  f4:	ldr	x22, [x21, #80]
  f8:	str	w20, [x22, #-32]!
  fc:	ldp	x1, x8, [x22, #16]
 100:	add	x20, x22, #0x8
 104:	cmp	x1, x8
 108:	b.eq	12c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x12c>  // b.none
 10c:	str	xzr, [x1, #8]
 110:	ldr	q0, [x19]
 114:	add	x8, x1, #0x10
 118:	str	xzr, [x19, #8]
 11c:	str	q0, [x1]
 120:	str	xzr, [x19]
 124:	str	x8, [x22, #16]
 128:	b	13c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x13c>
 12c:	mov	x0, x20
 130:	mov	x2, x19
 134:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
 138:	ldr	x8, [x22, #16]
 13c:	ldr	x9, [x20]
 140:	ldp	x20, x19, [sp, #64]
 144:	ldp	x22, x21, [sp, #48]
 148:	ldp	x29, x30, [sp, #32]
 14c:	sub	x8, x8, x9
 150:	lsr	x8, x8, #4
 154:	add	w0, w8, #0x3
 158:	add	sp, sp, #0x50
 15c:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  ec:	cbz	w19, 158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x158>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x158>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	16c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x16c>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	w23, [x8, x22, lsl #2]
 128:	cmp	w23, #0x20
 12c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 130:	mov	w1, #0x20                  	// #32
 134:	bfxil	w1, w23, #0, #5
 138:	mov	w2, #0x6                   	// #6
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 144:	lsr	w1, w23, #5
 148:	cmp	w23, #0x3ff
 14c:	mov	w23, w1
 150:	b.hi	130 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x130>  // b.pmore
 154:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xfc>
 158:	ldp	x20, x19, [sp, #48]
 15c:	ldp	x22, x21, [sp, #32]
 160:	ldr	x23, [sp, #16]
 164:	ldp	x29, x30, [sp], #64
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 170:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 174:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x99                  	// #153
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x23, [x0]
  1c:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  20:	sub	x8, x23, x20
  24:	cmp	x8, x9
  28:	b.eq	140 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x140>  // b.none
  2c:	asr	x9, x8, #5
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #58
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  54:	cmp	w10, #0x0
  58:	csel	x24, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x19, x0
  64:	mov	x21, x1
  68:	asr	x25, x8, #5
  6c:	cbz	x24, 80 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x80>
  70:	lsl	x0, x24, #5
  74:	bl	0 <_Znwm>
  78:	mov	x22, x0
  7c:	b	84 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x84>
  80:	mov	x22, xzr
  84:	add	x8, x22, x25, lsl #5
  88:	movi	v0.2d, #0x0
  8c:	cmp	x20, x21
  90:	stp	q0, q0, [x8]
  94:	mov	x8, x22
  98:	b.eq	d4 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd4>  // b.none
  9c:	mov	x8, x22
  a0:	mov	x9, x20
  a4:	ldr	w10, [x9]
  a8:	str	w10, [x8]
  ac:	ldur	q0, [x9, #8]
  b0:	stur	q0, [x8, #8]
  b4:	ldr	x10, [x9, #24]
  b8:	str	x10, [x8, #24]
  bc:	stp	xzr, xzr, [x9, #8]
  c0:	str	xzr, [x9, #24]
  c4:	add	x9, x9, #0x20
  c8:	cmp	x9, x21
  cc:	add	x8, x8, #0x20
  d0:	b.ne	a4 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa4>  // b.any
  d4:	cmp	x23, x21
  d8:	add	x25, x8, #0x20
  dc:	b.eq	110 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x110>  // b.none
  e0:	ldr	w8, [x21]
  e4:	str	w8, [x25]
  e8:	ldur	q0, [x21, #8]
  ec:	stur	q0, [x25, #8]
  f0:	ldr	x8, [x21, #24]
  f4:	str	x8, [x25, #24]
  f8:	stp	xzr, xzr, [x21, #8]
  fc:	str	xzr, [x21, #24]
 100:	add	x21, x21, #0x20
 104:	cmp	x21, x23
 108:	add	x25, x25, #0x20
 10c:	b.ne	e0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.any
 110:	cbz	x20, 11c <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>
 114:	mov	x0, x20
 118:	bl	0 <_ZdlPv>
 11c:	add	x8, x22, x24, lsl #5
 120:	stp	x22, x25, [x19]
 124:	str	x8, [x19, #16]
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldr	x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
 140:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 144:	add	x0, x0, #0x0
 148:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  ec:	cbz	w19, 18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x18c>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x18c>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	1a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x1a0>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	x24, [x8, x22, lsl #3]
 128:	lsr	x8, x24, #32
 12c:	mov	w23, w24
 130:	cbnz	x8, 164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x164>
 134:	cmp	w23, #0x20
 138:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 13c:	mov	w1, #0x20                  	// #32
 140:	bfxil	w1, w23, #0, #5
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x20
 14c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 150:	lsr	w1, w23, #5
 154:	cmp	w23, #0x400
 158:	mov	w23, w1
 15c:	b.cs	13c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x13c>  // b.hs, b.nlast
 160:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xfc>
 164:	mov	w1, #0x20                  	// #32
 168:	bfxil	w1, w23, #0, #5
 16c:	mov	w2, #0x6                   	// #6
 170:	mov	x0, x20
 174:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 178:	lsr	x23, x24, #5
 17c:	cmp	x24, #0x3ff
 180:	mov	x24, x23
 184:	b.hi	164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x164>  // b.pmore
 188:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xf8>
 18c:	ldp	x20, x19, [sp, #48]
 190:	ldp	x22, x21, [sp, #32]
 194:	ldp	x24, x23, [sp, #16]
 198:	ldp	x29, x30, [sp], #64
 19c:	ret
 1a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 1a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 1a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0x99                  	// #153
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w11, [x0, #24]
   c:	cbz	w11, bc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xbc>
  10:	ldr	w8, [x1]
  14:	ldr	x9, [x0, #8]
  18:	ldr	x10, [x1, #8]
  1c:	cmn	w8, #0x1
  20:	b.ne	2c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x2c>  // b.any
  24:	cmn	x10, #0x4
  28:	b.eq	14c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x14c>  // b.none
  2c:	cmn	w8, #0x2
  30:	b.ne	3c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x3c>  // b.any
  34:	cmn	x10, #0x8
  38:	b.eq	14c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x14c>  // b.none
  3c:	mov	w13, #0x25                  	// #37
  40:	ubfx	x14, x10, #4, #28
  44:	mov	x15, #0xffffffffffffffff    	// #-1
  48:	sub	w12, w11, #0x1
  4c:	mul	w11, w8, w13
  50:	eor	w13, w14, w10, lsr #9
  54:	eor	x14, x15, x13, lsl #32
  58:	bfi	x13, x11, #32, #32
  5c:	add	x11, x13, x14
  60:	eor	x11, x11, x11, lsr #22
  64:	eor	x13, x15, x11, lsl #13
  68:	add	x11, x11, x13
  6c:	eor	x11, x11, x11, lsr #8
  70:	add	x11, x11, x11, lsl #3
  74:	eor	x11, x11, x11, lsr #15
  78:	eor	x13, x15, x11, lsl #27
  7c:	add	x11, x11, x13
  80:	lsr	x13, x11, #31
  84:	eor	w11, w13, w11
  88:	and	w14, w12, w11
  8c:	mov	w13, #0x18                  	// #24
  90:	umaddl	x11, w14, w13, x9
  94:	ldr	w16, [x11]
  98:	ldr	x18, [x11, #8]
  9c:	cmp	w8, w16
  a0:	b.ne	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xd0>  // b.any
  a4:	cmp	x10, x18
  a8:	b.ne	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xd0>  // b.any
  ac:	mov	w0, #0x1                   	// #1
  b0:	str	x11, [x2]
  b4:	ldp	x29, x30, [sp], #16
  b8:	ret
  bc:	mov	x11, xzr
  c0:	mov	w0, wzr
  c4:	str	x11, [x2]
  c8:	ldp	x29, x30, [sp], #16
  cc:	ret
  d0:	mov	x15, xzr
  d4:	mov	w1, #0x1                   	// #1
  d8:	mov	w17, #0xfffffffe            	// #-2
  dc:	mov	w0, #0x1                   	// #1
  e0:	cmn	w16, #0x1
  e4:	b.ne	f0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xf0>  // b.any
  e8:	cmn	x18, #0x4
  ec:	b.eq	134 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x134>  // b.none
  f0:	cmn	x18, #0x8
  f4:	add	w14, w14, w1
  f8:	ccmp	w16, w17, #0x0, eq  // eq = none
  fc:	and	w14, w14, w12
 100:	ccmp	x15, #0x0, #0x0, eq  // eq = none
 104:	csel	x15, x15, x11, ne  // ne = any
 108:	umaddl	x11, w14, w13, x9
 10c:	ldr	w16, [x11]
 110:	ldr	x18, [x11, #8]
 114:	add	w3, w1, #0x1
 118:	mov	w1, w3
 11c:	cmp	w8, w16
 120:	b.ne	e0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xe0>  // b.any
 124:	cmp	x10, x18
 128:	mov	w1, w3
 12c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb0>  // b.none
 130:	b	e0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xe0>
 134:	cmp	x15, #0x0
 138:	mov	w0, wzr
 13c:	csel	x11, x11, x15, eq  // eq = none
 140:	str	x11, [x2]
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 150:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 154:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x252                 	// #594
 168:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xec>

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xec>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x0
  18:	mov	w0, #0x48                  	// #72
  1c:	mov	x22, x3
  20:	mov	x21, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x8, [x22]
  2c:	add	x24, x0, #0x30
  30:	mov	x22, x0
  34:	str	x24, [x22, #32]!
  38:	mov	x9, x8
  3c:	ldr	x10, [x9], #16
  40:	mov	x19, x0
  44:	cmp	x10, x9
  48:	b.eq	5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x5c>  // b.none
  4c:	str	x10, [x22]
  50:	ldr	x10, [x8, #16]
  54:	str	x10, [x24]
  58:	b	64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x64>
  5c:	ldr	q0, [x10]
  60:	str	q0, [x24]
  64:	ldr	x10, [x8, #8]
  68:	mov	x0, x20
  6c:	mov	x1, x21
  70:	mov	x2, x22
  74:	str	x10, [x19, #40]
  78:	stp	x9, xzr, [x8]
  7c:	strb	wzr, [x8, #16]
  80:	str	wzr, [x19, #64]
  84:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  88:	mov	x23, x0
  8c:	cbz	x1, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xa0>
  90:	mov	x21, x1
  94:	cbz	x23, bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xbc>
  98:	mov	w0, #0x1                   	// #1
  9c:	b	10c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x10c>
  a0:	ldr	x0, [x22]
  a4:	cmp	x0, x24
  a8:	b.eq	b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb0>  // b.none
  ac:	bl	0 <_ZdlPv>
  b0:	mov	x0, x19
  b4:	bl	0 <_ZdlPv>
  b8:	b	12c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x12c>
  bc:	add	x8, x20, #0x8
  c0:	cmp	x8, x21
  c4:	b.eq	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x98>  // b.none
  c8:	ldr	x8, [x19, #40]
  cc:	ldr	x9, [x21, #40]
  d0:	subs	x23, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xec>
  dc:	ldr	x1, [x21, #32]
  e0:	ldr	x0, [x22]
  e4:	bl	0 <memcmp>
  e8:	cbnz	w0, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x108>
  ec:	mov	w0, #0x7fffffff            	// #2147483647
  f0:	cmp	x23, x0
  f4:	b.gt	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x108>
  f8:	mov	x8, #0xffffffff80000000    	// #-2147483648
  fc:	cmp	x23, x8
 100:	mov	w8, #0x80000000            	// #-2147483648
 104:	csel	w0, w23, w8, gt
 108:	lsr	w0, w0, #31
 10c:	add	x3, x20, #0x8
 110:	mov	x1, x19
 114:	mov	x2, x21
 118:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 11c:	ldr	x8, [x20, #40]
 120:	mov	x23, x19
 124:	add	x8, x8, #0x1
 128:	str	x8, [x20, #40]
 12c:	mov	x0, x23
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldp	x24, x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	add	x8, x0, #0x8
  1c:	mov	x21, x0
  20:	cmp	x8, x1
  24:	mov	x20, x2
  28:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xa0>  // b.none
  2c:	ldr	x23, [x20, #8]
  30:	ldr	x24, [x1, #40]
  34:	mov	x19, x1
  38:	subs	x25, x23, x24
  3c:	csel	x22, x24, x23, hi  // hi = pmore
  40:	cbz	x22, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x60>
  44:	ldr	x1, [x19, #32]
  48:	ldr	x0, [x20]
  4c:	mov	x2, x22
  50:	bl	0 <memcmp>
  54:	cbz	w0, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x60>
  58:	tbz	w0, #31, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x80>
  5c:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x120>
  60:	mov	w8, #0x7fffffff            	// #2147483647
  64:	cmp	x25, x8
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x80>
  6c:	mov	x8, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x25, x8
  74:	mov	w8, #0x80000000            	// #-2147483648
  78:	csel	w0, w25, w8, gt
  7c:	tbnz	w0, #31, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x120>
  80:	cbz	x22, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xf4>
  84:	ldr	x1, [x20]
  88:	ldr	x0, [x19, #32]
  8c:	mov	x2, x22
  90:	bl	0 <memcmp>
  94:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xf4>
  98:	tbz	w0, #31, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x118>
  9c:	b	190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x190>
  a0:	ldr	x8, [x21, #40]
  a4:	cbz	x8, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
  a8:	ldr	x22, [x21, #32]
  ac:	ldr	x9, [x20, #8]
  b0:	ldr	x8, [x22, #40]
  b4:	subs	x19, x8, x9
  b8:	csel	x2, x9, x8, hi  // hi = pmore
  bc:	cbz	x2, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xd0>
  c0:	ldr	x1, [x20]
  c4:	ldr	x0, [x22, #32]
  c8:	bl	0 <memcmp>
  cc:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xec>
  d0:	mov	w8, #0x7fffffff            	// #2147483647
  d4:	cmp	x19, x8
  d8:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
  dc:	mov	x8, #0xffffffff80000000    	// #-2147483648
  e0:	cmp	x19, x8
  e4:	mov	w8, #0x80000000            	// #-2147483648
  e8:	csel	w0, w19, w8, gt
  ec:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
  f0:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x21c>
  f4:	sub	x8, x24, x23
  f8:	mov	w9, #0x7fffffff            	// #2147483647
  fc:	cmp	x8, x9
 100:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x118>
 104:	mov	x9, #0xffffffff80000000    	// #-2147483648
 108:	cmp	x8, x9
 10c:	mov	w9, #0x80000000            	// #-2147483648
 110:	csel	w0, w8, w9, gt
 114:	tbnz	w0, #31, 190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x190>
 118:	mov	x22, xzr
 11c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>
 120:	ldr	x22, [x21, #24]
 124:	cmp	x22, x19
 128:	b.eq	224 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x224>  // b.none
 12c:	mov	x0, x19
 130:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 134:	ldr	x8, [x0, #40]
 138:	mov	x22, x0
 13c:	subs	x24, x8, x23
 140:	csel	x2, x23, x8, hi  // hi = pmore
 144:	cbz	x2, 158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x158>
 148:	ldr	x1, [x20]
 14c:	ldr	x0, [x22, #32]
 150:	bl	0 <memcmp>
 154:	cbnz	w0, 174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x174>
 158:	mov	w8, #0x7fffffff            	// #2147483647
 15c:	cmp	x24, x8
 160:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
 164:	mov	x8, #0xffffffff80000000    	// #-2147483648
 168:	cmp	x24, x8
 16c:	mov	w8, #0x80000000            	// #-2147483648
 170:	csel	w0, w24, w8, gt
 174:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
 178:	ldr	x8, [x22, #24]
 17c:	cmp	x8, #0x0
 180:	csel	x8, xzr, x19, eq  // eq = none
 184:	csel	x22, x22, x19, eq  // eq = none
 188:	mov	x19, x8
 18c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>
 190:	ldr	x22, [x21, #32]
 194:	cmp	x22, x19
 198:	b.eq	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x21c>  // b.none
 19c:	mov	x0, x19
 1a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 1a4:	ldr	x8, [x0, #40]
 1a8:	mov	x22, x0
 1ac:	subs	x24, x23, x8
 1b0:	csel	x2, x8, x23, hi  // hi = pmore
 1b4:	cbz	x2, 1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1c8>
 1b8:	ldr	x1, [x22, #32]
 1bc:	ldr	x0, [x20]
 1c0:	bl	0 <memcmp>
 1c4:	cbnz	w0, 1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e4>
 1c8:	mov	w8, #0x7fffffff            	// #2147483647
 1cc:	cmp	x24, x8
 1d0:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
 1d4:	mov	x8, #0xffffffff80000000    	// #-2147483648
 1d8:	cmp	x24, x8
 1dc:	mov	w8, #0x80000000            	// #-2147483648
 1e0:	csel	w0, w24, w8, gt
 1e4:	tbnz	w0, #31, 22c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x22c>
 1e8:	mov	x0, x21
 1ec:	mov	x1, x20
 1f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
 1f4:	mov	x19, x0
 1f8:	mov	x22, x1
 1fc:	mov	x0, x19
 200:	mov	x1, x22
 204:	ldp	x20, x19, [sp, #64]
 208:	ldp	x22, x21, [sp, #48]
 20c:	ldp	x24, x23, [sp, #32]
 210:	ldr	x25, [sp, #16]
 214:	ldp	x29, x30, [sp], #80
 218:	ret
 21c:	mov	x19, xzr
 220:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>
 224:	mov	x19, x22
 228:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>
 22c:	ldr	x8, [x19, #24]
 230:	cmp	x8, #0x0
 234:	csel	x8, xzr, x22, eq  // eq = none
 238:	csel	x22, x19, x22, eq  // eq = none
 23c:	mov	x19, x8
 240:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xac>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbz	w8, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xc8>
  9c:	ldr	x8, [x21, #24]
  a0:	cmp	x8, x19
  a4:	b.ne	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xbc>  // b.any
  a8:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x11c>
  ac:	add	x19, x21, #0x8
  b0:	ldr	x8, [x21, #24]
  b4:	cmp	x8, x19
  b8:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x11c>  // b.none
  bc:	mov	x0, x19
  c0:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  c4:	mov	x22, x0
  c8:	ldr	x8, [x22, #40]
  cc:	ldr	x9, [x20, #8]
  d0:	subs	x21, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf4>
  dc:	ldr	x1, [x20]
  e0:	ldr	x0, [x22, #32]
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf4>
  ec:	tbz	w0, #31, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x114>
  f0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x11c>
  f4:	mov	w8, #0x7fffffff            	// #2147483647
  f8:	cmp	x21, x8
  fc:	b.gt	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x114>
 100:	mov	x8, #0xffffffff80000000    	// #-2147483648
 104:	cmp	x21, x8
 108:	mov	w8, #0x80000000            	// #-2147483648
 10c:	csel	w0, w21, w8, gt
 110:	tbnz	w0, #31, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x11c>
 114:	mov	x19, xzr
 118:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x120>
 11c:	mov	x22, xzr
 120:	mov	x0, x22
 124:	mov	x1, x19
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldp	x26, x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x21, x3
  24:	mov	x22, x1
  28:	bl	0 <_Znwm>
  2c:	ldr	x8, [x21]
  30:	add	x25, x0, #0x30
  34:	mov	x21, x0
  38:	str	x25, [x21, #32]!
  3c:	ldp	x23, x24, [x8]
  40:	mov	x19, x0
  44:	cbnz	x23, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x4c>
  48:	cbnz	x24, 188 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x188>
  4c:	cmp	x24, #0x10
  50:	str	x24, [x29, #24]
  54:	b.cc	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x7c>  // b.lo, b.ul, b.last
  58:	add	x1, x29, #0x18
  5c:	mov	x0, x21
  60:	mov	x2, xzr
  64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  68:	ldr	x8, [x29, #24]
  6c:	str	x0, [x21]
  70:	str	x8, [x25]
  74:	cbnz	x24, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x84>
  78:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xa4>
  7c:	mov	x0, x25
  80:	cbz	x24, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xa4>
  84:	cmp	x24, #0x1
  88:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x98>  // b.any
  8c:	ldrb	w8, [x23]
  90:	strb	w8, [x0]
  94:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xa4>
  98:	mov	x1, x23
  9c:	mov	x2, x24
  a0:	bl	0 <memcpy>
  a4:	ldr	x8, [x29, #24]
  a8:	ldr	x9, [x19, #32]
  ac:	mov	x0, x20
  b0:	mov	x1, x22
  b4:	mov	x2, x21
  b8:	str	x8, [x19, #40]
  bc:	strb	wzr, [x9, x8]
  c0:	str	wzr, [x19, #64]
  c4:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  c8:	mov	x23, x0
  cc:	cbz	x1, e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xe0>
  d0:	mov	x22, x1
  d4:	cbz	x23, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xfc>
  d8:	mov	w0, #0x1                   	// #1
  dc:	b	14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x14c>
  e0:	ldr	x0, [x21]
  e4:	cmp	x0, x25
  e8:	b.eq	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf0>  // b.none
  ec:	bl	0 <_ZdlPv>
  f0:	mov	x0, x19
  f4:	bl	0 <_ZdlPv>
  f8:	b	16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x16c>
  fc:	add	x8, x20, #0x8
 100:	cmp	x8, x22
 104:	b.eq	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xd8>  // b.none
 108:	ldr	x8, [x19, #40]
 10c:	ldr	x9, [x22, #40]
 110:	subs	x23, x8, x9
 114:	csel	x2, x9, x8, hi  // hi = pmore
 118:	cbz	x2, 12c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x12c>
 11c:	ldr	x1, [x22, #32]
 120:	ldr	x0, [x21]
 124:	bl	0 <memcmp>
 128:	cbnz	w0, 148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x148>
 12c:	mov	w0, #0x7fffffff            	// #2147483647
 130:	cmp	x23, x0
 134:	b.gt	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x148>
 138:	mov	x8, #0xffffffff80000000    	// #-2147483648
 13c:	cmp	x23, x8
 140:	mov	w8, #0x80000000            	// #-2147483648
 144:	csel	w0, w23, w8, gt
 148:	lsr	w0, w0, #31
 14c:	add	x3, x20, #0x8
 150:	mov	x1, x19
 154:	mov	x2, x22
 158:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 15c:	ldr	x8, [x20, #40]
 160:	mov	x23, x19
 164:	add	x8, x8, #0x1
 168:	str	x8, [x20, #40]
 16c:	mov	x0, x23
 170:	ldp	x20, x19, [sp, #64]
 174:	ldp	x22, x21, [sp, #48]
 178:	ldp	x24, x23, [sp, #32]
 17c:	ldr	x25, [sp, #16]
 180:	ldp	x29, x30, [sp], #80
 184:	ret
 188:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
 18c:	add	x0, x0, #0x0
 190:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x58>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x58>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
  3c:	ldr	x0, [x20, #32]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x30
  48:	cmp	x0, x8
  4c:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x20>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x20>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN4llvm7APFloatD2Ev:

0000000000000000 <_ZN4llvm7APFloatD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x0
  14:	ldr	x21, [x20, #8]!
  18:	mov	x19, x0
  1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  20:	cmp	x0, x21
  24:	b.eq	3c <_ZN4llvm7APFloatD2Ev+0x3c>  // b.none
  28:	mov	x0, x20
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldp	x22, x21, [sp, #16]
  34:	ldp	x29, x30, [sp], #48
  38:	b	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
  3c:	ldr	x8, [x19, #16]
  40:	cbz	x8, 70 <_ZN4llvm7APFloatD2Ev+0x70>
  44:	mov	x20, x8
  48:	ldr	x9, [x20, #-8]!
  4c:	cbz	x9, 68 <_ZN4llvm7APFloatD2Ev+0x68>
  50:	lsl	x21, x9, #5
  54:	sub	x22, x8, #0x20
  58:	add	x0, x22, x21
  5c:	bl	0 <_ZN4llvm7APFloatD2Ev>
  60:	subs	x21, x21, #0x20
  64:	b.ne	58 <_ZN4llvm7APFloatD2Ev+0x58>  // b.any
  68:	mov	x0, x20
  6c:	bl	0 <_ZdaPv>
  70:	str	xzr, [x19, #16]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

Disassembly of section .text._ZNK4llvm5APInt12getSExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getSExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w19, [x0, #8]
  10:	cmp	w19, #0x40
  14:	b.hi	38 <_ZNK4llvm5APInt12getSExtValueEv+0x38>  // b.pmore
  18:	cbz	w19, a8 <_ZNK4llvm5APInt12getSExtValueEv+0xa8>
  1c:	ldr	x8, [x0]
  20:	neg	x9, x19
  24:	lsl	x8, x8, x9
  28:	asr	x0, x8, x9
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldr	x20, [x0]
  3c:	sub	w8, w19, #0x1
  40:	lsr	w9, w8, #6
  44:	ldr	x9, [x20, w9, uxtw #3]
  48:	lsr	x8, x9, x8
  4c:	tbz	w8, #0, 74 <_ZNK4llvm5APInt12getSExtValueEv+0x74>
  50:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
  54:	sub	w8, w19, w0
  58:	add	w8, w8, #0x1
  5c:	cmp	w8, #0x41
  60:	b.cs	88 <_ZNK4llvm5APInt12getSExtValueEv+0x88>  // b.hs, b.nlast
  64:	ldr	x0, [x20]
  68:	ldp	x20, x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  78:	sub	w8, w19, w0
  7c:	add	w8, w8, #0x1
  80:	cmp	w8, #0x41
  84:	b.cc	64 <_ZNK4llvm5APInt12getSExtValueEv+0x64>  // b.lo, b.ul, b.last
  88:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  8c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  90:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x663                 	// #1635
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  ac:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  b0:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x307                 	// #775
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_:

0000000000000000 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 190 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x190>
   c:	ldrb	w8, [x0, #16]
  10:	subs	w9, w8, #0x18
  14:	b.cs	24 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x24>  // b.hs, b.nlast
  18:	cmp	w8, #0x5
  1c:	b.ne	b4 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xb4>  // b.any
  20:	ldrh	w9, [x0, #18]
  24:	cmp	w9, #0x39
  28:	mov	x1, xzr
  2c:	b.hi	b8 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xb8>  // b.pmore
  30:	mov	x11, #0x5000                	// #20480
  34:	mov	w10, #0x1                   	// #1
  38:	movk	x11, #0x125, lsl #16
  3c:	lsl	x10, x10, x9
  40:	movk	x11, #0x40, lsl #48
  44:	tst	x10, x11
  48:	b.eq	c4 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xc4>  // b.none
  4c:	subs	w9, w8, #0x18
  50:	b.cs	60 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x60>  // b.hs, b.nlast
  54:	cmp	w8, #0x5
  58:	b.ne	170 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x170>  // b.any
  5c:	ldrh	w9, [x0, #18]
  60:	cmp	w9, #0x39
  64:	b.hi	170 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x170>  // b.pmore
  68:	mov	x10, #0x5000                	// #20480
  6c:	mov	w8, #0x1                   	// #1
  70:	movk	x10, #0x125, lsl #16
  74:	lsl	x8, x8, x9
  78:	movk	x10, #0x40, lsl #48
  7c:	tst	x8, x10
  80:	b.ne	160 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x160>  // b.any
  84:	mov	w8, #0x1                   	// #1
  88:	lsl	x8, x8, x9
  8c:	tst	x8, #0x380000000000000
  90:	b.eq	170 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x170>  // b.none
  94:	ldr	x8, [x0]
  98:	cbz	x8, f0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xf0>
  9c:	ldrb	w9, [x8, #8]
  a0:	cmp	w9, #0xe
  a4:	b.ne	140 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x140>  // b.any
  a8:	ldr	x8, [x8, #24]
  ac:	cbnz	x8, 9c <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x9c>
  b0:	b	f0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xf0>
  b4:	mov	x1, xzr
  b8:	mov	x0, x1
  bc:	ldp	x29, x30, [sp], #16
  c0:	ret
  c4:	mov	w10, #0x1                   	// #1
  c8:	lsl	x9, x10, x9
  cc:	tst	x9, #0x380000000000000
  d0:	b.eq	b8 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xb8>  // b.none
  d4:	ldr	x9, [x0]
  d8:	cbz	x9, f0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xf0>
  dc:	ldrb	w10, [x9, #8]
  e0:	cmp	w10, #0xe
  e4:	b.ne	110 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x110>  // b.any
  e8:	ldr	x9, [x9, #24]
  ec:	cbnz	x9, dc <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xdc>
  f0:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  f4:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  f8:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x69                  	// #105
 10c:	bl	0 <__assert_fail>
 110:	cmp	w10, #0x10
 114:	b.ne	124 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x124>  // b.any
 118:	ldr	x9, [x9, #16]
 11c:	ldr	x9, [x9]
 120:	ldrb	w10, [x9, #8]
 124:	sub	w9, w10, #0x1
 128:	cmp	w9, #0x5
 12c:	b.ls	4c <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x4c>  // b.plast
 130:	mov	x1, xzr
 134:	mov	x0, x1
 138:	ldp	x29, x30, [sp], #16
 13c:	ret
 140:	cmp	w9, #0x10
 144:	b.ne	154 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x154>  // b.any
 148:	ldr	x8, [x8, #16]
 14c:	ldr	x8, [x8]
 150:	ldrb	w9, [x8, #8]
 154:	sub	w8, w9, #0x1
 158:	cmp	w8, #0x6
 15c:	b.cs	170 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x170>  // b.hs, b.nlast
 160:	mov	x1, x0
 164:	mov	x0, x1
 168:	ldp	x29, x30, [sp], #16
 16c:	ret
 170:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 174:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 178:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x108                 	// #264
 18c:	bl	0 <__assert_fail>
 190:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 194:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 198:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x69                  	// #105
 1ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x2
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x54>
  20:	mov	w9, w21
  24:	mov	x0, x19
  28:	mov	x2, x20
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldp	x22, x21, [sp, #16]
  34:	mov	w8, w3
  38:	orr	x6, x9, #0x100000000
  3c:	mov	w3, #0x2                   	// #2
  40:	mov	w1, w8
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  54:	ldr	w2, [x19, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  64:	cmp	w21, #0x20
  68:	b.cs	74 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x74>  // b.hs, b.nlast
  6c:	mov	w1, w21
  70:	b	98 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x98>
  74:	mov	w1, #0x20                  	// #32
  78:	bfxil	w1, w21, #0, #5
  7c:	mov	w2, #0x6                   	// #6
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  88:	lsr	w1, w21, #5
  8c:	cmp	w21, #0x3ff
  90:	mov	w21, w1
  94:	b.hi	74 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x74>  // b.pmore
  98:	mov	w2, #0x6                   	// #6
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  a4:	mov	w1, #0x2                   	// #2
  a8:	mov	w2, #0x6                   	// #6
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  b4:	ldr	x21, [x20]
  b8:	lsr	x8, x21, #32
  bc:	cbnz	x8, f0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0xf0>
  c0:	cmp	w21, #0x20
  c4:	b.cc	118 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x118>  // b.lo, b.ul, b.last
  c8:	mov	w1, #0x20                  	// #32
  cc:	bfxil	w1, w21, #0, #5
  d0:	mov	w2, #0x6                   	// #6
  d4:	mov	x0, x19
  d8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  dc:	lsr	w1, w21, #5
  e0:	cmp	w21, #0x400
  e4:	mov	w21, w1
  e8:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0xc8>  // b.hs, b.nlast
  ec:	b	11c <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x11c>
  f0:	mov	x22, x21
  f4:	mov	w1, #0x20                  	// #32
  f8:	bfxil	w1, w21, #0, #5
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
 108:	lsr	x21, x22, #5
 10c:	cmp	x22, #0x3ff
 110:	mov	x22, x21
 114:	b.hi	f4 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0xf4>  // b.pmore
 118:	mov	w1, w21
 11c:	mov	w2, #0x6                   	// #6
 120:	mov	x0, x19
 124:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
 128:	ldr	x20, [x20, #8]
 12c:	lsr	x8, x20, #32
 130:	cbnz	x8, 180 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x180>
 134:	cmp	w20, #0x20
 138:	b.cs	144 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x144>  // b.hs, b.nlast
 13c:	mov	w1, w20
 140:	b	168 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x168>
 144:	mov	w1, #0x20                  	// #32
 148:	bfxil	w1, w20, #0, #5
 14c:	mov	w2, #0x6                   	// #6
 150:	mov	x0, x19
 154:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
 158:	lsr	w1, w20, #5
 15c:	cmp	w20, #0x3ff
 160:	mov	w20, w1
 164:	b.hi	144 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x144>  // b.pmore
 168:	mov	w2, #0x6                   	// #6
 16c:	mov	x0, x19
 170:	ldp	x20, x19, [sp, #32]
 174:	ldp	x22, x21, [sp, #16]
 178:	ldp	x29, x30, [sp], #48
 17c:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
 180:	mov	x21, x20
 184:	mov	w1, #0x20                  	// #32
 188:	bfxil	w1, w20, #0, #5
 18c:	mov	w2, #0x6                   	// #6
 190:	mov	x0, x19
 194:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
 198:	lsr	x20, x21, #5
 19c:	cmp	x21, #0x3ff
 1a0:	mov	x21, x20
 1a4:	b.hi	184 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x184>  // b.pmore
 1a8:	mov	w2, #0x6                   	// #6
 1ac:	mov	x0, x19
 1b0:	mov	w1, w20
 1b4:	ldp	x20, x19, [sp, #32]
 1b8:	ldp	x22, x21, [sp, #16]
 1bc:	ldp	x29, x30, [sp], #48
 1c0:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter15BackpatchWord64Emm:

0000000000000000 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ubfx	x9, x1, #3, #32
  10:	ldr	w10, [x8, #8]
  14:	cmp	x9, x10
  18:	b.cs	160 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x160>  // b.hs, b.nlast
  1c:	ldr	x8, [x8]
  20:	ands	x10, x1, #0x7
  24:	add	x8, x8, x9
  28:	ldr	w9, [x8]
  2c:	b.eq	58 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x58>  // b.none
  30:	ldr	w11, [x8, #4]
  34:	neg	w13, w10
  38:	mov	w14, #0xffffffff            	// #-1
  3c:	lsr	w12, w9, w10
  40:	lsl	w14, w14, w13
  44:	bic	w12, w12, w14
  48:	lsl	w11, w11, w13
  4c:	orr	w11, w11, w12
  50:	cbz	w11, 60 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x60>
  54:	b	134 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x134>
  58:	mov	w11, w9
  5c:	cbnz	w11, 134 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x134>
  60:	cbz	x10, 98 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x98>
  64:	ldr	w11, [x8, #4]
  68:	mov	w12, #0xffffffff            	// #-1
  6c:	neg	w14, w10
  70:	lsl	w13, w2, w10
  74:	lsl	w10, w12, w10
  78:	lsr	w12, w2, w14
  7c:	bic	w9, w9, w10
  80:	bic	w12, w12, w10
  84:	and	w10, w11, w10
  88:	orr	w9, w9, w13
  8c:	orr	w10, w10, w12
  90:	stp	w9, w10, [x8]
  94:	b	9c <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x9c>
  98:	str	w2, [x8]
  9c:	ldr	x8, [x0]
  a0:	add	x10, x1, #0x20
  a4:	ubfx	x9, x10, #3, #32
  a8:	ldr	w11, [x8, #8]
  ac:	cmp	x9, x11
  b0:	b.cs	160 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x160>  // b.hs, b.nlast
  b4:	ldr	x8, [x8]
  b8:	ands	x10, x10, #0x7
  bc:	add	x8, x8, x9
  c0:	ldr	w9, [x8]
  c4:	b.eq	12c <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x12c>  // b.none
  c8:	ldr	w11, [x8, #4]
  cc:	neg	w13, w10
  d0:	mov	w14, #0xffffffff            	// #-1
  d4:	lsr	w12, w9, w10
  d8:	lsl	w14, w14, w13
  dc:	bic	w12, w12, w14
  e0:	lsl	w11, w11, w13
  e4:	orr	w11, w11, w12
  e8:	cbnz	w11, 134 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x134>
  ec:	lsr	x11, x2, #32
  f0:	cbz	x10, 154 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0x154>
  f4:	ldr	w12, [x8, #4]
  f8:	mov	w13, #0xffffffff            	// #-1
  fc:	neg	w15, w10
 100:	lsl	w14, w11, w10
 104:	lsl	w10, w13, w10
 108:	lsr	w11, w11, w15
 10c:	bic	w9, w9, w10
 110:	bic	w11, w11, w10
 114:	and	w10, w12, w10
 118:	orr	w9, w9, w14
 11c:	orr	w10, w10, w11
 120:	stp	w9, w10, [x8]
 124:	ldp	x29, x30, [sp], #16
 128:	ret
 12c:	mov	w11, w9
 130:	cbz	w11, ec <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm+0xec>
 134:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm>
 138:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm>
 13c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x6d                  	// #109
 150:	bl	0 <__assert_fail>
 154:	str	w11, [x8]
 158:	ldp	x29, x30, [sp], #16
 15c:	ret
 160:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm>
 164:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm>
 168:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter15BackpatchWord64Emm>
 16c:	add	x0, x0, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x95                  	// #149
 17c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x2
  18:	ldr	x2, [x2]
  1c:	ldr	x8, [x20, #8]
  20:	mov	w21, w1
  24:	mov	x19, x0
  28:	sub	x22, x8, x2
  2c:	cbz	w3, 64 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x64>
  30:	asr	x8, x22, #3
  34:	mov	w9, w21
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x9, #0x100000000
  4c:	mov	w1, w3
  50:	mov	x3, x8
  54:	mov	x4, xzr
  58:	mov	x5, xzr
  5c:	ldp	x29, x30, [sp], #64
  60:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  64:	ldr	w2, [x19, #16]
  68:	mov	w1, #0x3                   	// #3
  6c:	mov	x0, x19
  70:	lsr	x23, x22, #3
  74:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  78:	cmp	w21, #0x20
  7c:	b.cs	88 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x88>  // b.hs, b.nlast
  80:	mov	w1, w21
  84:	b	ac <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0xac>
  88:	mov	w1, #0x20                  	// #32
  8c:	bfxil	w1, w21, #0, #5
  90:	mov	w2, #0x6                   	// #6
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  9c:	lsr	w1, w21, #5
  a0:	cmp	w21, #0x3ff
  a4:	mov	w21, w1
  a8:	b.hi	88 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x88>  // b.pmore
  ac:	mov	w2, #0x6                   	// #6
  b0:	mov	x0, x19
  b4:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  b8:	cmp	w23, #0x20
  bc:	mov	w1, w23
  c0:	b.cc	ec <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0xec>  // b.lo, b.ul, b.last
  c4:	mov	w21, w23
  c8:	mov	w1, #0x20                  	// #32
  cc:	bfxil	w1, w21, #0, #5
  d0:	mov	w2, #0x6                   	// #6
  d4:	mov	x0, x19
  d8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  dc:	lsr	w1, w21, #5
  e0:	cmp	w21, #0x3ff
  e4:	mov	w21, w1
  e8:	b.hi	c8 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0xc8>  // b.pmore
  ec:	mov	w2, #0x6                   	// #6
  f0:	mov	x0, x19
  f4:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  f8:	cbz	w23, 190 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x190>
  fc:	mov	x21, xzr
 100:	ubfx	x22, x22, #3, #32
 104:	b	124 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x124>
 108:	mov	w1, w23
 10c:	mov	w2, #0x6                   	// #6
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
 118:	add	x21, x21, #0x1
 11c:	cmp	x21, x22
 120:	b.eq	190 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x190>  // b.none
 124:	ldr	x8, [x20]
 128:	ldr	x24, [x8, x21, lsl #3]
 12c:	lsr	x8, x24, #32
 130:	mov	w23, w24
 134:	cbnz	x8, 168 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x168>
 138:	cmp	w23, #0x20
 13c:	b.cc	108 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x108>  // b.lo, b.ul, b.last
 140:	mov	w1, #0x20                  	// #32
 144:	bfxil	w1, w23, #0, #5
 148:	mov	w2, #0x6                   	// #6
 14c:	mov	x0, x19
 150:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
 154:	lsr	w1, w23, #5
 158:	cmp	w23, #0x400
 15c:	mov	w23, w1
 160:	b.cs	140 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x140>  // b.hs, b.nlast
 164:	b	10c <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x10c>
 168:	mov	w1, #0x20                  	// #32
 16c:	bfxil	w1, w23, #0, #5
 170:	mov	w2, #0x6                   	// #6
 174:	mov	x0, x19
 178:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
 17c:	lsr	x23, x24, #5
 180:	cmp	x24, #0x3ff
 184:	mov	x24, x23
 188:	b.hi	168 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x168>  // b.pmore
 18c:	b	108 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x108>
 190:	ldp	x20, x19, [sp, #48]
 194:	ldp	x22, x21, [sp, #32]
 198:	ldp	x24, x23, [sp, #16]
 19c:	ldp	x29, x30, [sp], #64
 1a0:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriterD2Ev:

0000000000000000 <_ZN4llvm15BitstreamWriterD2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w8, [x0, #8]
  18:	cbnz	w8, 164 <_ZN4llvm15BitstreamWriterD2Ev+0x164>
  1c:	mov	x20, x0
  20:	ldr	x8, [x20, #48]!
  24:	mov	x19, x0
  28:	ldr	x9, [x20, #8]
  2c:	cmp	x8, x9
  30:	b.ne	144 <_ZN4llvm15BitstreamWriterD2Ev+0x144>  // b.any
  34:	ldp	x8, x9, [x19, #24]
  38:	cmp	x8, x9
  3c:	b.ne	144 <_ZN4llvm15BitstreamWriterD2Ev+0x144>  // b.any
  40:	add	x0, x19, #0x48
  44:	bl	0 <_ZN4llvm15BitstreamWriterD2Ev>
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm15BitstreamWriterD2Ev>
  50:	ldp	x20, x22, [x19, #24]
  54:	cmp	x20, x22
  58:	b.eq	114 <_ZN4llvm15BitstreamWriterD2Ev+0x114>  // b.none
  5c:	adrp	x23, 0 <__pthread_key_create>
  60:	ldr	x23, [x23]
  64:	b	74 <_ZN4llvm15BitstreamWriterD2Ev+0x74>
  68:	add	x20, x20, #0x10
  6c:	cmp	x20, x22
  70:	b.eq	110 <_ZN4llvm15BitstreamWriterD2Ev+0x110>  // b.none
  74:	ldr	x21, [x20, #8]
  78:	cbz	x21, 68 <_ZN4llvm15BitstreamWriterD2Ev+0x68>
  7c:	add	x8, x21, #0x8
  80:	cbz	x23, a0 <_ZN4llvm15BitstreamWriterD2Ev+0xa0>
  84:	ldaxr	w9, [x8]
  88:	sub	w10, w9, #0x1
  8c:	stlxr	w11, w10, [x8]
  90:	cbnz	w11, 84 <_ZN4llvm15BitstreamWriterD2Ev+0x84>
  94:	cmp	w9, #0x1
  98:	b.ne	68 <_ZN4llvm15BitstreamWriterD2Ev+0x68>  // b.any
  9c:	b	b4 <_ZN4llvm15BitstreamWriterD2Ev+0xb4>
  a0:	ldr	w9, [x8]
  a4:	sub	w10, w9, #0x1
  a8:	str	w10, [x8]
  ac:	cmp	w9, #0x1
  b0:	b.ne	68 <_ZN4llvm15BitstreamWriterD2Ev+0x68>  // b.any
  b4:	mov	x24, x21
  b8:	ldr	x8, [x24], #12
  bc:	mov	x0, x21
  c0:	ldr	x8, [x8, #16]
  c4:	blr	x8
  c8:	cbz	x23, e8 <_ZN4llvm15BitstreamWriterD2Ev+0xe8>
  cc:	ldaxr	w8, [x24]
  d0:	sub	w9, w8, #0x1
  d4:	stlxr	w10, w9, [x24]
  d8:	cbnz	w10, cc <_ZN4llvm15BitstreamWriterD2Ev+0xcc>
  dc:	cmp	w8, #0x1
  e0:	b.ne	68 <_ZN4llvm15BitstreamWriterD2Ev+0x68>  // b.any
  e4:	b	fc <_ZN4llvm15BitstreamWriterD2Ev+0xfc>
  e8:	ldr	w8, [x24]
  ec:	sub	w9, w8, #0x1
  f0:	str	w9, [x24]
  f4:	cmp	w8, #0x1
  f8:	b.ne	68 <_ZN4llvm15BitstreamWriterD2Ev+0x68>  // b.any
  fc:	ldr	x8, [x21]
 100:	mov	x0, x21
 104:	ldr	x8, [x8, #24]
 108:	blr	x8
 10c:	b	68 <_ZN4llvm15BitstreamWriterD2Ev+0x68>
 110:	ldr	x20, [x19, #24]
 114:	cbz	x20, 130 <_ZN4llvm15BitstreamWriterD2Ev+0x130>
 118:	mov	x0, x20
 11c:	ldp	x20, x19, [sp, #48]
 120:	ldp	x22, x21, [sp, #32]
 124:	ldp	x24, x23, [sp, #16]
 128:	ldp	x29, x30, [sp], #64
 12c:	b	0 <_ZdlPv>
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldp	x24, x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 148:	adrp	x1, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 14c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x59                  	// #89
 160:	bl	0 <__assert_fail>
 164:	adrp	x0, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 168:	adrp	x1, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 16c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 170:	add	x0, x0, #0x0
 174:	add	x1, x1, #0x0
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0x58                  	// #88
 180:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x19, x23, [x0]
  1c:	cmp	x19, x23
  20:	b.eq	114 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x114>  // b.none
  24:	adrp	x24, 0 <__pthread_key_create>
  28:	ldr	x24, [x24]
  2c:	mov	x20, x0
  30:	b	40 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x40>
  34:	add	x19, x19, #0x20
  38:	cmp	x19, x23
  3c:	b.eq	110 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x110>  // b.none
  40:	ldp	x21, x25, [x19, #8]
  44:	cmp	x21, x25
  48:	b.ne	60 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x60>  // b.any
  4c:	cbnz	x21, 104 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x104>
  50:	b	34 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x34>
  54:	add	x21, x21, #0x10
  58:	cmp	x21, x25
  5c:	b.eq	fc <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0xfc>  // b.none
  60:	ldr	x22, [x21, #8]
  64:	cbz	x22, 54 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x54>
  68:	add	x8, x22, #0x8
  6c:	cbz	x24, 8c <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x8c>
  70:	ldaxr	w9, [x8]
  74:	sub	w10, w9, #0x1
  78:	stlxr	w11, w10, [x8]
  7c:	cbnz	w11, 70 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x70>
  80:	cmp	w9, #0x1
  84:	b.ne	54 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x54>  // b.any
  88:	b	a0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0xa0>
  8c:	ldr	w9, [x8]
  90:	sub	w10, w9, #0x1
  94:	str	w10, [x8]
  98:	cmp	w9, #0x1
  9c:	b.ne	54 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x54>  // b.any
  a0:	mov	x26, x22
  a4:	ldr	x8, [x26], #12
  a8:	mov	x0, x22
  ac:	ldr	x8, [x8, #16]
  b0:	blr	x8
  b4:	cbz	x24, d4 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0xd4>
  b8:	ldaxr	w8, [x26]
  bc:	sub	w9, w8, #0x1
  c0:	stlxr	w10, w9, [x26]
  c4:	cbnz	w10, b8 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0xb8>
  c8:	cmp	w8, #0x1
  cc:	b.ne	54 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x54>  // b.any
  d0:	b	e8 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0xe8>
  d4:	ldr	w8, [x26]
  d8:	sub	w9, w8, #0x1
  dc:	str	w9, [x26]
  e0:	cmp	w8, #0x1
  e4:	b.ne	54 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x54>  // b.any
  e8:	ldr	x8, [x22]
  ec:	mov	x0, x22
  f0:	ldr	x8, [x8, #24]
  f4:	blr	x8
  f8:	b	54 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x54>
  fc:	ldr	x21, [x19, #8]
 100:	cbz	x21, 34 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x34>
 104:	mov	x0, x21
 108:	bl	0 <_ZdlPv>
 10c:	b	34 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x34>
 110:	ldr	x19, [x20]
 114:	cbz	x19, 134 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EED2Ev+0x134>
 118:	mov	x0, x19
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldp	x29, x30, [sp], #80
 130:	b	0 <_ZdlPv>
 134:	ldp	x20, x19, [sp, #64]
 138:	ldp	x22, x21, [sp, #48]
 13c:	ldp	x24, x23, [sp, #32]
 140:	ldp	x26, x25, [sp, #16]
 144:	ldp	x29, x30, [sp], #80
 148:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x19, x23, [x0]
  1c:	cmp	x19, x23
  20:	b.eq	114 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x114>  // b.none
  24:	adrp	x24, 0 <__pthread_key_create>
  28:	ldr	x24, [x24]
  2c:	mov	x20, x0
  30:	b	40 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x40>
  34:	add	x19, x19, #0x28
  38:	cmp	x19, x23
  3c:	b.eq	110 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x110>  // b.none
  40:	ldp	x21, x25, [x19, #16]
  44:	cmp	x21, x25
  48:	b.ne	60 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x60>  // b.any
  4c:	cbnz	x21, 104 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x104>
  50:	b	34 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x34>
  54:	add	x21, x21, #0x10
  58:	cmp	x21, x25
  5c:	b.eq	fc <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0xfc>  // b.none
  60:	ldr	x22, [x21, #8]
  64:	cbz	x22, 54 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x54>
  68:	add	x8, x22, #0x8
  6c:	cbz	x24, 8c <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x8c>
  70:	ldaxr	w9, [x8]
  74:	sub	w10, w9, #0x1
  78:	stlxr	w11, w10, [x8]
  7c:	cbnz	w11, 70 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x70>
  80:	cmp	w9, #0x1
  84:	b.ne	54 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x54>  // b.any
  88:	b	a0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0xa0>
  8c:	ldr	w9, [x8]
  90:	sub	w10, w9, #0x1
  94:	str	w10, [x8]
  98:	cmp	w9, #0x1
  9c:	b.ne	54 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x54>  // b.any
  a0:	mov	x26, x22
  a4:	ldr	x8, [x26], #12
  a8:	mov	x0, x22
  ac:	ldr	x8, [x8, #16]
  b0:	blr	x8
  b4:	cbz	x24, d4 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0xd4>
  b8:	ldaxr	w8, [x26]
  bc:	sub	w9, w8, #0x1
  c0:	stlxr	w10, w9, [x26]
  c4:	cbnz	w10, b8 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0xb8>
  c8:	cmp	w8, #0x1
  cc:	b.ne	54 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x54>  // b.any
  d0:	b	e8 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0xe8>
  d4:	ldr	w8, [x26]
  d8:	sub	w9, w8, #0x1
  dc:	str	w9, [x26]
  e0:	cmp	w8, #0x1
  e4:	b.ne	54 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x54>  // b.any
  e8:	ldr	x8, [x22]
  ec:	mov	x0, x22
  f0:	ldr	x8, [x8, #24]
  f4:	blr	x8
  f8:	b	54 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x54>
  fc:	ldr	x21, [x19, #16]
 100:	cbz	x21, 34 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x34>
 104:	mov	x0, x21
 108:	bl	0 <_ZdlPv>
 10c:	b	34 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x34>
 110:	ldr	x19, [x20]
 114:	cbz	x19, 134 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EED2Ev+0x134>
 118:	mov	x0, x19
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldp	x29, x30, [sp], #80
 130:	b	0 <_ZdlPv>
 134:	ldp	x20, x19, [sp, #64]
 138:	ldp	x22, x21, [sp, #48]
 13c:	ldp	x24, x23, [sp, #32]
 140:	ldp	x26, x25, [sp, #16]
 144:	ldp	x29, x30, [sp], #80
 148:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  ec:	cbz	w19, 18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x18c>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x18c>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	1a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x1a0>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	x24, [x8, x22, lsl #3]
 128:	lsr	x8, x24, #32
 12c:	mov	w23, w24
 130:	cbnz	x8, 164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x164>
 134:	cmp	w23, #0x20
 138:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 13c:	mov	w1, #0x20                  	// #32
 140:	bfxil	w1, w23, #0, #5
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x20
 14c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 150:	lsr	w1, w23, #5
 154:	cmp	w23, #0x400
 158:	mov	w23, w1
 15c:	b.cs	13c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x13c>  // b.hs, b.nlast
 160:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xfc>
 164:	mov	w1, #0x20                  	// #32
 168:	bfxil	w1, w23, #0, #5
 16c:	mov	w2, #0x6                   	// #6
 170:	mov	x0, x20
 174:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 178:	lsr	x23, x24, #5
 17c:	cmp	x24, #0x3ff
 180:	mov	x24, x23
 184:	b.hi	164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x164>  // b.pmore
 188:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xf8>
 18c:	ldp	x20, x19, [sp, #48]
 190:	ldp	x22, x21, [sp, #32]
 194:	ldp	x24, x23, [sp, #16]
 198:	ldp	x29, x30, [sp], #64
 19c:	ret
 1a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 1a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 1a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0x99                  	// #153
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15DILocalVariable8getScopeEv:

0000000000000000 <_ZNK4llvm15DILocalVariable8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 74 <_ZNK4llvm15DILocalVariable8getScopeEv+0x74>
  10:	sub	x8, x0, x8, lsl #3
  14:	ldr	x0, [x8]
  18:	cbz	x0, 94 <_ZNK4llvm15DILocalVariable8getScopeEv+0x94>
  1c:	ldrb	w8, [x0]
  20:	sub	w9, w8, #0xb
  24:	cmp	w9, #0xb
  28:	ccmp	w8, #0x1f, #0x4, cs  // cs = hs, nlast
  2c:	b.ne	b4 <_ZNK4llvm15DILocalVariable8getScopeEv+0xb4>  // b.any
  30:	cmp	w9, #0xb
  34:	b.cs	4c <_ZNK4llvm15DILocalVariable8getScopeEv+0x4c>  // b.hs, b.nlast
  38:	sub	w8, w8, #0x11
  3c:	cmp	w8, #0x3
  40:	b.cs	d4 <_ZNK4llvm15DILocalVariable8getScopeEv+0xd4>  // b.hs, b.nlast
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	cmp	w8, #0x1f
  50:	b.eq	38 <_ZNK4llvm15DILocalVariable8getScopeEv+0x38>  // b.none
  54:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  58:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  5c:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x108                 	// #264
  70:	bl	0 <__assert_fail>
  74:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  78:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  7c:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x436                 	// #1078
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  98:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  9c:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x69                  	// #105
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  b8:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  bc:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x134                 	// #308
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  d8:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  dc:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x108                 	// #264
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  ec:	cbz	w19, 18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x18c>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x18c>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	1a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x1a0>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	x24, [x8, x22, lsl #3]
 128:	lsr	x8, x24, #32
 12c:	mov	w23, w24
 130:	cbnz	x8, 164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x164>
 134:	cmp	w23, #0x20
 138:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 13c:	mov	w1, #0x20                  	// #32
 140:	bfxil	w1, w23, #0, #5
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x20
 14c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 150:	lsr	w1, w23, #5
 154:	cmp	w23, #0x400
 158:	mov	w23, w1
 15c:	b.cs	13c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x13c>  // b.hs, b.nlast
 160:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xfc>
 164:	mov	w1, #0x20                  	// #32
 168:	bfxil	w1, w23, #0, #5
 16c:	mov	w2, #0x6                   	// #6
 170:	mov	x0, x20
 174:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 178:	lsr	x23, x24, #5
 17c:	cmp	x24, #0x3ff
 180:	mov	x24, x23
 184:	b.hi	164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x164>  // b.pmore
 188:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xf8>
 18c:	ldp	x20, x19, [sp, #48]
 190:	ldp	x22, x21, [sp, #32]
 194:	ldp	x24, x23, [sp, #16]
 198:	ldp	x29, x30, [sp], #64
 19c:	ret
 1a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 1a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 1a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0x99                  	// #153
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	174 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x174>  // b.any
  1c:	cbz	w9, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x10, x9, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x8, #0x10
  40:	add	x10, x8, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x8
  6c:	add	x8, x8, x9, lsl #4
  70:	mov	x11, #0xfffffffffffffff8    	// #-8
  74:	str	x11, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb8>  // b.none
  88:	cbz	w9, 9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x9c>
  8c:	mov	w8, wzr
  90:	sub	w9, w9, #0x1
  94:	mov	x10, #0xfffffffffffffff0    	// #-16
  98:	b	e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0xe8>
  9c:	ldr	x8, [x1]
  a0:	orr	x8, x8, #0x8
  a4:	cmn	x8, #0x8
  a8:	b.ne	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x170>  // b.any
  ac:	add	x1, x1, #0x10
  b0:	cmp	x2, x1
  b4:	b.ne	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x9c>  // b.any
  b8:	ldp	x29, x30, [sp], #16
  bc:	ret
  c0:	cmp	x15, #0x0
  c4:	csel	x12, x13, x15, eq  // eq = none
  c8:	str	x11, [x12]
  cc:	ldr	x11, [x1, #8]
  d0:	add	w8, w8, #0x1
  d4:	str	x11, [x12, #8]
  d8:	str	w8, [x0, #16]
  dc:	add	x1, x1, #0x10
  e0:	cmp	x1, x2
  e4:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb8>  // b.none
  e8:	ldr	x11, [x1]
  ec:	orr	x12, x11, #0x8
  f0:	cmn	x12, #0x8
  f4:	b.eq	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0xdc>  // b.none
  f8:	ldr	x12, [x0, #8]
  fc:	ubfx	x13, x11, #4, #28
 100:	eor	w13, w13, w11, lsr #9
 104:	and	w14, w13, w9
 108:	add	x13, x12, w14, uxtw #4
 10c:	ldr	x16, [x13]
 110:	cmp	x16, x11
 114:	b.eq	150 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x150>  // b.none
 118:	mov	x15, xzr
 11c:	mov	w17, #0x1                   	// #1
 120:	cmn	x16, #0x8
 124:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0xc0>  // b.none
 128:	cmp	x15, #0x0
 12c:	add	w14, w14, w17
 130:	ccmp	x16, x10, #0x0, eq  // eq = none
 134:	and	w14, w14, w9
 138:	csel	x15, x15, x13, ne  // ne = any
 13c:	add	x13, x12, w14, uxtw #4
 140:	ldr	x16, [x13]
 144:	add	w17, w17, #0x1
 148:	cmp	x16, x11
 14c:	b.ne	120 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x120>  // b.any
 150:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 15c:	add	x0, x0, #0x0
 160:	add	x1, x1, #0x0
 164:	add	x3, x3, #0x0
 168:	mov	w2, #0x17a                 	// #378
 16c:	bl	0 <__assert_fail>
 170:	brk	#0x1
 174:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 17c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 180:	add	x0, x0, #0x0
 184:	add	x1, x1, #0x0
 188:	add	x3, x3, #0x0
 18c:	mov	w2, #0x15c                 	// #348
 190:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  ec:	cbz	w19, 18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x18c>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x18c>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	1a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x1a0>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	x24, [x8, x22, lsl #3]
 128:	lsr	x8, x24, #32
 12c:	mov	w23, w24
 130:	cbnz	x8, 164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x164>
 134:	cmp	w23, #0x20
 138:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 13c:	mov	w1, #0x20                  	// #32
 140:	bfxil	w1, w23, #0, #5
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x20
 14c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 150:	lsr	w1, w23, #5
 154:	cmp	w23, #0x400
 158:	mov	w23, w1
 15c:	b.cs	13c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x13c>  // b.hs, b.nlast
 160:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xfc>
 164:	mov	w1, #0x20                  	// #32
 168:	bfxil	w1, w23, #0, #5
 16c:	mov	w2, #0x6                   	// #6
 170:	mov	x0, x20
 174:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 178:	lsr	x23, x24, #5
 17c:	cmp	x24, #0x3ff
 180:	mov	x24, x23
 184:	b.hi	164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x164>  // b.pmore
 188:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xf8>
 18c:	ldp	x20, x19, [sp, #48]
 190:	ldp	x22, x21, [sp, #32]
 194:	ldp	x24, x23, [sp, #16]
 198:	ldp	x29, x30, [sp], #64
 19c:	ret
 1a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 1a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 1a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0x99                  	// #153
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  ec:	cbz	w19, 158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x158>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x158>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	16c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x16c>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	w23, [x8, x22, lsl #2]
 128:	cmp	w23, #0x20
 12c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 130:	mov	w1, #0x20                  	// #32
 134:	bfxil	w1, w23, #0, #5
 138:	mov	w2, #0x6                   	// #6
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 144:	lsr	w1, w23, #5
 148:	cmp	w23, #0x3ff
 14c:	mov	w23, w1
 150:	b.hi	130 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x130>  // b.pmore
 154:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xfc>
 158:	ldp	x20, x19, [sp, #48]
 15c:	ldp	x22, x21, [sp, #32]
 160:	ldr	x23, [sp, #16]
 164:	ldp	x29, x30, [sp], #64
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 170:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 174:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x99                  	// #153
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10SwitchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	ubfx	w8, w9, #1, #27
  10:	cmp	w8, w1
  14:	b.ls	68 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x68>  // b.plast
  18:	mov	w8, #0x1                   	// #1
  1c:	bfi	w8, w1, #1, #31
  20:	and	x10, x9, #0xfffffff
  24:	cmp	w10, w8
  28:	b.ls	88 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x88>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x9, x10, x9
  38:	add	x9, x0, x9
  3c:	b	44 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x44>
  40:	ldur	x9, [x0, #-8]
  44:	mov	w10, #0x18                  	// #24
  48:	umull	x8, w8, w10
  4c:	ldr	x0, [x9, x8]
  50:	cbz	x0, a8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xa8>
  54:	ldrb	w8, [x0, #16]
  58:	cmp	w8, #0x12
  5c:	b.ne	c8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xc8>  // b.any
  60:	ldp	x29, x30, [sp], #16
  64:	ret
  68:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  6c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  70:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0xd7c                 	// #3452
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  8c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  90:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xdbe                 	// #3518
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  ac:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x69                  	// #105
  c4:	bl	0 <__assert_fail>
  c8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  cc:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x108                 	// #264
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0]
  10:	and	x8, x9, #0x6
  14:	cmp	x8, #0x4
  18:	and	x20, x9, #0xfffffffffffffff8
  1c:	b.eq	58 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x58>  // b.none
  20:	cmp	x8, #0x2
  24:	b.ne	88 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x88>  // b.any
  28:	cbz	x20, e4 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xe4>
  2c:	ldrb	w8, [x20, #16]
  30:	cmp	w8, #0x50
  34:	b.eq	98 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x98>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  3c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  40:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	bl	0 <__assert_fail>
  58:	cbz	x20, 104 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x104>
  5c:	ldrb	w8, [x20, #16]
  60:	cmp	w8, #0x23
  64:	b.eq	98 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x98>  // b.none
  68:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  6c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  70:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x108                 	// #264
  84:	bl	0 <__assert_fail>
  88:	cbz	x20, 124 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x124>
  8c:	ldrb	w8, [x20, #16]
  90:	cmp	w8, #0x1d
  94:	b.ne	144 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x144>  // b.any
  98:	ldr	w8, [x20, #20]
  9c:	tbnz	w8, #31, a8 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xa8>
  a0:	mov	x19, xzr
  a4:	b	bc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xbc>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b0:	ldr	w8, [x20, #20]
  b4:	mov	x19, x0
  b8:	tbnz	w8, #31, d4 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xd4>
  bc:	mov	x8, xzr
  c0:	sub	x8, x8, x19
  c4:	ldp	x20, x19, [sp, #16]
  c8:	lsr	x0, x8, #4
  cc:	ldp	x29, x30, [sp], #32
  d0:	ret
  d4:	mov	x0, x20
  d8:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  dc:	add	x8, x0, x1
  e0:	b	c0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xc0>
  e4:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  e8:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  ec:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x69                  	// #105
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 108:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 10c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x69                  	// #105
 120:	bl	0 <__assert_fail>
 124:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 128:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 12c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x69                  	// #105
 140:	bl	0 <__assert_fail>
 144:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 148:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 14c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x108                 	// #264
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj:

0000000000000000 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x10, [x0]
   c:	and	x9, x10, #0x6
  10:	cmp	x9, #0x4
  14:	and	x0, x10, #0xfffffffffffffff8
  18:	b.eq	54 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x54>  // b.none
  1c:	cmp	x9, #0x2
  20:	b.ne	84 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x84>  // b.any
  24:	cbz	x0, 9c <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x9c>
  28:	ldrb	w9, [x0, #16]
  2c:	cmp	w9, #0x50
  30:	b.eq	94 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x94>  // b.none
  34:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  38:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  3c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x108                 	// #264
  50:	bl	0 <__assert_fail>
  54:	cbz	x0, bc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xbc>
  58:	ldrb	w9, [x0, #16]
  5c:	cmp	w9, #0x23
  60:	b.eq	94 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x94>  // b.none
  64:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  68:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  6c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	cbz	x0, dc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xdc>
  88:	ldrb	w9, [x0, #16]
  8c:	cmp	w9, #0x1d
  90:	b.ne	fc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xfc>  // b.any
  94:	ldp	x29, x30, [sp], #16
  98:	b	0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  9c:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  a0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  a4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x69                  	// #105
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  c0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  c4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x69                  	// #105
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  e0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  e4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
 100:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
 104:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase18getOperandBundleAtEj:

0000000000000000 <_ZNK4llvm8CallBase18getOperandBundleAtEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #20]
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	mov	x20, x8
  20:	tbnz	w9, #31, 2c <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x2c>
  24:	mov	x22, xzr
  28:	b	40 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x40>
  2c:	mov	x0, x19
  30:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  34:	ldr	w8, [x19, #20]
  38:	mov	x22, x0
  3c:	tbnz	w8, #31, 9c <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x9c>
  40:	mov	x8, xzr
  44:	sub	x8, x8, x22
  48:	lsr	x8, x8, #4
  4c:	cmp	w8, w21
  50:	b.ls	b8 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0xb8>  // b.plast
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  5c:	ldr	w9, [x19, #20]
  60:	add	x8, x0, w21, uxtw #4
  64:	ldp	w11, w12, [x8, #8]
  68:	mov	w10, #0x18                  	// #24
  6c:	ldr	x8, [x8]
  70:	and	x9, x9, #0xfffffff
  74:	mneg	x9, x9, x10
  78:	add	x9, x19, x9
  7c:	sub	x12, x12, x11
  80:	madd	x9, x11, x10, x9
  84:	stp	x9, x12, [x20]
  88:	str	x8, [x20, #16]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x22, x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  a4:	add	x8, x0, x1
  a8:	sub	x8, x8, x22
  ac:	lsr	x8, x8, #4
  b0:	cmp	w8, w21
  b4:	b.hi	54 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x54>  // b.pmore
  b8:	adrp	x0, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  bc:	adrp	x1, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  c0:	adrp	x3, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x716                 	// #1814
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	sub	x8, x8, x20
  28:	lsr	x8, x8, #4
  2c:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
  30:	b	12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  3c:	ldr	w8, [x19, #20]
  40:	mov	x20, x0
  44:	tbnz	w8, #31, 114 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x114>
  48:	mov	x8, xzr
  4c:	sub	x8, x8, x20
  50:	lsr	x8, x8, #4
  54:	cbz	w8, 12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  58:	ldr	w8, [x19, #20]
  5c:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  60:	mov	x20, xzr
  64:	mov	x8, xzr
  68:	sub	x8, x8, x20
  6c:	lsr	x8, x8, #4
  70:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
  74:	b	158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 140 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x140>
  8c:	mov	x8, xzr
  90:	sub	x8, x8, x20
  94:	lsr	x8, x8, #4
  98:	cbz	w8, 158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  a4:	ldr	w8, [x19, #20]
  a8:	ldr	w21, [x0, #8]
  ac:	tbnz	w8, #31, c8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xc8>
  b0:	mov	x20, xzr
  b4:	mov	x8, xzr
  b8:	sub	x8, x8, x20
  bc:	lsr	x8, x8, #4
  c0:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
  c4:	b	190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d0:	ldr	w8, [x19, #20]
  d4:	mov	x20, x0
  d8:	tbnz	w8, #31, 178 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x178>
  dc:	mov	x8, xzr
  e0:	sub	x8, x8, x20
  e4:	lsr	x8, x8, #4
  e8:	cbz	w8, 190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  ec:	mov	x0, x19
  f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f4:	add	x8, x0, x1
  f8:	ldur	w8, [x8, #-4]
  fc:	subs	w0, w8, w21
 100:	b.cc	1b0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x1b0>  // b.lo, b.ul, b.last
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 11c:	add	x8, x0, x1
 120:	sub	x8, x8, x20
 124:	lsr	x8, x8, #4
 128:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
 12c:	mov	w0, wzr
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	mov	x0, x19
 144:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 148:	add	x8, x0, x1
 14c:	sub	x8, x8, x20
 150:	lsr	x8, x8, #4
 154:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
 158:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 15c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 160:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x6ed                 	// #1773
 174:	bl	0 <__assert_fail>
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 180:	add	x8, x0, x1
 184:	sub	x8, x8, x20
 188:	lsr	x8, x8, #4
 18c:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
 190:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 194:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 198:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x6f3                 	// #1779
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b4:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b8:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x710                 	// #1808
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x9, [x0]
  20:	ldr	w8, [x0, #8]
  24:	mov	x24, x3
  28:	mov	x19, x2
  2c:	sub	x11, x1, x9
  30:	add	x10, x9, x8, lsl #3
  34:	mov	x20, x0
  38:	cmp	x10, x1
  3c:	asr	x26, x11, #3
  40:	b.eq	f4 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xf4>  // b.none
  44:	cmp	x9, x1
  48:	b.hi	21c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x21c>  // b.pmore
  4c:	cmp	x10, x1
  50:	b.cc	23c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x23c>  // b.lo, b.ul, b.last
  54:	ldr	w10, [x20, #12]
  58:	sub	x22, x24, x19
  5c:	asr	x27, x22, #3
  60:	add	x2, x27, x8
  64:	cmp	x2, x10
  68:	b.ls	84 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x84>  // b.plast
  6c:	add	x1, x20, #0x10
  70:	mov	w3, #0x8                   	// #8
  74:	mov	x0, x20
  78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  7c:	ldr	x9, [x20]
  80:	ldr	w8, [x20, #8]
  84:	add	x21, x9, x26, lsl #3
  88:	add	x23, x9, x8, lsl #3
  8c:	sub	x25, x23, x21
  90:	asr	x28, x25, #3
  94:	cmp	x28, x27
  98:	b.cs	15c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x15c>  // b.hs, b.nlast
  9c:	ldr	w11, [x20, #12]
  a0:	add	x10, x27, x8
  a4:	cmp	x10, x11
  a8:	b.hi	1fc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1fc>  // b.pmore
  ac:	cmp	x26, x8
  b0:	str	w10, [x20, #8]
  b4:	b.eq	cc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xcc>  // b.none
  b8:	add	x8, x9, w10, uxtw #3
  bc:	sub	x0, x8, x28, lsl #3
  c0:	mov	x1, x21
  c4:	mov	x2, x25
  c8:	bl	0 <memcpy>
  cc:	cbz	x25, e8 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xe8>
  d0:	mov	x8, x21
  d4:	ldr	x9, [x19], #8
  d8:	subs	x28, x28, #0x1
  dc:	str	x9, [x8], #8
  e0:	b.ne	d4 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xd4>  // b.any
  e4:	sub	x22, x24, x19
  e8:	cbz	x22, 1dc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1dc>
  ec:	mov	x0, x23
  f0:	b	1d0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1d0>
  f4:	ldr	w9, [x20, #12]
  f8:	sub	x21, x24, x19
  fc:	asr	x22, x21, #3
 100:	sub	x9, x9, x8
 104:	cmp	x22, x9
 108:	b.ls	120 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x120>  // b.plast
 10c:	add	x2, x22, x8
 110:	add	x1, x20, #0x10
 114:	mov	w3, #0x8                   	// #8
 118:	mov	x0, x20
 11c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 120:	cbz	x21, 13c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x13c>
 124:	ldr	x8, [x20]
 128:	ldr	w9, [x20, #8]
 12c:	mov	x1, x19
 130:	mov	x2, x21
 134:	add	x0, x8, x9, lsl #3
 138:	bl	0 <memmove>
 13c:	ldp	w8, w9, [x20, #8]
 140:	add	x8, x22, x8
 144:	cmp	x8, x9
 148:	b.hi	1fc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1fc>  // b.pmore
 14c:	ldr	x9, [x20]
 150:	str	w8, [x20, #8]
 154:	add	x21, x9, x26, lsl #3
 158:	b	1dc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1dc>
 15c:	ldr	w9, [x20, #12]
 160:	sub	x9, x9, x8
 164:	cmp	x27, x9
 168:	b.ls	180 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x180>  // b.plast
 16c:	add	x2, x27, x8
 170:	add	x1, x20, #0x10
 174:	mov	w3, #0x8                   	// #8
 178:	mov	x0, x20
 17c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 180:	sub	x24, x23, x27, lsl #3
 184:	cbz	x22, 1a0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1a0>
 188:	ldr	x8, [x20]
 18c:	ldr	w9, [x20, #8]
 190:	mov	x1, x24
 194:	mov	x2, x22
 198:	add	x0, x8, x9, lsl #3
 19c:	bl	0 <memmove>
 1a0:	ldp	w8, w9, [x20, #8]
 1a4:	add	x8, x27, x8
 1a8:	cmp	x8, x9
 1ac:	b.hi	1fc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1fc>  // b.pmore
 1b0:	subs	x2, x24, x21
 1b4:	str	w8, [x20, #8]
 1b8:	b.eq	1c8 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1c8>  // b.none
 1bc:	sub	x0, x23, x2
 1c0:	mov	x1, x21
 1c4:	bl	0 <memmove>
 1c8:	cbz	x22, 1dc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1dc>
 1cc:	mov	x0, x21
 1d0:	mov	x1, x19
 1d4:	mov	x2, x22
 1d8:	bl	0 <memmove>
 1dc:	mov	x0, x21
 1e0:	ldp	x20, x19, [sp, #80]
 1e4:	ldp	x22, x21, [sp, #64]
 1e8:	ldp	x24, x23, [sp, #48]
 1ec:	ldp	x26, x25, [sp, #32]
 1f0:	ldp	x28, x27, [sp, #16]
 1f4:	ldp	x29, x30, [sp], #96
 1f8:	ret
 1fc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 200:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 204:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 208:	add	x0, x0, #0x0
 20c:	add	x1, x1, #0x0
 210:	add	x3, x3, #0x0
 214:	mov	w2, #0x43                  	// #67
 218:	bl	0 <__assert_fail>
 21c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 220:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 224:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 228:	add	x0, x0, #0x0
 22c:	add	x1, x1, #0x0
 230:	add	x3, x3, #0x0
 234:	mov	w2, #0x24e                 	// #590
 238:	bl	0 <__assert_fail>
 23c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 240:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 244:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 248:	add	x0, x0, #0x0
 24c:	add	x1, x1, #0x0
 250:	add	x3, x3, #0x0
 254:	mov	w2, #0x24f                 	// #591
 258:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_:

0000000000000000 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, x0
  18:	cmp	x8, #0x81
  1c:	b.lt	208 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x208>  // b.tstop
  20:	mov	x20, x1
  24:	mov	x19, x0
  28:	mov	x21, x2
  2c:	add	x23, x0, #0x8
  30:	b	54 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x54>
  34:	mov	x0, x22
  38:	mov	x1, x20
  3c:	mov	x2, x21
  40:	bl	0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>
  44:	sub	x8, x22, x19
  48:	cmp	x8, #0x80
  4c:	mov	x20, x22
  50:	b.le	208 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x208>
  54:	cbz	x21, 110 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x110>
  58:	lsr	x8, x8, #4
  5c:	ldr	x9, [x19, #8]
  60:	ldr	x11, [x19, x8, lsl #3]
  64:	ldur	x10, [x20, #-8]
  68:	sub	x21, x21, #0x1
  6c:	cmp	x9, x11
  70:	b.cs	84 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x84>  // b.hs, b.nlast
  74:	cmp	x11, x10
  78:	b.cs	94 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x94>  // b.hs, b.nlast
  7c:	ldr	x9, [x19]
  80:	b	cc <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xcc>
  84:	cmp	x9, x10
  88:	b.cs	b4 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xb4>  // b.hs, b.nlast
  8c:	ldr	x8, [x19]
  90:	b	ac <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xac>
  94:	ldr	x8, [x19]
  98:	cmp	x9, x10
  9c:	b.cs	ac <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xac>  // b.hs, b.nlast
  a0:	str	x10, [x19]
  a4:	stur	x8, [x20, #-8]
  a8:	b	d4 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xd4>
  ac:	stp	x9, x8, [x19]
  b0:	b	d4 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xd4>
  b4:	ldr	x9, [x19]
  b8:	cmp	x11, x10
  bc:	b.cs	cc <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xcc>  // b.hs, b.nlast
  c0:	str	x10, [x19]
  c4:	stur	x9, [x20, #-8]
  c8:	b	d4 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xd4>
  cc:	str	x11, [x19]
  d0:	str	x9, [x19, x8, lsl #3]
  d4:	mov	x8, x20
  d8:	mov	x9, x23
  dc:	ldr	x11, [x19]
  e0:	ldr	x10, [x9], #8
  e4:	cmp	x10, x11
  e8:	b.cc	e0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xe0>  // b.lo, b.ul, b.last
  ec:	sub	x22, x9, #0x8
  f0:	ldr	x12, [x8, #-8]!
  f4:	cmp	x11, x12
  f8:	b.cc	f0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xf0>  // b.lo, b.ul, b.last
  fc:	cmp	x22, x8
 100:	b.cs	34 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x34>  // b.hs, b.nlast
 104:	str	x12, [x22]
 108:	str	x10, [x8]
 10c:	b	dc <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xdc>
 110:	add	x2, x29, #0x18
 114:	mov	x0, x19
 118:	mov	x1, x20
 11c:	bl	0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>
 120:	b	134 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x134>
 124:	mov	x11, x10
 128:	cmp	x9, #0x8
 12c:	str	x8, [x19, x11, lsl #3]
 130:	b.le	208 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x208>
 134:	ldr	x8, [x20, #-8]!
 138:	ldr	x13, [x19]
 13c:	sub	x9, x20, x19
 140:	asr	x12, x9, #3
 144:	sub	x11, x12, #0x1
 148:	cmp	x11, #0x0
 14c:	csel	x10, x12, x11, lt  // lt = tstop
 150:	cmp	x9, #0x11
 154:	str	x13, [x20]
 158:	b.lt	1a0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x1a0>  // b.tstop
 15c:	mov	x14, xzr
 160:	asr	x13, x10, #1
 164:	lsl	x10, x14, #1
 168:	mov	w15, #0x1                   	// #1
 16c:	add	x10, x10, #0x2
 170:	bfi	x15, x14, #1, #63
 174:	ldr	x16, [x19, x10, lsl #3]
 178:	ldr	x17, [x19, x15, lsl #3]
 17c:	cmp	x16, x17
 180:	csel	x10, x15, x10, cc  // cc = lo, ul, last
 184:	ldr	x15, [x19, x10, lsl #3]
 188:	cmp	x10, x13
 18c:	str	x15, [x19, x14, lsl #3]
 190:	mov	x14, x10
 194:	b.lt	164 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x164>  // b.tstop
 198:	tbz	w9, #3, 1a8 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x1a8>
 19c:	b	1d0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x1d0>
 1a0:	mov	x10, xzr
 1a4:	tbnz	w9, #3, 1d0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x1d0>
 1a8:	sub	x12, x12, #0x2
 1ac:	cmp	x12, #0x0
 1b0:	csel	x11, x11, x12, lt  // lt = tstop
 1b4:	cmp	x10, x11, asr #1
 1b8:	b.ne	1d0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x1d0>  // b.any
 1bc:	mov	w11, #0x1                   	// #1
 1c0:	bfi	x11, x10, #1, #63
 1c4:	ldr	x12, [x19, x11, lsl #3]
 1c8:	str	x12, [x19, x10, lsl #3]
 1cc:	mov	x10, x11
 1d0:	cmp	x10, #0x1
 1d4:	b.lt	124 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x124>  // b.tstop
 1d8:	sub	x11, x10, #0x1
 1dc:	cmp	x11, #0x0
 1e0:	csel	x11, x10, x11, lt  // lt = tstop
 1e4:	asr	x11, x11, #1
 1e8:	ldr	x12, [x19, x11, lsl #3]
 1ec:	cmp	x12, x8
 1f0:	b.cs	124 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x124>  // b.hs, b.nlast
 1f4:	cmp	x10, #0x2
 1f8:	str	x12, [x19, x10, lsl #3]
 1fc:	mov	x10, x11
 200:	b.gt	1d8 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x1d8>
 204:	b	128 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x128>
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldr	x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret

Disassembly of section .text._ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_:

0000000000000000 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, x0
  18:	mov	x19, x1
  1c:	mov	x20, x0
  20:	cmp	x8, #0x81
  24:	b.lt	48 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x48>  // b.tstop
  28:	mov	x21, x20
  2c:	ldr	x8, [x21, #8]!
  30:	ldr	x9, [x20]
  34:	cmp	x8, x9
  38:	b.cs	dc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xdc>  // b.hs, b.nlast
  3c:	str	x9, [x21]
  40:	mov	x10, x20
  44:	b	fc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xfc>
  48:	cmp	x20, x19
  4c:	b.eq	5cc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5cc>  // b.none
  50:	add	x9, x20, #0x8
  54:	cmp	x9, x19
  58:	b.eq	5cc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5cc>  // b.none
  5c:	mov	x21, x20
  60:	b	74 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x74>
  64:	add	x9, x21, #0x8
  68:	cmp	x9, x19
  6c:	str	x22, [x8]
  70:	b.eq	5cc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5cc>  // b.none
  74:	ldr	x22, [x21, #8]
  78:	ldr	x8, [x20]
  7c:	mov	x10, x21
  80:	mov	x21, x9
  84:	cmp	x22, x8
  88:	b.cs	b0 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xb0>  // b.hs, b.nlast
  8c:	subs	x2, x21, x20
  90:	mov	x8, x20
  94:	b.eq	64 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x64>  // b.none
  98:	sub	x8, x10, x2
  9c:	add	x0, x8, #0x10
  a0:	mov	x1, x20
  a4:	bl	0 <memmove>
  a8:	mov	x8, x20
  ac:	b	64 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x64>
  b0:	ldr	x9, [x10]
  b4:	mov	x8, x21
  b8:	cmp	x22, x9
  bc:	b.cs	64 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x64>  // b.hs, b.nlast
  c0:	mov	x8, x21
  c4:	str	x9, [x8]
  c8:	ldur	x9, [x8, #-16]
  cc:	sub	x8, x8, #0x8
  d0:	cmp	x22, x9
  d4:	b.cc	c4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xc4>  // b.lo, b.ul, b.last
  d8:	b	64 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x64>
  dc:	mov	x10, x21
  e0:	b.cs	fc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xfc>  // b.hs, b.nlast
  e4:	mov	x10, x21
  e8:	str	x9, [x10]
  ec:	ldur	x9, [x10, #-16]
  f0:	sub	x10, x10, #0x8
  f4:	cmp	x8, x9
  f8:	b.cc	e8 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xe8>  // b.lo, b.ul, b.last
  fc:	str	x8, [x10]
 100:	mov	x9, x20
 104:	ldr	x8, [x9, #16]!
 108:	ldr	x10, [x20]
 10c:	cmp	x8, x10
 110:	b.cs	124 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x124>  // b.hs, b.nlast
 114:	ldr	q0, [x20]
 118:	mov	x11, x20
 11c:	str	q0, [x21]
 120:	b	14c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x14c>
 124:	ldr	x10, [x21]
 128:	mov	x11, x9
 12c:	cmp	x8, x10
 130:	b.cs	14c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x14c>  // b.hs, b.nlast
 134:	mov	x11, x9
 138:	str	x10, [x11]
 13c:	ldur	x10, [x11, #-16]
 140:	sub	x11, x11, #0x8
 144:	cmp	x8, x10
 148:	b.cc	138 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x138>  // b.lo, b.ul, b.last
 14c:	str	x8, [x11]
 150:	mov	x8, x20
 154:	ldr	x10, [x8, #24]!
 158:	ldr	x11, [x20]
 15c:	cmp	x10, x11
 160:	b.cs	17c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x17c>  // b.hs, b.nlast
 164:	ldr	x9, [x20, #16]
 168:	ldr	q0, [x20]
 16c:	mov	x11, x20
 170:	str	x9, [x21, #16]
 174:	str	q0, [x21]
 178:	b	1a4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x1a4>
 17c:	ldr	x9, [x9]
 180:	mov	x11, x8
 184:	cmp	x10, x9
 188:	b.cs	1a4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x1a4>  // b.hs, b.nlast
 18c:	mov	x11, x8
 190:	str	x9, [x11]
 194:	ldur	x9, [x11, #-16]
 198:	sub	x11, x11, #0x8
 19c:	cmp	x10, x9
 1a0:	b.cc	190 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x190>  // b.lo, b.ul, b.last
 1a4:	str	x10, [x11]
 1a8:	mov	x9, x20
 1ac:	ldr	x10, [x9, #32]!
 1b0:	ldr	x11, [x20]
 1b4:	cmp	x10, x11
 1b8:	b.cs	1cc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x1cc>  // b.hs, b.nlast
 1bc:	ldp	q1, q0, [x20]
 1c0:	mov	x11, x20
 1c4:	stp	q1, q0, [x21]
 1c8:	b	1f4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x1f4>
 1cc:	ldr	x8, [x8]
 1d0:	mov	x11, x9
 1d4:	cmp	x10, x8
 1d8:	b.cs	1f4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x1f4>  // b.hs, b.nlast
 1dc:	mov	x11, x9
 1e0:	str	x8, [x11]
 1e4:	ldur	x8, [x11, #-16]
 1e8:	sub	x11, x11, #0x8
 1ec:	cmp	x10, x8
 1f0:	b.cc	1e0 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x1e0>  // b.lo, b.ul, b.last
 1f4:	str	x10, [x11]
 1f8:	mov	x8, x20
 1fc:	ldr	x10, [x8, #40]!
 200:	ldr	x11, [x20]
 204:	cmp	x10, x11
 208:	b.cs	224 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x224>  // b.hs, b.nlast
 20c:	ldr	x9, [x20, #32]
 210:	ldp	q1, q0, [x20]
 214:	mov	x11, x20
 218:	str	x9, [x21, #32]
 21c:	stp	q1, q0, [x21]
 220:	b	24c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x24c>
 224:	ldr	x9, [x9]
 228:	mov	x11, x8
 22c:	cmp	x10, x9
 230:	b.cs	24c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x24c>  // b.hs, b.nlast
 234:	mov	x11, x8
 238:	str	x9, [x11]
 23c:	ldur	x9, [x11, #-16]
 240:	sub	x11, x11, #0x8
 244:	cmp	x10, x9
 248:	b.cc	238 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x238>  // b.lo, b.ul, b.last
 24c:	str	x10, [x11]
 250:	mov	x9, x20
 254:	ldr	x10, [x9, #48]!
 258:	ldr	x11, [x20]
 25c:	cmp	x10, x11
 260:	b.cs	27c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x27c>  // b.hs, b.nlast
 264:	ldp	q1, q0, [x20, #16]
 268:	ldr	q2, [x20]
 26c:	mov	x11, x20
 270:	stp	q1, q0, [x21, #16]
 274:	str	q2, [x21]
 278:	b	2a4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x2a4>
 27c:	ldr	x8, [x8]
 280:	mov	x11, x9
 284:	cmp	x10, x8
 288:	b.cs	2a4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x2a4>  // b.hs, b.nlast
 28c:	mov	x11, x9
 290:	str	x8, [x11]
 294:	ldur	x8, [x11, #-16]
 298:	sub	x11, x11, #0x8
 29c:	cmp	x10, x8
 2a0:	b.cc	290 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x290>  // b.lo, b.ul, b.last
 2a4:	str	x10, [x11]
 2a8:	mov	x8, x20
 2ac:	ldr	x10, [x8, #56]!
 2b0:	ldr	x11, [x20]
 2b4:	cmp	x10, x11
 2b8:	b.cs	2dc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x2dc>  // b.hs, b.nlast
 2bc:	ldr	x9, [x20, #48]
 2c0:	ldp	q1, q0, [x20, #16]
 2c4:	ldr	q2, [x20]
 2c8:	mov	x11, x20
 2cc:	str	x9, [x21, #48]
 2d0:	stp	q1, q0, [x21, #16]
 2d4:	str	q2, [x21]
 2d8:	b	304 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x304>
 2dc:	ldr	x9, [x9]
 2e0:	mov	x11, x8
 2e4:	cmp	x10, x9
 2e8:	b.cs	304 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x304>  // b.hs, b.nlast
 2ec:	mov	x11, x8
 2f0:	str	x9, [x11]
 2f4:	ldur	x9, [x11, #-16]
 2f8:	sub	x11, x11, #0x8
 2fc:	cmp	x10, x9
 300:	b.cc	2f0 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x2f0>  // b.lo, b.ul, b.last
 304:	str	x10, [x11]
 308:	mov	x9, x20
 30c:	ldr	x10, [x9, #64]!
 310:	ldr	x11, [x20]
 314:	cmp	x10, x11
 318:	b.cs	334 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x334>  // b.hs, b.nlast
 31c:	ldp	q1, q0, [x20, #32]
 320:	ldp	q3, q2, [x20]
 324:	mov	x11, x20
 328:	stp	q1, q0, [x21, #32]
 32c:	stp	q3, q2, [x21]
 330:	b	35c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x35c>
 334:	ldr	x8, [x8]
 338:	mov	x11, x9
 33c:	cmp	x10, x8
 340:	b.cs	35c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x35c>  // b.hs, b.nlast
 344:	mov	x11, x9
 348:	str	x8, [x11]
 34c:	ldur	x8, [x11, #-16]
 350:	sub	x11, x11, #0x8
 354:	cmp	x10, x8
 358:	b.cc	348 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x348>  // b.lo, b.ul, b.last
 35c:	str	x10, [x11]
 360:	mov	x22, x20
 364:	ldr	x23, [x22, #72]!
 368:	ldr	x8, [x20]
 36c:	cmp	x23, x8
 370:	b.cs	38c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x38c>  // b.hs, b.nlast
 374:	mov	w2, #0x48                  	// #72
 378:	mov	x0, x21
 37c:	mov	x1, x20
 380:	bl	0 <memmove>
 384:	mov	x9, x20
 388:	b	3b4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x3b4>
 38c:	ldr	x8, [x9]
 390:	mov	x9, x22
 394:	cmp	x23, x8
 398:	b.cs	3b4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x3b4>  // b.hs, b.nlast
 39c:	mov	x9, x22
 3a0:	str	x8, [x9]
 3a4:	ldur	x8, [x9, #-16]
 3a8:	sub	x9, x9, #0x8
 3ac:	cmp	x23, x8
 3b0:	b.cc	3a0 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x3a0>  // b.lo, b.ul, b.last
 3b4:	str	x23, [x9]
 3b8:	mov	x23, x20
 3bc:	ldr	x24, [x23, #80]!
 3c0:	ldr	x8, [x20]
 3c4:	cmp	x24, x8
 3c8:	b.cs	3e4 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x3e4>  // b.hs, b.nlast
 3cc:	mov	w2, #0x50                  	// #80
 3d0:	mov	x0, x21
 3d4:	mov	x1, x20
 3d8:	bl	0 <memmove>
 3dc:	mov	x9, x20
 3e0:	b	40c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x40c>
 3e4:	ldr	x8, [x22]
 3e8:	mov	x9, x23
 3ec:	cmp	x24, x8
 3f0:	b.cs	40c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x40c>  // b.hs, b.nlast
 3f4:	mov	x9, x23
 3f8:	str	x8, [x9]
 3fc:	ldur	x8, [x9, #-16]
 400:	sub	x9, x9, #0x8
 404:	cmp	x24, x8
 408:	b.cc	3f8 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x3f8>  // b.lo, b.ul, b.last
 40c:	str	x24, [x9]
 410:	mov	x22, x20
 414:	ldr	x24, [x22, #88]!
 418:	ldr	x8, [x20]
 41c:	cmp	x24, x8
 420:	b.cs	43c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x43c>  // b.hs, b.nlast
 424:	mov	w2, #0x58                  	// #88
 428:	mov	x0, x21
 42c:	mov	x1, x20
 430:	bl	0 <memmove>
 434:	mov	x9, x20
 438:	b	464 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x464>
 43c:	ldr	x8, [x23]
 440:	mov	x9, x22
 444:	cmp	x24, x8
 448:	b.cs	464 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x464>  // b.hs, b.nlast
 44c:	mov	x9, x22
 450:	str	x8, [x9]
 454:	ldur	x8, [x9, #-16]
 458:	sub	x9, x9, #0x8
 45c:	cmp	x24, x8
 460:	b.cc	450 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x450>  // b.lo, b.ul, b.last
 464:	str	x24, [x9]
 468:	mov	x23, x20
 46c:	ldr	x24, [x23, #96]!
 470:	ldr	x8, [x20]
 474:	cmp	x24, x8
 478:	b.cs	494 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x494>  // b.hs, b.nlast
 47c:	mov	w2, #0x60                  	// #96
 480:	mov	x0, x21
 484:	mov	x1, x20
 488:	bl	0 <memmove>
 48c:	mov	x9, x20
 490:	b	4bc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x4bc>
 494:	ldr	x8, [x22]
 498:	mov	x9, x23
 49c:	cmp	x24, x8
 4a0:	b.cs	4bc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x4bc>  // b.hs, b.nlast
 4a4:	mov	x9, x23
 4a8:	str	x8, [x9]
 4ac:	ldur	x8, [x9, #-16]
 4b0:	sub	x9, x9, #0x8
 4b4:	cmp	x24, x8
 4b8:	b.cc	4a8 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x4a8>  // b.lo, b.ul, b.last
 4bc:	str	x24, [x9]
 4c0:	mov	x24, x20
 4c4:	ldr	x22, [x24, #104]!
 4c8:	ldr	x8, [x20]
 4cc:	cmp	x22, x8
 4d0:	b.cs	4ec <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x4ec>  // b.hs, b.nlast
 4d4:	mov	w2, #0x68                  	// #104
 4d8:	mov	x0, x21
 4dc:	mov	x1, x20
 4e0:	bl	0 <memmove>
 4e4:	mov	x9, x20
 4e8:	b	514 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x514>
 4ec:	ldr	x8, [x23]
 4f0:	mov	x9, x24
 4f4:	cmp	x22, x8
 4f8:	b.cs	514 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x514>  // b.hs, b.nlast
 4fc:	mov	x9, x24
 500:	str	x8, [x9]
 504:	ldur	x8, [x9, #-16]
 508:	sub	x9, x9, #0x8
 50c:	cmp	x22, x8
 510:	b.cc	500 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x500>  // b.lo, b.ul, b.last
 514:	str	x22, [x9]
 518:	mov	x22, x20
 51c:	ldr	x23, [x22, #112]!
 520:	ldr	x8, [x20]
 524:	cmp	x23, x8
 528:	b.cs	544 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x544>  // b.hs, b.nlast
 52c:	mov	w2, #0x70                  	// #112
 530:	mov	x0, x21
 534:	mov	x1, x20
 538:	bl	0 <memmove>
 53c:	mov	x9, x20
 540:	b	56c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x56c>
 544:	ldr	x8, [x24]
 548:	mov	x9, x22
 54c:	cmp	x23, x8
 550:	b.cs	56c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x56c>  // b.hs, b.nlast
 554:	mov	x9, x22
 558:	str	x8, [x9]
 55c:	ldur	x8, [x9, #-16]
 560:	sub	x9, x9, #0x8
 564:	cmp	x23, x8
 568:	b.cc	558 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x558>  // b.lo, b.ul, b.last
 56c:	str	x23, [x9]
 570:	mov	x9, x20
 574:	ldr	x23, [x9, #120]!
 578:	ldr	x8, [x20]
 57c:	cmp	x23, x8
 580:	b.cs	59c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x59c>  // b.hs, b.nlast
 584:	mov	w2, #0x78                  	// #120
 588:	mov	x0, x21
 58c:	mov	x1, x20
 590:	bl	0 <memmove>
 594:	mov	x9, x20
 598:	b	5bc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5bc>
 59c:	ldr	x8, [x22]
 5a0:	cmp	x23, x8
 5a4:	b.cs	5bc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5bc>  // b.hs, b.nlast
 5a8:	str	x8, [x9]
 5ac:	ldur	x8, [x9, #-16]
 5b0:	sub	x9, x9, #0x8
 5b4:	cmp	x23, x8
 5b8:	b.cc	5a8 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5a8>  // b.lo, b.ul, b.last
 5bc:	add	x8, x20, #0x80
 5c0:	cmp	x8, x19
 5c4:	str	x23, [x9]
 5c8:	b.ne	5f0 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5f0>  // b.any
 5cc:	ldp	x20, x19, [sp, #48]
 5d0:	ldp	x22, x21, [sp, #32]
 5d4:	ldp	x24, x23, [sp, #16]
 5d8:	ldp	x29, x30, [sp], #64
 5dc:	ret
 5e0:	add	x8, x8, #0x8
 5e4:	cmp	x8, x19
 5e8:	str	x9, [x10]
 5ec:	b.eq	5cc <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5cc>  // b.none
 5f0:	ldp	x11, x9, [x8, #-8]
 5f4:	mov	x10, x8
 5f8:	cmp	x9, x11
 5fc:	b.cs	5e0 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5e0>  // b.hs, b.nlast
 600:	mov	x10, x8
 604:	str	x11, [x10]
 608:	ldur	x11, [x10, #-16]
 60c:	sub	x10, x10, #0x8
 610:	cmp	x9, x11
 614:	b.cc	604 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x604>  // b.lo, b.ul, b.last
 618:	b	5e0 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x5e0>

Disassembly of section .text._ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_:

0000000000000000 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_>:
   0:	sub	x10, x1, x0
   4:	cmp	x10, #0x10
   8:	b.ge	10 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x10>  // b.tcont
   c:	ret
  10:	asr	x8, x10, #3
  14:	sub	x9, x8, #0x2
  18:	sub	x11, x8, #0x1
  1c:	cmp	x9, #0x0
  20:	csel	x9, x11, x9, lt  // lt = tstop
  24:	cmp	x11, #0x0
  28:	csel	x8, x8, x11, lt  // lt = tstop
  2c:	asr	x9, x9, #1
  30:	asr	x8, x8, #1
  34:	tbnz	w10, #3, 100 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x100>
  38:	mov	w10, #0x1                   	// #1
  3c:	bfi	x10, x9, #1, #63
  40:	mov	x12, x9
  44:	b	58 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x58>
  48:	mov	x14, x13
  4c:	str	x12, [x0, x14, lsl #3]
  50:	sub	x12, x11, #0x1
  54:	cbz	x11, c <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0xc>
  58:	mov	x11, x12
  5c:	ldr	x12, [x0, x12, lsl #3]
  60:	cmp	x8, x11
  64:	mov	x13, x11
  68:	b.le	a4 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0xa4>
  6c:	mov	x14, x11
  70:	lsl	x13, x14, #1
  74:	mov	w15, #0x1                   	// #1
  78:	add	x13, x13, #0x2
  7c:	bfi	x15, x14, #1, #63
  80:	ldr	x16, [x0, x13, lsl #3]
  84:	ldr	x17, [x0, x15, lsl #3]
  88:	cmp	x16, x17
  8c:	csel	x13, x15, x13, cc  // cc = lo, ul, last
  90:	ldr	x15, [x0, x13, lsl #3]
  94:	cmp	x13, x8
  98:	str	x15, [x0, x14, lsl #3]
  9c:	mov	x14, x13
  a0:	b.lt	70 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x70>  // b.tstop
  a4:	cmp	x13, x9
  a8:	b.ne	b8 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0xb8>  // b.any
  ac:	ldr	x13, [x0, x10, lsl #3]
  b0:	str	x13, [x0, x9, lsl #3]
  b4:	mov	x13, x10
  b8:	cmp	x13, x11
  bc:	b.le	48 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x48>
  c0:	sub	x14, x13, #0x1
  c4:	cmp	x14, #0x0
  c8:	csel	x14, x13, x14, lt  // lt = tstop
  cc:	asr	x14, x14, #1
  d0:	ldr	x15, [x0, x14, lsl #3]
  d4:	cmp	x15, x12
  d8:	b.cs	48 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x48>  // b.hs, b.nlast
  dc:	cmp	x14, x11
  e0:	str	x15, [x0, x13, lsl #3]
  e4:	mov	x13, x14
  e8:	b.gt	c0 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0xc0>
  ec:	b	4c <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x4c>
  f0:	mov	x12, x11
  f4:	str	x9, [x0, x12, lsl #3]
  f8:	sub	x9, x10, #0x1
  fc:	cbz	x10, c <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0xc>
 100:	mov	x10, x9
 104:	ldr	x9, [x0, x9, lsl #3]
 108:	cmp	x8, x10
 10c:	mov	x12, x10
 110:	b.le	f4 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0xf4>
 114:	mov	x11, x10
 118:	mov	x12, x11
 11c:	lsl	x11, x11, #1
 120:	mov	w13, #0x1                   	// #1
 124:	add	x11, x11, #0x2
 128:	bfi	x13, x12, #1, #63
 12c:	ldr	x14, [x0, x11, lsl #3]
 130:	ldr	x15, [x0, x13, lsl #3]
 134:	cmp	x14, x15
 138:	csel	x11, x13, x11, cc  // cc = lo, ul, last
 13c:	ldr	x13, [x0, x11, lsl #3]
 140:	cmp	x11, x8
 144:	str	x13, [x0, x12, lsl #3]
 148:	b.lt	118 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x118>  // b.tstop
 14c:	cmp	x11, x10
 150:	b.le	f0 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0xf0>
 154:	sub	x12, x11, #0x1
 158:	cmp	x12, #0x0
 15c:	csel	x12, x11, x12, lt  // lt = tstop
 160:	asr	x12, x12, #1
 164:	ldr	x13, [x0, x12, lsl #3]
 168:	cmp	x13, x9
 16c:	b.cs	f0 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0xf0>  // b.hs, b.nlast
 170:	cmp	x12, x10
 174:	str	x13, [x0, x11, lsl #3]
 178:	mov	x11, x12
 17c:	b.gt	154 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0x154>
 180:	b	f4 <_ZSt11__make_heapIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_+0xf4>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x2
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x54>
  20:	mov	w9, w21
  24:	mov	x0, x19
  28:	mov	x2, x20
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldr	x21, [sp, #16]
  34:	mov	w8, w3
  38:	orr	x6, x9, #0x100000000
  3c:	mov	w3, #0x5                   	// #5
  40:	mov	w1, w8
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  54:	ldr	w2, [x19, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  64:	cmp	w21, #0x20
  68:	b.cs	74 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x74>  // b.hs, b.nlast
  6c:	mov	w1, w21
  70:	b	98 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x98>
  74:	mov	w1, #0x20                  	// #32
  78:	bfxil	w1, w21, #0, #5
  7c:	mov	w2, #0x6                   	// #6
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  88:	lsr	w1, w21, #5
  8c:	cmp	w21, #0x3ff
  90:	mov	w21, w1
  94:	b.hi	74 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x74>  // b.pmore
  98:	mov	w2, #0x6                   	// #6
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  a4:	mov	w1, #0x5                   	// #5
  a8:	mov	w2, #0x6                   	// #6
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  b4:	ldr	w21, [x20]
  b8:	cmp	w21, #0x20
  bc:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0xc8>  // b.hs, b.nlast
  c0:	mov	w1, w21
  c4:	b	ec <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0xec>
  c8:	mov	w1, #0x20                  	// #32
  cc:	bfxil	w1, w21, #0, #5
  d0:	mov	w2, #0x6                   	// #6
  d4:	mov	x0, x19
  d8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  dc:	lsr	w1, w21, #5
  e0:	cmp	w21, #0x3ff
  e4:	mov	w21, w1
  e8:	b.hi	c8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0xc8>  // b.pmore
  ec:	mov	w2, #0x6                   	// #6
  f0:	mov	x0, x19
  f4:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  f8:	ldr	w21, [x20, #4]
  fc:	cmp	w21, #0x20
 100:	b.cs	10c <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x10c>  // b.hs, b.nlast
 104:	mov	w1, w21
 108:	b	130 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x130>
 10c:	mov	w1, #0x20                  	// #32
 110:	bfxil	w1, w21, #0, #5
 114:	mov	w2, #0x6                   	// #6
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 120:	lsr	w1, w21, #5
 124:	cmp	w21, #0x3ff
 128:	mov	w21, w1
 12c:	b.hi	10c <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x10c>  // b.pmore
 130:	mov	w2, #0x6                   	// #6
 134:	mov	x0, x19
 138:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 13c:	ldr	w21, [x20, #8]
 140:	cmp	w21, #0x20
 144:	b.cs	150 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x150>  // b.hs, b.nlast
 148:	mov	w1, w21
 14c:	b	174 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x174>
 150:	mov	w1, #0x20                  	// #32
 154:	bfxil	w1, w21, #0, #5
 158:	mov	w2, #0x6                   	// #6
 15c:	mov	x0, x19
 160:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 164:	lsr	w1, w21, #5
 168:	cmp	w21, #0x3ff
 16c:	mov	w21, w1
 170:	b.hi	150 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x150>  // b.pmore
 174:	mov	w2, #0x6                   	// #6
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 180:	ldr	w21, [x20, #12]
 184:	cmp	w21, #0x20
 188:	b.cs	194 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x194>  // b.hs, b.nlast
 18c:	mov	w1, w21
 190:	b	1b8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x1b8>
 194:	mov	w1, #0x20                  	// #32
 198:	bfxil	w1, w21, #0, #5
 19c:	mov	w2, #0x6                   	// #6
 1a0:	mov	x0, x19
 1a4:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 1a8:	lsr	w1, w21, #5
 1ac:	cmp	w21, #0x3ff
 1b0:	mov	w21, w1
 1b4:	b.hi	194 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x194>  // b.pmore
 1b8:	mov	w2, #0x6                   	// #6
 1bc:	mov	x0, x19
 1c0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 1c4:	ldr	w20, [x20, #16]
 1c8:	cmp	w20, #0x20
 1cc:	b.cs	1d8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x1d8>  // b.hs, b.nlast
 1d0:	mov	w1, w20
 1d4:	b	1fc <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x1fc>
 1d8:	mov	w1, #0x20                  	// #32
 1dc:	bfxil	w1, w20, #0, #5
 1e0:	mov	w2, #0x6                   	// #6
 1e4:	mov	x0, x19
 1e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 1ec:	lsr	w1, w20, #5
 1f0:	cmp	w20, #0x3ff
 1f4:	mov	w20, w1
 1f8:	b.hi	1d8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x1d8>  // b.pmore
 1fc:	mov	x0, x19
 200:	ldp	x20, x19, [sp, #32]
 204:	ldr	x21, [sp, #16]
 208:	mov	w2, #0x6                   	// #6
 20c:	ldp	x29, x30, [sp], #48
 210:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>

Disassembly of section .text._ZN4llvm15ValueEnumeratorD2Ev:

0000000000000000 <_ZN4llvm15ValueEnumeratorD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #512]
  18:	cbz	x0, 20 <_ZN4llvm15ValueEnumeratorD2Ev+0x20>
  1c:	bl	0 <_ZdlPv>
  20:	ldr	x0, [x19, #480]
  24:	bl	0 <_ZdlPv>
  28:	ldr	x8, [x19, #472]
  2c:	ldr	x0, [x19, #448]
  30:	add	x8, x8, #0x1
  34:	str	x8, [x19, #472]
  38:	bl	0 <_ZdlPv>
  3c:	ldr	x8, [x19, #440]
  40:	ldr	x0, [x19, #416]
  44:	add	x8, x8, #0x1
  48:	str	x8, [x19, #440]
  4c:	cbz	x0, 54 <_ZN4llvm15ValueEnumeratorD2Ev+0x54>
  50:	bl	0 <_ZdlPv>
  54:	ldr	x0, [x19, #392]
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x8, [x19, #384]
  60:	ldr	x0, [x19, #360]
  64:	add	x8, x8, #0x1
  68:	str	x8, [x19, #384]
  6c:	cbz	x0, 74 <_ZN4llvm15ValueEnumeratorD2Ev+0x74>
  70:	bl	0 <_ZdlPv>
  74:	ldr	x0, [x19, #336]
  78:	bl	0 <_ZdlPv>
  7c:	ldr	x8, [x19, #328]
  80:	ldrb	w9, [x19, #296]
  84:	add	x8, x8, #0x1
  88:	str	x8, [x19, #328]
  8c:	tbnz	w9, #0, a0 <_ZN4llvm15ValueEnumeratorD2Ev+0xa0>
  90:	ldr	x0, [x19, #304]
  94:	bl	0 <_ZdlPv>
  98:	ldrb	w8, [x19, #296]
  9c:	tbnz	w8, #0, 18c <_ZN4llvm15ValueEnumeratorD2Ev+0x18c>
  a0:	ldr	x8, [x19, #288]
  a4:	ldr	x0, [x19, #264]
  a8:	add	x8, x8, #0x1
  ac:	str	x8, [x19, #288]
  b0:	bl	0 <_ZdlPv>
  b4:	ldr	x8, [x19, #256]
  b8:	ldr	x0, [x19, #232]
  bc:	add	x8, x8, #0x1
  c0:	str	x8, [x19, #256]
  c4:	cbz	x0, cc <_ZN4llvm15ValueEnumeratorD2Ev+0xcc>
  c8:	bl	0 <_ZdlPv>
  cc:	ldr	x0, [x19, #208]
  d0:	cbz	x0, d8 <_ZN4llvm15ValueEnumeratorD2Ev+0xd8>
  d4:	bl	0 <_ZdlPv>
  d8:	ldr	x0, [x19, #184]
  dc:	add	x20, x19, #0x88
  e0:	cbz	x0, e8 <_ZN4llvm15ValueEnumeratorD2Ev+0xe8>
  e4:	bl	0 <_ZdlPv>
  e8:	ldr	x1, [x19, #152]
  ec:	mov	x0, x20
  f0:	bl	0 <_ZN4llvm15ValueEnumeratorD2Ev>
  f4:	ldr	x0, [x19, #112]
  f8:	cbz	x0, 100 <_ZN4llvm15ValueEnumeratorD2Ev+0x100>
  fc:	bl	0 <_ZdlPv>
 100:	ldr	x0, [x19, #88]
 104:	bl	0 <_ZdlPv>
 108:	ldr	x8, [x19, #80]
 10c:	ldr	x0, [x19, #56]
 110:	add	x8, x8, #0x1
 114:	str	x8, [x19, #80]
 118:	cbz	x0, 120 <_ZN4llvm15ValueEnumeratorD2Ev+0x120>
 11c:	bl	0 <_ZdlPv>
 120:	ldr	x0, [x19, #32]
 124:	bl	0 <_ZdlPv>
 128:	ldr	x8, [x19, #24]
 12c:	ldp	x20, x21, [x19]
 130:	add	x8, x8, #0x1
 134:	cmp	x20, x21
 138:	str	x8, [x19, #24]
 13c:	b.ne	164 <_ZN4llvm15ValueEnumeratorD2Ev+0x164>  // b.any
 140:	cbz	x20, 17c <_ZN4llvm15ValueEnumeratorD2Ev+0x17c>
 144:	mov	x0, x20
 148:	ldp	x20, x19, [sp, #32]
 14c:	ldr	x21, [sp, #16]
 150:	ldp	x29, x30, [sp], #48
 154:	b	0 <_ZdlPv>
 158:	add	x20, x20, #0x28
 15c:	cmp	x21, x20
 160:	b.eq	174 <_ZN4llvm15ValueEnumeratorD2Ev+0x174>  // b.none
 164:	ldr	x0, [x20, #16]
 168:	cbz	x0, 158 <_ZN4llvm15ValueEnumeratorD2Ev+0x158>
 16c:	bl	0 <_ZdlPv>
 170:	b	158 <_ZN4llvm15ValueEnumeratorD2Ev+0x158>
 174:	ldr	x20, [x19]
 178:	cbnz	x20, 144 <_ZN4llvm15ValueEnumeratorD2Ev+0x144>
 17c:	ldp	x20, x19, [sp, #32]
 180:	ldr	x21, [sp, #16]
 184:	ldp	x29, x30, [sp], #48
 188:	ret
 18c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorD2Ev>
 190:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorD2Ev>
 194:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorD2Ev>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x45b                 	// #1115
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E:

0000000000000000 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE:

0000000000000000 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  ec:	cbz	w19, 15c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x15c>
  f0:	mov	w8, wzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 108:	add	w8, w22, #0x1
 10c:	cmp	w8, w19
 110:	b.eq	15c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x15c>  // b.none
 114:	ldr	x9, [x21, #8]
 118:	mov	w22, w8
 11c:	cmp	x9, x22
 120:	b.ls	170 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x170>  // b.plast
 124:	ldr	x8, [x21]
 128:	ldr	w23, [x8, x22, lsl #2]
 12c:	cmp	w23, #0x20
 130:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 134:	mov	w1, #0x20                  	// #32
 138:	bfxil	w1, w23, #0, #5
 13c:	mov	w2, #0x6                   	// #6
 140:	mov	x0, x20
 144:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 148:	lsr	w1, w23, #5
 14c:	cmp	w23, #0x3ff
 150:	mov	w23, w1
 154:	b.hi	134 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x134>  // b.pmore
 158:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xfc>
 15c:	ldp	x20, x19, [sp, #48]
 160:	ldp	x22, x21, [sp, #32]
 164:	ldr	x23, [sp, #16]
 168:	ldp	x29, x30, [sp], #64
 16c:	ret
 170:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 174:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 178:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0xfa                  	// #250
 18c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE>:
   0:	ldrb	w8, [x1, #12]
   4:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE+0x24>
   8:	ldrb	w8, [x0, #12]
   c:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE+0x24>
  10:	ldr	w8, [x0, #8]
  14:	ldr	w9, [x1, #8]
  18:	cmp	w8, w9
  1c:	cset	w0, ne  // ne = any
  20:	ret
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKjEN4llvm2cl3optIjLb0ENS4_6parserIjEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKjEN4llvm2cl3optIjLb0ENS4_6parserIjEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIjLb0ENS2_6parserIjEEEUlRKjE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIjLb0ENS2_6parserIjEEEUlRKjE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIjLb0ENS2_6parserIjEEEUlRKjE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	ldrb	w8, [x1, #9]
   4:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   8:	ldrb	w8, [x0, #9]
   c:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  10:	ldrb	w8, [x0, #8]
  14:	ldrb	w9, [x1, #8]
  18:	cmp	w8, w9
  1c:	cset	w0, ne  // ne = any
  20:	ret
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	mov	x8, x0
   4:	ldr	x0, [x0, #16]
   8:	add	x8, x8, #0x20
   c:	cmp	x0, x8
  10:	b.eq	18 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x18>  // b.none
  14:	b	0 <free>
  18:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	cbz	x0, 8 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv+0x8>
   4:	b	0 <_ZdlPv>
   8:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
  10:	ldr	x8, [x8]
  14:	mov	x19, x0
  18:	cmp	x1, x8
  1c:	b.eq	2c <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x2c>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	tbz	w0, #0, 3c <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x3c>
  2c:	add	x0, x19, #0x10
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	x0, xzr
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_BitcodeWriter.cpp>:
   0:	stp	d9, d8, [sp, #-80]!
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x19, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  1c:	add	x19, x19, #0x0
  20:	adrp	x22, 0 <_ZN4llvm2cl15GeneralCategoryE>
  24:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  28:	ldr	x22, [x22]
  2c:	ldr	x9, [x9]
  30:	ldrh	w10, [x19, #10]
  34:	adrp	x8, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  38:	movi	v0.2d, #0x0
  3c:	ldr	d9, [x8]
  40:	and	w10, w10, #0x8000
  44:	mov	x8, x19
  48:	strh	w10, [x19, #10]
  4c:	add	x10, x19, #0x80
  50:	add	x9, x9, #0x10
  54:	strh	wzr, [x19, #8]
  58:	stur	q0, [x19, #12]
  5c:	stur	q0, [x19, #28]
  60:	stur	q0, [x19, #44]
  64:	str	wzr, [x19, #60]
  68:	str	x22, [x8, #80]!
  6c:	stp	xzr, x10, [x19, #88]
  70:	str	x10, [x19, #104]
  74:	str	x9, [x19, #144]
  78:	adrp	x9, 0 <_ZTVN4llvm2cl3optIjLb0ENS0_6parserIjEEEE>
  7c:	ldr	x9, [x9]
  80:	adrp	x1, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  84:	movi	v8.2s, #0x1
  88:	mov	w23, #0x1                   	// #1
  8c:	add	x9, x9, #0x10
  90:	str	x9, [x19]
  94:	adrp	x9, 0 <_ZTVN4llvm2cl6parserIjEE>
  98:	ldr	x9, [x9]
  9c:	str	x8, [x19, #64]
  a0:	adrp	x8, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  a4:	add	x8, x8, #0x0
  a8:	add	x9, x9, #0x10
  ac:	str	x9, [x19, #160]
  b0:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  b4:	add	x9, x9, #0x0
  b8:	add	x1, x1, #0x0
  bc:	mov	w2, #0x19                  	// #25
  c0:	mov	x0, x19
  c4:	str	d9, [x19, #112]
  c8:	str	wzr, [x19, #120]
  cc:	str	d8, [x19, #72]
  d0:	str	wzr, [x19, #136]
  d4:	strb	w23, [x19, #156]
  d8:	str	wzr, [x19, #152]
  dc:	stp	x8, x9, [x19, #184]
  e0:	mov	w20, #0x19                  	// #25
  e4:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  e8:	ldrh	w8, [x19, #10]
  ec:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  f0:	add	x9, x9, #0x0
  f4:	mov	w10, #0x47                  	// #71
  f8:	and	w8, w8, #0xffffffbf
  fc:	orr	w8, w8, #0x20
 100:	mov	x0, x19
 104:	str	w20, [x19, #136]
 108:	strb	w23, [x19, #156]
 10c:	str	w20, [x19, #152]
 110:	strh	w8, [x19, #10]
 114:	stp	x9, x10, [x19, #32]
 118:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 11c:	adrp	x20, 0 <__dso_handle>
 120:	adrp	x0, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 124:	add	x20, x20, #0x0
 128:	add	x0, x0, #0x0
 12c:	mov	x1, x19
 130:	mov	x2, x20
 134:	bl	0 <__cxa_atexit>
 138:	ldrh	w8, [x19, #210]
 13c:	add	x21, x19, #0xc8
 140:	strh	wzr, [x19, #208]
 144:	movi	v0.2d, #0x0
 148:	and	w8, w8, #0x8000
 14c:	strh	w8, [x19, #210]
 150:	add	x8, x19, #0x118
 154:	str	wzr, [x21, #60]
 158:	str	x8, [x19, #264]
 15c:	add	x8, x19, #0x148
 160:	stur	q0, [x19, #212]
 164:	stur	q0, [x19, #228]
 168:	stur	q0, [x19, #244]
 16c:	stp	x8, x8, [x19, #296]
 170:	adrp	x8, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 174:	ldr	x8, [x8]
 178:	stp	x22, xzr, [x19, #280]
 17c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
 180:	ldr	x9, [x9]
 184:	add	x8, x8, #0x10
 188:	str	x8, [x19, #344]
 18c:	adrp	x8, 0 <_ZTVN4llvm2cl6parserIbEE>
 190:	ldr	x8, [x8]
 194:	add	x9, x9, #0x10
 198:	str	d9, [x19, #312]
 19c:	str	wzr, [x19, #320]
 1a0:	str	d8, [x19, #272]
 1a4:	strb	wzr, [x19, #336]
 1a8:	strb	w23, [x21, #153]
 1ac:	adrp	x10, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 1b0:	str	x9, [x19, #200]
 1b4:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 1b8:	adrp	x1, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 1bc:	add	x10, x10, #0x0
 1c0:	add	x9, x9, #0x0
 1c4:	add	x8, x8, #0x10
 1c8:	add	x1, x1, #0x0
 1cc:	mov	w2, #0x16                  	// #22
 1d0:	mov	x0, x21
 1d4:	strb	wzr, [x19, #352]
 1d8:	str	x8, [x19, #360]
 1dc:	stp	x9, x10, [x19, #384]
 1e0:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 1e4:	ldrh	w8, [x19, #210]
 1e8:	adrp	x10, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 1ec:	mov	w9, #0x100                 	// #256
 1f0:	add	x10, x10, #0x0
 1f4:	and	w8, w8, #0xffffffbf
 1f8:	mov	w11, #0x33                  	// #51
 1fc:	orr	w8, w8, #0x20
 200:	mov	x0, x21
 204:	strb	wzr, [x19, #336]
 208:	strh	w9, [x19, #352]
 20c:	strh	w8, [x19, #210]
 210:	stp	x10, x11, [x19, #232]
 214:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 218:	mov	x1, x21
 21c:	mov	x2, x20
 220:	ldp	x20, x19, [sp, #64]
 224:	ldp	x22, x21, [sp, #48]
 228:	ldr	x23, [sp, #32]
 22c:	ldp	x29, x30, [sp, #16]
 230:	adrp	x0, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 234:	add	x0, x0, #0x0
 238:	ldp	d9, d8, [sp], #80
 23c:	b	0 <__cxa_atexit>

BitcodeWriterPass.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w9, [x0, #9]
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	mov	x19, x8
  20:	cbz	w9, 80 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x80>
  24:	ldr	w10, [x2, #24]
  28:	cbz	w10, 140 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x140>
  2c:	adrp	x8, 0 <_ZN4llvm26ModuleSummaryIndexAnalysis3KeyE>
  30:	ldr	x8, [x8]
  34:	orr	x9, x8, #0x8
  38:	cmn	x9, #0x8
  3c:	b.eq	120 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x120>  // b.none
  40:	ldr	x9, [x2, #8]
  44:	ubfx	x11, x8, #4, #28
  48:	sub	w10, w10, #0x1
  4c:	eor	w11, w11, w8, lsr #9
  50:	and	w11, w10, w11
  54:	lsl	x12, x11, #4
  58:	ldr	x12, [x9, x12]
  5c:	cmp	x12, x8
  60:	b.ne	f4 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0xf4>  // b.any
  64:	adrp	x1, 0 <_ZN4llvm26ModuleSummaryIndexAnalysis3KeyE>
  68:	ldr	x1, [x1]
  6c:	mov	x0, x2
  70:	mov	x2, x20
  74:	bl	0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
  78:	add	x3, x0, #0x8
  7c:	b	84 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x84>
  80:	mov	x3, xzr
  84:	ldr	x1, [x21]
  88:	ldrb	w2, [x21, #8]
  8c:	ldrb	w4, [x21, #10]
  90:	mov	x0, x20
  94:	mov	x5, xzr
  98:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
  9c:	adrp	x8, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
  a0:	ldr	x8, [x8]
  a4:	mov	x9, x19
  a8:	ldr	x21, [sp, #16]
  ac:	str	x8, [x9, #40]!
  b0:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  b4:	ldr	d0, [x8]
  b8:	add	x8, x19, #0x60
  bc:	stp	xzr, x8, [x19, #56]
  c0:	str	x8, [x19, #72]
  c4:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  c8:	str	d0, [x19, #80]
  cc:	ldr	d0, [x8]
  d0:	mov	w8, #0x1                   	// #1
  d4:	str	wzr, [x19, #32]
  d8:	str	wzr, [x19, #88]
  dc:	stp	x9, x9, [x19, #8]
  e0:	str	d0, [x19, #24]
  e4:	str	x8, [x19]
  e8:	ldp	x20, x19, [sp, #32]
  ec:	ldp	x29, x30, [sp], #48
  f0:	ret
  f4:	mov	w13, #0x1                   	// #1
  f8:	cmn	x12, #0x8
  fc:	b.eq	140 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x140>  // b.none
 100:	add	w11, w11, w13
 104:	and	w11, w11, w10
 108:	lsl	x12, x11, #4
 10c:	ldr	x12, [x9, x12]
 110:	add	w13, w13, #0x1
 114:	cmp	x12, x8
 118:	b.eq	64 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x64>  // b.none
 11c:	b	f8 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0xf8>
 120:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 124:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 128:	adrp	x3, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 12c:	add	x0, x0, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x3, x3, #0x0
 138:	mov	w2, #0x252                 	// #594
 13c:	bl	0 <__assert_fail>
 140:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 144:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 148:	adrp	x3, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x30b                 	// #779
 15c:	bl	0 <__assert_fail>

0000000000000160 <_ZN4llvm30initializeWriteBitcodePassPassERNS_12PassRegistryE>:
 160:	sub	sp, sp, #0x30
 164:	stp	x29, x30, [sp, #32]
 168:	add	x29, sp, #0x20
 16c:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 170:	add	x8, x8, #0x0
 174:	add	x9, sp, #0x8
 178:	stp	x0, x8, [sp, #8]
 17c:	str	x9, [sp, #24]
 180:	adrp	x0, 0 <_ZSt15__once_callable>
 184:	ldr	x1, [x0]
 188:	add	x0, x0, #0x0
 18c:	blr	x1
 190:	mrs	x8, tpidr_el0
 194:	add	x9, sp, #0x10
 198:	str	x9, [x8, x0]
 19c:	adrp	x0, 0 <_ZSt11__once_call>
 1a0:	ldr	x1, [x0]
 1a4:	add	x0, x0, #0x0
 1a8:	blr	x1
 1ac:	adrp	x10, 0 <__pthread_key_create>
 1b0:	ldr	x10, [x10]
 1b4:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 1b8:	add	x9, x9, #0x0
 1bc:	str	x9, [x8, x0]
 1c0:	cbz	x10, 1e8 <_ZN4llvm30initializeWriteBitcodePassPassERNS_12PassRegistryE+0x88>
 1c4:	adrp	x1, 0 <__once_proxy>
 1c8:	ldr	x1, [x1]
 1cc:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 1d0:	add	x0, x0, #0x0
 1d4:	bl	0 <pthread_once>
 1d8:	cbnz	w0, 1ec <_ZN4llvm30initializeWriteBitcodePassPassERNS_12PassRegistryE+0x8c>
 1dc:	ldp	x29, x30, [sp, #32]
 1e0:	add	sp, sp, #0x30
 1e4:	ret
 1e8:	mov	w0, #0xffffffff            	// #-1
 1ec:	bl	0 <_ZSt20__throw_system_errori>

00000000000001f0 <_ZL34initializeWriteBitcodePassPassOnceRN4llvm12PassRegistryE>:
 1f0:	stp	x29, x30, [sp, #-32]!
 1f4:	stp	x20, x19, [sp, #16]
 1f8:	mov	x29, sp
 1fc:	mov	x19, x0
 200:	bl	0 <_ZN4llvm43initializeModuleSummaryIndexWrapperPassPassERNS_12PassRegistryE>
 204:	mov	w0, #0x50                  	// #80
 208:	bl	0 <_Znwm>
 20c:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 210:	adrp	x10, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 214:	add	x8, x8, #0x0
 218:	mov	w9, #0xd                   	// #13
 21c:	add	x10, x10, #0x0
 220:	adrp	x11, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 224:	stp	x8, x9, [x0]
 228:	stp	x10, x9, [x0, #16]
 22c:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 230:	mov	x20, x0
 234:	add	x11, x11, #0x0
 238:	mov	w8, #0x100                 	// #256
 23c:	add	x9, x9, #0x0
 240:	strb	wzr, [x0, #42]
 244:	stp	xzr, xzr, [x0, #48]
 248:	str	x11, [x0, #32]
 24c:	strh	w8, [x0, #40]
 250:	stp	xzr, x9, [x0, #64]
 254:	mov	w2, #0x1                   	// #1
 258:	mov	x0, x19
 25c:	mov	x1, x20
 260:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
 264:	mov	x0, x20
 268:	ldp	x20, x19, [sp, #16]
 26c:	ldp	x29, x30, [sp], #32
 270:	ret

0000000000000274 <_ZN4llvm23createBitcodeWriterPassERNS_11raw_ostreamEbbb>:
 274:	sub	sp, sp, #0x50
 278:	stp	x29, x30, [sp, #16]
 27c:	str	x23, [sp, #32]
 280:	stp	x22, x21, [sp, #48]
 284:	stp	x20, x19, [sp, #64]
 288:	add	x29, sp, #0x10
 28c:	mov	x23, x0
 290:	mov	w0, #0x30                  	// #48
 294:	mov	w20, w3
 298:	mov	w21, w2
 29c:	mov	w22, w1
 2a0:	bl	0 <_Znwm>
 2a4:	adrp	x11, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 2a8:	adrp	x13, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 2ac:	and	w8, w22, #0x1
 2b0:	and	w9, w21, #0x1
 2b4:	and	w10, w20, #0x1
 2b8:	add	x11, x11, #0x0
 2bc:	mov	w12, #0x4                   	// #4
 2c0:	add	x13, x13, #0x0
 2c4:	mov	x19, x0
 2c8:	str	x23, [x0, #32]
 2cc:	stp	xzr, x11, [x0, #8]
 2d0:	str	w12, [x0, #24]
 2d4:	str	x13, [x0]
 2d8:	strb	w8, [x0, #40]
 2dc:	strb	w9, [x0, #41]
 2e0:	strb	w10, [x0, #42]
 2e4:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 2e8:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 2ec:	add	x8, x8, #0x0
 2f0:	add	x9, x29, #0x18
 2f4:	str	x0, [x29, #24]
 2f8:	stp	x8, x9, [sp]
 2fc:	adrp	x0, 0 <_ZSt15__once_callable>
 300:	ldr	x1, [x0]
 304:	add	x0, x0, #0x0
 308:	blr	x1
 30c:	mrs	x8, tpidr_el0
 310:	mov	x9, sp
 314:	str	x9, [x8, x0]
 318:	adrp	x0, 0 <_ZSt11__once_call>
 31c:	ldr	x1, [x0]
 320:	add	x0, x0, #0x0
 324:	blr	x1
 328:	adrp	x10, 0 <__pthread_key_create>
 32c:	ldr	x10, [x10]
 330:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 334:	add	x9, x9, #0x0
 338:	str	x9, [x8, x0]
 33c:	cbz	x10, 374 <_ZN4llvm23createBitcodeWriterPassERNS_11raw_ostreamEbbb+0x100>
 340:	adrp	x1, 0 <__once_proxy>
 344:	ldr	x1, [x1]
 348:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 34c:	add	x0, x0, #0x0
 350:	bl	0 <pthread_once>
 354:	cbnz	w0, 378 <_ZN4llvm23createBitcodeWriterPassERNS_11raw_ostreamEbbb+0x104>
 358:	mov	x0, x19
 35c:	ldp	x20, x19, [sp, #64]
 360:	ldp	x22, x21, [sp, #48]
 364:	ldr	x23, [sp, #32]
 368:	ldp	x29, x30, [sp, #16]
 36c:	add	sp, sp, #0x50
 370:	ret
 374:	mov	w0, #0xffffffff            	// #-1
 378:	bl	0 <_ZSt20__throw_system_errori>

000000000000037c <_ZN4llvm19isBitcodeWriterPassEPNS_4PassE>:
 37c:	ldr	x8, [x0, #16]
 380:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 384:	add	x9, x9, #0x0
 388:	cmp	x8, x9
 38c:	cset	w0, eq  // eq = none
 390:	ret

0000000000000394 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_116WriteBitcodePassEEEPNS_4PassEv>:
 394:	sub	sp, sp, #0x30
 398:	stp	x29, x30, [sp, #16]
 39c:	str	x19, [sp, #32]
 3a0:	add	x29, sp, #0x10
 3a4:	mov	w0, #0x30                  	// #48
 3a8:	bl	0 <_Znwm>
 3ac:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 3b0:	adrp	x10, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 3b4:	add	x8, x8, #0x0
 3b8:	mov	w9, #0x4                   	// #4
 3bc:	add	x10, x10, #0x0
 3c0:	mov	x19, x0
 3c4:	stp	xzr, x8, [x0, #8]
 3c8:	str	w9, [x0, #24]
 3cc:	str	x10, [x0]
 3d0:	bl	0 <_ZN4llvm4dbgsEv>
 3d4:	str	x0, [x19, #32]
 3d8:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 3dc:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 3e0:	add	x8, x8, #0x0
 3e4:	add	x9, x29, #0x18
 3e8:	str	x0, [x29, #24]
 3ec:	stp	x8, x9, [sp]
 3f0:	adrp	x0, 0 <_ZSt15__once_callable>
 3f4:	ldr	x1, [x0]
 3f8:	add	x0, x0, #0x0
 3fc:	blr	x1
 400:	mrs	x8, tpidr_el0
 404:	mov	x9, sp
 408:	str	x9, [x8, x0]
 40c:	adrp	x0, 0 <_ZSt11__once_call>
 410:	ldr	x1, [x0]
 414:	add	x0, x0, #0x0
 418:	blr	x1
 41c:	adrp	x10, 0 <__pthread_key_create>
 420:	ldr	x10, [x10]
 424:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 428:	add	x9, x9, #0x0
 42c:	str	x9, [x8, x0]
 430:	cbz	x10, 460 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_116WriteBitcodePassEEEPNS_4PassEv+0xcc>
 434:	adrp	x1, 0 <__once_proxy>
 438:	ldr	x1, [x1]
 43c:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 440:	add	x0, x0, #0x0
 444:	bl	0 <pthread_once>
 448:	cbnz	w0, 464 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_116WriteBitcodePassEEEPNS_4PassEv+0xd0>
 44c:	mov	x0, x19
 450:	ldr	x19, [sp, #32]
 454:	ldp	x29, x30, [sp, #16]
 458:	add	sp, sp, #0x30
 45c:	ret
 460:	mov	w0, #0xffffffff            	// #-1
 464:	bl	0 <_ZSt20__throw_system_errori>

0000000000000468 <_ZN12_GLOBAL__N_116WriteBitcodePassD0Ev>:
 468:	stp	x29, x30, [sp, #-32]!
 46c:	str	x19, [sp, #16]
 470:	mov	x29, sp
 474:	mov	x19, x0
 478:	bl	0 <_ZN4llvm10ModulePassD2Ev>
 47c:	mov	x0, x19
 480:	ldr	x19, [sp, #16]
 484:	ldp	x29, x30, [sp], #32
 488:	b	0 <_ZdlPv>

000000000000048c <_ZNK12_GLOBAL__N_116WriteBitcodePass11getPassNameEv>:
 48c:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 490:	add	x0, x0, #0x0
 494:	mov	w1, #0xe                   	// #14
 498:	ret

000000000000049c <_ZNK12_GLOBAL__N_116WriteBitcodePass16getAnalysisUsageERN4llvm13AnalysisUsageE>:
 49c:	mov	w8, #0x1                   	// #1
 4a0:	strb	w8, [x1, #160]
 4a4:	ldrb	w8, [x0, #41]
 4a8:	cbz	w8, 4c0 <_ZNK12_GLOBAL__N_116WriteBitcodePass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x24>
 4ac:	adrp	x8, 0 <_ZN4llvm29ModuleSummaryIndexWrapperPass2IDE>
 4b0:	ldr	x8, [x8]
 4b4:	mov	x0, x1
 4b8:	mov	x1, x8
 4bc:	b	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
 4c0:	ret

00000000000004c4 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE>:
 4c4:	stp	x29, x30, [sp, #-32]!
 4c8:	stp	x20, x19, [sp, #16]
 4cc:	mov	x29, sp
 4d0:	ldrb	w8, [x0, #41]
 4d4:	mov	x20, x0
 4d8:	mov	x19, x1
 4dc:	cbz	w8, 548 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x84>
 4e0:	ldr	x9, [x20, #8]
 4e4:	cbz	x9, 594 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0xd0>
 4e8:	ldr	x8, [x9]
 4ec:	ldr	x9, [x9, #8]
 4f0:	cmp	x8, x9
 4f4:	b.eq	574 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0xb0>  // b.none
 4f8:	adrp	x10, 0 <_ZN4llvm29ModuleSummaryIndexWrapperPass2IDE>
 4fc:	ldr	x10, [x10]
 500:	mov	x0, xzr
 504:	ldp	x11, x12, [x8]
 508:	cmp	x11, x10
 50c:	csel	x0, x12, x0, eq  // eq = none
 510:	b.eq	520 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x5c>  // b.none
 514:	add	x8, x8, #0x10
 518:	cmp	x8, x9
 51c:	b.ne	504 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x40>  // b.any
 520:	cbz	x0, 574 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0xb0>
 524:	ldr	x8, [x0]
 528:	adrp	x1, 0 <_ZN4llvm29ModuleSummaryIndexWrapperPass2IDE>
 52c:	ldr	x8, [x8, #96]
 530:	ldr	x1, [x1]
 534:	blr	x8
 538:	ldrb	w8, [x0, #472]
 53c:	cbz	w8, 5b4 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0xf0>
 540:	add	x3, x0, #0x20
 544:	b	54c <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x88>
 548:	mov	x3, xzr
 54c:	ldr	x1, [x20, #32]
 550:	ldrb	w2, [x20, #40]
 554:	ldrb	w4, [x20, #42]
 558:	mov	x0, x19
 55c:	mov	x5, xzr
 560:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
 564:	ldp	x20, x19, [sp, #16]
 568:	mov	w0, wzr
 56c:	ldp	x29, x30, [sp], #32
 570:	ret
 574:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 578:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 57c:	adrp	x3, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 580:	add	x0, x0, #0x0
 584:	add	x1, x1, #0x0
 588:	add	x3, x3, #0x0
 58c:	mov	w2, #0xeb                  	// #235
 590:	bl	0 <__assert_fail>
 594:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 598:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 59c:	adrp	x3, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 5a0:	add	x0, x0, #0x0
 5a4:	add	x1, x1, #0x0
 5a8:	add	x3, x3, #0x0
 5ac:	mov	w2, #0xdd                  	// #221
 5b0:	bl	0 <__assert_fail>
 5b4:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 5b8:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 5bc:	adrp	x3, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 5c0:	add	x0, x0, #0x0
 5c4:	add	x1, x1, #0x0
 5c8:	add	x3, x3, #0x0
 5cc:	mov	w2, #0x49                  	// #73
 5d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

ValueEnumerator.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>:
       0:	sub	sp, sp, #0x140
       4:	stp	x29, x30, [sp, #224]
       8:	stp	x28, x27, [sp, #240]
       c:	stp	x26, x25, [sp, #256]
      10:	stp	x24, x23, [sp, #272]
      14:	stp	x22, x21, [sp, #288]
      18:	stp	x20, x19, [sp, #304]
      1c:	add	x29, sp, #0xe0
      20:	adrp	x10, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
      24:	ldr	d1, [x10]
      28:	movi	v0.2d, #0x0
      2c:	mov	x9, x0
      30:	str	xzr, [x0, #128]
      34:	str	q0, [x0, #112]
      38:	str	wzr, [x9, #144]!
      3c:	and	w8, w2, #0x1
      40:	add	x10, x0, #0x108
      44:	stp	xzr, x9, [x0, #152]
      48:	stp	x9, xzr, [x0, #168]
      4c:	mov	w9, #0xffffffff            	// #-1
      50:	mov	x25, x1
      54:	mov	x19, x0
      58:	stp	q0, q0, [x0]
      5c:	str	q0, [x0, #32]
      60:	str	wzr, [x0, #48]
      64:	stur	q0, [x0, #56]
      68:	stur	q0, [x0, #72]
      6c:	stur	q0, [x0, #88]
      70:	str	wzr, [x0, #104]
      74:	str	xzr, [x0, #288]
      78:	str	q0, [x10]
      7c:	str	w9, [x0, #304]
      80:	add	x9, x0, #0x168
      84:	strb	w8, [x0, #320]
      88:	add	x8, x0, #0x21c
      8c:	str	d1, [x0, #296]
      90:	movi	v1.2d, #0x0
      94:	str	wzr, [x0, #280]
      98:	stur	q0, [x0, #248]
      9c:	stur	q0, [x0, #232]
      a0:	stur	q0, [x0, #216]
      a4:	stur	q0, [x0, #200]
      a8:	stur	q0, [x0, #184]
      ac:	str	xzr, [x0, #528]
      b0:	str	q0, [x0, #512]
      b4:	str	d1, [x8]
      b8:	stp	xzr, xzr, [x0, #336]
      bc:	str	wzr, [x0, #352]
      c0:	str	xzr, [x0, #328]
      c4:	stp	q0, q0, [x9]
      c8:	str	q0, [x9, #32]
      cc:	str	wzr, [x9, #48]
      d0:	stp	q0, q0, [x0, #416]
      d4:	str	q0, [x0, #448]
      d8:	str	wzr, [x0, #464]
      dc:	stp	xzr, xzr, [x0, #472]
      e0:	str	wzr, [x0, #496]
      e4:	str	xzr, [x0, #488]
      e8:	tbz	w2, #0, b20 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb20>
      ec:	str	xzr, [sp, #80]
      f0:	stp	xzr, xzr, [sp, #56]
      f4:	str	xzr, [sp, #48]
      f8:	str	wzr, [sp, #72]
      fc:	ldr	x20, [x25, #16]
     100:	add	x26, x25, #0x8
     104:	b	118 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x118>
     108:	ldur	x0, [x21, #-24]
     10c:	add	x1, sp, #0x30
     110:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     114:	ldr	x20, [x20, #8]
     118:	cmp	x26, x20
     11c:	b.eq	18c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x18c>  // b.none
     120:	ldrb	w8, [x20]
     124:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     128:	sub	x8, x20, #0x38
     12c:	cmp	x20, #0x0
     130:	csel	x21, xzr, x8, eq  // eq = none
     134:	mov	x0, x21
     138:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     13c:	tbnz	w0, #0, 114 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x114>
     140:	mov	x0, x21
     144:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     148:	tbnz	w0, #0, 16c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x16c>
     14c:	ldur	x8, [x21, #-24]
     150:	cbz	x8, 1420 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1420>
     154:	ldrb	w8, [x8, #16]
     158:	cmp	w8, #0x4
     15c:	b.cc	114 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x114>  // b.lo, b.ul, b.last
     160:	mov	x0, x21
     164:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     168:	tbz	w0, #0, 108 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x108>
     16c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     170:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     174:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     178:	add	x0, x0, #0x0
     17c:	add	x1, x1, #0x0
     180:	add	x3, x3, #0x0
     184:	mov	w2, #0x89                  	// #137
     188:	bl	0 <__assert_fail>
     18c:	ldr	x20, [x25, #48]
     190:	add	x28, x25, #0x28
     194:	b	19c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x19c>
     198:	ldr	x20, [x20, #8]
     19c:	cmp	x28, x20
     1a0:	b.eq	1e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1e0>  // b.none
     1a4:	ldrb	w8, [x20]
     1a8:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     1ac:	sub	x8, x20, #0x30
     1b0:	cmp	x20, #0x0
     1b4:	csel	x8, xzr, x8, eq  // eq = none
     1b8:	ldur	x0, [x8, #-24]
     1bc:	cbz	x0, 1420 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1420>
     1c0:	ldrb	w8, [x0, #16]
     1c4:	cmp	w8, #0x11
     1c8:	b.cs	d5c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd5c>  // b.hs, b.nlast
     1cc:	cmp	w8, #0x4
     1d0:	b.cc	198 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x198>  // b.lo, b.ul, b.last
     1d4:	add	x1, sp, #0x30
     1d8:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     1dc:	b	198 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x198>
     1e0:	ldr	x20, [x25, #64]
     1e4:	add	x27, x25, #0x38
     1e8:	b	1f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1f0>
     1ec:	ldr	x20, [x20, #8]
     1f0:	cmp	x27, x20
     1f4:	b.eq	234 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x234>  // b.none
     1f8:	ldrb	w8, [x20]
     1fc:	tbnz	w8, #2, 1400 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1400>
     200:	sub	x8, x20, #0x30
     204:	cmp	x20, #0x0
     208:	csel	x8, xzr, x8, eq  // eq = none
     20c:	ldur	x0, [x8, #-24]
     210:	cbz	x0, 1420 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1420>
     214:	ldrb	w8, [x0, #16]
     218:	cmp	w8, #0x11
     21c:	b.cs	d5c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd5c>  // b.hs, b.nlast
     220:	cmp	w8, #0x4
     224:	b.cc	1ec <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1ec>  // b.lo, b.ul, b.last
     228:	add	x1, sp, #0x30
     22c:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     230:	b	1ec <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1ec>
     234:	ldr	x20, [x25, #32]
     238:	add	x24, x25, #0x18
     23c:	cmp	x24, x20
     240:	b.eq	31c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x31c>  // b.none
     244:	mov	w21, #0x18                  	// #24
     248:	b	258 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x258>
     24c:	ldr	x20, [x20, #8]
     250:	cmp	x24, x20
     254:	b.eq	2dc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2dc>  // b.none
     258:	ldrb	w8, [x20]
     25c:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     260:	sub	x8, x20, #0x38
     264:	cmp	x20, #0x0
     268:	csel	x9, xzr, x8, eq  // eq = none
     26c:	ldr	w8, [x9, #20]
     270:	tbnz	w8, #30, 288 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x288>
     274:	and	w8, w8, #0xfffffff
     278:	mneg	x10, x8, x21
     27c:	add	x22, x9, x10
     280:	cbnz	x8, 294 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x294>
     284:	b	24c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x24c>
     288:	ldur	x22, [x9, #-8]
     28c:	and	x8, x8, #0xfffffff
     290:	cbz	x8, 24c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x24c>
     294:	add	x8, x8, x8, lsl #1
     298:	lsl	x23, x8, #3
     29c:	b	2ac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2ac>
     2a0:	subs	x23, x23, #0x18
     2a4:	add	x22, x22, #0x18
     2a8:	b.eq	24c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x24c>  // b.none
     2ac:	ldr	x0, [x22]
     2b0:	cbz	x0, 1380 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1380>
     2b4:	ldrb	w8, [x0, #16]
     2b8:	cbz	w8, 2a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2a0>
     2bc:	cmp	w8, #0x3
     2c0:	b.eq	2a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2a0>  // b.none
     2c4:	sub	w8, w8, #0x1
     2c8:	cmp	w8, #0x2
     2cc:	b.cc	2a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2a0>  // b.lo, b.ul, b.last
     2d0:	add	x1, sp, #0x30
     2d4:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     2d8:	b	2a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2a0>
     2dc:	ldr	x20, [x25, #32]
     2e0:	ldr	w8, [sp, #64]
     2e4:	cmp	x24, x20
     2e8:	str	w8, [sp, #80]
     2ec:	b.eq	324 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x324>  // b.none
     2f0:	ldrb	w8, [x20]
     2f4:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     2f8:	sub	x8, x20, #0x38
     2fc:	cmp	x20, #0x0
     300:	csel	x0, xzr, x8, eq  // eq = none
     304:	add	x1, sp, #0x30
     308:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     30c:	ldr	x20, [x20, #8]
     310:	cmp	x24, x20
     314:	b.ne	2f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2f0>  // b.any
     318:	b	324 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x324>
     31c:	ldr	w8, [sp, #64]
     320:	str	w8, [sp, #80]
     324:	ldr	x20, [x25, #48]
     328:	cmp	x28, x20
     32c:	b.eq	358 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x358>  // b.none
     330:	ldrb	w8, [x20]
     334:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     338:	sub	x8, x20, #0x30
     33c:	cmp	x20, #0x0
     340:	csel	x0, xzr, x8, eq  // eq = none
     344:	add	x1, sp, #0x30
     348:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     34c:	ldr	x20, [x20, #8]
     350:	cmp	x28, x20
     354:	b.ne	330 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x330>  // b.any
     358:	ldr	x20, [x25, #64]
     35c:	cmp	x27, x20
     360:	b.eq	38c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x38c>  // b.none
     364:	ldrb	w8, [x20]
     368:	tbnz	w8, #2, 1400 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1400>
     36c:	sub	x8, x20, #0x30
     370:	cmp	x20, #0x0
     374:	csel	x0, xzr, x8, eq  // eq = none
     378:	add	x1, sp, #0x30
     37c:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     380:	ldr	x20, [x20, #8]
     384:	cmp	x27, x20
     388:	b.ne	364 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x364>  // b.any
     38c:	ldr	x20, [x25, #16]
     390:	cmp	x26, x20
     394:	b.eq	3c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3c0>  // b.none
     398:	ldrb	w8, [x20]
     39c:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     3a0:	sub	x8, x20, #0x38
     3a4:	cmp	x20, #0x0
     3a8:	csel	x0, xzr, x8, eq  // eq = none
     3ac:	add	x1, sp, #0x30
     3b0:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     3b4:	ldr	x20, [x20, #8]
     3b8:	cmp	x26, x20
     3bc:	b.ne	398 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x398>  // b.any
     3c0:	ldr	w8, [sp, #64]
     3c4:	stp	x28, x27, [sp, #8]
     3c8:	stp	x26, x25, [sp, #24]
     3cc:	str	x24, [sp, #40]
     3d0:	str	w8, [sp, #84]
     3d4:	ldr	x27, [x25, #32]
     3d8:	cmp	x24, x27
     3dc:	b.eq	600 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x600>  // b.none
     3e0:	mov	w28, #0x18                  	// #24
     3e4:	b	3f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3f4>
     3e8:	ldr	x27, [x27, #8]
     3ec:	cmp	x24, x27
     3f0:	b.eq	600 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x600>  // b.none
     3f4:	ldrb	w8, [x27]
     3f8:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     3fc:	sub	x8, x27, #0x38
     400:	cmp	x27, #0x0
     404:	csel	x21, xzr, x8, eq  // eq = none
     408:	mov	x0, x21
     40c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     410:	tbnz	w0, #0, 3e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3e8>
     414:	ldr	x22, [x21, #80]
     418:	add	x20, x21, #0x48
     41c:	cmp	x20, x22
     420:	b.eq	44c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x44c>  // b.none
     424:	ldrb	w8, [x22]
     428:	tbnz	w8, #2, 1360 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1360>
     42c:	sub	x8, x22, #0x18
     430:	cmp	x22, #0x0
     434:	csel	x0, xzr, x8, eq  // eq = none
     438:	add	x1, sp, #0x30
     43c:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     440:	ldr	x22, [x22, #8]
     444:	cmp	x20, x22
     448:	b.ne	424 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x424>  // b.any
     44c:	ldrb	w8, [x21, #18]
     450:	tbnz	w8, #0, 460 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x460>
     454:	ldr	x22, [x21, #88]
     458:	mov	x8, x22
     45c:	b	488 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x488>
     460:	mov	x0, x21
     464:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     468:	ldrb	w8, [x21, #18]
     46c:	ldr	x22, [x21, #88]
     470:	tbnz	w8, #0, 47c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x47c>
     474:	mov	x8, x22
     478:	b	488 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x488>
     47c:	mov	x0, x21
     480:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     484:	ldr	x8, [x21, #88]
     488:	ldr	x9, [x21, #96]
     48c:	mov	w10, #0x28                  	// #40
     490:	madd	x23, x9, x10, x8
     494:	cmp	x23, x22
     498:	b.eq	4b4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4b4>  // b.none
     49c:	add	x1, sp, #0x30
     4a0:	mov	x0, x22
     4a4:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     4a8:	add	x22, x22, #0x28
     4ac:	cmp	x23, x22
     4b0:	b.ne	49c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x49c>  // b.any
     4b4:	ldr	x22, [x21, #80]
     4b8:	cmp	x20, x22
     4bc:	b.ne	4d0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4d0>  // b.any
     4c0:	b	3e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3e8>
     4c4:	ldr	x22, [x22, #8]
     4c8:	cmp	x20, x22
     4cc:	b.eq	590 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x590>  // b.none
     4d0:	ldrb	w8, [x22]
     4d4:	tbnz	w8, #2, 1360 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1360>
     4d8:	sub	x8, x22, #0x18
     4dc:	cmp	x22, #0x0
     4e0:	csel	x8, xzr, x8, eq  // eq = none
     4e4:	ldr	x24, [x8, #48]
     4e8:	add	x25, x8, #0x28
     4ec:	b	4f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f4>
     4f0:	ldr	x24, [x24, #8]
     4f4:	cmp	x25, x24
     4f8:	b.eq	4c4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4c4>  // b.none
     4fc:	ldrb	w8, [x24]
     500:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     504:	sub	x8, x24, #0x18
     508:	cmp	x24, #0x0
     50c:	csel	x9, xzr, x8, eq  // eq = none
     510:	ldr	w8, [x9, #20]
     514:	tbnz	w8, #30, 52c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x52c>
     518:	and	w8, w8, #0xfffffff
     51c:	mneg	x10, x8, x28
     520:	add	x26, x9, x10
     524:	cbnz	x8, 538 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x538>
     528:	b	4f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f0>
     52c:	ldur	x26, [x9, #-8]
     530:	and	x8, x8, #0xfffffff
     534:	cbz	x8, 4f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f0>
     538:	add	x8, x8, x8, lsl #1
     53c:	lsl	x23, x8, #3
     540:	b	558 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x558>
     544:	add	x1, sp, #0x30
     548:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     54c:	subs	x23, x23, #0x18
     550:	add	x26, x26, #0x18
     554:	b.eq	4f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f0>  // b.none
     558:	ldr	x0, [x26]
     55c:	ldrb	w8, [x0, #16]
     560:	cmp	w8, #0x10
     564:	b.hi	584 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x584>  // b.pmore
     568:	cbz	w8, 54c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x54c>
     56c:	cmp	w8, #0x3
     570:	b.eq	54c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x54c>  // b.none
     574:	sub	w8, w8, #0x1
     578:	cmp	w8, #0x2
     57c:	b.cs	544 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x544>  // b.hs, b.nlast
     580:	b	54c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x54c>
     584:	cmp	w8, #0x14
     588:	b.eq	544 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x544>  // b.none
     58c:	b	54c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x54c>
     590:	ldr	x21, [x21, #80]
     594:	ldr	x24, [sp, #40]
     598:	cmp	x20, x21
     59c:	b.ne	5b0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5b0>  // b.any
     5a0:	b	3e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3e8>
     5a4:	ldr	x21, [x21, #8]
     5a8:	cmp	x20, x21
     5ac:	b.eq	3e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3e8>  // b.none
     5b0:	ldrb	w8, [x21]
     5b4:	tbnz	w8, #2, 1360 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1360>
     5b8:	sub	x8, x21, #0x18
     5bc:	cmp	x21, #0x0
     5c0:	csel	x8, xzr, x8, eq  // eq = none
     5c4:	ldr	x22, [x8, #48]
     5c8:	add	x23, x8, #0x28
     5cc:	cmp	x23, x22
     5d0:	b.eq	5a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5a4>  // b.none
     5d4:	ldrb	w8, [x22]
     5d8:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     5dc:	sub	x8, x22, #0x18
     5e0:	cmp	x22, #0x0
     5e4:	csel	x0, xzr, x8, eq  // eq = none
     5e8:	add	x1, sp, #0x30
     5ec:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     5f0:	ldr	x22, [x22, #8]
     5f4:	cmp	x23, x22
     5f8:	b.ne	5d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5d4>  // b.any
     5fc:	b	5a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5a4>
     600:	ldr	x8, [sp, #32]
     604:	stp	xzr, xzr, [x29, #-32]
     608:	stur	xzr, [x29, #-16]
     60c:	ldr	x8, [x8, #24]
     610:	and	x27, x8, #0xfffffffffffffff8
     614:	cmp	x24, x27
     618:	b.eq	838 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x838>  // b.none
     61c:	mov	w28, #0x18                  	// #24
     620:	b	638 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x638>
     624:	ldr	x8, [x27]
     628:	ldr	x24, [sp, #40]
     62c:	and	x27, x8, #0xfffffffffffffff8
     630:	cmp	x24, x27
     634:	b.eq	838 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x838>  // b.none
     638:	ldrb	w8, [x27]
     63c:	tbnz	w8, #2, 1460 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1460>
     640:	sub	x8, x27, #0x38
     644:	cmp	x27, #0x0
     648:	csel	x21, xzr, x8, eq  // eq = none
     64c:	mov	x0, x21
     650:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     654:	tbnz	w0, #0, 624 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x624>
     658:	ldr	x22, [x21, #80]
     65c:	add	x20, x21, #0x48
     660:	cmp	x20, x22
     664:	b.eq	698 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x698>  // b.none
     668:	ldrb	w8, [x22]
     66c:	tbnz	w8, #2, 1360 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1360>
     670:	sub	x8, x22, #0x18
     674:	cmp	x22, #0x0
     678:	csel	x0, xzr, x8, eq  // eq = none
     67c:	add	x2, sp, #0x30
     680:	sub	x3, x29, #0x20
     684:	mov	x1, x21
     688:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     68c:	ldr	x22, [x22, #8]
     690:	cmp	x20, x22
     694:	b.ne	668 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x668>  // b.any
     698:	ldrb	w8, [x21, #18]
     69c:	tbnz	w8, #0, 6ac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6ac>
     6a0:	ldr	x22, [x21, #88]
     6a4:	mov	x8, x22
     6a8:	b	6d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6d4>
     6ac:	mov	x0, x21
     6b0:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     6b4:	ldrb	w8, [x21, #18]
     6b8:	ldr	x22, [x21, #88]
     6bc:	tbnz	w8, #0, 6c8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6c8>
     6c0:	mov	x8, x22
     6c4:	b	6d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6d4>
     6c8:	mov	x0, x21
     6cc:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     6d0:	ldr	x8, [x21, #88]
     6d4:	ldr	x9, [x21, #96]
     6d8:	mov	w10, #0x28                  	// #40
     6dc:	madd	x23, x9, x10, x8
     6e0:	cmp	x23, x22
     6e4:	b.eq	708 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x708>  // b.none
     6e8:	add	x2, sp, #0x30
     6ec:	sub	x3, x29, #0x20
     6f0:	mov	x0, x22
     6f4:	mov	x1, x21
     6f8:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     6fc:	add	x22, x22, #0x28
     700:	cmp	x23, x22
     704:	b.ne	6e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6e8>  // b.any
     708:	ldr	x22, [x21, #80]
     70c:	cmp	x20, x22
     710:	b.ne	724 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x724>  // b.any
     714:	b	624 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x624>
     718:	ldr	x22, [x22, #8]
     71c:	cmp	x20, x22
     720:	b.eq	7cc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7cc>  // b.none
     724:	ldrb	w8, [x22]
     728:	tbnz	w8, #2, 1360 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1360>
     72c:	sub	x8, x22, #0x18
     730:	cmp	x22, #0x0
     734:	csel	x8, xzr, x8, eq  // eq = none
     738:	ldr	x24, [x8, #48]
     73c:	add	x25, x8, #0x28
     740:	b	748 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x748>
     744:	ldr	x24, [x24, #8]
     748:	cmp	x25, x24
     74c:	b.eq	718 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x718>  // b.none
     750:	ldrb	w8, [x24]
     754:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     758:	sub	x8, x24, #0x18
     75c:	cmp	x24, #0x0
     760:	csel	x9, xzr, x8, eq  // eq = none
     764:	ldr	w8, [x9, #20]
     768:	tbnz	w8, #30, 780 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x780>
     76c:	and	w8, w8, #0xfffffff
     770:	mneg	x10, x8, x28
     774:	add	x26, x9, x10
     778:	cbnz	x8, 78c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x78c>
     77c:	b	744 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x744>
     780:	ldur	x26, [x9, #-8]
     784:	and	x8, x8, #0xfffffff
     788:	cbz	x8, 744 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x744>
     78c:	add	x8, x8, x8, lsl #1
     790:	lsl	x23, x8, #3
     794:	b	7a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7a4>
     798:	subs	x23, x23, #0x18
     79c:	add	x26, x26, #0x18
     7a0:	b.eq	744 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x744>  // b.none
     7a4:	ldr	x0, [x26]
     7a8:	ldrb	w8, [x0, #16]
     7ac:	cmp	w8, #0x11
     7b0:	ccmp	w8, #0x14, #0x4, cs  // cs = hs, nlast
     7b4:	b.ne	798 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x798>  // b.any
     7b8:	add	x2, sp, #0x30
     7bc:	sub	x3, x29, #0x20
     7c0:	mov	x1, x21
     7c4:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     7c8:	b	798 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x798>
     7cc:	ldr	x22, [x21, #80]
     7d0:	b	7d8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7d8>
     7d4:	ldr	x22, [x22, #8]
     7d8:	cmp	x20, x22
     7dc:	b.eq	624 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x624>  // b.none
     7e0:	ldrb	w8, [x22]
     7e4:	tbnz	w8, #2, 1360 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1360>
     7e8:	sub	x8, x22, #0x18
     7ec:	cmp	x22, #0x0
     7f0:	csel	x8, xzr, x8, eq  // eq = none
     7f4:	ldr	x23, [x8, #48]
     7f8:	add	x24, x8, #0x28
     7fc:	cmp	x24, x23
     800:	b.eq	7d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7d4>  // b.none
     804:	ldrb	w8, [x23]
     808:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     80c:	sub	x8, x23, #0x18
     810:	cmp	x23, #0x0
     814:	csel	x0, xzr, x8, eq  // eq = none
     818:	add	x2, sp, #0x30
     81c:	sub	x3, x29, #0x20
     820:	mov	x1, x21
     824:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     828:	ldr	x23, [x23, #8]
     82c:	cmp	x24, x23
     830:	b.ne	804 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x804>  // b.any
     834:	b	7d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7d4>
     838:	ldp	x22, x25, [sp, #24]
     83c:	ldp	x26, x23, [sp, #8]
     840:	ldr	x20, [x25, #16]
     844:	cmp	x22, x20
     848:	b.eq	87c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x87c>  // b.none
     84c:	ldrb	w8, [x20]
     850:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     854:	sub	x8, x20, #0x38
     858:	cmp	x20, #0x0
     85c:	csel	x0, xzr, x8, eq  // eq = none
     860:	add	x2, sp, #0x30
     864:	sub	x3, x29, #0x20
     868:	mov	x1, xzr
     86c:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     870:	ldr	x20, [x20, #8]
     874:	cmp	x22, x20
     878:	b.ne	84c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x84c>  // b.any
     87c:	ldr	x20, [x25, #32]
     880:	cmp	x24, x20
     884:	b.eq	8b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8b8>  // b.none
     888:	ldrb	w8, [x20]
     88c:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     890:	sub	x8, x20, #0x38
     894:	cmp	x20, #0x0
     898:	csel	x0, xzr, x8, eq  // eq = none
     89c:	add	x2, sp, #0x30
     8a0:	sub	x3, x29, #0x20
     8a4:	mov	x1, xzr
     8a8:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     8ac:	ldr	x20, [x20, #8]
     8b0:	cmp	x24, x20
     8b4:	b.ne	888 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x888>  // b.any
     8b8:	ldr	x20, [x25, #48]
     8bc:	cmp	x26, x20
     8c0:	b.eq	8f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8f4>  // b.none
     8c4:	ldrb	w8, [x20]
     8c8:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     8cc:	sub	x8, x20, #0x30
     8d0:	cmp	x20, #0x0
     8d4:	csel	x0, xzr, x8, eq  // eq = none
     8d8:	add	x2, sp, #0x30
     8dc:	sub	x3, x29, #0x20
     8e0:	mov	x1, xzr
     8e4:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     8e8:	ldr	x20, [x20, #8]
     8ec:	cmp	x26, x20
     8f0:	b.ne	8c4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8c4>  // b.any
     8f4:	ldr	x20, [x25, #64]
     8f8:	cmp	x23, x20
     8fc:	b.eq	930 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x930>  // b.none
     900:	ldrb	w8, [x20]
     904:	tbnz	w8, #2, 1400 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1400>
     908:	sub	x8, x20, #0x30
     90c:	cmp	x20, #0x0
     910:	csel	x0, xzr, x8, eq  // eq = none
     914:	add	x2, sp, #0x30
     918:	sub	x3, x29, #0x20
     91c:	mov	x1, xzr
     920:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     924:	ldr	x20, [x20, #8]
     928:	cmp	x23, x20
     92c:	b.ne	900 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x900>  // b.any
     930:	ldr	x20, [x25, #16]
     934:	b	93c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x93c>
     938:	ldr	x20, [x20, #8]
     93c:	cmp	x22, x20
     940:	b.eq	988 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x988>  // b.none
     944:	ldrb	w8, [x20]
     948:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     94c:	sub	x8, x20, #0x38
     950:	cmp	x20, #0x0
     954:	csel	x21, xzr, x8, eq  // eq = none
     958:	mov	x0, x21
     95c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     960:	tbnz	w0, #0, 938 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x938>
     964:	mov	x0, x21
     968:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     96c:	tbnz	w0, #0, 16c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x16c>
     970:	ldur	x0, [x21, #-24]
     974:	add	x2, sp, #0x30
     978:	sub	x3, x29, #0x20
     97c:	mov	x1, xzr
     980:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     984:	b	938 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x938>
     988:	ldr	x20, [x25, #48]
     98c:	b	9a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9a4>
     990:	add	x2, sp, #0x30
     994:	sub	x3, x29, #0x20
     998:	mov	x1, xzr
     99c:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     9a0:	ldr	x20, [x20, #8]
     9a4:	cmp	x26, x20
     9a8:	b.eq	9d8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9d8>  // b.none
     9ac:	ldrb	w8, [x20]
     9b0:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     9b4:	sub	x8, x20, #0x30
     9b8:	cmp	x20, #0x0
     9bc:	csel	x8, xzr, x8, eq  // eq = none
     9c0:	ldur	x0, [x8, #-24]
     9c4:	cbz	x0, 990 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x990>
     9c8:	ldrb	w8, [x0, #16]
     9cc:	cmp	w8, #0x11
     9d0:	b.cc	990 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x990>  // b.lo, b.ul, b.last
     9d4:	b	d5c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd5c>
     9d8:	ldr	x20, [x25, #64]
     9dc:	b	9f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9f4>
     9e0:	add	x2, sp, #0x30
     9e4:	sub	x3, x29, #0x20
     9e8:	mov	x1, xzr
     9ec:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     9f0:	ldr	x20, [x20, #8]
     9f4:	cmp	x23, x20
     9f8:	b.eq	a28 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa28>  // b.none
     9fc:	ldrb	w8, [x20]
     a00:	tbnz	w8, #2, 1400 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1400>
     a04:	sub	x8, x20, #0x30
     a08:	cmp	x20, #0x0
     a0c:	csel	x8, xzr, x8, eq  // eq = none
     a10:	ldur	x0, [x8, #-24]
     a14:	cbz	x0, 9e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9e0>
     a18:	ldrb	w8, [x0, #16]
     a1c:	cmp	w8, #0x11
     a20:	b.cc	9e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9e0>  // b.lo, b.ul, b.last
     a24:	b	d5c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd5c>
     a28:	ldr	x20, [x25, #32]
     a2c:	cmp	x24, x20
     a30:	b.eq	aac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xaac>  // b.none
     a34:	mov	w21, #0x18                  	// #24
     a38:	b	a48 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa48>
     a3c:	ldr	x20, [x20, #8]
     a40:	cmp	x24, x20
     a44:	b.eq	aac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xaac>  // b.none
     a48:	ldrb	w8, [x20]
     a4c:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     a50:	sub	x8, x20, #0x38
     a54:	cmp	x20, #0x0
     a58:	csel	x9, xzr, x8, eq  // eq = none
     a5c:	ldr	w8, [x9, #20]
     a60:	tbnz	w8, #30, a78 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa78>
     a64:	and	w8, w8, #0xfffffff
     a68:	mneg	x10, x8, x21
     a6c:	add	x22, x9, x10
     a70:	cbnz	x8, a84 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa84>
     a74:	b	a3c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa3c>
     a78:	ldur	x22, [x9, #-8]
     a7c:	and	x8, x8, #0xfffffff
     a80:	cbz	x8, a3c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa3c>
     a84:	add	x8, x8, x8, lsl #1
     a88:	lsl	x23, x8, #3
     a8c:	ldr	x0, [x22], #24
     a90:	add	x2, sp, #0x30
     a94:	sub	x3, x29, #0x20
     a98:	mov	x1, xzr
     a9c:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     aa0:	subs	x23, x23, #0x18
     aa4:	b.ne	a8c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa8c>  // b.any
     aa8:	b	a3c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa3c>
     aac:	ldr	x0, [sp, #56]
     ab0:	bl	0 <_ZdlPv>
     ab4:	ldur	q0, [x29, #-32]
     ab8:	ldp	x21, x20, [x19]
     abc:	str	q0, [x19]
     ac0:	ldur	x8, [x29, #-16]
     ac4:	cmp	x20, x21
     ac8:	str	x8, [x19, #16]
     acc:	stp	xzr, xzr, [x29, #-32]
     ad0:	stur	xzr, [x29, #-16]
     ad4:	b.eq	afc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xafc>  // b.none
     ad8:	mov	x22, x21
     adc:	b	aec <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xaec>
     ae0:	add	x22, x22, #0x28
     ae4:	cmp	x20, x22
     ae8:	b.eq	afc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xafc>  // b.none
     aec:	ldr	x0, [x22, #16]
     af0:	cbz	x0, ae0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xae0>
     af4:	bl	0 <_ZdlPv>
     af8:	b	ae0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xae0>
     afc:	cbz	x21, b08 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb08>
     b00:	mov	x0, x21
     b04:	bl	0 <_ZdlPv>
     b08:	ldp	x21, x20, [x29, #-32]
     b0c:	cmp	x21, x20
     b10:	b.ne	cb8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcb8>  // b.any
     b14:	cbz	x21, b20 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb20>
     b18:	mov	x0, x21
     b1c:	bl	0 <_ZdlPv>
     b20:	ldr	x20, [x25, #16]
     b24:	add	x27, x25, #0x8
     b28:	cmp	x27, x20
     b2c:	b.eq	b58 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb58>  // b.none
     b30:	ldrb	w8, [x20]
     b34:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     b38:	sub	x8, x20, #0x38
     b3c:	cmp	x20, #0x0
     b40:	csel	x1, xzr, x8, eq  // eq = none
     b44:	mov	x0, x19
     b48:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     b4c:	ldr	x20, [x20, #8]
     b50:	cmp	x27, x20
     b54:	b.ne	b30 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb30>  // b.any
     b58:	ldr	x20, [x25, #32]
     b5c:	add	x23, x25, #0x18
     b60:	cmp	x23, x20
     b64:	b.eq	ba0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xba0>  // b.none
     b68:	ldrb	w8, [x20]
     b6c:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     b70:	sub	x8, x20, #0x38
     b74:	cmp	x20, #0x0
     b78:	csel	x21, xzr, x8, eq  // eq = none
     b7c:	mov	x0, x19
     b80:	mov	x1, x21
     b84:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     b88:	ldr	x1, [x21, #112]
     b8c:	mov	x0, x19
     b90:	bl	1a68 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
     b94:	ldr	x20, [x20, #8]
     b98:	cmp	x23, x20
     b9c:	b.ne	b68 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb68>  // b.any
     ba0:	ldr	x20, [x25, #48]
     ba4:	add	x22, x25, #0x28
     ba8:	cmp	x22, x20
     bac:	b.eq	bd8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbd8>  // b.none
     bb0:	ldrb	w8, [x20]
     bb4:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     bb8:	sub	x8, x20, #0x30
     bbc:	cmp	x20, #0x0
     bc0:	csel	x1, xzr, x8, eq  // eq = none
     bc4:	mov	x0, x19
     bc8:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     bcc:	ldr	x20, [x20, #8]
     bd0:	cmp	x22, x20
     bd4:	b.ne	bb0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbb0>  // b.any
     bd8:	ldr	x21, [x25, #64]
     bdc:	add	x20, x25, #0x38
     be0:	cmp	x20, x21
     be4:	b.eq	c10 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc10>  // b.none
     be8:	ldrb	w8, [x21]
     bec:	tbnz	w8, #2, 1400 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1400>
     bf0:	sub	x8, x21, #0x30
     bf4:	cmp	x21, #0x0
     bf8:	csel	x1, xzr, x8, eq  // eq = none
     bfc:	mov	x0, x19
     c00:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     c04:	ldr	x21, [x21, #8]
     c08:	cmp	x20, x21
     c0c:	b.ne	be8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbe8>  // b.any
     c10:	ldr	x8, [x19, #120]
     c14:	stp	x8, x23, [sp, #16]
     c18:	ldr	x23, [x25, #16]
     c1c:	ldr	x8, [x19, #112]
     c20:	cmp	x27, x23
     c24:	str	x8, [sp, #8]
     c28:	b.eq	cc8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcc8>  // b.none
     c2c:	mov	w24, #0xffffffff            	// #-1
     c30:	b	c40 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc40>
     c34:	ldr	x23, [x23, #8]
     c38:	cmp	x27, x23
     c3c:	b.eq	cc8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcc8>  // b.none
     c40:	ldrb	w8, [x23]
     c44:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     c48:	sub	x8, x23, #0x38
     c4c:	cmp	x23, #0x0
     c50:	csel	x21, xzr, x8, eq  // eq = none
     c54:	mov	x0, x21
     c58:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     c5c:	tbnz	w0, #0, c78 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc78>
     c60:	mov	x0, x21
     c64:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     c68:	tbnz	w0, #0, 16c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x16c>
     c6c:	ldur	x1, [x21, #-24]
     c70:	mov	x0, x19
     c74:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     c78:	ldr	x8, [x21, #72]
     c7c:	cbz	x8, c34 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc34>
     c80:	mov	x0, x21
     c84:	str	w24, [sp, #48]
     c88:	str	x8, [sp, #56]
     c8c:	bl	0 <_ZNK4llvm5Value10getContextEv>
     c90:	add	x1, sp, #0x30
     c94:	mov	w2, #0x1                   	// #1
     c98:	bl	0 <_ZN4llvm13AttributeList3getERNS_11LLVMContextENS_8ArrayRefISt4pairIjNS_12AttributeSetEEEE>
     c9c:	mov	x1, x0
     ca0:	mov	x0, x19
     ca4:	bl	1a68 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
     ca8:	b	c34 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc34>
     cac:	add	x21, x21, #0x28
     cb0:	cmp	x20, x21
     cb4:	b.eq	12f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x12f4>  // b.none
     cb8:	ldr	x0, [x21, #16]
     cbc:	cbz	x0, cac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcac>
     cc0:	bl	0 <_ZdlPv>
     cc4:	b	cac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcac>
     cc8:	ldr	x21, [x25, #48]
     ccc:	ldr	x24, [sp, #24]
     cd0:	cmp	x22, x21
     cd4:	b.ne	cf4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcf4>  // b.any
     cd8:	ldr	x21, [x25, #64]
     cdc:	b	d2c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd2c>
     ce0:	mov	x0, x19
     ce4:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     ce8:	ldr	x21, [x21, #8]
     cec:	cmp	x22, x21
     cf0:	b.eq	cd8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcd8>  // b.none
     cf4:	ldrb	w8, [x21]
     cf8:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     cfc:	sub	x8, x21, #0x30
     d00:	cmp	x21, #0x0
     d04:	csel	x8, xzr, x8, eq  // eq = none
     d08:	ldur	x1, [x8, #-24]
     d0c:	cbz	x1, ce0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xce0>
     d10:	ldrb	w8, [x1, #16]
     d14:	cmp	w8, #0x11
     d18:	b.cc	ce0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xce0>  // b.lo, b.ul, b.last
     d1c:	b	d5c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd5c>
     d20:	mov	x0, x19
     d24:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     d28:	ldr	x21, [x21, #8]
     d2c:	cmp	x20, x21
     d30:	b.eq	d7c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd7c>  // b.none
     d34:	ldrb	w8, [x21]
     d38:	tbnz	w8, #2, 1400 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1400>
     d3c:	sub	x8, x21, #0x30
     d40:	cmp	x21, #0x0
     d44:	csel	x8, xzr, x8, eq  // eq = none
     d48:	ldur	x1, [x8, #-24]
     d4c:	cbz	x1, d20 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd20>
     d50:	ldrb	w8, [x1, #16]
     d54:	cmp	w8, #0x11
     d58:	b.cc	d20 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd20>  // b.lo, b.ul, b.last
     d5c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     d60:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     d64:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     d68:	add	x0, x0, #0x0
     d6c:	add	x1, x1, #0x0
     d70:	add	x3, x3, #0x0
     d74:	mov	w2, #0x134                 	// #308
     d78:	bl	0 <__assert_fail>
     d7c:	ldr	x20, [x25, #32]
     d80:	cmp	x24, x20
     d84:	b.eq	df8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xdf8>  // b.none
     d88:	mov	w21, #0x18                  	// #24
     d8c:	b	d9c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd9c>
     d90:	ldr	x20, [x20, #8]
     d94:	cmp	x24, x20
     d98:	b.eq	df8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xdf8>  // b.none
     d9c:	ldrb	w8, [x20]
     da0:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     da4:	sub	x8, x20, #0x38
     da8:	cmp	x20, #0x0
     dac:	csel	x9, xzr, x8, eq  // eq = none
     db0:	ldr	w8, [x9, #20]
     db4:	tbnz	w8, #30, dcc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xdcc>
     db8:	and	w8, w8, #0xfffffff
     dbc:	mneg	x10, x8, x21
     dc0:	add	x22, x9, x10
     dc4:	cbnz	x8, dd8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xdd8>
     dc8:	b	d90 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd90>
     dcc:	ldur	x22, [x9, #-8]
     dd0:	and	x8, x8, #0xfffffff
     dd4:	cbz	x8, d90 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd90>
     dd8:	add	x8, x8, x8, lsl #1
     ddc:	lsl	x23, x8, #3
     de0:	ldr	x1, [x22], #24
     de4:	mov	x0, x19
     de8:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     dec:	subs	x23, x23, #0x18
     df0:	b.ne	de0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xde0>  // b.any
     df4:	b	d90 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd90>
     df8:	ldr	x0, [x25]
     dfc:	bl	0 <_ZN4llvm4Type13getMetadataTyERNS_11LLVMContextE>
     e00:	mov	x1, x0
     e04:	mov	x0, x19
     e08:	bl	1e60 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
     e0c:	ldr	x9, [x25, #120]
     e10:	ldr	w8, [x9, #8]
     e14:	ldr	x9, [x9]
     e18:	cbz	w8, e44 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe44>
     e1c:	add	x10, x9, #0x8
     e20:	mov	x20, x9
     e24:	b	e30 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe30>
     e28:	mov	x20, x10
     e2c:	add	x10, x10, #0x8
     e30:	ldur	x11, [x10, #-8]
     e34:	cbz	x11, e28 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe28>
     e38:	cmn	x11, #0x8
     e3c:	b.eq	e28 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe28>  // b.none
     e40:	b	e48 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe48>
     e44:	mov	x20, x9
     e48:	add	x21, x9, x8, lsl #3
     e4c:	cmp	x21, x20
     e50:	b.eq	e80 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe80>  // b.none
     e54:	ldr	x8, [x20], #8
     e58:	mov	x0, x19
     e5c:	ldr	x1, [x8, #8]
     e60:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     e64:	b	e6c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe6c>
     e68:	add	x20, x20, #0x8
     e6c:	ldr	x8, [x20]
     e70:	cbz	x8, e68 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe68>
     e74:	cmn	x8, #0x8
     e78:	b.eq	e68 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe68>  // b.none
     e7c:	b	e4c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe4c>
     e80:	ldr	x21, [x25, #80]
     e84:	add	x20, x25, #0x48
     e88:	b	e90 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe90>
     e8c:	ldr	x21, [x21, #8]
     e90:	cmp	x20, x21
     e94:	b.eq	ee0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xee0>  // b.none
     e98:	ldrb	w8, [x21]
     e9c:	tbnz	w8, #2, 1440 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1440>
     ea0:	mov	x0, x21
     ea4:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
     ea8:	cbz	w0, e8c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe8c>
     eac:	mov	w22, w0
     eb0:	mov	w23, wzr
     eb4:	mov	x0, x21
     eb8:	mov	w1, w23
     ebc:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
     ec0:	mov	x2, x0
     ec4:	mov	x0, x19
     ec8:	mov	w1, wzr
     ecc:	bl	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
     ed0:	add	w23, w23, #0x1
     ed4:	cmp	w22, w23
     ed8:	b.ne	eb4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xeb4>  // b.any
     edc:	b	e8c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe8c>
     ee0:	adrp	x8, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     ee4:	ldr	d0, [x8]
     ee8:	add	x8, sp, #0x30
     eec:	add	x8, x8, #0x10
     ef0:	str	x8, [sp, #48]
     ef4:	str	d0, [sp, #56]
     ef8:	ldr	x20, [x25, #16]
     efc:	b	f04 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf04>
     f00:	ldr	x20, [x20, #8]
     f04:	cmp	x27, x20
     f08:	b.eq	f5c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf5c>  // b.none
     f0c:	ldrb	w8, [x20]
     f10:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     f14:	sub	x8, x20, #0x38
     f18:	cmp	x20, #0x0
     f1c:	csel	x0, xzr, x8, eq  // eq = none
     f20:	add	x1, sp, #0x30
     f24:	str	wzr, [sp, #56]
     f28:	bl	0 <_ZNK4llvm12GlobalObject14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
     f2c:	ldr	w8, [sp, #56]
     f30:	cbz	w8, f00 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf00>
     f34:	ldr	x9, [sp, #48]
     f38:	lsl	x21, x8, #4
     f3c:	add	x22, x9, #0x8
     f40:	ldr	x2, [x22], #16
     f44:	mov	x0, x19
     f48:	mov	w1, wzr
     f4c:	bl	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
     f50:	subs	x21, x21, #0x10
     f54:	b.ne	f40 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf40>  // b.any
     f58:	b	f00 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf00>
     f5c:	ldr	x25, [x25, #32]
     f60:	cmp	x24, x25
     f64:	b.ne	fd8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xfd8>  // b.any
     f68:	ldp	x9, x8, [x19, #112]
     f6c:	ldp	x11, x10, [sp, #8]
     f70:	mov	x0, x19
     f74:	sub	x8, x8, x9
     f78:	sub	x10, x10, x11
     f7c:	lsr	x1, x10, #4
     f80:	lsr	x2, x8, #4
     f84:	bl	2474 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj>
     f88:	mov	x0, x19
     f8c:	bl	2924 <_ZN4llvm15ValueEnumerator16organizeMetadataEv>
     f90:	ldr	x0, [sp, #48]
     f94:	add	x8, sp, #0x30
     f98:	add	x8, x8, #0x10
     f9c:	cmp	x0, x8
     fa0:	b.eq	fa8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xfa8>  // b.none
     fa4:	bl	0 <free>
     fa8:	ldp	x20, x19, [sp, #304]
     fac:	ldp	x22, x21, [sp, #288]
     fb0:	ldp	x24, x23, [sp, #272]
     fb4:	ldp	x26, x25, [sp, #256]
     fb8:	ldp	x28, x27, [sp, #240]
     fbc:	ldp	x29, x30, [sp, #224]
     fc0:	add	sp, sp, #0x140
     fc4:	ret
     fc8:	ldp	x8, x25, [sp, #24]
     fcc:	ldr	x25, [x25, #8]
     fd0:	cmp	x8, x25
     fd4:	b.eq	f68 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf68>  // b.none
     fd8:	ldrb	w8, [x25]
     fdc:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     fe0:	sub	x8, x25, #0x38
     fe4:	cmp	x25, #0x0
     fe8:	csel	x20, xzr, x8, eq  // eq = none
     fec:	ldrb	w8, [x20, #18]
     ff0:	tbnz	w8, #0, 1000 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1000>
     ff4:	ldr	x21, [x20, #88]
     ff8:	mov	x8, x21
     ffc:	b	1028 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1028>
    1000:	mov	x0, x20
    1004:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    1008:	ldrb	w8, [x20, #18]
    100c:	ldr	x21, [x20, #88]
    1010:	tbnz	w8, #0, 101c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x101c>
    1014:	mov	x8, x21
    1018:	b	1028 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1028>
    101c:	mov	x0, x20
    1020:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    1024:	ldr	x8, [x20, #88]
    1028:	ldr	x9, [x20, #96]
    102c:	mov	w10, #0x28                  	// #40
    1030:	madd	x22, x9, x10, x8
    1034:	cmp	x22, x21
    1038:	b.eq	1050 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1050>  // b.none
    103c:	ldr	x1, [x21], #40
    1040:	mov	x0, x19
    1044:	bl	1e60 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    1048:	cmp	x22, x21
    104c:	b.ne	103c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x103c>  // b.any
    1050:	add	x1, sp, #0x30
    1054:	mov	x0, x20
    1058:	str	wzr, [sp, #56]
    105c:	bl	0 <_ZNK4llvm12GlobalObject14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
    1060:	ldr	w9, [sp, #56]
    1064:	cbz	w9, 10e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10e0>
    1068:	ldr	x8, [sp, #48]
    106c:	lsl	x22, x9, #4
    1070:	cbz	x25, 10bc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10bc>
    1074:	add	x23, x8, #0x8
    1078:	b	10a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10a4>
    107c:	mov	x0, x19
    1080:	mov	x1, x20
    1084:	bl	3828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    1088:	add	w1, w0, #0x1
    108c:	mov	x0, x19
    1090:	mov	x2, x21
    1094:	bl	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    1098:	subs	x22, x22, #0x10
    109c:	add	x23, x23, #0x10
    10a0:	b.eq	10e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10e0>  // b.none
    10a4:	mov	x0, x20
    10a8:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    10ac:	ldr	x21, [x23]
    10b0:	tbz	w0, #0, 107c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x107c>
    10b4:	mov	w1, wzr
    10b8:	b	108c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x108c>
    10bc:	add	x21, x8, #0x8
    10c0:	mov	x0, x20
    10c4:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    10c8:	ldr	x2, [x21], #16
    10cc:	mov	x0, x19
    10d0:	mov	w1, wzr
    10d4:	bl	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    10d8:	subs	x22, x22, #0x10
    10dc:	b.ne	10c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10c0>  // b.any
    10e0:	ldr	x27, [x20, #80]
    10e4:	add	x8, x20, #0x48
    10e8:	stp	x25, x8, [sp, #32]
    10ec:	b	10f8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10f8>
    10f0:	ldr	x27, [x27, #8]
    10f4:	ldr	x8, [sp, #40]
    10f8:	cmp	x8, x27
    10fc:	b.eq	fc8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xfc8>  // b.none
    1100:	ldrb	w8, [x27]
    1104:	tbnz	w8, #2, 1360 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1360>
    1108:	sub	x8, x27, #0x18
    110c:	cmp	x27, #0x0
    1110:	csel	x8, xzr, x8, eq  // eq = none
    1114:	ldr	x23, [x8, #48]
    1118:	add	x24, x8, #0x28
    111c:	b	1124 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1124>
    1120:	ldr	x23, [x23, #8]
    1124:	cmp	x24, x23
    1128:	b.eq	10f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10f0>  // b.none
    112c:	ldrb	w8, [x23]
    1130:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
    1134:	sub	x8, x23, #0x18
    1138:	cmp	x23, #0x0
    113c:	csel	x21, xzr, x8, eq  // eq = none
    1140:	ldr	w8, [x21, #20]
    1144:	tbnz	w8, #30, 1160 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1160>
    1148:	and	w8, w8, #0xfffffff
    114c:	mov	w9, #0x18                  	// #24
    1150:	mneg	x9, x8, x9
    1154:	add	x28, x21, x9
    1158:	cbnz	x8, 116c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x116c>
    115c:	b	11d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x11d4>
    1160:	ldur	x28, [x21, #-8]
    1164:	and	x8, x8, #0xfffffff
    1168:	cbz	x8, 11d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x11d4>
    116c:	add	x8, x8, x8, lsl #1
    1170:	lsl	x25, x8, #3
    1174:	b	118c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x118c>
    1178:	mov	x0, x19
    117c:	bl	22e4 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE>
    1180:	subs	x25, x25, #0x18
    1184:	add	x28, x28, #0x18
    1188:	b.eq	11d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x11d4>  // b.none
    118c:	ldr	x1, [x28]
    1190:	cbz	x1, 1300 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1300>
    1194:	ldrb	w8, [x1, #16]
    1198:	cmp	w8, #0x13
    119c:	b.ne	1178 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1178>  // b.any
    11a0:	ldr	x22, [x1, #24]
    11a4:	cbz	x22, 1320 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1320>
    11a8:	ldrb	w8, [x22]
    11ac:	cmp	w8, #0x2
    11b0:	b.eq	1180 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1180>  // b.none
    11b4:	mov	x0, x19
    11b8:	mov	x1, x20
    11bc:	bl	3828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    11c0:	add	w1, w0, #0x1
    11c4:	mov	x0, x19
    11c8:	mov	x2, x22
    11cc:	bl	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    11d0:	b	1180 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1180>
    11d4:	ldr	x1, [x21]
    11d8:	mov	x0, x19
    11dc:	bl	1e60 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    11e0:	ldrb	w8, [x21, #16]
    11e4:	sub	w8, w8, #0x1d
    11e8:	cmp	w8, #0x33
    11ec:	b.hi	1218 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1218>  // b.pmore
    11f0:	mov	w9, #0x1                   	// #1
    11f4:	lsl	x8, x9, x8
    11f8:	mov	x9, #0x41                  	// #65
    11fc:	movk	x9, #0x8, lsl #48
    1200:	tst	x8, x9
    1204:	b.eq	1218 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1218>  // b.none
    1208:	cbz	x23, 1218 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1218>
    120c:	ldr	x1, [x21, #56]
    1210:	mov	x0, x19
    1214:	bl	1a68 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
    1218:	str	wzr, [sp, #56]
    121c:	ldrsh	w8, [x21, #18]
    1220:	tbnz	w8, #31, 1274 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1274>
    1224:	add	x0, x21, #0x30
    1228:	bl	0 <_ZNK4llvm8DebugLoc3getEv>
    122c:	cbz	x0, 1120 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1120>
    1230:	ldr	w8, [x0, #8]
    1234:	mov	x21, x0
    1238:	neg	x9, x8
    123c:	lsl	x9, x9, #3
    1240:	cbz	x9, 1120 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1120>
    1244:	neg	x25, x8, lsl #3
    1248:	ldr	x22, [x21, x25]
    124c:	mov	x0, x19
    1250:	mov	x1, x20
    1254:	bl	3828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    1258:	add	w1, w0, #0x1
    125c:	mov	x0, x19
    1260:	mov	x2, x22
    1264:	bl	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    1268:	adds	x25, x25, #0x8
    126c:	b.ne	1248 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1248>  // b.any
    1270:	b	1120 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1120>
    1274:	add	x1, sp, #0x30
    1278:	mov	x0, x21
    127c:	bl	0 <_ZNK4llvm11Instruction35getAllMetadataOtherThanDebugLocImplERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
    1280:	ldr	w8, [sp, #56]
    1284:	cbz	w8, 1224 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1224>
    1288:	mov	x25, xzr
    128c:	sub	x28, x8, #0x1
    1290:	mov	w26, #0x8                   	// #8
    1294:	ldr	x8, [sp, #48]
    1298:	mov	x0, x19
    129c:	mov	x1, x20
    12a0:	ldr	x22, [x8, x26]
    12a4:	bl	3828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    12a8:	add	w1, w0, #0x1
    12ac:	mov	x0, x19
    12b0:	mov	x2, x22
    12b4:	bl	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    12b8:	cmp	x28, x25
    12bc:	b.eq	1224 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1224>  // b.none
    12c0:	ldr	w8, [sp, #56]
    12c4:	add	x25, x25, #0x1
    12c8:	add	x26, x26, #0x10
    12cc:	cmp	x25, x8
    12d0:	b.cc	1294 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1294>  // b.lo, b.ul, b.last
    12d4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12d8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12dc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12e0:	add	x0, x0, #0x0
    12e4:	add	x1, x1, #0x0
    12e8:	add	x3, x3, #0x0
    12ec:	mov	w2, #0x95                  	// #149
    12f0:	bl	0 <__assert_fail>
    12f4:	ldur	x21, [x29, #-32]
    12f8:	cbnz	x21, b18 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb18>
    12fc:	b	b20 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb20>
    1300:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1304:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1308:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    130c:	add	x0, x0, #0x0
    1310:	add	x1, x1, #0x0
    1314:	add	x3, x3, #0x0
    1318:	mov	w2, #0x69                  	// #105
    131c:	bl	0 <__assert_fail>
    1320:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1324:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1328:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    132c:	add	x0, x0, #0x0
    1330:	add	x1, x1, #0x0
    1334:	add	x3, x3, #0x0
    1338:	mov	w2, #0x69                  	// #105
    133c:	bl	0 <__assert_fail>
    1340:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1344:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1348:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    134c:	add	x0, x0, #0x0
    1350:	add	x1, x1, #0x0
    1354:	add	x3, x3, #0x0
    1358:	mov	w2, #0x8b                  	// #139
    135c:	bl	0 <__assert_fail>
    1360:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1364:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1368:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    136c:	add	x0, x0, #0x0
    1370:	add	x1, x1, #0x0
    1374:	add	x3, x3, #0x0
    1378:	mov	w2, #0x8b                  	// #139
    137c:	bl	0 <__assert_fail>
    1380:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1384:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1388:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    138c:	add	x0, x0, #0x0
    1390:	add	x1, x1, #0x0
    1394:	add	x3, x3, #0x0
    1398:	mov	w2, #0x69                  	// #105
    139c:	bl	0 <__assert_fail>
    13a0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13a4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13a8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13ac:	add	x0, x0, #0x0
    13b0:	add	x1, x1, #0x0
    13b4:	add	x3, x3, #0x0
    13b8:	mov	w2, #0x8b                  	// #139
    13bc:	bl	0 <__assert_fail>
    13c0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13c4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13c8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13cc:	add	x0, x0, #0x0
    13d0:	add	x1, x1, #0x0
    13d4:	add	x3, x3, #0x0
    13d8:	mov	w2, #0x8b                  	// #139
    13dc:	bl	0 <__assert_fail>
    13e0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13e4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13e8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13ec:	add	x0, x0, #0x0
    13f0:	add	x1, x1, #0x0
    13f4:	add	x3, x3, #0x0
    13f8:	mov	w2, #0x8b                  	// #139
    13fc:	bl	0 <__assert_fail>
    1400:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1404:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1408:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    140c:	add	x0, x0, #0x0
    1410:	add	x1, x1, #0x0
    1414:	add	x3, x3, #0x0
    1418:	mov	w2, #0x8b                  	// #139
    141c:	bl	0 <__assert_fail>
    1420:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1424:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1428:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    142c:	add	x0, x0, #0x0
    1430:	add	x1, x1, #0x0
    1434:	add	x3, x3, #0x0
    1438:	mov	w2, #0x69                  	// #105
    143c:	bl	0 <__assert_fail>
    1440:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1444:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1448:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    144c:	add	x0, x0, #0x0
    1450:	add	x1, x1, #0x0
    1454:	add	x3, x3, #0x0
    1458:	mov	w2, #0x8b                  	// #139
    145c:	bl	0 <__assert_fail>
    1460:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1464:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1468:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    146c:	add	x0, x0, #0x0
    1470:	add	x1, x1, #0x0
    1474:	add	x3, x3, #0x0
    1478:	mov	w2, #0x8b                  	// #139
    147c:	bl	0 <__assert_fail>

0000000000001480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>:
    1480:	sub	sp, sp, #0x60
    1484:	stp	x29, x30, [sp, #16]
    1488:	stp	x26, x25, [sp, #32]
    148c:	stp	x24, x23, [sp, #48]
    1490:	stp	x22, x21, [sp, #64]
    1494:	stp	x20, x19, [sp, #80]
    1498:	add	x29, sp, #0x10
    149c:	str	x1, [sp, #8]
    14a0:	ldr	x8, [x1]
    14a4:	ldrb	w8, [x8, #8]
    14a8:	cbz	w8, 19dc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x55c>
    14ac:	ldrb	w8, [x1, #16]
    14b0:	cmp	w8, #0x13
    14b4:	b.eq	19fc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x57c>  // b.none
    14b8:	ldr	w9, [x0, #104]
    14bc:	mov	x19, x0
    14c0:	add	x20, x0, #0x50
    14c4:	cbz	w9, 1538 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0xb8>
    14c8:	orr	x8, x1, #0x8
    14cc:	cmn	x8, #0x8
    14d0:	b.eq	19bc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x53c>  // b.none
    14d4:	ldr	x8, [x19, #88]
    14d8:	ubfx	x10, x1, #4, #28
    14dc:	eor	w10, w10, w1, lsr #9
    14e0:	sub	w9, w9, #0x1
    14e4:	and	w10, w10, w9
    14e8:	add	x21, x8, w10, uxtw #4
    14ec:	ldr	x12, [x21]
    14f0:	cmp	x12, x1
    14f4:	b.eq	155c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0xdc>  // b.none
    14f8:	mov	x11, xzr
    14fc:	mov	w14, #0x1                   	// #1
    1500:	mov	x13, #0xfffffffffffffff0    	// #-16
    1504:	cmn	x12, #0x8
    1508:	b.eq	1984 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x504>  // b.none
    150c:	cmp	x11, #0x0
    1510:	add	w10, w10, w14
    1514:	ccmp	x12, x13, #0x0, eq  // eq = none
    1518:	and	w10, w10, w9
    151c:	csel	x11, x11, x21, ne  // ne = any
    1520:	add	x21, x8, w10, uxtw #4
    1524:	ldr	x12, [x21]
    1528:	add	w14, w14, #0x1
    152c:	cmp	x12, x1
    1530:	b.eq	155c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0xdc>  // b.none
    1534:	b	1504 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x84>
    1538:	mov	x3, xzr
    153c:	add	x1, sp, #0x8
    1540:	add	x2, sp, #0x8
    1544:	mov	x0, x20
    1548:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    154c:	ldr	x8, [sp, #8]
    1550:	mov	x21, x0
    1554:	str	wzr, [x0, #8]
    1558:	str	x8, [x0]
    155c:	ldr	w8, [x21, #8]
    1560:	cbz	w8, 1580 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x100>
    1564:	ldr	x9, [x19, #112]
    1568:	sub	w8, w8, #0x1
    156c:	add	x8, x9, w8, uxtw #4
    1570:	ldr	w9, [x8, #8]
    1574:	add	w9, w9, #0x1
    1578:	str	w9, [x8, #8]
    157c:	b	1968 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x4e8>
    1580:	ldr	x8, [sp, #8]
    1584:	cbz	x8, 1a1c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x59c>
    1588:	ldrb	w9, [x8, #16]
    158c:	cmp	w9, #0x3
    1590:	b.eq	1598 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x118>  // b.none
    1594:	cbnz	w9, 1688 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x208>
    1598:	ldr	x8, [x8, #48]
    159c:	str	x8, [sp]
    15a0:	cbz	x8, 1684 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x204>
    15a4:	add	x0, x19, #0x88
    15a8:	mov	x1, sp
    15ac:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    15b0:	ldr	w8, [x0]
    15b4:	cbnz	w8, 1684 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x204>
    15b8:	ldp	x22, x8, [x19, #184]
    15bc:	sub	x23, x8, x22
    15c0:	lsr	x9, x23, #3
    15c4:	add	w9, w9, #0x1
    15c8:	str	w9, [x0]
    15cc:	ldr	x9, [x19, #200]
    15d0:	cmp	x9, x8
    15d4:	b.eq	15f0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x170>  // b.none
    15d8:	ldr	x9, [sp]
    15dc:	str	x9, [x8]
    15e0:	ldr	x8, [x19, #192]
    15e4:	add	x8, x8, #0x8
    15e8:	str	x8, [x19, #192]
    15ec:	b	1684 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x204>
    15f0:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    15f4:	cmp	x23, x8
    15f8:	b.eq	1a5c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x5dc>  // b.none
    15fc:	asr	x26, x23, #3
    1600:	cmp	x23, #0x0
    1604:	csinc	x8, x26, xzr, ne  // ne = any
    1608:	adds	x8, x8, x26
    160c:	lsr	x10, x8, #60
    1610:	cset	w9, cs  // cs = hs, nlast
    1614:	cmp	x10, #0x0
    1618:	cset	w10, ne  // ne = any
    161c:	orr	w9, w9, w10
    1620:	cmp	w9, #0x0
    1624:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    1628:	csel	x25, x9, x8, ne  // ne = any
    162c:	cbz	x25, 1640 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1c0>
    1630:	lsl	x0, x25, #3
    1634:	bl	0 <_Znwm>
    1638:	mov	x24, x0
    163c:	b	1644 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1c4>
    1640:	mov	x24, xzr
    1644:	ldr	x8, [sp]
    1648:	add	x26, x24, x26, lsl #3
    164c:	cmp	x23, #0x1
    1650:	str	x8, [x26]
    1654:	b.lt	1668 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1e8>  // b.tstop
    1658:	mov	x0, x24
    165c:	mov	x1, x22
    1660:	mov	x2, x23
    1664:	bl	0 <memmove>
    1668:	add	x23, x26, #0x8
    166c:	cbz	x22, 1678 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1f8>
    1670:	mov	x0, x22
    1674:	bl	0 <_ZdlPv>
    1678:	add	x8, x24, x25, lsl #3
    167c:	stp	x24, x23, [x19, #184]
    1680:	str	x8, [x19, #200]
    1684:	ldr	x8, [sp, #8]
    1688:	ldr	x1, [x8]
    168c:	mov	x0, x19
    1690:	bl	1e60 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    1694:	ldr	x23, [sp, #8]
    1698:	cbz	x23, 1a3c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x5bc>
    169c:	ldrb	w8, [x23, #16]
    16a0:	sub	w8, w8, #0x4
    16a4:	cmp	w8, #0xc
    16a8:	b.hi	16cc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x24c>  // b.pmore
    16ac:	ldr	w9, [x23, #20]
    16b0:	and	x8, x9, #0xfffffff
    16b4:	cbz	w8, 16cc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x24c>
    16b8:	tbnz	w9, #30, 1748 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x2c8>
    16bc:	mov	w9, #0x18                  	// #24
    16c0:	mneg	x9, x8, x9
    16c4:	add	x21, x23, x9
    16c8:	b	174c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x2cc>
    16cc:	ldp	x24, x8, [x19, #120]
    16d0:	cmp	x24, x8
    16d4:	b.eq	16f0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x270>  // b.none
    16d8:	mov	w8, #0x1                   	// #1
    16dc:	stp	x23, x8, [x24]
    16e0:	ldp	x22, x8, [x19, #112]
    16e4:	add	x23, x8, #0x10
    16e8:	str	x23, [x19, #120]
    16ec:	b	18d0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x450>
    16f0:	ldr	x20, [x19, #112]
    16f4:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
    16f8:	sub	x8, x24, x20
    16fc:	cmp	x8, x9
    1700:	b.eq	1a5c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x5dc>  // b.none
    1704:	asr	x26, x8, #4
    1708:	cmp	x8, #0x0
    170c:	csinc	x8, x26, xzr, ne  // ne = any
    1710:	adds	x8, x8, x26
    1714:	lsr	x10, x8, #59
    1718:	cset	w9, cs  // cs = hs, nlast
    171c:	cmp	x10, #0x0
    1720:	cset	w10, ne  // ne = any
    1724:	orr	w9, w9, w10
    1728:	cmp	w9, #0x0
    172c:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    1730:	csel	x25, x9, x8, ne  // ne = any
    1734:	cbz	x25, 187c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x3fc>
    1738:	lsl	x0, x25, #4
    173c:	bl	0 <_Znwm>
    1740:	mov	x22, x0
    1744:	b	1880 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x400>
    1748:	ldur	x21, [x23, #-8]
    174c:	add	x8, x8, x8, lsl #1
    1750:	lsl	x22, x8, #3
    1754:	b	1764 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x2e4>
    1758:	subs	x22, x22, #0x18
    175c:	add	x21, x21, #0x18
    1760:	b.eq	1784 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x304>  // b.none
    1764:	ldr	x1, [x21]
    1768:	cbz	x1, 199c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x51c>
    176c:	ldrb	w8, [x1, #16]
    1770:	cmp	w8, #0x12
    1774:	b.eq	1758 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x2d8>  // b.none
    1778:	mov	x0, x19
    177c:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    1780:	b	1758 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x2d8>
    1784:	ldp	x23, x8, [x19, #120]
    1788:	ldr	x25, [sp, #8]
    178c:	cmp	x23, x8
    1790:	b.eq	1824 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x3a4>  // b.none
    1794:	mov	w8, #0x1                   	// #1
    1798:	stp	x25, x8, [x23]
    179c:	ldp	x21, x8, [x19, #112]
    17a0:	add	x23, x8, #0x10
    17a4:	str	x23, [x19, #120]
    17a8:	ldr	w10, [x20, #24]
    17ac:	cbz	w10, 193c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x4bc>
    17b0:	ldr	x8, [sp, #8]
    17b4:	orr	x9, x8, #0x8
    17b8:	cmn	x9, #0x8
    17bc:	b.eq	19bc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x53c>  // b.none
    17c0:	ldr	x9, [x20, #8]
    17c4:	ubfx	x11, x8, #4, #28
    17c8:	eor	w11, w11, w8, lsr #9
    17cc:	sub	w10, w10, #0x1
    17d0:	and	w11, w11, w10
    17d4:	add	x0, x9, w11, uxtw #4
    17d8:	ldr	x13, [x0]
    17dc:	cmp	x13, x8
    17e0:	b.eq	195c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x4dc>  // b.none
    17e4:	mov	x12, xzr
    17e8:	mov	w15, #0x1                   	// #1
    17ec:	mov	x14, #0xfffffffffffffff0    	// #-16
    17f0:	cmn	x13, #0x8
    17f4:	b.eq	1990 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x510>  // b.none
    17f8:	cmp	x12, #0x0
    17fc:	add	w11, w11, w15
    1800:	ccmp	x13, x14, #0x0, eq  // eq = none
    1804:	and	w11, w11, w10
    1808:	csel	x12, x12, x0, ne  // ne = any
    180c:	add	x0, x9, w11, uxtw #4
    1810:	ldr	x13, [x0]
    1814:	add	w15, w15, #0x1
    1818:	cmp	x13, x8
    181c:	b.eq	195c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x4dc>  // b.none
    1820:	b	17f0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x370>
    1824:	ldr	x22, [x19, #112]
    1828:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
    182c:	sub	x8, x23, x22
    1830:	cmp	x8, x9
    1834:	b.eq	1a5c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x5dc>  // b.none
    1838:	asr	x26, x8, #4
    183c:	cmp	x8, #0x0
    1840:	csinc	x8, x26, xzr, ne  // ne = any
    1844:	adds	x8, x8, x26
    1848:	lsr	x10, x8, #59
    184c:	cset	w9, cs  // cs = hs, nlast
    1850:	cmp	x10, #0x0
    1854:	cset	w10, ne  // ne = any
    1858:	orr	w9, w9, w10
    185c:	cmp	w9, #0x0
    1860:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    1864:	csel	x24, x9, x8, ne  // ne = any
    1868:	cbz	x24, 18e0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x460>
    186c:	lsl	x0, x24, #4
    1870:	bl	0 <_Znwm>
    1874:	mov	x21, x0
    1878:	b	18e4 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x464>
    187c:	mov	x22, xzr
    1880:	add	x8, x22, x26, lsl #4
    1884:	mov	w9, #0x1                   	// #1
    1888:	cmp	x24, x20
    188c:	stp	x23, x9, [x8]
    1890:	mov	x8, x22
    1894:	b.eq	18b4 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x434>  // b.none
    1898:	mov	x8, x22
    189c:	mov	x9, x20
    18a0:	ldr	q0, [x9], #16
    18a4:	cmp	x24, x9
    18a8:	str	q0, [x8]
    18ac:	add	x8, x8, #0x10
    18b0:	b.ne	18a0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x420>  // b.any
    18b4:	add	x23, x8, #0x10
    18b8:	cbz	x20, 18c4 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x444>
    18bc:	mov	x0, x20
    18c0:	bl	0 <_ZdlPv>
    18c4:	add	x8, x22, x25, lsl #4
    18c8:	stp	x22, x23, [x19, #112]
    18cc:	str	x8, [x19, #128]
    18d0:	sub	x8, x23, x22
    18d4:	lsr	x8, x8, #4
    18d8:	str	w8, [x21, #8]
    18dc:	b	1968 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x4e8>
    18e0:	mov	x21, xzr
    18e4:	add	x8, x21, x26, lsl #4
    18e8:	mov	w9, #0x1                   	// #1
    18ec:	cmp	x23, x22
    18f0:	stp	x25, x9, [x8]
    18f4:	mov	x8, x21
    18f8:	b.eq	1918 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x498>  // b.none
    18fc:	mov	x8, x21
    1900:	mov	x9, x22
    1904:	ldr	q0, [x9], #16
    1908:	cmp	x23, x9
    190c:	str	q0, [x8]
    1910:	add	x8, x8, #0x10
    1914:	b.ne	1904 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x484>  // b.any
    1918:	add	x23, x8, #0x10
    191c:	cbz	x22, 1928 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x4a8>
    1920:	mov	x0, x22
    1924:	bl	0 <_ZdlPv>
    1928:	add	x8, x21, x24, lsl #4
    192c:	stp	x21, x23, [x19, #112]
    1930:	str	x8, [x19, #128]
    1934:	ldr	w10, [x20, #24]
    1938:	cbnz	w10, 17b0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x330>
    193c:	mov	x3, xzr
    1940:	add	x1, sp, #0x8
    1944:	add	x2, sp, #0x8
    1948:	mov	x0, x20
    194c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1950:	ldr	x8, [sp, #8]
    1954:	str	wzr, [x0, #8]
    1958:	str	x8, [x0]
    195c:	sub	x8, x23, x21
    1960:	lsr	x8, x8, #4
    1964:	str	w8, [x0, #8]
    1968:	ldp	x20, x19, [sp, #80]
    196c:	ldp	x22, x21, [sp, #64]
    1970:	ldp	x24, x23, [sp, #48]
    1974:	ldp	x26, x25, [sp, #32]
    1978:	ldp	x29, x30, [sp, #16]
    197c:	add	sp, sp, #0x60
    1980:	ret
    1984:	cmp	x11, #0x0
    1988:	csel	x3, x21, x11, eq  // eq = none
    198c:	b	153c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0xbc>
    1990:	cmp	x12, #0x0
    1994:	csel	x3, x0, x12, eq  // eq = none
    1998:	b	1940 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x4c0>
    199c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19a0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19a4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19a8:	add	x0, x0, #0x0
    19ac:	add	x1, x1, #0x0
    19b0:	add	x3, x3, #0x0
    19b4:	mov	w2, #0x5b                  	// #91
    19b8:	bl	0 <__assert_fail>
    19bc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19c0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19c4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19c8:	add	x0, x0, #0x0
    19cc:	add	x1, x1, #0x0
    19d0:	add	x3, x3, #0x0
    19d4:	mov	w2, #0x252                 	// #594
    19d8:	bl	0 <__assert_fail>
    19dc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19e0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19e4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19e8:	add	x0, x0, #0x0
    19ec:	add	x1, x1, #0x0
    19f0:	add	x3, x3, #0x0
    19f4:	mov	w2, #0x325                 	// #805
    19f8:	bl	0 <__assert_fail>
    19fc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a00:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a04:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a08:	add	x0, x0, #0x0
    1a0c:	add	x1, x1, #0x0
    1a10:	add	x3, x3, #0x0
    1a14:	mov	w2, #0x326                 	// #806
    1a18:	bl	0 <__assert_fail>
    1a1c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a20:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a24:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a28:	add	x0, x0, #0x0
    1a2c:	add	x1, x1, #0x0
    1a30:	add	x3, x3, #0x0
    1a34:	mov	w2, #0x69                  	// #105
    1a38:	bl	0 <__assert_fail>
    1a3c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a40:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a44:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a48:	add	x0, x0, #0x0
    1a4c:	add	x1, x1, #0x0
    1a50:	add	x3, x3, #0x0
    1a54:	mov	w2, #0x69                  	// #105
    1a58:	bl	0 <__assert_fail>
    1a5c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a60:	add	x0, x0, #0x0
    1a64:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000001a68 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>:
    1a68:	sub	sp, sp, #0x80
    1a6c:	stp	x29, x30, [sp, #32]
    1a70:	stp	x28, x27, [sp, #48]
    1a74:	stp	x26, x25, [sp, #64]
    1a78:	stp	x24, x23, [sp, #80]
    1a7c:	stp	x22, x21, [sp, #96]
    1a80:	stp	x20, x19, [sp, #112]
    1a84:	add	x29, sp, #0x20
    1a88:	str	x1, [sp, #16]
    1a8c:	cbz	x1, 1e08 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x3a0>
    1a90:	ldr	w9, [x0, #408]
    1a94:	mov	x19, x0
    1a98:	cbz	w9, 1b0c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xa4>
    1a9c:	orr	x8, x1, #0x4
    1aa0:	cmn	x8, #0x4
    1aa4:	b.eq	1e40 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x3d8>  // b.none
    1aa8:	ldr	x8, [x19, #392]
    1aac:	ubfx	x10, x1, #4, #28
    1ab0:	eor	w10, w10, w1, lsr #9
    1ab4:	sub	w9, w9, #0x1
    1ab8:	and	w10, w10, w9
    1abc:	add	x20, x8, w10, uxtw #4
    1ac0:	ldr	x12, [x20]
    1ac4:	cmp	x12, x1
    1ac8:	b.eq	1b30 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xc8>  // b.none
    1acc:	mov	x11, xzr
    1ad0:	mov	w14, #0x1                   	// #1
    1ad4:	mov	x13, #0xfffffffffffffff8    	// #-8
    1ad8:	cmn	x12, #0x4
    1adc:	b.eq	1e28 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x3c0>  // b.none
    1ae0:	cmp	x11, #0x0
    1ae4:	add	w10, w10, w14
    1ae8:	ccmp	x12, x13, #0x0, eq  // eq = none
    1aec:	and	w10, w10, w9
    1af0:	csel	x11, x11, x20, ne  // ne = any
    1af4:	add	x20, x8, w10, uxtw #4
    1af8:	ldr	x12, [x20]
    1afc:	add	w14, w14, #0x1
    1b00:	cmp	x12, x1
    1b04:	b.eq	1b30 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xc8>  // b.none
    1b08:	b	1ad8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x70>
    1b0c:	mov	x3, xzr
    1b10:	add	x0, x19, #0x180
    1b14:	add	x1, sp, #0x10
    1b18:	add	x2, sp, #0x10
    1b1c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1b20:	ldr	x8, [sp, #16]
    1b24:	mov	x20, x0
    1b28:	str	wzr, [x0, #8]
    1b2c:	str	x8, [x0]
    1b30:	ldr	w8, [x20, #8]
    1b34:	cbz	w8, 1b48 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xe0>
    1b38:	add	x0, sp, #0x10
    1b3c:	bl	0 <_ZNK4llvm13AttributeList14getNumAttrSetsEv>
    1b40:	cbnz	w0, 1ca0 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x238>
    1b44:	b	1e08 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x3a0>
    1b48:	ldp	x23, x8, [x19, #424]
    1b4c:	cmp	x23, x8
    1b50:	b.eq	1b6c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x104>  // b.none
    1b54:	ldr	x8, [sp, #16]
    1b58:	str	x8, [x23]
    1b5c:	ldp	x22, x8, [x19, #416]
    1b60:	add	x23, x8, #0x8
    1b64:	str	x23, [x19, #424]
    1b68:	b	1c88 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x220>
    1b6c:	ldr	x21, [x19, #416]
    1b70:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    1b74:	sub	x8, x23, x21
    1b78:	cmp	x8, x9
    1b7c:	b.eq	1e34 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x3cc>  // b.none
    1b80:	asr	x25, x8, #3
    1b84:	cmp	x8, #0x0
    1b88:	csinc	x8, x25, xzr, ne  // ne = any
    1b8c:	adds	x8, x8, x25
    1b90:	lsr	x10, x8, #60
    1b94:	cset	w9, cs  // cs = hs, nlast
    1b98:	cmp	x10, #0x0
    1b9c:	cset	w10, ne  // ne = any
    1ba0:	orr	w9, w9, w10
    1ba4:	cmp	w9, #0x0
    1ba8:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    1bac:	csel	x24, x9, x8, ne  // ne = any
    1bb0:	cbz	x24, 1bc4 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x15c>
    1bb4:	lsl	x0, x24, #3
    1bb8:	bl	0 <_Znwm>
    1bbc:	mov	x22, x0
    1bc0:	b	1bc8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x160>
    1bc4:	mov	x22, xzr
    1bc8:	ldr	x8, [sp, #16]
    1bcc:	subs	x9, x23, x21
    1bd0:	str	x8, [x22, x25, lsl #3]
    1bd4:	mov	x8, x22
    1bd8:	b.eq	1c6c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x204>  // b.none
    1bdc:	sub	x10, x9, #0x8
    1be0:	cmp	x10, #0x18
    1be4:	mov	x8, x22
    1be8:	mov	x9, x21
    1bec:	b.cc	1c5c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1f4>  // b.lo, b.ul, b.last
    1bf0:	and	x8, x10, #0xfffffffffffffff8
    1bf4:	add	x8, x8, #0x8
    1bf8:	add	x9, x21, x8
    1bfc:	cmp	x22, x9
    1c00:	b.cs	1c18 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1b0>  // b.hs, b.nlast
    1c04:	add	x8, x22, x8
    1c08:	cmp	x21, x8
    1c0c:	mov	x8, x22
    1c10:	mov	x9, x21
    1c14:	b.cc	1c5c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1f4>  // b.lo, b.ul, b.last
    1c18:	lsr	x8, x10, #3
    1c1c:	add	x10, x8, #0x1
    1c20:	and	x11, x10, #0x3ffffffffffffffc
    1c24:	lsl	x9, x11, #3
    1c28:	add	x12, x21, #0x10
    1c2c:	add	x8, x22, x9
    1c30:	add	x9, x21, x9
    1c34:	add	x13, x22, #0x10
    1c38:	mov	x14, x11
    1c3c:	ldp	q0, q1, [x12, #-16]
    1c40:	add	x12, x12, #0x20
    1c44:	subs	x14, x14, #0x4
    1c48:	stp	q0, q1, [x13, #-16]
    1c4c:	add	x13, x13, #0x20
    1c50:	b.ne	1c3c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1d4>  // b.any
    1c54:	cmp	x10, x11
    1c58:	b.eq	1c6c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x204>  // b.none
    1c5c:	ldr	x10, [x9], #8
    1c60:	cmp	x23, x9
    1c64:	str	x10, [x8], #8
    1c68:	b.ne	1c5c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1f4>  // b.any
    1c6c:	add	x23, x8, #0x8
    1c70:	cbz	x21, 1c7c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x214>
    1c74:	mov	x0, x21
    1c78:	bl	0 <_ZdlPv>
    1c7c:	add	x8, x22, x24, lsl #3
    1c80:	stp	x22, x23, [x19, #416]
    1c84:	str	x8, [x19, #432]
    1c88:	sub	x8, x23, x22
    1c8c:	lsr	x8, x8, #3
    1c90:	str	w8, [x20, #8]
    1c94:	add	x0, sp, #0x10
    1c98:	bl	0 <_ZNK4llvm13AttributeList14getNumAttrSetsEv>
    1c9c:	cbz	w0, 1e08 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x3a0>
    1ca0:	sub	w25, w0, #0x1
    1ca4:	add	x20, x19, #0x148
    1ca8:	mov	w21, #0xffffffff            	// #-1
    1cac:	b	1cdc <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x274>
    1cb0:	ldr	q0, [sp]
    1cb4:	str	q0, [x28]
    1cb8:	ldp	x24, x8, [x19, #360]
    1cbc:	add	x27, x8, #0x10
    1cc0:	str	x27, [x19, #368]
    1cc4:	sub	x8, x27, x24
    1cc8:	lsr	x8, x8, #4
    1ccc:	str	w8, [x22, #16]
    1cd0:	add	w21, w21, #0x1
    1cd4:	cmp	w21, w25
    1cd8:	b.eq	1e08 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x3a0>  // b.none
    1cdc:	add	x0, sp, #0x10
    1ce0:	mov	w1, w21
    1ce4:	bl	0 <_ZNK4llvm13AttributeList13getAttributesEj>
    1ce8:	cbz	x0, 1cd0 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x268>
    1cec:	str	x0, [sp, #8]
    1cf0:	mov	x1, sp
    1cf4:	sub	x2, x29, #0x8
    1cf8:	mov	x0, x20
    1cfc:	str	w21, [sp]
    1d00:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1d04:	ldur	x22, [x29, #-8]
    1d08:	tbz	w0, #0, 1d24 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x2bc>
    1d0c:	ldr	w8, [x22, #16]
    1d10:	cbnz	w8, 1cd0 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x268>
    1d14:	ldp	x28, x8, [x19, #368]
    1d18:	cmp	x28, x8
    1d1c:	b.ne	1cb0 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x248>  // b.any
    1d20:	b	1d5c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x2f4>
    1d24:	mov	x1, sp
    1d28:	mov	x2, sp
    1d2c:	mov	x0, x20
    1d30:	mov	x3, x22
    1d34:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1d38:	ldr	w8, [sp]
    1d3c:	mov	x22, x0
    1d40:	str	w8, [x0]
    1d44:	ldr	x8, [sp, #8]
    1d48:	str	wzr, [x0, #16]
    1d4c:	str	x8, [x0, #8]
    1d50:	ldp	x28, x8, [x19, #368]
    1d54:	cmp	x28, x8
    1d58:	b.ne	1cb0 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x248>  // b.any
    1d5c:	ldr	x23, [x19, #360]
    1d60:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
    1d64:	sub	x8, x28, x23
    1d68:	cmp	x8, x9
    1d6c:	b.eq	1e34 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x3cc>  // b.none
    1d70:	asr	x27, x8, #4
    1d74:	cmp	x8, #0x0
    1d78:	csinc	x8, x27, xzr, ne  // ne = any
    1d7c:	adds	x8, x8, x27
    1d80:	lsr	x10, x8, #59
    1d84:	cset	w9, cs  // cs = hs, nlast
    1d88:	cmp	x10, #0x0
    1d8c:	cset	w10, ne  // ne = any
    1d90:	orr	w9, w9, w10
    1d94:	cmp	w9, #0x0
    1d98:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    1d9c:	csel	x26, x9, x8, ne  // ne = any
    1da0:	cbz	x26, 1db4 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x34c>
    1da4:	lsl	x0, x26, #4
    1da8:	bl	0 <_Znwm>
    1dac:	mov	x24, x0
    1db0:	b	1db8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x350>
    1db4:	mov	x24, xzr
    1db8:	ldr	q0, [sp]
    1dbc:	cmp	x28, x23
    1dc0:	mov	x8, x24
    1dc4:	str	q0, [x24, x27, lsl #4]
    1dc8:	b.eq	1de8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x380>  // b.none
    1dcc:	mov	x8, x24
    1dd0:	mov	x9, x23
    1dd4:	ldr	q0, [x9], #16
    1dd8:	cmp	x28, x9
    1ddc:	str	q0, [x8]
    1de0:	add	x8, x8, #0x10
    1de4:	b.ne	1dd4 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x36c>  // b.any
    1de8:	add	x27, x8, #0x10
    1dec:	cbz	x23, 1df8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x390>
    1df0:	mov	x0, x23
    1df4:	bl	0 <_ZdlPv>
    1df8:	add	x8, x24, x26, lsl #4
    1dfc:	stp	x24, x27, [x19, #360]
    1e00:	str	x8, [x19, #376]
    1e04:	b	1cc4 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x25c>
    1e08:	ldp	x20, x19, [sp, #112]
    1e0c:	ldp	x22, x21, [sp, #96]
    1e10:	ldp	x24, x23, [sp, #80]
    1e14:	ldp	x26, x25, [sp, #64]
    1e18:	ldp	x28, x27, [sp, #48]
    1e1c:	ldp	x29, x30, [sp, #32]
    1e20:	add	sp, sp, #0x80
    1e24:	ret
    1e28:	cmp	x11, #0x0
    1e2c:	csel	x3, x20, x11, eq  // eq = none
    1e30:	b	1b10 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xa8>
    1e34:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e38:	add	x0, x0, #0x0
    1e3c:	bl	0 <_ZSt20__throw_length_errorPKc>
    1e40:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e44:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e48:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e4c:	add	x0, x0, #0x0
    1e50:	add	x1, x1, #0x0
    1e54:	add	x3, x3, #0x0
    1e58:	mov	w2, #0x252                 	// #594
    1e5c:	bl	0 <__assert_fail>

0000000000001e60 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>:
    1e60:	stp	x29, x30, [sp, #-80]!
    1e64:	str	x25, [sp, #16]
    1e68:	stp	x24, x23, [sp, #32]
    1e6c:	stp	x22, x21, [sp, #48]
    1e70:	stp	x20, x19, [sp, #64]
    1e74:	mov	x29, sp
    1e78:	str	x1, [x29, #24]
    1e7c:	ldr	w9, [x0, #48]
    1e80:	mov	x19, x0
    1e84:	add	x20, x0, #0x18
    1e88:	cbz	w9, 1efc <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x9c>
    1e8c:	orr	x8, x1, #0x8
    1e90:	cmn	x8, #0x8
    1e94:	b.eq	2118 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x2b8>  // b.none
    1e98:	ldr	x8, [x19, #32]
    1e9c:	ubfx	x10, x1, #4, #28
    1ea0:	eor	w10, w10, w1, lsr #9
    1ea4:	sub	w9, w9, #0x1
    1ea8:	and	w10, w10, w9
    1eac:	add	x0, x8, w10, uxtw #4
    1eb0:	ldr	x12, [x0]
    1eb4:	cmp	x12, x1
    1eb8:	b.eq	1f1c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xbc>  // b.none
    1ebc:	mov	x11, xzr
    1ec0:	mov	w14, #0x1                   	// #1
    1ec4:	mov	x13, #0xfffffffffffffff0    	// #-16
    1ec8:	cmn	x12, #0x8
    1ecc:	b.eq	2100 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x2a0>  // b.none
    1ed0:	cmp	x11, #0x0
    1ed4:	add	w10, w10, w14
    1ed8:	ccmp	x12, x13, #0x0, eq  // eq = none
    1edc:	and	w10, w10, w9
    1ee0:	csel	x11, x11, x0, ne  // ne = any
    1ee4:	add	x0, x8, w10, uxtw #4
    1ee8:	ldr	x12, [x0]
    1eec:	add	w14, w14, #0x1
    1ef0:	cmp	x12, x1
    1ef4:	b.eq	1f1c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xbc>  // b.none
    1ef8:	b	1ec8 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x68>
    1efc:	mov	x3, xzr
    1f00:	add	x1, x29, #0x18
    1f04:	add	x2, x29, #0x18
    1f08:	mov	x0, x20
    1f0c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1f10:	ldr	x8, [x29, #24]
    1f14:	str	wzr, [x0, #8]
    1f18:	str	x8, [x0]
    1f1c:	ldr	w8, [x0, #8]
    1f20:	cbnz	w8, 20e8 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x288>
    1f24:	ldr	x8, [x29, #24]
    1f28:	cbz	x8, 2138 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x2d8>
    1f2c:	ldr	w9, [x8, #8]
    1f30:	mov	w10, #0x4ff                 	// #1279
    1f34:	and	w9, w9, w10
    1f38:	cmp	w9, #0xd
    1f3c:	b.ne	1f48 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xe8>  // b.any
    1f40:	mov	w9, #0xffffffff            	// #-1
    1f44:	str	w9, [x0, #8]
    1f48:	ldr	w9, [x8, #12]
    1f4c:	cbz	w9, 1f6c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x10c>
    1f50:	ldr	x21, [x8, #16]
    1f54:	lsl	x22, x9, #3
    1f58:	ldr	x1, [x21], #8
    1f5c:	mov	x0, x19
    1f60:	bl	1e60 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    1f64:	subs	x22, x22, #0x8
    1f68:	b.ne	1f58 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xf8>  // b.any
    1f6c:	ldr	w10, [x20, #24]
    1f70:	cbz	w10, 1fe8 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x188>
    1f74:	ldr	x8, [x29, #24]
    1f78:	orr	x9, x8, #0x8
    1f7c:	cmn	x9, #0x8
    1f80:	b.eq	2118 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x2b8>  // b.none
    1f84:	ldr	x9, [x20, #8]
    1f88:	ubfx	x11, x8, #4, #28
    1f8c:	eor	w11, w11, w8, lsr #9
    1f90:	sub	w10, w10, #0x1
    1f94:	and	w11, w11, w10
    1f98:	add	x21, x9, w11, uxtw #4
    1f9c:	ldr	x13, [x21]
    1fa0:	cmp	x13, x8
    1fa4:	b.eq	200c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x1ac>  // b.none
    1fa8:	mov	x12, xzr
    1fac:	mov	w15, #0x1                   	// #1
    1fb0:	mov	x14, #0xfffffffffffffff0    	// #-16
    1fb4:	cmn	x13, #0x8
    1fb8:	b.eq	210c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x2ac>  // b.none
    1fbc:	cmp	x12, #0x0
    1fc0:	add	w11, w11, w15
    1fc4:	ccmp	x13, x14, #0x0, eq  // eq = none
    1fc8:	and	w11, w11, w10
    1fcc:	csel	x12, x12, x21, ne  // ne = any
    1fd0:	add	x21, x9, w11, uxtw #4
    1fd4:	ldr	x13, [x21]
    1fd8:	add	w15, w15, #0x1
    1fdc:	cmp	x13, x8
    1fe0:	b.eq	200c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x1ac>  // b.none
    1fe4:	b	1fb4 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x154>
    1fe8:	mov	x3, xzr
    1fec:	add	x1, x29, #0x18
    1ff0:	add	x2, x29, #0x18
    1ff4:	mov	x0, x20
    1ff8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1ffc:	ldr	x8, [x29, #24]
    2000:	mov	x21, x0
    2004:	str	wzr, [x0, #8]
    2008:	str	x8, [x0]
    200c:	ldr	w8, [x21, #8]
    2010:	add	w8, w8, #0x1
    2014:	cmp	w8, #0x2
    2018:	b.cs	20e8 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x288>  // b.hs, b.nlast
    201c:	ldp	x8, x9, [x19, #64]
    2020:	cmp	x8, x9
    2024:	b.eq	2040 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x1e0>  // b.none
    2028:	ldr	x9, [x29, #24]
    202c:	str	x9, [x8]
    2030:	ldp	x22, x8, [x19, #56]
    2034:	add	x23, x8, #0x8
    2038:	str	x23, [x19, #64]
    203c:	b	20dc <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x27c>
    2040:	ldr	x20, [x19, #56]
    2044:	sub	x23, x8, x20
    2048:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    204c:	cmp	x23, x8
    2050:	b.eq	2158 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x2f8>  // b.none
    2054:	asr	x25, x23, #3
    2058:	cmp	x23, #0x0
    205c:	csinc	x8, x25, xzr, ne  // ne = any
    2060:	adds	x8, x8, x25
    2064:	lsr	x10, x8, #60
    2068:	cset	w9, cs  // cs = hs, nlast
    206c:	cmp	x10, #0x0
    2070:	cset	w10, ne  // ne = any
    2074:	orr	w9, w9, w10
    2078:	cmp	w9, #0x0
    207c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    2080:	csel	x24, x9, x8, ne  // ne = any
    2084:	cbz	x24, 2098 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x238>
    2088:	lsl	x0, x24, #3
    208c:	bl	0 <_Znwm>
    2090:	mov	x22, x0
    2094:	b	209c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x23c>
    2098:	mov	x22, xzr
    209c:	ldr	x8, [x29, #24]
    20a0:	add	x25, x22, x25, lsl #3
    20a4:	cmp	x23, #0x1
    20a8:	str	x8, [x25]
    20ac:	b.lt	20c0 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x260>  // b.tstop
    20b0:	mov	x0, x22
    20b4:	mov	x1, x20
    20b8:	mov	x2, x23
    20bc:	bl	0 <memmove>
    20c0:	add	x23, x25, #0x8
    20c4:	cbz	x20, 20d0 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x270>
    20c8:	mov	x0, x20
    20cc:	bl	0 <_ZdlPv>
    20d0:	add	x8, x22, x24, lsl #3
    20d4:	stp	x22, x23, [x19, #56]
    20d8:	str	x8, [x19, #72]
    20dc:	sub	x8, x23, x22
    20e0:	lsr	x8, x8, #3
    20e4:	str	w8, [x21, #8]
    20e8:	ldp	x20, x19, [sp, #64]
    20ec:	ldp	x22, x21, [sp, #48]
    20f0:	ldp	x24, x23, [sp, #32]
    20f4:	ldr	x25, [sp, #16]
    20f8:	ldp	x29, x30, [sp], #80
    20fc:	ret
    2100:	cmp	x11, #0x0
    2104:	csel	x3, x0, x11, eq  // eq = none
    2108:	b	1f00 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xa0>
    210c:	cmp	x12, #0x0
    2110:	csel	x3, x21, x12, eq  // eq = none
    2114:	b	1fec <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x18c>
    2118:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    211c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2120:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2124:	add	x0, x0, #0x0
    2128:	add	x1, x1, #0x0
    212c:	add	x3, x3, #0x0
    2130:	mov	w2, #0x252                 	// #594
    2134:	bl	0 <__assert_fail>
    2138:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    213c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2140:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2144:	add	x0, x0, #0x0
    2148:	add	x1, x1, #0x0
    214c:	add	x3, x3, #0x0
    2150:	mov	w2, #0x69                  	// #105
    2154:	bl	0 <__assert_fail>
    2158:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    215c:	add	x0, x0, #0x0
    2160:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000002164 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE>:
    2164:	stp	x29, x30, [sp, #-48]!
    2168:	str	x21, [sp, #16]
    216c:	stp	x20, x19, [sp, #32]
    2170:	mov	x29, sp
    2174:	ldr	w8, [x1, #8]
    2178:	ldr	x9, [x1]
    217c:	mov	x19, x0
    2180:	cbz	w8, 21ac <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x48>
    2184:	add	x10, x9, #0x8
    2188:	mov	x20, x9
    218c:	b	2198 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x34>
    2190:	mov	x20, x10
    2194:	add	x10, x10, #0x8
    2198:	ldur	x11, [x10, #-8]
    219c:	cbz	x11, 2190 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x2c>
    21a0:	cmn	x11, #0x8
    21a4:	b.eq	2190 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x2c>  // b.none
    21a8:	b	21b0 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x4c>
    21ac:	mov	x20, x9
    21b0:	add	x21, x9, x8, lsl #3
    21b4:	cmp	x21, x20
    21b8:	b.eq	21e8 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x84>  // b.none
    21bc:	ldr	x8, [x20], #8
    21c0:	mov	x0, x19
    21c4:	ldr	x1, [x8, #8]
    21c8:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    21cc:	b	21d4 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x70>
    21d0:	add	x20, x20, #0x8
    21d4:	ldr	x8, [x20]
    21d8:	cbz	x8, 21d0 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x6c>
    21dc:	cmn	x8, #0x8
    21e0:	b.eq	21d0 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x6c>  // b.none
    21e4:	b	21b4 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x50>
    21e8:	ldp	x20, x19, [sp, #32]
    21ec:	ldr	x21, [sp, #16]
    21f0:	ldp	x29, x30, [sp], #48
    21f4:	ret

00000000000021f8 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE>:
    21f8:	stp	x29, x30, [sp, #-64]!
    21fc:	str	x23, [sp, #16]
    2200:	stp	x22, x21, [sp, #32]
    2204:	stp	x20, x19, [sp, #48]
    2208:	mov	x29, sp
    220c:	ldr	x19, [x1, #80]
    2210:	add	x23, x1, #0x48
    2214:	cmp	x23, x19
    2218:	b.eq	2278 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x80>  // b.none
    221c:	mov	x20, x0
    2220:	b	2230 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x38>
    2224:	ldr	x19, [x19, #8]
    2228:	cmp	x23, x19
    222c:	b.eq	2278 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x80>  // b.none
    2230:	ldrb	w8, [x19]
    2234:	tbnz	w8, #2, 228c <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x94>
    2238:	mov	x0, x19
    223c:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
    2240:	cbz	w0, 2224 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x2c>
    2244:	mov	w21, w0
    2248:	mov	w22, wzr
    224c:	mov	x0, x19
    2250:	mov	w1, w22
    2254:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
    2258:	mov	x2, x0
    225c:	mov	x0, x20
    2260:	mov	w1, wzr
    2264:	bl	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    2268:	add	w22, w22, #0x1
    226c:	cmp	w21, w22
    2270:	b.ne	224c <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x54>  // b.any
    2274:	b	2224 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x2c>
    2278:	ldp	x20, x19, [sp, #48]
    227c:	ldp	x22, x21, [sp, #32]
    2280:	ldr	x23, [sp, #16]
    2284:	ldp	x29, x30, [sp], #64
    2288:	ret
    228c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2290:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2294:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2298:	add	x0, x0, #0x0
    229c:	add	x1, x1, #0x0
    22a0:	add	x3, x3, #0x0
    22a4:	mov	w2, #0x8b                  	// #139
    22a8:	bl	0 <__assert_fail>

00000000000022ac <_ZN4llvm15ValueEnumerator17EnumerateMetadataEPKNS_8FunctionEPKNS_8MetadataE>:
    22ac:	stp	x29, x30, [sp, #-32]!
    22b0:	stp	x20, x19, [sp, #16]
    22b4:	mov	x29, sp
    22b8:	mov	x19, x2
    22bc:	mov	x20, x0
    22c0:	cbz	x1, 22d0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEPKNS_8FunctionEPKNS_8MetadataE+0x24>
    22c4:	mov	x0, x20
    22c8:	bl	3828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    22cc:	add	w1, w0, #0x1
    22d0:	mov	x0, x20
    22d4:	mov	x2, x19
    22d8:	ldp	x20, x19, [sp, #16]
    22dc:	ldp	x29, x30, [sp], #32
    22e0:	b	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>

00000000000022e4 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE>:
    22e4:	stp	x29, x30, [sp, #-48]!
    22e8:	str	x21, [sp, #16]
    22ec:	stp	x20, x19, [sp, #32]
    22f0:	mov	x29, sp
    22f4:	mov	x20, x1
    22f8:	ldr	x1, [x1]
    22fc:	mov	x19, x0
    2300:	bl	1e60 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    2304:	cbz	x20, 2414 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x130>
    2308:	ldrb	w8, [x20, #16]
    230c:	cmp	w8, #0x13
    2310:	b.eq	2434 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x150>  // b.none
    2314:	cmp	w8, #0x10
    2318:	b.hi	2354 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>  // b.pmore
    231c:	ldr	w9, [x19, #104]
    2320:	cbz	w9, 2390 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xac>
    2324:	orr	x8, x20, #0x8
    2328:	cmn	x8, #0x8
    232c:	b.eq	2454 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x170>  // b.none
    2330:	ldr	x8, [x19, #88]
    2334:	ubfx	x10, x20, #4, #28
    2338:	eor	w10, w10, w20, lsr #9
    233c:	sub	w9, w9, #0x1
    2340:	and	w10, w9, w10
    2344:	lsl	x11, x10, #4
    2348:	ldr	x11, [x8, x11]
    234c:	cmp	x11, x20
    2350:	b.ne	2364 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x80>  // b.any
    2354:	ldp	x20, x19, [sp, #32]
    2358:	ldr	x21, [sp, #16]
    235c:	ldp	x29, x30, [sp], #48
    2360:	ret
    2364:	mov	w12, #0x1                   	// #1
    2368:	cmn	x11, #0x8
    236c:	b.eq	2390 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xac>  // b.none
    2370:	add	w10, w10, w12
    2374:	and	w10, w10, w9
    2378:	lsl	x11, x10, #4
    237c:	ldr	x11, [x8, x11]
    2380:	add	w12, w12, #0x1
    2384:	cmp	x11, x20
    2388:	b.eq	2354 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>  // b.none
    238c:	b	2368 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x84>
    2390:	ldr	w8, [x20, #20]
    2394:	tbnz	w8, #30, 23b0 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xcc>
    2398:	and	w8, w8, #0xfffffff
    239c:	mov	w9, #0x18                  	// #24
    23a0:	mneg	x9, x8, x9
    23a4:	add	x20, x20, x9
    23a8:	cbnz	x8, 23bc <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xd8>
    23ac:	b	2354 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>
    23b0:	ldur	x20, [x20, #-8]
    23b4:	and	x8, x8, #0xfffffff
    23b8:	cbz	x8, 2354 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>
    23bc:	add	x8, x8, x8, lsl #1
    23c0:	lsl	x21, x8, #3
    23c4:	b	23d4 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xf0>
    23c8:	subs	x21, x21, #0x18
    23cc:	add	x20, x20, #0x18
    23d0:	b.eq	2354 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>  // b.none
    23d4:	ldr	x1, [x20]
    23d8:	cbz	x1, 23f4 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x110>
    23dc:	ldrb	w8, [x1, #16]
    23e0:	cmp	w8, #0x12
    23e4:	b.eq	23c8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xe4>  // b.none
    23e8:	mov	x0, x19
    23ec:	bl	22e4 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE>
    23f0:	b	23c8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xe4>
    23f4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23f8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    23fc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2400:	add	x0, x0, #0x0
    2404:	add	x1, x1, #0x0
    2408:	add	x3, x3, #0x0
    240c:	mov	w2, #0x69                  	// #105
    2410:	bl	0 <__assert_fail>
    2414:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2418:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    241c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2420:	add	x0, x0, #0x0
    2424:	add	x1, x1, #0x0
    2428:	add	x3, x3, #0x0
    242c:	mov	w2, #0x69                  	// #105
    2430:	bl	0 <__assert_fail>
    2434:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2438:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    243c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2440:	add	x0, x0, #0x0
    2444:	add	x1, x1, #0x0
    2448:	add	x3, x3, #0x0
    244c:	mov	w2, #0x37f                 	// #895
    2450:	bl	0 <__assert_fail>
    2454:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2458:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    245c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2460:	add	x0, x0, #0x0
    2464:	add	x1, x1, #0x0
    2468:	add	x3, x3, #0x0
    246c:	mov	w2, #0x252                 	// #594
    2470:	bl	0 <__assert_fail>

0000000000002474 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj>:
    2474:	sub	sp, sp, #0x70
    2478:	stp	x29, x30, [sp, #16]
    247c:	stp	x28, x27, [sp, #32]
    2480:	stp	x26, x25, [sp, #48]
    2484:	stp	x24, x23, [sp, #64]
    2488:	stp	x22, x21, [sp, #80]
    248c:	stp	x20, x19, [sp, #96]
    2490:	add	x29, sp, #0x10
    2494:	cmp	w1, w2
    2498:	b.eq	24bc <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x48>  // b.none
    249c:	add	w8, w1, #0x1
    24a0:	mov	w19, w2
    24a4:	mov	w20, w1
    24a8:	cmp	w8, w2
    24ac:	b.eq	24bc <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x48>  // b.none
    24b0:	ldrb	w8, [x0, #320]
    24b4:	mov	x21, x0
    24b8:	cbz	w8, 24dc <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x68>
    24bc:	ldp	x20, x19, [sp, #96]
    24c0:	ldp	x22, x21, [sp, #80]
    24c4:	ldp	x24, x23, [sp, #64]
    24c8:	ldp	x26, x25, [sp, #48]
    24cc:	ldp	x28, x27, [sp, #32]
    24d0:	ldp	x29, x30, [sp, #16]
    24d4:	add	sp, sp, #0x70
    24d8:	ret
    24dc:	ldr	x28, [x21, #112]
    24e0:	mov	w8, w20
    24e4:	str	x8, [sp, #8]
    24e8:	mov	w9, w19
    24ec:	add	x22, x28, w20, uxtw #4
    24f0:	add	x23, x28, w19, uxtw #4
    24f4:	sub	x8, x23, x22
    24f8:	cmp	x8, #0x1
    24fc:	str	x9, [sp]
    2500:	b.lt	2538 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xc4>  // b.tstop
    2504:	adrp	x26, 0 <_ZSt7nothrow>
    2508:	ldr	x26, [x26]
    250c:	asr	x8, x8, #4
    2510:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    2514:	cmp	x8, x9
    2518:	csel	x24, x8, x9, lt  // lt = tstop
    251c:	lsl	x27, x24, #4
    2520:	mov	x0, x27
    2524:	mov	x1, x26
    2528:	bl	0 <_ZnwmRKSt9nothrow_t>
    252c:	cbnz	x0, 2554 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xe0>
    2530:	lsr	x24, x24, #1
    2534:	cbnz	x24, 251c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xa8>
    2538:	mov	x0, x22
    253c:	mov	x1, x23
    2540:	mov	x2, x21
    2544:	bl	71b0 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    2548:	ldr	x26, [sp, #8]
    254c:	mov	x25, xzr
    2550:	b	25cc <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x158>
    2554:	ldr	x26, [sp, #8]
    2558:	mov	x25, x0
    255c:	cbz	x27, 25b4 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x140>
    2560:	ldr	q0, [x22]
    2564:	add	x8, x25, x27
    2568:	add	x9, x25, #0x10
    256c:	cmp	x8, x9
    2570:	str	q0, [x25]
    2574:	b.eq	259c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x128>  // b.none
    2578:	mov	x10, x25
    257c:	ldr	q0, [x10]
    2580:	add	x9, x10, #0x10
    2584:	add	x11, x10, #0x20
    2588:	cmp	x11, x8
    258c:	str	q0, [x10, #16]
    2590:	mov	x10, x9
    2594:	b.ne	257c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x108>  // b.any
    2598:	b	25a0 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x12c>
    259c:	mov	x9, x25
    25a0:	ldr	x8, [x9]
    25a4:	str	x8, [x22]
    25a8:	ldr	w8, [x9, #8]
    25ac:	add	x9, x28, x26, lsl #4
    25b0:	str	w8, [x9, #8]
    25b4:	mov	x0, x22
    25b8:	mov	x1, x23
    25bc:	mov	x2, x25
    25c0:	mov	x3, x24
    25c4:	mov	x4, x21
    25c8:	bl	7254 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>
    25cc:	mov	x0, x25
    25d0:	bl	0 <_ZdlPv>
    25d4:	ldr	x8, [x21, #112]
    25d8:	ldr	x9, [sp]
    25dc:	add	x22, x8, x26, lsl #4
    25e0:	add	x23, x8, x9, lsl #4
    25e4:	sub	x8, x23, x22
    25e8:	cmp	x8, #0x40
    25ec:	b.lt	26ac <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x238>  // b.tstop
    25f0:	lsr	x8, x8, #6
    25f4:	add	x8, x8, #0x1
    25f8:	ldr	x9, [x22]
    25fc:	ldr	x10, [x9]
    2600:	ldrb	w9, [x10, #8]
    2604:	cmp	w9, #0x10
    2608:	b.ne	2618 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x1a4>  // b.any
    260c:	ldr	x9, [x10, #16]
    2610:	ldr	x9, [x9]
    2614:	ldrb	w9, [x9, #8]
    2618:	cmp	w9, #0xb
    261c:	b.ne	2760 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2ec>  // b.any
    2620:	ldr	x9, [x22, #16]
    2624:	ldr	x10, [x9]
    2628:	ldrb	w9, [x10, #8]
    262c:	cmp	w9, #0x10
    2630:	b.ne	2640 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x1cc>  // b.any
    2634:	ldr	x9, [x10, #16]
    2638:	ldr	x9, [x9]
    263c:	ldrb	w9, [x9, #8]
    2640:	cmp	w9, #0xb
    2644:	b.ne	274c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2d8>  // b.any
    2648:	ldr	x9, [x22, #32]
    264c:	ldr	x10, [x9]
    2650:	ldrb	w9, [x10, #8]
    2654:	cmp	w9, #0x10
    2658:	b.ne	2668 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x1f4>  // b.any
    265c:	ldr	x9, [x10, #16]
    2660:	ldr	x9, [x9]
    2664:	ldrb	w9, [x9, #8]
    2668:	cmp	w9, #0xb
    266c:	b.ne	2754 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2e0>  // b.any
    2670:	ldr	x9, [x22, #48]
    2674:	ldr	x10, [x9]
    2678:	ldrb	w9, [x10, #8]
    267c:	cmp	w9, #0x10
    2680:	b.ne	2690 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x21c>  // b.any
    2684:	ldr	x9, [x10, #16]
    2688:	ldr	x9, [x9]
    268c:	ldrb	w9, [x9, #8]
    2690:	cmp	w9, #0xb
    2694:	b.ne	275c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2e8>  // b.any
    2698:	sub	x8, x8, #0x1
    269c:	cmp	x8, #0x1
    26a0:	add	x22, x22, #0x40
    26a4:	b.gt	25f8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x184>
    26a8:	sub	x8, x23, x22
    26ac:	asr	x8, x8, #4
    26b0:	cmp	x8, #0x1
    26b4:	b.eq	2720 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2ac>  // b.none
    26b8:	cmp	x8, #0x2
    26bc:	b.eq	26f4 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x280>  // b.none
    26c0:	cmp	x8, #0x3
    26c4:	b.ne	283c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3c8>  // b.any
    26c8:	ldr	x8, [x22]
    26cc:	ldr	x9, [x8]
    26d0:	ldrb	w8, [x9, #8]
    26d4:	cmp	w8, #0x10
    26d8:	b.ne	26e8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x274>  // b.any
    26dc:	ldr	x8, [x9, #16]
    26e0:	ldr	x8, [x8]
    26e4:	ldrb	w8, [x8, #8]
    26e8:	cmp	w8, #0xb
    26ec:	b.ne	2760 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2ec>  // b.any
    26f0:	add	x22, x22, #0x10
    26f4:	ldr	x8, [x22]
    26f8:	ldr	x9, [x8]
    26fc:	ldrb	w8, [x9, #8]
    2700:	cmp	w8, #0x10
    2704:	b.ne	2714 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2a0>  // b.any
    2708:	ldr	x8, [x9, #16]
    270c:	ldr	x8, [x8]
    2710:	ldrb	w8, [x8, #8]
    2714:	cmp	w8, #0xb
    2718:	b.ne	2760 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2ec>  // b.any
    271c:	add	x22, x22, #0x10
    2720:	ldr	x8, [x22]
    2724:	ldr	x9, [x8]
    2728:	ldrb	w8, [x9, #8]
    272c:	cmp	w8, #0x10
    2730:	b.ne	2740 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2cc>  // b.any
    2734:	ldr	x8, [x9, #16]
    2738:	ldr	x8, [x8]
    273c:	ldrb	w8, [x8, #8]
    2740:	cmp	w8, #0xb
    2744:	csel	x22, x23, x22, eq  // eq = none
    2748:	b	2760 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2ec>
    274c:	add	x22, x22, #0x10
    2750:	b	2760 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2ec>
    2754:	add	x22, x22, #0x20
    2758:	b	2760 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2ec>
    275c:	add	x22, x22, #0x30
    2760:	cmp	x22, x23
    2764:	b.eq	283c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3c8>  // b.none
    2768:	sub	x8, x23, x22
    276c:	cmp	x8, #0x1
    2770:	asr	x24, x8, #4
    2774:	b.lt	27b0 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x33c>  // b.tstop
    2778:	adrp	x27, 0 <_ZSt7nothrow>
    277c:	ldr	x27, [x27]
    2780:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
    2784:	cmp	x24, x8
    2788:	csel	x25, x24, x8, lt  // lt = tstop
    278c:	lsl	x28, x25, #4
    2790:	mov	x0, x28
    2794:	mov	x1, x27
    2798:	bl	0 <_ZnwmRKSt9nothrow_t>
    279c:	cbnz	x0, 27bc <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x348>
    27a0:	lsr	x25, x25, #1
    27a4:	cbnz	x25, 278c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x318>
    27a8:	mov	x26, xzr
    27ac:	b	2814 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3a0>
    27b0:	mov	x25, xzr
    27b4:	mov	x26, xzr
    27b8:	b	2814 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3a0>
    27bc:	mov	x26, x0
    27c0:	cbz	x28, 2814 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3a0>
    27c4:	ldr	q0, [x22]
    27c8:	add	x8, x26, x28
    27cc:	add	x9, x26, #0x10
    27d0:	cmp	x8, x9
    27d4:	str	q0, [x26]
    27d8:	b.eq	2800 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x38c>  // b.none
    27dc:	mov	x10, x26
    27e0:	ldr	q0, [x10]
    27e4:	add	x9, x10, #0x10
    27e8:	add	x11, x10, #0x20
    27ec:	cmp	x11, x8
    27f0:	str	q0, [x10, #16]
    27f4:	mov	x10, x9
    27f8:	b.ne	27e0 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x36c>  // b.any
    27fc:	b	2804 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x390>
    2800:	mov	x9, x26
    2804:	ldr	x8, [x9]
    2808:	str	x8, [x22]
    280c:	ldr	w8, [x9, #8]
    2810:	str	w8, [x22, #8]
    2814:	adrp	x2, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2818:	add	x2, x2, #0x0
    281c:	mov	x0, x22
    2820:	mov	x1, x23
    2824:	mov	x3, x24
    2828:	mov	x4, x26
    282c:	mov	x5, x25
    2830:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2834:	mov	x0, x26
    2838:	bl	0 <_ZdlPv>
    283c:	add	x22, x21, #0x50
    2840:	mov	x24, #0xfffffffffffffff0    	// #-16
    2844:	b	2878 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x404>
    2848:	mov	x3, xzr
    284c:	mov	x0, x22
    2850:	mov	x1, x23
    2854:	mov	x2, x23
    2858:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    285c:	ldr	x8, [x23]
    2860:	str	wzr, [x0, #8]
    2864:	str	x8, [x0]
    2868:	add	w20, w20, #0x1
    286c:	cmp	w20, w19
    2870:	str	w20, [x0, #8]
    2874:	b.eq	24bc <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x48>  // b.none
    2878:	ldr	x8, [x21, #112]
    287c:	ldr	w10, [x21, #104]
    2880:	add	x23, x8, w20, uxtw #4
    2884:	cbz	w10, 2848 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3d4>
    2888:	ldr	x8, [x23]
    288c:	orr	x9, x8, #0x8
    2890:	cmn	x9, #0x8
    2894:	b.eq	2904 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x490>  // b.none
    2898:	ldr	x9, [x21, #88]
    289c:	ubfx	x11, x8, #4, #28
    28a0:	eor	w11, w11, w8, lsr #9
    28a4:	sub	w10, w10, #0x1
    28a8:	and	w11, w11, w10
    28ac:	add	x0, x9, w11, uxtw #4
    28b0:	ldr	x13, [x0]
    28b4:	cmp	x13, x8
    28b8:	b.eq	2868 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3f4>  // b.none
    28bc:	mov	x12, xzr
    28c0:	mov	w14, #0x1                   	// #1
    28c4:	cmn	x13, #0x8
    28c8:	b.eq	28f8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x484>  // b.none
    28cc:	cmp	x12, #0x0
    28d0:	add	w11, w11, w14
    28d4:	ccmp	x13, x24, #0x0, eq  // eq = none
    28d8:	and	w11, w11, w10
    28dc:	csel	x12, x12, x0, ne  // ne = any
    28e0:	add	x0, x9, w11, uxtw #4
    28e4:	ldr	x13, [x0]
    28e8:	add	w14, w14, #0x1
    28ec:	cmp	x13, x8
    28f0:	b.eq	2868 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3f4>  // b.none
    28f4:	b	28c4 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x450>
    28f8:	cmp	x12, #0x0
    28fc:	csel	x3, x0, x12, eq  // eq = none
    2900:	b	284c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3d8>
    2904:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2908:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    290c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2910:	add	x0, x0, #0x0
    2914:	add	x1, x1, #0x0
    2918:	add	x3, x3, #0x0
    291c:	mov	w2, #0x252                 	// #594
    2920:	bl	0 <__assert_fail>

0000000000002924 <_ZN4llvm15ValueEnumerator16organizeMetadataEv>:
    2924:	stp	x29, x30, [sp, #-96]!
    2928:	stp	x28, x27, [sp, #16]
    292c:	stp	x26, x25, [sp, #32]
    2930:	stp	x24, x23, [sp, #48]
    2934:	stp	x22, x21, [sp, #64]
    2938:	stp	x20, x19, [sp, #80]
    293c:	mov	x29, sp
    2940:	sub	sp, sp, #0x270
    2944:	mov	x20, x0
    2948:	ldr	x22, [x20, #208]!
    294c:	mov	x24, x20
    2950:	ldr	w2, [x20, #64]
    2954:	ldr	x23, [x24, #8]!
    2958:	sub	x8, x23, x22
    295c:	cmp	x2, x8, asr #3
    2960:	b.ne	35ac <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xc88>  // b.any
    2964:	cmp	x22, x23
    2968:	b.eq	33b0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa8c>  // b.none
    296c:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2970:	ldr	d0, [x9]
    2974:	add	x8, sp, #0x58
    2978:	mov	x19, x0
    297c:	add	x21, x8, #0x10
    2980:	cmp	w2, #0x41
    2984:	str	x21, [sp, #88]
    2988:	str	d0, [sp, #96]
    298c:	b.cc	29a8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x84>  // b.lo, b.ul, b.last
    2990:	add	x0, sp, #0x58
    2994:	mov	w3, #0x8                   	// #8
    2998:	mov	x1, x21
    299c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    29a0:	ldr	x22, [x20]
    29a4:	ldr	x23, [x24]
    29a8:	cmp	x22, x23
    29ac:	add	x26, x20, #0x30
    29b0:	stp	x26, x20, [sp, #56]
    29b4:	str	x24, [sp, #32]
    29b8:	b.eq	2ab4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x190>  // b.none
    29bc:	ldr	w10, [x26, #24]
    29c0:	cbz	w10, 2a74 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x150>
    29c4:	ldr	x8, [x22]
    29c8:	orr	x9, x8, #0x4
    29cc:	cmn	x9, #0x4
    29d0:	b.eq	34a0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb7c>  // b.none
    29d4:	ldr	x9, [x26, #8]
    29d8:	ubfx	x11, x8, #4, #28
    29dc:	eor	w12, w11, w8, lsr #9
    29e0:	sub	w11, w10, #0x1
    29e4:	and	w10, w12, w11
    29e8:	lsl	x12, x10, #4
    29ec:	ldr	x12, [x9, x12]
    29f0:	cmp	x12, x8
    29f4:	b.ne	2a44 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x120>  // b.any
    29f8:	add	x8, x9, x10, lsl #4
    29fc:	ldr	x8, [x8, #8]
    2a00:	and	x9, x8, #0xffffffff00000000
    2a04:	and	x8, x8, #0xffffffff
    2a08:	ldp	w10, w11, [sp, #96]
    2a0c:	orr	x20, x9, x8
    2a10:	cmp	w10, w11
    2a14:	b.cs	2a8c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x168>  // b.hs, b.nlast
    2a18:	ldr	x8, [sp, #88]
    2a1c:	str	x20, [x8, w10, uxtw #3]
    2a20:	ldp	w8, w9, [sp, #96]
    2a24:	cmp	w8, w9
    2a28:	b.cs	34e0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xbbc>  // b.hs, b.nlast
    2a2c:	add	x22, x22, #0x8
    2a30:	add	x25, x8, #0x1
    2a34:	cmp	x22, x23
    2a38:	str	w25, [sp, #96]
    2a3c:	b.ne	29bc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x98>  // b.any
    2a40:	b	2aa8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x184>
    2a44:	mov	w13, #0x1                   	// #1
    2a48:	cmn	x12, #0x4
    2a4c:	b.eq	2a74 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x150>  // b.none
    2a50:	add	w10, w10, w13
    2a54:	and	w10, w10, w11
    2a58:	lsl	x12, x10, #4
    2a5c:	ldr	x12, [x9, x12]
    2a60:	add	w13, w13, #0x1
    2a64:	cmp	x12, x8
    2a68:	b.ne	2a48 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x124>  // b.any
    2a6c:	mov	w10, w10
    2a70:	b	29f8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xd4>
    2a74:	mov	x8, xzr
    2a78:	mov	x9, xzr
    2a7c:	ldp	w10, w11, [sp, #96]
    2a80:	orr	x20, x9, x8
    2a84:	cmp	w10, w11
    2a88:	b.cc	2a18 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xf4>  // b.lo, b.ul, b.last
    2a8c:	add	x0, sp, #0x58
    2a90:	mov	w3, #0x8                   	// #8
    2a94:	mov	x1, x21
    2a98:	mov	x2, xzr
    2a9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2aa0:	ldr	w10, [sp, #96]
    2aa4:	b	2a18 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xf4>
    2aa8:	ldr	x22, [sp, #88]
    2aac:	add	x21, x22, x25, lsl #3
    2ab0:	b	2ac4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1a0>
    2ab4:	ldr	w25, [sp, #96]
    2ab8:	cbz	w25, 2c3c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x318>
    2abc:	ldr	x22, [sp, #88]
    2ac0:	add	x21, x22, w25, uxtw #3
    2ac4:	clz	x8, x25
    2ac8:	mov	w9, #0x7e                  	// #126
    2acc:	sub	x2, x9, x8, lsl #1
    2ad0:	mov	x0, x22
    2ad4:	mov	x1, x21
    2ad8:	mov	x3, x19
    2adc:	bl	8944 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_>
    2ae0:	cmp	w25, #0x11
    2ae4:	b.cc	2b88 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x264>  // b.lo, b.ul, b.last
    2ae8:	add	x23, x22, #0x8
    2aec:	mov	w26, #0x1                   	// #1
    2af0:	mov	x27, x23
    2af4:	mov	x28, x22
    2af8:	b	2b24 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x200>
    2afc:	lsl	x2, x26, #3
    2b00:	mov	x0, x23
    2b04:	mov	x1, x22
    2b08:	bl	0 <memmove>
    2b0c:	mov	x20, x22
    2b10:	add	x26, x26, #0x1
    2b14:	cmp	x26, #0x10
    2b18:	add	x27, x27, #0x8
    2b1c:	str	x24, [x20]
    2b20:	b.eq	2c30 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x30c>  // b.none
    2b24:	mov	x20, x28
    2b28:	add	x28, x22, x26, lsl #3
    2b2c:	ldr	x1, [x28]
    2b30:	ldr	x2, [x22]
    2b34:	mov	x0, x19
    2b38:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2b3c:	ldr	x24, [x28]
    2b40:	tbnz	w0, #0, 2afc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1d8>
    2b44:	ldr	x2, [x20]
    2b48:	mov	x0, x19
    2b4c:	mov	x1, x24
    2b50:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2b54:	mov	x20, x28
    2b58:	tbz	w0, #0, 2b10 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1ec>
    2b5c:	mov	x8, x27
    2b60:	mov	x20, x27
    2b64:	ldr	x9, [x20, #-8]!
    2b68:	ldur	x2, [x8, #-16]
    2b6c:	mov	x0, x19
    2b70:	mov	x1, x24
    2b74:	str	x9, [x8]
    2b78:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2b7c:	mov	x8, x20
    2b80:	tbnz	w0, #0, 2b64 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x240>
    2b84:	b	2b10 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1ec>
    2b88:	cmp	w25, #0x1
    2b8c:	b.eq	2c3c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x318>  // b.none
    2b90:	add	x8, x22, #0x8
    2b94:	mov	x24, x22
    2b98:	b	2bb0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x28c>
    2b9c:	mov	x20, x22
    2ba0:	add	x8, x24, #0x8
    2ba4:	cmp	x8, x21
    2ba8:	str	x23, [x20]
    2bac:	b.eq	2c3c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x318>  // b.none
    2bb0:	ldr	x1, [x8]
    2bb4:	ldr	x2, [x22]
    2bb8:	mov	x0, x19
    2bbc:	mov	x20, x24
    2bc0:	mov	x24, x8
    2bc4:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2bc8:	ldr	x23, [x24]
    2bcc:	tbz	w0, #0, 2bec <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x2c8>
    2bd0:	subs	x2, x24, x22
    2bd4:	b.eq	2b9c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x278>  // b.none
    2bd8:	sub	x8, x20, x2
    2bdc:	add	x0, x8, #0x10
    2be0:	mov	x1, x22
    2be4:	bl	0 <memmove>
    2be8:	b	2b9c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x278>
    2bec:	ldr	x2, [x20]
    2bf0:	mov	x0, x19
    2bf4:	mov	x1, x23
    2bf8:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2bfc:	mov	x20, x24
    2c00:	tbz	w0, #0, 2ba0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x27c>
    2c04:	mov	x8, x24
    2c08:	mov	x20, x24
    2c0c:	ldr	x9, [x20, #-8]!
    2c10:	ldur	x2, [x8, #-16]
    2c14:	mov	x0, x19
    2c18:	mov	x1, x23
    2c1c:	str	x9, [x8]
    2c20:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2c24:	mov	x8, x20
    2c28:	tbnz	w0, #0, 2c0c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x2e8>
    2c2c:	b	2ba0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x27c>
    2c30:	ldr	x26, [sp, #56]
    2c34:	cmp	w25, #0x10
    2c38:	b.ne	33d0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xaac>  // b.any
    2c3c:	ldp	x25, x8, [x19, #208]
    2c40:	ldr	x22, [sp, #64]
    2c44:	sub	x28, x8, x25
    2c48:	asr	x20, x28, #3
    2c4c:	lsr	x8, x20, #60
    2c50:	stp	xzr, xzr, [x22]
    2c54:	str	xzr, [x22, #16]
    2c58:	cbnz	x8, 35cc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xca8>
    2c5c:	ldr	x24, [sp, #32]
    2c60:	add	x21, x19, #0xe0
    2c64:	cbz	x28, 2f08 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x5e4>
    2c68:	mov	x0, x28
    2c6c:	bl	0 <_Znwm>
    2c70:	ldr	x23, [x22]
    2c74:	ldr	x8, [x24]
    2c78:	mov	x24, x0
    2c7c:	sub	x2, x8, x23
    2c80:	cmp	x2, #0x1
    2c84:	b.lt	2c94 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x370>  // b.tstop
    2c88:	mov	x0, x24
    2c8c:	mov	x1, x23
    2c90:	bl	0 <memmove>
    2c94:	cbz	x23, 2ca0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x37c>
    2c98:	mov	x0, x23
    2c9c:	bl	0 <_ZdlPv>
    2ca0:	ldr	x8, [sp, #64]
    2ca4:	str	x24, [x8]
    2ca8:	ldr	x8, [sp, #32]
    2cac:	str	x24, [x8]
    2cb0:	add	x8, x24, x20, lsl #3
    2cb4:	str	x8, [x21]
    2cb8:	ldr	w27, [sp, #96]
    2cbc:	stp	x25, x20, [sp, #40]
    2cc0:	cbz	w27, 2f18 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x5f4>
    2cc4:	ldr	x23, [sp, #64]
    2cc8:	ldr	x24, [sp, #32]
    2ccc:	str	x28, [sp, #24]
    2cd0:	mov	w28, wzr
    2cd4:	mov	w22, w27
    2cd8:	b	2ce8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3c4>
    2cdc:	ldr	w22, [sp, #96]
    2ce0:	cmp	w28, w27
    2ce4:	b.eq	2ee8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x5c4>  // b.none
    2ce8:	cmp	w22, w28
    2cec:	b.ls	34c0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb9c>  // b.plast
    2cf0:	ldr	x8, [sp, #88]
    2cf4:	mov	w9, w28
    2cf8:	lsl	x10, x9, #3
    2cfc:	ldr	w10, [x8, x10]
    2d00:	cbnz	w10, 2ee8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x5c4>
    2d04:	add	x8, x8, x9, lsl #3
    2d08:	ldr	w8, [x8, #4]
    2d0c:	cbz	w8, 3500 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xbdc>
    2d10:	cmp	x20, x8
    2d14:	b.cc	3520 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xbfc>  // b.lo, b.ul, b.last
    2d18:	sub	w8, w8, #0x1
    2d1c:	cmp	x20, x8
    2d20:	b.ls	3540 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xc1c>  // b.plast
    2d24:	ldr	x8, [x25, x8, lsl #3]
    2d28:	str	x8, [sp, #80]
    2d2c:	ldr	x9, [x24]
    2d30:	ldr	x10, [x21]
    2d34:	cmp	x9, x10
    2d38:	b.eq	2dcc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x4a8>  // b.none
    2d3c:	str	x8, [x9]
    2d40:	ldr	x8, [x24]
    2d44:	mov	x9, x24
    2d48:	add	x8, x8, #0x8
    2d4c:	str	x8, [x9]
    2d50:	ldr	w10, [x26, #24]
    2d54:	cbz	w10, 2e80 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x55c>
    2d58:	ldr	x8, [sp, #80]
    2d5c:	orr	x9, x8, #0x4
    2d60:	cmn	x9, #0x4
    2d64:	b.eq	34a0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb7c>  // b.none
    2d68:	ldr	x9, [x26, #8]
    2d6c:	ubfx	x11, x8, #4, #28
    2d70:	eor	w11, w11, w8, lsr #9
    2d74:	sub	w10, w10, #0x1
    2d78:	and	w11, w11, w10
    2d7c:	add	x0, x9, w11, uxtw #4
    2d80:	ldr	x13, [x0]
    2d84:	cmp	x13, x8
    2d88:	b.eq	2ea0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x57c>  // b.none
    2d8c:	mov	x12, xzr
    2d90:	mov	w14, #0x1                   	// #1
    2d94:	cmn	x13, #0x4
    2d98:	b.eq	2edc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x5b8>  // b.none
    2d9c:	cmp	x12, #0x0
    2da0:	add	w11, w11, w14
    2da4:	mov	x15, #0xfffffffffffffff8    	// #-8
    2da8:	ccmp	x13, x15, #0x0, eq  // eq = none
    2dac:	and	w11, w11, w10
    2db0:	csel	x12, x12, x0, ne  // ne = any
    2db4:	add	x0, x9, w11, uxtw #4
    2db8:	ldr	x13, [x0]
    2dbc:	add	w14, w14, #0x1
    2dc0:	cmp	x13, x8
    2dc4:	b.eq	2ea0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x57c>  // b.none
    2dc8:	b	2d94 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x470>
    2dcc:	ldr	x23, [x23]
    2dd0:	sub	x24, x9, x23
    2dd4:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    2dd8:	cmp	x24, x9
    2ddc:	b.eq	3580 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xc5c>  // b.none
    2de0:	asr	x26, x24, #3
    2de4:	cmp	x24, #0x0
    2de8:	csinc	x9, x26, xzr, ne  // ne = any
    2dec:	adds	x9, x9, x26
    2df0:	lsr	x11, x9, #60
    2df4:	cset	w10, cs  // cs = hs, nlast
    2df8:	cmp	x11, #0x0
    2dfc:	cset	w11, ne  // ne = any
    2e00:	orr	w10, w10, w11
    2e04:	cmp	w10, #0x0
    2e08:	mov	x10, #0xfffffffffffffff     	// #1152921504606846975
    2e0c:	csel	x22, x10, x9, ne  // ne = any
    2e10:	cbz	x22, 2ec4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x5a0>
    2e14:	lsl	x0, x22, #3
    2e18:	bl	0 <_Znwm>
    2e1c:	ldr	x8, [sp, #80]
    2e20:	mov	x25, x0
    2e24:	add	x20, x25, x26, lsl #3
    2e28:	cmp	x24, #0x1
    2e2c:	str	x8, [x20]
    2e30:	b.lt	2e44 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x520>  // b.tstop
    2e34:	mov	x0, x25
    2e38:	mov	x1, x23
    2e3c:	mov	x2, x24
    2e40:	bl	0 <memmove>
    2e44:	ldr	x26, [sp, #56]
    2e48:	add	x20, x20, #0x8
    2e4c:	cbz	x23, 2e58 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x534>
    2e50:	mov	x0, x23
    2e54:	bl	0 <_ZdlPv>
    2e58:	ldr	x23, [sp, #64]
    2e5c:	ldr	x24, [sp, #32]
    2e60:	add	x8, x25, x22, lsl #3
    2e64:	mov	x9, x21
    2e68:	str	x25, [x23]
    2e6c:	str	x20, [x24]
    2e70:	ldp	x25, x20, [sp, #40]
    2e74:	str	x8, [x9]
    2e78:	ldr	w10, [x26, #24]
    2e7c:	cbnz	w10, 2d58 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x434>
    2e80:	mov	x3, xzr
    2e84:	add	x1, sp, #0x50
    2e88:	add	x2, sp, #0x50
    2e8c:	mov	x0, x26
    2e90:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2e94:	ldr	x8, [sp, #80]
    2e98:	stp	x8, xzr, [x0]
    2e9c:	ldr	x8, [sp, #80]
    2ea0:	add	w28, w28, #0x1
    2ea4:	str	w28, [x0, #12]
    2ea8:	cbz	x8, 3560 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xc3c>
    2eac:	ldrb	w8, [x8]
    2eb0:	cbnz	w8, 2cdc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3b8>
    2eb4:	ldr	w8, [x19, #544]
    2eb8:	add	w8, w8, #0x1
    2ebc:	str	w8, [x19, #544]
    2ec0:	b	2cdc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3b8>
    2ec4:	mov	x25, xzr
    2ec8:	add	x20, x25, x26, lsl #3
    2ecc:	cmp	x24, #0x1
    2ed0:	str	x8, [x20]
    2ed4:	b.ge	2e34 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x510>  // b.tcont
    2ed8:	b	2e44 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x520>
    2edc:	cmp	x12, #0x0
    2ee0:	csel	x3, x0, x12, eq  // eq = none
    2ee4:	b	2e84 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x560>
    2ee8:	ldr	x8, [x24]
    2eec:	ldr	x24, [x23]
    2ef0:	ldr	x28, [sp, #24]
    2ef4:	sub	x9, x8, x24
    2ef8:	mov	w10, w22
    2efc:	cmp	x10, x9, asr #3
    2f00:	b.ne	2f30 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x60c>  // b.any
    2f04:	b	338c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa68>
    2f08:	mov	x24, xzr
    2f0c:	ldr	w27, [sp, #96]
    2f10:	stp	x25, x20, [sp, #40]
    2f14:	cbnz	w27, 2cc4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3a0>
    2f18:	mov	w22, wzr
    2f1c:	mov	x8, x24
    2f20:	sub	x9, x8, x24
    2f24:	mov	w10, w22
    2f28:	cmp	x10, x9, asr #3
    2f2c:	b.eq	338c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa68>  // b.none
    2f30:	mov	x10, x19
    2f34:	ldr	x9, [x10, #248]!
    2f38:	ldur	x23, [x10, #-16]
    2f3c:	str	x10, [sp, #64]
    2f40:	sub	x9, x9, x23
    2f44:	cmp	x20, x9, asr #3
    2f48:	b.ls	2fa8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x684>  // b.plast
    2f4c:	ldr	x8, [x19, #240]
    2f50:	mov	x0, x28
    2f54:	sub	x20, x8, x23
    2f58:	bl	0 <_Znwm>
    2f5c:	ldp	x22, x8, [x19, #232]
    2f60:	mov	x23, x0
    2f64:	sub	x2, x8, x22
    2f68:	cmp	x2, #0x1
    2f6c:	b.lt	2f7c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x658>  // b.tstop
    2f70:	mov	x0, x23
    2f74:	mov	x1, x22
    2f78:	bl	0 <memmove>
    2f7c:	asr	x20, x20, #3
    2f80:	cbz	x22, 2f8c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x668>
    2f84:	mov	x0, x22
    2f88:	bl	0 <_ZdlPv>
    2f8c:	add	x8, x23, x20, lsl #3
    2f90:	ldr	x20, [sp, #48]
    2f94:	stp	x23, x8, [x19, #232]
    2f98:	ldp	x24, x8, [x19, #208]
    2f9c:	add	x9, x23, x20, lsl #3
    2fa0:	str	x9, [x19, #248]
    2fa4:	ldr	w22, [sp, #96]
    2fa8:	sub	x8, x8, x24
    2fac:	lsr	x21, x8, #3
    2fb0:	mov	w28, wzr
    2fb4:	mov	w27, wzr
    2fb8:	cmp	w22, w21
    2fbc:	str	wzr, [sp, #76]
    2fc0:	b.eq	3328 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa04>  // b.none
    2fc4:	cmp	w22, w21
    2fc8:	b.ls	34c0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb9c>  // b.plast
    2fcc:	add	x9, x19, #0x120
    2fd0:	stp	x9, xzr, [sp, #16]
    2fd4:	add	x9, x19, #0x130
    2fd8:	mov	w28, wzr
    2fdc:	add	x24, x19, #0xf0
    2fe0:	str	x9, [sp, #8]
    2fe4:	ubfx	x27, x8, #3, #32
    2fe8:	mov	w9, w22
    2fec:	str	x24, [sp, #32]
    2ff0:	ldr	x10, [sp, #88]
    2ff4:	lsl	x11, x27, #3
    2ff8:	ldr	w8, [sp, #76]
    2ffc:	ldr	w23, [x10, x11]
    3000:	cbz	w8, 302c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x708>
    3004:	cmp	w8, w23
    3008:	b.eq	3030 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x70c>  // b.none
    300c:	ldrb	w9, [x19, #296]
    3010:	ldp	x24, x21, [x19, #232]
    3014:	tbnz	w9, #0, 303c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x718>
    3018:	ldr	x0, [sp, #16]
    301c:	ldr	w10, [x0, #24]
    3020:	cbz	w10, 32a0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x97c>
    3024:	ldr	x9, [x0, #16]
    3028:	b	3044 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x720>
    302c:	str	w23, [sp, #76]
    3030:	cmp	w9, w27
    3034:	b.hi	30b8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x794>  // b.pmore
    3038:	b	34c0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb9c>
    303c:	ldr	x9, [sp, #8]
    3040:	mov	w10, #0x1                   	// #1
    3044:	cmn	w8, #0x2
    3048:	b.cs	358c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xc68>  // b.hs, b.nlast
    304c:	mov	w11, #0x25                  	// #37
    3050:	mul	w11, w8, w11
    3054:	sub	w10, w10, #0x1
    3058:	and	w11, w10, w11
    305c:	add	x0, x9, w11, uxtw #4
    3060:	ldr	w13, [x0]
    3064:	cmp	w8, w13
    3068:	b.ne	32d0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x9ac>  // b.any
    306c:	ldr	x9, [sp, #24]
    3070:	sub	x8, x21, x24
    3074:	lsr	x8, x8, #3
    3078:	ldr	w10, [x0, #12]
    307c:	str	w9, [x0, #4]
    3080:	stp	w8, w28, [x0, #8]
    3084:	ldp	x9, x8, [x19, #232]
    3088:	ldp	x12, x11, [x19, #208]
    308c:	ldr	x24, [sp, #32]
    3090:	mov	w28, w10
    3094:	sub	x8, x8, x9
    3098:	ldr	w9, [sp, #96]
    309c:	sub	x11, x11, x12
    30a0:	lsr	x8, x8, #3
    30a4:	lsr	x21, x11, #3
    30a8:	str	x8, [sp, #24]
    30ac:	str	w23, [sp, #76]
    30b0:	cmp	w9, w27
    30b4:	b.ls	34c0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb9c>  // b.plast
    30b8:	ldr	x8, [sp, #88]
    30bc:	add	x8, x8, x27, lsl #3
    30c0:	ldr	w8, [x8, #4]
    30c4:	cbz	w8, 3500 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xbdc>
    30c8:	cmp	x20, x8
    30cc:	b.cc	3520 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xbfc>  // b.lo, b.ul, b.last
    30d0:	sub	w8, w8, #0x1
    30d4:	cmp	x20, x8
    30d8:	b.ls	3540 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xc1c>  // b.plast
    30dc:	ldr	x8, [x25, x8, lsl #3]
    30e0:	ldr	x10, [sp, #64]
    30e4:	str	x8, [sp, #80]
    30e8:	ldr	x9, [x24]
    30ec:	ldr	x10, [x10]
    30f0:	cmp	x9, x10
    30f4:	b.eq	3188 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x864>  // b.none
    30f8:	str	x8, [x9]
    30fc:	ldr	x8, [x24]
    3100:	mov	x9, x24
    3104:	add	x8, x8, #0x8
    3108:	str	x8, [x9]
    310c:	ldr	w10, [x26, #24]
    3110:	cbz	w10, 3230 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x90c>
    3114:	ldr	x8, [sp, #80]
    3118:	orr	x9, x8, #0x4
    311c:	cmn	x9, #0x4
    3120:	b.eq	34a0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb7c>  // b.none
    3124:	ldr	x9, [x26, #8]
    3128:	ubfx	x11, x8, #4, #28
    312c:	eor	w11, w11, w8, lsr #9
    3130:	sub	w10, w10, #0x1
    3134:	and	w11, w11, w10
    3138:	add	x0, x9, w11, uxtw #4
    313c:	ldr	x13, [x0]
    3140:	cmp	x13, x8
    3144:	b.eq	3250 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x92c>  // b.none
    3148:	mov	x12, xzr
    314c:	mov	w14, #0x1                   	// #1
    3150:	cmn	x13, #0x4
    3154:	b.eq	32c4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x9a0>  // b.none
    3158:	cmp	x12, #0x0
    315c:	add	w11, w11, w14
    3160:	mov	x15, #0xfffffffffffffff8    	// #-8
    3164:	ccmp	x13, x15, #0x0, eq  // eq = none
    3168:	and	w11, w11, w10
    316c:	csel	x12, x12, x0, ne  // ne = any
    3170:	add	x0, x9, w11, uxtw #4
    3174:	ldr	x13, [x0]
    3178:	add	w14, w14, #0x1
    317c:	cmp	x13, x8
    3180:	b.eq	3250 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x92c>  // b.none
    3184:	b	3150 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x82c>
    3188:	ldr	x23, [x19, #232]
    318c:	sub	x24, x9, x23
    3190:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    3194:	cmp	x24, x9
    3198:	b.eq	3580 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xc5c>  // b.none
    319c:	asr	x20, x24, #3
    31a0:	cmp	x24, #0x0
    31a4:	csinc	x9, x20, xzr, ne  // ne = any
    31a8:	adds	x9, x9, x20
    31ac:	lsr	x11, x9, #60
    31b0:	cset	w10, cs  // cs = hs, nlast
    31b4:	cmp	x11, #0x0
    31b8:	cset	w11, ne  // ne = any
    31bc:	orr	w10, w10, w11
    31c0:	cmp	w10, #0x0
    31c4:	mov	x10, #0xfffffffffffffff     	// #1152921504606846975
    31c8:	csel	x26, x10, x9, ne  // ne = any
    31cc:	cbz	x26, 3288 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x964>
    31d0:	lsl	x0, x26, #3
    31d4:	bl	0 <_Znwm>
    31d8:	ldr	x8, [sp, #80]
    31dc:	mov	x25, x0
    31e0:	add	x20, x25, x20, lsl #3
    31e4:	cmp	x24, #0x1
    31e8:	str	x8, [x20]
    31ec:	b.lt	3200 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x8dc>  // b.tstop
    31f0:	mov	x0, x25
    31f4:	mov	x1, x23
    31f8:	mov	x2, x24
    31fc:	bl	0 <memmove>
    3200:	add	x20, x20, #0x8
    3204:	cbz	x23, 3210 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x8ec>
    3208:	mov	x0, x23
    320c:	bl	0 <_ZdlPv>
    3210:	stp	x25, x20, [x19, #232]
    3214:	add	x8, x25, x26, lsl #3
    3218:	ldp	x26, x9, [sp, #56]
    321c:	ldp	x25, x20, [sp, #40]
    3220:	ldr	x24, [sp, #32]
    3224:	str	x8, [x9]
    3228:	ldr	w10, [x26, #24]
    322c:	cbnz	w10, 3114 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x7f0>
    3230:	mov	x3, xzr
    3234:	add	x1, sp, #0x50
    3238:	add	x2, sp, #0x50
    323c:	mov	x0, x26
    3240:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3244:	ldr	x8, [sp, #80]
    3248:	stp	x8, xzr, [x0]
    324c:	ldr	x8, [sp, #80]
    3250:	add	w21, w21, #0x1
    3254:	str	w21, [x0, #12]
    3258:	cbz	x8, 3560 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xc3c>
    325c:	ldrb	w9, [x8]
    3260:	add	w8, w27, #0x1
    3264:	cmp	w9, #0x0
    3268:	cinc	w28, w28, eq  // eq = none
    326c:	cmp	w8, w22
    3270:	b.eq	3320 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x9fc>  // b.none
    3274:	ldr	w9, [sp, #96]
    3278:	mov	w27, w8
    327c:	cmp	w9, w8
    3280:	b.hi	2ff0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x6cc>  // b.pmore
    3284:	b	34c0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb9c>
    3288:	mov	x25, xzr
    328c:	add	x20, x25, x20, lsl #3
    3290:	cmp	x24, #0x1
    3294:	str	x8, [x20]
    3298:	b.ge	31f0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x8cc>  // b.tcont
    329c:	b	3200 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x8dc>
    32a0:	mov	x3, xzr
    32a4:	add	x1, sp, #0x4c
    32a8:	add	x2, sp, #0x4c
    32ac:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    32b0:	ldr	w8, [sp, #76]
    32b4:	str	wzr, [x0, #12]
    32b8:	stur	xzr, [x0, #4]
    32bc:	str	w8, [x0]
    32c0:	b	306c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x748>
    32c4:	cmp	x12, #0x0
    32c8:	csel	x3, x0, x12, eq  // eq = none
    32cc:	b	3234 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x910>
    32d0:	mov	x12, xzr
    32d4:	mov	w14, #0x1                   	// #1
    32d8:	cmn	w13, #0x1
    32dc:	b.eq	3310 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x9ec>  // b.none
    32e0:	cmp	x12, #0x0
    32e4:	add	w11, w11, w14
    32e8:	mov	w15, #0xfffffffe            	// #-2
    32ec:	ccmp	w13, w15, #0x0, eq  // eq = none
    32f0:	and	w11, w11, w10
    32f4:	csel	x12, x12, x0, ne  // ne = any
    32f8:	add	x0, x9, w11, uxtw #4
    32fc:	ldr	w13, [x0]
    3300:	add	w14, w14, #0x1
    3304:	cmp	w8, w13
    3308:	b.eq	306c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x748>  // b.none
    330c:	b	32d8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x9b4>
    3310:	cmp	x12, #0x0
    3314:	csel	x3, x0, x12, eq  // eq = none
    3318:	ldr	x0, [sp, #16]
    331c:	b	32a4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x980>
    3320:	ldr	x23, [x19, #232]
    3324:	ldr	x27, [sp, #24]
    3328:	ldrb	w8, [x19, #296]
    332c:	ldr	x20, [x19, #240]
    3330:	add	x0, x19, #0x120
    3334:	tbnz	w8, #0, 3348 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa24>
    3338:	ldr	w8, [x0, #24]
    333c:	cbz	w8, 342c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb08>
    3340:	ldr	x9, [x0, #16]
    3344:	b	3350 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa2c>
    3348:	add	x9, x19, #0x130
    334c:	mov	w8, #0x1                   	// #1
    3350:	ldr	w10, [sp, #76]
    3354:	cmn	w10, #0x2
    3358:	b.cs	358c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xc68>  // b.hs, b.nlast
    335c:	mov	w11, #0x25                  	// #37
    3360:	mul	w12, w10, w11
    3364:	sub	w11, w8, #0x1
    3368:	and	w12, w12, w11
    336c:	add	x8, x9, w12, uxtw #4
    3370:	ldr	w14, [x8]
    3374:	cmp	w10, w14
    3378:	b.ne	3454 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb30>  // b.any
    337c:	sub	x9, x20, x23
    3380:	lsr	x9, x9, #3
    3384:	stp	w27, w9, [x8, #4]
    3388:	str	w28, [x8, #12]
    338c:	cbz	x25, 3398 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa74>
    3390:	mov	x0, x25
    3394:	bl	0 <_ZdlPv>
    3398:	ldr	x0, [sp, #88]
    339c:	add	x8, sp, #0x58
    33a0:	add	x8, x8, #0x10
    33a4:	cmp	x0, x8
    33a8:	b.eq	33b0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa8c>  // b.none
    33ac:	bl	0 <free>
    33b0:	add	sp, sp, #0x270
    33b4:	ldp	x20, x19, [sp, #80]
    33b8:	ldp	x22, x21, [sp, #64]
    33bc:	ldp	x24, x23, [sp, #48]
    33c0:	ldp	x26, x25, [sp, #32]
    33c4:	ldp	x28, x27, [sp, #16]
    33c8:	ldp	x29, x30, [sp], #96
    33cc:	ret
    33d0:	add	x23, x22, #0x80
    33d4:	b	33e8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xac4>
    33d8:	add	x23, x23, #0x8
    33dc:	cmp	x23, x21
    33e0:	str	x22, [x20]
    33e4:	b.eq	2c3c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x318>  // b.none
    33e8:	ldp	x2, x22, [x23, #-8]
    33ec:	mov	x0, x19
    33f0:	mov	x1, x22
    33f4:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    33f8:	mov	x20, x23
    33fc:	tbz	w0, #0, 33d8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xab4>
    3400:	mov	x8, x23
    3404:	mov	x20, x23
    3408:	ldr	x9, [x20, #-8]!
    340c:	ldur	x2, [x8, #-16]
    3410:	mov	x0, x19
    3414:	mov	x1, x22
    3418:	str	x9, [x8]
    341c:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    3420:	mov	x8, x20
    3424:	tbnz	w0, #0, 3408 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xae4>
    3428:	b	33d8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xab4>
    342c:	mov	x3, xzr
    3430:	add	x1, sp, #0x4c
    3434:	add	x2, sp, #0x4c
    3438:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    343c:	ldr	w9, [sp, #76]
    3440:	mov	x8, x0
    3444:	str	wzr, [x0, #12]
    3448:	stur	xzr, [x0, #4]
    344c:	str	w9, [x0]
    3450:	b	337c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa58>
    3454:	mov	x13, xzr
    3458:	mov	w16, #0x1                   	// #1
    345c:	mov	w15, #0xfffffffe            	// #-2
    3460:	cmn	w14, #0x1
    3464:	b.eq	3494 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb70>  // b.none
    3468:	cmp	x13, #0x0
    346c:	add	w12, w12, w16
    3470:	ccmp	w14, w15, #0x0, eq  // eq = none
    3474:	and	w12, w12, w11
    3478:	csel	x13, x13, x8, ne  // ne = any
    347c:	add	x8, x9, w12, uxtw #4
    3480:	ldr	w14, [x8]
    3484:	add	w16, w16, #0x1
    3488:	cmp	w10, w14
    348c:	b.eq	337c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xa58>  // b.none
    3490:	b	3460 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb3c>
    3494:	cmp	x13, #0x0
    3498:	csel	x3, x8, x13, eq  // eq = none
    349c:	b	3430 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xb0c>
    34a0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34a4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34a8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34ac:	add	x0, x0, #0x0
    34b0:	add	x1, x1, #0x0
    34b4:	add	x3, x3, #0x0
    34b8:	mov	w2, #0x252                 	// #594
    34bc:	bl	0 <__assert_fail>
    34c0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34c4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34c8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34cc:	add	x0, x0, #0x0
    34d0:	add	x1, x1, #0x0
    34d4:	add	x3, x3, #0x0
    34d8:	mov	w2, #0x95                  	// #149
    34dc:	bl	0 <__assert_fail>
    34e0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34e4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34e8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34ec:	add	x0, x0, #0x0
    34f0:	add	x1, x1, #0x0
    34f4:	add	x3, x3, #0x0
    34f8:	mov	w2, #0x43                  	// #67
    34fc:	bl	0 <__assert_fail>
    3500:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3504:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3508:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    350c:	add	x0, x0, #0x0
    3510:	add	x1, x1, #0x0
    3514:	add	x3, x3, #0x0
    3518:	mov	w2, #0x55                  	// #85
    351c:	bl	0 <__assert_fail>
    3520:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3524:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3528:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    352c:	add	x0, x0, #0x0
    3530:	add	x1, x1, #0x0
    3534:	add	x3, x3, #0x0
    3538:	mov	w2, #0x56                  	// #86
    353c:	bl	0 <__assert_fail>
    3540:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3544:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3548:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    354c:	add	x0, x0, #0x0
    3550:	add	x1, x1, #0x0
    3554:	add	x3, x3, #0x0
    3558:	mov	w2, #0xfa                  	// #250
    355c:	bl	0 <__assert_fail>
    3560:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3564:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3568:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    356c:	add	x0, x0, #0x0
    3570:	add	x1, x1, #0x0
    3574:	add	x3, x3, #0x0
    3578:	mov	w2, #0x69                  	// #105
    357c:	bl	0 <__assert_fail>
    3580:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3584:	add	x0, x0, #0x0
    3588:	bl	0 <_ZSt20__throw_length_errorPKc>
    358c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3590:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3594:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3598:	add	x0, x0, #0x0
    359c:	add	x1, x1, #0x0
    35a0:	add	x3, x3, #0x0
    35a4:	mov	w2, #0x252                 	// #594
    35a8:	bl	0 <__assert_fail>
    35ac:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    35b0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    35b4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    35b8:	add	x0, x0, #0x0
    35bc:	add	x1, x1, #0x0
    35c0:	add	x3, x3, #0x0
    35c4:	mov	w2, #0x2d7                 	// #727
    35c8:	bl	0 <__assert_fail>
    35cc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    35d0:	add	x0, x0, #0x0
    35d4:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000035d8 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE>:
    35d8:	stp	x29, x30, [sp, #-16]!
    35dc:	mov	x29, sp
    35e0:	ldr	w8, [x0, #496]
    35e4:	ldr	x9, [x0, #480]
    35e8:	cbz	w8, 3644 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x6c>
    35ec:	orr	x10, x1, #0x8
    35f0:	cmn	x10, #0x8
    35f4:	b.eq	3660 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x88>  // b.none
    35f8:	ubfx	x10, x1, #4, #28
    35fc:	eor	w11, w10, w1, lsr #9
    3600:	sub	w10, w8, #0x1
    3604:	and	w11, w10, w11
    3608:	add	x12, x9, w11, uxtw #4
    360c:	ldr	x13, [x12]
    3610:	cmp	x13, x1
    3614:	b.eq	3648 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x70>  // b.none
    3618:	mov	w14, #0x1                   	// #1
    361c:	cmn	x13, #0x8
    3620:	b.eq	3644 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x6c>  // b.none
    3624:	add	w11, w11, w14
    3628:	and	w11, w11, w10
    362c:	add	x12, x9, w11, uxtw #4
    3630:	ldr	x13, [x12]
    3634:	add	w14, w14, #0x1
    3638:	cmp	x13, x1
    363c:	b.eq	3648 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x70>  // b.none
    3640:	b	361c <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x44>
    3644:	add	x12, x9, x8, lsl #4
    3648:	add	x8, x9, x8, lsl #4
    364c:	cmp	x12, x8
    3650:	b.eq	3680 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0xa8>  // b.none
    3654:	ldr	w0, [x12, #8]
    3658:	ldp	x29, x30, [sp], #16
    365c:	ret
    3660:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3664:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3668:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    366c:	add	x0, x0, #0x0
    3670:	add	x1, x1, #0x0
    3674:	add	x3, x3, #0x0
    3678:	mov	w2, #0x252                 	// #594
    367c:	bl	0 <__assert_fail>
    3680:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3684:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3688:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    368c:	add	x0, x0, #0x0
    3690:	add	x1, x1, #0x0
    3694:	add	x3, x3, #0x0
    3698:	mov	w2, #0x1bb                 	// #443
    369c:	bl	0 <__assert_fail>

00000000000036a0 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE>:
    36a0:	stp	x29, x30, [sp, #-16]!
    36a4:	mov	x29, sp
    36a8:	ldr	x10, [x0, #152]
    36ac:	cbz	x10, 3704 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x64>
    36b0:	add	x8, x0, #0x90
    36b4:	mov	x9, x8
    36b8:	ldr	x11, [x10, #32]
    36bc:	add	x12, x10, #0x18
    36c0:	add	x13, x10, #0x10
    36c4:	cmp	x11, x1
    36c8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    36cc:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    36d0:	ldr	x10, [x10]
    36d4:	cbnz	x10, 36b8 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x18>
    36d8:	cmp	x9, x8
    36dc:	b.eq	3704 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x64>  // b.none
    36e0:	ldr	x10, [x9, #32]
    36e4:	cmp	x10, x1
    36e8:	csel	x9, x8, x9, hi  // hi = pmore
    36ec:	cmp	x9, x8
    36f0:	b.eq	3704 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x64>  // b.none
    36f4:	ldr	w0, [x9, #40]
    36f8:	cbz	w0, 3704 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x64>
    36fc:	ldp	x29, x30, [sp], #16
    3700:	ret
    3704:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3708:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    370c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3710:	add	x0, x0, #0x0
    3714:	add	x1, x1, #0x0
    3718:	add	x3, x3, #0x0
    371c:	mov	w2, #0x1c1                 	// #449
    3720:	bl	0 <__assert_fail>

0000000000003724 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE>:
    3724:	stp	x29, x30, [sp, #-32]!
    3728:	str	x19, [sp, #16]
    372c:	mov	x29, sp
    3730:	str	x1, [x29, #24]
    3734:	ldr	w19, [x0, #504]
    3738:	ldr	w8, [x0, #496]
    373c:	add	w9, w19, #0x1
    3740:	str	w9, [x0, #504]
    3744:	cbz	w8, 3788 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0x64>
    3748:	orr	x9, x1, #0x8
    374c:	cmn	x9, #0x8
    3750:	b.eq	3808 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0xe4>  // b.none
    3754:	ldr	x9, [x0, #480]
    3758:	ubfx	x10, x1, #4, #28
    375c:	eor	w11, w10, w1, lsr #9
    3760:	sub	w10, w8, #0x1
    3764:	and	w11, w11, w10
    3768:	add	x8, x9, w11, uxtw #4
    376c:	ldr	x13, [x8]
    3770:	cmp	x13, x1
    3774:	b.ne	37bc <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0x98>  // b.any
    3778:	str	w19, [x8, #8]
    377c:	ldr	x19, [sp, #16]
    3780:	ldp	x29, x30, [sp], #32
    3784:	ret
    3788:	mov	x3, xzr
    378c:	add	x0, x0, #0x1d8
    3790:	add	x1, x29, #0x18
    3794:	add	x2, x29, #0x18
    3798:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    379c:	ldr	x9, [x29, #24]
    37a0:	mov	x8, x0
    37a4:	str	wzr, [x0, #8]
    37a8:	str	x9, [x0]
    37ac:	str	w19, [x8, #8]
    37b0:	ldr	x19, [sp, #16]
    37b4:	ldp	x29, x30, [sp], #32
    37b8:	ret
    37bc:	mov	x12, xzr
    37c0:	mov	w15, #0x1                   	// #1
    37c4:	mov	x14, #0xfffffffffffffff0    	// #-16
    37c8:	cmn	x13, #0x8
    37cc:	b.eq	37fc <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0xd8>  // b.none
    37d0:	cmp	x12, #0x0
    37d4:	add	w11, w11, w15
    37d8:	ccmp	x13, x14, #0x0, eq  // eq = none
    37dc:	and	w11, w11, w10
    37e0:	csel	x12, x12, x8, ne  // ne = any
    37e4:	add	x8, x9, w11, uxtw #4
    37e8:	ldr	x13, [x8]
    37ec:	add	w15, w15, #0x1
    37f0:	cmp	x13, x1
    37f4:	b.eq	3778 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0x54>  // b.none
    37f8:	b	37c8 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0xa4>
    37fc:	cmp	x12, #0x0
    3800:	csel	x3, x8, x12, eq  // eq = none
    3804:	b	378c <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0x68>
    3808:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    380c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3810:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3814:	add	x0, x0, #0x0
    3818:	add	x1, x1, #0x0
    381c:	add	x3, x3, #0x0
    3820:	mov	w2, #0x252                 	// #594
    3824:	bl	0 <__assert_fail>

0000000000003828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>:
    3828:	stp	x29, x30, [sp, #-16]!
    382c:	mov	x29, sp
    3830:	cbz	x1, 3970 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x148>
    3834:	ldrb	w8, [x1, #16]
    3838:	cmp	w8, #0x13
    383c:	b.ne	3894 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x6c>  // b.any
    3840:	ldr	w10, [x0, #280]
    3844:	cbz	w10, 3950 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x128>
    3848:	ldr	x8, [x1, #24]
    384c:	orr	x9, x8, #0x4
    3850:	cmn	x9, #0x4
    3854:	b.eq	3990 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x168>  // b.none
    3858:	ldr	x9, [x0, #264]
    385c:	ubfx	x11, x8, #4, #28
    3860:	eor	w12, w11, w8, lsr #9
    3864:	sub	w11, w10, #0x1
    3868:	and	w10, w12, w11
    386c:	lsl	x12, x10, #4
    3870:	ldr	x12, [x9, x12]
    3874:	cmp	x12, x8
    3878:	b.ne	3918 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xf0>  // b.any
    387c:	add	x8, x9, x10, lsl #4
    3880:	ldr	w8, [x8, #12]
    3884:	cbz	w8, 3950 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x128>
    3888:	sub	w0, w8, #0x1
    388c:	ldp	x29, x30, [sp], #16
    3890:	ret
    3894:	ldr	w8, [x0, #104]
    3898:	ldr	x9, [x0, #88]
    389c:	cbz	w8, 38f8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xd0>
    38a0:	orr	x10, x1, #0x8
    38a4:	cmn	x10, #0x8
    38a8:	b.eq	39b0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x188>  // b.none
    38ac:	ubfx	x10, x1, #4, #28
    38b0:	eor	w11, w10, w1, lsr #9
    38b4:	sub	w10, w8, #0x1
    38b8:	and	w11, w10, w11
    38bc:	add	x12, x9, w11, uxtw #4
    38c0:	ldr	x13, [x12]
    38c4:	cmp	x13, x1
    38c8:	b.eq	38fc <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xd4>  // b.none
    38cc:	mov	w14, #0x1                   	// #1
    38d0:	cmn	x13, #0x8
    38d4:	b.eq	38f8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xd0>  // b.none
    38d8:	add	w11, w11, w14
    38dc:	and	w11, w11, w10
    38e0:	add	x12, x9, w11, uxtw #4
    38e4:	ldr	x13, [x12]
    38e8:	add	w14, w14, #0x1
    38ec:	cmp	x13, x1
    38f0:	b.eq	38fc <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xd4>  // b.none
    38f4:	b	38d0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xa8>
    38f8:	add	x12, x9, x8, lsl #4
    38fc:	add	x8, x9, x8, lsl #4
    3900:	cmp	x12, x8
    3904:	b.eq	39d0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x1a8>  // b.none
    3908:	ldr	w8, [x12, #8]
    390c:	sub	w0, w8, #0x1
    3910:	ldp	x29, x30, [sp], #16
    3914:	ret
    3918:	mov	w13, #0x1                   	// #1
    391c:	cmn	x12, #0x4
    3920:	b.eq	3950 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x128>  // b.none
    3924:	add	w10, w10, w13
    3928:	and	w10, w10, w11
    392c:	lsl	x12, x10, #4
    3930:	ldr	x12, [x9, x12]
    3934:	add	w13, w13, #0x1
    3938:	cmp	x12, x8
    393c:	b.ne	391c <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xf4>  // b.any
    3940:	mov	w10, w10
    3944:	add	x8, x9, x10, lsl #4
    3948:	ldr	w8, [x8, #12]
    394c:	cbnz	w8, 3888 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x60>
    3950:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3954:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3958:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    395c:	add	x0, x0, #0x0
    3960:	add	x1, x1, #0x0
    3964:	add	x3, x3, #0x0
    3968:	mov	w2, #0x9b                  	// #155
    396c:	bl	0 <__assert_fail>
    3970:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3974:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3978:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    397c:	add	x0, x0, #0x0
    3980:	add	x1, x1, #0x0
    3984:	add	x3, x3, #0x0
    3988:	mov	w2, #0x69                  	// #105
    398c:	bl	0 <__assert_fail>
    3990:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3994:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3998:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    399c:	add	x0, x0, #0x0
    39a0:	add	x1, x1, #0x0
    39a4:	add	x3, x3, #0x0
    39a8:	mov	w2, #0x252                 	// #594
    39ac:	bl	0 <__assert_fail>
    39b0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39b4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39b8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39bc:	add	x0, x0, #0x0
    39c0:	add	x1, x1, #0x0
    39c4:	add	x3, x3, #0x0
    39c8:	mov	w2, #0x252                 	// #594
    39cc:	bl	0 <__assert_fail>
    39d0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39d4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39d8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    39dc:	add	x0, x0, #0x0
    39e0:	add	x1, x1, #0x0
    39e4:	add	x3, x3, #0x0
    39e8:	mov	w2, #0x1ce                 	// #462
    39ec:	bl	0 <__assert_fail>

00000000000039f0 <_ZNK4llvm15ValueEnumerator4dumpEv>:
    39f0:	stp	x29, x30, [sp, #-32]!
    39f4:	str	x19, [sp, #16]
    39f8:	mov	x29, sp
    39fc:	mov	x19, x0
    3a00:	bl	0 <_ZN4llvm4dbgsEv>
    3a04:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3a08:	add	x2, x19, #0x50
    3a0c:	add	x3, x3, #0x0
    3a10:	mov	x1, x0
    3a14:	bl	3a98 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc>
    3a18:	bl	0 <_ZN4llvm4dbgsEv>
    3a1c:	ldp	x9, x8, [x0, #16]
    3a20:	cmp	x8, x9
    3a24:	b.cs	3a3c <_ZNK4llvm15ValueEnumerator4dumpEv+0x4c>  // b.hs, b.nlast
    3a28:	add	x9, x8, #0x1
    3a2c:	mov	w10, #0xa                   	// #10
    3a30:	str	x9, [x0, #24]
    3a34:	strb	w10, [x8]
    3a38:	b	3a44 <_ZNK4llvm15ValueEnumerator4dumpEv+0x54>
    3a3c:	mov	w1, #0xa                   	// #10
    3a40:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3a44:	bl	0 <_ZN4llvm4dbgsEv>
    3a48:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3a4c:	add	x2, x19, #0x100
    3a50:	add	x3, x3, #0x0
    3a54:	mov	x1, x0
    3a58:	bl	4114 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc>
    3a5c:	bl	0 <_ZN4llvm4dbgsEv>
    3a60:	ldp	x9, x8, [x0, #16]
    3a64:	cmp	x8, x9
    3a68:	b.cs	3a88 <_ZNK4llvm15ValueEnumerator4dumpEv+0x98>  // b.hs, b.nlast
    3a6c:	ldr	x19, [sp, #16]
    3a70:	add	x9, x8, #0x1
    3a74:	mov	w10, #0xa                   	// #10
    3a78:	str	x9, [x0, #24]
    3a7c:	strb	w10, [x8]
    3a80:	ldp	x29, x30, [sp], #32
    3a84:	ret
    3a88:	ldr	x19, [sp, #16]
    3a8c:	mov	w1, #0xa                   	// #10
    3a90:	ldp	x29, x30, [sp], #32
    3a94:	b	0 <_ZN4llvm11raw_ostream5writeEh>

0000000000003a98 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc>:
    3a98:	sub	sp, sp, #0x70
    3a9c:	stp	x29, x30, [sp, #16]
    3aa0:	stp	x28, x27, [sp, #32]
    3aa4:	stp	x26, x25, [sp, #48]
    3aa8:	stp	x24, x23, [sp, #64]
    3aac:	stp	x22, x21, [sp, #80]
    3ab0:	stp	x20, x19, [sp, #96]
    3ab4:	add	x29, sp, #0x10
    3ab8:	ldp	x9, x8, [x1, #16]
    3abc:	mov	x22, x3
    3ac0:	mov	x21, x1
    3ac4:	str	x2, [sp, #8]
    3ac8:	sub	x9, x9, x8
    3acc:	cmp	x9, #0x9
    3ad0:	b.hi	3b28 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x90>  // b.pmore
    3ad4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3ad8:	add	x1, x1, #0x0
    3adc:	mov	w2, #0xa                   	// #10
    3ae0:	mov	x0, x21
    3ae4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3ae8:	mov	x19, x0
    3aec:	cbz	x22, 3b54 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0xbc>
    3af0:	mov	x0, x22
    3af4:	bl	0 <strlen>
    3af8:	mov	x23, x0
    3afc:	ldp	x8, x0, [x19, #16]
    3b00:	sub	x8, x8, x0
    3b04:	cmp	x23, x8
    3b08:	b.ls	3b68 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0xd0>  // b.plast
    3b0c:	mov	x0, x19
    3b10:	mov	x1, x22
    3b14:	mov	x2, x23
    3b18:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3b1c:	mov	x19, x0
    3b20:	ldr	x0, [x0, #24]
    3b24:	b	3b84 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0xec>
    3b28:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3b2c:	add	x9, x9, #0x0
    3b30:	ldr	x9, [x9]
    3b34:	mov	w10, #0x203a                	// #8250
    3b38:	strh	w10, [x8, #8]
    3b3c:	mov	x19, x21
    3b40:	str	x9, [x8]
    3b44:	ldr	x8, [x21, #24]
    3b48:	add	x8, x8, #0xa
    3b4c:	str	x8, [x21, #24]
    3b50:	cbnz	x22, 3af0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x58>
    3b54:	mov	x23, xzr
    3b58:	ldp	x8, x0, [x19, #16]
    3b5c:	sub	x8, x8, x0
    3b60:	cmp	x23, x8
    3b64:	b.hi	3b0c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x74>  // b.pmore
    3b68:	cbz	x23, 3b84 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0xec>
    3b6c:	mov	x1, x22
    3b70:	mov	x2, x23
    3b74:	bl	0 <memcpy>
    3b78:	ldr	x8, [x19, #24]
    3b7c:	add	x0, x8, x23
    3b80:	str	x0, [x19, #24]
    3b84:	ldr	x8, [x19, #16]
    3b88:	cmp	x8, x0
    3b8c:	b.ne	3bdc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x144>  // b.any
    3b90:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3b94:	add	x1, x1, #0x0
    3b98:	mov	w2, #0x1                   	// #1
    3b9c:	mov	x0, x19
    3ba0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3ba4:	ldp	x9, x8, [x21, #16]
    3ba8:	sub	x9, x9, x8
    3bac:	cmp	x9, #0x5
    3bb0:	b.ls	3c00 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x168>  // b.plast
    3bb4:	mov	w10, #0x6953                	// #26963
    3bb8:	mov	w9, #0x203a                	// #8250
    3bbc:	movk	w10, #0x657a, lsl #16
    3bc0:	strh	w9, [x8, #4]
    3bc4:	str	w10, [x8]
    3bc8:	ldr	x8, [x21, #24]
    3bcc:	mov	x0, x21
    3bd0:	add	x8, x8, #0x6
    3bd4:	str	x8, [x21, #24]
    3bd8:	b	3c14 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x17c>
    3bdc:	mov	w8, #0xa                   	// #10
    3be0:	strb	w8, [x0]
    3be4:	ldr	x8, [x19, #24]
    3be8:	add	x8, x8, #0x1
    3bec:	str	x8, [x19, #24]
    3bf0:	ldp	x9, x8, [x21, #16]
    3bf4:	sub	x9, x9, x8
    3bf8:	cmp	x9, #0x5
    3bfc:	b.hi	3bb4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x11c>  // b.pmore
    3c00:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3c04:	add	x1, x1, #0x0
    3c08:	mov	w2, #0x6                   	// #6
    3c0c:	mov	x0, x21
    3c10:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3c14:	ldr	x8, [sp, #8]
    3c18:	ldr	w1, [x8, #16]
    3c1c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3c20:	ldp	x9, x8, [x0, #16]
    3c24:	cmp	x9, x8
    3c28:	b.ne	3c40 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1a8>  // b.any
    3c2c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3c30:	add	x1, x1, #0x0
    3c34:	mov	w2, #0x1                   	// #1
    3c38:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3c3c:	b	3c54 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1bc>
    3c40:	mov	w9, #0xa                   	// #10
    3c44:	strb	w9, [x8]
    3c48:	ldr	x8, [x0, #24]
    3c4c:	add	x8, x8, #0x1
    3c50:	str	x8, [x0, #24]
    3c54:	ldr	x11, [sp, #8]
    3c58:	ldr	w9, [x11, #24]
    3c5c:	ldr	w10, [x11, #16]
    3c60:	ldp	x11, x8, [x11]
    3c64:	add	x22, x8, x9, lsl #4
    3c68:	mov	x20, x22
    3c6c:	str	x11, [sp]
    3c70:	cbz	w10, 3c9c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x204>
    3c74:	cbz	w9, 3ca8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x210>
    3c78:	lsl	x9, x9, #4
    3c7c:	add	x20, x9, x8
    3c80:	ldr	x10, [x8]
    3c84:	orr	x10, x10, #0x8
    3c88:	cmn	x10, #0x8
    3c8c:	b.ne	3ca8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x210>  // b.any
    3c90:	subs	x9, x9, #0x10
    3c94:	add	x8, x8, #0x10
    3c98:	b.ne	3c80 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1e8>  // b.any
    3c9c:	cmp	x20, x22
    3ca0:	b.ne	3cb4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x21c>  // b.any
    3ca4:	b	4094 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5fc>
    3ca8:	mov	x20, x8
    3cac:	cmp	x20, x22
    3cb0:	b.eq	4094 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5fc>  // b.none
    3cb4:	adrp	x26, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3cb8:	adrp	x27, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3cbc:	add	x26, x26, #0x0
    3cc0:	add	x27, x27, #0x0
    3cc4:	mov	w25, #0x2c                  	// #44
    3cc8:	b	3cd8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x240>
    3ccc:	mov	x20, x8
    3cd0:	cmp	x20, x22
    3cd4:	b.eq	4094 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5fc>  // b.none
    3cd8:	ldr	x28, [x20]
    3cdc:	ldp	x9, x8, [x21, #16]
    3ce0:	ldrb	w10, [x28, #23]
    3ce4:	sub	x9, x9, x8
    3ce8:	tbnz	w10, #5, 3d0c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x274>
    3cec:	cmp	x9, #0xd
    3cf0:	b.hi	3d30 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x298>  // b.pmore
    3cf4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3cf8:	mov	w2, #0xe                   	// #14
    3cfc:	mov	x0, x21
    3d00:	add	x1, x1, #0x0
    3d04:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3d08:	b	3dcc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x334>
    3d0c:	cmp	x9, #0x6
    3d10:	b.hi	3d58 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x2c0>  // b.pmore
    3d14:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3d18:	mov	w2, #0x7                   	// #7
    3d1c:	mov	x0, x21
    3d20:	add	x1, x1, #0x0
    3d24:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3d28:	mov	x19, x0
    3d2c:	b	3d80 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x2e8>
    3d30:	adrp	x10, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3d34:	add	x10, x10, #0x0
    3d38:	ldur	x9, [x10, #6]
    3d3c:	ldr	x10, [x10]
    3d40:	stur	x9, [x8, #6]
    3d44:	str	x10, [x8]
    3d48:	ldr	x8, [x21, #24]
    3d4c:	add	x8, x8, #0xe
    3d50:	str	x8, [x21, #24]
    3d54:	b	3dcc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x334>
    3d58:	mov	w9, #0x6575                	// #25973
    3d5c:	movk	w9, #0x203a, lsl #16
    3d60:	stur	w9, [x8, #3]
    3d64:	mov	w9, #0x6156                	// #24918
    3d68:	movk	w9, #0x756c, lsl #16
    3d6c:	str	w9, [x8]
    3d70:	ldr	x8, [x21, #24]
    3d74:	mov	x19, x21
    3d78:	add	x8, x8, #0x7
    3d7c:	str	x8, [x21, #24]
    3d80:	mov	x0, x28
    3d84:	bl	0 <_ZNK4llvm5Value7getNameEv>
    3d88:	ldp	x9, x8, [x19, #16]
    3d8c:	mov	x23, x1
    3d90:	sub	x9, x9, x8
    3d94:	cmp	x1, x9
    3d98:	mov	x1, x0
    3d9c:	b.ls	3db0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x318>  // b.plast
    3da0:	mov	x0, x19
    3da4:	mov	x2, x23
    3da8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3dac:	b	3dcc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x334>
    3db0:	cbz	x23, 3dcc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x334>
    3db4:	mov	x0, x8
    3db8:	mov	x2, x23
    3dbc:	bl	0 <memcpy>
    3dc0:	ldr	x8, [x19, #24]
    3dc4:	add	x8, x8, x23
    3dc8:	str	x8, [x19, #24]
    3dcc:	bl	0 <_ZN4llvm4errsEv>
    3dd0:	mov	x1, x0
    3dd4:	mov	x0, x28
    3dd8:	mov	w2, wzr
    3ddc:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    3de0:	bl	0 <_ZN4llvm4errsEv>
    3de4:	ldp	x9, x8, [x0, #16]
    3de8:	cmp	x8, x9
    3dec:	b.cs	3e38 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x3a0>  // b.hs, b.nlast
    3df0:	add	x9, x8, #0x1
    3df4:	str	x9, [x0, #24]
    3df8:	mov	w9, #0xa                   	// #10
    3dfc:	strb	w9, [x8]
    3e00:	ldp	x9, x8, [x21, #16]
    3e04:	sub	x9, x9, x8
    3e08:	cmp	x9, #0x5
    3e0c:	b.ls	3e50 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x3b8>  // b.plast
    3e10:	mov	w9, #0x2873                	// #10355
    3e14:	strh	w9, [x8, #4]
    3e18:	mov	w9, #0x5520                	// #21792
    3e1c:	movk	w9, #0x6573, lsl #16
    3e20:	str	w9, [x8]
    3e24:	ldr	x8, [x21, #24]
    3e28:	mov	x19, x21
    3e2c:	add	x8, x8, #0x6
    3e30:	str	x8, [x21, #24]
    3e34:	b	3e68 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x3d0>
    3e38:	mov	w1, #0xa                   	// #10
    3e3c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3e40:	ldp	x9, x8, [x21, #16]
    3e44:	sub	x9, x9, x8
    3e48:	cmp	x9, #0x5
    3e4c:	b.hi	3e10 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x378>  // b.pmore
    3e50:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3e54:	mov	w2, #0x6                   	// #6
    3e58:	mov	x0, x21
    3e5c:	add	x1, x1, #0x0
    3e60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3e64:	mov	x19, x0
    3e68:	mov	x0, x28
    3e6c:	bl	0 <_ZNK4llvm5Value10getNumUsesEv>
    3e70:	mov	w1, w0
    3e74:	mov	x0, x19
    3e78:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3e7c:	ldp	x9, x8, [x0, #16]
    3e80:	sub	x9, x9, x8
    3e84:	cmp	x9, #0x1
    3e88:	b.hi	3eb0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x418>  // b.pmore
    3e8c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3e90:	mov	w2, #0x2                   	// #2
    3e94:	add	x1, x1, #0x0
    3e98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3e9c:	mov	x0, x28
    3ea0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3ea4:	ldr	x24, [x28, #8]
    3ea8:	cbnz	x24, 3f28 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x490>
    3eac:	b	3ed4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x43c>
    3eb0:	mov	w9, #0x3a29                	// #14889
    3eb4:	strh	w9, [x8]
    3eb8:	ldr	x8, [x0, #24]
    3ebc:	add	x8, x8, #0x2
    3ec0:	str	x8, [x0, #24]
    3ec4:	mov	x0, x28
    3ec8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3ecc:	ldr	x24, [x28, #8]
    3ed0:	cbnz	x24, 3f28 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x490>
    3ed4:	ldp	x9, x8, [x21, #16]
    3ed8:	sub	x9, x9, x8
    3edc:	cmp	x9, #0x1
    3ee0:	b.hi	4038 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5a0>  // b.pmore
    3ee4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3ee8:	mov	w2, #0x2                   	// #2
    3eec:	mov	x0, x21
    3ef0:	add	x1, x1, #0x0
    3ef4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3ef8:	b	404c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5b4>
    3efc:	mov	w9, #0x6c75                	// #27765
    3f00:	movk	w9, #0x5d6c, lsl #16
    3f04:	stur	w9, [x8, #3]
    3f08:	mov	w9, #0x5b20                	// #23328
    3f0c:	movk	w9, #0x756e, lsl #16
    3f10:	str	w9, [x8]
    3f14:	ldr	x8, [x21, #24]
    3f18:	add	x8, x8, #0x7
    3f1c:	str	x8, [x21, #24]
    3f20:	ldr	x24, [x24, #8]
    3f24:	cbz	x24, 3ed4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x43c>
    3f28:	mov	x0, x28
    3f2c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3f30:	ldr	x8, [x28, #8]
    3f34:	cbz	x8, 40b4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x61c>
    3f38:	cmp	x24, x8
    3f3c:	b.eq	3f5c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x4c4>  // b.none
    3f40:	ldp	x9, x8, [x21, #16]
    3f44:	cmp	x9, x8
    3f48:	b.ne	3f90 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x4f8>  // b.any
    3f4c:	mov	w2, #0x1                   	// #1
    3f50:	mov	x0, x21
    3f54:	mov	x1, x27
    3f58:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3f5c:	ldr	x8, [x24]
    3f60:	ldrb	w10, [x8, #23]
    3f64:	ldp	x9, x8, [x21, #16]
    3f68:	tbnz	w10, #5, 3fb0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x518>
    3f6c:	sub	x9, x9, x8
    3f70:	cmp	x9, #0x6
    3f74:	b.hi	3efc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x464>  // b.pmore
    3f78:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3f7c:	mov	w2, #0x7                   	// #7
    3f80:	mov	x0, x21
    3f84:	add	x1, x1, #0x0
    3f88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3f8c:	b	3f20 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x488>
    3f90:	strb	w25, [x8]
    3f94:	ldr	x8, [x21, #24]
    3f98:	add	x8, x8, #0x1
    3f9c:	str	x8, [x21, #24]
    3fa0:	ldr	x8, [x24]
    3fa4:	ldrb	w10, [x8, #23]
    3fa8:	ldp	x9, x8, [x21, #16]
    3fac:	tbz	w10, #5, 3f6c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x4d4>
    3fb0:	cmp	x9, x8
    3fb4:	b.ne	3fd0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x538>  // b.any
    3fb8:	mov	w2, #0x1                   	// #1
    3fbc:	mov	x0, x21
    3fc0:	mov	x1, x26
    3fc4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3fc8:	mov	x19, x0
    3fcc:	b	3fe8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x550>
    3fd0:	mov	w9, #0x20                  	// #32
    3fd4:	strb	w9, [x8]
    3fd8:	ldr	x8, [x21, #24]
    3fdc:	mov	x19, x21
    3fe0:	add	x8, x8, #0x1
    3fe4:	str	x8, [x21, #24]
    3fe8:	ldr	x0, [x24]
    3fec:	bl	0 <_ZNK4llvm5Value7getNameEv>
    3ff0:	ldp	x9, x8, [x19, #16]
    3ff4:	mov	x23, x1
    3ff8:	sub	x9, x9, x8
    3ffc:	cmp	x1, x9
    4000:	mov	x1, x0
    4004:	b.ls	4018 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x580>  // b.plast
    4008:	mov	x0, x19
    400c:	mov	x2, x23
    4010:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4014:	b	3f20 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x488>
    4018:	cbz	x23, 3f20 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x488>
    401c:	mov	x0, x8
    4020:	mov	x2, x23
    4024:	bl	0 <memcpy>
    4028:	ldr	x8, [x19, #24]
    402c:	add	x8, x8, x23
    4030:	str	x8, [x19, #24]
    4034:	b	3f20 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x488>
    4038:	mov	w9, #0xa0a                 	// #2570
    403c:	strh	w9, [x8]
    4040:	ldr	x8, [x21, #24]
    4044:	add	x8, x8, #0x2
    4048:	str	x8, [x21, #24]
    404c:	ldp	x9, x8, [sp]
    4050:	ldr	x8, [x8]
    4054:	cmp	x8, x9
    4058:	b.ne	40d4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x63c>  // b.any
    405c:	add	x8, x20, #0x10
    4060:	cmp	x8, x22
    4064:	b.hi	40f4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x65c>  // b.pmore
    4068:	mov	x20, x22
    406c:	b.eq	3cd0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x238>  // b.none
    4070:	ldr	x9, [x8]
    4074:	orr	x9, x9, #0x8
    4078:	cmn	x9, #0x8
    407c:	b.ne	3ccc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x234>  // b.any
    4080:	add	x8, x8, #0x10
    4084:	cmp	x22, x8
    4088:	b.ne	4070 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5d8>  // b.any
    408c:	mov	x20, x22
    4090:	b	3cd0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x238>
    4094:	ldp	x20, x19, [sp, #96]
    4098:	ldp	x22, x21, [sp, #80]
    409c:	ldp	x24, x23, [sp, #64]
    40a0:	ldp	x26, x25, [sp, #48]
    40a4:	ldp	x28, x27, [sp, #32]
    40a8:	ldp	x29, x30, [sp, #16]
    40ac:	add	sp, sp, #0x70
    40b0:	ret
    40b4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40b8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40bc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40c0:	add	x0, x0, #0x0
    40c4:	add	x1, x1, #0x0
    40c8:	add	x3, x3, #0x0
    40cc:	mov	w2, #0x99                  	// #153
    40d0:	bl	0 <__assert_fail>
    40d4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40d8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40dc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40e0:	add	x0, x0, #0x0
    40e4:	add	x1, x1, #0x0
    40e8:	add	x3, x3, #0x0
    40ec:	mov	w2, #0x4cf                 	// #1231
    40f0:	bl	0 <__assert_fail>
    40f4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40f8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40fc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4100:	add	x0, x0, #0x0
    4104:	add	x1, x1, #0x0
    4108:	add	x3, x3, #0x0
    410c:	mov	w2, #0x4e0                 	// #1248
    4110:	bl	0 <__assert_fail>

0000000000004114 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc>:
    4114:	stp	x29, x30, [sp, #-96]!
    4118:	stp	x28, x27, [sp, #16]
    411c:	stp	x26, x25, [sp, #32]
    4120:	stp	x24, x23, [sp, #48]
    4124:	stp	x22, x21, [sp, #64]
    4128:	stp	x20, x19, [sp, #80]
    412c:	mov	x29, sp
    4130:	ldp	x9, x8, [x1, #16]
    4134:	mov	x22, x3
    4138:	mov	x19, x1
    413c:	mov	x20, x2
    4140:	sub	x9, x9, x8
    4144:	cmp	x9, #0x9
    4148:	b.hi	41a0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x8c>  // b.pmore
    414c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4150:	add	x1, x1, #0x0
    4154:	mov	w2, #0xa                   	// #10
    4158:	mov	x0, x19
    415c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4160:	mov	x21, x0
    4164:	cbz	x22, 41cc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xb8>
    4168:	mov	x0, x22
    416c:	bl	0 <strlen>
    4170:	mov	x23, x0
    4174:	ldp	x8, x0, [x21, #16]
    4178:	sub	x8, x8, x0
    417c:	cmp	x23, x8
    4180:	b.ls	41e0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xcc>  // b.plast
    4184:	mov	x0, x21
    4188:	mov	x1, x22
    418c:	mov	x2, x23
    4190:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4194:	mov	x21, x0
    4198:	ldr	x0, [x0, #24]
    419c:	b	41fc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xe8>
    41a0:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    41a4:	add	x9, x9, #0x0
    41a8:	ldr	x9, [x9]
    41ac:	mov	w10, #0x203a                	// #8250
    41b0:	strh	w10, [x8, #8]
    41b4:	mov	x21, x19
    41b8:	str	x9, [x8]
    41bc:	ldr	x8, [x19, #24]
    41c0:	add	x8, x8, #0xa
    41c4:	str	x8, [x19, #24]
    41c8:	cbnz	x22, 4168 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x54>
    41cc:	mov	x23, xzr
    41d0:	ldp	x8, x0, [x21, #16]
    41d4:	sub	x8, x8, x0
    41d8:	cmp	x23, x8
    41dc:	b.hi	4184 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x70>  // b.pmore
    41e0:	cbz	x23, 41fc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xe8>
    41e4:	mov	x1, x22
    41e8:	mov	x2, x23
    41ec:	bl	0 <memcpy>
    41f0:	ldr	x8, [x21, #24]
    41f4:	add	x0, x8, x23
    41f8:	str	x0, [x21, #24]
    41fc:	ldr	x8, [x21, #16]
    4200:	cmp	x8, x0
    4204:	b.ne	4254 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x140>  // b.any
    4208:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    420c:	add	x1, x1, #0x0
    4210:	mov	w2, #0x1                   	// #1
    4214:	mov	x0, x21
    4218:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    421c:	ldp	x9, x8, [x19, #16]
    4220:	sub	x9, x9, x8
    4224:	cmp	x9, #0x5
    4228:	b.ls	4278 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x164>  // b.plast
    422c:	mov	w10, #0x6953                	// #26963
    4230:	mov	w9, #0x203a                	// #8250
    4234:	movk	w10, #0x657a, lsl #16
    4238:	strh	w9, [x8, #4]
    423c:	str	w10, [x8]
    4240:	ldr	x8, [x19, #24]
    4244:	mov	x0, x19
    4248:	add	x8, x8, #0x6
    424c:	str	x8, [x19, #24]
    4250:	b	428c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x178>
    4254:	mov	w8, #0xa                   	// #10
    4258:	strb	w8, [x0]
    425c:	ldr	x8, [x21, #24]
    4260:	add	x8, x8, #0x1
    4264:	str	x8, [x21, #24]
    4268:	ldp	x9, x8, [x19, #16]
    426c:	sub	x9, x9, x8
    4270:	cmp	x9, #0x5
    4274:	b.hi	422c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x118>  // b.pmore
    4278:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    427c:	add	x1, x1, #0x0
    4280:	mov	w2, #0x6                   	// #6
    4284:	mov	x0, x19
    4288:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    428c:	ldr	w1, [x20, #16]
    4290:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    4294:	ldp	x9, x8, [x0, #16]
    4298:	cmp	x9, x8
    429c:	b.ne	42b4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1a0>  // b.any
    42a0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    42a4:	add	x1, x1, #0x0
    42a8:	mov	w2, #0x1                   	// #1
    42ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    42b0:	b	42c8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1b4>
    42b4:	mov	w9, #0xa                   	// #10
    42b8:	strb	w9, [x8]
    42bc:	ldr	x8, [x0, #24]
    42c0:	add	x8, x8, #0x1
    42c4:	str	x8, [x0, #24]
    42c8:	ldr	w9, [x20, #24]
    42cc:	ldp	x25, x8, [x20]
    42d0:	ldr	w10, [x20, #16]
    42d4:	add	x26, x8, x9, lsl #4
    42d8:	mov	x27, x26
    42dc:	cbz	w10, 4308 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1f4>
    42e0:	cbz	w9, 4314 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x200>
    42e4:	lsl	x9, x9, #4
    42e8:	add	x27, x9, x8
    42ec:	ldr	x10, [x8]
    42f0:	orr	x10, x10, #0x4
    42f4:	cmn	x10, #0x4
    42f8:	b.ne	4314 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x200>  // b.any
    42fc:	subs	x9, x9, #0x10
    4300:	add	x8, x8, #0x10
    4304:	b.ne	42ec <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1d8>  // b.any
    4308:	cmp	x27, x26
    430c:	b.ne	4320 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x20c>  // b.any
    4310:	b	44ec <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3d8>
    4314:	mov	x27, x8
    4318:	cmp	x27, x26
    431c:	b.eq	44ec <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3d8>  // b.none
    4320:	adrp	x21, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4324:	adrp	x22, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4328:	adrp	x23, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    432c:	add	x21, x21, #0x0
    4330:	add	x22, x22, #0x0
    4334:	add	x23, x23, #0x0
    4338:	mov	w28, #0xa                   	// #10
    433c:	b	434c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x238>
    4340:	mov	x27, x8
    4344:	cmp	x27, x26
    4348:	b.eq	44ec <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3d8>  // b.none
    434c:	ldp	x9, x8, [x19, #16]
    4350:	ldr	x24, [x27]
    4354:	sub	x9, x9, x8
    4358:	cmp	x9, #0x10
    435c:	b.hi	4374 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x260>  // b.pmore
    4360:	mov	w2, #0x11                  	// #17
    4364:	mov	x0, x19
    4368:	mov	x1, x21
    436c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4370:	b	4394 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x280>
    4374:	ldr	q0, [x21]
    4378:	mov	w9, #0x20                  	// #32
    437c:	strb	w9, [x8, #16]
    4380:	mov	x0, x19
    4384:	str	q0, [x8]
    4388:	ldr	x8, [x19, #24]
    438c:	add	x8, x8, #0x11
    4390:	str	x8, [x19, #24]
    4394:	ldr	x8, [x20]
    4398:	cmp	x8, x25
    439c:	b.ne	4508 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3f4>  // b.any
    43a0:	ldr	w1, [x27, #12]
    43a4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    43a8:	ldp	x9, x8, [x0, #16]
    43ac:	cmp	x9, x8
    43b0:	b.ne	43f4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x2e0>  // b.any
    43b4:	mov	w2, #0x1                   	// #1
    43b8:	mov	x1, x22
    43bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    43c0:	ldp	x9, x8, [x19, #16]
    43c4:	sub	x9, x9, x8
    43c8:	cmp	x9, #0x14
    43cc:	b.ls	4414 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x300>  // b.plast
    43d0:	ldur	x9, [x23, #13]
    43d4:	ldr	q0, [x23]
    43d8:	mov	x0, x19
    43dc:	stur	x9, [x8, #13]
    43e0:	str	q0, [x8]
    43e4:	ldr	x8, [x19, #24]
    43e8:	add	x8, x8, #0x15
    43ec:	str	x8, [x19, #24]
    43f0:	b	4424 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x310>
    43f4:	strb	w28, [x8]
    43f8:	ldr	x8, [x0, #24]
    43fc:	add	x8, x8, #0x1
    4400:	str	x8, [x0, #24]
    4404:	ldp	x9, x8, [x19, #16]
    4408:	sub	x9, x9, x8
    440c:	cmp	x9, #0x14
    4410:	b.hi	43d0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x2bc>  // b.pmore
    4414:	mov	w2, #0x15                  	// #21
    4418:	mov	x0, x19
    441c:	mov	x1, x23
    4420:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4424:	ldr	x8, [x20]
    4428:	cmp	x8, x25
    442c:	b.ne	4508 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3f4>  // b.any
    4430:	ldr	w1, [x27, #8]
    4434:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    4438:	ldp	x9, x8, [x0, #16]
    443c:	cmp	x9, x8
    4440:	b.ne	4454 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x340>  // b.any
    4444:	mov	w2, #0x1                   	// #1
    4448:	mov	x1, x22
    444c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4450:	b	4464 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x350>
    4454:	strb	w28, [x8]
    4458:	ldr	x8, [x0, #24]
    445c:	add	x8, x8, #0x1
    4460:	str	x8, [x0, #24]
    4464:	mov	x0, x24
    4468:	mov	x1, x19
    446c:	mov	x2, xzr
    4470:	mov	w3, wzr
    4474:	bl	0 <_ZNK4llvm8Metadata5printERNS_11raw_ostreamEPKNS_6ModuleEb>
    4478:	ldp	x9, x8, [x19, #16]
    447c:	cmp	x9, x8
    4480:	b.ne	4498 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x384>  // b.any
    4484:	mov	w2, #0x1                   	// #1
    4488:	mov	x0, x19
    448c:	mov	x1, x22
    4490:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4494:	b	44a8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x394>
    4498:	strb	w28, [x8]
    449c:	ldr	x8, [x19, #24]
    44a0:	add	x8, x8, #0x1
    44a4:	str	x8, [x19, #24]
    44a8:	ldr	x8, [x20]
    44ac:	cmp	x8, x25
    44b0:	b.ne	4528 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x414>  // b.any
    44b4:	add	x8, x27, #0x10
    44b8:	cmp	x8, x26
    44bc:	b.hi	4548 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x434>  // b.pmore
    44c0:	mov	x27, x26
    44c4:	b.eq	4344 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x230>  // b.none
    44c8:	ldr	x9, [x8]
    44cc:	orr	x9, x9, #0x4
    44d0:	cmn	x9, #0x4
    44d4:	b.ne	4340 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x22c>  // b.any
    44d8:	add	x8, x8, #0x10
    44dc:	cmp	x26, x8
    44e0:	b.ne	44c8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3b4>  // b.any
    44e4:	mov	x27, x26
    44e8:	b	4344 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x230>
    44ec:	ldp	x20, x19, [sp, #80]
    44f0:	ldp	x22, x21, [sp, #64]
    44f4:	ldp	x24, x23, [sp, #48]
    44f8:	ldp	x26, x25, [sp, #32]
    44fc:	ldp	x28, x27, [sp, #16]
    4500:	ldp	x29, x30, [sp], #96
    4504:	ret
    4508:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    450c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4510:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4514:	add	x0, x0, #0x0
    4518:	add	x1, x1, #0x0
    451c:	add	x3, x3, #0x0
    4520:	mov	w2, #0x4b9                 	// #1209
    4524:	bl	0 <__assert_fail>
    4528:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    452c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4530:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4534:	add	x0, x0, #0x0
    4538:	add	x1, x1, #0x0
    453c:	add	x3, x3, #0x0
    4540:	mov	w2, #0x4cf                 	// #1231
    4544:	bl	0 <__assert_fail>
    4548:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    454c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4550:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4554:	add	x0, x0, #0x0
    4558:	add	x1, x1, #0x0
    455c:	add	x3, x3, #0x0
    4560:	mov	w2, #0x4e0                 	// #1248
    4564:	bl	0 <__assert_fail>

0000000000004568 <_ZL21isIntOrIntVectorValueRKSt4pairIPKN4llvm5ValueEjE>:
    4568:	ldr	x8, [x0]
    456c:	ldr	x9, [x8]
    4570:	ldrb	w8, [x9, #8]
    4574:	cmp	w8, #0x10
    4578:	b.ne	4588 <_ZL21isIntOrIntVectorValueRKSt4pairIPKN4llvm5ValueEjE+0x20>  // b.any
    457c:	ldr	x8, [x9, #16]
    4580:	ldr	x8, [x8]
    4584:	ldrb	w8, [x8, #8]
    4588:	cmp	w8, #0xb
    458c:	cset	w0, eq  // eq = none
    4590:	ret

0000000000004594 <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE>:
    4594:	stp	x29, x30, [sp, #-48]!
    4598:	stp	x22, x21, [sp, #16]
    459c:	stp	x20, x19, [sp, #32]
    45a0:	mov	x29, sp
    45a4:	mov	x20, x0
    45a8:	mov	x0, x1
    45ac:	mov	x19, x1
    45b0:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
    45b4:	cbz	w0, 45e8 <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE+0x54>
    45b8:	mov	w21, w0
    45bc:	mov	w22, wzr
    45c0:	mov	x0, x19
    45c4:	mov	w1, w22
    45c8:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
    45cc:	mov	x2, x0
    45d0:	mov	x0, x20
    45d4:	mov	w1, wzr
    45d8:	bl	461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    45dc:	add	w22, w22, #0x1
    45e0:	cmp	w21, w22
    45e4:	b.ne	45c0 <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE+0x2c>  // b.any
    45e8:	ldp	x20, x19, [sp, #32]
    45ec:	ldp	x22, x21, [sp, #16]
    45f0:	ldp	x29, x30, [sp], #48
    45f4:	ret

00000000000045f8 <_ZNK4llvm15ValueEnumerator21getMetadataFunctionIDEPKNS_8FunctionE>:
    45f8:	cbz	x1, 4614 <_ZNK4llvm15ValueEnumerator21getMetadataFunctionIDEPKNS_8FunctionE+0x1c>
    45fc:	stp	x29, x30, [sp, #-16]!
    4600:	mov	x29, sp
    4604:	bl	3828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    4608:	add	w0, w0, #0x1
    460c:	ldp	x29, x30, [sp], #16
    4610:	ret
    4614:	mov	w0, wzr
    4618:	ret

000000000000461c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>:
    461c:	stp	x29, x30, [sp, #-96]!
    4620:	stp	x28, x27, [sp, #16]
    4624:	stp	x26, x25, [sp, #32]
    4628:	stp	x24, x23, [sp, #48]
    462c:	stp	x22, x21, [sp, #64]
    4630:	stp	x20, x19, [sp, #80]
    4634:	mov	x29, sp
    4638:	sub	sp, sp, #0x340
    463c:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4640:	ldr	d0, [x9]
    4644:	add	x8, sp, #0x228
    4648:	add	x10, sp, #0x18
    464c:	add	x11, x8, #0x10
    4650:	add	x8, x10, #0x10
    4654:	mov	w19, w1
    4658:	mov	x20, x0
    465c:	str	x11, [sp, #8]
    4660:	str	x11, [sp, #552]
    4664:	str	x8, [sp, #24]
    4668:	str	d0, [sp, #560]
    466c:	str	d0, [sp, #32]
    4670:	bl	50bc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    4674:	cbz	x0, 46b4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x98>
    4678:	ldp	w8, w9, [sp, #32]
    467c:	ldr	w10, [x0, #8]
    4680:	mov	x22, x0
    4684:	cmp	w8, w9
    4688:	sub	x21, x0, x10, lsl #3
    468c:	b.cs	4b40 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x524>  // b.hs, b.nlast
    4690:	ldr	x9, [sp, #24]
    4694:	add	x8, x9, w8, uxtw #4
    4698:	stp	x22, x21, [x8]
    469c:	ldp	w8, w9, [sp, #32]
    46a0:	cmp	w8, w9
    46a4:	b.cs	4b54 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x538>  // b.hs, b.nlast
    46a8:	add	w8, w8, #0x1
    46ac:	str	w8, [sp, #32]
    46b0:	b	46bc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xa0>
    46b4:	ldr	w8, [sp, #32]
    46b8:	cbz	w8, 4af0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x4d4>
    46bc:	add	x22, x20, #0x100
    46c0:	mov	x27, #0xfffffffffffffff     	// #1152921504606846975
    46c4:	b	46d0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xb4>
    46c8:	str	wzr, [sp, #560]
    46cc:	cbz	w8, 4af0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x4d4>
    46d0:	ldr	x9, [sp, #24]
    46d4:	add	x8, x9, w8, uxtw #4
    46d8:	ldp	x28, x23, [x8, #-16]
    46dc:	sub	x8, x28, x23
    46e0:	cmp	x8, #0x20
    46e4:	b.lt	4754 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x138>  // b.tstop
    46e8:	lsr	x8, x8, #5
    46ec:	add	x24, x8, #0x1
    46f0:	ldr	x2, [x23]
    46f4:	mov	x0, x20
    46f8:	mov	w1, w19
    46fc:	bl	50bc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    4700:	cbnz	x0, 47cc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b0>
    4704:	ldr	x2, [x23, #8]
    4708:	mov	x0, x20
    470c:	mov	w1, w19
    4710:	bl	50bc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    4714:	cbnz	x0, 47b8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x19c>
    4718:	ldr	x2, [x23, #16]
    471c:	mov	x0, x20
    4720:	mov	w1, w19
    4724:	bl	50bc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    4728:	cbnz	x0, 47c8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1ac>
    472c:	ldr	x2, [x23, #24]
    4730:	mov	x0, x20
    4734:	mov	w1, w19
    4738:	bl	50bc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    473c:	cbnz	x0, 4890 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x274>
    4740:	sub	x24, x24, #0x1
    4744:	cmp	x24, #0x1
    4748:	add	x23, x23, #0x20
    474c:	b.gt	46f0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xd4>
    4750:	sub	x8, x28, x23
    4754:	asr	x8, x8, #3
    4758:	cmp	x8, #0x1
    475c:	b.eq	47a0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x184>  // b.none
    4760:	cmp	x8, #0x2
    4764:	b.eq	4788 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x16c>  // b.none
    4768:	cmp	x8, #0x3
    476c:	b.ne	489c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x280>  // b.any
    4770:	ldr	x2, [x23]
    4774:	mov	x0, x20
    4778:	mov	w1, w19
    477c:	bl	50bc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    4780:	cbnz	x0, 47cc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b0>
    4784:	add	x23, x23, #0x8
    4788:	ldr	x2, [x23]
    478c:	mov	x0, x20
    4790:	mov	w1, w19
    4794:	bl	50bc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    4798:	cbnz	x0, 47cc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b0>
    479c:	add	x23, x23, #0x8
    47a0:	ldr	x2, [x23]
    47a4:	mov	x0, x20
    47a8:	mov	w1, w19
    47ac:	bl	50bc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    47b0:	cbnz	x0, 47cc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b0>
    47b4:	b	489c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x280>
    47b8:	add	x23, x23, #0x8
    47bc:	cmp	x23, x28
    47c0:	b.ne	47d4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b8>  // b.any
    47c4:	b	489c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x280>
    47c8:	add	x23, x23, #0x10
    47cc:	cmp	x23, x28
    47d0:	b.eq	489c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x280>  // b.none
    47d4:	ldr	x24, [x23]
    47d8:	cbz	x24, 4b94 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x578>
    47dc:	ldrb	w8, [x24]
    47e0:	sub	w8, w8, #0x4
    47e4:	cmp	w8, #0x1c
    47e8:	b.cs	4bb4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x598>  // b.hs, b.nlast
    47ec:	ldr	w8, [sp, #32]
    47f0:	cbz	w8, 4bd4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x5b8>
    47f4:	ldr	x9, [sp, #24]
    47f8:	add	x10, x23, #0x8
    47fc:	add	x11, x9, x8, lsl #4
    4800:	stur	x10, [x11, #-8]
    4804:	ldrb	w10, [x24, #1]
    4808:	and	w10, w10, #0x7f
    480c:	cmp	w10, #0x1
    4810:	b.ne	4824 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x208>  // b.any
    4814:	ldrb	w10, [x28, #1]
    4818:	and	w10, w10, #0x7f
    481c:	cmp	w10, #0x1
    4820:	b.ne	4858 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x23c>  // b.any
    4824:	ldr	w10, [sp, #36]
    4828:	ldr	w11, [x24, #8]
    482c:	cmp	w8, w10
    4830:	sub	x21, x24, x11, lsl #3
    4834:	b.cs	4ab0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x494>  // b.hs, b.nlast
    4838:	add	x8, x9, x8, lsl #4
    483c:	stp	x24, x21, [x8]
    4840:	ldp	w8, w9, [sp, #32]
    4844:	cmp	w8, w9
    4848:	b.cs	4b54 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x538>  // b.hs, b.nlast
    484c:	add	w8, w8, #0x1
    4850:	str	w8, [sp, #32]
    4854:	b	46cc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xb0>
    4858:	ldr	w8, [sp, #560]
    485c:	ldr	w9, [sp, #564]
    4860:	cmp	w8, w9
    4864:	b.cs	4ad4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x4b8>  // b.hs, b.nlast
    4868:	ldr	x9, [sp, #552]
    486c:	str	x24, [x9, w8, uxtw #3]
    4870:	ldr	w9, [sp, #560]
    4874:	ldr	w8, [sp, #564]
    4878:	cmp	w9, w8
    487c:	b.cs	4b54 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x538>  // b.hs, b.nlast
    4880:	ldr	w8, [sp, #32]
    4884:	add	w9, w9, #0x1
    4888:	str	w9, [sp, #560]
    488c:	b	46cc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xb0>
    4890:	add	x23, x23, #0x18
    4894:	cmp	x23, x28
    4898:	b.ne	47d4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b8>  // b.any
    489c:	ldp	w8, w9, [sp, #32]
    48a0:	sub	x8, x8, #0x1
    48a4:	cmp	x8, x9
    48a8:	b.hi	4b54 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x538>  // b.pmore
    48ac:	str	w8, [sp, #32]
    48b0:	ldp	x8, x9, [x20, #216]
    48b4:	cmp	x8, x9
    48b8:	b.eq	4948 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x32c>  // b.none
    48bc:	str	x28, [x8]
    48c0:	ldp	x23, x8, [x20, #208]
    48c4:	add	x25, x8, #0x8
    48c8:	str	x25, [x20, #216]
    48cc:	str	x28, [sp, #16]
    48d0:	ldr	w9, [x22, #24]
    48d4:	cbz	w9, 49e0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x3c4>
    48d8:	orr	x8, x28, #0x4
    48dc:	cmn	x8, #0x4
    48e0:	b.eq	4b74 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x558>  // b.none
    48e4:	ldr	x8, [x22, #8]
    48e8:	ubfx	x10, x28, #4, #28
    48ec:	eor	w10, w10, w28, lsr #9
    48f0:	sub	w9, w9, #0x1
    48f4:	and	w10, w10, w9
    48f8:	add	x0, x8, w10, uxtw #4
    48fc:	ldr	x12, [x0]
    4900:	cmp	x12, x28
    4904:	b.eq	49fc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x3e0>  // b.none
    4908:	mov	x11, xzr
    490c:	mov	w13, #0x1                   	// #1
    4910:	cmn	x12, #0x4
    4914:	b.eq	4ac8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x4ac>  // b.none
    4918:	cmp	x11, #0x0
    491c:	add	w10, w10, w13
    4920:	mov	x14, #0xfffffffffffffff8    	// #-8
    4924:	ccmp	x12, x14, #0x0, eq  // eq = none
    4928:	and	w10, w10, w9
    492c:	csel	x11, x11, x0, ne  // ne = any
    4930:	add	x0, x8, w10, uxtw #4
    4934:	ldr	x12, [x0]
    4938:	add	w13, w13, #0x1
    493c:	cmp	x12, x28
    4940:	b.eq	49fc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x3e0>  // b.none
    4944:	b	4910 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2f4>
    4948:	ldr	x24, [x20, #208]
    494c:	sub	x25, x8, x24
    4950:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    4954:	cmp	x25, x8
    4958:	b.eq	4bf4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x5d8>  // b.none
    495c:	asr	x26, x25, #3
    4960:	cmp	x25, #0x0
    4964:	csinc	x8, x26, xzr, ne  // ne = any
    4968:	adds	x8, x8, x26
    496c:	lsr	x10, x8, #60
    4970:	cset	w9, cs  // cs = hs, nlast
    4974:	cmp	x10, #0x0
    4978:	cset	w10, ne  // ne = any
    497c:	orr	w9, w9, w10
    4980:	cmp	w9, #0x0
    4984:	csel	x21, x27, x8, ne  // ne = any
    4988:	cbz	x21, 4a98 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x47c>
    498c:	lsl	x0, x21, #3
    4990:	bl	0 <_Znwm>
    4994:	mov	x23, x0
    4998:	add	x26, x23, x26, lsl #3
    499c:	cmp	x25, #0x1
    49a0:	str	x28, [x26]
    49a4:	b.lt	49b8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x39c>  // b.tstop
    49a8:	mov	x0, x23
    49ac:	mov	x1, x24
    49b0:	mov	x2, x25
    49b4:	bl	0 <memmove>
    49b8:	add	x25, x26, #0x8
    49bc:	cbz	x24, 49c8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x3ac>
    49c0:	mov	x0, x24
    49c4:	bl	0 <_ZdlPv>
    49c8:	add	x8, x23, x21, lsl #3
    49cc:	stp	x23, x25, [x20, #208]
    49d0:	str	x8, [x20, #224]
    49d4:	str	x28, [sp, #16]
    49d8:	ldr	w9, [x22, #24]
    49dc:	cbnz	w9, 48d8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2bc>
    49e0:	mov	x3, xzr
    49e4:	add	x1, sp, #0x10
    49e8:	add	x2, sp, #0x10
    49ec:	mov	x0, x22
    49f0:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    49f4:	ldr	x8, [sp, #16]
    49f8:	stp	x8, xzr, [x0]
    49fc:	sub	x8, x25, x23
    4a00:	lsr	x8, x8, #3
    4a04:	str	w8, [x0, #12]
    4a08:	ldr	w8, [sp, #32]
    4a0c:	cbz	w8, 4a2c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x410>
    4a10:	ldr	x9, [sp, #24]
    4a14:	add	x9, x9, x8, lsl #4
    4a18:	ldur	x9, [x9, #-16]
    4a1c:	ldrb	w9, [x9, #1]
    4a20:	and	w9, w9, #0x7f
    4a24:	cmp	w9, #0x1
    4a28:	b.ne	46cc <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xb0>  // b.any
    4a2c:	ldr	w10, [sp, #560]
    4a30:	cbz	w10, 46c8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xac>
    4a34:	ldr	x23, [sp, #552]
    4a38:	ldr	w9, [sp, #36]
    4a3c:	lsl	x24, x10, #3
    4a40:	ldr	x21, [x23]
    4a44:	cmp	w8, w9
    4a48:	ldr	w10, [x21, #8]
    4a4c:	sub	x25, x21, x10, lsl #3
    4a50:	b.cs	4a84 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x468>  // b.hs, b.nlast
    4a54:	ldr	x9, [sp, #24]
    4a58:	add	x8, x9, w8, uxtw #4
    4a5c:	stp	x21, x25, [x8]
    4a60:	ldp	w8, w9, [sp, #32]
    4a64:	cmp	w8, w9
    4a68:	b.cs	4b54 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x538>  // b.hs, b.nlast
    4a6c:	add	w8, w8, #0x1
    4a70:	subs	x24, x24, #0x8
    4a74:	add	x23, x23, #0x8
    4a78:	str	w8, [sp, #32]
    4a7c:	b.ne	4a40 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x424>  // b.any
    4a80:	b	46c8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xac>
    4a84:	add	x0, sp, #0x18
    4a88:	mov	x1, xzr
    4a8c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4a90:	ldr	w8, [sp, #32]
    4a94:	b	4a54 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x438>
    4a98:	mov	x23, xzr
    4a9c:	add	x26, x23, x26, lsl #3
    4aa0:	cmp	x25, #0x1
    4aa4:	str	x28, [x26]
    4aa8:	b.ge	49a8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x38c>  // b.tcont
    4aac:	b	49b8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x39c>
    4ab0:	add	x0, sp, #0x18
    4ab4:	mov	x1, xzr
    4ab8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4abc:	ldr	w8, [sp, #32]
    4ac0:	ldr	x9, [sp, #24]
    4ac4:	b	4838 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x21c>
    4ac8:	cmp	x11, #0x0
    4acc:	csel	x3, x0, x11, eq  // eq = none
    4ad0:	b	49e4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x3c8>
    4ad4:	ldr	x1, [sp, #8]
    4ad8:	add	x0, sp, #0x228
    4adc:	mov	w3, #0x8                   	// #8
    4ae0:	mov	x2, xzr
    4ae4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4ae8:	ldr	w8, [sp, #560]
    4aec:	b	4868 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x24c>
    4af0:	ldr	x0, [sp, #24]
    4af4:	add	x8, sp, #0x18
    4af8:	add	x8, x8, #0x10
    4afc:	cmp	x0, x8
    4b00:	b.eq	4b08 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x4ec>  // b.none
    4b04:	bl	0 <free>
    4b08:	ldr	x0, [sp, #552]
    4b0c:	add	x8, sp, #0x228
    4b10:	add	x8, x8, #0x10
    4b14:	cmp	x0, x8
    4b18:	b.eq	4b20 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x504>  // b.none
    4b1c:	bl	0 <free>
    4b20:	add	sp, sp, #0x340
    4b24:	ldp	x20, x19, [sp, #80]
    4b28:	ldp	x22, x21, [sp, #64]
    4b2c:	ldp	x24, x23, [sp, #48]
    4b30:	ldp	x26, x25, [sp, #32]
    4b34:	ldp	x28, x27, [sp, #16]
    4b38:	ldp	x29, x30, [sp], #96
    4b3c:	ret
    4b40:	add	x0, sp, #0x18
    4b44:	mov	x1, xzr
    4b48:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b4c:	ldr	w8, [sp, #32]
    4b50:	b	4690 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x74>
    4b54:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b58:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b5c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b60:	add	x0, x0, #0x0
    4b64:	add	x1, x1, #0x0
    4b68:	add	x3, x3, #0x0
    4b6c:	mov	w2, #0x43                  	// #67
    4b70:	bl	0 <__assert_fail>
    4b74:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b78:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b7c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b80:	add	x0, x0, #0x0
    4b84:	add	x1, x1, #0x0
    4b88:	add	x3, x3, #0x0
    4b8c:	mov	w2, #0x252                 	// #594
    4b90:	bl	0 <__assert_fail>
    4b94:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b98:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b9c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4ba0:	add	x0, x0, #0x0
    4ba4:	add	x1, x1, #0x0
    4ba8:	add	x3, x3, #0x0
    4bac:	mov	w2, #0x5b                  	// #91
    4bb0:	bl	0 <__assert_fail>
    4bb4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4bb8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4bbc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4bc0:	add	x0, x0, #0x0
    4bc4:	add	x1, x1, #0x0
    4bc8:	add	x3, x3, #0x0
    4bcc:	mov	w2, #0xfa                  	// #250
    4bd0:	bl	0 <__assert_fail>
    4bd4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4bd8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4bdc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4be0:	add	x0, x0, #0x0
    4be4:	add	x1, x1, #0x0
    4be8:	add	x3, x3, #0x0
    4bec:	mov	w2, #0xa7                  	// #167
    4bf0:	bl	0 <__assert_fail>
    4bf4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4bf8:	add	x0, x0, #0x0
    4bfc:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000004c00 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataERKNS_8FunctionEPKNS_15LocalAsMetadataE>:
    4c00:	stp	x29, x30, [sp, #-32]!
    4c04:	stp	x20, x19, [sp, #16]
    4c08:	mov	x29, sp
    4c0c:	mov	x19, x2
    4c10:	mov	x20, x0
    4c14:	bl	3828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    4c18:	add	w1, w0, #0x1
    4c1c:	mov	x0, x20
    4c20:	mov	x2, x19
    4c24:	ldp	x20, x19, [sp, #16]
    4c28:	ldp	x29, x30, [sp], #32
    4c2c:	b	4c30 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE>

0000000000004c30 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE>:
    4c30:	stp	x29, x30, [sp, #-96]!
    4c34:	str	x27, [sp, #16]
    4c38:	stp	x26, x25, [sp, #32]
    4c3c:	stp	x24, x23, [sp, #48]
    4c40:	stp	x22, x21, [sp, #64]
    4c44:	stp	x20, x19, [sp, #80]
    4c48:	mov	x29, sp
    4c4c:	cbz	w1, 4e54 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x224>
    4c50:	str	x2, [x29, #24]
    4c54:	ldr	w9, [x0, #280]
    4c58:	mov	x20, x2
    4c5c:	mov	w21, w1
    4c60:	mov	x19, x0
    4c64:	cbz	w9, 4cd8 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xa8>
    4c68:	orr	x8, x20, #0x4
    4c6c:	cmn	x8, #0x4
    4c70:	b.eq	4e34 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x204>  // b.none
    4c74:	ldr	x8, [x19, #264]
    4c78:	ubfx	x10, x20, #4, #28
    4c7c:	eor	w10, w10, w20, lsr #9
    4c80:	sub	w9, w9, #0x1
    4c84:	and	w10, w10, w9
    4c88:	add	x22, x8, w10, uxtw #4
    4c8c:	ldr	x12, [x22]
    4c90:	cmp	x12, x20
    4c94:	b.eq	4cf8 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xc8>  // b.none
    4c98:	mov	x11, xzr
    4c9c:	mov	w14, #0x1                   	// #1
    4ca0:	mov	x13, #0xfffffffffffffff8    	// #-8
    4ca4:	cmn	x12, #0x4
    4ca8:	b.eq	4e28 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x1f8>  // b.none
    4cac:	cmp	x11, #0x0
    4cb0:	add	w10, w10, w14
    4cb4:	ccmp	x12, x13, #0x0, eq  // eq = none
    4cb8:	and	w10, w10, w9
    4cbc:	csel	x11, x11, x22, ne  // ne = any
    4cc0:	add	x22, x8, w10, uxtw #4
    4cc4:	ldr	x12, [x22]
    4cc8:	add	w14, w14, #0x1
    4ccc:	cmp	x12, x20
    4cd0:	b.eq	4cf8 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xc8>  // b.none
    4cd4:	b	4ca4 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x74>
    4cd8:	mov	x3, xzr
    4cdc:	add	x0, x19, #0x100
    4ce0:	add	x1, x29, #0x18
    4ce4:	add	x2, x29, #0x18
    4ce8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4cec:	ldr	x8, [x29, #24]
    4cf0:	mov	x22, x0
    4cf4:	stp	x8, xzr, [x0]
    4cf8:	ldr	w8, [x22, #12]
    4cfc:	cbz	w8, 4d2c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xfc>
    4d00:	ldr	w8, [x22, #8]
    4d04:	cmp	w8, w21
    4d08:	b.eq	4df4 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x1c4>  // b.none
    4d0c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4d10:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4d14:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4d18:	add	x0, x0, #0x0
    4d1c:	add	x1, x1, #0x0
    4d20:	add	x3, x3, #0x0
    4d24:	mov	w2, #0x2ba                 	// #698
    4d28:	bl	0 <__assert_fail>
    4d2c:	ldp	x8, x9, [x19, #216]
    4d30:	cmp	x8, x9
    4d34:	b.eq	4d4c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x11c>  // b.none
    4d38:	str	x20, [x8]
    4d3c:	ldp	x24, x8, [x19, #208]
    4d40:	add	x25, x8, #0x8
    4d44:	str	x25, [x19, #216]
    4d48:	b	4ddc <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x1ac>
    4d4c:	ldr	x23, [x19, #208]
    4d50:	sub	x25, x8, x23
    4d54:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    4d58:	cmp	x25, x8
    4d5c:	b.eq	4e74 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x244>  // b.none
    4d60:	asr	x27, x25, #3
    4d64:	cmp	x25, #0x0
    4d68:	csinc	x8, x27, xzr, ne  // ne = any
    4d6c:	adds	x8, x8, x27
    4d70:	lsr	x10, x8, #60
    4d74:	cset	w9, cs  // cs = hs, nlast
    4d78:	cmp	x10, #0x0
    4d7c:	cset	w10, ne  // ne = any
    4d80:	orr	w9, w9, w10
    4d84:	cmp	w9, #0x0
    4d88:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    4d8c:	csel	x26, x9, x8, ne  // ne = any
    4d90:	cbz	x26, 4e10 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x1e0>
    4d94:	lsl	x0, x26, #3
    4d98:	bl	0 <_Znwm>
    4d9c:	mov	x24, x0
    4da0:	add	x27, x24, x27, lsl #3
    4da4:	cmp	x25, #0x1
    4da8:	str	x20, [x27]
    4dac:	b.lt	4dc0 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x190>  // b.tstop
    4db0:	mov	x0, x24
    4db4:	mov	x1, x23
    4db8:	mov	x2, x25
    4dbc:	bl	0 <memmove>
    4dc0:	add	x25, x27, #0x8
    4dc4:	cbz	x23, 4dd0 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x1a0>
    4dc8:	mov	x0, x23
    4dcc:	bl	0 <_ZdlPv>
    4dd0:	add	x8, x24, x26, lsl #3
    4dd4:	stp	x24, x25, [x19, #208]
    4dd8:	str	x8, [x19, #224]
    4ddc:	sub	x8, x25, x24
    4de0:	lsr	x8, x8, #3
    4de4:	stp	w21, w8, [x22, #8]
    4de8:	ldr	x1, [x20, #136]
    4dec:	mov	x0, x19
    4df0:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    4df4:	ldp	x20, x19, [sp, #80]
    4df8:	ldp	x22, x21, [sp, #64]
    4dfc:	ldp	x24, x23, [sp, #48]
    4e00:	ldp	x26, x25, [sp, #32]
    4e04:	ldr	x27, [sp, #16]
    4e08:	ldp	x29, x30, [sp], #96
    4e0c:	ret
    4e10:	mov	x24, xzr
    4e14:	add	x27, x24, x27, lsl #3
    4e18:	cmp	x25, #0x1
    4e1c:	str	x20, [x27]
    4e20:	b.ge	4db0 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x180>  // b.tcont
    4e24:	b	4dc0 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x190>
    4e28:	cmp	x11, #0x0
    4e2c:	csel	x3, x22, x11, eq  // eq = none
    4e30:	b	4cdc <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xac>
    4e34:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e38:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e3c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e40:	add	x0, x0, #0x0
    4e44:	add	x1, x1, #0x0
    4e48:	add	x3, x3, #0x0
    4e4c:	mov	w2, #0x252                 	// #594
    4e50:	bl	0 <__assert_fail>
    4e54:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e58:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e5c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e60:	add	x0, x0, #0x0
    4e64:	add	x1, x1, #0x0
    4e68:	add	x3, x3, #0x0
    4e6c:	mov	w2, #0x2b5                 	// #693
    4e70:	bl	0 <__assert_fail>
    4e74:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e78:	add	x0, x0, #0x0
    4e7c:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000004e80 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE>:
    4e80:	stp	x29, x30, [sp, #-64]!
    4e84:	stp	x28, x23, [sp, #16]
    4e88:	stp	x22, x21, [sp, #32]
    4e8c:	stp	x20, x19, [sp, #48]
    4e90:	mov	x29, sp
    4e94:	sub	sp, sp, #0x210
    4e98:	adrp	x8, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e9c:	ldr	d0, [x8]
    4ea0:	mov	x8, sp
    4ea4:	add	x19, x8, #0x10
    4ea8:	str	x19, [sp]
    4eac:	str	d0, [sp, #8]
    4eb0:	ldr	w8, [x1, #8]
    4eb4:	cbz	w8, 5044 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1c4>
    4eb8:	ldr	w8, [x1, #12]
    4ebc:	str	wzr, [x1, #8]
    4ec0:	cbz	w8, 5044 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1c4>
    4ec4:	ldr	x8, [x1]
    4ec8:	cbz	x8, 509c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x21c>
    4ecc:	ldrb	w9, [x8]
    4ed0:	sub	w9, w9, #0x4
    4ed4:	cmp	w9, #0x1b
    4ed8:	b.hi	5044 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1c4>  // b.pmore
    4edc:	str	x8, [sp, #16]
    4ee0:	mov	w8, #0x1                   	// #1
    4ee4:	mov	x20, x0
    4ee8:	str	w8, [sp, #8]
    4eec:	mov	w9, #0x40                  	// #64
    4ef0:	b	4ef8 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x78>
    4ef4:	cbz	w8, 502c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1ac>
    4ef8:	mov	w10, w8
    4efc:	sub	x8, x10, #0x1
    4f00:	cmp	x8, w9, uxtw
    4f04:	b.hi	507c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1fc>  // b.pmore
    4f08:	ldr	x11, [sp]
    4f0c:	add	x10, x11, x10, lsl #3
    4f10:	ldur	x21, [x10, #-8]
    4f14:	str	w8, [sp, #8]
    4f18:	ldr	w10, [x21, #8]
    4f1c:	neg	x11, x10
    4f20:	lsl	x11, x11, #3
    4f24:	cbz	x11, 4ef4 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x74>
    4f28:	sub	x22, x21, x10, lsl #3
    4f2c:	b	4f3c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xbc>
    4f30:	add	x22, x22, #0x8
    4f34:	cmp	x22, x21
    4f38:	b.eq	4ef4 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x74>  // b.none
    4f3c:	ldr	x12, [x22]
    4f40:	cbz	x12, 4f30 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    4f44:	ldr	w10, [x20, #280]
    4f48:	ldr	x11, [x20, #264]
    4f4c:	cbz	w10, 4fa8 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x128>
    4f50:	orr	x13, x12, #0x4
    4f54:	cmn	x13, #0x4
    4f58:	b.eq	505c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1dc>  // b.none
    4f5c:	ubfx	x13, x12, #4, #28
    4f60:	eor	w14, w13, w12, lsr #9
    4f64:	sub	w13, w10, #0x1
    4f68:	and	w14, w13, w14
    4f6c:	add	x15, x11, w14, uxtw #4
    4f70:	ldr	x16, [x15]
    4f74:	cmp	x16, x12
    4f78:	b.eq	4fac <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x12c>  // b.none
    4f7c:	mov	w17, #0x1                   	// #1
    4f80:	cmn	x16, #0x4
    4f84:	b.eq	4fa8 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x128>  // b.none
    4f88:	add	w14, w14, w17
    4f8c:	and	w14, w14, w13
    4f90:	add	x15, x11, w14, uxtw #4
    4f94:	ldr	x16, [x15]
    4f98:	add	w17, w17, #0x1
    4f9c:	cmp	x16, x12
    4fa0:	b.eq	4fac <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x12c>  // b.none
    4fa4:	b	4f80 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x100>
    4fa8:	add	x15, x11, x10, lsl #4
    4fac:	add	x10, x11, x10, lsl #4
    4fb0:	cmp	x15, x10
    4fb4:	b.eq	4f30 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>  // b.none
    4fb8:	ldr	w10, [x15, #8]
    4fbc:	cbz	w10, 4f30 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    4fc0:	ldr	w10, [x15, #12]
    4fc4:	str	wzr, [x15, #8]
    4fc8:	cbz	w10, 4f30 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    4fcc:	ldr	x10, [x15]
    4fd0:	cbz	x10, 509c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x21c>
    4fd4:	ldrb	w11, [x10]
    4fd8:	sub	w11, w11, #0x4
    4fdc:	cmp	w11, #0x1c
    4fe0:	csel	x23, x10, xzr, cc  // cc = lo, ul, last
    4fe4:	cbz	x23, 4f30 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    4fe8:	cmp	w8, w9
    4fec:	b.cs	5010 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x190>  // b.hs, b.nlast
    4ff0:	ldr	x9, [sp]
    4ff4:	str	x23, [x9, w8, uxtw #3]
    4ff8:	ldp	w8, w9, [sp, #8]
    4ffc:	cmp	w8, w9
    5000:	b.cs	507c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1fc>  // b.hs, b.nlast
    5004:	add	w8, w8, #0x1
    5008:	str	w8, [sp, #8]
    500c:	b	4f30 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    5010:	mov	x0, sp
    5014:	mov	w3, #0x8                   	// #8
    5018:	mov	x1, x19
    501c:	mov	x2, xzr
    5020:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5024:	ldr	w8, [sp, #8]
    5028:	b	4ff0 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x170>
    502c:	ldr	x0, [sp]
    5030:	mov	x8, sp
    5034:	add	x8, x8, #0x10
    5038:	cmp	x0, x8
    503c:	b.eq	5044 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1c4>  // b.none
    5040:	bl	0 <free>
    5044:	add	sp, sp, #0x210
    5048:	ldp	x20, x19, [sp, #48]
    504c:	ldp	x22, x21, [sp, #32]
    5050:	ldp	x28, x23, [sp, #16]
    5054:	ldp	x29, x30, [sp], #64
    5058:	ret
    505c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5060:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5064:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5068:	add	x0, x0, #0x0
    506c:	add	x1, x1, #0x0
    5070:	add	x3, x3, #0x0
    5074:	mov	w2, #0x252                 	// #594
    5078:	bl	0 <__assert_fail>
    507c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5080:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5084:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5088:	add	x0, x0, #0x0
    508c:	add	x1, x1, #0x0
    5090:	add	x3, x3, #0x0
    5094:	mov	w2, #0x43                  	// #67
    5098:	bl	0 <__assert_fail>
    509c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    50a0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    50a4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    50a8:	add	x0, x0, #0x0
    50ac:	add	x1, x1, #0x0
    50b0:	add	x3, x3, #0x0
    50b4:	mov	w2, #0x69                  	// #105
    50b8:	bl	0 <__assert_fail>

00000000000050bc <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>:
    50bc:	sub	sp, sp, #0x90
    50c0:	stp	x29, x30, [sp, #64]
    50c4:	stp	x26, x25, [sp, #80]
    50c8:	stp	x24, x23, [sp, #96]
    50cc:	stp	x22, x21, [sp, #112]
    50d0:	stp	x20, x19, [sp, #128]
    50d4:	add	x29, sp, #0x40
    50d8:	mov	x20, x2
    50dc:	cbz	x2, 525c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a0>
    50e0:	ldrb	w8, [x20]
    50e4:	mov	w22, w1
    50e8:	mov	x19, x0
    50ec:	cmp	w8, #0x2
    50f0:	b.cc	5104 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x48>  // b.lo, b.ul, b.last
    50f4:	sub	w8, w8, #0x4
    50f8:	and	w8, w8, #0xff
    50fc:	cmp	w8, #0x1b
    5100:	b.hi	5294 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1d8>  // b.pmore
    5104:	mov	w8, w22
    5108:	add	x9, sp, #0x8
    510c:	add	x0, x19, #0x100
    5110:	add	x2, x9, #0x8
    5114:	stp	x20, x8, [sp, #8]
    5118:	add	x8, sp, #0x18
    511c:	add	x1, sp, #0x8
    5120:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5124:	ldp	x8, x9, [sp, #24]
    5128:	ldr	x8, [x8]
    512c:	cmp	x8, x9
    5130:	b.ne	52b4 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1f8>  // b.any
    5134:	ldrb	w8, [sp, #56]
    5138:	ldr	x21, [sp, #40]
    513c:	cbz	w8, 5170 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0xb4>
    5140:	ldrb	w8, [x20]
    5144:	sub	w9, w8, #0x4
    5148:	cmp	w9, #0x1c
    514c:	b.cc	525c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a0>  // b.lo, b.ul, b.last
    5150:	ldp	x9, x10, [x19, #216]
    5154:	cmp	x9, x10
    5158:	b.eq	5194 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0xd8>  // b.none
    515c:	str	x20, [x9]
    5160:	ldp	x23, x9, [x19, #208]
    5164:	add	x24, x9, #0x8
    5168:	str	x24, [x19, #216]
    516c:	b	5228 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x16c>
    5170:	ldr	w8, [x21, #8]
    5174:	mov	x20, xzr
    5178:	cmp	w8, w22
    517c:	b.eq	525c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a0>  // b.none
    5180:	cbz	w8, 525c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a0>
    5184:	mov	x0, x19
    5188:	mov	x1, x21
    518c:	bl	4e80 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE>
    5190:	b	5258 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x19c>
    5194:	ldr	x22, [x19, #208]
    5198:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    519c:	sub	x24, x9, x22
    51a0:	cmp	x24, x8
    51a4:	b.eq	5314 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x258>  // b.none
    51a8:	asr	x26, x24, #3
    51ac:	cmp	x24, #0x0
    51b0:	csinc	x8, x26, xzr, ne  // ne = any
    51b4:	adds	x8, x8, x26
    51b8:	lsr	x10, x8, #60
    51bc:	cset	w9, cs  // cs = hs, nlast
    51c0:	cmp	x10, #0x0
    51c4:	cset	w10, ne  // ne = any
    51c8:	orr	w9, w9, w10
    51cc:	cmp	w9, #0x0
    51d0:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    51d4:	csel	x25, x9, x8, ne  // ne = any
    51d8:	cbz	x25, 527c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1c0>
    51dc:	lsl	x0, x25, #3
    51e0:	bl	0 <_Znwm>
    51e4:	mov	x23, x0
    51e8:	add	x26, x23, x26, lsl #3
    51ec:	cmp	x24, #0x1
    51f0:	str	x20, [x26]
    51f4:	b.lt	5208 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x14c>  // b.tstop
    51f8:	mov	x0, x23
    51fc:	mov	x1, x22
    5200:	mov	x2, x24
    5204:	bl	0 <memmove>
    5208:	add	x24, x26, #0x8
    520c:	cbz	x22, 5218 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x15c>
    5210:	mov	x0, x22
    5214:	bl	0 <_ZdlPv>
    5218:	add	x8, x23, x25, lsl #3
    521c:	stp	x23, x24, [x19, #208]
    5220:	str	x8, [x19, #224]
    5224:	ldrb	w8, [x20]
    5228:	sub	x9, x24, x23
    522c:	lsr	x9, x9, #3
    5230:	cmp	w8, #0x1
    5234:	str	w9, [x21, #12]
    5238:	b.ne	5258 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x19c>  // b.any
    523c:	ldr	x1, [x20, #136]
    5240:	cbz	x1, 52d4 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x218>
    5244:	ldrb	w8, [x1, #16]
    5248:	cmp	w8, #0x11
    524c:	b.cs	52f4 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x238>  // b.hs, b.nlast
    5250:	mov	x0, x19
    5254:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    5258:	mov	x20, xzr
    525c:	mov	x0, x20
    5260:	ldp	x20, x19, [sp, #128]
    5264:	ldp	x22, x21, [sp, #112]
    5268:	ldp	x24, x23, [sp, #96]
    526c:	ldp	x26, x25, [sp, #80]
    5270:	ldp	x29, x30, [sp, #64]
    5274:	add	sp, sp, #0x90
    5278:	ret
    527c:	mov	x23, xzr
    5280:	add	x26, x23, x26, lsl #3
    5284:	cmp	x24, #0x1
    5288:	str	x20, [x26]
    528c:	b.ge	51f8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x13c>  // b.tcont
    5290:	b	5208 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x14c>
    5294:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5298:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    529c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52a0:	add	x0, x0, #0x0
    52a4:	add	x1, x1, #0x0
    52a8:	add	x3, x3, #0x0
    52ac:	mov	w2, #0x297                 	// #663
    52b0:	bl	0 <__assert_fail>
    52b4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52b8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52bc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52c0:	add	x0, x0, #0x0
    52c4:	add	x1, x1, #0x0
    52c8:	add	x3, x3, #0x0
    52cc:	mov	w2, #0x4b9                 	// #1209
    52d0:	bl	0 <__assert_fail>
    52d4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52d8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52dc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52e0:	add	x0, x0, #0x0
    52e4:	add	x1, x1, #0x0
    52e8:	add	x3, x3, #0x0
    52ec:	mov	w2, #0x69                  	// #105
    52f0:	bl	0 <__assert_fail>
    52f4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52f8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52fc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5300:	add	x0, x0, #0x0
    5304:	add	x1, x1, #0x0
    5308:	add	x3, x3, #0x0
    530c:	mov	w2, #0x108                 	// #264
    5310:	bl	0 <__assert_fail>
    5314:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5318:	add	x0, x0, #0x0
    531c:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000005320 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE>:
    5320:	stp	x29, x30, [sp, #-32]!
    5324:	stp	x20, x19, [sp, #16]
    5328:	mov	x29, sp
    532c:	mov	x20, x0
    5330:	ldr	x8, [x20, #208]!
    5334:	ldr	x9, [x0, #216]
    5338:	mov	x19, x0
    533c:	sub	x8, x9, x8
    5340:	lsr	x8, x8, #3
    5344:	str	w8, [x0, #540]
    5348:	bl	3828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    534c:	ldrb	w8, [x19, #296]
    5350:	tbnz	w8, #0, 5368 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0x48>
    5354:	add	x8, x19, #0x120
    5358:	ldr	w10, [x8, #24]
    535c:	cbz	w10, 53fc <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xdc>
    5360:	ldr	x8, [x8, #16]
    5364:	b	5370 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0x50>
    5368:	add	x8, x19, #0x130
    536c:	mov	w10, #0x1                   	// #1
    5370:	add	w9, w0, #0x1
    5374:	cmn	w9, #0x2
    5378:	b.cs	540c <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xec>  // b.hs, b.nlast
    537c:	mov	w11, #0x25                  	// #37
    5380:	mul	w11, w9, w11
    5384:	sub	w10, w10, #0x1
    5388:	and	w11, w10, w11
    538c:	add	x14, x8, w11, uxtw #4
    5390:	ldr	w12, [x14]
    5394:	cmp	w9, w12
    5398:	b.ne	53d0 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xb0>  // b.any
    539c:	ldur	x10, [x14, #4]
    53a0:	ldr	w9, [x14, #12]
    53a4:	and	x8, x10, #0xffffffff
    53a8:	lsr	x10, x10, #32
    53ac:	ldr	x11, [x19, #232]
    53b0:	str	w9, [x19, #544]
    53b4:	ldr	x1, [x19, #216]
    53b8:	mov	x0, x20
    53bc:	ldp	x20, x19, [sp, #16]
    53c0:	add	x2, x11, x8, lsl #3
    53c4:	add	x3, x11, x10, lsl #3
    53c8:	ldp	x29, x30, [sp], #32
    53cc:	b	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    53d0:	mov	w13, #0x1                   	// #1
    53d4:	cmn	w12, #0x1
    53d8:	b.eq	53fc <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xdc>  // b.none
    53dc:	add	w11, w11, w13
    53e0:	and	w11, w11, w10
    53e4:	add	x14, x8, w11, uxtw #4
    53e8:	ldr	w12, [x14]
    53ec:	add	w13, w13, #0x1
    53f0:	cmp	w9, w12
    53f4:	b.eq	539c <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0x7c>  // b.none
    53f8:	b	53d4 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xb4>
    53fc:	mov	x8, xzr
    5400:	mov	x10, xzr
    5404:	mov	w9, wzr
    5408:	b	53ac <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0x8c>
    540c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5410:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5414:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5418:	add	x0, x0, #0x0
    541c:	add	x1, x1, #0x0
    5420:	add	x3, x3, #0x0
    5424:	mov	w2, #0x252                 	// #594
    5428:	bl	0 <__assert_fail>

000000000000542c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE>:
    542c:	sub	sp, sp, #0xc0
    5430:	stp	x29, x30, [sp, #96]
    5434:	stp	x28, x27, [sp, #112]
    5438:	stp	x26, x25, [sp, #128]
    543c:	stp	x24, x23, [sp, #144]
    5440:	stp	x22, x21, [sp, #160]
    5444:	stp	x20, x19, [sp, #176]
    5448:	add	x29, sp, #0x60
    544c:	ldp	x9, x8, [x0, #112]
    5450:	mov	x22, x1
    5454:	mov	x20, x0
    5458:	str	wzr, [x0, #504]
    545c:	sub	x8, x8, x9
    5460:	lsr	x8, x8, #4
    5464:	str	w8, [x0, #536]
    5468:	bl	5320 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE>
    546c:	ldrb	w8, [x22, #18]
    5470:	tbnz	w8, #0, 5480 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x54>
    5474:	ldr	x21, [x22, #88]
    5478:	mov	x8, x21
    547c:	b	54a8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x7c>
    5480:	mov	x0, x22
    5484:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    5488:	ldrb	w8, [x22, #18]
    548c:	ldr	x21, [x22, #88]
    5490:	tbnz	w8, #0, 549c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x70>
    5494:	mov	x8, x21
    5498:	b	54a8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x7c>
    549c:	mov	x0, x22
    54a0:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    54a4:	ldr	x8, [x22, #88]
    54a8:	ldr	x9, [x22, #96]
    54ac:	mov	w10, #0x28                  	// #40
    54b0:	madd	x19, x9, x10, x8
    54b4:	b	54bc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x90>
    54b8:	add	x21, x21, #0x28
    54bc:	cmp	x19, x21
    54c0:	b.eq	54f8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0xcc>  // b.none
    54c4:	mov	x0, x20
    54c8:	mov	x1, x21
    54cc:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    54d0:	mov	w1, #0x6                   	// #6
    54d4:	mov	x0, x21
    54d8:	bl	0 <_ZNK4llvm8Argument12hasAttributeENS_9Attribute8AttrKindE>
    54dc:	tbz	w0, #0, 54b8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x8c>
    54e0:	mov	x0, x21
    54e4:	bl	0 <_ZNK4llvm8Argument17getParamByValTypeEv>
    54e8:	mov	x1, x0
    54ec:	mov	x0, x20
    54f0:	bl	1e60 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    54f4:	b	54b8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x8c>
    54f8:	ldp	x9, x8, [x20, #112]
    54fc:	sub	x8, x8, x9
    5500:	lsr	x2, x8, #4
    5504:	str	w2, [x20, #548]
    5508:	ldr	x26, [x22, #80]
    550c:	add	x8, x22, #0x48
    5510:	mov	w1, w2
    5514:	stp	x22, x8, [sp]
    5518:	cmp	x8, x26
    551c:	b.eq	57a8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x37c>  // b.none
    5520:	add	x21, x20, #0x50
    5524:	mov	w27, #0x18                  	// #24
    5528:	b	5568 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x13c>
    552c:	mov	x3, xzr
    5530:	add	x1, sp, #0x10
    5534:	add	x2, sp, #0x10
    5538:	mov	x0, x21
    553c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5540:	ldr	x8, [sp, #16]
    5544:	str	wzr, [x0, #8]
    5548:	str	x8, [x0]
    554c:	sub	x8, x24, x22
    5550:	lsr	x8, x8, #3
    5554:	str	w8, [x0, #8]
    5558:	ldr	x26, [x26, #8]
    555c:	ldr	x8, [sp, #8]
    5560:	cmp	x8, x26
    5564:	b.eq	5794 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x368>  // b.none
    5568:	ldrb	w8, [x26]
    556c:	tbnz	w8, #2, 5ac8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x69c>
    5570:	sub	x8, x26, #0x18
    5574:	cmp	x26, #0x0
    5578:	csel	x28, xzr, x8, eq  // eq = none
    557c:	ldr	x22, [x28, #48]
    5580:	add	x23, x28, #0x28
    5584:	b	558c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x160>
    5588:	ldr	x22, [x22, #8]
    558c:	cmp	x23, x22
    5590:	b.eq	562c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x200>  // b.none
    5594:	ldrb	w8, [x22]
    5598:	tbnz	w8, #2, 5a88 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x65c>
    559c:	sub	x8, x22, #0x18
    55a0:	cmp	x22, #0x0
    55a4:	csel	x9, xzr, x8, eq  // eq = none
    55a8:	ldr	w8, [x9, #20]
    55ac:	tbnz	w8, #30, 55c4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x198>
    55b0:	and	w8, w8, #0xfffffff
    55b4:	mneg	x10, x8, x27
    55b8:	add	x24, x9, x10
    55bc:	cbnz	x8, 55d0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1a4>
    55c0:	b	5588 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x15c>
    55c4:	ldur	x24, [x9, #-8]
    55c8:	and	x8, x8, #0xfffffff
    55cc:	cbz	x8, 5588 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x15c>
    55d0:	add	x8, x8, x8, lsl #1
    55d4:	lsl	x19, x8, #3
    55d8:	b	55f0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1c4>
    55dc:	mov	x0, x20
    55e0:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    55e4:	subs	x19, x19, #0x18
    55e8:	add	x24, x24, #0x18
    55ec:	b.eq	5588 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x15c>  // b.none
    55f0:	ldr	x1, [x24]
    55f4:	cbz	x1, 5a08 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x5dc>
    55f8:	ldrb	w8, [x1, #16]
    55fc:	cmp	w8, #0x10
    5600:	b.hi	5620 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1f4>  // b.pmore
    5604:	cbz	w8, 55e4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b8>
    5608:	cmp	w8, #0x3
    560c:	b.eq	55e4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b8>  // b.none
    5610:	sub	w8, w8, #0x1
    5614:	cmp	w8, #0x2
    5618:	b.cs	55dc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b0>  // b.hs, b.nlast
    561c:	b	55e4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b8>
    5620:	cmp	w8, #0x14
    5624:	b.eq	55dc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b0>  // b.none
    5628:	b	55e4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b8>
    562c:	ldr	x8, [x20, #520]
    5630:	ldr	x9, [x20, #528]
    5634:	cmp	x8, x9
    5638:	b.eq	5660 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x234>  // b.none
    563c:	str	x28, [x8]
    5640:	ldr	x8, [x20, #520]
    5644:	ldr	x22, [x20, #512]
    5648:	add	x24, x8, #0x8
    564c:	str	x24, [x20, #520]
    5650:	str	x28, [sp, #16]
    5654:	ldr	w9, [x21, #24]
    5658:	cbnz	w9, 5700 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2d4>
    565c:	b	552c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x100>
    5660:	ldr	x23, [x20, #512]
    5664:	sub	x24, x8, x23
    5668:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    566c:	cmp	x24, x8
    5670:	b.eq	5b28 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x6fc>  // b.none
    5674:	asr	x25, x24, #3
    5678:	cmp	x24, #0x0
    567c:	csinc	x8, x25, xzr, ne  // ne = any
    5680:	adds	x8, x8, x25
    5684:	lsr	x10, x8, #60
    5688:	cset	w9, cs  // cs = hs, nlast
    568c:	cmp	x10, #0x0
    5690:	cset	w10, ne  // ne = any
    5694:	orr	w9, w9, w10
    5698:	cmp	w9, #0x0
    569c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    56a0:	csel	x19, x9, x8, ne  // ne = any
    56a4:	cbz	x19, 5770 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x344>
    56a8:	lsl	x0, x19, #3
    56ac:	bl	0 <_Znwm>
    56b0:	mov	x22, x0
    56b4:	add	x25, x22, x25, lsl #3
    56b8:	cmp	x24, #0x1
    56bc:	str	x28, [x25]
    56c0:	b.lt	56d4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2a8>  // b.tstop
    56c4:	mov	x0, x22
    56c8:	mov	x1, x23
    56cc:	mov	x2, x24
    56d0:	bl	0 <memmove>
    56d4:	add	x24, x25, #0x8
    56d8:	cbz	x23, 56e4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2b8>
    56dc:	mov	x0, x23
    56e0:	bl	0 <_ZdlPv>
    56e4:	add	x8, x22, x19, lsl #3
    56e8:	str	x22, [x20, #512]
    56ec:	str	x24, [x20, #520]
    56f0:	str	x8, [x20, #528]
    56f4:	str	x28, [sp, #16]
    56f8:	ldr	w9, [x21, #24]
    56fc:	cbz	w9, 552c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x100>
    5700:	orr	x8, x28, #0x8
    5704:	cmn	x8, #0x8
    5708:	b.eq	5aa8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x67c>  // b.none
    570c:	ldr	x8, [x21, #8]
    5710:	ubfx	x10, x28, #4, #28
    5714:	eor	w10, w10, w28, lsr #9
    5718:	sub	w9, w9, #0x1
    571c:	and	w10, w10, w9
    5720:	add	x0, x8, w10, uxtw #4
    5724:	ldr	x12, [x0]
    5728:	cmp	x12, x28
    572c:	b.eq	554c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x120>  // b.none
    5730:	mov	x11, xzr
    5734:	mov	w13, #0x1                   	// #1
    5738:	cmn	x12, #0x8
    573c:	b.eq	5788 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x35c>  // b.none
    5740:	cmp	x11, #0x0
    5744:	add	w10, w10, w13
    5748:	mov	x14, #0xfffffffffffffff0    	// #-16
    574c:	ccmp	x12, x14, #0x0, eq  // eq = none
    5750:	and	w10, w10, w9
    5754:	csel	x11, x11, x0, ne  // ne = any
    5758:	add	x0, x8, w10, uxtw #4
    575c:	ldr	x12, [x0]
    5760:	add	w13, w13, #0x1
    5764:	cmp	x12, x28
    5768:	b.eq	554c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x120>  // b.none
    576c:	b	5738 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x30c>
    5770:	mov	x22, xzr
    5774:	add	x25, x22, x25, lsl #3
    5778:	cmp	x24, #0x1
    577c:	str	x28, [x25]
    5780:	b.ge	56c4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x298>  // b.tcont
    5784:	b	56d4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2a8>
    5788:	cmp	x11, #0x0
    578c:	csel	x3, x0, x11, eq  // eq = none
    5790:	b	5530 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x104>
    5794:	ldp	x9, x8, [x20, #112]
    5798:	ldr	w1, [x20, #548]
    579c:	ldr	x22, [sp]
    57a0:	sub	x8, x8, x9
    57a4:	lsr	x2, x8, #4
    57a8:	mov	x0, x20
    57ac:	bl	2474 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj>
    57b0:	ldr	x1, [x22, #112]
    57b4:	mov	x0, x20
    57b8:	bl	1a68 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
    57bc:	ldp	x9, x8, [x20, #112]
    57c0:	adrp	x11, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    57c4:	ldr	d0, [x11]
    57c8:	add	x10, sp, #0x10
    57cc:	sub	x8, x8, x9
    57d0:	add	x10, x10, #0x10
    57d4:	lsr	x8, x8, #4
    57d8:	str	w8, [x20, #552]
    57dc:	str	x10, [sp, #16]
    57e0:	str	d0, [sp, #24]
    57e4:	ldr	x23, [x22, #80]
    57e8:	ldr	x8, [sp, #8]
    57ec:	mov	x25, x10
    57f0:	cmp	x8, x23
    57f4:	b.eq	59d8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x5ac>  // b.none
    57f8:	mov	w24, #0x18                  	// #24
    57fc:	b	5810 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3e4>
    5800:	ldr	x23, [x23, #8]
    5804:	ldr	x8, [sp, #8]
    5808:	cmp	x8, x23
    580c:	b.eq	5920 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4f4>  // b.none
    5810:	ldrb	w8, [x23]
    5814:	tbnz	w8, #2, 5ac8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x69c>
    5818:	sub	x8, x23, #0x18
    581c:	cmp	x23, #0x0
    5820:	csel	x8, xzr, x8, eq  // eq = none
    5824:	ldr	x26, [x8, #48]
    5828:	add	x27, x8, #0x28
    582c:	b	5834 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x408>
    5830:	ldr	x26, [x26, #8]
    5834:	cmp	x27, x26
    5838:	b.eq	5800 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3d4>  // b.none
    583c:	ldrb	w8, [x26]
    5840:	tbnz	w8, #2, 5a88 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x65c>
    5844:	sub	x8, x26, #0x18
    5848:	cmp	x26, #0x0
    584c:	csel	x22, xzr, x8, eq  // eq = none
    5850:	ldr	w8, [x22, #20]
    5854:	tbnz	w8, #30, 586c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x440>
    5858:	and	w8, w8, #0xfffffff
    585c:	mneg	x9, x8, x24
    5860:	add	x28, x22, x9
    5864:	cbnz	x8, 5878 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x44c>
    5868:	b	5904 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4d8>
    586c:	ldur	x28, [x22, #-8]
    5870:	and	x8, x8, #0xfffffff
    5874:	cbz	x8, 5904 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4d8>
    5878:	add	x8, x8, x8, lsl #1
    587c:	lsl	x21, x8, #3
    5880:	b	5890 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x464>
    5884:	subs	x21, x21, #0x18
    5888:	add	x28, x28, #0x18
    588c:	b.eq	5904 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4d8>  // b.none
    5890:	ldr	x8, [x28]
    5894:	cbz	x8, 5a28 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x5fc>
    5898:	ldrb	w9, [x8, #16]
    589c:	cmp	w9, #0x13
    58a0:	b.ne	5884 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x458>  // b.any
    58a4:	ldr	x8, [x8, #24]
    58a8:	cbz	x8, 5a48 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x61c>
    58ac:	ldrb	w9, [x8]
    58b0:	cmp	w9, #0x2
    58b4:	csel	x19, x8, xzr, eq  // eq = none
    58b8:	cbz	x19, 5884 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x458>
    58bc:	ldp	w8, w9, [sp, #24]
    58c0:	cmp	w8, w9
    58c4:	b.cs	58e8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4bc>  // b.hs, b.nlast
    58c8:	ldr	x9, [sp, #16]
    58cc:	str	x19, [x9, w8, uxtw #3]
    58d0:	ldp	w8, w9, [sp, #24]
    58d4:	cmp	w8, w9
    58d8:	b.cs	5a68 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x63c>  // b.hs, b.nlast
    58dc:	add	w8, w8, #0x1
    58e0:	str	w8, [sp, #24]
    58e4:	b	5884 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x458>
    58e8:	add	x0, sp, #0x10
    58ec:	mov	w3, #0x8                   	// #8
    58f0:	mov	x1, x25
    58f4:	mov	x2, xzr
    58f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    58fc:	ldr	w8, [sp, #24]
    5900:	b	58c8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x49c>
    5904:	ldr	x8, [x22]
    5908:	ldrb	w8, [x8, #8]
    590c:	cbz	w8, 5830 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x404>
    5910:	mov	x0, x20
    5914:	mov	x1, x22
    5918:	bl	1480 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    591c:	b	5830 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x404>
    5920:	ldr	w23, [sp, #24]
    5924:	ldr	x19, [sp]
    5928:	cbz	w23, 59d8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x5ac>
    592c:	mov	x24, xzr
    5930:	ldr	w10, [x20, #104]
    5934:	cbz	w10, 5ae8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x6bc>
    5938:	ldr	x8, [sp, #16]
    593c:	ldr	x22, [x8, x24, lsl #3]
    5940:	ldr	x8, [x22, #136]
    5944:	orr	x9, x8, #0x8
    5948:	cmn	x9, #0x8
    594c:	b.eq	5aa8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x67c>  // b.none
    5950:	ldr	x9, [x20, #88]
    5954:	ubfx	x11, x8, #4, #28
    5958:	eor	w11, w11, w8, lsr #9
    595c:	sub	w10, w10, #0x1
    5960:	and	w11, w11, w10
    5964:	lsl	x12, x11, #4
    5968:	ldr	x12, [x9, x12]
    596c:	cmp	x12, x8
    5970:	b.ne	59ac <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x580>  // b.any
    5974:	mov	x0, x20
    5978:	mov	x1, x19
    597c:	bl	3828 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    5980:	add	w1, w0, #0x1
    5984:	mov	x0, x20
    5988:	mov	x2, x22
    598c:	bl	4c30 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE>
    5990:	add	x24, x24, #0x1
    5994:	cmp	x24, x23
    5998:	b.eq	59d8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x5ac>  // b.none
    599c:	ldr	w8, [sp, #24]
    59a0:	cmp	x24, x8
    59a4:	b.cc	5930 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x504>  // b.lo, b.ul, b.last
    59a8:	b	5b08 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x6dc>
    59ac:	mov	w13, #0x1                   	// #1
    59b0:	cmn	x12, #0x8
    59b4:	b.eq	5ae8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x6bc>  // b.none
    59b8:	add	w11, w11, w13
    59bc:	and	w11, w11, w10
    59c0:	lsl	x12, x11, #4
    59c4:	ldr	x12, [x9, x12]
    59c8:	add	w13, w13, #0x1
    59cc:	cmp	x12, x8
    59d0:	b.eq	5974 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x548>  // b.none
    59d4:	b	59b0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x584>
    59d8:	ldr	x0, [sp, #16]
    59dc:	cmp	x0, x25
    59e0:	b.eq	59e8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x5bc>  // b.none
    59e4:	bl	0 <free>
    59e8:	ldp	x20, x19, [sp, #176]
    59ec:	ldp	x22, x21, [sp, #160]
    59f0:	ldp	x24, x23, [sp, #144]
    59f4:	ldp	x26, x25, [sp, #128]
    59f8:	ldp	x28, x27, [sp, #112]
    59fc:	ldp	x29, x30, [sp, #96]
    5a00:	add	sp, sp, #0xc0
    5a04:	ret
    5a08:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a0c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a10:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a14:	add	x0, x0, #0x0
    5a18:	add	x1, x1, #0x0
    5a1c:	add	x3, x3, #0x0
    5a20:	mov	w2, #0x5b                  	// #91
    5a24:	bl	0 <__assert_fail>
    5a28:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a2c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a30:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a34:	add	x0, x0, #0x0
    5a38:	add	x1, x1, #0x0
    5a3c:	add	x3, x3, #0x0
    5a40:	mov	w2, #0x69                  	// #105
    5a44:	bl	0 <__assert_fail>
    5a48:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a4c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a50:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a54:	add	x0, x0, #0x0
    5a58:	add	x1, x1, #0x0
    5a5c:	add	x3, x3, #0x0
    5a60:	mov	w2, #0x69                  	// #105
    5a64:	bl	0 <__assert_fail>
    5a68:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a6c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a70:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a74:	add	x0, x0, #0x0
    5a78:	add	x1, x1, #0x0
    5a7c:	add	x3, x3, #0x0
    5a80:	mov	w2, #0x43                  	// #67
    5a84:	bl	0 <__assert_fail>
    5a88:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a8c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a90:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a94:	add	x0, x0, #0x0
    5a98:	add	x1, x1, #0x0
    5a9c:	add	x3, x3, #0x0
    5aa0:	mov	w2, #0x8b                  	// #139
    5aa4:	bl	0 <__assert_fail>
    5aa8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5aac:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5ab0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5ab4:	add	x0, x0, #0x0
    5ab8:	add	x1, x1, #0x0
    5abc:	add	x3, x3, #0x0
    5ac0:	mov	w2, #0x252                 	// #594
    5ac4:	bl	0 <__assert_fail>
    5ac8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5acc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5ad0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5ad4:	add	x0, x0, #0x0
    5ad8:	add	x1, x1, #0x0
    5adc:	add	x3, x3, #0x0
    5ae0:	mov	w2, #0x8b                  	// #139
    5ae4:	bl	0 <__assert_fail>
    5ae8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5aec:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5af0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5af4:	add	x0, x0, #0x0
    5af8:	add	x1, x1, #0x0
    5afc:	add	x3, x3, #0x0
    5b00:	mov	w2, #0x3e8                 	// #1000
    5b04:	bl	0 <__assert_fail>
    5b08:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b0c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b10:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b14:	add	x0, x0, #0x0
    5b18:	add	x1, x1, #0x0
    5b1c:	add	x3, x3, #0x0
    5b20:	mov	w2, #0x95                  	// #149
    5b24:	bl	0 <__assert_fail>
    5b28:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b2c:	add	x0, x0, #0x0
    5b30:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000005b34 <_ZN4llvm15ValueEnumerator13purgeFunctionEv>:
    5b34:	stp	x29, x30, [sp, #-32]!
    5b38:	stp	x20, x19, [sp, #16]
    5b3c:	mov	x29, sp
    5b40:	mov	x19, x0
    5b44:	ldr	x13, [x0, #112]!
    5b48:	ldr	x9, [x0, #8]
    5b4c:	ldr	w8, [x0, #424]
    5b50:	sub	x9, x9, x13
    5b54:	lsr	x9, x9, #4
    5b58:	cmp	w8, w9
    5b5c:	b.eq	5c0c <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xd8>  // b.none
    5b60:	ldr	w10, [x19, #104]
    5b64:	cbz	w10, 5c0c <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xd8>
    5b68:	adrp	x11, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b6c:	ldr	d0, [x11]
    5b70:	sub	w10, w10, #0x1
    5b74:	mov	x11, #0xfffffffffffffff0    	// #-16
    5b78:	mov	w12, w8
    5b7c:	mov	w14, w12
    5b80:	lsl	x14, x14, #4
    5b84:	ldr	x14, [x13, x14]
    5b88:	orr	x13, x14, #0x8
    5b8c:	cmn	x13, #0x8
    5b90:	b.eq	5e44 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x310>  // b.none
    5b94:	ldr	x13, [x19, #88]
    5b98:	ubfx	x15, x14, #4, #28
    5b9c:	eor	w15, w15, w14, lsr #9
    5ba0:	and	w15, w15, w10
    5ba4:	lsl	x16, x15, #4
    5ba8:	ldr	x16, [x13, x16]
    5bac:	cmp	x16, x14
    5bb0:	b.ne	5bdc <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xa8>  // b.any
    5bb4:	lsl	x14, x15, #4
    5bb8:	str	x11, [x13, x14]
    5bbc:	ldr	d1, [x19, #96]
    5bc0:	add	v1.2s, v1.2s, v0.2s
    5bc4:	str	d1, [x19, #96]
    5bc8:	add	w12, w12, #0x1
    5bcc:	cmp	w12, w9
    5bd0:	b.eq	5c0c <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xd8>  // b.none
    5bd4:	ldr	x13, [x0]
    5bd8:	b	5b7c <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x48>
    5bdc:	mov	w17, #0x1                   	// #1
    5be0:	cmn	x16, #0x8
    5be4:	b.eq	5bc8 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x94>  // b.none
    5be8:	add	w15, w15, w17
    5bec:	and	w15, w15, w10
    5bf0:	lsl	x16, x15, #4
    5bf4:	ldr	x16, [x13, x16]
    5bf8:	add	w17, w17, #0x1
    5bfc:	cmp	x16, x14
    5c00:	b.ne	5be0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xac>  // b.any
    5c04:	mov	w15, w15
    5c08:	b	5bb4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x80>
    5c0c:	mov	x20, x19
    5c10:	ldr	x14, [x20, #208]!
    5c14:	ldr	x10, [x20, #8]
    5c18:	ldr	w9, [x20, #332]
    5c1c:	sub	x10, x10, x14
    5c20:	lsr	x10, x10, #3
    5c24:	cmp	w9, w10
    5c28:	b.eq	5ce0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1ac>  // b.none
    5c2c:	ldr	w11, [x19, #280]
    5c30:	cbz	w11, 5ce0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1ac>
    5c34:	adrp	x12, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5c38:	ldr	d0, [x12]
    5c3c:	sub	w11, w11, #0x1
    5c40:	mov	x12, #0xfffffffffffffff8    	// #-8
    5c44:	mov	w13, w9
    5c48:	ldr	x15, [x14, w13, uxtw #3]
    5c4c:	orr	x14, x15, #0x4
    5c50:	cmn	x14, #0x4
    5c54:	b.eq	5e64 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x330>  // b.none
    5c58:	ldr	x14, [x19, #264]
    5c5c:	ubfx	x16, x15, #4, #28
    5c60:	eor	w16, w16, w15, lsr #9
    5c64:	and	w16, w16, w11
    5c68:	lsl	x17, x16, #4
    5c6c:	ldr	x17, [x14, x17]
    5c70:	cmp	x17, x15
    5c74:	b.ne	5cb0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x17c>  // b.any
    5c78:	lsl	x15, x16, #4
    5c7c:	str	x12, [x14, x15]
    5c80:	ldr	d1, [x19, #272]
    5c84:	add	v1.2s, v1.2s, v0.2s
    5c88:	str	d1, [x19, #272]
    5c8c:	add	w13, w13, #0x1
    5c90:	cmp	w13, w10
    5c94:	b.eq	5ce0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1ac>  // b.none
    5c98:	ldr	x14, [x20]
    5c9c:	ldr	x15, [x14, w13, uxtw #3]
    5ca0:	orr	x14, x15, #0x4
    5ca4:	cmn	x14, #0x4
    5ca8:	b.ne	5c58 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x124>  // b.any
    5cac:	b	5e64 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x330>
    5cb0:	mov	w18, #0x1                   	// #1
    5cb4:	cmn	x17, #0x4
    5cb8:	b.eq	5c8c <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x158>  // b.none
    5cbc:	add	w16, w16, w18
    5cc0:	and	w16, w16, w11
    5cc4:	lsl	x17, x16, #4
    5cc8:	ldr	x17, [x14, x17]
    5ccc:	add	w18, w18, #0x1
    5cd0:	cmp	x17, x15
    5cd4:	b.ne	5cb4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x180>  // b.any
    5cd8:	mov	w16, w16
    5cdc:	b	5c78 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x144>
    5ce0:	ldr	x10, [x19, #520]
    5ce4:	ldr	x14, [x19, #512]
    5ce8:	sub	x12, x10, x14
    5cec:	lsr	x10, x12, #3
    5cf0:	cbz	w10, 5dac <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x278>
    5cf4:	ldr	w11, [x19, #104]
    5cf8:	cbz	w11, 5dac <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x278>
    5cfc:	adrp	x13, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5d00:	ldr	d0, [x13]
    5d04:	mov	x10, xzr
    5d08:	sub	w11, w11, #0x1
    5d0c:	ubfx	x12, x12, #3, #32
    5d10:	mov	x13, #0xfffffffffffffff0    	// #-16
    5d14:	ldr	x15, [x14, x10, lsl #3]
    5d18:	orr	x14, x15, #0x8
    5d1c:	cmn	x14, #0x8
    5d20:	b.eq	5e44 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x310>  // b.none
    5d24:	ldr	x14, [x19, #88]
    5d28:	ubfx	x16, x15, #4, #28
    5d2c:	eor	w16, w16, w15, lsr #9
    5d30:	and	w16, w16, w11
    5d34:	lsl	x17, x16, #4
    5d38:	ldr	x17, [x14, x17]
    5d3c:	cmp	x17, x15
    5d40:	b.ne	5d7c <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x248>  // b.any
    5d44:	lsl	x15, x16, #4
    5d48:	str	x13, [x14, x15]
    5d4c:	ldr	d1, [x19, #96]
    5d50:	add	v1.2s, v1.2s, v0.2s
    5d54:	str	d1, [x19, #96]
    5d58:	add	x10, x10, #0x1
    5d5c:	cmp	x10, x12
    5d60:	b.eq	5dac <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x278>  // b.none
    5d64:	ldr	x14, [x19, #512]
    5d68:	ldr	x15, [x14, x10, lsl #3]
    5d6c:	orr	x14, x15, #0x8
    5d70:	cmn	x14, #0x8
    5d74:	b.ne	5d24 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1f0>  // b.any
    5d78:	b	5e44 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x310>
    5d7c:	mov	w18, #0x1                   	// #1
    5d80:	cmn	x17, #0x8
    5d84:	b.eq	5d58 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x224>  // b.none
    5d88:	add	w16, w16, w18
    5d8c:	and	w16, w16, w11
    5d90:	lsl	x17, x16, #4
    5d94:	ldr	x17, [x14, x17]
    5d98:	add	w18, w18, #0x1
    5d9c:	cmp	x17, x15
    5da0:	b.ne	5d80 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x24c>  // b.any
    5da4:	mov	w16, w16
    5da8:	b	5d44 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x210>
    5dac:	ldp	x11, x10, [x19, #112]
    5db0:	sub	x12, x10, x11
    5db4:	asr	x12, x12, #4
    5db8:	cmp	x12, x8
    5dbc:	b.cs	5dd0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x29c>  // b.hs, b.nlast
    5dc0:	sub	x1, x8, x12
    5dc4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5dc8:	ldr	w9, [x19, #540]
    5dcc:	b	5de4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2b0>
    5dd0:	b.ls	5de4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2b0>  // b.plast
    5dd4:	add	x8, x11, x8, lsl #4
    5dd8:	cmp	x8, x10
    5ddc:	b.eq	5de4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2b0>  // b.none
    5de0:	str	x8, [x19, #120]
    5de4:	ldp	x10, x8, [x19, #208]
    5de8:	mov	w9, w9
    5dec:	sub	x11, x8, x10
    5df0:	asr	x11, x11, #3
    5df4:	cmp	x11, x9
    5df8:	b.cs	5e0c <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2d8>  // b.hs, b.nlast
    5dfc:	sub	x1, x9, x11
    5e00:	mov	x0, x20
    5e04:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5e08:	b	5e20 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2ec>
    5e0c:	b.ls	5e20 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2ec>  // b.plast
    5e10:	add	x9, x10, x9, lsl #3
    5e14:	cmp	x9, x8
    5e18:	b.eq	5e20 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2ec>  // b.none
    5e1c:	str	x9, [x19, #216]
    5e20:	ldr	x8, [x19, #512]
    5e24:	ldr	x9, [x19, #520]
    5e28:	cmp	x9, x8
    5e2c:	b.eq	5e34 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x300>  // b.none
    5e30:	str	x8, [x19, #520]
    5e34:	str	wzr, [x19, #544]
    5e38:	ldp	x20, x19, [sp, #16]
    5e3c:	ldp	x29, x30, [sp], #32
    5e40:	ret
    5e44:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5e48:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5e4c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5e50:	add	x0, x0, #0x0
    5e54:	add	x1, x1, #0x0
    5e58:	add	x3, x3, #0x0
    5e5c:	mov	w2, #0x252                 	// #594
    5e60:	bl	0 <__assert_fail>
    5e64:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5e68:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5e6c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5e70:	add	x0, x0, #0x0
    5e74:	add	x1, x1, #0x0
    5e78:	add	x3, x3, #0x0
    5e7c:	mov	w2, #0x252                 	// #594
    5e80:	bl	0 <__assert_fail>

0000000000005e84 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE>:
    5e84:	sub	sp, sp, #0x50
    5e88:	stp	x29, x30, [sp, #16]
    5e8c:	stp	x24, x23, [sp, #32]
    5e90:	stp	x22, x21, [sp, #48]
    5e94:	stp	x20, x19, [sp, #64]
    5e98:	add	x29, sp, #0x10
    5e9c:	str	x1, [sp]
    5ea0:	ldr	w9, [x0, #464]
    5ea4:	mov	x19, x0
    5ea8:	add	x20, x0, #0x1b8
    5eac:	cbz	w9, 5f20 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x9c>
    5eb0:	orr	x8, x1, #0x8
    5eb4:	cmn	x8, #0x8
    5eb8:	b.eq	6070 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1ec>  // b.none
    5ebc:	ldr	x8, [x19, #448]
    5ec0:	ubfx	x10, x1, #4, #28
    5ec4:	eor	w10, w10, w1, lsr #9
    5ec8:	sub	w9, w9, #0x1
    5ecc:	and	w10, w10, w9
    5ed0:	add	x0, x8, w10, uxtw #4
    5ed4:	ldr	x12, [x0]
    5ed8:	cmp	x12, x1
    5edc:	b.eq	5f40 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xbc>  // b.none
    5ee0:	mov	x11, xzr
    5ee4:	mov	w14, #0x1                   	// #1
    5ee8:	mov	x13, #0xfffffffffffffff0    	// #-16
    5eec:	cmn	x12, #0x8
    5ef0:	b.eq	6064 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1e0>  // b.none
    5ef4:	cmp	x11, #0x0
    5ef8:	add	w10, w10, w14
    5efc:	ccmp	x12, x13, #0x0, eq  // eq = none
    5f00:	and	w10, w10, w9
    5f04:	csel	x11, x11, x0, ne  // ne = any
    5f08:	add	x0, x8, w10, uxtw #4
    5f0c:	ldr	x12, [x0]
    5f10:	add	w14, w14, #0x1
    5f14:	cmp	x12, x1
    5f18:	b.eq	5f40 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xbc>  // b.none
    5f1c:	b	5eec <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x68>
    5f20:	mov	x3, xzr
    5f24:	mov	x1, sp
    5f28:	mov	x2, sp
    5f2c:	mov	x0, x20
    5f30:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5f34:	ldr	x8, [sp]
    5f38:	str	wzr, [x0, #8]
    5f3c:	str	x8, [x0]
    5f40:	ldr	w8, [x0, #8]
    5f44:	cbz	w8, 5f50 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xcc>
    5f48:	sub	w0, w8, #0x1
    5f4c:	b	604c <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1c8>
    5f50:	ldr	x1, [sp]
    5f54:	ldr	x8, [x1, #56]
    5f58:	ldr	x21, [x8, #80]
    5f5c:	add	x22, x8, #0x48
    5f60:	cmp	x22, x21
    5f64:	b.eq	6044 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1c0>  // b.none
    5f68:	mov	w23, wzr
    5f6c:	mov	x24, #0xfffffffffffffff0    	// #-16
    5f70:	b	5fa8 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x124>
    5f74:	mov	x3, xzr
    5f78:	add	x1, sp, #0x8
    5f7c:	add	x2, sp, #0x8
    5f80:	mov	x0, x20
    5f84:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5f88:	ldr	x8, [sp, #8]
    5f8c:	str	wzr, [x0, #8]
    5f90:	str	x8, [x0]
    5f94:	add	w23, w23, #0x1
    5f98:	str	w23, [x0, #8]
    5f9c:	ldr	x21, [x21, #8]
    5fa0:	cmp	x22, x21
    5fa4:	b.eq	6040 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1bc>  // b.none
    5fa8:	ldrb	w8, [x21]
    5fac:	tbnz	w8, #2, 6090 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x20c>
    5fb0:	sub	x8, x21, #0x18
    5fb4:	cmp	x21, #0x0
    5fb8:	csel	x8, xzr, x8, eq  // eq = none
    5fbc:	str	x8, [sp, #8]
    5fc0:	ldr	w10, [x20, #24]
    5fc4:	cbz	w10, 5f74 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xf0>
    5fc8:	orr	x9, x8, #0x8
    5fcc:	cmn	x9, #0x8
    5fd0:	b.eq	6070 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1ec>  // b.none
    5fd4:	ldr	x9, [x20, #8]
    5fd8:	ubfx	x11, x8, #4, #28
    5fdc:	eor	w11, w11, w8, lsr #9
    5fe0:	sub	w10, w10, #0x1
    5fe4:	and	w11, w10, w11
    5fe8:	add	x0, x9, w11, uxtw #4
    5fec:	ldr	x13, [x0]
    5ff0:	cmp	x13, x8
    5ff4:	b.eq	5f94 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x110>  // b.none
    5ff8:	mov	x12, xzr
    5ffc:	mov	w14, #0x1                   	// #1
    6000:	cmn	x13, #0x8
    6004:	b.eq	6034 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1b0>  // b.none
    6008:	cmp	x12, #0x0
    600c:	add	w11, w11, w14
    6010:	ccmp	x13, x24, #0x0, eq  // eq = none
    6014:	and	w11, w11, w10
    6018:	csel	x12, x12, x0, ne  // ne = any
    601c:	add	x0, x9, w11, uxtw #4
    6020:	ldr	x13, [x0]
    6024:	add	w14, w14, #0x1
    6028:	cmp	x13, x8
    602c:	b.eq	5f94 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x110>  // b.none
    6030:	b	6000 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x17c>
    6034:	cmp	x12, #0x0
    6038:	csel	x3, x0, x12, eq  // eq = none
    603c:	b	5f78 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xf4>
    6040:	ldr	x1, [sp]
    6044:	mov	x0, x19
    6048:	bl	5e84 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE>
    604c:	ldp	x20, x19, [sp, #64]
    6050:	ldp	x22, x21, [sp, #48]
    6054:	ldp	x24, x23, [sp, #32]
    6058:	ldp	x29, x30, [sp, #16]
    605c:	add	sp, sp, #0x50
    6060:	ret
    6064:	cmp	x11, #0x0
    6068:	csel	x3, x0, x11, eq  // eq = none
    606c:	b	5f24 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xa0>
    6070:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6074:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6078:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    607c:	add	x0, x0, #0x0
    6080:	add	x1, x1, #0x0
    6084:	add	x3, x3, #0x0
    6088:	mov	w2, #0x252                 	// #594
    608c:	bl	0 <__assert_fail>
    6090:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6094:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6098:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    609c:	add	x0, x0, #0x0
    60a0:	add	x1, x1, #0x0
    60a4:	add	x3, x3, #0x0
    60a8:	mov	w2, #0x8b                  	// #139
    60ac:	bl	0 <__assert_fail>

00000000000060b0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>:
    60b0:	ldp	x9, x8, [x0, #56]
    60b4:	sub	x8, x8, x9
    60b8:	lsr	x8, x8, #3
    60bc:	clz	w8, w8
    60c0:	mov	w9, #0x20                  	// #32
    60c4:	sub	w0, w9, w8
    60c8:	ret

00000000000060cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>:
    60cc:	stp	x29, x30, [sp, #-64]!
    60d0:	str	x23, [sp, #16]
    60d4:	stp	x22, x21, [sp, #32]
    60d8:	stp	x20, x19, [sp, #48]
    60dc:	mov	x29, sp
    60e0:	str	x0, [x29, #24]
    60e4:	ldr	w9, [x2, #24]
    60e8:	mov	x19, x3
    60ec:	mov	x20, x2
    60f0:	mov	x22, x0
    60f4:	mov	x21, x1
    60f8:	cbz	w9, 616c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xa0>
    60fc:	orr	x8, x22, #0x8
    6100:	cmn	x8, #0x8
    6104:	b.eq	629c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x1d0>  // b.none
    6108:	ldr	x8, [x20, #8]
    610c:	ubfx	x10, x22, #4, #28
    6110:	eor	w10, w10, w22, lsr #9
    6114:	sub	w9, w9, #0x1
    6118:	and	w10, w9, w10
    611c:	add	x23, x8, w10, uxtw #4
    6120:	ldr	x12, [x23]
    6124:	cmp	x12, x22
    6128:	b.eq	6194 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xc8>  // b.none
    612c:	mov	x11, xzr
    6130:	mov	w14, #0x1                   	// #1
    6134:	mov	x13, #0xfffffffffffffff0    	// #-16
    6138:	cmn	x12, #0x8
    613c:	b.eq	6270 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x1a4>  // b.none
    6140:	cmp	x11, #0x0
    6144:	add	w10, w10, w14
    6148:	ccmp	x12, x13, #0x0, eq  // eq = none
    614c:	and	w10, w10, w9
    6150:	csel	x11, x11, x23, ne  // ne = any
    6154:	add	x23, x8, w10, uxtw #4
    6158:	ldr	x12, [x23]
    615c:	add	w14, w14, #0x1
    6160:	cmp	x12, x22
    6164:	b.eq	6194 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xc8>  // b.none
    6168:	b	6138 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x6c>
    616c:	mov	x3, xzr
    6170:	add	x1, x29, #0x18
    6174:	add	x2, x29, #0x18
    6178:	mov	x0, x20
    617c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6180:	ldr	x8, [x29, #24]
    6184:	mov	x23, x0
    6188:	str	wzr, [x0, #8]
    618c:	strb	wzr, [x0, #12]
    6190:	str	x8, [x0]
    6194:	ldr	w8, [x23, #8]
    6198:	cbz	w8, 62bc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x1f0>
    619c:	ldrb	w8, [x23, #12]
    61a0:	cbnz	w8, 625c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x190>
    61a4:	mov	w8, #0x1                   	// #1
    61a8:	mov	x0, x22
    61ac:	strb	w8, [x23, #12]
    61b0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    61b4:	ldr	x8, [x22, #8]
    61b8:	cbz	x8, 61ec <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x120>
    61bc:	mov	x0, x22
    61c0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    61c4:	ldr	x8, [x22, #8]
    61c8:	cbz	x8, 62dc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x210>
    61cc:	ldr	x8, [x8, #8]
    61d0:	cbz	x8, 61ec <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x120>
    61d4:	ldr	w2, [x23, #8]
    61d8:	mov	x0, x22
    61dc:	mov	x1, x21
    61e0:	mov	x3, x20
    61e4:	mov	x4, x19
    61e8:	bl	6560 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE>
    61ec:	ldrb	w8, [x22, #16]
    61f0:	cmp	w8, #0x10
    61f4:	b.hi	625c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x190>  // b.pmore
    61f8:	ldr	w9, [x22, #20]
    61fc:	and	x8, x9, #0xfffffff
    6200:	cbz	w8, 625c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x190>
    6204:	tbnz	w9, #30, 6218 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x14c>
    6208:	mov	w9, #0x18                  	// #24
    620c:	mneg	x9, x8, x9
    6210:	add	x22, x22, x9
    6214:	b	621c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x150>
    6218:	ldur	x22, [x22, #-8]
    621c:	add	x8, x8, x8, lsl #1
    6220:	lsl	x23, x8, #3
    6224:	b	6234 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x168>
    6228:	subs	x23, x23, #0x18
    622c:	add	x22, x22, #0x18
    6230:	b.eq	625c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x190>  // b.none
    6234:	ldr	x0, [x22]
    6238:	cbz	x0, 627c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x1b0>
    623c:	ldrb	w8, [x0, #16]
    6240:	cmp	w8, #0x10
    6244:	b.hi	6228 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x15c>  // b.pmore
    6248:	mov	x1, x21
    624c:	mov	x2, x20
    6250:	mov	x3, x19
    6254:	bl	60cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
    6258:	b	6228 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x15c>
    625c:	ldp	x20, x19, [sp, #48]
    6260:	ldp	x22, x21, [sp, #32]
    6264:	ldr	x23, [sp, #16]
    6268:	ldp	x29, x30, [sp], #64
    626c:	ret
    6270:	cmp	x11, #0x0
    6274:	csel	x3, x23, x11, eq  // eq = none
    6278:	b	6170 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xa4>
    627c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6280:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6284:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6288:	add	x0, x0, #0x0
    628c:	add	x1, x1, #0x0
    6290:	add	x3, x3, #0x0
    6294:	mov	w2, #0x69                  	// #105
    6298:	bl	0 <__assert_fail>
    629c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    62a0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    62a4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    62a8:	add	x0, x0, #0x0
    62ac:	add	x1, x1, #0x0
    62b0:	add	x3, x3, #0x0
    62b4:	mov	w2, #0x252                 	// #594
    62b8:	bl	0 <__assert_fail>
    62bc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    62c0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    62c4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    62c8:	add	x0, x0, #0x0
    62cc:	add	x1, x1, #0x0
    62d0:	add	x3, x3, #0x0
    62d4:	mov	w2, #0xf2                  	// #242
    62d8:	bl	0 <__assert_fail>
    62dc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    62e0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    62e4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    62e8:	add	x0, x0, #0x0
    62ec:	add	x1, x1, #0x0
    62f0:	add	x3, x3, #0x0
    62f4:	mov	w2, #0x8d                  	// #141
    62f8:	bl	0 <__assert_fail>

00000000000062fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>:
    62fc:	stp	x29, x30, [sp, #-80]!
    6300:	str	x25, [sp, #16]
    6304:	stp	x24, x23, [sp, #32]
    6308:	stp	x22, x21, [sp, #48]
    630c:	stp	x20, x19, [sp, #64]
    6310:	mov	x29, sp
    6314:	ldr	w9, [x1, #24]
    6318:	ldr	x8, [x1, #8]
    631c:	mov	x19, x1
    6320:	mov	x20, x0
    6324:	ubfx	x21, x0, #4, #28
    6328:	cbz	w9, 6360 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x64>
    632c:	orr	x10, x20, #0x8
    6330:	cmn	x10, #0x8
    6334:	b.eq	6520 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x224>  // b.none
    6338:	eor	w10, w21, w20, lsr #9
    633c:	sub	w11, w9, #0x1
    6340:	and	w10, w11, w10
    6344:	lsl	x12, x10, #4
    6348:	ldr	x12, [x8, x12]
    634c:	cmp	x12, x20
    6350:	b.ne	64b8 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x1bc>  // b.any
    6354:	add	x10, x8, x10, lsl #4
    6358:	ldr	w10, [x10, #8]
    635c:	cbnz	w10, 64a0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x1a4>
    6360:	cbz	x20, 6540 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x244>
    6364:	ldrb	w12, [x20, #16]
    6368:	cmp	w12, #0x10
    636c:	b.hi	6400 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x104>  // b.pmore
    6370:	ldr	w11, [x20, #20]
    6374:	and	x10, x11, #0xfffffff
    6378:	cbz	w10, 6400 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x104>
    637c:	cmp	w12, #0x4
    6380:	b.cc	6400 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x104>  // b.lo, b.ul, b.last
    6384:	tbnz	w11, #30, 6398 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x9c>
    6388:	mov	w8, #0x18                  	// #24
    638c:	mneg	x8, x10, x8
    6390:	add	x22, x20, x8
    6394:	b	639c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xa0>
    6398:	ldur	x22, [x20, #-8]
    639c:	add	x8, x10, x10, lsl #1
    63a0:	mov	w25, #0x9                   	// #9
    63a4:	mov	w23, #0x1                   	// #1
    63a8:	lsl	x24, x8, #3
    63ac:	movk	w25, #0x4, lsl #16
    63b0:	b	63c0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xc4>
    63b4:	subs	x24, x24, #0x18
    63b8:	add	x22, x22, #0x18
    63bc:	b.eq	63f8 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xfc>  // b.none
    63c0:	ldr	x0, [x22]
    63c4:	cbz	x0, 6500 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x204>
    63c8:	ldrb	w8, [x0, #16]
    63cc:	cmp	w8, #0x12
    63d0:	b.hi	63e0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xe4>  // b.pmore
    63d4:	lsl	w9, w23, w8
    63d8:	tst	w9, w25
    63dc:	b.ne	63b4 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xb8>  // b.any
    63e0:	sub	w8, w8, #0x1
    63e4:	cmp	w8, #0x2
    63e8:	b.cc	63b4 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xb8>  // b.lo, b.ul, b.last
    63ec:	mov	x1, x19
    63f0:	bl	62fc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
    63f4:	b	63b4 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xb8>
    63f8:	ldr	x8, [x19, #8]
    63fc:	ldr	w9, [x19, #24]
    6400:	str	x20, [x29, #24]
    6404:	ldr	w22, [x19, #16]
    6408:	cbz	w9, 6474 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x178>
    640c:	orr	x10, x20, #0x8
    6410:	cmn	x10, #0x8
    6414:	b.eq	6520 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x224>  // b.none
    6418:	eor	w10, w21, w20, lsr #9
    641c:	sub	w9, w9, #0x1
    6420:	and	w10, w9, w10
    6424:	add	x0, x8, w10, uxtw #4
    6428:	ldr	x12, [x0]
    642c:	cmp	x12, x20
    6430:	b.eq	6498 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x19c>  // b.none
    6434:	mov	x11, xzr
    6438:	mov	w14, #0x1                   	// #1
    643c:	mov	x13, #0xfffffffffffffff0    	// #-16
    6440:	cmn	x12, #0x8
    6444:	b.eq	64f4 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x1f8>  // b.none
    6448:	cmp	x11, #0x0
    644c:	add	w10, w10, w14
    6450:	ccmp	x12, x13, #0x0, eq  // eq = none
    6454:	and	w10, w10, w9
    6458:	csel	x11, x11, x0, ne  // ne = any
    645c:	add	x0, x8, w10, uxtw #4
    6460:	ldr	x12, [x0]
    6464:	add	w14, w14, #0x1
    6468:	cmp	x12, x20
    646c:	b.eq	6498 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x19c>  // b.none
    6470:	b	6440 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x144>
    6474:	mov	x3, xzr
    6478:	add	x1, x29, #0x18
    647c:	add	x2, x29, #0x18
    6480:	mov	x0, x19
    6484:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6488:	ldr	x8, [x29, #24]
    648c:	str	wzr, [x0, #8]
    6490:	strb	wzr, [x0, #12]
    6494:	str	x8, [x0]
    6498:	add	w8, w22, #0x1
    649c:	str	w8, [x0, #8]
    64a0:	ldp	x20, x19, [sp, #64]
    64a4:	ldp	x22, x21, [sp, #48]
    64a8:	ldp	x24, x23, [sp, #32]
    64ac:	ldr	x25, [sp, #16]
    64b0:	ldp	x29, x30, [sp], #80
    64b4:	ret
    64b8:	mov	w13, #0x1                   	// #1
    64bc:	cmn	x12, #0x8
    64c0:	b.eq	6360 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x64>  // b.none
    64c4:	add	w10, w10, w13
    64c8:	and	w10, w10, w11
    64cc:	lsl	x12, x10, #4
    64d0:	ldr	x12, [x8, x12]
    64d4:	add	w13, w13, #0x1
    64d8:	cmp	x12, x20
    64dc:	b.ne	64bc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x1c0>  // b.any
    64e0:	mov	w10, w10
    64e4:	add	x10, x8, x10, lsl #4
    64e8:	ldr	w10, [x10, #8]
    64ec:	cbnz	w10, 64a0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x1a4>
    64f0:	b	6360 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x64>
    64f4:	cmp	x11, #0x0
    64f8:	csel	x3, x0, x11, eq  // eq = none
    64fc:	b	6478 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x17c>
    6500:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6504:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6508:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    650c:	add	x0, x0, #0x0
    6510:	add	x1, x1, #0x0
    6514:	add	x3, x3, #0x0
    6518:	mov	w2, #0x69                  	// #105
    651c:	bl	0 <__assert_fail>
    6520:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6524:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6528:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    652c:	add	x0, x0, #0x0
    6530:	add	x1, x1, #0x0
    6534:	add	x3, x3, #0x0
    6538:	mov	w2, #0x252                 	// #594
    653c:	bl	0 <__assert_fail>
    6540:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6544:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6548:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    654c:	add	x0, x0, #0x0
    6550:	add	x1, x1, #0x0
    6554:	add	x3, x3, #0x0
    6558:	mov	w2, #0x69                  	// #105
    655c:	bl	0 <__assert_fail>

0000000000006560 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE>:
    6560:	stp	x29, x30, [sp, #-96]!
    6564:	stp	x28, x27, [sp, #16]
    6568:	stp	x26, x25, [sp, #32]
    656c:	stp	x24, x23, [sp, #48]
    6570:	stp	x22, x21, [sp, #64]
    6574:	stp	x20, x19, [sp, #80]
    6578:	mov	x29, sp
    657c:	sub	sp, sp, #0x480
    6580:	adrp	x8, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6584:	ldr	d0, [x8]
    6588:	add	x8, sp, #0x8
    658c:	sub	x24, x29, #0x60
    6590:	add	x8, x8, #0x10
    6594:	mov	x19, x4
    6598:	mov	x20, x3
    659c:	mov	x21, x0
    65a0:	stur	w2, [x29, #-100]
    65a4:	stp	x1, x0, [x24]
    65a8:	str	x8, [sp, #8]
    65ac:	str	d0, [sp, #16]
    65b0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    65b4:	ldr	x21, [x21, #8]
    65b8:	cbz	x21, 6690 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x130>
    65bc:	mov	x0, x21
    65c0:	bl	0 <_ZNK4llvm3Use7getUserEv>
    65c4:	ldr	w9, [x20, #24]
    65c8:	cbz	w9, 65b4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>
    65cc:	orr	x8, x0, #0x8
    65d0:	cmn	x8, #0x8
    65d4:	b.eq	6938 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x3d8>  // b.none
    65d8:	ldr	x8, [x20, #8]
    65dc:	ubfx	x10, x0, #4, #28
    65e0:	eor	w11, w10, w0, lsr #9
    65e4:	sub	w10, w9, #0x1
    65e8:	and	w9, w11, w10
    65ec:	lsl	x11, x9, #4
    65f0:	ldr	x11, [x8, x11]
    65f4:	cmp	x11, x0
    65f8:	b.ne	6640 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0xe0>  // b.any
    65fc:	add	x8, x8, x9, lsl #4
    6600:	ldr	w8, [x8, #8]
    6604:	cbz	w8, 65b4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>
    6608:	ldp	w22, w8, [sp, #16]
    660c:	cmp	w22, w8
    6610:	mov	w8, w22
    6614:	b.cs	667c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x11c>  // b.hs, b.nlast
    6618:	ldr	x9, [sp, #8]
    661c:	add	x8, x9, w8, uxtw #4
    6620:	str	x21, [x8]
    6624:	str	w22, [x8, #8]
    6628:	ldp	w8, w9, [sp, #16]
    662c:	cmp	w8, w9
    6630:	b.cs	6958 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x3f8>  // b.hs, b.nlast
    6634:	add	w8, w8, #0x1
    6638:	str	w8, [sp, #16]
    663c:	b	65b4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>
    6640:	mov	w12, #0x1                   	// #1
    6644:	cmn	x11, #0x8
    6648:	b.eq	65b4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>  // b.none
    664c:	add	w9, w9, w12
    6650:	and	w9, w9, w10
    6654:	lsl	x11, x9, #4
    6658:	ldr	x11, [x8, x11]
    665c:	add	w12, w12, #0x1
    6660:	cmp	x11, x0
    6664:	b.ne	6644 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0xe4>  // b.any
    6668:	mov	w9, w9
    666c:	add	x8, x8, x9, lsl #4
    6670:	ldr	w8, [x8, #8]
    6674:	cbnz	w8, 6608 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0xa8>
    6678:	b	65b4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>
    667c:	add	x0, sp, #0x8
    6680:	mov	x1, xzr
    6684:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6688:	ldr	w8, [sp, #16]
    668c:	b	6618 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0xb8>
    6690:	ldr	w22, [sp, #16]
    6694:	cmp	w22, #0x2
    6698:	b.cc	68e8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x388>  // b.lo, b.ul, b.last
    669c:	ldur	w8, [x29, #-100]
    66a0:	ldr	w9, [x20, #36]
    66a4:	cmp	w9, w8
    66a8:	b.cs	66b4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x154>  // b.hs, b.nlast
    66ac:	mov	w8, wzr
    66b0:	b	66c0 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x160>
    66b4:	ldr	w9, [x20, #32]
    66b8:	cmp	w9, w8
    66bc:	cset	w8, cc  // cc = lo, ul, last
    66c0:	ldr	x23, [sp, #8]
    66c4:	strb	w8, [sp, #4]
    66c8:	clz	x8, x22
    66cc:	mov	w9, #0x7e                  	// #126
    66d0:	add	x21, x23, x22, lsl #4
    66d4:	sub	x25, x29, #0x64
    66d8:	add	x26, sp, #0x4
    66dc:	sub	x2, x9, x8, lsl #1
    66e0:	sub	x3, x29, #0x50
    66e4:	mov	x0, x23
    66e8:	mov	x1, x21
    66ec:	stp	x20, x25, [x24, #16]
    66f0:	str	x26, [x24, #32]
    66f4:	bl	6998 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_>
    66f8:	cmp	w22, #0x11
    66fc:	b.cc	678c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x22c>  // b.lo, b.ul, b.last
    6700:	add	x22, x23, #0x100
    6704:	sub	x2, x29, #0x38
    6708:	mov	x0, x23
    670c:	mov	x1, x22
    6710:	stp	x20, x25, [x24, #40]
    6714:	str	x26, [x24, #56]
    6718:	bl	7060 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_>
    671c:	b	6734 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x1d4>
    6720:	add	x22, x22, #0x10
    6724:	cmp	x22, x21
    6728:	str	x23, [x28]
    672c:	str	w27, [x28, #8]
    6730:	b.eq	67a4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x244>  // b.none
    6734:	stp	x20, x25, [x24, #64]
    6738:	str	x26, [x24, #80]
    673c:	ldr	x23, [x22]
    6740:	ldur	x2, [x22, #-16]
    6744:	ldr	w27, [x22, #8]
    6748:	sub	x0, x29, #0x20
    674c:	mov	x1, x23
    6750:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6754:	mov	x28, x22
    6758:	tbz	w0, #0, 6720 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x1c0>
    675c:	mov	x28, x22
    6760:	mov	x8, x28
    6764:	ldr	x9, [x28, #-16]!
    6768:	ldur	w10, [x8, #-8]
    676c:	ldur	x2, [x8, #-32]
    6770:	sub	x0, x29, #0x20
    6774:	mov	x1, x23
    6778:	str	x9, [x8]
    677c:	str	w10, [x8, #8]
    6780:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6784:	tbnz	w0, #0, 6760 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x200>
    6788:	b	6720 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x1c0>
    678c:	sub	x2, x29, #0x20
    6790:	mov	x0, x23
    6794:	mov	x1, x21
    6798:	stp	x20, x25, [x24, #64]
    679c:	str	x26, [x24, #80]
    67a0:	bl	7060 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_>
    67a4:	ldr	w22, [sp, #16]
    67a8:	ldr	x8, [sp, #8]
    67ac:	cbz	w22, 67ec <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x28c>
    67b0:	lsl	x9, x22, #4
    67b4:	sub	x9, x9, #0x10
    67b8:	mov	x10, x8
    67bc:	cbz	x9, 68e8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x388>
    67c0:	ldr	w12, [x10, #24]
    67c4:	ldr	w13, [x10, #8]
    67c8:	add	x11, x10, #0x10
    67cc:	sub	x9, x9, #0x10
    67d0:	mov	x10, x11
    67d4:	cmp	w12, w13
    67d8:	b.cs	67bc <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x25c>  // b.hs, b.nlast
    67dc:	add	x8, x8, x22, lsl #4
    67e0:	cmp	x11, x8
    67e4:	b.ne	67fc <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x29c>  // b.any
    67e8:	b	68e8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x388>
    67ec:	mov	x11, x8
    67f0:	add	x8, x8, x22, lsl #4
    67f4:	cmp	x11, x8
    67f8:	b.eq	68e8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x388>  // b.none
    67fc:	str	x22, [x24, #64]
    6800:	ldp	x20, x8, [x19, #8]
    6804:	cmp	x20, x8
    6808:	b.eq	6860 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x300>  // b.none
    680c:	ldp	x9, x8, [x24]
    6810:	lsl	x21, x22, #2
    6814:	stp	xzr, xzr, [x20, #24]
    6818:	stp	x9, xzr, [x20, #8]
    681c:	str	x8, [x20]
    6820:	cbz	w22, 6920 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x3c0>
    6824:	mov	x0, x21
    6828:	bl	0 <_Znwm>
    682c:	add	x23, x0, x22, lsl #2
    6830:	stp	x0, x0, [x20, #16]
    6834:	str	x23, [x20, #32]
    6838:	cbz	w22, 684c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x2ec>
    683c:	mov	w1, wzr
    6840:	mov	x2, x21
    6844:	bl	0 <memset>
    6848:	mov	x0, x23
    684c:	str	x0, [x20, #24]
    6850:	ldr	x8, [x19, #8]
    6854:	add	x8, x8, #0x28
    6858:	str	x8, [x19, #8]
    685c:	b	687c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x31c>
    6860:	sub	x2, x29, #0x58
    6864:	sub	x3, x29, #0x60
    6868:	sub	x4, x29, #0x20
    686c:	mov	x0, x19
    6870:	mov	x1, x20
    6874:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6878:	ldr	x8, [x19, #8]
    687c:	ldp	x8, x9, [x8, #-24]
    6880:	ldr	w11, [sp, #16]
    6884:	sub	x9, x9, x8
    6888:	cmp	x11, x9, asr #2
    688c:	b.ne	6978 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x418>  // b.any
    6890:	cbz	w11, 68e8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x388>
    6894:	ldr	x10, [sp, #8]
    6898:	mov	x9, xzr
    689c:	sub	x11, x11, #0x1
    68a0:	add	x10, x10, #0x8
    68a4:	ldr	w12, [x10]
    68a8:	cmp	x11, x9
    68ac:	str	w12, [x8, x9, lsl #2]
    68b0:	b.eq	68e8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x388>  // b.none
    68b4:	ldr	w12, [sp, #16]
    68b8:	add	x9, x9, #0x1
    68bc:	add	x10, x10, #0x10
    68c0:	cmp	x9, x12
    68c4:	b.cc	68a4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x344>  // b.lo, b.ul, b.last
    68c8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    68cc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    68d0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    68d4:	add	x0, x0, #0x0
    68d8:	add	x1, x1, #0x0
    68dc:	add	x3, x3, #0x0
    68e0:	mov	w2, #0x95                  	// #149
    68e4:	bl	0 <__assert_fail>
    68e8:	ldr	x0, [sp, #8]
    68ec:	add	x8, sp, #0x8
    68f0:	add	x8, x8, #0x10
    68f4:	cmp	x0, x8
    68f8:	b.eq	6900 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x3a0>  // b.none
    68fc:	bl	0 <free>
    6900:	add	sp, sp, #0x480
    6904:	ldp	x20, x19, [sp, #80]
    6908:	ldp	x22, x21, [sp, #64]
    690c:	ldp	x24, x23, [sp, #48]
    6910:	ldp	x26, x25, [sp, #32]
    6914:	ldp	x28, x27, [sp, #16]
    6918:	ldp	x29, x30, [sp], #96
    691c:	ret
    6920:	mov	x0, xzr
    6924:	add	x23, x0, x22, lsl #2
    6928:	stp	x0, x0, [x20, #16]
    692c:	str	x23, [x20, #32]
    6930:	cbnz	w22, 683c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x2dc>
    6934:	b	684c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x2ec>
    6938:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    693c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6940:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6944:	add	x0, x0, #0x0
    6948:	add	x1, x1, #0x0
    694c:	add	x3, x3, #0x0
    6950:	mov	w2, #0x252                 	// #594
    6954:	bl	0 <__assert_fail>
    6958:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    695c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6960:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6964:	add	x0, x0, #0x0
    6968:	add	x1, x1, #0x0
    696c:	add	x3, x3, #0x0
    6970:	mov	w2, #0x43                  	// #67
    6974:	bl	0 <__assert_fail>
    6978:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    697c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6980:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6984:	add	x0, x0, #0x0
    6988:	add	x1, x1, #0x0
    698c:	add	x3, x3, #0x0
    6990:	mov	w2, #0xea                  	// #234
    6994:	bl	0 <__assert_fail>

0000000000006998 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_>:
    6998:	sub	sp, sp, #0x100
    699c:	stp	x29, x30, [sp, #160]
    69a0:	str	x27, [sp, #176]
    69a4:	stp	x26, x25, [sp, #192]
    69a8:	stp	x24, x23, [sp, #208]
    69ac:	stp	x22, x21, [sp, #224]
    69b0:	stp	x20, x19, [sp, #240]
    69b4:	add	x29, sp, #0xa0
    69b8:	sub	x26, x1, x0
    69bc:	cmp	x26, #0x101
    69c0:	b.lt	6c6c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x2d4>  // b.tstop
    69c4:	mov	x21, x3
    69c8:	mov	x20, x1
    69cc:	mov	x19, x0
    69d0:	mov	x22, x2
    69d4:	add	x24, x0, #0x10
    69d8:	add	x25, x0, #0x18
    69dc:	b	6a14 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x7c>
    69e0:	ldr	x8, [x21, #16]
    69e4:	ldr	q0, [x21]
    69e8:	mov	x3, sp
    69ec:	mov	x0, x23
    69f0:	mov	x1, x20
    69f4:	mov	x2, x22
    69f8:	str	x8, [sp, #16]
    69fc:	str	q0, [sp]
    6a00:	bl	6998 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_>
    6a04:	sub	x26, x23, x19
    6a08:	cmp	x26, #0x100
    6a0c:	mov	x20, x23
    6a10:	b.le	6c6c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x2d4>
    6a14:	cbz	x22, 6ba0 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x208>
    6a18:	ldr	x8, [x21, #16]
    6a1c:	ldr	q0, [x21]
    6a20:	lsr	x26, x26, #5
    6a24:	add	x23, x19, x26, lsl #4
    6a28:	str	x8, [sp, #48]
    6a2c:	str	q0, [sp, #32]
    6a30:	ldr	x8, [x21, #16]
    6a34:	ldr	q0, [x21]
    6a38:	sub	x0, x29, #0x20
    6a3c:	sub	x22, x22, #0x1
    6a40:	stur	x8, [x29, #-16]
    6a44:	stur	q0, [x29, #-32]
    6a48:	ldr	x1, [x19, #16]
    6a4c:	ldr	x2, [x23]
    6a50:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6a54:	tbz	w0, #0, 6a84 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0xec>
    6a58:	ldr	x1, [x23]
    6a5c:	ldur	x2, [x20, #-16]
    6a60:	sub	x0, x29, #0x20
    6a64:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6a68:	tbz	w0, #0, 6ab0 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x118>
    6a6c:	ldr	x8, [x23]
    6a70:	ldr	x9, [x19]
    6a74:	add	x10, x19, x26, lsl #4
    6a78:	str	x8, [x19]
    6a7c:	str	x9, [x23]
    6a80:	b	6b18 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x180>
    6a84:	ldr	x1, [x24]
    6a88:	ldur	x2, [x20, #-16]
    6a8c:	sub	x0, x29, #0x20
    6a90:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6a94:	tbz	w0, #0, 6adc <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x144>
    6a98:	ldr	x8, [x19, #16]
    6a9c:	ldr	x9, [x19]
    6aa0:	str	x8, [x19]
    6aa4:	str	x9, [x19, #16]
    6aa8:	mov	x8, x25
    6aac:	b	6b1c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x184>
    6ab0:	ldr	x1, [x19, #16]
    6ab4:	ldur	x2, [x20, #-16]
    6ab8:	sub	x0, x29, #0x20
    6abc:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6ac0:	ldr	x8, [x19]
    6ac4:	tbnz	w0, #0, 6af4 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x15c>
    6ac8:	ldr	x9, [x19, #16]
    6acc:	str	x8, [x19, #16]
    6ad0:	mov	x8, x25
    6ad4:	str	x9, [x19]
    6ad8:	b	6b1c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x184>
    6adc:	ldr	x1, [x23]
    6ae0:	ldur	x2, [x20, #-16]
    6ae4:	sub	x0, x29, #0x20
    6ae8:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6aec:	ldr	x8, [x19]
    6af0:	tbz	w0, #0, 6b08 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x170>
    6af4:	ldur	x9, [x20, #-16]
    6af8:	str	x9, [x19]
    6afc:	stur	x8, [x20, #-16]
    6b00:	sub	x8, x20, #0x8
    6b04:	b	6b1c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x184>
    6b08:	ldr	x9, [x23]
    6b0c:	add	x10, x19, x26, lsl #4
    6b10:	str	x9, [x19]
    6b14:	str	x8, [x23]
    6b18:	add	x8, x10, #0x8
    6b1c:	ldr	w9, [x8]
    6b20:	ldr	w10, [x19, #8]
    6b24:	mov	x26, x20
    6b28:	mov	x27, x24
    6b2c:	str	w9, [x19, #8]
    6b30:	str	w10, [x8]
    6b34:	ldr	q0, [sp, #32]
    6b38:	ldr	x8, [sp, #48]
    6b3c:	stur	q0, [x29, #-64]
    6b40:	stur	x8, [x29, #-48]
    6b44:	sub	x23, x27, #0x10
    6b48:	ldr	x1, [x23, #16]!
    6b4c:	ldr	x2, [x19]
    6b50:	sub	x0, x29, #0x40
    6b54:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6b58:	tbnz	w0, #0, 6b48 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x1b0>
    6b5c:	add	x27, x23, #0x10
    6b60:	ldr	x2, [x26, #-16]!
    6b64:	ldr	x1, [x19]
    6b68:	sub	x0, x29, #0x40
    6b6c:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6b70:	tbnz	w0, #0, 6b60 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x1c8>
    6b74:	cmp	x23, x26
    6b78:	b.cs	69e0 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x48>  // b.hs, b.nlast
    6b7c:	ldr	x8, [x26]
    6b80:	ldr	x9, [x23]
    6b84:	str	x8, [x23]
    6b88:	str	x9, [x26]
    6b8c:	ldr	w8, [x26, #8]
    6b90:	ldr	w9, [x23, #8]
    6b94:	str	w8, [x23, #8]
    6b98:	str	w9, [x26, #8]
    6b9c:	b	6b44 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x1ac>
    6ba0:	ldr	q0, [x21]
    6ba4:	ldr	x8, [x21, #16]
    6ba8:	lsr	x22, x26, #4
    6bac:	sub	x9, x22, #0x2
    6bb0:	str	q0, [sp, #64]
    6bb4:	str	x8, [sp, #80]
    6bb8:	ldr	x8, [x21, #16]
    6bbc:	sub	x10, x22, #0x1
    6bc0:	cmp	x9, #0x0
    6bc4:	csel	x9, x10, x9, lt  // lt = tstop
    6bc8:	ldr	q0, [x21]
    6bcc:	asr	x21, x9, #1
    6bd0:	stur	x8, [x29, #-48]
    6bd4:	add	x8, x19, x21, lsl #4
    6bd8:	add	x23, x8, #0x8
    6bdc:	stur	q0, [x29, #-64]
    6be0:	ldp	x3, x4, [x23, #-8]
    6be4:	ldur	q0, [x29, #-64]
    6be8:	ldur	x8, [x29, #-48]
    6bec:	sub	x5, x29, #0x20
    6bf0:	mov	x0, x19
    6bf4:	mov	x1, x21
    6bf8:	mov	x2, x22
    6bfc:	stur	q0, [x29, #-32]
    6c00:	stur	x8, [x29, #-16]
    6c04:	bl	6c8c <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_>
    6c08:	sub	x21, x21, #0x1
    6c0c:	cmn	x21, #0x1
    6c10:	sub	x23, x23, #0x10
    6c14:	b.ne	6be0 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x248>  // b.any
    6c18:	cmp	x26, #0x11
    6c1c:	b.lt	6c6c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x2d4>  // b.tstop
    6c20:	sub	x20, x20, #0x10
    6c24:	ldr	x8, [x19]
    6c28:	ldp	x3, x4, [x20]
    6c2c:	sub	x21, x20, x19
    6c30:	asr	x2, x21, #4
    6c34:	str	x8, [x20]
    6c38:	ldr	w8, [x19, #8]
    6c3c:	sub	x5, x29, #0x20
    6c40:	mov	x0, x19
    6c44:	mov	x1, xzr
    6c48:	str	w8, [x20, #8]
    6c4c:	ldr	q0, [sp, #64]
    6c50:	ldr	x8, [sp, #80]
    6c54:	stur	q0, [x29, #-32]
    6c58:	stur	x8, [x29, #-16]
    6c5c:	bl	6c8c <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_>
    6c60:	cmp	x21, #0x10
    6c64:	sub	x20, x20, #0x10
    6c68:	b.gt	6c24 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x28c>
    6c6c:	ldp	x20, x19, [sp, #240]
    6c70:	ldp	x22, x21, [sp, #224]
    6c74:	ldp	x24, x23, [sp, #208]
    6c78:	ldp	x26, x25, [sp, #192]
    6c7c:	ldr	x27, [sp, #176]
    6c80:	ldp	x29, x30, [sp, #160]
    6c84:	add	sp, sp, #0x100
    6c88:	ret

0000000000006c8c <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_>:
    6c8c:	sub	sp, sp, #0x90
    6c90:	stp	x29, x30, [sp, #48]
    6c94:	stp	x28, x27, [sp, #64]
    6c98:	stp	x26, x25, [sp, #80]
    6c9c:	stp	x24, x23, [sp, #96]
    6ca0:	stp	x22, x21, [sp, #112]
    6ca4:	stp	x20, x19, [sp, #128]
    6ca8:	add	x29, sp, #0x30
    6cac:	sub	x26, x2, #0x1
    6cb0:	cmp	x26, #0x0
    6cb4:	csel	x8, x2, x26, lt  // lt = tstop
    6cb8:	asr	x27, x8, #1
    6cbc:	mov	x23, x5
    6cc0:	mov	x20, x3
    6cc4:	mov	x24, x2
    6cc8:	mov	x22, x1
    6ccc:	mov	x21, x0
    6cd0:	cmp	x27, x1
    6cd4:	mov	x25, x1
    6cd8:	str	x4, [sp, #8]
    6cdc:	b.le	6d38 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xac>
    6ce0:	mov	x28, x22
    6ce4:	lsl	x8, x28, #1
    6ce8:	mov	w25, #0x1                   	// #1
    6cec:	add	x19, x8, #0x2
    6cf0:	bfi	x25, x28, #1, #63
    6cf4:	lsl	x8, x19, #4
    6cf8:	lsl	x9, x25, #4
    6cfc:	ldr	x1, [x21, x8]
    6d00:	ldr	x2, [x21, x9]
    6d04:	mov	x0, x23
    6d08:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6d0c:	tst	w0, #0x1
    6d10:	csel	x25, x25, x19, ne  // ne = any
    6d14:	add	x8, x21, x25, lsl #4
    6d18:	ldr	x9, [x8]
    6d1c:	add	x10, x21, x28, lsl #4
    6d20:	cmp	x25, x27
    6d24:	mov	x28, x25
    6d28:	str	x9, [x10]
    6d2c:	ldr	w8, [x8, #8]
    6d30:	str	w8, [x10, #8]
    6d34:	b.lt	6ce4 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x58>  // b.tstop
    6d38:	tbnz	w24, #0, 6d7c <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xf0>
    6d3c:	sub	x8, x24, #0x2
    6d40:	ldr	x19, [sp, #8]
    6d44:	cmp	x8, #0x0
    6d48:	csel	x8, x26, x8, lt  // lt = tstop
    6d4c:	cmp	x25, x8, asr #1
    6d50:	b.ne	6d80 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xf4>  // b.any
    6d54:	mov	w8, #0x1                   	// #1
    6d58:	bfi	x8, x25, #1, #63
    6d5c:	add	x9, x21, x8, lsl #4
    6d60:	ldr	x10, [x9]
    6d64:	add	x11, x21, x25, lsl #4
    6d68:	mov	x25, x8
    6d6c:	str	x10, [x11]
    6d70:	ldr	w9, [x9, #8]
    6d74:	str	w9, [x11, #8]
    6d78:	b	6d80 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xf4>
    6d7c:	ldr	x19, [sp, #8]
    6d80:	ldr	x8, [x23, #16]
    6d84:	ldr	q0, [x23]
    6d88:	cmp	x25, x22
    6d8c:	str	x8, [sp, #32]
    6d90:	str	q0, [sp, #16]
    6d94:	b.le	6de4 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x158>
    6d98:	sub	x8, x25, #0x1
    6d9c:	cmp	x8, #0x0
    6da0:	csel	x8, x25, x8, lt  // lt = tstop
    6da4:	asr	x23, x8, #1
    6da8:	add	x24, x21, x23, lsl #4
    6dac:	ldr	x1, [x24]
    6db0:	add	x0, sp, #0x10
    6db4:	mov	x2, x20
    6db8:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6dbc:	tbz	w0, #0, 6de4 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x158>
    6dc0:	ldr	x8, [x24]
    6dc4:	add	x9, x21, x25, lsl #4
    6dc8:	cmp	x23, x22
    6dcc:	mov	x25, x23
    6dd0:	str	x8, [x9]
    6dd4:	ldr	w8, [x24, #8]
    6dd8:	str	w8, [x9, #8]
    6ddc:	b.gt	6d98 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x10c>
    6de0:	b	6de8 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x15c>
    6de4:	mov	x23, x25
    6de8:	add	x8, x21, x23, lsl #4
    6dec:	str	x20, [x8]
    6df0:	str	w19, [x8, #8]
    6df4:	ldp	x20, x19, [sp, #128]
    6df8:	ldp	x22, x21, [sp, #112]
    6dfc:	ldp	x24, x23, [sp, #96]
    6e00:	ldp	x26, x25, [sp, #80]
    6e04:	ldp	x28, x27, [sp, #64]
    6e08:	ldp	x29, x30, [sp, #48]
    6e0c:	add	sp, sp, #0x90
    6e10:	ret

0000000000006e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>:
    6e14:	stp	x29, x30, [sp, #-80]!
    6e18:	stp	x26, x25, [sp, #16]
    6e1c:	stp	x24, x23, [sp, #32]
    6e20:	stp	x22, x21, [sp, #48]
    6e24:	stp	x20, x19, [sp, #64]
    6e28:	mov	x29, sp
    6e2c:	cmp	x1, x2
    6e30:	b.eq	6fa0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x18c>  // b.none
    6e34:	ldr	x22, [x0]
    6e38:	mov	x20, x0
    6e3c:	mov	x0, x1
    6e40:	mov	x19, x2
    6e44:	mov	x21, x1
    6e48:	bl	0 <_ZNK4llvm3Use7getUserEv>
    6e4c:	ldr	w26, [x22, #24]
    6e50:	cbz	w26, 6fb0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x19c>
    6e54:	orr	x8, x0, #0x8
    6e58:	cmn	x8, #0x8
    6e5c:	b.eq	7040 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x22c>  // b.none
    6e60:	ldr	x23, [x22, #8]
    6e64:	ubfx	x8, x0, #4, #28
    6e68:	eor	w8, w8, w0, lsr #9
    6e6c:	sub	w25, w26, #0x1
    6e70:	and	w8, w8, w25
    6e74:	lsl	x9, x8, #4
    6e78:	ldr	x9, [x23, x9]
    6e7c:	cmp	x9, x0
    6e80:	b.ne	6ed8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xc4>  // b.any
    6e84:	add	x8, x23, x8, lsl #4
    6e88:	ldr	w24, [x8, #8]
    6e8c:	mov	x0, x19
    6e90:	bl	0 <_ZNK4llvm3Use7getUserEv>
    6e94:	cbz	w26, 6f18 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x104>
    6e98:	orr	x8, x0, #0x8
    6e9c:	cmn	x8, #0x8
    6ea0:	b.eq	7040 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x22c>  // b.none
    6ea4:	ubfx	x8, x0, #4, #28
    6ea8:	eor	w8, w8, w0, lsr #9
    6eac:	and	w8, w8, w25
    6eb0:	lsl	x9, x8, #4
    6eb4:	ldr	x9, [x23, x9]
    6eb8:	cmp	x9, x0
    6ebc:	b.ne	7010 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1fc>  // b.any
    6ec0:	add	x8, x23, x8, lsl #4
    6ec4:	ldr	w8, [x8, #8]
    6ec8:	ldr	w9, [x22, #36]
    6ecc:	cmp	w9, w24
    6ed0:	b.cs	6f28 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x114>  // b.hs, b.nlast
    6ed4:	b	6f4c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x138>
    6ed8:	mov	w10, #0x1                   	// #1
    6edc:	cmn	x9, #0x8
    6ee0:	b.eq	6f08 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xf4>  // b.none
    6ee4:	add	w8, w8, w10
    6ee8:	and	w8, w8, w25
    6eec:	lsl	x9, x8, #4
    6ef0:	ldr	x9, [x23, x9]
    6ef4:	add	w10, w10, #0x1
    6ef8:	cmp	x9, x0
    6efc:	b.ne	6edc <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xc8>  // b.any
    6f00:	mov	w8, w8
    6f04:	b	6e84 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x70>
    6f08:	mov	w24, wzr
    6f0c:	mov	x0, x19
    6f10:	bl	0 <_ZNK4llvm3Use7getUserEv>
    6f14:	cbnz	w26, 6e98 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x84>
    6f18:	mov	w8, wzr
    6f1c:	ldr	w9, [x22, #36]
    6f20:	cmp	w9, w24
    6f24:	b.cc	6f4c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x138>  // b.lo, b.ul, b.last
    6f28:	ldr	w10, [x22, #32]
    6f2c:	cmp	w10, w24
    6f30:	b.cs	6f4c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x138>  // b.hs, b.nlast
    6f34:	cmp	w9, w8
    6f38:	b.cc	6f4c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x138>  // b.lo, b.ul, b.last
    6f3c:	cmp	w10, w8
    6f40:	b.cs	6f4c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x138>  // b.hs, b.nlast
    6f44:	cmp	w24, w8
    6f48:	b	6ff4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1e0>
    6f4c:	cmp	w24, w8
    6f50:	b.cs	6f74 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x160>  // b.hs, b.nlast
    6f54:	ldr	x9, [x20, #8]
    6f58:	ldr	w9, [x9]
    6f5c:	cmp	w9, w8
    6f60:	b.cc	6fa0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x18c>  // b.lo, b.ul, b.last
    6f64:	ldr	x8, [x20, #16]
    6f68:	ldrb	w8, [x8]
    6f6c:	cbnz	w8, 6fa0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x18c>
    6f70:	b	6f98 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x184>
    6f74:	ldr	x9, [x20, #8]
    6f78:	cmp	w8, w24
    6f7c:	ldr	w9, [x9]
    6f80:	b.cs	6fa8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x194>  // b.hs, b.nlast
    6f84:	cmp	w9, w24
    6f88:	b.cc	6f98 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x184>  // b.lo, b.ul, b.last
    6f8c:	ldr	x8, [x20, #16]
    6f90:	ldrb	w8, [x8]
    6f94:	cbz	w8, 6fa0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x18c>
    6f98:	mov	w0, #0x1                   	// #1
    6f9c:	b	6ff8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1e4>
    6fa0:	mov	w0, wzr
    6fa4:	b	6ff8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1e4>
    6fa8:	cmp	w9, w24
    6fac:	b.cc	6fbc <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1a8>  // b.lo, b.ul, b.last
    6fb0:	ldr	x8, [x20, #16]
    6fb4:	ldrb	w8, [x8]
    6fb8:	cbz	w8, 6fdc <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1c8>
    6fbc:	mov	x0, x21
    6fc0:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    6fc4:	mov	w20, w0
    6fc8:	mov	x0, x19
    6fcc:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    6fd0:	cmp	w20, w0
    6fd4:	cset	w0, hi  // hi = pmore
    6fd8:	b	6ff8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1e4>
    6fdc:	mov	x0, x21
    6fe0:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    6fe4:	mov	w20, w0
    6fe8:	mov	x0, x19
    6fec:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    6ff0:	cmp	w20, w0
    6ff4:	cset	w0, cc  // cc = lo, ul, last
    6ff8:	ldp	x20, x19, [sp, #64]
    6ffc:	ldp	x22, x21, [sp, #48]
    7000:	ldp	x24, x23, [sp, #32]
    7004:	ldp	x26, x25, [sp, #16]
    7008:	ldp	x29, x30, [sp], #80
    700c:	ret
    7010:	mov	w10, #0x1                   	// #1
    7014:	cmn	x9, #0x8
    7018:	b.eq	6f18 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x104>  // b.none
    701c:	add	w8, w8, w10
    7020:	and	w8, w8, w25
    7024:	lsl	x9, x8, #4
    7028:	ldr	x9, [x23, x9]
    702c:	add	w10, w10, #0x1
    7030:	cmp	x9, x0
    7034:	b.ne	7014 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x200>  // b.any
    7038:	mov	w8, w8
    703c:	b	6ec0 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xac>
    7040:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7044:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7048:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    704c:	add	x0, x0, #0x0
    7050:	add	x1, x1, #0x0
    7054:	add	x3, x3, #0x0
    7058:	mov	w2, #0x252                 	// #594
    705c:	bl	0 <__assert_fail>

0000000000007060 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_>:
    7060:	sub	sp, sp, #0x70
    7064:	stp	x29, x30, [sp, #32]
    7068:	str	x25, [sp, #48]
    706c:	stp	x24, x23, [sp, #64]
    7070:	stp	x22, x21, [sp, #80]
    7074:	stp	x20, x19, [sp, #96]
    7078:	add	x29, sp, #0x20
    707c:	cmp	x0, x1
    7080:	b.eq	7194 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x134>  // b.none
    7084:	add	x8, x0, #0x10
    7088:	mov	x19, x1
    708c:	mov	x20, x0
    7090:	cmp	x8, x1
    7094:	b.eq	7194 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x134>  // b.none
    7098:	mov	x21, x2
    709c:	mov	x25, x20
    70a0:	b	70bc <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x5c>
    70a4:	str	x22, [x25]
    70a8:	str	w24, [x25, #8]
    70ac:	add	x8, x23, #0x10
    70b0:	cmp	x8, x19
    70b4:	mov	x25, x23
    70b8:	b.eq	7194 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x134>  // b.none
    70bc:	ldr	x1, [x8]
    70c0:	ldr	x2, [x20]
    70c4:	mov	x0, x21
    70c8:	mov	x23, x8
    70cc:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    70d0:	tbz	w0, #0, 7134 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0xd4>
    70d4:	ldr	x8, [x23]
    70d8:	ldr	w9, [x25, #24]
    70dc:	sub	x10, x23, x20
    70e0:	cmp	x10, #0x1
    70e4:	b.lt	7118 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0xb8>  // b.tstop
    70e8:	lsr	x10, x10, #4
    70ec:	add	x10, x10, #0x1
    70f0:	mov	x12, x23
    70f4:	mov	x11, x23
    70f8:	ldr	x13, [x11, #-16]!
    70fc:	ldur	w14, [x12, #-8]
    7100:	sub	x10, x10, #0x1
    7104:	cmp	x10, #0x1
    7108:	str	x13, [x12]
    710c:	str	w14, [x12, #8]
    7110:	mov	x12, x11
    7114:	b.gt	70f8 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x98>
    7118:	str	x8, [x20]
    711c:	str	w9, [x20, #8]
    7120:	add	x8, x23, #0x10
    7124:	cmp	x8, x19
    7128:	mov	x25, x23
    712c:	b.ne	70bc <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x5c>  // b.any
    7130:	b	7194 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x134>
    7134:	ldr	x8, [x21, #16]
    7138:	ldr	q0, [x21]
    713c:	mov	x0, sp
    7140:	str	x8, [sp, #16]
    7144:	str	q0, [sp]
    7148:	ldr	x22, [x23]
    714c:	ldr	x2, [x25]
    7150:	ldr	w24, [x25, #24]
    7154:	mov	x1, x22
    7158:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    715c:	mov	x25, x23
    7160:	tbz	w0, #0, 70a4 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x44>
    7164:	mov	x25, x23
    7168:	mov	x8, x25
    716c:	ldr	x9, [x25, #-16]!
    7170:	ldur	w10, [x8, #-8]
    7174:	ldur	x2, [x8, #-32]
    7178:	mov	x0, sp
    717c:	mov	x1, x22
    7180:	str	x9, [x8]
    7184:	str	w10, [x8, #8]
    7188:	bl	6e14 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    718c:	tbnz	w0, #0, 7168 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x108>
    7190:	b	70a4 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x44>
    7194:	ldp	x20, x19, [sp, #96]
    7198:	ldp	x22, x21, [sp, #80]
    719c:	ldp	x24, x23, [sp, #64]
    71a0:	ldr	x25, [sp, #48]
    71a4:	ldp	x29, x30, [sp, #32]
    71a8:	add	sp, sp, #0x70
    71ac:	ret

00000000000071b0 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>:
    71b0:	stp	x29, x30, [sp, #-64]!
    71b4:	str	x23, [sp, #16]
    71b8:	stp	x22, x21, [sp, #32]
    71bc:	stp	x20, x19, [sp, #48]
    71c0:	mov	x29, sp
    71c4:	sub	x8, x1, x0
    71c8:	mov	x20, x1
    71cc:	mov	x21, x0
    71d0:	cmp	x8, #0xef
    71d4:	mov	x19, x2
    71d8:	b.gt	71fc <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x4c>
    71dc:	mov	x0, x21
    71e0:	mov	x1, x20
    71e4:	mov	x2, x19
    71e8:	ldp	x20, x19, [sp, #48]
    71ec:	ldp	x22, x21, [sp, #32]
    71f0:	ldr	x23, [sp, #16]
    71f4:	ldp	x29, x30, [sp], #64
    71f8:	b	7328 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    71fc:	lsr	x22, x8, #5
    7200:	add	x23, x21, x22, lsl #4
    7204:	mov	x0, x21
    7208:	mov	x1, x23
    720c:	mov	x2, x19
    7210:	bl	71b0 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    7214:	mov	x0, x23
    7218:	mov	x1, x20
    721c:	mov	x2, x19
    7220:	bl	71b0 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    7224:	sub	x8, x20, x23
    7228:	mov	x0, x21
    722c:	mov	x1, x23
    7230:	mov	x2, x20
    7234:	mov	x3, x22
    7238:	mov	x5, x19
    723c:	ldp	x20, x19, [sp, #48]
    7240:	ldp	x22, x21, [sp, #32]
    7244:	ldr	x23, [sp, #16]
    7248:	asr	x4, x8, #4
    724c:	ldp	x29, x30, [sp], #64
    7250:	b	75e4 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>

0000000000007254 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>:
    7254:	stp	x29, x30, [sp, #-64]!
    7258:	stp	x24, x23, [sp, #16]
    725c:	stp	x22, x21, [sp, #32]
    7260:	stp	x20, x19, [sp, #48]
    7264:	mov	x29, sp
    7268:	sub	x8, x1, x0
    726c:	asr	x8, x8, #4
    7270:	add	x9, x8, #0x1
    7274:	add	x10, x8, #0x2
    7278:	cmp	x9, #0x0
    727c:	csinc	x8, x10, x8, lt  // lt = tstop
    7280:	asr	x8, x8, #1
    7284:	add	x24, x0, x8, lsl #4
    7288:	mov	x19, x4
    728c:	mov	x20, x3
    7290:	mov	x21, x2
    7294:	mov	x22, x1
    7298:	mov	x23, x0
    729c:	cmp	x8, x3
    72a0:	mov	x1, x24
    72a4:	b.le	72d0 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_+0x7c>
    72a8:	mov	x3, x20
    72ac:	mov	x4, x19
    72b0:	bl	7254 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>
    72b4:	mov	x0, x24
    72b8:	mov	x1, x22
    72bc:	mov	x2, x21
    72c0:	mov	x3, x20
    72c4:	mov	x4, x19
    72c8:	bl	7254 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>
    72cc:	b	72ec <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_+0x98>
    72d0:	mov	x3, x19
    72d4:	bl	7d30 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_>
    72d8:	mov	x0, x24
    72dc:	mov	x1, x22
    72e0:	mov	x2, x21
    72e4:	mov	x3, x19
    72e8:	bl	7d30 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_>
    72ec:	sub	x8, x24, x23
    72f0:	sub	x9, x22, x24
    72f4:	mov	x0, x23
    72f8:	mov	x1, x24
    72fc:	mov	x2, x22
    7300:	mov	x5, x21
    7304:	mov	x6, x20
    7308:	mov	x7, x19
    730c:	ldp	x20, x19, [sp, #48]
    7310:	ldp	x22, x21, [sp, #32]
    7314:	ldp	x24, x23, [sp, #16]
    7318:	asr	x3, x8, #4
    731c:	asr	x4, x9, #4
    7320:	ldp	x29, x30, [sp], #64
    7324:	b	810c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_>

0000000000007328 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>:
    7328:	sub	sp, sp, #0x40
    732c:	stp	x29, x30, [sp, #16]
    7330:	stp	x22, x21, [sp, #32]
    7334:	stp	x20, x19, [sp, #48]
    7338:	add	x29, sp, #0x10
    733c:	cmp	x0, x1
    7340:	str	x2, [sp, #8]
    7344:	b.eq	75b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x288>  // b.none
    7348:	add	x8, x0, #0x10
    734c:	mov	x19, x1
    7350:	mov	x20, x0
    7354:	cmp	x8, x1
    7358:	b.eq	75b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x288>  // b.none
    735c:	mov	x22, x20
    7360:	b	737c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x54>
    7364:	str	x8, [x11]
    7368:	str	w9, [x11, #8]
    736c:	add	x8, x21, #0x10
    7370:	cmp	x8, x19
    7374:	mov	x22, x21
    7378:	b.eq	75b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x288>  // b.none
    737c:	add	x0, sp, #0x8
    7380:	mov	x1, x8
    7384:	mov	x2, x20
    7388:	mov	x21, x8
    738c:	bl	7764 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>
    7390:	tbz	w0, #0, 73f4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xcc>
    7394:	ldr	x8, [x21]
    7398:	ldr	w9, [x22, #24]
    739c:	sub	x10, x21, x20
    73a0:	cmp	x10, #0x1
    73a4:	b.lt	73d8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xb0>  // b.tstop
    73a8:	lsr	x10, x10, #4
    73ac:	add	x10, x10, #0x1
    73b0:	mov	x12, x21
    73b4:	mov	x11, x21
    73b8:	ldr	x13, [x11, #-16]!
    73bc:	ldur	w14, [x12, #-8]
    73c0:	sub	x10, x10, #0x1
    73c4:	cmp	x10, #0x1
    73c8:	str	x13, [x12]
    73cc:	str	w14, [x12, #8]
    73d0:	mov	x12, x11
    73d4:	b.gt	73b8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x90>
    73d8:	str	x8, [x20]
    73dc:	str	w9, [x20, #8]
    73e0:	add	x8, x21, #0x10
    73e4:	cmp	x8, x19
    73e8:	mov	x22, x21
    73ec:	b.ne	737c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x54>  // b.any
    73f0:	b	75b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x288>
    73f4:	ldr	x8, [x21]
    73f8:	ldr	x10, [sp, #8]
    73fc:	ldr	w9, [x22, #24]
    7400:	ldr	x12, [x8]
    7404:	cmn	x12, #0x8
    7408:	b.eq	7548 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x220>  // b.none
    740c:	ubfx	x11, x12, #4, #28
    7410:	eor	w13, w11, w12, lsr #9
    7414:	mov	x11, x21
    7418:	mov	x16, x21
    741c:	mov	x14, x21
    7420:	b	7440 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x118>
    7424:	ldur	w16, [x16, #-8]
    7428:	cmp	w16, w9
    742c:	b.cs	7364 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x3c>  // b.hs, b.nlast
    7430:	str	x15, [x11]
    7434:	str	w16, [x11, #8]
    7438:	mov	x11, x14
    743c:	mov	x16, x14
    7440:	ldr	x15, [x14, #-16]!
    7444:	ldr	x0, [x15]
    7448:	cmp	x0, x12
    744c:	b.eq	7424 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xfc>  // b.none
    7450:	ldr	w17, [x10, #48]
    7454:	ldr	x18, [x10, #32]
    7458:	cbz	w17, 74ac <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x184>
    745c:	orr	x1, x12, #0x8
    7460:	cmn	x1, #0x8
    7464:	b.eq	75c4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x29c>  // b.none
    7468:	sub	w1, w17, #0x1
    746c:	and	w2, w1, w13
    7470:	add	x3, x18, w2, uxtw #4
    7474:	ldr	x4, [x3]
    7478:	cmp	x4, x12
    747c:	b.eq	74b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x188>  // b.none
    7480:	mov	w5, #0x1                   	// #1
    7484:	cmn	x4, #0x8
    7488:	b.eq	74ac <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x184>  // b.none
    748c:	add	w2, w2, w5
    7490:	and	w2, w2, w1
    7494:	add	x3, x18, w2, uxtw #4
    7498:	ldr	x4, [x3]
    749c:	add	w5, w5, #0x1
    74a0:	cmp	x4, x12
    74a4:	b.eq	74b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x188>  // b.none
    74a8:	b	7484 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x15c>
    74ac:	add	x3, x18, x17, lsl #4
    74b0:	add	x1, x18, x17, lsl #4
    74b4:	cmp	x3, x1
    74b8:	b.eq	7590 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x268>  // b.none
    74bc:	ldr	w1, [x3, #8]
    74c0:	cbz	w17, 751c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1f4>
    74c4:	orr	x2, x0, #0x8
    74c8:	cmn	x2, #0x8
    74cc:	b.eq	75c4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x29c>  // b.none
    74d0:	ubfx	x2, x0, #4, #28
    74d4:	eor	w3, w2, w0, lsr #9
    74d8:	sub	w2, w17, #0x1
    74dc:	and	w3, w2, w3
    74e0:	add	x4, x18, w3, uxtw #4
    74e4:	ldr	x5, [x4]
    74e8:	cmp	x5, x0
    74ec:	b.eq	7520 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1f8>  // b.none
    74f0:	mov	w6, #0x1                   	// #1
    74f4:	cmn	x5, #0x8
    74f8:	b.eq	751c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1f4>  // b.none
    74fc:	add	w3, w3, w6
    7500:	and	w3, w3, w2
    7504:	add	x4, x18, w3, uxtw #4
    7508:	ldr	x5, [x4]
    750c:	add	w6, w6, #0x1
    7510:	cmp	x5, x0
    7514:	b.eq	7520 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1f8>  // b.none
    7518:	b	74f4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1cc>
    751c:	add	x4, x18, x17, lsl #4
    7520:	add	x17, x18, x17, lsl #4
    7524:	cmp	x4, x17
    7528:	b.eq	7590 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x268>  // b.none
    752c:	ldr	w17, [x4, #8]
    7530:	sub	w18, w1, #0x1
    7534:	sub	w17, w17, #0x1
    7538:	cmp	w18, w17
    753c:	b.cs	7364 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x3c>  // b.hs, b.nlast
    7540:	ldur	w16, [x16, #-8]
    7544:	b	7430 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x108>
    7548:	mov	x12, x21
    754c:	ldr	x13, [x12, #-16]!
    7550:	ldr	x11, [x13]
    7554:	cmn	x11, #0x8
    7558:	b.ne	7588 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x260>  // b.any
    755c:	mov	x11, x21
    7560:	ldr	w14, [x12, #8]
    7564:	cmp	w14, w9
    7568:	b.cs	7364 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x3c>  // b.hs, b.nlast
    756c:	str	x13, [x11]
    7570:	str	w14, [x11, #8]
    7574:	mov	x11, x12
    7578:	ldr	x13, [x12, #-16]!
    757c:	ldr	x14, [x13]
    7580:	cmn	x14, #0x8
    7584:	b.eq	7560 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x238>  // b.none
    7588:	ldr	w8, [x10, #48]
    758c:	cbnz	w8, 75c4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x29c>
    7590:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7594:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7598:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    759c:	add	x0, x0, #0x0
    75a0:	add	x1, x1, #0x0
    75a4:	add	x3, x3, #0x0
    75a8:	mov	w2, #0xa9                  	// #169
    75ac:	bl	0 <__assert_fail>
    75b0:	ldp	x20, x19, [sp, #48]
    75b4:	ldp	x22, x21, [sp, #32]
    75b8:	ldp	x29, x30, [sp, #16]
    75bc:	add	sp, sp, #0x40
    75c0:	ret
    75c4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    75c8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    75cc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    75d0:	add	x0, x0, #0x0
    75d4:	add	x1, x1, #0x0
    75d8:	add	x3, x3, #0x0
    75dc:	mov	w2, #0x252                 	// #594
    75e0:	bl	0 <__assert_fail>

00000000000075e4 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>:
    75e4:	sub	sp, sp, #0x70
    75e8:	stp	x29, x30, [sp, #16]
    75ec:	stp	x28, x27, [sp, #32]
    75f0:	stp	x26, x25, [sp, #48]
    75f4:	stp	x24, x23, [sp, #64]
    75f8:	stp	x22, x21, [sp, #80]
    75fc:	stp	x20, x19, [sp, #96]
    7600:	add	x29, sp, #0x10
    7604:	str	x5, [sp, #8]
    7608:	cbz	x3, 7660 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x7c>
    760c:	mov	x23, x4
    7610:	cbz	x4, 7660 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x7c>
    7614:	add	x8, x23, x3
    7618:	mov	x24, x3
    761c:	mov	x21, x1
    7620:	mov	x20, x0
    7624:	cmp	x8, #0x2
    7628:	b.ne	7680 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x9c>  // b.any
    762c:	add	x0, sp, #0x8
    7630:	mov	x1, x21
    7634:	mov	x2, x20
    7638:	bl	7764 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>
    763c:	tbz	w0, #0, 7660 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x7c>
    7640:	ldr	x8, [x21]
    7644:	ldr	x9, [x20]
    7648:	str	x8, [x20]
    764c:	str	x9, [x21]
    7650:	ldr	w8, [x21, #8]
    7654:	ldr	w9, [x20, #8]
    7658:	str	w8, [x20, #8]
    765c:	str	w9, [x21, #8]
    7660:	ldp	x20, x19, [sp, #96]
    7664:	ldp	x22, x21, [sp, #80]
    7668:	ldp	x24, x23, [sp, #64]
    766c:	ldp	x26, x25, [sp, #48]
    7670:	ldp	x28, x27, [sp, #32]
    7674:	ldp	x29, x30, [sp, #16]
    7678:	add	sp, sp, #0x70
    767c:	ret
    7680:	mov	x19, x5
    7684:	mov	x22, x2
    7688:	cmp	x24, x23
    768c:	b.le	76c8 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0xe4>
    7690:	cmp	x24, #0x0
    7694:	cinc	x8, x24, lt  // lt = tstop
    7698:	asr	x27, x8, #1
    769c:	add	x28, x20, x27, lsl #4
    76a0:	ldr	x2, [x28]
    76a4:	ldr	w3, [x28, #8]
    76a8:	mov	x0, x21
    76ac:	mov	x1, x22
    76b0:	mov	x4, x19
    76b4:	bl	78e0 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    76b8:	sub	x8, x0, x21
    76bc:	mov	x25, x0
    76c0:	asr	x26, x8, #4
    76c4:	b	76fc <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x118>
    76c8:	cmp	x23, #0x0
    76cc:	cinc	x8, x23, lt  // lt = tstop
    76d0:	asr	x26, x8, #1
    76d4:	add	x25, x21, x26, lsl #4
    76d8:	ldr	x2, [x25]
    76dc:	ldr	w3, [x25, #8]
    76e0:	mov	x0, x20
    76e4:	mov	x1, x21
    76e8:	mov	x4, x19
    76ec:	bl	7b40 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    76f0:	sub	x8, x0, x20
    76f4:	mov	x28, x0
    76f8:	asr	x27, x8, #4
    76fc:	mov	x0, x28
    7700:	mov	x1, x21
    7704:	mov	x2, x25
    7708:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    770c:	mov	x21, x0
    7710:	mov	x0, x20
    7714:	mov	x1, x28
    7718:	mov	x2, x21
    771c:	mov	x3, x27
    7720:	mov	x4, x26
    7724:	mov	x5, x19
    7728:	bl	75e4 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>
    772c:	sub	x3, x24, x27
    7730:	sub	x4, x23, x26
    7734:	mov	x0, x21
    7738:	mov	x1, x25
    773c:	mov	x2, x22
    7740:	mov	x5, x19
    7744:	ldp	x20, x19, [sp, #96]
    7748:	ldp	x22, x21, [sp, #80]
    774c:	ldp	x24, x23, [sp, #64]
    7750:	ldp	x26, x25, [sp, #48]
    7754:	ldp	x28, x27, [sp, #32]
    7758:	ldp	x29, x30, [sp, #16]
    775c:	add	sp, sp, #0x70
    7760:	b	75e4 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>

0000000000007764 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>:
    7764:	stp	x29, x30, [sp, #-16]!
    7768:	mov	x29, sp
    776c:	ldr	x8, [x1]
    7770:	ldr	x9, [x2]
    7774:	ldr	x11, [x8]
    7778:	ldr	x10, [x9]
    777c:	cmp	x11, x10
    7780:	b.eq	77ec <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x88>  // b.none
    7784:	ldr	x9, [x0]
    7788:	ldr	w8, [x9, #48]
    778c:	ldr	x9, [x9, #32]
    7790:	cbz	w8, 7804 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xa0>
    7794:	orr	x12, x11, #0x8
    7798:	cmn	x12, #0x8
    779c:	b.eq	78a0 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x13c>  // b.none
    77a0:	ubfx	x12, x11, #4, #28
    77a4:	eor	w13, w12, w11, lsr #9
    77a8:	sub	w12, w8, #0x1
    77ac:	and	w13, w12, w13
    77b0:	add	x14, x9, w13, uxtw #4
    77b4:	ldr	x15, [x14]
    77b8:	cmp	x15, x11
    77bc:	b.eq	7808 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xa4>  // b.none
    77c0:	mov	w16, #0x1                   	// #1
    77c4:	cmn	x15, #0x8
    77c8:	b.eq	7804 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xa0>  // b.none
    77cc:	add	w13, w13, w16
    77d0:	and	w13, w13, w12
    77d4:	add	x14, x9, w13, uxtw #4
    77d8:	ldr	x15, [x14]
    77dc:	add	w16, w16, #0x1
    77e0:	cmp	x15, x11
    77e4:	b.eq	7808 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xa4>  // b.none
    77e8:	b	77c4 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x60>
    77ec:	ldr	w8, [x1, #8]
    77f0:	ldr	w9, [x2, #8]
    77f4:	cmp	w8, w9
    77f8:	cset	w0, hi  // hi = pmore
    77fc:	ldp	x29, x30, [sp], #16
    7800:	ret
    7804:	add	x14, x9, x8, lsl #4
    7808:	add	x11, x9, x8, lsl #4
    780c:	cmp	x14, x11
    7810:	b.eq	78c0 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x15c>  // b.none
    7814:	ldr	w11, [x14, #8]
    7818:	cbz	w8, 7874 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x110>
    781c:	orr	x12, x10, #0x8
    7820:	cmn	x12, #0x8
    7824:	b.eq	78a0 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x13c>  // b.none
    7828:	ubfx	x12, x10, #4, #28
    782c:	eor	w13, w12, w10, lsr #9
    7830:	sub	w12, w8, #0x1
    7834:	and	w13, w12, w13
    7838:	add	x14, x9, w13, uxtw #4
    783c:	ldr	x15, [x14]
    7840:	cmp	x15, x10
    7844:	b.eq	7878 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x114>  // b.none
    7848:	mov	w16, #0x1                   	// #1
    784c:	cmn	x15, #0x8
    7850:	b.eq	7874 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x110>  // b.none
    7854:	add	w13, w13, w16
    7858:	and	w13, w13, w12
    785c:	add	x14, x9, w13, uxtw #4
    7860:	ldr	x15, [x14]
    7864:	add	w16, w16, #0x1
    7868:	cmp	x15, x10
    786c:	b.eq	7878 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x114>  // b.none
    7870:	b	784c <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xe8>
    7874:	add	x14, x9, x8, lsl #4
    7878:	add	x8, x9, x8, lsl #4
    787c:	cmp	x14, x8
    7880:	b.eq	78c0 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x15c>  // b.none
    7884:	ldr	w8, [x14, #8]
    7888:	sub	w9, w11, #0x1
    788c:	sub	w8, w8, #0x1
    7890:	cmp	w9, w8
    7894:	cset	w0, cc  // cc = lo, ul, last
    7898:	ldp	x29, x30, [sp], #16
    789c:	ret
    78a0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    78a4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    78a8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    78ac:	add	x0, x0, #0x0
    78b0:	add	x1, x1, #0x0
    78b4:	add	x3, x3, #0x0
    78b8:	mov	w2, #0x252                 	// #594
    78bc:	bl	0 <__assert_fail>
    78c0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    78c4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    78c8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    78cc:	add	x0, x0, #0x0
    78d0:	add	x1, x1, #0x0
    78d4:	add	x3, x3, #0x0
    78d8:	mov	w2, #0xa9                  	// #169
    78dc:	bl	0 <__assert_fail>

00000000000078e0 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>:
    78e0:	stp	x29, x30, [sp, #-16]!
    78e4:	mov	x29, sp
    78e8:	sub	x8, x1, x0
    78ec:	cmp	x8, #0x1
    78f0:	b.lt	794c <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x6c>  // b.tstop
    78f4:	ldr	x9, [x2]
    78f8:	asr	x8, x8, #4
    78fc:	cmn	x9, #0x8
    7900:	b.eq	7910 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x30>  // b.none
    7904:	ubfx	x10, x9, #4, #28
    7908:	eor	w10, w10, w9, lsr #9
    790c:	b	796c <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x8c>
    7910:	lsr	x9, x8, #1
    7914:	add	x11, x0, x9, lsl #4
    7918:	ldr	x10, [x11]
    791c:	ldr	x10, [x10]
    7920:	cmn	x10, #0x8
    7924:	b.ne	7a88 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1a8>  // b.any
    7928:	ldr	w10, [x11, #8]
    792c:	mvn	x12, x9
    7930:	add	x8, x8, x12
    7934:	add	x11, x11, #0x10
    7938:	cmp	w10, w3
    793c:	csel	x8, x8, x9, hi  // hi = pmore
    7940:	csel	x0, x11, x0, hi  // hi = pmore
    7944:	cmp	x8, #0x0
    7948:	b.gt	7910 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x30>
    794c:	ldp	x29, x30, [sp], #16
    7950:	ret
    7954:	mvn	x11, x11
    7958:	add	x0, x12, #0x10
    795c:	add	x11, x8, x11
    7960:	cmp	x11, #0x0
    7964:	mov	x8, x11
    7968:	b.le	794c <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x6c>
    796c:	lsr	x11, x8, #1
    7970:	add	x12, x0, x11, lsl #4
    7974:	ldr	x13, [x12]
    7978:	ldr	x15, [x13]
    797c:	cmp	x15, x9
    7980:	b.eq	79e8 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x108>  // b.none
    7984:	ldr	w13, [x4, #48]
    7988:	ldr	x14, [x4, #32]
    798c:	cbz	w13, 79f8 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x118>
    7990:	orr	x16, x15, #0x8
    7994:	cmn	x16, #0x8
    7998:	b.eq	7ad4 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1f4>  // b.none
    799c:	ubfx	x16, x15, #4, #28
    79a0:	eor	w17, w16, w15, lsr #9
    79a4:	sub	w16, w13, #0x1
    79a8:	and	w17, w16, w17
    79ac:	add	x18, x14, w17, uxtw #4
    79b0:	ldr	x1, [x18]
    79b4:	cmp	x1, x15
    79b8:	b.eq	79fc <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x11c>  // b.none
    79bc:	mov	w2, #0x1                   	// #1
    79c0:	cmn	x1, #0x8
    79c4:	b.eq	79f8 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x118>  // b.none
    79c8:	add	w17, w17, w2
    79cc:	and	w17, w17, w16
    79d0:	add	x18, x14, w17, uxtw #4
    79d4:	ldr	x1, [x18]
    79d8:	add	w2, w2, #0x1
    79dc:	cmp	x1, x15
    79e0:	b.eq	79fc <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x11c>  // b.none
    79e4:	b	79c0 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xe0>
    79e8:	ldr	w13, [x12, #8]
    79ec:	cmp	w13, w3
    79f0:	b.hi	7954 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x74>  // b.pmore
    79f4:	b	7960 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x80>
    79f8:	add	x18, x14, x13, lsl #4
    79fc:	add	x15, x14, x13, lsl #4
    7a00:	cmp	x18, x15
    7a04:	b.eq	7aa8 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1c8>  // b.none
    7a08:	ldr	w15, [x18, #8]
    7a0c:	cbz	w13, 7a60 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x180>
    7a10:	orr	x16, x9, #0x8
    7a14:	cmn	x16, #0x8
    7a18:	b.eq	7ad4 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1f4>  // b.none
    7a1c:	sub	w16, w13, #0x1
    7a20:	and	w17, w16, w10
    7a24:	add	x18, x14, w17, uxtw #4
    7a28:	ldr	x1, [x18]
    7a2c:	cmp	x1, x9
    7a30:	b.eq	7a64 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x184>  // b.none
    7a34:	mov	w2, #0x1                   	// #1
    7a38:	cmn	x1, #0x8
    7a3c:	b.eq	7a60 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x180>  // b.none
    7a40:	add	w17, w17, w2
    7a44:	and	w17, w17, w16
    7a48:	add	x18, x14, w17, uxtw #4
    7a4c:	ldr	x1, [x18]
    7a50:	add	w2, w2, #0x1
    7a54:	cmp	x1, x9
    7a58:	b.eq	7a64 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x184>  // b.none
    7a5c:	b	7a38 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x158>
    7a60:	add	x18, x14, x13, lsl #4
    7a64:	add	x13, x14, x13, lsl #4
    7a68:	cmp	x18, x13
    7a6c:	b.eq	7aa8 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1c8>  // b.none
    7a70:	ldr	w13, [x18, #8]
    7a74:	sub	w14, w15, #0x1
    7a78:	sub	w13, w13, #0x1
    7a7c:	cmp	w14, w13
    7a80:	b.cc	7954 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x74>  // b.lo, b.ul, b.last
    7a84:	b	7960 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x80>
    7a88:	ldr	w8, [x4, #48]
    7a8c:	ldr	x9, [x4, #32]
    7a90:	cbnz	w8, 7ac8 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1e8>
    7a94:	add	x13, x9, x8, lsl #4
    7a98:	add	x9, x9, x8, lsl #4
    7a9c:	cmp	x13, x9
    7aa0:	b.eq	7aa8 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1c8>  // b.none
    7aa4:	cbnz	w8, 7ad4 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1f4>
    7aa8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7aac:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7ab0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7ab4:	add	x0, x0, #0x0
    7ab8:	add	x1, x1, #0x0
    7abc:	add	x3, x3, #0x0
    7ac0:	mov	w2, #0xa9                  	// #169
    7ac4:	bl	0 <__assert_fail>
    7ac8:	orr	x11, x10, #0x8
    7acc:	cmn	x11, #0x8
    7ad0:	b.ne	7af4 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x214>  // b.any
    7ad4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7ad8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7adc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7ae0:	add	x0, x0, #0x0
    7ae4:	add	x1, x1, #0x0
    7ae8:	add	x3, x3, #0x0
    7aec:	mov	w2, #0x252                 	// #594
    7af0:	bl	0 <__assert_fail>
    7af4:	ubfx	x11, x10, #4, #28
    7af8:	eor	w12, w11, w10, lsr #9
    7afc:	sub	w11, w8, #0x1
    7b00:	and	w12, w11, w12
    7b04:	add	x13, x9, w12, uxtw #4
    7b08:	ldr	x14, [x13]
    7b0c:	cmp	x14, x10
    7b10:	b.eq	7a98 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1b8>  // b.none
    7b14:	mov	w15, #0x1                   	// #1
    7b18:	cmn	x14, #0x8
    7b1c:	b.eq	7a94 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1b4>  // b.none
    7b20:	add	w12, w12, w15
    7b24:	and	w12, w12, w11
    7b28:	add	x13, x9, w12, uxtw #4
    7b2c:	ldr	x14, [x13]
    7b30:	add	w15, w15, #0x1
    7b34:	cmp	x14, x10
    7b38:	b.ne	7b18 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x238>  // b.any
    7b3c:	b	7a98 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1b8>

0000000000007b40 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>:
    7b40:	stp	x29, x30, [sp, #-16]!
    7b44:	mov	x29, sp
    7b48:	sub	x8, x1, x0
    7b4c:	cmp	x8, #0x1
    7b50:	b.lt	7bac <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x6c>  // b.tstop
    7b54:	ldr	x9, [x2]
    7b58:	asr	x8, x8, #4
    7b5c:	cmn	x9, #0x8
    7b60:	b.eq	7b70 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x30>  // b.none
    7b64:	ubfx	x10, x9, #4, #28
    7b68:	eor	w10, w10, w9, lsr #9
    7b6c:	b	7bcc <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x8c>
    7b70:	lsr	x9, x8, #1
    7b74:	add	x10, x0, x9, lsl #4
    7b78:	ldr	x11, [x10]
    7b7c:	ldr	x11, [x11]
    7b80:	cmn	x11, #0x8
    7b84:	b.ne	7ce8 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1a8>  // b.any
    7b88:	ldr	w11, [x10, #8]
    7b8c:	mvn	x12, x9
    7b90:	add	x8, x8, x12
    7b94:	add	x10, x10, #0x10
    7b98:	cmp	w11, w3
    7b9c:	csel	x8, x9, x8, cc  // cc = lo, ul, last
    7ba0:	csel	x0, x0, x10, cc  // cc = lo, ul, last
    7ba4:	cmp	x8, #0x0
    7ba8:	b.gt	7b70 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x30>
    7bac:	ldp	x29, x30, [sp], #16
    7bb0:	ret
    7bb4:	mvn	x11, x11
    7bb8:	add	x0, x12, #0x10
    7bbc:	add	x11, x8, x11
    7bc0:	cmp	x11, #0x0
    7bc4:	mov	x8, x11
    7bc8:	b.le	7bac <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x6c>
    7bcc:	lsr	x11, x8, #1
    7bd0:	add	x12, x0, x11, lsl #4
    7bd4:	ldr	x13, [x12]
    7bd8:	ldr	x15, [x13]
    7bdc:	cmp	x15, x9
    7be0:	b.eq	7c40 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x100>  // b.none
    7be4:	ldr	w13, [x4, #48]
    7be8:	ldr	x14, [x4, #32]
    7bec:	cbz	w13, 7c50 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x110>
    7bf0:	orr	x16, x9, #0x8
    7bf4:	cmn	x16, #0x8
    7bf8:	b.eq	7d10 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1d0>  // b.none
    7bfc:	sub	w16, w13, #0x1
    7c00:	and	w17, w16, w10
    7c04:	add	x18, x14, w17, uxtw #4
    7c08:	ldr	x1, [x18]
    7c0c:	cmp	x1, x9
    7c10:	b.eq	7c54 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x114>  // b.none
    7c14:	mov	w2, #0x1                   	// #1
    7c18:	cmn	x1, #0x8
    7c1c:	b.eq	7c50 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x110>  // b.none
    7c20:	add	w17, w17, w2
    7c24:	and	w17, w17, w16
    7c28:	add	x18, x14, w17, uxtw #4
    7c2c:	ldr	x1, [x18]
    7c30:	add	w2, w2, #0x1
    7c34:	cmp	x1, x9
    7c38:	b.eq	7c54 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x114>  // b.none
    7c3c:	b	7c18 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xd8>
    7c40:	ldr	w13, [x12, #8]
    7c44:	cmp	w13, w3
    7c48:	b.cs	7bb4 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x74>  // b.hs, b.nlast
    7c4c:	b	7bc0 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x80>
    7c50:	add	x18, x14, x13, lsl #4
    7c54:	add	x16, x14, x13, lsl #4
    7c58:	cmp	x18, x16
    7c5c:	b.eq	7cf0 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1b0>  // b.none
    7c60:	ldr	w16, [x18, #8]
    7c64:	cbz	w13, 7cc0 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x180>
    7c68:	orr	x17, x15, #0x8
    7c6c:	cmn	x17, #0x8
    7c70:	b.eq	7d10 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1d0>  // b.none
    7c74:	ubfx	x17, x15, #4, #28
    7c78:	eor	w18, w17, w15, lsr #9
    7c7c:	sub	w17, w13, #0x1
    7c80:	and	w18, w17, w18
    7c84:	add	x1, x14, w18, uxtw #4
    7c88:	ldr	x2, [x1]
    7c8c:	cmp	x2, x15
    7c90:	b.eq	7cc4 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x184>  // b.none
    7c94:	mov	w5, #0x1                   	// #1
    7c98:	cmn	x2, #0x8
    7c9c:	b.eq	7cc0 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x180>  // b.none
    7ca0:	add	w18, w18, w5
    7ca4:	and	w18, w18, w17
    7ca8:	add	x1, x14, w18, uxtw #4
    7cac:	ldr	x2, [x1]
    7cb0:	add	w5, w5, #0x1
    7cb4:	cmp	x2, x15
    7cb8:	b.eq	7cc4 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x184>  // b.none
    7cbc:	b	7c98 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x158>
    7cc0:	add	x1, x14, x13, lsl #4
    7cc4:	add	x13, x14, x13, lsl #4
    7cc8:	cmp	x1, x13
    7ccc:	b.eq	7cf0 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1b0>  // b.none
    7cd0:	ldr	w13, [x1, #8]
    7cd4:	sub	w14, w16, #0x1
    7cd8:	sub	w13, w13, #0x1
    7cdc:	cmp	w14, w13
    7ce0:	b.cs	7bb4 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x74>  // b.hs, b.nlast
    7ce4:	b	7bc0 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x80>
    7ce8:	ldr	w8, [x4, #48]
    7cec:	cbnz	w8, 7d10 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x1d0>
    7cf0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7cf4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7cf8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7cfc:	add	x0, x0, #0x0
    7d00:	add	x1, x1, #0x0
    7d04:	add	x3, x3, #0x0
    7d08:	mov	w2, #0xa9                  	// #169
    7d0c:	bl	0 <__assert_fail>
    7d10:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7d14:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7d18:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7d1c:	add	x0, x0, #0x0
    7d20:	add	x1, x1, #0x0
    7d24:	add	x3, x3, #0x0
    7d28:	mov	w2, #0x252                 	// #594
    7d2c:	bl	0 <__assert_fail>

0000000000007d30 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_>:
    7d30:	sub	sp, sp, #0x90
    7d34:	stp	x29, x30, [sp, #48]
    7d38:	stp	x28, x27, [sp, #64]
    7d3c:	stp	x26, x25, [sp, #80]
    7d40:	stp	x24, x23, [sp, #96]
    7d44:	stp	x22, x21, [sp, #112]
    7d48:	stp	x20, x19, [sp, #128]
    7d4c:	add	x29, sp, #0x30
    7d50:	sub	x21, x1, x0
    7d54:	mov	x19, x3
    7d58:	mov	x20, x1
    7d5c:	cmp	x21, #0x61
    7d60:	b.lt	80c4 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x394>  // b.tstop
    7d64:	asr	x8, x21, #4
    7d68:	add	x25, x2, x21
    7d6c:	str	x8, [sp, #16]
    7d70:	stur	x2, [x29, #-16]
    7d74:	str	x0, [sp, #24]
    7d78:	add	x24, x0, #0x70
    7d7c:	mov	x1, x24
    7d80:	mov	x2, x19
    7d84:	bl	7328 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    7d88:	sub	x8, x20, x24
    7d8c:	cmp	x8, #0x60
    7d90:	mov	x0, x24
    7d94:	b.gt	7d78 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x48>
    7d98:	mov	x0, x24
    7d9c:	mov	x1, x20
    7da0:	mov	x2, x19
    7da4:	bl	7328 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    7da8:	ldp	x23, x24, [sp, #16]
    7dac:	cmp	x21, #0x71
    7db0:	b.lt	80ec <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x3bc>  // b.tstop
    7db4:	mov	w22, #0x7                   	// #7
    7db8:	str	x25, [sp, #8]
    7dbc:	b	7de8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xb8>
    7dc0:	cmp	x8, x28
    7dc4:	csel	x8, x28, x8, gt
    7dc8:	add	x1, x0, x8, lsl #4
    7dcc:	mov	x2, x1
    7dd0:	mov	x3, x26
    7dd4:	mov	x5, x19
    7dd8:	bl	8710 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>
    7ddc:	cmp	x21, x23
    7de0:	mov	x22, x21
    7de4:	b.ge	80ec <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x3bc>  // b.tcont
    7de8:	ldur	x21, [x29, #-16]
    7dec:	lsl	x28, x22, #1
    7df0:	cmp	x23, x28
    7df4:	mov	x9, x23
    7df8:	b.ge	7e74 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x144>  // b.tcont
    7dfc:	cmp	x9, x22
    7e00:	csel	x8, x22, x9, gt
    7e04:	add	x27, x24, x8, lsl #4
    7e08:	stur	x19, [x29, #-8]
    7e0c:	cbz	x8, 7fe0 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x2b0>
    7e10:	mov	x26, x24
    7e14:	mov	x25, x27
    7e18:	b	7e40 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x110>
    7e1c:	ldr	x8, [x24]
    7e20:	add	x24, x26, #0x10
    7e24:	str	x8, [x21]
    7e28:	ldr	w8, [x26, #8]
    7e2c:	cmp	x27, x24
    7e30:	mov	x26, x24
    7e34:	str	w8, [x21, #8]
    7e38:	add	x21, x21, #0x10
    7e3c:	b.eq	7fe4 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x2b4>  // b.none
    7e40:	cmp	x25, x20
    7e44:	b.eq	7fe8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x2b8>  // b.none
    7e48:	sub	x0, x29, #0x8
    7e4c:	mov	x1, x25
    7e50:	mov	x2, x24
    7e54:	bl	7764 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>
    7e58:	tbz	w0, #0, 7e1c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xec>
    7e5c:	mov	x8, x25
    7e60:	ldr	x9, [x8], #16
    7e64:	mov	x26, x25
    7e68:	str	x9, [x21]
    7e6c:	mov	x25, x8
    7e70:	b	7e28 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xf8>
    7e74:	ldur	x21, [x29, #-16]
    7e78:	ldr	x24, [sp, #24]
    7e7c:	cbnz	x22, 7e9c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x16c>
    7e80:	ldur	x21, [x29, #-16]
    7e84:	ldr	x8, [sp, #24]
    7e88:	b	7f9c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x26c>
    7e8c:	sub	x8, x20, x24
    7e90:	asr	x9, x8, #4
    7e94:	cmp	x9, x28
    7e98:	b.lt	7dfc <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xcc>  // b.tstop
    7e9c:	mov	x26, x24
    7ea0:	add	x23, x24, x22, lsl #4
    7ea4:	add	x24, x24, x28, lsl #4
    7ea8:	mov	x27, x26
    7eac:	mov	x25, x23
    7eb0:	stur	x19, [x29, #-8]
    7eb4:	b	7edc <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x1ac>
    7eb8:	ldr	x8, [x27]
    7ebc:	add	x27, x26, #0x10
    7ec0:	str	x8, [x21]
    7ec4:	ldr	w8, [x26, #8]
    7ec8:	cmp	x23, x27
    7ecc:	mov	x26, x27
    7ed0:	str	w8, [x21, #8]
    7ed4:	add	x21, x21, #0x10
    7ed8:	b.eq	7f10 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x1e0>  // b.none
    7edc:	cmp	x24, x25
    7ee0:	b.eq	7f14 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x1e4>  // b.none
    7ee4:	sub	x0, x29, #0x8
    7ee8:	mov	x1, x25
    7eec:	mov	x2, x27
    7ef0:	bl	7764 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>
    7ef4:	tbz	w0, #0, 7eb8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x188>
    7ef8:	mov	x8, x25
    7efc:	ldr	x9, [x8], #16
    7f00:	mov	x26, x25
    7f04:	str	x9, [x21]
    7f08:	mov	x25, x8
    7f0c:	b	7ec4 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x194>
    7f10:	mov	x26, x23
    7f14:	sub	x8, x23, x27
    7f18:	cmp	x8, #0x1
    7f1c:	b.lt	7f4c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x21c>  // b.tstop
    7f20:	lsr	x8, x8, #4
    7f24:	add	x8, x8, #0x1
    7f28:	ldr	x9, [x26]
    7f2c:	sub	x8, x8, #0x1
    7f30:	cmp	x8, #0x1
    7f34:	str	x9, [x21]
    7f38:	ldr	w9, [x26, #8]
    7f3c:	add	x26, x26, #0x10
    7f40:	str	w9, [x21, #8]
    7f44:	add	x21, x21, #0x10
    7f48:	b.gt	7f28 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x1f8>
    7f4c:	sub	x8, x24, x25
    7f50:	cmp	x8, #0x1
    7f54:	b.lt	7e8c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x15c>  // b.tstop
    7f58:	lsr	x8, x8, #4
    7f5c:	add	x8, x8, #0x1
    7f60:	ldr	x9, [x25]
    7f64:	sub	x8, x8, #0x1
    7f68:	cmp	x8, #0x1
    7f6c:	str	x9, [x21]
    7f70:	ldr	w9, [x25, #8]
    7f74:	add	x25, x25, #0x10
    7f78:	str	w9, [x21, #8]
    7f7c:	add	x21, x21, #0x10
    7f80:	b.gt	7f60 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x230>
    7f84:	b	7e8c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x15c>
    7f88:	sub	x8, x20, x24
    7f8c:	asr	x9, x8, #4
    7f90:	cmp	x9, x28
    7f94:	mov	x8, x24
    7f98:	b.lt	7dfc <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xcc>  // b.tstop
    7f9c:	lsl	x9, x28, #4
    7fa0:	add	x24, x8, x9
    7fa4:	cmp	x9, #0x1
    7fa8:	stur	x19, [x29, #-8]
    7fac:	b.lt	7f88 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x258>  // b.tstop
    7fb0:	lsr	x9, x9, #4
    7fb4:	add	x9, x9, #0x1
    7fb8:	ldr	x10, [x8]
    7fbc:	sub	x9, x9, #0x1
    7fc0:	cmp	x9, #0x1
    7fc4:	str	x10, [x21]
    7fc8:	ldr	w10, [x8, #8]
    7fcc:	add	x8, x8, #0x10
    7fd0:	str	w10, [x21, #8]
    7fd4:	add	x21, x21, #0x10
    7fd8:	b.gt	7fb8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x288>
    7fdc:	b	7f88 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x258>
    7fe0:	mov	x25, x27
    7fe4:	mov	x26, x27
    7fe8:	sub	x8, x27, x24
    7fec:	cmp	x8, #0x1
    7ff0:	b.lt	8020 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x2f0>  // b.tstop
    7ff4:	lsr	x8, x8, #4
    7ff8:	add	x8, x8, #0x1
    7ffc:	ldr	x9, [x26]
    8000:	sub	x8, x8, #0x1
    8004:	cmp	x8, #0x1
    8008:	str	x9, [x21]
    800c:	ldr	w9, [x26, #8]
    8010:	add	x26, x26, #0x10
    8014:	str	w9, [x21, #8]
    8018:	add	x21, x21, #0x10
    801c:	b.gt	7ffc <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x2cc>
    8020:	ldr	x24, [sp, #24]
    8024:	ldr	x26, [sp, #8]
    8028:	sub	x8, x20, x25
    802c:	cmp	x8, #0x1
    8030:	b.lt	8060 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x330>  // b.tstop
    8034:	lsr	x8, x8, #4
    8038:	add	x8, x8, #0x1
    803c:	ldr	x9, [x25]
    8040:	sub	x8, x8, #0x1
    8044:	cmp	x8, #0x1
    8048:	str	x9, [x21]
    804c:	ldr	w9, [x25, #8]
    8050:	add	x25, x25, #0x10
    8054:	str	w9, [x21, #8]
    8058:	add	x21, x21, #0x10
    805c:	b.gt	803c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x30c>
    8060:	ldr	x23, [sp, #16]
    8064:	ldur	x0, [x29, #-16]
    8068:	lsl	x21, x22, #2
    806c:	mov	x4, x24
    8070:	cmp	x23, x21
    8074:	mov	x8, x23
    8078:	b.lt	7dc0 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x90>  // b.tstop
    807c:	ldur	x0, [x29, #-16]
    8080:	lsl	x23, x22, #6
    8084:	lsl	x22, x22, #5
    8088:	mov	x4, x24
    808c:	add	x1, x0, x22
    8090:	add	x24, x0, x23
    8094:	mov	x2, x1
    8098:	mov	x3, x24
    809c:	mov	x5, x19
    80a0:	bl	8710 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>
    80a4:	sub	x8, x26, x24
    80a8:	asr	x8, x8, #4
    80ac:	mov	x4, x0
    80b0:	cmp	x8, x21
    80b4:	mov	x0, x24
    80b8:	b.ge	808c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x35c>  // b.tcont
    80bc:	ldp	x23, x24, [sp, #16]
    80c0:	b	7dc0 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x90>
    80c4:	mov	x1, x20
    80c8:	mov	x2, x19
    80cc:	ldp	x20, x19, [sp, #128]
    80d0:	ldp	x22, x21, [sp, #112]
    80d4:	ldp	x24, x23, [sp, #96]
    80d8:	ldp	x26, x25, [sp, #80]
    80dc:	ldp	x28, x27, [sp, #64]
    80e0:	ldp	x29, x30, [sp, #48]
    80e4:	add	sp, sp, #0x90
    80e8:	b	7328 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    80ec:	ldp	x20, x19, [sp, #128]
    80f0:	ldp	x22, x21, [sp, #112]
    80f4:	ldp	x24, x23, [sp, #96]
    80f8:	ldp	x26, x25, [sp, #80]
    80fc:	ldp	x28, x27, [sp, #64]
    8100:	ldp	x29, x30, [sp, #48]
    8104:	add	sp, sp, #0x90
    8108:	ret

000000000000810c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_>:
    810c:	sub	sp, sp, #0x80
    8110:	stp	x29, x30, [sp, #32]
    8114:	stp	x28, x27, [sp, #48]
    8118:	stp	x26, x25, [sp, #64]
    811c:	stp	x24, x23, [sp, #80]
    8120:	stp	x22, x21, [sp, #96]
    8124:	stp	x20, x19, [sp, #112]
    8128:	add	x29, sp, #0x20
    812c:	cmp	x3, x4
    8130:	mov	x19, x7
    8134:	mov	x27, x6
    8138:	mov	x22, x4
    813c:	mov	x28, x3
    8140:	mov	x24, x1
    8144:	cset	w8, gt
    8148:	cmp	x3, x6
    814c:	mov	x25, x0
    8150:	stur	x5, [x29, #-8]
    8154:	str	x2, [sp, #8]
    8158:	b.gt	8170 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x64>
    815c:	cmp	x28, x22
    8160:	b.gt	8170 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x64>
    8164:	mov	x6, x25
    8168:	mov	x26, x24
    816c:	b	8278 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x16c>
    8170:	mov	x6, x25
    8174:	str	x19, [sp, #16]
    8178:	cmp	x22, x27
    817c:	b.le	8430 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x324>
    8180:	tbz	w8, #0, 81bc <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0xb0>
    8184:	cmp	x28, #0x0
    8188:	cinc	x8, x28, lt  // lt = tstop
    818c:	asr	x21, x8, #1
    8190:	mov	x4, x19
    8194:	add	x19, x6, x21, lsl #4
    8198:	ldr	x2, [x19]
    819c:	ldr	w3, [x19, #8]
    81a0:	ldr	x1, [sp, #8]
    81a4:	mov	x0, x24
    81a8:	bl	78e0 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    81ac:	sub	x8, x0, x24
    81b0:	mov	x26, x0
    81b4:	asr	x20, x8, #4
    81b8:	b	81f0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0xe4>
    81bc:	cmp	x22, #0x0
    81c0:	cinc	x8, x22, lt  // lt = tstop
    81c4:	asr	x20, x8, #1
    81c8:	add	x26, x24, x20, lsl #4
    81cc:	ldr	x2, [x26]
    81d0:	ldr	w3, [x26, #8]
    81d4:	mov	x0, x25
    81d8:	mov	x1, x24
    81dc:	mov	x4, x19
    81e0:	bl	7b40 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    81e4:	sub	x8, x0, x25
    81e8:	mov	x19, x0
    81ec:	asr	x21, x8, #4
    81f0:	mov	x1, x24
    81f4:	ldur	x24, [x29, #-8]
    81f8:	sub	x28, x28, x21
    81fc:	mov	x0, x19
    8200:	mov	x2, x26
    8204:	mov	x3, x28
    8208:	mov	x4, x20
    820c:	mov	x5, x24
    8210:	mov	x6, x27
    8214:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8218:	mov	x1, x19
    821c:	ldr	x19, [sp, #16]
    8220:	mov	x23, x0
    8224:	mov	x0, x25
    8228:	mov	x2, x23
    822c:	mov	x3, x21
    8230:	mov	x4, x20
    8234:	mov	x5, x24
    8238:	mov	x6, x27
    823c:	mov	x7, x19
    8240:	bl	810c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_>
    8244:	sub	x22, x22, x20
    8248:	cmp	x28, x22
    824c:	mov	x6, x23
    8250:	cset	w8, gt
    8254:	cmp	x28, x27
    8258:	mov	x24, x26
    825c:	mov	x25, x23
    8260:	b.gt	8178 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x6c>
    8264:	cmp	x28, x22
    8268:	mov	x24, x26
    826c:	mov	x25, x6
    8270:	b.gt	8178 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x6c>
    8274:	mov	x25, x6
    8278:	ldur	x2, [x29, #-8]
    827c:	ldr	x3, [sp, #8]
    8280:	sub	x9, x26, x6
    8284:	cmp	x9, #0x1
    8288:	b.lt	86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>  // b.tstop
    828c:	lsr	x9, x9, #4
    8290:	mov	x8, xzr
    8294:	add	x9, x9, #0x1
    8298:	add	x10, x25, x8
    829c:	ldr	x11, [x10]
    82a0:	add	x12, x2, x8
    82a4:	sub	x9, x9, #0x1
    82a8:	cmp	x9, #0x1
    82ac:	str	x11, [x12]
    82b0:	ldr	w10, [x10, #8]
    82b4:	add	x8, x8, #0x10
    82b8:	str	w10, [x12, #8]
    82bc:	b.gt	8298 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x18c>
    82c0:	cbz	x8, 86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>
    82c4:	add	x9, x2, x8
    82c8:	neg	x10, x2
    82cc:	b	82f0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x1e4>
    82d0:	ldr	w13, [x2, #8]
    82d4:	add	x2, x2, #0x10
    82d8:	str	x11, [x6]
    82dc:	str	w13, [x6, #8]
    82e0:	add	x11, x2, x10
    82e4:	cmp	x11, x8
    82e8:	add	x6, x6, #0x10
    82ec:	b.eq	86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>  // b.none
    82f0:	cmp	x26, x3
    82f4:	b.eq	85f8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4ec>  // b.none
    82f8:	ldr	x12, [x26]
    82fc:	ldr	x11, [x2]
    8300:	ldr	x15, [x12]
    8304:	ldr	x14, [x11]
    8308:	cmp	x15, x14
    830c:	b.eq	8374 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x268>  // b.none
    8310:	ldr	w12, [x19, #48]
    8314:	ldr	x13, [x19, #32]
    8318:	cbz	w12, 8388 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x27c>
    831c:	orr	x16, x15, #0x8
    8320:	cmn	x16, #0x8
    8324:	b.eq	86d0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5c4>  // b.none
    8328:	ubfx	x16, x15, #4, #28
    832c:	eor	w17, w16, w15, lsr #9
    8330:	sub	w16, w12, #0x1
    8334:	and	w17, w16, w17
    8338:	add	x18, x13, w17, uxtw #4
    833c:	ldr	x0, [x18]
    8340:	cmp	x0, x15
    8344:	b.eq	838c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x280>  // b.none
    8348:	mov	w1, #0x1                   	// #1
    834c:	cmn	x0, #0x8
    8350:	b.eq	8388 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x27c>  // b.none
    8354:	add	w17, w17, w1
    8358:	and	w17, w17, w16
    835c:	add	x18, x13, w17, uxtw #4
    8360:	ldr	x0, [x18]
    8364:	add	w1, w1, #0x1
    8368:	cmp	x0, x15
    836c:	b.eq	838c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x280>  // b.none
    8370:	b	834c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x240>
    8374:	ldr	w12, [x26, #8]
    8378:	ldr	w13, [x2, #8]
    837c:	cmp	w12, w13
    8380:	b.ls	82d4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x1c8>  // b.plast
    8384:	b	8420 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x314>
    8388:	add	x18, x13, x12, lsl #4
    838c:	add	x15, x13, x12, lsl #4
    8390:	cmp	x18, x15
    8394:	b.eq	86f0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5e4>  // b.none
    8398:	ldr	w15, [x18, #8]
    839c:	cbz	w12, 83f8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2ec>
    83a0:	orr	x16, x14, #0x8
    83a4:	cmn	x16, #0x8
    83a8:	b.eq	86d0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5c4>  // b.none
    83ac:	ubfx	x16, x14, #4, #28
    83b0:	eor	w17, w16, w14, lsr #9
    83b4:	sub	w16, w12, #0x1
    83b8:	and	w17, w16, w17
    83bc:	add	x18, x13, w17, uxtw #4
    83c0:	ldr	x0, [x18]
    83c4:	cmp	x0, x14
    83c8:	b.eq	83fc <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2f0>  // b.none
    83cc:	mov	w1, #0x1                   	// #1
    83d0:	cmn	x0, #0x8
    83d4:	b.eq	83f8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2ec>  // b.none
    83d8:	add	w17, w17, w1
    83dc:	and	w17, w17, w16
    83e0:	add	x18, x13, w17, uxtw #4
    83e4:	ldr	x0, [x18]
    83e8:	add	w1, w1, #0x1
    83ec:	cmp	x0, x14
    83f0:	b.eq	83fc <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2f0>  // b.none
    83f4:	b	83d0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2c4>
    83f8:	add	x18, x13, x12, lsl #4
    83fc:	add	x12, x13, x12, lsl #4
    8400:	cmp	x18, x12
    8404:	b.eq	86f0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5e4>  // b.none
    8408:	ldr	w12, [x18, #8]
    840c:	sub	w13, w15, #0x1
    8410:	sub	w12, w12, #0x1
    8414:	cmp	w13, w12
    8418:	b.cs	82d0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x1c4>  // b.hs, b.nlast
    841c:	ldr	w12, [x26, #8]
    8420:	ldr	x11, [x26], #16
    8424:	str	w12, [x6, #8]
    8428:	str	x11, [x6]
    842c:	b	82e0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x1d4>
    8430:	ldr	x2, [sp, #8]
    8434:	ldur	x1, [x29, #-8]
    8438:	sub	x9, x2, x24
    843c:	cmp	x9, #0x1
    8440:	mov	x8, x1
    8444:	b.lt	847c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x370>  // b.tstop
    8448:	lsr	x8, x9, #4
    844c:	add	x9, x8, #0x1
    8450:	mov	x8, x1
    8454:	mov	x10, x24
    8458:	ldr	x11, [x10]
    845c:	sub	x9, x9, #0x1
    8460:	cmp	x9, #0x1
    8464:	str	x11, [x8]
    8468:	ldr	w11, [x10, #8]
    846c:	add	x10, x10, #0x10
    8470:	str	w11, [x8, #8]
    8474:	add	x8, x8, #0x10
    8478:	b.gt	8458 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x34c>
    847c:	cmp	x6, x24
    8480:	b.eq	8634 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x528>  // b.none
    8484:	cmp	x8, x1
    8488:	b.eq	86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>  // b.none
    848c:	sub	x9, x24, #0x10
    8490:	b	84a8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x39c>
    8494:	ldr	w11, [x8, #8]
    8498:	str	x10, [x2, #-16]!
    849c:	cmp	x8, x1
    84a0:	str	w11, [x2, #8]
    84a4:	b.eq	86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>  // b.none
    84a8:	sub	x8, x8, #0x10
    84ac:	ldr	x10, [x8]
    84b0:	ldr	x11, [x9]
    84b4:	ldr	x14, [x10]
    84b8:	ldr	x13, [x11]
    84bc:	cmp	x14, x13
    84c0:	b.eq	8528 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x41c>  // b.none
    84c4:	ldr	w11, [x19, #48]
    84c8:	ldr	x12, [x19, #32]
    84cc:	cbz	w11, 853c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x430>
    84d0:	orr	x15, x14, #0x8
    84d4:	cmn	x15, #0x8
    84d8:	b.eq	86d0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5c4>  // b.none
    84dc:	ubfx	x15, x14, #4, #28
    84e0:	eor	w16, w15, w14, lsr #9
    84e4:	sub	w15, w11, #0x1
    84e8:	and	w16, w15, w16
    84ec:	add	x17, x12, w16, uxtw #4
    84f0:	ldr	x18, [x17]
    84f4:	cmp	x18, x14
    84f8:	b.eq	8540 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x434>  // b.none
    84fc:	mov	w0, #0x1                   	// #1
    8500:	cmn	x18, #0x8
    8504:	b.eq	853c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x430>  // b.none
    8508:	add	w16, w16, w0
    850c:	and	w16, w16, w15
    8510:	add	x17, x12, w16, uxtw #4
    8514:	ldr	x18, [x17]
    8518:	add	w0, w0, #0x1
    851c:	cmp	x18, x14
    8520:	b.eq	8540 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x434>  // b.none
    8524:	b	8500 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x3f4>
    8528:	ldr	w11, [x8, #8]
    852c:	ldr	w12, [x9, #8]
    8530:	cmp	w11, w12
    8534:	b.ls	8498 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x38c>  // b.plast
    8538:	b	85d4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4c8>
    853c:	add	x17, x12, x11, lsl #4
    8540:	add	x14, x12, x11, lsl #4
    8544:	cmp	x17, x14
    8548:	b.eq	86f0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5e4>  // b.none
    854c:	ldr	w14, [x17, #8]
    8550:	cbz	w11, 85ac <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4a0>
    8554:	orr	x15, x13, #0x8
    8558:	cmn	x15, #0x8
    855c:	b.eq	86d0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5c4>  // b.none
    8560:	ubfx	x15, x13, #4, #28
    8564:	eor	w16, w15, w13, lsr #9
    8568:	sub	w15, w11, #0x1
    856c:	and	w16, w15, w16
    8570:	add	x17, x12, w16, uxtw #4
    8574:	ldr	x18, [x17]
    8578:	cmp	x18, x13
    857c:	b.eq	85b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4a4>  // b.none
    8580:	mov	w0, #0x1                   	// #1
    8584:	cmn	x18, #0x8
    8588:	b.eq	85ac <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4a0>  // b.none
    858c:	add	w16, w16, w0
    8590:	and	w16, w16, w15
    8594:	add	x17, x12, w16, uxtw #4
    8598:	ldr	x18, [x17]
    859c:	add	w0, w0, #0x1
    85a0:	cmp	x18, x13
    85a4:	b.eq	85b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4a4>  // b.none
    85a8:	b	8584 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x478>
    85ac:	add	x17, x12, x11, lsl #4
    85b0:	add	x11, x12, x11, lsl #4
    85b4:	cmp	x17, x11
    85b8:	b.eq	86f0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5e4>  // b.none
    85bc:	ldr	w11, [x17, #8]
    85c0:	sub	w12, w14, #0x1
    85c4:	sub	w11, w11, #0x1
    85c8:	cmp	w12, w11
    85cc:	b.cs	8494 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x388>  // b.hs, b.nlast
    85d0:	ldr	w12, [x9, #8]
    85d4:	ldr	x11, [x9]
    85d8:	mov	x10, x2
    85dc:	cmp	x6, x9
    85e0:	str	x11, [x10, #-16]!
    85e4:	str	w12, [x10, #8]
    85e8:	b.eq	8670 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x564>  // b.none
    85ec:	sub	x9, x9, #0x10
    85f0:	mov	x2, x10
    85f4:	b	84ac <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x3a0>
    85f8:	sub	x8, x9, x2
    85fc:	cmp	x8, #0x1
    8600:	b.lt	86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>  // b.tstop
    8604:	lsr	x8, x8, #4
    8608:	add	x8, x8, #0x1
    860c:	ldr	x9, [x2]
    8610:	sub	x8, x8, #0x1
    8614:	cmp	x8, #0x1
    8618:	str	x9, [x6]
    861c:	ldr	w9, [x2, #8]
    8620:	add	x2, x2, #0x10
    8624:	str	w9, [x6, #8]
    8628:	add	x6, x6, #0x10
    862c:	b.gt	860c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x500>
    8630:	b	86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>
    8634:	sub	x9, x8, x1
    8638:	cmp	x9, #0x1
    863c:	b.lt	86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>  // b.tstop
    8640:	lsr	x10, x9, #4
    8644:	sub	x9, x2, #0x8
    8648:	add	x10, x10, #0x1
    864c:	sub	x8, x8, #0x8
    8650:	ldur	x11, [x8, #-8]
    8654:	sub	x10, x10, #0x1
    8658:	cmp	x10, #0x1
    865c:	stur	x11, [x9, #-8]
    8660:	ldr	w11, [x8], #-16
    8664:	str	w11, [x9], #-16
    8668:	b.gt	8650 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x544>
    866c:	b	86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>
    8670:	sub	x9, x8, x1
    8674:	add	x9, x9, #0x10
    8678:	cmp	x9, #0x1
    867c:	b.lt	86b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a4>  // b.tstop
    8680:	lsr	x10, x9, #4
    8684:	sub	x9, x2, #0x20
    8688:	add	x10, x10, #0x1
    868c:	add	x8, x8, #0x8
    8690:	ldur	x11, [x8, #-8]
    8694:	sub	x10, x10, #0x1
    8698:	cmp	x10, #0x1
    869c:	str	x11, [x9]
    86a0:	ldr	w11, [x8], #-16
    86a4:	str	w11, [x9, #8]
    86a8:	sub	x9, x9, #0x10
    86ac:	b.gt	8690 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x584>
    86b0:	ldp	x20, x19, [sp, #112]
    86b4:	ldp	x22, x21, [sp, #96]
    86b8:	ldp	x24, x23, [sp, #80]
    86bc:	ldp	x26, x25, [sp, #64]
    86c0:	ldp	x28, x27, [sp, #48]
    86c4:	ldp	x29, x30, [sp, #32]
    86c8:	add	sp, sp, #0x80
    86cc:	ret
    86d0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    86d4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    86d8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    86dc:	add	x0, x0, #0x0
    86e0:	add	x1, x1, #0x0
    86e4:	add	x3, x3, #0x0
    86e8:	mov	w2, #0x252                 	// #594
    86ec:	bl	0 <__assert_fail>
    86f0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    86f4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    86f8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    86fc:	add	x0, x0, #0x0
    8700:	add	x1, x1, #0x0
    8704:	add	x3, x3, #0x0
    8708:	mov	w2, #0xa9                  	// #169
    870c:	bl	0 <__assert_fail>

0000000000008710 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>:
    8710:	stp	x29, x30, [sp, #-16]!
    8714:	mov	x29, sp
    8718:	cmp	x2, x3
    871c:	b.ne	8740 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x30>  // b.any
    8720:	b	8888 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x178>
    8724:	ldr	w11, [x0, #8]
    8728:	add	x0, x0, #0x10
    872c:	str	x9, [x4]
    8730:	str	w11, [x4, #8]
    8734:	cmp	x2, x3
    8738:	add	x4, x4, #0x10
    873c:	b.eq	8888 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x178>  // b.none
    8740:	cmp	x0, x1
    8744:	b.eq	8888 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x178>  // b.none
    8748:	ldr	x8, [x2]
    874c:	ldr	x9, [x0]
    8750:	ldr	x13, [x8]
    8754:	ldr	x12, [x9]
    8758:	cmp	x13, x12
    875c:	b.eq	87c4 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xb4>  // b.none
    8760:	ldr	w10, [x5, #48]
    8764:	ldr	x11, [x5, #32]
    8768:	cbz	w10, 87d8 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xc8>
    876c:	orr	x14, x13, #0x8
    8770:	cmn	x14, #0x8
    8774:	b.eq	8904 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1f4>  // b.none
    8778:	ubfx	x14, x13, #4, #28
    877c:	eor	w15, w14, w13, lsr #9
    8780:	sub	w14, w10, #0x1
    8784:	and	w15, w14, w15
    8788:	add	x16, x11, w15, uxtw #4
    878c:	ldr	x17, [x16]
    8790:	cmp	x17, x13
    8794:	b.eq	87dc <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xcc>  // b.none
    8798:	mov	w18, #0x1                   	// #1
    879c:	cmn	x17, #0x8
    87a0:	b.eq	87d8 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xc8>  // b.none
    87a4:	add	w15, w15, w18
    87a8:	and	w15, w15, w14
    87ac:	add	x16, x11, w15, uxtw #4
    87b0:	ldr	x17, [x16]
    87b4:	add	w18, w18, #0x1
    87b8:	cmp	x17, x13
    87bc:	b.eq	87dc <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xcc>  // b.none
    87c0:	b	879c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x8c>
    87c4:	ldr	w10, [x2, #8]
    87c8:	ldr	w11, [x0, #8]
    87cc:	cmp	w10, w11
    87d0:	b.ls	8728 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x18>  // b.plast
    87d4:	b	8870 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x160>
    87d8:	add	x16, x11, x10, lsl #4
    87dc:	add	x13, x11, x10, lsl #4
    87e0:	cmp	x16, x13
    87e4:	b.eq	8924 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x214>  // b.none
    87e8:	ldr	w13, [x16, #8]
    87ec:	cbz	w10, 8848 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x138>
    87f0:	orr	x14, x12, #0x8
    87f4:	cmn	x14, #0x8
    87f8:	b.eq	8904 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1f4>  // b.none
    87fc:	ubfx	x14, x12, #4, #28
    8800:	eor	w15, w14, w12, lsr #9
    8804:	sub	w14, w10, #0x1
    8808:	and	w15, w14, w15
    880c:	add	x16, x11, w15, uxtw #4
    8810:	ldr	x17, [x16]
    8814:	cmp	x17, x12
    8818:	b.eq	884c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x13c>  // b.none
    881c:	mov	w18, #0x1                   	// #1
    8820:	cmn	x17, #0x8
    8824:	b.eq	8848 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x138>  // b.none
    8828:	add	w15, w15, w18
    882c:	and	w15, w15, w14
    8830:	add	x16, x11, w15, uxtw #4
    8834:	ldr	x17, [x16]
    8838:	add	w18, w18, #0x1
    883c:	cmp	x17, x12
    8840:	b.eq	884c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x13c>  // b.none
    8844:	b	8820 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x110>
    8848:	add	x16, x11, x10, lsl #4
    884c:	add	x10, x11, x10, lsl #4
    8850:	cmp	x16, x10
    8854:	b.eq	8924 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x214>  // b.none
    8858:	ldr	w10, [x16, #8]
    885c:	sub	w11, w13, #0x1
    8860:	sub	w10, w10, #0x1
    8864:	cmp	w11, w10
    8868:	b.cs	8724 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x14>  // b.hs, b.nlast
    886c:	ldr	w10, [x2, #8]
    8870:	str	x8, [x4]
    8874:	str	w10, [x4, #8]
    8878:	add	x2, x2, #0x10
    887c:	cmp	x2, x3
    8880:	add	x4, x4, #0x10
    8884:	b.ne	8740 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x30>  // b.any
    8888:	sub	x8, x1, x0
    888c:	cmp	x8, #0x1
    8890:	b.lt	88c0 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1b0>  // b.tstop
    8894:	lsr	x8, x8, #4
    8898:	add	x8, x8, #0x1
    889c:	ldr	x9, [x0]
    88a0:	sub	x8, x8, #0x1
    88a4:	cmp	x8, #0x1
    88a8:	str	x9, [x4]
    88ac:	ldr	w9, [x0, #8]
    88b0:	add	x0, x0, #0x10
    88b4:	str	w9, [x4, #8]
    88b8:	add	x4, x4, #0x10
    88bc:	b.gt	889c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x18c>
    88c0:	sub	x8, x3, x2
    88c4:	cmp	x8, #0x1
    88c8:	b.lt	88f8 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1e8>  // b.tstop
    88cc:	lsr	x8, x8, #4
    88d0:	add	x8, x8, #0x1
    88d4:	ldr	x9, [x2]
    88d8:	sub	x8, x8, #0x1
    88dc:	cmp	x8, #0x1
    88e0:	str	x9, [x4]
    88e4:	ldr	w9, [x2, #8]
    88e8:	add	x2, x2, #0x10
    88ec:	str	w9, [x4, #8]
    88f0:	add	x4, x4, #0x10
    88f4:	b.gt	88d4 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1c4>
    88f8:	mov	x0, x4
    88fc:	ldp	x29, x30, [sp], #16
    8900:	ret
    8904:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8908:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    890c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8910:	add	x0, x0, #0x0
    8914:	add	x1, x1, #0x0
    8918:	add	x3, x3, #0x0
    891c:	mov	w2, #0x252                 	// #594
    8920:	bl	0 <__assert_fail>
    8924:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8928:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    892c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8930:	add	x0, x0, #0x0
    8934:	add	x1, x1, #0x0
    8938:	add	x3, x3, #0x0
    893c:	mov	w2, #0xa9                  	// #169
    8940:	bl	0 <__assert_fail>

0000000000008944 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_>:
    8944:	sub	sp, sp, #0x70
    8948:	stp	x29, x30, [sp, #16]
    894c:	stp	x28, x27, [sp, #32]
    8950:	stp	x26, x25, [sp, #48]
    8954:	stp	x24, x23, [sp, #64]
    8958:	stp	x22, x21, [sp, #80]
    895c:	stp	x20, x19, [sp, #96]
    8960:	add	x29, sp, #0x10
    8964:	sub	x24, x1, x0
    8968:	cmp	x24, #0x81
    896c:	b.lt	8c7c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x338>  // b.tstop
    8970:	mov	x19, x3
    8974:	mov	x21, x1
    8978:	mov	x20, x0
    897c:	mov	x22, x2
    8980:	add	x25, x0, #0x8
    8984:	b	89ac <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x68>
    8988:	mov	x0, x23
    898c:	mov	x1, x21
    8990:	mov	x2, x22
    8994:	mov	x3, x19
    8998:	bl	8944 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_>
    899c:	sub	x24, x23, x20
    89a0:	cmp	x24, #0x80
    89a4:	mov	x21, x23
    89a8:	b.le	8c7c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x338>
    89ac:	cbz	x22, 8acc <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x188>
    89b0:	lsr	x23, x24, #4
    89b4:	ldr	x1, [x20, #8]
    89b8:	ldr	x2, [x20, x23, lsl #3]
    89bc:	mov	x0, x19
    89c0:	sub	x22, x22, #0x1
    89c4:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    89c8:	tbz	w0, #0, 89f8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0xb4>
    89cc:	ldr	x1, [x20, x23, lsl #3]
    89d0:	ldur	x2, [x21, #-8]
    89d4:	mov	x0, x19
    89d8:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    89dc:	tbz	w0, #0, 8a1c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0xd8>
    89e0:	lsl	x8, x23, #3
    89e4:	ldr	x9, [x20, x8]
    89e8:	ldr	x10, [x20]
    89ec:	str	x9, [x20]
    89f0:	str	x10, [x20, x8]
    89f4:	b	8a78 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x134>
    89f8:	ldr	x1, [x25]
    89fc:	ldur	x2, [x21, #-8]
    8a00:	mov	x0, x19
    8a04:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8a08:	tbz	w0, #0, 8a40 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0xfc>
    8a0c:	ldr	q0, [x20]
    8a10:	ext	v0.16b, v0.16b, v0.16b, #8
    8a14:	str	q0, [x20]
    8a18:	b	8a78 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x134>
    8a1c:	ldr	x1, [x20, #8]
    8a20:	ldur	x2, [x21, #-8]
    8a24:	mov	x0, x19
    8a28:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8a2c:	ldr	x8, [x20]
    8a30:	tbnz	w0, #0, 8a58 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x114>
    8a34:	ldr	x9, [x20, #8]
    8a38:	stp	x9, x8, [x20]
    8a3c:	b	8a78 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x134>
    8a40:	ldr	x1, [x20, x23, lsl #3]
    8a44:	ldur	x2, [x21, #-8]
    8a48:	mov	x0, x19
    8a4c:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8a50:	ldr	x8, [x20]
    8a54:	tbz	w0, #0, 8a68 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x124>
    8a58:	ldur	x9, [x21, #-8]
    8a5c:	str	x9, [x20]
    8a60:	stur	x8, [x21, #-8]
    8a64:	b	8a78 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x134>
    8a68:	lsl	x9, x23, #3
    8a6c:	ldr	x10, [x20, x9]
    8a70:	str	x10, [x20]
    8a74:	str	x8, [x20, x9]
    8a78:	mov	x24, x21
    8a7c:	mov	x26, x25
    8a80:	sub	x23, x26, #0x8
    8a84:	ldr	x1, [x23, #8]!
    8a88:	ldr	x2, [x20]
    8a8c:	mov	x0, x19
    8a90:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8a94:	tbnz	w0, #0, 8a84 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x140>
    8a98:	add	x26, x23, #0x8
    8a9c:	ldr	x2, [x24, #-8]!
    8aa0:	ldr	x1, [x20]
    8aa4:	mov	x0, x19
    8aa8:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8aac:	tbnz	w0, #0, 8a9c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x158>
    8ab0:	cmp	x23, x24
    8ab4:	b.cs	8988 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x44>  // b.hs, b.nlast
    8ab8:	ldr	x8, [x24]
    8abc:	ldr	x9, [x23]
    8ac0:	str	x8, [x23]
    8ac4:	str	x9, [x24]
    8ac8:	b	8a80 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x13c>
    8acc:	lsr	x8, x24, #3
    8ad0:	sub	x9, x8, #0x2
    8ad4:	sub	x10, x8, #0x1
    8ad8:	cmp	x9, #0x0
    8adc:	csel	x9, x10, x9, lt  // lt = tstop
    8ae0:	cmp	x10, #0x0
    8ae4:	csel	x8, x8, x10, lt  // lt = tstop
    8ae8:	asr	x25, x9, #1
    8aec:	asr	x23, x8, #1
    8af0:	str	x21, [sp, #8]
    8af4:	tbnz	w24, #3, 8bd8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x294>
    8af8:	mov	w8, #0x1                   	// #1
    8afc:	bfi	x8, x25, #1, #63
    8b00:	str	x8, [sp]
    8b04:	mov	x8, x25
    8b08:	b	8b1c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1d8>
    8b0c:	mov	x27, x28
    8b10:	sub	x8, x26, #0x1
    8b14:	str	x22, [x20, x27, lsl #3]
    8b18:	cbz	x26, 8c70 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x32c>
    8b1c:	ldr	x22, [x20, x8, lsl #3]
    8b20:	mov	x26, x8
    8b24:	cmp	x23, x8
    8b28:	mov	x28, x8
    8b2c:	b.le	8b70 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x22c>
    8b30:	mov	x27, x26
    8b34:	lsl	x8, x27, #1
    8b38:	mov	w28, #0x1                   	// #1
    8b3c:	add	x21, x8, #0x2
    8b40:	bfi	x28, x27, #1, #63
    8b44:	ldr	x1, [x20, x21, lsl #3]
    8b48:	ldr	x2, [x20, x28, lsl #3]
    8b4c:	mov	x0, x19
    8b50:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8b54:	tst	w0, #0x1
    8b58:	csel	x28, x28, x21, ne  // ne = any
    8b5c:	ldr	x8, [x20, x28, lsl #3]
    8b60:	cmp	x28, x23
    8b64:	str	x8, [x20, x27, lsl #3]
    8b68:	mov	x27, x28
    8b6c:	b.lt	8b34 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1f0>  // b.tstop
    8b70:	cmp	x28, x25
    8b74:	b.ne	8b84 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x240>  // b.any
    8b78:	ldr	x28, [sp]
    8b7c:	ldr	x8, [x20, x28, lsl #3]
    8b80:	str	x8, [x20, x25, lsl #3]
    8b84:	cmp	x28, x26
    8b88:	b.le	8b0c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1c8>
    8b8c:	sub	x8, x28, #0x1
    8b90:	cmp	x8, #0x0
    8b94:	csel	x8, x28, x8, lt  // lt = tstop
    8b98:	asr	x27, x8, #1
    8b9c:	ldr	x1, [x20, x27, lsl #3]
    8ba0:	mov	x0, x19
    8ba4:	mov	x2, x22
    8ba8:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8bac:	tbz	w0, #0, 8b0c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1c8>
    8bb0:	ldr	x8, [x20, x27, lsl #3]
    8bb4:	cmp	x27, x26
    8bb8:	str	x8, [x20, x28, lsl #3]
    8bbc:	mov	x28, x27
    8bc0:	b.gt	8b8c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x248>
    8bc4:	b	8b10 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1cc>
    8bc8:	mov	x27, x25
    8bcc:	sub	x25, x26, #0x1
    8bd0:	str	x22, [x20, x27, lsl #3]
    8bd4:	cbz	x26, 8c70 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x32c>
    8bd8:	ldr	x22, [x20, x25, lsl #3]
    8bdc:	mov	x26, x25
    8be0:	cmp	x23, x25
    8be4:	mov	x27, x25
    8be8:	b.le	8bcc <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x288>
    8bec:	mov	x25, x26
    8bf0:	mov	x21, x25
    8bf4:	lsl	x8, x25, #1
    8bf8:	mov	w25, #0x1                   	// #1
    8bfc:	add	x27, x8, #0x2
    8c00:	bfi	x25, x21, #1, #63
    8c04:	ldr	x1, [x20, x27, lsl #3]
    8c08:	ldr	x2, [x20, x25, lsl #3]
    8c0c:	mov	x0, x19
    8c10:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8c14:	tst	w0, #0x1
    8c18:	csel	x25, x25, x27, ne  // ne = any
    8c1c:	ldr	x8, [x20, x25, lsl #3]
    8c20:	cmp	x25, x23
    8c24:	str	x8, [x20, x21, lsl #3]
    8c28:	b.lt	8bf0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x2ac>  // b.tstop
    8c2c:	cmp	x25, x26
    8c30:	b.le	8bc8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x284>
    8c34:	sub	x8, x25, #0x1
    8c38:	cmp	x8, #0x0
    8c3c:	csel	x8, x25, x8, lt  // lt = tstop
    8c40:	asr	x27, x8, #1
    8c44:	ldr	x1, [x20, x27, lsl #3]
    8c48:	mov	x0, x19
    8c4c:	mov	x2, x22
    8c50:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8c54:	tbz	w0, #0, 8bc8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x284>
    8c58:	ldr	x8, [x20, x27, lsl #3]
    8c5c:	cmp	x27, x26
    8c60:	str	x8, [x20, x25, lsl #3]
    8c64:	mov	x25, x27
    8c68:	b.gt	8c34 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x2f0>
    8c6c:	b	8bcc <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x288>
    8c70:	ldr	x21, [sp, #8]
    8c74:	cmp	x24, #0x9
    8c78:	b.ge	8cac <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x368>  // b.tcont
    8c7c:	ldp	x20, x19, [sp, #96]
    8c80:	ldp	x22, x21, [sp, #80]
    8c84:	ldp	x24, x23, [sp, #64]
    8c88:	ldp	x26, x25, [sp, #48]
    8c8c:	ldp	x28, x27, [sp, #32]
    8c90:	ldp	x29, x30, [sp, #16]
    8c94:	add	sp, sp, #0x70
    8c98:	ret
    8c9c:	mov	x25, x24
    8ca0:	cmp	x23, #0x8
    8ca4:	str	x22, [x20, x25, lsl #3]
    8ca8:	b.le	8c7c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x338>
    8cac:	ldr	x22, [x21, #-8]!
    8cb0:	ldr	x9, [x20]
    8cb4:	sub	x23, x21, x20
    8cb8:	asr	x26, x23, #3
    8cbc:	sub	x25, x26, #0x1
    8cc0:	cmp	x25, #0x0
    8cc4:	csel	x8, x26, x25, lt  // lt = tstop
    8cc8:	cmp	x23, #0x11
    8ccc:	str	x9, [x21]
    8cd0:	str	x21, [sp, #8]
    8cd4:	b.lt	8d24 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x3e0>  // b.tstop
    8cd8:	mov	x28, xzr
    8cdc:	asr	x27, x8, #1
    8ce0:	lsl	x8, x28, #1
    8ce4:	mov	w21, #0x1                   	// #1
    8ce8:	add	x24, x8, #0x2
    8cec:	bfi	x21, x28, #1, #63
    8cf0:	ldr	x1, [x20, x24, lsl #3]
    8cf4:	ldr	x2, [x20, x21, lsl #3]
    8cf8:	mov	x0, x19
    8cfc:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8d00:	tst	w0, #0x1
    8d04:	csel	x24, x21, x24, ne  // ne = any
    8d08:	ldr	x8, [x20, x24, lsl #3]
    8d0c:	cmp	x24, x27
    8d10:	str	x8, [x20, x28, lsl #3]
    8d14:	mov	x28, x24
    8d18:	b.lt	8ce0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x39c>  // b.tstop
    8d1c:	tbz	w23, #3, 8d2c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x3e8>
    8d20:	b	8d54 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x410>
    8d24:	mov	x24, xzr
    8d28:	tbnz	w23, #3, 8d54 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x410>
    8d2c:	sub	x8, x26, #0x2
    8d30:	cmp	x8, #0x0
    8d34:	csel	x8, x25, x8, lt  // lt = tstop
    8d38:	cmp	x24, x8, asr #1
    8d3c:	b.ne	8d54 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x410>  // b.any
    8d40:	mov	w8, #0x1                   	// #1
    8d44:	bfi	x8, x24, #1, #63
    8d48:	ldr	x9, [x20, x8, lsl #3]
    8d4c:	str	x9, [x20, x24, lsl #3]
    8d50:	mov	x24, x8
    8d54:	ldr	x21, [sp, #8]
    8d58:	cmp	x24, #0x1
    8d5c:	b.lt	8c9c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x358>  // b.tstop
    8d60:	sub	x8, x24, #0x1
    8d64:	cmp	x8, #0x0
    8d68:	csel	x8, x24, x8, lt  // lt = tstop
    8d6c:	asr	x25, x8, #1
    8d70:	ldr	x1, [x20, x25, lsl #3]
    8d74:	mov	x0, x19
    8d78:	mov	x2, x22
    8d7c:	bl	8d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    8d80:	tbz	w0, #0, 8c9c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x358>
    8d84:	ldr	x8, [x20, x25, lsl #3]
    8d88:	cmp	x24, #0x2
    8d8c:	str	x8, [x20, x24, lsl #3]
    8d90:	mov	x24, x25
    8d94:	b.gt	8d60 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x41c>
    8d98:	b	8ca0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x35c>

0000000000008d9c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>:
    8d9c:	stp	x29, x30, [sp, #-16]!
    8da0:	mov	x29, sp
    8da4:	lsr	x8, x1, #32
    8da8:	cbz	w8, 8e70 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xd4>
    8dac:	ldp	x11, x9, [x0, #208]
    8db0:	sub	x9, x9, x11
    8db4:	asr	x12, x9, #3
    8db8:	cmp	x12, x8
    8dbc:	b.cc	8ef0 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x154>  // b.lo, b.ul, b.last
    8dc0:	sub	w9, w8, #0x1
    8dc4:	cmp	x12, x9
    8dc8:	b.ls	8f10 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x174>  // b.plast
    8dcc:	ldr	x10, [x11, x9, lsl #3]
    8dd0:	cbz	x10, 8f30 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x194>
    8dd4:	ldrb	w13, [x10]
    8dd8:	lsr	x9, x2, #32
    8ddc:	cbz	w13, 8df8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x5c>
    8de0:	sub	w13, w13, #0x4
    8de4:	cmp	w13, #0x1b
    8de8:	b.ls	8e58 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xbc>  // b.plast
    8dec:	mov	w10, #0x1                   	// #1
    8df0:	cbnz	w9, 8e00 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x64>
    8df4:	b	8e70 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xd4>
    8df8:	mov	w10, wzr
    8dfc:	cbz	w9, 8e70 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xd4>
    8e00:	cmp	x12, x9
    8e04:	b.cc	8ef0 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x154>  // b.lo, b.ul, b.last
    8e08:	sub	w13, w9, #0x1
    8e0c:	cmp	x12, x13
    8e10:	b.ls	8f10 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x174>  // b.plast
    8e14:	ldr	x11, [x11, x13, lsl #3]
    8e18:	cbz	x11, 8f30 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x194>
    8e1c:	ldrb	w12, [x11]
    8e20:	cbz	w12, 8e40 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xa4>
    8e24:	sub	w12, w12, #0x4
    8e28:	cmp	w12, #0x1b
    8e2c:	b.ls	8e90 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xf4>  // b.plast
    8e30:	mov	w11, #0x1                   	// #1
    8e34:	cmp	w1, w2
    8e38:	b.cc	8e4c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xb0>  // b.lo, b.ul, b.last
    8e3c:	b	8eac <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x110>
    8e40:	mov	w11, wzr
    8e44:	cmp	w1, w2
    8e48:	b.cs	8eac <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x110>  // b.hs, b.nlast
    8e4c:	mov	w0, #0x1                   	// #1
    8e50:	ldp	x29, x30, [sp], #16
    8e54:	ret
    8e58:	ldrb	w10, [x10, #1]
    8e5c:	and	w10, w10, #0x7f
    8e60:	cmp	w10, #0x1
    8e64:	mov	w10, #0x2                   	// #2
    8e68:	cinc	w10, w10, ne  // ne = any
    8e6c:	cbnz	w9, 8e00 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x64>
    8e70:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8e74:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8e78:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8e7c:	add	x0, x0, #0x0
    8e80:	add	x1, x1, #0x0
    8e84:	add	x3, x3, #0x0
    8e88:	mov	w2, #0x55                  	// #85
    8e8c:	bl	0 <__assert_fail>
    8e90:	ldrb	w11, [x11, #1]
    8e94:	and	w11, w11, #0x7f
    8e98:	cmp	w11, #0x1
    8e9c:	mov	w11, #0x2                   	// #2
    8ea0:	cinc	w11, w11, ne  // ne = any
    8ea4:	cmp	w1, w2
    8ea8:	b.cc	8e4c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xb0>  // b.lo, b.ul, b.last
    8eac:	cmp	w2, w1
    8eb0:	b.cs	8ec0 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x124>  // b.hs, b.nlast
    8eb4:	mov	w0, wzr
    8eb8:	ldp	x29, x30, [sp], #16
    8ebc:	ret
    8ec0:	cmp	w10, w11
    8ec4:	b.cs	8ed4 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x138>  // b.hs, b.nlast
    8ec8:	mov	w0, #0x1                   	// #1
    8ecc:	ldp	x29, x30, [sp], #16
    8ed0:	ret
    8ed4:	cmp	w11, w10
    8ed8:	cset	w10, cs  // cs = hs, nlast
    8edc:	cmp	w8, w9
    8ee0:	cset	w8, cc  // cc = lo, ul, last
    8ee4:	and	w0, w8, w10
    8ee8:	ldp	x29, x30, [sp], #16
    8eec:	ret
    8ef0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8ef4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8ef8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8efc:	add	x0, x0, #0x0
    8f00:	add	x1, x1, #0x0
    8f04:	add	x3, x3, #0x0
    8f08:	mov	w2, #0x56                  	// #86
    8f0c:	bl	0 <__assert_fail>
    8f10:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8f14:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8f18:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8f1c:	add	x0, x0, #0x0
    8f20:	add	x1, x1, #0x0
    8f24:	add	x3, x3, #0x0
    8f28:	mov	w2, #0xfa                  	// #250
    8f2c:	bl	0 <__assert_fail>
    8f30:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8f34:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8f38:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    8f3c:	add	x0, x0, #0x0
    8f40:	add	x1, x1, #0x0
    8f44:	add	x3, x3, #0x0
    8f48:	mov	w2, #0x69                  	// #105
    8f4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	x9, [x1, #8]
  a0:	str	x9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x26, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x26, x20
  28:	cmp	x8, x9
  2c:	b.eq	1d4 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1d4>  // b.none
  30:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  34:	asr	x9, x8, #3
  38:	movk	x10, #0xcccd
  3c:	cmp	x8, #0x0
  40:	mul	x9, x9, x10
  44:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  48:	csinc	x11, x9, xzr, ne  // ne = any
  4c:	movk	x8, #0x333, lsl #48
  50:	adds	x9, x11, x9
  54:	cset	w11, cs  // cs = hs, nlast
  58:	cmp	x9, x8
  5c:	cset	w12, hi  // hi = pmore
  60:	orr	w11, w11, w12
  64:	sub	x12, x1, x20
  68:	cmp	w11, #0x0
  6c:	csel	x27, x8, x9, ne  // ne = any
  70:	asr	x8, x12, #3
  74:	mov	x24, x4
  78:	mov	x23, x3
  7c:	mov	x25, x2
  80:	mov	x19, x0
  84:	mov	x21, x1
  88:	mul	x28, x8, x10
  8c:	cbz	x27, a4 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa4>
  90:	add	x8, x27, x27, lsl #2
  94:	lsl	x0, x8, #3
  98:	bl	0 <_Znwm>
  9c:	mov	x22, x0
  a0:	b	a8 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa8>
  a4:	mov	x22, xzr
  a8:	ldr	x24, [x24]
  ac:	ldr	x9, [x25]
  b0:	ldr	x10, [x23]
  b4:	mov	w8, #0x28                  	// #40
  b8:	madd	x8, x28, x8, x22
  bc:	lsr	x11, x24, #61
  c0:	stp	x9, x10, [x8]
  c4:	cbnz	x11, 1e0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1e0>
  c8:	add	x25, x8, #0x10
  cc:	lsl	x23, x24, #2
  d0:	stp	xzr, xzr, [x25]
  d4:	str	xzr, [x25, #16]
  d8:	cbz	x24, e8 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe8>
  dc:	mov	x0, x23
  e0:	bl	0 <_Znwm>
  e4:	b	ec <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>
  e8:	mov	x0, xzr
  ec:	mov	w8, #0x28                  	// #40
  f0:	str	x0, [x25]
  f4:	madd	x25, x28, x8, x22
  f8:	str	x0, [x25, #24]!
  fc:	add	x28, x0, x24, lsl #2
 100:	str	x28, [x25, #8]
 104:	cbz	x24, 118 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x118>
 108:	mov	w1, wzr
 10c:	mov	x2, x23
 110:	bl	0 <memset>
 114:	mov	x0, x28
 118:	cmp	x20, x21
 11c:	mov	x8, x22
 120:	str	x0, [x25]
 124:	b.eq	160 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x160>  // b.none
 128:	mov	x8, x22
 12c:	mov	x9, x20
 130:	ldr	q0, [x9]
 134:	str	q0, [x8]
 138:	ldr	q0, [x9, #16]
 13c:	str	q0, [x8, #16]
 140:	ldr	x10, [x9, #32]
 144:	str	x10, [x8, #32]
 148:	stp	xzr, xzr, [x9, #16]
 14c:	str	xzr, [x9, #32]
 150:	add	x9, x9, #0x28
 154:	cmp	x9, x21
 158:	add	x8, x8, #0x28
 15c:	b.ne	130 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x130>  // b.any
 160:	cmp	x26, x21
 164:	add	x23, x8, #0x28
 168:	b.eq	19c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x19c>  // b.none
 16c:	ldr	q0, [x21]
 170:	str	q0, [x23]
 174:	ldr	q0, [x21, #16]
 178:	str	q0, [x23, #16]
 17c:	ldr	x8, [x21, #32]
 180:	str	x8, [x23, #32]
 184:	stp	xzr, xzr, [x21, #16]
 188:	str	xzr, [x21, #32]
 18c:	add	x21, x21, #0x28
 190:	cmp	x21, x26
 194:	add	x23, x23, #0x28
 198:	b.ne	16c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x16c>  // b.any
 19c:	cbz	x20, 1a8 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1a8>
 1a0:	mov	x0, x20
 1a4:	bl	0 <_ZdlPv>
 1a8:	mov	w8, #0x28                  	// #40
 1ac:	madd	x8, x27, x8, x22
 1b0:	stp	x22, x23, [x19]
 1b4:	str	x8, [x19, #16]
 1b8:	ldp	x20, x19, [sp, #80]
 1bc:	ldp	x22, x21, [sp, #64]
 1c0:	ldp	x24, x23, [sp, #48]
 1c4:	ldp	x26, x25, [sp, #32]
 1c8:	ldp	x28, x27, [sp, #16]
 1cc:	ldp	x29, x30, [sp], #96
 1d0:	ret
 1d4:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 1d8:	add	x0, x0, #0x0
 1dc:	bl	0 <_ZSt20__throw_length_errorPKc>
 1e0:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 1e4:	add	x0, x0, #0x0
 1e8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag:

0000000000000000 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag>:
   0:	cmp	x0, x1
   4:	b.eq	64 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x64>  // b.none
   8:	subs	x10, x2, x1
   c:	b.eq	60 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x60>  // b.none
  10:	sub	x8, x2, x0
  14:	asr	x8, x8, #4
  18:	sub	x9, x1, x0
  1c:	cmp	x8, x9, asr #3
  20:	b.ne	6c <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x6c>  // b.any
  24:	mov	x8, x1
  28:	ldr	x9, [x8]
  2c:	ldr	x10, [x0]
  30:	str	x9, [x0]
  34:	str	x10, [x8]
  38:	ldr	w9, [x8, #8]
  3c:	ldr	w10, [x0, #8]
  40:	str	w9, [x0, #8]
  44:	add	x0, x0, #0x10
  48:	str	w10, [x8, #8]
  4c:	cmp	x1, x0
  50:	add	x8, x8, #0x10
  54:	b.ne	28 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x28>  // b.any
  58:	mov	x0, x1
  5c:	ret
  60:	mov	x2, x0
  64:	mov	x0, x2
  68:	ret
  6c:	asr	x9, x9, #4
  70:	add	x2, x0, x10
  74:	sub	x10, x8, x9
  78:	cmp	x9, x10
  7c:	b.ge	108 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x108>  // b.tcont
  80:	b	a8 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xa8>
  84:	add	x9, x0, x8, lsl #4
  88:	sub	x0, x9, x10, lsl #4
  8c:	sdiv	x9, x8, x10
  90:	msub	x9, x9, x10, x8
  94:	mov	x8, x10
  98:	cbz	x9, 64 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x64>
  9c:	sub	x10, x8, x9
  a0:	cmp	x9, x10
  a4:	b.ge	108 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x108>  // b.tcont
  a8:	cmp	x10, #0x1
  ac:	b.lt	e4 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xe4>  // b.tstop
  b0:	add	x11, x0, x9, lsl #4
  b4:	ldr	x12, [x11]
  b8:	ldr	x13, [x0]
  bc:	subs	x10, x10, #0x1
  c0:	str	x12, [x0]
  c4:	str	x13, [x11]
  c8:	ldr	w12, [x11, #8]
  cc:	ldr	w13, [x0, #8]
  d0:	str	w12, [x0, #8]
  d4:	str	w13, [x11, #8]
  d8:	add	x0, x0, #0x10
  dc:	add	x11, x11, #0x10
  e0:	b.ne	b4 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xb4>  // b.any
  e4:	sdiv	x10, x8, x9
  e8:	msub	x8, x10, x9, x8
  ec:	cbz	x8, 64 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x64>
  f0:	sub	x10, x9, x8
  f4:	mov	x8, x9
  f8:	mov	x9, x10
  fc:	sub	x10, x8, x9
 100:	cmp	x9, x10
 104:	b.lt	a8 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xa8>  // b.tstop
 108:	cmp	x9, #0x1
 10c:	b.lt	84 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x84>  // b.tstop
 110:	sub	x12, x0, #0x8
 114:	add	x11, x12, x8, lsl #4
 118:	add	x12, x12, x9, lsl #4
 11c:	ldur	x13, [x11, #-8]
 120:	ldur	x14, [x12, #-8]
 124:	sub	x9, x9, #0x1
 128:	stur	x13, [x12, #-8]
 12c:	stur	x14, [x11, #-8]
 130:	ldr	w13, [x11]
 134:	ldr	w14, [x12]
 138:	str	w13, [x12], #-16
 13c:	str	w14, [x11], #-16
 140:	cbnz	x9, 11c <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x11c>
 144:	b	8c <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x8c>

Disassembly of section .text._ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_:

0000000000000000 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_>:
   0:	cmp	x3, x4
   4:	b.le	cc <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xcc>
   8:	cmp	x4, x6
   c:	b.gt	cc <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xcc>
  10:	cbz	x4, 190 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x190>
  14:	sub	x9, x2, x1
  18:	cmp	x9, #0x1
  1c:	mov	x8, x5
  20:	b.lt	58 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x58>  // b.tstop
  24:	lsr	x8, x9, #4
  28:	add	x9, x8, #0x1
  2c:	mov	x8, x5
  30:	mov	x10, x1
  34:	ldr	x11, [x10]
  38:	sub	x9, x9, #0x1
  3c:	cmp	x9, #0x1
  40:	str	x11, [x8]
  44:	ldr	w11, [x10, #8]
  48:	add	x10, x10, #0x10
  4c:	str	w11, [x8, #8]
  50:	add	x8, x8, #0x10
  54:	b.gt	34 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x34>
  58:	sub	x9, x1, x0
  5c:	cmp	x9, #0x1
  60:	b.lt	90 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x90>  // b.tstop
  64:	lsr	x10, x9, #4
  68:	sub	x9, x2, #0x8
  6c:	add	x10, x10, #0x1
  70:	sub	x11, x1, #0x8
  74:	ldur	x12, [x11, #-8]
  78:	sub	x10, x10, #0x1
  7c:	cmp	x10, #0x1
  80:	stur	x12, [x9, #-8]
  84:	ldr	w12, [x11], #-16
  88:	str	w12, [x9], #-16
  8c:	b.gt	74 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x74>
  90:	sub	x8, x8, x5
  94:	cmp	x8, #0x1
  98:	b.lt	190 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x190>  // b.tstop
  9c:	lsr	x8, x8, #4
  a0:	add	x8, x8, #0x1
  a4:	ldr	x9, [x5]
  a8:	sub	x8, x8, #0x1
  ac:	cmp	x8, #0x1
  b0:	str	x9, [x0]
  b4:	ldr	w9, [x5, #8]
  b8:	add	x5, x5, #0x10
  bc:	str	w9, [x0, #8]
  c0:	add	x0, x0, #0x10
  c4:	b.gt	a4 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xa4>
  c8:	b	190 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x190>
  cc:	cmp	x3, x6
  d0:	b.le	d8 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xd8>
  d4:	b	0 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_>
  d8:	cbz	x3, 194 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x194>
  dc:	sub	x9, x1, x0
  e0:	cmp	x9, #0x1
  e4:	mov	x8, x5
  e8:	b.lt	120 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x120>  // b.tstop
  ec:	lsr	x8, x9, #4
  f0:	add	x9, x8, #0x1
  f4:	mov	x8, x5
  f8:	mov	x10, x0
  fc:	ldr	x11, [x10]
 100:	sub	x9, x9, #0x1
 104:	cmp	x9, #0x1
 108:	str	x11, [x8]
 10c:	ldr	w11, [x10, #8]
 110:	add	x10, x10, #0x10
 114:	str	w11, [x8, #8]
 118:	add	x8, x8, #0x10
 11c:	b.gt	fc <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xfc>
 120:	sub	x9, x2, x1
 124:	cmp	x9, #0x1
 128:	b.lt	158 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x158>  // b.tstop
 12c:	lsr	x9, x9, #4
 130:	add	x9, x9, #0x1
 134:	ldr	x10, [x1]
 138:	sub	x9, x9, #0x1
 13c:	cmp	x9, #0x1
 140:	str	x10, [x0]
 144:	ldr	w10, [x1, #8]
 148:	add	x1, x1, #0x10
 14c:	str	w10, [x0, #8]
 150:	add	x0, x0, #0x10
 154:	b.gt	134 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x134>
 158:	sub	x9, x8, x5
 15c:	cmp	x9, #0x1
 160:	b.lt	194 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x194>  // b.tstop
 164:	lsr	x9, x9, #4
 168:	add	x9, x9, #0x1
 16c:	sub	x8, x8, #0x8
 170:	mov	x0, x2
 174:	ldur	x10, [x8, #-8]
 178:	sub	x9, x9, #0x1
 17c:	cmp	x9, #0x1
 180:	str	x10, [x0, #-16]!
 184:	ldr	w10, [x8], #-16
 188:	str	w10, [x0, #8]
 18c:	b.gt	174 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x174>
 190:	ret
 194:	mov	x0, x2
 198:	ret

Disassembly of section .text._ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_:

0000000000000000 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cmp	x3, #0x1
  1c:	mov	x21, x0
  20:	b.eq	148 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x148>  // b.none
  24:	mov	x24, x5
  28:	mov	x19, x4
  2c:	mov	x25, x3
  30:	mov	x20, x2
  34:	mov	x22, x1
  38:	cmp	x3, x5
  3c:	b.le	9c <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x9c>
  40:	cmp	x25, #0x0
  44:	cinc	x8, x25, lt  // lt = tstop
  48:	asr	x26, x8, #1
  4c:	add	x23, x21, x26, lsl #4
  50:	mov	x0, x21
  54:	mov	x1, x23
  58:	mov	x2, x20
  5c:	mov	x3, x26
  60:	mov	x4, x19
  64:	mov	x5, x24
  68:	bl	0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>
  6c:	cmp	x25, x26
  70:	mov	x21, x0
  74:	b.eq	164 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x164>  // b.none
  78:	sub	x26, x26, x25
  7c:	mov	x25, x23
  80:	mov	x0, x25
  84:	blr	x20
  88:	tbz	w0, #0, 16c <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x16c>
  8c:	adds	x26, x26, #0x1
  90:	add	x25, x25, #0x10
  94:	b.cc	80 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x80>  // b.lo, b.ul, b.last
  98:	b	190 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x190>
  9c:	ldr	x8, [x21]
  a0:	add	x23, x21, #0x10
  a4:	cmp	x23, x22
  a8:	add	x24, x19, #0x10
  ac:	str	x8, [x19]
  b0:	ldr	w8, [x21, #8]
  b4:	str	w8, [x19, #8]
  b8:	b.ne	e0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xe0>  // b.any
  bc:	b	10c <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x10c>
  c0:	ldr	x8, [x23]
  c4:	str	x8, [x24]
  c8:	ldr	w8, [x23, #8]
  cc:	str	w8, [x24, #8]
  d0:	add	x24, x24, #0x10
  d4:	add	x23, x23, #0x10
  d8:	cmp	x22, x23
  dc:	b.eq	10c <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x10c>  // b.none
  e0:	mov	x0, x23
  e4:	blr	x20
  e8:	tbz	w0, #0, c0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xc0>
  ec:	ldr	x8, [x23]
  f0:	str	x8, [x21]
  f4:	ldr	w8, [x23, #8]
  f8:	str	w8, [x21, #8]
  fc:	add	x21, x21, #0x10
 100:	add	x23, x23, #0x10
 104:	cmp	x22, x23
 108:	b.ne	e0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xe0>  // b.any
 10c:	sub	x8, x24, x19
 110:	cmp	x8, #0x1
 114:	b.lt	148 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x148>  // b.tstop
 118:	lsr	x8, x8, #4
 11c:	add	x8, x8, #0x1
 120:	mov	x9, x21
 124:	ldr	x10, [x19]
 128:	sub	x8, x8, #0x1
 12c:	cmp	x8, #0x1
 130:	str	x10, [x9]
 134:	ldr	w10, [x19, #8]
 138:	add	x19, x19, #0x10
 13c:	str	w10, [x9, #8]
 140:	add	x9, x9, #0x10
 144:	b.gt	124 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x124>
 148:	mov	x0, x21
 14c:	ldp	x20, x19, [sp, #64]
 150:	ldp	x22, x21, [sp, #48]
 154:	ldp	x24, x23, [sp, #32]
 158:	ldp	x26, x25, [sp, #16]
 15c:	ldp	x29, x30, [sp], #80
 160:	ret
 164:	mov	x25, x23
 168:	b	190 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x190>
 16c:	cbz	x26, 190 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x190>
 170:	neg	x3, x26
 174:	mov	x0, x25
 178:	mov	x1, x22
 17c:	mov	x2, x20
 180:	mov	x4, x19
 184:	mov	x5, x24
 188:	bl	0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>
 18c:	mov	x25, x0
 190:	mov	x0, x21
 194:	mov	x1, x23
 198:	mov	x2, x25
 19c:	ldp	x20, x19, [sp, #64]
 1a0:	ldp	x22, x21, [sp, #48]
 1a4:	ldp	x24, x23, [sp, #32]
 1a8:	ldp	x26, x25, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #80
 1b0:	b	0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x4
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x4
  a8:	cmn	x9, #0x4
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff8    	// #-8
  e0:	cmn	x13, #0x4
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x4
 12c:	cmn	x9, #0x4
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff8    	// #-8
 164:	cmn	x13, #0x4
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffffc    	// #-4
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffffc    	// #-4
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffffc    	// #-4
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffffc    	// #-4
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff8    	// #-8
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	x9, [x1, #8]
  a0:	str	x9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x4
  c4:	cmn	x10, #0x4
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x13c>
  d4:	cmn	x9, #0x4
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x4
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #24]
  14:	mov	x21, x2
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	mov	x20, x8
  24:	cbz	w9, 64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x64>
  28:	ldr	x10, [x22]
  2c:	orr	x8, x10, #0x4
  30:	cmn	x8, #0x4
  34:	b.eq	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x104>  // b.none
  38:	ldr	x8, [x19, #8]
  3c:	ubfx	x11, x10, #4, #28
  40:	eor	w12, w11, w10, lsr #9
  44:	sub	w11, w9, #0x1
  48:	and	w12, w12, w11
  4c:	add	x0, x8, w12, uxtw #4
  50:	ldr	x14, [x0]
  54:	cmp	x14, x10
  58:	b.ne	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0xb8>  // b.any
  5c:	mov	w10, wzr
  60:	b	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x94>
  64:	mov	x3, xzr
  68:	mov	x0, x19
  6c:	mov	x1, x22
  70:	mov	x2, x22
  74:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
  78:	ldr	x8, [x22]
  7c:	mov	w10, #0x1                   	// #1
  80:	str	x8, [x0]
  84:	ldr	x8, [x21]
  88:	str	x8, [x0, #8]
  8c:	ldr	x8, [x19, #8]
  90:	ldr	w9, [x19, #24]
  94:	add	x8, x8, w9, uxtw #4
  98:	ldr	x9, [x19]
  9c:	stp	x0, x8, [x20, #16]
  a0:	strb	w10, [x20, #32]
  a4:	ldp	x22, x21, [sp, #16]
  a8:	stp	x19, x9, [x20]
  ac:	ldp	x20, x19, [sp, #32]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret
  b8:	mov	x13, xzr
  bc:	mov	w16, #0x1                   	// #1
  c0:	mov	x15, #0xfffffffffffffff8    	// #-8
  c4:	cmn	x14, #0x4
  c8:	b.eq	f8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0xf8>  // b.none
  cc:	cmp	x13, #0x0
  d0:	add	w12, w12, w16
  d4:	ccmp	x14, x15, #0x0, eq  // eq = none
  d8:	and	w12, w12, w11
  dc:	csel	x13, x13, x0, ne  // ne = any
  e0:	add	x0, x8, w12, uxtw #4
  e4:	ldr	x14, [x0]
  e8:	add	w16, w16, #0x1
  ec:	cmp	x14, x10
  f0:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x5c>  // b.none
  f4:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0xc4>
  f8:	cmp	x13, #0x0
  fc:	csel	x3, x0, x13, eq  // eq = none
 100:	b	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x68>
 104:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
 108:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
 10c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x252                 	// #594
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0]
  10:	ldr	w8, [x0, #8]
  14:	mov	x20, x2
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x1
  20:	str	x9, [x0]
  24:	lsr	w9, w8, #1
  28:	tbnz	w8, #0, 34 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x34>
  2c:	ldr	w1, [x19, #24]
  30:	b	38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x38>
  34:	mov	w1, #0x1                   	// #1
  38:	lsl	w10, w9, #2
  3c:	add	w10, w10, #0x4
  40:	add	w11, w1, w1, lsl #1
  44:	cmp	w10, w11
  48:	b.cs	a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xa4>  // b.hs, b.nlast
  4c:	ldr	w10, [x19, #12]
  50:	mvn	w9, w9
  54:	add	w9, w1, w9
  58:	sub	w9, w9, w10
  5c:	cmp	w9, w1, lsr #3
  60:	b.ls	c8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xc8>  // b.plast
  64:	cbz	x3, 1e4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1e4>
  68:	lsr	w9, w8, #1
  6c:	adds	w9, w9, #0x1
  70:	b.mi	204 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x204>  // b.first
  74:	bfi	w8, w9, #1, #31
  78:	str	w8, [x19, #8]
  7c:	ldr	w8, [x3]
  80:	cmn	w8, #0x1
  84:	b.eq	94 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x94>  // b.none
  88:	ldr	w8, [x19, #12]
  8c:	sub	w8, w8, #0x1
  90:	str	w8, [x19, #12]
  94:	ldp	x20, x19, [sp, #16]
  98:	mov	x0, x3
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	lsl	w1, w1, #1
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  b0:	ldr	w8, [x19, #8]
  b4:	tbnz	w8, #0, e8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xe8>
  b8:	ldr	w11, [x19, #24]
  bc:	cbz	w11, 1d0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1d0>
  c0:	ldr	x9, [x19, #16]
  c4:	b	f0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xf0>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  d0:	ldr	w8, [x19, #8]
  d4:	tbnz	w8, #0, 15c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x15c>
  d8:	ldr	w11, [x19, #24]
  dc:	cbz	w11, 1e4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1e4>
  e0:	ldr	x9, [x19, #16]
  e4:	b	164 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x164>
  e8:	add	x9, x19, #0x10
  ec:	mov	w11, #0x1                   	// #1
  f0:	ldr	w10, [x20]
  f4:	cmn	w10, #0x2
  f8:	b.cs	224 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x224>  // b.hs, b.nlast
  fc:	mov	w12, #0x25                  	// #37
 100:	mul	w12, w10, w12
 104:	sub	w11, w11, #0x1
 108:	and	w12, w12, w11
 10c:	add	x3, x9, w12, uxtw #4
 110:	ldr	w14, [x3]
 114:	cmp	w10, w14
 118:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>  // b.none
 11c:	mov	x13, xzr
 120:	mov	w16, #0x1                   	// #1
 124:	mov	w15, #0xfffffffe            	// #-2
 128:	cmn	w14, #0x1
 12c:	b.eq	1d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1d8>  // b.none
 130:	cmp	x13, #0x0
 134:	add	w12, w12, w16
 138:	ccmp	w14, w15, #0x0, eq  // eq = none
 13c:	and	w12, w12, w11
 140:	csel	x13, x13, x3, ne  // ne = any
 144:	add	x3, x9, w12, uxtw #4
 148:	ldr	w14, [x3]
 14c:	add	w16, w16, #0x1
 150:	cmp	w10, w14
 154:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>  // b.none
 158:	b	128 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x128>
 15c:	add	x9, x19, #0x10
 160:	mov	w11, #0x1                   	// #1
 164:	ldr	w10, [x20]
 168:	cmn	w10, #0x2
 16c:	b.cs	224 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x224>  // b.hs, b.nlast
 170:	mov	w12, #0x25                  	// #37
 174:	mul	w12, w10, w12
 178:	sub	w11, w11, #0x1
 17c:	and	w12, w12, w11
 180:	add	x3, x9, w12, uxtw #4
 184:	ldr	w14, [x3]
 188:	cmp	w10, w14
 18c:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>  // b.none
 190:	mov	x13, xzr
 194:	mov	w16, #0x1                   	// #1
 198:	mov	w15, #0xfffffffe            	// #-2
 19c:	cmn	w14, #0x1
 1a0:	b.eq	1d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1d8>  // b.none
 1a4:	cmp	x13, #0x0
 1a8:	add	w12, w12, w16
 1ac:	ccmp	w14, w15, #0x0, eq  // eq = none
 1b0:	and	w12, w12, w11
 1b4:	csel	x13, x13, x3, ne  // ne = any
 1b8:	add	x3, x9, w12, uxtw #4
 1bc:	ldr	w14, [x3]
 1c0:	add	w16, w16, #0x1
 1c4:	cmp	w10, w14
 1c8:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>  // b.none
 1cc:	b	19c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x19c>
 1d0:	mov	x3, xzr
 1d4:	b	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>
 1d8:	cmp	x13, #0x0
 1dc:	csel	x3, x3, x13, eq  // eq = none
 1e0:	b	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>
 1e4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 1e8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 1ec:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 1f0:	add	x0, x0, #0x0
 1f4:	add	x1, x1, #0x0
 1f8:	add	x3, x3, #0x0
 1fc:	mov	w2, #0x22f                 	// #559
 200:	bl	0 <__assert_fail>
 204:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 208:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 20c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 210:	add	x0, x0, #0x0
 214:	add	x1, x1, #0x0
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x441                 	// #1089
 220:	bl	0 <__assert_fail>
 224:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 228:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 22c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 230:	add	x0, x0, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x3, x3, #0x0
 23c:	mov	w2, #0x252                 	// #594
 240:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	cmp	w1, #0x2
  18:	mov	x19, x0
  1c:	b.cc	50 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0x50>  // b.lo, b.ul, b.last
  20:	sub	w8, w1, #0x1
  24:	orr	x8, x8, x8, lsr #1
  28:	orr	x8, x8, x8, lsr #2
  2c:	orr	x8, x8, x8, lsr #4
  30:	orr	x8, x8, x8, lsr #8
  34:	orr	x8, x8, x8, lsr #16
  38:	lsr	x9, x8, #32
  3c:	orr	w8, w9, w8
  40:	add	w9, w8, #0x1
  44:	cmp	w9, #0x40
  48:	mov	w9, #0x40                  	// #64
  4c:	csinc	w1, w9, w8, ls  // ls = plast
  50:	ldr	w8, [x19, #8]
  54:	tbnz	w8, #0, 74 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0x74>
  58:	ldr	x20, [x19, #16]
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w1, #0x1
  64:	b.hi	e0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0xe0>  // b.pmore
  68:	orr	w8, w8, #0x1
  6c:	str	w8, [x19, #8]
  70:	b	f0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0xf0>
  74:	ldr	w9, [x19, #16]
  78:	mov	x20, sp
  7c:	cmn	w9, #0x3
  80:	b.hi	9c <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0x9c>  // b.pmore
  84:	str	w9, [sp]
  88:	ldr	w9, [x19, #28]
  8c:	ldur	x10, [x19, #20]
  90:	add	x20, x20, #0x10
  94:	str	w9, [sp, #12]
  98:	stur	x10, [sp, #4]
  9c:	cmp	w1, #0x2
  a0:	b.cc	bc <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0xbc>  // b.lo, b.ul, b.last
  a4:	mov	w21, w1
  a8:	and	w8, w8, #0xfffffffe
  ac:	lsl	x0, x21, #4
  b0:	str	w8, [x19, #8]
  b4:	bl	0 <_Znwm>
  b8:	stp	x0, x21, [x19, #16]
  bc:	mov	x1, sp
  c0:	mov	x0, x19
  c4:	mov	x2, x20
  c8:	bl	0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>
  cc:	ldp	x20, x19, [sp, #48]
  d0:	ldp	x22, x21, [sp, #32]
  d4:	ldp	x29, x30, [sp, #16]
  d8:	add	sp, sp, #0x40
  dc:	ret
  e0:	mov	w22, w1
  e4:	lsl	x0, x22, #4
  e8:	bl	0 <_Znwm>
  ec:	stp	x0, x22, [x19, #16]
  f0:	add	x2, x20, x21, lsl #4
  f4:	mov	x0, x19
  f8:	mov	x1, x20
  fc:	bl	0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>
 100:	mov	x0, x20
 104:	ldp	x20, x19, [sp, #48]
 108:	ldp	x22, x21, [sp, #32]
 10c:	ldp	x29, x30, [sp, #16]
 110:	add	sp, sp, #0x40
 114:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	and	w9, w8, #0x1
  10:	stp	w9, wzr, [x0, #8]
  14:	tbnz	w8, #0, 24 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x24>
  18:	ldr	w8, [x0, #24]
  1c:	sub	w10, w8, #0x1
  20:	b	2c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x2c>
  24:	mov	w10, wzr
  28:	mov	w8, #0x1                   	// #1
  2c:	tst	w10, w8
  30:	b.ne	1e4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x1e4>  // b.any
  34:	add	x8, x0, #0x10
  38:	cbnz	w9, 60 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x60>
  3c:	ldr	w9, [x0, #24]
  40:	cbz	w9, b8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xb8>
  44:	ldr	x10, [x0, #16]
  48:	add	x9, x10, x9, lsl #4
  4c:	sub	x11, x9, x10
  50:	sub	x11, x11, #0x10
  54:	lsr	x11, x11, #4
  58:	cbnz	x11, 78 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x78>
  5c:	b	a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xa8>
  60:	add	x9, x0, #0x20
  64:	mov	x10, x8
  68:	sub	x11, x9, x10
  6c:	sub	x11, x11, #0x10
  70:	lsr	x11, x11, #4
  74:	cbz	x11, a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xa8>
  78:	add	x11, x11, #0x1
  7c:	and	x12, x11, #0x1ffffffffffffffe
  80:	add	x13, x10, #0x10
  84:	add	x10, x10, x12, lsl #4
  88:	mov	w14, #0xffffffff            	// #-1
  8c:	mov	x15, x12
  90:	stur	w14, [x13, #-16]
  94:	str	w14, [x13], #32
  98:	subs	x15, x15, #0x2
  9c:	b.ne	90 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x90>  // b.any
  a0:	cmp	x11, x12
  a4:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xb8>  // b.none
  a8:	mov	w11, #0xffffffff            	// #-1
  ac:	str	w11, [x10], #16
  b0:	cmp	x9, x10
  b4:	b.ne	ac <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xac>  // b.any
  b8:	cmp	x1, x2
  bc:	b.eq	19c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x19c>  // b.none
  c0:	mov	w9, #0x25                  	// #37
  c4:	mov	w10, #0xfffffffe            	// #-2
  c8:	b	d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xd8>
  cc:	add	x1, x1, #0x10
  d0:	cmp	x1, x2
  d4:	b.eq	19c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x19c>  // b.none
  d8:	ldr	w11, [x1]
  dc:	cmn	w11, #0x3
  e0:	b.hi	cc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xcc>  // b.pmore
  e4:	ldrb	w12, [x0, #8]
  e8:	tbnz	w12, #0, fc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xfc>
  ec:	ldr	w13, [x0, #24]
  f0:	cbz	w13, 194 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x194>
  f4:	ldr	x12, [x0, #16]
  f8:	b	104 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x104>
  fc:	mov	w13, #0x1                   	// #1
 100:	mov	x12, x8
 104:	mul	w14, w11, w9
 108:	sub	w13, w13, #0x1
 10c:	and	w15, w13, w14
 110:	add	x14, x12, w15, uxtw #4
 114:	ldr	w17, [x14]
 118:	cmp	w11, w17
 11c:	b.eq	1a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x1a4>  // b.none
 120:	mov	x16, xzr
 124:	mov	w18, #0x1                   	// #1
 128:	cmn	w17, #0x1
 12c:	b.eq	15c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x15c>  // b.none
 130:	cmp	x16, #0x0
 134:	add	w15, w15, w18
 138:	ccmp	w17, w10, #0x0, eq  // eq = none
 13c:	and	w15, w15, w13
 140:	csel	x16, x16, x14, ne  // ne = any
 144:	add	x14, x12, w15, uxtw #4
 148:	ldr	w17, [x14]
 14c:	add	w18, w18, #0x1
 150:	cmp	w11, w17
 154:	b.ne	128 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x128>  // b.any
 158:	b	1a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x1a4>
 15c:	cmp	x16, #0x0
 160:	csel	x12, x14, x16, eq  // eq = none
 164:	str	w11, [x12]
 168:	ldr	w11, [x1, #12]
 16c:	ldur	x13, [x1, #4]
 170:	str	w11, [x12, #12]
 174:	stur	x13, [x12, #4]
 178:	ldr	w11, [x0, #8]
 17c:	lsr	w12, w11, #1
 180:	adds	w12, w12, #0x1
 184:	b.mi	1c4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x1c4>  // b.first
 188:	bfi	w11, w12, #1, #31
 18c:	str	w11, [x0, #8]
 190:	b	cc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xcc>
 194:	mov	x12, xzr
 198:	b	164 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x164>
 19c:	ldp	x29, x30, [sp], #16
 1a0:	ret
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x17a                 	// #378
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x441                 	// #1089
 1e0:	bl	0 <__assert_fail>
 1e4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1e8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1ec:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1f0:	add	x0, x0, #0x0
 1f4:	add	x1, x1, #0x0
 1f8:	add	x3, x3, #0x0
 1fc:	mov	w2, #0x15c                 	// #348
 200:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	cmp	x2, x3
  20:	b.eq	10c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x10c>  // b.none
  24:	ldp	x24, x8, [x0, #8]
  28:	sub	x22, x3, x2
  2c:	asr	x26, x22, #3
  30:	mov	x21, x2
  34:	sub	x8, x8, x24
  38:	mov	x19, x1
  3c:	mov	x20, x0
  40:	cmp	x26, x8, asr #3
  44:	b.ls	128 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x128>  // b.plast
  48:	ldr	x23, [x20]
  4c:	sub	x8, x24, x23
  50:	asr	x9, x8, #3
  54:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  58:	sub	x10, x8, x9
  5c:	cmp	x10, x26
  60:	b.cc	21c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x21c>  // b.lo, b.ul, b.last
  64:	cmp	x9, x26
  68:	csel	x10, x26, x9, cc  // cc = lo, ul, last
  6c:	adds	x9, x10, x9
  70:	lsr	x11, x9, #60
  74:	cset	w10, cs  // cs = hs, nlast
  78:	cmp	x11, #0x0
  7c:	cset	w11, ne  // ne = any
  80:	orr	w10, w10, w11
  84:	cmp	w10, #0x0
  88:	csel	x27, x8, x9, ne  // ne = any
  8c:	cbz	x27, 1f0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1f0>
  90:	lsl	x0, x27, #3
  94:	bl	0 <_Znwm>
  98:	ldr	x23, [x20]
  9c:	mov	x24, x0
  a0:	subs	x2, x19, x23
  a4:	asr	x25, x2, #3
  a8:	b.eq	b8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xb8>  // b.none
  ac:	mov	x0, x24
  b0:	mov	x1, x23
  b4:	bl	0 <memmove>
  b8:	add	x25, x24, x25, lsl #3
  bc:	cbz	x22, d0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xd0>
  c0:	mov	x0, x25
  c4:	mov	x1, x21
  c8:	mov	x2, x22
  cc:	bl	0 <memmove>
  d0:	ldr	x8, [x20, #8]
  d4:	add	x21, x25, x26, lsl #3
  d8:	subs	x2, x8, x19
  dc:	asr	x22, x2, #3
  e0:	b.eq	f0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xf0>  // b.none
  e4:	mov	x0, x21
  e8:	mov	x1, x19
  ec:	bl	0 <memmove>
  f0:	add	x19, x21, x22, lsl #3
  f4:	cbz	x23, 100 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x100>
  f8:	mov	x0, x23
  fc:	bl	0 <_ZdlPv>
 100:	add	x8, x24, x27, lsl #3
 104:	stp	x24, x19, [x20]
 108:	str	x8, [x20, #16]
 10c:	ldp	x20, x19, [sp, #80]
 110:	ldp	x22, x21, [sp, #64]
 114:	ldp	x24, x23, [sp, #48]
 118:	ldp	x26, x25, [sp, #32]
 11c:	ldr	x27, [sp, #16]
 120:	ldp	x29, x30, [sp], #96
 124:	ret
 128:	sub	x23, x24, x19
 12c:	asr	x25, x23, #3
 130:	subs	x27, x26, x25
 134:	b.cs	184 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x184>  // b.hs, b.nlast
 138:	sub	x23, x24, x26, lsl #3
 13c:	cbz	x22, 204 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x204>
 140:	mov	x0, x24
 144:	mov	x1, x23
 148:	mov	x2, x22
 14c:	bl	0 <memmove>
 150:	ldr	x8, [x20, #8]
 154:	add	x8, x8, x26, lsl #3
 158:	subs	x2, x23, x19
 15c:	str	x8, [x20, #8]
 160:	b.eq	170 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x170>  // b.none
 164:	sub	x0, x24, x2
 168:	mov	x1, x19
 16c:	bl	0 <memmove>
 170:	cbz	x22, 10c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x10c>
 174:	mov	x0, x19
 178:	mov	x1, x21
 17c:	mov	x2, x22
 180:	b	1d4 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1d4>
 184:	add	x22, x21, x25, lsl #3
 188:	subs	x2, x3, x22
 18c:	b.eq	1a0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1a0>  // b.none
 190:	mov	x0, x24
 194:	mov	x1, x22
 198:	bl	0 <memmove>
 19c:	ldr	x24, [x20, #8]
 1a0:	add	x0, x24, x27, lsl #3
 1a4:	str	x0, [x20, #8]
 1a8:	cbz	x23, 1bc <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1bc>
 1ac:	mov	x1, x19
 1b0:	mov	x2, x23
 1b4:	bl	0 <memmove>
 1b8:	ldr	x0, [x20, #8]
 1bc:	add	x8, x0, x25, lsl #3
 1c0:	subs	x2, x22, x21
 1c4:	str	x8, [x20, #8]
 1c8:	b.eq	10c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x10c>  // b.none
 1cc:	mov	x0, x19
 1d0:	mov	x1, x21
 1d4:	ldp	x20, x19, [sp, #80]
 1d8:	ldp	x22, x21, [sp, #64]
 1dc:	ldp	x24, x23, [sp, #48]
 1e0:	ldp	x26, x25, [sp, #32]
 1e4:	ldr	x27, [sp, #16]
 1e8:	ldp	x29, x30, [sp], #96
 1ec:	b	0 <memmove>
 1f0:	mov	x24, xzr
 1f4:	subs	x2, x19, x23
 1f8:	asr	x25, x2, #3
 1fc:	b.ne	ac <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xac>  // b.any
 200:	b	b8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xb8>
 204:	mov	x8, x24
 208:	add	x8, x8, x26, lsl #3
 20c:	subs	x2, x23, x19
 210:	str	x8, [x20, #8]
 214:	b.ne	164 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x164>  // b.any
 218:	b	170 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x170>
 21c:	adrp	x0, 0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
 220:	add	x0, x0, #0x0
 224:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_:

0000000000000000 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 6c <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x6c>
  28:	ldr	x9, [x22]
  2c:	mov	x21, x20
  30:	ldr	x10, [x8, #32]
  34:	add	x11, x8, #0x18
  38:	add	x12, x8, #0x10
  3c:	cmp	x10, x9
  40:	csel	x21, x21, x8, cc  // cc = lo, ul, last
  44:	csel	x8, x11, x12, cc  // cc = lo, ul, last
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 30 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x30>
  50:	cmp	x21, x20
  54:	b.eq	70 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x70>  // b.none
  58:	ldr	x8, [x22]
  5c:	ldr	x9, [x21, #32]
  60:	cmp	x8, x9
  64:	b.cc	70 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x70>  // b.lo, b.ul, b.last
  68:	b	f0 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xf0>
  6c:	mov	x21, x20
  70:	mov	w0, #0x30                  	// #48
  74:	bl	0 <_Znwm>
  78:	ldr	x8, [x22]
  7c:	mov	x23, x0
  80:	mov	x22, x0
  84:	mov	x1, x21
  88:	str	x8, [x23, #32]!
  8c:	str	wzr, [x0, #40]
  90:	mov	x0, x19
  94:	mov	x2, x23
  98:	bl	0 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_>
  9c:	mov	x21, x0
  a0:	cbz	x1, e8 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xe8>
  a4:	mov	x2, x1
  a8:	mov	w0, #0x1                   	// #1
  ac:	cbnz	x21, c8 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xc8>
  b0:	cmp	x20, x2
  b4:	b.eq	c8 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xc8>  // b.none
  b8:	ldr	x8, [x23]
  bc:	ldr	x9, [x2, #32]
  c0:	cmp	x8, x9
  c4:	cset	w0, cc  // cc = lo, ul, last
  c8:	mov	x1, x22
  cc:	mov	x3, x20
  d0:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  d4:	ldr	x8, [x19, #40]
  d8:	mov	x21, x22
  dc:	add	x8, x8, #0x1
  e0:	str	x8, [x19, #40]
  e4:	b	f0 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xf0>
  e8:	mov	x0, x22
  ec:	bl	0 <_ZdlPv>
  f0:	add	x0, x21, #0x28
  f4:	ldp	x20, x19, [sp, #48]
  f8:	ldp	x22, x21, [sp, #32]
  fc:	ldr	x23, [sp, #16]
 100:	ldp	x29, x30, [sp], #64
 104:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x74>  // b.none
  2c:	ldr	x22, [x22]
  30:	ldr	x8, [x20, #32]
  34:	cmp	x22, x8
  38:	b.cs	dc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xdc>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	124 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x124>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	x8, [x0, #32]
  54:	cmp	x8, x22
  58:	b.cs	130 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x130>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	20c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x20c>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	x9, [x22]
  84:	ldr	x8, [x19, #32]
  88:	cmp	x8, x9
  8c:	b.cc	1dc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1dc>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 170 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x170>
  98:	ldr	x8, [x22]
  9c:	ldr	x10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	x8, x10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x9c>
  bc:	cmp	x8, x10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cs	18c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x18c>  // b.hs, b.nlast
  cc:	ldr	x8, [x21, #24]
  d0:	cmp	x8, x20
  d4:	b.ne	180 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x180>  // b.any
  d8:	b	1dc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1dc>
  dc:	cmp	x8, x22
  e0:	b.cs	11c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x11c>  // b.hs, b.nlast
  e4:	ldr	x19, [x21, #32]
  e8:	cmp	x19, x20
  ec:	b.eq	1dc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1dc>  // b.none
  f0:	mov	x0, x20
  f4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  f8:	ldr	x8, [x0, #32]
  fc:	cmp	x22, x8
 100:	b.cs	198 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x198>  // b.hs, b.nlast
 104:	ldr	x8, [x20, #24]
 108:	cmp	x8, #0x0
 10c:	csel	x8, xzr, x0, eq  // eq = none
 110:	csel	x19, x20, x0, eq  // eq = none
 114:	mov	x20, x8
 118:	b	20c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x20c>
 11c:	mov	x19, xzr
 120:	b	20c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x20c>
 124:	mov	x20, x24
 128:	mov	x19, x24
 12c:	b	20c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x20c>
 130:	ldr	x9, [x21, #16]
 134:	cbz	x9, 1d0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1d0>
 138:	ldr	x8, [x9, #32]
 13c:	mov	x19, x9
 140:	add	x9, x9, #0x10
 144:	add	x10, x19, #0x18
 148:	cmp	x22, x8
 14c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 150:	ldr	x9, [x9]
 154:	cbnz	x9, 138 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x138>
 158:	cmp	x22, x8
 15c:	mov	x0, x19
 160:	b.cs	1fc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1fc>  // b.hs, b.nlast
 164:	cmp	x24, x19
 168:	b.ne	1f4 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1f4>  // b.any
 16c:	b	1dc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1dc>
 170:	mov	x19, x23
 174:	ldr	x8, [x21, #24]
 178:	cmp	x8, x20
 17c:	b.eq	1dc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1dc>  // b.none
 180:	mov	x0, x20
 184:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 188:	ldr	x8, [x22]
 18c:	ldr	x9, [x0, #32]
 190:	cmp	x9, x8
 194:	b	204 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x204>
 198:	ldr	x9, [x21, #16]
 19c:	cbz	x9, 1e4 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1e4>
 1a0:	ldr	x8, [x9, #32]
 1a4:	mov	x19, x9
 1a8:	add	x9, x9, #0x10
 1ac:	add	x10, x19, #0x18
 1b0:	cmp	x22, x8
 1b4:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1b8:	ldr	x9, [x9]
 1bc:	cbnz	x9, 1a0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1a0>
 1c0:	cmp	x22, x8
 1c4:	mov	x0, x19
 1c8:	b.cc	1e8 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1e8>  // b.lo, b.ul, b.last
 1cc:	b	1fc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1fc>
 1d0:	mov	x19, x23
 1d4:	cmp	x24, x19
 1d8:	b.ne	1f4 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1f4>  // b.any
 1dc:	mov	x20, xzr
 1e0:	b	20c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x20c>
 1e4:	mov	x19, x23
 1e8:	ldr	x8, [x21, #24]
 1ec:	cmp	x8, x19
 1f0:	b.eq	1dc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1dc>  // b.none
 1f4:	mov	x0, x19
 1f8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1fc:	ldr	x8, [x0, #32]
 200:	cmp	x8, x22
 204:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 208:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 20c:	mov	x0, x20
 210:	mov	x1, x19
 214:	ldp	x20, x19, [sp, #48]
 218:	ldp	x22, x21, [sp, #32]
 21c:	ldp	x24, x23, [sp, #16]
 220:	ldp	x29, x30, [sp], #64
 224:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x4
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x4
  a8:	cmn	x9, #0x4
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff8    	// #-8
  e0:	cmn	x13, #0x4
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x4
 12c:	cmn	x9, #0x4
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff8    	// #-8
 164:	cmn	x13, #0x4
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffffc    	// #-4
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffffc    	// #-4
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffffc    	// #-4
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffffc    	// #-4
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff8    	// #-8
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x4
  c4:	cmn	x10, #0x4
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x13c>
  d4:	cmn	x9, #0x4
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w11, w12
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x4
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w11, [x0, #24]
   c:	cbz	w11, bc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xbc>
  10:	ldr	w8, [x1]
  14:	ldr	x9, [x0, #8]
  18:	ldr	x10, [x1, #8]
  1c:	cmn	w8, #0x1
  20:	b.ne	2c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x2c>  // b.any
  24:	cmn	x10, #0x4
  28:	b.eq	14c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x14c>  // b.none
  2c:	cmn	w8, #0x2
  30:	b.ne	3c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x3c>  // b.any
  34:	cmn	x10, #0x8
  38:	b.eq	14c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x14c>  // b.none
  3c:	mov	w13, #0x25                  	// #37
  40:	ubfx	x14, x10, #4, #28
  44:	mov	x15, #0xffffffffffffffff    	// #-1
  48:	sub	w12, w11, #0x1
  4c:	mul	w11, w8, w13
  50:	eor	w13, w14, w10, lsr #9
  54:	eor	x14, x15, x13, lsl #32
  58:	bfi	x13, x11, #32, #32
  5c:	add	x11, x13, x14
  60:	eor	x11, x11, x11, lsr #22
  64:	eor	x13, x15, x11, lsl #13
  68:	add	x11, x11, x13
  6c:	eor	x11, x11, x11, lsr #8
  70:	add	x11, x11, x11, lsl #3
  74:	eor	x11, x11, x11, lsr #15
  78:	eor	x13, x15, x11, lsl #27
  7c:	add	x11, x11, x13
  80:	lsr	x13, x11, #31
  84:	eor	w11, w13, w11
  88:	and	w14, w12, w11
  8c:	mov	w13, #0x18                  	// #24
  90:	umaddl	x11, w14, w13, x9
  94:	ldr	w16, [x11]
  98:	ldr	x18, [x11, #8]
  9c:	cmp	w8, w16
  a0:	b.ne	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xd0>  // b.any
  a4:	cmp	x10, x18
  a8:	b.ne	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xd0>  // b.any
  ac:	mov	w0, #0x1                   	// #1
  b0:	str	x11, [x2]
  b4:	ldp	x29, x30, [sp], #16
  b8:	ret
  bc:	mov	x11, xzr
  c0:	mov	w0, wzr
  c4:	str	x11, [x2]
  c8:	ldp	x29, x30, [sp], #16
  cc:	ret
  d0:	mov	x15, xzr
  d4:	mov	w1, #0x1                   	// #1
  d8:	mov	w17, #0xfffffffe            	// #-2
  dc:	mov	w0, #0x1                   	// #1
  e0:	cmn	w16, #0x1
  e4:	b.ne	f0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xf0>  // b.any
  e8:	cmn	x18, #0x4
  ec:	b.eq	134 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x134>  // b.none
  f0:	cmn	x18, #0x8
  f4:	add	w14, w14, w1
  f8:	ccmp	w16, w17, #0x0, eq  // eq = none
  fc:	and	w14, w14, w12
 100:	ccmp	x15, #0x0, #0x0, eq  // eq = none
 104:	csel	x15, x15, x11, ne  // ne = any
 108:	umaddl	x11, w14, w13, x9
 10c:	ldr	w16, [x11]
 110:	ldr	x18, [x11, #8]
 114:	add	w3, w1, #0x1
 118:	mov	w1, w3
 11c:	cmp	w8, w16
 120:	b.ne	e0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xe0>  // b.any
 124:	cmp	x10, x18
 128:	mov	w1, w3
 12c:	b.eq	b0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb0>  // b.none
 130:	b	e0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xe0>
 134:	cmp	x15, #0x0
 138:	mov	w0, wzr
 13c:	csel	x11, x11, x15, eq  // eq = none
 140:	str	x11, [x2]
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 150:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 154:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x252                 	// #594
 168:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	w8, [x3]
  6c:	cmn	w8, #0x1
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x80>  // b.any
  74:	ldr	x8, [x3, #8]
  78:	cmn	x8, #0x4
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x12c>  // b.any
  a0:	cbz	w8, 11c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x11c>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x11, x8, #0x18
  b0:	cmp	x11, #0x18
  b4:	adrp	x9, 0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  b8:	mov	x10, x0
  bc:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.lo, b.ul, b.last
  c0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c4:	movk	x10, #0xaaab
  c8:	umulh	x10, x11, x10
  cc:	ldr	q0, [x9]
  d0:	lsr	x10, x10, #4
  d4:	add	x11, x10, #0x1
  d8:	and	x12, x11, #0x1ffffffffffffffe
  dc:	mov	w10, #0x18                  	// #24
  e0:	madd	x10, x12, x10, x0
  e4:	mov	x13, x12
  e8:	mov	x14, x0
  ec:	str	q0, [x14]
  f0:	stur	q0, [x14, #24]
  f4:	subs	x13, x13, #0x2
  f8:	add	x14, x14, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
 100:	cmp	x11, x12
 104:	b.eq	11c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x11c>  // b.none
 108:	ldr	q0, [x9]
 10c:	add	x8, x0, x8
 110:	str	q0, [x10], #24
 114:	cmp	x8, x10
 118:	b.ne	110 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x110>  // b.any
 11c:	ldp	x20, x19, [sp, #32]
 120:	ldr	x21, [sp, #16]
 124:	ldp	x29, x30, [sp], #48
 128:	ret
 12c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 130:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 134:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x15c                 	// #348
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x164>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb8>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x11, x10, #0x18
  44:	cmp	x11, #0x18
  48:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  4c:	b.cs	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x58>  // b.hs, b.nlast
  50:	mov	x11, x9
  54:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xa0>
  58:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	movk	x12, #0xaaab
  60:	umulh	x11, x11, x12
  64:	ldr	q0, [x10]
  68:	lsr	x11, x11, #4
  6c:	add	x12, x11, #0x1
  70:	and	x13, x12, #0x1ffffffffffffffe
  74:	mov	w11, #0x18                  	// #24
  78:	madd	x11, x13, x11, x9
  7c:	mov	x14, x13
  80:	mov	x15, x9
  84:	str	q0, [x15]
  88:	stur	q0, [x15, #24]
  8c:	subs	x14, x14, #0x2
  90:	add	x15, x15, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x84>  // b.any
  98:	cmp	x12, x13
  9c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb8>  // b.none
  a0:	ldr	q0, [x10]
  a4:	mov	w10, #0x18                  	// #24
  a8:	madd	x8, x8, x10, x9
  ac:	str	q0, [x11], #24
  b0:	cmp	x8, x11
  b4:	b.ne	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xac>  // b.any
  b8:	cmp	x20, x19
  bc:	b.ne	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xdc>  // b.any
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldr	x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	ret
  d0:	add	x20, x20, #0x18
  d4:	cmp	x19, x20
  d8:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xc0>  // b.none
  dc:	ldr	w9, [x20]
  e0:	ldr	x8, [x20, #8]
  e4:	cmn	w9, #0x1
  e8:	b.ne	f4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xf4>  // b.any
  ec:	cmn	x8, #0x4
  f0:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xd0>  // b.none
  f4:	cmn	w9, #0x2
  f8:	b.ne	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x104>  // b.any
  fc:	cmn	x8, #0x8
 100:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xd0>  // b.none
 104:	add	x2, x29, #0x18
 108:	mov	x0, x21
 10c:	mov	x1, x20
 110:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 114:	tbnz	w0, #0, 144 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>
 118:	ldr	x8, [x29, #24]
 11c:	ldr	w9, [x20]
 120:	str	w9, [x8]
 124:	ldr	x9, [x20, #8]
 128:	str	x9, [x8, #8]
 12c:	ldr	w9, [x20, #16]
 130:	str	w9, [x8, #16]
 134:	ldr	w8, [x21, #16]
 138:	add	w8, w8, #0x1
 13c:	str	w8, [x21, #16]
 140:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xd0>
 144:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 148:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 14c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x17a                 	// #378
 160:	bl	0 <__assert_fail>
 164:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 168:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 16c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	add	x0, x0, #0x0
 174:	add	x1, x1, #0x0
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0x15c                 	// #348
 180:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, 194 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x194>
  18:	ldp	x11, x8, [x0, #8]
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	sub	x8, x8, x11
  28:	cmp	x1, x8, asr #4
  2c:	b.ls	88 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x88>  // b.plast
  30:	ldr	x8, [x19]
  34:	sub	x8, x11, x8
  38:	asr	x23, x8, #4
  3c:	eor	x8, x23, #0x7ffffffffffffff
  40:	cmp	x8, x20
  44:	b.cc	1a8 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x1a8>  // b.lo, b.ul, b.last
  48:	cmp	x23, x20
  4c:	csel	x8, x20, x23, cc  // cc = lo, ul, last
  50:	adds	x8, x8, x23
  54:	lsr	x10, x8, #59
  58:	cset	w9, cs  // cs = hs, nlast
  5c:	cmp	x10, #0x0
  60:	cset	w10, ne  // ne = any
  64:	orr	w9, w9, w10
  68:	cmp	w9, #0x0
  6c:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  70:	csel	x22, x9, x8, ne  // ne = any
  74:	cbz	x22, f0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xf0>
  78:	lsl	x0, x22, #4
  7c:	bl	0 <_Znwm>
  80:	mov	x21, x0
  84:	b	f4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xf4>
  88:	cmp	x20, #0x2
  8c:	b.cs	9c <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x9c>  // b.hs, b.nlast
  90:	mov	x8, x11
  94:	mov	x9, x20
  98:	b	d4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xd4>
  9c:	and	x10, x20, #0xfffffffffffffffe
  a0:	and	x9, x20, #0x1
  a4:	add	x8, x11, x10, lsl #4
  a8:	add	x11, x11, #0x10
  ac:	mov	x12, x10
  b0:	stur	xzr, [x11, #-16]
  b4:	str	xzr, [x11]
  b8:	stur	wzr, [x11, #-8]
  bc:	str	wzr, [x11, #8]
  c0:	subs	x12, x12, #0x2
  c4:	add	x11, x11, #0x20
  c8:	b.ne	b0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xb0>  // b.any
  cc:	cmp	x10, x20
  d0:	b.eq	e8 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xe8>  // b.none
  d4:	str	xzr, [x8]
  d8:	str	wzr, [x8, #8]
  dc:	subs	x9, x9, #0x1
  e0:	add	x8, x8, #0x10
  e4:	b.ne	d4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xd4>  // b.any
  e8:	str	x8, [x19, #8]
  ec:	b	194 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x194>
  f0:	mov	x21, xzr
  f4:	add	x23, x21, x23, lsl #4
  f8:	cmp	x20, #0x2
  fc:	mov	x8, x23
 100:	mov	x9, x20
 104:	b.cc	140 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x140>  // b.lo, b.ul, b.last
 108:	and	x10, x20, #0xfffffffffffffffe
 10c:	and	x9, x20, #0x1
 110:	add	x8, x23, x10, lsl #4
 114:	add	x11, x23, #0x10
 118:	mov	x12, x10
 11c:	stur	xzr, [x11, #-16]
 120:	str	xzr, [x11]
 124:	stur	wzr, [x11, #-8]
 128:	str	wzr, [x11, #8]
 12c:	subs	x12, x12, #0x2
 130:	add	x11, x11, #0x20
 134:	b.ne	11c <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x11c>  // b.any
 138:	cmp	x10, x20
 13c:	b.eq	154 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x154>  // b.none
 140:	str	xzr, [x8]
 144:	str	wzr, [x8, #8]
 148:	subs	x9, x9, #0x1
 14c:	add	x8, x8, #0x10
 150:	b.ne	140 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x140>  // b.any
 154:	ldp	x0, x8, [x19]
 158:	cmp	x0, x8
 15c:	b.eq	17c <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x17c>  // b.none
 160:	mov	x9, x21
 164:	ldr	q0, [x0], #16
 168:	cmp	x8, x0
 16c:	str	q0, [x9]
 170:	add	x9, x9, #0x10
 174:	b.ne	164 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x164>  // b.any
 178:	ldr	x0, [x19]
 17c:	cbz	x0, 184 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x184>
 180:	bl	0 <_ZdlPv>
 184:	add	x8, x23, x20, lsl #4
 188:	add	x9, x21, x22, lsl #4
 18c:	stp	x21, x8, [x19]
 190:	str	x9, [x19, #16]
 194:	ldp	x20, x19, [sp, #48]
 198:	ldp	x22, x21, [sp, #32]
 19c:	ldr	x23, [sp, #16]
 1a0:	ldp	x29, x30, [sp], #64
 1a4:	ret
 1a8:	adrp	x0, 0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm>
 1ac:	add	x0, x0, #0x0
 1b0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cbz	x1, 108 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0x108>
  1c:	mov	x23, x0
  20:	mov	x25, x0
  24:	ldr	x22, [x23, #8]!
  28:	ldr	x21, [x0]
  2c:	ldr	x8, [x25, #16]!
  30:	mov	x19, x1
  34:	mov	x20, x0
  38:	sub	x8, x8, x22
  3c:	cmp	x1, x8, asr #3
  40:	b.ls	9c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0x9c>  // b.plast
  44:	sub	x8, x22, x21
  48:	asr	x24, x8, #3
  4c:	eor	x8, x24, #0xfffffffffffffff
  50:	cmp	x8, x19
  54:	b.cc	120 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0x120>  // b.lo, b.ul, b.last
  58:	cmp	x24, x19
  5c:	csel	x8, x19, x24, cc  // cc = lo, ul, last
  60:	adds	x8, x8, x24
  64:	lsr	x10, x8, #60
  68:	cset	w9, cs  // cs = hs, nlast
  6c:	cmp	x10, #0x0
  70:	cset	w10, ne  // ne = any
  74:	orr	w9, w9, w10
  78:	cmp	w9, #0x0
  7c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  80:	csel	x26, x9, x8, ne  // ne = any
  84:	cbz	x26, bc <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xbc>
  88:	lsl	x0, x26, #3
  8c:	bl	0 <_Znwm>
  90:	ldp	x21, x22, [x20]
  94:	mov	x23, x0
  98:	b	c0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xc0>
  9c:	lsl	x19, x19, #3
  a0:	mov	x0, x22
  a4:	mov	w1, wzr
  a8:	mov	x2, x19
  ac:	bl	0 <memset>
  b0:	add	x8, x22, x19
  b4:	mov	x25, x23
  b8:	b	104 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0x104>
  bc:	mov	x23, xzr
  c0:	add	x24, x23, x24, lsl #3
  c4:	lsl	x2, x19, #3
  c8:	mov	x0, x24
  cc:	mov	w1, wzr
  d0:	bl	0 <memset>
  d4:	sub	x2, x22, x21
  d8:	cmp	x2, #0x1
  dc:	b.lt	ec <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xec>  // b.tstop
  e0:	mov	x0, x23
  e4:	mov	x1, x21
  e8:	bl	0 <memmove>
  ec:	cbz	x21, f8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xf8>
  f0:	mov	x0, x21
  f4:	bl	0 <_ZdlPv>
  f8:	add	x8, x24, x19, lsl #3
  fc:	stp	x23, x8, [x20]
 100:	add	x8, x23, x26, lsl #3
 104:	str	x8, [x25]
 108:	ldp	x20, x19, [sp, #64]
 10c:	ldp	x22, x21, [sp, #48]
 110:	ldp	x24, x23, [sp, #32]
 114:	ldp	x26, x25, [sp, #16]
 118:	ldp	x29, x30, [sp], #80
 11c:	ret
 120:	adrp	x0, 0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZSt20__throw_length_errorPKc>
