
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402608 <.init>:
  402608:	stp	x29, x30, [sp, #-16]!
  40260c:	mov	x29, sp
  402610:	bl	402da0 <wcrtomb@plt+0x60>
  402614:	ldp	x29, x30, [sp], #16
  402618:	ret

Disassembly of section .plt:

0000000000402620 <mbrtowc@plt-0x20>:
  402620:	stp	x16, x30, [sp, #-16]!
  402624:	adrp	x16, 437000 <_obstack_memory_used@@Base+0x23cd0>
  402628:	ldr	x17, [x16, #4088]
  40262c:	add	x16, x16, #0xff8
  402630:	br	x17
  402634:	nop
  402638:	nop
  40263c:	nop

0000000000402640 <mbrtowc@plt>:
  402640:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16]
  402648:	add	x16, x16, #0x0
  40264c:	br	x17

0000000000402650 <memcpy@plt>:
  402650:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #8]
  402658:	add	x16, x16, #0x8
  40265c:	br	x17

0000000000402660 <memmove@plt>:
  402660:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #16]
  402668:	add	x16, x16, #0x10
  40266c:	br	x17

0000000000402670 <isalpha@plt>:
  402670:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #24]
  402678:	add	x16, x16, #0x18
  40267c:	br	x17

0000000000402680 <fwrite_unlocked@plt>:
  402680:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #32]
  402688:	add	x16, x16, #0x20
  40268c:	br	x17

0000000000402690 <strlen@plt>:
  402690:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #40]
  402698:	add	x16, x16, #0x28
  40269c:	br	x17

00000000004026a0 <__sprintf_chk@plt>:
  4026a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #48]
  4026a8:	add	x16, x16, #0x30
  4026ac:	br	x17

00000000004026b0 <acl_set_fd@plt>:
  4026b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #56]
  4026b8:	add	x16, x16, #0x38
  4026bc:	br	x17

00000000004026c0 <exit@plt>:
  4026c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #64]
  4026c8:	add	x16, x16, #0x40
  4026cc:	br	x17

00000000004026d0 <error@plt>:
  4026d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #72]
  4026d8:	add	x16, x16, #0x48
  4026dc:	br	x17

00000000004026e0 <acl_entries@plt>:
  4026e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #80]
  4026e8:	add	x16, x16, #0x50
  4026ec:	br	x17

00000000004026f0 <wctype@plt>:
  4026f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #88]
  4026f8:	add	x16, x16, #0x58
  4026fc:	br	x17

0000000000402700 <readlink@plt>:
  402700:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #96]
  402708:	add	x16, x16, #0x60
  40270c:	br	x17

0000000000402710 <ftell@plt>:
  402710:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #104]
  402718:	add	x16, x16, #0x68
  40271c:	br	x17

0000000000402720 <__cxa_atexit@plt>:
  402720:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #112]
  402728:	add	x16, x16, #0x70
  40272c:	br	x17

0000000000402730 <qsort@plt>:
  402730:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #120]
  402738:	add	x16, x16, #0x78
  40273c:	br	x17

0000000000402740 <setvbuf@plt>:
  402740:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #128]
  402748:	add	x16, x16, #0x80
  40274c:	br	x17

0000000000402750 <isblank@plt>:
  402750:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #136]
  402758:	add	x16, x16, #0x88
  40275c:	br	x17

0000000000402760 <__fwriting@plt>:
  402760:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #144]
  402768:	add	x16, x16, #0x90
  40276c:	br	x17

0000000000402770 <__ctype_tolower_loc@plt>:
  402770:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #152]
  402778:	add	x16, x16, #0x98
  40277c:	br	x17

0000000000402780 <fileno@plt>:
  402780:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #160]
  402788:	add	x16, x16, #0xa0
  40278c:	br	x17

0000000000402790 <acl_delete_def_file@plt>:
  402790:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #168]
  402798:	add	x16, x16, #0xa8
  40279c:	br	x17

00000000004027a0 <fclose@plt>:
  4027a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #176]
  4027a8:	add	x16, x16, #0xb0
  4027ac:	br	x17

00000000004027b0 <wctob@plt>:
  4027b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #184]
  4027b8:	add	x16, x16, #0xb8
  4027bc:	br	x17

00000000004027c0 <nl_langinfo@plt>:
  4027c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #192]
  4027c8:	add	x16, x16, #0xc0
  4027cc:	br	x17

00000000004027d0 <fopen@plt>:
  4027d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #200]
  4027d8:	add	x16, x16, #0xc8
  4027dc:	br	x17

00000000004027e0 <isspace@plt>:
  4027e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #208]
  4027e8:	add	x16, x16, #0xd0
  4027ec:	br	x17

00000000004027f0 <iswctype@plt>:
  4027f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #216]
  4027f8:	add	x16, x16, #0xd8
  4027fc:	br	x17

0000000000402800 <malloc@plt>:
  402800:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #224]
  402808:	add	x16, x16, #0xe0
  40280c:	br	x17

0000000000402810 <chmod@plt>:
  402810:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #232]
  402818:	add	x16, x16, #0xe8
  40281c:	br	x17

0000000000402820 <getdelim@plt>:
  402820:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #240]
  402828:	add	x16, x16, #0xf0
  40282c:	br	x17

0000000000402830 <islower@plt>:
  402830:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #248]
  402838:	add	x16, x16, #0xf8
  40283c:	br	x17

0000000000402840 <isxdigit@plt>:
  402840:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #256]
  402848:	add	x16, x16, #0x100
  40284c:	br	x17

0000000000402850 <popen@plt>:
  402850:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #264]
  402858:	add	x16, x16, #0x108
  40285c:	br	x17

0000000000402860 <strncmp@plt>:
  402860:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #272]
  402868:	add	x16, x16, #0x110
  40286c:	br	x17

0000000000402870 <bindtextdomain@plt>:
  402870:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #280]
  402878:	add	x16, x16, #0x118
  40287c:	br	x17

0000000000402880 <isdigit@plt>:
  402880:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #288]
  402888:	add	x16, x16, #0x120
  40288c:	br	x17

0000000000402890 <__libc_start_main@plt>:
  402890:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #296]
  402898:	add	x16, x16, #0x128
  40289c:	br	x17

00000000004028a0 <strverscmp@plt>:
  4028a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #304]
  4028a8:	add	x16, x16, #0x130
  4028ac:	br	x17

00000000004028b0 <__printf_chk@plt>:
  4028b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #312]
  4028b8:	add	x16, x16, #0x138
  4028bc:	br	x17

00000000004028c0 <acl_get_tag_type@plt>:
  4028c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #320]
  4028c8:	add	x16, x16, #0x140
  4028cc:	br	x17

00000000004028d0 <memset@plt>:
  4028d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #328]
  4028d8:	add	x16, x16, #0x148
  4028dc:	br	x17

00000000004028e0 <fdopen@plt>:
  4028e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #336]
  4028e8:	add	x16, x16, #0x150
  4028ec:	br	x17

00000000004028f0 <fchmod@plt>:
  4028f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #344]
  4028f8:	add	x16, x16, #0x158
  4028fc:	br	x17

0000000000402900 <__vfprintf_chk@plt>:
  402900:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #352]
  402908:	add	x16, x16, #0x160
  40290c:	br	x17

0000000000402910 <calloc@plt>:
  402910:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #360]
  402918:	add	x16, x16, #0x168
  40291c:	br	x17

0000000000402920 <isupper@plt>:
  402920:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #368]
  402928:	add	x16, x16, #0x170
  40292c:	br	x17

0000000000402930 <realloc@plt>:
  402930:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #376]
  402938:	add	x16, x16, #0x178
  40293c:	br	x17

0000000000402940 <__ctype_toupper_loc@plt>:
  402940:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #384]
  402948:	add	x16, x16, #0x180
  40294c:	br	x17

0000000000402950 <acl_set_file@plt>:
  402950:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #392]
  402958:	add	x16, x16, #0x188
  40295c:	br	x17

0000000000402960 <rewind@plt>:
  402960:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #400]
  402968:	add	x16, x16, #0x190
  40296c:	br	x17

0000000000402970 <acl_from_mode@plt>:
  402970:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #408]
  402978:	add	x16, x16, #0x198
  40297c:	br	x17

0000000000402980 <acl_get_fd@plt>:
  402980:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #416]
  402988:	add	x16, x16, #0x1a0
  40298c:	br	x17

0000000000402990 <strdup@plt>:
  402990:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #424]
  402998:	add	x16, x16, #0x1a8
  40299c:	br	x17

00000000004029a0 <strerror@plt>:
  4029a0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #432]
  4029a8:	add	x16, x16, #0x1b0
  4029ac:	br	x17

00000000004029b0 <strrchr@plt>:
  4029b0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #440]
  4029b8:	add	x16, x16, #0x1b8
  4029bc:	br	x17

00000000004029c0 <__gmon_start__@plt>:
  4029c0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #448]
  4029c8:	add	x16, x16, #0x1c0
  4029cc:	br	x17

00000000004029d0 <btowc@plt>:
  4029d0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #456]
  4029d8:	add	x16, x16, #0x1c8
  4029dc:	br	x17

00000000004029e0 <abort@plt>:
  4029e0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #464]
  4029e8:	add	x16, x16, #0x1d0
  4029ec:	br	x17

00000000004029f0 <mkostemp@plt>:
  4029f0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #472]
  4029f8:	add	x16, x16, #0x1d8
  4029fc:	br	x17

0000000000402a00 <iscntrl@plt>:
  402a00:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #480]
  402a08:	add	x16, x16, #0x1e0
  402a0c:	br	x17

0000000000402a10 <mbsinit@plt>:
  402a10:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #488]
  402a18:	add	x16, x16, #0x1e8
  402a1c:	br	x17

0000000000402a20 <__overflow@plt>:
  402a20:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #496]
  402a28:	add	x16, x16, #0x1f0
  402a2c:	br	x17

0000000000402a30 <ispunct@plt>:
  402a30:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #504]
  402a38:	add	x16, x16, #0x1f8
  402a3c:	br	x17

0000000000402a40 <puts@plt>:
  402a40:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #512]
  402a48:	add	x16, x16, #0x200
  402a4c:	br	x17

0000000000402a50 <fread_unlocked@plt>:
  402a50:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #520]
  402a58:	add	x16, x16, #0x208
  402a5c:	br	x17

0000000000402a60 <memcmp@plt>:
  402a60:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #528]
  402a68:	add	x16, x16, #0x210
  402a6c:	br	x17

0000000000402a70 <textdomain@plt>:
  402a70:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #536]
  402a78:	add	x16, x16, #0x218
  402a7c:	br	x17

0000000000402a80 <getopt_long@plt>:
  402a80:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #544]
  402a88:	add	x16, x16, #0x220
  402a8c:	br	x17

0000000000402a90 <__fprintf_chk@plt>:
  402a90:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #552]
  402a98:	add	x16, x16, #0x228
  402a9c:	br	x17

0000000000402aa0 <strcmp@plt>:
  402aa0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #560]
  402aa8:	add	x16, x16, #0x230
  402aac:	br	x17

0000000000402ab0 <__ctype_b_loc@plt>:
  402ab0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #568]
  402ab8:	add	x16, x16, #0x238
  402abc:	br	x17

0000000000402ac0 <acl_get_file@plt>:
  402ac0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #576]
  402ac8:	add	x16, x16, #0x240
  402acc:	br	x17

0000000000402ad0 <strtol@plt>:
  402ad0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #584]
  402ad8:	add	x16, x16, #0x248
  402adc:	br	x17

0000000000402ae0 <free@plt>:
  402ae0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #592]
  402ae8:	add	x16, x16, #0x250
  402aec:	br	x17

0000000000402af0 <ungetc@plt>:
  402af0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #600]
  402af8:	add	x16, x16, #0x258
  402afc:	br	x17

0000000000402b00 <__ctype_get_mb_cur_max@plt>:
  402b00:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #608]
  402b08:	add	x16, x16, #0x260
  402b0c:	br	x17

0000000000402b10 <acl_get_entry@plt>:
  402b10:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #616]
  402b18:	add	x16, x16, #0x268
  402b1c:	br	x17

0000000000402b20 <strchr@plt>:
  402b20:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #624]
  402b28:	add	x16, x16, #0x270
  402b2c:	br	x17

0000000000402b30 <memrchr@plt>:
  402b30:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #632]
  402b38:	add	x16, x16, #0x278
  402b3c:	br	x17

0000000000402b40 <rename@plt>:
  402b40:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #640]
  402b48:	add	x16, x16, #0x280
  402b4c:	br	x17

0000000000402b50 <fwrite@plt>:
  402b50:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #648]
  402b58:	add	x16, x16, #0x288
  402b5c:	br	x17

0000000000402b60 <fflush_unlocked@plt>:
  402b60:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #656]
  402b68:	add	x16, x16, #0x290
  402b6c:	br	x17

0000000000402b70 <dcngettext@plt>:
  402b70:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #664]
  402b78:	add	x16, x16, #0x298
  402b7c:	br	x17

0000000000402b80 <strcpy@plt>:
  402b80:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #672]
  402b88:	add	x16, x16, #0x2a0
  402b8c:	br	x17

0000000000402b90 <clearerr_unlocked@plt>:
  402b90:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #680]
  402b98:	add	x16, x16, #0x2a8
  402b9c:	br	x17

0000000000402ba0 <__lxstat@plt>:
  402ba0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #688]
  402ba8:	add	x16, x16, #0x2b0
  402bac:	br	x17

0000000000402bb0 <memchr@plt>:
  402bb0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #696]
  402bb8:	add	x16, x16, #0x2b8
  402bbc:	br	x17

0000000000402bc0 <isatty@plt>:
  402bc0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #704]
  402bc8:	add	x16, x16, #0x2c0
  402bcc:	br	x17

0000000000402bd0 <fputc_unlocked@plt>:
  402bd0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #712]
  402bd8:	add	x16, x16, #0x2c8
  402bdc:	br	x17

0000000000402be0 <isgraph@plt>:
  402be0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #720]
  402be8:	add	x16, x16, #0x2d0
  402bec:	br	x17

0000000000402bf0 <iswalnum@plt>:
  402bf0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #728]
  402bf8:	add	x16, x16, #0x2d8
  402bfc:	br	x17

0000000000402c00 <__fxstat@plt>:
  402c00:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #736]
  402c08:	add	x16, x16, #0x2e0
  402c0c:	br	x17

0000000000402c10 <strstr@plt>:
  402c10:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #744]
  402c18:	add	x16, x16, #0x2e8
  402c1c:	br	x17

0000000000402c20 <dcgettext@plt>:
  402c20:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #752]
  402c28:	add	x16, x16, #0x2f0
  402c2c:	br	x17

0000000000402c30 <fputs_unlocked@plt>:
  402c30:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #760]
  402c38:	add	x16, x16, #0x2f8
  402c3c:	br	x17

0000000000402c40 <strcoll@plt>:
  402c40:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #768]
  402c48:	add	x16, x16, #0x300
  402c4c:	br	x17

0000000000402c50 <isalnum@plt>:
  402c50:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #776]
  402c58:	add	x16, x16, #0x308
  402c5c:	br	x17

0000000000402c60 <pclose@plt>:
  402c60:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #784]
  402c68:	add	x16, x16, #0x310
  402c6c:	br	x17

0000000000402c70 <towupper@plt>:
  402c70:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #792]
  402c78:	add	x16, x16, #0x318
  402c7c:	br	x17

0000000000402c80 <iswprint@plt>:
  402c80:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #800]
  402c88:	add	x16, x16, #0x320
  402c8c:	br	x17

0000000000402c90 <umask@plt>:
  402c90:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #808]
  402c98:	add	x16, x16, #0x328
  402c9c:	br	x17

0000000000402ca0 <__assert_fail@plt>:
  402ca0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #816]
  402ca8:	add	x16, x16, #0x330
  402cac:	br	x17

0000000000402cb0 <__errno_location@plt>:
  402cb0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #824]
  402cb8:	add	x16, x16, #0x338
  402cbc:	br	x17

0000000000402cc0 <getenv@plt>:
  402cc0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #832]
  402cc8:	add	x16, x16, #0x340
  402ccc:	br	x17

0000000000402cd0 <unlink@plt>:
  402cd0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #840]
  402cd8:	add	x16, x16, #0x348
  402cdc:	br	x17

0000000000402ce0 <fchown@plt>:
  402ce0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #848]
  402ce8:	add	x16, x16, #0x350
  402cec:	br	x17

0000000000402cf0 <towlower@plt>:
  402cf0:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #856]
  402cf8:	add	x16, x16, #0x358
  402cfc:	br	x17

0000000000402d00 <__uflow@plt>:
  402d00:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #864]
  402d08:	add	x16, x16, #0x360
  402d0c:	br	x17

0000000000402d10 <isprint@plt>:
  402d10:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #872]
  402d18:	add	x16, x16, #0x368
  402d1c:	br	x17

0000000000402d20 <setlocale@plt>:
  402d20:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #880]
  402d28:	add	x16, x16, #0x370
  402d2c:	br	x17

0000000000402d30 <acl_free@plt>:
  402d30:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #888]
  402d38:	add	x16, x16, #0x378
  402d3c:	br	x17

0000000000402d40 <wcrtomb@plt>:
  402d40:	adrp	x16, 438000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #896]
  402d48:	add	x16, x16, #0x380
  402d4c:	br	x17

Disassembly of section .text:

0000000000402d50 <_obstack_begin@@Base-0x103bc>:
  402d50:	mov	x29, #0x0                   	// #0
  402d54:	mov	x30, #0x0                   	// #0
  402d58:	mov	x5, x0
  402d5c:	ldr	x1, [sp]
  402d60:	add	x2, sp, #0x8
  402d64:	mov	x6, sp
  402d68:	movz	x0, #0x0, lsl #48
  402d6c:	movk	x0, #0x0, lsl #32
  402d70:	movk	x0, #0x40, lsl #16
  402d74:	movk	x0, #0x9e30
  402d78:	movz	x3, #0x0, lsl #48
  402d7c:	movk	x3, #0x0, lsl #32
  402d80:	movk	x3, #0x42, lsl #16
  402d84:	movk	x3, #0x168
  402d88:	movz	x4, #0x0, lsl #48
  402d8c:	movk	x4, #0x0, lsl #32
  402d90:	movk	x4, #0x42, lsl #16
  402d94:	movk	x4, #0x1e8
  402d98:	bl	402890 <__libc_start_main@plt>
  402d9c:	bl	4029e0 <abort@plt>
  402da0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23cd0>
  402da4:	ldr	x0, [x0, #4064]
  402da8:	cbz	x0, 402db0 <wcrtomb@plt+0x70>
  402dac:	b	4029c0 <__gmon_start__@plt>
  402db0:	ret
  402db4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402db8:	add	x0, x0, #0x4e8
  402dbc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402dc0:	add	x1, x1, #0x4e8
  402dc4:	cmp	x0, x1
  402dc8:	b.eq	402dfc <wcrtomb@plt+0xbc>  // b.none
  402dcc:	stp	x29, x30, [sp, #-32]!
  402dd0:	mov	x29, sp
  402dd4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  402dd8:	ldr	x0, [x0, #536]
  402ddc:	str	x0, [sp, #24]
  402de0:	mov	x1, x0
  402de4:	cbz	x1, 402df4 <wcrtomb@plt+0xb4>
  402de8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402dec:	add	x0, x0, #0x4e8
  402df0:	blr	x1
  402df4:	ldp	x29, x30, [sp], #32
  402df8:	ret
  402dfc:	ret
  402e00:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402e04:	add	x0, x0, #0x4e8
  402e08:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402e0c:	add	x1, x1, #0x4e8
  402e10:	sub	x0, x0, x1
  402e14:	lsr	x1, x0, #63
  402e18:	add	x0, x1, x0, asr #3
  402e1c:	cmp	xzr, x0, asr #1
  402e20:	b.eq	402e58 <wcrtomb@plt+0x118>  // b.none
  402e24:	stp	x29, x30, [sp, #-32]!
  402e28:	mov	x29, sp
  402e2c:	asr	x1, x0, #1
  402e30:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  402e34:	ldr	x0, [x0, #544]
  402e38:	str	x0, [sp, #24]
  402e3c:	mov	x2, x0
  402e40:	cbz	x2, 402e50 <wcrtomb@plt+0x110>
  402e44:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402e48:	add	x0, x0, #0x4e8
  402e4c:	blr	x2
  402e50:	ldp	x29, x30, [sp], #32
  402e54:	ret
  402e58:	ret
  402e5c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402e60:	ldrb	w0, [x0, #1312]
  402e64:	cbnz	w0, 402e88 <wcrtomb@plt+0x148>
  402e68:	stp	x29, x30, [sp, #-16]!
  402e6c:	mov	x29, sp
  402e70:	bl	402db4 <wcrtomb@plt+0x74>
  402e74:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402e78:	mov	w1, #0x1                   	// #1
  402e7c:	strb	w1, [x0, #1312]
  402e80:	ldp	x29, x30, [sp], #16
  402e84:	ret
  402e88:	ret
  402e8c:	stp	x29, x30, [sp, #-16]!
  402e90:	mov	x29, sp
  402e94:	bl	402e00 <wcrtomb@plt+0xc0>
  402e98:	ldp	x29, x30, [sp], #16
  402e9c:	ret
  402ea0:	stp	x29, x30, [sp, #-48]!
  402ea4:	mov	x29, sp
  402ea8:	stp	x19, x20, [sp, #16]
  402eac:	str	x21, [sp, #32]
  402eb0:	mov	x21, x0
  402eb4:	mov	x20, x1
  402eb8:	mov	w19, w2
  402ebc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402ec0:	add	x0, x0, #0x528
  402ec4:	ldr	x1, [x0, #32]
  402ec8:	ldr	x0, [x0, #24]
  402ecc:	sub	x0, x1, x0
  402ed0:	cmp	x0, #0x1f
  402ed4:	b.ls	402f60 <wcrtomb@plt+0x220>  // b.plast
  402ed8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402edc:	add	x0, x0, #0x528
  402ee0:	ldr	x5, [x0, #24]
  402ee4:	add	x5, x5, #0x20
  402ee8:	ldr	x0, [x0, #16]
  402eec:	cmp	x5, x0
  402ef0:	b.eq	402f74 <wcrtomb@plt+0x234>  // b.none
  402ef4:	adrp	x4, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402ef8:	add	x4, x4, #0x528
  402efc:	ldr	x3, [x4, #48]
  402f00:	add	x5, x5, x3
  402f04:	bic	x3, x5, x3
  402f08:	str	x3, [x4, #24]
  402f0c:	ldr	x1, [x4, #8]
  402f10:	ldr	x2, [x4, #32]
  402f14:	sub	x3, x3, x1
  402f18:	sub	x1, x2, x1
  402f1c:	cmp	x3, x1
  402f20:	b.ls	402f2c <wcrtomb@plt+0x1ec>  // b.plast
  402f24:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402f28:	str	x2, [x1, #1344]
  402f2c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402f30:	add	x1, x1, #0x528
  402f34:	ldr	x2, [x1, #24]
  402f38:	str	x2, [x1, #16]
  402f3c:	str	x21, [x0]
  402f40:	str	x20, [x0, #8]
  402f44:	mov	w1, #0xffffffff            	// #-1
  402f48:	str	w1, [x0, #16]
  402f4c:	str	w19, [x0, #20]
  402f50:	ldp	x19, x20, [sp, #16]
  402f54:	ldr	x21, [sp, #32]
  402f58:	ldp	x29, x30, [sp], #48
  402f5c:	ret
  402f60:	mov	x1, #0x20                  	// #32
  402f64:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402f68:	add	x0, x0, #0x528
  402f6c:	bl	413160 <_obstack_newchunk@@Base>
  402f70:	b	402ed8 <wcrtomb@plt+0x198>
  402f74:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402f78:	add	x1, x1, #0x528
  402f7c:	ldrb	w2, [x1, #80]
  402f80:	orr	w2, w2, #0x2
  402f84:	strb	w2, [x1, #80]
  402f88:	b	402ef4 <wcrtomb@plt+0x1b4>
  402f8c:	cmn	w0, #0x1
  402f90:	b.eq	40301c <wcrtomb@plt+0x2dc>  // b.none
  402f94:	stp	x29, x30, [sp, #-16]!
  402f98:	mov	x29, sp
  402f9c:	cmp	w0, #0xa
  402fa0:	b.eq	402fe0 <wcrtomb@plt+0x2a0>  // b.none
  402fa4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402fa8:	ldr	x1, [x1, #1440]
  402fac:	cbz	x1, 40300c <wcrtomb@plt+0x2cc>
  402fb0:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402fb4:	ldr	x2, [x2, #1432]
  402fb8:	cmp	x1, x2
  402fbc:	b.ls	402ffc <wcrtomb@plt+0x2bc>  // b.plast
  402fc0:	sub	x3, x1, #0x1
  402fc4:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402fc8:	str	x3, [x2, #1440]
  402fcc:	ldurb	w1, [x1, #-1]
  402fd0:	cmp	w1, w0
  402fd4:	b.ne	402ffc <wcrtomb@plt+0x2bc>  // b.any
  402fd8:	ldp	x29, x30, [sp], #16
  402fdc:	ret
  402fe0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402fe4:	ldr	x1, [x1, #1416]
  402fe8:	cbz	x1, 402fa4 <wcrtomb@plt+0x264>
  402fec:	sub	x1, x1, #0x1
  402ff0:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  402ff4:	str	x1, [x2, #1416]
  402ff8:	b	402fa4 <wcrtomb@plt+0x264>
  402ffc:	mov	w1, w0
  403000:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  403004:	add	x0, x0, #0x228
  403008:	bl	40a510 <wcrtomb@plt+0x77d0>
  40300c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403010:	ldr	x1, [x1, #1456]
  403014:	bl	402af0 <ungetc@plt>
  403018:	b	402fd8 <wcrtomb@plt+0x298>
  40301c:	ret
  403020:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403024:	ldr	x0, [x0, #1440]
  403028:	cbz	x0, 403058 <wcrtomb@plt+0x318>
  40302c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403030:	ldr	x1, [x1, #1448]
  403034:	cmp	x0, x1
  403038:	b.cs	4030bc <wcrtomb@plt+0x37c>  // b.hs, b.nlast
  40303c:	add	x2, x0, #0x1
  403040:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403044:	str	x2, [x1, #1440]
  403048:	ldrb	w0, [x0]
  40304c:	cmp	w0, #0xa
  403050:	b.eq	4030d4 <wcrtomb@plt+0x394>  // b.none
  403054:	ret
  403058:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40305c:	ldr	x0, [x0, #1456]
  403060:	cbz	x0, 4030c4 <wcrtomb@plt+0x384>
  403064:	ldr	w1, [x0]
  403068:	tbnz	w1, #4, 4030cc <wcrtomb@plt+0x38c>
  40306c:	ldr	x1, [x0, #8]
  403070:	ldr	x2, [x0, #16]
  403074:	cmp	x1, x2
  403078:	b.cs	40308c <wcrtomb@plt+0x34c>  // b.hs, b.nlast
  40307c:	add	x2, x1, #0x1
  403080:	str	x2, [x0, #8]
  403084:	ldrb	w0, [x1]
  403088:	b	40304c <wcrtomb@plt+0x30c>
  40308c:	stp	x29, x30, [sp, #-16]!
  403090:	mov	x29, sp
  403094:	bl	402d00 <__uflow@plt>
  403098:	cmp	w0, #0xa
  40309c:	b.ne	4030b4 <wcrtomb@plt+0x374>  // b.any
  4030a0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4030a4:	add	x1, x1, #0x528
  4030a8:	ldr	x2, [x1, #96]
  4030ac:	add	x2, x2, #0x1
  4030b0:	str	x2, [x1, #96]
  4030b4:	ldp	x29, x30, [sp], #16
  4030b8:	ret
  4030bc:	mov	w0, #0xffffffff            	// #-1
  4030c0:	ret
  4030c4:	mov	w0, #0xffffffff            	// #-1
  4030c8:	ret
  4030cc:	mov	w0, #0xffffffff            	// #-1
  4030d0:	ret
  4030d4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4030d8:	add	x1, x1, #0x528
  4030dc:	ldr	x2, [x1, #96]
  4030e0:	add	x2, x2, #0x1
  4030e4:	str	x2, [x1, #96]
  4030e8:	b	403054 <wcrtomb@plt+0x314>
  4030ec:	stp	x29, x30, [sp, #-32]!
  4030f0:	mov	x29, sp
  4030f4:	str	x19, [sp, #16]
  4030f8:	bl	403020 <wcrtomb@plt+0x2e0>
  4030fc:	mov	w19, w0
  403100:	bl	402ab0 <__ctype_b_loc@plt>
  403104:	ldr	x0, [x0]
  403108:	ldrh	w0, [x0, w19, sxtw #1]
  40310c:	tbnz	w0, #0, 4030f8 <wcrtomb@plt+0x3b8>
  403110:	mov	w0, w19
  403114:	ldr	x19, [sp, #16]
  403118:	ldp	x29, x30, [sp], #32
  40311c:	ret
  403120:	stp	x29, x30, [sp, #-64]!
  403124:	mov	x29, sp
  403128:	stp	x19, x20, [sp, #16]
  40312c:	bl	40aeb0 <wcrtomb@plt+0x8170>
  403130:	mov	x20, x0
  403134:	bl	4030ec <wcrtomb@plt+0x3ac>
  403138:	mov	w19, w0
  40313c:	cmp	w0, #0xa
  403140:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  403144:	b.eq	4031b0 <wcrtomb@plt+0x470>  // b.none
  403148:	stp	x21, x22, [sp, #32]
  40314c:	str	x23, [sp, #48]
  403150:	bl	402ab0 <__ctype_b_loc@plt>
  403154:	mov	x21, x0
  403158:	mov	w23, #0x7d                  	// #125
  40315c:	mov	w22, #0x23                  	// #35
  403160:	ldr	x1, [x21]
  403164:	ldrh	w1, [x1, w19, sxtw #1]
  403168:	tbnz	w1, #0, 4031ec <wcrtomb@plt+0x4ac>
  40316c:	cmp	w19, #0x3b
  403170:	ccmp	w19, w23, #0x4, ne  // ne = any
  403174:	ccmp	w19, w22, #0x4, ne  // ne = any
  403178:	b.eq	4031a8 <wcrtomb@plt+0x468>  // b.none
  40317c:	mov	w1, w19
  403180:	mov	x0, x20
  403184:	bl	40af78 <wcrtomb@plt+0x8238>
  403188:	bl	403020 <wcrtomb@plt+0x2e0>
  40318c:	mov	w19, w0
  403190:	cmp	w0, #0xa
  403194:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  403198:	b.ne	403160 <wcrtomb@plt+0x420>  // b.any
  40319c:	ldp	x21, x22, [sp, #32]
  4031a0:	ldr	x23, [sp, #48]
  4031a4:	b	4031b0 <wcrtomb@plt+0x470>
  4031a8:	ldp	x21, x22, [sp, #32]
  4031ac:	ldr	x23, [sp, #48]
  4031b0:	mov	w0, w19
  4031b4:	bl	402f8c <wcrtomb@plt+0x24c>
  4031b8:	mov	w1, #0x0                   	// #0
  4031bc:	mov	x0, x20
  4031c0:	bl	40af78 <wcrtomb@plt+0x8238>
  4031c4:	mov	x0, x20
  4031c8:	bl	40aef4 <wcrtomb@plt+0x81b4>
  4031cc:	bl	412ecc <wcrtomb@plt+0x1018c>
  4031d0:	mov	x19, x0
  4031d4:	mov	x0, x20
  4031d8:	bl	40afe0 <wcrtomb@plt+0x82a0>
  4031dc:	mov	x0, x19
  4031e0:	ldp	x19, x20, [sp, #16]
  4031e4:	ldp	x29, x30, [sp], #64
  4031e8:	ret
  4031ec:	ldp	x21, x22, [sp, #32]
  4031f0:	ldr	x23, [sp, #48]
  4031f4:	b	4031b0 <wcrtomb@plt+0x470>
  4031f8:	stp	x29, x30, [sp, #-48]!
  4031fc:	mov	x29, sp
  403200:	stp	x19, x20, [sp, #16]
  403204:	str	x21, [sp, #32]
  403208:	mov	w19, w0
  40320c:	bl	402ab0 <__ctype_b_loc@plt>
  403210:	mov	x21, x0
  403214:	mov	x20, #0x0                   	// #0
  403218:	and	x1, x19, #0xff
  40321c:	ldr	x0, [x21]
  403220:	ldrh	w1, [x0, x1, lsl #1]
  403224:	tbz	w1, #11, 403244 <wcrtomb@plt+0x504>
  403228:	add	x20, x20, x20, lsl #2
  40322c:	sxtw	x19, w19
  403230:	add	x19, x19, x20, lsl #1
  403234:	sub	x20, x19, #0x30
  403238:	bl	403020 <wcrtomb@plt+0x2e0>
  40323c:	mov	w19, w0
  403240:	b	403218 <wcrtomb@plt+0x4d8>
  403244:	mov	w0, w19
  403248:	bl	402f8c <wcrtomb@plt+0x24c>
  40324c:	mov	x0, x20
  403250:	ldp	x19, x20, [sp, #16]
  403254:	ldr	x21, [sp, #32]
  403258:	ldp	x29, x30, [sp], #48
  40325c:	ret
  403260:	stp	x29, x30, [sp, #-48]!
  403264:	mov	x29, sp
  403268:	stp	x19, x20, [sp, #16]
  40326c:	stp	x21, x22, [sp, #32]
  403270:	mov	x20, x0
  403274:	mov	x22, x1
  403278:	mov	x21, x2
  40327c:	mov	x19, x3
  403280:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403284:	add	x0, x0, #0x528
  403288:	ldr	x1, [x0, #32]
  40328c:	ldr	x0, [x0, #24]
  403290:	sub	x0, x1, x0
  403294:	cmp	x0, #0x2f
  403298:	b.ls	403330 <wcrtomb@plt+0x5f0>  // b.plast
  40329c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4032a0:	add	x0, x0, #0x528
  4032a4:	ldr	x1, [x0, #24]
  4032a8:	add	x1, x1, #0x30
  4032ac:	ldr	x0, [x0, #16]
  4032b0:	cmp	x1, x0
  4032b4:	b.eq	403344 <wcrtomb@plt+0x604>  // b.none
  4032b8:	adrp	x5, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4032bc:	add	x5, x5, #0x528
  4032c0:	ldr	x4, [x5, #48]
  4032c4:	add	x1, x1, x4
  4032c8:	bic	x4, x1, x4
  4032cc:	str	x4, [x5, #24]
  4032d0:	ldr	x1, [x5, #8]
  4032d4:	ldr	x2, [x5, #32]
  4032d8:	sub	x4, x4, x1
  4032dc:	sub	x1, x2, x1
  4032e0:	cmp	x4, x1
  4032e4:	b.ls	4032f0 <wcrtomb@plt+0x5b0>  // b.plast
  4032e8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4032ec:	str	x2, [x1, #1344]
  4032f0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4032f4:	add	x1, x1, #0x528
  4032f8:	ldr	x2, [x1, #24]
  4032fc:	str	x2, [x1, #16]
  403300:	str	x22, [x0]
  403304:	str	x21, [x0, #8]
  403308:	cbz	x19, 40331c <wcrtomb@plt+0x5dc>
  40330c:	ldp	x2, x3, [x19]
  403310:	stp	x2, x3, [x0, #16]
  403314:	ldr	x1, [x19, #16]
  403318:	str	x1, [x0, #32]
  40331c:	str	x20, [x0, #40]
  403320:	ldp	x19, x20, [sp, #16]
  403324:	ldp	x21, x22, [sp, #32]
  403328:	ldp	x29, x30, [sp], #48
  40332c:	ret
  403330:	mov	x1, #0x30                  	// #48
  403334:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403338:	add	x0, x0, #0x528
  40333c:	bl	413160 <_obstack_newchunk@@Base>
  403340:	b	40329c <wcrtomb@plt+0x55c>
  403344:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403348:	add	x2, x2, #0x528
  40334c:	ldrb	w3, [x2, #80]
  403350:	orr	w3, w3, #0x2
  403354:	strb	w3, [x2, #80]
  403358:	b	4032b8 <wcrtomb@plt+0x578>
  40335c:	stp	x29, x30, [sp, #-32]!
  403360:	mov	x29, sp
  403364:	stp	x19, x20, [sp, #16]
  403368:	mov	x19, x0
  40336c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403370:	ldr	x0, [x0, #1408]
  403374:	cbz	x0, 4033c8 <wcrtomb@plt+0x688>
  403378:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40337c:	ldr	x20, [x0, #1264]
  403380:	mov	w2, #0x5                   	// #5
  403384:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  403388:	add	x1, x1, #0x258
  40338c:	mov	x0, #0x0                   	// #0
  403390:	bl	402c20 <dcgettext@plt>
  403394:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403398:	add	x1, x1, #0x528
  40339c:	mov	x6, x19
  4033a0:	ldr	x5, [x1, #96]
  4033a4:	ldr	x4, [x1, #88]
  4033a8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4033ac:	ldr	x3, [x1, #1936]
  4033b0:	mov	x2, x0
  4033b4:	mov	w1, #0x1                   	// #1
  4033b8:	mov	x0, x20
  4033bc:	bl	402a90 <__fprintf_chk@plt>
  4033c0:	mov	w0, #0x1                   	// #1
  4033c4:	bl	4026c0 <exit@plt>
  4033c8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4033cc:	ldr	x20, [x0, #1264]
  4033d0:	mov	w2, #0x5                   	// #5
  4033d4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4033d8:	add	x1, x1, #0x278
  4033dc:	mov	x0, #0x0                   	// #0
  4033e0:	bl	402c20 <dcgettext@plt>
  4033e4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4033e8:	add	x1, x1, #0x528
  4033ec:	ldr	x5, [x1, #120]
  4033f0:	ldr	x2, [x1, #112]
  4033f4:	mov	x6, x19
  4033f8:	sub	x5, x5, x2
  4033fc:	ldr	x4, [x1, #104]
  403400:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403404:	ldr	x3, [x1, #1936]
  403408:	mov	x2, x0
  40340c:	mov	w1, #0x1                   	// #1
  403410:	mov	x0, x20
  403414:	bl	402a90 <__fprintf_chk@plt>
  403418:	b	4033c0 <wcrtomb@plt+0x680>
  40341c:	stp	x29, x30, [sp, #-32]!
  403420:	mov	x29, sp
  403424:	str	x19, [sp, #16]
  403428:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40342c:	ldrb	w0, [x0, #1900]
  403430:	cbnz	w0, 403488 <wcrtomb@plt+0x748>
  403434:	bl	40aeb0 <wcrtomb@plt+0x8170>
  403438:	mov	x19, x0
  40343c:	bl	4030ec <wcrtomb@plt+0x3ac>
  403440:	mov	w1, w0
  403444:	cmp	w0, #0xa
  403448:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  40344c:	b.eq	40346c <wcrtomb@plt+0x72c>  // b.none
  403450:	mov	x0, x19
  403454:	bl	40af78 <wcrtomb@plt+0x8238>
  403458:	bl	403020 <wcrtomb@plt+0x2e0>
  40345c:	mov	w1, w0
  403460:	cmp	w0, #0xa
  403464:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  403468:	b.ne	403450 <wcrtomb@plt+0x710>  // b.any
  40346c:	mov	w1, #0x0                   	// #0
  403470:	mov	x0, x19
  403474:	bl	40af78 <wcrtomb@plt+0x8238>
  403478:	mov	x0, x19
  40347c:	ldr	x19, [sp, #16]
  403480:	ldp	x29, x30, [sp], #32
  403484:	ret
  403488:	mov	w2, #0x5                   	// #5
  40348c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  403490:	add	x1, x1, #0x448
  403494:	add	x1, x1, #0x334
  403498:	mov	x0, #0x0                   	// #0
  40349c:	bl	402c20 <dcgettext@plt>
  4034a0:	bl	40335c <wcrtomb@plt+0x61c>
  4034a4:	stp	x29, x30, [sp, #-80]!
  4034a8:	mov	x29, sp
  4034ac:	stp	x19, x20, [sp, #16]
  4034b0:	stp	x21, x22, [sp, #32]
  4034b4:	stp	x23, x24, [sp, #48]
  4034b8:	str	x25, [sp, #64]
  4034bc:	mov	x22, x0
  4034c0:	mov	x24, x1
  4034c4:	mov	w25, w2
  4034c8:	bl	40341c <wcrtomb@plt+0x6dc>
  4034cc:	mov	x23, x0
  4034d0:	bl	40aef4 <wcrtomb@plt+0x81b4>
  4034d4:	mov	x20, x0
  4034d8:	ldrb	w0, [x0]
  4034dc:	cbz	w0, 403618 <wcrtomb@plt+0x8d8>
  4034e0:	ldr	x19, [x22]
  4034e4:	cbz	x19, 403500 <wcrtomb@plt+0x7c0>
  4034e8:	mov	x1, x20
  4034ec:	ldr	x0, [x19]
  4034f0:	bl	402aa0 <strcmp@plt>
  4034f4:	cbz	w0, 40367c <wcrtomb@plt+0x93c>
  4034f8:	ldr	x19, [x19, #24]
  4034fc:	cbnz	x19, 4034e8 <wcrtomb@plt+0x7a8>
  403500:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403504:	ldr	w0, [x0, #2264]
  403508:	cbnz	w0, 403568 <wcrtomb@plt+0x828>
  40350c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403510:	add	x0, x0, #0x528
  403514:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403518:	ldr	x1, [x1, #1296]
  40351c:	str	x1, [x0, #144]
  403520:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403524:	ldr	x1, [x1, #1288]
  403528:	str	x1, [x0, #152]
  40352c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403530:	ldr	x1, [x1, #1264]
  403534:	str	x1, [x0, #160]
  403538:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40353c:	ldr	x0, [x0, #920]
  403540:	mov	x19, #0x0                   	// #0
  403544:	cbz	x0, 403568 <wcrtomb@plt+0x828>
  403548:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40354c:	add	x21, x21, #0x398
  403550:	mov	x1, x20
  403554:	bl	402aa0 <strcmp@plt>
  403558:	cbz	w0, 403634 <wcrtomb@plt+0x8f4>
  40355c:	ldr	x0, [x21, #40]!
  403560:	cbnz	x0, 403550 <wcrtomb@plt+0x810>
  403564:	cbnz	x19, 403688 <wcrtomb@plt+0x948>
  403568:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40356c:	add	x0, x0, #0x528
  403570:	ldr	x1, [x0, #32]
  403574:	ldr	x0, [x0, #24]
  403578:	sub	x0, x1, x0
  40357c:	cmp	x0, #0x1f
  403580:	b.ls	403650 <wcrtomb@plt+0x910>  // b.plast
  403584:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403588:	add	x0, x0, #0x528
  40358c:	ldr	x2, [x0, #24]
  403590:	add	x2, x2, #0x20
  403594:	ldr	x19, [x0, #16]
  403598:	cmp	x2, x19
  40359c:	b.eq	403664 <wcrtomb@plt+0x924>  // b.none
  4035a0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4035a4:	add	x1, x1, #0x528
  4035a8:	ldr	x0, [x1, #48]
  4035ac:	add	x2, x2, x0
  4035b0:	bic	x0, x2, x0
  4035b4:	str	x0, [x1, #24]
  4035b8:	ldr	x2, [x1, #8]
  4035bc:	ldr	x1, [x1, #32]
  4035c0:	sub	x0, x0, x2
  4035c4:	sub	x2, x1, x2
  4035c8:	cmp	x0, x2
  4035cc:	b.ls	4035d8 <wcrtomb@plt+0x898>  // b.plast
  4035d0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4035d4:	str	x1, [x0, #1344]
  4035d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4035dc:	add	x0, x0, #0x528
  4035e0:	ldr	x1, [x0, #24]
  4035e4:	str	x1, [x0, #16]
  4035e8:	mov	x0, x20
  4035ec:	bl	412ecc <wcrtomb@plt+0x1018c>
  4035f0:	str	x0, [x19]
  4035f4:	mov	w2, w25
  4035f8:	mov	x1, x24
  4035fc:	bl	40a6b4 <wcrtomb@plt+0x7974>
  403600:	str	x0, [x19, #16]
  403604:	strb	wzr, [x19, #8]
  403608:	ldr	x0, [x22]
  40360c:	str	x0, [x19, #24]
  403610:	str	x19, [x22]
  403614:	b	403688 <wcrtomb@plt+0x948>
  403618:	mov	w2, #0x5                   	// #5
  40361c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  403620:	add	x1, x1, #0x448
  403624:	add	x1, x1, #0x35c
  403628:	mov	x0, #0x0                   	// #0
  40362c:	bl	402c20 <dcgettext@plt>
  403630:	bl	40335c <wcrtomb@plt+0x61c>
  403634:	ldr	x0, [x21, #32]
  403638:	ldr	x0, [x0]
  40363c:	str	x0, [x21, #16]
  403640:	mov	x0, x23
  403644:	bl	40afe0 <wcrtomb@plt+0x82a0>
  403648:	mov	x19, x21
  40364c:	b	403690 <wcrtomb@plt+0x950>
  403650:	mov	x1, #0x20                  	// #32
  403654:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403658:	add	x0, x0, #0x528
  40365c:	bl	413160 <_obstack_newchunk@@Base>
  403660:	b	403584 <wcrtomb@plt+0x844>
  403664:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403668:	add	x0, x0, #0x528
  40366c:	ldrb	w1, [x0, #80]
  403670:	orr	w1, w1, #0x2
  403674:	strb	w1, [x0, #80]
  403678:	b	4035a0 <wcrtomb@plt+0x860>
  40367c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403680:	ldr	w0, [x0, #2264]
  403684:	cbz	w0, 4036ac <wcrtomb@plt+0x96c>
  403688:	mov	x0, x23
  40368c:	bl	40afe0 <wcrtomb@plt+0x82a0>
  403690:	mov	x0, x19
  403694:	ldp	x19, x20, [sp, #16]
  403698:	ldp	x21, x22, [sp, #32]
  40369c:	ldp	x23, x24, [sp, #48]
  4036a0:	ldr	x25, [sp, #64]
  4036a4:	ldp	x29, x30, [sp], #80
  4036a8:	ret
  4036ac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4036b0:	add	x0, x0, #0x528
  4036b4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4036b8:	ldr	x1, [x1, #1296]
  4036bc:	str	x1, [x0, #144]
  4036c0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4036c4:	ldr	x1, [x1, #1288]
  4036c8:	str	x1, [x0, #152]
  4036cc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4036d0:	ldr	x1, [x1, #1264]
  4036d4:	str	x1, [x0, #160]
  4036d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4036dc:	ldr	x0, [x0, #920]
  4036e0:	cbnz	x0, 403548 <wcrtomb@plt+0x808>
  4036e4:	b	403688 <wcrtomb@plt+0x948>
  4036e8:	stp	x29, x30, [sp, #-112]!
  4036ec:	mov	x29, sp
  4036f0:	stp	x19, x20, [sp, #16]
  4036f4:	stp	x21, x22, [sp, #32]
  4036f8:	stp	x23, x24, [sp, #48]
  4036fc:	stp	x25, x26, [sp, #64]
  403700:	stp	x27, x28, [sp, #80]
  403704:	mov	w23, w0
  403708:	mov	w24, w1
  40370c:	str	xzr, [sp, #104]
  403710:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403714:	ldr	w0, [x0, #2260]
  403718:	cmp	w0, #0x1
  40371c:	b.eq	403730 <wcrtomb@plt+0x9f0>  // b.none
  403720:	add	x1, sp, #0x68
  403724:	mov	w0, w23
  403728:	bl	4091c8 <wcrtomb@plt+0x6488>
  40372c:	cbnz	w0, 40374c <wcrtomb@plt+0xa0c>
  403730:	str	xzr, [sp, #104]
  403734:	bl	40aeb0 <wcrtomb@plt+0x8170>
  403738:	mov	x20, x0
  40373c:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403740:	add	x22, x22, #0x8d4
  403744:	mov	w27, #0x5b                  	// #91
  403748:	b	403778 <wcrtomb@plt+0xa38>
  40374c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  403750:	add	x0, x0, #0x448
  403754:	add	x0, x0, #0x260
  403758:	bl	40335c <wcrtomb@plt+0x61c>
  40375c:	add	x1, sp, #0x68
  403760:	mov	w0, w19
  403764:	bl	4091c8 <wcrtomb@plt+0x6488>
  403768:	cbz	w0, 403798 <wcrtomb@plt+0xa58>
  40376c:	mov	w1, w19
  403770:	mov	x0, x20
  403774:	bl	40af78 <wcrtomb@plt+0x8238>
  403778:	bl	403020 <wcrtomb@plt+0x2e0>
  40377c:	mov	w19, w0
  403780:	cmp	w0, #0xa
  403784:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  403788:	b.eq	40398c <wcrtomb@plt+0xc4c>  // b.none
  40378c:	ldr	w0, [x22]
  403790:	cmp	w0, #0x1
  403794:	b.ne	40375c <wcrtomb@plt+0xa1c>  // b.any
  403798:	cmp	w23, w19
  40379c:	b.eq	4039a0 <wcrtomb@plt+0xc60>  // b.none
  4037a0:	cmp	w19, #0x5c
  4037a4:	b.eq	4037e8 <wcrtomb@plt+0xaa8>  // b.none
  4037a8:	cmp	w19, #0x5b
  4037ac:	ccmp	w24, #0x0, #0x4, eq  // eq = none
  4037b0:	b.eq	40376c <wcrtomb@plt+0xa2c>  // b.none
  4037b4:	mov	w1, w27
  4037b8:	mov	x0, x20
  4037bc:	bl	40af78 <wcrtomb@plt+0x8238>
  4037c0:	bl	403020 <wcrtomb@plt+0x2e0>
  4037c4:	mov	w19, w0
  4037c8:	cmp	w0, #0x5e
  4037cc:	b.eq	403830 <wcrtomb@plt+0xaf0>  // b.none
  4037d0:	cmp	w19, #0x5d
  4037d4:	b.eq	403848 <wcrtomb@plt+0xb08>  // b.none
  4037d8:	mov	w21, #0x0                   	// #0
  4037dc:	mov	w25, #0x0                   	// #0
  4037e0:	mov	w26, #0x1                   	// #1
  4037e4:	b	4038d4 <wcrtomb@plt+0xb94>
  4037e8:	bl	403020 <wcrtomb@plt+0x2e0>
  4037ec:	mov	w19, w0
  4037f0:	cmn	w0, #0x1
  4037f4:	b.eq	403994 <wcrtomb@plt+0xc54>  // b.none
  4037f8:	cmp	w0, #0x6e
  4037fc:	ccmp	w24, #0x0, #0x4, eq  // eq = none
  403800:	b.ne	403930 <wcrtomb@plt+0xbf0>  // b.any
  403804:	cmp	w0, #0xa
  403808:	b.eq	40376c <wcrtomb@plt+0xa2c>  // b.none
  40380c:	cmp	w23, w0
  403810:	b.ne	403820 <wcrtomb@plt+0xae0>  // b.any
  403814:	cmp	w0, #0x26
  403818:	ccmp	w24, #0x0, #0x0, eq  // eq = none
  40381c:	b.ne	40376c <wcrtomb@plt+0xa2c>  // b.any
  403820:	mov	w1, #0x5c                  	// #92
  403824:	mov	x0, x20
  403828:	bl	40af78 <wcrtomb@plt+0x8238>
  40382c:	b	40376c <wcrtomb@plt+0xa2c>
  403830:	mov	w1, #0x5e                  	// #94
  403834:	mov	x0, x20
  403838:	bl	40af78 <wcrtomb@plt+0x8238>
  40383c:	bl	403020 <wcrtomb@plt+0x2e0>
  403840:	mov	w19, w0
  403844:	b	4037d0 <wcrtomb@plt+0xa90>
  403848:	mov	w1, #0x5d                  	// #93
  40384c:	mov	x0, x20
  403850:	bl	40af78 <wcrtomb@plt+0x8238>
  403854:	bl	403020 <wcrtomb@plt+0x2e0>
  403858:	mov	w19, w0
  40385c:	b	4037d8 <wcrtomb@plt+0xa98>
  403860:	add	x1, sp, #0x68
  403864:	mov	w0, w19
  403868:	bl	4091c8 <wcrtomb@plt+0x6488>
  40386c:	cmp	w19, #0x3d
  403870:	b.eq	4038ac <wcrtomb@plt+0xb6c>  // b.none
  403874:	b.le	403890 <wcrtomb@plt+0xb50>
  403878:	cmp	w19, #0x5b
  40387c:	b.eq	403914 <wcrtomb@plt+0xbd4>  // b.none
  403880:	cmp	w19, #0x5d
  403884:	b.ne	4038bc <wcrtomb@plt+0xb7c>  // b.any
  403888:	cbnz	w0, 4038c0 <wcrtomb@plt+0xb80>
  40388c:	b	4038fc <wcrtomb@plt+0xbbc>
  403890:	cmp	w19, #0xa
  403894:	b.eq	40398c <wcrtomb@plt+0xc4c>  // b.none
  403898:	b.le	4038b4 <wcrtomb@plt+0xb74>
  40389c:	cmp	w19, #0x2e
  4038a0:	b.eq	4038ac <wcrtomb@plt+0xb6c>  // b.none
  4038a4:	cmp	w19, #0x3a
  4038a8:	b.ne	4038bc <wcrtomb@plt+0xb7c>  // b.any
  4038ac:	cbnz	w0, 4038c0 <wcrtomb@plt+0xb80>
  4038b0:	b	403968 <wcrtomb@plt+0xc28>
  4038b4:	cmn	w19, #0x1
  4038b8:	b.eq	40398c <wcrtomb@plt+0xc4c>  // b.none
  4038bc:	and	w21, w21, #0xfffffffe
  4038c0:	mov	w1, w19
  4038c4:	mov	x0, x20
  4038c8:	bl	40af78 <wcrtomb@plt+0x8238>
  4038cc:	bl	403020 <wcrtomb@plt+0x2e0>
  4038d0:	mov	w19, w0
  4038d4:	ldr	w0, [x22]
  4038d8:	cmp	w0, #0x1
  4038dc:	b.ne	403860 <wcrtomb@plt+0xb20>  // b.any
  4038e0:	cmp	w19, #0x3d
  4038e4:	b.eq	403968 <wcrtomb@plt+0xc28>  // b.none
  4038e8:	b.le	40394c <wcrtomb@plt+0xc0c>
  4038ec:	cmp	w19, #0x5b
  4038f0:	b.eq	403910 <wcrtomb@plt+0xbd0>  // b.none
  4038f4:	cmp	w19, #0x5d
  4038f8:	b.ne	4038bc <wcrtomb@plt+0xb7c>  // b.any
  4038fc:	cmp	w21, #0x1
  403900:	b.ls	403938 <wcrtomb@plt+0xbf8>  // b.plast
  403904:	cmp	w21, #0x3
  403908:	csel	w21, w21, w25, ne  // ne = any
  40390c:	b	4038bc <wcrtomb@plt+0xb7c>
  403910:	mov	w0, w25
  403914:	orr	w0, w21, w0
  403918:	cmp	w0, #0x0
  40391c:	csel	w21, w21, w26, ne  // ne = any
  403920:	b	4038c0 <wcrtomb@plt+0xb80>
  403924:	mov	w28, w19
  403928:	mov	w21, #0x2                   	// #2
  40392c:	b	4038c0 <wcrtomb@plt+0xb80>
  403930:	mov	w19, #0xa                   	// #10
  403934:	b	40376c <wcrtomb@plt+0xa2c>
  403938:	mov	w19, #0x5d                  	// #93
  40393c:	b	40376c <wcrtomb@plt+0xa2c>
  403940:	mov	w0, #0xa                   	// #10
  403944:	bl	402f8c <wcrtomb@plt+0x24c>
  403948:	b	403994 <wcrtomb@plt+0xc54>
  40394c:	cmp	w19, #0xa
  403950:	b.eq	40398c <wcrtomb@plt+0xc4c>  // b.none
  403954:	b.le	403984 <wcrtomb@plt+0xc44>
  403958:	cmp	w19, #0x2e
  40395c:	b.eq	403968 <wcrtomb@plt+0xc28>  // b.none
  403960:	cmp	w19, #0x3a
  403964:	b.ne	4038bc <wcrtomb@plt+0xb7c>  // b.any
  403968:	cmp	w21, #0x1
  40396c:	b.eq	403924 <wcrtomb@plt+0xbe4>  // b.none
  403970:	cmp	w21, #0x2
  403974:	ccmp	w19, w28, #0x0, eq  // eq = none
  403978:	b.ne	4038bc <wcrtomb@plt+0xb7c>  // b.any
  40397c:	mov	w21, #0x3                   	// #3
  403980:	b	4038c0 <wcrtomb@plt+0xb80>
  403984:	cmn	w19, #0x1
  403988:	b.ne	4038bc <wcrtomb@plt+0xb7c>  // b.any
  40398c:	cmp	w19, #0xa
  403990:	b.eq	403940 <wcrtomb@plt+0xc00>  // b.none
  403994:	mov	x0, x20
  403998:	bl	40afe0 <wcrtomb@plt+0x82a0>
  40399c:	mov	x20, #0x0                   	// #0
  4039a0:	mov	x0, x20
  4039a4:	ldp	x19, x20, [sp, #16]
  4039a8:	ldp	x21, x22, [sp, #32]
  4039ac:	ldp	x23, x24, [sp, #48]
  4039b0:	ldp	x25, x26, [sp, #64]
  4039b4:	ldp	x27, x28, [sp, #80]
  4039b8:	ldp	x29, x30, [sp], #112
  4039bc:	ret
  4039c0:	stp	x29, x30, [sp, #-64]!
  4039c4:	mov	x29, sp
  4039c8:	stp	x19, x20, [sp, #16]
  4039cc:	stp	x21, x22, [sp, #32]
  4039d0:	mov	x19, x0
  4039d4:	mov	w20, w1
  4039d8:	str	wzr, [x0]
  4039dc:	str	xzr, [x0, #16]
  4039e0:	mov	x0, #0xffffffffffffffff    	// #-1
  4039e4:	str	x0, [x19, #8]
  4039e8:	str	xzr, [x19, #24]
  4039ec:	cmp	w1, #0x2f
  4039f0:	cset	w21, eq  // eq = none
  4039f4:	cmp	w1, #0x5c
  4039f8:	csinc	w21, w21, wzr, ne  // ne = any
  4039fc:	cbz	w21, 403ac0 <wcrtomb@plt+0xd80>
  403a00:	str	x23, [sp, #48]
  403a04:	mov	w0, #0x1                   	// #1
  403a08:	str	w0, [x19]
  403a0c:	b.eq	403a88 <wcrtomb@plt+0xd48>  // b.none
  403a10:	mov	w1, #0x1                   	// #1
  403a14:	mov	w0, w20
  403a18:	bl	4036e8 <wcrtomb@plt+0x9a8>
  403a1c:	mov	x20, x0
  403a20:	mov	w23, #0x0                   	// #0
  403a24:	cbz	x0, 403a94 <wcrtomb@plt+0xd54>
  403a28:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403a2c:	add	x22, x22, #0x8d8
  403a30:	bl	4030ec <wcrtomb@plt+0x3ac>
  403a34:	ldr	w1, [x22]
  403a38:	cmp	w1, #0x2
  403a3c:	b.eq	403a50 <wcrtomb@plt+0xd10>  // b.none
  403a40:	cmp	w0, #0x49
  403a44:	b.eq	403ab0 <wcrtomb@plt+0xd70>  // b.none
  403a48:	cmp	w0, #0x4d
  403a4c:	b.eq	403ab8 <wcrtomb@plt+0xd78>  // b.none
  403a50:	bl	402f8c <wcrtomb@plt+0x24c>
  403a54:	mov	w2, #0x0                   	// #0
  403a58:	mov	w1, w23
  403a5c:	mov	x0, x20
  403a60:	bl	409530 <wcrtomb@plt+0x67f0>
  403a64:	str	x0, [x19, #24]
  403a68:	mov	x0, x20
  403a6c:	bl	40afe0 <wcrtomb@plt+0x82a0>
  403a70:	ldr	x23, [sp, #48]
  403a74:	mov	w0, w21
  403a78:	ldp	x19, x20, [sp, #16]
  403a7c:	ldp	x21, x22, [sp, #32]
  403a80:	ldp	x29, x30, [sp], #64
  403a84:	ret
  403a88:	bl	403020 <wcrtomb@plt+0x2e0>
  403a8c:	mov	w20, w0
  403a90:	b	403a10 <wcrtomb@plt+0xcd0>
  403a94:	mov	w2, #0x5                   	// #5
  403a98:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  403a9c:	add	x1, x1, #0x448
  403aa0:	add	x1, x1, #0x133
  403aa4:	mov	x0, #0x0                   	// #0
  403aa8:	bl	402c20 <dcgettext@plt>
  403aac:	bl	40335c <wcrtomb@plt+0x61c>
  403ab0:	orr	w23, w23, #0x2
  403ab4:	b	403a30 <wcrtomb@plt+0xcf0>
  403ab8:	orr	w23, w23, #0x4
  403abc:	b	403a30 <wcrtomb@plt+0xcf0>
  403ac0:	bl	402ab0 <__ctype_b_loc@plt>
  403ac4:	and	x1, x20, #0xff
  403ac8:	ldr	x0, [x0]
  403acc:	ldrh	w0, [x0, x1, lsl #1]
  403ad0:	tbnz	w0, #11, 403b10 <wcrtomb@plt+0xdd0>
  403ad4:	cmp	w20, #0x2b
  403ad8:	cset	w22, eq  // eq = none
  403adc:	cmp	w20, #0x7e
  403ae0:	csinc	w22, w22, wzr, ne  // ne = any
  403ae4:	cbz	w22, 403af8 <wcrtomb@plt+0xdb8>
  403ae8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403aec:	ldr	w0, [x0, #2264]
  403af0:	cmp	w0, #0x2
  403af4:	b.ne	403b6c <wcrtomb@plt+0xe2c>  // b.any
  403af8:	cmp	w20, #0x24
  403afc:	b.ne	403a74 <wcrtomb@plt+0xd34>  // b.any
  403b00:	mov	w0, #0x6                   	// #6
  403b04:	str	w0, [x19]
  403b08:	mov	w21, #0x1                   	// #1
  403b0c:	b	403a74 <wcrtomb@plt+0xd34>
  403b10:	mov	w0, w20
  403b14:	bl	4031f8 <wcrtomb@plt+0x4b8>
  403b18:	str	x0, [x19, #8]
  403b1c:	mov	w0, #0x2                   	// #2
  403b20:	str	w0, [x19]
  403b24:	bl	4030ec <wcrtomb@plt+0x3ac>
  403b28:	cmp	w0, #0x7e
  403b2c:	b.ne	403b40 <wcrtomb@plt+0xe00>  // b.any
  403b30:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403b34:	ldr	w1, [x1, #2264]
  403b38:	cmp	w1, #0x2
  403b3c:	b.ne	403b4c <wcrtomb@plt+0xe0c>  // b.any
  403b40:	bl	402f8c <wcrtomb@plt+0x24c>
  403b44:	mov	w21, #0x1                   	// #1
  403b48:	b	403a74 <wcrtomb@plt+0xd34>
  403b4c:	bl	4030ec <wcrtomb@plt+0x3ac>
  403b50:	bl	4031f8 <wcrtomb@plt+0x4b8>
  403b54:	mov	w21, #0x1                   	// #1
  403b58:	cbz	x0, 403a74 <wcrtomb@plt+0xd34>
  403b5c:	str	x0, [x19, #16]
  403b60:	mov	w0, #0x3                   	// #3
  403b64:	str	w0, [x19]
  403b68:	b	403a74 <wcrtomb@plt+0xd34>
  403b6c:	bl	4030ec <wcrtomb@plt+0x3ac>
  403b70:	bl	4031f8 <wcrtomb@plt+0x4b8>
  403b74:	str	x0, [x19, #16]
  403b78:	mov	w21, w22
  403b7c:	cbz	x0, 403a74 <wcrtomb@plt+0xd34>
  403b80:	cmp	w20, #0x2b
  403b84:	b.eq	403b94 <wcrtomb@plt+0xe54>  // b.none
  403b88:	mov	w0, #0x5                   	// #5
  403b8c:	str	w0, [x19]
  403b90:	b	403a74 <wcrtomb@plt+0xd34>
  403b94:	mov	w0, #0x4                   	// #4
  403b98:	str	w0, [x19]
  403b9c:	b	403a74 <wcrtomb@plt+0xd34>
  403ba0:	stp	x29, x30, [sp, #-16]!
  403ba4:	mov	x29, sp
  403ba8:	bl	4030ec <wcrtomb@plt+0x3ac>
  403bac:	cmp	w0, #0x7d
  403bb0:	mov	w1, #0x23                  	// #35
  403bb4:	ccmp	w0, w1, #0x4, ne  // ne = any
  403bb8:	b.eq	403bd8 <wcrtomb@plt+0xe98>  // b.none
  403bbc:	cmp	w0, #0xa
  403bc0:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  403bc4:	mov	w1, #0x3b                  	// #59
  403bc8:	ccmp	w0, w1, #0x4, ne  // ne = any
  403bcc:	b.ne	403be0 <wcrtomb@plt+0xea0>  // b.any
  403bd0:	ldp	x29, x30, [sp], #16
  403bd4:	ret
  403bd8:	bl	402f8c <wcrtomb@plt+0x24c>
  403bdc:	b	403bd0 <wcrtomb@plt+0xe90>
  403be0:	mov	w2, #0x5                   	// #5
  403be4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  403be8:	add	x1, x1, #0x448
  403bec:	add	x1, x1, #0x65
  403bf0:	mov	x0, #0x0                   	// #0
  403bf4:	bl	402c20 <dcgettext@plt>
  403bf8:	bl	40335c <wcrtomb@plt+0x61c>
  403bfc:	stp	x29, x30, [sp, #-48]!
  403c00:	mov	x29, sp
  403c04:	stp	x19, x20, [sp, #16]
  403c08:	str	x21, [sp, #32]
  403c0c:	and	w21, w0, #0xff
  403c10:	mov	w2, #0x5                   	// #5
  403c14:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  403c18:	add	x1, x1, #0x448
  403c1c:	add	x1, x1, #0x2d1
  403c20:	mov	x0, #0x0                   	// #0
  403c24:	bl	402c20 <dcgettext@plt>
  403c28:	mov	x20, x0
  403c2c:	bl	402690 <strlen@plt>
  403c30:	bl	412c80 <wcrtomb@plt+0xff40>
  403c34:	mov	x19, x0
  403c38:	mov	w4, w21
  403c3c:	mov	x3, x20
  403c40:	mov	x2, #0xffffffffffffffff    	// #-1
  403c44:	mov	w1, #0x1                   	// #1
  403c48:	bl	4026a0 <__sprintf_chk@plt>
  403c4c:	mov	x0, x19
  403c50:	bl	40335c <wcrtomb@plt+0x61c>
  403c54:	stp	x29, x30, [sp, #-112]!
  403c58:	mov	x29, sp
  403c5c:	stp	x19, x20, [sp, #16]
  403c60:	stp	x21, x22, [sp, #32]
  403c64:	stp	x25, x26, [sp, #64]
  403c68:	mov	x25, x0
  403c6c:	add	x21, x0, x1
  403c70:	str	xzr, [sp, #104]
  403c74:	cmp	x0, x21
  403c78:	b.cs	4040b4 <wcrtomb@plt+0x1374>  // b.hs, b.nlast
  403c7c:	stp	x23, x24, [sp, #48]
  403c80:	stp	x27, x28, [sp, #80]
  403c84:	mov	w23, w2
  403c88:	mov	x20, x0
  403c8c:	mov	x19, x0
  403c90:	mov	w24, #0x0                   	// #0
  403c94:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  403c98:	add	x22, x22, #0x8d4
  403c9c:	adrp	x26, 420000 <_obstack_memory_used@@Base+0xccd0>
  403ca0:	add	x26, x26, #0x310
  403ca4:	b	403fe4 <wcrtomb@plt+0x12a4>
  403ca8:	add	x3, sp, #0x68
  403cac:	sub	x2, x21, x19
  403cb0:	mov	x1, x19
  403cb4:	mov	x0, #0x0                   	// #0
  403cb8:	bl	412f3c <wcrtomb@plt+0x101fc>
  403cbc:	cmp	w0, #0x1
  403cc0:	b.eq	403ff0 <wcrtomb@plt+0x12b0>  // b.none
  403cc4:	add	w1, w0, #0x2
  403cc8:	cmp	w0, #0x0
  403ccc:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  403cd0:	csinc	w2, w0, wzr, hi  // hi = pmore
  403cd4:	sxtw	x27, w2
  403cd8:	mov	x2, x27
  403cdc:	mov	x1, x19
  403ce0:	mov	x0, x20
  403ce4:	bl	402660 <memmove@plt>
  403ce8:	add	x20, x20, x27
  403cec:	add	x19, x19, x27
  403cf0:	b	403fdc <wcrtomb@plt+0x129c>
  403cf4:	add	x2, x19, #0x1
  403cf8:	cmp	w24, #0x0
  403cfc:	ccmp	x2, x21, #0x2, eq  // eq = none
  403d00:	b.cs	403ffc <wcrtomb@plt+0x12bc>  // b.hs, b.nlast
  403d04:	ldrb	w1, [x19, #1]
  403d08:	cmp	w1, #0x6f
  403d0c:	b.eq	403ea8 <wcrtomb@plt+0x1168>  // b.none
  403d10:	b.hi	403dd4 <wcrtomb@plt+0x1094>  // b.pmore
  403d14:	cmp	w1, #0x64
  403d18:	b.eq	403eb0 <wcrtomb@plt+0x1170>  // b.none
  403d1c:	b.hi	403d98 <wcrtomb@plt+0x1058>  // b.pmore
  403d20:	cmp	w1, #0x61
  403d24:	b.eq	403e6c <wcrtomb@plt+0x112c>  // b.none
  403d28:	cmp	w1, #0x63
  403d2c:	b.ne	403d7c <wcrtomb@plt+0x103c>  // b.any
  403d30:	add	x24, x19, #0x2
  403d34:	cmp	x21, x24
  403d38:	b.ls	403fb4 <wcrtomb@plt+0x1274>  // b.plast
  403d3c:	bl	402940 <__ctype_toupper_loc@plt>
  403d40:	ldrb	w1, [x19, #2]
  403d44:	ldr	x0, [x0]
  403d48:	ldr	w0, [x0, x1, lsl #2]
  403d4c:	eor	w0, w0, #0x40
  403d50:	strb	w0, [x20], #1
  403d54:	ldrb	w0, [x19, #2]
  403d58:	cmp	w0, #0x5c
  403d5c:	b.ne	403d70 <wcrtomb@plt+0x1030>  // b.any
  403d60:	add	x24, x19, #0x3
  403d64:	ldrb	w0, [x19, #3]
  403d68:	cmp	w0, #0x5c
  403d6c:	b.ne	403fa4 <wcrtomb@plt+0x1264>  // b.any
  403d70:	add	x19, x24, #0x1
  403d74:	mov	w24, #0x0                   	// #0
  403d78:	b	403fdc <wcrtomb@plt+0x129c>
  403d7c:	cmp	w1, #0xa
  403d80:	b.ne	403dbc <wcrtomb@plt+0x107c>  // b.any
  403d84:	mov	w0, #0xa                   	// #10
  403d88:	strb	w0, [x20], #1
  403d8c:	add	x19, x19, #0x2
  403d90:	mov	w24, #0x0                   	// #0
  403d94:	b	403fdc <wcrtomb@plt+0x129c>
  403d98:	cmp	w1, #0x66
  403d9c:	b.ne	403db4 <wcrtomb@plt+0x1074>  // b.any
  403da0:	mov	w0, #0xc                   	// #12
  403da4:	strb	w0, [x20], #1
  403da8:	add	x19, x19, #0x2
  403dac:	mov	w24, #0x0                   	// #0
  403db0:	b	403fdc <wcrtomb@plt+0x129c>
  403db4:	cmp	w1, #0x6e
  403db8:	b.eq	403d84 <wcrtomb@plt+0x1044>  // b.none
  403dbc:	cbz	w23, 404080 <wcrtomb@plt+0x1340>
  403dc0:	mov	w0, #0x5c                  	// #92
  403dc4:	strb	w0, [x20], #1
  403dc8:	mov	x19, x2
  403dcc:	mov	w24, #0x0                   	// #0
  403dd0:	b	403fd4 <wcrtomb@plt+0x1294>
  403dd4:	cmp	w1, #0x76
  403dd8:	b.eq	403e94 <wcrtomb@plt+0x1154>  // b.none
  403ddc:	b.ls	403e48 <wcrtomb@plt+0x1108>  // b.plast
  403de0:	mov	w3, #0x10                  	// #16
  403de4:	cmp	w1, #0x78
  403de8:	b.ne	403dbc <wcrtomb@plt+0x107c>  // b.any
  403dec:	add	x5, x19, #0x2
  403df0:	cmp	x21, x5
  403df4:	b.ls	403f84 <wcrtomb@plt+0x1244>  // b.plast
  403df8:	mov	x19, x5
  403dfc:	mov	w2, #0x1                   	// #1
  403e00:	mov	w4, #0x0                   	// #0
  403e04:	mov	w24, #0x2                   	// #2
  403e08:	mov	w17, #0x0                   	// #0
  403e0c:	mov	w18, #0x9                   	// #9
  403e10:	mov	w16, #0xf                   	// #15
  403e14:	mov	w15, #0xe                   	// #14
  403e18:	mov	w14, #0xd                   	// #13
  403e1c:	mov	w13, #0xc                   	// #12
  403e20:	mov	w12, #0xb                   	// #11
  403e24:	mov	w11, #0xa                   	// #10
  403e28:	mov	w10, #0x7                   	// #7
  403e2c:	mov	w9, #0x6                   	// #6
  403e30:	mov	w8, #0x5                   	// #5
  403e34:	mov	w7, #0x4                   	// #4
  403e38:	mov	w6, #0x3                   	// #3
  403e3c:	mov	w30, w2
  403e40:	mov	w27, #0x8                   	// #8
  403e44:	b	403f14 <wcrtomb@plt+0x11d4>
  403e48:	cmp	w1, #0x72
  403e4c:	b.eq	403e80 <wcrtomb@plt+0x1140>  // b.none
  403e50:	cmp	w1, #0x74
  403e54:	b.ne	403dbc <wcrtomb@plt+0x107c>  // b.any
  403e58:	mov	w0, #0x9                   	// #9
  403e5c:	strb	w0, [x20], #1
  403e60:	add	x19, x19, #0x2
  403e64:	mov	w24, #0x0                   	// #0
  403e68:	b	403fdc <wcrtomb@plt+0x129c>
  403e6c:	mov	w0, #0x7                   	// #7
  403e70:	strb	w0, [x20], #1
  403e74:	add	x19, x19, #0x2
  403e78:	mov	w24, #0x0                   	// #0
  403e7c:	b	403fdc <wcrtomb@plt+0x129c>
  403e80:	mov	w0, #0xd                   	// #13
  403e84:	strb	w0, [x20], #1
  403e88:	add	x19, x19, #0x2
  403e8c:	mov	w24, #0x0                   	// #0
  403e90:	b	403fdc <wcrtomb@plt+0x129c>
  403e94:	mov	w0, #0xb                   	// #11
  403e98:	strb	w0, [x20], #1
  403e9c:	add	x19, x19, #0x2
  403ea0:	mov	w24, #0x0                   	// #0
  403ea4:	b	403fdc <wcrtomb@plt+0x129c>
  403ea8:	mov	w3, #0x8                   	// #8
  403eac:	b	403dec <wcrtomb@plt+0x10ac>
  403eb0:	mov	w3, #0xa                   	// #10
  403eb4:	b	403dec <wcrtomb@plt+0x10ac>
  403eb8:	mov	w0, w27
  403ebc:	b	403ef4 <wcrtomb@plt+0x11b4>
  403ec0:	mov	w0, w30
  403ec4:	b	403efc <wcrtomb@plt+0x11bc>
  403ec8:	mov	w0, w6
  403ecc:	b	403efc <wcrtomb@plt+0x11bc>
  403ed0:	mov	w0, w7
  403ed4:	b	403efc <wcrtomb@plt+0x11bc>
  403ed8:	mov	w0, w8
  403edc:	b	403efc <wcrtomb@plt+0x11bc>
  403ee0:	mov	w0, w9
  403ee4:	b	403efc <wcrtomb@plt+0x11bc>
  403ee8:	mov	w0, w10
  403eec:	b	403efc <wcrtomb@plt+0x11bc>
  403ef0:	mov	w0, w11
  403ef4:	cmp	w0, w3
  403ef8:	b.cs	403f64 <wcrtomb@plt+0x1224>  // b.hs, b.nlast
  403efc:	madd	w4, w3, w4, w0
  403f00:	add	x19, x19, #0x1
  403f04:	mul	w2, w2, w3
  403f08:	cmp	w2, #0xff
  403f0c:	ccmp	x21, x19, #0x0, le
  403f10:	b.ls	403f64 <wcrtomb@plt+0x1224>  // b.plast
  403f14:	ldrb	w0, [x19]
  403f18:	sub	w0, w0, #0x30
  403f1c:	cmp	w0, #0x36
  403f20:	b.hi	403f64 <wcrtomb@plt+0x1224>  // b.pmore
  403f24:	ldrb	w0, [x26, w0, uxtw]
  403f28:	adr	x28, 403f34 <wcrtomb@plt+0x11f4>
  403f2c:	add	x0, x28, w0, sxtb #2
  403f30:	br	x0
  403f34:	mov	w0, w12
  403f38:	b	403ef4 <wcrtomb@plt+0x11b4>
  403f3c:	mov	w0, w13
  403f40:	b	403ef4 <wcrtomb@plt+0x11b4>
  403f44:	mov	w0, w14
  403f48:	b	403ef4 <wcrtomb@plt+0x11b4>
  403f4c:	mov	w0, w15
  403f50:	b	403ef4 <wcrtomb@plt+0x11b4>
  403f54:	mov	w0, w16
  403f58:	b	403ef4 <wcrtomb@plt+0x11b4>
  403f5c:	mov	w0, w18
  403f60:	b	403ef4 <wcrtomb@plt+0x11b4>
  403f64:	and	w4, w4, #0xff
  403f68:	cmp	x5, x19
  403f6c:	csel	w1, w4, w1, ne  // ne = any
  403f70:	cmp	w23, #0x1
  403f74:	b.eq	403f8c <wcrtomb@plt+0x124c>  // b.none
  403f78:	strb	w1, [x20], #1
  403f7c:	mov	w24, #0x0                   	// #0
  403f80:	b	403fdc <wcrtomb@plt+0x129c>
  403f84:	mov	x19, x5
  403f88:	b	403f70 <wcrtomb@plt+0x1230>
  403f8c:	cmp	w1, #0x26
  403f90:	mov	w0, #0x5c                  	// #92
  403f94:	ccmp	w1, w0, #0x4, ne  // ne = any
  403f98:	b.ne	403f78 <wcrtomb@plt+0x1238>  // b.any
  403f9c:	strb	w0, [x20], #1
  403fa0:	b	403f78 <wcrtomb@plt+0x1238>
  403fa4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  403fa8:	add	x0, x0, #0x448
  403fac:	add	x0, x0, #0x30c
  403fb0:	bl	40335c <wcrtomb@plt+0x61c>
  403fb4:	cbz	w23, 4040bc <wcrtomb@plt+0x137c>
  403fb8:	mov	w0, #0x5c                  	// #92
  403fbc:	strb	w0, [x20], #1
  403fc0:	ldp	x23, x24, [sp, #48]
  403fc4:	ldp	x27, x28, [sp, #80]
  403fc8:	b	40409c <wcrtomb@plt+0x135c>
  403fcc:	cmp	w0, #0x2e
  403fd0:	b.eq	40402c <wcrtomb@plt+0x12ec>  // b.none
  403fd4:	ldrb	w0, [x19], #1
  403fd8:	strb	w0, [x20], #1
  403fdc:	cmp	x19, x21
  403fe0:	b.cs	404094 <wcrtomb@plt+0x1354>  // b.hs, b.nlast
  403fe4:	ldr	w0, [x22]
  403fe8:	cmp	w0, #0x1
  403fec:	b.ne	403ca8 <wcrtomb@plt+0xf68>  // b.any
  403ff0:	ldrb	w0, [x19]
  403ff4:	cmp	w0, #0x5c
  403ff8:	b.eq	403cf4 <wcrtomb@plt+0xfb4>  // b.none
  403ffc:	cmp	w23, #0x2
  404000:	b.ne	403fd4 <wcrtomb@plt+0x1294>  // b.any
  404004:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404008:	ldr	w1, [x1, #2264]
  40400c:	cbz	w1, 403fd4 <wcrtomb@plt+0x1294>
  404010:	cmp	w0, #0x5b
  404014:	b.eq	404074 <wcrtomb@plt+0x1334>  // b.none
  404018:	b.hi	404044 <wcrtomb@plt+0x1304>  // b.pmore
  40401c:	cmp	w0, #0x3a
  404020:	b.eq	40402c <wcrtomb@plt+0x12ec>  // b.none
  404024:	cmp	w0, #0x3d
  404028:	b.ne	403fcc <wcrtomb@plt+0x128c>  // b.any
  40402c:	cmn	w24, #0x1
  404030:	b.ne	403fd4 <wcrtomb@plt+0x1294>  // b.any
  404034:	ldurb	w1, [x19, #-1]
  404038:	cmp	w1, #0x5b
  40403c:	csel	w24, w24, w0, ne  // ne = any
  404040:	b	403fd4 <wcrtomb@plt+0x1294>
  404044:	cmp	w0, #0x5d
  404048:	b.ne	403fd4 <wcrtomb@plt+0x1294>  // b.any
  40404c:	add	w0, w24, #0x1
  404050:	cmp	w0, #0x1
  404054:	b.ls	40408c <wcrtomb@plt+0x134c>  // b.plast
  404058:	ldurb	w0, [x19, #-2]
  40405c:	cmp	w0, w24
  404060:	b.eq	403fd4 <wcrtomb@plt+0x1294>  // b.none
  404064:	ldurb	w0, [x19, #-1]
  404068:	cmp	w0, w24
  40406c:	csinv	w24, w24, wzr, ne  // ne = any
  404070:	b	403fd4 <wcrtomb@plt+0x1294>
  404074:	cmp	w24, #0x0
  404078:	csinv	w24, w24, wzr, ne  // ne = any
  40407c:	b	403fd4 <wcrtomb@plt+0x1294>
  404080:	mov	x19, x2
  404084:	mov	w24, #0x0                   	// #0
  404088:	b	403fd4 <wcrtomb@plt+0x1294>
  40408c:	mov	w24, #0x0                   	// #0
  404090:	b	403fd4 <wcrtomb@plt+0x1294>
  404094:	ldp	x23, x24, [sp, #48]
  404098:	ldp	x27, x28, [sp, #80]
  40409c:	sub	x0, x20, x25
  4040a0:	ldp	x19, x20, [sp, #16]
  4040a4:	ldp	x21, x22, [sp, #32]
  4040a8:	ldp	x25, x26, [sp, #64]
  4040ac:	ldp	x29, x30, [sp], #112
  4040b0:	ret
  4040b4:	mov	x20, x0
  4040b8:	b	40409c <wcrtomb@plt+0x135c>
  4040bc:	ldp	x23, x24, [sp, #48]
  4040c0:	ldp	x27, x28, [sp, #80]
  4040c4:	b	40409c <wcrtomb@plt+0x135c>
  4040c8:	mov	w0, w17
  4040cc:	b	403efc <wcrtomb@plt+0x11bc>
  4040d0:	mov	w0, w24
  4040d4:	b	403efc <wcrtomb@plt+0x11bc>
  4040d8:	stp	x29, x30, [sp, #-48]!
  4040dc:	mov	x29, sp
  4040e0:	stp	x19, x20, [sp, #16]
  4040e4:	stp	x21, x22, [sp, #32]
  4040e8:	mov	x21, x0
  4040ec:	mov	w19, w1
  4040f0:	cbz	x0, 404120 <wcrtomb@plt+0x13e0>
  4040f4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4040f8:	ldr	x0, [x0, #1488]
  4040fc:	cbz	x0, 404104 <wcrtomb@plt+0x13c4>
  404100:	bl	40afe0 <wcrtomb@plt+0x82a0>
  404104:	bl	40aeb0 <wcrtomb@plt+0x8170>
  404108:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40410c:	add	x1, x1, #0x528
  404110:	str	x0, [x1, #168]
  404114:	str	xzr, [x21]
  404118:	str	xzr, [x21, #8]
  40411c:	str	x21, [x1, #176]
  404120:	cmn	w19, #0x1
  404124:	b.eq	404238 <wcrtomb@plt+0x14f8>  // b.none
  404128:	cmp	w19, #0xa
  40412c:	b.ne	404154 <wcrtomb@plt+0x1414>  // b.any
  404130:	bl	403020 <wcrtomb@plt+0x2e0>
  404134:	mov	w19, w0
  404138:	cmp	w0, #0xa
  40413c:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  404140:	b.eq	4041cc <wcrtomb@plt+0x148c>  // b.none
  404144:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404148:	add	x20, x20, #0x528
  40414c:	mov	w22, #0x5c                  	// #92
  404150:	b	4041a0 <wcrtomb@plt+0x1460>
  404154:	mov	w1, w19
  404158:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40415c:	ldr	x0, [x0, #1488]
  404160:	bl	40af78 <wcrtomb@plt+0x8238>
  404164:	b	404130 <wcrtomb@plt+0x13f0>
  404168:	mov	w1, w22
  40416c:	ldr	x0, [x20, #168]
  404170:	bl	40af78 <wcrtomb@plt+0x8238>
  404174:	b	404180 <wcrtomb@plt+0x1440>
  404178:	cmn	w19, #0x1
  40417c:	b.eq	4041b8 <wcrtomb@plt+0x1478>  // b.none
  404180:	mov	w1, w19
  404184:	ldr	x0, [x20, #168]
  404188:	bl	40af78 <wcrtomb@plt+0x8238>
  40418c:	bl	403020 <wcrtomb@plt+0x2e0>
  404190:	mov	w19, w0
  404194:	cmp	w0, #0xa
  404198:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  40419c:	b.eq	4041cc <wcrtomb@plt+0x148c>  // b.none
  4041a0:	cmp	w19, #0x5c
  4041a4:	b.ne	404178 <wcrtomb@plt+0x1438>  // b.any
  4041a8:	bl	403020 <wcrtomb@plt+0x2e0>
  4041ac:	mov	w19, w0
  4041b0:	cmn	w0, #0x1
  4041b4:	b.ne	404168 <wcrtomb@plt+0x1428>  // b.any
  4041b8:	mov	w1, #0xa                   	// #10
  4041bc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4041c0:	ldr	x0, [x0, #1488]
  4041c4:	bl	40af78 <wcrtomb@plt+0x8238>
  4041c8:	b	404238 <wcrtomb@plt+0x14f8>
  4041cc:	mov	w1, #0xa                   	// #10
  4041d0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4041d4:	ldr	x0, [x0, #1488]
  4041d8:	bl	40af78 <wcrtomb@plt+0x8238>
  4041dc:	cbz	x21, 404248 <wcrtomb@plt+0x1508>
  4041e0:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4041e4:	add	x19, x19, #0x528
  4041e8:	ldr	x22, [x19, #168]
  4041ec:	mov	x0, x22
  4041f0:	bl	40aef4 <wcrtomb@plt+0x81b4>
  4041f4:	mov	x20, x0
  4041f8:	mov	x0, x22
  4041fc:	bl	40aefc <wcrtomb@plt+0x81bc>
  404200:	mov	w2, #0x0                   	// #0
  404204:	mov	x1, x0
  404208:	mov	x0, x20
  40420c:	bl	403c54 <wcrtomb@plt+0xf14>
  404210:	mov	x20, x0
  404214:	str	x0, [x21, #8]
  404218:	ldr	x0, [x19, #168]
  40421c:	bl	40aef4 <wcrtomb@plt+0x81b4>
  404220:	mov	x1, x20
  404224:	bl	412e98 <wcrtomb@plt+0x10158>
  404228:	str	x0, [x21]
  40422c:	ldr	x0, [x19, #168]
  404230:	bl	40afe0 <wcrtomb@plt+0x82a0>
  404234:	str	xzr, [x19, #168]
  404238:	ldp	x19, x20, [sp, #16]
  40423c:	ldp	x21, x22, [sp, #32]
  404240:	ldp	x29, x30, [sp], #48
  404244:	ret
  404248:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40424c:	ldr	x21, [x0, #1496]
  404250:	b	4041e0 <wcrtomb@plt+0x14a0>
  404254:	stp	x29, x30, [sp, #-240]!
  404258:	mov	x29, sp
  40425c:	stp	x19, x20, [sp, #16]
  404260:	stp	x21, x22, [sp, #32]
  404264:	stp	x23, x24, [sp, #48]
  404268:	stp	x25, x26, [sp, #64]
  40426c:	stp	x27, x28, [sp, #80]
  404270:	mov	x19, x0
  404274:	cbz	x0, 4042b8 <wcrtomb@plt+0x1578>
  404278:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40427c:	ldr	x0, [x0, #1488]
  404280:	cbz	x0, 404290 <wcrtomb@plt+0x1550>
  404284:	mov	w1, #0xa                   	// #10
  404288:	mov	x0, #0x0                   	// #0
  40428c:	bl	4040d8 <wcrtomb@plt+0x1398>
  404290:	adrp	x28, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404294:	add	x28, x28, #0x8d8
  404298:	mov	x21, #0x8200                	// #33280
  40429c:	movk	x21, #0x4b0, lsl #16
  4042a0:	movk	x21, #0x100, lsl #32
  4042a4:	movk	x21, #0x2200, lsl #48
  4042a8:	mov	x20, #0x1                   	// #1
  4042ac:	movk	x20, #0x9010, lsl #32
  4042b0:	movk	x20, #0x20, lsl #48
  4042b4:	b	4047fc <wcrtomb@plt+0x1abc>
  4042b8:	mov	x1, #0x18                  	// #24
  4042bc:	mov	x0, #0x1                   	// #1
  4042c0:	bl	412e48 <wcrtomb@plt+0x10108>
  4042c4:	mov	x19, x0
  4042c8:	str	xzr, [x0]
  4042cc:	str	xzr, [x0, #8]
  4042d0:	str	xzr, [x0, #16]
  4042d4:	adrp	x4, 402000 <mbrtowc@plt-0x640>
  4042d8:	add	x4, x4, #0xae0
  4042dc:	adrp	x3, 412000 <wcrtomb@plt+0xf2c0>
  4042e0:	add	x3, x3, #0xe80
  4042e4:	mov	x2, #0x0                   	// #0
  4042e8:	mov	x1, #0x0                   	// #0
  4042ec:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4042f0:	add	x0, x0, #0x528
  4042f4:	bl	41310c <_obstack_begin@@Base>
  4042f8:	b	404278 <wcrtomb@plt+0x1538>
  4042fc:	add	x1, x0, #0x28
  404300:	str	x1, [x19, #8]
  404304:	ldr	x0, [x19]
  404308:	mov	x2, #0x28                  	// #40
  40430c:	mul	x3, x1, x2
  404310:	umulh	x2, x1, x2
  404314:	cmp	x2, #0x0
  404318:	cset	x2, ne  // ne = any
  40431c:	cmp	x3, #0x0
  404320:	csinc	x2, x2, xzr, ge  // ge = tcont
  404324:	cbnz	w2, 40433c <wcrtomb@plt+0x15fc>
  404328:	add	x1, x1, x1, lsl #2
  40432c:	lsl	x1, x1, #3
  404330:	bl	412cfc <wcrtomb@plt+0xffbc>
  404334:	str	x0, [x19]
  404338:	b	404838 <wcrtomb@plt+0x1af8>
  40433c:	bl	412ef8 <wcrtomb@plt+0x101b8>
  404340:	mov	w2, #0x5                   	// #5
  404344:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404348:	add	x1, x1, #0x448
  40434c:	add	x1, x1, #0x1d
  404350:	mov	x0, #0x0                   	// #0
  404354:	bl	402c20 <dcgettext@plt>
  404358:	bl	40335c <wcrtomb@plt+0x61c>
  40435c:	bl	4030ec <wcrtomb@plt+0x3ac>
  404360:	mov	w1, w0
  404364:	add	x0, sp, #0xb0
  404368:	bl	4039c0 <wcrtomb@plt+0xc80>
  40436c:	and	w0, w0, #0xff
  404370:	cbz	w0, 404390 <wcrtomb@plt+0x1650>
  404374:	mov	x1, #0x20                  	// #32
  404378:	add	x0, sp, #0xb0
  40437c:	bl	412e98 <wcrtomb@plt+0x10158>
  404380:	str	x0, [x22, #8]
  404384:	bl	4030ec <wcrtomb@plt+0x3ac>
  404388:	mov	w24, w0
  40438c:	b	4048a0 <wcrtomb@plt+0x1b60>
  404390:	mov	w2, #0x5                   	// #5
  404394:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404398:	add	x1, x1, #0x448
  40439c:	add	x1, x1, #0xe
  4043a0:	mov	x0, #0x0                   	// #0
  4043a4:	bl	402c20 <dcgettext@plt>
  4043a8:	bl	40335c <wcrtomb@plt+0x61c>
  4043ac:	ldr	x0, [x0, #8]
  4043b0:	cbnz	x0, 4048b0 <wcrtomb@plt+0x1b70>
  4043b4:	ldr	x0, [x22, #8]
  4043b8:	cbz	x0, 40440c <wcrtomb@plt+0x16cc>
  4043bc:	ldr	w0, [x0]
  4043c0:	cmp	w0, #0x1
  4043c4:	b.ne	40440c <wcrtomb@plt+0x16cc>  // b.any
  4043c8:	ldr	w0, [x28]
  4043cc:	cmp	w0, #0x2
  4043d0:	b.eq	40440c <wcrtomb@plt+0x16cc>  // b.none
  4043d4:	cmp	w24, #0x21
  4043d8:	b.ne	4048c4 <wcrtomb@plt+0x1b84>  // b.any
  4043dc:	mov	w0, #0x1                   	// #1
  4043e0:	strb	w0, [x22, #20]
  4043e4:	bl	4030ec <wcrtomb@plt+0x3ac>
  4043e8:	mov	w24, w0
  4043ec:	cmp	w0, #0x21
  4043f0:	b.ne	4048b8 <wcrtomb@plt+0x1b78>  // b.any
  4043f4:	mov	w2, #0x5                   	// #5
  4043f8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4043fc:	add	x1, x1, #0x448
  404400:	mov	x0, #0x0                   	// #0
  404404:	bl	402c20 <dcgettext@plt>
  404408:	bl	40335c <wcrtomb@plt+0x61c>
  40440c:	mov	w2, #0x5                   	// #5
  404410:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404414:	add	x1, x1, #0x448
  404418:	add	x1, x1, #0x2b1
  40441c:	mov	x0, #0x0                   	// #0
  404420:	bl	402c20 <dcgettext@plt>
  404424:	bl	40335c <wcrtomb@plt+0x61c>
  404428:	sub	w1, w24, #0x3d
  40442c:	cmp	w1, #0x3d
  404430:	b.hi	4048c4 <wcrtomb@plt+0x1b84>  // b.pmore
  404434:	mov	x0, #0x1                   	// #1
  404438:	lsl	x0, x0, x1
  40443c:	tst	x0, x21
  404440:	b.ne	404470 <wcrtomb@plt+0x1730>  // b.any
  404444:	tst	x0, x20
  404448:	b.eq	4048c4 <wcrtomb@plt+0x1b84>  // b.none
  40444c:	ldr	x0, [x22, #8]
  404450:	cbz	x0, 4048c4 <wcrtomb@plt+0x1b84>
  404454:	mov	w2, #0x5                   	// #5
  404458:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  40445c:	add	x1, x1, #0x448
  404460:	add	x1, x1, #0x115
  404464:	mov	x0, #0x0                   	// #0
  404468:	bl	402c20 <dcgettext@plt>
  40446c:	bl	40335c <wcrtomb@plt+0x61c>
  404470:	mov	w0, w24
  404474:	bl	403bfc <wcrtomb@plt+0xebc>
  404478:	ldr	x0, [x26, x25, lsl #3]
  40447c:	cbnz	x0, 4044ac <wcrtomb@plt+0x176c>
  404480:	bl	403020 <wcrtomb@plt+0x2e0>
  404484:	cmp	w0, #0x6e
  404488:	b.eq	4044c8 <wcrtomb@plt+0x1788>  // b.none
  40448c:	cmp	w0, #0xa
  404490:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  404494:	b.eq	4047fc <wcrtomb@plt+0x1abc>  // b.none
  404498:	bl	403020 <wcrtomb@plt+0x2e0>
  40449c:	cmp	w0, #0xa
  4044a0:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  4044a4:	b.ne	404498 <wcrtomb@plt+0x1758>  // b.any
  4044a8:	b	4047fc <wcrtomb@plt+0x1abc>
  4044ac:	mov	w2, #0x5                   	// #5
  4044b0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4044b4:	add	x1, x1, #0x448
  4044b8:	add	x1, x1, #0xe1
  4044bc:	mov	x0, #0x0                   	// #0
  4044c0:	bl	402c20 <dcgettext@plt>
  4044c4:	bl	40335c <wcrtomb@plt+0x61c>
  4044c8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4044cc:	ldrb	w0, [x0, #1080]
  4044d0:	cbz	w0, 404498 <wcrtomb@plt+0x1758>
  4044d4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4044d8:	ldr	x0, [x0, #1416]
  4044dc:	cmp	x0, #0x1
  4044e0:	b.hi	404498 <wcrtomb@plt+0x1758>  // b.pmore
  4044e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4044e8:	ldr	x0, [x0, #1432]
  4044ec:	cbz	x0, 404514 <wcrtomb@plt+0x17d4>
  4044f0:	add	x0, x0, #0x2
  4044f4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4044f8:	ldr	x1, [x1, #1440]
  4044fc:	cmp	x1, x0
  404500:	b.ne	404498 <wcrtomb@plt+0x1758>  // b.any
  404504:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404508:	mov	w1, #0x1                   	// #1
  40450c:	strb	w1, [x0, #1864]
  404510:	b	404498 <wcrtomb@plt+0x1758>
  404514:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404518:	ldr	x0, [x0, #1456]
  40451c:	cbz	x0, 404498 <wcrtomb@plt+0x1758>
  404520:	bl	402710 <ftell@plt>
  404524:	cmp	x0, #0x2
  404528:	b.ne	404498 <wcrtomb@plt+0x1758>  // b.any
  40452c:	b	404504 <wcrtomb@plt+0x17c4>
  404530:	bl	403120 <wcrtomb@plt+0x3e0>
  404534:	mov	x22, x0
  404538:	ldrb	w1, [x0]
  40453c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  404540:	add	x0, x0, #0x2a0
  404544:	cmp	w1, #0x0
  404548:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  40454c:	add	x1, x1, #0x2a8
  404550:	csel	x0, x0, x22, eq  // eq = none
  404554:	bl	4028a0 <strverscmp@plt>
  404558:	cmp	w0, #0x0
  40455c:	b.gt	404570 <wcrtomb@plt+0x1830>
  404560:	mov	x0, x22
  404564:	bl	402ae0 <free@plt>
  404568:	str	wzr, [x28]
  40456c:	b	4047fc <wcrtomb@plt+0x1abc>
  404570:	mov	w2, #0x5                   	// #5
  404574:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404578:	add	x1, x1, #0x448
  40457c:	add	x1, x1, #0x293
  404580:	mov	x0, #0x0                   	// #0
  404584:	bl	402c20 <dcgettext@plt>
  404588:	bl	40335c <wcrtomb@plt+0x61c>
  40458c:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404590:	add	x23, x23, #0x528
  404594:	add	x3, x23, #0x58
  404598:	mov	x2, #0x0                   	// #0
  40459c:	ldr	x1, [x19, #16]
  4045a0:	ldr	x0, [x23, #184]
  4045a4:	bl	403260 <wcrtomb@plt+0x520>
  4045a8:	str	x0, [x23, #184]
  4045ac:	ldrb	w0, [x22, #20]
  4045b0:	cmp	w0, #0x0
  4045b4:	cset	w0, eq  // eq = none
  4045b8:	strb	w0, [x22, #20]
  4045bc:	b	4047f0 <wcrtomb@plt+0x1ab0>
  4045c0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4045c4:	ldr	x0, [x0, #1504]
  4045c8:	cbz	x0, 404610 <wcrtomb@plt+0x18d0>
  4045cc:	ldr	x0, [x26, x25, lsl #3]
  4045d0:	cbnz	x0, 404628 <wcrtomb@plt+0x18e8>
  4045d4:	bl	403ba0 <wcrtomb@plt+0xe60>
  4045d8:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4045dc:	add	x22, x22, #0x528
  4045e0:	ldr	x1, [x22, #184]
  4045e4:	ldr	x2, [x19, #16]
  4045e8:	ldr	x0, [x1]
  4045ec:	ldr	x3, [x19]
  4045f0:	add	x0, x0, x0, lsl #2
  4045f4:	add	x0, x3, x0, lsl #3
  4045f8:	str	x2, [x0, #24]
  4045fc:	ldr	x23, [x1, #40]
  404600:	ldr	x0, [x1, #8]
  404604:	bl	402ae0 <free@plt>
  404608:	str	x23, [x22, #184]
  40460c:	b	4047f0 <wcrtomb@plt+0x1ab0>
  404610:	mov	w2, #0x5                   	// #5
  404614:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404618:	add	x1, x1, #0x448
  40461c:	add	x1, x1, #0x56
  404620:	bl	402c20 <dcgettext@plt>
  404624:	bl	40335c <wcrtomb@plt+0x61c>
  404628:	mov	w2, #0x5                   	// #5
  40462c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404630:	add	x1, x1, #0x448
  404634:	add	x1, x1, #0xa5
  404638:	mov	x0, #0x0                   	// #0
  40463c:	bl	402c20 <dcgettext@plt>
  404640:	bl	40335c <wcrtomb@plt+0x61c>
  404644:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404648:	ldrb	w0, [x0, #1900]
  40464c:	cbnz	w0, 404668 <wcrtomb@plt+0x1928>
  404650:	bl	4030ec <wcrtomb@plt+0x3ac>
  404654:	cmp	w0, #0xa
  404658:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  40465c:	b.ne	404690 <wcrtomb@plt+0x1950>  // b.any
  404660:	str	xzr, [x22, #32]
  404664:	b	4047f0 <wcrtomb@plt+0x1ab0>
  404668:	mov	w2, #0x5                   	// #5
  40466c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404670:	add	x1, x1, #0x448
  404674:	add	x1, x1, #0x334
  404678:	mov	x0, #0x0                   	// #0
  40467c:	bl	402c20 <dcgettext@plt>
  404680:	bl	40335c <wcrtomb@plt+0x61c>
  404684:	bl	4030ec <wcrtomb@plt+0x3ac>
  404688:	cmn	w0, #0x1
  40468c:	b.eq	4046b8 <wcrtomb@plt+0x1978>  // b.none
  404690:	cmp	w0, #0x5c
  404694:	b.eq	4046d4 <wcrtomb@plt+0x1994>  // b.none
  404698:	ldr	w1, [x28]
  40469c:	cmp	w1, #0x2
  4046a0:	b.eq	4046e0 <wcrtomb@plt+0x19a0>  // b.none
  4046a4:	bl	402f8c <wcrtomb@plt+0x24c>
  4046a8:	mov	w1, #0xa                   	// #10
  4046ac:	add	x0, x22, #0x18
  4046b0:	bl	4040d8 <wcrtomb@plt+0x1398>
  4046b4:	b	4047f0 <wcrtomb@plt+0x1ab0>
  4046b8:	mov	w2, #0x5                   	// #5
  4046bc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4046c0:	add	x1, x1, #0x448
  4046c4:	add	x1, x1, #0x84
  4046c8:	mov	x0, #0x0                   	// #0
  4046cc:	bl	402c20 <dcgettext@plt>
  4046d0:	bl	40335c <wcrtomb@plt+0x61c>
  4046d4:	bl	403020 <wcrtomb@plt+0x2e0>
  4046d8:	mov	w1, w0
  4046dc:	b	4046ac <wcrtomb@plt+0x196c>
  4046e0:	mov	w2, #0x5                   	// #5
  4046e4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4046e8:	add	x1, x1, #0x448
  4046ec:	add	x1, x1, #0x84
  4046f0:	mov	x0, #0x0                   	// #0
  4046f4:	bl	402c20 <dcgettext@plt>
  4046f8:	bl	40335c <wcrtomb@plt+0x61c>
  4046fc:	ldr	x0, [x26, x25, lsl #3]
  404700:	cbnz	x0, 404750 <wcrtomb@plt+0x1a10>
  404704:	bl	403120 <wcrtomb@plt+0x3e0>
  404708:	mov	x24, x0
  40470c:	ldrb	w0, [x0]
  404710:	cbz	w0, 40476c <wcrtomb@plt+0x1a2c>
  404714:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404718:	add	x23, x23, #0x528
  40471c:	mov	x3, #0x0                   	// #0
  404720:	mov	x2, x24
  404724:	ldr	x1, [x19, #16]
  404728:	ldr	x0, [x23, #192]
  40472c:	bl	403260 <wcrtomb@plt+0x520>
  404730:	str	x0, [x23, #192]
  404734:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404738:	ldrb	w0, [x0, #1901]
  40473c:	cbz	w0, 4047f0 <wcrtomb@plt+0x1ab0>
  404740:	mov	x0, x24
  404744:	bl	402990 <strdup@plt>
  404748:	str	x0, [x22, #24]
  40474c:	b	4047f0 <wcrtomb@plt+0x1ab0>
  404750:	mov	w2, #0x5                   	// #5
  404754:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404758:	add	x1, x1, #0x448
  40475c:	add	x1, x1, #0xc4
  404760:	mov	x0, #0x0                   	// #0
  404764:	bl	402c20 <dcgettext@plt>
  404768:	bl	40335c <wcrtomb@plt+0x61c>
  40476c:	mov	w2, #0x5                   	// #5
  404770:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404774:	add	x1, x1, #0x448
  404778:	add	x1, x1, #0x2fa
  40477c:	mov	x0, #0x0                   	// #0
  404780:	bl	402c20 <dcgettext@plt>
  404784:	bl	40335c <wcrtomb@plt+0x61c>
  404788:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40478c:	add	x22, x22, #0x528
  404790:	ldr	x23, [x22, #200]
  404794:	ldr	x24, [x19, #16]
  404798:	bl	403120 <wcrtomb@plt+0x3e0>
  40479c:	mov	x3, #0x0                   	// #0
  4047a0:	mov	x2, x0
  4047a4:	mov	x1, x24
  4047a8:	mov	x0, x23
  4047ac:	bl	403260 <wcrtomb@plt+0x520>
  4047b0:	str	x0, [x22, #200]
  4047b4:	b	4047f0 <wcrtomb@plt+0x1ab0>
  4047b8:	ldr	x0, [x22, #8]
  4047bc:	cbnz	x0, 4048f0 <wcrtomb@plt+0x1bb0>
  4047c0:	bl	4030ec <wcrtomb@plt+0x3ac>
  4047c4:	and	x2, x0, #0xff
  4047c8:	ldr	x1, [x23]
  4047cc:	ldrh	w1, [x1, x2, lsl #1]
  4047d0:	tbz	w1, #11, 4047e0 <wcrtomb@plt+0x1aa0>
  4047d4:	ldr	w1, [x28]
  4047d8:	cmp	w1, #0x2
  4047dc:	b.ne	40490c <wcrtomb@plt+0x1bcc>  // b.any
  4047e0:	mov	w1, #0xffffffff            	// #-1
  4047e4:	str	w1, [x22, #24]
  4047e8:	bl	402f8c <wcrtomb@plt+0x24c>
  4047ec:	bl	403ba0 <wcrtomb@plt+0xe60>
  4047f0:	ldr	x0, [x19, #16]
  4047f4:	add	x0, x0, #0x1
  4047f8:	str	x0, [x19, #16]
  4047fc:	bl	403020 <wcrtomb@plt+0x2e0>
  404800:	mov	w24, w0
  404804:	cmp	w0, #0x3b
  404808:	b.eq	4047fc <wcrtomb@plt+0x1abc>  // b.none
  40480c:	bl	402ab0 <__ctype_b_loc@plt>
  404810:	mov	x23, x0
  404814:	ldr	x0, [x0]
  404818:	ldrh	w0, [x0, w24, sxtw #1]
  40481c:	tbnz	w0, #13, 4047fc <wcrtomb@plt+0x1abc>
  404820:	cmn	w24, #0x1
  404824:	b.eq	40537c <wcrtomb@plt+0x263c>  // b.none
  404828:	ldr	x0, [x19, #8]
  40482c:	ldr	x1, [x19, #16]
  404830:	cmp	x1, x0
  404834:	b.eq	4042fc <wcrtomb@plt+0x15bc>  // b.none
  404838:	ldr	x25, [x19, #16]
  40483c:	add	x25, x25, x25, lsl #2
  404840:	ldr	x26, [x19]
  404844:	add	x22, x26, x25, lsl #3
  404848:	str	xzr, [x26, x25, lsl #3]
  40484c:	str	xzr, [x22, #8]
  404850:	str	wzr, [x22, #16]
  404854:	strb	wzr, [x22, #20]
  404858:	strb	wzr, [x22, #21]
  40485c:	mov	w1, w24
  404860:	add	x0, sp, #0xb0
  404864:	bl	4039c0 <wcrtomb@plt+0xc80>
  404868:	and	w0, w0, #0xff
  40486c:	cbz	w0, 4048b0 <wcrtomb@plt+0x1b70>
  404870:	ldr	w0, [sp, #176]
  404874:	sub	w0, w0, #0x4
  404878:	cmp	w0, #0x1
  40487c:	b.ls	404340 <wcrtomb@plt+0x1600>  // b.plast
  404880:	mov	x1, #0x20                  	// #32
  404884:	add	x0, sp, #0xb0
  404888:	bl	412e98 <wcrtomb@plt+0x10158>
  40488c:	str	x0, [x26, x25, lsl #3]
  404890:	bl	4030ec <wcrtomb@plt+0x3ac>
  404894:	mov	w24, w0
  404898:	cmp	w0, #0x2c
  40489c:	b.eq	40435c <wcrtomb@plt+0x161c>  // b.none
  4048a0:	ldr	x0, [x26, x25, lsl #3]
  4048a4:	ldr	w1, [x0]
  4048a8:	cmp	w1, #0x2
  4048ac:	b.eq	4043ac <wcrtomb@plt+0x166c>  // b.none
  4048b0:	cmp	w24, #0x21
  4048b4:	b.eq	4043dc <wcrtomb@plt+0x169c>  // b.none
  4048b8:	ldr	w0, [x28]
  4048bc:	cmp	w0, #0x2
  4048c0:	b.eq	404428 <wcrtomb@plt+0x16e8>  // b.none
  4048c4:	and	w1, w24, #0xff
  4048c8:	strb	w1, [x22, #21]
  4048cc:	add	w0, w24, #0x1
  4048d0:	cmp	w0, #0x7e
  4048d4:	b.hi	405374 <wcrtomb@plt+0x2634>  // b.pmore
  4048d8:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xccd0>
  4048dc:	add	x2, x2, #0x348
  4048e0:	ldrh	w0, [x2, w0, uxtw #1]
  4048e4:	adr	x2, 4048f0 <wcrtomb@plt+0x1bb0>
  4048e8:	add	x0, x2, w0, sxth #2
  4048ec:	br	x0
  4048f0:	mov	w2, #0x5                   	// #5
  4048f4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4048f8:	add	x1, x1, #0x448
  4048fc:	add	x1, x1, #0x115
  404900:	mov	x0, #0x0                   	// #0
  404904:	bl	402c20 <dcgettext@plt>
  404908:	bl	40335c <wcrtomb@plt+0x61c>
  40490c:	bl	4031f8 <wcrtomb@plt+0x4b8>
  404910:	str	w0, [x22, #24]
  404914:	b	4047ec <wcrtomb@plt+0x1aac>
  404918:	bl	403ba0 <wcrtomb@plt+0xe60>
  40491c:	b	4047f0 <wcrtomb@plt+0x1ab0>
  404920:	bl	40341c <wcrtomb@plt+0x6dc>
  404924:	mov	x23, x0
  404928:	bl	40aef4 <wcrtomb@plt+0x81b4>
  40492c:	ldrb	w1, [x0]
  404930:	cbz	w1, 404948 <wcrtomb@plt+0x1c08>
  404934:	bl	412ecc <wcrtomb@plt+0x1018c>
  404938:	str	x0, [x22, #24]
  40493c:	mov	x0, x23
  404940:	bl	40afe0 <wcrtomb@plt+0x82a0>
  404944:	b	4047f0 <wcrtomb@plt+0x1ab0>
  404948:	mov	w2, #0x5                   	// #5
  40494c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404950:	add	x1, x1, #0x448
  404954:	add	x1, x1, #0x35c
  404958:	mov	x0, #0x0                   	// #0
  40495c:	bl	402c20 <dcgettext@plt>
  404960:	bl	40335c <wcrtomb@plt+0x61c>
  404964:	mov	w2, #0x0                   	// #0
  404968:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40496c:	ldr	x1, [x0, #1128]
  404970:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404974:	add	x0, x0, #0x528
  404978:	add	x0, x0, #0xd0
  40497c:	bl	4034a4 <wcrtomb@plt+0x764>
  404980:	str	x0, [x22, #24]
  404984:	b	4047f0 <wcrtomb@plt+0x1ab0>
  404988:	mov	w2, #0x1                   	// #1
  40498c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404990:	ldr	x1, [x0, #1136]
  404994:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404998:	add	x0, x0, #0x528
  40499c:	add	x0, x0, #0xd8
  4049a0:	bl	4034a4 <wcrtomb@plt+0x764>
  4049a4:	str	x0, [x22, #24]
  4049a8:	b	4047f0 <wcrtomb@plt+0x1ab0>
  4049ac:	bl	403020 <wcrtomb@plt+0x2e0>
  4049b0:	mov	w24, w0
  4049b4:	mov	w1, #0x1                   	// #1
  4049b8:	bl	4036e8 <wcrtomb@plt+0x9a8>
  4049bc:	str	x0, [sp, #112]
  4049c0:	cbz	x0, 404ac8 <wcrtomb@plt+0x1d88>
  4049c4:	mov	w1, #0x0                   	// #0
  4049c8:	mov	w0, w24
  4049cc:	bl	4036e8 <wcrtomb@plt+0x9a8>
  4049d0:	str	x0, [sp, #104]
  4049d4:	cbz	x0, 404ae0 <wcrtomb@plt+0x1da0>
  4049d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4049dc:	add	x0, x0, #0x528
  4049e0:	ldr	x1, [x0, #32]
  4049e4:	ldr	x0, [x0, #24]
  4049e8:	sub	x0, x1, x0
  4049ec:	cmp	x0, #0x27
  4049f0:	b.ls	404af8 <wcrtomb@plt+0x1db8>  // b.plast
  4049f4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4049f8:	add	x0, x0, #0x528
  4049fc:	ldr	x2, [x0, #24]
  404a00:	add	x2, x2, #0x28
  404a04:	ldr	x27, [x0, #16]
  404a08:	cmp	x2, x27
  404a0c:	b.eq	404b0c <wcrtomb@plt+0x1dcc>  // b.none
  404a10:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404a14:	add	x1, x1, #0x528
  404a18:	ldr	x0, [x1, #48]
  404a1c:	add	x2, x2, x0
  404a20:	bic	x0, x2, x0
  404a24:	str	x0, [x1, #24]
  404a28:	ldr	x2, [x1, #8]
  404a2c:	ldr	x1, [x1, #32]
  404a30:	sub	x0, x0, x2
  404a34:	sub	x2, x1, x2
  404a38:	cmp	x0, x2
  404a3c:	b.ls	404a48 <wcrtomb@plt+0x1d08>  // b.plast
  404a40:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404a44:	str	x1, [x0, #1344]
  404a48:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404a4c:	add	x0, x0, #0x528
  404a50:	ldr	x1, [x0, #24]
  404a54:	str	x1, [x0, #16]
  404a58:	str	x27, [x22, #24]
  404a5c:	ldr	x25, [sp, #104]
  404a60:	mov	x0, x25
  404a64:	bl	40aef4 <wcrtomb@plt+0x81b4>
  404a68:	mov	x24, x0
  404a6c:	mov	x0, x25
  404a70:	bl	40aefc <wcrtomb@plt+0x81bc>
  404a74:	mov	x25, x0
  404a78:	ldrb	w0, [x27, #32]
  404a7c:	and	w0, w0, #0xf
  404a80:	strb	w0, [x27, #32]
  404a84:	mov	x1, x25
  404a88:	mov	x0, x24
  404a8c:	bl	412e98 <wcrtomb@plt+0x10158>
  404a90:	mov	x24, x0
  404a94:	mov	w2, #0x1                   	// #1
  404a98:	mov	x1, x25
  404a9c:	bl	403c54 <wcrtomb@plt+0xf14>
  404aa0:	add	x25, x24, x0
  404aa4:	cmp	x24, x25
  404aa8:	b.cs	404d48 <wcrtomb@plt+0x2008>  // b.hs, b.nlast
  404aac:	mov	x0, x24
  404ab0:	str	wzr, [sp, #96]
  404ab4:	add	x26, sp, #0xd0
  404ab8:	mov	w2, #0x0                   	// #0
  404abc:	mov	w1, #0x1                   	// #1
  404ac0:	str	w1, [sp, #120]
  404ac4:	b	404c3c <wcrtomb@plt+0x1efc>
  404ac8:	mov	w2, #0x5                   	// #5
  404acc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404ad0:	add	x1, x1, #0x448
  404ad4:	add	x1, x1, #0x14e
  404ad8:	bl	402c20 <dcgettext@plt>
  404adc:	bl	40335c <wcrtomb@plt+0x61c>
  404ae0:	mov	w2, #0x5                   	// #5
  404ae4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404ae8:	add	x1, x1, #0x448
  404aec:	add	x1, x1, #0x14e
  404af0:	bl	402c20 <dcgettext@plt>
  404af4:	bl	40335c <wcrtomb@plt+0x61c>
  404af8:	mov	x1, #0x28                  	// #40
  404afc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404b00:	add	x0, x0, #0x528
  404b04:	bl	413160 <_obstack_newchunk@@Base>
  404b08:	b	4049f4 <wcrtomb@plt+0x1cb4>
  404b0c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404b10:	add	x0, x0, #0x528
  404b14:	ldrb	w1, [x0, #80]
  404b18:	orr	w1, w1, #0x2
  404b1c:	strb	w1, [x0, #80]
  404b20:	b	404a10 <wcrtomb@plt+0x1cd0>
  404b24:	sub	x1, x24, x0
  404b28:	bl	402ea0 <wcrtomb@plt+0x160>
  404b2c:	mov	x1, x0
  404b30:	str	x0, [x26, #24]
  404b34:	add	x3, x24, #0x1
  404b38:	cmp	x25, x3
  404b3c:	b.eq	404b84 <wcrtomb@plt+0x1e44>  // b.none
  404b40:	ldr	w0, [x28]
  404b44:	cmp	w0, #0x2
  404b48:	b.eq	404b98 <wcrtomb@plt+0x1e58>  // b.none
  404b4c:	ldrb	w0, [x24, #1]
  404b50:	cmp	w0, #0x55
  404b54:	b.eq	404c8c <wcrtomb@plt+0x1f4c>  // b.none
  404b58:	cmp	w0, #0x55
  404b5c:	b.hi	404c08 <wcrtomb@plt+0x1ec8>  // b.pmore
  404b60:	cmp	w0, #0x45
  404b64:	b.eq	404c9c <wcrtomb@plt+0x1f5c>  // b.none
  404b68:	b.ls	404bc4 <wcrtomb@plt+0x1e84>  // b.plast
  404b6c:	cmp	w0, #0x4c
  404b70:	b.ne	404c74 <wcrtomb@plt+0x1f34>  // b.any
  404b74:	mov	w0, #0x2                   	// #2
  404b78:	str	w0, [sp, #96]
  404b7c:	mov	w2, w0
  404b80:	b	404c24 <wcrtomb@plt+0x1ee4>
  404b84:	ldr	x0, [x0, #8]
  404b88:	add	x0, x0, #0x1
  404b8c:	str	x0, [x1, #8]
  404b90:	ldr	w2, [sp, #96]
  404b94:	b	404c24 <wcrtomb@plt+0x1ee4>
  404b98:	ldrb	w0, [x24, #1]
  404b9c:	and	x4, x0, #0xff
  404ba0:	ldr	x2, [x23]
  404ba4:	ldrh	w2, [x2, x4, lsl #1]
  404ba8:	tbnz	w2, #11, 404b4c <wcrtomb@plt+0x1e0c>
  404bac:	strb	w0, [x24]
  404bb0:	ldr	x0, [x1, #8]
  404bb4:	add	x0, x0, #0x1
  404bb8:	str	x0, [x1, #8]
  404bbc:	ldr	w2, [sp, #96]
  404bc0:	b	404c24 <wcrtomb@plt+0x1ee4>
  404bc4:	sub	w2, w0, #0x30
  404bc8:	and	w2, w2, #0xff
  404bcc:	cmp	w2, #0x9
  404bd0:	b.hi	404c74 <wcrtomb@plt+0x1f34>  // b.pmore
  404bd4:	sub	w0, w0, #0x30
  404bd8:	str	w0, [x1, #16]
  404bdc:	ldrb	w4, [x27, #32]
  404be0:	ubfx	x4, x4, #4, #4
  404be4:	ldr	w5, [sp, #96]
  404be8:	mov	w2, w5
  404bec:	cmp	w0, w4
  404bf0:	b.le	404c24 <wcrtomb@plt+0x1ee4>
  404bf4:	ldrb	w2, [x27, #32]
  404bf8:	bfi	w2, w0, #4, #4
  404bfc:	strb	w2, [x27, #32]
  404c00:	mov	w2, w5
  404c04:	b	404c24 <wcrtomb@plt+0x1ee4>
  404c08:	ldr	w4, [sp, #96]
  404c0c:	orr	w2, w4, #0x8
  404c10:	cmp	w0, #0x6c
  404c14:	b.eq	404c24 <wcrtomb@plt+0x1ee4>  // b.none
  404c18:	orr	w2, w4, #0x4
  404c1c:	cmp	w0, #0x75
  404c20:	b.ne	404c74 <wcrtomb@plt+0x1f34>  // b.any
  404c24:	add	x0, x24, #0x2
  404c28:	mov	x26, x1
  404c2c:	mov	x24, x3
  404c30:	add	x24, x24, #0x1
  404c34:	cmp	x25, x24
  404c38:	b.ls	404ca8 <wcrtomb@plt+0x1f68>  // b.plast
  404c3c:	ldrb	w1, [x24]
  404c40:	cmp	w1, #0x5c
  404c44:	b.eq	404b24 <wcrtomb@plt+0x1de4>  // b.none
  404c48:	cmp	w1, #0x26
  404c4c:	b.ne	404c30 <wcrtomb@plt+0x1ef0>  // b.any
  404c50:	sub	x1, x24, x0
  404c54:	bl	402ea0 <wcrtomb@plt+0x160>
  404c58:	mov	x1, x0
  404c5c:	str	x0, [x26, #24]
  404c60:	str	wzr, [x0, #16]
  404c64:	add	x0, x24, #0x1
  404c68:	mov	x26, x1
  404c6c:	ldr	w2, [sp, #96]
  404c70:	b	404c30 <wcrtomb@plt+0x1ef0>
  404c74:	strb	w0, [x24]
  404c78:	ldr	x0, [x1, #8]
  404c7c:	add	x0, x0, #0x1
  404c80:	str	x0, [x1, #8]
  404c84:	ldr	w2, [sp, #96]
  404c88:	b	404c24 <wcrtomb@plt+0x1ee4>
  404c8c:	mov	w0, #0x1                   	// #1
  404c90:	str	w0, [sp, #96]
  404c94:	ldr	w2, [sp, #120]
  404c98:	b	404c24 <wcrtomb@plt+0x1ee4>
  404c9c:	str	wzr, [sp, #96]
  404ca0:	mov	w2, #0x0                   	// #0
  404ca4:	b	404c24 <wcrtomb@plt+0x1ee4>
  404ca8:	cmp	x25, x0
  404cac:	b.hi	404d34 <wcrtomb@plt+0x1ff4>  // b.pmore
  404cb0:	str	xzr, [x26, #24]
  404cb4:	ldr	x0, [sp, #232]
  404cb8:	str	x0, [x27, #8]
  404cbc:	ldr	x0, [sp, #104]
  404cc0:	bl	40afe0 <wcrtomb@plt+0x82a0>
  404cc4:	ldr	x23, [x22, #24]
  404cc8:	ldrb	w0, [x23, #32]
  404ccc:	and	w0, w0, #0xfffffff0
  404cd0:	strb	w0, [x23, #32]
  404cd4:	str	xzr, [x23, #16]
  404cd8:	str	xzr, [x23, #24]
  404cdc:	mov	w24, #0x0                   	// #0
  404ce0:	mov	w25, #0x1                   	// #1
  404ce4:	bl	4030ec <wcrtomb@plt+0x3ac>
  404ce8:	cmp	w0, #0x65
  404cec:	b.eq	404eb4 <wcrtomb@plt+0x2174>  // b.none
  404cf0:	b.gt	404df0 <wcrtomb@plt+0x20b0>
  404cf4:	cmp	w0, #0x39
  404cf8:	b.gt	404dc0 <wcrtomb@plt+0x2080>
  404cfc:	cmp	w0, #0x2f
  404d00:	b.gt	404f50 <wcrtomb@plt+0x2210>
  404d04:	cmp	w0, #0xd
  404d08:	b.eq	404f98 <wcrtomb@plt+0x2258>  // b.none
  404d0c:	b.le	404d50 <wcrtomb@plt+0x2010>
  404d10:	cmp	w0, #0x23
  404d14:	b.eq	404e60 <wcrtomb@plt+0x2120>  // b.none
  404d18:	mov	w2, #0x5                   	// #5
  404d1c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404d20:	add	x1, x1, #0x448
  404d24:	add	x1, x1, #0x180
  404d28:	mov	x0, #0x0                   	// #0
  404d2c:	bl	402c20 <dcgettext@plt>
  404d30:	bl	40335c <wcrtomb@plt+0x61c>
  404d34:	sub	x1, x25, x0
  404d38:	bl	402ea0 <wcrtomb@plt+0x160>
  404d3c:	str	x0, [x26, #24]
  404d40:	mov	x26, x0
  404d44:	b	404cb0 <wcrtomb@plt+0x1f70>
  404d48:	add	x26, sp, #0xd0
  404d4c:	b	404cb0 <wcrtomb@plt+0x1f70>
  404d50:	cmn	w0, #0x1
  404d54:	b.eq	404d60 <wcrtomb@plt+0x2020>  // b.none
  404d58:	cmp	w0, #0xa
  404d5c:	b.ne	404d18 <wcrtomb@plt+0x1fd8>  // b.any
  404d60:	ldr	x23, [x22, #24]
  404d64:	ldrb	w2, [x23, #32]
  404d68:	ubfx	x2, x2, #4, #4
  404d6c:	add	w2, w2, #0x1
  404d70:	mov	w1, w24
  404d74:	ldr	x24, [sp, #112]
  404d78:	mov	x0, x24
  404d7c:	bl	409530 <wcrtomb@plt+0x67f0>
  404d80:	str	x0, [x23]
  404d84:	mov	x0, x24
  404d88:	bl	40afe0 <wcrtomb@plt+0x82a0>
  404d8c:	ldr	x0, [x22, #24]
  404d90:	ldrb	w0, [x0, #32]
  404d94:	tbz	w0, #3, 4047f0 <wcrtomb@plt+0x1ab0>
  404d98:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404d9c:	ldrb	w0, [x0, #1900]
  404da0:	cbz	w0, 4047f0 <wcrtomb@plt+0x1ab0>
  404da4:	mov	w2, #0x5                   	// #5
  404da8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404dac:	add	x1, x1, #0x448
  404db0:	add	x1, x1, #0x334
  404db4:	mov	x0, #0x0                   	// #0
  404db8:	bl	402c20 <dcgettext@plt>
  404dbc:	bl	40335c <wcrtomb@plt+0x61c>
  404dc0:	cmp	w0, #0x49
  404dc4:	b.eq	404e68 <wcrtomb@plt+0x2128>  // b.none
  404dc8:	cmp	w0, #0x4d
  404dcc:	b.ne	404de4 <wcrtomb@plt+0x20a4>  // b.any
  404dd0:	ldr	w0, [x28]
  404dd4:	cmp	w0, #0x2
  404dd8:	b.eq	404e98 <wcrtomb@plt+0x2158>  // b.none
  404ddc:	orr	w24, w24, #0x4
  404de0:	b	404ce4 <wcrtomb@plt+0x1fa4>
  404de4:	cmp	w0, #0x3b
  404de8:	b.eq	404d60 <wcrtomb@plt+0x2020>  // b.none
  404dec:	b	404d18 <wcrtomb@plt+0x1fd8>
  404df0:	cmp	w0, #0x70
  404df4:	b.eq	404eec <wcrtomb@plt+0x21ac>  // b.none
  404df8:	b.le	404e28 <wcrtomb@plt+0x20e8>
  404dfc:	cmp	w0, #0x77
  404e00:	b.ne	404e58 <wcrtomb@plt+0x2118>  // b.any
  404e04:	mov	w2, #0x1                   	// #1
  404e08:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404e0c:	ldr	x1, [x0, #1136]
  404e10:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  404e14:	add	x0, x0, #0x528
  404e18:	add	x0, x0, #0xd8
  404e1c:	bl	4034a4 <wcrtomb@plt+0x764>
  404e20:	str	x0, [x23, #24]
  404e24:	b	404d60 <wcrtomb@plt+0x2020>
  404e28:	cmp	w0, #0x69
  404e2c:	b.eq	404e68 <wcrtomb@plt+0x2128>  // b.none
  404e30:	cmp	w0, #0x6d
  404e34:	b.eq	404dd0 <wcrtomb@plt+0x2090>  // b.none
  404e38:	cmp	w0, #0x67
  404e3c:	b.ne	404d18 <wcrtomb@plt+0x1fd8>  // b.any
  404e40:	ldrb	w0, [x23, #32]
  404e44:	tbnz	w0, #0, 404f34 <wcrtomb@plt+0x21f4>
  404e48:	ldrb	w0, [x23, #32]
  404e4c:	orr	w0, w0, #0x1
  404e50:	strb	w0, [x23, #32]
  404e54:	b	404ce4 <wcrtomb@plt+0x1fa4>
  404e58:	cmp	w0, #0x7d
  404e5c:	b.ne	404d18 <wcrtomb@plt+0x1fd8>  // b.any
  404e60:	bl	402f8c <wcrtomb@plt+0x24c>
  404e64:	b	404d60 <wcrtomb@plt+0x2020>
  404e68:	ldr	w0, [x28]
  404e6c:	cmp	w0, #0x2
  404e70:	b.eq	404e7c <wcrtomb@plt+0x213c>  // b.none
  404e74:	orr	w24, w24, #0x2
  404e78:	b	404ce4 <wcrtomb@plt+0x1fa4>
  404e7c:	mov	w2, #0x5                   	// #5
  404e80:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404e84:	add	x1, x1, #0x448
  404e88:	add	x1, x1, #0x180
  404e8c:	mov	x0, #0x0                   	// #0
  404e90:	bl	402c20 <dcgettext@plt>
  404e94:	bl	40335c <wcrtomb@plt+0x61c>
  404e98:	mov	w2, #0x5                   	// #5
  404e9c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404ea0:	add	x1, x1, #0x448
  404ea4:	add	x1, x1, #0x180
  404ea8:	mov	x0, #0x0                   	// #0
  404eac:	bl	402c20 <dcgettext@plt>
  404eb0:	bl	40335c <wcrtomb@plt+0x61c>
  404eb4:	ldr	w0, [x28]
  404eb8:	cmp	w0, #0x2
  404ebc:	b.eq	404ed0 <wcrtomb@plt+0x2190>  // b.none
  404ec0:	ldrb	w0, [x23, #32]
  404ec4:	orr	w0, w0, #0x8
  404ec8:	strb	w0, [x23, #32]
  404ecc:	b	404ce4 <wcrtomb@plt+0x1fa4>
  404ed0:	mov	w2, #0x5                   	// #5
  404ed4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404ed8:	add	x1, x1, #0x448
  404edc:	add	x1, x1, #0x180
  404ee0:	mov	x0, #0x0                   	// #0
  404ee4:	bl	402c20 <dcgettext@plt>
  404ee8:	bl	40335c <wcrtomb@plt+0x61c>
  404eec:	ldrb	w0, [x23, #32]
  404ef0:	tst	w0, #0x6
  404ef4:	b.ne	404f18 <wcrtomb@plt+0x21d8>  // b.any
  404ef8:	ldrb	w0, [x23, #32]
  404efc:	ubfx	x1, x0, #3, #1
  404f00:	lsl	w1, w25, w1
  404f04:	ubfx	x2, x0, #1, #2
  404f08:	orr	w1, w1, w2
  404f0c:	bfi	w0, w1, #1, #2
  404f10:	strb	w0, [x23, #32]
  404f14:	b	404ce4 <wcrtomb@plt+0x1fa4>
  404f18:	mov	w2, #0x5                   	// #5
  404f1c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404f20:	add	x1, x1, #0x448
  404f24:	add	x1, x1, #0x196
  404f28:	mov	x0, #0x0                   	// #0
  404f2c:	bl	402c20 <dcgettext@plt>
  404f30:	bl	40335c <wcrtomb@plt+0x61c>
  404f34:	mov	w2, #0x5                   	// #5
  404f38:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404f3c:	add	x1, x1, #0x448
  404f40:	add	x1, x1, #0x1ba
  404f44:	mov	x0, #0x0                   	// #0
  404f48:	bl	402c20 <dcgettext@plt>
  404f4c:	bl	40335c <wcrtomb@plt+0x61c>
  404f50:	ldr	x1, [x23, #16]
  404f54:	cbnz	x1, 404f7c <wcrtomb@plt+0x223c>
  404f58:	bl	4031f8 <wcrtomb@plt+0x4b8>
  404f5c:	str	x0, [x23, #16]
  404f60:	cbnz	x0, 404ce4 <wcrtomb@plt+0x1fa4>
  404f64:	mov	w2, #0x5                   	// #5
  404f68:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404f6c:	add	x1, x1, #0x448
  404f70:	add	x1, x1, #0x205
  404f74:	bl	402c20 <dcgettext@plt>
  404f78:	bl	40335c <wcrtomb@plt+0x61c>
  404f7c:	mov	w2, #0x5                   	// #5
  404f80:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  404f84:	add	x1, x1, #0x448
  404f88:	add	x1, x1, #0x1de
  404f8c:	mov	x0, #0x0                   	// #0
  404f90:	bl	402c20 <dcgettext@plt>
  404f94:	bl	40335c <wcrtomb@plt+0x61c>
  404f98:	bl	403020 <wcrtomb@plt+0x2e0>
  404f9c:	cmp	w0, #0xa
  404fa0:	b.eq	404d60 <wcrtomb@plt+0x2020>  // b.none
  404fa4:	b	404d18 <wcrtomb@plt+0x1fd8>
  404fa8:	bl	403020 <wcrtomb@plt+0x2e0>
  404fac:	mov	w24, w0
  404fb0:	mov	w1, #0x0                   	// #0
  404fb4:	bl	4036e8 <wcrtomb@plt+0x9a8>
  404fb8:	str	x0, [sp, #152]
  404fbc:	cbz	x0, 405128 <wcrtomb@plt+0x23e8>
  404fc0:	ldr	x23, [sp, #152]
  404fc4:	mov	x0, x23
  404fc8:	bl	40aef4 <wcrtomb@plt+0x81b4>
  404fcc:	mov	x25, x0
  404fd0:	mov	x0, x23
  404fd4:	bl	40aefc <wcrtomb@plt+0x81bc>
  404fd8:	mov	w2, #0x0                   	// #0
  404fdc:	mov	x1, x0
  404fe0:	mov	x0, x25
  404fe4:	bl	403c54 <wcrtomb@plt+0xf14>
  404fe8:	mov	x23, x0
  404fec:	mov	w1, #0x0                   	// #0
  404ff0:	mov	w0, w24
  404ff4:	bl	4036e8 <wcrtomb@plt+0x9a8>
  404ff8:	str	x0, [sp, #160]
  404ffc:	cbz	x0, 405140 <wcrtomb@plt+0x2400>
  405000:	ldr	x26, [sp, #160]
  405004:	mov	x0, x26
  405008:	bl	40aef4 <wcrtomb@plt+0x81b4>
  40500c:	mov	x24, x0
  405010:	str	x0, [sp, #104]
  405014:	mov	x0, x26
  405018:	bl	40aefc <wcrtomb@plt+0x81bc>
  40501c:	mov	w2, #0x0                   	// #0
  405020:	mov	x1, x0
  405024:	mov	x0, x24
  405028:	bl	403c54 <wcrtomb@plt+0xf14>
  40502c:	str	x0, [sp, #96]
  405030:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405034:	ldr	w0, [x0, #2260]
  405038:	cmp	w0, #0x1
  40503c:	b.gt	405158 <wcrtomb@plt+0x2418>
  405040:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405044:	add	x0, x0, #0x528
  405048:	ldr	x1, [x0, #32]
  40504c:	ldr	x0, [x0, #24]
  405050:	sub	x0, x1, x0
  405054:	cmp	x0, #0xff
  405058:	b.ls	405310 <wcrtomb@plt+0x25d0>  // b.plast
  40505c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405060:	add	x0, x0, #0x528
  405064:	ldr	x3, [x0, #24]
  405068:	add	x3, x3, #0x100
  40506c:	ldr	x1, [x0, #16]
  405070:	cmp	x3, x1
  405074:	b.eq	405324 <wcrtomb@plt+0x25e4>  // b.none
  405078:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40507c:	add	x2, x2, #0x528
  405080:	ldr	x0, [x2, #48]
  405084:	add	x3, x3, x0
  405088:	bic	x0, x3, x0
  40508c:	str	x0, [x2, #24]
  405090:	ldr	x3, [x2, #8]
  405094:	ldr	x2, [x2, #32]
  405098:	sub	x0, x0, x3
  40509c:	sub	x3, x2, x3
  4050a0:	cmp	x0, x3
  4050a4:	b.ls	4050b0 <wcrtomb@plt+0x2370>  // b.plast
  4050a8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4050ac:	str	x2, [x0, #1344]
  4050b0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4050b4:	add	x0, x0, #0x528
  4050b8:	ldr	x2, [x0, #24]
  4050bc:	str	x2, [x0, #16]
  4050c0:	ldr	x0, [sp, #96]
  4050c4:	cmp	x23, x0
  4050c8:	b.ne	40533c <wcrtomb@plt+0x25fc>  // b.any
  4050cc:	mov	x0, #0x0                   	// #0
  4050d0:	strb	w0, [x1, x0]
  4050d4:	add	x0, x0, #0x1
  4050d8:	cmp	x0, #0x100
  4050dc:	b.ne	4050d0 <wcrtomb@plt+0x2390>  // b.any
  4050e0:	ldr	x0, [sp, #96]
  4050e4:	cbz	x0, 40510c <wcrtomb@plt+0x23cc>
  4050e8:	mov	x0, #0x0                   	// #0
  4050ec:	ldr	x2, [sp, #104]
  4050f0:	ldrb	w3, [x2, x0]
  4050f4:	ldrb	w2, [x25, x0]
  4050f8:	strb	w3, [x1, x2]
  4050fc:	add	x0, x0, #0x1
  405100:	ldr	x2, [sp, #96]
  405104:	cmp	x2, x0
  405108:	b.ne	4050ec <wcrtomb@plt+0x23ac>  // b.any
  40510c:	str	x1, [x22, #24]
  405110:	bl	403ba0 <wcrtomb@plt+0xe60>
  405114:	ldr	x0, [sp, #152]
  405118:	bl	40afe0 <wcrtomb@plt+0x82a0>
  40511c:	ldr	x0, [sp, #160]
  405120:	bl	40afe0 <wcrtomb@plt+0x82a0>
  405124:	b	4047f0 <wcrtomb@plt+0x1ab0>
  405128:	mov	w2, #0x5                   	// #5
  40512c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405130:	add	x1, x1, #0x448
  405134:	add	x1, x1, #0x167
  405138:	bl	402c20 <dcgettext@plt>
  40513c:	bl	40335c <wcrtomb@plt+0x61c>
  405140:	mov	w2, #0x5                   	// #5
  405144:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405148:	add	x1, x1, #0x448
  40514c:	add	x1, x1, #0x167
  405150:	bl	402c20 <dcgettext@plt>
  405154:	bl	40335c <wcrtomb@plt+0x61c>
  405158:	mov	x1, #0x8                   	// #8
  40515c:	mov	x0, x23
  405160:	bl	412e48 <wcrtomb@plt+0x10108>
  405164:	str	x0, [sp, #128]
  405168:	str	xzr, [sp, #208]
  40516c:	cbz	x23, 4053d4 <wcrtomb@plt+0x2694>
  405170:	str	xzr, [sp, #120]
  405174:	mov	x24, #0x0                   	// #0
  405178:	adrp	x26, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40517c:	add	x26, x26, #0x8d4
  405180:	sub	x27, x0, #0x8
  405184:	b	4051cc <wcrtomb@plt+0x248c>
  405188:	add	x3, sp, #0xd0
  40518c:	sub	x2, x23, x24
  405190:	add	x1, x25, x24
  405194:	mov	x0, #0x0                   	// #0
  405198:	bl	412f3c <wcrtomb@plt+0x101fc>
  40519c:	sub	x1, x0, #0x1
  4051a0:	cmn	x1, #0x3
  4051a4:	csinc	x0, x0, xzr, cc  // cc = lo, ul, last
  4051a8:	ldr	x1, [sp, #120]
  4051ac:	add	x1, x1, #0x1
  4051b0:	str	x1, [sp, #144]
  4051b4:	str	x0, [x27, x1, lsl #3]
  4051b8:	add	x24, x24, x0
  4051bc:	cmp	x23, x24
  4051c0:	b.ls	4051e0 <wcrtomb@plt+0x24a0>  // b.plast
  4051c4:	ldr	x0, [sp, #144]
  4051c8:	str	x0, [sp, #120]
  4051cc:	ldr	w1, [x26]
  4051d0:	mov	x0, #0x1                   	// #1
  4051d4:	cmp	w1, #0x1
  4051d8:	b.eq	4051a8 <wcrtomb@plt+0x2468>  // b.none
  4051dc:	b	405188 <wcrtomb@plt+0x2448>
  4051e0:	str	xzr, [sp, #208]
  4051e4:	mov	x23, x1
  4051e8:	lsl	x0, x1, #1
  4051ec:	mov	x1, #0x8                   	// #8
  4051f0:	add	x0, x0, #0x1
  4051f4:	bl	412e48 <wcrtomb@plt+0x10108>
  4051f8:	str	x0, [sp, #168]
  4051fc:	str	x0, [x22, #24]
  405200:	cbz	x23, 405308 <wcrtomb@plt+0x25c8>
  405204:	ldr	x0, [sp, #96]
  405208:	cbz	x0, 405228 <wcrtomb@plt+0x24e8>
  40520c:	ldr	x27, [sp, #168]
  405210:	mov	x23, #0x0                   	// #0
  405214:	mov	x26, #0x0                   	// #0
  405218:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40521c:	add	x0, x0, #0x8d4
  405220:	str	x0, [sp, #136]
  405224:	b	4052c0 <wcrtomb@plt+0x2580>
  405228:	mov	w2, #0x5                   	// #5
  40522c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405230:	add	x1, x1, #0x448
  405234:	add	x1, x1, #0x232
  405238:	mov	x0, #0x0                   	// #0
  40523c:	bl	402c20 <dcgettext@plt>
  405240:	bl	40335c <wcrtomb@plt+0x61c>
  405244:	add	x3, sp, #0xd0
  405248:	ldr	x0, [sp, #96]
  40524c:	sub	x2, x0, x23
  405250:	ldr	x0, [sp, #104]
  405254:	add	x1, x0, x23
  405258:	mov	x0, #0x0                   	// #0
  40525c:	bl	412f3c <wcrtomb@plt+0x101fc>
  405260:	mov	x22, x0
  405264:	sub	x0, x0, #0x1
  405268:	cmn	x0, #0x3
  40526c:	csinc	x22, x22, xzr, cc  // cc = lo, ul, last
  405270:	add	x0, x22, #0x1
  405274:	bl	412e80 <wcrtomb@plt+0x10140>
  405278:	mov	x24, x0
  40527c:	ldr	x1, [sp, #112]
  405280:	str	x0, [x1, #8]
  405284:	mov	x2, x22
  405288:	ldr	x1, [sp, #104]
  40528c:	add	x1, x1, x23
  405290:	bl	402650 <memcpy@plt>
  405294:	strb	wzr, [x24, x22]
  405298:	add	x23, x23, x22
  40529c:	add	x0, x26, #0x1
  4052a0:	ldr	x1, [sp, #120]
  4052a4:	cmp	x26, x1
  4052a8:	b.eq	4053f0 <wcrtomb@plt+0x26b0>  // b.none
  4052ac:	add	x27, x27, #0x10
  4052b0:	ldr	x1, [sp, #96]
  4052b4:	cmp	x1, x23
  4052b8:	b.ls	405228 <wcrtomb@plt+0x24e8>  // b.plast
  4052bc:	mov	x26, x0
  4052c0:	ldr	x0, [sp, #128]
  4052c4:	ldr	x22, [x0, x26, lsl #3]
  4052c8:	add	x0, x22, #0x1
  4052cc:	bl	412e80 <wcrtomb@plt+0x10140>
  4052d0:	mov	x24, x0
  4052d4:	str	x27, [sp, #112]
  4052d8:	str	x0, [x27]
  4052dc:	mov	x2, x22
  4052e0:	mov	x1, x25
  4052e4:	bl	402650 <memcpy@plt>
  4052e8:	strb	wzr, [x24, x22]
  4052ec:	add	x25, x25, x22
  4052f0:	ldr	x0, [sp, #136]
  4052f4:	ldr	w0, [x0]
  4052f8:	mov	x22, #0x1                   	// #1
  4052fc:	cmp	w0, #0x1
  405300:	b.eq	405270 <wcrtomb@plt+0x2530>  // b.none
  405304:	b	405244 <wcrtomb@plt+0x2504>
  405308:	ldr	x23, [sp, #144]
  40530c:	b	4053f0 <wcrtomb@plt+0x26b0>
  405310:	mov	x1, #0x100                 	// #256
  405314:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405318:	add	x0, x0, #0x528
  40531c:	bl	413160 <_obstack_newchunk@@Base>
  405320:	b	40505c <wcrtomb@plt+0x231c>
  405324:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405328:	add	x0, x0, #0x528
  40532c:	ldrb	w2, [x0, #80]
  405330:	orr	w2, w2, #0x2
  405334:	strb	w2, [x0, #80]
  405338:	b	405078 <wcrtomb@plt+0x2338>
  40533c:	mov	w2, #0x5                   	// #5
  405340:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405344:	add	x1, x1, #0x448
  405348:	add	x1, x1, #0x232
  40534c:	mov	x0, #0x0                   	// #0
  405350:	bl	402c20 <dcgettext@plt>
  405354:	bl	40335c <wcrtomb@plt+0x61c>
  405358:	mov	w2, #0x5                   	// #5
  40535c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405360:	add	x1, x1, #0x448
  405364:	add	x1, x1, #0x105
  405368:	mov	x0, #0x0                   	// #0
  40536c:	bl	402c20 <dcgettext@plt>
  405370:	bl	40335c <wcrtomb@plt+0x61c>
  405374:	mov	w0, w1
  405378:	bl	403bfc <wcrtomb@plt+0xebc>
  40537c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405380:	ldr	w0, [x0, #2264]
  405384:	cmp	w0, #0x2
  405388:	b.eq	4053ac <wcrtomb@plt+0x266c>  // b.none
  40538c:	mov	x0, x19
  405390:	ldp	x19, x20, [sp, #16]
  405394:	ldp	x21, x22, [sp, #32]
  405398:	ldp	x23, x24, [sp, #48]
  40539c:	ldp	x25, x26, [sp, #64]
  4053a0:	ldp	x27, x28, [sp, #80]
  4053a4:	ldp	x29, x30, [sp], #240
  4053a8:	ret
  4053ac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4053b0:	ldr	x0, [x0, #1488]
  4053b4:	cbz	x0, 40538c <wcrtomb@plt+0x264c>
  4053b8:	mov	w2, #0x5                   	// #5
  4053bc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4053c0:	add	x1, x1, #0x448
  4053c4:	add	x1, x1, #0x2e7
  4053c8:	mov	x0, #0x0                   	// #0
  4053cc:	bl	402c20 <dcgettext@plt>
  4053d0:	bl	40335c <wcrtomb@plt+0x61c>
  4053d4:	str	xzr, [sp, #208]
  4053d8:	mov	x1, #0x8                   	// #8
  4053dc:	mov	x0, #0x1                   	// #1
  4053e0:	bl	412e48 <wcrtomb@plt+0x10108>
  4053e4:	str	x0, [sp, #168]
  4053e8:	str	x0, [x22, #24]
  4053ec:	str	x23, [sp, #144]
  4053f0:	ldr	x0, [sp, #144]
  4053f4:	lsl	x0, x0, #4
  4053f8:	ldr	x1, [sp, #168]
  4053fc:	str	xzr, [x1, x0]
  405400:	ldr	x0, [sp, #96]
  405404:	cmp	x0, x23
  405408:	b.eq	405110 <wcrtomb@plt+0x23d0>  // b.none
  40540c:	mov	w2, #0x5                   	// #5
  405410:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405414:	add	x1, x1, #0x448
  405418:	add	x1, x1, #0x232
  40541c:	mov	x0, #0x0                   	// #0
  405420:	bl	402c20 <dcgettext@plt>
  405424:	bl	40335c <wcrtomb@plt+0x61c>
  405428:	stp	x29, x30, [sp, #-32]!
  40542c:	mov	x29, sp
  405430:	stp	x19, x20, [sp, #16]
  405434:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405438:	add	x19, x19, #0x528
  40543c:	str	xzr, [x19, #136]
  405440:	str	x1, [x19, #112]
  405444:	str	x1, [x19, #120]
  405448:	add	x1, x1, x2
  40544c:	str	x1, [x19, #128]
  405450:	str	xzr, [x19, #96]
  405454:	str	xzr, [x19, #88]
  405458:	ldr	x1, [x19, #224]
  40545c:	add	x1, x1, #0x1
  405460:	str	x1, [x19, #224]
  405464:	str	x1, [x19, #104]
  405468:	bl	404254 <wcrtomb@plt+0x1514>
  40546c:	str	xzr, [x19, #112]
  405470:	str	xzr, [x19, #120]
  405474:	str	xzr, [x19, #128]
  405478:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40547c:	strb	wzr, [x1, #1080]
  405480:	ldp	x19, x20, [sp, #16]
  405484:	ldp	x29, x30, [sp], #32
  405488:	ret
  40548c:	stp	x29, x30, [sp, #-48]!
  405490:	mov	x29, sp
  405494:	stp	x19, x20, [sp, #16]
  405498:	str	x21, [sp, #32]
  40549c:	mov	x21, x0
  4054a0:	mov	x19, x1
  4054a4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4054a8:	ldr	x1, [x0, #1296]
  4054ac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4054b0:	str	x1, [x0, #1456]
  4054b4:	ldrb	w0, [x19]
  4054b8:	cmp	w0, #0x2d
  4054bc:	b.ne	4054c8 <wcrtomb@plt+0x2788>  // b.any
  4054c0:	ldrb	w0, [x19, #1]
  4054c4:	cbz	w0, 4054e4 <wcrtomb@plt+0x27a4>
  4054c8:	mov	w2, #0x1                   	// #1
  4054cc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4054d0:	add	x1, x1, #0x2b0
  4054d4:	mov	x0, x19
  4054d8:	bl	40a6b4 <wcrtomb@plt+0x7974>
  4054dc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4054e0:	str	x0, [x1, #1456]
  4054e4:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4054e8:	add	x20, x20, #0x528
  4054ec:	mov	x1, #0x1                   	// #1
  4054f0:	str	x1, [x20, #96]
  4054f4:	str	x19, [x20, #88]
  4054f8:	str	xzr, [x20, #104]
  4054fc:	mov	x0, x21
  405500:	bl	404254 <wcrtomb@plt+0x1514>
  405504:	mov	x19, x0
  405508:	ldr	x0, [x20, #136]
  40550c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405510:	ldr	x1, [x1, #1296]
  405514:	cmp	x0, x1
  405518:	b.eq	405520 <wcrtomb@plt+0x27e0>  // b.none
  40551c:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  405520:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405524:	str	xzr, [x0, #1456]
  405528:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40552c:	strb	wzr, [x0, #1080]
  405530:	mov	x0, x19
  405534:	ldp	x19, x20, [sp, #16]
  405538:	ldr	x21, [sp, #32]
  40553c:	ldp	x29, x30, [sp], #48
  405540:	ret
  405544:	stp	x29, x30, [sp, #-64]!
  405548:	mov	x29, sp
  40554c:	stp	x21, x22, [sp, #32]
  405550:	mov	x22, x0
  405554:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405558:	ldr	x0, [x0, #1504]
  40555c:	cbnz	x0, 4055bc <wcrtomb@plt+0x287c>
  405560:	stp	x19, x20, [sp, #16]
  405564:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405568:	ldr	x20, [x0, #1488]
  40556c:	cbz	x20, 4055a0 <wcrtomb@plt+0x2860>
  405570:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405574:	ldr	x21, [x0, #1496]
  405578:	mov	x0, x20
  40557c:	bl	40aefc <wcrtomb@plt+0x81bc>
  405580:	mov	x19, x0
  405584:	str	x0, [x21, #8]
  405588:	cbnz	x0, 4055f8 <wcrtomb@plt+0x28b8>
  40558c:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405590:	add	x19, x19, #0x528
  405594:	ldr	x0, [x19, #168]
  405598:	bl	40afe0 <wcrtomb@plt+0x82a0>
  40559c:	str	xzr, [x19, #168]
  4055a0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4055a4:	ldr	x21, [x0, #1520]
  4055a8:	cbz	x21, 405630 <wcrtomb@plt+0x28f0>
  4055ac:	str	x23, [sp, #48]
  4055b0:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4055b4:	add	x23, x23, #0x528
  4055b8:	b	40569c <wcrtomb@plt+0x295c>
  4055bc:	stp	x19, x20, [sp, #16]
  4055c0:	str	x23, [sp, #48]
  4055c4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4055c8:	add	x1, x1, #0x528
  4055cc:	ldp	x2, x3, [x0, #16]
  4055d0:	stp	x2, x3, [x1, #88]
  4055d4:	ldr	x0, [x0, #32]
  4055d8:	str	x0, [x1, #104]
  4055dc:	mov	w2, #0x5                   	// #5
  4055e0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4055e4:	add	x1, x1, #0x448
  4055e8:	add	x1, x1, #0x48
  4055ec:	mov	x0, #0x0                   	// #0
  4055f0:	bl	402c20 <dcgettext@plt>
  4055f4:	bl	40335c <wcrtomb@plt+0x61c>
  4055f8:	mov	x0, x20
  4055fc:	bl	40aef4 <wcrtomb@plt+0x81b4>
  405600:	mov	x1, x19
  405604:	bl	412e98 <wcrtomb@plt+0x10158>
  405608:	str	x0, [x21]
  40560c:	b	40558c <wcrtomb@plt+0x284c>
  405610:	mov	w2, #0x5                   	// #5
  405614:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405618:	add	x1, x1, #0x2b8
  40561c:	mov	x0, #0x0                   	// #0
  405620:	bl	402c20 <dcgettext@plt>
  405624:	ldr	x1, [x21, #8]
  405628:	bl	40a510 <wcrtomb@plt+0x77d0>
  40562c:	ldr	x23, [sp, #48]
  405630:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405634:	add	x0, x0, #0x528
  405638:	str	xzr, [x0, #200]
  40563c:	ldr	x19, [x0, #192]
  405640:	cbz	x19, 405658 <wcrtomb@plt+0x2918>
  405644:	mov	x0, x19
  405648:	ldr	x19, [x19, #40]
  40564c:	ldr	x0, [x0, #8]
  405650:	bl	402ae0 <free@plt>
  405654:	cbnz	x19, 405644 <wcrtomb@plt+0x2904>
  405658:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40565c:	str	xzr, [x0, #1512]
  405660:	ldp	x19, x20, [sp, #16]
  405664:	ldp	x21, x22, [sp, #32]
  405668:	ldp	x29, x30, [sp], #64
  40566c:	ret
  405670:	ldr	x0, [x19]
  405674:	ldr	x1, [x21]
  405678:	ldr	x2, [x22]
  40567c:	add	x1, x1, x1, lsl #2
  405680:	add	x1, x2, x1, lsl #3
  405684:	str	x0, [x1, #24]
  405688:	ldr	x19, [x21, #40]
  40568c:	ldr	x0, [x21, #8]
  405690:	bl	402ae0 <free@plt>
  405694:	cbz	x19, 40562c <wcrtomb@plt+0x28ec>
  405698:	mov	x21, x19
  40569c:	ldr	x19, [x23, #192]
  4056a0:	cbz	x19, 4056c0 <wcrtomb@plt+0x2980>
  4056a4:	ldr	x20, [x21, #8]
  4056a8:	mov	x1, x20
  4056ac:	ldr	x0, [x19, #8]
  4056b0:	bl	402aa0 <strcmp@plt>
  4056b4:	cbz	w0, 405670 <wcrtomb@plt+0x2930>
  4056b8:	ldr	x19, [x19, #40]
  4056bc:	cbnz	x19, 4056a8 <wcrtomb@plt+0x2968>
  4056c0:	ldr	x0, [x21, #8]
  4056c4:	ldrb	w0, [x0]
  4056c8:	cbnz	w0, 405610 <wcrtomb@plt+0x28d0>
  4056cc:	ldr	x1, [x22, #16]
  4056d0:	ldr	x0, [x21]
  4056d4:	ldr	x2, [x22]
  4056d8:	add	x0, x0, x0, lsl #2
  4056dc:	add	x0, x2, x0, lsl #3
  4056e0:	str	x1, [x0, #24]
  4056e4:	b	405688 <wcrtomb@plt+0x2948>
  4056e8:	stp	x29, x30, [sp, #-32]!
  4056ec:	mov	x29, sp
  4056f0:	str	x19, [sp, #16]
  4056f4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4056f8:	ldr	x19, [x0, #1528]
  4056fc:	cbnz	x19, 405718 <wcrtomb@plt+0x29d8>
  405700:	ldr	x19, [sp, #16]
  405704:	ldp	x29, x30, [sp], #32
  405708:	ret
  40570c:	bl	402960 <rewind@plt>
  405710:	ldr	x19, [x19, #24]
  405714:	cbz	x19, 405700 <wcrtomb@plt+0x29c0>
  405718:	ldr	x0, [x19, #16]
  40571c:	cbnz	x0, 40570c <wcrtomb@plt+0x29cc>
  405720:	b	405710 <wcrtomb@plt+0x29d0>
  405724:	stp	x29, x30, [sp, #-32]!
  405728:	mov	x29, sp
  40572c:	str	x19, [sp, #16]
  405730:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405734:	ldr	x19, [x0, #1528]
  405738:	cbnz	x19, 40575c <wcrtomb@plt+0x2a1c>
  40573c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405740:	ldr	x19, [x0, #1536]
  405744:	cbnz	x19, 405794 <wcrtomb@plt+0x2a54>
  405748:	b	4057b8 <wcrtomb@plt+0x2a78>
  40574c:	bl	402ae0 <free@plt>
  405750:	str	xzr, [x19]
  405754:	ldr	x19, [x19, #24]
  405758:	cbz	x19, 405768 <wcrtomb@plt+0x2a28>
  40575c:	ldr	x0, [x19]
  405760:	cbnz	x0, 40574c <wcrtomb@plt+0x2a0c>
  405764:	b	405754 <wcrtomb@plt+0x2a14>
  405768:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40576c:	ldr	x19, [x0, #1536]
  405770:	cbnz	x19, 405794 <wcrtomb@plt+0x2a54>
  405774:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405778:	ldr	x19, [x0, #1528]
  40577c:	cbnz	x19, 4057e0 <wcrtomb@plt+0x2aa0>
  405780:	b	4057b8 <wcrtomb@plt+0x2a78>
  405784:	bl	402ae0 <free@plt>
  405788:	str	xzr, [x19]
  40578c:	ldr	x19, [x19, #24]
  405790:	cbz	x19, 4057a0 <wcrtomb@plt+0x2a60>
  405794:	ldr	x0, [x19]
  405798:	cbnz	x0, 405784 <wcrtomb@plt+0x2a44>
  40579c:	b	40578c <wcrtomb@plt+0x2a4c>
  4057a0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4057a4:	ldr	x19, [x0, #1528]
  4057a8:	cbnz	x19, 4057e0 <wcrtomb@plt+0x2aa0>
  4057ac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4057b0:	ldr	x19, [x0, #1536]
  4057b4:	cbnz	x19, 4057f8 <wcrtomb@plt+0x2ab8>
  4057b8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4057bc:	add	x0, x0, #0x528
  4057c0:	str	xzr, [x0, #216]
  4057c4:	str	xzr, [x0, #208]
  4057c8:	ldr	x19, [sp, #16]
  4057cc:	ldp	x29, x30, [sp], #32
  4057d0:	ret
  4057d4:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  4057d8:	ldr	x19, [x19, #24]
  4057dc:	cbz	x19, 4057ac <wcrtomb@plt+0x2a6c>
  4057e0:	ldr	x0, [x19, #16]
  4057e4:	cbnz	x0, 4057d4 <wcrtomb@plt+0x2a94>
  4057e8:	b	4057d8 <wcrtomb@plt+0x2a98>
  4057ec:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  4057f0:	ldr	x19, [x19, #24]
  4057f4:	cbz	x19, 4057b8 <wcrtomb@plt+0x2a78>
  4057f8:	ldr	x0, [x19, #16]
  4057fc:	cbnz	x0, 4057ec <wcrtomb@plt+0x2aac>
  405800:	b	4057f0 <wcrtomb@plt+0x2ab0>
  405804:	cbz	x0, 4058b0 <wcrtomb@plt+0x2b70>
  405808:	stp	x29, x30, [sp, #-32]!
  40580c:	mov	x29, sp
  405810:	stp	x19, x20, [sp, #16]
  405814:	mov	x19, x0
  405818:	and	w20, w1, #0xff
  40581c:	ldr	w0, [x0, #64]
  405820:	tbz	w0, #1, 405858 <wcrtomb@plt+0x2b18>
  405824:	cmp	w20, #0x0
  405828:	mov	w1, #0x49                  	// #73
  40582c:	mov	w0, #0x69                  	// #105
  405830:	csel	w1, w1, w0, ne  // ne = any
  405834:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405838:	ldr	x0, [x0, #1288]
  40583c:	ldr	x2, [x0, #40]
  405840:	ldr	x3, [x0, #48]
  405844:	cmp	x2, x3
  405848:	b.cs	4058a0 <wcrtomb@plt+0x2b60>  // b.hs, b.nlast
  40584c:	add	x3, x2, #0x1
  405850:	str	x3, [x0, #40]
  405854:	strb	w1, [x2]
  405858:	ldr	w0, [x19, #64]
  40585c:	tbz	w0, #2, 405894 <wcrtomb@plt+0x2b54>
  405860:	cmp	w20, #0x0
  405864:	mov	w1, #0x4d                  	// #77
  405868:	mov	w0, #0x6d                  	// #109
  40586c:	csel	w1, w1, w0, ne  // ne = any
  405870:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405874:	ldr	x0, [x0, #1288]
  405878:	ldr	x2, [x0, #40]
  40587c:	ldr	x3, [x0, #48]
  405880:	cmp	x2, x3
  405884:	b.cs	4058a8 <wcrtomb@plt+0x2b68>  // b.hs, b.nlast
  405888:	add	x3, x2, #0x1
  40588c:	str	x3, [x0, #40]
  405890:	strb	w1, [x2]
  405894:	ldp	x19, x20, [sp, #16]
  405898:	ldp	x29, x30, [sp], #32
  40589c:	ret
  4058a0:	bl	402a20 <__overflow@plt>
  4058a4:	b	405858 <wcrtomb@plt+0x2b18>
  4058a8:	bl	402a20 <__overflow@plt>
  4058ac:	b	405894 <wcrtomb@plt+0x2b54>
  4058b0:	ret
  4058b4:	cbz	x0, 4058d8 <wcrtomb@plt+0x2b98>
  4058b8:	stp	x29, x30, [sp, #-16]!
  4058bc:	mov	x29, sp
  4058c0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4058c4:	ldr	x1, [x1, #1288]
  4058c8:	ldr	x0, [x0]
  4058cc:	bl	402c30 <fputs_unlocked@plt>
  4058d0:	ldp	x29, x30, [sp], #16
  4058d4:	ret
  4058d8:	ret
  4058dc:	stp	x29, x30, [sp, #-32]!
  4058e0:	mov	x29, sp
  4058e4:	str	x19, [sp, #16]
  4058e8:	and	w19, w0, #0xff
  4058ec:	bl	402ab0 <__ctype_b_loc@plt>
  4058f0:	and	x1, x19, #0xff
  4058f4:	ldr	x0, [x0]
  4058f8:	ldrh	w0, [x0, x1, lsl #1]
  4058fc:	and	w0, w0, #0x4000
  405900:	cmp	w19, #0x5c
  405904:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  405908:	b.ne	40597c <wcrtomb@plt+0x2c3c>  // b.any
  40590c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405910:	ldr	x0, [x0, #1288]
  405914:	ldr	x1, [x0, #40]
  405918:	ldr	x2, [x0, #48]
  40591c:	cmp	x1, x2
  405920:	b.cs	4059b8 <wcrtomb@plt+0x2c78>  // b.hs, b.nlast
  405924:	add	x2, x1, #0x1
  405928:	str	x2, [x0, #40]
  40592c:	mov	w0, #0x5c                  	// #92
  405930:	strb	w0, [x1]
  405934:	cmp	w19, #0xb
  405938:	b.eq	405af0 <wcrtomb@plt+0x2db0>  // b.none
  40593c:	b.hi	4059f8 <wcrtomb@plt+0x2cb8>  // b.pmore
  405940:	cmp	w19, #0x9
  405944:	b.eq	405ab8 <wcrtomb@plt+0x2d78>  // b.none
  405948:	cmp	w19, #0xa
  40594c:	b.ne	4059c4 <wcrtomb@plt+0x2c84>  // b.any
  405950:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405954:	ldr	x0, [x0, #1288]
  405958:	ldr	x1, [x0, #40]
  40595c:	ldr	x2, [x0, #48]
  405960:	cmp	x1, x2
  405964:	b.cs	405b28 <wcrtomb@plt+0x2de8>  // b.hs, b.nlast
  405968:	add	x2, x1, #0x1
  40596c:	str	x2, [x0, #40]
  405970:	mov	w0, #0x6e                  	// #110
  405974:	strb	w0, [x1]
  405978:	b	4059a0 <wcrtomb@plt+0x2c60>
  40597c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405980:	ldr	x0, [x0, #1288]
  405984:	ldr	x1, [x0, #40]
  405988:	ldr	x2, [x0, #48]
  40598c:	cmp	x1, x2
  405990:	b.cs	4059ac <wcrtomb@plt+0x2c6c>  // b.hs, b.nlast
  405994:	add	x2, x1, #0x1
  405998:	str	x2, [x0, #40]
  40599c:	strb	w19, [x1]
  4059a0:	ldr	x19, [sp, #16]
  4059a4:	ldp	x29, x30, [sp], #32
  4059a8:	ret
  4059ac:	mov	w1, w19
  4059b0:	bl	402a20 <__overflow@plt>
  4059b4:	b	4059a0 <wcrtomb@plt+0x2c60>
  4059b8:	mov	w1, #0x5c                  	// #92
  4059bc:	bl	402a20 <__overflow@plt>
  4059c0:	b	405934 <wcrtomb@plt+0x2bf4>
  4059c4:	cmp	w19, #0x7
  4059c8:	b.ne	405b40 <wcrtomb@plt+0x2e00>  // b.any
  4059cc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4059d0:	ldr	x0, [x0, #1288]
  4059d4:	ldr	x1, [x0, #40]
  4059d8:	ldr	x2, [x0, #48]
  4059dc:	cmp	x1, x2
  4059e0:	b.cs	405a68 <wcrtomb@plt+0x2d28>  // b.hs, b.nlast
  4059e4:	add	x2, x1, #0x1
  4059e8:	str	x2, [x0, #40]
  4059ec:	mov	w0, #0x61                  	// #97
  4059f0:	strb	w0, [x1]
  4059f4:	b	4059a0 <wcrtomb@plt+0x2c60>
  4059f8:	cmp	w19, #0xd
  4059fc:	b.eq	405a80 <wcrtomb@plt+0x2d40>  // b.none
  405a00:	cmp	w19, #0x5c
  405a04:	b.ne	405a34 <wcrtomb@plt+0x2cf4>  // b.any
  405a08:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405a0c:	ldr	x0, [x0, #1288]
  405a10:	ldr	x1, [x0, #40]
  405a14:	ldr	x2, [x0, #48]
  405a18:	cmp	x1, x2
  405a1c:	b.cs	405b34 <wcrtomb@plt+0x2df4>  // b.hs, b.nlast
  405a20:	add	x2, x1, #0x1
  405a24:	str	x2, [x0, #40]
  405a28:	mov	w0, #0x5c                  	// #92
  405a2c:	strb	w0, [x1]
  405a30:	b	4059a0 <wcrtomb@plt+0x2c60>
  405a34:	cmp	w19, #0xc
  405a38:	b.ne	405b40 <wcrtomb@plt+0x2e00>  // b.any
  405a3c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405a40:	ldr	x0, [x0, #1288]
  405a44:	ldr	x1, [x0, #40]
  405a48:	ldr	x2, [x0, #48]
  405a4c:	cmp	x1, x2
  405a50:	b.cs	405a74 <wcrtomb@plt+0x2d34>  // b.hs, b.nlast
  405a54:	add	x2, x1, #0x1
  405a58:	str	x2, [x0, #40]
  405a5c:	mov	w0, #0x66                  	// #102
  405a60:	strb	w0, [x1]
  405a64:	b	4059a0 <wcrtomb@plt+0x2c60>
  405a68:	mov	w1, #0x61                  	// #97
  405a6c:	bl	402a20 <__overflow@plt>
  405a70:	b	4059a0 <wcrtomb@plt+0x2c60>
  405a74:	mov	w1, #0x66                  	// #102
  405a78:	bl	402a20 <__overflow@plt>
  405a7c:	b	4059a0 <wcrtomb@plt+0x2c60>
  405a80:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405a84:	ldr	x0, [x0, #1288]
  405a88:	ldr	x1, [x0, #40]
  405a8c:	ldr	x2, [x0, #48]
  405a90:	cmp	x1, x2
  405a94:	b.cs	405aac <wcrtomb@plt+0x2d6c>  // b.hs, b.nlast
  405a98:	add	x2, x1, #0x1
  405a9c:	str	x2, [x0, #40]
  405aa0:	mov	w0, #0x72                  	// #114
  405aa4:	strb	w0, [x1]
  405aa8:	b	4059a0 <wcrtomb@plt+0x2c60>
  405aac:	mov	w1, #0x72                  	// #114
  405ab0:	bl	402a20 <__overflow@plt>
  405ab4:	b	4059a0 <wcrtomb@plt+0x2c60>
  405ab8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405abc:	ldr	x0, [x0, #1288]
  405ac0:	ldr	x1, [x0, #40]
  405ac4:	ldr	x2, [x0, #48]
  405ac8:	cmp	x1, x2
  405acc:	b.cs	405ae4 <wcrtomb@plt+0x2da4>  // b.hs, b.nlast
  405ad0:	add	x2, x1, #0x1
  405ad4:	str	x2, [x0, #40]
  405ad8:	mov	w0, #0x74                  	// #116
  405adc:	strb	w0, [x1]
  405ae0:	b	4059a0 <wcrtomb@plt+0x2c60>
  405ae4:	mov	w1, #0x74                  	// #116
  405ae8:	bl	402a20 <__overflow@plt>
  405aec:	b	4059a0 <wcrtomb@plt+0x2c60>
  405af0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405af4:	ldr	x0, [x0, #1288]
  405af8:	ldr	x1, [x0, #40]
  405afc:	ldr	x2, [x0, #48]
  405b00:	cmp	x1, x2
  405b04:	b.cs	405b1c <wcrtomb@plt+0x2ddc>  // b.hs, b.nlast
  405b08:	add	x2, x1, #0x1
  405b0c:	str	x2, [x0, #40]
  405b10:	mov	w0, #0x76                  	// #118
  405b14:	strb	w0, [x1]
  405b18:	b	4059a0 <wcrtomb@plt+0x2c60>
  405b1c:	mov	w1, #0x76                  	// #118
  405b20:	bl	402a20 <__overflow@plt>
  405b24:	b	4059a0 <wcrtomb@plt+0x2c60>
  405b28:	mov	w1, #0x6e                  	// #110
  405b2c:	bl	402a20 <__overflow@plt>
  405b30:	b	4059a0 <wcrtomb@plt+0x2c60>
  405b34:	mov	w1, #0x5c                  	// #92
  405b38:	bl	402a20 <__overflow@plt>
  405b3c:	b	4059a0 <wcrtomb@plt+0x2c60>
  405b40:	mov	w2, w19
  405b44:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405b48:	add	x1, x1, #0x7d0
  405b4c:	mov	w0, #0x1                   	// #1
  405b50:	bl	4028b0 <__printf_chk@plt>
  405b54:	b	4059a0 <wcrtomb@plt+0x2c60>
  405b58:	stp	x29, x30, [sp, #-64]!
  405b5c:	mov	x29, sp
  405b60:	cbz	x0, 405bc8 <wcrtomb@plt+0x2e88>
  405b64:	stp	x19, x20, [sp, #16]
  405b68:	mov	x19, x0
  405b6c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405b70:	ldr	x0, [x0, #1288]
  405b74:	ldr	x1, [x0, #40]
  405b78:	ldr	x2, [x0, #48]
  405b7c:	cmp	x1, x2
  405b80:	b.cs	405be8 <wcrtomb@plt+0x2ea8>  // b.hs, b.nlast
  405b84:	add	x2, x1, #0x1
  405b88:	str	x2, [x0, #40]
  405b8c:	mov	w0, #0x2f                  	// #47
  405b90:	strb	w0, [x1]
  405b94:	add	x20, x19, #0x5a
  405b98:	ldr	x0, [x19, #72]
  405b9c:	cbz	x0, 405c30 <wcrtomb@plt+0x2ef0>
  405ba0:	stp	x21, x22, [sp, #32]
  405ba4:	stp	x23, x24, [sp, #48]
  405ba8:	add	x0, x0, #0x5a
  405bac:	add	x19, x19, x0
  405bb0:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405bb4:	adrp	x21, 420000 <_obstack_memory_used@@Base+0xccd0>
  405bb8:	add	x21, x21, #0x7e0
  405bbc:	mov	x23, #0x2                   	// #2
  405bc0:	mov	x22, #0x1                   	// #1
  405bc4:	b	405c04 <wcrtomb@plt+0x2ec4>
  405bc8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405bcc:	ldr	x3, [x0, #1288]
  405bd0:	mov	x2, #0x2                   	// #2
  405bd4:	mov	x1, #0x1                   	// #1
  405bd8:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  405bdc:	add	x0, x0, #0x7d8
  405be0:	bl	402680 <fwrite_unlocked@plt>
  405be4:	b	405c5c <wcrtomb@plt+0x2f1c>
  405be8:	mov	w1, #0x2f                  	// #47
  405bec:	bl	402a20 <__overflow@plt>
  405bf0:	b	405b94 <wcrtomb@plt+0x2e54>
  405bf4:	bl	4058dc <wcrtomb@plt+0x2b9c>
  405bf8:	add	x20, x20, #0x1
  405bfc:	cmp	x19, x20
  405c00:	b.eq	405c28 <wcrtomb@plt+0x2ee8>  // b.none
  405c04:	ldrb	w0, [x20]
  405c08:	cmp	w0, #0x2f
  405c0c:	b.ne	405bf4 <wcrtomb@plt+0x2eb4>  // b.any
  405c10:	ldr	x3, [x24, #1288]
  405c14:	mov	x2, x23
  405c18:	mov	x1, x22
  405c1c:	mov	x0, x21
  405c20:	bl	402680 <fwrite_unlocked@plt>
  405c24:	b	405bf8 <wcrtomb@plt+0x2eb8>
  405c28:	ldp	x21, x22, [sp, #32]
  405c2c:	ldp	x23, x24, [sp, #48]
  405c30:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405c34:	ldr	x0, [x0, #1288]
  405c38:	ldr	x1, [x0, #40]
  405c3c:	ldr	x2, [x0, #48]
  405c40:	cmp	x1, x2
  405c44:	b.cs	405c64 <wcrtomb@plt+0x2f24>  // b.hs, b.nlast
  405c48:	add	x2, x1, #0x1
  405c4c:	str	x2, [x0, #40]
  405c50:	mov	w0, #0x2f                  	// #47
  405c54:	strb	w0, [x1]
  405c58:	ldp	x19, x20, [sp, #16]
  405c5c:	ldp	x29, x30, [sp], #64
  405c60:	ret
  405c64:	mov	w1, #0x2f                  	// #47
  405c68:	bl	402a20 <__overflow@plt>
  405c6c:	ldp	x19, x20, [sp, #16]
  405c70:	b	405c5c <wcrtomb@plt+0x2f1c>
  405c74:	cbz	x0, 405da0 <wcrtomb@plt+0x3060>
  405c78:	stp	x29, x30, [sp, #-32]!
  405c7c:	mov	x29, sp
  405c80:	str	x19, [sp, #16]
  405c84:	mov	x19, x0
  405c88:	ldr	w1, [x0]
  405c8c:	cmp	w1, #0x3
  405c90:	b.eq	405d60 <wcrtomb@plt+0x3020>  // b.none
  405c94:	b.hi	405cec <wcrtomb@plt+0x2fac>  // b.pmore
  405c98:	cmp	w1, #0x1
  405c9c:	b.eq	405d48 <wcrtomb@plt+0x3008>  // b.none
  405ca0:	cmp	w1, #0x2
  405ca4:	b.ne	405cc0 <wcrtomb@plt+0x2f80>  // b.any
  405ca8:	ldr	x2, [x0, #8]
  405cac:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405cb0:	add	x1, x1, #0x7f8
  405cb4:	mov	w0, #0x1                   	// #1
  405cb8:	bl	4028b0 <__printf_chk@plt>
  405cbc:	b	405ce0 <wcrtomb@plt+0x2fa0>
  405cc0:	cbnz	w1, 405ce0 <wcrtomb@plt+0x2fa0>
  405cc4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405cc8:	ldr	x3, [x0, #1288]
  405ccc:	mov	x2, #0xb                   	// #11
  405cd0:	mov	x1, #0x1                   	// #1
  405cd4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  405cd8:	add	x0, x0, #0x7e8
  405cdc:	bl	402680 <fwrite_unlocked@plt>
  405ce0:	ldr	x19, [sp, #16]
  405ce4:	ldp	x29, x30, [sp], #32
  405ce8:	ret
  405cec:	cmp	w1, #0x5
  405cf0:	b.eq	405d7c <wcrtomb@plt+0x303c>  // b.none
  405cf4:	cmp	w1, #0x6
  405cf8:	b.ne	405d28 <wcrtomb@plt+0x2fe8>  // b.any
  405cfc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405d00:	ldr	x0, [x0, #1288]
  405d04:	ldr	x1, [x0, #40]
  405d08:	ldr	x2, [x0, #48]
  405d0c:	cmp	x1, x2
  405d10:	b.cs	405d94 <wcrtomb@plt+0x3054>  // b.hs, b.nlast
  405d14:	add	x2, x1, #0x1
  405d18:	str	x2, [x0, #40]
  405d1c:	mov	w0, #0x24                  	// #36
  405d20:	strb	w0, [x1]
  405d24:	b	405ce0 <wcrtomb@plt+0x2fa0>
  405d28:	cmp	w1, #0x4
  405d2c:	b.ne	405ce0 <wcrtomb@plt+0x2fa0>  // b.any
  405d30:	ldr	x2, [x0, #16]
  405d34:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405d38:	add	x1, x1, #0x808
  405d3c:	mov	w0, #0x1                   	// #1
  405d40:	bl	4028b0 <__printf_chk@plt>
  405d44:	b	405ce0 <wcrtomb@plt+0x2fa0>
  405d48:	ldr	x0, [x0, #24]
  405d4c:	bl	405b58 <wcrtomb@plt+0x2e18>
  405d50:	mov	w1, #0x1                   	// #1
  405d54:	ldr	x0, [x19, #24]
  405d58:	bl	405804 <wcrtomb@plt+0x2ac4>
  405d5c:	b	405ce0 <wcrtomb@plt+0x2fa0>
  405d60:	ldr	x3, [x0, #16]
  405d64:	ldr	x2, [x0, #8]
  405d68:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405d6c:	add	x1, x1, #0x800
  405d70:	mov	w0, #0x1                   	// #1
  405d74:	bl	4028b0 <__printf_chk@plt>
  405d78:	b	405ce0 <wcrtomb@plt+0x2fa0>
  405d7c:	ldr	x2, [x0, #16]
  405d80:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405d84:	add	x1, x1, #0x810
  405d88:	mov	w0, #0x1                   	// #1
  405d8c:	bl	4028b0 <__printf_chk@plt>
  405d90:	b	405ce0 <wcrtomb@plt+0x2fa0>
  405d94:	mov	w1, #0x24                  	// #36
  405d98:	bl	402a20 <__overflow@plt>
  405d9c:	b	405ce0 <wcrtomb@plt+0x2fa0>
  405da0:	ret
  405da4:	cbz	x0, 4067bc <wcrtomb@plt+0x3a7c>
  405da8:	stp	x29, x30, [sp, #-80]!
  405dac:	mov	x29, sp
  405db0:	stp	x19, x20, [sp, #16]
  405db4:	stp	x21, x22, [sp, #32]
  405db8:	stp	x25, x26, [sp, #64]
  405dbc:	mov	x25, x0
  405dc0:	mov	x20, x1
  405dc4:	ldrb	w0, [x1, #21]
  405dc8:	cmp	w0, #0x7d
  405dcc:	b.eq	405f30 <wcrtomb@plt+0x31f0>  // b.none
  405dd0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405dd4:	ldr	w0, [x0, #1552]
  405dd8:	cmp	w0, #0x0
  405ddc:	b.le	405e2c <wcrtomb@plt+0x30ec>
  405de0:	stp	x23, x24, [sp, #48]
  405de4:	mov	w19, #0x0                   	// #0
  405de8:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405dec:	adrp	x22, 420000 <_obstack_memory_used@@Base+0xccd0>
  405df0:	add	x22, x22, #0x818
  405df4:	mov	x26, #0x2                   	// #2
  405df8:	mov	x23, #0x1                   	// #1
  405dfc:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405e00:	add	x21, x21, #0x610
  405e04:	ldr	x3, [x24, #1288]
  405e08:	mov	x2, x26
  405e0c:	mov	x1, x23
  405e10:	mov	x0, x22
  405e14:	bl	402680 <fwrite_unlocked@plt>
  405e18:	add	w19, w19, #0x1
  405e1c:	ldr	w1, [x21]
  405e20:	cmp	w1, w19
  405e24:	b.gt	405e04 <wcrtomb@plt+0x30c4>
  405e28:	ldp	x23, x24, [sp, #48]
  405e2c:	ldr	x0, [x20]
  405e30:	bl	405c74 <wcrtomb@plt+0x2f34>
  405e34:	ldr	x0, [x20, #8]
  405e38:	cbz	x0, 405e64 <wcrtomb@plt+0x3124>
  405e3c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405e40:	ldr	x0, [x0, #1288]
  405e44:	ldr	x1, [x0, #40]
  405e48:	ldr	x2, [x0, #48]
  405e4c:	cmp	x1, x2
  405e50:	b.cs	405f44 <wcrtomb@plt+0x3204>  // b.hs, b.nlast
  405e54:	add	x2, x1, #0x1
  405e58:	str	x2, [x0, #40]
  405e5c:	mov	w0, #0x2c                  	// #44
  405e60:	strb	w0, [x1]
  405e64:	ldr	x0, [x20, #8]
  405e68:	bl	405c74 <wcrtomb@plt+0x2f34>
  405e6c:	ldrb	w1, [x20, #20]
  405e70:	ldrb	w0, [x20, #21]
  405e74:	cmp	w0, #0x7b
  405e78:	b.eq	405f50 <wcrtomb@plt+0x3210>  // b.none
  405e7c:	cmp	w1, #0x0
  405e80:	cset	w0, ne  // ne = any
  405e84:	cbz	w0, 405eb0 <wcrtomb@plt+0x3170>
  405e88:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405e8c:	ldr	x0, [x0, #1288]
  405e90:	ldr	x1, [x0, #40]
  405e94:	ldr	x2, [x0, #48]
  405e98:	cmp	x1, x2
  405e9c:	b.cs	405f5c <wcrtomb@plt+0x321c>  // b.hs, b.nlast
  405ea0:	add	x2, x1, #0x1
  405ea4:	str	x2, [x0, #40]
  405ea8:	mov	w0, #0x21                  	// #33
  405eac:	strb	w0, [x1]
  405eb0:	ldr	x0, [x20]
  405eb4:	cbz	x0, 405f68 <wcrtomb@plt+0x3228>
  405eb8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405ebc:	ldr	x0, [x0, #1288]
  405ec0:	ldr	x1, [x0, #40]
  405ec4:	ldr	x2, [x0, #48]
  405ec8:	cmp	x1, x2
  405ecc:	b.cs	405f74 <wcrtomb@plt+0x3234>  // b.hs, b.nlast
  405ed0:	add	x2, x1, #0x1
  405ed4:	str	x2, [x0, #40]
  405ed8:	mov	w0, #0x20                  	// #32
  405edc:	strb	w0, [x1]
  405ee0:	ldrb	w1, [x20, #21]
  405ee4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405ee8:	ldr	x0, [x0, #1288]
  405eec:	ldr	x2, [x0, #40]
  405ef0:	ldr	x3, [x0, #48]
  405ef4:	cmp	x2, x3
  405ef8:	b.cs	405f80 <wcrtomb@plt+0x3240>  // b.hs, b.nlast
  405efc:	add	x3, x2, #0x1
  405f00:	str	x3, [x0, #40]
  405f04:	strb	w1, [x2]
  405f08:	ldrb	w0, [x20, #21]
  405f0c:	sub	w0, w0, #0x23
  405f10:	cmp	w0, #0x5a
  405f14:	b.hi	406778 <wcrtomb@plt+0x3a38>  // b.pmore
  405f18:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405f1c:	add	x1, x1, #0x858
  405f20:	ldrh	w0, [x1, w0, uxtw #1]
  405f24:	adr	x1, 405f30 <wcrtomb@plt+0x31f0>
  405f28:	add	x0, x1, w0, sxth #2
  405f2c:	br	x0
  405f30:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405f34:	ldr	w0, [x1, #1552]
  405f38:	sub	w0, w0, #0x1
  405f3c:	str	w0, [x1, #1552]
  405f40:	b	405dd0 <wcrtomb@plt+0x3090>
  405f44:	mov	w1, #0x2c                  	// #44
  405f48:	bl	402a20 <__overflow@plt>
  405f4c:	b	405e64 <wcrtomb@plt+0x3124>
  405f50:	cmp	w1, #0x0
  405f54:	cset	w0, eq  // eq = none
  405f58:	b	405e84 <wcrtomb@plt+0x3144>
  405f5c:	mov	w1, #0x21                  	// #33
  405f60:	bl	402a20 <__overflow@plt>
  405f64:	b	405eb0 <wcrtomb@plt+0x3170>
  405f68:	ldr	x0, [x20, #8]
  405f6c:	cbnz	x0, 405eb8 <wcrtomb@plt+0x3178>
  405f70:	b	405ee0 <wcrtomb@plt+0x31a0>
  405f74:	mov	w1, #0x20                  	// #32
  405f78:	bl	402a20 <__overflow@plt>
  405f7c:	b	405ee0 <wcrtomb@plt+0x31a0>
  405f80:	bl	402a20 <__overflow@plt>
  405f84:	b	405f08 <wcrtomb@plt+0x31c8>
  405f88:	ldr	x2, [x20, #24]
  405f8c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  405f90:	add	x1, x1, #0x940
  405f94:	mov	w0, #0x1                   	// #1
  405f98:	bl	4028b0 <__printf_chk@plt>
  405f9c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  405fa0:	ldr	x0, [x0, #1288]
  405fa4:	ldr	x1, [x0, #40]
  405fa8:	ldr	x2, [x0, #48]
  405fac:	cmp	x1, x2
  405fb0:	b.cs	40679c <wcrtomb@plt+0x3a5c>  // b.hs, b.nlast
  405fb4:	add	x2, x1, #0x1
  405fb8:	str	x2, [x0, #40]
  405fbc:	mov	w0, #0xa                   	// #10
  405fc0:	strb	w0, [x1]
  405fc4:	ldrb	w0, [x20, #21]
  405fc8:	cmp	w0, #0x7b
  405fcc:	b.eq	4067a8 <wcrtomb@plt+0x3a68>  // b.none
  405fd0:	ldp	x19, x20, [sp, #16]
  405fd4:	ldp	x21, x22, [sp, #32]
  405fd8:	ldp	x25, x26, [sp, #64]
  405fdc:	ldp	x29, x30, [sp], #80
  405fe0:	ret
  405fe4:	stp	x23, x24, [sp, #48]
  405fe8:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xccd0>
  405fec:	add	x3, x3, #0x910
  405ff0:	mov	w2, #0x123                 	// #291
  405ff4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  405ff8:	add	x1, x1, #0x820
  405ffc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  406000:	add	x0, x0, #0x830
  406004:	bl	402ca0 <__assert_fail@plt>
  406008:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40600c:	ldr	x1, [x0, #1288]
  406010:	mov	w0, #0x5c                  	// #92
  406014:	bl	402bd0 <fputc_unlocked@plt>
  406018:	ldr	x2, [x20, #32]
  40601c:	cbz	x2, 405f9c <wcrtomb@plt+0x325c>
  406020:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406024:	ldr	x3, [x0, #1288]
  406028:	mov	x1, #0x1                   	// #1
  40602c:	ldr	x0, [x20, #24]
  406030:	bl	402680 <fwrite_unlocked@plt>
  406034:	b	405f9c <wcrtomb@plt+0x325c>
  406038:	ldr	x0, [x20, #24]
  40603c:	ldr	x1, [x25, #16]
  406040:	cmp	x0, x1
  406044:	b.cs	405f9c <wcrtomb@plt+0x325c>  // b.hs, b.nlast
  406048:	ldr	x1, [x25]
  40604c:	add	x0, x0, x0, lsl #2
  406050:	add	x0, x1, x0, lsl #3
  406054:	ldr	x2, [x0, #24]
  406058:	cbz	x2, 405f9c <wcrtomb@plt+0x325c>
  40605c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  406060:	add	x1, x1, #0x9d0
  406064:	mov	w0, #0x1                   	// #1
  406068:	bl	4028b0 <__printf_chk@plt>
  40606c:	b	405f9c <wcrtomb@plt+0x325c>
  406070:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406074:	ldr	x0, [x0, #1288]
  406078:	ldr	x1, [x0, #40]
  40607c:	ldr	x2, [x0, #48]
  406080:	cmp	x1, x2
  406084:	b.cs	4060b4 <wcrtomb@plt+0x3374>  // b.hs, b.nlast
  406088:	add	x2, x1, #0x1
  40608c:	str	x2, [x0, #40]
  406090:	mov	w0, #0x20                  	// #32
  406094:	strb	w0, [x1]
  406098:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40609c:	ldr	x3, [x0, #1288]
  4060a0:	ldr	x2, [x20, #32]
  4060a4:	mov	x1, #0x1                   	// #1
  4060a8:	ldr	x0, [x20, #24]
  4060ac:	bl	402680 <fwrite_unlocked@plt>
  4060b0:	b	405f9c <wcrtomb@plt+0x325c>
  4060b4:	mov	w1, #0x20                  	// #32
  4060b8:	bl	402a20 <__overflow@plt>
  4060bc:	b	406098 <wcrtomb@plt+0x3358>
  4060c0:	ldr	w2, [x20, #24]
  4060c4:	cmn	w2, #0x1
  4060c8:	b.eq	405f9c <wcrtomb@plt+0x325c>  // b.none
  4060cc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4060d0:	add	x1, x1, #0x838
  4060d4:	mov	w0, #0x1                   	// #1
  4060d8:	bl	4028b0 <__printf_chk@plt>
  4060dc:	b	405f9c <wcrtomb@plt+0x325c>
  4060e0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4060e4:	ldr	x0, [x0, #1288]
  4060e8:	ldr	x1, [x0, #40]
  4060ec:	ldr	x2, [x0, #48]
  4060f0:	cmp	x1, x2
  4060f4:	b.cs	40611c <wcrtomb@plt+0x33dc>  // b.hs, b.nlast
  4060f8:	add	x2, x1, #0x1
  4060fc:	str	x2, [x0, #40]
  406100:	mov	w0, #0x20                  	// #32
  406104:	strb	w0, [x1]
  406108:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40610c:	ldr	x1, [x0, #1288]
  406110:	ldr	x0, [x20, #24]
  406114:	bl	402c30 <fputs_unlocked@plt>
  406118:	b	405f9c <wcrtomb@plt+0x325c>
  40611c:	mov	w1, #0x20                  	// #32
  406120:	bl	402a20 <__overflow@plt>
  406124:	b	406108 <wcrtomb@plt+0x33c8>
  406128:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40612c:	ldr	x0, [x0, #1288]
  406130:	ldr	x1, [x0, #40]
  406134:	ldr	x2, [x0, #48]
  406138:	cmp	x1, x2
  40613c:	b.cs	406168 <wcrtomb@plt+0x3428>  // b.hs, b.nlast
  406140:	add	x2, x1, #0x1
  406144:	str	x2, [x0, #40]
  406148:	mov	w0, #0x20                  	// #32
  40614c:	strb	w0, [x1]
  406150:	ldr	x0, [x20, #24]
  406154:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406158:	ldr	x1, [x1, #1288]
  40615c:	ldr	x0, [x0]
  406160:	bl	402c30 <fputs_unlocked@plt>
  406164:	b	405f9c <wcrtomb@plt+0x325c>
  406168:	mov	w1, #0x20                  	// #32
  40616c:	bl	402a20 <__overflow@plt>
  406170:	b	406150 <wcrtomb@plt+0x3410>
  406174:	ldr	x22, [x20, #24]
  406178:	cbz	x22, 405f9c <wcrtomb@plt+0x325c>
  40617c:	ldr	x0, [x22]
  406180:	bl	405b58 <wcrtomb@plt+0x2e18>
  406184:	ldr	x19, [x22, #8]
  406188:	cbz	x19, 406388 <wcrtomb@plt+0x3648>
  40618c:	stp	x23, x24, [sp, #48]
  406190:	mov	w26, #0x0                   	// #0
  406194:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406198:	mov	w25, #0x6c                  	// #108
  40619c:	mov	w24, #0x6c                  	// #108
  4061a0:	adrp	x23, 420000 <_obstack_memory_used@@Base+0xccd0>
  4061a4:	add	x23, x23, #0x840
  4061a8:	b	406288 <wcrtomb@plt+0x3548>
  4061ac:	mov	w1, #0x5c                  	// #92
  4061b0:	bl	402a20 <__overflow@plt>
  4061b4:	b	4062b8 <wcrtomb@plt+0x3578>
  4061b8:	mov	w1, #0x45                  	// #69
  4061bc:	bl	402a20 <__overflow@plt>
  4061c0:	b	406230 <wcrtomb@plt+0x34f0>
  4061c4:	cmp	w0, #0x1
  4061c8:	b.eq	40620c <wcrtomb@plt+0x34cc>  // b.none
  4061cc:	cmp	w0, #0x2
  4061d0:	b.eq	4062f4 <wcrtomb@plt+0x35b4>  // b.none
  4061d4:	and	w0, w0, #0xc
  4061d8:	cmp	w0, #0x4
  4061dc:	b.eq	406328 <wcrtomb@plt+0x35e8>  // b.none
  4061e0:	cmp	w0, #0x8
  4061e4:	b.ne	406230 <wcrtomb@plt+0x34f0>  // b.any
  4061e8:	ldr	x0, [x21, #1288]
  4061ec:	ldr	x1, [x0, #40]
  4061f0:	ldr	x2, [x0, #48]
  4061f4:	cmp	x1, x2
  4061f8:	b.cs	40635c <wcrtomb@plt+0x361c>  // b.hs, b.nlast
  4061fc:	add	x2, x1, #0x1
  406200:	str	x2, [x0, #40]
  406204:	strb	w25, [x1]
  406208:	b	406230 <wcrtomb@plt+0x34f0>
  40620c:	ldr	x0, [x21, #1288]
  406210:	ldr	x1, [x0, #40]
  406214:	ldr	x2, [x0, #48]
  406218:	cmp	x1, x2
  40621c:	b.cs	4062e8 <wcrtomb@plt+0x35a8>  // b.hs, b.nlast
  406220:	add	x2, x1, #0x1
  406224:	str	x2, [x0, #40]
  406228:	mov	w0, #0x55                  	// #85
  40622c:	strb	w0, [x1]
  406230:	ldr	w26, [x19, #20]
  406234:	ldr	x2, [x19, #8]
  406238:	cbz	x2, 40624c <wcrtomb@plt+0x350c>
  40623c:	ldr	x3, [x21, #1288]
  406240:	mov	x1, #0x1                   	// #1
  406244:	ldr	x0, [x19]
  406248:	bl	402680 <fwrite_unlocked@plt>
  40624c:	ldr	w2, [x19, #16]
  406250:	cmn	w2, #0x1
  406254:	b.eq	406280 <wcrtomb@plt+0x3540>  // b.none
  406258:	cbnz	w2, 406374 <wcrtomb@plt+0x3634>
  40625c:	ldr	x0, [x21, #1288]
  406260:	ldr	x1, [x0, #40]
  406264:	ldr	x2, [x0, #48]
  406268:	cmp	x1, x2
  40626c:	b.cs	406368 <wcrtomb@plt+0x3628>  // b.hs, b.nlast
  406270:	add	x2, x1, #0x1
  406274:	str	x2, [x0, #40]
  406278:	mov	w0, #0x26                  	// #38
  40627c:	strb	w0, [x1]
  406280:	ldr	x19, [x19, #24]
  406284:	cbz	x19, 406384 <wcrtomb@plt+0x3644>
  406288:	ldr	w0, [x19, #20]
  40628c:	cmp	w0, w26
  406290:	b.eq	406234 <wcrtomb@plt+0x34f4>  // b.none
  406294:	ldr	x0, [x21, #1288]
  406298:	ldr	x1, [x0, #40]
  40629c:	ldr	x2, [x0, #48]
  4062a0:	cmp	x1, x2
  4062a4:	b.cs	4061ac <wcrtomb@plt+0x346c>  // b.hs, b.nlast
  4062a8:	add	x2, x1, #0x1
  4062ac:	str	x2, [x0, #40]
  4062b0:	mov	w0, #0x5c                  	// #92
  4062b4:	strb	w0, [x1]
  4062b8:	ldr	w0, [x19, #20]
  4062bc:	cbnz	w0, 4061c4 <wcrtomb@plt+0x3484>
  4062c0:	ldr	x0, [x21, #1288]
  4062c4:	ldr	x1, [x0, #40]
  4062c8:	ldr	x2, [x0, #48]
  4062cc:	cmp	x1, x2
  4062d0:	b.cs	4061b8 <wcrtomb@plt+0x3478>  // b.hs, b.nlast
  4062d4:	add	x2, x1, #0x1
  4062d8:	str	x2, [x0, #40]
  4062dc:	mov	w0, #0x45                  	// #69
  4062e0:	strb	w0, [x1]
  4062e4:	b	406230 <wcrtomb@plt+0x34f0>
  4062e8:	mov	w1, #0x55                  	// #85
  4062ec:	bl	402a20 <__overflow@plt>
  4062f0:	b	406230 <wcrtomb@plt+0x34f0>
  4062f4:	ldr	x0, [x21, #1288]
  4062f8:	ldr	x1, [x0, #40]
  4062fc:	ldr	x2, [x0, #48]
  406300:	cmp	x1, x2
  406304:	b.cs	40631c <wcrtomb@plt+0x35dc>  // b.hs, b.nlast
  406308:	add	x2, x1, #0x1
  40630c:	str	x2, [x0, #40]
  406310:	mov	w0, #0x4c                  	// #76
  406314:	strb	w0, [x1]
  406318:	b	406230 <wcrtomb@plt+0x34f0>
  40631c:	mov	w1, #0x4c                  	// #76
  406320:	bl	402a20 <__overflow@plt>
  406324:	b	406230 <wcrtomb@plt+0x34f0>
  406328:	ldr	x0, [x21, #1288]
  40632c:	ldr	x1, [x0, #40]
  406330:	ldr	x2, [x0, #48]
  406334:	cmp	x1, x2
  406338:	b.cs	406350 <wcrtomb@plt+0x3610>  // b.hs, b.nlast
  40633c:	add	x2, x1, #0x1
  406340:	str	x2, [x0, #40]
  406344:	mov	w0, #0x75                  	// #117
  406348:	strb	w0, [x1]
  40634c:	b	406230 <wcrtomb@plt+0x34f0>
  406350:	mov	w1, #0x75                  	// #117
  406354:	bl	402a20 <__overflow@plt>
  406358:	b	406230 <wcrtomb@plt+0x34f0>
  40635c:	mov	w1, w24
  406360:	bl	402a20 <__overflow@plt>
  406364:	b	406230 <wcrtomb@plt+0x34f0>
  406368:	mov	w1, #0x26                  	// #38
  40636c:	bl	402a20 <__overflow@plt>
  406370:	b	406280 <wcrtomb@plt+0x3540>
  406374:	mov	x1, x23
  406378:	mov	w0, #0x1                   	// #1
  40637c:	bl	4028b0 <__printf_chk@plt>
  406380:	b	406280 <wcrtomb@plt+0x3540>
  406384:	ldp	x23, x24, [sp, #48]
  406388:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40638c:	ldr	x0, [x0, #1288]
  406390:	ldr	x1, [x0, #40]
  406394:	ldr	x2, [x0, #48]
  406398:	cmp	x1, x2
  40639c:	b.cs	406494 <wcrtomb@plt+0x3754>  // b.hs, b.nlast
  4063a0:	add	x2, x1, #0x1
  4063a4:	str	x2, [x0, #40]
  4063a8:	mov	w0, #0x2f                  	// #47
  4063ac:	strb	w0, [x1]
  4063b0:	mov	w1, #0x0                   	// #0
  4063b4:	ldr	x0, [x22]
  4063b8:	bl	405804 <wcrtomb@plt+0x2ac4>
  4063bc:	ldrb	w0, [x22, #32]
  4063c0:	tbz	w0, #0, 4063ec <wcrtomb@plt+0x36ac>
  4063c4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4063c8:	ldr	x0, [x0, #1288]
  4063cc:	ldr	x1, [x0, #40]
  4063d0:	ldr	x2, [x0, #48]
  4063d4:	cmp	x1, x2
  4063d8:	b.cs	4064a0 <wcrtomb@plt+0x3760>  // b.hs, b.nlast
  4063dc:	add	x2, x1, #0x1
  4063e0:	str	x2, [x0, #40]
  4063e4:	mov	w0, #0x67                  	// #103
  4063e8:	strb	w0, [x1]
  4063ec:	ldrb	w0, [x22, #32]
  4063f0:	tbz	w0, #3, 40641c <wcrtomb@plt+0x36dc>
  4063f4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4063f8:	ldr	x0, [x0, #1288]
  4063fc:	ldr	x1, [x0, #40]
  406400:	ldr	x2, [x0, #48]
  406404:	cmp	x1, x2
  406408:	b.cs	4064ac <wcrtomb@plt+0x376c>  // b.hs, b.nlast
  40640c:	add	x2, x1, #0x1
  406410:	str	x2, [x0, #40]
  406414:	mov	w0, #0x65                  	// #101
  406418:	strb	w0, [x1]
  40641c:	ldrb	w0, [x22, #32]
  406420:	tst	w0, #0x6
  406424:	b.eq	406450 <wcrtomb@plt+0x3710>  // b.none
  406428:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40642c:	ldr	x0, [x0, #1288]
  406430:	ldr	x1, [x0, #40]
  406434:	ldr	x2, [x0, #48]
  406438:	cmp	x1, x2
  40643c:	b.cs	4064b8 <wcrtomb@plt+0x3778>  // b.hs, b.nlast
  406440:	add	x2, x1, #0x1
  406444:	str	x2, [x0, #40]
  406448:	mov	w0, #0x70                  	// #112
  40644c:	strb	w0, [x1]
  406450:	ldr	x2, [x22, #16]
  406454:	cbnz	x2, 4064c4 <wcrtomb@plt+0x3784>
  406458:	ldr	x0, [x22, #24]
  40645c:	cbz	x0, 405f9c <wcrtomb@plt+0x325c>
  406460:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406464:	ldr	x0, [x0, #1288]
  406468:	ldr	x1, [x0, #40]
  40646c:	ldr	x2, [x0, #48]
  406470:	cmp	x1, x2
  406474:	b.cs	4064d8 <wcrtomb@plt+0x3798>  // b.hs, b.nlast
  406478:	add	x2, x1, #0x1
  40647c:	str	x2, [x0, #40]
  406480:	mov	w0, #0x77                  	// #119
  406484:	strb	w0, [x1]
  406488:	ldr	x0, [x22, #24]
  40648c:	bl	4058b4 <wcrtomb@plt+0x2b74>
  406490:	b	405f9c <wcrtomb@plt+0x325c>
  406494:	mov	w1, #0x2f                  	// #47
  406498:	bl	402a20 <__overflow@plt>
  40649c:	b	4063b0 <wcrtomb@plt+0x3670>
  4064a0:	mov	w1, #0x67                  	// #103
  4064a4:	bl	402a20 <__overflow@plt>
  4064a8:	b	4063ec <wcrtomb@plt+0x36ac>
  4064ac:	mov	w1, #0x65                  	// #101
  4064b0:	bl	402a20 <__overflow@plt>
  4064b4:	b	40641c <wcrtomb@plt+0x36dc>
  4064b8:	mov	w1, #0x70                  	// #112
  4064bc:	bl	402a20 <__overflow@plt>
  4064c0:	b	406450 <wcrtomb@plt+0x3710>
  4064c4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4064c8:	add	x1, x1, #0x7f8
  4064cc:	mov	w0, #0x1                   	// #1
  4064d0:	bl	4028b0 <__printf_chk@plt>
  4064d4:	b	406458 <wcrtomb@plt+0x3718>
  4064d8:	mov	w1, #0x77                  	// #119
  4064dc:	bl	402a20 <__overflow@plt>
  4064e0:	b	406488 <wcrtomb@plt+0x3748>
  4064e4:	stp	x23, x24, [sp, #48]
  4064e8:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xccd0>
  4064ec:	add	x3, x3, #0x910
  4064f0:	mov	w2, #0x17e                 	// #382
  4064f4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4064f8:	add	x1, x1, #0x820
  4064fc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  406500:	add	x0, x0, #0x830
  406504:	bl	402ca0 <__assert_fail@plt>
  406508:	ldr	x0, [x20, #24]
  40650c:	bl	4058b4 <wcrtomb@plt+0x2b74>
  406510:	b	405f9c <wcrtomb@plt+0x325c>
  406514:	ldr	x0, [x20, #24]
  406518:	bl	4058b4 <wcrtomb@plt+0x2b74>
  40651c:	b	405f9c <wcrtomb@plt+0x325c>
  406520:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406524:	ldr	w0, [x0, #2260]
  406528:	cmp	w0, #0x1
  40652c:	b.le	406630 <wcrtomb@plt+0x38f0>
  406530:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406534:	ldr	x0, [x0, #1288]
  406538:	ldr	x1, [x0, #40]
  40653c:	ldr	x2, [x0, #48]
  406540:	cmp	x1, x2
  406544:	b.cs	40660c <wcrtomb@plt+0x38cc>  // b.hs, b.nlast
  406548:	add	x2, x1, #0x1
  40654c:	str	x2, [x0, #40]
  406550:	mov	w0, #0x2f                  	// #47
  406554:	strb	w0, [x1]
  406558:	ldr	x0, [x20, #24]
  40655c:	ldr	x0, [x0]
  406560:	mov	w19, #0x2                   	// #2
  406564:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406568:	cbz	x0, 406584 <wcrtomb@plt+0x3844>
  40656c:	ldr	x1, [x21, #1288]
  406570:	bl	402c30 <fputs_unlocked@plt>
  406574:	ldr	x0, [x20, #24]
  406578:	ldr	x0, [x0, w19, uxtw #3]
  40657c:	add	w19, w19, #0x2
  406580:	cbnz	x0, 40656c <wcrtomb@plt+0x382c>
  406584:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406588:	ldr	x0, [x0, #1288]
  40658c:	ldr	x1, [x0, #40]
  406590:	ldr	x2, [x0, #48]
  406594:	cmp	x1, x2
  406598:	b.cs	406618 <wcrtomb@plt+0x38d8>  // b.hs, b.nlast
  40659c:	add	x2, x1, #0x1
  4065a0:	str	x2, [x0, #40]
  4065a4:	mov	w0, #0x2f                  	// #47
  4065a8:	strb	w0, [x1]
  4065ac:	ldr	x0, [x20, #24]
  4065b0:	ldr	x1, [x0]
  4065b4:	mov	w19, #0x0                   	// #0
  4065b8:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4065bc:	cbz	x1, 4065e0 <wcrtomb@plt+0x38a0>
  4065c0:	add	w2, w19, #0x1
  4065c4:	ldr	x1, [x21, #1288]
  4065c8:	ldr	x0, [x0, x2, lsl #3]
  4065cc:	bl	402c30 <fputs_unlocked@plt>
  4065d0:	ldr	x0, [x20, #24]
  4065d4:	add	w19, w19, #0x2
  4065d8:	ldr	x1, [x0, w19, uxtw #3]
  4065dc:	cbnz	x1, 4065c0 <wcrtomb@plt+0x3880>
  4065e0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4065e4:	ldr	x0, [x0, #1288]
  4065e8:	ldr	x1, [x0, #40]
  4065ec:	ldr	x2, [x0, #48]
  4065f0:	cmp	x1, x2
  4065f4:	b.cs	406624 <wcrtomb@plt+0x38e4>  // b.hs, b.nlast
  4065f8:	add	x2, x1, #0x1
  4065fc:	str	x2, [x0, #40]
  406600:	mov	w0, #0x2f                  	// #47
  406604:	strb	w0, [x1]
  406608:	b	405f9c <wcrtomb@plt+0x325c>
  40660c:	mov	w1, #0x2f                  	// #47
  406610:	bl	402a20 <__overflow@plt>
  406614:	b	406558 <wcrtomb@plt+0x3818>
  406618:	mov	w1, #0x2f                  	// #47
  40661c:	bl	402a20 <__overflow@plt>
  406620:	b	4065ac <wcrtomb@plt+0x386c>
  406624:	mov	w1, #0x2f                  	// #47
  406628:	bl	402a20 <__overflow@plt>
  40662c:	b	405f9c <wcrtomb@plt+0x325c>
  406630:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406634:	ldr	x0, [x0, #1288]
  406638:	ldr	x1, [x0, #40]
  40663c:	ldr	x2, [x0, #48]
  406640:	cmp	x1, x2
  406644:	b.cs	406664 <wcrtomb@plt+0x3924>  // b.hs, b.nlast
  406648:	add	x2, x1, #0x1
  40664c:	str	x2, [x0, #40]
  406650:	mov	w0, #0x2f                  	// #47
  406654:	strb	w0, [x1]
  406658:	mov	x19, #0x0                   	// #0
  40665c:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406660:	b	406688 <wcrtomb@plt+0x3948>
  406664:	mov	w1, #0x2f                  	// #47
  406668:	bl	402a20 <__overflow@plt>
  40666c:	b	406658 <wcrtomb@plt+0x3918>
  406670:	add	x1, x2, #0x1
  406674:	str	x1, [x0, #40]
  406678:	strb	w3, [x2]
  40667c:	add	x19, x19, #0x1
  406680:	cmp	x19, #0x100
  406684:	b.eq	4066bc <wcrtomb@plt+0x397c>  // b.none
  406688:	and	w3, w19, #0xff
  40668c:	ldr	x0, [x20, #24]
  406690:	ldrb	w0, [x0, x19]
  406694:	cmp	w0, w19, uxtb
  406698:	b.eq	40667c <wcrtomb@plt+0x393c>  // b.none
  40669c:	ldr	x0, [x21, #1288]
  4066a0:	ldr	x2, [x0, #40]
  4066a4:	ldr	x4, [x0, #48]
  4066a8:	cmp	x2, x4
  4066ac:	b.cc	406670 <wcrtomb@plt+0x3930>  // b.lo, b.ul, b.last
  4066b0:	and	w1, w19, #0xff
  4066b4:	bl	402a20 <__overflow@plt>
  4066b8:	b	40667c <wcrtomb@plt+0x393c>
  4066bc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4066c0:	ldr	x0, [x0, #1288]
  4066c4:	ldr	x1, [x0, #40]
  4066c8:	ldr	x2, [x0, #48]
  4066cc:	cmp	x1, x2
  4066d0:	b.cs	4066f0 <wcrtomb@plt+0x39b0>  // b.hs, b.nlast
  4066d4:	add	x2, x1, #0x1
  4066d8:	str	x2, [x0, #40]
  4066dc:	mov	w0, #0x2f                  	// #47
  4066e0:	strb	w0, [x1]
  4066e4:	mov	x19, #0x0                   	// #0
  4066e8:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4066ec:	b	40670c <wcrtomb@plt+0x39cc>
  4066f0:	mov	w1, #0x2f                  	// #47
  4066f4:	bl	402a20 <__overflow@plt>
  4066f8:	b	4066e4 <wcrtomb@plt+0x39a4>
  4066fc:	bl	402a20 <__overflow@plt>
  406700:	add	x19, x19, #0x1
  406704:	cmp	x19, #0x100
  406708:	b.eq	406740 <wcrtomb@plt+0x3a00>  // b.none
  40670c:	ldr	x0, [x20, #24]
  406710:	ldrb	w1, [x0, x19]
  406714:	cmp	w1, w19, uxtb
  406718:	b.eq	406700 <wcrtomb@plt+0x39c0>  // b.none
  40671c:	ldr	x0, [x21, #1288]
  406720:	ldr	x2, [x0, #40]
  406724:	ldr	x3, [x0, #48]
  406728:	cmp	x2, x3
  40672c:	b.cs	4066fc <wcrtomb@plt+0x39bc>  // b.hs, b.nlast
  406730:	add	x3, x2, #0x1
  406734:	str	x3, [x0, #40]
  406738:	strb	w1, [x2]
  40673c:	b	406700 <wcrtomb@plt+0x39c0>
  406740:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406744:	ldr	x0, [x0, #1288]
  406748:	ldr	x1, [x0, #40]
  40674c:	ldr	x2, [x0, #48]
  406750:	cmp	x1, x2
  406754:	b.cs	40676c <wcrtomb@plt+0x3a2c>  // b.hs, b.nlast
  406758:	add	x2, x1, #0x1
  40675c:	str	x2, [x0, #40]
  406760:	mov	w0, #0x2f                  	// #47
  406764:	strb	w0, [x1]
  406768:	b	405f9c <wcrtomb@plt+0x325c>
  40676c:	mov	w1, #0x2f                  	// #47
  406770:	bl	402a20 <__overflow@plt>
  406774:	b	405f9c <wcrtomb@plt+0x325c>
  406778:	stp	x23, x24, [sp, #48]
  40677c:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xccd0>
  406780:	add	x3, x3, #0x910
  406784:	mov	w2, #0x194                 	// #404
  406788:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  40678c:	add	x1, x1, #0x820
  406790:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  406794:	add	x0, x0, #0x830
  406798:	bl	402ca0 <__assert_fail@plt>
  40679c:	mov	w1, #0xa                   	// #10
  4067a0:	bl	402a20 <__overflow@plt>
  4067a4:	b	405fc4 <wcrtomb@plt+0x3284>
  4067a8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4067ac:	ldr	w0, [x1, #1552]
  4067b0:	add	w0, w0, #0x1
  4067b4:	str	w0, [x1, #1552]
  4067b8:	b	405fd0 <wcrtomb@plt+0x3290>
  4067bc:	ret
  4067c0:	cbz	x0, 40683c <wcrtomb@plt+0x3afc>
  4067c4:	stp	x29, x30, [sp, #-48]!
  4067c8:	mov	x29, sp
  4067cc:	stp	x19, x20, [sp, #16]
  4067d0:	mov	x19, x0
  4067d4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4067d8:	mov	w1, #0x1                   	// #1
  4067dc:	str	w1, [x0, #1552]
  4067e0:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  4067e4:	add	x0, x0, #0x848
  4067e8:	bl	402a40 <puts@plt>
  4067ec:	ldr	x0, [x19, #16]
  4067f0:	cbz	x0, 406828 <wcrtomb@plt+0x3ae8>
  4067f4:	str	x21, [sp, #32]
  4067f8:	mov	x21, #0x0                   	// #0
  4067fc:	mov	x20, #0x0                   	// #0
  406800:	ldr	x1, [x19]
  406804:	add	x1, x1, x21
  406808:	mov	x0, x19
  40680c:	bl	405da4 <wcrtomb@plt+0x3064>
  406810:	add	x20, x20, #0x1
  406814:	add	x21, x21, #0x28
  406818:	ldr	x0, [x19, #16]
  40681c:	cmp	x0, x20
  406820:	b.hi	406800 <wcrtomb@plt+0x3ac0>  // b.pmore
  406824:	ldr	x21, [sp, #32]
  406828:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40682c:	str	wzr, [x0, #1552]
  406830:	ldp	x19, x20, [sp, #16]
  406834:	ldp	x29, x30, [sp], #48
  406838:	ret
  40683c:	ret
  406840:	mov	w0, #0x0                   	// #0
  406844:	ret
  406848:	stp	x29, x30, [sp, #-48]!
  40684c:	mov	x29, sp
  406850:	stp	x19, x20, [sp, #16]
  406854:	str	x21, [sp, #32]
  406858:	mov	x19, x0
  40685c:	mov	x21, x1
  406860:	mov	x20, x2
  406864:	add	x0, x2, #0x1
  406868:	bl	412e80 <wcrtomb@plt+0x10140>
  40686c:	str	x0, [x19]
  406870:	str	x0, [x19, #8]
  406874:	str	x20, [x19, #24]
  406878:	str	xzr, [x19, #16]
  40687c:	mov	w0, #0x1                   	// #1
  406880:	strb	w0, [x19, #32]
  406884:	cbz	x21, 4068a0 <wcrtomb@plt+0x3b60>
  406888:	ldur	x0, [x21, #36]
  40688c:	stur	x0, [x19, #36]
  406890:	ldp	x19, x20, [sp, #16]
  406894:	ldr	x21, [sp, #32]
  406898:	ldp	x29, x30, [sp], #48
  40689c:	ret
  4068a0:	stur	xzr, [x19, #36]
  4068a4:	b	406890 <wcrtomb@plt+0x3b50>
  4068a8:	ldr	x2, [x0, #24]
  4068ac:	cbz	x2, 4068c4 <wcrtomb@plt+0x3b84>
  4068b0:	str	xzr, [x0, #16]
  4068b4:	cbz	x1, 4068dc <wcrtomb@plt+0x3b9c>
  4068b8:	ldur	x1, [x1, #36]
  4068bc:	stur	x1, [x0, #36]
  4068c0:	ret
  4068c4:	stp	x29, x30, [sp, #-16]!
  4068c8:	mov	x29, sp
  4068cc:	mov	x2, #0x32                  	// #50
  4068d0:	bl	406848 <wcrtomb@plt+0x3b08>
  4068d4:	ldp	x29, x30, [sp], #16
  4068d8:	ret
  4068dc:	stur	xzr, [x0, #36]
  4068e0:	ret
  4068e4:	stp	x29, x30, [sp, #-32]!
  4068e8:	mov	x29, sp
  4068ec:	stp	x19, x20, [sp, #16]
  4068f0:	ldr	x19, [x0, #8]
  4068f4:	cbz	x19, 40697c <wcrtomb@plt+0x3c3c>
  4068f8:	ldr	x20, [x0, #16]
  4068fc:	adrp	x4, 420000 <_obstack_memory_used@@Base+0xccd0>
  406900:	add	x4, x4, #0x938
  406904:	adrp	x5, 420000 <_obstack_memory_used@@Base+0xccd0>
  406908:	add	x5, x5, #0x928
  40690c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406910:	add	x1, x1, #0x618
  406914:	cmp	x0, x1
  406918:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40691c:	ldr	x3, [x0, #1288]
  406920:	mov	x2, #0x9                   	// #9
  406924:	mov	x1, #0x1                   	// #1
  406928:	csel	x0, x5, x4, eq  // eq = none
  40692c:	bl	402680 <fwrite_unlocked@plt>
  406930:	cbz	x20, 406948 <wcrtomb@plt+0x3c08>
  406934:	add	x20, x19, x20
  406938:	ldrb	w0, [x19], #1
  40693c:	bl	4058dc <wcrtomb@plt+0x2b9c>
  406940:	cmp	x20, x19
  406944:	b.ne	406938 <wcrtomb@plt+0x3bf8>  // b.any
  406948:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40694c:	ldr	x0, [x0, #1288]
  406950:	ldr	x1, [x0, #40]
  406954:	ldr	x2, [x0, #48]
  406958:	cmp	x1, x2
  40695c:	b.cs	406984 <wcrtomb@plt+0x3c44>  // b.hs, b.nlast
  406960:	add	x2, x1, #0x1
  406964:	str	x2, [x0, #40]
  406968:	mov	w0, #0xa                   	// #10
  40696c:	strb	w0, [x1]
  406970:	ldp	x19, x20, [sp, #16]
  406974:	ldp	x29, x30, [sp], #32
  406978:	ret
  40697c:	ldr	x19, [x0]
  406980:	b	4068f8 <wcrtomb@plt+0x3bb8>
  406984:	mov	w1, #0xa                   	// #10
  406988:	bl	402a20 <__overflow@plt>
  40698c:	b	406970 <wcrtomb@plt+0x3c30>
  406990:	stp	x29, x30, [sp, #-48]!
  406994:	mov	x29, sp
  406998:	stp	x19, x20, [sp, #16]
  40699c:	str	x21, [sp, #32]
  4069a0:	mov	x20, x0
  4069a4:	mov	x19, x1
  4069a8:	mov	w21, w2
  4069ac:	ldr	x0, [x1]
  4069b0:	ldr	x1, [x1, #8]
  4069b4:	sub	x1, x1, x0
  4069b8:	ldr	x2, [x19, #24]
  4069bc:	add	x1, x1, x2
  4069c0:	str	x1, [x19, #24]
  4069c4:	ldr	x2, [x20, #16]
  4069c8:	cmp	x1, x2
  4069cc:	b.cs	406a08 <wcrtomb@plt+0x3cc8>  // b.hs, b.nlast
  4069d0:	lsl	x1, x1, #1
  4069d4:	str	x1, [x19, #24]
  4069d8:	ldr	x2, [x20, #16]
  4069dc:	cmp	x1, x2
  4069e0:	csel	x1, x1, x2, cs  // cs = hs, nlast
  4069e4:	cmp	x1, #0x31
  4069e8:	mov	x2, #0x32                  	// #50
  4069ec:	csel	x1, x2, x1, ls  // ls = plast
  4069f0:	str	x1, [x19, #24]
  4069f4:	bl	402ae0 <free@plt>
  4069f8:	ldr	x0, [x19, #24]
  4069fc:	add	x0, x0, #0x1
  406a00:	bl	412e80 <wcrtomb@plt+0x10140>
  406a04:	str	x0, [x19]
  406a08:	ldr	x0, [x19]
  406a0c:	str	x0, [x19, #8]
  406a10:	ldr	x1, [x20, #16]
  406a14:	str	x1, [x19, #16]
  406a18:	ldrb	w1, [x20, #32]
  406a1c:	strb	w1, [x19, #32]
  406a20:	ldr	x2, [x20, #16]
  406a24:	ldr	x1, [x20, #8]
  406a28:	bl	402650 <memcpy@plt>
  406a2c:	cbnz	w21, 406a40 <wcrtomb@plt+0x3d00>
  406a30:	ldp	x19, x20, [sp, #16]
  406a34:	ldr	x21, [sp, #32]
  406a38:	ldp	x29, x30, [sp], #48
  406a3c:	ret
  406a40:	ldur	x0, [x20, #36]
  406a44:	stur	x0, [x19, #36]
  406a48:	b	406a30 <wcrtomb@plt+0x3cf0>
  406a4c:	stp	x29, x30, [sp, #-32]!
  406a50:	mov	x29, sp
  406a54:	stp	x19, x20, [sp, #16]
  406a58:	mov	x19, x0
  406a5c:	mov	x20, x1
  406a60:	ldr	x1, [x0, #8]
  406a64:	ldr	x0, [x0]
  406a68:	sub	x4, x1, x0
  406a6c:	mov	w2, w4
  406a70:	ldr	x3, [x19, #24]
  406a74:	lsl	x3, x3, #1
  406a78:	cmp	x3, w4, sxtw
  406a7c:	b.cc	406ad0 <wcrtomb@plt+0x3d90>  // b.lo, b.ul, b.last
  406a80:	ldr	x1, [x19, #24]
  406a84:	lsl	x1, x1, #1
  406a88:	cmp	x1, x20
  406a8c:	csel	x20, x20, x1, cc  // cc = lo, ul, last
  406a90:	cmp	x20, #0x31
  406a94:	mov	x1, #0x32                  	// #50
  406a98:	csel	x1, x1, x20, ls  // ls = plast
  406a9c:	str	x1, [x19, #24]
  406aa0:	ldr	x0, [x19]
  406aa4:	sxtw	x20, w2
  406aa8:	add	x1, x1, #0x1
  406aac:	adds	x1, x1, x20
  406ab0:	b.mi	406b04 <wcrtomb@plt+0x3dc4>  // b.first
  406ab4:	bl	412cfc <wcrtomb@plt+0xffbc>
  406ab8:	str	x0, [x19]
  406abc:	add	x0, x0, x20
  406ac0:	str	x0, [x19, #8]
  406ac4:	ldp	x19, x20, [sp, #16]
  406ac8:	ldp	x29, x30, [sp], #32
  406acc:	ret
  406ad0:	ldr	x2, [x19, #16]
  406ad4:	bl	402660 <memmove@plt>
  406ad8:	ldr	x1, [x19]
  406adc:	ldr	x0, [x19, #8]
  406ae0:	sub	x0, x0, x1
  406ae4:	ldr	x2, [x19, #24]
  406ae8:	add	x0, x0, x2
  406aec:	str	x0, [x19, #24]
  406af0:	str	x1, [x19, #8]
  406af4:	cmp	x0, x20
  406af8:	b.hi	406ac4 <wcrtomb@plt+0x3d84>  // b.pmore
  406afc:	mov	w2, #0x0                   	// #0
  406b00:	b	406a80 <wcrtomb@plt+0x3d40>
  406b04:	bl	412ef8 <wcrtomb@plt+0x101b8>
  406b08:	stp	x29, x30, [sp, #-64]!
  406b0c:	mov	x29, sp
  406b10:	stp	x19, x20, [sp, #16]
  406b14:	stp	x21, x22, [sp, #32]
  406b18:	mov	x21, x0
  406b1c:	mov	x20, x1
  406b20:	mov	x19, x2
  406b24:	ldr	x22, [x0, #16]
  406b28:	add	x22, x2, x22
  406b2c:	ldr	x0, [x0, #24]
  406b30:	cmp	x0, x22
  406b34:	b.cc	406b8c <wcrtomb@plt+0x3e4c>  // b.lo, b.ul, b.last
  406b38:	ldr	x3, [x21, #8]
  406b3c:	ldr	x0, [x21, #16]
  406b40:	mov	x2, x19
  406b44:	mov	x1, x20
  406b48:	add	x0, x3, x0
  406b4c:	bl	402650 <memcpy@plt>
  406b50:	str	x22, [x21, #16]
  406b54:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406b58:	ldr	w0, [x0, #2260]
  406b5c:	cmp	w0, #0x1
  406b60:	b.le	406bec <wcrtomb@plt+0x3eac>
  406b64:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406b68:	ldrb	w0, [x0, #2256]
  406b6c:	cbnz	w0, 406bec <wcrtomb@plt+0x3eac>
  406b70:	cbz	x19, 406bec <wcrtomb@plt+0x3eac>
  406b74:	str	x23, [sp, #48]
  406b78:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406b7c:	add	x22, x22, #0x8d4
  406b80:	mov	x23, #0x1                   	// #1
  406b84:	add	x21, x21, #0x24
  406b88:	b	406bb0 <wcrtomb@plt+0x3e70>
  406b8c:	mov	x1, x22
  406b90:	mov	x0, x21
  406b94:	bl	406a4c <wcrtomb@plt+0x3d0c>
  406b98:	b	406b38 <wcrtomb@plt+0x3df8>
  406b9c:	str	xzr, [x21]
  406ba0:	mov	x0, x23
  406ba4:	add	x20, x20, x0
  406ba8:	subs	x19, x19, x0
  406bac:	b.eq	406be8 <wcrtomb@plt+0x3ea8>  // b.none
  406bb0:	ldr	w1, [x22]
  406bb4:	mov	x0, x23
  406bb8:	cmp	w1, #0x1
  406bbc:	b.eq	406ba4 <wcrtomb@plt+0x3e64>  // b.none
  406bc0:	mov	x3, x21
  406bc4:	mov	x2, x19
  406bc8:	mov	x1, x20
  406bcc:	mov	x0, #0x0                   	// #0
  406bd0:	bl	412f3c <wcrtomb@plt+0x101fc>
  406bd4:	cmn	x0, #0x3
  406bd8:	b.hi	406b9c <wcrtomb@plt+0x3e5c>  // b.pmore
  406bdc:	cbnz	x0, 406ba4 <wcrtomb@plt+0x3e64>
  406be0:	ldr	x23, [sp, #48]
  406be4:	b	406bec <wcrtomb@plt+0x3eac>
  406be8:	ldr	x23, [sp, #48]
  406bec:	ldp	x19, x20, [sp, #16]
  406bf0:	ldp	x21, x22, [sp, #32]
  406bf4:	ldp	x29, x30, [sp], #64
  406bf8:	ret
  406bfc:	stp	x29, x30, [sp, #-16]!
  406c00:	mov	x29, sp
  406c04:	adrp	x4, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406c08:	add	x4, x4, #0x618
  406c0c:	ldr	x3, [x0, #184]
  406c10:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406c14:	ldrb	w2, [x0, #1120]
  406c18:	add	x1, x4, #0x30
  406c1c:	add	x0, x4, #0x38
  406c20:	bl	40a9ec <wcrtomb@plt+0x7cac>
  406c24:	cmp	x0, #0x0
  406c28:	b.le	406c7c <wcrtomb@plt+0x3f3c>
  406c2c:	mov	x2, x0
  406c30:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406c34:	ldr	x1, [x1, #1616]
  406c38:	add	x3, x1, x0
  406c3c:	ldurb	w4, [x3, #-1]
  406c40:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406c44:	ldrb	w3, [x3, #1120]
  406c48:	cmp	w4, w3
  406c4c:	b.eq	406c74 <wcrtomb@plt+0x3f34>  // b.none
  406c50:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406c54:	strb	wzr, [x0, #1656]
  406c58:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406c5c:	add	x0, x0, #0x618
  406c60:	add	x0, x0, #0x40
  406c64:	bl	406b08 <wcrtomb@plt+0x3dc8>
  406c68:	mov	w0, #0x1                   	// #1
  406c6c:	ldp	x29, x30, [sp], #16
  406c70:	ret
  406c74:	sub	x2, x0, #0x1
  406c78:	b	406c58 <wcrtomb@plt+0x3f18>
  406c7c:	mov	w0, #0x0                   	// #0
  406c80:	b	406c6c <wcrtomb@plt+0x3f2c>
  406c84:	stp	x29, x30, [sp, #-16]!
  406c88:	mov	x29, sp
  406c8c:	mov	x1, #0x28                  	// #40
  406c90:	mov	x0, #0x1                   	// #1
  406c94:	bl	412e48 <wcrtomb@plt+0x10108>
  406c98:	str	xzr, [x0]
  406c9c:	str	xzr, [x0, #8]
  406ca0:	str	xzr, [x0, #16]
  406ca4:	str	xzr, [x0, #24]
  406ca8:	strb	wzr, [x0, #32]
  406cac:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406cb0:	ldr	x1, [x1, #1672]
  406cb4:	cbz	x1, 406ccc <wcrtomb@plt+0x3f8c>
  406cb8:	str	x0, [x1, #24]
  406cbc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406cc0:	str	x0, [x1, #1672]
  406cc4:	ldp	x29, x30, [sp], #16
  406cc8:	ret
  406ccc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406cd0:	str	x0, [x1, #1680]
  406cd4:	b	406cbc <wcrtomb@plt+0x3f7c>
  406cd8:	stp	x29, x30, [sp, #-48]!
  406cdc:	mov	x29, sp
  406ce0:	stp	x19, x20, [sp, #16]
  406ce4:	mov	x20, x0
  406ce8:	mov	x19, x1
  406cec:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406cf0:	str	xzr, [x0, #1704]
  406cf4:	str	x20, [x1, #48]
  406cf8:	ldrb	w0, [x20]
  406cfc:	cmp	w0, #0x2d
  406d00:	b.eq	406df0 <wcrtomb@plt+0x40b0>  // b.none
  406d04:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406d08:	ldrb	w0, [x0, #1880]
  406d0c:	cbnz	w0, 406e1c <wcrtomb@plt+0x40dc>
  406d10:	mov	w2, #0x0                   	// #0
  406d14:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406d18:	ldr	x1, [x0, #1128]
  406d1c:	mov	x0, x20
  406d20:	bl	40a6b4 <wcrtomb@plt+0x7974>
  406d24:	str	x0, [x19, #184]
  406d28:	cbz	x0, 406e2c <wcrtomb@plt+0x40ec>
  406d2c:	adrp	x0, 406000 <wcrtomb@plt+0x32c0>
  406d30:	add	x0, x0, #0xbfc
  406d34:	str	x0, [x19, #32]
  406d38:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406d3c:	ldr	x0, [x0, #1888]
  406d40:	cbz	x0, 406f14 <wcrtomb@plt+0x41d4>
  406d44:	stp	x21, x22, [sp, #32]
  406d48:	ldr	x0, [x19, #48]
  406d4c:	bl	412ecc <wcrtomb@plt+0x1018c>
  406d50:	mov	x21, x0
  406d54:	mov	w1, #0x2f                  	// #47
  406d58:	bl	4029b0 <strrchr@plt>
  406d5c:	cbz	x0, 406e9c <wcrtomb@plt+0x415c>
  406d60:	strb	wzr, [x0]
  406d64:	ldr	x0, [x19, #184]
  406d68:	bl	402780 <fileno@plt>
  406d6c:	bl	402bc0 <isatty@plt>
  406d70:	cbnz	w0, 406ea8 <wcrtomb@plt+0x4168>
  406d74:	ldr	x0, [x19, #184]
  406d78:	bl	402780 <fileno@plt>
  406d7c:	add	x2, x19, #0x38
  406d80:	mov	w1, w0
  406d84:	mov	w0, #0x0                   	// #0
  406d88:	bl	402c00 <__fxstat@plt>
  406d8c:	ldr	w0, [x19, #72]
  406d90:	and	w0, w0, #0xf000
  406d94:	cmp	w0, #0x8, lsl #12
  406d98:	b.ne	406ec4 <wcrtomb@plt+0x4184>  // b.any
  406d9c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406da0:	ldr	x3, [x0, #1136]
  406da4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xccd0>
  406da8:	add	x2, x2, #0x9a8
  406dac:	mov	x1, x21
  406db0:	add	x0, x19, #0x28
  406db4:	bl	40a7a8 <wcrtomb@plt+0x7a68>
  406db8:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406dbc:	add	x20, x20, #0x618
  406dc0:	str	x0, [x20, #192]
  406dc4:	ldr	x0, [x19, #40]
  406dc8:	bl	409e18 <wcrtomb@plt+0x70d8>
  406dcc:	strb	wzr, [x20, #184]
  406dd0:	mov	x0, x21
  406dd4:	bl	402ae0 <free@plt>
  406dd8:	ldr	x0, [x20, #192]
  406ddc:	cbz	x0, 406ee0 <wcrtomb@plt+0x41a0>
  406de0:	ldp	x21, x22, [sp, #32]
  406de4:	ldp	x19, x20, [sp, #16]
  406de8:	ldp	x29, x30, [sp], #48
  406dec:	ret
  406df0:	ldrb	w0, [x20, #1]
  406df4:	cbnz	w0, 406d04 <wcrtomb@plt+0x3fc4>
  406df8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406dfc:	ldr	x0, [x0, #1888]
  406e00:	cbnz	x0, 406d04 <wcrtomb@plt+0x3fc4>
  406e04:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406e08:	ldr	x0, [x20, #1296]
  406e0c:	bl	402b90 <clearerr_unlocked@plt>
  406e10:	ldr	x0, [x20, #1296]
  406e14:	str	x0, [x19, #184]
  406e18:	b	406d2c <wcrtomb@plt+0x3fec>
  406e1c:	mov	x0, x20
  406e20:	bl	40abd8 <wcrtomb@plt+0x7e98>
  406e24:	str	x0, [x19, #48]
  406e28:	b	406d10 <wcrtomb@plt+0x3fd0>
  406e2c:	stp	x21, x22, [sp, #32]
  406e30:	bl	402cb0 <__errno_location@plt>
  406e34:	ldr	w0, [x0]
  406e38:	bl	4029a0 <strerror@plt>
  406e3c:	mov	x21, x0
  406e40:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406e44:	ldr	x22, [x0, #1264]
  406e48:	mov	w2, #0x5                   	// #5
  406e4c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  406e50:	add	x1, x1, #0x948
  406e54:	mov	x0, #0x0                   	// #0
  406e58:	bl	402c20 <dcgettext@plt>
  406e5c:	mov	x5, x21
  406e60:	mov	x4, x20
  406e64:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406e68:	ldr	x3, [x1, #1936]
  406e6c:	mov	x2, x0
  406e70:	mov	w1, #0x1                   	// #1
  406e74:	mov	x0, x22
  406e78:	bl	402a90 <__fprintf_chk@plt>
  406e7c:	adrp	x0, 406000 <wcrtomb@plt+0x32c0>
  406e80:	add	x0, x0, #0x840
  406e84:	str	x0, [x19, #32]
  406e88:	ldr	x0, [x19, #8]
  406e8c:	add	x0, x0, #0x1
  406e90:	str	x0, [x19, #8]
  406e94:	ldp	x21, x22, [sp, #32]
  406e98:	b	406de4 <wcrtomb@plt+0x40a4>
  406e9c:	mov	w0, #0x2e                  	// #46
  406ea0:	strh	w0, [x21]
  406ea4:	b	406d64 <wcrtomb@plt+0x4024>
  406ea8:	mov	w2, #0x5                   	// #5
  406eac:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  406eb0:	add	x1, x1, #0x960
  406eb4:	mov	x0, #0x0                   	// #0
  406eb8:	bl	402c20 <dcgettext@plt>
  406ebc:	ldr	x1, [x19, #48]
  406ec0:	bl	40a510 <wcrtomb@plt+0x77d0>
  406ec4:	mov	w2, #0x5                   	// #5
  406ec8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  406ecc:	add	x1, x1, #0x980
  406ed0:	mov	x0, #0x0                   	// #0
  406ed4:	bl	402c20 <dcgettext@plt>
  406ed8:	ldr	x1, [x19, #48]
  406edc:	bl	40a510 <wcrtomb@plt+0x77d0>
  406ee0:	mov	w2, #0x5                   	// #5
  406ee4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  406ee8:	add	x1, x1, #0x9b0
  406eec:	bl	402c20 <dcgettext@plt>
  406ef0:	mov	x20, x0
  406ef4:	ldr	x19, [x19, #40]
  406ef8:	bl	402cb0 <__errno_location@plt>
  406efc:	ldr	w0, [x0]
  406f00:	bl	4029a0 <strerror@plt>
  406f04:	mov	x2, x0
  406f08:	mov	x1, x19
  406f0c:	mov	x0, x20
  406f10:	bl	40a510 <wcrtomb@plt+0x77d0>
  406f14:	ldr	x0, [x19, #184]
  406f18:	cbz	x0, 406f28 <wcrtomb@plt+0x41e8>
  406f1c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406f20:	ldrb	w1, [x1, #1902]
  406f24:	cbnz	w1, 406f3c <wcrtomb@plt+0x41fc>
  406f28:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406f2c:	ldr	x1, [x0, #1288]
  406f30:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406f34:	str	x1, [x0, #1752]
  406f38:	b	406de4 <wcrtomb@plt+0x40a4>
  406f3c:	mov	x3, #0x0                   	// #0
  406f40:	mov	w2, #0x2                   	// #2
  406f44:	mov	x1, #0x0                   	// #0
  406f48:	bl	402740 <setvbuf@plt>
  406f4c:	b	406f28 <wcrtomb@plt+0x41e8>
  406f50:	stp	x29, x30, [sp, #-96]!
  406f54:	mov	x29, sp
  406f58:	stp	x19, x20, [sp, #16]
  406f5c:	stp	x21, x22, [sp, #32]
  406f60:	mov	x19, x0
  406f64:	mov	x22, x1
  406f68:	mov	x20, x2
  406f6c:	cbz	w3, 406fbc <wcrtomb@plt+0x427c>
  406f70:	mov	w21, w3
  406f74:	ldr	x1, [x0, #16]
  406f78:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406f7c:	ldrsw	x0, [x0, #2260]
  406f80:	mul	x0, x0, x2
  406f84:	ldr	x2, [x19, #24]
  406f88:	sub	x2, x2, x1
  406f8c:	cmp	x2, x0
  406f90:	b.cc	406fc4 <wcrtomb@plt+0x4284>  // b.lo, b.ul, b.last
  406f94:	ldur	x0, [x19, #36]
  406f98:	str	x0, [sp, #88]
  406f9c:	cbz	x20, 407038 <wcrtomb@plt+0x42f8>
  406fa0:	stp	x23, x24, [sp, #48]
  406fa4:	str	x25, [sp, #64]
  406fa8:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x24cd0>
  406fac:	add	x23, x23, #0x8d4
  406fb0:	add	x24, x19, #0x24
  406fb4:	mov	x25, #0x1                   	// #1
  406fb8:	b	4070b8 <wcrtomb@plt+0x4378>
  406fbc:	bl	406b08 <wcrtomb@plt+0x3dc8>
  406fc0:	b	407038 <wcrtomb@plt+0x42f8>
  406fc4:	add	x1, x1, x0
  406fc8:	mov	x0, x19
  406fcc:	bl	406a4c <wcrtomb@plt+0x3d0c>
  406fd0:	b	406f94 <wcrtomb@plt+0x4254>
  406fd4:	add	x3, sp, #0x58
  406fd8:	mov	x2, x20
  406fdc:	mov	x1, x22
  406fe0:	add	x0, sp, #0x54
  406fe4:	bl	412f3c <wcrtomb@plt+0x101fc>
  406fe8:	cmn	x0, #0x1
  406fec:	b.eq	407018 <wcrtomb@plt+0x42d8>  // b.none
  406ff0:	cmp	x0, #0x0
  406ff4:	ccmn	x0, #0x2, #0x4, ne  // ne = any
  406ff8:	b.ne	4070d4 <wcrtomb@plt+0x4394>  // b.any
  406ffc:	mov	x2, x20
  407000:	mov	x1, x22
  407004:	mov	x0, x19
  407008:	bl	406b08 <wcrtomb@plt+0x3dc8>
  40700c:	ldp	x23, x24, [sp, #48]
  407010:	ldr	x25, [sp, #64]
  407014:	b	407038 <wcrtomb@plt+0x42f8>
  407018:	ands	w21, w21, #0xfffffff3
  40701c:	b.ne	407048 <wcrtomb@plt+0x4308>  // b.any
  407020:	mov	x2, x20
  407024:	mov	x1, x22
  407028:	mov	x0, x19
  40702c:	bl	406b08 <wcrtomb@plt+0x3dc8>
  407030:	ldp	x23, x24, [sp, #48]
  407034:	ldr	x25, [sp, #64]
  407038:	ldp	x19, x20, [sp, #16]
  40703c:	ldp	x21, x22, [sp, #32]
  407040:	ldp	x29, x30, [sp], #96
  407044:	ret
  407048:	mov	x2, x25
  40704c:	mov	x1, x22
  407050:	mov	x0, x19
  407054:	bl	406b08 <wcrtomb@plt+0x3dc8>
  407058:	str	xzr, [x24]
  40705c:	add	x22, x22, #0x1
  407060:	sub	x20, x20, #0x1
  407064:	b	4070b4 <wcrtomb@plt+0x4374>
  407068:	ldr	w0, [sp, #84]
  40706c:	bl	402cf0 <towlower@plt>
  407070:	str	w0, [sp, #84]
  407074:	ands	w21, w21, #0xfffffff3
  407078:	b.eq	4070f4 <wcrtomb@plt+0x43b4>  // b.none
  40707c:	ldr	w0, [x23]
  407080:	cmp	w0, #0x1
  407084:	b.eq	4071c0 <wcrtomb@plt+0x4480>  // b.none
  407088:	ldr	x3, [x19, #8]
  40708c:	ldr	x0, [x19, #16]
  407090:	mov	x2, x24
  407094:	ldr	w1, [sp, #84]
  407098:	add	x0, x3, x0
  40709c:	bl	402d40 <wcrtomb@plt>
  4070a0:	ldr	x1, [x19, #16]
  4070a4:	add	x1, x1, x0
  4070a8:	str	x1, [x19, #16]
  4070ac:	cmn	x0, #0x3
  4070b0:	b.hi	4071e4 <wcrtomb@plt+0x44a4>  // b.pmore
  4070b4:	cbz	x20, 407214 <wcrtomb@plt+0x44d4>
  4070b8:	ldr	w0, [x23]
  4070bc:	cmp	w0, #0x1
  4070c0:	b.ne	406fd4 <wcrtomb@plt+0x4294>  // b.any
  4070c4:	ldrb	w0, [x22]
  4070c8:	bl	4029d0 <btowc@plt>
  4070cc:	str	w0, [sp, #84]
  4070d0:	mov	x0, x25
  4070d4:	add	x22, x22, x0
  4070d8:	sub	x20, x20, x0
  4070dc:	tst	w21, #0xc
  4070e0:	b.eq	40719c <wcrtomb@plt+0x445c>  // b.none
  4070e4:	tbz	w21, #2, 407068 <wcrtomb@plt+0x4328>
  4070e8:	ldr	w0, [sp, #84]
  4070ec:	bl	402c70 <towupper@plt>
  4070f0:	b	407070 <wcrtomb@plt+0x4330>
  4070f4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4070f8:	ldr	w1, [x1, #2260]
  4070fc:	cmp	w1, #0x1
  407100:	b.eq	40714c <wcrtomb@plt+0x440c>  // b.none
  407104:	ldr	x4, [x19, #8]
  407108:	ldr	x3, [x19, #16]
  40710c:	add	x2, x19, #0x24
  407110:	mov	w1, w0
  407114:	add	x0, x4, x3
  407118:	bl	402d40 <wcrtomb@plt>
  40711c:	ldr	x1, [x19, #16]
  407120:	add	x1, x1, x0
  407124:	str	x1, [x19, #16]
  407128:	cmn	x0, #0x3
  40712c:	b.hi	40716c <wcrtomb@plt+0x442c>  // b.pmore
  407130:	mov	x2, x20
  407134:	mov	x1, x22
  407138:	mov	x0, x19
  40713c:	bl	406b08 <wcrtomb@plt+0x3dc8>
  407140:	ldp	x23, x24, [sp, #48]
  407144:	ldr	x25, [sp, #64]
  407148:	b	407038 <wcrtomb@plt+0x42f8>
  40714c:	bl	4027b0 <wctob@plt>
  407150:	ldr	x2, [x19, #8]
  407154:	ldr	x1, [x19, #16]
  407158:	strb	w0, [x2, x1]
  40715c:	ldr	x0, [x19, #16]
  407160:	add	x0, x0, #0x1
  407164:	str	x0, [x19, #16]
  407168:	b	407130 <wcrtomb@plt+0x43f0>
  40716c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407170:	ldr	x19, [x0, #1264]
  407174:	mov	w2, #0x5                   	// #5
  407178:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  40717c:	add	x1, x1, #0x9d8
  407180:	mov	x0, #0x0                   	// #0
  407184:	bl	402c20 <dcgettext@plt>
  407188:	mov	x2, x0
  40718c:	mov	w1, #0x1                   	// #1
  407190:	mov	x0, x19
  407194:	bl	402a90 <__fprintf_chk@plt>
  407198:	bl	4029e0 <abort@plt>
  40719c:	tbz	w21, #0, 4071b0 <wcrtomb@plt+0x4470>
  4071a0:	ldr	w0, [sp, #84]
  4071a4:	bl	402c70 <towupper@plt>
  4071a8:	str	w0, [sp, #84]
  4071ac:	b	40707c <wcrtomb@plt+0x433c>
  4071b0:	ldr	w0, [sp, #84]
  4071b4:	bl	402cf0 <towlower@plt>
  4071b8:	str	w0, [sp, #84]
  4071bc:	b	40707c <wcrtomb@plt+0x433c>
  4071c0:	ldr	w0, [sp, #84]
  4071c4:	bl	4027b0 <wctob@plt>
  4071c8:	ldr	x2, [x19, #8]
  4071cc:	ldr	x1, [x19, #16]
  4071d0:	strb	w0, [x2, x1]
  4071d4:	ldr	x0, [x19, #16]
  4071d8:	add	x0, x0, #0x1
  4071dc:	str	x0, [x19, #16]
  4071e0:	b	4070b4 <wcrtomb@plt+0x4374>
  4071e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4071e8:	ldr	x19, [x0, #1264]
  4071ec:	mov	w2, #0x5                   	// #5
  4071f0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4071f4:	add	x1, x1, #0x9d8
  4071f8:	mov	x0, #0x0                   	// #0
  4071fc:	bl	402c20 <dcgettext@plt>
  407200:	mov	x2, x0
  407204:	mov	w1, #0x1                   	// #1
  407208:	mov	x0, x19
  40720c:	bl	402a90 <__fprintf_chk@plt>
  407210:	bl	4029e0 <abort@plt>
  407214:	ldp	x23, x24, [sp, #48]
  407218:	ldr	x25, [sp, #64]
  40721c:	b	407038 <wcrtomb@plt+0x42f8>
  407220:	mov	x12, #0x2040                	// #8256
  407224:	sub	sp, sp, x12
  407228:	stp	x29, x30, [sp]
  40722c:	mov	x29, sp
  407230:	stp	x19, x20, [sp, #16]
  407234:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407238:	ldrb	w0, [x0, #1744]
  40723c:	cbnz	w0, 407264 <wcrtomb@plt+0x4524>
  407240:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407244:	ldr	x19, [x0, #1680]
  407248:	cbz	x19, 40736c <wcrtomb@plt+0x462c>
  40724c:	stp	x21, x22, [sp, #32]
  407250:	str	x23, [sp, #48]
  407254:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407258:	add	x22, x22, #0x618
  40725c:	mov	x20, #0x1                   	// #1
  407260:	b	4072c8 <wcrtomb@plt+0x4588>
  407264:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407268:	add	x19, x19, #0x618
  40726c:	ldr	x3, [x19, #192]
  407270:	mov	x2, #0x1                   	// #1
  407274:	mov	x1, x2
  407278:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40727c:	add	x0, x0, #0x460
  407280:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  407284:	strb	wzr, [x19, #184]
  407288:	b	407240 <wcrtomb@plt+0x4500>
  40728c:	ldr	x3, [x22, #192]
  407290:	mov	x1, x20
  407294:	add	x0, sp, #0x40
  407298:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  40729c:	mov	x3, x21
  4072a0:	mov	x2, x23
  4072a4:	mov	x1, x20
  4072a8:	add	x0, sp, #0x40
  4072ac:	bl	40a948 <wcrtomb@plt+0x7c08>
  4072b0:	mov	x2, x0
  4072b4:	cbnz	x0, 40728c <wcrtomb@plt+0x454c>
  4072b8:	mov	x0, x21
  4072bc:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  4072c0:	ldr	x19, [x19, #24]
  4072c4:	cbz	x19, 407308 <wcrtomb@plt+0x45c8>
  4072c8:	ldr	x0, [x19, #8]
  4072cc:	cbz	x0, 4072e0 <wcrtomb@plt+0x45a0>
  4072d0:	ldr	x3, [x22, #192]
  4072d4:	ldr	x2, [x19, #16]
  4072d8:	mov	x1, x20
  4072dc:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  4072e0:	ldr	x0, [x19]
  4072e4:	cbz	x0, 4072c0 <wcrtomb@plt+0x4580>
  4072e8:	mov	w2, #0x0                   	// #0
  4072ec:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4072f0:	ldr	x1, [x1, #1128]
  4072f4:	bl	40a6b4 <wcrtomb@plt+0x7974>
  4072f8:	mov	x21, x0
  4072fc:	mov	x23, #0x2000                	// #8192
  407300:	cbz	x0, 4072c0 <wcrtomb@plt+0x4580>
  407304:	b	40729c <wcrtomb@plt+0x455c>
  407308:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40730c:	ldrb	w0, [x0, #1902]
  407310:	cbnz	w0, 40732c <wcrtomb@plt+0x45ec>
  407314:	ldp	x21, x22, [sp, #32]
  407318:	ldr	x23, [sp, #48]
  40731c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407320:	ldr	x19, [x0, #1680]
  407324:	cbnz	x19, 407360 <wcrtomb@plt+0x4620>
  407328:	b	407378 <wcrtomb@plt+0x4638>
  40732c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407330:	ldr	x0, [x0, #1752]
  407334:	ldp	x21, x22, [sp, #32]
  407338:	ldr	x23, [sp, #48]
  40733c:	bl	40aa64 <wcrtomb@plt+0x7d24>
  407340:	b	40731c <wcrtomb@plt+0x45dc>
  407344:	ldr	x0, [x19, #8]
  407348:	bl	402ae0 <free@plt>
  40734c:	ldr	x20, [x19, #24]
  407350:	mov	x0, x19
  407354:	bl	402ae0 <free@plt>
  407358:	cbz	x20, 407378 <wcrtomb@plt+0x4638>
  40735c:	mov	x19, x20
  407360:	ldrb	w0, [x19, #32]
  407364:	cbz	w0, 40734c <wcrtomb@plt+0x460c>
  407368:	b	407344 <wcrtomb@plt+0x4604>
  40736c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407370:	ldrb	w0, [x0, #1902]
  407374:	cbnz	w0, 40739c <wcrtomb@plt+0x465c>
  407378:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40737c:	add	x0, x0, #0x618
  407380:	str	xzr, [x0, #112]
  407384:	str	xzr, [x0, #120]
  407388:	ldp	x19, x20, [sp, #16]
  40738c:	ldp	x29, x30, [sp]
  407390:	mov	x12, #0x2040                	// #8256
  407394:	add	sp, sp, x12
  407398:	ret
  40739c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4073a0:	ldr	x0, [x0, #1752]
  4073a4:	b	40733c <wcrtomb@plt+0x45fc>
  4073a8:	cbz	x0, 407460 <wcrtomb@plt+0x4720>
  4073ac:	stp	x29, x30, [sp, #-48]!
  4073b0:	mov	x29, sp
  4073b4:	stp	x19, x20, [sp, #16]
  4073b8:	stp	x21, x22, [sp, #32]
  4073bc:	mov	x20, x0
  4073c0:	mov	x21, x1
  4073c4:	mov	w22, w2
  4073c8:	mov	x19, x3
  4073cc:	ldrb	w0, [x3, #8]
  4073d0:	cbnz	w0, 407400 <wcrtomb@plt+0x46c0>
  4073d4:	cbnz	x21, 407420 <wcrtomb@plt+0x46e0>
  4073d8:	cbnz	w22, 407438 <wcrtomb@plt+0x46f8>
  4073dc:	mov	w0, #0x1                   	// #1
  4073e0:	strb	w0, [x19, #8]
  4073e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4073e8:	ldrb	w0, [x0, #1902]
  4073ec:	cbnz	w0, 407454 <wcrtomb@plt+0x4714>
  4073f0:	ldp	x19, x20, [sp, #16]
  4073f4:	ldp	x21, x22, [sp, #32]
  4073f8:	ldp	x29, x30, [sp], #48
  4073fc:	ret
  407400:	ldr	x3, [x3, #16]
  407404:	mov	x2, #0x1                   	// #1
  407408:	mov	x1, x2
  40740c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407410:	add	x0, x0, #0x460
  407414:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  407418:	strb	wzr, [x19, #8]
  40741c:	b	4073d4 <wcrtomb@plt+0x4694>
  407420:	ldr	x3, [x19, #16]
  407424:	mov	x2, x21
  407428:	mov	x1, #0x1                   	// #1
  40742c:	mov	x0, x20
  407430:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  407434:	b	4073d8 <wcrtomb@plt+0x4698>
  407438:	ldr	x3, [x19, #16]
  40743c:	mov	x2, #0x1                   	// #1
  407440:	mov	x1, x2
  407444:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407448:	add	x0, x0, #0x460
  40744c:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  407450:	b	4073e4 <wcrtomb@plt+0x46a4>
  407454:	ldr	x0, [x19, #16]
  407458:	bl	40aa64 <wcrtomb@plt+0x7d24>
  40745c:	b	4073f0 <wcrtomb@plt+0x46b0>
  407460:	ret
  407464:	stp	x29, x30, [sp, #-96]!
  407468:	mov	x29, sp
  40746c:	stp	x19, x20, [sp, #16]
  407470:	mov	x19, x0
  407474:	adrp	x0, 406000 <wcrtomb@plt+0x32c0>
  407478:	add	x0, x0, #0x840
  40747c:	str	x0, [x19, #32]
  407480:	ldr	x0, [x19, #184]
  407484:	cbz	x0, 407640 <wcrtomb@plt+0x4900>
  407488:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40748c:	ldr	x1, [x1, #1888]
  407490:	cbz	x1, 407638 <wcrtomb@plt+0x48f8>
  407494:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407498:	ldr	x1, [x1, #1752]
  40749c:	cbz	x1, 407638 <wcrtomb@plt+0x48f8>
  4074a0:	stp	x21, x22, [sp, #32]
  4074a4:	stp	x23, x24, [sp, #48]
  4074a8:	ldr	x23, [x19, #48]
  4074ac:	bl	402780 <fileno@plt>
  4074b0:	mov	w21, w0
  4074b4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4074b8:	ldr	x0, [x0, #1752]
  4074bc:	bl	402780 <fileno@plt>
  4074c0:	mov	w20, w0
  4074c4:	ldr	w2, [x19, #84]
  4074c8:	ldr	w1, [x19, #80]
  4074cc:	bl	402ce0 <fchown@plt>
  4074d0:	cmn	w0, #0x1
  4074d4:	b.eq	407548 <wcrtomb@plt+0x4808>  // b.none
  4074d8:	ldr	w4, [x19, #72]
  4074dc:	mov	w3, w20
  4074e0:	ldr	x2, [x19, #40]
  4074e4:	mov	w1, w21
  4074e8:	ldr	x0, [x19, #48]
  4074ec:	bl	40b010 <wcrtomb@plt+0x82d0>
  4074f0:	ldr	x0, [x19, #184]
  4074f4:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  4074f8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4074fc:	ldr	x0, [x0, #1752]
  407500:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  407504:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407508:	ldr	x20, [x0, #1888]
  40750c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  407510:	add	x1, x1, #0xa08
  407514:	mov	x0, x20
  407518:	bl	402aa0 <strcmp@plt>
  40751c:	cbnz	w0, 40755c <wcrtomb@plt+0x481c>
  407520:	ldr	x0, [x19, #40]
  407524:	mov	x2, x0
  407528:	mov	x1, x23
  40752c:	bl	40adf0 <wcrtomb@plt+0x80b0>
  407530:	bl	409e24 <wcrtomb@plt+0x70e4>
  407534:	ldr	x0, [x19, #40]
  407538:	bl	402ae0 <free@plt>
  40753c:	ldp	x21, x22, [sp, #32]
  407540:	ldp	x23, x24, [sp, #48]
  407544:	b	40763c <wcrtomb@plt+0x48fc>
  407548:	ldr	w2, [x19, #84]
  40754c:	mov	w1, #0xffffffff            	// #-1
  407550:	mov	w0, w20
  407554:	bl	402ce0 <fchown@plt>
  407558:	b	4074d8 <wcrtomb@plt+0x4798>
  40755c:	stp	x25, x26, [sp, #64]
  407560:	str	x27, [sp, #80]
  407564:	mov	x0, x23
  407568:	bl	402690 <strlen@plt>
  40756c:	mov	w24, w0
  407570:	mov	x0, x20
  407574:	bl	402690 <strlen@plt>
  407578:	mov	w21, w0
  40757c:	mov	w22, #0x2a                  	// #42
  407580:	sub	w25, w24, #0x1
  407584:	b	407590 <wcrtomb@plt+0x4850>
  407588:	add	w21, w21, w25
  40758c:	add	x20, x0, #0x1
  407590:	mov	w1, w22
  407594:	mov	x0, x20
  407598:	bl	402b20 <strchr@plt>
  40759c:	cbnz	x0, 407588 <wcrtomb@plt+0x4848>
  4075a0:	add	w0, w21, #0x1
  4075a4:	sxtw	x0, w0
  4075a8:	bl	412c80 <wcrtomb@plt+0xff40>
  4075ac:	mov	x26, x0
  4075b0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4075b4:	ldr	x22, [x0, #1888]
  4075b8:	mov	x27, x26
  4075bc:	mov	w25, #0x2a                  	// #42
  4075c0:	sxtw	x24, w24
  4075c4:	b	4075f4 <wcrtomb@plt+0x48b4>
  4075c8:	sub	x21, x20, x22
  4075cc:	mov	x2, x21
  4075d0:	mov	x1, x22
  4075d4:	mov	x0, x27
  4075d8:	bl	402650 <memcpy@plt>
  4075dc:	add	x27, x27, x21
  4075e0:	mov	x1, x23
  4075e4:	mov	x0, x27
  4075e8:	bl	402b80 <strcpy@plt>
  4075ec:	add	x27, x27, x24
  4075f0:	add	x22, x20, #0x1
  4075f4:	mov	w1, w25
  4075f8:	mov	x0, x22
  4075fc:	bl	402b20 <strchr@plt>
  407600:	mov	x20, x0
  407604:	cbnz	x0, 4075c8 <wcrtomb@plt+0x4888>
  407608:	mov	x1, x22
  40760c:	mov	x0, x27
  407610:	bl	402b80 <strcpy@plt>
  407614:	ldr	x2, [x19, #40]
  407618:	mov	x1, x26
  40761c:	mov	x0, x23
  407620:	bl	40adf0 <wcrtomb@plt+0x80b0>
  407624:	mov	x0, x26
  407628:	bl	402ae0 <free@plt>
  40762c:	ldp	x25, x26, [sp, #64]
  407630:	ldr	x27, [sp, #80]
  407634:	b	407520 <wcrtomb@plt+0x47e0>
  407638:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  40763c:	str	xzr, [x19, #184]
  407640:	ldp	x19, x20, [sp, #16]
  407644:	ldp	x29, x30, [sp], #96
  407648:	ret
  40764c:	stp	x29, x30, [sp, #-32]!
  407650:	mov	x29, sp
  407654:	str	x19, [sp, #16]
  407658:	mov	x19, x0
  40765c:	mov	x0, x19
  407660:	bl	407464 <wcrtomb@plt+0x4724>
  407664:	ldr	x0, [x19]
  407668:	ldr	x1, [x0]
  40766c:	cbz	x1, 4076c8 <wcrtomb@plt+0x4988>
  407670:	add	x1, x0, #0x8
  407674:	str	x1, [x19]
  407678:	mov	x1, x19
  40767c:	ldr	x0, [x0]
  407680:	bl	406cd8 <wcrtomb@plt+0x3f98>
  407684:	ldr	x0, [x19, #184]
  407688:	cbz	x0, 40765c <wcrtomb@plt+0x491c>
  40768c:	ldr	x1, [x0, #8]
  407690:	ldr	x2, [x0, #16]
  407694:	cmp	x1, x2
  407698:	b.cs	4076b8 <wcrtomb@plt+0x4978>  // b.hs, b.nlast
  40769c:	add	x2, x1, #0x1
  4076a0:	str	x2, [x0, #8]
  4076a4:	ldrb	w0, [x1]
  4076a8:	ldr	x1, [x19, #184]
  4076ac:	bl	402af0 <ungetc@plt>
  4076b0:	mov	w0, #0x0                   	// #0
  4076b4:	b	4076cc <wcrtomb@plt+0x498c>
  4076b8:	bl	402d00 <__uflow@plt>
  4076bc:	cmn	w0, #0x1
  4076c0:	b.eq	40765c <wcrtomb@plt+0x491c>  // b.none
  4076c4:	b	4076a8 <wcrtomb@plt+0x4968>
  4076c8:	mov	w0, #0x1                   	// #1
  4076cc:	ldr	x19, [sp, #16]
  4076d0:	ldp	x29, x30, [sp], #32
  4076d4:	ret
  4076d8:	stp	x29, x30, [sp, #-32]!
  4076dc:	mov	x29, sp
  4076e0:	str	x19, [sp, #16]
  4076e4:	mov	x19, x0
  4076e8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4076ec:	ldr	x0, [x0, #1704]
  4076f0:	cbnz	x0, 4077b4 <wcrtomb@plt+0x4a74>
  4076f4:	ldr	x0, [x19, #184]
  4076f8:	cbz	x0, 407730 <wcrtomb@plt+0x49f0>
  4076fc:	ldr	w1, [x0]
  407700:	tbnz	w1, #4, 407758 <wcrtomb@plt+0x4a18>
  407704:	ldr	x1, [x0, #8]
  407708:	ldr	x2, [x0, #16]
  40770c:	cmp	x1, x2
  407710:	b.cs	407780 <wcrtomb@plt+0x4a40>  // b.hs, b.nlast
  407714:	add	x2, x1, #0x1
  407718:	str	x2, [x0, #8]
  40771c:	ldrb	w0, [x1]
  407720:	ldr	x1, [x19, #184]
  407724:	bl	402af0 <ungetc@plt>
  407728:	mov	w0, #0x0                   	// #0
  40772c:	b	4077b8 <wcrtomb@plt+0x4a78>
  407730:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407734:	ldrb	w1, [x0, #1881]
  407738:	mov	w0, #0x1                   	// #1
  40773c:	cbz	w1, 407748 <wcrtomb@plt+0x4a08>
  407740:	and	w0, w0, #0x1
  407744:	b	4077b8 <wcrtomb@plt+0x4a78>
  407748:	mov	x0, x19
  40774c:	bl	40764c <wcrtomb@plt+0x490c>
  407750:	and	w0, w0, #0xff
  407754:	b	407740 <wcrtomb@plt+0x4a00>
  407758:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40775c:	ldrb	w1, [x0, #1881]
  407760:	mov	w0, #0x1                   	// #1
  407764:	cbz	w1, 407770 <wcrtomb@plt+0x4a30>
  407768:	and	w0, w0, #0x1
  40776c:	b	4077b8 <wcrtomb@plt+0x4a78>
  407770:	mov	x0, x19
  407774:	bl	40764c <wcrtomb@plt+0x490c>
  407778:	and	w0, w0, #0xff
  40777c:	b	407768 <wcrtomb@plt+0x4a28>
  407780:	bl	402d00 <__uflow@plt>
  407784:	cmn	w0, #0x1
  407788:	b.ne	407720 <wcrtomb@plt+0x49e0>  // b.any
  40778c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407790:	ldrb	w1, [x0, #1881]
  407794:	mov	w0, #0x1                   	// #1
  407798:	cbz	w1, 4077a4 <wcrtomb@plt+0x4a64>
  40779c:	and	w0, w0, #0x1
  4077a0:	b	4077b8 <wcrtomb@plt+0x4a78>
  4077a4:	mov	x0, x19
  4077a8:	bl	40764c <wcrtomb@plt+0x490c>
  4077ac:	and	w0, w0, #0xff
  4077b0:	b	40779c <wcrtomb@plt+0x4a5c>
  4077b4:	mov	w0, #0x0                   	// #0
  4077b8:	ldr	x19, [sp, #16]
  4077bc:	ldp	x29, x30, [sp], #32
  4077c0:	ret
  4077c4:	ldr	w2, [x0]
  4077c8:	cmp	w2, #0x3
  4077cc:	b.eq	407864 <wcrtomb@plt+0x4b24>  // b.none
  4077d0:	stp	x29, x30, [sp, #-16]!
  4077d4:	mov	x29, sp
  4077d8:	b.hi	407810 <wcrtomb@plt+0x4ad0>  // b.pmore
  4077dc:	cmp	w2, #0x1
  4077e0:	b.eq	407830 <wcrtomb@plt+0x4af0>  // b.none
  4077e4:	cmp	w2, #0x2
  4077e8:	b.ne	407800 <wcrtomb@plt+0x4ac0>  // b.any
  4077ec:	ldr	x2, [x0, #8]
  4077f0:	ldr	x0, [x1, #16]
  4077f4:	cmp	x2, x0
  4077f8:	cset	w0, eq  // eq = none
  4077fc:	b	407808 <wcrtomb@plt+0x4ac8>
  407800:	mov	w0, #0x1                   	// #1
  407804:	cbnz	w2, 4078ac <wcrtomb@plt+0x4b6c>
  407808:	ldp	x29, x30, [sp], #16
  40780c:	ret
  407810:	cmp	w2, #0x5
  407814:	b.ls	407898 <wcrtomb@plt+0x4b58>  // b.plast
  407818:	cmp	w2, #0x6
  40781c:	b.ne	4078ac <wcrtomb@plt+0x4b6c>  // b.any
  407820:	mov	x0, x1
  407824:	bl	4076d8 <wcrtomb@plt+0x4998>
  407828:	and	w0, w0, #0xff
  40782c:	b	407808 <wcrtomb@plt+0x4ac8>
  407830:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407834:	add	x1, x1, #0x618
  407838:	mov	w5, #0x0                   	// #0
  40783c:	mov	x4, #0x0                   	// #0
  407840:	mov	x3, #0x0                   	// #0
  407844:	ldr	x2, [x1, #80]
  407848:	add	x1, x1, #0x40
  40784c:	ldr	x1, [x1, #8]
  407850:	ldr	x0, [x0, #24]
  407854:	bl	4095ec <wcrtomb@plt+0x68ac>
  407858:	cmp	w0, #0x0
  40785c:	cset	w0, ne  // ne = any
  407860:	b	407808 <wcrtomb@plt+0x4ac8>
  407864:	ldr	x2, [x1, #16]
  407868:	ldr	x3, [x0, #8]
  40786c:	mov	w1, #0x0                   	// #0
  407870:	cmp	x2, x3
  407874:	b.cc	407890 <wcrtomb@plt+0x4b50>  // b.lo, b.ul, b.last
  407878:	sub	x2, x2, x3
  40787c:	ldr	x1, [x0, #16]
  407880:	udiv	x0, x2, x1
  407884:	msub	x2, x0, x1, x2
  407888:	cmp	x2, #0x0
  40788c:	cset	w1, eq  // eq = none
  407890:	mov	w0, w1
  407894:	ret
  407898:	ldr	x2, [x0, #8]
  40789c:	ldr	x0, [x1, #16]
  4078a0:	cmp	x2, x0
  4078a4:	cset	w0, ls  // ls = plast
  4078a8:	b	407808 <wcrtomb@plt+0x4ac8>
  4078ac:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  4078b0:	add	x0, x0, #0xa10
  4078b4:	bl	40a510 <wcrtomb@plt+0x77d0>
  4078b8:	stp	x29, x30, [sp, #-64]!
  4078bc:	mov	x29, sp
  4078c0:	stp	x19, x20, [sp, #16]
  4078c4:	stp	x21, x22, [sp, #32]
  4078c8:	stp	x23, x24, [sp, #48]
  4078cc:	mov	x19, x0
  4078d0:	mov	x21, x1
  4078d4:	mov	w20, w2
  4078d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4078dc:	ldr	x0, [x0, #1680]
  4078e0:	cbz	x0, 4078e8 <wcrtomb@plt+0x4ba8>
  4078e4:	bl	407220 <wcrtomb@plt+0x44e0>
  4078e8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4078ec:	strb	wzr, [x0, #1768]
  4078f0:	cbnz	w20, 4078fc <wcrtomb@plt+0x4bbc>
  4078f4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4078f8:	str	xzr, [x0, #1640]
  4078fc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407900:	mov	w1, #0x1                   	// #1
  407904:	strb	w1, [x0, #1656]
  407908:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40790c:	add	x22, x22, #0x618
  407910:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407914:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407918:	add	x23, x23, #0x759
  40791c:	b	407988 <wcrtomb@plt+0x4c48>
  407920:	str	w1, [x0, #16]
  407924:	add	x0, x0, #0x28
  407928:	cmp	x0, x2
  40792c:	b.eq	407958 <wcrtomb@plt+0x4c18>  // b.none
  407930:	ldr	x3, [x0]
  407934:	mov	w1, w4
  407938:	cbz	x3, 407920 <wcrtomb@plt+0x4be0>
  40793c:	ldr	w5, [x3]
  407940:	cmp	w5, #0x2
  407944:	b.ne	407920 <wcrtomb@plt+0x4be0>  // b.any
  407948:	ldr	x1, [x3, #8]
  40794c:	cmp	x1, #0x0
  407950:	cset	w1, eq  // eq = none
  407954:	b	407920 <wcrtomb@plt+0x4be0>
  407958:	bl	4056e8 <wcrtomb@plt+0x29a8>
  40795c:	ldr	x0, [x24, #1888]
  407960:	cbz	x0, 407968 <wcrtomb@plt+0x4c28>
  407964:	strb	wzr, [x22, #184]
  407968:	ldrb	w0, [x23]
  40796c:	strb	w0, [x19, #24]
  407970:	ldr	x0, [x19]
  407974:	add	x1, x0, #0x8
  407978:	str	x1, [x19]
  40797c:	mov	x1, x19
  407980:	ldr	x0, [x0]
  407984:	bl	406cd8 <wcrtomb@plt+0x3f98>
  407988:	ldr	x1, [x19, #32]
  40798c:	mov	x0, x19
  407990:	blr	x1
  407994:	ands	w20, w0, #0xff
  407998:	b.ne	4079e4 <wcrtomb@plt+0x4ca4>  // b.any
  40799c:	mov	x0, x19
  4079a0:	bl	407464 <wcrtomb@plt+0x4724>
  4079a4:	ldr	x0, [x19]
  4079a8:	ldr	x0, [x0]
  4079ac:	cbz	x0, 4079f0 <wcrtomb@plt+0x4cb0>
  4079b0:	ldrb	w0, [x19, #24]
  4079b4:	cbz	w0, 407970 <wcrtomb@plt+0x4c30>
  4079b8:	str	xzr, [x19, #16]
  4079bc:	str	xzr, [x22, #16]
  4079c0:	ldr	x0, [x21]
  4079c4:	ldr	x2, [x21, #16]
  4079c8:	cbz	w2, 407958 <wcrtomb@plt+0x4c18>
  4079cc:	sub	w2, w2, #0x1
  4079d0:	add	x2, x2, #0x1
  4079d4:	add	x2, x2, x2, lsl #2
  4079d8:	add	x2, x0, x2, lsl #3
  4079dc:	mov	w4, #0x0                   	// #0
  4079e0:	b	407930 <wcrtomb@plt+0x4bf0>
  4079e4:	ldr	x0, [x19, #16]
  4079e8:	add	x0, x0, #0x1
  4079ec:	str	x0, [x19, #16]
  4079f0:	mov	w0, w20
  4079f4:	ldp	x19, x20, [sp, #16]
  4079f8:	ldp	x21, x22, [sp, #32]
  4079fc:	ldp	x23, x24, [sp, #48]
  407a00:	ldp	x29, x30, [sp], #64
  407a04:	ret
  407a08:	sub	sp, sp, #0x30
  407a0c:	cbz	w2, 407a48 <wcrtomb@plt+0x4d08>
  407a10:	ldp	x6, x7, [x0]
  407a14:	ldp	x4, x5, [x0, #16]
  407a18:	ldp	x2, x3, [x0, #32]
  407a1c:	ldp	x8, x9, [x1]
  407a20:	stp	x8, x9, [x0]
  407a24:	ldp	x8, x9, [x1, #16]
  407a28:	stp	x8, x9, [x0, #16]
  407a2c:	ldp	x8, x9, [x1, #32]
  407a30:	stp	x8, x9, [x0, #32]
  407a34:	stp	x6, x7, [x1]
  407a38:	stp	x4, x5, [x1, #16]
  407a3c:	stp	x2, x3, [x1, #32]
  407a40:	add	sp, sp, #0x30
  407a44:	ret
  407a48:	ldp	x6, x7, [x0]
  407a4c:	ldp	x4, x5, [x0, #16]
  407a50:	ldr	w2, [x0, #32]
  407a54:	ldp	x8, x9, [x1]
  407a58:	stp	x8, x9, [x0]
  407a5c:	ldp	x8, x9, [x1, #16]
  407a60:	stp	x8, x9, [x0, #16]
  407a64:	ldr	w3, [x1, #32]
  407a68:	str	w3, [x0, #32]
  407a6c:	stp	x6, x7, [x1]
  407a70:	stp	x4, x5, [x1, #16]
  407a74:	str	w2, [x1, #32]
  407a78:	b	407a40 <wcrtomb@plt+0x4d00>
  407a7c:	mov	x12, #0x10a0                	// #4256
  407a80:	sub	sp, sp, x12
  407a84:	stp	x29, x30, [sp]
  407a88:	mov	x29, sp
  407a8c:	stp	x19, x20, [sp, #16]
  407a90:	stp	x21, x22, [sp, #32]
  407a94:	str	x0, [sp, #104]
  407a98:	ldr	x19, [x0]
  407a9c:	ldr	x22, [x0, #16]
  407aa0:	add	x22, x22, x22, lsl #2
  407aa4:	add	x22, x19, x22, lsl #3
  407aa8:	cmp	x19, x22
  407aac:	b.cs	408fdc <wcrtomb@plt+0x629c>  // b.hs, b.nlast
  407ab0:	stp	x23, x24, [sp, #48]
  407ab4:	mov	x23, x1
  407ab8:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407abc:	add	x24, x24, #0x76d
  407ac0:	add	x0, sp, #0xa2
  407ac4:	str	x0, [sp, #136]
  407ac8:	b	407c84 <wcrtomb@plt+0x4f44>
  407acc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407ad0:	ldr	x3, [x0, #1288]
  407ad4:	mov	x2, #0x9                   	// #9
  407ad8:	mov	x1, #0x1                   	// #1
  407adc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  407ae0:	add	x0, x0, #0xa38
  407ae4:	bl	402680 <fwrite_unlocked@plt>
  407ae8:	mov	x1, x19
  407aec:	ldr	x0, [sp, #104]
  407af0:	bl	405da4 <wcrtomb@plt+0x3064>
  407af4:	b	407c8c <wcrtomb@plt+0x4f4c>
  407af8:	mov	x1, x23
  407afc:	bl	4077c4 <wcrtomb@plt+0x4a84>
  407b00:	and	w1, w0, #0xff
  407b04:	b	407c28 <wcrtomb@plt+0x4ee8>
  407b08:	mov	x1, x23
  407b0c:	bl	4077c4 <wcrtomb@plt+0x4a84>
  407b10:	ands	w1, w0, #0xff
  407b14:	b.eq	407c28 <wcrtomb@plt+0x4ee8>  // b.none
  407b18:	mov	w0, #0x1                   	// #1
  407b1c:	str	w0, [x19, #16]
  407b20:	ldr	x2, [x19, #8]
  407b24:	ldr	w0, [x2]
  407b28:	cmp	w0, #0x4
  407b2c:	b.eq	407bb4 <wcrtomb@plt+0x4e74>  // b.none
  407b30:	cmp	w0, #0x4
  407b34:	b.hi	407b90 <wcrtomb@plt+0x4e50>  // b.pmore
  407b38:	mov	w1, #0x1                   	// #1
  407b3c:	cmp	w0, w1
  407b40:	b.eq	407c28 <wcrtomb@plt+0x4ee8>  // b.none
  407b44:	cmp	w0, #0x2
  407b48:	b.ne	409050 <wcrtomb@plt+0x6310>  // b.any
  407b4c:	ldr	x3, [x23, #16]
  407b50:	ldr	x0, [x2, #8]
  407b54:	mov	w1, #0x1                   	// #1
  407b58:	cmp	x3, x0
  407b5c:	b.cc	407b88 <wcrtomb@plt+0x4e48>  // b.lo, b.ul, b.last
  407b60:	mov	w0, #0x2                   	// #2
  407b64:	str	w0, [x19, #16]
  407b68:	ldr	x3, [x23, #16]
  407b6c:	ldr	x0, [x2, #8]
  407b70:	cmp	x3, x0
  407b74:	b.ls	407b88 <wcrtomb@plt+0x4e48>  // b.plast
  407b78:	mov	x1, x23
  407b7c:	ldr	x0, [x19]
  407b80:	bl	4077c4 <wcrtomb@plt+0x4a84>
  407b84:	and	w1, w0, #0xff
  407b88:	and	w1, w1, #0x1
  407b8c:	b	407c28 <wcrtomb@plt+0x4ee8>
  407b90:	cmp	w0, #0x5
  407b94:	b.ne	409050 <wcrtomb@plt+0x6310>  // b.any
  407b98:	ldr	x1, [x23, #16]
  407b9c:	ldr	x0, [x2, #16]
  407ba0:	udiv	x1, x1, x0
  407ba4:	madd	x0, x1, x0, x0
  407ba8:	str	x0, [x2, #8]
  407bac:	mov	w1, #0x1                   	// #1
  407bb0:	b	407c28 <wcrtomb@plt+0x4ee8>
  407bb4:	ldr	x0, [x23, #16]
  407bb8:	ldr	x1, [x2, #16]
  407bbc:	add	x0, x0, x1
  407bc0:	str	x0, [x2, #8]
  407bc4:	mov	w1, #0x1                   	// #1
  407bc8:	b	407c28 <wcrtomb@plt+0x4ee8>
  407bcc:	ldr	x0, [x19, #8]
  407bd0:	ldr	w1, [x0]
  407bd4:	cmp	w1, #0x2
  407bd8:	b.eq	407bf8 <wcrtomb@plt+0x4eb8>  // b.none
  407bdc:	mov	x1, x23
  407be0:	bl	4077c4 <wcrtomb@plt+0x4a84>
  407be4:	ands	w1, w0, #0xff
  407be8:	b.eq	407c5c <wcrtomb@plt+0x4f1c>  // b.none
  407bec:	mov	w0, #0x2                   	// #2
  407bf0:	str	w0, [x19, #16]
  407bf4:	b	407c28 <wcrtomb@plt+0x4ee8>
  407bf8:	ldr	x2, [x23, #16]
  407bfc:	ldr	x1, [x0, #8]
  407c00:	cmp	x2, x1
  407c04:	b.cc	407c10 <wcrtomb@plt+0x4ed0>  // b.lo, b.ul, b.last
  407c08:	mov	w1, #0x2                   	// #2
  407c0c:	str	w1, [x19, #16]
  407c10:	ldr	x1, [x23, #16]
  407c14:	ldr	x0, [x0, #8]
  407c18:	cmp	x1, x0
  407c1c:	cset	w1, ls  // ls = plast
  407c20:	b	407c28 <wcrtomb@plt+0x4ee8>
  407c24:	mov	w1, #0x1                   	// #1
  407c28:	ldrb	w0, [x19, #20]
  407c2c:	cmp	w1, w0
  407c30:	b.eq	407c78 <wcrtomb@plt+0x4f38>  // b.none
  407c34:	ldrb	w1, [x19, #21]
  407c38:	sub	w0, w1, #0x23
  407c3c:	cmp	w0, #0x5a
  407c40:	b.hi	408fc4 <wcrtomb@plt+0x6284>  // b.pmore
  407c44:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xccd0>
  407c48:	add	x2, x2, #0xb20
  407c4c:	ldrh	w0, [x2, w0, uxtw #1]
  407c50:	adr	x2, 407c5c <wcrtomb@plt+0x4f1c>
  407c54:	add	x0, x2, w0, sxth #2
  407c58:	br	x0
  407c5c:	mov	w1, #0x1                   	// #1
  407c60:	b	407c28 <wcrtomb@plt+0x4ee8>
  407c64:	bl	406c84 <wcrtomb@plt+0x3f44>
  407c68:	ldr	x1, [x19, #24]
  407c6c:	str	x1, [x0, #8]
  407c70:	ldr	x1, [x19, #32]
  407c74:	str	x1, [x0, #16]
  407c78:	add	x19, x19, #0x28
  407c7c:	cmp	x19, x22
  407c80:	b.cs	408fd8 <wcrtomb@plt+0x6298>  // b.hs, b.nlast
  407c84:	ldrb	w0, [x24]
  407c88:	cbnz	w0, 407acc <wcrtomb@plt+0x4d8c>
  407c8c:	ldr	x0, [x19]
  407c90:	cbz	x0, 407c24 <wcrtomb@plt+0x4ee4>
  407c94:	ldr	w2, [x19, #16]
  407c98:	cmp	w2, #0x1
  407c9c:	b.eq	407bcc <wcrtomb@plt+0x4e8c>  // b.none
  407ca0:	ldr	x1, [x19, #8]
  407ca4:	cbz	x1, 407af8 <wcrtomb@plt+0x4db8>
  407ca8:	ldr	w1, [x0]
  407cac:	cmp	w1, #0x2
  407cb0:	b.ne	407b08 <wcrtomb@plt+0x4dc8>  // b.any
  407cb4:	mov	w1, #0x0                   	// #0
  407cb8:	cmp	w2, #0x2
  407cbc:	b.eq	407c28 <wcrtomb@plt+0x4ee8>  // b.none
  407cc0:	ldr	x2, [x23, #16]
  407cc4:	ldr	x0, [x0, #8]
  407cc8:	cmp	x2, x0
  407ccc:	b.cs	407b18 <wcrtomb@plt+0x4dd8>  // b.hs, b.nlast
  407cd0:	b	407c28 <wcrtomb@plt+0x4ee8>
  407cd4:	ldr	x19, [x19, #24]
  407cd8:	add	x19, x19, x19, lsl #2
  407cdc:	ldr	x0, [sp, #104]
  407ce0:	ldr	x0, [x0]
  407ce4:	add	x19, x0, x19, lsl #3
  407ce8:	b	407c7c <wcrtomb@plt+0x4f3c>
  407cec:	ldr	w0, [x19, #16]
  407cf0:	cmp	w0, #0x1
  407cf4:	b.ne	407d10 <wcrtomb@plt+0x4fd0>  // b.any
  407cf8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407cfc:	ldrb	w1, [x0, #1901]
  407d00:	mov	w0, #0xffffffff            	// #-1
  407d04:	cbnz	w1, 407d34 <wcrtomb@plt+0x4ff4>
  407d08:	ldp	x23, x24, [sp, #48]
  407d0c:	b	408534 <wcrtomb@plt+0x57f4>
  407d10:	ldr	x1, [x19, #32]
  407d14:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407d18:	add	x3, x3, #0x618
  407d1c:	add	x3, x3, #0xb0
  407d20:	mov	w2, #0x1                   	// #1
  407d24:	sub	x1, x1, #0x1
  407d28:	ldr	x0, [x19, #24]
  407d2c:	bl	4073a8 <wcrtomb@plt+0x4668>
  407d30:	b	407cf8 <wcrtomb@plt+0x4fb8>
  407d34:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  407d38:	add	x0, x0, #0xa48
  407d3c:	bl	402a40 <puts@plt>
  407d40:	mov	w0, #0xffffffff            	// #-1
  407d44:	ldp	x23, x24, [sp, #48]
  407d48:	b	408534 <wcrtomb@plt+0x57f4>
  407d4c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407d50:	add	x0, x0, #0x618
  407d54:	ldr	x20, [x0, #72]
  407d58:	ldr	x19, [x0, #80]
  407d5c:	mov	x2, x19
  407d60:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407d64:	ldrb	w1, [x0, #1120]
  407d68:	mov	x0, x20
  407d6c:	bl	402bb0 <memchr@plt>
  407d70:	cbz	x0, 40902c <wcrtomb@plt+0x62ec>
  407d74:	add	x1, x0, #0x1
  407d78:	sub	x20, x1, x20
  407d7c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407d80:	add	x0, x0, #0x618
  407d84:	ldr	x2, [x0, #88]
  407d88:	sub	x2, x2, x20
  407d8c:	str	x2, [x0, #88]
  407d90:	sub	x20, x19, x20
  407d94:	str	x20, [x0, #80]
  407d98:	str	x1, [x0, #72]
  407d9c:	ldr	x0, [sp, #104]
  407da0:	ldr	x19, [x0]
  407da4:	ldrb	w0, [x24]
  407da8:	cbz	w0, 407c7c <wcrtomb@plt+0x4f3c>
  407dac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407db0:	add	x0, x0, #0x618
  407db4:	add	x0, x0, #0x40
  407db8:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  407dbc:	b	407c7c <wcrtomb@plt+0x4f3c>
  407dc0:	stp	x25, x26, [sp, #64]
  407dc4:	stp	x27, x28, [sp, #80]
  407dc8:	ldr	x27, [x19, #32]
  407dcc:	str	w27, [sp, #96]
  407dd0:	mov	x1, #0x0                   	// #0
  407dd4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407dd8:	add	x0, x0, #0x618
  407ddc:	add	x0, x0, #0xd8
  407de0:	bl	4068a8 <wcrtomb@plt+0x3b68>
  407de4:	cbnz	w27, 407e80 <wcrtomb@plt+0x5140>
  407de8:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407dec:	add	x20, x20, #0x618
  407df0:	add	x20, x20, #0x40
  407df4:	mov	x2, #0x1                   	// #1
  407df8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  407dfc:	add	x1, x1, #0xdb8
  407e00:	mov	x0, x20
  407e04:	bl	406b08 <wcrtomb@plt+0x3dc8>
  407e08:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  407e0c:	add	x1, x1, #0xa58
  407e10:	ldr	x0, [x20, #8]
  407e14:	bl	402850 <popen@plt>
  407e18:	mov	x20, x0
  407e1c:	cbz	x20, 407ed4 <wcrtomb@plt+0x5194>
  407e20:	add	x26, sp, #0xa0
  407e24:	adrp	x28, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407e28:	add	x28, x28, #0x618
  407e2c:	add	x0, x28, #0xd8
  407e30:	str	x0, [sp, #112]
  407e34:	mov	x25, #0x1000                	// #4096
  407e38:	mov	x21, #0x1                   	// #1
  407e3c:	ldr	w0, [x20]
  407e40:	tbnz	w0, #4, 407f04 <wcrtomb@plt+0x51c4>
  407e44:	mov	x3, x20
  407e48:	mov	x2, x25
  407e4c:	mov	x1, x21
  407e50:	mov	x0, x26
  407e54:	bl	402a50 <fread_unlocked@plt>
  407e58:	mov	w2, w0
  407e5c:	cmp	w0, #0x0
  407e60:	b.le	407e3c <wcrtomb@plt+0x50fc>
  407e64:	ldr	w0, [sp, #96]
  407e68:	cbnz	w0, 407eec <wcrtomb@plt+0x51ac>
  407e6c:	sxtw	x2, w2
  407e70:	mov	x1, x26
  407e74:	ldr	x0, [sp, #112]
  407e78:	bl	406b08 <wcrtomb@plt+0x3dc8>
  407e7c:	b	407e34 <wcrtomb@plt+0x50f4>
  407e80:	ldr	x0, [x19, #24]
  407e84:	add	x0, x0, w27, sxtw
  407e88:	sturb	wzr, [x0, #-1]
  407e8c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  407e90:	add	x1, x1, #0xa58
  407e94:	ldr	x0, [x19, #24]
  407e98:	bl	402850 <popen@plt>
  407e9c:	mov	x20, x0
  407ea0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407ea4:	ldrb	w0, [x0, #1744]
  407ea8:	cbz	w0, 407e1c <wcrtomb@plt+0x50dc>
  407eac:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407eb0:	add	x21, x21, #0x618
  407eb4:	ldr	x3, [x21, #192]
  407eb8:	mov	x2, #0x1                   	// #1
  407ebc:	mov	x1, x2
  407ec0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407ec4:	add	x0, x0, #0x460
  407ec8:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  407ecc:	strb	wzr, [x21, #184]
  407ed0:	b	407e1c <wcrtomb@plt+0x50dc>
  407ed4:	mov	w2, #0x5                   	// #5
  407ed8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  407edc:	add	x1, x1, #0xa60
  407ee0:	mov	x0, #0x0                   	// #0
  407ee4:	bl	402c20 <dcgettext@plt>
  407ee8:	bl	40a510 <wcrtomb@plt+0x77d0>
  407eec:	ldr	x3, [x28, #192]
  407ef0:	sxtw	x2, w2
  407ef4:	mov	x1, #0x1                   	// #1
  407ef8:	mov	x0, x26
  407efc:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  407f00:	b	407e34 <wcrtomb@plt+0x50f4>
  407f04:	mov	x0, x20
  407f08:	bl	402c60 <pclose@plt>
  407f0c:	cbnz	w27, 407f6c <wcrtomb@plt+0x522c>
  407f10:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407f14:	ldr	x0, [x0, #1792]
  407f18:	cbz	x0, 407f3c <wcrtomb@plt+0x51fc>
  407f1c:	sub	x0, x0, #0x1
  407f20:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407f24:	ldr	x1, [x1, #1784]
  407f28:	ldrb	w2, [x1, x0]
  407f2c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407f30:	ldrb	w1, [x1, #1120]
  407f34:	cmp	w2, w1
  407f38:	b.eq	407f60 <wcrtomb@plt+0x5220>  // b.none
  407f3c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407f40:	add	x0, x0, #0x618
  407f44:	mov	w2, #0x1                   	// #1
  407f48:	add	x1, x0, #0xd8
  407f4c:	add	x0, x0, #0x40
  407f50:	bl	407a08 <wcrtomb@plt+0x4cc8>
  407f54:	ldp	x25, x26, [sp, #64]
  407f58:	ldp	x27, x28, [sp, #80]
  407f5c:	b	407c78 <wcrtomb@plt+0x4f38>
  407f60:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407f64:	str	x0, [x1, #1792]
  407f68:	b	407f3c <wcrtomb@plt+0x51fc>
  407f6c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407f70:	ldrb	w0, [x0, #1902]
  407f74:	cbnz	w0, 407f84 <wcrtomb@plt+0x5244>
  407f78:	ldp	x25, x26, [sp, #64]
  407f7c:	ldp	x27, x28, [sp, #80]
  407f80:	b	407c78 <wcrtomb@plt+0x4f38>
  407f84:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407f88:	ldr	x0, [x0, #1752]
  407f8c:	bl	40aa64 <wcrtomb@plt+0x7d24>
  407f90:	ldp	x25, x26, [sp, #64]
  407f94:	ldp	x27, x28, [sp, #80]
  407f98:	b	407c78 <wcrtomb@plt+0x4f38>
  407f9c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407fa0:	add	x0, x0, #0x618
  407fa4:	mov	w2, #0x1                   	// #1
  407fa8:	add	x1, x0, #0x40
  407fac:	bl	406990 <wcrtomb@plt+0x3c50>
  407fb0:	ldrb	w0, [x24]
  407fb4:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  407fb8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407fbc:	add	x0, x0, #0x618
  407fc0:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  407fc4:	b	407c78 <wcrtomb@plt+0x4f38>
  407fc8:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407fcc:	add	x20, x20, #0x618
  407fd0:	add	x21, x20, #0x40
  407fd4:	mov	x2, #0x1                   	// #1
  407fd8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  407fdc:	add	x1, x1, #0x460
  407fe0:	mov	x0, x21
  407fe4:	bl	406b08 <wcrtomb@plt+0x3dc8>
  407fe8:	ldr	x2, [x20, #16]
  407fec:	ldr	x1, [x20, #8]
  407ff0:	mov	x0, x21
  407ff4:	bl	406b08 <wcrtomb@plt+0x3dc8>
  407ff8:	ldrb	w0, [x20, #32]
  407ffc:	strb	w0, [x20, #96]
  408000:	ldur	x0, [x20, #36]
  408004:	stur	x0, [x20, #100]
  408008:	ldrb	w0, [x24]
  40800c:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408010:	mov	x0, x21
  408014:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408018:	b	407c78 <wcrtomb@plt+0x4f38>
  40801c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408020:	add	x1, x1, #0x618
  408024:	mov	w2, #0x1                   	// #1
  408028:	add	x0, x1, #0x40
  40802c:	bl	406990 <wcrtomb@plt+0x3c50>
  408030:	ldrb	w0, [x24]
  408034:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408038:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40803c:	add	x0, x0, #0x618
  408040:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408044:	b	407c78 <wcrtomb@plt+0x4f38>
  408048:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40804c:	add	x20, x20, #0x618
  408050:	mov	x2, #0x1                   	// #1
  408054:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408058:	add	x1, x1, #0x460
  40805c:	mov	x0, x20
  408060:	bl	406b08 <wcrtomb@plt+0x3dc8>
  408064:	ldr	x2, [x20, #80]
  408068:	ldr	x1, [x20, #72]
  40806c:	mov	x0, x20
  408070:	bl	406b08 <wcrtomb@plt+0x3dc8>
  408074:	ldrb	w0, [x20, #96]
  408078:	strb	w0, [x20, #32]
  40807c:	ldur	x0, [x20, #100]
  408080:	stur	x0, [x20, #36]
  408084:	ldrb	w0, [x24]
  408088:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  40808c:	mov	x0, x20
  408090:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408094:	b	407c78 <wcrtomb@plt+0x4f38>
  408098:	ldr	x1, [x19, #32]
  40809c:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4080a0:	add	x3, x3, #0x618
  4080a4:	add	x3, x3, #0xb0
  4080a8:	mov	w2, #0x1                   	// #1
  4080ac:	sub	x1, x1, #0x1
  4080b0:	ldr	x0, [x19, #24]
  4080b4:	bl	4073a8 <wcrtomb@plt+0x4668>
  4080b8:	b	407c78 <wcrtomb@plt+0x4f38>
  4080bc:	stp	x25, x26, [sp, #64]
  4080c0:	stp	x27, x28, [sp, #80]
  4080c4:	ldr	w26, [x19, #24]
  4080c8:	cmn	w26, #0x1
  4080cc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4080d0:	ldr	w1, [x1, #1112]
  4080d4:	csel	w26, w1, w26, eq  // eq = none
  4080d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4080dc:	add	x0, x0, #0x618
  4080e0:	ldr	x21, [x0, #72]
  4080e4:	ldr	x20, [x0, #80]
  4080e8:	ldr	x28, [x0, #192]
  4080ec:	add	x0, x0, #0xb0
  4080f0:	ldrb	w0, [x0, #8]
  4080f4:	cbnz	w0, 40815c <wcrtomb@plt+0x541c>
  4080f8:	add	x0, x21, x20
  4080fc:	str	x0, [sp, #96]
  408100:	mov	x25, #0x0                   	// #0
  408104:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  408108:	add	x0, x0, #0xa78
  40810c:	str	x0, [sp, #112]
  408110:	cbnz	x20, 408210 <wcrtomb@plt+0x54d0>
  408114:	mov	x3, x28
  408118:	mov	x2, #0x1                   	// #1
  40811c:	mov	x1, x2
  408120:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  408124:	add	x0, x0, #0xa88
  408128:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  40812c:	mov	x3, x28
  408130:	mov	x2, #0x1                   	// #1
  408134:	mov	x1, x2
  408138:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40813c:	add	x0, x0, #0x460
  408140:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  408144:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408148:	ldrb	w0, [x0, #1902]
  40814c:	cbnz	w0, 408318 <wcrtomb@plt+0x55d8>
  408150:	ldp	x25, x26, [sp, #64]
  408154:	ldp	x27, x28, [sp, #80]
  408158:	b	407c78 <wcrtomb@plt+0x4f38>
  40815c:	mov	x3, x28
  408160:	mov	x2, #0x1                   	// #1
  408164:	mov	x1, x2
  408168:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40816c:	add	x0, x0, #0x460
  408170:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  408174:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408178:	strb	wzr, [x0, #1744]
  40817c:	b	4080f8 <wcrtomb@plt+0x53b8>
  408180:	mov	w0, #0x5c                  	// #92
  408184:	strb	w0, [sp, #160]
  408188:	ldrb	w4, [x21]
  40818c:	cmp	w4, #0xa
  408190:	b.eq	4082a8 <wcrtomb@plt+0x5568>  // b.none
  408194:	b.hi	408250 <wcrtomb@plt+0x5510>  // b.pmore
  408198:	cmp	w4, #0x8
  40819c:	b.eq	408288 <wcrtomb@plt+0x5548>  // b.none
  4081a0:	cmp	w4, #0x9
  4081a4:	b.ne	4081b8 <wcrtomb@plt+0x5478>  // b.any
  4081a8:	mov	w0, #0x74                  	// #116
  4081ac:	strb	w0, [sp, #161]
  4081b0:	ldr	x20, [sp, #136]
  4081b4:	b	4081cc <wcrtomb@plt+0x548c>
  4081b8:	cmp	w4, #0x7
  4081bc:	b.ne	4082b8 <wcrtomb@plt+0x5578>  // b.any
  4081c0:	mov	w0, #0x61                  	// #97
  4081c4:	strb	w0, [sp, #161]
  4081c8:	ldr	x20, [sp, #136]
  4081cc:	add	x0, sp, #0xa0
  4081d0:	sub	x20, x20, x0
  4081d4:	add	x1, x20, x25
  4081d8:	sxtw	x0, w26
  4081dc:	cmp	w26, #0x0
  4081e0:	ccmp	x1, x0, #0x0, gt
  4081e4:	b.cs	4082e0 <wcrtomb@plt+0x55a0>  // b.hs, b.nlast
  4081e8:	mov	x3, x28
  4081ec:	mov	x2, x20
  4081f0:	mov	x1, #0x1                   	// #1
  4081f4:	add	x0, sp, #0xa0
  4081f8:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  4081fc:	add	x25, x25, x20
  408200:	add	x21, x21, #0x1
  408204:	ldr	x0, [sp, #96]
  408208:	cmp	x21, x0
  40820c:	b.eq	408114 <wcrtomb@plt+0x53d4>  // b.none
  408210:	ldrb	w27, [x21]
  408214:	tst	w27, #0xffffff80
  408218:	b.ne	408180 <wcrtomb@plt+0x5440>  // b.any
  40821c:	bl	402ab0 <__ctype_b_loc@plt>
  408220:	and	x1, x27, #0xff
  408224:	ldr	x0, [x0]
  408228:	ldrh	w0, [x0, x1, lsl #1]
  40822c:	tbz	w0, #14, 408180 <wcrtomb@plt+0x5440>
  408230:	strb	w27, [sp, #160]
  408234:	add	x20, sp, #0xa1
  408238:	cmp	w27, #0x5c
  40823c:	b.ne	4081cc <wcrtomb@plt+0x548c>  // b.any
  408240:	mov	w0, #0x5c                  	// #92
  408244:	strb	w0, [sp, #161]
  408248:	ldr	x20, [sp, #136]
  40824c:	b	4081cc <wcrtomb@plt+0x548c>
  408250:	cmp	w4, #0xc
  408254:	b.eq	408298 <wcrtomb@plt+0x5558>  // b.none
  408258:	cmp	w4, #0xd
  40825c:	b.ne	408270 <wcrtomb@plt+0x5530>  // b.any
  408260:	mov	w0, #0x72                  	// #114
  408264:	strb	w0, [sp, #161]
  408268:	ldr	x20, [sp, #136]
  40826c:	b	4081cc <wcrtomb@plt+0x548c>
  408270:	cmp	w4, #0xb
  408274:	b.ne	4082b8 <wcrtomb@plt+0x5578>  // b.any
  408278:	mov	w0, #0x76                  	// #118
  40827c:	strb	w0, [sp, #161]
  408280:	ldr	x20, [sp, #136]
  408284:	b	4081cc <wcrtomb@plt+0x548c>
  408288:	mov	w0, #0x62                  	// #98
  40828c:	strb	w0, [sp, #161]
  408290:	ldr	x20, [sp, #136]
  408294:	b	4081cc <wcrtomb@plt+0x548c>
  408298:	mov	w0, #0x66                  	// #102
  40829c:	strb	w0, [sp, #161]
  4082a0:	ldr	x20, [sp, #136]
  4082a4:	b	4081cc <wcrtomb@plt+0x548c>
  4082a8:	mov	w0, #0x6e                  	// #110
  4082ac:	strb	w0, [sp, #161]
  4082b0:	ldr	x20, [sp, #136]
  4082b4:	b	4081cc <wcrtomb@plt+0x548c>
  4082b8:	add	x20, sp, #0xa1
  4082bc:	ldr	x3, [sp, #112]
  4082c0:	mov	x2, #0xb3                  	// #179
  4082c4:	mov	w1, #0x1                   	// #1
  4082c8:	mov	x0, x20
  4082cc:	bl	4026a0 <__sprintf_chk@plt>
  4082d0:	mov	x0, x20
  4082d4:	bl	402690 <strlen@plt>
  4082d8:	add	x20, x20, x0
  4082dc:	b	4081cc <wcrtomb@plt+0x548c>
  4082e0:	mov	x3, x28
  4082e4:	mov	x2, #0x1                   	// #1
  4082e8:	mov	x1, x2
  4082ec:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  4082f0:	add	x0, x0, #0xa80
  4082f4:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  4082f8:	mov	x3, x28
  4082fc:	mov	x2, #0x1                   	// #1
  408300:	mov	x1, x2
  408304:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408308:	add	x0, x0, #0x460
  40830c:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  408310:	mov	x25, #0x0                   	// #0
  408314:	b	4081e8 <wcrtomb@plt+0x54a8>
  408318:	mov	x0, x28
  40831c:	bl	40aa64 <wcrtomb@plt+0x7d24>
  408320:	ldp	x25, x26, [sp, #64]
  408324:	ldp	x27, x28, [sp, #80]
  408328:	b	407c78 <wcrtomb@plt+0x4f38>
  40832c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408330:	ldrb	w0, [x0, #1864]
  408334:	cbz	w0, 40837c <wcrtomb@plt+0x563c>
  408338:	mov	x0, x23
  40833c:	bl	4076d8 <wcrtomb@plt+0x4998>
  408340:	and	w0, w0, #0xff
  408344:	cbnz	w0, 40839c <wcrtomb@plt+0x565c>
  408348:	mov	w2, #0x0                   	// #0
  40834c:	ldr	x1, [sp, #104]
  408350:	mov	x0, x23
  408354:	bl	4078b8 <wcrtomb@plt+0x4b78>
  408358:	and	w0, w0, #0xff
  40835c:	cbz	w0, 40839c <wcrtomb@plt+0x565c>
  408360:	ldrb	w0, [x24]
  408364:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408368:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40836c:	add	x0, x0, #0x618
  408370:	add	x0, x0, #0x40
  408374:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408378:	b	407c78 <wcrtomb@plt+0x4f38>
  40837c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408380:	add	x0, x0, #0x618
  408384:	add	x3, x0, #0xb0
  408388:	ldrb	w2, [x0, #96]
  40838c:	ldr	x1, [x0, #80]
  408390:	ldr	x0, [x0, #72]
  408394:	bl	4073a8 <wcrtomb@plt+0x4668>
  408398:	b	408338 <wcrtomb@plt+0x55f8>
  40839c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4083a0:	ldrb	w1, [x0, #1901]
  4083a4:	mov	w0, #0xffffffff            	// #-1
  4083a8:	cbnz	w1, 4083b4 <wcrtomb@plt+0x5674>
  4083ac:	ldp	x23, x24, [sp, #48]
  4083b0:	b	408534 <wcrtomb@plt+0x57f4>
  4083b4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  4083b8:	add	x0, x0, #0xa48
  4083bc:	bl	402a40 <puts@plt>
  4083c0:	mov	w0, #0xffffffff            	// #-1
  4083c4:	ldp	x23, x24, [sp, #48]
  4083c8:	b	408534 <wcrtomb@plt+0x57f4>
  4083cc:	mov	x2, #0x1                   	// #1
  4083d0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4083d4:	add	x1, x1, #0x460
  4083d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4083dc:	add	x0, x0, #0x618
  4083e0:	add	x0, x0, #0x40
  4083e4:	bl	406b08 <wcrtomb@plt+0x3dc8>
  4083e8:	mov	x0, x23
  4083ec:	bl	4076d8 <wcrtomb@plt+0x4998>
  4083f0:	and	w0, w0, #0xff
  4083f4:	cbnz	w0, 40842c <wcrtomb@plt+0x56ec>
  4083f8:	mov	w2, #0x1                   	// #1
  4083fc:	ldr	x1, [sp, #104]
  408400:	mov	x0, x23
  408404:	bl	4078b8 <wcrtomb@plt+0x4b78>
  408408:	and	w0, w0, #0xff
  40840c:	cbz	w0, 40842c <wcrtomb@plt+0x56ec>
  408410:	ldrb	w0, [x24]
  408414:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408418:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40841c:	add	x0, x0, #0x618
  408420:	add	x0, x0, #0x40
  408424:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408428:	b	407c78 <wcrtomb@plt+0x4f38>
  40842c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408430:	ldrb	w0, [x0, #1901]
  408434:	cbnz	w0, 408474 <wcrtomb@plt+0x5734>
  408438:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40843c:	add	x0, x0, #0x618
  408440:	ldr	x1, [x0, #80]
  408444:	sub	x1, x1, #0x1
  408448:	str	x1, [x0, #80]
  40844c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408450:	ldr	w2, [x0, #2264]
  408454:	mov	w0, #0xffffffff            	// #-1
  408458:	cbnz	w2, 409058 <wcrtomb@plt+0x6318>
  40845c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408460:	ldrb	w2, [x0, #1864]
  408464:	mov	w0, #0xffffffff            	// #-1
  408468:	cbz	w2, 408484 <wcrtomb@plt+0x5744>
  40846c:	ldp	x23, x24, [sp, #48]
  408470:	b	408534 <wcrtomb@plt+0x57f4>
  408474:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  408478:	add	x0, x0, #0xa48
  40847c:	bl	402a40 <puts@plt>
  408480:	b	408438 <wcrtomb@plt+0x56f8>
  408484:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408488:	add	x0, x0, #0x618
  40848c:	add	x3, x0, #0xb0
  408490:	ldrb	w2, [x0, #96]
  408494:	ldr	x0, [x0, #72]
  408498:	bl	4073a8 <wcrtomb@plt+0x4668>
  40849c:	mov	w0, #0xffffffff            	// #-1
  4084a0:	ldp	x23, x24, [sp, #48]
  4084a4:	b	408534 <wcrtomb@plt+0x57f4>
  4084a8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4084ac:	add	x0, x0, #0x618
  4084b0:	add	x3, x0, #0xb0
  4084b4:	ldrb	w2, [x0, #96]
  4084b8:	ldr	x1, [x0, #80]
  4084bc:	ldr	x0, [x0, #72]
  4084c0:	bl	4073a8 <wcrtomb@plt+0x4668>
  4084c4:	b	407c78 <wcrtomb@plt+0x4f38>
  4084c8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4084cc:	add	x0, x0, #0x618
  4084d0:	ldr	x20, [x0, #72]
  4084d4:	ldr	x21, [x0, #80]
  4084d8:	mov	x2, x21
  4084dc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4084e0:	ldrb	w1, [x0, #1120]
  4084e4:	mov	x0, x20
  4084e8:	bl	402bb0 <memchr@plt>
  4084ec:	cbz	x0, 409038 <wcrtomb@plt+0x62f8>
  4084f0:	sub	x21, x0, x20
  4084f4:	mov	w2, #0x1                   	// #1
  4084f8:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4084fc:	add	x3, x3, #0x618
  408500:	add	x3, x3, #0xb0
  408504:	mov	x1, x21
  408508:	mov	x0, x20
  40850c:	bl	4073a8 <wcrtomb@plt+0x4668>
  408510:	b	407c78 <wcrtomb@plt+0x4f38>
  408514:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408518:	ldrb	w0, [x0, #1864]
  40851c:	cbz	w0, 40854c <wcrtomb@plt+0x580c>
  408520:	bl	407220 <wcrtomb@plt+0x44e0>
  408524:	ldr	w0, [x19, #24]
  408528:	cmn	w0, #0x1
  40852c:	csel	w0, w0, wzr, ne  // ne = any
  408530:	ldp	x23, x24, [sp, #48]
  408534:	ldp	x19, x20, [sp, #16]
  408538:	ldp	x21, x22, [sp, #32]
  40853c:	ldp	x29, x30, [sp]
  408540:	mov	x12, #0x10a0                	// #4256
  408544:	add	sp, sp, x12
  408548:	ret
  40854c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408550:	add	x0, x0, #0x618
  408554:	add	x3, x0, #0xb0
  408558:	ldrb	w2, [x0, #96]
  40855c:	ldr	x1, [x0, #80]
  408560:	ldr	x0, [x0, #72]
  408564:	bl	4073a8 <wcrtomb@plt+0x4668>
  408568:	b	408520 <wcrtomb@plt+0x57e0>
  40856c:	ldr	x0, [x19, #24]
  408570:	cbz	x0, 407c78 <wcrtomb@plt+0x4f38>
  408574:	bl	406c84 <wcrtomb@plt+0x3f44>
  408578:	ldr	x1, [x19, #24]
  40857c:	str	x1, [x0]
  408580:	b	407c78 <wcrtomb@plt+0x4f38>
  408584:	ldr	x0, [x19, #24]
  408588:	ldr	x3, [x0, #16]
  40858c:	cbz	x3, 407c78 <wcrtomb@plt+0x4f38>
  408590:	ldr	w0, [x3]
  408594:	tbnz	w0, #4, 407c78 <wcrtomb@plt+0x4f38>
  408598:	str	xzr, [sp, #160]
  40859c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4085a0:	ldrb	w2, [x0, #1120]
  4085a4:	add	x1, sp, #0x98
  4085a8:	add	x0, sp, #0xa0
  4085ac:	bl	40a9ec <wcrtomb@plt+0x7cac>
  4085b0:	mov	x20, x0
  4085b4:	cmn	w0, #0x1
  4085b8:	b.eq	4085dc <wcrtomb@plt+0x589c>  // b.none
  4085bc:	bl	406c84 <wcrtomb@plt+0x3f44>
  4085c0:	mov	w1, #0x1                   	// #1
  4085c4:	strb	w1, [x0, #32]
  4085c8:	ldr	x1, [sp, #160]
  4085cc:	str	x1, [x0, #8]
  4085d0:	sxtw	x20, w20
  4085d4:	str	x20, [x0, #16]
  4085d8:	b	407c78 <wcrtomb@plt+0x4f38>
  4085dc:	ldr	x0, [sp, #160]
  4085e0:	bl	402ae0 <free@plt>
  4085e4:	b	407c78 <wcrtomb@plt+0x4f38>
  4085e8:	stp	x27, x28, [sp, #80]
  4085ec:	ldr	x28, [x19, #24]
  4085f0:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4085f4:	add	x20, x20, #0x618
  4085f8:	add	x21, x20, #0x40
  4085fc:	mov	x1, x21
  408600:	add	x0, x20, #0xd8
  408604:	bl	4068a8 <wcrtomb@plt+0x3b68>
  408608:	ldrb	w5, [x28, #32]
  40860c:	ubfx	x5, x5, #4, #4
  408610:	add	w5, w5, #0x1
  408614:	add	x4, x20, #0x108
  408618:	mov	x3, #0x0                   	// #0
  40861c:	ldr	x2, [x20, #80]
  408620:	ldr	x1, [x20, #72]
  408624:	ldr	x0, [x28]
  408628:	bl	4095ec <wcrtomb@plt+0x68ac>
  40862c:	cbz	w0, 408960 <wcrtomb@plt+0x5c20>
  408630:	stp	x25, x26, [sp, #64]
  408634:	ldrb	w0, [x24]
  408638:	cbz	w0, 40870c <wcrtomb@plt+0x59cc>
  40863c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408640:	ldr	x0, [x0, #1824]
  408644:	cbz	x0, 40870c <wcrtomb@plt+0x59cc>
  408648:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40864c:	ldr	x0, [x0, #1832]
  408650:	ldr	x0, [x0]
  408654:	cmn	x0, #0x1
  408658:	b.eq	408674 <wcrtomb@plt+0x5934>  // b.none
  40865c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  408660:	add	x0, x0, #0xa90
  408664:	bl	402a40 <puts@plt>
  408668:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40866c:	ldr	x0, [x0, #1824]
  408670:	cbz	x0, 40870c <wcrtomb@plt+0x59cc>
  408674:	mov	x20, #0x0                   	// #0
  408678:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40867c:	add	x21, x21, #0x618
  408680:	adrp	x26, 420000 <_obstack_memory_used@@Base+0xccd0>
  408684:	add	x26, x26, #0xaa8
  408688:	adrp	x27, 420000 <_obstack_memory_used@@Base+0xccd0>
  40868c:	add	x27, x27, #0x2d8
  408690:	b	4086ac <wcrtomb@plt+0x596c>
  408694:	mov	x0, x27
  408698:	bl	402a40 <puts@plt>
  40869c:	add	x20, x20, #0x1
  4086a0:	ldr	x0, [x21, #264]
  4086a4:	cmp	x0, x20
  4086a8:	b.ls	40870c <wcrtomb@plt+0x59cc>  // b.plast
  4086ac:	ldr	x0, [x21, #272]
  4086b0:	ldr	x3, [x0, x20, lsl #3]
  4086b4:	cmn	x3, #0x1
  4086b8:	b.eq	40870c <wcrtomb@plt+0x59cc>  // b.none
  4086bc:	ldr	x0, [x21, #280]
  4086c0:	ldr	x4, [x0, x20, lsl #3]
  4086c4:	mov	w2, w20
  4086c8:	mov	x1, x26
  4086cc:	mov	w0, #0x1                   	// #1
  4086d0:	bl	4028b0 <__printf_chk@plt>
  4086d4:	ldr	x0, [x21, #272]
  4086d8:	ldr	x0, [x0, x20, lsl #3]
  4086dc:	ldr	x1, [x21, #280]
  4086e0:	ldr	x1, [x1, x20, lsl #3]
  4086e4:	cmp	x0, x1
  4086e8:	b.eq	408694 <wcrtomb@plt+0x5954>  // b.none
  4086ec:	ldr	x4, [x21, #72]
  4086f0:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4086f4:	ldr	x3, [x2, #1288]
  4086f8:	mov	x2, #0x1                   	// #1
  4086fc:	sub	x1, x1, x0
  408700:	add	x0, x4, x0
  408704:	bl	402680 <fwrite_unlocked@plt>
  408708:	b	408694 <wcrtomb@plt+0x5954>
  40870c:	ldr	x0, [x28, #8]
  408710:	cbz	x0, 408738 <wcrtomb@plt+0x59f8>
  408714:	str	xzr, [sp, #128]
  408718:	mov	x21, #0x0                   	// #0
  40871c:	mov	x20, #0x0                   	// #0
  408720:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408724:	add	x25, x25, #0x618
  408728:	add	x0, x25, #0xd8
  40872c:	str	x0, [sp, #120]
  408730:	str	wzr, [sp, #112]
  408734:	b	4089d8 <wcrtomb@plt+0x5c98>
  408738:	ldr	x0, [x28, #16]
  40873c:	cmp	x0, #0x1
  408740:	b.ls	408754 <wcrtomb@plt+0x5a14>  // b.plast
  408744:	str	xzr, [sp, #128]
  408748:	mov	x21, #0x0                   	// #0
  40874c:	mov	x20, #0x0                   	// #0
  408750:	b	408720 <wcrtomb@plt+0x59e0>
  408754:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408758:	ldr	x0, [x0, #1832]
  40875c:	ldr	x1, [x0]
  408760:	cbnz	x1, 40876c <wcrtomb@plt+0x5a2c>
  408764:	ldrb	w0, [x28, #32]
  408768:	tbz	w0, #0, 408798 <wcrtomb@plt+0x5a58>
  40876c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408770:	add	x0, x0, #0x618
  408774:	ldr	x2, [x0, #280]
  408778:	ldr	x2, [x2]
  40877c:	ldr	x0, [x0, #80]
  408780:	cmp	x2, x0
  408784:	b.eq	4087e0 <wcrtomb@plt+0x5aa0>  // b.none
  408788:	str	xzr, [sp, #128]
  40878c:	mov	x21, #0x0                   	// #0
  408790:	mov	x20, #0x0                   	// #0
  408794:	b	408720 <wcrtomb@plt+0x59e0>
  408798:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40879c:	add	x0, x0, #0x618
  4087a0:	mov	w1, #0x1                   	// #1
  4087a4:	strb	w1, [x0, #208]
  4087a8:	ldr	x2, [x0, #280]
  4087ac:	ldr	x1, [x0, #72]
  4087b0:	ldr	x3, [x2]
  4087b4:	add	x1, x1, x3
  4087b8:	str	x1, [x0, #72]
  4087bc:	ldr	x1, [x0, #80]
  4087c0:	ldr	x3, [x2]
  4087c4:	sub	x1, x1, x3
  4087c8:	str	x1, [x0, #80]
  4087cc:	ldr	x1, [x0, #88]
  4087d0:	ldr	x2, [x2]
  4087d4:	sub	x1, x1, x2
  4087d8:	str	x1, [x0, #88]
  4087dc:	b	408924 <wcrtomb@plt+0x5be4>
  4087e0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4087e4:	add	x0, x0, #0x618
  4087e8:	mov	w2, #0x1                   	// #1
  4087ec:	strb	w2, [x0, #208]
  4087f0:	str	x1, [x0, #80]
  4087f4:	b	408924 <wcrtomb@plt+0x5be4>
  4087f8:	ldr	x1, [x25, #72]
  4087fc:	sub	x2, x27, x20
  408800:	add	x1, x1, x20
  408804:	ldr	x0, [sp, #120]
  408808:	bl	406b08 <wcrtomb@plt+0x3dc8>
  40880c:	mov	x20, x27
  408810:	b	4089f8 <wcrtomb@plt+0x5cb8>
  408814:	mov	w0, #0x1                   	// #1
  408818:	strb	w0, [x25, #208]
  40881c:	ldr	x20, [x28, #8]
  408820:	cbz	x20, 4088cc <wcrtomb@plt+0x5b8c>
  408824:	mov	w0, #0x0                   	// #0
  408828:	b	40885c <wcrtomb@plt+0x5b1c>
  40882c:	mov	w3, w21
  408830:	ldr	x1, [x20]
  408834:	ldr	x0, [sp, #120]
  408838:	bl	406f50 <wcrtomb@plt+0x4210>
  40883c:	and	w21, w21, #0xfffffff3
  408840:	b	408878 <wcrtomb@plt+0x5b38>
  408844:	ldr	w0, [x20, #20]
  408848:	and	w21, w21, #0xc
  40884c:	ands	w0, w0, #0xc
  408850:	csel	w0, w21, w0, ne  // ne = any
  408854:	ldr	x20, [x20, #24]
  408858:	cbz	x20, 4088cc <wcrtomb@plt+0x5b8c>
  40885c:	ldr	w26, [x20, #16]
  408860:	ldr	w21, [x20, #20]
  408864:	orr	w0, w21, w0
  408868:	tst	w21, #0xc
  40886c:	csel	w21, w0, w21, eq  // eq = none
  408870:	ldr	x2, [x20, #8]
  408874:	cbnz	x2, 40882c <wcrtomb@plt+0x5aec>
  408878:	ldr	w2, [sp, #112]
  40887c:	mov	w0, w2
  408880:	tbnz	w26, #31, 408854 <wcrtomb@plt+0x5b14>
  408884:	sxtw	x3, w26
  408888:	ldr	x1, [x25, #264]
  40888c:	cmp	x1, w26, sxtw
  408890:	b.ls	408854 <wcrtomb@plt+0x5b14>  // b.plast
  408894:	ldr	x1, [x25, #280]
  408898:	ldr	x2, [x1, x3, lsl #3]
  40889c:	ldr	x0, [x25, #272]
  4088a0:	ldr	x0, [x0, x3, lsl #3]
  4088a4:	cmp	x2, x0
  4088a8:	b.eq	408844 <wcrtomb@plt+0x5b04>  // b.none
  4088ac:	ldr	x1, [x25, #72]
  4088b0:	mov	w3, w21
  4088b4:	sub	x2, x2, x0
  4088b8:	add	x1, x1, x0
  4088bc:	ldr	x0, [sp, #120]
  4088c0:	bl	406f50 <wcrtomb@plt+0x4210>
  4088c4:	ldr	w0, [sp, #112]
  4088c8:	b	408854 <wcrtomb@plt+0x5b14>
  4088cc:	ldr	x0, [sp, #96]
  4088d0:	add	x20, x27, x0
  4088d4:	ldr	x0, [x25, #280]
  4088d8:	ldr	x21, [x0]
  4088dc:	ldrb	w0, [x28, #32]
  4088e0:	tbnz	w0, #0, 4089a8 <wcrtomb@plt+0x5c68>
  4088e4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4088e8:	ldr	x2, [x0, #1640]
  4088ec:	cmp	x20, x2
  4088f0:	b.cc	408a34 <wcrtomb@plt+0x5cf4>  // b.lo, b.ul, b.last
  4088f4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4088f8:	add	x0, x0, #0x618
  4088fc:	add	x1, x0, #0xd8
  408900:	add	x0, x0, #0x40
  408904:	ldrb	w2, [x0, #32]
  408908:	strb	w2, [x1, #32]
  40890c:	mov	w2, #0x0                   	// #0
  408910:	bl	407a08 <wcrtomb@plt+0x4cc8>
  408914:	ldr	x0, [x28, #16]
  408918:	ldr	x1, [sp, #128]
  40891c:	cmp	x1, x0
  408920:	b.cc	408b9c <wcrtomb@plt+0x5e5c>  // b.lo, b.ul, b.last
  408924:	ldrb	w0, [x28, #32]
  408928:	tbnz	w0, #1, 408a54 <wcrtomb@plt+0x5d14>
  40892c:	ldrb	w0, [x28, #32]
  408930:	tbnz	w0, #3, 408a74 <wcrtomb@plt+0x5d34>
  408934:	ldrb	w0, [x28, #32]
  408938:	tbnz	w0, #2, 408b7c <wcrtomb@plt+0x5e3c>
  40893c:	ldr	x3, [x28, #24]
  408940:	cbz	x3, 408ba4 <wcrtomb@plt+0x5e64>
  408944:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408948:	add	x0, x0, #0x618
  40894c:	ldrb	w2, [x0, #96]
  408950:	ldr	x1, [x0, #80]
  408954:	ldr	x0, [x0, #72]
  408958:	bl	4073a8 <wcrtomb@plt+0x4668>
  40895c:	ldp	x25, x26, [sp, #64]
  408960:	ldrb	w0, [x24]
  408964:	cbnz	w0, 408bac <wcrtomb@plt+0x5e6c>
  408968:	ldp	x27, x28, [sp, #80]
  40896c:	b	407c78 <wcrtomb@plt+0x4f38>
  408970:	ldr	x0, [x25, #80]
  408974:	cmp	x0, x20
  408978:	b.ls	4088f4 <wcrtomb@plt+0x5bb4>  // b.plast
  40897c:	mov	x0, #0x1                   	// #1
  408980:	str	x0, [sp, #96]
  408984:	ldr	x1, [x25, #72]
  408988:	ldr	x20, [sp, #96]
  40898c:	mov	x2, x20
  408990:	add	x1, x1, x27
  408994:	ldr	x0, [sp, #120]
  408998:	bl	406b08 <wcrtomb@plt+0x3dc8>
  40899c:	add	x20, x27, x20
  4089a0:	ldr	x0, [x25, #280]
  4089a4:	ldr	x21, [x0]
  4089a8:	ldr	x2, [x25, #80]
  4089ac:	cmp	x20, x2
  4089b0:	b.hi	4088e4 <wcrtomb@plt+0x5ba4>  // b.pmore
  4089b4:	ldrb	w5, [x28, #32]
  4089b8:	ubfx	x5, x5, #4, #4
  4089bc:	add	w5, w5, #0x1
  4089c0:	add	x4, x25, #0x108
  4089c4:	mov	x3, x20
  4089c8:	ldr	x1, [x25, #72]
  4089cc:	ldr	x0, [x28]
  4089d0:	bl	4095ec <wcrtomb@plt+0x68ac>
  4089d4:	cbz	w0, 4088e4 <wcrtomb@plt+0x5ba4>
  4089d8:	ldr	x1, [x25, #272]
  4089dc:	ldr	x27, [x1]
  4089e0:	ldr	x0, [x25, #280]
  4089e4:	ldr	x0, [x0]
  4089e8:	sub	x0, x0, x27
  4089ec:	str	x0, [sp, #96]
  4089f0:	cmp	x27, x20
  4089f4:	b.hi	4087f8 <wcrtomb@plt+0x5ab8>  // b.pmore
  4089f8:	ldr	x0, [sp, #128]
  4089fc:	cmp	x0, #0x0
  408a00:	ccmp	x27, x21, #0x2, ne  // ne = any
  408a04:	ldr	x1, [sp, #96]
  408a08:	ccmp	x1, #0x0, #0x0, ls  // ls = plast
  408a0c:	b.eq	408970 <wcrtomb@plt+0x5c30>  // b.none
  408a10:	add	x0, x0, #0x1
  408a14:	mov	x1, x0
  408a18:	str	x0, [sp, #128]
  408a1c:	ldr	x0, [x28, #16]
  408a20:	cmp	x1, x0
  408a24:	b.cs	408814 <wcrtomb@plt+0x5ad4>  // b.hs, b.nlast
  408a28:	ldr	x0, [sp, #96]
  408a2c:	cbz	x0, 408970 <wcrtomb@plt+0x5c30>
  408a30:	b	408984 <wcrtomb@plt+0x5c44>
  408a34:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408a38:	add	x0, x0, #0x618
  408a3c:	ldr	x1, [x0, #72]
  408a40:	sub	x2, x2, x20
  408a44:	add	x1, x1, x20
  408a48:	add	x0, x0, #0xd8
  408a4c:	bl	406b08 <wcrtomb@plt+0x3dc8>
  408a50:	b	4088f4 <wcrtomb@plt+0x5bb4>
  408a54:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408a58:	add	x0, x0, #0x618
  408a5c:	add	x3, x0, #0xb0
  408a60:	ldrb	w2, [x0, #96]
  408a64:	ldr	x1, [x0, #80]
  408a68:	ldr	x0, [x0, #72]
  408a6c:	bl	4073a8 <wcrtomb@plt+0x4668>
  408a70:	b	40892c <wcrtomb@plt+0x5bec>
  408a74:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408a78:	add	x20, x20, #0x618
  408a7c:	mov	x1, #0x0                   	// #0
  408a80:	add	x0, x20, #0xd8
  408a84:	bl	4068a8 <wcrtomb@plt+0x3b68>
  408a88:	add	x20, x20, #0x40
  408a8c:	mov	x2, #0x1                   	// #1
  408a90:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  408a94:	add	x1, x1, #0xdb8
  408a98:	mov	x0, x20
  408a9c:	bl	406b08 <wcrtomb@plt+0x3dc8>
  408aa0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  408aa4:	add	x1, x1, #0xa58
  408aa8:	ldr	x0, [x20, #8]
  408aac:	bl	402850 <popen@plt>
  408ab0:	mov	x20, x0
  408ab4:	cbz	x0, 408b64 <wcrtomb@plt+0x5e24>
  408ab8:	ldr	w0, [x0]
  408abc:	tbnz	w0, #4, 408b0c <wcrtomb@plt+0x5dcc>
  408ac0:	mov	x21, #0x1000                	// #4096
  408ac4:	adrp	x25, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408ac8:	add	x25, x25, #0x618
  408acc:	add	x25, x25, #0xd8
  408ad0:	b	408adc <wcrtomb@plt+0x5d9c>
  408ad4:	ldr	w0, [x20]
  408ad8:	tbnz	w0, #4, 408b0c <wcrtomb@plt+0x5dcc>
  408adc:	mov	x3, x20
  408ae0:	mov	x2, x21
  408ae4:	mov	x1, #0x1                   	// #1
  408ae8:	add	x0, sp, #0xa0
  408aec:	bl	402a50 <fread_unlocked@plt>
  408af0:	cmp	w0, #0x0
  408af4:	b.le	408ad4 <wcrtomb@plt+0x5d94>
  408af8:	sxtw	x2, w0
  408afc:	add	x1, sp, #0xa0
  408b00:	mov	x0, x25
  408b04:	bl	406b08 <wcrtomb@plt+0x3dc8>
  408b08:	b	408ad4 <wcrtomb@plt+0x5d94>
  408b0c:	mov	x0, x20
  408b10:	bl	402c60 <pclose@plt>
  408b14:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408b18:	add	x1, x1, #0x618
  408b1c:	add	x20, x1, #0x40
  408b20:	mov	w2, #0x1                   	// #1
  408b24:	add	x1, x1, #0xd8
  408b28:	mov	x0, x20
  408b2c:	bl	407a08 <wcrtomb@plt+0x4cc8>
  408b30:	ldr	x0, [x20, #16]
  408b34:	cbz	x0, 408934 <wcrtomb@plt+0x5bf4>
  408b38:	sub	x0, x0, #0x1
  408b3c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408b40:	ldr	x1, [x1, #1632]
  408b44:	ldrb	w2, [x1, x0]
  408b48:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408b4c:	ldrb	w1, [x1, #1120]
  408b50:	cmp	w2, w1
  408b54:	b.ne	408934 <wcrtomb@plt+0x5bf4>  // b.any
  408b58:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408b5c:	str	x0, [x1, #1640]
  408b60:	b	408934 <wcrtomb@plt+0x5bf4>
  408b64:	mov	w2, #0x5                   	// #5
  408b68:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  408b6c:	add	x1, x1, #0xa60
  408b70:	mov	x0, #0x0                   	// #0
  408b74:	bl	402c20 <dcgettext@plt>
  408b78:	bl	40a510 <wcrtomb@plt+0x77d0>
  408b7c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408b80:	add	x0, x0, #0x618
  408b84:	add	x3, x0, #0xb0
  408b88:	ldrb	w2, [x0, #96]
  408b8c:	ldr	x1, [x0, #80]
  408b90:	ldr	x0, [x0, #72]
  408b94:	bl	4073a8 <wcrtomb@plt+0x4668>
  408b98:	b	40893c <wcrtomb@plt+0x5bfc>
  408b9c:	ldp	x25, x26, [sp, #64]
  408ba0:	b	408960 <wcrtomb@plt+0x5c20>
  408ba4:	ldp	x25, x26, [sp, #64]
  408ba8:	b	408960 <wcrtomb@plt+0x5c20>
  408bac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408bb0:	add	x0, x0, #0x618
  408bb4:	add	x0, x0, #0x40
  408bb8:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408bbc:	ldp	x27, x28, [sp, #80]
  408bc0:	b	407c78 <wcrtomb@plt+0x4f38>
  408bc4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408bc8:	ldrb	w0, [x0, #1768]
  408bcc:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408bd0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408bd4:	strb	wzr, [x0, #1768]
  408bd8:	ldr	x0, [x19, #24]
  408bdc:	add	x0, x0, x0, lsl #2
  408be0:	ldr	x1, [sp, #104]
  408be4:	ldr	x19, [x1]
  408be8:	add	x19, x19, x0, lsl #3
  408bec:	b	407c7c <wcrtomb@plt+0x4f3c>
  408bf0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408bf4:	ldrb	w0, [x0, #1768]
  408bf8:	cbz	w0, 408c08 <wcrtomb@plt+0x5ec8>
  408bfc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408c00:	strb	wzr, [x0, #1768]
  408c04:	b	407c78 <wcrtomb@plt+0x4f38>
  408c08:	ldr	x0, [x19, #24]
  408c0c:	add	x0, x0, x0, lsl #2
  408c10:	ldr	x1, [sp, #104]
  408c14:	ldr	x19, [x1]
  408c18:	add	x19, x19, x0, lsl #3
  408c1c:	b	407c7c <wcrtomb@plt+0x4f3c>
  408c20:	ldr	x3, [x19, #24]
  408c24:	ldr	x0, [x3, #16]
  408c28:	cbz	x0, 407c78 <wcrtomb@plt+0x4f38>
  408c2c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408c30:	add	x0, x0, #0x618
  408c34:	ldrb	w2, [x0, #96]
  408c38:	ldr	x1, [x0, #80]
  408c3c:	ldr	x0, [x0, #72]
  408c40:	bl	4073a8 <wcrtomb@plt+0x4668>
  408c44:	b	407c78 <wcrtomb@plt+0x4f38>
  408c48:	ldr	x20, [x19, #24]
  408c4c:	ldr	x0, [x20, #16]
  408c50:	cbz	x0, 407c78 <wcrtomb@plt+0x4f38>
  408c54:	stp	x25, x26, [sp, #64]
  408c58:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408c5c:	add	x0, x0, #0x618
  408c60:	ldr	x21, [x0, #72]
  408c64:	ldr	x25, [x0, #80]
  408c68:	mov	x2, x25
  408c6c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408c70:	ldrb	w1, [x0, #1120]
  408c74:	mov	x0, x21
  408c78:	bl	402bb0 <memchr@plt>
  408c7c:	cbz	x0, 409044 <wcrtomb@plt+0x6304>
  408c80:	sub	x25, x0, x21
  408c84:	mov	w2, #0x1                   	// #1
  408c88:	mov	x3, x20
  408c8c:	mov	x1, x25
  408c90:	mov	x0, x21
  408c94:	bl	4073a8 <wcrtomb@plt+0x4668>
  408c98:	ldp	x25, x26, [sp, #64]
  408c9c:	b	407c78 <wcrtomb@plt+0x4f38>
  408ca0:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408ca4:	add	x1, x1, #0x618
  408ca8:	mov	w2, #0x0                   	// #0
  408cac:	add	x0, x1, #0x40
  408cb0:	bl	407a08 <wcrtomb@plt+0x4cc8>
  408cb4:	ldrb	w0, [x24]
  408cb8:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408cbc:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408cc0:	add	x20, x20, #0x618
  408cc4:	add	x0, x20, #0x40
  408cc8:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408ccc:	mov	x0, x20
  408cd0:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408cd4:	b	407c78 <wcrtomb@plt+0x4f38>
  408cd8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408cdc:	ldr	w0, [x0, #2260]
  408ce0:	cmp	w0, #0x1
  408ce4:	b.le	408e78 <wcrtomb@plt+0x6138>
  408ce8:	stp	x25, x26, [sp, #64]
  408cec:	ldr	x26, [x19, #24]
  408cf0:	str	xzr, [sp, #160]
  408cf4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408cf8:	ldr	x2, [x0, #1640]
  408cfc:	cbz	x2, 408eb0 <wcrtomb@plt+0x6170>
  408d00:	stp	x27, x28, [sp, #80]
  408d04:	mov	x27, #0x0                   	// #0
  408d08:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408d0c:	add	x0, x0, #0x8d4
  408d10:	str	x0, [sp, #96]
  408d14:	adrp	x28, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408d18:	add	x28, x28, #0x618
  408d1c:	b	408df4 <wcrtomb@plt+0x60b4>
  408d20:	ldr	x1, [x28, #72]
  408d24:	add	x3, sp, #0xa0
  408d28:	sub	x2, x2, x27
  408d2c:	add	x1, x1, x27
  408d30:	mov	x0, #0x0                   	// #0
  408d34:	bl	412f3c <wcrtomb@plt+0x101fc>
  408d38:	mov	x21, x0
  408d3c:	sub	x0, x0, #0x1
  408d40:	cmn	x0, #0x3
  408d44:	csinc	x21, x21, xzr, cc  // cc = lo, ul, last
  408d48:	b	408e08 <wcrtomb@plt+0x60c8>
  408d4c:	add	w0, w20, #0x1
  408d50:	str	x0, [sp, #112]
  408d54:	ldr	x0, [x26, x0, lsl #3]
  408d58:	ldrb	w1, [x0]
  408d5c:	mov	x25, #0x1                   	// #1
  408d60:	cbz	w1, 408d6c <wcrtomb@plt+0x602c>
  408d64:	bl	402690 <strlen@plt>
  408d68:	mov	x25, x0
  408d6c:	cmp	x21, x25
  408d70:	b.cs	408e48 <wcrtomb@plt+0x6108>  // b.hs, b.nlast
  408d74:	ldr	x1, [x28, #80]
  408d78:	add	x1, x1, #0x1
  408d7c:	sub	x2, x25, x21
  408d80:	add	x1, x1, x2
  408d84:	ldr	x0, [x28, #88]
  408d88:	cmp	x1, x0
  408d8c:	b.hi	408e3c <wcrtomb@plt+0x60fc>  // b.pmore
  408d90:	ldr	x3, [x28, #72]
  408d94:	add	x1, x21, x27
  408d98:	ldr	x2, [x28, #80]
  408d9c:	add	x2, x2, #0x1
  408da0:	add	x0, x25, x27
  408da4:	sub	x2, x2, x1
  408da8:	add	x1, x3, x1
  408dac:	add	x0, x3, x0
  408db0:	bl	402660 <memmove@plt>
  408db4:	ldr	x1, [x28, #80]
  408db8:	sub	x0, x25, x21
  408dbc:	add	x1, x1, x0
  408dc0:	str	x1, [x28, #80]
  408dc4:	add	x20, x0, x27
  408dc8:	ldr	x0, [x28, #72]
  408dcc:	mov	x2, x25
  408dd0:	ldr	x1, [sp, #112]
  408dd4:	ldr	x1, [x26, x1, lsl #3]
  408dd8:	add	x0, x0, x27
  408ddc:	bl	402650 <memcpy@plt>
  408de0:	mov	x27, x20
  408de4:	add	x27, x27, x21
  408de8:	ldr	x2, [x28, #80]
  408dec:	cmp	x2, x27
  408df0:	b.ls	408e54 <wcrtomb@plt+0x6114>  // b.plast
  408df4:	ldr	x0, [sp, #96]
  408df8:	ldr	w0, [x0]
  408dfc:	mov	x21, #0x1                   	// #1
  408e00:	cmp	w0, #0x1
  408e04:	b.ne	408d20 <wcrtomb@plt+0x5fe0>  // b.any
  408e08:	ldr	x1, [x26]
  408e0c:	cbz	x1, 408de4 <wcrtomb@plt+0x60a4>
  408e10:	ldr	x25, [x28, #72]
  408e14:	add	x25, x25, x27
  408e18:	mov	w20, #0x0                   	// #0
  408e1c:	mov	x2, x21
  408e20:	mov	x0, x25
  408e24:	bl	402860 <strncmp@plt>
  408e28:	cbz	w0, 408d4c <wcrtomb@plt+0x600c>
  408e2c:	add	w20, w20, #0x2
  408e30:	ldr	x1, [x26, w20, uxtw #3]
  408e34:	cbnz	x1, 408e1c <wcrtomb@plt+0x60dc>
  408e38:	b	408de4 <wcrtomb@plt+0x60a4>
  408e3c:	add	x0, x28, #0x40
  408e40:	bl	406a4c <wcrtomb@plt+0x3d0c>
  408e44:	b	408d90 <wcrtomb@plt+0x6050>
  408e48:	mov	x20, x27
  408e4c:	b.ls	408dc8 <wcrtomb@plt+0x6088>  // b.plast
  408e50:	b	408d90 <wcrtomb@plt+0x6050>
  408e54:	ldp	x25, x26, [sp, #64]
  408e58:	ldp	x27, x28, [sp, #80]
  408e5c:	ldrb	w0, [x24]
  408e60:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408e64:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408e68:	add	x0, x0, #0x618
  408e6c:	add	x0, x0, #0x40
  408e70:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408e74:	b	407c78 <wcrtomb@plt+0x4f38>
  408e78:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408e7c:	add	x1, x1, #0x618
  408e80:	ldr	x0, [x1, #72]
  408e84:	ldr	x3, [x1, #80]
  408e88:	add	x3, x0, x3
  408e8c:	cmp	x0, x3
  408e90:	b.cs	408e5c <wcrtomb@plt+0x611c>  // b.hs, b.nlast
  408e94:	ldrb	w1, [x0]
  408e98:	ldr	x2, [x19, #24]
  408e9c:	ldrb	w1, [x2, x1]
  408ea0:	strb	w1, [x0], #1
  408ea4:	cmp	x3, x0
  408ea8:	b.ne	408e94 <wcrtomb@plt+0x6154>  // b.any
  408eac:	b	408e5c <wcrtomb@plt+0x611c>
  408eb0:	ldp	x25, x26, [sp, #64]
  408eb4:	b	408e5c <wcrtomb@plt+0x611c>
  408eb8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408ebc:	str	xzr, [x0, #1640]
  408ec0:	ldrb	w0, [x24]
  408ec4:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408ec8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408ecc:	add	x0, x0, #0x618
  408ed0:	add	x0, x0, #0x40
  408ed4:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  408ed8:	b	407c78 <wcrtomb@plt+0x4f38>
  408edc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408ee0:	ldrb	w0, [x0, #1744]
  408ee4:	cbnz	w0, 408f28 <wcrtomb@plt+0x61e8>
  408ee8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408eec:	ldrb	w4, [x0, #1120]
  408ef0:	ldr	x3, [x23, #16]
  408ef4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xccd0>
  408ef8:	add	x2, x2, #0xac0
  408efc:	mov	w1, #0x1                   	// #1
  408f00:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f04:	ldr	x0, [x0, #1752]
  408f08:	bl	402a90 <__fprintf_chk@plt>
  408f0c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f10:	ldrb	w0, [x0, #1902]
  408f14:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408f18:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f1c:	ldr	x0, [x0, #1752]
  408f20:	bl	40aa64 <wcrtomb@plt+0x7d24>
  408f24:	b	407c78 <wcrtomb@plt+0x4f38>
  408f28:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f2c:	add	x20, x20, #0x618
  408f30:	ldr	x3, [x20, #192]
  408f34:	mov	x2, #0x1                   	// #1
  408f38:	mov	x1, x2
  408f3c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f40:	add	x0, x0, #0x460
  408f44:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  408f48:	strb	wzr, [x20, #184]
  408f4c:	b	408ee8 <wcrtomb@plt+0x61a8>
  408f50:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f54:	ldrb	w0, [x0, #1744]
  408f58:	cbnz	w0, 408f9c <wcrtomb@plt+0x625c>
  408f5c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f60:	ldrb	w4, [x0, #1120]
  408f64:	ldr	x3, [x23, #48]
  408f68:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xccd0>
  408f6c:	add	x2, x2, #0xac8
  408f70:	mov	w1, #0x1                   	// #1
  408f74:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f78:	ldr	x0, [x0, #1752]
  408f7c:	bl	402a90 <__fprintf_chk@plt>
  408f80:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f84:	ldrb	w0, [x0, #1902]
  408f88:	cbz	w0, 407c78 <wcrtomb@plt+0x4f38>
  408f8c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408f90:	ldr	x0, [x0, #1752]
  408f94:	bl	40aa64 <wcrtomb@plt+0x7d24>
  408f98:	b	407c78 <wcrtomb@plt+0x4f38>
  408f9c:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408fa0:	add	x20, x20, #0x618
  408fa4:	ldr	x3, [x20, #192]
  408fa8:	mov	x2, #0x1                   	// #1
  408fac:	mov	x1, x2
  408fb0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408fb4:	add	x0, x0, #0x460
  408fb8:	bl	40a8a0 <wcrtomb@plt+0x7b60>
  408fbc:	strb	wzr, [x20, #184]
  408fc0:	b	408f5c <wcrtomb@plt+0x621c>
  408fc4:	stp	x25, x26, [sp, #64]
  408fc8:	stp	x27, x28, [sp, #80]
  408fcc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  408fd0:	add	x0, x0, #0xad0
  408fd4:	bl	40a510 <wcrtomb@plt+0x77d0>
  408fd8:	ldp	x23, x24, [sp, #48]
  408fdc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408fe0:	ldrb	w0, [x0, #1901]
  408fe4:	cbnz	w0, 40901c <wcrtomb@plt+0x62dc>
  408fe8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408fec:	ldrb	w1, [x0, #1864]
  408ff0:	mov	w0, #0xffffffff            	// #-1
  408ff4:	cbnz	w1, 408534 <wcrtomb@plt+0x57f4>
  408ff8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  408ffc:	add	x0, x0, #0x618
  409000:	add	x3, x0, #0xb0
  409004:	ldrb	w2, [x0, #96]
  409008:	ldr	x1, [x0, #80]
  40900c:	ldr	x0, [x0, #72]
  409010:	bl	4073a8 <wcrtomb@plt+0x4668>
  409014:	mov	w0, #0xffffffff            	// #-1
  409018:	b	408534 <wcrtomb@plt+0x57f4>
  40901c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  409020:	add	x0, x0, #0xa48
  409024:	bl	402a40 <puts@plt>
  409028:	b	408fe8 <wcrtomb@plt+0x62a8>
  40902c:	mov	w0, #0xffffffff            	// #-1
  409030:	ldp	x23, x24, [sp, #48]
  409034:	b	408534 <wcrtomb@plt+0x57f4>
  409038:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40903c:	ldrb	w2, [x0, #1656]
  409040:	b	4084f8 <wcrtomb@plt+0x57b8>
  409044:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409048:	ldrb	w2, [x0, #1656]
  40904c:	b	408c88 <wcrtomb@plt+0x5f48>
  409050:	ldr	x0, [x19, #8]
  409054:	b	407bdc <wcrtomb@plt+0x4e9c>
  409058:	ldp	x23, x24, [sp, #48]
  40905c:	b	408534 <wcrtomb@plt+0x57f4>
  409060:	stp	x29, x30, [sp, #-256]!
  409064:	mov	x29, sp
  409068:	stp	x19, x20, [sp, #16]
  40906c:	stp	x21, x22, [sp, #32]
  409070:	mov	x20, x0
  409074:	mov	x21, x1
  409078:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40907c:	add	x19, x19, #0x618
  409080:	mov	x2, #0x32                  	// #50
  409084:	mov	x1, #0x0                   	// #0
  409088:	add	x0, x19, #0x40
  40908c:	bl	406848 <wcrtomb@plt+0x3b08>
  409090:	mov	x2, #0x0                   	// #0
  409094:	mov	x1, #0x0                   	// #0
  409098:	mov	x0, x19
  40909c:	bl	406848 <wcrtomb@plt+0x3b08>
  4090a0:	mov	x2, #0x0                   	// #0
  4090a4:	mov	x1, #0x0                   	// #0
  4090a8:	add	x0, x19, #0x80
  4090ac:	bl	406848 <wcrtomb@plt+0x3b08>
  4090b0:	mov	w0, #0x1                   	// #1
  4090b4:	strb	w0, [sp, #80]
  4090b8:	cbz	x21, 4090cc <wcrtomb@plt+0x638c>
  4090bc:	ldr	x0, [x21]
  4090c0:	cbz	x0, 4090cc <wcrtomb@plt+0x638c>
  4090c4:	str	x21, [sp, #56]
  4090c8:	b	4090e4 <wcrtomb@plt+0x63a4>
  4090cc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4090d0:	ldr	x0, [x0, #1888]
  4090d4:	cbnz	x0, 409110 <wcrtomb@plt+0x63d0>
  4090d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4090dc:	add	x0, x0, #0x440
  4090e0:	str	x0, [sp, #56]
  4090e4:	str	xzr, [sp, #64]
  4090e8:	str	xzr, [sp, #72]
  4090ec:	adrp	x0, 406000 <wcrtomb@plt+0x32c0>
  4090f0:	add	x0, x0, #0x840
  4090f4:	str	x0, [sp, #88]
  4090f8:	str	xzr, [sp, #240]
  4090fc:	adrp	x21, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409100:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409104:	add	x22, x22, #0x618
  409108:	add	x22, x22, #0x40
  40910c:	b	409160 <wcrtomb@plt+0x6420>
  409110:	mov	w2, #0x5                   	// #5
  409114:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409118:	add	x1, x1, #0xaf8
  40911c:	mov	x0, #0x0                   	// #0
  409120:	bl	402c20 <dcgettext@plt>
  409124:	bl	40a510 <wcrtomb@plt+0x77d0>
  409128:	ldr	x2, [sp, #104]
  40912c:	ldr	x3, [sp, #72]
  409130:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409134:	add	x1, x1, #0xb08
  409138:	mov	w0, #0x1                   	// #1
  40913c:	bl	4028b0 <__printf_chk@plt>
  409140:	mov	x0, x22
  409144:	bl	4068e4 <wcrtomb@plt+0x3ba4>
  409148:	add	x1, sp, #0x38
  40914c:	mov	x0, x20
  409150:	bl	407a7c <wcrtomb@plt+0x4d3c>
  409154:	mov	w19, w0
  409158:	cmn	w0, #0x1
  40915c:	b.ne	4091a0 <wcrtomb@plt+0x6460>  // b.any
  409160:	mov	w2, #0x0                   	// #0
  409164:	mov	x1, x20
  409168:	add	x0, sp, #0x38
  40916c:	bl	4078b8 <wcrtomb@plt+0x4b78>
  409170:	and	w0, w0, #0xff
  409174:	cbz	w0, 40919c <wcrtomb@plt+0x645c>
  409178:	ldrb	w0, [x21, #1901]
  40917c:	cbz	w0, 409148 <wcrtomb@plt+0x6408>
  409180:	ldr	x0, [sp, #240]
  409184:	cbz	x0, 409128 <wcrtomb@plt+0x63e8>
  409188:	bl	402780 <fileno@plt>
  40918c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xccd0>
  409190:	add	x2, x2, #0xaf0
  409194:	cbz	w0, 40912c <wcrtomb@plt+0x63ec>
  409198:	b	409128 <wcrtomb@plt+0x63e8>
  40919c:	mov	w19, #0x0                   	// #0
  4091a0:	add	x0, sp, #0x38
  4091a4:	bl	407464 <wcrtomb@plt+0x4724>
  4091a8:	ldr	x0, [sp, #64]
  4091ac:	cmp	x0, #0x0
  4091b0:	mov	w0, #0x2                   	// #2
  4091b4:	csel	w0, w19, w0, eq  // eq = none
  4091b8:	ldp	x19, x20, [sp, #16]
  4091bc:	ldp	x21, x22, [sp, #32]
  4091c0:	ldp	x29, x30, [sp], #256
  4091c4:	ret
  4091c8:	stp	x29, x30, [sp, #-64]!
  4091cc:	mov	x29, sp
  4091d0:	stp	x19, x20, [sp, #16]
  4091d4:	str	x21, [sp, #32]
  4091d8:	mov	w20, w0
  4091dc:	mov	x19, x1
  4091e0:	strb	w0, [sp, #63]
  4091e4:	mov	x0, x1
  4091e8:	bl	402a10 <mbsinit@plt>
  4091ec:	mov	w21, w0
  4091f0:	mov	x3, x19
  4091f4:	mov	x2, #0x1                   	// #1
  4091f8:	add	x1, sp, #0x3f
  4091fc:	mov	x0, #0x0                   	// #0
  409200:	bl	412f3c <wcrtomb@plt+0x101fc>
  409204:	cbz	w0, 409260 <wcrtomb@plt+0x6520>
  409208:	cmp	w0, #0x0
  40920c:	b.gt	409238 <wcrtomb@plt+0x64f8>
  409210:	cmn	w0, #0x2
  409214:	b.eq	409268 <wcrtomb@plt+0x6528>  // b.none
  409218:	cmn	w0, #0x1
  40921c:	b.ne	40924c <wcrtomb@plt+0x650c>  // b.any
  409220:	str	xzr, [x19]
  409224:	mov	w0, #0x0                   	// #0
  409228:	ldp	x19, x20, [sp, #16]
  40922c:	ldr	x21, [sp, #32]
  409230:	ldp	x29, x30, [sp], #64
  409234:	ret
  409238:	cmp	w0, #0x1
  40923c:	b.ne	40924c <wcrtomb@plt+0x650c>  // b.any
  409240:	cmp	w21, #0x0
  409244:	cset	w0, eq  // eq = none
  409248:	b	409228 <wcrtomb@plt+0x64e8>
  40924c:	mov	w2, w0
  409250:	mov	w1, w20
  409254:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  409258:	add	x0, x0, #0xbd8
  40925c:	bl	40a510 <wcrtomb@plt+0x77d0>
  409260:	mov	w0, #0x1                   	// #1
  409264:	b	409228 <wcrtomb@plt+0x64e8>
  409268:	mov	w0, #0x1                   	// #1
  40926c:	b	409228 <wcrtomb@plt+0x64e8>
  409270:	stp	x29, x30, [sp, #-16]!
  409274:	mov	x29, sp
  409278:	bl	410b70 <wcrtomb@plt+0xde30>
  40927c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409280:	add	x1, x1, #0xc00
  409284:	bl	402aa0 <strcmp@plt>
  409288:	cmp	w0, #0x0
  40928c:	cset	w1, eq  // eq = none
  409290:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409294:	strb	w1, [x0, #2256]
  409298:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  40929c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4092a0:	str	w0, [x1, #2260]
  4092a4:	ldp	x29, x30, [sp], #16
  4092a8:	ret
  4092ac:	stp	x29, x30, [sp, #-256]!
  4092b0:	mov	x29, sp
  4092b4:	stp	x19, x20, [sp, #16]
  4092b8:	stp	x21, x22, [sp, #32]
  4092bc:	mov	x19, x0
  4092c0:	mov	w21, w1
  4092c4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4092c8:	ldr	w0, [x0, #1896]
  4092cc:	tbz	w0, #0, 4093d0 <wcrtomb@plt+0x6690>
  4092d0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4092d4:	ldr	w0, [x0, #2264]
  4092d8:	cmp	w0, #0x1
  4092dc:	b.eq	40931c <wcrtomb@plt+0x65dc>  // b.none
  4092e0:	cmp	w0, #0x2
  4092e4:	b.eq	409338 <wcrtomb@plt+0x65f8>  // b.none
  4092e8:	mov	w20, #0xb27c                	// #45692
  4092ec:	movk	w20, #0x7, lsl #16
  4092f0:	cbnz	w0, 4093f4 <wcrtomb@plt+0x66b4>
  4092f4:	mov	w0, #0xb2fc                	// #45820
  4092f8:	movk	w0, #0x3, lsl #16
  4092fc:	mov	w20, #0xff7f                	// #65407
  409300:	movk	w20, #0xfffd, lsl #16
  409304:	and	w0, w0, w20
  409308:	orr	w20, w0, #0x40000
  40930c:	b	4093f4 <wcrtomb@plt+0x66b4>
  409310:	mov	w0, #0x2c6                 	// #710
  409314:	movk	w0, #0x101, lsl #16
  409318:	b	4092fc <wcrtomb@plt+0x65bc>
  40931c:	mov	w0, #0xb27c                	// #45692
  409320:	movk	w0, #0x3, lsl #16
  409324:	orr	w20, w0, #0x60000
  409328:	b	4093f4 <wcrtomb@plt+0x66b4>
  40932c:	mov	w0, #0x246                 	// #582
  409330:	movk	w0, #0x101, lsl #16
  409334:	b	409324 <wcrtomb@plt+0x65e4>
  409338:	mov	w20, #0xb27c                	// #45692
  40933c:	movk	w20, #0xf, lsl #16
  409340:	b	4093f4 <wcrtomb@plt+0x66b4>
  409344:	mov	w20, #0x646                 	// #1606
  409348:	movk	w20, #0x10f, lsl #16
  40934c:	b	4093f4 <wcrtomb@plt+0x66b4>
  409350:	mov	x0, #0x100                 	// #256
  409354:	bl	402800 <malloc@plt>
  409358:	str	x0, [x19, #32]
  40935c:	b	409400 <wcrtomb@plt+0x66c0>
  409360:	ldr	w1, [x19, #64]
  409364:	ubfx	x1, x1, #2, #1
  409368:	b	409458 <wcrtomb@plt+0x6718>
  40936c:	bl	40335c <wcrtomb@plt+0x61c>
  409370:	mov	w2, #0x5                   	// #5
  409374:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409378:	add	x1, x1, #0xc08
  40937c:	mov	x0, #0x0                   	// #0
  409380:	bl	402c20 <dcgettext@plt>
  409384:	mov	w4, w21
  409388:	mov	x3, x0
  40938c:	mov	x2, #0xc8                  	// #200
  409390:	mov	w1, #0x1                   	// #1
  409394:	add	x0, sp, #0x38
  409398:	bl	4026a0 <__sprintf_chk@plt>
  40939c:	add	x0, sp, #0x38
  4093a0:	bl	40335c <wcrtomb@plt+0x61c>
  4093a4:	ldrb	w0, [x19, #90]
  4093a8:	cmp	w0, #0x5e
  4093ac:	b.eq	4093c4 <wcrtomb@plt+0x6684>  // b.none
  4093b0:	cmp	w0, #0x24
  4093b4:	b.ne	4094d4 <wcrtomb@plt+0x6794>  // b.any
  4093b8:	mov	w0, #0x1                   	// #1
  4093bc:	strb	w0, [x19, #89]
  4093c0:	b	4094d4 <wcrtomb@plt+0x6794>
  4093c4:	mov	w0, #0x1                   	// #1
  4093c8:	strb	w0, [x19, #88]
  4093cc:	b	4094d4 <wcrtomb@plt+0x6794>
  4093d0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4093d4:	ldr	w0, [x0, #2264]
  4093d8:	cmp	w0, #0x1
  4093dc:	b.eq	40932c <wcrtomb@plt+0x65ec>  // b.none
  4093e0:	cmp	w0, #0x2
  4093e4:	b.eq	409344 <wcrtomb@plt+0x6604>  // b.none
  4093e8:	cbz	w0, 409310 <wcrtomb@plt+0x65d0>
  4093ec:	mov	w20, #0x246                 	// #582
  4093f0:	movk	w20, #0x105, lsl #16
  4093f4:	ldr	w22, [x19, #64]
  4093f8:	tbz	w22, #1, 409350 <wcrtomb@plt+0x6610>
  4093fc:	orr	w20, w20, #0x400000
  409400:	cmp	w21, #0x0
  409404:	cset	w0, eq  // eq = none
  409408:	lsl	w0, w0, #25
  40940c:	orr	w2, w20, w0
  409410:	and	w2, w2, #0xffffffbf
  409414:	orr	w2, w2, #0x100
  409418:	orr	w0, w20, w0
  40941c:	tst	x22, #0x4
  409420:	csel	w2, w0, w2, eq  // eq = none
  409424:	sxtw	x20, w2
  409428:	mov	x0, x20
  40942c:	bl	41f2d8 <_obstack_memory_used@@Base+0xbfa8>
  409430:	add	x22, x19, #0x5a
  409434:	mov	x2, x19
  409438:	ldr	x1, [x19, #72]
  40943c:	mov	x0, x22
  409440:	bl	41f268 <_obstack_memory_used@@Base+0xbf38>
  409444:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409448:	ldrb	w3, [x1, #1120]
  40944c:	mov	w1, #0x0                   	// #0
  409450:	cmp	w3, #0xa
  409454:	b.eq	409360 <wcrtomb@plt+0x6620>  // b.none
  409458:	ldrb	w2, [x19, #56]
  40945c:	bfi	w2, w1, #7, #1
  409460:	strb	w2, [x19, #56]
  409464:	str	xzr, [x19, #40]
  409468:	cbnz	x0, 40936c <wcrtomb@plt+0x662c>
  40946c:	cbz	w21, 40948c <wcrtomb@plt+0x674c>
  409470:	sub	w21, w21, #0x1
  409474:	ldr	x0, [x19, #48]
  409478:	cmp	x0, w21, sxtw
  40947c:	b.cs	40948c <wcrtomb@plt+0x674c>  // b.hs, b.nlast
  409480:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409484:	ldr	w0, [x0, #2264]
  409488:	cbz	w0, 409370 <wcrtomb@plt+0x6630>
  40948c:	cmp	w3, #0xa
  409490:	cset	w21, ne  // ne = any
  409494:	lsl	w21, w21, #1
  409498:	bl	4103c0 <wcrtomb@plt+0xd680>
  40949c:	str	x0, [x19, #80]
  4094a0:	mov	w3, w21
  4094a4:	mov	x2, x20
  4094a8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4094ac:	add	x1, x1, #0x8e0
  4094b0:	bl	41077c <wcrtomb@plt+0xda3c>
  4094b4:	mov	w3, #0x1                   	// #1
  4094b8:	ldr	x2, [x19, #80]
  4094bc:	ldr	x1, [x19, #72]
  4094c0:	mov	x0, x22
  4094c4:	bl	4103d8 <wcrtomb@plt+0xd698>
  4094c8:	ldr	x0, [x19, #72]
  4094cc:	cmp	x0, #0x1
  4094d0:	b.eq	4093a4 <wcrtomb@plt+0x6664>  // b.none
  4094d4:	ldp	x19, x20, [sp, #16]
  4094d8:	ldp	x21, x22, [sp, #32]
  4094dc:	ldp	x29, x30, [sp], #256
  4094e0:	ret
  4094e4:	stp	x29, x30, [sp, #-16]!
  4094e8:	mov	x29, sp
  4094ec:	mov	x1, x0
  4094f0:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  4094f4:	add	x0, x0, #0x940
  4094f8:	bl	40a510 <wcrtomb@plt+0x77d0>
  4094fc:	stp	x29, x30, [sp, #-32]!
  409500:	mov	x29, sp
  409504:	str	x19, [sp, #16]
  409508:	mov	x19, x0
  40950c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  409510:	add	x0, x0, #0xc38
  409514:	bl	402cc0 <getenv@plt>
  409518:	cbz	x0, 409528 <wcrtomb@plt+0x67e8>
  40951c:	ldr	x19, [sp, #16]
  409520:	ldp	x29, x30, [sp], #32
  409524:	ret
  409528:	mov	x0, x19
  40952c:	bl	4094e4 <wcrtomb@plt+0x67a4>
  409530:	stp	x29, x30, [sp, #-64]!
  409534:	mov	x29, sp
  409538:	stp	x19, x20, [sp, #16]
  40953c:	stp	x21, x22, [sp, #32]
  409540:	str	x23, [sp, #48]
  409544:	mov	x23, x0
  409548:	mov	w20, w1
  40954c:	mov	w22, w2
  409550:	bl	40aefc <wcrtomb@plt+0x81bc>
  409554:	cbnz	x0, 409598 <wcrtomb@plt+0x6858>
  409558:	mov	x21, #0x0                   	// #0
  40955c:	cmp	w20, #0x0
  409560:	b.gt	40957c <wcrtomb@plt+0x683c>
  409564:	mov	x0, x21
  409568:	ldp	x19, x20, [sp, #16]
  40956c:	ldp	x21, x22, [sp, #32]
  409570:	ldr	x23, [sp, #48]
  409574:	ldp	x29, x30, [sp], #64
  409578:	ret
  40957c:	mov	w2, #0x5                   	// #5
  409580:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409584:	add	x1, x1, #0xc78
  409588:	add	x1, x1, #0x1f
  40958c:	mov	x0, #0x0                   	// #0
  409590:	bl	402c20 <dcgettext@plt>
  409594:	bl	40335c <wcrtomb@plt+0x61c>
  409598:	mov	x19, x0
  40959c:	add	x0, x0, #0x5f
  4095a0:	bl	412e80 <wcrtomb@plt+0x10140>
  4095a4:	mov	x21, x0
  4095a8:	str	w20, [x0, #64]
  4095ac:	add	x20, x0, #0x5a
  4095b0:	mov	x0, x23
  4095b4:	bl	40aef4 <wcrtomb@plt+0x81b4>
  4095b8:	mov	x2, x19
  4095bc:	mov	x1, x0
  4095c0:	mov	x0, x20
  4095c4:	bl	402650 <memcpy@plt>
  4095c8:	mov	w2, #0x2                   	// #2
  4095cc:	mov	x1, x19
  4095d0:	mov	x0, x20
  4095d4:	bl	403c54 <wcrtomb@plt+0xf14>
  4095d8:	str	x0, [x21, #72]
  4095dc:	mov	w1, w22
  4095e0:	mov	x0, x21
  4095e4:	bl	4092ac <wcrtomb@plt+0x656c>
  4095e8:	b	409564 <wcrtomb@plt+0x6824>
  4095ec:	stp	x29, x30, [sp, #-112]!
  4095f0:	mov	x29, sp
  4095f4:	stp	x19, x20, [sp, #16]
  4095f8:	stp	x23, x24, [sp, #48]
  4095fc:	stp	x25, x26, [sp, #64]
  409600:	mov	x25, x1
  409604:	mov	x24, x2
  409608:	mov	x20, x3
  40960c:	mov	x23, x4
  409610:	mov	w26, w5
  409614:	cbz	x0, 4096ac <wcrtomb@plt+0x696c>
  409618:	mov	x19, x0
  40961c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409620:	str	x19, [x0, #1848]
  409624:	mov	x0, #0x7ffffffe            	// #2147483646
  409628:	cmp	x24, x0
  40962c:	b.hi	4096d8 <wcrtomb@plt+0x6998>  // b.pmore
  409630:	ldrb	w0, [x19, #56]
  409634:	tst	x0, #0x10
  409638:	ccmp	w26, #0x0, #0x4, ne  // ne = any
  40963c:	b.ne	4096f8 <wcrtomb@plt+0x69b8>  // b.any
  409640:	ldrb	w0, [x19, #56]
  409644:	mov	w1, #0x1                   	// #1
  409648:	bfi	w0, w1, #1, #2
  40964c:	strb	w0, [x19, #56]
  409650:	ldrh	w0, [x19, #88]
  409654:	cbz	w0, 4097e0 <wcrtomb@plt+0x6aa0>
  409658:	ldrb	w0, [x19, #89]
  40965c:	cbnz	w0, 409728 <wcrtomb@plt+0x69e8>
  409660:	cbz	x20, 409750 <wcrtomb@plt+0x6a10>
  409664:	ldr	w1, [x19, #64]
  409668:	and	w0, w1, #0x4
  40966c:	tbz	w1, #2, 4099d8 <wcrtomb@plt+0x6c98>
  409670:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409674:	ldrb	w1, [x0, #1120]
  409678:	add	x0, x25, x20
  40967c:	ldurb	w0, [x0, #-1]
  409680:	cmp	w0, w1
  409684:	b.eq	409750 <wcrtomb@plt+0x6a10>  // b.none
  409688:	sub	x2, x24, x20
  40968c:	add	x0, x25, x20
  409690:	bl	402bb0 <memchr@plt>
  409694:	mov	x20, x0
  409698:	mov	w0, #0x0                   	// #0
  40969c:	cbz	x20, 4099d8 <wcrtomb@plt+0x6c98>
  4096a0:	sub	x20, x20, x25
  4096a4:	add	x20, x20, #0x1
  4096a8:	b	409750 <wcrtomb@plt+0x6a10>
  4096ac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4096b0:	ldr	x19, [x0, #1848]
  4096b4:	cbnz	x19, 409624 <wcrtomb@plt+0x68e4>
  4096b8:	stp	x21, x22, [sp, #32]
  4096bc:	stp	x27, x28, [sp, #80]
  4096c0:	mov	w2, #0x5                   	// #5
  4096c4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4096c8:	add	x1, x1, #0xc78
  4096cc:	mov	x0, #0x0                   	// #0
  4096d0:	bl	402c20 <dcgettext@plt>
  4096d4:	bl	40335c <wcrtomb@plt+0x61c>
  4096d8:	stp	x21, x22, [sp, #32]
  4096dc:	stp	x27, x28, [sp, #80]
  4096e0:	mov	w2, #0x5                   	// #5
  4096e4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  4096e8:	add	x1, x1, #0xc48
  4096ec:	mov	x0, #0x0                   	// #0
  4096f0:	bl	402c20 <dcgettext@plt>
  4096f4:	bl	40a510 <wcrtomb@plt+0x77d0>
  4096f8:	ldr	x0, [x19, #80]
  4096fc:	cbz	x0, 409710 <wcrtomb@plt+0x69d0>
  409700:	bl	40f8dc <wcrtomb@plt+0xcb9c>
  409704:	ldr	x0, [x19, #80]
  409708:	bl	402ae0 <free@plt>
  40970c:	str	xzr, [x19, #80]
  409710:	mov	x0, x19
  409714:	bl	41f95c <_obstack_memory_used@@Base+0xc62c>
  409718:	mov	w1, w26
  40971c:	mov	x0, x19
  409720:	bl	4092ac <wcrtomb@plt+0x656c>
  409724:	b	409640 <wcrtomb@plt+0x6900>
  409728:	ldr	w0, [x19, #64]
  40972c:	tbz	w0, #2, 4097ac <wcrtomb@plt+0x6a6c>
  409730:	sub	x2, x24, x20
  409734:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409738:	ldrb	w1, [x0, #1120]
  40973c:	add	x0, x25, x20
  409740:	bl	402bb0 <memchr@plt>
  409744:	sub	x20, x0, x25
  409748:	cmp	x0, #0x0
  40974c:	csel	x20, x20, x24, ne  // ne = any
  409750:	mov	w0, #0x1                   	// #1
  409754:	cbz	w26, 4099d8 <wcrtomb@plt+0x6c98>
  409758:	ldr	x0, [x23, #8]
  40975c:	cbz	x0, 4097b4 <wcrtomb@plt+0x6a74>
  409760:	ldr	x0, [x23, #8]
  409764:	str	x20, [x0]
  409768:	ldr	x0, [x23, #16]
  40976c:	str	x20, [x0]
  409770:	ldr	x0, [x23]
  409774:	cmp	x0, #0x1
  409778:	b.ls	40998c <wcrtomb@plt+0x6c4c>  // b.plast
  40977c:	mov	x0, #0x1                   	// #1
  409780:	mov	x1, #0xffffffffffffffff    	// #-1
  409784:	ldr	x2, [x23, #16]
  409788:	str	x1, [x2, x0, lsl #3]
  40978c:	ldr	x2, [x23, #8]
  409790:	str	x1, [x2, x0, lsl #3]
  409794:	add	x0, x0, #0x1
  409798:	ldr	x2, [x23]
  40979c:	cmp	x2, x0
  4097a0:	b.hi	409784 <wcrtomb@plt+0x6a44>  // b.pmore
  4097a4:	mov	w0, #0x1                   	// #1
  4097a8:	b	4099d8 <wcrtomb@plt+0x6c98>
  4097ac:	mov	x20, x24
  4097b0:	b	409750 <wcrtomb@plt+0x6a10>
  4097b4:	mov	x1, #0x8                   	// #8
  4097b8:	mov	x0, #0x1                   	// #1
  4097bc:	bl	412e48 <wcrtomb@plt+0x10108>
  4097c0:	str	x0, [x23, #8]
  4097c4:	mov	x1, #0x8                   	// #8
  4097c8:	mov	x0, #0x1                   	// #1
  4097cc:	bl	412e48 <wcrtomb@plt+0x10108>
  4097d0:	str	x0, [x23, #16]
  4097d4:	mov	x0, #0x1                   	// #1
  4097d8:	str	x0, [x23]
  4097dc:	b	409760 <wcrtomb@plt+0x6a20>
  4097e0:	cbnz	x20, 409810 <wcrtomb@plt+0x6ad0>
  4097e4:	ldr	x0, [x19, #80]
  4097e8:	bl	40f8cc <wcrtomb@plt+0xcb8c>
  4097ec:	cbz	x0, 40999c <wcrtomb@plt+0x6c5c>
  4097f0:	mov	x5, #0x0                   	// #0
  4097f4:	mov	x4, #0x0                   	// #0
  4097f8:	mov	w3, #0x1                   	// #1
  4097fc:	add	x2, x25, x24
  409800:	mov	x1, x25
  409804:	bl	40f8b4 <wcrtomb@plt+0xcb74>
  409808:	cbz	x0, 409994 <wcrtomb@plt+0x6c54>
  40980c:	cbz	w26, 409a58 <wcrtomb@plt+0x6d18>
  409810:	ldr	w0, [x19, #64]
  409814:	tbz	w0, #2, 4099ac <wcrtomb@plt+0x6c6c>
  409818:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40981c:	ldrb	w1, [x0, #1120]
  409820:	cmp	w1, #0xa
  409824:	b.eq	4099ac <wcrtomb@plt+0x6c6c>  // b.none
  409828:	stp	x21, x22, [sp, #32]
  40982c:	stp	x27, x28, [sp, #80]
  409830:	mov	x21, x25
  409834:	cbz	x20, 40984c <wcrtomb@plt+0x6b0c>
  409838:	mov	x2, x20
  40983c:	mov	x0, x25
  409840:	bl	402b30 <memrchr@plt>
  409844:	cmp	x0, #0x0
  409848:	csinc	x21, x25, x0, eq  // eq = none
  40984c:	add	x20, x25, x20
  409850:	cmp	w26, #0x0
  409854:	csel	x28, x23, xzr, ne  // ne = any
  409858:	add	x24, x25, x24
  40985c:	adrp	x27, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409860:	add	x27, x27, #0x460
  409864:	b	409928 <wcrtomb@plt+0x6be8>
  409868:	stp	x21, x22, [sp, #32]
  40986c:	ldr	x21, [x19, #80]
  409870:	mov	x0, x21
  409874:	bl	40f8d4 <wcrtomb@plt+0xcb94>
  409878:	and	w0, w0, #0xff
  40987c:	cbz	w0, 4098c4 <wcrtomb@plt+0x6b84>
  409880:	strb	wzr, [sp, #111]
  409884:	add	x5, sp, #0x6f
  409888:	mov	x4, #0x0                   	// #0
  40988c:	mov	w3, #0x1                   	// #1
  409890:	add	x2, x25, x24
  409894:	mov	x1, x25
  409898:	mov	x0, x21
  40989c:	bl	40f8b4 <wcrtomb@plt+0xcb74>
  4098a0:	cbz	x0, 4098b8 <wcrtomb@plt+0x6b78>
  4098a4:	cbz	w26, 4098b0 <wcrtomb@plt+0x6b70>
  4098a8:	ldp	x21, x22, [sp, #32]
  4098ac:	b	409810 <wcrtomb@plt+0x6ad0>
  4098b0:	ldp	x21, x22, [sp, #32]
  4098b4:	b	409a8c <wcrtomb@plt+0x6d4c>
  4098b8:	mov	w0, #0x0                   	// #0
  4098bc:	ldp	x21, x22, [sp, #32]
  4098c0:	b	4099d8 <wcrtomb@plt+0x6c98>
  4098c4:	ldp	x21, x22, [sp, #32]
  4098c8:	b	409810 <wcrtomb@plt+0x6ad0>
  4098cc:	add	x0, x0, #0x1
  4098d0:	ldr	x3, [x23]
  4098d4:	cmp	x3, x0
  4098d8:	b.ls	40990c <wcrtomb@plt+0x6bcc>  // b.plast
  4098dc:	lsl	x4, x0, #3
  4098e0:	ldr	x5, [x23, #8]
  4098e4:	ldr	x3, [x5, x0, lsl #3]
  4098e8:	tbnz	x3, #63, 4098f4 <wcrtomb@plt+0x6bb4>
  4098ec:	add	x3, x21, x3
  4098f0:	str	x3, [x5, x0, lsl #3]
  4098f4:	ldr	x5, [x23, #16]
  4098f8:	ldr	x3, [x5, x4]
  4098fc:	tbnz	x3, #63, 4098cc <wcrtomb@plt+0x6b8c>
  409900:	add	x3, x21, x3
  409904:	str	x3, [x5, x4]
  409908:	b	4098cc <wcrtomb@plt+0x6b8c>
  40990c:	ldp	x21, x22, [sp, #32]
  409910:	ldp	x27, x28, [sp, #80]
  409914:	b	4099d0 <wcrtomb@plt+0x6c90>
  409918:	cmp	x24, x22
  40991c:	b.eq	409980 <wcrtomb@plt+0x6c40>  // b.none
  409920:	add	x21, x22, #0x1
  409924:	mov	x20, x21
  409928:	sub	x2, x24, x21
  40992c:	ldrb	w1, [x27]
  409930:	mov	x0, x21
  409934:	bl	402bb0 <memchr@plt>
  409938:	mov	x22, x0
  40993c:	cbz	x0, 4099ec <wcrtomb@plt+0x6cac>
  409940:	mov	x5, x28
  409944:	sub	x4, x0, x20
  409948:	sub	x3, x20, x21
  40994c:	sub	x2, x0, x21
  409950:	mov	x1, x21
  409954:	mov	x0, x19
  409958:	bl	41fa90 <_obstack_memory_used@@Base+0xc760>
  40995c:	mov	w2, w0
  409960:	tbnz	w0, #31, 409918 <wcrtomb@plt+0x6bd8>
  409964:	b	409a10 <wcrtomb@plt+0x6cd0>
  409968:	ldp	x21, x22, [sp, #32]
  40996c:	ldp	x27, x28, [sp, #80]
  409970:	b	4099d0 <wcrtomb@plt+0x6c90>
  409974:	ldp	x21, x22, [sp, #32]
  409978:	ldp	x27, x28, [sp, #80]
  40997c:	b	4099d0 <wcrtomb@plt+0x6c90>
  409980:	ldp	x21, x22, [sp, #32]
  409984:	ldp	x27, x28, [sp, #80]
  409988:	b	4099d0 <wcrtomb@plt+0x6c90>
  40998c:	mov	w0, #0x1                   	// #1
  409990:	b	4099d8 <wcrtomb@plt+0x6c98>
  409994:	mov	w0, #0x0                   	// #0
  409998:	b	4099d8 <wcrtomb@plt+0x6c98>
  40999c:	cbnz	w26, 409868 <wcrtomb@plt+0x6b28>
  4099a0:	ldr	w1, [x19, #64]
  4099a4:	tbnz	w1, #2, 409a60 <wcrtomb@plt+0x6d20>
  4099a8:	cbz	x0, 409a38 <wcrtomb@plt+0x6cf8>
  4099ac:	cmp	w26, #0x0
  4099b0:	csel	x5, x23, xzr, ne  // ne = any
  4099b4:	sub	x4, x24, x20
  4099b8:	mov	x3, x20
  4099bc:	mov	x2, x24
  4099c0:	mov	x1, x25
  4099c4:	mov	x0, x19
  4099c8:	bl	41fa90 <_obstack_memory_used@@Base+0xc760>
  4099cc:	mov	w2, w0
  4099d0:	mvn	w0, w2
  4099d4:	lsr	w0, w0, #31
  4099d8:	ldp	x19, x20, [sp, #16]
  4099dc:	ldp	x23, x24, [sp, #48]
  4099e0:	ldp	x25, x26, [sp, #64]
  4099e4:	ldp	x29, x30, [sp], #112
  4099e8:	ret
  4099ec:	mov	x5, x28
  4099f0:	sub	x4, x24, x20
  4099f4:	sub	x3, x20, x21
  4099f8:	sub	x2, x24, x21
  4099fc:	mov	x1, x21
  409a00:	mov	x0, x19
  409a04:	bl	41fa90 <_obstack_memory_used@@Base+0xc760>
  409a08:	mov	w2, w0
  409a0c:	tbnz	w0, #31, 409a2c <wcrtomb@plt+0x6cec>
  409a10:	sub	x21, x21, x25
  409a14:	add	w2, w21, w0
  409a18:	cbz	w26, 409968 <wcrtomb@plt+0x6c28>
  409a1c:	ldr	x0, [x23]
  409a20:	cbz	x0, 409974 <wcrtomb@plt+0x6c34>
  409a24:	mov	x0, #0x0                   	// #0
  409a28:	b	4098dc <wcrtomb@plt+0x6b9c>
  409a2c:	ldp	x21, x22, [sp, #32]
  409a30:	ldp	x27, x28, [sp, #80]
  409a34:	b	4099d0 <wcrtomb@plt+0x6c90>
  409a38:	stp	x21, x22, [sp, #32]
  409a3c:	ldr	x21, [x19, #80]
  409a40:	mov	x0, x21
  409a44:	bl	40f8d4 <wcrtomb@plt+0xcb94>
  409a48:	and	w0, w0, #0xff
  409a4c:	cbnz	w0, 409880 <wcrtomb@plt+0x6b40>
  409a50:	ldp	x21, x22, [sp, #32]
  409a54:	b	4099ac <wcrtomb@plt+0x6c6c>
  409a58:	ldr	w0, [x19, #64]
  409a5c:	tbz	w0, #2, 4099ac <wcrtomb@plt+0x6c6c>
  409a60:	strb	wzr, [sp, #111]
  409a64:	add	x5, sp, #0x6f
  409a68:	mov	x4, #0x0                   	// #0
  409a6c:	mov	w3, #0x1                   	// #1
  409a70:	add	x2, x25, x24
  409a74:	mov	x1, x25
  409a78:	ldr	x0, [x19, #80]
  409a7c:	bl	40f8b4 <wcrtomb@plt+0xcb74>
  409a80:	mov	x1, x0
  409a84:	mov	w0, #0x0                   	// #0
  409a88:	cbz	x1, 4099d8 <wcrtomb@plt+0x6c98>
  409a8c:	ldr	w0, [x19, #64]
  409a90:	tbz	w0, #2, 409810 <wcrtomb@plt+0x6ad0>
  409a94:	ldrb	w1, [sp, #111]
  409a98:	mov	w0, #0x1                   	// #1
  409a9c:	cbnz	w1, 409810 <wcrtomb@plt+0x6ad0>
  409aa0:	b	4099d8 <wcrtomb@plt+0x6c98>
  409aa4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409aa8:	ldr	x0, [x0, #1856]
  409aac:	cbz	x0, 409ac4 <wcrtomb@plt+0x6d84>
  409ab0:	stp	x29, x30, [sp, #-16]!
  409ab4:	mov	x29, sp
  409ab8:	bl	402cd0 <unlink@plt>
  409abc:	ldp	x29, x30, [sp], #16
  409ac0:	ret
  409ac4:	ret
  409ac8:	stp	x29, x30, [sp, #-32]!
  409acc:	mov	x29, sp
  409ad0:	str	x19, [sp, #16]
  409ad4:	cbz	w0, 409b10 <wcrtomb@plt+0x6dd0>
  409ad8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409adc:	ldr	x19, [x0, #1264]
  409ae0:	mov	w2, #0x5                   	// #5
  409ae4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409ae8:	add	x1, x1, #0xcc0
  409aec:	mov	x0, #0x0                   	// #0
  409af0:	bl	402c20 <dcgettext@plt>
  409af4:	mov	x2, x0
  409af8:	mov	w1, #0x1                   	// #1
  409afc:	mov	x0, x19
  409b00:	bl	402a90 <__fprintf_chk@plt>
  409b04:	ldr	x19, [sp, #16]
  409b08:	ldp	x29, x30, [sp], #32
  409b0c:	ret
  409b10:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409b14:	ldr	x19, [x0, #1288]
  409b18:	mov	w2, #0x5                   	// #5
  409b1c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409b20:	add	x1, x1, #0xcc0
  409b24:	mov	x0, #0x0                   	// #0
  409b28:	bl	402c20 <dcgettext@plt>
  409b2c:	mov	x2, x0
  409b30:	mov	w1, #0x1                   	// #1
  409b34:	mov	x0, x19
  409b38:	bl	402a90 <__fprintf_chk@plt>
  409b3c:	mov	w2, #0x5                   	// #5
  409b40:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409b44:	add	x1, x1, #0xd40
  409b48:	mov	x0, #0x0                   	// #0
  409b4c:	bl	402c20 <dcgettext@plt>
  409b50:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xccd0>
  409b54:	add	x3, x3, #0xd60
  409b58:	mov	x2, x0
  409b5c:	mov	w1, #0x1                   	// #1
  409b60:	mov	x0, x19
  409b64:	bl	402a90 <__fprintf_chk@plt>
  409b68:	b	409b04 <wcrtomb@plt+0x6dc4>
  409b6c:	stp	x29, x30, [sp, #-32]!
  409b70:	mov	x29, sp
  409b74:	stp	x19, x20, [sp, #16]
  409b78:	mov	w20, w0
  409b7c:	cbz	w0, 409e0c <wcrtomb@plt+0x70cc>
  409b80:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409b84:	ldr	x19, [x0, #1264]
  409b88:	mov	w2, #0x5                   	// #5
  409b8c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409b90:	add	x1, x1, #0xd70
  409b94:	mov	x0, #0x0                   	// #0
  409b98:	bl	402c20 <dcgettext@plt>
  409b9c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409ba0:	ldr	x3, [x1, #1936]
  409ba4:	mov	x2, x0
  409ba8:	mov	w1, #0x1                   	// #1
  409bac:	mov	x0, x19
  409bb0:	bl	402a90 <__fprintf_chk@plt>
  409bb4:	mov	w2, #0x5                   	// #5
  409bb8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409bbc:	add	x1, x1, #0xdc0
  409bc0:	mov	x0, #0x0                   	// #0
  409bc4:	bl	402c20 <dcgettext@plt>
  409bc8:	mov	x2, x0
  409bcc:	mov	w1, #0x1                   	// #1
  409bd0:	mov	x0, x19
  409bd4:	bl	402a90 <__fprintf_chk@plt>
  409bd8:	mov	w2, #0x5                   	// #5
  409bdc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409be0:	add	x1, x1, #0xe18
  409be4:	mov	x0, #0x0                   	// #0
  409be8:	bl	402c20 <dcgettext@plt>
  409bec:	mov	x2, x0
  409bf0:	mov	w1, #0x1                   	// #1
  409bf4:	mov	x0, x19
  409bf8:	bl	402a90 <__fprintf_chk@plt>
  409bfc:	mov	w2, #0x5                   	// #5
  409c00:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409c04:	add	x1, x1, #0xe58
  409c08:	mov	x0, #0x0                   	// #0
  409c0c:	bl	402c20 <dcgettext@plt>
  409c10:	mov	x2, x0
  409c14:	mov	w1, #0x1                   	// #1
  409c18:	mov	x0, x19
  409c1c:	bl	402a90 <__fprintf_chk@plt>
  409c20:	mov	w2, #0x5                   	// #5
  409c24:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409c28:	add	x1, x1, #0xec0
  409c2c:	mov	x0, #0x0                   	// #0
  409c30:	bl	402c20 <dcgettext@plt>
  409c34:	mov	x2, x0
  409c38:	mov	w1, #0x1                   	// #1
  409c3c:	mov	x0, x19
  409c40:	bl	402a90 <__fprintf_chk@plt>
  409c44:	mov	w2, #0x5                   	// #5
  409c48:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409c4c:	add	x1, x1, #0xf38
  409c50:	mov	x0, #0x0                   	// #0
  409c54:	bl	402c20 <dcgettext@plt>
  409c58:	mov	x2, x0
  409c5c:	mov	w1, #0x1                   	// #1
  409c60:	mov	x0, x19
  409c64:	bl	402a90 <__fprintf_chk@plt>
  409c68:	mov	w2, #0x5                   	// #5
  409c6c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409c70:	add	x1, x1, #0xf88
  409c74:	mov	x0, #0x0                   	// #0
  409c78:	bl	402c20 <dcgettext@plt>
  409c7c:	mov	x2, x0
  409c80:	mov	w1, #0x1                   	// #1
  409c84:	mov	x0, x19
  409c88:	bl	402a90 <__fprintf_chk@plt>
  409c8c:	mov	w2, #0x5                   	// #5
  409c90:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409c94:	add	x1, x1, #0xff8
  409c98:	mov	x0, #0x0                   	// #0
  409c9c:	bl	402c20 <dcgettext@plt>
  409ca0:	mov	x2, x0
  409ca4:	mov	w1, #0x1                   	// #1
  409ca8:	mov	x0, x19
  409cac:	bl	402a90 <__fprintf_chk@plt>
  409cb0:	mov	w2, #0x5                   	// #5
  409cb4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409cb8:	add	x1, x1, #0x60
  409cbc:	mov	x0, #0x0                   	// #0
  409cc0:	bl	402c20 <dcgettext@plt>
  409cc4:	mov	x2, x0
  409cc8:	mov	w1, #0x1                   	// #1
  409ccc:	mov	x0, x19
  409cd0:	bl	402a90 <__fprintf_chk@plt>
  409cd4:	mov	w2, #0x5                   	// #5
  409cd8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409cdc:	add	x1, x1, #0x98
  409ce0:	mov	x0, #0x0                   	// #0
  409ce4:	bl	402c20 <dcgettext@plt>
  409ce8:	mov	x2, x0
  409cec:	mov	w1, #0x1                   	// #1
  409cf0:	mov	x0, x19
  409cf4:	bl	402a90 <__fprintf_chk@plt>
  409cf8:	mov	w2, #0x5                   	// #5
  409cfc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409d00:	add	x1, x1, #0x128
  409d04:	mov	x0, #0x0                   	// #0
  409d08:	bl	402c20 <dcgettext@plt>
  409d0c:	mov	x2, x0
  409d10:	mov	w1, #0x1                   	// #1
  409d14:	mov	x0, x19
  409d18:	bl	402a90 <__fprintf_chk@plt>
  409d1c:	mov	w2, #0x5                   	// #5
  409d20:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409d24:	add	x1, x1, #0x1a8
  409d28:	mov	x0, #0x0                   	// #0
  409d2c:	bl	402c20 <dcgettext@plt>
  409d30:	mov	x2, x0
  409d34:	mov	w1, #0x1                   	// #1
  409d38:	mov	x0, x19
  409d3c:	bl	402a90 <__fprintf_chk@plt>
  409d40:	mov	w2, #0x5                   	// #5
  409d44:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409d48:	add	x1, x1, #0x200
  409d4c:	mov	x0, #0x0                   	// #0
  409d50:	bl	402c20 <dcgettext@plt>
  409d54:	mov	x2, x0
  409d58:	mov	w1, #0x1                   	// #1
  409d5c:	mov	x0, x19
  409d60:	bl	402a90 <__fprintf_chk@plt>
  409d64:	mov	w2, #0x5                   	// #5
  409d68:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409d6c:	add	x1, x1, #0x290
  409d70:	mov	x0, #0x0                   	// #0
  409d74:	bl	402c20 <dcgettext@plt>
  409d78:	mov	x2, x0
  409d7c:	mov	w1, #0x1                   	// #1
  409d80:	mov	x0, x19
  409d84:	bl	402a90 <__fprintf_chk@plt>
  409d88:	mov	w2, #0x5                   	// #5
  409d8c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409d90:	add	x1, x1, #0x2d8
  409d94:	mov	x0, #0x0                   	// #0
  409d98:	bl	402c20 <dcgettext@plt>
  409d9c:	mov	x2, x0
  409da0:	mov	w1, #0x1                   	// #1
  409da4:	mov	x0, x19
  409da8:	bl	402a90 <__fprintf_chk@plt>
  409dac:	mov	w2, #0x5                   	// #5
  409db0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409db4:	add	x1, x1, #0x308
  409db8:	mov	x0, #0x0                   	// #0
  409dbc:	bl	402c20 <dcgettext@plt>
  409dc0:	mov	x2, x0
  409dc4:	mov	w1, #0x1                   	// #1
  409dc8:	mov	x0, x19
  409dcc:	bl	402a90 <__fprintf_chk@plt>
  409dd0:	mov	w2, #0x5                   	// #5
  409dd4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409dd8:	add	x1, x1, #0x340
  409ddc:	mov	x0, #0x0                   	// #0
  409de0:	bl	402c20 <dcgettext@plt>
  409de4:	mov	x2, x0
  409de8:	mov	w1, #0x1                   	// #1
  409dec:	mov	x0, x19
  409df0:	bl	402a90 <__fprintf_chk@plt>
  409df4:	mov	w0, w20
  409df8:	bl	409ac8 <wcrtomb@plt+0x6d88>
  409dfc:	mov	x0, #0x0                   	// #0
  409e00:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  409e04:	mov	w0, w20
  409e08:	bl	4026c0 <exit@plt>
  409e0c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409e10:	ldr	x19, [x0, #1288]
  409e14:	b	409b88 <wcrtomb@plt+0x6e48>
  409e18:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409e1c:	str	x0, [x1, #1856]
  409e20:	ret
  409e24:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409e28:	str	xzr, [x0, #1856]
  409e2c:	ret
  409e30:	sub	sp, sp, #0x80
  409e34:	stp	x29, x30, [sp, #32]
  409e38:	add	x29, sp, #0x20
  409e3c:	stp	x19, x20, [sp, #48]
  409e40:	stp	x21, x22, [sp, #64]
  409e44:	stp	x23, x24, [sp, #80]
  409e48:	stp	x25, x26, [sp, #96]
  409e4c:	mov	w20, w0
  409e50:	mov	x19, x1
  409e54:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409e58:	add	x0, x0, #0x440
  409e5c:	bl	402cc0 <getenv@plt>
  409e60:	mov	x22, x0
  409e64:	ldr	x0, [x19]
  409e68:	bl	410bac <wcrtomb@plt+0xde6c>
  409e6c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  409e70:	add	x1, x1, #0xdb8
  409e74:	mov	w0, #0x6                   	// #6
  409e78:	bl	402d20 <setlocale@plt>
  409e7c:	bl	409270 <wcrtomb@plt+0x6530>
  409e80:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409e84:	add	x0, x0, #0x8e0
  409e88:	bl	410984 <wcrtomb@plt+0xdc44>
  409e8c:	adrp	x0, 409000 <wcrtomb@plt+0x62c0>
  409e90:	add	x0, x0, #0xaa4
  409e94:	bl	4201f0 <_obstack_memory_used@@Base+0xcec0>
  409e98:	adrp	x21, 420000 <_obstack_memory_used@@Base+0xccd0>
  409e9c:	add	x21, x21, #0x9a8
  409ea0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409ea4:	add	x1, x1, #0x448
  409ea8:	mov	x0, x21
  409eac:	bl	402870 <bindtextdomain@plt>
  409eb0:	mov	x0, x21
  409eb4:	bl	402a70 <textdomain@plt>
  409eb8:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  409ebc:	add	x0, x0, #0xc38
  409ec0:	bl	402cc0 <getenv@plt>
  409ec4:	cmp	x0, #0x0
  409ec8:	cset	w1, ne  // ne = any
  409ecc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409ed0:	str	w1, [x0, #2264]
  409ed4:	cbz	x22, 409f00 <wcrtomb@plt+0x71c0>
  409ed8:	mov	w2, #0xa                   	// #10
  409edc:	mov	x1, #0x0                   	// #0
  409ee0:	mov	x0, x22
  409ee4:	bl	402ad0 <strtol@plt>
  409ee8:	sxtw	x0, w0
  409eec:	cmp	x0, #0x1
  409ef0:	b.ls	409f00 <wcrtomb@plt+0x71c0>  // b.plast
  409ef4:	sub	x0, x0, #0x1
  409ef8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409efc:	str	x0, [x1, #1112]
  409f00:	adrp	x22, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409f04:	add	x22, x22, #0x600
  409f08:	adrp	x21, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409f0c:	add	x21, x21, #0x510
  409f10:	adrp	x23, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409f14:	add	x23, x23, #0x740
  409f18:	mov	w24, #0x1                   	// #1
  409f1c:	mov	x4, #0x0                   	// #0
  409f20:	mov	x3, x22
  409f24:	mov	x2, x21
  409f28:	mov	x1, x19
  409f2c:	mov	w0, w20
  409f30:	bl	402a80 <getopt_long@plt>
  409f34:	cmn	w0, #0x1
  409f38:	b.eq	40a2b4 <wcrtomb@plt+0x7574>  // b.none
  409f3c:	cmp	w0, #0x6e
  409f40:	b.eq	40a08c <wcrtomb@plt+0x734c>  // b.none
  409f44:	b.le	409f6c <wcrtomb@plt+0x722c>
  409f48:	cmp	w0, #0x76
  409f4c:	b.eq	40a144 <wcrtomb@plt+0x7404>  // b.none
  409f50:	b.le	40a030 <wcrtomb@plt+0x72f0>
  409f54:	cmp	w0, #0x100
  409f58:	b.eq	40a13c <wcrtomb@plt+0x73fc>  // b.none
  409f5c:	cmp	w0, #0x101
  409f60:	b.ne	40a078 <wcrtomb@plt+0x7338>  // b.any
  409f64:	strb	w24, [x23, #45]
  409f68:	b	409f1c <wcrtomb@plt+0x71dc>
  409f6c:	cmp	w0, #0x65
  409f70:	b.eq	40a094 <wcrtomb@plt+0x7354>  // b.none
  409f74:	b.le	409fb4 <wcrtomb@plt+0x7274>
  409f78:	cmp	w0, #0x69
  409f7c:	b.eq	40a0c4 <wcrtomb@plt+0x7384>  // b.none
  409f80:	cmp	w0, #0x69
  409f84:	b.le	409ffc <wcrtomb@plt+0x72bc>
  409f88:	cmp	w0, #0x6c
  409f8c:	b.ne	40a06c <wcrtomb@plt+0x732c>  // b.any
  409f90:	mov	w2, #0xa                   	// #10
  409f94:	mov	x1, #0x0                   	// #0
  409f98:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409f9c:	ldr	x0, [x0, #1272]
  409fa0:	bl	402ad0 <strtol@plt>
  409fa4:	sxtw	x0, w0
  409fa8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409fac:	str	x0, [x1, #1112]
  409fb0:	b	409f1c <wcrtomb@plt+0x71dc>
  409fb4:	cmp	w0, #0x46
  409fb8:	b.eq	40a0bc <wcrtomb@plt+0x737c>  // b.none
  409fbc:	cmp	w0, #0x62
  409fc0:	b.ne	409fe8 <wcrtomb@plt+0x72a8>  // b.any
  409fc4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  409fc8:	add	x0, x0, #0x458
  409fcc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409fd0:	add	x1, x1, #0x460
  409fd4:	str	x1, [x0, #16]
  409fd8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  409fdc:	add	x1, x1, #0x468
  409fe0:	str	x1, [x0, #24]
  409fe4:	b	409f1c <wcrtomb@plt+0x71dc>
  409fe8:	cmp	w0, #0x45
  409fec:	b.ne	40a06c <wcrtomb@plt+0x732c>  // b.any
  409ff0:	mov	w0, #0x1                   	// #1
  409ff4:	str	w0, [x23, #40]
  409ff8:	b	409f1c <wcrtomb@plt+0x71dc>
  409ffc:	cmp	w0, #0x66
  40a000:	b.ne	40a01c <wcrtomb@plt+0x72dc>  // b.any
  40a004:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a008:	ldr	x1, [x0, #1272]
  40a00c:	ldr	x0, [x23, #16]
  40a010:	bl	40548c <wcrtomb@plt+0x274c>
  40a014:	str	x0, [x23, #16]
  40a018:	b	409f1c <wcrtomb@plt+0x71dc>
  40a01c:	cmp	w0, #0x68
  40a020:	b.ne	40a06c <wcrtomb@plt+0x732c>  // b.any
  40a024:	str	x27, [sp, #112]
  40a028:	mov	w0, #0x0                   	// #0
  40a02c:	bl	409b6c <wcrtomb@plt+0x6e2c>
  40a030:	cmp	w0, #0x73
  40a034:	b.eq	40a134 <wcrtomb@plt+0x73f4>  // b.none
  40a038:	b.le	40a04c <wcrtomb@plt+0x730c>
  40a03c:	cmp	w0, #0x75
  40a040:	b.ne	40a06c <wcrtomb@plt+0x732c>  // b.any
  40a044:	strb	w24, [x23, #46]
  40a048:	b	409f1c <wcrtomb@plt+0x71dc>
  40a04c:	cmp	w0, #0x70
  40a050:	b.ne	40a064 <wcrtomb@plt+0x7324>  // b.any
  40a054:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a058:	mov	w1, #0x2                   	// #2
  40a05c:	str	w1, [x0, #2264]
  40a060:	b	409f1c <wcrtomb@plt+0x71dc>
  40a064:	cmp	w0, #0x72
  40a068:	b.eq	409ff0 <wcrtomb@plt+0x72b0>  // b.none
  40a06c:	str	x27, [sp, #112]
  40a070:	mov	w0, #0x1                   	// #1
  40a074:	bl	409b6c <wcrtomb@plt+0x6e2c>
  40a078:	cmp	w0, #0x7a
  40a07c:	b.ne	40a06c <wcrtomb@plt+0x732c>  // b.any
  40a080:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a084:	strb	wzr, [x0, #1120]
  40a088:	b	409f1c <wcrtomb@plt+0x71dc>
  40a08c:	strb	w24, [x23, #8]
  40a090:	b	409f1c <wcrtomb@plt+0x71dc>
  40a094:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a098:	ldr	x25, [x0, #1272]
  40a09c:	mov	x0, x25
  40a0a0:	bl	402690 <strlen@plt>
  40a0a4:	mov	x2, x0
  40a0a8:	mov	x1, x25
  40a0ac:	ldr	x0, [x23, #16]
  40a0b0:	bl	405428 <wcrtomb@plt+0x26e8>
  40a0b4:	str	x0, [x23, #16]
  40a0b8:	b	409f1c <wcrtomb@plt+0x71dc>
  40a0bc:	strb	w24, [x23, #24]
  40a0c0:	b	409f1c <wcrtomb@plt+0x71dc>
  40a0c4:	strb	w24, [x23, #25]
  40a0c8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a0cc:	ldr	x25, [x0, #1272]
  40a0d0:	cbz	x25, 40a0f4 <wcrtomb@plt+0x73b4>
  40a0d4:	mov	w1, #0x2a                  	// #42
  40a0d8:	mov	x0, x25
  40a0dc:	bl	402b20 <strchr@plt>
  40a0e0:	cbz	x0, 40a108 <wcrtomb@plt+0x73c8>
  40a0e4:	mov	x0, x25
  40a0e8:	bl	412ecc <wcrtomb@plt+0x1018c>
  40a0ec:	str	x0, [x23, #32]
  40a0f0:	b	409f1c <wcrtomb@plt+0x71dc>
  40a0f4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  40a0f8:	add	x0, x0, #0xa08
  40a0fc:	bl	412ecc <wcrtomb@plt+0x1018c>
  40a100:	str	x0, [x23, #32]
  40a104:	b	409f1c <wcrtomb@plt+0x71dc>
  40a108:	mov	x0, x25
  40a10c:	bl	402690 <strlen@plt>
  40a110:	add	x0, x0, #0x2
  40a114:	bl	412e80 <wcrtomb@plt+0x10140>
  40a118:	str	x0, [x23, #32]
  40a11c:	mov	w1, #0x2a                  	// #42
  40a120:	strb	w1, [x0], #1
  40a124:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a128:	ldr	x1, [x1, #1272]
  40a12c:	bl	402b80 <strcpy@plt>
  40a130:	b	409f1c <wcrtomb@plt+0x71dc>
  40a134:	strb	w24, [x23, #25]
  40a138:	b	409f1c <wcrtomb@plt+0x71dc>
  40a13c:	strb	w24, [x23, #44]
  40a140:	b	409f1c <wcrtomb@plt+0x71dc>
  40a144:	str	x27, [sp, #112]
  40a148:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a14c:	ldr	x25, [x24, #1288]
  40a150:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a154:	ldr	x26, [x0, #1936]
  40a158:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a15c:	ldr	x27, [x0, #1144]
  40a160:	mov	w2, #0x5                   	// #5
  40a164:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a168:	add	x1, x1, #0x470
  40a16c:	mov	x0, #0x0                   	// #0
  40a170:	bl	402c20 <dcgettext@plt>
  40a174:	mov	x19, x0
  40a178:	mov	w2, #0x5                   	// #5
  40a17c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a180:	add	x1, x1, #0x480
  40a184:	mov	x0, #0x0                   	// #0
  40a188:	bl	402c20 <dcgettext@plt>
  40a18c:	mov	x20, x0
  40a190:	mov	w2, #0x5                   	// #5
  40a194:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a198:	add	x1, x1, #0x490
  40a19c:	mov	x0, #0x0                   	// #0
  40a1a0:	bl	402c20 <dcgettext@plt>
  40a1a4:	mov	x21, x0
  40a1a8:	mov	w2, #0x5                   	// #5
  40a1ac:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a1b0:	add	x1, x1, #0x4a0
  40a1b4:	mov	x0, #0x0                   	// #0
  40a1b8:	bl	402c20 <dcgettext@plt>
  40a1bc:	mov	x22, x0
  40a1c0:	mov	w2, #0x5                   	// #5
  40a1c4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a1c8:	add	x1, x1, #0x4b0
  40a1cc:	mov	x0, #0x0                   	// #0
  40a1d0:	bl	402c20 <dcgettext@plt>
  40a1d4:	mov	x23, x0
  40a1d8:	mov	w2, #0x5                   	// #5
  40a1dc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a1e0:	add	x1, x1, #0x4c0
  40a1e4:	mov	x0, #0x0                   	// #0
  40a1e8:	bl	402c20 <dcgettext@plt>
  40a1ec:	str	xzr, [sp, #16]
  40a1f0:	str	x0, [sp, #8]
  40a1f4:	str	x23, [sp]
  40a1f8:	mov	x7, x22
  40a1fc:	mov	x6, x21
  40a200:	mov	x5, x20
  40a204:	mov	x4, x19
  40a208:	mov	x3, x27
  40a20c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a210:	add	x2, x2, #0x4d0
  40a214:	mov	x1, x26
  40a218:	mov	x0, x25
  40a21c:	bl	412b64 <wcrtomb@plt+0xfe24>
  40a220:	ldr	x0, [x24, #1288]
  40a224:	ldr	x1, [x0, #40]
  40a228:	ldr	x2, [x0, #48]
  40a22c:	cmp	x1, x2
  40a230:	b.cs	40a29c <wcrtomb@plt+0x755c>  // b.hs, b.nlast
  40a234:	add	x2, x1, #0x1
  40a238:	str	x2, [x0, #40]
  40a23c:	mov	w0, #0xa                   	// #10
  40a240:	strb	w0, [x1]
  40a244:	mov	w2, #0x5                   	// #5
  40a248:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a24c:	add	x1, x1, #0x4d8
  40a250:	mov	x0, #0x0                   	// #0
  40a254:	bl	402c20 <dcgettext@plt>
  40a258:	bl	402a40 <puts@plt>
  40a25c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a260:	ldr	x0, [x0, #1288]
  40a264:	ldr	x1, [x0, #40]
  40a268:	ldr	x2, [x0, #48]
  40a26c:	cmp	x1, x2
  40a270:	b.cs	40a2a8 <wcrtomb@plt+0x7568>  // b.hs, b.nlast
  40a274:	add	x2, x1, #0x1
  40a278:	str	x2, [x0, #40]
  40a27c:	mov	w0, #0xa                   	// #10
  40a280:	strb	w0, [x1]
  40a284:	mov	w0, #0x0                   	// #0
  40a288:	bl	409ac8 <wcrtomb@plt+0x6d88>
  40a28c:	mov	x0, #0x0                   	// #0
  40a290:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  40a294:	mov	w0, #0x0                   	// #0
  40a298:	bl	4026c0 <exit@plt>
  40a29c:	mov	w1, #0xa                   	// #10
  40a2a0:	bl	402a20 <__overflow@plt>
  40a2a4:	b	40a244 <wcrtomb@plt+0x7504>
  40a2a8:	mov	w1, #0xa                   	// #10
  40a2ac:	bl	402a20 <__overflow@plt>
  40a2b0:	b	40a284 <wcrtomb@plt+0x7544>
  40a2b4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a2b8:	ldr	x0, [x0, #1872]
  40a2bc:	cbz	x0, 40a328 <wcrtomb@plt+0x75e8>
  40a2c0:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a2c4:	add	x20, x20, #0x740
  40a2c8:	ldr	x0, [x20, #16]
  40a2cc:	bl	405544 <wcrtomb@plt+0x2804>
  40a2d0:	ldrb	w0, [x20, #45]
  40a2d4:	cbnz	w0, 40a378 <wcrtomb@plt+0x7638>
  40a2d8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a2dc:	ldrsw	x1, [x0, #1280]
  40a2e0:	adrp	x20, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a2e4:	add	x20, x20, #0x740
  40a2e8:	add	x1, x19, x1, lsl #3
  40a2ec:	ldr	x0, [x20, #16]
  40a2f0:	bl	409060 <wcrtomb@plt+0x6320>
  40a2f4:	mov	w19, w0
  40a2f8:	ldr	x0, [x20, #16]
  40a2fc:	bl	405724 <wcrtomb@plt+0x29e4>
  40a300:	mov	x0, #0x0                   	// #0
  40a304:	bl	40ab3c <wcrtomb@plt+0x7dfc>
  40a308:	mov	w0, w19
  40a30c:	ldp	x19, x20, [sp, #48]
  40a310:	ldp	x21, x22, [sp, #64]
  40a314:	ldp	x23, x24, [sp, #80]
  40a318:	ldp	x25, x26, [sp, #96]
  40a31c:	ldp	x29, x30, [sp, #32]
  40a320:	add	sp, sp, #0x80
  40a324:	ret
  40a328:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a32c:	ldr	w0, [x0, #1280]
  40a330:	cmp	w0, w20
  40a334:	b.ge	40a36c <wcrtomb@plt+0x762c>  // b.tcont
  40a338:	add	w2, w0, #0x1
  40a33c:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a340:	str	w2, [x1, #1280]
  40a344:	ldr	x20, [x19, w0, sxtw #3]
  40a348:	mov	x0, x20
  40a34c:	bl	402690 <strlen@plt>
  40a350:	mov	x2, x0
  40a354:	mov	x1, x20
  40a358:	mov	x0, #0x0                   	// #0
  40a35c:	bl	405428 <wcrtomb@plt+0x26e8>
  40a360:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a364:	str	x0, [x1, #1872]
  40a368:	b	40a2c0 <wcrtomb@plt+0x7580>
  40a36c:	str	x27, [sp, #112]
  40a370:	mov	w0, #0x1                   	// #1
  40a374:	bl	409b6c <wcrtomb@plt+0x6e2c>
  40a378:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a37c:	ldr	x0, [x0, #1872]
  40a380:	bl	4067c0 <wcrtomb@plt+0x3a80>
  40a384:	b	40a2d8 <wcrtomb@plt+0x7598>
  40a388:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a38c:	ldr	x1, [x1, #1904]
  40a390:	cbz	x1, 40a3a8 <wcrtomb@plt+0x7668>
  40a394:	ldr	x2, [x1]
  40a398:	cmp	x2, x0
  40a39c:	b.eq	40a3ec <wcrtomb@plt+0x76ac>  // b.none
  40a3a0:	ldr	x1, [x1, #16]
  40a3a4:	cbnz	x1, 40a394 <wcrtomb@plt+0x7654>
  40a3a8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a3ac:	ldr	x1, [x1, #1296]
  40a3b0:	cmp	x1, x0
  40a3b4:	b.eq	40a3f4 <wcrtomb@plt+0x76b4>  // b.none
  40a3b8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a3bc:	ldr	x1, [x1, #1288]
  40a3c0:	cmp	x1, x0
  40a3c4:	b.eq	40a400 <wcrtomb@plt+0x76c0>  // b.none
  40a3c8:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a3cc:	ldr	x3, [x1, #1264]
  40a3d0:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a3d4:	add	x2, x2, #0x880
  40a3d8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a3dc:	add	x1, x1, #0x868
  40a3e0:	cmp	x3, x0
  40a3e4:	csel	x0, x1, x2, ne  // ne = any
  40a3e8:	b	40a3f0 <wcrtomb@plt+0x76b0>
  40a3ec:	ldr	x0, [x1, #8]
  40a3f0:	ret
  40a3f4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a3f8:	add	x0, x0, #0x860
  40a3fc:	b	40a3f0 <wcrtomb@plt+0x76b0>
  40a400:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a404:	add	x0, x0, #0x878
  40a408:	b	40a3f0 <wcrtomb@plt+0x76b0>
  40a40c:	stp	x29, x30, [sp, #-48]!
  40a410:	mov	x29, sp
  40a414:	stp	x19, x20, [sp, #16]
  40a418:	str	x21, [sp, #32]
  40a41c:	mov	x20, x0
  40a420:	mov	x21, x1
  40a424:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a428:	ldr	x19, [x0, #1904]
  40a42c:	cbz	x19, 40a444 <wcrtomb@plt+0x7704>
  40a430:	ldr	x2, [x19]
  40a434:	cmp	x2, x20
  40a438:	b.eq	40a468 <wcrtomb@plt+0x7728>  // b.none
  40a43c:	ldr	x19, [x19, #16]
  40a440:	cbnz	x19, 40a430 <wcrtomb@plt+0x76f0>
  40a444:	mov	x1, #0x20                  	// #32
  40a448:	mov	x0, #0x1                   	// #1
  40a44c:	bl	412e48 <wcrtomb@plt+0x10108>
  40a450:	mov	x19, x0
  40a454:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a458:	ldr	x1, [x0, #1904]
  40a45c:	str	x1, [x19, #16]
  40a460:	str	x19, [x0, #1904]
  40a464:	b	40a470 <wcrtomb@plt+0x7730>
  40a468:	ldr	x0, [x19, #8]
  40a46c:	bl	402ae0 <free@plt>
  40a470:	mov	x0, x21
  40a474:	bl	412ecc <wcrtomb@plt+0x1018c>
  40a478:	str	x0, [x19, #8]
  40a47c:	str	x20, [x19]
  40a480:	ldrb	w0, [x19, #24]
  40a484:	and	w0, w0, #0xfffffffe
  40a488:	strb	w0, [x19, #24]
  40a48c:	ldp	x19, x20, [sp, #16]
  40a490:	ldr	x21, [sp, #32]
  40a494:	ldp	x29, x30, [sp], #48
  40a498:	ret
  40a49c:	stp	x29, x30, [sp, #-48]!
  40a4a0:	mov	x29, sp
  40a4a4:	stp	x19, x20, [sp, #16]
  40a4a8:	mov	x20, x0
  40a4ac:	ldr	x0, [x0]
  40a4b0:	cmp	x0, x1
  40a4b4:	b.cs	40a4e8 <wcrtomb@plt+0x77a8>  // b.hs, b.nlast
  40a4b8:	str	x21, [sp, #32]
  40a4bc:	mov	x19, x1
  40a4c0:	lsl	x21, x0, #1
  40a4c4:	cmp	x1, x0, lsl #1
  40a4c8:	b.cc	40a4f4 <wcrtomb@plt+0x77b4>  // b.lo, b.ul, b.last
  40a4cc:	ldr	x0, [x20, #16]
  40a4d0:	tbnz	x19, #63, 40a50c <wcrtomb@plt+0x77cc>
  40a4d4:	mov	x1, x19
  40a4d8:	bl	412cfc <wcrtomb@plt+0xffbc>
  40a4dc:	str	x19, [x20]
  40a4e0:	str	x0, [x20, #16]
  40a4e4:	ldr	x21, [sp, #32]
  40a4e8:	ldp	x19, x20, [sp, #16]
  40a4ec:	ldp	x29, x30, [sp], #48
  40a4f0:	ret
  40a4f4:	mov	x1, x21
  40a4f8:	ldr	x0, [x20, #16]
  40a4fc:	bl	402930 <realloc@plt>
  40a500:	cbz	x0, 40a4cc <wcrtomb@plt+0x778c>
  40a504:	mov	x19, x21
  40a508:	b	40a4dc <wcrtomb@plt+0x779c>
  40a50c:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40a510:	stp	x29, x30, [sp, #-368]!
  40a514:	mov	x29, sp
  40a518:	stp	x19, x20, [sp, #16]
  40a51c:	stp	x21, x22, [sp, #32]
  40a520:	stp	x23, x24, [sp, #48]
  40a524:	stp	x25, x26, [sp, #64]
  40a528:	mov	x20, x0
  40a52c:	str	x1, [sp, #312]
  40a530:	str	x2, [sp, #320]
  40a534:	str	x3, [sp, #328]
  40a538:	str	x4, [sp, #336]
  40a53c:	str	x5, [sp, #344]
  40a540:	str	x6, [sp, #352]
  40a544:	str	x7, [sp, #360]
  40a548:	str	q0, [sp, #176]
  40a54c:	str	q1, [sp, #192]
  40a550:	str	q2, [sp, #208]
  40a554:	str	q3, [sp, #224]
  40a558:	str	q4, [sp, #240]
  40a55c:	str	q5, [sp, #256]
  40a560:	str	q6, [sp, #272]
  40a564:	str	q7, [sp, #288]
  40a568:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a56c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a570:	ldr	x3, [x0, #1936]
  40a574:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a578:	add	x2, x2, #0x888
  40a57c:	mov	w1, #0x1                   	// #1
  40a580:	ldr	x0, [x19, #1264]
  40a584:	bl	402a90 <__fprintf_chk@plt>
  40a588:	add	x0, sp, #0x170
  40a58c:	str	x0, [sp, #144]
  40a590:	str	x0, [sp, #152]
  40a594:	add	x0, sp, #0x130
  40a598:	str	x0, [sp, #160]
  40a59c:	mov	w0, #0xffffffc8            	// #-56
  40a5a0:	str	w0, [sp, #168]
  40a5a4:	mov	w0, #0xffffff80            	// #-128
  40a5a8:	str	w0, [sp, #172]
  40a5ac:	ldp	x2, x3, [sp, #144]
  40a5b0:	stp	x2, x3, [sp, #112]
  40a5b4:	ldp	x0, x1, [sp, #160]
  40a5b8:	stp	x0, x1, [sp, #128]
  40a5bc:	stp	x2, x3, [sp, #80]
  40a5c0:	stp	x0, x1, [sp, #96]
  40a5c4:	add	x3, sp, #0x50
  40a5c8:	mov	x2, x20
  40a5cc:	mov	w1, #0x1                   	// #1
  40a5d0:	ldr	x0, [x19, #1264]
  40a5d4:	bl	402900 <__vfprintf_chk@plt>
  40a5d8:	ldr	x0, [x19, #1264]
  40a5dc:	ldr	x1, [x0, #40]
  40a5e0:	ldr	x2, [x0, #48]
  40a5e4:	cmp	x1, x2
  40a5e8:	b.cs	40a620 <wcrtomb@plt+0x78e0>  // b.hs, b.nlast
  40a5ec:	add	x2, x1, #0x1
  40a5f0:	str	x2, [x0, #40]
  40a5f4:	mov	w0, #0xa                   	// #10
  40a5f8:	strb	w0, [x1]
  40a5fc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a600:	ldr	x0, [x0, #1904]
  40a604:	cbz	x0, 40a6ac <wcrtomb@plt+0x796c>
  40a608:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a60c:	adrp	x24, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40a610:	adrp	x22, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a614:	add	x22, x22, #0x890
  40a618:	mov	w23, #0x5                   	// #5
  40a61c:	b	40a63c <wcrtomb@plt+0x78fc>
  40a620:	mov	w1, #0xa                   	// #10
  40a624:	bl	402a20 <__overflow@plt>
  40a628:	b	40a5fc <wcrtomb@plt+0x78bc>
  40a62c:	ldr	x0, [x19, #1904]
  40a630:	ldr	x0, [x0, #16]
  40a634:	str	x0, [x19, #1904]
  40a638:	cbz	x0, 40a6ac <wcrtomb@plt+0x796c>
  40a63c:	ldrb	w1, [x0, #24]
  40a640:	tbz	w1, #0, 40a62c <wcrtomb@plt+0x78ec>
  40a644:	ldr	x0, [x0]
  40a648:	bl	4027a0 <fclose@plt>
  40a64c:	bl	402cb0 <__errno_location@plt>
  40a650:	mov	x20, x0
  40a654:	str	wzr, [x0]
  40a658:	ldr	x21, [x19, #1904]
  40a65c:	ldr	x0, [x21, #8]
  40a660:	bl	402cd0 <unlink@plt>
  40a664:	ldr	w0, [x20]
  40a668:	cbz	w0, 40a62c <wcrtomb@plt+0x78ec>
  40a66c:	ldr	x26, [x24, #1264]
  40a670:	mov	w2, w23
  40a674:	mov	x1, x22
  40a678:	mov	x0, #0x0                   	// #0
  40a67c:	bl	402c20 <dcgettext@plt>
  40a680:	mov	x25, x0
  40a684:	ldr	x21, [x21, #8]
  40a688:	ldr	w0, [x20]
  40a68c:	bl	4029a0 <strerror@plt>
  40a690:	mov	x4, x0
  40a694:	mov	x3, x21
  40a698:	mov	x2, x25
  40a69c:	mov	w1, #0x1                   	// #1
  40a6a0:	mov	x0, x26
  40a6a4:	bl	402a90 <__fprintf_chk@plt>
  40a6a8:	b	40a62c <wcrtomb@plt+0x78ec>
  40a6ac:	mov	w0, #0x4                   	// #4
  40a6b0:	bl	4026c0 <exit@plt>
  40a6b4:	stp	x29, x30, [sp, #-48]!
  40a6b8:	mov	x29, sp
  40a6bc:	stp	x19, x20, [sp, #16]
  40a6c0:	str	x21, [sp, #32]
  40a6c4:	mov	x20, x0
  40a6c8:	mov	w21, w2
  40a6cc:	bl	4027d0 <fopen@plt>
  40a6d0:	mov	x19, x0
  40a6d4:	cbz	x0, 40a6f4 <wcrtomb@plt+0x79b4>
  40a6d8:	mov	x1, x20
  40a6dc:	bl	40a40c <wcrtomb@plt+0x76cc>
  40a6e0:	mov	x0, x19
  40a6e4:	ldp	x19, x20, [sp, #16]
  40a6e8:	ldr	x21, [sp, #32]
  40a6ec:	ldp	x29, x30, [sp], #48
  40a6f0:	ret
  40a6f4:	cbz	w21, 40a6e0 <wcrtomb@plt+0x79a0>
  40a6f8:	mov	w2, #0x5                   	// #5
  40a6fc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a700:	add	x1, x1, #0x8a8
  40a704:	mov	x0, #0x0                   	// #0
  40a708:	bl	402c20 <dcgettext@plt>
  40a70c:	mov	x19, x0
  40a710:	bl	402cb0 <__errno_location@plt>
  40a714:	ldr	w0, [x0]
  40a718:	bl	4029a0 <strerror@plt>
  40a71c:	mov	x2, x0
  40a720:	mov	x1, x20
  40a724:	mov	x0, x19
  40a728:	bl	40a510 <wcrtomb@plt+0x77d0>
  40a72c:	stp	x29, x30, [sp, #-48]!
  40a730:	mov	x29, sp
  40a734:	stp	x19, x20, [sp, #16]
  40a738:	str	x21, [sp, #32]
  40a73c:	mov	x21, x1
  40a740:	mov	w20, w3
  40a744:	mov	x1, x2
  40a748:	bl	4028e0 <fdopen@plt>
  40a74c:	mov	x19, x0
  40a750:	cbz	x0, 40a770 <wcrtomb@plt+0x7a30>
  40a754:	mov	x1, x21
  40a758:	bl	40a40c <wcrtomb@plt+0x76cc>
  40a75c:	mov	x0, x19
  40a760:	ldp	x19, x20, [sp, #16]
  40a764:	ldr	x21, [sp, #32]
  40a768:	ldp	x29, x30, [sp], #48
  40a76c:	ret
  40a770:	cbz	w20, 40a75c <wcrtomb@plt+0x7a1c>
  40a774:	mov	w2, #0x5                   	// #5
  40a778:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a77c:	add	x1, x1, #0x8c8
  40a780:	mov	x0, #0x0                   	// #0
  40a784:	bl	402c20 <dcgettext@plt>
  40a788:	mov	x19, x0
  40a78c:	bl	402cb0 <__errno_location@plt>
  40a790:	ldr	w0, [x0]
  40a794:	bl	4029a0 <strerror@plt>
  40a798:	mov	x2, x0
  40a79c:	mov	x1, x21
  40a7a0:	mov	x0, x19
  40a7a4:	bl	40a510 <wcrtomb@plt+0x77d0>
  40a7a8:	stp	x29, x30, [sp, #-64]!
  40a7ac:	mov	x29, sp
  40a7b0:	stp	x19, x20, [sp, #16]
  40a7b4:	stp	x21, x22, [sp, #32]
  40a7b8:	str	x23, [sp, #48]
  40a7bc:	mov	x23, x0
  40a7c0:	mov	x20, x1
  40a7c4:	mov	x21, x2
  40a7c8:	mov	x22, x3
  40a7cc:	mov	x0, x1
  40a7d0:	bl	402690 <strlen@plt>
  40a7d4:	mov	x19, x0
  40a7d8:	mov	x0, x21
  40a7dc:	bl	402690 <strlen@plt>
  40a7e0:	add	x0, x19, x0
  40a7e4:	add	x0, x0, #0x8
  40a7e8:	bl	412c80 <wcrtomb@plt+0xff40>
  40a7ec:	mov	x19, x0
  40a7f0:	mov	x5, x21
  40a7f4:	mov	x4, x20
  40a7f8:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a7fc:	add	x3, x3, #0x8e8
  40a800:	mov	x2, #0xffffffffffffffff    	// #-1
  40a804:	mov	w1, #0x1                   	// #1
  40a808:	bl	4026a0 <__sprintf_chk@plt>
  40a80c:	mov	w0, #0x3f                  	// #63
  40a810:	bl	402c90 <umask@plt>
  40a814:	mov	w21, w0
  40a818:	mov	w1, #0x0                   	// #0
  40a81c:	mov	x0, x19
  40a820:	bl	4029f0 <mkostemp@plt>
  40a824:	mov	w20, w0
  40a828:	mov	w0, w21
  40a82c:	bl	402c90 <umask@plt>
  40a830:	cmn	w20, #0x1
  40a834:	b.eq	40a86c <wcrtomb@plt+0x7b2c>  // b.none
  40a838:	str	x19, [x23]
  40a83c:	mov	x1, x22
  40a840:	mov	w0, w20
  40a844:	bl	4028e0 <fdopen@plt>
  40a848:	mov	x20, x0
  40a84c:	mov	x1, x19
  40a850:	bl	40a40c <wcrtomb@plt+0x76cc>
  40a854:	mov	x0, x20
  40a858:	ldp	x19, x20, [sp, #16]
  40a85c:	ldp	x21, x22, [sp, #32]
  40a860:	ldr	x23, [sp, #48]
  40a864:	ldp	x29, x30, [sp], #64
  40a868:	ret
  40a86c:	mov	w2, #0x5                   	// #5
  40a870:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xccd0>
  40a874:	add	x1, x1, #0x9b0
  40a878:	mov	x0, #0x0                   	// #0
  40a87c:	bl	402c20 <dcgettext@plt>
  40a880:	mov	x20, x0
  40a884:	bl	402cb0 <__errno_location@plt>
  40a888:	ldr	w0, [x0]
  40a88c:	bl	4029a0 <strerror@plt>
  40a890:	mov	x2, x0
  40a894:	mov	x1, x19
  40a898:	mov	x0, x20
  40a89c:	bl	40a510 <wcrtomb@plt+0x77d0>
  40a8a0:	stp	x29, x30, [sp, #-48]!
  40a8a4:	mov	x29, sp
  40a8a8:	stp	x19, x20, [sp, #16]
  40a8ac:	stp	x21, x22, [sp, #32]
  40a8b0:	mov	x22, x0
  40a8b4:	mov	x20, x1
  40a8b8:	mov	x21, x2
  40a8bc:	mov	x19, x3
  40a8c0:	mov	x0, x3
  40a8c4:	bl	402b90 <clearerr_unlocked@plt>
  40a8c8:	cbz	x20, 40a8e8 <wcrtomb@plt+0x7ba8>
  40a8cc:	mov	x3, x19
  40a8d0:	mov	x2, x21
  40a8d4:	mov	x1, x20
  40a8d8:	mov	x0, x22
  40a8dc:	bl	402680 <fwrite_unlocked@plt>
  40a8e0:	cmp	x21, x0
  40a8e4:	b.ne	40a8f8 <wcrtomb@plt+0x7bb8>  // b.any
  40a8e8:	ldp	x19, x20, [sp, #16]
  40a8ec:	ldp	x21, x22, [sp, #32]
  40a8f0:	ldp	x29, x30, [sp], #48
  40a8f4:	ret
  40a8f8:	mov	w4, #0x5                   	// #5
  40a8fc:	mov	x3, x21
  40a900:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a904:	add	x2, x2, #0x8f8
  40a908:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a90c:	add	x1, x1, #0x920
  40a910:	mov	x0, #0x0                   	// #0
  40a914:	bl	402b70 <dcngettext@plt>
  40a918:	mov	x20, x0
  40a91c:	mov	x0, x19
  40a920:	bl	40a388 <wcrtomb@plt+0x7648>
  40a924:	mov	x19, x0
  40a928:	bl	402cb0 <__errno_location@plt>
  40a92c:	ldr	w0, [x0]
  40a930:	bl	4029a0 <strerror@plt>
  40a934:	mov	x3, x0
  40a938:	mov	x2, x19
  40a93c:	mov	x1, x21
  40a940:	mov	x0, x20
  40a944:	bl	40a510 <wcrtomb@plt+0x77d0>
  40a948:	stp	x29, x30, [sp, #-48]!
  40a94c:	mov	x29, sp
  40a950:	stp	x19, x20, [sp, #16]
  40a954:	stp	x21, x22, [sp, #32]
  40a958:	mov	x22, x0
  40a95c:	mov	x21, x1
  40a960:	mov	x19, x2
  40a964:	mov	x20, x3
  40a968:	mov	x0, x3
  40a96c:	bl	402b90 <clearerr_unlocked@plt>
  40a970:	cbz	x21, 40a998 <wcrtomb@plt+0x7c58>
  40a974:	mov	x3, x20
  40a978:	mov	x2, x19
  40a97c:	mov	x1, x21
  40a980:	mov	x0, x22
  40a984:	bl	402a50 <fread_unlocked@plt>
  40a988:	mov	x19, x0
  40a98c:	cbnz	x0, 40a998 <wcrtomb@plt+0x7c58>
  40a990:	ldr	w0, [x20]
  40a994:	tbnz	w0, #5, 40a9ac <wcrtomb@plt+0x7c6c>
  40a998:	mov	x0, x19
  40a99c:	ldp	x19, x20, [sp, #16]
  40a9a0:	ldp	x21, x22, [sp, #32]
  40a9a4:	ldp	x29, x30, [sp], #48
  40a9a8:	ret
  40a9ac:	mov	w2, #0x5                   	// #5
  40a9b0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40a9b4:	add	x1, x1, #0x948
  40a9b8:	mov	x0, #0x0                   	// #0
  40a9bc:	bl	402c20 <dcgettext@plt>
  40a9c0:	mov	x19, x0
  40a9c4:	mov	x0, x20
  40a9c8:	bl	40a388 <wcrtomb@plt+0x7648>
  40a9cc:	mov	x20, x0
  40a9d0:	bl	402cb0 <__errno_location@plt>
  40a9d4:	ldr	w0, [x0]
  40a9d8:	bl	4029a0 <strerror@plt>
  40a9dc:	mov	x2, x0
  40a9e0:	mov	x1, x20
  40a9e4:	mov	x0, x19
  40a9e8:	bl	40a510 <wcrtomb@plt+0x77d0>
  40a9ec:	stp	x29, x30, [sp, #-32]!
  40a9f0:	mov	x29, sp
  40a9f4:	stp	x19, x20, [sp, #16]
  40a9f8:	mov	x19, x3
  40a9fc:	ldr	w3, [x3]
  40aa00:	tbz	w3, #5, 40aa44 <wcrtomb@plt+0x7d04>
  40aa04:	mov	w2, #0x5                   	// #5
  40aa08:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40aa0c:	add	x1, x1, #0x948
  40aa10:	mov	x0, #0x0                   	// #0
  40aa14:	bl	402c20 <dcgettext@plt>
  40aa18:	mov	x20, x0
  40aa1c:	mov	x0, x19
  40aa20:	bl	40a388 <wcrtomb@plt+0x7648>
  40aa24:	mov	x19, x0
  40aa28:	bl	402cb0 <__errno_location@plt>
  40aa2c:	ldr	w0, [x0]
  40aa30:	bl	4029a0 <strerror@plt>
  40aa34:	mov	x2, x0
  40aa38:	mov	x1, x19
  40aa3c:	mov	x0, x20
  40aa40:	bl	40a510 <wcrtomb@plt+0x77d0>
  40aa44:	and	w2, w2, #0xff
  40aa48:	mov	x3, x19
  40aa4c:	bl	402820 <getdelim@plt>
  40aa50:	ldr	w1, [x19]
  40aa54:	tbnz	w1, #5, 40aa04 <wcrtomb@plt+0x7cc4>
  40aa58:	ldp	x19, x20, [sp, #16]
  40aa5c:	ldp	x29, x30, [sp], #32
  40aa60:	ret
  40aa64:	stp	x29, x30, [sp, #-32]!
  40aa68:	mov	x29, sp
  40aa6c:	stp	x19, x20, [sp, #16]
  40aa70:	mov	x19, x0
  40aa74:	bl	402760 <__fwriting@plt>
  40aa78:	cbnz	w0, 40aa88 <wcrtomb@plt+0x7d48>
  40aa7c:	ldp	x19, x20, [sp, #16]
  40aa80:	ldp	x29, x30, [sp], #32
  40aa84:	ret
  40aa88:	mov	x0, x19
  40aa8c:	bl	402b90 <clearerr_unlocked@plt>
  40aa90:	mov	x0, x19
  40aa94:	bl	402b60 <fflush_unlocked@plt>
  40aa98:	cmn	w0, #0x1
  40aa9c:	b.ne	40aa7c <wcrtomb@plt+0x7d3c>  // b.any
  40aaa0:	bl	402cb0 <__errno_location@plt>
  40aaa4:	ldr	w20, [x0]
  40aaa8:	cmp	w20, #0x9
  40aaac:	b.eq	40aa7c <wcrtomb@plt+0x7d3c>  // b.none
  40aab0:	mov	x0, x19
  40aab4:	bl	40a388 <wcrtomb@plt+0x7648>
  40aab8:	mov	x19, x0
  40aabc:	mov	w0, w20
  40aac0:	bl	4029a0 <strerror@plt>
  40aac4:	mov	x2, x0
  40aac8:	mov	x1, x19
  40aacc:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40aad0:	add	x0, x0, #0x960
  40aad4:	bl	40a510 <wcrtomb@plt+0x77d0>
  40aad8:	stp	x29, x30, [sp, #-32]!
  40aadc:	mov	x29, sp
  40aae0:	str	x19, [sp, #16]
  40aae4:	mov	x19, x0
  40aae8:	bl	40aa64 <wcrtomb@plt+0x7d24>
  40aaec:	mov	x0, x19
  40aaf0:	bl	402b90 <clearerr_unlocked@plt>
  40aaf4:	mov	x0, x19
  40aaf8:	bl	4027a0 <fclose@plt>
  40aafc:	cmn	w0, #0x1
  40ab00:	b.eq	40ab10 <wcrtomb@plt+0x7dd0>  // b.none
  40ab04:	ldr	x19, [sp, #16]
  40ab08:	ldp	x29, x30, [sp], #32
  40ab0c:	ret
  40ab10:	mov	x0, x19
  40ab14:	bl	40a388 <wcrtomb@plt+0x7648>
  40ab18:	mov	x19, x0
  40ab1c:	bl	402cb0 <__errno_location@plt>
  40ab20:	ldr	w0, [x0]
  40ab24:	bl	4029a0 <strerror@plt>
  40ab28:	mov	x2, x0
  40ab2c:	mov	x1, x19
  40ab30:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ab34:	add	x0, x0, #0x978
  40ab38:	bl	40a510 <wcrtomb@plt+0x77d0>
  40ab3c:	stp	x29, x30, [sp, #-80]!
  40ab40:	mov	x29, sp
  40ab44:	stp	x19, x20, [sp, #16]
  40ab48:	mov	x20, x0
  40ab4c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40ab50:	ldr	x19, [x0, #1904]
  40ab54:	str	x19, [sp, #64]
  40ab58:	cbz	x19, 40abac <wcrtomb@plt+0x7e6c>
  40ab5c:	str	x21, [sp, #32]
  40ab60:	add	x21, sp, #0x30
  40ab64:	b	40ab90 <wcrtomb@plt+0x7e50>
  40ab68:	ldr	x0, [x19]
  40ab6c:	bl	40aad8 <wcrtomb@plt+0x7d98>
  40ab70:	ldr	x0, [x19, #16]
  40ab74:	str	x0, [x21, #16]
  40ab78:	ldr	x0, [x19, #8]
  40ab7c:	bl	402ae0 <free@plt>
  40ab80:	mov	x0, x19
  40ab84:	bl	402ae0 <free@plt>
  40ab88:	ldr	x19, [x21, #16]
  40ab8c:	cbz	x19, 40aba8 <wcrtomb@plt+0x7e68>
  40ab90:	cbz	x20, 40ab68 <wcrtomb@plt+0x7e28>
  40ab94:	ldr	x0, [x19]
  40ab98:	cmp	x0, x20
  40ab9c:	b.eq	40ab68 <wcrtomb@plt+0x7e28>  // b.none
  40aba0:	mov	x21, x19
  40aba4:	b	40ab88 <wcrtomb@plt+0x7e48>
  40aba8:	ldr	x21, [sp, #32]
  40abac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40abb0:	ldr	x1, [sp, #64]
  40abb4:	str	x1, [x0, #1904]
  40abb8:	cbz	x20, 40abc8 <wcrtomb@plt+0x7e88>
  40abbc:	ldp	x19, x20, [sp, #16]
  40abc0:	ldp	x29, x30, [sp], #80
  40abc4:	ret
  40abc8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40abcc:	ldr	x0, [x0, #1288]
  40abd0:	bl	40aad8 <wcrtomb@plt+0x7d98>
  40abd4:	b	40abbc <wcrtomb@plt+0x7e7c>
  40abd8:	stp	x29, x30, [sp, #-208]!
  40abdc:	mov	x29, sp
  40abe0:	stp	x19, x20, [sp, #16]
  40abe4:	stp	x21, x22, [sp, #32]
  40abe8:	stp	x23, x24, [sp, #48]
  40abec:	str	x25, [sp, #64]
  40abf0:	mov	x22, x0
  40abf4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40abf8:	ldr	w0, [x0, #1912]
  40abfc:	cbz	w0, 40ac10 <wcrtomb@plt+0x7ed0>
  40ac00:	mov	w23, #0xa000                	// #40960
  40ac04:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40ac08:	add	x19, x19, #0x770
  40ac0c:	b	40acf4 <wcrtomb@plt+0x7fb4>
  40ac10:	mov	x0, #0x1001                	// #4097
  40ac14:	bl	412e80 <wcrtomb@plt+0x10140>
  40ac18:	adrp	x19, 438000 <_obstack_memory_used@@Base+0x24cd0>
  40ac1c:	add	x19, x19, #0x770
  40ac20:	str	x0, [x19, #16]
  40ac24:	mov	x0, #0x1001                	// #4097
  40ac28:	bl	412e80 <wcrtomb@plt+0x10140>
  40ac2c:	str	x0, [x19, #24]
  40ac30:	mov	w0, #0x1001                	// #4097
  40ac34:	str	w0, [x19, #8]
  40ac38:	b	40ac00 <wcrtomb@plt+0x7ec0>
  40ac3c:	lsl	w0, w0, #1
  40ac40:	str	w0, [x19, #8]
  40ac44:	sxtw	x1, w0
  40ac48:	ldr	x0, [x19, #16]
  40ac4c:	bl	412cfc <wcrtomb@plt+0xffbc>
  40ac50:	str	x0, [x19, #16]
  40ac54:	ldrsw	x1, [x19, #8]
  40ac58:	ldr	x0, [x19, #24]
  40ac5c:	bl	412cfc <wcrtomb@plt+0xffbc>
  40ac60:	str	x0, [x19, #24]
  40ac64:	ldr	x21, [x19, #24]
  40ac68:	ldr	w20, [x19, #8]
  40ac6c:	sxtw	x2, w20
  40ac70:	mov	x1, x21
  40ac74:	mov	x0, x22
  40ac78:	bl	402700 <readlink@plt>
  40ac7c:	mov	w24, w0
  40ac80:	cmp	w20, w0
  40ac84:	b.eq	40ac3c <wcrtomb@plt+0x7efc>  // b.none
  40ac88:	tbnz	w0, #31, 40ad3c <wcrtomb@plt+0x7ffc>
  40ac8c:	strb	wzr, [x21, w0, sxtw]
  40ac90:	ldrb	w0, [x21]
  40ac94:	cmp	w0, #0x2f
  40ac98:	b.eq	40acf0 <wcrtomb@plt+0x7fb0>  // b.none
  40ac9c:	mov	w1, #0x2f                  	// #47
  40aca0:	mov	x0, x22
  40aca4:	bl	4029b0 <strrchr@plt>
  40aca8:	cbz	x0, 40acf0 <wcrtomb@plt+0x7fb0>
  40acac:	sub	x0, x0, x22
  40acb0:	add	w25, w0, #0x1
  40acb4:	add	w0, w24, w25
  40acb8:	cmp	w20, w0
  40acbc:	b.le	40ad70 <wcrtomb@plt+0x8030>
  40acc0:	ldr	x21, [x19, #16]
  40acc4:	cmp	x21, x22
  40acc8:	b.eq	40acdc <wcrtomb@plt+0x7f9c>  // b.none
  40accc:	sxtw	x2, w25
  40acd0:	mov	x1, x22
  40acd4:	mov	x0, x21
  40acd8:	bl	402650 <memcpy@plt>
  40acdc:	add	w2, w24, #0x1
  40ace0:	sxtw	x2, w2
  40ace4:	ldr	x1, [x19, #24]
  40ace8:	add	x0, x21, w25, sxtw
  40acec:	bl	402650 <memcpy@plt>
  40acf0:	mov	x22, x21
  40acf4:	add	x2, sp, #0x50
  40acf8:	mov	x1, x22
  40acfc:	mov	w0, #0x0                   	// #0
  40ad00:	bl	402ba0 <__lxstat@plt>
  40ad04:	cbnz	w0, 40ad9c <wcrtomb@plt+0x805c>
  40ad08:	ldr	w0, [sp, #96]
  40ad0c:	and	w0, w0, w23
  40ad10:	cmp	w0, #0xa, lsl #12
  40ad14:	b.ne	40ada0 <wcrtomb@plt+0x8060>  // b.any
  40ad18:	ldr	x0, [x19, #24]
  40ad1c:	cmp	x0, x22
  40ad20:	b.ne	40ac64 <wcrtomb@plt+0x7f24>  // b.any
  40ad24:	ldr	x20, [x19, #16]
  40ad28:	mov	x1, x22
  40ad2c:	mov	x0, x20
  40ad30:	bl	402b80 <strcpy@plt>
  40ad34:	mov	x22, x20
  40ad38:	b	40ac64 <wcrtomb@plt+0x7f24>
  40ad3c:	mov	w2, #0x5                   	// #5
  40ad40:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ad44:	add	x1, x1, #0x990
  40ad48:	mov	x0, #0x0                   	// #0
  40ad4c:	bl	402c20 <dcgettext@plt>
  40ad50:	mov	x19, x0
  40ad54:	bl	402cb0 <__errno_location@plt>
  40ad58:	ldr	w0, [x0]
  40ad5c:	bl	4029a0 <strerror@plt>
  40ad60:	mov	x2, x0
  40ad64:	mov	x1, x22
  40ad68:	mov	x0, x19
  40ad6c:	bl	40a510 <wcrtomb@plt+0x77d0>
  40ad70:	add	w0, w0, #0x1
  40ad74:	str	w0, [x19, #8]
  40ad78:	sxtw	x1, w0
  40ad7c:	ldr	x0, [x19, #16]
  40ad80:	bl	412cfc <wcrtomb@plt+0xffbc>
  40ad84:	str	x0, [x19, #16]
  40ad88:	ldrsw	x1, [x19, #8]
  40ad8c:	ldr	x0, [x19, #24]
  40ad90:	bl	412cfc <wcrtomb@plt+0xffbc>
  40ad94:	str	x0, [x19, #24]
  40ad98:	b	40acc0 <wcrtomb@plt+0x7f80>
  40ad9c:	tbnz	w0, #31, 40adbc <wcrtomb@plt+0x807c>
  40ada0:	mov	x0, x22
  40ada4:	ldp	x19, x20, [sp, #16]
  40ada8:	ldp	x21, x22, [sp, #32]
  40adac:	ldp	x23, x24, [sp, #48]
  40adb0:	ldr	x25, [sp, #64]
  40adb4:	ldp	x29, x30, [sp], #208
  40adb8:	ret
  40adbc:	mov	w2, #0x5                   	// #5
  40adc0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40adc4:	add	x1, x1, #0x9b0
  40adc8:	mov	x0, #0x0                   	// #0
  40adcc:	bl	402c20 <dcgettext@plt>
  40add0:	mov	x19, x0
  40add4:	bl	402cb0 <__errno_location@plt>
  40add8:	ldr	w0, [x0]
  40addc:	bl	4029a0 <strerror@plt>
  40ade0:	mov	x2, x0
  40ade4:	mov	x1, x22
  40ade8:	mov	x0, x19
  40adec:	bl	40a510 <wcrtomb@plt+0x77d0>
  40adf0:	stp	x29, x30, [sp, #-48]!
  40adf4:	mov	x29, sp
  40adf8:	stp	x19, x20, [sp, #16]
  40adfc:	stp	x21, x22, [sp, #32]
  40ae00:	mov	x21, x0
  40ae04:	mov	x19, x2
  40ae08:	bl	402b40 <rename@plt>
  40ae0c:	cmn	w0, #0x1
  40ae10:	b.ne	40aea0 <wcrtomb@plt+0x8160>  // b.any
  40ae14:	cbz	x19, 40ae3c <wcrtomb@plt+0x80fc>
  40ae18:	bl	402cb0 <__errno_location@plt>
  40ae1c:	mov	x20, x0
  40ae20:	ldr	w22, [x0]
  40ae24:	str	wzr, [x0]
  40ae28:	mov	x0, x19
  40ae2c:	bl	402cd0 <unlink@plt>
  40ae30:	ldr	w0, [x20]
  40ae34:	cbnz	w0, 40ae70 <wcrtomb@plt+0x8130>
  40ae38:	str	w22, [x20]
  40ae3c:	mov	w2, #0x5                   	// #5
  40ae40:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ae44:	add	x1, x1, #0x9c8
  40ae48:	mov	x0, #0x0                   	// #0
  40ae4c:	bl	402c20 <dcgettext@plt>
  40ae50:	mov	x19, x0
  40ae54:	bl	402cb0 <__errno_location@plt>
  40ae58:	ldr	w0, [x0]
  40ae5c:	bl	4029a0 <strerror@plt>
  40ae60:	mov	x2, x0
  40ae64:	mov	x1, x21
  40ae68:	mov	x0, x19
  40ae6c:	bl	40a510 <wcrtomb@plt+0x77d0>
  40ae70:	mov	w2, #0x5                   	// #5
  40ae74:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ae78:	add	x1, x1, #0x890
  40ae7c:	mov	x0, #0x0                   	// #0
  40ae80:	bl	402c20 <dcgettext@plt>
  40ae84:	mov	x21, x0
  40ae88:	ldr	w0, [x20]
  40ae8c:	bl	4029a0 <strerror@plt>
  40ae90:	mov	x2, x0
  40ae94:	mov	x1, x19
  40ae98:	mov	x0, x21
  40ae9c:	bl	40a510 <wcrtomb@plt+0x77d0>
  40aea0:	ldp	x19, x20, [sp, #16]
  40aea4:	ldp	x21, x22, [sp, #32]
  40aea8:	ldp	x29, x30, [sp], #48
  40aeac:	ret
  40aeb0:	stp	x29, x30, [sp, #-32]!
  40aeb4:	mov	x29, sp
  40aeb8:	str	x19, [sp, #16]
  40aebc:	mov	x1, #0x18                  	// #24
  40aec0:	mov	x0, #0x1                   	// #1
  40aec4:	bl	412e48 <wcrtomb@plt+0x10108>
  40aec8:	mov	x19, x0
  40aecc:	mov	x0, #0x32                  	// #50
  40aed0:	bl	412e80 <wcrtomb@plt+0x10140>
  40aed4:	str	x0, [x19, #16]
  40aed8:	mov	x0, #0x32                  	// #50
  40aedc:	str	x0, [x19]
  40aee0:	str	xzr, [x19, #8]
  40aee4:	mov	x0, x19
  40aee8:	ldr	x19, [sp, #16]
  40aeec:	ldp	x29, x30, [sp], #32
  40aef0:	ret
  40aef4:	ldr	x0, [x0, #16]
  40aef8:	ret
  40aefc:	ldr	x0, [x0, #8]
  40af00:	ret
  40af04:	stp	x29, x30, [sp, #-48]!
  40af08:	mov	x29, sp
  40af0c:	stp	x19, x20, [sp, #16]
  40af10:	str	x21, [sp, #32]
  40af14:	mov	x19, x0
  40af18:	mov	x21, x1
  40af1c:	mov	x20, x2
  40af20:	ldr	x1, [x0, #8]
  40af24:	ldr	x0, [x0]
  40af28:	sub	x0, x0, x1
  40af2c:	cmp	x0, x2
  40af30:	b.cc	40af68 <wcrtomb@plt+0x8228>  // b.lo, b.ul, b.last
  40af34:	ldr	x3, [x19, #16]
  40af38:	ldr	x0, [x19, #8]
  40af3c:	mov	x2, x20
  40af40:	mov	x1, x21
  40af44:	add	x0, x3, x0
  40af48:	bl	402650 <memcpy@plt>
  40af4c:	ldr	x2, [x19, #8]
  40af50:	add	x20, x2, x20
  40af54:	str	x20, [x19, #8]
  40af58:	ldp	x19, x20, [sp, #16]
  40af5c:	ldr	x21, [sp, #32]
  40af60:	ldp	x29, x30, [sp], #48
  40af64:	ret
  40af68:	add	x1, x1, x2
  40af6c:	mov	x0, x19
  40af70:	bl	40a49c <wcrtomb@plt+0x775c>
  40af74:	b	40af34 <wcrtomb@plt+0x81f4>
  40af78:	cmn	w1, #0x1
  40af7c:	b.eq	40afd8 <wcrtomb@plt+0x8298>  // b.none
  40af80:	stp	x29, x30, [sp, #-32]!
  40af84:	mov	x29, sp
  40af88:	stp	x19, x20, [sp, #16]
  40af8c:	mov	x19, x0
  40af90:	mov	w20, w1
  40af94:	ldr	x1, [x0, #8]
  40af98:	ldr	x0, [x0]
  40af9c:	cmp	x0, x1
  40afa0:	b.eq	40afc8 <wcrtomb@plt+0x8288>  // b.none
  40afa4:	ldr	x2, [x19, #16]
  40afa8:	ldr	x1, [x19, #8]
  40afac:	add	x0, x1, #0x1
  40afb0:	str	x0, [x19, #8]
  40afb4:	add	x0, x2, x1
  40afb8:	strb	w20, [x2, x1]
  40afbc:	ldp	x19, x20, [sp, #16]
  40afc0:	ldp	x29, x30, [sp], #32
  40afc4:	ret
  40afc8:	add	x1, x1, #0x1
  40afcc:	mov	x0, x19
  40afd0:	bl	40a49c <wcrtomb@plt+0x775c>
  40afd4:	b	40afa4 <wcrtomb@plt+0x8264>
  40afd8:	mov	x0, #0x0                   	// #0
  40afdc:	ret
  40afe0:	stp	x29, x30, [sp, #-32]!
  40afe4:	mov	x29, sp
  40afe8:	str	x19, [sp, #16]
  40afec:	mov	x19, x0
  40aff0:	cbz	x0, 40affc <wcrtomb@plt+0x82bc>
  40aff4:	ldr	x0, [x0, #16]
  40aff8:	bl	402ae0 <free@plt>
  40affc:	mov	x0, x19
  40b000:	bl	402ae0 <free@plt>
  40b004:	ldr	x19, [sp, #16]
  40b008:	ldp	x29, x30, [sp], #32
  40b00c:	ret
  40b010:	stp	x29, x30, [sp, #-48]!
  40b014:	mov	x29, sp
  40b018:	stp	x19, x20, [sp, #16]
  40b01c:	stp	x21, x22, [sp, #32]
  40b020:	mov	x21, x0
  40b024:	mov	x20, x2
  40b028:	bl	410c84 <wcrtomb@plt+0xdf44>
  40b02c:	mov	w19, w0
  40b030:	cmn	w0, #0x2
  40b034:	b.eq	40b054 <wcrtomb@plt+0x8314>  // b.none
  40b038:	cmn	w0, #0x1
  40b03c:	b.eq	40b080 <wcrtomb@plt+0x8340>  // b.none
  40b040:	mov	w0, w19
  40b044:	ldp	x19, x20, [sp, #16]
  40b048:	ldp	x21, x22, [sp, #32]
  40b04c:	ldp	x29, x30, [sp], #48
  40b050:	ret
  40b054:	bl	402cb0 <__errno_location@plt>
  40b058:	ldr	w20, [x0]
  40b05c:	mov	x0, x21
  40b060:	bl	4126bc <wcrtomb@plt+0xf97c>
  40b064:	mov	x3, x0
  40b068:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40b06c:	add	x2, x2, #0x940
  40b070:	mov	w1, w20
  40b074:	mov	w0, #0x0                   	// #0
  40b078:	bl	4026d0 <error@plt>
  40b07c:	b	40b040 <wcrtomb@plt+0x8300>
  40b080:	bl	402cb0 <__errno_location@plt>
  40b084:	ldr	w22, [x0]
  40b088:	mov	w2, #0x5                   	// #5
  40b08c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40b090:	add	x1, x1, #0x9e0
  40b094:	mov	x0, #0x0                   	// #0
  40b098:	bl	402c20 <dcgettext@plt>
  40b09c:	mov	x21, x0
  40b0a0:	mov	x0, x20
  40b0a4:	bl	4126bc <wcrtomb@plt+0xf97c>
  40b0a8:	mov	x3, x0
  40b0ac:	mov	x2, x21
  40b0b0:	mov	w1, w22
  40b0b4:	mov	w0, #0x0                   	// #0
  40b0b8:	bl	4026d0 <error@plt>
  40b0bc:	b	40b040 <wcrtomb@plt+0x8300>
  40b0c0:	and	w4, w0, #0x7
  40b0c4:	ands	w3, w2, #0x1
  40b0c8:	csel	w3, w4, w3, ne  // ne = any
  40b0cc:	ubfx	x5, x0, #3, #3
  40b0d0:	ands	w4, w2, #0x2
  40b0d4:	csel	w4, w5, w4, ne  // ne = any
  40b0d8:	orr	w3, w3, w4
  40b0dc:	ubfx	x0, x0, #6, #3
  40b0e0:	ands	w2, w2, #0x4
  40b0e4:	csel	w2, w0, w2, ne  // ne = any
  40b0e8:	orr	w2, w3, w2
  40b0ec:	tst	w2, w1
  40b0f0:	cset	w0, ne  // ne = any
  40b0f4:	ret
  40b0f8:	stp	x29, x30, [sp, #-16]!
  40b0fc:	mov	x29, sp
  40b100:	ldr	x3, [x3, #296]
  40b104:	add	x2, x2, x2, lsl #2
  40b108:	add	x3, x3, x2, lsl #4
  40b10c:	mov	w2, w1
  40b110:	mov	w1, w0
  40b114:	ldrh	w0, [x3, #34]
  40b118:	bl	40b0c0 <wcrtomb@plt+0x8380>
  40b11c:	ldp	x29, x30, [sp], #16
  40b120:	ret
  40b124:	lsr	w2, w0, #6
  40b128:	ldr	x1, [x1, x2, lsl #3]
  40b12c:	lsr	x0, x1, x0
  40b130:	and	w0, w0, #0x1
  40b134:	ret
  40b138:	lsr	w3, w0, #6
  40b13c:	mov	x2, #0x1                   	// #1
  40b140:	lsl	x2, x2, x0
  40b144:	ldr	x0, [x1, x3, lsl #3]
  40b148:	orr	x0, x0, x2
  40b14c:	str	x0, [x1, x3, lsl #3]
  40b150:	ret
  40b154:	stp	x29, x30, [sp, #-48]!
  40b158:	mov	x29, sp
  40b15c:	str	x21, [sp, #32]
  40b160:	mov	x21, x0
  40b164:	ldr	x0, [x0, #144]
  40b168:	add	x0, x0, x1, lsl #3
  40b16c:	ldur	x2, [x0, #-8]
  40b170:	cmp	x2, #0x103
  40b174:	b.le	40b1bc <wcrtomb@plt+0x847c>
  40b178:	sub	x2, x2, #0x105
  40b17c:	mov	x0, #0x1                   	// #1
  40b180:	cmp	x2, x0
  40b184:	b.hi	40b1c8 <wcrtomb@plt+0x8488>  // b.pmore
  40b188:	stp	x19, x20, [sp, #16]
  40b18c:	sub	x20, x1, #0x1
  40b190:	mov	x1, x20
  40b194:	mov	x0, x21
  40b198:	bl	40b154 <wcrtomb@plt+0x8414>
  40b19c:	mov	x19, x0
  40b1a0:	sub	x1, x20, x0
  40b1a4:	mov	x0, x21
  40b1a8:	bl	40b154 <wcrtomb@plt+0x8414>
  40b1ac:	add	x19, x19, #0x1
  40b1b0:	add	x0, x19, x0
  40b1b4:	ldp	x19, x20, [sp, #16]
  40b1b8:	b	40b1c8 <wcrtomb@plt+0x8488>
  40b1bc:	mov	x0, #0x1                   	// #1
  40b1c0:	cmp	x2, #0x100
  40b1c4:	b.gt	40b1d4 <wcrtomb@plt+0x8494>
  40b1c8:	ldr	x21, [sp, #32]
  40b1cc:	ldp	x29, x30, [sp], #48
  40b1d0:	ret
  40b1d4:	sub	x1, x1, #0x1
  40b1d8:	mov	x0, x21
  40b1dc:	bl	40b154 <wcrtomb@plt+0x8414>
  40b1e0:	add	x0, x0, #0x1
  40b1e4:	b	40b1c8 <wcrtomb@plt+0x8488>
  40b1e8:	ldr	x9, [x1, #8]
  40b1ec:	cmp	x9, #0x0
  40b1f0:	b.le	40b284 <wcrtomb@plt+0x8544>
  40b1f4:	ldr	x6, [x1]
  40b1f8:	mov	x5, x9
  40b1fc:	mov	x4, #0x0                   	// #0
  40b200:	b	40b214 <wcrtomb@plt+0x84d4>
  40b204:	b.eq	40b238 <wcrtomb@plt+0x84f8>  // b.none
  40b208:	mov	x5, x2
  40b20c:	cmp	x4, x5
  40b210:	b.ge	40b27c <wcrtomb@plt+0x853c>  // b.tcont
  40b214:	add	x2, x4, x5
  40b218:	asr	x2, x2, #1
  40b21c:	lsl	x3, x2, #4
  40b220:	add	x8, x6, x3
  40b224:	ldr	x3, [x6, x3]
  40b228:	cmp	x3, x0
  40b22c:	b.ge	40b204 <wcrtomb@plt+0x84c4>  // b.tcont
  40b230:	add	x4, x2, #0x1
  40b234:	b	40b20c <wcrtomb@plt+0x84cc>
  40b238:	ldr	w0, [x8, #8]
  40b23c:	add	x4, x2, #0x1
  40b240:	cmp	x9, x4
  40b244:	b.le	40b274 <wcrtomb@plt+0x8534>
  40b248:	add	x3, x2, #0x1
  40b24c:	lsl	x3, x3, #4
  40b250:	ldr	x2, [x1]
  40b254:	add	x2, x2, x3
  40b258:	ldp	x6, x7, [x2]
  40b25c:	stp	x6, x7, [x2, #-16]
  40b260:	mov	x2, x4
  40b264:	add	x4, x4, #0x1
  40b268:	add	x3, x3, #0x10
  40b26c:	cmp	x4, x9
  40b270:	b.ne	40b250 <wcrtomb@plt+0x8510>  // b.any
  40b274:	str	x2, [x1, #8]
  40b278:	b	40b280 <wcrtomb@plt+0x8540>
  40b27c:	mov	w0, #0x0                   	// #0
  40b280:	ret
  40b284:	mov	w0, #0x0                   	// #0
  40b288:	b	40b280 <wcrtomb@plt+0x8540>
  40b28c:	ldr	x3, [x1, #8]
  40b290:	cmp	x3, #0x0
  40b294:	b.le	40b2c0 <wcrtomb@plt+0x8580>
  40b298:	ldr	x4, [x0, #344]
  40b29c:	ldr	x1, [x1]
  40b2a0:	add	x3, x1, x3, lsl #4
  40b2a4:	mov	w0, #0x0                   	// #0
  40b2a8:	ldr	x2, [x1], #16
  40b2ac:	ldr	w2, [x4, x2, lsl #2]
  40b2b0:	orr	w0, w0, w2
  40b2b4:	cmp	x1, x3
  40b2b8:	b.ne	40b2a8 <wcrtomb@plt+0x8568>  // b.any
  40b2bc:	ret
  40b2c0:	mov	w0, #0x0                   	// #0
  40b2c4:	b	40b2bc <wcrtomb@plt+0x857c>
  40b2c8:	ldr	x2, [x0]
  40b2cc:	ldr	x0, [x1]
  40b2d0:	cmp	x2, x0
  40b2d4:	b.lt	40b2e4 <wcrtomb@plt+0x85a4>  // b.tstop
  40b2d8:	cmp	x2, x0
  40b2dc:	cset	w0, gt
  40b2e0:	ret
  40b2e4:	mov	w0, #0xffffffff            	// #-1
  40b2e8:	b	40b2e0 <wcrtomb@plt+0x85a0>
  40b2ec:	mov	x0, x1
  40b2f0:	mov	w1, #0x1                   	// #1
  40b2f4:	strb	w1, [x5]
  40b2f8:	ret
  40b2fc:	stp	xzr, xzr, [x0]
  40b300:	stp	xzr, xzr, [x0, #16]
  40b304:	ret
  40b308:	stp	x29, x30, [sp, #-64]!
  40b30c:	mov	x29, sp
  40b310:	stp	x19, x20, [sp, #16]
  40b314:	str	x21, [sp, #32]
  40b318:	mov	x20, x0
  40b31c:	mov	x19, x3
  40b320:	ldrb	w3, [x1]
  40b324:	add	x3, x19, x3, lsl #2
  40b328:	ldr	w21, [x3, #1308]
  40b32c:	cmn	w21, #0x1
  40b330:	b.eq	40b34c <wcrtomb@plt+0x860c>  // b.none
  40b334:	str	w21, [x20]
  40b338:	mov	w0, #0x1                   	// #1
  40b33c:	ldp	x19, x20, [sp, #16]
  40b340:	ldr	x21, [sp, #32]
  40b344:	ldp	x29, x30, [sp], #64
  40b348:	ret
  40b34c:	add	x3, x19, #0x110
  40b350:	add	x0, sp, #0x3c
  40b354:	bl	412f3c <wcrtomb@plt+0x101fc>
  40b358:	sub	x1, x0, #0x1
  40b35c:	cmn	x1, #0x4
  40b360:	b.hi	40b370 <wcrtomb@plt+0x8630>  // b.pmore
  40b364:	ldr	w1, [sp, #60]
  40b368:	str	w1, [x20]
  40b36c:	b	40b33c <wcrtomb@plt+0x85fc>
  40b370:	str	xzr, [x19, #272]
  40b374:	b	40b334 <wcrtomb@plt+0x85f4>
  40b378:	stp	x29, x30, [sp, #-32]!
  40b37c:	mov	x29, sp
  40b380:	str	x19, [sp, #16]
  40b384:	mov	x19, x0
  40b388:	mov	x3, x0
  40b38c:	ldr	x2, [x0, #40]
  40b390:	ldr	x1, [x0, #32]
  40b394:	add	x0, x0, #0x48
  40b398:	bl	40b308 <wcrtomb@plt+0x85c8>
  40b39c:	mov	w1, w0
  40b3a0:	cmp	w0, #0x1
  40b3a4:	b.ne	40b3d8 <wcrtomb@plt+0x8698>  // b.any
  40b3a8:	ldr	x0, [x19, #32]
  40b3ac:	ldrb	w0, [x0]
  40b3b0:	sxtw	x1, w1
  40b3b4:	ldr	x2, [x19, #32]
  40b3b8:	add	x2, x2, x1
  40b3bc:	str	x2, [x19, #32]
  40b3c0:	ldr	x2, [x19, #40]
  40b3c4:	sub	x1, x2, x1
  40b3c8:	str	x1, [x19, #40]
  40b3cc:	ldr	x19, [sp, #16]
  40b3d0:	ldp	x29, x30, [sp], #32
  40b3d4:	ret
  40b3d8:	mov	w0, #0xffffffff            	// #-1
  40b3dc:	b	40b3b0 <wcrtomb@plt+0x8670>
  40b3e0:	stp	x29, x30, [sp, #-16]!
  40b3e4:	mov	x29, sp
  40b3e8:	ldr	x1, [x0, #40]
  40b3ec:	cbz	x1, 40b3fc <wcrtomb@plt+0x86bc>
  40b3f0:	bl	40b378 <wcrtomb@plt+0x8638>
  40b3f4:	ldp	x29, x30, [sp], #16
  40b3f8:	ret
  40b3fc:	mov	w2, #0x5                   	// #5
  40b400:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40b404:	add	x1, x1, #0xa00
  40b408:	mov	x0, #0x0                   	// #0
  40b40c:	bl	402c20 <dcgettext@plt>
  40b410:	bl	4094e4 <wcrtomb@plt+0x67a4>
  40b414:	stp	x29, x30, [sp, #-32]!
  40b418:	mov	x29, sp
  40b41c:	stp	x19, x20, [sp, #16]
  40b420:	mov	x20, x1
  40b424:	ldr	x5, [x1]
  40b428:	asr	x19, x5, #1
  40b42c:	adds	x19, x5, x19
  40b430:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  40b434:	csel	x19, x19, x1, vc
  40b438:	tbnz	x3, #63, 40b444 <wcrtomb@plt+0x8704>
  40b43c:	cmp	x19, x3
  40b440:	csel	x19, x19, x3, le
  40b444:	mul	x6, x19, x4
  40b448:	smulh	x1, x19, x4
  40b44c:	cmp	x1, x6, asr #63
  40b450:	b.ne	40b468 <wcrtomb@plt+0x8728>  // b.any
  40b454:	mov	x1, x6
  40b458:	cmp	x6, #0x7f
  40b45c:	b.gt	40b478 <wcrtomb@plt+0x8738>
  40b460:	mov	x1, #0x80                  	// #128
  40b464:	b	40b46c <wcrtomb@plt+0x872c>
  40b468:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  40b46c:	sdiv	x19, x1, x4
  40b470:	msub	x6, x19, x4, x1
  40b474:	sub	x1, x1, x6
  40b478:	cbz	x0, 40b4c8 <wcrtomb@plt+0x8788>
  40b47c:	sub	x6, x19, x5
  40b480:	cmp	x6, x2
  40b484:	b.ge	40b4b4 <wcrtomb@plt+0x8774>  // b.tcont
  40b488:	adds	x5, x5, x2
  40b48c:	mov	x19, x5
  40b490:	b.vs	40b4d0 <wcrtomb@plt+0x8790>
  40b494:	cmp	x3, #0x0
  40b498:	ccmp	x5, x3, #0x4, ge  // ge = tcont
  40b49c:	b.gt	40b4d0 <wcrtomb@plt+0x8790>
  40b4a0:	mul	x2, x5, x4
  40b4a4:	smulh	x5, x5, x4
  40b4a8:	mov	x1, x2
  40b4ac:	cmp	x5, x2, asr #63
  40b4b0:	b.ne	40b4d0 <wcrtomb@plt+0x8790>  // b.any
  40b4b4:	bl	412cfc <wcrtomb@plt+0xffbc>
  40b4b8:	str	x19, [x20]
  40b4bc:	ldp	x19, x20, [sp, #16]
  40b4c0:	ldp	x29, x30, [sp], #32
  40b4c4:	ret
  40b4c8:	str	xzr, [x20]
  40b4cc:	b	40b47c <wcrtomb@plt+0x873c>
  40b4d0:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40b4d4:	mov	x5, x2
  40b4d8:	ldr	x2, [x2]
  40b4dc:	cmp	x2, x1
  40b4e0:	b.le	40b4e8 <wcrtomb@plt+0x87a8>
  40b4e4:	ret
  40b4e8:	stp	x29, x30, [sp, #-16]!
  40b4ec:	mov	x29, sp
  40b4f0:	mov	x2, #0x1                   	// #1
  40b4f4:	mov	x1, x5
  40b4f8:	bl	40b414 <wcrtomb@plt+0x86d4>
  40b4fc:	ldp	x29, x30, [sp], #16
  40b500:	ret
  40b504:	stp	x29, x30, [sp, #-48]!
  40b508:	mov	x29, sp
  40b50c:	stp	x19, x20, [sp, #16]
  40b510:	str	x21, [sp, #32]
  40b514:	mov	x21, x0
  40b518:	mov	x20, x1
  40b51c:	ldr	x1, [x0, #8]
  40b520:	cmp	x1, #0x0
  40b524:	b.le	40b5c0 <wcrtomb@plt+0x8880>
  40b528:	ldr	x5, [x0]
  40b52c:	mov	x19, #0x0                   	// #0
  40b530:	b	40b548 <wcrtomb@plt+0x8808>
  40b534:	cbz	x4, 40b5ac <wcrtomb@plt+0x886c>
  40b538:	add	x19, x19, #0x1
  40b53c:	add	x5, x5, #0x20
  40b540:	cmp	x1, x19
  40b544:	b.eq	40b574 <wcrtomb@plt+0x8834>  // b.none
  40b548:	mov	x7, x5
  40b54c:	mov	x2, #0x0                   	// #0
  40b550:	mov	x4, #0x0                   	// #0
  40b554:	ldr	x3, [x20, x2]
  40b558:	ldr	x6, [x7, x2]
  40b55c:	eor	x3, x3, x6
  40b560:	orr	x4, x4, x3
  40b564:	add	x2, x2, #0x8
  40b568:	cmp	x2, #0x20
  40b56c:	b.ne	40b554 <wcrtomb@plt+0x8814>  // b.any
  40b570:	b	40b534 <wcrtomb@plt+0x87f4>
  40b574:	mov	x19, x1
  40b578:	mov	x2, x21
  40b57c:	ldr	x0, [x2], #16
  40b580:	mov	x4, #0x20                  	// #32
  40b584:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40b588:	movk	x3, #0x7fff, lsl #48
  40b58c:	bl	40b4d4 <wcrtomb@plt+0x8794>
  40b590:	str	x0, [x21]
  40b594:	ldr	x1, [x21, #8]
  40b598:	add	x1, x1, #0x1
  40b59c:	str	x1, [x21, #8]
  40b5a0:	add	x0, x0, x19, lsl #5
  40b5a4:	ld1	{v0.16b, v1.16b}, [x20]
  40b5a8:	st1	{v0.16b, v1.16b}, [x0]
  40b5ac:	mov	x0, x19
  40b5b0:	ldp	x19, x20, [sp, #16]
  40b5b4:	ldr	x21, [sp, #32]
  40b5b8:	ldp	x29, x30, [sp], #48
  40b5bc:	ret
  40b5c0:	mov	x19, #0x0                   	// #0
  40b5c4:	b	40b578 <wcrtomb@plt+0x8838>
  40b5c8:	stp	x29, x30, [sp, #-64]!
  40b5cc:	mov	x29, sp
  40b5d0:	stp	x19, x20, [sp, #16]
  40b5d4:	stp	x21, x22, [sp, #32]
  40b5d8:	str	x23, [sp, #48]
  40b5dc:	mov	x22, x0
  40b5e0:	mov	x23, x1
  40b5e4:	mov	x21, x2
  40b5e8:	ldr	x20, [x2, #8]
  40b5ec:	cmp	x20, #0x0
  40b5f0:	b.le	40b6cc <wcrtomb@plt+0x898c>
  40b5f4:	mov	x1, x0
  40b5f8:	ldr	x0, [x2]
  40b5fc:	mov	x5, x20
  40b600:	mov	x19, #0x0                   	// #0
  40b604:	b	40b618 <wcrtomb@plt+0x88d8>
  40b608:	b.eq	40b63c <wcrtomb@plt+0x88fc>  // b.none
  40b60c:	mov	x5, x3
  40b610:	cmp	x19, x5
  40b614:	b.ge	40b64c <wcrtomb@plt+0x890c>  // b.tcont
  40b618:	add	x3, x19, x5
  40b61c:	asr	x3, x3, #1
  40b620:	lsl	x4, x3, #4
  40b624:	add	x2, x0, x4
  40b628:	ldr	x4, [x0, x4]
  40b62c:	cmp	x4, x1
  40b630:	b.ge	40b608 <wcrtomb@plt+0x88c8>  // b.tcont
  40b634:	add	x19, x3, #0x1
  40b638:	b	40b610 <wcrtomb@plt+0x88d0>
  40b63c:	ldr	w0, [x2, #8]
  40b640:	orr	w23, w0, w23
  40b644:	str	w23, [x2, #8]
  40b648:	b	40b6b8 <wcrtomb@plt+0x8978>
  40b64c:	mov	x4, #0x10                  	// #16
  40b650:	mov	x3, #0xffffffffffffffff    	// #-1
  40b654:	add	x2, x21, x4
  40b658:	mov	x1, x20
  40b65c:	bl	40b4d4 <wcrtomb@plt+0x8794>
  40b660:	str	x0, [x21]
  40b664:	cmp	x19, x20
  40b668:	b.ge	40b698 <wcrtomb@plt+0x8958>  // b.tcont
  40b66c:	lsl	x1, x20, #4
  40b670:	sub	x1, x1, #0x10
  40b674:	ldr	x0, [x21]
  40b678:	add	x2, x0, x20, lsl #4
  40b67c:	add	x0, x0, x1
  40b680:	ldp	x4, x5, [x0]
  40b684:	stp	x4, x5, [x2]
  40b688:	sub	x20, x20, #0x1
  40b68c:	sub	x1, x1, #0x10
  40b690:	cmp	x19, x20
  40b694:	b.ne	40b674 <wcrtomb@plt+0x8934>  // b.any
  40b698:	ldr	x0, [x21]
  40b69c:	lsl	x19, x19, #4
  40b6a0:	add	x1, x0, x19
  40b6a4:	str	x22, [x0, x19]
  40b6a8:	str	x23, [x1, #8]
  40b6ac:	ldr	x0, [x21, #8]
  40b6b0:	add	x0, x0, #0x1
  40b6b4:	str	x0, [x21, #8]
  40b6b8:	ldp	x19, x20, [sp, #16]
  40b6bc:	ldp	x21, x22, [sp, #32]
  40b6c0:	ldr	x23, [sp, #48]
  40b6c4:	ldp	x29, x30, [sp], #64
  40b6c8:	ret
  40b6cc:	ldr	x0, [x2], #16
  40b6d0:	mov	x4, #0x10                  	// #16
  40b6d4:	mov	x3, #0xffffffffffffffff    	// #-1
  40b6d8:	mov	x1, x20
  40b6dc:	bl	40b4d4 <wcrtomb@plt+0x8794>
  40b6e0:	str	x0, [x21]
  40b6e4:	mov	x19, #0x0                   	// #0
  40b6e8:	b	40b698 <wcrtomb@plt+0x8958>
  40b6ec:	stp	x29, x30, [sp, #-48]!
  40b6f0:	mov	x29, sp
  40b6f4:	stp	x19, x20, [sp, #16]
  40b6f8:	str	x21, [sp, #32]
  40b6fc:	mov	x21, x0
  40b700:	mov	x20, x1
  40b704:	mov	x19, x2
  40b708:	mov	x4, #0x10                  	// #16
  40b70c:	mov	x3, #0xffffffffffffffff    	// #-1
  40b710:	add	x2, x2, x4
  40b714:	ldr	x1, [x19, #8]
  40b718:	ldr	x0, [x19]
  40b71c:	bl	40b4d4 <wcrtomb@plt+0x8794>
  40b720:	str	x0, [x19]
  40b724:	ldr	x2, [x19, #8]
  40b728:	add	x1, x2, #0x1
  40b72c:	str	x1, [x19, #8]
  40b730:	add	x2, x0, x2, lsl #4
  40b734:	str	x21, [x2]
  40b738:	str	x20, [x2, #8]
  40b73c:	ldp	x19, x20, [sp, #16]
  40b740:	ldr	x21, [sp, #32]
  40b744:	ldp	x29, x30, [sp], #48
  40b748:	ret
  40b74c:	stp	x29, x30, [sp, #-48]!
  40b750:	mov	x29, sp
  40b754:	stp	x19, x20, [sp, #16]
  40b758:	str	x21, [sp, #32]
  40b75c:	mov	x19, x0
  40b760:	mov	x20, x1
  40b764:	and	w21, w2, #0xff
  40b768:	ldr	x1, [x0, #160]
  40b76c:	ldr	x0, [x0, #152]
  40b770:	cmp	x1, x0
  40b774:	b.eq	40b800 <wcrtomb@plt+0x8ac0>  // b.none
  40b778:	ldrb	w0, [x19, #1048]
  40b77c:	cbz	w0, 40b78c <wcrtomb@plt+0x8a4c>
  40b780:	ldr	x1, [x19, #280]
  40b784:	ldr	x0, [x19, #152]
  40b788:	strb	w21, [x1, x0]
  40b78c:	ldr	x1, [x19, #144]
  40b790:	ldr	x0, [x19, #152]
  40b794:	add	x2, x0, #0x1
  40b798:	str	x2, [x19, #152]
  40b79c:	str	x20, [x1, x0, lsl #3]
  40b7a0:	cmp	x20, #0x106
  40b7a4:	b.gt	40b840 <wcrtomb@plt+0x8b00>
  40b7a8:	cmp	x20, #0x104
  40b7ac:	b.gt	40b850 <wcrtomb@plt+0x8b10>
  40b7b0:	cmp	x20, #0x100
  40b7b4:	b.eq	40b7d0 <wcrtomb@plt+0x8a90>  // b.none
  40b7b8:	sub	x20, x20, #0x101
  40b7bc:	cmp	x20, #0x2
  40b7c0:	b.ls	40b7dc <wcrtomb@plt+0x8a9c>  // b.plast
  40b7c4:	ldr	x0, [x19, #176]
  40b7c8:	add	x0, x0, #0x1
  40b7cc:	str	x0, [x19, #176]
  40b7d0:	ldr	x0, [x19, #136]
  40b7d4:	add	x0, x0, #0x1
  40b7d8:	str	x0, [x19, #136]
  40b7dc:	ldr	x0, [x19, #136]
  40b7e0:	ldr	x1, [x19, #168]
  40b7e4:	cmp	x0, x1
  40b7e8:	b.le	40b7f0 <wcrtomb@plt+0x8ab0>
  40b7ec:	str	x0, [x19, #168]
  40b7f0:	ldp	x19, x20, [sp, #16]
  40b7f4:	ldr	x21, [sp, #32]
  40b7f8:	ldp	x29, x30, [sp], #48
  40b7fc:	ret
  40b800:	mov	x4, #0x8                   	// #8
  40b804:	mov	x3, #0xffffffffffffffff    	// #-1
  40b808:	mov	x2, #0x1                   	// #1
  40b80c:	add	x1, x19, #0xa0
  40b810:	ldr	x0, [x19, #144]
  40b814:	bl	40b414 <wcrtomb@plt+0x86d4>
  40b818:	str	x0, [x19, #144]
  40b81c:	ldrb	w0, [x19, #1048]
  40b820:	cbz	w0, 40b78c <wcrtomb@plt+0x8a4c>
  40b824:	ldr	x0, [x19, #280]
  40b828:	ldr	x1, [x19, #160]
  40b82c:	tbnz	x1, #63, 40b83c <wcrtomb@plt+0x8afc>
  40b830:	bl	412cfc <wcrtomb@plt+0xffbc>
  40b834:	str	x0, [x19, #280]
  40b838:	b	40b778 <wcrtomb@plt+0x8a38>
  40b83c:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40b840:	cmp	x20, #0x112
  40b844:	b.ne	40b7c4 <wcrtomb@plt+0x8a84>  // b.any
  40b848:	strb	wzr, [x19, #192]
  40b84c:	b	40b7c4 <wcrtomb@plt+0x8a84>
  40b850:	ldr	x0, [x19, #136]
  40b854:	sub	x0, x0, #0x1
  40b858:	str	x0, [x19, #136]
  40b85c:	b	40b7dc <wcrtomb@plt+0x8a9c>
  40b860:	stp	x29, x30, [sp, #-64]!
  40b864:	mov	x29, sp
  40b868:	stp	x19, x20, [sp, #16]
  40b86c:	stp	x21, x22, [sp, #32]
  40b870:	mov	x19, x0
  40b874:	mov	x21, x2
  40b878:	ldrb	w0, [x0, #1048]
  40b87c:	cbnz	w0, 40b8cc <wcrtomb@plt+0x8b8c>
  40b880:	str	x23, [sp, #48]
  40b884:	lsl	x20, x1, #3
  40b888:	mov	x22, #0x0                   	// #0
  40b88c:	mov	w23, #0x3                   	// #3
  40b890:	cmp	x2, #0x0
  40b894:	b.le	40b8c4 <wcrtomb@plt+0x8b84>
  40b898:	ldr	x0, [x19, #144]
  40b89c:	mov	w2, w23
  40b8a0:	ldr	x1, [x0, x20]
  40b8a4:	mov	x0, x19
  40b8a8:	bl	40b74c <wcrtomb@plt+0x8a0c>
  40b8ac:	add	x22, x22, #0x1
  40b8b0:	add	x20, x20, #0x8
  40b8b4:	cmp	x21, x22
  40b8b8:	b.ne	40b898 <wcrtomb@plt+0x8b58>  // b.any
  40b8bc:	ldr	x23, [sp, #48]
  40b8c0:	b	40b900 <wcrtomb@plt+0x8bc0>
  40b8c4:	ldr	x23, [sp, #48]
  40b8c8:	b	40b900 <wcrtomb@plt+0x8bc0>
  40b8cc:	cmp	x2, #0x0
  40b8d0:	b.le	40b900 <wcrtomb@plt+0x8bc0>
  40b8d4:	mov	x20, x1
  40b8d8:	add	x21, x2, x1
  40b8dc:	ldr	x1, [x19, #280]
  40b8e0:	ldr	x0, [x19, #144]
  40b8e4:	ldrb	w2, [x1, x20]
  40b8e8:	ldr	x1, [x0, x20, lsl #3]
  40b8ec:	mov	x0, x19
  40b8f0:	bl	40b74c <wcrtomb@plt+0x8a0c>
  40b8f4:	add	x20, x20, #0x1
  40b8f8:	cmp	x21, x20
  40b8fc:	b.ne	40b8dc <wcrtomb@plt+0x8b9c>  // b.any
  40b900:	ldp	x19, x20, [sp, #16]
  40b904:	ldp	x21, x22, [sp, #32]
  40b908:	ldp	x29, x30, [sp], #64
  40b90c:	ret
  40b910:	stp	x29, x30, [sp, #-80]!
  40b914:	mov	x29, sp
  40b918:	stp	x19, x20, [sp, #16]
  40b91c:	ldr	x19, [x0, #352]
  40b920:	ldr	x2, [x0, #304]
  40b924:	cmp	x2, x19
  40b928:	b.le	40ba68 <wcrtomb@plt+0x8d28>
  40b92c:	stp	x21, x22, [sp, #32]
  40b930:	str	x23, [sp, #48]
  40b934:	mov	x20, x0
  40b938:	ldr	x0, [x0, #368]
  40b93c:	mov	x1, #0x0                   	// #0
  40b940:	cbz	x0, 40b94c <wcrtomb@plt+0x8c0c>
  40b944:	sub	x0, x0, #0x10
  40b948:	add	x1, x19, #0x2
  40b94c:	str	x1, [sp, #72]
  40b950:	mov	x4, #0x8                   	// #8
  40b954:	mov	x3, #0xffffffffffffffff    	// #-1
  40b958:	sub	x2, x2, x19
  40b95c:	add	x1, sp, #0x48
  40b960:	bl	40b414 <wcrtomb@plt+0x86d4>
  40b964:	str	xzr, [x0, #8]
  40b968:	str	xzr, [x0], #16
  40b96c:	str	x0, [x20, #368]
  40b970:	ldr	x21, [sp, #72]
  40b974:	sub	x22, x21, #0x2
  40b978:	str	x22, [x20, #352]
  40b97c:	ldr	x0, [x20, #376]
  40b980:	cmp	xzr, x22, lsr #61
  40b984:	cset	x1, ne  // ne = any
  40b988:	tst	x22, #0x1000000000000000
  40b98c:	csinc	w1, w1, wzr, eq  // eq = none
  40b990:	cbnz	w1, 40ba24 <wcrtomb@plt+0x8ce4>
  40b994:	lsl	x23, x22, #3
  40b998:	mov	x1, x23
  40b99c:	bl	412cfc <wcrtomb@plt+0xffbc>
  40b9a0:	str	x0, [x20, #376]
  40b9a4:	ldr	x0, [x20, #384]
  40b9a8:	tbnz	x22, #63, 40ba28 <wcrtomb@plt+0x8ce8>
  40b9ac:	mov	x1, x22
  40b9b0:	bl	412cfc <wcrtomb@plt+0xffbc>
  40b9b4:	str	x0, [x20, #384]
  40b9b8:	mov	x1, x23
  40b9bc:	ldr	x0, [x20, #392]
  40b9c0:	bl	412cfc <wcrtomb@plt+0xffbc>
  40b9c4:	str	x0, [x20, #392]
  40b9c8:	ldrb	w0, [x20, #1048]
  40b9cc:	cbz	w0, 40ba14 <wcrtomb@plt+0x8cd4>
  40b9d0:	ldr	x0, [x20, #432]
  40b9d4:	sub	x1, x0, #0x10
  40b9d8:	cmp	x0, #0x0
  40b9dc:	csel	x0, x1, x0, ne  // ne = any
  40b9e0:	ldr	x1, [sp, #72]
  40b9e4:	cmp	xzr, x1, lsr #61
  40b9e8:	cset	x2, ne  // ne = any
  40b9ec:	tst	x1, #0x1000000000000000
  40b9f0:	csinc	w2, w2, wzr, eq  // eq = none
  40b9f4:	cbnz	w2, 40ba2c <wcrtomb@plt+0x8cec>
  40b9f8:	lsl	x1, x1, #3
  40b9fc:	bl	412cfc <wcrtomb@plt+0xffbc>
  40ba00:	cbnz	x19, 40ba0c <wcrtomb@plt+0x8ccc>
  40ba04:	str	xzr, [x0, #8]
  40ba08:	str	xzr, [x0]
  40ba0c:	add	x0, x0, #0x10
  40ba10:	str	x0, [x20, #432]
  40ba14:	cmp	x22, x19
  40ba18:	b.le	40ba74 <wcrtomb@plt+0x8d34>
  40ba1c:	sub	x1, x21, #0x2
  40ba20:	b	40ba3c <wcrtomb@plt+0x8cfc>
  40ba24:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40ba28:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40ba2c:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40ba30:	add	x19, x19, #0x1
  40ba34:	cmp	x19, x1
  40ba38:	b.eq	40ba60 <wcrtomb@plt+0x8d20>  // b.none
  40ba3c:	ldr	x0, [x20, #368]
  40ba40:	str	xzr, [x0, x19, lsl #3]
  40ba44:	ldr	x0, [x20, #376]
  40ba48:	str	xzr, [x0, x19, lsl #3]
  40ba4c:	ldrb	w0, [x20, #1048]
  40ba50:	cbz	w0, 40ba30 <wcrtomb@plt+0x8cf0>
  40ba54:	ldr	x0, [x20, #432]
  40ba58:	str	xzr, [x0, x19, lsl #3]
  40ba5c:	b	40ba30 <wcrtomb@plt+0x8cf0>
  40ba60:	ldp	x21, x22, [sp, #32]
  40ba64:	ldr	x23, [sp, #48]
  40ba68:	ldp	x19, x20, [sp, #16]
  40ba6c:	ldp	x29, x30, [sp], #80
  40ba70:	ret
  40ba74:	ldp	x21, x22, [sp, #32]
  40ba78:	ldr	x23, [sp, #48]
  40ba7c:	b	40ba68 <wcrtomb@plt+0x8d28>
  40ba80:	stp	x29, x30, [sp, #-48]!
  40ba84:	mov	x29, sp
  40ba88:	stp	x19, x20, [sp, #16]
  40ba8c:	stp	x21, x22, [sp, #32]
  40ba90:	mov	w21, w0
  40ba94:	mov	x22, x1
  40ba98:	add	w0, w0, #0x80
  40ba9c:	cmp	w0, #0x17f
  40baa0:	b.hi	40bab0 <wcrtomb@plt+0x8d70>  // b.pmore
  40baa4:	bl	402940 <__ctype_toupper_loc@plt>
  40baa8:	ldr	x0, [x0]
  40baac:	ldr	w21, [x0, w21, sxtw #2]
  40bab0:	mov	x19, #0x0                   	// #0
  40bab4:	b	40bacc <wcrtomb@plt+0x8d8c>
  40bab8:	cmp	w21, w2
  40babc:	b.eq	40baf0 <wcrtomb@plt+0x8db0>  // b.none
  40bac0:	add	x19, x19, #0x1
  40bac4:	cmp	x19, #0x100
  40bac8:	b.eq	40bb00 <wcrtomb@plt+0x8dc0>  // b.none
  40bacc:	mov	w20, w19
  40bad0:	mov	w2, w19
  40bad4:	add	w3, w19, #0x80
  40bad8:	cmp	w3, #0x17f
  40badc:	b.hi	40bab8 <wcrtomb@plt+0x8d78>  // b.pmore
  40bae0:	bl	402940 <__ctype_toupper_loc@plt>
  40bae4:	ldr	x0, [x0]
  40bae8:	ldr	w2, [x0, x19, lsl #2]
  40baec:	b	40bab8 <wcrtomb@plt+0x8d78>
  40baf0:	mov	x1, x22
  40baf4:	mov	w0, w20
  40baf8:	bl	40b138 <wcrtomb@plt+0x83f8>
  40bafc:	b	40bac0 <wcrtomb@plt+0x8d80>
  40bb00:	ldp	x19, x20, [sp, #16]
  40bb04:	ldp	x21, x22, [sp, #32]
  40bb08:	ldp	x29, x30, [sp], #48
  40bb0c:	ret
  40bb10:	stp	x29, x30, [sp, #-96]!
  40bb14:	mov	x29, sp
  40bb18:	stp	x19, x20, [sp, #16]
  40bb1c:	mov	x20, x0
  40bb20:	str	xzr, [sp, #72]
  40bb24:	add	x2, sp, #0x48
  40bb28:	add	x0, sp, #0x50
  40bb2c:	bl	402d40 <wcrtomb@plt>
  40bb30:	cmn	x0, #0x1
  40bb34:	b.eq	40bbc8 <wcrtomb@plt+0x8e88>  // b.none
  40bb38:	stp	x21, x22, [sp, #32]
  40bb3c:	stp	x23, x24, [sp, #48]
  40bb40:	mov	x19, x0
  40bb44:	mov	w22, w0
  40bb48:	ldrb	w1, [sp, #80]
  40bb4c:	cmp	w0, #0x1
  40bb50:	b.eq	40bbbc <wcrtomb@plt+0x8e7c>  // b.none
  40bb54:	mov	w2, #0x1                   	// #1
  40bb58:	mov	x0, x20
  40bb5c:	bl	40b74c <wcrtomb@plt+0x8a0c>
  40bb60:	cmp	w19, #0x1
  40bb64:	b.le	40bbe0 <wcrtomb@plt+0x8ea0>
  40bb68:	add	x21, sp, #0x51
  40bb6c:	mov	w19, #0x1                   	// #1
  40bb70:	sub	w24, w22, #0x1
  40bb74:	mov	x23, #0x105                 	// #261
  40bb78:	cmp	w24, w19
  40bb7c:	cset	w2, eq  // eq = none
  40bb80:	ubfiz	w2, w2, #1, #7
  40bb84:	ldrb	w1, [x21], #1
  40bb88:	mov	x0, x20
  40bb8c:	bl	40b74c <wcrtomb@plt+0x8a0c>
  40bb90:	mov	x1, x23
  40bb94:	mov	x0, x20
  40bb98:	bl	40bbec <wcrtomb@plt+0x8eac>
  40bb9c:	add	w19, w19, #0x1
  40bba0:	cmp	w22, w19
  40bba4:	b.ne	40bb78 <wcrtomb@plt+0x8e38>  // b.any
  40bba8:	ldp	x21, x22, [sp, #32]
  40bbac:	ldp	x23, x24, [sp, #48]
  40bbb0:	ldp	x19, x20, [sp, #16]
  40bbb4:	ldp	x29, x30, [sp], #96
  40bbb8:	ret
  40bbbc:	ldp	x21, x22, [sp, #32]
  40bbc0:	ldp	x23, x24, [sp, #48]
  40bbc4:	b	40bbd0 <wcrtomb@plt+0x8e90>
  40bbc8:	strb	wzr, [sp, #80]
  40bbcc:	mov	x1, #0x0                   	// #0
  40bbd0:	mov	w2, #0x3                   	// #3
  40bbd4:	mov	x0, x20
  40bbd8:	bl	40b74c <wcrtomb@plt+0x8a0c>
  40bbdc:	b	40bbb0 <wcrtomb@plt+0x8e70>
  40bbe0:	ldp	x21, x22, [sp, #32]
  40bbe4:	ldp	x23, x24, [sp, #48]
  40bbe8:	b	40bbb0 <wcrtomb@plt+0x8e70>
  40bbec:	stp	x29, x30, [sp, #-48]!
  40bbf0:	mov	x29, sp
  40bbf4:	stp	x19, x20, [sp, #16]
  40bbf8:	mov	x19, x0
  40bbfc:	cmp	x1, #0x113
  40bc00:	cset	w2, eq  // eq = none
  40bc04:	ldrb	w0, [x0, #1048]
  40bc08:	tst	w2, w0
  40bc0c:	b.ne	40bc28 <wcrtomb@plt+0x8ee8>  // b.any
  40bc10:	mov	w2, #0x3                   	// #3
  40bc14:	mov	x0, x19
  40bc18:	bl	40b74c <wcrtomb@plt+0x8a0c>
  40bc1c:	ldp	x19, x20, [sp, #16]
  40bc20:	ldp	x29, x30, [sp], #48
  40bc24:	ret
  40bc28:	ldr	x0, [x19, #104]
  40bc2c:	cmp	x0, #0x0
  40bc30:	b.le	40bc98 <wcrtomb@plt+0x8f58>
  40bc34:	str	x21, [sp, #32]
  40bc38:	ldr	x0, [x19, #96]
  40bc3c:	ldr	w1, [x0]
  40bc40:	mov	x0, x19
  40bc44:	bl	40bb10 <wcrtomb@plt+0x8dd0>
  40bc48:	mov	x20, #0x0                   	// #0
  40bc4c:	mov	x21, #0x106                 	// #262
  40bc50:	b	40bc70 <wcrtomb@plt+0x8f30>
  40bc54:	ldr	x0, [x19, #96]
  40bc58:	ldr	w1, [x0, x20, lsl #2]
  40bc5c:	mov	x0, x19
  40bc60:	bl	40bb10 <wcrtomb@plt+0x8dd0>
  40bc64:	mov	x1, x21
  40bc68:	mov	x0, x19
  40bc6c:	bl	40bbec <wcrtomb@plt+0x8eac>
  40bc70:	add	x20, x20, #0x1
  40bc74:	ldr	x0, [x19, #104]
  40bc78:	cmp	x0, x20
  40bc7c:	b.gt	40bc54 <wcrtomb@plt+0x8f14>
  40bc80:	str	xzr, [x19, #104]
  40bc84:	ldr	x1, [x19, #80]
  40bc88:	cmn	x1, #0x1
  40bc8c:	b.ne	40bcb8 <wcrtomb@plt+0x8f78>  // b.any
  40bc90:	ldr	x21, [sp, #32]
  40bc94:	b	40bc1c <wcrtomb@plt+0x8edc>
  40bc98:	str	xzr, [x19, #104]
  40bc9c:	ldr	x1, [x19, #80]
  40bca0:	cmn	x1, #0x1
  40bca4:	b.eq	40bc1c <wcrtomb@plt+0x8edc>  // b.none
  40bca8:	add	x1, x1, #0x114
  40bcac:	mov	x0, x19
  40bcb0:	bl	40bbec <wcrtomb@plt+0x8eac>
  40bcb4:	b	40bc1c <wcrtomb@plt+0x8edc>
  40bcb8:	add	x1, x1, #0x114
  40bcbc:	mov	x0, x19
  40bcc0:	bl	40bbec <wcrtomb@plt+0x8eac>
  40bcc4:	mov	x1, #0x106                 	// #262
  40bcc8:	mov	x0, x19
  40bccc:	bl	40bbec <wcrtomb@plt+0x8eac>
  40bcd0:	ldr	x21, [sp, #32]
  40bcd4:	b	40bc1c <wcrtomb@plt+0x8edc>
  40bcd8:	stp	x29, x30, [sp, #-48]!
  40bcdc:	mov	x29, sp
  40bce0:	stp	x19, x20, [sp, #16]
  40bce4:	stp	x21, x22, [sp, #32]
  40bce8:	mov	x20, x0
  40bcec:	mov	x21, x1
  40bcf0:	mov	w22, w2
  40bcf4:	mov	x19, x3
  40bcf8:	ldr	x0, [x3, #16]
  40bcfc:	ldr	x1, [x20, #8]
  40bd00:	sub	x0, x0, x1
  40bd04:	ldr	x1, [x21, #8]
  40bd08:	cmp	x0, x1
  40bd0c:	b.lt	40bd24 <wcrtomb@plt+0x8fe4>  // b.tstop
  40bd10:	str	xzr, [x19, #8]
  40bd14:	mov	x5, #0x0                   	// #0
  40bd18:	mov	x3, #0x0                   	// #0
  40bd1c:	mov	w7, #0x0                   	// #0
  40bd20:	b	40bdac <wcrtomb@plt+0x906c>
  40bd24:	ldr	x0, [x3]
  40bd28:	bl	402ae0 <free@plt>
  40bd2c:	ldr	x0, [x20, #8]
  40bd30:	mov	x1, x19
  40bd34:	str	x0, [x1, #16]!
  40bd38:	mov	x4, #0x10                  	// #16
  40bd3c:	mov	x3, #0xffffffffffffffff    	// #-1
  40bd40:	ldr	x2, [x21, #8]
  40bd44:	mov	x0, #0x0                   	// #0
  40bd48:	bl	40b414 <wcrtomb@plt+0x86d4>
  40bd4c:	str	x0, [x19]
  40bd50:	b	40bd10 <wcrtomb@plt+0x8fd0>
  40bd54:	ldr	x0, [x21, #8]
  40bd58:	mov	w6, w7
  40bd5c:	cmp	x0, x5
  40bd60:	b.gt	40be20 <wcrtomb@plt+0x90e0>
  40bd64:	lsl	x4, x3, #4
  40bd68:	ldr	x0, [x20]
  40bd6c:	ldr	x1, [x0, x4]
  40bd70:	ldr	x2, [x19, #8]
  40bd74:	ldr	x0, [x19]
  40bd78:	lsl	x2, x2, #4
  40bd7c:	str	x1, [x0, x2]
  40bd80:	add	x3, x3, #0x1
  40bd84:	ldr	x1, [x20]
  40bd88:	add	x1, x1, x4
  40bd8c:	ldr	w0, [x1, #8]
  40bd90:	ldr	x1, [x19]
  40bd94:	ldr	x4, [x19, #8]
  40bd98:	add	x2, x4, #0x1
  40bd9c:	str	x2, [x19, #8]
  40bda0:	add	x4, x1, x4, lsl #4
  40bda4:	orr	w0, w0, w6
  40bda8:	str	w0, [x4, #8]
  40bdac:	ldr	x0, [x20, #8]
  40bdb0:	cmp	x0, x3
  40bdb4:	b.gt	40bd54 <wcrtomb@plt+0x9014>
  40bdb8:	ldr	x0, [x21, #8]
  40bdbc:	cmp	x0, x5
  40bdc0:	b.le	40be58 <wcrtomb@plt+0x9118>
  40bdc4:	lsl	x0, x5, #4
  40bdc8:	ldr	x1, [x21]
  40bdcc:	add	x2, x1, x0
  40bdd0:	ldr	w2, [x2, #8]
  40bdd4:	tst	w22, w2
  40bdd8:	b.eq	40be18 <wcrtomb@plt+0x90d8>  // b.none
  40bddc:	ldr	x4, [x1, x0]
  40bde0:	ldr	x1, [x19, #8]
  40bde4:	ldr	x2, [x19]
  40bde8:	lsl	x1, x1, #4
  40bdec:	str	x4, [x2, x1]
  40bdf0:	ldr	x1, [x21]
  40bdf4:	add	x0, x1, x0
  40bdf8:	ldr	w1, [x0, #8]
  40bdfc:	ldr	x2, [x19]
  40be00:	ldr	x0, [x19, #8]
  40be04:	add	x4, x0, #0x1
  40be08:	str	x4, [x19, #8]
  40be0c:	add	x0, x2, x0, lsl #4
  40be10:	and	w1, w1, w22
  40be14:	str	w1, [x0, #8]
  40be18:	add	x5, x5, #0x1
  40be1c:	b	40bdac <wcrtomb@plt+0x906c>
  40be20:	ldr	x1, [x20]
  40be24:	lsl	x0, x3, #4
  40be28:	ldr	x2, [x1, x0]
  40be2c:	lsl	x0, x5, #4
  40be30:	ldr	x1, [x21]
  40be34:	add	x4, x1, x0
  40be38:	ldr	x0, [x1, x0]
  40be3c:	cmp	x2, x0
  40be40:	b.gt	40bdc4 <wcrtomb@plt+0x9084>
  40be44:	b.ne	40bd64 <wcrtomb@plt+0x9024>  // b.any
  40be48:	add	x5, x5, #0x1
  40be4c:	ldr	w0, [x4, #8]
  40be50:	and	w6, w22, w0
  40be54:	b	40bd64 <wcrtomb@plt+0x9024>
  40be58:	ldp	x19, x20, [sp, #16]
  40be5c:	ldp	x21, x22, [sp, #32]
  40be60:	ldp	x29, x30, [sp], #48
  40be64:	ret
  40be68:	stp	x29, x30, [sp, #-32]!
  40be6c:	mov	x29, sp
  40be70:	stp	x19, x20, [sp, #16]
  40be74:	mov	x20, x0
  40be78:	ldr	x0, [x0, #280]
  40be7c:	bl	402ae0 <free@plt>
  40be80:	ldr	x0, [x20, #96]
  40be84:	bl	402ae0 <free@plt>
  40be88:	ldr	x0, [x20, #408]
  40be8c:	bl	402ae0 <free@plt>
  40be90:	ldr	x0, [x20, #432]
  40be94:	cbz	x0, 40becc <wcrtomb@plt+0x918c>
  40be98:	ldr	x0, [x20, #352]
  40be9c:	tbnz	x0, #63, 40bec0 <wcrtomb@plt+0x9180>
  40bea0:	mov	x19, #0xffffffffffffffff    	// #-1
  40bea4:	ldr	x0, [x20, #432]
  40bea8:	ldr	x0, [x0, x19, lsl #3]
  40beac:	bl	402ae0 <free@plt>
  40beb0:	add	x19, x19, #0x1
  40beb4:	ldr	x0, [x20, #352]
  40beb8:	cmp	x0, x19
  40bebc:	b.gt	40bea4 <wcrtomb@plt+0x9164>
  40bec0:	ldr	x0, [x20, #432]
  40bec4:	sub	x0, x0, #0x10
  40bec8:	bl	402ae0 <free@plt>
  40becc:	ldp	x19, x20, [sp, #16]
  40bed0:	ldp	x29, x30, [sp], #32
  40bed4:	ret
  40bed8:	stp	x29, x30, [sp, #-32]!
  40bedc:	mov	x29, sp
  40bee0:	str	x19, [sp, #16]
  40bee4:	mov	x19, x0
  40bee8:	ldr	x0, [x0]
  40beec:	cbz	x0, 40befc <wcrtomb@plt+0x91bc>
  40bef0:	bl	402ae0 <free@plt>
  40bef4:	ldr	x0, [x19, #8]!
  40bef8:	cbnz	x0, 40bef0 <wcrtomb@plt+0x91b0>
  40befc:	ldr	x19, [sp, #16]
  40bf00:	ldp	x29, x30, [sp], #32
  40bf04:	ret
  40bf08:	stp	x29, x30, [sp, #-32]!
  40bf0c:	mov	x29, sp
  40bf10:	str	x19, [sp, #16]
  40bf14:	mov	x19, x0
  40bf18:	ldr	x0, [x0]
  40bf1c:	bl	40bed8 <wcrtomb@plt+0x9198>
  40bf20:	ldr	x0, [x19]
  40bf24:	bl	402ae0 <free@plt>
  40bf28:	ldr	x0, [x19, #8]
  40bf2c:	bl	402ae0 <free@plt>
  40bf30:	ldr	x0, [x19, #16]
  40bf34:	bl	402ae0 <free@plt>
  40bf38:	ldr	x0, [x19, #24]
  40bf3c:	bl	402ae0 <free@plt>
  40bf40:	mov	x0, x19
  40bf44:	bl	402ae0 <free@plt>
  40bf48:	ldr	x19, [sp, #16]
  40bf4c:	ldp	x29, x30, [sp], #32
  40bf50:	ret
  40bf54:	stp	x29, x30, [sp, #-32]!
  40bf58:	mov	x29, sp
  40bf5c:	stp	x19, x20, [sp, #16]
  40bf60:	mov	x20, x0
  40bf64:	cmp	xzr, x1, lsr #60
  40bf68:	cset	x0, ne  // ne = any
  40bf6c:	tst	x1, #0x800000000000000
  40bf70:	csinc	w0, w0, wzr, eq  // eq = none
  40bf74:	cbnz	w0, 40bf9c <wcrtomb@plt+0x925c>
  40bf78:	mov	x19, x1
  40bf7c:	lsl	x0, x1, #4
  40bf80:	bl	412c80 <wcrtomb@plt+0xff40>
  40bf84:	str	x0, [x20]
  40bf88:	str	x19, [x20, #16]
  40bf8c:	str	xzr, [x20, #8]
  40bf90:	ldp	x19, x20, [sp, #16]
  40bf94:	ldp	x29, x30, [sp], #32
  40bf98:	ret
  40bf9c:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40bfa0:	stp	x29, x30, [sp, #-48]!
  40bfa4:	mov	x29, sp
  40bfa8:	stp	x19, x20, [sp, #16]
  40bfac:	stp	x21, x22, [sp, #32]
  40bfb0:	mov	x19, x0
  40bfb4:	mov	x21, x1
  40bfb8:	mov	x0, x1
  40bfbc:	bl	402690 <strlen@plt>
  40bfc0:	cbnz	x0, 40bfd8 <wcrtomb@plt+0x9298>
  40bfc4:	mov	x0, x19
  40bfc8:	ldp	x19, x20, [sp, #16]
  40bfcc:	ldp	x21, x22, [sp, #32]
  40bfd0:	ldp	x29, x30, [sp], #48
  40bfd4:	ret
  40bfd8:	mov	x20, x0
  40bfdc:	mov	x0, x19
  40bfe0:	bl	402690 <strlen@plt>
  40bfe4:	mov	x22, x0
  40bfe8:	add	x1, x0, x20
  40bfec:	add	x1, x1, #0x1
  40bff0:	mov	x0, x19
  40bff4:	bl	412cfc <wcrtomb@plt+0xffbc>
  40bff8:	mov	x19, x0
  40bffc:	add	x2, x20, #0x1
  40c000:	mov	x1, x21
  40c004:	add	x0, x0, x22
  40c008:	bl	402650 <memcpy@plt>
  40c00c:	b	40bfc4 <wcrtomb@plt+0x9284>
  40c010:	stp	x29, x30, [sp, #-32]!
  40c014:	mov	x29, sp
  40c018:	stp	x19, x20, [sp, #16]
  40c01c:	mov	x20, x0
  40c020:	mov	x19, x1
  40c024:	ldr	x1, [x1, #16]
  40c028:	ldr	x0, [x0, #8]
  40c02c:	cmp	x1, x0
  40c030:	b.lt	40c04c <wcrtomb@plt+0x930c>  // b.tstop
  40c034:	ldr	x2, [x20, #8]
  40c038:	str	x2, [x19, #8]
  40c03c:	cbnz	x2, 40c07c <wcrtomb@plt+0x933c>
  40c040:	ldp	x19, x20, [sp, #16]
  40c044:	ldp	x29, x30, [sp], #32
  40c048:	ret
  40c04c:	ldr	x0, [x19]
  40c050:	bl	402ae0 <free@plt>
  40c054:	ldr	x2, [x20, #8]
  40c058:	mov	x1, x19
  40c05c:	ldr	x0, [x1, #16]!
  40c060:	mov	x4, #0x10                  	// #16
  40c064:	mov	x3, #0xffffffffffffffff    	// #-1
  40c068:	sub	x2, x2, x0
  40c06c:	mov	x0, #0x0                   	// #0
  40c070:	bl	40b414 <wcrtomb@plt+0x86d4>
  40c074:	str	x0, [x19]
  40c078:	b	40c034 <wcrtomb@plt+0x92f4>
  40c07c:	lsl	x2, x2, #4
  40c080:	ldr	x1, [x20]
  40c084:	ldr	x0, [x19]
  40c088:	bl	402650 <memcpy@plt>
  40c08c:	b	40c040 <wcrtomb@plt+0x9300>
  40c090:	stp	x29, x30, [sp, #-128]!
  40c094:	mov	x29, sp
  40c098:	stp	x19, x20, [sp, #16]
  40c09c:	stp	x21, x22, [sp, #32]
  40c0a0:	stp	x23, x24, [sp, #48]
  40c0a4:	stp	x25, x26, [sp, #64]
  40c0a8:	stp	x27, x28, [sp, #80]
  40c0ac:	mov	x24, x0
  40c0b0:	str	x1, [sp, #120]
  40c0b4:	str	w2, [sp, #100]
  40c0b8:	ldr	x21, [x1, #8]
  40c0bc:	cmp	x21, #0x0
  40c0c0:	b.le	40c30c <wcrtomb@plt+0x95cc>
  40c0c4:	ldr	x0, [x1]
  40c0c8:	add	x3, x0, x21, lsl #4
  40c0cc:	mov	x20, #0x0                   	// #0
  40c0d0:	ldr	w1, [x0, #8]
  40c0d4:	ldr	x2, [x0], #16
  40c0d8:	add	x1, x1, x2
  40c0dc:	eor	x20, x20, x1
  40c0e0:	cmp	x0, x3
  40c0e4:	b.ne	40c0d0 <wcrtomb@plt+0x9390>  // b.any
  40c0e8:	ldr	x27, [x24, #304]
  40c0ec:	mov	x19, #0x0                   	// #0
  40c0f0:	cmp	x27, #0x0
  40c0f4:	b.le	40c1a8 <wcrtomb@plt+0x9468>
  40c0f8:	ldr	x0, [x24, #296]
  40c0fc:	mov	x19, #0x0                   	// #0
  40c100:	b	40c120 <wcrtomb@plt+0x93e0>
  40c104:	mov	x2, #0x0                   	// #0
  40c108:	cmp	x21, x2
  40c10c:	b.eq	40c2ec <wcrtomb@plt+0x95ac>  // b.none
  40c110:	add	x19, x19, #0x1
  40c114:	add	x0, x0, #0x50
  40c118:	cmp	x19, x27
  40c11c:	b.ge	40c1a0 <wcrtomb@plt+0x9460>  // b.tcont
  40c120:	ldr	x1, [x0]
  40c124:	cmp	x1, x20
  40c128:	b.ne	40c110 <wcrtomb@plt+0x93d0>  // b.any
  40c12c:	ldr	x1, [x0, #16]
  40c130:	cmp	x1, x21
  40c134:	b.ne	40c110 <wcrtomb@plt+0x93d0>  // b.any
  40c138:	ldrb	w1, [x0, #32]
  40c13c:	ldr	w3, [sp, #100]
  40c140:	cmp	w1, w3
  40c144:	b.ne	40c110 <wcrtomb@plt+0x93d0>  // b.any
  40c148:	cmp	x21, #0x0
  40c14c:	b.le	40c104 <wcrtomb@plt+0x93c4>
  40c150:	ldr	x1, [sp, #120]
  40c154:	ldr	x6, [x1]
  40c158:	ldr	x5, [x0, #8]
  40c15c:	mov	x1, #0x0                   	// #0
  40c160:	mov	x2, #0x0                   	// #0
  40c164:	add	x8, x6, #0x8
  40c168:	add	x7, x5, #0x8
  40c16c:	ldr	w4, [x8, x1]
  40c170:	ldr	w3, [x7, x1]
  40c174:	cmp	w4, w3
  40c178:	b.ne	40c108 <wcrtomb@plt+0x93c8>  // b.any
  40c17c:	ldr	x4, [x6, x1]
  40c180:	ldr	x3, [x5, x1]
  40c184:	cmp	x4, x3
  40c188:	b.ne	40c108 <wcrtomb@plt+0x93c8>  // b.any
  40c18c:	add	x2, x2, #0x1
  40c190:	add	x1, x1, #0x10
  40c194:	cmp	x2, x21
  40c198:	b.ne	40c16c <wcrtomb@plt+0x942c>  // b.any
  40c19c:	b	40c2ec <wcrtomb@plt+0x95ac>
  40c1a0:	cmp	x21, #0x0
  40c1a4:	b.le	40c230 <wcrtomb@plt+0x94f0>
  40c1a8:	ldr	x28, [x24, #336]
  40c1ac:	ldr	x0, [sp, #120]
  40c1b0:	ldr	x0, [x0]
  40c1b4:	str	x0, [sp, #104]
  40c1b8:	mov	x22, #0x0                   	// #0
  40c1bc:	str	xzr, [sp, #112]
  40c1c0:	mov	w26, #0x0                   	// #0
  40c1c4:	b	40c1e8 <wcrtomb@plt+0x94a8>
  40c1c8:	ldr	x0, [x24, #144]
  40c1cc:	ldr	x0, [x0, x25, lsl #3]
  40c1d0:	cmp	x0, #0x112
  40c1d4:	mov	w0, #0x1ff                 	// #511
  40c1d8:	csel	w26, w26, w0, ne  // ne = any
  40c1dc:	add	x22, x22, #0x1
  40c1e0:	cmp	x22, x21
  40c1e4:	b.ge	40c238 <wcrtomb@plt+0x94f8>  // b.tcont
  40c1e8:	lsl	x0, x22, #4
  40c1ec:	ldr	x1, [sp, #104]
  40c1f0:	ldr	x25, [x1, x0]
  40c1f4:	ldr	w23, [x28, x25, lsl #2]
  40c1f8:	cbz	w23, 40c1c8 <wcrtomb@plt+0x9488>
  40c1fc:	mov	w2, #0x7                   	// #7
  40c200:	ldr	w1, [sp, #100]
  40c204:	mov	w0, w23
  40c208:	bl	40b0c0 <wcrtomb@plt+0x8380>
  40c20c:	ands	w0, w0, #0xff
  40c210:	orr	w23, w26, w23
  40c214:	csel	w26, w23, w26, ne  // ne = any
  40c218:	ldr	x0, [sp, #112]
  40c21c:	cbnz	x0, 40c1dc <wcrtomb@plt+0x949c>
  40c220:	ldr	x0, [x24, #144]
  40c224:	ldr	x0, [x0, x25, lsl #3]
  40c228:	str	x0, [sp, #112]
  40c22c:	b	40c1dc <wcrtomb@plt+0x949c>
  40c230:	str	xzr, [sp, #112]
  40c234:	mov	w26, #0x0                   	// #0
  40c238:	mov	x4, #0x50                  	// #80
  40c23c:	mov	x3, #0xffffffffffffffff    	// #-1
  40c240:	add	x2, x24, #0x138
  40c244:	mov	x1, x27
  40c248:	ldr	x0, [x24, #296]
  40c24c:	bl	40b4d4 <wcrtomb@plt+0x8794>
  40c250:	str	x0, [x24, #296]
  40c254:	add	x21, x19, x19, lsl #2
  40c258:	lsl	x21, x21, #4
  40c25c:	str	x20, [x0, x21]
  40c260:	ldr	x0, [x24, #296]
  40c264:	add	x0, x0, x21
  40c268:	ldr	x20, [sp, #120]
  40c26c:	ldr	x1, [x20, #8]
  40c270:	add	x0, x0, #0x8
  40c274:	bl	40bf54 <wcrtomb@plt+0x9214>
  40c278:	ldr	x1, [x24, #296]
  40c27c:	add	x1, x1, x21
  40c280:	add	x1, x1, #0x8
  40c284:	mov	x0, x20
  40c288:	bl	40c010 <wcrtomb@plt+0x92d0>
  40c28c:	ldr	x0, [x24, #296]
  40c290:	add	x0, x0, x21
  40c294:	ldrb	w1, [sp, #100]
  40c298:	strb	w1, [x0, #32]
  40c29c:	ldr	x0, [x24, #296]
  40c2a0:	add	x0, x0, x21
  40c2a4:	strh	w26, [x0, #34]
  40c2a8:	ldr	x0, [x24, #296]
  40c2ac:	add	x0, x0, x21
  40c2b0:	ldr	x1, [sp, #112]
  40c2b4:	str	x1, [x0, #40]
  40c2b8:	ldr	x0, [x24, #296]
  40c2bc:	add	x0, x0, x21
  40c2c0:	str	xzr, [x0, #56]
  40c2c4:	ldr	x0, [x24, #296]
  40c2c8:	add	x0, x0, x21
  40c2cc:	str	xzr, [x0, #48]
  40c2d0:	ldr	x0, [x24, #296]
  40c2d4:	add	x21, x0, x21
  40c2d8:	mov	x0, #0xffffffffffffffff    	// #-1
  40c2dc:	str	x0, [x21, #72]
  40c2e0:	ldr	x0, [x24, #304]
  40c2e4:	add	x0, x0, #0x1
  40c2e8:	str	x0, [x24, #304]
  40c2ec:	mov	x0, x19
  40c2f0:	ldp	x19, x20, [sp, #16]
  40c2f4:	ldp	x21, x22, [sp, #32]
  40c2f8:	ldp	x23, x24, [sp, #48]
  40c2fc:	ldp	x25, x26, [sp, #64]
  40c300:	ldp	x27, x28, [sp, #80]
  40c304:	ldp	x29, x30, [sp], #128
  40c308:	ret
  40c30c:	ldr	x27, [x0, #304]
  40c310:	mov	x20, #0x0                   	// #0
  40c314:	cmp	x27, #0x0
  40c318:	b.gt	40c0f8 <wcrtomb@plt+0x93b8>
  40c31c:	mov	x19, #0x0                   	// #0
  40c320:	str	xzr, [sp, #112]
  40c324:	mov	w26, #0x0                   	// #0
  40c328:	b	40c238 <wcrtomb@plt+0x94f8>
  40c32c:	stp	x29, x30, [sp, #-48]!
  40c330:	mov	x29, sp
  40c334:	stp	x19, x20, [sp, #16]
  40c338:	str	x21, [sp, #32]
  40c33c:	mov	x21, x0
  40c340:	mov	x20, x1
  40c344:	mov	x0, #0x30                  	// #48
  40c348:	bl	412c80 <wcrtomb@plt+0xff40>
  40c34c:	mov	x19, x0
  40c350:	mov	x0, #0x8                   	// #8
  40c354:	bl	412e80 <wcrtomb@plt+0x10140>
  40c358:	str	x0, [x19]
  40c35c:	mov	x0, x20
  40c360:	bl	412e80 <wcrtomb@plt+0x10140>
  40c364:	str	x0, [x19, #8]
  40c368:	mov	x0, x20
  40c36c:	bl	412e80 <wcrtomb@plt+0x10140>
  40c370:	str	x0, [x19, #16]
  40c374:	mov	x0, x20
  40c378:	bl	412e80 <wcrtomb@plt+0x10140>
  40c37c:	str	x0, [x19, #24]
  40c380:	strb	wzr, [x19, #32]
  40c384:	strb	wzr, [x19, #33]
  40c388:	str	x21, [x19, #40]
  40c38c:	mov	x0, x19
  40c390:	ldp	x19, x20, [sp, #16]
  40c394:	ldr	x21, [sp, #32]
  40c398:	ldp	x29, x30, [sp], #48
  40c39c:	ret
  40c3a0:	stp	x29, x30, [sp, #-64]!
  40c3a4:	mov	x29, sp
  40c3a8:	stp	x19, x20, [sp, #16]
  40c3ac:	stp	x21, x22, [sp, #32]
  40c3b0:	mov	x20, x0
  40c3b4:	mov	x21, x1
  40c3b8:	mov	x19, x2
  40c3bc:	add	x0, x2, #0x1
  40c3c0:	bl	412c80 <wcrtomb@plt+0xff40>
  40c3c4:	mov	x2, x19
  40c3c8:	mov	x1, x21
  40c3cc:	bl	402650 <memcpy@plt>
  40c3d0:	mov	x22, x0
  40c3d4:	strb	wzr, [x0, x19]
  40c3d8:	ldr	x21, [x20]
  40c3dc:	cbz	x21, 40c4b4 <wcrtomb@plt+0x9774>
  40c3e0:	mov	x0, x21
  40c3e4:	mov	x19, #0x0                   	// #0
  40c3e8:	mov	x1, x22
  40c3ec:	bl	402c10 <strstr@plt>
  40c3f0:	cbnz	x0, 40c410 <wcrtomb@plt+0x96d0>
  40c3f4:	add	x19, x19, #0x1
  40c3f8:	ldr	x0, [x20, x19, lsl #3]
  40c3fc:	cbnz	x0, 40c3e8 <wcrtomb@plt+0x96a8>
  40c400:	stp	x23, x24, [sp, #48]
  40c404:	mov	x24, x20
  40c408:	mov	x23, #0x0                   	// #0
  40c40c:	b	40c430 <wcrtomb@plt+0x96f0>
  40c410:	mov	x0, x22
  40c414:	bl	402ae0 <free@plt>
  40c418:	mov	x0, x20
  40c41c:	b	40c4a0 <wcrtomb@plt+0x9760>
  40c420:	add	x23, x23, #0x1
  40c424:	add	x24, x20, x23, lsl #3
  40c428:	ldr	x21, [x20, x23, lsl #3]
  40c42c:	cbz	x21, 40c468 <wcrtomb@plt+0x9728>
  40c430:	mov	x1, x21
  40c434:	mov	x0, x22
  40c438:	bl	402c10 <strstr@plt>
  40c43c:	cbz	x0, 40c420 <wcrtomb@plt+0x96e0>
  40c440:	mov	x0, x21
  40c444:	bl	402ae0 <free@plt>
  40c448:	sub	x19, x19, #0x1
  40c44c:	cmp	x19, x23
  40c450:	b.eq	40c464 <wcrtomb@plt+0x9724>  // b.none
  40c454:	ldr	x0, [x20, x19, lsl #3]
  40c458:	str	x0, [x24]
  40c45c:	str	xzr, [x20, x19, lsl #3]
  40c460:	b	40c424 <wcrtomb@plt+0x96e4>
  40c464:	mov	x19, x23
  40c468:	add	x19, x19, #0x2
  40c46c:	cmp	xzr, x19, lsr #61
  40c470:	cset	x0, ne  // ne = any
  40c474:	tst	x19, #0x1000000000000000
  40c478:	csinc	w0, w0, wzr, eq  // eq = none
  40c47c:	cbnz	w0, 40c4b0 <wcrtomb@plt+0x9770>
  40c480:	ldp	x23, x24, [sp, #48]
  40c484:	lsl	x19, x19, #3
  40c488:	mov	x1, x19
  40c48c:	mov	x0, x20
  40c490:	bl	412cfc <wcrtomb@plt+0xffbc>
  40c494:	add	x19, x0, x19
  40c498:	stur	x22, [x19, #-16]
  40c49c:	stur	xzr, [x19, #-8]
  40c4a0:	ldp	x19, x20, [sp, #16]
  40c4a4:	ldp	x21, x22, [sp, #32]
  40c4a8:	ldp	x29, x30, [sp], #64
  40c4ac:	ret
  40c4b0:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40c4b4:	mov	x19, #0x2                   	// #2
  40c4b8:	b	40c484 <wcrtomb@plt+0x9744>
  40c4bc:	stp	x29, x30, [sp, #-48]!
  40c4c0:	mov	x29, sp
  40c4c4:	stp	x19, x20, [sp, #16]
  40c4c8:	str	x21, [sp, #32]
  40c4cc:	mov	x19, x0
  40c4d0:	mov	x21, x1
  40c4d4:	ldr	x20, [x1]
  40c4d8:	cbz	x20, 40c500 <wcrtomb@plt+0x97c0>
  40c4dc:	mov	x0, x20
  40c4e0:	bl	402690 <strlen@plt>
  40c4e4:	mov	x2, x0
  40c4e8:	mov	x1, x20
  40c4ec:	mov	x0, x19
  40c4f0:	bl	40c3a0 <wcrtomb@plt+0x9660>
  40c4f4:	mov	x19, x0
  40c4f8:	ldr	x20, [x21, #8]!
  40c4fc:	cbnz	x20, 40c4dc <wcrtomb@plt+0x979c>
  40c500:	mov	x0, x19
  40c504:	ldp	x19, x20, [sp, #16]
  40c508:	ldr	x21, [sp, #32]
  40c50c:	ldp	x29, x30, [sp], #48
  40c510:	ret
  40c514:	stp	x29, x30, [sp, #-272]!
  40c518:	mov	x29, sp
  40c51c:	stp	x19, x20, [sp, #16]
  40c520:	stp	x21, x22, [sp, #32]
  40c524:	stp	x23, x24, [sp, #48]
  40c528:	stp	x25, x26, [sp, #64]
  40c52c:	stp	x27, x28, [sp, #80]
  40c530:	mov	x28, x0
  40c534:	mov	x19, x1
  40c538:	and	w0, w2, #0xff
  40c53c:	str	w0, [sp, #108]
  40c540:	add	x22, x28, x28, lsl #2
  40c544:	lsl	x22, x22, #4
  40c548:	mov	x20, x22
  40c54c:	ldr	x0, [x1, #296]
  40c550:	add	x0, x0, x22
  40c554:	ldrh	w0, [x0, #34]
  40c558:	cbz	w0, 40c670 <wcrtomb@plt+0x9930>
  40c55c:	ldr	x0, [x1, #376]
  40c560:	add	x23, x0, x28, lsl #3
  40c564:	ldr	x21, [x0, x28, lsl #3]
  40c568:	cbz	x21, 40c678 <wcrtomb@plt+0x9938>
  40c56c:	ldr	x0, [x19, #384]
  40c570:	strb	wzr, [x0, x28]
  40c574:	ldr	x0, [x19, #296]
  40c578:	add	x0, x0, x22
  40c57c:	mov	x3, x19
  40c580:	mov	x2, x28
  40c584:	mov	w1, #0x4                   	// #4
  40c588:	ldrb	w0, [x0, #32]
  40c58c:	bl	40b0f8 <wcrtomb@plt+0x83b8>
  40c590:	and	w0, w0, #0xff
  40c594:	cbz	w0, 40c5a8 <wcrtomb@plt+0x9868>
  40c598:	ldr	x1, [x19, #384]
  40c59c:	ldrb	w0, [x1, x28]
  40c5a0:	orr	w0, w0, #0x4
  40c5a4:	strb	w0, [x1, x28]
  40c5a8:	ldr	x0, [x19, #296]
  40c5ac:	add	x0, x0, x22
  40c5b0:	mov	x3, x19
  40c5b4:	mov	x2, x28
  40c5b8:	mov	w1, #0x2                   	// #2
  40c5bc:	ldrb	w0, [x0, #32]
  40c5c0:	bl	40b0f8 <wcrtomb@plt+0x83b8>
  40c5c4:	and	w0, w0, #0xff
  40c5c8:	cbz	w0, 40c5dc <wcrtomb@plt+0x989c>
  40c5cc:	ldr	x1, [x19, #384]
  40c5d0:	ldrb	w0, [x1, x28]
  40c5d4:	orr	w0, w0, #0x2
  40c5d8:	strb	w0, [x1, x28]
  40c5dc:	ldr	x0, [x19, #296]
  40c5e0:	add	x0, x0, x22
  40c5e4:	mov	x3, x19
  40c5e8:	mov	x2, x28
  40c5ec:	mov	w1, #0x1                   	// #1
  40c5f0:	ldrb	w0, [x0, #32]
  40c5f4:	bl	40b0f8 <wcrtomb@plt+0x83b8>
  40c5f8:	and	w0, w0, #0xff
  40c5fc:	cbz	w0, 40c610 <wcrtomb@plt+0x98d0>
  40c600:	ldr	x1, [x19, #384]
  40c604:	ldrb	w0, [x1, x28]
  40c608:	orr	w0, w0, #0x1
  40c60c:	strb	w0, [x1, x28]
  40c610:	ldr	x1, [x19, #176]
  40c614:	add	x0, sp, #0xf8
  40c618:	bl	40bf54 <wcrtomb@plt+0x9214>
  40c61c:	ldr	x0, [x19, #296]
  40c620:	add	x22, x0, x22
  40c624:	ldr	x0, [x22, #16]
  40c628:	mov	x24, #0x0                   	// #0
  40c62c:	cmp	x0, #0x0
  40c630:	b.gt	40c75c <wcrtomb@plt+0x9a1c>
  40c634:	ldr	x1, [x19, #176]
  40c638:	add	x0, sp, #0xe0
  40c63c:	bl	40bf54 <wcrtomb@plt+0x9214>
  40c640:	mov	x0, #0xffffffffffffffff    	// #-1
  40c644:	str	x0, [sp, #168]
  40c648:	str	x0, [sp, #176]
  40c64c:	str	x0, [sp, #184]
  40c650:	str	x0, [sp, #192]
  40c654:	ldr	x0, [sp, #256]
  40c658:	cmp	x0, #0x0
  40c65c:	b.le	40ca10 <wcrtomb@plt+0x9cd0>
  40c660:	mov	x22, #0x0                   	// #0
  40c664:	mov	w25, #0x1                   	// #1
  40c668:	add	x24, x19, #0x3f0
  40c66c:	b	40c8ec <wcrtomb@plt+0x9bac>
  40c670:	ldr	x0, [x1, #368]
  40c674:	b	40c560 <wcrtomb@plt+0x9820>
  40c678:	ldr	w0, [x19, #360]
  40c67c:	cmp	w0, #0x3ff
  40c680:	b.le	40c6d0 <wcrtomb@plt+0x9990>
  40c684:	ldrsw	x21, [x19, #364]
  40c688:	ldr	x0, [x19, #352]
  40c68c:	cmp	x21, x0
  40c690:	b.ge	40c6cc <wcrtomb@plt+0x998c>  // b.tcont
  40c694:	ldr	x0, [x19, #368]
  40c698:	ldr	x0, [x0, x21, lsl #3]
  40c69c:	bl	402ae0 <free@plt>
  40c6a0:	ldr	x0, [x19, #376]
  40c6a4:	ldr	x0, [x0, x21, lsl #3]
  40c6a8:	bl	402ae0 <free@plt>
  40c6ac:	ldr	x0, [x19, #376]
  40c6b0:	str	xzr, [x0, x21, lsl #3]
  40c6b4:	ldr	x0, [x19, #368]
  40c6b8:	str	xzr, [x0, x21, lsl #3]
  40c6bc:	add	x21, x21, #0x1
  40c6c0:	ldr	x0, [x19, #352]
  40c6c4:	cmp	x0, x21
  40c6c8:	b.gt	40c694 <wcrtomb@plt+0x9954>
  40c6cc:	str	wzr, [x19, #360]
  40c6d0:	ldr	w0, [x19, #360]
  40c6d4:	add	w0, w0, #0x1
  40c6d8:	str	w0, [x19, #360]
  40c6dc:	mov	x0, #0x800                 	// #2048
  40c6e0:	bl	412c80 <wcrtomb@plt+0xff40>
  40c6e4:	mov	x21, x0
  40c6e8:	str	x0, [x23]
  40c6ec:	add	x2, x0, #0x800
  40c6f0:	mov	x1, #0xfffffffffffffffe    	// #-2
  40c6f4:	str	x1, [x0], #8
  40c6f8:	cmp	x0, x2
  40c6fc:	b.ne	40c6f4 <wcrtomb@plt+0x99b4>  // b.any
  40c700:	b	40c56c <wcrtomb@plt+0x982c>
  40c704:	ldr	x0, [x0]
  40c708:	add	x0, x0, x22, lsl #4
  40c70c:	add	x2, sp, #0xf8
  40c710:	ldp	x0, x1, [x0]
  40c714:	bl	40b5c8 <wcrtomb@plt+0x8888>
  40c718:	add	x22, x22, #0x1
  40c71c:	ldr	x0, [x19, #296]
  40c720:	add	x0, x0, x20
  40c724:	ldr	x0, [x0, #8]
  40c728:	ldr	x0, [x0, x23]
  40c72c:	add	x0, x0, x0, lsl #1
  40c730:	ldr	x1, [x19, #320]
  40c734:	add	x0, x1, x0, lsl #3
  40c738:	ldr	x1, [x0, #8]
  40c73c:	cmp	x1, x22
  40c740:	b.gt	40c704 <wcrtomb@plt+0x99c4>
  40c744:	add	x24, x24, #0x1
  40c748:	ldr	x0, [x19, #296]
  40c74c:	add	x0, x0, x20
  40c750:	ldr	x0, [x0, #16]
  40c754:	cmp	x0, x24
  40c758:	b.le	40c634 <wcrtomb@plt+0x98f4>
  40c75c:	lsl	x23, x24, #4
  40c760:	ldr	x0, [x19, #296]
  40c764:	add	x0, x0, x20
  40c768:	ldr	x0, [x0, #8]
  40c76c:	ldr	x0, [x0, x23]
  40c770:	add	x0, x0, x0, lsl #1
  40c774:	ldr	x1, [x19, #320]
  40c778:	add	x0, x1, x0, lsl #3
  40c77c:	ldr	x1, [x0, #8]
  40c780:	mov	x22, #0x0                   	// #0
  40c784:	cmp	x1, #0x0
  40c788:	b.gt	40c704 <wcrtomb@plt+0x99c4>
  40c78c:	b	40c744 <wcrtomb@plt+0x9a04>
  40c790:	add	x0, sp, #0x88
  40c794:	bl	40b2fc <wcrtomb@plt+0x85bc>
  40c798:	ldr	x0, [x19, #144]
  40c79c:	ldr	x0, [x0, x26, lsl #3]
  40c7a0:	add	x1, sp, #0x88
  40c7a4:	bl	40b138 <wcrtomb@plt+0x83f8>
  40c7a8:	ldr	x0, [x19, #144]
  40c7ac:	ldr	x0, [x0, x26, lsl #3]
  40c7b0:	ldrb	w1, [sp, #108]
  40c7b4:	cmp	x0, w1, uxtb
  40c7b8:	cset	w26, eq  // eq = none
  40c7bc:	b	40c948 <wcrtomb@plt+0x9c08>
  40c7c0:	cmp	x0, #0x10a
  40c7c4:	b.ne	40c8dc <wcrtomb@plt+0x9b9c>  // b.any
  40c7c8:	add	x1, sp, #0x88
  40c7cc:	ldr	x0, [x19, #24]
  40c7d0:	ldr	x2, [x19]
  40c7d4:	add	x0, x2, x0, lsl #5
  40c7d8:	ld1	{v0.16b, v1.16b}, [x0]
  40c7dc:	st1	{v0.16b, v1.16b}, [x1]
  40c7e0:	ldr	w0, [sp, #108]
  40c7e4:	bl	40b124 <wcrtomb@plt+0x83e4>
  40c7e8:	and	w26, w0, #0xff
  40c7ec:	ldr	x27, [x19, #296]
  40c7f0:	add	x27, x27, x20
  40c7f4:	mov	w2, w25
  40c7f8:	ldrb	w1, [x27, #32]
  40c7fc:	mov	w0, w23
  40c800:	bl	40b0c0 <wcrtomb@plt+0x8380>
  40c804:	and	w0, w0, #0xff
  40c808:	cbz	w0, 40c948 <wcrtomb@plt+0x9c08>
  40c80c:	ldr	x0, [x27, #56]
  40c810:	cbz	x0, 40c82c <wcrtomb@plt+0x9aec>
  40c814:	ldr	x2, [x19, #296]
  40c818:	add	x2, x2, x20
  40c81c:	add	x2, x2, #0x30
  40c820:	ldp	x0, x1, [sp, #112]
  40c824:	bl	40b5c8 <wcrtomb@plt+0x8888>
  40c828:	b	40c948 <wcrtomb@plt+0x9c08>
  40c82c:	mov	x1, #0x1                   	// #1
  40c830:	add	x0, x27, #0x30
  40c834:	bl	40bf54 <wcrtomb@plt+0x9214>
  40c838:	b	40c814 <wcrtomb@plt+0x9ad4>
  40c83c:	add	x2, sp, #0x88
  40c840:	add	x1, x19, #0x3f0
  40c844:	add	x4, x19, #0x410
  40c848:	ldr	x0, [x1], #8
  40c84c:	ldr	x3, [x2]
  40c850:	bic	x0, x3, x0
  40c854:	str	x0, [x2], #8
  40c858:	cmp	x1, x4
  40c85c:	b.ne	40c848 <wcrtomb@plt+0x9b08>  // b.any
  40c860:	b	40c974 <wcrtomb@plt+0x9c34>
  40c864:	add	x2, sp, #0x88
  40c868:	add	x1, x19, #0x3d0
  40c86c:	ldr	x0, [x1], #8
  40c870:	ldr	x3, [x2]
  40c874:	bic	x0, x3, x0
  40c878:	str	x0, [x2], #8
  40c87c:	cmp	x1, x24
  40c880:	b.ne	40c86c <wcrtomb@plt+0x9b2c>  // b.any
  40c884:	b	40c98c <wcrtomb@plt+0x9c4c>
  40c888:	add	x3, sp, #0x88
  40c88c:	add	x0, x19, #0x3d0
  40c890:	ldr	x1, [x0]
  40c894:	ldr	x2, [x0, #32]
  40c898:	orr	x2, x1, x2
  40c89c:	ldr	x1, [x3]
  40c8a0:	and	x1, x1, x2
  40c8a4:	str	x1, [x3], #8
  40c8a8:	add	x0, x0, #0x8
  40c8ac:	cmp	x24, x0
  40c8b0:	b.ne	40c890 <wcrtomb@plt+0x9b50>  // b.any
  40c8b4:	b	40c9a4 <wcrtomb@plt+0x9c64>
  40c8b8:	add	x0, sp, #0xa8
  40c8bc:	add	x2, sp, #0x88
  40c8c0:	add	x4, x0, #0x20
  40c8c4:	ldr	x1, [x2], #8
  40c8c8:	ldr	x3, [x0]
  40c8cc:	bic	x1, x3, x1
  40c8d0:	str	x1, [x0], #8
  40c8d4:	cmp	x4, x0
  40c8d8:	b.ne	40c8c4 <wcrtomb@plt+0x9b84>  // b.any
  40c8dc:	add	x22, x22, #0x1
  40c8e0:	ldr	x0, [sp, #256]
  40c8e4:	cmp	x0, x22
  40c8e8:	b.le	40ca10 <wcrtomb@plt+0x9cd0>
  40c8ec:	lsl	x0, x22, #4
  40c8f0:	ldr	x1, [sp, #248]
  40c8f4:	add	x2, x1, x0
  40c8f8:	ldp	x4, x5, [x2]
  40c8fc:	stp	x4, x5, [sp, #112]
  40c900:	ldr	w23, [x2, #8]
  40c904:	ldr	x26, [x1, x0]
  40c908:	ldr	x0, [x19, #144]
  40c90c:	ldr	x0, [x0, x26, lsl #3]
  40c910:	cmp	x0, #0xff
  40c914:	b.ls	40c790 <wcrtomb@plt+0x9a50>  // b.plast
  40c918:	cmp	x0, #0x113
  40c91c:	b.le	40c7c0 <wcrtomb@plt+0x9a80>
  40c920:	add	x1, sp, #0x88
  40c924:	ldr	x2, [x19]
  40c928:	add	x0, x2, x0, lsl #5
  40c92c:	sub	x0, x0, #0x2, lsl #12
  40c930:	sub	x0, x0, #0x280
  40c934:	ld1	{v0.16b, v1.16b}, [x0]
  40c938:	st1	{v0.16b, v1.16b}, [x1]
  40c93c:	ldr	w0, [sp, #108]
  40c940:	bl	40b124 <wcrtomb@plt+0x83e4>
  40c944:	and	w26, w0, #0xff
  40c948:	cmp	w23, #0x1ff
  40c94c:	b.eq	40c9d8 <wcrtomb@plt+0x9c98>  // b.none
  40c950:	ldr	x0, [x19, #296]
  40c954:	add	x0, x0, x20
  40c958:	ldrb	w27, [x0, #32]
  40c95c:	mov	w2, #0x4                   	// #4
  40c960:	mov	w1, w27
  40c964:	mov	w0, w23
  40c968:	bl	40b0c0 <wcrtomb@plt+0x8380>
  40c96c:	and	w0, w0, #0xff
  40c970:	cbz	w0, 40c83c <wcrtomb@plt+0x9afc>
  40c974:	mov	w2, #0x2                   	// #2
  40c978:	mov	w1, w27
  40c97c:	mov	w0, w23
  40c980:	bl	40b0c0 <wcrtomb@plt+0x8380>
  40c984:	and	w0, w0, #0xff
  40c988:	cbz	w0, 40c864 <wcrtomb@plt+0x9b24>
  40c98c:	mov	w2, w25
  40c990:	mov	w1, w27
  40c994:	mov	w0, w23
  40c998:	bl	40b0c0 <wcrtomb@plt+0x8380>
  40c99c:	and	w0, w0, #0xff
  40c9a0:	cbz	w0, 40c888 <wcrtomb@plt+0x9b48>
  40c9a4:	ldr	x0, [sp, #136]
  40c9a8:	ldr	x1, [sp, #144]
  40c9ac:	orr	x0, x0, x1
  40c9b0:	ldr	x1, [sp, #152]
  40c9b4:	ldr	x2, [sp, #160]
  40c9b8:	orr	x1, x1, x2
  40c9bc:	orr	x0, x0, x1
  40c9c0:	cbz	x0, 40c8dc <wcrtomb@plt+0x9b9c>
  40c9c4:	add	x1, sp, #0x88
  40c9c8:	ldr	w0, [sp, #108]
  40c9cc:	bl	40b124 <wcrtomb@plt+0x83e4>
  40c9d0:	and	w0, w0, #0xff
  40c9d4:	cbz	w0, 40c8b8 <wcrtomb@plt+0x9b78>
  40c9d8:	cbz	w26, 40c8b8 <wcrtomb@plt+0x9b78>
  40c9dc:	add	x0, sp, #0xa8
  40c9e0:	add	x2, sp, #0x88
  40c9e4:	add	x4, x0, #0x20
  40c9e8:	ldr	x1, [x0]
  40c9ec:	ldr	x3, [x2], #8
  40c9f0:	and	x1, x1, x3
  40c9f4:	str	x1, [x0], #8
  40c9f8:	cmp	x0, x4
  40c9fc:	b.ne	40c9e8 <wcrtomb@plt+0x9ca8>  // b.any
  40ca00:	add	x2, sp, #0xe0
  40ca04:	ldp	x0, x1, [sp, #112]
  40ca08:	bl	40b6ec <wcrtomb@plt+0x89ac>
  40ca0c:	b	40c8dc <wcrtomb@plt+0x9b9c>
  40ca10:	ldr	x1, [x19, #176]
  40ca14:	add	x0, sp, #0xc8
  40ca18:	bl	40bf54 <wcrtomb@plt+0x9214>
  40ca1c:	ldr	x2, [sp, #232]
  40ca20:	cmp	x2, #0x0
  40ca24:	b.le	40cb70 <wcrtomb@plt+0x9e30>
  40ca28:	ldrb	w0, [x19, #328]
  40ca2c:	cbz	w0, 40ca64 <wcrtomb@plt+0x9d24>
  40ca30:	ldrb	w0, [x19, #1048]
  40ca34:	cbz	w0, 40cb00 <wcrtomb@plt+0x9dc0>
  40ca38:	ldr	x4, [x19, #280]
  40ca3c:	ldr	x3, [sp, #224]
  40ca40:	mov	x1, #0x0                   	// #0
  40ca44:	lsl	x0, x1, #4
  40ca48:	ldr	x0, [x3, x0]
  40ca4c:	ldrb	w0, [x4, x0]
  40ca50:	add	x1, x1, #0x1
  40ca54:	ands	w0, w0, #0x1
  40ca58:	ccmp	x2, x1, #0x4, ne  // ne = any
  40ca5c:	b.gt	40ca44 <wcrtomb@plt+0x9d04>
  40ca60:	cbnz	w0, 40cb00 <wcrtomb@plt+0x9dc0>
  40ca64:	mov	x0, #0x1                   	// #1
  40ca68:	mov	w20, #0x0                   	// #0
  40ca6c:	add	x6, x19, #0x3e8
  40ca70:	add	x5, x19, #0x3c8
  40ca74:	add	x1, sp, #0xa8
  40ca78:	add	x1, x1, x0, lsl #3
  40ca7c:	ldur	x2, [x1, #-8]
  40ca80:	ldr	x1, [x6, x0, lsl #3]
  40ca84:	orr	w3, w20, #0x4
  40ca88:	tst	x2, x1
  40ca8c:	csel	w20, w3, w20, ne  // ne = any
  40ca90:	ldr	x3, [x5, x0, lsl #3]
  40ca94:	orr	w4, w20, #0x2
  40ca98:	tst	x2, x3
  40ca9c:	csel	w20, w4, w20, ne  // ne = any
  40caa0:	orr	x1, x1, x3
  40caa4:	orr	w3, w20, #0x1
  40caa8:	bics	xzr, x2, x1
  40caac:	csel	w20, w3, w20, ne  // ne = any
  40cab0:	add	x0, x0, #0x1
  40cab4:	cmp	x0, #0x5
  40cab8:	b.ne	40ca74 <wcrtomb@plt+0x9d34>  // b.any
  40cabc:	add	x1, sp, #0xe0
  40cac0:	mov	x0, x19
  40cac4:	bl	40b28c <wcrtomb@plt+0x854c>
  40cac8:	mov	w23, w0
  40cacc:	mov	x22, #0xffffffffffffffff    	// #-1
  40cad0:	bics	wzr, w20, w0
  40cad4:	b.ne	40cb28 <wcrtomb@plt+0x9de8>  // b.any
  40cad8:	and	w20, w23, w20
  40cadc:	mov	x23, x22
  40cae0:	tbnz	w20, #2, 40cb40 <wcrtomb@plt+0x9e00>
  40cae4:	mov	x25, x22
  40cae8:	tbnz	w20, #1, 40cb58 <wcrtomb@plt+0x9e18>
  40caec:	mov	x0, x19
  40caf0:	bl	40b910 <wcrtomb@plt+0x8bd0>
  40caf4:	mov	x20, #0x0                   	// #0
  40caf8:	add	x24, x19, #0x1cc
  40cafc:	b	40cbb8 <wcrtomb@plt+0x9e78>
  40cb00:	ldr	x0, [x19, #296]
  40cb04:	add	x3, sp, #0xc8
  40cb08:	mov	w2, #0xffffffff            	// #-1
  40cb0c:	add	x1, sp, #0xe0
  40cb10:	add	x0, x0, #0x8
  40cb14:	bl	40bcd8 <wcrtomb@plt+0x8f98>
  40cb18:	add	x1, sp, #0xe0
  40cb1c:	add	x0, sp, #0xc8
  40cb20:	bl	40c010 <wcrtomb@plt+0x92d0>
  40cb24:	b	40ca64 <wcrtomb@plt+0x9d24>
  40cb28:	eor	w2, w0, #0x7
  40cb2c:	add	x1, sp, #0xe0
  40cb30:	mov	x0, x19
  40cb34:	bl	40c090 <wcrtomb@plt+0x9350>
  40cb38:	mov	x22, x0
  40cb3c:	b	40cad8 <wcrtomb@plt+0x9d98>
  40cb40:	mov	w2, #0x4                   	// #4
  40cb44:	add	x1, sp, #0xe0
  40cb48:	mov	x0, x19
  40cb4c:	bl	40c090 <wcrtomb@plt+0x9350>
  40cb50:	mov	x23, x0
  40cb54:	b	40cae4 <wcrtomb@plt+0x9da4>
  40cb58:	mov	w2, #0x2                   	// #2
  40cb5c:	add	x1, sp, #0xe0
  40cb60:	mov	x0, x19
  40cb64:	bl	40c090 <wcrtomb@plt+0x9350>
  40cb68:	mov	x25, x0
  40cb6c:	b	40caec <wcrtomb@plt+0x9dac>
  40cb70:	ldrb	w0, [x19, #328]
  40cb74:	cbz	w0, 40cb90 <wcrtomb@plt+0x9e50>
  40cb78:	ldr	w25, [x19, #364]
  40cb7c:	sub	w25, w25, #0x1
  40cb80:	sxtw	x25, w25
  40cb84:	ldr	x22, [x19, #400]
  40cb88:	mov	x23, #0x0                   	// #0
  40cb8c:	b	40caf4 <wcrtomb@plt+0x9db4>
  40cb90:	mov	x25, #0xffffffffffffffff    	// #-1
  40cb94:	mov	x23, x25
  40cb98:	mov	x22, x25
  40cb9c:	b	40caf4 <wcrtomb@plt+0x9db4>
  40cba0:	cmp	w0, #0x4
  40cba4:	csel	x0, x22, x23, ne  // ne = any
  40cba8:	str	x0, [x21, x20, lsl #3]
  40cbac:	add	x20, x20, #0x1
  40cbb0:	cmp	x20, #0x100
  40cbb4:	b.eq	40cbe0 <wcrtomb@plt+0x9ea0>  // b.none
  40cbb8:	add	x1, sp, #0xa8
  40cbbc:	mov	w0, w20
  40cbc0:	bl	40b124 <wcrtomb@plt+0x83e4>
  40cbc4:	and	w0, w0, #0xff
  40cbc8:	cbz	w0, 40cbac <wcrtomb@plt+0x9e6c>
  40cbcc:	ldrb	w0, [x24, x20]
  40cbd0:	cmp	w0, #0x2
  40cbd4:	b.ne	40cba0 <wcrtomb@plt+0x9e60>  // b.any
  40cbd8:	str	x25, [x21, x20, lsl #3]
  40cbdc:	b	40cbac <wcrtomb@plt+0x9e6c>
  40cbe0:	ldr	x0, [sp, #224]
  40cbe4:	bl	402ae0 <free@plt>
  40cbe8:	ldr	x0, [sp, #248]
  40cbec:	bl	402ae0 <free@plt>
  40cbf0:	ldr	x0, [sp, #200]
  40cbf4:	bl	402ae0 <free@plt>
  40cbf8:	ldrb	w20, [x19, #459]
  40cbfc:	add	x1, sp, #0xa8
  40cc00:	mov	w0, w20
  40cc04:	bl	40b124 <wcrtomb@plt+0x83e4>
  40cc08:	and	w0, w0, #0xff
  40cc0c:	cbz	w0, 40cc2c <wcrtomb@plt+0x9eec>
  40cc10:	and	x20, x20, #0xff
  40cc14:	ldr	x1, [x21, x20, lsl #3]
  40cc18:	ldr	x0, [x19, #392]
  40cc1c:	str	x1, [x0, x28, lsl #3]
  40cc20:	ldrb	w0, [x19, #459]
  40cc24:	mov	x1, #0xffffffffffffffff    	// #-1
  40cc28:	str	x1, [x21, x0, lsl #3]
  40cc2c:	ldrb	w0, [sp, #108]
  40cc30:	ldr	x0, [x21, x0, lsl #3]
  40cc34:	ldp	x19, x20, [sp, #16]
  40cc38:	ldp	x21, x22, [sp, #32]
  40cc3c:	ldp	x23, x24, [sp, #48]
  40cc40:	ldp	x25, x26, [sp, #64]
  40cc44:	ldp	x27, x28, [sp, #80]
  40cc48:	ldp	x29, x30, [sp], #272
  40cc4c:	ret
  40cc50:	stp	x29, x30, [sp, #-96]!
  40cc54:	mov	x29, sp
  40cc58:	stp	x19, x20, [sp, #16]
  40cc5c:	stp	x21, x22, [sp, #32]
  40cc60:	stp	x23, x24, [sp, #48]
  40cc64:	stp	x25, x26, [sp, #64]
  40cc68:	mov	x19, x0
  40cc6c:	mov	x25, x1
  40cc70:	mov	x23, x2
  40cc74:	mov	x2, x3
  40cc78:	ldr	x1, [x23]
  40cc7c:	mov	x3, x0
  40cc80:	sub	x2, x2, x1
  40cc84:	add	x0, sp, #0x5c
  40cc88:	bl	40b308 <wcrtomb@plt+0x85c8>
  40cc8c:	mov	w24, w0
  40cc90:	str	xzr, [x19, #416]
  40cc94:	mov	x20, x25
  40cc98:	mov	w22, #0x0                   	// #0
  40cc9c:	cmp	w0, #0x0
  40cca0:	b.gt	40ccf0 <wcrtomb@plt+0x9fb0>
  40cca4:	b	40cd6c <wcrtomb@plt+0xa02c>
  40cca8:	ldr	x0, [x23]
  40ccac:	ldrb	w2, [x0]
  40ccb0:	and	x0, x2, #0xff
  40ccb4:	ldr	x0, [x21, x0, lsl #3]
  40ccb8:	cmn	x0, #0x2
  40ccbc:	b.eq	40cd58 <wcrtomb@plt+0xa018>  // b.none
  40ccc0:	ldr	x2, [x23]
  40ccc4:	add	x0, x2, #0x1
  40ccc8:	str	x0, [x23]
  40cccc:	ldrb	w0, [x2]
  40ccd0:	ldr	x20, [x21, x0, lsl #3]
  40ccd4:	add	w22, w22, #0x1
  40ccd8:	cmp	w24, w22
  40ccdc:	b.eq	40cd68 <wcrtomb@plt+0xa028>  // b.none
  40cce0:	cbz	w22, 40ccf0 <wcrtomb@plt+0x9fb0>
  40cce4:	ldrsw	x0, [x19, #364]
  40cce8:	cmp	x0, x20
  40ccec:	b.gt	40cd6c <wcrtomb@plt+0xa02c>
  40ccf0:	lsl	x26, x20, #3
  40ccf4:	ldr	x0, [x19, #368]
  40ccf8:	ldr	x21, [x0, x20, lsl #3]
  40ccfc:	cbnz	x21, 40cca8 <wcrtomb@plt+0x9f68>
  40cd00:	ldr	x0, [x19, #376]
  40cd04:	ldr	x21, [x0, x20, lsl #3]
  40cd08:	cbnz	x21, 40cca8 <wcrtomb@plt+0x9f68>
  40cd0c:	ldr	x0, [x23]
  40cd10:	ldrb	w2, [x0]
  40cd14:	mov	x1, x19
  40cd18:	mov	x0, x20
  40cd1c:	bl	40c514 <wcrtomb@plt+0x97d4>
  40cd20:	ldr	x0, [x19, #368]
  40cd24:	ldr	x21, [x0, x26]
  40cd28:	cbnz	x21, 40cca8 <wcrtomb@plt+0x9f68>
  40cd2c:	ldr	x0, [x19, #376]
  40cd30:	ldr	x21, [x0, x26]
  40cd34:	cbnz	x21, 40cca8 <wcrtomb@plt+0x9f68>
  40cd38:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40cd3c:	add	x3, x3, #0xcb0
  40cd40:	mov	w2, #0xc93                 	// #3219
  40cd44:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40cd48:	add	x1, x1, #0xa10
  40cd4c:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40cd50:	add	x0, x0, #0xa20
  40cd54:	bl	402ca0 <__assert_fail@plt>
  40cd58:	mov	x1, x19
  40cd5c:	mov	x0, x20
  40cd60:	bl	40c514 <wcrtomb@plt+0x97d4>
  40cd64:	b	40ccc0 <wcrtomb@plt+0x9f80>
  40cd68:	mov	w22, w24
  40cd6c:	sub	w22, w24, w22
  40cd70:	ldr	x24, [x23]
  40cd74:	add	x22, x24, w22, sxtw
  40cd78:	str	x22, [x23]
  40cd7c:	mov	x22, x20
  40cd80:	ldr	w0, [sp, #92]
  40cd84:	cmn	w0, #0x1
  40cd88:	b.eq	40ce3c <wcrtomb@plt+0xa0fc>  // b.none
  40cd8c:	add	x25, x25, x25, lsl #2
  40cd90:	lsl	x25, x25, #4
  40cd94:	ldr	x0, [x19, #296]
  40cd98:	add	x0, x0, x25
  40cd9c:	ldr	x0, [x0, #72]
  40cda0:	tbnz	x0, #63, 40ce58 <wcrtomb@plt+0xa118>
  40cda4:	mov	x23, x20
  40cda8:	lsl	x21, x20, #3
  40cdac:	ldr	x22, [x19, #432]
  40cdb0:	ldr	x1, [x22, x20, lsl #3]
  40cdb4:	cbz	x1, 40ceec <wcrtomb@plt+0xa1ac>
  40cdb8:	ldr	x0, [x19, #296]
  40cdbc:	add	x0, x0, x25
  40cdc0:	ldr	x0, [x0, #72]
  40cdc4:	ldr	x22, [x1, x0, lsl #3]
  40cdc8:	tbz	x22, #63, 40ce3c <wcrtomb@plt+0xa0fc>
  40cdcc:	cmn	x20, #0x1
  40cdd0:	b.eq	40cf1c <wcrtomb@plt+0xa1dc>  // b.none
  40cdd4:	ldr	x0, [x19, #296]
  40cdd8:	add	x23, x23, x23, lsl #2
  40cddc:	add	x1, x0, x23, lsl #4
  40cde0:	add	x0, x0, x25
  40cde4:	add	x3, x19, #0x198
  40cde8:	mov	w2, #0xffffffff            	// #-1
  40cdec:	add	x1, x1, #0x8
  40cdf0:	add	x0, x0, #0x30
  40cdf4:	bl	40bcd8 <wcrtomb@plt+0x8f98>
  40cdf8:	add	x20, x19, #0x198
  40cdfc:	mov	x1, x20
  40ce00:	mov	x0, x19
  40ce04:	bl	40b28c <wcrtomb@plt+0x854c>
  40ce08:	eor	w2, w0, #0x7
  40ce0c:	mov	x1, x20
  40ce10:	mov	x0, x19
  40ce14:	bl	40c090 <wcrtomb@plt+0x9350>
  40ce18:	mov	x22, x0
  40ce1c:	mov	x0, x19
  40ce20:	bl	40b910 <wcrtomb@plt+0x8bd0>
  40ce24:	ldr	x2, [x19, #432]
  40ce28:	ldr	x0, [x19, #296]
  40ce2c:	add	x25, x0, x25
  40ce30:	ldr	x1, [x25, #72]
  40ce34:	ldr	x0, [x2, x21]
  40ce38:	str	x22, [x0, x1, lsl #3]
  40ce3c:	mov	x0, x22
  40ce40:	ldp	x19, x20, [sp, #16]
  40ce44:	ldp	x21, x22, [sp, #32]
  40ce48:	ldp	x23, x24, [sp, #48]
  40ce4c:	ldp	x25, x26, [sp, #64]
  40ce50:	ldp	x29, x30, [sp], #96
  40ce54:	ret
  40ce58:	ldr	x0, [x19, #440]
  40ce5c:	cmp	x0, #0x3ff
  40ce60:	b.le	40ced0 <wcrtomb@plt+0xa190>
  40ce64:	ldr	x0, [x19, #352]
  40ce68:	tbnz	x0, #63, 40ce94 <wcrtomb@plt+0xa154>
  40ce6c:	mov	x21, #0xffffffffffffffff    	// #-1
  40ce70:	ldr	x0, [x19, #432]
  40ce74:	ldr	x0, [x0, x21, lsl #3]
  40ce78:	bl	402ae0 <free@plt>
  40ce7c:	ldr	x0, [x19, #432]
  40ce80:	str	xzr, [x0, x21, lsl #3]
  40ce84:	add	x21, x21, #0x1
  40ce88:	ldr	x0, [x19, #352]
  40ce8c:	cmp	x0, x21
  40ce90:	b.gt	40ce70 <wcrtomb@plt+0xa130>
  40ce94:	ldr	x0, [x19, #304]
  40ce98:	cmp	x0, #0x0
  40ce9c:	b.le	40cecc <wcrtomb@plt+0xa18c>
  40cea0:	mov	x2, #0x0                   	// #0
  40cea4:	mov	x1, #0x0                   	// #0
  40cea8:	mov	x3, #0xffffffffffffffff    	// #-1
  40ceac:	ldr	x0, [x19, #296]
  40ceb0:	add	x0, x0, x2
  40ceb4:	str	x3, [x0, #72]
  40ceb8:	add	x1, x1, #0x1
  40cebc:	add	x2, x2, #0x50
  40cec0:	ldr	x0, [x19, #304]
  40cec4:	cmp	x0, x1
  40cec8:	b.gt	40ceac <wcrtomb@plt+0xa16c>
  40cecc:	str	xzr, [x19, #440]
  40ced0:	ldr	x1, [x19, #440]
  40ced4:	add	x0, x1, #0x1
  40ced8:	str	x0, [x19, #440]
  40cedc:	ldr	x0, [x19, #296]
  40cee0:	add	x0, x0, x25
  40cee4:	str	x1, [x0, #72]
  40cee8:	b	40cda4 <wcrtomb@plt+0xa064>
  40ceec:	mov	x0, #0x2000                	// #8192
  40cef0:	bl	412c80 <wcrtomb@plt+0xff40>
  40cef4:	str	x0, [x22, x20, lsl #3]
  40cef8:	mov	x0, #0x0                   	// #0
  40cefc:	mov	x2, #0xffffffffffffffff    	// #-1
  40cf00:	ldr	x1, [x19, #432]
  40cf04:	ldr	x1, [x1, x21]
  40cf08:	str	x2, [x1, x0]
  40cf0c:	add	x0, x0, #0x8
  40cf10:	cmp	x0, #0x2, lsl #12
  40cf14:	b.ne	40cf00 <wcrtomb@plt+0xa1c0>  // b.any
  40cf18:	b	40cdcc <wcrtomb@plt+0xa08c>
  40cf1c:	ldr	x0, [x19, #296]
  40cf20:	add	x0, x0, x25
  40cf24:	add	x1, x19, #0x198
  40cf28:	add	x0, x0, #0x30
  40cf2c:	bl	40c010 <wcrtomb@plt+0x92d0>
  40cf30:	b	40cdf8 <wcrtomb@plt+0xa0b8>
  40cf34:	stp	x29, x30, [sp, #-144]!
  40cf38:	mov	x29, sp
  40cf3c:	stp	x19, x20, [sp, #16]
  40cf40:	stp	x21, x22, [sp, #32]
  40cf44:	stp	x23, x24, [sp, #48]
  40cf48:	stp	x25, x26, [sp, #64]
  40cf4c:	stp	x27, x28, [sp, #80]
  40cf50:	mov	x19, x0
  40cf54:	mov	x21, x1
  40cf58:	mov	x23, x2
  40cf5c:	and	w0, w3, #0xff
  40cf60:	str	w0, [sp, #116]
  40cf64:	mov	x26, x4
  40cf68:	ldr	x0, [x19, #304]
  40cf6c:	cmp	x0, #0x3ff
  40cf70:	b.le	40d09c <wcrtomb@plt+0xa35c>
  40cf74:	ldr	w20, [x19, #364]
  40cf78:	sxtw	x22, w20
  40cf7c:	cmp	x0, w20, sxtw
  40cf80:	b.le	40cfc4 <wcrtomb@plt+0xa284>
  40cf84:	sbfiz	x0, x20, #2, #32
  40cf88:	add	x20, x0, w20, sxtw
  40cf8c:	lsl	x20, x20, #4
  40cf90:	ldr	x0, [x19, #296]
  40cf94:	add	x0, x0, x20
  40cf98:	ldr	x0, [x0, #8]
  40cf9c:	bl	402ae0 <free@plt>
  40cfa0:	ldr	x0, [x19, #296]
  40cfa4:	add	x0, x0, x20
  40cfa8:	ldr	x0, [x0, #48]
  40cfac:	bl	402ae0 <free@plt>
  40cfb0:	add	x22, x22, #0x1
  40cfb4:	add	x20, x20, #0x50
  40cfb8:	ldr	x0, [x19, #304]
  40cfbc:	cmp	x22, x0
  40cfc0:	b.lt	40cf90 <wcrtomb@plt+0xa250>  // b.tstop
  40cfc4:	ldrsw	x0, [x19, #364]
  40cfc8:	str	x0, [x19, #304]
  40cfcc:	ldr	x0, [x19, #368]
  40cfd0:	cbz	x0, 40d020 <wcrtomb@plt+0xa2e0>
  40cfd4:	ldr	x0, [x19, #352]
  40cfd8:	cmp	x0, #0x0
  40cfdc:	b.le	40d01c <wcrtomb@plt+0xa2dc>
  40cfe0:	mov	x20, #0x0                   	// #0
  40cfe4:	ldr	x0, [x19, #368]
  40cfe8:	ldr	x0, [x0, x20, lsl #3]
  40cfec:	bl	402ae0 <free@plt>
  40cff0:	ldr	x0, [x19, #376]
  40cff4:	ldr	x0, [x0, x20, lsl #3]
  40cff8:	bl	402ae0 <free@plt>
  40cffc:	ldr	x0, [x19, #376]
  40d000:	str	xzr, [x0, x20, lsl #3]
  40d004:	ldr	x0, [x19, #368]
  40d008:	str	xzr, [x0, x20, lsl #3]
  40d00c:	add	x20, x20, #0x1
  40d010:	ldr	x0, [x19, #352]
  40d014:	cmp	x20, x0
  40d018:	b.lt	40cfe4 <wcrtomb@plt+0xa2a4>  // b.tstop
  40d01c:	str	wzr, [x19, #360]
  40d020:	ldrb	w0, [x19, #1048]
  40d024:	cbz	w0, 40d09c <wcrtomb@plt+0xa35c>
  40d028:	ldr	x0, [x19, #432]
  40d02c:	cbz	x0, 40d09c <wcrtomb@plt+0xa35c>
  40d030:	ldr	x0, [x19, #352]
  40d034:	tbnz	x0, #63, 40d060 <wcrtomb@plt+0xa320>
  40d038:	mov	x20, #0xffffffffffffffff    	// #-1
  40d03c:	ldr	x0, [x19, #432]
  40d040:	ldr	x0, [x0, x20, lsl #3]
  40d044:	bl	402ae0 <free@plt>
  40d048:	ldr	x0, [x19, #432]
  40d04c:	str	xzr, [x0, x20, lsl #3]
  40d050:	add	x20, x20, #0x1
  40d054:	ldr	x0, [x19, #352]
  40d058:	cmp	x20, x0
  40d05c:	b.lt	40d03c <wcrtomb@plt+0xa2fc>  // b.tstop
  40d060:	ldr	w0, [x19, #364]
  40d064:	cmp	w0, #0x0
  40d068:	b.le	40d098 <wcrtomb@plt+0xa358>
  40d06c:	mov	x2, #0x0                   	// #0
  40d070:	mov	x1, #0x0                   	// #0
  40d074:	mov	x3, #0xffffffffffffffff    	// #-1
  40d078:	ldr	x0, [x19, #296]
  40d07c:	add	x0, x0, x2
  40d080:	str	x3, [x0, #72]
  40d084:	add	x1, x1, #0x1
  40d088:	add	x2, x2, #0x50
  40d08c:	ldrsw	x0, [x19, #364]
  40d090:	cmp	x1, x0
  40d094:	b.lt	40d078 <wcrtomb@plt+0xa338>  // b.tstop
  40d098:	str	xzr, [x19, #440]
  40d09c:	ldr	x0, [x19, #352]
  40d0a0:	cbz	x0, 40d0e0 <wcrtomb@plt+0xa3a0>
  40d0a4:	str	x21, [sp, #136]
  40d0a8:	ldr	x25, [x19, #368]
  40d0ac:	ldrb	w28, [x19, #459]
  40d0b0:	ldrb	w0, [x23]
  40d0b4:	str	w0, [sp, #112]
  40d0b8:	strb	w28, [x23]
  40d0bc:	str	xzr, [x19, #272]
  40d0c0:	ldr	x0, [x19, #424]
  40d0c4:	cbz	x0, 40d0ec <wcrtomb@plt+0xa3ac>
  40d0c8:	str	xzr, [sp, #96]
  40d0cc:	mov	x27, #0x0                   	// #0
  40d0d0:	mov	x20, #0x0                   	// #0
  40d0d4:	add	x0, x19, w28, sxtw
  40d0d8:	str	x0, [sp, #120]
  40d0dc:	b	40d19c <wcrtomb@plt+0xa45c>
  40d0e0:	mov	x0, x19
  40d0e4:	bl	40b910 <wcrtomb@plt+0x8bd0>
  40d0e8:	b	40d0a4 <wcrtomb@plt+0xa364>
  40d0ec:	ldr	x1, [x19, #176]
  40d0f0:	add	x0, x19, #0x198
  40d0f4:	bl	40bf54 <wcrtomb@plt+0x9214>
  40d0f8:	b	40d0c8 <wcrtomb@plt+0xa388>
  40d0fc:	ldr	x0, [sp, #136]
  40d100:	ldrb	w1, [x0]
  40d104:	ldr	x1, [x24, x1, lsl #3]
  40d108:	cmp	x20, x1
  40d10c:	b.ne	40d1d0 <wcrtomb@plt+0xa490>  // b.any
  40d110:	add	x0, x0, #0x1
  40d114:	str	x0, [sp, #136]
  40d118:	ldrb	w1, [x0]
  40d11c:	add	x0, x0, #0x1
  40d120:	ldr	x1, [x24, x1, lsl #3]
  40d124:	cmp	x20, x1
  40d128:	b.eq	40d114 <wcrtomb@plt+0xa3d4>  // b.none
  40d12c:	b	40d1d0 <wcrtomb@plt+0xa490>
  40d130:	mov	x3, x19
  40d134:	sub	x2, x23, x21
  40d138:	mov	x1, x21
  40d13c:	add	x0, sp, #0x84
  40d140:	bl	40b308 <wcrtomb@plt+0x85c8>
  40d144:	add	x21, x21, w0, sxtw
  40d148:	cmp	x27, x21
  40d14c:	b.hi	40d130 <wcrtomb@plt+0xa3f0>  // b.pmore
  40d150:	str	x21, [sp, #136]
  40d154:	ldr	x0, [x19, #296]
  40d158:	add	x22, x22, x22, lsl #2
  40d15c:	add	x22, x0, x22, lsl #4
  40d160:	ldr	x0, [x22, #56]
  40d164:	cbz	x0, 40d184 <wcrtomb@plt+0xa444>
  40d168:	ldr	x1, [sp, #136]
  40d16c:	ldrb	w0, [x1]
  40d170:	add	x0, x19, x0, lsl #2
  40d174:	ldr	w0, [x0, #1308]
  40d178:	cmp	x23, x1
  40d17c:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40d180:	b.eq	40d1f8 <wcrtomb@plt+0xa4b8>  // b.none
  40d184:	ldr	x0, [sp, #136]
  40d188:	add	x1, x0, #0x1
  40d18c:	str	x1, [sp, #136]
  40d190:	ldrb	w0, [x0]
  40d194:	mov	x27, x20
  40d198:	ldr	x20, [x24, x0, lsl #3]
  40d19c:	mov	x22, x20
  40d1a0:	lsl	x0, x20, #3
  40d1a4:	str	x0, [sp, #104]
  40d1a8:	ldr	x24, [x25, x20, lsl #3]
  40d1ac:	cbz	x24, 40d220 <wcrtomb@plt+0xa4e0>
  40d1b0:	ldrsw	x0, [x19, #364]
  40d1b4:	cmp	x0, x20
  40d1b8:	b.le	40d154 <wcrtomb@plt+0xa414>
  40d1bc:	ldr	x1, [x19, #296]
  40d1c0:	add	x0, x22, x22, lsl #2
  40d1c4:	add	x0, x1, x0, lsl #4
  40d1c8:	ldr	x0, [x0, #56]
  40d1cc:	cbz	x0, 40d0fc <wcrtomb@plt+0xa3bc>
  40d1d0:	ldr	x27, [sp, #136]
  40d1d4:	ldrb	w0, [x27]
  40d1d8:	add	x0, x19, x0
  40d1dc:	ldrb	w0, [x0, #716]
  40d1e0:	cbnz	w0, 40d1f0 <wcrtomb@plt+0xa4b0>
  40d1e4:	cmp	x27, x21
  40d1e8:	b.hi	40d130 <wcrtomb@plt+0xa3f0>  // b.pmore
  40d1ec:	b	40d150 <wcrtomb@plt+0xa410>
  40d1f0:	mov	x21, x27
  40d1f4:	b	40d150 <wcrtomb@plt+0xa410>
  40d1f8:	mov	x3, x23
  40d1fc:	add	x2, sp, #0x88
  40d200:	mov	x1, x20
  40d204:	mov	x0, x19
  40d208:	bl	40cc50 <wcrtomb@plt+0x9f10>
  40d20c:	ldr	x21, [sp, #136]
  40d210:	ldr	x25, [x19, #368]
  40d214:	mov	x27, x20
  40d218:	mov	x20, x0
  40d21c:	b	40d19c <wcrtomb@plt+0xa45c>
  40d220:	tbnz	x20, #63, 40d2c4 <wcrtomb@plt+0xa584>
  40d224:	ldr	x0, [x19, #376]
  40d228:	ldr	x1, [sp, #104]
  40d22c:	ldr	x0, [x0, x1]
  40d230:	cbz	x0, 40d430 <wcrtomb@plt+0xa6f0>
  40d234:	ldr	x24, [sp, #136]
  40d238:	ldrb	w27, [x24]
  40d23c:	ldr	x0, [x19, #384]
  40d240:	add	x1, x19, w27, sxtw
  40d244:	ldrb	w0, [x0, x20]
  40d248:	ldrb	w1, [x1, #460]
  40d24c:	and	w0, w0, w1
  40d250:	tst	w0, #0xff
  40d254:	b.ne	40d35c <wcrtomb@plt+0xa61c>  // b.any
  40d258:	cmp	x23, x24
  40d25c:	b.eq	40d398 <wcrtomb@plt+0xa658>  // b.none
  40d260:	ldrsw	x0, [x19, #364]
  40d264:	cmp	x20, x0
  40d268:	b.lt	40d3c4 <wcrtomb@plt+0xa684>  // b.tstop
  40d26c:	ldr	x0, [x19, #296]
  40d270:	add	x22, x22, x22, lsl #2
  40d274:	add	x22, x0, x22, lsl #4
  40d278:	ldr	x0, [x22, #56]
  40d27c:	cbz	x0, 40d29c <wcrtomb@plt+0xa55c>
  40d280:	ldr	x1, [sp, #136]
  40d284:	ldrb	w0, [x1]
  40d288:	add	x0, x19, x0, lsl #2
  40d28c:	ldr	w0, [x0, #1308]
  40d290:	cmp	x23, x1
  40d294:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40d298:	b.eq	40d408 <wcrtomb@plt+0xa6c8>  // b.none
  40d29c:	ldr	x0, [x19, #376]
  40d2a0:	ldr	x1, [sp, #104]
  40d2a4:	ldr	x1, [x0, x1]
  40d2a8:	ldr	x0, [sp, #136]
  40d2ac:	add	x2, x0, #0x1
  40d2b0:	str	x2, [sp, #136]
  40d2b4:	ldrb	w0, [x0]
  40d2b8:	mov	x27, x20
  40d2bc:	ldr	x20, [x1, x0, lsl #3]
  40d2c0:	b	40d19c <wcrtomb@plt+0xa45c>
  40d2c4:	cmn	x20, #0x2
  40d2c8:	b.eq	40d328 <wcrtomb@plt+0xa5e8>  // b.none
  40d2cc:	ldr	x21, [sp, #136]
  40d2d0:	cmp	x23, x21
  40d2d4:	b.cc	40d358 <wcrtomb@plt+0xa618>  // b.lo, b.ul, b.last
  40d2d8:	ldurb	w0, [x21, #-1]
  40d2dc:	cmp	w0, w28
  40d2e0:	b.ne	40d358 <wcrtomb@plt+0xa618>  // b.any
  40d2e4:	ldr	x0, [x19, #392]
  40d2e8:	ldr	x20, [x0, x27, lsl #3]
  40d2ec:	tbnz	x20, #63, 40d358 <wcrtomb@plt+0xa618>
  40d2f0:	ldr	x0, [sp, #96]
  40d2f4:	add	x0, x0, #0x1
  40d2f8:	str	x0, [sp, #96]
  40d2fc:	ldr	w0, [sp, #116]
  40d300:	cbnz	w0, 40d19c <wcrtomb@plt+0xa45c>
  40d304:	ldr	x0, [sp, #120]
  40d308:	ldrb	w0, [x0, #460]
  40d30c:	mov	x20, #0x0                   	// #0
  40d310:	cmp	w0, #0x4
  40d314:	b.eq	40d19c <wcrtomb@plt+0xa45c>  // b.none
  40d318:	cmp	w0, #0x2
  40d31c:	b.eq	40d348 <wcrtomb@plt+0xa608>  // b.none
  40d320:	ldr	x20, [x19, #400]
  40d324:	b	40d19c <wcrtomb@plt+0xa45c>
  40d328:	ldr	x0, [sp, #136]
  40d32c:	ldurb	w2, [x0, #-1]
  40d330:	mov	x1, x19
  40d334:	mov	x0, x27
  40d338:	bl	40c514 <wcrtomb@plt+0x97d4>
  40d33c:	mov	x20, x0
  40d340:	ldr	x25, [x19, #368]
  40d344:	b	40d19c <wcrtomb@plt+0xa45c>
  40d348:	ldr	w20, [x19, #364]
  40d34c:	sub	w20, w20, #0x1
  40d350:	sxtw	x20, w20
  40d354:	b	40d19c <wcrtomb@plt+0xa45c>
  40d358:	str	xzr, [sp, #136]
  40d35c:	cbz	x26, 40d370 <wcrtomb@plt+0xa630>
  40d360:	ldr	x0, [x26]
  40d364:	ldr	x1, [sp, #96]
  40d368:	add	x0, x0, x1
  40d36c:	str	x0, [x26]
  40d370:	ldrb	w0, [sp, #112]
  40d374:	strb	w0, [x23]
  40d378:	ldr	x0, [sp, #136]
  40d37c:	ldp	x19, x20, [sp, #16]
  40d380:	ldp	x21, x22, [sp, #32]
  40d384:	ldp	x23, x24, [sp, #48]
  40d388:	ldp	x25, x26, [sp, #64]
  40d38c:	ldp	x27, x28, [sp, #80]
  40d390:	ldp	x29, x30, [sp], #144
  40d394:	ret
  40d398:	ldr	x1, [x19, #296]
  40d39c:	add	x0, x20, x20, lsl #2
  40d3a0:	add	x0, x1, x0, lsl #4
  40d3a4:	mov	x3, x19
  40d3a8:	mov	x2, x20
  40d3ac:	mov	w1, #0x4                   	// #4
  40d3b0:	ldrb	w0, [x0, #32]
  40d3b4:	bl	40b0f8 <wcrtomb@plt+0x83b8>
  40d3b8:	and	w0, w0, #0xff
  40d3bc:	cbz	w0, 40d260 <wcrtomb@plt+0xa520>
  40d3c0:	b	40d35c <wcrtomb@plt+0xa61c>
  40d3c4:	add	x27, x19, w27, sxtw
  40d3c8:	ldrb	w0, [x27, #716]
  40d3cc:	cbnz	w0, 40d400 <wcrtomb@plt+0xa6c0>
  40d3d0:	cmp	x21, x24
  40d3d4:	b.cs	40d3f8 <wcrtomb@plt+0xa6b8>  // b.hs, b.nlast
  40d3d8:	mov	x3, x19
  40d3dc:	sub	x2, x23, x21
  40d3e0:	mov	x1, x21
  40d3e4:	add	x0, sp, #0x84
  40d3e8:	bl	40b308 <wcrtomb@plt+0x85c8>
  40d3ec:	add	x21, x21, w0, sxtw
  40d3f0:	cmp	x24, x21
  40d3f4:	b.hi	40d3d8 <wcrtomb@plt+0xa698>  // b.pmore
  40d3f8:	str	x21, [sp, #136]
  40d3fc:	b	40d26c <wcrtomb@plt+0xa52c>
  40d400:	mov	x21, x24
  40d404:	b	40d3f8 <wcrtomb@plt+0xa6b8>
  40d408:	mov	x3, x23
  40d40c:	add	x2, sp, #0x88
  40d410:	mov	x1, x20
  40d414:	mov	x0, x19
  40d418:	bl	40cc50 <wcrtomb@plt+0x9f10>
  40d41c:	ldr	x21, [sp, #136]
  40d420:	ldr	x25, [x19, #368]
  40d424:	mov	x27, x20
  40d428:	mov	x20, x0
  40d42c:	b	40d19c <wcrtomb@plt+0xa45c>
  40d430:	ldr	x0, [sp, #136]
  40d434:	ldrb	w2, [x0]
  40d438:	mov	x1, x19
  40d43c:	mov	x0, x20
  40d440:	bl	40c514 <wcrtomb@plt+0x97d4>
  40d444:	ldr	x25, [x19, #368]
  40d448:	b	40d19c <wcrtomb@plt+0xa45c>
  40d44c:	stp	x29, x30, [sp, #-112]!
  40d450:	mov	x29, sp
  40d454:	stp	x19, x20, [sp, #16]
  40d458:	stp	x21, x22, [sp, #32]
  40d45c:	stp	x23, x24, [sp, #48]
  40d460:	stp	x25, x26, [sp, #64]
  40d464:	stp	x27, x28, [sp, #80]
  40d468:	mov	x19, x0
  40d46c:	mov	x20, x1
  40d470:	mov	x23, x2
  40d474:	and	w0, w3, #0xff
  40d478:	str	w0, [sp, #100]
  40d47c:	mov	x25, x4
  40d480:	ldr	x0, [x19, #304]
  40d484:	cmp	x0, #0x3ff
  40d488:	b.le	40d5b4 <wcrtomb@plt+0xa874>
  40d48c:	ldr	w21, [x19, #364]
  40d490:	sxtw	x22, w21
  40d494:	cmp	x0, w21, sxtw
  40d498:	b.le	40d4dc <wcrtomb@plt+0xa79c>
  40d49c:	sbfiz	x0, x21, #2, #32
  40d4a0:	add	x21, x0, w21, sxtw
  40d4a4:	lsl	x21, x21, #4
  40d4a8:	ldr	x0, [x19, #296]
  40d4ac:	add	x0, x0, x21
  40d4b0:	ldr	x0, [x0, #8]
  40d4b4:	bl	402ae0 <free@plt>
  40d4b8:	ldr	x0, [x19, #296]
  40d4bc:	add	x0, x0, x21
  40d4c0:	ldr	x0, [x0, #48]
  40d4c4:	bl	402ae0 <free@plt>
  40d4c8:	add	x22, x22, #0x1
  40d4cc:	add	x21, x21, #0x50
  40d4d0:	ldr	x0, [x19, #304]
  40d4d4:	cmp	x22, x0
  40d4d8:	b.lt	40d4a8 <wcrtomb@plt+0xa768>  // b.tstop
  40d4dc:	ldrsw	x0, [x19, #364]
  40d4e0:	str	x0, [x19, #304]
  40d4e4:	ldr	x0, [x19, #368]
  40d4e8:	cbz	x0, 40d538 <wcrtomb@plt+0xa7f8>
  40d4ec:	ldr	x0, [x19, #352]
  40d4f0:	cmp	x0, #0x0
  40d4f4:	b.le	40d534 <wcrtomb@plt+0xa7f4>
  40d4f8:	mov	x21, #0x0                   	// #0
  40d4fc:	ldr	x0, [x19, #368]
  40d500:	ldr	x0, [x0, x21, lsl #3]
  40d504:	bl	402ae0 <free@plt>
  40d508:	ldr	x0, [x19, #376]
  40d50c:	ldr	x0, [x0, x21, lsl #3]
  40d510:	bl	402ae0 <free@plt>
  40d514:	ldr	x0, [x19, #376]
  40d518:	str	xzr, [x0, x21, lsl #3]
  40d51c:	ldr	x0, [x19, #368]
  40d520:	str	xzr, [x0, x21, lsl #3]
  40d524:	add	x21, x21, #0x1
  40d528:	ldr	x0, [x19, #352]
  40d52c:	cmp	x21, x0
  40d530:	b.lt	40d4fc <wcrtomb@plt+0xa7bc>  // b.tstop
  40d534:	str	wzr, [x19, #360]
  40d538:	ldrb	w0, [x19, #1048]
  40d53c:	cbz	w0, 40d5b4 <wcrtomb@plt+0xa874>
  40d540:	ldr	x0, [x19, #432]
  40d544:	cbz	x0, 40d5b4 <wcrtomb@plt+0xa874>
  40d548:	ldr	x0, [x19, #352]
  40d54c:	tbnz	x0, #63, 40d578 <wcrtomb@plt+0xa838>
  40d550:	mov	x21, #0xffffffffffffffff    	// #-1
  40d554:	ldr	x0, [x19, #432]
  40d558:	ldr	x0, [x0, x21, lsl #3]
  40d55c:	bl	402ae0 <free@plt>
  40d560:	ldr	x0, [x19, #432]
  40d564:	str	xzr, [x0, x21, lsl #3]
  40d568:	add	x21, x21, #0x1
  40d56c:	ldr	x0, [x19, #352]
  40d570:	cmp	x21, x0
  40d574:	b.lt	40d554 <wcrtomb@plt+0xa814>  // b.tstop
  40d578:	ldr	w0, [x19, #364]
  40d57c:	cmp	w0, #0x0
  40d580:	b.le	40d5b0 <wcrtomb@plt+0xa870>
  40d584:	mov	x2, #0x0                   	// #0
  40d588:	mov	x1, #0x0                   	// #0
  40d58c:	mov	x3, #0xffffffffffffffff    	// #-1
  40d590:	ldr	x0, [x19, #296]
  40d594:	add	x0, x0, x2
  40d598:	str	x3, [x0, #72]
  40d59c:	add	x1, x1, #0x1
  40d5a0:	add	x2, x2, #0x50
  40d5a4:	ldrsw	x0, [x19, #364]
  40d5a8:	cmp	x1, x0
  40d5ac:	b.lt	40d590 <wcrtomb@plt+0xa850>  // b.tstop
  40d5b0:	str	xzr, [x19, #440]
  40d5b4:	ldr	x0, [x19, #352]
  40d5b8:	cbz	x0, 40d5e8 <wcrtomb@plt+0xa8a8>
  40d5bc:	ldr	x24, [x19, #368]
  40d5c0:	ldrb	w26, [x19, #459]
  40d5c4:	ldrb	w0, [x23]
  40d5c8:	str	w0, [sp, #96]
  40d5cc:	strb	w26, [x23]
  40d5d0:	mov	x27, #0x0                   	// #0
  40d5d4:	mov	x2, #0x0                   	// #0
  40d5d8:	mov	x22, #0x0                   	// #0
  40d5dc:	add	x0, x19, w26, sxtw
  40d5e0:	str	x0, [sp, #104]
  40d5e4:	b	40d7bc <wcrtomb@plt+0xaa7c>
  40d5e8:	mov	x0, x19
  40d5ec:	bl	40b910 <wcrtomb@plt+0x8bd0>
  40d5f0:	b	40d5bc <wcrtomb@plt+0xa87c>
  40d5f4:	ldrb	w2, [x20, #1]
  40d5f8:	ldr	x2, [x1, x2, lsl #3]
  40d5fc:	cmp	x21, x2
  40d600:	b.ne	40d7a4 <wcrtomb@plt+0xaa64>  // b.any
  40d604:	ldrb	w2, [x0, #1]!
  40d608:	ldr	x2, [x1, x2, lsl #3]
  40d60c:	cmp	x21, x2
  40d610:	b.eq	40d604 <wcrtomb@plt+0xa8c4>  // b.none
  40d614:	b	40d7a4 <wcrtomb@plt+0xaa64>
  40d618:	mov	x21, x22
  40d61c:	mov	x22, x2
  40d620:	tbnz	x21, #63, 40d678 <wcrtomb@plt+0xa938>
  40d624:	mov	x0, x21
  40d628:	ldr	x1, [x19, #376]
  40d62c:	ldr	x28, [x1, x21, lsl #3]
  40d630:	cbz	x28, 40d728 <wcrtomb@plt+0xa9e8>
  40d634:	ldrb	w22, [x20]
  40d638:	ldr	x1, [x19, #384]
  40d63c:	add	x2, x19, w22, sxtw
  40d640:	ldrb	w1, [x1, x21]
  40d644:	ldrb	w2, [x2, #460]
  40d648:	and	w1, w1, w2
  40d64c:	tst	w1, #0xff
  40d650:	b.ne	40d758 <wcrtomb@plt+0xaa18>  // b.any
  40d654:	cmp	x23, x20
  40d658:	b.eq	40d6f8 <wcrtomb@plt+0xa9b8>  // b.none
  40d65c:	add	x20, x20, #0x1
  40d660:	and	x22, x22, #0xff
  40d664:	ldr	x0, [x28, x22, lsl #3]
  40d668:	mov	x22, x21
  40d66c:	b	40d7b4 <wcrtomb@plt+0xaa74>
  40d670:	mov	x20, x0
  40d674:	b	40d620 <wcrtomb@plt+0xa8e0>
  40d678:	cmn	x21, #0x2
  40d67c:	b.eq	40d6d0 <wcrtomb@plt+0xa990>  // b.none
  40d680:	cmp	x23, x20
  40d684:	b.cc	40d740 <wcrtomb@plt+0xaa00>  // b.lo, b.ul, b.last
  40d688:	ldurb	w0, [x20, #-1]
  40d68c:	cmp	w0, w26
  40d690:	b.ne	40d748 <wcrtomb@plt+0xaa08>  // b.any
  40d694:	ldr	x0, [x19, #392]
  40d698:	ldr	x0, [x0, x22, lsl #3]
  40d69c:	tbnz	x0, #63, 40d750 <wcrtomb@plt+0xaa10>
  40d6a0:	add	x27, x27, #0x1
  40d6a4:	ldr	w1, [sp, #100]
  40d6a8:	cbnz	w1, 40d7b4 <wcrtomb@plt+0xaa74>
  40d6ac:	ldr	x0, [sp, #104]
  40d6b0:	ldrb	w1, [x0, #460]
  40d6b4:	mov	x0, #0x0                   	// #0
  40d6b8:	cmp	w1, #0x4
  40d6bc:	b.eq	40d7b4 <wcrtomb@plt+0xaa74>  // b.none
  40d6c0:	cmp	w1, #0x2
  40d6c4:	b.eq	40d6e8 <wcrtomb@plt+0xa9a8>  // b.none
  40d6c8:	ldr	x0, [x19, #400]
  40d6cc:	b	40d7b4 <wcrtomb@plt+0xaa74>
  40d6d0:	ldurb	w2, [x20, #-1]
  40d6d4:	mov	x1, x19
  40d6d8:	mov	x0, x22
  40d6dc:	bl	40c514 <wcrtomb@plt+0x97d4>
  40d6e0:	ldr	x24, [x19, #368]
  40d6e4:	b	40d7b4 <wcrtomb@plt+0xaa74>
  40d6e8:	ldr	w0, [x19, #364]
  40d6ec:	sub	w0, w0, #0x1
  40d6f0:	sxtw	x0, w0
  40d6f4:	b	40d7b4 <wcrtomb@plt+0xaa74>
  40d6f8:	ldr	x1, [x19, #296]
  40d6fc:	add	x0, x21, x21, lsl #2
  40d700:	add	x0, x1, x0, lsl #4
  40d704:	mov	x3, x19
  40d708:	mov	x2, x21
  40d70c:	mov	w1, #0x4                   	// #4
  40d710:	ldrb	w0, [x0, #32]
  40d714:	bl	40b0f8 <wcrtomb@plt+0x83b8>
  40d718:	and	w0, w0, #0xff
  40d71c:	cbz	w0, 40d65c <wcrtomb@plt+0xa91c>
  40d720:	mov	x0, x20
  40d724:	b	40d75c <wcrtomb@plt+0xaa1c>
  40d728:	ldrb	w2, [x20]
  40d72c:	mov	x1, x19
  40d730:	bl	40c514 <wcrtomb@plt+0x97d4>
  40d734:	ldr	x24, [x19, #368]
  40d738:	mov	x0, x21
  40d73c:	b	40d7b4 <wcrtomb@plt+0xaa74>
  40d740:	mov	x0, #0x0                   	// #0
  40d744:	b	40d75c <wcrtomb@plt+0xaa1c>
  40d748:	mov	x0, #0x0                   	// #0
  40d74c:	b	40d75c <wcrtomb@plt+0xaa1c>
  40d750:	mov	x0, #0x0                   	// #0
  40d754:	b	40d75c <wcrtomb@plt+0xaa1c>
  40d758:	mov	x0, x20
  40d75c:	cbz	x25, 40d76c <wcrtomb@plt+0xaa2c>
  40d760:	ldr	x1, [x25]
  40d764:	add	x27, x1, x27
  40d768:	str	x27, [x25]
  40d76c:	ldrb	w1, [sp, #96]
  40d770:	strb	w1, [x23]
  40d774:	ldp	x19, x20, [sp, #16]
  40d778:	ldp	x21, x22, [sp, #32]
  40d77c:	ldp	x23, x24, [sp, #48]
  40d780:	ldp	x25, x26, [sp, #64]
  40d784:	ldp	x27, x28, [sp, #80]
  40d788:	ldp	x29, x30, [sp], #112
  40d78c:	ret
  40d790:	mov	x0, x20
  40d794:	ldrb	w2, [x0], #1
  40d798:	ldr	x21, [x1, x2, lsl #3]
  40d79c:	ldr	x1, [x24, x21, lsl #3]
  40d7a0:	cbz	x1, 40d670 <wcrtomb@plt+0xa930>
  40d7a4:	mov	x20, x0
  40d7a8:	ldrb	w0, [x20], #1
  40d7ac:	ldr	x0, [x1, x0, lsl #3]
  40d7b0:	mov	x22, x21
  40d7b4:	mov	x2, x22
  40d7b8:	mov	x22, x0
  40d7bc:	ldr	x1, [x24, x22, lsl #3]
  40d7c0:	cbz	x1, 40d618 <wcrtomb@plt+0xa8d8>
  40d7c4:	ldrsw	x0, [x19, #364]
  40d7c8:	cmp	x0, x22
  40d7cc:	b.le	40d790 <wcrtomb@plt+0xaa50>
  40d7d0:	ldrb	w0, [x20]
  40d7d4:	ldr	x0, [x1, x0, lsl #3]
  40d7d8:	cmp	x22, x0
  40d7dc:	b.ne	40d7f0 <wcrtomb@plt+0xaab0>  // b.any
  40d7e0:	ldrb	w0, [x20, #1]!
  40d7e4:	ldr	x0, [x1, x0, lsl #3]
  40d7e8:	cmp	x22, x0
  40d7ec:	b.eq	40d7e0 <wcrtomb@plt+0xaaa0>  // b.none
  40d7f0:	mov	x0, x20
  40d7f4:	ldrb	w2, [x0], #1
  40d7f8:	ldr	x21, [x1, x2, lsl #3]
  40d7fc:	ldr	x1, [x24, x21, lsl #3]
  40d800:	cbnz	x1, 40d5f4 <wcrtomb@plt+0xa8b4>
  40d804:	mov	x20, x0
  40d808:	b	40d620 <wcrtomb@plt+0xa8e0>
  40d80c:	stp	x29, x30, [sp, #-240]!
  40d810:	mov	x29, sp
  40d814:	stp	x19, x20, [sp, #16]
  40d818:	stp	x21, x22, [sp, #32]
  40d81c:	stp	x23, x24, [sp, #48]
  40d820:	stp	x25, x26, [sp, #64]
  40d824:	stp	x27, x28, [sp, #80]
  40d828:	mov	x19, x0
  40d82c:	and	w20, w1, #0xff
  40d830:	ldr	x0, [x0, #176]
  40d834:	cmp	xzr, x0, lsr #59
  40d838:	cset	x1, ne  // ne = any
  40d83c:	tst	x0, #0x400000000000000
  40d840:	csinc	w1, w1, wzr, eq  // eq = none
  40d844:	cbnz	w1, 40d8e0 <wcrtomb@plt+0xaba0>
  40d848:	lsl	x0, x0, #5
  40d84c:	bl	412c80 <wcrtomb@plt+0xff40>
  40d850:	str	x0, [sp, #144]
  40d854:	ldr	x24, [x19, #176]
  40d858:	add	x24, x0, x24, lsl #4
  40d85c:	ldr	x0, [x19, #168]
  40d860:	mov	x1, #0x18                  	// #24
  40d864:	mul	x2, x0, x1
  40d868:	umulh	x1, x0, x1
  40d86c:	cmp	x1, #0x0
  40d870:	cset	x1, ne  // ne = any
  40d874:	cmp	x2, #0x0
  40d878:	csinc	x1, x1, xzr, ge  // ge = tcont
  40d87c:	cbnz	w1, 40d8e4 <wcrtomb@plt+0xaba4>
  40d880:	add	x0, x0, x0, lsl #1
  40d884:	lsl	x0, x0, #3
  40d888:	bl	412c80 <wcrtomb@plt+0xff40>
  40d88c:	mov	x21, x0
  40d890:	str	x0, [sp, #152]
  40d894:	mov	x1, #0x105                 	// #261
  40d898:	mov	x0, x19
  40d89c:	bl	40bbec <wcrtomb@plt+0x8eac>
  40d8a0:	strb	w20, [x19, #328]
  40d8a4:	ldr	x1, [x19, #176]
  40d8a8:	add	x0, sp, #0xc0
  40d8ac:	bl	40bf54 <wcrtomb@plt+0x9214>
  40d8b0:	mov	x1, #0x18                  	// #24
  40d8b4:	ldr	x0, [x19, #152]
  40d8b8:	bl	412e48 <wcrtomb@plt+0x10108>
  40d8bc:	str	x0, [x19, #320]
  40d8c0:	ldr	x0, [x19, #152]
  40d8c4:	cmp	x0, #0x0
  40d8c8:	b.le	40db58 <wcrtomb@plt+0xae18>
  40d8cc:	mov	x20, x21
  40d8d0:	ldr	x26, [sp, #144]
  40d8d4:	mov	x22, #0x0                   	// #0
  40d8d8:	mov	w23, #0xffffffff            	// #-1
  40d8dc:	b	40d954 <wcrtomb@plt+0xac14>
  40d8e0:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40d8e4:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40d8e8:	cmp	x0, #0x105
  40d8ec:	b.eq	40da04 <wcrtomb@plt+0xacc4>  // b.none
  40d8f0:	cmp	x0, #0x106
  40d8f4:	b.ne	40db1c <wcrtomb@plt+0xaddc>  // b.any
  40d8f8:	ldur	x0, [x20, #-40]
  40d8fc:	ldur	x1, [x20, #-16]
  40d900:	add	x0, x0, x1
  40d904:	stur	x0, [x20, #-40]
  40d908:	ldur	x0, [x20, #-32]
  40d90c:	ldur	x1, [x20, #-8]
  40d910:	add	x0, x0, x1
  40d914:	stur	x0, [x20, #-32]
  40d918:	ldurb	w0, [x20, #-48]
  40d91c:	ldurb	w1, [x20, #-24]
  40d920:	orr	w0, w0, w1
  40d924:	sturb	w0, [x20, #-48]
  40d928:	sub	x20, x20, #0x18
  40d92c:	b	40d944 <wcrtomb@plt+0xac04>
  40d930:	mov	w0, #0x1                   	// #1
  40d934:	strb	w0, [x20]
  40d938:	str	xzr, [x20, #16]
  40d93c:	str	xzr, [x20, #8]
  40d940:	add	x20, x20, #0x18
  40d944:	add	x22, x22, #0x1
  40d948:	ldr	x0, [x19, #152]
  40d94c:	cmp	x0, x22
  40d950:	b.le	40db58 <wcrtomb@plt+0xae18>
  40d954:	lsl	x27, x22, #3
  40d958:	ldr	x0, [x19, #144]
  40d95c:	ldr	x0, [x0, x22, lsl #3]
  40d960:	cmp	x0, #0x103
  40d964:	b.gt	40d8e8 <wcrtomb@plt+0xaba8>
  40d968:	cmp	x0, #0x101
  40d96c:	b.gt	40d98c <wcrtomb@plt+0xac4c>
  40d970:	cmp	x0, #0x100
  40d974:	b.eq	40d930 <wcrtomb@plt+0xabf0>  // b.none
  40d978:	cmp	x0, #0x101
  40d97c:	b.ne	40db1c <wcrtomb@plt+0xaddc>  // b.any
  40d980:	mov	w0, #0x1                   	// #1
  40d984:	sturb	w0, [x20, #-24]
  40d988:	b	40d944 <wcrtomb@plt+0xac04>
  40d98c:	ldur	x0, [x20, #-16]
  40d990:	sub	x1, x26, x0, lsl #4
  40d994:	str	x1, [sp, #216]
  40d998:	str	x0, [sp, #224]
  40d99c:	ldur	x21, [x20, #-8]
  40d9a0:	cmp	x21, #0x0
  40d9a4:	b.le	40d9f0 <wcrtomb@plt+0xacb0>
  40d9a8:	sub	x21, x24, x21, lsl #4
  40d9ac:	mov	x25, x24
  40d9b0:	ldr	x1, [x21]
  40d9b4:	add	x1, x1, x1, lsl #1
  40d9b8:	ldr	x0, [x19, #320]
  40d9bc:	add	x3, sp, #0xc0
  40d9c0:	mov	w2, w23
  40d9c4:	add	x1, x0, x1, lsl #3
  40d9c8:	add	x0, sp, #0xd8
  40d9cc:	bl	40bcd8 <wcrtomb@plt+0x8f98>
  40d9d0:	ldr	x1, [x21], #16
  40d9d4:	add	x1, x1, x1, lsl #1
  40d9d8:	ldr	x0, [x19, #320]
  40d9dc:	add	x1, x0, x1, lsl #3
  40d9e0:	add	x0, sp, #0xc0
  40d9e4:	bl	40c010 <wcrtomb@plt+0x92d0>
  40d9e8:	cmp	x21, x25
  40d9ec:	b.ne	40d9b0 <wcrtomb@plt+0xac70>  // b.any
  40d9f0:	ldr	x0, [x19, #144]
  40d9f4:	ldr	x0, [x0, x27]
  40d9f8:	cmp	x0, #0x103
  40d9fc:	b.eq	40d944 <wcrtomb@plt+0xac04>  // b.none
  40da00:	b	40d980 <wcrtomb@plt+0xac40>
  40da04:	ldur	x0, [x20, #-16]
  40da08:	str	x0, [sp, #120]
  40da0c:	str	x0, [sp, #224]
  40da10:	sub	x0, x26, x0, lsl #4
  40da14:	str	x0, [sp, #104]
  40da18:	str	x0, [sp, #216]
  40da1c:	ldur	x0, [x20, #-8]
  40da20:	str	x0, [sp, #112]
  40da24:	lsl	x0, x0, #4
  40da28:	str	x0, [sp, #128]
  40da2c:	ldur	x28, [x20, #-32]
  40da30:	lsl	x27, x28, #4
  40da34:	add	x0, x0, x27
  40da38:	sub	x0, x24, x0
  40da3c:	str	x0, [sp, #136]
  40da40:	cmp	x28, #0x0
  40da44:	b.le	40da90 <wcrtomb@plt+0xad50>
  40da48:	mov	x21, x0
  40da4c:	add	x25, x27, x0
  40da50:	ldr	x1, [x21]
  40da54:	add	x1, x1, x1, lsl #1
  40da58:	ldr	x0, [x19, #320]
  40da5c:	add	x3, sp, #0xc0
  40da60:	mov	w2, w23
  40da64:	add	x1, x0, x1, lsl #3
  40da68:	add	x0, sp, #0xd8
  40da6c:	bl	40bcd8 <wcrtomb@plt+0x8f98>
  40da70:	ldr	x1, [x21], #16
  40da74:	add	x1, x1, x1, lsl #1
  40da78:	ldr	x0, [x19, #320]
  40da7c:	add	x1, x0, x1, lsl #3
  40da80:	add	x0, sp, #0xc0
  40da84:	bl	40c010 <wcrtomb@plt+0x92d0>
  40da88:	cmp	x25, x21
  40da8c:	b.ne	40da50 <wcrtomb@plt+0xad10>  // b.any
  40da90:	ldurb	w5, [x20, #-48]
  40da94:	cbz	w5, 40daac <wcrtomb@plt+0xad6c>
  40da98:	ldur	x0, [x20, #-40]
  40da9c:	ldr	x1, [sp, #120]
  40daa0:	add	x0, x0, x1
  40daa4:	stur	x0, [x20, #-40]
  40daa8:	str	x26, [sp, #104]
  40daac:	ldurb	w4, [x20, #-24]
  40dab0:	cbz	w4, 40dadc <wcrtomb@plt+0xad9c>
  40dab4:	ldr	x0, [sp, #112]
  40dab8:	add	x28, x0, x28
  40dabc:	stur	x28, [x20, #-32]
  40dac0:	cmp	w5, #0x0
  40dac4:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  40dac8:	cset	w0, ne  // ne = any
  40dacc:	sturb	w0, [x20, #-48]
  40dad0:	sub	x20, x20, #0x18
  40dad4:	ldr	x26, [sp, #104]
  40dad8:	b	40d944 <wcrtomb@plt+0xac04>
  40dadc:	ldr	x1, [sp, #136]
  40dae0:	mov	x0, x1
  40dae4:	ldr	x2, [sp, #128]
  40dae8:	add	x1, x1, x2
  40daec:	ldr	x2, [sp, #112]
  40daf0:	cmp	x2, #0x0
  40daf4:	b.le	40db0c <wcrtomb@plt+0xadcc>
  40daf8:	add	x2, x0, x27
  40dafc:	ldp	x2, x3, [x2]
  40db00:	stp	x2, x3, [x0], #16
  40db04:	cmp	x1, x0
  40db08:	b.ne	40daf8 <wcrtomb@plt+0xadb8>  // b.any
  40db0c:	sub	x24, x24, x27
  40db10:	ldr	x0, [sp, #112]
  40db14:	stur	x0, [x20, #-32]
  40db18:	b	40dac0 <wcrtomb@plt+0xad80>
  40db1c:	cmp	x0, #0x112
  40db20:	cset	w0, eq  // eq = none
  40db24:	strb	w0, [x20]
  40db28:	mov	x0, #0x1                   	// #1
  40db2c:	str	x0, [x20, #16]
  40db30:	str	x0, [x20, #8]
  40db34:	add	x20, x20, #0x18
  40db38:	str	x22, [x24]
  40db3c:	str	x22, [x26]
  40db40:	mov	w0, #0x1ff                 	// #511
  40db44:	str	w0, [x24, #8]
  40db48:	str	w0, [x26, #8]
  40db4c:	add	x26, x26, #0x10
  40db50:	add	x24, x24, #0x10
  40db54:	b	40d944 <wcrtomb@plt+0xac04>
  40db58:	ldr	x1, [x19, #176]
  40db5c:	add	x0, sp, #0xa8
  40db60:	bl	40bf54 <wcrtomb@plt+0x9214>
  40db64:	ldr	x0, [x19, #152]
  40db68:	cmp	x0, #0x0
  40db6c:	b.le	40dc98 <wcrtomb@plt+0xaf58>
  40db70:	mov	x21, #0x0                   	// #0
  40db74:	mov	x20, #0x0                   	// #0
  40db78:	mov	w25, #0x82                  	// #130
  40db7c:	mov	w26, #0x155                 	// #341
  40db80:	mov	w27, #0xaa                  	// #170
  40db84:	b	40dc1c <wcrtomb@plt+0xaedc>
  40db88:	cmp	x0, #0x110
  40db8c:	csel	w28, w26, w27, ne  // ne = any
  40db90:	b	40dc7c <wcrtomb@plt+0xaf3c>
  40db94:	mov	w28, w25
  40db98:	b	40dc7c <wcrtomb@plt+0xaf3c>
  40db9c:	add	x22, x22, #0x1
  40dba0:	ldr	x0, [x19, #152]
  40dba4:	cmp	x22, x0
  40dba8:	b.ge	40dc08 <wcrtomb@plt+0xaec8>  // b.tcont
  40dbac:	cmp	x20, x22
  40dbb0:	b.eq	40db9c <wcrtomb@plt+0xae5c>  // b.none
  40dbb4:	ldr	x24, [x19, #320]
  40dbb8:	add	x23, x22, x22, lsl #1
  40dbbc:	add	x23, x24, x23, lsl #3
  40dbc0:	ldr	x0, [x23, #8]
  40dbc4:	cmp	x0, #0x0
  40dbc8:	b.le	40db9c <wcrtomb@plt+0xae5c>
  40dbcc:	mov	x1, x23
  40dbd0:	mov	x0, x20
  40dbd4:	bl	40b1e8 <wcrtomb@plt+0x84a8>
  40dbd8:	ands	w0, w28, w0
  40dbdc:	str	w0, [sp, #104]
  40dbe0:	b.eq	40db9c <wcrtomb@plt+0xae5c>  // b.none
  40dbe4:	add	x1, sp, #0xa8
  40dbe8:	mov	x0, x23
  40dbec:	bl	40c010 <wcrtomb@plt+0x92d0>
  40dbf0:	mov	x3, x23
  40dbf4:	ldr	w2, [sp, #104]
  40dbf8:	add	x1, x24, x21
  40dbfc:	add	x0, sp, #0xa8
  40dc00:	bl	40bcd8 <wcrtomb@plt+0x8f98>
  40dc04:	b	40db9c <wcrtomb@plt+0xae5c>
  40dc08:	add	x20, x20, #0x1
  40dc0c:	add	x21, x21, #0x18
  40dc10:	ldr	x0, [x19, #152]
  40dc14:	cmp	x20, x0
  40dc18:	b.ge	40dc98 <wcrtomb@plt+0xaf58>  // b.tcont
  40dc1c:	ldr	x1, [x19, #320]
  40dc20:	add	x1, x1, x21
  40dc24:	ldr	x0, [x1, #8]
  40dc28:	cmp	x0, #0x0
  40dc2c:	b.le	40dc08 <wcrtomb@plt+0xaec8>
  40dc30:	ldr	x0, [x19, #144]
  40dc34:	ldr	x0, [x0, x20, lsl #3]
  40dc38:	sub	x2, x0, #0x100
  40dc3c:	cmp	x0, #0x10a
  40dc40:	ccmp	x2, #0x11, #0x2, ne  // ne = any
  40dc44:	b.hi	40dc08 <wcrtomb@plt+0xaec8>  // b.pmore
  40dc48:	cmp	x0, #0x10f
  40dc4c:	b.eq	40db94 <wcrtomb@plt+0xae54>  // b.none
  40dc50:	b.gt	40db88 <wcrtomb@plt+0xae48>
  40dc54:	mov	w28, #0x1c0                 	// #448
  40dc58:	cmp	x0, #0x10d
  40dc5c:	b.eq	40dc7c <wcrtomb@plt+0xaf3c>  // b.none
  40dc60:	mov	w28, #0x28                  	// #40
  40dc64:	cmp	x0, #0x10e
  40dc68:	b.eq	40dc7c <wcrtomb@plt+0xaf3c>  // b.none
  40dc6c:	cmp	x0, #0x10c
  40dc70:	mov	w0, #0x1ff                 	// #511
  40dc74:	mov	w28, #0x124                 	// #292
  40dc78:	csel	w28, w0, w28, ne  // ne = any
  40dc7c:	mov	x0, x20
  40dc80:	bl	40b1e8 <wcrtomb@plt+0x84a8>
  40dc84:	ldr	x0, [x19, #152]
  40dc88:	cmp	x0, #0x0
  40dc8c:	b.le	40dc08 <wcrtomb@plt+0xaec8>
  40dc90:	mov	x22, #0x0                   	// #0
  40dc94:	b	40dbac <wcrtomb@plt+0xae6c>
  40dc98:	ldr	x0, [sp, #168]
  40dc9c:	bl	402ae0 <free@plt>
  40dca0:	ldr	x0, [x19, #152]
  40dca4:	bl	412e80 <wcrtomb@plt+0x10140>
  40dca8:	mov	x20, x0
  40dcac:	ldr	x8, [x19, #152]
  40dcb0:	cmp	x8, #0x0
  40dcb4:	b.le	40dd40 <wcrtomb@plt+0xb000>
  40dcb8:	ldr	x6, [x19, #320]
  40dcbc:	mov	x2, #0x0                   	// #0
  40dcc0:	mov	w7, #0x8                   	// #8
  40dcc4:	b	40dd28 <wcrtomb@plt+0xafe8>
  40dcc8:	ldrb	w1, [x20, x2]
  40dccc:	orr	w1, w1, #0x1
  40dcd0:	strb	w1, [x20, x2]
  40dcd4:	add	x0, x0, #0x10
  40dcd8:	cmp	x4, x0
  40dcdc:	b.eq	40dd18 <wcrtomb@plt+0xafd8>  // b.none
  40dce0:	ldr	x1, [x0]
  40dce4:	cmp	x1, x2
  40dce8:	b.eq	40dcc8 <wcrtomb@plt+0xaf88>  // b.none
  40dcec:	b.ge	40dd00 <wcrtomb@plt+0xafc0>  // b.tcont
  40dcf0:	ldrb	w3, [x20, x1]
  40dcf4:	orr	w3, w3, #0x2
  40dcf8:	strb	w3, [x20, x1]
  40dcfc:	b	40dcd4 <wcrtomb@plt+0xaf94>
  40dd00:	ldrb	w3, [x20, x1]
  40dd04:	ands	w3, w3, #0x8
  40dd08:	orr	w5, w3, #0x4
  40dd0c:	csel	w3, w7, w5, eq  // eq = none
  40dd10:	strb	w3, [x20, x1]
  40dd14:	b	40dcd4 <wcrtomb@plt+0xaf94>
  40dd18:	add	x2, x2, #0x1
  40dd1c:	add	x6, x6, #0x18
  40dd20:	cmp	x2, x8
  40dd24:	b.eq	40dd40 <wcrtomb@plt+0xb000>  // b.none
  40dd28:	ldr	x4, [x6, #8]
  40dd2c:	cmp	x4, #0x0
  40dd30:	b.le	40dd18 <wcrtomb@plt+0xafd8>
  40dd34:	ldr	x0, [x6]
  40dd38:	add	x4, x0, x4, lsl #4
  40dd3c:	b	40dce0 <wcrtomb@plt+0xafa0>
  40dd40:	ldrb	w0, [x20]
  40dd44:	orr	w0, w0, #0x10
  40dd48:	strb	w0, [x20]
  40dd4c:	ldr	x1, [x19, #176]
  40dd50:	add	x0, sp, #0xa8
  40dd54:	bl	40bf54 <wcrtomb@plt+0x9214>
  40dd58:	ldr	x0, [x19, #152]
  40dd5c:	cmp	xzr, x0, lsr #62
  40dd60:	cset	x1, ne  // ne = any
  40dd64:	tst	x0, #0x2000000000000000
  40dd68:	csinc	w1, w1, wzr, eq  // eq = none
  40dd6c:	cbnz	w1, 40dd90 <wcrtomb@plt+0xb050>
  40dd70:	lsl	x0, x0, #2
  40dd74:	bl	412c80 <wcrtomb@plt+0xff40>
  40dd78:	str	x0, [x19, #336]
  40dd7c:	ldr	x1, [x19, #152]
  40dd80:	cmp	x1, #0x0
  40dd84:	b.le	40df6c <wcrtomb@plt+0xb22c>
  40dd88:	mov	x27, #0x0                   	// #0
  40dd8c:	b	40df2c <wcrtomb@plt+0xb1ec>
  40dd90:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40dd94:	ldr	x2, [x19, #336]
  40dd98:	ldr	x3, [sp, #128]
  40dd9c:	ldr	w0, [x2, x3]
  40dda0:	orr	w1, w0, w1
  40dda4:	str	w1, [x2, x3]
  40dda8:	b	40dec0 <wcrtomb@plt+0xb180>
  40ddac:	add	x1, x24, x24, lsl #1
  40ddb0:	ldr	x0, [sp, #136]
  40ddb4:	add	x1, x0, x1, lsl #3
  40ddb8:	mov	x0, x24
  40ddbc:	bl	40b1e8 <wcrtomb@plt+0x84a8>
  40ddc0:	b	40de30 <wcrtomb@plt+0xb0f0>
  40ddc4:	add	x3, sp, #0xa8
  40ddc8:	mov	w2, #0xffffffff            	// #-1
  40ddcc:	ldr	x1, [sp, #120]
  40ddd0:	mov	x0, x28
  40ddd4:	bl	40bcd8 <wcrtomb@plt+0x8f98>
  40ddd8:	ldr	x1, [sp, #120]
  40dddc:	add	x0, sp, #0xa8
  40dde0:	bl	40c010 <wcrtomb@plt+0x92d0>
  40dde4:	b	40de94 <wcrtomb@plt+0xb154>
  40dde8:	add	x26, x26, #0x1
  40ddec:	add	x0, x0, #0x10
  40ddf0:	cmp	x26, x25
  40ddf4:	b.eq	40de9c <wcrtomb@plt+0xb15c>  // b.none
  40ddf8:	ldr	w4, [x0, #8]
  40ddfc:	cmp	w1, w4
  40de00:	b.ne	40dde8 <wcrtomb@plt+0xb0a8>  // b.any
  40de04:	ldr	x28, [x0]
  40de08:	ldrb	w4, [x20, x28]
  40de0c:	tst	w4, #0x6
  40de10:	b.ne	40dde8 <wcrtomb@plt+0xb0a8>  // b.any
  40de14:	ldr	x5, [x2, x28, lsl #3]
  40de18:	cmp	x3, x5
  40de1c:	b.ne	40dde8 <wcrtomb@plt+0xb0a8>  // b.any
  40de20:	ldr	w5, [sp, #112]
  40de24:	eor	w4, w5, w4
  40de28:	tbnz	w4, #0, 40dde8 <wcrtomb@plt+0xb0a8>
  40de2c:	tbnz	w5, #0, 40ddac <wcrtomb@plt+0xb06c>
  40de30:	add	x28, x28, x28, lsl #1
  40de34:	ldr	x0, [sp, #136]
  40de38:	add	x1, x0, x28, lsl #3
  40de3c:	str	x1, [sp, #120]
  40de40:	add	x28, x24, x24, lsl #1
  40de44:	add	x28, x0, x28, lsl #3
  40de48:	ldr	x0, [x28, #8]
  40de4c:	cmp	x0, #0x3
  40de50:	b.gt	40ddc4 <wcrtomb@plt+0xb084>
  40de54:	cmp	x0, #0x0
  40de58:	b.le	40de94 <wcrtomb@plt+0xb154>
  40de5c:	str	xzr, [sp, #104]
  40de60:	ldr	x0, [x28]
  40de64:	ldr	x1, [sp, #104]
  40de68:	add	x0, x0, x1, lsl #4
  40de6c:	ldr	x2, [sp, #120]
  40de70:	ldp	x0, x1, [x0]
  40de74:	bl	40b5c8 <wcrtomb@plt+0x8888>
  40de78:	ldr	x1, [sp, #104]
  40de7c:	add	x0, x1, #0x1
  40de80:	mov	x1, x0
  40de84:	str	x0, [sp, #104]
  40de88:	ldr	x0, [x28, #8]
  40de8c:	cmp	x1, x0
  40de90:	b.lt	40de60 <wcrtomb@plt+0xb120>  // b.tstop
  40de94:	cmp	x26, x25
  40de98:	b.lt	40dec0 <wcrtomb@plt+0xb180>  // b.tstop
  40de9c:	ldr	x0, [x23]
  40dea0:	add	x1, x0, x25, lsl #4
  40dea4:	add	x22, x0, x22
  40dea8:	ldp	x2, x3, [x22]
  40deac:	stp	x2, x3, [x1]
  40deb0:	ldr	w0, [sp, #112]
  40deb4:	orr	w0, w0, #0x10
  40deb8:	strb	w0, [x20, x24]
  40debc:	add	x25, x25, #0x1
  40dec0:	add	x21, x21, #0x1
  40dec4:	ldr	x0, [x23, #8]
  40dec8:	cmp	x21, x0
  40decc:	b.ge	40df18 <wcrtomb@plt+0xb1d8>  // b.tcont
  40ded0:	ldr	x0, [x23]
  40ded4:	lsl	x22, x21, #4
  40ded8:	add	x1, x0, x22
  40dedc:	ldr	w1, [x1, #8]
  40dee0:	cbz	w1, 40dec0 <wcrtomb@plt+0xb180>
  40dee4:	ldr	x24, [x0, x22]
  40dee8:	ldr	x2, [x19, #144]
  40deec:	ldr	x3, [x2, x24, lsl #3]
  40def0:	tbnz	x3, #63, 40dd94 <wcrtomb@plt+0xb054>
  40def4:	ldrb	w4, [x20, x24]
  40def8:	str	w4, [sp, #112]
  40defc:	tst	w4, #0x6
  40df00:	b.ne	40de9c <wcrtomb@plt+0xb15c>  // b.any
  40df04:	cmp	x25, #0x0
  40df08:	b.le	40de9c <wcrtomb@plt+0xb15c>
  40df0c:	mov	x26, #0x0                   	// #0
  40df10:	b	40ddf8 <wcrtomb@plt+0xb0b8>
  40df14:	mov	x25, #0x0                   	// #0
  40df18:	str	x25, [x23, #8]
  40df1c:	add	x27, x27, #0x1
  40df20:	ldr	x1, [x19, #152]
  40df24:	cmp	x27, x1
  40df28:	b.ge	40df6c <wcrtomb@plt+0xb22c>  // b.tcont
  40df2c:	ldrb	w0, [x20, x27]
  40df30:	tbz	w0, #4, 40df1c <wcrtomb@plt+0xb1dc>
  40df34:	ldr	x1, [x19, #320]
  40df38:	str	x1, [sp, #136]
  40df3c:	lsl	x0, x27, #2
  40df40:	str	x0, [sp, #128]
  40df44:	ldr	x0, [x19, #336]
  40df48:	str	wzr, [x0, x27, lsl #2]
  40df4c:	add	x23, x27, x27, lsl #1
  40df50:	add	x23, x1, x23, lsl #3
  40df54:	ldr	x0, [x23, #8]
  40df58:	cmp	x0, #0x0
  40df5c:	b.le	40df14 <wcrtomb@plt+0xb1d4>
  40df60:	mov	x25, #0x0                   	// #0
  40df64:	mov	x21, #0x0                   	// #0
  40df68:	b	40ded0 <wcrtomb@plt+0xb190>
  40df6c:	mov	x0, x1
  40df70:	cmp	xzr, x1, lsr #61
  40df74:	cset	x2, ne  // ne = any
  40df78:	tst	x1, #0x1000000000000000
  40df7c:	csinc	w1, w2, wzr, eq  // eq = none
  40df80:	cbnz	w1, 40e050 <wcrtomb@plt+0xb310>
  40df84:	lsl	x0, x0, #3
  40df88:	bl	412c80 <wcrtomb@plt+0xff40>
  40df8c:	mov	x21, x0
  40df90:	str	xzr, [x0]
  40df94:	ldr	x1, [x19, #152]
  40df98:	cmp	x1, #0x1
  40df9c:	b.le	40dfb8 <wcrtomb@plt+0xb278>
  40dfa0:	add	x0, x0, #0x8
  40dfa4:	add	x1, x21, x1, lsl #3
  40dfa8:	mov	x2, #0xffffffffffffffff    	// #-1
  40dfac:	str	x2, [x0], #8
  40dfb0:	cmp	x1, x0
  40dfb4:	b.ne	40dfac <wcrtomb@plt+0xb26c>  // b.any
  40dfb8:	ldr	x0, [x19, #176]
  40dfbc:	cmp	xzr, x0, lsr #61
  40dfc0:	cset	x1, ne  // ne = any
  40dfc4:	tst	x0, #0x1000000000000000
  40dfc8:	csinc	w1, w1, wzr, eq  // eq = none
  40dfcc:	cbnz	w1, 40e054 <wcrtomb@plt+0xb314>
  40dfd0:	lsl	x0, x0, #3
  40dfd4:	bl	412c80 <wcrtomb@plt+0xff40>
  40dfd8:	mov	x28, x0
  40dfdc:	ldr	x0, [x19, #176]
  40dfe0:	mov	x1, #0x18                  	// #24
  40dfe4:	mul	x2, x0, x1
  40dfe8:	umulh	x1, x0, x1
  40dfec:	cmp	x1, #0x0
  40dff0:	cset	x1, ne  // ne = any
  40dff4:	cmp	x2, #0x0
  40dff8:	csinc	x1, x1, xzr, ge  // ge = tcont
  40dffc:	cbnz	w1, 40e058 <wcrtomb@plt+0xb318>
  40e000:	add	x0, x0, x0, lsl #1
  40e004:	lsl	x0, x0, #3
  40e008:	bl	412c80 <wcrtomb@plt+0xff40>
  40e00c:	mov	x27, x0
  40e010:	ldr	x0, [x19, #176]
  40e014:	cmp	xzr, x0, lsr #62
  40e018:	cset	x1, ne  // ne = any
  40e01c:	tst	x0, #0x2000000000000000
  40e020:	csinc	w1, w1, wzr, eq  // eq = none
  40e024:	cbnz	w1, 40e05c <wcrtomb@plt+0xb31c>
  40e028:	lsl	x0, x0, #2
  40e02c:	bl	412c80 <wcrtomb@plt+0xff40>
  40e030:	mov	x26, x0
  40e034:	ldrb	w0, [x19, #1048]
  40e038:	cbz	w0, 40e064 <wcrtomb@plt+0xb324>
  40e03c:	ldr	x0, [x19, #176]
  40e040:	tbnz	x0, #63, 40e060 <wcrtomb@plt+0xb320>
  40e044:	bl	412c80 <wcrtomb@plt+0xff40>
  40e048:	mov	x25, x0
  40e04c:	b	40e068 <wcrtomb@plt+0xb328>
  40e050:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40e054:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40e058:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40e05c:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40e060:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40e064:	mov	x25, #0x0                   	// #0
  40e068:	ldr	x0, [x19, #152]
  40e06c:	cmp	x0, #0x0
  40e070:	b.le	40e198 <wcrtomb@plt+0xb458>
  40e074:	mov	x22, #0x0                   	// #0
  40e078:	mov	x23, #0x1                   	// #1
  40e07c:	mov	x24, #0x0                   	// #0
  40e080:	adrp	x0, 40b000 <wcrtomb@plt+0x82c0>
  40e084:	add	x0, x0, #0x2c8
  40e088:	str	x0, [sp, #104]
  40e08c:	b	40e11c <wcrtomb@plt+0xb3dc>
  40e090:	ldr	x0, [x19, #320]
  40e094:	ldr	x0, [x0, x22]
  40e098:	bl	402ae0 <free@plt>
  40e09c:	ldr	x0, [x19, #320]
  40e0a0:	str	xzr, [x0, x22]
  40e0a4:	ldr	x0, [x19, #320]
  40e0a8:	add	x0, x0, x22
  40e0ac:	str	xzr, [x0, #8]
  40e0b0:	b	40e108 <wcrtomb@plt+0xb3c8>
  40e0b4:	ldr	x0, [x21, x0, lsl #3]
  40e0b8:	str	x0, [x3, x1]
  40e0bc:	add	x2, x2, #0x1
  40e0c0:	ldr	x0, [x19, #320]
  40e0c4:	add	x0, x0, x22
  40e0c8:	ldr	x1, [x0, #8]
  40e0cc:	cmp	x2, x1
  40e0d0:	b.ge	40e0f8 <wcrtomb@plt+0xb3b8>  // b.tcont
  40e0d4:	lsl	x1, x2, #4
  40e0d8:	ldr	x3, [x0]
  40e0dc:	ldr	x0, [x3, x1]
  40e0e0:	ldr	x4, [x21, x0, lsl #3]
  40e0e4:	cmn	x4, #0x1
  40e0e8:	b.ne	40e0b4 <wcrtomb@plt+0xb374>  // b.any
  40e0ec:	str	x23, [x21, x0, lsl #3]
  40e0f0:	add	x23, x23, #0x1
  40e0f4:	b	40e0b4 <wcrtomb@plt+0xb374>
  40e0f8:	ldr	x3, [sp, #104]
  40e0fc:	mov	x2, #0x10                  	// #16
  40e100:	ldr	x0, [x0]
  40e104:	bl	402730 <qsort@plt>
  40e108:	add	x24, x24, #0x1
  40e10c:	add	x22, x22, #0x18
  40e110:	ldr	x0, [x19, #152]
  40e114:	cmp	x24, x0
  40e118:	b.ge	40e184 <wcrtomb@plt+0xb444>  // b.tcont
  40e11c:	ldr	x1, [x21, x24, lsl #3]
  40e120:	cmn	x1, #0x1
  40e124:	b.eq	40e090 <wcrtomb@plt+0xb350>  // b.none
  40e128:	ldr	x0, [x19, #144]
  40e12c:	ldr	x0, [x0, x24, lsl #3]
  40e130:	str	x0, [x28, x1, lsl #3]
  40e134:	ldr	x0, [x19, #320]
  40e138:	add	x0, x0, x22
  40e13c:	add	x2, x1, x1, lsl #1
  40e140:	add	x2, x27, x2, lsl #3
  40e144:	ldp	x4, x5, [x0]
  40e148:	stp	x4, x5, [x2]
  40e14c:	ldr	x4, [x0, #16]
  40e150:	str	x4, [x2, #16]
  40e154:	ldr	x2, [x19, #336]
  40e158:	ldr	w2, [x2, x24, lsl #2]
  40e15c:	str	w2, [x26, x1, lsl #2]
  40e160:	cbz	x25, 40e170 <wcrtomb@plt+0xb430>
  40e164:	ldr	x2, [x19, #280]
  40e168:	ldrb	w2, [x2, x24]
  40e16c:	strb	w2, [x25, x1]
  40e170:	ldr	x1, [x0, #8]
  40e174:	cmp	x1, #0x0
  40e178:	b.le	40e0f8 <wcrtomb@plt+0xb3b8>
  40e17c:	mov	x2, #0x0                   	// #0
  40e180:	b	40e0d4 <wcrtomb@plt+0xb394>
  40e184:	cmp	x23, #0x0
  40e188:	b.le	40e1f8 <wcrtomb@plt+0xb4b8>
  40e18c:	mov	x2, #0x0                   	// #0
  40e190:	mov	x0, #0x0                   	// #0
  40e194:	b	40e1b0 <wcrtomb@plt+0xb470>
  40e198:	mov	x23, #0x1                   	// #1
  40e19c:	b	40e18c <wcrtomb@plt+0xb44c>
  40e1a0:	add	x0, x0, #0x1
  40e1a4:	add	x2, x2, #0x18
  40e1a8:	cmp	x23, x0
  40e1ac:	b.le	40e1f8 <wcrtomb@plt+0xb4b8>
  40e1b0:	ldr	x1, [x19, #144]
  40e1b4:	ldr	x3, [x28, x0, lsl #3]
  40e1b8:	str	x3, [x1, x0, lsl #3]
  40e1bc:	ldr	x1, [x19, #320]
  40e1c0:	add	x1, x1, x2
  40e1c4:	add	x3, x27, x2
  40e1c8:	ldp	x4, x5, [x3]
  40e1cc:	stp	x4, x5, [x1]
  40e1d0:	ldr	x3, [x3, #16]
  40e1d4:	str	x3, [x1, #16]
  40e1d8:	ldr	x1, [x19, #336]
  40e1dc:	ldr	w3, [x26, x0, lsl #2]
  40e1e0:	str	w3, [x1, x0, lsl #2]
  40e1e4:	cbz	x25, 40e1a0 <wcrtomb@plt+0xb460>
  40e1e8:	ldr	x1, [x19, #280]
  40e1ec:	ldrb	w3, [x25, x0]
  40e1f0:	strb	w3, [x1, x0]
  40e1f4:	b	40e1a0 <wcrtomb@plt+0xb460>
  40e1f8:	str	x23, [x19, #176]
  40e1fc:	str	x23, [x19, #152]
  40e200:	mov	x0, x28
  40e204:	bl	402ae0 <free@plt>
  40e208:	mov	x0, x27
  40e20c:	bl	402ae0 <free@plt>
  40e210:	mov	x0, x26
  40e214:	bl	402ae0 <free@plt>
  40e218:	mov	x0, x25
  40e21c:	bl	402ae0 <free@plt>
  40e220:	mov	x0, x21
  40e224:	bl	402ae0 <free@plt>
  40e228:	ldr	x0, [sp, #168]
  40e22c:	bl	402ae0 <free@plt>
  40e230:	mov	x0, x20
  40e234:	bl	402ae0 <free@plt>
  40e238:	mov	x20, #0x0                   	// #0
  40e23c:	mov	x0, #0x1ff                 	// #511
  40e240:	bfxil	x20, x0, #0, #32
  40e244:	mov	x1, #0x1                   	// #1
  40e248:	add	x0, sp, #0xd8
  40e24c:	bl	40bf54 <wcrtomb@plt+0x9214>
  40e250:	add	x2, sp, #0xd8
  40e254:	mov	x0, #0x0                   	// #0
  40e258:	mov	x1, x20
  40e25c:	bl	40b6ec <wcrtomb@plt+0x89ac>
  40e260:	ldr	x0, [x19, #152]
  40e264:	cmp	xzr, x0, lsr #62
  40e268:	cset	x1, ne  // ne = any
  40e26c:	tst	x0, #0x2000000000000000
  40e270:	csinc	w1, w1, wzr, eq  // eq = none
  40e274:	cbnz	w1, 40e2a0 <wcrtomb@plt+0xb560>
  40e278:	lsl	x0, x0, #2
  40e27c:	bl	412c80 <wcrtomb@plt+0xff40>
  40e280:	str	x0, [x19, #344]
  40e284:	ldr	x0, [x19, #152]
  40e288:	cmp	x0, #0x0
  40e28c:	b.le	40e39c <wcrtomb@plt+0xb65c>
  40e290:	mov	x4, #0x0                   	// #0
  40e294:	mov	x7, #0x0                   	// #0
  40e298:	mov	w6, #0x49                  	// #73
  40e29c:	b	40e32c <wcrtomb@plt+0xb5ec>
  40e2a0:	bl	412ef8 <wcrtomb@plt+0x101b8>
  40e2a4:	add	x1, x1, #0x1
  40e2a8:	ldr	x0, [x19, #320]
  40e2ac:	add	x0, x0, x4
  40e2b0:	ldr	x2, [x0, #8]
  40e2b4:	cmp	x2, x1
  40e2b8:	b.le	40e318 <wcrtomb@plt+0xb5d8>
  40e2bc:	lsl	x3, x1, #4
  40e2c0:	ldr	x2, [x0]
  40e2c4:	add	x2, x2, x3
  40e2c8:	ldr	w0, [x2, #8]
  40e2cc:	eor	w0, w0, w0, asr #2
  40e2d0:	tst	w0, w6
  40e2d4:	b.eq	40e2e8 <wcrtomb@plt+0xb5a8>  // b.none
  40e2d8:	ldr	x2, [x19, #344]
  40e2dc:	ldr	w0, [x2, x5]
  40e2e0:	orr	w0, w0, #0x4
  40e2e4:	str	w0, [x2, x5]
  40e2e8:	ldr	x0, [x19, #320]
  40e2ec:	ldr	x0, [x0, x4]
  40e2f0:	add	x0, x0, x3
  40e2f4:	ldr	w0, [x0, #8]
  40e2f8:	eor	w0, w0, w0, asr #1
  40e2fc:	tst	w0, w6
  40e300:	b.eq	40e2a4 <wcrtomb@plt+0xb564>  // b.none
  40e304:	ldr	x2, [x19, #344]
  40e308:	ldr	w0, [x2, x5]
  40e30c:	orr	w0, w0, #0x2
  40e310:	str	w0, [x2, x5]
  40e314:	b	40e2a4 <wcrtomb@plt+0xb564>
  40e318:	add	x7, x7, #0x1
  40e31c:	add	x4, x4, #0x18
  40e320:	ldr	x0, [x19, #152]
  40e324:	cmp	x0, x7
  40e328:	b.le	40e39c <wcrtomb@plt+0xb65c>
  40e32c:	lsl	x5, x7, #2
  40e330:	ldr	x0, [x19, #344]
  40e334:	str	wzr, [x0, x7, lsl #2]
  40e338:	ldr	x0, [x19, #336]
  40e33c:	ldr	w0, [x0, x7, lsl #2]
  40e340:	eor	w0, w0, w0, asr #2
  40e344:	tst	w0, w6
  40e348:	b.eq	40e35c <wcrtomb@plt+0xb61c>  // b.none
  40e34c:	ldr	x1, [x19, #344]
  40e350:	ldr	w0, [x1, x7, lsl #2]
  40e354:	orr	w0, w0, #0x4
  40e358:	str	w0, [x1, x7, lsl #2]
  40e35c:	ldr	x0, [x19, #336]
  40e360:	ldr	w0, [x0, x5]
  40e364:	eor	w0, w0, w0, asr #1
  40e368:	tst	w0, w6
  40e36c:	b.eq	40e380 <wcrtomb@plt+0xb640>  // b.none
  40e370:	ldr	x1, [x19, #344]
  40e374:	ldr	w0, [x1, x5]
  40e378:	orr	w0, w0, #0x2
  40e37c:	str	w0, [x1, x5]
  40e380:	ldr	x0, [x19, #320]
  40e384:	add	x0, x0, x4
  40e388:	ldr	x1, [x0, #8]
  40e38c:	cmp	x1, #0x0
  40e390:	b.le	40e318 <wcrtomb@plt+0xb5d8>
  40e394:	mov	x1, #0x0                   	// #0
  40e398:	b	40e2bc <wcrtomb@plt+0xb57c>
  40e39c:	add	x1, sp, #0xd8
  40e3a0:	mov	x0, x19
  40e3a4:	bl	40b28c <wcrtomb@plt+0x854c>
  40e3a8:	mov	w20, w0
  40e3ac:	tbnz	w20, #2, 40e41c <wcrtomb@plt+0xb6dc>
  40e3b0:	eor	w2, w20, #0x7
  40e3b4:	add	x1, sp, #0xd8
  40e3b8:	mov	x0, x19
  40e3bc:	bl	40c090 <wcrtomb@plt+0x9350>
  40e3c0:	str	w0, [x19, #364]
  40e3c4:	sxtw	x1, w0
  40e3c8:	str	x1, [x19, #400]
  40e3cc:	tbnz	w20, #1, 40e430 <wcrtomb@plt+0xb6f0>
  40e3d0:	ldr	w0, [x19, #364]
  40e3d4:	add	w0, w0, #0x1
  40e3d8:	str	w0, [x19, #364]
  40e3dc:	str	wzr, [x19, #360]
  40e3e0:	ldr	x0, [sp, #144]
  40e3e4:	bl	402ae0 <free@plt>
  40e3e8:	ldr	x0, [sp, #152]
  40e3ec:	bl	402ae0 <free@plt>
  40e3f0:	ldr	x0, [sp, #192]
  40e3f4:	bl	402ae0 <free@plt>
  40e3f8:	ldr	x0, [sp, #216]
  40e3fc:	bl	402ae0 <free@plt>
  40e400:	ldp	x19, x20, [sp, #16]
  40e404:	ldp	x21, x22, [sp, #32]
  40e408:	ldp	x23, x24, [sp, #48]
  40e40c:	ldp	x25, x26, [sp, #64]
  40e410:	ldp	x27, x28, [sp, #80]
  40e414:	ldp	x29, x30, [sp], #240
  40e418:	ret
  40e41c:	mov	w2, #0x4                   	// #4
  40e420:	add	x1, sp, #0xd8
  40e424:	mov	x0, x19
  40e428:	bl	40c090 <wcrtomb@plt+0x9350>
  40e42c:	b	40e3b0 <wcrtomb@plt+0xb670>
  40e430:	mov	w2, #0x2                   	// #2
  40e434:	add	x1, sp, #0xd8
  40e438:	mov	x0, x19
  40e43c:	bl	40c090 <wcrtomb@plt+0x9350>
  40e440:	str	w0, [x19, #364]
  40e444:	b	40e3d0 <wcrtomb@plt+0xb690>
  40e448:	stp	x29, x30, [sp, #-288]!
  40e44c:	mov	x29, sp
  40e450:	stp	x19, x20, [sp, #16]
  40e454:	stp	x21, x22, [sp, #32]
  40e458:	stp	x23, x24, [sp, #48]
  40e45c:	stp	x25, x26, [sp, #64]
  40e460:	stp	x27, x28, [sp, #80]
  40e464:	mov	x19, x0
  40e468:	str	xzr, [x0, #104]
  40e46c:	add	x0, sp, #0x100
  40e470:	bl	40b2fc <wcrtomb@plt+0x85bc>
  40e474:	mov	x0, x19
  40e478:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e47c:	str	w0, [sp, #108]
  40e480:	mov	w20, w0
  40e484:	mov	w1, #0x1                   	// #1
  40e488:	str	w1, [sp, #104]
  40e48c:	cmp	w0, #0x5e
  40e490:	b.eq	40e4b4 <wcrtomb@plt+0xb774>  // b.none
  40e494:	ldr	w21, [x19, #72]
  40e498:	cmp	w20, #0x3a
  40e49c:	cset	w23, eq  // eq = none
  40e4a0:	mov	w27, #0x2                   	// #2
  40e4a4:	add	x26, sp, #0x78
  40e4a8:	add	x0, x26, #0x4
  40e4ac:	str	x0, [sp, #96]
  40e4b0:	b	40e538 <wcrtomb@plt+0xb7f8>
  40e4b4:	mov	x0, x19
  40e4b8:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e4bc:	mov	w20, w0
  40e4c0:	ldrb	w0, [x19, #1049]
  40e4c4:	str	w0, [sp, #104]
  40e4c8:	b	40e494 <wcrtomb@plt+0xb754>
  40e4cc:	mov	x0, x19
  40e4d0:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e4d4:	mov	w22, w0
  40e4d8:	ldr	w25, [x19, #72]
  40e4dc:	cmp	w0, #0x3a
  40e4e0:	b.eq	40e568 <wcrtomb@plt+0xb828>  // b.none
  40e4e4:	cmp	w0, #0x2e
  40e4e8:	mov	w0, #0x3d                  	// #61
  40e4ec:	ccmp	w22, w0, #0x4, ne  // ne = any
  40e4f0:	b.eq	40e578 <wcrtomb@plt+0xb838>  // b.none
  40e4f4:	cmp	w22, #0x100
  40e4f8:	b.eq	40e554 <wcrtomb@plt+0xb814>  // b.none
  40e4fc:	cmp	w22, #0x2d
  40e500:	b.eq	40e6fc <wcrtomb@plt+0xb9bc>  // b.none
  40e504:	cmp	w20, #0x3a
  40e508:	mov	w0, #0x4                   	// #4
  40e50c:	csel	w0, w27, w0, eq  // eq = none
  40e510:	orr	w23, w23, w0
  40e514:	ldrb	w0, [x19, #1048]
  40e518:	cbz	w0, 40e834 <wcrtomb@plt+0xbaf4>
  40e51c:	cmn	w21, #0x1
  40e520:	b.ne	40e87c <wcrtomb@plt+0xbb3c>  // b.any
  40e524:	mov	w21, w25
  40e528:	mov	w20, w22
  40e52c:	str	wzr, [sp, #104]
  40e530:	cmp	w20, #0x5d
  40e534:	b.eq	40e928 <wcrtomb@plt+0xbbe8>  // b.none
  40e538:	and	w23, w23, #0xfffffffd
  40e53c:	cmp	w20, #0x5b
  40e540:	b.eq	40e4cc <wcrtomb@plt+0xb78c>  // b.none
  40e544:	cmp	w20, #0x5c
  40e548:	b.ne	40e554 <wcrtomb@plt+0xb814>  // b.any
  40e54c:	ldr	x0, [x19, #448]
  40e550:	tbnz	w0, #0, 40e6e8 <wcrtomb@plt+0xb9a8>
  40e554:	mov	x0, x19
  40e558:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e55c:	mov	w22, w0
  40e560:	ldr	w25, [x19, #72]
  40e564:	b	40e4fc <wcrtomb@plt+0xb7bc>
  40e568:	ldr	x0, [x19, #448]
  40e56c:	tbz	w0, #2, 40e4fc <wcrtomb@plt+0xb7bc>
  40e570:	mov	w20, #0x0                   	// #0
  40e574:	b	40e628 <wcrtomb@plt+0xb8e8>
  40e578:	mov	w20, #0x0                   	// #0
  40e57c:	b	40e628 <wcrtomb@plt+0xb8e8>
  40e580:	ldr	x1, [x19, #32]
  40e584:	ldrb	w1, [x1]
  40e588:	cmp	w1, #0x5d
  40e58c:	b.ne	40e640 <wcrtomb@plt+0xb900>  // b.any
  40e590:	strb	wzr, [x26, w20, sxtw]
  40e594:	mov	x0, x19
  40e598:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e59c:	cmp	w22, #0x3a
  40e5a0:	b.ne	40e6e0 <wcrtomb@plt+0xb9a0>  // b.any
  40e5a4:	ldrb	w0, [x19, #457]
  40e5a8:	cbz	w0, 40e5dc <wcrtomb@plt+0xb89c>
  40e5ac:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40e5b0:	add	x1, x1, #0xa30
  40e5b4:	mov	x0, x26
  40e5b8:	bl	402aa0 <strcmp@plt>
  40e5bc:	mov	w21, w0
  40e5c0:	cbz	w0, 40e654 <wcrtomb@plt+0xb914>
  40e5c4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40e5c8:	add	x1, x1, #0xa38
  40e5cc:	mov	x0, x26
  40e5d0:	bl	402aa0 <strcmp@plt>
  40e5d4:	mov	w21, w0
  40e5d8:	cbz	w0, 40e654 <wcrtomb@plt+0xb914>
  40e5dc:	adrp	x20, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40e5e0:	add	x20, x20, #0xcb0
  40e5e4:	add	x20, x20, #0x20
  40e5e8:	mov	w21, #0x0                   	// #0
  40e5ec:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40e5f0:	add	x1, x1, #0xa28
  40e5f4:	mov	x0, x26
  40e5f8:	bl	402aa0 <strcmp@plt>
  40e5fc:	cbz	w0, 40e654 <wcrtomb@plt+0xb914>
  40e600:	add	w21, w21, #0x1
  40e604:	ldr	x1, [x20, #24]!
  40e608:	cbnz	x1, 40e5f4 <wcrtomb@plt+0xb8b4>
  40e60c:	mov	w2, #0x5                   	// #5
  40e610:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40e614:	add	x1, x1, #0xa78
  40e618:	mov	x0, #0x0                   	// #0
  40e61c:	bl	402c20 <dcgettext@plt>
  40e620:	bl	4094e4 <wcrtomb@plt+0x67a4>
  40e624:	strb	wzr, [sp, #120]
  40e628:	mov	x0, x19
  40e62c:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e630:	ldr	x1, [x19, #40]
  40e634:	cbz	x1, 40e590 <wcrtomb@plt+0xb850>
  40e638:	cmp	w22, w0
  40e63c:	b.eq	40e580 <wcrtomb@plt+0xb840>  // b.none
  40e640:	cmp	w20, #0x1f
  40e644:	b.gt	40e624 <wcrtomb@plt+0xb8e4>
  40e648:	strb	w0, [x26, w20, sxtw]
  40e64c:	add	w20, w20, #0x1
  40e650:	b	40e628 <wcrtomb@plt+0xb8e8>
  40e654:	ldrb	w0, [x19, #1048]
  40e658:	mov	w20, #0x0                   	// #0
  40e65c:	cbz	w0, 40e69c <wcrtomb@plt+0xb95c>
  40e660:	sbfiz	x0, x21, #1, #32
  40e664:	add	x0, x0, w21, sxtw
  40e668:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40e66c:	add	x1, x1, #0xcb0
  40e670:	add	x0, x1, x0, lsl #3
  40e674:	ldrb	w0, [x0, #48]
  40e678:	cbnz	w0, 40e698 <wcrtomb@plt+0xb958>
  40e67c:	str	w0, [sp, #104]
  40e680:	orr	w23, w23, #0x8
  40e684:	mov	x0, x19
  40e688:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e68c:	mov	w20, w0
  40e690:	ldr	w21, [x19, #72]
  40e694:	b	40e530 <wcrtomb@plt+0xb7f0>
  40e698:	mov	w20, #0x0                   	// #0
  40e69c:	sbfiz	x0, x21, #1, #32
  40e6a0:	add	x0, x0, w21, sxtw
  40e6a4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40e6a8:	add	x1, x1, #0xcb0
  40e6ac:	add	x0, x1, x0, lsl #3
  40e6b0:	ldr	x21, [x0, #40]
  40e6b4:	b	40e6d0 <wcrtomb@plt+0xb990>
  40e6b8:	add	x1, sp, #0x100
  40e6bc:	mov	w0, w20
  40e6c0:	bl	40b138 <wcrtomb@plt+0x83f8>
  40e6c4:	add	w20, w20, #0x1
  40e6c8:	cmp	w20, #0x100
  40e6cc:	b.eq	40e680 <wcrtomb@plt+0xb940>  // b.none
  40e6d0:	mov	w0, w20
  40e6d4:	blr	x21
  40e6d8:	cbz	w0, 40e6c4 <wcrtomb@plt+0xb984>
  40e6dc:	b	40e6b8 <wcrtomb@plt+0xb978>
  40e6e0:	str	wzr, [sp, #104]
  40e6e4:	b	40e680 <wcrtomb@plt+0xb940>
  40e6e8:	mov	x0, x19
  40e6ec:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e6f0:	mov	w20, w0
  40e6f4:	ldr	w21, [x19, #72]
  40e6f8:	b	40e554 <wcrtomb@plt+0xb814>
  40e6fc:	mov	x0, x19
  40e700:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e704:	mov	w24, w0
  40e708:	ldr	w28, [x19, #72]
  40e70c:	cmp	w0, #0x5b
  40e710:	b.eq	40e740 <wcrtomb@plt+0xba00>  // b.none
  40e714:	cmp	w0, #0x5d
  40e718:	b.eq	40e7b4 <wcrtomb@plt+0xba74>  // b.none
  40e71c:	cmp	w0, #0x5c
  40e720:	b.ne	40e750 <wcrtomb@plt+0xba10>  // b.any
  40e724:	ldr	x0, [x19, #448]
  40e728:	tbz	w0, #0, 40e750 <wcrtomb@plt+0xba10>
  40e72c:	mov	x0, x19
  40e730:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e734:	mov	w24, w0
  40e738:	ldr	w28, [x19, #72]
  40e73c:	b	40e750 <wcrtomb@plt+0xba10>
  40e740:	ldr	x0, [x19, #32]
  40e744:	ldrb	w0, [x0]
  40e748:	cmp	w0, #0x2e
  40e74c:	b.eq	40e7b0 <wcrtomb@plt+0xba70>  // b.none
  40e750:	orr	w23, w23, #0x8
  40e754:	mov	x0, x19
  40e758:	bl	40b3e0 <wcrtomb@plt+0x86a0>
  40e75c:	mov	w22, w0
  40e760:	ldr	w25, [x19, #72]
  40e764:	cmp	w28, w21
  40e768:	ccmn	w21, #0x1, #0x4, eq  // eq = none
  40e76c:	b.ne	40e504 <wcrtomb@plt+0xb7c4>  // b.any
  40e770:	ldrb	w0, [x19, #1049]
  40e774:	cbnz	w0, 40e7d0 <wcrtomb@plt+0xba90>
  40e778:	sub	w0, w24, #0x30
  40e77c:	and	w0, w0, #0xff
  40e780:	cmp	w0, #0x9
  40e784:	cset	w0, ls  // ls = plast
  40e788:	sub	w1, w20, #0x30
  40e78c:	and	w1, w1, #0xff
  40e790:	cmp	w1, #0x9
  40e794:	cset	w1, ls  // ls = plast
  40e798:	ands	w0, w0, w1
  40e79c:	b.ne	40e7d0 <wcrtomb@plt+0xba90>  // b.any
  40e7a0:	mov	w21, w25
  40e7a4:	mov	w20, w22
  40e7a8:	str	w0, [sp, #104]
  40e7ac:	b	40e530 <wcrtomb@plt+0xb7f0>
  40e7b0:	str	wzr, [sp, #104]
  40e7b4:	ldr	x0, [x19, #32]
  40e7b8:	sub	x0, x0, #0x1
  40e7bc:	str	x0, [x19, #32]
  40e7c0:	ldr	x0, [x19, #40]
  40e7c4:	add	x0, x0, #0x1
  40e7c8:	str	x0, [x19, #40]
  40e7cc:	b	40e504 <wcrtomb@plt+0xb7c4>
  40e7d0:	cmp	w24, w20
  40e7d4:	b.lt	40e91c <wcrtomb@plt+0xbbdc>  // b.tstop
  40e7d8:	sbfiz	x21, x20, #1, #32
  40e7dc:	add	w24, w24, #0x1
  40e7e0:	b	40e800 <wcrtomb@plt+0xbac0>
  40e7e4:	add	x1, sp, #0x100
  40e7e8:	mov	w0, w20
  40e7ec:	bl	40b138 <wcrtomb@plt+0x83f8>
  40e7f0:	add	w20, w20, #0x1
  40e7f4:	add	x21, x21, #0x2
  40e7f8:	cmp	w24, w20
  40e7fc:	b.eq	40e828 <wcrtomb@plt+0xbae8>  // b.none
  40e800:	ldrb	w0, [x19, #457]
  40e804:	cbz	w0, 40e7e4 <wcrtomb@plt+0xbaa4>
  40e808:	bl	402ab0 <__ctype_b_loc@plt>
  40e80c:	ldr	x0, [x0]
  40e810:	ldrh	w0, [x0, x21]
  40e814:	tbz	w0, #10, 40e7e4 <wcrtomb@plt+0xbaa4>
  40e818:	add	x1, sp, #0x100
  40e81c:	mov	w0, w20
  40e820:	bl	40ba80 <wcrtomb@plt+0x8d40>
  40e824:	b	40e7f0 <wcrtomb@plt+0xbab0>
  40e828:	mov	w21, w25
  40e82c:	mov	w20, w22
  40e830:	b	40e530 <wcrtomb@plt+0xb7f0>
  40e834:	ldrb	w0, [x19, #457]
  40e838:	cbz	w0, 40e84c <wcrtomb@plt+0xbb0c>
  40e83c:	bl	402ab0 <__ctype_b_loc@plt>
  40e840:	ldr	x0, [x0]
  40e844:	ldrh	w0, [x0, w20, sxtw #1]
  40e848:	tbnz	w0, #10, 40e864 <wcrtomb@plt+0xbb24>
  40e84c:	add	x1, sp, #0x100
  40e850:	mov	w0, w20
  40e854:	bl	40b138 <wcrtomb@plt+0x83f8>
  40e858:	mov	w21, w25
  40e85c:	mov	w20, w22
  40e860:	b	40e530 <wcrtomb@plt+0xb7f0>
  40e864:	add	x1, sp, #0x100
  40e868:	mov	w0, w20
  40e86c:	bl	40ba80 <wcrtomb@plt+0x8d40>
  40e870:	mov	w21, w25
  40e874:	mov	w20, w22
  40e878:	b	40e530 <wcrtomb@plt+0xb7f0>
  40e87c:	ldrb	w0, [x19, #457]
  40e880:	cbnz	w0, 40e89c <wcrtomb@plt+0xbb5c>
  40e884:	str	w21, [sp, #120]
  40e888:	mov	w24, #0x1                   	// #1
  40e88c:	add	x20, sp, #0x78
  40e890:	mov	w21, #0x0                   	// #0
  40e894:	add	x28, x19, #0x70
  40e898:	b	40e8dc <wcrtomb@plt+0xbb9c>
  40e89c:	ldr	x1, [sp, #96]
  40e8a0:	mov	w0, w21
  40e8a4:	bl	410a9c <wcrtomb@plt+0xdd5c>
  40e8a8:	add	w24, w0, #0x1
  40e8ac:	str	w21, [sp, #120]
  40e8b0:	cmp	w24, #0x0
  40e8b4:	b.gt	40e88c <wcrtomb@plt+0xbb4c>
  40e8b8:	mov	w21, w25
  40e8bc:	mov	w20, w22
  40e8c0:	b	40e530 <wcrtomb@plt+0xb7f0>
  40e8c4:	add	x1, sp, #0x100
  40e8c8:	bl	40b138 <wcrtomb@plt+0x83f8>
  40e8cc:	add	w21, w21, #0x1
  40e8d0:	add	x20, x20, #0x4
  40e8d4:	cmp	w21, w24
  40e8d8:	b.ge	40e8b8 <wcrtomb@plt+0xbb78>  // b.tcont
  40e8dc:	ldr	w0, [x20]
  40e8e0:	bl	4027b0 <wctob@plt>
  40e8e4:	tbz	w0, #31, 40e8c4 <wcrtomb@plt+0xbb84>
  40e8e8:	mov	x4, #0x4                   	// #4
  40e8ec:	mov	x3, #0xffffffffffffffff    	// #-1
  40e8f0:	mov	x2, x28
  40e8f4:	ldr	x1, [x19, #104]
  40e8f8:	ldr	x0, [x19, #96]
  40e8fc:	bl	40b4d4 <wcrtomb@plt+0x8794>
  40e900:	str	x0, [x19, #96]
  40e904:	ldr	x1, [x19, #104]
  40e908:	add	x2, x1, #0x1
  40e90c:	str	x2, [x19, #104]
  40e910:	ldr	w2, [x20]
  40e914:	str	w2, [x0, x1, lsl #2]
  40e918:	b	40e8cc <wcrtomb@plt+0xbb8c>
  40e91c:	mov	w21, w25
  40e920:	mov	w20, w22
  40e924:	b	40e530 <wcrtomb@plt+0xb7f0>
  40e928:	cmp	w23, #0x7
  40e92c:	b.eq	40e984 <wcrtomb@plt+0xbc44>  // b.none
  40e930:	mov	x0, #0x112                 	// #274
  40e934:	ldr	w1, [sp, #104]
  40e938:	cbz	w1, 40e968 <wcrtomb@plt+0xbc28>
  40e93c:	ldrb	w0, [x19, #1048]
  40e940:	cbz	w0, 40e9f4 <wcrtomb@plt+0xbcb4>
  40e944:	ldr	w0, [sp, #108]
  40e948:	cmp	w0, #0x5e
  40e94c:	b.eq	40e9a0 <wcrtomb@plt+0xbc60>  // b.none
  40e950:	ldr	x0, [x19, #104]
  40e954:	cbnz	x0, 40e9a0 <wcrtomb@plt+0xbc60>
  40e958:	add	x1, sp, #0x100
  40e95c:	mov	x0, x19
  40e960:	bl	40b504 <wcrtomb@plt+0x87c4>
  40e964:	add	x0, x0, #0x114
  40e968:	ldp	x19, x20, [sp, #16]
  40e96c:	ldp	x21, x22, [sp, #32]
  40e970:	ldp	x23, x24, [sp, #48]
  40e974:	ldp	x25, x26, [sp, #64]
  40e978:	ldp	x27, x28, [sp, #80]
  40e97c:	ldp	x29, x30, [sp], #288
  40e980:	ret
  40e984:	mov	w2, #0x5                   	// #5
  40e988:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40e98c:	add	x1, x1, #0xa40
  40e990:	mov	x0, #0x0                   	// #0
  40e994:	bl	402c20 <dcgettext@plt>
  40e998:	bl	4094fc <wcrtomb@plt+0x67bc>
  40e99c:	b	40e930 <wcrtomb@plt+0xbbf0>
  40e9a0:	ldr	w0, [sp, #108]
  40e9a4:	cmp	w0, #0x5e
  40e9a8:	cset	w0, eq  // eq = none
  40e9ac:	strb	w0, [x19, #88]
  40e9b0:	ldr	x0, [sp, #256]
  40e9b4:	ldr	x1, [sp, #264]
  40e9b8:	orr	x0, x0, x1
  40e9bc:	ldr	x1, [sp, #272]
  40e9c0:	ldr	x2, [sp, #280]
  40e9c4:	orr	x1, x1, x2
  40e9c8:	orr	x0, x0, x1
  40e9cc:	mov	x1, #0xffffffffffffffff    	// #-1
  40e9d0:	cbnz	x0, 40e9e0 <wcrtomb@plt+0xbca0>
  40e9d4:	str	x1, [x19, #80]
  40e9d8:	mov	x0, #0x113                 	// #275
  40e9dc:	b	40e968 <wcrtomb@plt+0xbc28>
  40e9e0:	add	x1, sp, #0x100
  40e9e4:	mov	x0, x19
  40e9e8:	bl	40b504 <wcrtomb@plt+0x87c4>
  40e9ec:	mov	x1, x0
  40e9f0:	b	40e9d4 <wcrtomb@plt+0xbc94>
  40e9f4:	ldr	w0, [sp, #108]
  40e9f8:	cmp	w0, #0x5e
  40e9fc:	b.ne	40e958 <wcrtomb@plt+0xbc18>  // b.any
  40ea00:	add	x0, sp, #0x100
  40ea04:	add	x2, sp, #0x120
  40ea08:	ldr	x1, [x0]
  40ea0c:	mvn	x1, x1
  40ea10:	str	x1, [x0], #8
  40ea14:	cmp	x0, x2
  40ea18:	b.ne	40ea08 <wcrtomb@plt+0xbcc8>  // b.any
  40ea1c:	ldr	x0, [x19, #448]
  40ea20:	tbz	w0, #8, 40e958 <wcrtomb@plt+0xbc18>
  40ea24:	ldr	x0, [sp, #256]
  40ea28:	and	x0, x0, #0xfffffffffffffbff
  40ea2c:	str	x0, [sp, #256]
  40ea30:	b	40e958 <wcrtomb@plt+0xbc18>
  40ea34:	stp	x29, x30, [sp, #-96]!
  40ea38:	mov	x29, sp
  40ea3c:	stp	x19, x20, [sp, #16]
  40ea40:	stp	x21, x22, [sp, #32]
  40ea44:	stp	x23, x24, [sp, #48]
  40ea48:	mov	x19, x0
  40ea4c:	mov	w23, #0x2                   	// #2
  40ea50:	mov	w22, #0x0                   	// #0
  40ea54:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ea58:	add	x21, x0, #0xbc8
  40ea5c:	mov	w24, #0x1                   	// #1
  40ea60:	ldr	x0, [x19, #40]
  40ea64:	cbz	x0, 40ea90 <wcrtomb@plt+0xbd50>
  40ea68:	mov	x0, x19
  40ea6c:	bl	40b378 <wcrtomb@plt+0x8638>
  40ea70:	mov	w20, w0
  40ea74:	sub	w0, w0, #0xa
  40ea78:	cmp	w0, #0x72
  40ea7c:	b.hi	40ef0c <wcrtomb@plt+0xc1cc>  // b.pmore
  40ea80:	ldrh	w0, [x21, w0, uxtw #1]
  40ea84:	adr	x1, 40ea90 <wcrtomb@plt+0xbd50>
  40ea88:	add	x0, x1, w0, sxth #2
  40ea8c:	br	x0
  40ea90:	mov	x0, #0xffffffffffffffff    	// #-1
  40ea94:	str	x0, [x19, #48]
  40ea98:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ea9c:	cbnz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40eaa0:	ldr	x0, [x19, #40]
  40eaa4:	cbz	x0, 40eab8 <wcrtomb@plt+0xbd78>
  40eaa8:	mov	w22, w24
  40eaac:	subs	w23, w23, #0x1
  40eab0:	b.ne	40ea60 <wcrtomb@plt+0xbd20>  // b.any
  40eab4:	bl	4029e0 <abort@plt>
  40eab8:	mov	w2, #0x5                   	// #5
  40eabc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40eac0:	add	x1, x1, #0xa90
  40eac4:	bl	402c20 <dcgettext@plt>
  40eac8:	bl	4094e4 <wcrtomb@plt+0x67a4>
  40eacc:	cbnz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40ead0:	ldr	x0, [x19, #448]
  40ead4:	tbnz	w0, #3, 40eaec <wcrtomb@plt+0xbdac>
  40ead8:	ldr	x0, [x19, #48]
  40eadc:	sub	x1, x0, #0x106
  40eae0:	cmp	x1, #0x1
  40eae4:	ccmn	x0, #0x1, #0x4, hi  // hi = pmore
  40eae8:	b.ne	40ef0c <wcrtomb@plt+0xc1cc>  // b.any
  40eaec:	mov	x0, #0x10c                 	// #268
  40eaf0:	str	x0, [x19, #48]
  40eaf4:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40eaf8:	cbnz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40eafc:	ldr	x1, [x19, #448]
  40eb00:	tbnz	w1, #3, 40eb98 <wcrtomb@plt+0xbe58>
  40eb04:	ldr	x2, [x19, #40]
  40eb08:	cbz	x2, 40eb98 <wcrtomb@plt+0xbe58>
  40eb0c:	lsr	x0, x1, #13
  40eb10:	eor	x0, x0, #0x1
  40eb14:	and	w3, w0, #0x1
  40eb18:	and	x0, x0, #0x1
  40eb1c:	cmp	x2, x0
  40eb20:	b.le	40eb44 <wcrtomb@plt+0xbe04>
  40eb24:	ldr	x0, [x19, #32]
  40eb28:	ldrb	w4, [x0]
  40eb2c:	cmp	w4, #0x5c
  40eb30:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  40eb34:	cset	x3, ne  // ne = any
  40eb38:	ldrb	w0, [x0, x3]
  40eb3c:	cmp	w0, #0x29
  40eb40:	b.eq	40eb98 <wcrtomb@plt+0xbe58>  // b.none
  40eb44:	lsr	x0, x1, #15
  40eb48:	eor	x0, x0, #0x1
  40eb4c:	and	w3, w0, #0x1
  40eb50:	and	x0, x0, #0x1
  40eb54:	cmp	x2, x0
  40eb58:	b.le	40eb7c <wcrtomb@plt+0xbe3c>
  40eb5c:	ldr	x0, [x19, #32]
  40eb60:	ldrb	w4, [x0]
  40eb64:	cmp	w4, #0x5c
  40eb68:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  40eb6c:	cset	x3, ne  // ne = any
  40eb70:	ldrb	w0, [x0, x3]
  40eb74:	cmp	w0, #0x7c
  40eb78:	b.eq	40eb98 <wcrtomb@plt+0xbe58>  // b.none
  40eb7c:	tst	x1, #0x800
  40eb80:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40eb84:	b.le	40ef0c <wcrtomb@plt+0xc1cc>
  40eb88:	ldr	x0, [x19, #32]
  40eb8c:	ldrb	w0, [x0]
  40eb90:	cmp	w0, #0xa
  40eb94:	b.ne	40ef0c <wcrtomb@plt+0xc1cc>  // b.any
  40eb98:	mov	x0, #0x10d                 	// #269
  40eb9c:	str	x0, [x19, #48]
  40eba0:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40eba4:	cbz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40eba8:	ldr	x0, [x19, #448]
  40ebac:	tbnz	w0, #14, 40ef0c <wcrtomb@plt+0xc1cc>
  40ebb0:	strb	wzr, [x19, #120]
  40ebb4:	mov	x0, #0x112                 	// #274
  40ebb8:	str	x0, [x19, #48]
  40ebbc:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ebc0:	cbz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40ebc4:	ldr	x0, [x19, #448]
  40ebc8:	tbnz	w0, #19, 40ef0c <wcrtomb@plt+0xc1cc>
  40ebcc:	mov	x0, #0x10c                 	// #268
  40ebd0:	str	x0, [x19, #48]
  40ebd4:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ebd8:	cbz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40ebdc:	ldr	x0, [x19, #448]
  40ebe0:	tbnz	w0, #19, 40ef0c <wcrtomb@plt+0xc1cc>
  40ebe4:	mov	x0, #0x10d                 	// #269
  40ebe8:	str	x0, [x19, #48]
  40ebec:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ebf0:	cbz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40ebf4:	ldr	x0, [x19, #448]
  40ebf8:	tbnz	w0, #19, 40ef0c <wcrtomb@plt+0xc1cc>
  40ebfc:	mov	x0, #0x10e                 	// #270
  40ec00:	str	x0, [x19, #48]
  40ec04:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ec08:	cbz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec0c:	ldr	x0, [x19, #448]
  40ec10:	tbnz	w0, #19, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec14:	mov	x0, #0x10f                 	// #271
  40ec18:	str	x0, [x19, #48]
  40ec1c:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ec20:	cbz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec24:	ldr	x0, [x19, #448]
  40ec28:	tbnz	w0, #19, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec2c:	mov	x0, #0x110                 	// #272
  40ec30:	str	x0, [x19, #48]
  40ec34:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ec38:	cbz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec3c:	ldr	x0, [x19, #448]
  40ec40:	tbnz	w0, #19, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec44:	mov	x0, #0x111                 	// #273
  40ec48:	str	x0, [x19, #48]
  40ec4c:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ec50:	ldr	x0, [x19, #448]
  40ec54:	tbnz	w0, #10, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec58:	ubfx	w1, w0, #1, #1
  40ec5c:	cmp	w1, w22
  40ec60:	b.ne	40ef0c <wcrtomb@plt+0xc1cc>  // b.any
  40ec64:	tbnz	w0, #4, 40ec70 <wcrtomb@plt+0xbf30>
  40ec68:	ldrb	w0, [x19, #120]
  40ec6c:	cbnz	w0, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec70:	mov	x0, #0x101                 	// #257
  40ec74:	str	x0, [x19, #48]
  40ec78:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ec7c:	cbnz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec80:	ldr	x0, [x19, #448]
  40ec84:	tbnz	w0, #4, 40ec90 <wcrtomb@plt+0xbf50>
  40ec88:	ldrb	w0, [x19, #120]
  40ec8c:	cbnz	w0, 40ef0c <wcrtomb@plt+0xc1cc>
  40ec90:	mov	x0, #0x102                 	// #258
  40ec94:	str	x0, [x19, #48]
  40ec98:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ec9c:	ldr	x0, [x19, #448]
  40eca0:	tbnz	w0, #10, 40ef0c <wcrtomb@plt+0xc1cc>
  40eca4:	ubfx	w1, w0, #1, #1
  40eca8:	cmp	w1, w22
  40ecac:	b.ne	40ef0c <wcrtomb@plt+0xc1cc>  // b.any
  40ecb0:	tbnz	w0, #4, 40ecbc <wcrtomb@plt+0xbf7c>
  40ecb4:	ldrb	w0, [x19, #120]
  40ecb8:	cbnz	w0, 40ef0c <wcrtomb@plt+0xc1cc>
  40ecbc:	mov	x0, #0x103                 	// #259
  40ecc0:	str	x0, [x19, #48]
  40ecc4:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ecc8:	ldr	x6, [x19, #448]
  40eccc:	tbz	w6, #9, 40ef0c <wcrtomb@plt+0xc1cc>
  40ecd0:	lsr	x0, x6, #12
  40ecd4:	eor	x0, x0, #0x1
  40ecd8:	and	w0, w0, #0x1
  40ecdc:	cmp	w0, w22
  40ece0:	b.ne	40ef0c <wcrtomb@plt+0xc1cc>  // b.any
  40ece4:	tbnz	w6, #4, 40ecf0 <wcrtomb@plt+0xbfb0>
  40ece8:	ldrb	w0, [x19, #120]
  40ecec:	cbnz	w0, 40ef0c <wcrtomb@plt+0xc1cc>
  40ecf0:	ldr	x1, [x19, #32]
  40ecf4:	ldr	x4, [x19, #40]
  40ecf8:	add	x4, x1, x4
  40ecfc:	mov	w0, #0xffffffff            	// #-1
  40ed00:	str	w0, [x19, #68]
  40ed04:	str	w0, [x19, #64]
  40ed08:	mov	w5, #0x8030                	// #32816
  40ed0c:	cmp	x1, x4
  40ed10:	b.ne	40ed60 <wcrtomb@plt+0xc020>  // b.any
  40ed14:	mov	x1, x4
  40ed18:	cbnz	w22, 40ed30 <wcrtomb@plt+0xbff0>
  40ed1c:	cmp	x1, x4
  40ed20:	b.eq	40ed30 <wcrtomb@plt+0xbff0>  // b.none
  40ed24:	ldrb	w0, [x1]
  40ed28:	cmp	w0, #0x7d
  40ed2c:	b.eq	40ee40 <wcrtomb@plt+0xc100>  // b.none
  40ed30:	tbnz	w6, #21, 40ef0c <wcrtomb@plt+0xc1cc>
  40ed34:	mov	w2, #0x5                   	// #5
  40ed38:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ed3c:	add	x1, x1, #0xaa8
  40ed40:	mov	x0, #0x0                   	// #0
  40ed44:	bl	402c20 <dcgettext@plt>
  40ed48:	bl	4094e4 <wcrtomb@plt+0x67a4>
  40ed4c:	sub	w0, w3, #0x30
  40ed50:	str	w0, [x19, #64]
  40ed54:	add	x1, x1, #0x1
  40ed58:	cmp	x4, x1
  40ed5c:	b.eq	40ed14 <wcrtomb@plt+0xbfd4>  // b.none
  40ed60:	ldrb	w3, [x1]
  40ed64:	sub	w2, w3, #0x30
  40ed68:	and	w2, w2, #0xff
  40ed6c:	cmp	w2, #0x9
  40ed70:	b.hi	40ed94 <wcrtomb@plt+0xc054>  // b.pmore
  40ed74:	ldr	w0, [x19, #64]
  40ed78:	tbnz	w0, #31, 40ed4c <wcrtomb@plt+0xc00c>
  40ed7c:	add	w0, w0, w0, lsl #2
  40ed80:	add	w0, w3, w0, lsl #1
  40ed84:	cmp	w0, w5
  40ed88:	csel	w0, w0, w5, le
  40ed8c:	sub	w0, w0, #0x30
  40ed90:	b	40ed50 <wcrtomb@plt+0xc010>
  40ed94:	cmp	x4, x1
  40ed98:	b.eq	40ed18 <wcrtomb@plt+0xbfd8>  // b.none
  40ed9c:	cmp	w3, #0x2c
  40eda0:	b.eq	40edc4 <wcrtomb@plt+0xc084>  // b.none
  40eda4:	ldr	w0, [x19, #64]
  40eda8:	str	w0, [x19, #68]
  40edac:	cbz	w22, 40ed24 <wcrtomb@plt+0xbfe4>
  40edb0:	ldrb	w0, [x1]
  40edb4:	cmp	w0, #0x5c
  40edb8:	b.ne	40ed30 <wcrtomb@plt+0xbff0>  // b.any
  40edbc:	add	x1, x1, #0x1
  40edc0:	b	40ed1c <wcrtomb@plt+0xbfdc>
  40edc4:	ldr	w0, [x19, #64]
  40edc8:	tbnz	w0, #31, 40ede0 <wcrtomb@plt+0xc0a0>
  40edcc:	add	x1, x1, #0x1
  40edd0:	mov	w3, #0x8030                	// #32816
  40edd4:	cmp	x4, x1
  40edd8:	b.ne	40edfc <wcrtomb@plt+0xc0bc>  // b.any
  40eddc:	b	40ed18 <wcrtomb@plt+0xbfd8>
  40ede0:	str	wzr, [x19, #64]
  40ede4:	b	40edcc <wcrtomb@plt+0xc08c>
  40ede8:	sub	w0, w2, #0x30
  40edec:	str	w0, [x19, #68]
  40edf0:	add	x1, x1, #0x1
  40edf4:	cmp	x4, x1
  40edf8:	b.eq	40ed18 <wcrtomb@plt+0xbfd8>  // b.none
  40edfc:	ldrb	w2, [x1]
  40ee00:	sub	w0, w2, #0x30
  40ee04:	and	w0, w0, #0xff
  40ee08:	cmp	w0, #0x9
  40ee0c:	b.hi	40ee30 <wcrtomb@plt+0xc0f0>  // b.pmore
  40ee10:	ldr	w0, [x19, #68]
  40ee14:	tbnz	w0, #31, 40ede8 <wcrtomb@plt+0xc0a8>
  40ee18:	add	w0, w0, w0, lsl #2
  40ee1c:	add	w0, w2, w0, lsl #1
  40ee20:	cmp	w0, w3
  40ee24:	csel	w0, w0, w3, le
  40ee28:	sub	w0, w0, #0x30
  40ee2c:	b	40edec <wcrtomb@plt+0xc0ac>
  40ee30:	cbz	w22, 40ed1c <wcrtomb@plt+0xbfdc>
  40ee34:	cmp	x4, x1
  40ee38:	b.ne	40edb0 <wcrtomb@plt+0xc070>  // b.any
  40ee3c:	b	40ed30 <wcrtomb@plt+0xbff0>
  40ee40:	ldr	w2, [x19, #64]
  40ee44:	tbnz	w2, #31, 40ed30 <wcrtomb@plt+0xbff0>
  40ee48:	ldr	w0, [x19, #68]
  40ee4c:	cmp	w0, #0x0
  40ee50:	ccmp	w2, w0, #0x4, ge  // ge = tcont
  40ee54:	b.gt	40ed30 <wcrtomb@plt+0xbff0>
  40ee58:	mov	w2, #0x7fff                	// #32767
  40ee5c:	cmp	w0, w2
  40ee60:	b.gt	40ee84 <wcrtomb@plt+0xc144>
  40ee64:	add	x1, x1, #0x1
  40ee68:	str	x1, [x19, #32]
  40ee6c:	sub	x1, x4, x1
  40ee70:	str	x1, [x19, #40]
  40ee74:	strb	wzr, [x19, #120]
  40ee78:	mov	x0, #0x104                 	// #260
  40ee7c:	str	x0, [x19, #48]
  40ee80:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ee84:	mov	w2, #0x5                   	// #5
  40ee88:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ee8c:	add	x1, x1, #0xac0
  40ee90:	mov	x0, #0x0                   	// #0
  40ee94:	bl	402c20 <dcgettext@plt>
  40ee98:	bl	4094e4 <wcrtomb@plt+0x67a4>
  40ee9c:	ldr	x0, [x19, #448]
  40eea0:	tbnz	w0, #10, 40ef0c <wcrtomb@plt+0xc1cc>
  40eea4:	lsr	x0, x0, #15
  40eea8:	eor	x0, x0, #0x1
  40eeac:	and	w0, w0, #0x1
  40eeb0:	cmp	w0, w22
  40eeb4:	b.ne	40ef0c <wcrtomb@plt+0xc1cc>  // b.any
  40eeb8:	mov	w0, #0x1                   	// #1
  40eebc:	strb	w0, [x19, #120]
  40eec0:	mov	x0, #0x106                 	// #262
  40eec4:	str	x0, [x19, #48]
  40eec8:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40eecc:	ldr	x0, [x19, #448]
  40eed0:	tst	x0, #0x400
  40eed4:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  40eed8:	b.ne	40ef0c <wcrtomb@plt+0xc1cc>  // b.any
  40eedc:	tbz	w0, #11, 40ef0c <wcrtomb@plt+0xc1cc>
  40eee0:	mov	w0, #0x1                   	// #1
  40eee4:	strb	w0, [x19, #120]
  40eee8:	mov	x0, #0x106                 	// #262
  40eeec:	str	x0, [x19, #48]
  40eef0:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40eef4:	ldr	x0, [x19, #448]
  40eef8:	lsr	x0, x0, #13
  40eefc:	eor	x0, x0, #0x1
  40ef00:	and	w0, w0, #0x1
  40ef04:	cmp	w0, w22
  40ef08:	b.eq	40ef4c <wcrtomb@plt+0xc20c>  // b.none
  40ef0c:	strb	wzr, [x19, #120]
  40ef10:	ldrb	w0, [x19, #1048]
  40ef14:	cbnz	w0, 40f23c <wcrtomb@plt+0xc4fc>
  40ef18:	ldrb	w0, [x19, #457]
  40ef1c:	cbz	w0, 40ef30 <wcrtomb@plt+0xc1f0>
  40ef20:	bl	402ab0 <__ctype_b_loc@plt>
  40ef24:	ldr	x0, [x0]
  40ef28:	ldrh	w0, [x0, w20, sxtw #1]
  40ef2c:	tbnz	w0, #10, 40f248 <wcrtomb@plt+0xc508>
  40ef30:	sxtw	x0, w20
  40ef34:	str	x0, [x19, #48]
  40ef38:	ldp	x19, x20, [sp, #16]
  40ef3c:	ldp	x21, x22, [sp, #32]
  40ef40:	ldp	x23, x24, [sp, #48]
  40ef44:	ldp	x29, x30, [sp], #96
  40ef48:	ret
  40ef4c:	ldr	x0, [x19, #56]
  40ef50:	add	x0, x0, #0x1
  40ef54:	str	x0, [x19, #56]
  40ef58:	mov	w0, #0x1                   	// #1
  40ef5c:	strb	w0, [x19, #120]
  40ef60:	mov	x0, #0x107                 	// #263
  40ef64:	str	x0, [x19, #48]
  40ef68:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40ef6c:	ldr	x1, [x19, #448]
  40ef70:	lsr	x0, x1, #13
  40ef74:	eor	x0, x0, #0x1
  40ef78:	and	w0, w0, #0x1
  40ef7c:	cmp	w0, w22
  40ef80:	b.ne	40ef0c <wcrtomb@plt+0xc1cc>  // b.any
  40ef84:	ldr	x0, [x19, #56]
  40ef88:	cbnz	x0, 40ef90 <wcrtomb@plt+0xc250>
  40ef8c:	tbnz	w1, #17, 40ef0c <wcrtomb@plt+0xc1cc>
  40ef90:	sub	x0, x0, #0x1
  40ef94:	str	x0, [x19, #56]
  40ef98:	strb	wzr, [x19, #120]
  40ef9c:	mov	x0, #0x108                 	// #264
  40efa0:	str	x0, [x19, #48]
  40efa4:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40efa8:	cbnz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40efac:	ldr	x0, [x19, #24]
  40efb0:	tbnz	x0, #63, 40efd4 <wcrtomb@plt+0xc294>
  40efb4:	strb	wzr, [x19, #120]
  40efb8:	ldrb	w1, [x19, #1048]
  40efbc:	mov	x0, #0x10a                 	// #266
  40efc0:	cbnz	w1, 40efcc <wcrtomb@plt+0xc28c>
  40efc4:	ldr	x0, [x19, #24]
  40efc8:	add	x0, x0, #0x114
  40efcc:	str	x0, [x19, #48]
  40efd0:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40efd4:	mov	x0, #0xffffffffffffffff    	// #-1
  40efd8:	str	x0, [sp, #72]
  40efdc:	str	x0, [sp, #80]
  40efe0:	str	x0, [sp, #88]
  40efe4:	ldr	x2, [x19, #448]
  40efe8:	tst	x2, #0x40
  40efec:	mov	x1, #0xfffffffffffffbff    	// #-1025
  40eff0:	csel	x0, x1, x0, eq  // eq = none
  40eff4:	str	x0, [sp, #64]
  40eff8:	tbnz	w2, #7, 40f018 <wcrtomb@plt+0xc2d8>
  40effc:	ldrb	w0, [x19, #1048]
  40f000:	cbz	w0, 40f054 <wcrtomb@plt+0xc314>
  40f004:	mov	x0, #0x0                   	// #0
  40f008:	add	x2, x19, #0x51c
  40f00c:	add	x4, sp, #0x40
  40f010:	mov	x6, #0x1                   	// #1
  40f014:	b	40f030 <wcrtomb@plt+0xc2f0>
  40f018:	and	x0, x0, #0xfffffffffffffffe
  40f01c:	str	x0, [sp, #64]
  40f020:	b	40effc <wcrtomb@plt+0xc2bc>
  40f024:	add	x0, x0, #0x1
  40f028:	cmp	x0, #0x100
  40f02c:	b.eq	40f054 <wcrtomb@plt+0xc314>  // b.none
  40f030:	ldr	w1, [x2, x0, lsl #2]
  40f034:	cmn	w1, #0x1
  40f038:	b.ne	40f024 <wcrtomb@plt+0xc2e4>  // b.any
  40f03c:	lsr	w3, w0, #6
  40f040:	lsl	x1, x6, x0
  40f044:	ldr	x5, [x4, x3, lsl #3]
  40f048:	bic	x1, x5, x1
  40f04c:	str	x1, [x4, x3, lsl #3]
  40f050:	b	40f024 <wcrtomb@plt+0xc2e4>
  40f054:	add	x1, sp, #0x40
  40f058:	mov	x0, x19
  40f05c:	bl	40b504 <wcrtomb@plt+0x87c4>
  40f060:	str	x0, [x19, #24]
  40f064:	b	40efb4 <wcrtomb@plt+0xc274>
  40f068:	cbz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40f06c:	ldr	x0, [x19, #448]
  40f070:	and	x21, x0, #0x80000
  40f074:	tbnz	w0, #19, 40ef0c <wcrtomb@plt+0xc1cc>
  40f078:	ldrb	w0, [x19, #1048]
  40f07c:	cbz	w0, 40f0c8 <wcrtomb@plt+0xc388>
  40f080:	cmp	w20, #0x73
  40f084:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40f088:	add	x0, x0, #0xae0
  40f08c:	cinc	x0, x0, eq  // eq = none
  40f090:	ldr	x22, [x19, #32]
  40f094:	ldr	x21, [x19, #40]
  40f098:	str	x0, [x19, #32]
  40f09c:	cset	x1, eq  // eq = none
  40f0a0:	mov	x0, #0xb                   	// #11
  40f0a4:	sub	x0, x0, x1
  40f0a8:	str	x0, [x19, #40]
  40f0ac:	mov	x0, x19
  40f0b0:	bl	40e448 <wcrtomb@plt+0xb708>
  40f0b4:	str	x0, [x19, #48]
  40f0b8:	str	x22, [x19, #32]
  40f0bc:	str	x21, [x19, #40]
  40f0c0:	strb	wzr, [x19, #120]
  40f0c4:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40f0c8:	add	x0, sp, #0x40
  40f0cc:	bl	40b2fc <wcrtomb@plt+0x85bc>
  40f0d0:	bl	402ab0 <__ctype_b_loc@plt>
  40f0d4:	mov	x22, x0
  40f0d8:	b	40f0f4 <wcrtomb@plt+0xc3b4>
  40f0dc:	add	x1, sp, #0x40
  40f0e0:	mov	w0, w21
  40f0e4:	bl	40b138 <wcrtomb@plt+0x83f8>
  40f0e8:	add	x21, x21, #0x1
  40f0ec:	cmp	x21, #0x100
  40f0f0:	b.eq	40f104 <wcrtomb@plt+0xc3c4>  // b.none
  40f0f4:	ldr	x1, [x22]
  40f0f8:	ldrh	w1, [x1, x21, lsl #1]
  40f0fc:	tbz	w1, #13, 40f0e8 <wcrtomb@plt+0xc3a8>
  40f100:	b	40f0dc <wcrtomb@plt+0xc39c>
  40f104:	cmp	w20, #0x53
  40f108:	b.eq	40f128 <wcrtomb@plt+0xc3e8>  // b.none
  40f10c:	strb	wzr, [x19, #120]
  40f110:	add	x1, sp, #0x40
  40f114:	mov	x0, x19
  40f118:	bl	40b504 <wcrtomb@plt+0x87c4>
  40f11c:	add	x0, x0, #0x114
  40f120:	str	x0, [x19, #48]
  40f124:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40f128:	add	x0, sp, #0x40
  40f12c:	add	x2, sp, #0x60
  40f130:	ldr	x1, [x0]
  40f134:	mvn	x1, x1
  40f138:	str	x1, [x0], #8
  40f13c:	cmp	x0, x2
  40f140:	b.ne	40f130 <wcrtomb@plt+0xc3f0>  // b.any
  40f144:	b	40f10c <wcrtomb@plt+0xc3cc>
  40f148:	cbz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40f14c:	ldr	x0, [x19, #448]
  40f150:	and	x21, x0, #0x80000
  40f154:	tbnz	w0, #19, 40ef0c <wcrtomb@plt+0xc1cc>
  40f158:	ldrb	w0, [x19, #1048]
  40f15c:	cbz	w0, 40f1a8 <wcrtomb@plt+0xc468>
  40f160:	cmp	w20, #0x77
  40f164:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40f168:	add	x0, x0, #0xaf0
  40f16c:	cinc	x0, x0, eq  // eq = none
  40f170:	ldr	x22, [x19, #32]
  40f174:	ldr	x21, [x19, #40]
  40f178:	str	x0, [x19, #32]
  40f17c:	cset	x1, eq  // eq = none
  40f180:	mov	x0, #0xc                   	// #12
  40f184:	sub	x0, x0, x1
  40f188:	str	x0, [x19, #40]
  40f18c:	mov	x0, x19
  40f190:	bl	40e448 <wcrtomb@plt+0xb708>
  40f194:	str	x0, [x19, #48]
  40f198:	str	x22, [x19, #32]
  40f19c:	str	x21, [x19, #40]
  40f1a0:	strb	wzr, [x19, #120]
  40f1a4:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40f1a8:	add	x0, sp, #0x40
  40f1ac:	bl	40b2fc <wcrtomb@plt+0x85bc>
  40f1b0:	add	x22, x19, #0x1cc
  40f1b4:	b	40f1d0 <wcrtomb@plt+0xc490>
  40f1b8:	add	x1, sp, #0x40
  40f1bc:	mov	w0, w21
  40f1c0:	bl	40b138 <wcrtomb@plt+0x83f8>
  40f1c4:	add	x21, x21, #0x1
  40f1c8:	cmp	x21, #0x100
  40f1cc:	b.eq	40f1e0 <wcrtomb@plt+0xc4a0>  // b.none
  40f1d0:	ldrb	w0, [x22, x21]
  40f1d4:	cmp	w0, #0x2
  40f1d8:	b.ne	40f1c4 <wcrtomb@plt+0xc484>  // b.any
  40f1dc:	b	40f1b8 <wcrtomb@plt+0xc478>
  40f1e0:	cmp	w20, #0x57
  40f1e4:	b.eq	40f204 <wcrtomb@plt+0xc4c4>  // b.none
  40f1e8:	strb	wzr, [x19, #120]
  40f1ec:	add	x1, sp, #0x40
  40f1f0:	mov	x0, x19
  40f1f4:	bl	40b504 <wcrtomb@plt+0x87c4>
  40f1f8:	add	x0, x0, #0x114
  40f1fc:	str	x0, [x19, #48]
  40f200:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40f204:	add	x0, sp, #0x40
  40f208:	add	x2, sp, #0x60
  40f20c:	ldr	x1, [x0]
  40f210:	mvn	x1, x1
  40f214:	str	x1, [x0], #8
  40f218:	cmp	x0, x2
  40f21c:	b.ne	40f20c <wcrtomb@plt+0xc4cc>  // b.any
  40f220:	b	40f1e8 <wcrtomb@plt+0xc4a8>
  40f224:	cbnz	w22, 40ef0c <wcrtomb@plt+0xc1cc>
  40f228:	strb	wzr, [x19, #120]
  40f22c:	mov	x0, x19
  40f230:	bl	40e448 <wcrtomb@plt+0xb708>
  40f234:	str	x0, [x19, #48]
  40f238:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40f23c:	mov	x0, #0x109                 	// #265
  40f240:	str	x0, [x19, #48]
  40f244:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40f248:	add	x0, sp, #0x40
  40f24c:	bl	40b2fc <wcrtomb@plt+0x85bc>
  40f250:	add	x1, sp, #0x40
  40f254:	mov	w0, w20
  40f258:	bl	40ba80 <wcrtomb@plt+0x8d40>
  40f25c:	add	x1, sp, #0x40
  40f260:	mov	x0, x19
  40f264:	bl	40b504 <wcrtomb@plt+0x87c4>
  40f268:	add	x0, x0, #0x114
  40f26c:	str	x0, [x19, #48]
  40f270:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40f274:	stp	x29, x30, [sp, #-208]!
  40f278:	mov	x29, sp
  40f27c:	stp	x19, x20, [sp, #16]
  40f280:	mov	x19, x0
  40f284:	ldr	x1, [x0, #128]
  40f288:	cmp	x1, #0xff
  40f28c:	mov	x0, #0x109                 	// #265
  40f290:	ccmp	x1, x0, #0x0, hi  // hi = pmore
  40f294:	b.le	40f4a8 <wcrtomb@plt+0xc768>
  40f298:	cmp	x1, #0x10a
  40f29c:	b.ne	40f2a8 <wcrtomb@plt+0xc568>  // b.any
  40f2a0:	ldrb	w0, [x19, #1050]
  40f2a4:	cbnz	w0, 40f2e4 <wcrtomb@plt+0xc5a4>
  40f2a8:	mov	x0, x19
  40f2ac:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f2b0:	mov	x0, x19
  40f2b4:	bl	40ea34 <wcrtomb@plt+0xbcf4>
  40f2b8:	str	x0, [x19, #128]
  40f2bc:	ldr	x1, [x19, #128]
  40f2c0:	sub	x0, x1, #0x101
  40f2c4:	cmp	x0, #0x3
  40f2c8:	b.hi	40f700 <wcrtomb@plt+0xc9c0>  // b.pmore
  40f2cc:	stp	x23, x24, [sp, #48]
  40f2d0:	str	x25, [sp, #64]
  40f2d4:	mov	x24, #0x101                 	// #257
  40f2d8:	mov	x23, #0x105                 	// #261
  40f2dc:	mov	x25, #0x103                 	// #259
  40f2e0:	b	40f5f0 <wcrtomb@plt+0xc8b0>
  40f2e4:	stp	x21, x22, [sp, #32]
  40f2e8:	ldr	x0, [x19, #200]
  40f2ec:	cbnz	x0, 40f35c <wcrtomb@plt+0xc61c>
  40f2f0:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40f2f4:	add	x0, x0, #0xcb0
  40f2f8:	add	x0, x0, #0x158
  40f2fc:	ld1	{v0.16b, v1.16b}, [x0]
  40f300:	add	x0, sp, #0x50
  40f304:	st1	{v0.16b, v1.16b}, [x0]
  40f308:	ldr	x0, [x19, #448]
  40f30c:	tbz	w0, #6, 40f48c <wcrtomb@plt+0xc74c>
  40f310:	tbnz	w0, #7, 40f498 <wcrtomb@plt+0xc758>
  40f314:	add	x1, sp, #0x50
  40f318:	mov	x0, x19
  40f31c:	bl	40b504 <wcrtomb@plt+0x87c4>
  40f320:	add	x0, x0, #0x114
  40f324:	str	x0, [x19, #200]
  40f328:	adrp	x20, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40f32c:	add	x20, x20, #0xcb0
  40f330:	add	x20, x20, #0x178
  40f334:	add	x21, x19, #0xd0
  40f338:	add	x22, x19, #0x110
  40f33c:	mov	x1, x20
  40f340:	mov	x0, x19
  40f344:	bl	40b504 <wcrtomb@plt+0x87c4>
  40f348:	add	x0, x0, #0x114
  40f34c:	str	x0, [x21], #8
  40f350:	add	x20, x20, #0x20
  40f354:	cmp	x22, x21
  40f358:	b.ne	40f33c <wcrtomb@plt+0xc5fc>  // b.any
  40f35c:	ldr	x1, [x19, #200]
  40f360:	mov	x0, x19
  40f364:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f368:	ldr	x1, [x19, #208]
  40f36c:	mov	x0, x19
  40f370:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f374:	mov	x1, #0xe0                  	// #224
  40f378:	mov	x0, x19
  40f37c:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f380:	ldr	x1, [x19, #224]
  40f384:	mov	x0, x19
  40f388:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f38c:	mov	x1, #0x105                 	// #261
  40f390:	mov	x0, x19
  40f394:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f398:	mov	x1, #0x106                 	// #262
  40f39c:	mov	x0, x19
  40f3a0:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f3a4:	mov	x1, #0xed                  	// #237
  40f3a8:	mov	x0, x19
  40f3ac:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f3b0:	ldr	x1, [x19, #240]
  40f3b4:	mov	x0, x19
  40f3b8:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f3bc:	mov	x1, #0x105                 	// #261
  40f3c0:	mov	x0, x19
  40f3c4:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f3c8:	mov	x1, #0x106                 	// #262
  40f3cc:	mov	x0, x19
  40f3d0:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f3d4:	ldr	x1, [x19, #232]
  40f3d8:	mov	x0, x19
  40f3dc:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f3e0:	mov	x1, #0xf0                  	// #240
  40f3e4:	mov	x0, x19
  40f3e8:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f3ec:	ldr	x1, [x19, #248]
  40f3f0:	mov	x0, x19
  40f3f4:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f3f8:	mov	x1, #0x105                 	// #261
  40f3fc:	mov	x0, x19
  40f400:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f404:	mov	x1, #0x106                 	// #262
  40f408:	mov	x0, x19
  40f40c:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f410:	mov	x1, #0xf4                  	// #244
  40f414:	mov	x0, x19
  40f418:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f41c:	ldr	x1, [x19, #264]
  40f420:	mov	x0, x19
  40f424:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f428:	mov	x1, #0x105                 	// #261
  40f42c:	mov	x0, x19
  40f430:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f434:	mov	x1, #0x106                 	// #262
  40f438:	mov	x0, x19
  40f43c:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f440:	ldr	x1, [x19, #256]
  40f444:	mov	x0, x19
  40f448:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f44c:	mov	w20, #0x3                   	// #3
  40f450:	mov	x22, #0x105                 	// #261
  40f454:	mov	x21, #0x106                 	// #262
  40f458:	ldr	x1, [x19, #216]
  40f45c:	mov	x0, x19
  40f460:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f464:	mov	x1, x22
  40f468:	mov	x0, x19
  40f46c:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f470:	mov	x1, x21
  40f474:	mov	x0, x19
  40f478:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f47c:	subs	w20, w20, #0x1
  40f480:	b.ne	40f458 <wcrtomb@plt+0xc718>  // b.any
  40f484:	ldp	x21, x22, [sp, #32]
  40f488:	b	40f2b0 <wcrtomb@plt+0xc570>
  40f48c:	mov	x1, #0xfffffffffffffbff    	// #-1025
  40f490:	str	x1, [sp, #80]
  40f494:	b	40f310 <wcrtomb@plt+0xc5d0>
  40f498:	ldr	x0, [sp, #80]
  40f49c:	and	x0, x0, #0xfffffffffffffffe
  40f4a0:	str	x0, [sp, #80]
  40f4a4:	b	40f314 <wcrtomb@plt+0xc5d4>
  40f4a8:	cmp	x1, #0x109
  40f4ac:	b.eq	40f4c8 <wcrtomb@plt+0xc788>  // b.none
  40f4b0:	cmp	x1, #0x107
  40f4b4:	b.eq	40f558 <wcrtomb@plt+0xc818>  // b.none
  40f4b8:	mov	x1, #0x100                 	// #256
  40f4bc:	mov	x0, x19
  40f4c0:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f4c4:	b	40f2bc <wcrtomb@plt+0xc57c>
  40f4c8:	ldr	w1, [x19, #72]
  40f4cc:	cmn	w1, #0x1
  40f4d0:	b.eq	40f4f4 <wcrtomb@plt+0xc7b4>  // b.none
  40f4d4:	mov	x0, x19
  40f4d8:	bl	40bb10 <wcrtomb@plt+0x8dd0>
  40f4dc:	ldrb	w0, [x19, #457]
  40f4e0:	cbnz	w0, 40f504 <wcrtomb@plt+0xc7c4>
  40f4e4:	mov	x0, x19
  40f4e8:	bl	40ea34 <wcrtomb@plt+0xbcf4>
  40f4ec:	str	x0, [x19, #128]
  40f4f0:	b	40f2bc <wcrtomb@plt+0xc57c>
  40f4f4:	mov	x1, #0x112                 	// #274
  40f4f8:	mov	x0, x19
  40f4fc:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f500:	b	40f4e4 <wcrtomb@plt+0xc7a4>
  40f504:	add	x1, sp, #0x50
  40f508:	ldr	w0, [x19, #72]
  40f50c:	bl	410a9c <wcrtomb@plt+0xdd5c>
  40f510:	cmp	w0, #0x0
  40f514:	b.le	40f4e4 <wcrtomb@plt+0xc7a4>
  40f518:	stp	x21, x22, [sp, #32]
  40f51c:	add	x21, sp, #0x50
  40f520:	sub	w0, w0, #0x1
  40f524:	add	x20, x21, #0x4
  40f528:	add	x20, x20, x0, lsl #2
  40f52c:	mov	x22, #0x106                 	// #262
  40f530:	ldr	w1, [x21], #4
  40f534:	mov	x0, x19
  40f538:	bl	40bb10 <wcrtomb@plt+0x8dd0>
  40f53c:	mov	x1, x22
  40f540:	mov	x0, x19
  40f544:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f548:	cmp	x20, x21
  40f54c:	b.ne	40f530 <wcrtomb@plt+0xc7f0>  // b.any
  40f550:	ldp	x21, x22, [sp, #32]
  40f554:	b	40f4e4 <wcrtomb@plt+0xc7a4>
  40f558:	mov	x0, x19
  40f55c:	bl	40ea34 <wcrtomb@plt+0xbcf4>
  40f560:	str	x0, [x19, #128]
  40f564:	mov	x0, x19
  40f568:	bl	40f76c <wcrtomb@plt+0xca2c>
  40f56c:	ldr	x0, [x19, #128]
  40f570:	cmp	x0, #0x108
  40f574:	b.ne	40f588 <wcrtomb@plt+0xc848>  // b.any
  40f578:	mov	x0, x19
  40f57c:	bl	40ea34 <wcrtomb@plt+0xbcf4>
  40f580:	str	x0, [x19, #128]
  40f584:	b	40f2bc <wcrtomb@plt+0xc57c>
  40f588:	stp	x21, x22, [sp, #32]
  40f58c:	stp	x23, x24, [sp, #48]
  40f590:	str	x25, [sp, #64]
  40f594:	mov	w2, #0x5                   	// #5
  40f598:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40f59c:	add	x1, x1, #0xb00
  40f5a0:	mov	x0, #0x0                   	// #0
  40f5a4:	bl	402c20 <dcgettext@plt>
  40f5a8:	bl	4094e4 <wcrtomb@plt+0x67a4>
  40f5ac:	ldr	x0, [x19, #64]
  40f5b0:	cbnz	x0, 40f610 <wcrtomb@plt+0xc8d0>
  40f5b4:	ldr	x20, [x19, #152]
  40f5b8:	mov	x1, x20
  40f5bc:	mov	x0, x19
  40f5c0:	bl	40b154 <wcrtomb@plt+0x8414>
  40f5c4:	sub	x20, x20, x0
  40f5c8:	str	x20, [x19, #152]
  40f5cc:	mov	x0, x19
  40f5d0:	bl	40ea34 <wcrtomb@plt+0xbcf4>
  40f5d4:	str	x0, [x19, #128]
  40f5d8:	mov	x0, x19
  40f5dc:	bl	40f274 <wcrtomb@plt+0xc534>
  40f5e0:	ldr	x1, [x19, #128]
  40f5e4:	sub	x0, x1, #0x101
  40f5e8:	cmp	x0, #0x3
  40f5ec:	b.hi	40f6f8 <wcrtomb@plt+0xc9b8>  // b.pmore
  40f5f0:	cmp	x1, #0x104
  40f5f4:	b.eq	40f5ac <wcrtomb@plt+0xc86c>  // b.none
  40f5f8:	mov	x0, x19
  40f5fc:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f600:	mov	x0, x19
  40f604:	bl	40ea34 <wcrtomb@plt+0xbcf4>
  40f608:	str	x0, [x19, #128]
  40f60c:	b	40f5e0 <wcrtomb@plt+0xc8a0>
  40f610:	stp	x21, x22, [sp, #32]
  40f614:	ldr	x22, [x19, #152]
  40f618:	mov	x1, x22
  40f61c:	mov	x0, x19
  40f620:	bl	40b154 <wcrtomb@plt+0x8414>
  40f624:	mov	x21, x0
  40f628:	sub	x22, x22, x0
  40f62c:	ldr	w0, [x19, #68]
  40f630:	tbnz	w0, #31, 40f6d0 <wcrtomb@plt+0xc990>
  40f634:	ldr	w0, [x19, #64]
  40f638:	cbz	w0, 40f6e0 <wcrtomb@plt+0xc9a0>
  40f63c:	ldr	w0, [x19, #64]
  40f640:	cmp	w0, #0x1
  40f644:	b.le	40f6f0 <wcrtomb@plt+0xc9b0>
  40f648:	mov	w20, #0x1                   	// #1
  40f64c:	mov	x2, x21
  40f650:	mov	x1, x22
  40f654:	mov	x0, x19
  40f658:	bl	40b860 <wcrtomb@plt+0x8b20>
  40f65c:	mov	x1, x23
  40f660:	mov	x0, x19
  40f664:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f668:	add	w20, w20, #0x1
  40f66c:	ldr	w0, [x19, #64]
  40f670:	cmp	w0, w20
  40f674:	b.gt	40f64c <wcrtomb@plt+0xc90c>
  40f678:	ldr	w0, [x19, #68]
  40f67c:	cmp	w0, w20
  40f680:	b.le	40f6bc <wcrtomb@plt+0xc97c>
  40f684:	mov	x2, x21
  40f688:	mov	x1, x22
  40f68c:	mov	x0, x19
  40f690:	bl	40b860 <wcrtomb@plt+0x8b20>
  40f694:	mov	x1, x24
  40f698:	mov	x0, x19
  40f69c:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f6a0:	mov	x1, x23
  40f6a4:	mov	x0, x19
  40f6a8:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f6ac:	add	w20, w20, #0x1
  40f6b0:	ldr	w0, [x19, #68]
  40f6b4:	cmp	w0, w20
  40f6b8:	b.gt	40f684 <wcrtomb@plt+0xc944>
  40f6bc:	mov	x0, x19
  40f6c0:	bl	40ea34 <wcrtomb@plt+0xbcf4>
  40f6c4:	str	x0, [x19, #128]
  40f6c8:	ldp	x21, x22, [sp, #32]
  40f6cc:	b	40f5e0 <wcrtomb@plt+0xc8a0>
  40f6d0:	mov	x1, x25
  40f6d4:	mov	x0, x19
  40f6d8:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f6dc:	b	40f634 <wcrtomb@plt+0xc8f4>
  40f6e0:	mov	x1, x24
  40f6e4:	mov	x0, x19
  40f6e8:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f6ec:	b	40f63c <wcrtomb@plt+0xc8fc>
  40f6f0:	mov	w20, #0x1                   	// #1
  40f6f4:	b	40f678 <wcrtomb@plt+0xc938>
  40f6f8:	ldp	x23, x24, [sp, #48]
  40f6fc:	ldr	x25, [sp, #64]
  40f700:	ldp	x19, x20, [sp, #16]
  40f704:	ldp	x29, x30, [sp], #208
  40f708:	ret
  40f70c:	stp	x29, x30, [sp, #-32]!
  40f710:	mov	x29, sp
  40f714:	stp	x19, x20, [sp, #16]
  40f718:	mov	x19, x0
  40f71c:	bl	40f274 <wcrtomb@plt+0xc534>
  40f720:	ldr	x0, [x19, #128]
  40f724:	sub	x1, x0, #0x106
  40f728:	tst	x1, #0xfffffffffffffffd
  40f72c:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  40f730:	b.lt	40f760 <wcrtomb@plt+0xca20>  // b.tstop
  40f734:	mov	x20, #0x105                 	// #261
  40f738:	mov	x0, x19
  40f73c:	bl	40f274 <wcrtomb@plt+0xc534>
  40f740:	mov	x1, x20
  40f744:	mov	x0, x19
  40f748:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f74c:	ldr	x0, [x19, #128]
  40f750:	sub	x1, x0, #0x106
  40f754:	tst	x1, #0xfffffffffffffffd
  40f758:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  40f75c:	b.ge	40f738 <wcrtomb@plt+0xc9f8>  // b.tcont
  40f760:	ldp	x19, x20, [sp, #16]
  40f764:	ldp	x29, x30, [sp], #32
  40f768:	ret
  40f76c:	stp	x29, x30, [sp, #-32]!
  40f770:	mov	x29, sp
  40f774:	stp	x19, x20, [sp, #16]
  40f778:	mov	x19, x0
  40f77c:	bl	40f70c <wcrtomb@plt+0xc9cc>
  40f780:	ldr	x0, [x19, #128]
  40f784:	cmp	x0, #0x106
  40f788:	b.ne	40f7bc <wcrtomb@plt+0xca7c>  // b.any
  40f78c:	mov	x20, #0x106                 	// #262
  40f790:	mov	x0, x19
  40f794:	bl	40ea34 <wcrtomb@plt+0xbcf4>
  40f798:	str	x0, [x19, #128]
  40f79c:	mov	x0, x19
  40f7a0:	bl	40f70c <wcrtomb@plt+0xc9cc>
  40f7a4:	mov	x1, x20
  40f7a8:	mov	x0, x19
  40f7ac:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f7b0:	ldr	x0, [x19, #128]
  40f7b4:	cmp	x0, #0x106
  40f7b8:	b.eq	40f790 <wcrtomb@plt+0xca50>  // b.none
  40f7bc:	ldp	x19, x20, [sp, #16]
  40f7c0:	ldp	x29, x30, [sp], #32
  40f7c4:	ret
  40f7c8:	stp	x29, x30, [sp, #-32]!
  40f7cc:	mov	x29, sp
  40f7d0:	str	x19, [sp, #16]
  40f7d4:	str	x0, [x2, #32]
  40f7d8:	str	x1, [x2, #40]
  40f7dc:	mov	x0, #0xffffffffffffffff    	// #-1
  40f7e0:	str	x0, [x2, #48]
  40f7e4:	mov	w0, #0x1                   	// #1
  40f7e8:	strb	w0, [x2, #120]
  40f7ec:	ldrb	w0, [x2, #456]
  40f7f0:	cbz	w0, 40f864 <wcrtomb@plt+0xcb24>
  40f7f4:	mov	x19, x2
  40f7f8:	ldr	x0, [x2, #184]
  40f7fc:	cbz	x0, 40f87c <wcrtomb@plt+0xcb3c>
  40f800:	mov	x0, x19
  40f804:	bl	40ea34 <wcrtomb@plt+0xbcf4>
  40f808:	str	x0, [x19, #128]
  40f80c:	ldr	x0, [x19, #168]
  40f810:	str	x0, [x19, #136]
  40f814:	mov	x0, x19
  40f818:	bl	40f76c <wcrtomb@plt+0xca2c>
  40f81c:	ldr	x0, [x19, #128]
  40f820:	cmn	x0, #0x1
  40f824:	b.ne	40f88c <wcrtomb@plt+0xcb4c>  // b.any
  40f828:	ldr	x1, [x19, #184]
  40f82c:	mvn	x1, x1
  40f830:	mov	x0, x19
  40f834:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f838:	mov	x1, #0x105                 	// #261
  40f83c:	mov	x0, x19
  40f840:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f844:	ldr	x0, [x19, #184]
  40f848:	cbnz	x0, 40f8a4 <wcrtomb@plt+0xcb64>
  40f84c:	ldr	x0, [x19, #184]
  40f850:	add	x0, x0, #0x1
  40f854:	str	x0, [x19, #184]
  40f858:	ldr	x19, [sp, #16]
  40f85c:	ldp	x29, x30, [sp], #32
  40f860:	ret
  40f864:	mov	w2, #0x5                   	// #5
  40f868:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40f86c:	add	x1, x1, #0xb10
  40f870:	mov	x0, #0x0                   	// #0
  40f874:	bl	402c20 <dcgettext@plt>
  40f878:	bl	4094e4 <wcrtomb@plt+0x67a4>
  40f87c:	mov	x1, #0x10b                 	// #267
  40f880:	mov	x0, x2
  40f884:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f888:	b	40f800 <wcrtomb@plt+0xcac0>
  40f88c:	mov	w2, #0x5                   	// #5
  40f890:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40f894:	add	x1, x1, #0xb28
  40f898:	mov	x0, #0x0                   	// #0
  40f89c:	bl	402c20 <dcgettext@plt>
  40f8a0:	bl	4094e4 <wcrtomb@plt+0x67a4>
  40f8a4:	mov	x1, #0x106                 	// #262
  40f8a8:	mov	x0, x19
  40f8ac:	bl	40bbec <wcrtomb@plt+0x8eac>
  40f8b0:	b	40f84c <wcrtomb@plt+0xcb0c>
  40f8b4:	stp	x29, x30, [sp, #-16]!
  40f8b8:	mov	x29, sp
  40f8bc:	ldr	x6, [x0, #1040]
  40f8c0:	blr	x6
  40f8c4:	ldp	x29, x30, [sp], #16
  40f8c8:	ret
  40f8cc:	ldr	x0, [x0, #288]
  40f8d0:	ret
  40f8d4:	ldrb	w0, [x0, #192]
  40f8d8:	ret
  40f8dc:	stp	x29, x30, [sp, #-48]!
  40f8e0:	mov	x29, sp
  40f8e4:	stp	x19, x20, [sp, #16]
  40f8e8:	str	x21, [sp, #32]
  40f8ec:	mov	x19, x0
  40f8f0:	ldr	x0, [x0]
  40f8f4:	bl	402ae0 <free@plt>
  40f8f8:	ldr	x0, [x19, #144]
  40f8fc:	bl	402ae0 <free@plt>
  40f900:	ldrb	w0, [x19, #1048]
  40f904:	cbnz	w0, 40fa34 <wcrtomb@plt+0xccf4>
  40f908:	ldr	x0, [x19, #336]
  40f90c:	bl	402ae0 <free@plt>
  40f910:	ldr	x0, [x19, #344]
  40f914:	bl	402ae0 <free@plt>
  40f918:	ldr	x0, [x19, #304]
  40f91c:	cmp	x0, #0x0
  40f920:	b.le	40f960 <wcrtomb@plt+0xcc20>
  40f924:	mov	x20, #0x0                   	// #0
  40f928:	mov	x21, #0x0                   	// #0
  40f92c:	ldr	x0, [x19, #296]
  40f930:	add	x0, x0, x20
  40f934:	ldr	x0, [x0, #8]
  40f938:	bl	402ae0 <free@plt>
  40f93c:	ldr	x0, [x19, #296]
  40f940:	add	x0, x0, x20
  40f944:	ldr	x0, [x0, #48]
  40f948:	bl	402ae0 <free@plt>
  40f94c:	add	x21, x21, #0x1
  40f950:	add	x20, x20, #0x50
  40f954:	ldr	x0, [x19, #304]
  40f958:	cmp	x0, x21
  40f95c:	b.gt	40f92c <wcrtomb@plt+0xcbec>
  40f960:	ldr	x0, [x19, #296]
  40f964:	bl	402ae0 <free@plt>
  40f968:	ldr	x0, [x19, #320]
  40f96c:	cbz	x0, 40f9ac <wcrtomb@plt+0xcc6c>
  40f970:	ldr	x0, [x19, #152]
  40f974:	cmp	x0, #0x0
  40f978:	b.le	40f9a4 <wcrtomb@plt+0xcc64>
  40f97c:	mov	x21, #0x0                   	// #0
  40f980:	mov	x20, #0x0                   	// #0
  40f984:	ldr	x0, [x19, #320]
  40f988:	ldr	x0, [x0, x21]
  40f98c:	bl	402ae0 <free@plt>
  40f990:	add	x20, x20, #0x1
  40f994:	add	x21, x21, #0x18
  40f998:	ldr	x0, [x19, #152]
  40f99c:	cmp	x0, x20
  40f9a0:	b.gt	40f984 <wcrtomb@plt+0xcc44>
  40f9a4:	ldr	x0, [x19, #320]
  40f9a8:	bl	402ae0 <free@plt>
  40f9ac:	ldr	x0, [x19, #368]
  40f9b0:	cbz	x0, 40fa10 <wcrtomb@plt+0xccd0>
  40f9b4:	ldr	x0, [x19, #352]
  40f9b8:	cmp	x0, #0x0
  40f9bc:	b.le	40f9ec <wcrtomb@plt+0xccac>
  40f9c0:	mov	x20, #0x0                   	// #0
  40f9c4:	ldr	x0, [x19, #368]
  40f9c8:	ldr	x0, [x0, x20, lsl #3]
  40f9cc:	bl	402ae0 <free@plt>
  40f9d0:	ldr	x0, [x19, #376]
  40f9d4:	ldr	x0, [x0, x20, lsl #3]
  40f9d8:	bl	402ae0 <free@plt>
  40f9dc:	add	x20, x20, #0x1
  40f9e0:	ldr	x0, [x19, #352]
  40f9e4:	cmp	x0, x20
  40f9e8:	b.gt	40f9c4 <wcrtomb@plt+0xcc84>
  40f9ec:	ldr	x0, [x19, #368]
  40f9f0:	sub	x0, x0, #0x10
  40f9f4:	bl	402ae0 <free@plt>
  40f9f8:	ldr	x0, [x19, #376]
  40f9fc:	bl	402ae0 <free@plt>
  40fa00:	ldr	x0, [x19, #392]
  40fa04:	bl	402ae0 <free@plt>
  40fa08:	ldr	x0, [x19, #384]
  40fa0c:	bl	402ae0 <free@plt>
  40fa10:	ldr	x0, [x19, #288]
  40fa14:	cbz	x0, 40fa24 <wcrtomb@plt+0xcce4>
  40fa18:	bl	40f8dc <wcrtomb@plt+0xcb9c>
  40fa1c:	ldr	x0, [x19, #288]
  40fa20:	bl	402ae0 <free@plt>
  40fa24:	ldp	x19, x20, [sp, #16]
  40fa28:	ldr	x21, [sp, #32]
  40fa2c:	ldp	x29, x30, [sp], #48
  40fa30:	ret
  40fa34:	mov	x0, x19
  40fa38:	bl	40be68 <wcrtomb@plt+0x9128>
  40fa3c:	b	40f908 <wcrtomb@plt+0xcbc8>
  40fa40:	stp	x29, x30, [sp, #-160]!
  40fa44:	mov	x29, sp
  40fa48:	stp	x23, x24, [sp, #48]
  40fa4c:	stp	x27, x28, [sp, #80]
  40fa50:	mov	x28, x0
  40fa54:	ldrb	w0, [x0, #1048]
  40fa58:	eor	w0, w0, #0x1
  40fa5c:	ldrb	w1, [x28, #457]
  40fa60:	and	w0, w0, w1
  40fa64:	and	w0, w0, #0xff
  40fa68:	str	w0, [sp, #148]
  40fa6c:	ldr	x23, [x28, #152]
  40fa70:	cmp	x23, #0x2
  40fa74:	b.le	410394 <wcrtomb@plt+0xd654>
  40fa78:	stp	x19, x20, [sp, #16]
  40fa7c:	stp	x21, x22, [sp, #32]
  40fa80:	stp	x25, x26, [sp, #64]
  40fa84:	mov	x21, #0x0                   	// #0
  40fa88:	str	wzr, [sp, #156]
  40fa8c:	str	wzr, [sp, #152]
  40fa90:	mov	x26, #0x1                   	// #1
  40fa94:	mov	x0, #0x8                   	// #8
  40fa98:	str	x0, [sp, #120]
  40fa9c:	b	40fd44 <wcrtomb@plt+0xd004>
  40faa0:	cmn	x19, #0x1
  40faa4:	b.eq	40fef4 <wcrtomb@plt+0xd1b4>  // b.none
  40faa8:	cbnz	x19, 4101c4 <wcrtomb@plt+0xd484>
  40faac:	mov	x23, #0x0                   	// #0
  40fab0:	cbz	x21, 410384 <wcrtomb@plt+0xd644>
  40fab4:	mov	x0, x21
  40fab8:	ldr	x21, [x21, #40]
  40fabc:	bl	40bf08 <wcrtomb@plt+0x91c8>
  40fac0:	cbnz	x21, 40fab4 <wcrtomb@plt+0xcd74>
  40fac4:	ldp	x19, x20, [sp, #16]
  40fac8:	ldp	x21, x22, [sp, #32]
  40facc:	ldp	x25, x26, [sp, #64]
  40fad0:	mov	x0, x23
  40fad4:	ldp	x23, x24, [sp, #48]
  40fad8:	ldp	x27, x28, [sp, #80]
  40fadc:	ldp	x29, x30, [sp], #160
  40fae0:	ret
  40fae4:	cmp	x19, #0x10c
  40fae8:	b.eq	40fd0c <wcrtomb@plt+0xcfcc>  // b.none
  40faec:	b.le	40fb20 <wcrtomb@plt+0xcde0>
  40faf0:	cmp	x19, #0x10d
  40faf4:	b.ne	40fca8 <wcrtomb@plt+0xcf68>  // b.any
  40faf8:	mov	x1, #0x2                   	// #2
  40fafc:	mov	x0, x21
  40fb00:	bl	40c32c <wcrtomb@plt+0x95ec>
  40fb04:	mov	x21, x0
  40fb08:	mov	w0, #0x1                   	// #1
  40fb0c:	strb	w0, [x21, #33]
  40fb10:	mov	x19, x26
  40fb14:	mov	w0, #0x1                   	// #1
  40fb18:	str	w0, [sp, #156]
  40fb1c:	b	40fd30 <wcrtomb@plt+0xcff0>
  40fb20:	cmp	x19, #0x106
  40fb24:	b.ne	40fc80 <wcrtomb@plt+0xcf40>  // b.any
  40fb28:	ldr	x20, [x21, #40]
  40fb2c:	str	x20, [sp, #128]
  40fb30:	ldr	x19, [x20, #24]
  40fb34:	ldr	x1, [x21, #24]
  40fb38:	mov	x0, x19
  40fb3c:	bl	402aa0 <strcmp@plt>
  40fb40:	cbnz	w0, 40fde8 <wcrtomb@plt+0xd0a8>
  40fb44:	ldrb	w0, [x20, #32]
  40fb48:	ldrb	w1, [x21, #32]
  40fb4c:	and	w0, w0, w1
  40fb50:	strb	w0, [x20, #32]
  40fb54:	ldrb	w0, [x20, #33]
  40fb58:	ldrb	w1, [x21, #33]
  40fb5c:	and	w0, w0, w1
  40fb60:	strb	w0, [x20, #33]
  40fb64:	ldr	x0, [sp, #128]
  40fb68:	ldr	x2, [x0, #8]
  40fb6c:	ldrb	w0, [x2]
  40fb70:	cbz	w0, 40fb90 <wcrtomb@plt+0xce50>
  40fb74:	ldr	x1, [x21, #8]
  40fb78:	ldrb	w3, [x1]
  40fb7c:	cmp	w3, w0
  40fb80:	b.ne	40fb90 <wcrtomb@plt+0xce50>  // b.any
  40fb84:	ldrb	w0, [x2, #1]!
  40fb88:	add	x1, x1, #0x1
  40fb8c:	cbnz	w0, 40fb78 <wcrtomb@plt+0xce38>
  40fb90:	strb	wzr, [x2]
  40fb94:	ldr	x0, [sp, #128]
  40fb98:	ldr	x20, [x0, #16]
  40fb9c:	mov	x0, x20
  40fba0:	bl	402690 <strlen@plt>
  40fba4:	mov	x19, x0
  40fba8:	ldr	x22, [x21, #16]
  40fbac:	mov	x0, x22
  40fbb0:	bl	402690 <strlen@plt>
  40fbb4:	cmp	x19, x0
  40fbb8:	csel	x3, x19, x0, le
  40fbbc:	cmp	x3, #0x0
  40fbc0:	b.le	40fe10 <wcrtomb@plt+0xd0d0>
  40fbc4:	mov	x1, #0x0                   	// #0
  40fbc8:	mov	x2, #0x0                   	// #0
  40fbcc:	sub	x4, x19, #0x1
  40fbd0:	add	x20, x20, x4
  40fbd4:	sub	x0, x0, #0x1
  40fbd8:	add	x22, x22, x0
  40fbdc:	ldrb	w4, [x20, x1]
  40fbe0:	ldrb	w0, [x22, x1]
  40fbe4:	cmp	w4, w0
  40fbe8:	b.ne	40fdfc <wcrtomb@plt+0xd0bc>  // b.any
  40fbec:	add	x2, x2, #0x1
  40fbf0:	sub	x1, x1, #0x1
  40fbf4:	cmp	x3, x2
  40fbf8:	b.ne	40fbdc <wcrtomb@plt+0xce9c>  // b.any
  40fbfc:	mov	x1, #0x0                   	// #0
  40fc00:	sub	x19, x19, x3
  40fc04:	ldr	x0, [sp, #128]
  40fc08:	ldr	x2, [x0, #16]
  40fc0c:	add	x4, x2, x1
  40fc10:	ldrb	w4, [x4, x19]
  40fc14:	strb	w4, [x2, x1]
  40fc18:	add	x1, x1, #0x1
  40fc1c:	cmp	x3, x1
  40fc20:	b.ne	40fc04 <wcrtomb@plt+0xcec4>  // b.any
  40fc24:	ldr	x1, [sp, #128]
  40fc28:	ldr	x0, [x1, #16]
  40fc2c:	strb	wzr, [x0, x3]
  40fc30:	ldr	x27, [x1]
  40fc34:	ldr	x0, [x21]
  40fc38:	str	x0, [sp, #136]
  40fc3c:	mov	x0, #0x8                   	// #8
  40fc40:	bl	412e80 <wcrtomb@plt+0x10140>
  40fc44:	str	x0, [sp, #104]
  40fc48:	ldr	x0, [x27]
  40fc4c:	cbnz	x0, 40fee4 <wcrtomb@plt+0xd1a4>
  40fc50:	ldr	x20, [sp, #128]
  40fc54:	ldr	x0, [x20]
  40fc58:	bl	40bed8 <wcrtomb@plt+0x9198>
  40fc5c:	ldr	x0, [x20]
  40fc60:	bl	402ae0 <free@plt>
  40fc64:	ldr	x0, [sp, #104]
  40fc68:	str	x0, [x20]
  40fc6c:	mov	x0, x21
  40fc70:	bl	40bf08 <wcrtomb@plt+0x91c8>
  40fc74:	mov	x19, x26
  40fc78:	mov	x21, x20
  40fc7c:	b	40fd30 <wcrtomb@plt+0xcff0>
  40fc80:	cmp	x19, #0x108
  40fc84:	b.le	40fd8c <wcrtomb@plt+0xd04c>
  40fc88:	cmp	x19, #0x10a
  40fc8c:	b.ne	4101c4 <wcrtomb@plt+0xd484>  // b.any
  40fc90:	mov	x1, #0x2                   	// #2
  40fc94:	mov	x0, x21
  40fc98:	bl	40c32c <wcrtomb@plt+0x95ec>
  40fc9c:	mov	x21, x0
  40fca0:	mov	x19, x26
  40fca4:	b	40fd30 <wcrtomb@plt+0xcff0>
  40fca8:	sub	x0, x19, #0x10e
  40fcac:	cmp	x0, #0x5
  40fcb0:	b.ls	40fc90 <wcrtomb@plt+0xcf50>  // b.plast
  40fcb4:	cmp	x19, #0x113
  40fcb8:	b.le	4101c4 <wcrtomb@plt+0xd484>
  40fcbc:	mov	x27, #0xffffffffffffdd80    	// #-8832
  40fcc0:	add	x19, x27, x19, lsl #5
  40fcc4:	ldr	x27, [x28]
  40fcc8:	add	x27, x27, x19
  40fccc:	mov	w20, #0x0                   	// #0
  40fcd0:	str	w20, [sp, #144]
  40fcd4:	mov	x1, x27
  40fcd8:	mov	w0, w20
  40fcdc:	bl	40b124 <wcrtomb@plt+0x83e4>
  40fce0:	and	w0, w0, #0xff
  40fce4:	cbnz	w0, 4100e8 <wcrtomb@plt+0xd3a8>
  40fce8:	add	w20, w20, #0x1
  40fcec:	cmp	w20, #0x100
  40fcf0:	b.ne	40fcd0 <wcrtomb@plt+0xcf90>  // b.any
  40fcf4:	mov	x1, #0x2                   	// #2
  40fcf8:	mov	x0, x21
  40fcfc:	bl	40c32c <wcrtomb@plt+0x95ec>
  40fd00:	mov	x21, x0
  40fd04:	mov	x19, x26
  40fd08:	b	40fd30 <wcrtomb@plt+0xcff0>
  40fd0c:	mov	x1, #0x2                   	// #2
  40fd10:	mov	x0, x21
  40fd14:	bl	40c32c <wcrtomb@plt+0x95ec>
  40fd18:	mov	x21, x0
  40fd1c:	mov	w0, #0x1                   	// #1
  40fd20:	strb	w0, [x21, #32]
  40fd24:	mov	x19, x26
  40fd28:	mov	w0, #0x1                   	// #1
  40fd2c:	str	w0, [sp, #152]
  40fd30:	add	x26, x19, #0x1
  40fd34:	ldr	x23, [x28, #152]
  40fd38:	add	x19, x19, #0x2
  40fd3c:	cmp	x19, x23
  40fd40:	b.ge	41034c <wcrtomb@plt+0xd60c>  // b.tcont
  40fd44:	ldr	x24, [x28, #144]
  40fd48:	str	x26, [sp, #104]
  40fd4c:	lsl	x22, x26, #3
  40fd50:	ldr	x19, [x24, x26, lsl #3]
  40fd54:	cmp	x19, #0x105
  40fd58:	b.eq	40ffbc <wcrtomb@plt+0xd27c>  // b.none
  40fd5c:	b.gt	40fae4 <wcrtomb@plt+0xcda4>
  40fd60:	cmp	x19, #0x100
  40fd64:	b.eq	40fc90 <wcrtomb@plt+0xcf50>  // b.none
  40fd68:	b.le	40faa0 <wcrtomb@plt+0xcd60>
  40fd6c:	cmp	x19, #0x102
  40fd70:	b.le	40fdb0 <wcrtomb@plt+0xd070>
  40fd74:	cmp	x19, #0x103
  40fd78:	b.ne	4101c4 <wcrtomb@plt+0xd484>  // b.any
  40fd7c:	ldr	x0, [x21, #24]
  40fd80:	strb	wzr, [x0]
  40fd84:	mov	x19, x26
  40fd88:	b	40fd30 <wcrtomb@plt+0xcff0>
  40fd8c:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40fd90:	add	x3, x3, #0xcb0
  40fd94:	add	x3, x3, #0x278
  40fd98:	mov	w2, #0xff6                 	// #4086
  40fd9c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40fda0:	add	x1, x1, #0xa10
  40fda4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40fda8:	add	x0, x0, #0xb38
  40fdac:	bl	402ca0 <__assert_fail@plt>
  40fdb0:	ldr	x0, [x21]
  40fdb4:	bl	40bed8 <wcrtomb@plt+0x9198>
  40fdb8:	ldr	x0, [x21]
  40fdbc:	str	xzr, [x0]
  40fdc0:	ldr	x0, [x21, #24]
  40fdc4:	strb	wzr, [x0]
  40fdc8:	ldr	x0, [x21, #16]
  40fdcc:	strb	wzr, [x0]
  40fdd0:	ldr	x0, [x21, #8]
  40fdd4:	strb	wzr, [x0]
  40fdd8:	strb	wzr, [x21, #32]
  40fddc:	strb	wzr, [x21, #33]
  40fde0:	mov	x19, x26
  40fde4:	b	40fd30 <wcrtomb@plt+0xcff0>
  40fde8:	strb	wzr, [x19]
  40fdec:	ldr	x0, [sp, #128]
  40fdf0:	strb	wzr, [x0, #32]
  40fdf4:	strb	wzr, [x0, #33]
  40fdf8:	b	40fb64 <wcrtomb@plt+0xce24>
  40fdfc:	mov	x3, x2
  40fe00:	cmp	x2, #0x0
  40fe04:	b.gt	40fbfc <wcrtomb@plt+0xcebc>
  40fe08:	mov	x3, #0x0                   	// #0
  40fe0c:	b	40fc24 <wcrtomb@plt+0xcee4>
  40fe10:	mov	x3, #0x0                   	// #0
  40fe14:	b	40fc24 <wcrtomb@plt+0xcee4>
  40fe18:	add	x1, x1, #0x1
  40fe1c:	ldrb	w2, [x20, x1]
  40fe20:	cbnz	w2, 40fe6c <wcrtomb@plt+0xd12c>
  40fe24:	b	40fe78 <wcrtomb@plt+0xd138>
  40fe28:	mov	x2, x22
  40fe2c:	mov	x1, x20
  40fe30:	mov	x0, x19
  40fe34:	bl	40c3a0 <wcrtomb@plt+0x9660>
  40fe38:	mov	x19, x0
  40fe3c:	ldrb	w1, [x20, #1]!
  40fe40:	cbz	w1, 40fe98 <wcrtomb@plt+0xd158>
  40fe44:	str	w1, [sp, #144]
  40fe48:	mov	x0, x23
  40fe4c:	bl	402b20 <strchr@plt>
  40fe50:	cbz	x0, 40fe3c <wcrtomb@plt+0xd0fc>
  40fe54:	ldrb	w25, [x20, #1]
  40fe58:	mov	x22, #0x0                   	// #0
  40fe5c:	str	w25, [sp, #112]
  40fe60:	ldr	w2, [sp, #112]
  40fe64:	mov	x1, #0x1                   	// #1
  40fe68:	cbz	w25, 40fe78 <wcrtomb@plt+0xd138>
  40fe6c:	ldrb	w3, [x0, x1]
  40fe70:	cmp	w3, w2
  40fe74:	b.eq	40fe18 <wcrtomb@plt+0xd0d8>  // b.none
  40fe78:	cmp	x22, x1
  40fe7c:	csel	x22, x22, x1, ge  // ge = tcont
  40fe80:	ldr	w1, [sp, #144]
  40fe84:	add	x0, x0, #0x1
  40fe88:	bl	402b20 <strchr@plt>
  40fe8c:	cbnz	x0, 40fe60 <wcrtomb@plt+0xd120>
  40fe90:	cbz	x22, 40fe3c <wcrtomb@plt+0xd0fc>
  40fe94:	b	40fe28 <wcrtomb@plt+0xd0e8>
  40fe98:	mov	x1, x19
  40fe9c:	ldr	x0, [sp, #104]
  40fea0:	bl	40c4bc <wcrtomb@plt+0x977c>
  40fea4:	str	x0, [sp, #104]
  40fea8:	mov	x0, x19
  40feac:	bl	40bed8 <wcrtomb@plt+0x9198>
  40feb0:	mov	x0, x19
  40feb4:	bl	402ae0 <free@plt>
  40feb8:	ldr	x23, [x24], #8
  40febc:	cbz	x23, 40fedc <wcrtomb@plt+0xd19c>
  40fec0:	ldr	x20, [x27]
  40fec4:	ldr	x0, [sp, #120]
  40fec8:	bl	412e80 <wcrtomb@plt+0x10140>
  40fecc:	mov	x19, x0
  40fed0:	ldrb	w1, [x20]
  40fed4:	cbnz	w1, 40fe44 <wcrtomb@plt+0xd104>
  40fed8:	b	40fe98 <wcrtomb@plt+0xd158>
  40fedc:	ldr	x0, [x27, #8]!
  40fee0:	cbz	x0, 40fc50 <wcrtomb@plt+0xcf10>
  40fee4:	ldr	x24, [sp, #136]
  40fee8:	ldr	x23, [x24], #8
  40feec:	cbnz	x23, 40fec0 <wcrtomb@plt+0xd180>
  40fef0:	b	40fedc <wcrtomb@plt+0xd19c>
  40fef4:	ldr	x23, [x21, #40]
  40fef8:	cbnz	x23, 40ff98 <wcrtomb@plt+0xd258>
  40fefc:	ldr	x24, [x21]
  40ff00:	ldr	x19, [x24], #8
  40ff04:	adrp	x22, 420000 <_obstack_memory_used@@Base+0xccd0>
  40ff08:	add	x22, x22, #0xdb8
  40ff0c:	cbz	x19, 40ff8c <wcrtomb@plt+0xd24c>
  40ff10:	mov	x0, x19
  40ff14:	bl	402690 <strlen@plt>
  40ff18:	mov	x20, x0
  40ff1c:	mov	x0, x22
  40ff20:	bl	402690 <strlen@plt>
  40ff24:	cmp	x20, x0
  40ff28:	csel	x22, x22, x19, ls  // ls = plast
  40ff2c:	ldr	x19, [x24], #8
  40ff30:	cbnz	x19, 40ff10 <wcrtomb@plt+0xd1d0>
  40ff34:	ldr	x1, [x21, #24]
  40ff38:	mov	x0, x22
  40ff3c:	bl	402aa0 <strcmp@plt>
  40ff40:	cbnz	w0, 41039c <wcrtomb@plt+0xd65c>
  40ff44:	ldr	w0, [sp, #152]
  40ff48:	cbz	w0, 40ff54 <wcrtomb@plt+0xd214>
  40ff4c:	ldrb	w19, [x21, #32]
  40ff50:	cbz	w19, 40ff64 <wcrtomb@plt+0xd224>
  40ff54:	mov	w19, #0x1                   	// #1
  40ff58:	ldr	w0, [sp, #156]
  40ff5c:	cbz	w0, 40ff64 <wcrtomb@plt+0xd224>
  40ff60:	ldrb	w19, [x21, #33]
  40ff64:	ldrb	w24, [x21, #32]
  40ff68:	ldrb	w20, [x21, #33]
  40ff6c:	ldrb	w0, [x22]
  40ff70:	cbnz	w0, 410354 <wcrtomb@plt+0xd614>
  40ff74:	mov	x0, x21
  40ff78:	bl	40bf08 <wcrtomb@plt+0x91c8>
  40ff7c:	ldp	x19, x20, [sp, #16]
  40ff80:	ldp	x21, x22, [sp, #32]
  40ff84:	ldp	x25, x26, [sp, #64]
  40ff88:	b	40fad0 <wcrtomb@plt+0xcd90>
  40ff8c:	adrp	x22, 420000 <_obstack_memory_used@@Base+0xccd0>
  40ff90:	add	x22, x22, #0xdb8
  40ff94:	b	40ff34 <wcrtomb@plt+0xd1f4>
  40ff98:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ff9c:	add	x3, x3, #0xcb0
  40ffa0:	add	x3, x3, #0x278
  40ffa4:	mov	w2, #0x1039                	// #4153
  40ffa8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ffac:	add	x1, x1, #0xa10
  40ffb0:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  40ffb4:	add	x0, x0, #0xb68
  40ffb8:	bl	402ca0 <__assert_fail@plt>
  40ffbc:	ldr	x20, [x21, #40]
  40ffc0:	ldr	x1, [x21]
  40ffc4:	ldr	x0, [x20]
  40ffc8:	bl	40c4bc <wcrtomb@plt+0x977c>
  40ffcc:	str	x0, [x20]
  40ffd0:	ldr	x0, [x20, #16]
  40ffd4:	ldrb	w1, [x0]
  40ffd8:	cbz	w1, 40ffe8 <wcrtomb@plt+0xd2a8>
  40ffdc:	ldr	x19, [x21, #8]
  40ffe0:	ldrb	w1, [x19]
  40ffe4:	cbnz	w1, 410054 <wcrtomb@plt+0xd314>
  40ffe8:	ldr	x0, [x20, #24]
  40ffec:	ldrb	w0, [x0]
  40fff0:	cbnz	w0, 4100b4 <wcrtomb@plt+0xd374>
  40fff4:	ldr	x0, [x21, #24]
  40fff8:	ldrb	w0, [x0]
  40fffc:	cbnz	w0, 410008 <wcrtomb@plt+0xd2c8>
  410000:	ldr	x0, [x20, #16]
  410004:	strb	wzr, [x0]
  410008:	ldr	x1, [x21, #16]
  41000c:	ldr	x0, [x20, #16]
  410010:	bl	40bfa0 <wcrtomb@plt+0x9260>
  410014:	str	x0, [x20, #16]
  410018:	ldr	x0, [x20, #24]
  41001c:	ldrb	w1, [x0]
  410020:	cbnz	w1, 41002c <wcrtomb@plt+0xd2ec>
  410024:	ldrb	w1, [x20, #32]
  410028:	cbz	w1, 4100c8 <wcrtomb@plt+0xd388>
  41002c:	ldr	x1, [x21, #24]
  410030:	ldrb	w2, [x1]
  410034:	cbnz	w2, 410040 <wcrtomb@plt+0xd300>
  410038:	ldrb	w2, [x21, #33]
  41003c:	cbz	w2, 4100c8 <wcrtomb@plt+0xd388>
  410040:	bl	40bfa0 <wcrtomb@plt+0x9260>
  410044:	str	x0, [x20, #24]
  410048:	ldrb	w0, [x21, #33]
  41004c:	strb	w0, [x20, #33]
  410050:	b	4100d4 <wcrtomb@plt+0xd394>
  410054:	bl	402690 <strlen@plt>
  410058:	mov	x22, x0
  41005c:	mov	x0, x19
  410060:	bl	402690 <strlen@plt>
  410064:	mov	x24, x0
  410068:	add	x23, x22, x0
  41006c:	mov	x0, x23
  410070:	bl	412c80 <wcrtomb@plt+0xff40>
  410074:	mov	x19, x0
  410078:	mov	x2, x22
  41007c:	ldr	x1, [x20, #16]
  410080:	bl	402650 <memcpy@plt>
  410084:	mov	x2, x24
  410088:	ldr	x1, [x21, #8]
  41008c:	add	x0, x19, x22
  410090:	bl	402650 <memcpy@plt>
  410094:	mov	x2, x23
  410098:	mov	x1, x19
  41009c:	ldr	x0, [x20]
  4100a0:	bl	40c3a0 <wcrtomb@plt+0x9660>
  4100a4:	str	x0, [x20]
  4100a8:	mov	x0, x19
  4100ac:	bl	402ae0 <free@plt>
  4100b0:	b	40ffe8 <wcrtomb@plt+0xd2a8>
  4100b4:	ldr	x1, [x21, #8]
  4100b8:	ldr	x0, [x20, #8]
  4100bc:	bl	40bfa0 <wcrtomb@plt+0x9260>
  4100c0:	str	x0, [x20, #8]
  4100c4:	b	40fff4 <wcrtomb@plt+0xd2b4>
  4100c8:	strb	wzr, [x0]
  4100cc:	strb	wzr, [x20, #32]
  4100d0:	strb	wzr, [x20, #33]
  4100d4:	mov	x0, x21
  4100d8:	bl	40bf08 <wcrtomb@plt+0x91c8>
  4100dc:	mov	x19, x26
  4100e0:	mov	x21, x20
  4100e4:	b	40fd30 <wcrtomb@plt+0xcff0>
  4100e8:	cmp	w20, #0xff
  4100ec:	b.gt	40fcf4 <wcrtomb@plt+0xcfb4>
  4100f0:	sxtw	x19, w20
  4100f4:	add	w25, w20, #0x1
  4100f8:	cmp	w25, #0xff
  4100fc:	b.gt	4101c4 <wcrtomb@plt+0xd484>
  410100:	sbfiz	x0, x20, #2, #32
  410104:	str	x0, [sp, #136]
  410108:	add	x0, x0, #0x4
  41010c:	str	x0, [sp, #112]
  410110:	ldr	w0, [sp, #144]
  410114:	add	w0, w0, #0x80
  410118:	str	w0, [sp, #144]
  41011c:	str	w20, [sp, #128]
  410120:	b	410144 <wcrtomb@plt+0xd404>
  410124:	cmp	w20, w0
  410128:	b.ne	4101a4 <wcrtomb@plt+0xd464>  // b.any
  41012c:	add	w25, w25, #0x1
  410130:	ldr	x0, [sp, #112]
  410134:	add	x0, x0, #0x4
  410138:	str	x0, [sp, #112]
  41013c:	cmp	w25, #0x100
  410140:	b.eq	4101c4 <wcrtomb@plt+0xd484>  // b.none
  410144:	mov	w20, w25
  410148:	mov	x1, x27
  41014c:	mov	w0, w25
  410150:	bl	40b124 <wcrtomb@plt+0x83e4>
  410154:	and	w0, w0, #0xff
  410158:	cbz	w0, 41012c <wcrtomb@plt+0xd3ec>
  41015c:	ldr	w0, [sp, #148]
  410160:	cbz	w0, 4101a4 <wcrtomb@plt+0xd464>
  410164:	add	w0, w25, #0x80
  410168:	cmp	w0, #0x17f
  41016c:	b.hi	410180 <wcrtomb@plt+0xd440>  // b.pmore
  410170:	bl	402940 <__ctype_toupper_loc@plt>
  410174:	ldr	x0, [x0]
  410178:	ldr	x1, [sp, #112]
  41017c:	ldr	w20, [x0, x1]
  410180:	ldr	w0, [sp, #128]
  410184:	ldr	w1, [sp, #144]
  410188:	cmp	w1, #0x17f
  41018c:	b.hi	410124 <wcrtomb@plt+0xd3e4>  // b.pmore
  410190:	bl	402940 <__ctype_toupper_loc@plt>
  410194:	ldr	x0, [x0]
  410198:	ldr	x1, [sp, #136]
  41019c:	ldr	w0, [x0, x1]
  4101a0:	b	410124 <wcrtomb@plt+0xd3e4>
  4101a4:	cmp	w25, #0xff
  4101a8:	b.gt	4101c4 <wcrtomb@plt+0xd484>
  4101ac:	mov	x1, #0x2                   	// #2
  4101b0:	mov	x0, x21
  4101b4:	bl	40c32c <wcrtomb@plt+0x95ec>
  4101b8:	mov	x21, x0
  4101bc:	mov	x19, x26
  4101c0:	b	40fd30 <wcrtomb@plt+0xcff0>
  4101c4:	add	x25, x26, #0x2
  4101c8:	add	x0, x24, x22
  4101cc:	ldr	x0, [x0, #8]
  4101d0:	mov	x20, x25
  4101d4:	cmp	x0, #0x105
  4101d8:	b.eq	410264 <wcrtomb@plt+0xd524>  // b.none
  4101dc:	sub	x1, x20, x26
  4101e0:	asr	x1, x1, #1
  4101e4:	add	x1, x1, #0x1
  4101e8:	mov	x0, x21
  4101ec:	bl	40c32c <wcrtomb@plt+0x95ec>
  4101f0:	mov	x21, x0
  4101f4:	and	w0, w19, #0xff
  4101f8:	ldr	w1, [sp, #148]
  4101fc:	cbz	w1, 410220 <wcrtomb@plt+0xd4e0>
  410200:	mov	w0, w19
  410204:	add	w1, w19, #0x80
  410208:	cmp	w1, #0x17f
  41020c:	b.hi	41021c <wcrtomb@plt+0xd4dc>  // b.pmore
  410210:	bl	402940 <__ctype_toupper_loc@plt>
  410214:	ldr	x0, [x0]
  410218:	ldr	w0, [x0, w19, sxtw #2]
  41021c:	and	w0, w0, #0xff
  410220:	ldr	x1, [x21, #16]
  410224:	strb	w0, [x1]
  410228:	ldr	x1, [x21, #8]
  41022c:	strb	w0, [x1]
  410230:	ldr	x1, [x21, #24]
  410234:	strb	w0, [x1]
  410238:	cmp	x20, x25
  41023c:	b.le	410340 <wcrtomb@plt+0xd600>
  410240:	add	x22, x22, #0x10
  410244:	mov	x0, #0xfffffffffffffffd    	// #-3
  410248:	ldr	x1, [sp, #104]
  41024c:	sub	x19, x0, x1
  410250:	add	x19, x19, x20
  410254:	lsr	x24, x19, #1
  410258:	add	x23, x24, #0x2
  41025c:	mov	x19, #0x1                   	// #1
  410260:	b	4102d8 <wcrtomb@plt+0xd598>
  410264:	sub	x23, x23, #0x1
  410268:	cmp	x25, x23
  41026c:	b.ge	4101dc <wcrtomb@plt+0xd49c>  // b.tcont
  410270:	add	x1, x24, #0x8
  410274:	b	410290 <wcrtomb@plt+0xd550>
  410278:	ldr	x0, [x1, x20, lsl #3]
  41027c:	cmp	x0, #0x105
  410280:	b.ne	4101dc <wcrtomb@plt+0xd49c>  // b.any
  410284:	add	x20, x20, #0x2
  410288:	cmp	x20, x23
  41028c:	b.ge	4101dc <wcrtomb@plt+0xd49c>  // b.tcont
  410290:	cmp	x26, x20
  410294:	b.eq	410278 <wcrtomb@plt+0xd538>  // b.none
  410298:	ldr	x0, [x24, x20, lsl #3]
  41029c:	sub	x0, x0, #0x1
  4102a0:	cmp	x0, #0xfe
  4102a4:	b.ls	410278 <wcrtomb@plt+0xd538>  // b.plast
  4102a8:	b	4101dc <wcrtomb@plt+0xd49c>
  4102ac:	and	w0, w0, #0xff
  4102b0:	ldr	x1, [x21, #16]
  4102b4:	strb	w0, [x1, x19]
  4102b8:	ldr	x1, [x21, #8]
  4102bc:	strb	w0, [x1, x19]
  4102c0:	ldr	x1, [x21, #24]
  4102c4:	strb	w0, [x1, x19]
  4102c8:	add	x19, x19, #0x1
  4102cc:	add	x22, x22, #0x10
  4102d0:	cmp	x23, x19
  4102d4:	b.eq	41030c <wcrtomb@plt+0xd5cc>  // b.none
  4102d8:	ldr	x0, [x28, #144]
  4102dc:	ldr	x20, [x0, x22]
  4102e0:	and	w0, w20, #0xff
  4102e4:	ldr	w1, [sp, #148]
  4102e8:	cbz	w1, 4102b0 <wcrtomb@plt+0xd570>
  4102ec:	mov	w0, w20
  4102f0:	add	w1, w20, #0x80
  4102f4:	cmp	w1, #0x17f
  4102f8:	b.hi	4102ac <wcrtomb@plt+0xd56c>  // b.pmore
  4102fc:	bl	402940 <__ctype_toupper_loc@plt>
  410300:	ldr	x0, [x0]
  410304:	ldr	w0, [x0, w20, sxtw #2]
  410308:	b	4102ac <wcrtomb@plt+0xd56c>
  41030c:	add	x2, x24, #0x2
  410310:	add	x19, x25, x24, lsl #1
  410314:	ldr	x0, [x21, #16]
  410318:	strb	wzr, [x0, x2]
  41031c:	ldr	x0, [x21, #8]
  410320:	strb	wzr, [x0, x2]
  410324:	ldr	x0, [x21, #24]
  410328:	strb	wzr, [x0, x2]
  41032c:	ldr	x1, [x21, #24]
  410330:	ldr	x0, [x21]
  410334:	bl	40c3a0 <wcrtomb@plt+0x9660>
  410338:	str	x0, [x21]
  41033c:	b	40fd30 <wcrtomb@plt+0xcff0>
  410340:	mov	x19, x26
  410344:	mov	x2, #0x1                   	// #1
  410348:	b	410314 <wcrtomb@plt+0xd5d4>
  41034c:	mov	x23, #0x0                   	// #0
  410350:	b	40fab0 <wcrtomb@plt+0xcd70>
  410354:	mov	x0, x22
  410358:	bl	402690 <strlen@plt>
  41035c:	add	x0, x0, #0x4
  410360:	bl	412c80 <wcrtomb@plt+0xff40>
  410364:	mov	x23, x0
  410368:	strb	w19, [x0]
  41036c:	strb	w24, [x0, #1]
  410370:	strb	w20, [x0, #2]
  410374:	mov	x1, x22
  410378:	add	x0, x0, #0x3
  41037c:	bl	402b80 <strcpy@plt>
  410380:	b	40fab0 <wcrtomb@plt+0xcd70>
  410384:	ldp	x19, x20, [sp, #16]
  410388:	ldp	x21, x22, [sp, #32]
  41038c:	ldp	x25, x26, [sp, #64]
  410390:	b	40fad0 <wcrtomb@plt+0xcd90>
  410394:	mov	x23, #0x0                   	// #0
  410398:	b	40fad0 <wcrtomb@plt+0xcd90>
  41039c:	mov	w20, #0x0                   	// #0
  4103a0:	mov	w24, #0x0                   	// #0
  4103a4:	mov	w19, #0x0                   	// #0
  4103a8:	b	40ff6c <wcrtomb@plt+0xd22c>
  4103ac:	stp	x29, x30, [sp, #-16]!
  4103b0:	mov	x29, sp
  4103b4:	bl	402ae0 <free@plt>
  4103b8:	ldp	x29, x30, [sp], #16
  4103bc:	ret
  4103c0:	stp	x29, x30, [sp, #-16]!
  4103c4:	mov	x29, sp
  4103c8:	mov	x0, #0x920                 	// #2336
  4103cc:	bl	412c80 <wcrtomb@plt+0xff40>
  4103d0:	ldp	x29, x30, [sp], #16
  4103d4:	ret
  4103d8:	stp	x29, x30, [sp, #-144]!
  4103dc:	mov	x29, sp
  4103e0:	stp	x19, x20, [sp, #16]
  4103e4:	mov	x20, x2
  4103e8:	and	w2, w3, #0xff
  4103ec:	str	w2, [sp, #108]
  4103f0:	cbz	x0, 4103fc <wcrtomb@plt+0xd6bc>
  4103f4:	mov	x2, x20
  4103f8:	bl	40f7c8 <wcrtomb@plt+0xca88>
  4103fc:	bl	4103c0 <wcrtomb@plt+0xd680>
  410400:	mov	x19, x0
  410404:	mov	x2, #0x920                 	// #2336
  410408:	mov	x1, x20
  41040c:	bl	402650 <memcpy@plt>
  410410:	strb	wzr, [x19, #1048]
  410414:	adrp	x0, 40d000 <wcrtomb@plt+0xa2c0>
  410418:	add	x0, x0, #0x44c
  41041c:	str	x0, [x19, #1040]
  410420:	str	xzr, [x19, #280]
  410424:	str	xzr, [x19, #288]
  410428:	str	xzr, [x19, #296]
  41042c:	str	xzr, [x19, #304]
  410430:	str	xzr, [x19, #336]
  410434:	str	xzr, [x19, #344]
  410438:	str	xzr, [x19, #320]
  41043c:	str	xzr, [x19, #352]
  410440:	str	xzr, [x19, #368]
  410444:	str	xzr, [x19, #376]
  410448:	str	xzr, [x19, #384]
  41044c:	str	xzr, [x19, #392]
  410450:	ldr	x0, [x19, #16]
  410454:	cmp	xzr, x0, lsr #59
  410458:	cset	x1, ne  // ne = any
  41045c:	tst	x0, #0x400000000000000
  410460:	csinc	w1, w1, wzr, eq  // eq = none
  410464:	cbnz	w1, 4104e4 <wcrtomb@plt+0xd7a4>
  410468:	stp	x23, x24, [sp, #48]
  41046c:	lsl	x0, x0, #5
  410470:	bl	412c80 <wcrtomb@plt+0xff40>
  410474:	str	x0, [x19]
  410478:	ldr	x2, [x20, #8]
  41047c:	cbnz	x2, 4104f8 <wcrtomb@plt+0xd7b8>
  410480:	ldr	x0, [x20, #152]
  410484:	cmp	xzr, x0, lsr #60
  410488:	cset	x23, ne  // ne = any
  41048c:	tst	x0, #0x800000000000000
  410490:	csinc	w23, w23, wzr, eq  // eq = none
  410494:	cbnz	w23, 410508 <wcrtomb@plt+0xd7c8>
  410498:	lsl	x0, x0, #4
  41049c:	bl	412c80 <wcrtomb@plt+0xff40>
  4104a0:	str	x0, [x19, #144]
  4104a4:	ldr	x0, [x20, #152]
  4104a8:	lsl	x1, x0, #1
  4104ac:	str	x1, [x19, #160]
  4104b0:	cmp	x0, #0x0
  4104b4:	b.le	410750 <wcrtomb@plt+0xda10>
  4104b8:	stp	x21, x22, [sp, #32]
  4104bc:	stp	x25, x26, [sp, #64]
  4104c0:	stp	x27, x28, [sp, #80]
  4104c4:	mov	w3, w23
  4104c8:	mov	w25, w23
  4104cc:	mov	x21, #0x0                   	// #0
  4104d0:	mov	x22, #0x0                   	// #0
  4104d4:	mov	x24, #0xffffffffffffffff    	// #-1
  4104d8:	mov	x28, #0x102                 	// #258
  4104dc:	mov	x27, #0x100                 	// #256
  4104e0:	b	41058c <wcrtomb@plt+0xd84c>
  4104e4:	stp	x21, x22, [sp, #32]
  4104e8:	stp	x23, x24, [sp, #48]
  4104ec:	stp	x25, x26, [sp, #64]
  4104f0:	stp	x27, x28, [sp, #80]
  4104f4:	bl	412ef8 <wcrtomb@plt+0x101b8>
  4104f8:	lsl	x2, x2, #5
  4104fc:	ldr	x1, [x20]
  410500:	bl	402650 <memcpy@plt>
  410504:	b	410480 <wcrtomb@plt+0xd740>
  410508:	stp	x21, x22, [sp, #32]
  41050c:	stp	x25, x26, [sp, #64]
  410510:	stp	x27, x28, [sp, #80]
  410514:	bl	412ef8 <wcrtomb@plt+0x101b8>
  410518:	sub	x1, x0, #0x112
  41051c:	cmp	x1, #0x1
  410520:	b.hi	4105b0 <wcrtomb@plt+0xd870>  // b.pmore
  410524:	str	x24, [sp, #112]
  410528:	str	x24, [sp, #120]
  41052c:	str	x24, [sp, #128]
  410530:	str	x24, [sp, #136]
  410534:	add	x1, sp, #0x70
  410538:	mov	x0, x19
  41053c:	bl	40b504 <wcrtomb@plt+0x87c4>
  410540:	ldr	x1, [x19, #144]
  410544:	add	x0, x0, #0x114
  410548:	str	x0, [x1, x21, lsl #3]
  41054c:	add	x1, x21, #0x2
  410550:	ldr	x0, [x19, #144]
  410554:	add	x21, x0, x21, lsl #3
  410558:	str	x28, [x21, #8]
  41055c:	ldr	x0, [x20, #144]
  410560:	add	x26, x0, x26
  410564:	ldr	x0, [x26, #8]
  410568:	sub	x0, x0, #0x101
  41056c:	cmp	x0, #0x3
  410570:	cinc	x22, x22, cc  // cc = lo, ul, last
  410574:	mov	w3, #0x1                   	// #1
  410578:	add	x22, x22, #0x1
  41057c:	ldr	x0, [x20, #152]
  410580:	cmp	x22, x0
  410584:	b.ge	4105fc <wcrtomb@plt+0xd8bc>  // b.tcont
  410588:	mov	x21, x1
  41058c:	lsl	x26, x22, #3
  410590:	ldr	x0, [x20, #144]
  410594:	ldr	x0, [x0, x22, lsl #3]
  410598:	cmp	x0, #0x111
  41059c:	b.gt	410518 <wcrtomb@plt+0xd7d8>
  4105a0:	cmp	x0, #0x10d
  4105a4:	b.gt	4105e4 <wcrtomb@plt+0xd8a4>
  4105a8:	cmp	x0, #0x10a
  4105ac:	b.eq	410524 <wcrtomb@plt+0xd7e4>  // b.none
  4105b0:	add	x1, x21, #0x1
  4105b4:	ldr	x2, [x19, #144]
  4105b8:	str	x0, [x2, x21, lsl #3]
  4105bc:	ldr	x0, [x20, #144]
  4105c0:	ldr	x2, [x0, x26]
  4105c4:	cmp	x2, #0xff
  4105c8:	cset	w0, ls  // ls = plast
  4105cc:	cmp	x2, #0x113
  4105d0:	cset	w2, gt
  4105d4:	orr	w0, w0, w2
  4105d8:	cmp	w0, #0x0
  4105dc:	csel	w25, w25, w0, eq  // eq = none
  4105e0:	b	410578 <wcrtomb@plt+0xd838>
  4105e4:	ldrb	w1, [x20, #1048]
  4105e8:	cbz	w1, 4105b0 <wcrtomb@plt+0xd870>
  4105ec:	add	x1, x21, #0x1
  4105f0:	ldr	x0, [x19, #144]
  4105f4:	str	x27, [x0, x21, lsl #3]
  4105f8:	b	410578 <wcrtomb@plt+0xd838>
  4105fc:	str	x1, [x19, #152]
  410600:	cbz	w25, 410680 <wcrtomb@plt+0xd940>
  410604:	cbnz	w3, 410610 <wcrtomb@plt+0xd8d0>
  410608:	ldrb	w0, [x20, #1048]
  41060c:	cbz	w0, 4106a0 <wcrtomb@plt+0xd960>
  410610:	str	x19, [x20, #288]
  410614:	ldp	x21, x22, [sp, #32]
  410618:	ldp	x25, x26, [sp, #64]
  41061c:	ldp	x27, x28, [sp, #80]
  410620:	ldr	x2, [x20, #152]
  410624:	cmp	x2, #0x0
  410628:	b.le	410758 <wcrtomb@plt+0xda18>
  41062c:	ldr	x3, [x20, #144]
  410630:	mov	x1, #0x0                   	// #0
  410634:	ldr	x0, [x3, x1, lsl #3]
  410638:	cmp	x0, #0x111
  41063c:	b.le	4106b0 <wcrtomb@plt+0xd970>
  410640:	sub	x0, x0, #0x112
  410644:	cmp	x0, #0x1
  410648:	b.hi	4106b8 <wcrtomb@plt+0xd978>  // b.pmore
  41064c:	adrp	x0, 40b000 <wcrtomb@plt+0x82c0>
  410650:	add	x0, x0, #0x2ec
  410654:	str	x0, [x20, #1040]
  410658:	ldr	x0, [x20, #288]
  41065c:	cbz	x0, 410670 <wcrtomb@plt+0xd930>
  410660:	mov	w1, #0x1                   	// #1
  410664:	strb	w1, [x20, #192]
  410668:	ldrb	w1, [sp, #108]
  41066c:	bl	40d80c <wcrtomb@plt+0xaacc>
  410670:	ldp	x23, x24, [sp, #48]
  410674:	ldp	x19, x20, [sp, #16]
  410678:	ldp	x29, x30, [sp], #144
  41067c:	ret
  410680:	ldp	x21, x22, [sp, #32]
  410684:	ldp	x25, x26, [sp, #64]
  410688:	ldp	x27, x28, [sp, #80]
  41068c:	mov	x0, x19
  410690:	bl	40f8dc <wcrtomb@plt+0xcb9c>
  410694:	mov	x0, x19
  410698:	bl	402ae0 <free@plt>
  41069c:	b	410620 <wcrtomb@plt+0xd8e0>
  4106a0:	ldp	x21, x22, [sp, #32]
  4106a4:	ldp	x25, x26, [sp, #64]
  4106a8:	ldp	x27, x28, [sp, #80]
  4106ac:	b	41068c <wcrtomb@plt+0xd94c>
  4106b0:	cmp	x0, #0x10d
  4106b4:	b.gt	410734 <wcrtomb@plt+0xd9f4>
  4106b8:	add	x1, x1, #0x1
  4106bc:	cmp	x2, x1
  4106c0:	b.ne	410634 <wcrtomb@plt+0xd8f4>  // b.any
  4106c4:	ldrb	w4, [x20, #1050]
  4106c8:	cbz	w4, 410724 <wcrtomb@plt+0xd9e4>
  4106cc:	ldr	x3, [x20, #144]
  4106d0:	mov	x1, #0x0                   	// #0
  4106d4:	ldr	x0, [x3, x1, lsl #3]
  4106d8:	cmp	x0, #0x113
  4106dc:	b.eq	410724 <wcrtomb@plt+0xd9e4>  // b.none
  4106e0:	b.gt	4106f4 <wcrtomb@plt+0xd9b4>
  4106e4:	cmp	x0, #0x10a
  4106e8:	b.eq	410740 <wcrtomb@plt+0xda00>  // b.none
  4106ec:	cmp	x0, #0x112
  4106f0:	csel	w23, w23, w4, ne  // ne = any
  4106f4:	add	x1, x1, #0x1
  4106f8:	cmp	x2, x1
  4106fc:	b.ne	4106d4 <wcrtomb@plt+0xd994>  // b.any
  410700:	cbz	w23, 410760 <wcrtomb@plt+0xda20>
  410704:	mov	x0, x20
  410708:	bl	40be68 <wcrtomb@plt+0x9128>
  41070c:	strb	wzr, [x20, #1048]
  410710:	adrp	x0, 40d000 <wcrtomb@plt+0xa2c0>
  410714:	add	x0, x0, #0x44c
  410718:	str	x0, [x20, #1040]
  41071c:	mov	w0, #0x1                   	// #1
  410720:	strb	w0, [x20, #192]
  410724:	ldrb	w1, [sp, #108]
  410728:	mov	x0, x20
  41072c:	bl	40d80c <wcrtomb@plt+0xaacc>
  410730:	b	410658 <wcrtomb@plt+0xd918>
  410734:	ldrb	w0, [x20, #1048]
  410738:	cbnz	w0, 41064c <wcrtomb@plt+0xd90c>
  41073c:	b	4106b8 <wcrtomb@plt+0xd978>
  410740:	stp	x21, x22, [sp, #32]
  410744:	stp	x25, x26, [sp, #64]
  410748:	stp	x27, x28, [sp, #80]
  41074c:	bl	4029e0 <abort@plt>
  410750:	str	xzr, [x19, #152]
  410754:	b	41068c <wcrtomb@plt+0xd94c>
  410758:	ldrb	w0, [x20, #1050]
  41075c:	cbz	w0, 410724 <wcrtomb@plt+0xd9e4>
  410760:	ldr	x0, [x20, #288]
  410764:	cbz	x0, 410704 <wcrtomb@plt+0xd9c4>
  410768:	bl	40f8dc <wcrtomb@plt+0xcb9c>
  41076c:	ldr	x0, [x20, #288]
  410770:	bl	402ae0 <free@plt>
  410774:	str	xzr, [x20, #288]
  410778:	b	410704 <wcrtomb@plt+0xd9c4>
  41077c:	stp	x29, x30, [sp, #-80]!
  410780:	mov	x29, sp
  410784:	stp	x19, x20, [sp, #16]
  410788:	stp	x21, x22, [sp, #32]
  41078c:	stp	x23, x24, [sp, #48]
  410790:	stp	x25, x26, [sp, #64]
  410794:	mov	x21, x0
  410798:	mov	x22, x1
  41079c:	mov	x19, x2
  4107a0:	mov	w20, w3
  4107a4:	mov	x2, #0x410                 	// #1040
  4107a8:	mov	w1, #0x0                   	// #0
  4107ac:	bl	4028d0 <memset@plt>
  4107b0:	ldrb	w2, [x22]
  4107b4:	adrp	x0, 40d000 <wcrtomb@plt+0xa2c0>
  4107b8:	add	x1, x0, #0x44c
  4107bc:	adrp	x0, 40c000 <wcrtomb@plt+0x92c0>
  4107c0:	add	x0, x0, #0xf34
  4107c4:	cmp	w2, #0x0
  4107c8:	csel	x0, x0, x1, ne  // ne = any
  4107cc:	str	x0, [x21, #1040]
  4107d0:	mov	x2, #0x504                 	// #1284
  4107d4:	mov	x1, x22
  4107d8:	add	x0, x21, #0x418
  4107dc:	bl	402650 <memcpy@plt>
  4107e0:	ldrb	w0, [x21, #1048]
  4107e4:	eor	w0, w0, #0x1
  4107e8:	strb	w0, [x21, #192]
  4107ec:	mov	x0, #0xffffffffffffffff    	// #-1
  4107f0:	str	x0, [x21, #24]
  4107f4:	mov	w0, #0x1                   	// #1
  4107f8:	strb	w0, [x21, #456]
  4107fc:	ubfx	w0, w19, #22, #1
  410800:	strb	w0, [x21, #457]
  410804:	and	w0, w20, #0x1
  410808:	strb	w0, [x21, #458]
  41080c:	tst	x20, #0x2
  410810:	mov	w0, #0xa                   	// #10
  410814:	csel	w0, w0, wzr, eq  // eq = none
  410818:	strb	w0, [x21, #459]
  41081c:	str	x19, [x21, #448]
  410820:	mov	w19, #0x0                   	// #0
  410824:	mov	w24, #0x1                   	// #1
  410828:	mov	w26, #0x2                   	// #2
  41082c:	add	x25, x21, #0x3d0
  410830:	adrp	x23, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410834:	add	x23, x23, #0xb78
  410838:	b	4108ac <wcrtomb@plt+0xdb6c>
  41083c:	ldrb	w0, [x21, #458]
  410840:	cbnz	w0, 4108bc <wcrtomb@plt+0xdb7c>
  410844:	and	w20, w19, #0xff
  410848:	add	x0, x21, w19, uxtb
  41084c:	mov	w1, #0x4                   	// #4
  410850:	strb	w1, [x0, #460]
  410854:	add	x1, x21, #0x3f0
  410858:	mov	w0, w20
  41085c:	bl	40b138 <wcrtomb@plt+0x83f8>
  410860:	b	410884 <wcrtomb@plt+0xdb44>
  410864:	mov	w1, w20
  410868:	mov	x0, x23
  41086c:	bl	402b20 <strchr@plt>
  410870:	cmp	x0, #0x0
  410874:	cset	w0, ne  // ne = any
  410878:	b	410898 <wcrtomb@plt+0xdb58>
  41087c:	add	x0, x21, w20, sxtw
  410880:	strb	w24, [x0, #460]
  410884:	ldrb	w0, [x21, #1050]
  410888:	cbz	w0, 410864 <wcrtomb@plt+0xdb24>
  41088c:	and	w0, w19, #0xc0
  410890:	cmp	w0, #0x80
  410894:	cset	w0, ne  // ne = any
  410898:	add	x20, x21, w20, sxtw
  41089c:	strb	w0, [x20, #716]
  4108a0:	add	w19, w19, #0x1
  4108a4:	cmp	w19, #0x100
  4108a8:	b.eq	410908 <wcrtomb@plt+0xdbc8>  // b.none
  4108ac:	and	w22, w19, #0xff
  4108b0:	ldrb	w0, [x21, #459]
  4108b4:	cmp	w0, w19, uxtb
  4108b8:	b.eq	41083c <wcrtomb@plt+0xdafc>  // b.none
  4108bc:	and	w20, w19, #0xff
  4108c0:	add	x0, x21, w19, uxtb #2
  4108c4:	ldr	w0, [x0, #1308]
  4108c8:	cmn	w0, #0x1
  4108cc:	b.eq	41087c <wcrtomb@plt+0xdb3c>  // b.none
  4108d0:	bl	402ab0 <__ctype_b_loc@plt>
  4108d4:	and	x1, x22, #0xff
  4108d8:	ldr	x0, [x0]
  4108dc:	ldrh	w0, [x0, x1, lsl #1]
  4108e0:	and	w0, w0, #0x8
  4108e4:	cmp	w22, #0x5f
  4108e8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4108ec:	b.eq	41087c <wcrtomb@plt+0xdb3c>  // b.none
  4108f0:	add	x0, x21, w20, sxtw
  4108f4:	strb	w26, [x0, #460]
  4108f8:	mov	x1, x25
  4108fc:	mov	w0, w20
  410900:	bl	40b138 <wcrtomb@plt+0x83f8>
  410904:	b	410884 <wcrtomb@plt+0xdb44>
  410908:	ldp	x19, x20, [sp, #16]
  41090c:	ldp	x21, x22, [sp, #32]
  410910:	ldp	x23, x24, [sp, #48]
  410914:	ldp	x25, x26, [sp, #64]
  410918:	ldp	x29, x30, [sp], #80
  41091c:	ret
  410920:	stp	x29, x30, [sp, #-32]!
  410924:	mov	x29, sp
  410928:	stp	x19, x20, [sp, #16]
  41092c:	mov	x19, x0
  410930:	mov	x20, x1
  410934:	mov	x2, #0x1c0                 	// #448
  410938:	mov	w1, #0x0                   	// #0
  41093c:	bl	4028d0 <memset@plt>
  410940:	mov	x0, #0xffffffffffffffff    	// #-1
  410944:	str	x0, [x19, #24]
  410948:	ldrb	w0, [x20, #192]
  41094c:	strb	w0, [x19, #192]
  410950:	mov	x2, #0x250                 	// #592
  410954:	add	x1, x20, #0x1c0
  410958:	add	x0, x19, #0x1c0
  41095c:	bl	402650 <memcpy@plt>
  410960:	ldr	x0, [x20, #1040]
  410964:	str	x0, [x19, #1040]
  410968:	mov	x2, #0x504                 	// #1284
  41096c:	add	x1, x20, #0x418
  410970:	add	x0, x19, #0x418
  410974:	bl	402650 <memcpy@plt>
  410978:	ldp	x19, x20, [sp, #16]
  41097c:	ldp	x29, x30, [sp], #32
  410980:	ret
  410984:	stp	x29, x30, [sp, #-80]!
  410988:	mov	x29, sp
  41098c:	stp	x19, x20, [sp, #16]
  410990:	stp	x21, x22, [sp, #32]
  410994:	mov	x20, x0
  410998:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  41099c:	cmp	x0, #0x1
  4109a0:	cset	w1, hi  // hi = pmore
  4109a4:	strb	w1, [x20]
  4109a8:	mov	w1, #0x0                   	// #0
  4109ac:	b.hi	4109f4 <wcrtomb@plt+0xdcb4>  // b.pmore
  4109b0:	mov	w19, #0x0                   	// #0
  4109b4:	and	w0, w19, #0xff
  4109b8:	strb	w0, [sp, #72]
  4109bc:	strb	wzr, [sp, #73]
  4109c0:	add	w0, w0, #0x1
  4109c4:	strb	w0, [sp, #64]
  4109c8:	strb	wzr, [sp, #65]
  4109cc:	add	x1, sp, #0x40
  4109d0:	add	x0, sp, #0x48
  4109d4:	bl	402c40 <strcoll@plt>
  4109d8:	tbz	w0, #31, 4109f0 <wcrtomb@plt+0xdcb0>
  4109dc:	add	w19, w19, #0x1
  4109e0:	cmp	w19, #0xff
  4109e4:	b.ne	4109b4 <wcrtomb@plt+0xdc74>  // b.any
  4109e8:	mov	w1, #0x1                   	// #1
  4109ec:	b	4109f4 <wcrtomb@plt+0xdcb4>
  4109f0:	mov	w1, #0x0                   	// #0
  4109f4:	strb	w1, [x20, #1]
  4109f8:	str	xzr, [sp, #56]
  4109fc:	add	x3, sp, #0x38
  410a00:	mov	x2, #0x2                   	// #2
  410a04:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410a08:	add	x1, x1, #0xf30
  410a0c:	add	x0, sp, #0x34
  410a10:	bl	412f3c <wcrtomb@plt+0x101fc>
  410a14:	mov	w1, #0x0                   	// #0
  410a18:	cmp	x0, #0x2
  410a1c:	b.eq	410a8c <wcrtomb@plt+0xdd4c>  // b.none
  410a20:	strb	w1, [x20, #2]
  410a24:	mov	w19, #0x0                   	// #0
  410a28:	mov	x21, #0x1                   	// #1
  410a2c:	mov	w22, #0xffffffff            	// #-1
  410a30:	strb	w19, [sp, #51]
  410a34:	str	xzr, [sp, #56]
  410a38:	add	x3, sp, #0x38
  410a3c:	mov	x2, x21
  410a40:	add	x1, sp, #0x33
  410a44:	add	x0, sp, #0x34
  410a48:	bl	412f3c <wcrtomb@plt+0x101fc>
  410a4c:	add	x1, x20, w19, uxtb
  410a50:	cmp	x0, #0x0
  410a54:	csel	x2, x0, x21, ne  // ne = any
  410a58:	strb	w2, [x1, #3]
  410a5c:	cmp	x0, #0x2
  410a60:	ldr	w1, [sp, #52]
  410a64:	csel	w1, w1, w22, cc  // cc = lo, ul, last
  410a68:	add	x0, x20, w19, uxtb #2
  410a6c:	str	w1, [x0, #260]
  410a70:	add	w19, w19, #0x1
  410a74:	cmp	w19, #0x100
  410a78:	b.ne	410a30 <wcrtomb@plt+0xdcf0>  // b.any
  410a7c:	ldp	x19, x20, [sp, #16]
  410a80:	ldp	x21, x22, [sp, #32]
  410a84:	ldp	x29, x30, [sp], #80
  410a88:	ret
  410a8c:	ldr	w0, [sp, #52]
  410a90:	cmp	w0, #0x100
  410a94:	cset	w1, eq  // eq = none
  410a98:	b	410a20 <wcrtomb@plt+0xdce0>
  410a9c:	stp	x29, x30, [sp, #-80]!
  410aa0:	mov	x29, sp
  410aa4:	stp	x19, x20, [sp, #16]
  410aa8:	stp	x21, x22, [sp, #32]
  410aac:	stp	x23, x24, [sp, #48]
  410ab0:	stp	x25, x26, [sp, #64]
  410ab4:	mov	w23, w0
  410ab8:	mov	x26, x1
  410abc:	bl	402c70 <towupper@plt>
  410ac0:	mov	w21, w0
  410ac4:	bl	402cf0 <towlower@plt>
  410ac8:	mov	w22, w0
  410acc:	mov	w25, #0x0                   	// #0
  410ad0:	cmp	w23, w21
  410ad4:	b.eq	410ae0 <wcrtomb@plt+0xdda0>  // b.none
  410ad8:	str	w21, [x26]
  410adc:	mov	w25, #0x1                   	// #1
  410ae0:	cmp	w21, w22
  410ae4:	ccmp	w23, w22, #0x4, ne  // ne = any
  410ae8:	b.eq	410afc <wcrtomb@plt+0xddbc>  // b.none
  410aec:	mov	w0, w22
  410af0:	bl	402c70 <towupper@plt>
  410af4:	cmp	w0, w21
  410af8:	b.eq	410b0c <wcrtomb@plt+0xddcc>  // b.none
  410afc:	adrp	x20, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410b00:	add	x20, x20, #0xf38
  410b04:	add	x24, x20, #0x26
  410b08:	b	410b24 <wcrtomb@plt+0xdde4>
  410b0c:	str	w22, [x26, w25, sxtw #2]
  410b10:	add	w25, w25, #0x1
  410b14:	b	410afc <wcrtomb@plt+0xddbc>
  410b18:	add	x20, x20, #0x2
  410b1c:	cmp	x24, x20
  410b20:	b.eq	410b54 <wcrtomb@plt+0xde14>  // b.none
  410b24:	ldrsh	w19, [x20]
  410b28:	cmp	w22, w19
  410b2c:	ccmp	w21, w19, #0x4, ne  // ne = any
  410b30:	ccmp	w23, w19, #0x4, ne  // ne = any
  410b34:	b.eq	410b18 <wcrtomb@plt+0xddd8>  // b.none
  410b38:	mov	w0, w19
  410b3c:	bl	402c70 <towupper@plt>
  410b40:	cmp	w0, w21
  410b44:	b.ne	410b18 <wcrtomb@plt+0xddd8>  // b.any
  410b48:	str	w19, [x26, w25, sxtw #2]
  410b4c:	add	w25, w25, #0x1
  410b50:	b	410b18 <wcrtomb@plt+0xddd8>
  410b54:	mov	w0, w25
  410b58:	ldp	x19, x20, [sp, #16]
  410b5c:	ldp	x21, x22, [sp, #32]
  410b60:	ldp	x23, x24, [sp, #48]
  410b64:	ldp	x25, x26, [sp, #64]
  410b68:	ldp	x29, x30, [sp], #80
  410b6c:	ret
  410b70:	stp	x29, x30, [sp, #-16]!
  410b74:	mov	x29, sp
  410b78:	mov	w0, #0xe                   	// #14
  410b7c:	bl	4027c0 <nl_langinfo@plt>
  410b80:	cbz	x0, 410ba0 <wcrtomb@plt+0xde60>
  410b84:	ldrb	w2, [x0]
  410b88:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410b8c:	add	x1, x1, #0xf60
  410b90:	cmp	w2, #0x0
  410b94:	csel	x0, x1, x0, eq  // eq = none
  410b98:	ldp	x29, x30, [sp], #16
  410b9c:	ret
  410ba0:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410ba4:	add	x0, x0, #0xf60
  410ba8:	b	410b98 <wcrtomb@plt+0xde58>
  410bac:	stp	x29, x30, [sp, #-48]!
  410bb0:	mov	x29, sp
  410bb4:	cbz	x0, 410c2c <wcrtomb@plt+0xdeec>
  410bb8:	stp	x19, x20, [sp, #16]
  410bbc:	mov	x19, x0
  410bc0:	mov	w1, #0x2f                  	// #47
  410bc4:	bl	4029b0 <strrchr@plt>
  410bc8:	mov	x20, x0
  410bcc:	cbz	x0, 410c60 <wcrtomb@plt+0xdf20>
  410bd0:	str	x21, [sp, #32]
  410bd4:	add	x21, x0, #0x1
  410bd8:	sub	x0, x21, x19
  410bdc:	cmp	x0, #0x6
  410be0:	b.le	410c54 <wcrtomb@plt+0xdf14>
  410be4:	mov	x2, #0x7                   	// #7
  410be8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410bec:	add	x1, x1, #0xfa0
  410bf0:	sub	x0, x20, #0x6
  410bf4:	bl	402860 <strncmp@plt>
  410bf8:	cbnz	w0, 410c5c <wcrtomb@plt+0xdf1c>
  410bfc:	mov	x2, #0x3                   	// #3
  410c00:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410c04:	add	x1, x1, #0xfa8
  410c08:	mov	x0, x21
  410c0c:	bl	402860 <strncmp@plt>
  410c10:	mov	x19, x21
  410c14:	cbnz	w0, 410c7c <wcrtomb@plt+0xdf3c>
  410c18:	add	x19, x20, #0x4
  410c1c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  410c20:	str	x19, [x0, #1304]
  410c24:	ldr	x21, [sp, #32]
  410c28:	b	410c60 <wcrtomb@plt+0xdf20>
  410c2c:	stp	x19, x20, [sp, #16]
  410c30:	str	x21, [sp, #32]
  410c34:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  410c38:	ldr	x3, [x0, #1264]
  410c3c:	mov	x2, #0x37                  	// #55
  410c40:	mov	x1, #0x1                   	// #1
  410c44:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410c48:	add	x0, x0, #0xf68
  410c4c:	bl	402b50 <fwrite@plt>
  410c50:	bl	4029e0 <abort@plt>
  410c54:	ldr	x21, [sp, #32]
  410c58:	b	410c60 <wcrtomb@plt+0xdf20>
  410c5c:	ldr	x21, [sp, #32]
  410c60:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  410c64:	str	x19, [x0, #1936]
  410c68:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  410c6c:	str	x19, [x0, #1256]
  410c70:	ldp	x19, x20, [sp, #16]
  410c74:	ldp	x29, x30, [sp], #48
  410c78:	ret
  410c7c:	ldr	x21, [sp, #32]
  410c80:	b	410c60 <wcrtomb@plt+0xdf20>
  410c84:	stp	x29, x30, [sp, #-64]!
  410c88:	mov	x29, sp
  410c8c:	stp	x19, x20, [sp, #16]
  410c90:	mov	x19, x2
  410c94:	mov	w20, w3
  410c98:	mov	w2, w4
  410c9c:	add	x3, sp, #0x20
  410ca0:	bl	41fc2c <_obstack_memory_used@@Base+0xc8fc>
  410ca4:	cbnz	w0, 410cd4 <wcrtomb@plt+0xdf94>
  410ca8:	mov	w2, w20
  410cac:	mov	x1, x19
  410cb0:	add	x0, sp, #0x20
  410cb4:	bl	41fe8c <_obstack_memory_used@@Base+0xcb5c>
  410cb8:	mov	w19, w0
  410cbc:	add	x0, sp, #0x20
  410cc0:	bl	41fbf8 <_obstack_memory_used@@Base+0xc8c8>
  410cc4:	mov	w0, w19
  410cc8:	ldp	x19, x20, [sp, #16]
  410ccc:	ldp	x29, x30, [sp], #64
  410cd0:	ret
  410cd4:	mov	w19, #0xfffffffe            	// #-2
  410cd8:	b	410cc4 <wcrtomb@plt+0xdf84>
  410cdc:	stp	xzr, xzr, [x8]
  410ce0:	stp	xzr, xzr, [x8, #16]
  410ce4:	stp	xzr, xzr, [x8, #32]
  410ce8:	str	xzr, [x8, #48]
  410cec:	cmp	w0, #0xa
  410cf0:	b.eq	410cfc <wcrtomb@plt+0xdfbc>  // b.none
  410cf4:	str	w0, [x8]
  410cf8:	ret
  410cfc:	stp	x29, x30, [sp, #-16]!
  410d00:	mov	x29, sp
  410d04:	bl	4029e0 <abort@plt>
  410d08:	stp	x29, x30, [sp, #-48]!
  410d0c:	mov	x29, sp
  410d10:	stp	x19, x20, [sp, #16]
  410d14:	str	x21, [sp, #32]
  410d18:	mov	x20, x0
  410d1c:	mov	w21, w1
  410d20:	mov	w2, #0x5                   	// #5
  410d24:	mov	x1, x0
  410d28:	mov	x0, #0x0                   	// #0
  410d2c:	bl	402c20 <dcgettext@plt>
  410d30:	mov	x19, x0
  410d34:	cmp	x20, x0
  410d38:	b.eq	410d50 <wcrtomb@plt+0xe010>  // b.none
  410d3c:	mov	x0, x19
  410d40:	ldp	x19, x20, [sp, #16]
  410d44:	ldr	x21, [sp, #32]
  410d48:	ldp	x29, x30, [sp], #48
  410d4c:	ret
  410d50:	bl	410b70 <wcrtomb@plt+0xde30>
  410d54:	ldrb	w1, [x0]
  410d58:	and	w1, w1, #0xffffffdf
  410d5c:	cmp	w1, #0x55
  410d60:	b.ne	410de0 <wcrtomb@plt+0xe0a0>  // b.any
  410d64:	ldrb	w1, [x0, #1]
  410d68:	and	w1, w1, #0xffffffdf
  410d6c:	cmp	w1, #0x54
  410d70:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410d74:	ldrb	w1, [x0, #2]
  410d78:	and	w1, w1, #0xffffffdf
  410d7c:	cmp	w1, #0x46
  410d80:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410d84:	ldrb	w1, [x0, #3]
  410d88:	cmp	w1, #0x2d
  410d8c:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410d90:	ldrb	w1, [x0, #4]
  410d94:	cmp	w1, #0x38
  410d98:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410d9c:	ldrb	w0, [x0, #5]
  410da0:	cbz	w0, 410dc0 <wcrtomb@plt+0xe080>
  410da4:	adrp	x19, 420000 <_obstack_memory_used@@Base+0xccd0>
  410da8:	add	x0, x19, #0x2d8
  410dac:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410db0:	add	x19, x19, #0xfb0
  410db4:	cmp	w21, #0x9
  410db8:	csel	x19, x19, x0, eq  // eq = none
  410dbc:	b	410d3c <wcrtomb@plt+0xdffc>
  410dc0:	ldrb	w1, [x19]
  410dc4:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410dc8:	add	x0, x19, #0xfb8
  410dcc:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410dd0:	add	x19, x19, #0xfd0
  410dd4:	cmp	w1, #0x60
  410dd8:	csel	x19, x19, x0, eq  // eq = none
  410ddc:	b	410d3c <wcrtomb@plt+0xdffc>
  410de0:	cmp	w1, #0x47
  410de4:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410de8:	ldrb	w1, [x0, #1]
  410dec:	and	w1, w1, #0xffffffdf
  410df0:	cmp	w1, #0x42
  410df4:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410df8:	ldrb	w1, [x0, #2]
  410dfc:	cmp	w1, #0x31
  410e00:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410e04:	ldrb	w1, [x0, #3]
  410e08:	cmp	w1, #0x38
  410e0c:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410e10:	ldrb	w1, [x0, #4]
  410e14:	cmp	w1, #0x30
  410e18:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410e1c:	ldrb	w1, [x0, #5]
  410e20:	cmp	w1, #0x33
  410e24:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410e28:	ldrb	w1, [x0, #6]
  410e2c:	cmp	w1, #0x30
  410e30:	b.ne	410da4 <wcrtomb@plt+0xe064>  // b.any
  410e34:	ldrb	w0, [x0, #7]
  410e38:	cbnz	w0, 410da4 <wcrtomb@plt+0xe064>
  410e3c:	ldrb	w1, [x19]
  410e40:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410e44:	add	x0, x19, #0xfc0
  410e48:	adrp	x19, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410e4c:	add	x19, x19, #0xfc8
  410e50:	cmp	w1, #0x60
  410e54:	csel	x19, x19, x0, eq  // eq = none
  410e58:	b	410d3c <wcrtomb@plt+0xdffc>
  410e5c:	sub	sp, sp, #0xf0
  410e60:	stp	x29, x30, [sp, #16]
  410e64:	add	x29, sp, #0x10
  410e68:	stp	x19, x20, [sp, #32]
  410e6c:	stp	x21, x22, [sp, #48]
  410e70:	stp	x23, x24, [sp, #64]
  410e74:	stp	x25, x26, [sp, #80]
  410e78:	stp	x27, x28, [sp, #96]
  410e7c:	mov	x28, x0
  410e80:	mov	x26, x1
  410e84:	str	x2, [sp, #136]
  410e88:	mov	x24, x3
  410e8c:	mov	w25, w4
  410e90:	mov	w19, w5
  410e94:	str	w5, [sp, #184]
  410e98:	str	x6, [sp, #152]
  410e9c:	str	x7, [sp, #200]
  410ea0:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  410ea4:	str	x0, [sp, #168]
  410ea8:	mov	x0, x19
  410eac:	ubfx	x0, x0, #1, #1
  410eb0:	str	x0, [sp, #112]
  410eb4:	mov	w0, #0x1                   	// #1
  410eb8:	str	w0, [sp, #128]
  410ebc:	str	wzr, [sp, #180]
  410ec0:	str	wzr, [sp, #124]
  410ec4:	str	wzr, [sp, #132]
  410ec8:	str	xzr, [sp, #144]
  410ecc:	str	xzr, [sp, #160]
  410ed0:	str	xzr, [sp, #192]
  410ed4:	mov	w23, w25
  410ed8:	mov	x25, x24
  410edc:	cmp	w23, #0x4
  410ee0:	b.eq	411050 <wcrtomb@plt+0xe310>  // b.none
  410ee4:	b.ls	410f34 <wcrtomb@plt+0xe1f4>  // b.plast
  410ee8:	cmp	w23, #0x7
  410eec:	b.eq	4110c0 <wcrtomb@plt+0xe380>  // b.none
  410ef0:	b.ls	410f80 <wcrtomb@plt+0xe240>  // b.plast
  410ef4:	sub	w0, w23, #0x8
  410ef8:	cmp	w0, #0x2
  410efc:	b.hi	4110b0 <wcrtomb@plt+0xe370>  // b.pmore
  410f00:	cmp	w23, #0xa
  410f04:	b.ne	410ff4 <wcrtomb@plt+0xe2b4>  // b.any
  410f08:	mov	x27, #0x0                   	// #0
  410f0c:	ldr	w0, [sp, #112]
  410f10:	cbz	w0, 411020 <wcrtomb@plt+0xe2e0>
  410f14:	ldr	x0, [sp, #240]
  410f18:	bl	402690 <strlen@plt>
  410f1c:	str	x0, [sp, #144]
  410f20:	ldr	x0, [sp, #240]
  410f24:	str	x0, [sp, #160]
  410f28:	mov	w0, #0x1                   	// #1
  410f2c:	str	w0, [sp, #132]
  410f30:	b	410fb8 <wcrtomb@plt+0xe278>
  410f34:	cmp	w23, #0x2
  410f38:	b.eq	41108c <wcrtomb@plt+0xe34c>  // b.none
  410f3c:	b.ls	410f4c <wcrtomb@plt+0xe20c>  // b.plast
  410f40:	mov	w0, #0x1                   	// #1
  410f44:	str	w0, [sp, #132]
  410f48:	b	410f58 <wcrtomb@plt+0xe218>
  410f4c:	cbz	w23, 4110b4 <wcrtomb@plt+0xe374>
  410f50:	cmp	w23, #0x1
  410f54:	b.ne	4110b0 <wcrtomb@plt+0xe370>  // b.any
  410f58:	mov	w0, #0x1                   	// #1
  410f5c:	str	w0, [sp, #112]
  410f60:	mov	x0, #0x1                   	// #1
  410f64:	str	x0, [sp, #144]
  410f68:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  410f6c:	add	x0, x0, #0x2d8
  410f70:	str	x0, [sp, #160]
  410f74:	mov	x27, #0x0                   	// #0
  410f78:	mov	w23, #0x2                   	// #2
  410f7c:	b	410fb8 <wcrtomb@plt+0xe278>
  410f80:	cmp	w23, #0x5
  410f84:	b.eq	410fc0 <wcrtomb@plt+0xe280>  // b.none
  410f88:	cmp	w23, #0x6
  410f8c:	b.ne	4110b0 <wcrtomb@plt+0xe370>  // b.any
  410f90:	mov	w0, #0x1                   	// #1
  410f94:	str	w0, [sp, #112]
  410f98:	str	w0, [sp, #132]
  410f9c:	mov	x0, #0x1                   	// #1
  410fa0:	str	x0, [sp, #144]
  410fa4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410fa8:	add	x0, x0, #0xfb0
  410fac:	str	x0, [sp, #160]
  410fb0:	mov	x27, #0x0                   	// #0
  410fb4:	mov	w23, #0x5                   	// #5
  410fb8:	mov	x24, #0x0                   	// #0
  410fbc:	b	411aac <wcrtomb@plt+0xed6c>
  410fc0:	ldr	w0, [sp, #112]
  410fc4:	cbnz	w0, 4110d4 <wcrtomb@plt+0xe394>
  410fc8:	cbz	x26, 4110f8 <wcrtomb@plt+0xe3b8>
  410fcc:	mov	w0, #0x22                  	// #34
  410fd0:	strb	w0, [x28]
  410fd4:	mov	w0, #0x1                   	// #1
  410fd8:	str	w0, [sp, #132]
  410fdc:	mov	x27, #0x1                   	// #1
  410fe0:	str	x27, [sp, #144]
  410fe4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410fe8:	add	x0, x0, #0xfb0
  410fec:	str	x0, [sp, #160]
  410ff0:	b	410fb8 <wcrtomb@plt+0xe278>
  410ff4:	mov	w1, w23
  410ff8:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  410ffc:	add	x0, x0, #0xfd8
  411000:	bl	410d08 <wcrtomb@plt+0xdfc8>
  411004:	str	x0, [sp, #200]
  411008:	mov	w1, w23
  41100c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  411010:	add	x0, x0, #0x2d8
  411014:	bl	410d08 <wcrtomb@plt+0xdfc8>
  411018:	str	x0, [sp, #240]
  41101c:	b	410f08 <wcrtomb@plt+0xe1c8>
  411020:	ldr	x1, [sp, #200]
  411024:	ldrb	w0, [x1]
  411028:	cbnz	w0, 411040 <wcrtomb@plt+0xe300>
  41102c:	mov	x27, #0x0                   	// #0
  411030:	b	410f14 <wcrtomb@plt+0xe1d4>
  411034:	add	x27, x27, #0x1
  411038:	ldrb	w0, [x1, x27]
  41103c:	cbz	w0, 410f14 <wcrtomb@plt+0xe1d4>
  411040:	cmp	x26, x27
  411044:	b.ls	411034 <wcrtomb@plt+0xe2f4>  // b.plast
  411048:	strb	w0, [x28, x27]
  41104c:	b	411034 <wcrtomb@plt+0xe2f4>
  411050:	ldr	w0, [sp, #112]
  411054:	cbnz	w0, 410f58 <wcrtomb@plt+0xe218>
  411058:	mov	w0, #0x1                   	// #1
  41105c:	str	w0, [sp, #132]
  411060:	cbz	x26, 411118 <wcrtomb@plt+0xe3d8>
  411064:	mov	w0, #0x27                  	// #39
  411068:	strb	w0, [x28]
  41106c:	str	wzr, [sp, #112]
  411070:	mov	x27, #0x1                   	// #1
  411074:	str	x27, [sp, #144]
  411078:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  41107c:	add	x0, x0, #0x2d8
  411080:	str	x0, [sp, #160]
  411084:	mov	w23, #0x2                   	// #2
  411088:	b	410fb8 <wcrtomb@plt+0xe278>
  41108c:	ldr	w0, [sp, #112]
  411090:	cbz	w0, 411060 <wcrtomb@plt+0xe320>
  411094:	mov	x0, #0x1                   	// #1
  411098:	str	x0, [sp, #144]
  41109c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  4110a0:	add	x0, x0, #0x2d8
  4110a4:	str	x0, [sp, #160]
  4110a8:	mov	x27, #0x0                   	// #0
  4110ac:	b	410fb8 <wcrtomb@plt+0xe278>
  4110b0:	bl	4029e0 <abort@plt>
  4110b4:	str	wzr, [sp, #112]
  4110b8:	mov	x27, #0x0                   	// #0
  4110bc:	b	410fb8 <wcrtomb@plt+0xe278>
  4110c0:	str	wzr, [sp, #112]
  4110c4:	mov	w0, #0x1                   	// #1
  4110c8:	str	w0, [sp, #132]
  4110cc:	mov	x27, #0x0                   	// #0
  4110d0:	b	410fb8 <wcrtomb@plt+0xe278>
  4110d4:	ldr	w0, [sp, #112]
  4110d8:	str	w0, [sp, #132]
  4110dc:	mov	x0, #0x1                   	// #1
  4110e0:	str	x0, [sp, #144]
  4110e4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  4110e8:	add	x0, x0, #0xfb0
  4110ec:	str	x0, [sp, #160]
  4110f0:	mov	x27, #0x0                   	// #0
  4110f4:	b	410fb8 <wcrtomb@plt+0xe278>
  4110f8:	mov	w0, #0x1                   	// #1
  4110fc:	str	w0, [sp, #132]
  411100:	mov	x27, #0x1                   	// #1
  411104:	str	x27, [sp, #144]
  411108:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xdcd0>
  41110c:	add	x0, x0, #0xfb0
  411110:	str	x0, [sp, #160]
  411114:	b	410fb8 <wcrtomb@plt+0xe278>
  411118:	str	wzr, [sp, #112]
  41111c:	mov	x27, #0x1                   	// #1
  411120:	str	x27, [sp, #144]
  411124:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xccd0>
  411128:	add	x0, x0, #0x2d8
  41112c:	str	x0, [sp, #160]
  411130:	mov	w23, #0x2                   	// #2
  411134:	b	410fb8 <wcrtomb@plt+0xe278>
  411138:	ldr	x0, [sp, #144]
  41113c:	add	x20, x24, x0
  411140:	cmp	x0, #0x1
  411144:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  411148:	b.ne	411158 <wcrtomb@plt+0xe418>  // b.any
  41114c:	ldr	x0, [sp, #136]
  411150:	bl	402690 <strlen@plt>
  411154:	mov	x25, x0
  411158:	cmp	x20, x25
  41115c:	b.hi	411d88 <wcrtomb@plt+0xf048>  // b.pmore
  411160:	ldr	x0, [sp, #136]
  411164:	add	x20, x0, x24
  411168:	ldr	x2, [sp, #144]
  41116c:	ldr	x1, [sp, #160]
  411170:	mov	x0, x20
  411174:	bl	402a60 <memcmp@plt>
  411178:	cbnz	w0, 411d88 <wcrtomb@plt+0xf048>
  41117c:	ldr	w0, [sp, #112]
  411180:	cbnz	w0, 4111a8 <wcrtomb@plt+0xe468>
  411184:	ldrb	w20, [x20]
  411188:	cmp	w20, #0x7e
  41118c:	b.hi	411674 <wcrtomb@plt+0xe934>  // b.pmore
  411190:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xecd0>
  411194:	add	x0, x0, #0x48
  411198:	ldrh	w0, [x0, w20, uxtw #1]
  41119c:	adr	x1, 4111a8 <wcrtomb@plt+0xe468>
  4111a0:	add	x0, x1, w0, sxth #2
  4111a4:	br	x0
  4111a8:	mov	x24, x25
  4111ac:	mov	w25, w23
  4111b0:	b	411d10 <wcrtomb@plt+0xefd0>
  4111b4:	ldr	w0, [sp, #132]
  4111b8:	cbnz	w0, 4111d4 <wcrtomb@plt+0xe494>
  4111bc:	ldr	x0, [sp, #184]
  4111c0:	tbnz	w0, #0, 411aa8 <wcrtomb@plt+0xed68>
  4111c4:	ldr	w0, [sp, #132]
  4111c8:	mov	w22, w0
  4111cc:	mov	w19, w0
  4111d0:	b	4119e8 <wcrtomb@plt+0xeca8>
  4111d4:	ldr	w0, [sp, #112]
  4111d8:	cbnz	w0, 411cc4 <wcrtomb@plt+0xef84>
  4111dc:	mov	w22, w0
  4111e0:	cmp	w23, #0x2
  4111e4:	cset	w1, eq  // eq = none
  4111e8:	ldr	w0, [sp, #124]
  4111ec:	eor	w0, w0, #0x1
  4111f0:	ands	w0, w1, w0
  4111f4:	b.eq	411258 <wcrtomb@plt+0xe518>  // b.none
  4111f8:	cmp	x26, x27
  4111fc:	b.ls	411208 <wcrtomb@plt+0xe4c8>  // b.plast
  411200:	mov	w1, #0x27                  	// #39
  411204:	strb	w1, [x28, x27]
  411208:	add	x1, x27, #0x1
  41120c:	cmp	x26, x1
  411210:	b.ls	41121c <wcrtomb@plt+0xe4dc>  // b.plast
  411214:	mov	w2, #0x24                  	// #36
  411218:	strb	w2, [x28, x1]
  41121c:	add	x1, x27, #0x2
  411220:	cmp	x26, x1
  411224:	b.ls	411230 <wcrtomb@plt+0xe4f0>  // b.plast
  411228:	mov	w2, #0x27                  	// #39
  41122c:	strb	w2, [x28, x1]
  411230:	add	x1, x27, #0x3
  411234:	cmp	x26, x1
  411238:	b.ls	411d74 <wcrtomb@plt+0xf034>  // b.plast
  41123c:	mov	w2, #0x5c                  	// #92
  411240:	strb	w2, [x28, x1]
  411244:	add	x27, x27, #0x4
  411248:	str	w0, [sp, #124]
  41124c:	mov	w19, #0x0                   	// #0
  411250:	mov	w20, #0x30                  	// #48
  411254:	b	411a10 <wcrtomb@plt+0xecd0>
  411258:	cmp	x26, x27
  41125c:	b.hi	41127c <wcrtomb@plt+0xe53c>  // b.pmore
  411260:	add	x2, x27, #0x1
  411264:	cbnz	w21, 41128c <wcrtomb@plt+0xe54c>
  411268:	mov	w0, w19
  41126c:	mov	w19, w21
  411270:	mov	x27, x2
  411274:	mov	w20, #0x30                  	// #48
  411278:	b	4119e8 <wcrtomb@plt+0xeca8>
  41127c:	mov	w1, #0x5c                  	// #92
  411280:	strb	w1, [x28, x27]
  411284:	add	x2, x27, #0x1
  411288:	cbz	w21, 4112c8 <wcrtomb@plt+0xe588>
  41128c:	add	x1, x24, #0x1
  411290:	cmp	x1, x25
  411294:	b.cs	4112b0 <wcrtomb@plt+0xe570>  // b.hs, b.nlast
  411298:	ldr	x3, [sp, #136]
  41129c:	ldrb	w1, [x3, x1]
  4112a0:	sub	w1, w1, #0x30
  4112a4:	and	w1, w1, #0xff
  4112a8:	cmp	w1, #0x9
  4112ac:	b.ls	4112dc <wcrtomb@plt+0xe59c>  // b.plast
  4112b0:	mov	w1, w0
  4112b4:	mov	w0, w19
  4112b8:	mov	w19, w1
  4112bc:	mov	x27, x2
  4112c0:	mov	w20, #0x30                  	// #48
  4112c4:	b	4119f8 <wcrtomb@plt+0xecb8>
  4112c8:	mov	w0, w19
  4112cc:	mov	w19, w21
  4112d0:	mov	x27, x2
  4112d4:	mov	w20, #0x30                  	// #48
  4112d8:	b	411a10 <wcrtomb@plt+0xecd0>
  4112dc:	cmp	x26, x2
  4112e0:	b.ls	4112ec <wcrtomb@plt+0xe5ac>  // b.plast
  4112e4:	mov	w1, #0x30                  	// #48
  4112e8:	strb	w1, [x28, x2]
  4112ec:	add	x1, x27, #0x2
  4112f0:	cmp	x26, x1
  4112f4:	b.ls	411300 <wcrtomb@plt+0xe5c0>  // b.plast
  4112f8:	mov	w2, #0x30                  	// #48
  4112fc:	strb	w2, [x28, x1]
  411300:	add	x2, x27, #0x3
  411304:	b	4112b0 <wcrtomb@plt+0xe570>
  411308:	mov	w22, #0x0                   	// #0
  41130c:	cmp	w23, #0x2
  411310:	b.eq	41132c <wcrtomb@plt+0xe5ec>  // b.none
  411314:	cmp	w23, #0x5
  411318:	b.eq	411340 <wcrtomb@plt+0xe600>  // b.none
  41131c:	mov	w19, #0x0                   	// #0
  411320:	mov	w0, #0x0                   	// #0
  411324:	mov	w20, #0x3f                  	// #63
  411328:	b	4119e8 <wcrtomb@plt+0xeca8>
  41132c:	ldr	w0, [sp, #112]
  411330:	cbnz	w0, 411cd0 <wcrtomb@plt+0xef90>
  411334:	mov	w19, w0
  411338:	mov	w20, #0x3f                  	// #63
  41133c:	b	41165c <wcrtomb@plt+0xe91c>
  411340:	ldr	x0, [sp, #184]
  411344:	tbz	w0, #2, 411b10 <wcrtomb@plt+0xedd0>
  411348:	add	x4, x24, #0x2
  41134c:	cmp	x4, x25
  411350:	b.cs	411b20 <wcrtomb@plt+0xede0>  // b.hs, b.nlast
  411354:	ldr	x0, [sp, #136]
  411358:	add	x0, x0, x24
  41135c:	ldrb	w20, [x0, #1]
  411360:	cmp	w20, #0x3f
  411364:	b.eq	411378 <wcrtomb@plt+0xe638>  // b.none
  411368:	mov	w19, #0x0                   	// #0
  41136c:	mov	w0, #0x0                   	// #0
  411370:	mov	w20, #0x3f                  	// #63
  411374:	b	4119e8 <wcrtomb@plt+0xeca8>
  411378:	ldr	x0, [sp, #136]
  41137c:	ldrb	w3, [x0, x4]
  411380:	cmp	w3, #0x3e
  411384:	b.hi	411b30 <wcrtomb@plt+0xedf0>  // b.pmore
  411388:	mov	x1, #0x1                   	// #1
  41138c:	lsl	x1, x1, x3
  411390:	mov	w19, #0x0                   	// #0
  411394:	mov	w0, #0x0                   	// #0
  411398:	mov	x2, #0xa38200000000        	// #179778741075968
  41139c:	movk	x2, #0x7000, lsl #48
  4113a0:	tst	x1, x2
  4113a4:	b.eq	4119e8 <wcrtomb@plt+0xeca8>  // b.none
  4113a8:	ldr	w0, [sp, #112]
  4113ac:	cbnz	w0, 411d68 <wcrtomb@plt+0xf028>
  4113b0:	cmp	x26, x27
  4113b4:	b.ls	4113c0 <wcrtomb@plt+0xe680>  // b.plast
  4113b8:	mov	w0, #0x3f                  	// #63
  4113bc:	strb	w0, [x28, x27]
  4113c0:	add	x0, x27, #0x1
  4113c4:	cmp	x26, x0
  4113c8:	b.ls	4113d4 <wcrtomb@plt+0xe694>  // b.plast
  4113cc:	mov	w1, #0x22                  	// #34
  4113d0:	strb	w1, [x28, x0]
  4113d4:	add	x0, x27, #0x2
  4113d8:	cmp	x26, x0
  4113dc:	b.ls	4113e8 <wcrtomb@plt+0xe6a8>  // b.plast
  4113e0:	mov	w1, #0x22                  	// #34
  4113e4:	strb	w1, [x28, x0]
  4113e8:	add	x0, x27, #0x3
  4113ec:	cmp	x26, x0
  4113f0:	b.ls	4113fc <wcrtomb@plt+0xe6bc>  // b.plast
  4113f4:	mov	w1, #0x3f                  	// #63
  4113f8:	strb	w1, [x28, x0]
  4113fc:	add	x27, x27, #0x4
  411400:	ldr	w0, [sp, #112]
  411404:	mov	w19, w0
  411408:	mov	w20, w3
  41140c:	mov	x24, x4
  411410:	b	4119e8 <wcrtomb@plt+0xeca8>
  411414:	mov	w22, #0x0                   	// #0
  411418:	mov	w20, #0x8                   	// #8
  41141c:	mov	w0, #0x62                  	// #98
  411420:	b	411450 <wcrtomb@plt+0xe710>
  411424:	mov	w22, #0x0                   	// #0
  411428:	mov	w20, #0xc                   	// #12
  41142c:	mov	w0, #0x66                  	// #102
  411430:	b	411450 <wcrtomb@plt+0xe710>
  411434:	mov	w22, #0x0                   	// #0
  411438:	mov	w20, #0xd                   	// #13
  41143c:	mov	w0, #0x72                  	// #114
  411440:	ldr	w1, [sp, #112]
  411444:	cmp	w1, #0x0
  411448:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  41144c:	b.eq	411528 <wcrtomb@plt+0xe7e8>  // b.none
  411450:	ldr	w1, [sp, #132]
  411454:	cbnz	w1, 411b64 <wcrtomb@plt+0xee24>
  411458:	mov	w19, w1
  41145c:	mov	w0, w1
  411460:	b	4119e8 <wcrtomb@plt+0xeca8>
  411464:	mov	w22, #0x0                   	// #0
  411468:	mov	w20, #0x9                   	// #9
  41146c:	mov	w0, #0x74                  	// #116
  411470:	b	411440 <wcrtomb@plt+0xe700>
  411474:	mov	w22, #0x0                   	// #0
  411478:	mov	w20, #0xb                   	// #11
  41147c:	mov	w0, #0x76                  	// #118
  411480:	b	411450 <wcrtomb@plt+0xe710>
  411484:	mov	w22, #0x0                   	// #0
  411488:	cmp	w23, #0x2
  41148c:	b.eq	4114b8 <wcrtomb@plt+0xe778>  // b.none
  411490:	ldr	w0, [sp, #132]
  411494:	cmp	w0, #0x0
  411498:	ldr	w0, [sp, #112]
  41149c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4114a0:	ldr	w0, [sp, #176]
  4114a4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4114a8:	b.ne	411b7c <wcrtomb@plt+0xee3c>  // b.any
  4114ac:	mov	w20, #0x5c                  	// #92
  4114b0:	mov	w0, w20
  4114b4:	b	411450 <wcrtomb@plt+0xe710>
  4114b8:	ldr	w0, [sp, #112]
  4114bc:	cbnz	w0, 411cdc <wcrtomb@plt+0xef9c>
  4114c0:	mov	w19, w0
  4114c4:	mov	w20, #0x5c                  	// #92
  4114c8:	eor	w0, w0, #0x1
  4114cc:	ldr	w1, [sp, #124]
  4114d0:	and	w0, w1, w0
  4114d4:	tst	w0, #0xff
  4114d8:	b.eq	411a88 <wcrtomb@plt+0xed48>  // b.none
  4114dc:	cmp	x26, x27
  4114e0:	b.ls	4114ec <wcrtomb@plt+0xe7ac>  // b.plast
  4114e4:	mov	w0, #0x27                  	// #39
  4114e8:	strb	w0, [x28, x27]
  4114ec:	add	x0, x27, #0x1
  4114f0:	cmp	x26, x0
  4114f4:	b.ls	411500 <wcrtomb@plt+0xe7c0>  // b.plast
  4114f8:	mov	w1, #0x27                  	// #39
  4114fc:	strb	w1, [x28, x0]
  411500:	add	x27, x27, #0x2
  411504:	str	wzr, [sp, #124]
  411508:	b	411a88 <wcrtomb@plt+0xed48>
  41150c:	mov	w0, #0x6e                  	// #110
  411510:	b	411440 <wcrtomb@plt+0xe700>
  411514:	mov	w0, #0x6e                  	// #110
  411518:	b	411440 <wcrtomb@plt+0xe700>
  41151c:	mov	w22, #0x0                   	// #0
  411520:	mov	w0, #0x6e                  	// #110
  411524:	b	411440 <wcrtomb@plt+0xe700>
  411528:	mov	x24, x25
  41152c:	mov	w25, #0x2                   	// #2
  411530:	b	411cfc <wcrtomb@plt+0xefbc>
  411534:	mov	w0, #0x61                  	// #97
  411538:	b	411450 <wcrtomb@plt+0xe710>
  41153c:	mov	w0, #0x61                  	// #97
  411540:	b	411450 <wcrtomb@plt+0xe710>
  411544:	mov	w22, #0x0                   	// #0
  411548:	cmp	x25, #0x1
  41154c:	cset	w0, ne  // ne = any
  411550:	cmn	x25, #0x1
  411554:	b.eq	41156c <wcrtomb@plt+0xe82c>  // b.none
  411558:	cbnz	w0, 411b3c <wcrtomb@plt+0xedfc>
  41155c:	cbz	x24, 411594 <wcrtomb@plt+0xe854>
  411560:	mov	w19, #0x0                   	// #0
  411564:	mov	w0, #0x0                   	// #0
  411568:	b	4119e8 <wcrtomb@plt+0xeca8>
  41156c:	ldr	x0, [sp, #136]
  411570:	ldrb	w0, [x0, #1]
  411574:	cmp	w0, #0x0
  411578:	cset	w0, ne  // ne = any
  41157c:	b	411558 <wcrtomb@plt+0xe818>
  411580:	mov	w22, #0x0                   	// #0
  411584:	b	41155c <wcrtomb@plt+0xe81c>
  411588:	mov	w22, #0x0                   	// #0
  41158c:	b	411594 <wcrtomb@plt+0xe854>
  411590:	mov	w19, w22
  411594:	cmp	w23, #0x2
  411598:	cset	w0, eq  // eq = none
  41159c:	ldr	w1, [sp, #112]
  4115a0:	ands	w0, w1, w0
  4115a4:	b.eq	4119e8 <wcrtomb@plt+0xeca8>  // b.none
  4115a8:	mov	x24, x25
  4115ac:	mov	w25, #0x2                   	// #2
  4115b0:	b	411cfc <wcrtomb@plt+0xefbc>
  4115b4:	ldr	w19, [sp, #112]
  4115b8:	b	411594 <wcrtomb@plt+0xe854>
  4115bc:	mov	w22, #0x0                   	// #0
  4115c0:	mov	w19, #0x0                   	// #0
  4115c4:	b	411594 <wcrtomb@plt+0xe854>
  4115c8:	mov	w22, #0x0                   	// #0
  4115cc:	cmp	w23, #0x2
  4115d0:	b.eq	4115e4 <wcrtomb@plt+0xe8a4>  // b.none
  4115d4:	str	w19, [sp, #180]
  4115d8:	mov	w0, #0x0                   	// #0
  4115dc:	mov	w20, #0x27                  	// #39
  4115e0:	b	4119e8 <wcrtomb@plt+0xeca8>
  4115e4:	ldr	w0, [sp, #112]
  4115e8:	cbnz	w0, 411ce8 <wcrtomb@plt+0xefa8>
  4115ec:	cmp	x26, #0x0
  4115f0:	mov	x0, #0x0                   	// #0
  4115f4:	ldr	x1, [sp, #192]
  4115f8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  4115fc:	b.eq	41162c <wcrtomb@plt+0xe8ec>  // b.none
  411600:	cmp	x26, x27
  411604:	b.ls	411610 <wcrtomb@plt+0xe8d0>  // b.plast
  411608:	mov	w0, #0x27                  	// #39
  41160c:	strb	w0, [x28, x27]
  411610:	add	x0, x27, #0x1
  411614:	cmp	x26, x0
  411618:	b.ls	411664 <wcrtomb@plt+0xe924>  // b.plast
  41161c:	mov	w1, #0x5c                  	// #92
  411620:	strb	w1, [x28, x0]
  411624:	mov	x0, x26
  411628:	ldr	x26, [sp, #192]
  41162c:	add	x1, x27, #0x2
  411630:	cmp	x1, x0
  411634:	b.cs	411640 <wcrtomb@plt+0xe900>  // b.hs, b.nlast
  411638:	mov	w2, #0x27                  	// #39
  41163c:	strb	w2, [x28, x1]
  411640:	add	x27, x27, #0x3
  411644:	str	w19, [sp, #180]
  411648:	ldr	w1, [sp, #112]
  41164c:	str	w1, [sp, #124]
  411650:	str	x26, [sp, #192]
  411654:	mov	x26, x0
  411658:	mov	w20, #0x27                  	// #39
  41165c:	mov	w0, #0x0                   	// #0
  411660:	b	411a10 <wcrtomb@plt+0xecd0>
  411664:	mov	x0, x26
  411668:	ldr	x26, [sp, #192]
  41166c:	b	41162c <wcrtomb@plt+0xe8ec>
  411670:	mov	w22, #0x0                   	// #0
  411674:	ldr	x0, [sp, #168]
  411678:	cmp	x0, #0x1
  41167c:	b.ne	4116b8 <wcrtomb@plt+0xe978>  // b.any
  411680:	bl	402ab0 <__ctype_b_loc@plt>
  411684:	and	x1, x20, #0xff
  411688:	ldr	x0, [x0]
  41168c:	ldrh	w19, [x0, x1, lsl #1]
  411690:	ubfx	x19, x19, #14, #1
  411694:	ldr	x0, [sp, #168]
  411698:	mov	x2, x0
  41169c:	eor	w0, w19, #0x1
  4116a0:	ldr	w1, [sp, #132]
  4116a4:	and	w0, w1, w0
  4116a8:	ands	w0, w0, #0xff
  4116ac:	b.eq	4119e8 <wcrtomb@plt+0xeca8>  // b.none
  4116b0:	mov	w19, #0x0                   	// #0
  4116b4:	b	411864 <wcrtomb@plt+0xeb24>
  4116b8:	str	xzr, [sp, #232]
  4116bc:	cmn	x25, #0x1
  4116c0:	b.eq	4116e4 <wcrtomb@plt+0xe9a4>  // b.none
  4116c4:	mov	x0, #0x0                   	// #0
  4116c8:	str	w21, [sp, #176]
  4116cc:	str	w20, [sp, #208]
  4116d0:	str	w22, [sp, #212]
  4116d4:	mov	x22, x0
  4116d8:	str	x27, [sp, #216]
  4116dc:	ldr	w27, [sp, #112]
  4116e0:	b	4117b4 <wcrtomb@plt+0xea74>
  4116e4:	ldr	x0, [sp, #136]
  4116e8:	bl	402690 <strlen@plt>
  4116ec:	mov	x25, x0
  4116f0:	b	4116c4 <wcrtomb@plt+0xe984>
  4116f4:	ldr	w20, [sp, #208]
  4116f8:	mov	x2, x22
  4116fc:	mov	x0, x21
  411700:	ldr	w21, [sp, #176]
  411704:	ldr	w22, [sp, #212]
  411708:	ldr	x27, [sp, #216]
  41170c:	mov	w19, #0x0                   	// #0
  411710:	cmp	x0, x25
  411714:	b.cs	41185c <wcrtomb@plt+0xeb1c>  // b.hs, b.nlast
  411718:	mov	x1, x2
  41171c:	ldr	x2, [sp, #136]
  411720:	ldrb	w0, [x2, x0]
  411724:	cbz	w0, 411744 <wcrtomb@plt+0xea04>
  411728:	add	x1, x1, #0x1
  41172c:	add	x0, x24, x1
  411730:	cmp	x25, x0
  411734:	b.hi	411720 <wcrtomb@plt+0xe9e0>  // b.pmore
  411738:	mov	x2, x1
  41173c:	mov	w19, #0x0                   	// #0
  411740:	b	41185c <wcrtomb@plt+0xeb1c>
  411744:	mov	x2, x1
  411748:	mov	w19, #0x0                   	// #0
  41174c:	b	41185c <wcrtomb@plt+0xeb1c>
  411750:	add	x1, x1, #0x1
  411754:	cmp	x1, x21
  411758:	b.eq	411794 <wcrtomb@plt+0xea54>  // b.none
  41175c:	ldrb	w0, [x1]
  411760:	sub	w0, w0, #0x5b
  411764:	and	w0, w0, #0xff
  411768:	cmp	w0, #0x21
  41176c:	b.hi	411750 <wcrtomb@plt+0xea10>  // b.pmore
  411770:	mov	x2, #0x1                   	// #1
  411774:	lsl	x0, x2, x0
  411778:	mov	x2, #0x2b                  	// #43
  41177c:	movk	x2, #0x2, lsl #32
  411780:	tst	x0, x2
  411784:	b.eq	411750 <wcrtomb@plt+0xea10>  // b.none
  411788:	mov	x24, x25
  41178c:	mov	w25, #0x2                   	// #2
  411790:	b	411cfc <wcrtomb@plt+0xefbc>
  411794:	ldr	w0, [sp, #228]
  411798:	bl	402c80 <iswprint@plt>
  41179c:	cmp	w0, #0x0
  4117a0:	csel	w19, w19, wzr, ne  // ne = any
  4117a4:	add	x22, x22, x20
  4117a8:	add	x0, sp, #0xe8
  4117ac:	bl	402a10 <mbsinit@plt>
  4117b0:	cbnz	w0, 411814 <wcrtomb@plt+0xead4>
  4117b4:	add	x21, x24, x22
  4117b8:	add	x3, sp, #0xe8
  4117bc:	sub	x2, x25, x21
  4117c0:	ldr	x0, [sp, #136]
  4117c4:	add	x1, x0, x21
  4117c8:	add	x0, sp, #0xe4
  4117cc:	bl	412f3c <wcrtomb@plt+0x101fc>
  4117d0:	mov	x20, x0
  4117d4:	cbz	x0, 411848 <wcrtomb@plt+0xeb08>
  4117d8:	cmn	x0, #0x1
  4117dc:	b.eq	41182c <wcrtomb@plt+0xeaec>  // b.none
  4117e0:	cmn	x0, #0x2
  4117e4:	b.eq	4116f4 <wcrtomb@plt+0xe9b4>  // b.none
  4117e8:	cmp	w27, #0x0
  4117ec:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  4117f0:	b.ne	411794 <wcrtomb@plt+0xea54>  // b.any
  4117f4:	cmp	x0, #0x1
  4117f8:	b.ls	411794 <wcrtomb@plt+0xea54>  // b.plast
  4117fc:	add	x1, x21, #0x1
  411800:	ldr	x0, [sp, #136]
  411804:	add	x1, x0, x1
  411808:	add	x0, x0, x20
  41180c:	add	x21, x0, x21
  411810:	b	41175c <wcrtomb@plt+0xea1c>
  411814:	ldr	w21, [sp, #176]
  411818:	ldr	w20, [sp, #208]
  41181c:	mov	x2, x22
  411820:	ldr	w22, [sp, #212]
  411824:	ldr	x27, [sp, #216]
  411828:	b	41185c <wcrtomb@plt+0xeb1c>
  41182c:	ldr	w21, [sp, #176]
  411830:	ldr	w20, [sp, #208]
  411834:	mov	x2, x22
  411838:	ldr	w22, [sp, #212]
  41183c:	ldr	x27, [sp, #216]
  411840:	mov	w19, #0x0                   	// #0
  411844:	b	41185c <wcrtomb@plt+0xeb1c>
  411848:	ldr	w21, [sp, #176]
  41184c:	ldr	w20, [sp, #208]
  411850:	mov	x2, x22
  411854:	ldr	w22, [sp, #212]
  411858:	ldr	x27, [sp, #216]
  41185c:	cmp	x2, #0x1
  411860:	b.ls	41169c <wcrtomb@plt+0xe95c>  // b.plast
  411864:	add	x5, x24, x2
  411868:	mov	w0, #0x0                   	// #0
  41186c:	eor	w1, w19, #0x1
  411870:	ldr	w2, [sp, #132]
  411874:	and	w1, w2, w1
  411878:	and	w1, w1, #0xff
  41187c:	mov	w3, w1
  411880:	mov	w6, #0x5c                  	// #92
  411884:	mov	w7, #0x24                  	// #36
  411888:	ldr	w9, [sp, #112]
  41188c:	ldr	w4, [sp, #124]
  411890:	ldr	x8, [sp, #136]
  411894:	b	411910 <wcrtomb@plt+0xebd0>
  411898:	cbz	w22, 4118ac <wcrtomb@plt+0xeb6c>
  41189c:	cmp	x26, x27
  4118a0:	b.ls	4118a8 <wcrtomb@plt+0xeb68>  // b.plast
  4118a4:	strb	w6, [x28, x27]
  4118a8:	add	x27, x27, #0x1
  4118ac:	add	x2, x24, #0x1
  4118b0:	cmp	x2, x5
  4118b4:	b.cs	4119c8 <wcrtomb@plt+0xec88>  // b.hs, b.nlast
  4118b8:	eor	w22, w0, #0x1
  4118bc:	and	w22, w4, w22
  4118c0:	ands	w22, w22, #0xff
  4118c4:	b.eq	4119dc <wcrtomb@plt+0xec9c>  // b.none
  4118c8:	cmp	x26, x27
  4118cc:	b.ls	4118d8 <wcrtomb@plt+0xeb98>  // b.plast
  4118d0:	mov	w4, #0x27                  	// #39
  4118d4:	strb	w4, [x28, x27]
  4118d8:	add	x4, x27, #0x1
  4118dc:	cmp	x26, x4
  4118e0:	b.ls	4118ec <wcrtomb@plt+0xebac>  // b.plast
  4118e4:	mov	w10, #0x27                  	// #39
  4118e8:	strb	w10, [x28, x4]
  4118ec:	add	x27, x27, #0x2
  4118f0:	mov	w22, w3
  4118f4:	mov	x24, x2
  4118f8:	mov	w4, w3
  4118fc:	cmp	x26, x27
  411900:	b.ls	411908 <wcrtomb@plt+0xebc8>  // b.plast
  411904:	strb	w20, [x28, x27]
  411908:	add	x27, x27, #0x1
  41190c:	ldrb	w20, [x8, x24]
  411910:	cbz	w1, 411898 <wcrtomb@plt+0xeb58>
  411914:	cbnz	w9, 411ca4 <wcrtomb@plt+0xef64>
  411918:	cmp	w23, #0x2
  41191c:	cset	w0, eq  // eq = none
  411920:	eor	w2, w4, #0x1
  411924:	ands	w0, w0, w2
  411928:	b.eq	411968 <wcrtomb@plt+0xec28>  // b.none
  41192c:	cmp	x26, x27
  411930:	b.ls	41193c <wcrtomb@plt+0xebfc>  // b.plast
  411934:	mov	w2, #0x27                  	// #39
  411938:	strb	w2, [x28, x27]
  41193c:	add	x2, x27, #0x1
  411940:	cmp	x26, x2
  411944:	b.ls	41194c <wcrtomb@plt+0xec0c>  // b.plast
  411948:	strb	w7, [x28, x2]
  41194c:	add	x2, x27, #0x2
  411950:	cmp	x26, x2
  411954:	b.ls	411960 <wcrtomb@plt+0xec20>  // b.plast
  411958:	mov	w4, #0x27                  	// #39
  41195c:	strb	w4, [x28, x2]
  411960:	add	x27, x27, #0x3
  411964:	mov	w4, w0
  411968:	cmp	x26, x27
  41196c:	b.ls	411974 <wcrtomb@plt+0xec34>  // b.plast
  411970:	strb	w6, [x28, x27]
  411974:	add	x0, x27, #0x1
  411978:	cmp	x26, x0
  41197c:	b.ls	41198c <wcrtomb@plt+0xec4c>  // b.plast
  411980:	lsr	w2, w20, #6
  411984:	add	w2, w2, #0x30
  411988:	strb	w2, [x28, x0]
  41198c:	add	x0, x27, #0x2
  411990:	cmp	x26, x0
  411994:	b.ls	4119a4 <wcrtomb@plt+0xec64>  // b.plast
  411998:	ubfx	x2, x20, #3, #3
  41199c:	add	w2, w2, #0x30
  4119a0:	strb	w2, [x28, x0]
  4119a4:	add	x27, x27, #0x3
  4119a8:	and	w20, w20, #0x7
  4119ac:	add	w20, w20, #0x30
  4119b0:	add	x2, x24, #0x1
  4119b4:	cmp	x5, x2
  4119b8:	b.ls	4119d0 <wcrtomb@plt+0xec90>  // b.plast
  4119bc:	mov	w0, w3
  4119c0:	mov	x24, x2
  4119c4:	b	4118fc <wcrtomb@plt+0xebbc>
  4119c8:	str	w4, [sp, #124]
  4119cc:	b	4114c8 <wcrtomb@plt+0xe788>
  4119d0:	str	w4, [sp, #124]
  4119d4:	mov	w0, w1
  4119d8:	b	4114c8 <wcrtomb@plt+0xe788>
  4119dc:	mov	x24, x2
  4119e0:	b	4118fc <wcrtomb@plt+0xebbc>
  4119e4:	mov	w0, w22
  4119e8:	cmp	w21, #0x0
  4119ec:	ldr	w1, [sp, #112]
  4119f0:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  4119f4:	b.eq	411a10 <wcrtomb@plt+0xecd0>  // b.none
  4119f8:	ldr	x2, [sp, #152]
  4119fc:	cbz	x2, 411a10 <wcrtomb@plt+0xecd0>
  411a00:	ubfx	x1, x20, #5, #8
  411a04:	ldr	w1, [x2, x1, lsl #2]
  411a08:	lsr	w1, w1, w20
  411a0c:	tbnz	w1, #0, 411a14 <wcrtomb@plt+0xecd4>
  411a10:	cbz	w22, 4114c8 <wcrtomb@plt+0xe788>
  411a14:	ldr	w0, [sp, #112]
  411a18:	cbnz	w0, 411cf4 <wcrtomb@plt+0xefb4>
  411a1c:	cmp	w23, #0x2
  411a20:	cset	w0, eq  // eq = none
  411a24:	ldr	w1, [sp, #124]
  411a28:	eor	w1, w1, #0x1
  411a2c:	ands	w0, w0, w1
  411a30:	b.eq	411a74 <wcrtomb@plt+0xed34>  // b.none
  411a34:	cmp	x26, x27
  411a38:	b.ls	411a44 <wcrtomb@plt+0xed04>  // b.plast
  411a3c:	mov	w1, #0x27                  	// #39
  411a40:	strb	w1, [x28, x27]
  411a44:	add	x1, x27, #0x1
  411a48:	cmp	x26, x1
  411a4c:	b.ls	411a58 <wcrtomb@plt+0xed18>  // b.plast
  411a50:	mov	w2, #0x24                  	// #36
  411a54:	strb	w2, [x28, x1]
  411a58:	add	x1, x27, #0x2
  411a5c:	cmp	x26, x1
  411a60:	b.ls	411a6c <wcrtomb@plt+0xed2c>  // b.plast
  411a64:	mov	w2, #0x27                  	// #39
  411a68:	strb	w2, [x28, x1]
  411a6c:	add	x27, x27, #0x3
  411a70:	str	w0, [sp, #124]
  411a74:	cmp	x26, x27
  411a78:	b.ls	411a84 <wcrtomb@plt+0xed44>  // b.plast
  411a7c:	mov	w0, #0x5c                  	// #92
  411a80:	strb	w0, [x28, x27]
  411a84:	add	x27, x27, #0x1
  411a88:	cmp	x27, x26
  411a8c:	b.cs	411a94 <wcrtomb@plt+0xed54>  // b.hs, b.nlast
  411a90:	strb	w20, [x28, x27]
  411a94:	add	x27, x27, #0x1
  411a98:	cmp	w19, #0x0
  411a9c:	ldr	w0, [sp, #128]
  411aa0:	csel	w0, w0, w19, ne  // ne = any
  411aa4:	str	w0, [sp, #128]
  411aa8:	add	x24, x24, #0x1
  411aac:	cmp	x25, x24
  411ab0:	cset	w19, ne  // ne = any
  411ab4:	cmn	x25, #0x1
  411ab8:	b.eq	411b8c <wcrtomb@plt+0xee4c>  // b.none
  411abc:	cbz	w19, 411ba0 <wcrtomb@plt+0xee60>
  411ac0:	cmp	w23, #0x2
  411ac4:	cset	w21, ne  // ne = any
  411ac8:	ldr	w0, [sp, #132]
  411acc:	and	w21, w0, w21
  411ad0:	ldr	x0, [sp, #144]
  411ad4:	cmp	x0, #0x0
  411ad8:	cset	w0, ne  // ne = any
  411adc:	str	w0, [sp, #176]
  411ae0:	csel	w22, w21, wzr, ne  // ne = any
  411ae4:	cbnz	w22, 411138 <wcrtomb@plt+0xe3f8>
  411ae8:	ldr	x0, [sp, #136]
  411aec:	ldrb	w20, [x0, x24]
  411af0:	cmp	w20, #0x7e
  411af4:	b.hi	411674 <wcrtomb@plt+0xe934>  // b.pmore
  411af8:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xecd0>
  411afc:	add	x0, x0, #0x148
  411b00:	ldrh	w0, [x0, w20, uxtw #1]
  411b04:	adr	x1, 411b10 <wcrtomb@plt+0xedd0>
  411b08:	add	x0, x1, w0, sxth #2
  411b0c:	br	x0
  411b10:	mov	w19, #0x0                   	// #0
  411b14:	mov	w0, #0x0                   	// #0
  411b18:	mov	w20, #0x3f                  	// #63
  411b1c:	b	4119e8 <wcrtomb@plt+0xeca8>
  411b20:	mov	w19, #0x0                   	// #0
  411b24:	mov	w0, #0x0                   	// #0
  411b28:	mov	w20, #0x3f                  	// #63
  411b2c:	b	4119e8 <wcrtomb@plt+0xeca8>
  411b30:	mov	w19, #0x0                   	// #0
  411b34:	mov	w0, #0x0                   	// #0
  411b38:	b	4119e8 <wcrtomb@plt+0xeca8>
  411b3c:	mov	w19, #0x0                   	// #0
  411b40:	mov	w0, #0x0                   	// #0
  411b44:	b	4119e8 <wcrtomb@plt+0xeca8>
  411b48:	mov	w19, w22
  411b4c:	ldr	w0, [sp, #112]
  411b50:	b	4119e8 <wcrtomb@plt+0xeca8>
  411b54:	mov	w19, w22
  411b58:	mov	w22, #0x0                   	// #0
  411b5c:	mov	w0, #0x0                   	// #0
  411b60:	b	4119e8 <wcrtomb@plt+0xeca8>
  411b64:	mov	w20, w0
  411b68:	mov	w19, #0x0                   	// #0
  411b6c:	b	411a14 <wcrtomb@plt+0xecd4>
  411b70:	mov	w19, #0x0                   	// #0
  411b74:	mov	w20, #0x61                  	// #97
  411b78:	b	411a14 <wcrtomb@plt+0xecd4>
  411b7c:	mov	w19, #0x0                   	// #0
  411b80:	mov	w0, #0x0                   	// #0
  411b84:	mov	w20, #0x5c                  	// #92
  411b88:	b	4114c8 <wcrtomb@plt+0xe788>
  411b8c:	ldr	x0, [sp, #136]
  411b90:	ldrb	w0, [x0, x24]
  411b94:	cmp	w0, #0x0
  411b98:	cset	w19, ne  // ne = any
  411b9c:	b	411abc <wcrtomb@plt+0xed7c>
  411ba0:	cmp	w23, #0x2
  411ba4:	cset	w1, eq  // eq = none
  411ba8:	cmp	w1, #0x0
  411bac:	ldr	w0, [sp, #112]
  411bb0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  411bb4:	ccmp	x27, #0x0, #0x0, ne  // ne = any
  411bb8:	b.eq	411cb8 <wcrtomb@plt+0xef78>  // b.none
  411bbc:	eor	w0, w0, #0x1
  411bc0:	and	w0, w0, #0xff
  411bc4:	cmp	w1, #0x0
  411bc8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  411bcc:	cset	w1, ne  // ne = any
  411bd0:	ldr	w2, [sp, #180]
  411bd4:	ands	w1, w2, w1
  411bd8:	b.eq	411c4c <wcrtomb@plt+0xef0c>  // b.none
  411bdc:	ldr	w0, [sp, #128]
  411be0:	cbnz	w0, 411c14 <wcrtomb@plt+0xeed4>
  411be4:	cmp	x26, #0x0
  411be8:	cset	w0, eq  // eq = none
  411bec:	ldr	x2, [sp, #192]
  411bf0:	cmp	x2, #0x0
  411bf4:	csel	w0, w0, wzr, ne  // ne = any
  411bf8:	str	w0, [sp, #180]
  411bfc:	mov	w23, #0x2                   	// #2
  411c00:	cbz	w0, 411c48 <wcrtomb@plt+0xef08>
  411c04:	ldr	w0, [sp, #128]
  411c08:	str	w0, [sp, #112]
  411c0c:	ldr	x26, [sp, #192]
  411c10:	b	410edc <wcrtomb@plt+0xe19c>
  411c14:	ldr	x0, [sp, #240]
  411c18:	str	x0, [sp]
  411c1c:	ldr	x7, [sp, #200]
  411c20:	ldr	x6, [sp, #152]
  411c24:	ldr	w5, [sp, #184]
  411c28:	mov	w4, #0x5                   	// #5
  411c2c:	mov	x3, x25
  411c30:	ldr	x2, [sp, #136]
  411c34:	ldr	x1, [sp, #192]
  411c38:	mov	x0, x28
  411c3c:	bl	410e5c <wcrtomb@plt+0xe11c>
  411c40:	mov	x27, x0
  411c44:	b	411d44 <wcrtomb@plt+0xf004>
  411c48:	mov	w0, w1
  411c4c:	ldr	x1, [sp, #160]
  411c50:	cmp	x1, #0x0
  411c54:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  411c58:	b.eq	411c94 <wcrtomb@plt+0xef54>  // b.none
  411c5c:	mov	x0, x1
  411c60:	ldrb	w2, [x1]
  411c64:	cbz	w2, 411c94 <wcrtomb@plt+0xef54>
  411c68:	mov	x1, x27
  411c6c:	sub	x0, x0, x27
  411c70:	b	411c80 <wcrtomb@plt+0xef40>
  411c74:	add	x1, x1, #0x1
  411c78:	ldrb	w2, [x0, x1]
  411c7c:	cbz	w2, 411c90 <wcrtomb@plt+0xef50>
  411c80:	cmp	x26, x1
  411c84:	b.ls	411c74 <wcrtomb@plt+0xef34>  // b.plast
  411c88:	strb	w2, [x28, x1]
  411c8c:	b	411c74 <wcrtomb@plt+0xef34>
  411c90:	mov	x27, x1
  411c94:	cmp	x26, x27
  411c98:	b.ls	411d44 <wcrtomb@plt+0xf004>  // b.plast
  411c9c:	strb	wzr, [x28, x27]
  411ca0:	b	411d44 <wcrtomb@plt+0xf004>
  411ca4:	mov	x24, x25
  411ca8:	mov	w25, w23
  411cac:	ldr	w0, [sp, #112]
  411cb0:	str	w0, [sp, #132]
  411cb4:	b	411cfc <wcrtomb@plt+0xefbc>
  411cb8:	mov	x24, x25
  411cbc:	mov	w25, #0x2                   	// #2
  411cc0:	b	411cfc <wcrtomb@plt+0xefbc>
  411cc4:	mov	x24, x25
  411cc8:	mov	w25, w23
  411ccc:	b	411cfc <wcrtomb@plt+0xefbc>
  411cd0:	mov	x24, x25
  411cd4:	mov	w25, w23
  411cd8:	b	411cfc <wcrtomb@plt+0xefbc>
  411cdc:	mov	x24, x25
  411ce0:	mov	w25, w23
  411ce4:	b	411cfc <wcrtomb@plt+0xefbc>
  411ce8:	mov	x24, x25
  411cec:	mov	w25, w23
  411cf0:	b	411cfc <wcrtomb@plt+0xefbc>
  411cf4:	mov	x24, x25
  411cf8:	mov	w25, w23
  411cfc:	ldr	w0, [sp, #132]
  411d00:	cmp	w0, #0x0
  411d04:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  411d08:	mov	w0, #0x4                   	// #4
  411d0c:	csel	w25, w25, w0, ne  // ne = any
  411d10:	ldr	x0, [sp, #240]
  411d14:	str	x0, [sp]
  411d18:	ldr	x7, [sp, #200]
  411d1c:	mov	x6, #0x0                   	// #0
  411d20:	ldr	w0, [sp, #184]
  411d24:	and	w5, w0, #0xfffffffd
  411d28:	mov	w4, w25
  411d2c:	mov	x3, x24
  411d30:	ldr	x2, [sp, #136]
  411d34:	mov	x1, x26
  411d38:	mov	x0, x28
  411d3c:	bl	410e5c <wcrtomb@plt+0xe11c>
  411d40:	mov	x27, x0
  411d44:	mov	x0, x27
  411d48:	ldp	x19, x20, [sp, #32]
  411d4c:	ldp	x21, x22, [sp, #48]
  411d50:	ldp	x23, x24, [sp, #64]
  411d54:	ldp	x25, x26, [sp, #80]
  411d58:	ldp	x27, x28, [sp, #96]
  411d5c:	ldp	x29, x30, [sp, #16]
  411d60:	add	sp, sp, #0xf0
  411d64:	ret
  411d68:	mov	x24, x25
  411d6c:	mov	w25, w23
  411d70:	b	411d10 <wcrtomb@plt+0xefd0>
  411d74:	add	x27, x27, #0x4
  411d78:	str	w0, [sp, #124]
  411d7c:	mov	w19, #0x0                   	// #0
  411d80:	mov	w20, #0x30                  	// #48
  411d84:	b	4119e8 <wcrtomb@plt+0xeca8>
  411d88:	ldr	x0, [sp, #136]
  411d8c:	ldrb	w20, [x0, x24]
  411d90:	cmp	w20, #0x7e
  411d94:	b.hi	411670 <wcrtomb@plt+0xe930>  // b.pmore
  411d98:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xecd0>
  411d9c:	add	x0, x0, #0x248
  411da0:	ldrh	w0, [x0, w20, uxtw #1]
  411da4:	adr	x1, 411db0 <wcrtomb@plt+0xf070>
  411da8:	add	x0, x1, w0, sxth #2
  411dac:	br	x0
  411db0:	sub	sp, sp, #0x80
  411db4:	stp	x29, x30, [sp, #16]
  411db8:	add	x29, sp, #0x10
  411dbc:	stp	x19, x20, [sp, #32]
  411dc0:	stp	x21, x22, [sp, #48]
  411dc4:	stp	x23, x24, [sp, #64]
  411dc8:	stp	x25, x26, [sp, #80]
  411dcc:	stp	x27, x28, [sp, #96]
  411dd0:	mov	w19, w0
  411dd4:	str	x1, [sp, #112]
  411dd8:	str	x2, [sp, #120]
  411ddc:	mov	x20, x3
  411de0:	bl	402cb0 <__errno_location@plt>
  411de4:	mov	x23, x0
  411de8:	ldr	w28, [x0]
  411dec:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411df0:	ldr	x21, [x0, #1152]
  411df4:	tbnz	w19, #31, 411f38 <wcrtomb@plt+0xf1f8>
  411df8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411dfc:	ldr	w0, [x0, #1160]
  411e00:	cmp	w0, w19
  411e04:	b.gt	411e68 <wcrtomb@plt+0xf128>
  411e08:	mov	w0, #0x7fffffff            	// #2147483647
  411e0c:	cmp	w19, w0
  411e10:	b.eq	411f3c <wcrtomb@plt+0xf1fc>  // b.none
  411e14:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411e18:	add	x0, x0, #0x480
  411e1c:	add	x0, x0, #0x10
  411e20:	cmp	x21, x0
  411e24:	b.eq	411f40 <wcrtomb@plt+0xf200>  // b.none
  411e28:	add	w24, w19, #0x1
  411e2c:	sbfiz	x1, x24, #4, #32
  411e30:	mov	x0, x21
  411e34:	bl	412cfc <wcrtomb@plt+0xffbc>
  411e38:	mov	x21, x0
  411e3c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411e40:	str	x21, [x0, #1152]
  411e44:	adrp	x22, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411e48:	add	x22, x22, #0x480
  411e4c:	ldr	w0, [x22, #8]
  411e50:	sub	w2, w24, w0
  411e54:	sbfiz	x2, x2, #4, #32
  411e58:	mov	w1, #0x0                   	// #0
  411e5c:	add	x0, x21, w0, sxtw #4
  411e60:	bl	4028d0 <memset@plt>
  411e64:	str	w24, [x22, #8]
  411e68:	sbfiz	x19, x19, #4, #32
  411e6c:	add	x27, x21, x19
  411e70:	ldr	x25, [x21, x19]
  411e74:	ldr	x22, [x27, #8]
  411e78:	ldr	w24, [x20, #4]
  411e7c:	orr	w24, w24, #0x1
  411e80:	add	x26, x20, #0x8
  411e84:	ldr	x0, [x20, #48]
  411e88:	str	x0, [sp]
  411e8c:	ldr	x7, [x20, #40]
  411e90:	mov	x6, x26
  411e94:	mov	w5, w24
  411e98:	ldr	w4, [x20]
  411e9c:	ldr	x3, [sp, #120]
  411ea0:	ldr	x2, [sp, #112]
  411ea4:	mov	x1, x25
  411ea8:	mov	x0, x22
  411eac:	bl	410e5c <wcrtomb@plt+0xe11c>
  411eb0:	cmp	x25, x0
  411eb4:	b.hi	411f10 <wcrtomb@plt+0xf1d0>  // b.pmore
  411eb8:	add	x25, x0, #0x1
  411ebc:	str	x25, [x21, x19]
  411ec0:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411ec4:	add	x0, x0, #0x798
  411ec8:	cmp	x22, x0
  411ecc:	b.eq	411ed8 <wcrtomb@plt+0xf198>  // b.none
  411ed0:	mov	x0, x22
  411ed4:	bl	402ae0 <free@plt>
  411ed8:	mov	x0, x25
  411edc:	bl	412c80 <wcrtomb@plt+0xff40>
  411ee0:	mov	x22, x0
  411ee4:	str	x0, [x27, #8]
  411ee8:	ldr	x1, [x20, #48]
  411eec:	str	x1, [sp]
  411ef0:	ldr	x7, [x20, #40]
  411ef4:	mov	x6, x26
  411ef8:	mov	w5, w24
  411efc:	ldr	w4, [x20]
  411f00:	ldr	x3, [sp, #120]
  411f04:	ldr	x2, [sp, #112]
  411f08:	mov	x1, x25
  411f0c:	bl	410e5c <wcrtomb@plt+0xe11c>
  411f10:	str	w28, [x23]
  411f14:	mov	x0, x22
  411f18:	ldp	x19, x20, [sp, #32]
  411f1c:	ldp	x21, x22, [sp, #48]
  411f20:	ldp	x23, x24, [sp, #64]
  411f24:	ldp	x25, x26, [sp, #80]
  411f28:	ldp	x27, x28, [sp, #96]
  411f2c:	ldp	x29, x30, [sp, #16]
  411f30:	add	sp, sp, #0x80
  411f34:	ret
  411f38:	bl	4029e0 <abort@plt>
  411f3c:	bl	412ef8 <wcrtomb@plt+0x101b8>
  411f40:	add	w24, w19, #0x1
  411f44:	sbfiz	x1, x24, #4, #32
  411f48:	mov	x0, #0x0                   	// #0
  411f4c:	bl	412cfc <wcrtomb@plt+0xffbc>
  411f50:	mov	x21, x0
  411f54:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411f58:	add	x1, x0, #0x480
  411f5c:	str	x21, [x0, #1152]
  411f60:	ldp	x0, x1, [x1, #16]
  411f64:	stp	x0, x1, [x21]
  411f68:	b	411e44 <wcrtomb@plt+0xf104>
  411f6c:	stp	x29, x30, [sp, #-48]!
  411f70:	mov	x29, sp
  411f74:	stp	x19, x20, [sp, #16]
  411f78:	str	x21, [sp, #32]
  411f7c:	mov	x20, x0
  411f80:	bl	402cb0 <__errno_location@plt>
  411f84:	mov	x19, x0
  411f88:	ldr	w21, [x0]
  411f8c:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411f90:	add	x2, x2, #0x798
  411f94:	add	x2, x2, #0x100
  411f98:	cmp	x20, #0x0
  411f9c:	mov	x1, #0x38                  	// #56
  411fa0:	csel	x0, x2, x20, eq  // eq = none
  411fa4:	bl	412e98 <wcrtomb@plt+0x10158>
  411fa8:	str	w21, [x19]
  411fac:	ldp	x19, x20, [sp, #16]
  411fb0:	ldr	x21, [sp, #32]
  411fb4:	ldp	x29, x30, [sp], #48
  411fb8:	ret
  411fbc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411fc0:	add	x1, x1, #0x798
  411fc4:	add	x1, x1, #0x100
  411fc8:	cmp	x0, #0x0
  411fcc:	csel	x0, x1, x0, eq  // eq = none
  411fd0:	ldr	w0, [x0]
  411fd4:	ret
  411fd8:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411fdc:	add	x2, x2, #0x798
  411fe0:	add	x2, x2, #0x100
  411fe4:	cmp	x0, #0x0
  411fe8:	csel	x0, x2, x0, eq  // eq = none
  411fec:	str	w1, [x0]
  411ff0:	ret
  411ff4:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x24cd0>
  411ff8:	add	x3, x3, #0x798
  411ffc:	add	x3, x3, #0x100
  412000:	cmp	x0, #0x0
  412004:	csel	x0, x3, x0, eq  // eq = none
  412008:	add	x0, x0, #0x8
  41200c:	ubfx	x4, x1, #5, #3
  412010:	and	w1, w1, #0x1f
  412014:	ldr	w5, [x0, x4, lsl #2]
  412018:	lsr	w3, w5, w1
  41201c:	eor	w2, w3, w2
  412020:	and	w2, w2, #0x1
  412024:	lsl	w2, w2, w1
  412028:	eor	w2, w2, w5
  41202c:	str	w2, [x0, x4, lsl #2]
  412030:	and	w0, w3, #0x1
  412034:	ret
  412038:	mov	x2, x0
  41203c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  412040:	add	x0, x0, #0x798
  412044:	add	x0, x0, #0x100
  412048:	cmp	x2, #0x0
  41204c:	csel	x2, x0, x2, eq  // eq = none
  412050:	ldr	w0, [x2, #4]
  412054:	str	w1, [x2, #4]
  412058:	ret
  41205c:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x24cd0>
  412060:	add	x3, x3, #0x798
  412064:	add	x3, x3, #0x100
  412068:	cmp	x0, #0x0
  41206c:	csel	x0, x3, x0, eq  // eq = none
  412070:	mov	w3, #0xa                   	// #10
  412074:	str	w3, [x0]
  412078:	cmp	x1, #0x0
  41207c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  412080:	b.eq	412090 <wcrtomb@plt+0xf350>  // b.none
  412084:	str	x1, [x0, #40]
  412088:	str	x2, [x0, #48]
  41208c:	ret
  412090:	stp	x29, x30, [sp, #-16]!
  412094:	mov	x29, sp
  412098:	bl	4029e0 <abort@plt>
  41209c:	sub	sp, sp, #0x60
  4120a0:	stp	x29, x30, [sp, #16]
  4120a4:	add	x29, sp, #0x10
  4120a8:	stp	x19, x20, [sp, #32]
  4120ac:	stp	x21, x22, [sp, #48]
  4120b0:	stp	x23, x24, [sp, #64]
  4120b4:	str	x25, [sp, #80]
  4120b8:	mov	x21, x0
  4120bc:	mov	x22, x1
  4120c0:	mov	x23, x2
  4120c4:	mov	x24, x3
  4120c8:	mov	x19, x4
  4120cc:	adrp	x4, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4120d0:	add	x4, x4, #0x798
  4120d4:	add	x4, x4, #0x100
  4120d8:	cmp	x19, #0x0
  4120dc:	csel	x19, x4, x19, eq  // eq = none
  4120e0:	bl	402cb0 <__errno_location@plt>
  4120e4:	mov	x20, x0
  4120e8:	ldr	w25, [x0]
  4120ec:	ldr	x7, [x19, #40]
  4120f0:	ldr	w5, [x19, #4]
  4120f4:	ldr	w4, [x19]
  4120f8:	ldr	x0, [x19, #48]
  4120fc:	str	x0, [sp]
  412100:	add	x6, x19, #0x8
  412104:	mov	x3, x24
  412108:	mov	x2, x23
  41210c:	mov	x1, x22
  412110:	mov	x0, x21
  412114:	bl	410e5c <wcrtomb@plt+0xe11c>
  412118:	str	w25, [x20]
  41211c:	ldp	x19, x20, [sp, #32]
  412120:	ldp	x21, x22, [sp, #48]
  412124:	ldp	x23, x24, [sp, #64]
  412128:	ldr	x25, [sp, #80]
  41212c:	ldp	x29, x30, [sp, #16]
  412130:	add	sp, sp, #0x60
  412134:	ret
  412138:	sub	sp, sp, #0x80
  41213c:	stp	x29, x30, [sp, #16]
  412140:	add	x29, sp, #0x10
  412144:	stp	x19, x20, [sp, #32]
  412148:	stp	x21, x22, [sp, #48]
  41214c:	stp	x23, x24, [sp, #64]
  412150:	stp	x25, x26, [sp, #80]
  412154:	stp	x27, x28, [sp, #96]
  412158:	mov	x22, x0
  41215c:	mov	x23, x1
  412160:	mov	x20, x2
  412164:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  412168:	add	x0, x0, #0x798
  41216c:	add	x0, x0, #0x100
  412170:	cmp	x3, #0x0
  412174:	csel	x19, x0, x3, eq  // eq = none
  412178:	bl	402cb0 <__errno_location@plt>
  41217c:	mov	x21, x0
  412180:	ldr	w28, [x0]
  412184:	cmp	x20, #0x0
  412188:	cset	w24, eq  // eq = none
  41218c:	ldr	w0, [x19, #4]
  412190:	orr	w24, w24, w0
  412194:	add	x27, x19, #0x8
  412198:	ldr	x7, [x19, #40]
  41219c:	ldr	w4, [x19]
  4121a0:	ldr	x0, [x19, #48]
  4121a4:	str	x0, [sp]
  4121a8:	mov	x6, x27
  4121ac:	mov	w5, w24
  4121b0:	mov	x3, x23
  4121b4:	mov	x2, x22
  4121b8:	mov	x1, #0x0                   	// #0
  4121bc:	mov	x0, #0x0                   	// #0
  4121c0:	bl	410e5c <wcrtomb@plt+0xe11c>
  4121c4:	mov	x25, x0
  4121c8:	add	x26, x0, #0x1
  4121cc:	mov	x0, x26
  4121d0:	bl	412c80 <wcrtomb@plt+0xff40>
  4121d4:	str	x0, [sp, #120]
  4121d8:	ldr	x7, [x19, #40]
  4121dc:	ldr	w4, [x19]
  4121e0:	ldr	x1, [x19, #48]
  4121e4:	str	x1, [sp]
  4121e8:	mov	x6, x27
  4121ec:	mov	w5, w24
  4121f0:	mov	x3, x23
  4121f4:	mov	x2, x22
  4121f8:	mov	x1, x26
  4121fc:	bl	410e5c <wcrtomb@plt+0xe11c>
  412200:	str	w28, [x21]
  412204:	cbz	x20, 41220c <wcrtomb@plt+0xf4cc>
  412208:	str	x25, [x20]
  41220c:	ldr	x0, [sp, #120]
  412210:	ldp	x19, x20, [sp, #32]
  412214:	ldp	x21, x22, [sp, #48]
  412218:	ldp	x23, x24, [sp, #64]
  41221c:	ldp	x25, x26, [sp, #80]
  412220:	ldp	x27, x28, [sp, #96]
  412224:	ldp	x29, x30, [sp, #16]
  412228:	add	sp, sp, #0x80
  41222c:	ret
  412230:	stp	x29, x30, [sp, #-16]!
  412234:	mov	x29, sp
  412238:	mov	x3, x2
  41223c:	mov	x2, #0x0                   	// #0
  412240:	bl	412138 <wcrtomb@plt+0xf3f8>
  412244:	ldp	x29, x30, [sp], #16
  412248:	ret
  41224c:	stp	x29, x30, [sp, #-48]!
  412250:	mov	x29, sp
  412254:	stp	x19, x20, [sp, #16]
  412258:	str	x21, [sp, #32]
  41225c:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  412260:	add	x1, x0, #0x480
  412264:	ldr	x21, [x0, #1152]
  412268:	ldr	w20, [x1, #8]
  41226c:	cmp	w20, #0x1
  412270:	b.le	412294 <wcrtomb@plt+0xf554>
  412274:	add	x19, x21, #0x18
  412278:	sub	w20, w20, #0x2
  41227c:	add	x0, x21, #0x28
  412280:	add	x20, x0, x20, lsl #4
  412284:	ldr	x0, [x19], #16
  412288:	bl	402ae0 <free@plt>
  41228c:	cmp	x19, x20
  412290:	b.ne	412284 <wcrtomb@plt+0xf544>  // b.any
  412294:	ldr	x0, [x21, #8]
  412298:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  41229c:	add	x1, x1, #0x798
  4122a0:	cmp	x0, x1
  4122a4:	b.eq	4122c8 <wcrtomb@plt+0xf588>  // b.none
  4122a8:	bl	402ae0 <free@plt>
  4122ac:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4122b0:	add	x0, x0, #0x480
  4122b4:	mov	x1, #0x100                 	// #256
  4122b8:	str	x1, [x0, #16]
  4122bc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4122c0:	add	x1, x1, #0x798
  4122c4:	str	x1, [x0, #24]
  4122c8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4122cc:	add	x0, x0, #0x480
  4122d0:	add	x0, x0, #0x10
  4122d4:	cmp	x21, x0
  4122d8:	b.eq	4122f4 <wcrtomb@plt+0xf5b4>  // b.none
  4122dc:	mov	x0, x21
  4122e0:	bl	402ae0 <free@plt>
  4122e4:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4122e8:	add	x0, x1, #0x480
  4122ec:	add	x0, x0, #0x10
  4122f0:	str	x0, [x1, #1152]
  4122f4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4122f8:	mov	w1, #0x1                   	// #1
  4122fc:	str	w1, [x0, #1160]
  412300:	ldp	x19, x20, [sp, #16]
  412304:	ldr	x21, [sp, #32]
  412308:	ldp	x29, x30, [sp], #48
  41230c:	ret
  412310:	stp	x29, x30, [sp, #-16]!
  412314:	mov	x29, sp
  412318:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x24cd0>
  41231c:	add	x3, x3, #0x798
  412320:	add	x3, x3, #0x100
  412324:	mov	x2, #0xffffffffffffffff    	// #-1
  412328:	bl	411db0 <wcrtomb@plt+0xf070>
  41232c:	ldp	x29, x30, [sp], #16
  412330:	ret
  412334:	stp	x29, x30, [sp, #-16]!
  412338:	mov	x29, sp
  41233c:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x24cd0>
  412340:	add	x3, x3, #0x798
  412344:	add	x3, x3, #0x100
  412348:	bl	411db0 <wcrtomb@plt+0xf070>
  41234c:	ldp	x29, x30, [sp], #16
  412350:	ret
  412354:	stp	x29, x30, [sp, #-16]!
  412358:	mov	x29, sp
  41235c:	mov	x1, x0
  412360:	mov	w0, #0x0                   	// #0
  412364:	bl	412310 <wcrtomb@plt+0xf5d0>
  412368:	ldp	x29, x30, [sp], #16
  41236c:	ret
  412370:	stp	x29, x30, [sp, #-16]!
  412374:	mov	x29, sp
  412378:	mov	x2, x1
  41237c:	mov	x1, x0
  412380:	mov	w0, #0x0                   	// #0
  412384:	bl	412334 <wcrtomb@plt+0xf5f4>
  412388:	ldp	x29, x30, [sp], #16
  41238c:	ret
  412390:	stp	x29, x30, [sp, #-96]!
  412394:	mov	x29, sp
  412398:	stp	x19, x20, [sp, #16]
  41239c:	mov	w19, w0
  4123a0:	mov	w0, w1
  4123a4:	mov	x20, x2
  4123a8:	add	x8, sp, #0x28
  4123ac:	bl	410cdc <wcrtomb@plt+0xdf9c>
  4123b0:	add	x3, sp, #0x28
  4123b4:	mov	x2, #0xffffffffffffffff    	// #-1
  4123b8:	mov	x1, x20
  4123bc:	mov	w0, w19
  4123c0:	bl	411db0 <wcrtomb@plt+0xf070>
  4123c4:	ldp	x19, x20, [sp, #16]
  4123c8:	ldp	x29, x30, [sp], #96
  4123cc:	ret
  4123d0:	stp	x29, x30, [sp, #-112]!
  4123d4:	mov	x29, sp
  4123d8:	stp	x19, x20, [sp, #16]
  4123dc:	str	x21, [sp, #32]
  4123e0:	mov	w19, w0
  4123e4:	mov	w0, w1
  4123e8:	mov	x20, x2
  4123ec:	mov	x21, x3
  4123f0:	add	x8, sp, #0x38
  4123f4:	bl	410cdc <wcrtomb@plt+0xdf9c>
  4123f8:	add	x3, sp, #0x38
  4123fc:	mov	x2, x21
  412400:	mov	x1, x20
  412404:	mov	w0, w19
  412408:	bl	411db0 <wcrtomb@plt+0xf070>
  41240c:	ldp	x19, x20, [sp, #16]
  412410:	ldr	x21, [sp, #32]
  412414:	ldp	x29, x30, [sp], #112
  412418:	ret
  41241c:	stp	x29, x30, [sp, #-16]!
  412420:	mov	x29, sp
  412424:	mov	x2, x1
  412428:	mov	w1, w0
  41242c:	mov	w0, #0x0                   	// #0
  412430:	bl	412390 <wcrtomb@plt+0xf650>
  412434:	ldp	x29, x30, [sp], #16
  412438:	ret
  41243c:	stp	x29, x30, [sp, #-16]!
  412440:	mov	x29, sp
  412444:	mov	x3, x2
  412448:	mov	x2, x1
  41244c:	mov	w1, w0
  412450:	mov	w0, #0x0                   	// #0
  412454:	bl	4123d0 <wcrtomb@plt+0xf690>
  412458:	ldp	x29, x30, [sp], #16
  41245c:	ret
  412460:	stp	x29, x30, [sp, #-96]!
  412464:	mov	x29, sp
  412468:	stp	x19, x20, [sp, #16]
  41246c:	mov	x19, x0
  412470:	mov	x20, x1
  412474:	and	w1, w2, #0xff
  412478:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  41247c:	add	x2, x2, #0x798
  412480:	add	x0, x2, #0x100
  412484:	ldp	x2, x3, [x2, #256]
  412488:	stp	x2, x3, [sp, #40]
  41248c:	ldp	x2, x3, [x0, #16]
  412490:	stp	x2, x3, [sp, #56]
  412494:	ldp	x2, x3, [x0, #32]
  412498:	stp	x2, x3, [sp, #72]
  41249c:	ldr	x0, [x0, #48]
  4124a0:	str	x0, [sp, #88]
  4124a4:	mov	w2, #0x1                   	// #1
  4124a8:	add	x0, sp, #0x28
  4124ac:	bl	411ff4 <wcrtomb@plt+0xf2b4>
  4124b0:	add	x3, sp, #0x28
  4124b4:	mov	x2, x20
  4124b8:	mov	x1, x19
  4124bc:	mov	w0, #0x0                   	// #0
  4124c0:	bl	411db0 <wcrtomb@plt+0xf070>
  4124c4:	ldp	x19, x20, [sp, #16]
  4124c8:	ldp	x29, x30, [sp], #96
  4124cc:	ret
  4124d0:	stp	x29, x30, [sp, #-16]!
  4124d4:	mov	x29, sp
  4124d8:	mov	w2, w1
  4124dc:	mov	x1, #0xffffffffffffffff    	// #-1
  4124e0:	bl	412460 <wcrtomb@plt+0xf720>
  4124e4:	ldp	x29, x30, [sp], #16
  4124e8:	ret
  4124ec:	stp	x29, x30, [sp, #-16]!
  4124f0:	mov	x29, sp
  4124f4:	mov	w1, #0x3a                  	// #58
  4124f8:	bl	4124d0 <wcrtomb@plt+0xf790>
  4124fc:	ldp	x29, x30, [sp], #16
  412500:	ret
  412504:	stp	x29, x30, [sp, #-16]!
  412508:	mov	x29, sp
  41250c:	mov	w2, #0x3a                  	// #58
  412510:	bl	412460 <wcrtomb@plt+0xf720>
  412514:	ldp	x29, x30, [sp], #16
  412518:	ret
  41251c:	stp	x29, x30, [sp, #-160]!
  412520:	mov	x29, sp
  412524:	stp	x19, x20, [sp, #16]
  412528:	mov	w19, w0
  41252c:	mov	w0, w1
  412530:	mov	x20, x2
  412534:	add	x8, sp, #0x20
  412538:	bl	410cdc <wcrtomb@plt+0xdf9c>
  41253c:	ldp	x0, x1, [sp, #32]
  412540:	stp	x0, x1, [sp, #104]
  412544:	ldp	x0, x1, [sp, #48]
  412548:	stp	x0, x1, [sp, #120]
  41254c:	ldp	x0, x1, [sp, #64]
  412550:	stp	x0, x1, [sp, #136]
  412554:	ldr	x0, [sp, #80]
  412558:	str	x0, [sp, #152]
  41255c:	mov	w2, #0x1                   	// #1
  412560:	mov	w1, #0x3a                  	// #58
  412564:	add	x0, sp, #0x68
  412568:	bl	411ff4 <wcrtomb@plt+0xf2b4>
  41256c:	add	x3, sp, #0x68
  412570:	mov	x2, #0xffffffffffffffff    	// #-1
  412574:	mov	x1, x20
  412578:	mov	w0, w19
  41257c:	bl	411db0 <wcrtomb@plt+0xf070>
  412580:	ldp	x19, x20, [sp, #16]
  412584:	ldp	x29, x30, [sp], #160
  412588:	ret
  41258c:	stp	x29, x30, [sp, #-112]!
  412590:	mov	x29, sp
  412594:	stp	x19, x20, [sp, #16]
  412598:	str	x21, [sp, #32]
  41259c:	mov	w19, w0
  4125a0:	mov	x20, x3
  4125a4:	mov	x21, x4
  4125a8:	adrp	x5, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4125ac:	add	x5, x5, #0x798
  4125b0:	add	x0, x5, #0x100
  4125b4:	ldp	x4, x5, [x5, #256]
  4125b8:	stp	x4, x5, [sp, #56]
  4125bc:	ldp	x4, x5, [x0, #16]
  4125c0:	stp	x4, x5, [sp, #72]
  4125c4:	ldp	x4, x5, [x0, #32]
  4125c8:	stp	x4, x5, [sp, #88]
  4125cc:	ldr	x0, [x0, #48]
  4125d0:	str	x0, [sp, #104]
  4125d4:	add	x0, sp, #0x38
  4125d8:	bl	41205c <wcrtomb@plt+0xf31c>
  4125dc:	add	x3, sp, #0x38
  4125e0:	mov	x2, x21
  4125e4:	mov	x1, x20
  4125e8:	mov	w0, w19
  4125ec:	bl	411db0 <wcrtomb@plt+0xf070>
  4125f0:	ldp	x19, x20, [sp, #16]
  4125f4:	ldr	x21, [sp, #32]
  4125f8:	ldp	x29, x30, [sp], #112
  4125fc:	ret
  412600:	stp	x29, x30, [sp, #-16]!
  412604:	mov	x29, sp
  412608:	mov	x4, #0xffffffffffffffff    	// #-1
  41260c:	bl	41258c <wcrtomb@plt+0xf84c>
  412610:	ldp	x29, x30, [sp], #16
  412614:	ret
  412618:	stp	x29, x30, [sp, #-16]!
  41261c:	mov	x29, sp
  412620:	mov	x3, x2
  412624:	mov	x2, x1
  412628:	mov	x1, x0
  41262c:	mov	w0, #0x0                   	// #0
  412630:	bl	412600 <wcrtomb@plt+0xf8c0>
  412634:	ldp	x29, x30, [sp], #16
  412638:	ret
  41263c:	stp	x29, x30, [sp, #-16]!
  412640:	mov	x29, sp
  412644:	mov	x4, x3
  412648:	mov	x3, x2
  41264c:	mov	x2, x1
  412650:	mov	x1, x0
  412654:	mov	w0, #0x0                   	// #0
  412658:	bl	41258c <wcrtomb@plt+0xf84c>
  41265c:	ldp	x29, x30, [sp], #16
  412660:	ret
  412664:	stp	x29, x30, [sp, #-16]!
  412668:	mov	x29, sp
  41266c:	adrp	x3, 438000 <_obstack_memory_used@@Base+0x24cd0>
  412670:	add	x3, x3, #0x480
  412674:	add	x3, x3, #0x20
  412678:	bl	411db0 <wcrtomb@plt+0xf070>
  41267c:	ldp	x29, x30, [sp], #16
  412680:	ret
  412684:	stp	x29, x30, [sp, #-16]!
  412688:	mov	x29, sp
  41268c:	mov	x2, x1
  412690:	mov	x1, x0
  412694:	mov	w0, #0x0                   	// #0
  412698:	bl	412664 <wcrtomb@plt+0xf924>
  41269c:	ldp	x29, x30, [sp], #16
  4126a0:	ret
  4126a4:	stp	x29, x30, [sp, #-16]!
  4126a8:	mov	x29, sp
  4126ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4126b0:	bl	412664 <wcrtomb@plt+0xf924>
  4126b4:	ldp	x29, x30, [sp], #16
  4126b8:	ret
  4126bc:	stp	x29, x30, [sp, #-16]!
  4126c0:	mov	x29, sp
  4126c4:	mov	x1, x0
  4126c8:	mov	w0, #0x0                   	// #0
  4126cc:	bl	4126a4 <wcrtomb@plt+0xf964>
  4126d0:	ldp	x29, x30, [sp], #16
  4126d4:	ret
  4126d8:	sub	sp, sp, #0x50
  4126dc:	stp	x29, x30, [sp, #32]
  4126e0:	add	x29, sp, #0x20
  4126e4:	stp	x19, x20, [sp, #48]
  4126e8:	str	x21, [sp, #64]
  4126ec:	mov	x20, x0
  4126f0:	mov	x21, x4
  4126f4:	mov	x19, x5
  4126f8:	cbz	x1, 4127e4 <wcrtomb@plt+0xfaa4>
  4126fc:	mov	x5, x3
  412700:	mov	x4, x2
  412704:	mov	x3, x1
  412708:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xecd0>
  41270c:	add	x2, x2, #0x3c8
  412710:	mov	w1, #0x1                   	// #1
  412714:	bl	402a90 <__fprintf_chk@plt>
  412718:	mov	w2, #0x5                   	// #5
  41271c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412720:	add	x1, x1, #0x3e0
  412724:	mov	x0, #0x0                   	// #0
  412728:	bl	402c20 <dcgettext@plt>
  41272c:	mov	w4, #0x7e4                 	// #2020
  412730:	mov	x3, x0
  412734:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xecd0>
  412738:	add	x2, x2, #0x6f0
  41273c:	mov	w1, #0x1                   	// #1
  412740:	mov	x0, x20
  412744:	bl	402a90 <__fprintf_chk@plt>
  412748:	mov	x1, x20
  41274c:	mov	w0, #0xa                   	// #10
  412750:	bl	402bd0 <fputc_unlocked@plt>
  412754:	mov	w2, #0x5                   	// #5
  412758:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  41275c:	add	x1, x1, #0x3e8
  412760:	mov	x0, #0x0                   	// #0
  412764:	bl	402c20 <dcgettext@plt>
  412768:	adrp	x3, 422000 <_obstack_memory_used@@Base+0xecd0>
  41276c:	add	x3, x3, #0x498
  412770:	mov	x2, x0
  412774:	mov	w1, #0x1                   	// #1
  412778:	mov	x0, x20
  41277c:	bl	402a90 <__fprintf_chk@plt>
  412780:	mov	x1, x20
  412784:	mov	w0, #0xa                   	// #10
  412788:	bl	402bd0 <fputc_unlocked@plt>
  41278c:	cmp	x19, #0x5
  412790:	b.eq	412978 <wcrtomb@plt+0xfc38>  // b.none
  412794:	b.hi	412848 <wcrtomb@plt+0xfb08>  // b.pmore
  412798:	cmp	x19, #0x2
  41279c:	b.eq	412914 <wcrtomb@plt+0xfbd4>  // b.none
  4127a0:	b.ls	412800 <wcrtomb@plt+0xfac0>  // b.plast
  4127a4:	cmp	x19, #0x3
  4127a8:	b.eq	412944 <wcrtomb@plt+0xfc04>  // b.none
  4127ac:	mov	w2, #0x5                   	// #5
  4127b0:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  4127b4:	add	x1, x1, #0x508
  4127b8:	mov	x0, #0x0                   	// #0
  4127bc:	bl	402c20 <dcgettext@plt>
  4127c0:	ldr	x6, [x21, #24]
  4127c4:	ldr	x5, [x21, #16]
  4127c8:	ldr	x4, [x21, #8]
  4127cc:	ldr	x3, [x21]
  4127d0:	mov	x2, x0
  4127d4:	mov	w1, #0x1                   	// #1
  4127d8:	mov	x0, x20
  4127dc:	bl	402a90 <__fprintf_chk@plt>
  4127e0:	b	412834 <wcrtomb@plt+0xfaf4>
  4127e4:	mov	x4, x3
  4127e8:	mov	x3, x2
  4127ec:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xecd0>
  4127f0:	add	x2, x2, #0x3d8
  4127f4:	mov	w1, #0x1                   	// #1
  4127f8:	bl	402a90 <__fprintf_chk@plt>
  4127fc:	b	412718 <wcrtomb@plt+0xf9d8>
  412800:	cbz	x19, 412834 <wcrtomb@plt+0xfaf4>
  412804:	cmp	x19, #0x1
  412808:	b.ne	412a4c <wcrtomb@plt+0xfd0c>  // b.any
  41280c:	mov	w2, #0x5                   	// #5
  412810:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412814:	add	x1, x1, #0x4c0
  412818:	mov	x0, #0x0                   	// #0
  41281c:	bl	402c20 <dcgettext@plt>
  412820:	ldr	x3, [x21]
  412824:	mov	x2, x0
  412828:	mov	w1, #0x1                   	// #1
  41282c:	mov	x0, x20
  412830:	bl	402a90 <__fprintf_chk@plt>
  412834:	ldp	x19, x20, [sp, #48]
  412838:	ldr	x21, [sp, #64]
  41283c:	ldp	x29, x30, [sp, #32]
  412840:	add	sp, sp, #0x50
  412844:	ret
  412848:	cmp	x19, #0x8
  41284c:	b.eq	4129f8 <wcrtomb@plt+0xfcb8>  // b.none
  412850:	b.ls	4128b8 <wcrtomb@plt+0xfb78>  // b.plast
  412854:	cmp	x19, #0x9
  412858:	b.ne	412a4c <wcrtomb@plt+0xfd0c>  // b.any
  41285c:	mov	w2, #0x5                   	// #5
  412860:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412864:	add	x1, x1, #0x5d8
  412868:	mov	x0, #0x0                   	// #0
  41286c:	bl	402c20 <dcgettext@plt>
  412870:	ldr	x1, [x21, #64]
  412874:	str	x1, [sp, #24]
  412878:	ldr	x1, [x21, #56]
  41287c:	str	x1, [sp, #16]
  412880:	ldr	x1, [x21, #48]
  412884:	str	x1, [sp, #8]
  412888:	ldr	x1, [x21, #40]
  41288c:	str	x1, [sp]
  412890:	ldr	x7, [x21, #32]
  412894:	ldr	x6, [x21, #24]
  412898:	ldr	x5, [x21, #16]
  41289c:	ldr	x4, [x21, #8]
  4128a0:	ldr	x3, [x21]
  4128a4:	mov	x2, x0
  4128a8:	mov	w1, #0x1                   	// #1
  4128ac:	mov	x0, x20
  4128b0:	bl	402a90 <__fprintf_chk@plt>
  4128b4:	b	412834 <wcrtomb@plt+0xfaf4>
  4128b8:	cmp	x19, #0x6
  4128bc:	b.eq	4129b4 <wcrtomb@plt+0xfc74>  // b.none
  4128c0:	cmp	x19, #0x7
  4128c4:	b.ne	412a4c <wcrtomb@plt+0xfd0c>  // b.any
  4128c8:	mov	w2, #0x5                   	// #5
  4128cc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  4128d0:	add	x1, x1, #0x578
  4128d4:	mov	x0, #0x0                   	// #0
  4128d8:	bl	402c20 <dcgettext@plt>
  4128dc:	ldr	x1, [x21, #48]
  4128e0:	str	x1, [sp, #8]
  4128e4:	ldr	x1, [x21, #40]
  4128e8:	str	x1, [sp]
  4128ec:	ldr	x7, [x21, #32]
  4128f0:	ldr	x6, [x21, #24]
  4128f4:	ldr	x5, [x21, #16]
  4128f8:	ldr	x4, [x21, #8]
  4128fc:	ldr	x3, [x21]
  412900:	mov	x2, x0
  412904:	mov	w1, #0x1                   	// #1
  412908:	mov	x0, x20
  41290c:	bl	402a90 <__fprintf_chk@plt>
  412910:	b	412834 <wcrtomb@plt+0xfaf4>
  412914:	mov	w2, #0x5                   	// #5
  412918:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  41291c:	add	x1, x1, #0x4d0
  412920:	mov	x0, #0x0                   	// #0
  412924:	bl	402c20 <dcgettext@plt>
  412928:	ldr	x4, [x21, #8]
  41292c:	ldr	x3, [x21]
  412930:	mov	x2, x0
  412934:	mov	w1, #0x1                   	// #1
  412938:	mov	x0, x20
  41293c:	bl	402a90 <__fprintf_chk@plt>
  412940:	b	412834 <wcrtomb@plt+0xfaf4>
  412944:	mov	w2, #0x5                   	// #5
  412948:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  41294c:	add	x1, x1, #0x4e8
  412950:	mov	x0, #0x0                   	// #0
  412954:	bl	402c20 <dcgettext@plt>
  412958:	ldr	x5, [x21, #16]
  41295c:	ldr	x4, [x21, #8]
  412960:	ldr	x3, [x21]
  412964:	mov	x2, x0
  412968:	mov	w1, #0x1                   	// #1
  41296c:	mov	x0, x20
  412970:	bl	402a90 <__fprintf_chk@plt>
  412974:	b	412834 <wcrtomb@plt+0xfaf4>
  412978:	mov	w2, #0x5                   	// #5
  41297c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412980:	add	x1, x1, #0x528
  412984:	mov	x0, #0x0                   	// #0
  412988:	bl	402c20 <dcgettext@plt>
  41298c:	ldr	x7, [x21, #32]
  412990:	ldr	x6, [x21, #24]
  412994:	ldr	x5, [x21, #16]
  412998:	ldr	x4, [x21, #8]
  41299c:	ldr	x3, [x21]
  4129a0:	mov	x2, x0
  4129a4:	mov	w1, #0x1                   	// #1
  4129a8:	mov	x0, x20
  4129ac:	bl	402a90 <__fprintf_chk@plt>
  4129b0:	b	412834 <wcrtomb@plt+0xfaf4>
  4129b4:	mov	w2, #0x5                   	// #5
  4129b8:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  4129bc:	add	x1, x1, #0x550
  4129c0:	mov	x0, #0x0                   	// #0
  4129c4:	bl	402c20 <dcgettext@plt>
  4129c8:	ldr	x1, [x21, #40]
  4129cc:	str	x1, [sp]
  4129d0:	ldr	x7, [x21, #32]
  4129d4:	ldr	x6, [x21, #24]
  4129d8:	ldr	x5, [x21, #16]
  4129dc:	ldr	x4, [x21, #8]
  4129e0:	ldr	x3, [x21]
  4129e4:	mov	x2, x0
  4129e8:	mov	w1, #0x1                   	// #1
  4129ec:	mov	x0, x20
  4129f0:	bl	402a90 <__fprintf_chk@plt>
  4129f4:	b	412834 <wcrtomb@plt+0xfaf4>
  4129f8:	mov	w2, #0x5                   	// #5
  4129fc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412a00:	add	x1, x1, #0x5a8
  412a04:	mov	x0, #0x0                   	// #0
  412a08:	bl	402c20 <dcgettext@plt>
  412a0c:	ldr	x1, [x21, #56]
  412a10:	str	x1, [sp, #16]
  412a14:	ldr	x1, [x21, #48]
  412a18:	str	x1, [sp, #8]
  412a1c:	ldr	x1, [x21, #40]
  412a20:	str	x1, [sp]
  412a24:	ldr	x7, [x21, #32]
  412a28:	ldr	x6, [x21, #24]
  412a2c:	ldr	x5, [x21, #16]
  412a30:	ldr	x4, [x21, #8]
  412a34:	ldr	x3, [x21]
  412a38:	mov	x2, x0
  412a3c:	mov	w1, #0x1                   	// #1
  412a40:	mov	x0, x20
  412a44:	bl	402a90 <__fprintf_chk@plt>
  412a48:	b	412834 <wcrtomb@plt+0xfaf4>
  412a4c:	mov	w2, #0x5                   	// #5
  412a50:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412a54:	add	x1, x1, #0x610
  412a58:	mov	x0, #0x0                   	// #0
  412a5c:	bl	402c20 <dcgettext@plt>
  412a60:	ldr	x1, [x21, #64]
  412a64:	str	x1, [sp, #24]
  412a68:	ldr	x1, [x21, #56]
  412a6c:	str	x1, [sp, #16]
  412a70:	ldr	x1, [x21, #48]
  412a74:	str	x1, [sp, #8]
  412a78:	ldr	x1, [x21, #40]
  412a7c:	str	x1, [sp]
  412a80:	ldr	x7, [x21, #32]
  412a84:	ldr	x6, [x21, #24]
  412a88:	ldr	x5, [x21, #16]
  412a8c:	ldr	x4, [x21, #8]
  412a90:	ldr	x3, [x21]
  412a94:	mov	x2, x0
  412a98:	mov	w1, #0x1                   	// #1
  412a9c:	mov	x0, x20
  412aa0:	bl	402a90 <__fprintf_chk@plt>
  412aa4:	b	412834 <wcrtomb@plt+0xfaf4>
  412aa8:	stp	x29, x30, [sp, #-16]!
  412aac:	mov	x29, sp
  412ab0:	ldr	x5, [x4]
  412ab4:	cbz	x5, 412ad4 <wcrtomb@plt+0xfd94>
  412ab8:	mov	x5, #0x0                   	// #0
  412abc:	add	x5, x5, #0x1
  412ac0:	ldr	x6, [x4, x5, lsl #3]
  412ac4:	cbnz	x6, 412abc <wcrtomb@plt+0xfd7c>
  412ac8:	bl	4126d8 <wcrtomb@plt+0xf998>
  412acc:	ldp	x29, x30, [sp], #16
  412ad0:	ret
  412ad4:	mov	x5, #0x0                   	// #0
  412ad8:	b	412ac8 <wcrtomb@plt+0xfd88>
  412adc:	stp	x29, x30, [sp, #-96]!
  412ae0:	mov	x29, sp
  412ae4:	ldr	x7, [x4]
  412ae8:	ldr	w8, [x4, #24]
  412aec:	ldr	x11, [x4, #8]
  412af0:	add	x4, sp, #0x10
  412af4:	mov	x5, #0x0                   	// #0
  412af8:	b	412b34 <wcrtomb@plt+0xfdf4>
  412afc:	add	w9, w8, #0x8
  412b00:	cmp	w9, #0x0
  412b04:	b.le	412b48 <wcrtomb@plt+0xfe08>
  412b08:	add	x10, x7, #0xf
  412b0c:	mov	w8, w9
  412b10:	mov	x6, x7
  412b14:	and	x7, x10, #0xfffffffffffffff8
  412b18:	ldr	x6, [x6]
  412b1c:	str	x6, [x4]
  412b20:	cbz	x6, 412b54 <wcrtomb@plt+0xfe14>
  412b24:	add	x5, x5, #0x1
  412b28:	add	x4, x4, #0x8
  412b2c:	cmp	x5, #0xa
  412b30:	b.eq	412b54 <wcrtomb@plt+0xfe14>  // b.none
  412b34:	tbnz	w8, #31, 412afc <wcrtomb@plt+0xfdbc>
  412b38:	add	x9, x7, #0xf
  412b3c:	mov	x6, x7
  412b40:	and	x7, x9, #0xfffffffffffffff8
  412b44:	b	412b18 <wcrtomb@plt+0xfdd8>
  412b48:	add	x6, x11, w8, sxtw
  412b4c:	mov	w8, w9
  412b50:	b	412b18 <wcrtomb@plt+0xfdd8>
  412b54:	add	x4, sp, #0x10
  412b58:	bl	4126d8 <wcrtomb@plt+0xf998>
  412b5c:	ldp	x29, x30, [sp], #96
  412b60:	ret
  412b64:	stp	x29, x30, [sp, #-240]!
  412b68:	mov	x29, sp
  412b6c:	str	x4, [sp, #208]
  412b70:	str	x5, [sp, #216]
  412b74:	str	x6, [sp, #224]
  412b78:	str	x7, [sp, #232]
  412b7c:	str	q0, [sp, #80]
  412b80:	str	q1, [sp, #96]
  412b84:	str	q2, [sp, #112]
  412b88:	str	q3, [sp, #128]
  412b8c:	str	q4, [sp, #144]
  412b90:	str	q5, [sp, #160]
  412b94:	str	q6, [sp, #176]
  412b98:	str	q7, [sp, #192]
  412b9c:	add	x4, sp, #0xf0
  412ba0:	str	x4, [sp, #48]
  412ba4:	str	x4, [sp, #56]
  412ba8:	add	x4, sp, #0xd0
  412bac:	str	x4, [sp, #64]
  412bb0:	mov	w4, #0xffffffe0            	// #-32
  412bb4:	str	w4, [sp, #72]
  412bb8:	mov	w4, #0xffffff80            	// #-128
  412bbc:	str	w4, [sp, #76]
  412bc0:	ldp	x4, x5, [sp, #48]
  412bc4:	stp	x4, x5, [sp, #16]
  412bc8:	ldp	x4, x5, [sp, #64]
  412bcc:	stp	x4, x5, [sp, #32]
  412bd0:	add	x4, sp, #0x10
  412bd4:	bl	412adc <wcrtomb@plt+0xfd9c>
  412bd8:	ldp	x29, x30, [sp], #240
  412bdc:	ret
  412be0:	stp	x29, x30, [sp, #-16]!
  412be4:	mov	x29, sp
  412be8:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  412bec:	ldr	x1, [x0, #1288]
  412bf0:	mov	w0, #0xa                   	// #10
  412bf4:	bl	402bd0 <fputc_unlocked@plt>
  412bf8:	mov	w2, #0x5                   	// #5
  412bfc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412c00:	add	x1, x1, #0x650
  412c04:	mov	x0, #0x0                   	// #0
  412c08:	bl	402c20 <dcgettext@plt>
  412c0c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xccd0>
  412c10:	add	x2, x2, #0xd60
  412c14:	mov	x1, x0
  412c18:	mov	w0, #0x1                   	// #1
  412c1c:	bl	4028b0 <__printf_chk@plt>
  412c20:	mov	w2, #0x5                   	// #5
  412c24:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412c28:	add	x1, x1, #0x668
  412c2c:	mov	x0, #0x0                   	// #0
  412c30:	bl	402c20 <dcgettext@plt>
  412c34:	adrp	x3, 422000 <_obstack_memory_used@@Base+0xecd0>
  412c38:	add	x3, x3, #0x680
  412c3c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xdcd0>
  412c40:	add	x2, x2, #0x4d0
  412c44:	mov	x1, x0
  412c48:	mov	w0, #0x1                   	// #1
  412c4c:	bl	4028b0 <__printf_chk@plt>
  412c50:	mov	w2, #0x5                   	// #5
  412c54:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412c58:	add	x1, x1, #0x6a8
  412c5c:	mov	x0, #0x0                   	// #0
  412c60:	bl	402c20 <dcgettext@plt>
  412c64:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xecd0>
  412c68:	add	x2, x2, #0x6d0
  412c6c:	mov	x1, x0
  412c70:	mov	w0, #0x1                   	// #1
  412c74:	bl	4028b0 <__printf_chk@plt>
  412c78:	ldp	x29, x30, [sp], #16
  412c7c:	ret
  412c80:	stp	x29, x30, [sp, #-32]!
  412c84:	mov	x29, sp
  412c88:	str	x19, [sp, #16]
  412c8c:	mov	x19, x0
  412c90:	bl	402800 <malloc@plt>
  412c94:	cmp	x0, #0x0
  412c98:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  412c9c:	b.ne	412cac <wcrtomb@plt+0xff6c>  // b.any
  412ca0:	ldr	x19, [sp, #16]
  412ca4:	ldp	x29, x30, [sp], #32
  412ca8:	ret
  412cac:	bl	412ef8 <wcrtomb@plt+0x101b8>
  412cb0:	stp	x29, x30, [sp, #-16]!
  412cb4:	mov	x29, sp
  412cb8:	mul	x3, x0, x1
  412cbc:	umulh	x2, x0, x1
  412cc0:	cmp	x2, #0x0
  412cc4:	cset	x2, ne  // ne = any
  412cc8:	cmp	x3, #0x0
  412ccc:	csinc	x2, x2, xzr, ge  // ge = tcont
  412cd0:	cbnz	w2, 412ce4 <wcrtomb@plt+0xffa4>
  412cd4:	mul	x0, x0, x1
  412cd8:	bl	412c80 <wcrtomb@plt+0xff40>
  412cdc:	ldp	x29, x30, [sp], #16
  412ce0:	ret
  412ce4:	bl	412ef8 <wcrtomb@plt+0x101b8>
  412ce8:	stp	x29, x30, [sp, #-16]!
  412cec:	mov	x29, sp
  412cf0:	bl	412c80 <wcrtomb@plt+0xff40>
  412cf4:	ldp	x29, x30, [sp], #16
  412cf8:	ret
  412cfc:	stp	x29, x30, [sp, #-32]!
  412d00:	mov	x29, sp
  412d04:	cmp	x1, #0x0
  412d08:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  412d0c:	b.ne	412d34 <wcrtomb@plt+0xfff4>  // b.any
  412d10:	str	x19, [sp, #16]
  412d14:	mov	x19, x1
  412d18:	bl	402930 <realloc@plt>
  412d1c:	cmp	x0, #0x0
  412d20:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  412d24:	b.ne	412d40 <wcrtomb@plt+0x10000>  // b.any
  412d28:	ldr	x19, [sp, #16]
  412d2c:	ldp	x29, x30, [sp], #32
  412d30:	ret
  412d34:	bl	402ae0 <free@plt>
  412d38:	mov	x0, #0x0                   	// #0
  412d3c:	b	412d2c <wcrtomb@plt+0xffec>
  412d40:	bl	412ef8 <wcrtomb@plt+0x101b8>
  412d44:	stp	x29, x30, [sp, #-16]!
  412d48:	mov	x29, sp
  412d4c:	mul	x4, x1, x2
  412d50:	umulh	x3, x1, x2
  412d54:	cmp	x3, #0x0
  412d58:	cset	x3, ne  // ne = any
  412d5c:	cmp	x4, #0x0
  412d60:	csinc	x3, x3, xzr, ge  // ge = tcont
  412d64:	cbnz	w3, 412d78 <wcrtomb@plt+0x10038>
  412d68:	mul	x1, x1, x2
  412d6c:	bl	412cfc <wcrtomb@plt+0xffbc>
  412d70:	ldp	x29, x30, [sp], #16
  412d74:	ret
  412d78:	bl	412ef8 <wcrtomb@plt+0x101b8>
  412d7c:	stp	x29, x30, [sp, #-16]!
  412d80:	mov	x29, sp
  412d84:	ldr	x3, [x1]
  412d88:	cbz	x0, 412dbc <wcrtomb@plt+0x1007c>
  412d8c:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  412d90:	movk	x4, #0x5554
  412d94:	udiv	x4, x4, x2
  412d98:	cmp	x4, x3
  412d9c:	b.ls	412df0 <wcrtomb@plt+0x100b0>  // b.plast
  412da0:	add	x4, x3, #0x1
  412da4:	add	x3, x4, x3, lsr #1
  412da8:	str	x3, [x1]
  412dac:	mul	x1, x3, x2
  412db0:	bl	412cfc <wcrtomb@plt+0xffbc>
  412db4:	ldp	x29, x30, [sp], #16
  412db8:	ret
  412dbc:	cbnz	x3, 412dd0 <wcrtomb@plt+0x10090>
  412dc0:	mov	x3, #0x80                  	// #128
  412dc4:	udiv	x3, x3, x2
  412dc8:	cmp	x2, #0x80
  412dcc:	cinc	x3, x3, hi  // hi = pmore
  412dd0:	mul	x5, x3, x2
  412dd4:	umulh	x4, x3, x2
  412dd8:	cmp	x4, #0x0
  412ddc:	cset	x4, ne  // ne = any
  412de0:	cmp	x5, #0x0
  412de4:	csinc	x4, x4, xzr, ge  // ge = tcont
  412de8:	cbz	w4, 412da8 <wcrtomb@plt+0x10068>
  412dec:	bl	412ef8 <wcrtomb@plt+0x101b8>
  412df0:	bl	412ef8 <wcrtomb@plt+0x101b8>
  412df4:	stp	x29, x30, [sp, #-16]!
  412df8:	mov	x29, sp
  412dfc:	mov	x2, x1
  412e00:	ldr	x1, [x1]
  412e04:	cbz	x0, 412e30 <wcrtomb@plt+0x100f0>
  412e08:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  412e0c:	movk	x3, #0x5553
  412e10:	cmp	x1, x3
  412e14:	b.hi	412e3c <wcrtomb@plt+0x100fc>  // b.pmore
  412e18:	add	x3, x1, #0x1
  412e1c:	add	x1, x3, x1, lsr #1
  412e20:	str	x1, [x2]
  412e24:	bl	412cfc <wcrtomb@plt+0xffbc>
  412e28:	ldp	x29, x30, [sp], #16
  412e2c:	ret
  412e30:	cbz	x1, 412e40 <wcrtomb@plt+0x10100>
  412e34:	tbz	x1, #63, 412e20 <wcrtomb@plt+0x100e0>
  412e38:	bl	412ef8 <wcrtomb@plt+0x101b8>
  412e3c:	bl	412ef8 <wcrtomb@plt+0x101b8>
  412e40:	mov	x1, #0x80                  	// #128
  412e44:	b	412e20 <wcrtomb@plt+0x100e0>
  412e48:	stp	x29, x30, [sp, #-16]!
  412e4c:	mov	x29, sp
  412e50:	mul	x3, x0, x1
  412e54:	umulh	x2, x0, x1
  412e58:	cmp	x2, #0x0
  412e5c:	cset	x2, ne  // ne = any
  412e60:	cmp	x3, #0x0
  412e64:	csinc	x2, x2, xzr, ge  // ge = tcont
  412e68:	cbnz	w2, 412e7c <wcrtomb@plt+0x1013c>
  412e6c:	bl	402910 <calloc@plt>
  412e70:	cbz	x0, 412e7c <wcrtomb@plt+0x1013c>
  412e74:	ldp	x29, x30, [sp], #16
  412e78:	ret
  412e7c:	bl	412ef8 <wcrtomb@plt+0x101b8>
  412e80:	stp	x29, x30, [sp, #-16]!
  412e84:	mov	x29, sp
  412e88:	mov	x1, #0x1                   	// #1
  412e8c:	bl	412e48 <wcrtomb@plt+0x10108>
  412e90:	ldp	x29, x30, [sp], #16
  412e94:	ret
  412e98:	stp	x29, x30, [sp, #-32]!
  412e9c:	mov	x29, sp
  412ea0:	stp	x19, x20, [sp, #16]
  412ea4:	mov	x20, x0
  412ea8:	mov	x19, x1
  412eac:	mov	x0, x1
  412eb0:	bl	412c80 <wcrtomb@plt+0xff40>
  412eb4:	mov	x2, x19
  412eb8:	mov	x1, x20
  412ebc:	bl	402650 <memcpy@plt>
  412ec0:	ldp	x19, x20, [sp, #16]
  412ec4:	ldp	x29, x30, [sp], #32
  412ec8:	ret
  412ecc:	stp	x29, x30, [sp, #-32]!
  412ed0:	mov	x29, sp
  412ed4:	str	x19, [sp, #16]
  412ed8:	mov	x19, x0
  412edc:	bl	402690 <strlen@plt>
  412ee0:	add	x1, x0, #0x1
  412ee4:	mov	x0, x19
  412ee8:	bl	412e98 <wcrtomb@plt+0x10158>
  412eec:	ldr	x19, [sp, #16]
  412ef0:	ldp	x29, x30, [sp], #32
  412ef4:	ret
  412ef8:	stp	x29, x30, [sp, #-32]!
  412efc:	mov	x29, sp
  412f00:	str	x19, [sp, #16]
  412f04:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  412f08:	ldr	w19, [x0, #1248]
  412f0c:	mov	w2, #0x5                   	// #5
  412f10:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  412f14:	add	x1, x1, #0x720
  412f18:	mov	x0, #0x0                   	// #0
  412f1c:	bl	402c20 <dcgettext@plt>
  412f20:	mov	x3, x0
  412f24:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xdcd0>
  412f28:	add	x2, x2, #0x940
  412f2c:	mov	w1, #0x0                   	// #0
  412f30:	mov	w0, w19
  412f34:	bl	4026d0 <error@plt>
  412f38:	bl	4029e0 <abort@plt>
  412f3c:	stp	x29, x30, [sp, #-64]!
  412f40:	mov	x29, sp
  412f44:	stp	x19, x20, [sp, #16]
  412f48:	stp	x21, x22, [sp, #32]
  412f4c:	mov	x19, x0
  412f50:	mov	x22, x1
  412f54:	mov	x21, x2
  412f58:	cmp	x0, #0x0
  412f5c:	add	x0, sp, #0x3c
  412f60:	csel	x19, x0, x19, eq  // eq = none
  412f64:	mov	x0, x19
  412f68:	bl	402640 <mbrtowc@plt>
  412f6c:	mov	x20, x0
  412f70:	cmp	x21, #0x0
  412f74:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  412f78:	b.hi	412f90 <wcrtomb@plt+0x10250>  // b.pmore
  412f7c:	mov	x0, x20
  412f80:	ldp	x19, x20, [sp, #16]
  412f84:	ldp	x21, x22, [sp, #32]
  412f88:	ldp	x29, x30, [sp], #64
  412f8c:	ret
  412f90:	mov	w0, #0x0                   	// #0
  412f94:	bl	420028 <_obstack_memory_used@@Base+0xccf8>
  412f98:	and	w0, w0, #0xff
  412f9c:	cbnz	w0, 412f7c <wcrtomb@plt+0x1023c>
  412fa0:	ldrb	w0, [x22]
  412fa4:	str	w0, [x19]
  412fa8:	mov	x20, #0x1                   	// #1
  412fac:	b	412f7c <wcrtomb@plt+0x1023c>
  412fb0:	stp	x29, x30, [sp, #-16]!
  412fb4:	mov	x29, sp
  412fb8:	mov	x2, x0
  412fbc:	ldrb	w0, [x0, #80]
  412fc0:	tbz	w0, #0, 412fd8 <wcrtomb@plt+0x10298>
  412fc4:	ldr	x3, [x2, #56]
  412fc8:	ldr	x0, [x2, #72]
  412fcc:	blr	x3
  412fd0:	ldp	x29, x30, [sp], #16
  412fd4:	ret
  412fd8:	ldr	x2, [x2, #56]
  412fdc:	mov	x0, x1
  412fe0:	blr	x2
  412fe4:	b	412fd0 <wcrtomb@plt+0x10290>
  412fe8:	stp	x29, x30, [sp, #-16]!
  412fec:	mov	x29, sp
  412ff0:	mov	x2, x0
  412ff4:	ldrb	w0, [x0, #80]
  412ff8:	tbz	w0, #0, 413010 <wcrtomb@plt+0x102d0>
  412ffc:	ldr	x3, [x2, #64]
  413000:	ldr	x0, [x2, #72]
  413004:	blr	x3
  413008:	ldp	x29, x30, [sp], #16
  41300c:	ret
  413010:	ldr	x2, [x2, #64]
  413014:	mov	x0, x1
  413018:	blr	x2
  41301c:	b	413008 <wcrtomb@plt+0x102c8>
  413020:	stp	x29, x30, [sp, #-48]!
  413024:	mov	x29, sp
  413028:	stp	x19, x20, [sp, #16]
  41302c:	str	x21, [sp, #32]
  413030:	mov	x19, x0
  413034:	cmp	x2, #0x0
  413038:	mov	x0, #0x10                  	// #16
  41303c:	csel	x20, x2, x0, ne  // ne = any
  413040:	cmp	x1, #0x0
  413044:	mov	x0, #0xfe0                 	// #4064
  413048:	csel	x1, x1, x0, ne  // ne = any
  41304c:	str	x1, [x19]
  413050:	sub	x21, x20, #0x1
  413054:	str	x21, [x19, #48]
  413058:	mov	x0, x19
  41305c:	bl	412fb0 <wcrtomb@plt+0x10270>
  413060:	str	x0, [x19, #8]
  413064:	cbz	x0, 4130b4 <wcrtomb@plt+0x10374>
  413068:	add	x2, x0, #0x10
  41306c:	add	x2, x2, x21
  413070:	neg	x20, x20
  413074:	and	x20, x2, x20
  413078:	str	x20, [x19, #16]
  41307c:	str	x20, [x19, #24]
  413080:	ldr	x1, [x19]
  413084:	add	x1, x0, x1
  413088:	str	x1, [x0]
  41308c:	str	x1, [x19, #32]
  413090:	str	xzr, [x0, #8]
  413094:	ldrb	w0, [x19, #80]
  413098:	and	w0, w0, #0xfffffff9
  41309c:	strb	w0, [x19, #80]
  4130a0:	mov	w0, #0x1                   	// #1
  4130a4:	ldp	x19, x20, [sp, #16]
  4130a8:	ldr	x21, [sp, #32]
  4130ac:	ldp	x29, x30, [sp], #48
  4130b0:	ret
  4130b4:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4130b8:	ldr	x0, [x0, #1240]
  4130bc:	blr	x0
  4130c0:	stp	x29, x30, [sp, #-32]!
  4130c4:	mov	x29, sp
  4130c8:	str	x19, [sp, #16]
  4130cc:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4130d0:	ldr	x19, [x0, #1264]
  4130d4:	mov	w2, #0x5                   	// #5
  4130d8:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  4130dc:	add	x1, x1, #0x720
  4130e0:	mov	x0, #0x0                   	// #0
  4130e4:	bl	402c20 <dcgettext@plt>
  4130e8:	mov	x3, x0
  4130ec:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xecd0>
  4130f0:	add	x2, x2, #0x3d0
  4130f4:	mov	w1, #0x1                   	// #1
  4130f8:	mov	x0, x19
  4130fc:	bl	402a90 <__fprintf_chk@plt>
  413100:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  413104:	ldr	w0, [x0, #1248]
  413108:	bl	4026c0 <exit@plt>

000000000041310c <_obstack_begin@@Base>:
  41310c:	stp	x29, x30, [sp, #-16]!
  413110:	mov	x29, sp
  413114:	str	x3, [x0, #56]
  413118:	str	x4, [x0, #64]
  41311c:	ldrb	w3, [x0, #80]
  413120:	and	w3, w3, #0xfffffffe
  413124:	strb	w3, [x0, #80]
  413128:	bl	413020 <wcrtomb@plt+0x102e0>
  41312c:	ldp	x29, x30, [sp], #16
  413130:	ret

0000000000413134 <_obstack_begin_1@@Base>:
  413134:	stp	x29, x30, [sp, #-16]!
  413138:	mov	x29, sp
  41313c:	str	x3, [x0, #56]
  413140:	str	x4, [x0, #64]
  413144:	str	x5, [x0, #72]
  413148:	ldrb	w3, [x0, #80]
  41314c:	orr	w3, w3, #0x1
  413150:	strb	w3, [x0, #80]
  413154:	bl	413020 <wcrtomb@plt+0x102e0>
  413158:	ldp	x29, x30, [sp], #16
  41315c:	ret

0000000000413160 <_obstack_newchunk@@Base>:
  413160:	stp	x29, x30, [sp, #-64]!
  413164:	mov	x29, sp
  413168:	stp	x19, x20, [sp, #16]
  41316c:	stp	x21, x22, [sp, #32]
  413170:	str	x23, [sp, #48]
  413174:	mov	x19, x0
  413178:	ldr	x22, [x0, #8]
  41317c:	ldr	x21, [x0, #24]
  413180:	ldr	x0, [x0, #16]
  413184:	sub	x21, x21, x0
  413188:	add	x1, x21, x1
  41318c:	ldr	x0, [x19, #48]
  413190:	add	x0, x1, x0
  413194:	lsr	x20, x21, #3
  413198:	add	x20, x20, #0x64
  41319c:	add	x20, x20, x0
  4131a0:	ldr	x2, [x19]
  4131a4:	cmp	x2, x0
  4131a8:	csel	x2, x2, x0, cs  // cs = hs, nlast
  4131ac:	cmp	x2, x20
  4131b0:	csel	x20, x2, x20, cs  // cs = hs, nlast
  4131b4:	cmp	x21, x1
  4131b8:	ccmp	x1, x0, #0x2, ls  // ls = plast
  4131bc:	b.hi	413258 <_obstack_newchunk@@Base+0xf8>  // b.pmore
  4131c0:	mov	x1, x20
  4131c4:	mov	x0, x19
  4131c8:	bl	412fb0 <wcrtomb@plt+0x10270>
  4131cc:	mov	x23, x0
  4131d0:	cbz	x0, 413258 <_obstack_newchunk@@Base+0xf8>
  4131d4:	str	x0, [x19, #8]
  4131d8:	str	x22, [x0, #8]
  4131dc:	add	x2, x0, x20
  4131e0:	str	x2, [x19, #32]
  4131e4:	mov	x1, x0
  4131e8:	str	x2, [x1], #16
  4131ec:	ldr	x20, [x19, #48]
  4131f0:	add	x1, x1, x20
  4131f4:	bic	x20, x1, x20
  4131f8:	mov	x2, x21
  4131fc:	ldr	x1, [x19, #16]
  413200:	mov	x0, x20
  413204:	bl	402650 <memcpy@plt>
  413208:	ldrb	w0, [x19, #80]
  41320c:	tbnz	w0, #1, 41322c <_obstack_newchunk@@Base+0xcc>
  413210:	ldr	x0, [x19, #48]
  413214:	add	x1, x22, #0x10
  413218:	add	x1, x1, x0
  41321c:	bic	x0, x1, x0
  413220:	ldr	x1, [x19, #16]
  413224:	cmp	x1, x0
  413228:	b.eq	413264 <_obstack_newchunk@@Base+0x104>  // b.none
  41322c:	str	x20, [x19, #16]
  413230:	add	x20, x20, x21
  413234:	str	x20, [x19, #24]
  413238:	ldrb	w0, [x19, #80]
  41323c:	and	w0, w0, #0xfffffffd
  413240:	strb	w0, [x19, #80]
  413244:	ldp	x19, x20, [sp, #16]
  413248:	ldp	x21, x22, [sp, #32]
  41324c:	ldr	x23, [sp, #48]
  413250:	ldp	x29, x30, [sp], #64
  413254:	ret
  413258:	adrp	x0, 438000 <_obstack_memory_used@@Base+0x24cd0>
  41325c:	ldr	x0, [x0, #1240]
  413260:	blr	x0
  413264:	ldr	x0, [x22, #8]
  413268:	str	x0, [x23, #8]
  41326c:	mov	x1, x22
  413270:	mov	x0, x19
  413274:	bl	412fe8 <wcrtomb@plt+0x102a8>
  413278:	b	41322c <_obstack_newchunk@@Base+0xcc>

000000000041327c <_obstack_allocated_p@@Base>:
  41327c:	ldr	x0, [x0, #8]
  413280:	cbnz	x0, 413290 <_obstack_allocated_p@@Base+0x14>
  413284:	b	4132a4 <_obstack_allocated_p@@Base+0x28>
  413288:	ldr	x0, [x0, #8]
  41328c:	cbz	x0, 4132a4 <_obstack_allocated_p@@Base+0x28>
  413290:	cmp	x1, x0
  413294:	b.ls	413288 <_obstack_allocated_p@@Base+0xc>  // b.plast
  413298:	ldr	x2, [x0]
  41329c:	cmp	x2, x1
  4132a0:	b.cc	413288 <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  4132a4:	cmp	x0, #0x0
  4132a8:	cset	w0, ne  // ne = any
  4132ac:	ret

00000000004132b0 <_obstack_free@@Base>:
  4132b0:	stp	x29, x30, [sp, #-48]!
  4132b4:	mov	x29, sp
  4132b8:	stp	x19, x20, [sp, #16]
  4132bc:	str	x21, [sp, #32]
  4132c0:	mov	x19, x0
  4132c4:	mov	x21, x1
  4132c8:	ldr	x1, [x0, #8]
  4132cc:	cbnz	x1, 4132f8 <_obstack_free@@Base+0x48>
  4132d0:	cbz	x21, 413320 <_obstack_free@@Base+0x70>
  4132d4:	bl	4029e0 <abort@plt>
  4132d8:	ldr	x20, [x1, #8]
  4132dc:	mov	x0, x19
  4132e0:	bl	412fe8 <wcrtomb@plt+0x102a8>
  4132e4:	ldrb	w2, [x19, #80]
  4132e8:	orr	w2, w2, #0x2
  4132ec:	strb	w2, [x19, #80]
  4132f0:	cbz	x20, 4132d0 <_obstack_free@@Base+0x20>
  4132f4:	mov	x1, x20
  4132f8:	cmp	x21, x1
  4132fc:	b.ls	4132d8 <_obstack_free@@Base+0x28>  // b.plast
  413300:	ldr	x0, [x1]
  413304:	cmp	x0, x21
  413308:	b.cc	4132d8 <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  41330c:	str	x21, [x19, #24]
  413310:	str	x21, [x19, #16]
  413314:	ldr	x0, [x1]
  413318:	str	x0, [x19, #32]
  41331c:	str	x1, [x19, #8]
  413320:	ldp	x19, x20, [sp, #16]
  413324:	ldr	x21, [sp, #32]
  413328:	ldp	x29, x30, [sp], #48
  41332c:	ret

0000000000413330 <_obstack_memory_used@@Base>:
  413330:	ldr	x1, [x0, #8]
  413334:	cbz	x1, 413354 <_obstack_memory_used@@Base+0x24>
  413338:	mov	x0, #0x0                   	// #0
  41333c:	ldr	x2, [x1]
  413340:	sub	x2, x2, x1
  413344:	add	x0, x0, x2
  413348:	ldr	x1, [x1, #8]
  41334c:	cbnz	x1, 41333c <_obstack_memory_used@@Base+0xc>
  413350:	ret
  413354:	mov	x0, #0x0                   	// #0
  413358:	b	413350 <_obstack_memory_used@@Base+0x20>
  41335c:	mov	x2, x0
  413360:	ldr	w0, [x0, #144]
  413364:	cmp	w0, #0x1
  413368:	b.eq	4133a0 <_obstack_memory_used@@Base+0x70>  // b.none
  41336c:	add	x1, x1, #0x1
  413370:	ldr	x3, [x2, #48]
  413374:	cmp	x1, x3
  413378:	b.ge	4133a4 <_obstack_memory_used@@Base+0x74>  // b.tcont
  41337c:	ldr	x4, [x2, #16]
  413380:	mov	w0, #0x1                   	// #1
  413384:	ldr	w2, [x4, x1, lsl #2]
  413388:	cmn	w2, #0x1
  41338c:	b.ne	4133a0 <_obstack_memory_used@@Base+0x70>  // b.any
  413390:	add	w0, w0, #0x1
  413394:	add	x1, x1, #0x1
  413398:	cmp	x3, x1
  41339c:	b.ne	413384 <_obstack_memory_used@@Base+0x54>  // b.any
  4133a0:	ret
  4133a4:	mov	w0, #0x1                   	// #1
  4133a8:	b	4133a0 <_obstack_memory_used@@Base+0x70>
  4133ac:	ldr	w2, [x0, #144]
  4133b0:	cmp	w2, #0x1
  4133b4:	b.eq	4133c4 <_obstack_memory_used@@Base+0x94>  // b.none
  4133b8:	ldr	x0, [x0, #16]
  4133bc:	ldr	w0, [x0, x1, lsl #2]
  4133c0:	ret
  4133c4:	ldr	x0, [x0, #8]
  4133c8:	ldrb	w0, [x0, x1]
  4133cc:	b	4133c0 <_obstack_memory_used@@Base+0x90>
  4133d0:	ldr	x1, [x0, #88]
  4133d4:	ldr	x4, [x0, #64]
  4133d8:	cmp	x4, x1
  4133dc:	csel	x4, x4, x1, le
  4133e0:	ldr	x1, [x0, #48]
  4133e4:	cmp	x4, x1
  4133e8:	b.le	413424 <_obstack_memory_used@@Base+0xf4>
  4133ec:	ldr	x2, [x0]
  4133f0:	ldr	x3, [x0, #40]
  4133f4:	add	x2, x2, x1
  4133f8:	ldrb	w2, [x2, x3]
  4133fc:	ldr	x3, [x0, #120]
  413400:	ldrb	w3, [x3, x2]
  413404:	ldr	x2, [x0, #8]
  413408:	strb	w3, [x2, x1]
  41340c:	add	x1, x1, #0x1
  413410:	cmp	x4, x1
  413414:	b.ne	4133ec <_obstack_memory_used@@Base+0xbc>  // b.any
  413418:	str	x4, [x0, #48]
  41341c:	str	x4, [x0, #56]
  413420:	ret
  413424:	mov	x4, x1
  413428:	b	413418 <_obstack_memory_used@@Base+0xe8>
  41342c:	mov	x3, x0
  413430:	cmp	x0, #0x0
  413434:	cset	w0, eq  // eq = none
  413438:	cmp	x1, #0x0
  41343c:	csinc	w0, w0, wzr, ne  // ne = any
  413440:	cbnz	w0, 413480 <_obstack_memory_used@@Base+0x150>
  413444:	ldr	x2, [x3, #8]
  413448:	ldr	x4, [x1, #8]
  41344c:	cmp	x2, x4
  413450:	b.ne	413484 <_obstack_memory_used@@Base+0x154>  // b.any
  413454:	subs	x2, x2, #0x1
  413458:	b.mi	413478 <_obstack_memory_used@@Base+0x148>  // b.first
  41345c:	ldr	x5, [x3, #16]
  413460:	ldr	x4, [x1, #16]
  413464:	ldr	x5, [x5, x2, lsl #3]
  413468:	ldr	x4, [x4, x2, lsl #3]
  41346c:	cmp	x5, x4
  413470:	b.eq	413454 <_obstack_memory_used@@Base+0x124>  // b.none
  413474:	b	413484 <_obstack_memory_used@@Base+0x154>
  413478:	mov	w0, #0x1                   	// #1
  41347c:	b	413484 <_obstack_memory_used@@Base+0x154>
  413480:	mov	w0, #0x0                   	// #0
  413484:	ret
  413488:	ldr	x3, [x0, #8]
  41348c:	cmp	x3, #0x0
  413490:	b.le	4134e0 <_obstack_memory_used@@Base+0x1b0>
  413494:	sub	x3, x3, #0x1
  413498:	mov	x4, #0x0                   	// #0
  41349c:	cmp	x3, x4
  4134a0:	b.ls	4134cc <_obstack_memory_used@@Base+0x19c>  // b.plast
  4134a4:	add	x2, x3, x4
  4134a8:	lsr	x2, x2, #1
  4134ac:	ldr	x5, [x0, #16]
  4134b0:	ldr	x5, [x5, x2, lsl #3]
  4134b4:	cmp	x5, x1
  4134b8:	b.lt	4134c4 <_obstack_memory_used@@Base+0x194>  // b.tstop
  4134bc:	mov	x3, x2
  4134c0:	b	41349c <_obstack_memory_used@@Base+0x16c>
  4134c4:	add	x4, x2, #0x1
  4134c8:	b	41349c <_obstack_memory_used@@Base+0x16c>
  4134cc:	ldr	x0, [x0, #16]
  4134d0:	ldr	x0, [x0, x4, lsl #3]
  4134d4:	cmp	x0, x1
  4134d8:	csinc	x0, xzr, x4, ne  // ne = any
  4134dc:	ret
  4134e0:	mov	x0, #0x0                   	// #0
  4134e4:	b	4134dc <_obstack_memory_used@@Base+0x1ac>
  4134e8:	tbnz	x1, #63, 413530 <_obstack_memory_used@@Base+0x200>
  4134ec:	ldr	x2, [x0, #8]
  4134f0:	cmp	x2, x1
  4134f4:	b.le	413530 <_obstack_memory_used@@Base+0x200>
  4134f8:	sub	x2, x2, #0x1
  4134fc:	str	x2, [x0, #8]
  413500:	cmp	x2, x1
  413504:	b.le	413530 <_obstack_memory_used@@Base+0x200>
  413508:	add	x2, x1, #0x1
  41350c:	lsl	x2, x2, #3
  413510:	ldr	x3, [x0, #16]
  413514:	ldr	x4, [x3, x2]
  413518:	str	x4, [x3, x1, lsl #3]
  41351c:	add	x1, x1, #0x1
  413520:	add	x2, x2, #0x8
  413524:	ldr	x3, [x0, #8]
  413528:	cmp	x3, x1
  41352c:	b.gt	413510 <_obstack_memory_used@@Base+0x1e0>
  413530:	ret
  413534:	ldrb	w2, [x1, #48]
  413538:	cmp	w2, #0x4
  41353c:	b.eq	413550 <_obstack_memory_used@@Base+0x220>  // b.none
  413540:	cmp	w2, #0x11
  413544:	b.eq	413580 <_obstack_memory_used@@Base+0x250>  // b.none
  413548:	mov	w0, #0x0                   	// #0
  41354c:	ret
  413550:	ldr	x2, [x0, #224]
  413554:	cbz	x2, 413548 <_obstack_memory_used@@Base+0x218>
  413558:	ldrsw	x3, [x1, #40]
  41355c:	ldr	x2, [x2, x3, lsl #3]
  413560:	str	x2, [x1, #40]
  413564:	mov	w1, #0x1                   	// #1
  413568:	lsl	w1, w1, w2
  41356c:	sxtw	x1, w1
  413570:	ldr	x2, [x0, #160]
  413574:	orr	x1, x2, x1
  413578:	str	x1, [x0, #160]
  41357c:	b	413548 <_obstack_memory_used@@Base+0x218>
  413580:	ldr	x2, [x1, #8]
  413584:	cbz	x2, 413548 <_obstack_memory_used@@Base+0x218>
  413588:	ldrb	w3, [x2, #48]
  41358c:	cmp	w3, #0x11
  413590:	b.ne	413548 <_obstack_memory_used@@Base+0x218>  // b.any
  413594:	ldr	x3, [x2, #40]
  413598:	ldr	x2, [x2, #8]
  41359c:	str	x2, [x1, #8]
  4135a0:	cbz	x2, 4135a8 <_obstack_memory_used@@Base+0x278>
  4135a4:	str	x1, [x2]
  4135a8:	ldr	x2, [x0, #224]
  4135ac:	ldr	x1, [x1, #40]
  4135b0:	ldr	x1, [x2, x1, lsl #3]
  4135b4:	str	x1, [x2, x3, lsl #3]
  4135b8:	cmp	x3, #0x3f
  4135bc:	b.gt	413548 <_obstack_memory_used@@Base+0x218>
  4135c0:	mov	x1, #0x1                   	// #1
  4135c4:	lsl	x1, x1, x3
  4135c8:	ldr	x2, [x0, #160]
  4135cc:	bic	x1, x2, x1
  4135d0:	str	x1, [x0, #160]
  4135d4:	b	413548 <_obstack_memory_used@@Base+0x218>
  4135d8:	ldrb	w0, [x1, #48]
  4135dc:	cmp	w0, #0xb
  4135e0:	b.eq	413610 <_obstack_memory_used@@Base+0x2e0>  // b.none
  4135e4:	cmp	w0, #0x10
  4135e8:	b.eq	413620 <_obstack_memory_used@@Base+0x2f0>  // b.none
  4135ec:	ldr	x0, [x1, #8]
  4135f0:	cbz	x0, 4135fc <_obstack_memory_used@@Base+0x2cc>
  4135f4:	ldr	x2, [x1, #32]
  4135f8:	str	x2, [x0, #32]
  4135fc:	ldr	x0, [x1, #16]
  413600:	cbz	x0, 413618 <_obstack_memory_used@@Base+0x2e8>
  413604:	ldr	x1, [x1, #32]
  413608:	str	x1, [x0, #32]
  41360c:	b	413618 <_obstack_memory_used@@Base+0x2e8>
  413610:	ldr	x0, [x1, #8]
  413614:	str	x1, [x0, #32]
  413618:	mov	w0, #0x0                   	// #0
  41361c:	ret
  413620:	ldr	x0, [x1, #8]
  413624:	ldr	x2, [x1, #16]
  413628:	ldr	x2, [x2, #24]
  41362c:	str	x2, [x0, #32]
  413630:	ldr	x0, [x1, #16]
  413634:	ldr	x1, [x1, #32]
  413638:	str	x1, [x0, #32]
  41363c:	b	413618 <_obstack_memory_used@@Base+0x2e8>
  413640:	ldr	x3, [x1, #72]
  413644:	ldr	x4, [x1, #104]
  413648:	cmp	x4, x3
  41364c:	b.le	4136b8 <_obstack_memory_used@@Base+0x388>
  413650:	ldr	x4, [x1, #8]
  413654:	ldrb	w3, [x4, x3]
  413658:	strb	w3, [x0]
  41365c:	ldr	w4, [x1, #144]
  413660:	cmp	w4, #0x1
  413664:	b.le	413688 <_obstack_memory_used@@Base+0x358>
  413668:	ldr	x4, [x1, #72]
  41366c:	ldr	x5, [x1, #48]
  413670:	cmp	x4, x5
  413674:	b.eq	413688 <_obstack_memory_used@@Base+0x358>  // b.none
  413678:	ldr	x5, [x1, #16]
  41367c:	ldr	w4, [x5, x4, lsl #2]
  413680:	cmn	w4, #0x1
  413684:	b.eq	4136c8 <_obstack_memory_used@@Base+0x398>  // b.none
  413688:	cmp	w3, #0x5c
  41368c:	b.eq	4136d8 <_obstack_memory_used@@Base+0x3a8>  // b.none
  413690:	cmp	w3, #0x5b
  413694:	b.eq	413720 <_obstack_memory_used@@Base+0x3f0>  // b.none
  413698:	cmp	w3, #0x5d
  41369c:	b.eq	4137c0 <_obstack_memory_used@@Base+0x490>  // b.none
  4136a0:	cmp	w3, #0x5e
  4136a4:	b.ne	4137a8 <_obstack_memory_used@@Base+0x478>  // b.any
  4136a8:	mov	w1, #0x19                  	// #25
  4136ac:	strb	w1, [x0, #8]
  4136b0:	mov	w0, #0x1                   	// #1
  4136b4:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  4136b8:	mov	w1, #0x2                   	// #2
  4136bc:	strb	w1, [x0, #8]
  4136c0:	mov	w0, #0x0                   	// #0
  4136c4:	ret
  4136c8:	mov	w1, #0x1                   	// #1
  4136cc:	strb	w1, [x0, #8]
  4136d0:	mov	w0, #0x1                   	// #1
  4136d4:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  4136d8:	tbz	w2, #0, 4136f0 <_obstack_memory_used@@Base+0x3c0>
  4136dc:	ldr	x2, [x1, #72]
  4136e0:	add	x2, x2, #0x1
  4136e4:	ldr	x3, [x1, #88]
  4136e8:	cmp	x2, x3
  4136ec:	b.lt	413700 <_obstack_memory_used@@Base+0x3d0>  // b.tstop
  4136f0:	mov	w1, #0x1                   	// #1
  4136f4:	strb	w1, [x0, #8]
  4136f8:	mov	w0, #0x1                   	// #1
  4136fc:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  413700:	str	x2, [x1, #72]
  413704:	ldr	x1, [x1, #8]
  413708:	ldrb	w1, [x1, x2]
  41370c:	strb	w1, [x0]
  413710:	mov	w1, #0x1                   	// #1
  413714:	strb	w1, [x0, #8]
  413718:	mov	w0, #0x1                   	// #1
  41371c:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  413720:	ldr	x3, [x1, #72]
  413724:	add	x5, x3, #0x1
  413728:	ldr	x4, [x1, #88]
  41372c:	cmp	x5, x4
  413730:	b.ge	41375c <_obstack_memory_used@@Base+0x42c>  // b.tcont
  413734:	ldr	x1, [x1, #8]
  413738:	add	x3, x1, x3
  41373c:	ldrb	w1, [x3, #1]
  413740:	strb	w1, [x0]
  413744:	cmp	w1, #0x3a
  413748:	b.eq	413794 <_obstack_memory_used@@Base+0x464>  // b.none
  41374c:	cmp	w1, #0x3d
  413750:	b.eq	413784 <_obstack_memory_used@@Base+0x454>  // b.none
  413754:	cmp	w1, #0x2e
  413758:	b.eq	413774 <_obstack_memory_used@@Base+0x444>  // b.none
  41375c:	mov	w1, #0x1                   	// #1
  413760:	strb	w1, [x0, #8]
  413764:	mov	w1, #0x5b                  	// #91
  413768:	strb	w1, [x0]
  41376c:	mov	w0, #0x1                   	// #1
  413770:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  413774:	mov	w1, #0x1a                  	// #26
  413778:	strb	w1, [x0, #8]
  41377c:	mov	w0, #0x2                   	// #2
  413780:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  413784:	mov	w1, #0x1c                  	// #28
  413788:	strb	w1, [x0, #8]
  41378c:	mov	w0, #0x2                   	// #2
  413790:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  413794:	tbz	w2, #2, 41375c <_obstack_memory_used@@Base+0x42c>
  413798:	mov	w1, #0x1e                  	// #30
  41379c:	strb	w1, [x0, #8]
  4137a0:	mov	w0, #0x2                   	// #2
  4137a4:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  4137a8:	cmp	w3, #0x2d
  4137ac:	b.ne	4136f0 <_obstack_memory_used@@Base+0x3c0>  // b.any
  4137b0:	mov	w1, #0x16                  	// #22
  4137b4:	strb	w1, [x0, #8]
  4137b8:	mov	w0, #0x1                   	// #1
  4137bc:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  4137c0:	mov	w1, #0x15                  	// #21
  4137c4:	strb	w1, [x0, #8]
  4137c8:	mov	w0, #0x1                   	// #1
  4137cc:	b	4136c4 <_obstack_memory_used@@Base+0x394>
  4137d0:	ldrb	w2, [x1, #48]
  4137d4:	cmp	w2, #0x11
  4137d8:	b.eq	4137e4 <_obstack_memory_used@@Base+0x4b4>  // b.none
  4137dc:	mov	w0, #0x0                   	// #0
  4137e0:	ret
  4137e4:	ldr	x2, [x1, #40]
  4137e8:	cmp	x0, x2
  4137ec:	b.ne	4137dc <_obstack_memory_used@@Base+0x4ac>  // b.any
  4137f0:	ldrb	w0, [x1, #50]
  4137f4:	orr	w0, w0, #0x8
  4137f8:	strb	w0, [x1, #50]
  4137fc:	b	4137dc <_obstack_memory_used@@Base+0x4ac>
  413800:	stp	x29, x30, [sp, #-144]!
  413804:	mov	x29, sp
  413808:	stp	x21, x22, [sp, #32]
  41380c:	stp	x23, x24, [sp, #48]
  413810:	stp	x27, x28, [sp, #80]
  413814:	mov	x27, x0
  413818:	str	w1, [sp, #104]
  41381c:	ldr	x23, [x0, #152]
  413820:	add	x22, x3, x3, lsl #1
  413824:	ldr	x0, [x23, #48]
  413828:	add	x22, x0, x22, lsl #3
  41382c:	ldr	x0, [x22, #8]
  413830:	cmp	x0, #0x0
  413834:	b.le	4139c4 <_obstack_memory_used@@Base+0x694>
  413838:	stp	x19, x20, [sp, #16]
  41383c:	stp	x25, x26, [sp, #64]
  413840:	mov	x24, x2
  413844:	mov	x26, x3
  413848:	mov	x25, x4
  41384c:	add	x0, x4, x4, lsl #2
  413850:	lsl	x0, x0, #3
  413854:	str	x0, [sp, #136]
  413858:	mov	x0, #0x1                   	// #1
  41385c:	lsl	x0, x0, x2
  413860:	str	x0, [sp, #120]
  413864:	mvn	w0, w0
  413868:	and	w0, w0, #0xffff
  41386c:	str	w0, [sp, #132]
  413870:	mov	x19, #0x0                   	// #0
  413874:	and	w0, w1, #0x1
  413878:	str	w0, [sp, #128]
  41387c:	and	w28, w1, #0x2
  413880:	b	413948 <_obstack_memory_used@@Base+0x618>
  413884:	ldr	x0, [x23, #40]
  413888:	ldr	x1, [sp, #112]
  41388c:	add	x0, x0, x1
  413890:	ldr	x0, [x0, #16]
  413894:	ldr	x3, [x0]
  413898:	cmp	x26, x3
  41389c:	b.eq	413910 <_obstack_memory_used@@Base+0x5e0>  // b.none
  4138a0:	mov	x4, x25
  4138a4:	mov	x2, x24
  4138a8:	ldr	w1, [sp, #104]
  4138ac:	mov	x0, x27
  4138b0:	bl	413800 <_obstack_memory_used@@Base+0x4d0>
  4138b4:	cmn	w0, #0x1
  4138b8:	b.eq	4139f0 <_obstack_memory_used@@Base+0x6c0>  // b.none
  4138bc:	cbnz	w0, 4138c4 <_obstack_memory_used@@Base+0x594>
  4138c0:	cbnz	w28, 4139fc <_obstack_memory_used@@Base+0x6cc>
  4138c4:	cmp	x24, #0x3f
  4138c8:	b.gt	4138dc <_obstack_memory_used@@Base+0x5ac>
  4138cc:	ldrh	w0, [x20, #34]
  4138d0:	ldr	w1, [sp, #132]
  4138d4:	and	w0, w1, w0
  4138d8:	strh	w0, [x20, #34]
  4138dc:	add	x20, x20, #0x28
  4138e0:	ldurb	w0, [x20, #-8]
  4138e4:	cbz	w0, 413938 <_obstack_memory_used@@Base+0x608>
  4138e8:	ldr	x0, [x20]
  4138ec:	cmp	x0, x21
  4138f0:	b.ne	4138dc <_obstack_memory_used@@Base+0x5ac>  // b.any
  4138f4:	cmp	x24, #0x3f
  4138f8:	b.gt	413884 <_obstack_memory_used@@Base+0x554>
  4138fc:	ldrh	w0, [x20, #34]
  413900:	ldr	x1, [sp, #120]
  413904:	tst	x0, x1
  413908:	b.ne	413884 <_obstack_memory_used@@Base+0x554>  // b.any
  41390c:	b	4138dc <_obstack_memory_used@@Base+0x5ac>
  413910:	ldr	x0, [sp, #104]
  413914:	sbfx	x0, x0, #0, #1
  413918:	ldp	x19, x20, [sp, #16]
  41391c:	ldp	x25, x26, [sp, #64]
  413920:	b	4139cc <_obstack_memory_used@@Base+0x69c>
  413924:	ldr	w0, [sp, #128]
  413928:	cbz	w0, 413938 <_obstack_memory_used@@Base+0x608>
  41392c:	ldr	x0, [x2, x1]
  413930:	cmp	x0, x24
  413934:	b.eq	4139e0 <_obstack_memory_used@@Base+0x6b0>  // b.none
  413938:	add	x19, x19, #0x1
  41393c:	ldr	x0, [x22, #8]
  413940:	cmp	x0, x19
  413944:	b.le	4139bc <_obstack_memory_used@@Base+0x68c>
  413948:	ldr	x0, [x22, #16]
  41394c:	ldr	x21, [x0, x19, lsl #3]
  413950:	lsl	x1, x21, #4
  413954:	ldr	x2, [x23]
  413958:	add	x0, x2, x1
  41395c:	ldrb	w0, [x0, #8]
  413960:	cmp	w0, #0x8
  413964:	b.eq	413924 <_obstack_memory_used@@Base+0x5f4>  // b.none
  413968:	cmp	w0, #0x9
  41396c:	b.eq	41399c <_obstack_memory_used@@Base+0x66c>  // b.none
  413970:	cmp	w0, #0x4
  413974:	b.ne	413938 <_obstack_memory_used@@Base+0x608>  // b.any
  413978:	cmn	x25, #0x1
  41397c:	b.eq	413938 <_obstack_memory_used@@Base+0x608>  // b.none
  413980:	ldr	x20, [x27, #216]
  413984:	ldr	x0, [sp, #136]
  413988:	add	x20, x20, x0
  41398c:	add	x0, x21, x21, lsl #1
  413990:	lsl	x0, x0, #3
  413994:	str	x0, [sp, #112]
  413998:	b	4138e8 <_obstack_memory_used@@Base+0x5b8>
  41399c:	cbz	w28, 413938 <_obstack_memory_used@@Base+0x608>
  4139a0:	ldr	x0, [x2, x1]
  4139a4:	cmp	x0, x24
  4139a8:	b.ne	413938 <_obstack_memory_used@@Base+0x608>  // b.any
  4139ac:	mov	w0, #0x0                   	// #0
  4139b0:	ldp	x19, x20, [sp, #16]
  4139b4:	ldp	x25, x26, [sp, #64]
  4139b8:	b	4139cc <_obstack_memory_used@@Base+0x69c>
  4139bc:	ldp	x19, x20, [sp, #16]
  4139c0:	ldp	x25, x26, [sp, #64]
  4139c4:	ldr	x0, [sp, #104]
  4139c8:	ubfx	x0, x0, #1, #1
  4139cc:	ldp	x21, x22, [sp, #32]
  4139d0:	ldp	x23, x24, [sp, #48]
  4139d4:	ldp	x27, x28, [sp, #80]
  4139d8:	ldp	x29, x30, [sp], #144
  4139dc:	ret
  4139e0:	mov	w0, #0xffffffff            	// #-1
  4139e4:	ldp	x19, x20, [sp, #16]
  4139e8:	ldp	x25, x26, [sp, #64]
  4139ec:	b	4139cc <_obstack_memory_used@@Base+0x69c>
  4139f0:	ldp	x19, x20, [sp, #16]
  4139f4:	ldp	x25, x26, [sp, #64]
  4139f8:	b	4139cc <_obstack_memory_used@@Base+0x69c>
  4139fc:	ldp	x19, x20, [sp, #16]
  413a00:	ldp	x25, x26, [sp, #64]
  413a04:	b	4139cc <_obstack_memory_used@@Base+0x69c>
  413a08:	mov	x7, x0
  413a0c:	mov	x6, x4
  413a10:	add	x1, x1, x1, lsl #2
  413a14:	ldr	x0, [x0, #216]
  413a18:	add	x1, x0, x1, lsl #3
  413a1c:	ldr	x4, [x1, #16]
  413a20:	cmp	x4, x6
  413a24:	b.gt	413a58 <_obstack_memory_used@@Base+0x728>
  413a28:	ldr	x8, [x1, #24]
  413a2c:	mov	w0, #0x1                   	// #1
  413a30:	cmp	x8, x6
  413a34:	b.lt	413a54 <_obstack_memory_used@@Base+0x724>  // b.tstop
  413a38:	cmp	x4, x6
  413a3c:	cset	w1, eq  // eq = none
  413a40:	cmp	x8, x6
  413a44:	b.eq	413a60 <_obstack_memory_used@@Base+0x730>  // b.none
  413a48:	mov	w0, #0x0                   	// #0
  413a4c:	cmp	x4, x6
  413a50:	b.eq	413a64 <_obstack_memory_used@@Base+0x734>  // b.none
  413a54:	ret
  413a58:	mov	w0, #0xffffffff            	// #-1
  413a5c:	ret
  413a60:	orr	w1, w1, #0x2
  413a64:	stp	x29, x30, [sp, #-16]!
  413a68:	mov	x29, sp
  413a6c:	mov	x4, x5
  413a70:	mov	x0, x7
  413a74:	bl	413800 <_obstack_memory_used@@Base+0x4d0>
  413a78:	ldp	x29, x30, [sp], #16
  413a7c:	ret
  413a80:	mov	x6, x0
  413a84:	ldr	x7, [x0, #200]
  413a88:	mov	x4, x7
  413a8c:	mov	x0, #0x0                   	// #0
  413a90:	cmp	x4, x0
  413a94:	b.le	413acc <_obstack_memory_used@@Base+0x79c>
  413a98:	add	x2, x4, x0
  413a9c:	add	x2, x2, x2, lsr #63
  413aa0:	asr	x2, x2, #1
  413aa4:	ldr	x5, [x6, #216]
  413aa8:	add	x3, x2, x2, lsl #2
  413aac:	add	x3, x5, x3, lsl #3
  413ab0:	ldr	x3, [x3, #8]
  413ab4:	cmp	x3, x1
  413ab8:	b.lt	413ac4 <_obstack_memory_used@@Base+0x794>  // b.tstop
  413abc:	mov	x4, x2
  413ac0:	b	413a90 <_obstack_memory_used@@Base+0x760>
  413ac4:	add	x0, x2, #0x1
  413ac8:	b	413a90 <_obstack_memory_used@@Base+0x760>
  413acc:	cmp	x7, x0
  413ad0:	b.le	413af0 <_obstack_memory_used@@Base+0x7c0>
  413ad4:	ldr	x3, [x6, #216]
  413ad8:	add	x2, x0, x0, lsl #2
  413adc:	add	x2, x3, x2, lsl #3
  413ae0:	ldr	x2, [x2, #8]
  413ae4:	cmp	x2, x1
  413ae8:	csinv	x0, x0, xzr, eq  // eq = none
  413aec:	ret
  413af0:	mov	x0, #0xffffffffffffffff    	// #-1
  413af4:	b	413aec <_obstack_memory_used@@Base+0x7bc>
  413af8:	stp	x29, x30, [sp, #-112]!
  413afc:	mov	x29, sp
  413b00:	stp	x19, x20, [sp, #16]
  413b04:	stp	x21, x22, [sp, #32]
  413b08:	stp	x23, x24, [sp, #48]
  413b0c:	stp	x25, x26, [sp, #64]
  413b10:	stp	x27, x28, [sp, #80]
  413b14:	mov	x19, x0
  413b18:	mov	x20, x1
  413b1c:	mov	x25, x2
  413b20:	mov	x22, x3
  413b24:	mov	x26, x4
  413b28:	mov	x23, x5
  413b2c:	ldr	x28, [x0, #152]
  413b30:	mov	x1, x3
  413b34:	bl	413a80 <_obstack_memory_used@@Base+0x750>
  413b38:	str	x0, [sp, #96]
  413b3c:	mov	x1, x23
  413b40:	mov	x0, x19
  413b44:	bl	413a80 <_obstack_memory_used@@Base+0x750>
  413b48:	str	x0, [sp, #104]
  413b4c:	ldr	x0, [x20, #8]
  413b50:	cmp	x0, #0x0
  413b54:	b.le	413bf8 <_obstack_memory_used@@Base+0x8c8>
  413b58:	mov	x24, #0x0                   	// #0
  413b5c:	ldr	x0, [x20, #16]
  413b60:	ldr	x1, [x0, x24, lsl #3]
  413b64:	ldr	x0, [x19, #216]
  413b68:	add	x2, x1, x1, lsl #2
  413b6c:	ldr	x0, [x0, x2, lsl #3]
  413b70:	ldr	x2, [x28]
  413b74:	lsl	x0, x0, #4
  413b78:	ldr	x27, [x2, x0]
  413b7c:	ldr	x5, [sp, #96]
  413b80:	mov	x4, x22
  413b84:	mov	x3, x25
  413b88:	mov	x2, x27
  413b8c:	mov	x0, x19
  413b90:	bl	413a08 <_obstack_memory_used@@Base+0x6d8>
  413b94:	mov	w21, w0
  413b98:	ldr	x0, [x20, #16]
  413b9c:	ldr	x5, [sp, #104]
  413ba0:	mov	x4, x23
  413ba4:	mov	x3, x26
  413ba8:	mov	x2, x27
  413bac:	ldr	x1, [x0, x24, lsl #3]
  413bb0:	mov	x0, x19
  413bb4:	bl	413a08 <_obstack_memory_used@@Base+0x6d8>
  413bb8:	cmp	w21, w0
  413bbc:	b.eq	413be0 <_obstack_memory_used@@Base+0x8b0>  // b.none
  413bc0:	mov	w0, #0x1                   	// #1
  413bc4:	ldp	x19, x20, [sp, #16]
  413bc8:	ldp	x21, x22, [sp, #32]
  413bcc:	ldp	x23, x24, [sp, #48]
  413bd0:	ldp	x25, x26, [sp, #64]
  413bd4:	ldp	x27, x28, [sp, #80]
  413bd8:	ldp	x29, x30, [sp], #112
  413bdc:	ret
  413be0:	add	x24, x24, #0x1
  413be4:	ldr	x0, [x20, #8]
  413be8:	cmp	x0, x24
  413bec:	b.gt	413b5c <_obstack_memory_used@@Base+0x82c>
  413bf0:	mov	w0, #0x0                   	// #0
  413bf4:	b	413bc4 <_obstack_memory_used@@Base+0x894>
  413bf8:	mov	w0, #0x0                   	// #0
  413bfc:	b	413bc4 <_obstack_memory_used@@Base+0x894>
  413c00:	stp	x29, x30, [sp, #-96]!
  413c04:	mov	x29, sp
  413c08:	stp	x19, x20, [sp, #16]
  413c0c:	stp	x21, x22, [sp, #32]
  413c10:	stp	x23, x24, [sp, #48]
  413c14:	stp	x25, x26, [sp, #64]
  413c18:	mov	x20, x0
  413c1c:	mov	x19, x1
  413c20:	mov	x23, x2
  413c24:	mov	w22, w3
  413c28:	mov	x24, x5
  413c2c:	and	w26, w6, #0xff
  413c30:	ldr	x25, [x1, #72]
  413c34:	mov	x1, x25
  413c38:	mov	x0, x19
  413c3c:	bl	41335c <_obstack_memory_used@@Base+0x2c>
  413c40:	cmp	w0, #0x1
  413c44:	b.gt	413c88 <_obstack_memory_used@@Base+0x958>
  413c48:	add	x3, x25, w22, sxtw
  413c4c:	str	x3, [x19, #72]
  413c50:	ldrb	w1, [x23, #8]
  413c54:	and	w0, w1, #0xfffffffb
  413c58:	and	w0, w0, #0xff
  413c5c:	cmp	w0, #0x1a
  413c60:	ccmp	w1, #0x1c, #0x4, ne  // ne = any
  413c64:	b.eq	413ccc <_obstack_memory_used@@Base+0x99c>  // b.none
  413c68:	cmp	w26, #0x0
  413c6c:	ccmp	w1, #0x16, #0x0, eq  // eq = none
  413c70:	b.eq	413e70 <_obstack_memory_used@@Base+0xb40>  // b.none
  413c74:	str	wzr, [x20]
  413c78:	ldrb	w0, [x23]
  413c7c:	strb	w0, [x20, #8]
  413c80:	mov	w0, #0x0                   	// #0
  413c84:	b	413cb4 <_obstack_memory_used@@Base+0x984>
  413c88:	mov	w21, w0
  413c8c:	mov	w0, #0x1                   	// #1
  413c90:	str	w0, [x20]
  413c94:	ldr	x1, [x19, #72]
  413c98:	mov	x0, x19
  413c9c:	bl	4133ac <_obstack_memory_used@@Base+0x7c>
  413ca0:	str	w0, [x20, #8]
  413ca4:	ldr	x0, [x19, #72]
  413ca8:	add	x21, x0, w21, sxtw
  413cac:	str	x21, [x19, #72]
  413cb0:	mov	w0, #0x0                   	// #0
  413cb4:	ldp	x19, x20, [sp, #16]
  413cb8:	ldp	x21, x22, [sp, #32]
  413cbc:	ldp	x23, x24, [sp, #48]
  413cc0:	ldp	x25, x26, [sp, #64]
  413cc4:	ldp	x29, x30, [sp], #96
  413cc8:	ret
  413ccc:	ldr	x1, [x19, #104]
  413cd0:	mov	w0, #0x7                   	// #7
  413cd4:	cmp	x3, x1
  413cd8:	b.ge	413cb4 <_obstack_memory_used@@Base+0x984>  // b.tcont
  413cdc:	ldrb	w24, [x23]
  413ce0:	mov	x21, #0x0                   	// #0
  413ce4:	b	413dc4 <_obstack_memory_used@@Base+0xa94>
  413ce8:	ldrb	w0, [x19, #139]
  413cec:	cbnz	w0, 413d08 <_obstack_memory_used@@Base+0x9d8>
  413cf0:	ldr	x1, [x19, #8]
  413cf4:	ldr	x0, [x19, #72]
  413cf8:	add	x2, x0, #0x1
  413cfc:	str	x2, [x19, #72]
  413d00:	ldrb	w22, [x1, x0]
  413d04:	b	413de8 <_obstack_memory_used@@Base+0xab8>
  413d08:	ldrb	w0, [x19, #140]
  413d0c:	cbz	w0, 413d90 <_obstack_memory_used@@Base+0xa60>
  413d10:	ldr	x26, [x19, #72]
  413d14:	ldr	x0, [x19, #48]
  413d18:	cmp	x26, x0
  413d1c:	b.eq	413d30 <_obstack_memory_used@@Base+0xa00>  // b.none
  413d20:	ldr	x0, [x19, #16]
  413d24:	ldr	w0, [x0, x26, lsl #2]
  413d28:	cmn	w0, #0x1
  413d2c:	b.eq	413d64 <_obstack_memory_used@@Base+0xa34>  // b.none
  413d30:	ldr	x1, [x19, #24]
  413d34:	ldr	x0, [x19]
  413d38:	ldr	x2, [x1, x26, lsl #3]
  413d3c:	ldr	x1, [x19, #40]
  413d40:	add	x0, x0, x2
  413d44:	ldrb	w22, [x0, x1]
  413d48:	tst	w22, #0xffffff80
  413d4c:	b.eq	413d78 <_obstack_memory_used@@Base+0xa48>  // b.none
  413d50:	ldr	x0, [x19, #8]
  413d54:	add	x1, x26, #0x1
  413d58:	str	x1, [x19, #72]
  413d5c:	ldrb	w22, [x0, x26]
  413d60:	b	413de8 <_obstack_memory_used@@Base+0xab8>
  413d64:	ldr	x0, [x19, #8]
  413d68:	add	x1, x26, #0x1
  413d6c:	str	x1, [x19, #72]
  413d70:	ldrb	w22, [x0, x26]
  413d74:	b	413de8 <_obstack_memory_used@@Base+0xab8>
  413d78:	mov	x1, x26
  413d7c:	mov	x0, x19
  413d80:	bl	41335c <_obstack_memory_used@@Base+0x2c>
  413d84:	add	x26, x26, w0, sxtw
  413d88:	str	x26, [x19, #72]
  413d8c:	b	413de8 <_obstack_memory_used@@Base+0xab8>
  413d90:	ldr	x0, [x19]
  413d94:	ldr	x2, [x19, #40]
  413d98:	ldr	x1, [x19, #72]
  413d9c:	add	x3, x1, #0x1
  413da0:	str	x3, [x19, #72]
  413da4:	add	x0, x0, x2
  413da8:	ldrb	w22, [x0, x1]
  413dac:	b	413de8 <_obstack_memory_used@@Base+0xab8>
  413db0:	ldr	x0, [x20, #8]
  413db4:	strb	w22, [x0, x21]
  413db8:	add	x21, x21, #0x1
  413dbc:	cmp	x21, #0x20
  413dc0:	b.eq	413e9c <_obstack_memory_used@@Base+0xb6c>  // b.none
  413dc4:	mov	w25, w21
  413dc8:	ldrb	w0, [x23, #8]
  413dcc:	cmp	w0, #0x1e
  413dd0:	b.eq	413ce8 <_obstack_memory_used@@Base+0x9b8>  // b.none
  413dd4:	ldr	x1, [x19, #8]
  413dd8:	ldr	x0, [x19, #72]
  413ddc:	add	x2, x0, #0x1
  413de0:	str	x2, [x19, #72]
  413de4:	ldrb	w22, [x1, x0]
  413de8:	ldr	x0, [x19, #72]
  413dec:	ldr	x1, [x19, #104]
  413df0:	cmp	x1, x0
  413df4:	b.le	413e94 <_obstack_memory_used@@Base+0xb64>
  413df8:	cmp	w24, w22
  413dfc:	b.ne	413db0 <_obstack_memory_used@@Base+0xa80>  // b.any
  413e00:	ldr	x1, [x19, #8]
  413e04:	ldrb	w1, [x1, x0]
  413e08:	cmp	w1, #0x5d
  413e0c:	b.ne	413db0 <_obstack_memory_used@@Base+0xa80>  // b.any
  413e10:	add	x0, x0, #0x1
  413e14:	str	x0, [x19, #72]
  413e18:	ldr	x0, [x20, #8]
  413e1c:	strb	wzr, [x0, w25, sxtw]
  413e20:	ldrb	w1, [x23, #8]
  413e24:	cmp	w1, #0x1c
  413e28:	b.eq	413e50 <_obstack_memory_used@@Base+0xb20>  // b.none
  413e2c:	cmp	w1, #0x1e
  413e30:	b.eq	413e60 <_obstack_memory_used@@Base+0xb30>  // b.none
  413e34:	mov	w0, #0x0                   	// #0
  413e38:	cmp	w1, #0x1a
  413e3c:	b.ne	413cb4 <_obstack_memory_used@@Base+0x984>  // b.any
  413e40:	mov	w0, #0x3                   	// #3
  413e44:	str	w0, [x20]
  413e48:	mov	w0, #0x0                   	// #0
  413e4c:	b	413cb4 <_obstack_memory_used@@Base+0x984>
  413e50:	mov	w0, #0x2                   	// #2
  413e54:	str	w0, [x20]
  413e58:	mov	w0, #0x0                   	// #0
  413e5c:	b	413cb4 <_obstack_memory_used@@Base+0x984>
  413e60:	mov	w0, #0x4                   	// #4
  413e64:	str	w0, [x20]
  413e68:	mov	w0, #0x0                   	// #0
  413e6c:	b	413cb4 <_obstack_memory_used@@Base+0x984>
  413e70:	mov	x2, x24
  413e74:	mov	x1, x19
  413e78:	add	x0, sp, #0x50
  413e7c:	bl	413640 <_obstack_memory_used@@Base+0x310>
  413e80:	ldrb	w0, [sp, #88]
  413e84:	cmp	w0, #0x15
  413e88:	b.eq	413c74 <_obstack_memory_used@@Base+0x944>  // b.none
  413e8c:	mov	w0, #0xb                   	// #11
  413e90:	b	413cb4 <_obstack_memory_used@@Base+0x984>
  413e94:	mov	w0, #0x7                   	// #7
  413e98:	b	413cb4 <_obstack_memory_used@@Base+0x984>
  413e9c:	mov	w0, #0x7                   	// #7
  413ea0:	b	413cb4 <_obstack_memory_used@@Base+0x984>
  413ea4:	stp	x29, x30, [sp, #-48]!
  413ea8:	mov	x29, sp
  413eac:	stp	x19, x20, [sp, #16]
  413eb0:	str	x21, [sp, #32]
  413eb4:	mov	x19, x0
  413eb8:	mov	x21, x1
  413ebc:	mov	x20, x2
  413ec0:	b	413ef4 <_obstack_memory_used@@Base+0xbc4>
  413ec4:	mov	x19, x4
  413ec8:	mov	x1, x19
  413ecc:	mov	x0, x20
  413ed0:	blr	x21
  413ed4:	cbnz	w0, 413f08 <_obstack_memory_used@@Base+0xbd8>
  413ed8:	ldr	x4, [x19]
  413edc:	cbz	x4, 413f08 <_obstack_memory_used@@Base+0xbd8>
  413ee0:	ldr	x3, [x4, #16]
  413ee4:	cmp	x3, #0x0
  413ee8:	ccmp	x3, x19, #0x4, ne  // ne = any
  413eec:	b.eq	413ec4 <_obstack_memory_used@@Base+0xb94>  // b.none
  413ef0:	mov	x19, x3
  413ef4:	ldr	x3, [x19, #8]
  413ef8:	cbnz	x3, 413ef0 <_obstack_memory_used@@Base+0xbc0>
  413efc:	ldr	x3, [x19, #16]
  413f00:	cbnz	x3, 413ef0 <_obstack_memory_used@@Base+0xbc0>
  413f04:	b	413ec8 <_obstack_memory_used@@Base+0xb98>
  413f08:	ldp	x19, x20, [sp, #16]
  413f0c:	ldr	x21, [sp, #32]
  413f10:	ldp	x29, x30, [sp], #48
  413f14:	ret
  413f18:	stp	x29, x30, [sp, #-48]!
  413f1c:	mov	x29, sp
  413f20:	stp	x19, x20, [sp, #16]
  413f24:	str	x21, [sp, #32]
  413f28:	mov	x19, x0
  413f2c:	mov	x21, x1
  413f30:	mov	x20, x2
  413f34:	b	413f40 <_obstack_memory_used@@Base+0xc10>
  413f38:	mov	x3, x4
  413f3c:	mov	x19, x3
  413f40:	mov	x1, x19
  413f44:	mov	x0, x20
  413f48:	blr	x21
  413f4c:	cbnz	w0, 413f7c <_obstack_memory_used@@Base+0xc4c>
  413f50:	ldr	x3, [x19, #8]
  413f54:	cbnz	x3, 413f3c <_obstack_memory_used@@Base+0xc0c>
  413f58:	ldr	x4, [x19, #16]
  413f5c:	cmp	x4, #0x0
  413f60:	ccmp	x4, x3, #0x4, ne  // ne = any
  413f64:	b.ne	413f38 <_obstack_memory_used@@Base+0xc08>  // b.any
  413f68:	ldr	x4, [x19]
  413f6c:	mov	x3, x19
  413f70:	cbz	x4, 413f7c <_obstack_memory_used@@Base+0xc4c>
  413f74:	mov	x19, x4
  413f78:	b	413f58 <_obstack_memory_used@@Base+0xc28>
  413f7c:	ldp	x19, x20, [sp, #16]
  413f80:	ldr	x21, [sp, #32]
  413f84:	ldp	x29, x30, [sp], #48
  413f88:	ret
  413f8c:	stp	x29, x30, [sp, #-32]!
  413f90:	mov	x29, sp
  413f94:	stp	x19, x20, [sp, #16]
  413f98:	mov	x19, x0
  413f9c:	mov	x20, x1
  413fa0:	ldr	w0, [x0, #144]
  413fa4:	cmp	w0, #0x1
  413fa8:	b.le	413fe4 <_obstack_memory_used@@Base+0xcb4>
  413fac:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  413fb0:	cmp	x1, x0
  413fb4:	b.hi	414018 <_obstack_memory_used@@Base+0xce8>  // b.pmore
  413fb8:	lsl	x1, x1, #2
  413fbc:	ldr	x0, [x19, #16]
  413fc0:	bl	402930 <realloc@plt>
  413fc4:	cbz	x0, 414020 <_obstack_memory_used@@Base+0xcf0>
  413fc8:	str	x0, [x19, #16]
  413fcc:	ldr	x0, [x19, #24]
  413fd0:	cbz	x0, 413fe4 <_obstack_memory_used@@Base+0xcb4>
  413fd4:	lsl	x1, x20, #3
  413fd8:	bl	402930 <realloc@plt>
  413fdc:	cbz	x0, 414028 <_obstack_memory_used@@Base+0xcf8>
  413fe0:	str	x0, [x19, #24]
  413fe4:	ldrb	w0, [x19, #139]
  413fe8:	cbnz	w0, 414000 <_obstack_memory_used@@Base+0xcd0>
  413fec:	str	x20, [x19, #64]
  413ff0:	mov	w0, #0x0                   	// #0
  413ff4:	ldp	x19, x20, [sp, #16]
  413ff8:	ldp	x29, x30, [sp], #32
  413ffc:	ret
  414000:	mov	x1, x20
  414004:	ldr	x0, [x19, #8]
  414008:	bl	402930 <realloc@plt>
  41400c:	cbz	x0, 414030 <_obstack_memory_used@@Base+0xd00>
  414010:	str	x0, [x19, #8]
  414014:	b	413fec <_obstack_memory_used@@Base+0xcbc>
  414018:	mov	w0, #0xc                   	// #12
  41401c:	b	413ff4 <_obstack_memory_used@@Base+0xcc4>
  414020:	mov	w0, #0xc                   	// #12
  414024:	b	413ff4 <_obstack_memory_used@@Base+0xcc4>
  414028:	mov	w0, #0xc                   	// #12
  41402c:	b	413ff4 <_obstack_memory_used@@Base+0xcc4>
  414030:	mov	w0, #0xc                   	// #12
  414034:	b	413ff4 <_obstack_memory_used@@Base+0xcc4>
  414038:	stp	x29, x30, [sp, #-32]!
  41403c:	mov	x29, sp
  414040:	stp	x19, x20, [sp, #16]
  414044:	mov	x19, x0
  414048:	mov	x20, x1
  41404c:	ldr	x0, [x0]
  414050:	ldr	x2, [x19, #8]
  414054:	cmp	x0, x2
  414058:	b.eq	414080 <_obstack_memory_used@@Base+0xd50>  // b.none
  41405c:	ldr	x1, [x19, #16]
  414060:	ldr	x0, [x19, #8]
  414064:	add	x2, x0, #0x1
  414068:	str	x2, [x19, #8]
  41406c:	str	x20, [x1, x0, lsl #3]
  414070:	mov	w0, #0x1                   	// #1
  414074:	ldp	x19, x20, [sp, #16]
  414078:	ldp	x29, x30, [sp], #32
  41407c:	ret
  414080:	add	x0, x0, #0x1
  414084:	lsl	x1, x0, #1
  414088:	str	x1, [x19]
  41408c:	lsl	x1, x0, #4
  414090:	ldr	x0, [x19, #16]
  414094:	bl	402930 <realloc@plt>
  414098:	cbz	x0, 4140a4 <_obstack_memory_used@@Base+0xd74>
  41409c:	str	x0, [x19, #16]
  4140a0:	b	41405c <_obstack_memory_used@@Base+0xd2c>
  4140a4:	mov	w0, #0x0                   	// #0
  4140a8:	b	414074 <_obstack_memory_used@@Base+0xd44>
  4140ac:	stp	x29, x30, [sp, #-48]!
  4140b0:	mov	x29, sp
  4140b4:	stp	x19, x20, [sp, #16]
  4140b8:	stp	x21, x22, [sp, #32]
  4140bc:	mov	x19, x0
  4140c0:	mov	x21, x1
  4140c4:	mov	x20, x2
  4140c8:	mov	x22, x3
  4140cc:	ldr	w0, [x0, #128]
  4140d0:	cmp	w0, #0xf
  4140d4:	b.eq	414148 <_obstack_memory_used@@Base+0xe18>  // b.none
  4140d8:	ldr	x4, [x19, #112]
  4140dc:	ldr	w5, [x19, #128]
  4140e0:	add	w0, w5, #0x1
  4140e4:	str	w0, [x19, #128]
  4140e8:	sbfiz	x5, x5, #6, #32
  4140ec:	add	x0, x5, #0x8
  4140f0:	add	x0, x4, x0
  4140f4:	add	x4, x4, x5
  4140f8:	str	xzr, [x4, #8]
  4140fc:	str	x21, [x4, #16]
  414100:	str	x20, [x4, #24]
  414104:	ldp	x2, x3, [x22]
  414108:	stp	x2, x3, [x4, #48]
  41410c:	ldrb	w1, [x4, #58]
  414110:	and	w1, w1, #0xfffffff3
  414114:	strb	w1, [x4, #58]
  414118:	str	xzr, [x4, #32]
  41411c:	str	xzr, [x4, #40]
  414120:	mov	x1, #0xffffffffffffffff    	// #-1
  414124:	str	x1, [x4, #64]
  414128:	cbz	x21, 414130 <_obstack_memory_used@@Base+0xe00>
  41412c:	str	x0, [x21]
  414130:	cbz	x20, 414138 <_obstack_memory_used@@Base+0xe08>
  414134:	str	x0, [x20]
  414138:	ldp	x19, x20, [sp, #16]
  41413c:	ldp	x21, x22, [sp, #32]
  414140:	ldp	x29, x30, [sp], #48
  414144:	ret
  414148:	mov	x0, #0x3c8                 	// #968
  41414c:	bl	402800 <malloc@plt>
  414150:	cbz	x0, 414138 <_obstack_memory_used@@Base+0xe08>
  414154:	ldr	x1, [x19, #112]
  414158:	str	x1, [x0]
  41415c:	str	x0, [x19, #112]
  414160:	str	wzr, [x19, #128]
  414164:	b	4140d8 <_obstack_memory_used@@Base+0xda8>
  414168:	stp	x29, x30, [sp, #-64]!
  41416c:	mov	x29, sp
  414170:	stp	x19, x20, [sp, #16]
  414174:	stp	x21, x22, [sp, #32]
  414178:	mov	x19, x0
  41417c:	mov	x22, x1
  414180:	ldr	x20, [x0]
  414184:	add	x21, sp, #0x38
  414188:	add	x3, x19, #0x28
  41418c:	mov	x2, #0x0                   	// #0
  414190:	mov	x1, #0x0                   	// #0
  414194:	mov	x0, x22
  414198:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41419c:	str	x0, [x21]
  4141a0:	cbz	x0, 4141d4 <_obstack_memory_used@@Base+0xea4>
  4141a4:	str	x20, [x0]
  4141a8:	ldr	x1, [x21]
  4141ac:	ldrb	w0, [x1, #50]
  4141b0:	orr	w0, w0, #0x4
  4141b4:	strb	w0, [x1, #50]
  4141b8:	ldr	x20, [x21]
  4141bc:	ldr	x0, [x19, #8]
  4141c0:	cbz	x0, 4141e4 <_obstack_memory_used@@Base+0xeb4>
  4141c4:	add	x21, x20, #0x8
  4141c8:	mov	x19, x0
  4141cc:	b	414188 <_obstack_memory_used@@Base+0xe58>
  4141d0:	ldr	x0, [sp, #56]
  4141d4:	ldp	x19, x20, [sp, #16]
  4141d8:	ldp	x21, x22, [sp, #32]
  4141dc:	ldp	x29, x30, [sp], #64
  4141e0:	ret
  4141e4:	ldr	x2, [x19, #16]
  4141e8:	cmp	x2, #0x0
  4141ec:	ccmp	x2, x0, #0x4, ne  // ne = any
  4141f0:	b.ne	41420c <_obstack_memory_used@@Base+0xedc>  // b.any
  4141f4:	ldr	x2, [x19]
  4141f8:	ldr	x20, [x20]
  4141fc:	mov	x0, x19
  414200:	cbz	x2, 4141d0 <_obstack_memory_used@@Base+0xea0>
  414204:	mov	x19, x2
  414208:	b	4141e4 <_obstack_memory_used@@Base+0xeb4>
  41420c:	add	x21, x20, #0x10
  414210:	mov	x19, x2
  414214:	b	414188 <_obstack_memory_used@@Base+0xe58>
  414218:	stp	x29, x30, [sp, #-32]!
  41421c:	mov	x29, sp
  414220:	stp	xzr, xzr, [sp, #16]
  414224:	strb	w3, [sp, #24]
  414228:	add	x3, sp, #0x10
  41422c:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  414230:	ldp	x29, x30, [sp], #32
  414234:	ret
  414238:	stp	x29, x30, [sp, #-80]!
  41423c:	mov	x29, sp
  414240:	stp	x19, x20, [sp, #16]
  414244:	stp	x21, x22, [sp, #32]
  414248:	stp	x23, x24, [sp, #48]
  41424c:	str	x25, [sp, #64]
  414250:	mov	x24, x0
  414254:	mov	x20, x2
  414258:	ldr	x25, [x1]
  41425c:	ldr	x19, [x2, #8]
  414260:	ldrb	w0, [x1, #56]
  414264:	tst	x0, #0x10
  414268:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41426c:	b.ne	4142ac <_obstack_memory_used@@Base+0xf7c>  // b.any
  414270:	mov	w3, #0x8                   	// #8
  414274:	mov	x2, #0x0                   	// #0
  414278:	mov	x1, #0x0                   	// #0
  41427c:	mov	x0, x25
  414280:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  414284:	mov	x21, x0
  414288:	mov	w3, #0x9                   	// #9
  41428c:	mov	x2, #0x0                   	// #0
  414290:	mov	x1, #0x0                   	// #0
  414294:	mov	x0, x25
  414298:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41429c:	mov	x22, x0
  4142a0:	mov	x23, x0
  4142a4:	cbz	x19, 41430c <_obstack_memory_used@@Base+0xfdc>
  4142a8:	b	4142f4 <_obstack_memory_used@@Base+0xfc4>
  4142ac:	ldr	x0, [x2, #40]
  4142b0:	cmp	x0, #0x3f
  4142b4:	b.gt	414368 <_obstack_memory_used@@Base+0x1038>
  4142b8:	ldr	x1, [x25, #160]
  4142bc:	lsr	x0, x1, x0
  4142c0:	tbz	w0, #0, 414368 <_obstack_memory_used@@Base+0x1038>
  4142c4:	mov	w3, #0x8                   	// #8
  4142c8:	mov	x2, #0x0                   	// #0
  4142cc:	mov	x1, #0x0                   	// #0
  4142d0:	mov	x0, x25
  4142d4:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  4142d8:	mov	x21, x0
  4142dc:	mov	w3, #0x9                   	// #9
  4142e0:	mov	x2, #0x0                   	// #0
  4142e4:	mov	x1, #0x0                   	// #0
  4142e8:	mov	x0, x25
  4142ec:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  4142f0:	mov	x23, x0
  4142f4:	mov	w3, #0x10                  	// #16
  4142f8:	mov	x2, x23
  4142fc:	mov	x1, x19
  414300:	mov	x0, x25
  414304:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  414308:	mov	x22, x0
  41430c:	mov	w3, #0x10                  	// #16
  414310:	mov	x2, x22
  414314:	mov	x1, x21
  414318:	mov	x0, x25
  41431c:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  414320:	mov	x19, x0
  414324:	cmp	x0, #0x0
  414328:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  41432c:	b.eq	414384 <_obstack_memory_used@@Base+0x1054>  // b.none
  414330:	cmp	x21, #0x0
  414334:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  414338:	b.eq	414384 <_obstack_memory_used@@Base+0x1054>  // b.none
  41433c:	ldr	x0, [x20, #40]
  414340:	str	x0, [x23, #40]
  414344:	str	x0, [x21, #40]
  414348:	ldrb	w0, [x20, #50]
  41434c:	ubfx	x0, x0, #3, #1
  414350:	ldrb	w1, [x23, #50]
  414354:	bfi	w1, w0, #3, #1
  414358:	strb	w1, [x23, #50]
  41435c:	ldrb	w1, [x21, #50]
  414360:	bfi	w1, w0, #3, #1
  414364:	strb	w1, [x21, #50]
  414368:	mov	x0, x19
  41436c:	ldp	x19, x20, [sp, #16]
  414370:	ldp	x21, x22, [sp, #32]
  414374:	ldp	x23, x24, [sp, #48]
  414378:	ldr	x25, [sp, #64]
  41437c:	ldp	x29, x30, [sp], #80
  414380:	ret
  414384:	mov	w0, #0xc                   	// #12
  414388:	str	w0, [x24]
  41438c:	mov	x19, #0x0                   	// #0
  414390:	b	414368 <_obstack_memory_used@@Base+0x1038>
  414394:	stp	x29, x30, [sp, #-48]!
  414398:	mov	x29, sp
  41439c:	stp	x19, x20, [sp, #16]
  4143a0:	mov	x20, x0
  4143a4:	mov	x19, x1
  4143a8:	str	wzr, [sp, #44]
  4143ac:	ldr	x2, [x1, #8]
  4143b0:	cbz	x2, 4143c0 <_obstack_memory_used@@Base+0x1090>
  4143b4:	ldrb	w0, [x2, #48]
  4143b8:	cmp	w0, #0x11
  4143bc:	b.eq	4143e4 <_obstack_memory_used@@Base+0x10b4>  // b.none
  4143c0:	ldr	x2, [x19, #16]
  4143c4:	cbz	x2, 4143d4 <_obstack_memory_used@@Base+0x10a4>
  4143c8:	ldrb	w0, [x2, #48]
  4143cc:	cmp	w0, #0x11
  4143d0:	b.eq	414400 <_obstack_memory_used@@Base+0x10d0>  // b.none
  4143d4:	ldr	w0, [sp, #44]
  4143d8:	ldp	x19, x20, [sp, #16]
  4143dc:	ldp	x29, x30, [sp], #48
  4143e0:	ret
  4143e4:	mov	x1, x20
  4143e8:	add	x0, sp, #0x2c
  4143ec:	bl	414238 <_obstack_memory_used@@Base+0xf08>
  4143f0:	str	x0, [x19, #8]
  4143f4:	cbz	x0, 4143c0 <_obstack_memory_used@@Base+0x1090>
  4143f8:	str	x19, [x0]
  4143fc:	b	4143c0 <_obstack_memory_used@@Base+0x1090>
  414400:	mov	x1, x20
  414404:	add	x0, sp, #0x2c
  414408:	bl	414238 <_obstack_memory_used@@Base+0xf08>
  41440c:	str	x0, [x19, #16]
  414410:	cbz	x0, 4143d4 <_obstack_memory_used@@Base+0x10a4>
  414414:	str	x19, [x0]
  414418:	b	4143d4 <_obstack_memory_used@@Base+0x10a4>
  41441c:	stp	x29, x30, [sp, #-32]!
  414420:	mov	x29, sp
  414424:	stp	x19, x20, [sp, #16]
  414428:	mov	x19, x0
  41442c:	mov	x20, x1
  414430:	mov	x0, #0x1                   	// #1
  414434:	str	x0, [x19]
  414438:	str	x0, [x19, #8]
  41443c:	mov	x0, #0x8                   	// #8
  414440:	bl	402800 <malloc@plt>
  414444:	str	x0, [x19, #16]
  414448:	cbz	x0, 414460 <_obstack_memory_used@@Base+0x1130>
  41444c:	str	x20, [x0]
  414450:	mov	w0, #0x0                   	// #0
  414454:	ldp	x19, x20, [sp, #16]
  414458:	ldp	x29, x30, [sp], #32
  41445c:	ret
  414460:	str	xzr, [x19, #8]
  414464:	str	xzr, [x19]
  414468:	mov	w0, #0xc                   	// #12
  41446c:	b	414454 <_obstack_memory_used@@Base+0x1124>
  414470:	stp	x29, x30, [sp, #-32]!
  414474:	mov	x29, sp
  414478:	stp	x19, x20, [sp, #16]
  41447c:	mov	x19, x0
  414480:	mov	x20, x1
  414484:	ldr	x1, [x0]
  414488:	cbz	x1, 4144b8 <_obstack_memory_used@@Base+0x1188>
  41448c:	ldr	x0, [x0, #8]
  414490:	cbnz	x0, 4144cc <_obstack_memory_used@@Base+0x119c>
  414494:	ldr	x0, [x19, #16]
  414498:	str	x20, [x0]
  41449c:	ldr	x0, [x19, #8]
  4144a0:	add	x0, x0, #0x1
  4144a4:	str	x0, [x19, #8]
  4144a8:	mov	w0, #0x1                   	// #1
  4144ac:	ldp	x19, x20, [sp, #16]
  4144b0:	ldp	x29, x30, [sp], #32
  4144b4:	ret
  4144b8:	mov	x1, x20
  4144bc:	bl	41441c <_obstack_memory_used@@Base+0x10ec>
  4144c0:	cmp	w0, #0x0
  4144c4:	cset	w0, eq  // eq = none
  4144c8:	b	4144ac <_obstack_memory_used@@Base+0x117c>
  4144cc:	cmp	x1, x0
  4144d0:	b.eq	41452c <_obstack_memory_used@@Base+0x11fc>  // b.none
  4144d4:	ldr	x3, [x19, #16]
  4144d8:	ldr	x0, [x3]
  4144dc:	cmp	x0, x20
  4144e0:	b.le	41454c <_obstack_memory_used@@Base+0x121c>
  4144e4:	ldr	x0, [x19, #8]
  4144e8:	cmp	x0, #0x0
  4144ec:	b.le	414510 <_obstack_memory_used@@Base+0x11e0>
  4144f0:	lsl	x1, x0, #3
  4144f4:	sub	x1, x1, #0x8
  4144f8:	ldr	x2, [x19, #16]
  4144fc:	ldr	x3, [x2, x1]
  414500:	str	x3, [x2, x0, lsl #3]
  414504:	sub	x1, x1, #0x8
  414508:	subs	x0, x0, #0x1
  41450c:	b.ne	4144f8 <_obstack_memory_used@@Base+0x11c8>  // b.any
  414510:	ldr	x1, [x19, #16]
  414514:	str	x20, [x1, x0, lsl #3]
  414518:	ldr	x0, [x19, #8]
  41451c:	add	x0, x0, #0x1
  414520:	str	x0, [x19, #8]
  414524:	mov	w0, #0x1                   	// #1
  414528:	b	4144ac <_obstack_memory_used@@Base+0x117c>
  41452c:	lsl	x0, x1, #1
  414530:	str	x0, [x19]
  414534:	lsl	x1, x1, #4
  414538:	ldr	x0, [x19, #16]
  41453c:	bl	402930 <realloc@plt>
  414540:	cbz	x0, 414588 <_obstack_memory_used@@Base+0x1258>
  414544:	str	x0, [x19, #16]
  414548:	b	4144d4 <_obstack_memory_used@@Base+0x11a4>
  41454c:	ldr	x0, [x19, #8]
  414550:	lsl	x2, x0, #3
  414554:	add	x1, x3, x2
  414558:	ldur	x1, [x1, #-8]
  41455c:	cmp	x20, x1
  414560:	b.ge	414510 <_obstack_memory_used@@Base+0x11e0>  // b.tcont
  414564:	str	x1, [x3, x2]
  414568:	sub	x0, x0, #0x1
  41456c:	ldr	x3, [x19, #16]
  414570:	add	x1, x3, x2
  414574:	sub	x2, x2, #0x8
  414578:	ldur	x1, [x1, #-16]
  41457c:	cmp	x1, x20
  414580:	b.gt	414564 <_obstack_memory_used@@Base+0x1234>
  414584:	b	414510 <_obstack_memory_used@@Base+0x11e0>
  414588:	mov	w0, #0x0                   	// #0
  41458c:	b	4144ac <_obstack_memory_used@@Base+0x117c>
  414590:	stp	x29, x30, [sp, #-64]!
  414594:	mov	x29, sp
  414598:	stp	x19, x20, [sp, #16]
  41459c:	stp	x21, x22, [sp, #32]
  4145a0:	stp	x23, x24, [sp, #48]
  4145a4:	mov	x21, x0
  4145a8:	mov	x22, x1
  4145ac:	mov	x20, x2
  4145b0:	mov	x24, x3
  4145b4:	mov	w23, w4
  4145b8:	b	414600 <_obstack_memory_used@@Base+0x12d0>
  4145bc:	mov	x1, x20
  4145c0:	mov	x0, x22
  4145c4:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  4145c8:	and	w0, w0, #0xff
  4145cc:	cbz	w0, 41468c <_obstack_memory_used@@Base+0x135c>
  4145d0:	add	x19, x19, x19, lsl #1
  4145d4:	lsl	x19, x19, #3
  4145d8:	ldr	x0, [x21, #40]
  4145dc:	add	x0, x0, x19
  4145e0:	ldr	x1, [x0, #8]
  4145e4:	cbz	x1, 4146a4 <_obstack_memory_used@@Base+0x1374>
  4145e8:	cmp	x1, #0x2
  4145ec:	b.eq	414660 <_obstack_memory_used@@Base+0x1330>  // b.none
  4145f0:	ldr	x0, [x21, #40]
  4145f4:	add	x19, x0, x19
  4145f8:	ldr	x0, [x19, #16]
  4145fc:	ldr	x20, [x0]
  414600:	mov	x1, x20
  414604:	mov	x0, x22
  414608:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41460c:	cbnz	x0, 414684 <_obstack_memory_used@@Base+0x1354>
  414610:	mov	x19, x20
  414614:	lsl	x0, x20, #4
  414618:	ldr	x1, [x21]
  41461c:	add	x2, x1, x0
  414620:	ldrb	w2, [x2, #8]
  414624:	cmp	w2, w23
  414628:	b.ne	4145bc <_obstack_memory_used@@Base+0x128c>  // b.any
  41462c:	ldr	x0, [x1, x0]
  414630:	cmp	x0, x24
  414634:	b.ne	4145bc <_obstack_memory_used@@Base+0x128c>  // b.any
  414638:	mov	w0, #0x0                   	// #0
  41463c:	cmp	w23, #0x9
  414640:	b.ne	414690 <_obstack_memory_used@@Base+0x1360>  // b.any
  414644:	mov	x1, x20
  414648:	mov	x0, x22
  41464c:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  414650:	ands	w0, w0, #0xff
  414654:	mov	w0, #0xc                   	// #12
  414658:	csel	w0, w0, wzr, eq  // eq = none
  41465c:	b	414690 <_obstack_memory_used@@Base+0x1360>
  414660:	ldr	x0, [x0, #16]
  414664:	mov	w4, w23
  414668:	mov	x3, x24
  41466c:	ldr	x2, [x0, #8]
  414670:	mov	x1, x22
  414674:	mov	x0, x21
  414678:	bl	414590 <_obstack_memory_used@@Base+0x1260>
  41467c:	cbz	w0, 4145f0 <_obstack_memory_used@@Base+0x12c0>
  414680:	b	414690 <_obstack_memory_used@@Base+0x1360>
  414684:	mov	w0, #0x0                   	// #0
  414688:	b	414690 <_obstack_memory_used@@Base+0x1360>
  41468c:	mov	w0, #0xc                   	// #12
  414690:	ldp	x19, x20, [sp, #16]
  414694:	ldp	x21, x22, [sp, #32]
  414698:	ldp	x23, x24, [sp, #48]
  41469c:	ldp	x29, x30, [sp], #64
  4146a0:	ret
  4146a4:	mov	w0, #0x0                   	// #0
  4146a8:	b	414690 <_obstack_memory_used@@Base+0x1360>
  4146ac:	stp	x29, x30, [sp, #-32]!
  4146b0:	mov	x29, sp
  4146b4:	str	x19, [sp, #16]
  4146b8:	mov	x19, x0
  4146bc:	str	x1, [x0]
  4146c0:	str	xzr, [x0, #8]
  4146c4:	lsl	x0, x1, #3
  4146c8:	bl	402800 <malloc@plt>
  4146cc:	str	x0, [x19, #16]
  4146d0:	cmp	x0, #0x0
  4146d4:	mov	w0, #0xc                   	// #12
  4146d8:	csel	w0, w0, wzr, eq  // eq = none
  4146dc:	ldr	x19, [sp, #16]
  4146e0:	ldp	x29, x30, [sp], #32
  4146e4:	ret
  4146e8:	stp	x29, x30, [sp, #-64]!
  4146ec:	mov	x29, sp
  4146f0:	stp	x19, x20, [sp, #16]
  4146f4:	stp	x21, x22, [sp, #32]
  4146f8:	stp	x23, x24, [sp, #48]
  4146fc:	mov	x21, x0
  414700:	mov	x20, x1
  414704:	mov	x22, x2
  414708:	mov	x23, x1
  41470c:	str	x2, [x23], #32
  414710:	ldr	x1, [x1, #16]
  414714:	mov	x0, x23
  414718:	bl	4146ac <_obstack_memory_used@@Base+0x137c>
  41471c:	cbnz	w0, 4147f0 <_obstack_memory_used@@Base+0x14c0>
  414720:	mov	w24, w0
  414724:	ldr	x0, [x20, #16]
  414728:	cmp	x0, #0x0
  41472c:	b.le	414778 <_obstack_memory_used@@Base+0x1448>
  414730:	mov	x19, #0x0                   	// #0
  414734:	b	414748 <_obstack_memory_used@@Base+0x1418>
  414738:	add	x19, x19, #0x1
  41473c:	ldr	x0, [x20, #16]
  414740:	cmp	x0, x19
  414744:	b.le	414778 <_obstack_memory_used@@Base+0x1448>
  414748:	ldr	x0, [x20, #24]
  41474c:	ldr	x1, [x0, x19, lsl #3]
  414750:	ldr	x3, [x21]
  414754:	add	x3, x3, x1, lsl #4
  414758:	ldrb	w3, [x3, #8]
  41475c:	tbnz	w3, #3, 414738 <_obstack_memory_used@@Base+0x1408>
  414760:	mov	x0, x23
  414764:	bl	414038 <_obstack_memory_used@@Base+0xd08>
  414768:	and	w0, w0, #0xff
  41476c:	cbnz	w0, 414738 <_obstack_memory_used@@Base+0x1408>
  414770:	mov	w24, #0xc                   	// #12
  414774:	b	4147b4 <_obstack_memory_used@@Base+0x1484>
  414778:	ldr	x19, [x21, #136]
  41477c:	and	x22, x22, x19
  414780:	add	x22, x22, x22, lsl #1
  414784:	lsl	x19, x22, #3
  414788:	ldr	x21, [x21, #64]
  41478c:	add	x22, x21, x19
  414790:	ldr	x0, [x21, x19]
  414794:	ldr	x1, [x22, #8]
  414798:	cmp	x1, x0
  41479c:	b.le	4147cc <_obstack_memory_used@@Base+0x149c>
  4147a0:	ldr	x1, [x22, #16]
  4147a4:	ldr	x0, [x21, x19]
  4147a8:	add	x2, x0, #0x1
  4147ac:	str	x2, [x21, x19]
  4147b0:	str	x20, [x1, x0, lsl #3]
  4147b4:	mov	w0, w24
  4147b8:	ldp	x19, x20, [sp, #16]
  4147bc:	ldp	x21, x22, [sp, #32]
  4147c0:	ldp	x23, x24, [sp, #48]
  4147c4:	ldp	x29, x30, [sp], #64
  4147c8:	ret
  4147cc:	add	x0, x0, #0x1
  4147d0:	lsl	x23, x0, #1
  4147d4:	lsl	x1, x0, #4
  4147d8:	ldr	x0, [x22, #16]
  4147dc:	bl	402930 <realloc@plt>
  4147e0:	cbz	x0, 4147f8 <_obstack_memory_used@@Base+0x14c8>
  4147e4:	str	x0, [x22, #16]
  4147e8:	str	x23, [x22, #8]
  4147ec:	b	4147a0 <_obstack_memory_used@@Base+0x1470>
  4147f0:	mov	w24, #0xc                   	// #12
  4147f4:	b	4147b4 <_obstack_memory_used@@Base+0x1484>
  4147f8:	mov	w24, #0xc                   	// #12
  4147fc:	b	4147b4 <_obstack_memory_used@@Base+0x1484>
  414800:	stp	x29, x30, [sp, #-48]!
  414804:	mov	x29, sp
  414808:	stp	x19, x20, [sp, #16]
  41480c:	str	x21, [sp, #32]
  414810:	mov	x20, x0
  414814:	ldr	x0, [x0, #88]
  414818:	ldr	x21, [x20, #64]
  41481c:	cmp	x21, x0
  414820:	csel	x21, x21, x0, le
  414824:	ldr	x19, [x20, #48]
  414828:	cmp	x21, x19
  41482c:	b.le	414890 <_obstack_memory_used@@Base+0x1560>
  414830:	bl	402940 <__ctype_toupper_loc@plt>
  414834:	ldr	x1, [x20]
  414838:	ldr	x2, [x20, #40]
  41483c:	add	x1, x1, x19
  414840:	ldrb	w1, [x1, x2]
  414844:	ldr	x2, [x20, #120]
  414848:	cbnz	x2, 414884 <_obstack_memory_used@@Base+0x1554>
  41484c:	ldr	x2, [x20, #8]
  414850:	and	x1, x1, #0xff
  414854:	ldr	x3, [x0]
  414858:	ldr	w1, [x3, x1, lsl #2]
  41485c:	strb	w1, [x2, x19]
  414860:	add	x19, x19, #0x1
  414864:	cmp	x21, x19
  414868:	b.ne	414834 <_obstack_memory_used@@Base+0x1504>  // b.any
  41486c:	str	x21, [x20, #48]
  414870:	str	x21, [x20, #56]
  414874:	ldp	x19, x20, [sp, #16]
  414878:	ldr	x21, [sp, #32]
  41487c:	ldp	x29, x30, [sp], #48
  414880:	ret
  414884:	and	x1, x1, #0xff
  414888:	ldrb	w1, [x2, x1]
  41488c:	b	41484c <_obstack_memory_used@@Base+0x151c>
  414890:	mov	x21, x19
  414894:	b	41486c <_obstack_memory_used@@Base+0x153c>
  414898:	stp	x29, x30, [sp, #-160]!
  41489c:	mov	x29, sp
  4148a0:	stp	x19, x20, [sp, #16]
  4148a4:	stp	x21, x22, [sp, #32]
  4148a8:	stp	x23, x24, [sp, #48]
  4148ac:	mov	x19, x0
  4148b0:	ldr	x0, [x0, #88]
  4148b4:	ldr	x21, [x19, #64]
  4148b8:	cmp	x21, x0
  4148bc:	csel	x21, x21, x0, le
  4148c0:	ldr	x24, [x19, #48]
  4148c4:	cmp	x21, x24
  4148c8:	b.le	414a30 <_obstack_memory_used@@Base+0x1700>
  4148cc:	str	x25, [sp, #64]
  4148d0:	mov	x23, #0x1                   	// #1
  4148d4:	add	x22, x19, #0x20
  4148d8:	mov	w20, #0xffffffff            	// #-1
  4148dc:	b	4149d8 <_obstack_memory_used@@Base+0x16a8>
  4148e0:	ldr	w0, [x19, #144]
  4148e4:	cmp	w0, #0x0
  4148e8:	b.le	414960 <_obstack_memory_used@@Base+0x1630>
  4148ec:	cmp	x2, #0x0
  4148f0:	b.le	414968 <_obstack_memory_used@@Base+0x1638>
  4148f4:	mov	x4, x2
  4148f8:	mov	x1, x23
  4148fc:	b	414904 <_obstack_memory_used@@Base+0x15d4>
  414900:	mov	x1, x0
  414904:	ldr	x0, [x19]
  414908:	ldr	x3, [x19, #40]
  41490c:	add	x0, x0, x24
  414910:	add	x0, x0, x1
  414914:	add	x0, x0, x3
  414918:	ldurb	w0, [x0, #-1]
  41491c:	ldr	x3, [x19, #120]
  414920:	ldrb	w3, [x3, x0]
  414924:	ldr	x0, [x19, #8]
  414928:	add	x0, x0, x24
  41492c:	add	x0, x0, x1
  414930:	sturb	w3, [x0, #-1]
  414934:	add	x0, sp, #0x60
  414938:	add	x0, x1, x0
  41493c:	sturb	w3, [x0, #-1]
  414940:	ldr	w0, [x19, #144]
  414944:	cmp	w0, w1
  414948:	b.le	414970 <_obstack_memory_used@@Base+0x1640>
  41494c:	add	x0, x1, #0x1
  414950:	cmp	x1, x4
  414954:	b.ne	414900 <_obstack_memory_used@@Base+0x15d0>  // b.any
  414958:	add	x1, sp, #0x60
  41495c:	b	4149f8 <_obstack_memory_used@@Base+0x16c8>
  414960:	add	x1, sp, #0x60
  414964:	b	4149f8 <_obstack_memory_used@@Base+0x16c8>
  414968:	add	x1, sp, #0x60
  41496c:	b	4149f8 <_obstack_memory_used@@Base+0x16c8>
  414970:	add	x1, sp, #0x60
  414974:	b	4149f8 <_obstack_memory_used@@Base+0x16c8>
  414978:	ldr	x0, [x19]
  41497c:	ldr	x1, [x19, #40]
  414980:	add	x0, x0, x24
  414984:	ldrb	w0, [x0, x1]
  414988:	str	w0, [sp, #92]
  41498c:	ldr	x1, [x19, #120]
  414990:	cbnz	x1, 414a4c <_obstack_memory_used@@Base+0x171c>
  414994:	str	x25, [x19, #32]
  414998:	mov	x0, x23
  41499c:	add	x1, x24, #0x1
  4149a0:	ldr	x2, [x19, #16]
  4149a4:	ldr	w3, [sp, #92]
  4149a8:	str	w3, [x2, x24, lsl #2]
  4149ac:	add	x0, x24, x0
  4149b0:	cmp	x1, x0
  4149b4:	b.ge	414a5c <_obstack_memory_used@@Base+0x172c>  // b.tcont
  4149b8:	ldr	x2, [x19, #16]
  4149bc:	str	w20, [x2, x1, lsl #2]
  4149c0:	add	x1, x1, #0x1
  4149c4:	cmp	x0, x1
  4149c8:	b.ne	4149b8 <_obstack_memory_used@@Base+0x1688>  // b.any
  4149cc:	mov	x24, x0
  4149d0:	cmp	x24, x21
  4149d4:	b.ge	414a64 <_obstack_memory_used@@Base+0x1734>  // b.tcont
  4149d8:	sub	x2, x21, x24
  4149dc:	ldr	x25, [x19, #32]
  4149e0:	ldr	x0, [x19, #120]
  4149e4:	cbnz	x0, 4148e0 <_obstack_memory_used@@Base+0x15b0>
  4149e8:	ldr	x1, [x19, #40]
  4149ec:	add	x0, x24, x1
  4149f0:	ldr	x1, [x19]
  4149f4:	add	x1, x1, x0
  4149f8:	mov	x3, x22
  4149fc:	add	x0, sp, #0x5c
  414a00:	bl	412f3c <wcrtomb@plt+0x101fc>
  414a04:	sub	x1, x0, #0x1
  414a08:	cmn	x1, #0x3
  414a0c:	b.hi	414978 <_obstack_memory_used@@Base+0x1648>  // b.pmore
  414a10:	cmn	x0, #0x2
  414a14:	b.ne	41499c <_obstack_memory_used@@Base+0x166c>  // b.any
  414a18:	ldr	x1, [x19, #64]
  414a1c:	ldr	x0, [x19, #88]
  414a20:	cmp	x1, x0
  414a24:	b.ge	414978 <_obstack_memory_used@@Base+0x1648>  // b.tcont
  414a28:	str	x25, [x19, #32]
  414a2c:	ldr	x25, [sp, #64]
  414a30:	str	x24, [x19, #48]
  414a34:	str	x24, [x19, #56]
  414a38:	ldp	x19, x20, [sp, #16]
  414a3c:	ldp	x21, x22, [sp, #32]
  414a40:	ldp	x23, x24, [sp, #48]
  414a44:	ldp	x29, x30, [sp], #160
  414a48:	ret
  414a4c:	and	x0, x0, #0xff
  414a50:	ldrb	w0, [x1, x0]
  414a54:	str	w0, [sp, #92]
  414a58:	b	414994 <_obstack_memory_used@@Base+0x1664>
  414a5c:	mov	x24, x1
  414a60:	b	4149d0 <_obstack_memory_used@@Base+0x16a0>
  414a64:	ldr	x25, [sp, #64]
  414a68:	b	414a30 <_obstack_memory_used@@Base+0x1700>
  414a6c:	cbz	x1, 414c0c <_obstack_memory_used@@Base+0x18dc>
  414a70:	stp	x29, x30, [sp, #-48]!
  414a74:	mov	x29, sp
  414a78:	stp	x19, x20, [sp, #16]
  414a7c:	str	x21, [sp, #32]
  414a80:	mov	x19, x0
  414a84:	mov	x21, x1
  414a88:	ldr	x1, [x1, #8]
  414a8c:	mov	w0, #0x0                   	// #0
  414a90:	cbz	x1, 414bfc <_obstack_memory_used@@Base+0x18cc>
  414a94:	ldr	x2, [x19]
  414a98:	ldr	x0, [x19, #8]
  414a9c:	add	x0, x0, x1, lsl #1
  414aa0:	cmp	x2, x0
  414aa4:	b.lt	414af8 <_obstack_memory_used@@Base+0x17c8>  // b.tstop
  414aa8:	ldr	x0, [x19, #8]
  414aac:	cbz	x0, 414b1c <_obstack_memory_used@@Base+0x17ec>
  414ab0:	ldr	x2, [x21, #8]
  414ab4:	add	x20, x0, x2, lsl #1
  414ab8:	sub	x2, x2, #0x1
  414abc:	subs	x0, x0, #0x1
  414ac0:	ccmp	x2, #0x0, #0x1, pl  // pl = nfrst
  414ac4:	b.ge	414b54 <_obstack_memory_used@@Base+0x1824>  // b.tcont
  414ac8:	tbz	x2, #63, 414b88 <_obstack_memory_used@@Base+0x1858>
  414acc:	ldr	x1, [x19, #8]
  414ad0:	ldr	x2, [x21, #8]
  414ad4:	add	x2, x1, x2, lsl #1
  414ad8:	sub	x5, x2, #0x1
  414adc:	mov	w0, #0x0                   	// #0
  414ae0:	subs	x2, x2, x20
  414ae4:	b.eq	414bfc <_obstack_memory_used@@Base+0x18cc>  // b.none
  414ae8:	sub	x3, x1, #0x1
  414aec:	add	x1, x1, x2
  414af0:	str	x1, [x19, #8]
  414af4:	b	414bb8 <_obstack_memory_used@@Base+0x1888>
  414af8:	add	x1, x1, x2
  414afc:	lsl	x20, x1, #1
  414b00:	lsl	x1, x1, #4
  414b04:	ldr	x0, [x19, #16]
  414b08:	bl	402930 <realloc@plt>
  414b0c:	cbz	x0, 414c14 <_obstack_memory_used@@Base+0x18e4>
  414b10:	str	x0, [x19, #16]
  414b14:	str	x20, [x19]
  414b18:	b	414aa8 <_obstack_memory_used@@Base+0x1778>
  414b1c:	ldr	x0, [x21, #8]
  414b20:	str	x0, [x19, #8]
  414b24:	ldr	x2, [x21, #8]
  414b28:	lsl	x2, x2, #3
  414b2c:	ldr	x1, [x21, #16]
  414b30:	ldr	x0, [x19, #16]
  414b34:	bl	402650 <memcpy@plt>
  414b38:	mov	w0, #0x0                   	// #0
  414b3c:	b	414bfc <_obstack_memory_used@@Base+0x18cc>
  414b40:	sub	x2, x2, #0x1
  414b44:	sub	x0, x0, #0x1
  414b48:	cmp	x2, #0x0
  414b4c:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
  414b50:	b.lt	414ac8 <_obstack_memory_used@@Base+0x1798>  // b.tstop
  414b54:	ldr	x1, [x19, #16]
  414b58:	ldr	x4, [x1, x0, lsl #3]
  414b5c:	ldr	x3, [x21, #16]
  414b60:	ldr	x3, [x3, x2, lsl #3]
  414b64:	cmp	x4, x3
  414b68:	b.eq	414b40 <_obstack_memory_used@@Base+0x1810>  // b.none
  414b6c:	b.ge	414b80 <_obstack_memory_used@@Base+0x1850>  // b.tcont
  414b70:	sub	x2, x2, #0x1
  414b74:	sub	x20, x20, #0x1
  414b78:	str	x3, [x1, x20, lsl #3]
  414b7c:	b	414b48 <_obstack_memory_used@@Base+0x1818>
  414b80:	sub	x0, x0, #0x1
  414b84:	b	414b48 <_obstack_memory_used@@Base+0x1818>
  414b88:	add	x2, x2, #0x1
  414b8c:	sub	x20, x20, x2
  414b90:	ldr	x0, [x19, #16]
  414b94:	lsl	x2, x2, #3
  414b98:	ldr	x1, [x21, #16]
  414b9c:	add	x0, x0, x20, lsl #3
  414ba0:	bl	402650 <memcpy@plt>
  414ba4:	b	414acc <_obstack_memory_used@@Base+0x179c>
  414ba8:	add	x4, x3, x2
  414bac:	str	x0, [x1, x4, lsl #3]
  414bb0:	subs	x3, x3, #0x1
  414bb4:	b.mi	414be8 <_obstack_memory_used@@Base+0x18b8>  // b.first
  414bb8:	ldr	x1, [x19, #16]
  414bbc:	ldr	x4, [x1, x5, lsl #3]
  414bc0:	ldr	x0, [x1, x3, lsl #3]
  414bc4:	cmp	x4, x0
  414bc8:	b.le	414ba8 <_obstack_memory_used@@Base+0x1878>
  414bcc:	sub	x5, x5, #0x1
  414bd0:	add	x0, x3, x2
  414bd4:	str	x4, [x1, x0, lsl #3]
  414bd8:	subs	x2, x2, #0x1
  414bdc:	b.ne	414bb8 <_obstack_memory_used@@Base+0x1888>  // b.any
  414be0:	mov	w0, #0x0                   	// #0
  414be4:	b	414bfc <_obstack_memory_used@@Base+0x18cc>
  414be8:	ldr	x0, [x19, #16]
  414bec:	lsl	x2, x2, #3
  414bf0:	add	x1, x0, x20, lsl #3
  414bf4:	bl	402650 <memcpy@plt>
  414bf8:	mov	w0, #0x0                   	// #0
  414bfc:	ldp	x19, x20, [sp, #16]
  414c00:	ldr	x21, [sp, #32]
  414c04:	ldp	x29, x30, [sp], #48
  414c08:	ret
  414c0c:	mov	w0, #0x0                   	// #0
  414c10:	ret
  414c14:	mov	w0, #0xc                   	// #12
  414c18:	b	414bfc <_obstack_memory_used@@Base+0x18cc>
  414c1c:	stp	x29, x30, [sp, #-48]!
  414c20:	mov	x29, sp
  414c24:	stp	x19, x20, [sp, #16]
  414c28:	mov	x19, x1
  414c2c:	ldr	x1, [x1, #8]
  414c30:	cbz	x1, 414db8 <_obstack_memory_used@@Base+0x1a88>
  414c34:	stp	x21, x22, [sp, #32]
  414c38:	mov	x21, x0
  414c3c:	mov	x20, x2
  414c40:	ldr	x2, [x2, #8]
  414c44:	mov	w0, #0x0                   	// #0
  414c48:	cbz	x2, 414dcc <_obstack_memory_used@@Base+0x1a9c>
  414c4c:	add	x1, x1, x2
  414c50:	ldr	x22, [x21]
  414c54:	ldr	x0, [x21, #8]
  414c58:	add	x0, x1, x0
  414c5c:	cmp	x0, x22
  414c60:	b.gt	414c88 <_obstack_memory_used@@Base+0x1958>
  414c64:	ldr	x3, [x21, #8]
  414c68:	ldr	x5, [x19, #8]
  414c6c:	ldr	x6, [x20, #8]
  414c70:	add	x1, x3, x5
  414c74:	add	x1, x1, x6
  414c78:	sub	x5, x5, #0x1
  414c7c:	sub	x6, x6, #0x1
  414c80:	sub	x3, x3, #0x1
  414c84:	b	414d00 <_obstack_memory_used@@Base+0x19d0>
  414c88:	add	x22, x1, x22
  414c8c:	lsl	x1, x22, #3
  414c90:	ldr	x0, [x21, #16]
  414c94:	bl	402930 <realloc@plt>
  414c98:	cbz	x0, 414dc0 <_obstack_memory_used@@Base+0x1a90>
  414c9c:	str	x0, [x21, #16]
  414ca0:	str	x22, [x21]
  414ca4:	b	414c64 <_obstack_memory_used@@Base+0x1934>
  414ca8:	tbnz	x3, #63, 414cc8 <_obstack_memory_used@@Base+0x1998>
  414cac:	ldr	x2, [x21, #16]
  414cb0:	ldr	x0, [x2, x3, lsl #3]
  414cb4:	cmp	x4, x0
  414cb8:	b.ge	414ce8 <_obstack_memory_used@@Base+0x19b8>  // b.tcont
  414cbc:	sub	x3, x3, #0x1
  414cc0:	cmn	x3, #0x1
  414cc4:	b.ne	414cb0 <_obstack_memory_used@@Base+0x1980>  // b.any
  414cc8:	sub	x1, x1, #0x1
  414ccc:	ldr	x0, [x21, #16]
  414cd0:	str	x4, [x0, x1, lsl #3]
  414cd4:	subs	x5, x5, #0x1
  414cd8:	b.mi	414d24 <_obstack_memory_used@@Base+0x19f4>  // b.first
  414cdc:	subs	x6, x6, #0x1
  414ce0:	b.pl	414d00 <_obstack_memory_used@@Base+0x19d0>  // b.nfrst
  414ce4:	b	414d24 <_obstack_memory_used@@Base+0x19f4>
  414ce8:	tbnz	x3, #63, 414cc8 <_obstack_memory_used@@Base+0x1998>
  414cec:	cmp	x4, x0
  414cf0:	b.ne	414cc8 <_obstack_memory_used@@Base+0x1998>  // b.any
  414cf4:	b	414cd4 <_obstack_memory_used@@Base+0x19a4>
  414cf8:	subs	x5, x5, #0x1
  414cfc:	b.mi	414d24 <_obstack_memory_used@@Base+0x19f4>  // b.first
  414d00:	ldr	x0, [x19, #16]
  414d04:	ldr	x4, [x0, x5, lsl #3]
  414d08:	ldr	x0, [x20, #16]
  414d0c:	ldr	x0, [x0, x6, lsl #3]
  414d10:	cmp	x4, x0
  414d14:	b.eq	414ca8 <_obstack_memory_used@@Base+0x1978>  // b.none
  414d18:	b.ge	414cf8 <_obstack_memory_used@@Base+0x19c8>  // b.tcont
  414d1c:	subs	x6, x6, #0x1
  414d20:	b.pl	414d00 <_obstack_memory_used@@Base+0x19d0>  // b.nfrst
  414d24:	ldr	x0, [x21, #8]
  414d28:	sub	x3, x0, #0x1
  414d2c:	ldr	x2, [x19, #8]
  414d30:	add	x2, x0, x2
  414d34:	ldr	x4, [x20, #8]
  414d38:	add	x2, x2, x4
  414d3c:	sub	x6, x2, #0x1
  414d40:	sub	x2, x2, x1
  414d44:	add	x0, x0, x2
  414d48:	str	x0, [x21, #8]
  414d4c:	cmp	x2, #0x0
  414d50:	ccmp	x3, #0x0, #0x1, gt
  414d54:	b.ge	414d8c <_obstack_memory_used@@Base+0x1a5c>  // b.tcont
  414d58:	ldr	x0, [x21, #16]
  414d5c:	lsl	x2, x2, #3
  414d60:	add	x1, x0, x1, lsl #3
  414d64:	bl	402650 <memcpy@plt>
  414d68:	mov	w0, #0x0                   	// #0
  414d6c:	ldp	x21, x22, [sp, #32]
  414d70:	ldp	x19, x20, [sp, #16]
  414d74:	ldp	x29, x30, [sp], #48
  414d78:	ret
  414d7c:	add	x5, x3, x2
  414d80:	str	x4, [x0, x5, lsl #3]
  414d84:	subs	x3, x3, #0x1
  414d88:	b.mi	414d58 <_obstack_memory_used@@Base+0x1a28>  // b.first
  414d8c:	ldr	x0, [x21, #16]
  414d90:	ldr	x5, [x0, x6, lsl #3]
  414d94:	ldr	x4, [x0, x3, lsl #3]
  414d98:	cmp	x5, x4
  414d9c:	b.le	414d7c <_obstack_memory_used@@Base+0x1a4c>
  414da0:	sub	x6, x6, #0x1
  414da4:	add	x4, x3, x2
  414da8:	str	x5, [x0, x4, lsl #3]
  414dac:	subs	x2, x2, #0x1
  414db0:	b.ne	414d8c <_obstack_memory_used@@Base+0x1a5c>  // b.any
  414db4:	b	414d58 <_obstack_memory_used@@Base+0x1a28>
  414db8:	mov	w0, #0x0                   	// #0
  414dbc:	b	414d70 <_obstack_memory_used@@Base+0x1a40>
  414dc0:	mov	w0, #0xc                   	// #12
  414dc4:	ldp	x21, x22, [sp, #32]
  414dc8:	b	414d70 <_obstack_memory_used@@Base+0x1a40>
  414dcc:	ldp	x21, x22, [sp, #32]
  414dd0:	b	414d70 <_obstack_memory_used@@Base+0x1a40>
  414dd4:	stp	x29, x30, [sp, #-32]!
  414dd8:	mov	x29, sp
  414ddc:	stp	x19, x20, [sp, #16]
  414de0:	mov	x19, x0
  414de4:	ldr	x0, [x1, #8]
  414de8:	str	x0, [x19, #8]
  414dec:	cmp	x0, #0x0
  414df0:	b.le	414e3c <_obstack_memory_used@@Base+0x1b0c>
  414df4:	mov	x20, x1
  414df8:	str	x0, [x19]
  414dfc:	lsl	x0, x0, #3
  414e00:	bl	402800 <malloc@plt>
  414e04:	str	x0, [x19, #16]
  414e08:	cbz	x0, 414e2c <_obstack_memory_used@@Base+0x1afc>
  414e0c:	ldr	x2, [x20, #8]
  414e10:	lsl	x2, x2, #3
  414e14:	ldr	x1, [x20, #16]
  414e18:	bl	402650 <memcpy@plt>
  414e1c:	mov	w0, #0x0                   	// #0
  414e20:	ldp	x19, x20, [sp, #16]
  414e24:	ldp	x29, x30, [sp], #32
  414e28:	ret
  414e2c:	str	xzr, [x19, #8]
  414e30:	str	xzr, [x19]
  414e34:	mov	w0, #0xc                   	// #12
  414e38:	b	414e20 <_obstack_memory_used@@Base+0x1af0>
  414e3c:	stp	xzr, xzr, [x19]
  414e40:	str	xzr, [x19, #16]
  414e44:	mov	w0, #0x0                   	// #0
  414e48:	b	414e20 <_obstack_memory_used@@Base+0x1af0>
  414e4c:	stp	x29, x30, [sp, #-64]!
  414e50:	mov	x29, sp
  414e54:	stp	x19, x20, [sp, #16]
  414e58:	stp	x21, x22, [sp, #32]
  414e5c:	mov	x21, x0
  414e60:	mov	x19, x2
  414e64:	cbz	x1, 414e84 <_obstack_memory_used@@Base+0x1b54>
  414e68:	mov	x20, x1
  414e6c:	ldr	x0, [x1, #8]
  414e70:	cmp	x0, #0x0
  414e74:	ccmp	x2, #0x0, #0x4, gt
  414e78:	b.ne	414eb0 <_obstack_memory_used@@Base+0x1b80>  // b.any
  414e7c:	cmp	x0, #0x0
  414e80:	b.gt	414ebc <_obstack_memory_used@@Base+0x1b8c>
  414e84:	cbz	x19, 414e94 <_obstack_memory_used@@Base+0x1b64>
  414e88:	ldr	x0, [x19, #8]
  414e8c:	cmp	x0, #0x0
  414e90:	b.gt	414f3c <_obstack_memory_used@@Base+0x1c0c>
  414e94:	stp	xzr, xzr, [x21]
  414e98:	str	xzr, [x21, #16]
  414e9c:	mov	w0, #0x0                   	// #0
  414ea0:	ldp	x19, x20, [sp, #16]
  414ea4:	ldp	x21, x22, [sp, #32]
  414ea8:	ldp	x29, x30, [sp], #64
  414eac:	ret
  414eb0:	ldr	x1, [x2, #8]
  414eb4:	cmp	x1, #0x0
  414eb8:	b.gt	414ecc <_obstack_memory_used@@Base+0x1b9c>
  414ebc:	mov	x1, x20
  414ec0:	mov	x0, x21
  414ec4:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  414ec8:	b	414ea0 <_obstack_memory_used@@Base+0x1b70>
  414ecc:	add	x0, x0, x1
  414ed0:	str	x0, [x21]
  414ed4:	lsl	x0, x0, #3
  414ed8:	bl	402800 <malloc@plt>
  414edc:	str	x0, [x21, #16]
  414ee0:	cbz	x0, 414fec <_obstack_memory_used@@Base+0x1cbc>
  414ee4:	stp	x23, x24, [sp, #48]
  414ee8:	ldr	x2, [x20, #8]
  414eec:	mov	x0, #0x0                   	// #0
  414ef0:	mov	x22, #0x0                   	// #0
  414ef4:	mov	x23, #0x0                   	// #0
  414ef8:	mov	x24, #0x0                   	// #0
  414efc:	cmp	x2, #0x0
  414f00:	b.gt	414f6c <_obstack_memory_used@@Base+0x1c3c>
  414f04:	ldr	x1, [x19, #8]
  414f08:	cmp	x1, x22
  414f0c:	b.le	414fdc <_obstack_memory_used@@Base+0x1cac>
  414f10:	ldr	x0, [x21, #16]
  414f14:	sub	x2, x1, x22
  414f18:	ldr	x1, [x19, #16]
  414f1c:	lsl	x2, x2, #3
  414f20:	add	x1, x1, x22, lsl #3
  414f24:	add	x0, x0, x24, lsl #3
  414f28:	bl	402650 <memcpy@plt>
  414f2c:	ldr	x0, [x19, #8]
  414f30:	sub	x22, x0, x22
  414f34:	add	x24, x24, x22
  414f38:	b	414fdc <_obstack_memory_used@@Base+0x1cac>
  414f3c:	mov	x1, x19
  414f40:	mov	x0, x21
  414f44:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  414f48:	b	414ea0 <_obstack_memory_used@@Base+0x1b70>
  414f4c:	add	x22, x22, #0x1
  414f50:	add	x24, x0, #0x1
  414f54:	ldr	x1, [x21, #16]
  414f58:	str	x2, [x1, x0, lsl #3]
  414f5c:	ldr	x2, [x20, #8]
  414f60:	add	x0, x0, #0x1
  414f64:	cmp	x2, x23
  414f68:	b.le	414f04 <_obstack_memory_used@@Base+0x1bd4>
  414f6c:	mov	x24, x0
  414f70:	ldr	x1, [x19, #8]
  414f74:	cmp	x1, x22
  414f78:	b.le	414fac <_obstack_memory_used@@Base+0x1c7c>
  414f7c:	ldr	x1, [x20, #16]
  414f80:	ldr	x1, [x1, x23, lsl #3]
  414f84:	ldr	x2, [x19, #16]
  414f88:	ldr	x2, [x2, x22, lsl #3]
  414f8c:	cmp	x1, x2
  414f90:	b.gt	414f4c <_obstack_memory_used@@Base+0x1c1c>
  414f94:	cinc	x22, x22, eq  // eq = none
  414f98:	add	x23, x23, #0x1
  414f9c:	add	x24, x0, #0x1
  414fa0:	ldr	x2, [x21, #16]
  414fa4:	str	x1, [x2, x0, lsl #3]
  414fa8:	b	414f5c <_obstack_memory_used@@Base+0x1c2c>
  414fac:	cmp	x2, x23
  414fb0:	b.le	414fdc <_obstack_memory_used@@Base+0x1cac>
  414fb4:	ldr	x3, [x21, #16]
  414fb8:	sub	x2, x2, x23
  414fbc:	ldr	x1, [x20, #16]
  414fc0:	lsl	x2, x2, #3
  414fc4:	add	x1, x1, x23, lsl #3
  414fc8:	add	x0, x3, x0, lsl #3
  414fcc:	bl	402650 <memcpy@plt>
  414fd0:	ldr	x0, [x20, #8]
  414fd4:	sub	x23, x0, x23
  414fd8:	add	x24, x24, x23
  414fdc:	str	x24, [x21, #8]
  414fe0:	mov	w0, #0x0                   	// #0
  414fe4:	ldp	x23, x24, [sp, #48]
  414fe8:	b	414ea0 <_obstack_memory_used@@Base+0x1b70>
  414fec:	mov	w0, #0xc                   	// #12
  414ff0:	b	414ea0 <_obstack_memory_used@@Base+0x1b70>
  414ff4:	stp	x29, x30, [sp, #-176]!
  414ff8:	mov	x29, sp
  414ffc:	stp	x19, x20, [sp, #16]
  415000:	stp	x21, x22, [sp, #32]
  415004:	mov	x20, x0
  415008:	ldr	x19, [x0, #48]
  41500c:	ldr	x0, [x0, #88]
  415010:	ldr	x22, [x20, #64]
  415014:	cmp	x22, x0
  415018:	csel	x22, x22, x0, le
  41501c:	ldrb	w0, [x20, #138]
  415020:	cbnz	w0, 41502c <_obstack_memory_used@@Base+0x1cfc>
  415024:	ldr	x0, [x20, #120]
  415028:	cbz	x0, 415054 <_obstack_memory_used@@Base+0x1d24>
  41502c:	ldr	x21, [x20, #56]
  415030:	cmp	x22, x19
  415034:	b.gt	41525c <_obstack_memory_used@@Base+0x1f2c>
  415038:	str	x19, [x20, #48]
  41503c:	str	x21, [x20, #56]
  415040:	mov	w0, #0x0                   	// #0
  415044:	ldp	x19, x20, [sp, #16]
  415048:	ldp	x21, x22, [sp, #32]
  41504c:	ldp	x29, x30, [sp], #176
  415050:	ret
  415054:	ldrb	w0, [x20, #140]
  415058:	cbnz	w0, 41502c <_obstack_memory_used@@Base+0x1cfc>
  41505c:	cmp	x19, x22
  415060:	b.ge	41524c <_obstack_memory_used@@Base+0x1f1c>  // b.tcont
  415064:	stp	x23, x24, [sp, #48]
  415068:	stp	x25, x26, [sp, #64]
  41506c:	str	x27, [sp, #80]
  415070:	add	x24, x20, #0x20
  415074:	mov	w23, #0xffffffff            	// #-1
  415078:	b	4150fc <_obstack_memory_used@@Base+0x1dcc>
  41507c:	bl	402940 <__ctype_toupper_loc@plt>
  415080:	ldr	x1, [x20, #8]
  415084:	and	x21, x21, #0xff
  415088:	ldr	x0, [x0]
  41508c:	ldr	w0, [x0, x21, lsl #2]
  415090:	strb	w0, [x1, x19]
  415094:	ldr	x0, [x20, #16]
  415098:	ldr	x1, [x20, #8]
  41509c:	ldrb	w1, [x1, x19]
  4150a0:	str	w1, [x0, x19, lsl #2]
  4150a4:	add	x19, x19, #0x1
  4150a8:	b	4150f4 <_obstack_memory_used@@Base+0x1dc4>
  4150ac:	ldr	x0, [x20, #8]
  4150b0:	mov	x2, x21
  4150b4:	add	x1, sp, #0x68
  4150b8:	add	x0, x0, x19
  4150bc:	bl	402650 <memcpy@plt>
  4150c0:	add	x19, x19, #0x1
  4150c4:	ldr	x0, [x20, #16]
  4150c8:	str	w25, [x0, x26, lsl #2]
  4150cc:	add	x2, x26, x21
  4150d0:	cmp	x19, x2
  4150d4:	b.ge	4150f4 <_obstack_memory_used@@Base+0x1dc4>  // b.tcont
  4150d8:	mov	x1, x19
  4150dc:	ldr	x0, [x20, #16]
  4150e0:	str	w23, [x0, x1, lsl #2]
  4150e4:	add	x1, x1, #0x1
  4150e8:	cmp	x2, x1
  4150ec:	b.ne	4150dc <_obstack_memory_used@@Base+0x1dac>  // b.any
  4150f0:	mov	x19, x2
  4150f4:	cmp	x19, x22
  4150f8:	b.ge	415240 <_obstack_memory_used@@Base+0x1f10>  // b.tcont
  4150fc:	ldr	x25, [x20]
  415100:	ldr	x27, [x20, #40]
  415104:	add	x0, x25, x27
  415108:	ldrb	w21, [x0, x19]
  41510c:	tst	w21, #0xffffff80
  415110:	b.ne	415120 <_obstack_memory_used@@Base+0x1df0>  // b.any
  415114:	mov	x0, x24
  415118:	bl	402a10 <mbsinit@plt>
  41511c:	cbnz	w0, 41507c <_obstack_memory_used@@Base+0x1d4c>
  415120:	ldr	x0, [x20, #32]
  415124:	str	x0, [sp, #168]
  415128:	mov	x26, x19
  41512c:	add	x1, x27, x19
  415130:	mov	x3, x24
  415134:	sub	x2, x22, x19
  415138:	add	x1, x25, x1
  41513c:	add	x0, sp, #0x64
  415140:	bl	412f3c <wcrtomb@plt+0x101fc>
  415144:	mov	x21, x0
  415148:	sub	x0, x0, #0x1
  41514c:	cmn	x0, #0x4
  415150:	b.hi	4151b0 <_obstack_memory_used@@Base+0x1e80>  // b.pmore
  415154:	ldr	w27, [sp, #100]
  415158:	mov	w0, w27
  41515c:	bl	402c70 <towupper@plt>
  415160:	mov	w25, w0
  415164:	cmp	w27, w0
  415168:	b.eq	41518c <_obstack_memory_used@@Base+0x1e5c>  // b.none
  41516c:	add	x2, sp, #0xa8
  415170:	mov	w1, w0
  415174:	add	x0, sp, #0x68
  415178:	bl	402d40 <wcrtomb@plt>
  41517c:	cmp	x21, x0
  415180:	b.eq	4150ac <_obstack_memory_used@@Base+0x1d7c>  // b.none
  415184:	mov	x21, x19
  415188:	b	415268 <_obstack_memory_used@@Base+0x1f38>
  41518c:	ldr	x0, [x20, #8]
  415190:	ldr	x1, [x20, #40]
  415194:	add	x1, x19, x1
  415198:	ldr	x3, [x20]
  41519c:	mov	x2, x21
  4151a0:	add	x1, x3, x1
  4151a4:	add	x0, x0, x19
  4151a8:	bl	402650 <memcpy@plt>
  4151ac:	b	4150c0 <_obstack_memory_used@@Base+0x1d90>
  4151b0:	cmn	x0, #0x3
  4151b4:	b.hi	4151f0 <_obstack_memory_used@@Base+0x1ec0>  // b.pmore
  4151b8:	ldr	x1, [x20, #64]
  4151bc:	ldr	x0, [x20, #88]
  4151c0:	cmp	x1, x0
  4151c4:	b.lt	415228 <_obstack_memory_used@@Base+0x1ef8>  // b.tstop
  4151c8:	ldr	x0, [x20]
  4151cc:	ldr	x1, [x20, #40]
  4151d0:	add	x0, x0, x19
  4151d4:	ldrb	w0, [x0, x1]
  4151d8:	ldr	x1, [x20, #8]
  4151dc:	strb	w0, [x1, x19]
  4151e0:	add	x19, x19, #0x1
  4151e4:	ldr	x1, [x20, #16]
  4151e8:	str	w0, [x1, x26, lsl #2]
  4151ec:	b	4150f4 <_obstack_memory_used@@Base+0x1dc4>
  4151f0:	ldr	x0, [x20]
  4151f4:	ldr	x1, [x20, #40]
  4151f8:	add	x0, x0, x19
  4151fc:	ldrb	w0, [x0, x1]
  415200:	ldr	x1, [x20, #8]
  415204:	strb	w0, [x1, x19]
  415208:	add	x19, x19, #0x1
  41520c:	ldr	x1, [x20, #16]
  415210:	str	w0, [x1, x26, lsl #2]
  415214:	cmn	x21, #0x1
  415218:	b.ne	4150f4 <_obstack_memory_used@@Base+0x1dc4>  // b.any
  41521c:	ldr	x0, [sp, #168]
  415220:	str	x0, [x20, #32]
  415224:	b	4150f4 <_obstack_memory_used@@Base+0x1dc4>
  415228:	ldr	x0, [sp, #168]
  41522c:	str	x0, [x20, #32]
  415230:	ldp	x23, x24, [sp, #48]
  415234:	ldp	x25, x26, [sp, #64]
  415238:	ldr	x27, [sp, #80]
  41523c:	b	41524c <_obstack_memory_used@@Base+0x1f1c>
  415240:	ldp	x23, x24, [sp, #48]
  415244:	ldp	x25, x26, [sp, #64]
  415248:	ldr	x27, [sp, #80]
  41524c:	str	x19, [x20, #48]
  415250:	str	x19, [x20, #56]
  415254:	mov	w0, #0x0                   	// #0
  415258:	b	415044 <_obstack_memory_used@@Base+0x1d14>
  41525c:	stp	x23, x24, [sp, #48]
  415260:	stp	x25, x26, [sp, #64]
  415264:	str	x27, [sp, #80]
  415268:	sub	x2, x22, x19
  41526c:	ldr	x0, [x20, #32]
  415270:	str	x0, [sp, #168]
  415274:	ldr	x1, [x20, #120]
  415278:	cbnz	x1, 415344 <_obstack_memory_used@@Base+0x2014>
  41527c:	ldr	x0, [x20, #40]
  415280:	add	x0, x21, x0
  415284:	ldr	x25, [x20]
  415288:	add	x25, x25, x0
  41528c:	add	x3, x20, #0x20
  415290:	mov	x1, x25
  415294:	add	x0, sp, #0x64
  415298:	bl	412f3c <wcrtomb@plt+0x101fc>
  41529c:	mov	x23, x0
  4152a0:	sub	x27, x0, #0x1
  4152a4:	cmn	x27, #0x4
  4152a8:	b.hi	415560 <_obstack_memory_used@@Base+0x2230>  // b.pmore
  4152ac:	ldr	w26, [sp, #100]
  4152b0:	mov	w0, w26
  4152b4:	bl	402c70 <towupper@plt>
  4152b8:	mov	w24, w0
  4152bc:	cmp	w26, w0
  4152c0:	b.eq	415520 <_obstack_memory_used@@Base+0x21f0>  // b.none
  4152c4:	add	x2, sp, #0xa8
  4152c8:	mov	w1, w0
  4152cc:	add	x0, sp, #0x68
  4152d0:	bl	402d40 <wcrtomb@plt>
  4152d4:	mov	x26, x0
  4152d8:	cmp	x23, x0
  4152dc:	b.ne	4153c4 <_obstack_memory_used@@Base+0x2094>  // b.any
  4152e0:	ldr	x0, [x20, #8]
  4152e4:	mov	x2, x26
  4152e8:	add	x1, sp, #0x68
  4152ec:	add	x0, x0, x19
  4152f0:	bl	402650 <memcpy@plt>
  4152f4:	ldrb	w0, [x20, #140]
  4152f8:	cbnz	w0, 415538 <_obstack_memory_used@@Base+0x2208>
  4152fc:	add	x21, x21, x23
  415300:	add	x0, x19, #0x1
  415304:	ldr	x1, [x20, #16]
  415308:	str	w24, [x1, x19, lsl #2]
  41530c:	add	x1, x19, x23
  415310:	cmp	x0, x1
  415314:	b.ge	415614 <_obstack_memory_used@@Base+0x22e4>  // b.tcont
  415318:	mov	w3, #0xffffffff            	// #-1
  41531c:	ldr	x2, [x20, #16]
  415320:	str	w3, [x2, x0, lsl #2]
  415324:	add	x0, x0, #0x1
  415328:	cmp	x1, x0
  41532c:	b.ne	41531c <_obstack_memory_used@@Base+0x1fec>  // b.any
  415330:	mov	x19, x1
  415334:	ldp	x23, x24, [sp, #48]
  415338:	ldp	x25, x26, [sp, #64]
  41533c:	ldr	x27, [sp, #80]
  415340:	b	415030 <_obstack_memory_used@@Base+0x1d00>
  415344:	ldr	w6, [x20, #144]
  415348:	cmp	w6, #0x0
  41534c:	b.le	4153ac <_obstack_memory_used@@Base+0x207c>
  415350:	cmp	x2, #0x0
  415354:	b.le	4153b4 <_obstack_memory_used@@Base+0x2084>
  415358:	ldr	x5, [x20]
  41535c:	ldr	x3, [x20, #40]
  415360:	add	x3, x21, x3
  415364:	mov	x7, x2
  415368:	mov	x0, #0x1                   	// #1
  41536c:	sub	x3, x3, #0x1
  415370:	add	x5, x5, x3
  415374:	b	41537c <_obstack_memory_used@@Base+0x204c>
  415378:	mov	x0, x3
  41537c:	ldrb	w3, [x5, x0]
  415380:	ldrb	w4, [x1, x3]
  415384:	add	x3, sp, #0x68
  415388:	add	x3, x0, x3
  41538c:	sturb	w4, [x3, #-1]
  415390:	cmp	w6, w0
  415394:	b.le	4153bc <_obstack_memory_used@@Base+0x208c>
  415398:	add	x3, x0, #0x1
  41539c:	cmp	x0, x7
  4153a0:	b.ne	415378 <_obstack_memory_used@@Base+0x2048>  // b.any
  4153a4:	add	x25, sp, #0x68
  4153a8:	b	41528c <_obstack_memory_used@@Base+0x1f5c>
  4153ac:	add	x25, sp, #0x68
  4153b0:	b	41528c <_obstack_memory_used@@Base+0x1f5c>
  4153b4:	add	x25, sp, #0x68
  4153b8:	b	41528c <_obstack_memory_used@@Base+0x1f5c>
  4153bc:	add	x25, sp, #0x68
  4153c0:	b	41528c <_obstack_memory_used@@Base+0x1f5c>
  4153c4:	cmn	x0, #0x1
  4153c8:	b.eq	415508 <_obstack_memory_used@@Base+0x21d8>  // b.none
  4153cc:	mov	x22, x19
  4153d0:	add	x25, x19, x0
  4153d4:	ldr	x0, [x20, #64]
  4153d8:	cmp	x25, x0
  4153dc:	b.ls	4153f8 <_obstack_memory_used@@Base+0x20c8>  // b.plast
  4153e0:	ldr	x0, [sp, #168]
  4153e4:	str	x0, [x20, #32]
  4153e8:	ldp	x23, x24, [sp, #48]
  4153ec:	ldp	x25, x26, [sp, #64]
  4153f0:	ldr	x27, [sp, #80]
  4153f4:	b	415038 <_obstack_memory_used@@Base+0x1d08>
  4153f8:	ldr	x1, [x20, #24]
  4153fc:	cbz	x1, 4154e4 <_obstack_memory_used@@Base+0x21b4>
  415400:	ldrb	w0, [x20, #140]
  415404:	cbnz	w0, 41542c <_obstack_memory_used@@Base+0x20fc>
  415408:	cbz	x22, 415424 <_obstack_memory_used@@Base+0x20f4>
  41540c:	mov	x0, #0x0                   	// #0
  415410:	ldr	x1, [x20, #24]
  415414:	str	x0, [x1, x0, lsl #3]
  415418:	add	x0, x0, #0x1
  41541c:	cmp	x22, x0
  415420:	b.ne	415410 <_obstack_memory_used@@Base+0x20e0>  // b.any
  415424:	mov	w0, #0x1                   	// #1
  415428:	strb	w0, [x20, #140]
  41542c:	ldr	x0, [x20, #8]
  415430:	mov	x2, x26
  415434:	add	x1, sp, #0x68
  415438:	add	x0, x0, x22
  41543c:	bl	402650 <memcpy@plt>
  415440:	lsl	x0, x22, #2
  415444:	ldr	x1, [x20, #16]
  415448:	str	w24, [x1, x22, lsl #2]
  41544c:	ldr	x1, [x20, #24]
  415450:	str	x21, [x1, x22, lsl #3]
  415454:	cmp	x26, #0x1
  415458:	b.ls	415498 <_obstack_memory_used@@Base+0x2168>  // b.plast
  41545c:	add	x0, x0, #0x4
  415460:	mov	x1, #0x1                   	// #1
  415464:	mov	w3, #0xffffffff            	// #-1
  415468:	cmp	x23, x1
  41546c:	csel	x2, x27, x1, ls  // ls = plast
  415470:	ldr	x5, [x20, #24]
  415474:	lsl	x4, x0, #1
  415478:	add	x2, x21, x2
  41547c:	str	x2, [x5, x4]
  415480:	ldr	x2, [x20, #16]
  415484:	str	w3, [x2, x0]
  415488:	add	x1, x1, #0x1
  41548c:	add	x0, x0, #0x4
  415490:	cmp	x1, x26
  415494:	b.ne	415468 <_obstack_memory_used@@Base+0x2138>  // b.any
  415498:	sub	x26, x26, x23
  41549c:	ldr	x0, [x20, #88]
  4154a0:	add	x0, x26, x0
  4154a4:	str	x0, [x20, #88]
  4154a8:	ldr	x1, [x20, #96]
  4154ac:	cmp	x21, x1
  4154b0:	b.ge	4154c0 <_obstack_memory_used@@Base+0x2190>  // b.tcont
  4154b4:	ldr	x1, [x20, #104]
  4154b8:	add	x26, x1, x26
  4154bc:	str	x26, [x20, #104]
  4154c0:	ldr	x22, [x20, #64]
  4154c4:	cmp	x22, x0
  4154c8:	csel	x22, x22, x0, le
  4154cc:	mov	x19, x25
  4154d0:	add	x21, x21, x23
  4154d4:	ldp	x23, x24, [sp, #48]
  4154d8:	ldp	x25, x26, [sp, #64]
  4154dc:	ldr	x27, [sp, #80]
  4154e0:	b	415030 <_obstack_memory_used@@Base+0x1d00>
  4154e4:	lsl	x0, x0, #3
  4154e8:	bl	402800 <malloc@plt>
  4154ec:	str	x0, [x20, #24]
  4154f0:	cbnz	x0, 415400 <_obstack_memory_used@@Base+0x20d0>
  4154f4:	mov	w0, #0xc                   	// #12
  4154f8:	ldp	x23, x24, [sp, #48]
  4154fc:	ldp	x25, x26, [sp, #64]
  415500:	ldr	x27, [sp, #80]
  415504:	b	415044 <_obstack_memory_used@@Base+0x1d14>
  415508:	ldr	x0, [x20, #8]
  41550c:	mov	x2, x23
  415510:	mov	x1, x25
  415514:	add	x0, x0, x19
  415518:	bl	402650 <memcpy@plt>
  41551c:	b	4152f4 <_obstack_memory_used@@Base+0x1fc4>
  415520:	ldr	x0, [x20, #8]
  415524:	mov	x2, x23
  415528:	mov	x1, x25
  41552c:	add	x0, x0, x19
  415530:	bl	402650 <memcpy@plt>
  415534:	b	4152f4 <_obstack_memory_used@@Base+0x1fc4>
  415538:	lsl	x1, x19, #3
  41553c:	mov	x0, x21
  415540:	add	x3, x23, x21
  415544:	ldr	x2, [x20, #24]
  415548:	str	x0, [x2, x1]
  41554c:	add	x1, x1, #0x8
  415550:	add	x0, x0, #0x1
  415554:	cmp	x0, x3
  415558:	b.ne	415544 <_obstack_memory_used@@Base+0x2214>  // b.any
  41555c:	b	4152fc <_obstack_memory_used@@Base+0x1fcc>
  415560:	cmn	x27, #0x3
  415564:	b.hi	415578 <_obstack_memory_used@@Base+0x2248>  // b.pmore
  415568:	ldr	x1, [x20, #64]
  41556c:	ldr	x0, [x20, #88]
  415570:	cmp	x1, x0
  415574:	b.lt	4155fc <_obstack_memory_used@@Base+0x22cc>  // b.tstop
  415578:	ldr	x0, [x20]
  41557c:	ldr	x1, [x20, #40]
  415580:	add	x0, x0, x21
  415584:	ldrb	w0, [x0, x1]
  415588:	ldr	x1, [x20, #120]
  41558c:	cbnz	x1, 4155cc <_obstack_memory_used@@Base+0x229c>
  415590:	mov	x2, x19
  415594:	ldr	x1, [x20, #8]
  415598:	strb	w0, [x1, x19]
  41559c:	ldrb	w1, [x20, #140]
  4155a0:	cbnz	w1, 4155d8 <_obstack_memory_used@@Base+0x22a8>
  4155a4:	add	x21, x21, #0x1
  4155a8:	add	x19, x19, #0x1
  4155ac:	ldr	x1, [x20, #16]
  4155b0:	str	w0, [x1, x2, lsl #2]
  4155b4:	cmn	x23, #0x1
  4155b8:	b.eq	4155e4 <_obstack_memory_used@@Base+0x22b4>  // b.none
  4155bc:	ldp	x23, x24, [sp, #48]
  4155c0:	ldp	x25, x26, [sp, #64]
  4155c4:	ldr	x27, [sp, #80]
  4155c8:	b	415030 <_obstack_memory_used@@Base+0x1d00>
  4155cc:	and	x0, x0, #0xff
  4155d0:	ldrb	w0, [x1, x0]
  4155d4:	b	415590 <_obstack_memory_used@@Base+0x2260>
  4155d8:	ldr	x1, [x20, #24]
  4155dc:	str	x21, [x1, x19, lsl #3]
  4155e0:	b	4155a4 <_obstack_memory_used@@Base+0x2274>
  4155e4:	ldr	x0, [sp, #168]
  4155e8:	str	x0, [x20, #32]
  4155ec:	ldp	x23, x24, [sp, #48]
  4155f0:	ldp	x25, x26, [sp, #64]
  4155f4:	ldr	x27, [sp, #80]
  4155f8:	b	415030 <_obstack_memory_used@@Base+0x1d00>
  4155fc:	ldr	x0, [sp, #168]
  415600:	str	x0, [x20, #32]
  415604:	ldp	x23, x24, [sp, #48]
  415608:	ldp	x25, x26, [sp, #64]
  41560c:	ldr	x27, [sp, #80]
  415610:	b	415038 <_obstack_memory_used@@Base+0x1d08>
  415614:	mov	x19, x0
  415618:	ldp	x23, x24, [sp, #48]
  41561c:	ldp	x25, x26, [sp, #64]
  415620:	ldr	x27, [sp, #80]
  415624:	b	415030 <_obstack_memory_used@@Base+0x1d00>
  415628:	stp	x29, x30, [sp, #-32]!
  41562c:	mov	x29, sp
  415630:	stp	x19, x20, [sp, #16]
  415634:	mov	x19, x0
  415638:	ldr	x0, [x0, #64]
  41563c:	mov	x2, #0xffffffffffffffe     	// #1152921504606846974
  415640:	cmp	x0, x2
  415644:	b.hi	4156fc <_obstack_memory_used@@Base+0x23cc>  // b.pmore
  415648:	lsl	x0, x0, #1
  41564c:	ldr	x2, [x19, #88]
  415650:	cmp	x0, x2
  415654:	csel	x0, x0, x2, le
  415658:	sxtw	x1, w1
  41565c:	cmp	x0, x1
  415660:	csel	x1, x0, x1, ge  // ge = tcont
  415664:	mov	x0, x19
  415668:	bl	413f8c <_obstack_memory_used@@Base+0xc5c>
  41566c:	mov	w20, w0
  415670:	cbnz	w0, 4156b4 <_obstack_memory_used@@Base+0x2384>
  415674:	ldr	x0, [x19, #184]
  415678:	cbz	x0, 415694 <_obstack_memory_used@@Base+0x2364>
  41567c:	ldr	x1, [x19, #64]
  415680:	add	x1, x1, #0x1
  415684:	lsl	x1, x1, #3
  415688:	bl	402930 <realloc@plt>
  41568c:	cbz	x0, 415704 <_obstack_memory_used@@Base+0x23d4>
  415690:	str	x0, [x19, #184]
  415694:	ldrb	w0, [x19, #136]
  415698:	cbz	w0, 4156d0 <_obstack_memory_used@@Base+0x23a0>
  41569c:	ldr	w0, [x19, #144]
  4156a0:	cmp	w0, #0x1
  4156a4:	b.le	4156c4 <_obstack_memory_used@@Base+0x2394>
  4156a8:	mov	x0, x19
  4156ac:	bl	414ff4 <_obstack_memory_used@@Base+0x1cc4>
  4156b0:	mov	w20, w0
  4156b4:	mov	w0, w20
  4156b8:	ldp	x19, x20, [sp, #16]
  4156bc:	ldp	x29, x30, [sp], #32
  4156c0:	ret
  4156c4:	mov	x0, x19
  4156c8:	bl	414800 <_obstack_memory_used@@Base+0x14d0>
  4156cc:	b	4156b4 <_obstack_memory_used@@Base+0x2384>
  4156d0:	ldr	w0, [x19, #144]
  4156d4:	cmp	w0, #0x1
  4156d8:	b.gt	4156f0 <_obstack_memory_used@@Base+0x23c0>
  4156dc:	ldr	x0, [x19, #120]
  4156e0:	cbz	x0, 4156b4 <_obstack_memory_used@@Base+0x2384>
  4156e4:	mov	x0, x19
  4156e8:	bl	4133d0 <_obstack_memory_used@@Base+0xa0>
  4156ec:	b	4156b4 <_obstack_memory_used@@Base+0x2384>
  4156f0:	mov	x0, x19
  4156f4:	bl	414898 <_obstack_memory_used@@Base+0x1568>
  4156f8:	b	4156b4 <_obstack_memory_used@@Base+0x2384>
  4156fc:	mov	w20, #0xc                   	// #12
  415700:	b	4156b4 <_obstack_memory_used@@Base+0x2384>
  415704:	mov	w20, #0xc                   	// #12
  415708:	b	4156b4 <_obstack_memory_used@@Base+0x2384>
  41570c:	stp	x29, x30, [sp, #-48]!
  415710:	mov	x29, sp
  415714:	stp	x19, x20, [sp, #16]
  415718:	str	x21, [sp, #32]
  41571c:	mov	x19, x0
  415720:	mov	x20, x1
  415724:	ldr	x21, [x0, #192]
  415728:	ldr	x0, [x0, #64]
  41572c:	cmp	x0, x1
  415730:	b.gt	415740 <_obstack_memory_used@@Base+0x2410>
  415734:	ldr	x1, [x19, #88]
  415738:	cmp	x0, x1
  41573c:	b.lt	415758 <_obstack_memory_used@@Base+0x2428>  // b.tstop
  415740:	ldr	x0, [x19, #48]
  415744:	cmp	x0, x20
  415748:	b.gt	415768 <_obstack_memory_used@@Base+0x2438>
  41574c:	ldr	x1, [x19, #88]
  415750:	cmp	x0, x1
  415754:	b.ge	415768 <_obstack_memory_used@@Base+0x2438>  // b.tcont
  415758:	add	w1, w20, #0x1
  41575c:	mov	x0, x19
  415760:	bl	415628 <_obstack_memory_used@@Base+0x22f8>
  415764:	cbnz	w0, 415774 <_obstack_memory_used@@Base+0x2444>
  415768:	mov	w0, #0x0                   	// #0
  41576c:	cmp	x21, x20
  415770:	b.lt	415784 <_obstack_memory_used@@Base+0x2454>  // b.tstop
  415774:	ldp	x19, x20, [sp, #16]
  415778:	ldr	x21, [sp, #32]
  41577c:	ldp	x29, x30, [sp], #48
  415780:	ret
  415784:	sub	x2, x20, x21
  415788:	add	x21, x21, #0x1
  41578c:	ldr	x0, [x19, #184]
  415790:	lsl	x2, x2, #3
  415794:	mov	w1, #0x0                   	// #0
  415798:	add	x0, x0, x21, lsl #3
  41579c:	bl	4028d0 <memset@plt>
  4157a0:	str	x20, [x19, #192]
  4157a4:	mov	w0, #0x0                   	// #0
  4157a8:	b	415774 <_obstack_memory_used@@Base+0x2444>
  4157ac:	stp	x29, x30, [sp, #-80]!
  4157b0:	mov	x29, sp
  4157b4:	stp	x19, x20, [sp, #16]
  4157b8:	stp	x21, x22, [sp, #32]
  4157bc:	mov	x21, x0
  4157c0:	mov	x19, x1
  4157c4:	ldr	x1, [x1, #72]
  4157c8:	ldr	x3, [x19, #104]
  4157cc:	cmp	x3, x1
  4157d0:	b.le	4158b8 <_obstack_memory_used@@Base+0x2588>
  4157d4:	mov	x22, x2
  4157d8:	ldr	x0, [x19, #8]
  4157dc:	ldrb	w20, [x0, x1]
  4157e0:	strb	w20, [x21]
  4157e4:	ldrb	w1, [x21, #10]
  4157e8:	and	w1, w1, #0xffffff9f
  4157ec:	strb	w1, [x21, #10]
  4157f0:	ldr	w0, [x19, #144]
  4157f4:	cmp	w0, #0x1
  4157f8:	b.le	41581c <_obstack_memory_used@@Base+0x24ec>
  4157fc:	ldr	x1, [x19, #72]
  415800:	ldr	x2, [x19, #48]
  415804:	cmp	x1, x2
  415808:	b.eq	41581c <_obstack_memory_used@@Base+0x24ec>  // b.none
  41580c:	ldr	x2, [x19, #16]
  415810:	ldr	w1, [x2, x1, lsl #2]
  415814:	cmn	w1, #0x1
  415818:	b.eq	4158d4 <_obstack_memory_used@@Base+0x25a4>  // b.none
  41581c:	cmp	w20, #0x5c
  415820:	b.eq	4158f0 <_obstack_memory_used@@Base+0x25c0>  // b.none
  415824:	mov	w0, #0x1                   	// #1
  415828:	strb	w0, [x21, #8]
  41582c:	ldr	w0, [x19, #144]
  415830:	cmp	w0, #0x1
  415834:	b.le	415c60 <_obstack_memory_used@@Base+0x2930>
  415838:	str	x23, [sp, #48]
  41583c:	ldr	x1, [x19, #72]
  415840:	mov	x0, x19
  415844:	bl	4133ac <_obstack_memory_used@@Base+0x7c>
  415848:	mov	w23, w0
  41584c:	bl	402bf0 <iswalnum@plt>
  415850:	cmp	w23, #0x5f
  415854:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  415858:	cset	w1, ne  // ne = any
  41585c:	ldrb	w0, [x21, #10]
  415860:	bfi	w0, w1, #6, #1
  415864:	strb	w0, [x21, #10]
  415868:	ldr	x23, [sp, #48]
  41586c:	cmp	w20, #0x2e
  415870:	b.eq	415e1c <_obstack_memory_used@@Base+0x2aec>  // b.none
  415874:	b.ls	415c90 <_obstack_memory_used@@Base+0x2960>  // b.plast
  415878:	cmp	w20, #0x7b
  41587c:	b.eq	415dd4 <_obstack_memory_used@@Base+0x2aa4>  // b.none
  415880:	b.ls	415d1c <_obstack_memory_used@@Base+0x29ec>  // b.plast
  415884:	cmp	w20, #0x7c
  415888:	b.eq	415da0 <_obstack_memory_used@@Base+0x2a70>  // b.none
  41588c:	mov	w0, #0x1                   	// #1
  415890:	cmp	w20, #0x7d
  415894:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415898:	mov	w0, #0x1                   	// #1
  41589c:	mov	x1, #0x1200                	// #4608
  4158a0:	bics	xzr, x1, x22
  4158a4:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  4158a8:	mov	w0, #0x18                  	// #24
  4158ac:	strb	w0, [x21, #8]
  4158b0:	mov	w0, #0x1                   	// #1
  4158b4:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  4158b8:	mov	w0, #0x2                   	// #2
  4158bc:	strb	w0, [x21, #8]
  4158c0:	mov	w0, #0x0                   	// #0
  4158c4:	ldp	x19, x20, [sp, #16]
  4158c8:	ldp	x21, x22, [sp, #32]
  4158cc:	ldp	x29, x30, [sp], #80
  4158d0:	ret
  4158d4:	mov	w0, #0x1                   	// #1
  4158d8:	strb	w0, [x21, #8]
  4158dc:	ldrb	w0, [x21, #10]
  4158e0:	orr	w0, w0, #0x20
  4158e4:	strb	w0, [x21, #10]
  4158e8:	mov	w0, #0x1                   	// #1
  4158ec:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  4158f0:	ldr	x2, [x19, #72]
  4158f4:	add	x1, x2, #0x1
  4158f8:	ldr	x3, [x19, #88]
  4158fc:	cmp	x1, x3
  415900:	b.lt	415914 <_obstack_memory_used@@Base+0x25e4>  // b.tstop
  415904:	mov	w0, #0x24                  	// #36
  415908:	strb	w0, [x21, #8]
  41590c:	mov	w0, #0x1                   	// #1
  415910:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415914:	ldrb	w3, [x19, #139]
  415918:	cbnz	w3, 415990 <_obstack_memory_used@@Base+0x2660>
  41591c:	ldr	x0, [x19, #8]
  415920:	ldrb	w20, [x0, x1]
  415924:	strb	w20, [x21]
  415928:	mov	w0, #0x1                   	// #1
  41592c:	strb	w0, [x21, #8]
  415930:	ldr	w0, [x19, #144]
  415934:	cmp	w0, #0x1
  415938:	b.le	415a0c <_obstack_memory_used@@Base+0x26dc>
  41593c:	ldr	x1, [x19, #72]
  415940:	add	x1, x1, #0x1
  415944:	mov	x0, x19
  415948:	bl	4133ac <_obstack_memory_used@@Base+0x7c>
  41594c:	mov	w19, w0
  415950:	bl	402bf0 <iswalnum@plt>
  415954:	cmp	w19, #0x5f
  415958:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41595c:	cset	w1, ne  // ne = any
  415960:	ldrb	w0, [x21, #10]
  415964:	bfi	w0, w1, #6, #1
  415968:	strb	w0, [x21, #10]
  41596c:	sub	w0, w20, #0x27
  415970:	cmp	w0, #0x56
  415974:	b.hi	415e98 <_obstack_memory_used@@Base+0x2b68>  // b.pmore
  415978:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  41597c:	add	x1, x1, #0x738
  415980:	ldrh	w0, [x1, w0, uxtw #1]
  415984:	adr	x1, 415990 <_obstack_memory_used@@Base+0x2660>
  415988:	add	x0, x1, w0, sxth #2
  41598c:	br	x0
  415990:	cmp	w0, #0x1
  415994:	b.le	4159cc <_obstack_memory_used@@Base+0x269c>
  415998:	ldr	x0, [x19, #16]
  41599c:	lsl	x4, x1, #2
  4159a0:	ldr	w3, [x0, x1, lsl #2]
  4159a4:	cmn	w3, #0x1
  4159a8:	b.eq	415a00 <_obstack_memory_used@@Base+0x26d0>  // b.none
  4159ac:	add	x2, x2, #0x2
  4159b0:	ldr	x3, [x19, #48]
  4159b4:	cmp	x3, x2
  4159b8:	b.eq	4159cc <_obstack_memory_used@@Base+0x269c>  // b.none
  4159bc:	add	x0, x0, x4
  4159c0:	ldr	w0, [x0, #4]
  4159c4:	cmn	w0, #0x1
  4159c8:	b.eq	415a00 <_obstack_memory_used@@Base+0x26d0>  // b.none
  4159cc:	ldrb	w0, [x19, #140]
  4159d0:	cbz	w0, 415ea0 <_obstack_memory_used@@Base+0x2b70>
  4159d4:	ldr	x2, [x19, #24]
  4159d8:	ldr	x0, [x19]
  4159dc:	ldr	x3, [x2, x1, lsl #3]
  4159e0:	ldr	x2, [x19, #40]
  4159e4:	add	x0, x0, x3
  4159e8:	ldrb	w20, [x0, x2]
  4159ec:	tst	w20, #0xffffff80
  4159f0:	b.eq	415924 <_obstack_memory_used@@Base+0x25f4>  // b.none
  4159f4:	ldr	x0, [x19, #8]
  4159f8:	ldrb	w20, [x0, x1]
  4159fc:	b	415924 <_obstack_memory_used@@Base+0x25f4>
  415a00:	ldr	x0, [x19, #8]
  415a04:	ldrb	w20, [x0, x1]
  415a08:	b	415924 <_obstack_memory_used@@Base+0x25f4>
  415a0c:	bl	402ab0 <__ctype_b_loc@plt>
  415a10:	and	x1, x20, #0xff
  415a14:	ldr	x0, [x0]
  415a18:	ldrh	w0, [x0, x1, lsl #1]
  415a1c:	and	w0, w0, #0x8
  415a20:	cmp	w20, #0x5f
  415a24:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  415a28:	cset	w1, ne  // ne = any
  415a2c:	ldrb	w0, [x21, #10]
  415a30:	bfi	w0, w1, #6, #1
  415a34:	strb	w0, [x21, #10]
  415a38:	b	41596c <_obstack_memory_used@@Base+0x263c>
  415a3c:	mov	w0, #0x2                   	// #2
  415a40:	mov	x1, #0x8400                	// #33792
  415a44:	tst	x22, x1
  415a48:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415a4c:	mov	w0, #0xa                   	// #10
  415a50:	strb	w0, [x21, #8]
  415a54:	mov	w0, #0x2                   	// #2
  415a58:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415a5c:	mov	w0, #0x2                   	// #2
  415a60:	tbnz	w22, #14, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415a64:	mov	w0, #0x4                   	// #4
  415a68:	strb	w0, [x21, #8]
  415a6c:	sub	w0, w20, #0x31
  415a70:	sxtw	x0, w0
  415a74:	str	x0, [x21]
  415a78:	mov	w0, #0x2                   	// #2
  415a7c:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415a80:	mov	w0, #0x2                   	// #2
  415a84:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415a88:	mov	w0, #0xc                   	// #12
  415a8c:	strb	w0, [x21, #8]
  415a90:	mov	w0, #0x6                   	// #6
  415a94:	str	w0, [x21]
  415a98:	mov	w0, #0x2                   	// #2
  415a9c:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415aa0:	mov	w0, #0x2                   	// #2
  415aa4:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415aa8:	mov	w0, #0xc                   	// #12
  415aac:	strb	w0, [x21, #8]
  415ab0:	mov	w0, #0x9                   	// #9
  415ab4:	str	w0, [x21]
  415ab8:	mov	w0, #0x2                   	// #2
  415abc:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415ac0:	mov	w0, #0x2                   	// #2
  415ac4:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415ac8:	mov	w0, #0xc                   	// #12
  415acc:	strb	w0, [x21, #8]
  415ad0:	mov	w0, #0x100                 	// #256
  415ad4:	str	w0, [x21]
  415ad8:	mov	w0, #0x2                   	// #2
  415adc:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415ae0:	mov	w0, #0x2                   	// #2
  415ae4:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415ae8:	mov	w0, #0xc                   	// #12
  415aec:	strb	w0, [x21, #8]
  415af0:	mov	w0, #0x200                 	// #512
  415af4:	str	w0, [x21]
  415af8:	mov	w0, #0x2                   	// #2
  415afc:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415b00:	mov	w0, #0x2                   	// #2
  415b04:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415b08:	mov	w0, #0x20                  	// #32
  415b0c:	strb	w0, [x21, #8]
  415b10:	mov	w0, #0x2                   	// #2
  415b14:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415b18:	mov	w0, #0x2                   	// #2
  415b1c:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415b20:	mov	w0, #0x21                  	// #33
  415b24:	strb	w0, [x21, #8]
  415b28:	mov	w0, #0x2                   	// #2
  415b2c:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415b30:	mov	w0, #0x2                   	// #2
  415b34:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415b38:	mov	w0, #0x22                  	// #34
  415b3c:	strb	w0, [x21, #8]
  415b40:	mov	w0, #0x2                   	// #2
  415b44:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415b48:	mov	w0, #0x2                   	// #2
  415b4c:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415b50:	mov	w0, #0x23                  	// #35
  415b54:	strb	w0, [x21, #8]
  415b58:	mov	w0, #0x2                   	// #2
  415b5c:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415b60:	mov	w0, #0x2                   	// #2
  415b64:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415b68:	mov	w0, #0xc                   	// #12
  415b6c:	strb	w0, [x21, #8]
  415b70:	mov	w0, #0x40                  	// #64
  415b74:	str	w0, [x21]
  415b78:	mov	w0, #0x2                   	// #2
  415b7c:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415b80:	mov	w0, #0x2                   	// #2
  415b84:	tbnz	w22, #19, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415b88:	mov	w0, #0xc                   	// #12
  415b8c:	strb	w0, [x21, #8]
  415b90:	mov	w0, #0x80                  	// #128
  415b94:	str	w0, [x21]
  415b98:	mov	w0, #0x2                   	// #2
  415b9c:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415ba0:	mov	w0, #0x2                   	// #2
  415ba4:	tbnz	w22, #13, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415ba8:	mov	w0, #0x8                   	// #8
  415bac:	strb	w0, [x21, #8]
  415bb0:	mov	w0, #0x2                   	// #2
  415bb4:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415bb8:	mov	w0, #0x2                   	// #2
  415bbc:	tbnz	w22, #13, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415bc0:	mov	w0, #0x9                   	// #9
  415bc4:	strb	w0, [x21, #8]
  415bc8:	mov	w0, #0x2                   	// #2
  415bcc:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415bd0:	mov	x2, #0x402                 	// #1026
  415bd4:	and	x2, x22, x2
  415bd8:	mov	w0, #0x2                   	// #2
  415bdc:	cmp	x2, #0x2
  415be0:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415be4:	mov	w0, #0x12                  	// #18
  415be8:	strb	w0, [x21, #8]
  415bec:	mov	w0, #0x2                   	// #2
  415bf0:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415bf4:	mov	x2, #0x402                 	// #1026
  415bf8:	and	x2, x22, x2
  415bfc:	mov	w0, #0x2                   	// #2
  415c00:	cmp	x2, #0x2
  415c04:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415c08:	mov	w0, #0x13                  	// #19
  415c0c:	strb	w0, [x21, #8]
  415c10:	mov	w0, #0x2                   	// #2
  415c14:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415c18:	mov	x2, #0x1200                	// #4608
  415c1c:	and	x2, x22, x2
  415c20:	mov	w0, #0x2                   	// #2
  415c24:	cmp	x2, #0x200
  415c28:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415c2c:	mov	w0, #0x17                  	// #23
  415c30:	strb	w0, [x21, #8]
  415c34:	mov	w0, #0x2                   	// #2
  415c38:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415c3c:	mov	x2, #0x1200                	// #4608
  415c40:	and	x2, x22, x2
  415c44:	mov	w0, #0x2                   	// #2
  415c48:	cmp	x2, #0x200
  415c4c:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415c50:	mov	w0, #0x18                  	// #24
  415c54:	strb	w0, [x21, #8]
  415c58:	mov	w0, #0x2                   	// #2
  415c5c:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415c60:	bl	402ab0 <__ctype_b_loc@plt>
  415c64:	and	x1, x20, #0xff
  415c68:	ldr	x0, [x0]
  415c6c:	ldrh	w0, [x0, x1, lsl #1]
  415c70:	and	w0, w0, #0x8
  415c74:	cmp	w20, #0x5f
  415c78:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  415c7c:	cset	w1, ne  // ne = any
  415c80:	ldrb	w0, [x21, #10]
  415c84:	bfi	w0, w1, #6, #1
  415c88:	strb	w0, [x21, #10]
  415c8c:	b	41586c <_obstack_memory_used@@Base+0x253c>
  415c90:	cmp	w20, #0x29
  415c94:	b.eq	415df4 <_obstack_memory_used@@Base+0x2ac4>  // b.none
  415c98:	b.ls	415cd0 <_obstack_memory_used@@Base+0x29a0>  // b.plast
  415c9c:	cmp	w20, #0x2a
  415ca0:	b.eq	415dc4 <_obstack_memory_used@@Base+0x2a94>  // b.none
  415ca4:	mov	w0, #0x1                   	// #1
  415ca8:	cmp	w20, #0x2b
  415cac:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415cb0:	mov	w0, #0x1                   	// #1
  415cb4:	mov	x1, #0x402                 	// #1026
  415cb8:	tst	x22, x1
  415cbc:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415cc0:	mov	w0, #0x12                  	// #18
  415cc4:	strb	w0, [x21, #8]
  415cc8:	mov	w0, #0x1                   	// #1
  415ccc:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415cd0:	cmp	w20, #0x24
  415cd4:	b.eq	415e2c <_obstack_memory_used@@Base+0x2afc>  // b.none
  415cd8:	cmp	w20, #0x28
  415cdc:	b.ne	415cf8 <_obstack_memory_used@@Base+0x29c8>  // b.any
  415ce0:	mov	w0, #0x1                   	// #1
  415ce4:	tbz	w22, #13, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415ce8:	mov	w0, #0x8                   	// #8
  415cec:	strb	w0, [x21, #8]
  415cf0:	mov	w0, #0x1                   	// #1
  415cf4:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415cf8:	mov	w0, #0x1                   	// #1
  415cfc:	cmp	w20, #0xa
  415d00:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415d04:	mov	w0, #0x1                   	// #1
  415d08:	tbz	w22, #11, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415d0c:	mov	w0, #0xa                   	// #10
  415d10:	strb	w0, [x21, #8]
  415d14:	mov	w0, #0x1                   	// #1
  415d18:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415d1c:	cmp	w20, #0x5b
  415d20:	b.eq	415e0c <_obstack_memory_used@@Base+0x2adc>  // b.none
  415d24:	cmp	w20, #0x5e
  415d28:	b.ne	415d74 <_obstack_memory_used@@Base+0x2a44>  // b.any
  415d2c:	and	x0, x22, #0xfffff8
  415d30:	and	x0, x0, #0xffffffffff80000f
  415d34:	cbnz	x0, 415d5c <_obstack_memory_used@@Base+0x2a2c>
  415d38:	ldr	x0, [x19, #72]
  415d3c:	cbz	x0, 415d5c <_obstack_memory_used@@Base+0x2a2c>
  415d40:	ldr	x1, [x19, #8]
  415d44:	add	x0, x1, x0
  415d48:	ldurb	w1, [x0, #-1]
  415d4c:	tst	x22, #0x800
  415d50:	mov	w0, #0x1                   	// #1
  415d54:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  415d58:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415d5c:	mov	w0, #0xc                   	// #12
  415d60:	strb	w0, [x21, #8]
  415d64:	mov	w0, #0x10                  	// #16
  415d68:	str	w0, [x21]
  415d6c:	mov	w0, #0x1                   	// #1
  415d70:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415d74:	mov	w0, #0x1                   	// #1
  415d78:	cmp	w20, #0x3f
  415d7c:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415d80:	mov	w0, #0x1                   	// #1
  415d84:	mov	x1, #0x402                 	// #1026
  415d88:	tst	x22, x1
  415d8c:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415d90:	mov	w0, #0x13                  	// #19
  415d94:	strb	w0, [x21, #8]
  415d98:	mov	w0, #0x1                   	// #1
  415d9c:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415da0:	mov	x2, #0x8400                	// #33792
  415da4:	and	x2, x22, x2
  415da8:	mov	w0, #0x1                   	// #1
  415dac:	cmp	x2, #0x8, lsl #12
  415db0:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415db4:	mov	w0, #0xa                   	// #10
  415db8:	strb	w0, [x21, #8]
  415dbc:	mov	w0, #0x1                   	// #1
  415dc0:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415dc4:	mov	w0, #0xb                   	// #11
  415dc8:	strb	w0, [x21, #8]
  415dcc:	mov	w0, #0x1                   	// #1
  415dd0:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415dd4:	mov	w0, #0x1                   	// #1
  415dd8:	mov	x1, #0x1200                	// #4608
  415ddc:	bics	xzr, x1, x22
  415de0:	b.ne	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.any
  415de4:	mov	w0, #0x17                  	// #23
  415de8:	strb	w0, [x21, #8]
  415dec:	mov	w0, #0x1                   	// #1
  415df0:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415df4:	mov	w0, #0x1                   	// #1
  415df8:	tbz	w22, #13, 4158c4 <_obstack_memory_used@@Base+0x2594>
  415dfc:	mov	w0, #0x9                   	// #9
  415e00:	strb	w0, [x21, #8]
  415e04:	mov	w0, #0x1                   	// #1
  415e08:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415e0c:	mov	w0, #0x14                  	// #20
  415e10:	strb	w0, [x21, #8]
  415e14:	mov	w0, #0x1                   	// #1
  415e18:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415e1c:	mov	w0, #0x5                   	// #5
  415e20:	strb	w0, [x21, #8]
  415e24:	mov	w0, #0x1                   	// #1
  415e28:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415e2c:	tbnz	w22, #3, 415e44 <_obstack_memory_used@@Base+0x2b14>
  415e30:	ldr	x0, [x19, #72]
  415e34:	add	x0, x0, #0x1
  415e38:	ldr	x1, [x19, #88]
  415e3c:	cmp	x0, x1
  415e40:	b.ne	415e5c <_obstack_memory_used@@Base+0x2b2c>  // b.any
  415e44:	mov	w0, #0xc                   	// #12
  415e48:	strb	w0, [x21, #8]
  415e4c:	mov	w0, #0x20                  	// #32
  415e50:	str	w0, [x21]
  415e54:	mov	w0, #0x1                   	// #1
  415e58:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415e5c:	str	x0, [x19, #72]
  415e60:	mov	x2, x22
  415e64:	mov	x1, x19
  415e68:	add	x0, sp, #0x40
  415e6c:	bl	4157ac <_obstack_memory_used@@Base+0x247c>
  415e70:	ldr	x0, [x19, #72]
  415e74:	sub	x0, x0, #0x1
  415e78:	str	x0, [x19, #72]
  415e7c:	ldrb	w1, [sp, #72]
  415e80:	sub	w1, w1, #0x9
  415e84:	and	w1, w1, #0xff
  415e88:	mov	w0, #0x1                   	// #1
  415e8c:	cmp	w1, w0
  415e90:	b.hi	4158c4 <_obstack_memory_used@@Base+0x2594>  // b.pmore
  415e94:	b	415e44 <_obstack_memory_used@@Base+0x2b14>
  415e98:	mov	w0, #0x2                   	// #2
  415e9c:	b	4158c4 <_obstack_memory_used@@Base+0x2594>
  415ea0:	ldr	x0, [x19]
  415ea4:	ldr	x2, [x19, #40]
  415ea8:	add	x1, x0, x1
  415eac:	ldrb	w20, [x1, x2]
  415eb0:	b	415924 <_obstack_memory_used@@Base+0x25f4>
  415eb4:	stp	x29, x30, [sp, #-32]!
  415eb8:	mov	x29, sp
  415ebc:	str	x19, [sp, #16]
  415ec0:	mov	x19, x1
  415ec4:	bl	4157ac <_obstack_memory_used@@Base+0x247c>
  415ec8:	ldr	x1, [x19, #72]
  415ecc:	add	x0, x1, w0, sxtw
  415ed0:	str	x0, [x19, #72]
  415ed4:	ldr	x19, [sp, #16]
  415ed8:	ldp	x29, x30, [sp], #32
  415edc:	ret
  415ee0:	stp	x29, x30, [sp, #-64]!
  415ee4:	mov	x29, sp
  415ee8:	stp	x19, x20, [sp, #16]
  415eec:	stp	x21, x22, [sp, #32]
  415ef0:	stp	x23, x24, [sp, #48]
  415ef4:	mov	x22, x0
  415ef8:	mov	x19, x1
  415efc:	mov	x21, x2
  415f00:	mov	x20, #0xffffffffffffffff    	// #-1
  415f04:	mov	x24, #0x8030                	// #32816
  415f08:	mov	x23, #0xfffffffffffffffe    	// #-2
  415f0c:	b	415f14 <_obstack_memory_used@@Base+0x2be4>
  415f10:	mov	x20, x23
  415f14:	mov	x2, x21
  415f18:	mov	x1, x22
  415f1c:	mov	x0, x19
  415f20:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  415f24:	ldrb	w1, [x19]
  415f28:	ldrb	w3, [x19, #8]
  415f2c:	cmp	w3, #0x2
  415f30:	b.eq	415f94 <_obstack_memory_used@@Base+0x2c64>  // b.none
  415f34:	cmp	w1, #0x2c
  415f38:	ccmp	w3, #0x18, #0x4, ne  // ne = any
  415f3c:	b.eq	415f98 <_obstack_memory_used@@Base+0x2c68>  // b.none
  415f40:	cmp	w3, #0x1
  415f44:	b.ne	415f10 <_obstack_memory_used@@Base+0x2be0>  // b.any
  415f48:	sub	w0, w1, #0x30
  415f4c:	and	w0, w0, #0xff
  415f50:	cmp	w0, #0x9
  415f54:	ccmn	x20, #0x2, #0x4, ls  // ls = plast
  415f58:	b.ne	415f64 <_obstack_memory_used@@Base+0x2c34>  // b.any
  415f5c:	mov	x20, x23
  415f60:	b	415f14 <_obstack_memory_used@@Base+0x2be4>
  415f64:	cmn	x20, #0x1
  415f68:	b.eq	415f88 <_obstack_memory_used@@Base+0x2c58>  // b.none
  415f6c:	add	x20, x20, x20, lsl #2
  415f70:	and	x1, x1, #0xff
  415f74:	add	x1, x1, x20, lsl #1
  415f78:	cmp	x1, x24
  415f7c:	csel	x1, x1, x24, le
  415f80:	sub	x20, x1, #0x30
  415f84:	b	415f14 <_obstack_memory_used@@Base+0x2be4>
  415f88:	sub	w1, w1, #0x30
  415f8c:	sxtw	x20, w1
  415f90:	b	415f14 <_obstack_memory_used@@Base+0x2be4>
  415f94:	mov	x20, #0xfffffffffffffffe    	// #-2
  415f98:	mov	x0, x20
  415f9c:	ldp	x19, x20, [sp, #16]
  415fa0:	ldp	x21, x22, [sp, #32]
  415fa4:	ldp	x23, x24, [sp, #48]
  415fa8:	ldp	x29, x30, [sp], #64
  415fac:	ret
  415fb0:	stp	x29, x30, [sp, #-32]!
  415fb4:	mov	x29, sp
  415fb8:	str	x19, [sp, #16]
  415fbc:	mov	x19, x0
  415fc0:	ldr	x0, [x0]
  415fc4:	bl	402ae0 <free@plt>
  415fc8:	ldr	x0, [x19, #8]
  415fcc:	bl	402ae0 <free@plt>
  415fd0:	ldr	x0, [x19, #16]
  415fd4:	bl	402ae0 <free@plt>
  415fd8:	ldr	x0, [x19, #24]
  415fdc:	bl	402ae0 <free@plt>
  415fe0:	mov	x0, x19
  415fe4:	bl	402ae0 <free@plt>
  415fe8:	ldr	x19, [sp, #16]
  415fec:	ldp	x29, x30, [sp], #32
  415ff0:	ret
  415ff4:	stp	x29, x30, [sp, #-16]!
  415ff8:	mov	x29, sp
  415ffc:	ldr	w1, [x0, #8]
  416000:	and	w1, w1, #0x7ffff
  416004:	and	w1, w1, #0xfffc00ff
  416008:	cmp	w1, #0x6
  41600c:	b.eq	416020 <_obstack_memory_used@@Base+0x2cf0>  // b.none
  416010:	cmp	w1, #0x3
  416014:	b.eq	41602c <_obstack_memory_used@@Base+0x2cfc>  // b.none
  416018:	ldp	x29, x30, [sp], #16
  41601c:	ret
  416020:	ldr	x0, [x0]
  416024:	bl	415fb0 <_obstack_memory_used@@Base+0x2c80>
  416028:	b	416018 <_obstack_memory_used@@Base+0x2ce8>
  41602c:	ldr	x0, [x0]
  416030:	bl	402ae0 <free@plt>
  416034:	b	416018 <_obstack_memory_used@@Base+0x2ce8>
  416038:	stp	x29, x30, [sp, #-16]!
  41603c:	mov	x29, sp
  416040:	add	x0, x1, #0x28
  416044:	bl	415ff4 <_obstack_memory_used@@Base+0x2cc4>
  416048:	mov	w0, #0x0                   	// #0
  41604c:	ldp	x29, x30, [sp], #16
  416050:	ret
  416054:	stp	x29, x30, [sp, #-96]!
  416058:	mov	x29, sp
  41605c:	stp	x19, x20, [sp, #16]
  416060:	stp	x21, x22, [sp, #32]
  416064:	stp	x23, x24, [sp, #48]
  416068:	mov	x19, x0
  41606c:	mov	x21, x1
  416070:	mov	x20, x2
  416074:	and	w22, w2, #0xff
  416078:	ldr	x23, [x0, #8]
  41607c:	ldr	x0, [x0, #16]
  416080:	cmp	x0, x23
  416084:	b.cs	416140 <_obstack_memory_used@@Base+0x2e10>  // b.hs, b.nlast
  416088:	ldr	x0, [x19, #16]
  41608c:	ldr	x1, [x19]
  416090:	lsl	x0, x0, #4
  416094:	add	x2, x1, x0
  416098:	str	x21, [x1, x0]
  41609c:	str	x20, [x2, #8]
  4160a0:	ldr	x0, [x19, #16]
  4160a4:	ldr	x1, [x19]
  4160a8:	add	x0, x1, x0, lsl #4
  4160ac:	ldr	w1, [x0, #8]
  4160b0:	and	w1, w1, #0xfffc00ff
  4160b4:	str	w1, [x0, #8]
  4160b8:	cmp	w22, #0x5
  4160bc:	b.eq	416224 <_obstack_memory_used@@Base+0x2ef4>  // b.none
  4160c0:	cmp	w22, #0x6
  4160c4:	cset	w2, eq  // eq = none
  4160c8:	ldr	x0, [x19, #16]
  4160cc:	ldr	x1, [x19]
  4160d0:	add	x0, x1, x0, lsl #4
  4160d4:	ldrb	w1, [x0, #10]
  4160d8:	bfi	w1, w2, #4, #1
  4160dc:	strb	w1, [x0, #10]
  4160e0:	ldr	x1, [x19, #16]
  4160e4:	ldr	x0, [x19, #24]
  4160e8:	mov	x2, #0xffffffffffffffff    	// #-1
  4160ec:	str	x2, [x0, x1, lsl #3]
  4160f0:	ldr	x0, [x19, #16]
  4160f4:	add	x0, x0, x0, lsl #1
  4160f8:	ldr	x1, [x19, #40]
  4160fc:	add	x0, x1, x0, lsl #3
  416100:	stp	xzr, xzr, [x0]
  416104:	str	xzr, [x0, #16]
  416108:	ldr	x0, [x19, #16]
  41610c:	add	x0, x0, x0, lsl #1
  416110:	ldr	x1, [x19, #48]
  416114:	add	x0, x1, x0, lsl #3
  416118:	stp	xzr, xzr, [x0]
  41611c:	str	xzr, [x0, #16]
  416120:	ldr	x0, [x19, #16]
  416124:	add	x1, x0, #0x1
  416128:	str	x1, [x19, #16]
  41612c:	ldp	x19, x20, [sp, #16]
  416130:	ldp	x21, x22, [sp, #32]
  416134:	ldp	x23, x24, [sp, #48]
  416138:	ldp	x29, x30, [sp], #96
  41613c:	ret
  416140:	lsl	x24, x23, #1
  416144:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  416148:	movk	x0, #0xaaa, lsl #48
  41614c:	cmp	x0, x23, lsl #1
  416150:	b.cc	416238 <_obstack_memory_used@@Base+0x2f08>  // b.lo, b.ul, b.last
  416154:	lsl	x1, x23, #5
  416158:	ldr	x0, [x19]
  41615c:	bl	402930 <realloc@plt>
  416160:	cbz	x0, 416240 <_obstack_memory_used@@Base+0x2f10>
  416164:	stp	x25, x26, [sp, #64]
  416168:	str	x27, [sp, #80]
  41616c:	str	x0, [x19]
  416170:	lsl	x25, x23, #4
  416174:	mov	x1, x25
  416178:	ldr	x0, [x19, #24]
  41617c:	bl	402930 <realloc@plt>
  416180:	mov	x26, x0
  416184:	mov	x1, x25
  416188:	ldr	x0, [x19, #32]
  41618c:	bl	402930 <realloc@plt>
  416190:	mov	x25, x0
  416194:	add	x23, x23, x23, lsl #1
  416198:	lsl	x23, x23, #4
  41619c:	mov	x1, x23
  4161a0:	ldr	x0, [x19, #40]
  4161a4:	bl	402930 <realloc@plt>
  4161a8:	mov	x27, x0
  4161ac:	mov	x1, x23
  4161b0:	ldr	x0, [x19, #48]
  4161b4:	bl	402930 <realloc@plt>
  4161b8:	mov	x23, x0
  4161bc:	cmp	x26, #0x0
  4161c0:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  4161c4:	b.eq	4161f4 <_obstack_memory_used@@Base+0x2ec4>  // b.none
  4161c8:	cmp	x27, #0x0
  4161cc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4161d0:	b.eq	4161f4 <_obstack_memory_used@@Base+0x2ec4>  // b.none
  4161d4:	str	x26, [x19, #24]
  4161d8:	str	x25, [x19, #32]
  4161dc:	str	x27, [x19, #40]
  4161e0:	str	x0, [x19, #48]
  4161e4:	str	x24, [x19, #8]
  4161e8:	ldp	x25, x26, [sp, #64]
  4161ec:	ldr	x27, [sp, #80]
  4161f0:	b	416088 <_obstack_memory_used@@Base+0x2d58>
  4161f4:	mov	x0, x26
  4161f8:	bl	402ae0 <free@plt>
  4161fc:	mov	x0, x25
  416200:	bl	402ae0 <free@plt>
  416204:	mov	x0, x27
  416208:	bl	402ae0 <free@plt>
  41620c:	mov	x0, x23
  416210:	bl	402ae0 <free@plt>
  416214:	mov	x0, #0xffffffffffffffff    	// #-1
  416218:	ldp	x25, x26, [sp, #64]
  41621c:	ldr	x27, [sp, #80]
  416220:	b	41612c <_obstack_memory_used@@Base+0x2dfc>
  416224:	ldr	w0, [x19, #180]
  416228:	mov	w2, #0x1                   	// #1
  41622c:	cmp	w0, w2
  416230:	b.gt	4160c8 <_obstack_memory_used@@Base+0x2d98>
  416234:	b	4160c0 <_obstack_memory_used@@Base+0x2d90>
  416238:	mov	x0, #0xffffffffffffffff    	// #-1
  41623c:	b	41612c <_obstack_memory_used@@Base+0x2dfc>
  416240:	mov	x0, #0xffffffffffffffff    	// #-1
  416244:	b	41612c <_obstack_memory_used@@Base+0x2dfc>
  416248:	stp	x29, x30, [sp, #-32]!
  41624c:	mov	x29, sp
  416250:	stp	x19, x20, [sp, #16]
  416254:	mov	x20, x0
  416258:	mov	x19, x1
  41625c:	ldrb	w0, [x1, #48]
  416260:	cmp	w0, #0x10
  416264:	b.ne	41628c <_obstack_memory_used@@Base+0x2f5c>  // b.any
  416268:	ldr	x0, [x1, #8]
  41626c:	ldr	x1, [x0, #24]
  416270:	str	x1, [x19, #24]
  416274:	ldr	x0, [x0, #56]
  416278:	str	x0, [x19, #56]
  41627c:	mov	w0, #0x0                   	// #0
  416280:	ldp	x19, x20, [sp, #16]
  416284:	ldp	x29, x30, [sp], #32
  416288:	ret
  41628c:	str	x1, [x19, #24]
  416290:	ldp	x1, x2, [x1, #40]
  416294:	mov	x0, x20
  416298:	bl	416054 <_obstack_memory_used@@Base+0x2d24>
  41629c:	mov	x1, x0
  4162a0:	str	x0, [x19, #56]
  4162a4:	cmn	x0, #0x1
  4162a8:	b.eq	4162dc <_obstack_memory_used@@Base+0x2fac>  // b.none
  4162ac:	ldrb	w2, [x19, #48]
  4162b0:	mov	w0, #0x0                   	// #0
  4162b4:	cmp	w2, #0xc
  4162b8:	b.ne	416280 <_obstack_memory_used@@Base+0x2f50>  // b.any
  4162bc:	ldr	x0, [x20]
  4162c0:	add	x1, x0, x1, lsl #4
  4162c4:	ldr	w0, [x1, #8]
  4162c8:	ldr	w2, [x19, #40]
  4162cc:	bfi	w0, w2, #8, #10
  4162d0:	str	w0, [x1, #8]
  4162d4:	mov	w0, #0x0                   	// #0
  4162d8:	b	416280 <_obstack_memory_used@@Base+0x2f50>
  4162dc:	mov	w0, #0xc                   	// #12
  4162e0:	b	416280 <_obstack_memory_used@@Base+0x2f50>
  4162e4:	stp	x29, x30, [sp, #-48]!
  4162e8:	mov	x29, sp
  4162ec:	stp	x19, x20, [sp, #16]
  4162f0:	stp	x21, x22, [sp, #32]
  4162f4:	mov	x19, x0
  4162f8:	mov	x20, x1
  4162fc:	mov	w22, w2
  416300:	lsl	x21, x1, #4
  416304:	ldr	x1, [x0]
  416308:	add	x1, x1, x21
  41630c:	ldp	x2, x3, [x1]
  416310:	mov	x1, x2
  416314:	mov	x2, x3
  416318:	bl	416054 <_obstack_memory_used@@Base+0x2d24>
  41631c:	cmn	x0, #0x1
  416320:	b.eq	416380 <_obstack_memory_used@@Base+0x3050>  // b.none
  416324:	lsl	x3, x0, #4
  416328:	ldr	x1, [x19]
  41632c:	add	x1, x1, x3
  416330:	ldr	w2, [x1, #8]
  416334:	bfi	w2, w22, #8, #10
  416338:	str	w2, [x1, #8]
  41633c:	ldr	x1, [x19]
  416340:	add	x5, x1, x3
  416344:	add	x1, x1, x21
  416348:	ldr	w4, [x1, #8]
  41634c:	ubfx	x4, x4, #8, #10
  416350:	ldr	w2, [x5, #8]
  416354:	ubfx	x1, x2, #8, #10
  416358:	orr	w4, w4, w1
  41635c:	bfi	w2, w4, #8, #10
  416360:	str	w2, [x5, #8]
  416364:	ldr	x1, [x19]
  416368:	add	x3, x1, x3
  41636c:	ldrb	w1, [x3, #10]
  416370:	orr	w1, w1, #0x4
  416374:	strb	w1, [x3, #10]
  416378:	ldr	x1, [x19, #32]
  41637c:	str	x20, [x1, x0, lsl #3]
  416380:	ldp	x19, x20, [sp, #16]
  416384:	ldp	x21, x22, [sp, #32]
  416388:	ldp	x29, x30, [sp], #48
  41638c:	ret
  416390:	stp	x29, x30, [sp, #-80]!
  416394:	mov	x29, sp
  416398:	stp	x19, x20, [sp, #16]
  41639c:	stp	x21, x22, [sp, #32]
  4163a0:	stp	x23, x24, [sp, #48]
  4163a4:	stp	x25, x26, [sp, #64]
  4163a8:	mov	x20, x0
  4163ac:	mov	x21, x1
  4163b0:	mov	x19, x2
  4163b4:	mov	x25, x3
  4163b8:	mov	w23, w4
  4163bc:	b	416570 <_obstack_memory_used@@Base+0x3240>
  4163c0:	lsl	x26, x21, #3
  4163c4:	ldr	x0, [x20, #24]
  4163c8:	ldr	x21, [x0, x21, lsl #3]
  4163cc:	mov	x24, x19
  4163d0:	add	x19, x19, x19, lsl #1
  4163d4:	lsl	x22, x19, #3
  4163d8:	ldr	x0, [x20, #40]
  4163dc:	add	x0, x0, x22
  4163e0:	str	xzr, [x0, #8]
  4163e4:	mov	w2, w23
  4163e8:	mov	x1, x21
  4163ec:	mov	x0, x20
  4163f0:	bl	4162e4 <_obstack_memory_used@@Base+0x2fb4>
  4163f4:	mov	x19, x0
  4163f8:	cmn	x0, #0x1
  4163fc:	b.eq	416650 <_obstack_memory_used@@Base+0x3320>  // b.none
  416400:	ldr	x0, [x20, #24]
  416404:	ldr	x1, [x0, x26]
  416408:	str	x1, [x0, x24, lsl #3]
  41640c:	ldr	x0, [x20, #40]
  416410:	mov	x1, x19
  416414:	add	x0, x0, x22
  416418:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  41641c:	and	w0, w0, #0xff
  416420:	cbnz	w0, 416570 <_obstack_memory_used@@Base+0x3240>
  416424:	mov	w0, #0xc                   	// #12
  416428:	b	41667c <_obstack_memory_used@@Base+0x334c>
  41642c:	ldr	x0, [x20, #24]
  416430:	ldr	x1, [x0, x21, lsl #3]
  416434:	str	x1, [x0, x19, lsl #3]
  416438:	mov	w0, #0x0                   	// #0
  41643c:	b	41667c <_obstack_memory_used@@Base+0x334c>
  416440:	ldr	x0, [x2, #16]
  416444:	ldr	x24, [x0]
  416448:	add	x22, x19, x19, lsl #1
  41644c:	lsl	x22, x22, #3
  416450:	add	x1, x1, x22
  416454:	str	xzr, [x1, #8]
  416458:	cmp	x21, x25
  41645c:	ccmp	x21, x19, #0x4, eq  // eq = none
  416460:	b.ne	4164b4 <_obstack_memory_used@@Base+0x3184>  // b.any
  416464:	ldr	x0, [x20]
  416468:	add	x3, x0, x3
  41646c:	ldr	w0, [x3, #8]
  416470:	ubfx	x0, x0, #8, #10
  416474:	orr	w23, w23, w0
  416478:	mov	w2, w23
  41647c:	mov	x1, x24
  416480:	mov	x0, x20
  416484:	bl	4162e4 <_obstack_memory_used@@Base+0x2fb4>
  416488:	mov	x19, x0
  41648c:	cmn	x0, #0x1
  416490:	b.eq	416658 <_obstack_memory_used@@Base+0x3328>  // b.none
  416494:	ldr	x0, [x20, #40]
  416498:	mov	x1, x19
  41649c:	add	x0, x0, x22
  4164a0:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  4164a4:	and	w0, w0, #0xff
  4164a8:	cbz	w0, 4164d4 <_obstack_memory_used@@Base+0x31a4>
  4164ac:	mov	x21, x24
  4164b0:	b	416570 <_obstack_memory_used@@Base+0x3240>
  4164b4:	ldr	x2, [x20, #40]
  4164b8:	mov	x1, x24
  4164bc:	add	x0, x2, x22
  4164c0:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  4164c4:	ands	w0, w0, #0xff
  4164c8:	mov	w0, #0xc                   	// #12
  4164cc:	csel	w0, w0, wzr, eq  // eq = none
  4164d0:	b	41667c <_obstack_memory_used@@Base+0x334c>
  4164d4:	mov	w0, #0xc                   	// #12
  4164d8:	b	41667c <_obstack_memory_used@@Base+0x334c>
  4164dc:	sub	x1, x1, #0x1
  4164e0:	add	x2, x2, x5
  4164e4:	ldrb	w0, [x2, #10]
  4164e8:	tst	x0, #0x4
  4164ec:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4164f0:	b.le	4165f4 <_obstack_memory_used@@Base+0x32c4>
  4164f4:	ldr	x0, [x3, x1, lsl #3]
  4164f8:	cmp	x21, x0
  4164fc:	b.ne	4164dc <_obstack_memory_used@@Base+0x31ac>  // b.any
  416500:	ldr	w0, [x2, #8]
  416504:	ubfx	x0, x0, #8, #10
  416508:	cmp	w23, w0
  41650c:	b.ne	4164dc <_obstack_memory_used@@Base+0x31ac>  // b.any
  416510:	cmn	x1, #0x1
  416514:	b.eq	4165f4 <_obstack_memory_used@@Base+0x32c4>  // b.none
  416518:	ldr	x0, [x20, #40]
  41651c:	add	x0, x0, x24
  416520:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  416524:	and	w0, w0, #0xff
  416528:	cbz	w0, 416670 <_obstack_memory_used@@Base+0x3340>
  41652c:	ldr	x0, [x20, #40]
  416530:	add	x22, x0, x22
  416534:	ldr	x0, [x22, #16]
  416538:	ldr	x21, [x0, #8]
  41653c:	mov	w2, w23
  416540:	mov	x1, x21
  416544:	mov	x0, x20
  416548:	bl	4162e4 <_obstack_memory_used@@Base+0x2fb4>
  41654c:	mov	x19, x0
  416550:	cmn	x0, #0x1
  416554:	b.eq	416678 <_obstack_memory_used@@Base+0x3348>  // b.none
  416558:	ldr	x0, [x20, #40]
  41655c:	mov	x1, x19
  416560:	add	x0, x0, x24
  416564:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  416568:	and	w0, w0, #0xff
  41656c:	cbz	w0, 416648 <_obstack_memory_used@@Base+0x3318>
  416570:	lsl	x3, x21, #4
  416574:	ldr	x0, [x20]
  416578:	add	x0, x0, x3
  41657c:	ldrb	w0, [x0, #8]
  416580:	cmp	w0, #0x4
  416584:	b.eq	4163c0 <_obstack_memory_used@@Base+0x3090>  // b.none
  416588:	ldr	x1, [x20, #40]
  41658c:	add	x22, x21, x21, lsl #1
  416590:	lsl	x22, x22, #3
  416594:	add	x2, x1, x22
  416598:	ldr	x0, [x2, #8]
  41659c:	cbz	x0, 41642c <_obstack_memory_used@@Base+0x30fc>
  4165a0:	cmp	x0, #0x1
  4165a4:	b.eq	416440 <_obstack_memory_used@@Base+0x3110>  // b.none
  4165a8:	ldr	x0, [x2, #16]
  4165ac:	ldr	x21, [x0]
  4165b0:	add	x19, x19, x19, lsl #1
  4165b4:	lsl	x24, x19, #3
  4165b8:	add	x1, x1, x24
  4165bc:	str	xzr, [x1, #8]
  4165c0:	ldr	x5, [x20, #16]
  4165c4:	sub	x1, x5, #0x1
  4165c8:	ldr	x0, [x20]
  4165cc:	add	x2, x0, x1, lsl #4
  4165d0:	ldrb	w3, [x2, #10]
  4165d4:	tst	x3, #0x4
  4165d8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4165dc:	b.le	4165f4 <_obstack_memory_used@@Base+0x32c4>
  4165e0:	ldr	x3, [x20, #32]
  4165e4:	add	x5, x0, x5, lsl #4
  4165e8:	sub	x5, x5, x2
  4165ec:	sub	x5, x5, #0x20
  4165f0:	b	4164f4 <_obstack_memory_used@@Base+0x31c4>
  4165f4:	mov	w2, w23
  4165f8:	mov	x1, x21
  4165fc:	mov	x0, x20
  416600:	bl	4162e4 <_obstack_memory_used@@Base+0x2fb4>
  416604:	mov	x19, x0
  416608:	cmn	x0, #0x1
  41660c:	b.eq	416660 <_obstack_memory_used@@Base+0x3330>  // b.none
  416610:	ldr	x0, [x20, #40]
  416614:	mov	x1, x19
  416618:	add	x0, x0, x24
  41661c:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  416620:	and	w0, w0, #0xff
  416624:	cbz	w0, 416668 <_obstack_memory_used@@Base+0x3338>
  416628:	mov	w4, w23
  41662c:	mov	x3, x25
  416630:	mov	x2, x19
  416634:	mov	x1, x21
  416638:	mov	x0, x20
  41663c:	bl	416390 <_obstack_memory_used@@Base+0x3060>
  416640:	cbz	w0, 41652c <_obstack_memory_used@@Base+0x31fc>
  416644:	b	41667c <_obstack_memory_used@@Base+0x334c>
  416648:	mov	w0, #0xc                   	// #12
  41664c:	b	41667c <_obstack_memory_used@@Base+0x334c>
  416650:	mov	w0, #0xc                   	// #12
  416654:	b	41667c <_obstack_memory_used@@Base+0x334c>
  416658:	mov	w0, #0xc                   	// #12
  41665c:	b	41667c <_obstack_memory_used@@Base+0x334c>
  416660:	mov	w0, #0xc                   	// #12
  416664:	b	41667c <_obstack_memory_used@@Base+0x334c>
  416668:	mov	w0, #0xc                   	// #12
  41666c:	b	41667c <_obstack_memory_used@@Base+0x334c>
  416670:	mov	w0, #0xc                   	// #12
  416674:	b	41667c <_obstack_memory_used@@Base+0x334c>
  416678:	mov	w0, #0xc                   	// #12
  41667c:	ldp	x19, x20, [sp, #16]
  416680:	ldp	x21, x22, [sp, #32]
  416684:	ldp	x23, x24, [sp, #48]
  416688:	ldp	x25, x26, [sp, #64]
  41668c:	ldp	x29, x30, [sp], #80
  416690:	ret
  416694:	stp	x29, x30, [sp, #-160]!
  416698:	mov	x29, sp
  41669c:	stp	x19, x20, [sp, #16]
  4166a0:	stp	x21, x22, [sp, #32]
  4166a4:	stp	x23, x24, [sp, #48]
  4166a8:	stp	x25, x26, [sp, #64]
  4166ac:	stp	x27, x28, [sp, #80]
  4166b0:	mov	x25, x0
  4166b4:	mov	x19, x1
  4166b8:	mov	x23, x2
  4166bc:	and	w28, w3, #0xff
  4166c0:	add	x22, x2, x2, lsl #1
  4166c4:	lsl	x22, x22, #3
  4166c8:	ldr	x0, [x1, #40]
  4166cc:	add	x0, x0, x22
  4166d0:	ldr	x1, [x0, #8]
  4166d4:	add	x1, x1, #0x1
  4166d8:	add	x0, sp, #0x88
  4166dc:	bl	4146ac <_obstack_memory_used@@Base+0x137c>
  4166e0:	mov	w24, w0
  4166e4:	cbnz	w0, 416878 <_obstack_memory_used@@Base+0x3548>
  4166e8:	mov	x26, x22
  4166ec:	ldr	x0, [x19, #48]
  4166f0:	add	x0, x0, x22
  4166f4:	mov	x1, #0xffffffffffffffff    	// #-1
  4166f8:	str	x1, [x0, #8]
  4166fc:	ldr	x0, [x19]
  416700:	lsl	x20, x23, #4
  416704:	add	x2, x0, x20
  416708:	ldr	w1, [x2, #8]
  41670c:	tst	w1, #0x3ff00
  416710:	b.eq	416738 <_obstack_memory_used@@Base+0x3408>  // b.none
  416714:	ldr	x1, [x19, #40]
  416718:	add	x1, x1, x22
  41671c:	ldr	x3, [x1, #8]
  416720:	cbz	x3, 4168a0 <_obstack_memory_used@@Base+0x3570>
  416724:	ldr	x1, [x1, #16]
  416728:	ldr	x1, [x1]
  41672c:	add	x0, x0, x1, lsl #4
  416730:	ldrb	w0, [x0, #10]
  416734:	tbz	w0, #2, 41676c <_obstack_memory_used@@Base+0x343c>
  416738:	ldr	x0, [x19]
  41673c:	add	x0, x0, x20
  416740:	ldrb	w0, [x0, #8]
  416744:	tbz	w0, #3, 4168a0 <_obstack_memory_used@@Base+0x3570>
  416748:	ldr	x0, [x19, #40]
  41674c:	add	x0, x0, x22
  416750:	ldr	x1, [x0, #8]
  416754:	cmp	x1, #0x0
  416758:	b.le	4168a0 <_obstack_memory_used@@Base+0x3570>
  41675c:	str	wzr, [sp, #108]
  416760:	mov	x21, #0x0                   	// #0
  416764:	mov	w27, #0x1                   	// #1
  416768:	b	4167dc <_obstack_memory_used@@Base+0x34ac>
  41676c:	ldr	w4, [x2, #8]
  416770:	ubfx	x4, x4, #8, #10
  416774:	mov	x3, x23
  416778:	mov	x2, x23
  41677c:	mov	x1, x23
  416780:	mov	x0, x19
  416784:	bl	416390 <_obstack_memory_used@@Base+0x3060>
  416788:	cbz	w0, 416738 <_obstack_memory_used@@Base+0x3408>
  41678c:	mov	w24, w0
  416790:	b	416878 <_obstack_memory_used@@Base+0x3548>
  416794:	str	w27, [sp, #108]
  416798:	b	4167c4 <_obstack_memory_used@@Base+0x3494>
  41679c:	mov	w3, #0x0                   	// #0
  4167a0:	mov	x1, x19
  4167a4:	add	x0, sp, #0x70
  4167a8:	bl	416694 <_obstack_memory_used@@Base+0x3364>
  4167ac:	cbz	w0, 416814 <_obstack_memory_used@@Base+0x34e4>
  4167b0:	mov	w24, w0
  4167b4:	b	416878 <_obstack_memory_used@@Base+0x3548>
  4167b8:	ldr	x0, [sp, #128]
  4167bc:	bl	402ae0 <free@plt>
  4167c0:	str	w27, [sp, #108]
  4167c4:	add	x21, x21, #0x1
  4167c8:	ldr	x0, [x19, #40]
  4167cc:	add	x0, x0, x26
  4167d0:	ldr	x1, [x0, #8]
  4167d4:	cmp	x1, x21
  4167d8:	b.le	416838 <_obstack_memory_used@@Base+0x3508>
  4167dc:	ldr	x0, [x0, #16]
  4167e0:	ldr	x2, [x0, x21, lsl #3]
  4167e4:	add	x20, x2, x2, lsl #1
  4167e8:	lsl	x20, x20, #3
  4167ec:	ldr	x0, [x19, #48]
  4167f0:	add	x0, x0, x20
  4167f4:	ldr	x1, [x0, #8]
  4167f8:	cmn	x1, #0x1
  4167fc:	b.eq	416794 <_obstack_memory_used@@Base+0x3464>  // b.none
  416800:	cbz	x1, 41679c <_obstack_memory_used@@Base+0x346c>
  416804:	ldp	x2, x3, [x0]
  416808:	stp	x2, x3, [sp, #112]
  41680c:	ldr	x0, [x0, #16]
  416810:	str	x0, [sp, #128]
  416814:	add	x1, sp, #0x70
  416818:	add	x0, sp, #0x88
  41681c:	bl	414a6c <_obstack_memory_used@@Base+0x173c>
  416820:	cbnz	w0, 4167b0 <_obstack_memory_used@@Base+0x3480>
  416824:	ldr	x0, [x19, #48]
  416828:	add	x20, x0, x20
  41682c:	ldr	x0, [x20, #8]
  416830:	cbnz	x0, 4167c4 <_obstack_memory_used@@Base+0x3494>
  416834:	b	4167b8 <_obstack_memory_used@@Base+0x3488>
  416838:	mov	x1, x23
  41683c:	add	x0, sp, #0x88
  416840:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  416844:	and	w0, w0, #0xff
  416848:	cbz	w0, 416898 <_obstack_memory_used@@Base+0x3568>
  41684c:	eor	w28, w28, #0x1
  416850:	ldr	w0, [sp, #108]
  416854:	tst	w0, w28
  416858:	b.eq	4168b4 <_obstack_memory_used@@Base+0x3584>  // b.none
  41685c:	ldr	x0, [x19, #48]
  416860:	add	x22, x0, x22
  416864:	str	xzr, [x22, #8]
  416868:	ldp	x0, x1, [sp, #136]
  41686c:	stp	x0, x1, [x25]
  416870:	ldr	x0, [sp, #152]
  416874:	str	x0, [x25, #16]
  416878:	mov	w0, w24
  41687c:	ldp	x19, x20, [sp, #16]
  416880:	ldp	x21, x22, [sp, #32]
  416884:	ldp	x23, x24, [sp, #48]
  416888:	ldp	x25, x26, [sp, #64]
  41688c:	ldp	x27, x28, [sp, #80]
  416890:	ldp	x29, x30, [sp], #160
  416894:	ret
  416898:	mov	w24, #0xc                   	// #12
  41689c:	b	416878 <_obstack_memory_used@@Base+0x3548>
  4168a0:	mov	x1, x23
  4168a4:	add	x0, sp, #0x88
  4168a8:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  4168ac:	and	w0, w0, #0xff
  4168b0:	cbz	w0, 4168d0 <_obstack_memory_used@@Base+0x35a0>
  4168b4:	ldr	x0, [x19, #48]
  4168b8:	add	x22, x0, x22
  4168bc:	ldp	x0, x1, [sp, #136]
  4168c0:	stp	x0, x1, [x22]
  4168c4:	ldr	x0, [sp, #152]
  4168c8:	str	x0, [x22, #16]
  4168cc:	b	416868 <_obstack_memory_used@@Base+0x3538>
  4168d0:	mov	w24, #0xc                   	// #12
  4168d4:	b	416878 <_obstack_memory_used@@Base+0x3548>
  4168d8:	stp	x29, x30, [sp, #-32]!
  4168dc:	mov	x29, sp
  4168e0:	str	x19, [sp, #16]
  4168e4:	mov	x19, x0
  4168e8:	ldr	x0, [x0, #48]
  4168ec:	bl	402ae0 <free@plt>
  4168f0:	ldr	x0, [x19, #72]
  4168f4:	bl	402ae0 <free@plt>
  4168f8:	ldr	x0, [x19, #80]
  4168fc:	add	x1, x19, #0x8
  416900:	cmp	x0, x1
  416904:	b.eq	416918 <_obstack_memory_used@@Base+0x35e8>  // b.none
  416908:	ldr	x0, [x0, #16]
  41690c:	bl	402ae0 <free@plt>
  416910:	ldr	x0, [x19, #80]
  416914:	bl	402ae0 <free@plt>
  416918:	ldr	x0, [x19, #24]
  41691c:	bl	402ae0 <free@plt>
  416920:	ldr	x0, [x19, #96]
  416924:	bl	402ae0 <free@plt>
  416928:	ldr	x0, [x19, #88]
  41692c:	bl	402ae0 <free@plt>
  416930:	mov	x0, x19
  416934:	bl	402ae0 <free@plt>
  416938:	ldr	x19, [sp, #16]
  41693c:	ldp	x29, x30, [sp], #32
  416940:	ret
  416944:	stp	x29, x30, [sp, #-112]!
  416948:	mov	x29, sp
  41694c:	stp	x19, x20, [sp, #16]
  416950:	stp	x21, x22, [sp, #32]
  416954:	str	x0, [sp, #104]
  416958:	mov	x22, x2
  41695c:	ldr	x2, [x2, #8]
  416960:	cbz	x2, 4169c8 <_obstack_memory_used@@Base+0x3698>
  416964:	stp	x23, x24, [sp, #48]
  416968:	stp	x25, x26, [sp, #64]
  41696c:	mov	x24, x1
  416970:	mov	w25, w3
  416974:	add	x23, x2, w3, uxtw
  416978:	cmp	x2, #0x0
  41697c:	b.le	416998 <_obstack_memory_used@@Base+0x3668>
  416980:	ldr	x0, [x22, #16]
  416984:	add	x2, x0, x2, lsl #3
  416988:	ldr	x1, [x0], #8
  41698c:	add	x23, x23, x1
  416990:	cmp	x2, x0
  416994:	b.ne	416988 <_obstack_memory_used@@Base+0x3658>  // b.any
  416998:	ldr	x0, [x24, #136]
  41699c:	and	x0, x23, x0
  4169a0:	add	x0, x0, x0, lsl #1
  4169a4:	lsl	x0, x0, #3
  4169a8:	ldr	x1, [x24, #64]
  4169ac:	add	x2, x1, x0
  4169b0:	ldr	x21, [x1, x0]
  4169b4:	cmp	x21, #0x0
  4169b8:	b.le	416a20 <_obstack_memory_used@@Base+0x36f0>
  4169bc:	ldr	x26, [x2, #16]
  4169c0:	mov	x19, #0x0                   	// #0
  4169c4:	b	4169e0 <_obstack_memory_used@@Base+0x36b0>
  4169c8:	str	wzr, [x0]
  4169cc:	mov	x20, #0x0                   	// #0
  4169d0:	b	416bf0 <_obstack_memory_used@@Base+0x38c0>
  4169d4:	add	x19, x19, #0x1
  4169d8:	cmp	x19, x21
  4169dc:	b.eq	416a20 <_obstack_memory_used@@Base+0x36f0>  // b.none
  4169e0:	ldr	x20, [x26, x19, lsl #3]
  4169e4:	ldr	x0, [x20]
  4169e8:	cmp	x0, x23
  4169ec:	b.ne	4169d4 <_obstack_memory_used@@Base+0x36a4>  // b.any
  4169f0:	ldrb	w0, [x20, #104]
  4169f4:	and	w0, w0, #0xf
  4169f8:	cmp	w0, w25
  4169fc:	b.ne	4169d4 <_obstack_memory_used@@Base+0x36a4>  // b.any
  416a00:	mov	x1, x22
  416a04:	ldr	x0, [x20, #80]
  416a08:	bl	41342c <_obstack_memory_used@@Base+0xfc>
  416a0c:	and	w0, w0, #0xff
  416a10:	cbz	w0, 4169d4 <_obstack_memory_used@@Base+0x36a4>
  416a14:	ldp	x23, x24, [sp, #48]
  416a18:	ldp	x25, x26, [sp, #64]
  416a1c:	b	416bf0 <_obstack_memory_used@@Base+0x38c0>
  416a20:	mov	x1, #0x1                   	// #1
  416a24:	mov	x0, #0x70                  	// #112
  416a28:	bl	402910 <calloc@plt>
  416a2c:	mov	x20, x0
  416a30:	cbz	x0, 416af0 <_obstack_memory_used@@Base+0x37c0>
  416a34:	stp	x27, x28, [sp, #80]
  416a38:	add	x27, x0, #0x8
  416a3c:	mov	x1, x22
  416a40:	mov	x0, x27
  416a44:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  416a48:	cbnz	w0, 416a84 <_obstack_memory_used@@Base+0x3754>
  416a4c:	ldrb	w0, [x20, #104]
  416a50:	bfxil	w0, w25, #0, #4
  416a54:	strb	w0, [x20, #104]
  416a58:	str	x27, [x20, #80]
  416a5c:	ldr	x0, [x22, #8]
  416a60:	cmp	x0, #0x0
  416a64:	b.le	416bd0 <_obstack_memory_used@@Base+0x38a0>
  416a68:	mov	x26, #0x0                   	// #0
  416a6c:	mov	x21, #0x0                   	// #0
  416a70:	and	w0, w25, #0x4
  416a74:	str	w0, [sp, #100]
  416a78:	and	w28, w25, #0x2
  416a7c:	and	w25, w25, #0x1
  416a80:	b	416b58 <_obstack_memory_used@@Base+0x3828>
  416a84:	mov	x0, x20
  416a88:	bl	402ae0 <free@plt>
  416a8c:	ldp	x27, x28, [sp, #80]
  416a90:	b	416af0 <_obstack_memory_used@@Base+0x37c0>
  416a94:	and	x0, x0, #0xff
  416a98:	orr	w0, w0, #0x10
  416a9c:	strb	w0, [x20, #104]
  416aa0:	b	416bb0 <_obstack_memory_used@@Base+0x3880>
  416aa4:	ldrb	w0, [x20, #104]
  416aa8:	orr	w0, w0, #0x40
  416aac:	strb	w0, [x20, #104]
  416ab0:	b	416bb0 <_obstack_memory_used@@Base+0x3880>
  416ab4:	mov	x0, #0x18                  	// #24
  416ab8:	bl	402800 <malloc@plt>
  416abc:	cbz	x0, 416ae4 <_obstack_memory_used@@Base+0x37b4>
  416ac0:	str	x0, [x20, #80]
  416ac4:	mov	x1, x22
  416ac8:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  416acc:	cbnz	w0, 416b0c <_obstack_memory_used@@Base+0x37dc>
  416ad0:	ldrb	w0, [x20, #104]
  416ad4:	orr	w0, w0, #0xffffff80
  416ad8:	strb	w0, [x20, #104]
  416adc:	mov	x26, #0x0                   	// #0
  416ae0:	b	416bc0 <_obstack_memory_used@@Base+0x3890>
  416ae4:	mov	x0, x20
  416ae8:	bl	4168d8 <_obstack_memory_used@@Base+0x35a8>
  416aec:	ldp	x27, x28, [sp, #80]
  416af0:	mov	w0, #0xc                   	// #12
  416af4:	ldr	x1, [sp, #104]
  416af8:	str	w0, [x1]
  416afc:	mov	x20, #0x0                   	// #0
  416b00:	ldp	x23, x24, [sp, #48]
  416b04:	ldp	x25, x26, [sp, #64]
  416b08:	b	416bf0 <_obstack_memory_used@@Base+0x38c0>
  416b0c:	mov	x0, x20
  416b10:	bl	4168d8 <_obstack_memory_used@@Base+0x35a8>
  416b14:	ldp	x27, x28, [sp, #80]
  416b18:	b	416af0 <_obstack_memory_used@@Base+0x37c0>
  416b1c:	tbz	w19, #1, 416b24 <_obstack_memory_used@@Base+0x37f4>
  416b20:	cbnz	w25, 416b38 <_obstack_memory_used@@Base+0x3808>
  416b24:	tbz	w19, #4, 416b2c <_obstack_memory_used@@Base+0x37fc>
  416b28:	cbz	w28, 416b38 <_obstack_memory_used@@Base+0x3808>
  416b2c:	tbz	w19, #6, 416b48 <_obstack_memory_used@@Base+0x3818>
  416b30:	ldr	w0, [sp, #100]
  416b34:	cbnz	w0, 416b48 <_obstack_memory_used@@Base+0x3818>
  416b38:	sub	x1, x21, x26
  416b3c:	mov	x0, x27
  416b40:	bl	4134e8 <_obstack_memory_used@@Base+0x1b8>
  416b44:	add	x26, x26, #0x1
  416b48:	add	x21, x21, #0x1
  416b4c:	ldr	x0, [x22, #8]
  416b50:	cmp	x21, x0
  416b54:	b.ge	416bd0 <_obstack_memory_used@@Base+0x38a0>  // b.tcont
  416b58:	ldr	x0, [x22, #16]
  416b5c:	ldr	x0, [x0, x21, lsl #3]
  416b60:	ldr	x1, [x24]
  416b64:	add	x0, x1, x0, lsl #4
  416b68:	ldrb	w2, [x0, #8]
  416b6c:	ldr	w19, [x0, #8]
  416b70:	ubfx	x19, x19, #8, #10
  416b74:	cmp	w19, #0x0
  416b78:	ccmp	w2, #0x1, #0x0, eq  // eq = none
  416b7c:	b.eq	416b48 <_obstack_memory_used@@Base+0x3818>  // b.none
  416b80:	ldrb	w1, [x20, #104]
  416b84:	ubfx	x3, x1, #5, #1
  416b88:	ldrb	w0, [x0, #10]
  416b8c:	ubfx	x0, x0, #4, #1
  416b90:	orr	w3, w3, w0
  416b94:	mov	w0, w1
  416b98:	bfi	w0, w3, #5, #1
  416b9c:	strb	w0, [x20, #104]
  416ba0:	cmp	w2, #0x2
  416ba4:	b.eq	416a94 <_obstack_memory_used@@Base+0x3764>  // b.none
  416ba8:	cmp	w2, #0x4
  416bac:	b.eq	416aa4 <_obstack_memory_used@@Base+0x3774>  // b.none
  416bb0:	cbz	w19, 416b48 <_obstack_memory_used@@Base+0x3818>
  416bb4:	ldr	x0, [x20, #80]
  416bb8:	cmp	x27, x0
  416bbc:	b.eq	416ab4 <_obstack_memory_used@@Base+0x3784>  // b.none
  416bc0:	tbz	w19, #0, 416b1c <_obstack_memory_used@@Base+0x37ec>
  416bc4:	cbz	w25, 416b38 <_obstack_memory_used@@Base+0x3808>
  416bc8:	tbnz	w19, #1, 416b38 <_obstack_memory_used@@Base+0x3808>
  416bcc:	b	416b24 <_obstack_memory_used@@Base+0x37f4>
  416bd0:	mov	x2, x23
  416bd4:	mov	x1, x20
  416bd8:	mov	x0, x24
  416bdc:	bl	4146e8 <_obstack_memory_used@@Base+0x13b8>
  416be0:	cbnz	w0, 416c04 <_obstack_memory_used@@Base+0x38d4>
  416be4:	ldp	x23, x24, [sp, #48]
  416be8:	ldp	x25, x26, [sp, #64]
  416bec:	ldp	x27, x28, [sp, #80]
  416bf0:	mov	x0, x20
  416bf4:	ldp	x19, x20, [sp, #16]
  416bf8:	ldp	x21, x22, [sp, #32]
  416bfc:	ldp	x29, x30, [sp], #112
  416c00:	ret
  416c04:	mov	x0, x20
  416c08:	bl	4168d8 <_obstack_memory_used@@Base+0x35a8>
  416c0c:	ldp	x27, x28, [sp, #80]
  416c10:	b	416af0 <_obstack_memory_used@@Base+0x37c0>
  416c14:	stp	x29, x30, [sp, #-32]!
  416c18:	mov	x29, sp
  416c1c:	stp	x19, x20, [sp, #16]
  416c20:	ldr	x20, [x0]
  416c24:	ldr	x19, [x20, #112]
  416c28:	cbz	x19, 416c3c <_obstack_memory_used@@Base+0x390c>
  416c2c:	mov	x0, x19
  416c30:	ldr	x19, [x19]
  416c34:	bl	402ae0 <free@plt>
  416c38:	cbnz	x19, 416c2c <_obstack_memory_used@@Base+0x38fc>
  416c3c:	str	xzr, [x20, #112]
  416c40:	mov	w0, #0xf                   	// #15
  416c44:	str	w0, [x20, #128]
  416c48:	str	xzr, [x20, #104]
  416c4c:	ldr	x0, [x20, #32]
  416c50:	bl	402ae0 <free@plt>
  416c54:	str	xzr, [x20, #32]
  416c58:	ldp	x19, x20, [sp, #16]
  416c5c:	ldp	x29, x30, [sp], #32
  416c60:	ret
  416c64:	stp	x29, x30, [sp, #-32]!
  416c68:	mov	x29, sp
  416c6c:	str	x19, [sp, #16]
  416c70:	mov	x19, x0
  416c74:	ldr	x0, [x0, #16]
  416c78:	bl	402ae0 <free@plt>
  416c7c:	ldr	x0, [x19, #24]
  416c80:	bl	402ae0 <free@plt>
  416c84:	ldrb	w0, [x19, #139]
  416c88:	cbnz	w0, 416c98 <_obstack_memory_used@@Base+0x3968>
  416c8c:	ldr	x19, [sp, #16]
  416c90:	ldp	x29, x30, [sp], #32
  416c94:	ret
  416c98:	ldr	x0, [x19, #8]
  416c9c:	bl	402ae0 <free@plt>
  416ca0:	b	416c8c <_obstack_memory_used@@Base+0x395c>
  416ca4:	stp	x29, x30, [sp, #-64]!
  416ca8:	mov	x29, sp
  416cac:	stp	x19, x20, [sp, #16]
  416cb0:	stp	x21, x22, [sp, #32]
  416cb4:	mov	x21, x0
  416cb8:	ldr	x0, [x0]
  416cbc:	cbz	x0, 416ce8 <_obstack_memory_used@@Base+0x39b8>
  416cc0:	ldr	x0, [x21, #16]
  416cc4:	cbz	x0, 416ce8 <_obstack_memory_used@@Base+0x39b8>
  416cc8:	mov	x19, #0x0                   	// #0
  416ccc:	ldr	x0, [x21]
  416cd0:	add	x0, x0, x19, lsl #4
  416cd4:	bl	415ff4 <_obstack_memory_used@@Base+0x2cc4>
  416cd8:	add	x19, x19, #0x1
  416cdc:	ldr	x0, [x21, #16]
  416ce0:	cmp	x0, x19
  416ce4:	b.hi	416ccc <_obstack_memory_used@@Base+0x399c>  // b.pmore
  416ce8:	ldr	x0, [x21, #24]
  416cec:	bl	402ae0 <free@plt>
  416cf0:	ldr	x0, [x21, #16]
  416cf4:	cbz	x0, 416d58 <_obstack_memory_used@@Base+0x3a28>
  416cf8:	mov	x19, #0x0                   	// #0
  416cfc:	mov	x20, #0x0                   	// #0
  416d00:	b	416d24 <_obstack_memory_used@@Base+0x39f4>
  416d04:	add	x0, x0, x19
  416d08:	ldr	x0, [x0, #16]
  416d0c:	bl	402ae0 <free@plt>
  416d10:	add	x20, x20, #0x1
  416d14:	add	x19, x19, #0x18
  416d18:	ldr	x0, [x21, #16]
  416d1c:	cmp	x0, x20
  416d20:	b.ls	416d58 <_obstack_memory_used@@Base+0x3a28>  // b.plast
  416d24:	ldr	x0, [x21, #48]
  416d28:	cbz	x0, 416d38 <_obstack_memory_used@@Base+0x3a08>
  416d2c:	add	x0, x0, x19
  416d30:	ldr	x0, [x0, #16]
  416d34:	bl	402ae0 <free@plt>
  416d38:	ldr	x0, [x21, #56]
  416d3c:	cbz	x0, 416d4c <_obstack_memory_used@@Base+0x3a1c>
  416d40:	add	x0, x0, x19
  416d44:	ldr	x0, [x0, #16]
  416d48:	bl	402ae0 <free@plt>
  416d4c:	ldr	x0, [x21, #40]
  416d50:	cbnz	x0, 416d04 <_obstack_memory_used@@Base+0x39d4>
  416d54:	b	416d10 <_obstack_memory_used@@Base+0x39e0>
  416d58:	ldr	x0, [x21, #40]
  416d5c:	bl	402ae0 <free@plt>
  416d60:	ldr	x0, [x21, #48]
  416d64:	bl	402ae0 <free@plt>
  416d68:	ldr	x0, [x21, #56]
  416d6c:	bl	402ae0 <free@plt>
  416d70:	ldr	x0, [x21]
  416d74:	bl	402ae0 <free@plt>
  416d78:	ldr	x0, [x21, #64]
  416d7c:	cbz	x0, 416de8 <_obstack_memory_used@@Base+0x3ab8>
  416d80:	str	x23, [sp, #48]
  416d84:	mov	x22, #0x0                   	// #0
  416d88:	mov	x23, #0x0                   	// #0
  416d8c:	b	416dac <_obstack_memory_used@@Base+0x3a7c>
  416d90:	ldr	x0, [x20, #16]
  416d94:	bl	402ae0 <free@plt>
  416d98:	add	x23, x23, #0x1
  416d9c:	add	x22, x22, #0x18
  416da0:	ldr	x0, [x21, #136]
  416da4:	cmp	x0, x23
  416da8:	b.cc	416de4 <_obstack_memory_used@@Base+0x3ab4>  // b.lo, b.ul, b.last
  416dac:	ldr	x0, [x21, #64]
  416db0:	add	x20, x0, x22
  416db4:	ldr	x0, [x0, x22]
  416db8:	cmp	x0, #0x0
  416dbc:	b.le	416d90 <_obstack_memory_used@@Base+0x3a60>
  416dc0:	mov	x19, #0x0                   	// #0
  416dc4:	ldr	x1, [x20, #16]
  416dc8:	ldr	x0, [x1, x19, lsl #3]
  416dcc:	bl	4168d8 <_obstack_memory_used@@Base+0x35a8>
  416dd0:	add	x19, x19, #0x1
  416dd4:	ldr	x1, [x20]
  416dd8:	cmp	x1, x19
  416ddc:	b.gt	416dc4 <_obstack_memory_used@@Base+0x3a94>
  416de0:	b	416d90 <_obstack_memory_used@@Base+0x3a60>
  416de4:	ldr	x23, [sp, #48]
  416de8:	ldr	x0, [x21, #64]
  416dec:	bl	402ae0 <free@plt>
  416df0:	ldr	x0, [x21, #120]
  416df4:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  416df8:	add	x1, x1, #0x7e8
  416dfc:	cmp	x0, x1
  416e00:	b.eq	416e08 <_obstack_memory_used@@Base+0x3ad8>  // b.none
  416e04:	bl	402ae0 <free@plt>
  416e08:	ldr	x0, [x21, #224]
  416e0c:	bl	402ae0 <free@plt>
  416e10:	mov	x0, x21
  416e14:	bl	402ae0 <free@plt>
  416e18:	ldp	x19, x20, [sp, #16]
  416e1c:	ldp	x21, x22, [sp, #32]
  416e20:	ldp	x29, x30, [sp], #64
  416e24:	ret
  416e28:	stp	x29, x30, [sp, #-64]!
  416e2c:	mov	x29, sp
  416e30:	str	x23, [sp, #48]
  416e34:	mov	x23, x0
  416e38:	ldr	x0, [x0, #232]
  416e3c:	cmp	x0, #0x0
  416e40:	b.le	416ed8 <_obstack_memory_used@@Base+0x3ba8>
  416e44:	stp	x19, x20, [sp, #16]
  416e48:	stp	x21, x22, [sp, #32]
  416e4c:	mov	x22, #0x0                   	// #0
  416e50:	b	416e6c <_obstack_memory_used@@Base+0x3b3c>
  416e54:	mov	x0, x21
  416e58:	bl	402ae0 <free@plt>
  416e5c:	add	x22, x22, #0x1
  416e60:	ldr	x0, [x23, #232]
  416e64:	cmp	x0, x22
  416e68:	b.le	416ed0 <_obstack_memory_used@@Base+0x3ba0>
  416e6c:	ldr	x0, [x23, #248]
  416e70:	ldr	x21, [x0, x22, lsl #3]
  416e74:	ldr	x0, [x21, #32]
  416e78:	cmp	x0, #0x0
  416e7c:	b.le	416eac <_obstack_memory_used@@Base+0x3b7c>
  416e80:	mov	x19, #0x0                   	// #0
  416e84:	ldr	x1, [x21, #40]
  416e88:	ldr	x20, [x1, x19, lsl #3]
  416e8c:	ldr	x0, [x20, #32]
  416e90:	bl	402ae0 <free@plt>
  416e94:	mov	x0, x20
  416e98:	bl	402ae0 <free@plt>
  416e9c:	add	x19, x19, #0x1
  416ea0:	ldr	x1, [x21, #32]
  416ea4:	cmp	x1, x19
  416ea8:	b.gt	416e84 <_obstack_memory_used@@Base+0x3b54>
  416eac:	ldr	x0, [x21, #40]
  416eb0:	bl	402ae0 <free@plt>
  416eb4:	ldr	x0, [x21, #16]
  416eb8:	cbz	x0, 416e54 <_obstack_memory_used@@Base+0x3b24>
  416ebc:	ldr	x0, [x0, #16]
  416ec0:	bl	402ae0 <free@plt>
  416ec4:	ldr	x0, [x21, #16]
  416ec8:	bl	402ae0 <free@plt>
  416ecc:	b	416e54 <_obstack_memory_used@@Base+0x3b24>
  416ed0:	ldp	x19, x20, [sp, #16]
  416ed4:	ldp	x21, x22, [sp, #32]
  416ed8:	str	xzr, [x23, #232]
  416edc:	str	xzr, [x23, #200]
  416ee0:	ldr	x23, [sp, #48]
  416ee4:	ldp	x29, x30, [sp], #64
  416ee8:	ret
  416eec:	cbz	x0, 416f68 <_obstack_memory_used@@Base+0x3c38>
  416ef0:	stp	x29, x30, [sp, #-48]!
  416ef4:	mov	x29, sp
  416ef8:	stp	x19, x20, [sp, #16]
  416efc:	mov	x20, x0
  416f00:	ldr	x0, [x0]
  416f04:	cmp	x0, #0x0
  416f08:	b.le	416f50 <_obstack_memory_used@@Base+0x3c20>
  416f0c:	str	x21, [sp, #32]
  416f10:	mov	x19, #0x0                   	// #0
  416f14:	mov	x21, #0x0                   	// #0
  416f18:	ldr	x1, [x20, #16]
  416f1c:	add	x1, x1, x19
  416f20:	ldr	x0, [x1, #40]
  416f24:	bl	402ae0 <free@plt>
  416f28:	ldr	x1, [x20, #16]
  416f2c:	add	x1, x1, x19
  416f30:	ldr	x0, [x1, #16]
  416f34:	bl	402ae0 <free@plt>
  416f38:	add	x21, x21, #0x1
  416f3c:	add	x19, x19, #0x30
  416f40:	ldr	x0, [x20]
  416f44:	cmp	x0, x21
  416f48:	b.gt	416f18 <_obstack_memory_used@@Base+0x3be8>
  416f4c:	ldr	x21, [sp, #32]
  416f50:	ldr	x0, [x20, #16]
  416f54:	bl	402ae0 <free@plt>
  416f58:	mov	w0, #0x0                   	// #0
  416f5c:	ldp	x19, x20, [sp, #16]
  416f60:	ldp	x29, x30, [sp], #48
  416f64:	ret
  416f68:	mov	w0, #0x0                   	// #0
  416f6c:	ret
  416f70:	stp	x29, x30, [sp, #-48]!
  416f74:	mov	x29, sp
  416f78:	mov	x3, x0
  416f7c:	ldr	x4, [x1, #56]
  416f80:	ldrb	w2, [x1, #48]
  416f84:	cmp	w2, #0xb
  416f88:	b.hi	416ff0 <_obstack_memory_used@@Base+0x3cc0>  // b.pmore
  416f8c:	cmp	w2, #0x9
  416f90:	b.hi	41700c <_obstack_memory_used@@Base+0x3cdc>  // b.pmore
  416f94:	cmp	w2, #0x4
  416f98:	b.eq	4170e0 <_obstack_memory_used@@Base+0x3db0>  // b.none
  416f9c:	b.ls	416fcc <_obstack_memory_used@@Base+0x3c9c>  // b.plast
  416fa0:	sub	w2, w2, #0x8
  416fa4:	and	w2, w2, #0xff
  416fa8:	cmp	w2, #0x1
  416fac:	b.hi	416fd8 <_obstack_memory_used@@Base+0x3ca8>  // b.pmore
  416fb0:	ldr	x1, [x1, #32]
  416fb4:	add	x4, x4, x4, lsl #1
  416fb8:	ldr	x0, [x3, #40]
  416fbc:	ldr	x1, [x1, #56]
  416fc0:	add	x0, x0, x4, lsl #3
  416fc4:	bl	41441c <_obstack_memory_used@@Base+0x10ec>
  416fc8:	b	417004 <_obstack_memory_used@@Base+0x3cd4>
  416fcc:	mov	w0, #0x0                   	// #0
  416fd0:	cmp	w2, #0x2
  416fd4:	b.eq	417004 <_obstack_memory_used@@Base+0x3cd4>  // b.none
  416fd8:	ldr	x0, [x1, #32]
  416fdc:	ldr	x1, [x0, #56]
  416fe0:	ldr	x0, [x3, #24]
  416fe4:	str	x1, [x0, x4, lsl #3]
  416fe8:	mov	w0, #0x0                   	// #0
  416fec:	b	417004 <_obstack_memory_used@@Base+0x3cd4>
  416ff0:	cmp	w2, #0xc
  416ff4:	b.eq	416fb0 <_obstack_memory_used@@Base+0x3c80>  // b.none
  416ff8:	mov	w0, #0x0                   	// #0
  416ffc:	cmp	w2, #0x10
  417000:	b.ne	416fd8 <_obstack_memory_used@@Base+0x3ca8>  // b.any
  417004:	ldp	x29, x30, [sp], #48
  417008:	ret
  41700c:	stp	x19, x20, [sp, #16]
  417010:	str	x21, [sp, #32]
  417014:	ldrb	w0, [x0, #176]
  417018:	orr	w0, w0, #0x1
  41701c:	strb	w0, [x3, #176]
  417020:	ldr	x0, [x1, #8]
  417024:	cbz	x0, 417094 <_obstack_memory_used@@Base+0x3d64>
  417028:	ldr	x0, [x0, #24]
  41702c:	ldr	x19, [x0, #56]
  417030:	ldr	x0, [x1, #16]
  417034:	cbz	x0, 4170a0 <_obstack_memory_used@@Base+0x3d70>
  417038:	ldr	x0, [x0, #24]
  41703c:	ldr	x20, [x0, #56]
  417040:	add	x4, x4, x4, lsl #1
  417044:	lsl	x4, x4, #3
  417048:	ldr	x0, [x3, #40]
  41704c:	add	x21, x0, x4
  417050:	mov	x1, #0x2                   	// #2
  417054:	str	x1, [x0, x4]
  417058:	mov	x0, #0x10                  	// #16
  41705c:	bl	402800 <malloc@plt>
  417060:	str	x0, [x21, #16]
  417064:	cbz	x0, 41711c <_obstack_memory_used@@Base+0x3dec>
  417068:	cmp	x19, x20
  41706c:	b.eq	4170ac <_obstack_memory_used@@Base+0x3d7c>  // b.none
  417070:	mov	x1, #0x2                   	// #2
  417074:	str	x1, [x21, #8]
  417078:	b.ge	4170c8 <_obstack_memory_used@@Base+0x3d98>  // b.tcont
  41707c:	str	x19, [x0]
  417080:	str	x20, [x0, #8]
  417084:	mov	w0, #0x0                   	// #0
  417088:	ldp	x19, x20, [sp, #16]
  41708c:	ldr	x21, [sp, #32]
  417090:	b	417004 <_obstack_memory_used@@Base+0x3cd4>
  417094:	ldr	x0, [x1, #32]
  417098:	ldr	x19, [x0, #56]
  41709c:	b	417030 <_obstack_memory_used@@Base+0x3d00>
  4170a0:	ldr	x0, [x1, #32]
  4170a4:	ldr	x20, [x0, #56]
  4170a8:	b	417040 <_obstack_memory_used@@Base+0x3d10>
  4170ac:	mov	x1, #0x1                   	// #1
  4170b0:	str	x1, [x21, #8]
  4170b4:	str	x19, [x0]
  4170b8:	mov	w0, #0x0                   	// #0
  4170bc:	ldp	x19, x20, [sp, #16]
  4170c0:	ldr	x21, [sp, #32]
  4170c4:	b	417004 <_obstack_memory_used@@Base+0x3cd4>
  4170c8:	str	x20, [x0]
  4170cc:	str	x19, [x0, #8]
  4170d0:	mov	w0, #0x0                   	// #0
  4170d4:	ldp	x19, x20, [sp, #16]
  4170d8:	ldr	x21, [sp, #32]
  4170dc:	b	417004 <_obstack_memory_used@@Base+0x3cd4>
  4170e0:	ldr	x0, [x1, #32]
  4170e4:	ldr	x2, [x0, #56]
  4170e8:	ldr	x0, [x3, #24]
  4170ec:	str	x2, [x0, x4, lsl #3]
  4170f0:	ldrb	w1, [x1, #48]
  4170f4:	mov	w0, #0x0                   	// #0
  4170f8:	cmp	w1, #0x4
  4170fc:	b.ne	417004 <_obstack_memory_used@@Base+0x3cd4>  // b.any
  417100:	ldr	x1, [x3, #24]
  417104:	add	x2, x4, x4, lsl #1
  417108:	ldr	x0, [x3, #40]
  41710c:	ldr	x1, [x1, x4, lsl #3]
  417110:	add	x0, x0, x2, lsl #3
  417114:	bl	41441c <_obstack_memory_used@@Base+0x10ec>
  417118:	b	417004 <_obstack_memory_used@@Base+0x3cd4>
  41711c:	mov	w0, #0xc                   	// #12
  417120:	ldp	x19, x20, [sp, #16]
  417124:	ldr	x21, [sp, #32]
  417128:	b	417004 <_obstack_memory_used@@Base+0x3cd4>
  41712c:	stp	x29, x30, [sp, #-32]!
  417130:	mov	x29, sp
  417134:	stp	x19, x20, [sp, #16]
  417138:	mov	x20, x0
  41713c:	tbnz	x1, #63, 417184 <_obstack_memory_used@@Base+0x3e54>
  417140:	ldr	x0, [x0, #88]
  417144:	cmp	x0, x1
  417148:	b.eq	41718c <_obstack_memory_used@@Base+0x3e5c>  // b.none
  41714c:	ldr	w0, [x20, #144]
  417150:	cmp	w0, #0x1
  417154:	b.le	4171e8 <_obstack_memory_used@@Base+0x3eb8>
  417158:	ldr	x0, [x20, #16]
  41715c:	ldr	w19, [x0, x1, lsl #2]
  417160:	cmn	w19, #0x1
  417164:	b.ne	4171a0 <_obstack_memory_used@@Base+0x3e70>  // b.any
  417168:	sub	x1, x1, #0x1
  41716c:	cmn	x1, #0x1
  417170:	b.ne	41715c <_obstack_memory_used@@Base+0x3e2c>  // b.any
  417174:	ldr	w0, [x20, #112]
  417178:	ldp	x19, x20, [sp, #16]
  41717c:	ldp	x29, x30, [sp], #32
  417180:	ret
  417184:	ldr	w0, [x0, #112]
  417188:	b	417178 <_obstack_memory_used@@Base+0x3e48>
  41718c:	tst	x2, #0x2
  417190:	mov	w0, #0x8                   	// #8
  417194:	mov	w1, #0xa                   	// #10
  417198:	csel	w0, w0, w1, ne  // ne = any
  41719c:	b	417178 <_obstack_memory_used@@Base+0x3e48>
  4171a0:	ldrb	w0, [x20, #142]
  4171a4:	cbnz	w0, 4171c8 <_obstack_memory_used@@Base+0x3e98>
  4171a8:	mov	w0, #0x0                   	// #0
  4171ac:	cmp	w19, #0xa
  4171b0:	b.ne	417178 <_obstack_memory_used@@Base+0x3e48>  // b.any
  4171b4:	ldrb	w0, [x20, #141]
  4171b8:	cmp	w0, #0x0
  4171bc:	cset	w0, ne  // ne = any
  4171c0:	lsl	w0, w0, #1
  4171c4:	b	417178 <_obstack_memory_used@@Base+0x3e48>
  4171c8:	mov	w0, w19
  4171cc:	bl	402bf0 <iswalnum@plt>
  4171d0:	mov	w1, w0
  4171d4:	cmp	w19, #0x5f
  4171d8:	mov	w0, #0x1                   	// #1
  4171dc:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  4171e0:	b.ne	417178 <_obstack_memory_used@@Base+0x3e48>  // b.any
  4171e4:	b	4171a8 <_obstack_memory_used@@Base+0x3e78>
  4171e8:	ldr	x0, [x20, #8]
  4171ec:	ldrb	w2, [x0, x1]
  4171f0:	ubfx	x1, x2, #6, #2
  4171f4:	ldr	x0, [x20, #128]
  4171f8:	ldr	x1, [x0, x1, lsl #3]
  4171fc:	lsr	x1, x1, x2
  417200:	mov	w0, #0x1                   	// #1
  417204:	tbnz	w1, #0, 417178 <_obstack_memory_used@@Base+0x3e48>
  417208:	mov	w0, #0x0                   	// #0
  41720c:	cmp	w2, #0xa
  417210:	b.ne	417178 <_obstack_memory_used@@Base+0x3e48>  // b.any
  417214:	ldrb	w0, [x20, #141]
  417218:	cmp	w0, #0x0
  41721c:	cset	w0, ne  // ne = any
  417220:	lsl	w0, w0, #1
  417224:	b	417178 <_obstack_memory_used@@Base+0x3e48>
  417228:	stp	x29, x30, [sp, #-32]!
  41722c:	mov	x29, sp
  417230:	str	x19, [sp, #16]
  417234:	mov	x4, x0
  417238:	mov	x19, x1
  41723c:	mov	x1, x2
  417240:	ldr	x0, [x0, #8]
  417244:	ldrb	w2, [x0, x2]
  417248:	ldrb	w3, [x19, #8]
  41724c:	cmp	w3, #0x5
  417250:	b.eq	4172d8 <_obstack_memory_used@@Base+0x3fa8>  // b.none
  417254:	b.hi	4172c4 <_obstack_memory_used@@Base+0x3f94>  // b.pmore
  417258:	cmp	w3, #0x1
  41725c:	b.eq	4172f8 <_obstack_memory_used@@Base+0x3fc8>  // b.none
  417260:	mov	w0, #0x0                   	// #0
  417264:	cmp	w3, #0x3
  417268:	b.ne	417340 <_obstack_memory_used@@Base+0x4010>  // b.any
  41726c:	ubfx	x3, x2, #6, #2
  417270:	ldr	x0, [x19]
  417274:	ldr	x0, [x0, x3, lsl #3]
  417278:	lsr	x2, x0, x2
  41727c:	mov	w0, #0x0                   	// #0
  417280:	tbz	w2, #0, 417340 <_obstack_memory_used@@Base+0x4010>
  417284:	ldr	w2, [x19, #8]
  417288:	mov	w0, #0x1                   	// #1
  41728c:	tst	w2, #0x3ff00
  417290:	b.eq	417340 <_obstack_memory_used@@Base+0x4010>  // b.none
  417294:	ldr	w2, [x4, #160]
  417298:	mov	x0, x4
  41729c:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  4172a0:	mov	w1, w0
  4172a4:	ldr	w0, [x19, #8]
  4172a8:	ubfx	x2, x0, #8, #10
  4172ac:	tbz	w0, #10, 417320 <_obstack_memory_used@@Base+0x3ff0>
  4172b0:	mov	w0, #0x0                   	// #0
  4172b4:	tbz	w1, #0, 417340 <_obstack_memory_used@@Base+0x4010>
  4172b8:	mov	w0, #0x0                   	// #0
  4172bc:	tbz	w2, #3, 417328 <_obstack_memory_used@@Base+0x3ff8>
  4172c0:	b	417340 <_obstack_memory_used@@Base+0x4010>
  4172c4:	mov	w0, #0x0                   	// #0
  4172c8:	cmp	w3, #0x7
  4172cc:	b.ne	417340 <_obstack_memory_used@@Base+0x4010>  // b.any
  4172d0:	mov	w0, #0x0                   	// #0
  4172d4:	tbnz	w2, #7, 417340 <_obstack_memory_used@@Base+0x4010>
  4172d8:	cmp	w2, #0xa
  4172dc:	b.eq	41730c <_obstack_memory_used@@Base+0x3fdc>  // b.none
  4172e0:	cbnz	w2, 417284 <_obstack_memory_used@@Base+0x3f54>
  4172e4:	ldr	x0, [x4, #152]
  4172e8:	ldr	x2, [x0, #216]
  4172ec:	mov	w0, #0x0                   	// #0
  4172f0:	tbz	w2, #7, 417284 <_obstack_memory_used@@Base+0x3f54>
  4172f4:	b	417340 <_obstack_memory_used@@Base+0x4010>
  4172f8:	ldrb	w3, [x19]
  4172fc:	mov	w0, #0x0                   	// #0
  417300:	cmp	w3, w2
  417304:	b.ne	417340 <_obstack_memory_used@@Base+0x4010>  // b.any
  417308:	b	417284 <_obstack_memory_used@@Base+0x3f54>
  41730c:	ldr	x0, [x4, #152]
  417310:	ldr	x2, [x0, #216]
  417314:	mov	w0, #0x0                   	// #0
  417318:	tbnz	w2, #6, 417284 <_obstack_memory_used@@Base+0x3f54>
  41731c:	b	417340 <_obstack_memory_used@@Base+0x4010>
  417320:	tbz	w2, #3, 417328 <_obstack_memory_used@@Base+0x3ff8>
  417324:	tbnz	w1, #0, 41734c <_obstack_memory_used@@Base+0x401c>
  417328:	tbz	w2, #5, 417334 <_obstack_memory_used@@Base+0x4004>
  41732c:	mov	w0, #0x0                   	// #0
  417330:	tbz	w1, #1, 417340 <_obstack_memory_used@@Base+0x4010>
  417334:	ubfx	x0, x1, #3, #1
  417338:	tst	x2, #0x80
  41733c:	csinc	w0, w0, wzr, ne  // ne = any
  417340:	ldr	x19, [sp, #16]
  417344:	ldp	x29, x30, [sp], #32
  417348:	ret
  41734c:	mov	w0, #0x0                   	// #0
  417350:	b	417340 <_obstack_memory_used@@Base+0x4010>
  417354:	stp	x29, x30, [sp, #-96]!
  417358:	mov	x29, sp
  41735c:	stp	x21, x22, [sp, #32]
  417360:	stp	x23, x24, [sp, #48]
  417364:	mov	x23, x0
  417368:	ldr	x22, [x0, #152]
  41736c:	ldr	x0, [x1, #8]
  417370:	cmp	x0, #0x0
  417374:	b.le	41747c <_obstack_memory_used@@Base+0x414c>
  417378:	stp	x19, x20, [sp, #16]
  41737c:	stp	x25, x26, [sp, #64]
  417380:	mov	x20, x1
  417384:	mov	x24, x2
  417388:	mov	x19, #0x0                   	// #0
  41738c:	mov	x26, #0x30                  	// #48
  417390:	mov	x25, #0x1                   	// #1
  417394:	b	4173c4 <_obstack_memory_used@@Base+0x4094>
  417398:	lsl	x27, x1, #1
  41739c:	lsl	x1, x1, #4
  4173a0:	bl	402930 <realloc@plt>
  4173a4:	cbz	x0, 417484 <_obstack_memory_used@@Base+0x4154>
  4173a8:	str	x0, [x23, #248]
  4173ac:	str	x27, [x23, #240]
  4173b0:	b	417414 <_obstack_memory_used@@Base+0x40e4>
  4173b4:	add	x19, x19, #0x1
  4173b8:	ldr	x0, [x20, #8]
  4173bc:	cmp	x0, x19
  4173c0:	b.le	417460 <_obstack_memory_used@@Base+0x4130>
  4173c4:	ldr	x0, [x20, #16]
  4173c8:	ldr	x21, [x0, x19, lsl #3]
  4173cc:	lsl	x3, x21, #4
  4173d0:	ldr	x4, [x22]
  4173d4:	add	x0, x4, x3
  4173d8:	ldrb	w0, [x0, #8]
  4173dc:	cmp	w0, #0x8
  4173e0:	b.ne	4173b4 <_obstack_memory_used@@Base+0x4084>  // b.any
  4173e4:	ldr	x0, [x4, x3]
  4173e8:	cmp	x0, #0x3f
  4173ec:	b.gt	4173b4 <_obstack_memory_used@@Base+0x4084>
  4173f0:	ldr	x1, [x22, #160]
  4173f4:	lsr	x0, x1, x0
  4173f8:	tbz	w0, #0, 4173b4 <_obstack_memory_used@@Base+0x4084>
  4173fc:	stp	x27, x28, [sp, #80]
  417400:	ldr	x0, [x23, #248]
  417404:	ldr	x1, [x23, #240]
  417408:	ldr	x2, [x23, #232]
  41740c:	cmp	x1, x2
  417410:	b.eq	417398 <_obstack_memory_used@@Base+0x4068>  // b.none
  417414:	ldr	x28, [x23, #232]
  417418:	ldr	x27, [x23, #248]
  41741c:	mov	x1, x26
  417420:	mov	x0, x25
  417424:	bl	402910 <calloc@plt>
  417428:	str	x0, [x27, x28, lsl #3]
  41742c:	ldr	x1, [x23, #232]
  417430:	ldr	x0, [x23, #248]
  417434:	ldr	x0, [x0, x1, lsl #3]
  417438:	cbz	x0, 417484 <_obstack_memory_used@@Base+0x4154>
  41743c:	str	x21, [x0, #8]
  417440:	ldr	x1, [x23, #248]
  417444:	ldr	x0, [x23, #232]
  417448:	add	x2, x0, #0x1
  41744c:	str	x2, [x23, #232]
  417450:	ldr	x0, [x1, x0, lsl #3]
  417454:	str	x24, [x0]
  417458:	ldp	x27, x28, [sp, #80]
  41745c:	b	4173b4 <_obstack_memory_used@@Base+0x4084>
  417460:	mov	w0, #0x0                   	// #0
  417464:	ldp	x19, x20, [sp, #16]
  417468:	ldp	x25, x26, [sp, #64]
  41746c:	ldp	x21, x22, [sp, #32]
  417470:	ldp	x23, x24, [sp, #48]
  417474:	ldp	x29, x30, [sp], #96
  417478:	ret
  41747c:	mov	w0, #0x0                   	// #0
  417480:	b	41746c <_obstack_memory_used@@Base+0x413c>
  417484:	mov	w0, #0xc                   	// #12
  417488:	ldp	x19, x20, [sp, #16]
  41748c:	ldp	x25, x26, [sp, #64]
  417490:	ldp	x27, x28, [sp, #80]
  417494:	b	41746c <_obstack_memory_used@@Base+0x413c>
  417498:	stp	x29, x30, [sp, #-112]!
  41749c:	mov	x29, sp
  4174a0:	stp	x19, x20, [sp, #16]
  4174a4:	stp	x21, x22, [sp, #32]
  4174a8:	stp	x23, x24, [sp, #48]
  4174ac:	mov	x20, x0
  4174b0:	mov	x21, x1
  4174b4:	mov	x22, x2
  4174b8:	mov	w23, w3
  4174bc:	ldr	x1, [x1, #8]
  4174c0:	add	x0, sp, #0x58
  4174c4:	bl	4146ac <_obstack_memory_used@@Base+0x137c>
  4174c8:	mov	w24, w0
  4174cc:	cbnz	w0, 4175b0 <_obstack_memory_used@@Base+0x4280>
  4174d0:	ldr	x0, [x21, #8]
  4174d4:	cmp	x0, #0x0
  4174d8:	b.le	4175cc <_obstack_memory_used@@Base+0x429c>
  4174dc:	str	x25, [sp, #64]
  4174e0:	mov	x19, #0x0                   	// #0
  4174e4:	b	41754c <_obstack_memory_used@@Base+0x421c>
  4174e8:	add	x4, x4, #0x1
  4174ec:	cmp	x3, x4
  4174f0:	b.eq	41757c <_obstack_memory_used@@Base+0x424c>  // b.none
  4174f4:	ldr	x6, [x8, x4, lsl #3]
  4174f8:	lsl	x0, x6, #4
  4174fc:	add	x7, x5, x0
  417500:	ldrb	w7, [x7, #8]
  417504:	cmp	w23, w7
  417508:	b.ne	4174e8 <_obstack_memory_used@@Base+0x41b8>  // b.any
  41750c:	ldr	x0, [x5, x0]
  417510:	cmp	x22, x0
  417514:	b.ne	4174e8 <_obstack_memory_used@@Base+0x41b8>  // b.any
  417518:	cmn	x6, #0x1
  41751c:	b.eq	41757c <_obstack_memory_used@@Base+0x424c>  // b.none
  417520:	mov	w4, w23
  417524:	mov	x3, x22
  417528:	add	x1, sp, #0x58
  41752c:	mov	x0, x20
  417530:	bl	414590 <_obstack_memory_used@@Base+0x1260>
  417534:	mov	w25, w0
  417538:	cbnz	w0, 4175a0 <_obstack_memory_used@@Base+0x4270>
  41753c:	add	x19, x19, #0x1
  417540:	ldr	x0, [x21, #8]
  417544:	cmp	x0, x19
  417548:	b.le	4175c8 <_obstack_memory_used@@Base+0x4298>
  41754c:	ldr	x0, [x21, #16]
  417550:	ldr	x2, [x0, x19, lsl #3]
  417554:	add	x1, x2, x2, lsl #1
  417558:	ldr	x0, [x20, #48]
  41755c:	add	x1, x0, x1, lsl #3
  417560:	ldr	x3, [x1, #8]
  417564:	cmp	x3, #0x0
  417568:	b.le	41757c <_obstack_memory_used@@Base+0x424c>
  41756c:	ldr	x8, [x1, #16]
  417570:	ldr	x5, [x20]
  417574:	mov	x4, #0x0                   	// #0
  417578:	b	4174f4 <_obstack_memory_used@@Base+0x41c4>
  41757c:	add	x0, sp, #0x58
  417580:	bl	414a6c <_obstack_memory_used@@Base+0x173c>
  417584:	mov	w25, w0
  417588:	cbz	w0, 41753c <_obstack_memory_used@@Base+0x420c>
  41758c:	ldr	x0, [sp, #104]
  417590:	bl	402ae0 <free@plt>
  417594:	mov	w24, w25
  417598:	ldr	x25, [sp, #64]
  41759c:	b	4175b0 <_obstack_memory_used@@Base+0x4280>
  4175a0:	ldr	x0, [sp, #104]
  4175a4:	bl	402ae0 <free@plt>
  4175a8:	mov	w24, w25
  4175ac:	ldr	x25, [sp, #64]
  4175b0:	mov	w0, w24
  4175b4:	ldp	x19, x20, [sp, #16]
  4175b8:	ldp	x21, x22, [sp, #32]
  4175bc:	ldp	x23, x24, [sp, #48]
  4175c0:	ldp	x29, x30, [sp], #112
  4175c4:	ret
  4175c8:	ldr	x25, [sp, #64]
  4175cc:	ldr	x0, [x21, #16]
  4175d0:	bl	402ae0 <free@plt>
  4175d4:	ldp	x0, x1, [sp, #88]
  4175d8:	stp	x0, x1, [x21]
  4175dc:	ldr	x0, [sp, #104]
  4175e0:	str	x0, [x21, #16]
  4175e4:	b	4175b0 <_obstack_memory_used@@Base+0x4280>
  4175e8:	stp	x29, x30, [sp, #-32]!
  4175ec:	mov	x29, sp
  4175f0:	stp	x19, x20, [sp, #16]
  4175f4:	mov	x19, x0
  4175f8:	mov	x20, x1
  4175fc:	mov	x1, x2
  417600:	ldr	w2, [x0, #160]
  417604:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  417608:	ldr	x4, [x20, #16]
  41760c:	cmp	x4, #0x0
  417610:	b.le	417658 <_obstack_memory_used@@Base+0x4328>
  417614:	ldr	x6, [x20, #24]
  417618:	ldr	x1, [x19, #152]
  41761c:	ldr	x5, [x1]
  417620:	mov	x2, #0x0                   	// #0
  417624:	and	w9, w0, #0x8
  417628:	and	w8, w0, #0x2
  41762c:	and	w7, w0, #0x1
  417630:	b	41766c <_obstack_memory_used@@Base+0x433c>
  417634:	tbz	w1, #3, 41763c <_obstack_memory_used@@Base+0x430c>
  417638:	cbnz	w7, 417660 <_obstack_memory_used@@Base+0x4330>
  41763c:	tbz	w1, #5, 417644 <_obstack_memory_used@@Base+0x4314>
  417640:	cbz	w8, 417660 <_obstack_memory_used@@Base+0x4330>
  417644:	tbz	w1, #7, 41764c <_obstack_memory_used@@Base+0x431c>
  417648:	cbz	w9, 417660 <_obstack_memory_used@@Base+0x4330>
  41764c:	ldp	x19, x20, [sp, #16]
  417650:	ldp	x29, x30, [sp], #32
  417654:	ret
  417658:	mov	x0, #0x0                   	// #0
  41765c:	b	41764c <_obstack_memory_used@@Base+0x431c>
  417660:	add	x2, x2, #0x1
  417664:	cmp	x4, x2
  417668:	b.eq	41769c <_obstack_memory_used@@Base+0x436c>  // b.none
  41766c:	ldr	x0, [x6, x2, lsl #3]
  417670:	add	x3, x5, x0, lsl #4
  417674:	ldr	w1, [x3, #8]
  417678:	ubfx	x1, x1, #8, #10
  41767c:	ldrb	w3, [x3, #8]
  417680:	cmp	w3, #0x2
  417684:	b.ne	417660 <_obstack_memory_used@@Base+0x4330>  // b.any
  417688:	cbz	w1, 41764c <_obstack_memory_used@@Base+0x431c>
  41768c:	tbz	w1, #2, 417634 <_obstack_memory_used@@Base+0x4304>
  417690:	cbz	w7, 417660 <_obstack_memory_used@@Base+0x4330>
  417694:	tbz	w1, #3, 41763c <_obstack_memory_used@@Base+0x430c>
  417698:	b	417660 <_obstack_memory_used@@Base+0x4330>
  41769c:	mov	x0, #0x0                   	// #0
  4176a0:	b	41764c <_obstack_memory_used@@Base+0x431c>
  4176a4:	stp	x29, x30, [sp, #-48]!
  4176a8:	mov	x29, sp
  4176ac:	stp	x19, x20, [sp, #16]
  4176b0:	str	x21, [sp, #32]
  4176b4:	mov	x20, x0
  4176b8:	mov	x0, x3
  4176bc:	mov	x21, x4
  4176c0:	ldr	x19, [x20]
  4176c4:	sub	x19, x19, #0x1
  4176c8:	str	x19, [x20]
  4176cc:	add	x19, x19, x19, lsl #1
  4176d0:	lsl	x19, x19, #4
  4176d4:	ldr	x3, [x20, #16]
  4176d8:	ldr	x3, [x3, x19]
  4176dc:	str	x3, [x1]
  4176e0:	ldr	x1, [x20, #16]
  4176e4:	add	x1, x1, x19
  4176e8:	lsl	x2, x2, #4
  4176ec:	ldr	x1, [x1, #16]
  4176f0:	bl	402650 <memcpy@plt>
  4176f4:	ldr	x0, [x21, #16]
  4176f8:	bl	402ae0 <free@plt>
  4176fc:	ldr	x0, [x20, #16]
  417700:	add	x0, x0, x19
  417704:	ldr	x0, [x0, #16]
  417708:	bl	402ae0 <free@plt>
  41770c:	ldr	x0, [x20, #16]
  417710:	add	x0, x0, x19
  417714:	ldp	x2, x3, [x0, #24]
  417718:	stp	x2, x3, [x21]
  41771c:	ldr	x0, [x0, #40]
  417720:	str	x0, [x21, #16]
  417724:	ldr	x0, [x20, #16]
  417728:	add	x19, x0, x19
  41772c:	ldr	x0, [x19, #8]
  417730:	ldp	x19, x20, [sp, #16]
  417734:	ldr	x21, [sp, #32]
  417738:	ldp	x29, x30, [sp], #48
  41773c:	ret
  417740:	stp	x29, x30, [sp, #-64]!
  417744:	mov	x29, sp
  417748:	stp	x19, x20, [sp, #16]
  41774c:	stp	x21, x22, [sp, #32]
  417750:	stp	x23, x24, [sp, #48]
  417754:	mov	x21, x0
  417758:	mov	x19, x1
  41775c:	mov	x20, x2
  417760:	mov	x23, x3
  417764:	mov	x22, x4
  417768:	tbz	w5, #22, 4177a0 <_obstack_memory_used@@Base+0x4470>
  41776c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417770:	add	x1, x1, #0xa30
  417774:	mov	x0, x4
  417778:	bl	402aa0 <strcmp@plt>
  41777c:	cbz	w0, 4177f8 <_obstack_memory_used@@Base+0x44c8>
  417780:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417784:	add	x1, x1, #0xa38
  417788:	mov	x0, x22
  41778c:	bl	402aa0 <strcmp@plt>
  417790:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417794:	add	x1, x1, #0xa28
  417798:	cmp	w0, #0x0
  41779c:	csel	x22, x1, x22, eq  // eq = none
  4177a0:	ldr	x0, [x20, #72]
  4177a4:	ldr	x1, [x23]
  4177a8:	cmp	x1, x0
  4177ac:	b.eq	417804 <_obstack_memory_used@@Base+0x44d4>  // b.none
  4177b0:	ldr	x24, [x20, #24]
  4177b4:	ldr	x23, [x20, #72]
  4177b8:	add	x0, x23, #0x1
  4177bc:	str	x0, [x20, #72]
  4177c0:	mov	x0, x22
  4177c4:	bl	4026f0 <wctype@plt>
  4177c8:	str	x0, [x24, x23, lsl #3]
  4177cc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  4177d0:	add	x1, x1, #0xba0
  4177d4:	mov	x0, x22
  4177d8:	bl	402aa0 <strcmp@plt>
  4177dc:	mov	w20, w0
  4177e0:	cbnz	w0, 4178bc <_obstack_memory_used@@Base+0x458c>
  4177e4:	cbnz	x21, 417828 <_obstack_memory_used@@Base+0x44f8>
  4177e8:	bl	402ab0 <__ctype_b_loc@plt>
  4177ec:	mov	x2, #0x0                   	// #0
  4177f0:	mov	x6, #0x1                   	// #1
  4177f4:	b	41787c <_obstack_memory_used@@Base+0x454c>
  4177f8:	adrp	x22, 421000 <_obstack_memory_used@@Base+0xdcd0>
  4177fc:	add	x22, x22, #0xa28
  417800:	b	4177a0 <_obstack_memory_used@@Base+0x4470>
  417804:	lsl	x0, x0, #1
  417808:	add	x24, x0, #0x1
  41780c:	lsl	x1, x24, #3
  417810:	ldr	x0, [x20, #24]
  417814:	bl	402930 <realloc@plt>
  417818:	cbz	x0, 418124 <_obstack_memory_used@@Base+0x4df4>
  41781c:	str	x0, [x20, #24]
  417820:	str	x24, [x23]
  417824:	b	4177b0 <_obstack_memory_used@@Base+0x4480>
  417828:	bl	402ab0 <__ctype_b_loc@plt>
  41782c:	mov	x4, x0
  417830:	mov	x1, #0x0                   	// #0
  417834:	mov	x5, #0x1                   	// #1
  417838:	b	417848 <_obstack_memory_used@@Base+0x4518>
  41783c:	add	x1, x1, #0x1
  417840:	cmp	x1, #0x100
  417844:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417848:	ldr	x0, [x4]
  41784c:	ldrh	w2, [x0, x1, lsl #1]
  417850:	tbz	w2, #3, 41783c <_obstack_memory_used@@Base+0x450c>
  417854:	ldrb	w2, [x21, x1]
  417858:	ubfx	x0, x2, #6, #2
  41785c:	lsl	x2, x5, x2
  417860:	ldr	x3, [x19, x0, lsl #3]
  417864:	orr	x2, x3, x2
  417868:	str	x2, [x19, x0, lsl #3]
  41786c:	b	41783c <_obstack_memory_used@@Base+0x450c>
  417870:	add	x2, x2, #0x1
  417874:	cmp	x2, #0x100
  417878:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  41787c:	ldr	x1, [x0]
  417880:	ldrh	w1, [x1, x2, lsl #1]
  417884:	tbz	w1, #3, 417870 <_obstack_memory_used@@Base+0x4540>
  417888:	add	x3, x2, #0x3f
  41788c:	cmp	x2, #0x0
  417890:	csel	x3, x3, x2, lt  // lt = tstop
  417894:	asr	x3, x3, #6
  417898:	negs	x5, x2
  41789c:	and	x4, x2, #0x3f
  4178a0:	and	x5, x5, #0x3f
  4178a4:	csneg	x4, x4, x5, mi  // mi = first
  4178a8:	lsl	x4, x6, x4
  4178ac:	ldr	x1, [x19, x3, lsl #3]
  4178b0:	orr	x4, x1, x4
  4178b4:	str	x4, [x19, x3, lsl #3]
  4178b8:	b	417870 <_obstack_memory_used@@Base+0x4540>
  4178bc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  4178c0:	add	x1, x1, #0xbb8
  4178c4:	mov	x0, x22
  4178c8:	bl	402aa0 <strcmp@plt>
  4178cc:	mov	w20, w0
  4178d0:	cbnz	w0, 41797c <_obstack_memory_used@@Base+0x464c>
  4178d4:	cbnz	x21, 4178e8 <_obstack_memory_used@@Base+0x45b8>
  4178d8:	bl	402ab0 <__ctype_b_loc@plt>
  4178dc:	mov	x1, #0x0                   	// #0
  4178e0:	mov	x5, #0x1                   	// #1
  4178e4:	b	41793c <_obstack_memory_used@@Base+0x460c>
  4178e8:	bl	402ab0 <__ctype_b_loc@plt>
  4178ec:	mov	x4, x0
  4178f0:	mov	x1, #0x0                   	// #0
  4178f4:	mov	x5, #0x1                   	// #1
  4178f8:	b	417908 <_obstack_memory_used@@Base+0x45d8>
  4178fc:	add	x1, x1, #0x1
  417900:	cmp	x1, #0x100
  417904:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417908:	ldr	x0, [x4]
  41790c:	ldrh	w0, [x0, x1, lsl #1]
  417910:	tbz	w0, #1, 4178fc <_obstack_memory_used@@Base+0x45cc>
  417914:	ldrb	w0, [x21, x1]
  417918:	ubfx	x3, x0, #6, #2
  41791c:	lsl	x0, x5, x0
  417920:	ldr	x2, [x19, x3, lsl #3]
  417924:	orr	x0, x2, x0
  417928:	str	x0, [x19, x3, lsl #3]
  41792c:	b	4178fc <_obstack_memory_used@@Base+0x45cc>
  417930:	add	x1, x1, #0x1
  417934:	cmp	x1, #0x100
  417938:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  41793c:	ldr	x2, [x0]
  417940:	ldrh	w2, [x2, x1, lsl #1]
  417944:	tbz	w2, #1, 417930 <_obstack_memory_used@@Base+0x4600>
  417948:	add	x2, x1, #0x3f
  41794c:	cmp	x1, #0x0
  417950:	csel	x2, x2, x1, lt  // lt = tstop
  417954:	asr	x2, x2, #6
  417958:	negs	x4, x1
  41795c:	and	x3, x1, #0x3f
  417960:	and	x4, x4, #0x3f
  417964:	csneg	x3, x3, x4, mi  // mi = first
  417968:	lsl	x3, x5, x3
  41796c:	ldr	x4, [x19, x2, lsl #3]
  417970:	orr	x3, x4, x3
  417974:	str	x3, [x19, x2, lsl #3]
  417978:	b	417930 <_obstack_memory_used@@Base+0x4600>
  41797c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417980:	add	x1, x1, #0xa38
  417984:	mov	x0, x22
  417988:	bl	402aa0 <strcmp@plt>
  41798c:	mov	w20, w0
  417990:	cbnz	w0, 417a40 <_obstack_memory_used@@Base+0x4710>
  417994:	cbnz	x21, 4179ac <_obstack_memory_used@@Base+0x467c>
  417998:	bl	402ab0 <__ctype_b_loc@plt>
  41799c:	mov	x4, x0
  4179a0:	mov	x0, #0x0                   	// #0
  4179a4:	mov	x5, #0x1                   	// #1
  4179a8:	b	417a00 <_obstack_memory_used@@Base+0x46d0>
  4179ac:	bl	402ab0 <__ctype_b_loc@plt>
  4179b0:	mov	x4, x0
  4179b4:	mov	x0, #0x0                   	// #0
  4179b8:	mov	x5, #0x1                   	// #1
  4179bc:	b	4179cc <_obstack_memory_used@@Base+0x469c>
  4179c0:	add	x0, x0, #0x1
  4179c4:	cmp	x0, #0x100
  4179c8:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  4179cc:	ldr	x1, [x4]
  4179d0:	ldrh	w1, [x1, x0, lsl #1]
  4179d4:	tbz	w1, #9, 4179c0 <_obstack_memory_used@@Base+0x4690>
  4179d8:	ldrb	w1, [x21, x0]
  4179dc:	ubfx	x3, x1, #6, #2
  4179e0:	lsl	x1, x5, x1
  4179e4:	ldr	x2, [x19, x3, lsl #3]
  4179e8:	orr	x1, x2, x1
  4179ec:	str	x1, [x19, x3, lsl #3]
  4179f0:	b	4179c0 <_obstack_memory_used@@Base+0x4690>
  4179f4:	add	x0, x0, #0x1
  4179f8:	cmp	x0, #0x100
  4179fc:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417a00:	ldr	x1, [x4]
  417a04:	ldrh	w1, [x1, x0, lsl #1]
  417a08:	tbz	w1, #9, 4179f4 <_obstack_memory_used@@Base+0x46c4>
  417a0c:	add	x1, x0, #0x3f
  417a10:	cmp	x0, #0x0
  417a14:	csel	x1, x1, x0, lt  // lt = tstop
  417a18:	asr	x1, x1, #6
  417a1c:	negs	x3, x0
  417a20:	and	x2, x0, #0x3f
  417a24:	and	x3, x3, #0x3f
  417a28:	csneg	x2, x2, x3, mi  // mi = first
  417a2c:	lsl	x2, x5, x2
  417a30:	ldr	x3, [x19, x1, lsl #3]
  417a34:	orr	x2, x3, x2
  417a38:	str	x2, [x19, x1, lsl #3]
  417a3c:	b	4179f4 <_obstack_memory_used@@Base+0x46c4>
  417a40:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417a44:	add	x1, x1, #0xb90
  417a48:	mov	x0, x22
  417a4c:	bl	402aa0 <strcmp@plt>
  417a50:	mov	w20, w0
  417a54:	cbnz	w0, 417b04 <_obstack_memory_used@@Base+0x47d4>
  417a58:	cbnz	x21, 417a70 <_obstack_memory_used@@Base+0x4740>
  417a5c:	bl	402ab0 <__ctype_b_loc@plt>
  417a60:	mov	x4, x0
  417a64:	mov	x0, #0x0                   	// #0
  417a68:	mov	x5, #0x1                   	// #1
  417a6c:	b	417ac4 <_obstack_memory_used@@Base+0x4794>
  417a70:	bl	402ab0 <__ctype_b_loc@plt>
  417a74:	mov	x4, x0
  417a78:	mov	x0, #0x0                   	// #0
  417a7c:	mov	x5, #0x1                   	// #1
  417a80:	b	417a90 <_obstack_memory_used@@Base+0x4760>
  417a84:	add	x0, x0, #0x1
  417a88:	cmp	x0, #0x100
  417a8c:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417a90:	ldr	x1, [x4]
  417a94:	ldrh	w1, [x1, x0, lsl #1]
  417a98:	tbz	w1, #13, 417a84 <_obstack_memory_used@@Base+0x4754>
  417a9c:	ldrb	w1, [x21, x0]
  417aa0:	ubfx	x3, x1, #6, #2
  417aa4:	lsl	x1, x5, x1
  417aa8:	ldr	x2, [x19, x3, lsl #3]
  417aac:	orr	x1, x2, x1
  417ab0:	str	x1, [x19, x3, lsl #3]
  417ab4:	b	417a84 <_obstack_memory_used@@Base+0x4754>
  417ab8:	add	x0, x0, #0x1
  417abc:	cmp	x0, #0x100
  417ac0:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417ac4:	ldr	x1, [x4]
  417ac8:	ldrh	w1, [x1, x0, lsl #1]
  417acc:	tbz	w1, #13, 417ab8 <_obstack_memory_used@@Base+0x4788>
  417ad0:	add	x1, x0, #0x3f
  417ad4:	cmp	x0, #0x0
  417ad8:	csel	x1, x1, x0, lt  // lt = tstop
  417adc:	asr	x1, x1, #6
  417ae0:	negs	x3, x0
  417ae4:	and	x2, x0, #0x3f
  417ae8:	and	x3, x3, #0x3f
  417aec:	csneg	x2, x2, x3, mi  // mi = first
  417af0:	lsl	x2, x5, x2
  417af4:	ldr	x3, [x19, x1, lsl #3]
  417af8:	orr	x2, x3, x2
  417afc:	str	x2, [x19, x1, lsl #3]
  417b00:	b	417ab8 <_obstack_memory_used@@Base+0x4788>
  417b04:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417b08:	add	x1, x1, #0xa28
  417b0c:	mov	x0, x22
  417b10:	bl	402aa0 <strcmp@plt>
  417b14:	mov	w20, w0
  417b18:	cbnz	w0, 417bc8 <_obstack_memory_used@@Base+0x4898>
  417b1c:	cbnz	x21, 417b34 <_obstack_memory_used@@Base+0x4804>
  417b20:	bl	402ab0 <__ctype_b_loc@plt>
  417b24:	mov	x4, x0
  417b28:	mov	x0, #0x0                   	// #0
  417b2c:	mov	x5, #0x1                   	// #1
  417b30:	b	417b88 <_obstack_memory_used@@Base+0x4858>
  417b34:	bl	402ab0 <__ctype_b_loc@plt>
  417b38:	mov	x3, x0
  417b3c:	mov	x0, #0x0                   	// #0
  417b40:	mov	x5, #0x1                   	// #1
  417b44:	b	417b54 <_obstack_memory_used@@Base+0x4824>
  417b48:	add	x0, x0, #0x1
  417b4c:	cmp	x0, #0x100
  417b50:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417b54:	ldr	x1, [x3]
  417b58:	ldrh	w1, [x1, x0, lsl #1]
  417b5c:	tbz	w1, #10, 417b48 <_obstack_memory_used@@Base+0x4818>
  417b60:	ldrb	w1, [x21, x0]
  417b64:	ubfx	x4, x1, #6, #2
  417b68:	lsl	x1, x5, x1
  417b6c:	ldr	x2, [x19, x4, lsl #3]
  417b70:	orr	x1, x2, x1
  417b74:	str	x1, [x19, x4, lsl #3]
  417b78:	b	417b48 <_obstack_memory_used@@Base+0x4818>
  417b7c:	add	x0, x0, #0x1
  417b80:	cmp	x0, #0x100
  417b84:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417b88:	ldr	x1, [x4]
  417b8c:	ldrh	w1, [x1, x0, lsl #1]
  417b90:	tbz	w1, #10, 417b7c <_obstack_memory_used@@Base+0x484c>
  417b94:	add	x1, x0, #0x3f
  417b98:	cmp	x0, #0x0
  417b9c:	csel	x1, x1, x0, lt  // lt = tstop
  417ba0:	asr	x1, x1, #6
  417ba4:	negs	x3, x0
  417ba8:	and	x2, x0, #0x3f
  417bac:	and	x3, x3, #0x3f
  417bb0:	csneg	x2, x2, x3, mi  // mi = first
  417bb4:	lsl	x2, x5, x2
  417bb8:	ldr	x3, [x19, x1, lsl #3]
  417bbc:	orr	x2, x3, x2
  417bc0:	str	x2, [x19, x1, lsl #3]
  417bc4:	b	417b7c <_obstack_memory_used@@Base+0x484c>
  417bc8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417bcc:	add	x1, x1, #0xb80
  417bd0:	mov	x0, x22
  417bd4:	bl	402aa0 <strcmp@plt>
  417bd8:	mov	w20, w0
  417bdc:	cbnz	w0, 417c8c <_obstack_memory_used@@Base+0x495c>
  417be0:	cbnz	x21, 417bf8 <_obstack_memory_used@@Base+0x48c8>
  417be4:	bl	402ab0 <__ctype_b_loc@plt>
  417be8:	mov	x4, x0
  417bec:	mov	x0, #0x0                   	// #0
  417bf0:	mov	x5, #0x1                   	// #1
  417bf4:	b	417c4c <_obstack_memory_used@@Base+0x491c>
  417bf8:	bl	402ab0 <__ctype_b_loc@plt>
  417bfc:	mov	x1, x0
  417c00:	mov	x0, #0x0                   	// #0
  417c04:	mov	x5, #0x1                   	// #1
  417c08:	b	417c18 <_obstack_memory_used@@Base+0x48e8>
  417c0c:	add	x0, x0, #0x1
  417c10:	cmp	x0, #0x100
  417c14:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417c18:	ldr	x2, [x1]
  417c1c:	ldrh	w2, [x2, x0, lsl #1]
  417c20:	tbz	w2, #11, 417c0c <_obstack_memory_used@@Base+0x48dc>
  417c24:	ldrb	w2, [x21, x0]
  417c28:	ubfx	x4, x2, #6, #2
  417c2c:	lsl	x2, x5, x2
  417c30:	ldr	x3, [x19, x4, lsl #3]
  417c34:	orr	x2, x3, x2
  417c38:	str	x2, [x19, x4, lsl #3]
  417c3c:	b	417c0c <_obstack_memory_used@@Base+0x48dc>
  417c40:	add	x0, x0, #0x1
  417c44:	cmp	x0, #0x100
  417c48:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417c4c:	ldr	x1, [x4]
  417c50:	ldrh	w1, [x1, x0, lsl #1]
  417c54:	tbz	w1, #11, 417c40 <_obstack_memory_used@@Base+0x4910>
  417c58:	add	x1, x0, #0x3f
  417c5c:	cmp	x0, #0x0
  417c60:	csel	x1, x1, x0, lt  // lt = tstop
  417c64:	asr	x1, x1, #6
  417c68:	negs	x3, x0
  417c6c:	and	x2, x0, #0x3f
  417c70:	and	x3, x3, #0x3f
  417c74:	csneg	x2, x2, x3, mi  // mi = first
  417c78:	lsl	x2, x5, x2
  417c7c:	ldr	x3, [x19, x1, lsl #3]
  417c80:	orr	x2, x3, x2
  417c84:	str	x2, [x19, x1, lsl #3]
  417c88:	b	417c40 <_obstack_memory_used@@Base+0x4910>
  417c8c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417c90:	add	x1, x1, #0xba8
  417c94:	mov	x0, x22
  417c98:	bl	402aa0 <strcmp@plt>
  417c9c:	mov	w20, w0
  417ca0:	cbnz	w0, 417d50 <_obstack_memory_used@@Base+0x4a20>
  417ca4:	cbnz	x21, 417cbc <_obstack_memory_used@@Base+0x498c>
  417ca8:	bl	402ab0 <__ctype_b_loc@plt>
  417cac:	mov	x4, x0
  417cb0:	mov	x0, #0x0                   	// #0
  417cb4:	mov	x5, #0x1                   	// #1
  417cb8:	b	417d10 <_obstack_memory_used@@Base+0x49e0>
  417cbc:	bl	402ab0 <__ctype_b_loc@plt>
  417cc0:	mov	x2, x0
  417cc4:	mov	x0, #0x0                   	// #0
  417cc8:	mov	x5, #0x1                   	// #1
  417ccc:	b	417cdc <_obstack_memory_used@@Base+0x49ac>
  417cd0:	add	x0, x0, #0x1
  417cd4:	cmp	x0, #0x100
  417cd8:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417cdc:	ldr	x1, [x2]
  417ce0:	ldrh	w1, [x1, x0, lsl #1]
  417ce4:	tbz	w1, #14, 417cd0 <_obstack_memory_used@@Base+0x49a0>
  417ce8:	ldrb	w1, [x21, x0]
  417cec:	ubfx	x4, x1, #6, #2
  417cf0:	lsl	x1, x5, x1
  417cf4:	ldr	x3, [x19, x4, lsl #3]
  417cf8:	orr	x1, x3, x1
  417cfc:	str	x1, [x19, x4, lsl #3]
  417d00:	b	417cd0 <_obstack_memory_used@@Base+0x49a0>
  417d04:	add	x0, x0, #0x1
  417d08:	cmp	x0, #0x100
  417d0c:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417d10:	ldr	x1, [x4]
  417d14:	ldrh	w1, [x1, x0, lsl #1]
  417d18:	tbz	w1, #14, 417d04 <_obstack_memory_used@@Base+0x49d4>
  417d1c:	add	x1, x0, #0x3f
  417d20:	cmp	x0, #0x0
  417d24:	csel	x1, x1, x0, lt  // lt = tstop
  417d28:	asr	x1, x1, #6
  417d2c:	negs	x2, x0
  417d30:	and	x3, x0, #0x3f
  417d34:	and	x2, x2, #0x3f
  417d38:	csneg	x2, x3, x2, mi  // mi = first
  417d3c:	lsl	x2, x5, x2
  417d40:	ldr	x3, [x19, x1, lsl #3]
  417d44:	orr	x2, x3, x2
  417d48:	str	x2, [x19, x1, lsl #3]
  417d4c:	b	417d04 <_obstack_memory_used@@Base+0x49d4>
  417d50:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417d54:	add	x1, x1, #0xa30
  417d58:	mov	x0, x22
  417d5c:	bl	402aa0 <strcmp@plt>
  417d60:	mov	w20, w0
  417d64:	cbnz	w0, 417e14 <_obstack_memory_used@@Base+0x4ae4>
  417d68:	cbnz	x21, 417d80 <_obstack_memory_used@@Base+0x4a50>
  417d6c:	bl	402ab0 <__ctype_b_loc@plt>
  417d70:	mov	x4, x0
  417d74:	mov	x0, #0x0                   	// #0
  417d78:	mov	x5, #0x1                   	// #1
  417d7c:	b	417dd4 <_obstack_memory_used@@Base+0x4aa4>
  417d80:	bl	402ab0 <__ctype_b_loc@plt>
  417d84:	mov	x2, x0
  417d88:	mov	x0, #0x0                   	// #0
  417d8c:	mov	x5, #0x1                   	// #1
  417d90:	b	417da0 <_obstack_memory_used@@Base+0x4a70>
  417d94:	add	x0, x0, #0x1
  417d98:	cmp	x0, #0x100
  417d9c:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417da0:	ldr	x1, [x2]
  417da4:	ldrh	w1, [x1, x0, lsl #1]
  417da8:	tbz	w1, #8, 417d94 <_obstack_memory_used@@Base+0x4a64>
  417dac:	ldrb	w1, [x21, x0]
  417db0:	ubfx	x4, x1, #6, #2
  417db4:	lsl	x1, x5, x1
  417db8:	ldr	x3, [x19, x4, lsl #3]
  417dbc:	orr	x1, x3, x1
  417dc0:	str	x1, [x19, x4, lsl #3]
  417dc4:	b	417d94 <_obstack_memory_used@@Base+0x4a64>
  417dc8:	add	x0, x0, #0x1
  417dcc:	cmp	x0, #0x100
  417dd0:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417dd4:	ldr	x1, [x4]
  417dd8:	ldrh	w1, [x1, x0, lsl #1]
  417ddc:	tbz	w1, #8, 417dc8 <_obstack_memory_used@@Base+0x4a98>
  417de0:	add	x1, x0, #0x3f
  417de4:	cmp	x0, #0x0
  417de8:	csel	x1, x1, x0, lt  // lt = tstop
  417dec:	asr	x1, x1, #6
  417df0:	negs	x2, x0
  417df4:	and	x3, x0, #0x3f
  417df8:	and	x2, x2, #0x3f
  417dfc:	csneg	x2, x3, x2, mi  // mi = first
  417e00:	lsl	x2, x5, x2
  417e04:	ldr	x3, [x19, x1, lsl #3]
  417e08:	orr	x2, x3, x2
  417e0c:	str	x2, [x19, x1, lsl #3]
  417e10:	b	417dc8 <_obstack_memory_used@@Base+0x4a98>
  417e14:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417e18:	add	x1, x1, #0xbc0
  417e1c:	mov	x0, x22
  417e20:	bl	402aa0 <strcmp@plt>
  417e24:	mov	w20, w0
  417e28:	cbnz	w0, 417ed8 <_obstack_memory_used@@Base+0x4ba8>
  417e2c:	cbnz	x21, 417e44 <_obstack_memory_used@@Base+0x4b14>
  417e30:	bl	402ab0 <__ctype_b_loc@plt>
  417e34:	mov	x3, x0
  417e38:	mov	x0, #0x0                   	// #0
  417e3c:	mov	x5, #0x1                   	// #1
  417e40:	b	417e98 <_obstack_memory_used@@Base+0x4b68>
  417e44:	bl	402ab0 <__ctype_b_loc@plt>
  417e48:	mov	x2, x0
  417e4c:	mov	x0, #0x0                   	// #0
  417e50:	mov	x5, #0x1                   	// #1
  417e54:	b	417e64 <_obstack_memory_used@@Base+0x4b34>
  417e58:	add	x0, x0, #0x1
  417e5c:	cmp	x0, #0x100
  417e60:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417e64:	ldr	x1, [x2]
  417e68:	ldrh	w1, [x1, x0, lsl #1]
  417e6c:	tbz	w1, #0, 417e58 <_obstack_memory_used@@Base+0x4b28>
  417e70:	ldrb	w1, [x21, x0]
  417e74:	ubfx	x4, x1, #6, #2
  417e78:	lsl	x1, x5, x1
  417e7c:	ldr	x3, [x19, x4, lsl #3]
  417e80:	orr	x1, x3, x1
  417e84:	str	x1, [x19, x4, lsl #3]
  417e88:	b	417e58 <_obstack_memory_used@@Base+0x4b28>
  417e8c:	add	x0, x0, #0x1
  417e90:	cmp	x0, #0x100
  417e94:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417e98:	ldr	x1, [x3]
  417e9c:	ldrh	w1, [x1, x0, lsl #1]
  417ea0:	tbz	w1, #0, 417e8c <_obstack_memory_used@@Base+0x4b5c>
  417ea4:	add	x1, x0, #0x3f
  417ea8:	cmp	x0, #0x0
  417eac:	csel	x1, x1, x0, lt  // lt = tstop
  417eb0:	asr	x1, x1, #6
  417eb4:	negs	x2, x0
  417eb8:	and	x4, x0, #0x3f
  417ebc:	and	x2, x2, #0x3f
  417ec0:	csneg	x2, x4, x2, mi  // mi = first
  417ec4:	lsl	x2, x5, x2
  417ec8:	ldr	x4, [x19, x1, lsl #3]
  417ecc:	orr	x2, x4, x2
  417ed0:	str	x2, [x19, x1, lsl #3]
  417ed4:	b	417e8c <_obstack_memory_used@@Base+0x4b5c>
  417ed8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417edc:	add	x1, x1, #0xbb0
  417ee0:	mov	x0, x22
  417ee4:	bl	402aa0 <strcmp@plt>
  417ee8:	mov	w20, w0
  417eec:	cbnz	w0, 417f9c <_obstack_memory_used@@Base+0x4c6c>
  417ef0:	cbnz	x21, 417f08 <_obstack_memory_used@@Base+0x4bd8>
  417ef4:	bl	402ab0 <__ctype_b_loc@plt>
  417ef8:	mov	x3, x0
  417efc:	mov	x0, #0x0                   	// #0
  417f00:	mov	x5, #0x1                   	// #1
  417f04:	b	417f5c <_obstack_memory_used@@Base+0x4c2c>
  417f08:	bl	402ab0 <__ctype_b_loc@plt>
  417f0c:	mov	x2, x0
  417f10:	mov	x0, #0x0                   	// #0
  417f14:	mov	x5, #0x1                   	// #1
  417f18:	b	417f28 <_obstack_memory_used@@Base+0x4bf8>
  417f1c:	add	x0, x0, #0x1
  417f20:	cmp	x0, #0x100
  417f24:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417f28:	ldr	x1, [x2]
  417f2c:	ldrsh	w1, [x1, x0, lsl #1]
  417f30:	tbz	w1, #31, 417f1c <_obstack_memory_used@@Base+0x4bec>
  417f34:	ldrb	w1, [x21, x0]
  417f38:	ubfx	x4, x1, #6, #2
  417f3c:	lsl	x1, x5, x1
  417f40:	ldr	x3, [x19, x4, lsl #3]
  417f44:	orr	x1, x3, x1
  417f48:	str	x1, [x19, x4, lsl #3]
  417f4c:	b	417f1c <_obstack_memory_used@@Base+0x4bec>
  417f50:	add	x0, x0, #0x1
  417f54:	cmp	x0, #0x100
  417f58:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417f5c:	ldr	x1, [x3]
  417f60:	ldrsh	w1, [x1, x0, lsl #1]
  417f64:	tbz	w1, #31, 417f50 <_obstack_memory_used@@Base+0x4c20>
  417f68:	add	x1, x0, #0x3f
  417f6c:	cmp	x0, #0x0
  417f70:	csel	x1, x1, x0, lt  // lt = tstop
  417f74:	asr	x1, x1, #6
  417f78:	negs	x2, x0
  417f7c:	and	x4, x0, #0x3f
  417f80:	and	x2, x2, #0x3f
  417f84:	csneg	x2, x4, x2, mi  // mi = first
  417f88:	lsl	x2, x5, x2
  417f8c:	ldr	x4, [x19, x1, lsl #3]
  417f90:	orr	x2, x4, x2
  417f94:	str	x2, [x19, x1, lsl #3]
  417f98:	b	417f50 <_obstack_memory_used@@Base+0x4c20>
  417f9c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  417fa0:	add	x1, x1, #0xb98
  417fa4:	mov	x0, x22
  417fa8:	bl	402aa0 <strcmp@plt>
  417fac:	mov	w20, w0
  417fb0:	cbnz	w0, 418060 <_obstack_memory_used@@Base+0x4d30>
  417fb4:	cbnz	x21, 417fcc <_obstack_memory_used@@Base+0x4c9c>
  417fb8:	bl	402ab0 <__ctype_b_loc@plt>
  417fbc:	mov	x3, x0
  417fc0:	mov	x0, #0x0                   	// #0
  417fc4:	mov	x5, #0x1                   	// #1
  417fc8:	b	418020 <_obstack_memory_used@@Base+0x4cf0>
  417fcc:	bl	402ab0 <__ctype_b_loc@plt>
  417fd0:	mov	x2, x0
  417fd4:	mov	x0, #0x0                   	// #0
  417fd8:	mov	x5, #0x1                   	// #1
  417fdc:	b	417fec <_obstack_memory_used@@Base+0x4cbc>
  417fe0:	add	x0, x0, #0x1
  417fe4:	cmp	x0, #0x100
  417fe8:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  417fec:	ldr	x1, [x2]
  417ff0:	ldrh	w1, [x1, x0, lsl #1]
  417ff4:	tbz	w1, #2, 417fe0 <_obstack_memory_used@@Base+0x4cb0>
  417ff8:	ldrb	w1, [x21, x0]
  417ffc:	ubfx	x4, x1, #6, #2
  418000:	lsl	x1, x5, x1
  418004:	ldr	x3, [x19, x4, lsl #3]
  418008:	orr	x1, x3, x1
  41800c:	str	x1, [x19, x4, lsl #3]
  418010:	b	417fe0 <_obstack_memory_used@@Base+0x4cb0>
  418014:	add	x0, x0, #0x1
  418018:	cmp	x0, #0x100
  41801c:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  418020:	ldr	x1, [x3]
  418024:	ldrh	w1, [x1, x0, lsl #1]
  418028:	tbz	w1, #2, 418014 <_obstack_memory_used@@Base+0x4ce4>
  41802c:	add	x1, x0, #0x3f
  418030:	cmp	x0, #0x0
  418034:	csel	x1, x1, x0, lt  // lt = tstop
  418038:	asr	x1, x1, #6
  41803c:	negs	x2, x0
  418040:	and	x4, x0, #0x3f
  418044:	and	x2, x2, #0x3f
  418048:	csneg	x2, x4, x2, mi  // mi = first
  41804c:	lsl	x2, x5, x2
  418050:	ldr	x4, [x19, x1, lsl #3]
  418054:	orr	x2, x4, x2
  418058:	str	x2, [x19, x1, lsl #3]
  41805c:	b	418014 <_obstack_memory_used@@Base+0x4ce4>
  418060:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xdcd0>
  418064:	add	x1, x1, #0xb88
  418068:	mov	x0, x22
  41806c:	bl	402aa0 <strcmp@plt>
  418070:	mov	w20, w0
  418074:	cbnz	w0, 418140 <_obstack_memory_used@@Base+0x4e10>
  418078:	cbnz	x21, 418090 <_obstack_memory_used@@Base+0x4d60>
  41807c:	bl	402ab0 <__ctype_b_loc@plt>
  418080:	mov	x3, x0
  418084:	mov	x0, #0x0                   	// #0
  418088:	mov	x5, #0x1                   	// #1
  41808c:	b	4180e4 <_obstack_memory_used@@Base+0x4db4>
  418090:	bl	402ab0 <__ctype_b_loc@plt>
  418094:	mov	x2, x0
  418098:	mov	x0, #0x0                   	// #0
  41809c:	mov	x5, #0x1                   	// #1
  4180a0:	b	4180b0 <_obstack_memory_used@@Base+0x4d80>
  4180a4:	add	x0, x0, #0x1
  4180a8:	cmp	x0, #0x100
  4180ac:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  4180b0:	ldr	x1, [x2]
  4180b4:	ldrh	w1, [x1, x0, lsl #1]
  4180b8:	tbz	w1, #12, 4180a4 <_obstack_memory_used@@Base+0x4d74>
  4180bc:	ldrb	w1, [x21, x0]
  4180c0:	ubfx	x4, x1, #6, #2
  4180c4:	lsl	x1, x5, x1
  4180c8:	ldr	x3, [x19, x4, lsl #3]
  4180cc:	orr	x1, x3, x1
  4180d0:	str	x1, [x19, x4, lsl #3]
  4180d4:	b	4180a4 <_obstack_memory_used@@Base+0x4d74>
  4180d8:	add	x0, x0, #0x1
  4180dc:	cmp	x0, #0x100
  4180e0:	b.eq	418128 <_obstack_memory_used@@Base+0x4df8>  // b.none
  4180e4:	ldr	x1, [x3]
  4180e8:	ldrh	w1, [x1, x0, lsl #1]
  4180ec:	tbz	w1, #12, 4180d8 <_obstack_memory_used@@Base+0x4da8>
  4180f0:	add	x1, x0, #0x3f
  4180f4:	cmp	x0, #0x0
  4180f8:	csel	x1, x1, x0, lt  // lt = tstop
  4180fc:	asr	x1, x1, #6
  418100:	negs	x2, x0
  418104:	and	x4, x0, #0x3f
  418108:	and	x2, x2, #0x3f
  41810c:	csneg	x2, x4, x2, mi  // mi = first
  418110:	lsl	x2, x5, x2
  418114:	ldr	x4, [x19, x1, lsl #3]
  418118:	orr	x2, x4, x2
  41811c:	str	x2, [x19, x1, lsl #3]
  418120:	b	4180d8 <_obstack_memory_used@@Base+0x4da8>
  418124:	mov	w20, #0xc                   	// #12
  418128:	mov	w0, w20
  41812c:	ldp	x19, x20, [sp, #16]
  418130:	ldp	x21, x22, [sp, #32]
  418134:	ldp	x23, x24, [sp, #48]
  418138:	ldp	x29, x30, [sp], #64
  41813c:	ret
  418140:	mov	w20, #0x4                   	// #4
  418144:	b	418128 <_obstack_memory_used@@Base+0x4df8>
  418148:	stp	x29, x30, [sp, #-112]!
  41814c:	mov	x29, sp
  418150:	stp	x19, x20, [sp, #16]
  418154:	stp	x21, x22, [sp, #32]
  418158:	stp	x23, x24, [sp, #48]
  41815c:	stp	x25, x26, [sp, #64]
  418160:	mov	x21, x0
  418164:	mov	x25, x1
  418168:	mov	x26, x2
  41816c:	mov	x20, x3
  418170:	and	w24, w4, #0xff
  418174:	mov	x23, x5
  418178:	str	xzr, [sp, #104]
  41817c:	mov	x1, #0x1                   	// #1
  418180:	mov	x0, #0x20                  	// #32
  418184:	bl	402910 <calloc@plt>
  418188:	mov	x19, x0
  41818c:	cbz	x0, 4182f0 <_obstack_memory_used@@Base+0x4fc0>
  418190:	mov	x1, #0x1                   	// #1
  418194:	mov	x0, #0x50                  	// #80
  418198:	bl	402910 <calloc@plt>
  41819c:	mov	x22, x0
  4181a0:	cbz	x0, 418300 <_obstack_memory_used@@Base+0x4fd0>
  4181a4:	ldrb	w0, [x0, #32]
  4181a8:	bfxil	w0, w24, #0, #1
  4181ac:	strb	w0, [x22, #32]
  4181b0:	mov	x5, #0x0                   	// #0
  4181b4:	mov	x4, x26
  4181b8:	add	x3, sp, #0x68
  4181bc:	mov	x2, x22
  4181c0:	mov	x1, x19
  4181c4:	mov	x0, x25
  4181c8:	bl	417740 <_obstack_memory_used@@Base+0x4410>
  4181cc:	mov	w25, w0
  4181d0:	cbnz	w0, 418318 <_obstack_memory_used@@Base+0x4fe8>
  4181d4:	ldrb	w1, [x20]
  4181d8:	mov	x3, #0x1                   	// #1
  4181dc:	cbz	w1, 4181fc <_obstack_memory_used@@Base+0x4ecc>
  4181e0:	ubfx	x0, x1, #6, #2
  4181e4:	lsl	x1, x3, x1
  4181e8:	ldr	x2, [x19, x0, lsl #3]
  4181ec:	orr	x1, x2, x1
  4181f0:	str	x1, [x19, x0, lsl #3]
  4181f4:	ldrb	w1, [x20, #1]!
  4181f8:	cbnz	w1, 4181e0 <_obstack_memory_used@@Base+0x4eb0>
  4181fc:	cbz	w24, 41821c <_obstack_memory_used@@Base+0x4eec>
  418200:	mov	x0, #0x0                   	// #0
  418204:	ldr	x1, [x19, x0, lsl #3]
  418208:	mvn	x1, x1
  41820c:	str	x1, [x19, x0, lsl #3]
  418210:	add	x0, x0, #0x1
  418214:	cmp	x0, #0x4
  418218:	b.ne	418204 <_obstack_memory_used@@Base+0x4ed4>  // b.any
  41821c:	ldr	w0, [x21, #180]
  418220:	cmp	w0, #0x1
  418224:	b.le	41824c <_obstack_memory_used@@Base+0x4f1c>
  418228:	ldr	x3, [x21, #120]
  41822c:	mov	x0, #0x0                   	// #0
  418230:	ldr	x1, [x19, x0]
  418234:	ldr	x2, [x3, x0]
  418238:	and	x1, x1, x2
  41823c:	str	x1, [x19, x0]
  418240:	add	x0, x0, #0x8
  418244:	cmp	x0, #0x20
  418248:	b.ne	418230 <_obstack_memory_used@@Base+0x4f00>  // b.any
  41824c:	stur	wzr, [sp, #97]
  418250:	sturh	wzr, [sp, #101]
  418254:	strb	wzr, [sp, #103]
  418258:	str	x19, [sp, #88]
  41825c:	mov	w0, #0x3                   	// #3
  418260:	strb	w0, [sp, #96]
  418264:	add	x3, sp, #0x58
  418268:	mov	x2, #0x0                   	// #0
  41826c:	mov	x1, #0x0                   	// #0
  418270:	mov	x0, x21
  418274:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  418278:	mov	x20, x0
  41827c:	cbz	x0, 418340 <_obstack_memory_used@@Base+0x5010>
  418280:	ldr	w0, [x21, #180]
  418284:	cmp	w0, #0x1
  418288:	b.le	418334 <_obstack_memory_used@@Base+0x5004>
  41828c:	mov	w0, #0x6                   	// #6
  418290:	strb	w0, [sp, #96]
  418294:	str	x22, [sp, #88]
  418298:	ldrb	w0, [x21, #176]
  41829c:	orr	w0, w0, #0x2
  4182a0:	strb	w0, [x21, #176]
  4182a4:	add	x3, sp, #0x58
  4182a8:	mov	x2, #0x0                   	// #0
  4182ac:	mov	x1, #0x0                   	// #0
  4182b0:	mov	x0, x21
  4182b4:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  4182b8:	mov	x2, x0
  4182bc:	cbz	x0, 418340 <_obstack_memory_used@@Base+0x5010>
  4182c0:	mov	w3, #0xa                   	// #10
  4182c4:	mov	x1, x20
  4182c8:	mov	x0, x21
  4182cc:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  4182d0:	mov	x20, x0
  4182d4:	mov	x0, x20
  4182d8:	ldp	x19, x20, [sp, #16]
  4182dc:	ldp	x21, x22, [sp, #32]
  4182e0:	ldp	x23, x24, [sp, #48]
  4182e4:	ldp	x25, x26, [sp, #64]
  4182e8:	ldp	x29, x30, [sp], #112
  4182ec:	ret
  4182f0:	mov	w0, #0xc                   	// #12
  4182f4:	str	w0, [x23]
  4182f8:	mov	x20, x19
  4182fc:	b	4182d4 <_obstack_memory_used@@Base+0x4fa4>
  418300:	mov	x0, x19
  418304:	bl	402ae0 <free@plt>
  418308:	mov	w0, #0xc                   	// #12
  41830c:	str	w0, [x23]
  418310:	mov	x20, x22
  418314:	b	4182d4 <_obstack_memory_used@@Base+0x4fa4>
  418318:	mov	x0, x19
  41831c:	bl	402ae0 <free@plt>
  418320:	mov	x0, x22
  418324:	bl	415fb0 <_obstack_memory_used@@Base+0x2c80>
  418328:	str	w25, [x23]
  41832c:	mov	x20, #0x0                   	// #0
  418330:	b	4182d4 <_obstack_memory_used@@Base+0x4fa4>
  418334:	mov	x0, x22
  418338:	bl	415fb0 <_obstack_memory_used@@Base+0x2c80>
  41833c:	b	4182d4 <_obstack_memory_used@@Base+0x4fa4>
  418340:	mov	x0, x19
  418344:	bl	402ae0 <free@plt>
  418348:	mov	x0, x22
  41834c:	bl	415fb0 <_obstack_memory_used@@Base+0x2c80>
  418350:	mov	w0, #0xc                   	// #12
  418354:	str	w0, [x23]
  418358:	mov	x20, #0x0                   	// #0
  41835c:	b	4182d4 <_obstack_memory_used@@Base+0x4fa4>
  418360:	stp	x29, x30, [sp, #-80]!
  418364:	mov	x29, sp
  418368:	stp	x19, x20, [sp, #16]
  41836c:	stp	x21, x22, [sp, #32]
  418370:	stp	x23, x24, [sp, #48]
  418374:	mov	x24, x2
  418378:	mov	x20, x3
  41837c:	lsl	x21, x1, #4
  418380:	ldr	x23, [x0]
  418384:	add	x1, x23, x21
  418388:	ldrb	w22, [x1, #8]
  41838c:	cmp	w22, #0x7
  418390:	b.eq	4183e0 <_obstack_memory_used@@Base+0x50b0>  // b.none
  418394:	str	x25, [sp, #64]
  418398:	mov	x25, x0
  41839c:	mov	x1, x3
  4183a0:	mov	x0, x2
  4183a4:	bl	41335c <_obstack_memory_used@@Base+0x2c>
  4183a8:	mov	w19, w0
  4183ac:	cmp	w22, #0x5
  4183b0:	b.eq	4184e8 <_obstack_memory_used@@Base+0x51b8>  // b.none
  4183b4:	cmp	w22, #0x6
  4183b8:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  4183bc:	b.gt	418524 <_obstack_memory_used@@Base+0x51f4>
  4183c0:	mov	w19, #0x0                   	// #0
  4183c4:	ldr	x25, [sp, #64]
  4183c8:	mov	w0, w19
  4183cc:	ldp	x19, x20, [sp, #16]
  4183d0:	ldp	x21, x22, [sp, #32]
  4183d4:	ldp	x23, x24, [sp, #48]
  4183d8:	ldp	x29, x30, [sp], #80
  4183dc:	ret
  4183e0:	ldr	x0, [x2, #8]
  4183e4:	add	x2, x0, x3
  4183e8:	ldrb	w1, [x0, x3]
  4183ec:	mov	w19, #0x0                   	// #0
  4183f0:	cmp	w1, #0xc1
  4183f4:	b.ls	4183c8 <_obstack_memory_used@@Base+0x5098>  // b.plast
  4183f8:	ldr	x4, [x24, #88]
  4183fc:	add	x3, x3, #0x1
  418400:	cmp	x3, x4
  418404:	b.ge	4183c8 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  418408:	ldrb	w0, [x2, #1]
  41840c:	cmp	w1, #0xdf
  418410:	b.ls	41846c <_obstack_memory_used@@Base+0x513c>  // b.plast
  418414:	cmp	w1, #0xef
  418418:	b.hi	418484 <_obstack_memory_used@@Base+0x5154>  // b.pmore
  41841c:	cmp	w1, #0xe0
  418420:	mov	w19, #0x0                   	// #0
  418424:	mov	w1, #0x9f                  	// #159
  418428:	ccmp	w0, w1, #0x2, eq  // eq = none
  41842c:	b.ls	4183c8 <_obstack_memory_used@@Base+0x5098>  // b.plast
  418430:	mov	w19, #0x3                   	// #3
  418434:	sxtw	x3, w19
  418438:	add	x20, x3, x20
  41843c:	cmp	x4, x20
  418440:	b.lt	418624 <_obstack_memory_used@@Base+0x52f4>  // b.tstop
  418444:	mov	x1, #0x1                   	// #1
  418448:	ldrb	w0, [x2, x1]
  41844c:	sub	w0, w0, #0x80
  418450:	and	w0, w0, #0xff
  418454:	cmp	w0, #0x3f
  418458:	b.hi	41862c <_obstack_memory_used@@Base+0x52fc>  // b.pmore
  41845c:	add	x1, x1, #0x1
  418460:	cmp	x3, x1
  418464:	b.gt	418448 <_obstack_memory_used@@Base+0x5118>
  418468:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  41846c:	sub	w0, w0, #0x80
  418470:	and	w0, w0, #0xff
  418474:	cmp	w0, #0x40
  418478:	cset	w19, cc  // cc = lo, ul, last
  41847c:	lsl	w19, w19, #1
  418480:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  418484:	cmp	w1, #0xf7
  418488:	b.hi	4184a8 <_obstack_memory_used@@Base+0x5178>  // b.pmore
  41848c:	cmp	w1, #0xf0
  418490:	mov	w19, #0x0                   	// #0
  418494:	mov	w1, #0x8f                  	// #143
  418498:	ccmp	w0, w1, #0x2, eq  // eq = none
  41849c:	b.ls	4183c8 <_obstack_memory_used@@Base+0x5098>  // b.plast
  4184a0:	mov	w19, #0x4                   	// #4
  4184a4:	b	418434 <_obstack_memory_used@@Base+0x5104>
  4184a8:	cmp	w1, #0xfb
  4184ac:	b.hi	4184c8 <_obstack_memory_used@@Base+0x5198>  // b.pmore
  4184b0:	cmp	w1, #0xf8
  4184b4:	mov	w1, #0x87                  	// #135
  4184b8:	ccmp	w0, w1, #0x2, eq  // eq = none
  4184bc:	b.ls	41860c <_obstack_memory_used@@Base+0x52dc>  // b.plast
  4184c0:	mov	w19, #0x5                   	// #5
  4184c4:	b	418434 <_obstack_memory_used@@Base+0x5104>
  4184c8:	cmp	w1, #0xfd
  4184cc:	b.hi	418614 <_obstack_memory_used@@Base+0x52e4>  // b.pmore
  4184d0:	cmp	w1, #0xfc
  4184d4:	mov	w1, #0x83                  	// #131
  4184d8:	ccmp	w0, w1, #0x2, eq  // eq = none
  4184dc:	b.ls	41861c <_obstack_memory_used@@Base+0x52ec>  // b.plast
  4184e0:	mov	w19, #0x6                   	// #6
  4184e4:	b	418434 <_obstack_memory_used@@Base+0x5104>
  4184e8:	cmp	w0, #0x1
  4184ec:	b.le	418634 <_obstack_memory_used@@Base+0x5304>
  4184f0:	ldr	x0, [x25, #216]
  4184f4:	tbnz	w0, #6, 418508 <_obstack_memory_used@@Base+0x51d8>
  4184f8:	ldr	x1, [x24, #8]
  4184fc:	ldrb	w1, [x1, x20]
  418500:	cmp	w1, #0xa
  418504:	b.eq	418640 <_obstack_memory_used@@Base+0x5310>  // b.none
  418508:	tbz	w0, #7, 418690 <_obstack_memory_used@@Base+0x5360>
  41850c:	ldr	x0, [x24, #8]
  418510:	ldrb	w0, [x0, x20]
  418514:	cmp	w0, #0x0
  418518:	csel	w19, w19, wzr, ne  // ne = any
  41851c:	ldr	x25, [sp, #64]
  418520:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  418524:	ldr	x22, [x23, x21]
  418528:	ldr	x0, [x22, #64]
  41852c:	cbnz	x0, 418548 <_obstack_memory_used@@Base+0x5218>
  418530:	ldr	x0, [x22, #72]
  418534:	cbnz	x0, 418548 <_obstack_memory_used@@Base+0x5218>
  418538:	ldr	x0, [x22, #40]
  41853c:	cbnz	x0, 418670 <_obstack_memory_used@@Base+0x5340>
  418540:	mov	w20, #0x0                   	// #0
  418544:	b	4185b8 <_obstack_memory_used@@Base+0x5288>
  418548:	mov	x1, x20
  41854c:	mov	x0, x24
  418550:	bl	4133ac <_obstack_memory_used@@Base+0x7c>
  418554:	mov	w20, w0
  418558:	ldr	x2, [x22, #40]
  41855c:	cmp	x2, #0x0
  418560:	b.le	418584 <_obstack_memory_used@@Base+0x5254>
  418564:	ldr	x3, [x22]
  418568:	mov	x1, #0x0                   	// #0
  41856c:	ldr	w0, [x3, x1, lsl #2]
  418570:	cmp	w0, w20
  418574:	b.eq	4185f8 <_obstack_memory_used@@Base+0x52c8>  // b.none
  418578:	add	x1, x1, #0x1
  41857c:	cmp	x2, x1
  418580:	b.ne	41856c <_obstack_memory_used@@Base+0x523c>  // b.any
  418584:	ldr	x0, [x22, #72]
  418588:	cmp	x0, #0x0
  41858c:	b.le	4185b8 <_obstack_memory_used@@Base+0x5288>
  418590:	mov	x21, #0x0                   	// #0
  418594:	ldr	x0, [x22, #24]
  418598:	ldr	x1, [x0, x21, lsl #3]
  41859c:	mov	w0, w20
  4185a0:	bl	4027f0 <iswctype@plt>
  4185a4:	cbnz	w0, 4185f8 <_obstack_memory_used@@Base+0x52c8>
  4185a8:	add	x21, x21, #0x1
  4185ac:	ldr	x0, [x22, #72]
  4185b0:	cmp	x0, x21
  4185b4:	b.gt	418594 <_obstack_memory_used@@Base+0x5264>
  4185b8:	ldr	x2, [x22, #64]
  4185bc:	cmp	x2, #0x0
  4185c0:	b.le	418658 <_obstack_memory_used@@Base+0x5328>
  4185c4:	ldr	x3, [x22, #8]
  4185c8:	mov	x0, #0x0                   	// #0
  4185cc:	b	4185dc <_obstack_memory_used@@Base+0x52ac>
  4185d0:	add	x0, x0, #0x1
  4185d4:	cmp	x2, x0
  4185d8:	b.eq	418658 <_obstack_memory_used@@Base+0x5328>  // b.none
  4185dc:	ldr	w1, [x3, x0, lsl #2]
  4185e0:	cmp	w20, w1
  4185e4:	b.cc	4185d0 <_obstack_memory_used@@Base+0x52a0>  // b.lo, b.ul, b.last
  4185e8:	ldr	x1, [x22, #16]
  4185ec:	ldr	w1, [x1, x0, lsl #2]
  4185f0:	cmp	w20, w1
  4185f4:	b.hi	4185d0 <_obstack_memory_used@@Base+0x52a0>  // b.pmore
  4185f8:	ldrb	w0, [x22, #32]
  4185fc:	tst	x0, #0x1
  418600:	csel	w19, w19, wzr, eq  // eq = none
  418604:	ldr	x25, [sp, #64]
  418608:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  41860c:	mov	w19, #0x0                   	// #0
  418610:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  418614:	mov	w19, #0x0                   	// #0
  418618:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  41861c:	mov	w19, #0x0                   	// #0
  418620:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  418624:	mov	w19, #0x0                   	// #0
  418628:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  41862c:	mov	w19, #0x0                   	// #0
  418630:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  418634:	mov	w19, #0x0                   	// #0
  418638:	ldr	x25, [sp, #64]
  41863c:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  418640:	mov	w19, #0x0                   	// #0
  418644:	ldr	x25, [sp, #64]
  418648:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  41864c:	mov	w19, #0x0                   	// #0
  418650:	ldr	x25, [sp, #64]
  418654:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  418658:	ldrb	w0, [x22, #32]
  41865c:	tbz	w0, #0, 41864c <_obstack_memory_used@@Base+0x531c>
  418660:	cmp	w19, #0x0
  418664:	csinc	w19, w19, wzr, gt
  418668:	ldr	x25, [sp, #64]
  41866c:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  418670:	mov	x1, x20
  418674:	mov	x0, x24
  418678:	bl	4133ac <_obstack_memory_used@@Base+0x7c>
  41867c:	mov	w20, w0
  418680:	ldr	x2, [x22, #40]
  418684:	cmp	x2, #0x0
  418688:	b.gt	418564 <_obstack_memory_used@@Base+0x5234>
  41868c:	b	4185b8 <_obstack_memory_used@@Base+0x5288>
  418690:	ldr	x25, [sp, #64]
  418694:	b	4183c8 <_obstack_memory_used@@Base+0x5098>
  418698:	stp	x29, x30, [sp, #-128]!
  41869c:	mov	x29, sp
  4186a0:	stp	x19, x20, [sp, #16]
  4186a4:	stp	x21, x22, [sp, #32]
  4186a8:	mov	x22, x0
  4186ac:	add	x21, x1, x1, lsl #1
  4186b0:	ldr	x0, [x0, #56]
  4186b4:	add	x21, x0, x21, lsl #3
  4186b8:	stp	xzr, xzr, [sp, #104]
  4186bc:	str	xzr, [sp, #120]
  4186c0:	ldr	x0, [x21, #8]
  4186c4:	cmp	x0, #0x0
  4186c8:	b.le	418764 <_obstack_memory_used@@Base+0x5434>
  4186cc:	stp	x23, x24, [sp, #48]
  4186d0:	stp	x25, x26, [sp, #64]
  4186d4:	str	x27, [sp, #80]
  4186d8:	mov	x23, x1
  4186dc:	mov	x24, x2
  4186e0:	mov	x25, x3
  4186e4:	mov	x20, #0x0                   	// #0
  4186e8:	b	4187e0 <_obstack_memory_used@@Base+0x54b0>
  4186ec:	ldr	x0, [sp, #120]
  4186f0:	bl	402ae0 <free@plt>
  4186f4:	ldp	x23, x24, [sp, #48]
  4186f8:	ldp	x25, x26, [sp, #64]
  4186fc:	ldr	x27, [sp, #80]
  418700:	b	418770 <_obstack_memory_used@@Base+0x5440>
  418704:	cmp	x0, #0x0
  418708:	b.le	418784 <_obstack_memory_used@@Base+0x5454>
  41870c:	mov	x19, #0x0                   	// #0
  418710:	b	41873c <_obstack_memory_used@@Base+0x540c>
  418714:	mov	x1, x20
  418718:	mov	x0, x24
  41871c:	bl	413488 <_obstack_memory_used@@Base+0x158>
  418720:	sub	x1, x0, #0x1
  418724:	mov	x0, x24
  418728:	bl	4134e8 <_obstack_memory_used@@Base+0x1b8>
  41872c:	add	x19, x19, #0x1
  418730:	ldr	x0, [x21, #8]
  418734:	cmp	x0, x19
  418738:	b.le	418758 <_obstack_memory_used@@Base+0x5428>
  41873c:	ldr	x0, [x21, #16]
  418740:	ldr	x20, [x0, x19, lsl #3]
  418744:	mov	x1, x20
  418748:	add	x0, sp, #0x68
  41874c:	bl	413488 <_obstack_memory_used@@Base+0x158>
  418750:	cbnz	x0, 41872c <_obstack_memory_used@@Base+0x53fc>
  418754:	b	418714 <_obstack_memory_used@@Base+0x53e4>
  418758:	ldp	x23, x24, [sp, #48]
  41875c:	ldp	x25, x26, [sp, #64]
  418760:	ldr	x27, [sp, #80]
  418764:	ldr	x0, [sp, #120]
  418768:	bl	402ae0 <free@plt>
  41876c:	mov	w19, #0x0                   	// #0
  418770:	mov	w0, w19
  418774:	ldp	x19, x20, [sp, #16]
  418778:	ldp	x21, x22, [sp, #32]
  41877c:	ldp	x29, x30, [sp], #128
  418780:	ret
  418784:	ldp	x23, x24, [sp, #48]
  418788:	ldp	x25, x26, [sp, #64]
  41878c:	ldr	x27, [sp, #80]
  418790:	b	418764 <_obstack_memory_used@@Base+0x5434>
  418794:	mov	x1, x26
  418798:	mov	x0, x21
  41879c:	bl	413488 <_obstack_memory_used@@Base+0x158>
  4187a0:	cbnz	x0, 4187d0 <_obstack_memory_used@@Base+0x54a0>
  4187a4:	mov	x1, x26
  4187a8:	mov	x0, x24
  4187ac:	bl	413488 <_obstack_memory_used@@Base+0x158>
  4187b0:	cbz	x0, 4187d0 <_obstack_memory_used@@Base+0x54a0>
  4187b4:	ldr	x2, [x22, #56]
  4187b8:	add	x2, x2, x19
  4187bc:	mov	x1, x25
  4187c0:	add	x0, sp, #0x68
  4187c4:	bl	414c1c <_obstack_memory_used@@Base+0x18ec>
  4187c8:	mov	w19, w0
  4187cc:	cbnz	w0, 4186ec <_obstack_memory_used@@Base+0x53bc>
  4187d0:	add	x20, x20, #0x1
  4187d4:	ldr	x0, [x21, #8]
  4187d8:	cmp	x0, x20
  4187dc:	b.le	418704 <_obstack_memory_used@@Base+0x53d4>
  4187e0:	ldr	x0, [x21, #16]
  4187e4:	ldr	x4, [x0, x20, lsl #3]
  4187e8:	cmp	x23, x4
  4187ec:	b.eq	4187d0 <_obstack_memory_used@@Base+0x54a0>  // b.none
  4187f0:	ldr	x5, [x22]
  4187f4:	add	x5, x5, x4, lsl #4
  4187f8:	ldrb	w0, [x5, #8]
  4187fc:	tbz	w0, #3, 4187d0 <_obstack_memory_used@@Base+0x54a0>
  418800:	add	x4, x4, x4, lsl #1
  418804:	lsl	x19, x4, #3
  418808:	ldr	x0, [x22, #40]
  41880c:	add	x0, x0, x19
  418810:	ldr	x1, [x0, #16]
  418814:	ldr	x26, [x1]
  418818:	ldr	x0, [x0, #8]
  41881c:	cmp	x0, #0x1
  418820:	b.le	418794 <_obstack_memory_used@@Base+0x5464>
  418824:	ldr	x27, [x1, #8]
  418828:	mov	x1, x26
  41882c:	mov	x0, x21
  418830:	bl	413488 <_obstack_memory_used@@Base+0x158>
  418834:	cbnz	x0, 418848 <_obstack_memory_used@@Base+0x5518>
  418838:	mov	x1, x26
  41883c:	mov	x0, x24
  418840:	bl	413488 <_obstack_memory_used@@Base+0x158>
  418844:	cbnz	x0, 4187b4 <_obstack_memory_used@@Base+0x5484>
  418848:	cmp	x27, #0x0
  41884c:	b.le	4187d0 <_obstack_memory_used@@Base+0x54a0>
  418850:	mov	x1, x27
  418854:	mov	x0, x21
  418858:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41885c:	cbnz	x0, 4187d0 <_obstack_memory_used@@Base+0x54a0>
  418860:	mov	x1, x27
  418864:	mov	x0, x24
  418868:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41886c:	cbz	x0, 4187d0 <_obstack_memory_used@@Base+0x54a0>
  418870:	b	4187b4 <_obstack_memory_used@@Base+0x5484>
  418874:	stp	x29, x30, [sp, #-128]!
  418878:	mov	x29, sp
  41887c:	stp	x19, x20, [sp, #16]
  418880:	stp	x21, x22, [sp, #32]
  418884:	mov	x19, x0
  418888:	mov	x21, x1
  41888c:	mov	w22, w2
  418890:	ldr	x20, [x0, #40]
  418894:	cmp	x20, x1
  418898:	b.le	41899c <_obstack_memory_used@@Base+0x566c>
  41889c:	ldr	w0, [x0, #144]
  4188a0:	cmp	w0, #0x1
  4188a4:	b.gt	4189a4 <_obstack_memory_used@@Base+0x5674>
  4188a8:	ldr	x0, [x19, #80]
  4188ac:	str	x0, [x19, #88]
  4188b0:	ldr	x0, [x19, #96]
  4188b4:	str	x0, [x19, #104]
  4188b8:	str	xzr, [x19, #48]
  4188bc:	str	xzr, [x19, #40]
  4188c0:	str	xzr, [x19, #56]
  4188c4:	strb	wzr, [x19, #140]
  4188c8:	tst	x22, #0x1
  4188cc:	mov	w0, #0x4                   	// #4
  4188d0:	mov	w1, #0x6                   	// #6
  4188d4:	csel	w0, w0, w1, ne  // ne = any
  4188d8:	str	w0, [x19, #112]
  4188dc:	ldrb	w0, [x19, #139]
  4188e0:	mov	x20, x21
  4188e4:	cbnz	w0, 4188f0 <_obstack_memory_used@@Base+0x55c0>
  4188e8:	ldr	x0, [x19]
  4188ec:	str	x0, [x19, #8]
  4188f0:	cbz	x20, 41895c <_obstack_memory_used@@Base+0x562c>
  4188f4:	ldr	x0, [x19, #56]
  4188f8:	cmp	x0, x20
  4188fc:	b.le	418bb0 <_obstack_memory_used@@Base+0x5880>
  418900:	ldrb	w0, [x19, #140]
  418904:	cbnz	w0, 4189ac <_obstack_memory_used@@Base+0x567c>
  418908:	mov	w2, w22
  41890c:	sub	x1, x20, #0x1
  418910:	mov	x0, x19
  418914:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  418918:	str	w0, [x19, #112]
  41891c:	ldr	w0, [x19, #144]
  418920:	cmp	w0, #0x1
  418924:	b.gt	418b7c <_obstack_memory_used@@Base+0x584c>
  418928:	ldrb	w0, [x19, #139]
  41892c:	cbnz	w0, 418b98 <_obstack_memory_used@@Base+0x5868>
  418930:	ldr	x0, [x19, #48]
  418934:	sub	x0, x0, x20
  418938:	str	x0, [x19, #48]
  41893c:	ldr	x0, [x19, #56]
  418940:	sub	x0, x0, x20
  418944:	str	x0, [x19, #56]
  418948:	ldrb	w0, [x19, #139]
  41894c:	cbnz	w0, 41895c <_obstack_memory_used@@Base+0x562c>
  418950:	ldr	x0, [x19, #8]
  418954:	add	x0, x0, x20
  418958:	str	x0, [x19, #8]
  41895c:	str	x21, [x19, #40]
  418960:	ldr	x0, [x19, #88]
  418964:	sub	x0, x0, x20
  418968:	str	x0, [x19, #88]
  41896c:	ldr	x1, [x19, #104]
  418970:	sub	x20, x1, x20
  418974:	str	x20, [x19, #104]
  418978:	ldr	w1, [x19, #144]
  41897c:	cmp	w1, #0x1
  418980:	b.le	418ec4 <_obstack_memory_used@@Base+0x5b94>
  418984:	ldrb	w0, [x19, #136]
  418988:	cbz	w0, 418eb8 <_obstack_memory_used@@Base+0x5b88>
  41898c:	mov	x0, x19
  418990:	bl	414ff4 <_obstack_memory_used@@Base+0x1cc4>
  418994:	cbz	w0, 418ed0 <_obstack_memory_used@@Base+0x5ba0>
  418998:	b	418ed8 <_obstack_memory_used@@Base+0x5ba8>
  41899c:	sub	x20, x1, x20
  4189a0:	b	4188f0 <_obstack_memory_used@@Base+0x55c0>
  4189a4:	str	xzr, [x19, #32]
  4189a8:	b	4188a8 <_obstack_memory_used@@Base+0x5578>
  4189ac:	stp	x23, x24, [sp, #48]
  4189b0:	stp	x25, x26, [sp, #64]
  4189b4:	ldr	x25, [x19, #48]
  4189b8:	ldr	x24, [x19, #24]
  4189bc:	mov	x1, x25
  4189c0:	mov	x2, #0x0                   	// #0
  4189c4:	b	4189d4 <_obstack_memory_used@@Base+0x56a4>
  4189c8:	mov	x1, x23
  4189cc:	cmp	x2, x1
  4189d0:	b.ge	4189f8 <_obstack_memory_used@@Base+0x56c8>  // b.tcont
  4189d4:	add	x23, x2, x1
  4189d8:	add	x23, x23, x23, lsr #63
  4189dc:	asr	x23, x23, #1
  4189e0:	ldr	x0, [x24, x23, lsl #3]
  4189e4:	cmp	x0, x20
  4189e8:	b.gt	4189c8 <_obstack_memory_used@@Base+0x5698>
  4189ec:	b.ge	418a00 <_obstack_memory_used@@Base+0x56d0>  // b.tcont
  4189f0:	add	x2, x23, #0x1
  4189f4:	b	4189cc <_obstack_memory_used@@Base+0x569c>
  4189f8:	cmp	x0, x20
  4189fc:	cinc	x23, x23, lt  // lt = tstop
  418a00:	mov	w2, w22
  418a04:	sub	x1, x23, #0x1
  418a08:	mov	x0, x19
  418a0c:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  418a10:	str	w0, [x19, #112]
  418a14:	cmp	x20, x25
  418a18:	ccmp	x20, x23, #0x0, lt  // lt = tstop
  418a1c:	b.eq	418aa0 <_obstack_memory_used@@Base+0x5770>  // b.none
  418a20:	ldr	x0, [x19, #80]
  418a24:	sub	x0, x0, x21
  418a28:	add	x0, x0, x20
  418a2c:	str	x0, [x19, #88]
  418a30:	ldr	x0, [x19, #96]
  418a34:	sub	x0, x0, x21
  418a38:	add	x0, x0, x20
  418a3c:	str	x0, [x19, #104]
  418a40:	strb	wzr, [x19, #140]
  418a44:	sub	x1, x24, #0x8
  418a48:	cmp	x23, #0x0
  418a4c:	b.le	418a64 <_obstack_memory_used@@Base+0x5734>
  418a50:	ldr	x0, [x1, x23, lsl #3]
  418a54:	cmp	x0, x20
  418a58:	b.ne	418a64 <_obstack_memory_used@@Base+0x5734>  // b.any
  418a5c:	subs	x23, x23, #0x1
  418a60:	b.ne	418a50 <_obstack_memory_used@@Base+0x5720>  // b.any
  418a64:	cmp	x23, x25
  418a68:	b.ge	418b2c <_obstack_memory_used@@Base+0x57fc>  // b.tcont
  418a6c:	ldr	x1, [x19, #16]
  418a70:	ldr	w0, [x1, x23, lsl #2]
  418a74:	cmn	w0, #0x1
  418a78:	b.ne	418b2c <_obstack_memory_used@@Base+0x57fc>  // b.any
  418a7c:	add	x23, x23, #0x1
  418a80:	cmp	x25, x23
  418a84:	b.ne	418a70 <_obstack_memory_used@@Base+0x5740>  // b.any
  418a88:	str	xzr, [x19, #48]
  418a8c:	ldr	x0, [x19, #48]
  418a90:	str	x0, [x19, #56]
  418a94:	ldp	x23, x24, [sp, #48]
  418a98:	ldp	x25, x26, [sp, #64]
  418a9c:	b	418948 <_obstack_memory_used@@Base+0x5618>
  418aa0:	ldr	x0, [x24, x23, lsl #3]
  418aa4:	cmp	x0, x20
  418aa8:	b.ne	418a20 <_obstack_memory_used@@Base+0x56f0>  // b.any
  418aac:	ldr	x0, [x19, #16]
  418ab0:	sub	x2, x25, x20
  418ab4:	lsl	x2, x2, #2
  418ab8:	add	x1, x0, x20, lsl #2
  418abc:	bl	402660 <memmove@plt>
  418ac0:	ldr	x0, [x19, #8]
  418ac4:	ldr	x2, [x19, #48]
  418ac8:	sub	x2, x2, x20
  418acc:	add	x1, x0, x20
  418ad0:	bl	402660 <memmove@plt>
  418ad4:	ldr	x0, [x19, #48]
  418ad8:	sub	x0, x0, x20
  418adc:	str	x0, [x19, #48]
  418ae0:	ldr	x1, [x19, #56]
  418ae4:	sub	x1, x1, x20
  418ae8:	str	x1, [x19, #56]
  418aec:	cmp	x0, #0x0
  418af0:	b.le	418eac <_obstack_memory_used@@Base+0x5b7c>
  418af4:	lsl	x2, x20, #3
  418af8:	mov	x0, #0x0                   	// #0
  418afc:	ldr	x3, [x19, #24]
  418b00:	ldr	x1, [x3, x2]
  418b04:	sub	x1, x1, x20
  418b08:	str	x1, [x3, x0, lsl #3]
  418b0c:	add	x0, x0, #0x1
  418b10:	add	x2, x2, #0x8
  418b14:	ldr	x1, [x19, #48]
  418b18:	cmp	x1, x0
  418b1c:	b.gt	418afc <_obstack_memory_used@@Base+0x57cc>
  418b20:	ldp	x23, x24, [sp, #48]
  418b24:	ldp	x25, x26, [sp, #64]
  418b28:	b	418948 <_obstack_memory_used@@Base+0x5618>
  418b2c:	cmp	x25, x23
  418b30:	b.eq	418a88 <_obstack_memory_used@@Base+0x5758>  // b.none
  418b34:	ldr	x2, [x24, x23, lsl #3]
  418b38:	sub	x2, x2, x20
  418b3c:	str	x2, [x19, #48]
  418b40:	cbz	x2, 418a8c <_obstack_memory_used@@Base+0x575c>
  418b44:	cmp	x2, #0x0
  418b48:	b.le	418b6c <_obstack_memory_used@@Base+0x583c>
  418b4c:	mov	x0, #0x0                   	// #0
  418b50:	mov	w3, #0xffffffff            	// #-1
  418b54:	ldr	x1, [x19, #16]
  418b58:	str	w3, [x1, x0, lsl #2]
  418b5c:	add	x0, x0, #0x1
  418b60:	ldr	x2, [x19, #48]
  418b64:	cmp	x2, x0
  418b68:	b.gt	418b54 <_obstack_memory_used@@Base+0x5824>
  418b6c:	mov	w1, #0xff                  	// #255
  418b70:	ldr	x0, [x19, #8]
  418b74:	bl	4028d0 <memset@plt>
  418b78:	b	418a8c <_obstack_memory_used@@Base+0x575c>
  418b7c:	ldr	x0, [x19, #16]
  418b80:	ldr	x2, [x19, #48]
  418b84:	sub	x2, x2, x20
  418b88:	lsl	x2, x2, #2
  418b8c:	add	x1, x0, x20, lsl #2
  418b90:	bl	402660 <memmove@plt>
  418b94:	b	418928 <_obstack_memory_used@@Base+0x55f8>
  418b98:	ldr	x0, [x19, #8]
  418b9c:	ldr	x2, [x19, #48]
  418ba0:	sub	x2, x2, x20
  418ba4:	add	x1, x0, x20
  418ba8:	bl	402660 <memmove@plt>
  418bac:	b	418930 <_obstack_memory_used@@Base+0x5600>
  418bb0:	stp	x25, x26, [sp, #64]
  418bb4:	ldr	x26, [x19, #48]
  418bb8:	ldrb	w0, [x19, #140]
  418bbc:	cbnz	w0, 418cb4 <_obstack_memory_used@@Base+0x5984>
  418bc0:	str	xzr, [x19, #48]
  418bc4:	ldr	w0, [x19, #144]
  418bc8:	cmp	w0, #0x1
  418bcc:	b.le	418e40 <_obstack_memory_used@@Base+0x5b10>
  418bd0:	stp	x23, x24, [sp, #48]
  418bd4:	ldrb	w1, [x19, #137]
  418bd8:	cbz	w1, 418c28 <_obstack_memory_used@@Base+0x58f8>
  418bdc:	ldr	x1, [x19]
  418be0:	ldr	x24, [x19, #40]
  418be4:	add	x24, x1, x24
  418be8:	sub	x0, x20, w0, sxtw
  418bec:	add	x0, x24, x0
  418bf0:	cmp	x1, x0
  418bf4:	csel	x1, x1, x0, cs  // cs = hs, nlast
  418bf8:	mov	x25, x20
  418bfc:	sub	x23, x20, #0x1
  418c00:	add	x23, x24, x23
  418c04:	cmp	x23, x1
  418c08:	b.cc	418c28 <_obstack_memory_used@@Base+0x58f8>  // b.lo, b.ul, b.last
  418c0c:	ldrb	w0, [x23]
  418c10:	and	w0, w0, #0xc0
  418c14:	cmp	w0, #0x80
  418c18:	b.ne	418cdc <_obstack_memory_used@@Base+0x59ac>  // b.any
  418c1c:	sub	x23, x23, #0x1
  418c20:	cmp	x23, x1
  418c24:	b.cs	418c0c <_obstack_memory_used@@Base+0x58dc>  // b.hs, b.nlast
  418c28:	ldr	x0, [x19, #40]
  418c2c:	ldr	x1, [x19, #56]
  418c30:	add	x0, x0, x1
  418c34:	cmp	x21, x0
  418c38:	b.le	418f10 <_obstack_memory_used@@Base+0x5be0>
  418c3c:	stp	x27, x28, [sp, #80]
  418c40:	add	x27, x19, #0x20
  418c44:	ldr	x23, [x19, #80]
  418c48:	sub	x23, x23, x0
  418c4c:	ldr	x28, [x19, #32]
  418c50:	mov	x25, x0
  418c54:	ldr	x1, [x19]
  418c58:	mov	x3, x27
  418c5c:	mov	x2, x23
  418c60:	add	x1, x1, x0
  418c64:	add	x0, sp, #0x78
  418c68:	bl	412f3c <wcrtomb@plt+0x101fc>
  418c6c:	sub	x1, x0, #0x1
  418c70:	cmn	x1, #0x4
  418c74:	b.hi	418da4 <_obstack_memory_used@@Base+0x5a74>  // b.pmore
  418c78:	ldr	w24, [sp, #120]
  418c7c:	add	x0, x25, x0
  418c80:	cmp	x21, x0
  418c84:	b.gt	418c44 <_obstack_memory_used@@Base+0x5914>
  418c88:	sub	x0, x0, x21
  418c8c:	str	x0, [x19, #48]
  418c90:	cmn	w24, #0x1
  418c94:	b.ne	418dc8 <_obstack_memory_used@@Base+0x5a98>  // b.any
  418c98:	ldp	x27, x28, [sp, #80]
  418c9c:	mov	w2, w22
  418ca0:	sub	x1, x26, #0x1
  418ca4:	mov	x0, x19
  418ca8:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  418cac:	str	w0, [x19, #112]
  418cb0:	b	418d48 <_obstack_memory_used@@Base+0x5a18>
  418cb4:	ldr	x0, [x19, #80]
  418cb8:	sub	x0, x0, x21
  418cbc:	add	x0, x0, x20
  418cc0:	str	x0, [x19, #88]
  418cc4:	ldr	x0, [x19, #96]
  418cc8:	sub	x0, x0, x21
  418ccc:	add	x0, x0, x20
  418cd0:	str	x0, [x19, #104]
  418cd4:	strb	wzr, [x19, #140]
  418cd8:	b	418bc0 <_obstack_memory_used@@Base+0x5890>
  418cdc:	ldr	x2, [x19, #88]
  418ce0:	add	x2, x24, x2
  418ce4:	sub	x2, x2, x23
  418ce8:	ldr	x3, [x19, #120]
  418cec:	mov	x1, x23
  418cf0:	cbnz	x3, 418d64 <_obstack_memory_used@@Base+0x5a34>
  418cf4:	str	xzr, [sp, #120]
  418cf8:	add	x3, sp, #0x78
  418cfc:	add	x0, sp, #0x6c
  418d00:	bl	412f3c <wcrtomb@plt+0x101fc>
  418d04:	add	x24, x24, x25
  418d08:	sub	x23, x24, x23
  418d0c:	cmp	x23, x0
  418d10:	ccmn	x0, #0x3, #0x2, ls  // ls = plast
  418d14:	b.hi	418c28 <_obstack_memory_used@@Base+0x58f8>  // b.pmore
  418d18:	str	xzr, [x19, #32]
  418d1c:	sub	x23, x0, x23
  418d20:	str	x23, [x19, #48]
  418d24:	ldr	w24, [sp, #108]
  418d28:	cmn	w24, #0x1
  418d2c:	b.eq	418c28 <_obstack_memory_used@@Base+0x58f8>  // b.none
  418d30:	ldrb	w0, [x19, #142]
  418d34:	cbnz	w0, 418dd0 <_obstack_memory_used@@Base+0x5aa0>
  418d38:	mov	w1, #0x0                   	// #0
  418d3c:	cmp	w24, #0xa
  418d40:	b.eq	418dec <_obstack_memory_used@@Base+0x5abc>  // b.none
  418d44:	str	w1, [x19, #112]
  418d48:	ldr	x2, [x19, #48]
  418d4c:	cbnz	x2, 418e00 <_obstack_memory_used@@Base+0x5ad0>
  418d50:	ldr	x0, [x19, #48]
  418d54:	str	x0, [x19, #56]
  418d58:	ldp	x23, x24, [sp, #48]
  418d5c:	ldp	x25, x26, [sp, #64]
  418d60:	b	418948 <_obstack_memory_used@@Base+0x5618>
  418d64:	cmp	x2, #0x6
  418d68:	mov	x0, #0x6                   	// #6
  418d6c:	csel	x0, x2, x0, le
  418d70:	subs	w0, w0, #0x1
  418d74:	b.mi	418d9c <_obstack_memory_used@@Base+0x5a6c>  // b.first
  418d78:	sxtw	x0, w0
  418d7c:	add	x4, sp, #0x70
  418d80:	ldrb	w1, [x23, x0]
  418d84:	ldrb	w1, [x3, x1]
  418d88:	strb	w1, [x0, x4]
  418d8c:	sub	x0, x0, #0x1
  418d90:	tbz	w0, #31, 418d80 <_obstack_memory_used@@Base+0x5a50>
  418d94:	add	x1, sp, #0x70
  418d98:	b	418cf4 <_obstack_memory_used@@Base+0x59c4>
  418d9c:	add	x1, sp, #0x70
  418da0:	b	418cf4 <_obstack_memory_used@@Base+0x59c4>
  418da4:	cmp	x0, #0x0
  418da8:	mov	w24, #0x0                   	// #0
  418dac:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  418db0:	b.eq	418dbc <_obstack_memory_used@@Base+0x5a8c>  // b.none
  418db4:	ldr	x0, [x19]
  418db8:	ldrb	w24, [x0, x25]
  418dbc:	str	x28, [x19, #32]
  418dc0:	mov	x0, #0x1                   	// #1
  418dc4:	b	418c7c <_obstack_memory_used@@Base+0x594c>
  418dc8:	ldp	x27, x28, [sp, #80]
  418dcc:	b	418d30 <_obstack_memory_used@@Base+0x5a00>
  418dd0:	mov	w0, w24
  418dd4:	bl	402bf0 <iswalnum@plt>
  418dd8:	cmp	w24, #0x5f
  418ddc:	mov	w1, #0x1                   	// #1
  418de0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  418de4:	b.ne	418d44 <_obstack_memory_used@@Base+0x5a14>  // b.any
  418de8:	b	418d38 <_obstack_memory_used@@Base+0x5a08>
  418dec:	ldrb	w0, [x19, #141]
  418df0:	cmp	w0, #0x0
  418df4:	cset	w1, ne  // ne = any
  418df8:	lsl	w1, w1, #1
  418dfc:	b	418d44 <_obstack_memory_used@@Base+0x5a14>
  418e00:	cmp	x2, #0x0
  418e04:	b.le	418e28 <_obstack_memory_used@@Base+0x5af8>
  418e08:	mov	x0, #0x0                   	// #0
  418e0c:	mov	w3, #0xffffffff            	// #-1
  418e10:	ldr	x1, [x19, #16]
  418e14:	str	w3, [x1, x0, lsl #2]
  418e18:	add	x0, x0, #0x1
  418e1c:	ldr	x2, [x19, #48]
  418e20:	cmp	x2, x0
  418e24:	b.gt	418e10 <_obstack_memory_used@@Base+0x5ae0>
  418e28:	ldrb	w0, [x19, #139]
  418e2c:	cbz	w0, 418d50 <_obstack_memory_used@@Base+0x5a20>
  418e30:	mov	w1, #0xff                  	// #255
  418e34:	ldr	x0, [x19, #8]
  418e38:	bl	4028d0 <memset@plt>
  418e3c:	b	418d50 <_obstack_memory_used@@Base+0x5a20>
  418e40:	ldr	x0, [x19]
  418e44:	ldr	x1, [x19, #40]
  418e48:	add	x0, x0, x20
  418e4c:	add	x0, x0, x1
  418e50:	ldurb	w0, [x0, #-1]
  418e54:	str	xzr, [x19, #56]
  418e58:	ldr	x1, [x19, #120]
  418e5c:	cbz	x1, 418e68 <_obstack_memory_used@@Base+0x5b38>
  418e60:	and	x0, x0, #0xff
  418e64:	ldrb	w0, [x1, x0]
  418e68:	ubfx	x1, x0, #6, #2
  418e6c:	ldr	x2, [x19, #128]
  418e70:	ldr	x1, [x2, x1, lsl #3]
  418e74:	lsr	x1, x1, x0
  418e78:	mov	w2, #0x1                   	// #1
  418e7c:	tbnz	w1, #0, 418e8c <_obstack_memory_used@@Base+0x5b5c>
  418e80:	mov	w2, #0x0                   	// #0
  418e84:	cmp	w0, #0xa
  418e88:	b.eq	418e98 <_obstack_memory_used@@Base+0x5b68>  // b.none
  418e8c:	str	w2, [x19, #112]
  418e90:	ldp	x25, x26, [sp, #64]
  418e94:	b	418948 <_obstack_memory_used@@Base+0x5618>
  418e98:	ldrb	w0, [x19, #141]
  418e9c:	cmp	w0, #0x0
  418ea0:	cset	w2, ne  // ne = any
  418ea4:	lsl	w2, w2, #1
  418ea8:	b	418e8c <_obstack_memory_used@@Base+0x5b5c>
  418eac:	ldp	x23, x24, [sp, #48]
  418eb0:	ldp	x25, x26, [sp, #64]
  418eb4:	b	418948 <_obstack_memory_used@@Base+0x5618>
  418eb8:	mov	x0, x19
  418ebc:	bl	414898 <_obstack_memory_used@@Base+0x1568>
  418ec0:	b	418ed0 <_obstack_memory_used@@Base+0x5ba0>
  418ec4:	ldrb	w1, [x19, #139]
  418ec8:	cbnz	w1, 418ee8 <_obstack_memory_used@@Base+0x5bb8>
  418ecc:	str	x0, [x19, #48]
  418ed0:	str	xzr, [x19, #72]
  418ed4:	mov	w0, #0x0                   	// #0
  418ed8:	ldp	x19, x20, [sp, #16]
  418edc:	ldp	x21, x22, [sp, #32]
  418ee0:	ldp	x29, x30, [sp], #128
  418ee4:	ret
  418ee8:	ldrb	w0, [x19, #136]
  418eec:	cbnz	w0, 418f04 <_obstack_memory_used@@Base+0x5bd4>
  418ef0:	ldr	x0, [x19, #120]
  418ef4:	cbz	x0, 418ed0 <_obstack_memory_used@@Base+0x5ba0>
  418ef8:	mov	x0, x19
  418efc:	bl	4133d0 <_obstack_memory_used@@Base+0xa0>
  418f00:	b	418ed0 <_obstack_memory_used@@Base+0x5ba0>
  418f04:	mov	x0, x19
  418f08:	bl	414800 <_obstack_memory_used@@Base+0x14d0>
  418f0c:	b	418ed0 <_obstack_memory_used@@Base+0x5ba0>
  418f10:	sub	x0, x0, x21
  418f14:	str	x0, [x19, #48]
  418f18:	b	418c9c <_obstack_memory_used@@Base+0x596c>
  418f1c:	stp	x29, x30, [sp, #-384]!
  418f20:	mov	x29, sp
  418f24:	stp	x21, x22, [sp, #32]
  418f28:	stp	x23, x24, [sp, #48]
  418f2c:	stp	x25, x26, [sp, #64]
  418f30:	stp	x27, x28, [sp, #80]
  418f34:	str	x0, [sp, #104]
  418f38:	mov	x28, x1
  418f3c:	mov	x22, x2
  418f40:	ldr	x26, [x0]
  418f44:	ldr	w0, [x26, #180]
  418f48:	mov	w24, #0x0                   	// #0
  418f4c:	cmp	w0, #0x1
  418f50:	b.eq	418f70 <_obstack_memory_used@@Base+0x5c40>  // b.none
  418f54:	ldr	x0, [x28, #16]
  418f58:	cmp	x0, #0x0
  418f5c:	b.le	4192a4 <_obstack_memory_used@@Base+0x5f74>
  418f60:	stp	x19, x20, [sp, #16]
  418f64:	mov	x25, #0x0                   	// #0
  418f68:	mov	w23, #0x1                   	// #1
  418f6c:	b	418fc4 <_obstack_memory_used@@Base+0x5c94>
  418f70:	ldr	x0, [sp, #104]
  418f74:	ldr	x24, [x0, #24]
  418f78:	ubfx	w24, w24, #22, #1
  418f7c:	b	418f54 <_obstack_memory_used@@Base+0x5c24>
  418f80:	ldrb	w20, [x1, x27]
  418f84:	strb	w23, [x22, x20]
  418f88:	cbz	w24, 418f9c <_obstack_memory_used@@Base+0x5c6c>
  418f8c:	bl	402770 <__ctype_tolower_loc@plt>
  418f90:	ldr	x0, [x0]
  418f94:	ldrsw	x0, [x0, x20, lsl #2]
  418f98:	strb	w23, [x22, x0]
  418f9c:	ldr	x0, [sp, #104]
  418fa0:	ldr	x0, [x0, #24]
  418fa4:	tbz	w0, #22, 418fb4 <_obstack_memory_used@@Base+0x5c84>
  418fa8:	ldr	w0, [x26, #180]
  418fac:	cmp	w0, #0x1
  418fb0:	b.gt	41902c <_obstack_memory_used@@Base+0x5cfc>
  418fb4:	add	x25, x25, #0x1
  418fb8:	ldr	x0, [x28, #16]
  418fbc:	cmp	x0, x25
  418fc0:	b.le	4192a0 <_obstack_memory_used@@Base+0x5f70>
  418fc4:	ldr	x0, [x28, #24]
  418fc8:	ldr	x19, [x0, x25, lsl #3]
  418fcc:	lsl	x27, x19, #4
  418fd0:	ldr	x1, [x26]
  418fd4:	add	x0, x1, x27
  418fd8:	ldrb	w0, [x0, #8]
  418fdc:	mov	w20, w0
  418fe0:	cmp	w0, #0x1
  418fe4:	b.eq	418f80 <_obstack_memory_used@@Base+0x5c50>  // b.none
  418fe8:	cmp	w0, #0x3
  418fec:	b.eq	4190ec <_obstack_memory_used@@Base+0x5dbc>  // b.none
  418ff0:	cmp	w0, #0x6
  418ff4:	b.eq	419168 <_obstack_memory_used@@Base+0x5e38>  // b.none
  418ff8:	and	w1, w0, #0xfffffffd
  418ffc:	and	w1, w1, #0xff
  419000:	cmp	w1, #0x5
  419004:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  419008:	b.ne	418fb4 <_obstack_memory_used@@Base+0x5c84>  // b.any
  41900c:	mov	x2, #0x100                 	// #256
  419010:	mov	w1, #0x1                   	// #1
  419014:	mov	x0, x22
  419018:	bl	4028d0 <memset@plt>
  41901c:	cmp	w20, #0x2
  419020:	b.eq	419288 <_obstack_memory_used@@Base+0x5f58>  // b.none
  419024:	ldp	x19, x20, [sp, #16]
  419028:	b	4192a4 <_obstack_memory_used@@Base+0x5f74>
  41902c:	ldr	x0, [x26]
  419030:	ldrb	w0, [x0, x27]
  419034:	strb	w0, [sp, #128]
  419038:	add	x19, x19, #0x1
  41903c:	ldr	x0, [x26, #16]
  419040:	add	x3, sp, #0x81
  419044:	cmp	x19, x0
  419048:	b.cs	4190e4 <_obstack_memory_used@@Base+0x5db4>  // b.hs, b.nlast
  41904c:	mov	w5, #0xff                  	// #255
  419050:	movk	w5, #0x20, lsl #16
  419054:	mov	w4, #0x1                   	// #1
  419058:	movk	w4, #0x20, lsl #16
  41905c:	lsl	x1, x19, #4
  419060:	ldr	x2, [x26]
  419064:	add	x0, x2, x1
  419068:	ldr	w0, [x0, #8]
  41906c:	and	w0, w0, w5
  419070:	cmp	w0, w4
  419074:	b.ne	419090 <_obstack_memory_used@@Base+0x5d60>  // b.any
  419078:	ldrb	w0, [x2, x1]
  41907c:	strb	w0, [x3], #1
  419080:	add	x19, x19, #0x1
  419084:	ldr	x0, [x26, #16]
  419088:	cmp	x0, x19
  41908c:	b.hi	41905c <_obstack_memory_used@@Base+0x5d2c>  // b.pmore
  419090:	str	xzr, [sp, #120]
  419094:	add	x0, sp, #0x80
  419098:	sub	x19, x3, x0
  41909c:	add	x3, sp, #0x78
  4190a0:	mov	x2, x19
  4190a4:	mov	x1, x0
  4190a8:	add	x0, sp, #0x74
  4190ac:	bl	412f3c <wcrtomb@plt+0x101fc>
  4190b0:	cmp	x19, x0
  4190b4:	b.ne	418fb4 <_obstack_memory_used@@Base+0x5c84>  // b.any
  4190b8:	ldr	w0, [sp, #116]
  4190bc:	bl	402cf0 <towlower@plt>
  4190c0:	add	x2, sp, #0x78
  4190c4:	mov	w1, w0
  4190c8:	add	x0, sp, #0x80
  4190cc:	bl	402d40 <wcrtomb@plt>
  4190d0:	cmn	x0, #0x1
  4190d4:	b.eq	418fb4 <_obstack_memory_used@@Base+0x5c84>  // b.none
  4190d8:	ldrb	w0, [sp, #128]
  4190dc:	strb	w23, [x22, x0]
  4190e0:	b	418fb4 <_obstack_memory_used@@Base+0x5c84>
  4190e4:	add	x3, sp, #0x81
  4190e8:	b	419090 <_obstack_memory_used@@Base+0x5d60>
  4190ec:	str	xzr, [sp, #96]
  4190f0:	b	41914c <_obstack_memory_used@@Base+0x5e1c>
  4190f4:	strb	w23, [x22, w2, sxtw]
  4190f8:	add	w20, w20, #0x1
  4190fc:	add	x19, x19, #0x1
  419100:	cmp	w20, #0x40
  419104:	b.eq	419138 <_obstack_memory_used@@Base+0x5e08>  // b.none
  419108:	mov	w2, w19
  41910c:	lsr	x0, x21, x20
  419110:	tbz	w0, #0, 4190f8 <_obstack_memory_used@@Base+0x5dc8>
  419114:	strb	w23, [x22, x19]
  419118:	cbz	w24, 4190f8 <_obstack_memory_used@@Base+0x5dc8>
  41911c:	add	w1, w19, #0x80
  419120:	cmp	w1, #0x17f
  419124:	b.hi	4190f4 <_obstack_memory_used@@Base+0x5dc4>  // b.pmore
  419128:	bl	402770 <__ctype_tolower_loc@plt>
  41912c:	ldr	x0, [x0]
  419130:	ldr	w2, [x0, x19, lsl #2]
  419134:	b	4190f4 <_obstack_memory_used@@Base+0x5dc4>
  419138:	ldr	x0, [sp, #96]
  41913c:	add	x0, x0, #0x8
  419140:	str	x0, [sp, #96]
  419144:	cmp	x0, #0x20
  419148:	b.eq	418fb4 <_obstack_memory_used@@Base+0x5c84>  // b.none
  41914c:	ldr	x0, [x26]
  419150:	ldr	x0, [x0, x27]
  419154:	ldr	x1, [sp, #96]
  419158:	ldr	x21, [x0, x1]
  41915c:	lsl	x19, x1, #3
  419160:	mov	w20, #0x0                   	// #0
  419164:	b	419108 <_obstack_memory_used@@Base+0x5dd8>
  419168:	ldr	x20, [x1, x27]
  41916c:	ldr	w0, [x26, #180]
  419170:	cmp	w0, #0x1
  419174:	b.le	41919c <_obstack_memory_used@@Base+0x5e6c>
  419178:	ldr	x0, [x20, #72]
  41917c:	cbnz	x0, 419190 <_obstack_memory_used@@Base+0x5e60>
  419180:	ldrb	w0, [x20, #32]
  419184:	tbnz	w0, #0, 419190 <_obstack_memory_used@@Base+0x5e60>
  419188:	ldr	x0, [x20, #64]
  41918c:	cbz	x0, 41919c <_obstack_memory_used@@Base+0x5e6c>
  419190:	strb	wzr, [sp, #120]
  419194:	mov	x19, #0x1                   	// #1
  419198:	b	4191c4 <_obstack_memory_used@@Base+0x5e94>
  41919c:	ldr	x0, [x20, #40]
  4191a0:	mov	x19, #0x0                   	// #0
  4191a4:	cmp	x0, #0x0
  4191a8:	b.gt	419200 <_obstack_memory_used@@Base+0x5ed0>
  4191ac:	b	418fb4 <_obstack_memory_used@@Base+0x5c84>
  4191b0:	ldrb	w0, [sp, #120]
  4191b4:	add	w0, w0, #0x1
  4191b8:	and	w0, w0, #0xff
  4191bc:	strb	w0, [sp, #120]
  4191c0:	cbz	w0, 418fb4 <_obstack_memory_used@@Base+0x5c84>
  4191c4:	str	xzr, [sp, #128]
  4191c8:	add	x3, sp, #0x80
  4191cc:	mov	x2, x19
  4191d0:	add	x1, sp, #0x78
  4191d4:	mov	x0, #0x0                   	// #0
  4191d8:	bl	412f3c <wcrtomb@plt+0x101fc>
  4191dc:	cmn	x0, #0x2
  4191e0:	b.ne	4191b0 <_obstack_memory_used@@Base+0x5e80>  // b.any
  4191e4:	ldrb	w0, [sp, #120]
  4191e8:	strb	w23, [x22, x0]
  4191ec:	b	4191b0 <_obstack_memory_used@@Base+0x5e80>
  4191f0:	add	x19, x19, #0x1
  4191f4:	ldr	x0, [x20, #40]
  4191f8:	cmp	x0, x19
  4191fc:	b.le	418fb4 <_obstack_memory_used@@Base+0x5c84>
  419200:	str	xzr, [sp, #120]
  419204:	lsl	x27, x19, #2
  419208:	ldr	x0, [x20]
  41920c:	add	x2, sp, #0x78
  419210:	ldr	w1, [x0, x19, lsl #2]
  419214:	add	x0, sp, #0x80
  419218:	bl	402d40 <wcrtomb@plt>
  41921c:	cmn	x0, #0x1
  419220:	b.eq	419240 <_obstack_memory_used@@Base+0x5f10>  // b.none
  419224:	ldrb	w21, [sp, #128]
  419228:	strb	w23, [x22, x21]
  41922c:	cbz	w24, 419240 <_obstack_memory_used@@Base+0x5f10>
  419230:	bl	402770 <__ctype_tolower_loc@plt>
  419234:	ldr	x0, [x0]
  419238:	ldrsw	x0, [x0, x21, lsl #2]
  41923c:	strb	w23, [x22, x0]
  419240:	ldr	x0, [sp, #104]
  419244:	ldr	x0, [x0, #24]
  419248:	tbz	w0, #22, 4191f0 <_obstack_memory_used@@Base+0x5ec0>
  41924c:	ldr	w0, [x26, #180]
  419250:	cmp	w0, #0x1
  419254:	b.le	4191f0 <_obstack_memory_used@@Base+0x5ec0>
  419258:	ldr	x0, [x20]
  41925c:	ldr	w0, [x0, x27]
  419260:	bl	402cf0 <towlower@plt>
  419264:	add	x2, sp, #0x78
  419268:	mov	w1, w0
  41926c:	add	x0, sp, #0x80
  419270:	bl	402d40 <wcrtomb@plt>
  419274:	cmn	x0, #0x1
  419278:	b.eq	4191f0 <_obstack_memory_used@@Base+0x5ec0>  // b.none
  41927c:	ldrb	w0, [sp, #128]
  419280:	strb	w23, [x22, x0]
  419284:	b	4191f0 <_obstack_memory_used@@Base+0x5ec0>
  419288:	ldr	x1, [sp, #104]
  41928c:	ldrb	w0, [x1, #56]
  419290:	orr	w0, w0, #0x1
  419294:	strb	w0, [x1, #56]
  419298:	ldp	x19, x20, [sp, #16]
  41929c:	b	4192a4 <_obstack_memory_used@@Base+0x5f74>
  4192a0:	ldp	x19, x20, [sp, #16]
  4192a4:	ldp	x21, x22, [sp, #32]
  4192a8:	ldp	x23, x24, [sp, #48]
  4192ac:	ldp	x25, x26, [sp, #64]
  4192b0:	ldp	x27, x28, [sp, #80]
  4192b4:	ldp	x29, x30, [sp], #384
  4192b8:	ret
  4192bc:	stp	x29, x30, [sp, #-288]!
  4192c0:	mov	x29, sp
  4192c4:	stp	x23, x24, [sp, #48]
  4192c8:	stp	x27, x28, [sp, #80]
  4192cc:	mov	x24, x0
  4192d0:	mov	x28, x1
  4192d4:	mov	x0, #0x3800                	// #14336
  4192d8:	bl	402800 <malloc@plt>
  4192dc:	str	x0, [sp, #112]
  4192e0:	cbz	x0, 419c4c <_obstack_memory_used@@Base+0x691c>
  4192e4:	stp	x19, x20, [sp, #16]
  4192e8:	str	x0, [sp, #120]
  4192ec:	add	x0, x0, #0x1, lsl #12
  4192f0:	add	x0, x0, #0x800
  4192f4:	str	x0, [sp, #96]
  4192f8:	str	xzr, [x28, #88]
  4192fc:	str	xzr, [x28, #96]
  419300:	stp	xzr, xzr, [sp, #128]
  419304:	stp	xzr, xzr, [sp, #144]
  419308:	ldr	x0, [x28, #16]
  41930c:	cmp	x0, #0x0
  419310:	b.le	419c60 <_obstack_memory_used@@Base+0x6930>
  419314:	stp	x21, x22, [sp, #32]
  419318:	stp	x25, x26, [sp, #64]
  41931c:	mov	x19, #0x0                   	// #0
  419320:	mov	x27, #0x0                   	// #0
  419324:	b	4196c4 <_obstack_memory_used@@Base+0x6394>
  419328:	ldrb	w2, [x2, x1]
  41932c:	add	x3, sp, #0x80
  419330:	ubfx	x4, x2, #6, #2
  419334:	mov	x1, #0x1                   	// #1
  419338:	lsl	x2, x1, x2
  41933c:	ldr	x1, [x3, x4, lsl #3]
  419340:	orr	x1, x1, x2
  419344:	str	x1, [x3, x4, lsl #3]
  419348:	cbz	w0, 419404 <_obstack_memory_used@@Base+0x60d4>
  41934c:	tbnz	w0, #5, 4194bc <_obstack_memory_used@@Base+0x618c>
  419350:	tbnz	w0, #7, 4194d8 <_obstack_memory_used@@Base+0x61a8>
  419354:	tbz	w0, #2, 4193ac <_obstack_memory_used@@Base+0x607c>
  419358:	cmp	w25, #0x1
  41935c:	b.eq	4194e4 <_obstack_memory_used@@Base+0x61b4>  // b.none
  419360:	ldr	w1, [x24, #180]
  419364:	cmp	w1, #0x1
  419368:	b.le	4194f8 <_obstack_memory_used@@Base+0x61c8>
  41936c:	ldr	x7, [x24, #120]
  419370:	add	x4, sp, #0x80
  419374:	mov	x3, #0x0                   	// #0
  419378:	mov	x2, #0x0                   	// #0
  41937c:	add	x6, x24, #0xb8
  419380:	ldr	x1, [x7, x2, lsl #3]
  419384:	ldr	x5, [x6, x2, lsl #3]
  419388:	orn	x1, x5, x1
  41938c:	ldr	x5, [x4]
  419390:	and	x1, x1, x5
  419394:	str	x1, [x4], #8
  419398:	orr	x3, x3, x1
  41939c:	add	x2, x2, #0x1
  4193a0:	cmp	x2, #0x4
  4193a4:	b.ne	419380 <_obstack_memory_used@@Base+0x6050>  // b.any
  4193a8:	cbz	x3, 4196b4 <_obstack_memory_used@@Base+0x6384>
  4193ac:	tbz	w0, #3, 419404 <_obstack_memory_used@@Base+0x60d4>
  4193b0:	cmp	w25, #0x1
  4193b4:	b.eq	41952c <_obstack_memory_used@@Base+0x61fc>  // b.none
  4193b8:	ldr	w0, [x24, #180]
  4193bc:	cmp	w0, #0x1
  4193c0:	b.le	419540 <_obstack_memory_used@@Base+0x6210>
  4193c4:	ldr	x6, [x24, #120]
  4193c8:	add	x3, sp, #0x80
  4193cc:	mov	x2, #0x0                   	// #0
  4193d0:	mov	x1, #0x0                   	// #0
  4193d4:	add	x5, x24, #0xb8
  4193d8:	ldr	x0, [x5, x1, lsl #3]
  4193dc:	ldr	x4, [x6, x1, lsl #3]
  4193e0:	and	x0, x0, x4
  4193e4:	ldr	x4, [x3]
  4193e8:	bic	x0, x4, x0
  4193ec:	str	x0, [x3], #8
  4193f0:	orr	x2, x2, x0
  4193f4:	add	x1, x1, #0x1
  4193f8:	cmp	x1, #0x4
  4193fc:	b.ne	4193d8 <_obstack_memory_used@@Base+0x60a8>  // b.any
  419400:	cbz	x2, 4196b4 <_obstack_memory_used@@Base+0x6384>
  419404:	cmp	x19, #0x0
  419408:	b.le	41973c <_obstack_memory_used@@Base+0x640c>
  41940c:	ldr	x23, [sp, #112]
  419410:	add	x21, x23, #0x1, lsl #12
  419414:	add	x21, x21, #0x7f8
  419418:	mov	x20, #0x0                   	// #0
  41941c:	b	4195cc <_obstack_memory_used@@Base+0x629c>
  419420:	ldr	x5, [x2, x1]
  419424:	add	x3, sp, #0x80
  419428:	mov	x1, #0x0                   	// #0
  41942c:	ldr	x2, [x3]
  419430:	ldr	x4, [x5, x1]
  419434:	orr	x2, x2, x4
  419438:	str	x2, [x3], #8
  41943c:	add	x1, x1, #0x8
  419440:	cmp	x1, #0x20
  419444:	b.ne	41942c <_obstack_memory_used@@Base+0x60fc>  // b.any
  419448:	b	419348 <_obstack_memory_used@@Base+0x6018>
  41944c:	ldr	w1, [x24, #180]
  419450:	cmp	w1, #0x1
  419454:	b.le	419484 <_obstack_memory_used@@Base+0x6154>
  419458:	ldr	x5, [x24, #120]
  41945c:	add	x3, sp, #0x80
  419460:	mov	x1, #0x0                   	// #0
  419464:	ldr	x2, [x3]
  419468:	ldr	x4, [x5, x1]
  41946c:	orr	x2, x2, x4
  419470:	str	x2, [x3], #8
  419474:	add	x1, x1, #0x8
  419478:	cmp	x1, #0x20
  41947c:	b.ne	419464 <_obstack_memory_used@@Base+0x6134>  // b.any
  419480:	b	419494 <_obstack_memory_used@@Base+0x6164>
  419484:	mov	x2, #0xffffffffffffffff    	// #-1
  419488:	mov	x3, #0xffffffffffffffff    	// #-1
  41948c:	stp	x2, x3, [sp, #128]
  419490:	stp	x2, x3, [sp, #144]
  419494:	ldr	x1, [x24, #216]
  419498:	tbnz	w1, #6, 4194a8 <_obstack_memory_used@@Base+0x6178>
  41949c:	ldr	x2, [sp, #128]
  4194a0:	and	x2, x2, #0xfffffffffffffbff
  4194a4:	str	x2, [sp, #128]
  4194a8:	tbz	w1, #7, 419348 <_obstack_memory_used@@Base+0x6018>
  4194ac:	ldr	x1, [sp, #128]
  4194b0:	and	x1, x1, #0xfffffffffffffffe
  4194b4:	str	x1, [sp, #128]
  4194b8:	b	419348 <_obstack_memory_used@@Base+0x6018>
  4194bc:	ldr	x1, [sp, #128]
  4194c0:	stp	xzr, xzr, [sp, #128]
  4194c4:	stp	xzr, xzr, [sp, #144]
  4194c8:	tbz	w1, #10, 4196b4 <_obstack_memory_used@@Base+0x6384>
  4194cc:	mov	x1, #0x400                 	// #1024
  4194d0:	str	x1, [sp, #128]
  4194d4:	b	419350 <_obstack_memory_used@@Base+0x6020>
  4194d8:	stp	xzr, xzr, [sp, #128]
  4194dc:	stp	xzr, xzr, [sp, #144]
  4194e0:	b	4196b4 <_obstack_memory_used@@Base+0x6384>
  4194e4:	ldrb	w1, [x26, #10]
  4194e8:	tbnz	w1, #6, 419360 <_obstack_memory_used@@Base+0x6030>
  4194ec:	stp	xzr, xzr, [sp, #128]
  4194f0:	stp	xzr, xzr, [sp, #144]
  4194f4:	b	4196b4 <_obstack_memory_used@@Base+0x6384>
  4194f8:	add	x4, sp, #0x80
  4194fc:	mov	x3, #0x0                   	// #0
  419500:	mov	x2, #0x0                   	// #0
  419504:	add	x6, x24, #0xb8
  419508:	ldr	x1, [x6, x2, lsl #3]
  41950c:	ldr	x5, [x4]
  419510:	and	x1, x1, x5
  419514:	str	x1, [x4], #8
  419518:	orr	x3, x3, x1
  41951c:	add	x2, x2, #0x1
  419520:	cmp	x2, #0x4
  419524:	b.ne	419508 <_obstack_memory_used@@Base+0x61d8>  // b.any
  419528:	b	4193a8 <_obstack_memory_used@@Base+0x6078>
  41952c:	ldrb	w0, [x26, #10]
  419530:	tbz	w0, #6, 4193b8 <_obstack_memory_used@@Base+0x6088>
  419534:	stp	xzr, xzr, [sp, #128]
  419538:	stp	xzr, xzr, [sp, #144]
  41953c:	b	4196b4 <_obstack_memory_used@@Base+0x6384>
  419540:	add	x3, sp, #0x80
  419544:	mov	x2, #0x0                   	// #0
  419548:	mov	x1, #0x0                   	// #0
  41954c:	add	x5, x24, #0xb8
  419550:	ldr	x0, [x5, x1, lsl #3]
  419554:	ldr	x4, [x3]
  419558:	bic	x0, x4, x0
  41955c:	str	x0, [x3], #8
  419560:	orr	x2, x2, x0
  419564:	add	x1, x1, #0x1
  419568:	cmp	x1, #0x4
  41956c:	b.ne	419550 <_obstack_memory_used@@Base+0x6220>  // b.any
  419570:	b	419400 <_obstack_memory_used@@Base+0x60d0>
  419574:	mov	x0, #0x1                   	// #1
  419578:	mov	x3, #0x0                   	// #0
  41957c:	mov	x6, x21
  419580:	lsl	x2, x0, #3
  419584:	add	x1, sp, #0x80
  419588:	add	x1, x2, x1
  41958c:	ldur	x1, [x1, #-8]
  419590:	ldr	x4, [x21, x0, lsl #3]
  419594:	and	x1, x1, x4
  419598:	add	x4, sp, #0xa0
  41959c:	add	x2, x2, x4
  4195a0:	stur	x1, [x2, #-8]
  4195a4:	orr	x3, x3, x1
  4195a8:	add	x0, x0, #0x1
  4195ac:	cmp	x0, #0x5
  4195b0:	b.ne	419580 <_obstack_memory_used@@Base+0x6250>  // b.any
  4195b4:	cbnz	x3, 419600 <_obstack_memory_used@@Base+0x62d0>
  4195b8:	add	x20, x20, #0x1
  4195bc:	add	x21, x21, #0x20
  4195c0:	add	x23, x23, #0x18
  4195c4:	cmp	x20, x19
  4195c8:	b.ge	4196ac <_obstack_memory_used@@Base+0x637c>  // b.tcont
  4195cc:	cmp	w25, #0x1
  4195d0:	b.ne	419574 <_obstack_memory_used@@Base+0x6244>  // b.any
  4195d4:	ldrb	w2, [x26]
  4195d8:	ubfx	x0, x2, #6, #2
  4195dc:	lsl	x1, x20, #5
  4195e0:	add	x0, x1, x0, lsl #3
  4195e4:	ldr	x1, [sp, #96]
  4195e8:	ldr	x1, [x1, x0]
  4195ec:	lsr	x1, x1, x2
  4195f0:	and	x0, x1, #0x1
  4195f4:	mov	x3, #0x0                   	// #0
  4195f8:	tbz	w1, #0, 4195b8 <_obstack_memory_used@@Base+0x6288>
  4195fc:	b	41957c <_obstack_memory_used@@Base+0x624c>
  419600:	add	x2, sp, #0x80
  419604:	mov	x1, #0x1                   	// #1
  419608:	mov	x22, #0x0                   	// #0
  41960c:	mov	x5, #0x0                   	// #0
  419610:	ldr	x3, [x2]
  419614:	ldr	x0, [x6, x1, lsl #3]
  419618:	bic	x4, x0, x3
  41961c:	add	x7, sp, #0xc0
  419620:	add	x7, x7, x1, lsl #3
  419624:	stur	x4, [x7, #-8]
  419628:	orr	x5, x5, x4
  41962c:	bic	x0, x3, x0
  419630:	str	x0, [x2], #8
  419634:	orr	x22, x22, x0
  419638:	add	x1, x1, #0x1
  41963c:	cmp	x1, #0x5
  419640:	b.ne	419610 <_obstack_memory_used@@Base+0x62e0>  // b.any
  419644:	cbz	x5, 41968c <_obstack_memory_used@@Base+0x635c>
  419648:	ldr	x0, [sp, #96]
  41964c:	add	x0, x0, x19, lsl #5
  419650:	ldp	x2, x3, [sp, #192]
  419654:	stp	x2, x3, [x0]
  419658:	ldp	x2, x3, [sp, #208]
  41965c:	stp	x2, x3, [x0, #16]
  419660:	ldp	x0, x1, [sp, #160]
  419664:	stp	x0, x1, [x6, #8]
  419668:	ldp	x0, x1, [sp, #176]
  41966c:	stp	x0, x1, [x6, #24]
  419670:	add	x0, x19, x19, lsl #1
  419674:	mov	x1, x23
  419678:	ldr	x2, [sp, #120]
  41967c:	add	x0, x2, x0, lsl #3
  419680:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  419684:	cbnz	w0, 41978c <_obstack_memory_used@@Base+0x645c>
  419688:	add	x19, x19, #0x1
  41968c:	ldr	x0, [x28, #24]
  419690:	ldr	x1, [sp, #104]
  419694:	ldr	x1, [x0, x1]
  419698:	mov	x0, x23
  41969c:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  4196a0:	and	w0, w0, #0xff
  4196a4:	cbz	w0, 41978c <_obstack_memory_used@@Base+0x645c>
  4196a8:	cbnz	x22, 4195b8 <_obstack_memory_used@@Base+0x6288>
  4196ac:	cmp	x19, x20
  4196b0:	b.eq	419744 <_obstack_memory_used@@Base+0x6414>  // b.none
  4196b4:	add	x27, x27, #0x1
  4196b8:	ldr	x0, [x28, #16]
  4196bc:	cmp	x27, x0
  4196c0:	b.ge	4197d4 <_obstack_memory_used@@Base+0x64a4>  // b.tcont
  4196c4:	lsl	x0, x27, #3
  4196c8:	str	x0, [sp, #104]
  4196cc:	ldr	x0, [x28, #24]
  4196d0:	ldr	x1, [x0, x27, lsl #3]
  4196d4:	lsl	x1, x1, #4
  4196d8:	ldr	x2, [x24]
  4196dc:	add	x26, x2, x1
  4196e0:	ldrb	w25, [x26, #8]
  4196e4:	ldr	w0, [x26, #8]
  4196e8:	ubfx	x0, x0, #8, #10
  4196ec:	cmp	w25, #0x1
  4196f0:	b.eq	419328 <_obstack_memory_used@@Base+0x5ff8>  // b.none
  4196f4:	cmp	w25, #0x3
  4196f8:	b.eq	419420 <_obstack_memory_used@@Base+0x60f0>  // b.none
  4196fc:	cmp	w25, #0x5
  419700:	b.eq	41944c <_obstack_memory_used@@Base+0x611c>  // b.none
  419704:	cmp	w25, #0x7
  419708:	b.ne	4196b4 <_obstack_memory_used@@Base+0x6384>  // b.any
  41970c:	mov	x2, #0xffffffffffffffff    	// #-1
  419710:	mov	x3, #0xffffffffffffffff    	// #-1
  419714:	stp	x2, x3, [sp, #128]
  419718:	ldr	x1, [x24, #216]
  41971c:	tbnz	w1, #6, 419728 <_obstack_memory_used@@Base+0x63f8>
  419720:	mov	x2, #0xfffffffffffffbff    	// #-1025
  419724:	str	x2, [sp, #128]
  419728:	tbz	w1, #7, 419348 <_obstack_memory_used@@Base+0x6018>
  41972c:	ldr	x1, [sp, #128]
  419730:	and	x1, x1, #0xfffffffffffffffe
  419734:	str	x1, [sp, #128]
  419738:	b	419348 <_obstack_memory_used@@Base+0x6018>
  41973c:	mov	x20, #0x0                   	// #0
  419740:	b	4196ac <_obstack_memory_used@@Base+0x637c>
  419744:	ldr	x0, [sp, #96]
  419748:	add	x0, x0, x19, lsl #5
  41974c:	ldp	x2, x3, [sp, #128]
  419750:	stp	x2, x3, [x0]
  419754:	ldp	x2, x3, [sp, #144]
  419758:	stp	x2, x3, [x0, #16]
  41975c:	ldr	x1, [x28, #24]
  419760:	add	x0, x19, x19, lsl #1
  419764:	ldr	x2, [sp, #104]
  419768:	ldr	x1, [x1, x2]
  41976c:	ldr	x2, [sp, #120]
  419770:	add	x0, x2, x0, lsl #3
  419774:	bl	41441c <_obstack_memory_used@@Base+0x10ec>
  419778:	cbnz	w0, 41978c <_obstack_memory_used@@Base+0x645c>
  41977c:	add	x19, x19, #0x1
  419780:	stp	xzr, xzr, [sp, #128]
  419784:	stp	xzr, xzr, [sp, #144]
  419788:	b	4196b4 <_obstack_memory_used@@Base+0x6384>
  41978c:	cmp	x19, #0x0
  419790:	b.le	4197b8 <_obstack_memory_used@@Base+0x6488>
  419794:	ldr	x0, [sp, #112]
  419798:	mov	x20, x0
  41979c:	add	x19, x19, x19, lsl #1
  4197a0:	add	x19, x0, x19, lsl #3
  4197a4:	ldr	x0, [x20, #16]
  4197a8:	bl	402ae0 <free@plt>
  4197ac:	add	x20, x20, #0x18
  4197b0:	cmp	x20, x19
  4197b4:	b.ne	4197a4 <_obstack_memory_used@@Base+0x6474>  // b.any
  4197b8:	ldr	x0, [sp, #112]
  4197bc:	bl	402ae0 <free@plt>
  4197c0:	mov	w0, #0x0                   	// #0
  4197c4:	ldp	x19, x20, [sp, #16]
  4197c8:	ldp	x21, x22, [sp, #32]
  4197cc:	ldp	x25, x26, [sp, #64]
  4197d0:	b	41990c <_obstack_memory_used@@Base+0x65dc>
  4197d4:	cmp	x19, #0x0
  4197d8:	b.le	419848 <_obstack_memory_used@@Base+0x6518>
  4197dc:	add	x1, x19, #0x1
  4197e0:	add	x0, sp, #0x100
  4197e4:	bl	4146ac <_obstack_memory_used@@Base+0x137c>
  4197e8:	str	w0, [sp, #284]
  4197ec:	cbnz	w0, 4198c8 <_obstack_memory_used@@Base+0x6598>
  4197f0:	mov	x0, #0xa855                	// #43093
  4197f4:	movk	x0, #0xaaaa, lsl #16
  4197f8:	movk	x0, #0xaaaa, lsl #32
  4197fc:	movk	x0, #0xaaa, lsl #48
  419800:	cmp	x19, x0
  419804:	b.hi	4198c8 <_obstack_memory_used@@Base+0x6598>  // b.pmore
  419808:	add	x0, x19, x19, lsl #1
  41980c:	lsl	x0, x0, #3
  419810:	str	x0, [sp, #120]
  419814:	bl	402800 <malloc@plt>
  419818:	mov	x22, x0
  41981c:	cbz	x0, 4198c8 <_obstack_memory_used@@Base+0x6598>
  419820:	lsl	x27, x19, #3
  419824:	add	x26, x0, x27
  419828:	add	x27, x26, x27
  41982c:	stp	xzr, xzr, [sp, #224]
  419830:	stp	xzr, xzr, [sp, #240]
  419834:	ldr	x0, [sp, #112]
  419838:	add	x23, x0, #0x8
  41983c:	str	wzr, [sp, #104]
  419840:	mov	x25, #0x0                   	// #0
  419844:	b	419990 <_obstack_memory_used@@Base+0x6660>
  419848:	ldp	x21, x22, [sp, #32]
  41984c:	ldp	x25, x26, [sp, #64]
  419850:	ldr	x0, [sp, #112]
  419854:	bl	402ae0 <free@plt>
  419858:	cbnz	x19, 419c54 <_obstack_memory_used@@Base+0x6924>
  41985c:	mov	x1, #0x100                 	// #256
  419860:	mov	x0, #0x8                   	// #8
  419864:	bl	402910 <calloc@plt>
  419868:	str	x0, [x28, #88]
  41986c:	cmp	x0, #0x0
  419870:	cset	w0, ne  // ne = any
  419874:	ldp	x19, x20, [sp, #16]
  419878:	b	41990c <_obstack_memory_used@@Base+0x65dc>
  41987c:	add	x20, x20, #0x1
  419880:	ldr	x0, [x21]
  419884:	cmp	x0, x20
  419888:	b.le	41991c <_obstack_memory_used@@Base+0x65ec>
  41988c:	ldr	x0, [x21, #8]
  419890:	ldr	x1, [x0, x20, lsl #3]
  419894:	ldr	x0, [x24, #24]
  419898:	ldr	x1, [x0, x1, lsl #3]
  41989c:	cmn	x1, #0x1
  4198a0:	b.eq	41987c <_obstack_memory_used@@Base+0x654c>  // b.none
  4198a4:	add	x1, x1, x1, lsl #1
  4198a8:	ldr	x0, [x24, #48]
  4198ac:	add	x1, x0, x1, lsl #3
  4198b0:	add	x0, sp, #0x100
  4198b4:	bl	414a6c <_obstack_memory_used@@Base+0x173c>
  4198b8:	str	w0, [sp, #284]
  4198bc:	cbz	w0, 41987c <_obstack_memory_used@@Base+0x654c>
  4198c0:	mov	x0, x22
  4198c4:	bl	402ae0 <free@plt>
  4198c8:	ldr	x0, [sp, #272]
  4198cc:	bl	402ae0 <free@plt>
  4198d0:	ldr	x0, [sp, #112]
  4198d4:	mov	x20, x0
  4198d8:	add	x19, x19, x19, lsl #1
  4198dc:	add	x19, x0, x19, lsl #3
  4198e0:	ldr	x0, [x20, #16]
  4198e4:	bl	402ae0 <free@plt>
  4198e8:	add	x20, x20, #0x18
  4198ec:	cmp	x20, x19
  4198f0:	b.ne	4198e0 <_obstack_memory_used@@Base+0x65b0>  // b.any
  4198f4:	ldr	x0, [sp, #112]
  4198f8:	bl	402ae0 <free@plt>
  4198fc:	mov	w0, #0x0                   	// #0
  419900:	ldp	x19, x20, [sp, #16]
  419904:	ldp	x21, x22, [sp, #32]
  419908:	ldp	x25, x26, [sp, #64]
  41990c:	ldp	x23, x24, [sp, #48]
  419910:	ldp	x27, x28, [sp, #80]
  419914:	ldp	x29, x30, [sp], #288
  419918:	ret
  41991c:	mov	w3, #0x0                   	// #0
  419920:	add	x2, sp, #0x100
  419924:	mov	x1, x24
  419928:	add	x0, sp, #0x11c
  41992c:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  419930:	mov	x20, x25
  419934:	str	x0, [x22, x25, lsl #3]
  419938:	cbz	x0, 4199ac <_obstack_memory_used@@Base+0x667c>
  41993c:	ldrsb	w1, [x0, #104]
  419940:	tbnz	w1, #31, 4199b8 <_obstack_memory_used@@Base+0x6688>
  419944:	str	x0, [x26, x20, lsl #3]
  419948:	str	x0, [x27, x20, lsl #3]
  41994c:	add	x21, sp, #0xe0
  419950:	ldr	x0, [sp, #112]
  419954:	str	x0, [sp, #96]
  419958:	add	x20, x0, x20, lsl #5
  41995c:	add	x3, x21, #0x20
  419960:	mov	x0, x21
  419964:	ldr	x1, [x0]
  419968:	ldr	x2, [x20, #6144]
  41996c:	orr	x1, x1, x2
  419970:	str	x1, [x0], #8
  419974:	add	x20, x20, #0x8
  419978:	cmp	x0, x3
  41997c:	b.ne	419964 <_obstack_memory_used@@Base+0x6634>  // b.any
  419980:	add	x25, x25, #0x1
  419984:	add	x23, x23, #0x18
  419988:	cmp	x25, x19
  41998c:	b.eq	419a28 <_obstack_memory_used@@Base+0x66f8>  // b.none
  419990:	str	xzr, [sp, #264]
  419994:	mov	x21, x23
  419998:	ldr	x0, [x23]
  41999c:	cmp	x0, #0x0
  4199a0:	b.le	41991c <_obstack_memory_used@@Base+0x65ec>
  4199a4:	mov	x20, #0x0                   	// #0
  4199a8:	b	41988c <_obstack_memory_used@@Base+0x655c>
  4199ac:	ldr	w1, [sp, #284]
  4199b0:	cbz	w1, 41993c <_obstack_memory_used@@Base+0x660c>
  4199b4:	b	4198c0 <_obstack_memory_used@@Base+0x6590>
  4199b8:	mov	w3, #0x1                   	// #1
  4199bc:	add	x2, sp, #0x100
  4199c0:	mov	x1, x24
  4199c4:	add	x0, sp, #0x11c
  4199c8:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  4199cc:	str	x0, [x26, x20, lsl #3]
  4199d0:	cbz	x0, 419a1c <_obstack_memory_used@@Base+0x66ec>
  4199d4:	ldr	x1, [x22, x20, lsl #3]
  4199d8:	cmp	x0, x1
  4199dc:	b.eq	4199f4 <_obstack_memory_used@@Base+0x66c4>  // b.none
  4199e0:	ldr	w0, [x24, #180]
  4199e4:	cmp	w0, #0x2
  4199e8:	ldr	w0, [sp, #104]
  4199ec:	csinc	w0, w0, wzr, lt  // lt = tstop
  4199f0:	str	w0, [sp, #104]
  4199f4:	mov	w3, #0x2                   	// #2
  4199f8:	add	x2, sp, #0x100
  4199fc:	mov	x1, x24
  419a00:	add	x0, sp, #0x11c
  419a04:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  419a08:	str	x0, [x27, x20, lsl #3]
  419a0c:	cbnz	x0, 41994c <_obstack_memory_used@@Base+0x661c>
  419a10:	ldr	w0, [sp, #284]
  419a14:	cbz	w0, 41994c <_obstack_memory_used@@Base+0x661c>
  419a18:	b	4198c0 <_obstack_memory_used@@Base+0x6590>
  419a1c:	ldr	w1, [sp, #284]
  419a20:	cbz	w1, 4199d4 <_obstack_memory_used@@Base+0x66a4>
  419a24:	b	4198c0 <_obstack_memory_used@@Base+0x6590>
  419a28:	ldr	w0, [sp, #104]
  419a2c:	cbnz	w0, 419b78 <_obstack_memory_used@@Base+0x6848>
  419a30:	mov	x1, #0x100                 	// #256
  419a34:	mov	x0, #0x8                   	// #8
  419a38:	bl	402910 <calloc@plt>
  419a3c:	mov	x9, x0
  419a40:	str	x0, [x28, #88]
  419a44:	cbz	x0, 4198c0 <_obstack_memory_used@@Base+0x6590>
  419a48:	ldr	x0, [sp, #112]
  419a4c:	add	x8, x0, #0x1, lsl #12
  419a50:	add	x8, x8, #0x800
  419a54:	mov	x7, #0x0                   	// #0
  419a58:	add	x24, x24, #0xb8
  419a5c:	mov	x11, #0x0                   	// #0
  419a60:	ldr	x0, [x21]
  419a64:	cbz	x0, 419a88 <_obstack_memory_used@@Base+0x6758>
  419a68:	mov	x10, x7
  419a6c:	add	x3, x9, x7, lsl #9
  419a70:	mov	x2, #0x1                   	// #1
  419a74:	tbnz	w0, #0, 419b20 <_obstack_memory_used@@Base+0x67f0>
  419a78:	lsl	x2, x2, #1
  419a7c:	lsr	x0, x0, #1
  419a80:	add	x3, x3, #0x8
  419a84:	cbnz	x0, 419a74 <_obstack_memory_used@@Base+0x6744>
  419a88:	add	x7, x7, #0x1
  419a8c:	add	x21, x21, #0x8
  419a90:	add	x8, x8, #0x8
  419a94:	cmp	x7, #0x4
  419a98:	b.ne	419a60 <_obstack_memory_used@@Base+0x6730>  // b.any
  419a9c:	ldr	x0, [sp, #224]
  419aa0:	tbz	w0, #10, 419acc <_obstack_memory_used@@Base+0x679c>
  419aa4:	mov	x0, #0x0                   	// #0
  419aa8:	ldr	x1, [sp, #112]
  419aac:	add	x3, x1, #0x1, lsl #12
  419ab0:	add	x3, x3, #0x800
  419ab4:	lsl	x1, x0, #5
  419ab8:	ldr	x1, [x3, x1]
  419abc:	tbnz	w1, #10, 419c34 <_obstack_memory_used@@Base+0x6904>
  419ac0:	add	x0, x0, #0x1
  419ac4:	cmp	x0, x19
  419ac8:	b.ne	419ab4 <_obstack_memory_used@@Base+0x6784>  // b.any
  419acc:	mov	x0, x22
  419ad0:	bl	402ae0 <free@plt>
  419ad4:	ldr	x0, [sp, #272]
  419ad8:	bl	402ae0 <free@plt>
  419adc:	ldr	x0, [sp, #120]
  419ae0:	ldr	x1, [sp, #96]
  419ae4:	add	x19, x0, x1
  419ae8:	ldr	x20, [sp, #96]
  419aec:	ldr	x0, [x20, #16]
  419af0:	bl	402ae0 <free@plt>
  419af4:	add	x0, x20, #0x18
  419af8:	str	x0, [sp, #96]
  419afc:	cmp	x19, x0
  419b00:	b.ne	419ae8 <_obstack_memory_used@@Base+0x67b8>  // b.any
  419b04:	ldr	x0, [sp, #112]
  419b08:	bl	402ae0 <free@plt>
  419b0c:	mov	w0, #0x1                   	// #1
  419b10:	ldp	x19, x20, [sp, #16]
  419b14:	ldp	x21, x22, [sp, #32]
  419b18:	ldp	x25, x26, [sp, #64]
  419b1c:	b	41990c <_obstack_memory_used@@Base+0x65dc>
  419b20:	mov	x6, x8
  419b24:	ldr	x1, [x8]
  419b28:	tst	x2, x1
  419b2c:	b.ne	419b64 <_obstack_memory_used@@Base+0x6834>  // b.any
  419b30:	mov	x1, #0x0                   	// #0
  419b34:	add	x1, x1, #0x1
  419b38:	mov	x5, x1
  419b3c:	lsl	x4, x1, #5
  419b40:	ldr	x4, [x6, x4]
  419b44:	tst	x2, x4
  419b48:	b.eq	419b34 <_obstack_memory_used@@Base+0x6804>  // b.none
  419b4c:	ldr	x1, [x24, x10, lsl #3]
  419b50:	tst	x2, x1
  419b54:	b.eq	419b6c <_obstack_memory_used@@Base+0x683c>  // b.none
  419b58:	ldr	x1, [x26, x5, lsl #3]
  419b5c:	str	x1, [x3]
  419b60:	b	419a78 <_obstack_memory_used@@Base+0x6748>
  419b64:	mov	x5, x11
  419b68:	b	419b4c <_obstack_memory_used@@Base+0x681c>
  419b6c:	ldr	x1, [x22, x5, lsl #3]
  419b70:	str	x1, [x3]
  419b74:	b	419a78 <_obstack_memory_used@@Base+0x6748>
  419b78:	mov	x1, #0x200                 	// #512
  419b7c:	mov	x0, #0x8                   	// #8
  419b80:	bl	402910 <calloc@plt>
  419b84:	mov	x9, x0
  419b88:	str	x0, [x28, #96]
  419b8c:	cbz	x0, 4198c0 <_obstack_memory_used@@Base+0x6590>
  419b90:	add	x10, x0, #0x800
  419b94:	ldr	x0, [sp, #112]
  419b98:	add	x7, x0, #0x1, lsl #12
  419b9c:	add	x7, x7, #0x800
  419ba0:	mov	w8, #0x0                   	// #0
  419ba4:	mov	x11, #0x0                   	// #0
  419ba8:	ldr	x0, [x21]
  419bac:	cbz	x0, 419bcc <_obstack_memory_used@@Base+0x689c>
  419bb0:	mov	x3, x10
  419bb4:	mov	x2, #0x1                   	// #1
  419bb8:	tbnz	w0, #0, 419be8 <_obstack_memory_used@@Base+0x68b8>
  419bbc:	lsl	x2, x2, #1
  419bc0:	lsr	x0, x0, #1
  419bc4:	add	x3, x3, #0x8
  419bc8:	cbnz	x0, 419bb8 <_obstack_memory_used@@Base+0x6888>
  419bcc:	add	x21, x21, #0x8
  419bd0:	add	w8, w8, #0x40
  419bd4:	add	x10, x10, #0x200
  419bd8:	add	x7, x7, #0x8
  419bdc:	cmp	w8, #0x100
  419be0:	b.ne	419ba8 <_obstack_memory_used@@Base+0x6878>  // b.any
  419be4:	b	419a9c <_obstack_memory_used@@Base+0x676c>
  419be8:	mov	x6, x7
  419bec:	ldr	x1, [x7]
  419bf0:	tst	x2, x1
  419bf4:	b.ne	419c2c <_obstack_memory_used@@Base+0x68fc>  // b.any
  419bf8:	mov	x1, #0x0                   	// #0
  419bfc:	add	x1, x1, #0x1
  419c00:	mov	x5, x1
  419c04:	lsl	x4, x1, #5
  419c08:	ldr	x4, [x6, x4]
  419c0c:	tst	x2, x4
  419c10:	b.eq	419bfc <_obstack_memory_used@@Base+0x68cc>  // b.none
  419c14:	sub	x1, x3, #0x8, lsl #12
  419c18:	ldr	x4, [x22, x5, lsl #3]
  419c1c:	str	x4, [x1, #30720]
  419c20:	ldr	x1, [x26, x5, lsl #3]
  419c24:	str	x1, [x3]
  419c28:	b	419bbc <_obstack_memory_used@@Base+0x688c>
  419c2c:	mov	x5, x11
  419c30:	b	419c14 <_obstack_memory_used@@Base+0x68e4>
  419c34:	ldr	x0, [x27, x0, lsl #3]
  419c38:	str	x0, [x9, #80]
  419c3c:	ldr	w1, [sp, #104]
  419c40:	cbz	w1, 419acc <_obstack_memory_used@@Base+0x679c>
  419c44:	str	x0, [x9, #2128]
  419c48:	b	419acc <_obstack_memory_used@@Base+0x679c>
  419c4c:	mov	w0, #0x0                   	// #0
  419c50:	b	41990c <_obstack_memory_used@@Base+0x65dc>
  419c54:	mov	w0, #0x0                   	// #0
  419c58:	ldp	x19, x20, [sp, #16]
  419c5c:	b	41990c <_obstack_memory_used@@Base+0x65dc>
  419c60:	mov	x19, #0x0                   	// #0
  419c64:	b	419850 <_obstack_memory_used@@Base+0x6520>
  419c68:	stp	x29, x30, [sp, #-208]!
  419c6c:	mov	x29, sp
  419c70:	stp	x19, x20, [sp, #16]
  419c74:	stp	x21, x22, [sp, #32]
  419c78:	stp	x23, x24, [sp, #48]
  419c7c:	stp	x25, x26, [sp, #64]
  419c80:	stp	x27, x28, [sp, #80]
  419c84:	mov	x21, x1
  419c88:	str	x2, [x29, #120]
  419c8c:	mov	x22, x3
  419c90:	ldr	x0, [x0]
  419c94:	str	x0, [x29, #136]
  419c98:	str	xzr, [x29, #152]
  419c9c:	mov	x0, #0x2                   	// #2
  419ca0:	str	x0, [x29, #160]
  419ca4:	str	xzr, [x29, #168]
  419ca8:	tst	w4, #0xff
  419cac:	b.eq	419d18 <_obstack_memory_used@@Base+0x69e8>  // b.none
  419cb0:	mov	x0, #0x60                  	// #96
  419cb4:	bl	402800 <malloc@plt>
  419cb8:	str	x0, [x29, #168]
  419cbc:	cbz	x0, 41a24c <_obstack_memory_used@@Base+0x6f1c>
  419cc0:	add	x26, x29, #0x98
  419cc4:	ldr	x0, [x29, #136]
  419cc8:	ldr	x19, [x0, #144]
  419ccc:	stp	xzr, xzr, [x29, #176]
  419cd0:	str	xzr, [x29, #192]
  419cd4:	ldr	x0, [x29, #120]
  419cd8:	lsl	x0, x0, #4
  419cdc:	str	x0, [x29, #112]
  419ce0:	cmp	x0, #0xfbf
  419ce4:	b.hi	419d20 <_obstack_memory_used@@Base+0x69f0>  // b.pmore
  419ce8:	sub	sp, sp, x0
  419cec:	mov	x0, sp
  419cf0:	str	x0, [x29, #104]
  419cf4:	str	wzr, [x29, #100]
  419cf8:	ldr	x2, [x29, #112]
  419cfc:	mov	x1, x22
  419d00:	ldr	x0, [x29, #104]
  419d04:	bl	402650 <memcpy@plt>
  419d08:	ldr	x0, [x22]
  419d0c:	str	x0, [x29, #200]
  419d10:	ldr	x25, [x29, #120]
  419d14:	b	41a06c <_obstack_memory_used@@Base+0x6d3c>
  419d18:	mov	x26, #0x0                   	// #0
  419d1c:	b	419cc4 <_obstack_memory_used@@Base+0x6994>
  419d20:	ldr	x0, [x29, #112]
  419d24:	bl	402800 <malloc@plt>
  419d28:	str	x0, [x29, #104]
  419d2c:	mov	w1, #0x1                   	// #1
  419d30:	str	w1, [x29, #100]
  419d34:	cbnz	x0, 419cf8 <_obstack_memory_used@@Base+0x69c8>
  419d38:	mov	x0, x26
  419d3c:	bl	416eec <_obstack_memory_used@@Base+0x3bbc>
  419d40:	mov	w0, #0xc                   	// #12
  419d44:	b	41a220 <_obstack_memory_used@@Base+0x6ef0>
  419d48:	ldr	x0, [x2, x1]
  419d4c:	add	x0, x0, #0x1
  419d50:	ldr	x1, [x29, #120]
  419d54:	cmp	x1, x0
  419d58:	b.le	41a0a4 <_obstack_memory_used@@Base+0x6d74>
  419d5c:	lsl	x0, x0, #4
  419d60:	add	x1, x22, x0
  419d64:	str	x20, [x22, x0]
  419d68:	mov	x0, #0xffffffffffffffff    	// #-1
  419d6c:	str	x0, [x1, #8]
  419d70:	b	41a0a4 <_obstack_memory_used@@Base+0x6d74>
  419d74:	ldr	x0, [x2, x1]
  419d78:	add	x0, x0, #0x1
  419d7c:	ldr	x1, [x29, #120]
  419d80:	cmp	x1, x0
  419d84:	b.le	41a0a4 <_obstack_memory_used@@Base+0x6d74>
  419d88:	lsl	x0, x0, #4
  419d8c:	add	x2, x22, x0
  419d90:	ldr	x1, [x22, x0]
  419d94:	cmp	x20, x1
  419d98:	b.gt	419dbc <_obstack_memory_used@@Base+0x6a8c>
  419d9c:	ldrb	w1, [x3, #10]
  419da0:	tbz	w1, #3, 419db4 <_obstack_memory_used@@Base+0x6a84>
  419da4:	ldr	x1, [x29, #104]
  419da8:	ldr	x0, [x1, x0]
  419dac:	cmn	x0, #0x1
  419db0:	b.ne	419dd4 <_obstack_memory_used@@Base+0x6aa4>  // b.any
  419db4:	str	x20, [x2, #8]
  419db8:	b	41a0a4 <_obstack_memory_used@@Base+0x6d74>
  419dbc:	str	x20, [x2, #8]
  419dc0:	ldr	x2, [x29, #112]
  419dc4:	mov	x1, x22
  419dc8:	ldr	x0, [x29, #104]
  419dcc:	bl	402650 <memcpy@plt>
  419dd0:	b	41a0a4 <_obstack_memory_used@@Base+0x6d74>
  419dd4:	ldr	x2, [x29, #112]
  419dd8:	mov	x0, x22
  419ddc:	bl	402650 <memcpy@plt>
  419de0:	b	41a0a4 <_obstack_memory_used@@Base+0x6d74>
  419de4:	cbz	x26, 419e6c <_obstack_memory_used@@Base+0x6b3c>
  419de8:	mov	x0, x22
  419dec:	mov	x1, #0x0                   	// #0
  419df0:	b	419e04 <_obstack_memory_used@@Base+0x6ad4>
  419df4:	add	x1, x1, #0x1
  419df8:	add	x0, x0, #0x10
  419dfc:	cmp	x25, x1
  419e00:	b.eq	419e44 <_obstack_memory_used@@Base+0x6b14>  // b.none
  419e04:	ldr	x2, [x0]
  419e08:	tbnz	x2, #63, 419df4 <_obstack_memory_used@@Base+0x6ac4>
  419e0c:	ldr	x2, [x0, #8]
  419e10:	cmn	x2, #0x1
  419e14:	b.ne	419df4 <_obstack_memory_used@@Base+0x6ac4>  // b.any
  419e18:	ldr	x0, [x29, #120]
  419e1c:	cmp	x0, x1
  419e20:	b.eq	419e44 <_obstack_memory_used@@Base+0x6b14>  // b.none
  419e24:	add	x4, x29, #0xb0
  419e28:	mov	x3, x22
  419e2c:	mov	x2, x25
  419e30:	add	x1, x29, #0xc8
  419e34:	mov	x0, x26
  419e38:	bl	4176a4 <_obstack_memory_used@@Base+0x4374>
  419e3c:	mov	x19, x0
  419e40:	b	41a0bc <_obstack_memory_used@@Base+0x6d8c>
  419e44:	ldr	x0, [x29, #192]
  419e48:	bl	402ae0 <free@plt>
  419e4c:	ldr	w0, [x29, #100]
  419e50:	cbnz	w0, 419e60 <_obstack_memory_used@@Base+0x6b30>
  419e54:	mov	x0, x26
  419e58:	bl	416eec <_obstack_memory_used@@Base+0x3bbc>
  419e5c:	b	41a220 <_obstack_memory_used@@Base+0x6ef0>
  419e60:	ldr	x0, [x29, #104]
  419e64:	bl	402ae0 <free@plt>
  419e68:	b	419e54 <_obstack_memory_used@@Base+0x6b24>
  419e6c:	ldr	x0, [x29, #192]
  419e70:	bl	402ae0 <free@plt>
  419e74:	mov	w0, #0x0                   	// #0
  419e78:	ldr	w1, [x29, #100]
  419e7c:	cbz	w1, 41a220 <_obstack_memory_used@@Base+0x6ef0>
  419e80:	ldr	x0, [x29, #104]
  419e84:	bl	402ae0 <free@plt>
  419e88:	mov	w0, #0x0                   	// #0
  419e8c:	b	41a220 <_obstack_memory_used@@Base+0x6ef0>
  419e90:	ldr	x0, [x21, #184]
  419e94:	ldr	x1, [x29, #200]
  419e98:	ldr	x24, [x0, x1, lsl #3]
  419e9c:	add	x24, x24, #0x8
  419ea0:	add	x20, x19, x19, lsl #1
  419ea4:	ldr	x0, [x23, #40]
  419ea8:	add	x20, x0, x20, lsl #3
  419eac:	mov	x1, x19
  419eb0:	add	x0, x29, #0xb0
  419eb4:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  419eb8:	and	w0, w0, #0xff
  419ebc:	cbz	w0, 419f74 <_obstack_memory_used@@Base+0x6c44>
  419ec0:	ldr	x27, [x20, #8]
  419ec4:	cmp	x27, #0x0
  419ec8:	b.le	41a254 <_obstack_memory_used@@Base+0x6f24>
  419ecc:	ldr	x28, [x20, #16]
  419ed0:	mov	x19, #0xffffffffffffffff    	// #-1
  419ed4:	mov	x20, #0x0                   	// #0
  419ed8:	b	419fc8 <_obstack_memory_used@@Base+0x6c98>
  419edc:	mov	x1, x19
  419ee0:	add	x0, x29, #0xb0
  419ee4:	bl	413488 <_obstack_memory_used@@Base+0x158>
  419ee8:	cbnz	x0, 41a1d0 <_obstack_memory_used@@Base+0x6ea0>
  419eec:	cbz	x26, 41a068 <_obstack_memory_used@@Base+0x6d38>
  419ef0:	ldr	x20, [x29, #200]
  419ef4:	ldr	x24, [x26]
  419ef8:	add	x0, x24, #0x1
  419efc:	str	x0, [x26]
  419f00:	ldr	x1, [x26, #8]
  419f04:	cmp	x0, x1
  419f08:	b.eq	419f94 <_obstack_memory_used@@Base+0x6c64>  // b.none
  419f0c:	add	x24, x24, x24, lsl #1
  419f10:	lsl	x24, x24, #4
  419f14:	ldr	x0, [x26, #16]
  419f18:	str	x20, [x0, x24]
  419f1c:	ldr	x0, [x26, #16]
  419f20:	add	x0, x0, x24
  419f24:	str	x23, [x0, #8]
  419f28:	ldr	x20, [x26, #16]
  419f2c:	add	x20, x20, x24
  419f30:	ldr	x23, [x29, #112]
  419f34:	mov	x0, x23
  419f38:	bl	402800 <malloc@plt>
  419f3c:	str	x0, [x20, #16]
  419f40:	ldr	x0, [x26, #16]
  419f44:	add	x0, x0, x24
  419f48:	ldr	x0, [x0, #16]
  419f4c:	cbz	x0, 419f74 <_obstack_memory_used@@Base+0x6c44>
  419f50:	mov	x2, x23
  419f54:	mov	x1, x22
  419f58:	bl	402650 <memcpy@plt>
  419f5c:	ldr	x0, [x26, #16]
  419f60:	add	x0, x0, x24
  419f64:	add	x1, x29, #0xb0
  419f68:	add	x0, x0, #0x18
  419f6c:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  419f70:	cbz	w0, 41a068 <_obstack_memory_used@@Base+0x6d38>
  419f74:	ldr	x0, [x29, #192]
  419f78:	bl	402ae0 <free@plt>
  419f7c:	ldr	w0, [x29, #100]
  419f80:	cbnz	w0, 41a1d8 <_obstack_memory_used@@Base+0x6ea8>
  419f84:	mov	x0, x26
  419f88:	bl	416eec <_obstack_memory_used@@Base+0x3bbc>
  419f8c:	mov	w0, #0xc                   	// #12
  419f90:	b	41a220 <_obstack_memory_used@@Base+0x6ef0>
  419f94:	add	x1, x1, x1, lsl #1
  419f98:	lsl	x1, x1, #5
  419f9c:	ldr	x0, [x26, #16]
  419fa0:	bl	402930 <realloc@plt>
  419fa4:	cbz	x0, 419f74 <_obstack_memory_used@@Base+0x6c44>
  419fa8:	ldr	x1, [x26, #8]
  419fac:	lsl	x1, x1, #1
  419fb0:	str	x1, [x26, #8]
  419fb4:	str	x0, [x26, #16]
  419fb8:	b	419f0c <_obstack_memory_used@@Base+0x6bdc>
  419fbc:	add	x20, x20, #0x1
  419fc0:	cmp	x27, x20
  419fc4:	b.eq	41a068 <_obstack_memory_used@@Base+0x6d38>  // b.none
  419fc8:	ldr	x23, [x28, x20, lsl #3]
  419fcc:	mov	x1, x23
  419fd0:	mov	x0, x24
  419fd4:	bl	413488 <_obstack_memory_used@@Base+0x158>
  419fd8:	cbz	x0, 419fbc <_obstack_memory_used@@Base+0x6c8c>
  419fdc:	cmn	x19, #0x1
  419fe0:	b.ne	419edc <_obstack_memory_used@@Base+0x6bac>  // b.any
  419fe4:	mov	x19, x23
  419fe8:	b	419fbc <_obstack_memory_used@@Base+0x6c8c>
  419fec:	ldr	x3, [x29, #200]
  419ff0:	mov	x2, x21
  419ff4:	mov	x1, x19
  419ff8:	mov	x0, x23
  419ffc:	bl	418360 <_obstack_memory_used@@Base+0x5030>
  41a000:	sxtw	x20, w0
  41a004:	cbnz	w0, 41a164 <_obstack_memory_used@@Base+0x6e34>
  41a008:	ldr	x20, [x29, #200]
  41a00c:	ldr	x1, [x23]
  41a010:	mov	x2, x20
  41a014:	add	x1, x1, x24
  41a018:	mov	x0, x21
  41a01c:	bl	417228 <_obstack_memory_used@@Base+0x3ef8>
  41a020:	and	w0, w0, #0xff
  41a024:	cbz	w0, 41a254 <_obstack_memory_used@@Base+0x6f24>
  41a028:	ldr	x0, [x23, #24]
  41a02c:	ldr	x19, [x0, x27, lsl #3]
  41a030:	add	x20, x20, #0x1
  41a034:	str	x20, [x29, #200]
  41a038:	cbz	x26, 41a064 <_obstack_memory_used@@Base+0x6d34>
  41a03c:	ldr	x0, [x21, #168]
  41a040:	cmp	x20, x0
  41a044:	b.gt	41a254 <_obstack_memory_used@@Base+0x6f24>
  41a048:	ldr	x0, [x21, #184]
  41a04c:	ldr	x0, [x0, x20, lsl #3]
  41a050:	cbz	x0, 41a254 <_obstack_memory_used@@Base+0x6f24>
  41a054:	mov	x1, x19
  41a058:	add	x0, x0, #0x8
  41a05c:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41a060:	cbz	x0, 41a254 <_obstack_memory_used@@Base+0x6f24>
  41a064:	str	xzr, [x29, #184]
  41a068:	tbnz	x19, #63, 41a258 <_obstack_memory_used@@Base+0x6f28>
  41a06c:	ldr	x20, [x29, #200]
  41a070:	ldr	x0, [x22, #8]
  41a074:	cmp	x0, x20
  41a078:	b.lt	41a208 <_obstack_memory_used@@Base+0x6ed8>  // b.tstop
  41a07c:	str	x25, [x29, #128]
  41a080:	lsl	x1, x19, #4
  41a084:	ldr	x0, [x29, #136]
  41a088:	ldr	x2, [x0]
  41a08c:	add	x3, x2, x1
  41a090:	ldrb	w0, [x3, #8]
  41a094:	cmp	w0, #0x8
  41a098:	b.eq	419d48 <_obstack_memory_used@@Base+0x6a18>  // b.none
  41a09c:	cmp	w0, #0x9
  41a0a0:	b.eq	419d74 <_obstack_memory_used@@Base+0x6a44>  // b.none
  41a0a4:	ldr	x0, [x22, #8]
  41a0a8:	cmp	x0, x20
  41a0ac:	b.ne	41a0bc <_obstack_memory_used@@Base+0x6d8c>  // b.any
  41a0b0:	ldr	x0, [x21, #176]
  41a0b4:	cmp	x0, x19
  41a0b8:	b.eq	419de4 <_obstack_memory_used@@Base+0x6ab4>  // b.none
  41a0bc:	ldr	x23, [x21, #152]
  41a0c0:	mov	x27, x19
  41a0c4:	lsl	x24, x19, #4
  41a0c8:	ldr	x2, [x23]
  41a0cc:	add	x0, x2, x24
  41a0d0:	ldrb	w1, [x0, #8]
  41a0d4:	tbnz	w1, #3, 419e90 <_obstack_memory_used@@Base+0x6b60>
  41a0d8:	ldrb	w0, [x0, #10]
  41a0dc:	tbnz	w0, #4, 419fec <_obstack_memory_used@@Base+0x6cbc>
  41a0e0:	cmp	w1, #0x4
  41a0e4:	b.ne	41a008 <_obstack_memory_used@@Base+0x6cd8>  // b.any
  41a0e8:	ldr	x0, [x2, x24]
  41a0ec:	add	x0, x0, #0x1
  41a0f0:	ldr	x1, [x29, #120]
  41a0f4:	cmp	x1, x0
  41a0f8:	b.le	41a178 <_obstack_memory_used@@Base+0x6e48>
  41a0fc:	lsl	x1, x0, #4
  41a100:	add	x2, x22, x1
  41a104:	ldr	x2, [x2, #8]
  41a108:	ldr	x20, [x22, x1]
  41a10c:	sub	x20, x2, x20
  41a110:	cbz	x26, 41a184 <_obstack_memory_used@@Base+0x6e54>
  41a114:	lsl	x0, x0, #4
  41a118:	add	x1, x22, x0
  41a11c:	ldr	x0, [x22, x0]
  41a120:	cmn	x0, #0x1
  41a124:	b.eq	41a254 <_obstack_memory_used@@Base+0x6f24>  // b.none
  41a128:	ldr	x1, [x1, #8]
  41a12c:	cmn	x1, #0x1
  41a130:	b.eq	41a254 <_obstack_memory_used@@Base+0x6f24>  // b.none
  41a134:	cbz	x20, 41a188 <_obstack_memory_used@@Base+0x6e58>
  41a138:	ldr	x3, [x21, #8]
  41a13c:	ldr	x1, [x29, #200]
  41a140:	ldr	x2, [x21, #48]
  41a144:	sub	x2, x2, x1
  41a148:	cmp	x20, x2
  41a14c:	b.gt	41a254 <_obstack_memory_used@@Base+0x6f24>
  41a150:	mov	x2, x20
  41a154:	add	x1, x3, x1
  41a158:	add	x0, x3, x0
  41a15c:	bl	402a60 <memcmp@plt>
  41a160:	cbnz	w0, 41a254 <_obstack_memory_used@@Base+0x6f24>
  41a164:	ldr	x0, [x23, #24]
  41a168:	ldr	x19, [x0, x27, lsl #3]
  41a16c:	ldr	x0, [x29, #200]
  41a170:	add	x20, x20, x0
  41a174:	b	41a034 <_obstack_memory_used@@Base+0x6d04>
  41a178:	cbz	x26, 41a188 <_obstack_memory_used@@Base+0x6e58>
  41a17c:	mov	x19, #0xffffffffffffffff    	// #-1
  41a180:	b	41a068 <_obstack_memory_used@@Base+0x6d38>
  41a184:	cbnz	x20, 41a164 <_obstack_memory_used@@Base+0x6e34>
  41a188:	mov	x1, x19
  41a18c:	add	x0, x29, #0xb0
  41a190:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  41a194:	and	w0, w0, #0xff
  41a198:	cbz	w0, 419f74 <_obstack_memory_used@@Base+0x6c44>
  41a19c:	ldr	x1, [x23, #40]
  41a1a0:	add	x0, x27, x27, lsl #1
  41a1a4:	add	x0, x1, x0, lsl #3
  41a1a8:	ldr	x0, [x0, #16]
  41a1ac:	ldr	x19, [x0]
  41a1b0:	ldr	x0, [x21, #184]
  41a1b4:	ldr	x1, [x29, #200]
  41a1b8:	ldr	x0, [x0, x1, lsl #3]
  41a1bc:	mov	x1, x19
  41a1c0:	add	x0, x0, #0x8
  41a1c4:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41a1c8:	cbz	x0, 41a008 <_obstack_memory_used@@Base+0x6cd8>
  41a1cc:	b	41a068 <_obstack_memory_used@@Base+0x6d38>
  41a1d0:	mov	x19, x23
  41a1d4:	b	41a068 <_obstack_memory_used@@Base+0x6d38>
  41a1d8:	ldr	x0, [x29, #104]
  41a1dc:	bl	402ae0 <free@plt>
  41a1e0:	b	419f84 <_obstack_memory_used@@Base+0x6c54>
  41a1e4:	ldr	x0, [x29, #192]
  41a1e8:	bl	402ae0 <free@plt>
  41a1ec:	mov	w0, #0x1                   	// #1
  41a1f0:	ldr	w1, [x29, #100]
  41a1f4:	cbz	w1, 41a220 <_obstack_memory_used@@Base+0x6ef0>
  41a1f8:	ldr	x0, [x29, #104]
  41a1fc:	bl	402ae0 <free@plt>
  41a200:	mov	w0, #0x1                   	// #1
  41a204:	b	41a220 <_obstack_memory_used@@Base+0x6ef0>
  41a208:	ldr	x0, [x29, #192]
  41a20c:	bl	402ae0 <free@plt>
  41a210:	ldr	w0, [x29, #100]
  41a214:	cbnz	w0, 41a240 <_obstack_memory_used@@Base+0x6f10>
  41a218:	mov	x0, x26
  41a21c:	bl	416eec <_obstack_memory_used@@Base+0x3bbc>
  41a220:	mov	sp, x29
  41a224:	ldp	x19, x20, [sp, #16]
  41a228:	ldp	x21, x22, [sp, #32]
  41a22c:	ldp	x23, x24, [sp, #48]
  41a230:	ldp	x25, x26, [sp, #64]
  41a234:	ldp	x27, x28, [sp, #80]
  41a238:	ldp	x29, x30, [sp], #208
  41a23c:	ret
  41a240:	ldr	x0, [x29, #104]
  41a244:	bl	402ae0 <free@plt>
  41a248:	b	41a218 <_obstack_memory_used@@Base+0x6ee8>
  41a24c:	mov	w0, #0xc                   	// #12
  41a250:	b	41a220 <_obstack_memory_used@@Base+0x6ef0>
  41a254:	mov	x19, #0xffffffffffffffff    	// #-1
  41a258:	cmn	x19, #0x2
  41a25c:	b.eq	419f74 <_obstack_memory_used@@Base+0x6c44>  // b.none
  41a260:	cbz	x26, 41a1e4 <_obstack_memory_used@@Base+0x6eb4>
  41a264:	add	x4, x29, #0xb0
  41a268:	mov	x3, x22
  41a26c:	ldr	x2, [x29, #128]
  41a270:	add	x1, x29, #0xc8
  41a274:	mov	x0, x26
  41a278:	bl	4176a4 <_obstack_memory_used@@Base+0x4374>
  41a27c:	mov	x19, x0
  41a280:	b	41a06c <_obstack_memory_used@@Base+0x6d3c>
  41a284:	stp	x29, x30, [sp, #-288]!
  41a288:	mov	x29, sp
  41a28c:	stp	x19, x20, [sp, #16]
  41a290:	stp	x23, x24, [sp, #48]
  41a294:	stp	x25, x26, [sp, #64]
  41a298:	stp	x27, x28, [sp, #80]
  41a29c:	mov	x26, x0
  41a2a0:	mov	x24, x2
  41a2a4:	mov	x27, x3
  41a2a8:	mov	x28, x5
  41a2ac:	ldr	x23, [x1]
  41a2b0:	ldrb	w0, [x2, #8]
  41a2b4:	cmp	w0, #0xc
  41a2b8:	b.eq	41adf4 <_obstack_memory_used@@Base+0x7ac4>  // b.none
  41a2bc:	mov	x19, x1
  41a2c0:	mov	x20, x4
  41a2c4:	b.ls	41a36c <_obstack_memory_used@@Base+0x703c>  // b.plast
  41a2c8:	cmp	w0, #0x18
  41a2cc:	b.eq	41a3a0 <_obstack_memory_used@@Base+0x7070>  // b.none
  41a2d0:	b.ls	41a440 <_obstack_memory_used@@Base+0x7110>  // b.plast
  41a2d4:	cmp	w0, #0x23
  41a2d8:	b.hi	41b05c <_obstack_memory_used@@Base+0x7d2c>  // b.pmore
  41a2dc:	cmp	w0, #0x21
  41a2e0:	b.hi	41b01c <_obstack_memory_used@@Base+0x7cec>  // b.pmore
  41a2e4:	cset	w4, eq  // eq = none
  41a2e8:	adrp	x3, 422000 <_obstack_memory_used@@Base+0xecd0>
  41a2ec:	add	x3, x3, #0xa10
  41a2f0:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xdcd0>
  41a2f4:	add	x2, x2, #0xba0
  41a2f8:	ldr	x1, [x26, #120]
  41a2fc:	mov	x0, x23
  41a300:	bl	418148 <_obstack_memory_used@@Base+0x4e18>
  41a304:	mov	x25, x0
  41a308:	ldr	w0, [x28]
  41a30c:	cmp	w0, #0x0
  41a310:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  41a314:	b.eq	41b47c <_obstack_memory_used@@Base+0x814c>  // b.none
  41a318:	mov	x2, x27
  41a31c:	mov	x1, x26
  41a320:	mov	x0, x24
  41a324:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  41a328:	ldrb	w1, [x24, #8]
  41a32c:	cmp	w1, #0x12
  41a330:	cset	w19, eq  // eq = none
  41a334:	sub	w0, w1, #0x12
  41a338:	and	w0, w0, #0xff
  41a33c:	cmp	w1, #0xb
  41a340:	ccmp	w1, #0x17, #0x4, ne  // ne = any
  41a344:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  41a348:	b.hi	41b450 <_obstack_memory_used@@Base+0x8120>  // b.pmore
  41a34c:	stp	x21, x22, [sp, #32]
  41a350:	adrp	x0, 413000 <wcrtomb@plt+0x102c0>
  41a354:	add	x0, x0, #0x7d0
  41a358:	str	x0, [sp, #112]
  41a35c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2cd0>
  41a360:	add	x0, x0, #0x38
  41a364:	str	x0, [sp, #120]
  41a368:	b	41b2c0 <_obstack_memory_used@@Base+0x7f90>
  41a36c:	cmp	w0, #0x5
  41a370:	b.eq	41afd8 <_obstack_memory_used@@Base+0x7ca8>  // b.none
  41a374:	b.ls	41a3d0 <_obstack_memory_used@@Base+0x70a0>  // b.plast
  41a378:	cmp	w0, #0x9
  41a37c:	b.eq	41ade0 <_obstack_memory_used@@Base+0x7ab0>  // b.none
  41a380:	b.ls	41a520 <_obstack_memory_used@@Base+0x71f0>  // b.plast
  41a384:	mov	x25, #0x0                   	// #0
  41a388:	cmp	w0, #0xa
  41a38c:	b.eq	41b450 <_obstack_memory_used@@Base+0x8120>  // b.none
  41a390:	tbnz	w27, #5, 41ad9c <_obstack_memory_used@@Base+0x7a6c>
  41a394:	tbnz	w27, #4, 41adac <_obstack_memory_used@@Base+0x7a7c>
  41a398:	cmp	w0, #0x9
  41a39c:	b.eq	41ade0 <_obstack_memory_used@@Base+0x7ab0>  // b.none
  41a3a0:	mov	w0, #0x1                   	// #1
  41a3a4:	strb	w0, [x24, #8]
  41a3a8:	mov	x3, x24
  41a3ac:	mov	x2, #0x0                   	// #0
  41a3b0:	mov	x1, #0x0                   	// #0
  41a3b4:	mov	x0, x23
  41a3b8:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41a3bc:	mov	x25, x0
  41a3c0:	cbnz	x0, 41a318 <_obstack_memory_used@@Base+0x6fe8>
  41a3c4:	mov	w0, #0xc                   	// #12
  41a3c8:	str	w0, [x28]
  41a3cc:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41a3d0:	cmp	w0, #0x2
  41a3d4:	b.eq	41b474 <_obstack_memory_used@@Base+0x8144>  // b.none
  41a3d8:	cmp	w0, #0x4
  41a3dc:	b.ne	41a460 <_obstack_memory_used@@Base+0x7130>  // b.any
  41a3e0:	ldr	x1, [x2]
  41a3e4:	mov	w0, #0x1                   	// #1
  41a3e8:	lsl	w0, w0, w1
  41a3ec:	sxtw	x0, w0
  41a3f0:	ldr	x1, [x23, #168]
  41a3f4:	tst	x0, x1
  41a3f8:	b.eq	41ad80 <_obstack_memory_used@@Base+0x7a50>  // b.none
  41a3fc:	ldr	x1, [x23, #160]
  41a400:	orr	x0, x1, x0
  41a404:	str	x0, [x23, #160]
  41a408:	mov	x3, x2
  41a40c:	mov	x2, #0x0                   	// #0
  41a410:	mov	x1, #0x0                   	// #0
  41a414:	mov	x0, x23
  41a418:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41a41c:	mov	x25, x0
  41a420:	cbz	x0, 41ad90 <_obstack_memory_used@@Base+0x7a60>
  41a424:	ldr	x0, [x23, #152]
  41a428:	add	x0, x0, #0x1
  41a42c:	str	x0, [x23, #152]
  41a430:	ldrb	w0, [x23, #176]
  41a434:	orr	w0, w0, #0x2
  41a438:	strb	w0, [x23, #176]
  41a43c:	b	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41a440:	cmp	w0, #0x14
  41a444:	b.eq	41a600 <_obstack_memory_used@@Base+0x72d0>  // b.none
  41a448:	b.ls	41a390 <_obstack_memory_used@@Base+0x7060>  // b.plast
  41a44c:	tbz	w3, #24, 41a390 <_obstack_memory_used@@Base+0x7060>
  41a450:	mov	w0, #0xd                   	// #13
  41a454:	str	w0, [x5]
  41a458:	mov	x25, #0x0                   	// #0
  41a45c:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41a460:	mov	x3, x2
  41a464:	mov	x2, #0x0                   	// #0
  41a468:	mov	x1, #0x0                   	// #0
  41a46c:	mov	x0, x23
  41a470:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41a474:	mov	x25, x0
  41a478:	cbz	x0, 41a514 <_obstack_memory_used@@Base+0x71e4>
  41a47c:	ldr	w0, [x23, #180]
  41a480:	mov	w20, #0x10                  	// #16
  41a484:	cmp	w0, #0x1
  41a488:	b.le	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41a48c:	ldr	x0, [x26, #72]
  41a490:	ldr	x1, [x26, #104]
  41a494:	cmp	x1, x0
  41a498:	b.le	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41a49c:	ldr	x1, [x26, #48]
  41a4a0:	cmp	x0, x1
  41a4a4:	b.eq	41a318 <_obstack_memory_used@@Base+0x6fe8>  // b.none
  41a4a8:	ldr	x1, [x26, #16]
  41a4ac:	ldr	w0, [x1, x0, lsl #2]
  41a4b0:	cmn	w0, #0x1
  41a4b4:	b.ne	41a318 <_obstack_memory_used@@Base+0x6fe8>  // b.any
  41a4b8:	mov	x2, x27
  41a4bc:	mov	x1, x26
  41a4c0:	mov	x0, x24
  41a4c4:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  41a4c8:	mov	x3, x24
  41a4cc:	mov	x2, #0x0                   	// #0
  41a4d0:	mov	x1, #0x0                   	// #0
  41a4d4:	mov	x0, x23
  41a4d8:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41a4dc:	mov	x19, x0
  41a4e0:	mov	w3, w20
  41a4e4:	mov	x2, x0
  41a4e8:	mov	x1, x25
  41a4ec:	mov	x0, x23
  41a4f0:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41a4f4:	mov	x25, x0
  41a4f8:	cmp	x19, #0x0
  41a4fc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41a500:	b.ne	41a48c <_obstack_memory_used@@Base+0x715c>  // b.any
  41a504:	mov	w0, #0xc                   	// #12
  41a508:	str	w0, [x28]
  41a50c:	mov	x25, #0x0                   	// #0
  41a510:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41a514:	mov	w0, #0xc                   	// #12
  41a518:	str	w0, [x28]
  41a51c:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41a520:	stp	x21, x22, [sp, #32]
  41a524:	ldr	x21, [x1, #48]
  41a528:	add	x0, x21, #0x1
  41a52c:	str	x0, [x1, #48]
  41a530:	orr	x2, x3, #0x800000
  41a534:	mov	x1, x26
  41a538:	mov	x0, x24
  41a53c:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  41a540:	ldrb	w1, [x24, #8]
  41a544:	mov	x0, #0x0                   	// #0
  41a548:	cmp	w1, #0x9
  41a54c:	b.ne	41a598 <_obstack_memory_used@@Base+0x7268>  // b.any
  41a550:	cmp	x21, #0x8
  41a554:	b.hi	41a570 <_obstack_memory_used@@Base+0x7240>  // b.pmore
  41a558:	mov	w1, #0x1                   	// #1
  41a55c:	lsl	w1, w1, w21
  41a560:	sxtw	x1, w1
  41a564:	ldr	x2, [x23, #168]
  41a568:	orr	x1, x2, x1
  41a56c:	str	x1, [x23, #168]
  41a570:	mov	w3, #0x11                  	// #17
  41a574:	mov	x2, #0x0                   	// #0
  41a578:	mov	x1, x0
  41a57c:	mov	x0, x23
  41a580:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41a584:	mov	x25, x0
  41a588:	cbz	x0, 41a5f4 <_obstack_memory_used@@Base+0x72c4>
  41a58c:	str	x21, [x0, #40]
  41a590:	ldp	x21, x22, [sp, #32]
  41a594:	b	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41a598:	mov	x5, x28
  41a59c:	add	x4, x20, #0x1
  41a5a0:	mov	x3, x27
  41a5a4:	mov	x2, x24
  41a5a8:	mov	x1, x19
  41a5ac:	mov	x0, x26
  41a5b0:	bl	41b694 <_obstack_memory_used@@Base+0x8364>
  41a5b4:	ldr	w1, [x28]
  41a5b8:	cbz	w1, 41a5c8 <_obstack_memory_used@@Base+0x7298>
  41a5bc:	mov	x25, #0x0                   	// #0
  41a5c0:	ldp	x21, x22, [sp, #32]
  41a5c4:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41a5c8:	ldrb	w1, [x24, #8]
  41a5cc:	cmp	w1, #0x9
  41a5d0:	b.eq	41a550 <_obstack_memory_used@@Base+0x7220>  // b.none
  41a5d4:	cbz	x0, 41a5e8 <_obstack_memory_used@@Base+0x72b8>
  41a5d8:	mov	x2, #0x0                   	// #0
  41a5dc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2cd0>
  41a5e0:	add	x1, x1, #0x38
  41a5e4:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41a5e8:	mov	w0, #0x8                   	// #8
  41a5ec:	str	w0, [x28]
  41a5f0:	b	41a5bc <_obstack_memory_used@@Base+0x728c>
  41a5f4:	mov	w0, #0xc                   	// #12
  41a5f8:	str	w0, [x28]
  41a5fc:	b	41a5bc <_obstack_memory_used@@Base+0x728c>
  41a600:	stp	x21, x22, [sp, #32]
  41a604:	str	xzr, [sp, #168]
  41a608:	mov	x1, #0x1                   	// #1
  41a60c:	mov	x0, #0x20                  	// #32
  41a610:	bl	402910 <calloc@plt>
  41a614:	mov	x20, x0
  41a618:	mov	x1, #0x1                   	// #1
  41a61c:	mov	x0, #0x50                  	// #80
  41a620:	bl	402910 <calloc@plt>
  41a624:	mov	x21, x0
  41a628:	cmp	x20, #0x0
  41a62c:	cset	w0, eq  // eq = none
  41a630:	cmp	x21, #0x0
  41a634:	csinc	w0, w0, wzr, ne  // ne = any
  41a638:	str	w0, [sp, #96]
  41a63c:	cbnz	w0, 41a68c <_obstack_memory_used@@Base+0x735c>
  41a640:	mov	x2, x27
  41a644:	mov	x1, x26
  41a648:	mov	x0, x24
  41a64c:	bl	413640 <_obstack_memory_used@@Base+0x310>
  41a650:	mov	w19, w0
  41a654:	ldrb	w0, [x24, #8]
  41a658:	cmp	w0, #0x2
  41a65c:	b.eq	41a6a8 <_obstack_memory_used@@Base+0x7378>  // b.none
  41a660:	ldr	w1, [sp, #96]
  41a664:	str	w1, [sp, #152]
  41a668:	cmp	w0, #0x19
  41a66c:	b.eq	41a6b0 <_obstack_memory_used@@Base+0x7380>  // b.none
  41a670:	ldrb	w0, [x24, #8]
  41a674:	cmp	w0, #0x15
  41a678:	b.eq	41a708 <_obstack_memory_used@@Base+0x73d8>  // b.none
  41a67c:	str	xzr, [sp, #136]
  41a680:	mov	w6, #0x1                   	// #1
  41a684:	str	xzr, [sp, #120]
  41a688:	b	41aab8 <_obstack_memory_used@@Base+0x7788>
  41a68c:	mov	x0, x20
  41a690:	bl	402ae0 <free@plt>
  41a694:	mov	x0, x21
  41a698:	bl	402ae0 <free@plt>
  41a69c:	mov	w0, #0xc                   	// #12
  41a6a0:	str	w0, [x28]
  41a6a4:	b	41a728 <_obstack_memory_used@@Base+0x73f8>
  41a6a8:	str	w0, [x28]
  41a6ac:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41a6b0:	ldrb	w0, [x21, #32]
  41a6b4:	orr	w0, w0, #0x1
  41a6b8:	strb	w0, [x21, #32]
  41a6bc:	tbz	w27, #8, 41a6cc <_obstack_memory_used@@Base+0x739c>
  41a6c0:	ldr	x0, [x20]
  41a6c4:	orr	x0, x0, #0x400
  41a6c8:	str	x0, [x20]
  41a6cc:	ldr	x0, [x26, #72]
  41a6d0:	add	x19, x0, w19, sxtw
  41a6d4:	str	x19, [x26, #72]
  41a6d8:	mov	x2, x27
  41a6dc:	mov	x1, x26
  41a6e0:	mov	x0, x24
  41a6e4:	bl	413640 <_obstack_memory_used@@Base+0x310>
  41a6e8:	mov	w19, w0
  41a6ec:	ldrb	w0, [x24, #8]
  41a6f0:	mov	w1, #0x1                   	// #1
  41a6f4:	str	w1, [sp, #152]
  41a6f8:	cmp	w0, #0x2
  41a6fc:	b.ne	41a670 <_obstack_memory_used@@Base+0x7340>  // b.any
  41a700:	str	w0, [x28]
  41a704:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41a708:	mov	w0, #0x1                   	// #1
  41a70c:	strb	w0, [x24, #8]
  41a710:	b	41a67c <_obstack_memory_used@@Base+0x734c>
  41a714:	str	w0, [x28]
  41a718:	mov	x0, x20
  41a71c:	bl	402ae0 <free@plt>
  41a720:	mov	x0, x21
  41a724:	bl	415fb0 <_obstack_memory_used@@Base+0x2c80>
  41a728:	ldr	w0, [x28]
  41a72c:	cbnz	w0, 41b484 <_obstack_memory_used@@Base+0x8154>
  41a730:	mov	x25, #0x0                   	// #0
  41a734:	ldp	x21, x22, [sp, #32]
  41a738:	b	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41a73c:	mov	w0, #0x7                   	// #7
  41a740:	str	w0, [x28]
  41a744:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41a748:	ldr	x0, [x26, #72]
  41a74c:	add	x0, x0, w19, sxtw
  41a750:	str	x0, [x26, #72]
  41a754:	mov	x2, x27
  41a758:	mov	x1, x26
  41a75c:	add	x0, sp, #0xd0
  41a760:	bl	413640 <_obstack_memory_used@@Base+0x310>
  41a764:	mov	w3, w0
  41a768:	ldrb	w0, [sp, #216]
  41a76c:	cmp	w0, #0x2
  41a770:	b.eq	41a798 <_obstack_memory_used@@Base+0x7468>  // b.none
  41a774:	cmp	w0, #0x15
  41a778:	b.ne	41a7a4 <_obstack_memory_used@@Base+0x7474>  // b.any
  41a77c:	neg	w0, w19
  41a780:	ldr	x1, [x26, #72]
  41a784:	add	x0, x1, w0, sxtw
  41a788:	str	x0, [x26, #72]
  41a78c:	mov	w0, #0x1                   	// #1
  41a790:	strb	w0, [x24, #8]
  41a794:	b	41ab20 <_obstack_memory_used@@Base+0x77f0>
  41a798:	mov	w0, #0x7                   	// #7
  41a79c:	str	w0, [x28]
  41a7a0:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41a7a4:	add	x0, sp, #0x100
  41a7a8:	str	x0, [sp, #200]
  41a7ac:	mov	w0, #0x3                   	// #3
  41a7b0:	str	w0, [sp, #192]
  41a7b4:	mov	w6, #0x1                   	// #1
  41a7b8:	mov	x5, x27
  41a7bc:	mov	x4, x23
  41a7c0:	add	x2, sp, #0xd0
  41a7c4:	mov	x1, x26
  41a7c8:	add	x0, sp, #0xc0
  41a7cc:	bl	413c00 <_obstack_memory_used@@Base+0x8d0>
  41a7d0:	cbnz	w0, 41a8e4 <_obstack_memory_used@@Base+0x75b4>
  41a7d4:	mov	x2, x27
  41a7d8:	mov	x1, x26
  41a7dc:	mov	x0, x24
  41a7e0:	bl	413640 <_obstack_memory_used@@Base+0x310>
  41a7e4:	mov	w19, w0
  41a7e8:	ldr	w0, [x23, #180]
  41a7ec:	cmp	w0, #0x2
  41a7f0:	csel	x0, x21, xzr, ge  // ge = tcont
  41a7f4:	str	x0, [sp, #112]
  41a7f8:	ldr	w1, [sp, #176]
  41a7fc:	str	w1, [sp, #144]
  41a800:	sub	w0, w1, #0x2
  41a804:	tst	w0, #0xfffffffd
  41a808:	b.eq	41b4a8 <_obstack_memory_used@@Base+0x8178>  // b.none
  41a80c:	ldr	w0, [sp, #192]
  41a810:	str	w0, [sp, #128]
  41a814:	sub	w0, w0, #0x2
  41a818:	tst	w0, #0xfffffffd
  41a81c:	b.eq	41b4b0 <_obstack_memory_used@@Base+0x8180>  // b.none
  41a820:	cmp	w1, #0x3
  41a824:	cset	w0, eq  // eq = none
  41a828:	str	w0, [sp, #156]
  41a82c:	b.eq	41a8ec <_obstack_memory_used@@Base+0x75bc>  // b.none
  41a830:	ldr	w0, [sp, #128]
  41a834:	cmp	w0, #0x3
  41a838:	b.eq	41a914 <_obstack_memory_used@@Base+0x75e4>  // b.none
  41a83c:	ldr	w0, [sp, #144]
  41a840:	mov	w22, #0x0                   	// #0
  41a844:	cbnz	w0, 41a84c <_obstack_memory_used@@Base+0x751c>
  41a848:	ldrb	w22, [sp, #184]
  41a84c:	ldr	w0, [sp, #128]
  41a850:	cbnz	w0, 41a940 <_obstack_memory_used@@Base+0x7610>
  41a854:	ldrb	w25, [sp, #200]
  41a858:	ldr	w0, [sp, #144]
  41a85c:	cmp	w0, #0x0
  41a860:	ldr	w0, [sp, #156]
  41a864:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41a868:	b.ne	41a95c <_obstack_memory_used@@Base+0x762c>  // b.any
  41a86c:	ldr	w22, [sp, #184]
  41a870:	ldr	w0, [sp, #128]
  41a874:	cmp	w0, #0x0
  41a878:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  41a87c:	b.eq	41a984 <_obstack_memory_used@@Base+0x7654>  // b.none
  41a880:	ldr	w25, [sp, #200]
  41a884:	cmn	w22, #0x1
  41a888:	ccmn	w25, #0x1, #0x4, ne  // ne = any
  41a88c:	b.eq	41b4cc <_obstack_memory_used@@Base+0x819c>  // b.none
  41a890:	tst	x27, #0x10000
  41a894:	ccmp	w25, w22, #0x2, ne  // ne = any
  41a898:	b.cc	41b4d4 <_obstack_memory_used@@Base+0x81a4>  // b.lo, b.ul, b.last
  41a89c:	ldr	x0, [sp, #112]
  41a8a0:	cbz	x0, 41a8d8 <_obstack_memory_used@@Base+0x75a8>
  41a8a4:	ldr	x0, [x0, #64]
  41a8a8:	ldr	x1, [sp, #136]
  41a8ac:	cmp	x0, x1
  41a8b0:	b.eq	41a99c <_obstack_memory_used@@Base+0x766c>  // b.none
  41a8b4:	ldr	x3, [sp, #112]
  41a8b8:	ldr	x1, [x3, #64]
  41a8bc:	ldr	x0, [x3, #8]
  41a8c0:	str	w22, [x0, x1, lsl #2]
  41a8c4:	ldr	x1, [x3, #16]
  41a8c8:	ldr	x0, [x3, #64]
  41a8cc:	add	x2, x0, #0x1
  41a8d0:	str	x2, [x3, #64]
  41a8d4:	str	w25, [x1, x0, lsl #2]
  41a8d8:	mov	x0, #0x0                   	// #0
  41a8dc:	mov	x4, #0x1                   	// #1
  41a8e0:	b	41aa24 <_obstack_memory_used@@Base+0x76f4>
  41a8e4:	str	w0, [x28]
  41a8e8:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41a8ec:	ldr	x0, [sp, #184]
  41a8f0:	bl	402690 <strlen@plt>
  41a8f4:	cmp	x0, #0x1
  41a8f8:	b.hi	41b4bc <_obstack_memory_used@@Base+0x818c>  // b.pmore
  41a8fc:	ldr	w0, [sp, #128]
  41a900:	cmp	w0, #0x3
  41a904:	b.eq	41b508 <_obstack_memory_used@@Base+0x81d8>  // b.none
  41a908:	ldr	x0, [sp, #184]
  41a90c:	ldrb	w22, [x0]
  41a910:	b	41a84c <_obstack_memory_used@@Base+0x751c>
  41a914:	ldr	x0, [sp, #200]
  41a918:	bl	402690 <strlen@plt>
  41a91c:	cmp	x0, #0x1
  41a920:	b.hi	41b4c4 <_obstack_memory_used@@Base+0x8194>  // b.pmore
  41a924:	ldr	w0, [sp, #144]
  41a928:	cbz	w0, 41a848 <_obstack_memory_used@@Base+0x7518>
  41a92c:	ldr	w0, [sp, #144]
  41a930:	cmp	w0, #0x3
  41a934:	b.eq	41a908 <_obstack_memory_used@@Base+0x75d8>  // b.none
  41a938:	mov	w22, #0x0                   	// #0
  41a93c:	b	41a84c <_obstack_memory_used@@Base+0x751c>
  41a940:	mov	w25, #0x0                   	// #0
  41a944:	ldr	w0, [sp, #128]
  41a948:	cmp	w0, #0x3
  41a94c:	b.ne	41a858 <_obstack_memory_used@@Base+0x7528>  // b.any
  41a950:	ldr	x0, [sp, #200]
  41a954:	ldrb	w25, [x0]
  41a958:	b	41a858 <_obstack_memory_used@@Base+0x7528>
  41a95c:	ldr	x0, [sp, #112]
  41a960:	cbz	x0, 41b4f4 <_obstack_memory_used@@Base+0x81c4>
  41a964:	mov	w0, w22
  41a968:	bl	4029d0 <btowc@plt>
  41a96c:	mov	w22, w0
  41a970:	ldr	w0, [sp, #192]
  41a974:	cmp	w0, #0x0
  41a978:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  41a97c:	b.ne	41a880 <_obstack_memory_used@@Base+0x7550>  // b.any
  41a980:	b	41a98c <_obstack_memory_used@@Base+0x765c>
  41a984:	ldr	x0, [sp, #112]
  41a988:	cbz	x0, 41a884 <_obstack_memory_used@@Base+0x7554>
  41a98c:	mov	w0, w25
  41a990:	bl	4029d0 <btowc@plt>
  41a994:	mov	w25, w0
  41a998:	b	41a884 <_obstack_memory_used@@Base+0x7554>
  41a99c:	lsl	x0, x1, #1
  41a9a0:	add	x0, x0, #0x1
  41a9a4:	str	x0, [sp, #136]
  41a9a8:	lsl	x0, x0, #2
  41a9ac:	str	x0, [sp, #144]
  41a9b0:	mov	x1, x0
  41a9b4:	ldr	x2, [sp, #112]
  41a9b8:	ldr	x0, [x2, #8]
  41a9bc:	bl	402930 <realloc@plt>
  41a9c0:	str	x0, [sp, #128]
  41a9c4:	ldr	x1, [sp, #144]
  41a9c8:	ldr	x2, [sp, #112]
  41a9cc:	ldr	x0, [x2, #16]
  41a9d0:	bl	402930 <realloc@plt>
  41a9d4:	str	x0, [sp, #144]
  41a9d8:	ldr	x1, [sp, #128]
  41a9dc:	cmp	x1, #0x0
  41a9e0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41a9e4:	b.eq	41aa00 <_obstack_memory_used@@Base+0x76d0>  // b.none
  41a9e8:	ldr	x0, [sp, #112]
  41a9ec:	ldr	x1, [sp, #128]
  41a9f0:	str	x1, [x0, #8]
  41a9f4:	ldr	x1, [sp, #144]
  41a9f8:	str	x1, [x0, #16]
  41a9fc:	b	41a8b4 <_obstack_memory_used@@Base+0x7584>
  41aa00:	mov	x0, x1
  41aa04:	bl	402ae0 <free@plt>
  41aa08:	ldr	x0, [sp, #144]
  41aa0c:	bl	402ae0 <free@plt>
  41aa10:	mov	w0, #0xc                   	// #12
  41aa14:	b	41b4b4 <_obstack_memory_used@@Base+0x8184>
  41aa18:	add	x0, x0, #0x1
  41aa1c:	cmp	x0, #0x100
  41aa20:	b.eq	41b4dc <_obstack_memory_used@@Base+0x81ac>  // b.none
  41aa24:	cmp	w22, w0
  41aa28:	ccmp	w25, w0, #0x0, ls  // ls = plast
  41aa2c:	b.cc	41aa18 <_obstack_memory_used@@Base+0x76e8>  // b.lo, b.ul, b.last
  41aa30:	add	x1, x0, #0x3f
  41aa34:	cmp	x0, #0x0
  41aa38:	csel	x1, x1, x0, lt  // lt = tstop
  41aa3c:	asr	x1, x1, #6
  41aa40:	lsl	x2, x4, x0
  41aa44:	ldr	x3, [x20, x1, lsl #3]
  41aa48:	orr	x2, x3, x2
  41aa4c:	str	x2, [x20, x1, lsl #3]
  41aa50:	b	41aa18 <_obstack_memory_used@@Base+0x76e8>
  41aa54:	cmp	w0, #0x3
  41aa58:	b.eq	41abb8 <_obstack_memory_used@@Base+0x7888>  // b.none
  41aa5c:	mov	x5, x27
  41aa60:	ldr	x4, [sp, #184]
  41aa64:	add	x3, sp, #0xa8
  41aa68:	mov	x2, x21
  41aa6c:	mov	x1, x20
  41aa70:	ldr	x0, [x26, #120]
  41aa74:	bl	417740 <_obstack_memory_used@@Base+0x4410>
  41aa78:	str	w0, [x28]
  41aa7c:	cbz	w0, 41aaa0 <_obstack_memory_used@@Base+0x7770>
  41aa80:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41aa84:	ldrb	w1, [sp, #184]
  41aa88:	ubfx	x2, x1, #6, #2
  41aa8c:	mov	x0, #0x1                   	// #1
  41aa90:	lsl	x1, x0, x1
  41aa94:	ldr	x0, [x20, x2, lsl #3]
  41aa98:	orr	x0, x0, x1
  41aa9c:	str	x0, [x20, x2, lsl #3]
  41aaa0:	ldrb	w0, [x24, #8]
  41aaa4:	cmp	w0, #0x2
  41aaa8:	b.eq	41abec <_obstack_memory_used@@Base+0x78bc>  // b.none
  41aaac:	cmp	w0, #0x15
  41aab0:	b.eq	41abf8 <_obstack_memory_used@@Base+0x78c8>  // b.none
  41aab4:	ldr	w6, [sp, #96]
  41aab8:	add	x0, sp, #0xe0
  41aabc:	str	x0, [sp, #184]
  41aac0:	mov	w0, #0x3                   	// #3
  41aac4:	str	w0, [sp, #176]
  41aac8:	mov	x5, x27
  41aacc:	mov	x4, x23
  41aad0:	mov	w3, w19
  41aad4:	mov	x2, x24
  41aad8:	mov	x1, x26
  41aadc:	add	x0, sp, #0xb0
  41aae0:	bl	413c00 <_obstack_memory_used@@Base+0x8d0>
  41aae4:	cbnz	w0, 41a714 <_obstack_memory_used@@Base+0x73e4>
  41aae8:	mov	x2, x27
  41aaec:	mov	x1, x26
  41aaf0:	mov	x0, x24
  41aaf4:	bl	413640 <_obstack_memory_used@@Base+0x310>
  41aaf8:	mov	w19, w0
  41aafc:	ldr	w0, [sp, #176]
  41ab00:	sub	w0, w0, #0x2
  41ab04:	tst	w0, #0xfffffffd
  41ab08:	b.eq	41ab20 <_obstack_memory_used@@Base+0x77f0>  // b.none
  41ab0c:	ldrb	w0, [x24, #8]
  41ab10:	cmp	w0, #0x2
  41ab14:	b.eq	41a73c <_obstack_memory_used@@Base+0x740c>  // b.none
  41ab18:	cmp	w0, #0x16
  41ab1c:	b.eq	41a748 <_obstack_memory_used@@Base+0x7418>  // b.none
  41ab20:	ldr	w0, [sp, #176]
  41ab24:	cmp	w0, #0x2
  41ab28:	b.eq	41ab84 <_obstack_memory_used@@Base+0x7854>  // b.none
  41ab2c:	b.hi	41aa54 <_obstack_memory_used@@Base+0x7724>  // b.pmore
  41ab30:	cbz	w0, 41aa84 <_obstack_memory_used@@Base+0x7754>
  41ab34:	ldr	x0, [x21, #40]
  41ab38:	ldr	x1, [sp, #120]
  41ab3c:	cmp	x0, x1
  41ab40:	b.eq	41ab60 <_obstack_memory_used@@Base+0x7830>  // b.none
  41ab44:	ldr	x1, [x21]
  41ab48:	ldr	x0, [x21, #40]
  41ab4c:	add	x2, x0, #0x1
  41ab50:	str	x2, [x21, #40]
  41ab54:	ldr	w2, [sp, #184]
  41ab58:	str	w2, [x1, x0, lsl #2]
  41ab5c:	b	41aaa0 <_obstack_memory_used@@Base+0x7770>
  41ab60:	lsl	x0, x1, #1
  41ab64:	add	x0, x0, #0x1
  41ab68:	str	x0, [sp, #120]
  41ab6c:	lsl	x1, x0, #2
  41ab70:	ldr	x0, [x21]
  41ab74:	bl	402930 <realloc@plt>
  41ab78:	cbz	x0, 41ad74 <_obstack_memory_used@@Base+0x7a44>
  41ab7c:	str	x0, [x21]
  41ab80:	b	41ab44 <_obstack_memory_used@@Base+0x7814>
  41ab84:	ldr	x22, [sp, #184]
  41ab88:	mov	x0, x22
  41ab8c:	bl	402690 <strlen@plt>
  41ab90:	cmp	x0, #0x1
  41ab94:	b.ne	41b490 <_obstack_memory_used@@Base+0x8160>  // b.any
  41ab98:	ldrb	w1, [x22]
  41ab9c:	ubfx	x2, x1, #6, #2
  41aba0:	lsl	x1, x0, x1
  41aba4:	ldr	x0, [x20, x2, lsl #3]
  41aba8:	orr	x0, x0, x1
  41abac:	str	x0, [x20, x2, lsl #3]
  41abb0:	str	wzr, [x28]
  41abb4:	b	41aaa0 <_obstack_memory_used@@Base+0x7770>
  41abb8:	ldr	x22, [sp, #184]
  41abbc:	mov	x0, x22
  41abc0:	bl	402690 <strlen@plt>
  41abc4:	cmp	x0, #0x1
  41abc8:	b.ne	41b49c <_obstack_memory_used@@Base+0x816c>  // b.any
  41abcc:	ldrb	w1, [x22]
  41abd0:	ubfx	x2, x1, #6, #2
  41abd4:	lsl	x1, x0, x1
  41abd8:	ldr	x0, [x20, x2, lsl #3]
  41abdc:	orr	x0, x0, x1
  41abe0:	str	x0, [x20, x2, lsl #3]
  41abe4:	str	wzr, [x28]
  41abe8:	b	41aaa0 <_obstack_memory_used@@Base+0x7770>
  41abec:	mov	w0, #0x7                   	// #7
  41abf0:	str	w0, [x28]
  41abf4:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41abf8:	ldr	x0, [x26, #72]
  41abfc:	add	x19, x0, w19, sxtw
  41ac00:	str	x19, [x26, #72]
  41ac04:	ldr	w0, [sp, #152]
  41ac08:	cbz	w0, 41ac28 <_obstack_memory_used@@Base+0x78f8>
  41ac0c:	mov	x0, #0x0                   	// #0
  41ac10:	ldr	x1, [x20, x0, lsl #3]
  41ac14:	mvn	x1, x1
  41ac18:	str	x1, [x20, x0, lsl #3]
  41ac1c:	add	x0, x0, #0x1
  41ac20:	cmp	x0, #0x4
  41ac24:	b.ne	41ac10 <_obstack_memory_used@@Base+0x78e0>  // b.any
  41ac28:	ldr	w2, [x23, #180]
  41ac2c:	cmp	w2, #0x1
  41ac30:	b.le	41ac58 <_obstack_memory_used@@Base+0x7928>
  41ac34:	ldr	x3, [x23, #120]
  41ac38:	mov	x0, #0x0                   	// #0
  41ac3c:	ldr	x1, [x20, x0]
  41ac40:	ldr	x4, [x3, x0]
  41ac44:	and	x1, x1, x4
  41ac48:	str	x1, [x20, x0]
  41ac4c:	add	x0, x0, #0x8
  41ac50:	cmp	x0, #0x20
  41ac54:	b.ne	41ac3c <_obstack_memory_used@@Base+0x790c>  // b.any
  41ac58:	ldr	x0, [x21, #40]
  41ac5c:	cbnz	x0, 41ac90 <_obstack_memory_used@@Base+0x7960>
  41ac60:	ldr	x0, [x21, #48]
  41ac64:	cbnz	x0, 41ac90 <_obstack_memory_used@@Base+0x7960>
  41ac68:	ldr	x0, [x21, #56]
  41ac6c:	cbnz	x0, 41ac90 <_obstack_memory_used@@Base+0x7960>
  41ac70:	ldr	x0, [x21, #64]
  41ac74:	cbnz	x0, 41ac90 <_obstack_memory_used@@Base+0x7960>
  41ac78:	cmp	w2, #0x1
  41ac7c:	b.le	41ad3c <_obstack_memory_used@@Base+0x7a0c>
  41ac80:	ldr	x0, [x21, #72]
  41ac84:	cbnz	x0, 41ac90 <_obstack_memory_used@@Base+0x7960>
  41ac88:	ldrb	w0, [x21, #32]
  41ac8c:	tbz	w0, #0, 41ad3c <_obstack_memory_used@@Base+0x7a0c>
  41ac90:	ldrb	w0, [x23, #176]
  41ac94:	orr	w0, w0, #0x2
  41ac98:	strb	w0, [x23, #176]
  41ac9c:	mov	w0, #0x6                   	// #6
  41aca0:	strb	w0, [sp, #264]
  41aca4:	str	x21, [sp, #256]
  41aca8:	add	x3, sp, #0x100
  41acac:	mov	x2, #0x0                   	// #0
  41acb0:	mov	x1, #0x0                   	// #0
  41acb4:	mov	x0, x23
  41acb8:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41acbc:	mov	x25, x0
  41acc0:	cbz	x0, 41ad74 <_obstack_memory_used@@Base+0x7a44>
  41acc4:	mov	x0, #0x0                   	// #0
  41acc8:	ldr	x2, [x20, x0, lsl #3]
  41accc:	cbnz	x2, 41acec <_obstack_memory_used@@Base+0x79bc>
  41acd0:	add	x0, x0, #0x1
  41acd4:	cmp	x0, #0x4
  41acd8:	b.ne	41acc8 <_obstack_memory_used@@Base+0x7998>  // b.any
  41acdc:	mov	x0, x20
  41ace0:	bl	402ae0 <free@plt>
  41ace4:	ldp	x21, x22, [sp, #32]
  41ace8:	b	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41acec:	cmp	w0, #0x3
  41acf0:	b.gt	41acdc <_obstack_memory_used@@Base+0x79ac>
  41acf4:	mov	w0, #0x3                   	// #3
  41acf8:	strb	w0, [sp, #264]
  41acfc:	str	x20, [sp, #256]
  41ad00:	add	x3, sp, #0x100
  41ad04:	mov	x2, #0x0                   	// #0
  41ad08:	mov	x1, #0x0                   	// #0
  41ad0c:	mov	x0, x23
  41ad10:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41ad14:	mov	x1, x0
  41ad18:	cbz	x0, 41ad74 <_obstack_memory_used@@Base+0x7a44>
  41ad1c:	mov	w3, #0xa                   	// #10
  41ad20:	mov	x2, x25
  41ad24:	mov	x0, x23
  41ad28:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41ad2c:	mov	x25, x0
  41ad30:	cbz	x0, 41ad74 <_obstack_memory_used@@Base+0x7a44>
  41ad34:	ldp	x21, x22, [sp, #32]
  41ad38:	b	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41ad3c:	mov	x0, x21
  41ad40:	bl	415fb0 <_obstack_memory_used@@Base+0x2c80>
  41ad44:	mov	w0, #0x3                   	// #3
  41ad48:	strb	w0, [sp, #264]
  41ad4c:	str	x20, [sp, #256]
  41ad50:	add	x3, sp, #0x100
  41ad54:	mov	x2, #0x0                   	// #0
  41ad58:	mov	x1, #0x0                   	// #0
  41ad5c:	mov	x0, x23
  41ad60:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41ad64:	mov	x25, x0
  41ad68:	cbz	x0, 41ad74 <_obstack_memory_used@@Base+0x7a44>
  41ad6c:	ldp	x21, x22, [sp, #32]
  41ad70:	b	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41ad74:	mov	w0, #0xc                   	// #12
  41ad78:	str	w0, [x28]
  41ad7c:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41ad80:	mov	w0, #0x6                   	// #6
  41ad84:	str	w0, [x5]
  41ad88:	mov	x25, #0x0                   	// #0
  41ad8c:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41ad90:	mov	w0, #0xc                   	// #12
  41ad94:	str	w0, [x28]
  41ad98:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41ad9c:	mov	w0, #0xd                   	// #13
  41ada0:	str	w0, [x28]
  41ada4:	mov	x25, #0x0                   	// #0
  41ada8:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41adac:	mov	x2, x27
  41adb0:	mov	x1, x26
  41adb4:	mov	x0, x24
  41adb8:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  41adbc:	mov	x5, x28
  41adc0:	mov	x4, x20
  41adc4:	mov	x3, x27
  41adc8:	mov	x2, x24
  41adcc:	mov	x1, x19
  41add0:	mov	x0, x26
  41add4:	bl	41a284 <_obstack_memory_used@@Base+0x6f54>
  41add8:	mov	x25, x0
  41addc:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41ade0:	tbnz	w27, #17, 41a3a0 <_obstack_memory_used@@Base+0x7070>
  41ade4:	mov	w0, #0x10                  	// #16
  41ade8:	str	w0, [x28]
  41adec:	mov	x25, #0x0                   	// #0
  41adf0:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41adf4:	ldr	w1, [x2]
  41adf8:	mov	w0, #0x30f                 	// #783
  41adfc:	tst	w1, w0
  41ae00:	b.eq	41ae0c <_obstack_memory_used@@Base+0x7adc>  // b.none
  41ae04:	ldrb	w0, [x23, #176]
  41ae08:	tbz	w0, #4, 41aea0 <_obstack_memory_used@@Base+0x7b70>
  41ae0c:	ldr	w0, [x24]
  41ae10:	sub	w1, w0, #0x100
  41ae14:	tst	w1, #0xfffffeff
  41ae18:	b.ne	41afb0 <_obstack_memory_used@@Base+0x7c80>  // b.any
  41ae1c:	cmp	w0, #0x100
  41ae20:	b.eq	41af74 <_obstack_memory_used@@Base+0x7c44>  // b.none
  41ae24:	mov	w0, #0x5                   	// #5
  41ae28:	str	w0, [x24]
  41ae2c:	mov	x3, x24
  41ae30:	mov	x2, #0x0                   	// #0
  41ae34:	mov	x1, #0x0                   	// #0
  41ae38:	mov	x0, x23
  41ae3c:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41ae40:	mov	x20, x0
  41ae44:	mov	w0, #0xa                   	// #10
  41ae48:	str	w0, [x24]
  41ae4c:	mov	x3, x24
  41ae50:	mov	x2, #0x0                   	// #0
  41ae54:	mov	x1, #0x0                   	// #0
  41ae58:	mov	x0, x23
  41ae5c:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41ae60:	mov	x19, x0
  41ae64:	mov	w3, #0xa                   	// #10
  41ae68:	mov	x2, x0
  41ae6c:	mov	x1, x20
  41ae70:	mov	x0, x23
  41ae74:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41ae78:	mov	x25, x0
  41ae7c:	cmp	x20, #0x0
  41ae80:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41ae84:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41ae88:	b.eq	41afa0 <_obstack_memory_used@@Base+0x7c70>  // b.none
  41ae8c:	mov	x2, x27
  41ae90:	mov	x1, x26
  41ae94:	mov	x0, x24
  41ae98:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  41ae9c:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41aea0:	ldrb	w0, [x23, #176]
  41aea4:	orr	w0, w0, #0x10
  41aea8:	strb	w0, [x23, #176]
  41aeac:	tbnz	w0, #3, 41aee4 <_obstack_memory_used@@Base+0x7bb4>
  41aeb0:	mov	x0, #0x3ff000000000000     	// #287948901175001088
  41aeb4:	str	x0, [x23, #184]
  41aeb8:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
  41aebc:	movk	x0, #0x87ff, lsl #16
  41aec0:	str	x0, [x23, #192]
  41aec4:	ldrb	w0, [x23, #176]
  41aec8:	tbz	w0, #2, 41aed4 <_obstack_memory_used@@Base+0x7ba4>
  41aecc:	stp	xzr, xzr, [x23, #200]
  41aed0:	b	41ae0c <_obstack_memory_used@@Base+0x7adc>
  41aed4:	stp	x21, x22, [sp, #32]
  41aed8:	mov	w20, #0x80                  	// #128
  41aedc:	mov	w19, #0x2                   	// #2
  41aee0:	b	41aef0 <_obstack_memory_used@@Base+0x7bc0>
  41aee4:	stp	x21, x22, [sp, #32]
  41aee8:	mov	w20, #0x0                   	// #0
  41aeec:	mov	w19, #0x0                   	// #0
  41aef0:	sxtw	x19, w19
  41aef4:	sbfiz	x21, x20, #1, #32
  41aef8:	bl	402ab0 <__ctype_b_loc@plt>
  41aefc:	mov	x5, x0
  41af00:	add	x4, x23, #0xb8
  41af04:	mov	x6, #0x1                   	// #1
  41af08:	b	41af60 <_obstack_memory_used@@Base+0x7c30>
  41af0c:	add	w0, w0, #0x1
  41af10:	add	x3, x3, #0x2
  41af14:	cmp	w0, #0x40
  41af18:	b.eq	41af4c <_obstack_memory_used@@Base+0x7c1c>  // b.none
  41af1c:	add	w2, w20, w0
  41af20:	ldr	x1, [x5]
  41af24:	ldrh	w1, [x1, x3]
  41af28:	and	w1, w1, #0x8
  41af2c:	cmp	w2, #0x5f
  41af30:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  41af34:	b.eq	41af0c <_obstack_memory_used@@Base+0x7bdc>  // b.none
  41af38:	lsl	x1, x6, x0
  41af3c:	ldr	x2, [x4, x19, lsl #3]
  41af40:	orr	x1, x2, x1
  41af44:	str	x1, [x4, x19, lsl #3]
  41af48:	b	41af0c <_obstack_memory_used@@Base+0x7bdc>
  41af4c:	add	w20, w20, #0x40
  41af50:	add	x19, x19, #0x1
  41af54:	add	x21, x21, #0x80
  41af58:	cmp	w19, #0x3
  41af5c:	b.gt	41af6c <_obstack_memory_used@@Base+0x7c3c>
  41af60:	mov	x3, x21
  41af64:	mov	w0, #0x0                   	// #0
  41af68:	b	41af1c <_obstack_memory_used@@Base+0x7bec>
  41af6c:	ldp	x21, x22, [sp, #32]
  41af70:	b	41ae0c <_obstack_memory_used@@Base+0x7adc>
  41af74:	mov	w0, #0x6                   	// #6
  41af78:	str	w0, [x24]
  41af7c:	mov	x3, x24
  41af80:	mov	x2, #0x0                   	// #0
  41af84:	mov	x1, #0x0                   	// #0
  41af88:	mov	x0, x23
  41af8c:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41af90:	mov	x20, x0
  41af94:	mov	w0, #0x9                   	// #9
  41af98:	str	w0, [x24]
  41af9c:	b	41ae4c <_obstack_memory_used@@Base+0x7b1c>
  41afa0:	mov	w0, #0xc                   	// #12
  41afa4:	str	w0, [x28]
  41afa8:	mov	x25, #0x0                   	// #0
  41afac:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41afb0:	mov	x3, x24
  41afb4:	mov	x2, #0x0                   	// #0
  41afb8:	mov	x1, #0x0                   	// #0
  41afbc:	mov	x0, x23
  41afc0:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41afc4:	mov	x25, x0
  41afc8:	cbnz	x0, 41ae8c <_obstack_memory_used@@Base+0x7b5c>
  41afcc:	mov	w0, #0xc                   	// #12
  41afd0:	str	w0, [x28]
  41afd4:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41afd8:	mov	x3, x2
  41afdc:	mov	x2, #0x0                   	// #0
  41afe0:	mov	x1, #0x0                   	// #0
  41afe4:	mov	x0, x23
  41afe8:	bl	4140ac <_obstack_memory_used@@Base+0xd7c>
  41afec:	mov	x25, x0
  41aff0:	cbz	x0, 41b010 <_obstack_memory_used@@Base+0x7ce0>
  41aff4:	ldr	w0, [x23, #180]
  41aff8:	cmp	w0, #0x1
  41affc:	b.le	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41b000:	ldrb	w0, [x23, #176]
  41b004:	orr	w0, w0, #0x2
  41b008:	strb	w0, [x23, #176]
  41b00c:	b	41a318 <_obstack_memory_used@@Base+0x6fe8>
  41b010:	mov	w0, #0xc                   	// #12
  41b014:	str	w0, [x28]
  41b018:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41b01c:	cmp	w0, #0x23
  41b020:	cset	w4, eq  // eq = none
  41b024:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xccd0>
  41b028:	add	x3, x3, #0xdb8
  41b02c:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xdcd0>
  41b030:	add	x2, x2, #0xb90
  41b034:	ldr	x1, [x26, #120]
  41b038:	mov	x0, x23
  41b03c:	bl	418148 <_obstack_memory_used@@Base+0x4e18>
  41b040:	mov	x25, x0
  41b044:	ldr	w0, [x28]
  41b048:	cmp	w0, #0x0
  41b04c:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  41b050:	b.ne	41a318 <_obstack_memory_used@@Base+0x6fe8>  // b.any
  41b054:	mov	x25, #0x0                   	// #0
  41b058:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41b05c:	mov	w0, #0x5                   	// #5
  41b060:	str	w0, [x5]
  41b064:	mov	x25, #0x0                   	// #0
  41b068:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41b06c:	mov	x2, x27
  41b070:	mov	x1, x24
  41b074:	mov	x0, x26
  41b078:	bl	415ee0 <_obstack_memory_used@@Base+0x2bb0>
  41b07c:	mov	x21, x0
  41b080:	cmn	x0, #0x1
  41b084:	b.eq	41b0c4 <_obstack_memory_used@@Base+0x7d94>  // b.none
  41b088:	cmn	x0, #0x2
  41b08c:	b.eq	41b0a4 <_obstack_memory_used@@Base+0x7d74>  // b.none
  41b090:	ldrb	w0, [x24, #8]
  41b094:	cmp	w0, #0x18
  41b098:	b.eq	41b1b8 <_obstack_memory_used@@Base+0x7e88>  // b.none
  41b09c:	cmp	w0, #0x1
  41b0a0:	b.eq	41b11c <_obstack_memory_used@@Base+0x7dec>  // b.none
  41b0a4:	tbnz	w27, #21, 41b0f0 <_obstack_memory_used@@Base+0x7dc0>
  41b0a8:	ldrb	w0, [x24, #8]
  41b0ac:	cmp	w0, #0x2
  41b0b0:	b.ne	41b1a8 <_obstack_memory_used@@Base+0x7e78>  // b.any
  41b0b4:	mov	w0, #0x9                   	// #9
  41b0b8:	str	w0, [x28]
  41b0bc:	mov	x0, #0x0                   	// #0
  41b0c0:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b0c4:	ldrb	w0, [x24, #8]
  41b0c8:	cmp	w0, #0x1
  41b0cc:	b.ne	41b10c <_obstack_memory_used@@Base+0x7ddc>  // b.any
  41b0d0:	ldrb	w0, [x24]
  41b0d4:	mov	x22, #0x0                   	// #0
  41b0d8:	cmp	w0, #0x2c
  41b0dc:	b.ne	41b10c <_obstack_memory_used@@Base+0x7ddc>  // b.any
  41b0e0:	ldrb	w0, [x24]
  41b0e4:	cmp	w0, #0x2c
  41b0e8:	b.eq	41b124 <_obstack_memory_used@@Base+0x7df4>  // b.none
  41b0ec:	tbz	w27, #21, 41b1a8 <_obstack_memory_used@@Base+0x7e78>
  41b0f0:	str	x20, [x26, #72]
  41b0f4:	ldp	x0, x1, [sp, #96]
  41b0f8:	stp	x0, x1, [x24]
  41b0fc:	mov	w0, #0x1                   	// #1
  41b100:	strb	w0, [x24, #8]
  41b104:	mov	x0, x25
  41b108:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b10c:	mov	w0, #0xa                   	// #10
  41b110:	str	w0, [x28]
  41b114:	mov	x0, #0x0                   	// #0
  41b118:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b11c:	mov	x22, x21
  41b120:	b	41b0e0 <_obstack_memory_used@@Base+0x7db0>
  41b124:	mov	x2, x27
  41b128:	mov	x1, x24
  41b12c:	mov	x0, x26
  41b130:	bl	415ee0 <_obstack_memory_used@@Base+0x2bb0>
  41b134:	mov	x21, x0
  41b138:	cmn	x22, #0x2
  41b13c:	ccmn	x0, #0x2, #0x4, ne  // ne = any
  41b140:	b.eq	41b0a4 <_obstack_memory_used@@Base+0x7d74>  // b.none
  41b144:	cmp	x0, x22
  41b148:	ccmn	x0, #0x1, #0x4, lt  // lt = tstop
  41b14c:	b.ne	41b1c0 <_obstack_memory_used@@Base+0x7e90>  // b.any
  41b150:	ldrb	w0, [x24, #8]
  41b154:	cmp	w0, #0x18
  41b158:	b.ne	41b1c0 <_obstack_memory_used@@Base+0x7e90>  // b.any
  41b15c:	cmn	x21, #0x1
  41b160:	b.eq	41b1d0 <_obstack_memory_used@@Base+0x7ea0>  // b.none
  41b164:	mov	x0, #0x7fff                	// #32767
  41b168:	cmp	x21, x0
  41b16c:	cset	x0, gt
  41b170:	cbnz	x0, 41b1e0 <_obstack_memory_used@@Base+0x7eb0>
  41b174:	mov	x2, x27
  41b178:	mov	x1, x26
  41b17c:	mov	x0, x24
  41b180:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  41b184:	cbz	x25, 41b3ec <_obstack_memory_used@@Base+0x80bc>
  41b188:	orr	x0, x21, x22
  41b18c:	cbnz	x0, 41b1f0 <_obstack_memory_used@@Base+0x7ec0>
  41b190:	mov	x2, #0x0                   	// #0
  41b194:	ldr	x1, [sp, #120]
  41b198:	mov	x0, x25
  41b19c:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41b1a0:	mov	x0, #0x0                   	// #0
  41b1a4:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b1a8:	mov	w0, #0xa                   	// #10
  41b1ac:	str	w0, [x28]
  41b1b0:	mov	x0, #0x0                   	// #0
  41b1b4:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b1b8:	mov	x22, x21
  41b1bc:	b	41b150 <_obstack_memory_used@@Base+0x7e20>
  41b1c0:	mov	w0, #0xa                   	// #10
  41b1c4:	str	w0, [x28]
  41b1c8:	mov	x0, #0x0                   	// #0
  41b1cc:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b1d0:	mov	x0, #0x7fff                	// #32767
  41b1d4:	cmp	x22, x0
  41b1d8:	cset	x0, gt
  41b1dc:	b	41b170 <_obstack_memory_used@@Base+0x7e40>
  41b1e0:	mov	w0, #0xf                   	// #15
  41b1e4:	str	w0, [x28]
  41b1e8:	mov	x0, #0x0                   	// #0
  41b1ec:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b1f0:	cmp	x22, #0x0
  41b1f4:	b.le	41b3cc <_obstack_memory_used@@Base+0x809c>
  41b1f8:	cmp	x22, #0x1
  41b1fc:	b.le	41b3b8 <_obstack_memory_used@@Base+0x8088>
  41b200:	str	x25, [sp, #96]
  41b204:	mov	x19, x25
  41b208:	mov	x20, #0x2                   	// #2
  41b20c:	mov	x1, x23
  41b210:	mov	x0, x19
  41b214:	bl	414168 <_obstack_memory_used@@Base+0xe38>
  41b218:	mov	x19, x0
  41b21c:	mov	w3, #0x10                  	// #16
  41b220:	mov	x2, x0
  41b224:	ldr	x1, [sp, #96]
  41b228:	mov	x0, x23
  41b22c:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41b230:	str	x0, [sp, #96]
  41b234:	cmp	x19, #0x0
  41b238:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41b23c:	b.eq	41b268 <_obstack_memory_used@@Base+0x7f38>  // b.none
  41b240:	add	x20, x20, #0x1
  41b244:	cmp	x20, x22
  41b248:	b.le	41b20c <_obstack_memory_used@@Base+0x7edc>
  41b24c:	cmp	x21, x22
  41b250:	b.eq	41b4ec <_obstack_memory_used@@Base+0x81bc>  // b.none
  41b254:	mov	x1, x23
  41b258:	mov	x0, x19
  41b25c:	bl	414168 <_obstack_memory_used@@Base+0xe38>
  41b260:	mov	x19, x0
  41b264:	cbnz	x0, 41b304 <_obstack_memory_used@@Base+0x7fd4>
  41b268:	mov	w0, #0xc                   	// #12
  41b26c:	str	w0, [x28]
  41b270:	mov	x0, #0x0                   	// #0
  41b274:	ldr	w1, [x28]
  41b278:	cmp	w1, #0x0
  41b27c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41b280:	b.eq	41b404 <_obstack_memory_used@@Base+0x80d4>  // b.none
  41b284:	mov	x25, x0
  41b288:	tbz	w27, #24, 41b29c <_obstack_memory_used@@Base+0x7f6c>
  41b28c:	ldrb	w0, [x24, #8]
  41b290:	cmp	w0, #0xb
  41b294:	ccmp	w0, #0x17, #0x4, ne  // ne = any
  41b298:	b.eq	41b428 <_obstack_memory_used@@Base+0x80f8>  // b.none
  41b29c:	ldrb	w1, [x24, #8]
  41b2a0:	cmp	w1, #0x12
  41b2a4:	cset	w19, eq  // eq = none
  41b2a8:	sub	w0, w1, #0x12
  41b2ac:	and	w0, w0, #0xff
  41b2b0:	cmp	w1, #0x17
  41b2b4:	ccmp	w1, #0xb, #0x4, ne  // ne = any
  41b2b8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  41b2bc:	b.hi	41b46c <_obstack_memory_used@@Base+0x813c>  // b.pmore
  41b2c0:	ldr	x20, [x26, #72]
  41b2c4:	ldp	x2, x3, [x24]
  41b2c8:	stp	x2, x3, [sp, #96]
  41b2cc:	cmp	w1, #0x17
  41b2d0:	b.eq	41b06c <_obstack_memory_used@@Base+0x7d3c>  // b.none
  41b2d4:	and	x22, x19, #0xff
  41b2d8:	mov	x21, #0xffffffffffffffff    	// #-1
  41b2dc:	cmp	w1, #0x13
  41b2e0:	cneg	x21, x21, eq  // eq = none
  41b2e4:	mov	x2, x27
  41b2e8:	mov	x1, x26
  41b2ec:	mov	x0, x24
  41b2f0:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  41b2f4:	cbz	x25, 41b3fc <_obstack_memory_used@@Base+0x80cc>
  41b2f8:	cbnz	w19, 41b3b8 <_obstack_memory_used@@Base+0x8088>
  41b2fc:	mov	x19, x25
  41b300:	str	xzr, [sp, #96]
  41b304:	ldrb	w0, [x19, #48]
  41b308:	cmp	w0, #0x11
  41b30c:	b.eq	41b3d8 <_obstack_memory_used@@Base+0x80a8>  // b.none
  41b310:	cmn	x21, #0x1
  41b314:	cset	w3, eq  // eq = none
  41b318:	add	w3, w3, #0xa
  41b31c:	mov	x2, #0x0                   	// #0
  41b320:	mov	x1, x19
  41b324:	mov	x0, x23
  41b328:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41b32c:	mov	x20, x0
  41b330:	cbz	x0, 41b268 <_obstack_memory_used@@Base+0x7f38>
  41b334:	add	x22, x22, #0x2
  41b338:	cmp	x21, x22
  41b33c:	b.lt	41b398 <_obstack_memory_used@@Base+0x8068>  // b.tstop
  41b340:	mov	x1, x23
  41b344:	mov	x0, x19
  41b348:	bl	414168 <_obstack_memory_used@@Base+0xe38>
  41b34c:	mov	x19, x0
  41b350:	mov	w3, #0x10                  	// #16
  41b354:	mov	x2, x0
  41b358:	mov	x1, x20
  41b35c:	mov	x0, x23
  41b360:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41b364:	mov	x1, x0
  41b368:	cmp	x19, #0x0
  41b36c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41b370:	b.eq	41b268 <_obstack_memory_used@@Base+0x7f38>  // b.none
  41b374:	mov	w3, #0xa                   	// #10
  41b378:	mov	x2, #0x0                   	// #0
  41b37c:	mov	x0, x23
  41b380:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41b384:	mov	x20, x0
  41b388:	cbz	x0, 41b268 <_obstack_memory_used@@Base+0x7f38>
  41b38c:	add	x22, x22, #0x1
  41b390:	cmp	x21, x22
  41b394:	b.ge	41b340 <_obstack_memory_used@@Base+0x8010>  // b.tcont
  41b398:	ldr	x0, [sp, #96]
  41b39c:	cbz	x0, 41b4e4 <_obstack_memory_used@@Base+0x81b4>
  41b3a0:	mov	w3, #0x10                  	// #16
  41b3a4:	mov	x2, x20
  41b3a8:	ldr	x1, [sp, #96]
  41b3ac:	mov	x0, x23
  41b3b0:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41b3b4:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b3b8:	cmp	x22, x21
  41b3bc:	b.eq	41b3f4 <_obstack_memory_used@@Base+0x80c4>  // b.none
  41b3c0:	mov	x19, x25
  41b3c4:	str	x25, [sp, #96]
  41b3c8:	b	41b254 <_obstack_memory_used@@Base+0x7f24>
  41b3cc:	mov	x19, x25
  41b3d0:	str	xzr, [sp, #96]
  41b3d4:	b	41b304 <_obstack_memory_used@@Base+0x7fd4>
  41b3d8:	ldr	x2, [x19, #40]
  41b3dc:	ldr	x1, [sp, #112]
  41b3e0:	mov	x0, x19
  41b3e4:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41b3e8:	b	41b310 <_obstack_memory_used@@Base+0x7fe0>
  41b3ec:	mov	x0, x25
  41b3f0:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b3f4:	mov	x0, x25
  41b3f8:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b3fc:	mov	x0, x25
  41b400:	b	41b274 <_obstack_memory_used@@Base+0x7f44>
  41b404:	cbz	x25, 41b520 <_obstack_memory_used@@Base+0x81f0>
  41b408:	mov	x2, #0x0                   	// #0
  41b40c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2cd0>
  41b410:	add	x1, x1, #0x38
  41b414:	mov	x0, x25
  41b418:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41b41c:	mov	x25, #0x0                   	// #0
  41b420:	ldp	x21, x22, [sp, #32]
  41b424:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41b428:	cbz	x25, 41b440 <_obstack_memory_used@@Base+0x8110>
  41b42c:	mov	x2, #0x0                   	// #0
  41b430:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2cd0>
  41b434:	add	x1, x1, #0x38
  41b438:	mov	x0, x25
  41b43c:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41b440:	mov	w0, #0xd                   	// #13
  41b444:	str	w0, [x28]
  41b448:	mov	x25, #0x0                   	// #0
  41b44c:	ldp	x21, x22, [sp, #32]
  41b450:	mov	x0, x25
  41b454:	ldp	x19, x20, [sp, #16]
  41b458:	ldp	x23, x24, [sp, #48]
  41b45c:	ldp	x25, x26, [sp, #64]
  41b460:	ldp	x27, x28, [sp, #80]
  41b464:	ldp	x29, x30, [sp], #288
  41b468:	ret
  41b46c:	ldp	x21, x22, [sp, #32]
  41b470:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41b474:	mov	x25, #0x0                   	// #0
  41b478:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41b47c:	mov	x25, #0x0                   	// #0
  41b480:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41b484:	mov	x25, #0x0                   	// #0
  41b488:	ldp	x21, x22, [sp, #32]
  41b48c:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41b490:	mov	w0, #0x3                   	// #3
  41b494:	str	w0, [x28]
  41b498:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41b49c:	mov	w0, #0x3                   	// #3
  41b4a0:	str	w0, [x28]
  41b4a4:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41b4a8:	mov	w0, #0xb                   	// #11
  41b4ac:	b	41b4b4 <_obstack_memory_used@@Base+0x8184>
  41b4b0:	mov	w0, #0xb                   	// #11
  41b4b4:	str	w0, [x28]
  41b4b8:	b	41a718 <_obstack_memory_used@@Base+0x73e8>
  41b4bc:	mov	w0, #0x3                   	// #3
  41b4c0:	b	41b4b4 <_obstack_memory_used@@Base+0x8184>
  41b4c4:	mov	w0, #0x3                   	// #3
  41b4c8:	b	41b4b4 <_obstack_memory_used@@Base+0x8184>
  41b4cc:	mov	w0, #0x3                   	// #3
  41b4d0:	b	41b4b4 <_obstack_memory_used@@Base+0x8184>
  41b4d4:	mov	w0, #0xb                   	// #11
  41b4d8:	b	41b4b4 <_obstack_memory_used@@Base+0x8184>
  41b4dc:	str	wzr, [x28]
  41b4e0:	b	41aaa0 <_obstack_memory_used@@Base+0x7770>
  41b4e4:	mov	x25, x20
  41b4e8:	b	41b288 <_obstack_memory_used@@Base+0x7f58>
  41b4ec:	ldr	x25, [sp, #96]
  41b4f0:	b	41b288 <_obstack_memory_used@@Base+0x7f58>
  41b4f4:	ldr	w0, [sp, #128]
  41b4f8:	cmp	w0, #0x0
  41b4fc:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  41b500:	b.ne	41a880 <_obstack_memory_used@@Base+0x7550>  // b.any
  41b504:	b	41a884 <_obstack_memory_used@@Base+0x7554>
  41b508:	ldr	x0, [sp, #200]
  41b50c:	bl	402690 <strlen@plt>
  41b510:	cmp	x0, #0x1
  41b514:	b.ls	41a908 <_obstack_memory_used@@Base+0x75d8>  // b.plast
  41b518:	mov	w0, #0x3                   	// #3
  41b51c:	b	41b4b4 <_obstack_memory_used@@Base+0x8184>
  41b520:	ldp	x21, x22, [sp, #32]
  41b524:	b	41b450 <_obstack_memory_used@@Base+0x8120>
  41b528:	stp	x29, x30, [sp, #-96]!
  41b52c:	mov	x29, sp
  41b530:	stp	x19, x20, [sp, #16]
  41b534:	stp	x21, x22, [sp, #32]
  41b538:	stp	x23, x24, [sp, #48]
  41b53c:	stp	x25, x26, [sp, #64]
  41b540:	stp	x27, x28, [sp, #80]
  41b544:	mov	x26, x0
  41b548:	mov	x25, x1
  41b54c:	mov	x22, x2
  41b550:	mov	x27, x3
  41b554:	mov	x23, x4
  41b558:	mov	x21, x5
  41b55c:	ldr	x28, [x1]
  41b560:	bl	41a284 <_obstack_memory_used@@Base+0x6f54>
  41b564:	mov	x20, x0
  41b568:	ldr	w0, [x21]
  41b56c:	cmp	w0, #0x0
  41b570:	ccmp	x20, #0x0, #0x0, ne  // ne = any
  41b574:	b.eq	41b68c <_obstack_memory_used@@Base+0x835c>  // b.none
  41b578:	ldrb	w1, [x22, #8]
  41b57c:	and	w0, w1, #0xfffffff7
  41b580:	and	w0, w0, #0xff
  41b584:	cmp	w0, #0x2
  41b588:	b.ne	41b5e4 <_obstack_memory_used@@Base+0x82b4>  // b.any
  41b58c:	b	41b66c <_obstack_memory_used@@Base+0x833c>
  41b590:	cbz	x20, 41b66c <_obstack_memory_used@@Base+0x833c>
  41b594:	mov	x2, #0x0                   	// #0
  41b598:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2cd0>
  41b59c:	add	x1, x1, #0x38
  41b5a0:	mov	x0, x20
  41b5a4:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41b5a8:	mov	x20, #0x0                   	// #0
  41b5ac:	b	41b66c <_obstack_memory_used@@Base+0x833c>
  41b5b0:	mov	w3, #0x10                  	// #16
  41b5b4:	mov	x2, x19
  41b5b8:	mov	x1, x20
  41b5bc:	mov	x0, x28
  41b5c0:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41b5c4:	mov	x24, x0
  41b5c8:	cbz	x0, 41b638 <_obstack_memory_used@@Base+0x8308>
  41b5cc:	mov	x20, x0
  41b5d0:	ldrb	w1, [x22, #8]
  41b5d4:	and	w0, w1, #0xfffffff7
  41b5d8:	and	w0, w0, #0xff
  41b5dc:	cmp	w0, #0x2
  41b5e0:	b.eq	41b66c <_obstack_memory_used@@Base+0x833c>  // b.none
  41b5e4:	cmp	x23, #0x0
  41b5e8:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  41b5ec:	b.eq	41b66c <_obstack_memory_used@@Base+0x833c>  // b.none
  41b5f0:	mov	x5, x21
  41b5f4:	mov	x4, x23
  41b5f8:	mov	x3, x27
  41b5fc:	mov	x2, x22
  41b600:	mov	x1, x25
  41b604:	mov	x0, x26
  41b608:	bl	41a284 <_obstack_memory_used@@Base+0x6f54>
  41b60c:	mov	x19, x0
  41b610:	ldr	w0, [x21]
  41b614:	cmp	w0, #0x0
  41b618:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  41b61c:	b.eq	41b590 <_obstack_memory_used@@Base+0x8260>  // b.none
  41b620:	cmp	x20, #0x0
  41b624:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41b628:	b.ne	41b5b0 <_obstack_memory_used@@Base+0x8280>  // b.any
  41b62c:	cmp	x20, #0x0
  41b630:	csel	x20, x20, x19, ne  // ne = any
  41b634:	b	41b5d0 <_obstack_memory_used@@Base+0x82a0>
  41b638:	adrp	x22, 416000 <_obstack_memory_used@@Base+0x2cd0>
  41b63c:	add	x22, x22, #0x38
  41b640:	mov	x2, #0x0                   	// #0
  41b644:	mov	x1, x22
  41b648:	mov	x0, x19
  41b64c:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41b650:	mov	x2, #0x0                   	// #0
  41b654:	mov	x1, x22
  41b658:	mov	x0, x20
  41b65c:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41b660:	mov	w0, #0xc                   	// #12
  41b664:	str	w0, [x21]
  41b668:	mov	x20, x24
  41b66c:	mov	x0, x20
  41b670:	ldp	x19, x20, [sp, #16]
  41b674:	ldp	x21, x22, [sp, #32]
  41b678:	ldp	x23, x24, [sp, #48]
  41b67c:	ldp	x25, x26, [sp, #64]
  41b680:	ldp	x27, x28, [sp, #80]
  41b684:	ldp	x29, x30, [sp], #96
  41b688:	ret
  41b68c:	mov	x20, #0x0                   	// #0
  41b690:	b	41b66c <_obstack_memory_used@@Base+0x833c>
  41b694:	stp	x29, x30, [sp, #-112]!
  41b698:	mov	x29, sp
  41b69c:	stp	x19, x20, [sp, #16]
  41b6a0:	stp	x21, x22, [sp, #32]
  41b6a4:	stp	x23, x24, [sp, #48]
  41b6a8:	stp	x25, x26, [sp, #64]
  41b6ac:	stp	x27, x28, [sp, #80]
  41b6b0:	mov	x22, x0
  41b6b4:	str	x1, [sp, #96]
  41b6b8:	mov	x20, x2
  41b6bc:	mov	x25, x3
  41b6c0:	str	x3, [sp, #104]
  41b6c4:	mov	x24, x4
  41b6c8:	mov	x23, x5
  41b6cc:	ldr	x21, [x1]
  41b6d0:	ldr	x28, [x21, #168]
  41b6d4:	bl	41b528 <_obstack_memory_used@@Base+0x81f8>
  41b6d8:	mov	x19, x0
  41b6dc:	ldr	w0, [x23]
  41b6e0:	cmp	w0, #0x0
  41b6e4:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  41b6e8:	b.eq	41b7e8 <_obstack_memory_used@@Base+0x84b8>  // b.none
  41b6ec:	orr	x25, x25, #0x800000
  41b6f0:	mov	w26, #0xa                   	// #10
  41b6f4:	b	41b734 <_obstack_memory_used@@Base+0x8404>
  41b6f8:	cbz	x19, 41b7c8 <_obstack_memory_used@@Base+0x8498>
  41b6fc:	mov	x2, #0x0                   	// #0
  41b700:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2cd0>
  41b704:	add	x1, x1, #0x38
  41b708:	mov	x0, x19
  41b70c:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41b710:	mov	x19, #0x0                   	// #0
  41b714:	b	41b7c8 <_obstack_memory_used@@Base+0x8498>
  41b718:	mov	x2, #0x0                   	// #0
  41b71c:	mov	w3, w26
  41b720:	mov	x1, x19
  41b724:	mov	x0, x21
  41b728:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41b72c:	mov	x19, x0
  41b730:	cbz	x0, 41b7c0 <_obstack_memory_used@@Base+0x8490>
  41b734:	ldrb	w0, [x20, #8]
  41b738:	cmp	w0, #0xa
  41b73c:	b.ne	41b7c8 <_obstack_memory_used@@Base+0x8498>  // b.any
  41b740:	mov	x2, x25
  41b744:	mov	x1, x22
  41b748:	mov	x0, x20
  41b74c:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  41b750:	ldrb	w1, [x20, #8]
  41b754:	and	w0, w1, #0xfffffff7
  41b758:	and	w0, w0, #0xff
  41b75c:	cmp	w0, #0x2
  41b760:	b.eq	41b718 <_obstack_memory_used@@Base+0x83e8>  // b.none
  41b764:	cmp	x24, #0x0
  41b768:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  41b76c:	b.eq	41b7b8 <_obstack_memory_used@@Base+0x8488>  // b.none
  41b770:	ldr	x27, [x21, #168]
  41b774:	str	x28, [x21, #168]
  41b778:	mov	x5, x23
  41b77c:	mov	x4, x24
  41b780:	ldr	x3, [sp, #104]
  41b784:	mov	x2, x20
  41b788:	ldr	x1, [sp, #96]
  41b78c:	mov	x0, x22
  41b790:	bl	41b528 <_obstack_memory_used@@Base+0x81f8>
  41b794:	mov	x2, x0
  41b798:	ldr	w0, [x23]
  41b79c:	cmp	w0, #0x0
  41b7a0:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  41b7a4:	b.eq	41b6f8 <_obstack_memory_used@@Base+0x83c8>  // b.none
  41b7a8:	ldr	x0, [x21, #168]
  41b7ac:	orr	x27, x0, x27
  41b7b0:	str	x27, [x21, #168]
  41b7b4:	b	41b71c <_obstack_memory_used@@Base+0x83ec>
  41b7b8:	mov	x2, #0x0                   	// #0
  41b7bc:	b	41b71c <_obstack_memory_used@@Base+0x83ec>
  41b7c0:	mov	w0, #0xc                   	// #12
  41b7c4:	str	w0, [x23]
  41b7c8:	mov	x0, x19
  41b7cc:	ldp	x19, x20, [sp, #16]
  41b7d0:	ldp	x21, x22, [sp, #32]
  41b7d4:	ldp	x23, x24, [sp, #48]
  41b7d8:	ldp	x25, x26, [sp, #64]
  41b7dc:	ldp	x27, x28, [sp, #80]
  41b7e0:	ldp	x29, x30, [sp], #112
  41b7e4:	ret
  41b7e8:	mov	x19, #0x0                   	// #0
  41b7ec:	b	41b7c8 <_obstack_memory_used@@Base+0x8498>
  41b7f0:	stp	x29, x30, [sp, #-80]!
  41b7f4:	mov	x29, sp
  41b7f8:	stp	x19, x20, [sp, #16]
  41b7fc:	stp	x21, x22, [sp, #32]
  41b800:	stp	x23, x24, [sp, #48]
  41b804:	mov	x23, x0
  41b808:	mov	x22, x1
  41b80c:	ldr	x1, [x2, #8]
  41b810:	cbz	x1, 41b870 <_obstack_memory_used@@Base+0x8540>
  41b814:	stp	x25, x26, [sp, #64]
  41b818:	mov	x25, x2
  41b81c:	mov	x21, x1
  41b820:	cmp	x1, #0x0
  41b824:	b.le	41b840 <_obstack_memory_used@@Base+0x8510>
  41b828:	ldr	x3, [x2, #16]
  41b82c:	add	x1, x3, x1, lsl #3
  41b830:	ldr	x0, [x3], #8
  41b834:	add	x21, x21, x0
  41b838:	cmp	x3, x1
  41b83c:	b.ne	41b830 <_obstack_memory_used@@Base+0x8500>  // b.any
  41b840:	ldr	x0, [x22, #136]
  41b844:	and	x0, x21, x0
  41b848:	add	x0, x0, x0, lsl #1
  41b84c:	lsl	x0, x0, #3
  41b850:	ldr	x1, [x22, #64]
  41b854:	add	x2, x1, x0
  41b858:	ldr	x24, [x1, x0]
  41b85c:	cmp	x24, #0x0
  41b860:	b.le	41b8b4 <_obstack_memory_used@@Base+0x8584>
  41b864:	ldr	x26, [x2, #16]
  41b868:	mov	x20, #0x0                   	// #0
  41b86c:	b	41b888 <_obstack_memory_used@@Base+0x8558>
  41b870:	str	wzr, [x0]
  41b874:	mov	x19, #0x0                   	// #0
  41b878:	b	41b9e8 <_obstack_memory_used@@Base+0x86b8>
  41b87c:	add	x20, x20, #0x1
  41b880:	cmp	x24, x20
  41b884:	b.eq	41b8b4 <_obstack_memory_used@@Base+0x8584>  // b.none
  41b888:	ldr	x19, [x26, x20, lsl #3]
  41b88c:	ldr	x0, [x19]
  41b890:	cmp	x21, x0
  41b894:	b.ne	41b87c <_obstack_memory_used@@Base+0x854c>  // b.any
  41b898:	mov	x1, x25
  41b89c:	add	x0, x19, #0x8
  41b8a0:	bl	41342c <_obstack_memory_used@@Base+0xfc>
  41b8a4:	and	w0, w0, #0xff
  41b8a8:	cbz	w0, 41b87c <_obstack_memory_used@@Base+0x854c>
  41b8ac:	ldp	x25, x26, [sp, #64]
  41b8b0:	b	41b9e8 <_obstack_memory_used@@Base+0x86b8>
  41b8b4:	mov	x1, #0x1                   	// #1
  41b8b8:	mov	x0, #0x70                  	// #112
  41b8bc:	bl	402910 <calloc@plt>
  41b8c0:	mov	x19, x0
  41b8c4:	cbz	x0, 41b904 <_obstack_memory_used@@Base+0x85d4>
  41b8c8:	add	x20, x0, #0x8
  41b8cc:	mov	x1, x25
  41b8d0:	mov	x0, x20
  41b8d4:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  41b8d8:	cbnz	w0, 41b8fc <_obstack_memory_used@@Base+0x85cc>
  41b8dc:	str	x20, [x19, #80]
  41b8e0:	ldr	x6, [x25, #8]
  41b8e4:	cmp	x6, #0x0
  41b8e8:	b.le	41b9d0 <_obstack_memory_used@@Base+0x86a0>
  41b8ec:	ldr	x7, [x22]
  41b8f0:	ldr	x0, [x25, #16]
  41b8f4:	add	x6, x0, x6, lsl #3
  41b8f8:	b	41b968 <_obstack_memory_used@@Base+0x8638>
  41b8fc:	mov	x0, x19
  41b900:	bl	402ae0 <free@plt>
  41b904:	mov	w0, #0xc                   	// #12
  41b908:	str	w0, [x23]
  41b90c:	mov	x19, #0x0                   	// #0
  41b910:	ldp	x25, x26, [sp, #64]
  41b914:	b	41b9e8 <_obstack_memory_used@@Base+0x86b8>
  41b918:	ldr	w1, [x2, #8]
  41b91c:	tst	w1, #0x3ff00
  41b920:	b.eq	41b95c <_obstack_memory_used@@Base+0x862c>  // b.none
  41b924:	ldrb	w1, [x19, #104]
  41b928:	ubfx	x3, x1, #5, #1
  41b92c:	ldrb	w4, [x2, #10]
  41b930:	ubfx	x4, x4, #4, #1
  41b934:	orr	w3, w3, w4
  41b938:	bfi	w1, w3, #5, #1
  41b93c:	strb	w1, [x19, #104]
  41b940:	ldr	w1, [x2, #8]
  41b944:	tst	w1, #0x3ff00
  41b948:	b.eq	41b95c <_obstack_memory_used@@Base+0x862c>  // b.none
  41b94c:	b	41b9c0 <_obstack_memory_used@@Base+0x8690>
  41b950:	and	x1, x1, #0xff
  41b954:	orr	w1, w1, #0x10
  41b958:	strb	w1, [x19, #104]
  41b95c:	add	x0, x0, #0x8
  41b960:	cmp	x6, x0
  41b964:	b.eq	41b9d0 <_obstack_memory_used@@Base+0x86a0>  // b.none
  41b968:	ldr	x2, [x0]
  41b96c:	add	x2, x7, x2, lsl #4
  41b970:	ldrb	w3, [x2, #8]
  41b974:	cmp	w3, #0x1
  41b978:	b.eq	41b918 <_obstack_memory_used@@Base+0x85e8>  // b.none
  41b97c:	ldrb	w1, [x19, #104]
  41b980:	ubfx	x4, x1, #5, #1
  41b984:	ldrb	w5, [x2, #10]
  41b988:	ubfx	x5, x5, #4, #1
  41b98c:	orr	w4, w4, w5
  41b990:	bfi	w1, w4, #5, #1
  41b994:	strb	w1, [x19, #104]
  41b998:	cmp	w3, #0x2
  41b99c:	b.eq	41b950 <_obstack_memory_used@@Base+0x8620>  // b.none
  41b9a0:	cmp	w3, #0x4
  41b9a4:	b.ne	41b9b8 <_obstack_memory_used@@Base+0x8688>  // b.any
  41b9a8:	ldrb	w1, [x19, #104]
  41b9ac:	orr	w1, w1, #0x40
  41b9b0:	strb	w1, [x19, #104]
  41b9b4:	b	41b95c <_obstack_memory_used@@Base+0x862c>
  41b9b8:	cmp	w3, #0xc
  41b9bc:	b.ne	41b940 <_obstack_memory_used@@Base+0x8610>  // b.any
  41b9c0:	ldrb	w1, [x19, #104]
  41b9c4:	orr	w1, w1, #0xffffff80
  41b9c8:	strb	w1, [x19, #104]
  41b9cc:	b	41b95c <_obstack_memory_used@@Base+0x862c>
  41b9d0:	mov	x2, x21
  41b9d4:	mov	x1, x19
  41b9d8:	mov	x0, x22
  41b9dc:	bl	4146e8 <_obstack_memory_used@@Base+0x13b8>
  41b9e0:	cbnz	w0, 41ba00 <_obstack_memory_used@@Base+0x86d0>
  41b9e4:	ldp	x25, x26, [sp, #64]
  41b9e8:	mov	x0, x19
  41b9ec:	ldp	x19, x20, [sp, #16]
  41b9f0:	ldp	x21, x22, [sp, #32]
  41b9f4:	ldp	x23, x24, [sp, #48]
  41b9f8:	ldp	x29, x30, [sp], #80
  41b9fc:	ret
  41ba00:	mov	x0, x19
  41ba04:	bl	4168d8 <_obstack_memory_used@@Base+0x35a8>
  41ba08:	b	41b904 <_obstack_memory_used@@Base+0x85d4>
  41ba0c:	cmp	x3, #0x0
  41ba10:	b.le	41babc <_obstack_memory_used@@Base+0x878c>
  41ba14:	stp	x29, x30, [sp, #-96]!
  41ba18:	mov	x29, sp
  41ba1c:	stp	x19, x20, [sp, #16]
  41ba20:	stp	x21, x22, [sp, #32]
  41ba24:	stp	x23, x24, [sp, #48]
  41ba28:	mov	x24, x0
  41ba2c:	mov	x20, x1
  41ba30:	mov	x23, x2
  41ba34:	mov	x21, x3
  41ba38:	mov	x19, #0x0                   	// #0
  41ba3c:	b	41ba54 <_obstack_memory_used@@Base+0x8724>
  41ba40:	ldr	x0, [x23, x19, lsl #3]
  41ba44:	str	x0, [x20, x19, lsl #3]
  41ba48:	add	x19, x19, #0x1
  41ba4c:	cmp	x21, x19
  41ba50:	b.eq	41baa4 <_obstack_memory_used@@Base+0x8774>  // b.none
  41ba54:	ldr	x1, [x20, x19, lsl #3]
  41ba58:	cbz	x1, 41ba40 <_obstack_memory_used@@Base+0x8710>
  41ba5c:	ldr	x2, [x23, x19, lsl #3]
  41ba60:	cbz	x2, 41ba48 <_obstack_memory_used@@Base+0x8718>
  41ba64:	add	x2, x2, #0x8
  41ba68:	add	x1, x1, #0x8
  41ba6c:	add	x0, sp, #0x40
  41ba70:	bl	414e4c <_obstack_memory_used@@Base+0x1b1c>
  41ba74:	str	w0, [sp, #92]
  41ba78:	cbnz	w0, 41baa8 <_obstack_memory_used@@Base+0x8778>
  41ba7c:	add	x2, sp, #0x40
  41ba80:	mov	x1, x24
  41ba84:	add	x0, sp, #0x5c
  41ba88:	bl	41b7f0 <_obstack_memory_used@@Base+0x84c0>
  41ba8c:	str	x0, [x20, x19, lsl #3]
  41ba90:	ldr	x0, [sp, #80]
  41ba94:	bl	402ae0 <free@plt>
  41ba98:	ldr	w0, [sp, #92]
  41ba9c:	cbz	w0, 41ba48 <_obstack_memory_used@@Base+0x8718>
  41baa0:	b	41baa8 <_obstack_memory_used@@Base+0x8778>
  41baa4:	mov	w0, #0x0                   	// #0
  41baa8:	ldp	x19, x20, [sp, #16]
  41baac:	ldp	x21, x22, [sp, #32]
  41bab0:	ldp	x23, x24, [sp, #48]
  41bab4:	ldp	x29, x30, [sp], #96
  41bab8:	ret
  41babc:	mov	w0, #0x0                   	// #0
  41bac0:	ret
  41bac4:	stp	x29, x30, [sp, #-144]!
  41bac8:	mov	x29, sp
  41bacc:	stp	x21, x22, [sp, #32]
  41bad0:	stp	x23, x24, [sp, #48]
  41bad4:	stp	x27, x28, [sp, #80]
  41bad8:	mov	x24, x0
  41badc:	mov	x23, x1
  41bae0:	mov	x22, x2
  41bae4:	str	x3, [sp, #104]
  41bae8:	mov	w28, w4
  41baec:	mov	x1, x2
  41baf0:	bl	413a80 <_obstack_memory_used@@Base+0x750>
  41baf4:	cmn	x0, #0x1
  41baf8:	b.eq	41bcd8 <_obstack_memory_used@@Base+0x89a8>  // b.none
  41bafc:	stp	x19, x20, [sp, #16]
  41bb00:	stp	x25, x26, [sp, #64]
  41bb04:	ldr	x25, [x24, #152]
  41bb08:	add	x0, x0, x0, lsl #2
  41bb0c:	lsl	x27, x0, #3
  41bb10:	b	41bb88 <_obstack_memory_used@@Base+0x8858>
  41bb14:	ldr	x0, [x25, #40]
  41bb18:	add	x21, x21, x21, lsl #1
  41bb1c:	add	x21, x0, x21, lsl #3
  41bb20:	ldr	x0, [x21, #16]
  41bb24:	ldr	x20, [x0]
  41bb28:	mov	x1, x20
  41bb2c:	mov	x0, x23
  41bb30:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41bb34:	cbnz	x0, 41bbec <_obstack_memory_used@@Base+0x88bc>
  41bb38:	mov	x1, x20
  41bb3c:	add	x0, sp, #0x70
  41bb40:	bl	41441c <_obstack_memory_used@@Base+0x10ec>
  41bb44:	str	w0, [sp, #140]
  41bb48:	mov	w3, w28
  41bb4c:	ldr	x2, [sp, #104]
  41bb50:	add	x1, sp, #0x70
  41bb54:	mov	x0, x25
  41bb58:	bl	417498 <_obstack_memory_used@@Base+0x4168>
  41bb5c:	mov	w19, w0
  41bb60:	add	x1, sp, #0x70
  41bb64:	mov	x0, x23
  41bb68:	bl	414a6c <_obstack_memory_used@@Base+0x173c>
  41bb6c:	mov	w20, w0
  41bb70:	ldr	x0, [sp, #128]
  41bb74:	bl	402ae0 <free@plt>
  41bb78:	ldr	w0, [sp, #140]
  41bb7c:	orr	w1, w19, w20
  41bb80:	orr	w1, w1, w0
  41bb84:	cbnz	w1, 41bb94 <_obstack_memory_used@@Base+0x8864>
  41bb88:	ldr	x19, [x24, #216]
  41bb8c:	add	x19, x19, x27
  41bb90:	b	41bbf8 <_obstack_memory_used@@Base+0x88c8>
  41bb94:	cbnz	w0, 41bce0 <_obstack_memory_used@@Base+0x89b0>
  41bb98:	cmp	w19, #0x0
  41bb9c:	csel	w0, w19, w20, ne  // ne = any
  41bba0:	ldp	x19, x20, [sp, #16]
  41bba4:	ldp	x25, x26, [sp, #64]
  41bba8:	b	41bcc4 <_obstack_memory_used@@Base+0x8994>
  41bbac:	mov	x1, x26
  41bbb0:	add	x0, sp, #0x70
  41bbb4:	bl	41441c <_obstack_memory_used@@Base+0x10ec>
  41bbb8:	str	w0, [sp, #140]
  41bbbc:	cbnz	w0, 41bcec <_obstack_memory_used@@Base+0x89bc>
  41bbc0:	ldr	x21, [x24, #184]
  41bbc4:	add	x2, sp, #0x70
  41bbc8:	mov	x1, x25
  41bbcc:	add	x0, sp, #0x8c
  41bbd0:	bl	41b7f0 <_obstack_memory_used@@Base+0x84c0>
  41bbd4:	str	x0, [x21, x20, lsl #3]
  41bbd8:	ldr	x0, [sp, #128]
  41bbdc:	bl	402ae0 <free@plt>
  41bbe0:	ldr	x0, [x24, #184]
  41bbe4:	ldr	x0, [x0, x20, lsl #3]
  41bbe8:	cbz	x0, 41bca8 <_obstack_memory_used@@Base+0x8978>
  41bbec:	add	x19, x19, #0x28
  41bbf0:	ldurb	w0, [x19, #-8]
  41bbf4:	cbz	w0, 41bcbc <_obstack_memory_used@@Base+0x898c>
  41bbf8:	ldr	x21, [x19]
  41bbfc:	mov	x1, x21
  41bc00:	mov	x0, x23
  41bc04:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41bc08:	cbz	x0, 41bbec <_obstack_memory_used@@Base+0x88bc>
  41bc0c:	ldr	x20, [x19, #24]
  41bc10:	add	x20, x22, x20
  41bc14:	ldr	x0, [x19, #16]
  41bc18:	sub	x20, x20, x0
  41bc1c:	cmp	x22, x20
  41bc20:	b.eq	41bb14 <_obstack_memory_used@@Base+0x87e4>  // b.none
  41bc24:	ldr	x0, [x25, #24]
  41bc28:	ldr	x26, [x0, x21, lsl #3]
  41bc2c:	ldr	x0, [x24, #184]
  41bc30:	ldr	x21, [x0, x20, lsl #3]
  41bc34:	cbz	x21, 41bbac <_obstack_memory_used@@Base+0x887c>
  41bc38:	add	x21, x21, #0x8
  41bc3c:	mov	x1, x26
  41bc40:	mov	x0, x21
  41bc44:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41bc48:	cbnz	x0, 41bbec <_obstack_memory_used@@Base+0x88bc>
  41bc4c:	mov	x1, x21
  41bc50:	add	x0, sp, #0x70
  41bc54:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  41bc58:	str	w0, [sp, #140]
  41bc5c:	mov	x1, x26
  41bc60:	add	x0, sp, #0x70
  41bc64:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  41bc68:	and	w0, w0, #0xff
  41bc6c:	ldr	w1, [sp, #140]
  41bc70:	cmp	w1, #0x0
  41bc74:	cset	w1, ne  // ne = any
  41bc78:	eor	w0, w0, #0x1
  41bc7c:	orr	w0, w1, w0
  41bc80:	cbz	w0, 41bbc0 <_obstack_memory_used@@Base+0x8890>
  41bc84:	ldr	x0, [sp, #128]
  41bc88:	bl	402ae0 <free@plt>
  41bc8c:	ldr	w0, [sp, #140]
  41bc90:	cmp	w0, #0x0
  41bc94:	mov	w1, #0xc                   	// #12
  41bc98:	csel	w0, w0, w1, ne  // ne = any
  41bc9c:	ldp	x19, x20, [sp, #16]
  41bca0:	ldp	x25, x26, [sp, #64]
  41bca4:	b	41bcc4 <_obstack_memory_used@@Base+0x8994>
  41bca8:	ldr	w0, [sp, #140]
  41bcac:	cbz	w0, 41bbec <_obstack_memory_used@@Base+0x88bc>
  41bcb0:	ldp	x19, x20, [sp, #16]
  41bcb4:	ldp	x25, x26, [sp, #64]
  41bcb8:	b	41bcc4 <_obstack_memory_used@@Base+0x8994>
  41bcbc:	ldp	x19, x20, [sp, #16]
  41bcc0:	ldp	x25, x26, [sp, #64]
  41bcc4:	ldp	x21, x22, [sp, #32]
  41bcc8:	ldp	x23, x24, [sp, #48]
  41bccc:	ldp	x27, x28, [sp, #80]
  41bcd0:	ldp	x29, x30, [sp], #144
  41bcd4:	ret
  41bcd8:	mov	w0, #0x0                   	// #0
  41bcdc:	b	41bcc4 <_obstack_memory_used@@Base+0x8994>
  41bce0:	ldp	x19, x20, [sp, #16]
  41bce4:	ldp	x25, x26, [sp, #64]
  41bce8:	b	41bcc4 <_obstack_memory_used@@Base+0x8994>
  41bcec:	ldp	x19, x20, [sp, #16]
  41bcf0:	ldp	x25, x26, [sp, #64]
  41bcf4:	b	41bcc4 <_obstack_memory_used@@Base+0x8994>
  41bcf8:	stp	x29, x30, [sp, #-240]!
  41bcfc:	mov	x29, sp
  41bd00:	stp	x19, x20, [sp, #16]
  41bd04:	stp	x21, x22, [sp, #32]
  41bd08:	stp	x23, x24, [sp, #48]
  41bd0c:	stp	x27, x28, [sp, #80]
  41bd10:	mov	x19, x0
  41bd14:	mov	x7, x1
  41bd18:	str	x1, [sp, #144]
  41bd1c:	mov	x20, x2
  41bd20:	mov	x23, x3
  41bd24:	str	x4, [sp, #168]
  41bd28:	str	x5, [sp, #120]
  41bd2c:	str	w6, [sp, #140]
  41bd30:	ldr	x27, [x0, #152]
  41bd34:	str	wzr, [sp, #236]
  41bd38:	ldr	x1, [x27]
  41bd3c:	lsl	x0, x2, #4
  41bd40:	ldr	x0, [x1, x0]
  41bd44:	str	x0, [sp, #128]
  41bd48:	ldrsw	x22, [x19, #224]
  41bd4c:	add	x22, x22, x5
  41bd50:	ldr	x21, [x7, #8]
  41bd54:	cmp	x22, x21
  41bd58:	b.ge	41be2c <_obstack_memory_used@@Base+0x8afc>  // b.tcont
  41bd5c:	ldr	x0, [sp, #144]
  41bd60:	ldr	x22, [x0]
  41bd64:	cbz	x22, 41c248 <_obstack_memory_used@@Base+0x8f18>
  41bd68:	ldr	x1, [x19, #184]
  41bd6c:	str	x1, [sp, #152]
  41bd70:	ldr	x1, [x19, #72]
  41bd74:	str	x1, [sp, #160]
  41bd78:	ldr	x21, [x0, #16]
  41bd7c:	str	x21, [x19, #184]
  41bd80:	str	x22, [x19, #72]
  41bd84:	str	x19, [sp, #104]
  41bd88:	ldr	w2, [x19, #160]
  41bd8c:	sub	x1, x22, #0x1
  41bd90:	mov	x0, x19
  41bd94:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41bd98:	mov	w24, w0
  41bd9c:	cmp	x22, x23
  41bda0:	b.eq	41c280 <_obstack_memory_used@@Base+0x8f50>  // b.none
  41bda4:	ldr	x21, [x21, x22, lsl #3]
  41bda8:	cbz	x21, 41c2c4 <_obstack_memory_used@@Base+0x8f94>
  41bdac:	ldrb	w0, [x21, #104]
  41bdb0:	tbnz	w0, #6, 41be88 <_obstack_memory_used@@Base+0x8b58>
  41bdb4:	stp	xzr, xzr, [sp, #208]
  41bdb8:	str	xzr, [sp, #224]
  41bdbc:	ldrb	w0, [x21, #104]
  41bdc0:	tbz	w0, #6, 41be10 <_obstack_memory_used@@Base+0x8ae0>
  41bdc4:	ldr	x0, [sp, #216]
  41bdc8:	cbz	x0, 41bdec <_obstack_memory_used@@Base+0x8abc>
  41bdcc:	ldr	w4, [sp, #140]
  41bdd0:	ldr	x3, [sp, #128]
  41bdd4:	mov	x2, x22
  41bdd8:	add	x1, sp, #0xd0
  41bddc:	mov	x0, x19
  41bde0:	bl	41bac4 <_obstack_memory_used@@Base+0x8794>
  41bde4:	str	w0, [sp, #236]
  41bde8:	cbnz	w0, 41bea0 <_obstack_memory_used@@Base+0x8b70>
  41bdec:	mov	w3, w24
  41bdf0:	add	x2, sp, #0xd0
  41bdf4:	mov	x1, x27
  41bdf8:	add	x0, sp, #0xec
  41bdfc:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41be00:	mov	x21, x0
  41be04:	cbz	x0, 41beb0 <_obstack_memory_used@@Base+0x8b80>
  41be08:	ldr	x0, [x19, #184]
  41be0c:	str	x21, [x0, x22, lsl #3]
  41be10:	ldr	x0, [sp, #120]
  41be14:	cmp	x22, x0
  41be18:	b.ge	41c1ac <_obstack_memory_used@@Base+0x8e7c>  // b.tcont
  41be1c:	stp	x25, x26, [sp, #64]
  41be20:	add	x24, x22, #0x1
  41be24:	str	xzr, [sp, #96]
  41be28:	b	41c080 <_obstack_memory_used@@Base+0x8d50>
  41be2c:	add	x22, x22, #0x1
  41be30:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41be34:	sub	x0, x0, x21
  41be38:	cmp	x0, x22
  41be3c:	b.lt	41c200 <_obstack_memory_used@@Base+0x8ed0>  // b.tstop
  41be40:	add	x24, x21, x22
  41be44:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  41be48:	cmp	x24, x0
  41be4c:	b.hi	41c208 <_obstack_memory_used@@Base+0x8ed8>  // b.pmore
  41be50:	stp	x25, x26, [sp, #64]
  41be54:	lsl	x1, x24, #3
  41be58:	mov	x25, x7
  41be5c:	ldr	x0, [x7, #16]
  41be60:	bl	402930 <realloc@plt>
  41be64:	cbz	x0, 41c210 <_obstack_memory_used@@Base+0x8ee0>
  41be68:	str	x0, [x25, #16]
  41be6c:	str	x24, [x25, #8]
  41be70:	lsl	x2, x22, #3
  41be74:	mov	w1, #0x0                   	// #0
  41be78:	add	x0, x0, x21, lsl #3
  41be7c:	bl	4028d0 <memset@plt>
  41be80:	ldp	x25, x26, [sp, #64]
  41be84:	b	41bd5c <_obstack_memory_used@@Base+0x8a2c>
  41be88:	add	x1, x21, #0x8
  41be8c:	add	x0, sp, #0xd0
  41be90:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  41be94:	str	w0, [sp, #236]
  41be98:	cbz	w0, 41bdbc <_obstack_memory_used@@Base+0x8a8c>
  41be9c:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41bea0:	ldr	x0, [sp, #224]
  41bea4:	bl	402ae0 <free@plt>
  41bea8:	ldr	w0, [sp, #236]
  41beac:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41beb0:	ldr	w0, [sp, #236]
  41beb4:	cbz	w0, 41be08 <_obstack_memory_used@@Base+0x8ad8>
  41beb8:	ldr	x0, [sp, #224]
  41bebc:	bl	402ae0 <free@plt>
  41bec0:	ldr	w0, [sp, #236]
  41bec4:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41bec8:	ldr	x0, [sp, #224]
  41becc:	bl	402ae0 <free@plt>
  41bed0:	ldr	w0, [sp, #236]
  41bed4:	ldp	x25, x26, [sp, #64]
  41bed8:	ldp	x19, x20, [sp, #16]
  41bedc:	ldp	x21, x22, [sp, #32]
  41bee0:	ldp	x23, x24, [sp, #48]
  41bee4:	ldp	x27, x28, [sp, #80]
  41bee8:	ldp	x29, x30, [sp], #240
  41beec:	ret
  41bef0:	mov	x3, x22
  41bef4:	ldr	x2, [sp, #104]
  41bef8:	mov	x1, x25
  41befc:	mov	x0, x23
  41bf00:	bl	418360 <_obstack_memory_used@@Base+0x5030>
  41bf04:	cmp	w0, #0x1
  41bf08:	b.le	41c10c <_obstack_memory_used@@Base+0x8ddc>
  41bf0c:	ldr	x1, [x23, #24]
  41bf10:	ldr	x28, [x1, x25, lsl #3]
  41bf14:	add	x20, x22, w0, sxtw
  41bf18:	ldr	x0, [x19, #184]
  41bf1c:	ldr	x1, [x0, x20, lsl #3]
  41bf20:	str	xzr, [sp, #192]
  41bf24:	cbz	x1, 41bf3c <_obstack_memory_used@@Base+0x8c0c>
  41bf28:	add	x1, x1, #0x8
  41bf2c:	add	x0, sp, #0xb8
  41bf30:	bl	414a6c <_obstack_memory_used@@Base+0x173c>
  41bf34:	str	w0, [sp, #180]
  41bf38:	cbnz	w0, 41bfd8 <_obstack_memory_used@@Base+0x8ca8>
  41bf3c:	mov	x1, x28
  41bf40:	add	x0, sp, #0xb8
  41bf44:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  41bf48:	and	w0, w0, #0xff
  41bf4c:	cbz	w0, 41c0e8 <_obstack_memory_used@@Base+0x8db8>
  41bf50:	ldr	x28, [x19, #184]
  41bf54:	add	x2, sp, #0xb8
  41bf58:	mov	x1, x23
  41bf5c:	add	x0, sp, #0xb4
  41bf60:	bl	41b7f0 <_obstack_memory_used@@Base+0x84c0>
  41bf64:	str	x0, [x28, x20, lsl #3]
  41bf68:	ldr	x0, [x19, #184]
  41bf6c:	ldr	x0, [x0, x20, lsl #3]
  41bf70:	cbz	x0, 41c0f4 <_obstack_memory_used@@Base+0x8dc4>
  41bf74:	ldr	x0, [x23, #24]
  41bf78:	ldr	x1, [x0, x25, lsl #3]
  41bf7c:	add	x0, sp, #0xd0
  41bf80:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  41bf84:	and	w0, w0, #0xff
  41bf88:	cbz	w0, 41c114 <_obstack_memory_used@@Base+0x8de4>
  41bf8c:	add	x26, x26, #0x1
  41bf90:	ldr	x0, [x21, #40]
  41bf94:	cmp	x26, x0
  41bf98:	b.ge	41c138 <_obstack_memory_used@@Base+0x8e08>  // b.tcont
  41bf9c:	ldr	x0, [x21, #48]
  41bfa0:	ldr	x25, [x0, x26, lsl #3]
  41bfa4:	lsl	x28, x25, #4
  41bfa8:	ldr	x0, [x23]
  41bfac:	add	x0, x0, x28
  41bfb0:	ldrb	w0, [x0, #10]
  41bfb4:	tbnz	w0, #4, 41bef0 <_obstack_memory_used@@Base+0x8bc0>
  41bfb8:	ldr	x1, [x23]
  41bfbc:	mov	x2, x22
  41bfc0:	add	x1, x1, x28
  41bfc4:	mov	x0, x19
  41bfc8:	bl	417228 <_obstack_memory_used@@Base+0x3ef8>
  41bfcc:	and	w0, w0, #0xff
  41bfd0:	cbz	w0, 41bf8c <_obstack_memory_used@@Base+0x8c5c>
  41bfd4:	b	41bf74 <_obstack_memory_used@@Base+0x8c44>
  41bfd8:	ldr	x0, [sp, #200]
  41bfdc:	bl	402ae0 <free@plt>
  41bfe0:	ldr	w0, [sp, #180]
  41bfe4:	str	w0, [sp, #236]
  41bfe8:	cbnz	w0, 41c124 <_obstack_memory_used@@Base+0x8df4>
  41bfec:	mov	x20, x24
  41bff0:	ldr	x0, [sp, #216]
  41bff4:	cbz	x0, 41c034 <_obstack_memory_used@@Base+0x8d04>
  41bff8:	ldr	w3, [sp, #140]
  41bffc:	ldr	x2, [sp, #128]
  41c000:	add	x1, sp, #0xd0
  41c004:	mov	x0, x27
  41c008:	bl	417498 <_obstack_memory_used@@Base+0x4168>
  41c00c:	str	w0, [sp, #236]
  41c010:	cbnz	w0, 41c148 <_obstack_memory_used@@Base+0x8e18>
  41c014:	ldr	w4, [sp, #140]
  41c018:	ldr	x3, [sp, #128]
  41c01c:	mov	x2, x24
  41c020:	add	x1, sp, #0xd0
  41c024:	mov	x0, x19
  41c028:	bl	41bac4 <_obstack_memory_used@@Base+0x8794>
  41c02c:	str	w0, [sp, #236]
  41c030:	cbnz	w0, 41c15c <_obstack_memory_used@@Base+0x8e2c>
  41c034:	ldr	w2, [x19, #160]
  41c038:	mov	x1, x22
  41c03c:	ldr	x0, [sp, #104]
  41c040:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41c044:	mov	w3, w0
  41c048:	add	x2, sp, #0xd0
  41c04c:	mov	x1, x27
  41c050:	add	x0, sp, #0xec
  41c054:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41c058:	mov	x21, x0
  41c05c:	cbz	x0, 41c170 <_obstack_memory_used@@Base+0x8e40>
  41c060:	ldr	x0, [x19, #184]
  41c064:	ldr	x1, [sp, #112]
  41c068:	str	x21, [x0, x1]
  41c06c:	str	xzr, [sp, #96]
  41c070:	add	x24, x24, #0x1
  41c074:	ldr	x0, [sp, #120]
  41c078:	cmp	x0, x20
  41c07c:	b.le	41c1f4 <_obstack_memory_used@@Base+0x8ec4>
  41c080:	sub	x22, x24, #0x1
  41c084:	ldrsw	x0, [x19, #224]
  41c088:	ldr	x1, [sp, #96]
  41c08c:	cmp	x1, x0
  41c090:	b.gt	41c1a8 <_obstack_memory_used@@Base+0x8e78>
  41c094:	str	xzr, [sp, #216]
  41c098:	lsl	x0, x24, #3
  41c09c:	str	x0, [sp, #112]
  41c0a0:	ldr	x0, [x19, #184]
  41c0a4:	ldr	x1, [x0, x24, lsl #3]
  41c0a8:	cbz	x1, 41c23c <_obstack_memory_used@@Base+0x8f0c>
  41c0ac:	add	x1, x1, #0x8
  41c0b0:	add	x0, sp, #0xd0
  41c0b4:	bl	414a6c <_obstack_memory_used@@Base+0x173c>
  41c0b8:	str	w0, [sp, #236]
  41c0bc:	cbnz	w0, 41bec8 <_obstack_memory_used@@Base+0x8b98>
  41c0c0:	cbz	x21, 41bfec <_obstack_memory_used@@Base+0x8cbc>
  41c0c4:	ldr	x23, [x19, #152]
  41c0c8:	str	wzr, [sp, #180]
  41c0cc:	stp	xzr, xzr, [sp, #184]
  41c0d0:	str	xzr, [sp, #200]
  41c0d4:	ldr	x0, [x21, #40]
  41c0d8:	cmp	x0, #0x0
  41c0dc:	b.le	41c138 <_obstack_memory_used@@Base+0x8e08>
  41c0e0:	mov	x26, #0x0                   	// #0
  41c0e4:	b	41bf9c <_obstack_memory_used@@Base+0x8c6c>
  41c0e8:	ldr	x0, [sp, #200]
  41c0ec:	bl	402ae0 <free@plt>
  41c0f0:	b	41c11c <_obstack_memory_used@@Base+0x8dec>
  41c0f4:	ldr	w0, [sp, #180]
  41c0f8:	cbz	w0, 41bf74 <_obstack_memory_used@@Base+0x8c44>
  41c0fc:	ldr	x0, [sp, #200]
  41c100:	bl	402ae0 <free@plt>
  41c104:	ldr	w0, [sp, #180]
  41c108:	b	41bfe4 <_obstack_memory_used@@Base+0x8cb4>
  41c10c:	cbz	w0, 41bfb8 <_obstack_memory_used@@Base+0x8c88>
  41c110:	b	41bf74 <_obstack_memory_used@@Base+0x8c44>
  41c114:	ldr	x0, [sp, #200]
  41c118:	bl	402ae0 <free@plt>
  41c11c:	mov	w0, #0xc                   	// #12
  41c120:	str	w0, [sp, #236]
  41c124:	ldr	x0, [sp, #224]
  41c128:	bl	402ae0 <free@plt>
  41c12c:	ldr	w0, [sp, #236]
  41c130:	ldp	x25, x26, [sp, #64]
  41c134:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c138:	ldr	x0, [sp, #200]
  41c13c:	bl	402ae0 <free@plt>
  41c140:	str	wzr, [sp, #236]
  41c144:	b	41bfec <_obstack_memory_used@@Base+0x8cbc>
  41c148:	ldr	x0, [sp, #224]
  41c14c:	bl	402ae0 <free@plt>
  41c150:	ldr	w0, [sp, #236]
  41c154:	ldp	x25, x26, [sp, #64]
  41c158:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c15c:	ldr	x0, [sp, #224]
  41c160:	bl	402ae0 <free@plt>
  41c164:	ldr	w0, [sp, #236]
  41c168:	ldp	x25, x26, [sp, #64]
  41c16c:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c170:	ldr	w0, [sp, #236]
  41c174:	cbnz	w0, 41c194 <_obstack_memory_used@@Base+0x8e64>
  41c178:	ldr	x0, [x19, #184]
  41c17c:	ldr	x1, [sp, #112]
  41c180:	str	xzr, [x0, x1]
  41c184:	ldr	x0, [sp, #96]
  41c188:	add	x0, x0, #0x1
  41c18c:	str	x0, [sp, #96]
  41c190:	b	41c070 <_obstack_memory_used@@Base+0x8d40>
  41c194:	ldr	x0, [sp, #224]
  41c198:	bl	402ae0 <free@plt>
  41c19c:	ldr	w0, [sp, #236]
  41c1a0:	ldp	x25, x26, [sp, #64]
  41c1a4:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c1a8:	ldp	x25, x26, [sp, #64]
  41c1ac:	ldr	x0, [sp, #224]
  41c1b0:	bl	402ae0 <free@plt>
  41c1b4:	ldr	x0, [x19, #184]
  41c1b8:	ldr	x1, [sp, #120]
  41c1bc:	ldr	x0, [x0, x1, lsl #3]
  41c1c0:	cbz	x0, 41c21c <_obstack_memory_used@@Base+0x8eec>
  41c1c4:	ldr	x1, [sp, #144]
  41c1c8:	str	x22, [x1]
  41c1cc:	ldr	x1, [sp, #152]
  41c1d0:	str	x1, [x19, #184]
  41c1d4:	ldr	x1, [sp, #160]
  41c1d8:	str	x1, [x19, #72]
  41c1dc:	ldr	x1, [sp, #168]
  41c1e0:	add	x0, x0, #0x8
  41c1e4:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41c1e8:	cmp	x0, #0x0
  41c1ec:	cset	w0, eq  // eq = none
  41c1f0:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c1f4:	mov	x22, x20
  41c1f8:	ldp	x25, x26, [sp, #64]
  41c1fc:	b	41c1ac <_obstack_memory_used@@Base+0x8e7c>
  41c200:	mov	w0, #0xc                   	// #12
  41c204:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c208:	mov	w0, #0xc                   	// #12
  41c20c:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c210:	mov	w0, #0xc                   	// #12
  41c214:	ldp	x25, x26, [sp, #64]
  41c218:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c21c:	ldr	x0, [sp, #144]
  41c220:	str	x22, [x0]
  41c224:	ldr	x0, [sp, #152]
  41c228:	str	x0, [x19, #184]
  41c22c:	ldr	x0, [sp, #160]
  41c230:	str	x0, [x19, #72]
  41c234:	mov	w0, #0x1                   	// #1
  41c238:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c23c:	cbnz	x21, 41c0c4 <_obstack_memory_used@@Base+0x8d94>
  41c240:	mov	x20, x24
  41c244:	b	41c034 <_obstack_memory_used@@Base+0x8d04>
  41c248:	ldr	x0, [x19, #184]
  41c24c:	str	x0, [sp, #152]
  41c250:	ldr	x0, [x19, #72]
  41c254:	str	x0, [sp, #160]
  41c258:	ldr	x0, [sp, #144]
  41c25c:	ldr	x0, [x0, #16]
  41c260:	str	x0, [x19, #184]
  41c264:	str	x23, [x19, #72]
  41c268:	str	x19, [sp, #104]
  41c26c:	ldr	w2, [x19, #160]
  41c270:	sub	x1, x23, #0x1
  41c274:	mov	x0, x19
  41c278:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41c27c:	mov	w24, w0
  41c280:	mov	x1, x20
  41c284:	add	x0, sp, #0xd0
  41c288:	bl	41441c <_obstack_memory_used@@Base+0x10ec>
  41c28c:	str	w0, [sp, #236]
  41c290:	cbnz	w0, 41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c294:	ldr	w3, [sp, #140]
  41c298:	ldr	x2, [sp, #128]
  41c29c:	add	x1, sp, #0xd0
  41c2a0:	mov	x0, x27
  41c2a4:	bl	417498 <_obstack_memory_used@@Base+0x4168>
  41c2a8:	str	w0, [sp, #236]
  41c2ac:	mov	x22, x23
  41c2b0:	cbz	w0, 41bdc4 <_obstack_memory_used@@Base+0x8a94>
  41c2b4:	ldr	x0, [sp, #224]
  41c2b8:	bl	402ae0 <free@plt>
  41c2bc:	ldr	w0, [sp, #236]
  41c2c0:	b	41bed8 <_obstack_memory_used@@Base+0x8ba8>
  41c2c4:	stp	xzr, xzr, [sp, #208]
  41c2c8:	str	xzr, [sp, #224]
  41c2cc:	b	41be10 <_obstack_memory_used@@Base+0x8ae0>
  41c2d0:	stp	x29, x30, [sp, #-80]!
  41c2d4:	mov	x29, sp
  41c2d8:	stp	x19, x20, [sp, #16]
  41c2dc:	stp	x21, x22, [sp, #32]
  41c2e0:	stp	x23, x24, [sp, #48]
  41c2e4:	mov	x19, x0
  41c2e8:	mov	x23, x1
  41c2ec:	mov	x22, x2
  41c2f0:	mov	x21, x3
  41c2f4:	mov	x20, x4
  41c2f8:	mov	x1, x2
  41c2fc:	mov	w6, #0x8                   	// #8
  41c300:	mov	x5, x4
  41c304:	mov	x4, x3
  41c308:	ldr	x3, [x2, #8]
  41c30c:	ldr	x2, [x1], #16
  41c310:	bl	41bcf8 <_obstack_memory_used@@Base+0x89c8>
  41c314:	cbz	w0, 41c32c <_obstack_memory_used@@Base+0x8ffc>
  41c318:	ldp	x19, x20, [sp, #16]
  41c31c:	ldp	x21, x22, [sp, #32]
  41c320:	ldp	x23, x24, [sp, #48]
  41c324:	ldp	x29, x30, [sp], #80
  41c328:	ret
  41c32c:	str	x25, [sp, #64]
  41c330:	ldr	x25, [x23]
  41c334:	ldr	x24, [x22, #8]
  41c338:	ldr	x1, [x19, #208]
  41c33c:	ldr	x0, [x19, #200]
  41c340:	cmp	x0, x1
  41c344:	b.ge	41c430 <_obstack_memory_used@@Base+0x9100>  // b.tcont
  41c348:	ldr	x0, [x19, #200]
  41c34c:	cmp	x0, #0x0
  41c350:	b.le	41c374 <_obstack_memory_used@@Base+0x9044>
  41c354:	add	x0, x0, x0, lsl #2
  41c358:	lsl	x0, x0, #3
  41c35c:	sub	x0, x0, #0x28
  41c360:	ldr	x1, [x19, #216]
  41c364:	add	x0, x1, x0
  41c368:	ldr	x1, [x0, #8]
  41c36c:	cmp	x20, x1
  41c370:	b.eq	41c48c <_obstack_memory_used@@Base+0x915c>  // b.none
  41c374:	ldr	x0, [x19, #200]
  41c378:	ldr	x1, [x19, #216]
  41c37c:	add	x0, x0, x0, lsl #2
  41c380:	str	x21, [x1, x0, lsl #3]
  41c384:	ldr	x0, [x19, #200]
  41c388:	ldr	x1, [x19, #216]
  41c38c:	add	x0, x0, x0, lsl #2
  41c390:	add	x0, x1, x0, lsl #3
  41c394:	str	x20, [x0, #8]
  41c398:	ldr	x0, [x19, #200]
  41c39c:	ldr	x1, [x19, #216]
  41c3a0:	add	x0, x0, x0, lsl #2
  41c3a4:	add	x0, x1, x0, lsl #3
  41c3a8:	str	x25, [x0, #16]
  41c3ac:	ldr	x0, [x19, #200]
  41c3b0:	ldr	x1, [x19, #216]
  41c3b4:	add	x0, x0, x0, lsl #2
  41c3b8:	add	x0, x1, x0, lsl #3
  41c3bc:	str	x24, [x0, #24]
  41c3c0:	ldr	x0, [x19, #200]
  41c3c4:	ldr	x1, [x19, #216]
  41c3c8:	add	x0, x0, x0, lsl #2
  41c3cc:	add	x0, x1, x0, lsl #3
  41c3d0:	cmp	x25, x24
  41c3d4:	csetm	w1, eq  // eq = none
  41c3d8:	strh	w1, [x0, #34]
  41c3dc:	ldr	x1, [x19, #216]
  41c3e0:	ldr	x0, [x19, #200]
  41c3e4:	add	x2, x0, #0x1
  41c3e8:	str	x2, [x19, #200]
  41c3ec:	add	x0, x0, x0, lsl #2
  41c3f0:	add	x0, x1, x0, lsl #3
  41c3f4:	strb	wzr, [x0, #32]
  41c3f8:	ldrsw	x1, [x19, #224]
  41c3fc:	sub	x0, x24, x25
  41c400:	cmp	x1, x0
  41c404:	b.ge	41c410 <_obstack_memory_used@@Base+0x90e0>  // b.tcont
  41c408:	sub	w24, w24, w25
  41c40c:	str	w24, [x19, #224]
  41c410:	ldr	x1, [x22, #8]
  41c414:	add	x20, x20, x1
  41c418:	ldr	x1, [x23]
  41c41c:	sub	x1, x20, x1
  41c420:	mov	x0, x19
  41c424:	bl	41570c <_obstack_memory_used@@Base+0x23dc>
  41c428:	ldr	x25, [sp, #64]
  41c42c:	b	41c318 <_obstack_memory_used@@Base+0x8fe8>
  41c430:	add	x1, x1, x1, lsl #2
  41c434:	lsl	x1, x1, #4
  41c438:	ldr	x0, [x19, #216]
  41c43c:	bl	402930 <realloc@plt>
  41c440:	cbz	x0, 41c478 <_obstack_memory_used@@Base+0x9148>
  41c444:	str	x0, [x19, #216]
  41c448:	ldr	x2, [x19, #208]
  41c44c:	add	x2, x2, x2, lsl #2
  41c450:	ldr	x1, [x19, #200]
  41c454:	add	x3, x1, x1, lsl #2
  41c458:	lsl	x2, x2, #3
  41c45c:	mov	w1, #0x0                   	// #0
  41c460:	add	x0, x0, x3, lsl #3
  41c464:	bl	4028d0 <memset@plt>
  41c468:	ldr	x0, [x19, #208]
  41c46c:	lsl	x0, x0, #1
  41c470:	str	x0, [x19, #208]
  41c474:	b	41c348 <_obstack_memory_used@@Base+0x9018>
  41c478:	ldr	x0, [x19, #216]
  41c47c:	bl	402ae0 <free@plt>
  41c480:	mov	w0, #0xc                   	// #12
  41c484:	ldr	x25, [sp, #64]
  41c488:	b	41c318 <_obstack_memory_used@@Base+0x8fe8>
  41c48c:	mov	w1, #0x1                   	// #1
  41c490:	strb	w1, [x0, #32]
  41c494:	b	41c374 <_obstack_memory_used@@Base+0x9044>
  41c498:	stp	x29, x30, [sp, #-208]!
  41c49c:	mov	x29, sp
  41c4a0:	stp	x19, x20, [sp, #16]
  41c4a4:	stp	x27, x28, [sp, #80]
  41c4a8:	mov	x19, x0
  41c4ac:	mov	x28, x1
  41c4b0:	ldr	x27, [x0, #152]
  41c4b4:	ldr	x0, [x0, #72]
  41c4b8:	mov	x1, x0
  41c4bc:	str	x0, [sp, #104]
  41c4c0:	ldr	x0, [x28, #8]
  41c4c4:	cmp	x0, #0x0
  41c4c8:	b.le	41cb14 <_obstack_memory_used@@Base+0x97e4>
  41c4cc:	stp	x21, x22, [sp, #32]
  41c4d0:	stp	x23, x24, [sp, #48]
  41c4d4:	stp	x25, x26, [sp, #64]
  41c4d8:	lsl	x0, x1, #3
  41c4dc:	str	x0, [sp, #128]
  41c4e0:	str	xzr, [sp, #96]
  41c4e4:	b	41c51c <_obstack_memory_used@@Base+0x91ec>
  41c4e8:	tbz	w1, #3, 41c4f0 <_obstack_memory_used@@Base+0x91c0>
  41c4ec:	tbnz	w0, #0, 41c500 <_obstack_memory_used@@Base+0x91d0>
  41c4f0:	tbz	w1, #5, 41c4f8 <_obstack_memory_used@@Base+0x91c8>
  41c4f4:	tbz	w0, #1, 41c500 <_obstack_memory_used@@Base+0x91d0>
  41c4f8:	tbz	w1, #7, 41c574 <_obstack_memory_used@@Base+0x9244>
  41c4fc:	tbnz	w0, #3, 41c574 <_obstack_memory_used@@Base+0x9244>
  41c500:	ldr	x0, [sp, #96]
  41c504:	add	x0, x0, #0x1
  41c508:	mov	x1, x0
  41c50c:	str	x0, [sp, #96]
  41c510:	ldr	x0, [x28, #8]
  41c514:	cmp	x0, x1
  41c518:	b.le	41cb08 <_obstack_memory_used@@Base+0x97d8>
  41c51c:	ldr	x0, [x28, #16]
  41c520:	ldr	x1, [sp, #96]
  41c524:	ldr	x21, [x0, x1, lsl #3]
  41c528:	lsl	x22, x21, #4
  41c52c:	ldr	x20, [x27]
  41c530:	add	x20, x20, x22
  41c534:	ldrb	w0, [x20, #8]
  41c538:	cmp	w0, #0x4
  41c53c:	b.ne	41c500 <_obstack_memory_used@@Base+0x91d0>  // b.any
  41c540:	ldr	w0, [x20, #8]
  41c544:	tst	w0, #0x3ff00
  41c548:	b.eq	41c574 <_obstack_memory_used@@Base+0x9244>  // b.none
  41c54c:	ldr	w2, [x19, #160]
  41c550:	ldr	x1, [sp, #104]
  41c554:	mov	x0, x19
  41c558:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41c55c:	ldr	w2, [x20, #8]
  41c560:	ubfx	x1, x2, #8, #10
  41c564:	tbz	w2, #10, 41c4e8 <_obstack_memory_used@@Base+0x91b8>
  41c568:	tbz	w0, #0, 41c500 <_obstack_memory_used@@Base+0x91d0>
  41c56c:	tbz	w1, #3, 41c4f0 <_obstack_memory_used@@Base+0x91c0>
  41c570:	b	41c500 <_obstack_memory_used@@Base+0x91d0>
  41c574:	ldr	x20, [x19, #200]
  41c578:	ldr	x1, [sp, #104]
  41c57c:	mov	x0, x19
  41c580:	bl	413a80 <_obstack_memory_used@@Base+0x750>
  41c584:	cmn	x0, #0x1
  41c588:	b.eq	41c5b0 <_obstack_memory_used@@Base+0x9280>  // b.none
  41c58c:	add	x0, x0, x0, lsl #2
  41c590:	ldr	x1, [x19, #216]
  41c594:	add	x0, x1, x0, lsl #3
  41c598:	ldr	x1, [x0]
  41c59c:	cmp	x21, x1
  41c5a0:	b.eq	41c8e8 <_obstack_memory_used@@Base+0x95b8>  // b.none
  41c5a4:	add	x0, x0, #0x28
  41c5a8:	ldurb	w1, [x0, #-8]
  41c5ac:	cbnz	w1, 41c598 <_obstack_memory_used@@Base+0x9268>
  41c5b0:	ldr	x0, [x19, #152]
  41c5b4:	str	x0, [sp, #112]
  41c5b8:	ldr	x0, [x0]
  41c5bc:	ldr	x0, [x0, x22]
  41c5c0:	str	x0, [sp, #120]
  41c5c4:	ldr	x0, [x19, #232]
  41c5c8:	cmp	x0, #0x0
  41c5cc:	b.le	41c8e8 <_obstack_memory_used@@Base+0x95b8>
  41c5d0:	ldr	x0, [x19, #8]
  41c5d4:	mov	x1, #0x0                   	// #0
  41c5d8:	str	x27, [sp, #152]
  41c5dc:	str	x21, [sp, #136]
  41c5e0:	str	x20, [sp, #160]
  41c5e4:	mov	x27, x0
  41c5e8:	str	x28, [sp, #168]
  41c5ec:	mov	x28, x1
  41c5f0:	b	41c6d4 <_obstack_memory_used@@Base+0x93a4>
  41c5f4:	mov	x2, x21
  41c5f8:	add	x1, x27, x26
  41c5fc:	add	x0, x27, x24
  41c600:	bl	402a60 <memcmp@plt>
  41c604:	cbnz	w0, 41c6b4 <_obstack_memory_used@@Base+0x9384>
  41c608:	add	x24, x24, x21
  41c60c:	ldr	x4, [sp, #104]
  41c610:	mov	x3, x28
  41c614:	mov	x2, x25
  41c618:	mov	x1, x20
  41c61c:	mov	x0, x19
  41c620:	bl	41c2d0 <_obstack_memory_used@@Base+0x8fa0>
  41c624:	ldr	x27, [x19, #8]
  41c628:	cmp	w0, #0x1
  41c62c:	b.hi	41cb44 <_obstack_memory_used@@Base+0x9814>  // b.pmore
  41c630:	add	x22, x22, #0x1
  41c634:	ldr	x0, [x20, #32]
  41c638:	cmp	x22, x0
  41c63c:	b.ge	41c68c <_obstack_memory_used@@Base+0x935c>  // b.tcont
  41c640:	ldr	x0, [x20, #40]
  41c644:	ldr	x25, [x0, x22, lsl #3]
  41c648:	mov	x26, x23
  41c64c:	ldr	x23, [x25, #8]
  41c650:	sub	x21, x23, x26
  41c654:	cmp	x21, #0x0
  41c658:	b.le	41c608 <_obstack_memory_used@@Base+0x92d8>
  41c65c:	add	x1, x21, x24
  41c660:	ldr	x0, [x19, #48]
  41c664:	cmp	x1, x0
  41c668:	b.le	41c5f4 <_obstack_memory_used@@Base+0x92c4>
  41c66c:	ldr	x0, [x19, #88]
  41c670:	cmp	x1, x0
  41c674:	b.gt	41c6b4 <_obstack_memory_used@@Base+0x9384>
  41c678:	mov	x0, x19
  41c67c:	bl	41570c <_obstack_memory_used@@Base+0x23dc>
  41c680:	cbnz	w0, 41cb30 <_obstack_memory_used@@Base+0x9800>
  41c684:	ldr	x27, [x19, #8]
  41c688:	b	41c5f4 <_obstack_memory_used@@Base+0x92c4>
  41c68c:	ldr	x28, [sp, #144]
  41c690:	cmp	x22, #0x0
  41c694:	cinc	x23, x23, gt
  41c698:	ldr	x0, [sp, #104]
  41c69c:	cmp	x0, x23
  41c6a0:	b.lt	41c6c4 <_obstack_memory_used@@Base+0x9394>  // b.tstop
  41c6a4:	mov	x25, x0
  41c6a8:	ldr	x26, [sp, #112]
  41c6ac:	ldr	x22, [sp, #120]
  41c6b0:	b	41c830 <_obstack_memory_used@@Base+0x9500>
  41c6b4:	ldr	x28, [sp, #144]
  41c6b8:	ldr	x0, [x20, #32]
  41c6bc:	cmp	x0, x22
  41c6c0:	b.le	41c720 <_obstack_memory_used@@Base+0x93f0>
  41c6c4:	add	x28, x28, #0x1
  41c6c8:	ldr	x0, [x19, #232]
  41c6cc:	cmp	x28, x0
  41c6d0:	b.ge	41c8d8 <_obstack_memory_used@@Base+0x95a8>  // b.tcont
  41c6d4:	ldr	x0, [x19, #248]
  41c6d8:	ldr	x20, [x0, x28, lsl #3]
  41c6dc:	ldr	x0, [x20, #8]
  41c6e0:	ldr	x1, [sp, #112]
  41c6e4:	ldr	x1, [x1]
  41c6e8:	lsl	x0, x0, #4
  41c6ec:	ldr	x0, [x1, x0]
  41c6f0:	ldr	x1, [sp, #120]
  41c6f4:	cmp	x1, x0
  41c6f8:	b.ne	41c6c4 <_obstack_memory_used@@Base+0x9394>  // b.any
  41c6fc:	ldr	x23, [x20]
  41c700:	ldr	x0, [x20, #32]
  41c704:	cmp	x0, #0x0
  41c708:	b.le	41c728 <_obstack_memory_used@@Base+0x93f8>
  41c70c:	ldr	x24, [sp, #104]
  41c710:	mov	x22, #0x0                   	// #0
  41c714:	str	x28, [sp, #144]
  41c718:	ldr	x28, [sp, #136]
  41c71c:	b	41c640 <_obstack_memory_used@@Base+0x9310>
  41c720:	mov	x23, x26
  41c724:	b	41c690 <_obstack_memory_used@@Base+0x9360>
  41c728:	ldr	x24, [sp, #104]
  41c72c:	b	41c698 <_obstack_memory_used@@Base+0x9368>
  41c730:	ldr	x0, [x19, #88]
  41c734:	cmp	x0, x24
  41c738:	b.le	41c6c4 <_obstack_memory_used@@Base+0x9394>
  41c73c:	add	w1, w24, #0x1
  41c740:	mov	x0, x19
  41c744:	bl	415628 <_obstack_memory_used@@Base+0x22f8>
  41c748:	cbnz	w0, 41cb30 <_obstack_memory_used@@Base+0x9800>
  41c74c:	ldr	x27, [x19, #8]
  41c750:	b	41c84c <_obstack_memory_used@@Base+0x951c>
  41c754:	add	x0, x0, #0x1
  41c758:	cmp	x4, x0
  41c75c:	b.eq	41c824 <_obstack_memory_used@@Base+0x94f4>  // b.none
  41c760:	ldr	x21, [x5, x0, lsl #3]
  41c764:	lsl	x1, x21, #4
  41c768:	add	x2, x3, x1
  41c76c:	ldrb	w2, [x2, #8]
  41c770:	cmp	w2, #0x9
  41c774:	b.ne	41c754 <_obstack_memory_used@@Base+0x9424>  // b.any
  41c778:	ldr	x1, [x3, x1]
  41c77c:	cmp	x22, x1
  41c780:	b.ne	41c754 <_obstack_memory_used@@Base+0x9424>  // b.any
  41c784:	cmn	x21, #0x1
  41c788:	b.eq	41c824 <_obstack_memory_used@@Base+0x94f4>  // b.none
  41c78c:	ldr	x0, [x20, #16]
  41c790:	cbz	x0, 41c890 <_obstack_memory_used@@Base+0x9560>
  41c794:	mov	w6, #0x9                   	// #9
  41c798:	mov	x5, x23
  41c79c:	mov	x4, x21
  41c7a0:	ldr	x3, [x20]
  41c7a4:	ldr	x2, [x20, #8]
  41c7a8:	ldr	x1, [x20, #16]
  41c7ac:	mov	x0, x19
  41c7b0:	bl	41bcf8 <_obstack_memory_used@@Base+0x89c8>
  41c7b4:	cmp	w0, #0x1
  41c7b8:	b.eq	41c824 <_obstack_memory_used@@Base+0x94f4>  // b.none
  41c7bc:	cbnz	w0, 41cb30 <_obstack_memory_used@@Base+0x9800>
  41c7c0:	ldr	x0, [x20, #24]
  41c7c4:	ldr	x1, [x20, #32]
  41c7c8:	cmp	x1, x0
  41c7cc:	b.eq	41c8b4 <_obstack_memory_used@@Base+0x9584>  // b.none
  41c7d0:	mov	x1, #0x28                  	// #40
  41c7d4:	mov	x0, #0x1                   	// #1
  41c7d8:	bl	402910 <calloc@plt>
  41c7dc:	mov	x2, x0
  41c7e0:	cbz	x0, 41cb2c <_obstack_memory_used@@Base+0x97fc>
  41c7e4:	ldr	x1, [x20, #32]
  41c7e8:	ldr	x0, [x20, #40]
  41c7ec:	str	x2, [x0, x1, lsl #3]
  41c7f0:	str	x21, [x2]
  41c7f4:	str	x23, [x2, #8]
  41c7f8:	ldr	x0, [x20, #32]
  41c7fc:	add	x0, x0, #0x1
  41c800:	str	x0, [x20, #32]
  41c804:	mov	x4, x25
  41c808:	ldr	x3, [sp, #136]
  41c80c:	mov	x1, x20
  41c810:	mov	x0, x19
  41c814:	bl	41c2d0 <_obstack_memory_used@@Base+0x8fa0>
  41c818:	ldr	x27, [x19, #8]
  41c81c:	cmp	w0, #0x1
  41c820:	b.hi	41cb44 <_obstack_memory_used@@Base+0x9814>  // b.pmore
  41c824:	add	x23, x23, #0x1
  41c828:	cmp	x25, x23
  41c82c:	b.lt	41c6c4 <_obstack_memory_used@@Base+0x9394>  // b.tstop
  41c830:	ldr	x0, [x20]
  41c834:	sub	x0, x23, x0
  41c838:	cmp	x0, #0x0
  41c83c:	b.le	41c868 <_obstack_memory_used@@Base+0x9538>
  41c840:	ldr	x0, [x19, #48]
  41c844:	cmp	x0, x24
  41c848:	b.le	41c730 <_obstack_memory_used@@Base+0x9400>
  41c84c:	add	x1, x24, #0x1
  41c850:	add	x0, x27, x23
  41c854:	ldrb	w2, [x27, x24]
  41c858:	ldurb	w0, [x0, #-1]
  41c85c:	cmp	w2, w0
  41c860:	b.ne	41c6c4 <_obstack_memory_used@@Base+0x9394>  // b.any
  41c864:	mov	x24, x1
  41c868:	ldr	x0, [x19, #184]
  41c86c:	ldr	x0, [x0, x23, lsl #3]
  41c870:	cbz	x0, 41c824 <_obstack_memory_used@@Base+0x94f4>
  41c874:	ldr	x4, [x0, #16]
  41c878:	cmp	x4, #0x0
  41c87c:	b.le	41c824 <_obstack_memory_used@@Base+0x94f4>
  41c880:	ldr	x5, [x0, #24]
  41c884:	ldr	x3, [x26]
  41c888:	mov	x0, #0x0                   	// #0
  41c88c:	b	41c760 <_obstack_memory_used@@Base+0x9430>
  41c890:	ldr	x1, [x20]
  41c894:	sub	x1, x23, x1
  41c898:	add	x1, x1, #0x1
  41c89c:	mov	x0, #0x18                  	// #24
  41c8a0:	bl	402910 <calloc@plt>
  41c8a4:	str	x0, [x20, #16]
  41c8a8:	cbnz	x0, 41c794 <_obstack_memory_used@@Base+0x9464>
  41c8ac:	mov	w0, #0xc                   	// #12
  41c8b0:	b	41cb30 <_obstack_memory_used@@Base+0x9800>
  41c8b4:	lsl	x0, x0, #1
  41c8b8:	add	x27, x0, #0x1
  41c8bc:	lsl	x1, x27, #3
  41c8c0:	ldr	x0, [x20, #40]
  41c8c4:	bl	402930 <realloc@plt>
  41c8c8:	cbz	x0, 41cb2c <_obstack_memory_used@@Base+0x97fc>
  41c8cc:	str	x0, [x20, #40]
  41c8d0:	str	x27, [x20, #24]
  41c8d4:	b	41c7d0 <_obstack_memory_used@@Base+0x94a0>
  41c8d8:	ldr	x27, [sp, #152]
  41c8dc:	ldr	x21, [sp, #136]
  41c8e0:	ldr	x20, [sp, #160]
  41c8e4:	ldr	x28, [sp, #168]
  41c8e8:	str	wzr, [sp, #204]
  41c8ec:	lsl	x0, x21, #3
  41c8f0:	str	x0, [sp, #136]
  41c8f4:	ldr	x0, [x19, #200]
  41c8f8:	cmp	x0, x20
  41c8fc:	b.le	41c500 <_obstack_memory_used@@Base+0x91d0>
  41c900:	add	x0, x21, x21, lsl #1
  41c904:	lsl	x0, x0, #3
  41c908:	str	x0, [sp, #144]
  41c90c:	add	x22, x20, x20, lsl #2
  41c910:	lsl	x22, x22, #3
  41c914:	ldr	x26, [sp, #104]
  41c918:	str	x28, [sp, #152]
  41c91c:	b	41c9cc <_obstack_memory_used@@Base+0x969c>
  41c920:	ldr	x1, [x27, #24]
  41c924:	ldr	x2, [sp, #136]
  41c928:	ldr	x24, [x1, x2]
  41c92c:	add	x24, x24, x24, lsl #1
  41c930:	ldr	x1, [x27, #48]
  41c934:	add	x24, x1, x24, lsl #3
  41c938:	b	41ca1c <_obstack_memory_used@@Base+0x96ec>
  41c93c:	ldr	w3, [sp, #120]
  41c940:	mov	x2, x24
  41c944:	mov	x1, x27
  41c948:	add	x0, sp, #0xcc
  41c94c:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41c950:	str	x0, [x25, x23, lsl #3]
  41c954:	ldr	x0, [x19, #184]
  41c958:	ldr	x0, [x0, x23, lsl #3]
  41c95c:	cbnz	x0, 41caa4 <_obstack_memory_used@@Base+0x9774>
  41c960:	ldr	w0, [sp, #204]
  41c964:	cbz	w0, 41caa4 <_obstack_memory_used@@Base+0x9774>
  41c968:	ldp	x21, x22, [sp, #32]
  41c96c:	ldp	x23, x24, [sp, #48]
  41c970:	ldp	x25, x26, [sp, #64]
  41c974:	b	41c98c <_obstack_memory_used@@Base+0x965c>
  41c978:	ldr	x0, [sp, #192]
  41c97c:	bl	402ae0 <free@plt>
  41c980:	ldp	x21, x22, [sp, #32]
  41c984:	ldp	x23, x24, [sp, #48]
  41c988:	ldp	x25, x26, [sp, #64]
  41c98c:	ldr	w0, [sp, #204]
  41c990:	ldp	x19, x20, [sp, #16]
  41c994:	ldp	x27, x28, [sp, #80]
  41c998:	ldp	x29, x30, [sp], #208
  41c99c:	ret
  41c9a0:	ldr	w0, [sp, #204]
  41c9a4:	cbz	w0, 41caa4 <_obstack_memory_used@@Base+0x9774>
  41c9a8:	ldp	x21, x22, [sp, #32]
  41c9ac:	ldp	x23, x24, [sp, #48]
  41c9b0:	ldp	x25, x26, [sp, #64]
  41c9b4:	b	41c98c <_obstack_memory_used@@Base+0x965c>
  41c9b8:	add	x20, x20, #0x1
  41c9bc:	add	x22, x22, #0x28
  41c9c0:	ldr	x0, [x19, #200]
  41c9c4:	cmp	x0, x20
  41c9c8:	b.le	41cb00 <_obstack_memory_used@@Base+0x97d0>
  41c9cc:	ldr	x0, [x19, #216]
  41c9d0:	add	x1, x0, x22
  41c9d4:	ldr	x0, [x0, x22]
  41c9d8:	cmp	x0, x21
  41c9dc:	b.ne	41c9b8 <_obstack_memory_used@@Base+0x9688>  // b.any
  41c9e0:	ldr	x0, [x1, #8]
  41c9e4:	cmp	x0, x26
  41c9e8:	b.ne	41c9b8 <_obstack_memory_used@@Base+0x9688>  // b.any
  41c9ec:	ldr	x0, [x1, #24]
  41c9f0:	ldr	x23, [x1, #16]
  41c9f4:	subs	x28, x0, x23
  41c9f8:	b.ne	41c920 <_obstack_memory_used@@Base+0x95f0>  // b.any
  41c9fc:	ldr	x1, [x27, #40]
  41ca00:	ldr	x2, [sp, #144]
  41ca04:	add	x1, x1, x2
  41ca08:	ldr	x1, [x1, #16]
  41ca0c:	ldr	x24, [x1]
  41ca10:	add	x24, x24, x24, lsl #1
  41ca14:	ldr	x1, [x27, #48]
  41ca18:	add	x24, x1, x24, lsl #3
  41ca1c:	add	x0, x0, x26
  41ca20:	sub	x23, x0, x23
  41ca24:	ldr	w2, [x19, #160]
  41ca28:	sub	x1, x23, #0x1
  41ca2c:	mov	x0, x19
  41ca30:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41ca34:	str	w0, [sp, #120]
  41ca38:	ldr	x25, [x19, #184]
  41ca3c:	ldr	x0, [x25, x23, lsl #3]
  41ca40:	ldr	x1, [sp, #128]
  41ca44:	ldr	x1, [x25, x1]
  41ca48:	str	xzr, [sp, #112]
  41ca4c:	cbz	x1, 41ca58 <_obstack_memory_used@@Base+0x9728>
  41ca50:	ldr	x1, [x1, #16]
  41ca54:	str	x1, [sp, #112]
  41ca58:	cbz	x0, 41c93c <_obstack_memory_used@@Base+0x960c>
  41ca5c:	mov	x2, x24
  41ca60:	ldr	x1, [x0, #80]
  41ca64:	add	x0, sp, #0xb0
  41ca68:	bl	414e4c <_obstack_memory_used@@Base+0x1b1c>
  41ca6c:	str	w0, [sp, #204]
  41ca70:	cbnz	w0, 41c978 <_obstack_memory_used@@Base+0x9648>
  41ca74:	ldr	x25, [x19, #184]
  41ca78:	ldr	w3, [sp, #120]
  41ca7c:	add	x2, sp, #0xb0
  41ca80:	mov	x1, x27
  41ca84:	add	x0, sp, #0xcc
  41ca88:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41ca8c:	str	x0, [x25, x23, lsl #3]
  41ca90:	ldr	x0, [sp, #192]
  41ca94:	bl	402ae0 <free@plt>
  41ca98:	ldr	x0, [x19, #184]
  41ca9c:	ldr	x0, [x0, x23, lsl #3]
  41caa0:	cbz	x0, 41c9a0 <_obstack_memory_used@@Base+0x9670>
  41caa4:	cbnz	x28, 41c9b8 <_obstack_memory_used@@Base+0x9688>
  41caa8:	ldr	x0, [x19, #184]
  41caac:	ldr	x1, [sp, #128]
  41cab0:	ldr	x0, [x0, x1]
  41cab4:	ldr	x0, [x0, #16]
  41cab8:	ldr	x1, [sp, #112]
  41cabc:	cmp	x0, x1
  41cac0:	b.le	41c9b8 <_obstack_memory_used@@Base+0x9688>
  41cac4:	mov	x2, x26
  41cac8:	mov	x1, x24
  41cacc:	mov	x0, x19
  41cad0:	bl	417354 <_obstack_memory_used@@Base+0x4024>
  41cad4:	str	w0, [sp, #204]
  41cad8:	cbnz	w0, 41cb1c <_obstack_memory_used@@Base+0x97ec>
  41cadc:	mov	x1, x24
  41cae0:	mov	x0, x19
  41cae4:	bl	41c498 <_obstack_memory_used@@Base+0x9168>
  41cae8:	str	w0, [sp, #204]
  41caec:	cbz	w0, 41c9b8 <_obstack_memory_used@@Base+0x9688>
  41caf0:	ldp	x21, x22, [sp, #32]
  41caf4:	ldp	x23, x24, [sp, #48]
  41caf8:	ldp	x25, x26, [sp, #64]
  41cafc:	b	41c98c <_obstack_memory_used@@Base+0x965c>
  41cb00:	ldr	x28, [sp, #152]
  41cb04:	b	41c500 <_obstack_memory_used@@Base+0x91d0>
  41cb08:	ldp	x21, x22, [sp, #32]
  41cb0c:	ldp	x23, x24, [sp, #48]
  41cb10:	ldp	x25, x26, [sp, #64]
  41cb14:	str	wzr, [sp, #204]
  41cb18:	b	41c98c <_obstack_memory_used@@Base+0x965c>
  41cb1c:	ldp	x21, x22, [sp, #32]
  41cb20:	ldp	x23, x24, [sp, #48]
  41cb24:	ldp	x25, x26, [sp, #64]
  41cb28:	b	41c98c <_obstack_memory_used@@Base+0x965c>
  41cb2c:	mov	w0, #0xc                   	// #12
  41cb30:	str	w0, [sp, #204]
  41cb34:	ldp	x21, x22, [sp, #32]
  41cb38:	ldp	x23, x24, [sp, #48]
  41cb3c:	ldp	x25, x26, [sp, #64]
  41cb40:	b	41c98c <_obstack_memory_used@@Base+0x965c>
  41cb44:	str	w0, [sp, #204]
  41cb48:	ldp	x21, x22, [sp, #32]
  41cb4c:	ldp	x23, x24, [sp, #48]
  41cb50:	ldp	x25, x26, [sp, #64]
  41cb54:	b	41c98c <_obstack_memory_used@@Base+0x965c>
  41cb58:	stp	x29, x30, [sp, #-112]!
  41cb5c:	mov	x29, sp
  41cb60:	stp	x19, x20, [sp, #16]
  41cb64:	stp	x21, x22, [sp, #32]
  41cb68:	stp	x23, x24, [sp, #48]
  41cb6c:	mov	x23, x0
  41cb70:	mov	x20, x1
  41cb74:	mov	x19, x2
  41cb78:	ldr	x22, [x1, #152]
  41cb7c:	ldr	x21, [x1, #72]
  41cb80:	ldr	x1, [x1, #192]
  41cb84:	cmp	x1, x21
  41cb88:	b.ge	41cbc0 <_obstack_memory_used@@Base+0x9890>  // b.tcont
  41cb8c:	ldr	x0, [x20, #184]
  41cb90:	str	x2, [x0, x21, lsl #3]
  41cb94:	str	x21, [x20, #192]
  41cb98:	ldr	x0, [x22, #152]
  41cb9c:	cmp	x0, #0x0
  41cba0:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41cba4:	b.ne	41cc8c <_obstack_memory_used@@Base+0x995c>  // b.any
  41cba8:	mov	x0, x19
  41cbac:	ldp	x19, x20, [sp, #16]
  41cbb0:	ldp	x21, x22, [sp, #32]
  41cbb4:	ldp	x23, x24, [sp, #48]
  41cbb8:	ldp	x29, x30, [sp], #112
  41cbbc:	ret
  41cbc0:	ldr	x24, [x20, #184]
  41cbc4:	ldr	x0, [x24, x21, lsl #3]
  41cbc8:	cbz	x0, 41cc3c <_obstack_memory_used@@Base+0x990c>
  41cbcc:	ldr	x2, [x0, #80]
  41cbd0:	cbz	x19, 41cc44 <_obstack_memory_used@@Base+0x9914>
  41cbd4:	ldr	x24, [x19, #80]
  41cbd8:	mov	x1, x24
  41cbdc:	add	x0, sp, #0x58
  41cbe0:	bl	414e4c <_obstack_memory_used@@Base+0x1b1c>
  41cbe4:	str	w0, [x23]
  41cbe8:	mov	x19, #0x0                   	// #0
  41cbec:	cbnz	w0, 41cba8 <_obstack_memory_used@@Base+0x9878>
  41cbf0:	str	x25, [sp, #64]
  41cbf4:	ldr	x1, [x20, #72]
  41cbf8:	ldr	w2, [x20, #160]
  41cbfc:	sub	x1, x1, #0x1
  41cc00:	mov	x0, x20
  41cc04:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41cc08:	ldr	x25, [x20, #184]
  41cc0c:	mov	w3, w0
  41cc10:	add	x2, sp, #0x58
  41cc14:	mov	x1, x22
  41cc18:	mov	x0, x23
  41cc1c:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41cc20:	mov	x19, x0
  41cc24:	str	x0, [x25, x21, lsl #3]
  41cc28:	cbz	x24, 41cc84 <_obstack_memory_used@@Base+0x9954>
  41cc2c:	ldr	x0, [sp, #104]
  41cc30:	bl	402ae0 <free@plt>
  41cc34:	ldr	x25, [sp, #64]
  41cc38:	b	41cb98 <_obstack_memory_used@@Base+0x9868>
  41cc3c:	str	x2, [x24, x21, lsl #3]
  41cc40:	b	41cb98 <_obstack_memory_used@@Base+0x9868>
  41cc44:	ldp	x0, x1, [x2]
  41cc48:	stp	x0, x1, [sp, #88]
  41cc4c:	ldr	x0, [x2, #16]
  41cc50:	str	x0, [sp, #104]
  41cc54:	ldr	w2, [x20, #160]
  41cc58:	sub	x1, x21, #0x1
  41cc5c:	mov	x0, x20
  41cc60:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41cc64:	mov	w3, w0
  41cc68:	add	x2, sp, #0x58
  41cc6c:	mov	x1, x22
  41cc70:	mov	x0, x23
  41cc74:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41cc78:	mov	x19, x0
  41cc7c:	str	x0, [x24, x21, lsl #3]
  41cc80:	b	41cb98 <_obstack_memory_used@@Base+0x9868>
  41cc84:	ldr	x25, [sp, #64]
  41cc88:	b	41cb98 <_obstack_memory_used@@Base+0x9868>
  41cc8c:	add	x22, x19, #0x8
  41cc90:	mov	x2, x21
  41cc94:	mov	x1, x22
  41cc98:	mov	x0, x20
  41cc9c:	bl	417354 <_obstack_memory_used@@Base+0x4024>
  41cca0:	str	w0, [x23]
  41cca4:	cbnz	w0, 41ccd0 <_obstack_memory_used@@Base+0x99a0>
  41cca8:	ldrb	w0, [x19, #104]
  41ccac:	tbz	w0, #6, 41cba8 <_obstack_memory_used@@Base+0x9878>
  41ccb0:	mov	x1, x22
  41ccb4:	mov	x0, x20
  41ccb8:	bl	41c498 <_obstack_memory_used@@Base+0x9168>
  41ccbc:	str	w0, [x23]
  41ccc0:	cbnz	w0, 41ccd8 <_obstack_memory_used@@Base+0x99a8>
  41ccc4:	ldr	x0, [x20, #184]
  41ccc8:	ldr	x19, [x0, x21, lsl #3]
  41cccc:	b	41cba8 <_obstack_memory_used@@Base+0x9878>
  41ccd0:	mov	x19, #0x0                   	// #0
  41ccd4:	b	41cba8 <_obstack_memory_used@@Base+0x9878>
  41ccd8:	mov	x19, #0x0                   	// #0
  41ccdc:	b	41cba8 <_obstack_memory_used@@Base+0x9878>
  41cce0:	stp	x29, x30, [sp, #-240]!
  41cce4:	mov	x29, sp
  41cce8:	stp	x19, x20, [sp, #16]
  41ccec:	stp	x21, x22, [sp, #32]
  41ccf0:	stp	x23, x24, [sp, #48]
  41ccf4:	stp	x25, x26, [sp, #64]
  41ccf8:	mov	x22, x0
  41ccfc:	mov	x20, x1
  41cd00:	mov	x19, x2
  41cd04:	mov	x24, x3
  41cd08:	ldr	x25, [x0, #152]
  41cd0c:	str	wzr, [sp, #236]
  41cd10:	lsl	x0, x2, #3
  41cd14:	str	x0, [sp, #112]
  41cd18:	ldr	x0, [x22, #184]
  41cd1c:	ldr	x23, [x0, x2, lsl #3]
  41cd20:	cbz	x23, 41ce00 <_obstack_memory_used@@Base+0x9ad0>
  41cd24:	add	x23, x23, #0x8
  41cd28:	ldr	x0, [x3, #8]
  41cd2c:	cbz	x0, 41ce08 <_obstack_memory_used@@Base+0x9ad8>
  41cd30:	str	wzr, [sp, #176]
  41cd34:	mov	x2, x3
  41cd38:	mov	x1, x25
  41cd3c:	add	x0, sp, #0xb0
  41cd40:	bl	41b7f0 <_obstack_memory_used@@Base+0x84c0>
  41cd44:	mov	x26, x0
  41cd48:	ldr	w21, [sp, #176]
  41cd4c:	cbnz	w21, 41ce2c <_obstack_memory_used@@Base+0x9afc>
  41cd50:	ldr	x21, [x0, #56]
  41cd54:	cbnz	x21, 41cdb8 <_obstack_memory_used@@Base+0x9a88>
  41cd58:	stp	x27, x28, [sp, #80]
  41cd5c:	add	x27, x0, #0x38
  41cd60:	ldr	x1, [x24, #8]
  41cd64:	mov	x0, x27
  41cd68:	bl	4146ac <_obstack_memory_used@@Base+0x137c>
  41cd6c:	str	w0, [sp, #176]
  41cd70:	cbnz	w0, 41d304 <_obstack_memory_used@@Base+0x9fd4>
  41cd74:	ldr	x0, [x24, #8]
  41cd78:	cmp	x0, #0x0
  41cd7c:	b.le	41ce48 <_obstack_memory_used@@Base+0x9b18>
  41cd80:	ldr	x0, [x24, #16]
  41cd84:	ldr	x1, [x0, x21, lsl #3]
  41cd88:	add	x1, x1, x1, lsl #1
  41cd8c:	ldr	x0, [x25, #56]
  41cd90:	add	x1, x0, x1, lsl #3
  41cd94:	mov	x0, x27
  41cd98:	bl	414a6c <_obstack_memory_used@@Base+0x173c>
  41cd9c:	str	w0, [sp, #176]
  41cda0:	cbnz	w0, 41d310 <_obstack_memory_used@@Base+0x9fe0>
  41cda4:	add	x21, x21, #0x1
  41cda8:	ldr	x0, [x24, #8]
  41cdac:	cmp	x21, x0
  41cdb0:	b.lt	41cd80 <_obstack_memory_used@@Base+0x9a50>  // b.tstop
  41cdb4:	ldp	x27, x28, [sp, #80]
  41cdb8:	add	x2, x26, #0x38
  41cdbc:	mov	x1, x23
  41cdc0:	mov	x0, x24
  41cdc4:	bl	414c1c <_obstack_memory_used@@Base+0x18ec>
  41cdc8:	mov	w21, w0
  41cdcc:	str	w0, [sp, #236]
  41cdd0:	cbnz	w0, 41ce2c <_obstack_memory_used@@Base+0x9afc>
  41cdd4:	ldr	x0, [x20, #40]
  41cdd8:	cbnz	x0, 41ce50 <_obstack_memory_used@@Base+0x9b20>
  41cddc:	ldr	x21, [x20]
  41cde0:	mov	x2, x24
  41cde4:	mov	x1, x25
  41cde8:	add	x0, sp, #0xec
  41cdec:	bl	41b7f0 <_obstack_memory_used@@Base+0x84c0>
  41cdf0:	str	x0, [x21, x19, lsl #3]
  41cdf4:	ldr	w21, [sp, #236]
  41cdf8:	cbz	w21, 41ce18 <_obstack_memory_used@@Base+0x9ae8>
  41cdfc:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41ce00:	ldr	x0, [x3, #8]
  41ce04:	cbnz	x0, 41d064 <_obstack_memory_used@@Base+0x9d34>
  41ce08:	ldr	x0, [x20]
  41ce0c:	str	xzr, [x0, x19, lsl #3]
  41ce10:	mov	w21, #0x0                   	// #0
  41ce14:	cbz	x23, 41ce2c <_obstack_memory_used@@Base+0x9afc>
  41ce18:	ldr	x0, [x22, #184]
  41ce1c:	ldr	x0, [x0, x19, lsl #3]
  41ce20:	ldrb	w0, [x0, #104]
  41ce24:	mov	w21, #0x0                   	// #0
  41ce28:	tbnz	w0, #6, 41d084 <_obstack_memory_used@@Base+0x9d54>
  41ce2c:	mov	w0, w21
  41ce30:	ldp	x19, x20, [sp, #16]
  41ce34:	ldp	x21, x22, [sp, #32]
  41ce38:	ldp	x23, x24, [sp, #48]
  41ce3c:	ldp	x25, x26, [sp, #64]
  41ce40:	ldp	x29, x30, [sp], #240
  41ce44:	ret
  41ce48:	ldp	x27, x28, [sp, #80]
  41ce4c:	b	41cdb8 <_obstack_memory_used@@Base+0x9a88>
  41ce50:	ldr	x0, [x22, #216]
  41ce54:	str	x0, [sp, #120]
  41ce58:	ldr	x0, [x20, #40]
  41ce5c:	cmp	x0, #0x0
  41ce60:	b.le	41d05c <_obstack_memory_used@@Base+0x9d2c>
  41ce64:	stp	x27, x28, [sp, #80]
  41ce68:	mov	x27, #0x0                   	// #0
  41ce6c:	b	41cefc <_obstack_memory_used@@Base+0x9bcc>
  41ce70:	ldr	x6, [x24, #8]
  41ce74:	cmp	x6, #0x0
  41ce78:	b.le	41ceec <_obstack_memory_used@@Base+0x9bbc>
  41ce7c:	ldr	x0, [x24, #16]
  41ce80:	add	x6, x0, x6, lsl #3
  41ce84:	mov	x1, #0xffffffffffffffff    	// #-1
  41ce88:	str	x1, [sp, #104]
  41ce8c:	b	41cea8 <_obstack_memory_used@@Base+0x9b78>
  41ce90:	ldr	x2, [x5, x4]
  41ce94:	cmp	x28, x2
  41ce98:	csel	x1, x1, x3, ne  // ne = any
  41ce9c:	add	x0, x0, #0x8
  41cea0:	cmp	x0, x6
  41cea4:	b.eq	41cee0 <_obstack_memory_used@@Base+0x9bb0>  // b.none
  41cea8:	ldr	x3, [x0]
  41ceac:	lsl	x4, x3, #4
  41ceb0:	add	x2, x5, x4
  41ceb4:	ldrb	w2, [x2, #8]
  41ceb8:	cmp	w2, #0x8
  41cebc:	b.eq	41ce90 <_obstack_memory_used@@Base+0x9b60>  // b.none
  41cec0:	cmp	w2, #0x9
  41cec4:	b.ne	41ce9c <_obstack_memory_used@@Base+0x9b6c>  // b.any
  41cec8:	ldr	x2, [x5, x4]
  41cecc:	cmp	x28, x2
  41ced0:	ldr	x2, [sp, #104]
  41ced4:	csel	x2, x2, x3, ne  // ne = any
  41ced8:	str	x2, [sp, #104]
  41cedc:	b	41ce9c <_obstack_memory_used@@Base+0x9b6c>
  41cee0:	tbz	x1, #63, 41cf58 <_obstack_memory_used@@Base+0x9c28>
  41cee4:	ldr	x0, [sp, #104]
  41cee8:	tbz	x0, #63, 41cf84 <_obstack_memory_used@@Base+0x9c54>
  41ceec:	add	x27, x27, #0x1
  41cef0:	ldr	x0, [x20, #40]
  41cef4:	cmp	x27, x0
  41cef8:	b.ge	41d058 <_obstack_memory_used@@Base+0x9d28>  // b.tcont
  41cefc:	ldr	x0, [x20, #48]
  41cf00:	ldr	x0, [x0, x27, lsl #3]
  41cf04:	add	x0, x0, x0, lsl #2
  41cf08:	ldr	x3, [sp, #120]
  41cf0c:	add	x1, x3, x0, lsl #3
  41cf10:	ldr	x2, [x1, #16]
  41cf14:	cmp	x19, x2
  41cf18:	b.le	41ceec <_obstack_memory_used@@Base+0x9bbc>
  41cf1c:	ldr	x2, [x1, #8]
  41cf20:	cmp	x19, x2
  41cf24:	b.gt	41ceec <_obstack_memory_used@@Base+0x9bbc>
  41cf28:	ldr	x5, [x25]
  41cf2c:	ldr	x0, [x3, x0, lsl #3]
  41cf30:	lsl	x0, x0, #4
  41cf34:	ldr	x28, [x5, x0]
  41cf38:	ldr	x0, [x1, #24]
  41cf3c:	cmp	x19, x0
  41cf40:	b.eq	41ce70 <_obstack_memory_used@@Base+0x9b40>  // b.none
  41cf44:	ldr	x0, [x24, #8]
  41cf48:	mov	x26, #0x0                   	// #0
  41cf4c:	cmp	x0, #0x0
  41cf50:	b.gt	41d008 <_obstack_memory_used@@Base+0x9cd8>
  41cf54:	b	41ceec <_obstack_memory_used@@Base+0x9bbc>
  41cf58:	mov	x3, x23
  41cf5c:	mov	x2, x24
  41cf60:	mov	x0, x25
  41cf64:	bl	418698 <_obstack_memory_used@@Base+0x5368>
  41cf68:	mov	w21, w0
  41cf6c:	cbnz	w0, 41d31c <_obstack_memory_used@@Base+0x9fec>
  41cf70:	ldr	x0, [sp, #104]
  41cf74:	tbnz	x0, #63, 41ceec <_obstack_memory_used@@Base+0x9bbc>
  41cf78:	ldr	x0, [x24, #8]
  41cf7c:	cmp	x0, #0x0
  41cf80:	b.le	41ceec <_obstack_memory_used@@Base+0x9bbc>
  41cf84:	mov	x26, #0x0                   	// #0
  41cf88:	b	41cf9c <_obstack_memory_used@@Base+0x9c6c>
  41cf8c:	add	x26, x26, #0x1
  41cf90:	ldr	x0, [x24, #8]
  41cf94:	cmp	x26, x0
  41cf98:	b.ge	41ceec <_obstack_memory_used@@Base+0x9bbc>  // b.tcont
  41cf9c:	ldr	x0, [x24, #16]
  41cfa0:	ldr	x21, [x0, x26, lsl #3]
  41cfa4:	add	x28, x21, x21, lsl #1
  41cfa8:	lsl	x28, x28, #3
  41cfac:	ldr	x0, [x25, #56]
  41cfb0:	ldr	x1, [sp, #104]
  41cfb4:	add	x0, x0, x28
  41cfb8:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41cfbc:	cbnz	x0, 41cf8c <_obstack_memory_used@@Base+0x9c5c>
  41cfc0:	ldr	x0, [x25, #48]
  41cfc4:	ldr	x1, [sp, #104]
  41cfc8:	add	x0, x0, x28
  41cfcc:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41cfd0:	cbnz	x0, 41cf8c <_obstack_memory_used@@Base+0x9c5c>
  41cfd4:	mov	x3, x23
  41cfd8:	mov	x2, x24
  41cfdc:	mov	x1, x21
  41cfe0:	mov	x0, x25
  41cfe4:	bl	418698 <_obstack_memory_used@@Base+0x5368>
  41cfe8:	mov	w21, w0
  41cfec:	cbnz	w0, 41d324 <_obstack_memory_used@@Base+0x9ff4>
  41cff0:	sub	x26, x26, #0x1
  41cff4:	b	41cf8c <_obstack_memory_used@@Base+0x9c5c>
  41cff8:	add	x26, x26, #0x1
  41cffc:	ldr	x0, [x24, #8]
  41d000:	cmp	x26, x0
  41d004:	b.ge	41ceec <_obstack_memory_used@@Base+0x9bbc>  // b.tcont
  41d008:	ldr	x0, [x24, #16]
  41d00c:	ldr	x1, [x0, x26, lsl #3]
  41d010:	lsl	x2, x1, #4
  41d014:	ldr	x3, [x25]
  41d018:	add	x0, x3, x2
  41d01c:	ldrb	w0, [x0, #8]
  41d020:	sub	w0, w0, #0x8
  41d024:	cmp	w0, #0x1
  41d028:	b.hi	41cff8 <_obstack_memory_used@@Base+0x9cc8>  // b.pmore
  41d02c:	ldr	x0, [x3, x2]
  41d030:	cmp	x28, x0
  41d034:	b.ne	41cff8 <_obstack_memory_used@@Base+0x9cc8>  // b.any
  41d038:	mov	x3, x23
  41d03c:	mov	x2, x24
  41d040:	mov	x0, x25
  41d044:	bl	418698 <_obstack_memory_used@@Base+0x5368>
  41d048:	mov	w21, w0
  41d04c:	cbz	w0, 41cff8 <_obstack_memory_used@@Base+0x9cc8>
  41d050:	ldp	x27, x28, [sp, #80]
  41d054:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41d058:	ldp	x27, x28, [sp, #80]
  41d05c:	str	wzr, [sp, #236]
  41d060:	b	41cddc <_obstack_memory_used@@Base+0x9aac>
  41d064:	ldr	x20, [x1]
  41d068:	mov	x2, x3
  41d06c:	mov	x1, x25
  41d070:	add	x0, sp, #0xec
  41d074:	bl	41b7f0 <_obstack_memory_used@@Base+0x84c0>
  41d078:	str	x0, [x20, x19, lsl #3]
  41d07c:	ldr	w21, [sp, #236]
  41d080:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41d084:	mov	x1, x19
  41d088:	mov	x0, x22
  41d08c:	bl	413a80 <_obstack_memory_used@@Base+0x750>
  41d090:	mov	x1, x0
  41d094:	str	x0, [sp, #160]
  41d098:	cmn	x0, #0x1
  41d09c:	b.eq	41ce2c <_obstack_memory_used@@Base+0x9afc>  // b.none
  41d0a0:	stp	x27, x28, [sp, #80]
  41d0a4:	ldr	x28, [x22, #152]
  41d0a8:	str	xzr, [sp, #176]
  41d0ac:	ldr	x0, [x23, #8]
  41d0b0:	cmp	x0, #0x0
  41d0b4:	b.le	41d2f8 <_obstack_memory_used@@Base+0x9fc8>
  41d0b8:	add	x0, x1, x1, lsl #2
  41d0bc:	lsl	x0, x0, #3
  41d0c0:	str	x0, [sp, #168]
  41d0c4:	mov	x27, #0x0                   	// #0
  41d0c8:	add	x0, x20, #0x20
  41d0cc:	str	x0, [sp, #144]
  41d0d0:	add	x0, sp, #0xd0
  41d0d4:	str	x0, [sp, #136]
  41d0d8:	b	41d0f4 <_obstack_memory_used@@Base+0x9dc4>
  41d0dc:	cmp	w1, #0x4
  41d0e0:	b.eq	41d124 <_obstack_memory_used@@Base+0x9df4>  // b.none
  41d0e4:	add	x27, x27, #0x1
  41d0e8:	ldr	x0, [x23, #8]
  41d0ec:	cmp	x27, x0
  41d0f0:	b.ge	41d2d4 <_obstack_memory_used@@Base+0x9fa4>  // b.tcont
  41d0f4:	ldr	x0, [x23, #16]
  41d0f8:	ldr	x24, [x0, x27, lsl #3]
  41d0fc:	ldr	x0, [x28]
  41d100:	add	x0, x0, x24, lsl #4
  41d104:	ldrb	w1, [x0, #8]
  41d108:	ldr	x0, [x20, #16]
  41d10c:	cmp	x24, x0
  41d110:	b.ne	41d0dc <_obstack_memory_used@@Base+0x9dac>  // b.any
  41d114:	ldr	x0, [x20, #24]
  41d118:	cmp	x19, x0
  41d11c:	b.ne	41d0dc <_obstack_memory_used@@Base+0x9dac>  // b.any
  41d120:	b	41d0e4 <_obstack_memory_used@@Base+0x9db4>
  41d124:	ldr	x21, [x22, #216]
  41d128:	ldr	x0, [sp, #168]
  41d12c:	add	x21, x21, x0
  41d130:	add	x0, x24, x24, lsl #1
  41d134:	lsl	x0, x0, #3
  41d138:	str	x0, [sp, #128]
  41d13c:	lsl	x0, x24, #3
  41d140:	str	x0, [sp, #120]
  41d144:	ldr	x25, [sp, #160]
  41d148:	add	x0, x19, #0x1
  41d14c:	str	x0, [sp, #152]
  41d150:	b	41d1f0 <_obstack_memory_used@@Base+0x9ec0>
  41d154:	ldr	x0, [x28, #40]
  41d158:	ldr	x1, [sp, #128]
  41d15c:	add	x0, x0, x1
  41d160:	ldr	x0, [x0, #16]
  41d164:	ldr	x0, [x0]
  41d168:	str	x0, [sp, #104]
  41d16c:	b	41d220 <_obstack_memory_used@@Base+0x9ef0>
  41d170:	ldp	x0, x1, [x20]
  41d174:	stp	x0, x1, [sp, #176]
  41d178:	ldp	x0, x1, [x20, #16]
  41d17c:	stp	x0, x1, [sp, #192]
  41d180:	ldp	x0, x1, [x20, #32]
  41d184:	stp	x0, x1, [sp, #208]
  41d188:	ldr	x0, [x20, #48]
  41d18c:	str	x0, [sp, #224]
  41d190:	ldr	x1, [sp, #144]
  41d194:	ldr	x0, [sp, #136]
  41d198:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  41d19c:	mov	w21, w0
  41d1a0:	cbz	w0, 41d274 <_obstack_memory_used@@Base+0x9f44>
  41d1a4:	b	41d2e0 <_obstack_memory_used@@Base+0x9fb0>
  41d1a8:	ldr	x0, [sp, #176]
  41d1ac:	ldr	x1, [sp, #112]
  41d1b0:	str	x26, [x0, x1]
  41d1b4:	mov	x1, x25
  41d1b8:	ldr	x21, [sp, #136]
  41d1bc:	mov	x0, x21
  41d1c0:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41d1c4:	sub	x1, x0, #0x1
  41d1c8:	mov	x0, x21
  41d1cc:	bl	4134e8 <_obstack_memory_used@@Base+0x1b8>
  41d1d0:	add	x21, x25, x25, lsl #2
  41d1d4:	ldr	x0, [x22, #216]
  41d1d8:	add	x21, x0, x21, lsl #3
  41d1dc:	add	x25, x25, #0x1
  41d1e0:	add	x1, x21, #0x28
  41d1e4:	ldrb	w0, [x21, #32]
  41d1e8:	cbz	w0, 41d0e4 <_obstack_memory_used@@Base+0x9db4>
  41d1ec:	mov	x21, x1
  41d1f0:	ldr	x0, [x21]
  41d1f4:	cmp	x24, x0
  41d1f8:	b.ne	41d1dc <_obstack_memory_used@@Base+0x9eac>  // b.any
  41d1fc:	ldr	x0, [x21, #24]
  41d200:	ldr	x1, [x21, #16]
  41d204:	sub	x0, x0, x1
  41d208:	add	x26, x19, x0
  41d20c:	cbz	x0, 41d154 <_obstack_memory_used@@Base+0x9e24>
  41d210:	ldr	x0, [x28, #24]
  41d214:	ldr	x1, [sp, #120]
  41d218:	ldr	x0, [x0, x1]
  41d21c:	str	x0, [sp, #104]
  41d220:	ldr	x0, [x20, #24]
  41d224:	cmp	x26, x0
  41d228:	b.gt	41d1dc <_obstack_memory_used@@Base+0x9eac>
  41d22c:	ldr	x0, [x20]
  41d230:	ldr	x0, [x0, x26, lsl #3]
  41d234:	cbz	x0, 41d1dc <_obstack_memory_used@@Base+0x9eac>
  41d238:	ldr	x1, [sp, #104]
  41d23c:	add	x0, x0, #0x8
  41d240:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41d244:	cbz	x0, 41d1dc <_obstack_memory_used@@Base+0x9eac>
  41d248:	mov	x5, x26
  41d24c:	ldr	x4, [sp, #104]
  41d250:	mov	x3, x19
  41d254:	mov	x2, x24
  41d258:	ldr	x1, [sp, #144]
  41d25c:	mov	x0, x22
  41d260:	bl	413af8 <_obstack_memory_used@@Base+0x7c8>
  41d264:	and	w0, w0, #0xff
  41d268:	cbnz	w0, 41d1dc <_obstack_memory_used@@Base+0x9eac>
  41d26c:	ldr	x0, [sp, #176]
  41d270:	cbz	x0, 41d170 <_obstack_memory_used@@Base+0x9e40>
  41d274:	str	x24, [sp, #192]
  41d278:	str	x19, [sp, #200]
  41d27c:	mov	x1, x25
  41d280:	ldr	x0, [sp, #136]
  41d284:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  41d288:	and	w0, w0, #0xff
  41d28c:	cbz	w0, 41d2dc <_obstack_memory_used@@Base+0x9fac>
  41d290:	ldr	x0, [sp, #176]
  41d294:	ldr	x1, [sp, #112]
  41d298:	ldr	x26, [x0, x1]
  41d29c:	add	x1, sp, #0xb0
  41d2a0:	mov	x0, x22
  41d2a4:	bl	41d334 <_obstack_memory_used@@Base+0xa004>
  41d2a8:	mov	w21, w0
  41d2ac:	cbnz	w0, 41d2e0 <_obstack_memory_used@@Base+0x9fb0>
  41d2b0:	ldr	x1, [x20, #8]
  41d2b4:	cbz	x1, 41d1a8 <_obstack_memory_used@@Base+0x9e78>
  41d2b8:	ldr	x3, [sp, #152]
  41d2bc:	ldr	x2, [sp, #176]
  41d2c0:	mov	x0, x28
  41d2c4:	bl	41ba0c <_obstack_memory_used@@Base+0x86dc>
  41d2c8:	mov	w21, w0
  41d2cc:	cbz	w0, 41d1a8 <_obstack_memory_used@@Base+0x9e78>
  41d2d0:	b	41d2e0 <_obstack_memory_used@@Base+0x9fb0>
  41d2d4:	mov	w21, #0x0                   	// #0
  41d2d8:	b	41d2e0 <_obstack_memory_used@@Base+0x9fb0>
  41d2dc:	mov	w21, #0xc                   	// #12
  41d2e0:	ldr	x0, [sp, #176]
  41d2e4:	cbz	x0, 41d32c <_obstack_memory_used@@Base+0x9ffc>
  41d2e8:	ldr	x0, [sp, #224]
  41d2ec:	bl	402ae0 <free@plt>
  41d2f0:	ldp	x27, x28, [sp, #80]
  41d2f4:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41d2f8:	mov	w21, #0x0                   	// #0
  41d2fc:	ldp	x27, x28, [sp, #80]
  41d300:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41d304:	mov	w21, #0xc                   	// #12
  41d308:	ldp	x27, x28, [sp, #80]
  41d30c:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41d310:	mov	w21, #0xc                   	// #12
  41d314:	ldp	x27, x28, [sp, #80]
  41d318:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41d31c:	ldp	x27, x28, [sp, #80]
  41d320:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41d324:	ldp	x27, x28, [sp, #80]
  41d328:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41d32c:	ldp	x27, x28, [sp, #80]
  41d330:	b	41ce2c <_obstack_memory_used@@Base+0x9afc>
  41d334:	stp	x29, x30, [sp, #-176]!
  41d338:	mov	x29, sp
  41d33c:	stp	x19, x20, [sp, #16]
  41d340:	stp	x21, x22, [sp, #32]
  41d344:	stp	x23, x24, [sp, #48]
  41d348:	mov	x20, x0
  41d34c:	mov	x23, x1
  41d350:	ldr	x19, [x1, #24]
  41d354:	ldr	x1, [x1, #16]
  41d358:	add	x0, sp, #0x98
  41d35c:	bl	41441c <_obstack_memory_used@@Base+0x10ec>
  41d360:	mov	w21, w0
  41d364:	cbnz	w0, 41d590 <_obstack_memory_used@@Base+0xa260>
  41d368:	add	x3, sp, #0x98
  41d36c:	mov	x2, x19
  41d370:	mov	x1, x23
  41d374:	mov	x0, x20
  41d378:	bl	41cce0 <_obstack_memory_used@@Base+0x99b0>
  41d37c:	str	w0, [sp, #140]
  41d380:	cbnz	w0, 41d574 <_obstack_memory_used@@Base+0xa244>
  41d384:	stp	x25, x26, [sp, #64]
  41d388:	stp	x27, x28, [sp, #80]
  41d38c:	mov	w27, w0
  41d390:	str	w0, [sp, #136]
  41d394:	add	x0, x23, #0x20
  41d398:	str	x0, [sp, #128]
  41d39c:	b	41d500 <_obstack_memory_used@@Base+0xa1d0>
  41d3a0:	ldr	x2, [sp, #104]
  41d3a4:	mov	w1, #0x0                   	// #0
  41d3a8:	bl	4028d0 <memset@plt>
  41d3ac:	ldr	x0, [sp, #168]
  41d3b0:	bl	402ae0 <free@plt>
  41d3b4:	ldr	w21, [sp, #140]
  41d3b8:	ldp	x25, x26, [sp, #64]
  41d3bc:	ldp	x27, x28, [sp, #80]
  41d3c0:	b	41d590 <_obstack_memory_used@@Base+0xa260>
  41d3c4:	ldr	x0, [x23, #24]
  41d3c8:	str	x0, [sp, #112]
  41d3cc:	ldr	x0, [x20, #152]
  41d3d0:	mov	x3, x19
  41d3d4:	mov	x2, x20
  41d3d8:	mov	x1, x22
  41d3dc:	str	x0, [sp, #120]
  41d3e0:	bl	418360 <_obstack_memory_used@@Base+0x5030>
  41d3e4:	mov	w21, w0
  41d3e8:	cmp	w0, #0x0
  41d3ec:	b.le	41d4dc <_obstack_memory_used@@Base+0xa1ac>
  41d3f0:	add	x0, x19, w0, sxtw
  41d3f4:	ldr	x2, [sp, #112]
  41d3f8:	cmp	x2, x0
  41d3fc:	b.lt	41d424 <_obstack_memory_used@@Base+0xa0f4>  // b.tstop
  41d400:	ldr	x1, [x23]
  41d404:	ldr	x0, [x1, x0, lsl #3]
  41d408:	cbz	x0, 41d494 <_obstack_memory_used@@Base+0xa164>
  41d40c:	ldr	x1, [sp, #120]
  41d410:	ldr	x1, [x1, #24]
  41d414:	ldr	x1, [x1, x22, lsl #3]
  41d418:	add	x0, x0, #0x8
  41d41c:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41d420:	cbz	x0, 41d494 <_obstack_memory_used@@Base+0xa164>
  41d424:	ldr	x0, [x23, #40]
  41d428:	cbz	x0, 41d454 <_obstack_memory_used@@Base+0xa124>
  41d42c:	ldr	x0, [x24, #24]
  41d430:	mov	x5, x19
  41d434:	mov	x4, x22
  41d438:	add	x3, x19, w21, sxtw
  41d43c:	ldr	x2, [x0, x22, lsl #3]
  41d440:	ldr	x1, [sp, #128]
  41d444:	mov	x0, x20
  41d448:	bl	413af8 <_obstack_memory_used@@Base+0x7c8>
  41d44c:	and	w0, w0, #0xff
  41d450:	cbnz	w0, 41d468 <_obstack_memory_used@@Base+0xa138>
  41d454:	mov	x1, x22
  41d458:	add	x0, sp, #0x98
  41d45c:	bl	414470 <_obstack_memory_used@@Base+0x1140>
  41d460:	and	w0, w0, #0xff
  41d464:	cbz	w0, 41d57c <_obstack_memory_used@@Base+0xa24c>
  41d468:	add	x25, x25, #0x1
  41d46c:	ldr	x0, [x26, #40]
  41d470:	cmp	x25, x0
  41d474:	b.ge	41d4e4 <_obstack_memory_used@@Base+0xa1b4>  // b.tcont
  41d478:	ldr	x0, [x26, #48]
  41d47c:	ldr	x22, [x0, x25, lsl #3]
  41d480:	lsl	x28, x22, #4
  41d484:	ldr	x0, [x24]
  41d488:	add	x0, x0, x28
  41d48c:	ldrb	w0, [x0, #10]
  41d490:	tbnz	w0, #4, 41d3c4 <_obstack_memory_used@@Base+0xa094>
  41d494:	ldr	x1, [x24]
  41d498:	mov	x2, x19
  41d49c:	add	x1, x1, x28
  41d4a0:	mov	x0, x20
  41d4a4:	bl	417228 <_obstack_memory_used@@Base+0x3ef8>
  41d4a8:	and	w0, w0, #0xff
  41d4ac:	cbz	w0, 41d468 <_obstack_memory_used@@Base+0xa138>
  41d4b0:	ldr	x0, [x23]
  41d4b4:	ldr	x1, [sp, #104]
  41d4b8:	ldr	x0, [x0, x1]
  41d4bc:	cbz	x0, 41d468 <_obstack_memory_used@@Base+0xa138>
  41d4c0:	ldr	x1, [x24, #24]
  41d4c4:	ldr	x1, [x1, x22, lsl #3]
  41d4c8:	add	x0, x0, #0x8
  41d4cc:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41d4d0:	cbz	x0, 41d468 <_obstack_memory_used@@Base+0xa138>
  41d4d4:	mov	w21, #0x1                   	// #1
  41d4d8:	b	41d424 <_obstack_memory_used@@Base+0xa0f4>
  41d4dc:	cbz	w0, 41d494 <_obstack_memory_used@@Base+0xa164>
  41d4e0:	b	41d424 <_obstack_memory_used@@Base+0xa0f4>
  41d4e4:	add	x3, sp, #0x98
  41d4e8:	mov	x2, x19
  41d4ec:	mov	x1, x23
  41d4f0:	mov	x0, x20
  41d4f4:	bl	41cce0 <_obstack_memory_used@@Base+0x99b0>
  41d4f8:	mov	w21, w0
  41d4fc:	cbnz	w0, 41d5a8 <_obstack_memory_used@@Base+0xa278>
  41d500:	cmp	x19, #0x0
  41d504:	b.le	41d564 <_obstack_memory_used@@Base+0xa234>
  41d508:	ldr	x0, [x23]
  41d50c:	lsl	x1, x19, #3
  41d510:	str	x1, [sp, #104]
  41d514:	ldr	x1, [x0, x19, lsl #3]
  41d518:	cmp	x1, #0x0
  41d51c:	ldr	w1, [sp, #136]
  41d520:	csinc	w27, w1, w27, ne  // ne = any
  41d524:	ldr	w1, [x20, #224]
  41d528:	cmp	w1, w27
  41d52c:	b.lt	41d3a0 <_obstack_memory_used@@Base+0xa070>  // b.tstop
  41d530:	str	xzr, [sp, #160]
  41d534:	sub	x19, x19, #0x1
  41d538:	ldr	x0, [x20, #184]
  41d53c:	ldr	x1, [sp, #104]
  41d540:	add	x0, x0, x1
  41d544:	ldur	x26, [x0, #-8]
  41d548:	cbz	x26, 41d4e4 <_obstack_memory_used@@Base+0xa1b4>
  41d54c:	ldr	x24, [x20, #152]
  41d550:	ldr	x0, [x26, #40]
  41d554:	cmp	x0, #0x0
  41d558:	b.le	41d4e4 <_obstack_memory_used@@Base+0xa1b4>
  41d55c:	mov	x25, #0x0                   	// #0
  41d560:	b	41d478 <_obstack_memory_used@@Base+0xa148>
  41d564:	ldr	w21, [sp, #140]
  41d568:	ldp	x25, x26, [sp, #64]
  41d56c:	ldp	x27, x28, [sp, #80]
  41d570:	b	41d588 <_obstack_memory_used@@Base+0xa258>
  41d574:	ldr	w21, [sp, #140]
  41d578:	b	41d588 <_obstack_memory_used@@Base+0xa258>
  41d57c:	mov	w21, #0xc                   	// #12
  41d580:	ldp	x25, x26, [sp, #64]
  41d584:	ldp	x27, x28, [sp, #80]
  41d588:	ldr	x0, [sp, #168]
  41d58c:	bl	402ae0 <free@plt>
  41d590:	mov	w0, w21
  41d594:	ldp	x19, x20, [sp, #16]
  41d598:	ldp	x21, x22, [sp, #32]
  41d59c:	ldp	x23, x24, [sp, #48]
  41d5a0:	ldp	x29, x30, [sp], #176
  41d5a4:	ret
  41d5a8:	ldp	x25, x26, [sp, #64]
  41d5ac:	ldp	x27, x28, [sp, #80]
  41d5b0:	b	41d588 <_obstack_memory_used@@Base+0xa258>
  41d5b4:	sub	sp, sp, #0x250
  41d5b8:	stp	x29, x30, [sp]
  41d5bc:	mov	x29, sp
  41d5c0:	stp	x19, x20, [sp, #16]
  41d5c4:	stp	x21, x22, [sp, #32]
  41d5c8:	stp	x25, x26, [sp, #64]
  41d5cc:	stp	x27, x28, [sp, #80]
  41d5d0:	mov	x25, x0
  41d5d4:	str	x1, [sp, #168]
  41d5d8:	str	x2, [sp, #152]
  41d5dc:	mov	x19, x3
  41d5e0:	mov	x21, x4
  41d5e4:	mov	x22, x5
  41d5e8:	str	x6, [sp, #160]
  41d5ec:	str	x7, [sp, #248]
  41d5f0:	ldr	w0, [sp, #592]
  41d5f4:	str	w0, [sp, #120]
  41d5f8:	ldr	x27, [x25]
  41d5fc:	mov	x2, #0x100                 	// #256
  41d600:	mov	w1, #0x0                   	// #0
  41d604:	add	x0, sp, #0x148
  41d608:	bl	4028d0 <memset@plt>
  41d60c:	str	x27, [sp, #480]
  41d610:	ldr	x26, [x25, #32]
  41d614:	cbz	x26, 41d62c <_obstack_memory_used@@Base+0xa2fc>
  41d618:	ldrb	w0, [x25, #56]
  41d61c:	tst	x0, #0x8
  41d620:	ccmp	x19, x21, #0x4, ne  // ne = any
  41d624:	b.ne	41d930 <_obstack_memory_used@@Base+0xa600>  // b.any
  41d628:	mov	x26, #0x0                   	// #0
  41d62c:	ldr	x1, [x25, #48]
  41d630:	ldr	x2, [sp, #160]
  41d634:	sub	x0, x2, #0x1
  41d638:	sub	x0, x0, x1
  41d63c:	cmp	x1, x2
  41d640:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
  41d644:	str	x0, [sp, #208]
  41d648:	ldr	x0, [x25, #16]
  41d64c:	cbz	x0, 41e48c <_obstack_memory_used@@Base+0xb15c>
  41d650:	ldr	x0, [x27, #72]
  41d654:	cbz	x0, 41e498 <_obstack_memory_used@@Base+0xb168>
  41d658:	ldr	x1, [x27, #80]
  41d65c:	cbz	x1, 41e4a4 <_obstack_memory_used@@Base+0xb174>
  41d660:	ldr	x2, [x27, #88]
  41d664:	cbz	x2, 41e4b0 <_obstack_memory_used@@Base+0xb180>
  41d668:	ldr	x3, [x27, #96]
  41d66c:	cbz	x3, 41e4bc <_obstack_memory_used@@Base+0xb18c>
  41d670:	ldr	x0, [x0, #16]
  41d674:	cbnz	x0, 41d6ac <_obstack_memory_used@@Base+0xa37c>
  41d678:	ldr	x0, [x1, #16]
  41d67c:	cbnz	x0, 41d6ac <_obstack_memory_used@@Base+0xa37c>
  41d680:	ldr	x1, [x2, #16]
  41d684:	cbz	x1, 41d690 <_obstack_memory_used@@Base+0xa360>
  41d688:	ldrsb	w1, [x25, #56]
  41d68c:	tbnz	w1, #31, 41d6ac <_obstack_memory_used@@Base+0xa37c>
  41d690:	cmp	x19, #0x0
  41d694:	mov	w1, #0x1                   	// #1
  41d698:	str	w1, [sp, #132]
  41d69c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  41d6a0:	b.ne	41db6c <_obstack_memory_used@@Base+0xa83c>  // b.any
  41d6a4:	mov	x21, x0
  41d6a8:	mov	x19, x0
  41d6ac:	mov	w20, #0x1                   	// #1
  41d6b0:	ldr	x0, [sp, #160]
  41d6b4:	ldr	x1, [sp, #208]
  41d6b8:	subs	x0, x0, x1
  41d6bc:	str	x0, [sp, #200]
  41d6c0:	b.ne	41d6d0 <_obstack_memory_used@@Base+0xa3a0>  // b.any
  41d6c4:	ldr	x0, [x27, #152]
  41d6c8:	cmp	x0, #0x0
  41d6cc:	cset	w20, ne  // ne = any
  41d6d0:	ldr	x5, [x25, #40]
  41d6d4:	str	x5, [sp, #216]
  41d6d8:	ldr	x0, [x25, #24]
  41d6dc:	ldr	w3, [x27, #180]
  41d6e0:	ldr	x1, [x27, #16]
  41d6e4:	add	x1, x1, #0x1
  41d6e8:	sxtw	x2, w3
  41d6ec:	cmp	x1, x2
  41d6f0:	csel	x1, x1, x2, ge  // ge = tcont
  41d6f4:	ldr	x4, [sp, #152]
  41d6f8:	add	x2, x4, #0x1
  41d6fc:	cmp	x1, x2
  41d700:	csel	x1, x1, x2, le
  41d704:	ldr	x2, [sp, #168]
  41d708:	str	x2, [sp, #328]
  41d70c:	str	x4, [sp, #416]
  41d710:	str	x4, [sp, #408]
  41d714:	str	x5, [sp, #448]
  41d718:	and	x2, x0, #0x400000
  41d71c:	ubfx	w0, w0, #22, #1
  41d720:	strb	w0, [sp, #464]
  41d724:	orr	x0, x2, x5
  41d728:	cmp	x0, #0x0
  41d72c:	cset	w0, ne  // ne = any
  41d730:	strb	w0, [sp, #467]
  41d734:	str	w3, [sp, #472]
  41d738:	ldrb	w0, [x27, #176]
  41d73c:	ubfx	x2, x0, #2, #1
  41d740:	strb	w2, [sp, #465]
  41d744:	ubfx	x0, x0, #3, #1
  41d748:	strb	w0, [sp, #466]
  41d74c:	str	x4, [sp, #432]
  41d750:	str	x4, [sp, #424]
  41d754:	add	x0, sp, #0x148
  41d758:	bl	413f8c <_obstack_memory_used@@Base+0xc5c>
  41d75c:	str	w0, [sp, #188]
  41d760:	cbnz	w0, 41e3ec <_obstack_memory_used@@Base+0xb0bc>
  41d764:	stp	x23, x24, [sp, #48]
  41d768:	add	x0, x27, #0xb8
  41d76c:	str	x0, [sp, #456]
  41d770:	ldrb	w0, [x27, #176]
  41d774:	ubfx	x0, x0, #4, #1
  41d778:	strb	w0, [sp, #470]
  41d77c:	ldrb	w0, [sp, #467]
  41d780:	cbz	w0, 41e51c <_obstack_memory_used@@Base+0xb1ec>
  41d784:	mov	x0, #0x0                   	// #0
  41d788:	str	x0, [sp, #376]
  41d78c:	str	x0, [sp, #384]
  41d790:	str	x22, [sp, #432]
  41d794:	str	x22, [sp, #424]
  41d798:	ldrb	w0, [x25, #56]
  41d79c:	ubfx	x0, x0, #7, #1
  41d7a0:	strb	w0, [sp, #469]
  41d7a4:	ldr	x0, [x27, #152]
  41d7a8:	lsl	x22, x0, #1
  41d7ac:	ldr	w1, [sp, #120]
  41d7b0:	str	w1, [sp, #488]
  41d7b4:	mov	x1, #0xffffffffffffffff    	// #-1
  41d7b8:	str	x1, [sp, #496]
  41d7bc:	cmp	xzr, x0, lsl #1
  41d7c0:	b.ge	41d800 <_obstack_memory_used@@Base+0xa4d0>  // b.tcont
  41d7c4:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  41d7c8:	movk	x0, #0x666, lsl #48
  41d7cc:	cmp	x22, x0
  41d7d0:	b.hi	41e50c <_obstack_memory_used@@Base+0xb1dc>  // b.pmore
  41d7d4:	add	x0, x22, x22, lsl #2
  41d7d8:	lsl	x0, x0, #3
  41d7dc:	bl	402800 <malloc@plt>
  41d7e0:	mov	x23, x0
  41d7e4:	str	x0, [sp, #544]
  41d7e8:	lsl	x0, x22, #3
  41d7ec:	bl	402800 <malloc@plt>
  41d7f0:	str	x0, [sp, #576]
  41d7f4:	cmp	x23, #0x0
  41d7f8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41d7fc:	b.eq	41e50c <_obstack_memory_used@@Base+0xb1dc>  // b.none
  41d800:	str	x22, [sp, #536]
  41d804:	mov	w0, #0x1                   	// #1
  41d808:	str	w0, [sp, #552]
  41d80c:	str	x22, [sp, #568]
  41d810:	ldr	x0, [sp, #200]
  41d814:	cmp	x0, #0x1
  41d818:	b.ls	41d93c <_obstack_memory_used@@Base+0xa60c>  // b.plast
  41d81c:	ldr	x0, [sp, #392]
  41d820:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  41d824:	cmp	x0, x1
  41d828:	b.hi	41e3f8 <_obstack_memory_used@@Base+0xb0c8>  // b.pmore
  41d82c:	add	x0, x0, #0x1
  41d830:	lsl	x0, x0, #3
  41d834:	bl	402800 <malloc@plt>
  41d838:	str	x0, [sp, #512]
  41d83c:	cbz	x0, 41e408 <_obstack_memory_used@@Base+0xb0d8>
  41d840:	str	x19, [sp, #584]
  41d844:	ldr	x0, [sp, #120]
  41d848:	tst	x0, #0x1
  41d84c:	mov	w0, #0x4                   	// #4
  41d850:	mov	w1, #0x6                   	// #6
  41d854:	csel	w0, w0, w1, ne  // ne = any
  41d858:	str	w0, [sp, #440]
  41d85c:	mov	w0, #0x1                   	// #1
  41d860:	cmp	x19, x21
  41d864:	cneg	w0, w0, gt
  41d868:	str	w0, [sp, #192]
  41d86c:	csel	x0, x19, x21, le
  41d870:	str	x0, [sp, #144]
  41d874:	csel	x0, x19, x21, ge  // ge = tcont
  41d878:	mov	x3, x0
  41d87c:	ldr	w0, [x27, #180]
  41d880:	str	w0, [sp, #232]
  41d884:	mov	w1, #0x8                   	// #8
  41d888:	str	w1, [sp, #184]
  41d88c:	cbz	x26, 41d8e0 <_obstack_memory_used@@Base+0xa5b0>
  41d890:	mov	w2, #0x4                   	// #4
  41d894:	cmp	w0, #0x1
  41d898:	b.eq	41d8b8 <_obstack_memory_used@@Base+0xa588>  // b.none
  41d89c:	ldr	x0, [x25, #24]
  41d8a0:	and	x0, x0, #0x400000
  41d8a4:	ldr	x1, [sp, #216]
  41d8a8:	orr	x0, x1, x0
  41d8ac:	cmp	x0, #0x0
  41d8b0:	ldr	w0, [sp, #188]
  41d8b4:	csel	w2, w0, w2, ne  // ne = any
  41d8b8:	cmp	x19, x21
  41d8bc:	mov	w0, #0x2                   	// #2
  41d8c0:	ldr	w1, [sp, #188]
  41d8c4:	csel	w0, w1, w0, gt
  41d8c8:	ldr	x1, [sp, #216]
  41d8cc:	cmp	x1, #0x0
  41d8d0:	cset	w1, ne  // ne = any
  41d8d4:	orr	w1, w1, w2
  41d8d8:	orr	w0, w1, w0
  41d8dc:	str	w0, [sp, #184]
  41d8e0:	cmp	x19, x3
  41d8e4:	cset	w1, gt
  41d8e8:	ldr	x0, [sp, #144]
  41d8ec:	cmp	x19, x0
  41d8f0:	cset	w0, lt  // lt = tstop
  41d8f4:	orr	w0, w1, w0
  41d8f8:	str	w0, [sp, #196]
  41d8fc:	cbnz	w0, 41e418 <_obstack_memory_used@@Base+0xb0e8>
  41d900:	str	w20, [sp, #128]
  41d904:	cmp	x19, x21
  41d908:	add	x0, sp, #0x248
  41d90c:	csel	x0, x0, xzr, le
  41d910:	str	x0, [sp, #240]
  41d914:	cmp	x0, #0x0
  41d918:	cset	w0, ne  // ne = any
  41d91c:	str	w0, [sp, #236]
  41d920:	str	x27, [sp, #176]
  41d924:	str	x25, [sp, #224]
  41d928:	mov	x25, x3
  41d92c:	b	41e5ac <_obstack_memory_used@@Base+0xb27c>
  41d930:	tst	x0, #0x1
  41d934:	csel	x26, x26, xzr, eq  // eq = none
  41d938:	b	41d62c <_obstack_memory_used@@Base+0xa2fc>
  41d93c:	ldrb	w0, [x27, #176]
  41d940:	tbz	w0, #1, 41d840 <_obstack_memory_used@@Base+0xa510>
  41d944:	b	41d81c <_obstack_memory_used@@Base+0xa4ec>
  41d948:	cmp	w0, #0x3
  41d94c:	b.gt	41d9ec <_obstack_memory_used@@Base+0xa6bc>
  41d950:	ldr	w20, [sp, #188]
  41d954:	ldrsw	x21, [sp, #192]
  41d958:	ldr	x23, [sp, #144]
  41d95c:	ldr	x22, [sp, #152]
  41d960:	b	41dbf0 <_obstack_memory_used@@Base+0xa8c0>
  41d964:	ldr	x0, [sp, #584]
  41d968:	ldr	w2, [sp, #196]
  41d96c:	mov	w3, #0x1                   	// #1
  41d970:	cmp	x25, x0
  41d974:	b.le	41da38 <_obstack_memory_used@@Base+0xa708>
  41d978:	ldr	x4, [sp, #216]
  41d97c:	ldr	x5, [sp, #168]
  41d980:	ldrb	w1, [x5, x0]
  41d984:	ldrb	w1, [x4, x1]
  41d988:	ldrb	w1, [x26, x1]
  41d98c:	cbnz	w1, 41da30 <_obstack_memory_used@@Base+0xa700>
  41d990:	add	x0, x0, #0x1
  41d994:	mov	w2, w3
  41d998:	cmp	x0, x25
  41d99c:	b.ne	41d980 <_obstack_memory_used@@Base+0xa650>  // b.any
  41d9a0:	str	x25, [sp, #584]
  41d9a4:	ldr	x0, [sp, #584]
  41d9a8:	ldr	w1, [sp, #188]
  41d9ac:	ldr	x2, [sp, #152]
  41d9b0:	cmp	x2, x0
  41d9b4:	b.le	41d9c0 <_obstack_memory_used@@Base+0xa690>
  41d9b8:	ldr	x1, [sp, #168]
  41d9bc:	ldrb	w1, [x1, x0]
  41d9c0:	sxtw	x0, w1
  41d9c4:	ldr	x2, [sp, #216]
  41d9c8:	cbz	x2, 41d9d0 <_obstack_memory_used@@Base+0xa6a0>
  41d9cc:	ldrb	w0, [x2, w1, sxtw]
  41d9d0:	ldrb	w0, [x26, x0]
  41d9d4:	cbnz	w0, 41da44 <_obstack_memory_used@@Base+0xa714>
  41d9d8:	ldr	x27, [sp, #176]
  41d9dc:	mov	w0, #0x1                   	// #1
  41d9e0:	str	w0, [sp, #132]
  41d9e4:	ldp	x23, x24, [sp, #48]
  41d9e8:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41d9ec:	ldr	x0, [sp, #584]
  41d9f0:	ldr	x1, [sp, #144]
  41d9f4:	cmp	x1, x0
  41d9f8:	b.gt	41da1c <_obstack_memory_used@@Base+0xa6ec>
  41d9fc:	ldr	w3, [sp, #196]
  41da00:	ldr	w4, [sp, #188]
  41da04:	mov	w5, #0x1                   	// #1
  41da08:	ldr	x6, [sp, #216]
  41da0c:	ldr	x8, [sp, #144]
  41da10:	ldr	x9, [sp, #168]
  41da14:	ldr	x7, [sp, #152]
  41da18:	b	41db2c <_obstack_memory_used@@Base+0xa7fc>
  41da1c:	ldr	x27, [sp, #176]
  41da20:	mov	w0, #0x1                   	// #1
  41da24:	str	w0, [sp, #132]
  41da28:	ldp	x23, x24, [sp, #48]
  41da2c:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41da30:	cbz	w2, 41da44 <_obstack_memory_used@@Base+0xa714>
  41da34:	str	x0, [sp, #584]
  41da38:	ldr	x0, [sp, #584]
  41da3c:	cmp	x0, x25
  41da40:	b.eq	41d9a8 <_obstack_memory_used@@Base+0xa678>  // b.none
  41da44:	ldr	w2, [sp, #120]
  41da48:	ldr	x1, [sp, #584]
  41da4c:	add	x0, sp, #0x148
  41da50:	bl	418874 <_obstack_memory_used@@Base+0x5544>
  41da54:	str	w0, [sp, #132]
  41da58:	cbnz	w0, 41e44c <_obstack_memory_used@@Base+0xb11c>
  41da5c:	ldr	w0, [sp, #232]
  41da60:	cmp	w0, #0x1
  41da64:	b.eq	41da80 <_obstack_memory_used@@Base+0xa750>  // b.none
  41da68:	ldr	x0, [sp, #376]
  41da6c:	cbz	x0, 41da80 <_obstack_memory_used@@Base+0xa750>
  41da70:	ldr	x0, [sp, #344]
  41da74:	ldr	w0, [x0]
  41da78:	cmn	w0, #0x1
  41da7c:	b.eq	41e58c <_obstack_memory_used@@Base+0xb25c>  // b.none
  41da80:	str	wzr, [sp, #552]
  41da84:	str	xzr, [sp, #528]
  41da88:	str	xzr, [sp, #520]
  41da8c:	ldr	x19, [sp, #480]
  41da90:	ldr	x0, [sp, #400]
  41da94:	mov	x1, x0
  41da98:	str	x0, [sp, #112]
  41da9c:	str	wzr, [sp, #264]
  41daa0:	ldr	x20, [x19, #72]
  41daa4:	ldrsb	w0, [x20, #104]
  41daa8:	tbz	w0, #31, 41dc38 <_obstack_memory_used@@Base+0xa908>
  41daac:	ldr	w2, [sp, #488]
  41dab0:	sub	x1, x1, #0x1
  41dab4:	add	x0, sp, #0x148
  41dab8:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41dabc:	tbnz	w0, #0, 41dc34 <_obstack_memory_used@@Base+0xa904>
  41dac0:	cbz	w0, 41dc38 <_obstack_memory_used@@Base+0xa908>
  41dac4:	and	w1, w0, #0x6
  41dac8:	cmp	w1, #0x6
  41dacc:	b.eq	41dc94 <_obstack_memory_used@@Base+0xa964>  // b.none
  41dad0:	tbnz	w0, #1, 41dc9c <_obstack_memory_used@@Base+0xa96c>
  41dad4:	tbz	w0, #2, 41dc38 <_obstack_memory_used@@Base+0xa908>
  41dad8:	mov	w3, w0
  41dadc:	ldr	x2, [x20, #80]
  41dae0:	mov	x1, x19
  41dae4:	add	x0, sp, #0x108
  41dae8:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41daec:	mov	x20, x0
  41daf0:	cbnz	x0, 41dc38 <_obstack_memory_used@@Base+0xa908>
  41daf4:	ldr	x27, [sp, #176]
  41daf8:	b	41e4f4 <_obstack_memory_used@@Base+0xb1c4>
  41dafc:	cbz	w2, 41da44 <_obstack_memory_used@@Base+0xa714>
  41db00:	str	x0, [sp, #584]
  41db04:	b	41da38 <_obstack_memory_used@@Base+0xa708>
  41db08:	sxtw	x2, w1
  41db0c:	cbz	x6, 41db14 <_obstack_memory_used@@Base+0xa7e4>
  41db10:	ldrb	w2, [x6, w1, sxtw]
  41db14:	ldrb	w1, [x26, x2]
  41db18:	cbnz	w1, 41db8c <_obstack_memory_used@@Base+0xa85c>
  41db1c:	sub	x0, x0, #0x1
  41db20:	mov	w3, w5
  41db24:	cmp	x0, x8
  41db28:	b.lt	41db40 <_obstack_memory_used@@Base+0xa810>  // b.tstop
  41db2c:	mov	w1, w4
  41db30:	cmp	x7, x0
  41db34:	b.le	41db08 <_obstack_memory_used@@Base+0xa7d8>
  41db38:	ldrb	w1, [x9, x0]
  41db3c:	b	41db08 <_obstack_memory_used@@Base+0xa7d8>
  41db40:	ldr	x27, [sp, #176]
  41db44:	str	x0, [sp, #584]
  41db48:	mov	w0, #0x1                   	// #1
  41db4c:	str	w0, [sp, #132]
  41db50:	ldp	x23, x24, [sp, #48]
  41db54:	ldr	x0, [sp, #512]
  41db58:	bl	402ae0 <free@plt>
  41db5c:	ldr	x0, [x27, #152]
  41db60:	cbnz	x0, 41e470 <_obstack_memory_used@@Base+0xb140>
  41db64:	add	x0, sp, #0x148
  41db68:	bl	416c64 <_obstack_memory_used@@Base+0x3934>
  41db6c:	ldr	w0, [sp, #132]
  41db70:	ldp	x19, x20, [sp, #16]
  41db74:	ldp	x21, x22, [sp, #32]
  41db78:	ldp	x25, x26, [sp, #64]
  41db7c:	ldp	x27, x28, [sp, #80]
  41db80:	ldp	x29, x30, [sp]
  41db84:	add	sp, sp, #0x250
  41db88:	ret
  41db8c:	cbz	w3, 41db94 <_obstack_memory_used@@Base+0xa864>
  41db90:	str	x0, [sp, #584]
  41db94:	ldr	x1, [sp, #144]
  41db98:	cmp	x1, x0
  41db9c:	b.le	41da44 <_obstack_memory_used@@Base+0xa714>
  41dba0:	ldr	x27, [sp, #176]
  41dba4:	mov	w0, #0x1                   	// #1
  41dba8:	str	w0, [sp, #132]
  41dbac:	ldp	x23, x24, [sp, #48]
  41dbb0:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41dbb4:	ldr	w2, [sp, #120]
  41dbb8:	mov	x1, x19
  41dbbc:	add	x0, sp, #0x148
  41dbc0:	bl	418874 <_obstack_memory_used@@Base+0x5544>
  41dbc4:	cbnz	w0, 41e43c <_obstack_memory_used@@Base+0xb10c>
  41dbc8:	ldr	x0, [sp, #368]
  41dbcc:	sub	x0, x19, x0
  41dbd0:	b	41dc08 <_obstack_memory_used@@Base+0xa8d8>
  41dbd4:	ldrb	w0, [x26, w1, sxtw]
  41dbd8:	cbnz	w0, 41da44 <_obstack_memory_used@@Base+0xa714>
  41dbdc:	add	x19, x21, x19
  41dbe0:	str	x19, [sp, #584]
  41dbe4:	cmp	x19, x23
  41dbe8:	ccmp	x19, x25, #0x0, ge  // ge = tcont
  41dbec:	b.gt	41dc20 <_obstack_memory_used@@Base+0xa8f0>
  41dbf0:	ldr	x19, [sp, #584]
  41dbf4:	ldr	x0, [sp, #368]
  41dbf8:	sub	x0, x19, x0
  41dbfc:	ldr	x1, [sp, #384]
  41dc00:	cmp	x1, x0
  41dc04:	b.ls	41dbb4 <_obstack_memory_used@@Base+0xa884>  // b.plast
  41dc08:	mov	w1, w20
  41dc0c:	cmp	x19, x22
  41dc10:	b.ge	41dbd4 <_obstack_memory_used@@Base+0xa8a4>  // b.tcont
  41dc14:	ldr	x1, [sp, #336]
  41dc18:	ldrb	w1, [x1, x0]
  41dc1c:	b	41dbd4 <_obstack_memory_used@@Base+0xa8a4>
  41dc20:	ldr	x27, [sp, #176]
  41dc24:	mov	w0, #0x1                   	// #1
  41dc28:	str	w0, [sp, #132]
  41dc2c:	ldp	x23, x24, [sp, #48]
  41dc30:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41dc34:	ldr	x20, [x19, #80]
  41dc38:	ldr	x0, [sp, #512]
  41dc3c:	cbz	x0, 41dcf8 <_obstack_memory_used@@Base+0xa9c8>
  41dc40:	ldr	x1, [sp, #112]
  41dc44:	str	x20, [x0, x1, lsl #3]
  41dc48:	ldr	x0, [x19, #152]
  41dc4c:	ldr	w1, [sp, #236]
  41dc50:	mov	w22, w1
  41dc54:	cbnz	x0, 41dca4 <_obstack_memory_used@@Base+0xa974>
  41dc58:	ldrb	w0, [x20, #104]
  41dc5c:	mov	x28, #0xffffffffffffffff    	// #-1
  41dc60:	mov	x27, #0x0                   	// #0
  41dc64:	tbnz	w0, #4, 41dd04 <_obstack_memory_used@@Base+0xa9d4>
  41dc68:	ldr	x21, [sp, #400]
  41dc6c:	ldr	x0, [sp, #240]
  41dc70:	str	x0, [sp, #104]
  41dc74:	ldr	x0, [sp, #432]
  41dc78:	cmp	x21, x0
  41dc7c:	b.ge	41e0c8 <_obstack_memory_used@@Base+0xad98>  // b.tcont
  41dc80:	add	x0, sp, #0x110
  41dc84:	str	x0, [sp, #96]
  41dc88:	str	x25, [sp, #136]
  41dc8c:	mov	w25, w22
  41dc90:	b	41e030 <_obstack_memory_used@@Base+0xad00>
  41dc94:	ldr	x20, [x19, #96]
  41dc98:	b	41dc38 <_obstack_memory_used@@Base+0xa908>
  41dc9c:	ldr	x20, [x19, #88]
  41dca0:	b	41dc38 <_obstack_memory_used@@Base+0xa908>
  41dca4:	add	x19, x20, #0x8
  41dca8:	mov	x2, #0x0                   	// #0
  41dcac:	mov	x1, x19
  41dcb0:	add	x0, sp, #0x148
  41dcb4:	bl	417354 <_obstack_memory_used@@Base+0x4024>
  41dcb8:	str	w0, [sp, #264]
  41dcbc:	sxtw	x28, w0
  41dcc0:	cbnz	w0, 41e108 <_obstack_memory_used@@Base+0xadd8>
  41dcc4:	ldrb	w0, [x20, #104]
  41dcc8:	ldr	w1, [sp, #196]
  41dccc:	mov	w22, w1
  41dcd0:	tbz	w0, #6, 41dc58 <_obstack_memory_used@@Base+0xa928>
  41dcd4:	mov	x1, x19
  41dcd8:	add	x0, sp, #0x148
  41dcdc:	bl	41c498 <_obstack_memory_used@@Base+0x9168>
  41dce0:	str	w0, [sp, #264]
  41dce4:	ldr	w1, [sp, #196]
  41dce8:	mov	w22, w1
  41dcec:	sxtw	x28, w0
  41dcf0:	cbz	w0, 41dc58 <_obstack_memory_used@@Base+0xa928>
  41dcf4:	b	41e108 <_obstack_memory_used@@Base+0xadd8>
  41dcf8:	ldr	w0, [sp, #236]
  41dcfc:	mov	w22, w0
  41dd00:	b	41dc58 <_obstack_memory_used@@Base+0xa928>
  41dd04:	ldrsb	w0, [x20, #104]
  41dd08:	tbnz	w0, #31, 41dd20 <_obstack_memory_used@@Base+0xa9f0>
  41dd0c:	ldr	x28, [sp, #112]
  41dd10:	mov	x27, #0x1                   	// #1
  41dd14:	ldr	w0, [sp, #128]
  41dd18:	cbnz	w0, 41dc68 <_obstack_memory_used@@Base+0xa938>
  41dd1c:	b	41e108 <_obstack_memory_used@@Base+0xadd8>
  41dd20:	ldr	x2, [sp, #112]
  41dd24:	mov	x1, x20
  41dd28:	add	x0, sp, #0x148
  41dd2c:	bl	4175e8 <_obstack_memory_used@@Base+0x42b8>
  41dd30:	mov	x27, x0
  41dd34:	cbnz	x0, 41dd0c <_obstack_memory_used@@Base+0xa9dc>
  41dd38:	mov	x28, #0xffffffffffffffff    	// #-1
  41dd3c:	b	41dc68 <_obstack_memory_used@@Base+0xa938>
  41dd40:	ldr	x1, [sp, #416]
  41dd44:	cmp	x0, x1
  41dd48:	b.ge	41e040 <_obstack_memory_used@@Base+0xad10>  // b.tcont
  41dd4c:	add	w1, w21, #0x1
  41dd50:	add	x0, sp, #0x148
  41dd54:	bl	415628 <_obstack_memory_used@@Base+0x22f8>
  41dd58:	str	w0, [sp, #264]
  41dd5c:	cbz	w0, 41e04c <_obstack_memory_used@@Base+0xad1c>
  41dd60:	ldr	x27, [sp, #176]
  41dd64:	b	41e4f4 <_obstack_memory_used@@Base+0xb1c4>
  41dd68:	ldr	x1, [sp, #416]
  41dd6c:	cmp	x0, x1
  41dd70:	b.ge	41e04c <_obstack_memory_used@@Base+0xad1c>  // b.tcont
  41dd74:	b	41dd4c <_obstack_memory_used@@Base+0xaa1c>
  41dd78:	ldr	x22, [sp, #480]
  41dd7c:	ldr	x0, [x20, #16]
  41dd80:	cmp	x0, #0x0
  41dd84:	b.le	41e504 <_obstack_memory_used@@Base+0xb1d4>
  41dd88:	mov	x23, #0x0                   	// #0
  41dd8c:	b	41de70 <_obstack_memory_used@@Base+0xab40>
  41dd90:	tbz	w1, #3, 41dd98 <_obstack_memory_used@@Base+0xaa68>
  41dd94:	tbnz	w0, #0, 41de60 <_obstack_memory_used@@Base+0xab30>
  41dd98:	tbz	w1, #5, 41dda0 <_obstack_memory_used@@Base+0xaa70>
  41dd9c:	tbz	w0, #1, 41de60 <_obstack_memory_used@@Base+0xab30>
  41dda0:	tbz	w1, #7, 41dda8 <_obstack_memory_used@@Base+0xaa78>
  41dda4:	tbz	w0, #3, 41de60 <_obstack_memory_used@@Base+0xab30>
  41dda8:	ldr	x3, [sp, #400]
  41ddac:	add	x2, sp, #0x148
  41ddb0:	mov	x1, x24
  41ddb4:	mov	x0, x22
  41ddb8:	bl	418360 <_obstack_memory_used@@Base+0x5030>
  41ddbc:	cbz	w0, 41de60 <_obstack_memory_used@@Base+0xab30>
  41ddc0:	ldr	x19, [sp, #400]
  41ddc4:	add	x19, x19, w0, sxtw
  41ddc8:	ldr	w1, [sp, #552]
  41ddcc:	cmp	w1, w0
  41ddd0:	csel	w0, w1, w0, ge  // ge = tcont
  41ddd4:	str	w0, [sp, #552]
  41ddd8:	mov	x1, x19
  41dddc:	add	x0, sp, #0x148
  41dde0:	bl	41570c <_obstack_memory_used@@Base+0x23dc>
  41dde4:	str	w0, [sp, #268]
  41dde8:	cbnz	w0, 41df00 <_obstack_memory_used@@Base+0xabd0>
  41ddec:	ldr	x0, [x22, #24]
  41ddf0:	ldr	x2, [x0, x24, lsl #3]
  41ddf4:	add	x2, x2, x2, lsl #1
  41ddf8:	ldr	x0, [x22, #48]
  41ddfc:	add	x2, x0, x2, lsl #3
  41de00:	ldr	x24, [sp, #512]
  41de04:	ldr	x0, [x24, x19, lsl #3]
  41de08:	cbz	x0, 41debc <_obstack_memory_used@@Base+0xab8c>
  41de0c:	ldr	x1, [x0, #80]
  41de10:	ldr	x0, [sp, #96]
  41de14:	bl	414e4c <_obstack_memory_used@@Base+0x1b1c>
  41de18:	str	w0, [sp, #268]
  41de1c:	cbnz	w0, 41df00 <_obstack_memory_used@@Base+0xabd0>
  41de20:	ldr	w2, [sp, #488]
  41de24:	sub	x1, x19, #0x1
  41de28:	add	x0, sp, #0x148
  41de2c:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41de30:	ldr	x24, [sp, #512]
  41de34:	mov	w3, w0
  41de38:	ldr	x2, [sp, #96]
  41de3c:	mov	x1, x22
  41de40:	add	x0, sp, #0x10c
  41de44:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41de48:	str	x0, [x24, x19, lsl #3]
  41de4c:	ldr	x0, [sp, #288]
  41de50:	bl	402ae0 <free@plt>
  41de54:	ldr	x0, [sp, #512]
  41de58:	ldr	x0, [x0, x19, lsl #3]
  41de5c:	cbz	x0, 41def8 <_obstack_memory_used@@Base+0xabc8>
  41de60:	add	x23, x23, #0x1
  41de64:	ldr	x0, [x20, #16]
  41de68:	cmp	x23, x0
  41de6c:	b.ge	41e504 <_obstack_memory_used@@Base+0xb1d4>  // b.tcont
  41de70:	ldr	x0, [x20, #24]
  41de74:	ldr	x24, [x0, x23, lsl #3]
  41de78:	ldr	x19, [x22]
  41de7c:	add	x19, x19, x24, lsl #4
  41de80:	ldrb	w0, [x19, #10]
  41de84:	tbz	w0, #4, 41de60 <_obstack_memory_used@@Base+0xab30>
  41de88:	ldr	w0, [x19, #8]
  41de8c:	tst	w0, #0x3ff00
  41de90:	b.eq	41dda8 <_obstack_memory_used@@Base+0xaa78>  // b.none
  41de94:	ldr	w2, [sp, #488]
  41de98:	ldr	x1, [sp, #400]
  41de9c:	add	x0, sp, #0x148
  41dea0:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41dea4:	ldr	w2, [x19, #8]
  41dea8:	ubfx	x1, x2, #8, #10
  41deac:	tbz	w2, #10, 41dd90 <_obstack_memory_used@@Base+0xaa60>
  41deb0:	tbz	w0, #0, 41de60 <_obstack_memory_used@@Base+0xab30>
  41deb4:	tbz	w1, #3, 41dd98 <_obstack_memory_used@@Base+0xaa68>
  41deb8:	b	41de60 <_obstack_memory_used@@Base+0xab30>
  41debc:	ldp	x0, x1, [x2]
  41dec0:	stp	x0, x1, [sp, #272]
  41dec4:	ldr	x0, [x2, #16]
  41dec8:	str	x0, [sp, #288]
  41decc:	ldr	w2, [sp, #488]
  41ded0:	sub	x1, x19, #0x1
  41ded4:	add	x0, sp, #0x148
  41ded8:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41dedc:	mov	w3, w0
  41dee0:	ldr	x2, [sp, #96]
  41dee4:	mov	x1, x22
  41dee8:	add	x0, sp, #0x10c
  41deec:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41def0:	str	x0, [x24, x19, lsl #3]
  41def4:	b	41de54 <_obstack_memory_used@@Base+0xab24>
  41def8:	ldr	w0, [sp, #268]
  41defc:	cbz	w0, 41de60 <_obstack_memory_used@@Base+0xab30>
  41df00:	str	w0, [sp, #264]
  41df04:	ldr	x0, [sp, #512]
  41df08:	cbz	x0, 41e70c <_obstack_memory_used@@Base+0xb3dc>
  41df0c:	mov	x19, #0x0                   	// #0
  41df10:	b	41e080 <_obstack_memory_used@@Base+0xad50>
  41df14:	ldr	x22, [x20, #96]
  41df18:	cbz	x22, 41df4c <_obstack_memory_used@@Base+0xac1c>
  41df1c:	ldr	w2, [sp, #488]
  41df20:	ldr	x1, [sp, #400]
  41df24:	sub	x1, x1, #0x1
  41df28:	add	x0, sp, #0x148
  41df2c:	bl	41712c <_obstack_memory_used@@Base+0x3dfc>
  41df30:	tbz	w0, #0, 41df40 <_obstack_memory_used@@Base+0xac10>
  41df34:	add	x19, x22, w19, uxtb #3
  41df38:	ldr	x19, [x19, #2048]
  41df3c:	b	41e078 <_obstack_memory_used@@Base+0xad48>
  41df40:	and	x19, x19, #0xff
  41df44:	ldr	x19, [x22, x19, lsl #3]
  41df48:	b	41e078 <_obstack_memory_used@@Base+0xad48>
  41df4c:	mov	x1, x20
  41df50:	ldr	x0, [sp, #480]
  41df54:	bl	4192bc <_obstack_memory_used@@Base+0x5f8c>
  41df58:	and	w0, w0, #0xff
  41df5c:	cbnz	w0, 41e068 <_obstack_memory_used@@Base+0xad38>
  41df60:	mov	w0, #0xc                   	// #12
  41df64:	str	w0, [sp, #264]
  41df68:	b	41df04 <_obstack_memory_used@@Base+0xabd4>
  41df6c:	ldr	w0, [sp, #264]
  41df70:	cbnz	w0, 41e4f0 <_obstack_memory_used@@Base+0xb1c0>
  41df74:	ldr	x0, [sp, #512]
  41df78:	cbz	x0, 41e0dc <_obstack_memory_used@@Base+0xadac>
  41df7c:	cmp	x27, #0x0
  41df80:	ldr	w0, [sp, #128]
  41df84:	eor	w0, w0, #0x1
  41df88:	csel	w0, w0, wzr, ne  // ne = any
  41df8c:	cbnz	w0, 41e0e4 <_obstack_memory_used@@Base+0xadb4>
  41df90:	ldr	x3, [sp, #520]
  41df94:	ldr	x0, [sp, #400]
  41df98:	ldr	x2, [sp, #512]
  41df9c:	add	x0, x0, #0x1
  41dfa0:	cmp	x3, x0
  41dfa4:	b.lt	41e0ec <_obstack_memory_used@@Base+0xadbc>  // b.tstop
  41dfa8:	ldr	x1, [sp, #400]
  41dfac:	add	x1, x1, #0x1
  41dfb0:	str	x1, [sp, #400]
  41dfb4:	ldr	x1, [x2, x0, lsl #3]
  41dfb8:	cbz	x1, 41df9c <_obstack_memory_used@@Base+0xac6c>
  41dfbc:	mov	x2, #0x0                   	// #0
  41dfc0:	add	x1, sp, #0x148
  41dfc4:	add	x0, sp, #0x108
  41dfc8:	bl	41cb58 <_obstack_memory_used@@Base+0x9828>
  41dfcc:	ldr	w1, [sp, #264]
  41dfd0:	cmp	w1, #0x0
  41dfd4:	ccmp	x0, #0x0, #0x0, eq  // eq = none
  41dfd8:	b.eq	41df90 <_obstack_memory_used@@Base+0xac60>  // b.none
  41dfdc:	mov	x19, x0
  41dfe0:	cbnz	x0, 41e098 <_obstack_memory_used@@Base+0xad68>
  41dfe4:	ldr	x25, [sp, #136]
  41dfe8:	b	41e0f0 <_obstack_memory_used@@Base+0xadc0>
  41dfec:	cmp	x20, x19
  41dff0:	ldr	w0, [sp, #196]
  41dff4:	csel	w25, w25, w0, eq  // eq = none
  41dff8:	ldr	x0, [sp, #112]
  41dffc:	csel	x0, x21, x0, eq  // eq = none
  41e000:	str	x0, [sp, #112]
  41e004:	b	41e09c <_obstack_memory_used@@Base+0xad6c>
  41e008:	ldr	x28, [sp, #400]
  41e00c:	ldr	w0, [sp, #128]
  41e010:	cbz	w0, 41e0c0 <_obstack_memory_used@@Base+0xad90>
  41e014:	mov	x27, #0x1                   	// #1
  41e018:	str	xzr, [sp, #104]
  41e01c:	ldr	x21, [sp, #400]
  41e020:	ldr	x0, [sp, #432]
  41e024:	cmp	x21, x0
  41e028:	b.ge	41e0d4 <_obstack_memory_used@@Base+0xada4>  // b.tcont
  41e02c:	mov	x20, x19
  41e030:	add	x21, x21, #0x1
  41e034:	ldr	x0, [sp, #392]
  41e038:	cmp	x21, x0
  41e03c:	b.ge	41dd40 <_obstack_memory_used@@Base+0xaa10>  // b.tcont
  41e040:	ldr	x0, [sp, #376]
  41e044:	cmp	x21, x0
  41e048:	b.ge	41dd68 <_obstack_memory_used@@Base+0xaa38>  // b.tcont
  41e04c:	ldrb	w0, [x20, #104]
  41e050:	tbnz	w0, #5, 41dd78 <_obstack_memory_used@@Base+0xaa48>
  41e054:	ldr	x0, [sp, #400]
  41e058:	add	x1, x0, #0x1
  41e05c:	str	x1, [sp, #400]
  41e060:	ldr	x1, [sp, #336]
  41e064:	ldrb	w19, [x1, x0]
  41e068:	ldr	x0, [x20, #88]
  41e06c:	cbz	x0, 41df14 <_obstack_memory_used@@Base+0xabe4>
  41e070:	and	x19, x19, #0xff
  41e074:	ldr	x19, [x0, x19, lsl #3]
  41e078:	ldr	x0, [sp, #512]
  41e07c:	cbz	x0, 41e094 <_obstack_memory_used@@Base+0xad64>
  41e080:	mov	x2, x19
  41e084:	add	x1, sp, #0x148
  41e088:	add	x0, sp, #0x108
  41e08c:	bl	41cb58 <_obstack_memory_used@@Base+0x9828>
  41e090:	mov	x19, x0
  41e094:	cbz	x19, 41df6c <_obstack_memory_used@@Base+0xac3c>
  41e098:	cbnz	w25, 41dfec <_obstack_memory_used@@Base+0xacbc>
  41e09c:	ldrb	w0, [x19, #104]
  41e0a0:	tbz	w0, #4, 41e01c <_obstack_memory_used@@Base+0xacec>
  41e0a4:	tbz	w0, #7, 41e008 <_obstack_memory_used@@Base+0xacd8>
  41e0a8:	ldr	x2, [sp, #400]
  41e0ac:	mov	x1, x19
  41e0b0:	add	x0, sp, #0x148
  41e0b4:	bl	4175e8 <_obstack_memory_used@@Base+0x42b8>
  41e0b8:	cbz	x0, 41e01c <_obstack_memory_used@@Base+0xacec>
  41e0bc:	b	41e008 <_obstack_memory_used@@Base+0xacd8>
  41e0c0:	ldr	x25, [sp, #136]
  41e0c4:	b	41e108 <_obstack_memory_used@@Base+0xadd8>
  41e0c8:	ldr	x0, [sp, #240]
  41e0cc:	str	x0, [sp, #104]
  41e0d0:	b	41e0f0 <_obstack_memory_used@@Base+0xadc0>
  41e0d4:	ldr	x25, [sp, #136]
  41e0d8:	b	41e0f0 <_obstack_memory_used@@Base+0xadc0>
  41e0dc:	ldr	x25, [sp, #136]
  41e0e0:	b	41e0f0 <_obstack_memory_used@@Base+0xadc0>
  41e0e4:	ldr	x25, [sp, #136]
  41e0e8:	b	41e0f0 <_obstack_memory_used@@Base+0xadc0>
  41e0ec:	ldr	x25, [sp, #136]
  41e0f0:	ldr	x1, [sp, #104]
  41e0f4:	cbz	x1, 41e108 <_obstack_memory_used@@Base+0xadd8>
  41e0f8:	ldr	x0, [x1]
  41e0fc:	ldr	x2, [sp, #112]
  41e100:	add	x0, x0, x2
  41e104:	str	x0, [x1]
  41e108:	cmn	x28, #0x1
  41e10c:	b.eq	41e584 <_obstack_memory_used@@Base+0xb254>  // b.none
  41e110:	cmn	x28, #0x2
  41e114:	b.eq	41e428 <_obstack_memory_used@@Base+0xb0f8>  // b.none
  41e118:	str	x28, [sp, #496]
  41e11c:	ldr	x0, [sp, #200]
  41e120:	cmp	x0, #0x1
  41e124:	cset	w23, hi  // hi = pmore
  41e128:	ldr	x1, [sp, #224]
  41e12c:	ldrb	w0, [x1, #56]
  41e130:	tst	x0, #0x10
  41e134:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  41e138:	b.ne	41e614 <_obstack_memory_used@@Base+0xb2e4>  // b.any
  41e13c:	ldr	x27, [sp, #176]
  41e140:	ldr	x0, [x27, #152]
  41e144:	cbnz	x0, 41e63c <_obstack_memory_used@@Base+0xb30c>
  41e148:	mov	x25, x1
  41e14c:	ldr	x1, [sp, #200]
  41e150:	cbz	x1, 41e458 <_obstack_memory_used@@Base+0xb128>
  41e154:	cmp	x1, #0x1
  41e158:	b.ls	41e4c8 <_obstack_memory_used@@Base+0xb198>  // b.plast
  41e15c:	ldr	x2, [sp, #248]
  41e160:	add	x0, x2, #0x10
  41e164:	add	x2, x2, x1, lsl #4
  41e168:	mov	x1, #0xffffffffffffffff    	// #-1
  41e16c:	str	x1, [x0, #8]
  41e170:	str	x1, [x0], #16
  41e174:	cmp	x0, x2
  41e178:	b.ne	41e16c <_obstack_memory_used@@Base+0xae3c>  // b.any
  41e17c:	ldr	x1, [sp, #248]
  41e180:	str	xzr, [x1]
  41e184:	ldr	x0, [sp, #496]
  41e188:	str	x0, [x1, #8]
  41e18c:	ldrb	w0, [x25, #56]
  41e190:	tst	x0, #0x10
  41e194:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  41e198:	b.ne	41e29c <_obstack_memory_used@@Base+0xaf6c>  // b.any
  41e19c:	ldrb	w6, [sp, #468]
  41e1a0:	ldr	x8, [sp, #376]
  41e1a4:	ldr	x9, [sp, #352]
  41e1a8:	ldr	x4, [sp, #584]
  41e1ac:	ldr	x0, [sp, #200]
  41e1b0:	lsl	x0, x0, #4
  41e1b4:	ldr	x1, [sp, #248]
  41e1b8:	add	x5, x0, x1
  41e1bc:	ldr	x7, [sp, #384]
  41e1c0:	b	41e308 <_obstack_memory_used@@Base+0xafd8>
  41e1c4:	sub	x28, x28, #0x1
  41e1c8:	cmn	x28, #0x1
  41e1cc:	b.eq	41e554 <_obstack_memory_used@@Base+0xb224>  // b.none
  41e1d0:	ldr	x1, [x2, x28, lsl #3]
  41e1d4:	cbz	x1, 41e1c4 <_obstack_memory_used@@Base+0xae94>
  41e1d8:	ldrb	w0, [x1, #104]
  41e1dc:	tbz	w0, #4, 41e1c4 <_obstack_memory_used@@Base+0xae94>
  41e1e0:	mov	x2, x28
  41e1e4:	add	x0, sp, #0x148
  41e1e8:	bl	4175e8 <_obstack_memory_used@@Base+0x42b8>
  41e1ec:	mov	x22, x0
  41e1f0:	b	41e6a4 <_obstack_memory_used@@Base+0xb374>
  41e1f4:	mov	x3, x27
  41e1f8:	mov	x2, x20
  41e1fc:	mov	x1, x19
  41e200:	mov	x0, x24
  41e204:	bl	41ba0c <_obstack_memory_used@@Base+0x86dc>
  41e208:	mov	w21, w0
  41e20c:	mov	x0, x20
  41e210:	bl	402ae0 <free@plt>
  41e214:	cbz	w21, 41e25c <_obstack_memory_used@@Base+0xaf2c>
  41e218:	mov	x20, #0x0                   	// #0
  41e21c:	b	41e56c <_obstack_memory_used@@Base+0xb23c>
  41e220:	str	x19, [sp, #272]
  41e224:	str	xzr, [sp, #280]
  41e228:	str	x22, [sp, #288]
  41e22c:	str	x28, [sp, #296]
  41e230:	stp	xzr, xzr, [sp, #304]
  41e234:	str	xzr, [sp, #320]
  41e238:	add	x1, sp, #0x110
  41e23c:	add	x0, sp, #0x148
  41e240:	bl	41d334 <_obstack_memory_used@@Base+0xa004>
  41e244:	mov	w21, w0
  41e248:	ldr	x0, [sp, #320]
  41e24c:	bl	402ae0 <free@plt>
  41e250:	cbnz	w21, 41e568 <_obstack_memory_used@@Base+0xb238>
  41e254:	ldr	x20, [x19]
  41e258:	cbz	x20, 41e554 <_obstack_memory_used@@Base+0xb224>
  41e25c:	ldr	x27, [sp, #176]
  41e260:	ldr	x25, [sp, #224]
  41e264:	ldr	x0, [sp, #512]
  41e268:	bl	402ae0 <free@plt>
  41e26c:	str	x19, [sp, #512]
  41e270:	str	x22, [sp, #504]
  41e274:	str	x28, [sp, #496]
  41e278:	b	41e14c <_obstack_memory_used@@Base+0xae1c>
  41e27c:	ldr	x27, [sp, #176]
  41e280:	mov	w0, #0x1                   	// #1
  41e284:	str	w0, [sp, #132]
  41e288:	ldp	x23, x24, [sp, #48]
  41e28c:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e290:	ldr	x27, [sp, #176]
  41e294:	ldr	x25, [sp, #224]
  41e298:	b	41e14c <_obstack_memory_used@@Base+0xae1c>
  41e29c:	ldrb	w0, [x27, #176]
  41e2a0:	ldr	w4, [sp, #132]
  41e2a4:	tbz	w0, #0, 41e2b4 <_obstack_memory_used@@Base+0xaf84>
  41e2a8:	ldr	x0, [x27, #152]
  41e2ac:	cmp	x0, #0x0
  41e2b0:	cset	w4, gt
  41e2b4:	and	w4, w4, #0x1
  41e2b8:	ldr	x3, [sp, #248]
  41e2bc:	ldr	x2, [sp, #200]
  41e2c0:	add	x1, sp, #0x148
  41e2c4:	mov	x0, x25
  41e2c8:	bl	419c68 <_obstack_memory_used@@Base+0x6938>
  41e2cc:	cbz	w0, 41e19c <_obstack_memory_used@@Base+0xae6c>
  41e2d0:	str	w0, [sp, #132]
  41e2d4:	ldp	x23, x24, [sp, #48]
  41e2d8:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e2dc:	ldr	x3, [x9, x10, lsl #3]
  41e2e0:	str	x3, [x2, #8]
  41e2e4:	ldr	x3, [x2]
  41e2e8:	add	x3, x3, x4
  41e2ec:	str	x3, [x2]
  41e2f0:	ldr	x3, [x2, #8]
  41e2f4:	add	x3, x3, x4
  41e2f8:	str	x3, [x2, #8]
  41e2fc:	add	x1, x1, #0x10
  41e300:	cmp	x1, x5
  41e304:	b.eq	41e344 <_obstack_memory_used@@Base+0xb014>  // b.none
  41e308:	mov	x2, x1
  41e30c:	ldr	x3, [x1]
  41e310:	cmn	x3, #0x1
  41e314:	b.eq	41e2fc <_obstack_memory_used@@Base+0xafcc>  // b.none
  41e318:	cbz	w6, 41e2e4 <_obstack_memory_used@@Base+0xafb4>
  41e31c:	mov	x10, x7
  41e320:	cmp	x3, x8
  41e324:	b.eq	41e32c <_obstack_memory_used@@Base+0xaffc>  // b.none
  41e328:	ldr	x10, [x9, x3, lsl #3]
  41e32c:	str	x10, [x2]
  41e330:	ldr	x10, [x2, #8]
  41e334:	mov	x3, x7
  41e338:	cmp	x8, x10
  41e33c:	b.ne	41e2dc <_obstack_memory_used@@Base+0xafac>  // b.any
  41e340:	b	41e2e0 <_obstack_memory_used@@Base+0xafb0>
  41e344:	ldr	x1, [sp, #208]
  41e348:	cmp	x1, #0x0
  41e34c:	b.le	41e378 <_obstack_memory_used@@Base+0xb048>
  41e350:	ldr	x1, [sp, #248]
  41e354:	add	x0, x1, x0
  41e358:	ldr	x2, [sp, #160]
  41e35c:	add	x2, x1, x2, lsl #4
  41e360:	mov	x1, #0xffffffffffffffff    	// #-1
  41e364:	str	x1, [x0]
  41e368:	str	x1, [x0, #8]
  41e36c:	add	x0, x0, #0x10
  41e370:	cmp	x2, x0
  41e374:	b.ne	41e364 <_obstack_memory_used@@Base+0xb034>  // b.any
  41e378:	ldr	x0, [x27, #224]
  41e37c:	cbz	x0, 41e460 <_obstack_memory_used@@Base+0xb130>
  41e380:	ldr	x0, [sp, #200]
  41e384:	cmp	x0, #0x1
  41e388:	b.ls	41e468 <_obstack_memory_used@@Base+0xb138>  // b.plast
  41e38c:	ldr	x4, [sp, #248]
  41e390:	add	x2, x4, #0x10
  41e394:	sub	x3, x0, #0x1
  41e398:	mov	x0, #0x0                   	// #0
  41e39c:	b	41e3d0 <_obstack_memory_used@@Base+0xb0a0>
  41e3a0:	add	x1, x4, x1, lsl #4
  41e3a4:	ldr	x1, [x1, #16]
  41e3a8:	str	x1, [x2]
  41e3ac:	ldr	x1, [x27, #224]
  41e3b0:	ldr	x1, [x1, x0, lsl #3]
  41e3b4:	add	x1, x4, x1, lsl #4
  41e3b8:	ldr	x1, [x1, #24]
  41e3bc:	str	x1, [x2, #8]
  41e3c0:	add	x0, x0, #0x1
  41e3c4:	add	x2, x2, #0x10
  41e3c8:	cmp	x0, x3
  41e3cc:	b.eq	41e3e4 <_obstack_memory_used@@Base+0xb0b4>  // b.none
  41e3d0:	ldr	x1, [x27, #224]
  41e3d4:	ldr	x1, [x1, x0, lsl #3]
  41e3d8:	cmp	x1, x0
  41e3dc:	b.ne	41e3a0 <_obstack_memory_used@@Base+0xb070>  // b.any
  41e3e0:	b	41e3c0 <_obstack_memory_used@@Base+0xb090>
  41e3e4:	ldp	x23, x24, [sp, #48]
  41e3e8:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e3ec:	ldr	w0, [sp, #188]
  41e3f0:	str	w0, [sp, #132]
  41e3f4:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e3f8:	mov	w0, #0xc                   	// #12
  41e3fc:	str	w0, [sp, #132]
  41e400:	ldp	x23, x24, [sp, #48]
  41e404:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e408:	mov	w0, #0xc                   	// #12
  41e40c:	str	w0, [sp, #132]
  41e410:	ldp	x23, x24, [sp, #48]
  41e414:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e418:	mov	w0, #0x1                   	// #1
  41e41c:	str	w0, [sp, #132]
  41e420:	ldp	x23, x24, [sp, #48]
  41e424:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e428:	ldr	x27, [sp, #176]
  41e42c:	mov	w0, #0xc                   	// #12
  41e430:	str	w0, [sp, #132]
  41e434:	ldp	x23, x24, [sp, #48]
  41e438:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e43c:	ldr	x27, [sp, #176]
  41e440:	str	w0, [sp, #132]
  41e444:	ldp	x23, x24, [sp, #48]
  41e448:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e44c:	ldr	x27, [sp, #176]
  41e450:	ldp	x23, x24, [sp, #48]
  41e454:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e458:	ldp	x23, x24, [sp, #48]
  41e45c:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e460:	ldp	x23, x24, [sp, #48]
  41e464:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e468:	ldp	x23, x24, [sp, #48]
  41e46c:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e470:	add	x0, sp, #0x148
  41e474:	bl	416e28 <_obstack_memory_used@@Base+0x3af8>
  41e478:	ldr	x0, [sp, #576]
  41e47c:	bl	402ae0 <free@plt>
  41e480:	ldr	x0, [sp, #544]
  41e484:	bl	402ae0 <free@plt>
  41e488:	b	41db64 <_obstack_memory_used@@Base+0xa834>
  41e48c:	mov	w0, #0x1                   	// #1
  41e490:	str	w0, [sp, #132]
  41e494:	b	41db6c <_obstack_memory_used@@Base+0xa83c>
  41e498:	mov	w0, #0x1                   	// #1
  41e49c:	str	w0, [sp, #132]
  41e4a0:	b	41db6c <_obstack_memory_used@@Base+0xa83c>
  41e4a4:	mov	w0, #0x1                   	// #1
  41e4a8:	str	w0, [sp, #132]
  41e4ac:	b	41db6c <_obstack_memory_used@@Base+0xa83c>
  41e4b0:	mov	w0, #0x1                   	// #1
  41e4b4:	str	w0, [sp, #132]
  41e4b8:	b	41db6c <_obstack_memory_used@@Base+0xa83c>
  41e4bc:	mov	w0, #0x1                   	// #1
  41e4c0:	str	w0, [sp, #132]
  41e4c4:	b	41db6c <_obstack_memory_used@@Base+0xa83c>
  41e4c8:	ldr	x1, [sp, #248]
  41e4cc:	str	xzr, [x1]
  41e4d0:	ldr	x0, [sp, #496]
  41e4d4:	str	x0, [x1, #8]
  41e4d8:	b	41e19c <_obstack_memory_used@@Base+0xae6c>
  41e4dc:	ldr	x27, [sp, #176]
  41e4e0:	mov	w0, #0xc                   	// #12
  41e4e4:	str	w0, [sp, #132]
  41e4e8:	ldp	x23, x24, [sp, #48]
  41e4ec:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e4f0:	ldr	x27, [sp, #176]
  41e4f4:	mov	w0, #0xc                   	// #12
  41e4f8:	str	w0, [sp, #132]
  41e4fc:	ldp	x23, x24, [sp, #48]
  41e500:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e504:	str	wzr, [sp, #264]
  41e508:	b	41e054 <_obstack_memory_used@@Base+0xad24>
  41e50c:	mov	w0, #0xc                   	// #12
  41e510:	str	w0, [sp, #132]
  41e514:	ldp	x23, x24, [sp, #48]
  41e518:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e51c:	ldr	x0, [sp, #168]
  41e520:	str	x0, [sp, #336]
  41e524:	ldr	w0, [x27, #180]
  41e528:	cmp	w0, #0x2
  41e52c:	ldr	x0, [sp, #152]
  41e530:	csel	x0, x0, xzr, lt  // lt = tstop
  41e534:	b	41d788 <_obstack_memory_used@@Base+0xa458>
  41e538:	ldr	x27, [sp, #176]
  41e53c:	mov	x0, x19
  41e540:	bl	402ae0 <free@plt>
  41e544:	mov	w21, #0xc                   	// #12
  41e548:	str	w21, [sp, #132]
  41e54c:	ldp	x23, x24, [sp, #48]
  41e550:	b	41db54 <_obstack_memory_used@@Base+0xa824>
  41e554:	mov	x0, x19
  41e558:	bl	402ae0 <free@plt>
  41e55c:	mov	x0, x20
  41e560:	bl	402ae0 <free@plt>
  41e564:	b	41e584 <_obstack_memory_used@@Base+0xb254>
  41e568:	mov	x20, #0x0                   	// #0
  41e56c:	mov	x0, x19
  41e570:	bl	402ae0 <free@plt>
  41e574:	mov	x0, x20
  41e578:	bl	402ae0 <free@plt>
  41e57c:	cmp	w21, #0x1
  41e580:	b.ne	41e60c <_obstack_memory_used@@Base+0xb2dc>  // b.any
  41e584:	add	x0, sp, #0x148
  41e588:	bl	416e28 <_obstack_memory_used@@Base+0x3af8>
  41e58c:	ldr	x0, [sp, #584]
  41e590:	ldr	w1, [sp, #192]
  41e594:	add	x0, x0, w1, sxtw
  41e598:	str	x0, [sp, #584]
  41e59c:	ldr	x1, [sp, #144]
  41e5a0:	cmp	x0, x1
  41e5a4:	ccmp	x0, x25, #0x0, ge  // ge = tcont
  41e5a8:	b.gt	41e27c <_obstack_memory_used@@Base+0xaf4c>
  41e5ac:	ldr	w0, [sp, #184]
  41e5b0:	cmp	w0, #0x7
  41e5b4:	b.eq	41d964 <_obstack_memory_used@@Base+0xa634>  // b.none
  41e5b8:	b.gt	41da44 <_obstack_memory_used@@Base+0xa714>
  41e5bc:	cmp	w0, #0x5
  41e5c0:	b.le	41d948 <_obstack_memory_used@@Base+0xa618>
  41e5c4:	ldr	w0, [sp, #184]
  41e5c8:	cmp	w0, #0x6
  41e5cc:	b.ne	41d950 <_obstack_memory_used@@Base+0xa620>  // b.any
  41e5d0:	ldr	x0, [sp, #584]
  41e5d4:	ldr	w2, [sp, #196]
  41e5d8:	mov	w3, #0x1                   	// #1
  41e5dc:	cmp	x25, x0
  41e5e0:	b.le	41da38 <_obstack_memory_used@@Base+0xa708>
  41e5e4:	ldr	x4, [sp, #168]
  41e5e8:	ldrb	w1, [x4, x0]
  41e5ec:	ldrb	w1, [x26, x1]
  41e5f0:	cbnz	w1, 41dafc <_obstack_memory_used@@Base+0xa7cc>
  41e5f4:	add	x0, x0, #0x1
  41e5f8:	mov	w2, w3
  41e5fc:	cmp	x0, x25
  41e600:	b.ne	41e5e8 <_obstack_memory_used@@Base+0xb2b8>  // b.any
  41e604:	str	x25, [sp, #584]
  41e608:	b	41d9a4 <_obstack_memory_used@@Base+0xa674>
  41e60c:	ldr	x27, [sp, #176]
  41e610:	b	41e548 <_obstack_memory_used@@Base+0xb218>
  41e614:	mov	x2, x28
  41e618:	ldr	x0, [sp, #512]
  41e61c:	ldr	x1, [x0, x28, lsl #3]
  41e620:	add	x0, sp, #0x148
  41e624:	bl	4175e8 <_obstack_memory_used@@Base+0x42b8>
  41e628:	str	x0, [sp, #504]
  41e62c:	ldr	x0, [sp, #176]
  41e630:	ldrb	w0, [x0, #176]
  41e634:	tbnz	w0, #0, 41e660 <_obstack_memory_used@@Base+0xb330>
  41e638:	b	41e654 <_obstack_memory_used@@Base+0xb324>
  41e63c:	mov	x2, x28
  41e640:	ldr	x0, [sp, #512]
  41e644:	ldr	x1, [x0, x28, lsl #3]
  41e648:	add	x0, sp, #0x148
  41e64c:	bl	4175e8 <_obstack_memory_used@@Base+0x42b8>
  41e650:	str	x0, [sp, #504]
  41e654:	ldr	x0, [sp, #176]
  41e658:	ldr	x0, [x0, #152]
  41e65c:	cbz	x0, 41e290 <_obstack_memory_used@@Base+0xaf60>
  41e660:	ldr	x24, [sp, #480]
  41e664:	ldr	x22, [sp, #504]
  41e668:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  41e66c:	cmp	x28, x0
  41e670:	b.hi	41e4dc <_obstack_memory_used@@Base+0xb1ac>  // b.pmore
  41e674:	add	x20, x28, #0x1
  41e678:	lsl	x20, x20, #3
  41e67c:	mov	x0, x20
  41e680:	bl	402800 <malloc@plt>
  41e684:	mov	x19, x0
  41e688:	cbz	x0, 41e538 <_obstack_memory_used@@Base+0xb208>
  41e68c:	ldr	x0, [x24, #152]
  41e690:	cbz	x0, 41e220 <_obstack_memory_used@@Base+0xaef0>
  41e694:	mov	x0, x20
  41e698:	bl	402800 <malloc@plt>
  41e69c:	mov	x20, x0
  41e6a0:	cbz	x0, 41e538 <_obstack_memory_used@@Base+0xb208>
  41e6a4:	add	x27, x28, #0x1
  41e6a8:	lsl	x2, x27, #3
  41e6ac:	mov	w1, #0x0                   	// #0
  41e6b0:	mov	x0, x20
  41e6b4:	bl	4028d0 <memset@plt>
  41e6b8:	str	x19, [sp, #272]
  41e6bc:	str	x20, [sp, #280]
  41e6c0:	str	x22, [sp, #288]
  41e6c4:	str	x28, [sp, #296]
  41e6c8:	stp	xzr, xzr, [sp, #304]
  41e6cc:	str	xzr, [sp, #320]
  41e6d0:	add	x1, sp, #0x110
  41e6d4:	add	x0, sp, #0x148
  41e6d8:	bl	41d334 <_obstack_memory_used@@Base+0xa004>
  41e6dc:	mov	w21, w0
  41e6e0:	ldr	x0, [sp, #320]
  41e6e4:	bl	402ae0 <free@plt>
  41e6e8:	cbnz	w21, 41e56c <_obstack_memory_used@@Base+0xb23c>
  41e6ec:	ldr	x0, [x19]
  41e6f0:	cbnz	x0, 41e1f4 <_obstack_memory_used@@Base+0xaec4>
  41e6f4:	ldr	x0, [x20]
  41e6f8:	cbnz	x0, 41e1f4 <_obstack_memory_used@@Base+0xaec4>
  41e6fc:	subs	x28, x28, #0x1
  41e700:	b.mi	41e554 <_obstack_memory_used@@Base+0xb224>  // b.first
  41e704:	ldr	x2, [sp, #512]
  41e708:	b	41e1d0 <_obstack_memory_used@@Base+0xaea0>
  41e70c:	ldr	x25, [sp, #136]
  41e710:	ldr	w0, [sp, #264]
  41e714:	cbz	w0, 41e0f0 <_obstack_memory_used@@Base+0xadc0>
  41e718:	ldr	x27, [sp, #176]
  41e71c:	b	41e4f4 <_obstack_memory_used@@Base+0xb1c4>
  41e720:	stp	x29, x30, [sp, #-288]!
  41e724:	mov	x29, sp
  41e728:	stp	x19, x20, [sp, #16]
  41e72c:	stp	x21, x22, [sp, #32]
  41e730:	stp	x23, x24, [sp, #48]
  41e734:	mov	x20, x0
  41e738:	mov	x24, x1
  41e73c:	mov	x21, x2
  41e740:	mov	x23, x3
  41e744:	str	wzr, [sp, #284]
  41e748:	ldrb	w0, [x0, #56]
  41e74c:	str	x3, [x20, #24]
  41e750:	str	xzr, [x20, #16]
  41e754:	str	xzr, [x20, #48]
  41e758:	mov	w1, #0xffffff90            	// #-112
  41e75c:	and	w0, w0, w1
  41e760:	strb	w0, [x20, #56]
  41e764:	ldr	x19, [x20]
  41e768:	ldr	x0, [x20, #8]
  41e76c:	cmp	x0, #0xe7
  41e770:	b.ls	41e9bc <_obstack_memory_used@@Base+0xb68c>  // b.plast
  41e774:	mov	x2, #0xe8                  	// #232
  41e778:	str	x2, [x20, #16]
  41e77c:	mov	w1, #0x0                   	// #0
  41e780:	mov	x0, x19
  41e784:	bl	4028d0 <memset@plt>
  41e788:	mov	w0, #0xf                   	// #15
  41e78c:	str	w0, [x19, #128]
  41e790:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  41e794:	movk	x0, #0x555, lsl #48
  41e798:	cmp	x21, x0
  41e79c:	b.cs	41f1ec <_obstack_memory_used@@Base+0xbebc>  // b.hs, b.nlast
  41e7a0:	stp	x25, x26, [sp, #64]
  41e7a4:	add	x0, x21, #0x1
  41e7a8:	str	x0, [x19, #8]
  41e7ac:	lsl	x0, x0, #4
  41e7b0:	bl	402800 <malloc@plt>
  41e7b4:	str	x0, [x19]
  41e7b8:	cbz	x21, 41e9e0 <_obstack_memory_used@@Base+0xb6b0>
  41e7bc:	mov	x22, #0x1                   	// #1
  41e7c0:	lsl	x22, x22, #1
  41e7c4:	cmp	x21, x22
  41e7c8:	b.cs	41e7c0 <_obstack_memory_used@@Base+0xb490>  // b.hs, b.nlast
  41e7cc:	mov	x1, x22
  41e7d0:	mov	x0, #0x18                  	// #24
  41e7d4:	bl	402910 <calloc@plt>
  41e7d8:	str	x0, [x19, #64]
  41e7dc:	sub	x22, x22, #0x1
  41e7e0:	str	x22, [x19, #136]
  41e7e4:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  41e7e8:	str	w0, [x19, #180]
  41e7ec:	mov	w0, #0xe                   	// #14
  41e7f0:	bl	4027c0 <nl_langinfo@plt>
  41e7f4:	ldrb	w1, [x0]
  41e7f8:	and	w1, w1, #0xffffffdf
  41e7fc:	and	w1, w1, #0xff
  41e800:	cmp	w1, #0x55
  41e804:	b.ne	41e860 <_obstack_memory_used@@Base+0xb530>  // b.any
  41e808:	ldrb	w1, [x0, #1]
  41e80c:	and	w1, w1, #0xffffffdf
  41e810:	and	w1, w1, #0xff
  41e814:	cmp	w1, #0x54
  41e818:	b.ne	41e860 <_obstack_memory_used@@Base+0xb530>  // b.any
  41e81c:	ldrb	w1, [x0, #2]
  41e820:	and	w1, w1, #0xffffffdf
  41e824:	and	w1, w1, #0xff
  41e828:	cmp	w1, #0x46
  41e82c:	b.ne	41e860 <_obstack_memory_used@@Base+0xb530>  // b.any
  41e830:	ldrb	w1, [x0, #3]
  41e834:	cmp	w1, #0x2d
  41e838:	cset	x2, eq  // eq = none
  41e83c:	add	x2, x2, #0x3
  41e840:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  41e844:	add	x1, x1, #0xa18
  41e848:	add	x0, x0, x2
  41e84c:	bl	402aa0 <strcmp@plt>
  41e850:	cbnz	w0, 41e860 <_obstack_memory_used@@Base+0xb530>
  41e854:	ldrb	w0, [x19, #176]
  41e858:	orr	w0, w0, #0x4
  41e85c:	strb	w0, [x19, #176]
  41e860:	ldrb	w0, [x19, #176]
  41e864:	and	w0, w0, #0xfffffff7
  41e868:	strb	w0, [x19, #176]
  41e86c:	ldr	w0, [x19, #180]
  41e870:	cmp	w0, #0x1
  41e874:	b.le	41e88c <_obstack_memory_used@@Base+0xb55c>
  41e878:	ldrb	w0, [x19, #176]
  41e87c:	tbz	w0, #2, 41e9e8 <_obstack_memory_used@@Base+0xb6b8>
  41e880:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xecd0>
  41e884:	add	x0, x0, #0x7e8
  41e888:	str	x0, [x19, #120]
  41e88c:	ldr	x0, [x19]
  41e890:	cbz	x0, 41f1e8 <_obstack_memory_used@@Base+0xbeb8>
  41e894:	ldr	x0, [x19, #64]
  41e898:	cbz	x0, 41ea2c <_obstack_memory_used@@Base+0xb6fc>
  41e89c:	str	wzr, [sp, #284]
  41e8a0:	mov	x22, x21
  41e8a4:	ldr	x0, [x20, #40]
  41e8a8:	ands	x25, x23, #0x400000
  41e8ac:	orr	x26, x0, x25
  41e8b0:	stp	xzr, xzr, [sp, #136]
  41e8b4:	stp	xzr, xzr, [sp, #152]
  41e8b8:	stp	xzr, xzr, [sp, #168]
  41e8bc:	stp	xzr, xzr, [sp, #184]
  41e8c0:	stp	xzr, xzr, [sp, #200]
  41e8c4:	stp	xzr, xzr, [sp, #216]
  41e8c8:	stp	xzr, xzr, [sp, #232]
  41e8cc:	stp	xzr, xzr, [sp, #248]
  41e8d0:	add	x1, sp, #0x200
  41e8d4:	stp	xzr, xzr, [x1, #-248]
  41e8d8:	str	x24, [sp, #128]
  41e8dc:	str	x21, [sp, #216]
  41e8e0:	str	x21, [sp, #208]
  41e8e4:	str	x0, [sp, #248]
  41e8e8:	cset	w0, ne  // ne = any
  41e8ec:	strb	w0, [sp, #264]
  41e8f0:	cmp	x26, #0x0
  41e8f4:	cset	w0, ne  // ne = any
  41e8f8:	strb	w0, [sp, #267]
  41e8fc:	ldr	w0, [x19, #180]
  41e900:	str	w0, [sp, #272]
  41e904:	ldrb	w0, [x19, #176]
  41e908:	ubfx	x1, x0, #2, #1
  41e90c:	strb	w1, [sp, #265]
  41e910:	ubfx	x0, x0, #3, #1
  41e914:	strb	w0, [sp, #266]
  41e918:	str	x21, [sp, #232]
  41e91c:	str	x21, [sp, #224]
  41e920:	cmp	x21, #0x0
  41e924:	b.gt	41ea34 <_obstack_memory_used@@Base+0xb704>
  41e928:	ldrb	w0, [sp, #267]
  41e92c:	cmp	w0, #0x0
  41e930:	ldr	x0, [sp, #136]
  41e934:	csel	x24, x0, x24, ne  // ne = any
  41e938:	str	x24, [sp, #136]
  41e93c:	cbz	x25, 41ea54 <_obstack_memory_used@@Base+0xb724>
  41e940:	ldr	w0, [x19, #180]
  41e944:	cmp	w0, #0x1
  41e948:	b.le	41ea48 <_obstack_memory_used@@Base+0xb718>
  41e94c:	add	x0, sp, #0x80
  41e950:	bl	414ff4 <_obstack_memory_used@@Base+0x1cc4>
  41e954:	cbnz	w0, 41e98c <_obstack_memory_used@@Base+0xb65c>
  41e958:	ldr	x0, [sp, #184]
  41e95c:	cmp	x22, x0
  41e960:	b.le	41ea78 <_obstack_memory_used@@Base+0xb748>
  41e964:	ldr	x1, [sp, #192]
  41e968:	ldrsw	x0, [x19, #180]
  41e96c:	ldr	x2, [sp, #176]
  41e970:	add	x0, x0, x2
  41e974:	cmp	x1, x0
  41e978:	b.gt	41ea78 <_obstack_memory_used@@Base+0xb748>
  41e97c:	lsl	x1, x1, #1
  41e980:	add	x0, sp, #0x80
  41e984:	bl	413f8c <_obstack_memory_used@@Base+0xc5c>
  41e988:	cbz	w0, 41e94c <_obstack_memory_used@@Base+0xb61c>
  41e98c:	str	w0, [sp, #284]
  41e990:	mov	x0, x20
  41e994:	bl	416c14 <_obstack_memory_used@@Base+0x38e4>
  41e998:	add	x0, sp, #0x80
  41e99c:	bl	416c64 <_obstack_memory_used@@Base+0x3934>
  41e9a0:	mov	x0, x19
  41e9a4:	bl	416ca4 <_obstack_memory_used@@Base+0x3974>
  41e9a8:	str	xzr, [x20]
  41e9ac:	str	xzr, [x20, #8]
  41e9b0:	ldr	w0, [sp, #284]
  41e9b4:	ldp	x25, x26, [sp, #64]
  41e9b8:	b	41f0cc <_obstack_memory_used@@Base+0xbd9c>
  41e9bc:	mov	x1, #0xe8                  	// #232
  41e9c0:	mov	x0, x19
  41e9c4:	bl	402930 <realloc@plt>
  41e9c8:	mov	x19, x0
  41e9cc:	cbz	x0, 41f16c <_obstack_memory_used@@Base+0xbe3c>
  41e9d0:	mov	x0, #0xe8                  	// #232
  41e9d4:	str	x0, [x20, #8]
  41e9d8:	str	x19, [x20]
  41e9dc:	b	41e774 <_obstack_memory_used@@Base+0xb444>
  41e9e0:	mov	x22, #0x1                   	// #1
  41e9e4:	b	41e7cc <_obstack_memory_used@@Base+0xb49c>
  41e9e8:	mov	x1, #0x1                   	// #1
  41e9ec:	mov	x0, #0x20                  	// #32
  41e9f0:	bl	402910 <calloc@plt>
  41e9f4:	str	x0, [x19, #120]
  41e9f8:	cbz	x0, 41f1e0 <_obstack_memory_used@@Base+0xbeb0>
  41e9fc:	str	x27, [sp, #80]
  41ea00:	mov	x25, #0x0                   	// #0
  41ea04:	mov	x27, #0x1                   	// #1
  41ea08:	b	41ea18 <_obstack_memory_used@@Base+0xb6e8>
  41ea0c:	add	x25, x25, #0x8
  41ea10:	cmp	x25, #0x20
  41ea14:	b.eq	41ea24 <_obstack_memory_used@@Base+0xb6f4>  // b.none
  41ea18:	lsl	w22, w25, #3
  41ea1c:	mov	w26, #0x0                   	// #0
  41ea20:	b	41f230 <_obstack_memory_used@@Base+0xbf00>
  41ea24:	ldr	x27, [sp, #80]
  41ea28:	b	41e88c <_obstack_memory_used@@Base+0xb55c>
  41ea2c:	ldp	x25, x26, [sp, #64]
  41ea30:	b	41f1ec <_obstack_memory_used@@Base+0xbebc>
  41ea34:	add	x1, x21, #0x1
  41ea38:	add	x0, sp, #0x80
  41ea3c:	bl	413f8c <_obstack_memory_used@@Base+0xc5c>
  41ea40:	cbz	w0, 41e928 <_obstack_memory_used@@Base+0xb5f8>
  41ea44:	b	41e98c <_obstack_memory_used@@Base+0xb65c>
  41ea48:	add	x0, sp, #0x80
  41ea4c:	bl	414800 <_obstack_memory_used@@Base+0x14d0>
  41ea50:	b	41ea78 <_obstack_memory_used@@Base+0xb748>
  41ea54:	ldr	w0, [x19, #180]
  41ea58:	cmp	w0, #0x1
  41ea5c:	b.gt	41ea70 <_obstack_memory_used@@Base+0xb740>
  41ea60:	cbz	x26, 41ec6c <_obstack_memory_used@@Base+0xb93c>
  41ea64:	add	x0, sp, #0x80
  41ea68:	bl	4133d0 <_obstack_memory_used@@Base+0xa0>
  41ea6c:	b	41ea78 <_obstack_memory_used@@Base+0xb748>
  41ea70:	add	x0, sp, #0x80
  41ea74:	bl	414898 <_obstack_memory_used@@Base+0x1568>
  41ea78:	str	wzr, [sp, #284]
  41ea7c:	str	xzr, [x20, #48]
  41ea80:	ldr	x24, [x20]
  41ea84:	str	x23, [x24, #216]
  41ea88:	orr	x2, x23, #0x800000
  41ea8c:	add	x1, sp, #0x80
  41ea90:	add	x0, sp, #0x68
  41ea94:	bl	415eb4 <_obstack_memory_used@@Base+0x2b84>
  41ea98:	add	x5, sp, #0x11c
  41ea9c:	mov	x4, #0x0                   	// #0
  41eaa0:	mov	x3, x23
  41eaa4:	add	x2, sp, #0x68
  41eaa8:	mov	x1, x20
  41eaac:	add	x0, sp, #0x80
  41eab0:	bl	41b694 <_obstack_memory_used@@Base+0x8364>
  41eab4:	mov	x21, x0
  41eab8:	ldr	w0, [sp, #284]
  41eabc:	cmp	w0, #0x0
  41eac0:	ccmp	x21, #0x0, #0x0, ne  // ne = any
  41eac4:	b.eq	41ec84 <_obstack_memory_used@@Base+0xb954>  // b.none
  41eac8:	mov	w3, #0x2                   	// #2
  41eacc:	mov	x2, #0x0                   	// #0
  41ead0:	mov	x1, #0x0                   	// #0
  41ead4:	mov	x0, x24
  41ead8:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41eadc:	mov	x22, x0
  41eae0:	cbz	x21, 41eaf8 <_obstack_memory_used@@Base+0xb7c8>
  41eae4:	mov	w3, #0x10                  	// #16
  41eae8:	mov	x2, x0
  41eaec:	mov	x1, x21
  41eaf0:	mov	x0, x24
  41eaf4:	bl	414218 <_obstack_memory_used@@Base+0xee8>
  41eaf8:	cmp	x22, #0x0
  41eafc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41eb00:	b.eq	41ec7c <_obstack_memory_used@@Base+0xb94c>  // b.none
  41eb04:	str	x0, [x19, #104]
  41eb08:	ldr	x21, [x20]
  41eb0c:	ldr	x22, [x21, #8]
  41eb10:	lsl	x24, x22, #3
  41eb14:	mov	x0, x24
  41eb18:	bl	402800 <malloc@plt>
  41eb1c:	mov	x23, x0
  41eb20:	str	x0, [x21, #24]
  41eb24:	mov	x0, x24
  41eb28:	bl	402800 <malloc@plt>
  41eb2c:	mov	x24, x0
  41eb30:	str	x0, [x21, #32]
  41eb34:	add	x22, x22, x22, lsl #1
  41eb38:	lsl	x22, x22, #3
  41eb3c:	mov	x0, x22
  41eb40:	bl	402800 <malloc@plt>
  41eb44:	mov	x26, x0
  41eb48:	str	x0, [x21, #40]
  41eb4c:	mov	x0, x22
  41eb50:	bl	402800 <malloc@plt>
  41eb54:	str	x0, [x21, #48]
  41eb58:	cmp	x24, #0x0
  41eb5c:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  41eb60:	cset	w24, eq  // eq = none
  41eb64:	cmp	x26, #0x0
  41eb68:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41eb6c:	csinc	w24, w24, wzr, ne  // ne = any
  41eb70:	cbnz	w24, 41f1cc <_obstack_memory_used@@Base+0xbe9c>
  41eb74:	ldr	x0, [x20, #48]
  41eb78:	lsl	x0, x0, #3
  41eb7c:	bl	402800 <malloc@plt>
  41eb80:	str	x0, [x21, #224]
  41eb84:	cbz	x0, 41ebfc <_obstack_memory_used@@Base+0xb8cc>
  41eb88:	ldr	x0, [x20, #48]
  41eb8c:	cbz	x0, 41ebac <_obstack_memory_used@@Base+0xb87c>
  41eb90:	mov	x0, #0x0                   	// #0
  41eb94:	ldr	x1, [x21, #224]
  41eb98:	str	x0, [x1, x0, lsl #3]
  41eb9c:	add	x0, x0, #0x1
  41eba0:	ldr	x1, [x20, #48]
  41eba4:	cmp	x0, x1
  41eba8:	b.cc	41eb94 <_obstack_memory_used@@Base+0xb864>  // b.lo, b.ul, b.last
  41ebac:	mov	x2, x21
  41ebb0:	adrp	x1, 413000 <wcrtomb@plt+0x102c0>
  41ebb4:	add	x1, x1, #0x534
  41ebb8:	ldr	x0, [x21, #104]
  41ebbc:	bl	413f18 <_obstack_memory_used@@Base+0xbe8>
  41ebc0:	ldr	x3, [x20, #48]
  41ebc4:	cbz	x3, 41ec8c <_obstack_memory_used@@Base+0xb95c>
  41ebc8:	ldr	x5, [x21, #224]
  41ebcc:	mov	x4, x3
  41ebd0:	mov	x0, #0x0                   	// #0
  41ebd4:	mov	x1, x0
  41ebd8:	ldr	x2, [x5, x0, lsl #3]
  41ebdc:	cmp	x0, x2
  41ebe0:	b.ne	41ebf4 <_obstack_memory_used@@Base+0xb8c4>  // b.any
  41ebe4:	add	x0, x0, #0x1
  41ebe8:	mov	x1, x0
  41ebec:	cmp	x4, x0
  41ebf0:	b.ne	41ebd4 <_obstack_memory_used@@Base+0xb8a4>  // b.any
  41ebf4:	cmp	x1, x3
  41ebf8:	b.eq	41ec8c <_obstack_memory_used@@Base+0xb95c>  // b.none
  41ebfc:	mov	x2, x20
  41ec00:	adrp	x1, 414000 <_obstack_memory_used@@Base+0xcd0>
  41ec04:	add	x1, x1, #0x394
  41ec08:	ldr	x0, [x21, #104]
  41ec0c:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41ec10:	cbnz	w0, 41f1d8 <_obstack_memory_used@@Base+0xbea8>
  41ec14:	mov	x2, x21
  41ec18:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2cd0>
  41ec1c:	add	x1, x1, #0x248
  41ec20:	ldr	x0, [x21, #104]
  41ec24:	bl	413ea4 <_obstack_memory_used@@Base+0xb74>
  41ec28:	cbnz	w0, 41f1d8 <_obstack_memory_used@@Base+0xbea8>
  41ec2c:	mov	x2, x21
  41ec30:	adrp	x1, 413000 <wcrtomb@plt+0x102c0>
  41ec34:	add	x1, x1, #0x5d8
  41ec38:	ldr	x0, [x21, #104]
  41ec3c:	bl	413f18 <_obstack_memory_used@@Base+0xbe8>
  41ec40:	mov	x2, x21
  41ec44:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2cd0>
  41ec48:	add	x1, x1, #0xf70
  41ec4c:	ldr	x0, [x21, #104]
  41ec50:	bl	413f18 <_obstack_memory_used@@Base+0xbe8>
  41ec54:	cbnz	w0, 41f1d8 <_obstack_memory_used@@Base+0xbea8>
  41ec58:	str	x27, [sp, #80]
  41ec5c:	mov	w26, w24
  41ec60:	mov	x22, #0x0                   	// #0
  41ec64:	mov	w27, #0x1                   	// #1
  41ec68:	b	41ecc8 <_obstack_memory_used@@Base+0xb998>
  41ec6c:	ldr	x0, [sp, #192]
  41ec70:	str	x0, [sp, #176]
  41ec74:	str	x0, [sp, #184]
  41ec78:	b	41ea78 <_obstack_memory_used@@Base+0xb748>
  41ec7c:	mov	w0, #0xc                   	// #12
  41ec80:	str	w0, [sp, #284]
  41ec84:	str	xzr, [x19, #104]
  41ec88:	b	41e990 <_obstack_memory_used@@Base+0xb660>
  41ec8c:	ldr	x0, [x21, #224]
  41ec90:	bl	402ae0 <free@plt>
  41ec94:	str	xzr, [x21, #224]
  41ec98:	b	41ebfc <_obstack_memory_used@@Base+0xb8cc>
  41ec9c:	cbz	w26, 41ed0c <_obstack_memory_used@@Base+0xb9dc>
  41eca0:	mov	w26, w24
  41eca4:	mov	x22, #0x0                   	// #0
  41eca8:	b	41ecc8 <_obstack_memory_used@@Base+0xb998>
  41ecac:	ldr	x0, [sp, #120]
  41ecb0:	bl	402ae0 <free@plt>
  41ecb4:	mov	w26, #0x1                   	// #1
  41ecb8:	add	x22, x22, #0x1
  41ecbc:	ldr	x0, [x21, #16]
  41ecc0:	cmp	x0, x22
  41ecc4:	b.eq	41ec9c <_obstack_memory_used@@Base+0xb96c>  // b.none
  41ecc8:	add	x23, x22, x22, lsl #1
  41eccc:	lsl	x23, x23, #3
  41ecd0:	ldr	x0, [x21, #48]
  41ecd4:	add	x0, x0, x23
  41ecd8:	ldr	x0, [x0, #8]
  41ecdc:	cbnz	x0, 41ecb8 <_obstack_memory_used@@Base+0xb988>
  41ece0:	mov	w3, w27
  41ece4:	mov	x2, x22
  41ece8:	mov	x1, x21
  41ecec:	add	x0, sp, #0x68
  41ecf0:	bl	416694 <_obstack_memory_used@@Base+0x3364>
  41ecf4:	cbnz	w0, 41f1d4 <_obstack_memory_used@@Base+0xbea4>
  41ecf8:	ldr	x0, [x21, #48]
  41ecfc:	add	x23, x0, x23
  41ed00:	ldr	x0, [x23, #8]
  41ed04:	cbnz	x0, 41ecb8 <_obstack_memory_used@@Base+0xb988>
  41ed08:	b	41ecac <_obstack_memory_used@@Base+0xb97c>
  41ed0c:	ldrb	w0, [x20, #56]
  41ed10:	tbz	w0, #4, 41ee40 <_obstack_memory_used@@Base+0xbb10>
  41ed14:	ldr	x0, [x21, #152]
  41ed18:	cbz	x0, 41edd8 <_obstack_memory_used@@Base+0xbaa8>
  41ed1c:	ldr	x22, [x21, #16]
  41ed20:	add	x0, x22, x22, lsl #1
  41ed24:	lsl	x0, x0, #3
  41ed28:	bl	402800 <malloc@plt>
  41ed2c:	str	x0, [x21, #56]
  41ed30:	cbz	x0, 41f1b4 <_obstack_memory_used@@Base+0xbe84>
  41ed34:	cbz	x22, 41edd8 <_obstack_memory_used@@Base+0xbaa8>
  41ed38:	mov	x2, #0x0                   	// #0
  41ed3c:	mov	x1, #0x0                   	// #0
  41ed40:	ldr	x0, [x21, #56]
  41ed44:	add	x0, x0, x2
  41ed48:	stp	xzr, xzr, [x0]
  41ed4c:	str	xzr, [x0, #16]
  41ed50:	add	x1, x1, #0x1
  41ed54:	ldr	x0, [x21, #16]
  41ed58:	add	x2, x2, #0x18
  41ed5c:	cmp	x0, x1
  41ed60:	b.hi	41ed40 <_obstack_memory_used@@Base+0xba10>  // b.pmore
  41ed64:	cbz	x0, 41edd8 <_obstack_memory_used@@Base+0xbaa8>
  41ed68:	mov	x23, #0x0                   	// #0
  41ed6c:	mov	x24, #0x0                   	// #0
  41ed70:	ldr	x0, [x21, #48]
  41ed74:	add	x0, x0, x23
  41ed78:	ldr	x27, [x0, #16]
  41ed7c:	ldr	x0, [x0, #8]
  41ed80:	cmp	x0, #0x0
  41ed84:	b.le	41edc4 <_obstack_memory_used@@Base+0xba94>
  41ed88:	mov	x22, #0x0                   	// #0
  41ed8c:	ldr	x0, [x27, x22, lsl #3]
  41ed90:	add	x0, x0, x0, lsl #1
  41ed94:	ldr	x2, [x21, #56]
  41ed98:	mov	x1, x24
  41ed9c:	add	x0, x2, x0, lsl #3
  41eda0:	bl	414038 <_obstack_memory_used@@Base+0xd08>
  41eda4:	and	w0, w0, #0xff
  41eda8:	cbz	w0, 41f1c0 <_obstack_memory_used@@Base+0xbe90>
  41edac:	add	x22, x22, #0x1
  41edb0:	ldr	x0, [x21, #48]
  41edb4:	add	x0, x0, x23
  41edb8:	ldr	x0, [x0, #8]
  41edbc:	cmp	x22, x0
  41edc0:	b.lt	41ed8c <_obstack_memory_used@@Base+0xba5c>  // b.tstop
  41edc4:	add	x24, x24, #0x1
  41edc8:	add	x23, x23, #0x18
  41edcc:	ldr	x0, [x21, #16]
  41edd0:	cmp	x24, x0
  41edd4:	b.cc	41ed70 <_obstack_memory_used@@Base+0xba40>  // b.lo, b.ul, b.last
  41edd8:	str	wzr, [sp, #284]
  41eddc:	ldrb	w1, [x19, #176]
  41ede0:	ubfx	x1, x1, #2, #1
  41ede4:	cmp	x25, #0x0
  41ede8:	csel	w1, w1, wzr, eq  // eq = none
  41edec:	cbnz	w1, 41ee54 <_obstack_memory_used@@Base+0xbb24>
  41edf0:	ldr	x0, [x19, #104]
  41edf4:	ldr	x0, [x0, #24]
  41edf8:	ldr	x1, [x0, #56]
  41edfc:	str	x1, [x19, #144]
  41ee00:	add	x1, x1, x1, lsl #1
  41ee04:	ldr	x0, [x19, #48]
  41ee08:	add	x1, x0, x1, lsl #3
  41ee0c:	add	x0, sp, #0x68
  41ee10:	bl	414dd4 <_obstack_memory_used@@Base+0x1aa4>
  41ee14:	mov	w22, w0
  41ee18:	str	w0, [sp, #100]
  41ee1c:	cbnz	w0, 41f0a4 <_obstack_memory_used@@Base+0xbd74>
  41ee20:	ldr	x0, [x19, #152]
  41ee24:	cmp	x0, #0x0
  41ee28:	b.le	41f06c <_obstack_memory_used@@Base+0xbd3c>
  41ee2c:	ldr	x3, [sp, #112]
  41ee30:	cmp	x3, #0x0
  41ee34:	b.le	41f06c <_obstack_memory_used@@Base+0xbd3c>
  41ee38:	mov	x21, #0x0                   	// #0
  41ee3c:	b	41f018 <_obstack_memory_used@@Base+0xbce8>
  41ee40:	ldr	x0, [x20, #48]
  41ee44:	cbz	x0, 41ed14 <_obstack_memory_used@@Base+0xb9e4>
  41ee48:	ldrb	w0, [x21, #176]
  41ee4c:	tbnz	w0, #0, 41ed1c <_obstack_memory_used@@Base+0xb9ec>
  41ee50:	b	41ed14 <_obstack_memory_used@@Base+0xb9e4>
  41ee54:	ldr	x0, [x20, #40]
  41ee58:	cbnz	x0, 41edf0 <_obstack_memory_used@@Base+0xbac0>
  41ee5c:	ldr	x6, [x19, #16]
  41ee60:	cbz	x6, 41ef9c <_obstack_memory_used@@Base+0xbc6c>
  41ee64:	ldr	x4, [x19]
  41ee68:	mov	w8, w26
  41ee6c:	mov	x5, #0x0                   	// #0
  41ee70:	mov	w9, w1
  41ee74:	mov	x3, #0x1                   	// #1
  41ee78:	mov	w2, #0x10001               	// #65537
  41ee7c:	movk	x2, #0x1, lsl #48
  41ee80:	b	41ee9c <_obstack_memory_used@@Base+0xbb6c>
  41ee84:	cmp	w0, #0x2
  41ee88:	b.ne	41eeec <_obstack_memory_used@@Base+0xbbbc>  // b.any
  41ee8c:	add	x5, x5, #0x1
  41ee90:	add	x4, x4, #0x10
  41ee94:	cmp	x6, x5
  41ee98:	b.eq	41f174 <_obstack_memory_used@@Base+0xbe44>  // b.none
  41ee9c:	ldrb	w0, [x4, #8]
  41eea0:	cmp	w0, #0x5
  41eea4:	b.eq	41ef44 <_obstack_memory_used@@Base+0xbc14>  // b.none
  41eea8:	b.hi	41eed4 <_obstack_memory_used@@Base+0xbba4>  // b.pmore
  41eeac:	cmp	w0, #0x3
  41eeb0:	b.eq	41ef2c <_obstack_memory_used@@Base+0xbbfc>  // b.none
  41eeb4:	cmp	w0, #0x3
  41eeb8:	b.hi	41ee8c <_obstack_memory_used@@Base+0xbb5c>  // b.pmore
  41eebc:	cmp	w0, #0x1
  41eec0:	b.ne	41ee84 <_obstack_memory_used@@Base+0xbb54>  // b.any
  41eec4:	ldrsb	w0, [x4]
  41eec8:	cmp	w0, #0x0
  41eecc:	csel	w26, w26, w1, ge  // ge = tcont
  41eed0:	b	41ee8c <_obstack_memory_used@@Base+0xbb5c>
  41eed4:	cmp	w0, #0xb
  41eed8:	b.hi	41eef0 <_obstack_memory_used@@Base+0xbbc0>  // b.pmore
  41eedc:	cmp	w0, #0x7
  41eee0:	b.hi	41ee8c <_obstack_memory_used@@Base+0xbb5c>  // b.pmore
  41eee4:	cmp	w0, #0x6
  41eee8:	b.eq	41edf0 <_obstack_memory_used@@Base+0xbac0>  // b.none
  41eeec:	bl	4029e0 <abort@plt>
  41eef0:	cmp	w0, #0xc
  41eef4:	b.ne	41eeec <_obstack_memory_used@@Base+0xbbbc>  // b.any
  41eef8:	ldr	w0, [x4]
  41eefc:	cmp	w0, #0x40
  41ef00:	b.hi	41ef20 <_obstack_memory_used@@Base+0xbbf0>  // b.pmore
  41ef04:	cmp	w0, #0xf
  41ef08:	b.ls	41edf0 <_obstack_memory_used@@Base+0xbac0>  // b.plast
  41ef0c:	sub	w0, w0, #0x10
  41ef10:	lsl	x0, x3, x0
  41ef14:	tst	x0, x2
  41ef18:	b.eq	41edf0 <_obstack_memory_used@@Base+0xbac0>  // b.none
  41ef1c:	b	41ee8c <_obstack_memory_used@@Base+0xbb5c>
  41ef20:	cmp	w0, #0x80
  41ef24:	b.eq	41ee8c <_obstack_memory_used@@Base+0xbb5c>  // b.none
  41ef28:	b	41edf0 <_obstack_memory_used@@Base+0xbac0>
  41ef2c:	ldr	x0, [x4]
  41ef30:	ldr	x7, [x0, #16]
  41ef34:	cbnz	x7, 41edf0 <_obstack_memory_used@@Base+0xbac0>
  41ef38:	ldr	x0, [x0, #24]
  41ef3c:	cbz	x0, 41ee8c <_obstack_memory_used@@Base+0xbb5c>
  41ef40:	b	41edf0 <_obstack_memory_used@@Base+0xbac0>
  41ef44:	mov	w8, w9
  41ef48:	b	41ee8c <_obstack_memory_used@@Base+0xbb5c>
  41ef4c:	ldrsb	w1, [x4, x3]
  41ef50:	tbnz	w1, #31, 41ef8c <_obstack_memory_used@@Base+0xbc5c>
  41ef54:	add	x0, x0, #0x1
  41ef58:	ldr	x1, [x19, #16]
  41ef5c:	cmp	x0, x1
  41ef60:	b.cs	41f188 <_obstack_memory_used@@Base+0xbe58>  // b.hs, b.nlast
  41ef64:	lsl	x3, x0, #4
  41ef68:	ldr	x4, [x19]
  41ef6c:	add	x2, x4, x3
  41ef70:	ldrb	w1, [x2, #8]
  41ef74:	cmp	w1, #0x1
  41ef78:	b.eq	41ef4c <_obstack_memory_used@@Base+0xbc1c>  // b.none
  41ef7c:	cmp	w1, #0x5
  41ef80:	b.ne	41ef54 <_obstack_memory_used@@Base+0xbc24>  // b.any
  41ef84:	strb	w5, [x2, #8]
  41ef88:	b	41ef54 <_obstack_memory_used@@Base+0xbc24>
  41ef8c:	ldrb	w1, [x2, #10]
  41ef90:	and	w1, w1, #0xffffffdf
  41ef94:	strb	w1, [x2, #10]
  41ef98:	b	41ef54 <_obstack_memory_used@@Base+0xbc24>
  41ef9c:	mov	w8, w26
  41efa0:	b	41f188 <_obstack_memory_used@@Base+0xbe58>
  41efa4:	add	x2, x2, #0x1
  41efa8:	cmp	x3, x2
  41efac:	b.eq	41f008 <_obstack_memory_used@@Base+0xbcd8>  // b.none
  41efb0:	ldr	x4, [x5, x2, lsl #3]
  41efb4:	lsl	x4, x4, #4
  41efb8:	add	x7, x0, x4
  41efbc:	ldrb	w7, [x7, #8]
  41efc0:	cmp	w7, #0x9
  41efc4:	b.ne	41efa4 <_obstack_memory_used@@Base+0xbc74>  // b.any
  41efc8:	ldr	x7, [x0, x4]
  41efcc:	ldr	x4, [x6]
  41efd0:	cmp	x7, x4
  41efd4:	b.ne	41efa4 <_obstack_memory_used@@Base+0xbc74>  // b.any
  41efd8:	cmp	x2, x3
  41efdc:	b.eq	41f008 <_obstack_memory_used@@Base+0xbcd8>  // b.none
  41efe0:	ldr	x0, [x19, #40]
  41efe4:	add	x1, x1, x1, lsl #1
  41efe8:	add	x1, x0, x1, lsl #3
  41efec:	ldr	x0, [x1, #16]
  41eff0:	ldr	x24, [x0]
  41eff4:	mov	x1, x24
  41eff8:	add	x0, sp, #0x68
  41effc:	bl	413488 <_obstack_memory_used@@Base+0x158>
  41f000:	mov	x23, x0
  41f004:	cbz	x0, 41f04c <_obstack_memory_used@@Base+0xbd1c>
  41f008:	add	x21, x21, #0x1
  41f00c:	ldr	x3, [sp, #112]
  41f010:	cmp	x3, x21
  41f014:	b.le	41f06c <_obstack_memory_used@@Base+0xbd3c>
  41f018:	ldr	x5, [sp, #120]
  41f01c:	ldr	x0, [x19]
  41f020:	ldr	x1, [x5, x21, lsl #3]
  41f024:	add	x6, x0, x1, lsl #4
  41f028:	ldrb	w2, [x6, #8]
  41f02c:	cmp	w2, #0x4
  41f030:	b.ne	41f008 <_obstack_memory_used@@Base+0xbcd8>  // b.any
  41f034:	cmp	x3, #0x0
  41f038:	b.le	41f044 <_obstack_memory_used@@Base+0xbd14>
  41f03c:	mov	x2, #0x0                   	// #0
  41f040:	b	41efb0 <_obstack_memory_used@@Base+0xbc80>
  41f044:	mov	x2, #0x0                   	// #0
  41f048:	b	41efd8 <_obstack_memory_used@@Base+0xbca8>
  41f04c:	add	x24, x24, x24, lsl #1
  41f050:	ldr	x1, [x19, #48]
  41f054:	add	x1, x1, x24, lsl #3
  41f058:	add	x0, sp, #0x68
  41f05c:	bl	414a6c <_obstack_memory_used@@Base+0x173c>
  41f060:	cbnz	w0, 41f150 <_obstack_memory_used@@Base+0xbe20>
  41f064:	mov	x21, x23
  41f068:	b	41f008 <_obstack_memory_used@@Base+0xbcd8>
  41f06c:	mov	w3, #0x0                   	// #0
  41f070:	add	x2, sp, #0x68
  41f074:	mov	x1, x19
  41f078:	add	x0, sp, #0x64
  41f07c:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41f080:	str	x0, [x19, #72]
  41f084:	cbz	x0, 41f0e0 <_obstack_memory_used@@Base+0xbdb0>
  41f088:	ldrsb	w1, [x0, #104]
  41f08c:	tbnz	w1, #31, 41f0e8 <_obstack_memory_used@@Base+0xbdb8>
  41f090:	str	x0, [x19, #96]
  41f094:	str	x0, [x19, #88]
  41f098:	str	x0, [x19, #80]
  41f09c:	ldr	x0, [sp, #120]
  41f0a0:	bl	402ae0 <free@plt>
  41f0a4:	str	w22, [sp, #284]
  41f0a8:	mov	x0, x20
  41f0ac:	bl	416c14 <_obstack_memory_used@@Base+0x38e4>
  41f0b0:	add	x0, sp, #0x80
  41f0b4:	bl	416c64 <_obstack_memory_used@@Base+0x3934>
  41f0b8:	ldr	w0, [sp, #284]
  41f0bc:	cbnz	w0, 41f158 <_obstack_memory_used@@Base+0xbe28>
  41f0c0:	ldr	w0, [sp, #284]
  41f0c4:	ldp	x25, x26, [sp, #64]
  41f0c8:	ldr	x27, [sp, #80]
  41f0cc:	ldp	x19, x20, [sp, #16]
  41f0d0:	ldp	x21, x22, [sp, #32]
  41f0d4:	ldp	x23, x24, [sp, #48]
  41f0d8:	ldp	x29, x30, [sp], #288
  41f0dc:	ret
  41f0e0:	ldr	w22, [sp, #100]
  41f0e4:	b	41f0a4 <_obstack_memory_used@@Base+0xbd74>
  41f0e8:	mov	w3, #0x1                   	// #1
  41f0ec:	add	x2, sp, #0x68
  41f0f0:	mov	x1, x19
  41f0f4:	add	x0, sp, #0x64
  41f0f8:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41f0fc:	str	x0, [x19, #80]
  41f100:	mov	w3, #0x2                   	// #2
  41f104:	add	x2, sp, #0x68
  41f108:	mov	x1, x19
  41f10c:	add	x0, sp, #0x64
  41f110:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41f114:	str	x0, [x19, #88]
  41f118:	mov	w3, #0x6                   	// #6
  41f11c:	add	x2, sp, #0x68
  41f120:	mov	x1, x19
  41f124:	add	x0, sp, #0x64
  41f128:	bl	416944 <_obstack_memory_used@@Base+0x3614>
  41f12c:	str	x0, [x19, #96]
  41f130:	ldr	x1, [x19, #80]
  41f134:	cbz	x1, 41f148 <_obstack_memory_used@@Base+0xbe18>
  41f138:	ldr	x1, [x19, #88]
  41f13c:	cmp	x1, #0x0
  41f140:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41f144:	b.ne	41f09c <_obstack_memory_used@@Base+0xbd6c>  // b.any
  41f148:	ldr	w22, [sp, #100]
  41f14c:	b	41f0a4 <_obstack_memory_used@@Base+0xbd74>
  41f150:	mov	w22, w0
  41f154:	b	41f0a4 <_obstack_memory_used@@Base+0xbd74>
  41f158:	mov	x0, x19
  41f15c:	bl	416ca4 <_obstack_memory_used@@Base+0x3974>
  41f160:	str	xzr, [x20]
  41f164:	str	xzr, [x20, #8]
  41f168:	b	41f0c0 <_obstack_memory_used@@Base+0xbd90>
  41f16c:	mov	w0, #0xc                   	// #12
  41f170:	b	41f0cc <_obstack_memory_used@@Base+0xbd9c>
  41f174:	cmp	w26, #0x0
  41f178:	mov	x0, #0x0                   	// #0
  41f17c:	ccmp	w8, #0x0, #0x0, eq  // eq = none
  41f180:	mov	w5, #0x7                   	// #7
  41f184:	b.ne	41ef64 <_obstack_memory_used@@Base+0xbc34>  // b.any
  41f188:	mov	w0, #0x1                   	// #1
  41f18c:	str	w0, [x19, #180]
  41f190:	ldrb	w0, [x19, #176]
  41f194:	ldr	x1, [x19, #152]
  41f198:	cmp	x1, #0x0
  41f19c:	ccmp	w8, #0x0, #0x0, le
  41f1a0:	cset	w1, ne  // ne = any
  41f1a4:	and	w0, w0, #0xfffffffb
  41f1a8:	bfi	w0, w1, #1, #1
  41f1ac:	strb	w0, [x19, #176]
  41f1b0:	b	41edf0 <_obstack_memory_used@@Base+0xbac0>
  41f1b4:	mov	w0, #0xc                   	// #12
  41f1b8:	ldr	x27, [sp, #80]
  41f1bc:	b	41f1d8 <_obstack_memory_used@@Base+0xbea8>
  41f1c0:	mov	w0, #0xc                   	// #12
  41f1c4:	ldr	x27, [sp, #80]
  41f1c8:	b	41f1d8 <_obstack_memory_used@@Base+0xbea8>
  41f1cc:	mov	w0, #0xc                   	// #12
  41f1d0:	b	41f1d8 <_obstack_memory_used@@Base+0xbea8>
  41f1d4:	ldr	x27, [sp, #80]
  41f1d8:	str	w0, [sp, #284]
  41f1dc:	b	41e990 <_obstack_memory_used@@Base+0xb660>
  41f1e0:	ldp	x25, x26, [sp, #64]
  41f1e4:	b	41f1ec <_obstack_memory_used@@Base+0xbebc>
  41f1e8:	ldp	x25, x26, [sp, #64]
  41f1ec:	mov	w0, #0xc                   	// #12
  41f1f0:	str	w0, [sp, #284]
  41f1f4:	mov	x0, x19
  41f1f8:	bl	416ca4 <_obstack_memory_used@@Base+0x3974>
  41f1fc:	str	xzr, [x20]
  41f200:	str	xzr, [x20, #8]
  41f204:	ldr	w0, [sp, #284]
  41f208:	b	41f0cc <_obstack_memory_used@@Base+0xbd9c>
  41f20c:	tst	w22, #0xffffff80
  41f210:	b.ne	41f220 <_obstack_memory_used@@Base+0xbef0>  // b.any
  41f214:	ldrb	w0, [x19, #176]
  41f218:	orr	w0, w0, #0x8
  41f21c:	strb	w0, [x19, #176]
  41f220:	add	w26, w26, #0x1
  41f224:	add	w22, w22, #0x1
  41f228:	cmp	w26, #0x40
  41f22c:	b.eq	41ea0c <_obstack_memory_used@@Base+0xb6dc>  // b.none
  41f230:	mov	w0, w22
  41f234:	bl	4029d0 <btowc@plt>
  41f238:	cmn	w0, #0x1
  41f23c:	b.eq	41f20c <_obstack_memory_used@@Base+0xbedc>  // b.none
  41f240:	ldr	x3, [x19, #120]
  41f244:	lsl	x1, x27, x26
  41f248:	ldr	x2, [x3, x25]
  41f24c:	orr	x1, x2, x1
  41f250:	str	x1, [x3, x25]
  41f254:	tst	w22, #0xffffff80
  41f258:	b.ne	41f220 <_obstack_memory_used@@Base+0xbef0>  // b.any
  41f25c:	cmp	w0, w22
  41f260:	b.eq	41f220 <_obstack_memory_used@@Base+0xbef0>  // b.none
  41f264:	b	41f214 <_obstack_memory_used@@Base+0xbee4>
  41f268:	stp	x29, x30, [sp, #-16]!
  41f26c:	mov	x29, sp
  41f270:	mov	x4, x0
  41f274:	mov	x0, x2
  41f278:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  41f27c:	ldr	x3, [x2, #3560]
  41f280:	ubfx	w5, w3, #25, #1
  41f284:	ldrb	w2, [x0, #56]
  41f288:	bfi	w2, w5, #4, #1
  41f28c:	orr	w2, w2, #0xffffff80
  41f290:	strb	w2, [x0, #56]
  41f294:	mov	x2, x1
  41f298:	mov	x1, x4
  41f29c:	bl	41e720 <_obstack_memory_used@@Base+0xb3f0>
  41f2a0:	cbz	w0, 41f2d0 <_obstack_memory_used@@Base+0xbfa0>
  41f2a4:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xecd0>
  41f2a8:	add	x2, x2, #0x7e8
  41f2ac:	add	x1, x2, #0x20
  41f2b0:	add	x2, x2, #0x1a0
  41f2b4:	ldr	x0, [x2, w0, sxtw #3]
  41f2b8:	mov	w2, #0x5                   	// #5
  41f2bc:	add	x1, x1, x0
  41f2c0:	mov	x0, #0x0                   	// #0
  41f2c4:	bl	402c20 <dcgettext@plt>
  41f2c8:	ldp	x29, x30, [sp], #16
  41f2cc:	ret
  41f2d0:	mov	x0, #0x0                   	// #0
  41f2d4:	b	41f2c8 <_obstack_memory_used@@Base+0xbf98>
  41f2d8:	mov	x2, x0
  41f2dc:	adrp	x1, 438000 <_obstack_memory_used@@Base+0x24cd0>
  41f2e0:	ldr	x0, [x1, #3560]
  41f2e4:	str	x2, [x1, #3560]
  41f2e8:	ret
  41f2ec:	stp	x29, x30, [sp, #-48]!
  41f2f0:	mov	x29, sp
  41f2f4:	stp	x19, x20, [sp, #16]
  41f2f8:	str	x21, [sp, #32]
  41f2fc:	mov	x19, x0
  41f300:	ldr	x20, [x0]
  41f304:	ldr	x21, [x0, #32]
  41f308:	mov	x2, #0x100                 	// #256
  41f30c:	mov	w1, #0x0                   	// #0
  41f310:	mov	x0, x21
  41f314:	bl	4028d0 <memset@plt>
  41f318:	mov	x2, x21
  41f31c:	ldr	x1, [x20, #72]
  41f320:	mov	x0, x19
  41f324:	bl	418f1c <_obstack_memory_used@@Base+0x5bec>
  41f328:	ldr	x1, [x20, #80]
  41f32c:	ldr	x0, [x20, #72]
  41f330:	cmp	x0, x1
  41f334:	b.eq	41f344 <_obstack_memory_used@@Base+0xc014>  // b.none
  41f338:	mov	x2, x21
  41f33c:	mov	x0, x19
  41f340:	bl	418f1c <_obstack_memory_used@@Base+0x5bec>
  41f344:	ldr	x1, [x20, #88]
  41f348:	ldr	x0, [x20, #72]
  41f34c:	cmp	x0, x1
  41f350:	b.eq	41f360 <_obstack_memory_used@@Base+0xc030>  // b.none
  41f354:	mov	x2, x21
  41f358:	mov	x0, x19
  41f35c:	bl	418f1c <_obstack_memory_used@@Base+0x5bec>
  41f360:	ldr	x1, [x20, #96]
  41f364:	ldr	x0, [x20, #72]
  41f368:	cmp	x0, x1
  41f36c:	b.eq	41f37c <_obstack_memory_used@@Base+0xc04c>  // b.none
  41f370:	mov	x2, x21
  41f374:	mov	x0, x19
  41f378:	bl	418f1c <_obstack_memory_used@@Base+0x5bec>
  41f37c:	ldrb	w0, [x19, #56]
  41f380:	orr	w0, w0, #0x8
  41f384:	strb	w0, [x19, #56]
  41f388:	mov	w0, #0x0                   	// #0
  41f38c:	ldp	x19, x20, [sp, #16]
  41f390:	ldr	x21, [sp, #32]
  41f394:	ldp	x29, x30, [sp], #48
  41f398:	ret
  41f39c:	sub	sp, sp, #0x80
  41f3a0:	stp	x29, x30, [sp, #16]
  41f3a4:	add	x29, sp, #0x10
  41f3a8:	stp	x21, x22, [sp, #48]
  41f3ac:	stp	x23, x24, [sp, #64]
  41f3b0:	str	x1, [sp, #112]
  41f3b4:	add	x24, x3, x4
  41f3b8:	cmp	x3, #0x0
  41f3bc:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  41f3c0:	b.gt	41f678 <_obstack_memory_used@@Base+0xc348>
  41f3c4:	stp	x19, x20, [sp, #32]
  41f3c8:	stp	x25, x26, [sp, #80]
  41f3cc:	stp	x27, x28, [sp, #96]
  41f3d0:	mov	x22, x0
  41f3d4:	mov	x25, x2
  41f3d8:	mov	x21, x3
  41f3dc:	mov	x26, x5
  41f3e0:	mov	x20, x6
  41f3e4:	and	w28, w7, #0xff
  41f3e8:	cmp	x24, x2
  41f3ec:	b.gt	41f4c8 <_obstack_memory_used@@Base+0xc198>
  41f3f0:	cmp	x4, #0x0
  41f3f4:	ccmp	x3, x24, #0x4, ge  // ge = tcont
  41f3f8:	b.gt	41f4d0 <_obstack_memory_used@@Base+0xc1a0>
  41f3fc:	tbnz	x24, #63, 41f69c <_obstack_memory_used@@Base+0xc36c>
  41f400:	cmp	x4, #0x0
  41f404:	ccmp	x3, x24, #0x0, lt  // lt = tstop
  41f408:	b.le	41f69c <_obstack_memory_used@@Base+0xc36c>
  41f40c:	ldrb	w0, [x22, #56]
  41f410:	ubfx	x27, x0, #5, #2
  41f414:	cmp	x24, x21
  41f418:	b.le	41f428 <_obstack_memory_used@@Base+0xc0f8>
  41f41c:	ldr	x1, [x22, #32]
  41f420:	cbz	x1, 41f428 <_obstack_memory_used@@Base+0xc0f8>
  41f424:	tbz	w0, #3, 41f4d8 <_obstack_memory_used@@Base+0xc1a8>
  41f428:	ldrb	w0, [x22, #56]
  41f42c:	tbnz	w0, #4, 41f504 <_obstack_memory_used@@Base+0xc1d4>
  41f430:	mov	x19, #0x1                   	// #1
  41f434:	cbz	x20, 41f450 <_obstack_memory_used@@Base+0xc120>
  41f438:	ldrb	w0, [x22, #56]
  41f43c:	and	w0, w0, #0x6
  41f440:	cmp	w0, #0x4
  41f444:	b.eq	41f4e4 <_obstack_memory_used@@Base+0xc1b4>  // b.none
  41f448:	ldr	x19, [x22, #48]
  41f44c:	add	x19, x19, #0x1
  41f450:	str	x19, [sp, #120]
  41f454:	lsl	x0, x19, #4
  41f458:	bl	402800 <malloc@plt>
  41f45c:	mov	x23, x0
  41f460:	cbz	x0, 41f680 <_obstack_memory_used@@Base+0xc350>
  41f464:	str	w27, [sp]
  41f468:	mov	x7, x0
  41f46c:	mov	x6, x19
  41f470:	mov	x5, x26
  41f474:	mov	x4, x24
  41f478:	mov	x3, x21
  41f47c:	mov	x2, x25
  41f480:	ldr	x1, [sp, #112]
  41f484:	mov	x0, x22
  41f488:	bl	41d5b4 <_obstack_memory_used@@Base+0xa284>
  41f48c:	cbz	w0, 41f510 <_obstack_memory_used@@Base+0xc1e0>
  41f490:	cmp	w0, #0x1
  41f494:	cset	x21, eq  // eq = none
  41f498:	sub	x21, x21, #0x2
  41f49c:	mov	x0, x23
  41f4a0:	bl	402ae0 <free@plt>
  41f4a4:	ldp	x19, x20, [sp, #32]
  41f4a8:	ldp	x25, x26, [sp, #80]
  41f4ac:	ldp	x27, x28, [sp, #96]
  41f4b0:	mov	x0, x21
  41f4b4:	ldp	x21, x22, [sp, #48]
  41f4b8:	ldp	x23, x24, [sp, #64]
  41f4bc:	ldp	x29, x30, [sp, #16]
  41f4c0:	add	sp, sp, #0x80
  41f4c4:	ret
  41f4c8:	mov	x24, x2
  41f4cc:	b	41f40c <_obstack_memory_used@@Base+0xc0dc>
  41f4d0:	mov	x24, x2
  41f4d4:	b	41f40c <_obstack_memory_used@@Base+0xc0dc>
  41f4d8:	mov	x0, x22
  41f4dc:	bl	41f2ec <_obstack_memory_used@@Base+0xbfbc>
  41f4e0:	b	41f428 <_obstack_memory_used@@Base+0xc0f8>
  41f4e4:	ldr	x0, [x20]
  41f4e8:	ldr	x1, [x22, #48]
  41f4ec:	cmp	x0, x1
  41f4f0:	b.hi	41f448 <_obstack_memory_used@@Base+0xc118>  // b.pmore
  41f4f4:	cmp	x0, #0x0
  41f4f8:	csel	x19, x0, x19, gt
  41f4fc:	csel	x20, x20, xzr, gt
  41f500:	b	41f450 <_obstack_memory_used@@Base+0xc120>
  41f504:	mov	x19, #0x1                   	// #1
  41f508:	mov	x20, #0x0                   	// #0
  41f50c:	b	41f450 <_obstack_memory_used@@Base+0xc120>
  41f510:	cbz	x20, 41f5b0 <_obstack_memory_used@@Base+0xc280>
  41f514:	ldrb	w24, [x22, #56]
  41f518:	ubfx	x24, x24, #1, #2
  41f51c:	add	x25, x19, #0x1
  41f520:	cbz	w24, 41f5bc <_obstack_memory_used@@Base+0xc28c>
  41f524:	cmp	w24, #0x1
  41f528:	b.eq	41f600 <_obstack_memory_used@@Base+0xc2d0>  // b.none
  41f52c:	mov	w24, #0x2                   	// #2
  41f530:	cmp	x19, #0x0
  41f534:	b.le	41f654 <_obstack_memory_used@@Base+0xc324>
  41f538:	add	x1, x23, #0x8
  41f53c:	ldr	x0, [sp, #120]
  41f540:	lsl	x2, x0, #3
  41f544:	mov	x0, #0x0                   	// #0
  41f548:	ldur	x4, [x1, #-8]
  41f54c:	ldr	x3, [x20, #8]
  41f550:	str	x4, [x3, x0]
  41f554:	ldr	x4, [x1], #16
  41f558:	ldr	x3, [x20, #16]
  41f55c:	str	x4, [x3, x0]
  41f560:	add	x0, x0, #0x8
  41f564:	cmp	x0, x2
  41f568:	b.ne	41f548 <_obstack_memory_used@@Base+0xc218>  // b.any
  41f56c:	ldr	x0, [x20]
  41f570:	cmp	x0, x19
  41f574:	b.ls	41f59c <_obstack_memory_used@@Base+0xc26c>  // b.plast
  41f578:	mov	x0, #0xffffffffffffffff    	// #-1
  41f57c:	ldr	x1, [x20, #16]
  41f580:	str	x0, [x1, x19, lsl #3]
  41f584:	ldr	x1, [x20, #8]
  41f588:	str	x0, [x1, x19, lsl #3]
  41f58c:	add	x19, x19, #0x1
  41f590:	ldr	x1, [x20]
  41f594:	cmp	x19, x1
  41f598:	b.cc	41f57c <_obstack_memory_used@@Base+0xc24c>  // b.lo, b.ul, b.last
  41f59c:	ldrb	w0, [x22, #56]
  41f5a0:	bfi	w0, w24, #1, #2
  41f5a4:	strb	w0, [x22, #56]
  41f5a8:	tst	w0, #0x6
  41f5ac:	b.eq	41f694 <_obstack_memory_used@@Base+0xc364>  // b.none
  41f5b0:	cbnz	w28, 41f66c <_obstack_memory_used@@Base+0xc33c>
  41f5b4:	ldr	x21, [x23]
  41f5b8:	b	41f49c <_obstack_memory_used@@Base+0xc16c>
  41f5bc:	lsl	x26, x25, #3
  41f5c0:	mov	x0, x26
  41f5c4:	bl	402800 <malloc@plt>
  41f5c8:	mov	x24, x0
  41f5cc:	str	x0, [x20, #8]
  41f5d0:	cbz	x0, 41f65c <_obstack_memory_used@@Base+0xc32c>
  41f5d4:	mov	x0, x26
  41f5d8:	bl	402800 <malloc@plt>
  41f5dc:	str	x0, [x20, #16]
  41f5e0:	cbz	x0, 41f5f0 <_obstack_memory_used@@Base+0xc2c0>
  41f5e4:	str	x25, [x20]
  41f5e8:	mov	w24, #0x1                   	// #1
  41f5ec:	b	41f530 <_obstack_memory_used@@Base+0xc200>
  41f5f0:	mov	x0, x24
  41f5f4:	bl	402ae0 <free@plt>
  41f5f8:	mov	w24, #0x0                   	// #0
  41f5fc:	b	41f59c <_obstack_memory_used@@Base+0xc26c>
  41f600:	ldr	x0, [x20]
  41f604:	cmp	x0, x25
  41f608:	b.cs	41f530 <_obstack_memory_used@@Base+0xc200>  // b.hs, b.nlast
  41f60c:	lsl	x27, x25, #3
  41f610:	mov	x1, x27
  41f614:	ldr	x0, [x20, #8]
  41f618:	bl	402930 <realloc@plt>
  41f61c:	mov	x26, x0
  41f620:	cbz	x0, 41f664 <_obstack_memory_used@@Base+0xc334>
  41f624:	mov	x1, x27
  41f628:	ldr	x0, [x20, #16]
  41f62c:	bl	402930 <realloc@plt>
  41f630:	cbz	x0, 41f644 <_obstack_memory_used@@Base+0xc314>
  41f634:	str	x26, [x20, #8]
  41f638:	str	x0, [x20, #16]
  41f63c:	str	x25, [x20]
  41f640:	b	41f530 <_obstack_memory_used@@Base+0xc200>
  41f644:	mov	x0, x26
  41f648:	bl	402ae0 <free@plt>
  41f64c:	mov	w24, #0x0                   	// #0
  41f650:	b	41f59c <_obstack_memory_used@@Base+0xc26c>
  41f654:	mov	x19, #0x0                   	// #0
  41f658:	b	41f56c <_obstack_memory_used@@Base+0xc23c>
  41f65c:	mov	w24, #0x0                   	// #0
  41f660:	b	41f59c <_obstack_memory_used@@Base+0xc26c>
  41f664:	mov	w24, #0x0                   	// #0
  41f668:	b	41f59c <_obstack_memory_used@@Base+0xc26c>
  41f66c:	ldr	x3, [x23, #8]
  41f670:	sub	x21, x3, x21
  41f674:	b	41f49c <_obstack_memory_used@@Base+0xc16c>
  41f678:	mov	x21, #0xffffffffffffffff    	// #-1
  41f67c:	b	41f4b0 <_obstack_memory_used@@Base+0xc180>
  41f680:	mov	x21, #0xfffffffffffffffe    	// #-2
  41f684:	ldp	x19, x20, [sp, #32]
  41f688:	ldp	x25, x26, [sp, #80]
  41f68c:	ldp	x27, x28, [sp, #96]
  41f690:	b	41f4b0 <_obstack_memory_used@@Base+0xc180>
  41f694:	mov	x21, #0xfffffffffffffffe    	// #-2
  41f698:	b	41f49c <_obstack_memory_used@@Base+0xc16c>
  41f69c:	ldrb	w27, [x22, #56]
  41f6a0:	ubfx	x27, x27, #5, #2
  41f6a4:	mov	x24, #0x0                   	// #0
  41f6a8:	b	41f428 <_obstack_memory_used@@Base+0xc0f8>
  41f6ac:	stp	x29, x30, [sp, #-112]!
  41f6b0:	mov	x29, sp
  41f6b4:	stp	x19, x20, [sp, #16]
  41f6b8:	stp	x27, x28, [sp, #80]
  41f6bc:	str	x1, [sp, #104]
  41f6c0:	ldr	x27, [sp, #112]
  41f6c4:	cmp	x4, #0x0
  41f6c8:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
  41f6cc:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  41f6d0:	b.lt	41f7a8 <_obstack_memory_used@@Base+0xc478>  // b.tstop
  41f6d4:	stp	x21, x22, [sp, #32]
  41f6d8:	stp	x23, x24, [sp, #48]
  41f6dc:	stp	x25, x26, [sp, #64]
  41f6e0:	mov	x22, x0
  41f6e4:	mov	x19, x2
  41f6e8:	mov	x21, x3
  41f6ec:	mov	x20, x4
  41f6f0:	mov	x23, x5
  41f6f4:	mov	x24, x6
  41f6f8:	mov	x25, x7
  41f6fc:	adds	x28, x2, x4
  41f700:	b.vs	41f7b0 <_obstack_memory_used@@Base+0xc480>
  41f704:	cmp	x4, #0x0
  41f708:	b.le	41f79c <_obstack_memory_used@@Base+0xc46c>
  41f70c:	mov	x26, #0x0                   	// #0
  41f710:	cmp	x2, #0x0
  41f714:	b.gt	41f768 <_obstack_memory_used@@Base+0xc438>
  41f718:	ldrb	w7, [sp, #120]
  41f71c:	mov	x6, x25
  41f720:	mov	x5, x27
  41f724:	mov	x4, x24
  41f728:	mov	x3, x23
  41f72c:	mov	x2, x28
  41f730:	mov	x1, x21
  41f734:	mov	x0, x22
  41f738:	bl	41f39c <_obstack_memory_used@@Base+0xc06c>
  41f73c:	mov	x19, x0
  41f740:	mov	x0, x26
  41f744:	bl	402ae0 <free@plt>
  41f748:	ldp	x21, x22, [sp, #32]
  41f74c:	ldp	x23, x24, [sp, #48]
  41f750:	ldp	x25, x26, [sp, #64]
  41f754:	mov	x0, x19
  41f758:	ldp	x19, x20, [sp, #16]
  41f75c:	ldp	x27, x28, [sp, #80]
  41f760:	ldp	x29, x30, [sp], #112
  41f764:	ret
  41f768:	mov	x0, x28
  41f76c:	bl	402800 <malloc@plt>
  41f770:	mov	x26, x0
  41f774:	cbz	x0, 41f7c4 <_obstack_memory_used@@Base+0xc494>
  41f778:	mov	x2, x19
  41f77c:	ldr	x1, [sp, #104]
  41f780:	bl	402650 <memcpy@plt>
  41f784:	mov	x2, x20
  41f788:	mov	x1, x21
  41f78c:	add	x0, x26, x19
  41f790:	bl	402650 <memcpy@plt>
  41f794:	mov	x21, x26
  41f798:	b	41f718 <_obstack_memory_used@@Base+0xc3e8>
  41f79c:	ldr	x21, [sp, #104]
  41f7a0:	mov	x26, #0x0                   	// #0
  41f7a4:	b	41f718 <_obstack_memory_used@@Base+0xc3e8>
  41f7a8:	mov	x19, #0xfffffffffffffffe    	// #-2
  41f7ac:	b	41f754 <_obstack_memory_used@@Base+0xc424>
  41f7b0:	mov	x19, #0xfffffffffffffffe    	// #-2
  41f7b4:	ldp	x21, x22, [sp, #32]
  41f7b8:	ldp	x23, x24, [sp, #48]
  41f7bc:	ldp	x25, x26, [sp, #64]
  41f7c0:	b	41f754 <_obstack_memory_used@@Base+0xc424>
  41f7c4:	mov	x19, #0xfffffffffffffffe    	// #-2
  41f7c8:	ldp	x21, x22, [sp, #32]
  41f7cc:	ldp	x23, x24, [sp, #48]
  41f7d0:	ldp	x25, x26, [sp, #64]
  41f7d4:	b	41f754 <_obstack_memory_used@@Base+0xc424>
  41f7d8:	stp	x29, x30, [sp, #-64]!
  41f7dc:	mov	x29, sp
  41f7e0:	stp	x19, x20, [sp, #16]
  41f7e4:	stp	x21, x22, [sp, #32]
  41f7e8:	str	x23, [sp, #48]
  41f7ec:	mov	x19, x0
  41f7f0:	mov	x22, x1
  41f7f4:	mov	w20, w2
  41f7f8:	tst	x20, #0x1
  41f7fc:	mov	x21, #0xb2fc                	// #45820
  41f800:	movk	x21, #0x3, lsl #16
  41f804:	mov	x23, #0x2c6                 	// #710
  41f808:	movk	x23, #0x101, lsl #16
  41f80c:	csel	x23, x21, x23, ne  // ne = any
  41f810:	str	xzr, [x0]
  41f814:	str	xzr, [x0, #8]
  41f818:	str	xzr, [x0, #16]
  41f81c:	mov	x0, #0x100                 	// #256
  41f820:	bl	402800 <malloc@plt>
  41f824:	str	x0, [x19, #32]
  41f828:	cbz	x0, 41f8c4 <_obstack_memory_used@@Base+0xc594>
  41f82c:	sbfiz	x21, x20, #21, #32
  41f830:	and	x21, x21, #0x400000
  41f834:	orr	x21, x21, x23
  41f838:	mov	w1, #0x0                   	// #0
  41f83c:	tbz	w20, #2, 41f84c <_obstack_memory_used@@Base+0xc51c>
  41f840:	and	x21, x21, #0xffffffffffffffbf
  41f844:	orr	x21, x21, #0x100
  41f848:	mov	w1, #0x1                   	// #1
  41f84c:	ldrb	w0, [x19, #56]
  41f850:	bfi	w0, w1, #7, #1
  41f854:	ubfx	x20, x20, #3, #1
  41f858:	bfi	w0, w20, #4, #1
  41f85c:	strb	w0, [x19, #56]
  41f860:	str	xzr, [x19, #40]
  41f864:	mov	x0, x22
  41f868:	bl	402690 <strlen@plt>
  41f86c:	mov	x3, x21
  41f870:	mov	x2, x0
  41f874:	mov	x1, x22
  41f878:	mov	x0, x19
  41f87c:	bl	41e720 <_obstack_memory_used@@Base+0xb3f0>
  41f880:	mov	w20, w0
  41f884:	cmp	w0, #0x10
  41f888:	b.eq	41f8b0 <_obstack_memory_used@@Base+0xc580>  // b.none
  41f88c:	cbnz	w0, 41f8b4 <_obstack_memory_used@@Base+0xc584>
  41f890:	mov	x0, x19
  41f894:	bl	41f2ec <_obstack_memory_used@@Base+0xbfbc>
  41f898:	mov	w0, w20
  41f89c:	ldp	x19, x20, [sp, #16]
  41f8a0:	ldp	x21, x22, [sp, #32]
  41f8a4:	ldr	x23, [sp, #48]
  41f8a8:	ldp	x29, x30, [sp], #64
  41f8ac:	ret
  41f8b0:	mov	w20, #0x8                   	// #8
  41f8b4:	ldr	x0, [x19, #32]
  41f8b8:	bl	402ae0 <free@plt>
  41f8bc:	str	xzr, [x19, #32]
  41f8c0:	b	41f898 <_obstack_memory_used@@Base+0xc568>
  41f8c4:	mov	w20, #0xc                   	// #12
  41f8c8:	b	41f898 <_obstack_memory_used@@Base+0xc568>
  41f8cc:	stp	x29, x30, [sp, #-48]!
  41f8d0:	mov	x29, sp
  41f8d4:	stp	x19, x20, [sp, #16]
  41f8d8:	stp	x21, x22, [sp, #32]
  41f8dc:	cmp	w0, #0x10
  41f8e0:	b.hi	41f94c <_obstack_memory_used@@Base+0xc61c>  // b.pmore
  41f8e4:	mov	x21, x2
  41f8e8:	mov	x20, x3
  41f8ec:	adrp	x4, 422000 <_obstack_memory_used@@Base+0xecd0>
  41f8f0:	add	x4, x4, #0x7e8
  41f8f4:	add	x1, x4, #0x20
  41f8f8:	add	x4, x4, #0x1a0
  41f8fc:	ldr	x0, [x4, w0, sxtw #3]
  41f900:	mov	w2, #0x5                   	// #5
  41f904:	add	x1, x1, x0
  41f908:	mov	x0, #0x0                   	// #0
  41f90c:	bl	402c20 <dcgettext@plt>
  41f910:	mov	x22, x0
  41f914:	bl	402690 <strlen@plt>
  41f918:	add	x19, x0, #0x1
  41f91c:	cbz	x20, 41f938 <_obstack_memory_used@@Base+0xc608>
  41f920:	mov	x2, x19
  41f924:	cmp	x19, x20
  41f928:	b.hi	41f950 <_obstack_memory_used@@Base+0xc620>  // b.pmore
  41f92c:	mov	x1, x22
  41f930:	mov	x0, x21
  41f934:	bl	402650 <memcpy@plt>
  41f938:	mov	x0, x19
  41f93c:	ldp	x19, x20, [sp, #16]
  41f940:	ldp	x21, x22, [sp, #32]
  41f944:	ldp	x29, x30, [sp], #48
  41f948:	ret
  41f94c:	bl	4029e0 <abort@plt>
  41f950:	sub	x2, x20, #0x1
  41f954:	strb	wzr, [x21, x2]
  41f958:	b	41f92c <_obstack_memory_used@@Base+0xc5fc>
  41f95c:	stp	x29, x30, [sp, #-32]!
  41f960:	mov	x29, sp
  41f964:	str	x19, [sp, #16]
  41f968:	mov	x19, x0
  41f96c:	ldr	x0, [x0]
  41f970:	cbz	x0, 41f978 <_obstack_memory_used@@Base+0xc648>
  41f974:	bl	416ca4 <_obstack_memory_used@@Base+0x3974>
  41f978:	str	xzr, [x19]
  41f97c:	str	xzr, [x19, #8]
  41f980:	ldr	x0, [x19, #32]
  41f984:	bl	402ae0 <free@plt>
  41f988:	str	xzr, [x19, #32]
  41f98c:	ldr	x0, [x19, #40]
  41f990:	bl	402ae0 <free@plt>
  41f994:	str	xzr, [x19, #40]
  41f998:	ldr	x19, [sp, #16]
  41f99c:	ldp	x29, x30, [sp], #32
  41f9a0:	ret
  41f9a4:	tst	w4, #0xfffffff8
  41f9a8:	b.ne	41fa64 <_obstack_memory_used@@Base+0xc734>  // b.any
  41f9ac:	sub	sp, sp, #0x50
  41f9b0:	stp	x29, x30, [sp, #16]
  41f9b4:	add	x29, sp, #0x10
  41f9b8:	stp	x19, x20, [sp, #32]
  41f9bc:	stp	x21, x22, [sp, #48]
  41f9c0:	str	x23, [sp, #64]
  41f9c4:	mov	x20, x0
  41f9c8:	mov	x21, x1
  41f9cc:	mov	x23, x2
  41f9d0:	mov	x22, x3
  41f9d4:	mov	w19, w4
  41f9d8:	tbz	w19, #2, 41fa2c <_obstack_memory_used@@Base+0xc6fc>
  41f9dc:	ldr	x3, [x3]
  41f9e0:	ldr	x2, [x22, #8]
  41f9e4:	ldrb	w0, [x20, #56]
  41f9e8:	tbz	w0, #4, 41fa40 <_obstack_memory_used@@Base+0xc710>
  41f9ec:	str	w19, [sp]
  41f9f0:	mov	x7, #0x0                   	// #0
  41f9f4:	mov	x6, #0x0                   	// #0
  41f9f8:	mov	x5, x2
  41f9fc:	mov	x4, x2
  41fa00:	mov	x1, x21
  41fa04:	mov	x0, x20
  41fa08:	bl	41d5b4 <_obstack_memory_used@@Base+0xa284>
  41fa0c:	cmp	w0, #0x0
  41fa10:	cset	w0, ne  // ne = any
  41fa14:	ldp	x19, x20, [sp, #32]
  41fa18:	ldp	x21, x22, [sp, #48]
  41fa1c:	ldr	x23, [sp, #64]
  41fa20:	ldp	x29, x30, [sp, #16]
  41fa24:	add	sp, sp, #0x50
  41fa28:	ret
  41fa2c:	mov	x0, x1
  41fa30:	bl	402690 <strlen@plt>
  41fa34:	mov	x2, x0
  41fa38:	mov	x3, #0x0                   	// #0
  41fa3c:	b	41f9e4 <_obstack_memory_used@@Base+0xc6b4>
  41fa40:	str	w19, [sp]
  41fa44:	mov	x7, x22
  41fa48:	mov	x6, x23
  41fa4c:	mov	x5, x2
  41fa50:	mov	x4, x2
  41fa54:	mov	x1, x21
  41fa58:	mov	x0, x20
  41fa5c:	bl	41d5b4 <_obstack_memory_used@@Base+0xa284>
  41fa60:	b	41fa0c <_obstack_memory_used@@Base+0xc6dc>
  41fa64:	mov	w0, #0x2                   	// #2
  41fa68:	ret
  41fa6c:	stp	x29, x30, [sp, #-16]!
  41fa70:	mov	x29, sp
  41fa74:	mov	x5, x2
  41fa78:	mov	w7, #0x1                   	// #1
  41fa7c:	mov	x6, x4
  41fa80:	mov	x4, #0x0                   	// #0
  41fa84:	bl	41f39c <_obstack_memory_used@@Base+0xc06c>
  41fa88:	ldp	x29, x30, [sp], #16
  41fa8c:	ret
  41fa90:	stp	x29, x30, [sp, #-16]!
  41fa94:	mov	x29, sp
  41fa98:	mov	w7, #0x0                   	// #0
  41fa9c:	mov	x6, x5
  41faa0:	mov	x5, x2
  41faa4:	bl	41f39c <_obstack_memory_used@@Base+0xc06c>
  41faa8:	ldp	x29, x30, [sp], #16
  41faac:	ret
  41fab0:	sub	sp, sp, #0x20
  41fab4:	stp	x29, x30, [sp, #16]
  41fab8:	add	x29, sp, #0x10
  41fabc:	mov	w8, #0x1                   	// #1
  41fac0:	strb	w8, [sp, #8]
  41fac4:	str	x7, [sp]
  41fac8:	mov	x7, x6
  41facc:	mov	x6, #0x0                   	// #0
  41fad0:	bl	41f6ac <_obstack_memory_used@@Base+0xc37c>
  41fad4:	ldp	x29, x30, [sp, #16]
  41fad8:	add	sp, sp, #0x20
  41fadc:	ret
  41fae0:	sub	sp, sp, #0x20
  41fae4:	stp	x29, x30, [sp, #16]
  41fae8:	add	x29, sp, #0x10
  41faec:	strb	wzr, [sp, #8]
  41faf0:	ldr	x8, [sp, #32]
  41faf4:	str	x8, [sp]
  41faf8:	bl	41f6ac <_obstack_memory_used@@Base+0xc37c>
  41fafc:	ldp	x29, x30, [sp, #16]
  41fb00:	add	sp, sp, #0x20
  41fb04:	ret
  41fb08:	cbz	x2, 41fb2c <_obstack_memory_used@@Base+0xc7fc>
  41fb0c:	ldrb	w5, [x0, #56]
  41fb10:	mov	w6, #0x1                   	// #1
  41fb14:	bfi	w5, w6, #1, #2
  41fb18:	strb	w5, [x0, #56]
  41fb1c:	str	x2, [x1]
  41fb20:	str	x3, [x1, #8]
  41fb24:	str	x4, [x1, #16]
  41fb28:	ret
  41fb2c:	ldrb	w2, [x0, #56]
  41fb30:	and	w2, w2, #0xfffffff9
  41fb34:	strb	w2, [x0, #56]
  41fb38:	str	xzr, [x1]
  41fb3c:	str	xzr, [x1, #16]
  41fb40:	str	xzr, [x1, #8]
  41fb44:	b	41fb28 <_obstack_memory_used@@Base+0xc7f8>
  41fb48:	stp	x29, x30, [sp, #-64]!
  41fb4c:	mov	x29, sp
  41fb50:	stp	x19, x20, [sp, #16]
  41fb54:	mov	x19, x0
  41fb58:	add	x2, sp, #0x38
  41fb5c:	mov	w1, #0x0                   	// #0
  41fb60:	bl	402b10 <acl_get_entry@plt>
  41fb64:	cmp	w0, #0x0
  41fb68:	b.le	41fbc4 <_obstack_memory_used@@Base+0xc894>
  41fb6c:	str	x21, [sp, #32]
  41fb70:	mov	w20, #0x20                  	// #32
  41fb74:	mov	w21, #0x1                   	// #1
  41fb78:	add	x1, sp, #0x34
  41fb7c:	ldr	x0, [sp, #56]
  41fb80:	bl	4028c0 <acl_get_tag_type@plt>
  41fb84:	tbnz	w0, #31, 41fbbc <_obstack_memory_used@@Base+0xc88c>
  41fb88:	ldr	w1, [sp, #52]
  41fb8c:	cmp	w1, #0x1
  41fb90:	ccmp	w1, #0x4, #0x4, ne  // ne = any
  41fb94:	ccmp	w1, w20, #0x4, ne  // ne = any
  41fb98:	b.ne	41fbd0 <_obstack_memory_used@@Base+0xc8a0>  // b.any
  41fb9c:	add	x2, sp, #0x38
  41fba0:	mov	w1, w21
  41fba4:	mov	x0, x19
  41fba8:	bl	402b10 <acl_get_entry@plt>
  41fbac:	cmp	w0, #0x0
  41fbb0:	b.gt	41fb78 <_obstack_memory_used@@Base+0xc848>
  41fbb4:	ldr	x21, [sp, #32]
  41fbb8:	b	41fbc4 <_obstack_memory_used@@Base+0xc894>
  41fbbc:	mov	w0, #0xffffffff            	// #-1
  41fbc0:	ldr	x21, [sp, #32]
  41fbc4:	ldp	x19, x20, [sp, #16]
  41fbc8:	ldp	x29, x30, [sp], #64
  41fbcc:	ret
  41fbd0:	mov	w0, #0x1                   	// #1
  41fbd4:	ldr	x21, [sp, #32]
  41fbd8:	b	41fbc4 <_obstack_memory_used@@Base+0xc894>
  41fbdc:	stp	x29, x30, [sp, #-16]!
  41fbe0:	mov	x29, sp
  41fbe4:	bl	4026e0 <acl_entries@plt>
  41fbe8:	cmp	w0, #0x0
  41fbec:	cset	w0, gt
  41fbf0:	ldp	x29, x30, [sp], #16
  41fbf4:	ret
  41fbf8:	stp	x29, x30, [sp, #-32]!
  41fbfc:	mov	x29, sp
  41fc00:	str	x19, [sp, #16]
  41fc04:	mov	x19, x0
  41fc08:	ldr	x0, [x0, #8]
  41fc0c:	cbz	x0, 41fc14 <_obstack_memory_used@@Base+0xc8e4>
  41fc10:	bl	402d30 <acl_free@plt>
  41fc14:	ldr	x0, [x19, #16]
  41fc18:	cbz	x0, 41fc20 <_obstack_memory_used@@Base+0xc8f0>
  41fc1c:	bl	402d30 <acl_free@plt>
  41fc20:	ldr	x19, [sp, #16]
  41fc24:	ldp	x29, x30, [sp], #32
  41fc28:	ret
  41fc2c:	stp	x29, x30, [sp, #-48]!
  41fc30:	mov	x29, sp
  41fc34:	stp	x19, x20, [sp, #16]
  41fc38:	str	x21, [sp, #32]
  41fc3c:	mov	x21, x0
  41fc40:	mov	w20, w2
  41fc44:	mov	x19, x3
  41fc48:	stp	xzr, xzr, [x3]
  41fc4c:	stp	xzr, xzr, [x3, #16]
  41fc50:	str	w2, [x3]
  41fc54:	cmn	w1, #0x1
  41fc58:	b.eq	41fc90 <_obstack_memory_used@@Base+0xc960>  // b.none
  41fc5c:	mov	w0, w1
  41fc60:	bl	402980 <acl_get_fd@plt>
  41fc64:	str	x0, [x19, #8]
  41fc68:	ldr	x1, [x19, #8]
  41fc6c:	cbz	x1, 41fca0 <_obstack_memory_used@@Base+0xc970>
  41fc70:	and	w20, w20, #0xf000
  41fc74:	mov	w0, #0x0                   	// #0
  41fc78:	cmp	w20, #0x4, lsl #12
  41fc7c:	b.eq	41fcb8 <_obstack_memory_used@@Base+0xc988>  // b.none
  41fc80:	ldp	x19, x20, [sp, #16]
  41fc84:	ldr	x21, [sp, #32]
  41fc88:	ldp	x29, x30, [sp], #48
  41fc8c:	ret
  41fc90:	mov	w1, #0x8000                	// #32768
  41fc94:	bl	402ac0 <acl_get_file@plt>
  41fc98:	str	x0, [x19, #8]
  41fc9c:	b	41fc68 <_obstack_memory_used@@Base+0xc938>
  41fca0:	bl	402cb0 <__errno_location@plt>
  41fca4:	ldr	w0, [x0]
  41fca8:	bl	420128 <_obstack_memory_used@@Base+0xcdf8>
  41fcac:	and	w0, w0, #0xff
  41fcb0:	neg	w0, w0
  41fcb4:	b	41fc80 <_obstack_memory_used@@Base+0xc950>
  41fcb8:	mov	w1, #0x4000                	// #16384
  41fcbc:	mov	x0, x21
  41fcc0:	bl	402ac0 <acl_get_file@plt>
  41fcc4:	str	x0, [x19, #16]
  41fcc8:	cmp	x0, #0x0
  41fccc:	csetm	w0, eq  // eq = none
  41fcd0:	b	41fc80 <_obstack_memory_used@@Base+0xc950>
  41fcd4:	stp	x29, x30, [sp, #-64]!
  41fcd8:	mov	x29, sp
  41fcdc:	stp	x19, x20, [sp, #16]
  41fce0:	mov	x19, x0
  41fce4:	ldrb	w0, [x0, #24]
  41fce8:	mov	w20, #0x0                   	// #0
  41fcec:	cbnz	w0, 41fd88 <_obstack_memory_used@@Base+0xca58>
  41fcf0:	stp	x21, x22, [sp, #32]
  41fcf4:	stp	x23, x24, [sp, #48]
  41fcf8:	mov	x23, x1
  41fcfc:	mov	w22, w2
  41fd00:	mov	w24, w3
  41fd04:	mov	x21, x5
  41fd08:	cbz	w3, 41fd74 <_obstack_memory_used@@Base+0xca44>
  41fd0c:	ldr	x0, [x19, #8]
  41fd10:	cbz	x0, 41fd18 <_obstack_memory_used@@Base+0xc9e8>
  41fd14:	bl	402d30 <acl_free@plt>
  41fd18:	ldr	w0, [x19]
  41fd1c:	bl	402970 <acl_from_mode@plt>
  41fd20:	mov	x1, x0
  41fd24:	str	x0, [x19, #8]
  41fd28:	cbz	x0, 41fe3c <_obstack_memory_used@@Base+0xcb0c>
  41fd2c:	cmn	w22, #0x1
  41fd30:	b.eq	41fd98 <_obstack_memory_used@@Base+0xca68>  // b.none
  41fd34:	mov	w0, w22
  41fd38:	bl	4026b0 <acl_set_fd@plt>
  41fd3c:	mov	w20, w0
  41fd40:	cbz	w20, 41fdcc <_obstack_memory_used@@Base+0xca9c>
  41fd44:	bl	402cb0 <__errno_location@plt>
  41fd48:	ldr	w0, [x0]
  41fd4c:	bl	420128 <_obstack_memory_used@@Base+0xcdf8>
  41fd50:	and	w0, w0, #0xff
  41fd54:	cbnz	w0, 41fe4c <_obstack_memory_used@@Base+0xcb1c>
  41fd58:	mov	w0, #0x1                   	// #1
  41fd5c:	strb	w0, [x19, #24]
  41fd60:	cbz	w24, 41fdb0 <_obstack_memory_used@@Base+0xca80>
  41fd64:	mov	w20, #0x0                   	// #0
  41fd68:	ldp	x21, x22, [sp, #32]
  41fd6c:	ldp	x23, x24, [sp, #48]
  41fd70:	b	41fd88 <_obstack_memory_used@@Base+0xca58>
  41fd74:	ldr	x1, [x19, #8]
  41fd78:	mov	w20, w3
  41fd7c:	cbnz	x1, 41fd2c <_obstack_memory_used@@Base+0xc9fc>
  41fd80:	ldp	x21, x22, [sp, #32]
  41fd84:	ldp	x23, x24, [sp, #48]
  41fd88:	mov	w0, w20
  41fd8c:	ldp	x19, x20, [sp, #16]
  41fd90:	ldp	x29, x30, [sp], #64
  41fd94:	ret
  41fd98:	mov	x2, x1
  41fd9c:	mov	w1, #0x8000                	// #32768
  41fda0:	mov	x0, x23
  41fda4:	bl	402950 <acl_set_file@plt>
  41fda8:	mov	w20, w0
  41fdac:	b	41fd40 <_obstack_memory_used@@Base+0xca10>
  41fdb0:	ldr	x0, [x19, #8]
  41fdb4:	bl	41fb48 <_obstack_memory_used@@Base+0xc818>
  41fdb8:	cmp	w0, #0x0
  41fdbc:	csel	w20, w20, w0, ne  // ne = any
  41fdc0:	ldp	x21, x22, [sp, #32]
  41fdc4:	ldp	x23, x24, [sp, #48]
  41fdc8:	b	41fd88 <_obstack_memory_used@@Base+0xca58>
  41fdcc:	mov	w0, #0x1                   	// #1
  41fdd0:	strb	w0, [x21]
  41fdd4:	ldr	w0, [x19]
  41fdd8:	and	w0, w0, #0xf000
  41fddc:	cmp	w0, #0x4, lsl #12
  41fde0:	b.eq	41fdf0 <_obstack_memory_used@@Base+0xcac0>  // b.none
  41fde4:	ldp	x21, x22, [sp, #32]
  41fde8:	ldp	x23, x24, [sp, #48]
  41fdec:	b	41fd88 <_obstack_memory_used@@Base+0xca58>
  41fdf0:	cbnz	w24, 41fe04 <_obstack_memory_used@@Base+0xcad4>
  41fdf4:	ldr	x0, [x19, #16]
  41fdf8:	cbz	x0, 41fe04 <_obstack_memory_used@@Base+0xcad4>
  41fdfc:	bl	41fbdc <_obstack_memory_used@@Base+0xc8ac>
  41fe00:	cbnz	w0, 41fe1c <_obstack_memory_used@@Base+0xcaec>
  41fe04:	mov	x0, x23
  41fe08:	bl	402790 <acl_delete_def_file@plt>
  41fe0c:	mov	w20, w0
  41fe10:	ldp	x21, x22, [sp, #32]
  41fe14:	ldp	x23, x24, [sp, #48]
  41fe18:	b	41fd88 <_obstack_memory_used@@Base+0xca58>
  41fe1c:	ldr	x2, [x19, #16]
  41fe20:	mov	w1, #0x4000                	// #16384
  41fe24:	mov	x0, x23
  41fe28:	bl	402950 <acl_set_file@plt>
  41fe2c:	mov	w20, w0
  41fe30:	ldp	x21, x22, [sp, #32]
  41fe34:	ldp	x23, x24, [sp, #48]
  41fe38:	b	41fd88 <_obstack_memory_used@@Base+0xca58>
  41fe3c:	mov	w20, #0xffffffff            	// #-1
  41fe40:	ldp	x21, x22, [sp, #32]
  41fe44:	ldp	x23, x24, [sp, #48]
  41fe48:	b	41fd88 <_obstack_memory_used@@Base+0xca58>
  41fe4c:	ldp	x21, x22, [sp, #32]
  41fe50:	ldp	x23, x24, [sp, #48]
  41fe54:	b	41fd88 <_obstack_memory_used@@Base+0xca58>
  41fe58:	stp	x29, x30, [sp, #-16]!
  41fe5c:	mov	x29, sp
  41fe60:	mov	x3, x0
  41fe64:	mov	w0, w1
  41fe68:	mov	w1, w2
  41fe6c:	cmn	w0, #0x1
  41fe70:	b.eq	41fe80 <_obstack_memory_used@@Base+0xcb50>  // b.none
  41fe74:	bl	4028f0 <fchmod@plt>
  41fe78:	ldp	x29, x30, [sp], #16
  41fe7c:	ret
  41fe80:	mov	x0, x3
  41fe84:	bl	402810 <chmod@plt>
  41fe88:	b	41fe78 <_obstack_memory_used@@Base+0xcb48>
  41fe8c:	stp	x29, x30, [sp, #-80]!
  41fe90:	mov	x29, sp
  41fe94:	stp	x19, x20, [sp, #16]
  41fe98:	stp	x21, x22, [sp, #32]
  41fe9c:	stp	x23, x24, [sp, #48]
  41fea0:	mov	x20, x0
  41fea4:	mov	x21, x1
  41fea8:	mov	w22, w2
  41feac:	strb	wzr, [sp, #79]
  41feb0:	strb	wzr, [sp, #78]
  41feb4:	ldr	w2, [x0]
  41feb8:	ands	w23, w2, #0xe00
  41febc:	b.eq	41fefc <_obstack_memory_used@@Base+0xcbcc>  // b.none
  41fec0:	mov	w1, w22
  41fec4:	mov	x0, x21
  41fec8:	bl	41fe58 <_obstack_memory_used@@Base+0xcb28>
  41fecc:	cbnz	w0, 41fff4 <_obstack_memory_used@@Base+0xccc4>
  41fed0:	add	x5, sp, #0x4f
  41fed4:	add	x4, sp, #0x4e
  41fed8:	mov	w3, #0x0                   	// #0
  41fedc:	mov	w2, w22
  41fee0:	mov	x1, x21
  41fee4:	mov	x0, x20
  41fee8:	bl	41fcd4 <_obstack_memory_used@@Base+0xc9a4>
  41feec:	mov	w19, w0
  41fef0:	ldrb	w0, [sp, #79]
  41fef4:	cbz	w0, 41ff1c <_obstack_memory_used@@Base+0xcbec>
  41fef8:	b	41ffc0 <_obstack_memory_used@@Base+0xcc90>
  41fefc:	add	x5, sp, #0x4f
  41ff00:	add	x4, sp, #0x4e
  41ff04:	mov	w3, #0x0                   	// #0
  41ff08:	mov	w2, w22
  41ff0c:	bl	41fcd4 <_obstack_memory_used@@Base+0xc9a4>
  41ff10:	mov	w19, w0
  41ff14:	ldrb	w0, [sp, #79]
  41ff18:	cbnz	w0, 41ffac <_obstack_memory_used@@Base+0xcc7c>
  41ff1c:	cbz	w19, 41fffc <_obstack_memory_used@@Base+0xcccc>
  41ff20:	bl	402cb0 <__errno_location@plt>
  41ff24:	ldr	w19, [x0]
  41ff28:	add	x5, sp, #0x4f
  41ff2c:	add	x4, sp, #0x4e
  41ff30:	mov	w3, #0x1                   	// #1
  41ff34:	mov	w2, w22
  41ff38:	mov	x1, x21
  41ff3c:	mov	x0, x20
  41ff40:	bl	41fcd4 <_obstack_memory_used@@Base+0xc9a4>
  41ff44:	ldrb	w1, [sp, #79]
  41ff48:	cbnz	w1, 41ff54 <_obstack_memory_used@@Base+0xcc24>
  41ff4c:	mov	w1, #0x1                   	// #1
  41ff50:	strb	w1, [sp, #78]
  41ff54:	cbz	w19, 41ffa8 <_obstack_memory_used@@Base+0xcc78>
  41ff58:	bl	402cb0 <__errno_location@plt>
  41ff5c:	str	w19, [x0]
  41ff60:	cmp	w23, #0x0
  41ff64:	cset	w1, eq  // eq = none
  41ff68:	ldrb	w0, [sp, #78]
  41ff6c:	mov	w19, #0xffffffff            	// #-1
  41ff70:	tst	w1, w0
  41ff74:	b.eq	41ffc0 <_obstack_memory_used@@Base+0xcc90>  // b.none
  41ff78:	bl	402cb0 <__errno_location@plt>
  41ff7c:	mov	x23, x0
  41ff80:	ldr	w24, [x0]
  41ff84:	ldr	w2, [x20]
  41ff88:	mov	w1, w22
  41ff8c:	mov	x0, x21
  41ff90:	bl	41fe58 <_obstack_memory_used@@Base+0xcb28>
  41ff94:	mov	w19, w0
  41ff98:	cbz	w24, 41ffc0 <_obstack_memory_used@@Base+0xcc90>
  41ff9c:	str	w24, [x23]
  41ffa0:	mov	w19, #0xffffffff            	// #-1
  41ffa4:	b	41ffc0 <_obstack_memory_used@@Base+0xcc90>
  41ffa8:	mov	w19, w0
  41ffac:	cmp	w23, #0x0
  41ffb0:	cset	w1, eq  // eq = none
  41ffb4:	ldrb	w0, [sp, #78]
  41ffb8:	tst	w1, w0
  41ffbc:	b.ne	41ffd8 <_obstack_memory_used@@Base+0xcca8>  // b.any
  41ffc0:	mov	w0, w19
  41ffc4:	ldp	x19, x20, [sp, #16]
  41ffc8:	ldp	x21, x22, [sp, #32]
  41ffcc:	ldp	x23, x24, [sp, #48]
  41ffd0:	ldp	x29, x30, [sp], #80
  41ffd4:	ret
  41ffd8:	cbnz	w19, 41ff78 <_obstack_memory_used@@Base+0xcc48>
  41ffdc:	ldr	w2, [x20]
  41ffe0:	mov	w1, w22
  41ffe4:	mov	x0, x21
  41ffe8:	bl	41fe58 <_obstack_memory_used@@Base+0xcb28>
  41ffec:	mov	w19, w0
  41fff0:	b	41ffc0 <_obstack_memory_used@@Base+0xcc90>
  41fff4:	mov	w19, #0xffffffff            	// #-1
  41fff8:	b	41ffc0 <_obstack_memory_used@@Base+0xcc90>
  41fffc:	add	x5, sp, #0x4f
  420000:	add	x4, sp, #0x4e
  420004:	mov	w3, #0x1                   	// #1
  420008:	mov	w2, w22
  42000c:	mov	x1, x21
  420010:	mov	x0, x20
  420014:	bl	41fcd4 <_obstack_memory_used@@Base+0xc9a4>
  420018:	ldrb	w1, [sp, #79]
  42001c:	cbz	w1, 41ff4c <_obstack_memory_used@@Base+0xcc1c>
  420020:	mov	w19, w0
  420024:	b	41ffac <_obstack_memory_used@@Base+0xcc7c>
  420028:	stp	x29, x30, [sp, #-288]!
  42002c:	mov	x29, sp
  420030:	mov	x2, #0x101                 	// #257
  420034:	add	x1, sp, #0x18
  420038:	bl	420080 <_obstack_memory_used@@Base+0xcd50>
  42003c:	cbnz	w0, 420078 <_obstack_memory_used@@Base+0xcd48>
  420040:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  420044:	add	x1, x1, #0xa20
  420048:	add	x0, sp, #0x18
  42004c:	bl	402aa0 <strcmp@plt>
  420050:	cbz	w0, 42006c <_obstack_memory_used@@Base+0xcd3c>
  420054:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xecd0>
  420058:	add	x1, x1, #0xa28
  42005c:	add	x0, sp, #0x18
  420060:	bl	402aa0 <strcmp@plt>
  420064:	cmp	w0, #0x0
  420068:	cset	w0, ne  // ne = any
  42006c:	and	w0, w0, #0x1
  420070:	ldp	x29, x30, [sp], #288
  420074:	ret
  420078:	mov	w0, #0x0                   	// #0
  42007c:	b	420070 <_obstack_memory_used@@Base+0xcd40>
  420080:	stp	x29, x30, [sp, #-48]!
  420084:	mov	x29, sp
  420088:	stp	x19, x20, [sp, #16]
  42008c:	str	x21, [sp, #32]
  420090:	mov	x21, x1
  420094:	mov	x20, x2
  420098:	mov	x1, #0x0                   	// #0
  42009c:	bl	402d20 <setlocale@plt>
  4200a0:	cbz	x0, 4200dc <_obstack_memory_used@@Base+0xcdac>
  4200a4:	mov	x19, x0
  4200a8:	bl	402690 <strlen@plt>
  4200ac:	cmp	x20, x0
  4200b0:	b.hi	4200ec <_obstack_memory_used@@Base+0xcdbc>  // b.pmore
  4200b4:	mov	w0, #0x22                  	// #34
  4200b8:	cbz	x20, 420100 <_obstack_memory_used@@Base+0xcdd0>
  4200bc:	sub	x20, x20, #0x1
  4200c0:	mov	x2, x20
  4200c4:	mov	x1, x19
  4200c8:	mov	x0, x21
  4200cc:	bl	402650 <memcpy@plt>
  4200d0:	strb	wzr, [x21, x20]
  4200d4:	mov	w0, #0x22                  	// #34
  4200d8:	b	420100 <_obstack_memory_used@@Base+0xcdd0>
  4200dc:	mov	w0, #0x16                  	// #22
  4200e0:	cbz	x20, 420100 <_obstack_memory_used@@Base+0xcdd0>
  4200e4:	strb	wzr, [x21]
  4200e8:	b	420100 <_obstack_memory_used@@Base+0xcdd0>
  4200ec:	add	x2, x0, #0x1
  4200f0:	mov	x1, x19
  4200f4:	mov	x0, x21
  4200f8:	bl	402650 <memcpy@plt>
  4200fc:	mov	w0, #0x0                   	// #0
  420100:	ldp	x19, x20, [sp, #16]
  420104:	ldr	x21, [sp, #32]
  420108:	ldp	x29, x30, [sp], #48
  42010c:	ret
  420110:	stp	x29, x30, [sp, #-16]!
  420114:	mov	x29, sp
  420118:	mov	x1, #0x0                   	// #0
  42011c:	bl	402d20 <setlocale@plt>
  420120:	ldp	x29, x30, [sp], #16
  420124:	ret
  420128:	mov	w1, w0
  42012c:	cmp	w0, #0x26
  420130:	b.eq	42015c <_obstack_memory_used@@Base+0xce2c>  // b.none
  420134:	b.gt	420150 <_obstack_memory_used@@Base+0xce20>
  420138:	mov	w0, #0x0                   	// #0
  42013c:	cmp	w1, #0x10
  420140:	b.eq	42014c <_obstack_memory_used@@Base+0xce1c>  // b.none
  420144:	cmp	w1, #0x16
  420148:	cset	w0, ne  // ne = any
  42014c:	ret
  420150:	cmp	w0, #0x5f
  420154:	cset	w0, ne  // ne = any
  420158:	b	42014c <_obstack_memory_used@@Base+0xce1c>
  42015c:	mov	w0, #0x0                   	// #0
  420160:	b	42014c <_obstack_memory_used@@Base+0xce1c>
  420164:	nop
  420168:	stp	x29, x30, [sp, #-64]!
  42016c:	mov	x29, sp
  420170:	stp	x19, x20, [sp, #16]
  420174:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x23cd0>
  420178:	add	x20, x20, #0xde0
  42017c:	stp	x21, x22, [sp, #32]
  420180:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x23cd0>
  420184:	add	x21, x21, #0xdd8
  420188:	sub	x20, x20, x21
  42018c:	mov	w22, w0
  420190:	stp	x23, x24, [sp, #48]
  420194:	mov	x23, x1
  420198:	mov	x24, x2
  42019c:	bl	402608 <mbrtowc@plt-0x38>
  4201a0:	cmp	xzr, x20, asr #3
  4201a4:	b.eq	4201d0 <_obstack_memory_used@@Base+0xcea0>  // b.none
  4201a8:	asr	x20, x20, #3
  4201ac:	mov	x19, #0x0                   	// #0
  4201b0:	ldr	x3, [x21, x19, lsl #3]
  4201b4:	mov	x2, x24
  4201b8:	add	x19, x19, #0x1
  4201bc:	mov	x1, x23
  4201c0:	mov	w0, w22
  4201c4:	blr	x3
  4201c8:	cmp	x20, x19
  4201cc:	b.ne	4201b0 <_obstack_memory_used@@Base+0xce80>  // b.any
  4201d0:	ldp	x19, x20, [sp, #16]
  4201d4:	ldp	x21, x22, [sp, #32]
  4201d8:	ldp	x23, x24, [sp, #48]
  4201dc:	ldp	x29, x30, [sp], #64
  4201e0:	ret
  4201e4:	nop
  4201e8:	ret
  4201ec:	nop
  4201f0:	adrp	x2, 438000 <_obstack_memory_used@@Base+0x24cd0>
  4201f4:	mov	x1, #0x0                   	// #0
  4201f8:	ldr	x2, [x2, #912]
  4201fc:	b	402720 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000420200 <.fini>:
  420200:	stp	x29, x30, [sp, #-16]!
  420204:	mov	x29, sp
  420208:	ldp	x29, x30, [sp], #16
  42020c:	ret
