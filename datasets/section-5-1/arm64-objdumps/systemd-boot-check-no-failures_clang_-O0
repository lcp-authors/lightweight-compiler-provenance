
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-boot-check-no-failures_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400e38 <_init>:
  400e38:	stp	x29, x30, [sp, #-16]!
  400e3c:	mov	x29, sp
  400e40:	bl	401060 <call_weak_fn>
  400e44:	ldp	x29, x30, [sp], #16
  400e48:	ret

Disassembly of section .plt:

0000000000400e50 <__libc_start_main@plt-0x20>:
  400e50:	stp	x16, x30, [sp, #-16]!
  400e54:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400e58:	ldr	x17, [x16, #3880]
  400e5c:	add	x16, x16, #0xf28
  400e60:	br	x17
  400e64:	nop
  400e68:	nop
  400e6c:	nop

0000000000400e70 <__libc_start_main@plt>:
  400e70:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400e74:	ldr	x17, [x16, #3888]
  400e78:	add	x16, x16, #0xf30
  400e7c:	br	x17

0000000000400e80 <abort@plt>:
  400e80:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400e84:	ldr	x17, [x16, #3896]
  400e88:	add	x16, x16, #0xf38
  400e8c:	br	x17

0000000000400e90 <__gmon_start__@plt>:
  400e90:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400e94:	ldr	x17, [x16, #3904]
  400e98:	add	x16, x16, #0xf40
  400e9c:	br	x17

0000000000400ea0 <ask_password_agent_close@plt>:
  400ea0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400ea4:	ldr	x17, [x16, #3912]
  400ea8:	add	x16, x16, #0xf48
  400eac:	br	x17

0000000000400eb0 <polkit_agent_close@plt>:
  400eb0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400eb4:	ldr	x17, [x16, #3920]
  400eb8:	add	x16, x16, #0xf50
  400ebc:	br	x17

0000000000400ec0 <pager_close@plt>:
  400ec0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400ec4:	ldr	x17, [x16, #3928]
  400ec8:	add	x16, x16, #0xf58
  400ecc:	br	x17

0000000000400ed0 <mac_selinux_finish@plt>:
  400ed0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400ed4:	ldr	x17, [x16, #3936]
  400ed8:	add	x16, x16, #0xf60
  400edc:	br	x17

0000000000400ee0 <log_parse_environment_realm@plt>:
  400ee0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400ee4:	ldr	x17, [x16, #3944]
  400ee8:	add	x16, x16, #0xf68
  400eec:	br	x17

0000000000400ef0 <log_open@plt>:
  400ef0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400ef4:	ldr	x17, [x16, #3952]
  400ef8:	add	x16, x16, #0xf70
  400efc:	br	x17

0000000000400f00 <sd_bus_open_system@plt>:
  400f00:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f04:	ldr	x17, [x16, #3960]
  400f08:	add	x16, x16, #0xf78
  400f0c:	br	x17

0000000000400f10 <log_get_max_level_realm@plt>:
  400f10:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f14:	ldr	x17, [x16, #3968]
  400f18:	add	x16, x16, #0xf80
  400f1c:	br	x17

0000000000400f20 <log_internal_realm@plt>:
  400f20:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f24:	ldr	x17, [x16, #3976]
  400f28:	add	x16, x16, #0xf88
  400f2c:	br	x17

0000000000400f30 <abs@plt>:
  400f30:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f34:	ldr	x17, [x16, #3984]
  400f38:	add	x16, x16, #0xf90
  400f3c:	br	x17

0000000000400f40 <sd_bus_get_property_trivial@plt>:
  400f40:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f44:	ldr	x17, [x16, #3992]
  400f48:	add	x16, x16, #0xf98
  400f4c:	br	x17

0000000000400f50 <bus_error_message@plt>:
  400f50:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f54:	ldr	x17, [x16, #4000]
  400f58:	add	x16, x16, #0xfa0
  400f5c:	br	x17

0000000000400f60 <sd_bus_error_free@plt>:
  400f60:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f64:	ldr	x17, [x16, #4008]
  400f68:	add	x16, x16, #0xfa8
  400f6c:	br	x17

0000000000400f70 <sd_bus_flush_close_unref@plt>:
  400f70:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f74:	ldr	x17, [x16, #4016]
  400f78:	add	x16, x16, #0xfb0
  400f7c:	br	x17

0000000000400f80 <log_assert_failed_realm@plt>:
  400f80:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f84:	ldr	x17, [x16, #4024]
  400f88:	add	x16, x16, #0xfb8
  400f8c:	br	x17

0000000000400f90 <getopt_long@plt>:
  400f90:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400f94:	ldr	x17, [x16, #4032]
  400f98:	add	x16, x16, #0xfc0
  400f9c:	br	x17

0000000000400fa0 <version@plt>:
  400fa0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400fa4:	ldr	x17, [x16, #4040]
  400fa8:	add	x16, x16, #0xfc8
  400fac:	br	x17

0000000000400fb0 <log_assert_failed_unreachable_realm@plt>:
  400fb0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400fb4:	ldr	x17, [x16, #4048]
  400fb8:	add	x16, x16, #0xfd0
  400fbc:	br	x17

0000000000400fc0 <terminal_urlify_man@plt>:
  400fc0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400fc4:	ldr	x17, [x16, #4056]
  400fc8:	add	x16, x16, #0xfd8
  400fcc:	br	x17

0000000000400fd0 <log_oom_internal@plt>:
  400fd0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400fd4:	ldr	x17, [x16, #4064]
  400fd8:	add	x16, x16, #0xfe0
  400fdc:	br	x17

0000000000400fe0 <printf@plt>:
  400fe0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400fe4:	ldr	x17, [x16, #4072]
  400fe8:	add	x16, x16, #0xfe8
  400fec:	br	x17

0000000000400ff0 <free@plt>:
  400ff0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  400ff4:	ldr	x17, [x16, #4080]
  400ff8:	add	x16, x16, #0xff0
  400ffc:	br	x17

0000000000401000 <colors_enabled@plt>:
  401000:	adrp	x16, 41f000 <__FRAME_END__+0x1d1c8>
  401004:	ldr	x17, [x16, #4088]
  401008:	add	x16, x16, #0xff8
  40100c:	br	x17

Disassembly of section .text:

0000000000401010 <_start>:
  401010:	mov	x29, #0x0                   	// #0
  401014:	mov	x30, #0x0                   	// #0
  401018:	mov	x5, x0
  40101c:	ldr	x1, [sp]
  401020:	add	x2, sp, #0x8
  401024:	mov	x6, sp
  401028:	movz	x0, #0x0, lsl #48
  40102c:	movk	x0, #0x0, lsl #32
  401030:	movk	x0, #0x40, lsl #16
  401034:	movk	x0, #0x11d8
  401038:	movz	x3, #0x0, lsl #48
  40103c:	movk	x3, #0x0, lsl #32
  401040:	movk	x3, #0x40, lsl #16
  401044:	movk	x3, #0x1a00
  401048:	movz	x4, #0x0, lsl #48
  40104c:	movk	x4, #0x0, lsl #32
  401050:	movk	x4, #0x40, lsl #16
  401054:	movk	x4, #0x1a80
  401058:	bl	400e70 <__libc_start_main@plt>
  40105c:	bl	400e80 <abort@plt>

0000000000401060 <call_weak_fn>:
  401060:	adrp	x0, 41f000 <__FRAME_END__+0x1d1c8>
  401064:	ldr	x0, [x0, #3840]
  401068:	cbz	x0, 401070 <call_weak_fn+0x10>
  40106c:	b	400e90 <__gmon_start__@plt>
  401070:	ret

0000000000401074 <deregister_tm_clones>:
  401074:	stp	x29, x30, [sp, #-32]!
  401078:	mov	x29, sp
  40107c:	adrp	x0, 420000 <completed.8445>
  401080:	add	x0, x0, #0x0
  401084:	str	x0, [sp, #24]
  401088:	ldr	x0, [sp, #24]
  40108c:	str	x0, [sp, #24]
  401090:	ldr	x1, [sp, #24]
  401094:	adrp	x0, 420000 <completed.8445>
  401098:	add	x0, x0, #0x0
  40109c:	cmp	x1, x0
  4010a0:	b.eq	4010dc <deregister_tm_clones+0x68>  // b.none
  4010a4:	adrp	x0, 401000 <colors_enabled@plt>
  4010a8:	add	x0, x0, #0xa98
  4010ac:	ldr	x0, [x0]
  4010b0:	str	x0, [sp, #16]
  4010b4:	ldr	x0, [sp, #16]
  4010b8:	str	x0, [sp, #16]
  4010bc:	ldr	x0, [sp, #16]
  4010c0:	cmp	x0, #0x0
  4010c4:	b.eq	4010e0 <deregister_tm_clones+0x6c>  // b.none
  4010c8:	ldr	x1, [sp, #16]
  4010cc:	adrp	x0, 420000 <completed.8445>
  4010d0:	add	x0, x0, #0x0
  4010d4:	blr	x1
  4010d8:	b	4010e0 <deregister_tm_clones+0x6c>
  4010dc:	nop
  4010e0:	ldp	x29, x30, [sp], #32
  4010e4:	ret

00000000004010e8 <register_tm_clones>:
  4010e8:	stp	x29, x30, [sp, #-48]!
  4010ec:	mov	x29, sp
  4010f0:	adrp	x0, 420000 <completed.8445>
  4010f4:	add	x0, x0, #0x0
  4010f8:	str	x0, [sp, #40]
  4010fc:	ldr	x0, [sp, #40]
  401100:	str	x0, [sp, #40]
  401104:	ldr	x1, [sp, #40]
  401108:	adrp	x0, 420000 <completed.8445>
  40110c:	add	x0, x0, #0x0
  401110:	sub	x0, x1, x0
  401114:	asr	x0, x0, #3
  401118:	lsr	x1, x0, #63
  40111c:	add	x0, x1, x0
  401120:	asr	x0, x0, #1
  401124:	str	x0, [sp, #32]
  401128:	ldr	x0, [sp, #32]
  40112c:	cmp	x0, #0x0
  401130:	b.eq	401170 <register_tm_clones+0x88>  // b.none
  401134:	adrp	x0, 401000 <colors_enabled@plt>
  401138:	add	x0, x0, #0xaa0
  40113c:	ldr	x0, [x0]
  401140:	str	x0, [sp, #24]
  401144:	ldr	x0, [sp, #24]
  401148:	str	x0, [sp, #24]
  40114c:	ldr	x0, [sp, #24]
  401150:	cmp	x0, #0x0
  401154:	b.eq	401174 <register_tm_clones+0x8c>  // b.none
  401158:	ldr	x2, [sp, #24]
  40115c:	ldr	x1, [sp, #32]
  401160:	adrp	x0, 420000 <completed.8445>
  401164:	add	x0, x0, #0x0
  401168:	blr	x2
  40116c:	b	401174 <register_tm_clones+0x8c>
  401170:	nop
  401174:	ldp	x29, x30, [sp], #48
  401178:	ret

000000000040117c <__do_global_dtors_aux>:
  40117c:	stp	x29, x30, [sp, #-16]!
  401180:	mov	x29, sp
  401184:	adrp	x0, 420000 <completed.8445>
  401188:	add	x0, x0, #0x0
  40118c:	ldrb	w0, [x0]
  401190:	and	x0, x0, #0xff
  401194:	cmp	x0, #0x0
  401198:	b.ne	4011b4 <__do_global_dtors_aux+0x38>  // b.any
  40119c:	bl	401074 <deregister_tm_clones>
  4011a0:	adrp	x0, 420000 <completed.8445>
  4011a4:	add	x0, x0, #0x0
  4011a8:	mov	w1, #0x1                   	// #1
  4011ac:	strb	w1, [x0]
  4011b0:	b	4011b8 <__do_global_dtors_aux+0x3c>
  4011b4:	nop
  4011b8:	ldp	x29, x30, [sp], #16
  4011bc:	ret

00000000004011c0 <frame_dummy>:
  4011c0:	stp	x29, x30, [sp, #-16]!
  4011c4:	mov	x29, sp
  4011c8:	bl	4010e8 <register_tm_clones>
  4011cc:	nop
  4011d0:	ldp	x29, x30, [sp], #16
  4011d4:	ret

00000000004011d8 <main>:
  4011d8:	sub	sp, sp, #0x30
  4011dc:	stp	x29, x30, [sp, #32]
  4011e0:	add	x29, sp, #0x20
  4011e4:	stur	wzr, [x29, #-4]
  4011e8:	stur	w0, [x29, #-8]
  4011ec:	str	x1, [sp, #16]
  4011f0:	ldur	w0, [x29, #-8]
  4011f4:	ldr	x1, [sp, #16]
  4011f8:	bl	401258 <save_argc_argv>
  4011fc:	ldur	w0, [x29, #-8]
  401200:	ldr	x1, [sp, #16]
  401204:	bl	40128c <run>
  401208:	str	w0, [sp, #12]
  40120c:	bl	400ea0 <ask_password_agent_close@plt>
  401210:	bl	400eb0 <polkit_agent_close@plt>
  401214:	bl	400ec0 <pager_close@plt>
  401218:	bl	400ed0 <mac_selinux_finish@plt>
  40121c:	bl	401600 <static_destruct>
  401220:	ldr	w8, [sp, #12]
  401224:	cmp	w8, #0x0
  401228:	cset	w8, ge  // ge = tcont
  40122c:	tbnz	w8, #0, 40123c <main+0x64>
  401230:	mov	w8, #0x1                   	// #1
  401234:	str	w8, [sp, #8]
  401238:	b	401244 <main+0x6c>
  40123c:	ldr	w8, [sp, #12]
  401240:	str	w8, [sp, #8]
  401244:	ldr	w8, [sp, #8]
  401248:	mov	w0, w8
  40124c:	ldp	x29, x30, [sp, #32]
  401250:	add	sp, sp, #0x30
  401254:	ret

0000000000401258 <save_argc_argv>:
  401258:	sub	sp, sp, #0x10
  40125c:	adrp	x8, 420000 <completed.8445>
  401260:	add	x8, x8, #0x8
  401264:	adrp	x9, 420000 <completed.8445>
  401268:	add	x9, x9, #0x10
  40126c:	str	w0, [sp, #12]
  401270:	str	x1, [sp]
  401274:	ldr	w10, [sp, #12]
  401278:	str	w10, [x8]
  40127c:	ldr	x8, [sp]
  401280:	str	x8, [x9]
  401284:	add	sp, sp, #0x10
  401288:	ret

000000000040128c <run>:
  40128c:	sub	sp, sp, #0xd0
  401290:	stp	x29, x30, [sp, #192]
  401294:	add	x29, sp, #0xc0
  401298:	mov	x8, xzr
  40129c:	mov	w9, wzr
  4012a0:	adrp	x10, 401000 <colors_enabled@plt>
  4012a4:	add	x10, x10, #0xb10
  4012a8:	add	x10, x10, #0x3
  4012ac:	adrp	x11, 401000 <colors_enabled@plt>
  4012b0:	add	x11, x11, #0xb35
  4012b4:	stur	w0, [x29, #-8]
  4012b8:	stur	x1, [x29, #-16]
  4012bc:	stur	xzr, [x29, #-40]
  4012c0:	stur	xzr, [x29, #-32]
  4012c4:	stur	xzr, [x29, #-24]
  4012c8:	stur	x8, [x29, #-48]
  4012cc:	mov	w0, w9
  4012d0:	str	x10, [sp, #56]
  4012d4:	str	x11, [sp, #48]
  4012d8:	bl	400ee0 <log_parse_environment_realm@plt>
  4012dc:	bl	400ef0 <log_open@plt>
  4012e0:	ldur	w9, [x29, #-8]
  4012e4:	ldur	x1, [x29, #-16]
  4012e8:	mov	w0, w9
  4012ec:	bl	4016b4 <parse_argv>
  4012f0:	stur	w0, [x29, #-56]
  4012f4:	ldur	w9, [x29, #-56]
  4012f8:	cmp	w9, #0x0
  4012fc:	cset	w9, gt
  401300:	tbnz	w9, #0, 401318 <run+0x8c>
  401304:	ldur	w8, [x29, #-56]
  401308:	stur	w8, [x29, #-4]
  40130c:	mov	w8, #0x1                   	// #1
  401310:	stur	w8, [x29, #-60]
  401314:	b	4015e0 <run+0x354>
  401318:	sub	x0, x29, #0x30
  40131c:	bl	400f00 <sd_bus_open_system@plt>
  401320:	stur	w0, [x29, #-56]
  401324:	ldur	w8, [x29, #-56]
  401328:	cmp	w8, #0x0
  40132c:	cset	w8, ge  // ge = tcont
  401330:	tbnz	w8, #0, 4013c0 <run+0x134>
  401334:	mov	w8, #0x3                   	// #3
  401338:	stur	w8, [x29, #-64]
  40133c:	ldur	w8, [x29, #-56]
  401340:	stur	w8, [x29, #-68]
  401344:	stur	wzr, [x29, #-72]
  401348:	ldur	w0, [x29, #-72]
  40134c:	bl	400f10 <log_get_max_level_realm@plt>
  401350:	ldur	w8, [x29, #-64]
  401354:	and	w8, w8, #0x7
  401358:	cmp	w0, w8
  40135c:	b.lt	401390 <run+0x104>  // b.tstop
  401360:	ldur	w8, [x29, #-72]
  401364:	ldur	w9, [x29, #-64]
  401368:	orr	w0, w9, w8, lsl #10
  40136c:	ldur	w1, [x29, #-68]
  401370:	ldr	x2, [sp, #56]
  401374:	mov	w3, #0x5c                  	// #92
  401378:	ldr	x4, [sp, #48]
  40137c:	adrp	x5, 401000 <colors_enabled@plt>
  401380:	add	x5, x5, #0xb39
  401384:	bl	400f20 <log_internal_realm@plt>
  401388:	str	w0, [sp, #44]
  40138c:	b	4013a4 <run+0x118>
  401390:	ldur	w0, [x29, #-68]
  401394:	bl	400f30 <abs@plt>
  401398:	mov	w8, wzr
  40139c:	subs	w8, w8, w0, uxtb
  4013a0:	str	w8, [sp, #44]
  4013a4:	ldr	w8, [sp, #44]
  4013a8:	stur	w8, [x29, #-76]
  4013ac:	ldur	w8, [x29, #-76]
  4013b0:	stur	w8, [x29, #-4]
  4013b4:	mov	w8, #0x1                   	// #1
  4013b8:	stur	w8, [x29, #-60]
  4013bc:	b	4015e0 <run+0x354>
  4013c0:	ldur	x0, [x29, #-48]
  4013c4:	adrp	x1, 401000 <colors_enabled@plt>
  4013c8:	add	x1, x1, #0xb5d
  4013cc:	adrp	x2, 401000 <colors_enabled@plt>
  4013d0:	add	x2, x2, #0xb76
  4013d4:	adrp	x3, 401000 <colors_enabled@plt>
  4013d8:	add	x3, x3, #0xb90
  4013dc:	adrp	x4, 401000 <colors_enabled@plt>
  4013e0:	add	x4, x4, #0xbb1
  4013e4:	sub	x5, x29, #0x28
  4013e8:	mov	w6, #0x75                  	// #117
  4013ec:	sub	x7, x29, #0x34
  4013f0:	bl	400f40 <sd_bus_get_property_trivial@plt>
  4013f4:	stur	w0, [x29, #-56]
  4013f8:	ldur	w8, [x29, #-56]
  4013fc:	cmp	w8, #0x0
  401400:	cset	w8, ge  // ge = tcont
  401404:	tbnz	w8, #0, 4014c4 <run+0x238>
  401408:	mov	w8, #0x3                   	// #3
  40140c:	stur	w8, [x29, #-80]
  401410:	ldur	w8, [x29, #-56]
  401414:	stur	w8, [x29, #-84]
  401418:	stur	wzr, [x29, #-88]
  40141c:	ldur	w0, [x29, #-88]
  401420:	bl	400f10 <log_get_max_level_realm@plt>
  401424:	ldur	w8, [x29, #-80]
  401428:	and	w8, w8, #0x7
  40142c:	cmp	w0, w8
  401430:	b.lt	401494 <run+0x208>  // b.tstop
  401434:	ldur	w8, [x29, #-88]
  401438:	ldur	w9, [x29, #-80]
  40143c:	orr	w0, w9, w8, lsl #10
  401440:	ldur	w1, [x29, #-84]
  401444:	ldur	w8, [x29, #-56]
  401448:	sub	x10, x29, #0x28
  40144c:	str	w0, [sp, #40]
  401450:	mov	x0, x10
  401454:	str	w1, [sp, #36]
  401458:	mov	w1, w8
  40145c:	bl	400f50 <bus_error_message@plt>
  401460:	ldr	w8, [sp, #40]
  401464:	str	x0, [sp, #24]
  401468:	mov	w0, w8
  40146c:	ldr	w1, [sp, #36]
  401470:	ldr	x2, [sp, #56]
  401474:	mov	w3, #0x68                  	// #104
  401478:	ldr	x4, [sp, #48]
  40147c:	adrp	x5, 401000 <colors_enabled@plt>
  401480:	add	x5, x5, #0xbbe
  401484:	ldr	x6, [sp, #24]
  401488:	bl	400f20 <log_internal_realm@plt>
  40148c:	str	w0, [sp, #20]
  401490:	b	4014a8 <run+0x21c>
  401494:	ldur	w0, [x29, #-84]
  401498:	bl	400f30 <abs@plt>
  40149c:	mov	w8, wzr
  4014a0:	subs	w8, w8, w0, uxtb
  4014a4:	str	w8, [sp, #20]
  4014a8:	ldr	w8, [sp, #20]
  4014ac:	stur	w8, [x29, #-92]
  4014b0:	ldur	w8, [x29, #-92]
  4014b4:	stur	w8, [x29, #-4]
  4014b8:	mov	w8, #0x1                   	// #1
  4014bc:	stur	w8, [x29, #-60]
  4014c0:	b	4015e0 <run+0x354>
  4014c4:	ldur	w8, [x29, #-52]
  4014c8:	cmp	w8, #0x0
  4014cc:	cset	w8, ls  // ls = plast
  4014d0:	tbnz	w8, #0, 401550 <run+0x2c4>
  4014d4:	mov	w8, #0x5                   	// #5
  4014d8:	str	w8, [sp, #96]
  4014dc:	str	wzr, [sp, #92]
  4014e0:	str	wzr, [sp, #88]
  4014e4:	ldr	w0, [sp, #88]
  4014e8:	bl	400f10 <log_get_max_level_realm@plt>
  4014ec:	ldr	w8, [sp, #96]
  4014f0:	and	w8, w8, #0x7
  4014f4:	cmp	w0, w8
  4014f8:	b.lt	401530 <run+0x2a4>  // b.tstop
  4014fc:	ldr	w8, [sp, #88]
  401500:	ldr	w9, [sp, #96]
  401504:	orr	w0, w9, w8, lsl #10
  401508:	ldr	w1, [sp, #92]
  40150c:	ldur	w6, [x29, #-52]
  401510:	ldr	x2, [sp, #56]
  401514:	mov	w3, #0x6b                  	// #107
  401518:	ldr	x4, [sp, #48]
  40151c:	adrp	x5, 401000 <colors_enabled@plt>
  401520:	add	x5, x5, #0xbe5
  401524:	bl	400f20 <log_internal_realm@plt>
  401528:	str	w0, [sp, #16]
  40152c:	b	401544 <run+0x2b8>
  401530:	ldr	w0, [sp, #92]
  401534:	bl	400f30 <abs@plt>
  401538:	mov	w8, wzr
  40153c:	subs	w8, w8, w0, uxtb
  401540:	str	w8, [sp, #16]
  401544:	ldr	w8, [sp, #16]
  401548:	str	w8, [sp, #84]
  40154c:	b	4015c4 <run+0x338>
  401550:	mov	w8, #0x6                   	// #6
  401554:	str	w8, [sp, #80]
  401558:	str	wzr, [sp, #76]
  40155c:	str	wzr, [sp, #72]
  401560:	ldr	w0, [sp, #72]
  401564:	bl	400f10 <log_get_max_level_realm@plt>
  401568:	ldr	w8, [sp, #80]
  40156c:	and	w8, w8, #0x7
  401570:	cmp	w0, w8
  401574:	b.lt	4015a8 <run+0x31c>  // b.tstop
  401578:	ldr	w8, [sp, #72]
  40157c:	ldr	w9, [sp, #80]
  401580:	orr	w0, w9, w8, lsl #10
  401584:	ldr	w1, [sp, #76]
  401588:	ldr	x2, [sp, #56]
  40158c:	mov	w3, #0x6d                  	// #109
  401590:	ldr	x4, [sp, #48]
  401594:	adrp	x5, 401000 <colors_enabled@plt>
  401598:	add	x5, x5, #0xc09
  40159c:	bl	400f20 <log_internal_realm@plt>
  4015a0:	str	w0, [sp, #12]
  4015a4:	b	4015bc <run+0x330>
  4015a8:	ldr	w0, [sp, #76]
  4015ac:	bl	400f30 <abs@plt>
  4015b0:	mov	w8, wzr
  4015b4:	subs	w8, w8, w0, uxtb
  4015b8:	str	w8, [sp, #12]
  4015bc:	ldr	w8, [sp, #12]
  4015c0:	str	w8, [sp, #68]
  4015c4:	ldur	w8, [x29, #-52]
  4015c8:	cmp	w8, #0x0
  4015cc:	cset	w8, hi  // hi = pmore
  4015d0:	and	w8, w8, #0x1
  4015d4:	stur	w8, [x29, #-4]
  4015d8:	mov	w8, #0x1                   	// #1
  4015dc:	stur	w8, [x29, #-60]
  4015e0:	sub	x0, x29, #0x30
  4015e4:	bl	401680 <sd_bus_flush_close_unrefp>
  4015e8:	sub	x0, x29, #0x28
  4015ec:	bl	400f60 <sd_bus_error_free@plt>
  4015f0:	ldur	w0, [x29, #-4]
  4015f4:	ldp	x29, x30, [sp, #192]
  4015f8:	add	sp, sp, #0xd0
  4015fc:	ret

0000000000401600 <static_destruct>:
  401600:	sub	sp, sp, #0x20
  401604:	stp	x29, x30, [sp, #16]
  401608:	add	x29, sp, #0x10
  40160c:	adrp	x8, 41f000 <__FRAME_END__+0x1d1c8>
  401610:	ldr	x8, [x8, #3848]
  401614:	str	x8, [sp]
  401618:	cbnz	x8, 401620 <static_destruct+0x20>
  40161c:	b	401674 <static_destruct+0x74>
  401620:	ldr	x0, [sp]
  401624:	mov	x1, #0x8                   	// #8
  401628:	bl	4019d0 <ALIGN_TO>
  40162c:	str	x0, [sp, #8]
  401630:	ldr	x8, [sp, #8]
  401634:	adrp	x9, 41f000 <__FRAME_END__+0x1d1c8>
  401638:	ldr	x9, [x9, #3856]
  40163c:	cmp	x8, x9
  401640:	b.cs	401674 <static_destruct+0x74>  // b.hs, b.nlast
  401644:	ldr	x8, [sp, #8]
  401648:	ldr	x8, [x8, #8]
  40164c:	ldr	x9, [sp, #8]
  401650:	ldr	x0, [x9]
  401654:	blr	x8
  401658:	ldr	x8, [sp, #8]
  40165c:	add	x8, x8, #0x10
  401660:	mov	x0, x8
  401664:	mov	x1, #0x8                   	// #8
  401668:	bl	4019d0 <ALIGN_TO>
  40166c:	str	x0, [sp, #8]
  401670:	b	401630 <static_destruct+0x30>
  401674:	ldp	x29, x30, [sp, #16]
  401678:	add	sp, sp, #0x20
  40167c:	ret

0000000000401680 <sd_bus_flush_close_unrefp>:
  401680:	sub	sp, sp, #0x20
  401684:	stp	x29, x30, [sp, #16]
  401688:	add	x29, sp, #0x10
  40168c:	str	x0, [sp, #8]
  401690:	ldr	x8, [sp, #8]
  401694:	ldr	x8, [x8]
  401698:	cbz	x8, 4016a8 <sd_bus_flush_close_unrefp+0x28>
  40169c:	ldr	x8, [sp, #8]
  4016a0:	ldr	x0, [x8]
  4016a4:	bl	400f70 <sd_bus_flush_close_unref@plt>
  4016a8:	ldp	x29, x30, [sp, #16]
  4016ac:	add	sp, sp, #0x20
  4016b0:	ret

00000000004016b4 <parse_argv>:
  4016b4:	sub	sp, sp, #0x40
  4016b8:	stp	x29, x30, [sp, #48]
  4016bc:	add	x29, sp, #0x30
  4016c0:	adrp	x8, 401000 <colors_enabled@plt>
  4016c4:	add	x8, x8, #0xb10
  4016c8:	add	x8, x8, #0x3
  4016cc:	adrp	x9, 401000 <colors_enabled@plt>
  4016d0:	add	x9, x9, #0xc3f
  4016d4:	stur	w0, [x29, #-8]
  4016d8:	stur	x1, [x29, #-16]
  4016dc:	str	x8, [sp, #16]
  4016e0:	str	x9, [sp, #8]
  4016e4:	ldur	w8, [x29, #-8]
  4016e8:	cmp	w8, #0x0
  4016ec:	cset	w8, ge  // ge = tcont
  4016f0:	mov	w9, #0x1                   	// #1
  4016f4:	eor	w8, w8, #0x1
  4016f8:	eor	w8, w8, w9
  4016fc:	eor	w8, w8, w9
  401700:	and	w8, w8, #0x1
  401704:	mov	w0, w8
  401708:	sxtw	x10, w0
  40170c:	cbz	x10, 401730 <parse_argv+0x7c>
  401710:	mov	w8, wzr
  401714:	mov	w0, w8
  401718:	adrp	x1, 401000 <colors_enabled@plt>
  40171c:	add	x1, x1, #0xc35
  401720:	ldr	x2, [sp, #16]
  401724:	mov	w3, #0x36                  	// #54
  401728:	ldr	x4, [sp, #8]
  40172c:	bl	400f80 <log_assert_failed_realm@plt>
  401730:	ldur	x8, [x29, #-16]
  401734:	cmp	x8, #0x0
  401738:	cset	w9, ne  // ne = any
  40173c:	mov	w10, #0x1                   	// #1
  401740:	eor	w9, w9, #0x1
  401744:	eor	w9, w9, w10
  401748:	eor	w9, w9, w10
  40174c:	and	w9, w9, #0x1
  401750:	mov	w0, w9
  401754:	sxtw	x8, w0
  401758:	cbz	x8, 40177c <parse_argv+0xc8>
  40175c:	mov	w8, wzr
  401760:	mov	w0, w8
  401764:	adrp	x1, 401000 <colors_enabled@plt>
  401768:	add	x1, x1, #0xc5c
  40176c:	ldr	x2, [sp, #16]
  401770:	mov	w3, #0x37                  	// #55
  401774:	ldr	x4, [sp, #8]
  401778:	bl	400f80 <log_assert_failed_realm@plt>
  40177c:	ldur	w0, [x29, #-8]
  401780:	ldur	x1, [x29, #-16]
  401784:	adrp	x2, 401000 <colors_enabled@plt>
  401788:	add	x2, x2, #0xc61
  40178c:	adrp	x3, 401000 <colors_enabled@plt>
  401790:	add	x3, x3, #0xab0
  401794:	mov	x8, xzr
  401798:	mov	x4, x8
  40179c:	bl	400f90 <getopt_long@plt>
  4017a0:	stur	w0, [x29, #-20]
  4017a4:	cmp	w0, #0x0
  4017a8:	cset	w9, lt  // lt = tstop
  4017ac:	tbnz	w9, #0, 401828 <parse_argv+0x174>
  4017b0:	ldur	w8, [x29, #-20]
  4017b4:	cmp	w8, #0x3f
  4017b8:	str	w8, [sp, #4]
  4017bc:	b.eq	4017fc <parse_argv+0x148>  // b.none
  4017c0:	b	4017c4 <parse_argv+0x110>
  4017c4:	ldr	w8, [sp, #4]
  4017c8:	cmp	w8, #0x68
  4017cc:	b.eq	4017e4 <parse_argv+0x130>  // b.none
  4017d0:	b	4017d4 <parse_argv+0x120>
  4017d4:	ldr	w8, [sp, #4]
  4017d8:	cmp	w8, #0x101
  4017dc:	b.eq	4017f0 <parse_argv+0x13c>  // b.none
  4017e0:	b	401808 <parse_argv+0x154>
  4017e4:	bl	401840 <help>
  4017e8:	stur	wzr, [x29, #-4]
  4017ec:	b	401830 <parse_argv+0x17c>
  4017f0:	bl	400fa0 <version@plt>
  4017f4:	stur	w0, [x29, #-4]
  4017f8:	b	401830 <parse_argv+0x17c>
  4017fc:	mov	w8, #0xffffffea            	// #-22
  401800:	stur	w8, [x29, #-4]
  401804:	b	401830 <parse_argv+0x17c>
  401808:	mov	w8, wzr
  40180c:	mov	w0, w8
  401810:	adrp	x1, 401000 <colors_enabled@plt>
  401814:	add	x1, x1, #0xc63
  401818:	ldr	x2, [sp, #16]
  40181c:	mov	w3, #0x47                  	// #71
  401820:	ldr	x4, [sp, #8]
  401824:	bl	400fb0 <log_assert_failed_unreachable_realm@plt>
  401828:	mov	w8, #0x1                   	// #1
  40182c:	stur	w8, [x29, #-4]
  401830:	ldur	w0, [x29, #-4]
  401834:	ldp	x29, x30, [sp, #48]
  401838:	add	sp, sp, #0x40
  40183c:	ret

0000000000401840 <help>:
  401840:	sub	sp, sp, #0x50
  401844:	stp	x29, x30, [sp, #64]
  401848:	add	x29, sp, #0x40
  40184c:	mov	x8, xzr
  401850:	adrp	x0, 401000 <colors_enabled@plt>
  401854:	add	x0, x0, #0xc72
  401858:	adrp	x1, 401000 <colors_enabled@plt>
  40185c:	add	x1, x1, #0xc99
  401860:	adrp	x9, 401000 <colors_enabled@plt>
  401864:	add	x9, x9, #0xb10
  401868:	add	x9, x9, #0x3
  40186c:	sub	x2, x29, #0x10
  401870:	stur	x8, [x29, #-16]
  401874:	str	x9, [sp, #32]
  401878:	bl	400fc0 <terminal_urlify_man@plt>
  40187c:	stur	w0, [x29, #-20]
  401880:	ldur	w10, [x29, #-20]
  401884:	cmp	w10, #0x0
  401888:	cset	w10, ge  // ge = tcont
  40188c:	tbnz	w10, #0, 4018bc <help+0x7c>
  401890:	mov	w8, wzr
  401894:	mov	w0, w8
  401898:	ldr	x1, [sp, #32]
  40189c:	mov	w2, #0x18                  	// #24
  4018a0:	adrp	x3, 401000 <colors_enabled@plt>
  4018a4:	add	x3, x3, #0xc28
  4018a8:	bl	400fd0 <log_oom_internal@plt>
  4018ac:	stur	w0, [x29, #-4]
  4018b0:	mov	w8, #0x1                   	// #1
  4018b4:	stur	w8, [x29, #-24]
  4018b8:	b	401908 <help+0xc8>
  4018bc:	adrp	x8, 420000 <completed.8445>
  4018c0:	add	x8, x8, #0x18
  4018c4:	ldr	x1, [x8]
  4018c8:	str	x1, [sp, #24]
  4018cc:	bl	401948 <ansi_highlight>
  4018d0:	str	x0, [sp, #16]
  4018d4:	bl	40198c <ansi_normal>
  4018d8:	ldur	x4, [x29, #-16]
  4018dc:	adrp	x8, 401000 <colors_enabled@plt>
  4018e0:	add	x8, x8, #0xc9b
  4018e4:	str	x0, [sp, #8]
  4018e8:	mov	x0, x8
  4018ec:	ldr	x1, [sp, #24]
  4018f0:	ldr	x2, [sp, #16]
  4018f4:	ldr	x3, [sp, #8]
  4018f8:	bl	400fe0 <printf@plt>
  4018fc:	stur	wzr, [x29, #-4]
  401900:	mov	w9, #0x1                   	// #1
  401904:	stur	w9, [x29, #-24]
  401908:	sub	x0, x29, #0x10
  40190c:	bl	401920 <freep>
  401910:	ldur	w0, [x29, #-4]
  401914:	ldp	x29, x30, [sp, #64]
  401918:	add	sp, sp, #0x50
  40191c:	ret

0000000000401920 <freep>:
  401920:	sub	sp, sp, #0x20
  401924:	stp	x29, x30, [sp, #16]
  401928:	add	x29, sp, #0x10
  40192c:	str	x0, [sp, #8]
  401930:	ldr	x8, [sp, #8]
  401934:	ldr	x0, [x8]
  401938:	bl	400ff0 <free@plt>
  40193c:	ldp	x29, x30, [sp, #16]
  401940:	add	sp, sp, #0x20
  401944:	ret

0000000000401948 <ansi_highlight>:
  401948:	sub	sp, sp, #0x20
  40194c:	stp	x29, x30, [sp, #16]
  401950:	add	x29, sp, #0x10
  401954:	adrp	x8, 401000 <colors_enabled@plt>
  401958:	add	x8, x8, #0xd33
  40195c:	adrp	x9, 401000 <colors_enabled@plt>
  401960:	add	x9, x9, #0xd3d
  401964:	str	x8, [sp, #8]
  401968:	str	x9, [sp]
  40196c:	bl	401000 <colors_enabled@plt>
  401970:	tst	w0, #0x1
  401974:	ldr	x8, [sp, #8]
  401978:	ldr	x9, [sp]
  40197c:	csel	x0, x8, x9, ne  // ne = any
  401980:	ldp	x29, x30, [sp, #16]
  401984:	add	sp, sp, #0x20
  401988:	ret

000000000040198c <ansi_normal>:
  40198c:	sub	sp, sp, #0x20
  401990:	stp	x29, x30, [sp, #16]
  401994:	add	x29, sp, #0x10
  401998:	adrp	x8, 401000 <colors_enabled@plt>
  40199c:	add	x8, x8, #0xd3e
  4019a0:	adrp	x9, 401000 <colors_enabled@plt>
  4019a4:	add	x9, x9, #0xd3d
  4019a8:	str	x8, [sp, #8]
  4019ac:	str	x9, [sp]
  4019b0:	bl	401000 <colors_enabled@plt>
  4019b4:	tst	w0, #0x1
  4019b8:	ldr	x8, [sp, #8]
  4019bc:	ldr	x9, [sp]
  4019c0:	csel	x0, x8, x9, ne  // ne = any
  4019c4:	ldp	x29, x30, [sp, #16]
  4019c8:	add	sp, sp, #0x20
  4019cc:	ret

00000000004019d0 <ALIGN_TO>:
  4019d0:	sub	sp, sp, #0x10
  4019d4:	str	x0, [sp, #8]
  4019d8:	str	x1, [sp]
  4019dc:	ldr	x8, [sp, #8]
  4019e0:	ldr	x9, [sp]
  4019e4:	add	x8, x8, x9
  4019e8:	subs	x8, x8, #0x1
  4019ec:	ldr	x9, [sp]
  4019f0:	subs	x9, x9, #0x1
  4019f4:	bic	x0, x8, x9
  4019f8:	add	sp, sp, #0x10
  4019fc:	ret

0000000000401a00 <__libc_csu_init>:
  401a00:	stp	x29, x30, [sp, #-64]!
  401a04:	mov	x29, sp
  401a08:	stp	x19, x20, [sp, #16]
  401a0c:	adrp	x20, 41f000 <__FRAME_END__+0x1d1c8>
  401a10:	add	x20, x20, #0xcd8
  401a14:	stp	x21, x22, [sp, #32]
  401a18:	adrp	x21, 41f000 <__FRAME_END__+0x1d1c8>
  401a1c:	add	x21, x21, #0xcd0
  401a20:	sub	x20, x20, x21
  401a24:	mov	w22, w0
  401a28:	stp	x23, x24, [sp, #48]
  401a2c:	mov	x23, x1
  401a30:	mov	x24, x2
  401a34:	bl	400e38 <_init>
  401a38:	cmp	xzr, x20, asr #3
  401a3c:	b.eq	401a68 <__libc_csu_init+0x68>  // b.none
  401a40:	asr	x20, x20, #3
  401a44:	mov	x19, #0x0                   	// #0
  401a48:	ldr	x3, [x21, x19, lsl #3]
  401a4c:	mov	x2, x24
  401a50:	add	x19, x19, #0x1
  401a54:	mov	x1, x23
  401a58:	mov	w0, w22
  401a5c:	blr	x3
  401a60:	cmp	x20, x19
  401a64:	b.ne	401a48 <__libc_csu_init+0x48>  // b.any
  401a68:	ldp	x19, x20, [sp, #16]
  401a6c:	ldp	x21, x22, [sp, #32]
  401a70:	ldp	x23, x24, [sp, #48]
  401a74:	ldp	x29, x30, [sp], #64
  401a78:	ret
  401a7c:	nop

0000000000401a80 <__libc_csu_fini>:
  401a80:	ret

Disassembly of section .fini:

0000000000401a84 <_fini>:
  401a84:	stp	x29, x30, [sp, #-16]!
  401a88:	mov	x29, sp
  401a8c:	ldp	x29, x30, [sp], #16
  401a90:	ret
