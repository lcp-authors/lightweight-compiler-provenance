
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcc1.so.0.0.0_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000051c0 <.init>:
    51c0:	stp	x29, x30, [sp, #-16]!
    51c4:	mov	x29, sp
    51c8:	bl	57a0 <_ZNSt6localeC1Ev@plt+0x10>
    51cc:	ldp	x29, x30, [sp], #16
    51d0:	ret

Disassembly of section .plt:

00000000000051e0 <_Znam@plt-0x20>:
    51e0:	stp	x16, x30, [sp, #-16]!
    51e4:	adrp	x16, 2c000 <xexit@@Base+0x151a0>
    51e8:	ldr	x17, [x16, #4088]
    51ec:	add	x16, x16, #0xff8
    51f0:	br	x17
    51f4:	nop
    51f8:	nop
    51fc:	nop

0000000000005200 <_Znam@plt>:
    5200:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5204:	ldr	x17, [x16]
    5208:	add	x16, x16, #0x0
    520c:	br	x17

0000000000005210 <memcpy@plt>:
    5210:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5214:	ldr	x17, [x16, #8]
    5218:	add	x16, x16, #0x8
    521c:	br	x17

0000000000005220 <select@plt>:
    5220:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5224:	ldr	x17, [x16, #16]
    5228:	add	x16, x16, #0x10
    522c:	br	x17

0000000000005230 <xregcomp@plt>:
    5230:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5234:	ldr	x17, [x16, #24]
    5238:	add	x16, x16, #0x18
    523c:	br	x17

0000000000005240 <execvp@plt>:
    5240:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5244:	ldr	x17, [x16, #32]
    5248:	add	x16, x16, #0x20
    524c:	br	x17

0000000000005250 <socketpair@plt>:
    5250:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5254:	ldr	x17, [x16, #40]
    5258:	add	x16, x16, #0x28
    525c:	br	x17

0000000000005260 <calloc@plt>:
    5260:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5264:	ldr	x17, [x16, #48]
    5268:	add	x16, x16, #0x30
    526c:	br	x17

0000000000005270 <pipe@plt>:
    5270:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5274:	ldr	x17, [x16, #56]
    5278:	add	x16, x16, #0x38
    527c:	br	x17

0000000000005280 <dup2@plt>:
    5280:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5284:	ldr	x17, [x16, #64]
    5288:	add	x16, x16, #0x40
    528c:	br	x17

0000000000005290 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>:
    5290:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5294:	ldr	x17, [x16, #72]
    5298:	add	x16, x16, #0x48
    529c:	br	x17

00000000000052a0 <xre_compile_fastmap@plt>:
    52a0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    52a4:	ldr	x17, [x16, #80]
    52a8:	add	x16, x16, #0x50
    52ac:	br	x17

00000000000052b0 <_ZNSt8ios_baseC2Ev@plt>:
    52b0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    52b4:	ldr	x17, [x16, #88]
    52b8:	add	x16, x16, #0x58
    52bc:	br	x17

00000000000052c0 <strlen@plt>:
    52c0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    52c4:	ldr	x17, [x16, #96]
    52c8:	add	x16, x16, #0x60
    52cc:	br	x17

00000000000052d0 <fprintf@plt>:
    52d0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    52d4:	ldr	x17, [x16, #104]
    52d8:	add	x16, x16, #0x68
    52dc:	br	x17

00000000000052e0 <xregfree@plt>:
    52e0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    52e4:	ldr	x17, [x16, #112]
    52e8:	add	x16, x16, #0x70
    52ec:	br	x17

00000000000052f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
    52f0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    52f4:	ldr	x17, [x16, #120]
    52f8:	add	x16, x16, #0x78
    52fc:	br	x17

0000000000005300 <_ZNSt8ios_baseD2Ev@plt>:
    5300:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5304:	ldr	x17, [x16, #128]
    5308:	add	x16, x16, #0x80
    530c:	br	x17

0000000000005310 <waitpid@plt>:
    5310:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5314:	ldr	x17, [x16, #136]
    5318:	add	x16, x16, #0x88
    531c:	br	x17

0000000000005320 <htab_create_alloc@plt>:
    5320:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5324:	ldr	x17, [x16, #144]
    5328:	add	x16, x16, #0x90
    532c:	br	x17

0000000000005330 <__cxa_begin_catch@plt>:
    5330:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5334:	ldr	x17, [x16, #152]
    5338:	add	x16, x16, #0x98
    533c:	br	x17

0000000000005340 <xstrdup@plt>:
    5340:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5344:	ldr	x17, [x16, #160]
    5348:	add	x16, x16, #0xa0
    534c:	br	x17

0000000000005350 <memcmp@plt>:
    5350:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5354:	ldr	x17, [x16, #168]
    5358:	add	x16, x16, #0xa8
    535c:	br	x17

0000000000005360 <_ZSt20__throw_length_errorPKc@plt>:
    5360:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5364:	ldr	x17, [x16, #176]
    5368:	add	x16, x16, #0xb0
    536c:	br	x17

0000000000005370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>:
    5370:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5374:	ldr	x17, [x16, #184]
    5378:	add	x16, x16, #0xb8
    537c:	br	x17

0000000000005380 <free@plt>:
    5380:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5384:	ldr	x17, [x16, #192]
    5388:	add	x16, x16, #0xc0
    538c:	br	x17

0000000000005390 <memset@plt>:
    5390:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5394:	ldr	x17, [x16, #200]
    5398:	add	x16, x16, #0xc8
    539c:	br	x17

00000000000053a0 <__cxa_finalize@plt>:
    53a0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    53a4:	ldr	x17, [x16, #208]
    53a8:	add	x16, x16, #0xd0
    53ac:	br	x17

00000000000053b0 <realloc@plt>:
    53b0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    53b4:	ldr	x17, [x16, #216]
    53b8:	add	x16, x16, #0xd8
    53bc:	br	x17

00000000000053c0 <xregexec@plt>:
    53c0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    53c4:	ldr	x17, [x16, #224]
    53c8:	add	x16, x16, #0xe0
    53cc:	br	x17

00000000000053d0 <_exit@plt>:
    53d0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    53d4:	ldr	x17, [x16, #232]
    53d8:	add	x16, x16, #0xe8
    53dc:	br	x17

00000000000053e0 <htab_find_slot_with_hash@plt>:
    53e0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    53e4:	ldr	x17, [x16, #240]
    53e8:	add	x16, x16, #0xf0
    53ec:	br	x17

00000000000053f0 <htab_create_typed_alloc@plt>:
    53f0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    53f4:	ldr	x17, [x16, #248]
    53f8:	add	x16, x16, #0xf8
    53fc:	br	x17

0000000000005400 <read@plt>:
    5400:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5404:	ldr	x17, [x16, #256]
    5408:	add	x16, x16, #0x100
    540c:	br	x17

0000000000005410 <_ZSt19__throw_logic_errorPKc@plt>:
    5410:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5414:	ldr	x17, [x16, #264]
    5418:	add	x16, x16, #0x108
    541c:	br	x17

0000000000005420 <htab_find@plt>:
    5420:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5424:	ldr	x17, [x16, #272]
    5428:	add	x16, x16, #0x110
    542c:	br	x17

0000000000005430 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>:
    5430:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5434:	ldr	x17, [x16, #280]
    5438:	add	x16, x16, #0x118
    543c:	br	x17

0000000000005440 <closedir@plt>:
    5440:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5444:	ldr	x17, [x16, #288]
    5448:	add	x16, x16, #0x120
    544c:	br	x17

0000000000005450 <concat@plt>:
    5450:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5454:	ldr	x17, [x16, #296]
    5458:	add	x16, x16, #0x128
    545c:	br	x17

0000000000005460 <xmalloc_failed@plt>:
    5460:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5464:	ldr	x17, [x16, #304]
    5468:	add	x16, x16, #0x130
    546c:	br	x17

0000000000005470 <htab_hash_string@plt>:
    5470:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5474:	ldr	x17, [x16, #312]
    5478:	add	x16, x16, #0x138
    547c:	br	x17

0000000000005480 <_ZdlPv@plt>:
    5480:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5484:	ldr	x17, [x16, #320]
    5488:	add	x16, x16, #0x140
    548c:	br	x17

0000000000005490 <_Znwm@plt>:
    5490:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5494:	ldr	x17, [x16, #328]
    5498:	add	x16, x16, #0x148
    549c:	br	x17

00000000000054a0 <_ZdlPvm@plt>:
    54a0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    54a4:	ldr	x17, [x16, #336]
    54a8:	add	x16, x16, #0x150
    54ac:	br	x17

00000000000054b0 <readdir@plt>:
    54b0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    54b4:	ldr	x17, [x16, #344]
    54b8:	add	x16, x16, #0x158
    54bc:	br	x17

00000000000054c0 <opendir@plt>:
    54c0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    54c4:	ldr	x17, [x16, #352]
    54c8:	add	x16, x16, #0x160
    54cc:	br	x17

00000000000054d0 <__ctype_b_loc@plt>:
    54d0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    54d4:	ldr	x17, [x16, #360]
    54d8:	add	x16, x16, #0x168
    54dc:	br	x17

00000000000054e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
    54e0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    54e4:	ldr	x17, [x16, #368]
    54e8:	add	x16, x16, #0x170
    54ec:	br	x17

00000000000054f0 <snprintf@plt>:
    54f0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    54f4:	ldr	x17, [x16, #376]
    54f8:	add	x16, x16, #0x178
    54fc:	br	x17

0000000000005500 <xre_search@plt>:
    5500:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5504:	ldr	x17, [x16, #384]
    5508:	add	x16, x16, #0x180
    550c:	br	x17

0000000000005510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    5510:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5514:	ldr	x17, [x16, #392]
    5518:	add	x16, x16, #0x188
    551c:	br	x17

0000000000005520 <sbrk@plt>:
    5520:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5524:	ldr	x17, [x16, #400]
    5528:	add	x16, x16, #0x190
    552c:	br	x17

0000000000005530 <htab_remove_elt_with_hash@plt>:
    5530:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5534:	ldr	x17, [x16, #408]
    5538:	add	x16, x16, #0x198
    553c:	br	x17

0000000000005540 <htab_find_slot@plt>:
    5540:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5544:	ldr	x17, [x16, #416]
    5548:	add	x16, x16, #0x1a0
    554c:	br	x17

0000000000005550 <memmove@plt>:
    5550:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5554:	ldr	x17, [x16, #424]
    5558:	add	x16, x16, #0x1a8
    555c:	br	x17

0000000000005560 <_ZdaPv@plt>:
    5560:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5564:	ldr	x17, [x16, #432]
    5568:	add	x16, x16, #0x1b0
    556c:	br	x17

0000000000005570 <__errno_location@plt>:
    5570:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5574:	ldr	x17, [x16, #440]
    5578:	add	x16, x16, #0x1b8
    557c:	br	x17

0000000000005580 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>:
    5580:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5584:	ldr	x17, [x16, #448]
    5588:	add	x16, x16, #0x1c0
    558c:	br	x17

0000000000005590 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>:
    5590:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5594:	ldr	x17, [x16, #456]
    5598:	add	x16, x16, #0x1c8
    559c:	br	x17

00000000000055a0 <__ctype_tolower_loc@plt>:
    55a0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    55a4:	ldr	x17, [x16, #464]
    55a8:	add	x16, x16, #0x1d0
    55ac:	br	x17

00000000000055b0 <htab_traverse_noresize@plt>:
    55b0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    55b4:	ldr	x17, [x16, #472]
    55b8:	add	x16, x16, #0x1d8
    55bc:	br	x17

00000000000055c0 <xmalloc@plt>:
    55c0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    55c4:	ldr	x17, [x16, #480]
    55c8:	add	x16, x16, #0x1e0
    55cc:	br	x17

00000000000055d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@plt>:
    55d0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    55d4:	ldr	x17, [x16, #488]
    55d8:	add	x16, x16, #0x1e8
    55dc:	br	x17

00000000000055e0 <fork@plt>:
    55e0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    55e4:	ldr	x17, [x16, #496]
    55e8:	add	x16, x16, #0x1f0
    55ec:	br	x17

00000000000055f0 <_ZNSt6localeD1Ev@plt>:
    55f0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    55f4:	ldr	x17, [x16, #504]
    55f8:	add	x16, x16, #0x1f8
    55fc:	br	x17

0000000000005600 <__cxa_throw_bad_array_new_length@plt>:
    5600:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5604:	ldr	x17, [x16, #512]
    5608:	add	x16, x16, #0x200
    560c:	br	x17

0000000000005610 <close@plt>:
    5610:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5614:	ldr	x17, [x16, #520]
    5618:	add	x16, x16, #0x208
    561c:	br	x17

0000000000005620 <strcmp@plt>:
    5620:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5624:	ldr	x17, [x16, #528]
    5628:	add	x16, x16, #0x210
    562c:	br	x17

0000000000005630 <__cxa_rethrow@plt>:
    5630:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5634:	ldr	x17, [x16, #536]
    5638:	add	x16, x16, #0x218
    563c:	br	x17

0000000000005640 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    5640:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5644:	ldr	x17, [x16, #544]
    5648:	add	x16, x16, #0x220
    564c:	br	x17

0000000000005650 <write@plt>:
    5650:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5654:	ldr	x17, [x16, #552]
    5658:	add	x16, x16, #0x228
    565c:	br	x17

0000000000005660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
    5660:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5664:	ldr	x17, [x16, #560]
    5668:	add	x16, x16, #0x230
    566c:	br	x17

0000000000005670 <malloc@plt>:
    5670:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5674:	ldr	x17, [x16, #568]
    5678:	add	x16, x16, #0x238
    567c:	br	x17

0000000000005680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    5680:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5684:	ldr	x17, [x16, #576]
    5688:	add	x16, x16, #0x240
    568c:	br	x17

0000000000005690 <xexit@plt>:
    5690:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5694:	ldr	x17, [x16, #584]
    5698:	add	x16, x16, #0x248
    569c:	br	x17

00000000000056a0 <abort@plt>:
    56a0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    56a4:	ldr	x17, [x16, #592]
    56a8:	add	x16, x16, #0x250
    56ac:	br	x17

00000000000056b0 <getenv@plt>:
    56b0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    56b4:	ldr	x17, [x16, #600]
    56b8:	add	x16, x16, #0x258
    56bc:	br	x17

00000000000056c0 <__cxa_end_catch@plt>:
    56c0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    56c4:	ldr	x17, [x16, #608]
    56c8:	add	x16, x16, #0x260
    56cc:	br	x17

00000000000056d0 <_ZnamRKSt9nothrow_t@plt>:
    56d0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    56d4:	ldr	x17, [x16, #616]
    56d8:	add	x16, x16, #0x268
    56dc:	br	x17

00000000000056e0 <__gxx_personality_v0@plt>:
    56e0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    56e4:	ldr	x17, [x16, #624]
    56e8:	add	x16, x16, #0x270
    56ec:	br	x17

00000000000056f0 <htab_find_with_hash@plt>:
    56f0:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    56f4:	ldr	x17, [x16, #632]
    56f8:	add	x16, x16, #0x278
    56fc:	br	x17

0000000000005700 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>:
    5700:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5704:	ldr	x17, [x16, #640]
    5708:	add	x16, x16, #0x280
    570c:	br	x17

0000000000005710 <xregerror@plt>:
    5710:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5714:	ldr	x17, [x16, #648]
    5718:	add	x16, x16, #0x288
    571c:	br	x17

0000000000005720 <exit@plt>:
    5720:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5724:	ldr	x17, [x16, #656]
    5728:	add	x16, x16, #0x290
    572c:	br	x17

0000000000005730 <htab_delete@plt>:
    5730:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5734:	ldr	x17, [x16, #664]
    5738:	add	x16, x16, #0x298
    573c:	br	x17

0000000000005740 <_Unwind_Resume@plt>:
    5740:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5744:	ldr	x17, [x16, #672]
    5748:	add	x16, x16, #0x2a0
    574c:	br	x17

0000000000005750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    5750:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5754:	ldr	x17, [x16, #680]
    5758:	add	x16, x16, #0x2a8
    575c:	br	x17

0000000000005760 <xre_search_2@plt>:
    5760:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5764:	ldr	x17, [x16, #688]
    5768:	add	x16, x16, #0x2b0
    576c:	br	x17

0000000000005770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>:
    5770:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5774:	ldr	x17, [x16, #696]
    5778:	add	x16, x16, #0x2b8
    577c:	br	x17

0000000000005780 <__gmon_start__@plt>:
    5780:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5784:	ldr	x17, [x16, #704]
    5788:	add	x16, x16, #0x2c0
    578c:	br	x17

0000000000005790 <_ZNSt6localeC1Ev@plt>:
    5790:	adrp	x16, 2d000 <_Znam@GLIBCXX_3.4>
    5794:	ldr	x17, [x16, #712]
    5798:	add	x16, x16, #0x2c8
    579c:	br	x17

Disassembly of section .text:

00000000000057a0 <gcc_c_fe_context@@Base-0x10d8>:
    57a0:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    57a4:	ldr	x0, [x0, #3960]
    57a8:	cbz	x0, 57b0 <_ZNSt6localeC1Ev@plt+0x20>
    57ac:	b	5780 <__gmon_start__@plt>
    57b0:	ret
    57b4:	nop
    57b8:	adrp	x0, 2d000 <xexit@@Base+0x161a0>
    57bc:	add	x0, x0, #0x5e8
    57c0:	adrp	x1, 2d000 <xexit@@Base+0x161a0>
    57c4:	add	x1, x1, #0x5e8
    57c8:	cmp	x1, x0
    57cc:	b.eq	57e4 <_ZNSt6localeC1Ev@plt+0x54>  // b.none
    57d0:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    57d4:	ldr	x1, [x1, #3904]
    57d8:	cbz	x1, 57e4 <_ZNSt6localeC1Ev@plt+0x54>
    57dc:	mov	x16, x1
    57e0:	br	x16
    57e4:	ret
    57e8:	adrp	x0, 2d000 <xexit@@Base+0x161a0>
    57ec:	add	x0, x0, #0x5e8
    57f0:	adrp	x1, 2d000 <xexit@@Base+0x161a0>
    57f4:	add	x1, x1, #0x5e8
    57f8:	sub	x1, x1, x0
    57fc:	lsr	x2, x1, #63
    5800:	add	x1, x2, x1, asr #3
    5804:	cmp	xzr, x1, asr #1
    5808:	asr	x1, x1, #1
    580c:	b.eq	5824 <_ZNSt6localeC1Ev@plt+0x94>  // b.none
    5810:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    5814:	ldr	x2, [x2, #3992]
    5818:	cbz	x2, 5824 <_ZNSt6localeC1Ev@plt+0x94>
    581c:	mov	x16, x2
    5820:	br	x16
    5824:	ret
    5828:	stp	x29, x30, [sp, #-32]!
    582c:	mov	x29, sp
    5830:	str	x19, [sp, #16]
    5834:	adrp	x19, 2d000 <xexit@@Base+0x161a0>
    5838:	ldrb	w0, [x19, #1520]
    583c:	cbnz	w0, 5864 <_ZNSt6localeC1Ev@plt+0xd4>
    5840:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    5844:	ldr	x0, [x0, #3408]
    5848:	cbz	x0, 5858 <_ZNSt6localeC1Ev@plt+0xc8>
    584c:	adrp	x0, 2d000 <xexit@@Base+0x161a0>
    5850:	ldr	x0, [x0, #720]
    5854:	bl	53a0 <__cxa_finalize@plt>
    5858:	bl	57b8 <_ZNSt6localeC1Ev@plt+0x28>
    585c:	mov	w0, #0x1                   	// #1
    5860:	strb	w0, [x19, #1520]
    5864:	ldr	x19, [sp, #16]
    5868:	ldp	x29, x30, [sp], #32
    586c:	ret
    5870:	b	57e8 <_ZNSt6localeC1Ev@plt+0x58>
    5874:	nop
    5878:	stp	x29, x30, [sp, #-240]!
    587c:	mov	x29, sp
    5880:	stp	x19, x20, [sp, #16]
    5884:	stp	x23, x24, [sp, #48]
    5888:	mov	x24, x0
    588c:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5890:	add	x0, x0, #0xea0
    5894:	stp	x25, x26, [sp, #64]
    5898:	mov	x26, x1
    589c:	bl	56b0 <getenv@plt>
    58a0:	cbz	x0, 5e50 <_ZNSt6localeC1Ev@plt+0x6c0>
    58a4:	add	x23, sp, #0xc8
    58a8:	mov	x20, x0
    58ac:	stp	x21, x22, [sp, #32]
    58b0:	add	x21, x23, #0x10
    58b4:	stp	x27, x28, [sp, #80]
    58b8:	str	x21, [sp, #200]
    58bc:	bl	52c0 <strlen@plt>
    58c0:	str	x0, [sp, #168]
    58c4:	mov	x19, x0
    58c8:	cmp	x0, #0xf
    58cc:	b.hi	5bb0 <_ZNSt6localeC1Ev@plt+0x420>  // b.pmore
    58d0:	cmp	x0, #0x1
    58d4:	b.ne	5e6c <_ZNSt6localeC1Ev@plt+0x6dc>  // b.any
    58d8:	ldrb	w1, [x20]
    58dc:	mov	x0, x21
    58e0:	strb	w1, [sp, #216]
    58e4:	add	x27, sp, #0x88
    58e8:	add	x28, sp, #0xa8
    58ec:	str	x19, [sp, #208]
    58f0:	add	x22, x27, #0x10
    58f4:	add	x25, x28, #0x10
    58f8:	add	x21, sp, #0x68
    58fc:	strb	wzr, [x0, x19]
    5900:	mov	x19, #0x0                   	// #0
    5904:	str	xzr, [sp, #232]
    5908:	mov	w1, #0x3a                  	// #58
    590c:	mov	x2, x19
    5910:	mov	x0, x23
    5914:	bl	5580 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>
    5918:	add	x1, x21, #0x10
    591c:	stp	x1, xzr, [sp, #104]
    5920:	cmn	x0, #0x1
    5924:	strb	wzr, [sp, #120]
    5928:	b.eq	5c50 <_ZNSt6localeC1Ev@plt+0x4c0>  // b.none
    592c:	ldr	x20, [sp, #208]
    5930:	add	x1, x0, #0x1
    5934:	str	x1, [sp, #232]
    5938:	sub	x0, x0, x19
    593c:	cmp	x20, x19
    5940:	b.cc	5f3c <_ZNSt6localeC1Ev@plt+0x7ac>  // b.lo, b.ul, b.last
    5944:	ldr	x2, [sp, #200]
    5948:	sub	x20, x20, x19
    594c:	cmp	x20, x0
    5950:	str	x22, [sp, #136]
    5954:	add	x19, x2, x19
    5958:	csel	x20, x20, x0, ls  // ls = plast
    595c:	cmn	x19, x20
    5960:	ccmp	x19, #0x0, #0x0, ne  // ne = any
    5964:	b.eq	5f70 <_ZNSt6localeC1Ev@plt+0x7e0>  // b.none
    5968:	str	x20, [sp, #168]
    596c:	cmp	x20, #0xf
    5970:	b.hi	5d78 <_ZNSt6localeC1Ev@plt+0x5e8>  // b.pmore
    5974:	cmp	x20, #0x1
    5978:	b.ne	5d28 <_ZNSt6localeC1Ev@plt+0x598>  // b.any
    597c:	ldrb	w1, [x19]
    5980:	mov	x0, x22
    5984:	strb	w1, [sp, #152]
    5988:	str	x20, [sp, #144]
    598c:	strb	wzr, [x0, x20]
    5990:	ldr	x1, [sp, #136]
    5994:	ldr	x0, [sp, #104]
    5998:	cmp	x1, x22
    599c:	b.eq	5d48 <_ZNSt6localeC1Ev@plt+0x5b8>  // b.none
    59a0:	add	x2, x21, #0x10
    59a4:	cmp	x0, x2
    59a8:	ldp	x3, x2, [sp, #144]
    59ac:	stp	x1, x3, [sp, #104]
    59b0:	b.eq	5dac <_ZNSt6localeC1Ev@plt+0x61c>  // b.none
    59b4:	ldr	x1, [sp, #120]
    59b8:	str	x2, [sp, #120]
    59bc:	cbz	x0, 5db0 <_ZNSt6localeC1Ev@plt+0x620>
    59c0:	str	x0, [sp, #136]
    59c4:	str	x1, [sp, #152]
    59c8:	str	xzr, [sp, #144]
    59cc:	strb	wzr, [x0]
    59d0:	ldr	x0, [sp, #136]
    59d4:	cmp	x0, x22
    59d8:	b.eq	59e0 <_ZNSt6localeC1Ev@plt+0x250>  // b.none
    59dc:	bl	5480 <_ZdlPv@plt>
    59e0:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    59e4:	mov	x0, x21
    59e8:	add	x1, x1, #0xa80
    59ec:	bl	5290 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>
    59f0:	cbz	w0, 5d08 <_ZNSt6localeC1Ev@plt+0x578>
    59f4:	ldr	x0, [sp, #104]
    59f8:	bl	54c0 <opendir@plt>
    59fc:	mov	x19, x0
    5a00:	cbz	x0, 5bec <_ZNSt6localeC1Ev@plt+0x45c>
    5a04:	mov	x0, x19
    5a08:	bl	54b0 <readdir@plt>
    5a0c:	cbz	x0, 5be4 <_ZNSt6localeC1Ev@plt+0x454>
    5a10:	add	x20, x0, #0x13
    5a14:	mov	w4, #0x0                   	// #0
    5a18:	mov	x1, x20
    5a1c:	mov	x0, x24
    5a20:	mov	x3, #0x0                   	// #0
    5a24:	mov	x2, #0x0                   	// #0
    5a28:	bl	53c0 <xregexec@plt>
    5a2c:	cbnz	w0, 5a04 <_ZNSt6localeC1Ev@plt+0x274>
    5a30:	ldp	x25, x22, [sp, #104]
    5a34:	add	x24, sp, #0x88
    5a38:	add	x0, x24, #0x10
    5a3c:	str	x0, [sp, #136]
    5a40:	cmn	x25, x22
    5a44:	ccmp	x25, #0x0, #0x0, ne  // ne = any
    5a48:	b.eq	5f88 <_ZNSt6localeC1Ev@plt+0x7f8>  // b.none
    5a4c:	str	x22, [sp, #168]
    5a50:	cmp	x22, #0xf
    5a54:	b.hi	5e84 <_ZNSt6localeC1Ev@plt+0x6f4>  // b.pmore
    5a58:	cmp	x22, #0x1
    5a5c:	b.ne	5e78 <_ZNSt6localeC1Ev@plt+0x6e8>  // b.any
    5a60:	ldrb	w2, [x25]
    5a64:	mov	x1, x0
    5a68:	strb	w2, [sp, #152]
    5a6c:	str	x22, [sp, #144]
    5a70:	mov	x0, x24
    5a74:	strb	wzr, [x1, x22]
    5a78:	mov	w4, #0x2f                  	// #47
    5a7c:	mov	x3, #0x1                   	// #1
    5a80:	mov	x2, #0x0                   	// #0
    5a84:	ldr	x1, [sp, #144]
    5a88:	bl	5770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>
    5a8c:	mov	x0, x20
    5a90:	bl	52c0 <strlen@plt>
    5a94:	ldr	x3, [sp, #144]
    5a98:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
    5a9c:	mov	x2, x0
    5aa0:	sub	x1, x1, x3
    5aa4:	cmp	x0, x1
    5aa8:	b.hi	5f94 <_ZNSt6localeC1Ev@plt+0x804>  // b.pmore
    5aac:	mov	x1, x20
    5ab0:	mov	x0, x24
    5ab4:	bl	52f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
    5ab8:	mov	x1, x0
    5abc:	add	x20, sp, #0xa8
    5ac0:	add	x2, x20, #0x10
    5ac4:	str	x2, [sp, #168]
    5ac8:	ldr	x2, [x1], #16
    5acc:	cmp	x2, x1
    5ad0:	b.eq	5ef8 <_ZNSt6localeC1Ev@plt+0x768>  // b.none
    5ad4:	str	x2, [sp, #168]
    5ad8:	ldr	x2, [x0, #16]
    5adc:	str	x2, [sp, #184]
    5ae0:	ldr	x2, [x0, #8]
    5ae4:	str	x2, [sp, #176]
    5ae8:	stp	x1, xzr, [x0]
    5aec:	add	x2, x20, #0x10
    5af0:	strb	wzr, [x0, #16]
    5af4:	ldr	x1, [sp, #168]
    5af8:	ldr	x0, [x26]
    5afc:	cmp	x1, x2
    5b00:	b.eq	5ecc <_ZNSt6localeC1Ev@plt+0x73c>  // b.none
    5b04:	add	x2, x26, #0x10
    5b08:	cmp	x0, x2
    5b0c:	ldp	x3, x2, [sp, #176]
    5b10:	stp	x1, x3, [x26]
    5b14:	b.eq	5f04 <_ZNSt6localeC1Ev@plt+0x774>  // b.none
    5b18:	ldr	x1, [x26, #16]
    5b1c:	str	x2, [x26, #16]
    5b20:	cbz	x0, 5f08 <_ZNSt6localeC1Ev@plt+0x778>
    5b24:	str	x0, [sp, #168]
    5b28:	str	x1, [sp, #184]
    5b2c:	str	xzr, [sp, #176]
    5b30:	add	x20, x20, #0x10
    5b34:	strb	wzr, [x0]
    5b38:	ldr	x0, [sp, #168]
    5b3c:	cmp	x0, x20
    5b40:	b.eq	5b48 <_ZNSt6localeC1Ev@plt+0x3b8>  // b.none
    5b44:	bl	5480 <_ZdlPv@plt>
    5b48:	ldr	x0, [sp, #136]
    5b4c:	add	x24, x24, #0x10
    5b50:	cmp	x0, x24
    5b54:	b.eq	5b5c <_ZNSt6localeC1Ev@plt+0x3cc>  // b.none
    5b58:	bl	5480 <_ZdlPv@plt>
    5b5c:	mov	x0, x19
    5b60:	bl	5440 <closedir@plt>
    5b64:	ldr	x0, [sp, #104]
    5b68:	add	x21, x21, #0x10
    5b6c:	cmp	x0, x21
    5b70:	b.eq	5b78 <_ZNSt6localeC1Ev@plt+0x3e8>  // b.none
    5b74:	bl	5480 <_ZdlPv@plt>
    5b78:	ldr	x0, [sp, #200]
    5b7c:	add	x23, x23, #0x10
    5b80:	mov	w19, #0x1                   	// #1
    5b84:	cmp	x0, x23
    5b88:	b.eq	5c20 <_ZNSt6localeC1Ev@plt+0x490>  // b.none
    5b8c:	bl	5480 <_ZdlPv@plt>
    5b90:	mov	w0, w19
    5b94:	ldp	x19, x20, [sp, #16]
    5b98:	ldp	x21, x22, [sp, #32]
    5b9c:	ldp	x23, x24, [sp, #48]
    5ba0:	ldp	x25, x26, [sp, #64]
    5ba4:	ldp	x27, x28, [sp, #80]
    5ba8:	ldp	x29, x30, [sp], #240
    5bac:	ret
    5bb0:	add	x1, sp, #0xa8
    5bb4:	mov	x0, x23
    5bb8:	mov	x2, #0x0                   	// #0
    5bbc:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5bc0:	ldr	x1, [sp, #168]
    5bc4:	str	x0, [sp, #200]
    5bc8:	str	x1, [sp, #216]
    5bcc:	mov	x2, x19
    5bd0:	mov	x1, x20
    5bd4:	bl	5210 <memcpy@plt>
    5bd8:	ldr	x19, [sp, #168]
    5bdc:	ldr	x0, [sp, #200]
    5be0:	b	58e4 <_ZNSt6localeC1Ev@plt+0x154>
    5be4:	mov	x0, x19
    5be8:	bl	5440 <closedir@plt>
    5bec:	ldr	x0, [sp, #104]
    5bf0:	add	x1, x21, #0x10
    5bf4:	cmp	x0, x1
    5bf8:	b.eq	5c40 <_ZNSt6localeC1Ev@plt+0x4b0>  // b.none
    5bfc:	bl	5480 <_ZdlPv@plt>
    5c00:	ldr	x19, [sp, #232]
    5c04:	cmn	x19, #0x1
    5c08:	b.ne	5908 <_ZNSt6localeC1Ev@plt+0x178>  // b.any
    5c0c:	ldr	x0, [sp, #200]
    5c10:	add	x23, x23, #0x10
    5c14:	mov	w19, #0x0                   	// #0
    5c18:	cmp	x0, x23
    5c1c:	b.ne	5b8c <_ZNSt6localeC1Ev@plt+0x3fc>  // b.any
    5c20:	mov	w0, w19
    5c24:	ldp	x19, x20, [sp, #16]
    5c28:	ldp	x21, x22, [sp, #32]
    5c2c:	ldp	x23, x24, [sp, #48]
    5c30:	ldp	x25, x26, [sp, #64]
    5c34:	ldp	x27, x28, [sp, #80]
    5c38:	ldp	x29, x30, [sp], #240
    5c3c:	ret
    5c40:	ldr	x19, [sp, #232]
    5c44:	cmn	x19, #0x1
    5c48:	b.ne	5908 <_ZNSt6localeC1Ev@plt+0x178>  // b.any
    5c4c:	b	5c0c <_ZNSt6localeC1Ev@plt+0x47c>
    5c50:	ldr	x3, [sp, #208]
    5c54:	str	x0, [sp, #232]
    5c58:	cmp	x3, x19
    5c5c:	b.cc	5f58 <_ZNSt6localeC1Ev@plt+0x7c8>  // b.lo, b.ul, b.last
    5c60:	ldr	x2, [sp, #200]
    5c64:	str	x25, [sp, #168]
    5c68:	sub	x20, x3, x19
    5c6c:	cmn	x2, x3
    5c70:	add	x19, x2, x19
    5c74:	ccmp	x19, #0x0, #0x0, ne  // ne = any
    5c78:	b.eq	5f7c <_ZNSt6localeC1Ev@plt+0x7ec>  // b.none
    5c7c:	str	x20, [sp, #136]
    5c80:	cmp	x20, #0xf
    5c84:	b.hi	5e0c <_ZNSt6localeC1Ev@plt+0x67c>  // b.pmore
    5c88:	cmp	x20, #0x1
    5c8c:	b.ne	5dbc <_ZNSt6localeC1Ev@plt+0x62c>  // b.any
    5c90:	ldrb	w1, [x19]
    5c94:	mov	x0, x25
    5c98:	strb	w1, [sp, #184]
    5c9c:	str	x20, [sp, #176]
    5ca0:	strb	wzr, [x0, x20]
    5ca4:	ldr	x1, [sp, #168]
    5ca8:	ldr	x0, [sp, #104]
    5cac:	cmp	x1, x25
    5cb0:	b.eq	5ddc <_ZNSt6localeC1Ev@plt+0x64c>  // b.none
    5cb4:	add	x2, x21, #0x10
    5cb8:	cmp	x0, x2
    5cbc:	ldp	x3, x2, [sp, #176]
    5cc0:	stp	x1, x3, [sp, #104]
    5cc4:	b.eq	5e40 <_ZNSt6localeC1Ev@plt+0x6b0>  // b.none
    5cc8:	ldr	x1, [sp, #120]
    5ccc:	str	x2, [sp, #120]
    5cd0:	cbz	x0, 5e44 <_ZNSt6localeC1Ev@plt+0x6b4>
    5cd4:	str	x0, [sp, #168]
    5cd8:	str	x1, [sp, #184]
    5cdc:	str	xzr, [sp, #176]
    5ce0:	strb	wzr, [x0]
    5ce4:	ldr	x0, [sp, #168]
    5ce8:	cmp	x0, x25
    5cec:	b.ne	59dc <_ZNSt6localeC1Ev@plt+0x24c>  // b.any
    5cf0:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    5cf4:	mov	x0, x21
    5cf8:	add	x1, x1, #0xa80
    5cfc:	bl	5290 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>
    5d00:	cbnz	w0, 59f4 <_ZNSt6localeC1Ev@plt+0x264>
    5d04:	nop
    5d08:	ldr	x2, [sp, #112]
    5d0c:	adrp	x3, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5d10:	mov	x0, x21
    5d14:	add	x3, x3, #0xf28
    5d18:	mov	x4, #0x1                   	// #1
    5d1c:	mov	x1, #0x0                   	// #0
    5d20:	bl	5660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    5d24:	b	59f4 <_ZNSt6localeC1Ev@plt+0x264>
    5d28:	mov	x0, x22
    5d2c:	cbnz	x20, 5d94 <_ZNSt6localeC1Ev@plt+0x604>
    5d30:	str	x20, [sp, #144]
    5d34:	strb	wzr, [x0, x20]
    5d38:	ldr	x1, [sp, #136]
    5d3c:	ldr	x0, [sp, #104]
    5d40:	cmp	x1, x22
    5d44:	b.ne	59a0 <_ZNSt6localeC1Ev@plt+0x210>  // b.any
    5d48:	ldr	x2, [sp, #144]
    5d4c:	cbz	x2, 5d68 <_ZNSt6localeC1Ev@plt+0x5d8>
    5d50:	cmp	x2, #0x1
    5d54:	b.eq	5eb8 <_ZNSt6localeC1Ev@plt+0x728>  // b.none
    5d58:	mov	x1, x22
    5d5c:	bl	5210 <memcpy@plt>
    5d60:	ldr	x0, [sp, #104]
    5d64:	ldr	x2, [sp, #144]
    5d68:	str	x2, [sp, #112]
    5d6c:	strb	wzr, [x0, x2]
    5d70:	ldr	x0, [sp, #136]
    5d74:	b	59c8 <_ZNSt6localeC1Ev@plt+0x238>
    5d78:	mov	x1, x28
    5d7c:	mov	x0, x27
    5d80:	mov	x2, #0x0                   	// #0
    5d84:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5d88:	ldr	x1, [sp, #168]
    5d8c:	str	x0, [sp, #136]
    5d90:	str	x1, [sp, #152]
    5d94:	mov	x2, x20
    5d98:	mov	x1, x19
    5d9c:	bl	5210 <memcpy@plt>
    5da0:	ldr	x0, [sp, #136]
    5da4:	ldr	x20, [sp, #168]
    5da8:	b	5988 <_ZNSt6localeC1Ev@plt+0x1f8>
    5dac:	str	x2, [sp, #120]
    5db0:	mov	x0, x22
    5db4:	str	x22, [sp, #136]
    5db8:	b	59c8 <_ZNSt6localeC1Ev@plt+0x238>
    5dbc:	mov	x0, x25
    5dc0:	cbnz	x20, 5e28 <_ZNSt6localeC1Ev@plt+0x698>
    5dc4:	str	x20, [sp, #176]
    5dc8:	strb	wzr, [x0, x20]
    5dcc:	ldr	x1, [sp, #168]
    5dd0:	ldr	x0, [sp, #104]
    5dd4:	cmp	x1, x25
    5dd8:	b.ne	5cb4 <_ZNSt6localeC1Ev@plt+0x524>  // b.any
    5ddc:	ldr	x2, [sp, #176]
    5de0:	cbz	x2, 5dfc <_ZNSt6localeC1Ev@plt+0x66c>
    5de4:	cmp	x2, #0x1
    5de8:	b.eq	5f14 <_ZNSt6localeC1Ev@plt+0x784>  // b.none
    5dec:	mov	x1, x25
    5df0:	bl	5210 <memcpy@plt>
    5df4:	ldr	x0, [sp, #104]
    5df8:	ldr	x2, [sp, #176]
    5dfc:	str	x2, [sp, #112]
    5e00:	strb	wzr, [x0, x2]
    5e04:	ldr	x0, [sp, #168]
    5e08:	b	5cdc <_ZNSt6localeC1Ev@plt+0x54c>
    5e0c:	mov	x1, x27
    5e10:	mov	x0, x28
    5e14:	mov	x2, #0x0                   	// #0
    5e18:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5e1c:	ldr	x1, [sp, #136]
    5e20:	str	x0, [sp, #168]
    5e24:	str	x1, [sp, #184]
    5e28:	mov	x2, x20
    5e2c:	mov	x1, x19
    5e30:	bl	5210 <memcpy@plt>
    5e34:	ldr	x20, [sp, #136]
    5e38:	ldr	x0, [sp, #168]
    5e3c:	b	5c9c <_ZNSt6localeC1Ev@plt+0x50c>
    5e40:	str	x2, [sp, #120]
    5e44:	mov	x0, x25
    5e48:	str	x25, [sp, #168]
    5e4c:	b	5cdc <_ZNSt6localeC1Ev@plt+0x54c>
    5e50:	mov	w19, #0x0                   	// #0
    5e54:	mov	w0, w19
    5e58:	ldp	x19, x20, [sp, #16]
    5e5c:	ldp	x23, x24, [sp, #48]
    5e60:	ldp	x25, x26, [sp, #64]
    5e64:	ldp	x29, x30, [sp], #240
    5e68:	ret
    5e6c:	mov	x0, x21
    5e70:	cbz	x19, 58e4 <_ZNSt6localeC1Ev@plt+0x154>
    5e74:	b	5bcc <_ZNSt6localeC1Ev@plt+0x43c>
    5e78:	mov	x1, x0
    5e7c:	cbz	x22, 5a6c <_ZNSt6localeC1Ev@plt+0x2dc>
    5e80:	b	5ea0 <_ZNSt6localeC1Ev@plt+0x710>
    5e84:	add	x1, sp, #0xa8
    5e88:	mov	x0, x24
    5e8c:	mov	x2, #0x0                   	// #0
    5e90:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5e94:	ldr	x1, [sp, #168]
    5e98:	str	x0, [sp, #136]
    5e9c:	str	x1, [sp, #152]
    5ea0:	mov	x2, x22
    5ea4:	mov	x1, x25
    5ea8:	bl	5210 <memcpy@plt>
    5eac:	ldr	x1, [sp, #136]
    5eb0:	ldr	x22, [sp, #168]
    5eb4:	b	5a6c <_ZNSt6localeC1Ev@plt+0x2dc>
    5eb8:	ldrb	w1, [sp, #152]
    5ebc:	strb	w1, [x0]
    5ec0:	ldr	x0, [sp, #104]
    5ec4:	ldr	x2, [sp, #144]
    5ec8:	b	5d68 <_ZNSt6localeC1Ev@plt+0x5d8>
    5ecc:	ldr	x2, [sp, #176]
    5ed0:	cbz	x2, 5ee8 <_ZNSt6localeC1Ev@plt+0x758>
    5ed4:	cmp	x2, #0x1
    5ed8:	b.eq	5f28 <_ZNSt6localeC1Ev@plt+0x798>  // b.none
    5edc:	bl	5210 <memcpy@plt>
    5ee0:	ldr	x0, [x26]
    5ee4:	ldr	x2, [sp, #176]
    5ee8:	str	x2, [x26, #8]
    5eec:	strb	wzr, [x0, x2]
    5ef0:	ldr	x0, [sp, #168]
    5ef4:	b	5b2c <_ZNSt6localeC1Ev@plt+0x39c>
    5ef8:	ldp	x2, x3, [x0, #16]
    5efc:	stp	x2, x3, [sp, #184]
    5f00:	b	5ae0 <_ZNSt6localeC1Ev@plt+0x350>
    5f04:	str	x2, [x26, #16]
    5f08:	add	x0, x20, #0x10
    5f0c:	str	x0, [sp, #168]
    5f10:	b	5b2c <_ZNSt6localeC1Ev@plt+0x39c>
    5f14:	ldrb	w1, [sp, #184]
    5f18:	strb	w1, [x0]
    5f1c:	ldr	x0, [sp, #104]
    5f20:	ldr	x2, [sp, #176]
    5f24:	b	5dfc <_ZNSt6localeC1Ev@plt+0x66c>
    5f28:	ldrb	w1, [sp, #184]
    5f2c:	strb	w1, [x0]
    5f30:	ldr	x0, [x26]
    5f34:	ldr	x2, [sp, #176]
    5f38:	b	5ee8 <_ZNSt6localeC1Ev@plt+0x758>
    5f3c:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5f40:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5f44:	mov	x3, x20
    5f48:	mov	x2, x19
    5f4c:	add	x1, x1, #0xea8
    5f50:	add	x0, x0, #0xec0
    5f54:	bl	5640 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    5f58:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5f5c:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5f60:	mov	x2, x19
    5f64:	add	x1, x1, #0xea8
    5f68:	add	x0, x0, #0xec0
    5f6c:	bl	5640 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    5f70:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5f74:	add	x0, x0, #0xef8
    5f78:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    5f7c:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5f80:	add	x0, x0, #0xef8
    5f84:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    5f88:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5f8c:	add	x0, x0, #0xef8
    5f90:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    5f94:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    5f98:	add	x0, x0, #0xf30
    5f9c:	bl	5360 <_ZSt20__throw_length_errorPKc@plt>
    5fa0:	ldr	x1, [sp, #136]
    5fa4:	add	x24, x24, #0x10
    5fa8:	mov	x20, x0
    5fac:	cmp	x1, x24
    5fb0:	b.eq	5fbc <_ZNSt6localeC1Ev@plt+0x82c>  // b.none
    5fb4:	mov	x0, x1
    5fb8:	bl	5480 <_ZdlPv@plt>
    5fbc:	mov	x1, x20
    5fc0:	mov	x0, x19
    5fc4:	mov	x19, x1
    5fc8:	bl	5440 <closedir@plt>
    5fcc:	ldr	x0, [sp, #104]
    5fd0:	add	x21, x21, #0x10
    5fd4:	cmp	x0, x21
    5fd8:	b.eq	5fe0 <_ZNSt6localeC1Ev@plt+0x850>  // b.none
    5fdc:	bl	5480 <_ZdlPv@plt>
    5fe0:	ldr	x0, [sp, #200]
    5fe4:	add	x23, x23, #0x10
    5fe8:	cmp	x0, x23
    5fec:	b.eq	5ff4 <_ZNSt6localeC1Ev@plt+0x864>  // b.none
    5ff0:	bl	5480 <_ZdlPv@plt>
    5ff4:	mov	x0, x19
    5ff8:	bl	5740 <_Unwind_Resume@plt>
    5ffc:	ldr	x1, [sp, #104]
    6000:	add	x21, x21, #0x10
    6004:	mov	x19, x0
    6008:	cmp	x1, x21
    600c:	b.eq	5fe0 <_ZNSt6localeC1Ev@plt+0x850>  // b.none
    6010:	mov	x0, x1
    6014:	bl	5480 <_ZdlPv@plt>
    6018:	b	5fe0 <_ZNSt6localeC1Ev@plt+0x850>
    601c:	mov	x1, x0
    6020:	b	5fc0 <_ZNSt6localeC1Ev@plt+0x830>
    6024:	b	5fa0 <_ZNSt6localeC1Ev@plt+0x810>
    6028:	mov	x19, x0
    602c:	b	5fcc <_ZNSt6localeC1Ev@plt+0x83c>
    6030:	stp	x1, x2, [x0, #24]
    6034:	str	x3, [x0, #40]
    6038:	ret
    603c:	nop
    6040:	cmp	w1, #0x0
    6044:	cset	w1, ne  // ne = any
    6048:	strb	w1, [x0, #120]
    604c:	ret
    6050:	stp	x1, x2, [x0, #48]
    6054:	ret
    6058:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    605c:	add	x0, x0, #0xf48
    6060:	b	5340 <xstrdup@plt>
    6064:	nop
    6068:	stp	x29, x30, [sp, #-32]!
    606c:	mov	x29, sp
    6070:	stp	x19, x20, [sp, #16]
    6074:	mov	x19, x0
    6078:	mov	x20, x1
    607c:	mov	x0, x1
    6080:	bl	52c0 <strlen@plt>
    6084:	mov	x3, x20
    6088:	mov	x4, x0
    608c:	add	x0, x19, #0x58
    6090:	mov	x1, #0x0                   	// #0
    6094:	ldr	x2, [x19, #96]
    6098:	ldp	x19, x20, [sp, #16]
    609c:	ldp	x29, x30, [sp], #32
    60a0:	b	5660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    60a4:	nop
    60a8:	stp	x29, x30, [sp, #-32]!
    60ac:	mov	x29, sp
    60b0:	stp	x19, x20, [sp, #16]
    60b4:	mov	x19, x0
    60b8:	mov	x20, x1
    60bc:	ldr	x0, [x0, #8]
    60c0:	ldrb	w0, [x0, #120]
    60c4:	cbnz	w0, 60e4 <_ZNSt6localeC1Ev@plt+0x954>
    60c8:	add	x1, x19, #0x10
    60cc:	mov	x0, x20
    60d0:	bl	5370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    60d4:	mov	x0, #0x0                   	// #0
    60d8:	ldp	x19, x20, [sp, #16]
    60dc:	ldp	x29, x30, [sp], #32
    60e0:	ret
    60e4:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    60e8:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    60ec:	ldr	x2, [x19, #16]
    60f0:	add	x1, x1, #0xf68
    60f4:	ldr	x0, [x0, #3968]
    60f8:	ldr	x0, [x0]
    60fc:	bl	52d0 <fprintf@plt>
    6100:	add	x1, x19, #0x10
    6104:	mov	x0, x20
    6108:	bl	5370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    610c:	mov	x0, #0x0                   	// #0
    6110:	ldp	x19, x20, [sp, #16]
    6114:	ldp	x29, x30, [sp], #32
    6118:	ret
    611c:	nop
    6120:	stp	x29, x30, [sp, #-64]!
    6124:	mov	x1, #0x2                   	// #2
    6128:	mov	x29, sp
    612c:	stp	x19, x20, [sp, #16]
    6130:	mov	x20, x0
    6134:	str	x21, [sp, #32]
    6138:	str	xzr, [sp, #48]
    613c:	bl	f118 <gcc_cp_fe_context@@Base+0x4ea0>
    6140:	mov	w19, w0
    6144:	cbnz	w0, 6168 <_ZNSt6localeC1Ev@plt+0x9d8>
    6148:	ldr	x0, [sp, #48]
    614c:	cbz	x0, 6154 <_ZNSt6localeC1Ev@plt+0x9c4>
    6150:	bl	5560 <_ZdaPv@plt>
    6154:	mov	w0, w19
    6158:	ldp	x19, x20, [sp, #16]
    615c:	ldr	x21, [sp, #32]
    6160:	ldp	x29, x30, [sp], #64
    6164:	ret
    6168:	add	x1, sp, #0x38
    616c:	mov	x0, x20
    6170:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    6174:	mov	w19, w0
    6178:	cbz	w0, 6148 <_ZNSt6localeC1Ev@plt+0x9b8>
    617c:	add	x1, sp, #0x30
    6180:	mov	x0, x20
    6184:	ldr	x21, [sp, #56]
    6188:	bl	f2a0 <gcc_cp_fe_context@@Base+0x5028>
    618c:	mov	w19, w0
    6190:	ldr	x0, [sp, #48]
    6194:	cbz	w19, 614c <_ZNSt6localeC1Ev@plt+0x9bc>
    6198:	ldr	x1, [x20, #24]
    619c:	mov	x3, x0
    61a0:	mov	w2, w21
    61a4:	ldr	x4, [x1, #24]
    61a8:	ldr	x0, [x1, #40]
    61ac:	blr	x4
    61b0:	mov	x0, x20
    61b4:	mov	w1, #0x52                  	// #82
    61b8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    61bc:	mov	w19, w0
    61c0:	cbz	w0, 6148 <_ZNSt6localeC1Ev@plt+0x9b8>
    61c4:	mov	x0, x20
    61c8:	mov	x1, #0x1                   	// #1
    61cc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    61d0:	mov	w19, w0
    61d4:	ldr	x0, [sp, #48]
    61d8:	b	614c <_ZNSt6localeC1Ev@plt+0x9bc>
    61dc:	ldr	x1, [sp, #48]
    61e0:	mov	x19, x0
    61e4:	cbz	x1, 61f0 <_ZNSt6localeC1Ev@plt+0xa60>
    61e8:	mov	x0, x1
    61ec:	bl	5560 <_ZdaPv@plt>
    61f0:	mov	x0, x19
    61f4:	bl	5740 <_Unwind_Resume@plt>
    61f8:	stp	x29, x30, [sp, #-64]!
    61fc:	mov	x1, #0x1                   	// #1
    6200:	mov	x29, sp
    6204:	stp	x19, x20, [sp, #16]
    6208:	mov	x20, x0
    620c:	str	x21, [sp, #32]
    6210:	str	xzr, [sp, #56]
    6214:	bl	f118 <gcc_cp_fe_context@@Base+0x4ea0>
    6218:	mov	w19, w0
    621c:	cbnz	w0, 6240 <_ZNSt6localeC1Ev@plt+0xab0>
    6220:	ldr	x0, [sp, #56]
    6224:	cbz	x0, 622c <_ZNSt6localeC1Ev@plt+0xa9c>
    6228:	bl	5560 <_ZdaPv@plt>
    622c:	mov	w0, w19
    6230:	ldp	x19, x20, [sp, #16]
    6234:	ldr	x21, [sp, #32]
    6238:	ldp	x29, x30, [sp], #64
    623c:	ret
    6240:	add	x1, sp, #0x38
    6244:	mov	x0, x20
    6248:	bl	f2a0 <gcc_cp_fe_context@@Base+0x5028>
    624c:	mov	w19, w0
    6250:	ldr	x0, [sp, #56]
    6254:	cbz	w19, 6224 <_ZNSt6localeC1Ev@plt+0xa94>
    6258:	ldr	x1, [x20, #24]
    625c:	mov	x2, x0
    6260:	ldp	x3, x0, [x1, #32]
    6264:	blr	x3
    6268:	mov	x21, x0
    626c:	mov	w1, #0x52                  	// #82
    6270:	mov	x0, x20
    6274:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    6278:	mov	w19, w0
    627c:	cbz	w0, 6220 <_ZNSt6localeC1Ev@plt+0xa90>
    6280:	mov	x1, x21
    6284:	mov	x0, x20
    6288:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    628c:	mov	w19, w0
    6290:	ldr	x0, [sp, #56]
    6294:	b	6224 <_ZNSt6localeC1Ev@plt+0xa94>
    6298:	ldr	x1, [sp, #56]
    629c:	mov	x19, x0
    62a0:	cbz	x1, 62ac <_ZNSt6localeC1Ev@plt+0xb1c>
    62a4:	mov	x0, x1
    62a8:	bl	5560 <_ZdaPv@plt>
    62ac:	mov	x0, x19
    62b0:	bl	5740 <_Unwind_Resume@plt>
    62b4:	nop
    62b8:	stp	x29, x30, [sp, #-112]!
    62bc:	mov	x29, sp
    62c0:	stp	x21, x22, [sp, #32]
    62c4:	mov	x21, x0
    62c8:	ldr	x0, [x0, #128]
    62cc:	stp	x19, x20, [sp, #16]
    62d0:	mov	x20, x1
    62d4:	str	x23, [sp, #48]
    62d8:	cbz	x0, 62e8 <_ZNSt6localeC1Ev@plt+0xb58>
    62dc:	ldr	x1, [x0]
    62e0:	ldr	x1, [x1, #16]
    62e4:	blr	x1
    62e8:	add	x22, sp, #0x50
    62ec:	add	x23, x22, #0x10
    62f0:	str	x23, [sp, #80]
    62f4:	cbnz	x20, 6304 <_ZNSt6localeC1Ev@plt+0xb74>
    62f8:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    62fc:	add	x0, x0, #0xef8
    6300:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    6304:	mov	x0, x20
    6308:	bl	52c0 <strlen@plt>
    630c:	str	x0, [sp, #72]
    6310:	mov	x19, x0
    6314:	cmp	x0, #0xf
    6318:	b.hi	63d8 <_ZNSt6localeC1Ev@plt+0xc48>  // b.pmore
    631c:	cmp	x19, #0x1
    6320:	b.ne	63c4 <_ZNSt6localeC1Ev@plt+0xc34>  // b.any
    6324:	ldrb	w1, [x20]
    6328:	mov	x0, x23
    632c:	strb	w1, [sp, #96]
    6330:	str	x19, [sp, #88]
    6334:	strb	wzr, [x0, x19]
    6338:	mov	x0, #0x30                  	// #48
    633c:	bl	5490 <_Znwm@plt>
    6340:	mov	x19, x0
    6344:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    6348:	add	x0, x1, #0x440
    634c:	mov	x1, x19
    6350:	ldp	x23, x20, [sp, #80]
    6354:	str	x21, [x19, #8]
    6358:	str	x0, [x1], #16
    635c:	add	x0, x1, #0x10
    6360:	str	x0, [x19, #16]
    6364:	cmn	x23, x20
    6368:	ccmp	x23, #0x0, #0x0, ne  // ne = any
    636c:	b.eq	643c <_ZNSt6localeC1Ev@plt+0xcac>  // b.none
    6370:	str	x20, [sp, #72]
    6374:	cmp	x20, #0xf
    6378:	b.hi	6408 <_ZNSt6localeC1Ev@plt+0xc78>  // b.pmore
    637c:	cmp	x20, #0x1
    6380:	b.ne	63d0 <_ZNSt6localeC1Ev@plt+0xc40>  // b.any
    6384:	ldrb	w1, [x23]
    6388:	strb	w1, [x19, #32]
    638c:	str	x20, [x19, #24]
    6390:	add	x22, x22, #0x10
    6394:	strb	wzr, [x0, x20]
    6398:	str	x19, [x21, #128]
    639c:	ldr	x0, [sp, #80]
    63a0:	cmp	x0, x22
    63a4:	b.eq	63ac <_ZNSt6localeC1Ev@plt+0xc1c>  // b.none
    63a8:	bl	5480 <_ZdlPv@plt>
    63ac:	mov	x0, #0x0                   	// #0
    63b0:	ldp	x19, x20, [sp, #16]
    63b4:	ldp	x21, x22, [sp, #32]
    63b8:	ldr	x23, [sp, #48]
    63bc:	ldp	x29, x30, [sp], #112
    63c0:	ret
    63c4:	mov	x0, x23
    63c8:	cbz	x19, 6330 <_ZNSt6localeC1Ev@plt+0xba0>
    63cc:	b	63f4 <_ZNSt6localeC1Ev@plt+0xc64>
    63d0:	cbz	x20, 638c <_ZNSt6localeC1Ev@plt+0xbfc>
    63d4:	b	6424 <_ZNSt6localeC1Ev@plt+0xc94>
    63d8:	add	x1, sp, #0x48
    63dc:	mov	x0, x22
    63e0:	mov	x2, #0x0                   	// #0
    63e4:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    63e8:	ldr	x1, [sp, #72]
    63ec:	str	x0, [sp, #80]
    63f0:	str	x1, [sp, #96]
    63f4:	mov	x2, x19
    63f8:	mov	x1, x20
    63fc:	bl	5210 <memcpy@plt>
    6400:	ldp	x19, x0, [sp, #72]
    6404:	b	6330 <_ZNSt6localeC1Ev@plt+0xba0>
    6408:	mov	x0, x1
    640c:	mov	x2, #0x0                   	// #0
    6410:	add	x1, sp, #0x48
    6414:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6418:	ldr	x1, [sp, #72]
    641c:	str	x0, [x19, #16]
    6420:	str	x1, [x19, #32]
    6424:	mov	x2, x20
    6428:	mov	x1, x23
    642c:	bl	5210 <memcpy@plt>
    6430:	ldr	x0, [x19, #16]
    6434:	ldr	x20, [sp, #72]
    6438:	b	638c <_ZNSt6localeC1Ev@plt+0xbfc>
    643c:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    6440:	add	x0, x0, #0xef8
    6444:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    6448:	mov	x2, x0
    644c:	mov	x1, #0x30                  	// #48
    6450:	mov	x0, x19
    6454:	mov	x19, x2
    6458:	bl	54a0 <_ZdlPvm@plt>
    645c:	ldr	x0, [sp, #80]
    6460:	add	x22, x22, #0x10
    6464:	cmp	x0, x22
    6468:	b.eq	6470 <_ZNSt6localeC1Ev@plt+0xce0>  // b.none
    646c:	bl	5480 <_ZdlPv@plt>
    6470:	mov	x0, x19
    6474:	bl	5740 <_Unwind_Resume@plt>
    6478:	mov	x19, x0
    647c:	b	645c <_ZNSt6localeC1Ev@plt+0xccc>
    6480:	stp	x29, x30, [sp, #-112]!
    6484:	mov	x29, sp
    6488:	stp	x21, x22, [sp, #32]
    648c:	mov	x21, x0
    6490:	ldr	x0, [x0, #128]
    6494:	stp	x19, x20, [sp, #16]
    6498:	mov	x20, x1
    649c:	str	x23, [sp, #48]
    64a0:	cbz	x0, 64b0 <_ZNSt6localeC1Ev@plt+0xd20>
    64a4:	ldr	x1, [x0]
    64a8:	ldr	x1, [x1, #16]
    64ac:	blr	x1
    64b0:	add	x22, sp, #0x50
    64b4:	add	x23, x22, #0x10
    64b8:	str	x23, [sp, #80]
    64bc:	cbnz	x20, 64cc <_ZNSt6localeC1Ev@plt+0xd3c>
    64c0:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    64c4:	add	x0, x0, #0xef8
    64c8:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    64cc:	mov	x0, x20
    64d0:	bl	52c0 <strlen@plt>
    64d4:	str	x0, [sp, #72]
    64d8:	mov	x19, x0
    64dc:	cmp	x0, #0xf
    64e0:	b.hi	65a0 <_ZNSt6localeC1Ev@plt+0xe10>  // b.pmore
    64e4:	cmp	x19, #0x1
    64e8:	b.ne	658c <_ZNSt6localeC1Ev@plt+0xdfc>  // b.any
    64ec:	ldrb	w1, [x20]
    64f0:	mov	x0, x23
    64f4:	strb	w1, [sp, #96]
    64f8:	str	x19, [sp, #88]
    64fc:	strb	wzr, [x0, x19]
    6500:	mov	x0, #0x30                  	// #48
    6504:	bl	5490 <_Znwm@plt>
    6508:	mov	x19, x0
    650c:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    6510:	add	x0, x1, #0x468
    6514:	mov	x1, x19
    6518:	ldp	x23, x20, [sp, #80]
    651c:	str	x21, [x19, #8]
    6520:	str	x0, [x1], #16
    6524:	add	x0, x1, #0x10
    6528:	str	x0, [x19, #16]
    652c:	cmn	x23, x20
    6530:	ccmp	x23, #0x0, #0x0, ne  // ne = any
    6534:	b.eq	6604 <_ZNSt6localeC1Ev@plt+0xe74>  // b.none
    6538:	str	x20, [sp, #72]
    653c:	cmp	x20, #0xf
    6540:	b.hi	65d0 <_ZNSt6localeC1Ev@plt+0xe40>  // b.pmore
    6544:	cmp	x20, #0x1
    6548:	b.ne	6598 <_ZNSt6localeC1Ev@plt+0xe08>  // b.any
    654c:	ldrb	w1, [x23]
    6550:	strb	w1, [x19, #32]
    6554:	str	x20, [x19, #24]
    6558:	add	x22, x22, #0x10
    655c:	strb	wzr, [x0, x20]
    6560:	str	x19, [x21, #128]
    6564:	ldr	x0, [sp, #80]
    6568:	cmp	x0, x22
    656c:	b.eq	6574 <_ZNSt6localeC1Ev@plt+0xde4>  // b.none
    6570:	bl	5480 <_ZdlPv@plt>
    6574:	mov	x0, #0x0                   	// #0
    6578:	ldp	x19, x20, [sp, #16]
    657c:	ldp	x21, x22, [sp, #32]
    6580:	ldr	x23, [sp, #48]
    6584:	ldp	x29, x30, [sp], #112
    6588:	ret
    658c:	mov	x0, x23
    6590:	cbz	x19, 64f8 <_ZNSt6localeC1Ev@plt+0xd68>
    6594:	b	65bc <_ZNSt6localeC1Ev@plt+0xe2c>
    6598:	cbz	x20, 6554 <_ZNSt6localeC1Ev@plt+0xdc4>
    659c:	b	65ec <_ZNSt6localeC1Ev@plt+0xe5c>
    65a0:	add	x1, sp, #0x48
    65a4:	mov	x0, x22
    65a8:	mov	x2, #0x0                   	// #0
    65ac:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    65b0:	ldr	x1, [sp, #72]
    65b4:	str	x0, [sp, #80]
    65b8:	str	x1, [sp, #96]
    65bc:	mov	x2, x19
    65c0:	mov	x1, x20
    65c4:	bl	5210 <memcpy@plt>
    65c8:	ldp	x19, x0, [sp, #72]
    65cc:	b	64f8 <_ZNSt6localeC1Ev@plt+0xd68>
    65d0:	mov	x0, x1
    65d4:	mov	x2, #0x0                   	// #0
    65d8:	add	x1, sp, #0x48
    65dc:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    65e0:	ldr	x1, [sp, #72]
    65e4:	str	x0, [x19, #16]
    65e8:	str	x1, [x19, #32]
    65ec:	mov	x2, x20
    65f0:	mov	x1, x23
    65f4:	bl	5210 <memcpy@plt>
    65f8:	ldr	x0, [x19, #16]
    65fc:	ldr	x20, [sp, #72]
    6600:	b	6554 <_ZNSt6localeC1Ev@plt+0xdc4>
    6604:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    6608:	add	x0, x0, #0xef8
    660c:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    6610:	mov	x2, x0
    6614:	mov	x1, #0x30                  	// #48
    6618:	mov	x0, x19
    661c:	mov	x19, x2
    6620:	bl	54a0 <_ZdlPvm@plt>
    6624:	ldr	x0, [sp, #80]
    6628:	add	x22, x22, #0x10
    662c:	cmp	x0, x22
    6630:	b.eq	6638 <_ZNSt6localeC1Ev@plt+0xea8>  // b.none
    6634:	bl	5480 <_ZdlPv@plt>
    6638:	mov	x0, x19
    663c:	bl	5740 <_Unwind_Resume@plt>
    6640:	mov	x19, x0
    6644:	b	6624 <_ZNSt6localeC1Ev@plt+0xe94>
    6648:	stp	x29, x30, [sp, #-48]!
    664c:	mov	x29, sp
    6650:	str	x19, [sp, #16]
    6654:	mov	x19, x1
    6658:	add	x1, sp, #0x28
    665c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    6660:	cbz	w0, 6670 <_ZNSt6localeC1Ev@plt+0xee0>
    6664:	ldr	x1, [sp, #40]
    6668:	mov	w0, #0x1                   	// #1
    666c:	str	w1, [x19]
    6670:	ldr	x19, [sp, #16]
    6674:	ldp	x29, x30, [sp], #48
    6678:	ret
    667c:	nop
    6680:	stp	x29, x30, [sp, #-48]!
    6684:	mov	x29, sp
    6688:	str	x19, [sp, #16]
    668c:	mov	x19, x1
    6690:	add	x1, sp, #0x28
    6694:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    6698:	cbz	w0, 66a8 <_ZNSt6localeC1Ev@plt+0xf18>
    669c:	ldr	x1, [sp, #40]
    66a0:	mov	w0, #0x1                   	// #1
    66a4:	str	w1, [x19]
    66a8:	ldr	x19, [sp, #16]
    66ac:	ldp	x29, x30, [sp], #48
    66b0:	ret
    66b4:	nop
    66b8:	stp	x29, x30, [sp, #-48]!
    66bc:	mov	x29, sp
    66c0:	str	x19, [sp, #16]
    66c4:	mov	x19, x1
    66c8:	add	x1, sp, #0x28
    66cc:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    66d0:	cbz	w0, 66e0 <_ZNSt6localeC1Ev@plt+0xf50>
    66d4:	ldr	x1, [sp, #40]
    66d8:	mov	w0, #0x1                   	// #1
    66dc:	str	w1, [x19]
    66e0:	ldr	x19, [sp, #16]
    66e4:	ldp	x29, x30, [sp], #48
    66e8:	ret
    66ec:	nop
    66f0:	stp	x29, x30, [sp, #-48]!
    66f4:	mov	x29, sp
    66f8:	stp	x19, x20, [sp, #16]
    66fc:	mov	x19, x0
    6700:	ldr	x0, [x0, #16]
    6704:	str	x21, [sp, #32]
    6708:	cbz	x0, 6718 <_ZNSt6localeC1Ev@plt+0xf88>
    670c:	ldr	x1, [x0]
    6710:	ldr	x1, [x1, #8]
    6714:	blr	x1
    6718:	ldr	x0, [x19, #128]
    671c:	cbz	x0, 672c <_ZNSt6localeC1Ev@plt+0xf9c>
    6720:	ldr	x1, [x0]
    6724:	ldr	x1, [x1, #16]
    6728:	blr	x1
    672c:	ldr	x0, [x19, #88]
    6730:	add	x1, x19, #0x68
    6734:	cmp	x0, x1
    6738:	b.eq	6740 <_ZNSt6localeC1Ev@plt+0xfb0>  // b.none
    673c:	bl	5480 <_ZdlPv@plt>
    6740:	ldp	x20, x21, [x19, #64]
    6744:	cmp	x20, x21
    6748:	b.eq	6774 <_ZNSt6localeC1Ev@plt+0xfe4>  // b.none
    674c:	nop
    6750:	mov	x1, x20
    6754:	add	x20, x20, #0x20
    6758:	ldr	x0, [x1], #16
    675c:	cmp	x0, x1
    6760:	b.eq	678c <_ZNSt6localeC1Ev@plt+0xffc>  // b.none
    6764:	bl	5480 <_ZdlPv@plt>
    6768:	cmp	x21, x20
    676c:	b.ne	6750 <_ZNSt6localeC1Ev@plt+0xfc0>  // b.any
    6770:	ldr	x21, [x19, #64]
    6774:	cbz	x21, 679c <_ZNSt6localeC1Ev@plt+0x100c>
    6778:	mov	x0, x21
    677c:	ldp	x19, x20, [sp, #16]
    6780:	ldr	x21, [sp, #32]
    6784:	ldp	x29, x30, [sp], #48
    6788:	b	5480 <_ZdlPv@plt>
    678c:	cmp	x21, x20
    6790:	b.ne	6750 <_ZNSt6localeC1Ev@plt+0xfc0>  // b.any
    6794:	ldr	x21, [x19, #64]
    6798:	b	6774 <_ZNSt6localeC1Ev@plt+0xfe4>
    679c:	ldp	x19, x20, [sp, #16]
    67a0:	ldr	x21, [sp, #32]
    67a4:	ldp	x29, x30, [sp], #48
    67a8:	ret
    67ac:	nop
    67b0:	cbz	x0, 67dc <_ZNSt6localeC1Ev@plt+0x104c>
    67b4:	stp	x29, x30, [sp, #-32]!
    67b8:	mov	x29, sp
    67bc:	str	x19, [sp, #16]
    67c0:	mov	x19, x0
    67c4:	bl	66f0 <_ZNSt6localeC1Ev@plt+0xf60>
    67c8:	mov	x0, x19
    67cc:	mov	x1, #0x88                  	// #136
    67d0:	ldr	x19, [sp, #16]
    67d4:	ldp	x29, x30, [sp], #32
    67d8:	b	54a0 <_ZdlPvm@plt>
    67dc:	ret
    67e0:	movi	v0.4s, #0x0
    67e4:	stp	x29, x30, [sp, #-48]!
    67e8:	mov	x29, sp
    67ec:	stp	x19, x20, [sp, #16]
    67f0:	mov	x19, x0
    67f4:	mov	x20, x2
    67f8:	stp	x21, x22, [sp, #32]
    67fc:	add	x22, x0, #0x68
    6800:	mov	x21, x1
    6804:	str	xzr, [x19, #16]
    6808:	mov	x0, #0x10                  	// #16
    680c:	stp	xzr, xzr, [x19, #40]
    6810:	stp	x22, xzr, [x19, #88]
    6814:	strb	wzr, [x19, #104]
    6818:	strb	wzr, [x19, #120]
    681c:	stur	q0, [x19, #24]
    6820:	stur	q0, [x19, #56]
    6824:	stur	q0, [x19, #72]
    6828:	bl	5490 <_Znwm@plt>
    682c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    6830:	add	x3, x3, #0x418
    6834:	stp	x21, x20, [x19]
    6838:	stp	x3, x19, [x0]
    683c:	str	x0, [x19, #128]
    6840:	ldp	x19, x20, [sp, #16]
    6844:	ldp	x21, x22, [sp, #32]
    6848:	ldp	x29, x30, [sp], #48
    684c:	ret
    6850:	ldr	x1, [x19, #88]
    6854:	mov	x20, x0
    6858:	cmp	x22, x1
    685c:	b.eq	6868 <_ZNSt6localeC1Ev@plt+0x10d8>  // b.none
    6860:	mov	x0, x1
    6864:	bl	5480 <_ZdlPv@plt>
    6868:	add	x0, x19, #0x40
    686c:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@plt>
    6870:	mov	x0, x20
    6874:	bl	5740 <_Unwind_Resume@plt>

0000000000006878 <gcc_c_fe_context@@Base>:
    6878:	stp	x29, x30, [sp, #-48]!
    687c:	cmp	w0, #0x1
    6880:	ccmp	w1, #0x1, #0x2, ls  // ls = plast
    6884:	mov	x29, sp
    6888:	stp	x19, x20, [sp, #16]
    688c:	b.hi	68fc <gcc_c_fe_context@@Base+0x84>  // b.pmore
    6890:	mov	x0, #0x88                  	// #136
    6894:	bl	5490 <_Znwm@plt>
    6898:	movi	v0.4s, #0x0
    689c:	mov	x19, x0
    68a0:	add	x20, x19, #0x68
    68a4:	mov	x0, #0x10                  	// #16
    68a8:	str	xzr, [x19, #16]
    68ac:	stp	xzr, xzr, [x19, #40]
    68b0:	stp	x20, xzr, [x19, #88]
    68b4:	strb	wzr, [x19, #104]
    68b8:	strb	wzr, [x19, #120]
    68bc:	stur	q0, [x19, #24]
    68c0:	stur	q0, [x19, #56]
    68c4:	stur	q0, [x19, #72]
    68c8:	bl	5490 <_Znwm@plt>
    68cc:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    68d0:	add	x1, x1, #0x480
    68d4:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    68d8:	add	x3, x1, #0x58
    68dc:	add	x2, x2, #0x418
    68e0:	stp	x1, x3, [x19]
    68e4:	stp	x2, x19, [x0]
    68e8:	str	x0, [x19, #128]
    68ec:	mov	x0, x19
    68f0:	ldp	x19, x20, [sp, #16]
    68f4:	ldp	x29, x30, [sp], #48
    68f8:	ret
    68fc:	mov	x19, #0x0                   	// #0
    6900:	mov	x0, x19
    6904:	ldp	x19, x20, [sp, #16]
    6908:	ldp	x29, x30, [sp], #48
    690c:	ret
    6910:	ldr	x1, [x19, #88]
    6914:	str	x21, [sp, #32]
    6918:	mov	x21, x0
    691c:	cmp	x20, x1
    6920:	b.eq	692c <gcc_c_fe_context@@Base+0xb4>  // b.none
    6924:	mov	x0, x1
    6928:	bl	5480 <_ZdlPv@plt>
    692c:	add	x0, x19, #0x40
    6930:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@plt>
    6934:	mov	x1, #0x88                  	// #136
    6938:	mov	x0, x19
    693c:	bl	54a0 <_ZdlPvm@plt>
    6940:	mov	x0, x21
    6944:	bl	5740 <_Unwind_Resume@plt>
    6948:	sub	sp, sp, #0x250
    694c:	stp	x29, x30, [sp]
    6950:	mov	x29, sp
    6954:	stp	x23, x24, [sp, #48]
    6958:	mov	x24, x0
    695c:	stp	x19, x20, [sp, #16]
    6960:	add	x19, x29, #0xc0
    6964:	add	x0, x19, #0x80
    6968:	stp	x21, x22, [sp, #32]
    696c:	adrp	x21, 2c000 <xexit@@Base+0x151a0>
    6970:	stp	x25, x26, [sp, #64]
    6974:	stp	x27, x28, [sp, #80]
    6978:	str	x1, [x29, #96]
    697c:	ldr	x20, [x24, #16]
    6980:	bl	52b0 <_ZNSt8ios_baseC2Ev@plt>
    6984:	ldr	x2, [x21, #3296]
    6988:	add	x3, x29, #0x230
    698c:	movi	v0.4s, #0x0
    6990:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    6994:	str	xzr, [x29, #536]
    6998:	mov	x1, #0x0                   	// #0
    699c:	ldp	x23, x26, [x2, #16]
    69a0:	strh	wzr, [x29, #544]
    69a4:	ldr	x0, [x0, #3216]
    69a8:	stur	q0, [x3, #-8]
    69ac:	stur	q0, [x3, #8]
    69b0:	add	x0, x0, #0x10
    69b4:	ldur	x3, [x23, #-24]
    69b8:	str	x23, [x29, #192]
    69bc:	str	x0, [x29, #320]
    69c0:	str	x26, [x19, x3]
    69c4:	str	xzr, [x29, #200]
    69c8:	ldur	x0, [x23, #-24]
    69cc:	add	x0, x19, x0
    69d0:	bl	5590 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    69d4:	ldr	x0, [x21, #3296]
    69d8:	add	x2, x19, #0x10
    69dc:	mov	x1, #0x0                   	// #0
    69e0:	ldp	x25, x4, [x0, #32]
    69e4:	str	x4, [x29, #128]
    69e8:	ldur	x3, [x25, #-24]
    69ec:	str	x25, [x29, #208]
    69f0:	add	x0, x2, x3
    69f4:	str	x4, [x2, x3]
    69f8:	bl	5590 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    69fc:	ldr	x1, [x21, #3296]
    6a00:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    6a04:	adrp	x21, 2c000 <xexit@@Base+0x151a0>
    6a08:	adrp	x22, 2c000 <xexit@@Base+0x151a0>
    6a0c:	ldr	x2, [x0, #3576]
    6a10:	add	x0, x19, #0x50
    6a14:	ldr	x27, [x1, #8]
    6a18:	add	x4, x2, #0x68
    6a1c:	ldr	x3, [x21, #3432]
    6a20:	add	x5, x2, #0x18
    6a24:	ldur	x6, [x27, #-24]
    6a28:	add	x2, x2, #0x40
    6a2c:	ldr	x7, [x1, #48]
    6a30:	add	x1, x3, #0x10
    6a34:	str	x7, [x19, x6]
    6a38:	str	x7, [x29, #120]
    6a3c:	str	x5, [x29, #192]
    6a40:	stp	x2, x1, [x29, #208]
    6a44:	stp	xzr, xzr, [x29, #224]
    6a48:	stp	xzr, xzr, [x29, #240]
    6a4c:	stp	xzr, xzr, [x29, #256]
    6a50:	str	x4, [x29, #320]
    6a54:	bl	5790 <_ZNSt6localeC1Ev@plt>
    6a58:	ldr	x2, [x22, #4048]
    6a5c:	add	x3, x19, #0x70
    6a60:	mov	w4, #0x18                  	// #24
    6a64:	add	x1, x19, #0x18
    6a68:	add	x2, x2, #0x10
    6a6c:	add	x0, x19, #0x80
    6a70:	str	x2, [x29, #216]
    6a74:	str	w4, [x29, #280]
    6a78:	stp	x3, xzr, [x29, #288]
    6a7c:	strb	wzr, [x29, #304]
    6a80:	bl	5590 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    6a84:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    6a88:	add	x0, x19, #0x10
    6a8c:	add	x1, x1, #0xb60
    6a90:	mov	x2, #0x1                   	// #1
    6a94:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6a98:	cbz	x20, 6dac <gcc_c_fe_context@@Base+0x534>
    6a9c:	mov	x0, x20
    6aa0:	bl	52c0 <strlen@plt>
    6aa4:	mov	x1, x20
    6aa8:	mov	x2, x0
    6aac:	add	x0, x19, #0x10
    6ab0:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6ab4:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    6ab8:	add	x0, x19, #0x10
    6abc:	add	x1, x1, #0xf98
    6ac0:	mov	x2, #0x1                   	// #1
    6ac4:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6ac8:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    6acc:	add	x28, x19, #0x10
    6ad0:	add	x0, x0, #0xf90
    6ad4:	add	x1, x29, #0x9e
    6ad8:	mov	w20, #0x67                  	// #103
    6adc:	str	x1, [x29, #112]
    6ae0:	str	x0, [x29, #136]
    6ae4:	add	x0, x29, #0x9f
    6ae8:	str	x0, [x29, #104]
    6aec:	ldr	x1, [x29, #112]
    6af0:	mov	x0, x28
    6af4:	mov	x2, #0x1                   	// #1
    6af8:	strb	w20, [x29, #158]
    6afc:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6b00:	ldr	x0, [x29, #136]
    6b04:	ldrb	w20, [x0, #1]!
    6b08:	str	x0, [x29, #136]
    6b0c:	cbz	w20, 6b98 <gcc_c_fe_context@@Base+0x320>
    6b10:	cmp	w20, #0x2e
    6b14:	b.ls	6b60 <gcc_c_fe_context@@Base+0x2e8>  // b.plast
    6b18:	sub	w0, w20, #0x3f
    6b1c:	and	w0, w0, #0xff
    6b20:	cmp	w0, #0x3d
    6b24:	b.hi	6aec <gcc_c_fe_context@@Base+0x274>  // b.pmore
    6b28:	mov	x1, #0x1                   	// #1
    6b2c:	lsl	x0, x1, x0
    6b30:	mov	x1, #0x1                   	// #1
    6b34:	movk	x1, #0xb000, lsl #16
    6b38:	movk	x1, #0x3000, lsl #48
    6b3c:	tst	x0, x1
    6b40:	b.eq	6aec <gcc_c_fe_context@@Base+0x274>  // b.none
    6b44:	ldr	x1, [x29, #104]
    6b48:	mov	w3, #0x5c                  	// #92
    6b4c:	mov	x0, x28
    6b50:	mov	x2, #0x1                   	// #1
    6b54:	strb	w3, [x29, #159]
    6b58:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6b5c:	b	6aec <gcc_c_fe_context@@Base+0x274>
    6b60:	cmp	w20, #0x23
    6b64:	b.ls	6aec <gcc_c_fe_context@@Base+0x274>  // b.plast
    6b68:	mov	x0, #0x1                   	// #1
    6b6c:	mov	x1, #0x4f1000000000        	// #86930138071040
    6b70:	lsl	x0, x0, x20
    6b74:	tst	x0, x1
    6b78:	b.eq	6aec <gcc_c_fe_context@@Base+0x274>  // b.none
    6b7c:	ldr	x1, [x29, #104]
    6b80:	mov	w3, #0x5c                  	// #92
    6b84:	mov	x0, x28
    6b88:	mov	x2, #0x1                   	// #1
    6b8c:	strb	w3, [x29, #159]
    6b90:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6b94:	b	6aec <gcc_c_fe_context@@Base+0x274>
    6b98:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    6b9c:	add	x0, x19, #0x10
    6ba0:	add	x1, x1, #0xfa0
    6ba4:	mov	x2, #0x1                   	// #1
    6ba8:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    6bac:	ldr	x0, [x29, #256]
    6bb0:	add	x20, x29, #0xa0
    6bb4:	add	x1, x20, #0x10
    6bb8:	stp	x1, xzr, [x29, #160]
    6bbc:	strb	wzr, [x29, #176]
    6bc0:	cbz	x0, 6e04 <gcc_c_fe_context@@Base+0x58c>
    6bc4:	ldp	x4, x3, [x29, #240]
    6bc8:	cmp	x0, x4
    6bcc:	b.hi	6d54 <gcc_c_fe_context@@Base+0x4dc>  // b.pmore
    6bd0:	sub	x4, x4, x3
    6bd4:	mov	x0, x20
    6bd8:	mov	x2, #0x0                   	// #0
    6bdc:	mov	x1, #0x0                   	// #0
    6be0:	bl	5660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    6be4:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    6be8:	add	x2, x19, #0x70
    6bec:	ldr	x22, [x22, #4048]
    6bf0:	ldr	x1, [x0, #3576]
    6bf4:	add	x22, x22, #0x10
    6bf8:	ldr	x0, [x29, #288]
    6bfc:	add	x4, x1, #0x18
    6c00:	add	x3, x1, #0x68
    6c04:	add	x1, x1, #0x40
    6c08:	str	x4, [x29, #192]
    6c0c:	cmp	x0, x2
    6c10:	stp	x1, x22, [x29, #208]
    6c14:	str	x3, [x29, #320]
    6c18:	b.eq	6c20 <gcc_c_fe_context@@Base+0x3a8>  // b.none
    6c1c:	bl	5480 <_ZdlPv@plt>
    6c20:	ldr	x21, [x21, #3432]
    6c24:	add	x0, x19, #0x50
    6c28:	add	x21, x21, #0x10
    6c2c:	str	x21, [x29, #216]
    6c30:	bl	55f0 <_ZNSt6localeD1Ev@plt>
    6c34:	ldur	x1, [x27, #-24]
    6c38:	add	x2, x29, #0xd0
    6c3c:	ldp	x3, x5, [x29, #120]
    6c40:	add	x0, x19, #0x80
    6c44:	ldur	x4, [x25, #-24]
    6c48:	str	x3, [x19, x1]
    6c4c:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    6c50:	ldur	x3, [x23, #-24]
    6c54:	str	x25, [x29, #208]
    6c58:	ldr	x1, [x1, #3216]
    6c5c:	str	x5, [x2, x4]
    6c60:	str	x23, [x29, #192]
    6c64:	add	x1, x1, #0x10
    6c68:	str	x26, [x19, x3]
    6c6c:	str	xzr, [x29, #200]
    6c70:	str	x1, [x29, #320]
    6c74:	bl	5300 <_ZNSt8ios_baseD2Ev@plt>
    6c78:	ldr	x0, [x24, #8]
    6c7c:	ldrb	w0, [x0, #120]
    6c80:	cbz	w0, 6ca0 <gcc_c_fe_context@@Base+0x428>
    6c84:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    6c88:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    6c8c:	ldr	x2, [x29, #160]
    6c90:	add	x1, x1, #0xfa8
    6c94:	ldr	x0, [x0, #3968]
    6c98:	ldr	x0, [x0]
    6c9c:	bl	52d0 <fprintf@plt>
    6ca0:	ldr	x1, [x29, #160]
    6ca4:	mov	x0, x19
    6ca8:	mov	w2, #0x9                   	// #9
    6cac:	bl	5230 <xregcomp@plt>
    6cb0:	mov	w21, w0
    6cb4:	cbz	w0, 6d6c <gcc_c_fe_context@@Base+0x4f4>
    6cb8:	mov	x22, sp
    6cbc:	mov	x1, x19
    6cc0:	mov	x3, #0x0                   	// #0
    6cc4:	mov	x2, #0x0                   	// #0
    6cc8:	bl	5710 <xregerror@plt>
    6ccc:	mov	x3, x0
    6cd0:	mov	x1, x19
    6cd4:	add	x2, x3, #0xf
    6cd8:	mov	w0, w21
    6cdc:	and	x2, x2, #0xfffffffffffffff0
    6ce0:	sub	sp, sp, x2
    6ce4:	mov	x19, sp
    6ce8:	mov	x2, sp
    6cec:	bl	5710 <xregerror@plt>
    6cf0:	ldr	x1, [x29, #160]
    6cf4:	adrp	x2, 16000 <htab_create_typed_alloc@@Base+0xb8>
    6cf8:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    6cfc:	mov	x3, x19
    6d00:	add	x2, x2, #0xfd8
    6d04:	add	x0, x0, #0xfe0
    6d08:	mov	x4, #0x0                   	// #0
    6d0c:	bl	5450 <concat@plt>
    6d10:	mov	x19, x0
    6d14:	mov	sp, x22
    6d18:	ldr	x0, [x29, #160]
    6d1c:	add	x20, x20, #0x10
    6d20:	cmp	x0, x20
    6d24:	b.eq	6d2c <gcc_c_fe_context@@Base+0x4b4>  // b.none
    6d28:	bl	5480 <_ZdlPv@plt>
    6d2c:	mov	sp, x29
    6d30:	mov	x0, x19
    6d34:	ldp	x29, x30, [sp]
    6d38:	ldp	x19, x20, [sp, #16]
    6d3c:	ldp	x21, x22, [sp, #32]
    6d40:	ldp	x23, x24, [sp, #48]
    6d44:	ldp	x25, x26, [sp, #64]
    6d48:	ldp	x27, x28, [sp, #80]
    6d4c:	add	sp, sp, #0x250
    6d50:	ret
    6d54:	sub	x4, x0, x3
    6d58:	mov	x2, #0x0                   	// #0
    6d5c:	mov	x0, x20
    6d60:	mov	x1, #0x0                   	// #0
    6d64:	bl	5660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    6d68:	b	6be4 <gcc_c_fe_context@@Base+0x36c>
    6d6c:	ldr	x1, [x29, #96]
    6d70:	mov	x0, x19
    6d74:	bl	5878 <_ZNSt6localeC1Ev@plt+0xe8>
    6d78:	tst	w0, #0xff
    6d7c:	mov	x0, x19
    6d80:	b.ne	6dcc <gcc_c_fe_context@@Base+0x554>  // b.any
    6d84:	bl	52e0 <xregfree@plt>
    6d88:	ldr	x1, [x29, #160]
    6d8c:	adrp	x2, 17000 <xexit@@Base+0x1a0>
    6d90:	adrp	x0, 17000 <xexit@@Base+0x1a0>
    6d94:	add	x2, x2, #0x0
    6d98:	add	x0, x0, #0x8
    6d9c:	mov	x3, #0x0                   	// #0
    6da0:	bl	5450 <concat@plt>
    6da4:	mov	x19, x0
    6da8:	b	6d18 <gcc_c_fe_context@@Base+0x4a0>
    6dac:	ldr	x1, [x29, #208]
    6db0:	add	x0, x19, #0x10
    6db4:	ldur	x1, [x1, #-24]
    6db8:	add	x0, x0, x1
    6dbc:	ldr	w1, [x0, #32]
    6dc0:	orr	w1, w1, #0x1
    6dc4:	bl	5700 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    6dc8:	b	6ab4 <gcc_c_fe_context@@Base+0x23c>
    6dcc:	bl	52e0 <xregfree@plt>
    6dd0:	ldr	x0, [x24, #8]
    6dd4:	ldrb	w0, [x0, #120]
    6dd8:	cbz	w0, 6dfc <gcc_c_fe_context@@Base+0x584>
    6ddc:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    6de0:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    6de4:	ldr	x2, [x29, #96]
    6de8:	add	x1, x1, #0x30
    6dec:	ldr	x0, [x0, #3968]
    6df0:	ldr	x2, [x2]
    6df4:	ldr	x0, [x0]
    6df8:	bl	52d0 <fprintf@plt>
    6dfc:	mov	x19, #0x0                   	// #0
    6e00:	b	6d18 <gcc_c_fe_context@@Base+0x4a0>
    6e04:	add	x1, x19, #0x60
    6e08:	mov	x0, x20
    6e0c:	bl	5370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    6e10:	b	6be4 <gcc_c_fe_context@@Base+0x36c>
    6e14:	mov	x20, x0
    6e18:	mov	x0, x19
    6e1c:	bl	5430 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    6e20:	mov	x0, x20
    6e24:	bl	5740 <_Unwind_Resume@plt>
    6e28:	mov	x20, x0
    6e2c:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    6e30:	ldr	x1, [x0, #3216]
    6e34:	add	x0, x19, #0x80
    6e38:	add	x1, x1, #0x10
    6e3c:	str	x1, [x29, #320]
    6e40:	bl	5300 <_ZNSt8ios_baseD2Ev@plt>
    6e44:	mov	x0, x20
    6e48:	bl	5740 <_Unwind_Resume@plt>
    6e4c:	ldr	x1, [x29, #160]
    6e50:	add	x2, x20, #0x10
    6e54:	mov	x20, x0
    6e58:	cmp	x1, x2
    6e5c:	b.eq	6e18 <gcc_c_fe_context@@Base+0x5a0>  // b.none
    6e60:	mov	x0, x1
    6e64:	bl	5480 <_ZdlPv@plt>
    6e68:	b	6e18 <gcc_c_fe_context@@Base+0x5a0>
    6e6c:	mov	x19, x0
    6e70:	ldr	x0, [x29, #160]
    6e74:	add	x20, x20, #0x10
    6e78:	cmp	x0, x20
    6e7c:	b.eq	6e84 <gcc_c_fe_context@@Base+0x60c>  // b.none
    6e80:	bl	5480 <_ZdlPv@plt>
    6e84:	mov	x0, x19
    6e88:	bl	5740 <_Unwind_Resume@plt>
    6e8c:	mov	x19, x0
    6e90:	mov	sp, x22
    6e94:	b	6e70 <gcc_c_fe_context@@Base+0x5f8>
    6e98:	ldr	x22, [x22, #4048]
    6e9c:	mov	x20, x0
    6ea0:	ldr	x0, [x29, #288]
    6ea4:	add	x22, x22, #0x10
    6ea8:	str	x22, [x29, #216]
    6eac:	add	x1, x19, #0x70
    6eb0:	cmp	x0, x1
    6eb4:	b.eq	6ebc <gcc_c_fe_context@@Base+0x644>  // b.none
    6eb8:	bl	5480 <_ZdlPv@plt>
    6ebc:	ldr	x1, [x21, #3432]
    6ec0:	add	x0, x19, #0x50
    6ec4:	add	x1, x1, #0x10
    6ec8:	str	x1, [x29, #216]
    6ecc:	bl	55f0 <_ZNSt6localeD1Ev@plt>
    6ed0:	ldur	x1, [x27, #-24]
    6ed4:	add	x0, x29, #0xd0
    6ed8:	ldur	x2, [x25, #-24]
    6edc:	ldr	x3, [x29, #120]
    6ee0:	str	x3, [x19, x1]
    6ee4:	ldur	x1, [x23, #-24]
    6ee8:	str	x25, [x29, #208]
    6eec:	ldr	x3, [x29, #128]
    6ef0:	str	x3, [x0, x2]
    6ef4:	str	x23, [x29, #192]
    6ef8:	str	x26, [x19, x1]
    6efc:	str	xzr, [x29, #200]
    6f00:	b	6e2c <gcc_c_fe_context@@Base+0x5b4>
    6f04:	ldur	x1, [x23, #-24]
    6f08:	str	x23, [x29, #192]
    6f0c:	mov	x20, x0
    6f10:	str	x26, [x19, x1]
    6f14:	str	xzr, [x29, #200]
    6f18:	b	6e2c <gcc_c_fe_context@@Base+0x5b4>
    6f1c:	nop
    6f20:	stp	x29, x30, [sp, #-176]!
    6f24:	mov	x29, sp
    6f28:	stp	x19, x20, [sp, #16]
    6f2c:	mov	x20, x0
    6f30:	stp	x23, x24, [sp, #48]
    6f34:	add	x24, sp, #0x70
    6f38:	add	x0, x24, #0x10
    6f3c:	stp	x0, xzr, [sp, #112]
    6f40:	mov	w23, w1
    6f44:	mov	x1, x24
    6f48:	ldr	x0, [x20, #128]
    6f4c:	strb	wzr, [sp, #128]
    6f50:	stp	x21, x22, [sp, #32]
    6f54:	mov	x21, x2
    6f58:	ldr	x3, [x0]
    6f5c:	stp	x25, x26, [sp, #64]
    6f60:	stp	x27, x28, [sp, #80]
    6f64:	ldr	x3, [x3]
    6f68:	blr	x3
    6f6c:	mov	x25, x0
    6f70:	cbz	x0, 6fa8 <gcc_c_fe_context@@Base+0x730>
    6f74:	ldr	x0, [sp, #112]
    6f78:	add	x24, x24, #0x10
    6f7c:	cmp	x0, x24
    6f80:	b.eq	6f88 <gcc_c_fe_context@@Base+0x710>  // b.none
    6f84:	bl	5480 <_ZdlPv@plt>
    6f88:	mov	x0, x25
    6f8c:	ldp	x19, x20, [sp, #16]
    6f90:	ldp	x21, x22, [sp, #32]
    6f94:	ldp	x23, x24, [sp, #48]
    6f98:	ldp	x25, x26, [sp, #64]
    6f9c:	ldp	x27, x28, [sp, #80]
    6fa0:	ldp	x29, x30, [sp], #176
    6fa4:	ret
    6fa8:	add	x20, x20, #0x40
    6fac:	ldp	x19, x0, [x20, #8]
    6fb0:	cmp	x19, x0
    6fb4:	b.eq	7170 <gcc_c_fe_context@@Base+0x8f8>  // b.none
    6fb8:	add	x0, x19, #0x10
    6fbc:	ldr	x22, [sp, #120]
    6fc0:	str	x0, [x19]
    6fc4:	ldr	x26, [sp, #112]
    6fc8:	cmn	x26, x22
    6fcc:	ccmp	x26, #0x0, #0x0, ne  // ne = any
    6fd0:	b.eq	718c <gcc_c_fe_context@@Base+0x914>  // b.none
    6fd4:	str	x22, [sp, #144]
    6fd8:	cmp	x22, #0xf
    6fdc:	b.hi	70f0 <gcc_c_fe_context@@Base+0x878>  // b.pmore
    6fe0:	cmp	x22, #0x1
    6fe4:	b.ne	7184 <gcc_c_fe_context@@Base+0x90c>  // b.any
    6fe8:	ldrb	w1, [x26]
    6fec:	strb	w1, [x19, #16]
    6ff0:	str	x22, [x19, #8]
    6ff4:	strb	wzr, [x0, x22]
    6ff8:	ldr	x0, [x20, #8]
    6ffc:	add	x0, x0, #0x20
    7000:	str	x0, [x20, #8]
    7004:	cmp	w23, #0x0
    7008:	b.le	6f74 <gcc_c_fe_context@@Base+0x6fc>
    700c:	sub	w23, w23, #0x1
    7010:	add	x0, x21, #0x8
    7014:	add	x26, sp, #0x90
    7018:	add	x27, sp, #0x68
    701c:	add	x23, x0, w23, uxtw #3
    7020:	add	x22, x26, #0x10
    7024:	b	7088 <gcc_c_fe_context@@Base+0x810>
    7028:	ldrb	w1, [x28]
    702c:	mov	x0, x22
    7030:	strb	w1, [sp, #160]
    7034:	str	x19, [sp, #152]
    7038:	strb	wzr, [x0, x19]
    703c:	ldp	x1, x0, [x20, #8]
    7040:	cmp	x1, x0
    7044:	b.eq	70d0 <gcc_c_fe_context@@Base+0x858>  // b.none
    7048:	add	x0, x1, #0x10
    704c:	str	x0, [x1]
    7050:	ldr	x0, [sp, #144]
    7054:	cmp	x0, x22
    7058:	b.eq	7164 <gcc_c_fe_context@@Base+0x8ec>  // b.none
    705c:	str	x0, [x1]
    7060:	ldr	x0, [sp, #160]
    7064:	str	x0, [x1, #16]
    7068:	ldr	x0, [x20, #8]
    706c:	ldr	x2, [sp, #152]
    7070:	str	x2, [x1, #8]
    7074:	add	x0, x0, #0x20
    7078:	str	x0, [x20, #8]
    707c:	add	x21, x21, #0x8
    7080:	cmp	x23, x21
    7084:	b.eq	6f74 <gcc_c_fe_context@@Base+0x6fc>  // b.none
    7088:	ldr	x28, [x21]
    708c:	str	x22, [sp, #144]
    7090:	cbz	x28, 7158 <gcc_c_fe_context@@Base+0x8e0>
    7094:	mov	x0, x28
    7098:	bl	52c0 <strlen@plt>
    709c:	str	x0, [sp, #104]
    70a0:	mov	x19, x0
    70a4:	cmp	x0, #0xf
    70a8:	b.hi	7124 <gcc_c_fe_context@@Base+0x8ac>  // b.pmore
    70ac:	cmp	x0, #0x1
    70b0:	b.eq	7028 <gcc_c_fe_context@@Base+0x7b0>  // b.none
    70b4:	mov	x0, x22
    70b8:	cbnz	x19, 7140 <gcc_c_fe_context@@Base+0x8c8>
    70bc:	str	x19, [sp, #152]
    70c0:	strb	wzr, [x0, x19]
    70c4:	ldp	x1, x0, [x20, #8]
    70c8:	cmp	x1, x0
    70cc:	b.ne	7048 <gcc_c_fe_context@@Base+0x7d0>  // b.any
    70d0:	mov	x2, x26
    70d4:	mov	x0, x20
    70d8:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    70dc:	ldr	x0, [sp, #144]
    70e0:	cmp	x0, x22
    70e4:	b.eq	707c <gcc_c_fe_context@@Base+0x804>  // b.none
    70e8:	bl	5480 <_ZdlPv@plt>
    70ec:	b	707c <gcc_c_fe_context@@Base+0x804>
    70f0:	add	x1, sp, #0x90
    70f4:	mov	x0, x19
    70f8:	mov	x2, #0x0                   	// #0
    70fc:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    7100:	ldr	x1, [sp, #144]
    7104:	str	x0, [x19]
    7108:	str	x1, [x19, #16]
    710c:	mov	x2, x22
    7110:	mov	x1, x26
    7114:	bl	5210 <memcpy@plt>
    7118:	ldr	x0, [x19]
    711c:	ldr	x22, [sp, #144]
    7120:	b	6ff0 <gcc_c_fe_context@@Base+0x778>
    7124:	mov	x1, x27
    7128:	mov	x0, x26
    712c:	mov	x2, #0x0                   	// #0
    7130:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    7134:	ldr	x1, [sp, #104]
    7138:	str	x0, [sp, #144]
    713c:	str	x1, [sp, #160]
    7140:	mov	x2, x19
    7144:	mov	x1, x28
    7148:	bl	5210 <memcpy@plt>
    714c:	ldr	x19, [sp, #104]
    7150:	ldr	x0, [sp, #144]
    7154:	b	7034 <gcc_c_fe_context@@Base+0x7bc>
    7158:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    715c:	add	x0, x0, #0xef8
    7160:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    7164:	ldp	x2, x3, [sp, #160]
    7168:	stp	x2, x3, [x1, #16]
    716c:	b	7068 <gcc_c_fe_context@@Base+0x7f0>
    7170:	mov	x1, x19
    7174:	mov	x2, x24
    7178:	mov	x0, x20
    717c:	bl	5510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    7180:	b	7004 <gcc_c_fe_context@@Base+0x78c>
    7184:	cbz	x22, 6ff0 <gcc_c_fe_context@@Base+0x778>
    7188:	b	710c <gcc_c_fe_context@@Base+0x894>
    718c:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    7190:	add	x0, x0, #0xef8
    7194:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    7198:	ldr	x1, [sp, #144]
    719c:	add	x26, x26, #0x10
    71a0:	mov	x19, x0
    71a4:	cmp	x1, x26
    71a8:	b.eq	71b4 <gcc_c_fe_context@@Base+0x93c>  // b.none
    71ac:	mov	x0, x1
    71b0:	bl	5480 <_ZdlPv@plt>
    71b4:	ldr	x0, [sp, #112]
    71b8:	add	x24, x24, #0x10
    71bc:	cmp	x0, x24
    71c0:	b.eq	71c8 <gcc_c_fe_context@@Base+0x950>  // b.none
    71c4:	bl	5480 <_ZdlPv@plt>
    71c8:	mov	x0, x19
    71cc:	bl	5740 <_Unwind_Resume@plt>
    71d0:	mov	x19, x0
    71d4:	b	71b4 <gcc_c_fe_context@@Base+0x93c>
    71d8:	stp	x29, x30, [sp, #-48]!
    71dc:	mov	x29, sp
    71e0:	stp	x19, x20, [sp, #16]
    71e4:	mov	w20, w2
    71e8:	mov	x19, x0
    71ec:	str	x21, [sp, #32]
    71f0:	mov	x21, x3
    71f4:	bl	62b8 <_ZNSt6localeC1Ev@plt+0xb28>
    71f8:	cbz	x0, 720c <gcc_c_fe_context@@Base+0x994>
    71fc:	ldp	x19, x20, [sp, #16]
    7200:	ldr	x21, [sp, #32]
    7204:	ldp	x29, x30, [sp], #48
    7208:	ret
    720c:	mov	x2, x21
    7210:	mov	w1, w20
    7214:	mov	x0, x19
    7218:	ldp	x19, x20, [sp, #16]
    721c:	ldr	x21, [sp, #32]
    7220:	ldp	x29, x30, [sp], #48
    7224:	b	6f20 <gcc_c_fe_context@@Base+0x6a8>
    7228:	stp	x29, x30, [sp, #-240]!
    722c:	mov	w2, #0x0                   	// #0
    7230:	mov	x29, sp
    7234:	add	x3, sp, #0x50
    7238:	stp	x19, x20, [sp, #16]
    723c:	mov	x19, x0
    7240:	stp	x21, x22, [sp, #32]
    7244:	mov	x22, x1
    7248:	mov	w1, #0x1                   	// #1
    724c:	mov	w0, w1
    7250:	bl	5250 <socketpair@plt>
    7254:	cbz	w0, 7280 <gcc_c_fe_context@@Base+0xa08>
    7258:	ldp	x2, x0, [x19, #48]
    725c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    7260:	mov	w20, #0x0                   	// #0
    7264:	add	x1, x1, #0x48
    7268:	blr	x2
    726c:	mov	w0, w20
    7270:	ldp	x19, x20, [sp, #16]
    7274:	ldp	x21, x22, [sp, #32]
    7278:	ldp	x29, x30, [sp], #240
    727c:	ret
    7280:	mov	w20, w0
    7284:	add	x0, sp, #0x58
    7288:	bl	5270 <pipe@plt>
    728c:	cbz	w0, 72c4 <gcc_c_fe_context@@Base+0xa4c>
    7290:	ldp	x2, x0, [x19, #48]
    7294:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    7298:	add	x1, x1, #0x68
    729c:	blr	x2
    72a0:	ldr	w0, [sp, #80]
    72a4:	bl	5610 <close@plt>
    72a8:	ldr	w0, [sp, #84]
    72ac:	bl	5610 <close@plt>
    72b0:	mov	w0, w20
    72b4:	ldp	x19, x20, [sp, #16]
    72b8:	ldp	x21, x22, [sp, #32]
    72bc:	ldp	x29, x30, [sp], #240
    72c0:	ret
    72c4:	mov	x3, #0x15                  	// #21
    72c8:	add	x21, sp, #0x68
    72cc:	stp	x23, x24, [sp, #48]
    72d0:	add	x24, sp, #0x88
    72d4:	mov	x1, x21
    72d8:	mov	x2, #0x0                   	// #0
    72dc:	add	x23, x24, #0x10
    72e0:	mov	x0, x24
    72e4:	str	x25, [sp, #64]
    72e8:	str	x3, [sp, #104]
    72ec:	add	x20, x19, #0x40
    72f0:	str	x23, [sp, #136]
    72f4:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    72f8:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    72fc:	add	x1, x1, #0x80
    7300:	ldr	x2, [sp, #104]
    7304:	str	x0, [sp, #136]
    7308:	str	x2, [sp, #152]
    730c:	ldp	x2, x3, [x1]
    7310:	stp	x2, x3, [x0]
    7314:	ldur	x1, [x1, #13]
    7318:	stur	x1, [x0, #13]
    731c:	ldr	x0, [sp, #104]
    7320:	str	x0, [sp, #144]
    7324:	ldr	x1, [sp, #136]
    7328:	strb	wzr, [x1, x0]
    732c:	ldp	x1, x0, [x20, #8]
    7330:	cmp	x1, x0
    7334:	b.eq	78dc <gcc_c_fe_context@@Base+0x1064>  // b.none
    7338:	add	x0, x1, #0x10
    733c:	str	x0, [x1]
    7340:	ldr	x0, [sp, #136]
    7344:	cmp	x0, x23
    7348:	b.eq	787c <gcc_c_fe_context@@Base+0x1004>  // b.none
    734c:	str	x0, [x1]
    7350:	ldr	x0, [sp, #152]
    7354:	str	x0, [x1, #16]
    7358:	ldr	x0, [x20, #8]
    735c:	ldr	x2, [sp, #144]
    7360:	str	x2, [x1, #8]
    7364:	add	x0, x0, #0x20
    7368:	str	x0, [x20, #8]
    736c:	ldr	w3, [sp, #84]
    7370:	adrp	x2, 17000 <xexit@@Base+0x1a0>
    7374:	add	x2, x2, #0x98
    7378:	mov	x1, #0x64                  	// #100
    737c:	mov	x0, x24
    7380:	add	x25, x21, #0x10
    7384:	bl	54f0 <snprintf@plt>
    7388:	str	x25, [sp, #104]
    738c:	mov	x0, x24
    7390:	bl	52c0 <strlen@plt>
    7394:	str	x0, [sp, #96]
    7398:	mov	x23, x0
    739c:	cmp	x0, #0xf
    73a0:	b.hi	7820 <gcc_c_fe_context@@Base+0xfa8>  // b.pmore
    73a4:	cmp	x0, #0x1
    73a8:	b.ne	77e4 <gcc_c_fe_context@@Base+0xf6c>  // b.any
    73ac:	ldrb	w1, [sp, #136]
    73b0:	mov	x0, x25
    73b4:	strb	w1, [sp, #120]
    73b8:	str	x23, [sp, #112]
    73bc:	strb	wzr, [x0, x23]
    73c0:	ldp	x1, x0, [x20, #8]
    73c4:	cmp	x1, x0
    73c8:	b.eq	7948 <gcc_c_fe_context@@Base+0x10d0>  // b.none
    73cc:	add	x0, x1, #0x10
    73d0:	str	x0, [x1]
    73d4:	add	x0, x21, #0x10
    73d8:	ldr	x2, [sp, #104]
    73dc:	cmp	x2, x0
    73e0:	b.eq	7870 <gcc_c_fe_context@@Base+0xff8>  // b.none
    73e4:	str	x2, [x1]
    73e8:	ldr	x0, [sp, #120]
    73ec:	str	x0, [x1, #16]
    73f0:	ldr	x23, [x20, #8]
    73f4:	ldr	x0, [sp, #112]
    73f8:	str	x0, [x1, #8]
    73fc:	add	x23, x23, #0x20
    7400:	str	x23, [x20, #8]
    7404:	ldr	x0, [x20, #16]
    7408:	cmp	x0, x23
    740c:	b.eq	7850 <gcc_c_fe_context@@Base+0xfd8>  // b.none
    7410:	add	x0, x23, #0x10
    7414:	ldr	x24, [x19, #96]
    7418:	str	x0, [x23]
    741c:	ldr	x25, [x19, #88]
    7420:	cmn	x25, x24
    7424:	ccmp	x25, #0x0, #0x0, ne  // ne = any
    7428:	b.eq	7518 <gcc_c_fe_context@@Base+0xca0>  // b.none
    742c:	str	x24, [sp, #104]
    7430:	cmp	x24, #0xf
    7434:	b.hi	78a8 <gcc_c_fe_context@@Base+0x1030>  // b.pmore
    7438:	cmp	x24, #0x1
    743c:	b.ne	78a0 <gcc_c_fe_context@@Base+0x1028>  // b.any
    7440:	ldrb	w1, [x25]
    7444:	strb	w1, [x23, #16]
    7448:	str	x24, [x23, #8]
    744c:	strb	wzr, [x0, x24]
    7450:	ldr	x0, [x20, #8]
    7454:	add	x0, x0, #0x20
    7458:	str	x0, [x20, #8]
    745c:	ldp	x1, x3, [x20, #8]
    7460:	add	x0, x21, #0x10
    7464:	mov	w2, #0x632d                	// #25389
    7468:	mov	x4, #0x2                   	// #2
    746c:	stp	x0, x4, [sp, #104]
    7470:	strh	w2, [sp, #120]
    7474:	strb	wzr, [sp, #122]
    7478:	cmp	x1, x3
    747c:	b.eq	7924 <gcc_c_fe_context@@Base+0x10ac>  // b.none
    7480:	add	x2, x1, #0x10
    7484:	str	x2, [x1]
    7488:	ldr	x2, [sp, #104]
    748c:	cmp	x2, x0
    7490:	b.eq	7894 <gcc_c_fe_context@@Base+0x101c>  // b.none
    7494:	str	x2, [x1]
    7498:	ldr	x0, [sp, #120]
    749c:	str	x0, [x1, #16]
    74a0:	ldr	x0, [x20, #8]
    74a4:	ldr	x2, [sp, #112]
    74a8:	str	x2, [x1, #8]
    74ac:	add	x0, x0, #0x20
    74b0:	str	x0, [x20, #8]
    74b4:	ldp	x1, x3, [x20, #8]
    74b8:	add	x0, x21, #0x10
    74bc:	mov	w2, #0x6f2d                	// #28461
    74c0:	mov	x4, #0x2                   	// #2
    74c4:	stp	x0, x4, [sp, #104]
    74c8:	strh	w2, [sp, #120]
    74cc:	strb	wzr, [sp, #122]
    74d0:	cmp	x1, x3
    74d4:	b.eq	7900 <gcc_c_fe_context@@Base+0x1088>  // b.none
    74d8:	add	x2, x1, #0x10
    74dc:	str	x2, [x1]
    74e0:	ldr	x2, [sp, #104]
    74e4:	cmp	x2, x0
    74e8:	b.eq	7888 <gcc_c_fe_context@@Base+0x1010>  // b.none
    74ec:	str	x2, [x1]
    74f0:	ldr	x0, [sp, #120]
    74f4:	str	x0, [x1, #16]
    74f8:	ldr	x0, [x20, #8]
    74fc:	ldr	x2, [sp, #112]
    7500:	str	x2, [x1, #8]
    7504:	add	x0, x0, #0x20
    7508:	str	x0, [x20, #8]
    750c:	add	x24, x21, #0x10
    7510:	str	x24, [sp, #104]
    7514:	cbnz	x22, 7524 <gcc_c_fe_context@@Base+0xcac>
    7518:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    751c:	add	x0, x0, #0xef8
    7520:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    7524:	mov	x0, x22
    7528:	bl	52c0 <strlen@plt>
    752c:	str	x0, [sp, #96]
    7530:	mov	x23, x0
    7534:	cmp	x0, #0xf
    7538:	b.hi	77f0 <gcc_c_fe_context@@Base+0xf78>  // b.pmore
    753c:	cmp	x23, #0x1
    7540:	b.ne	77d8 <gcc_c_fe_context@@Base+0xf60>  // b.any
    7544:	ldrb	w1, [x22]
    7548:	mov	x0, x24
    754c:	strb	w1, [sp, #120]
    7550:	str	x23, [sp, #112]
    7554:	strb	wzr, [x0, x23]
    7558:	ldp	x1, x0, [x20, #8]
    755c:	cmp	x1, x0
    7560:	b.eq	7970 <gcc_c_fe_context@@Base+0x10f8>  // b.none
    7564:	add	x0, x1, #0x10
    7568:	str	x0, [x1]
    756c:	add	x0, x21, #0x10
    7570:	ldr	x2, [sp, #104]
    7574:	cmp	x2, x0
    7578:	b.eq	7864 <gcc_c_fe_context@@Base+0xfec>  // b.none
    757c:	str	x2, [x1]
    7580:	ldr	x0, [sp, #120]
    7584:	str	x0, [x1, #16]
    7588:	ldr	x0, [x20, #8]
    758c:	ldr	x2, [sp, #112]
    7590:	str	x2, [x1, #8]
    7594:	add	x0, x0, #0x20
    7598:	str	x0, [x20, #8]
    759c:	ldrb	w0, [x19, #120]
    75a0:	cbz	w0, 75fc <gcc_c_fe_context@@Base+0xd84>
    75a4:	ldp	x1, x3, [x20, #8]
    75a8:	add	x0, x21, #0x10
    75ac:	mov	w2, #0x762d                	// #30253
    75b0:	mov	x4, #0x2                   	// #2
    75b4:	stp	x0, x4, [sp, #104]
    75b8:	strh	w2, [sp, #120]
    75bc:	strb	wzr, [sp, #122]
    75c0:	cmp	x1, x3
    75c4:	b.eq	79d8 <gcc_c_fe_context@@Base+0x1160>  // b.none
    75c8:	add	x2, x1, #0x10
    75cc:	str	x2, [x1]
    75d0:	ldr	x2, [sp, #104]
    75d4:	cmp	x2, x0
    75d8:	b.eq	7994 <gcc_c_fe_context@@Base+0x111c>  // b.none
    75dc:	str	x2, [x1]
    75e0:	ldr	x0, [sp, #120]
    75e4:	str	x0, [x1, #16]
    75e8:	ldr	x0, [x20, #8]
    75ec:	ldr	x2, [sp, #112]
    75f0:	str	x2, [x1, #8]
    75f4:	add	x0, x0, #0x20
    75f8:	str	x0, [x20, #8]
    75fc:	mov	x0, #0x20                  	// #32
    7600:	bl	5490 <_Znwm@plt>
    7604:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    7608:	mov	x20, x0
    760c:	ldr	w3, [sp, #80]
    7610:	add	x22, x0, #0x10
    7614:	ldr	x1, [x1, #3344]
    7618:	mov	x0, x22
    761c:	ldr	w2, [sp, #88]
    7620:	add	x1, x1, #0x10
    7624:	str	x1, [x20]
    7628:	stp	w3, w2, [x20, #8]
    762c:	bl	ec88 <gcc_cp_fe_context@@Base+0x4a10>
    7630:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    7634:	add	x3, x3, #0x3f0
    7638:	str	x3, [x20]
    763c:	mov	x0, x22
    7640:	str	x20, [x19, #16]
    7644:	adrp	x2, 6000 <_ZNSt6localeC1Ev@plt+0x870>
    7648:	str	x19, [x20, #24]
    764c:	add	x2, x2, #0x120
    7650:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    7654:	add	x1, x1, #0xb8
    7658:	bl	ecf0 <gcc_cp_fe_context@@Base+0x4a78>
    765c:	ldr	x0, [x19, #16]
    7660:	adrp	x2, 6000 <_ZNSt6localeC1Ev@plt+0x870>
    7664:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    7668:	add	x2, x2, #0x1f8
    766c:	add	x1, x1, #0xc8
    7670:	add	x0, x0, #0x10
    7674:	bl	ecf0 <gcc_cp_fe_context@@Base+0x4a78>
    7678:	ldp	x2, x0, [x19, #64]
    767c:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    7680:	sub	x0, x0, x2
    7684:	asr	x0, x0, #5
    7688:	add	x0, x0, #0x1
    768c:	cmp	x0, x1
    7690:	b.hi	7a9c <gcc_c_fe_context@@Base+0x1224>  // b.pmore
    7694:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    7698:	lsl	x0, x0, #3
    769c:	ldr	x1, [x1, #3256]
    76a0:	bl	56d0 <_ZnamRKSt9nothrow_t@plt>
    76a4:	mov	x20, x0
    76a8:	cbz	x0, 77b8 <gcc_c_fe_context@@Base+0xf40>
    76ac:	ldp	x0, x3, [x19, #64]
    76b0:	sub	x3, x3, x0
    76b4:	cmp	xzr, x3, asr #5
    76b8:	asr	x3, x3, #5
    76bc:	b.eq	79d0 <gcc_c_fe_context@@Base+0x1158>  // b.none
    76c0:	mov	w1, #0x0                   	// #0
    76c4:	mov	x2, #0x0                   	// #0
    76c8:	lsl	x4, x2, #5
    76cc:	add	w1, w1, #0x1
    76d0:	cmp	x3, w1, uxtw
    76d4:	ldr	x4, [x0, x4]
    76d8:	str	x4, [x20, x2, lsl #3]
    76dc:	mov	w2, w1
    76e0:	b.hi	76c8 <gcc_c_fe_context@@Base+0xe50>  // b.pmore
    76e4:	add	x3, x20, x3, lsl #3
    76e8:	str	xzr, [x3]
    76ec:	bl	55e0 <fork@plt>
    76f0:	mov	w22, w0
    76f4:	cmn	w0, #0x1
    76f8:	b.eq	79a0 <gcc_c_fe_context@@Base+0x1128>  // b.none
    76fc:	cbz	w0, 79fc <gcc_c_fe_context@@Base+0x1184>
    7700:	ldr	w0, [sp, #84]
    7704:	bl	5610 <close@plt>
    7708:	ldr	w0, [sp, #92]
    770c:	bl	5610 <close@plt>
    7710:	ldr	x0, [x19, #16]
    7714:	mov	w1, #0x48                  	// #72
    7718:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    771c:	cbnz	w0, 7784 <gcc_c_fe_context@@Base+0xf0c>
    7720:	mov	w19, #0x0                   	// #0
    7724:	ldr	w0, [sp, #80]
    7728:	bl	5610 <close@plt>
    772c:	ldr	w0, [sp, #88]
    7730:	bl	5610 <close@plt>
    7734:	mov	x1, x21
    7738:	mov	w0, w22
    773c:	mov	w2, #0x0                   	// #0
    7740:	bl	5310 <waitpid@plt>
    7744:	cmn	w0, #0x1
    7748:	b.eq	77a8 <gcc_c_fe_context@@Base+0xf30>  // b.none
    774c:	ldr	w1, [sp, #104]
    7750:	cmp	w19, #0x0
    7754:	cset	w20, ne  // ne = any
    7758:	and	w0, w1, #0x7f
    775c:	ubfx	x1, x1, #8, #8
    7760:	orr	w1, w1, w0
    7764:	cbnz	w1, 77b8 <gcc_c_fe_context@@Base+0xf40>
    7768:	mov	w0, w20
    776c:	ldp	x19, x20, [sp, #16]
    7770:	ldp	x21, x22, [sp, #32]
    7774:	ldp	x23, x24, [sp, #48]
    7778:	ldr	x25, [sp, #64]
    777c:	ldp	x29, x30, [sp], #240
    7780:	ret
    7784:	ldr	x0, [x19, #16]
    7788:	mov	x1, #0x1                   	// #1
    778c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7790:	cbz	w0, 7720 <gcc_c_fe_context@@Base+0xea8>
    7794:	ldr	x0, [x19, #16]
    7798:	mov	w1, #0x0                   	// #0
    779c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    77a0:	mov	w19, w0
    77a4:	b	7724 <gcc_c_fe_context@@Base+0xeac>
    77a8:	bl	5570 <__errno_location@plt>
    77ac:	ldr	w0, [x0]
    77b0:	cmp	w0, #0x4
    77b4:	b.eq	774c <gcc_c_fe_context@@Base+0xed4>  // b.none
    77b8:	mov	w20, #0x0                   	// #0
    77bc:	mov	w0, w20
    77c0:	ldp	x19, x20, [sp, #16]
    77c4:	ldp	x21, x22, [sp, #32]
    77c8:	ldp	x23, x24, [sp, #48]
    77cc:	ldr	x25, [sp, #64]
    77d0:	ldp	x29, x30, [sp], #240
    77d4:	ret
    77d8:	mov	x0, x24
    77dc:	cbz	x23, 7550 <gcc_c_fe_context@@Base+0xcd8>
    77e0:	b	780c <gcc_c_fe_context@@Base+0xf94>
    77e4:	mov	x0, x25
    77e8:	cbz	x23, 73b8 <gcc_c_fe_context@@Base+0xb40>
    77ec:	b	783c <gcc_c_fe_context@@Base+0xfc4>
    77f0:	add	x1, sp, #0x60
    77f4:	mov	x0, x21
    77f8:	mov	x2, #0x0                   	// #0
    77fc:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    7800:	ldr	x1, [sp, #96]
    7804:	str	x0, [sp, #104]
    7808:	str	x1, [sp, #120]
    780c:	mov	x2, x23
    7810:	mov	x1, x22
    7814:	bl	5210 <memcpy@plt>
    7818:	ldp	x23, x0, [sp, #96]
    781c:	b	7550 <gcc_c_fe_context@@Base+0xcd8>
    7820:	add	x1, sp, #0x60
    7824:	mov	x0, x21
    7828:	mov	x2, #0x0                   	// #0
    782c:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    7830:	ldr	x1, [sp, #96]
    7834:	str	x0, [sp, #104]
    7838:	str	x1, [sp, #120]
    783c:	mov	x2, x23
    7840:	mov	x1, x24
    7844:	bl	5210 <memcpy@plt>
    7848:	ldp	x23, x0, [sp, #96]
    784c:	b	73b8 <gcc_c_fe_context@@Base+0xb40>
    7850:	mov	x1, x23
    7854:	add	x2, x19, #0x58
    7858:	mov	x0, x20
    785c:	bl	5510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    7860:	b	745c <gcc_c_fe_context@@Base+0xbe4>
    7864:	ldp	x2, x3, [sp, #120]
    7868:	stp	x2, x3, [x1, #16]
    786c:	b	7588 <gcc_c_fe_context@@Base+0xd10>
    7870:	ldp	x2, x3, [sp, #120]
    7874:	stp	x2, x3, [x1, #16]
    7878:	b	73f0 <gcc_c_fe_context@@Base+0xb78>
    787c:	ldp	x2, x3, [sp, #152]
    7880:	stp	x2, x3, [x1, #16]
    7884:	b	7358 <gcc_c_fe_context@@Base+0xae0>
    7888:	ldp	x2, x3, [sp, #120]
    788c:	stp	x2, x3, [x1, #16]
    7890:	b	74f8 <gcc_c_fe_context@@Base+0xc80>
    7894:	ldp	x2, x3, [sp, #120]
    7898:	stp	x2, x3, [x1, #16]
    789c:	b	74a0 <gcc_c_fe_context@@Base+0xc28>
    78a0:	cbz	x24, 7448 <gcc_c_fe_context@@Base+0xbd0>
    78a4:	b	78c4 <gcc_c_fe_context@@Base+0x104c>
    78a8:	mov	x1, x21
    78ac:	mov	x0, x23
    78b0:	mov	x2, #0x0                   	// #0
    78b4:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    78b8:	ldr	x1, [sp, #104]
    78bc:	str	x0, [x23]
    78c0:	str	x1, [x23, #16]
    78c4:	mov	x2, x24
    78c8:	mov	x1, x25
    78cc:	bl	5210 <memcpy@plt>
    78d0:	ldr	x0, [x23]
    78d4:	ldr	x24, [sp, #104]
    78d8:	b	7448 <gcc_c_fe_context@@Base+0xbd0>
    78dc:	mov	x2, x24
    78e0:	mov	x0, x20
    78e4:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    78e8:	ldr	x0, [sp, #136]
    78ec:	add	x1, x24, #0x10
    78f0:	cmp	x0, x1
    78f4:	b.eq	736c <gcc_c_fe_context@@Base+0xaf4>  // b.none
    78f8:	bl	5480 <_ZdlPv@plt>
    78fc:	b	736c <gcc_c_fe_context@@Base+0xaf4>
    7900:	mov	x2, x21
    7904:	mov	x0, x20
    7908:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    790c:	ldr	x0, [sp, #104]
    7910:	add	x1, x21, #0x10
    7914:	cmp	x0, x1
    7918:	b.eq	750c <gcc_c_fe_context@@Base+0xc94>  // b.none
    791c:	bl	5480 <_ZdlPv@plt>
    7920:	b	750c <gcc_c_fe_context@@Base+0xc94>
    7924:	mov	x2, x21
    7928:	mov	x0, x20
    792c:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    7930:	ldr	x0, [sp, #104]
    7934:	add	x1, x21, #0x10
    7938:	cmp	x0, x1
    793c:	b.eq	74b4 <gcc_c_fe_context@@Base+0xc3c>  // b.none
    7940:	bl	5480 <_ZdlPv@plt>
    7944:	b	74b4 <gcc_c_fe_context@@Base+0xc3c>
    7948:	mov	x2, x21
    794c:	mov	x0, x20
    7950:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    7954:	ldr	x0, [sp, #104]
    7958:	add	x1, x21, #0x10
    795c:	cmp	x0, x1
    7960:	b.eq	7968 <gcc_c_fe_context@@Base+0x10f0>  // b.none
    7964:	bl	5480 <_ZdlPv@plt>
    7968:	ldr	x23, [x20, #8]
    796c:	b	7404 <gcc_c_fe_context@@Base+0xb8c>
    7970:	mov	x2, x21
    7974:	mov	x0, x20
    7978:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    797c:	ldr	x0, [sp, #104]
    7980:	add	x1, x21, #0x10
    7984:	cmp	x0, x1
    7988:	b.eq	759c <gcc_c_fe_context@@Base+0xd24>  // b.none
    798c:	bl	5480 <_ZdlPv@plt>
    7990:	b	759c <gcc_c_fe_context@@Base+0xd24>
    7994:	ldp	x2, x3, [sp, #120]
    7998:	stp	x2, x3, [x1, #16]
    799c:	b	75e8 <gcc_c_fe_context@@Base+0xd70>
    79a0:	ldr	w0, [sp, #80]
    79a4:	mov	w20, #0x0                   	// #0
    79a8:	bl	5610 <close@plt>
    79ac:	ldr	w0, [sp, #84]
    79b0:	bl	5610 <close@plt>
    79b4:	ldr	w0, [sp, #88]
    79b8:	bl	5610 <close@plt>
    79bc:	ldr	w0, [sp, #92]
    79c0:	bl	5610 <close@plt>
    79c4:	ldp	x23, x24, [sp, #48]
    79c8:	ldr	x25, [sp, #64]
    79cc:	b	726c <gcc_c_fe_context@@Base+0x9f4>
    79d0:	mov	x3, x20
    79d4:	b	76e8 <gcc_c_fe_context@@Base+0xe70>
    79d8:	mov	x0, x20
    79dc:	mov	x2, x21
    79e0:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    79e4:	ldr	x0, [sp, #104]
    79e8:	add	x1, x21, #0x10
    79ec:	cmp	x0, x1
    79f0:	b.eq	75fc <gcc_c_fe_context@@Base+0xd84>  // b.none
    79f4:	bl	5480 <_ZdlPv@plt>
    79f8:	b	75fc <gcc_c_fe_context@@Base+0xd84>
    79fc:	ldr	w0, [sp, #92]
    7a00:	mov	w1, #0x1                   	// #1
    7a04:	bl	5280 <dup2@plt>
    7a08:	ldr	w0, [sp, #92]
    7a0c:	mov	w1, #0x2                   	// #2
    7a10:	bl	5280 <dup2@plt>
    7a14:	ldr	w0, [sp, #88]
    7a18:	bl	5610 <close@plt>
    7a1c:	ldr	w0, [sp, #92]
    7a20:	bl	5610 <close@plt>
    7a24:	ldr	w0, [sp, #80]
    7a28:	bl	5610 <close@plt>
    7a2c:	ldr	x0, [x20]
    7a30:	mov	x1, x20
    7a34:	bl	5240 <execvp@plt>
    7a38:	mov	w0, #0x7f                  	// #127
    7a3c:	bl	53d0 <_exit@plt>
    7a40:	ldr	x1, [sp, #104]
    7a44:	add	x21, x21, #0x10
    7a48:	mov	x19, x0
    7a4c:	cmp	x1, x21
    7a50:	b.eq	7a5c <gcc_c_fe_context@@Base+0x11e4>  // b.none
    7a54:	mov	x0, x1
    7a58:	bl	5480 <_ZdlPv@plt>
    7a5c:	mov	x0, x19
    7a60:	bl	5740 <_Unwind_Resume@plt>
    7a64:	b	7a40 <gcc_c_fe_context@@Base+0x11c8>
    7a68:	ldr	x1, [sp, #136]
    7a6c:	add	x24, x24, #0x10
    7a70:	mov	x19, x0
    7a74:	cmp	x1, x24
    7a78:	b.ne	7a54 <gcc_c_fe_context@@Base+0x11dc>  // b.any
    7a7c:	b	7a5c <gcc_c_fe_context@@Base+0x11e4>
    7a80:	b	7a40 <gcc_c_fe_context@@Base+0x11c8>
    7a84:	mov	x19, x0
    7a88:	mov	x1, #0x20                  	// #32
    7a8c:	mov	x0, x20
    7a90:	bl	54a0 <_ZdlPvm@plt>
    7a94:	b	7a5c <gcc_c_fe_context@@Base+0x11e4>
    7a98:	b	7a40 <gcc_c_fe_context@@Base+0x11c8>
    7a9c:	bl	5600 <__cxa_throw_bad_array_new_length@plt>
    7aa0:	b	7a40 <gcc_c_fe_context@@Base+0x11c8>
    7aa4:	nop
    7aa8:	cmp	w2, #0x0
    7aac:	cset	w2, ne  // ne = any
    7ab0:	strb	w2, [x0, #120]
    7ab4:	b	7228 <gcc_c_fe_context@@Base+0x9b0>
    7ab8:	ret
    7abc:	nop
    7ac0:	ldr	x0, [x0, #24]
    7ac4:	ldp	x2, x0, [x0, #48]
    7ac8:	mov	x16, x2
    7acc:	br	x16
    7ad0:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    7ad4:	add	x2, x1, #0x468
    7ad8:	mov	x1, x0
    7adc:	str	x2, [x0]
    7ae0:	ldr	x0, [x1, #16]!
    7ae4:	add	x1, x1, #0x10
    7ae8:	cmp	x0, x1
    7aec:	b.eq	7af4 <gcc_c_fe_context@@Base+0x127c>  // b.none
    7af0:	b	5480 <_ZdlPv@plt>
    7af4:	ret
    7af8:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    7afc:	add	x2, x1, #0x440
    7b00:	mov	x1, x0
    7b04:	str	x2, [x0]
    7b08:	ldr	x0, [x1, #16]!
    7b0c:	add	x1, x1, #0x10
    7b10:	cmp	x0, x1
    7b14:	b.eq	7b1c <gcc_c_fe_context@@Base+0x12a4>  // b.none
    7b18:	b	5480 <_ZdlPv@plt>
    7b1c:	ret
    7b20:	mov	x1, #0x10                  	// #16
    7b24:	b	54a0 <_ZdlPvm@plt>
    7b28:	stp	x29, x30, [sp, #-32]!
    7b2c:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    7b30:	mov	x29, sp
    7b34:	str	x19, [sp, #16]
    7b38:	mov	x19, x0
    7b3c:	add	x0, x1, #0x468
    7b40:	mov	x1, x19
    7b44:	str	x0, [x19]
    7b48:	ldr	x0, [x1, #16]!
    7b4c:	add	x1, x1, #0x10
    7b50:	cmp	x0, x1
    7b54:	b.eq	7b5c <gcc_c_fe_context@@Base+0x12e4>  // b.none
    7b58:	bl	5480 <_ZdlPv@plt>
    7b5c:	mov	x0, x19
    7b60:	mov	x1, #0x30                  	// #48
    7b64:	ldr	x19, [sp, #16]
    7b68:	ldp	x29, x30, [sp], #32
    7b6c:	b	54a0 <_ZdlPvm@plt>
    7b70:	stp	x29, x30, [sp, #-32]!
    7b74:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    7b78:	mov	x29, sp
    7b7c:	str	x19, [sp, #16]
    7b80:	mov	x19, x0
    7b84:	add	x0, x1, #0x440
    7b88:	mov	x1, x19
    7b8c:	str	x0, [x19]
    7b90:	ldr	x0, [x1, #16]!
    7b94:	add	x1, x1, #0x10
    7b98:	cmp	x0, x1
    7b9c:	b.eq	7ba4 <gcc_c_fe_context@@Base+0x132c>  // b.none
    7ba0:	bl	5480 <_ZdlPv@plt>
    7ba4:	mov	x0, x19
    7ba8:	mov	x1, #0x30                  	// #48
    7bac:	ldr	x19, [sp, #16]
    7bb0:	ldp	x29, x30, [sp], #32
    7bb4:	b	54a0 <_ZdlPvm@plt>
    7bb8:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    7bbc:	add	x1, x1, #0x3f0
    7bc0:	str	x1, [x0]
    7bc4:	b	ed80 <gcc_cp_fe_context@@Base+0x4b08>
    7bc8:	stp	x29, x30, [sp, #-32]!
    7bcc:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    7bd0:	add	x1, x1, #0x3f0
    7bd4:	mov	x29, sp
    7bd8:	str	x19, [sp, #16]
    7bdc:	mov	x19, x0
    7be0:	str	x1, [x0]
    7be4:	bl	ed80 <gcc_cp_fe_context@@Base+0x4b08>
    7be8:	mov	x0, x19
    7bec:	mov	x1, #0x20                  	// #32
    7bf0:	ldr	x19, [sp, #16]
    7bf4:	ldp	x29, x30, [sp], #32
    7bf8:	b	54a0 <_ZdlPvm@plt>
    7bfc:	nop
    7c00:	stp	x29, x30, [sp, #-112]!
    7c04:	adrp	x8, 2c000 <xexit@@Base+0x151a0>
    7c08:	mov	x29, sp
    7c0c:	ldr	x8, [x8, #3288]
    7c10:	stp	x25, x26, [sp, #64]
    7c14:	mov	w26, w7
    7c18:	ldr	x25, [x0, #16]
    7c1c:	stp	x19, x20, [sp, #16]
    7c20:	mov	x19, x1
    7c24:	mov	w20, w2
    7c28:	mov	x0, x25
    7c2c:	mov	w1, #0x51                  	// #81
    7c30:	stp	x21, x22, [sp, #32]
    7c34:	mov	x21, x3
    7c38:	mov	x22, x4
    7c3c:	stp	x23, x24, [sp, #48]
    7c40:	mov	x23, x5
    7c44:	mov	x24, x6
    7c48:	str	x27, [sp, #80]
    7c4c:	ldr	x27, [x8]
    7c50:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    7c54:	cbnz	w0, 7c78 <gcc_c_fe_context@@Base+0x1400>
    7c58:	mov	x0, #0x0                   	// #0
    7c5c:	ldp	x19, x20, [sp, #16]
    7c60:	ldp	x21, x22, [sp, #32]
    7c64:	ldp	x23, x24, [sp, #48]
    7c68:	ldp	x25, x26, [sp, #64]
    7c6c:	ldr	x27, [sp, #80]
    7c70:	ldp	x29, x30, [sp], #112
    7c74:	ret
    7c78:	mov	x1, x27
    7c7c:	mov	x0, x25
    7c80:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    7c84:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7c88:	mov	x0, x25
    7c8c:	mov	x1, #0x7                   	// #7
    7c90:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7c94:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7c98:	mov	x1, x19
    7c9c:	mov	x0, x25
    7ca0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    7ca4:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7ca8:	mov	w1, w20
    7cac:	mov	x0, x25
    7cb0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7cb4:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7cb8:	mov	x1, x21
    7cbc:	mov	x0, x25
    7cc0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7cc4:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7cc8:	mov	x1, x22
    7ccc:	mov	x0, x25
    7cd0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    7cd4:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7cd8:	mov	x1, x23
    7cdc:	mov	x0, x25
    7ce0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7ce4:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7ce8:	mov	x1, x24
    7cec:	mov	x0, x25
    7cf0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    7cf4:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7cf8:	mov	w1, w26
    7cfc:	mov	x0, x25
    7d00:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7d04:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7d08:	mov	x0, x25
    7d0c:	mov	w1, #0x1                   	// #1
    7d10:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    7d14:	cbz	w0, 7c58 <gcc_c_fe_context@@Base+0x13e0>
    7d18:	add	x1, sp, #0x68
    7d1c:	mov	x0, x25
    7d20:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    7d24:	cmp	w0, #0x0
    7d28:	ldr	x1, [sp, #104]
    7d2c:	csel	x0, xzr, x1, eq  // eq = none
    7d30:	b	7c5c <gcc_c_fe_context@@Base+0x13e4>
    7d34:	nop
    7d38:	stp	x29, x30, [sp, #-64]!
    7d3c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    7d40:	mov	x29, sp
    7d44:	ldr	x2, [x2, #3520]
    7d48:	stp	x19, x20, [sp, #16]
    7d4c:	mov	x19, x1
    7d50:	ldr	x20, [x0, #16]
    7d54:	mov	w1, #0x51                  	// #81
    7d58:	str	x21, [sp, #32]
    7d5c:	mov	x0, x20
    7d60:	ldr	x21, [x2]
    7d64:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    7d68:	cbnz	w0, 7d80 <gcc_c_fe_context@@Base+0x1508>
    7d6c:	mov	x0, #0x0                   	// #0
    7d70:	ldp	x19, x20, [sp, #16]
    7d74:	ldr	x21, [sp, #32]
    7d78:	ldp	x29, x30, [sp], #64
    7d7c:	ret
    7d80:	mov	x1, x21
    7d84:	mov	x0, x20
    7d88:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    7d8c:	cbz	w0, 7d6c <gcc_c_fe_context@@Base+0x14f4>
    7d90:	mov	x0, x20
    7d94:	mov	x1, #0x1                   	// #1
    7d98:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7d9c:	cbz	w0, 7d6c <gcc_c_fe_context@@Base+0x14f4>
    7da0:	mov	x1, x19
    7da4:	mov	x0, x20
    7da8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7dac:	cbz	w0, 7d6c <gcc_c_fe_context@@Base+0x14f4>
    7db0:	mov	x0, x20
    7db4:	mov	w1, #0x1                   	// #1
    7db8:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    7dbc:	cbz	w0, 7d6c <gcc_c_fe_context@@Base+0x14f4>
    7dc0:	add	x1, sp, #0x38
    7dc4:	mov	x0, x20
    7dc8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    7dcc:	cmp	w0, #0x0
    7dd0:	ldr	x1, [sp, #56]
    7dd4:	csel	x0, xzr, x1, eq  // eq = none
    7dd8:	b	7d70 <gcc_c_fe_context@@Base+0x14f8>
    7ddc:	nop
    7de0:	stp	x29, x30, [sp, #-80]!
    7de4:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    7de8:	mov	x29, sp
    7dec:	ldr	x4, [x4, #3944]
    7df0:	stp	x19, x20, [sp, #16]
    7df4:	mov	w20, w3
    7df8:	ldr	x19, [x0, #16]
    7dfc:	stp	x21, x22, [sp, #32]
    7e00:	mov	x22, x1
    7e04:	mov	x21, x2
    7e08:	mov	x0, x19
    7e0c:	mov	w1, #0x51                  	// #81
    7e10:	str	x23, [sp, #48]
    7e14:	ldr	x23, [x4]
    7e18:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    7e1c:	cbnz	w0, 7e38 <gcc_c_fe_context@@Base+0x15c0>
    7e20:	mov	x0, #0x0                   	// #0
    7e24:	ldp	x19, x20, [sp, #16]
    7e28:	ldp	x21, x22, [sp, #32]
    7e2c:	ldr	x23, [sp, #48]
    7e30:	ldp	x29, x30, [sp], #80
    7e34:	ret
    7e38:	mov	x1, x23
    7e3c:	mov	x0, x19
    7e40:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    7e44:	cbz	w0, 7e20 <gcc_c_fe_context@@Base+0x15a8>
    7e48:	mov	x0, x19
    7e4c:	mov	x1, #0x3                   	// #3
    7e50:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7e54:	cbz	w0, 7e20 <gcc_c_fe_context@@Base+0x15a8>
    7e58:	mov	x1, x22
    7e5c:	mov	x0, x19
    7e60:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7e64:	cbz	w0, 7e20 <gcc_c_fe_context@@Base+0x15a8>
    7e68:	mov	x1, x21
    7e6c:	mov	x0, x19
    7e70:	bl	f440 <gcc_cp_fe_context@@Base+0x51c8>
    7e74:	cbz	w0, 7e20 <gcc_c_fe_context@@Base+0x15a8>
    7e78:	sxtw	x1, w20
    7e7c:	mov	x0, x19
    7e80:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7e84:	cbz	w0, 7e20 <gcc_c_fe_context@@Base+0x15a8>
    7e88:	mov	x0, x19
    7e8c:	mov	w1, #0x1                   	// #1
    7e90:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    7e94:	cbz	w0, 7e20 <gcc_c_fe_context@@Base+0x15a8>
    7e98:	add	x1, sp, #0x48
    7e9c:	mov	x0, x19
    7ea0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    7ea4:	cmp	w0, #0x0
    7ea8:	ldr	x1, [sp, #72]
    7eac:	csel	x0, xzr, x1, eq  // eq = none
    7eb0:	b	7e24 <gcc_c_fe_context@@Base+0x15ac>
    7eb4:	nop
    7eb8:	stp	x29, x30, [sp, #-64]!
    7ebc:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    7ec0:	mov	x29, sp
    7ec4:	ldr	x2, [x2, #3648]
    7ec8:	stp	x19, x20, [sp, #16]
    7ecc:	mov	x19, x1
    7ed0:	ldr	x20, [x0, #16]
    7ed4:	mov	w1, #0x51                  	// #81
    7ed8:	str	x21, [sp, #32]
    7edc:	mov	x0, x20
    7ee0:	ldr	x21, [x2]
    7ee4:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    7ee8:	cbnz	w0, 7f00 <gcc_c_fe_context@@Base+0x1688>
    7eec:	mov	w0, #0x0                   	// #0
    7ef0:	ldp	x19, x20, [sp, #16]
    7ef4:	ldr	x21, [sp, #32]
    7ef8:	ldp	x29, x30, [sp], #64
    7efc:	ret
    7f00:	mov	x1, x21
    7f04:	mov	x0, x20
    7f08:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    7f0c:	cbz	w0, 7eec <gcc_c_fe_context@@Base+0x1674>
    7f10:	mov	x0, x20
    7f14:	mov	x1, #0x1                   	// #1
    7f18:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7f1c:	cbz	w0, 7eec <gcc_c_fe_context@@Base+0x1674>
    7f20:	mov	x1, x19
    7f24:	mov	x0, x20
    7f28:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7f2c:	cbz	w0, 7eec <gcc_c_fe_context@@Base+0x1674>
    7f30:	mov	x0, x20
    7f34:	mov	w1, #0x1                   	// #1
    7f38:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    7f3c:	cbz	w0, 7eec <gcc_c_fe_context@@Base+0x1674>
    7f40:	add	x1, sp, #0x38
    7f44:	mov	x0, x20
    7f48:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    7f4c:	cmp	w0, #0x0
    7f50:	ldr	w1, [sp, #56]
    7f54:	mov	w0, #0x0                   	// #0
    7f58:	csel	w0, w0, w1, eq  // eq = none
    7f5c:	b	7ef0 <gcc_c_fe_context@@Base+0x1678>
    7f60:	stp	x29, x30, [sp, #-80]!
    7f64:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
    7f68:	mov	x29, sp
    7f6c:	ldr	x5, [x5, #3624]
    7f70:	stp	x19, x20, [sp, #16]
    7f74:	mov	w20, w4
    7f78:	ldr	x19, [x0, #16]
    7f7c:	stp	x21, x22, [sp, #32]
    7f80:	mov	x22, x2
    7f84:	mov	x21, x3
    7f88:	mov	x0, x19
    7f8c:	stp	x23, x24, [sp, #48]
    7f90:	mov	x23, x1
    7f94:	mov	w1, #0x51                  	// #81
    7f98:	ldr	x24, [x5]
    7f9c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    7fa0:	cbnz	w0, 7fbc <gcc_c_fe_context@@Base+0x1744>
    7fa4:	mov	w0, #0x0                   	// #0
    7fa8:	ldp	x19, x20, [sp, #16]
    7fac:	ldp	x21, x22, [sp, #32]
    7fb0:	ldp	x23, x24, [sp, #48]
    7fb4:	ldp	x29, x30, [sp], #80
    7fb8:	ret
    7fbc:	mov	x1, x24
    7fc0:	mov	x0, x19
    7fc4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    7fc8:	cbz	w0, 7fa4 <gcc_c_fe_context@@Base+0x172c>
    7fcc:	mov	x0, x19
    7fd0:	mov	x1, #0x4                   	// #4
    7fd4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7fd8:	cbz	w0, 7fa4 <gcc_c_fe_context@@Base+0x172c>
    7fdc:	mov	x1, x23
    7fe0:	mov	x0, x19
    7fe4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    7fe8:	cbz	w0, 7fa4 <gcc_c_fe_context@@Base+0x172c>
    7fec:	mov	x1, x22
    7ff0:	mov	x0, x19
    7ff4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    7ff8:	cbz	w0, 7fa4 <gcc_c_fe_context@@Base+0x172c>
    7ffc:	mov	x1, x21
    8000:	mov	x0, x19
    8004:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8008:	cbz	w0, 7fa4 <gcc_c_fe_context@@Base+0x172c>
    800c:	mov	w1, w20
    8010:	mov	x0, x19
    8014:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8018:	cbz	w0, 7fa4 <gcc_c_fe_context@@Base+0x172c>
    801c:	mov	x0, x19
    8020:	mov	w1, #0x1                   	// #1
    8024:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8028:	cbz	w0, 7fa4 <gcc_c_fe_context@@Base+0x172c>
    802c:	add	x1, sp, #0x48
    8030:	mov	x0, x19
    8034:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8038:	cmp	w0, #0x0
    803c:	ldr	w1, [sp, #72]
    8040:	mov	w0, #0x0                   	// #0
    8044:	csel	w0, w0, w1, eq  // eq = none
    8048:	b	7fa8 <gcc_c_fe_context@@Base+0x1730>
    804c:	nop
    8050:	stp	x29, x30, [sp, #-64]!
    8054:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    8058:	mov	x29, sp
    805c:	ldr	x3, [x3, #4040]
    8060:	stp	x21, x22, [sp, #32]
    8064:	ldr	x21, [x0, #16]
    8068:	stp	x19, x20, [sp, #16]
    806c:	mov	x19, x1
    8070:	mov	w20, w2
    8074:	mov	x0, x21
    8078:	mov	w1, #0x51                  	// #81
    807c:	ldr	x22, [x3]
    8080:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8084:	cbnz	w0, 809c <gcc_c_fe_context@@Base+0x1824>
    8088:	mov	w0, #0x0                   	// #0
    808c:	ldp	x19, x20, [sp, #16]
    8090:	ldp	x21, x22, [sp, #32]
    8094:	ldp	x29, x30, [sp], #64
    8098:	ret
    809c:	mov	x1, x22
    80a0:	mov	x0, x21
    80a4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    80a8:	cbz	w0, 8088 <gcc_c_fe_context@@Base+0x1810>
    80ac:	mov	x0, x21
    80b0:	mov	x1, #0x2                   	// #2
    80b4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    80b8:	cbz	w0, 8088 <gcc_c_fe_context@@Base+0x1810>
    80bc:	mov	x1, x19
    80c0:	mov	x0, x21
    80c4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    80c8:	cbz	w0, 8088 <gcc_c_fe_context@@Base+0x1810>
    80cc:	sxtw	x1, w20
    80d0:	mov	x0, x21
    80d4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    80d8:	cbz	w0, 8088 <gcc_c_fe_context@@Base+0x1810>
    80dc:	mov	x0, x21
    80e0:	mov	w1, #0x1                   	// #1
    80e4:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    80e8:	cbz	w0, 8088 <gcc_c_fe_context@@Base+0x1810>
    80ec:	add	x1, sp, #0x38
    80f0:	mov	x0, x21
    80f4:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    80f8:	cmp	w0, #0x0
    80fc:	ldr	w1, [sp, #56]
    8100:	mov	w0, #0x0                   	// #0
    8104:	csel	w0, w0, w1, eq  // eq = none
    8108:	b	808c <gcc_c_fe_context@@Base+0x1814>
    810c:	nop
    8110:	stp	x29, x30, [sp, #-80]!
    8114:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    8118:	mov	x29, sp
    811c:	ldr	x4, [x4, #3832]
    8120:	stp	x19, x20, [sp, #16]
    8124:	mov	x20, x3
    8128:	ldr	x19, [x0, #16]
    812c:	stp	x21, x22, [sp, #32]
    8130:	mov	w22, w1
    8134:	mov	x21, x2
    8138:	mov	x0, x19
    813c:	mov	w1, #0x51                  	// #81
    8140:	str	x23, [sp, #48]
    8144:	ldr	x23, [x4]
    8148:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    814c:	cbnz	w0, 8168 <gcc_c_fe_context@@Base+0x18f0>
    8150:	mov	x0, #0x0                   	// #0
    8154:	ldp	x19, x20, [sp, #16]
    8158:	ldp	x21, x22, [sp, #32]
    815c:	ldr	x23, [sp, #48]
    8160:	ldp	x29, x30, [sp], #80
    8164:	ret
    8168:	mov	x1, x23
    816c:	mov	x0, x19
    8170:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8174:	cbz	w0, 8150 <gcc_c_fe_context@@Base+0x18d8>
    8178:	mov	x0, x19
    817c:	mov	x1, #0x3                   	// #3
    8180:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8184:	cbz	w0, 8150 <gcc_c_fe_context@@Base+0x18d8>
    8188:	sxtw	x1, w22
    818c:	mov	x0, x19
    8190:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8194:	cbz	w0, 8150 <gcc_c_fe_context@@Base+0x18d8>
    8198:	mov	x1, x21
    819c:	mov	x0, x19
    81a0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    81a4:	cbz	w0, 8150 <gcc_c_fe_context@@Base+0x18d8>
    81a8:	mov	x1, x20
    81ac:	mov	x0, x19
    81b0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    81b4:	cbz	w0, 8150 <gcc_c_fe_context@@Base+0x18d8>
    81b8:	mov	x0, x19
    81bc:	mov	w1, #0x1                   	// #1
    81c0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    81c4:	cbz	w0, 8150 <gcc_c_fe_context@@Base+0x18d8>
    81c8:	add	x1, sp, #0x48
    81cc:	mov	x0, x19
    81d0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    81d4:	cmp	w0, #0x0
    81d8:	ldr	x1, [sp, #72]
    81dc:	csel	x0, xzr, x1, eq  // eq = none
    81e0:	b	8154 <gcc_c_fe_context@@Base+0x18dc>
    81e4:	nop
    81e8:	stp	x29, x30, [sp, #-96]!
    81ec:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    81f0:	mov	x29, sp
    81f4:	ldr	x6, [x6, #3384]
    81f8:	stp	x21, x22, [sp, #32]
    81fc:	mov	w22, w5
    8200:	ldr	x21, [x0, #16]
    8204:	stp	x19, x20, [sp, #16]
    8208:	mov	x19, x1
    820c:	mov	x20, x2
    8210:	mov	x0, x21
    8214:	mov	w1, #0x51                  	// #81
    8218:	stp	x23, x24, [sp, #48]
    821c:	mov	x24, x3
    8220:	mov	x23, x4
    8224:	str	x25, [sp, #64]
    8228:	ldr	x25, [x6]
    822c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8230:	cbnz	w0, 8250 <gcc_c_fe_context@@Base+0x19d8>
    8234:	mov	w0, #0x0                   	// #0
    8238:	ldp	x19, x20, [sp, #16]
    823c:	ldp	x21, x22, [sp, #32]
    8240:	ldp	x23, x24, [sp, #48]
    8244:	ldr	x25, [sp, #64]
    8248:	ldp	x29, x30, [sp], #96
    824c:	ret
    8250:	mov	x1, x25
    8254:	mov	x0, x21
    8258:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    825c:	cbz	w0, 8234 <gcc_c_fe_context@@Base+0x19bc>
    8260:	mov	x0, x21
    8264:	mov	x1, #0x5                   	// #5
    8268:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    826c:	cbz	w0, 8234 <gcc_c_fe_context@@Base+0x19bc>
    8270:	mov	x1, x19
    8274:	mov	x0, x21
    8278:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    827c:	cbz	w0, 8234 <gcc_c_fe_context@@Base+0x19bc>
    8280:	mov	x1, x20
    8284:	mov	x0, x21
    8288:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    828c:	cbz	w0, 8234 <gcc_c_fe_context@@Base+0x19bc>
    8290:	mov	x1, x24
    8294:	mov	x0, x21
    8298:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    829c:	cbz	w0, 8234 <gcc_c_fe_context@@Base+0x19bc>
    82a0:	mov	x1, x23
    82a4:	mov	x0, x21
    82a8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    82ac:	cbz	w0, 8234 <gcc_c_fe_context@@Base+0x19bc>
    82b0:	mov	w1, w22
    82b4:	mov	x0, x21
    82b8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    82bc:	cbz	w0, 8234 <gcc_c_fe_context@@Base+0x19bc>
    82c0:	mov	x0, x21
    82c4:	mov	w1, #0x1                   	// #1
    82c8:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    82cc:	cbz	w0, 8234 <gcc_c_fe_context@@Base+0x19bc>
    82d0:	add	x1, sp, #0x58
    82d4:	mov	x0, x21
    82d8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    82dc:	cmp	w0, #0x0
    82e0:	ldr	w1, [sp, #88]
    82e4:	mov	w0, #0x0                   	// #0
    82e8:	csel	w0, w0, w1, eq  // eq = none
    82ec:	b	8238 <gcc_c_fe_context@@Base+0x19c0>
    82f0:	stp	x29, x30, [sp, #-80]!
    82f4:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    82f8:	mov	x29, sp
    82fc:	ldr	x4, [x4, #3424]
    8300:	stp	x19, x20, [sp, #16]
    8304:	mov	x20, x3
    8308:	ldr	x19, [x0, #16]
    830c:	stp	x21, x22, [sp, #32]
    8310:	mov	x22, x1
    8314:	mov	x21, x2
    8318:	mov	x0, x19
    831c:	mov	w1, #0x51                  	// #81
    8320:	str	x23, [sp, #48]
    8324:	ldr	x23, [x4]
    8328:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    832c:	cbnz	w0, 8348 <gcc_c_fe_context@@Base+0x1ad0>
    8330:	mov	w0, #0x0                   	// #0
    8334:	ldp	x19, x20, [sp, #16]
    8338:	ldp	x21, x22, [sp, #32]
    833c:	ldr	x23, [sp, #48]
    8340:	ldp	x29, x30, [sp], #80
    8344:	ret
    8348:	mov	x1, x23
    834c:	mov	x0, x19
    8350:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8354:	cbz	w0, 8330 <gcc_c_fe_context@@Base+0x1ab8>
    8358:	mov	x0, x19
    835c:	mov	x1, #0x3                   	// #3
    8360:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8364:	cbz	w0, 8330 <gcc_c_fe_context@@Base+0x1ab8>
    8368:	mov	x1, x22
    836c:	mov	x0, x19
    8370:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8374:	cbz	w0, 8330 <gcc_c_fe_context@@Base+0x1ab8>
    8378:	mov	x1, x21
    837c:	mov	x0, x19
    8380:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8384:	cbz	w0, 8330 <gcc_c_fe_context@@Base+0x1ab8>
    8388:	mov	x1, x20
    838c:	mov	x0, x19
    8390:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8394:	cbz	w0, 8330 <gcc_c_fe_context@@Base+0x1ab8>
    8398:	mov	x0, x19
    839c:	mov	w1, #0x1                   	// #1
    83a0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    83a4:	cbz	w0, 8330 <gcc_c_fe_context@@Base+0x1ab8>
    83a8:	add	x1, sp, #0x48
    83ac:	mov	x0, x19
    83b0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    83b4:	cmp	w0, #0x0
    83b8:	ldr	w1, [sp, #72]
    83bc:	mov	w0, #0x0                   	// #0
    83c0:	csel	w0, w0, w1, eq  // eq = none
    83c4:	b	8334 <gcc_c_fe_context@@Base+0x1abc>
    83c8:	stp	x29, x30, [sp, #-96]!
    83cc:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    83d0:	mov	x29, sp
    83d4:	ldr	x6, [x6, #3368]
    83d8:	stp	x21, x22, [sp, #32]
    83dc:	mov	x22, x5
    83e0:	ldr	x21, [x0, #16]
    83e4:	stp	x19, x20, [sp, #16]
    83e8:	mov	x19, x1
    83ec:	mov	x20, x2
    83f0:	mov	x0, x21
    83f4:	mov	w1, #0x51                  	// #81
    83f8:	stp	x23, x24, [sp, #48]
    83fc:	mov	x24, x3
    8400:	mov	x23, x4
    8404:	str	x25, [sp, #64]
    8408:	ldr	x25, [x6]
    840c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8410:	cbnz	w0, 8430 <gcc_c_fe_context@@Base+0x1bb8>
    8414:	mov	w0, #0x0                   	// #0
    8418:	ldp	x19, x20, [sp, #16]
    841c:	ldp	x21, x22, [sp, #32]
    8420:	ldp	x23, x24, [sp, #48]
    8424:	ldr	x25, [sp, #64]
    8428:	ldp	x29, x30, [sp], #96
    842c:	ret
    8430:	mov	x1, x25
    8434:	mov	x0, x21
    8438:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    843c:	cbz	w0, 8414 <gcc_c_fe_context@@Base+0x1b9c>
    8440:	mov	x0, x21
    8444:	mov	x1, #0x5                   	// #5
    8448:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    844c:	cbz	w0, 8414 <gcc_c_fe_context@@Base+0x1b9c>
    8450:	mov	x1, x19
    8454:	mov	x0, x21
    8458:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    845c:	cbz	w0, 8414 <gcc_c_fe_context@@Base+0x1b9c>
    8460:	mov	x1, x20
    8464:	mov	x0, x21
    8468:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    846c:	cbz	w0, 8414 <gcc_c_fe_context@@Base+0x1b9c>
    8470:	mov	x1, x24
    8474:	mov	x0, x21
    8478:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    847c:	cbz	w0, 8414 <gcc_c_fe_context@@Base+0x1b9c>
    8480:	mov	x1, x23
    8484:	mov	x0, x21
    8488:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    848c:	cbz	w0, 8414 <gcc_c_fe_context@@Base+0x1b9c>
    8490:	mov	x1, x22
    8494:	mov	x0, x21
    8498:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    849c:	cbz	w0, 8414 <gcc_c_fe_context@@Base+0x1b9c>
    84a0:	mov	x0, x21
    84a4:	mov	w1, #0x1                   	// #1
    84a8:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    84ac:	cbz	w0, 8414 <gcc_c_fe_context@@Base+0x1b9c>
    84b0:	add	x1, sp, #0x58
    84b4:	mov	x0, x21
    84b8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    84bc:	cmp	w0, #0x0
    84c0:	ldr	w1, [sp, #88]
    84c4:	mov	w0, #0x0                   	// #0
    84c8:	csel	w0, w0, w1, eq  // eq = none
    84cc:	b	8418 <gcc_c_fe_context@@Base+0x1ba0>
    84d0:	stp	x29, x30, [sp, #-48]!
    84d4:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    84d8:	mov	w1, #0x51                  	// #81
    84dc:	mov	x29, sp
    84e0:	ldr	x2, [x2, #3920]
    84e4:	stp	x19, x20, [sp, #16]
    84e8:	ldr	x19, [x0, #16]
    84ec:	ldr	x20, [x2]
    84f0:	mov	x0, x19
    84f4:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    84f8:	cbnz	w0, 850c <gcc_c_fe_context@@Base+0x1c94>
    84fc:	mov	x0, #0x0                   	// #0
    8500:	ldp	x19, x20, [sp, #16]
    8504:	ldp	x29, x30, [sp], #48
    8508:	ret
    850c:	mov	x1, x20
    8510:	mov	x0, x19
    8514:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8518:	cbz	w0, 84fc <gcc_c_fe_context@@Base+0x1c84>
    851c:	mov	x0, x19
    8520:	mov	x1, #0x0                   	// #0
    8524:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8528:	cbz	w0, 84fc <gcc_c_fe_context@@Base+0x1c84>
    852c:	mov	x0, x19
    8530:	mov	w1, #0x1                   	// #1
    8534:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8538:	cbz	w0, 84fc <gcc_c_fe_context@@Base+0x1c84>
    853c:	add	x1, sp, #0x28
    8540:	mov	x0, x19
    8544:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8548:	cmp	w0, #0x0
    854c:	ldr	x1, [sp, #40]
    8550:	csel	x0, xzr, x1, eq  // eq = none
    8554:	b	8500 <gcc_c_fe_context@@Base+0x1c88>
    8558:	stp	x29, x30, [sp, #-64]!
    855c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    8560:	mov	x29, sp
    8564:	ldr	x2, [x2, #3192]
    8568:	stp	x19, x20, [sp, #16]
    856c:	mov	x19, x1
    8570:	ldr	x20, [x0, #16]
    8574:	mov	w1, #0x51                  	// #81
    8578:	str	x21, [sp, #32]
    857c:	mov	x0, x20
    8580:	ldr	x21, [x2]
    8584:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8588:	cbnz	w0, 85a0 <gcc_c_fe_context@@Base+0x1d28>
    858c:	mov	x0, #0x0                   	// #0
    8590:	ldp	x19, x20, [sp, #16]
    8594:	ldr	x21, [sp, #32]
    8598:	ldp	x29, x30, [sp], #64
    859c:	ret
    85a0:	mov	x1, x21
    85a4:	mov	x0, x20
    85a8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    85ac:	cbz	w0, 858c <gcc_c_fe_context@@Base+0x1d14>
    85b0:	mov	x0, x20
    85b4:	mov	x1, #0x1                   	// #1
    85b8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    85bc:	cbz	w0, 858c <gcc_c_fe_context@@Base+0x1d14>
    85c0:	mov	x1, x19
    85c4:	mov	x0, x20
    85c8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    85cc:	cbz	w0, 858c <gcc_c_fe_context@@Base+0x1d14>
    85d0:	mov	x0, x20
    85d4:	mov	w1, #0x1                   	// #1
    85d8:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    85dc:	cbz	w0, 858c <gcc_c_fe_context@@Base+0x1d14>
    85e0:	add	x1, sp, #0x38
    85e4:	mov	x0, x20
    85e8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    85ec:	cmp	w0, #0x0
    85f0:	ldr	x1, [sp, #56]
    85f4:	csel	x0, xzr, x1, eq  // eq = none
    85f8:	b	8590 <gcc_c_fe_context@@Base+0x1d18>
    85fc:	nop
    8600:	stp	x29, x30, [sp, #-64]!
    8604:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    8608:	mov	x29, sp
    860c:	ldr	x2, [x2, #3512]
    8610:	stp	x19, x20, [sp, #16]
    8614:	mov	x19, x1
    8618:	ldr	x20, [x0, #16]
    861c:	mov	w1, #0x51                  	// #81
    8620:	str	x21, [sp, #32]
    8624:	mov	x0, x20
    8628:	ldr	x21, [x2]
    862c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8630:	cbnz	w0, 8648 <gcc_c_fe_context@@Base+0x1dd0>
    8634:	mov	x0, #0x0                   	// #0
    8638:	ldp	x19, x20, [sp, #16]
    863c:	ldr	x21, [sp, #32]
    8640:	ldp	x29, x30, [sp], #64
    8644:	ret
    8648:	mov	x1, x21
    864c:	mov	x0, x20
    8650:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8654:	cbz	w0, 8634 <gcc_c_fe_context@@Base+0x1dbc>
    8658:	mov	x0, x20
    865c:	mov	x1, #0x1                   	// #1
    8660:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8664:	cbz	w0, 8634 <gcc_c_fe_context@@Base+0x1dbc>
    8668:	mov	x1, x19
    866c:	mov	x0, x20
    8670:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8674:	cbz	w0, 8634 <gcc_c_fe_context@@Base+0x1dbc>
    8678:	mov	x0, x20
    867c:	mov	w1, #0x1                   	// #1
    8680:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8684:	cbz	w0, 8634 <gcc_c_fe_context@@Base+0x1dbc>
    8688:	add	x1, sp, #0x38
    868c:	mov	x0, x20
    8690:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8694:	cmp	w0, #0x0
    8698:	ldr	x1, [sp, #56]
    869c:	csel	x0, xzr, x1, eq  // eq = none
    86a0:	b	8638 <gcc_c_fe_context@@Base+0x1dc0>
    86a4:	nop
    86a8:	stp	x29, x30, [sp, #-64]!
    86ac:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    86b0:	mov	x29, sp
    86b4:	ldr	x3, [x3, #4056]
    86b8:	stp	x21, x22, [sp, #32]
    86bc:	ldr	x21, [x0, #16]
    86c0:	stp	x19, x20, [sp, #16]
    86c4:	mov	x19, x1
    86c8:	mov	x20, x2
    86cc:	mov	x0, x21
    86d0:	mov	w1, #0x51                  	// #81
    86d4:	ldr	x22, [x3]
    86d8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    86dc:	cbnz	w0, 86f4 <gcc_c_fe_context@@Base+0x1e7c>
    86e0:	mov	w0, #0x0                   	// #0
    86e4:	ldp	x19, x20, [sp, #16]
    86e8:	ldp	x21, x22, [sp, #32]
    86ec:	ldp	x29, x30, [sp], #64
    86f0:	ret
    86f4:	mov	x1, x22
    86f8:	mov	x0, x21
    86fc:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8700:	cbz	w0, 86e0 <gcc_c_fe_context@@Base+0x1e68>
    8704:	mov	x0, x21
    8708:	mov	x1, #0x2                   	// #2
    870c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8710:	cbz	w0, 86e0 <gcc_c_fe_context@@Base+0x1e68>
    8714:	mov	x1, x19
    8718:	mov	x0, x21
    871c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8720:	cbz	w0, 86e0 <gcc_c_fe_context@@Base+0x1e68>
    8724:	mov	x1, x20
    8728:	mov	x0, x21
    872c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8730:	cbz	w0, 86e0 <gcc_c_fe_context@@Base+0x1e68>
    8734:	mov	x0, x21
    8738:	mov	w1, #0x1                   	// #1
    873c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8740:	cbz	w0, 86e0 <gcc_c_fe_context@@Base+0x1e68>
    8744:	add	x1, sp, #0x38
    8748:	mov	x0, x21
    874c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8750:	cmp	w0, #0x0
    8754:	ldr	w1, [sp, #56]
    8758:	mov	w0, #0x0                   	// #0
    875c:	csel	w0, w0, w1, eq  // eq = none
    8760:	b	86e4 <gcc_c_fe_context@@Base+0x1e6c>
    8764:	nop
    8768:	stp	x29, x30, [sp, #-64]!
    876c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    8770:	mov	x29, sp
    8774:	ldr	x3, [x3, #3816]
    8778:	stp	x21, x22, [sp, #32]
    877c:	ldr	x21, [x0, #16]
    8780:	stp	x19, x20, [sp, #16]
    8784:	mov	x19, x1
    8788:	mov	w20, w2
    878c:	mov	x0, x21
    8790:	mov	w1, #0x51                  	// #81
    8794:	ldr	x22, [x3]
    8798:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    879c:	cbnz	w0, 87b4 <gcc_c_fe_context@@Base+0x1f3c>
    87a0:	mov	x0, #0x0                   	// #0
    87a4:	ldp	x19, x20, [sp, #16]
    87a8:	ldp	x21, x22, [sp, #32]
    87ac:	ldp	x29, x30, [sp], #64
    87b0:	ret
    87b4:	mov	x1, x22
    87b8:	mov	x0, x21
    87bc:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    87c0:	cbz	w0, 87a0 <gcc_c_fe_context@@Base+0x1f28>
    87c4:	mov	x0, x21
    87c8:	mov	x1, #0x2                   	// #2
    87cc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    87d0:	cbz	w0, 87a0 <gcc_c_fe_context@@Base+0x1f28>
    87d4:	mov	x1, x19
    87d8:	mov	x0, x21
    87dc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    87e0:	cbz	w0, 87a0 <gcc_c_fe_context@@Base+0x1f28>
    87e4:	sxtw	x1, w20
    87e8:	mov	x0, x21
    87ec:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    87f0:	cbz	w0, 87a0 <gcc_c_fe_context@@Base+0x1f28>
    87f4:	mov	x0, x21
    87f8:	mov	w1, #0x1                   	// #1
    87fc:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8800:	cbz	w0, 87a0 <gcc_c_fe_context@@Base+0x1f28>
    8804:	add	x1, sp, #0x38
    8808:	mov	x0, x21
    880c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8810:	cmp	w0, #0x0
    8814:	ldr	x1, [sp, #56]
    8818:	csel	x0, xzr, x1, eq  // eq = none
    881c:	b	87a4 <gcc_c_fe_context@@Base+0x1f2c>
    8820:	stp	x29, x30, [sp, #-64]!
    8824:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    8828:	mov	x29, sp
    882c:	ldr	x2, [x2, #3936]
    8830:	stp	x19, x20, [sp, #16]
    8834:	mov	x19, x1
    8838:	ldr	x20, [x0, #16]
    883c:	mov	w1, #0x51                  	// #81
    8840:	str	x21, [sp, #32]
    8844:	mov	x0, x20
    8848:	ldr	x21, [x2]
    884c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8850:	cbnz	w0, 8868 <gcc_c_fe_context@@Base+0x1ff0>
    8854:	mov	x0, #0x0                   	// #0
    8858:	ldp	x19, x20, [sp, #16]
    885c:	ldr	x21, [sp, #32]
    8860:	ldp	x29, x30, [sp], #64
    8864:	ret
    8868:	mov	x1, x21
    886c:	mov	x0, x20
    8870:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8874:	cbz	w0, 8854 <gcc_c_fe_context@@Base+0x1fdc>
    8878:	mov	x0, x20
    887c:	mov	x1, #0x1                   	// #1
    8880:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8884:	cbz	w0, 8854 <gcc_c_fe_context@@Base+0x1fdc>
    8888:	mov	x1, x19
    888c:	mov	x0, x20
    8890:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8894:	cbz	w0, 8854 <gcc_c_fe_context@@Base+0x1fdc>
    8898:	mov	x0, x20
    889c:	mov	w1, #0x1                   	// #1
    88a0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    88a4:	cbz	w0, 8854 <gcc_c_fe_context@@Base+0x1fdc>
    88a8:	add	x1, sp, #0x38
    88ac:	mov	x0, x20
    88b0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    88b4:	cmp	w0, #0x0
    88b8:	ldr	x1, [sp, #56]
    88bc:	csel	x0, xzr, x1, eq  // eq = none
    88c0:	b	8858 <gcc_c_fe_context@@Base+0x1fe0>
    88c4:	nop
    88c8:	stp	x29, x30, [sp, #-64]!
    88cc:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    88d0:	mov	x29, sp
    88d4:	ldr	x2, [x2, #3752]
    88d8:	stp	x19, x20, [sp, #16]
    88dc:	mov	x19, x1
    88e0:	ldr	x20, [x0, #16]
    88e4:	mov	w1, #0x51                  	// #81
    88e8:	str	x21, [sp, #32]
    88ec:	mov	x0, x20
    88f0:	ldr	x21, [x2]
    88f4:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    88f8:	cbnz	w0, 8910 <gcc_c_fe_context@@Base+0x2098>
    88fc:	mov	x0, #0x0                   	// #0
    8900:	ldp	x19, x20, [sp, #16]
    8904:	ldr	x21, [sp, #32]
    8908:	ldp	x29, x30, [sp], #64
    890c:	ret
    8910:	mov	x1, x21
    8914:	mov	x0, x20
    8918:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    891c:	cbz	w0, 88fc <gcc_c_fe_context@@Base+0x2084>
    8920:	mov	x0, x20
    8924:	mov	x1, #0x1                   	// #1
    8928:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    892c:	cbz	w0, 88fc <gcc_c_fe_context@@Base+0x2084>
    8930:	mov	x1, x19
    8934:	mov	x0, x20
    8938:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    893c:	cbz	w0, 88fc <gcc_c_fe_context@@Base+0x2084>
    8940:	mov	x0, x20
    8944:	mov	w1, #0x1                   	// #1
    8948:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    894c:	cbz	w0, 88fc <gcc_c_fe_context@@Base+0x2084>
    8950:	add	x1, sp, #0x38
    8954:	mov	x0, x20
    8958:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    895c:	cmp	w0, #0x0
    8960:	ldr	x1, [sp, #56]
    8964:	csel	x0, xzr, x1, eq  // eq = none
    8968:	b	8900 <gcc_c_fe_context@@Base+0x2088>
    896c:	nop
    8970:	stp	x29, x30, [sp, #-48]!
    8974:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    8978:	mov	w1, #0x51                  	// #81
    897c:	mov	x29, sp
    8980:	ldr	x2, [x2, #3304]
    8984:	stp	x19, x20, [sp, #16]
    8988:	ldr	x19, [x0, #16]
    898c:	ldr	x20, [x2]
    8990:	mov	x0, x19
    8994:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8998:	cbnz	w0, 89ac <gcc_c_fe_context@@Base+0x2134>
    899c:	mov	x0, #0x0                   	// #0
    89a0:	ldp	x19, x20, [sp, #16]
    89a4:	ldp	x29, x30, [sp], #48
    89a8:	ret
    89ac:	mov	x1, x20
    89b0:	mov	x0, x19
    89b4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    89b8:	cbz	w0, 899c <gcc_c_fe_context@@Base+0x2124>
    89bc:	mov	x0, x19
    89c0:	mov	x1, #0x0                   	// #0
    89c4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    89c8:	cbz	w0, 899c <gcc_c_fe_context@@Base+0x2124>
    89cc:	mov	x0, x19
    89d0:	mov	w1, #0x1                   	// #1
    89d4:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    89d8:	cbz	w0, 899c <gcc_c_fe_context@@Base+0x2124>
    89dc:	add	x1, sp, #0x28
    89e0:	mov	x0, x19
    89e4:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    89e8:	cmp	w0, #0x0
    89ec:	ldr	x1, [sp, #40]
    89f0:	csel	x0, xzr, x1, eq  // eq = none
    89f4:	b	89a0 <gcc_c_fe_context@@Base+0x2128>
    89f8:	stp	x29, x30, [sp, #-48]!
    89fc:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    8a00:	mov	w1, #0x51                  	// #81
    8a04:	mov	x29, sp
    8a08:	ldr	x2, [x2, #3568]
    8a0c:	stp	x19, x20, [sp, #16]
    8a10:	ldr	x19, [x0, #16]
    8a14:	ldr	x20, [x2]
    8a18:	mov	x0, x19
    8a1c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8a20:	cbnz	w0, 8a34 <gcc_c_fe_context@@Base+0x21bc>
    8a24:	mov	x0, #0x0                   	// #0
    8a28:	ldp	x19, x20, [sp, #16]
    8a2c:	ldp	x29, x30, [sp], #48
    8a30:	ret
    8a34:	mov	x1, x20
    8a38:	mov	x0, x19
    8a3c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8a40:	cbz	w0, 8a24 <gcc_c_fe_context@@Base+0x21ac>
    8a44:	mov	x0, x19
    8a48:	mov	x1, #0x0                   	// #0
    8a4c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8a50:	cbz	w0, 8a24 <gcc_c_fe_context@@Base+0x21ac>
    8a54:	mov	x0, x19
    8a58:	mov	w1, #0x1                   	// #1
    8a5c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8a60:	cbz	w0, 8a24 <gcc_c_fe_context@@Base+0x21ac>
    8a64:	add	x1, sp, #0x28
    8a68:	mov	x0, x19
    8a6c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8a70:	cmp	w0, #0x0
    8a74:	ldr	x1, [sp, #40]
    8a78:	csel	x0, xzr, x1, eq  // eq = none
    8a7c:	b	8a28 <gcc_c_fe_context@@Base+0x21b0>
    8a80:	stp	x29, x30, [sp, #-48]!
    8a84:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    8a88:	mov	w1, #0x51                  	// #81
    8a8c:	mov	x29, sp
    8a90:	ldr	x2, [x2, #3200]
    8a94:	stp	x19, x20, [sp, #16]
    8a98:	ldr	x19, [x0, #16]
    8a9c:	ldr	x20, [x2]
    8aa0:	mov	x0, x19
    8aa4:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8aa8:	cbnz	w0, 8abc <gcc_c_fe_context@@Base+0x2244>
    8aac:	mov	x0, #0x0                   	// #0
    8ab0:	ldp	x19, x20, [sp, #16]
    8ab4:	ldp	x29, x30, [sp], #48
    8ab8:	ret
    8abc:	mov	x1, x20
    8ac0:	mov	x0, x19
    8ac4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8ac8:	cbz	w0, 8aac <gcc_c_fe_context@@Base+0x2234>
    8acc:	mov	x0, x19
    8ad0:	mov	x1, #0x0                   	// #0
    8ad4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8ad8:	cbz	w0, 8aac <gcc_c_fe_context@@Base+0x2234>
    8adc:	mov	x0, x19
    8ae0:	mov	w1, #0x1                   	// #1
    8ae4:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8ae8:	cbz	w0, 8aac <gcc_c_fe_context@@Base+0x2234>
    8aec:	add	x1, sp, #0x28
    8af0:	mov	x0, x19
    8af4:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8af8:	cmp	w0, #0x0
    8afc:	ldr	x1, [sp, #40]
    8b00:	csel	x0, xzr, x1, eq  // eq = none
    8b04:	b	8ab0 <gcc_c_fe_context@@Base+0x2238>
    8b08:	stp	x29, x30, [sp, #-48]!
    8b0c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    8b10:	mov	w1, #0x51                  	// #81
    8b14:	mov	x29, sp
    8b18:	ldr	x2, [x2, #3856]
    8b1c:	stp	x19, x20, [sp, #16]
    8b20:	ldr	x19, [x0, #16]
    8b24:	ldr	x20, [x2]
    8b28:	mov	x0, x19
    8b2c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8b30:	cbnz	w0, 8b44 <gcc_c_fe_context@@Base+0x22cc>
    8b34:	mov	x0, #0x0                   	// #0
    8b38:	ldp	x19, x20, [sp, #16]
    8b3c:	ldp	x29, x30, [sp], #48
    8b40:	ret
    8b44:	mov	x1, x20
    8b48:	mov	x0, x19
    8b4c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8b50:	cbz	w0, 8b34 <gcc_c_fe_context@@Base+0x22bc>
    8b54:	mov	x0, x19
    8b58:	mov	x1, #0x0                   	// #0
    8b5c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8b60:	cbz	w0, 8b34 <gcc_c_fe_context@@Base+0x22bc>
    8b64:	mov	x0, x19
    8b68:	mov	w1, #0x1                   	// #1
    8b6c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8b70:	cbz	w0, 8b34 <gcc_c_fe_context@@Base+0x22bc>
    8b74:	add	x1, sp, #0x28
    8b78:	mov	x0, x19
    8b7c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8b80:	cmp	w0, #0x0
    8b84:	ldr	x1, [sp, #40]
    8b88:	csel	x0, xzr, x1, eq  // eq = none
    8b8c:	b	8b38 <gcc_c_fe_context@@Base+0x22c0>
    8b90:	stp	x29, x30, [sp, #-64]!
    8b94:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    8b98:	mov	x29, sp
    8b9c:	ldr	x3, [x3, #3600]
    8ba0:	stp	x21, x22, [sp, #32]
    8ba4:	ldr	x21, [x0, #16]
    8ba8:	stp	x19, x20, [sp, #16]
    8bac:	mov	x19, x1
    8bb0:	mov	w20, w2
    8bb4:	mov	x0, x21
    8bb8:	mov	w1, #0x51                  	// #81
    8bbc:	ldr	x22, [x3]
    8bc0:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8bc4:	cbnz	w0, 8bdc <gcc_c_fe_context@@Base+0x2364>
    8bc8:	mov	x0, #0x0                   	// #0
    8bcc:	ldp	x19, x20, [sp, #16]
    8bd0:	ldp	x21, x22, [sp, #32]
    8bd4:	ldp	x29, x30, [sp], #64
    8bd8:	ret
    8bdc:	mov	x1, x22
    8be0:	mov	x0, x21
    8be4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8be8:	cbz	w0, 8bc8 <gcc_c_fe_context@@Base+0x2350>
    8bec:	mov	x0, x21
    8bf0:	mov	x1, #0x2                   	// #2
    8bf4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8bf8:	cbz	w0, 8bc8 <gcc_c_fe_context@@Base+0x2350>
    8bfc:	mov	x1, x19
    8c00:	mov	x0, x21
    8c04:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8c08:	cbz	w0, 8bc8 <gcc_c_fe_context@@Base+0x2350>
    8c0c:	sxtw	x1, w20
    8c10:	mov	x0, x21
    8c14:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8c18:	cbz	w0, 8bc8 <gcc_c_fe_context@@Base+0x2350>
    8c1c:	mov	x0, x21
    8c20:	mov	w1, #0x1                   	// #1
    8c24:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8c28:	cbz	w0, 8bc8 <gcc_c_fe_context@@Base+0x2350>
    8c2c:	add	x1, sp, #0x38
    8c30:	mov	x0, x21
    8c34:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8c38:	cmp	w0, #0x0
    8c3c:	ldr	x1, [sp, #56]
    8c40:	csel	x0, xzr, x1, eq  // eq = none
    8c44:	b	8bcc <gcc_c_fe_context@@Base+0x2354>
    8c48:	stp	x29, x30, [sp, #-64]!
    8c4c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    8c50:	mov	x29, sp
    8c54:	ldr	x3, [x3, #3456]
    8c58:	stp	x21, x22, [sp, #32]
    8c5c:	ldr	x21, [x0, #16]
    8c60:	stp	x19, x20, [sp, #16]
    8c64:	mov	w19, w1
    8c68:	mov	x20, x2
    8c6c:	mov	x0, x21
    8c70:	mov	w1, #0x51                  	// #81
    8c74:	ldr	x22, [x3]
    8c78:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8c7c:	cbnz	w0, 8c94 <gcc_c_fe_context@@Base+0x241c>
    8c80:	mov	x0, #0x0                   	// #0
    8c84:	ldp	x19, x20, [sp, #16]
    8c88:	ldp	x21, x22, [sp, #32]
    8c8c:	ldp	x29, x30, [sp], #64
    8c90:	ret
    8c94:	mov	x1, x22
    8c98:	mov	x0, x21
    8c9c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8ca0:	cbz	w0, 8c80 <gcc_c_fe_context@@Base+0x2408>
    8ca4:	mov	x0, x21
    8ca8:	mov	x1, #0x2                   	// #2
    8cac:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8cb0:	cbz	w0, 8c80 <gcc_c_fe_context@@Base+0x2408>
    8cb4:	sxtw	x1, w19
    8cb8:	mov	x0, x21
    8cbc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8cc0:	cbz	w0, 8c80 <gcc_c_fe_context@@Base+0x2408>
    8cc4:	mov	x1, x20
    8cc8:	mov	x0, x21
    8ccc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8cd0:	cbz	w0, 8c80 <gcc_c_fe_context@@Base+0x2408>
    8cd4:	mov	x0, x21
    8cd8:	mov	w1, #0x1                   	// #1
    8cdc:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8ce0:	cbz	w0, 8c80 <gcc_c_fe_context@@Base+0x2408>
    8ce4:	add	x1, sp, #0x38
    8ce8:	mov	x0, x21
    8cec:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8cf0:	cmp	w0, #0x0
    8cf4:	ldr	x1, [sp, #56]
    8cf8:	csel	x0, xzr, x1, eq  // eq = none
    8cfc:	b	8c84 <gcc_c_fe_context@@Base+0x240c>
    8d00:	stp	x29, x30, [sp, #-64]!
    8d04:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    8d08:	mov	x29, sp
    8d0c:	ldr	x3, [x3, #3184]
    8d10:	stp	x21, x22, [sp, #32]
    8d14:	ldr	x21, [x0, #16]
    8d18:	stp	x19, x20, [sp, #16]
    8d1c:	mov	x19, x1
    8d20:	mov	x20, x2
    8d24:	mov	x0, x21
    8d28:	mov	w1, #0x51                  	// #81
    8d2c:	ldr	x22, [x3]
    8d30:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8d34:	cbnz	w0, 8d4c <gcc_c_fe_context@@Base+0x24d4>
    8d38:	mov	x0, #0x0                   	// #0
    8d3c:	ldp	x19, x20, [sp, #16]
    8d40:	ldp	x21, x22, [sp, #32]
    8d44:	ldp	x29, x30, [sp], #64
    8d48:	ret
    8d4c:	mov	x1, x22
    8d50:	mov	x0, x21
    8d54:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8d58:	cbz	w0, 8d38 <gcc_c_fe_context@@Base+0x24c0>
    8d5c:	mov	x0, x21
    8d60:	mov	x1, #0x2                   	// #2
    8d64:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8d68:	cbz	w0, 8d38 <gcc_c_fe_context@@Base+0x24c0>
    8d6c:	mov	x1, x19
    8d70:	mov	x0, x21
    8d74:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8d78:	cbz	w0, 8d38 <gcc_c_fe_context@@Base+0x24c0>
    8d7c:	mov	x1, x20
    8d80:	mov	x0, x21
    8d84:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8d88:	cbz	w0, 8d38 <gcc_c_fe_context@@Base+0x24c0>
    8d8c:	mov	x0, x21
    8d90:	mov	w1, #0x1                   	// #1
    8d94:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8d98:	cbz	w0, 8d38 <gcc_c_fe_context@@Base+0x24c0>
    8d9c:	add	x1, sp, #0x38
    8da0:	mov	x0, x21
    8da4:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8da8:	cmp	w0, #0x0
    8dac:	ldr	x1, [sp, #56]
    8db0:	csel	x0, xzr, x1, eq  // eq = none
    8db4:	b	8d3c <gcc_c_fe_context@@Base+0x24c4>
    8db8:	stp	x29, x30, [sp, #-64]!
    8dbc:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    8dc0:	mov	x29, sp
    8dc4:	ldr	x3, [x3, #3672]
    8dc8:	stp	x21, x22, [sp, #32]
    8dcc:	ldr	x21, [x0, #16]
    8dd0:	stp	x19, x20, [sp, #16]
    8dd4:	mov	x19, x1
    8dd8:	mov	w20, w2
    8ddc:	mov	x0, x21
    8de0:	mov	w1, #0x51                  	// #81
    8de4:	ldr	x22, [x3]
    8de8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8dec:	cbnz	w0, 8e04 <gcc_c_fe_context@@Base+0x258c>
    8df0:	mov	x0, #0x0                   	// #0
    8df4:	ldp	x19, x20, [sp, #16]
    8df8:	ldp	x21, x22, [sp, #32]
    8dfc:	ldp	x29, x30, [sp], #64
    8e00:	ret
    8e04:	mov	x1, x22
    8e08:	mov	x0, x21
    8e0c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8e10:	cbz	w0, 8df0 <gcc_c_fe_context@@Base+0x2578>
    8e14:	mov	x0, x21
    8e18:	mov	x1, #0x2                   	// #2
    8e1c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8e20:	cbz	w0, 8df0 <gcc_c_fe_context@@Base+0x2578>
    8e24:	mov	x1, x19
    8e28:	mov	x0, x21
    8e2c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8e30:	cbz	w0, 8df0 <gcc_c_fe_context@@Base+0x2578>
    8e34:	mov	w1, w20
    8e38:	mov	x0, x21
    8e3c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8e40:	cbz	w0, 8df0 <gcc_c_fe_context@@Base+0x2578>
    8e44:	mov	x0, x21
    8e48:	mov	w1, #0x1                   	// #1
    8e4c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8e50:	cbz	w0, 8df0 <gcc_c_fe_context@@Base+0x2578>
    8e54:	add	x1, sp, #0x38
    8e58:	mov	x0, x21
    8e5c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8e60:	cmp	w0, #0x0
    8e64:	ldr	x1, [sp, #56]
    8e68:	csel	x0, xzr, x1, eq  // eq = none
    8e6c:	b	8df4 <gcc_c_fe_context@@Base+0x257c>
    8e70:	stp	x29, x30, [sp, #-64]!
    8e74:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    8e78:	mov	x29, sp
    8e7c:	ldr	x3, [x3, #3224]
    8e80:	stp	x21, x22, [sp, #32]
    8e84:	ldr	x21, [x0, #16]
    8e88:	stp	x19, x20, [sp, #16]
    8e8c:	mov	x19, x1
    8e90:	mov	x20, x2
    8e94:	mov	x0, x21
    8e98:	mov	w1, #0x51                  	// #81
    8e9c:	ldr	x22, [x3]
    8ea0:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    8ea4:	cbnz	w0, 8ebc <gcc_c_fe_context@@Base+0x2644>
    8ea8:	mov	x0, #0x0                   	// #0
    8eac:	ldp	x19, x20, [sp, #16]
    8eb0:	ldp	x21, x22, [sp, #32]
    8eb4:	ldp	x29, x30, [sp], #64
    8eb8:	ret
    8ebc:	mov	x1, x22
    8ec0:	mov	x0, x21
    8ec4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8ec8:	cbz	w0, 8ea8 <gcc_c_fe_context@@Base+0x2630>
    8ecc:	mov	x0, x21
    8ed0:	mov	x1, #0x2                   	// #2
    8ed4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8ed8:	cbz	w0, 8ea8 <gcc_c_fe_context@@Base+0x2630>
    8edc:	mov	x1, x19
    8ee0:	mov	x0, x21
    8ee4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    8ee8:	cbz	w0, 8ea8 <gcc_c_fe_context@@Base+0x2630>
    8eec:	mov	x1, x20
    8ef0:	mov	x0, x21
    8ef4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    8ef8:	cbz	w0, 8ea8 <gcc_c_fe_context@@Base+0x2630>
    8efc:	mov	x0, x21
    8f00:	mov	w1, #0x1                   	// #1
    8f04:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    8f08:	cbz	w0, 8ea8 <gcc_c_fe_context@@Base+0x2630>
    8f0c:	add	x1, sp, #0x38
    8f10:	mov	x0, x21
    8f14:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    8f18:	cmp	w0, #0x0
    8f1c:	ldr	x1, [sp, #56]
    8f20:	csel	x0, xzr, x1, eq  // eq = none
    8f24:	b	8eac <gcc_c_fe_context@@Base+0x2634>

0000000000008f28 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@@Base>:
    8f28:	stp	x29, x30, [sp, #-48]!
    8f2c:	mov	x29, sp
    8f30:	stp	x19, x20, [sp, #16]
    8f34:	ldp	x19, x20, [x0]
    8f38:	str	x21, [sp, #32]
    8f3c:	mov	x21, x0
    8f40:	cmp	x19, x20
    8f44:	b.eq	8f6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@@Base+0x44>  // b.none
    8f48:	mov	x1, x19
    8f4c:	add	x19, x19, #0x20
    8f50:	ldr	x0, [x1], #16
    8f54:	cmp	x0, x1
    8f58:	b.eq	8f84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@@Base+0x5c>  // b.none
    8f5c:	bl	5480 <_ZdlPv@plt>
    8f60:	cmp	x20, x19
    8f64:	b.ne	8f48 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@@Base+0x20>  // b.any
    8f68:	ldr	x20, [x21]
    8f6c:	cbz	x20, 8f94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@@Base+0x6c>
    8f70:	mov	x0, x20
    8f74:	ldp	x19, x20, [sp, #16]
    8f78:	ldr	x21, [sp, #32]
    8f7c:	ldp	x29, x30, [sp], #48
    8f80:	b	5480 <_ZdlPv@plt>
    8f84:	cmp	x20, x19
    8f88:	b.ne	8f48 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@@Base+0x20>  // b.any
    8f8c:	ldr	x20, [x21]
    8f90:	b	8f6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@@Base+0x44>
    8f94:	ldp	x19, x20, [sp, #16]
    8f98:	ldr	x21, [sp, #32]
    8f9c:	ldp	x29, x30, [sp], #48
    8fa0:	ret
    8fa4:	nop

0000000000008fa8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    8fa8:	stp	x29, x30, [sp, #-128]!
    8fac:	mov	x3, #0x3ffffffffffffff     	// #288230376151711743
    8fb0:	mov	x29, sp
    8fb4:	stp	x19, x20, [sp, #16]
    8fb8:	stp	x23, x24, [sp, #48]
    8fbc:	mov	x23, x0
    8fc0:	ldp	x24, x20, [x0]
    8fc4:	stp	x21, x22, [sp, #32]
    8fc8:	stp	x25, x26, [sp, #64]
    8fcc:	stp	x27, x28, [sp, #80]
    8fd0:	sub	x0, x20, x24
    8fd4:	cmp	x3, x0, asr #5
    8fd8:	b.eq	9200 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x258>  // b.none
    8fdc:	mov	x19, x1
    8fe0:	mov	x25, x2
    8fe4:	asr	x21, x0, #5
    8fe8:	sub	x1, x1, x24
    8fec:	cbz	x21, 9188 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e0>
    8ff0:	cmp	x21, x21, lsl #1
    8ff4:	lsl	x21, x21, #1
    8ff8:	b.ls	9150 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a8>  // b.plast
    8ffc:	mov	x21, #0x7fffffffffffffe0    	// #9223372036854775776
    9000:	mov	x0, x21
    9004:	str	x1, [sp, #104]
    9008:	bl	5490 <_Znwm@plt>
    900c:	mov	x22, x0
    9010:	ldr	x1, [sp, #104]
    9014:	add	x26, x22, x1
    9018:	ldp	x27, x25, [x25]
    901c:	add	x28, x26, #0x10
    9020:	str	x28, [x22, x1]
    9024:	cmn	x27, x25
    9028:	ccmp	x27, #0x0, #0x0, ne  // ne = any
    902c:	b.eq	91e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x23c>  // b.none
    9030:	str	x25, [sp, #120]
    9034:	cmp	x25, #0xf
    9038:	b.hi	919c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f4>  // b.pmore
    903c:	cmp	x25, #0x1
    9040:	b.ne	9190 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e8>  // b.any
    9044:	ldrb	w0, [x27]
    9048:	strb	w0, [x26, #16]
    904c:	str	x25, [x26, #8]
    9050:	cmp	x19, x24
    9054:	strb	wzr, [x28, x25]
    9058:	b.eq	91dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x234>  // b.none
    905c:	mov	x2, x22
    9060:	mov	x3, x24
    9064:	b	908c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe4>
    9068:	str	x1, [x2]
    906c:	add	x3, x3, #0x20
    9070:	add	x2, x2, #0x20
    9074:	ldur	x0, [x3, #-16]
    9078:	stur	x0, [x2, #-16]
    907c:	ldur	x0, [x3, #-24]
    9080:	stur	x0, [x2, #-24]
    9084:	cmp	x19, x3
    9088:	b.eq	90c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x11c>  // b.none
    908c:	mov	x0, x3
    9090:	add	x1, x2, #0x10
    9094:	str	x1, [x2]
    9098:	ldr	x1, [x0], #16
    909c:	cmp	x1, x0
    90a0:	b.ne	9068 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc0>  // b.any
    90a4:	ldp	x0, x1, [x3, #16]
    90a8:	stp	x0, x1, [x2, #16]
    90ac:	add	x3, x3, #0x20
    90b0:	ldur	x0, [x3, #-24]
    90b4:	str	x0, [x2, #8]
    90b8:	cmp	x19, x3
    90bc:	add	x2, x2, #0x20
    90c0:	b.ne	908c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe4>  // b.any
    90c4:	sub	x25, x19, x24
    90c8:	add	x25, x22, x25
    90cc:	add	x25, x25, #0x20
    90d0:	cmp	x19, x20
    90d4:	b.eq	911c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x174>  // b.none
    90d8:	mov	x2, x25
    90dc:	mov	x3, x19
    90e0:	mov	x0, x3
    90e4:	add	x1, x2, #0x10
    90e8:	str	x1, [x2]
    90ec:	ldr	x1, [x0], #16
    90f0:	cmp	x1, x0
    90f4:	b.eq	915c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b4>  // b.none
    90f8:	ldp	x4, x0, [x3, #8]
    90fc:	stp	x1, x4, [x2]
    9100:	add	x3, x3, #0x20
    9104:	str	x0, [x2, #16]
    9108:	cmp	x3, x20
    910c:	add	x2, x2, #0x20
    9110:	b.ne	90e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x138>  // b.any
    9114:	sub	x19, x20, x19
    9118:	add	x25, x25, x19
    911c:	cbz	x24, 9128 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x180>
    9120:	mov	x0, x24
    9124:	bl	5480 <_ZdlPv@plt>
    9128:	add	x21, x22, x21
    912c:	ldp	x19, x20, [sp, #16]
    9130:	ldp	x27, x28, [sp, #80]
    9134:	stp	x22, x25, [x23]
    9138:	str	x21, [x23, #16]
    913c:	ldp	x21, x22, [sp, #32]
    9140:	ldp	x23, x24, [sp, #48]
    9144:	ldp	x25, x26, [sp, #64]
    9148:	ldp	x29, x30, [sp], #128
    914c:	ret
    9150:	cbnz	x21, 91f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x248>
    9154:	mov	x22, #0x0                   	// #0
    9158:	b	9014 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6c>
    915c:	ldr	x0, [x3, #8]
    9160:	str	x0, [x2, #8]
    9164:	ldp	x0, x1, [x3, #16]
    9168:	stp	x0, x1, [x2, #16]
    916c:	add	x3, x3, #0x20
    9170:	cmp	x20, x3
    9174:	add	x2, x2, #0x20
    9178:	b.ne	90e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x138>  // b.any
    917c:	sub	x19, x20, x19
    9180:	add	x25, x25, x19
    9184:	b	911c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x174>
    9188:	mov	x21, #0x20                  	// #32
    918c:	b	9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    9190:	cbz	x25, 904c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa4>
    9194:	mov	x0, x28
    9198:	b	91b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x210>
    919c:	add	x1, sp, #0x78
    91a0:	mov	x0, x26
    91a4:	mov	x2, #0x0                   	// #0
    91a8:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    91ac:	ldr	x1, [sp, #120]
    91b0:	str	x0, [x26]
    91b4:	str	x1, [x26, #16]
    91b8:	mov	x2, x25
    91bc:	mov	x1, x27
    91c0:	bl	5210 <memcpy@plt>
    91c4:	ldr	x28, [x26]
    91c8:	cmp	x19, x24
    91cc:	ldr	x25, [sp, #120]
    91d0:	str	x25, [x26, #8]
    91d4:	strb	wzr, [x28, x25]
    91d8:	b.ne	905c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb4>  // b.any
    91dc:	mov	x25, x22
    91e0:	b	90cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x124>
    91e4:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    91e8:	add	x0, x0, #0xef8
    91ec:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    91f0:	cmp	x21, x3
    91f4:	csel	x21, x21, x3, ls  // ls = plast
    91f8:	lsl	x21, x21, #5
    91fc:	b	9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    9200:	adrp	x0, 17000 <xexit@@Base+0x1a0>
    9204:	add	x0, x0, #0xd8
    9208:	bl	5360 <_ZSt20__throw_length_errorPKc@plt>
    920c:	bl	5330 <__cxa_begin_catch@plt>
    9210:	cbnz	x22, 9228 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x280>
    9214:	ldr	x0, [x26]
    9218:	cmp	x28, x0
    921c:	b.eq	9224 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x27c>  // b.none
    9220:	bl	5480 <_ZdlPv@plt>
    9224:	bl	5630 <__cxa_rethrow@plt>
    9228:	mov	x0, x22
    922c:	bl	5480 <_ZdlPv@plt>
    9230:	bl	5630 <__cxa_rethrow@plt>
    9234:	mov	x19, x0
    9238:	bl	56c0 <__cxa_end_catch@plt>
    923c:	mov	x0, x19
    9240:	bl	5740 <_Unwind_Resume@plt>
    9244:	nop

0000000000009248 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    9248:	stp	x29, x30, [sp, #-96]!
    924c:	mov	x3, #0x3ffffffffffffff     	// #288230376151711743
    9250:	mov	x29, sp
    9254:	stp	x19, x20, [sp, #16]
    9258:	mov	x19, x1
    925c:	stp	x25, x26, [sp, #64]
    9260:	ldp	x25, x20, [x0]
    9264:	stp	x21, x22, [sp, #32]
    9268:	stp	x23, x24, [sp, #48]
    926c:	str	x27, [sp, #80]
    9270:	sub	x1, x20, x25
    9274:	cmp	x3, x1, asr #5
    9278:	b.eq	9464 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x21c>  // b.none
    927c:	mov	x24, x0
    9280:	mov	x23, x2
    9284:	asr	x0, x1, #5
    9288:	sub	x27, x19, x25
    928c:	cbz	x0, 944c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x204>
    9290:	cmp	x0, x0, lsl #1
    9294:	mov	x26, #0x7fffffffffffffe0    	// #9223372036854775776
    9298:	lsl	x0, x0, #1
    929c:	b.ls	9414 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1cc>  // b.plast
    92a0:	mov	x0, x26
    92a4:	bl	5490 <_Znwm@plt>
    92a8:	mov	x2, x23
    92ac:	mov	x21, x0
    92b0:	add	x3, x21, x27
    92b4:	add	x26, x0, x26
    92b8:	add	x22, x0, #0x20
    92bc:	add	x0, x3, #0x10
    92c0:	str	x0, [x21, x27]
    92c4:	ldr	x0, [x2], #16
    92c8:	cmp	x0, x2
    92cc:	b.eq	9440 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f8>  // b.none
    92d0:	str	x0, [x21, x27]
    92d4:	ldr	x0, [x23, #16]
    92d8:	str	x0, [x3, #16]
    92dc:	ldr	x0, [x23, #8]
    92e0:	stp	x2, xzr, [x23]
    92e4:	cmp	x19, x25
    92e8:	str	x0, [x3, #8]
    92ec:	strb	wzr, [x23, #16]
    92f0:	b.eq	9348 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x100>  // b.none
    92f4:	mov	x2, x21
    92f8:	mov	x3, x25
    92fc:	nop
    9300:	mov	x4, x3
    9304:	add	x1, x2, #0x10
    9308:	str	x1, [x2]
    930c:	ldr	x5, [x4], #16
    9310:	cmp	x5, x4
    9314:	b.eq	93c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17c>  // b.none
    9318:	str	x5, [x2]
    931c:	add	x3, x3, #0x20
    9320:	add	x2, x2, #0x20
    9324:	ldur	x1, [x3, #-16]
    9328:	stur	x1, [x2, #-16]
    932c:	ldur	x1, [x3, #-24]
    9330:	stur	x1, [x2, #-24]
    9334:	cmp	x19, x3
    9338:	b.ne	9300 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb8>  // b.any
    933c:	sub	x22, x19, x25
    9340:	add	x22, x22, #0x20
    9344:	add	x22, x21, x22
    9348:	cmp	x19, x20
    934c:	b.eq	9394 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c>  // b.none
    9350:	mov	x3, x19
    9354:	mov	x2, x22
    9358:	mov	x4, x3
    935c:	add	x1, x2, #0x10
    9360:	str	x1, [x2]
    9364:	ldr	x5, [x4], #16
    9368:	cmp	x5, x4
    936c:	b.eq	93e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a0>  // b.none
    9370:	ldp	x4, x1, [x3, #8]
    9374:	stp	x5, x4, [x2]
    9378:	add	x3, x3, #0x20
    937c:	str	x1, [x2, #16]
    9380:	cmp	x3, x20
    9384:	add	x2, x2, #0x20
    9388:	b.ne	9358 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x110>  // b.any
    938c:	sub	x19, x20, x19
    9390:	add	x22, x22, x19
    9394:	cbz	x25, 93a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x158>
    9398:	mov	x0, x25
    939c:	bl	5480 <_ZdlPv@plt>
    93a0:	ldp	x19, x20, [sp, #16]
    93a4:	ldr	x27, [sp, #80]
    93a8:	stp	x21, x22, [x24]
    93ac:	str	x26, [x24, #16]
    93b0:	ldp	x21, x22, [sp, #32]
    93b4:	ldp	x23, x24, [sp, #48]
    93b8:	ldp	x25, x26, [sp, #64]
    93bc:	ldp	x29, x30, [sp], #96
    93c0:	ret
    93c4:	ldp	x0, x1, [x3, #16]
    93c8:	stp	x0, x1, [x2, #16]
    93cc:	add	x3, x3, #0x20
    93d0:	ldur	x0, [x3, #-24]
    93d4:	str	x0, [x2, #8]
    93d8:	cmp	x19, x3
    93dc:	add	x2, x2, #0x20
    93e0:	b.ne	9300 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb8>  // b.any
    93e4:	b	933c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf4>
    93e8:	ldr	x0, [x3, #8]
    93ec:	str	x0, [x2, #8]
    93f0:	ldp	x4, x5, [x3, #16]
    93f4:	stp	x4, x5, [x2, #16]
    93f8:	add	x3, x3, #0x20
    93fc:	cmp	x20, x3
    9400:	add	x2, x2, #0x20
    9404:	b.ne	9358 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x110>  // b.any
    9408:	sub	x19, x20, x19
    940c:	add	x22, x22, x19
    9410:	b	9394 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c>
    9414:	cbnz	x0, 9454 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x20c>
    9418:	mov	x2, x23
    941c:	mov	x21, #0x0                   	// #0
    9420:	add	x3, x21, x27
    9424:	mov	x22, #0x20                  	// #32
    9428:	add	x0, x3, #0x10
    942c:	str	x0, [x21, x27]
    9430:	ldr	x0, [x2], #16
    9434:	mov	x26, #0x0                   	// #0
    9438:	cmp	x0, x2
    943c:	b.ne	92d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x88>  // b.any
    9440:	ldp	x0, x1, [x23, #16]
    9444:	stp	x0, x1, [x3, #16]
    9448:	b	92dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x94>
    944c:	mov	x26, #0x20                  	// #32
    9450:	b	92a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    9454:	cmp	x0, x3
    9458:	csel	x0, x0, x3, ls  // ls = plast
    945c:	lsl	x26, x0, #5
    9460:	b	92a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    9464:	adrp	x0, 17000 <xexit@@Base+0x1a0>
    9468:	add	x0, x0, #0xd8
    946c:	bl	5360 <_ZSt20__throw_length_errorPKc@plt>
    9470:	stp	x1, x2, [x0, #24]
    9474:	stp	x3, x4, [x0, #40]
    9478:	str	x5, [x0, #56]
    947c:	ret
    9480:	cmp	w1, #0x0
    9484:	cset	w1, ne  // ne = any
    9488:	strb	w1, [x0, #136]
    948c:	ret
    9490:	stp	x1, x2, [x0, #64]
    9494:	ret
    9498:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    949c:	add	x0, x0, #0xf48
    94a0:	b	5340 <xstrdup@plt>
    94a4:	nop
    94a8:	stp	x29, x30, [sp, #-32]!
    94ac:	mov	x29, sp
    94b0:	stp	x19, x20, [sp, #16]
    94b4:	mov	x19, x0
    94b8:	mov	x20, x1
    94bc:	mov	x0, x1
    94c0:	bl	52c0 <strlen@plt>
    94c4:	mov	x3, x20
    94c8:	mov	x4, x0
    94cc:	add	x0, x19, #0x68
    94d0:	mov	x1, #0x0                   	// #0
    94d4:	ldr	x2, [x19, #112]
    94d8:	ldp	x19, x20, [sp, #16]
    94dc:	ldp	x29, x30, [sp], #32
    94e0:	b	5660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    94e4:	nop
    94e8:	stp	x29, x30, [sp, #-32]!
    94ec:	mov	x29, sp
    94f0:	stp	x19, x20, [sp, #16]
    94f4:	mov	x19, x0
    94f8:	mov	x20, x1
    94fc:	ldr	x0, [x0, #8]
    9500:	ldrb	w0, [x0, #136]
    9504:	cbnz	w0, 9524 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2dc>
    9508:	add	x1, x19, #0x10
    950c:	mov	x0, x20
    9510:	bl	5370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    9514:	mov	x0, #0x0                   	// #0
    9518:	ldp	x19, x20, [sp, #16]
    951c:	ldp	x29, x30, [sp], #32
    9520:	ret
    9524:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    9528:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    952c:	ldr	x2, [x19, #16]
    9530:	add	x1, x1, #0xf68
    9534:	ldr	x0, [x0, #3968]
    9538:	ldr	x0, [x0]
    953c:	bl	52d0 <fprintf@plt>
    9540:	add	x1, x19, #0x10
    9544:	mov	x0, x20
    9548:	bl	5370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    954c:	mov	x0, #0x0                   	// #0
    9550:	ldp	x19, x20, [sp, #16]
    9554:	ldp	x29, x30, [sp], #32
    9558:	ret
    955c:	nop
    9560:	stp	x29, x30, [sp, #-64]!
    9564:	mov	x1, #0x2                   	// #2
    9568:	mov	x29, sp
    956c:	stp	x19, x20, [sp, #16]
    9570:	mov	x20, x0
    9574:	str	x21, [sp, #32]
    9578:	str	xzr, [sp, #48]
    957c:	bl	f118 <gcc_cp_fe_context@@Base+0x4ea0>
    9580:	mov	w19, w0
    9584:	cbnz	w0, 95a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x360>
    9588:	ldr	x0, [sp, #48]
    958c:	cbz	x0, 9594 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x34c>
    9590:	bl	5560 <_ZdaPv@plt>
    9594:	mov	w0, w19
    9598:	ldp	x19, x20, [sp, #16]
    959c:	ldr	x21, [sp, #32]
    95a0:	ldp	x29, x30, [sp], #64
    95a4:	ret
    95a8:	add	x1, sp, #0x38
    95ac:	mov	x0, x20
    95b0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    95b4:	mov	w19, w0
    95b8:	cbz	w0, 9588 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x340>
    95bc:	add	x1, sp, #0x30
    95c0:	mov	x0, x20
    95c4:	ldr	x21, [sp, #56]
    95c8:	bl	f2a0 <gcc_cp_fe_context@@Base+0x5028>
    95cc:	mov	w19, w0
    95d0:	ldr	x0, [sp, #48]
    95d4:	cbz	w19, 958c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x344>
    95d8:	ldr	x1, [x20, #24]
    95dc:	mov	x3, x0
    95e0:	mov	w2, w21
    95e4:	ldr	x4, [x1, #24]
    95e8:	ldr	x0, [x1, #56]
    95ec:	blr	x4
    95f0:	mov	x0, x20
    95f4:	mov	w1, #0x52                  	// #82
    95f8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    95fc:	mov	w19, w0
    9600:	cbz	w0, 9588 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x340>
    9604:	mov	x0, x20
    9608:	mov	x1, #0x1                   	// #1
    960c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    9610:	mov	w19, w0
    9614:	ldr	x0, [sp, #48]
    9618:	b	958c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x344>
    961c:	ldr	x1, [sp, #48]
    9620:	mov	x19, x0
    9624:	cbz	x1, 9630 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x3e8>
    9628:	mov	x0, x1
    962c:	bl	5560 <_ZdaPv@plt>
    9630:	mov	x0, x19
    9634:	bl	5740 <_Unwind_Resume@plt>
    9638:	stp	x29, x30, [sp, #-64]!
    963c:	mov	x1, #0x1                   	// #1
    9640:	mov	x29, sp
    9644:	stp	x19, x20, [sp, #16]
    9648:	mov	x20, x0
    964c:	str	x21, [sp, #32]
    9650:	str	xzr, [sp, #56]
    9654:	bl	f118 <gcc_cp_fe_context@@Base+0x4ea0>
    9658:	mov	w19, w0
    965c:	cbnz	w0, 9680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x438>
    9660:	ldr	x0, [sp, #56]
    9664:	cbz	x0, 966c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x424>
    9668:	bl	5560 <_ZdaPv@plt>
    966c:	mov	w0, w19
    9670:	ldp	x19, x20, [sp, #16]
    9674:	ldr	x21, [sp, #32]
    9678:	ldp	x29, x30, [sp], #64
    967c:	ret
    9680:	add	x1, sp, #0x38
    9684:	mov	x0, x20
    9688:	bl	f2a0 <gcc_cp_fe_context@@Base+0x5028>
    968c:	mov	w19, w0
    9690:	ldr	x0, [sp, #56]
    9694:	cbz	w19, 9664 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x41c>
    9698:	ldr	x1, [x20, #24]
    969c:	mov	x2, x0
    96a0:	ldr	x3, [x1, #32]
    96a4:	ldr	x0, [x1, #56]
    96a8:	blr	x3
    96ac:	mov	x21, x0
    96b0:	mov	w1, #0x52                  	// #82
    96b4:	mov	x0, x20
    96b8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    96bc:	mov	w19, w0
    96c0:	cbz	w0, 9660 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x418>
    96c4:	mov	x1, x21
    96c8:	mov	x0, x20
    96cc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    96d0:	mov	w19, w0
    96d4:	ldr	x0, [sp, #56]
    96d8:	b	9664 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x41c>
    96dc:	ldr	x1, [sp, #56]
    96e0:	mov	x19, x0
    96e4:	cbz	x1, 96f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4a8>
    96e8:	mov	x0, x1
    96ec:	bl	5560 <_ZdaPv@plt>
    96f0:	mov	x0, x19
    96f4:	bl	5740 <_Unwind_Resume@plt>
    96f8:	stp	x29, x30, [sp, #-32]!
    96fc:	mov	x1, #0x0                   	// #0
    9700:	mov	x29, sp
    9704:	str	x19, [sp, #16]
    9708:	mov	x19, x0
    970c:	bl	f118 <gcc_cp_fe_context@@Base+0x4ea0>
    9710:	cbz	w0, 9730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4e8>
    9714:	ldr	x1, [x19, #24]
    9718:	ldp	x2, x0, [x1, #48]
    971c:	blr	x2
    9720:	mov	x0, x19
    9724:	mov	w1, #0x52                  	// #82
    9728:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    972c:	cbnz	w0, 9740 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4f8>
    9730:	mov	w0, #0x0                   	// #0
    9734:	ldr	x19, [sp, #16]
    9738:	ldp	x29, x30, [sp], #32
    973c:	ret
    9740:	mov	x0, x19
    9744:	mov	x1, #0x1                   	// #1
    9748:	ldr	x19, [sp, #16]
    974c:	ldp	x29, x30, [sp], #32
    9750:	b	f178 <gcc_cp_fe_context@@Base+0x4f00>
    9754:	nop
    9758:	stp	x29, x30, [sp, #-32]!
    975c:	mov	x1, #0x0                   	// #0
    9760:	mov	x29, sp
    9764:	str	x19, [sp, #16]
    9768:	mov	x19, x0
    976c:	bl	f118 <gcc_cp_fe_context@@Base+0x4ea0>
    9770:	cbz	w0, 9794 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x54c>
    9774:	ldr	x1, [x19, #24]
    9778:	ldr	x2, [x1, #40]
    977c:	ldr	x0, [x1, #56]
    9780:	blr	x2
    9784:	mov	x0, x19
    9788:	mov	w1, #0x52                  	// #82
    978c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    9790:	cbnz	w0, 97a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x55c>
    9794:	mov	w0, #0x0                   	// #0
    9798:	ldr	x19, [sp, #16]
    979c:	ldp	x29, x30, [sp], #32
    97a0:	ret
    97a4:	mov	x0, x19
    97a8:	mov	x1, #0x1                   	// #1
    97ac:	ldr	x19, [sp, #16]
    97b0:	ldp	x29, x30, [sp], #32
    97b4:	b	f178 <gcc_cp_fe_context@@Base+0x4f00>
    97b8:	stp	x29, x30, [sp, #-112]!
    97bc:	mov	x29, sp
    97c0:	stp	x21, x22, [sp, #32]
    97c4:	mov	x21, x0
    97c8:	ldr	x0, [x0, #144]
    97cc:	stp	x19, x20, [sp, #16]
    97d0:	mov	x20, x1
    97d4:	str	x23, [sp, #48]
    97d8:	cbz	x0, 97e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5a0>
    97dc:	ldr	x1, [x0]
    97e0:	ldr	x1, [x1, #16]
    97e4:	blr	x1
    97e8:	add	x22, sp, #0x50
    97ec:	add	x23, x22, #0x10
    97f0:	str	x23, [sp, #80]
    97f4:	cbnz	x20, 9804 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5bc>
    97f8:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    97fc:	add	x0, x0, #0xef8
    9800:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    9804:	mov	x0, x20
    9808:	bl	52c0 <strlen@plt>
    980c:	str	x0, [sp, #72]
    9810:	mov	x19, x0
    9814:	cmp	x0, #0xf
    9818:	b.hi	98d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x690>  // b.pmore
    981c:	cmp	x19, #0x1
    9820:	b.ne	98c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x67c>  // b.any
    9824:	ldrb	w1, [x20]
    9828:	mov	x0, x23
    982c:	strb	w1, [sp, #96]
    9830:	str	x19, [sp, #88]
    9834:	strb	wzr, [x0, x19]
    9838:	mov	x0, #0x30                  	// #48
    983c:	bl	5490 <_Znwm@plt>
    9840:	mov	x19, x0
    9844:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    9848:	add	x0, x1, #0x640
    984c:	mov	x1, x19
    9850:	ldp	x23, x20, [sp, #80]
    9854:	str	x21, [x19, #8]
    9858:	str	x0, [x1], #16
    985c:	add	x0, x1, #0x10
    9860:	str	x0, [x19, #16]
    9864:	cmn	x23, x20
    9868:	ccmp	x23, #0x0, #0x0, ne  // ne = any
    986c:	b.eq	993c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6f4>  // b.none
    9870:	str	x20, [sp, #72]
    9874:	cmp	x20, #0xf
    9878:	b.hi	9908 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6c0>  // b.pmore
    987c:	cmp	x20, #0x1
    9880:	b.ne	98d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x688>  // b.any
    9884:	ldrb	w1, [x23]
    9888:	strb	w1, [x19, #32]
    988c:	str	x20, [x19, #24]
    9890:	add	x22, x22, #0x10
    9894:	strb	wzr, [x0, x20]
    9898:	str	x19, [x21, #144]
    989c:	ldr	x0, [sp, #80]
    98a0:	cmp	x0, x22
    98a4:	b.eq	98ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x664>  // b.none
    98a8:	bl	5480 <_ZdlPv@plt>
    98ac:	mov	x0, #0x0                   	// #0
    98b0:	ldp	x19, x20, [sp, #16]
    98b4:	ldp	x21, x22, [sp, #32]
    98b8:	ldr	x23, [sp, #48]
    98bc:	ldp	x29, x30, [sp], #112
    98c0:	ret
    98c4:	mov	x0, x23
    98c8:	cbz	x19, 9830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5e8>
    98cc:	b	98f4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6ac>
    98d0:	cbz	x20, 988c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x644>
    98d4:	b	9924 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x6dc>
    98d8:	add	x1, sp, #0x48
    98dc:	mov	x0, x22
    98e0:	mov	x2, #0x0                   	// #0
    98e4:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    98e8:	ldr	x1, [sp, #72]
    98ec:	str	x0, [sp, #80]
    98f0:	str	x1, [sp, #96]
    98f4:	mov	x2, x19
    98f8:	mov	x1, x20
    98fc:	bl	5210 <memcpy@plt>
    9900:	ldp	x19, x0, [sp, #72]
    9904:	b	9830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x5e8>
    9908:	mov	x0, x1
    990c:	mov	x2, #0x0                   	// #0
    9910:	add	x1, sp, #0x48
    9914:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9918:	ldr	x1, [sp, #72]
    991c:	str	x0, [x19, #16]
    9920:	str	x1, [x19, #32]
    9924:	mov	x2, x20
    9928:	mov	x1, x23
    992c:	bl	5210 <memcpy@plt>
    9930:	ldr	x0, [x19, #16]
    9934:	ldr	x20, [sp, #72]
    9938:	b	988c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x644>
    993c:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    9940:	add	x0, x0, #0xef8
    9944:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    9948:	mov	x2, x0
    994c:	mov	x1, #0x30                  	// #48
    9950:	mov	x0, x19
    9954:	mov	x19, x2
    9958:	bl	54a0 <_ZdlPvm@plt>
    995c:	ldr	x0, [sp, #80]
    9960:	add	x22, x22, #0x10
    9964:	cmp	x0, x22
    9968:	b.eq	9970 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x728>  // b.none
    996c:	bl	5480 <_ZdlPv@plt>
    9970:	mov	x0, x19
    9974:	bl	5740 <_Unwind_Resume@plt>
    9978:	mov	x19, x0
    997c:	b	995c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x714>
    9980:	stp	x29, x30, [sp, #-112]!
    9984:	mov	x29, sp
    9988:	stp	x21, x22, [sp, #32]
    998c:	mov	x21, x0
    9990:	ldr	x0, [x0, #144]
    9994:	stp	x19, x20, [sp, #16]
    9998:	mov	x20, x1
    999c:	str	x23, [sp, #48]
    99a0:	cbz	x0, 99b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x768>
    99a4:	ldr	x1, [x0]
    99a8:	ldr	x1, [x1, #16]
    99ac:	blr	x1
    99b0:	add	x22, sp, #0x50
    99b4:	add	x23, x22, #0x10
    99b8:	str	x23, [sp, #80]
    99bc:	cbnz	x20, 99cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x784>
    99c0:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    99c4:	add	x0, x0, #0xef8
    99c8:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    99cc:	mov	x0, x20
    99d0:	bl	52c0 <strlen@plt>
    99d4:	str	x0, [sp, #72]
    99d8:	mov	x19, x0
    99dc:	cmp	x0, #0xf
    99e0:	b.hi	9aa0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x858>  // b.pmore
    99e4:	cmp	x19, #0x1
    99e8:	b.ne	9a8c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x844>  // b.any
    99ec:	ldrb	w1, [x20]
    99f0:	mov	x0, x23
    99f4:	strb	w1, [sp, #96]
    99f8:	str	x19, [sp, #88]
    99fc:	strb	wzr, [x0, x19]
    9a00:	mov	x0, #0x30                  	// #48
    9a04:	bl	5490 <_Znwm@plt>
    9a08:	mov	x19, x0
    9a0c:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    9a10:	add	x0, x1, #0x618
    9a14:	mov	x1, x19
    9a18:	ldp	x23, x20, [sp, #80]
    9a1c:	str	x21, [x19, #8]
    9a20:	str	x0, [x1], #16
    9a24:	add	x0, x1, #0x10
    9a28:	str	x0, [x19, #16]
    9a2c:	cmn	x23, x20
    9a30:	ccmp	x23, #0x0, #0x0, ne  // ne = any
    9a34:	b.eq	9b04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8bc>  // b.none
    9a38:	str	x20, [sp, #72]
    9a3c:	cmp	x20, #0xf
    9a40:	b.hi	9ad0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x888>  // b.pmore
    9a44:	cmp	x20, #0x1
    9a48:	b.ne	9a98 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x850>  // b.any
    9a4c:	ldrb	w1, [x23]
    9a50:	strb	w1, [x19, #32]
    9a54:	str	x20, [x19, #24]
    9a58:	add	x22, x22, #0x10
    9a5c:	strb	wzr, [x0, x20]
    9a60:	str	x19, [x21, #144]
    9a64:	ldr	x0, [sp, #80]
    9a68:	cmp	x0, x22
    9a6c:	b.eq	9a74 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x82c>  // b.none
    9a70:	bl	5480 <_ZdlPv@plt>
    9a74:	mov	x0, #0x0                   	// #0
    9a78:	ldp	x19, x20, [sp, #16]
    9a7c:	ldp	x21, x22, [sp, #32]
    9a80:	ldr	x23, [sp, #48]
    9a84:	ldp	x29, x30, [sp], #112
    9a88:	ret
    9a8c:	mov	x0, x23
    9a90:	cbz	x19, 99f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7b0>
    9a94:	b	9abc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x874>
    9a98:	cbz	x20, 9a54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x80c>
    9a9c:	b	9aec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8a4>
    9aa0:	add	x1, sp, #0x48
    9aa4:	mov	x0, x22
    9aa8:	mov	x2, #0x0                   	// #0
    9aac:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9ab0:	ldr	x1, [sp, #72]
    9ab4:	str	x0, [sp, #80]
    9ab8:	str	x1, [sp, #96]
    9abc:	mov	x2, x19
    9ac0:	mov	x1, x20
    9ac4:	bl	5210 <memcpy@plt>
    9ac8:	ldp	x19, x0, [sp, #72]
    9acc:	b	99f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7b0>
    9ad0:	mov	x0, x1
    9ad4:	mov	x2, #0x0                   	// #0
    9ad8:	add	x1, sp, #0x48
    9adc:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9ae0:	ldr	x1, [sp, #72]
    9ae4:	str	x0, [x19, #16]
    9ae8:	str	x1, [x19, #32]
    9aec:	mov	x2, x20
    9af0:	mov	x1, x23
    9af4:	bl	5210 <memcpy@plt>
    9af8:	ldr	x0, [x19, #16]
    9afc:	ldr	x20, [sp, #72]
    9b00:	b	9a54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x80c>
    9b04:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    9b08:	add	x0, x0, #0xef8
    9b0c:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    9b10:	mov	x2, x0
    9b14:	mov	x1, #0x30                  	// #48
    9b18:	mov	x0, x19
    9b1c:	mov	x19, x2
    9b20:	bl	54a0 <_ZdlPvm@plt>
    9b24:	ldr	x0, [sp, #80]
    9b28:	add	x22, x22, #0x10
    9b2c:	cmp	x0, x22
    9b30:	b.eq	9b38 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8f0>  // b.none
    9b34:	bl	5480 <_ZdlPv@plt>
    9b38:	mov	x0, x19
    9b3c:	bl	5740 <_Unwind_Resume@plt>
    9b40:	mov	x19, x0
    9b44:	b	9b24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x8dc>
    9b48:	stp	x29, x30, [sp, #-48]!
    9b4c:	mov	x29, sp
    9b50:	str	x19, [sp, #16]
    9b54:	mov	x19, x1
    9b58:	add	x1, sp, #0x28
    9b5c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    9b60:	cbz	w0, 9b70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x928>
    9b64:	ldr	x1, [sp, #40]
    9b68:	mov	w0, #0x1                   	// #1
    9b6c:	str	w1, [x19]
    9b70:	ldr	x19, [sp, #16]
    9b74:	ldp	x29, x30, [sp], #48
    9b78:	ret
    9b7c:	nop
    9b80:	stp	x29, x30, [sp, #-48]!
    9b84:	mov	x29, sp
    9b88:	str	x19, [sp, #16]
    9b8c:	mov	x19, x1
    9b90:	add	x1, sp, #0x28
    9b94:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    9b98:	cbz	w0, 9ba8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x960>
    9b9c:	ldr	x1, [sp, #40]
    9ba0:	mov	w0, #0x1                   	// #1
    9ba4:	str	w1, [x19]
    9ba8:	ldr	x19, [sp, #16]
    9bac:	ldp	x29, x30, [sp], #48
    9bb0:	ret
    9bb4:	nop
    9bb8:	stp	x29, x30, [sp, #-48]!
    9bbc:	mov	x29, sp
    9bc0:	str	x19, [sp, #16]
    9bc4:	mov	x19, x1
    9bc8:	add	x1, sp, #0x28
    9bcc:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    9bd0:	cbz	w0, 9be0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x998>
    9bd4:	ldr	x1, [sp, #40]
    9bd8:	mov	w0, #0x1                   	// #1
    9bdc:	str	w1, [x19]
    9be0:	ldr	x19, [sp, #16]
    9be4:	ldp	x29, x30, [sp], #48
    9be8:	ret
    9bec:	nop
    9bf0:	stp	x29, x30, [sp, #-48]!
    9bf4:	mov	x29, sp
    9bf8:	str	x19, [sp, #16]
    9bfc:	mov	x19, x1
    9c00:	add	x1, sp, #0x28
    9c04:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    9c08:	cbz	w0, 9c18 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x9d0>
    9c0c:	ldr	x1, [sp, #40]
    9c10:	mov	w0, #0x1                   	// #1
    9c14:	str	w1, [x19]
    9c18:	ldr	x19, [sp, #16]
    9c1c:	ldp	x29, x30, [sp], #48
    9c20:	ret
    9c24:	nop
    9c28:	stp	x29, x30, [sp, #-48]!
    9c2c:	mov	x29, sp
    9c30:	cbz	x1, 9c9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa54>
    9c34:	stp	x19, x20, [sp, #16]
    9c38:	mov	x19, x1
    9c3c:	mov	x20, x0
    9c40:	str	x21, [sp, #32]
    9c44:	mov	w1, #0x76                  	// #118
    9c48:	ldrsw	x21, [x19]
    9c4c:	mov	x2, x21
    9c50:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    9c54:	cbz	w0, 9c88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa40>
    9c58:	ldr	x2, [x19, #8]
    9c5c:	lsl	x1, x21, #3
    9c60:	mov	x0, x20
    9c64:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    9c68:	cbz	w0, 9c88 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xa40>
    9c6c:	lsl	x1, x21, #2
    9c70:	mov	x0, x20
    9c74:	ldr	x2, [x19, #16]
    9c78:	ldp	x19, x20, [sp, #16]
    9c7c:	ldr	x21, [sp, #32]
    9c80:	ldp	x29, x30, [sp], #48
    9c84:	b	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    9c88:	mov	w0, #0x0                   	// #0
    9c8c:	ldp	x19, x20, [sp, #16]
    9c90:	ldr	x21, [sp, #32]
    9c94:	ldp	x29, x30, [sp], #48
    9c98:	ret
    9c9c:	mov	x2, #0xffffffffffffffff    	// #-1
    9ca0:	mov	w1, #0x76                  	// #118
    9ca4:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    9ca8:	cmp	w0, #0x0
    9cac:	cset	w0, ne  // ne = any
    9cb0:	ldp	x29, x30, [sp], #48
    9cb4:	ret
    9cb8:	stp	x29, x30, [sp, #-64]!
    9cbc:	mov	x29, sp
    9cc0:	add	x2, sp, #0x38
    9cc4:	stp	x19, x20, [sp, #16]
    9cc8:	mov	x20, x0
    9ccc:	stp	x21, x22, [sp, #32]
    9cd0:	mov	x22, x1
    9cd4:	mov	w1, #0x76                  	// #118
    9cd8:	bl	f3d8 <gcc_cp_fe_context@@Base+0x5160>
    9cdc:	mov	w19, w0
    9ce0:	cbz	w0, 9d78 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb30>
    9ce4:	ldr	x0, [sp, #56]
    9ce8:	cmn	x0, #0x1
    9cec:	b.eq	9d8c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb44>  // b.none
    9cf0:	mov	x0, #0x18                  	// #24
    9cf4:	bl	5490 <_Znwm@plt>
    9cf8:	mov	x21, x0
    9cfc:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    9d00:	ldr	x0, [sp, #56]
    9d04:	str	w0, [x21]
    9d08:	cmp	x0, x1
    9d0c:	b.hi	9de0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb98>  // b.pmore
    9d10:	lsl	x0, x0, #3
    9d14:	bl	5200 <_Znam@plt>
    9d18:	ldr	x1, [sp, #56]
    9d1c:	mov	x2, x0
    9d20:	mov	x0, x20
    9d24:	str	x2, [x21, #8]
    9d28:	lsl	x1, x1, #3
    9d2c:	bl	f430 <gcc_cp_fe_context@@Base+0x51b8>
    9d30:	mov	w19, w0
    9d34:	cbz	w0, 9db4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb6c>
    9d38:	ldr	x0, [sp, #56]
    9d3c:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
    9d40:	cmp	x0, x1
    9d44:	b.hi	9de0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb98>  // b.pmore
    9d48:	lsl	x0, x0, #2
    9d4c:	bl	5200 <_Znam@plt>
    9d50:	ldr	x1, [sp, #56]
    9d54:	mov	x2, x0
    9d58:	mov	x0, x20
    9d5c:	str	x2, [x21, #16]
    9d60:	lsl	x1, x1, #2
    9d64:	bl	f430 <gcc_cp_fe_context@@Base+0x51b8>
    9d68:	mov	w19, w0
    9d6c:	cbz	w0, 9da8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb60>
    9d70:	mov	w19, #0x1                   	// #1
    9d74:	str	x21, [x22]
    9d78:	mov	w0, w19
    9d7c:	ldp	x19, x20, [sp, #16]
    9d80:	ldp	x21, x22, [sp, #32]
    9d84:	ldp	x29, x30, [sp], #64
    9d88:	ret
    9d8c:	str	xzr, [x22]
    9d90:	mov	w19, #0x1                   	// #1
    9d94:	mov	w0, w19
    9d98:	ldp	x19, x20, [sp, #16]
    9d9c:	ldp	x21, x22, [sp, #32]
    9da0:	ldp	x29, x30, [sp], #64
    9da4:	ret
    9da8:	ldr	x0, [x21, #16]
    9dac:	cbz	x0, 9db4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb6c>
    9db0:	bl	5560 <_ZdaPv@plt>
    9db4:	ldr	x0, [x21, #8]
    9db8:	cbz	x0, 9dc0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb78>
    9dbc:	bl	5560 <_ZdaPv@plt>
    9dc0:	mov	x0, x21
    9dc4:	mov	x1, #0x18                  	// #24
    9dc8:	bl	54a0 <_ZdlPvm@plt>
    9dcc:	mov	w0, w19
    9dd0:	ldp	x19, x20, [sp, #16]
    9dd4:	ldp	x21, x22, [sp, #32]
    9dd8:	ldp	x29, x30, [sp], #64
    9ddc:	ret
    9de0:	bl	5600 <__cxa_throw_bad_array_new_length@plt>
    9de4:	nop
    9de8:	stp	x29, x30, [sp, #-48]!
    9dec:	mov	x29, sp
    9df0:	cbz	x1, 9e5c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc14>
    9df4:	stp	x19, x20, [sp, #16]
    9df8:	mov	x19, x1
    9dfc:	mov	x20, x0
    9e00:	str	x21, [sp, #32]
    9e04:	mov	w1, #0x74                  	// #116
    9e08:	ldrsw	x21, [x19]
    9e0c:	mov	x2, x21
    9e10:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    9e14:	cbz	w0, 9e48 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc00>
    9e18:	ldr	x2, [x19, #8]
    9e1c:	mov	x1, x21
    9e20:	mov	x0, x20
    9e24:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    9e28:	cbz	w0, 9e48 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc00>
    9e2c:	lsl	x1, x21, #3
    9e30:	mov	x0, x20
    9e34:	ldr	x2, [x19, #16]
    9e38:	ldp	x19, x20, [sp, #16]
    9e3c:	ldr	x21, [sp, #32]
    9e40:	ldp	x29, x30, [sp], #48
    9e44:	b	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    9e48:	mov	w0, #0x0                   	// #0
    9e4c:	ldp	x19, x20, [sp, #16]
    9e50:	ldr	x21, [sp, #32]
    9e54:	ldp	x29, x30, [sp], #48
    9e58:	ret
    9e5c:	mov	x2, #0xffffffffffffffff    	// #-1
    9e60:	mov	w1, #0x74                  	// #116
    9e64:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    9e68:	cmp	w0, #0x0
    9e6c:	cset	w0, ne  // ne = any
    9e70:	ldp	x29, x30, [sp], #48
    9e74:	ret
    9e78:	stp	x29, x30, [sp, #-64]!
    9e7c:	mov	x29, sp
    9e80:	add	x2, sp, #0x38
    9e84:	stp	x19, x20, [sp, #16]
    9e88:	stp	x21, x22, [sp, #32]
    9e8c:	mov	x22, x1
    9e90:	mov	x21, x0
    9e94:	mov	w1, #0x74                  	// #116
    9e98:	bl	f3d8 <gcc_cp_fe_context@@Base+0x5160>
    9e9c:	mov	w19, w0
    9ea0:	cbz	w0, 9f24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcdc>
    9ea4:	ldr	x0, [sp, #56]
    9ea8:	cmn	x0, #0x1
    9eac:	b.eq	9f38 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xcf0>  // b.none
    9eb0:	mov	x0, #0x18                  	// #24
    9eb4:	bl	5490 <_Znwm@plt>
    9eb8:	mov	x20, x0
    9ebc:	ldr	x0, [sp, #56]
    9ec0:	str	w0, [x20]
    9ec4:	bl	5200 <_Znam@plt>
    9ec8:	mov	x2, x0
    9ecc:	ldr	x1, [sp, #56]
    9ed0:	mov	x0, x21
    9ed4:	str	x2, [x20, #8]
    9ed8:	bl	f430 <gcc_cp_fe_context@@Base+0x51b8>
    9edc:	mov	w19, w0
    9ee0:	cbz	w0, 9f60 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd18>
    9ee4:	ldr	x0, [sp, #56]
    9ee8:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    9eec:	cmp	x0, x1
    9ef0:	b.hi	9f8c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd44>  // b.pmore
    9ef4:	lsl	x0, x0, #3
    9ef8:	bl	5200 <_Znam@plt>
    9efc:	ldr	x1, [sp, #56]
    9f00:	mov	x2, x0
    9f04:	mov	x0, x21
    9f08:	str	x2, [x20, #16]
    9f0c:	lsl	x1, x1, #3
    9f10:	bl	f430 <gcc_cp_fe_context@@Base+0x51b8>
    9f14:	mov	w19, w0
    9f18:	cbz	w0, 9f54 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd0c>
    9f1c:	mov	w19, #0x1                   	// #1
    9f20:	str	x20, [x22]
    9f24:	mov	w0, w19
    9f28:	ldp	x19, x20, [sp, #16]
    9f2c:	ldp	x21, x22, [sp, #32]
    9f30:	ldp	x29, x30, [sp], #64
    9f34:	ret
    9f38:	str	xzr, [x22]
    9f3c:	mov	w19, #0x1                   	// #1
    9f40:	mov	w0, w19
    9f44:	ldp	x19, x20, [sp, #16]
    9f48:	ldp	x21, x22, [sp, #32]
    9f4c:	ldp	x29, x30, [sp], #64
    9f50:	ret
    9f54:	ldr	x0, [x20, #16]
    9f58:	cbz	x0, 9f60 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd18>
    9f5c:	bl	5560 <_ZdaPv@plt>
    9f60:	ldr	x0, [x20, #8]
    9f64:	cbz	x0, 9f6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd24>
    9f68:	bl	5560 <_ZdaPv@plt>
    9f6c:	mov	x0, x20
    9f70:	mov	x1, #0x18                  	// #24
    9f74:	bl	54a0 <_ZdlPvm@plt>
    9f78:	mov	w0, w19
    9f7c:	ldp	x19, x20, [sp, #16]
    9f80:	ldp	x21, x22, [sp, #32]
    9f84:	ldp	x29, x30, [sp], #64
    9f88:	ret
    9f8c:	bl	5600 <__cxa_throw_bad_array_new_length@plt>
    9f90:	stp	x29, x30, [sp, #-48]!
    9f94:	mov	x29, sp
    9f98:	cbz	x1, 9fec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xda4>
    9f9c:	stp	x19, x20, [sp, #16]
    9fa0:	mov	x19, x1
    9fa4:	mov	x20, x0
    9fa8:	str	x21, [sp, #32]
    9fac:	mov	w1, #0x64                  	// #100
    9fb0:	ldrsw	x21, [x19]
    9fb4:	mov	x2, x21
    9fb8:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    9fbc:	cbz	w0, 9fdc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd94>
    9fc0:	lsl	x1, x21, #3
    9fc4:	mov	x0, x20
    9fc8:	ldr	x2, [x19, #8]
    9fcc:	ldp	x19, x20, [sp, #16]
    9fd0:	ldr	x21, [sp, #32]
    9fd4:	ldp	x29, x30, [sp], #48
    9fd8:	b	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    9fdc:	ldp	x19, x20, [sp, #16]
    9fe0:	ldr	x21, [sp, #32]
    9fe4:	ldp	x29, x30, [sp], #48
    9fe8:	ret
    9fec:	mov	x2, #0xffffffffffffffff    	// #-1
    9ff0:	mov	w1, #0x64                  	// #100
    9ff4:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    9ff8:	cmp	w0, #0x0
    9ffc:	cset	w0, ne  // ne = any
    a000:	ldp	x29, x30, [sp], #48
    a004:	ret
    a008:	stp	x29, x30, [sp, #-64]!
    a00c:	mov	x29, sp
    a010:	add	x2, sp, #0x38
    a014:	stp	x19, x20, [sp, #16]
    a018:	mov	x20, x0
    a01c:	stp	x21, x22, [sp, #32]
    a020:	mov	x22, x1
    a024:	mov	w1, #0x64                  	// #100
    a028:	bl	f3d8 <gcc_cp_fe_context@@Base+0x5160>
    a02c:	mov	w19, w0
    a030:	cbz	w0, a090 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe48>
    a034:	ldr	x0, [sp, #56]
    a038:	cmn	x0, #0x1
    a03c:	b.eq	a0a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe5c>  // b.none
    a040:	mov	x0, #0x10                  	// #16
    a044:	bl	5490 <_Znwm@plt>
    a048:	mov	x21, x0
    a04c:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    a050:	ldr	x0, [sp, #56]
    a054:	str	w0, [x21]
    a058:	cmp	x0, x1
    a05c:	b.hi	a0ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xea4>  // b.pmore
    a060:	lsl	x0, x0, #3
    a064:	bl	5200 <_Znam@plt>
    a068:	ldr	x1, [sp, #56]
    a06c:	mov	x2, x0
    a070:	mov	x0, x20
    a074:	str	x2, [x21, #8]
    a078:	lsl	x1, x1, #3
    a07c:	bl	f430 <gcc_cp_fe_context@@Base+0x51b8>
    a080:	mov	w19, w0
    a084:	cbz	w0, a0c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe78>
    a088:	mov	w19, #0x1                   	// #1
    a08c:	str	x21, [x22]
    a090:	mov	w0, w19
    a094:	ldp	x19, x20, [sp, #16]
    a098:	ldp	x21, x22, [sp, #32]
    a09c:	ldp	x29, x30, [sp], #64
    a0a0:	ret
    a0a4:	str	xzr, [x22]
    a0a8:	mov	w19, #0x1                   	// #1
    a0ac:	mov	w0, w19
    a0b0:	ldp	x19, x20, [sp, #16]
    a0b4:	ldp	x21, x22, [sp, #32]
    a0b8:	ldp	x29, x30, [sp], #64
    a0bc:	ret
    a0c0:	ldr	x0, [x21, #8]
    a0c4:	cbz	x0, a0cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe84>
    a0c8:	bl	5560 <_ZdaPv@plt>
    a0cc:	mov	x0, x21
    a0d0:	mov	x1, #0x10                  	// #16
    a0d4:	bl	54a0 <_ZdlPvm@plt>
    a0d8:	mov	w0, w19
    a0dc:	ldp	x19, x20, [sp, #16]
    a0e0:	ldp	x21, x22, [sp, #32]
    a0e4:	ldp	x29, x30, [sp], #64
    a0e8:	ret
    a0ec:	bl	5600 <__cxa_throw_bad_array_new_length@plt>
    a0f0:	stp	x29, x30, [sp, #-48]!
    a0f4:	mov	x29, sp
    a0f8:	stp	x19, x20, [sp, #16]
    a0fc:	mov	x19, x0
    a100:	ldr	x0, [x0, #16]
    a104:	str	x21, [sp, #32]
    a108:	cbz	x0, a118 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xed0>
    a10c:	ldr	x1, [x0]
    a110:	ldr	x1, [x1, #8]
    a114:	blr	x1
    a118:	ldr	x0, [x19, #144]
    a11c:	cbz	x0, a12c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xee4>
    a120:	ldr	x1, [x0]
    a124:	ldr	x1, [x1, #16]
    a128:	blr	x1
    a12c:	ldr	x0, [x19, #104]
    a130:	add	x1, x19, #0x78
    a134:	cmp	x0, x1
    a138:	b.eq	a140 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xef8>  // b.none
    a13c:	bl	5480 <_ZdlPv@plt>
    a140:	ldp	x20, x21, [x19, #80]
    a144:	cmp	x20, x21
    a148:	b.eq	a174 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf2c>  // b.none
    a14c:	nop
    a150:	mov	x1, x20
    a154:	add	x20, x20, #0x20
    a158:	ldr	x0, [x1], #16
    a15c:	cmp	x0, x1
    a160:	b.eq	a18c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf44>  // b.none
    a164:	bl	5480 <_ZdlPv@plt>
    a168:	cmp	x21, x20
    a16c:	b.ne	a150 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf08>  // b.any
    a170:	ldr	x21, [x19, #80]
    a174:	cbz	x21, a19c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf54>
    a178:	mov	x0, x21
    a17c:	ldp	x19, x20, [sp, #16]
    a180:	ldr	x21, [sp, #32]
    a184:	ldp	x29, x30, [sp], #48
    a188:	b	5480 <_ZdlPv@plt>
    a18c:	cmp	x21, x20
    a190:	b.ne	a150 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf08>  // b.any
    a194:	ldr	x21, [x19, #80]
    a198:	b	a174 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf2c>
    a19c:	ldp	x19, x20, [sp, #16]
    a1a0:	ldr	x21, [sp, #32]
    a1a4:	ldp	x29, x30, [sp], #48
    a1a8:	ret
    a1ac:	nop
    a1b0:	cbz	x0, a1dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf94>
    a1b4:	stp	x29, x30, [sp, #-32]!
    a1b8:	mov	x29, sp
    a1bc:	str	x19, [sp, #16]
    a1c0:	mov	x19, x0
    a1c4:	bl	a0f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xea8>
    a1c8:	mov	x0, x19
    a1cc:	mov	x1, #0x98                  	// #152
    a1d0:	ldr	x19, [sp, #16]
    a1d4:	ldp	x29, x30, [sp], #32
    a1d8:	b	54a0 <_ZdlPvm@plt>
    a1dc:	ret
    a1e0:	movi	v0.4s, #0x0
    a1e4:	stp	x29, x30, [sp, #-48]!
    a1e8:	mov	x29, sp
    a1ec:	stp	x19, x20, [sp, #16]
    a1f0:	mov	x19, x0
    a1f4:	mov	x20, x2
    a1f8:	stp	x21, x22, [sp, #32]
    a1fc:	add	x22, x0, #0x78
    a200:	mov	x21, x1
    a204:	str	xzr, [x19, #16]
    a208:	mov	x0, #0x10                  	// #16
    a20c:	stp	xzr, xzr, [x19, #56]
    a210:	stp	x22, xzr, [x19, #104]
    a214:	strb	wzr, [x19, #120]
    a218:	strb	wzr, [x19, #136]
    a21c:	stur	q0, [x19, #24]
    a220:	stur	q0, [x19, #72]
    a224:	stur	q0, [x19, #88]
    a228:	bl	5490 <_Znwm@plt>
    a22c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    a230:	add	x3, x3, #0x5f0
    a234:	stp	x21, x20, [x19]
    a238:	stp	x3, x19, [x0]
    a23c:	str	x0, [x19, #144]
    a240:	ldp	x19, x20, [sp, #16]
    a244:	ldp	x21, x22, [sp, #32]
    a248:	ldp	x29, x30, [sp], #48
    a24c:	ret
    a250:	ldr	x1, [x19, #104]
    a254:	mov	x20, x0
    a258:	cmp	x22, x1
    a25c:	b.eq	a268 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1020>  // b.none
    a260:	mov	x0, x1
    a264:	bl	5480 <_ZdlPv@plt>
    a268:	add	x0, x19, #0x50
    a26c:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@plt>
    a270:	mov	x0, x20
    a274:	bl	5740 <_Unwind_Resume@plt>

000000000000a278 <gcc_cp_fe_context@@Base>:
    a278:	stp	x29, x30, [sp, #-48]!
    a27c:	cmp	w1, #0x0
    a280:	ccmp	w0, #0x1, #0x2, eq  // eq = none
    a284:	mov	x29, sp
    a288:	stp	x19, x20, [sp, #16]
    a28c:	b.hi	a2fc <gcc_cp_fe_context@@Base+0x84>  // b.pmore
    a290:	mov	x0, #0x98                  	// #152
    a294:	bl	5490 <_Znwm@plt>
    a298:	movi	v0.4s, #0x0
    a29c:	mov	x19, x0
    a2a0:	add	x20, x19, #0x78
    a2a4:	mov	x0, #0x10                  	// #16
    a2a8:	str	xzr, [x19, #16]
    a2ac:	stp	xzr, xzr, [x19, #56]
    a2b0:	stp	x20, xzr, [x19, #104]
    a2b4:	strb	wzr, [x19, #120]
    a2b8:	strb	wzr, [x19, #136]
    a2bc:	stur	q0, [x19, #24]
    a2c0:	stur	q0, [x19, #72]
    a2c4:	stur	q0, [x19, #88]
    a2c8:	bl	5490 <_Znwm@plt>
    a2cc:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    a2d0:	add	x1, x1, #0x658
    a2d4:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    a2d8:	add	x3, x1, #0x58
    a2dc:	add	x2, x2, #0x5f0
    a2e0:	stp	x1, x3, [x19]
    a2e4:	stp	x2, x19, [x0]
    a2e8:	str	x0, [x19, #144]
    a2ec:	mov	x0, x19
    a2f0:	ldp	x19, x20, [sp, #16]
    a2f4:	ldp	x29, x30, [sp], #48
    a2f8:	ret
    a2fc:	mov	x19, #0x0                   	// #0
    a300:	mov	x0, x19
    a304:	ldp	x19, x20, [sp, #16]
    a308:	ldp	x29, x30, [sp], #48
    a30c:	ret
    a310:	ldr	x1, [x19, #104]
    a314:	str	x21, [sp, #32]
    a318:	mov	x21, x0
    a31c:	cmp	x20, x1
    a320:	b.eq	a32c <gcc_cp_fe_context@@Base+0xb4>  // b.none
    a324:	mov	x0, x1
    a328:	bl	5480 <_ZdlPv@plt>
    a32c:	add	x0, x19, #0x50
    a330:	bl	55d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev@plt>
    a334:	mov	x1, #0x98                  	// #152
    a338:	mov	x0, x19
    a33c:	bl	54a0 <_ZdlPvm@plt>
    a340:	mov	x0, x21
    a344:	bl	5740 <_Unwind_Resume@plt>
    a348:	sub	sp, sp, #0x250
    a34c:	stp	x29, x30, [sp]
    a350:	mov	x29, sp
    a354:	stp	x23, x24, [sp, #48]
    a358:	mov	x24, x0
    a35c:	stp	x19, x20, [sp, #16]
    a360:	add	x19, x29, #0xc0
    a364:	add	x0, x19, #0x80
    a368:	stp	x21, x22, [sp, #32]
    a36c:	adrp	x21, 2c000 <xexit@@Base+0x151a0>
    a370:	stp	x25, x26, [sp, #64]
    a374:	stp	x27, x28, [sp, #80]
    a378:	str	x1, [x29, #96]
    a37c:	ldr	x20, [x24, #16]
    a380:	bl	52b0 <_ZNSt8ios_baseC2Ev@plt>
    a384:	ldr	x2, [x21, #3296]
    a388:	add	x3, x29, #0x230
    a38c:	movi	v0.4s, #0x0
    a390:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    a394:	str	xzr, [x29, #536]
    a398:	mov	x1, #0x0                   	// #0
    a39c:	ldp	x23, x26, [x2, #16]
    a3a0:	strh	wzr, [x29, #544]
    a3a4:	ldr	x0, [x0, #3216]
    a3a8:	stur	q0, [x3, #-8]
    a3ac:	stur	q0, [x3, #8]
    a3b0:	add	x0, x0, #0x10
    a3b4:	ldur	x3, [x23, #-24]
    a3b8:	str	x23, [x29, #192]
    a3bc:	str	x0, [x29, #320]
    a3c0:	str	x26, [x19, x3]
    a3c4:	str	xzr, [x29, #200]
    a3c8:	ldur	x0, [x23, #-24]
    a3cc:	add	x0, x19, x0
    a3d0:	bl	5590 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    a3d4:	ldr	x0, [x21, #3296]
    a3d8:	add	x2, x19, #0x10
    a3dc:	mov	x1, #0x0                   	// #0
    a3e0:	ldp	x25, x4, [x0, #32]
    a3e4:	str	x4, [x29, #128]
    a3e8:	ldur	x3, [x25, #-24]
    a3ec:	str	x25, [x29, #208]
    a3f0:	add	x0, x2, x3
    a3f4:	str	x4, [x2, x3]
    a3f8:	bl	5590 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    a3fc:	ldr	x1, [x21, #3296]
    a400:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    a404:	adrp	x21, 2c000 <xexit@@Base+0x151a0>
    a408:	adrp	x22, 2c000 <xexit@@Base+0x151a0>
    a40c:	ldr	x2, [x0, #3576]
    a410:	add	x0, x19, #0x50
    a414:	ldr	x27, [x1, #8]
    a418:	add	x4, x2, #0x68
    a41c:	ldr	x3, [x21, #3432]
    a420:	add	x5, x2, #0x18
    a424:	ldur	x6, [x27, #-24]
    a428:	add	x2, x2, #0x40
    a42c:	ldr	x7, [x1, #48]
    a430:	add	x1, x3, #0x10
    a434:	str	x7, [x19, x6]
    a438:	str	x7, [x29, #120]
    a43c:	str	x5, [x29, #192]
    a440:	stp	x2, x1, [x29, #208]
    a444:	stp	xzr, xzr, [x29, #224]
    a448:	stp	xzr, xzr, [x29, #240]
    a44c:	stp	xzr, xzr, [x29, #256]
    a450:	str	x4, [x29, #320]
    a454:	bl	5790 <_ZNSt6localeC1Ev@plt>
    a458:	ldr	x2, [x22, #4048]
    a45c:	add	x3, x19, #0x70
    a460:	mov	w4, #0x18                  	// #24
    a464:	add	x1, x19, #0x18
    a468:	add	x2, x2, #0x10
    a46c:	add	x0, x19, #0x80
    a470:	str	x2, [x29, #216]
    a474:	str	w4, [x29, #280]
    a478:	stp	x3, xzr, [x29, #288]
    a47c:	strb	wzr, [x29, #304]
    a480:	bl	5590 <_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@plt>
    a484:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    a488:	add	x0, x19, #0x10
    a48c:	add	x1, x1, #0xb60
    a490:	mov	x2, #0x1                   	// #1
    a494:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    a498:	cbz	x20, a7ac <gcc_cp_fe_context@@Base+0x534>
    a49c:	mov	x0, x20
    a4a0:	bl	52c0 <strlen@plt>
    a4a4:	mov	x1, x20
    a4a8:	mov	x2, x0
    a4ac:	add	x0, x19, #0x10
    a4b0:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    a4b4:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    a4b8:	add	x0, x19, #0x10
    a4bc:	add	x1, x1, #0xf98
    a4c0:	mov	x2, #0x1                   	// #1
    a4c4:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    a4c8:	adrp	x0, 17000 <xexit@@Base+0x1a0>
    a4cc:	add	x28, x19, #0x10
    a4d0:	add	x0, x0, #0x178
    a4d4:	add	x1, x29, #0x9e
    a4d8:	mov	w20, #0x67                  	// #103
    a4dc:	str	x1, [x29, #112]
    a4e0:	str	x0, [x29, #136]
    a4e4:	add	x0, x29, #0x9f
    a4e8:	str	x0, [x29, #104]
    a4ec:	ldr	x1, [x29, #112]
    a4f0:	mov	x0, x28
    a4f4:	mov	x2, #0x1                   	// #1
    a4f8:	strb	w20, [x29, #158]
    a4fc:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    a500:	ldr	x0, [x29, #136]
    a504:	ldrb	w20, [x0, #1]!
    a508:	str	x0, [x29, #136]
    a50c:	cbz	w20, a598 <gcc_cp_fe_context@@Base+0x320>
    a510:	cmp	w20, #0x2e
    a514:	b.ls	a560 <gcc_cp_fe_context@@Base+0x2e8>  // b.plast
    a518:	sub	w0, w20, #0x3f
    a51c:	and	w0, w0, #0xff
    a520:	cmp	w0, #0x3d
    a524:	b.hi	a4ec <gcc_cp_fe_context@@Base+0x274>  // b.pmore
    a528:	mov	x1, #0x1                   	// #1
    a52c:	lsl	x0, x1, x0
    a530:	mov	x1, #0x1                   	// #1
    a534:	movk	x1, #0xb000, lsl #16
    a538:	movk	x1, #0x3000, lsl #48
    a53c:	tst	x0, x1
    a540:	b.eq	a4ec <gcc_cp_fe_context@@Base+0x274>  // b.none
    a544:	ldr	x1, [x29, #104]
    a548:	mov	w3, #0x5c                  	// #92
    a54c:	mov	x0, x28
    a550:	mov	x2, #0x1                   	// #1
    a554:	strb	w3, [x29, #159]
    a558:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    a55c:	b	a4ec <gcc_cp_fe_context@@Base+0x274>
    a560:	cmp	w20, #0x23
    a564:	b.ls	a4ec <gcc_cp_fe_context@@Base+0x274>  // b.plast
    a568:	mov	x0, #0x1                   	// #1
    a56c:	mov	x1, #0x4f1000000000        	// #86930138071040
    a570:	lsl	x0, x0, x20
    a574:	tst	x0, x1
    a578:	b.eq	a4ec <gcc_cp_fe_context@@Base+0x274>  // b.none
    a57c:	ldr	x1, [x29, #104]
    a580:	mov	w3, #0x5c                  	// #92
    a584:	mov	x0, x28
    a588:	mov	x2, #0x1                   	// #1
    a58c:	strb	w3, [x29, #159]
    a590:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    a594:	b	a4ec <gcc_cp_fe_context@@Base+0x274>
    a598:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    a59c:	add	x0, x19, #0x10
    a5a0:	add	x1, x1, #0xfa0
    a5a4:	mov	x2, #0x1                   	// #1
    a5a8:	bl	54e0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    a5ac:	ldr	x0, [x29, #256]
    a5b0:	add	x20, x29, #0xa0
    a5b4:	add	x1, x20, #0x10
    a5b8:	stp	x1, xzr, [x29, #160]
    a5bc:	strb	wzr, [x29, #176]
    a5c0:	cbz	x0, a804 <gcc_cp_fe_context@@Base+0x58c>
    a5c4:	ldp	x4, x3, [x29, #240]
    a5c8:	cmp	x0, x4
    a5cc:	b.hi	a754 <gcc_cp_fe_context@@Base+0x4dc>  // b.pmore
    a5d0:	sub	x4, x4, x3
    a5d4:	mov	x0, x20
    a5d8:	mov	x2, #0x0                   	// #0
    a5dc:	mov	x1, #0x0                   	// #0
    a5e0:	bl	5660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    a5e4:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    a5e8:	add	x2, x19, #0x70
    a5ec:	ldr	x22, [x22, #4048]
    a5f0:	ldr	x1, [x0, #3576]
    a5f4:	add	x22, x22, #0x10
    a5f8:	ldr	x0, [x29, #288]
    a5fc:	add	x4, x1, #0x18
    a600:	add	x3, x1, #0x68
    a604:	add	x1, x1, #0x40
    a608:	str	x4, [x29, #192]
    a60c:	cmp	x0, x2
    a610:	stp	x1, x22, [x29, #208]
    a614:	str	x3, [x29, #320]
    a618:	b.eq	a620 <gcc_cp_fe_context@@Base+0x3a8>  // b.none
    a61c:	bl	5480 <_ZdlPv@plt>
    a620:	ldr	x21, [x21, #3432]
    a624:	add	x0, x19, #0x50
    a628:	add	x21, x21, #0x10
    a62c:	str	x21, [x29, #216]
    a630:	bl	55f0 <_ZNSt6localeD1Ev@plt>
    a634:	ldur	x1, [x27, #-24]
    a638:	add	x2, x29, #0xd0
    a63c:	ldp	x3, x5, [x29, #120]
    a640:	add	x0, x19, #0x80
    a644:	ldur	x4, [x25, #-24]
    a648:	str	x3, [x19, x1]
    a64c:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    a650:	ldur	x3, [x23, #-24]
    a654:	str	x25, [x29, #208]
    a658:	ldr	x1, [x1, #3216]
    a65c:	str	x5, [x2, x4]
    a660:	str	x23, [x29, #192]
    a664:	add	x1, x1, #0x10
    a668:	str	x26, [x19, x3]
    a66c:	str	xzr, [x29, #200]
    a670:	str	x1, [x29, #320]
    a674:	bl	5300 <_ZNSt8ios_baseD2Ev@plt>
    a678:	ldr	x0, [x24, #8]
    a67c:	ldrb	w0, [x0, #136]
    a680:	cbz	w0, a6a0 <gcc_cp_fe_context@@Base+0x428>
    a684:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    a688:	adrp	x1, 16000 <htab_create_typed_alloc@@Base+0xb8>
    a68c:	ldr	x2, [x29, #160]
    a690:	add	x1, x1, #0xfa8
    a694:	ldr	x0, [x0, #3968]
    a698:	ldr	x0, [x0]
    a69c:	bl	52d0 <fprintf@plt>
    a6a0:	ldr	x1, [x29, #160]
    a6a4:	mov	x0, x19
    a6a8:	mov	w2, #0x9                   	// #9
    a6ac:	bl	5230 <xregcomp@plt>
    a6b0:	mov	w21, w0
    a6b4:	cbz	w0, a76c <gcc_cp_fe_context@@Base+0x4f4>
    a6b8:	mov	x22, sp
    a6bc:	mov	x1, x19
    a6c0:	mov	x3, #0x0                   	// #0
    a6c4:	mov	x2, #0x0                   	// #0
    a6c8:	bl	5710 <xregerror@plt>
    a6cc:	mov	x3, x0
    a6d0:	mov	x1, x19
    a6d4:	add	x2, x3, #0xf
    a6d8:	mov	w0, w21
    a6dc:	and	x2, x2, #0xfffffffffffffff0
    a6e0:	sub	sp, sp, x2
    a6e4:	mov	x19, sp
    a6e8:	mov	x2, sp
    a6ec:	bl	5710 <xregerror@plt>
    a6f0:	ldr	x1, [x29, #160]
    a6f4:	adrp	x2, 16000 <htab_create_typed_alloc@@Base+0xb8>
    a6f8:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    a6fc:	mov	x3, x19
    a700:	add	x2, x2, #0xfd8
    a704:	add	x0, x0, #0xfe0
    a708:	mov	x4, #0x0                   	// #0
    a70c:	bl	5450 <concat@plt>
    a710:	mov	x19, x0
    a714:	mov	sp, x22
    a718:	ldr	x0, [x29, #160]
    a71c:	add	x20, x20, #0x10
    a720:	cmp	x0, x20
    a724:	b.eq	a72c <gcc_cp_fe_context@@Base+0x4b4>  // b.none
    a728:	bl	5480 <_ZdlPv@plt>
    a72c:	mov	sp, x29
    a730:	mov	x0, x19
    a734:	ldp	x29, x30, [sp]
    a738:	ldp	x19, x20, [sp, #16]
    a73c:	ldp	x21, x22, [sp, #32]
    a740:	ldp	x23, x24, [sp, #48]
    a744:	ldp	x25, x26, [sp, #64]
    a748:	ldp	x27, x28, [sp, #80]
    a74c:	add	sp, sp, #0x250
    a750:	ret
    a754:	sub	x4, x0, x3
    a758:	mov	x2, #0x0                   	// #0
    a75c:	mov	x0, x20
    a760:	mov	x1, #0x0                   	// #0
    a764:	bl	5660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    a768:	b	a5e4 <gcc_cp_fe_context@@Base+0x36c>
    a76c:	ldr	x1, [x29, #96]
    a770:	mov	x0, x19
    a774:	bl	5878 <_ZNSt6localeC1Ev@plt+0xe8>
    a778:	tst	w0, #0xff
    a77c:	mov	x0, x19
    a780:	b.ne	a7cc <gcc_cp_fe_context@@Base+0x554>  // b.any
    a784:	bl	52e0 <xregfree@plt>
    a788:	ldr	x1, [x29, #160]
    a78c:	adrp	x2, 17000 <xexit@@Base+0x1a0>
    a790:	adrp	x0, 17000 <xexit@@Base+0x1a0>
    a794:	add	x2, x2, #0x0
    a798:	add	x0, x0, #0x8
    a79c:	mov	x3, #0x0                   	// #0
    a7a0:	bl	5450 <concat@plt>
    a7a4:	mov	x19, x0
    a7a8:	b	a718 <gcc_cp_fe_context@@Base+0x4a0>
    a7ac:	ldr	x1, [x29, #208]
    a7b0:	add	x0, x19, #0x10
    a7b4:	ldur	x1, [x1, #-24]
    a7b8:	add	x0, x0, x1
    a7bc:	ldr	w1, [x0, #32]
    a7c0:	orr	w1, w1, #0x1
    a7c4:	bl	5700 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    a7c8:	b	a4b4 <gcc_cp_fe_context@@Base+0x23c>
    a7cc:	bl	52e0 <xregfree@plt>
    a7d0:	ldr	x0, [x24, #8]
    a7d4:	ldrb	w0, [x0, #136]
    a7d8:	cbz	w0, a7fc <gcc_cp_fe_context@@Base+0x584>
    a7dc:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    a7e0:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    a7e4:	ldr	x2, [x29, #96]
    a7e8:	add	x1, x1, #0x30
    a7ec:	ldr	x0, [x0, #3968]
    a7f0:	ldr	x2, [x2]
    a7f4:	ldr	x0, [x0]
    a7f8:	bl	52d0 <fprintf@plt>
    a7fc:	mov	x19, #0x0                   	// #0
    a800:	b	a718 <gcc_cp_fe_context@@Base+0x4a0>
    a804:	add	x1, x19, #0x60
    a808:	mov	x0, x20
    a80c:	bl	5370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    a810:	b	a5e4 <gcc_cp_fe_context@@Base+0x36c>
    a814:	mov	x20, x0
    a818:	mov	x0, x19
    a81c:	bl	5430 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    a820:	mov	x0, x20
    a824:	bl	5740 <_Unwind_Resume@plt>
    a828:	mov	x20, x0
    a82c:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
    a830:	ldr	x1, [x0, #3216]
    a834:	add	x0, x19, #0x80
    a838:	add	x1, x1, #0x10
    a83c:	str	x1, [x29, #320]
    a840:	bl	5300 <_ZNSt8ios_baseD2Ev@plt>
    a844:	mov	x0, x20
    a848:	bl	5740 <_Unwind_Resume@plt>
    a84c:	ldr	x1, [x29, #160]
    a850:	add	x2, x20, #0x10
    a854:	mov	x20, x0
    a858:	cmp	x1, x2
    a85c:	b.eq	a818 <gcc_cp_fe_context@@Base+0x5a0>  // b.none
    a860:	mov	x0, x1
    a864:	bl	5480 <_ZdlPv@plt>
    a868:	b	a818 <gcc_cp_fe_context@@Base+0x5a0>
    a86c:	mov	x19, x0
    a870:	ldr	x0, [x29, #160]
    a874:	add	x20, x20, #0x10
    a878:	cmp	x0, x20
    a87c:	b.eq	a884 <gcc_cp_fe_context@@Base+0x60c>  // b.none
    a880:	bl	5480 <_ZdlPv@plt>
    a884:	mov	x0, x19
    a888:	bl	5740 <_Unwind_Resume@plt>
    a88c:	mov	x19, x0
    a890:	mov	sp, x22
    a894:	b	a870 <gcc_cp_fe_context@@Base+0x5f8>
    a898:	ldr	x22, [x22, #4048]
    a89c:	mov	x20, x0
    a8a0:	ldr	x0, [x29, #288]
    a8a4:	add	x22, x22, #0x10
    a8a8:	str	x22, [x29, #216]
    a8ac:	add	x1, x19, #0x70
    a8b0:	cmp	x0, x1
    a8b4:	b.eq	a8bc <gcc_cp_fe_context@@Base+0x644>  // b.none
    a8b8:	bl	5480 <_ZdlPv@plt>
    a8bc:	ldr	x1, [x21, #3432]
    a8c0:	add	x0, x19, #0x50
    a8c4:	add	x1, x1, #0x10
    a8c8:	str	x1, [x29, #216]
    a8cc:	bl	55f0 <_ZNSt6localeD1Ev@plt>
    a8d0:	ldur	x1, [x27, #-24]
    a8d4:	add	x0, x29, #0xd0
    a8d8:	ldur	x2, [x25, #-24]
    a8dc:	ldr	x3, [x29, #120]
    a8e0:	str	x3, [x19, x1]
    a8e4:	ldur	x1, [x23, #-24]
    a8e8:	str	x25, [x29, #208]
    a8ec:	ldr	x3, [x29, #128]
    a8f0:	str	x3, [x0, x2]
    a8f4:	str	x23, [x29, #192]
    a8f8:	str	x26, [x19, x1]
    a8fc:	str	xzr, [x29, #200]
    a900:	b	a82c <gcc_cp_fe_context@@Base+0x5b4>
    a904:	ldur	x1, [x23, #-24]
    a908:	str	x23, [x29, #192]
    a90c:	mov	x20, x0
    a910:	str	x26, [x19, x1]
    a914:	str	xzr, [x29, #200]
    a918:	b	a82c <gcc_cp_fe_context@@Base+0x5b4>
    a91c:	nop
    a920:	stp	x29, x30, [sp, #-176]!
    a924:	mov	x29, sp
    a928:	stp	x19, x20, [sp, #16]
    a92c:	mov	x20, x0
    a930:	stp	x23, x24, [sp, #48]
    a934:	add	x24, sp, #0x70
    a938:	add	x0, x24, #0x10
    a93c:	stp	x0, xzr, [sp, #112]
    a940:	mov	w23, w1
    a944:	mov	x1, x24
    a948:	ldr	x0, [x20, #144]
    a94c:	strb	wzr, [sp, #128]
    a950:	stp	x21, x22, [sp, #32]
    a954:	mov	x21, x2
    a958:	ldr	x3, [x0]
    a95c:	stp	x25, x26, [sp, #64]
    a960:	stp	x27, x28, [sp, #80]
    a964:	ldr	x3, [x3]
    a968:	blr	x3
    a96c:	mov	x25, x0
    a970:	cbz	x0, a9a8 <gcc_cp_fe_context@@Base+0x730>
    a974:	ldr	x0, [sp, #112]
    a978:	add	x24, x24, #0x10
    a97c:	cmp	x0, x24
    a980:	b.eq	a988 <gcc_cp_fe_context@@Base+0x710>  // b.none
    a984:	bl	5480 <_ZdlPv@plt>
    a988:	mov	x0, x25
    a98c:	ldp	x19, x20, [sp, #16]
    a990:	ldp	x21, x22, [sp, #32]
    a994:	ldp	x23, x24, [sp, #48]
    a998:	ldp	x25, x26, [sp, #64]
    a99c:	ldp	x27, x28, [sp, #80]
    a9a0:	ldp	x29, x30, [sp], #176
    a9a4:	ret
    a9a8:	add	x20, x20, #0x50
    a9ac:	ldp	x19, x0, [x20, #8]
    a9b0:	cmp	x19, x0
    a9b4:	b.eq	ab70 <gcc_cp_fe_context@@Base+0x8f8>  // b.none
    a9b8:	add	x0, x19, #0x10
    a9bc:	ldr	x22, [sp, #120]
    a9c0:	str	x0, [x19]
    a9c4:	ldr	x26, [sp, #112]
    a9c8:	cmn	x26, x22
    a9cc:	ccmp	x26, #0x0, #0x0, ne  // ne = any
    a9d0:	b.eq	ab8c <gcc_cp_fe_context@@Base+0x914>  // b.none
    a9d4:	str	x22, [sp, #144]
    a9d8:	cmp	x22, #0xf
    a9dc:	b.hi	aaf0 <gcc_cp_fe_context@@Base+0x878>  // b.pmore
    a9e0:	cmp	x22, #0x1
    a9e4:	b.ne	ab84 <gcc_cp_fe_context@@Base+0x90c>  // b.any
    a9e8:	ldrb	w1, [x26]
    a9ec:	strb	w1, [x19, #16]
    a9f0:	str	x22, [x19, #8]
    a9f4:	strb	wzr, [x0, x22]
    a9f8:	ldr	x0, [x20, #8]
    a9fc:	add	x0, x0, #0x20
    aa00:	str	x0, [x20, #8]
    aa04:	cmp	w23, #0x0
    aa08:	b.le	a974 <gcc_cp_fe_context@@Base+0x6fc>
    aa0c:	sub	w23, w23, #0x1
    aa10:	add	x0, x21, #0x8
    aa14:	add	x26, sp, #0x90
    aa18:	add	x27, sp, #0x68
    aa1c:	add	x23, x0, w23, uxtw #3
    aa20:	add	x22, x26, #0x10
    aa24:	b	aa88 <gcc_cp_fe_context@@Base+0x810>
    aa28:	ldrb	w1, [x28]
    aa2c:	mov	x0, x22
    aa30:	strb	w1, [sp, #160]
    aa34:	str	x19, [sp, #152]
    aa38:	strb	wzr, [x0, x19]
    aa3c:	ldp	x1, x0, [x20, #8]
    aa40:	cmp	x1, x0
    aa44:	b.eq	aad0 <gcc_cp_fe_context@@Base+0x858>  // b.none
    aa48:	add	x0, x1, #0x10
    aa4c:	str	x0, [x1]
    aa50:	ldr	x0, [sp, #144]
    aa54:	cmp	x0, x22
    aa58:	b.eq	ab64 <gcc_cp_fe_context@@Base+0x8ec>  // b.none
    aa5c:	str	x0, [x1]
    aa60:	ldr	x0, [sp, #160]
    aa64:	str	x0, [x1, #16]
    aa68:	ldr	x0, [x20, #8]
    aa6c:	ldr	x2, [sp, #152]
    aa70:	str	x2, [x1, #8]
    aa74:	add	x0, x0, #0x20
    aa78:	str	x0, [x20, #8]
    aa7c:	add	x21, x21, #0x8
    aa80:	cmp	x23, x21
    aa84:	b.eq	a974 <gcc_cp_fe_context@@Base+0x6fc>  // b.none
    aa88:	ldr	x28, [x21]
    aa8c:	str	x22, [sp, #144]
    aa90:	cbz	x28, ab58 <gcc_cp_fe_context@@Base+0x8e0>
    aa94:	mov	x0, x28
    aa98:	bl	52c0 <strlen@plt>
    aa9c:	str	x0, [sp, #104]
    aaa0:	mov	x19, x0
    aaa4:	cmp	x0, #0xf
    aaa8:	b.hi	ab24 <gcc_cp_fe_context@@Base+0x8ac>  // b.pmore
    aaac:	cmp	x0, #0x1
    aab0:	b.eq	aa28 <gcc_cp_fe_context@@Base+0x7b0>  // b.none
    aab4:	mov	x0, x22
    aab8:	cbnz	x19, ab40 <gcc_cp_fe_context@@Base+0x8c8>
    aabc:	str	x19, [sp, #152]
    aac0:	strb	wzr, [x0, x19]
    aac4:	ldp	x1, x0, [x20, #8]
    aac8:	cmp	x1, x0
    aacc:	b.ne	aa48 <gcc_cp_fe_context@@Base+0x7d0>  // b.any
    aad0:	mov	x2, x26
    aad4:	mov	x0, x20
    aad8:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    aadc:	ldr	x0, [sp, #144]
    aae0:	cmp	x0, x22
    aae4:	b.eq	aa7c <gcc_cp_fe_context@@Base+0x804>  // b.none
    aae8:	bl	5480 <_ZdlPv@plt>
    aaec:	b	aa7c <gcc_cp_fe_context@@Base+0x804>
    aaf0:	add	x1, sp, #0x90
    aaf4:	mov	x0, x19
    aaf8:	mov	x2, #0x0                   	// #0
    aafc:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    ab00:	ldr	x1, [sp, #144]
    ab04:	str	x0, [x19]
    ab08:	str	x1, [x19, #16]
    ab0c:	mov	x2, x22
    ab10:	mov	x1, x26
    ab14:	bl	5210 <memcpy@plt>
    ab18:	ldr	x0, [x19]
    ab1c:	ldr	x22, [sp, #144]
    ab20:	b	a9f0 <gcc_cp_fe_context@@Base+0x778>
    ab24:	mov	x1, x27
    ab28:	mov	x0, x26
    ab2c:	mov	x2, #0x0                   	// #0
    ab30:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    ab34:	ldr	x1, [sp, #104]
    ab38:	str	x0, [sp, #144]
    ab3c:	str	x1, [sp, #160]
    ab40:	mov	x2, x19
    ab44:	mov	x1, x28
    ab48:	bl	5210 <memcpy@plt>
    ab4c:	ldr	x19, [sp, #104]
    ab50:	ldr	x0, [sp, #144]
    ab54:	b	aa34 <gcc_cp_fe_context@@Base+0x7bc>
    ab58:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    ab5c:	add	x0, x0, #0xef8
    ab60:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    ab64:	ldp	x2, x3, [sp, #160]
    ab68:	stp	x2, x3, [x1, #16]
    ab6c:	b	aa68 <gcc_cp_fe_context@@Base+0x7f0>
    ab70:	mov	x1, x19
    ab74:	mov	x2, x24
    ab78:	mov	x0, x20
    ab7c:	bl	5510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    ab80:	b	aa04 <gcc_cp_fe_context@@Base+0x78c>
    ab84:	cbz	x22, a9f0 <gcc_cp_fe_context@@Base+0x778>
    ab88:	b	ab0c <gcc_cp_fe_context@@Base+0x894>
    ab8c:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    ab90:	add	x0, x0, #0xef8
    ab94:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    ab98:	ldr	x1, [sp, #144]
    ab9c:	add	x26, x26, #0x10
    aba0:	mov	x19, x0
    aba4:	cmp	x1, x26
    aba8:	b.eq	abb4 <gcc_cp_fe_context@@Base+0x93c>  // b.none
    abac:	mov	x0, x1
    abb0:	bl	5480 <_ZdlPv@plt>
    abb4:	ldr	x0, [sp, #112]
    abb8:	add	x24, x24, #0x10
    abbc:	cmp	x0, x24
    abc0:	b.eq	abc8 <gcc_cp_fe_context@@Base+0x950>  // b.none
    abc4:	bl	5480 <_ZdlPv@plt>
    abc8:	mov	x0, x19
    abcc:	bl	5740 <_Unwind_Resume@plt>
    abd0:	mov	x19, x0
    abd4:	b	abb4 <gcc_cp_fe_context@@Base+0x93c>
    abd8:	stp	x29, x30, [sp, #-48]!
    abdc:	mov	x29, sp
    abe0:	stp	x19, x20, [sp, #16]
    abe4:	mov	w20, w2
    abe8:	mov	x19, x0
    abec:	str	x21, [sp, #32]
    abf0:	mov	x21, x3
    abf4:	bl	9980 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x738>
    abf8:	cbz	x0, ac0c <gcc_cp_fe_context@@Base+0x994>
    abfc:	ldp	x19, x20, [sp, #16]
    ac00:	ldr	x21, [sp, #32]
    ac04:	ldp	x29, x30, [sp], #48
    ac08:	ret
    ac0c:	mov	x2, x21
    ac10:	mov	w1, w20
    ac14:	mov	x0, x19
    ac18:	ldp	x19, x20, [sp, #16]
    ac1c:	ldr	x21, [sp, #32]
    ac20:	ldp	x29, x30, [sp], #48
    ac24:	b	a920 <gcc_cp_fe_context@@Base+0x6a8>
    ac28:	stp	x29, x30, [sp, #-240]!
    ac2c:	mov	w2, #0x0                   	// #0
    ac30:	mov	x29, sp
    ac34:	add	x3, sp, #0x50
    ac38:	stp	x19, x20, [sp, #16]
    ac3c:	mov	x19, x0
    ac40:	stp	x21, x22, [sp, #32]
    ac44:	mov	x22, x1
    ac48:	mov	w1, #0x1                   	// #1
    ac4c:	mov	w0, w1
    ac50:	bl	5250 <socketpair@plt>
    ac54:	cbz	w0, ac80 <gcc_cp_fe_context@@Base+0xa08>
    ac58:	ldp	x2, x0, [x19, #64]
    ac5c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    ac60:	mov	w20, #0x0                   	// #0
    ac64:	add	x1, x1, #0x48
    ac68:	blr	x2
    ac6c:	mov	w0, w20
    ac70:	ldp	x19, x20, [sp, #16]
    ac74:	ldp	x21, x22, [sp, #32]
    ac78:	ldp	x29, x30, [sp], #240
    ac7c:	ret
    ac80:	mov	w20, w0
    ac84:	add	x0, sp, #0x58
    ac88:	bl	5270 <pipe@plt>
    ac8c:	cbz	w0, acc4 <gcc_cp_fe_context@@Base+0xa4c>
    ac90:	ldp	x2, x0, [x19, #64]
    ac94:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    ac98:	add	x1, x1, #0x68
    ac9c:	blr	x2
    aca0:	ldr	w0, [sp, #80]
    aca4:	bl	5610 <close@plt>
    aca8:	ldr	w0, [sp, #84]
    acac:	bl	5610 <close@plt>
    acb0:	mov	w0, w20
    acb4:	ldp	x19, x20, [sp, #16]
    acb8:	ldp	x21, x22, [sp, #32]
    acbc:	ldp	x29, x30, [sp], #240
    acc0:	ret
    acc4:	mov	x3, #0x15                  	// #21
    acc8:	add	x21, sp, #0x68
    accc:	stp	x23, x24, [sp, #48]
    acd0:	add	x24, sp, #0x88
    acd4:	mov	x1, x21
    acd8:	mov	x2, #0x0                   	// #0
    acdc:	add	x23, x24, #0x10
    ace0:	mov	x0, x24
    ace4:	str	x25, [sp, #64]
    ace8:	str	x3, [sp, #104]
    acec:	add	x20, x19, #0x50
    acf0:	str	x23, [sp, #136]
    acf4:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    acf8:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    acfc:	add	x1, x1, #0x180
    ad00:	ldr	x2, [sp, #104]
    ad04:	str	x0, [sp, #136]
    ad08:	str	x2, [sp, #152]
    ad0c:	ldp	x2, x3, [x1]
    ad10:	stp	x2, x3, [x0]
    ad14:	ldur	x1, [x1, #13]
    ad18:	stur	x1, [x0, #13]
    ad1c:	ldr	x0, [sp, #104]
    ad20:	str	x0, [sp, #144]
    ad24:	ldr	x1, [sp, #136]
    ad28:	strb	wzr, [x1, x0]
    ad2c:	ldp	x1, x0, [x20, #8]
    ad30:	cmp	x1, x0
    ad34:	b.eq	b314 <gcc_cp_fe_context@@Base+0x109c>  // b.none
    ad38:	add	x0, x1, #0x10
    ad3c:	str	x0, [x1]
    ad40:	ldr	x0, [sp, #136]
    ad44:	cmp	x0, x23
    ad48:	b.eq	b2b4 <gcc_cp_fe_context@@Base+0x103c>  // b.none
    ad4c:	str	x0, [x1]
    ad50:	ldr	x0, [sp, #152]
    ad54:	str	x0, [x1, #16]
    ad58:	ldr	x0, [x20, #8]
    ad5c:	ldr	x2, [sp, #144]
    ad60:	str	x2, [x1, #8]
    ad64:	add	x0, x0, #0x20
    ad68:	str	x0, [x20, #8]
    ad6c:	ldr	w3, [sp, #84]
    ad70:	adrp	x2, 17000 <xexit@@Base+0x1a0>
    ad74:	add	x2, x2, #0x198
    ad78:	mov	x1, #0x64                  	// #100
    ad7c:	mov	x0, x24
    ad80:	add	x25, x21, #0x10
    ad84:	bl	54f0 <snprintf@plt>
    ad88:	str	x25, [sp, #104]
    ad8c:	mov	x0, x24
    ad90:	bl	52c0 <strlen@plt>
    ad94:	str	x0, [sp, #96]
    ad98:	mov	x23, x0
    ad9c:	cmp	x0, #0xf
    ada0:	b.hi	b258 <gcc_cp_fe_context@@Base+0xfe0>  // b.pmore
    ada4:	cmp	x0, #0x1
    ada8:	b.ne	b21c <gcc_cp_fe_context@@Base+0xfa4>  // b.any
    adac:	ldrb	w1, [sp, #136]
    adb0:	mov	x0, x25
    adb4:	strb	w1, [sp, #120]
    adb8:	str	x23, [sp, #112]
    adbc:	strb	wzr, [x0, x23]
    adc0:	ldp	x1, x0, [x20, #8]
    adc4:	cmp	x1, x0
    adc8:	b.eq	b380 <gcc_cp_fe_context@@Base+0x1108>  // b.none
    adcc:	add	x0, x1, #0x10
    add0:	str	x0, [x1]
    add4:	add	x0, x21, #0x10
    add8:	ldr	x2, [sp, #104]
    addc:	cmp	x2, x0
    ade0:	b.eq	b2a8 <gcc_cp_fe_context@@Base+0x1030>  // b.none
    ade4:	str	x2, [x1]
    ade8:	ldr	x0, [sp, #120]
    adec:	str	x0, [x1, #16]
    adf0:	ldr	x23, [x20, #8]
    adf4:	ldr	x0, [sp, #112]
    adf8:	str	x0, [x1, #8]
    adfc:	add	x23, x23, #0x20
    ae00:	str	x23, [x20, #8]
    ae04:	ldr	x0, [x20, #16]
    ae08:	cmp	x0, x23
    ae0c:	b.eq	b288 <gcc_cp_fe_context@@Base+0x1010>  // b.none
    ae10:	add	x0, x23, #0x10
    ae14:	ldr	x24, [x19, #112]
    ae18:	str	x0, [x23]
    ae1c:	ldr	x25, [x19, #104]
    ae20:	cmn	x25, x24
    ae24:	ccmp	x25, #0x0, #0x0, ne  // ne = any
    ae28:	b.eq	af18 <gcc_cp_fe_context@@Base+0xca0>  // b.none
    ae2c:	str	x24, [sp, #104]
    ae30:	cmp	x24, #0xf
    ae34:	b.hi	b2e0 <gcc_cp_fe_context@@Base+0x1068>  // b.pmore
    ae38:	cmp	x24, #0x1
    ae3c:	b.ne	b2d8 <gcc_cp_fe_context@@Base+0x1060>  // b.any
    ae40:	ldrb	w1, [x25]
    ae44:	strb	w1, [x23, #16]
    ae48:	str	x24, [x23, #8]
    ae4c:	strb	wzr, [x0, x24]
    ae50:	ldr	x0, [x20, #8]
    ae54:	add	x0, x0, #0x20
    ae58:	str	x0, [x20, #8]
    ae5c:	ldp	x1, x3, [x20, #8]
    ae60:	add	x0, x21, #0x10
    ae64:	mov	w2, #0x632d                	// #25389
    ae68:	mov	x4, #0x2                   	// #2
    ae6c:	stp	x0, x4, [sp, #104]
    ae70:	strh	w2, [sp, #120]
    ae74:	strb	wzr, [sp, #122]
    ae78:	cmp	x1, x3
    ae7c:	b.eq	b35c <gcc_cp_fe_context@@Base+0x10e4>  // b.none
    ae80:	add	x2, x1, #0x10
    ae84:	str	x2, [x1]
    ae88:	ldr	x2, [sp, #104]
    ae8c:	cmp	x2, x0
    ae90:	b.eq	b2cc <gcc_cp_fe_context@@Base+0x1054>  // b.none
    ae94:	str	x2, [x1]
    ae98:	ldr	x0, [sp, #120]
    ae9c:	str	x0, [x1, #16]
    aea0:	ldr	x0, [x20, #8]
    aea4:	ldr	x2, [sp, #112]
    aea8:	str	x2, [x1, #8]
    aeac:	add	x0, x0, #0x20
    aeb0:	str	x0, [x20, #8]
    aeb4:	ldp	x1, x3, [x20, #8]
    aeb8:	add	x0, x21, #0x10
    aebc:	mov	w2, #0x6f2d                	// #28461
    aec0:	mov	x4, #0x2                   	// #2
    aec4:	stp	x0, x4, [sp, #104]
    aec8:	strh	w2, [sp, #120]
    aecc:	strb	wzr, [sp, #122]
    aed0:	cmp	x1, x3
    aed4:	b.eq	b338 <gcc_cp_fe_context@@Base+0x10c0>  // b.none
    aed8:	add	x2, x1, #0x10
    aedc:	str	x2, [x1]
    aee0:	ldr	x2, [sp, #104]
    aee4:	cmp	x2, x0
    aee8:	b.eq	b2c0 <gcc_cp_fe_context@@Base+0x1048>  // b.none
    aeec:	str	x2, [x1]
    aef0:	ldr	x0, [sp, #120]
    aef4:	str	x0, [x1, #16]
    aef8:	ldr	x0, [x20, #8]
    aefc:	ldr	x2, [sp, #112]
    af00:	str	x2, [x1, #8]
    af04:	add	x0, x0, #0x20
    af08:	str	x0, [x20, #8]
    af0c:	add	x24, x21, #0x10
    af10:	str	x24, [sp, #104]
    af14:	cbnz	x22, af24 <gcc_cp_fe_context@@Base+0xcac>
    af18:	adrp	x0, 16000 <htab_create_typed_alloc@@Base+0xb8>
    af1c:	add	x0, x0, #0xef8
    af20:	bl	5410 <_ZSt19__throw_logic_errorPKc@plt>
    af24:	mov	x0, x22
    af28:	bl	52c0 <strlen@plt>
    af2c:	str	x0, [sp, #96]
    af30:	mov	x23, x0
    af34:	cmp	x0, #0xf
    af38:	b.hi	b228 <gcc_cp_fe_context@@Base+0xfb0>  // b.pmore
    af3c:	cmp	x23, #0x1
    af40:	b.ne	b210 <gcc_cp_fe_context@@Base+0xf98>  // b.any
    af44:	ldrb	w1, [x22]
    af48:	mov	x0, x24
    af4c:	strb	w1, [sp, #120]
    af50:	str	x23, [sp, #112]
    af54:	strb	wzr, [x0, x23]
    af58:	ldp	x1, x0, [x20, #8]
    af5c:	cmp	x1, x0
    af60:	b.eq	b3a8 <gcc_cp_fe_context@@Base+0x1130>  // b.none
    af64:	add	x0, x1, #0x10
    af68:	str	x0, [x1]
    af6c:	add	x0, x21, #0x10
    af70:	ldr	x2, [sp, #104]
    af74:	cmp	x2, x0
    af78:	b.eq	b29c <gcc_cp_fe_context@@Base+0x1024>  // b.none
    af7c:	str	x2, [x1]
    af80:	ldr	x0, [sp, #120]
    af84:	str	x0, [x1, #16]
    af88:	ldr	x0, [x20, #8]
    af8c:	ldr	x2, [sp, #112]
    af90:	str	x2, [x1, #8]
    af94:	add	x0, x0, #0x20
    af98:	str	x0, [x20, #8]
    af9c:	ldrb	w0, [x19, #136]
    afa0:	cbz	w0, affc <gcc_cp_fe_context@@Base+0xd84>
    afa4:	ldp	x1, x3, [x20, #8]
    afa8:	add	x0, x21, #0x10
    afac:	mov	w2, #0x762d                	// #30253
    afb0:	mov	x4, #0x2                   	// #2
    afb4:	stp	x0, x4, [sp, #104]
    afb8:	strh	w2, [sp, #120]
    afbc:	strb	wzr, [sp, #122]
    afc0:	cmp	x1, x3
    afc4:	b.eq	b410 <gcc_cp_fe_context@@Base+0x1198>  // b.none
    afc8:	add	x2, x1, #0x10
    afcc:	str	x2, [x1]
    afd0:	ldr	x2, [sp, #104]
    afd4:	cmp	x2, x0
    afd8:	b.eq	b3cc <gcc_cp_fe_context@@Base+0x1154>  // b.none
    afdc:	str	x2, [x1]
    afe0:	ldr	x0, [sp, #120]
    afe4:	str	x0, [x1, #16]
    afe8:	ldr	x0, [x20, #8]
    afec:	ldr	x2, [sp, #112]
    aff0:	str	x2, [x1, #8]
    aff4:	add	x0, x0, #0x20
    aff8:	str	x0, [x20, #8]
    affc:	mov	x0, #0x20                  	// #32
    b000:	bl	5490 <_Znwm@plt>
    b004:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    b008:	mov	x20, x0
    b00c:	ldr	w3, [sp, #80]
    b010:	add	x22, x0, #0x10
    b014:	ldr	x1, [x1, #3344]
    b018:	mov	x0, x22
    b01c:	ldr	w2, [sp, #88]
    b020:	add	x1, x1, #0x10
    b024:	str	x1, [x20]
    b028:	stp	w3, w2, [x20, #8]
    b02c:	bl	ec88 <gcc_cp_fe_context@@Base+0x4a10>
    b030:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    b034:	add	x3, x3, #0x5c8
    b038:	str	x3, [x20]
    b03c:	mov	x0, x22
    b040:	str	x20, [x19, #16]
    b044:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    b048:	str	x19, [x20, #24]
    b04c:	add	x2, x2, #0x560
    b050:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    b054:	add	x1, x1, #0xb8
    b058:	bl	ecf0 <gcc_cp_fe_context@@Base+0x4a78>
    b05c:	ldr	x0, [x19, #16]
    b060:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    b064:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    b068:	add	x2, x2, #0x638
    b06c:	add	x1, x1, #0xc8
    b070:	add	x0, x0, #0x10
    b074:	bl	ecf0 <gcc_cp_fe_context@@Base+0x4a78>
    b078:	ldr	x0, [x19, #16]
    b07c:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    b080:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    b084:	add	x2, x2, #0x758
    b088:	add	x1, x1, #0x1b8
    b08c:	add	x0, x0, #0x10
    b090:	bl	ecf0 <gcc_cp_fe_context@@Base+0x4a78>
    b094:	ldr	x0, [x19, #16]
    b098:	adrp	x2, 9000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x58>
    b09c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
    b0a0:	add	x2, x2, #0x6f8
    b0a4:	add	x1, x1, #0x1c8
    b0a8:	add	x0, x0, #0x10
    b0ac:	bl	ecf0 <gcc_cp_fe_context@@Base+0x4a78>
    b0b0:	ldp	x2, x0, [x19, #80]
    b0b4:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    b0b8:	sub	x0, x0, x2
    b0bc:	asr	x0, x0, #5
    b0c0:	add	x0, x0, #0x1
    b0c4:	cmp	x0, x1
    b0c8:	b.hi	b4d4 <gcc_cp_fe_context@@Base+0x125c>  // b.pmore
    b0cc:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    b0d0:	lsl	x0, x0, #3
    b0d4:	ldr	x1, [x1, #3256]
    b0d8:	bl	56d0 <_ZnamRKSt9nothrow_t@plt>
    b0dc:	mov	x20, x0
    b0e0:	cbz	x0, b1f0 <gcc_cp_fe_context@@Base+0xf78>
    b0e4:	ldp	x0, x3, [x19, #80]
    b0e8:	sub	x3, x3, x0
    b0ec:	cmp	xzr, x3, asr #5
    b0f0:	asr	x3, x3, #5
    b0f4:	b.eq	b408 <gcc_cp_fe_context@@Base+0x1190>  // b.none
    b0f8:	mov	w1, #0x0                   	// #0
    b0fc:	mov	x2, #0x0                   	// #0
    b100:	lsl	x4, x2, #5
    b104:	add	w1, w1, #0x1
    b108:	cmp	x3, w1, uxtw
    b10c:	ldr	x4, [x0, x4]
    b110:	str	x4, [x20, x2, lsl #3]
    b114:	mov	w2, w1
    b118:	b.hi	b100 <gcc_cp_fe_context@@Base+0xe88>  // b.pmore
    b11c:	add	x3, x20, x3, lsl #3
    b120:	str	xzr, [x3]
    b124:	bl	55e0 <fork@plt>
    b128:	mov	w22, w0
    b12c:	cmn	w0, #0x1
    b130:	b.eq	b3d8 <gcc_cp_fe_context@@Base+0x1160>  // b.none
    b134:	cbz	w0, b434 <gcc_cp_fe_context@@Base+0x11bc>
    b138:	ldr	w0, [sp, #84]
    b13c:	bl	5610 <close@plt>
    b140:	ldr	w0, [sp, #92]
    b144:	bl	5610 <close@plt>
    b148:	ldr	x0, [x19, #16]
    b14c:	mov	w1, #0x48                  	// #72
    b150:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    b154:	cbnz	w0, b1bc <gcc_cp_fe_context@@Base+0xf44>
    b158:	mov	w19, #0x0                   	// #0
    b15c:	ldr	w0, [sp, #80]
    b160:	bl	5610 <close@plt>
    b164:	ldr	w0, [sp, #88]
    b168:	bl	5610 <close@plt>
    b16c:	mov	x1, x21
    b170:	mov	w0, w22
    b174:	mov	w2, #0x0                   	// #0
    b178:	bl	5310 <waitpid@plt>
    b17c:	cmn	w0, #0x1
    b180:	b.eq	b1e0 <gcc_cp_fe_context@@Base+0xf68>  // b.none
    b184:	ldr	w1, [sp, #104]
    b188:	cmp	w19, #0x0
    b18c:	cset	w20, ne  // ne = any
    b190:	and	w0, w1, #0x7f
    b194:	ubfx	x1, x1, #8, #8
    b198:	orr	w1, w1, w0
    b19c:	cbnz	w1, b1f0 <gcc_cp_fe_context@@Base+0xf78>
    b1a0:	mov	w0, w20
    b1a4:	ldp	x19, x20, [sp, #16]
    b1a8:	ldp	x21, x22, [sp, #32]
    b1ac:	ldp	x23, x24, [sp, #48]
    b1b0:	ldr	x25, [sp, #64]
    b1b4:	ldp	x29, x30, [sp], #240
    b1b8:	ret
    b1bc:	ldr	x0, [x19, #16]
    b1c0:	mov	x1, #0x0                   	// #0
    b1c4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b1c8:	cbz	w0, b158 <gcc_cp_fe_context@@Base+0xee0>
    b1cc:	ldr	x0, [x19, #16]
    b1d0:	mov	w1, #0x0                   	// #0
    b1d4:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    b1d8:	mov	w19, w0
    b1dc:	b	b15c <gcc_cp_fe_context@@Base+0xee4>
    b1e0:	bl	5570 <__errno_location@plt>
    b1e4:	ldr	w0, [x0]
    b1e8:	cmp	w0, #0x4
    b1ec:	b.eq	b184 <gcc_cp_fe_context@@Base+0xf0c>  // b.none
    b1f0:	mov	w20, #0x0                   	// #0
    b1f4:	mov	w0, w20
    b1f8:	ldp	x19, x20, [sp, #16]
    b1fc:	ldp	x21, x22, [sp, #32]
    b200:	ldp	x23, x24, [sp, #48]
    b204:	ldr	x25, [sp, #64]
    b208:	ldp	x29, x30, [sp], #240
    b20c:	ret
    b210:	mov	x0, x24
    b214:	cbz	x23, af50 <gcc_cp_fe_context@@Base+0xcd8>
    b218:	b	b244 <gcc_cp_fe_context@@Base+0xfcc>
    b21c:	mov	x0, x25
    b220:	cbz	x23, adb8 <gcc_cp_fe_context@@Base+0xb40>
    b224:	b	b274 <gcc_cp_fe_context@@Base+0xffc>
    b228:	add	x1, sp, #0x60
    b22c:	mov	x0, x21
    b230:	mov	x2, #0x0                   	// #0
    b234:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    b238:	ldr	x1, [sp, #96]
    b23c:	str	x0, [sp, #104]
    b240:	str	x1, [sp, #120]
    b244:	mov	x2, x23
    b248:	mov	x1, x22
    b24c:	bl	5210 <memcpy@plt>
    b250:	ldp	x23, x0, [sp, #96]
    b254:	b	af50 <gcc_cp_fe_context@@Base+0xcd8>
    b258:	add	x1, sp, #0x60
    b25c:	mov	x0, x21
    b260:	mov	x2, #0x0                   	// #0
    b264:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    b268:	ldr	x1, [sp, #96]
    b26c:	str	x0, [sp, #104]
    b270:	str	x1, [sp, #120]
    b274:	mov	x2, x23
    b278:	mov	x1, x24
    b27c:	bl	5210 <memcpy@plt>
    b280:	ldp	x23, x0, [sp, #96]
    b284:	b	adb8 <gcc_cp_fe_context@@Base+0xb40>
    b288:	mov	x1, x23
    b28c:	add	x2, x19, #0x68
    b290:	mov	x0, x20
    b294:	bl	5510 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    b298:	b	ae5c <gcc_cp_fe_context@@Base+0xbe4>
    b29c:	ldp	x2, x3, [sp, #120]
    b2a0:	stp	x2, x3, [x1, #16]
    b2a4:	b	af88 <gcc_cp_fe_context@@Base+0xd10>
    b2a8:	ldp	x2, x3, [sp, #120]
    b2ac:	stp	x2, x3, [x1, #16]
    b2b0:	b	adf0 <gcc_cp_fe_context@@Base+0xb78>
    b2b4:	ldp	x2, x3, [sp, #152]
    b2b8:	stp	x2, x3, [x1, #16]
    b2bc:	b	ad58 <gcc_cp_fe_context@@Base+0xae0>
    b2c0:	ldp	x2, x3, [sp, #120]
    b2c4:	stp	x2, x3, [x1, #16]
    b2c8:	b	aef8 <gcc_cp_fe_context@@Base+0xc80>
    b2cc:	ldp	x2, x3, [sp, #120]
    b2d0:	stp	x2, x3, [x1, #16]
    b2d4:	b	aea0 <gcc_cp_fe_context@@Base+0xc28>
    b2d8:	cbz	x24, ae48 <gcc_cp_fe_context@@Base+0xbd0>
    b2dc:	b	b2fc <gcc_cp_fe_context@@Base+0x1084>
    b2e0:	mov	x1, x21
    b2e4:	mov	x0, x23
    b2e8:	mov	x2, #0x0                   	// #0
    b2ec:	bl	5750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    b2f0:	ldr	x1, [sp, #104]
    b2f4:	str	x0, [x23]
    b2f8:	str	x1, [x23, #16]
    b2fc:	mov	x2, x24
    b300:	mov	x1, x25
    b304:	bl	5210 <memcpy@plt>
    b308:	ldr	x0, [x23]
    b30c:	ldr	x24, [sp, #104]
    b310:	b	ae48 <gcc_cp_fe_context@@Base+0xbd0>
    b314:	mov	x2, x24
    b318:	mov	x0, x20
    b31c:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    b320:	ldr	x0, [sp, #136]
    b324:	add	x1, x24, #0x10
    b328:	cmp	x0, x1
    b32c:	b.eq	ad6c <gcc_cp_fe_context@@Base+0xaf4>  // b.none
    b330:	bl	5480 <_ZdlPv@plt>
    b334:	b	ad6c <gcc_cp_fe_context@@Base+0xaf4>
    b338:	mov	x2, x21
    b33c:	mov	x0, x20
    b340:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    b344:	ldr	x0, [sp, #104]
    b348:	add	x1, x21, #0x10
    b34c:	cmp	x0, x1
    b350:	b.eq	af0c <gcc_cp_fe_context@@Base+0xc94>  // b.none
    b354:	bl	5480 <_ZdlPv@plt>
    b358:	b	af0c <gcc_cp_fe_context@@Base+0xc94>
    b35c:	mov	x2, x21
    b360:	mov	x0, x20
    b364:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    b368:	ldr	x0, [sp, #104]
    b36c:	add	x1, x21, #0x10
    b370:	cmp	x0, x1
    b374:	b.eq	aeb4 <gcc_cp_fe_context@@Base+0xc3c>  // b.none
    b378:	bl	5480 <_ZdlPv@plt>
    b37c:	b	aeb4 <gcc_cp_fe_context@@Base+0xc3c>
    b380:	mov	x2, x21
    b384:	mov	x0, x20
    b388:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    b38c:	ldr	x0, [sp, #104]
    b390:	add	x1, x21, #0x10
    b394:	cmp	x0, x1
    b398:	b.eq	b3a0 <gcc_cp_fe_context@@Base+0x1128>  // b.none
    b39c:	bl	5480 <_ZdlPv@plt>
    b3a0:	ldr	x23, [x20, #8]
    b3a4:	b	ae04 <gcc_cp_fe_context@@Base+0xb8c>
    b3a8:	mov	x2, x21
    b3ac:	mov	x0, x20
    b3b0:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    b3b4:	ldr	x0, [sp, #104]
    b3b8:	add	x1, x21, #0x10
    b3bc:	cmp	x0, x1
    b3c0:	b.eq	af9c <gcc_cp_fe_context@@Base+0xd24>  // b.none
    b3c4:	bl	5480 <_ZdlPv@plt>
    b3c8:	b	af9c <gcc_cp_fe_context@@Base+0xd24>
    b3cc:	ldp	x2, x3, [sp, #120]
    b3d0:	stp	x2, x3, [x1, #16]
    b3d4:	b	afe8 <gcc_cp_fe_context@@Base+0xd70>
    b3d8:	ldr	w0, [sp, #80]
    b3dc:	mov	w20, #0x0                   	// #0
    b3e0:	bl	5610 <close@plt>
    b3e4:	ldr	w0, [sp, #84]
    b3e8:	bl	5610 <close@plt>
    b3ec:	ldr	w0, [sp, #88]
    b3f0:	bl	5610 <close@plt>
    b3f4:	ldr	w0, [sp, #92]
    b3f8:	bl	5610 <close@plt>
    b3fc:	ldp	x23, x24, [sp, #48]
    b400:	ldr	x25, [sp, #64]
    b404:	b	ac6c <gcc_cp_fe_context@@Base+0x9f4>
    b408:	mov	x3, x20
    b40c:	b	b120 <gcc_cp_fe_context@@Base+0xea8>
    b410:	mov	x0, x20
    b414:	mov	x2, x21
    b418:	bl	5680 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    b41c:	ldr	x0, [sp, #104]
    b420:	add	x1, x21, #0x10
    b424:	cmp	x0, x1
    b428:	b.eq	affc <gcc_cp_fe_context@@Base+0xd84>  // b.none
    b42c:	bl	5480 <_ZdlPv@plt>
    b430:	b	affc <gcc_cp_fe_context@@Base+0xd84>
    b434:	ldr	w0, [sp, #92]
    b438:	mov	w1, #0x1                   	// #1
    b43c:	bl	5280 <dup2@plt>
    b440:	ldr	w0, [sp, #92]
    b444:	mov	w1, #0x2                   	// #2
    b448:	bl	5280 <dup2@plt>
    b44c:	ldr	w0, [sp, #88]
    b450:	bl	5610 <close@plt>
    b454:	ldr	w0, [sp, #92]
    b458:	bl	5610 <close@plt>
    b45c:	ldr	w0, [sp, #80]
    b460:	bl	5610 <close@plt>
    b464:	ldr	x0, [x20]
    b468:	mov	x1, x20
    b46c:	bl	5240 <execvp@plt>
    b470:	mov	w0, #0x7f                  	// #127
    b474:	bl	53d0 <_exit@plt>
    b478:	ldr	x1, [sp, #104]
    b47c:	add	x21, x21, #0x10
    b480:	mov	x19, x0
    b484:	cmp	x1, x21
    b488:	b.eq	b494 <gcc_cp_fe_context@@Base+0x121c>  // b.none
    b48c:	mov	x0, x1
    b490:	bl	5480 <_ZdlPv@plt>
    b494:	mov	x0, x19
    b498:	bl	5740 <_Unwind_Resume@plt>
    b49c:	b	b478 <gcc_cp_fe_context@@Base+0x1200>
    b4a0:	ldr	x1, [sp, #136]
    b4a4:	add	x24, x24, #0x10
    b4a8:	mov	x19, x0
    b4ac:	cmp	x1, x24
    b4b0:	b.ne	b48c <gcc_cp_fe_context@@Base+0x1214>  // b.any
    b4b4:	b	b494 <gcc_cp_fe_context@@Base+0x121c>
    b4b8:	b	b478 <gcc_cp_fe_context@@Base+0x1200>
    b4bc:	mov	x19, x0
    b4c0:	mov	x1, #0x20                  	// #32
    b4c4:	mov	x0, x20
    b4c8:	bl	54a0 <_ZdlPvm@plt>
    b4cc:	b	b494 <gcc_cp_fe_context@@Base+0x121c>
    b4d0:	b	b478 <gcc_cp_fe_context@@Base+0x1200>
    b4d4:	bl	5600 <__cxa_throw_bad_array_new_length@plt>
    b4d8:	b	b478 <gcc_cp_fe_context@@Base+0x1200>
    b4dc:	nop
    b4e0:	cmp	w2, #0x0
    b4e4:	cset	w2, ne  // ne = any
    b4e8:	strb	w2, [x0, #136]
    b4ec:	b	ac28 <gcc_cp_fe_context@@Base+0x9b0>
    b4f0:	ret
    b4f4:	nop
    b4f8:	ldr	x0, [x0, #24]
    b4fc:	ldp	x2, x0, [x0, #64]
    b500:	mov	x16, x2
    b504:	br	x16
    b508:	mov	x1, #0x10                  	// #16
    b50c:	b	54a0 <_ZdlPvm@plt>
    b510:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    b514:	add	x2, x1, #0x640
    b518:	mov	x1, x0
    b51c:	str	x2, [x0]
    b520:	ldr	x0, [x1, #16]!
    b524:	add	x1, x1, #0x10
    b528:	cmp	x0, x1
    b52c:	b.eq	b534 <gcc_cp_fe_context@@Base+0x12bc>  // b.none
    b530:	b	5480 <_ZdlPv@plt>
    b534:	ret
    b538:	stp	x29, x30, [sp, #-32]!
    b53c:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    b540:	mov	x29, sp
    b544:	str	x19, [sp, #16]
    b548:	mov	x19, x0
    b54c:	add	x0, x1, #0x640
    b550:	mov	x1, x19
    b554:	str	x0, [x19]
    b558:	ldr	x0, [x1, #16]!
    b55c:	add	x1, x1, #0x10
    b560:	cmp	x0, x1
    b564:	b.eq	b56c <gcc_cp_fe_context@@Base+0x12f4>  // b.none
    b568:	bl	5480 <_ZdlPv@plt>
    b56c:	mov	x0, x19
    b570:	mov	x1, #0x30                  	// #48
    b574:	ldr	x19, [sp, #16]
    b578:	ldp	x29, x30, [sp], #32
    b57c:	b	54a0 <_ZdlPvm@plt>
    b580:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    b584:	add	x2, x1, #0x618
    b588:	mov	x1, x0
    b58c:	str	x2, [x0]
    b590:	ldr	x0, [x1, #16]!
    b594:	add	x1, x1, #0x10
    b598:	cmp	x0, x1
    b59c:	b.eq	b5a4 <gcc_cp_fe_context@@Base+0x132c>  // b.none
    b5a0:	b	5480 <_ZdlPv@plt>
    b5a4:	ret
    b5a8:	stp	x29, x30, [sp, #-32]!
    b5ac:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    b5b0:	mov	x29, sp
    b5b4:	str	x19, [sp, #16]
    b5b8:	mov	x19, x0
    b5bc:	add	x0, x1, #0x618
    b5c0:	mov	x1, x19
    b5c4:	str	x0, [x19]
    b5c8:	ldr	x0, [x1, #16]!
    b5cc:	add	x1, x1, #0x10
    b5d0:	cmp	x0, x1
    b5d4:	b.eq	b5dc <gcc_cp_fe_context@@Base+0x1364>  // b.none
    b5d8:	bl	5480 <_ZdlPv@plt>
    b5dc:	mov	x0, x19
    b5e0:	mov	x1, #0x30                  	// #48
    b5e4:	ldr	x19, [sp, #16]
    b5e8:	ldp	x29, x30, [sp], #32
    b5ec:	b	54a0 <_ZdlPvm@plt>
    b5f0:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    b5f4:	add	x1, x1, #0x5c8
    b5f8:	str	x1, [x0]
    b5fc:	b	ed80 <gcc_cp_fe_context@@Base+0x4b08>
    b600:	stp	x29, x30, [sp, #-32]!
    b604:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    b608:	add	x1, x1, #0x5c8
    b60c:	mov	x29, sp
    b610:	str	x19, [sp, #16]
    b614:	mov	x19, x0
    b618:	str	x1, [x0]
    b61c:	bl	ed80 <gcc_cp_fe_context@@Base+0x4b08>
    b620:	mov	x0, x19
    b624:	mov	x1, #0x20                  	// #32
    b628:	ldr	x19, [sp, #16]
    b62c:	ldp	x29, x30, [sp], #32
    b630:	b	54a0 <_ZdlPvm@plt>
    b634:	nop
    b638:	stp	x29, x30, [sp, #-112]!
    b63c:	adrp	x8, 2c000 <xexit@@Base+0x151a0>
    b640:	mov	x29, sp
    b644:	ldr	x8, [x8, #3440]
    b648:	stp	x25, x26, [sp, #64]
    b64c:	mov	w26, w7
    b650:	ldr	x25, [x0, #16]
    b654:	stp	x19, x20, [sp, #16]
    b658:	mov	x19, x1
    b65c:	mov	w20, w2
    b660:	mov	x0, x25
    b664:	mov	w1, #0x51                  	// #81
    b668:	stp	x21, x22, [sp, #32]
    b66c:	mov	x21, x3
    b670:	mov	x22, x4
    b674:	stp	x23, x24, [sp, #48]
    b678:	mov	x23, x5
    b67c:	mov	x24, x6
    b680:	str	x27, [sp, #80]
    b684:	ldr	x27, [x8]
    b688:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    b68c:	cbnz	w0, b6b0 <gcc_cp_fe_context@@Base+0x1438>
    b690:	mov	x0, #0x0                   	// #0
    b694:	ldp	x19, x20, [sp, #16]
    b698:	ldp	x21, x22, [sp, #32]
    b69c:	ldp	x23, x24, [sp, #48]
    b6a0:	ldp	x25, x26, [sp, #64]
    b6a4:	ldr	x27, [sp, #80]
    b6a8:	ldp	x29, x30, [sp], #112
    b6ac:	ret
    b6b0:	mov	x1, x27
    b6b4:	mov	x0, x25
    b6b8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    b6bc:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b6c0:	mov	x0, x25
    b6c4:	mov	x1, #0x7                   	// #7
    b6c8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b6cc:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b6d0:	mov	x1, x19
    b6d4:	mov	x0, x25
    b6d8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    b6dc:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b6e0:	mov	w1, w20
    b6e4:	mov	x0, x25
    b6e8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b6ec:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b6f0:	mov	x1, x21
    b6f4:	mov	x0, x25
    b6f8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b6fc:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b700:	mov	x1, x22
    b704:	mov	x0, x25
    b708:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    b70c:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b710:	mov	x1, x23
    b714:	mov	x0, x25
    b718:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b71c:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b720:	mov	x1, x24
    b724:	mov	x0, x25
    b728:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    b72c:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b730:	mov	w1, w26
    b734:	mov	x0, x25
    b738:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b73c:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b740:	mov	x0, x25
    b744:	mov	w1, #0x1                   	// #1
    b748:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    b74c:	cbz	w0, b690 <gcc_cp_fe_context@@Base+0x1418>
    b750:	add	x1, sp, #0x68
    b754:	mov	x0, x25
    b758:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    b75c:	cmp	w0, #0x0
    b760:	ldr	x1, [sp, #104]
    b764:	csel	x0, xzr, x1, eq  // eq = none
    b768:	b	b694 <gcc_cp_fe_context@@Base+0x141c>
    b76c:	nop
    b770:	stp	x29, x30, [sp, #-64]!
    b774:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    b778:	mov	x29, sp
    b77c:	ldr	x2, [x2, #3488]
    b780:	stp	x19, x20, [sp, #16]
    b784:	mov	x19, x1
    b788:	ldr	x20, [x0, #16]
    b78c:	mov	w1, #0x51                  	// #81
    b790:	str	x21, [sp, #32]
    b794:	mov	x0, x20
    b798:	ldr	x21, [x2]
    b79c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    b7a0:	cbnz	w0, b7b8 <gcc_cp_fe_context@@Base+0x1540>
    b7a4:	mov	w0, #0x0                   	// #0
    b7a8:	ldp	x19, x20, [sp, #16]
    b7ac:	ldr	x21, [sp, #32]
    b7b0:	ldp	x29, x30, [sp], #64
    b7b4:	ret
    b7b8:	mov	x1, x21
    b7bc:	mov	x0, x20
    b7c0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    b7c4:	cbz	w0, b7a4 <gcc_cp_fe_context@@Base+0x152c>
    b7c8:	mov	x0, x20
    b7cc:	mov	x1, #0x1                   	// #1
    b7d0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b7d4:	cbz	w0, b7a4 <gcc_cp_fe_context@@Base+0x152c>
    b7d8:	mov	x1, x19
    b7dc:	mov	x0, x20
    b7e0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b7e4:	cbz	w0, b7a4 <gcc_cp_fe_context@@Base+0x152c>
    b7e8:	mov	x0, x20
    b7ec:	mov	w1, #0x1                   	// #1
    b7f0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    b7f4:	cbz	w0, b7a4 <gcc_cp_fe_context@@Base+0x152c>
    b7f8:	add	x1, sp, #0x38
    b7fc:	mov	x0, x20
    b800:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    b804:	cmp	w0, #0x0
    b808:	ldr	w1, [sp, #56]
    b80c:	mov	w0, #0x0                   	// #0
    b810:	csel	w0, w0, w1, eq  // eq = none
    b814:	b	b7a8 <gcc_cp_fe_context@@Base+0x1530>
    b818:	stp	x29, x30, [sp, #-64]!
    b81c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    b820:	mov	x29, sp
    b824:	ldr	x2, [x2, #3688]
    b828:	stp	x19, x20, [sp, #16]
    b82c:	mov	x19, x1
    b830:	ldr	x20, [x0, #16]
    b834:	mov	w1, #0x51                  	// #81
    b838:	str	x21, [sp, #32]
    b83c:	mov	x0, x20
    b840:	ldr	x21, [x2]
    b844:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    b848:	cbnz	w0, b860 <gcc_cp_fe_context@@Base+0x15e8>
    b84c:	mov	x0, #0x0                   	// #0
    b850:	ldp	x19, x20, [sp, #16]
    b854:	ldr	x21, [sp, #32]
    b858:	ldp	x29, x30, [sp], #64
    b85c:	ret
    b860:	mov	x1, x21
    b864:	mov	x0, x20
    b868:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    b86c:	cbz	w0, b84c <gcc_cp_fe_context@@Base+0x15d4>
    b870:	mov	x0, x20
    b874:	mov	x1, #0x1                   	// #1
    b878:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b87c:	cbz	w0, b84c <gcc_cp_fe_context@@Base+0x15d4>
    b880:	mov	x1, x19
    b884:	mov	x0, x20
    b888:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b88c:	cbz	w0, b84c <gcc_cp_fe_context@@Base+0x15d4>
    b890:	mov	x0, x20
    b894:	mov	w1, #0x1                   	// #1
    b898:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    b89c:	cbz	w0, b84c <gcc_cp_fe_context@@Base+0x15d4>
    b8a0:	add	x1, sp, #0x38
    b8a4:	mov	x0, x20
    b8a8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    b8ac:	cmp	w0, #0x0
    b8b0:	ldr	x1, [sp, #56]
    b8b4:	csel	x0, xzr, x1, eq  // eq = none
    b8b8:	b	b850 <gcc_cp_fe_context@@Base+0x15d8>
    b8bc:	nop
    b8c0:	stp	x29, x30, [sp, #-80]!
    b8c4:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    b8c8:	mov	x29, sp
    b8cc:	ldr	x4, [x4, #3928]
    b8d0:	stp	x19, x20, [sp, #16]
    b8d4:	mov	w20, w3
    b8d8:	ldr	x19, [x0, #16]
    b8dc:	stp	x21, x22, [sp, #32]
    b8e0:	mov	x22, x1
    b8e4:	mov	x21, x2
    b8e8:	mov	x0, x19
    b8ec:	mov	w1, #0x51                  	// #81
    b8f0:	str	x23, [sp, #48]
    b8f4:	ldr	x23, [x4]
    b8f8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    b8fc:	cbnz	w0, b918 <gcc_cp_fe_context@@Base+0x16a0>
    b900:	mov	x0, #0x0                   	// #0
    b904:	ldp	x19, x20, [sp, #16]
    b908:	ldp	x21, x22, [sp, #32]
    b90c:	ldr	x23, [sp, #48]
    b910:	ldp	x29, x30, [sp], #80
    b914:	ret
    b918:	mov	x1, x23
    b91c:	mov	x0, x19
    b920:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    b924:	cbz	w0, b900 <gcc_cp_fe_context@@Base+0x1688>
    b928:	mov	x0, x19
    b92c:	mov	x1, #0x3                   	// #3
    b930:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b934:	cbz	w0, b900 <gcc_cp_fe_context@@Base+0x1688>
    b938:	mov	x1, x22
    b93c:	mov	x0, x19
    b940:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b944:	cbz	w0, b900 <gcc_cp_fe_context@@Base+0x1688>
    b948:	mov	x1, x21
    b94c:	mov	x0, x19
    b950:	bl	f440 <gcc_cp_fe_context@@Base+0x51c8>
    b954:	cbz	w0, b900 <gcc_cp_fe_context@@Base+0x1688>
    b958:	sxtw	x1, w20
    b95c:	mov	x0, x19
    b960:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    b964:	cbz	w0, b900 <gcc_cp_fe_context@@Base+0x1688>
    b968:	mov	x0, x19
    b96c:	mov	w1, #0x1                   	// #1
    b970:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    b974:	cbz	w0, b900 <gcc_cp_fe_context@@Base+0x1688>
    b978:	add	x1, sp, #0x48
    b97c:	mov	x0, x19
    b980:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    b984:	cmp	w0, #0x0
    b988:	ldr	x1, [sp, #72]
    b98c:	csel	x0, xzr, x1, eq  // eq = none
    b990:	b	b904 <gcc_cp_fe_context@@Base+0x168c>
    b994:	nop
    b998:	stp	x29, x30, [sp, #-80]!
    b99c:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    b9a0:	mov	x29, sp
    b9a4:	ldr	x4, [x4, #3320]
    b9a8:	stp	x19, x20, [sp, #16]
    b9ac:	mov	x20, x3
    b9b0:	ldr	x19, [x0, #16]
    b9b4:	stp	x21, x22, [sp, #32]
    b9b8:	mov	x22, x1
    b9bc:	mov	x21, x2
    b9c0:	mov	x0, x19
    b9c4:	mov	w1, #0x51                  	// #81
    b9c8:	str	x23, [sp, #48]
    b9cc:	ldr	x23, [x4]
    b9d0:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    b9d4:	cbnz	w0, b9f0 <gcc_cp_fe_context@@Base+0x1778>
    b9d8:	mov	x0, #0x0                   	// #0
    b9dc:	ldp	x19, x20, [sp, #16]
    b9e0:	ldp	x21, x22, [sp, #32]
    b9e4:	ldr	x23, [sp, #48]
    b9e8:	ldp	x29, x30, [sp], #80
    b9ec:	ret
    b9f0:	mov	x1, x23
    b9f4:	mov	x0, x19
    b9f8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    b9fc:	cbz	w0, b9d8 <gcc_cp_fe_context@@Base+0x1760>
    ba00:	mov	x0, x19
    ba04:	mov	x1, #0x3                   	// #3
    ba08:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ba0c:	cbz	w0, b9d8 <gcc_cp_fe_context@@Base+0x1760>
    ba10:	mov	x1, x22
    ba14:	mov	x0, x19
    ba18:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    ba1c:	cbz	w0, b9d8 <gcc_cp_fe_context@@Base+0x1760>
    ba20:	mov	x1, x21
    ba24:	mov	x0, x19
    ba28:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ba2c:	cbz	w0, b9d8 <gcc_cp_fe_context@@Base+0x1760>
    ba30:	mov	x1, x20
    ba34:	mov	x0, x19
    ba38:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ba3c:	cbz	w0, b9d8 <gcc_cp_fe_context@@Base+0x1760>
    ba40:	mov	x0, x19
    ba44:	mov	w1, #0x1                   	// #1
    ba48:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    ba4c:	cbz	w0, b9d8 <gcc_cp_fe_context@@Base+0x1760>
    ba50:	add	x1, sp, #0x48
    ba54:	mov	x0, x19
    ba58:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    ba5c:	cmp	w0, #0x0
    ba60:	ldr	x1, [sp, #72]
    ba64:	csel	x0, xzr, x1, eq  // eq = none
    ba68:	b	b9dc <gcc_cp_fe_context@@Base+0x1764>
    ba6c:	nop
    ba70:	stp	x29, x30, [sp, #-80]!
    ba74:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
    ba78:	mov	x29, sp
    ba7c:	ldr	x5, [x5, #3768]
    ba80:	stp	x19, x20, [sp, #16]
    ba84:	mov	x20, x4
    ba88:	ldr	x19, [x0, #16]
    ba8c:	stp	x21, x22, [sp, #32]
    ba90:	mov	x22, x2
    ba94:	mov	x21, x3
    ba98:	mov	x0, x19
    ba9c:	stp	x23, x24, [sp, #48]
    baa0:	mov	x23, x1
    baa4:	mov	w1, #0x51                  	// #81
    baa8:	ldr	x24, [x5]
    baac:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    bab0:	cbnz	w0, bacc <gcc_cp_fe_context@@Base+0x1854>
    bab4:	mov	x0, #0x0                   	// #0
    bab8:	ldp	x19, x20, [sp, #16]
    babc:	ldp	x21, x22, [sp, #32]
    bac0:	ldp	x23, x24, [sp, #48]
    bac4:	ldp	x29, x30, [sp], #80
    bac8:	ret
    bacc:	mov	x1, x24
    bad0:	mov	x0, x19
    bad4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bad8:	cbz	w0, bab4 <gcc_cp_fe_context@@Base+0x183c>
    badc:	mov	x0, x19
    bae0:	mov	x1, #0x4                   	// #4
    bae4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bae8:	cbz	w0, bab4 <gcc_cp_fe_context@@Base+0x183c>
    baec:	mov	x1, x23
    baf0:	mov	x0, x19
    baf4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    baf8:	cbz	w0, bab4 <gcc_cp_fe_context@@Base+0x183c>
    bafc:	mov	x1, x22
    bb00:	mov	x0, x19
    bb04:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bb08:	cbz	w0, bab4 <gcc_cp_fe_context@@Base+0x183c>
    bb0c:	mov	x1, x21
    bb10:	mov	x0, x19
    bb14:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bb18:	cbz	w0, bab4 <gcc_cp_fe_context@@Base+0x183c>
    bb1c:	mov	x1, x20
    bb20:	mov	x0, x19
    bb24:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bb28:	cbz	w0, bab4 <gcc_cp_fe_context@@Base+0x183c>
    bb2c:	mov	x0, x19
    bb30:	mov	w1, #0x1                   	// #1
    bb34:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    bb38:	cbz	w0, bab4 <gcc_cp_fe_context@@Base+0x183c>
    bb3c:	add	x1, sp, #0x48
    bb40:	mov	x0, x19
    bb44:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    bb48:	cmp	w0, #0x0
    bb4c:	ldr	x1, [sp, #72]
    bb50:	csel	x0, xzr, x1, eq  // eq = none
    bb54:	b	bab8 <gcc_cp_fe_context@@Base+0x1840>
    bb58:	stp	x29, x30, [sp, #-80]!
    bb5c:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
    bb60:	mov	x29, sp
    bb64:	ldr	x5, [x5, #3664]
    bb68:	stp	x19, x20, [sp, #16]
    bb6c:	mov	w20, w4
    bb70:	ldr	x19, [x0, #16]
    bb74:	stp	x21, x22, [sp, #32]
    bb78:	mov	x22, x2
    bb7c:	mov	x21, x3
    bb80:	mov	x0, x19
    bb84:	stp	x23, x24, [sp, #48]
    bb88:	mov	x23, x1
    bb8c:	mov	w1, #0x51                  	// #81
    bb90:	ldr	x24, [x5]
    bb94:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    bb98:	cbnz	w0, bbb4 <gcc_cp_fe_context@@Base+0x193c>
    bb9c:	mov	w0, #0x0                   	// #0
    bba0:	ldp	x19, x20, [sp, #16]
    bba4:	ldp	x21, x22, [sp, #32]
    bba8:	ldp	x23, x24, [sp, #48]
    bbac:	ldp	x29, x30, [sp], #80
    bbb0:	ret
    bbb4:	mov	x1, x24
    bbb8:	mov	x0, x19
    bbbc:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bbc0:	cbz	w0, bb9c <gcc_cp_fe_context@@Base+0x1924>
    bbc4:	mov	x0, x19
    bbc8:	mov	x1, #0x4                   	// #4
    bbcc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bbd0:	cbz	w0, bb9c <gcc_cp_fe_context@@Base+0x1924>
    bbd4:	mov	x1, x23
    bbd8:	mov	x0, x19
    bbdc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bbe0:	cbz	w0, bb9c <gcc_cp_fe_context@@Base+0x1924>
    bbe4:	mov	x1, x22
    bbe8:	mov	x0, x19
    bbec:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bbf0:	cbz	w0, bb9c <gcc_cp_fe_context@@Base+0x1924>
    bbf4:	mov	x1, x21
    bbf8:	mov	x0, x19
    bbfc:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bc00:	cbz	w0, bb9c <gcc_cp_fe_context@@Base+0x1924>
    bc04:	mov	w1, w20
    bc08:	mov	x0, x19
    bc0c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bc10:	cbz	w0, bb9c <gcc_cp_fe_context@@Base+0x1924>
    bc14:	mov	x0, x19
    bc18:	mov	w1, #0x1                   	// #1
    bc1c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    bc20:	cbz	w0, bb9c <gcc_cp_fe_context@@Base+0x1924>
    bc24:	add	x1, sp, #0x48
    bc28:	mov	x0, x19
    bc2c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    bc30:	cmp	w0, #0x0
    bc34:	ldr	w1, [sp, #72]
    bc38:	mov	w0, #0x0                   	// #0
    bc3c:	csel	w0, w0, w1, eq  // eq = none
    bc40:	b	bba0 <gcc_cp_fe_context@@Base+0x1928>
    bc44:	nop
    bc48:	stp	x29, x30, [sp, #-96]!
    bc4c:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    bc50:	mov	x29, sp
    bc54:	ldr	x6, [x6, #3352]
    bc58:	stp	x21, x22, [sp, #32]
    bc5c:	mov	w22, w5
    bc60:	ldr	x21, [x0, #16]
    bc64:	stp	x19, x20, [sp, #16]
    bc68:	mov	w19, w1
    bc6c:	mov	x20, x2
    bc70:	mov	x0, x21
    bc74:	mov	w1, #0x51                  	// #81
    bc78:	stp	x23, x24, [sp, #48]
    bc7c:	mov	w24, w3
    bc80:	mov	x23, x4
    bc84:	str	x25, [sp, #64]
    bc88:	ldr	x25, [x6]
    bc8c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    bc90:	cbnz	w0, bcb0 <gcc_cp_fe_context@@Base+0x1a38>
    bc94:	mov	x0, #0x0                   	// #0
    bc98:	ldp	x19, x20, [sp, #16]
    bc9c:	ldp	x21, x22, [sp, #32]
    bca0:	ldp	x23, x24, [sp, #48]
    bca4:	ldr	x25, [sp, #64]
    bca8:	ldp	x29, x30, [sp], #96
    bcac:	ret
    bcb0:	mov	x1, x25
    bcb4:	mov	x0, x21
    bcb8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bcbc:	cbz	w0, bc94 <gcc_cp_fe_context@@Base+0x1a1c>
    bcc0:	mov	x0, x21
    bcc4:	mov	x1, #0x5                   	// #5
    bcc8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bccc:	cbz	w0, bc94 <gcc_cp_fe_context@@Base+0x1a1c>
    bcd0:	sxtw	x1, w19
    bcd4:	mov	x0, x21
    bcd8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bcdc:	cbz	w0, bc94 <gcc_cp_fe_context@@Base+0x1a1c>
    bce0:	mov	x1, x20
    bce4:	mov	x0, x21
    bce8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bcec:	cbz	w0, bc94 <gcc_cp_fe_context@@Base+0x1a1c>
    bcf0:	mov	w1, w24
    bcf4:	mov	x0, x21
    bcf8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bcfc:	cbz	w0, bc94 <gcc_cp_fe_context@@Base+0x1a1c>
    bd00:	mov	x1, x23
    bd04:	mov	x0, x21
    bd08:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bd0c:	cbz	w0, bc94 <gcc_cp_fe_context@@Base+0x1a1c>
    bd10:	mov	w1, w22
    bd14:	mov	x0, x21
    bd18:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bd1c:	cbz	w0, bc94 <gcc_cp_fe_context@@Base+0x1a1c>
    bd20:	mov	x0, x21
    bd24:	mov	w1, #0x1                   	// #1
    bd28:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    bd2c:	cbz	w0, bc94 <gcc_cp_fe_context@@Base+0x1a1c>
    bd30:	add	x1, sp, #0x58
    bd34:	mov	x0, x21
    bd38:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    bd3c:	cmp	w0, #0x0
    bd40:	ldr	x1, [sp, #88]
    bd44:	csel	x0, xzr, x1, eq  // eq = none
    bd48:	b	bc98 <gcc_cp_fe_context@@Base+0x1a20>
    bd4c:	nop
    bd50:	stp	x29, x30, [sp, #-96]!
    bd54:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    bd58:	mov	x29, sp
    bd5c:	ldr	x6, [x6, #4032]
    bd60:	stp	x21, x22, [sp, #32]
    bd64:	mov	w22, w5
    bd68:	ldr	x21, [x0, #16]
    bd6c:	stp	x19, x20, [sp, #16]
    bd70:	mov	x19, x1
    bd74:	mov	x20, x2
    bd78:	mov	x0, x21
    bd7c:	mov	w1, #0x51                  	// #81
    bd80:	stp	x23, x24, [sp, #48]
    bd84:	mov	x24, x3
    bd88:	mov	x23, x4
    bd8c:	str	x25, [sp, #64]
    bd90:	ldr	x25, [x6]
    bd94:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    bd98:	cbnz	w0, bdb8 <gcc_cp_fe_context@@Base+0x1b40>
    bd9c:	mov	w0, #0x0                   	// #0
    bda0:	ldp	x19, x20, [sp, #16]
    bda4:	ldp	x21, x22, [sp, #32]
    bda8:	ldp	x23, x24, [sp, #48]
    bdac:	ldr	x25, [sp, #64]
    bdb0:	ldp	x29, x30, [sp], #96
    bdb4:	ret
    bdb8:	mov	x1, x25
    bdbc:	mov	x0, x21
    bdc0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bdc4:	cbz	w0, bd9c <gcc_cp_fe_context@@Base+0x1b24>
    bdc8:	mov	x0, x21
    bdcc:	mov	x1, #0x5                   	// #5
    bdd0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bdd4:	cbz	w0, bd9c <gcc_cp_fe_context@@Base+0x1b24>
    bdd8:	mov	x1, x19
    bddc:	mov	x0, x21
    bde0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bde4:	cbz	w0, bd9c <gcc_cp_fe_context@@Base+0x1b24>
    bde8:	mov	x1, x20
    bdec:	mov	x0, x21
    bdf0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bdf4:	cbz	w0, bd9c <gcc_cp_fe_context@@Base+0x1b24>
    bdf8:	mov	x1, x24
    bdfc:	mov	x0, x21
    be00:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    be04:	cbz	w0, bd9c <gcc_cp_fe_context@@Base+0x1b24>
    be08:	mov	x1, x23
    be0c:	mov	x0, x21
    be10:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    be14:	cbz	w0, bd9c <gcc_cp_fe_context@@Base+0x1b24>
    be18:	mov	w1, w22
    be1c:	mov	x0, x21
    be20:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    be24:	cbz	w0, bd9c <gcc_cp_fe_context@@Base+0x1b24>
    be28:	mov	x0, x21
    be2c:	mov	w1, #0x1                   	// #1
    be30:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    be34:	cbz	w0, bd9c <gcc_cp_fe_context@@Base+0x1b24>
    be38:	add	x1, sp, #0x58
    be3c:	mov	x0, x21
    be40:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    be44:	cmp	w0, #0x0
    be48:	ldr	w1, [sp, #88]
    be4c:	mov	w0, #0x0                   	// #0
    be50:	csel	w0, w0, w1, eq  // eq = none
    be54:	b	bda0 <gcc_cp_fe_context@@Base+0x1b28>
    be58:	stp	x29, x30, [sp, #-80]!
    be5c:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    be60:	mov	x29, sp
    be64:	ldr	x4, [x4, #3264]
    be68:	stp	x19, x20, [sp, #16]
    be6c:	mov	x20, x3
    be70:	ldr	x19, [x0, #16]
    be74:	stp	x21, x22, [sp, #32]
    be78:	mov	w22, w1
    be7c:	mov	x21, x2
    be80:	mov	x0, x19
    be84:	mov	w1, #0x51                  	// #81
    be88:	str	x23, [sp, #48]
    be8c:	ldr	x23, [x4]
    be90:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    be94:	cbnz	w0, beb0 <gcc_cp_fe_context@@Base+0x1c38>
    be98:	mov	x0, #0x0                   	// #0
    be9c:	ldp	x19, x20, [sp, #16]
    bea0:	ldp	x21, x22, [sp, #32]
    bea4:	ldr	x23, [sp, #48]
    bea8:	ldp	x29, x30, [sp], #80
    beac:	ret
    beb0:	mov	x1, x23
    beb4:	mov	x0, x19
    beb8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bebc:	cbz	w0, be98 <gcc_cp_fe_context@@Base+0x1c20>
    bec0:	mov	x0, x19
    bec4:	mov	x1, #0x3                   	// #3
    bec8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    becc:	cbz	w0, be98 <gcc_cp_fe_context@@Base+0x1c20>
    bed0:	sxtw	x1, w22
    bed4:	mov	x0, x19
    bed8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bedc:	cbz	w0, be98 <gcc_cp_fe_context@@Base+0x1c20>
    bee0:	mov	x1, x21
    bee4:	mov	x0, x19
    bee8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    beec:	cbz	w0, be98 <gcc_cp_fe_context@@Base+0x1c20>
    bef0:	mov	x1, x20
    bef4:	mov	x0, x19
    bef8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    befc:	cbz	w0, be98 <gcc_cp_fe_context@@Base+0x1c20>
    bf00:	mov	x0, x19
    bf04:	mov	w1, #0x1                   	// #1
    bf08:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    bf0c:	cbz	w0, be98 <gcc_cp_fe_context@@Base+0x1c20>
    bf10:	add	x1, sp, #0x48
    bf14:	mov	x0, x19
    bf18:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    bf1c:	cmp	w0, #0x0
    bf20:	ldr	x1, [sp, #72]
    bf24:	csel	x0, xzr, x1, eq  // eq = none
    bf28:	b	be9c <gcc_cp_fe_context@@Base+0x1c24>
    bf2c:	nop
    bf30:	stp	x29, x30, [sp, #-80]!
    bf34:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    bf38:	mov	x29, sp
    bf3c:	ldr	x4, [x4, #3392]
    bf40:	stp	x19, x20, [sp, #16]
    bf44:	mov	x20, x3
    bf48:	ldr	x19, [x0, #16]
    bf4c:	stp	x21, x22, [sp, #32]
    bf50:	mov	x22, x1
    bf54:	mov	x21, x2
    bf58:	mov	x0, x19
    bf5c:	mov	w1, #0x51                  	// #81
    bf60:	str	x23, [sp, #48]
    bf64:	ldr	x23, [x4]
    bf68:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    bf6c:	cbnz	w0, bf88 <gcc_cp_fe_context@@Base+0x1d10>
    bf70:	mov	x0, #0x0                   	// #0
    bf74:	ldp	x19, x20, [sp, #16]
    bf78:	ldp	x21, x22, [sp, #32]
    bf7c:	ldr	x23, [sp, #48]
    bf80:	ldp	x29, x30, [sp], #80
    bf84:	ret
    bf88:	mov	x1, x23
    bf8c:	mov	x0, x19
    bf90:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bf94:	cbz	w0, bf70 <gcc_cp_fe_context@@Base+0x1cf8>
    bf98:	mov	x0, x19
    bf9c:	mov	x1, #0x3                   	// #3
    bfa0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bfa4:	cbz	w0, bf70 <gcc_cp_fe_context@@Base+0x1cf8>
    bfa8:	mov	x1, x22
    bfac:	mov	x0, x19
    bfb0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bfb4:	cbz	w0, bf70 <gcc_cp_fe_context@@Base+0x1cf8>
    bfb8:	mov	x1, x21
    bfbc:	mov	x0, x19
    bfc0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    bfc4:	cbz	w0, bf70 <gcc_cp_fe_context@@Base+0x1cf8>
    bfc8:	mov	x1, x20
    bfcc:	mov	x0, x19
    bfd0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    bfd4:	cbz	w0, bf70 <gcc_cp_fe_context@@Base+0x1cf8>
    bfd8:	mov	x0, x19
    bfdc:	mov	w1, #0x1                   	// #1
    bfe0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    bfe4:	cbz	w0, bf70 <gcc_cp_fe_context@@Base+0x1cf8>
    bfe8:	add	x1, sp, #0x48
    bfec:	mov	x0, x19
    bff0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    bff4:	cmp	w0, #0x0
    bff8:	ldr	x1, [sp, #72]
    bffc:	csel	x0, xzr, x1, eq  // eq = none
    c000:	b	bf74 <gcc_cp_fe_context@@Base+0x1cfc>
    c004:	nop
    c008:	stp	x29, x30, [sp, #-96]!
    c00c:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    c010:	mov	x29, sp
    c014:	ldr	x6, [x6, #3528]
    c018:	stp	x21, x22, [sp, #32]
    c01c:	mov	x22, x5
    c020:	ldr	x21, [x0, #16]
    c024:	stp	x19, x20, [sp, #16]
    c028:	mov	x19, x1
    c02c:	mov	x20, x2
    c030:	mov	x0, x21
    c034:	mov	w1, #0x51                  	// #81
    c038:	stp	x23, x24, [sp, #48]
    c03c:	mov	w24, w3
    c040:	mov	x23, x4
    c044:	str	x25, [sp, #64]
    c048:	ldr	x25, [x6]
    c04c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c050:	cbnz	w0, c070 <gcc_cp_fe_context@@Base+0x1df8>
    c054:	mov	x0, #0x0                   	// #0
    c058:	ldp	x19, x20, [sp, #16]
    c05c:	ldp	x21, x22, [sp, #32]
    c060:	ldp	x23, x24, [sp, #48]
    c064:	ldr	x25, [sp, #64]
    c068:	ldp	x29, x30, [sp], #96
    c06c:	ret
    c070:	mov	x1, x25
    c074:	mov	x0, x21
    c078:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c07c:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x1ddc>
    c080:	mov	x0, x21
    c084:	mov	x1, #0x5                   	// #5
    c088:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c08c:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x1ddc>
    c090:	mov	x1, x19
    c094:	mov	x0, x21
    c098:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c09c:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x1ddc>
    c0a0:	mov	x1, x20
    c0a4:	mov	x0, x21
    c0a8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c0ac:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x1ddc>
    c0b0:	mov	w1, w24
    c0b4:	mov	x0, x21
    c0b8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c0bc:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x1ddc>
    c0c0:	mov	x1, x23
    c0c4:	mov	x0, x21
    c0c8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c0cc:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x1ddc>
    c0d0:	mov	x1, x22
    c0d4:	mov	x0, x21
    c0d8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c0dc:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x1ddc>
    c0e0:	mov	x0, x21
    c0e4:	mov	w1, #0x1                   	// #1
    c0e8:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c0ec:	cbz	w0, c054 <gcc_cp_fe_context@@Base+0x1ddc>
    c0f0:	add	x1, sp, #0x58
    c0f4:	mov	x0, x21
    c0f8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c0fc:	cmp	w0, #0x0
    c100:	ldr	x1, [sp, #88]
    c104:	csel	x0, xzr, x1, eq  // eq = none
    c108:	b	c058 <gcc_cp_fe_context@@Base+0x1de0>
    c10c:	nop
    c110:	stp	x29, x30, [sp, #-80]!
    c114:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
    c118:	mov	x29, sp
    c11c:	ldr	x5, [x5, #3632]
    c120:	stp	x19, x20, [sp, #16]
    c124:	mov	w20, w4
    c128:	ldr	x19, [x0, #16]
    c12c:	stp	x21, x22, [sp, #32]
    c130:	mov	x22, x2
    c134:	mov	w21, w3
    c138:	mov	x0, x19
    c13c:	stp	x23, x24, [sp, #48]
    c140:	mov	x23, x1
    c144:	mov	w1, #0x51                  	// #81
    c148:	ldr	x24, [x5]
    c14c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c150:	cbnz	w0, c16c <gcc_cp_fe_context@@Base+0x1ef4>
    c154:	mov	x0, #0x0                   	// #0
    c158:	ldp	x19, x20, [sp, #16]
    c15c:	ldp	x21, x22, [sp, #32]
    c160:	ldp	x23, x24, [sp, #48]
    c164:	ldp	x29, x30, [sp], #80
    c168:	ret
    c16c:	mov	x1, x24
    c170:	mov	x0, x19
    c174:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c178:	cbz	w0, c154 <gcc_cp_fe_context@@Base+0x1edc>
    c17c:	mov	x0, x19
    c180:	mov	x1, #0x4                   	// #4
    c184:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c188:	cbz	w0, c154 <gcc_cp_fe_context@@Base+0x1edc>
    c18c:	mov	x1, x23
    c190:	mov	x0, x19
    c194:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c198:	cbz	w0, c154 <gcc_cp_fe_context@@Base+0x1edc>
    c19c:	mov	x1, x22
    c1a0:	mov	x0, x19
    c1a4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c1a8:	cbz	w0, c154 <gcc_cp_fe_context@@Base+0x1edc>
    c1ac:	mov	w1, w21
    c1b0:	mov	x0, x19
    c1b4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c1b8:	cbz	w0, c154 <gcc_cp_fe_context@@Base+0x1edc>
    c1bc:	mov	w1, w20
    c1c0:	mov	x0, x19
    c1c4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c1c8:	cbz	w0, c154 <gcc_cp_fe_context@@Base+0x1edc>
    c1cc:	mov	x0, x19
    c1d0:	mov	w1, #0x1                   	// #1
    c1d4:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c1d8:	cbz	w0, c154 <gcc_cp_fe_context@@Base+0x1edc>
    c1dc:	add	x1, sp, #0x48
    c1e0:	mov	x0, x19
    c1e4:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c1e8:	cmp	w0, #0x0
    c1ec:	ldr	x1, [sp, #72]
    c1f0:	csel	x0, xzr, x1, eq  // eq = none
    c1f4:	b	c158 <gcc_cp_fe_context@@Base+0x1ee0>
    c1f8:	stp	x29, x30, [sp, #-48]!
    c1fc:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    c200:	mov	w1, #0x51                  	// #81
    c204:	mov	x29, sp
    c208:	ldr	x2, [x2, #3536]
    c20c:	stp	x19, x20, [sp, #16]
    c210:	ldr	x19, [x0, #16]
    c214:	ldr	x20, [x2]
    c218:	mov	x0, x19
    c21c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c220:	cbnz	w0, c234 <gcc_cp_fe_context@@Base+0x1fbc>
    c224:	mov	x0, #0x0                   	// #0
    c228:	ldp	x19, x20, [sp, #16]
    c22c:	ldp	x29, x30, [sp], #48
    c230:	ret
    c234:	mov	x1, x20
    c238:	mov	x0, x19
    c23c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c240:	cbz	w0, c224 <gcc_cp_fe_context@@Base+0x1fac>
    c244:	mov	x0, x19
    c248:	mov	x1, #0x0                   	// #0
    c24c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c250:	cbz	w0, c224 <gcc_cp_fe_context@@Base+0x1fac>
    c254:	mov	x0, x19
    c258:	mov	w1, #0x1                   	// #1
    c25c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c260:	cbz	w0, c224 <gcc_cp_fe_context@@Base+0x1fac>
    c264:	add	x1, sp, #0x28
    c268:	mov	x0, x19
    c26c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c270:	cmp	w0, #0x0
    c274:	ldr	x1, [sp, #40]
    c278:	csel	x0, xzr, x1, eq  // eq = none
    c27c:	b	c228 <gcc_cp_fe_context@@Base+0x1fb0>
    c280:	stp	x29, x30, [sp, #-64]!
    c284:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    c288:	mov	x29, sp
    c28c:	ldr	x2, [x2, #3640]
    c290:	stp	x19, x20, [sp, #16]
    c294:	mov	x19, x1
    c298:	ldr	x20, [x0, #16]
    c29c:	mov	w1, #0x51                  	// #81
    c2a0:	str	x21, [sp, #32]
    c2a4:	mov	x0, x20
    c2a8:	ldr	x21, [x2]
    c2ac:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c2b0:	cbnz	w0, c2c8 <gcc_cp_fe_context@@Base+0x2050>
    c2b4:	mov	x0, #0x0                   	// #0
    c2b8:	ldp	x19, x20, [sp, #16]
    c2bc:	ldr	x21, [sp, #32]
    c2c0:	ldp	x29, x30, [sp], #64
    c2c4:	ret
    c2c8:	mov	x1, x21
    c2cc:	mov	x0, x20
    c2d0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c2d4:	cbz	w0, c2b4 <gcc_cp_fe_context@@Base+0x203c>
    c2d8:	mov	x0, x20
    c2dc:	mov	x1, #0x1                   	// #1
    c2e0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c2e4:	cbz	w0, c2b4 <gcc_cp_fe_context@@Base+0x203c>
    c2e8:	mov	x1, x19
    c2ec:	mov	x0, x20
    c2f0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c2f4:	cbz	w0, c2b4 <gcc_cp_fe_context@@Base+0x203c>
    c2f8:	mov	x0, x20
    c2fc:	mov	w1, #0x1                   	// #1
    c300:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c304:	cbz	w0, c2b4 <gcc_cp_fe_context@@Base+0x203c>
    c308:	add	x1, sp, #0x38
    c30c:	mov	x0, x20
    c310:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c314:	cmp	w0, #0x0
    c318:	ldr	x1, [sp, #56]
    c31c:	csel	x0, xzr, x1, eq  // eq = none
    c320:	b	c2b8 <gcc_cp_fe_context@@Base+0x2040>
    c324:	nop
    c328:	stp	x29, x30, [sp, #-48]!
    c32c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    c330:	mov	w1, #0x51                  	// #81
    c334:	mov	x29, sp
    c338:	ldr	x2, [x2, #3848]
    c33c:	stp	x19, x20, [sp, #16]
    c340:	ldr	x19, [x0, #16]
    c344:	ldr	x20, [x2]
    c348:	mov	x0, x19
    c34c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c350:	cbnz	w0, c364 <gcc_cp_fe_context@@Base+0x20ec>
    c354:	mov	w0, #0x0                   	// #0
    c358:	ldp	x19, x20, [sp, #16]
    c35c:	ldp	x29, x30, [sp], #48
    c360:	ret
    c364:	mov	x1, x20
    c368:	mov	x0, x19
    c36c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c370:	cbz	w0, c354 <gcc_cp_fe_context@@Base+0x20dc>
    c374:	mov	x0, x19
    c378:	mov	x1, #0x0                   	// #0
    c37c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c380:	cbz	w0, c354 <gcc_cp_fe_context@@Base+0x20dc>
    c384:	mov	x0, x19
    c388:	mov	w1, #0x1                   	// #1
    c38c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c390:	cbz	w0, c354 <gcc_cp_fe_context@@Base+0x20dc>
    c394:	add	x1, sp, #0x28
    c398:	mov	x0, x19
    c39c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c3a0:	cmp	w0, #0x0
    c3a4:	ldr	w1, [sp, #40]
    c3a8:	mov	w0, #0x0                   	// #0
    c3ac:	csel	w0, w0, w1, eq  // eq = none
    c3b0:	b	c358 <gcc_cp_fe_context@@Base+0x20e0>
    c3b4:	nop
    c3b8:	stp	x29, x30, [sp, #-64]!
    c3bc:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    c3c0:	mov	x29, sp
    c3c4:	ldr	x2, [x2, #3888]
    c3c8:	stp	x19, x20, [sp, #16]
    c3cc:	mov	x19, x1
    c3d0:	ldr	x20, [x0, #16]
    c3d4:	mov	w1, #0x51                  	// #81
    c3d8:	str	x21, [sp, #32]
    c3dc:	mov	x0, x20
    c3e0:	ldr	x21, [x2]
    c3e4:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c3e8:	cbnz	w0, c400 <gcc_cp_fe_context@@Base+0x2188>
    c3ec:	mov	w0, #0x0                   	// #0
    c3f0:	ldp	x19, x20, [sp, #16]
    c3f4:	ldr	x21, [sp, #32]
    c3f8:	ldp	x29, x30, [sp], #64
    c3fc:	ret
    c400:	mov	x1, x21
    c404:	mov	x0, x20
    c408:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c40c:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x2174>
    c410:	mov	x0, x20
    c414:	mov	x1, #0x1                   	// #1
    c418:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c41c:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x2174>
    c420:	mov	x1, x19
    c424:	mov	x0, x20
    c428:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c42c:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x2174>
    c430:	mov	x0, x20
    c434:	mov	w1, #0x1                   	// #1
    c438:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c43c:	cbz	w0, c3ec <gcc_cp_fe_context@@Base+0x2174>
    c440:	add	x1, sp, #0x38
    c444:	mov	x0, x20
    c448:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c44c:	cmp	w0, #0x0
    c450:	ldr	w1, [sp, #56]
    c454:	mov	w0, #0x0                   	// #0
    c458:	csel	w0, w0, w1, eq  // eq = none
    c45c:	b	c3f0 <gcc_cp_fe_context@@Base+0x2178>
    c460:	stp	x29, x30, [sp, #-64]!
    c464:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    c468:	mov	x29, sp
    c46c:	ldr	x2, [x2, #3448]
    c470:	stp	x19, x20, [sp, #16]
    c474:	mov	x19, x1
    c478:	ldr	x20, [x0, #16]
    c47c:	mov	w1, #0x51                  	// #81
    c480:	str	x21, [sp, #32]
    c484:	mov	x0, x20
    c488:	ldr	x21, [x2]
    c48c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c490:	cbnz	w0, c4a8 <gcc_cp_fe_context@@Base+0x2230>
    c494:	mov	w0, #0x0                   	// #0
    c498:	ldp	x19, x20, [sp, #16]
    c49c:	ldr	x21, [sp, #32]
    c4a0:	ldp	x29, x30, [sp], #64
    c4a4:	ret
    c4a8:	mov	x1, x21
    c4ac:	mov	x0, x20
    c4b0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c4b4:	cbz	w0, c494 <gcc_cp_fe_context@@Base+0x221c>
    c4b8:	mov	x0, x20
    c4bc:	mov	x1, #0x1                   	// #1
    c4c0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c4c4:	cbz	w0, c494 <gcc_cp_fe_context@@Base+0x221c>
    c4c8:	mov	x1, x19
    c4cc:	mov	x0, x20
    c4d0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c4d4:	cbz	w0, c494 <gcc_cp_fe_context@@Base+0x221c>
    c4d8:	mov	x0, x20
    c4dc:	mov	w1, #0x1                   	// #1
    c4e0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c4e4:	cbz	w0, c494 <gcc_cp_fe_context@@Base+0x221c>
    c4e8:	add	x1, sp, #0x38
    c4ec:	mov	x0, x20
    c4f0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c4f4:	cmp	w0, #0x0
    c4f8:	ldr	w1, [sp, #56]
    c4fc:	mov	w0, #0x0                   	// #0
    c500:	csel	w0, w0, w1, eq  // eq = none
    c504:	b	c498 <gcc_cp_fe_context@@Base+0x2220>
    c508:	stp	x29, x30, [sp, #-96]!
    c50c:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    c510:	mov	x29, sp
    c514:	ldr	x6, [x6, #3616]
    c518:	stp	x21, x22, [sp, #32]
    c51c:	mov	w22, w5
    c520:	ldr	x21, [x0, #16]
    c524:	stp	x19, x20, [sp, #16]
    c528:	mov	x19, x1
    c52c:	mov	w20, w2
    c530:	mov	x0, x21
    c534:	mov	w1, #0x51                  	// #81
    c538:	stp	x23, x24, [sp, #48]
    c53c:	mov	x24, x3
    c540:	mov	x23, x4
    c544:	str	x25, [sp, #64]
    c548:	ldr	x25, [x6]
    c54c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c550:	cbnz	w0, c570 <gcc_cp_fe_context@@Base+0x22f8>
    c554:	mov	x0, #0x0                   	// #0
    c558:	ldp	x19, x20, [sp, #16]
    c55c:	ldp	x21, x22, [sp, #32]
    c560:	ldp	x23, x24, [sp, #48]
    c564:	ldr	x25, [sp, #64]
    c568:	ldp	x29, x30, [sp], #96
    c56c:	ret
    c570:	mov	x1, x25
    c574:	mov	x0, x21
    c578:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c57c:	cbz	w0, c554 <gcc_cp_fe_context@@Base+0x22dc>
    c580:	mov	x0, x21
    c584:	mov	x1, #0x5                   	// #5
    c588:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c58c:	cbz	w0, c554 <gcc_cp_fe_context@@Base+0x22dc>
    c590:	mov	x1, x19
    c594:	mov	x0, x21
    c598:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c59c:	cbz	w0, c554 <gcc_cp_fe_context@@Base+0x22dc>
    c5a0:	sxtw	x1, w20
    c5a4:	mov	x0, x21
    c5a8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c5ac:	cbz	w0, c554 <gcc_cp_fe_context@@Base+0x22dc>
    c5b0:	mov	x1, x24
    c5b4:	mov	x0, x21
    c5b8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c5bc:	cbz	w0, c554 <gcc_cp_fe_context@@Base+0x22dc>
    c5c0:	mov	x1, x23
    c5c4:	mov	x0, x21
    c5c8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c5cc:	cbz	w0, c554 <gcc_cp_fe_context@@Base+0x22dc>
    c5d0:	mov	w1, w22
    c5d4:	mov	x0, x21
    c5d8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c5dc:	cbz	w0, c554 <gcc_cp_fe_context@@Base+0x22dc>
    c5e0:	mov	x0, x21
    c5e4:	mov	w1, #0x1                   	// #1
    c5e8:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c5ec:	cbz	w0, c554 <gcc_cp_fe_context@@Base+0x22dc>
    c5f0:	add	x1, sp, #0x58
    c5f4:	mov	x0, x21
    c5f8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c5fc:	cmp	w0, #0x0
    c600:	ldr	x1, [sp, #88]
    c604:	csel	x0, xzr, x1, eq  // eq = none
    c608:	b	c558 <gcc_cp_fe_context@@Base+0x22e0>
    c60c:	nop
    c610:	stp	x29, x30, [sp, #-64]!
    c614:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    c618:	mov	x29, sp
    c61c:	ldr	x3, [x3, #3776]
    c620:	stp	x21, x22, [sp, #32]
    c624:	ldr	x21, [x0, #16]
    c628:	stp	x19, x20, [sp, #16]
    c62c:	mov	x19, x1
    c630:	mov	x20, x2
    c634:	mov	x0, x21
    c638:	mov	w1, #0x51                  	// #81
    c63c:	ldr	x22, [x3]
    c640:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c644:	cbnz	w0, c65c <gcc_cp_fe_context@@Base+0x23e4>
    c648:	mov	x0, #0x0                   	// #0
    c64c:	ldp	x19, x20, [sp, #16]
    c650:	ldp	x21, x22, [sp, #32]
    c654:	ldp	x29, x30, [sp], #64
    c658:	ret
    c65c:	mov	x1, x22
    c660:	mov	x0, x21
    c664:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c668:	cbz	w0, c648 <gcc_cp_fe_context@@Base+0x23d0>
    c66c:	mov	x0, x21
    c670:	mov	x1, #0x2                   	// #2
    c674:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c678:	cbz	w0, c648 <gcc_cp_fe_context@@Base+0x23d0>
    c67c:	mov	x1, x19
    c680:	mov	x0, x21
    c684:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c688:	cbz	w0, c648 <gcc_cp_fe_context@@Base+0x23d0>
    c68c:	mov	x1, x20
    c690:	mov	x0, x21
    c694:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c698:	cbz	w0, c648 <gcc_cp_fe_context@@Base+0x23d0>
    c69c:	mov	x0, x21
    c6a0:	mov	w1, #0x1                   	// #1
    c6a4:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c6a8:	cbz	w0, c648 <gcc_cp_fe_context@@Base+0x23d0>
    c6ac:	add	x1, sp, #0x38
    c6b0:	mov	x0, x21
    c6b4:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c6b8:	cmp	w0, #0x0
    c6bc:	ldr	x1, [sp, #56]
    c6c0:	csel	x0, xzr, x1, eq  // eq = none
    c6c4:	b	c64c <gcc_cp_fe_context@@Base+0x23d4>
    c6c8:	stp	x29, x30, [sp, #-64]!
    c6cc:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    c6d0:	mov	x29, sp
    c6d4:	ldr	x3, [x3, #3480]
    c6d8:	stp	x21, x22, [sp, #32]
    c6dc:	ldr	x21, [x0, #16]
    c6e0:	stp	x19, x20, [sp, #16]
    c6e4:	mov	x19, x1
    c6e8:	mov	x20, x2
    c6ec:	mov	x0, x21
    c6f0:	mov	w1, #0x51                  	// #81
    c6f4:	ldr	x22, [x3]
    c6f8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c6fc:	cbnz	w0, c714 <gcc_cp_fe_context@@Base+0x249c>
    c700:	mov	w0, #0x0                   	// #0
    c704:	ldp	x19, x20, [sp, #16]
    c708:	ldp	x21, x22, [sp, #32]
    c70c:	ldp	x29, x30, [sp], #64
    c710:	ret
    c714:	mov	x1, x22
    c718:	mov	x0, x21
    c71c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c720:	cbz	w0, c700 <gcc_cp_fe_context@@Base+0x2488>
    c724:	mov	x0, x21
    c728:	mov	x1, #0x2                   	// #2
    c72c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c730:	cbz	w0, c700 <gcc_cp_fe_context@@Base+0x2488>
    c734:	mov	x1, x19
    c738:	mov	x0, x21
    c73c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c740:	cbz	w0, c700 <gcc_cp_fe_context@@Base+0x2488>
    c744:	mov	x1, x20
    c748:	mov	x0, x21
    c74c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c750:	cbz	w0, c700 <gcc_cp_fe_context@@Base+0x2488>
    c754:	mov	x0, x21
    c758:	mov	w1, #0x1                   	// #1
    c75c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c760:	cbz	w0, c700 <gcc_cp_fe_context@@Base+0x2488>
    c764:	add	x1, sp, #0x38
    c768:	mov	x0, x21
    c76c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c770:	cmp	w0, #0x0
    c774:	ldr	w1, [sp, #56]
    c778:	mov	w0, #0x0                   	// #0
    c77c:	csel	w0, w0, w1, eq  // eq = none
    c780:	b	c704 <gcc_cp_fe_context@@Base+0x248c>
    c784:	nop
    c788:	stp	x29, x30, [sp, #-64]!
    c78c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    c790:	mov	x29, sp
    c794:	ldr	x3, [x3, #3864]
    c798:	stp	x21, x22, [sp, #32]
    c79c:	ldr	x21, [x0, #16]
    c7a0:	stp	x19, x20, [sp, #16]
    c7a4:	mov	x19, x1
    c7a8:	mov	x20, x2
    c7ac:	mov	x0, x21
    c7b0:	mov	w1, #0x51                  	// #81
    c7b4:	ldr	x22, [x3]
    c7b8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c7bc:	cbnz	w0, c7d4 <gcc_cp_fe_context@@Base+0x255c>
    c7c0:	mov	w0, #0x0                   	// #0
    c7c4:	ldp	x19, x20, [sp, #16]
    c7c8:	ldp	x21, x22, [sp, #32]
    c7cc:	ldp	x29, x30, [sp], #64
    c7d0:	ret
    c7d4:	mov	x1, x22
    c7d8:	mov	x0, x21
    c7dc:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c7e0:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x2548>
    c7e4:	mov	x0, x21
    c7e8:	mov	x1, #0x2                   	// #2
    c7ec:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c7f0:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x2548>
    c7f4:	mov	x1, x19
    c7f8:	mov	x0, x21
    c7fc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c800:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x2548>
    c804:	mov	x1, x20
    c808:	mov	x0, x21
    c80c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c810:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x2548>
    c814:	mov	x0, x21
    c818:	mov	w1, #0x1                   	// #1
    c81c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c820:	cbz	w0, c7c0 <gcc_cp_fe_context@@Base+0x2548>
    c824:	add	x1, sp, #0x38
    c828:	mov	x0, x21
    c82c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c830:	cmp	w0, #0x0
    c834:	ldr	w1, [sp, #56]
    c838:	mov	w0, #0x0                   	// #0
    c83c:	csel	w0, w0, w1, eq  // eq = none
    c840:	b	c7c4 <gcc_cp_fe_context@@Base+0x254c>
    c844:	nop
    c848:	stp	x29, x30, [sp, #-64]!
    c84c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    c850:	mov	x29, sp
    c854:	ldr	x3, [x3, #3728]
    c858:	stp	x21, x22, [sp, #32]
    c85c:	ldr	x21, [x0, #16]
    c860:	stp	x19, x20, [sp, #16]
    c864:	mov	x19, x1
    c868:	mov	x20, x2
    c86c:	mov	x0, x21
    c870:	mov	w1, #0x51                  	// #81
    c874:	ldr	x22, [x3]
    c878:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c87c:	cbnz	w0, c894 <gcc_cp_fe_context@@Base+0x261c>
    c880:	mov	w0, #0x0                   	// #0
    c884:	ldp	x19, x20, [sp, #16]
    c888:	ldp	x21, x22, [sp, #32]
    c88c:	ldp	x29, x30, [sp], #64
    c890:	ret
    c894:	mov	x1, x22
    c898:	mov	x0, x21
    c89c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c8a0:	cbz	w0, c880 <gcc_cp_fe_context@@Base+0x2608>
    c8a4:	mov	x0, x21
    c8a8:	mov	x1, #0x2                   	// #2
    c8ac:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c8b0:	cbz	w0, c880 <gcc_cp_fe_context@@Base+0x2608>
    c8b4:	mov	x1, x19
    c8b8:	mov	x0, x21
    c8bc:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c8c0:	cbz	w0, c880 <gcc_cp_fe_context@@Base+0x2608>
    c8c4:	mov	x1, x20
    c8c8:	mov	x0, x21
    c8cc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c8d0:	cbz	w0, c880 <gcc_cp_fe_context@@Base+0x2608>
    c8d4:	mov	x0, x21
    c8d8:	mov	w1, #0x1                   	// #1
    c8dc:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c8e0:	cbz	w0, c880 <gcc_cp_fe_context@@Base+0x2608>
    c8e4:	add	x1, sp, #0x38
    c8e8:	mov	x0, x21
    c8ec:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c8f0:	cmp	w0, #0x0
    c8f4:	ldr	w1, [sp, #56]
    c8f8:	mov	w0, #0x0                   	// #0
    c8fc:	csel	w0, w0, w1, eq  // eq = none
    c900:	b	c884 <gcc_cp_fe_context@@Base+0x260c>
    c904:	nop
    c908:	stp	x29, x30, [sp, #-64]!
    c90c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    c910:	mov	x29, sp
    c914:	ldr	x3, [x3, #3336]
    c918:	stp	x21, x22, [sp, #32]
    c91c:	ldr	x21, [x0, #16]
    c920:	stp	x19, x20, [sp, #16]
    c924:	mov	w19, w1
    c928:	mov	x20, x2
    c92c:	mov	x0, x21
    c930:	mov	w1, #0x51                  	// #81
    c934:	ldr	x22, [x3]
    c938:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c93c:	cbnz	w0, c954 <gcc_cp_fe_context@@Base+0x26dc>
    c940:	mov	w0, #0x0                   	// #0
    c944:	ldp	x19, x20, [sp, #16]
    c948:	ldp	x21, x22, [sp, #32]
    c94c:	ldp	x29, x30, [sp], #64
    c950:	ret
    c954:	mov	x1, x22
    c958:	mov	x0, x21
    c95c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    c960:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x26c8>
    c964:	mov	x0, x21
    c968:	mov	x1, #0x2                   	// #2
    c96c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c970:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x26c8>
    c974:	mov	w1, w19
    c978:	mov	x0, x21
    c97c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c980:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x26c8>
    c984:	mov	x1, x20
    c988:	mov	x0, x21
    c98c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    c990:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x26c8>
    c994:	mov	x0, x21
    c998:	mov	w1, #0x1                   	// #1
    c99c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    c9a0:	cbz	w0, c940 <gcc_cp_fe_context@@Base+0x26c8>
    c9a4:	add	x1, sp, #0x38
    c9a8:	mov	x0, x21
    c9ac:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    c9b0:	cmp	w0, #0x0
    c9b4:	ldr	w1, [sp, #56]
    c9b8:	mov	w0, #0x0                   	// #0
    c9bc:	csel	w0, w0, w1, eq  // eq = none
    c9c0:	b	c944 <gcc_cp_fe_context@@Base+0x26cc>
    c9c4:	nop
    c9c8:	stp	x29, x30, [sp, #-48]!
    c9cc:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    c9d0:	mov	w1, #0x51                  	// #81
    c9d4:	mov	x29, sp
    c9d8:	ldr	x2, [x2, #3608]
    c9dc:	stp	x19, x20, [sp, #16]
    c9e0:	ldr	x19, [x0, #16]
    c9e4:	ldr	x20, [x2]
    c9e8:	mov	x0, x19
    c9ec:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    c9f0:	cbnz	w0, ca04 <gcc_cp_fe_context@@Base+0x278c>
    c9f4:	mov	w0, #0x0                   	// #0
    c9f8:	ldp	x19, x20, [sp, #16]
    c9fc:	ldp	x29, x30, [sp], #48
    ca00:	ret
    ca04:	mov	x1, x20
    ca08:	mov	x0, x19
    ca0c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    ca10:	cbz	w0, c9f4 <gcc_cp_fe_context@@Base+0x277c>
    ca14:	mov	x0, x19
    ca18:	mov	x1, #0x0                   	// #0
    ca1c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ca20:	cbz	w0, c9f4 <gcc_cp_fe_context@@Base+0x277c>
    ca24:	mov	x0, x19
    ca28:	mov	w1, #0x1                   	// #1
    ca2c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    ca30:	cbz	w0, c9f4 <gcc_cp_fe_context@@Base+0x277c>
    ca34:	add	x1, sp, #0x28
    ca38:	mov	x0, x19
    ca3c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    ca40:	cmp	w0, #0x0
    ca44:	ldr	w1, [sp, #40]
    ca48:	mov	w0, #0x0                   	// #0
    ca4c:	csel	w0, w0, w1, eq  // eq = none
    ca50:	b	c9f8 <gcc_cp_fe_context@@Base+0x2780>
    ca54:	nop
    ca58:	stp	x29, x30, [sp, #-48]!
    ca5c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    ca60:	mov	w1, #0x51                  	// #81
    ca64:	mov	x29, sp
    ca68:	ldr	x2, [x2, #3808]
    ca6c:	stp	x19, x20, [sp, #16]
    ca70:	ldr	x19, [x0, #16]
    ca74:	ldr	x20, [x2]
    ca78:	mov	x0, x19
    ca7c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    ca80:	cbnz	w0, ca94 <gcc_cp_fe_context@@Base+0x281c>
    ca84:	mov	w0, #0x0                   	// #0
    ca88:	ldp	x19, x20, [sp, #16]
    ca8c:	ldp	x29, x30, [sp], #48
    ca90:	ret
    ca94:	mov	x1, x20
    ca98:	mov	x0, x19
    ca9c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    caa0:	cbz	w0, ca84 <gcc_cp_fe_context@@Base+0x280c>
    caa4:	mov	x0, x19
    caa8:	mov	x1, #0x0                   	// #0
    caac:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cab0:	cbz	w0, ca84 <gcc_cp_fe_context@@Base+0x280c>
    cab4:	mov	x0, x19
    cab8:	mov	w1, #0x1                   	// #1
    cabc:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    cac0:	cbz	w0, ca84 <gcc_cp_fe_context@@Base+0x280c>
    cac4:	add	x1, sp, #0x28
    cac8:	mov	x0, x19
    cacc:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    cad0:	cmp	w0, #0x0
    cad4:	ldr	w1, [sp, #40]
    cad8:	mov	w0, #0x0                   	// #0
    cadc:	csel	w0, w0, w1, eq  // eq = none
    cae0:	b	ca88 <gcc_cp_fe_context@@Base+0x2810>
    cae4:	nop
    cae8:	stp	x29, x30, [sp, #-80]!
    caec:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    caf0:	mov	x29, sp
    caf4:	ldr	x4, [x4, #3736]
    caf8:	stp	x19, x20, [sp, #16]
    cafc:	mov	x20, x3
    cb00:	ldr	x19, [x0, #16]
    cb04:	stp	x21, x22, [sp, #32]
    cb08:	mov	x22, x1
    cb0c:	mov	x21, x2
    cb10:	mov	x0, x19
    cb14:	mov	w1, #0x51                  	// #81
    cb18:	str	x23, [sp, #48]
    cb1c:	ldr	x23, [x4]
    cb20:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    cb24:	cbnz	w0, cb40 <gcc_cp_fe_context@@Base+0x28c8>
    cb28:	mov	x0, #0x0                   	// #0
    cb2c:	ldp	x19, x20, [sp, #16]
    cb30:	ldp	x21, x22, [sp, #32]
    cb34:	ldr	x23, [sp, #48]
    cb38:	ldp	x29, x30, [sp], #80
    cb3c:	ret
    cb40:	mov	x1, x23
    cb44:	mov	x0, x19
    cb48:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    cb4c:	cbz	w0, cb28 <gcc_cp_fe_context@@Base+0x28b0>
    cb50:	mov	x0, x19
    cb54:	mov	x1, #0x3                   	// #3
    cb58:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cb5c:	cbz	w0, cb28 <gcc_cp_fe_context@@Base+0x28b0>
    cb60:	mov	x1, x22
    cb64:	mov	x0, x19
    cb68:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    cb6c:	cbz	w0, cb28 <gcc_cp_fe_context@@Base+0x28b0>
    cb70:	mov	x1, x21
    cb74:	mov	x0, x19
    cb78:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cb7c:	cbz	w0, cb28 <gcc_cp_fe_context@@Base+0x28b0>
    cb80:	mov	x1, x20
    cb84:	mov	x0, x19
    cb88:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cb8c:	cbz	w0, cb28 <gcc_cp_fe_context@@Base+0x28b0>
    cb90:	mov	x0, x19
    cb94:	mov	w1, #0x1                   	// #1
    cb98:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    cb9c:	cbz	w0, cb28 <gcc_cp_fe_context@@Base+0x28b0>
    cba0:	add	x1, sp, #0x48
    cba4:	mov	x0, x19
    cba8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    cbac:	cmp	w0, #0x0
    cbb0:	ldr	x1, [sp, #72]
    cbb4:	csel	x0, xzr, x1, eq  // eq = none
    cbb8:	b	cb2c <gcc_cp_fe_context@@Base+0x28b4>
    cbbc:	nop
    cbc0:	stp	x29, x30, [sp, #-80]!
    cbc4:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    cbc8:	mov	x29, sp
    cbcc:	ldr	x4, [x4, #3400]
    cbd0:	stp	x19, x20, [sp, #16]
    cbd4:	mov	x20, x3
    cbd8:	ldr	x19, [x0, #16]
    cbdc:	stp	x21, x22, [sp, #32]
    cbe0:	mov	x22, x1
    cbe4:	mov	x21, x2
    cbe8:	mov	x0, x19
    cbec:	mov	w1, #0x51                  	// #81
    cbf0:	str	x23, [sp, #48]
    cbf4:	ldr	x23, [x4]
    cbf8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    cbfc:	cbnz	w0, cc18 <gcc_cp_fe_context@@Base+0x29a0>
    cc00:	mov	x0, #0x0                   	// #0
    cc04:	ldp	x19, x20, [sp, #16]
    cc08:	ldp	x21, x22, [sp, #32]
    cc0c:	ldr	x23, [sp, #48]
    cc10:	ldp	x29, x30, [sp], #80
    cc14:	ret
    cc18:	mov	x1, x23
    cc1c:	mov	x0, x19
    cc20:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    cc24:	cbz	w0, cc00 <gcc_cp_fe_context@@Base+0x2988>
    cc28:	mov	x0, x19
    cc2c:	mov	x1, #0x3                   	// #3
    cc30:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cc34:	cbz	w0, cc00 <gcc_cp_fe_context@@Base+0x2988>
    cc38:	mov	x1, x22
    cc3c:	mov	x0, x19
    cc40:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    cc44:	cbz	w0, cc00 <gcc_cp_fe_context@@Base+0x2988>
    cc48:	mov	x1, x21
    cc4c:	mov	x0, x19
    cc50:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cc54:	cbz	w0, cc00 <gcc_cp_fe_context@@Base+0x2988>
    cc58:	mov	x1, x20
    cc5c:	mov	x0, x19
    cc60:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cc64:	cbz	w0, cc00 <gcc_cp_fe_context@@Base+0x2988>
    cc68:	mov	x0, x19
    cc6c:	mov	w1, #0x1                   	// #1
    cc70:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    cc74:	cbz	w0, cc00 <gcc_cp_fe_context@@Base+0x2988>
    cc78:	add	x1, sp, #0x48
    cc7c:	mov	x0, x19
    cc80:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    cc84:	cmp	w0, #0x0
    cc88:	ldr	x1, [sp, #72]
    cc8c:	csel	x0, xzr, x1, eq  // eq = none
    cc90:	b	cc04 <gcc_cp_fe_context@@Base+0x298c>
    cc94:	nop
    cc98:	stp	x29, x30, [sp, #-96]!
    cc9c:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    cca0:	mov	x29, sp
    cca4:	ldr	x6, [x6, #3208]
    cca8:	stp	x21, x22, [sp, #32]
    ccac:	mov	w22, w5
    ccb0:	ldr	x21, [x0, #16]
    ccb4:	stp	x19, x20, [sp, #16]
    ccb8:	mov	x19, x1
    ccbc:	mov	x20, x2
    ccc0:	mov	x0, x21
    ccc4:	mov	w1, #0x51                  	// #81
    ccc8:	stp	x23, x24, [sp, #48]
    cccc:	mov	w24, w3
    ccd0:	mov	x23, x4
    ccd4:	str	x25, [sp, #64]
    ccd8:	ldr	x25, [x6]
    ccdc:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    cce0:	cbnz	w0, cd00 <gcc_cp_fe_context@@Base+0x2a88>
    cce4:	mov	x0, #0x0                   	// #0
    cce8:	ldp	x19, x20, [sp, #16]
    ccec:	ldp	x21, x22, [sp, #32]
    ccf0:	ldp	x23, x24, [sp, #48]
    ccf4:	ldr	x25, [sp, #64]
    ccf8:	ldp	x29, x30, [sp], #96
    ccfc:	ret
    cd00:	mov	x1, x25
    cd04:	mov	x0, x21
    cd08:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    cd0c:	cbz	w0, cce4 <gcc_cp_fe_context@@Base+0x2a6c>
    cd10:	mov	x0, x21
    cd14:	mov	x1, #0x5                   	// #5
    cd18:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cd1c:	cbz	w0, cce4 <gcc_cp_fe_context@@Base+0x2a6c>
    cd20:	mov	x1, x19
    cd24:	mov	x0, x21
    cd28:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    cd2c:	cbz	w0, cce4 <gcc_cp_fe_context@@Base+0x2a6c>
    cd30:	mov	x1, x20
    cd34:	mov	x0, x21
    cd38:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cd3c:	cbz	w0, cce4 <gcc_cp_fe_context@@Base+0x2a6c>
    cd40:	mov	w1, w24
    cd44:	mov	x0, x21
    cd48:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cd4c:	cbz	w0, cce4 <gcc_cp_fe_context@@Base+0x2a6c>
    cd50:	mov	x1, x23
    cd54:	mov	x0, x21
    cd58:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    cd5c:	cbz	w0, cce4 <gcc_cp_fe_context@@Base+0x2a6c>
    cd60:	mov	w1, w22
    cd64:	mov	x0, x21
    cd68:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cd6c:	cbz	w0, cce4 <gcc_cp_fe_context@@Base+0x2a6c>
    cd70:	mov	x0, x21
    cd74:	mov	w1, #0x1                   	// #1
    cd78:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    cd7c:	cbz	w0, cce4 <gcc_cp_fe_context@@Base+0x2a6c>
    cd80:	add	x1, sp, #0x58
    cd84:	mov	x0, x21
    cd88:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    cd8c:	cmp	w0, #0x0
    cd90:	ldr	x1, [sp, #88]
    cd94:	csel	x0, xzr, x1, eq  // eq = none
    cd98:	b	cce8 <gcc_cp_fe_context@@Base+0x2a70>
    cd9c:	nop
    cda0:	stp	x29, x30, [sp, #-80]!
    cda4:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
    cda8:	mov	x29, sp
    cdac:	ldr	x5, [x5, #3760]
    cdb0:	stp	x19, x20, [sp, #16]
    cdb4:	mov	w20, w4
    cdb8:	ldr	x19, [x0, #16]
    cdbc:	stp	x21, x22, [sp, #32]
    cdc0:	mov	x22, x2
    cdc4:	mov	x21, x3
    cdc8:	mov	x0, x19
    cdcc:	stp	x23, x24, [sp, #48]
    cdd0:	mov	x23, x1
    cdd4:	mov	w1, #0x51                  	// #81
    cdd8:	ldr	x24, [x5]
    cddc:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    cde0:	cbnz	w0, cdfc <gcc_cp_fe_context@@Base+0x2b84>
    cde4:	mov	x0, #0x0                   	// #0
    cde8:	ldp	x19, x20, [sp, #16]
    cdec:	ldp	x21, x22, [sp, #32]
    cdf0:	ldp	x23, x24, [sp, #48]
    cdf4:	ldp	x29, x30, [sp], #80
    cdf8:	ret
    cdfc:	mov	x1, x24
    ce00:	mov	x0, x19
    ce04:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    ce08:	cbz	w0, cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    ce0c:	mov	x0, x19
    ce10:	mov	x1, #0x4                   	// #4
    ce14:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ce18:	cbz	w0, cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    ce1c:	mov	x1, x23
    ce20:	mov	x0, x19
    ce24:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ce28:	cbz	w0, cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    ce2c:	cbz	x22, cebc <gcc_cp_fe_context@@Base+0x2c44>
    ce30:	ldrsw	x23, [x22]
    ce34:	mov	x0, x19
    ce38:	mov	w1, #0x76                  	// #118
    ce3c:	mov	x2, x23
    ce40:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    ce44:	cbz	w0, cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    ce48:	ldr	x2, [x22, #8]
    ce4c:	lsl	x1, x23, #3
    ce50:	mov	x0, x19
    ce54:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    ce58:	cbz	w0, cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    ce5c:	ldr	x2, [x22, #16]
    ce60:	lsl	x1, x23, #2
    ce64:	mov	x0, x19
    ce68:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    ce6c:	cbz	w0, cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    ce70:	mov	x1, x21
    ce74:	mov	x0, x19
    ce78:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    ce7c:	cbz	w0, cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    ce80:	mov	w1, w20
    ce84:	mov	x0, x19
    ce88:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ce8c:	cbz	w0, cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    ce90:	mov	x0, x19
    ce94:	mov	w1, #0x1                   	// #1
    ce98:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    ce9c:	cbz	w0, cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    cea0:	add	x1, sp, #0x48
    cea4:	mov	x0, x19
    cea8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    ceac:	cmp	w0, #0x0
    ceb0:	ldr	x1, [sp, #72]
    ceb4:	csel	x0, xzr, x1, eq  // eq = none
    ceb8:	b	cde8 <gcc_cp_fe_context@@Base+0x2b70>
    cebc:	mov	x0, x19
    cec0:	mov	x2, #0xffffffffffffffff    	// #-1
    cec4:	mov	w1, #0x76                  	// #118
    cec8:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    cecc:	cbnz	w0, ce70 <gcc_cp_fe_context@@Base+0x2bf8>
    ced0:	b	cde4 <gcc_cp_fe_context@@Base+0x2b6c>
    ced4:	nop
    ced8:	stp	x29, x30, [sp, #-64]!
    cedc:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    cee0:	mov	x29, sp
    cee4:	ldr	x2, [x2, #3880]
    cee8:	stp	x19, x20, [sp, #16]
    ceec:	mov	x19, x1
    cef0:	ldr	x20, [x0, #16]
    cef4:	mov	w1, #0x51                  	// #81
    cef8:	str	x21, [sp, #32]
    cefc:	mov	x0, x20
    cf00:	ldr	x21, [x2]
    cf04:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    cf08:	cbnz	w0, cf20 <gcc_cp_fe_context@@Base+0x2ca8>
    cf0c:	mov	w0, #0x0                   	// #0
    cf10:	ldp	x19, x20, [sp, #16]
    cf14:	ldr	x21, [sp, #32]
    cf18:	ldp	x29, x30, [sp], #64
    cf1c:	ret
    cf20:	mov	x1, x21
    cf24:	mov	x0, x20
    cf28:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    cf2c:	cbz	w0, cf0c <gcc_cp_fe_context@@Base+0x2c94>
    cf30:	mov	x0, x20
    cf34:	mov	x1, #0x1                   	// #1
    cf38:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cf3c:	cbz	w0, cf0c <gcc_cp_fe_context@@Base+0x2c94>
    cf40:	mov	x1, x19
    cf44:	mov	x0, x20
    cf48:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cf4c:	cbz	w0, cf0c <gcc_cp_fe_context@@Base+0x2c94>
    cf50:	mov	x0, x20
    cf54:	mov	w1, #0x1                   	// #1
    cf58:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    cf5c:	cbz	w0, cf0c <gcc_cp_fe_context@@Base+0x2c94>
    cf60:	add	x1, sp, #0x38
    cf64:	mov	x0, x20
    cf68:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    cf6c:	cmp	w0, #0x0
    cf70:	ldr	w1, [sp, #56]
    cf74:	mov	w0, #0x0                   	// #0
    cf78:	csel	w0, w0, w1, eq  // eq = none
    cf7c:	b	cf10 <gcc_cp_fe_context@@Base+0x2c98>
    cf80:	stp	x29, x30, [sp, #-64]!
    cf84:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    cf88:	mov	x29, sp
    cf8c:	ldr	x2, [x2, #3696]
    cf90:	stp	x19, x20, [sp, #16]
    cf94:	mov	x19, x1
    cf98:	ldr	x20, [x0, #16]
    cf9c:	mov	w1, #0x51                  	// #81
    cfa0:	str	x21, [sp, #32]
    cfa4:	mov	x0, x20
    cfa8:	ldr	x21, [x2]
    cfac:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    cfb0:	cbnz	w0, cfc8 <gcc_cp_fe_context@@Base+0x2d50>
    cfb4:	mov	w0, #0x0                   	// #0
    cfb8:	ldp	x19, x20, [sp, #16]
    cfbc:	ldr	x21, [sp, #32]
    cfc0:	ldp	x29, x30, [sp], #64
    cfc4:	ret
    cfc8:	mov	x1, x21
    cfcc:	mov	x0, x20
    cfd0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    cfd4:	cbz	w0, cfb4 <gcc_cp_fe_context@@Base+0x2d3c>
    cfd8:	mov	x0, x20
    cfdc:	mov	x1, #0x1                   	// #1
    cfe0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cfe4:	cbz	w0, cfb4 <gcc_cp_fe_context@@Base+0x2d3c>
    cfe8:	mov	x1, x19
    cfec:	mov	x0, x20
    cff0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    cff4:	cbz	w0, cfb4 <gcc_cp_fe_context@@Base+0x2d3c>
    cff8:	mov	x0, x20
    cffc:	mov	w1, #0x1                   	// #1
    d000:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d004:	cbz	w0, cfb4 <gcc_cp_fe_context@@Base+0x2d3c>
    d008:	add	x1, sp, #0x38
    d00c:	mov	x0, x20
    d010:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d014:	cmp	w0, #0x0
    d018:	ldr	w1, [sp, #56]
    d01c:	mov	w0, #0x0                   	// #0
    d020:	csel	w0, w0, w1, eq  // eq = none
    d024:	b	cfb8 <gcc_cp_fe_context@@Base+0x2d40>
    d028:	stp	x29, x30, [sp, #-64]!
    d02c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d030:	mov	x29, sp
    d034:	ldr	x2, [x2, #3584]
    d038:	stp	x19, x20, [sp, #16]
    d03c:	mov	x19, x1
    d040:	ldr	x20, [x0, #16]
    d044:	mov	w1, #0x51                  	// #81
    d048:	str	x21, [sp, #32]
    d04c:	mov	x0, x20
    d050:	ldr	x21, [x2]
    d054:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d058:	cbnz	w0, d070 <gcc_cp_fe_context@@Base+0x2df8>
    d05c:	mov	w0, #0x0                   	// #0
    d060:	ldp	x19, x20, [sp, #16]
    d064:	ldr	x21, [sp, #32]
    d068:	ldp	x29, x30, [sp], #64
    d06c:	ret
    d070:	mov	x1, x21
    d074:	mov	x0, x20
    d078:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d07c:	cbz	w0, d05c <gcc_cp_fe_context@@Base+0x2de4>
    d080:	mov	x0, x20
    d084:	mov	x1, #0x1                   	// #1
    d088:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d08c:	cbz	w0, d05c <gcc_cp_fe_context@@Base+0x2de4>
    d090:	mov	x1, x19
    d094:	mov	x0, x20
    d098:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d09c:	cbz	w0, d05c <gcc_cp_fe_context@@Base+0x2de4>
    d0a0:	mov	x0, x20
    d0a4:	mov	w1, #0x1                   	// #1
    d0a8:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d0ac:	cbz	w0, d05c <gcc_cp_fe_context@@Base+0x2de4>
    d0b0:	add	x1, sp, #0x38
    d0b4:	mov	x0, x20
    d0b8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d0bc:	cmp	w0, #0x0
    d0c0:	ldr	w1, [sp, #56]
    d0c4:	mov	w0, #0x0                   	// #0
    d0c8:	csel	w0, w0, w1, eq  // eq = none
    d0cc:	b	d060 <gcc_cp_fe_context@@Base+0x2de8>
    d0d0:	stp	x29, x30, [sp, #-48]!
    d0d4:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d0d8:	mov	w1, #0x51                  	// #81
    d0dc:	mov	x29, sp
    d0e0:	ldr	x2, [x2, #4064]
    d0e4:	stp	x19, x20, [sp, #16]
    d0e8:	ldr	x19, [x0, #16]
    d0ec:	ldr	x20, [x2]
    d0f0:	mov	x0, x19
    d0f4:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d0f8:	cbnz	w0, d10c <gcc_cp_fe_context@@Base+0x2e94>
    d0fc:	mov	x0, #0x0                   	// #0
    d100:	ldp	x19, x20, [sp, #16]
    d104:	ldp	x29, x30, [sp], #48
    d108:	ret
    d10c:	mov	x1, x20
    d110:	mov	x0, x19
    d114:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d118:	cbz	w0, d0fc <gcc_cp_fe_context@@Base+0x2e84>
    d11c:	mov	x0, x19
    d120:	mov	x1, #0x0                   	// #0
    d124:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d128:	cbz	w0, d0fc <gcc_cp_fe_context@@Base+0x2e84>
    d12c:	mov	x0, x19
    d130:	mov	w1, #0x1                   	// #1
    d134:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d138:	cbz	w0, d0fc <gcc_cp_fe_context@@Base+0x2e84>
    d13c:	add	x1, sp, #0x28
    d140:	mov	x0, x19
    d144:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d148:	cmp	w0, #0x0
    d14c:	ldr	x1, [sp, #40]
    d150:	csel	x0, xzr, x1, eq  // eq = none
    d154:	b	d100 <gcc_cp_fe_context@@Base+0x2e88>
    d158:	stp	x29, x30, [sp, #-48]!
    d15c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d160:	mov	w1, #0x51                  	// #81
    d164:	mov	x29, sp
    d168:	ldr	x2, [x2, #3976]
    d16c:	stp	x19, x20, [sp, #16]
    d170:	ldr	x19, [x0, #16]
    d174:	ldr	x20, [x2]
    d178:	mov	x0, x19
    d17c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d180:	cbnz	w0, d194 <gcc_cp_fe_context@@Base+0x2f1c>
    d184:	mov	x0, #0x0                   	// #0
    d188:	ldp	x19, x20, [sp, #16]
    d18c:	ldp	x29, x30, [sp], #48
    d190:	ret
    d194:	mov	x1, x20
    d198:	mov	x0, x19
    d19c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d1a0:	cbz	w0, d184 <gcc_cp_fe_context@@Base+0x2f0c>
    d1a4:	mov	x0, x19
    d1a8:	mov	x1, #0x0                   	// #0
    d1ac:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d1b0:	cbz	w0, d184 <gcc_cp_fe_context@@Base+0x2f0c>
    d1b4:	mov	x0, x19
    d1b8:	mov	w1, #0x1                   	// #1
    d1bc:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d1c0:	cbz	w0, d184 <gcc_cp_fe_context@@Base+0x2f0c>
    d1c4:	add	x1, sp, #0x28
    d1c8:	mov	x0, x19
    d1cc:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d1d0:	cmp	w0, #0x0
    d1d4:	ldr	x1, [sp, #40]
    d1d8:	csel	x0, xzr, x1, eq  // eq = none
    d1dc:	b	d188 <gcc_cp_fe_context@@Base+0x2f10>
    d1e0:	stp	x29, x30, [sp, #-48]!
    d1e4:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d1e8:	mov	w1, #0x51                  	// #81
    d1ec:	mov	x29, sp
    d1f0:	ldr	x2, [x2, #4024]
    d1f4:	stp	x19, x20, [sp, #16]
    d1f8:	ldr	x19, [x0, #16]
    d1fc:	ldr	x20, [x2]
    d200:	mov	x0, x19
    d204:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d208:	cbnz	w0, d21c <gcc_cp_fe_context@@Base+0x2fa4>
    d20c:	mov	x0, #0x0                   	// #0
    d210:	ldp	x19, x20, [sp, #16]
    d214:	ldp	x29, x30, [sp], #48
    d218:	ret
    d21c:	mov	x1, x20
    d220:	mov	x0, x19
    d224:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d228:	cbz	w0, d20c <gcc_cp_fe_context@@Base+0x2f94>
    d22c:	mov	x0, x19
    d230:	mov	x1, #0x0                   	// #0
    d234:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d238:	cbz	w0, d20c <gcc_cp_fe_context@@Base+0x2f94>
    d23c:	mov	x0, x19
    d240:	mov	w1, #0x1                   	// #1
    d244:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d248:	cbz	w0, d20c <gcc_cp_fe_context@@Base+0x2f94>
    d24c:	add	x1, sp, #0x28
    d250:	mov	x0, x19
    d254:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d258:	cmp	w0, #0x0
    d25c:	ldr	x1, [sp, #40]
    d260:	csel	x0, xzr, x1, eq  // eq = none
    d264:	b	d210 <gcc_cp_fe_context@@Base+0x2f98>
    d268:	stp	x29, x30, [sp, #-48]!
    d26c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d270:	mov	w1, #0x51                  	// #81
    d274:	mov	x29, sp
    d278:	ldr	x2, [x2, #3248]
    d27c:	stp	x19, x20, [sp, #16]
    d280:	ldr	x19, [x0, #16]
    d284:	ldr	x20, [x2]
    d288:	mov	x0, x19
    d28c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d290:	cbnz	w0, d2a4 <gcc_cp_fe_context@@Base+0x302c>
    d294:	mov	x0, #0x0                   	// #0
    d298:	ldp	x19, x20, [sp, #16]
    d29c:	ldp	x29, x30, [sp], #48
    d2a0:	ret
    d2a4:	mov	x1, x20
    d2a8:	mov	x0, x19
    d2ac:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d2b0:	cbz	w0, d294 <gcc_cp_fe_context@@Base+0x301c>
    d2b4:	mov	x0, x19
    d2b8:	mov	x1, #0x0                   	// #0
    d2bc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d2c0:	cbz	w0, d294 <gcc_cp_fe_context@@Base+0x301c>
    d2c4:	mov	x0, x19
    d2c8:	mov	w1, #0x1                   	// #1
    d2cc:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d2d0:	cbz	w0, d294 <gcc_cp_fe_context@@Base+0x301c>
    d2d4:	add	x1, sp, #0x28
    d2d8:	mov	x0, x19
    d2dc:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d2e0:	cmp	w0, #0x0
    d2e4:	ldr	x1, [sp, #40]
    d2e8:	csel	x0, xzr, x1, eq  // eq = none
    d2ec:	b	d298 <gcc_cp_fe_context@@Base+0x3020>
    d2f0:	stp	x29, x30, [sp, #-48]!
    d2f4:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d2f8:	mov	w1, #0x51                  	// #81
    d2fc:	mov	x29, sp
    d300:	ldr	x2, [x2, #3328]
    d304:	stp	x19, x20, [sp, #16]
    d308:	ldr	x19, [x0, #16]
    d30c:	ldr	x20, [x2]
    d310:	mov	x0, x19
    d314:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d318:	cbnz	w0, d32c <gcc_cp_fe_context@@Base+0x30b4>
    d31c:	mov	x0, #0x0                   	// #0
    d320:	ldp	x19, x20, [sp, #16]
    d324:	ldp	x29, x30, [sp], #48
    d328:	ret
    d32c:	mov	x1, x20
    d330:	mov	x0, x19
    d334:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d338:	cbz	w0, d31c <gcc_cp_fe_context@@Base+0x30a4>
    d33c:	mov	x0, x19
    d340:	mov	x1, #0x0                   	// #0
    d344:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d348:	cbz	w0, d31c <gcc_cp_fe_context@@Base+0x30a4>
    d34c:	mov	x0, x19
    d350:	mov	w1, #0x1                   	// #1
    d354:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d358:	cbz	w0, d31c <gcc_cp_fe_context@@Base+0x30a4>
    d35c:	add	x1, sp, #0x28
    d360:	mov	x0, x19
    d364:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d368:	cmp	w0, #0x0
    d36c:	ldr	x1, [sp, #40]
    d370:	csel	x0, xzr, x1, eq  // eq = none
    d374:	b	d320 <gcc_cp_fe_context@@Base+0x30a8>
    d378:	stp	x29, x30, [sp, #-64]!
    d37c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d380:	mov	x29, sp
    d384:	ldr	x2, [x2, #3912]
    d388:	stp	x19, x20, [sp, #16]
    d38c:	mov	x19, x1
    d390:	ldr	x20, [x0, #16]
    d394:	mov	w1, #0x51                  	// #81
    d398:	str	x21, [sp, #32]
    d39c:	mov	x0, x20
    d3a0:	ldr	x21, [x2]
    d3a4:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d3a8:	cbnz	w0, d3c0 <gcc_cp_fe_context@@Base+0x3148>
    d3ac:	mov	x0, #0x0                   	// #0
    d3b0:	ldp	x19, x20, [sp, #16]
    d3b4:	ldr	x21, [sp, #32]
    d3b8:	ldp	x29, x30, [sp], #64
    d3bc:	ret
    d3c0:	mov	x1, x21
    d3c4:	mov	x0, x20
    d3c8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d3cc:	cbz	w0, d3ac <gcc_cp_fe_context@@Base+0x3134>
    d3d0:	mov	x0, x20
    d3d4:	mov	x1, #0x1                   	// #1
    d3d8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d3dc:	cbz	w0, d3ac <gcc_cp_fe_context@@Base+0x3134>
    d3e0:	mov	x1, x19
    d3e4:	mov	x0, x20
    d3e8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d3ec:	cbz	w0, d3ac <gcc_cp_fe_context@@Base+0x3134>
    d3f0:	mov	x0, x20
    d3f4:	mov	w1, #0x1                   	// #1
    d3f8:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d3fc:	cbz	w0, d3ac <gcc_cp_fe_context@@Base+0x3134>
    d400:	add	x1, sp, #0x38
    d404:	mov	x0, x20
    d408:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d40c:	cmp	w0, #0x0
    d410:	ldr	x1, [sp, #56]
    d414:	csel	x0, xzr, x1, eq  // eq = none
    d418:	b	d3b0 <gcc_cp_fe_context@@Base+0x3138>
    d41c:	nop
    d420:	stp	x29, x30, [sp, #-64]!
    d424:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d428:	mov	x29, sp
    d42c:	ldr	x2, [x2, #3984]
    d430:	stp	x19, x20, [sp, #16]
    d434:	mov	x19, x1
    d438:	ldr	x20, [x0, #16]
    d43c:	mov	w1, #0x51                  	// #81
    d440:	str	x21, [sp, #32]
    d444:	mov	x0, x20
    d448:	ldr	x21, [x2]
    d44c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d450:	cbnz	w0, d468 <gcc_cp_fe_context@@Base+0x31f0>
    d454:	mov	x0, #0x0                   	// #0
    d458:	ldp	x19, x20, [sp, #16]
    d45c:	ldr	x21, [sp, #32]
    d460:	ldp	x29, x30, [sp], #64
    d464:	ret
    d468:	mov	x1, x21
    d46c:	mov	x0, x20
    d470:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d474:	cbz	w0, d454 <gcc_cp_fe_context@@Base+0x31dc>
    d478:	mov	x0, x20
    d47c:	mov	x1, #0x1                   	// #1
    d480:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d484:	cbz	w0, d454 <gcc_cp_fe_context@@Base+0x31dc>
    d488:	mov	x1, x19
    d48c:	mov	x0, x20
    d490:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d494:	cbz	w0, d454 <gcc_cp_fe_context@@Base+0x31dc>
    d498:	mov	x0, x20
    d49c:	mov	w1, #0x1                   	// #1
    d4a0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d4a4:	cbz	w0, d454 <gcc_cp_fe_context@@Base+0x31dc>
    d4a8:	add	x1, sp, #0x38
    d4ac:	mov	x0, x20
    d4b0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d4b4:	cmp	w0, #0x0
    d4b8:	ldr	x1, [sp, #56]
    d4bc:	csel	x0, xzr, x1, eq  // eq = none
    d4c0:	b	d458 <gcc_cp_fe_context@@Base+0x31e0>
    d4c4:	nop
    d4c8:	stp	x29, x30, [sp, #-64]!
    d4cc:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d4d0:	mov	x29, sp
    d4d4:	ldr	x2, [x2, #3704]
    d4d8:	stp	x19, x20, [sp, #16]
    d4dc:	mov	x19, x1
    d4e0:	ldr	x20, [x0, #16]
    d4e4:	mov	w1, #0x51                  	// #81
    d4e8:	str	x21, [sp, #32]
    d4ec:	mov	x0, x20
    d4f0:	ldr	x21, [x2]
    d4f4:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d4f8:	cbnz	w0, d510 <gcc_cp_fe_context@@Base+0x3298>
    d4fc:	mov	x0, #0x0                   	// #0
    d500:	ldp	x19, x20, [sp, #16]
    d504:	ldr	x21, [sp, #32]
    d508:	ldp	x29, x30, [sp], #64
    d50c:	ret
    d510:	mov	x1, x21
    d514:	mov	x0, x20
    d518:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d51c:	cbz	w0, d4fc <gcc_cp_fe_context@@Base+0x3284>
    d520:	mov	x0, x20
    d524:	mov	x1, #0x1                   	// #1
    d528:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d52c:	cbz	w0, d4fc <gcc_cp_fe_context@@Base+0x3284>
    d530:	mov	x1, x19
    d534:	mov	x0, x20
    d538:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d53c:	cbz	w0, d4fc <gcc_cp_fe_context@@Base+0x3284>
    d540:	mov	x0, x20
    d544:	mov	w1, #0x1                   	// #1
    d548:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d54c:	cbz	w0, d4fc <gcc_cp_fe_context@@Base+0x3284>
    d550:	add	x1, sp, #0x38
    d554:	mov	x0, x20
    d558:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d55c:	cmp	w0, #0x0
    d560:	ldr	x1, [sp, #56]
    d564:	csel	x0, xzr, x1, eq  // eq = none
    d568:	b	d500 <gcc_cp_fe_context@@Base+0x3288>
    d56c:	nop
    d570:	stp	x29, x30, [sp, #-64]!
    d574:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d578:	mov	x29, sp
    d57c:	ldr	x2, [x2, #3176]
    d580:	stp	x19, x20, [sp, #16]
    d584:	mov	x19, x1
    d588:	ldr	x20, [x0, #16]
    d58c:	mov	w1, #0x51                  	// #81
    d590:	str	x21, [sp, #32]
    d594:	mov	x0, x20
    d598:	ldr	x21, [x2]
    d59c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d5a0:	cbnz	w0, d5b8 <gcc_cp_fe_context@@Base+0x3340>
    d5a4:	mov	x0, #0x0                   	// #0
    d5a8:	ldp	x19, x20, [sp, #16]
    d5ac:	ldr	x21, [sp, #32]
    d5b0:	ldp	x29, x30, [sp], #64
    d5b4:	ret
    d5b8:	mov	x1, x21
    d5bc:	mov	x0, x20
    d5c0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d5c4:	cbz	w0, d5a4 <gcc_cp_fe_context@@Base+0x332c>
    d5c8:	mov	x0, x20
    d5cc:	mov	x1, #0x1                   	// #1
    d5d0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d5d4:	cbz	w0, d5a4 <gcc_cp_fe_context@@Base+0x332c>
    d5d8:	mov	x1, x19
    d5dc:	mov	x0, x20
    d5e0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d5e4:	cbz	w0, d5a4 <gcc_cp_fe_context@@Base+0x332c>
    d5e8:	mov	x0, x20
    d5ec:	mov	w1, #0x1                   	// #1
    d5f0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d5f4:	cbz	w0, d5a4 <gcc_cp_fe_context@@Base+0x332c>
    d5f8:	add	x1, sp, #0x38
    d5fc:	mov	x0, x20
    d600:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d604:	cmp	w0, #0x0
    d608:	ldr	x1, [sp, #56]
    d60c:	csel	x0, xzr, x1, eq  // eq = none
    d610:	b	d5a8 <gcc_cp_fe_context@@Base+0x3330>
    d614:	nop
    d618:	stp	x29, x30, [sp, #-64]!
    d61c:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
    d620:	mov	x29, sp
    d624:	ldr	x2, [x2, #3552]
    d628:	stp	x19, x20, [sp, #16]
    d62c:	mov	x19, x1
    d630:	ldr	x20, [x0, #16]
    d634:	mov	w1, #0x51                  	// #81
    d638:	str	x21, [sp, #32]
    d63c:	mov	x0, x20
    d640:	ldr	x21, [x2]
    d644:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d648:	cbnz	w0, d660 <gcc_cp_fe_context@@Base+0x33e8>
    d64c:	mov	x0, #0x0                   	// #0
    d650:	ldp	x19, x20, [sp, #16]
    d654:	ldr	x21, [sp, #32]
    d658:	ldp	x29, x30, [sp], #64
    d65c:	ret
    d660:	mov	x1, x21
    d664:	mov	x0, x20
    d668:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d66c:	cbz	w0, d64c <gcc_cp_fe_context@@Base+0x33d4>
    d670:	mov	x0, x20
    d674:	mov	x1, #0x1                   	// #1
    d678:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d67c:	cbz	w0, d64c <gcc_cp_fe_context@@Base+0x33d4>
    d680:	mov	x1, x19
    d684:	mov	x0, x20
    d688:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d68c:	cbz	w0, d64c <gcc_cp_fe_context@@Base+0x33d4>
    d690:	mov	x0, x20
    d694:	mov	w1, #0x1                   	// #1
    d698:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d69c:	cbz	w0, d64c <gcc_cp_fe_context@@Base+0x33d4>
    d6a0:	add	x1, sp, #0x38
    d6a4:	mov	x0, x20
    d6a8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d6ac:	cmp	w0, #0x0
    d6b0:	ldr	x1, [sp, #56]
    d6b4:	csel	x0, xzr, x1, eq  // eq = none
    d6b8:	b	d650 <gcc_cp_fe_context@@Base+0x33d8>
    d6bc:	nop
    d6c0:	stp	x29, x30, [sp, #-80]!
    d6c4:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    d6c8:	mov	x29, sp
    d6cc:	ldr	x4, [x4, #3744]
    d6d0:	stp	x19, x20, [sp, #16]
    d6d4:	mov	x20, x3
    d6d8:	ldr	x19, [x0, #16]
    d6dc:	stp	x21, x22, [sp, #32]
    d6e0:	mov	x22, x1
    d6e4:	mov	x21, x2
    d6e8:	mov	x0, x19
    d6ec:	mov	w1, #0x51                  	// #81
    d6f0:	str	x23, [sp, #48]
    d6f4:	ldr	x23, [x4]
    d6f8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d6fc:	cbnz	w0, d718 <gcc_cp_fe_context@@Base+0x34a0>
    d700:	mov	x0, #0x0                   	// #0
    d704:	ldp	x19, x20, [sp, #16]
    d708:	ldp	x21, x22, [sp, #32]
    d70c:	ldr	x23, [sp, #48]
    d710:	ldp	x29, x30, [sp], #80
    d714:	ret
    d718:	mov	x1, x23
    d71c:	mov	x0, x19
    d720:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d724:	cbz	w0, d700 <gcc_cp_fe_context@@Base+0x3488>
    d728:	mov	x0, x19
    d72c:	mov	x1, #0x3                   	// #3
    d730:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d734:	cbz	w0, d700 <gcc_cp_fe_context@@Base+0x3488>
    d738:	mov	x1, x22
    d73c:	mov	x0, x19
    d740:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d744:	cbz	w0, d700 <gcc_cp_fe_context@@Base+0x3488>
    d748:	mov	x1, x21
    d74c:	mov	x0, x19
    d750:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d754:	cbz	w0, d700 <gcc_cp_fe_context@@Base+0x3488>
    d758:	cbz	x20, d7b4 <gcc_cp_fe_context@@Base+0x353c>
    d75c:	ldrsw	x21, [x20]
    d760:	mov	x0, x19
    d764:	mov	w1, #0x64                  	// #100
    d768:	mov	x2, x21
    d76c:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    d770:	cbz	w0, d700 <gcc_cp_fe_context@@Base+0x3488>
    d774:	ldr	x2, [x20, #8]
    d778:	lsl	x1, x21, #3
    d77c:	mov	x0, x19
    d780:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    d784:	cbz	w0, d700 <gcc_cp_fe_context@@Base+0x3488>
    d788:	mov	x0, x19
    d78c:	mov	w1, #0x1                   	// #1
    d790:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d794:	cbz	w0, d700 <gcc_cp_fe_context@@Base+0x3488>
    d798:	add	x1, sp, #0x48
    d79c:	mov	x0, x19
    d7a0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d7a4:	cmp	w0, #0x0
    d7a8:	ldr	x1, [sp, #72]
    d7ac:	csel	x0, xzr, x1, eq  // eq = none
    d7b0:	b	d704 <gcc_cp_fe_context@@Base+0x348c>
    d7b4:	mov	x0, x19
    d7b8:	mov	x2, #0xffffffffffffffff    	// #-1
    d7bc:	mov	w1, #0x64                  	// #100
    d7c0:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    d7c4:	cbnz	w0, d788 <gcc_cp_fe_context@@Base+0x3510>
    d7c8:	b	d700 <gcc_cp_fe_context@@Base+0x3488>
    d7cc:	nop
    d7d0:	stp	x29, x30, [sp, #-80]!
    d7d4:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    d7d8:	mov	x29, sp
    d7dc:	ldr	x4, [x4, #3544]
    d7e0:	stp	x19, x20, [sp, #16]
    d7e4:	mov	x20, x3
    d7e8:	ldr	x19, [x0, #16]
    d7ec:	stp	x21, x22, [sp, #32]
    d7f0:	mov	x22, x1
    d7f4:	mov	w21, w2
    d7f8:	mov	x0, x19
    d7fc:	mov	w1, #0x51                  	// #81
    d800:	str	x23, [sp, #48]
    d804:	ldr	x23, [x4]
    d808:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d80c:	cbnz	w0, d828 <gcc_cp_fe_context@@Base+0x35b0>
    d810:	mov	x0, #0x0                   	// #0
    d814:	ldp	x19, x20, [sp, #16]
    d818:	ldp	x21, x22, [sp, #32]
    d81c:	ldr	x23, [sp, #48]
    d820:	ldp	x29, x30, [sp], #80
    d824:	ret
    d828:	mov	x1, x23
    d82c:	mov	x0, x19
    d830:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d834:	cbz	w0, d810 <gcc_cp_fe_context@@Base+0x3598>
    d838:	mov	x0, x19
    d83c:	mov	x1, #0x3                   	// #3
    d840:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d844:	cbz	w0, d810 <gcc_cp_fe_context@@Base+0x3598>
    d848:	mov	x1, x22
    d84c:	mov	x0, x19
    d850:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d854:	cbz	w0, d810 <gcc_cp_fe_context@@Base+0x3598>
    d858:	sxtw	x1, w21
    d85c:	mov	x0, x19
    d860:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d864:	cbz	w0, d810 <gcc_cp_fe_context@@Base+0x3598>
    d868:	cbz	x20, d8c4 <gcc_cp_fe_context@@Base+0x364c>
    d86c:	ldrsw	x21, [x20]
    d870:	mov	x0, x19
    d874:	mov	w1, #0x64                  	// #100
    d878:	mov	x2, x21
    d87c:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    d880:	cbz	w0, d810 <gcc_cp_fe_context@@Base+0x3598>
    d884:	ldr	x2, [x20, #8]
    d888:	lsl	x1, x21, #3
    d88c:	mov	x0, x19
    d890:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    d894:	cbz	w0, d810 <gcc_cp_fe_context@@Base+0x3598>
    d898:	mov	x0, x19
    d89c:	mov	w1, #0x1                   	// #1
    d8a0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d8a4:	cbz	w0, d810 <gcc_cp_fe_context@@Base+0x3598>
    d8a8:	add	x1, sp, #0x48
    d8ac:	mov	x0, x19
    d8b0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d8b4:	cmp	w0, #0x0
    d8b8:	ldr	x1, [sp, #72]
    d8bc:	csel	x0, xzr, x1, eq  // eq = none
    d8c0:	b	d814 <gcc_cp_fe_context@@Base+0x359c>
    d8c4:	mov	x0, x19
    d8c8:	mov	x2, #0xffffffffffffffff    	// #-1
    d8cc:	mov	w1, #0x64                  	// #100
    d8d0:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    d8d4:	cbnz	w0, d898 <gcc_cp_fe_context@@Base+0x3620>
    d8d8:	b	d810 <gcc_cp_fe_context@@Base+0x3598>
    d8dc:	nop
    d8e0:	stp	x29, x30, [sp, #-96]!
    d8e4:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    d8e8:	mov	x29, sp
    d8ec:	ldr	x6, [x6, #3464]
    d8f0:	stp	x21, x22, [sp, #32]
    d8f4:	mov	w22, w5
    d8f8:	ldr	x21, [x0, #16]
    d8fc:	stp	x19, x20, [sp, #16]
    d900:	mov	x19, x1
    d904:	mov	w20, w2
    d908:	mov	x0, x21
    d90c:	mov	w1, #0x51                  	// #81
    d910:	stp	x23, x24, [sp, #48]
    d914:	mov	x24, x3
    d918:	mov	x23, x4
    d91c:	str	x25, [sp, #64]
    d920:	ldr	x25, [x6]
    d924:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    d928:	cbnz	w0, d948 <gcc_cp_fe_context@@Base+0x36d0>
    d92c:	mov	x0, #0x0                   	// #0
    d930:	ldp	x19, x20, [sp, #16]
    d934:	ldp	x21, x22, [sp, #32]
    d938:	ldp	x23, x24, [sp, #48]
    d93c:	ldr	x25, [sp, #64]
    d940:	ldp	x29, x30, [sp], #96
    d944:	ret
    d948:	mov	x1, x25
    d94c:	mov	x0, x21
    d950:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d954:	cbz	w0, d92c <gcc_cp_fe_context@@Base+0x36b4>
    d958:	mov	x0, x21
    d95c:	mov	x1, #0x5                   	// #5
    d960:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d964:	cbz	w0, d92c <gcc_cp_fe_context@@Base+0x36b4>
    d968:	mov	x1, x19
    d96c:	mov	x0, x21
    d970:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d974:	cbz	w0, d92c <gcc_cp_fe_context@@Base+0x36b4>
    d978:	sxtw	x1, w20
    d97c:	mov	x0, x21
    d980:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d984:	cbz	w0, d92c <gcc_cp_fe_context@@Base+0x36b4>
    d988:	mov	x1, x24
    d98c:	mov	x0, x21
    d990:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d994:	cbz	w0, d92c <gcc_cp_fe_context@@Base+0x36b4>
    d998:	mov	x1, x23
    d99c:	mov	x0, x21
    d9a0:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    d9a4:	cbz	w0, d92c <gcc_cp_fe_context@@Base+0x36b4>
    d9a8:	mov	w1, w22
    d9ac:	mov	x0, x21
    d9b0:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    d9b4:	cbz	w0, d92c <gcc_cp_fe_context@@Base+0x36b4>
    d9b8:	mov	x0, x21
    d9bc:	mov	w1, #0x1                   	// #1
    d9c0:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    d9c4:	cbz	w0, d92c <gcc_cp_fe_context@@Base+0x36b4>
    d9c8:	add	x1, sp, #0x58
    d9cc:	mov	x0, x21
    d9d0:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    d9d4:	cmp	w0, #0x0
    d9d8:	ldr	x1, [sp, #88]
    d9dc:	csel	x0, xzr, x1, eq  // eq = none
    d9e0:	b	d930 <gcc_cp_fe_context@@Base+0x36b8>
    d9e4:	nop
    d9e8:	stp	x29, x30, [sp, #-96]!
    d9ec:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    d9f0:	mov	x29, sp
    d9f4:	ldr	x6, [x6, #3232]
    d9f8:	stp	x21, x22, [sp, #32]
    d9fc:	mov	w22, w5
    da00:	ldr	x21, [x0, #16]
    da04:	stp	x19, x20, [sp, #16]
    da08:	mov	x19, x1
    da0c:	mov	x20, x2
    da10:	mov	x0, x21
    da14:	mov	w1, #0x51                  	// #81
    da18:	stp	x23, x24, [sp, #48]
    da1c:	mov	x24, x3
    da20:	mov	x23, x4
    da24:	str	x25, [sp, #64]
    da28:	ldr	x25, [x6]
    da2c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    da30:	cbnz	w0, da50 <gcc_cp_fe_context@@Base+0x37d8>
    da34:	mov	x0, #0x0                   	// #0
    da38:	ldp	x19, x20, [sp, #16]
    da3c:	ldp	x21, x22, [sp, #32]
    da40:	ldp	x23, x24, [sp, #48]
    da44:	ldr	x25, [sp, #64]
    da48:	ldp	x29, x30, [sp], #96
    da4c:	ret
    da50:	mov	x1, x25
    da54:	mov	x0, x21
    da58:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    da5c:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x37bc>
    da60:	mov	x0, x21
    da64:	mov	x1, #0x5                   	// #5
    da68:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    da6c:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x37bc>
    da70:	mov	x1, x19
    da74:	mov	x0, x21
    da78:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    da7c:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x37bc>
    da80:	mov	x1, x20
    da84:	mov	x0, x21
    da88:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    da8c:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x37bc>
    da90:	mov	x1, x24
    da94:	mov	x0, x21
    da98:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    da9c:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x37bc>
    daa0:	mov	x1, x23
    daa4:	mov	x0, x21
    daa8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    daac:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x37bc>
    dab0:	mov	w1, w22
    dab4:	mov	x0, x21
    dab8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    dabc:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x37bc>
    dac0:	mov	x0, x21
    dac4:	mov	w1, #0x1                   	// #1
    dac8:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    dacc:	cbz	w0, da34 <gcc_cp_fe_context@@Base+0x37bc>
    dad0:	add	x1, sp, #0x58
    dad4:	mov	x0, x21
    dad8:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    dadc:	cmp	w0, #0x0
    dae0:	ldr	x1, [sp, #88]
    dae4:	csel	x0, xzr, x1, eq  // eq = none
    dae8:	b	da38 <gcc_cp_fe_context@@Base+0x37c0>
    daec:	nop
    daf0:	stp	x29, x30, [sp, #-80]!
    daf4:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
    daf8:	mov	x29, sp
    dafc:	ldr	x5, [x5, #3680]
    db00:	stp	x19, x20, [sp, #16]
    db04:	mov	x20, x4
    db08:	ldr	x19, [x0, #16]
    db0c:	stp	x21, x22, [sp, #32]
    db10:	mov	x22, x2
    db14:	mov	x21, x3
    db18:	mov	x0, x19
    db1c:	stp	x23, x24, [sp, #48]
    db20:	mov	x23, x1
    db24:	mov	w1, #0x51                  	// #81
    db28:	ldr	x24, [x5]
    db2c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    db30:	cbnz	w0, db4c <gcc_cp_fe_context@@Base+0x38d4>
    db34:	mov	x0, #0x0                   	// #0
    db38:	ldp	x19, x20, [sp, #16]
    db3c:	ldp	x21, x22, [sp, #32]
    db40:	ldp	x23, x24, [sp, #48]
    db44:	ldp	x29, x30, [sp], #80
    db48:	ret
    db4c:	mov	x1, x24
    db50:	mov	x0, x19
    db54:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    db58:	cbz	w0, db34 <gcc_cp_fe_context@@Base+0x38bc>
    db5c:	mov	x0, x19
    db60:	mov	x1, #0x4                   	// #4
    db64:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    db68:	cbz	w0, db34 <gcc_cp_fe_context@@Base+0x38bc>
    db6c:	mov	x1, x23
    db70:	mov	x0, x19
    db74:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    db78:	cbz	w0, db34 <gcc_cp_fe_context@@Base+0x38bc>
    db7c:	cbz	x22, dc18 <gcc_cp_fe_context@@Base+0x39a0>
    db80:	ldrsw	x23, [x22]
    db84:	mov	x0, x19
    db88:	mov	w1, #0x64                  	// #100
    db8c:	mov	x2, x23
    db90:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    db94:	cbz	w0, db34 <gcc_cp_fe_context@@Base+0x38bc>
    db98:	ldr	x2, [x22, #8]
    db9c:	lsl	x1, x23, #3
    dba0:	mov	x0, x19
    dba4:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    dba8:	cbz	w0, db34 <gcc_cp_fe_context@@Base+0x38bc>
    dbac:	mov	x1, x21
    dbb0:	mov	x0, x19
    dbb4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    dbb8:	cbz	w0, db34 <gcc_cp_fe_context@@Base+0x38bc>
    dbbc:	cbz	x20, dc30 <gcc_cp_fe_context@@Base+0x39b8>
    dbc0:	ldrsw	x21, [x20]
    dbc4:	mov	x0, x19
    dbc8:	mov	w1, #0x64                  	// #100
    dbcc:	mov	x2, x21
    dbd0:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    dbd4:	cbz	w0, db34 <gcc_cp_fe_context@@Base+0x38bc>
    dbd8:	ldr	x2, [x20, #8]
    dbdc:	lsl	x1, x21, #3
    dbe0:	mov	x0, x19
    dbe4:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    dbe8:	cbz	w0, db34 <gcc_cp_fe_context@@Base+0x38bc>
    dbec:	mov	x0, x19
    dbf0:	mov	w1, #0x1                   	// #1
    dbf4:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    dbf8:	cbz	w0, db34 <gcc_cp_fe_context@@Base+0x38bc>
    dbfc:	add	x1, sp, #0x48
    dc00:	mov	x0, x19
    dc04:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    dc08:	cmp	w0, #0x0
    dc0c:	ldr	x1, [sp, #72]
    dc10:	csel	x0, xzr, x1, eq  // eq = none
    dc14:	b	db38 <gcc_cp_fe_context@@Base+0x38c0>
    dc18:	mov	x0, x19
    dc1c:	mov	x2, #0xffffffffffffffff    	// #-1
    dc20:	mov	w1, #0x64                  	// #100
    dc24:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    dc28:	cbnz	w0, dbac <gcc_cp_fe_context@@Base+0x3934>
    dc2c:	b	db34 <gcc_cp_fe_context@@Base+0x38bc>
    dc30:	mov	x0, x19
    dc34:	mov	x2, #0xffffffffffffffff    	// #-1
    dc38:	mov	w1, #0x64                  	// #100
    dc3c:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    dc40:	cbnz	w0, dbec <gcc_cp_fe_context@@Base+0x3974>
    dc44:	b	db34 <gcc_cp_fe_context@@Base+0x38bc>
    dc48:	stp	x29, x30, [sp, #-64]!
    dc4c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    dc50:	mov	x29, sp
    dc54:	ldr	x3, [x3, #3824]
    dc58:	stp	x21, x22, [sp, #32]
    dc5c:	ldr	x21, [x0, #16]
    dc60:	stp	x19, x20, [sp, #16]
    dc64:	mov	x19, x1
    dc68:	mov	x20, x2
    dc6c:	mov	x0, x21
    dc70:	mov	w1, #0x51                  	// #81
    dc74:	ldr	x22, [x3]
    dc78:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    dc7c:	cbnz	w0, dc94 <gcc_cp_fe_context@@Base+0x3a1c>
    dc80:	mov	x0, #0x0                   	// #0
    dc84:	ldp	x19, x20, [sp, #16]
    dc88:	ldp	x21, x22, [sp, #32]
    dc8c:	ldp	x29, x30, [sp], #64
    dc90:	ret
    dc94:	mov	x1, x22
    dc98:	mov	x0, x21
    dc9c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    dca0:	cbz	w0, dc80 <gcc_cp_fe_context@@Base+0x3a08>
    dca4:	mov	x0, x21
    dca8:	mov	x1, #0x2                   	// #2
    dcac:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    dcb0:	cbz	w0, dc80 <gcc_cp_fe_context@@Base+0x3a08>
    dcb4:	mov	x1, x19
    dcb8:	mov	x0, x21
    dcbc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    dcc0:	cbz	w0, dc80 <gcc_cp_fe_context@@Base+0x3a08>
    dcc4:	mov	x1, x20
    dcc8:	mov	x0, x21
    dccc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    dcd0:	cbz	w0, dc80 <gcc_cp_fe_context@@Base+0x3a08>
    dcd4:	mov	x0, x21
    dcd8:	mov	w1, #0x1                   	// #1
    dcdc:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    dce0:	cbz	w0, dc80 <gcc_cp_fe_context@@Base+0x3a08>
    dce4:	add	x1, sp, #0x38
    dce8:	mov	x0, x21
    dcec:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    dcf0:	cmp	w0, #0x0
    dcf4:	ldr	x1, [sp, #56]
    dcf8:	csel	x0, xzr, x1, eq  // eq = none
    dcfc:	b	dc84 <gcc_cp_fe_context@@Base+0x3a0c>
    dd00:	stp	x29, x30, [sp, #-64]!
    dd04:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    dd08:	mov	x29, sp
    dd0c:	ldr	x3, [x3, #3896]
    dd10:	stp	x21, x22, [sp, #32]
    dd14:	ldr	x21, [x0, #16]
    dd18:	stp	x19, x20, [sp, #16]
    dd1c:	mov	x19, x1
    dd20:	mov	x20, x2
    dd24:	mov	x0, x21
    dd28:	mov	w1, #0x51                  	// #81
    dd2c:	ldr	x22, [x3]
    dd30:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    dd34:	cbnz	w0, dd4c <gcc_cp_fe_context@@Base+0x3ad4>
    dd38:	mov	x0, #0x0                   	// #0
    dd3c:	ldp	x19, x20, [sp, #16]
    dd40:	ldp	x21, x22, [sp, #32]
    dd44:	ldp	x29, x30, [sp], #64
    dd48:	ret
    dd4c:	mov	x1, x22
    dd50:	mov	x0, x21
    dd54:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    dd58:	cbz	w0, dd38 <gcc_cp_fe_context@@Base+0x3ac0>
    dd5c:	mov	x0, x21
    dd60:	mov	x1, #0x2                   	// #2
    dd64:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    dd68:	cbz	w0, dd38 <gcc_cp_fe_context@@Base+0x3ac0>
    dd6c:	mov	x1, x19
    dd70:	mov	x0, x21
    dd74:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    dd78:	cbz	w0, dd38 <gcc_cp_fe_context@@Base+0x3ac0>
    dd7c:	mov	x1, x20
    dd80:	mov	x0, x21
    dd84:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    dd88:	cbz	w0, dd38 <gcc_cp_fe_context@@Base+0x3ac0>
    dd8c:	mov	x0, x21
    dd90:	mov	w1, #0x1                   	// #1
    dd94:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    dd98:	cbz	w0, dd38 <gcc_cp_fe_context@@Base+0x3ac0>
    dd9c:	add	x1, sp, #0x38
    dda0:	mov	x0, x21
    dda4:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    dda8:	cmp	w0, #0x0
    ddac:	ldr	x1, [sp, #56]
    ddb0:	csel	x0, xzr, x1, eq  // eq = none
    ddb4:	b	dd3c <gcc_cp_fe_context@@Base+0x3ac4>
    ddb8:	stp	x29, x30, [sp, #-64]!
    ddbc:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    ddc0:	mov	x29, sp
    ddc4:	ldr	x3, [x3, #3472]
    ddc8:	stp	x21, x22, [sp, #32]
    ddcc:	ldr	x21, [x0, #16]
    ddd0:	stp	x19, x20, [sp, #16]
    ddd4:	mov	x19, x1
    ddd8:	mov	x20, x2
    dddc:	mov	x0, x21
    dde0:	mov	w1, #0x51                  	// #81
    dde4:	ldr	x22, [x3]
    dde8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    ddec:	cbnz	w0, de04 <gcc_cp_fe_context@@Base+0x3b8c>
    ddf0:	mov	x0, #0x0                   	// #0
    ddf4:	ldp	x19, x20, [sp, #16]
    ddf8:	ldp	x21, x22, [sp, #32]
    ddfc:	ldp	x29, x30, [sp], #64
    de00:	ret
    de04:	mov	x1, x22
    de08:	mov	x0, x21
    de0c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    de10:	cbz	w0, ddf0 <gcc_cp_fe_context@@Base+0x3b78>
    de14:	mov	x0, x21
    de18:	mov	x1, #0x2                   	// #2
    de1c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    de20:	cbz	w0, ddf0 <gcc_cp_fe_context@@Base+0x3b78>
    de24:	mov	x1, x19
    de28:	mov	x0, x21
    de2c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    de30:	cbz	w0, ddf0 <gcc_cp_fe_context@@Base+0x3b78>
    de34:	mov	x1, x20
    de38:	mov	x0, x21
    de3c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    de40:	cbz	w0, ddf0 <gcc_cp_fe_context@@Base+0x3b78>
    de44:	mov	x0, x21
    de48:	mov	w1, #0x1                   	// #1
    de4c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    de50:	cbz	w0, ddf0 <gcc_cp_fe_context@@Base+0x3b78>
    de54:	add	x1, sp, #0x38
    de58:	mov	x0, x21
    de5c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    de60:	cmp	w0, #0x0
    de64:	ldr	x1, [sp, #56]
    de68:	csel	x0, xzr, x1, eq  // eq = none
    de6c:	b	ddf4 <gcc_cp_fe_context@@Base+0x3b7c>
    de70:	stp	x29, x30, [sp, #-64]!
    de74:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    de78:	mov	x29, sp
    de7c:	ldr	x3, [x3, #3712]
    de80:	stp	x21, x22, [sp, #32]
    de84:	ldr	x21, [x0, #16]
    de88:	stp	x19, x20, [sp, #16]
    de8c:	mov	x19, x1
    de90:	mov	w20, w2
    de94:	mov	x0, x21
    de98:	mov	w1, #0x51                  	// #81
    de9c:	ldr	x22, [x3]
    dea0:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    dea4:	cbnz	w0, debc <gcc_cp_fe_context@@Base+0x3c44>
    dea8:	mov	x0, #0x0                   	// #0
    deac:	ldp	x19, x20, [sp, #16]
    deb0:	ldp	x21, x22, [sp, #32]
    deb4:	ldp	x29, x30, [sp], #64
    deb8:	ret
    debc:	mov	x1, x22
    dec0:	mov	x0, x21
    dec4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    dec8:	cbz	w0, dea8 <gcc_cp_fe_context@@Base+0x3c30>
    decc:	mov	x0, x21
    ded0:	mov	x1, #0x2                   	// #2
    ded4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ded8:	cbz	w0, dea8 <gcc_cp_fe_context@@Base+0x3c30>
    dedc:	mov	x1, x19
    dee0:	mov	x0, x21
    dee4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    dee8:	cbz	w0, dea8 <gcc_cp_fe_context@@Base+0x3c30>
    deec:	sxtw	x1, w20
    def0:	mov	x0, x21
    def4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    def8:	cbz	w0, dea8 <gcc_cp_fe_context@@Base+0x3c30>
    defc:	mov	x0, x21
    df00:	mov	w1, #0x1                   	// #1
    df04:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    df08:	cbz	w0, dea8 <gcc_cp_fe_context@@Base+0x3c30>
    df0c:	add	x1, sp, #0x38
    df10:	mov	x0, x21
    df14:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    df18:	cmp	w0, #0x0
    df1c:	ldr	x1, [sp, #56]
    df20:	csel	x0, xzr, x1, eq  // eq = none
    df24:	b	deac <gcc_cp_fe_context@@Base+0x3c34>
    df28:	stp	x29, x30, [sp, #-64]!
    df2c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    df30:	mov	x29, sp
    df34:	ldr	x3, [x3, #3280]
    df38:	stp	x21, x22, [sp, #32]
    df3c:	ldr	x21, [x0, #16]
    df40:	stp	x19, x20, [sp, #16]
    df44:	mov	x19, x1
    df48:	mov	x20, x2
    df4c:	mov	x0, x21
    df50:	mov	w1, #0x51                  	// #81
    df54:	ldr	x22, [x3]
    df58:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    df5c:	cbnz	w0, df74 <gcc_cp_fe_context@@Base+0x3cfc>
    df60:	mov	x0, #0x0                   	// #0
    df64:	ldp	x19, x20, [sp, #16]
    df68:	ldp	x21, x22, [sp, #32]
    df6c:	ldp	x29, x30, [sp], #64
    df70:	ret
    df74:	mov	x1, x22
    df78:	mov	x0, x21
    df7c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    df80:	cbz	w0, df60 <gcc_cp_fe_context@@Base+0x3ce8>
    df84:	mov	x0, x21
    df88:	mov	x1, #0x2                   	// #2
    df8c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    df90:	cbz	w0, df60 <gcc_cp_fe_context@@Base+0x3ce8>
    df94:	mov	x1, x19
    df98:	mov	x0, x21
    df9c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    dfa0:	cbz	w0, df60 <gcc_cp_fe_context@@Base+0x3ce8>
    dfa4:	mov	x1, x20
    dfa8:	mov	x0, x21
    dfac:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    dfb0:	cbz	w0, df60 <gcc_cp_fe_context@@Base+0x3ce8>
    dfb4:	mov	x0, x21
    dfb8:	mov	w1, #0x1                   	// #1
    dfbc:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    dfc0:	cbz	w0, df60 <gcc_cp_fe_context@@Base+0x3ce8>
    dfc4:	add	x1, sp, #0x38
    dfc8:	mov	x0, x21
    dfcc:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    dfd0:	cmp	w0, #0x0
    dfd4:	ldr	x1, [sp, #56]
    dfd8:	csel	x0, xzr, x1, eq  // eq = none
    dfdc:	b	df64 <gcc_cp_fe_context@@Base+0x3cec>
    dfe0:	stp	x29, x30, [sp, #-64]!
    dfe4:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    dfe8:	mov	x29, sp
    dfec:	ldr	x3, [x3, #3272]
    dff0:	stp	x21, x22, [sp, #32]
    dff4:	ldr	x21, [x0, #16]
    dff8:	stp	x19, x20, [sp, #16]
    dffc:	mov	x19, x1
    e000:	mov	x20, x2
    e004:	mov	x0, x21
    e008:	mov	w1, #0x51                  	// #81
    e00c:	ldr	x22, [x3]
    e010:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e014:	cbnz	w0, e02c <gcc_cp_fe_context@@Base+0x3db4>
    e018:	mov	x0, #0x0                   	// #0
    e01c:	ldp	x19, x20, [sp, #16]
    e020:	ldp	x21, x22, [sp, #32]
    e024:	ldp	x29, x30, [sp], #64
    e028:	ret
    e02c:	mov	x1, x22
    e030:	mov	x0, x21
    e034:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e038:	cbz	w0, e018 <gcc_cp_fe_context@@Base+0x3da0>
    e03c:	mov	x0, x21
    e040:	mov	x1, #0x2                   	// #2
    e044:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e048:	cbz	w0, e018 <gcc_cp_fe_context@@Base+0x3da0>
    e04c:	mov	x1, x19
    e050:	mov	x0, x21
    e054:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e058:	cbz	w0, e018 <gcc_cp_fe_context@@Base+0x3da0>
    e05c:	mov	x1, x20
    e060:	mov	x0, x21
    e064:	bl	f440 <gcc_cp_fe_context@@Base+0x51c8>
    e068:	cbz	w0, e018 <gcc_cp_fe_context@@Base+0x3da0>
    e06c:	mov	x0, x21
    e070:	mov	w1, #0x1                   	// #1
    e074:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e078:	cbz	w0, e018 <gcc_cp_fe_context@@Base+0x3da0>
    e07c:	add	x1, sp, #0x38
    e080:	mov	x0, x21
    e084:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e088:	cmp	w0, #0x0
    e08c:	ldr	x1, [sp, #56]
    e090:	csel	x0, xzr, x1, eq  // eq = none
    e094:	b	e01c <gcc_cp_fe_context@@Base+0x3da4>
    e098:	stp	x29, x30, [sp, #-64]!
    e09c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    e0a0:	mov	x29, sp
    e0a4:	ldr	x3, [x3, #3312]
    e0a8:	stp	x21, x22, [sp, #32]
    e0ac:	ldr	x21, [x0, #16]
    e0b0:	stp	x19, x20, [sp, #16]
    e0b4:	mov	x19, x1
    e0b8:	mov	w20, w2
    e0bc:	mov	x0, x21
    e0c0:	mov	w1, #0x51                  	// #81
    e0c4:	ldr	x22, [x3]
    e0c8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e0cc:	cbnz	w0, e0e4 <gcc_cp_fe_context@@Base+0x3e6c>
    e0d0:	mov	x0, #0x0                   	// #0
    e0d4:	ldp	x19, x20, [sp, #16]
    e0d8:	ldp	x21, x22, [sp, #32]
    e0dc:	ldp	x29, x30, [sp], #64
    e0e0:	ret
    e0e4:	mov	x1, x22
    e0e8:	mov	x0, x21
    e0ec:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e0f0:	cbz	w0, e0d0 <gcc_cp_fe_context@@Base+0x3e58>
    e0f4:	mov	x0, x21
    e0f8:	mov	x1, #0x2                   	// #2
    e0fc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e100:	cbz	w0, e0d0 <gcc_cp_fe_context@@Base+0x3e58>
    e104:	mov	x1, x19
    e108:	mov	x0, x21
    e10c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e110:	cbz	w0, e0d0 <gcc_cp_fe_context@@Base+0x3e58>
    e114:	mov	w1, w20
    e118:	mov	x0, x21
    e11c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e120:	cbz	w0, e0d0 <gcc_cp_fe_context@@Base+0x3e58>
    e124:	mov	x0, x21
    e128:	mov	w1, #0x1                   	// #1
    e12c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e130:	cbz	w0, e0d0 <gcc_cp_fe_context@@Base+0x3e58>
    e134:	add	x1, sp, #0x38
    e138:	mov	x0, x21
    e13c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e140:	cmp	w0, #0x0
    e144:	ldr	x1, [sp, #56]
    e148:	csel	x0, xzr, x1, eq  // eq = none
    e14c:	b	e0d4 <gcc_cp_fe_context@@Base+0x3e5c>
    e150:	stp	x29, x30, [sp, #-64]!
    e154:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    e158:	mov	x29, sp
    e15c:	ldr	x3, [x3, #4016]
    e160:	stp	x21, x22, [sp, #32]
    e164:	ldr	x21, [x0, #16]
    e168:	stp	x19, x20, [sp, #16]
    e16c:	mov	x19, x1
    e170:	mov	x20, x2
    e174:	mov	x0, x21
    e178:	mov	w1, #0x51                  	// #81
    e17c:	ldr	x22, [x3]
    e180:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e184:	cbnz	w0, e19c <gcc_cp_fe_context@@Base+0x3f24>
    e188:	mov	x0, #0x0                   	// #0
    e18c:	ldp	x19, x20, [sp, #16]
    e190:	ldp	x21, x22, [sp, #32]
    e194:	ldp	x29, x30, [sp], #64
    e198:	ret
    e19c:	mov	x1, x22
    e1a0:	mov	x0, x21
    e1a4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e1a8:	cbz	w0, e188 <gcc_cp_fe_context@@Base+0x3f10>
    e1ac:	mov	x0, x21
    e1b0:	mov	x1, #0x2                   	// #2
    e1b4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e1b8:	cbz	w0, e188 <gcc_cp_fe_context@@Base+0x3f10>
    e1bc:	mov	x1, x19
    e1c0:	mov	x0, x21
    e1c4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e1c8:	cbz	w0, e188 <gcc_cp_fe_context@@Base+0x3f10>
    e1cc:	mov	x1, x20
    e1d0:	mov	x0, x21
    e1d4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e1d8:	cbz	w0, e188 <gcc_cp_fe_context@@Base+0x3f10>
    e1dc:	mov	x0, x21
    e1e0:	mov	w1, #0x1                   	// #1
    e1e4:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e1e8:	cbz	w0, e188 <gcc_cp_fe_context@@Base+0x3f10>
    e1ec:	add	x1, sp, #0x38
    e1f0:	mov	x0, x21
    e1f4:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e1f8:	cmp	w0, #0x0
    e1fc:	ldr	x1, [sp, #56]
    e200:	csel	x0, xzr, x1, eq  // eq = none
    e204:	b	e18c <gcc_cp_fe_context@@Base+0x3f14>
    e208:	stp	x29, x30, [sp, #-64]!
    e20c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    e210:	mov	x29, sp
    e214:	ldr	x3, [x3, #3792]
    e218:	stp	x21, x22, [sp, #32]
    e21c:	ldr	x21, [x0, #16]
    e220:	stp	x19, x20, [sp, #16]
    e224:	mov	x19, x1
    e228:	mov	w20, w2
    e22c:	mov	x0, x21
    e230:	mov	w1, #0x51                  	// #81
    e234:	ldr	x22, [x3]
    e238:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e23c:	cbnz	w0, e254 <gcc_cp_fe_context@@Base+0x3fdc>
    e240:	mov	x0, #0x0                   	// #0
    e244:	ldp	x19, x20, [sp, #16]
    e248:	ldp	x21, x22, [sp, #32]
    e24c:	ldp	x29, x30, [sp], #64
    e250:	ret
    e254:	mov	x1, x22
    e258:	mov	x0, x21
    e25c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e260:	cbz	w0, e240 <gcc_cp_fe_context@@Base+0x3fc8>
    e264:	mov	x0, x21
    e268:	mov	x1, #0x2                   	// #2
    e26c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e270:	cbz	w0, e240 <gcc_cp_fe_context@@Base+0x3fc8>
    e274:	mov	x1, x19
    e278:	mov	x0, x21
    e27c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e280:	cbz	w0, e240 <gcc_cp_fe_context@@Base+0x3fc8>
    e284:	sxtw	x1, w20
    e288:	mov	x0, x21
    e28c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e290:	cbz	w0, e240 <gcc_cp_fe_context@@Base+0x3fc8>
    e294:	mov	x0, x21
    e298:	mov	w1, #0x1                   	// #1
    e29c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e2a0:	cbz	w0, e240 <gcc_cp_fe_context@@Base+0x3fc8>
    e2a4:	add	x1, sp, #0x38
    e2a8:	mov	x0, x21
    e2ac:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e2b0:	cmp	w0, #0x0
    e2b4:	ldr	x1, [sp, #56]
    e2b8:	csel	x0, xzr, x1, eq  // eq = none
    e2bc:	b	e244 <gcc_cp_fe_context@@Base+0x3fcc>
    e2c0:	stp	x29, x30, [sp, #-64]!
    e2c4:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    e2c8:	mov	x29, sp
    e2cc:	ldr	x3, [x3, #4008]
    e2d0:	stp	x21, x22, [sp, #32]
    e2d4:	ldr	x21, [x0, #16]
    e2d8:	stp	x19, x20, [sp, #16]
    e2dc:	mov	x19, x1
    e2e0:	mov	w20, w2
    e2e4:	mov	x0, x21
    e2e8:	mov	w1, #0x51                  	// #81
    e2ec:	ldr	x22, [x3]
    e2f0:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e2f4:	cbnz	w0, e30c <gcc_cp_fe_context@@Base+0x4094>
    e2f8:	mov	x0, #0x0                   	// #0
    e2fc:	ldp	x19, x20, [sp, #16]
    e300:	ldp	x21, x22, [sp, #32]
    e304:	ldp	x29, x30, [sp], #64
    e308:	ret
    e30c:	mov	x1, x22
    e310:	mov	x0, x21
    e314:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e318:	cbz	w0, e2f8 <gcc_cp_fe_context@@Base+0x4080>
    e31c:	mov	x0, x21
    e320:	mov	x1, #0x2                   	// #2
    e324:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e328:	cbz	w0, e2f8 <gcc_cp_fe_context@@Base+0x4080>
    e32c:	mov	x1, x19
    e330:	mov	x0, x21
    e334:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e338:	cbz	w0, e2f8 <gcc_cp_fe_context@@Base+0x4080>
    e33c:	mov	w1, w20
    e340:	mov	x0, x21
    e344:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e348:	cbz	w0, e2f8 <gcc_cp_fe_context@@Base+0x4080>
    e34c:	mov	x0, x21
    e350:	mov	w1, #0x1                   	// #1
    e354:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e358:	cbz	w0, e2f8 <gcc_cp_fe_context@@Base+0x4080>
    e35c:	add	x1, sp, #0x38
    e360:	mov	x0, x21
    e364:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e368:	cmp	w0, #0x0
    e36c:	ldr	x1, [sp, #56]
    e370:	csel	x0, xzr, x1, eq  // eq = none
    e374:	b	e2fc <gcc_cp_fe_context@@Base+0x4084>
    e378:	stp	x29, x30, [sp, #-64]!
    e37c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    e380:	mov	x29, sp
    e384:	ldr	x3, [x3, #3416]
    e388:	stp	x21, x22, [sp, #32]
    e38c:	ldr	x21, [x0, #16]
    e390:	stp	x19, x20, [sp, #16]
    e394:	mov	x19, x1
    e398:	mov	w20, w2
    e39c:	mov	x0, x21
    e3a0:	mov	w1, #0x51                  	// #81
    e3a4:	ldr	x22, [x3]
    e3a8:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e3ac:	cbnz	w0, e3c4 <gcc_cp_fe_context@@Base+0x414c>
    e3b0:	mov	x0, #0x0                   	// #0
    e3b4:	ldp	x19, x20, [sp, #16]
    e3b8:	ldp	x21, x22, [sp, #32]
    e3bc:	ldp	x29, x30, [sp], #64
    e3c0:	ret
    e3c4:	mov	x1, x22
    e3c8:	mov	x0, x21
    e3cc:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e3d0:	cbz	w0, e3b0 <gcc_cp_fe_context@@Base+0x4138>
    e3d4:	mov	x0, x21
    e3d8:	mov	x1, #0x2                   	// #2
    e3dc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e3e0:	cbz	w0, e3b0 <gcc_cp_fe_context@@Base+0x4138>
    e3e4:	mov	x1, x19
    e3e8:	mov	x0, x21
    e3ec:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e3f0:	cbz	w0, e3b0 <gcc_cp_fe_context@@Base+0x4138>
    e3f4:	sxtw	x1, w20
    e3f8:	mov	x0, x21
    e3fc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e400:	cbz	w0, e3b0 <gcc_cp_fe_context@@Base+0x4138>
    e404:	mov	x0, x21
    e408:	mov	w1, #0x1                   	// #1
    e40c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e410:	cbz	w0, e3b0 <gcc_cp_fe_context@@Base+0x4138>
    e414:	add	x1, sp, #0x38
    e418:	mov	x0, x21
    e41c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e420:	cmp	w0, #0x0
    e424:	ldr	x1, [sp, #56]
    e428:	csel	x0, xzr, x1, eq  // eq = none
    e42c:	b	e3b4 <gcc_cp_fe_context@@Base+0x413c>
    e430:	stp	x29, x30, [sp, #-64]!
    e434:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    e438:	mov	x29, sp
    e43c:	ldr	x3, [x3, #3656]
    e440:	stp	x21, x22, [sp, #32]
    e444:	ldr	x21, [x0, #16]
    e448:	stp	x19, x20, [sp, #16]
    e44c:	mov	x19, x1
    e450:	mov	x20, x2
    e454:	mov	x0, x21
    e458:	mov	w1, #0x51                  	// #81
    e45c:	ldr	x22, [x3]
    e460:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e464:	cbnz	w0, e47c <gcc_cp_fe_context@@Base+0x4204>
    e468:	mov	x0, #0x0                   	// #0
    e46c:	ldp	x19, x20, [sp, #16]
    e470:	ldp	x21, x22, [sp, #32]
    e474:	ldp	x29, x30, [sp], #64
    e478:	ret
    e47c:	mov	x1, x22
    e480:	mov	x0, x21
    e484:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e488:	cbz	w0, e468 <gcc_cp_fe_context@@Base+0x41f0>
    e48c:	mov	x0, x21
    e490:	mov	x1, #0x2                   	// #2
    e494:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e498:	cbz	w0, e468 <gcc_cp_fe_context@@Base+0x41f0>
    e49c:	mov	x1, x19
    e4a0:	mov	x0, x21
    e4a4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e4a8:	cbz	w0, e468 <gcc_cp_fe_context@@Base+0x41f0>
    e4ac:	mov	x1, x20
    e4b0:	mov	x0, x21
    e4b4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e4b8:	cbz	w0, e468 <gcc_cp_fe_context@@Base+0x41f0>
    e4bc:	mov	x0, x21
    e4c0:	mov	w1, #0x1                   	// #1
    e4c4:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e4c8:	cbz	w0, e468 <gcc_cp_fe_context@@Base+0x41f0>
    e4cc:	add	x1, sp, #0x38
    e4d0:	mov	x0, x21
    e4d4:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e4d8:	cmp	w0, #0x0
    e4dc:	ldr	x1, [sp, #56]
    e4e0:	csel	x0, xzr, x1, eq  // eq = none
    e4e4:	b	e46c <gcc_cp_fe_context@@Base+0x41f4>
    e4e8:	stp	x29, x30, [sp, #-64]!
    e4ec:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    e4f0:	mov	x29, sp
    e4f4:	ldr	x3, [x3, #3560]
    e4f8:	stp	x21, x22, [sp, #32]
    e4fc:	ldr	x21, [x0, #16]
    e500:	stp	x19, x20, [sp, #16]
    e504:	mov	x19, x1
    e508:	mov	x20, x2
    e50c:	mov	x0, x21
    e510:	mov	w1, #0x51                  	// #81
    e514:	ldr	x22, [x3]
    e518:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e51c:	cbnz	w0, e534 <gcc_cp_fe_context@@Base+0x42bc>
    e520:	mov	x0, #0x0                   	// #0
    e524:	ldp	x19, x20, [sp, #16]
    e528:	ldp	x21, x22, [sp, #32]
    e52c:	ldp	x29, x30, [sp], #64
    e530:	ret
    e534:	mov	x1, x22
    e538:	mov	x0, x21
    e53c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e540:	cbz	w0, e520 <gcc_cp_fe_context@@Base+0x42a8>
    e544:	mov	x0, x21
    e548:	mov	x1, #0x2                   	// #2
    e54c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e550:	cbz	w0, e520 <gcc_cp_fe_context@@Base+0x42a8>
    e554:	mov	x1, x19
    e558:	mov	x0, x21
    e55c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e560:	cbz	w0, e520 <gcc_cp_fe_context@@Base+0x42a8>
    e564:	mov	x1, x20
    e568:	mov	x0, x21
    e56c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e570:	cbz	w0, e520 <gcc_cp_fe_context@@Base+0x42a8>
    e574:	mov	x0, x21
    e578:	mov	w1, #0x1                   	// #1
    e57c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e580:	cbz	w0, e520 <gcc_cp_fe_context@@Base+0x42a8>
    e584:	add	x1, sp, #0x38
    e588:	mov	x0, x21
    e58c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e590:	cmp	w0, #0x0
    e594:	ldr	x1, [sp, #56]
    e598:	csel	x0, xzr, x1, eq  // eq = none
    e59c:	b	e524 <gcc_cp_fe_context@@Base+0x42ac>
    e5a0:	stp	x29, x30, [sp, #-64]!
    e5a4:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    e5a8:	mov	x29, sp
    e5ac:	ldr	x3, [x3, #3504]
    e5b0:	stp	x21, x22, [sp, #32]
    e5b4:	ldr	x21, [x0, #16]
    e5b8:	stp	x19, x20, [sp, #16]
    e5bc:	mov	x19, x1
    e5c0:	mov	w20, w2
    e5c4:	mov	x0, x21
    e5c8:	mov	w1, #0x51                  	// #81
    e5cc:	ldr	x22, [x3]
    e5d0:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e5d4:	cbnz	w0, e5ec <gcc_cp_fe_context@@Base+0x4374>
    e5d8:	mov	x0, #0x0                   	// #0
    e5dc:	ldp	x19, x20, [sp, #16]
    e5e0:	ldp	x21, x22, [sp, #32]
    e5e4:	ldp	x29, x30, [sp], #64
    e5e8:	ret
    e5ec:	mov	x1, x22
    e5f0:	mov	x0, x21
    e5f4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e5f8:	cbz	w0, e5d8 <gcc_cp_fe_context@@Base+0x4360>
    e5fc:	mov	x0, x21
    e600:	mov	x1, #0x2                   	// #2
    e604:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e608:	cbz	w0, e5d8 <gcc_cp_fe_context@@Base+0x4360>
    e60c:	mov	x1, x19
    e610:	mov	x0, x21
    e614:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e618:	cbz	w0, e5d8 <gcc_cp_fe_context@@Base+0x4360>
    e61c:	sxtw	x1, w20
    e620:	mov	x0, x21
    e624:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e628:	cbz	w0, e5d8 <gcc_cp_fe_context@@Base+0x4360>
    e62c:	mov	x0, x21
    e630:	mov	w1, #0x1                   	// #1
    e634:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e638:	cbz	w0, e5d8 <gcc_cp_fe_context@@Base+0x4360>
    e63c:	add	x1, sp, #0x38
    e640:	mov	x0, x21
    e644:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e648:	cmp	w0, #0x0
    e64c:	ldr	x1, [sp, #56]
    e650:	csel	x0, xzr, x1, eq  // eq = none
    e654:	b	e5dc <gcc_cp_fe_context@@Base+0x4364>
    e658:	stp	x29, x30, [sp, #-64]!
    e65c:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
    e660:	mov	x29, sp
    e664:	ldr	x3, [x3, #3496]
    e668:	stp	x19, x20, [sp, #16]
    e66c:	mov	x19, x1
    e670:	ldr	x20, [x0, #16]
    e674:	mov	w1, #0x51                  	// #81
    e678:	stp	x21, x22, [sp, #32]
    e67c:	mov	x21, x2
    e680:	mov	x0, x20
    e684:	ldr	x22, [x3]
    e688:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e68c:	cbnz	w0, e6a4 <gcc_cp_fe_context@@Base+0x442c>
    e690:	mov	x0, #0x0                   	// #0
    e694:	ldp	x19, x20, [sp, #16]
    e698:	ldp	x21, x22, [sp, #32]
    e69c:	ldp	x29, x30, [sp], #64
    e6a0:	ret
    e6a4:	mov	x1, x22
    e6a8:	mov	x0, x20
    e6ac:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e6b0:	cbz	w0, e690 <gcc_cp_fe_context@@Base+0x4418>
    e6b4:	mov	x0, x20
    e6b8:	mov	x1, #0x2                   	// #2
    e6bc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e6c0:	cbz	w0, e690 <gcc_cp_fe_context@@Base+0x4418>
    e6c4:	mov	x1, x19
    e6c8:	mov	x0, x20
    e6cc:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e6d0:	cbz	w0, e690 <gcc_cp_fe_context@@Base+0x4418>
    e6d4:	cbz	x21, e744 <gcc_cp_fe_context@@Base+0x44cc>
    e6d8:	ldrsw	x19, [x21]
    e6dc:	mov	x0, x20
    e6e0:	mov	w1, #0x74                  	// #116
    e6e4:	mov	x2, x19
    e6e8:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    e6ec:	cbz	w0, e690 <gcc_cp_fe_context@@Base+0x4418>
    e6f0:	ldr	x2, [x21, #8]
    e6f4:	mov	x1, x19
    e6f8:	mov	x0, x20
    e6fc:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    e700:	cbz	w0, e690 <gcc_cp_fe_context@@Base+0x4418>
    e704:	ldr	x2, [x21, #16]
    e708:	lsl	x1, x19, #3
    e70c:	mov	x0, x20
    e710:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    e714:	cbz	w0, e690 <gcc_cp_fe_context@@Base+0x4418>
    e718:	mov	x0, x20
    e71c:	mov	w1, #0x1                   	// #1
    e720:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e724:	cbz	w0, e690 <gcc_cp_fe_context@@Base+0x4418>
    e728:	add	x1, sp, #0x38
    e72c:	mov	x0, x20
    e730:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e734:	cmp	w0, #0x0
    e738:	ldr	x1, [sp, #56]
    e73c:	csel	x0, xzr, x1, eq  // eq = none
    e740:	b	e694 <gcc_cp_fe_context@@Base+0x441c>
    e744:	mov	x0, x20
    e748:	mov	x2, #0xffffffffffffffff    	// #-1
    e74c:	mov	w1, #0x74                  	// #116
    e750:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    e754:	cbnz	w0, e718 <gcc_cp_fe_context@@Base+0x44a0>
    e758:	b	e690 <gcc_cp_fe_context@@Base+0x4418>
    e75c:	nop
    e760:	stp	x29, x30, [sp, #-80]!
    e764:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
    e768:	mov	x29, sp
    e76c:	ldr	x5, [x5, #3720]
    e770:	stp	x19, x20, [sp, #16]
    e774:	mov	w20, w4
    e778:	ldr	x19, [x0, #16]
    e77c:	stp	x21, x22, [sp, #32]
    e780:	mov	x22, x2
    e784:	mov	x21, x3
    e788:	mov	x0, x19
    e78c:	stp	x23, x24, [sp, #48]
    e790:	mov	x23, x1
    e794:	mov	w1, #0x51                  	// #81
    e798:	ldr	x24, [x5]
    e79c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e7a0:	cbnz	w0, e7bc <gcc_cp_fe_context@@Base+0x4544>
    e7a4:	mov	x0, #0x0                   	// #0
    e7a8:	ldp	x19, x20, [sp, #16]
    e7ac:	ldp	x21, x22, [sp, #32]
    e7b0:	ldp	x23, x24, [sp, #48]
    e7b4:	ldp	x29, x30, [sp], #80
    e7b8:	ret
    e7bc:	mov	x1, x24
    e7c0:	mov	x0, x19
    e7c4:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e7c8:	cbz	w0, e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e7cc:	mov	x0, x19
    e7d0:	mov	x1, #0x4                   	// #4
    e7d4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e7d8:	cbz	w0, e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e7dc:	mov	x1, x23
    e7e0:	mov	x0, x19
    e7e4:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e7e8:	cbz	w0, e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e7ec:	cbz	x22, e87c <gcc_cp_fe_context@@Base+0x4604>
    e7f0:	ldrsw	x23, [x22]
    e7f4:	mov	x0, x19
    e7f8:	mov	w1, #0x74                  	// #116
    e7fc:	mov	x2, x23
    e800:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    e804:	cbz	w0, e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e808:	ldr	x2, [x22, #8]
    e80c:	mov	x1, x23
    e810:	mov	x0, x19
    e814:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    e818:	cbz	w0, e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e81c:	ldr	x2, [x22, #16]
    e820:	lsl	x1, x23, #3
    e824:	mov	x0, x19
    e828:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    e82c:	cbz	w0, e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e830:	mov	x1, x21
    e834:	mov	x0, x19
    e838:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e83c:	cbz	w0, e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e840:	mov	w1, w20
    e844:	mov	x0, x19
    e848:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e84c:	cbz	w0, e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e850:	mov	x0, x19
    e854:	mov	w1, #0x1                   	// #1
    e858:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e85c:	cbz	w0, e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e860:	add	x1, sp, #0x48
    e864:	mov	x0, x19
    e868:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e86c:	cmp	w0, #0x0
    e870:	ldr	x1, [sp, #72]
    e874:	csel	x0, xzr, x1, eq  // eq = none
    e878:	b	e7a8 <gcc_cp_fe_context@@Base+0x4530>
    e87c:	mov	x0, x19
    e880:	mov	x2, #0xffffffffffffffff    	// #-1
    e884:	mov	w1, #0x74                  	// #116
    e888:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    e88c:	cbnz	w0, e830 <gcc_cp_fe_context@@Base+0x45b8>
    e890:	b	e7a4 <gcc_cp_fe_context@@Base+0x452c>
    e894:	nop
    e898:	stp	x29, x30, [sp, #-96]!
    e89c:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    e8a0:	mov	x29, sp
    e8a4:	ldr	x6, [x6, #3592]
    e8a8:	stp	x21, x22, [sp, #32]
    e8ac:	mov	w22, w5
    e8b0:	ldr	x21, [x0, #16]
    e8b4:	stp	x19, x20, [sp, #16]
    e8b8:	mov	x20, x1
    e8bc:	mov	x19, x2
    e8c0:	mov	x0, x21
    e8c4:	mov	w1, #0x51                  	// #81
    e8c8:	stp	x23, x24, [sp, #48]
    e8cc:	mov	x24, x3
    e8d0:	mov	x23, x4
    e8d4:	str	x25, [sp, #64]
    e8d8:	ldr	x25, [x6]
    e8dc:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    e8e0:	cbnz	w0, e900 <gcc_cp_fe_context@@Base+0x4688>
    e8e4:	mov	x0, #0x0                   	// #0
    e8e8:	ldp	x19, x20, [sp, #16]
    e8ec:	ldp	x21, x22, [sp, #32]
    e8f0:	ldp	x23, x24, [sp, #48]
    e8f4:	ldr	x25, [sp, #64]
    e8f8:	ldp	x29, x30, [sp], #96
    e8fc:	ret
    e900:	mov	x1, x25
    e904:	mov	x0, x21
    e908:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e90c:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e910:	mov	x0, x21
    e914:	mov	x1, #0x5                   	// #5
    e918:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e91c:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e920:	mov	x1, x20
    e924:	mov	x0, x21
    e928:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e92c:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e930:	cbz	x19, e9d0 <gcc_cp_fe_context@@Base+0x4758>
    e934:	ldrsw	x20, [x19]
    e938:	mov	x0, x21
    e93c:	mov	w1, #0x74                  	// #116
    e940:	mov	x2, x20
    e944:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    e948:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e94c:	ldr	x2, [x19, #8]
    e950:	mov	x1, x20
    e954:	mov	x0, x21
    e958:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    e95c:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e960:	ldr	x2, [x19, #16]
    e964:	lsl	x1, x20, #3
    e968:	mov	x0, x21
    e96c:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    e970:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e974:	mov	x1, x24
    e978:	mov	x0, x21
    e97c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e980:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e984:	mov	x1, x23
    e988:	mov	x0, x21
    e98c:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    e990:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e994:	mov	w1, w22
    e998:	mov	x0, x21
    e99c:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    e9a0:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e9a4:	mov	x0, x21
    e9a8:	mov	w1, #0x1                   	// #1
    e9ac:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    e9b0:	cbz	w0, e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e9b4:	add	x1, sp, #0x58
    e9b8:	mov	x0, x21
    e9bc:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    e9c0:	cmp	w0, #0x0
    e9c4:	ldr	x1, [sp, #88]
    e9c8:	csel	x0, xzr, x1, eq  // eq = none
    e9cc:	b	e8e8 <gcc_cp_fe_context@@Base+0x4670>
    e9d0:	mov	x0, x21
    e9d4:	mov	x2, #0xffffffffffffffff    	// #-1
    e9d8:	mov	w1, #0x74                  	// #116
    e9dc:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    e9e0:	cbnz	w0, e974 <gcc_cp_fe_context@@Base+0x46fc>
    e9e4:	b	e8e4 <gcc_cp_fe_context@@Base+0x466c>
    e9e8:	stp	x29, x30, [sp, #-80]!
    e9ec:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    e9f0:	mov	x29, sp
    e9f4:	ldr	x4, [x4, #3360]
    e9f8:	stp	x19, x20, [sp, #16]
    e9fc:	mov	x20, x3
    ea00:	ldr	x19, [x0, #16]
    ea04:	stp	x21, x22, [sp, #32]
    ea08:	mov	x22, x1
    ea0c:	mov	x21, x2
    ea10:	mov	x0, x19
    ea14:	mov	w1, #0x51                  	// #81
    ea18:	str	x23, [sp, #48]
    ea1c:	ldr	x23, [x4]
    ea20:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    ea24:	cbnz	w0, ea40 <gcc_cp_fe_context@@Base+0x47c8>
    ea28:	mov	x0, #0x0                   	// #0
    ea2c:	ldp	x19, x20, [sp, #16]
    ea30:	ldp	x21, x22, [sp, #32]
    ea34:	ldr	x23, [sp, #48]
    ea38:	ldp	x29, x30, [sp], #80
    ea3c:	ret
    ea40:	mov	x1, x23
    ea44:	mov	x0, x19
    ea48:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    ea4c:	cbz	w0, ea28 <gcc_cp_fe_context@@Base+0x47b0>
    ea50:	mov	x0, x19
    ea54:	mov	x1, #0x3                   	// #3
    ea58:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ea5c:	cbz	w0, ea28 <gcc_cp_fe_context@@Base+0x47b0>
    ea60:	mov	x1, x22
    ea64:	mov	x0, x19
    ea68:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ea6c:	cbz	w0, ea28 <gcc_cp_fe_context@@Base+0x47b0>
    ea70:	mov	x1, x21
    ea74:	mov	x0, x19
    ea78:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    ea7c:	cbz	w0, ea28 <gcc_cp_fe_context@@Base+0x47b0>
    ea80:	cbz	x20, eaf0 <gcc_cp_fe_context@@Base+0x4878>
    ea84:	ldrsw	x21, [x20]
    ea88:	mov	x0, x19
    ea8c:	mov	w1, #0x74                  	// #116
    ea90:	mov	x2, x21
    ea94:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    ea98:	cbz	w0, ea28 <gcc_cp_fe_context@@Base+0x47b0>
    ea9c:	ldr	x2, [x20, #8]
    eaa0:	mov	x1, x21
    eaa4:	mov	x0, x19
    eaa8:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    eaac:	cbz	w0, ea28 <gcc_cp_fe_context@@Base+0x47b0>
    eab0:	ldr	x2, [x20, #16]
    eab4:	lsl	x1, x21, #3
    eab8:	mov	x0, x19
    eabc:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    eac0:	cbz	w0, ea28 <gcc_cp_fe_context@@Base+0x47b0>
    eac4:	mov	x0, x19
    eac8:	mov	w1, #0x1                   	// #1
    eacc:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    ead0:	cbz	w0, ea28 <gcc_cp_fe_context@@Base+0x47b0>
    ead4:	add	x1, sp, #0x48
    ead8:	mov	x0, x19
    eadc:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    eae0:	cmp	w0, #0x0
    eae4:	ldr	x1, [sp, #72]
    eae8:	csel	x0, xzr, x1, eq  // eq = none
    eaec:	b	ea2c <gcc_cp_fe_context@@Base+0x47b4>
    eaf0:	mov	x0, x19
    eaf4:	mov	x2, #0xffffffffffffffff    	// #-1
    eaf8:	mov	w1, #0x74                  	// #116
    eafc:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    eb00:	cbnz	w0, eac4 <gcc_cp_fe_context@@Base+0x484c>
    eb04:	b	ea28 <gcc_cp_fe_context@@Base+0x47b0>
    eb08:	stp	x29, x30, [sp, #-96]!
    eb0c:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
    eb10:	mov	x29, sp
    eb14:	ldr	x6, [x6, #3784]
    eb18:	stp	x21, x22, [sp, #32]
    eb1c:	mov	x22, x5
    eb20:	ldr	x21, [x0, #16]
    eb24:	stp	x19, x20, [sp, #16]
    eb28:	mov	x19, x1
    eb2c:	mov	w20, w2
    eb30:	mov	x0, x21
    eb34:	mov	w1, #0x51                  	// #81
    eb38:	stp	x23, x24, [sp, #48]
    eb3c:	mov	x24, x3
    eb40:	mov	x23, x4
    eb44:	str	x25, [sp, #64]
    eb48:	ldr	x25, [x6]
    eb4c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    eb50:	cbnz	w0, eb70 <gcc_cp_fe_context@@Base+0x48f8>
    eb54:	mov	x0, #0x0                   	// #0
    eb58:	ldp	x19, x20, [sp, #16]
    eb5c:	ldp	x21, x22, [sp, #32]
    eb60:	ldp	x23, x24, [sp, #48]
    eb64:	ldr	x25, [sp, #64]
    eb68:	ldp	x29, x30, [sp], #96
    eb6c:	ret
    eb70:	mov	x1, x25
    eb74:	mov	x0, x21
    eb78:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    eb7c:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    eb80:	mov	x0, x21
    eb84:	mov	x1, #0x5                   	// #5
    eb88:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    eb8c:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    eb90:	mov	x1, x19
    eb94:	mov	x0, x21
    eb98:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    eb9c:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    eba0:	mov	w1, w20
    eba4:	mov	x0, x21
    eba8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ebac:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    ebb0:	mov	x1, x24
    ebb4:	mov	x0, x21
    ebb8:	bl	f200 <gcc_cp_fe_context@@Base+0x4f88>
    ebbc:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    ebc0:	mov	x1, x23
    ebc4:	mov	x0, x21
    ebc8:	bl	f178 <gcc_cp_fe_context@@Base+0x4f00>
    ebcc:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    ebd0:	cbz	x22, ec40 <gcc_cp_fe_context@@Base+0x49c8>
    ebd4:	ldrsw	x19, [x22]
    ebd8:	mov	x0, x21
    ebdc:	mov	w1, #0x74                  	// #116
    ebe0:	mov	x2, x19
    ebe4:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    ebe8:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    ebec:	ldr	x2, [x22, #8]
    ebf0:	mov	x1, x19
    ebf4:	mov	x0, x21
    ebf8:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    ebfc:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    ec00:	ldr	x2, [x22, #16]
    ec04:	lsl	x1, x19, #3
    ec08:	mov	x0, x21
    ec0c:	bl	f3c8 <gcc_cp_fe_context@@Base+0x5150>
    ec10:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    ec14:	mov	x0, x21
    ec18:	mov	w1, #0x1                   	// #1
    ec1c:	bl	eea8 <gcc_cp_fe_context@@Base+0x4c30>
    ec20:	cbz	w0, eb54 <gcc_cp_fe_context@@Base+0x48dc>
    ec24:	add	x1, sp, #0x58
    ec28:	mov	x0, x21
    ec2c:	bl	f1b8 <gcc_cp_fe_context@@Base+0x4f40>
    ec30:	cmp	w0, #0x0
    ec34:	ldr	x1, [sp, #88]
    ec38:	csel	x0, xzr, x1, eq  // eq = none
    ec3c:	b	eb58 <gcc_cp_fe_context@@Base+0x48e0>
    ec40:	mov	x0, x21
    ec44:	mov	x2, #0xffffffffffffffff    	// #-1
    ec48:	mov	w1, #0x74                  	// #116
    ec4c:	bl	f380 <gcc_cp_fe_context@@Base+0x5108>
    ec50:	cbnz	w0, ec14 <gcc_cp_fe_context@@Base+0x499c>
    ec54:	b	eb54 <gcc_cp_fe_context@@Base+0x48dc>
    ec58:	stp	x29, x30, [sp, #-16]!
    ec5c:	mov	x29, sp
    ec60:	ldr	x0, [x0]
    ec64:	ldr	x1, [x1]
    ec68:	bl	5620 <strcmp@plt>
    ec6c:	cmp	w0, #0x0
    ec70:	cset	w0, eq  // eq = none
    ec74:	ldp	x29, x30, [sp], #16
    ec78:	ret
    ec7c:	nop
    ec80:	ldr	x0, [x0]
    ec84:	b	5470 <htab_hash_string@plt>
    ec88:	stp	x29, x30, [sp, #-32]!
    ec8c:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
    ec90:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
    ec94:	mov	x29, sp
    ec98:	ldr	x5, [x5, #3376]
    ec9c:	str	x19, [sp, #16]
    eca0:	ldr	x4, [x4, #3872]
    eca4:	mov	x19, x0
    eca8:	mov	x3, x5
    ecac:	adrp	x2, e000 <gcc_cp_fe_context@@Base+0x3d88>
    ecb0:	adrp	x1, e000 <gcc_cp_fe_context@@Base+0x3d88>
    ecb4:	add	x2, x2, #0xc58
    ecb8:	add	x1, x1, #0xc80
    ecbc:	mov	x0, #0xa                   	// #10
    ecc0:	bl	5320 <htab_create_alloc@plt>
    ecc4:	str	x0, [x19]
    ecc8:	ldr	x19, [sp, #16]
    eccc:	ldp	x29, x30, [sp], #32
    ecd0:	ret
    ecd4:	nop
    ecd8:	stp	x29, x30, [sp, #-16]!
    ecdc:	mov	x29, sp
    ece0:	ldr	x0, [x0]
    ece4:	bl	5730 <htab_delete@plt>
    ece8:	ldp	x29, x30, [sp], #16
    ecec:	ret
    ecf0:	stp	x29, x30, [sp, #-48]!
    ecf4:	mov	x4, x1
    ecf8:	mov	x3, x2
    ecfc:	mov	x29, sp
    ed00:	ldr	x0, [x0]
    ed04:	add	x1, sp, #0x20
    ed08:	mov	w2, #0x1                   	// #1
    ed0c:	str	x19, [sp, #16]
    ed10:	stp	x4, x3, [sp, #32]
    ed14:	bl	5540 <htab_find_slot@plt>
    ed18:	mov	x19, x0
    ed1c:	mov	x0, #0x10                  	// #16
    ed20:	bl	55c0 <xmalloc@plt>
    ed24:	ldp	x2, x3, [sp, #32]
    ed28:	str	x0, [x19]
    ed2c:	stp	x2, x3, [x0]
    ed30:	ldr	x19, [sp, #16]
    ed34:	ldp	x29, x30, [sp], #48
    ed38:	ret
    ed3c:	nop
    ed40:	stp	x29, x30, [sp, #-32]!
    ed44:	mov	x2, x1
    ed48:	mov	x29, sp
    ed4c:	ldr	x0, [x0]
    ed50:	add	x1, sp, #0x10
    ed54:	str	x2, [sp, #16]
    ed58:	bl	5420 <htab_find@plt>
    ed5c:	cbz	x0, ed6c <gcc_cp_fe_context@@Base+0x4af4>
    ed60:	ldr	x0, [x0, #8]
    ed64:	ldp	x29, x30, [sp], #32
    ed68:	ret
    ed6c:	mov	x0, #0x0                   	// #0
    ed70:	b	ed64 <gcc_cp_fe_context@@Base+0x4aec>
    ed74:	nop
    ed78:	ret
    ed7c:	nop
    ed80:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    ed84:	add	x1, x1, #0x8e8
    ed88:	str	x1, [x0], #16
    ed8c:	b	ecd8 <gcc_cp_fe_context@@Base+0x4a60>
    ed90:	stp	x29, x30, [sp, #-32]!
    ed94:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    ed98:	add	x1, x1, #0x8e8
    ed9c:	mov	x29, sp
    eda0:	str	x19, [sp, #16]
    eda4:	mov	x19, x0
    eda8:	str	x1, [x0], #16
    edac:	bl	ecd8 <gcc_cp_fe_context@@Base+0x4a60>
    edb0:	mov	x0, x19
    edb4:	mov	x1, #0x18                  	// #24
    edb8:	ldr	x19, [sp, #16]
    edbc:	ldp	x29, x30, [sp], #32
    edc0:	b	54a0 <_ZdlPvm@plt>
    edc4:	nop
    edc8:	stp	x29, x30, [sp, #-32]!
    edcc:	mov	x2, #0x1                   	// #1
    edd0:	mov	x29, sp
    edd4:	ldr	w0, [x0, #8]
    edd8:	strb	w1, [sp, #31]
    eddc:	add	x1, sp, #0x1f
    ede0:	bl	5650 <write@plt>
    ede4:	cmp	x0, #0x1
    ede8:	cset	w0, eq  // eq = none
    edec:	ldp	x29, x30, [sp], #32
    edf0:	ret
    edf4:	nop
    edf8:	stp	x29, x30, [sp, #-32]!
    edfc:	mov	x29, sp
    ee00:	ldr	w0, [x0, #8]
    ee04:	str	x19, [sp, #16]
    ee08:	sxtw	x19, w2
    ee0c:	mov	x2, x19
    ee10:	bl	5650 <write@plt>
    ee14:	cmp	x19, x0
    ee18:	cset	w0, eq  // eq = none
    ee1c:	ldr	x19, [sp, #16]
    ee20:	ldp	x29, x30, [sp], #32
    ee24:	ret
    ee28:	stp	x29, x30, [sp, #-48]!
    ee2c:	mov	x2, #0x1                   	// #1
    ee30:	mov	x29, sp
    ee34:	ldr	w0, [x0, #8]
    ee38:	str	x19, [sp, #16]
    ee3c:	and	w19, w1, #0xff
    ee40:	add	x1, sp, #0x2f
    ee44:	bl	5400 <read@plt>
    ee48:	cmp	x0, #0x1
    ee4c:	b.ne	ee68 <gcc_cp_fe_context@@Base+0x4bf0>  // b.any
    ee50:	ldrb	w0, [sp, #47]
    ee54:	cmp	w0, w19
    ee58:	cset	w0, eq  // eq = none
    ee5c:	ldr	x19, [sp, #16]
    ee60:	ldp	x29, x30, [sp], #48
    ee64:	ret
    ee68:	mov	w0, #0x0                   	// #0
    ee6c:	ldr	x19, [sp, #16]
    ee70:	ldp	x29, x30, [sp], #48
    ee74:	ret
    ee78:	stp	x29, x30, [sp, #-32]!
    ee7c:	mov	x29, sp
    ee80:	ldr	w0, [x0, #8]
    ee84:	str	x19, [sp, #16]
    ee88:	sxtw	x19, w2
    ee8c:	mov	x2, x19
    ee90:	bl	5400 <read@plt>
    ee94:	cmp	x19, x0
    ee98:	cset	w0, eq  // eq = none
    ee9c:	ldr	x19, [sp, #16]
    eea0:	ldp	x29, x30, [sp], #32
    eea4:	ret
    eea8:	movi	v0.4s, #0x0
    eeac:	sub	sp, sp, #0x4d0
    eeb0:	stp	x29, x30, [sp]
    eeb4:	mov	x29, sp
    eeb8:	stp	x19, x20, [sp, #16]
    eebc:	mov	x19, x0
    eec0:	ldr	w0, [x0, #8]
    eec4:	and	w20, w1, #0xff
    eec8:	stp	x21, x22, [sp, #32]
    eecc:	add	w3, w0, #0x3f
    eed0:	adrp	x21, e000 <gcc_cp_fe_context@@Base+0x3d88>
    eed4:	add	x22, sp, #0xd0
    eed8:	add	x21, x21, #0xd78
    eedc:	and	w5, w0, #0x3f
    eee0:	stp	x23, x24, [sp, #48]
    eee4:	add	x24, sp, #0x50
    eee8:	add	x23, sp, #0x4f
    eeec:	cmp	w0, #0x0
    eef0:	stp	q0, q0, [sp, #80]
    eef4:	csel	w3, w3, w0, lt  // lt = tstop
    eef8:	negs	w1, w0
    eefc:	stp	q0, q0, [sp, #112]
    ef00:	asr	w3, w3, #6
    ef04:	and	w1, w1, #0x3f
    ef08:	stp	q0, q0, [sp, #144]
    ef0c:	sxtw	x0, w3
    ef10:	stp	q0, q0, [sp, #176]
    ef14:	csneg	w1, w5, w1, mi  // mi = first
    ef18:	mov	x3, #0x1                   	// #1
    ef1c:	ldr	x4, [x24, x0, lsl #3]
    ef20:	lsl	x1, x3, x1
    ef24:	ldr	w2, [x19, #12]
    ef28:	orr	x1, x1, x4
    ef2c:	str	x1, [x24, x0, lsl #3]
    ef30:	cmn	w2, #0x1
    ef34:	b.eq	ef6c <gcc_cp_fe_context@@Base+0x4cf4>  // b.none
    ef38:	cmp	w2, #0x0
    ef3c:	add	w0, w2, #0x3f
    ef40:	csel	w0, w0, w2, lt  // lt = tstop
    ef44:	negs	w1, w2
    ef48:	and	w1, w1, #0x3f
    ef4c:	and	w2, w2, #0x3f
    ef50:	asr	w0, w0, #6
    ef54:	csneg	w2, w2, w1, mi  // mi = first
    ef58:	sxtw	x0, w0
    ef5c:	lsl	x3, x3, x2
    ef60:	ldr	x1, [x24, x0, lsl #3]
    ef64:	orr	x3, x3, x1
    ef68:	str	x3, [x24, x0, lsl #3]
    ef6c:	mov	x1, x24
    ef70:	mov	x4, #0x0                   	// #0
    ef74:	mov	x3, #0x0                   	// #0
    ef78:	mov	x2, #0x0                   	// #0
    ef7c:	mov	w0, #0x400                 	// #1024
    ef80:	bl	5220 <select@plt>
    ef84:	movi	v0.4s, #0x0
    ef88:	cmn	w0, #0x1
    ef8c:	b.eq	f048 <gcc_cp_fe_context@@Base+0x4dd0>  // b.none
    ef90:	ldr	w0, [x19, #12]
    ef94:	cmn	w0, #0x1
    ef98:	b.eq	efd0 <gcc_cp_fe_context@@Base+0x4d58>  // b.none
    ef9c:	cmp	w0, #0x0
    efa0:	add	w1, w0, #0x3f
    efa4:	csel	w1, w1, w0, lt  // lt = tstop
    efa8:	negs	w2, w0
    efac:	and	w3, w2, #0x3f
    efb0:	and	w2, w0, #0x3f
    efb4:	asr	w1, w1, #6
    efb8:	csneg	w2, w2, w3, mi  // mi = first
    efbc:	mov	x3, #0x1                   	// #1
    efc0:	lsl	x2, x3, x2
    efc4:	ldr	x1, [x24, w1, sxtw #3]
    efc8:	tst	x2, x1
    efcc:	b.ne	f088 <gcc_cp_fe_context@@Base+0x4e10>  // b.any
    efd0:	ldr	w0, [x19, #8]
    efd4:	mov	x2, #0x1                   	// #1
    efd8:	cmp	w0, #0x0
    efdc:	add	w3, w0, #0x3f
    efe0:	csel	w1, w3, w0, lt  // lt = tstop
    efe4:	negs	w4, w0
    efe8:	and	w4, w4, #0x3f
    efec:	and	w5, w0, #0x3f
    eff0:	asr	w1, w1, #6
    eff4:	csneg	w4, w5, w4, mi  // mi = first
    eff8:	lsl	x4, x2, x4
    effc:	ldr	x1, [x24, w1, sxtw #3]
    f000:	tst	x4, x1
    f004:	b.eq	eeec <gcc_cp_fe_context@@Base+0x4c74>  // b.none
    f008:	mov	x1, x23
    f00c:	bl	5400 <read@plt>
    f010:	cbz	w0, f110 <gcc_cp_fe_context@@Base+0x4e98>
    f014:	cmp	w0, #0x1
    f018:	b.ne	f05c <gcc_cp_fe_context@@Base+0x4de4>  // b.any
    f01c:	ldrb	w0, [sp, #79]
    f020:	cmp	w0, #0x51
    f024:	b.eq	f0cc <gcc_cp_fe_context@@Base+0x4e54>  // b.none
    f028:	cmp	w0, #0x52
    f02c:	csel	w0, w20, wzr, eq  // eq = none
    f030:	ldp	x29, x30, [sp]
    f034:	ldp	x19, x20, [sp, #16]
    f038:	ldp	x21, x22, [sp, #32]
    f03c:	ldp	x23, x24, [sp, #48]
    f040:	add	sp, sp, #0x4d0
    f044:	ret
    f048:	bl	5570 <__errno_location@plt>
    f04c:	ldr	w0, [x0]
    f050:	movi	v0.4s, #0x0
    f054:	cmp	w0, #0x4
    f058:	b.eq	f078 <gcc_cp_fe_context@@Base+0x4e00>  // b.none
    f05c:	mov	w0, #0x0                   	// #0
    f060:	ldp	x29, x30, [sp]
    f064:	ldp	x19, x20, [sp, #16]
    f068:	ldp	x21, x22, [sp, #32]
    f06c:	ldp	x23, x24, [sp, #48]
    f070:	add	sp, sp, #0x4d0
    f074:	ret
    f078:	ldr	w0, [x19, #8]
    f07c:	add	w3, w0, #0x3f
    f080:	and	w5, w0, #0x3f
    f084:	b	eeec <gcc_cp_fe_context@@Base+0x4c74>
    f088:	mov	x1, x22
    f08c:	mov	x2, #0x3ff                 	// #1023
    f090:	bl	5400 <read@plt>
    f094:	cmp	w0, #0x0
    f098:	movi	v0.4s, #0x0
    f09c:	b.lt	f05c <gcc_cp_fe_context@@Base+0x4de4>  // b.tstop
    f0a0:	b.eq	efd0 <gcc_cp_fe_context@@Base+0x4d58>  // b.none
    f0a4:	ldr	x1, [x19]
    f0a8:	strb	wzr, [x22, w0, sxtw]
    f0ac:	ldr	x2, [x1, #16]
    f0b0:	cmp	x2, x21
    f0b4:	b.eq	efd0 <gcc_cp_fe_context@@Base+0x4d58>  // b.none
    f0b8:	mov	x1, x22
    f0bc:	mov	x0, x19
    f0c0:	blr	x2
    f0c4:	movi	v0.4s, #0x0
    f0c8:	b	efd0 <gcc_cp_fe_context@@Base+0x4d58>
    f0cc:	mov	x1, x22
    f0d0:	mov	x0, x19
    f0d4:	bl	f2a0 <gcc_cp_fe_context@@Base+0x5028>
    f0d8:	cbz	w0, f05c <gcc_cp_fe_context@@Base+0x4de4>
    f0dc:	ldr	x1, [sp, #208]
    f0e0:	add	x0, x19, #0x10
    f0e4:	bl	ed40 <gcc_cp_fe_context@@Base+0x4ac8>
    f0e8:	mov	x1, x0
    f0ec:	cbz	x0, f05c <gcc_cp_fe_context@@Base+0x4de4>
    f0f0:	mov	x0, x19
    f0f4:	blr	x1
    f0f8:	cbz	w0, f05c <gcc_cp_fe_context@@Base+0x4de4>
    f0fc:	movi	v0.4s, #0x0
    f100:	ldr	w0, [x19, #8]
    f104:	add	w3, w0, #0x3f
    f108:	and	w5, w0, #0x3f
    f10c:	b	eeec <gcc_cp_fe_context@@Base+0x4c74>
    f110:	eor	w0, w20, #0x1
    f114:	b	f030 <gcc_cp_fe_context@@Base+0x4db8>
    f118:	stp	x29, x30, [sp, #-48]!
    f11c:	mov	x29, sp
    f120:	stp	x19, x20, [sp, #16]
    f124:	mov	x19, x1
    f128:	mov	x20, x0
    f12c:	mov	w1, #0x69                  	// #105
    f130:	bl	ee28 <gcc_cp_fe_context@@Base+0x4bb0>
    f134:	cbnz	w0, f148 <gcc_cp_fe_context@@Base+0x4ed0>
    f138:	mov	w0, #0x0                   	// #0
    f13c:	ldp	x19, x20, [sp, #16]
    f140:	ldp	x29, x30, [sp], #48
    f144:	ret
    f148:	mov	x0, x20
    f14c:	add	x1, sp, #0x28
    f150:	mov	w2, #0x8                   	// #8
    f154:	bl	ee78 <gcc_cp_fe_context@@Base+0x4c00>
    f158:	cbz	w0, f138 <gcc_cp_fe_context@@Base+0x4ec0>
    f15c:	ldr	x0, [sp, #40]
    f160:	cmp	x19, x0
    f164:	cset	w0, eq  // eq = none
    f168:	ldp	x19, x20, [sp, #16]
    f16c:	ldp	x29, x30, [sp], #48
    f170:	ret
    f174:	nop
    f178:	stp	x29, x30, [sp, #-48]!
    f17c:	mov	x29, sp
    f180:	str	x19, [sp, #16]
    f184:	mov	x19, x0
    f188:	str	x1, [sp, #40]
    f18c:	mov	w1, #0x69                  	// #105
    f190:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    f194:	cbz	w0, f1a8 <gcc_cp_fe_context@@Base+0x4f30>
    f198:	mov	x0, x19
    f19c:	add	x1, sp, #0x28
    f1a0:	mov	w2, #0x8                   	// #8
    f1a4:	bl	edf8 <gcc_cp_fe_context@@Base+0x4b80>
    f1a8:	ldr	x19, [sp, #16]
    f1ac:	ldp	x29, x30, [sp], #48
    f1b0:	ret
    f1b4:	nop
    f1b8:	stp	x29, x30, [sp, #-32]!
    f1bc:	mov	x29, sp
    f1c0:	stp	x19, x20, [sp, #16]
    f1c4:	mov	x20, x1
    f1c8:	mov	x19, x0
    f1cc:	mov	w1, #0x69                  	// #105
    f1d0:	bl	ee28 <gcc_cp_fe_context@@Base+0x4bb0>
    f1d4:	cbnz	w0, f1e4 <gcc_cp_fe_context@@Base+0x4f6c>
    f1d8:	ldp	x19, x20, [sp, #16]
    f1dc:	ldp	x29, x30, [sp], #32
    f1e0:	ret
    f1e4:	mov	x1, x20
    f1e8:	mov	x0, x19
    f1ec:	ldp	x19, x20, [sp, #16]
    f1f0:	mov	w2, #0x8                   	// #8
    f1f4:	ldp	x29, x30, [sp], #32
    f1f8:	b	ee78 <gcc_cp_fe_context@@Base+0x4c00>
    f1fc:	nop
    f200:	stp	x29, x30, [sp, #-48]!
    f204:	mov	x29, sp
    f208:	stp	x19, x20, [sp, #16]
    f20c:	mov	x19, x1
    f210:	mov	x20, x0
    f214:	mov	w1, #0x73                  	// #115
    f218:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    f21c:	cbz	w0, f264 <gcc_cp_fe_context@@Base+0x4fec>
    f220:	cbz	x19, f274 <gcc_cp_fe_context@@Base+0x4ffc>
    f224:	mov	x0, x19
    f228:	bl	52c0 <strlen@plt>
    f22c:	mov	x3, x0
    f230:	add	x1, sp, #0x28
    f234:	mov	x0, x20
    f238:	mov	w2, #0x8                   	// #8
    f23c:	str	x3, [sp, #40]
    f240:	bl	edf8 <gcc_cp_fe_context@@Base+0x4b80>
    f244:	cbz	w0, f264 <gcc_cp_fe_context@@Base+0x4fec>
    f248:	ldr	w2, [sp, #40]
    f24c:	mov	x1, x19
    f250:	mov	x0, x20
    f254:	bl	edf8 <gcc_cp_fe_context@@Base+0x4b80>
    f258:	ldp	x19, x20, [sp, #16]
    f25c:	ldp	x29, x30, [sp], #48
    f260:	ret
    f264:	mov	w0, #0x0                   	// #0
    f268:	ldp	x19, x20, [sp, #16]
    f26c:	ldp	x29, x30, [sp], #48
    f270:	ret
    f274:	mov	x3, #0xffffffffffffffff    	// #-1
    f278:	add	x1, sp, #0x28
    f27c:	mov	x0, x20
    f280:	mov	w2, #0x8                   	// #8
    f284:	str	x3, [sp, #40]
    f288:	bl	edf8 <gcc_cp_fe_context@@Base+0x4b80>
    f28c:	cmp	w0, #0x0
    f290:	cset	w0, ne  // ne = any
    f294:	ldp	x19, x20, [sp, #16]
    f298:	ldp	x29, x30, [sp], #48
    f29c:	ret
    f2a0:	stp	x29, x30, [sp, #-64]!
    f2a4:	mov	x29, sp
    f2a8:	stp	x19, x20, [sp, #16]
    f2ac:	mov	x20, x1
    f2b0:	mov	x19, x0
    f2b4:	mov	w1, #0x73                  	// #115
    f2b8:	bl	ee28 <gcc_cp_fe_context@@Base+0x4bb0>
    f2bc:	cbnz	w0, f2d4 <gcc_cp_fe_context@@Base+0x505c>
    f2c0:	mov	w19, #0x0                   	// #0
    f2c4:	mov	w0, w19
    f2c8:	ldp	x19, x20, [sp, #16]
    f2cc:	ldp	x29, x30, [sp], #64
    f2d0:	ret
    f2d4:	add	x1, sp, #0x38
    f2d8:	mov	x0, x19
    f2dc:	mov	w2, #0x8                   	// #8
    f2e0:	bl	ee78 <gcc_cp_fe_context@@Base+0x4c00>
    f2e4:	cbz	w0, f2c0 <gcc_cp_fe_context@@Base+0x5048>
    f2e8:	ldr	x0, [sp, #56]
    f2ec:	cmn	x0, #0x1
    f2f0:	b.eq	f34c <gcc_cp_fe_context@@Base+0x50d4>  // b.none
    f2f4:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
    f2f8:	add	x0, x0, #0x1
    f2fc:	str	x21, [sp, #32]
    f300:	ldr	x1, [x1, #3256]
    f304:	bl	56d0 <_ZnamRKSt9nothrow_t@plt>
    f308:	mov	x21, x0
    f30c:	cbz	x0, f374 <gcc_cp_fe_context@@Base+0x50fc>
    f310:	ldr	w2, [sp, #56]
    f314:	mov	x0, x19
    f318:	mov	x1, x21
    f31c:	bl	ee78 <gcc_cp_fe_context@@Base+0x4c00>
    f320:	mov	w19, w0
    f324:	cbz	w0, f364 <gcc_cp_fe_context@@Base+0x50ec>
    f328:	ldr	x0, [sp, #56]
    f32c:	str	x21, [x20]
    f330:	mov	w19, #0x1                   	// #1
    f334:	strb	wzr, [x21, x0]
    f338:	mov	w0, w19
    f33c:	ldp	x19, x20, [sp, #16]
    f340:	ldr	x21, [sp, #32]
    f344:	ldp	x29, x30, [sp], #64
    f348:	ret
    f34c:	str	xzr, [x20]
    f350:	mov	w19, #0x1                   	// #1
    f354:	mov	w0, w19
    f358:	ldp	x19, x20, [sp, #16]
    f35c:	ldp	x29, x30, [sp], #64
    f360:	ret
    f364:	mov	x0, x21
    f368:	bl	5560 <_ZdaPv@plt>
    f36c:	ldr	x21, [sp, #32]
    f370:	b	f2c4 <gcc_cp_fe_context@@Base+0x504c>
    f374:	ldr	x21, [sp, #32]
    f378:	b	f2c0 <gcc_cp_fe_context@@Base+0x5048>
    f37c:	nop
    f380:	stp	x29, x30, [sp, #-48]!
    f384:	mov	x29, sp
    f388:	stp	x19, x20, [sp, #16]
    f38c:	mov	x19, x2
    f390:	mov	x20, x0
    f394:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    f398:	cbz	w0, f3b8 <gcc_cp_fe_context@@Base+0x5140>
    f39c:	mov	x0, x20
    f3a0:	add	x1, sp, #0x28
    f3a4:	mov	w2, #0x8                   	// #8
    f3a8:	str	x19, [sp, #40]
    f3ac:	bl	edf8 <gcc_cp_fe_context@@Base+0x4b80>
    f3b0:	cmp	w0, #0x0
    f3b4:	cset	w0, ne  // ne = any
    f3b8:	ldp	x19, x20, [sp, #16]
    f3bc:	ldp	x29, x30, [sp], #48
    f3c0:	ret
    f3c4:	nop
    f3c8:	mov	x3, x1
    f3cc:	mov	x1, x2
    f3d0:	mov	w2, w3
    f3d4:	b	edf8 <gcc_cp_fe_context@@Base+0x4b80>
    f3d8:	stp	x29, x30, [sp, #-48]!
    f3dc:	mov	x29, sp
    f3e0:	stp	x19, x20, [sp, #16]
    f3e4:	mov	x20, x2
    f3e8:	mov	x19, x0
    f3ec:	bl	ee28 <gcc_cp_fe_context@@Base+0x4bb0>
    f3f0:	cbnz	w0, f400 <gcc_cp_fe_context@@Base+0x5188>
    f3f4:	ldp	x19, x20, [sp, #16]
    f3f8:	ldp	x29, x30, [sp], #48
    f3fc:	ret
    f400:	mov	x0, x19
    f404:	add	x1, sp, #0x28
    f408:	mov	w2, #0x8                   	// #8
    f40c:	bl	ee78 <gcc_cp_fe_context@@Base+0x4c00>
    f410:	cbz	w0, f3f4 <gcc_cp_fe_context@@Base+0x517c>
    f414:	ldr	x1, [sp, #40]
    f418:	str	x1, [x20]
    f41c:	mov	w0, #0x1                   	// #1
    f420:	ldp	x19, x20, [sp, #16]
    f424:	ldp	x29, x30, [sp], #48
    f428:	ret
    f42c:	nop
    f430:	mov	x3, x1
    f434:	mov	x1, x2
    f438:	mov	w2, w3
    f43c:	b	ee78 <gcc_cp_fe_context@@Base+0x4c00>
    f440:	stp	x29, x30, [sp, #-64]!
    f444:	mov	x29, sp
    f448:	stp	x19, x20, [sp, #16]
    f44c:	mov	x20, x0
    f450:	mov	x19, x1
    f454:	str	x21, [sp, #32]
    f458:	mov	x21, #0xffffffffffffffff    	// #-1
    f45c:	cbz	x1, f464 <gcc_cp_fe_context@@Base+0x51ec>
    f460:	ldrsw	x21, [x1]
    f464:	mov	x0, x20
    f468:	mov	w1, #0x61                  	// #97
    f46c:	bl	edc8 <gcc_cp_fe_context@@Base+0x4b50>
    f470:	cbnz	w0, f484 <gcc_cp_fe_context@@Base+0x520c>
    f474:	ldp	x19, x20, [sp, #16]
    f478:	ldr	x21, [sp, #32]
    f47c:	ldp	x29, x30, [sp], #64
    f480:	ret
    f484:	add	x1, sp, #0x38
    f488:	mov	x0, x20
    f48c:	mov	w2, #0x8                   	// #8
    f490:	str	x21, [sp, #56]
    f494:	bl	edf8 <gcc_cp_fe_context@@Base+0x4b80>
    f498:	cbz	w0, f474 <gcc_cp_fe_context@@Base+0x51fc>
    f49c:	mov	w0, #0x1                   	// #1
    f4a0:	cbz	x19, f474 <gcc_cp_fe_context@@Base+0x51fc>
    f4a4:	ldr	x1, [x19, #8]
    f4a8:	lsl	w2, w21, #3
    f4ac:	mov	x0, x20
    f4b0:	bl	edf8 <gcc_cp_fe_context@@Base+0x4b80>
    f4b4:	ldp	x19, x20, [sp, #16]
    f4b8:	ldr	x21, [sp, #32]
    f4bc:	ldp	x29, x30, [sp], #64
    f4c0:	ret
    f4c4:	nop
    f4c8:	stp	x29, x30, [sp, #-64]!
    f4cc:	mov	x29, sp
    f4d0:	stp	x19, x20, [sp, #16]
    f4d4:	mov	x20, x0
    f4d8:	stp	x21, x22, [sp, #32]
    f4dc:	mov	x21, x1
    f4e0:	mov	w1, #0x61                  	// #97
    f4e4:	bl	ee28 <gcc_cp_fe_context@@Base+0x4bb0>
    f4e8:	cbnz	w0, f504 <gcc_cp_fe_context@@Base+0x528c>
    f4ec:	mov	w19, #0x0                   	// #0
    f4f0:	mov	w0, w19
    f4f4:	ldp	x19, x20, [sp, #16]
    f4f8:	ldp	x21, x22, [sp, #32]
    f4fc:	ldp	x29, x30, [sp], #64
    f500:	ret
    f504:	add	x1, sp, #0x38
    f508:	mov	x0, x20
    f50c:	mov	w2, #0x8                   	// #8
    f510:	bl	ee78 <gcc_cp_fe_context@@Base+0x4c00>
    f514:	mov	w19, w0
    f518:	cbz	w0, f4f0 <gcc_cp_fe_context@@Base+0x5278>
    f51c:	ldr	x19, [sp, #56]
    f520:	cmn	x19, #0x1
    f524:	b.eq	f588 <gcc_cp_fe_context@@Base+0x5310>  // b.none
    f528:	mov	x0, #0x10                  	// #16
    f52c:	bl	5490 <_Znwm@plt>
    f530:	str	w19, [x0]
    f534:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    f538:	mov	x22, x0
    f53c:	cmp	x19, x1
    f540:	b.hi	f5c4 <gcc_cp_fe_context@@Base+0x534c>  // b.pmore
    f544:	lsl	x19, x19, #3
    f548:	mov	x0, x19
    f54c:	bl	5200 <_Znam@plt>
    f550:	mov	w2, w19
    f554:	mov	x1, x0
    f558:	mov	x0, x20
    f55c:	str	x1, [x22, #8]
    f560:	bl	ee78 <gcc_cp_fe_context@@Base+0x4c00>
    f564:	mov	w19, w0
    f568:	cbz	w0, f5a4 <gcc_cp_fe_context@@Base+0x532c>
    f56c:	str	x22, [x21]
    f570:	mov	w19, #0x1                   	// #1
    f574:	mov	w0, w19
    f578:	ldp	x19, x20, [sp, #16]
    f57c:	ldp	x21, x22, [sp, #32]
    f580:	ldp	x29, x30, [sp], #64
    f584:	ret
    f588:	str	xzr, [x21]
    f58c:	mov	w19, #0x1                   	// #1
    f590:	mov	w0, w19
    f594:	ldp	x19, x20, [sp, #16]
    f598:	ldp	x21, x22, [sp, #32]
    f59c:	ldp	x29, x30, [sp], #64
    f5a0:	ret
    f5a4:	ldr	x0, [x22, #8]
    f5a8:	cbz	x0, f5b0 <gcc_cp_fe_context@@Base+0x5338>
    f5ac:	bl	5560 <_ZdaPv@plt>
    f5b0:	ldr	x0, [x21]
    f5b4:	cbz	x0, f4ec <gcc_cp_fe_context@@Base+0x5274>
    f5b8:	mov	x1, #0x10                  	// #16
    f5bc:	bl	54a0 <_ZdlPvm@plt>
    f5c0:	b	f4f0 <gcc_cp_fe_context@@Base+0x5278>
    f5c4:	bl	5600 <__cxa_throw_bad_array_new_length@plt>
    f5c8:	ldr	x7, [x1]
    f5cc:	mov	w6, w0
    f5d0:	cmp	x7, x2
    f5d4:	b.eq	f684 <gcc_cp_fe_context@@Base+0x540c>  // b.none
    f5d8:	add	x0, x7, #0x1
    f5dc:	str	x0, [x1]
    f5e0:	tst	x4, #0x10000
    f5e4:	mov	w0, #0xb                   	// #11
    f5e8:	ldrb	w4, [x7]
    f5ec:	csel	w0, w0, wzr, ne  // ne = any
    f5f0:	cbz	x3, f648 <gcc_cp_fe_context@@Base+0x53d0>
    f5f4:	and	x1, x6, #0xff
    f5f8:	and	x4, x4, #0xff
    f5fc:	mov	w7, #0x1                   	// #1
    f600:	ldrb	w1, [x3, x1]
    f604:	ldrb	w6, [x3, x4]
    f608:	and	x2, x1, #0xff
    f60c:	cmp	w1, w6
    f610:	b.hi	f644 <gcc_cp_fe_context@@Base+0x53cc>  // b.pmore
    f614:	nop
    f618:	ldrb	w0, [x3, x2]
    f61c:	add	x2, x2, #0x1
    f620:	cmp	w6, w2
    f624:	and	w1, w0, #0x7
    f628:	asr	w0, w0, #3
    f62c:	lsl	w1, w7, w1
    f630:	ldrb	w4, [x5, w0, sxtw]
    f634:	orr	w1, w1, w4
    f638:	strb	w1, [x5, w0, sxtw]
    f63c:	b.cs	f618 <gcc_cp_fe_context@@Base+0x53a0>  // b.hs, b.nlast
    f640:	mov	w0, #0x0                   	// #0
    f644:	ret
    f648:	cmp	w4, w6, uxtb
    f64c:	and	w1, w6, #0xff
    f650:	b.cc	f644 <gcc_cp_fe_context@@Base+0x53cc>  // b.lo, b.ul, b.last
    f654:	mov	w6, #0x1                   	// #1
    f658:	asr	w2, w1, #3
    f65c:	and	w0, w1, #0x7
    f660:	cmp	w4, w1
    f664:	add	w1, w1, #0x1
    f668:	lsl	w0, w6, w0
    f66c:	ldrb	w3, [x5, w2, sxtw]
    f670:	orr	w0, w0, w3
    f674:	strb	w0, [x5, w2, sxtw]
    f678:	b.ne	f658 <gcc_cp_fe_context@@Base+0x53e0>  // b.any
    f67c:	mov	w0, #0x0                   	// #0
    f680:	b	f644 <gcc_cp_fe_context@@Base+0x53cc>
    f684:	mov	w0, #0xb                   	// #11
    f688:	ret
    f68c:	nop
    f690:	stp	x29, x30, [sp, #-128]!
    f694:	mov	w1, #0x0                   	// #0
    f698:	mov	x2, #0x100                 	// #256
    f69c:	mov	x29, sp
    f6a0:	stp	x23, x24, [sp, #48]
    f6a4:	mov	x24, x0
    f6a8:	mov	w0, #0x5                   	// #5
    f6ac:	stp	x21, x22, [sp, #32]
    f6b0:	adrp	x22, 17000 <xexit@@Base+0x1a0>
    f6b4:	add	x22, x22, #0x994
    f6b8:	ldr	x21, [x24, #32]
    f6bc:	stp	x19, x20, [sp, #16]
    f6c0:	mov	w20, #0x1                   	// #1
    f6c4:	stp	x25, x26, [sp, #64]
    f6c8:	stp	x27, x28, [sp, #80]
    f6cc:	sub	sp, sp, #0x30
    f6d0:	adrp	x28, 2c000 <xexit@@Base+0x151a0>
    f6d4:	str	w0, [x29, #124]
    f6d8:	mov	x0, x21
    f6dc:	ldr	x23, [x24]
    f6e0:	mov	x19, sp
    f6e4:	ldr	x26, [x24, #16]
    f6e8:	bl	5390 <memset@plt>
    f6ec:	ldrb	w0, [x24, #56]
    f6f0:	mov	w1, #0xfffffff6            	// #-10
    f6f4:	ldr	x28, [x28, #3952]
    f6f8:	and	w0, w0, w1
    f6fc:	add	x26, x23, x26
    f700:	orr	w0, w0, #0x8
    f704:	mov	w27, #0x0                   	// #0
    f708:	strb	w0, [x24, #56]
    f70c:	cmp	x23, x26
    f710:	b.eq	f778 <gcc_cp_fe_context@@Base+0x5500>  // b.none
    f714:	ldrb	w1, [x23]
    f718:	cmp	w1, #0x1
    f71c:	b.eq	f778 <gcc_cp_fe_context@@Base+0x5500>  // b.none
    f720:	cmp	w1, #0x1d
    f724:	b.hi	fa5c <gcc_cp_fe_context@@Base+0x57e4>  // b.pmore
    f728:	ldrh	w0, [x22, w1, uxtw #1]
    f72c:	adr	x1, f738 <gcc_cp_fe_context@@Base+0x54c0>
    f730:	add	x0, x1, w0, sxth #2
    f734:	br	x0
    f738:	adrp	x1, 2d000 <xexit@@Base+0x161a0>
    f73c:	add	x1, x1, #0x600
    f740:	mov	x2, #0x0                   	// #0
    f744:	mov	w4, #0x1                   	// #1
    f748:	ldrb	w3, [x2, x1]
    f74c:	cmp	w3, #0x1
    f750:	b.eq	f758 <gcc_cp_fe_context@@Base+0x54e0>  // b.none
    f754:	strb	w4, [x21, x2]
    f758:	add	x2, x2, #0x1
    f75c:	cmp	x2, #0x100
    f760:	b.ne	f748 <gcc_cp_fe_context@@Base+0x54d0>  // b.any
    f764:	mov	x23, x26
    f768:	mov	w20, #0x0                   	// #0
    f76c:	cmp	x23, x26
    f770:	b.ne	f714 <gcc_cp_fe_context@@Base+0x549c>  // b.any
    f774:	nop
    f778:	ldrb	w0, [x24, #56]
    f77c:	ubfx	x2, x0, #0, #1
    f780:	orr	w2, w20, w2
    f784:	and	w2, w2, #0x1
    f788:	cbnz	w27, f878 <gcc_cp_fe_context@@Base+0x5600>
    f78c:	mov	w1, w0
    f790:	mov	w0, #0x0                   	// #0
    f794:	bfxil	w1, w2, #0, #1
    f798:	strb	w1, [x24, #56]
    f79c:	mov	sp, x29
    f7a0:	ldp	x19, x20, [sp, #16]
    f7a4:	ldp	x21, x22, [sp, #32]
    f7a8:	ldp	x23, x24, [sp, #48]
    f7ac:	ldp	x25, x26, [sp, #64]
    f7b0:	ldp	x27, x28, [sp, #80]
    f7b4:	ldp	x29, x30, [sp], #128
    f7b8:	ret
    f7bc:	adrp	x1, 2d000 <xexit@@Base+0x161a0>
    f7c0:	add	x1, x1, #0x600
    f7c4:	mov	x2, #0x0                   	// #0
    f7c8:	ldrb	w3, [x2, x1]
    f7cc:	cmp	w3, #0x1
    f7d0:	b.ne	f7d8 <gcc_cp_fe_context@@Base+0x5560>  // b.any
    f7d4:	strb	w3, [x21, x2]
    f7d8:	add	x2, x2, #0x1
    f7dc:	cmp	x2, #0x100
    f7e0:	b.ne	f7c8 <gcc_cp_fe_context@@Base+0x5550>  // b.any
    f7e4:	b	f764 <gcc_cp_fe_context@@Base+0x54ec>
    f7e8:	mov	w25, #0x0                   	// #0
    f7ec:	ldrsb	w4, [x23, #2]
    f7f0:	add	x5, x23, #0x3
    f7f4:	ldrb	w0, [x23, #1]
    f7f8:	add	w4, w0, w4, lsl #8
    f7fc:	add	x4, x5, w4, sxtw
    f800:	cmp	x4, x26
    f804:	b.cs	fa2c <gcc_cp_fe_context@@Base+0x57b4>  // b.hs, b.nlast
    f808:	ldr	w2, [x29, #124]
    f80c:	cmp	w2, w27
    f810:	b.ne	f860 <gcc_cp_fe_context@@Base+0x55e8>  // b.any
    f814:	ldr	w0, [x28]
    f818:	mov	w1, #0x13                  	// #19
    f81c:	stp	x5, x4, [x29, #104]
    f820:	mul	w0, w0, w1
    f824:	mov	w1, w2
    f828:	cmp	w2, w0
    f82c:	b.hi	fa4c <gcc_cp_fe_context@@Base+0x57d4>  // b.pmore
    f830:	lsl	w3, w1, #1
    f834:	ubfiz	x0, x2, #4, #31
    f838:	sub	sp, sp, x0
    f83c:	ubfiz	x2, x1, #3, #32
    f840:	mov	x0, sp
    f844:	mov	x1, x19
    f848:	str	w3, [x29, #124]
    f84c:	bl	5210 <memcpy@plt>
    f850:	ldp	x5, x4, [x29, #104]
    f854:	mov	x19, x0
    f858:	ldr	w3, [x29, #124]
    f85c:	str	w3, [x29, #124]
    f860:	str	x4, [x19, w27, uxtw #3]
    f864:	add	w27, w27, #0x1
    f868:	add	x23, x23, #0x5
    f86c:	cmp	w25, #0x0
    f870:	csel	x23, x23, x5, ne  // ne = any
    f874:	b	f70c <gcc_cp_fe_context@@Base+0x5494>
    f878:	sub	w27, w27, #0x1
    f87c:	bfxil	w0, w2, #0, #1
    f880:	mov	w20, #0x1                   	// #1
    f884:	strb	w0, [x24, #56]
    f888:	ldr	x23, [x19, w27, uxtw #3]
    f88c:	b	f70c <gcc_cp_fe_context@@Base+0x5494>
    f890:	ldrsb	w0, [x23, #4]
    f894:	mov	w25, #0x1                   	// #1
    f898:	ldrb	w1, [x23, #3]
    f89c:	add	w0, w1, w0, lsl #8
    f8a0:	cbz	w0, f7ec <gcc_cp_fe_context@@Base+0x5574>
    f8a4:	add	x23, x23, #0x5
    f8a8:	b	f70c <gcc_cp_fe_context@@Base+0x5494>
    f8ac:	add	x23, x23, #0x1
    f8b0:	b	f70c <gcc_cp_fe_context@@Base+0x5494>
    f8b4:	ldrb	w0, [x23, #2]
    f8b8:	mov	w1, #0x1                   	// #1
    f8bc:	mov	x23, x26
    f8c0:	mov	w20, #0x0                   	// #0
    f8c4:	strb	w1, [x21, x0]
    f8c8:	b	f70c <gcc_cp_fe_context@@Base+0x5494>
    f8cc:	ldrb	w25, [x21, #10]
    f8d0:	mov	x0, x21
    f8d4:	mov	x2, #0x100                 	// #256
    f8d8:	mov	w1, #0x1                   	// #1
    f8dc:	bl	5390 <memset@plt>
    f8e0:	ldr	x0, [x24, #24]
    f8e4:	tbz	w0, #6, fa3c <gcc_cp_fe_context@@Base+0x57c4>
    f8e8:	ldrb	w0, [x24, #56]
    f8ec:	and	w20, w0, #0x1
    f8f0:	tbnz	w0, #0, fa54 <gcc_cp_fe_context@@Base+0x57dc>
    f8f4:	mov	x23, x26
    f8f8:	b	f70c <gcc_cp_fe_context@@Base+0x5494>
    f8fc:	ldrb	w0, [x23, #1]
    f900:	lsl	w0, w0, #3
    f904:	sub	w1, w0, #0x1
    f908:	cbz	w0, f764 <gcc_cp_fe_context@@Base+0x54ec>
    f90c:	sxtw	x1, w1
    f910:	mov	w4, #0x1                   	// #1
    f914:	nop
    f918:	asr	w0, w1, #3
    f91c:	and	w3, w1, #0x7
    f920:	add	x0, x23, w0, sxtw
    f924:	ldrb	w2, [x0, #2]
    f928:	asr	w0, w2, w3
    f92c:	tbz	w0, #0, f934 <gcc_cp_fe_context@@Base+0x56bc>
    f930:	strb	w4, [x21, x1]
    f934:	sub	x1, x1, #0x1
    f938:	cmn	w1, #0x1
    f93c:	b.ne	f918 <gcc_cp_fe_context@@Base+0x56a0>  // b.any
    f940:	b	f764 <gcc_cp_fe_context@@Base+0x54ec>
    f944:	ldrb	w0, [x23, #1]
    f948:	lsl	w0, w0, #3
    f94c:	cmp	w0, #0xff
    f950:	b.gt	f974 <gcc_cp_fe_context@@Base+0x56fc>
    f954:	mov	w2, #0xff                  	// #255
    f958:	sub	w2, w2, w0
    f95c:	add	x2, x2, #0x1
    f960:	add	x0, x21, w0, sxtw
    f964:	mov	w1, #0x1                   	// #1
    f968:	bl	5390 <memset@plt>
    f96c:	ldrb	w0, [x23, #1]
    f970:	lsl	w0, w0, #3
    f974:	sub	w1, w0, #0x1
    f978:	cbz	w0, f764 <gcc_cp_fe_context@@Base+0x54ec>
    f97c:	sxtw	x1, w1
    f980:	mov	w4, #0x1                   	// #1
    f984:	nop
    f988:	asr	w0, w1, #3
    f98c:	and	w3, w1, #0x7
    f990:	add	x0, x23, w0, sxtw
    f994:	ldrb	w2, [x0, #2]
    f998:	asr	w0, w2, w3
    f99c:	tbnz	w0, #0, f9a4 <gcc_cp_fe_context@@Base+0x572c>
    f9a0:	strb	w4, [x21, x1]
    f9a4:	sub	x1, x1, #0x1
    f9a8:	cmn	w1, #0x1
    f9ac:	b.ne	f988 <gcc_cp_fe_context@@Base+0x5710>  // b.any
    f9b0:	b	f764 <gcc_cp_fe_context@@Base+0x54ec>
    f9b4:	add	x23, x23, #0x3
    f9b8:	b	f70c <gcc_cp_fe_context@@Base+0x5494>
    f9bc:	ldrb	w1, [x24, #56]
    f9c0:	mov	w0, #0x0                   	// #0
    f9c4:	orr	w1, w1, #0x1
    f9c8:	strb	w1, [x24, #56]
    f9cc:	b	f79c <gcc_cp_fe_context@@Base+0x5524>
    f9d0:	ldrsb	w0, [x23, #2]
    f9d4:	ldrb	w1, [x23, #1]
    f9d8:	add	w0, w1, w0, lsl #8
    f9dc:	cmp	w0, #0x0
    f9e0:	sxtw	x0, w0
    f9e4:	add	x0, x0, #0x3
    f9e8:	add	x23, x23, x0
    f9ec:	b.gt	f70c <gcc_cp_fe_context@@Base+0x5494>
    f9f0:	ldrb	w0, [x23]
    f9f4:	cmp	w0, #0xf
    f9f8:	ccmp	w0, #0x15, #0x4, ne  // ne = any
    f9fc:	b.ne	f70c <gcc_cp_fe_context@@Base+0x5494>  // b.any
    fa00:	ldrsb	w0, [x23, #2]
    fa04:	add	x1, x23, #0x3
    fa08:	ldrb	w23, [x23, #1]
    fa0c:	add	w23, w23, w0, lsl #8
    fa10:	add	x23, x1, w23, sxtw
    fa14:	cbz	w27, f70c <gcc_cp_fe_context@@Base+0x5494>
    fa18:	sub	w0, w27, #0x1
    fa1c:	ldr	x1, [x19, w0, uxtw #3]
    fa20:	cmp	x1, x23
    fa24:	csel	w27, w27, w0, ne  // ne = any
    fa28:	b	f70c <gcc_cp_fe_context@@Base+0x5494>
    fa2c:	ldrb	w0, [x24, #56]
    fa30:	orr	w0, w0, #0x1
    fa34:	strb	w0, [x24, #56]
    fa38:	b	f868 <gcc_cp_fe_context@@Base+0x55f0>
    fa3c:	mov	x23, x26
    fa40:	mov	w20, #0x0                   	// #0
    fa44:	strb	w25, [x21, #10]
    fa48:	b	f70c <gcc_cp_fe_context@@Base+0x5494>
    fa4c:	mov	w0, #0xfffffffe            	// #-2
    fa50:	b	f79c <gcc_cp_fe_context@@Base+0x5524>
    fa54:	mov	w0, #0x0                   	// #0
    fa58:	b	f79c <gcc_cp_fe_context@@Base+0x5524>
    fa5c:	bl	56a0 <abort@plt>
    fa60:	sub	sp, sp, #0x250
    fa64:	stp	x29, x30, [sp]
    fa68:	mov	x29, sp
    fa6c:	str	x0, [sp, #112]
    fa70:	str	x0, [sp, #456]
    fa74:	add	x0, x0, x1
    fa78:	ldr	x1, [x3, #40]
    fa7c:	stp	x19, x20, [sp, #16]
    fa80:	stp	x21, x22, [sp, #32]
    fa84:	mov	x22, x1
    fa88:	stp	x23, x24, [sp, #48]
    fa8c:	mov	x23, x3
    fa90:	stp	x25, x26, [sp, #64]
    fa94:	mov	x26, x2
    fa98:	str	x0, [sp, #104]
    fa9c:	mov	x0, #0x500                 	// #1280
    faa0:	bl	5670 <malloc@plt>
    faa4:	str	x0, [sp, #120]
    faa8:	cbz	x0, 10e44 <gcc_cp_fe_context@@Base+0x6bcc>
    faac:	adrp	x20, 2d000 <xexit@@Base+0x161a0>
    fab0:	add	x19, x20, #0x600
    fab4:	ldrb	w0, [x23, #56]
    fab8:	mov	w2, #0xffffff97            	// #-105
    fabc:	stp	xzr, x26, [x23, #16]
    fac0:	ldr	w1, [x19, #256]
    fac4:	and	w0, w0, w2
    fac8:	str	xzr, [x23, #48]
    facc:	strb	w0, [x23, #56]
    fad0:	cbz	w1, ff20 <gcc_cp_fe_context@@Base+0x5ca8>
    fad4:	ldp	x21, x0, [x23]
    fad8:	cbz	x0, fcf4 <gcc_cp_fe_context@@Base+0x5a7c>
    fadc:	ldr	x1, [sp, #112]
    fae0:	ldr	x0, [sp, #104]
    fae4:	cmp	x1, x0
    fae8:	b.eq	10b8c <gcc_cp_fe_context@@Base+0x6914>  // b.none
    faec:	and	x0, x26, #0x3fffe0
    faf0:	mov	x24, #0x0                   	// #0
    faf4:	mov	x2, x0
    faf8:	mov	x0, #0x1200                	// #4608
    fafc:	and	x0, x26, x0
    fb00:	str	x0, [sp, #184]
    fb04:	mov	x0, #0x402                 	// #1026
    fb08:	and	x0, x26, x0
    fb0c:	str	x0, [sp, #192]
    fb10:	and	x0, x26, #0x8000
    fb14:	str	x0, [sp, #160]
    fb18:	and	x0, x26, #0x8
    fb1c:	str	x0, [sp, #152]
    fb20:	and	x0, x26, #0x2000
    fb24:	str	x0, [sp, #136]
    fb28:	and	x0, x26, #0x1000
    fb2c:	str	x0, [sp, #168]
    fb30:	and	x0, x26, #0x10
    fb34:	str	x0, [sp, #224]
    fb38:	and	x0, x26, #0x200000
    fb3c:	str	x0, [sp, #256]
    fb40:	and	x0, x26, #0x80000
    fb44:	str	x0, [sp, #240]
    fb48:	and	x0, x26, #0x4000
    fb4c:	str	x0, [sp, #312]
    fb50:	and	x0, x26, #0x2
    fb54:	str	x0, [sp, #128]
    fb58:	and	x0, x26, #0x20000
    fb5c:	str	x0, [sp, #272]
    fb60:	and	x0, x26, #0x100
    fb64:	str	x0, [sp, #288]
    fb68:	and	x0, x26, #0x4
    fb6c:	str	x0, [sp, #248]
    fb70:	and	x0, x26, #0x20
    fb74:	str	x0, [sp, #216]
    fb78:	and	x0, x26, #0x40
    fb7c:	str	x0, [sp, #280]
    fb80:	and	x0, x26, #0x800
    fb84:	str	x0, [sp, #200]
    fb88:	and	x0, x26, #0x400
    fb8c:	str	x0, [sp, #208]
    fb90:	and	x0, x26, #0x200
    fb94:	str	x0, [sp, #176]
    fb98:	add	x0, sp, #0x1d0
    fb9c:	str	x0, [sp, #264]
    fba0:	mov	w0, #0x20                  	// #32
    fba4:	and	x2, x2, #0xffffffffffe0003f
    fba8:	str	w0, [sp, #328]
    fbac:	mov	x0, x23
    fbb0:	mov	x23, x21
    fbb4:	mov	x25, x0
    fbb8:	stp	x27, x28, [sp, #80]
    fbbc:	mov	x28, #0x0                   	// #0
    fbc0:	mov	x27, x28
    fbc4:	str	x26, [sp, #232]
    fbc8:	str	x2, [sp, #304]
    fbcc:	mov	x2, #0x8400                	// #33792
    fbd0:	and	x2, x26, x2
    fbd4:	mov	x26, x24
    fbd8:	mov	x24, x22
    fbdc:	stp	wzr, wzr, [sp, #144]
    fbe0:	str	x2, [sp, #296]
    fbe4:	add	x0, x1, #0x1
    fbe8:	str	x0, [sp, #456]
    fbec:	ldrb	w19, [x1]
    fbf0:	cbz	x24, fbfc <gcc_cp_fe_context@@Base+0x5984>
    fbf4:	and	x19, x19, #0xff
    fbf8:	ldrb	w19, [x24, x19]
    fbfc:	cmp	w19, #0x2e
    fc00:	b.eq	101c8 <gcc_cp_fe_context@@Base+0x5f50>  // b.none
    fc04:	b.hi	fe4c <gcc_cp_fe_context@@Base+0x5bd4>  // b.pmore
    fc08:	cmp	w19, #0x28
    fc0c:	b.eq	10130 <gcc_cp_fe_context@@Base+0x5eb8>  // b.none
    fc10:	b.ls	fd54 <gcc_cp_fe_context@@Base+0x5adc>  // b.plast
    fc14:	cmp	w19, #0x2a
    fc18:	b.eq	fc30 <gcc_cp_fe_context@@Base+0x59b8>  // b.none
    fc1c:	cmp	w19, #0x2b
    fc20:	b.ne	fd20 <gcc_cp_fe_context@@Base+0x5aa8>  // b.any
    fc24:	ldr	x1, [sp, #192]
    fc28:	cbnz	x1, fc44 <gcc_cp_fe_context@@Base+0x59cc>
    fc2c:	nop
    fc30:	cbnz	x26, 10834 <gcc_cp_fe_context@@Base+0x65bc>
    fc34:	ldr	x1, [sp, #216]
    fc38:	cbnz	x1, 12290 <gcc_cp_fe_context@@Base+0x8018>
    fc3c:	ldr	x1, [sp, #224]
    fc40:	cbnz	x1, 10c04 <gcc_cp_fe_context@@Base+0x698c>
    fc44:	ldp	x20, x2, [x25]
    fc48:	sub	x0, x21, x20
    fc4c:	cbz	x27, fc6c <gcc_cp_fe_context@@Base+0x59f4>
    fc50:	ldrb	w3, [x27]
    fc54:	and	x1, x3, #0xff
    fc58:	cmp	w3, #0xff
    fc5c:	add	x1, x1, #0x1
    fc60:	add	x1, x27, x1
    fc64:	ccmp	x1, x21, #0x0, ne  // ne = any
    fc68:	b.eq	10008 <gcc_cp_fe_context@@Base+0x5d90>  // b.none
    fc6c:	add	x0, x0, #0x2
    fc70:	mov	x26, x21
    fc74:	cmp	x0, x2
    fc78:	b.hi	fcd4 <gcc_cp_fe_context@@Base+0x5a5c>  // b.pmore
    fc7c:	b	ff74 <gcc_cp_fe_context@@Base+0x5cfc>
    fc80:	str	x1, [x25, #8]
    fc84:	mov	x0, x20
    fc88:	bl	53b0 <realloc@plt>
    fc8c:	str	x0, [x25]
    fc90:	subs	x1, x0, x20
    fc94:	add	x3, x28, x1
    fc98:	add	x2, x26, x1
    fc9c:	mov	x20, x0
    fca0:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
    fca4:	b.eq	fcc0 <gcc_cp_fe_context@@Base+0x5a48>  // b.none
    fca8:	cmp	x28, #0x0
    fcac:	add	x21, x21, x1
    fcb0:	csel	x28, x3, x28, ne  // ne = any
    fcb4:	cmp	x26, #0x0
    fcb8:	csel	x26, x2, x26, ne  // ne = any
    fcbc:	add	x23, x23, x1
    fcc0:	ldr	x2, [x25, #8]
    fcc4:	sub	x0, x21, x0
    fcc8:	add	x0, x0, #0x2
    fccc:	cmp	x0, x2
    fcd0:	b.ls	ff74 <gcc_cp_fe_context@@Base+0x5cfc>  // b.plast
    fcd4:	lsl	x1, x2, #1
    fcd8:	cmp	x2, #0x10, lsl #12
    fcdc:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
    fce0:	cmp	x1, #0x10, lsl #12
    fce4:	b.ls	fc80 <gcc_cp_fe_context@@Base+0x5a08>  // b.plast
    fce8:	mov	x1, #0x10000               	// #65536
    fcec:	str	x1, [x25, #8]
    fcf0:	b	fc84 <gcc_cp_fe_context@@Base+0x5a0c>
    fcf4:	cbz	x21, 10108 <gcc_cp_fe_context@@Base+0x5e90>
    fcf8:	mov	x0, x21
    fcfc:	mov	x1, #0x20                  	// #32
    fd00:	bl	53b0 <realloc@plt>
    fd04:	mov	x21, x0
    fd08:	str	x0, [x23]
    fd0c:	cbz	x21, 11030 <gcc_cp_fe_context@@Base+0x6db8>
    fd10:	mov	x0, #0x20                  	// #32
    fd14:	str	x0, [x23, #8]
    fd18:	ldr	x1, [sp, #456]
    fd1c:	b	fae0 <gcc_cp_fe_context@@Base+0x5868>
    fd20:	cmp	w19, #0x29
    fd24:	b.ne	fc44 <gcc_cp_fe_context@@Base+0x59cc>  // b.any
    fd28:	ldr	x0, [sp, #136]
    fd2c:	cbz	x0, fc44 <gcc_cp_fe_context@@Base+0x59cc>
    fd30:	cbnz	x28, 10d0c <gcc_cp_fe_context@@Base+0x6a94>
    fd34:	ldr	w0, [sp, #144]
    fd38:	cbnz	w0, 110fc <gcc_cp_fe_context@@Base+0x6e84>
    fd3c:	ldr	x0, [sp, #272]
    fd40:	cbz	x0, 127f4 <gcc_cp_fe_context@@Base+0x857c>
    fd44:	ldp	x20, x2, [x25]
    fd48:	mov	w19, #0x29                  	// #41
    fd4c:	sub	x0, x21, x20
    fd50:	b	fc4c <gcc_cp_fe_context@@Base+0x59d4>
    fd54:	cmp	w19, #0xa
    fd58:	b.eq	1011c <gcc_cp_fe_context@@Base+0x5ea4>  // b.none
    fd5c:	cmp	w19, #0x24
    fd60:	b.ne	fc44 <gcc_cp_fe_context@@Base+0x59cc>  // b.any
    fd64:	ldp	x20, x2, [x25]
    fd68:	ldr	x6, [sp, #104]
    fd6c:	cmp	x0, x6
    fd70:	sub	x0, x21, x20
    fd74:	b.eq	fe20 <gcc_cp_fe_context@@Base+0x5ba8>  // b.none
    fd78:	ldr	x3, [sp, #152]
    fd7c:	cbnz	x3, fe20 <gcc_cp_fe_context@@Base+0x5ba8>
    fd80:	ldrb	w4, [x1, #1]
    fd84:	add	x3, x1, #0x2
    fd88:	cmp	w4, #0x5c
    fd8c:	cset	w5, eq  // eq = none
    fd90:	cmp	x6, x3
    fd94:	b.ls	10ce8 <gcc_cp_fe_context@@Base+0x6a70>  // b.plast
    fd98:	ldr	x6, [sp, #136]
    fd9c:	cbnz	x6, 10ef4 <gcc_cp_fe_context@@Base+0x6c7c>
    fda0:	cmp	x3, #0x0
    fda4:	ccmp	w5, #0x0, #0x4, ne  // ne = any
    fda8:	b.eq	10cf4 <gcc_cp_fe_context@@Base+0x6a7c>  // b.none
    fdac:	ldrb	w1, [x1, #2]
    fdb0:	cmp	w1, #0x29
    fdb4:	b.eq	fe20 <gcc_cp_fe_context@@Base+0x5ba8>  // b.none
    fdb8:	ldr	x3, [sp, #160]
    fdbc:	cbnz	x3, fc4c <gcc_cp_fe_context@@Base+0x59d4>
    fdc0:	cmp	w1, #0x7c
    fdc4:	b.ne	fc4c <gcc_cp_fe_context@@Base+0x59d4>  // b.any
    fdc8:	b	fe20 <gcc_cp_fe_context@@Base+0x5ba8>
    fdcc:	str	x1, [x25, #8]
    fdd0:	mov	x0, x20
    fdd4:	bl	53b0 <realloc@plt>
    fdd8:	str	x0, [x25]
    fddc:	subs	x1, x0, x20
    fde0:	add	x4, x28, x1
    fde4:	add	x3, x26, x1
    fde8:	add	x2, x27, x1
    fdec:	mov	x20, x0
    fdf0:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
    fdf4:	b.eq	fe18 <gcc_cp_fe_context@@Base+0x5ba0>  // b.none
    fdf8:	cmp	x28, #0x0
    fdfc:	add	x21, x21, x1
    fe00:	csel	x28, x4, x28, ne  // ne = any
    fe04:	cmp	x26, #0x0
    fe08:	csel	x26, x3, x26, ne  // ne = any
    fe0c:	cmp	x27, #0x0
    fe10:	csel	x27, x2, x27, ne  // ne = any
    fe14:	add	x23, x23, x1
    fe18:	ldr	x2, [x25, #8]
    fe1c:	sub	x0, x21, x0
    fe20:	add	x0, x0, #0x1
    fe24:	cmp	x0, x2
    fe28:	b.ls	10ee4 <gcc_cp_fe_context@@Base+0x6c6c>  // b.plast
    fe2c:	lsl	x1, x2, #1
    fe30:	cmp	x2, #0x10, lsl #12
    fe34:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
    fe38:	cmp	x1, #0x10, lsl #12
    fe3c:	b.ls	fdcc <gcc_cp_fe_context@@Base+0x5b54>  // b.plast
    fe40:	mov	x1, #0x10000               	// #65536
    fe44:	str	x1, [x25, #8]
    fe48:	b	fdd0 <gcc_cp_fe_context@@Base+0x5b58>
    fe4c:	cmp	w19, #0x5e
    fe50:	b.eq	10264 <gcc_cp_fe_context@@Base+0x5fec>  // b.none
    fe54:	b.ls	fe84 <gcc_cp_fe_context@@Base+0x5c0c>  // b.plast
    fe58:	cmp	w19, #0x7b
    fe5c:	b.eq	10358 <gcc_cp_fe_context@@Base+0x60e0>  // b.none
    fe60:	cmp	w19, #0x7c
    fe64:	b.ne	fc44 <gcc_cp_fe_context@@Base+0x59cc>  // b.any
    fe68:	ldp	x20, x2, [x25]
    fe6c:	ldr	x1, [sp, #160]
    fe70:	sub	x0, x21, x20
    fe74:	cbz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
    fe78:	ldr	x1, [sp, #208]
    fe7c:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
    fe80:	b	100dc <gcc_cp_fe_context@@Base+0x5e64>
    fe84:	cmp	w19, #0x5b
    fe88:	b.eq	1041c <gcc_cp_fe_context@@Base+0x61a4>  // b.none
    fe8c:	cmp	w19, #0x5c
    fe90:	b.ne	feec <gcc_cp_fe_context@@Base+0x5c74>  // b.any
    fe94:	ldr	x2, [sp, #104]
    fe98:	cmp	x0, x2
    fe9c:	b.eq	10e4c <gcc_cp_fe_context@@Base+0x6bd4>  // b.none
    fea0:	add	x0, x1, #0x2
    fea4:	str	x0, [sp, #456]
    fea8:	ldrb	w19, [x1, #1]
    feac:	cmp	w19, #0x3f
    feb0:	b.eq	116c0 <gcc_cp_fe_context@@Base+0x7448>  // b.none
    feb4:	b.hi	104ec <gcc_cp_fe_context@@Base+0x6274>  // b.pmore
    feb8:	cmp	w19, #0x2b
    febc:	b.eq	116c0 <gcc_cp_fe_context@@Base+0x7448>  // b.none
    fec0:	b.ls	104b8 <gcc_cp_fe_context@@Base+0x6240>  // b.plast
    fec4:	cmp	w19, #0x3c
    fec8:	b.eq	1162c <gcc_cp_fe_context@@Base+0x73b4>  // b.none
    fecc:	b.ls	10720 <gcc_cp_fe_context@@Base+0x64a8>  // b.plast
    fed0:	cmp	w19, #0x3e
    fed4:	b.ne	104e0 <gcc_cp_fe_context@@Base+0x6268>  // b.any
    fed8:	ldp	x20, x2, [x25]
    fedc:	ldr	x1, [sp, #240]
    fee0:	sub	x0, x21, x20
    fee4:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
    fee8:	b	10c78 <gcc_cp_fe_context@@Base+0x6a00>
    feec:	cmp	w19, #0x3f
    fef0:	b.eq	fc24 <gcc_cp_fe_context@@Base+0x59ac>  // b.none
    fef4:	b	fc44 <gcc_cp_fe_context@@Base+0x59cc>
    fef8:	ldp	x27, x28, [sp, #80]
    fefc:	mov	w19, #0xf                   	// #15
    ff00:	mov	w0, w19
    ff04:	ldp	x29, x30, [sp]
    ff08:	ldp	x19, x20, [sp, #16]
    ff0c:	ldp	x21, x22, [sp, #32]
    ff10:	ldp	x23, x24, [sp, #48]
    ff14:	ldp	x25, x26, [sp, #64]
    ff18:	add	sp, sp, #0x250
    ff1c:	ret
    ff20:	mov	x2, #0x100                 	// #256
    ff24:	mov	x0, x19
    ff28:	bl	5390 <memset@plt>
    ff2c:	bl	54d0 <__ctype_b_loc@plt>
    ff30:	mov	x3, x19
    ff34:	mov	x1, #0x0                   	// #0
    ff38:	mov	w4, #0x1                   	// #1
    ff3c:	nop
    ff40:	ldr	x2, [x0]
    ff44:	ldrh	w2, [x2, x1, lsl #1]
    ff48:	tbz	w2, #3, ff50 <gcc_cp_fe_context@@Base+0x5cd8>
    ff4c:	strb	w4, [x1, x3]
    ff50:	add	x1, x1, #0x1
    ff54:	cmp	x1, #0x100
    ff58:	b.ne	ff40 <gcc_cp_fe_context@@Base+0x5cc8>  // b.any
    ff5c:	add	x20, x20, #0x600
    ff60:	mov	w1, #0x1                   	// #1
    ff64:	mov	w0, #0x1                   	// #1
    ff68:	strb	w1, [x20, #95]
    ff6c:	str	w0, [x20, #256]
    ff70:	b	fad4 <gcc_cp_fe_context@@Base+0x585c>
    ff74:	mov	x22, x21
    ff78:	mov	w0, #0x2                   	// #2
    ff7c:	add	x27, x21, #0x1
    ff80:	strh	w0, [x22], #2
    ff84:	ldp	x20, x2, [x25]
    ff88:	sub	x0, x22, x20
    ff8c:	b	ffdc <gcc_cp_fe_context@@Base+0x5d64>
    ff90:	str	x1, [x25, #8]
    ff94:	mov	x0, x20
    ff98:	bl	53b0 <realloc@plt>
    ff9c:	str	x0, [x25]
    ffa0:	subs	x1, x0, x20
    ffa4:	add	x3, x28, x1
    ffa8:	add	x2, x26, x1
    ffac:	mov	x20, x0
    ffb0:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
    ffb4:	b.eq	ffd4 <gcc_cp_fe_context@@Base+0x5d5c>  // b.none
    ffb8:	cmp	x28, #0x0
    ffbc:	add	x22, x22, x1
    ffc0:	csel	x28, x3, x28, ne  // ne = any
    ffc4:	cmp	x26, #0x0
    ffc8:	csel	x26, x2, x26, ne  // ne = any
    ffcc:	add	x23, x23, x1
    ffd0:	add	x27, x27, x1
    ffd4:	ldr	x2, [x25, #8]
    ffd8:	sub	x0, x22, x0
    ffdc:	add	x0, x0, #0x1
    ffe0:	cmp	x0, x2
    ffe4:	b.ls	10058 <gcc_cp_fe_context@@Base+0x5de0>  // b.plast
    ffe8:	lsl	x1, x2, #1
    ffec:	cmp	x2, #0x10, lsl #12
    fff0:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
    fff4:	cmp	x1, #0x10, lsl #12
    fff8:	b.ls	ff90 <gcc_cp_fe_context@@Base+0x5d18>  // b.plast
    fffc:	mov	x1, #0x10000               	// #65536
   10000:	str	x1, [x25, #8]
   10004:	b	ff94 <gcc_cp_fe_context@@Base+0x5d1c>
   10008:	ldr	x3, [sp, #456]
   1000c:	mov	w4, #0x5e                  	// #94
   10010:	ldrb	w1, [x3]
   10014:	cmp	w1, #0x2a
   10018:	ccmp	w1, w4, #0x4, ne  // ne = any
   1001c:	b.eq	fc6c <gcc_cp_fe_context@@Base+0x59f4>  // b.none
   10020:	ldr	x4, [sp, #128]
   10024:	cbnz	x4, 10080 <gcc_cp_fe_context@@Base+0x5e08>
   10028:	cmp	w1, #0x2b
   1002c:	mov	w4, #0x3f                  	// #63
   10030:	ccmp	w1, w4, #0x4, ne  // ne = any
   10034:	b.eq	fc6c <gcc_cp_fe_context@@Base+0x59f4>  // b.none
   10038:	ldr	x4, [sp, #176]
   1003c:	cbz	x4, 10e6c <gcc_cp_fe_context@@Base+0x6bf4>
   10040:	ldr	x4, [sp, #168]
   10044:	cbz	x4, 10a3c <gcc_cp_fe_context@@Base+0x67c4>
   10048:	cmp	w1, #0x7b
   1004c:	mov	x22, x21
   10050:	b.ne	ffdc <gcc_cp_fe_context@@Base+0x5d64>  // b.any
   10054:	b	fc6c <gcc_cp_fe_context@@Base+0x59f4>
   10058:	mov	x21, x22
   1005c:	strb	w19, [x21], #1
   10060:	ldrb	w0, [x27]
   10064:	add	w0, w0, #0x1
   10068:	strb	w0, [x27]
   1006c:	ldr	x1, [sp, #456]
   10070:	ldr	x0, [sp, #104]
   10074:	cmp	x0, x1
   10078:	b.ne	fbe4 <gcc_cp_fe_context@@Base+0x596c>  // b.any
   1007c:	b	10b60 <gcc_cp_fe_context@@Base+0x68e8>
   10080:	cmp	w1, #0x5c
   10084:	b.ne	10038 <gcc_cp_fe_context@@Base+0x5dc0>  // b.any
   10088:	ldrb	w4, [x3, #1]
   1008c:	mov	w5, #0x3f                  	// #63
   10090:	cmp	w4, #0x2b
   10094:	ccmp	w4, w5, #0x4, ne  // ne = any
   10098:	b.eq	fc6c <gcc_cp_fe_context@@Base+0x59f4>  // b.none
   1009c:	b	10038 <gcc_cp_fe_context@@Base+0x5dc0>
   100a0:	str	x1, [x25, #8]
   100a4:	mov	x0, x20
   100a8:	bl	53b0 <realloc@plt>
   100ac:	str	x0, [x25]
   100b0:	subs	x1, x0, x20
   100b4:	add	x2, x28, x1
   100b8:	mov	x20, x0
   100bc:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   100c0:	b.eq	100d4 <gcc_cp_fe_context@@Base+0x5e5c>  // b.none
   100c4:	cmp	x28, #0x0
   100c8:	add	x21, x21, x1
   100cc:	csel	x28, x2, x28, ne  // ne = any
   100d0:	add	x23, x23, x1
   100d4:	ldr	x2, [x25, #8]
   100d8:	sub	x0, x21, x0
   100dc:	add	x0, x0, #0x3
   100e0:	cmp	x0, x2
   100e4:	b.ls	11040 <gcc_cp_fe_context@@Base+0x6dc8>  // b.plast
   100e8:	lsl	x1, x2, #1
   100ec:	cmp	x2, #0x10, lsl #12
   100f0:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   100f4:	cmp	x1, #0x10, lsl #12
   100f8:	b.ls	100a0 <gcc_cp_fe_context@@Base+0x5e28>  // b.plast
   100fc:	mov	x1, #0x10000               	// #65536
   10100:	str	x1, [x25, #8]
   10104:	b	100a4 <gcc_cp_fe_context@@Base+0x5e2c>
   10108:	mov	x0, #0x20                  	// #32
   1010c:	bl	5670 <malloc@plt>
   10110:	mov	x21, x0
   10114:	str	x0, [x23]
   10118:	b	fd0c <gcc_cp_fe_context@@Base+0x5a94>
   1011c:	ldp	x20, x2, [x25]
   10120:	ldr	x1, [sp, #200]
   10124:	sub	x0, x21, x20
   10128:	cbnz	x1, fe78 <gcc_cp_fe_context@@Base+0x5c00>
   1012c:	b	fc4c <gcc_cp_fe_context@@Base+0x59d4>
   10130:	ldr	x0, [sp, #136]
   10134:	cbz	x0, fc44 <gcc_cp_fe_context@@Base+0x59cc>
   10138:	ldp	w2, w1, [sp, #144]
   1013c:	ldr	x0, [x25, #48]
   10140:	add	w1, w1, #0x1
   10144:	str	w1, [sp, #148]
   10148:	add	x0, x0, #0x1
   1014c:	ldr	w1, [sp, #328]
   10150:	str	x0, [x25, #48]
   10154:	cmp	w1, w2
   10158:	b.eq	10e1c <gcc_cp_fe_context@@Base+0x6ba4>  // b.none
   1015c:	ldr	w1, [sp, #144]
   10160:	mov	w0, #0x28                  	// #40
   10164:	ldr	x2, [sp, #120]
   10168:	cmp	x28, #0x0
   1016c:	ldr	x19, [x25]
   10170:	umull	x0, w1, w0
   10174:	add	x1, x2, x0
   10178:	sub	x7, x28, x19
   1017c:	sub	x23, x23, x19
   10180:	str	x23, [x2, x0]
   10184:	csinc	x0, xzr, x7, eq  // eq = none
   10188:	str	x0, [x1, #8]
   1018c:	sub	x2, x21, x19
   10190:	ldr	w0, [sp, #148]
   10194:	str	x2, [x1, #24]
   10198:	str	w0, [x1, #32]
   1019c:	cmp	w0, #0xff
   101a0:	b.ls	10da8 <gcc_cp_fe_context@@Base+0x6b30>  // b.plast
   101a4:	ldr	w0, [sp, #144]
   101a8:	mov	x23, x21
   101ac:	mov	x28, #0x0                   	// #0
   101b0:	mov	x26, #0x0                   	// #0
   101b4:	add	w0, w0, #0x1
   101b8:	mov	x27, #0x0                   	// #0
   101bc:	str	w0, [sp, #144]
   101c0:	ldr	x1, [sp, #456]
   101c4:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   101c8:	ldp	x19, x2, [x25]
   101cc:	mov	x26, x21
   101d0:	sub	x0, x21, x19
   101d4:	add	x0, x0, #0x1
   101d8:	cmp	x0, x2
   101dc:	b.hi	10244 <gcc_cp_fe_context@@Base+0x5fcc>  // b.pmore
   101e0:	b	10a58 <gcc_cp_fe_context@@Base+0x67e0>
   101e4:	str	x1, [x25, #8]
   101e8:	mov	x0, x19
   101ec:	bl	53b0 <realloc@plt>
   101f0:	str	x0, [x25]
   101f4:	subs	x1, x0, x19
   101f8:	add	x4, x28, x1
   101fc:	add	x3, x26, x1
   10200:	add	x2, x27, x1
   10204:	mov	x19, x0
   10208:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   1020c:	b.eq	10230 <gcc_cp_fe_context@@Base+0x5fb8>  // b.none
   10210:	cmp	x28, #0x0
   10214:	add	x21, x21, x1
   10218:	csel	x28, x4, x28, ne  // ne = any
   1021c:	cmp	x26, #0x0
   10220:	csel	x26, x3, x26, ne  // ne = any
   10224:	cmp	x27, #0x0
   10228:	csel	x27, x2, x27, ne  // ne = any
   1022c:	add	x23, x23, x1
   10230:	ldr	x2, [x25, #8]
   10234:	sub	x0, x21, x0
   10238:	add	x0, x0, #0x1
   1023c:	cmp	x0, x2
   10240:	b.ls	10a58 <gcc_cp_fe_context@@Base+0x67e0>  // b.plast
   10244:	lsl	x1, x2, #1
   10248:	cmp	x2, #0x10, lsl #12
   1024c:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   10250:	cmp	x1, #0x10, lsl #12
   10254:	b.ls	101e4 <gcc_cp_fe_context@@Base+0x5f6c>  // b.plast
   10258:	mov	x1, #0x10000               	// #65536
   1025c:	str	x1, [x25, #8]
   10260:	b	101e8 <gcc_cp_fe_context@@Base+0x5f70>
   10264:	ldr	x2, [sp, #112]
   10268:	ldr	x20, [x25]
   1026c:	add	x2, x2, #0x1
   10270:	cmp	x0, x2
   10274:	sub	x0, x21, x20
   10278:	ldr	x2, [x25, #8]
   1027c:	b.eq	10310 <gcc_cp_fe_context@@Base+0x6098>  // b.none
   10280:	ldr	x3, [sp, #152]
   10284:	cbnz	x3, 10310 <gcc_cp_fe_context@@Base+0x6098>
   10288:	mov	x3, x1
   1028c:	ldr	x5, [sp, #112]
   10290:	ldrb	w4, [x3, #-1]!
   10294:	cmp	x5, x3
   10298:	b.cs	1033c <gcc_cp_fe_context@@Base+0x60c4>  // b.hs, b.nlast
   1029c:	ldurb	w1, [x1, #-2]
   102a0:	cmp	w1, #0x5c
   102a4:	b.ne	1033c <gcc_cp_fe_context@@Base+0x60c4>  // b.any
   102a8:	cmp	w4, #0x28
   102ac:	b.eq	10310 <gcc_cp_fe_context@@Base+0x6098>  // b.none
   102b0:	cmp	w4, #0x7c
   102b4:	b.ne	fc4c <gcc_cp_fe_context@@Base+0x59d4>  // b.any
   102b8:	b	10310 <gcc_cp_fe_context@@Base+0x6098>
   102bc:	str	x1, [x25, #8]
   102c0:	mov	x0, x20
   102c4:	bl	53b0 <realloc@plt>
   102c8:	str	x0, [x25]
   102cc:	subs	x1, x0, x20
   102d0:	add	x4, x28, x1
   102d4:	add	x3, x26, x1
   102d8:	add	x2, x27, x1
   102dc:	mov	x20, x0
   102e0:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   102e4:	b.eq	10308 <gcc_cp_fe_context@@Base+0x6090>  // b.none
   102e8:	cmp	x28, #0x0
   102ec:	add	x21, x21, x1
   102f0:	csel	x28, x4, x28, ne  // ne = any
   102f4:	cmp	x26, #0x0
   102f8:	csel	x26, x3, x26, ne  // ne = any
   102fc:	cmp	x27, #0x0
   10300:	csel	x27, x2, x27, ne  // ne = any
   10304:	add	x23, x23, x1
   10308:	ldr	x2, [x25, #8]
   1030c:	sub	x0, x21, x0
   10310:	add	x0, x0, #0x1
   10314:	cmp	x0, x2
   10318:	b.ls	10ed4 <gcc_cp_fe_context@@Base+0x6c5c>  // b.plast
   1031c:	lsl	x1, x2, #1
   10320:	cmp	x2, #0x10, lsl #12
   10324:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   10328:	cmp	x1, #0x10, lsl #12
   1032c:	b.ls	102bc <gcc_cp_fe_context@@Base+0x6044>  // b.plast
   10330:	mov	x1, #0x10000               	// #65536
   10334:	str	x1, [x25, #8]
   10338:	b	102c0 <gcc_cp_fe_context@@Base+0x6048>
   1033c:	cmp	w4, #0x28
   10340:	b.eq	10d9c <gcc_cp_fe_context@@Base+0x6b24>  // b.none
   10344:	cmp	w4, #0x7c
   10348:	b.ne	fc4c <gcc_cp_fe_context@@Base+0x59d4>  // b.any
   1034c:	ldr	x1, [sp, #160]
   10350:	cbnz	x1, 10310 <gcc_cp_fe_context@@Base+0x6098>
   10354:	b	fc4c <gcc_cp_fe_context@@Base+0x59d4>
   10358:	ldr	x2, [sp, #184]
   1035c:	mov	x1, #0x1200                	// #4608
   10360:	cmp	x2, x1
   10364:	b.ne	fc44 <gcc_cp_fe_context@@Base+0x59cc>  // b.any
   10368:	ldr	x1, [sp, #104]
   1036c:	cmp	x1, x0
   10370:	b.eq	103ec <gcc_cp_fe_context@@Base+0x6174>  // b.none
   10374:	mov	x2, x0
   10378:	mov	x5, x1
   1037c:	mov	w22, #0xffffffff            	// #-1
   10380:	mov	w4, #0x7fff                	// #32767
   10384:	cbnz	x24, 103b0 <gcc_cp_fe_context@@Base+0x6138>
   10388:	b	10cc8 <gcc_cp_fe_context@@Base+0x6a50>
   1038c:	cmp	w22, w4
   10390:	b.gt	103a8 <gcc_cp_fe_context@@Base+0x6130>
   10394:	cmp	w22, #0x0
   10398:	csel	w22, w22, wzr, ge  // ge = tcont
   1039c:	add	w22, w22, w22, lsl #2
   103a0:	add	w22, w3, w22, lsl #1
   103a4:	sub	w22, w22, #0x30
   103a8:	cmp	x2, x5
   103ac:	b.eq	11470 <gcc_cp_fe_context@@Base+0x71f8>  // b.none
   103b0:	add	x2, x2, #0x1
   103b4:	str	x2, [sp, #456]
   103b8:	ldurb	w1, [x2, #-1]
   103bc:	ldrb	w3, [x24, x1]
   103c0:	sub	w1, w3, #0x30
   103c4:	and	w1, w1, #0xff
   103c8:	cmp	w1, #0x9
   103cc:	b.ls	1038c <gcc_cp_fe_context@@Base+0x6114>  // b.plast
   103d0:	cmp	w3, #0x2c
   103d4:	mov	w1, w22
   103d8:	mov	w4, #0x0                   	// #0
   103dc:	b.eq	11a38 <gcc_cp_fe_context@@Base+0x77c0>  // b.none
   103e0:	cmp	w22, #0x0
   103e4:	ccmp	w4, #0x0, #0x0, ge  // ge = tcont
   103e8:	b.eq	11a18 <gcc_cp_fe_context@@Base+0x77a0>  // b.none
   103ec:	ldr	x1, [sp, #256]
   103f0:	cbz	x1, 1282c <gcc_cp_fe_context@@Base+0x85b4>
   103f4:	ldp	x20, x2, [x25]
   103f8:	str	x0, [sp, #456]
   103fc:	ldr	x1, [sp, #168]
   10400:	mov	w19, #0x7b                  	// #123
   10404:	sub	x0, x21, x20
   10408:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   1040c:	cbz	x24, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   10410:	and	x19, x19, #0xff
   10414:	ldrb	w19, [x24, x19]
   10418:	b	fc4c <gcc_cp_fe_context@@Base+0x59d4>
   1041c:	ldr	x1, [sp, #104]
   10420:	cmp	x0, x1
   10424:	b.eq	11a24 <gcc_cp_fe_context@@Base+0x77ac>  // b.none
   10428:	ldp	x20, x2, [x25]
   1042c:	sub	x0, x21, x20
   10430:	mov	x19, x20
   10434:	add	x1, x0, #0x22
   10438:	cmp	x2, x1
   1043c:	b.cc	10498 <gcc_cp_fe_context@@Base+0x6220>  // b.lo, b.ul, b.last
   10440:	b	10a70 <gcc_cp_fe_context@@Base+0x67f8>
   10444:	str	x1, [x25, #8]
   10448:	mov	x0, x20
   1044c:	bl	53b0 <realloc@plt>
   10450:	str	x0, [x25]
   10454:	subs	x1, x0, x20
   10458:	add	x3, x28, x1
   1045c:	add	x2, x27, x1
   10460:	mov	x20, x0
   10464:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   10468:	b.eq	10484 <gcc_cp_fe_context@@Base+0x620c>  // b.none
   1046c:	cmp	x28, #0x0
   10470:	add	x21, x21, x1
   10474:	csel	x28, x3, x28, ne  // ne = any
   10478:	cmp	x27, #0x0
   1047c:	csel	x27, x2, x27, ne  // ne = any
   10480:	add	x23, x23, x1
   10484:	ldr	x2, [x25, #8]
   10488:	sub	x1, x21, x0
   1048c:	add	x3, x1, #0x22
   10490:	cmp	x3, x2
   10494:	b.ls	10a68 <gcc_cp_fe_context@@Base+0x67f0>  // b.plast
   10498:	lsl	x1, x2, #1
   1049c:	cmp	x2, #0x10, lsl #12
   104a0:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   104a4:	cmp	x1, #0x10, lsl #12
   104a8:	b.ls	10444 <gcc_cp_fe_context@@Base+0x61cc>  // b.plast
   104ac:	mov	x1, #0x10000               	// #65536
   104b0:	str	x1, [x25, #8]
   104b4:	b	10448 <gcc_cp_fe_context@@Base+0x61d0>
   104b8:	cmp	w19, #0x28
   104bc:	b.eq	117f4 <gcc_cp_fe_context@@Base+0x757c>  // b.none
   104c0:	cmp	w19, #0x29
   104c4:	b.ne	1051c <gcc_cp_fe_context@@Base+0x62a4>  // b.any
   104c8:	ldr	x0, [sp, #136]
   104cc:	cbnz	x0, 104e0 <gcc_cp_fe_context@@Base+0x6268>
   104d0:	ldr	w0, [sp, #144]
   104d4:	cbnz	w0, 10d08 <gcc_cp_fe_context@@Base+0x6a90>
   104d8:	ldr	x0, [sp, #272]
   104dc:	cbz	x0, 127f4 <gcc_cp_fe_context@@Base+0x857c>
   104e0:	ldp	x20, x2, [x25]
   104e4:	sub	x0, x21, x20
   104e8:	b	1040c <gcc_cp_fe_context@@Base+0x6194>
   104ec:	cmp	w19, #0x62
   104f0:	b.eq	1181c <gcc_cp_fe_context@@Base+0x75a4>  // b.none
   104f4:	b.ls	10670 <gcc_cp_fe_context@@Base+0x63f8>  // b.plast
   104f8:	cmp	w19, #0x7b
   104fc:	b.eq	1180c <gcc_cp_fe_context@@Base+0x7594>  // b.none
   10500:	cmp	w19, #0x7c
   10504:	b.ne	105c4 <gcc_cp_fe_context@@Base+0x634c>  // b.any
   10508:	ldp	x20, x2, [x25]
   1050c:	ldr	x1, [sp, #296]
   10510:	sub	x0, x21, x20
   10514:	cbz	x1, fe78 <gcc_cp_fe_context@@Base+0x5c00>
   10518:	b	1040c <gcc_cp_fe_context@@Base+0x6194>
   1051c:	cmp	w19, #0x27
   10520:	b.ne	104e0 <gcc_cp_fe_context@@Base+0x6268>  // b.any
   10524:	ldp	x20, x2, [x25]
   10528:	ldr	x1, [sp, #240]
   1052c:	sub	x0, x21, x20
   10530:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   10534:	add	x0, x0, #0x1
   10538:	cmp	x2, x0
   1053c:	b.cc	105a4 <gcc_cp_fe_context@@Base+0x632c>  // b.lo, b.ul, b.last
   10540:	b	122d4 <gcc_cp_fe_context@@Base+0x805c>
   10544:	str	x1, [x25, #8]
   10548:	mov	x0, x20
   1054c:	bl	53b0 <realloc@plt>
   10550:	str	x0, [x25]
   10554:	subs	x1, x0, x20
   10558:	add	x4, x28, x1
   1055c:	add	x3, x26, x1
   10560:	add	x2, x27, x1
   10564:	mov	x20, x0
   10568:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   1056c:	b.eq	10590 <gcc_cp_fe_context@@Base+0x6318>  // b.none
   10570:	cmp	x28, #0x0
   10574:	add	x21, x21, x1
   10578:	csel	x28, x4, x28, ne  // ne = any
   1057c:	cmp	x26, #0x0
   10580:	csel	x26, x3, x26, ne  // ne = any
   10584:	cmp	x27, #0x0
   10588:	csel	x27, x2, x27, ne  // ne = any
   1058c:	add	x23, x23, x1
   10590:	ldr	x2, [x25, #8]
   10594:	sub	x0, x21, x0
   10598:	add	x0, x0, #0x1
   1059c:	cmp	x0, x2
   105a0:	b.ls	122d4 <gcc_cp_fe_context@@Base+0x805c>  // b.plast
   105a4:	lsl	x1, x2, #1
   105a8:	cmp	x2, #0x10, lsl #12
   105ac:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   105b0:	cmp	x1, #0x10, lsl #12
   105b4:	b.ls	10544 <gcc_cp_fe_context@@Base+0x62cc>  // b.plast
   105b8:	mov	x1, #0x10000               	// #65536
   105bc:	str	x1, [x25, #8]
   105c0:	b	10548 <gcc_cp_fe_context@@Base+0x62d0>
   105c4:	cmp	w19, #0x77
   105c8:	b.ne	104e0 <gcc_cp_fe_context@@Base+0x6268>  // b.any
   105cc:	ldp	x20, x2, [x25]
   105d0:	ldr	x1, [sp, #240]
   105d4:	sub	x0, x21, x20
   105d8:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   105dc:	add	x0, x0, #0x1
   105e0:	mov	x26, x21
   105e4:	cmp	x0, x2
   105e8:	b.hi	10650 <gcc_cp_fe_context@@Base+0x63d8>  // b.pmore
   105ec:	b	121b0 <gcc_cp_fe_context@@Base+0x7f38>
   105f0:	str	x1, [x25, #8]
   105f4:	mov	x0, x20
   105f8:	bl	53b0 <realloc@plt>
   105fc:	str	x0, [x25]
   10600:	subs	x1, x0, x20
   10604:	add	x4, x28, x1
   10608:	add	x3, x26, x1
   1060c:	add	x2, x27, x1
   10610:	mov	x20, x0
   10614:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   10618:	b.eq	1063c <gcc_cp_fe_context@@Base+0x63c4>  // b.none
   1061c:	cmp	x28, #0x0
   10620:	add	x21, x21, x1
   10624:	csel	x28, x4, x28, ne  // ne = any
   10628:	cmp	x26, #0x0
   1062c:	csel	x26, x3, x26, ne  // ne = any
   10630:	cmp	x27, #0x0
   10634:	csel	x27, x2, x27, ne  // ne = any
   10638:	add	x23, x23, x1
   1063c:	ldr	x2, [x25, #8]
   10640:	sub	x0, x21, x0
   10644:	add	x0, x0, #0x1
   10648:	cmp	x0, x2
   1064c:	b.ls	121b0 <gcc_cp_fe_context@@Base+0x7f38>  // b.plast
   10650:	lsl	x1, x2, #1
   10654:	cmp	x2, #0x10, lsl #12
   10658:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   1065c:	cmp	x1, #0x10, lsl #12
   10660:	b.ls	105f0 <gcc_cp_fe_context@@Base+0x6378>  // b.plast
   10664:	mov	x1, #0x10000               	// #65536
   10668:	str	x1, [x25, #8]
   1066c:	b	105f4 <gcc_cp_fe_context@@Base+0x637c>
   10670:	cmp	w19, #0x57
   10674:	b.eq	11750 <gcc_cp_fe_context@@Base+0x74d8>  // b.none
   10678:	cmp	w19, #0x60
   1067c:	b.ne	1078c <gcc_cp_fe_context@@Base+0x6514>  // b.any
   10680:	ldp	x20, x2, [x25]
   10684:	ldr	x1, [sp, #240]
   10688:	sub	x0, x21, x20
   1068c:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   10690:	add	x0, x0, #0x1
   10694:	cmp	x2, x0
   10698:	b.cc	10700 <gcc_cp_fe_context@@Base+0x6488>  // b.lo, b.ul, b.last
   1069c:	b	122b4 <gcc_cp_fe_context@@Base+0x803c>
   106a0:	str	x1, [x25, #8]
   106a4:	mov	x0, x20
   106a8:	bl	53b0 <realloc@plt>
   106ac:	str	x0, [x25]
   106b0:	subs	x1, x0, x20
   106b4:	add	x4, x28, x1
   106b8:	add	x3, x26, x1
   106bc:	add	x2, x27, x1
   106c0:	mov	x20, x0
   106c4:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   106c8:	b.eq	106ec <gcc_cp_fe_context@@Base+0x6474>  // b.none
   106cc:	cmp	x28, #0x0
   106d0:	add	x21, x21, x1
   106d4:	csel	x28, x4, x28, ne  // ne = any
   106d8:	cmp	x26, #0x0
   106dc:	csel	x26, x3, x26, ne  // ne = any
   106e0:	cmp	x27, #0x0
   106e4:	csel	x27, x2, x27, ne  // ne = any
   106e8:	add	x23, x23, x1
   106ec:	ldr	x2, [x25, #8]
   106f0:	sub	x0, x21, x0
   106f4:	add	x0, x0, #0x1
   106f8:	cmp	x0, x2
   106fc:	b.ls	122b4 <gcc_cp_fe_context@@Base+0x803c>  // b.plast
   10700:	lsl	x1, x2, #1
   10704:	cmp	x2, #0x10, lsl #12
   10708:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   1070c:	cmp	x1, #0x10, lsl #12
   10710:	b.ls	106a0 <gcc_cp_fe_context@@Base+0x6428>  // b.plast
   10714:	mov	x1, #0x10000               	// #65536
   10718:	str	x1, [x25, #8]
   1071c:	b	106a4 <gcc_cp_fe_context@@Base+0x642c>
   10720:	sub	w0, w19, #0x31
   10724:	and	w0, w0, #0xff
   10728:	cmp	w0, #0x8
   1072c:	b.hi	104e0 <gcc_cp_fe_context@@Base+0x6268>  // b.pmore
   10730:	ldr	x0, [sp, #312]
   10734:	cbnz	x0, fc44 <gcc_cp_fe_context@@Base+0x59cc>
   10738:	ldr	w1, [sp, #148]
   1073c:	sub	w0, w19, #0x30
   10740:	and	w20, w0, #0xff
   10744:	cmp	w1, w0, uxtb
   10748:	b.cc	12904 <gcc_cp_fe_context@@Base+0x868c>  // b.lo, b.ul, b.last
   1074c:	ldr	w0, [sp, #144]
   10750:	subs	w1, w0, #0x1
   10754:	b.mi	121e4 <gcc_cp_fe_context@@Base+0x7f6c>  // b.first
   10758:	ldr	x2, [sp, #120]
   1075c:	mov	w0, #0x28                  	// #40
   10760:	smaddl	x0, w1, w0, x2
   10764:	add	x0, x0, #0x20
   10768:	b	10774 <gcc_cp_fe_context@@Base+0x64fc>
   1076c:	cmn	w1, #0x1
   10770:	b.eq	121e4 <gcc_cp_fe_context@@Base+0x7f6c>  // b.none
   10774:	ldr	w2, [x0]
   10778:	sub	w1, w1, #0x1
   1077c:	sub	x0, x0, #0x28
   10780:	cmp	w20, w2
   10784:	b.ne	1076c <gcc_cp_fe_context@@Base+0x64f4>  // b.any
   10788:	b	fc44 <gcc_cp_fe_context@@Base+0x59cc>
   1078c:	cmp	w19, #0x42
   10790:	b.ne	104e0 <gcc_cp_fe_context@@Base+0x6268>  // b.any
   10794:	ldp	x20, x2, [x25]
   10798:	ldr	x1, [sp, #240]
   1079c:	sub	x0, x21, x20
   107a0:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   107a4:	add	x0, x0, #0x1
   107a8:	cmp	x2, x0
   107ac:	b.cc	10814 <gcc_cp_fe_context@@Base+0x659c>  // b.lo, b.ul, b.last
   107b0:	b	122c4 <gcc_cp_fe_context@@Base+0x804c>
   107b4:	str	x1, [x25, #8]
   107b8:	mov	x0, x20
   107bc:	bl	53b0 <realloc@plt>
   107c0:	str	x0, [x25]
   107c4:	subs	x1, x0, x20
   107c8:	add	x4, x28, x1
   107cc:	add	x3, x26, x1
   107d0:	add	x2, x27, x1
   107d4:	mov	x20, x0
   107d8:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   107dc:	b.eq	10800 <gcc_cp_fe_context@@Base+0x6588>  // b.none
   107e0:	cmp	x28, #0x0
   107e4:	add	x21, x21, x1
   107e8:	csel	x28, x4, x28, ne  // ne = any
   107ec:	cmp	x26, #0x0
   107f0:	csel	x26, x3, x26, ne  // ne = any
   107f4:	cmp	x27, #0x0
   107f8:	csel	x27, x2, x27, ne  // ne = any
   107fc:	add	x23, x23, x1
   10800:	ldr	x2, [x25, #8]
   10804:	sub	x0, x21, x0
   10808:	add	x0, x0, #0x1
   1080c:	cmp	x0, x2
   10810:	b.ls	122c4 <gcc_cp_fe_context@@Base+0x804c>  // b.plast
   10814:	lsl	x1, x2, #1
   10818:	cmp	x2, #0x10, lsl #12
   1081c:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   10820:	cmp	x1, #0x10, lsl #12
   10824:	b.ls	107b4 <gcc_cp_fe_context@@Base+0x653c>  // b.plast
   10828:	mov	x1, #0x10000               	// #65536
   1082c:	str	x1, [x25, #8]
   10830:	b	107b8 <gcc_cp_fe_context@@Base+0x6540>
   10834:	ldr	x1, [sp, #104]
   10838:	cmp	w19, #0x2b
   1083c:	cset	w20, ne  // ne = any
   10840:	cmp	w19, #0x3f
   10844:	cset	w19, ne  // ne = any
   10848:	cmp	x1, x0
   1084c:	b.eq	108f0 <gcc_cp_fe_context@@Base+0x6678>  // b.none
   10850:	ldr	x1, [sp, #128]
   10854:	cbz	x24, 10e74 <gcc_cp_fe_context@@Base+0x6bfc>
   10858:	cbz	x1, 10b04 <gcc_cp_fe_context@@Base+0x688c>
   1085c:	ldr	x4, [sp, #104]
   10860:	b	108b8 <gcc_cp_fe_context@@Base+0x6640>
   10864:	cmp	w2, #0x5c
   10868:	b.ne	108e4 <gcc_cp_fe_context@@Base+0x666c>  // b.any
   1086c:	cmp	x4, x1
   10870:	b.eq	10e4c <gcc_cp_fe_context@@Base+0x6bd4>  // b.none
   10874:	str	x3, [sp, #456]
   10878:	ldrb	w1, [x0, #1]
   1087c:	ldrb	w1, [x24, x1]
   10880:	cmp	w1, #0x2b
   10884:	cset	w5, ne  // ne = any
   10888:	cmp	w1, #0x3f
   1088c:	cset	w1, ne  // ne = any
   10890:	cmp	w1, #0x0
   10894:	sxtb	w2, w5
   10898:	ccmp	w5, #0x0, #0x4, ne  // ne = any
   1089c:	b.ne	11554 <gcc_cp_fe_context@@Base+0x72dc>  // b.any
   108a0:	sxtb	w1, w1
   108a4:	mov	x0, x3
   108a8:	orr	w20, w2, w20
   108ac:	orr	w19, w1, w19
   108b0:	cmp	x4, x0
   108b4:	b.eq	10b58 <gcc_cp_fe_context@@Base+0x68e0>  // b.none
   108b8:	add	x1, x0, #0x1
   108bc:	str	x1, [sp, #456]
   108c0:	add	x3, x0, #0x2
   108c4:	ldrb	w2, [x0]
   108c8:	ldrb	w2, [x24, x2]
   108cc:	cmp	w2, #0x2a
   108d0:	b.ne	10864 <gcc_cp_fe_context@@Base+0x65ec>  // b.any
   108d4:	mov	x0, x1
   108d8:	mov	w1, #0x1                   	// #1
   108dc:	mov	w2, w1
   108e0:	b	108a8 <gcc_cp_fe_context@@Base+0x6630>
   108e4:	mov	x1, x0
   108e8:	str	x1, [sp, #456]
   108ec:	cbz	x26, 10070 <gcc_cp_fe_context@@Base+0x5df8>
   108f0:	ldp	x22, x2, [x25]
   108f4:	sub	x0, x21, x22
   108f8:	add	x0, x0, #0x3
   108fc:	cbz	w19, 109c4 <gcc_cp_fe_context@@Base+0x674c>
   10900:	cmp	x2, x0
   10904:	b.cc	10958 <gcc_cp_fe_context@@Base+0x66e0>  // b.lo, b.ul, b.last
   10908:	b	1097c <gcc_cp_fe_context@@Base+0x6704>
   1090c:	str	x1, [x25, #8]
   10910:	mov	x0, x22
   10914:	bl	53b0 <realloc@plt>
   10918:	str	x0, [x25]
   1091c:	subs	x1, x0, x22
   10920:	add	x2, x28, x1
   10924:	mov	x22, x0
   10928:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   1092c:	b.eq	10944 <gcc_cp_fe_context@@Base+0x66cc>  // b.none
   10930:	cmp	x28, #0x0
   10934:	add	x21, x21, x1
   10938:	csel	x28, x2, x28, ne  // ne = any
   1093c:	add	x23, x23, x1
   10940:	add	x26, x26, x1
   10944:	ldr	x2, [x25, #8]
   10948:	sub	x0, x21, x0
   1094c:	add	x0, x0, #0x3
   10950:	cmp	x0, x2
   10954:	b.ls	10978 <gcc_cp_fe_context@@Base+0x6700>  // b.plast
   10958:	lsl	x1, x2, #1
   1095c:	cmp	x2, #0x10, lsl #12
   10960:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   10964:	cmp	x1, #0x10, lsl #12
   10968:	b.ls	1090c <gcc_cp_fe_context@@Base+0x6694>  // b.plast
   1096c:	mov	x1, #0x10000               	// #65536
   10970:	str	x1, [x25, #8]
   10974:	b	10910 <gcc_cp_fe_context@@Base+0x6698>
   10978:	ldr	x1, [sp, #456]
   1097c:	mov	w2, #0x2e                  	// #46
   10980:	ldurb	w0, [x1, #-2]
   10984:	cbz	x24, 10994 <gcc_cp_fe_context@@Base+0x671c>
   10988:	and	x0, x0, #0xff
   1098c:	ldrb	w2, [x24, #46]
   10990:	ldrb	w0, [x24, x0]
   10994:	cmp	w2, w0
   10998:	b.eq	11920 <gcc_cp_fe_context@@Base+0x76a8>  // b.none
   1099c:	sub	w0, w26, w21
   109a0:	mov	w1, #0x12                  	// #18
   109a4:	sub	w0, w0, #0x6
   109a8:	mov	w19, #0x0                   	// #0
   109ac:	strb	w1, [x21]
   109b0:	sturh	w0, [x21, #1]
   109b4:	ldp	x22, x2, [x25]
   109b8:	add	x21, x21, #0x3
   109bc:	sub	x0, x21, x22
   109c0:	add	x0, x0, #0x3
   109c4:	cmp	x2, x0
   109c8:	b.cc	10a1c <gcc_cp_fe_context@@Base+0x67a4>  // b.lo, b.ul, b.last
   109cc:	b	10f18 <gcc_cp_fe_context@@Base+0x6ca0>
   109d0:	str	x1, [x25, #8]
   109d4:	mov	x0, x22
   109d8:	bl	53b0 <realloc@plt>
   109dc:	str	x0, [x25]
   109e0:	subs	x1, x0, x22
   109e4:	add	x2, x28, x1
   109e8:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   109ec:	b.eq	10a04 <gcc_cp_fe_context@@Base+0x678c>  // b.none
   109f0:	cmp	x28, #0x0
   109f4:	add	x21, x21, x1
   109f8:	csel	x28, x2, x28, ne  // ne = any
   109fc:	add	x23, x23, x1
   10a00:	add	x26, x26, x1
   10a04:	ldr	x2, [x25, #8]
   10a08:	mov	x22, x0
   10a0c:	sub	x0, x21, x0
   10a10:	add	x0, x0, #0x3
   10a14:	cmp	x0, x2
   10a18:	b.ls	10f18 <gcc_cp_fe_context@@Base+0x6ca0>  // b.plast
   10a1c:	lsl	x1, x2, #1
   10a20:	cmp	x2, #0x10, lsl #12
   10a24:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   10a28:	cmp	x1, #0x10, lsl #12
   10a2c:	b.ls	109d0 <gcc_cp_fe_context@@Base+0x6758>  // b.plast
   10a30:	mov	x1, #0x10000               	// #65536
   10a34:	str	x1, [x25, #8]
   10a38:	b	109d4 <gcc_cp_fe_context@@Base+0x675c>
   10a3c:	cmp	w1, #0x5c
   10a40:	mov	x22, x21
   10a44:	b.ne	ffdc <gcc_cp_fe_context@@Base+0x5d64>  // b.any
   10a48:	ldrb	w1, [x3, #1]
   10a4c:	cmp	w1, #0x7b
   10a50:	b.ne	ffdc <gcc_cp_fe_context@@Base+0x5d64>  // b.any
   10a54:	b	fc6c <gcc_cp_fe_context@@Base+0x59f4>
   10a58:	mov	w0, #0x3                   	// #3
   10a5c:	strb	w0, [x21], #1
   10a60:	ldr	x1, [sp, #456]
   10a64:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   10a68:	mov	x19, x0
   10a6c:	mov	x0, x1
   10a70:	add	x0, x0, #0x1
   10a74:	mov	x26, x21
   10a78:	cmp	x2, x0
   10a7c:	b.cc	10ae4 <gcc_cp_fe_context@@Base+0x686c>  // b.lo, b.ul, b.last
   10a80:	b	10f5c <gcc_cp_fe_context@@Base+0x6ce4>
   10a84:	str	x1, [x25, #8]
   10a88:	mov	x0, x19
   10a8c:	bl	53b0 <realloc@plt>
   10a90:	str	x0, [x25]
   10a94:	subs	x1, x0, x19
   10a98:	add	x4, x28, x1
   10a9c:	add	x3, x26, x1
   10aa0:	add	x2, x27, x1
   10aa4:	mov	x19, x0
   10aa8:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   10aac:	b.eq	10ad0 <gcc_cp_fe_context@@Base+0x6858>  // b.none
   10ab0:	cmp	x28, #0x0
   10ab4:	add	x21, x21, x1
   10ab8:	csel	x28, x4, x28, ne  // ne = any
   10abc:	cmp	x26, #0x0
   10ac0:	csel	x26, x3, x26, ne  // ne = any
   10ac4:	cmp	x27, #0x0
   10ac8:	csel	x27, x2, x27, ne  // ne = any
   10acc:	add	x23, x23, x1
   10ad0:	ldr	x2, [x25, #8]
   10ad4:	sub	x0, x21, x0
   10ad8:	add	x0, x0, #0x1
   10adc:	cmp	x0, x2
   10ae0:	b.ls	10f5c <gcc_cp_fe_context@@Base+0x6ce4>  // b.plast
   10ae4:	lsl	x1, x2, #1
   10ae8:	cmp	x2, #0x10, lsl #12
   10aec:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   10af0:	cmp	x1, #0x10, lsl #12
   10af4:	b.ls	10a84 <gcc_cp_fe_context@@Base+0x680c>  // b.plast
   10af8:	mov	x1, #0x10000               	// #65536
   10afc:	str	x1, [x25, #8]
   10b00:	b	10a88 <gcc_cp_fe_context@@Base+0x6810>
   10b04:	ldr	x5, [sp, #104]
   10b08:	mov	w4, #0x3f                  	// #63
   10b0c:	nop
   10b10:	mov	x1, x0
   10b14:	add	x0, x0, #0x1
   10b18:	str	x0, [sp, #456]
   10b1c:	ldurb	w2, [x0, #-1]
   10b20:	ldrb	w2, [x24, x2]
   10b24:	cmp	w2, #0x2a
   10b28:	b.eq	10e60 <gcc_cp_fe_context@@Base+0x6be8>  // b.none
   10b2c:	cmp	w2, #0x2b
   10b30:	ccmp	w2, w4, #0x4, ne  // ne = any
   10b34:	b.ne	108e8 <gcc_cp_fe_context@@Base+0x6670>  // b.any
   10b38:	cmp	w2, #0x2b
   10b3c:	cset	w3, ne  // ne = any
   10b40:	cmp	w2, #0x3f
   10b44:	cset	w1, ne  // ne = any
   10b48:	orr	w20, w3, w20
   10b4c:	orr	w19, w1, w19
   10b50:	cmp	x0, x5
   10b54:	b.ne	10b10 <gcc_cp_fe_context@@Base+0x6898>  // b.any
   10b58:	ldr	x1, [sp, #104]
   10b5c:	cbnz	x26, 108f0 <gcc_cp_fe_context@@Base+0x6678>
   10b60:	mov	x23, x25
   10b64:	ldr	x26, [sp, #232]
   10b68:	cbz	x28, 10b80 <gcc_cp_fe_context@@Base+0x6908>
   10b6c:	sub	x0, x21, x28
   10b70:	mov	w1, #0xe                   	// #14
   10b74:	sub	w0, w0, #0x3
   10b78:	strb	w1, [x28]
   10b7c:	sturh	w0, [x28, #1]
   10b80:	ldr	w0, [sp, #144]
   10b84:	cbnz	w0, 11b64 <gcc_cp_fe_context@@Base+0x78ec>
   10b88:	ldp	x27, x28, [sp, #80]
   10b8c:	tbz	w26, #18, 111e4 <gcc_cp_fe_context@@Base+0x6f6c>
   10b90:	ldp	x19, x0, [x23]
   10b94:	sub	x1, x21, x19
   10b98:	add	x1, x1, #0x1
   10b9c:	cmp	x1, x0
   10ba0:	b.ls	111dc <gcc_cp_fe_context@@Base+0x6f64>  // b.plast
   10ba4:	mov	x20, #0x10000               	// #65536
   10ba8:	b	10be4 <gcc_cp_fe_context@@Base+0x696c>
   10bac:	str	x1, [x23, #8]
   10bb0:	mov	x0, x19
   10bb4:	bl	53b0 <realloc@plt>
   10bb8:	subs	x1, x0, x19
   10bbc:	str	x0, [x23]
   10bc0:	add	x1, x21, x1
   10bc4:	mov	x19, x0
   10bc8:	csel	x21, x1, x21, ne  // ne = any
   10bcc:	sub	x1, x21, x0
   10bd0:	add	x1, x1, #0x1
   10bd4:	cbz	x0, 10e44 <gcc_cp_fe_context@@Base+0x6bcc>
   10bd8:	ldr	x0, [x23, #8]
   10bdc:	cmp	x1, x0
   10be0:	b.ls	111dc <gcc_cp_fe_context@@Base+0x6f64>  // b.plast
   10be4:	lsl	x1, x0, #1
   10be8:	cmp	x0, #0x10, lsl #12
   10bec:	b.eq	fefc <gcc_cp_fe_context@@Base+0x5c84>  // b.none
   10bf0:	cmp	x1, #0x10, lsl #12
   10bf4:	b.ls	10bac <gcc_cp_fe_context@@Base+0x6934>  // b.plast
   10bf8:	mov	x1, #0x10000               	// #65536
   10bfc:	str	x20, [x23, #8]
   10c00:	b	10bb0 <gcc_cp_fe_context@@Base+0x6938>
   10c04:	ldr	x1, [sp, #104]
   10c08:	cmp	w19, #0x2b
   10c0c:	cset	w20, ne  // ne = any
   10c10:	cmp	w19, #0x3f
   10c14:	cset	w19, ne  // ne = any
   10c18:	cmp	x1, x0
   10c1c:	b.ne	10850 <gcc_cp_fe_context@@Base+0x65d8>  // b.any
   10c20:	b	10b60 <gcc_cp_fe_context@@Base+0x68e8>
   10c24:	str	x1, [x25, #8]
   10c28:	mov	x0, x20
   10c2c:	bl	53b0 <realloc@plt>
   10c30:	str	x0, [x25]
   10c34:	subs	x1, x0, x20
   10c38:	add	x4, x28, x1
   10c3c:	add	x3, x26, x1
   10c40:	add	x2, x27, x1
   10c44:	mov	x20, x0
   10c48:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   10c4c:	b.eq	10c70 <gcc_cp_fe_context@@Base+0x69f8>  // b.none
   10c50:	cmp	x28, #0x0
   10c54:	add	x21, x21, x1
   10c58:	csel	x28, x4, x28, ne  // ne = any
   10c5c:	cmp	x26, #0x0
   10c60:	csel	x26, x3, x26, ne  // ne = any
   10c64:	cmp	x27, #0x0
   10c68:	csel	x27, x2, x27, ne  // ne = any
   10c6c:	add	x23, x23, x1
   10c70:	ldr	x2, [x25, #8]
   10c74:	sub	x0, x21, x0
   10c78:	add	x0, x0, #0x1
   10c7c:	cmp	x0, x2
   10c80:	b.ls	122a4 <gcc_cp_fe_context@@Base+0x802c>  // b.plast
   10c84:	lsl	x1, x2, #1
   10c88:	cmp	x2, #0x10, lsl #12
   10c8c:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   10c90:	cmp	x1, #0x10, lsl #12
   10c94:	b.ls	10c24 <gcc_cp_fe_context@@Base+0x69ac>  // b.plast
   10c98:	mov	x1, #0x10000               	// #65536
   10c9c:	str	x1, [x25, #8]
   10ca0:	b	10c28 <gcc_cp_fe_context@@Base+0x69b0>
   10ca4:	cmp	w22, w4
   10ca8:	b.gt	10cc0 <gcc_cp_fe_context@@Base+0x6a48>
   10cac:	cmp	w22, #0x0
   10cb0:	csel	w22, w22, wzr, ge  // ge = tcont
   10cb4:	add	w22, w22, w22, lsl #2
   10cb8:	add	w22, w3, w22, lsl #1
   10cbc:	sub	w22, w22, #0x30
   10cc0:	cmp	x2, x5
   10cc4:	b.eq	11470 <gcc_cp_fe_context@@Base+0x71f8>  // b.none
   10cc8:	add	x2, x2, #0x1
   10ccc:	str	x2, [sp, #456]
   10cd0:	ldurb	w3, [x2, #-1]
   10cd4:	sub	w1, w3, #0x30
   10cd8:	and	w1, w1, #0xff
   10cdc:	cmp	w1, #0x9
   10ce0:	b.ls	10ca4 <gcc_cp_fe_context@@Base+0x6a2c>  // b.plast
   10ce4:	b	103d0 <gcc_cp_fe_context@@Base+0x6158>
   10ce8:	ldr	x1, [sp, #136]
   10cec:	mov	x3, #0x0                   	// #0
   10cf0:	cbnz	x1, 10ef4 <gcc_cp_fe_context@@Base+0x6c7c>
   10cf4:	ldr	x1, [sp, #160]
   10cf8:	cbz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   10cfc:	cmp	w4, #0x7c
   10d00:	b.ne	fc4c <gcc_cp_fe_context@@Base+0x59d4>  // b.any
   10d04:	b	fe20 <gcc_cp_fe_context@@Base+0x5ba8>
   10d08:	cbz	x28, 110fc <gcc_cp_fe_context@@Base+0x6e84>
   10d0c:	ldp	x19, x2, [x25]
   10d10:	sub	x0, x21, x19
   10d14:	add	x0, x0, #0x1
   10d18:	cmp	x0, x2
   10d1c:	b.hi	10d7c <gcc_cp_fe_context@@Base+0x6b04>  // b.pmore
   10d20:	b	11434 <gcc_cp_fe_context@@Base+0x71bc>
   10d24:	str	x1, [x25, #8]
   10d28:	mov	x0, x19
   10d2c:	bl	53b0 <realloc@plt>
   10d30:	str	x0, [x25]
   10d34:	subs	x1, x0, x19
   10d38:	add	x3, x26, x1
   10d3c:	add	x2, x27, x1
   10d40:	mov	x19, x0
   10d44:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   10d48:	b.eq	10d68 <gcc_cp_fe_context@@Base+0x6af0>  // b.none
   10d4c:	cmp	x26, #0x0
   10d50:	add	x21, x21, x1
   10d54:	csel	x26, x3, x26, ne  // ne = any
   10d58:	cmp	x27, #0x0
   10d5c:	csel	x27, x2, x27, ne  // ne = any
   10d60:	add	x23, x23, x1
   10d64:	add	x28, x28, x1
   10d68:	ldr	x2, [x25, #8]
   10d6c:	sub	x0, x21, x0
   10d70:	add	x0, x0, #0x1
   10d74:	cmp	x0, x2
   10d78:	b.ls	11434 <gcc_cp_fe_context@@Base+0x71bc>  // b.plast
   10d7c:	lsl	x1, x2, #1
   10d80:	cmp	x2, #0x10, lsl #12
   10d84:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   10d88:	cmp	x1, #0x10, lsl #12
   10d8c:	b.ls	10d24 <gcc_cp_fe_context@@Base+0x6aac>  // b.plast
   10d90:	mov	x1, #0x10000               	// #65536
   10d94:	str	x1, [x25, #8]
   10d98:	b	10d28 <gcc_cp_fe_context@@Base+0x6ab0>
   10d9c:	ldr	x1, [sp, #136]
   10da0:	cbnz	x1, 10310 <gcc_cp_fe_context@@Base+0x6098>
   10da4:	b	fc4c <gcc_cp_fe_context@@Base+0x59d4>
   10da8:	ldr	x0, [x25, #8]
   10dac:	add	x3, x2, #0x2
   10db0:	str	x3, [x1, #16]
   10db4:	add	x2, x2, #0x3
   10db8:	cmp	x0, x2
   10dbc:	b.cc	10dfc <gcc_cp_fe_context@@Base+0x6b84>  // b.lo, b.ul, b.last
   10dc0:	b	11610 <gcc_cp_fe_context@@Base+0x7398>
   10dc4:	str	x1, [x25, #8]
   10dc8:	mov	x0, x19
   10dcc:	bl	53b0 <realloc@plt>
   10dd0:	subs	x1, x0, x19
   10dd4:	str	x0, [x25]
   10dd8:	add	x1, x21, x1
   10ddc:	mov	x19, x0
   10de0:	csel	x21, x1, x21, ne  // ne = any
   10de4:	sub	x1, x21, x0
   10de8:	add	x1, x1, #0x3
   10dec:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   10df0:	ldr	x0, [x25, #8]
   10df4:	cmp	x1, x0
   10df8:	b.ls	11610 <gcc_cp_fe_context@@Base+0x7398>  // b.plast
   10dfc:	lsl	x1, x0, #1
   10e00:	cmp	x0, #0x10, lsl #12
   10e04:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   10e08:	cmp	x1, #0x10, lsl #12
   10e0c:	b.ls	10dc4 <gcc_cp_fe_context@@Base+0x6b4c>  // b.plast
   10e10:	mov	x1, #0x10000               	// #65536
   10e14:	str	x1, [x25, #8]
   10e18:	b	10dc8 <gcc_cp_fe_context@@Base+0x6b50>
   10e1c:	lsl	w0, w1, #1
   10e20:	mov	w1, #0x28                  	// #40
   10e24:	mov	w2, w0
   10e28:	str	w2, [sp, #328]
   10e2c:	umull	x1, w0, w1
   10e30:	ldr	x0, [sp, #120]
   10e34:	bl	53b0 <realloc@plt>
   10e38:	str	x0, [sp, #120]
   10e3c:	cbnz	x0, 1015c <gcc_cp_fe_context@@Base+0x5ee4>
   10e40:	ldp	x27, x28, [sp, #80]
   10e44:	mov	w19, #0xc                   	// #12
   10e48:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   10e4c:	ldr	x0, [sp, #120]
   10e50:	mov	w19, #0x5                   	// #5
   10e54:	bl	5380 <free@plt>
   10e58:	ldp	x27, x28, [sp, #80]
   10e5c:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   10e60:	mov	w1, #0x1                   	// #1
   10e64:	mov	w3, w1
   10e68:	b	10b48 <gcc_cp_fe_context@@Base+0x68d0>
   10e6c:	mov	x22, x21
   10e70:	b	ffdc <gcc_cp_fe_context@@Base+0x5d64>
   10e74:	cbnz	x1, 1115c <gcc_cp_fe_context@@Base+0x6ee4>
   10e78:	mov	w4, #0x2b                  	// #43
   10e7c:	ldr	x5, [sp, #104]
   10e80:	b	10eb0 <gcc_cp_fe_context@@Base+0x6c38>
   10e84:	cmp	w2, #0x3f
   10e88:	ccmp	w2, w4, #0x4, ne  // ne = any
   10e8c:	b.ne	108e8 <gcc_cp_fe_context@@Base+0x6670>  // b.any
   10e90:	cmp	w2, #0x2b
   10e94:	cset	w3, ne  // ne = any
   10e98:	cmp	w2, #0x3f
   10e9c:	cset	w1, ne  // ne = any
   10ea0:	orr	w20, w3, w20
   10ea4:	orr	w19, w1, w19
   10ea8:	cmp	x5, x0
   10eac:	b.eq	10b58 <gcc_cp_fe_context@@Base+0x68e0>  // b.none
   10eb0:	mov	x1, x0
   10eb4:	add	x0, x0, #0x1
   10eb8:	str	x0, [sp, #456]
   10ebc:	ldurb	w2, [x0, #-1]
   10ec0:	cmp	w2, #0x2a
   10ec4:	b.ne	10e84 <gcc_cp_fe_context@@Base+0x6c0c>  // b.any
   10ec8:	mov	w1, #0x1                   	// #1
   10ecc:	mov	w3, w1
   10ed0:	b	10ea0 <gcc_cp_fe_context@@Base+0x6c28>
   10ed4:	mov	w0, #0x9                   	// #9
   10ed8:	strb	w0, [x21], #1
   10edc:	ldr	x1, [sp, #456]
   10ee0:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   10ee4:	mov	w0, #0xa                   	// #10
   10ee8:	strb	w0, [x21], #1
   10eec:	ldr	x1, [sp, #456]
   10ef0:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   10ef4:	cmp	w4, #0x29
   10ef8:	b.eq	fe20 <gcc_cp_fe_context@@Base+0x5ba8>  // b.none
   10efc:	ldr	x1, [sp, #160]
   10f00:	cbnz	x1, 10cfc <gcc_cp_fe_context@@Base+0x6a84>
   10f04:	cmp	x3, #0x0
   10f08:	ccmp	w5, #0x0, #0x4, ne  // ne = any
   10f0c:	b.eq	fc4c <gcc_cp_fe_context@@Base+0x59d4>  // b.none
   10f10:	ldrb	w1, [x3]
   10f14:	b	fdc0 <gcc_cp_fe_context@@Base+0x5b48>
   10f18:	cmp	x26, x21
   10f1c:	add	x27, x21, #0x3
   10f20:	sub	w22, w21, w26
   10f24:	b.eq	10f3c <gcc_cp_fe_context@@Base+0x6cc4>  // b.none
   10f28:	sub	x0, x26, x21
   10f2c:	sub	x2, x21, x26
   10f30:	add	x0, x27, x0
   10f34:	mov	x1, x26
   10f38:	bl	5550 <memmove@plt>
   10f3c:	add	w19, w19, #0xf
   10f40:	strb	w19, [x26]
   10f44:	sturh	w22, [x26, #1]
   10f48:	cbz	w20, 116cc <gcc_cp_fe_context@@Base+0x7454>
   10f4c:	mov	x21, x27
   10f50:	mov	x27, #0x0                   	// #0
   10f54:	ldr	x1, [sp, #456]
   10f58:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   10f5c:	ldr	x0, [sp, #456]
   10f60:	ldrb	w0, [x0]
   10f64:	cmp	w0, #0x5e
   10f68:	cset	w0, eq  // eq = none
   10f6c:	add	w0, w0, #0x4
   10f70:	strb	w0, [x21], #1
   10f74:	ldr	x0, [sp, #456]
   10f78:	str	x0, [sp, #320]
   10f7c:	ldrb	w0, [x0]
   10f80:	cmp	w0, #0x5e
   10f84:	b.ne	10f98 <gcc_cp_fe_context@@Base+0x6d20>  // b.any
   10f88:	ldr	x0, [sp, #320]
   10f8c:	add	x0, x0, #0x1
   10f90:	str	x0, [sp, #320]
   10f94:	str	x0, [sp, #456]
   10f98:	ldp	x19, x2, [x25]
   10f9c:	sub	x0, x21, x19
   10fa0:	add	x0, x0, #0x1
   10fa4:	cmp	x2, x0
   10fa8:	b.cc	11010 <gcc_cp_fe_context@@Base+0x6d98>  // b.lo, b.ul, b.last
   10fac:	b	11200 <gcc_cp_fe_context@@Base+0x6f88>
   10fb0:	str	x1, [x25, #8]
   10fb4:	mov	x0, x19
   10fb8:	bl	53b0 <realloc@plt>
   10fbc:	str	x0, [x25]
   10fc0:	subs	x1, x0, x19
   10fc4:	add	x4, x28, x1
   10fc8:	add	x3, x26, x1
   10fcc:	add	x2, x27, x1
   10fd0:	mov	x19, x0
   10fd4:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   10fd8:	b.eq	10ffc <gcc_cp_fe_context@@Base+0x6d84>  // b.none
   10fdc:	cmp	x28, #0x0
   10fe0:	add	x21, x21, x1
   10fe4:	csel	x28, x4, x28, ne  // ne = any
   10fe8:	cmp	x26, #0x0
   10fec:	csel	x26, x3, x26, ne  // ne = any
   10ff0:	cmp	x27, #0x0
   10ff4:	csel	x27, x2, x27, ne  // ne = any
   10ff8:	add	x23, x23, x1
   10ffc:	ldr	x2, [x25, #8]
   11000:	sub	x0, x21, x0
   11004:	add	x0, x0, #0x1
   11008:	cmp	x0, x2
   1100c:	b.ls	11200 <gcc_cp_fe_context@@Base+0x6f88>  // b.plast
   11010:	lsl	x1, x2, #1
   11014:	cmp	x2, #0x10, lsl #12
   11018:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   1101c:	cmp	x1, #0x10, lsl #12
   11020:	b.ls	10fb0 <gcc_cp_fe_context@@Base+0x6d38>  // b.plast
   11024:	mov	x1, #0x10000               	// #65536
   11028:	str	x1, [x25, #8]
   1102c:	b	10fb4 <gcc_cp_fe_context@@Base+0x6d3c>
   11030:	ldr	x0, [sp, #120]
   11034:	mov	w19, #0xc                   	// #12
   11038:	bl	5380 <free@plt>
   1103c:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   11040:	sub	w20, w21, w23
   11044:	cmp	x21, x23
   11048:	add	w20, w20, #0x3
   1104c:	add	x19, x21, #0x3
   11050:	b.eq	11068 <gcc_cp_fe_context@@Base+0x6df0>  // b.none
   11054:	sub	x0, x23, x21
   11058:	sub	x2, x21, x23
   1105c:	add	x0, x19, x0
   11060:	mov	x1, x23
   11064:	bl	5550 <memmove@plt>
   11068:	mov	w0, #0xf                   	// #15
   1106c:	strb	w0, [x23]
   11070:	sturh	w20, [x23, #1]
   11074:	cbz	x28, 1108c <gcc_cp_fe_context@@Base+0x6e14>
   11078:	sub	x0, x19, x28
   1107c:	mov	w1, #0xe                   	// #14
   11080:	sub	w0, w0, #0x3
   11084:	strb	w1, [x28]
   11088:	sturh	w0, [x28, #1]
   1108c:	ldp	x20, x0, [x25]
   11090:	sub	x1, x19, x20
   11094:	add	x1, x1, #0x3
   11098:	cmp	x0, x1
   1109c:	b.cc	110dc <gcc_cp_fe_context@@Base+0x6e64>  // b.lo, b.ul, b.last
   110a0:	b	11454 <gcc_cp_fe_context@@Base+0x71dc>
   110a4:	str	x1, [x25, #8]
   110a8:	mov	x0, x20
   110ac:	bl	53b0 <realloc@plt>
   110b0:	subs	x1, x0, x20
   110b4:	str	x0, [x25]
   110b8:	add	x1, x19, x1
   110bc:	mov	x20, x0
   110c0:	csel	x19, x1, x19, ne  // ne = any
   110c4:	sub	x1, x19, x0
   110c8:	add	x1, x1, #0x3
   110cc:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   110d0:	ldr	x0, [x25, #8]
   110d4:	cmp	x1, x0
   110d8:	b.ls	11454 <gcc_cp_fe_context@@Base+0x71dc>  // b.plast
   110dc:	lsl	x1, x0, #1
   110e0:	cmp	x0, #0x10, lsl #12
   110e4:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   110e8:	cmp	x1, #0x10, lsl #12
   110ec:	b.ls	110a4 <gcc_cp_fe_context@@Base+0x6e2c>  // b.plast
   110f0:	mov	x1, #0x10000               	// #65536
   110f4:	str	x1, [x25, #8]
   110f8:	b	110a8 <gcc_cp_fe_context@@Base+0x6e30>
   110fc:	ldr	w0, [sp, #144]
   11100:	ldr	x3, [sp, #120]
   11104:	sub	w0, w0, #0x1
   11108:	mov	w2, w0
   1110c:	mov	w0, #0x28                  	// #40
   11110:	str	w2, [sp, #144]
   11114:	ldr	x1, [x25]
   11118:	umull	x0, w2, w0
   1111c:	add	x2, x3, x0
   11120:	ldr	x23, [x3, x0]
   11124:	ldr	x0, [x2, #8]
   11128:	add	x23, x1, x23
   1112c:	ldr	x8, [x2, #24]
   11130:	sub	x7, x0, #0x1
   11134:	ldr	w20, [x2, #32]
   11138:	cmp	x0, #0x0
   1113c:	add	x7, x1, x7
   11140:	add	x26, x1, x8
   11144:	csel	x28, x7, xzr, ne  // ne = any
   11148:	cmp	w20, #0xff
   1114c:	b.ls	11974 <gcc_cp_fe_context@@Base+0x76fc>  // b.plast
   11150:	mov	x27, #0x0                   	// #0
   11154:	ldr	x1, [sp, #456]
   11158:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   1115c:	ldr	x4, [sp, #104]
   11160:	b	111b4 <gcc_cp_fe_context@@Base+0x6f3c>
   11164:	cmp	w2, #0x5c
   11168:	b.ne	108e4 <gcc_cp_fe_context@@Base+0x666c>  // b.any
   1116c:	cmp	x4, x1
   11170:	b.eq	10e4c <gcc_cp_fe_context@@Base+0x6bd4>  // b.none
   11174:	str	x3, [sp, #456]
   11178:	ldrb	w1, [x0, #1]
   1117c:	cmp	w1, #0x2b
   11180:	cset	w5, ne  // ne = any
   11184:	cmp	w1, #0x3f
   11188:	cset	w1, ne  // ne = any
   1118c:	cmp	w1, #0x0
   11190:	sxtb	w2, w5
   11194:	ccmp	w5, #0x0, #0x4, ne  // ne = any
   11198:	b.ne	11554 <gcc_cp_fe_context@@Base+0x72dc>  // b.any
   1119c:	sxtb	w1, w1
   111a0:	mov	x0, x3
   111a4:	orr	w20, w2, w20
   111a8:	orr	w19, w1, w19
   111ac:	cmp	x4, x0
   111b0:	b.eq	10b58 <gcc_cp_fe_context@@Base+0x68e0>  // b.none
   111b4:	add	x1, x0, #0x1
   111b8:	str	x1, [sp, #456]
   111bc:	add	x3, x0, #0x2
   111c0:	ldrb	w2, [x0]
   111c4:	cmp	w2, #0x2a
   111c8:	b.ne	11164 <gcc_cp_fe_context@@Base+0x6eec>  // b.any
   111cc:	mov	x0, x1
   111d0:	mov	w1, #0x1                   	// #1
   111d4:	mov	w2, w1
   111d8:	b	111a4 <gcc_cp_fe_context@@Base+0x6f2c>
   111dc:	mov	w0, #0x1                   	// #1
   111e0:	strb	w0, [x21], #1
   111e4:	ldr	x0, [sp, #120]
   111e8:	mov	w19, #0x0                   	// #0
   111ec:	bl	5380 <free@plt>
   111f0:	ldr	x0, [x23]
   111f4:	sub	x21, x21, x0
   111f8:	str	x21, [x23, #16]
   111fc:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   11200:	mov	x22, x21
   11204:	mov	w0, #0x20                  	// #32
   11208:	strb	w0, [x22], #1
   1120c:	stp	xzr, xzr, [x22]
   11210:	stp	xzr, xzr, [x22, #16]
   11214:	ldurb	w0, [x21, #-1]
   11218:	cmp	w0, #0x5
   1121c:	b.eq	11b18 <gcc_cp_fe_context@@Base+0x78a0>  // b.none
   11220:	ldr	x0, [sp, #104]
   11224:	ldr	x1, [sp, #456]
   11228:	cmp	x0, x1
   1122c:	b.eq	11a24 <gcc_cp_fe_context@@Base+0x77ac>  // b.none
   11230:	adrp	x0, 17000 <xexit@@Base+0x1a0>
   11234:	add	x0, x0, #0xa18
   11238:	adrp	x2, 17000 <xexit@@Base+0x1a0>
   1123c:	add	x2, x2, #0xa10
   11240:	stp	x2, x0, [sp, #384]
   11244:	mov	w19, #0xffffffff            	// #-1
   11248:	ldr	w0, [sp, #232]
   1124c:	mov	w11, #0x0                   	// #0
   11250:	stp	x27, x23, [sp, #400]
   11254:	and	w0, w0, #0x1
   11258:	mov	x27, x22
   1125c:	mov	x22, x24
   11260:	stp	x26, x28, [sp, #416]
   11264:	str	x25, [sp, #432]
   11268:	mov	w25, w0
   1126c:	ldr	x24, [sp, #104]
   11270:	ldr	x20, [sp, #264]
   11274:	b	11308 <gcc_cp_fe_context@@Base+0x7090>
   11278:	cmp	w0, #0x2d
   1127c:	ldrb	w6, [x1, #1]
   11280:	ccmp	w11, #0x0, #0x4, eq  // eq = none
   11284:	b.eq	1139c <gcc_cp_fe_context@@Base+0x7124>  // b.none
   11288:	cmp	w6, #0x5d
   1128c:	b.ne	121c0 <gcc_cp_fe_context@@Base+0x7f48>  // b.any
   11290:	ldr	x2, [sp, #112]
   11294:	sub	x7, x1, #0x1
   11298:	cmp	x2, x7
   1129c:	b.hi	112ac <gcc_cp_fe_context@@Base+0x7034>  // b.pmore
   112a0:	ldurb	w7, [x1, #-1]
   112a4:	cmp	w7, #0x5b
   112a8:	b.eq	11348 <gcc_cp_fe_context@@Base+0x70d0>  // b.none
   112ac:	ldr	x2, [sp, #112]
   112b0:	sub	x7, x1, #0x2
   112b4:	cmp	x2, x7
   112b8:	b.hi	112c8 <gcc_cp_fe_context@@Base+0x7050>  // b.pmore
   112bc:	ldurb	w7, [x1, #-2]
   112c0:	cmp	w7, #0x5b
   112c4:	b.eq	11910 <gcc_cp_fe_context@@Base+0x7698>  // b.none
   112c8:	cmp	w6, #0x5d
   112cc:	b.eq	11370 <gcc_cp_fe_context@@Base+0x70f8>  // b.none
   112d0:	ldr	x4, [sp, #232]
   112d4:	mov	w0, w19
   112d8:	mov	x5, x27
   112dc:	mov	x3, x22
   112e0:	mov	x2, x24
   112e4:	add	x1, sp, #0x1c8
   112e8:	bl	f5c8 <gcc_cp_fe_context@@Base+0x5350>
   112ec:	mov	w19, w0
   112f0:	cbnz	w0, 12808 <gcc_cp_fe_context@@Base+0x8590>
   112f4:	ldr	x1, [sp, #456]
   112f8:	mov	w19, #0xffffffff            	// #-1
   112fc:	nop
   11300:	cmp	x24, x1
   11304:	b.eq	11a24 <gcc_cp_fe_context@@Base+0x77ac>  // b.none
   11308:	add	x4, x1, #0x1
   1130c:	str	x4, [sp, #456]
   11310:	ldrb	w0, [x1]
   11314:	cbz	x22, 11320 <gcc_cp_fe_context@@Base+0x70a8>
   11318:	and	x0, x0, #0xff
   1131c:	ldrb	w0, [x22, x0]
   11320:	cmp	w0, #0x5c
   11324:	ccmp	w25, #0x0, #0x4, eq  // eq = none
   11328:	b.ne	113f0 <gcc_cp_fe_context@@Base+0x7178>  // b.any
   1132c:	cmp	w0, #0x5d
   11330:	b.ne	11278 <gcc_cp_fe_context@@Base+0x7000>  // b.any
   11334:	ldr	x2, [sp, #320]
   11338:	add	x6, x2, #0x1
   1133c:	cmp	x4, x6
   11340:	b.ne	12600 <gcc_cp_fe_context@@Base+0x8388>  // b.any
   11344:	ldrb	w6, [x1, #1]
   11348:	cmp	w6, #0x2d
   1134c:	b.eq	113a8 <gcc_cp_fe_context@@Base+0x7130>  // b.none
   11350:	ldr	x2, [sp, #248]
   11354:	cbz	x2, 11370 <gcc_cp_fe_context@@Base+0x70f8>
   11358:	cmp	w6, #0x3a
   1135c:	mov	w7, #0x5b                  	// #91
   11360:	ccmp	w0, w7, #0x0, eq  // eq = none
   11364:	b.eq	11cc8 <gcc_cp_fe_context@@Base+0x7a50>  // b.none
   11368:	cmp	w0, #0x5b
   1136c:	b.eq	11564 <gcc_cp_fe_context@@Base+0x72ec>  // b.none
   11370:	ubfx	x4, x0, #3, #5
   11374:	and	w6, w0, #0x7
   11378:	mov	w1, #0x1                   	// #1
   1137c:	mov	w19, w0
   11380:	lsl	w0, w1, w6
   11384:	mov	w11, #0x0                   	// #0
   11388:	ldrb	w1, [x27, x4]
   1138c:	orr	w0, w0, w1
   11390:	strb	w0, [x27, x4]
   11394:	ldr	x1, [sp, #456]
   11398:	b	11300 <gcc_cp_fe_context@@Base+0x7088>
   1139c:	cmp	w0, #0x2d
   113a0:	b.ne	11348 <gcc_cp_fe_context@@Base+0x70d0>  // b.any
   113a4:	b	11290 <gcc_cp_fe_context@@Base+0x7018>
   113a8:	ldrb	w6, [x1, #2]
   113ac:	cmp	w6, #0x5d
   113b0:	b.eq	11370 <gcc_cp_fe_context@@Base+0x70f8>  // b.none
   113b4:	cmp	x4, x24
   113b8:	b.eq	127a8 <gcc_cp_fe_context@@Base+0x8530>  // b.none
   113bc:	ldr	x4, [sp, #232]
   113c0:	add	x1, x1, #0x2
   113c4:	mov	x5, x27
   113c8:	mov	x3, x22
   113cc:	mov	x2, x24
   113d0:	str	x1, [sp, #456]
   113d4:	add	x1, sp, #0x1c8
   113d8:	bl	f5c8 <gcc_cp_fe_context@@Base+0x5350>
   113dc:	mov	w19, w0
   113e0:	cbnz	w0, 12808 <gcc_cp_fe_context@@Base+0x8590>
   113e4:	mov	w19, #0xffffffff            	// #-1
   113e8:	ldr	x1, [sp, #456]
   113ec:	b	11300 <gcc_cp_fe_context@@Base+0x7088>
   113f0:	cmp	x4, x24
   113f4:	b.eq	10e4c <gcc_cp_fe_context@@Base+0x6bd4>  // b.none
   113f8:	add	x0, x1, #0x2
   113fc:	str	x0, [sp, #456]
   11400:	ldrb	w19, [x1, #1]
   11404:	cbz	x22, 11410 <gcc_cp_fe_context@@Base+0x7198>
   11408:	and	x19, x19, #0xff
   1140c:	ldrb	w19, [x22, x19]
   11410:	ubfx	x1, x19, #3, #5
   11414:	and	w4, w19, #0x7
   11418:	mov	w0, #0x1                   	// #1
   1141c:	lsl	w0, w0, w4
   11420:	ldrb	w4, [x27, x1]
   11424:	orr	w0, w0, w4
   11428:	strb	w0, [x27, x1]
   1142c:	ldr	x1, [sp, #456]
   11430:	b	11300 <gcc_cp_fe_context@@Base+0x7088>
   11434:	sub	x0, x21, x28
   11438:	mov	w2, #0x14                  	// #20
   1143c:	strb	w2, [x21], #1
   11440:	sub	w0, w0, #0x3
   11444:	mov	w1, #0xe                   	// #14
   11448:	strb	w1, [x28]
   1144c:	sturh	w0, [x28, #1]
   11450:	b	fd34 <gcc_cp_fe_context@@Base+0x5abc>
   11454:	add	x21, x19, #0x3
   11458:	mov	x28, x19
   1145c:	mov	x23, x21
   11460:	mov	x26, #0x0                   	// #0
   11464:	mov	x27, #0x0                   	// #0
   11468:	ldr	x1, [sp, #456]
   1146c:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   11470:	ldr	x2, [sp, #104]
   11474:	mov	w19, w22
   11478:	ldr	x1, [sp, #168]
   1147c:	cbnz	x1, 114ac <gcc_cp_fe_context@@Base+0x7234>
   11480:	cmp	w3, #0x5c
   11484:	b.ne	11afc <gcc_cp_fe_context@@Base+0x7884>  // b.any
   11488:	ldr	x1, [sp, #104]
   1148c:	cmp	x1, x2
   11490:	b.eq	11afc <gcc_cp_fe_context@@Base+0x7884>  // b.none
   11494:	add	x1, x2, #0x1
   11498:	str	x1, [sp, #456]
   1149c:	ldrb	w3, [x2]
   114a0:	cbz	x24, 114ac <gcc_cp_fe_context@@Base+0x7234>
   114a4:	and	x3, x3, #0xff
   114a8:	ldrb	w3, [x24, x3]
   114ac:	cmp	w3, #0x7d
   114b0:	b.ne	103ec <gcc_cp_fe_context@@Base+0x6174>  // b.any
   114b4:	cbz	x26, 122f4 <gcc_cp_fe_context@@Base+0x807c>
   114b8:	mov	w0, #0x7fff                	// #32767
   114bc:	cmp	w22, w0
   114c0:	b.gt	128c8 <gcc_cp_fe_context@@Base+0x8650>
   114c4:	ldp	x27, x2, [x25]
   114c8:	sub	x0, x21, x27
   114cc:	cbnz	w22, 12120 <gcc_cp_fe_context@@Base+0x7ea8>
   114d0:	add	x0, x0, #0x3
   114d4:	cmp	x2, x0
   114d8:	b.cc	11534 <gcc_cp_fe_context@@Base+0x72bc>  // b.lo, b.ul, b.last
   114dc:	b	1257c <gcc_cp_fe_context@@Base+0x8304>
   114e0:	str	x1, [x25, #8]
   114e4:	mov	x0, x27
   114e8:	bl	53b0 <realloc@plt>
   114ec:	str	x0, [x25]
   114f0:	subs	x1, x0, x27
   114f4:	add	x3, x28, x1
   114f8:	add	x2, x26, x1
   114fc:	mov	x27, x0
   11500:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   11504:	b.eq	11520 <gcc_cp_fe_context@@Base+0x72a8>  // b.none
   11508:	cmp	x28, #0x0
   1150c:	add	x21, x21, x1
   11510:	csel	x28, x3, x28, ne  // ne = any
   11514:	cmp	x26, #0x0
   11518:	csel	x26, x2, x26, ne  // ne = any
   1151c:	add	x23, x23, x1
   11520:	ldr	x2, [x25, #8]
   11524:	sub	x0, x21, x0
   11528:	add	x0, x0, #0x3
   1152c:	cmp	x0, x2
   11530:	b.ls	1257c <gcc_cp_fe_context@@Base+0x8304>  // b.plast
   11534:	lsl	x1, x2, #1
   11538:	cmp	x2, #0x10, lsl #12
   1153c:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   11540:	cmp	x1, #0x10, lsl #12
   11544:	b.ls	114e0 <gcc_cp_fe_context@@Base+0x7268>  // b.plast
   11548:	mov	x1, #0x10000               	// #65536
   1154c:	str	x1, [x25, #8]
   11550:	b	114e4 <gcc_cp_fe_context@@Base+0x726c>
   11554:	str	x0, [sp, #456]
   11558:	mov	x1, x0
   1155c:	cbnz	x26, 108f0 <gcc_cp_fe_context@@Base+0x6678>
   11560:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   11564:	cmp	w6, #0x3d
   11568:	b.eq	11b78 <gcc_cp_fe_context@@Base+0x7900>  // b.none
   1156c:	cmp	w6, #0x2e
   11570:	b.ne	11370 <gcc_cp_fe_context@@Base+0x70f8>  // b.any
   11574:	cmp	x4, x24
   11578:	b.eq	127a8 <gcc_cp_fe_context@@Base+0x8530>  // b.none
   1157c:	add	x1, x1, #0x2
   11580:	str	x1, [sp, #456]
   11584:	cmp	x1, x24
   11588:	b.eq	11a24 <gcc_cp_fe_context@@Base+0x77ac>  // b.none
   1158c:	mov	w0, #0x0                   	// #0
   11590:	cbz	x22, 115d8 <gcc_cp_fe_context@@Base+0x7360>
   11594:	add	x4, x1, #0x1
   11598:	str	x4, [sp, #456]
   1159c:	add	w5, w0, #0x1
   115a0:	mov	w3, w0
   115a4:	ldurb	w2, [x4, #-1]
   115a8:	ldrb	w6, [x22, x2]
   115ac:	cmp	w6, #0x2e
   115b0:	b.eq	118bc <gcc_cp_fe_context@@Base+0x7644>  // b.none
   115b4:	cmp	x4, x24
   115b8:	b.eq	125bc <gcc_cp_fe_context@@Base+0x8344>  // b.none
   115bc:	tbnz	w0, #7, 11800 <gcc_cp_fe_context@@Base+0x7588>
   115c0:	and	w0, w5, #0xff
   115c4:	mov	x1, x4
   115c8:	strb	w6, [x20, w3, sxtw]
   115cc:	b	11594 <gcc_cp_fe_context@@Base+0x731c>
   115d0:	mov	x1, x4
   115d4:	strb	wzr, [sp, #464]
   115d8:	add	x4, x1, #0x1
   115dc:	str	x4, [sp, #456]
   115e0:	add	w3, w0, #0x1
   115e4:	mov	w2, w0
   115e8:	ldurb	w6, [x4, #-1]
   115ec:	cmp	w6, #0x2e
   115f0:	b.eq	11cb8 <gcc_cp_fe_context@@Base+0x7a40>  // b.none
   115f4:	cmp	x24, x4
   115f8:	b.eq	125bc <gcc_cp_fe_context@@Base+0x8344>  // b.none
   115fc:	tbnz	w0, #7, 115d0 <gcc_cp_fe_context@@Base+0x7358>
   11600:	and	w0, w3, #0xff
   11604:	mov	x1, x4
   11608:	strb	w6, [x20, w2, sxtw]
   1160c:	b	115d8 <gcc_cp_fe_context@@Base+0x7360>
   11610:	mov	w0, #0x6                   	// #6
   11614:	strb	w0, [x21]
   11618:	ldrb	w0, [sp, #148]
   1161c:	add	x21, x21, #0x3
   11620:	sturb	w0, [x21, #-2]
   11624:	sturb	wzr, [x21, #-1]
   11628:	b	101a4 <gcc_cp_fe_context@@Base+0x5f2c>
   1162c:	ldp	x20, x2, [x25]
   11630:	ldr	x1, [sp, #240]
   11634:	sub	x0, x21, x20
   11638:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   1163c:	b	11694 <gcc_cp_fe_context@@Base+0x741c>
   11640:	str	x1, [x25, #8]
   11644:	mov	x0, x20
   11648:	bl	53b0 <realloc@plt>
   1164c:	str	x0, [x25]
   11650:	subs	x1, x0, x20
   11654:	add	x4, x28, x1
   11658:	add	x3, x26, x1
   1165c:	add	x2, x27, x1
   11660:	mov	x20, x0
   11664:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   11668:	b.eq	1168c <gcc_cp_fe_context@@Base+0x7414>  // b.none
   1166c:	cmp	x28, #0x0
   11670:	add	x21, x21, x1
   11674:	csel	x28, x4, x28, ne  // ne = any
   11678:	cmp	x26, #0x0
   1167c:	csel	x26, x3, x26, ne  // ne = any
   11680:	cmp	x27, #0x0
   11684:	csel	x27, x2, x27, ne  // ne = any
   11688:	add	x23, x23, x1
   1168c:	ldr	x2, [x25, #8]
   11690:	sub	x0, x21, x0
   11694:	add	x0, x0, #0x1
   11698:	cmp	x0, x2
   1169c:	b.ls	12280 <gcc_cp_fe_context@@Base+0x8008>  // b.plast
   116a0:	lsl	x1, x2, #1
   116a4:	cmp	x2, #0x10, lsl #12
   116a8:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   116ac:	cmp	x1, #0x10, lsl #12
   116b0:	b.ls	11640 <gcc_cp_fe_context@@Base+0x73c8>  // b.plast
   116b4:	mov	x1, #0x10000               	// #65536
   116b8:	str	x1, [x25, #8]
   116bc:	b	11644 <gcc_cp_fe_context@@Base+0x73cc>
   116c0:	ldr	x1, [sp, #128]
   116c4:	cbnz	x1, fc30 <gcc_cp_fe_context@@Base+0x59b8>
   116c8:	b	104e0 <gcc_cp_fe_context@@Base+0x6268>
   116cc:	ldp	x19, x2, [x25]
   116d0:	sub	x0, x27, x19
   116d4:	add	x0, x0, #0x3
   116d8:	cmp	x0, x2
   116dc:	b.hi	11730 <gcc_cp_fe_context@@Base+0x74b8>  // b.pmore
   116e0:	b	11b2c <gcc_cp_fe_context@@Base+0x78b4>
   116e4:	str	x1, [x25, #8]
   116e8:	mov	x0, x19
   116ec:	bl	53b0 <realloc@plt>
   116f0:	str	x0, [x25]
   116f4:	subs	x1, x0, x19
   116f8:	add	x2, x28, x1
   116fc:	mov	x19, x0
   11700:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   11704:	b.eq	1171c <gcc_cp_fe_context@@Base+0x74a4>  // b.none
   11708:	cmp	x28, #0x0
   1170c:	add	x27, x27, x1
   11710:	csel	x28, x2, x28, ne  // ne = any
   11714:	add	x23, x23, x1
   11718:	add	x26, x26, x1
   1171c:	ldr	x2, [x25, #8]
   11720:	sub	x0, x27, x0
   11724:	add	x0, x0, #0x3
   11728:	cmp	x0, x2
   1172c:	b.ls	11b2c <gcc_cp_fe_context@@Base+0x78b4>  // b.plast
   11730:	lsl	x1, x2, #1
   11734:	cmp	x2, #0x10, lsl #12
   11738:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   1173c:	cmp	x1, #0x10, lsl #12
   11740:	b.ls	116e4 <gcc_cp_fe_context@@Base+0x746c>  // b.plast
   11744:	mov	x1, #0x10000               	// #65536
   11748:	str	x1, [x25, #8]
   1174c:	b	116e8 <gcc_cp_fe_context@@Base+0x7470>
   11750:	ldp	x20, x2, [x25]
   11754:	ldr	x1, [sp, #240]
   11758:	sub	x0, x21, x20
   1175c:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   11760:	add	x0, x0, #0x1
   11764:	mov	x26, x21
   11768:	cmp	x2, x0
   1176c:	b.cc	117d4 <gcc_cp_fe_context@@Base+0x755c>  // b.lo, b.ul, b.last
   11770:	b	122e4 <gcc_cp_fe_context@@Base+0x806c>
   11774:	str	x1, [x25, #8]
   11778:	mov	x0, x20
   1177c:	bl	53b0 <realloc@plt>
   11780:	str	x0, [x25]
   11784:	subs	x1, x0, x20
   11788:	add	x4, x28, x1
   1178c:	add	x3, x26, x1
   11790:	add	x2, x27, x1
   11794:	mov	x20, x0
   11798:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   1179c:	b.eq	117c0 <gcc_cp_fe_context@@Base+0x7548>  // b.none
   117a0:	cmp	x28, #0x0
   117a4:	add	x21, x21, x1
   117a8:	csel	x28, x4, x28, ne  // ne = any
   117ac:	cmp	x26, #0x0
   117b0:	csel	x26, x3, x26, ne  // ne = any
   117b4:	cmp	x27, #0x0
   117b8:	csel	x27, x2, x27, ne  // ne = any
   117bc:	add	x23, x23, x1
   117c0:	ldr	x2, [x25, #8]
   117c4:	sub	x0, x21, x0
   117c8:	add	x0, x0, #0x1
   117cc:	cmp	x0, x2
   117d0:	b.ls	122e4 <gcc_cp_fe_context@@Base+0x806c>  // b.plast
   117d4:	lsl	x1, x2, #1
   117d8:	cmp	x2, #0x10, lsl #12
   117dc:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   117e0:	cmp	x1, #0x10, lsl #12
   117e4:	b.ls	11774 <gcc_cp_fe_context@@Base+0x74fc>  // b.plast
   117e8:	mov	x1, #0x10000               	// #65536
   117ec:	str	x1, [x25, #8]
   117f0:	b	11778 <gcc_cp_fe_context@@Base+0x7500>
   117f4:	ldr	x0, [sp, #136]
   117f8:	cbz	x0, 10138 <gcc_cp_fe_context@@Base+0x5ec0>
   117fc:	b	104e0 <gcc_cp_fe_context@@Base+0x6268>
   11800:	mov	x1, x4
   11804:	strb	wzr, [sp, #464]
   11808:	b	11594 <gcc_cp_fe_context@@Base+0x731c>
   1180c:	ldr	x1, [sp, #184]
   11810:	cmp	x1, #0x200
   11814:	b.eq	10368 <gcc_cp_fe_context@@Base+0x60f0>  // b.none
   11818:	b	104e0 <gcc_cp_fe_context@@Base+0x6268>
   1181c:	ldp	x20, x2, [x25]
   11820:	ldr	x1, [sp, #240]
   11824:	sub	x0, x21, x20
   11828:	cbnz	x1, fc4c <gcc_cp_fe_context@@Base+0x59d4>
   1182c:	add	x0, x0, #0x1
   11830:	cmp	x2, x0
   11834:	b.cc	1189c <gcc_cp_fe_context@@Base+0x7624>  // b.lo, b.ul, b.last
   11838:	b	121d4 <gcc_cp_fe_context@@Base+0x7f5c>
   1183c:	str	x1, [x25, #8]
   11840:	mov	x0, x20
   11844:	bl	53b0 <realloc@plt>
   11848:	str	x0, [x25]
   1184c:	subs	x1, x0, x20
   11850:	add	x4, x28, x1
   11854:	add	x3, x26, x1
   11858:	add	x2, x27, x1
   1185c:	mov	x20, x0
   11860:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   11864:	b.eq	11888 <gcc_cp_fe_context@@Base+0x7610>  // b.none
   11868:	cmp	x28, #0x0
   1186c:	add	x21, x21, x1
   11870:	csel	x28, x4, x28, ne  // ne = any
   11874:	cmp	x26, #0x0
   11878:	csel	x26, x3, x26, ne  // ne = any
   1187c:	cmp	x27, #0x0
   11880:	csel	x27, x2, x27, ne  // ne = any
   11884:	add	x23, x23, x1
   11888:	ldr	x2, [x25, #8]
   1188c:	sub	x0, x21, x0
   11890:	add	x0, x0, #0x1
   11894:	cmp	x0, x2
   11898:	b.ls	121d4 <gcc_cp_fe_context@@Base+0x7f5c>  // b.plast
   1189c:	lsl	x1, x2, #1
   118a0:	cmp	x2, #0x10, lsl #12
   118a4:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   118a8:	cmp	x1, #0x10, lsl #12
   118ac:	b.ls	1183c <gcc_cp_fe_context@@Base+0x75c4>  // b.plast
   118b0:	mov	x1, #0x10000               	// #65536
   118b4:	str	x1, [x25, #8]
   118b8:	b	11840 <gcc_cp_fe_context@@Base+0x75c8>
   118bc:	ldrb	w2, [x1, #1]
   118c0:	cmp	w2, #0x5d
   118c4:	b.ne	115b4 <gcc_cp_fe_context@@Base+0x733c>  // b.any
   118c8:	strb	wzr, [x20, w0, sxtw]
   118cc:	ldrb	w19, [sp, #464]
   118d0:	cbz	w19, 125cc <gcc_cp_fe_context@@Base+0x8354>
   118d4:	cmp	w0, #0x1
   118d8:	b.ne	128dc <gcc_cp_fe_context@@Base+0x8664>  // b.any
   118dc:	cmp	x24, x4
   118e0:	b.eq	127a8 <gcc_cp_fe_context@@Base+0x8530>  // b.none
   118e4:	ubfx	x4, x19, #3, #5
   118e8:	add	x1, x1, #0x2
   118ec:	str	x1, [sp, #456]
   118f0:	and	w6, w19, #0x7
   118f4:	mov	w11, #0x0                   	// #0
   118f8:	ldrb	w1, [x27, x4]
   118fc:	lsl	w0, w0, w6
   11900:	orr	w0, w0, w1
   11904:	strb	w0, [x27, x4]
   11908:	ldr	x1, [sp, #456]
   1190c:	b	11300 <gcc_cp_fe_context@@Base+0x7088>
   11910:	ldurb	w7, [x1, #-1]
   11914:	cmp	w7, #0x5e
   11918:	b.ne	112c8 <gcc_cp_fe_context@@Base+0x7050>  // b.any
   1191c:	b	11348 <gcc_cp_fe_context@@Base+0x70d0>
   11920:	ldr	x0, [sp, #104]
   11924:	cmp	x1, x0
   11928:	cset	w0, cc  // cc = lo, ul, last
   1192c:	tst	w20, w0
   11930:	b.eq	1099c <gcc_cp_fe_context@@Base+0x6724>  // b.none
   11934:	ldrb	w0, [x1]
   11938:	mov	w1, #0xa                   	// #10
   1193c:	cbz	x24, 1194c <gcc_cp_fe_context@@Base+0x76d4>
   11940:	and	x0, x0, #0xff
   11944:	ldrb	w1, [x24, #10]
   11948:	ldrb	w0, [x24, x0]
   1194c:	cmp	w1, w0
   11950:	b.ne	1099c <gcc_cp_fe_context@@Base+0x6724>  // b.any
   11954:	ldr	x0, [sp, #280]
   11958:	cbnz	x0, 1099c <gcc_cp_fe_context@@Base+0x6724>
   1195c:	sub	x0, x26, x21
   11960:	mov	w1, #0xd                   	// #13
   11964:	sub	w0, w0, #0x3
   11968:	strb	w1, [x21]
   1196c:	sturh	w0, [x21, #1]
   11970:	b	109b4 <gcc_cp_fe_context@@Base+0x673c>
   11974:	ldr	x0, [x2, #16]
   11978:	ldr	w2, [sp, #148]
   1197c:	sub	w19, w2, w20, uxtb
   11980:	and	w20, w20, #0xff
   11984:	and	w19, w19, #0xff
   11988:	strb	w19, [x1, x0]
   1198c:	ldp	x22, x2, [x25]
   11990:	sub	x0, x21, x22
   11994:	add	x0, x0, #0x3
   11998:	cmp	x0, x2
   1199c:	b.hi	119f8 <gcc_cp_fe_context@@Base+0x7780>  // b.pmore
   119a0:	b	11c88 <gcc_cp_fe_context@@Base+0x7a10>
   119a4:	str	x1, [x25, #8]
   119a8:	mov	x0, x22
   119ac:	bl	53b0 <realloc@plt>
   119b0:	str	x0, [x25]
   119b4:	subs	x1, x0, x22
   119b8:	add	x3, x28, x1
   119bc:	add	x2, x26, x1
   119c0:	mov	x22, x0
   119c4:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   119c8:	b.eq	119e4 <gcc_cp_fe_context@@Base+0x776c>  // b.none
   119cc:	cmp	x28, #0x0
   119d0:	add	x21, x21, x1
   119d4:	csel	x28, x3, x28, ne  // ne = any
   119d8:	cmp	x26, #0x0
   119dc:	csel	x26, x2, x26, ne  // ne = any
   119e0:	add	x23, x23, x1
   119e4:	ldr	x2, [x25, #8]
   119e8:	sub	x0, x21, x0
   119ec:	add	x0, x0, #0x3
   119f0:	cmp	x0, x2
   119f4:	b.ls	11c88 <gcc_cp_fe_context@@Base+0x7a10>  // b.plast
   119f8:	lsl	x1, x2, #1
   119fc:	cmp	x2, #0x10, lsl #12
   11a00:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   11a04:	cmp	x1, #0x10, lsl #12
   11a08:	b.ls	119a4 <gcc_cp_fe_context@@Base+0x772c>  // b.plast
   11a0c:	mov	x1, #0x10000               	// #65536
   11a10:	str	x1, [x25, #8]
   11a14:	b	119a8 <gcc_cp_fe_context@@Base+0x7730>
   11a18:	mov	w19, w22
   11a1c:	mov	w22, w1
   11a20:	b	11478 <gcc_cp_fe_context@@Base+0x7200>
   11a24:	ldr	x0, [sp, #120]
   11a28:	mov	w19, #0x7                   	// #7
   11a2c:	bl	5380 <free@plt>
   11a30:	ldp	x27, x28, [sp, #80]
   11a34:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   11a38:	ldr	x1, [sp, #104]
   11a3c:	cmp	x1, x2
   11a40:	b.eq	11aa4 <gcc_cp_fe_context@@Base+0x782c>  // b.none
   11a44:	mov	w1, #0xffffffff            	// #-1
   11a48:	mov	w5, #0x7fff                	// #32767
   11a4c:	cbz	x24, 11adc <gcc_cp_fe_context@@Base+0x7864>
   11a50:	ldr	x6, [sp, #104]
   11a54:	b	11a7c <gcc_cp_fe_context@@Base+0x7804>
   11a58:	cmp	w1, w5
   11a5c:	b.gt	11a74 <gcc_cp_fe_context@@Base+0x77fc>
   11a60:	cmp	w1, #0x0
   11a64:	csel	w1, w1, wzr, ge  // ge = tcont
   11a68:	add	w1, w1, w1, lsl #2
   11a6c:	add	w1, w3, w1, lsl #1
   11a70:	sub	w1, w1, #0x30
   11a74:	cmp	x2, x6
   11a78:	b.eq	11ca8 <gcc_cp_fe_context@@Base+0x7a30>  // b.none
   11a7c:	add	x2, x2, #0x1
   11a80:	str	x2, [sp, #456]
   11a84:	ldurb	w3, [x2, #-1]
   11a88:	ldrb	w3, [x24, x3]
   11a8c:	sub	w4, w3, #0x30
   11a90:	and	w4, w4, #0xff
   11a94:	cmp	w4, #0x9
   11a98:	b.ls	11a58 <gcc_cp_fe_context@@Base+0x77e0>  // b.plast
   11a9c:	cmn	w1, #0x1
   11aa0:	b.ne	11cac <gcc_cp_fe_context@@Base+0x7a34>  // b.any
   11aa4:	mov	w1, #0x7fff                	// #32767
   11aa8:	cmp	w22, w1
   11aac:	cset	w4, gt
   11ab0:	b	103e0 <gcc_cp_fe_context@@Base+0x6168>
   11ab4:	cmp	w1, w5
   11ab8:	b.gt	11ad0 <gcc_cp_fe_context@@Base+0x7858>
   11abc:	cmp	w1, #0x0
   11ac0:	csel	w1, w1, wzr, ge  // ge = tcont
   11ac4:	add	w1, w1, w1, lsl #2
   11ac8:	add	w1, w3, w1, lsl #1
   11acc:	sub	w1, w1, #0x30
   11ad0:	ldr	x4, [sp, #104]
   11ad4:	cmp	x4, x2
   11ad8:	b.eq	11ca8 <gcc_cp_fe_context@@Base+0x7a30>  // b.none
   11adc:	add	x2, x2, #0x1
   11ae0:	str	x2, [sp, #456]
   11ae4:	ldurb	w3, [x2, #-1]
   11ae8:	sub	w4, w3, #0x30
   11aec:	and	w4, w4, #0xff
   11af0:	cmp	w4, #0x9
   11af4:	b.ls	11ab4 <gcc_cp_fe_context@@Base+0x783c>  // b.plast
   11af8:	b	11a9c <gcc_cp_fe_context@@Base+0x7824>
   11afc:	ldr	x1, [sp, #256]
   11b00:	cbz	x1, 1282c <gcc_cp_fe_context@@Base+0x85b4>
   11b04:	ldp	x20, x2, [x25]
   11b08:	mov	w19, #0x7b                  	// #123
   11b0c:	str	x0, [sp, #456]
   11b10:	sub	x0, x21, x20
   11b14:	b	1040c <gcc_cp_fe_context@@Base+0x6194>
   11b18:	ldr	x0, [sp, #288]
   11b1c:	cbz	x0, 11220 <gcc_cp_fe_context@@Base+0x6fa8>
   11b20:	mov	w0, #0x4                   	// #4
   11b24:	strb	w0, [x21, #2]
   11b28:	b	11220 <gcc_cp_fe_context@@Base+0x6fa8>
   11b2c:	cmp	x26, x27
   11b30:	add	x21, x27, #0x3
   11b34:	b.eq	11b4c <gcc_cp_fe_context@@Base+0x78d4>  // b.none
   11b38:	sub	x0, x26, x27
   11b3c:	sub	x2, x27, x26
   11b40:	add	x0, x21, x0
   11b44:	mov	x1, x26
   11b48:	bl	5550 <memmove@plt>
   11b4c:	mov	w0, #0x313                 	// #787
   11b50:	strh	w0, [x26]
   11b54:	strb	wzr, [x26, #2]
   11b58:	mov	x27, #0x0                   	// #0
   11b5c:	ldr	x1, [sp, #456]
   11b60:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   11b64:	ldr	x0, [sp, #120]
   11b68:	mov	w19, #0x8                   	// #8
   11b6c:	bl	5380 <free@plt>
   11b70:	ldp	x27, x28, [sp, #80]
   11b74:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   11b78:	cmp	x4, x24
   11b7c:	b.eq	127a8 <gcc_cp_fe_context@@Base+0x8530>  // b.none
   11b80:	add	x0, x1, #0x2
   11b84:	str	x0, [sp, #456]
   11b88:	cmp	x0, x24
   11b8c:	b.eq	11a24 <gcc_cp_fe_context@@Base+0x77ac>  // b.none
   11b90:	mov	w11, #0x0                   	// #0
   11b94:	cbz	x22, 11be4 <gcc_cp_fe_context@@Base+0x796c>
   11b98:	add	x1, x0, #0x1
   11b9c:	str	x1, [sp, #456]
   11ba0:	add	w5, w11, #0x1
   11ba4:	mov	w3, w11
   11ba8:	ldurb	w2, [x1, #-1]
   11bac:	ldrb	w4, [x22, x2]
   11bb0:	cmp	w4, #0x3d
   11bb4:	b.eq	11c28 <gcc_cp_fe_context@@Base+0x79b0>  // b.none
   11bb8:	cmp	x1, x24
   11bbc:	b.eq	12310 <gcc_cp_fe_context@@Base+0x8098>  // b.none
   11bc0:	cmp	w11, #0xf
   11bc4:	b.hi	11c1c <gcc_cp_fe_context@@Base+0x79a4>  // b.pmore
   11bc8:	and	w11, w5, #0xff
   11bcc:	mov	x0, x1
   11bd0:	strb	w4, [x20, w3, sxtw]
   11bd4:	b	11b98 <gcc_cp_fe_context@@Base+0x7920>
   11bd8:	and	w11, w3, #0xff
   11bdc:	mov	x0, x1
   11be0:	strb	w4, [x20, w2, sxtw]
   11be4:	add	x1, x0, #0x1
   11be8:	str	x1, [sp, #456]
   11bec:	add	w3, w11, #0x1
   11bf0:	mov	w2, w11
   11bf4:	ldurb	w4, [x1, #-1]
   11bf8:	cmp	w4, #0x3d
   11bfc:	b.eq	11c78 <gcc_cp_fe_context@@Base+0x7a00>  // b.none
   11c00:	cmp	x24, x1
   11c04:	b.eq	12310 <gcc_cp_fe_context@@Base+0x8098>  // b.none
   11c08:	cmp	w11, #0xf
   11c0c:	b.ls	11bd8 <gcc_cp_fe_context@@Base+0x7960>  // b.plast
   11c10:	mov	x0, x1
   11c14:	strb	wzr, [sp, #464]
   11c18:	b	11be4 <gcc_cp_fe_context@@Base+0x796c>
   11c1c:	mov	x0, x1
   11c20:	strb	wzr, [sp, #464]
   11c24:	b	11b98 <gcc_cp_fe_context@@Base+0x7920>
   11c28:	ldrb	w2, [x0, #1]
   11c2c:	cmp	w2, #0x5d
   11c30:	b.ne	11bb8 <gcc_cp_fe_context@@Base+0x7940>  // b.any
   11c34:	strb	wzr, [x20, w11, sxtw]
   11c38:	ldrb	w4, [sp, #464]
   11c3c:	cbz	w4, 12320 <gcc_cp_fe_context@@Base+0x80a8>
   11c40:	cmp	w11, #0x1
   11c44:	b.ne	128dc <gcc_cp_fe_context@@Base+0x8664>  // b.any
   11c48:	cmp	x24, x1
   11c4c:	b.eq	127a8 <gcc_cp_fe_context@@Base+0x8530>  // b.none
   11c50:	ubfx	x1, x4, #3, #5
   11c54:	add	x0, x0, #0x2
   11c58:	str	x0, [sp, #456]
   11c5c:	and	w0, w4, #0x7
   11c60:	ldrb	w4, [x27, x1]
   11c64:	lsl	w0, w11, w0
   11c68:	orr	w0, w0, w4
   11c6c:	strb	w0, [x27, x1]
   11c70:	ldr	x1, [sp, #456]
   11c74:	b	11300 <gcc_cp_fe_context@@Base+0x7088>
   11c78:	ldrb	w5, [x0, #1]
   11c7c:	cmp	w5, #0x5d
   11c80:	b.ne	11c00 <gcc_cp_fe_context@@Base+0x7988>  // b.any
   11c84:	b	11c34 <gcc_cp_fe_context@@Base+0x79bc>
   11c88:	mov	w0, #0x7                   	// #7
   11c8c:	strb	w0, [x21]
   11c90:	strb	w20, [x21, #1]
   11c94:	mov	x27, #0x0                   	// #0
   11c98:	strb	w19, [x21, #2]
   11c9c:	add	x21, x21, #0x3
   11ca0:	ldr	x1, [sp, #456]
   11ca4:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   11ca8:	ldr	x2, [sp, #104]
   11cac:	cmp	w22, w1
   11cb0:	cset	w4, gt
   11cb4:	b	103e0 <gcc_cp_fe_context@@Base+0x6168>
   11cb8:	ldrb	w5, [x1, #1]
   11cbc:	cmp	w5, #0x5d
   11cc0:	b.ne	115f4 <gcc_cp_fe_context@@Base+0x737c>  // b.any
   11cc4:	b	118c8 <gcc_cp_fe_context@@Base+0x7650>
   11cc8:	cmp	x4, x24
   11ccc:	b.eq	127a8 <gcc_cp_fe_context@@Base+0x8530>  // b.none
   11cd0:	add	x23, x1, #0x2
   11cd4:	str	x23, [sp, #456]
   11cd8:	cmp	x23, x24
   11cdc:	b.eq	11a24 <gcc_cp_fe_context@@Base+0x77ac>  // b.none
   11ce0:	mov	w4, #0x0                   	// #0
   11ce4:	cbz	x22, 11d34 <gcc_cp_fe_context@@Base+0x7abc>
   11ce8:	add	x6, x23, #0x1
   11cec:	str	x6, [sp, #456]
   11cf0:	add	w2, w4, #0x1
   11cf4:	mov	w1, w4
   11cf8:	ldurb	w0, [x6, #-1]
   11cfc:	ldrb	w0, [x22, x0]
   11d00:	cmp	w0, #0x3a
   11d04:	b.eq	11d78 <gcc_cp_fe_context@@Base+0x7b00>  // b.none
   11d08:	cmp	x6, x24
   11d0c:	b.eq	127b4 <gcc_cp_fe_context@@Base+0x853c>  // b.none
   11d10:	cmp	w4, #0x5
   11d14:	b.hi	11d6c <gcc_cp_fe_context@@Base+0x7af4>  // b.pmore
   11d18:	and	w4, w2, #0xff
   11d1c:	mov	x23, x6
   11d20:	strb	w0, [x20, w1, sxtw]
   11d24:	b	11ce8 <gcc_cp_fe_context@@Base+0x7a70>
   11d28:	and	w4, w2, #0xff
   11d2c:	mov	x23, x6
   11d30:	strb	w0, [x20, w1, sxtw]
   11d34:	add	x6, x23, #0x1
   11d38:	str	x6, [sp, #456]
   11d3c:	add	w2, w4, #0x1
   11d40:	mov	w1, w4
   11d44:	ldurb	w0, [x6, #-1]
   11d48:	cmp	w0, #0x3a
   11d4c:	b.eq	12110 <gcc_cp_fe_context@@Base+0x7e98>  // b.none
   11d50:	cmp	x24, x6
   11d54:	b.eq	127b4 <gcc_cp_fe_context@@Base+0x853c>  // b.none
   11d58:	cmp	w4, #0x5
   11d5c:	b.ls	11d28 <gcc_cp_fe_context@@Base+0x7ab0>  // b.plast
   11d60:	mov	x23, x6
   11d64:	strb	wzr, [sp, #464]
   11d68:	b	11d34 <gcc_cp_fe_context@@Base+0x7abc>
   11d6c:	mov	x23, x6
   11d70:	strb	wzr, [sp, #464]
   11d74:	b	11ce8 <gcc_cp_fe_context@@Base+0x7a70>
   11d78:	ldrb	w3, [x23, #1]
   11d7c:	cmp	w3, #0x5d
   11d80:	b.ne	11d08 <gcc_cp_fe_context@@Base+0x7a90>  // b.any
   11d84:	ldr	x1, [sp, #384]
   11d88:	mov	x0, x20
   11d8c:	strb	wzr, [x20, w4, sxtw]
   11d90:	str	x6, [sp, #440]
   11d94:	bl	5620 <strcmp@plt>
   11d98:	str	w0, [sp, #332]
   11d9c:	ldr	x1, [sp, #392]
   11da0:	mov	x0, x20
   11da4:	bl	5620 <strcmp@plt>
   11da8:	str	w0, [sp, #344]
   11dac:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11db0:	mov	x0, x20
   11db4:	add	x1, x1, #0xa20
   11db8:	bl	5620 <strcmp@plt>
   11dbc:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11dc0:	add	x1, x1, #0xa28
   11dc4:	str	w0, [sp, #360]
   11dc8:	mov	x0, x20
   11dcc:	bl	5620 <strcmp@plt>
   11dd0:	str	w0, [sp, #364]
   11dd4:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11dd8:	mov	x0, x20
   11ddc:	add	x1, x1, #0xa30
   11de0:	bl	5620 <strcmp@plt>
   11de4:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11de8:	add	x1, x1, #0xa38
   11dec:	str	w0, [sp, #336]
   11df0:	mov	x0, x20
   11df4:	bl	5620 <strcmp@plt>
   11df8:	str	w0, [sp, #348]
   11dfc:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11e00:	mov	x0, x20
   11e04:	add	x1, x1, #0xa40
   11e08:	bl	5620 <strcmp@plt>
   11e0c:	cmp	w0, #0x0
   11e10:	mov	w28, w0
   11e14:	cset	w4, eq  // eq = none
   11e18:	mov	x0, x20
   11e1c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11e20:	add	x1, x1, #0xa48
   11e24:	str	w4, [sp, #356]
   11e28:	str	w28, [sp, #376]
   11e2c:	bl	5620 <strcmp@plt>
   11e30:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11e34:	add	x1, x1, #0xa50
   11e38:	str	w0, [sp, #368]
   11e3c:	mov	x0, x20
   11e40:	bl	5620 <strcmp@plt>
   11e44:	str	w0, [sp, #340]
   11e48:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11e4c:	mov	x0, x20
   11e50:	add	x1, x1, #0xa58
   11e54:	bl	5620 <strcmp@plt>
   11e58:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11e5c:	add	x1, x1, #0xa60
   11e60:	str	w0, [sp, #352]
   11e64:	mov	x0, x20
   11e68:	bl	5620 <strcmp@plt>
   11e6c:	mov	w2, w0
   11e70:	cmp	w0, #0x0
   11e74:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   11e78:	cset	w26, eq  // eq = none
   11e7c:	add	x1, x1, #0xa68
   11e80:	mov	x0, x20
   11e84:	str	w2, [sp, #372]
   11e88:	bl	5620 <strcmp@plt>
   11e8c:	mov	w3, w0
   11e90:	ldr	w1, [sp, #344]
   11e94:	ldr	w2, [sp, #372]
   11e98:	cmp	w1, #0x0
   11e9c:	ldr	w1, [sp, #336]
   11ea0:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   11ea4:	str	w3, [sp, #380]
   11ea8:	cset	w0, ne  // ne = any
   11eac:	cmp	w28, #0x0
   11eb0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   11eb4:	ldr	w1, [sp, #332]
   11eb8:	csel	w0, w0, wzr, ne  // ne = any
   11ebc:	ldr	w4, [sp, #356]
   11ec0:	cmp	w1, #0x0
   11ec4:	ldr	w1, [sp, #352]
   11ec8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   11ecc:	csel	w0, w0, wzr, ne  // ne = any
   11ed0:	cmp	w1, #0x0
   11ed4:	ldr	w1, [sp, #368]
   11ed8:	ldr	x6, [sp, #440]
   11edc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   11ee0:	ldr	w1, [sp, #348]
   11ee4:	csel	w0, w0, wzr, ne  // ne = any
   11ee8:	cmp	w1, #0x0
   11eec:	ldr	w1, [sp, #340]
   11ef0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   11ef4:	ldr	w1, [sp, #360]
   11ef8:	csel	w0, w0, wzr, ne  // ne = any
   11efc:	cmp	w1, #0x0
   11f00:	ldr	w1, [sp, #364]
   11f04:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   11f08:	csel	w0, w0, wzr, ne  // ne = any
   11f0c:	cbnz	w0, 128b4 <gcc_cp_fe_context@@Base+0x863c>
   11f10:	cmp	x24, x6
   11f14:	b.eq	127a8 <gcc_cp_fe_context@@Base+0x8530>  // b.none
   11f18:	add	x1, x23, #0x2
   11f1c:	str	x1, [sp, #456]
   11f20:	cmp	x1, x24
   11f24:	b.eq	11a24 <gcc_cp_fe_context@@Base+0x77ac>  // b.none
   11f28:	orr	w0, w4, w26
   11f2c:	mov	x28, #0x0                   	// #0
   11f30:	str	w0, [sp, #356]
   11f34:	mov	x0, x20
   11f38:	mov	w20, w19
   11f3c:	mov	x19, x28
   11f40:	mov	x28, x0
   11f44:	mov	w26, #0x1                   	// #1
   11f48:	ldr	w0, [sp, #332]
   11f4c:	mov	w23, w19
   11f50:	cbnz	w0, 11f64 <gcc_cp_fe_context@@Base+0x7cec>
   11f54:	bl	54d0 <__ctype_b_loc@plt>
   11f58:	ldr	x0, [x0]
   11f5c:	ldrh	w0, [x0, x19, lsl #1]
   11f60:	tbnz	w0, #3, 11fac <gcc_cp_fe_context@@Base+0x7d34>
   11f64:	ldr	w0, [sp, #344]
   11f68:	cbnz	w0, 11f7c <gcc_cp_fe_context@@Base+0x7d04>
   11f6c:	bl	54d0 <__ctype_b_loc@plt>
   11f70:	ldr	x0, [x0]
   11f74:	ldrh	w0, [x0, x19, lsl #1]
   11f78:	tbnz	w0, #10, 11fac <gcc_cp_fe_context@@Base+0x7d34>
   11f7c:	ldr	w0, [sp, #360]
   11f80:	cbnz	w0, 11f94 <gcc_cp_fe_context@@Base+0x7d1c>
   11f84:	bl	54d0 <__ctype_b_loc@plt>
   11f88:	ldr	x0, [x0]
   11f8c:	ldrh	w0, [x0, x19, lsl #1]
   11f90:	tbnz	w0, #0, 11fac <gcc_cp_fe_context@@Base+0x7d34>
   11f94:	ldr	w0, [sp, #364]
   11f98:	cbnz	w0, 11fc4 <gcc_cp_fe_context@@Base+0x7d4c>
   11f9c:	bl	54d0 <__ctype_b_loc@plt>
   11fa0:	ldr	x0, [x0]
   11fa4:	ldrh	w0, [x0, x19, lsl #1]
   11fa8:	tbz	w0, #1, 11fc4 <gcc_cp_fe_context@@Base+0x7d4c>
   11fac:	ubfx	x2, x19, #3, #5
   11fb0:	and	w0, w23, #0x7
   11fb4:	lsl	w0, w26, w0
   11fb8:	ldrb	w3, [x27, x2]
   11fbc:	orr	w0, w0, w3
   11fc0:	strb	w0, [x27, x2]
   11fc4:	ldr	w0, [sp, #336]
   11fc8:	cbnz	w0, 120c4 <gcc_cp_fe_context@@Base+0x7e4c>
   11fcc:	bl	54d0 <__ctype_b_loc@plt>
   11fd0:	ldr	x0, [x0]
   11fd4:	ldrh	w0, [x0, x19, lsl #1]
   11fd8:	tbz	w0, #11, 120c4 <gcc_cp_fe_context@@Base+0x7e4c>
   11fdc:	ubfx	x2, x19, #3, #5
   11fe0:	and	w0, w23, #0x7
   11fe4:	lsl	w0, w26, w0
   11fe8:	ldrb	w3, [x27, x2]
   11fec:	orr	w0, w0, w3
   11ff0:	strb	w0, [x27, x2]
   11ff4:	ldr	w0, [sp, #340]
   11ff8:	cbnz	w0, 1200c <gcc_cp_fe_context@@Base+0x7d94>
   11ffc:	bl	54d0 <__ctype_b_loc@plt>
   12000:	ldr	x0, [x0]
   12004:	ldrh	w0, [x0, x19, lsl #1]
   12008:	tbnz	w0, #2, 12054 <gcc_cp_fe_context@@Base+0x7ddc>
   1200c:	ldr	w0, [sp, #352]
   12010:	cbnz	w0, 12024 <gcc_cp_fe_context@@Base+0x7dac>
   12014:	bl	54d0 <__ctype_b_loc@plt>
   12018:	ldr	x0, [x0]
   1201c:	ldrh	w0, [x0, x19, lsl #1]
   12020:	tbnz	w0, #13, 12054 <gcc_cp_fe_context@@Base+0x7ddc>
   12024:	ldr	w0, [sp, #372]
   12028:	cbnz	w0, 1203c <gcc_cp_fe_context@@Base+0x7dc4>
   1202c:	bl	54d0 <__ctype_b_loc@plt>
   12030:	ldr	x0, [x0]
   12034:	ldrh	w0, [x0, x19, lsl #1]
   12038:	tbnz	w0, #8, 12054 <gcc_cp_fe_context@@Base+0x7ddc>
   1203c:	ldr	w0, [sp, #380]
   12040:	cbnz	w0, 1206c <gcc_cp_fe_context@@Base+0x7df4>
   12044:	bl	54d0 <__ctype_b_loc@plt>
   12048:	ldr	x0, [x0]
   1204c:	ldrh	w0, [x0, x19, lsl #1]
   12050:	tbz	w0, #12, 1206c <gcc_cp_fe_context@@Base+0x7df4>
   12054:	ubfx	x2, x19, #3, #5
   12058:	and	w0, w23, #0x7
   1205c:	lsl	w0, w26, w0
   12060:	ldrb	w3, [x27, x2]
   12064:	orr	w0, w0, w3
   12068:	strb	w0, [x27, x2]
   1206c:	cbz	x22, 120a4 <gcc_cp_fe_context@@Base+0x7e2c>
   12070:	ldr	w0, [sp, #356]
   12074:	cbz	w0, 120a4 <gcc_cp_fe_context@@Base+0x7e2c>
   12078:	bl	54d0 <__ctype_b_loc@plt>
   1207c:	ldr	x0, [x0]
   12080:	ldrh	w0, [x0, x19, lsl #1]
   12084:	tst	w0, #0x300
   12088:	b.eq	120a4 <gcc_cp_fe_context@@Base+0x7e2c>  // b.none
   1208c:	ubfx	x2, x19, #3, #5
   12090:	and	w0, w23, #0x7
   12094:	lsl	w0, w26, w0
   12098:	ldrb	w3, [x27, x2]
   1209c:	orr	w0, w0, w3
   120a0:	strb	w0, [x27, x2]
   120a4:	add	x19, x19, #0x1
   120a8:	cmp	x19, #0x100
   120ac:	b.ne	11f48 <gcc_cp_fe_context@@Base+0x7cd0>  // b.any
   120b0:	mov	w19, w20
   120b4:	mov	w11, #0x1                   	// #1
   120b8:	mov	x20, x28
   120bc:	ldr	x1, [sp, #456]
   120c0:	b	11300 <gcc_cp_fe_context@@Base+0x7088>
   120c4:	ldr	w0, [sp, #348]
   120c8:	cbnz	w0, 120dc <gcc_cp_fe_context@@Base+0x7e64>
   120cc:	bl	54d0 <__ctype_b_loc@plt>
   120d0:	ldr	x0, [x0]
   120d4:	ldrsh	w0, [x0, x19, lsl #1]
   120d8:	tbnz	w0, #31, 11fdc <gcc_cp_fe_context@@Base+0x7d64>
   120dc:	ldr	w0, [sp, #376]
   120e0:	cbnz	w0, 120f4 <gcc_cp_fe_context@@Base+0x7e7c>
   120e4:	bl	54d0 <__ctype_b_loc@plt>
   120e8:	ldr	x0, [x0]
   120ec:	ldrh	w0, [x0, x19, lsl #1]
   120f0:	tbnz	w0, #9, 11fdc <gcc_cp_fe_context@@Base+0x7d64>
   120f4:	ldr	w0, [sp, #368]
   120f8:	cbnz	w0, 11ff4 <gcc_cp_fe_context@@Base+0x7d7c>
   120fc:	bl	54d0 <__ctype_b_loc@plt>
   12100:	ldr	x0, [x0]
   12104:	ldrh	w0, [x0, x19, lsl #1]
   12108:	tbz	w0, #14, 11ff4 <gcc_cp_fe_context@@Base+0x7d7c>
   1210c:	b	11fdc <gcc_cp_fe_context@@Base+0x7d64>
   12110:	ldrb	w3, [x23, #1]
   12114:	cmp	w3, #0x5d
   12118:	b.ne	11d50 <gcc_cp_fe_context@@Base+0x7ad8>  // b.any
   1211c:	b	11d84 <gcc_cp_fe_context@@Base+0x7b0c>
   12120:	cmp	w22, #0x1
   12124:	b.le	12370 <gcc_cp_fe_context@@Base+0x80f8>
   12128:	add	x0, x0, #0x14
   1212c:	mov	x20, #0x14                  	// #20
   12130:	cmp	x0, x2
   12134:	b.hi	12190 <gcc_cp_fe_context@@Base+0x7f18>  // b.pmore
   12138:	b	128ac <gcc_cp_fe_context@@Base+0x8634>
   1213c:	str	x1, [x25, #8]
   12140:	mov	x0, x27
   12144:	bl	53b0 <realloc@plt>
   12148:	str	x0, [x25]
   1214c:	subs	x1, x0, x27
   12150:	add	x3, x28, x1
   12154:	add	x2, x26, x1
   12158:	mov	x27, x0
   1215c:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   12160:	b.eq	1217c <gcc_cp_fe_context@@Base+0x7f04>  // b.none
   12164:	cmp	x28, #0x0
   12168:	add	x21, x21, x1
   1216c:	csel	x28, x3, x28, ne  // ne = any
   12170:	cmp	x26, #0x0
   12174:	csel	x26, x2, x26, ne  // ne = any
   12178:	add	x23, x23, x1
   1217c:	ldr	x2, [x25, #8]
   12180:	sub	x0, x21, x0
   12184:	add	x0, x0, x20
   12188:	cmp	x0, x2
   1218c:	b.ls	12818 <gcc_cp_fe_context@@Base+0x85a0>  // b.plast
   12190:	lsl	x1, x2, #1
   12194:	cmp	x2, #0x10, lsl #12
   12198:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   1219c:	cmp	x1, #0x10, lsl #12
   121a0:	b.ls	1213c <gcc_cp_fe_context@@Base+0x7ec4>  // b.plast
   121a4:	mov	x1, #0x10000               	// #65536
   121a8:	str	x1, [x25, #8]
   121ac:	b	12140 <gcc_cp_fe_context@@Base+0x7ec8>
   121b0:	mov	w0, #0x18                  	// #24
   121b4:	strb	w0, [x21], #1
   121b8:	ldr	x1, [sp, #456]
   121bc:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   121c0:	ldr	x0, [sp, #120]
   121c4:	mov	w19, #0xb                   	// #11
   121c8:	bl	5380 <free@plt>
   121cc:	ldp	x27, x28, [sp, #80]
   121d0:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   121d4:	mov	w0, #0x1c                  	// #28
   121d8:	strb	w0, [x21], #1
   121dc:	ldr	x1, [sp, #456]
   121e0:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   121e4:	ldp	x19, x2, [x25]
   121e8:	mov	x26, x21
   121ec:	sub	x0, x21, x19
   121f0:	add	x0, x0, #0x2
   121f4:	cmp	x0, x2
   121f8:	b.hi	12260 <gcc_cp_fe_context@@Base+0x7fe8>  // b.pmore
   121fc:	b	12354 <gcc_cp_fe_context@@Base+0x80dc>
   12200:	str	x1, [x25, #8]
   12204:	mov	x0, x19
   12208:	bl	53b0 <realloc@plt>
   1220c:	str	x0, [x25]
   12210:	subs	x1, x0, x19
   12214:	add	x4, x28, x1
   12218:	add	x3, x26, x1
   1221c:	add	x2, x27, x1
   12220:	mov	x19, x0
   12224:	cbz	x0, 10e40 <gcc_cp_fe_context@@Base+0x6bc8>
   12228:	b.eq	1224c <gcc_cp_fe_context@@Base+0x7fd4>  // b.none
   1222c:	cmp	x28, #0x0
   12230:	add	x21, x21, x1
   12234:	csel	x28, x4, x28, ne  // ne = any
   12238:	cmp	x26, #0x0
   1223c:	csel	x26, x3, x26, ne  // ne = any
   12240:	cmp	x27, #0x0
   12244:	csel	x27, x2, x27, ne  // ne = any
   12248:	add	x23, x23, x1
   1224c:	ldr	x2, [x25, #8]
   12250:	sub	x0, x21, x0
   12254:	add	x0, x0, #0x2
   12258:	cmp	x0, x2
   1225c:	b.ls	12354 <gcc_cp_fe_context@@Base+0x80dc>  // b.plast
   12260:	lsl	x1, x2, #1
   12264:	cmp	x2, #0x10, lsl #12
   12268:	b.eq	fef8 <gcc_cp_fe_context@@Base+0x5c80>  // b.none
   1226c:	cmp	x1, #0x10, lsl #12
   12270:	b.ls	12200 <gcc_cp_fe_context@@Base+0x7f88>  // b.plast
   12274:	mov	x1, #0x10000               	// #65536
   12278:	str	x1, [x25, #8]
   1227c:	b	12204 <gcc_cp_fe_context@@Base+0x7f8c>
   12280:	mov	w0, #0x1a                  	// #26
   12284:	strb	w0, [x21], #1
   12288:	ldr	x1, [sp, #456]
   1228c:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   12290:	ldr	x0, [sp, #120]
   12294:	mov	w19, #0xd                   	// #13
   12298:	bl	5380 <free@plt>
   1229c:	ldp	x27, x28, [sp, #80]
   122a0:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   122a4:	mov	w0, #0x1b                  	// #27
   122a8:	strb	w0, [x21], #1
   122ac:	ldr	x1, [sp, #456]
   122b0:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   122b4:	mov	w0, #0xb                   	// #11
   122b8:	strb	w0, [x21], #1
   122bc:	ldr	x1, [sp, #456]
   122c0:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   122c4:	mov	w0, #0x1d                  	// #29
   122c8:	strb	w0, [x21], #1
   122cc:	ldr	x1, [sp, #456]
   122d0:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   122d4:	mov	w0, #0xc                   	// #12
   122d8:	strb	w0, [x21], #1
   122dc:	ldr	x1, [sp, #456]
   122e0:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   122e4:	mov	w0, #0x19                  	// #25
   122e8:	strb	w0, [x21], #1
   122ec:	ldr	x1, [sp, #456]
   122f0:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   122f4:	ldr	x1, [sp, #304]
   122f8:	cmp	x1, #0x20
   122fc:	b.eq	12290 <gcc_cp_fe_context@@Base+0x8018>  // b.none
   12300:	ldr	x1, [sp, #224]
   12304:	cbz	x1, 103f4 <gcc_cp_fe_context@@Base+0x617c>
   12308:	mov	x26, x21
   1230c:	b	114b8 <gcc_cp_fe_context@@Base+0x7240>
   12310:	strb	wzr, [x20, w11, sxtw]
   12314:	cmp	w4, #0x3d
   12318:	mov	x1, x24
   1231c:	b.eq	12918 <gcc_cp_fe_context@@Base+0x86a0>  // b.none
   12320:	ldrb	w4, [x21, #8]
   12324:	and	x6, x11, #0xff
   12328:	ldrb	w0, [x21, #12]
   1232c:	mvn	x6, x6
   12330:	add	x1, x1, x6
   12334:	orr	w4, w4, #0x20
   12338:	orr	w0, w0, #0x8
   1233c:	mov	w19, #0x3d                  	// #61
   12340:	mov	w11, #0x0                   	// #0
   12344:	strb	w4, [x21, #8]
   12348:	strb	w0, [x21, #12]
   1234c:	str	x1, [sp, #456]
   12350:	b	11300 <gcc_cp_fe_context@@Base+0x7088>
   12354:	mov	x0, x21
   12358:	mov	w1, #0x8                   	// #8
   1235c:	strb	w1, [x0], #2
   12360:	strb	w20, [x21, #1]
   12364:	mov	x21, x0
   12368:	ldr	x1, [sp, #456]
   1236c:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   12370:	add	x0, x0, #0xa
   12374:	mov	x20, #0xa                   	// #10
   12378:	cmp	x2, x0
   1237c:	b.cc	12190 <gcc_cp_fe_context@@Base+0x7f18>  // b.lo, b.ul, b.last
   12380:	mov	x0, #0x5                   	// #5
   12384:	add	x20, x21, x0
   12388:	cmp	x21, x26
   1238c:	sub	x20, x20, x26
   12390:	add	x27, x21, #0x5
   12394:	sub	w20, w20, #0x3
   12398:	b.eq	123b0 <gcc_cp_fe_context@@Base+0x8138>  // b.none
   1239c:	sub	x0, x26, x21
   123a0:	sub	x2, x21, x26
   123a4:	add	x0, x27, x0
   123a8:	mov	x1, x26
   123ac:	bl	5550 <memmove@plt>
   123b0:	mov	w0, #0x15                  	// #21
   123b4:	strb	w0, [x26]
   123b8:	sturh	w20, [x26, #1]
   123bc:	cmp	x27, x26
   123c0:	sturh	w19, [x26, #3]
   123c4:	add	x4, x21, #0xa
   123c8:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   123cc:	sub	x2, x21, #0xb
   123d0:	sub	x0, x21, #0x6
   123d4:	cmp	x2, x4
   123d8:	sub	x3, x21, x26
   123dc:	ccmp	x0, x27, #0x2, cc  // cc = lo, ul, last
   123e0:	add	x0, x3, #0x4
   123e4:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
   123e8:	b.ls	12568 <gcc_cp_fe_context@@Base+0x82f0>  // b.plast
   123ec:	sub	x1, x3, #0xb
   123f0:	add	x3, x3, #0x5
   123f4:	mov	x0, #0x0                   	// #0
   123f8:	lsr	x1, x1, #4
   123fc:	add	x1, x1, #0x1
   12400:	ldr	q0, [x2]
   12404:	add	x0, x0, #0x1
   12408:	cmp	x0, x1
   1240c:	sub	x2, x2, #0x10
   12410:	stur	q0, [x2, #21]
   12414:	b.cc	12400 <gcc_cp_fe_context@@Base+0x8188>  // b.lo, b.ul, b.last
   12418:	sub	x5, x27, x1, lsl #4
   1241c:	cmp	x3, x1, lsl #4
   12420:	sub	x0, x4, x1, lsl #4
   12424:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   12428:	mov	x1, x5
   1242c:	ldrb	w2, [x1, #-1]!
   12430:	sturb	w2, [x0, #-1]
   12434:	cmp	x26, x1
   12438:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   1243c:	mov	x1, x5
   12440:	ldrb	w2, [x1, #-2]!
   12444:	sturb	w2, [x0, #-2]
   12448:	cmp	x26, x1
   1244c:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   12450:	mov	x1, x5
   12454:	ldrb	w2, [x1, #-3]!
   12458:	sturb	w2, [x0, #-3]
   1245c:	cmp	x26, x1
   12460:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   12464:	mov	x1, x5
   12468:	ldrb	w2, [x1, #-4]!
   1246c:	sturb	w2, [x0, #-4]
   12470:	cmp	x26, x1
   12474:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   12478:	mov	x1, x5
   1247c:	ldrb	w2, [x1, #-5]!
   12480:	sturb	w2, [x0, #-5]
   12484:	cmp	x26, x1
   12488:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   1248c:	mov	x1, x5
   12490:	ldrb	w2, [x1, #-6]!
   12494:	sturb	w2, [x0, #-6]
   12498:	cmp	x26, x1
   1249c:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   124a0:	mov	x1, x5
   124a4:	ldrb	w2, [x1, #-7]!
   124a8:	sturb	w2, [x0, #-7]
   124ac:	cmp	x26, x1
   124b0:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   124b4:	mov	x1, x5
   124b8:	ldrb	w2, [x1, #-8]!
   124bc:	sturb	w2, [x0, #-8]
   124c0:	cmp	x26, x1
   124c4:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   124c8:	mov	x1, x5
   124cc:	ldrb	w2, [x1, #-9]!
   124d0:	sturb	w2, [x0, #-9]
   124d4:	cmp	x26, x1
   124d8:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   124dc:	mov	x1, x5
   124e0:	ldrb	w2, [x1, #-10]!
   124e4:	sturb	w2, [x0, #-10]
   124e8:	cmp	x26, x1
   124ec:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   124f0:	mov	x1, x5
   124f4:	ldrb	w2, [x1, #-11]!
   124f8:	sturb	w2, [x0, #-11]
   124fc:	cmp	x26, x1
   12500:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   12504:	mov	x1, x5
   12508:	ldrb	w2, [x1, #-12]!
   1250c:	sturb	w2, [x0, #-12]
   12510:	cmp	x26, x1
   12514:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   12518:	mov	x1, x5
   1251c:	ldrb	w2, [x1, #-13]!
   12520:	sturb	w2, [x0, #-13]
   12524:	cmp	x26, x1
   12528:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   1252c:	mov	x1, x5
   12530:	ldrb	w2, [x1, #-14]!
   12534:	sturb	w2, [x0, #-14]
   12538:	cmp	x26, x1
   1253c:	b.eq	12548 <gcc_cp_fe_context@@Base+0x82d0>  // b.none
   12540:	ldurb	w1, [x5, #-15]
   12544:	sturb	w1, [x0, #-15]
   12548:	mov	w0, #0x517                 	// #1303
   1254c:	strh	w0, [x26]
   12550:	strb	wzr, [x26, #2]
   12554:	cmp	w22, #0x1
   12558:	sturh	w19, [x26, #3]
   1255c:	b.gt	12850 <gcc_cp_fe_context@@Base+0x85d8>
   12560:	mov	x21, x4
   12564:	b	11150 <gcc_cp_fe_context@@Base+0x6ed8>
   12568:	ldrb	w0, [x27, #-1]!
   1256c:	strb	w0, [x27, #5]
   12570:	cmp	x26, x27
   12574:	b.ne	12568 <gcc_cp_fe_context@@Base+0x82f0>  // b.any
   12578:	b	12548 <gcc_cp_fe_context@@Base+0x82d0>
   1257c:	cmp	x21, x26
   12580:	add	x19, x21, #0x3
   12584:	sub	w20, w21, w26
   12588:	b.eq	125a0 <gcc_cp_fe_context@@Base+0x8328>  // b.none
   1258c:	sub	x0, x26, x21
   12590:	sub	x2, x21, x26
   12594:	add	x0, x19, x0
   12598:	mov	x1, x26
   1259c:	bl	5550 <memmove@plt>
   125a0:	mov	w0, #0xd                   	// #13
   125a4:	strb	w0, [x26]
   125a8:	sturh	w20, [x26, #1]
   125ac:	mov	x21, x19
   125b0:	mov	x27, #0x0                   	// #0
   125b4:	ldr	x1, [sp, #456]
   125b8:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   125bc:	strb	wzr, [x20, w0, sxtw]
   125c0:	cmp	w6, #0x2e
   125c4:	b.eq	128f0 <gcc_cp_fe_context@@Base+0x8678>  // b.none
   125c8:	mov	x4, x24
   125cc:	and	x0, x0, #0xff
   125d0:	ldrb	w1, [x21, #12]
   125d4:	mvn	x0, x0
   125d8:	mov	w19, #0x2e                  	// #46
   125dc:	add	x0, x4, x0
   125e0:	str	x0, [sp, #456]
   125e4:	orr	w0, w1, #0x8
   125e8:	strb	w0, [x21, #12]
   125ec:	ldrb	w0, [x21, #6]
   125f0:	mov	w11, #0x0                   	// #0
   125f4:	orr	w0, w0, #0x40
   125f8:	strb	w0, [x21, #6]
   125fc:	b	11908 <gcc_cp_fe_context@@Base+0x7690>
   12600:	ldrb	w3, [x21]
   12604:	mov	x24, x22
   12608:	mov	x22, x27
   1260c:	ldp	x27, x23, [sp, #400]
   12610:	ldp	x26, x28, [sp, #416]
   12614:	ldr	x25, [sp, #432]
   12618:	cbz	w3, 1264c <gcc_cp_fe_context@@Base+0x83d4>
   1261c:	add	x0, x21, w3, uxtb
   12620:	b	12630 <gcc_cp_fe_context@@Base+0x83b8>
   12624:	and	w3, w2, #0xff
   12628:	strb	w3, [x21]
   1262c:	cbz	w3, 1264c <gcc_cp_fe_context@@Base+0x83d4>
   12630:	ldrb	w1, [x0]
   12634:	sub	w2, w3, #0x1
   12638:	sub	x0, x0, #0x1
   1263c:	cbz	w1, 12624 <gcc_cp_fe_context@@Base+0x83ac>
   12640:	add	x21, x22, w3, uxtb
   12644:	ldr	x1, [sp, #456]
   12648:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   1264c:	mov	w3, #0x0                   	// #0
   12650:	b	12640 <gcc_cp_fe_context@@Base+0x83c8>
   12654:	ldrb	w0, [x23, #1]
   12658:	cmp	w0, #0x5d
   1265c:	b.ne	127c0 <gcc_cp_fe_context@@Base+0x8548>  // b.any
   12660:	ldr	x27, [sp, #264]
   12664:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   12668:	add	x1, x1, #0xa10
   1266c:	mov	x0, x27
   12670:	bl	5620 <strcmp@plt>
   12674:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   12678:	mov	w25, w0
   1267c:	add	x1, x1, #0xa18
   12680:	mov	x0, x27
   12684:	bl	5620 <strcmp@plt>
   12688:	mov	w26, w0
   1268c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   12690:	mov	x0, x27
   12694:	add	x1, x1, #0xa20
   12698:	bl	5620 <strcmp@plt>
   1269c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   126a0:	mov	w19, w0
   126a4:	add	x1, x1, #0xa28
   126a8:	mov	x0, x27
   126ac:	bl	5620 <strcmp@plt>
   126b0:	mov	w20, w0
   126b4:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   126b8:	mov	x0, x27
   126bc:	add	x1, x1, #0xa30
   126c0:	bl	5620 <strcmp@plt>
   126c4:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   126c8:	mov	w28, w0
   126cc:	add	x1, x1, #0xa38
   126d0:	mov	x0, x27
   126d4:	bl	5620 <strcmp@plt>
   126d8:	mov	w21, w0
   126dc:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   126e0:	mov	x0, x27
   126e4:	add	x1, x1, #0xa40
   126e8:	bl	5620 <strcmp@plt>
   126ec:	mov	w2, w0
   126f0:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   126f4:	mov	x0, x27
   126f8:	add	x1, x1, #0xa48
   126fc:	str	w2, [sp, #104]
   12700:	bl	5620 <strcmp@plt>
   12704:	mov	w23, w0
   12708:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   1270c:	mov	x0, x27
   12710:	add	x1, x1, #0xa50
   12714:	bl	5620 <strcmp@plt>
   12718:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   1271c:	mov	w22, w0
   12720:	add	x1, x1, #0xa58
   12724:	mov	x0, x27
   12728:	bl	5620 <strcmp@plt>
   1272c:	mov	w24, w0
   12730:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   12734:	mov	x0, x27
   12738:	add	x1, x1, #0xa60
   1273c:	str	x27, [sp, #264]
   12740:	bl	5620 <strcmp@plt>
   12744:	mov	w27, w0
   12748:	ldr	x0, [sp, #264]
   1274c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   12750:	add	x1, x1, #0xa68
   12754:	bl	5620 <strcmp@plt>
   12758:	ldr	w2, [sp, #104]
   1275c:	cmp	w2, #0x0
   12760:	ccmp	w28, #0x0, #0x4, ne  // ne = any
   12764:	cset	w1, ne  // ne = any
   12768:	cmp	w27, #0x0
   1276c:	ccmp	w26, #0x0, #0x4, ne  // ne = any
   12770:	csel	w1, w1, wzr, ne  // ne = any
   12774:	cmp	w0, #0x0
   12778:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   1277c:	csel	w0, w1, wzr, ne  // ne = any
   12780:	cmp	w24, #0x0
   12784:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   12788:	csel	w0, w0, wzr, ne  // ne = any
   1278c:	cmp	w22, #0x0
   12790:	ccmp	w21, #0x0, #0x4, ne  // ne = any
   12794:	csel	w0, w0, wzr, ne  // ne = any
   12798:	cmp	w20, #0x0
   1279c:	ccmp	w19, #0x0, #0x4, ne  // ne = any
   127a0:	csel	w0, w0, wzr, ne  // ne = any
   127a4:	cbnz	w0, 128b4 <gcc_cp_fe_context@@Base+0x863c>
   127a8:	mov	w19, #0xe                   	// #14
   127ac:	ldp	x27, x28, [sp, #80]
   127b0:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   127b4:	strb	wzr, [x20, w4, sxtw]
   127b8:	cmp	w0, #0x3a
   127bc:	b.eq	12654 <gcc_cp_fe_context@@Base+0x83dc>  // b.none
   127c0:	ldrb	w1, [x21, #12]
   127c4:	and	x0, x4, #0xff
   127c8:	ldrb	w4, [x21, #8]
   127cc:	mvn	x0, x0
   127d0:	add	x0, x24, x0
   127d4:	orr	w1, w1, #0x8
   127d8:	orr	w4, w4, #0x4
   127dc:	mov	w19, #0x3a                  	// #58
   127e0:	mov	w11, #0x0                   	// #0
   127e4:	strb	w4, [x21, #8]
   127e8:	strb	w1, [x21, #12]
   127ec:	str	x0, [sp, #456]
   127f0:	b	11908 <gcc_cp_fe_context@@Base+0x7690>
   127f4:	ldr	x0, [sp, #120]
   127f8:	mov	w19, #0x10                  	// #16
   127fc:	bl	5380 <free@plt>
   12800:	ldp	x27, x28, [sp, #80]
   12804:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   12808:	ldr	x0, [sp, #120]
   1280c:	bl	5380 <free@plt>
   12810:	ldp	x27, x28, [sp, #80]
   12814:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   12818:	cmp	w22, #0x1
   1281c:	mov	x0, #0xa                   	// #10
   12820:	mov	x1, #0x5                   	// #5
   12824:	csel	x0, x0, x1, gt
   12828:	b	12384 <gcc_cp_fe_context@@Base+0x810c>
   1282c:	ldr	x0, [sp, #120]
   12830:	bl	5380 <free@plt>
   12834:	ldr	x1, [sp, #104]
   12838:	ldr	x0, [sp, #456]
   1283c:	ldp	x27, x28, [sp, #80]
   12840:	cmp	x0, x1
   12844:	cset	w19, ne  // ne = any
   12848:	add	w19, w19, #0x9
   1284c:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   12850:	sub	w0, w26, w4
   12854:	mov	w1, #0x16                  	// #22
   12858:	add	w0, w0, #0x2
   1285c:	sub	w22, w22, #0x1
   12860:	strb	w1, [x21, #10]
   12864:	add	x1, x21, #0xf
   12868:	sturh	w0, [x21, #11]
   1286c:	cmp	x1, x26
   12870:	sturh	w22, [x21, #13]
   12874:	sub	x0, x1, x26
   12878:	add	x21, x21, #0x14
   1287c:	b.eq	12890 <gcc_cp_fe_context@@Base+0x8618>  // b.none
   12880:	ldrb	w2, [x1, #-1]!
   12884:	strb	w2, [x1, #5]
   12888:	cmp	x1, x26
   1288c:	b.ne	12880 <gcc_cp_fe_context@@Base+0x8608>  // b.any
   12890:	sturh	w0, [x26, #1]
   12894:	mov	w0, #0x17                  	// #23
   12898:	strb	w0, [x26]
   1289c:	mov	x27, #0x0                   	// #0
   128a0:	sturh	w22, [x26, #3]
   128a4:	ldr	x1, [sp, #456]
   128a8:	b	10070 <gcc_cp_fe_context@@Base+0x5df8>
   128ac:	mov	x0, #0xa                   	// #10
   128b0:	b	12384 <gcc_cp_fe_context@@Base+0x810c>
   128b4:	ldr	x0, [sp, #120]
   128b8:	mov	w19, #0x4                   	// #4
   128bc:	bl	5380 <free@plt>
   128c0:	ldp	x27, x28, [sp, #80]
   128c4:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   128c8:	ldr	x0, [sp, #120]
   128cc:	mov	w19, #0xa                   	// #10
   128d0:	bl	5380 <free@plt>
   128d4:	ldp	x27, x28, [sp, #80]
   128d8:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   128dc:	ldr	x0, [sp, #120]
   128e0:	mov	w19, #0x3                   	// #3
   128e4:	bl	5380 <free@plt>
   128e8:	ldp	x27, x28, [sp, #80]
   128ec:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   128f0:	ldrb	w4, [x1, #1]
   128f4:	cmp	w4, #0x5d
   128f8:	mov	x4, x24
   128fc:	b.ne	125cc <gcc_cp_fe_context@@Base+0x8354>  // b.any
   12900:	b	118cc <gcc_cp_fe_context@@Base+0x7654>
   12904:	ldr	x0, [sp, #120]
   12908:	mov	w19, #0x6                   	// #6
   1290c:	bl	5380 <free@plt>
   12910:	ldp	x27, x28, [sp, #80]
   12914:	b	ff00 <gcc_cp_fe_context@@Base+0x5c88>
   12918:	ldrb	w1, [x0, #1]
   1291c:	cmp	w1, #0x5d
   12920:	mov	x1, x24
   12924:	b.ne	12320 <gcc_cp_fe_context@@Base+0x80a8>  // b.any
   12928:	b	11c38 <gcc_cp_fe_context@@Base+0x79c0>
   1292c:	nop
   12930:	stp	x29, x30, [sp, #-96]!
   12934:	mov	x29, sp
   12938:	stp	x19, x20, [sp, #16]
   1293c:	ldr	x19, [x0]
   12940:	add	x19, x19, #0x2
   12944:	str	x19, [sp, #80]
   12948:	cmp	x19, x1
   1294c:	b.cs	129b8 <gcc_cp_fe_context@@Base+0x8740>  // b.hs, b.nlast
   12950:	mov	x20, x1
   12954:	stp	x21, x22, [sp, #32]
   12958:	mov	x21, x0
   1295c:	add	x22, sp, #0x50
   12960:	stp	x25, x26, [sp, #64]
   12964:	mov	x25, x2
   12968:	add	x26, sp, #0x58
   1296c:	ldrb	w0, [x19]
   12970:	cmp	w0, #0x7
   12974:	b.eq	129c0 <gcc_cp_fe_context@@Base+0x8748>  // b.none
   12978:	cmp	w0, #0xf
   1297c:	b.ne	129e0 <gcc_cp_fe_context@@Base+0x8768>  // b.any
   12980:	add	x0, x19, #0x1
   12984:	stp	x23, x24, [sp, #48]
   12988:	add	x19, x19, #0x3
   1298c:	str	x0, [sp, #80]
   12990:	ldursb	w23, [x19, #-1]
   12994:	ldurb	w0, [x19, #-2]
   12998:	str	x19, [sp, #80]
   1299c:	adds	w23, w0, w23, lsl #8
   129a0:	b.pl	12a00 <gcc_cp_fe_context@@Base+0x8788>  // b.nfrst
   129a4:	ldp	x23, x24, [sp, #48]
   129a8:	cmp	x20, x19
   129ac:	b.hi	1296c <gcc_cp_fe_context@@Base+0x86f4>  // b.pmore
   129b0:	ldp	x21, x22, [sp, #32]
   129b4:	ldp	x25, x26, [sp, #64]
   129b8:	mov	w0, #0x0                   	// #0
   129bc:	b	129d4 <gcc_cp_fe_context@@Base+0x875c>
   129c0:	add	x19, x19, #0x2
   129c4:	mov	w0, #0x1                   	// #1
   129c8:	ldp	x25, x26, [sp, #64]
   129cc:	str	x19, [x21]
   129d0:	ldp	x21, x22, [sp, #32]
   129d4:	ldp	x19, x20, [sp, #16]
   129d8:	ldp	x29, x30, [sp], #96
   129dc:	ret
   129e0:	mov	x2, x25
   129e4:	mov	x1, x20
   129e8:	mov	x0, x22
   129ec:	bl	12c88 <gcc_cp_fe_context@@Base+0x8a10>
   129f0:	tst	w0, #0xff
   129f4:	b.eq	129b0 <gcc_cp_fe_context@@Base+0x8738>  // b.none
   129f8:	ldr	x19, [sp, #80]
   129fc:	b	129a8 <gcc_cp_fe_context@@Base+0x8730>
   12a00:	sxtw	x23, w23
   12a04:	add	x0, x19, x23
   12a08:	sub	x24, x23, #0x3
   12a0c:	add	x24, x19, x24
   12a10:	ldurb	w0, [x0, #-3]
   12a14:	cmp	w0, #0xe
   12a18:	b.ne	12bdc <gcc_cp_fe_context@@Base+0x8964>  // b.any
   12a1c:	nop
   12a20:	cmp	x19, x24
   12a24:	b.cc	12a48 <gcc_cp_fe_context@@Base+0x87d0>  // b.lo, b.ul, b.last
   12a28:	b	12aa4 <gcc_cp_fe_context@@Base+0x882c>
   12a2c:	ldrsb	w0, [x19, #2]
   12a30:	add	x1, x19, #0x3
   12a34:	ldrb	w19, [x19, #1]
   12a38:	add	w19, w19, w0, lsl #8
   12a3c:	add	x19, x1, w19, sxtw
   12a40:	cmp	x19, x24
   12a44:	b.cs	12aa0 <gcc_cp_fe_context@@Base+0x8828>  // b.hs, b.nlast
   12a48:	ldrb	w0, [x19]
   12a4c:	cmp	w0, #0xf
   12a50:	b.eq	12a2c <gcc_cp_fe_context@@Base+0x87b4>  // b.none
   12a54:	add	x4, x19, #0x1
   12a58:	str	x4, [sp, #88]
   12a5c:	ldrb	w3, [x19]
   12a60:	cmp	w3, #0xc
   12a64:	b.hi	12b14 <gcc_cp_fe_context@@Base+0x889c>  // b.pmore
   12a68:	cmp	w3, #0x8
   12a6c:	b.hi	12a94 <gcc_cp_fe_context@@Base+0x881c>  // b.pmore
   12a70:	cmp	w3, #0x6
   12a74:	b.eq	12b94 <gcc_cp_fe_context@@Base+0x891c>  // b.none
   12a78:	cmp	w3, #0x8
   12a7c:	b.ne	12af4 <gcc_cp_fe_context@@Base+0x887c>  // b.any
   12a80:	ldrb	w0, [x19, #1]
   12a84:	lsl	x0, x0, #3
   12a88:	ldrb	w0, [x25, x0]
   12a8c:	tst	x0, #0x3
   12a90:	b.eq	12af8 <gcc_cp_fe_context@@Base+0x8880>  // b.none
   12a94:	mov	x19, x4
   12a98:	cmp	x19, x24
   12a9c:	b.cc	12a48 <gcc_cp_fe_context@@Base+0x87d0>  // b.lo, b.ul, b.last
   12aa0:	ldr	x19, [sp, #80]
   12aa4:	add	x3, x19, x23
   12aa8:	str	x3, [sp, #80]
   12aac:	ldrb	w0, [x19, x23]
   12ab0:	cmp	w0, #0xf
   12ab4:	b.ne	12be0 <gcc_cp_fe_context@@Base+0x8968>  // b.any
   12ab8:	add	x0, x3, #0x1
   12abc:	str	x0, [sp, #80]
   12ac0:	add	x19, x3, #0x3
   12ac4:	ldrb	w0, [x3, #1]
   12ac8:	ldrsb	w23, [x3, #2]
   12acc:	str	x19, [sp, #80]
   12ad0:	add	w23, w0, w23, lsl #8
   12ad4:	sxtw	x23, w23
   12ad8:	add	x0, x19, x23
   12adc:	ldurb	w0, [x0, #-3]
   12ae0:	cmp	w0, #0xe
   12ae4:	b.ne	12c70 <gcc_cp_fe_context@@Base+0x89f8>  // b.any
   12ae8:	sub	x24, x23, #0x3
   12aec:	add	x24, x19, x24
   12af0:	b	12a20 <gcc_cp_fe_context@@Base+0x87a8>
   12af4:	cbz	w3, 12a94 <gcc_cp_fe_context@@Base+0x881c>
   12af8:	mov	w0, #0x0                   	// #0
   12afc:	ldp	x19, x20, [sp, #16]
   12b00:	ldp	x21, x22, [sp, #32]
   12b04:	ldp	x23, x24, [sp, #48]
   12b08:	ldp	x25, x26, [sp, #64]
   12b0c:	ldp	x29, x30, [sp], #96
   12b10:	ret
   12b14:	cmp	w3, #0x15
   12b18:	b.eq	12b60 <gcc_cp_fe_context@@Base+0x88e8>  // b.none
   12b1c:	b.ls	12b38 <gcc_cp_fe_context@@Base+0x88c0>  // b.plast
   12b20:	sub	w3, w3, #0x1a
   12b24:	and	w3, w3, #0xff
   12b28:	cmp	w3, #0x3
   12b2c:	b.hi	12af8 <gcc_cp_fe_context@@Base+0x8880>  // b.pmore
   12b30:	mov	x19, x4
   12b34:	b	12a98 <gcc_cp_fe_context@@Base+0x8820>
   12b38:	cmp	w3, #0xd
   12b3c:	b.ne	12af8 <gcc_cp_fe_context@@Base+0x8880>  // b.any
   12b40:	ldrsb	w4, [x19, #2]
   12b44:	ldrb	w0, [x19, #1]
   12b48:	adds	w4, w0, w4, lsl #8
   12b4c:	b.mi	12af8 <gcc_cp_fe_context@@Base+0x8880>  // b.first
   12b50:	add	x19, x19, #0x3
   12b54:	add	x4, x19, w4, sxtw
   12b58:	mov	x19, x4
   12b5c:	b	12a98 <gcc_cp_fe_context@@Base+0x8820>
   12b60:	add	x1, x19, #0x3
   12b64:	str	x1, [sp, #88]
   12b68:	ldrsb	w0, [x19, #4]
   12b6c:	ldrb	w2, [x19, #3]
   12b70:	add	w0, w2, w0, lsl #8
   12b74:	cbnz	w0, 12af8 <gcc_cp_fe_context@@Base+0x8880>
   12b78:	str	x4, [sp, #88]
   12b7c:	ldrsb	w4, [x19, #2]
   12b80:	ldrb	w19, [x19, #1]
   12b84:	add	w4, w19, w4, lsl #8
   12b88:	add	x4, x1, w4, sxtw
   12b8c:	mov	x19, x4
   12b90:	b	12a98 <gcc_cp_fe_context@@Base+0x8820>
   12b94:	ldrb	w19, [x19, #1]
   12b98:	mov	x2, x25
   12b9c:	mov	x1, x24
   12ba0:	mov	x0, x26
   12ba4:	bl	12930 <gcc_cp_fe_context@@Base+0x86b8>
   12ba8:	and	w0, w0, #0xff
   12bac:	ubfiz	x1, x19, #3, #8
   12bb0:	ldrb	w2, [x25, x1]
   12bb4:	and	w3, w2, #0x3
   12bb8:	cmp	w3, #0x3
   12bbc:	b.eq	12bd0 <gcc_cp_fe_context@@Base+0x8958>  // b.none
   12bc0:	cbz	w0, 12af8 <gcc_cp_fe_context@@Base+0x8880>
   12bc4:	ldr	x4, [sp, #88]
   12bc8:	mov	x19, x4
   12bcc:	b	12a98 <gcc_cp_fe_context@@Base+0x8820>
   12bd0:	bfxil	w2, w0, #0, #2
   12bd4:	strb	w2, [x25, x1]
   12bd8:	b	12bc0 <gcc_cp_fe_context@@Base+0x8948>
   12bdc:	mov	x3, x19
   12be0:	ldursb	w23, [x3, #-1]
   12be4:	ldurb	w0, [x3, #-2]
   12be8:	str	x3, [sp, #88]
   12bec:	add	w23, w0, w23, lsl #8
   12bf0:	sxtw	x23, w23
   12bf4:	add	x19, x3, x23
   12bf8:	cmp	x19, x3
   12bfc:	b.hi	12c24 <gcc_cp_fe_context@@Base+0x89ac>  // b.pmore
   12c00:	b	12c64 <gcc_cp_fe_context@@Base+0x89ec>
   12c04:	str	x6, [sp, #88]
   12c08:	ldrsb	w0, [x3, #2]
   12c0c:	ldrb	w3, [x3, #1]
   12c10:	add	w3, w3, w0, lsl #8
   12c14:	add	x3, x5, w3, sxtw
   12c18:	str	x3, [sp, #88]
   12c1c:	cmp	x19, x3
   12c20:	b.ls	12c5c <gcc_cp_fe_context@@Base+0x89e4>  // b.plast
   12c24:	ldrb	w4, [x3]
   12c28:	add	x6, x3, #0x1
   12c2c:	add	x5, x3, #0x3
   12c30:	mov	x2, x25
   12c34:	mov	x1, x19
   12c38:	mov	x0, x26
   12c3c:	cmp	w4, #0xf
   12c40:	b.eq	12c04 <gcc_cp_fe_context@@Base+0x898c>  // b.none
   12c44:	bl	12c88 <gcc_cp_fe_context@@Base+0x8a10>
   12c48:	ands	w0, w0, #0xff
   12c4c:	b.eq	12c78 <gcc_cp_fe_context@@Base+0x8a00>  // b.none
   12c50:	ldr	x3, [sp, #88]
   12c54:	cmp	x19, x3
   12c58:	b.hi	12c24 <gcc_cp_fe_context@@Base+0x89ac>  // b.pmore
   12c5c:	ldr	x19, [sp, #80]
   12c60:	add	x19, x19, x23
   12c64:	str	x19, [sp, #80]
   12c68:	ldp	x23, x24, [sp, #48]
   12c6c:	b	129a8 <gcc_cp_fe_context@@Base+0x8730>
   12c70:	str	x3, [sp, #80]
   12c74:	b	12be0 <gcc_cp_fe_context@@Base+0x8968>
   12c78:	ldp	x21, x22, [sp, #32]
   12c7c:	ldp	x23, x24, [sp, #48]
   12c80:	ldp	x25, x26, [sp, #64]
   12c84:	b	129d4 <gcc_cp_fe_context@@Base+0x875c>
   12c88:	stp	x29, x30, [sp, #-64]!
   12c8c:	mov	x29, sp
   12c90:	ldr	x4, [x0]
   12c94:	stp	x19, x20, [sp, #16]
   12c98:	mov	x19, x0
   12c9c:	add	x5, x4, #0x1
   12ca0:	str	x5, [sp, #56]
   12ca4:	ldrb	w3, [x4]
   12ca8:	cmp	w3, #0xc
   12cac:	b.hi	12d08 <gcc_cp_fe_context@@Base+0x8a90>  // b.pmore
   12cb0:	cmp	w3, #0x8
   12cb4:	b.hi	12ce0 <gcc_cp_fe_context@@Base+0x8a68>  // b.pmore
   12cb8:	mov	x20, x2
   12cbc:	cmp	w3, #0x6
   12cc0:	b.eq	12d64 <gcc_cp_fe_context@@Base+0x8aec>  // b.none
   12cc4:	cmp	w3, #0x8
   12cc8:	b.ne	12d34 <gcc_cp_fe_context@@Base+0x8abc>  // b.any
   12ccc:	ldrb	w0, [x4, #1]
   12cd0:	lsl	x0, x0, #3
   12cd4:	ldrb	w0, [x2, x0]
   12cd8:	tst	x0, #0x3
   12cdc:	b.eq	12cf8 <gcc_cp_fe_context@@Base+0x8a80>  // b.none
   12ce0:	str	x5, [x19]
   12ce4:	mov	w0, #0x1                   	// #1
   12ce8:	ldp	x19, x20, [sp, #16]
   12cec:	ldp	x29, x30, [sp], #64
   12cf0:	ret
   12cf4:	ldr	x21, [sp, #32]
   12cf8:	mov	w0, #0x0                   	// #0
   12cfc:	ldp	x19, x20, [sp, #16]
   12d00:	ldp	x29, x30, [sp], #64
   12d04:	ret
   12d08:	cmp	w3, #0x15
   12d0c:	b.eq	12da8 <gcc_cp_fe_context@@Base+0x8b30>  // b.none
   12d10:	b.ls	12d40 <gcc_cp_fe_context@@Base+0x8ac8>  // b.plast
   12d14:	sub	w3, w3, #0x1a
   12d18:	mov	w0, #0x0                   	// #0
   12d1c:	and	w3, w3, #0xff
   12d20:	cmp	w3, #0x3
   12d24:	b.ls	12ce0 <gcc_cp_fe_context@@Base+0x8a68>  // b.plast
   12d28:	ldp	x19, x20, [sp, #16]
   12d2c:	ldp	x29, x30, [sp], #64
   12d30:	ret
   12d34:	cbz	w3, 12ce0 <gcc_cp_fe_context@@Base+0x8a68>
   12d38:	mov	w0, #0x0                   	// #0
   12d3c:	b	12cfc <gcc_cp_fe_context@@Base+0x8a84>
   12d40:	cmp	w3, #0xd
   12d44:	b.ne	12cf8 <gcc_cp_fe_context@@Base+0x8a80>  // b.any
   12d48:	ldrsb	w5, [x4, #2]
   12d4c:	ldrb	w0, [x4, #1]
   12d50:	adds	w5, w0, w5, lsl #8
   12d54:	b.mi	12cf8 <gcc_cp_fe_context@@Base+0x8a80>  // b.first
   12d58:	add	x4, x4, #0x3
   12d5c:	add	x5, x4, w5, sxtw
   12d60:	b	12ce0 <gcc_cp_fe_context@@Base+0x8a68>
   12d64:	str	x21, [sp, #32]
   12d68:	add	x0, sp, #0x38
   12d6c:	ldrb	w21, [x4, #1]
   12d70:	bl	12930 <gcc_cp_fe_context@@Base+0x86b8>
   12d74:	and	w0, w0, #0xff
   12d78:	ubfiz	x1, x21, #3, #8
   12d7c:	ldrb	w2, [x20, x1]
   12d80:	and	w3, w2, #0x3
   12d84:	cmp	w3, #0x3
   12d88:	b.eq	12d9c <gcc_cp_fe_context@@Base+0x8b24>  // b.none
   12d8c:	cbz	w0, 12cf4 <gcc_cp_fe_context@@Base+0x8a7c>
   12d90:	ldr	x21, [sp, #32]
   12d94:	ldr	x5, [sp, #56]
   12d98:	b	12ce0 <gcc_cp_fe_context@@Base+0x8a68>
   12d9c:	bfxil	w2, w0, #0, #2
   12da0:	strb	w2, [x20, x1]
   12da4:	b	12d8c <gcc_cp_fe_context@@Base+0x8b14>
   12da8:	add	x1, x4, #0x3
   12dac:	str	x1, [sp, #56]
   12db0:	ldrsb	w0, [x4, #4]
   12db4:	ldrb	w2, [x4, #3]
   12db8:	add	w0, w2, w0, lsl #8
   12dbc:	cbnz	w0, 12cf8 <gcc_cp_fe_context@@Base+0x8a80>
   12dc0:	str	x5, [sp, #56]
   12dc4:	ldrsb	w5, [x4, #2]
   12dc8:	ldrb	w4, [x4, #1]
   12dcc:	add	w4, w4, w5, lsl #8
   12dd0:	add	x5, x1, w4, sxtw
   12dd4:	b	12ce0 <gcc_cp_fe_context@@Base+0x8a68>
   12dd8:	stp	x29, x30, [sp, #-416]!
   12ddc:	mov	x29, sp
   12de0:	ldr	x8, [x0, #48]
   12de4:	stp	x19, x20, [sp, #16]
   12de8:	stp	x6, x0, [x29, #272]
   12dec:	ldr	x13, [x0]
   12df0:	stp	x21, x22, [sp, #32]
   12df4:	ldr	x11, [x0, #16]
   12df8:	stp	x23, x24, [sp, #48]
   12dfc:	mov	x23, x1
   12e00:	ldr	x0, [x0, #40]
   12e04:	add	x1, x8, #0x1
   12e08:	stp	x25, x26, [sp, #64]
   12e0c:	add	x11, x13, x11
   12e10:	stp	x27, x28, [sp, #80]
   12e14:	sub	sp, sp, #0x30
   12e18:	mov	x19, sp
   12e1c:	str	x0, [x29, #240]
   12e20:	str	x8, [x29, #256]
   12e24:	str	x1, [x29, #320]
   12e28:	str	w5, [x29, #340]
   12e2c:	str	w2, [x29, #356]
   12e30:	cbz	x8, 1301c <gcc_cp_fe_context@@Base+0x8da4>
   12e34:	lsl	x0, x1, #3
   12e38:	add	x0, x0, #0xf
   12e3c:	and	x0, x0, #0xfffffffffffffff0
   12e40:	sub	sp, sp, x0
   12e44:	mov	x25, sp
   12e48:	sub	sp, sp, x0
   12e4c:	mov	x27, sp
   12e50:	sub	sp, sp, x0
   12e54:	mov	x1, sp
   12e58:	sub	sp, sp, x0
   12e5c:	str	x1, [x29, #288]
   12e60:	mov	x1, sp
   12e64:	sub	sp, sp, x0
   12e68:	str	x1, [x29, #264]
   12e6c:	mov	x1, sp
   12e70:	sub	sp, sp, x0
   12e74:	str	x1, [x29, #224]
   12e78:	mov	x1, sp
   12e7c:	sub	sp, sp, x0
   12e80:	str	x1, [x29, #216]
   12e84:	mov	x5, sp
   12e88:	sub	sp, sp, x0
   12e8c:	mov	x1, sp
   12e90:	sub	sp, sp, x0
   12e94:	mov	x0, sp
   12e98:	stp	x0, x1, [x29, #184]
   12e9c:	ldr	w1, [x29, #340]
   12ea0:	tbnz	w1, #31, 14968 <gcc_cp_fe_context@@Base+0xa6f0>
   12ea4:	ldr	w0, [x29, #356]
   12ea8:	add	w0, w0, w4
   12eac:	cmp	w0, w1
   12eb0:	b.lt	14968 <gcc_cp_fe_context@@Base+0xa6f0>  // b.tstop
   12eb4:	ldr	x1, [x29, #320]
   12eb8:	adrp	x0, 2d000 <xexit@@Base+0x161a0>
   12ebc:	add	x0, x0, #0x600
   12ec0:	add	x2, x0, #0x104
   12ec4:	cmp	x1, #0x1
   12ec8:	lsl	x9, x1, #3
   12ecc:	mov	x0, #0x8                   	// #8
   12ed0:	b.ls	12f0c <gcc_cp_fe_context@@Base+0x8c94>  // b.plast
   12ed4:	ldr	x8, [x29, #264]
   12ed8:	ldr	x6, [x29, #288]
   12edc:	nop
   12ee0:	str	x2, [x8, x0]
   12ee4:	ldrb	w1, [x5, x0]
   12ee8:	str	x2, [x6, x0]
   12eec:	and	w1, w1, #0xffffffe0
   12ef0:	str	x2, [x27, x0]
   12ef4:	orr	w1, w1, #0x3
   12ef8:	str	x2, [x25, x0]
   12efc:	strb	w1, [x5, x0]
   12f00:	add	x0, x0, #0x8
   12f04:	cmp	x9, x0
   12f08:	b.ne	12ee0 <gcc_cp_fe_context@@Base+0x8c68>  // b.any
   12f0c:	ldrsw	x0, [x29, #356]
   12f10:	cmp	w4, #0x0
   12f14:	str	x0, [x29, #312]
   12f18:	ccmp	x23, #0x0, #0x4, eq  // eq = none
   12f1c:	add	x0, x23, x0
   12f20:	str	x0, [x29, #328]
   12f24:	b.ne	1303c <gcc_cp_fe_context@@Base+0x8dc4>  // b.any
   12f28:	ldr	w2, [x29, #356]
   12f2c:	ldr	w1, [x29, #340]
   12f30:	cmp	w2, #0x0
   12f34:	stp	x23, x0, [x29, #384]
   12f38:	cset	w0, gt
   12f3c:	cmp	w1, w2
   12f40:	str	w2, [x29, #352]
   12f44:	cset	w1, le
   12f48:	str	w4, [x29, #356]
   12f4c:	and	w0, w0, w1
   12f50:	add	x1, x3, w4, sxtw
   12f54:	str	x1, [x29, #328]
   12f58:	mov	x23, x3
   12f5c:	ldr	w1, [x29, #352]
   12f60:	cmp	w1, w7
   12f64:	sxtw	x7, w7
   12f68:	b.lt	1305c <gcc_cp_fe_context@@Base+0x8de4>  // b.tstop
   12f6c:	ldr	x1, [x29, #384]
   12f70:	mov	x22, x23
   12f74:	add	x1, x1, x7
   12f78:	str	x1, [x29, #376]
   12f7c:	ldrsw	x1, [x29, #340]
   12f80:	str	x1, [x29, #248]
   12f84:	cbz	w0, 1307c <gcc_cp_fe_context@@Base+0x8e04>
   12f88:	ldp	x26, x0, [x29, #376]
   12f8c:	add	x24, x0, x1
   12f90:	ldr	w0, [x29, #352]
   12f94:	mov	x4, #0x100                 	// #256
   12f98:	ldr	x1, [x29, #384]
   12f9c:	cmp	w0, #0x0
   12fa0:	adrp	x0, 2d000 <xexit@@Base+0x161a0>
   12fa4:	add	x0, x0, #0x600
   12fa8:	csel	x1, x1, x23, ne  // ne = any
   12fac:	stp	x0, x1, [x29, #296]
   12fb0:	mov	x3, x22
   12fb4:	ldr	x1, [x29, #256]
   12fb8:	add	x0, x0, #0x104
   12fbc:	mov	x22, x4
   12fc0:	mov	x28, x5
   12fc4:	mov	x4, x23
   12fc8:	mov	x23, x11
   12fcc:	lsl	x1, x1, #3
   12fd0:	mov	w20, #0x0                   	// #0
   12fd4:	mov	w10, #0x5                   	// #5
   12fd8:	mov	x21, #0x101                 	// #257
   12fdc:	stp	x0, x1, [x29, #200]
   12fe0:	adrp	x0, 17000 <xexit@@Base+0x1a0>
   12fe4:	add	x0, x0, #0x9d0
   12fe8:	str	xzr, [x29, #232]
   12fec:	str	wzr, [x29, #336]
   12ff0:	str	xzr, [x29, #344]
   12ff4:	str	x0, [x29, #360]
   12ff8:	str	wzr, [x29, #368]
   12ffc:	nop
   13000:	cmp	x13, x23
   13004:	b.eq	13200 <gcc_cp_fe_context@@Base+0x8f88>  // b.none
   13008:	mov	x5, x13
   1300c:	ldrb	w0, [x5], #1
   13010:	cmp	w0, #0x1d
   13014:	b.ls	13094 <gcc_cp_fe_context@@Base+0x8e1c>  // b.plast
   13018:	bl	56a0 <abort@plt>
   1301c:	mov	x5, #0x0                   	// #0
   13020:	mov	x27, #0x0                   	// #0
   13024:	mov	x25, #0x0                   	// #0
   13028:	stp	xzr, xzr, [x29, #184]
   1302c:	stp	xzr, xzr, [x29, #216]
   13030:	str	xzr, [x29, #264]
   13034:	str	xzr, [x29, #288]
   13038:	b	12e9c <gcc_cp_fe_context@@Base+0x8c24>
   1303c:	str	wzr, [x29, #352]
   13040:	mov	w0, #0x0                   	// #0
   13044:	str	xzr, [x29, #312]
   13048:	ldr	w1, [x29, #352]
   1304c:	stp	xzr, xzr, [x29, #384]
   13050:	cmp	w1, w7
   13054:	sxtw	x7, w7
   13058:	b.ge	12f6c <gcc_cp_fe_context@@Base+0x8cf4>  // b.tcont
   1305c:	ldr	x1, [x29, #312]
   13060:	sub	x7, x7, x1
   13064:	ldr	x1, [x29, #392]
   13068:	str	x1, [x29, #376]
   1306c:	ldrsw	x1, [x29, #340]
   13070:	add	x22, x23, x7
   13074:	str	x1, [x29, #248]
   13078:	cbnz	w0, 12f88 <gcc_cp_fe_context@@Base+0x8d10>
   1307c:	mov	x0, x1
   13080:	mov	x26, x22
   13084:	ldr	x1, [x29, #312]
   13088:	sub	x3, x0, x1
   1308c:	add	x24, x23, x3
   13090:	b	12f90 <gcc_cp_fe_context@@Base+0x8d18>
   13094:	ldr	x1, [x29, #360]
   13098:	ldrh	w1, [x1, w0, uxtw #1]
   1309c:	adr	x2, 130a8 <gcc_cp_fe_context@@Base+0x8e30>
   130a0:	add	x1, x2, w1, sxth #2
   130a4:	br	x1
   130a8:	cmp	x3, x24
   130ac:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   130b0:	mov	x26, x3
   130b4:	mov	x24, x4
   130b8:	cmp	x24, x26
   130bc:	b.eq	130a8 <gcc_cp_fe_context@@Base+0x8e30>  // b.none
   130c0:	ldr	x0, [x29, #280]
   130c4:	ldr	x1, [x0, #24]
   130c8:	tbnz	w1, #6, 1471c <gcc_cp_fe_context@@Base+0xa4a4>
   130cc:	ldr	x2, [x29, #240]
   130d0:	ldrb	w0, [x24]
   130d4:	cbz	x2, 14978 <gcc_cp_fe_context@@Base+0xa700>
   130d8:	and	x0, x0, #0xff
   130dc:	ldrb	w0, [x2, x0]
   130e0:	cmp	w0, #0xa
   130e4:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   130e8:	tbz	w1, #7, 130f0 <gcc_cp_fe_context@@Base+0x8e78>
   130ec:	cbz	w0, 13bc8 <gcc_cp_fe_context@@Base+0x9950>
   130f0:	ldr	w0, [x29, #368]
   130f4:	cbnz	w0, 131e8 <gcc_cp_fe_context@@Base+0x8f70>
   130f8:	cmp	x21, x22
   130fc:	b.hi	131e8 <gcc_cp_fe_context@@Base+0x8f70>  // b.pmore
   13100:	add	x2, x28, x21, lsl #3
   13104:	mov	x1, x21
   13108:	ldrb	w0, [x2]
   1310c:	add	x1, x1, #0x1
   13110:	cmp	x22, x1
   13114:	orr	w0, w0, #0x18
   13118:	strb	w0, [x2], #8
   1311c:	b.cs	13108 <gcc_cp_fe_context@@Base+0x8e90>  // b.hs, b.nlast
   13120:	b	131e8 <gcc_cp_fe_context@@Base+0x8f70>
   13124:	cmp	x3, x24
   13128:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   1312c:	mov	x26, x3
   13130:	mov	x24, x4
   13134:	cmp	x24, x26
   13138:	b.eq	13124 <gcc_cp_fe_context@@Base+0x8eac>  // b.none
   1313c:	ldr	x0, [x29, #392]
   13140:	cmp	x24, x0
   13144:	b.eq	147dc <gcc_cp_fe_context@@Base+0xa564>  // b.none
   13148:	sub	x0, x4, #0x1
   1314c:	cmp	x24, x0
   13150:	b.eq	14838 <gcc_cp_fe_context@@Base+0xa5c0>  // b.none
   13154:	ldrb	w0, [x24]
   13158:	ldr	x1, [x29, #296]
   1315c:	ldrb	w0, [x1, w0, sxtw]
   13160:	cmp	w0, #0x1
   13164:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   13168:	ldr	w0, [x29, #368]
   1316c:	cbnz	w0, 131e8 <gcc_cp_fe_context@@Base+0x8f70>
   13170:	cmp	x21, x22
   13174:	b.hi	131e8 <gcc_cp_fe_context@@Base+0x8f70>  // b.pmore
   13178:	add	x2, x28, x21, lsl #3
   1317c:	mov	x1, x21
   13180:	ldrb	w0, [x2]
   13184:	add	x1, x1, #0x1
   13188:	cmp	x22, x1
   1318c:	orr	w0, w0, #0x18
   13190:	strb	w0, [x2], #8
   13194:	b.cs	13180 <gcc_cp_fe_context@@Base+0x8f08>  // b.hs, b.nlast
   13198:	b	131e8 <gcc_cp_fe_context@@Base+0x8f70>
   1319c:	cmp	x3, x24
   131a0:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   131a4:	mov	x26, x3
   131a8:	mov	x24, x4
   131ac:	cmp	x24, x26
   131b0:	b.eq	1319c <gcc_cp_fe_context@@Base+0x8f24>  // b.none
   131b4:	ldr	x0, [x29, #392]
   131b8:	cmp	x24, x0
   131bc:	b.eq	147c0 <gcc_cp_fe_context@@Base+0xa548>  // b.none
   131c0:	sub	x0, x4, #0x1
   131c4:	cmp	x24, x0
   131c8:	b.eq	14844 <gcc_cp_fe_context@@Base+0xa5cc>  // b.none
   131cc:	ldrb	w0, [x24]
   131d0:	ldr	x1, [x29, #296]
   131d4:	ldrb	w0, [x1, w0, sxtw]
   131d8:	cmp	w0, #0x1
   131dc:	b.ne	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.any
   131e0:	ldr	w0, [x29, #368]
   131e4:	cbz	w0, 148cc <gcc_cp_fe_context@@Base+0xa654>
   131e8:	add	x24, x24, #0x1
   131ec:	mov	x13, x5
   131f0:	mov	w0, #0x1                   	// #1
   131f4:	str	w0, [x29, #368]
   131f8:	cmp	x13, x23
   131fc:	b.ne	13008 <gcc_cp_fe_context@@Base+0x8d90>  // b.any
   13200:	cmp	x3, x24
   13204:	b.eq	143f4 <gcc_cp_fe_context@@Base+0xa17c>  // b.none
   13208:	ldp	x6, x0, [x29, #376]
   1320c:	ldr	x1, [x29, #344]
   13210:	ldr	x2, [x29, #392]
   13214:	cmp	x0, x1
   13218:	cset	w0, ls  // ls = plast
   1321c:	cmp	x1, x2
   13220:	cset	w1, ls  // ls = plast
   13224:	cmp	x6, x26
   13228:	and	w0, w0, w1
   1322c:	ldr	w1, [x29, #352]
   13230:	cset	w5, eq  // eq = none
   13234:	cmp	w1, #0x0
   13238:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1323c:	cset	w2, ne  // ne = any
   13240:	cmp	x6, x26
   13244:	cset	w1, ne  // ne = any
   13248:	cmp	w5, w2
   1324c:	b.eq	14254 <gcc_cp_fe_context@@Base+0x9fdc>  // b.none
   13250:	cbz	w20, 14900 <gcc_cp_fe_context@@Base+0xa688>
   13254:	ldr	w0, [x29, #336]
   13258:	cmp	w0, #0x0
   1325c:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   13260:	b.eq	13bcc <gcc_cp_fe_context@@Base+0x9954>  // b.none
   13264:	ldr	x0, [x29, #320]
   13268:	cmp	x0, #0x1
   1326c:	b.ls	1480c <gcc_cp_fe_context@@Base+0xa594>  // b.plast
   13270:	ldr	x21, [x29, #208]
   13274:	add	x1, x25, #0x8
   13278:	ldr	x0, [x29, #224]
   1327c:	mov	x2, x21
   13280:	stp	x4, x3, [x29, #168]
   13284:	add	x0, x0, #0x8
   13288:	str	w10, [x29, #368]
   1328c:	bl	5210 <memcpy@plt>
   13290:	ldr	x0, [x29, #216]
   13294:	mov	x2, x21
   13298:	add	x1, x27, #0x8
   1329c:	add	x0, x0, #0x8
   132a0:	bl	5210 <memcpy@plt>
   132a4:	mov	w0, #0x1                   	// #1
   132a8:	ldr	w10, [x29, #368]
   132ac:	str	w0, [x29, #336]
   132b0:	str	x24, [x29, #344]
   132b4:	ldp	x4, x3, [x29, #168]
   132b8:	b	13bcc <gcc_cp_fe_context@@Base+0x9954>
   132bc:	add	x6, x13, #0x3
   132c0:	ldrsb	w0, [x13, #2]
   132c4:	ldrb	w13, [x13, #1]
   132c8:	add	w13, w13, w0, lsl #8
   132cc:	add	x13, x6, w13, sxtw
   132d0:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   132d4:	cmp	w0, #0x5
   132d8:	cset	w2, eq  // eq = none
   132dc:	b	132f0 <gcc_cp_fe_context@@Base+0x9078>
   132e0:	cmp	x3, x24
   132e4:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   132e8:	mov	x26, x3
   132ec:	mov	x24, x4
   132f0:	cmp	x24, x26
   132f4:	b.eq	132e0 <gcc_cp_fe_context@@Base+0x9068>  // b.none
   132f8:	ldr	x6, [x29, #240]
   132fc:	ldrb	w1, [x24]
   13300:	cbz	x6, 1330c <gcc_cp_fe_context@@Base+0x9094>
   13304:	and	x1, x1, #0xff
   13308:	ldrb	w1, [x6, x1]
   1330c:	ldrb	w6, [x13, #1]
   13310:	cmp	w1, w6, lsl #3
   13314:	b.cs	13330 <gcc_cp_fe_context@@Base+0x90b8>  // b.hs, b.nlast
   13318:	lsr	w7, w1, #3
   1331c:	and	w1, w1, #0x7
   13320:	add	w7, w7, #0x1
   13324:	ldrb	w7, [x5, w7, sxtw]
   13328:	asr	w1, w7, w1
   1332c:	tbnz	w1, #0, 147e4 <gcc_cp_fe_context@@Base+0xa56c>
   13330:	cbz	w2, 13bc8 <gcc_cp_fe_context@@Base+0x9950>
   13334:	ldr	w0, [x29, #368]
   13338:	cbz	w0, 1492c <gcc_cp_fe_context@@Base+0xa6b4>
   1333c:	add	w6, w6, #0x1
   13340:	mov	w0, #0x1                   	// #1
   13344:	add	x24, x24, #0x1
   13348:	str	w0, [x29, #368]
   1334c:	add	x13, x5, w6, sxtw
   13350:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   13354:	ldr	x0, [x29, #304]
   13358:	cmp	x24, x0
   1335c:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   13360:	ldr	w0, [x29, #356]
   13364:	cmp	w0, #0x0
   13368:	ldr	x0, [x29, #328]
   1336c:	ccmp	x24, x0, #0x4, ne  // ne = any
   13370:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   13374:	ldr	x1, [x29, #392]
   13378:	sub	x0, x24, #0x1
   1337c:	cmp	x1, x0
   13380:	b.eq	14460 <gcc_cp_fe_context@@Base+0xa1e8>  // b.none
   13384:	cmp	x4, x24
   13388:	b.eq	147b8 <gcc_cp_fe_context@@Base+0xa540>  // b.none
   1338c:	ldurb	w0, [x24, #-1]
   13390:	ldr	x1, [x29, #296]
   13394:	ldrb	w0, [x1, w0, sxtw]
   13398:	cmp	w0, #0x1
   1339c:	ldr	x0, [x29, #392]
   133a0:	cset	w1, eq  // eq = none
   133a4:	cmp	x24, x0
   133a8:	b.eq	14738 <gcc_cp_fe_context@@Base+0xa4c0>  // b.none
   133ac:	sub	x0, x4, #0x1
   133b0:	cmp	x24, x0
   133b4:	b.eq	147c8 <gcc_cp_fe_context@@Base+0xa550>  // b.none
   133b8:	ldrb	w0, [x24]
   133bc:	ldr	x2, [x29, #296]
   133c0:	ldrb	w0, [x2, w0, sxtw]
   133c4:	cmp	w0, #0x1
   133c8:	cset	w0, eq  // eq = none
   133cc:	cmp	w0, w1
   133d0:	b.ne	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.any
   133d4:	mov	x13, x5
   133d8:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   133dc:	ldrsb	w0, [x13, #4]
   133e0:	ldrb	w1, [x13, #3]
   133e4:	add	w0, w1, w0, lsl #8
   133e8:	cmp	w0, #0x0
   133ec:	b.gt	14428 <gcc_cp_fe_context@@Base+0xa1b0>
   133f0:	b.ne	133d4 <gcc_cp_fe_context@@Base+0x915c>  // b.any
   133f4:	sturh	wzr, [x13, #3]
   133f8:	ldrsb	w2, [x13, #2]
   133fc:	add	x13, x13, #0x3
   13400:	ldurb	w1, [x13, #-2]
   13404:	cmp	x23, x13
   13408:	str	x13, [x29, #408]
   1340c:	mov	x0, x13
   13410:	add	w1, w1, w2, lsl #8
   13414:	str	w1, [x29, #176]
   13418:	b.hi	13430 <gcc_cp_fe_context@@Base+0x91b8>  // b.pmore
   1341c:	b	13464 <gcc_cp_fe_context@@Base+0x91ec>
   13420:	add	x0, x0, #0x1
   13424:	str	x0, [x29, #408]
   13428:	cmp	x0, x23
   1342c:	b.eq	13464 <gcc_cp_fe_context@@Base+0x91ec>  // b.none
   13430:	ldrb	w1, [x0]
   13434:	cbz	w1, 13420 <gcc_cp_fe_context@@Base+0x91a8>
   13438:	cmp	x23, x0
   1343c:	b.ls	13464 <gcc_cp_fe_context@@Base+0x91ec>  // b.plast
   13440:	cmp	w1, #0x6
   13444:	b.ne	13464 <gcc_cp_fe_context@@Base+0x91ec>  // b.any
   13448:	ldrb	w1, [x0, #1]
   1344c:	cmp	x21, #0x101
   13450:	ldrb	w22, [x0, #2]
   13454:	and	x0, x1, #0xff
   13458:	add	w22, w22, w1
   1345c:	csel	x21, x0, x21, eq  // eq = none
   13460:	sxtw	x22, w22
   13464:	add	x0, x22, #0x1
   13468:	sub	w1, w10, w20
   1346c:	sub	x0, x0, x21
   13470:	add	x0, x0, x0, lsl #1
   13474:	add	x2, x0, #0x4
   13478:	mov	x5, x2
   1347c:	cmp	x1, x2
   13480:	b.cs	147a0 <gcc_cp_fe_context@@Base+0xa528>  // b.hs, b.nlast
   13484:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
   13488:	mov	w1, #0x13                  	// #19
   1348c:	stp	x4, x22, [x29, #136]
   13490:	mov	w2, w10
   13494:	ldr	x0, [x0, #3952]
   13498:	stp	x21, x13, [x29, #152]
   1349c:	str	x3, [x29, #168]
   134a0:	ldr	w0, [x0]
   134a4:	mul	w0, w0, w1
   134a8:	mov	x1, x19
   134ac:	mov	x19, x5
   134b0:	mov	w21, w0
   134b4:	cmp	w2, w21
   134b8:	b.hi	134f0 <gcc_cp_fe_context@@Base+0x9278>  // b.pmore
   134bc:	ubfiz	x0, x2, #4, #31
   134c0:	lsl	w22, w2, #1
   134c4:	sub	sp, sp, x0
   134c8:	ubfiz	x2, x2, #3, #32
   134cc:	mov	x0, sp
   134d0:	bl	5210 <memcpy@plt>
   134d4:	sub	w2, w22, w20
   134d8:	mov	x1, x0
   134dc:	cmp	x2, x19
   134e0:	b.cs	14314 <gcc_cp_fe_context@@Base+0xa09c>  // b.hs, b.nlast
   134e4:	mov	w2, w22
   134e8:	cmp	w2, w21
   134ec:	b.ls	134bc <gcc_cp_fe_context@@Base+0x9244>  // b.plast
   134f0:	mov	w0, #0xfffffffe            	// #-2
   134f4:	mov	sp, x29
   134f8:	ldp	x19, x20, [sp, #16]
   134fc:	ldp	x21, x22, [sp, #32]
   13500:	ldp	x23, x24, [sp, #48]
   13504:	ldp	x25, x26, [sp, #64]
   13508:	ldp	x27, x28, [sp, #80]
   1350c:	ldp	x29, x30, [sp], #416
   13510:	ret
   13514:	str	x5, [x29, #408]
   13518:	ldrb	w0, [x13, #1]
   1351c:	lsl	x0, x0, #3
   13520:	add	x2, x28, x0
   13524:	ldrb	w1, [x28, x0]
   13528:	and	w1, w1, #0x3
   1352c:	cmp	w1, #0x3
   13530:	b.eq	1474c <gcc_cp_fe_context@@Base+0xa4d4>  // b.none
   13534:	add	x6, x25, x0
   13538:	ldr	x5, [x25, x0]
   1353c:	cbz	w1, 1354c <gcc_cp_fe_context@@Base+0x92d4>
   13540:	ldr	x1, [x29, #200]
   13544:	cmp	x5, x1
   13548:	csel	x5, x5, x24, ne  // ne = any
   1354c:	ldr	x7, [x29, #288]
   13550:	cmp	x21, #0x101
   13554:	ldrb	w1, [x2]
   13558:	add	x13, x13, #0x3
   1355c:	str	x24, [x6]
   13560:	str	x5, [x7, x0]
   13564:	orr	w0, w1, #0x4
   13568:	strb	w0, [x2]
   1356c:	str	wzr, [x29, #368]
   13570:	ldurb	w0, [x13, #-2]
   13574:	lsl	x0, x0, #3
   13578:	ldrb	w1, [x28, x0]
   1357c:	and	w1, w1, #0xfffffff7
   13580:	strb	w1, [x28, x0]
   13584:	ldurb	w22, [x13, #-2]
   13588:	str	x13, [x29, #232]
   1358c:	csel	x21, x21, x22, ne  // ne = any
   13590:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   13594:	ldrb	w0, [x13, #1]
   13598:	add	x2, x13, #0x3
   1359c:	ldrsb	w1, [x13, #2]
   135a0:	add	x13, x13, #0x5
   135a4:	add	w1, w0, w1, lsl #8
   135a8:	add	x0, x2, w1, sxtw
   135ac:	str	x0, [x29, #408]
   135b0:	ldursb	w0, [x13, #-1]
   135b4:	ldurb	w5, [x13, #-2]
   135b8:	add	w0, w5, w0, lsl #8
   135bc:	strb	w0, [x2, w1, sxtw]
   135c0:	ldr	x1, [x29, #408]
   135c4:	asr	w0, w0, #8
   135c8:	strb	w0, [x1, #1]
   135cc:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   135d0:	ldrsb	w0, [x13, #4]
   135d4:	ldrb	w1, [x13, #3]
   135d8:	adds	w0, w1, w0, lsl #8
   135dc:	b.ne	146f0 <gcc_cp_fe_context@@Base+0xa478>  // b.any
   135e0:	add	x13, x13, #0x5
   135e4:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   135e8:	ldr	x2, [x29, #240]
   135ec:	add	x1, x13, #0x2
   135f0:	ldrb	w0, [x13, #1]
   135f4:	mov	x13, x1
   135f8:	cbz	x2, 13668 <gcc_cp_fe_context@@Base+0x93f0>
   135fc:	mov	x5, x2
   13600:	cmp	x24, x26
   13604:	b.eq	14278 <gcc_cp_fe_context@@Base+0xa000>  // b.none
   13608:	ldrb	w2, [x24], #1
   1360c:	ldrb	w1, [x13], #1
   13610:	ldrb	w2, [x5, x2]
   13614:	cmp	w2, w1
   13618:	b.ne	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.any
   1361c:	subs	w0, w0, #0x1
   13620:	b.ne	13600 <gcc_cp_fe_context@@Base+0x9388>  // b.any
   13624:	ldr	w0, [x29, #368]
   13628:	cbnz	w0, 13000 <gcc_cp_fe_context@@Base+0x8d88>
   1362c:	cmp	x21, x22
   13630:	b.hi	131f0 <gcc_cp_fe_context@@Base+0x8f78>  // b.pmore
   13634:	add	x2, x28, x21, lsl #3
   13638:	mov	x1, x21
   1363c:	ldrb	w0, [x2]
   13640:	add	x1, x1, #0x1
   13644:	cmp	x22, x1
   13648:	orr	w0, w0, #0x18
   1364c:	strb	w0, [x2], #8
   13650:	b.cs	1363c <gcc_cp_fe_context@@Base+0x93c4>  // b.hs, b.nlast
   13654:	b	131f0 <gcc_cp_fe_context@@Base+0x8f78>
   13658:	cmp	x3, x26
   1365c:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   13660:	mov	x26, x3
   13664:	mov	x24, x4
   13668:	cmp	x24, x26
   1366c:	b.eq	13658 <gcc_cp_fe_context@@Base+0x93e0>  // b.none
   13670:	ldrb	w2, [x24], #1
   13674:	ldrb	w1, [x13], #1
   13678:	cmp	w2, w1
   1367c:	b.ne	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.any
   13680:	subs	w0, w0, #0x1
   13684:	b.ne	13668 <gcc_cp_fe_context@@Base+0x93f0>  // b.any
   13688:	b	13624 <gcc_cp_fe_context@@Base+0x93ac>
   1368c:	ldrb	w0, [x13, #1]
   13690:	ldr	x2, [x29, #200]
   13694:	ldr	x1, [x25, x0, lsl #3]
   13698:	cmp	x1, x2
   1369c:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   136a0:	ldr	x5, [x27, x0, lsl #3]
   136a4:	cmp	x5, x2
   136a8:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   136ac:	ldr	x0, [x29, #392]
   136b0:	cmp	x1, x0
   136b4:	ldr	x0, [x29, #384]
   136b8:	ccmp	x1, x0, #0x0, ls  // ls = plast
   136bc:	ldr	w0, [x29, #352]
   136c0:	ccmp	w0, #0x0, #0x4, cs  // cs = hs, nlast
   136c4:	b.ne	14970 <gcc_cp_fe_context@@Base+0xa6f8>  // b.any
   136c8:	mov	x6, x5
   136cc:	cbnz	w0, 14438 <gcc_cp_fe_context@@Base+0xa1c0>
   136d0:	mov	x9, x23
   136d4:	mov	x23, x19
   136d8:	mov	x19, x22
   136dc:	add	x7, x28, x21, lsl #3
   136e0:	ldr	x22, [x29, #240]
   136e4:	mov	x8, x28
   136e8:	mov	x28, x27
   136ec:	mov	x27, x25
   136f0:	mov	w25, w20
   136f4:	mov	x20, x21
   136f8:	cmp	x1, x6
   136fc:	b.ne	13714 <gcc_cp_fe_context@@Base+0x949c>  // b.any
   13700:	b	14598 <gcc_cp_fe_context@@Base+0xa320>
   13704:	cmp	x3, x24
   13708:	b.eq	143d8 <gcc_cp_fe_context@@Base+0xa160>  // b.none
   1370c:	mov	x26, x3
   13710:	mov	x24, x4
   13714:	cmp	x24, x26
   13718:	b.eq	13704 <gcc_cp_fe_context@@Base+0x948c>  // b.none
   1371c:	sub	x2, x26, x24
   13720:	sub	x21, x6, x1
   13724:	cmp	x21, w2, sxtw
   13728:	csel	w2, w2, w21, ge  // ge = tcont
   1372c:	cbnz	x22, 143a0 <gcc_cp_fe_context@@Base+0xa128>
   13730:	sxtw	x21, w2
   13734:	mov	x0, x24
   13738:	mov	x2, x21
   1373c:	stp	x4, x7, [x29, #104]
   13740:	stp	x9, x8, [x29, #120]
   13744:	stp	x6, x13, [x29, #136]
   13748:	stp	x3, x5, [x29, #152]
   1374c:	str	w10, [x29, #168]
   13750:	str	x1, [x29, #176]
   13754:	bl	5350 <memcmp@plt>
   13758:	ldr	w10, [x29, #168]
   1375c:	ldp	x4, x7, [x29, #104]
   13760:	ldp	x9, x8, [x29, #120]
   13764:	ldp	x6, x13, [x29, #136]
   13768:	ldp	x3, x5, [x29, #152]
   1376c:	ldr	x1, [x29, #176]
   13770:	cbnz	w0, 143d8 <gcc_cp_fe_context@@Base+0xa160>
   13774:	ldr	w0, [x29, #368]
   13778:	add	x24, x24, x21
   1377c:	add	x1, x1, x21
   13780:	cbnz	w0, 136f8 <gcc_cp_fe_context@@Base+0x9480>
   13784:	cmp	x20, x19
   13788:	b.hi	137ac <gcc_cp_fe_context@@Base+0x9534>  // b.pmore
   1378c:	mov	x11, x7
   13790:	mov	x2, x20
   13794:	ldrb	w0, [x11]
   13798:	add	x2, x2, #0x1
   1379c:	cmp	x19, x2
   137a0:	orr	w0, w0, #0x18
   137a4:	strb	w0, [x11], #8
   137a8:	b.cs	13794 <gcc_cp_fe_context@@Base+0x951c>  // b.hs, b.nlast
   137ac:	mov	w0, #0x1                   	// #1
   137b0:	str	w0, [x29, #368]
   137b4:	b	136f8 <gcc_cp_fe_context@@Base+0x9480>
   137b8:	ldrb	w1, [x13, #1]
   137bc:	lsl	x0, x1, #3
   137c0:	add	x2, x28, x0
   137c4:	add	x6, x27, x0
   137c8:	ldr	x5, [x27, x1, lsl #3]
   137cc:	ldrb	w0, [x28, x0]
   137d0:	tst	x0, #0x3
   137d4:	b.eq	137e4 <gcc_cp_fe_context@@Base+0x956c>  // b.none
   137d8:	ldr	x0, [x29, #200]
   137dc:	cmp	x5, x0
   137e0:	csel	x5, x5, x24, ne  // ne = any
   137e4:	ldr	x7, [x29, #264]
   137e8:	str	x24, [x6]
   137ec:	ldrb	w0, [x2]
   137f0:	cmp	x21, x22
   137f4:	and	w0, w0, #0xfffffffb
   137f8:	str	x5, [x7, x1, lsl #3]
   137fc:	strb	w0, [x2]
   13800:	ldrb	w2, [x13, #1]
   13804:	b.ne	143fc <gcc_cp_fe_context@@Base+0xa184>  // b.any
   13808:	mov	x22, #0x100                 	// #256
   1380c:	mov	x21, #0x101                 	// #257
   13810:	ubfiz	x2, x2, #3, #8
   13814:	add	x1, x13, #0x3
   13818:	ldrb	w0, [x28, x2]
   1381c:	tst	x0, #0x8
   13820:	ldr	x0, [x29, #232]
   13824:	ccmp	x13, x0, #0x4, ne  // ne = any
   13828:	b.ne	141e0 <gcc_cp_fe_context@@Base+0x9f68>  // b.any
   1382c:	cmp	x23, x1
   13830:	b.ls	141e0 <gcc_cp_fe_context@@Base+0x9f68>  // b.plast
   13834:	add	x0, x13, #0x4
   13838:	str	x0, [x29, #408]
   1383c:	ldrb	w0, [x13, #3]
   13840:	cmp	w0, #0x13
   13844:	b.hi	1457c <gcc_cp_fe_context@@Base+0xa304>  // b.pmore
   13848:	cmp	w0, #0x10
   1384c:	b.hi	13858 <gcc_cp_fe_context@@Base+0x95e0>  // b.pmore
   13850:	cmp	w0, #0xd
   13854:	b.ne	141e0 <gcc_cp_fe_context@@Base+0x9f68>  // b.any
   13858:	ldrsb	w0, [x13, #5]
   1385c:	add	x2, x13, #0x6
   13860:	ldrb	w5, [x13, #4]
   13864:	add	w0, w5, w0, lsl #8
   13868:	add	x6, x2, w0, sxtw
   1386c:	str	x6, [x29, #408]
   13870:	tbz	w0, #31, 141e0 <gcc_cp_fe_context@@Base+0x9f68>
   13874:	ldrb	w0, [x2, w0, sxtw]
   13878:	cmp	w0, #0xf
   1387c:	b.ne	141e0 <gcc_cp_fe_context@@Base+0x9f68>  // b.any
   13880:	ldrb	w0, [x6, #3]
   13884:	cmp	w0, #0x6
   13888:	b.ne	141e0 <gcc_cp_fe_context@@Base+0x9f68>  // b.any
   1388c:	ldrb	w2, [x13, #1]
   13890:	ldrb	w0, [x6, #4]
   13894:	cmp	w0, w2
   13898:	b.ne	141e0 <gcc_cp_fe_context@@Base+0x9f68>  // b.any
   1389c:	ubfiz	x0, x0, #3, #8
   138a0:	ldrb	w1, [x28, x0]
   138a4:	tbnz	w1, #4, 14afc <gcc_cp_fe_context@@Base+0xa884>
   138a8:	add	x1, x22, #0x1
   138ac:	add	x0, x6, #0x1
   138b0:	sub	x1, x1, x21
   138b4:	str	x0, [x29, #408]
   138b8:	add	x7, x6, #0x3
   138bc:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
   138c0:	ldrb	w8, [x6, #1]
   138c4:	add	x1, x1, x1, lsl #1
   138c8:	ldrb	w6, [x6, #2]
   138cc:	add	x5, x1, #0x4
   138d0:	str	x7, [x29, #408]
   138d4:	sub	w1, w10, w20
   138d8:	ldr	x11, [x0, #3952]
   138dc:	cmp	x5, x1
   138e0:	mov	w12, #0x13                  	// #19
   138e4:	b.ls	14a70 <gcc_cp_fe_context@@Base+0xa7f8>  // b.plast
   138e8:	mov	w2, w10
   138ec:	mov	x1, x19
   138f0:	stp	x23, x28, [x29, #144]
   138f4:	mov	x28, x26
   138f8:	mov	w23, w8
   138fc:	mov	x26, x3
   13900:	stp	x27, x25, [x29, #160]
   13904:	mov	x27, x24
   13908:	mov	x25, x7
   1390c:	mov	w24, w6
   13910:	str	x22, [x29, #176]
   13914:	mov	x22, x11
   13918:	str	x21, [x29, #368]
   1391c:	mov	x21, x5
   13920:	b	13958 <gcc_cp_fe_context@@Base+0x96e0>
   13924:	ubfiz	x0, x2, #4, #31
   13928:	lsl	w19, w2, #1
   1392c:	sub	sp, sp, x0
   13930:	ubfiz	x2, x2, #3, #32
   13934:	mov	x0, sp
   13938:	bl	5210 <memcpy@plt>
   1393c:	sub	w2, w19, w20
   13940:	mov	x1, x0
   13944:	cmp	x2, x21
   13948:	mov	w12, #0x13                  	// #19
   1394c:	ldr	x4, [x29, #136]
   13950:	b.cs	14a3c <gcc_cp_fe_context@@Base+0xa7c4>  // b.hs, b.nlast
   13954:	mov	w2, w19
   13958:	ldr	w0, [x22]
   1395c:	str	x4, [x29, #136]
   13960:	mul	w0, w0, w12
   13964:	cmp	w0, w2
   13968:	b.cs	13924 <gcc_cp_fe_context@@Base+0x96ac>  // b.hs, b.nlast
   1396c:	b	134f0 <gcc_cp_fe_context@@Base+0x9278>
   13970:	add	x0, x22, #0x1
   13974:	sub	w1, w10, w20
   13978:	sub	x0, x0, x21
   1397c:	mov	w7, w10
   13980:	add	x0, x0, x0, lsl #1
   13984:	add	x2, x0, #0x4
   13988:	mov	x6, x2
   1398c:	cmp	x1, x2
   13990:	b.cs	142a0 <gcc_cp_fe_context@@Base+0xa028>  // b.hs, b.nlast
   13994:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
   13998:	mov	w1, #0x13                  	// #19
   1399c:	stp	x4, x5, [x29, #144]
   139a0:	mov	w2, w10
   139a4:	ldr	x0, [x0, #3952]
   139a8:	stp	x22, x21, [x29, #160]
   139ac:	mov	x21, x6
   139b0:	str	x3, [x29, #176]
   139b4:	ldr	w0, [x0]
   139b8:	mul	w0, w0, w1
   139bc:	mov	x1, x19
   139c0:	mov	w19, w0
   139c4:	cmp	w2, w19
   139c8:	b.hi	134f0 <gcc_cp_fe_context@@Base+0x9278>  // b.pmore
   139cc:	ubfiz	x0, x2, #4, #31
   139d0:	lsl	w22, w2, #1
   139d4:	sub	sp, sp, x0
   139d8:	ubfiz	x2, x2, #3, #32
   139dc:	mov	x0, sp
   139e0:	bl	5210 <memcpy@plt>
   139e4:	sub	w2, w22, w20
   139e8:	mov	x1, x0
   139ec:	cmp	x2, x21
   139f0:	b.cs	1428c <gcc_cp_fe_context@@Base+0xa014>  // b.hs, b.nlast
   139f4:	mov	w2, w22
   139f8:	cmp	w2, w19
   139fc:	b.ls	139cc <gcc_cp_fe_context@@Base+0x9754>  // b.plast
   13a00:	b	134f0 <gcc_cp_fe_context@@Base+0x9278>
   13a04:	add	x0, x22, #0x1
   13a08:	sub	w1, w10, w20
   13a0c:	sub	x0, x0, x21
   13a10:	add	x0, x0, x0, lsl #1
   13a14:	add	x2, x0, #0x4
   13a18:	mov	x5, x2
   13a1c:	cmp	x1, x2
   13a20:	b.cs	148f8 <gcc_cp_fe_context@@Base+0xa680>  // b.hs, b.nlast
   13a24:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
   13a28:	mov	w1, #0x13                  	// #19
   13a2c:	mov	w2, w10
   13a30:	stp	x4, x21, [x29, #144]
   13a34:	ldr	x0, [x0, #3952]
   13a38:	stp	x13, x24, [x29, #160]
   13a3c:	str	x3, [x29, #176]
   13a40:	ldr	w0, [x0]
   13a44:	mul	w0, w0, w1
   13a48:	mov	x1, x19
   13a4c:	mov	x19, x5
   13a50:	mov	w24, w0
   13a54:	b	13a5c <gcc_cp_fe_context@@Base+0x97e4>
   13a58:	mov	w2, w21
   13a5c:	cmp	w2, w24
   13a60:	b.hi	134f0 <gcc_cp_fe_context@@Base+0x9278>  // b.pmore
   13a64:	ubfiz	x0, x2, #4, #31
   13a68:	lsl	w21, w2, #1
   13a6c:	sub	sp, sp, x0
   13a70:	ubfiz	x2, x2, #3, #32
   13a74:	mov	x0, sp
   13a78:	bl	5210 <memcpy@plt>
   13a7c:	sub	w2, w21, w20
   13a80:	mov	x1, x0
   13a84:	cmp	x2, x19
   13a88:	b.cc	13a58 <gcc_cp_fe_context@@Base+0x97e0>  // b.lo, b.ul, b.last
   13a8c:	mov	w5, w21
   13a90:	mov	x19, x0
   13a94:	ldp	x4, x21, [x29, #144]
   13a98:	ldp	x13, x24, [x29, #160]
   13a9c:	ldr	x3, [x29, #176]
   13aa0:	cmp	x21, x22
   13aa4:	b.hi	13ae0 <gcc_cp_fe_context@@Base+0x9868>  // b.pmore
   13aa8:	mov	x0, x21
   13aac:	nop
   13ab0:	add	w2, w20, #0x1
   13ab4:	add	w1, w20, #0x2
   13ab8:	ldr	x6, [x25, x0, lsl #3]
   13abc:	str	x6, [x19, w20, uxtw #3]
   13ac0:	ldr	x6, [x27, x0, lsl #3]
   13ac4:	str	x6, [x19, x2, lsl #3]
   13ac8:	ldr	x2, [x28, x0, lsl #3]
   13acc:	str	x2, [x19, w1, uxtw #3]
   13ad0:	add	x0, x0, #0x1
   13ad4:	add	w20, w20, #0x3
   13ad8:	cmp	x22, x0
   13adc:	b.cs	13ab0 <gcc_cp_fe_context@@Base+0x9838>  // b.hs, b.nlast
   13ae0:	add	w1, w20, #0x1
   13ae4:	ubfiz	x0, x20, #3, #32
   13ae8:	add	w2, w20, #0x2
   13aec:	mov	w10, w5
   13af0:	lsl	x1, x1, #3
   13af4:	add	x6, x13, #0x3
   13af8:	str	w21, [x19, x0]
   13afc:	add	w0, w20, #0x3
   13b00:	add	w20, w20, #0x4
   13b04:	str	w22, [x19, x1]
   13b08:	str	xzr, [x19, x2, lsl #3]
   13b0c:	str	xzr, [x19, w0, uxtw #3]
   13b10:	b	132c0 <gcc_cp_fe_context@@Base+0x9048>
   13b14:	ldrsb	w7, [x13, #2]
   13b18:	add	x6, x13, #0x3
   13b1c:	ldrb	w1, [x13, #1]
   13b20:	mov	x0, x6
   13b24:	add	w7, w1, w7, lsl #8
   13b28:	add	x2, x0, #0x2
   13b2c:	cmp	x2, x23
   13b30:	b.cs	13b48 <gcc_cp_fe_context@@Base+0x98d0>  // b.hs, b.nlast
   13b34:	ldrb	w1, [x0]
   13b38:	sub	w1, w1, #0x6
   13b3c:	and	w1, w1, #0xff
   13b40:	cmp	w1, #0x1
   13b44:	b.ls	1426c <gcc_cp_fe_context@@Base+0x9ff4>  // b.plast
   13b48:	add	x1, x0, #0x6
   13b4c:	cmp	x1, x23
   13b50:	b.cs	13b68 <gcc_cp_fe_context@@Base+0x98f0>  // b.hs, b.nlast
   13b54:	ldrb	w5, [x0]
   13b58:	cmp	w5, #0x13
   13b5c:	b.ne	13b68 <gcc_cp_fe_context@@Base+0x98f0>  // b.any
   13b60:	mov	x0, x1
   13b64:	b	13b28 <gcc_cp_fe_context@@Base+0x98b0>
   13b68:	add	x7, x6, w7, sxtw
   13b6c:	str	x7, [x29, #408]
   13b70:	cmp	x0, x23
   13b74:	b.eq	144c8 <gcc_cp_fe_context@@Base+0xa250>  // b.none
   13b78:	ldrb	w1, [x0]
   13b7c:	cmp	w1, #0x2
   13b80:	b.eq	14470 <gcc_cp_fe_context@@Base+0xa1f8>  // b.none
   13b84:	ldr	x5, [x29, #280]
   13b88:	ldrsb	w5, [x5, #56]
   13b8c:	cmp	w5, #0x0
   13b90:	ccmp	w1, #0xa, #0x0, lt  // lt = tstop
   13b94:	b.eq	14988 <gcc_cp_fe_context@@Base+0xa710>  // b.none
   13b98:	cmp	w1, #0x4
   13b9c:	b.eq	14850 <gcc_cp_fe_context@@Base+0xa5d8>  // b.none
   13ba0:	ldrb	w0, [x13]
   13ba4:	cmp	w0, #0x11
   13ba8:	b.eq	140e8 <gcc_cp_fe_context@@Base+0x9e70>  // b.none
   13bac:	mov	w0, #0xd                   	// #13
   13bb0:	strb	w0, [x13]
   13bb4:	b	132c0 <gcc_cp_fe_context@@Base+0x9048>
   13bb8:	ldr	x0, [x29, #328]
   13bbc:	mov	x13, x5
   13bc0:	cmp	x24, x0
   13bc4:	b.eq	13000 <gcc_cp_fe_context@@Base+0x8d88>  // b.none
   13bc8:	cbz	w20, 13ca8 <gcc_cp_fe_context@@Base+0x9a30>
   13bcc:	sub	w2, w20, #0x1
   13bd0:	sub	w0, w20, #0x3
   13bd4:	sub	w5, w20, #0x4
   13bd8:	sub	w1, w20, #0x2
   13bdc:	lsl	x0, x0, #3
   13be0:	ubfiz	x6, x5, #3, #32
   13be4:	ldr	x2, [x19, x2, lsl #3]
   13be8:	ldrsw	x22, [x19, x0]
   13bec:	ldrsw	x21, [x19, x6]
   13bf0:	cmp	x2, #0x0
   13bf4:	csel	x24, x24, x2, eq  // eq = none
   13bf8:	cmp	x22, x21
   13bfc:	ldr	x13, [x19, x1, lsl #3]
   13c00:	b.cc	14264 <gcc_cp_fe_context@@Base+0x9fec>  // b.lo, b.ul, b.last
   13c04:	sub	w1, w20, #0x7
   13c08:	mov	x0, x22
   13c0c:	nop
   13c10:	add	w5, w1, #0x2
   13c14:	add	w2, w1, #0x1
   13c18:	ldr	x6, [x19, w1, uxtw #3]
   13c1c:	str	x6, [x25, x0, lsl #3]
   13c20:	ldr	x5, [x19, x5, lsl #3]
   13c24:	str	x5, [x28, x0, lsl #3]
   13c28:	ldr	x2, [x19, x2, lsl #3]
   13c2c:	str	x2, [x27, x0, lsl #3]
   13c30:	sub	x0, x0, #0x1
   13c34:	mov	w20, w1
   13c38:	cmp	x21, x0
   13c3c:	sub	w1, w1, #0x3
   13c40:	b.ls	13c10 <gcc_cp_fe_context@@Base+0x9998>  // b.plast
   13c44:	cbz	x13, 13bc8 <gcc_cp_fe_context@@Base+0x9950>
   13c48:	cmp	x23, x13
   13c4c:	b.ls	13c6c <gcc_cp_fe_context@@Base+0x99f4>  // b.plast
   13c50:	ldrb	w0, [x13]
   13c54:	cmp	w0, #0x12
   13c58:	b.hi	141ec <gcc_cp_fe_context@@Base+0x9f74>  // b.pmore
   13c5c:	cmp	w0, #0x10
   13c60:	b.hi	14224 <gcc_cp_fe_context@@Base+0x9fac>  // b.pmore
   13c64:	cmp	w0, #0xd
   13c68:	b.eq	14224 <gcc_cp_fe_context@@Base+0x9fac>  // b.none
   13c6c:	ldr	x0, [x29, #384]
   13c70:	str	wzr, [x29, #368]
   13c74:	cmp	x0, x24
   13c78:	ldr	x0, [x29, #392]
   13c7c:	ccmp	x24, x0, #0x2, ls  // ls = plast
   13c80:	ldr	x0, [x29, #376]
   13c84:	csel	x26, x0, x26, ls  // ls = plast
   13c88:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   13c8c:	ldr	w0, [x29, #356]
   13c90:	mov	x13, x5
   13c94:	cmp	w0, #0x0
   13c98:	ldr	x0, [x29, #304]
   13c9c:	ccmp	x24, x0, #0x4, ne  // ne = any
   13ca0:	b.eq	13000 <gcc_cp_fe_context@@Base+0x8d88>  // b.none
   13ca4:	cbnz	w20, 13bcc <gcc_cp_fe_context@@Base+0x9954>
   13ca8:	ldr	w0, [x29, #336]
   13cac:	mov	x22, x3
   13cb0:	mov	x23, x4
   13cb4:	cbz	w0, 14968 <gcc_cp_fe_context@@Base+0xa6f0>
   13cb8:	ldr	x1, [x29, #344]
   13cbc:	ldr	x2, [x29, #384]
   13cc0:	mov	x24, x1
   13cc4:	cmp	x1, x2
   13cc8:	ldr	x2, [x29, #392]
   13ccc:	cset	w0, cs  // cs = hs, nlast
   13cd0:	cmp	x1, x2
   13cd4:	cset	w1, ls  // ls = plast
   13cd8:	and	w0, w0, w1
   13cdc:	cmp	w0, #0x0
   13ce0:	ldr	x0, [x29, #376]
   13ce4:	csel	x26, x22, x0, eq  // eq = none
   13ce8:	ldr	x0, [x29, #320]
   13cec:	cmp	x0, #0x1
   13cf0:	b.ls	13d20 <gcc_cp_fe_context@@Base+0x9aa8>  // b.plast
   13cf4:	ldr	x19, [x29, #208]
   13cf8:	ldr	x0, [x29, #224]
   13cfc:	mov	x2, x19
   13d00:	add	x1, x0, #0x8
   13d04:	add	x0, x25, #0x8
   13d08:	bl	5210 <memcpy@plt>
   13d0c:	ldr	x0, [x29, #216]
   13d10:	mov	x2, x19
   13d14:	add	x1, x0, #0x8
   13d18:	add	x0, x27, #0x8
   13d1c:	bl	5210 <memcpy@plt>
   13d20:	ldr	x0, [x29, #272]
   13d24:	cbz	x0, 13eb8 <gcc_cp_fe_context@@Base+0x9c40>
   13d28:	ldr	x0, [x29, #280]
   13d2c:	ldrb	w0, [x0, #56]
   13d30:	tbnz	w0, #4, 13eb8 <gcc_cp_fe_context@@Base+0x9c40>
   13d34:	ands	w0, w0, #0x6
   13d38:	b.eq	14680 <gcc_cp_fe_context@@Base+0xa408>  // b.none
   13d3c:	ldr	x1, [x29, #272]
   13d40:	cmp	w0, #0x2
   13d44:	ldr	x3, [x29, #320]
   13d48:	ldr	w20, [x1]
   13d4c:	mov	w19, w3
   13d50:	b.ne	13dac <gcc_cp_fe_context@@Base+0x9b34>  // b.any
   13d54:	ldr	x0, [x29, #256]
   13d58:	add	x0, x0, #0x2
   13d5c:	cmp	x0, w20, uxtw
   13d60:	b.ls	13dac <gcc_cp_fe_context@@Base+0x9b34>  // b.plast
   13d64:	mov	x20, x1
   13d68:	add	w1, w3, #0x1
   13d6c:	ldr	x0, [x20, #8]
   13d70:	str	w1, [x20]
   13d74:	ubfiz	x1, x1, #2, #32
   13d78:	bl	53b0 <realloc@plt>
   13d7c:	mov	x1, x0
   13d80:	ldr	x0, [x20, #16]
   13d84:	str	x1, [x20, #8]
   13d88:	ldr	w1, [x20]
   13d8c:	lsl	x1, x1, #2
   13d90:	bl	53b0 <realloc@plt>
   13d94:	ldr	x1, [x20, #8]
   13d98:	str	x0, [x20, #16]
   13d9c:	cmp	x1, #0x0
   13da0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   13da4:	b.eq	134f0 <gcc_cp_fe_context@@Base+0x9278>  // b.none
   13da8:	ldr	w20, [x20]
   13dac:	cbz	w20, 13eb8 <gcc_cp_fe_context@@Base+0x9c40>
   13db0:	ldr	x7, [x29, #272]
   13db4:	sub	x0, x24, x23
   13db8:	ldr	x1, [x29, #376]
   13dbc:	ldp	x5, x9, [x7, #8]
   13dc0:	cmp	x1, x26
   13dc4:	ldr	x1, [x29, #384]
   13dc8:	ldr	w2, [x29, #352]
   13dcc:	ldr	w3, [x29, #340]
   13dd0:	sub	x1, x24, x1
   13dd4:	add	w0, w2, w0
   13dd8:	str	w3, [x5]
   13ddc:	csel	w0, w0, w1, ne  // ne = any
   13de0:	str	w0, [x9]
   13de4:	ldr	x6, [x29, #320]
   13de8:	ldr	w4, [x7]
   13dec:	mov	w0, w4
   13df0:	cmp	x0, x6
   13df4:	csel	x0, x0, x6, ls  // ls = plast
   13df8:	cmp	x0, #0x1
   13dfc:	b.ls	13e8c <gcc_cp_fe_context@@Base+0x9c14>  // b.plast
   13e00:	cbnz	w2, 145cc <gcc_cp_fe_context@@Base+0xa354>
   13e04:	adrp	x0, 2d000 <xexit@@Base+0x161a0>
   13e08:	add	x0, x0, #0x600
   13e0c:	add	x0, x0, #0x104
   13e10:	mov	x1, #0x1                   	// #1
   13e14:	mov	w11, #0xffffffff            	// #-1
   13e18:	ldr	x8, [x29, #304]
   13e1c:	b	13e58 <gcc_cp_fe_context@@Base+0x9be0>
   13e20:	ldr	x3, [x27, x1, lsl #3]
   13e24:	cmp	x3, x0
   13e28:	b.eq	13e68 <gcc_cp_fe_context@@Base+0x9bf0>  // b.none
   13e2c:	sub	x2, x2, x8
   13e30:	str	w2, [x5, x4]
   13e34:	sub	x3, x3, x8
   13e38:	str	w3, [x9, x1, lsl #2]
   13e3c:	add	x1, x1, #0x1
   13e40:	ldr	w4, [x7]
   13e44:	mov	w2, w4
   13e48:	cmp	x2, x6
   13e4c:	csel	x2, x2, x6, ls  // ls = plast
   13e50:	cmp	x1, x2
   13e54:	b.cs	13e8c <gcc_cp_fe_context@@Base+0x9c14>  // b.hs, b.nlast
   13e58:	ldr	x2, [x25, x1, lsl #3]
   13e5c:	lsl	x4, x1, #2
   13e60:	cmp	x2, x0
   13e64:	b.ne	13e20 <gcc_cp_fe_context@@Base+0x9ba8>  // b.any
   13e68:	str	w11, [x9, x1, lsl #2]
   13e6c:	add	x1, x1, #0x1
   13e70:	str	w11, [x5, x4]
   13e74:	ldr	w4, [x7]
   13e78:	mov	w2, w4
   13e7c:	cmp	x2, x6
   13e80:	csel	x2, x2, x6, ls  // ls = plast
   13e84:	cmp	x1, x2
   13e88:	b.cc	13e58 <gcc_cp_fe_context@@Base+0x9be0>  // b.lo, b.ul, b.last
   13e8c:	cmp	w19, w4
   13e90:	b.cs	13eb8 <gcc_cp_fe_context@@Base+0x9c40>  // b.hs, b.nlast
   13e94:	ldrsw	x22, [x29, #320]
   13e98:	mov	w0, #0xffffffff            	// #-1
   13e9c:	ldr	x2, [x29, #272]
   13ea0:	str	w0, [x9, x22, lsl #2]
   13ea4:	str	w0, [x5, x22, lsl #2]
   13ea8:	add	x22, x22, #0x1
   13eac:	ldr	w1, [x2]
   13eb0:	cmp	w1, w22
   13eb4:	b.hi	13ea0 <gcc_cp_fe_context@@Base+0x9c28>  // b.pmore
   13eb8:	ldr	x0, [x29, #312]
   13ebc:	sub	x12, x23, x0
   13ec0:	ldr	x0, [x29, #376]
   13ec4:	cmp	x0, x26
   13ec8:	ldr	x0, [x29, #384]
   13ecc:	csel	x1, x12, x0, ne  // ne = any
   13ed0:	ldr	x0, [x29, #248]
   13ed4:	mov	sp, x29
   13ed8:	sub	x0, x24, x0
   13edc:	sub	w0, w0, w1
   13ee0:	ldp	x19, x20, [sp, #16]
   13ee4:	ldp	x21, x22, [sp, #32]
   13ee8:	ldp	x23, x24, [sp, #48]
   13eec:	ldp	x25, x26, [sp, #64]
   13ef0:	ldp	x27, x28, [sp, #80]
   13ef4:	ldp	x29, x30, [sp], #416
   13ef8:	ret
   13efc:	ldr	x0, [x29, #328]
   13f00:	cmp	x24, x0
   13f04:	b.eq	14700 <gcc_cp_fe_context@@Base+0xa488>  // b.none
   13f08:	ldr	x0, [x29, #392]
   13f0c:	cmp	x24, x0
   13f10:	b.eq	144d4 <gcc_cp_fe_context@@Base+0xa25c>  // b.none
   13f14:	ldrb	w0, [x24]
   13f18:	cmp	w0, #0xa
   13f1c:	cset	w0, eq  // eq = none
   13f20:	cbz	w0, 13bc8 <gcc_cp_fe_context@@Base+0x9950>
   13f24:	ldr	x0, [x29, #280]
   13f28:	mov	x13, x5
   13f2c:	ldrsb	w0, [x0, #56]
   13f30:	tbnz	w0, #31, 13000 <gcc_cp_fe_context@@Base+0x8d88>
   13f34:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   13f38:	ldr	w0, [x29, #356]
   13f3c:	cmp	w0, #0x0
   13f40:	ldr	x0, [x29, #304]
   13f44:	ccmp	x24, x0, #0x4, ne  // ne = any
   13f48:	b.ne	14670 <gcc_cp_fe_context@@Base+0xa3f8>  // b.any
   13f4c:	ldr	x0, [x29, #280]
   13f50:	mov	x13, x5
   13f54:	ldrb	w0, [x0, #56]
   13f58:	tbz	w0, #5, 13000 <gcc_cp_fe_context@@Base+0x8d88>
   13f5c:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   13f60:	ldr	w0, [x29, #356]
   13f64:	cmp	w0, #0x0
   13f68:	ldr	x0, [x29, #304]
   13f6c:	ccmp	x24, x0, #0x4, ne  // ne = any
   13f70:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   13f74:	ldr	x1, [x29, #392]
   13f78:	sub	x0, x24, #0x1
   13f7c:	cmp	x1, x0
   13f80:	b.eq	14468 <gcc_cp_fe_context@@Base+0xa1f0>  // b.none
   13f84:	cmp	x4, x24
   13f88:	b.eq	147d4 <gcc_cp_fe_context@@Base+0xa55c>  // b.none
   13f8c:	ldurb	w0, [x24, #-1]
   13f90:	ldr	x1, [x29, #296]
   13f94:	ldrb	w0, [x1, w0, sxtw]
   13f98:	cmp	w0, #0x1
   13f9c:	b.ne	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.any
   13fa0:	ldr	x0, [x29, #328]
   13fa4:	cmp	x24, x0
   13fa8:	b.eq	133d4 <gcc_cp_fe_context@@Base+0x915c>  // b.none
   13fac:	ldr	x0, [x29, #392]
   13fb0:	cmp	x24, x0
   13fb4:	b.eq	147f0 <gcc_cp_fe_context@@Base+0xa578>  // b.none
   13fb8:	sub	x0, x4, #0x1
   13fbc:	cmp	x24, x0
   13fc0:	b.eq	14920 <gcc_cp_fe_context@@Base+0xa6a8>  // b.none
   13fc4:	ldrb	w0, [x24]
   13fc8:	ldrb	w0, [x1, w0, sxtw]
   13fcc:	mov	x13, x5
   13fd0:	cmp	w0, #0x1
   13fd4:	b.ne	13000 <gcc_cp_fe_context@@Base+0x8d88>  // b.any
   13fd8:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   13fdc:	ldr	x0, [x29, #328]
   13fe0:	cmp	x24, x0
   13fe4:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   13fe8:	ldr	x0, [x29, #392]
   13fec:	cmp	x24, x0
   13ff0:	b.eq	14714 <gcc_cp_fe_context@@Base+0xa49c>  // b.none
   13ff4:	sub	x0, x4, #0x1
   13ff8:	cmp	x24, x0
   13ffc:	b.eq	144e4 <gcc_cp_fe_context@@Base+0xa26c>  // b.none
   14000:	ldrb	w0, [x24]
   14004:	ldr	x1, [x29, #296]
   14008:	ldrb	w0, [x1, w0, sxtw]
   1400c:	cmp	w0, #0x1
   14010:	b.ne	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.any
   14014:	ldr	w0, [x29, #356]
   14018:	cmp	w0, #0x0
   1401c:	ldr	x0, [x29, #304]
   14020:	ccmp	x24, x0, #0x4, ne  // ne = any
   14024:	b.eq	133d4 <gcc_cp_fe_context@@Base+0x915c>  // b.none
   14028:	ldr	x1, [x29, #392]
   1402c:	sub	x0, x24, #0x1
   14030:	cmp	x1, x0
   14034:	b.eq	148bc <gcc_cp_fe_context@@Base+0xa644>  // b.none
   14038:	cmp	x4, x24
   1403c:	b.eq	148c4 <gcc_cp_fe_context@@Base+0xa64c>  // b.none
   14040:	ldurb	w0, [x24, #-1]
   14044:	ldr	x1, [x29, #296]
   14048:	mov	x13, x5
   1404c:	ldrb	w0, [x1, w0, sxtw]
   14050:	cmp	w0, #0x1
   14054:	b.ne	13000 <gcc_cp_fe_context@@Base+0x8d88>  // b.any
   14058:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   1405c:	ldr	x0, [x29, #304]
   14060:	cmp	x24, x0
   14064:	b.eq	133d4 <gcc_cp_fe_context@@Base+0x915c>  // b.none
   14068:	ldr	w0, [x29, #356]
   1406c:	cmp	w0, #0x0
   14070:	ldr	x0, [x29, #328]
   14074:	ccmp	x24, x0, #0x4, ne  // ne = any
   14078:	b.eq	133d4 <gcc_cp_fe_context@@Base+0x915c>  // b.none
   1407c:	ldr	x1, [x29, #392]
   14080:	sub	x0, x24, #0x1
   14084:	cmp	x1, x0
   14088:	b.eq	147b0 <gcc_cp_fe_context@@Base+0xa538>  // b.none
   1408c:	cmp	x4, x24
   14090:	b.eq	14830 <gcc_cp_fe_context@@Base+0xa5b8>  // b.none
   14094:	ldurb	w0, [x24, #-1]
   14098:	ldr	x1, [x29, #296]
   1409c:	ldrb	w0, [x1, w0, sxtw]
   140a0:	cmp	w0, #0x1
   140a4:	ldr	x0, [x29, #392]
   140a8:	cset	w1, eq  // eq = none
   140ac:	cmp	x24, x0
   140b0:	b.eq	147a8 <gcc_cp_fe_context@@Base+0xa530>  // b.none
   140b4:	sub	x0, x4, #0x1
   140b8:	cmp	x24, x0
   140bc:	b.eq	1481c <gcc_cp_fe_context@@Base+0xa5a4>  // b.none
   140c0:	ldrb	w0, [x24]
   140c4:	ldr	x2, [x29, #296]
   140c8:	mov	x13, x5
   140cc:	ldrb	w0, [x2, w0, sxtw]
   140d0:	cmp	w0, #0x1
   140d4:	cset	w0, eq  // eq = none
   140d8:	cmp	w0, w1
   140dc:	b.ne	13000 <gcc_cp_fe_context@@Base+0x8d88>  // b.any
   140e0:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   140e4:	add	x6, x13, #0x3
   140e8:	sub	w0, w20, #0x3
   140ec:	sub	w1, w20, #0x4
   140f0:	lsl	x0, x0, #3
   140f4:	ubfiz	x2, x1, #3, #32
   140f8:	ldrsw	x0, [x19, x0]
   140fc:	ldrsw	x5, [x19, x2]
   14100:	cmp	x0, x5
   14104:	b.cc	14800 <gcc_cp_fe_context@@Base+0xa588>  // b.lo, b.ul, b.last
   14108:	ldp	x8, x7, [x29, #184]
   1410c:	sub	w1, w20, #0x7
   14110:	add	w2, w1, #0x2
   14114:	mov	w20, w1
   14118:	ldr	x1, [x19, w1, uxtw #3]
   1411c:	str	x1, [x7, x0, lsl #3]
   14120:	ldr	x1, [x19, x2, lsl #3]
   14124:	str	x1, [x8, x0, lsl #3]
   14128:	sub	x0, x0, #0x1
   1412c:	sub	w1, w20, #0x3
   14130:	cmp	x5, x0
   14134:	b.ls	14110 <gcc_cp_fe_context@@Base+0x9e98>  // b.plast
   14138:	str	wzr, [x29, #368]
   1413c:	b	132c0 <gcc_cp_fe_context@@Base+0x9048>
   14140:	add	x0, x22, #0x1
   14144:	ldrsb	w5, [x13, #2]
   14148:	ldrb	w2, [x13, #1]
   1414c:	sub	x0, x0, x21
   14150:	sub	w1, w10, w20
   14154:	add	x13, x13, #0x3
   14158:	add	x0, x0, x0, lsl #1
   1415c:	add	x6, x0, #0x4
   14160:	add	w0, w2, w5, lsl #8
   14164:	str	w0, [x29, #176]
   14168:	cmp	x6, x1
   1416c:	b.ls	147f8 <gcc_cp_fe_context@@Base+0xa580>  // b.plast
   14170:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
   14174:	mov	w1, #0x13                  	// #19
   14178:	stp	x4, x22, [x29, #136]
   1417c:	mov	w2, w10
   14180:	ldr	x0, [x0, #3952]
   14184:	stp	x21, x13, [x29, #152]
   14188:	mov	x21, x6
   1418c:	str	x3, [x29, #168]
   14190:	ldr	w0, [x0]
   14194:	mul	w0, w0, w1
   14198:	mov	x1, x19
   1419c:	mov	w19, w0
   141a0:	cmp	w2, w19
   141a4:	b.hi	134f0 <gcc_cp_fe_context@@Base+0x9278>  // b.pmore
   141a8:	ubfiz	x0, x2, #4, #31
   141ac:	lsl	w22, w2, #1
   141b0:	sub	sp, sp, x0
   141b4:	ubfiz	x2, x2, #3, #32
   141b8:	mov	x0, sp
   141bc:	bl	5210 <memcpy@plt>
   141c0:	sub	w2, w22, w20
   141c4:	mov	x1, x0
   141c8:	cmp	x2, x21
   141cc:	b.cs	144f0 <gcc_cp_fe_context@@Base+0xa278>  // b.hs, b.nlast
   141d0:	mov	w2, w22
   141d4:	cmp	w2, w19
   141d8:	b.ls	141a8 <gcc_cp_fe_context@@Base+0x9f30>  // b.plast
   141dc:	b	134f0 <gcc_cp_fe_context@@Base+0x9278>
   141e0:	mov	x13, x1
   141e4:	str	wzr, [x29, #368]
   141e8:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   141ec:	cmp	w0, #0x16
   141f0:	b.ne	13c6c <gcc_cp_fe_context@@Base+0x99f4>  // b.any
   141f4:	add	x0, x13, #0x1
   141f8:	str	x0, [x29, #408]
   141fc:	add	x0, x13, #0x3
   14200:	ldrb	w2, [x13, #1]
   14204:	ldrsb	w1, [x13, #2]
   14208:	add	w1, w2, w1, lsl #8
   1420c:	add	x2, x0, w1, sxtw
   14210:	str	x2, [x29, #408]
   14214:	ldrb	w0, [x0, w1, sxtw]
   14218:	cmp	w0, #0x15
   1421c:	b.ne	13c6c <gcc_cp_fe_context@@Base+0x99f4>  // b.any
   14220:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   14224:	add	x0, x13, #0x1
   14228:	str	x0, [x29, #408]
   1422c:	add	x0, x13, #0x3
   14230:	ldrb	w2, [x13, #1]
   14234:	ldrsb	w1, [x13, #2]
   14238:	add	w1, w2, w1, lsl #8
   1423c:	add	x2, x0, w1, sxtw
   14240:	str	x2, [x29, #408]
   14244:	ldrb	w0, [x0, w1, sxtw]
   14248:	cmp	w0, #0xf
   1424c:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   14250:	b	13c6c <gcc_cp_fe_context@@Base+0x99f4>
   14254:	ldr	x1, [x29, #344]
   14258:	cmp	x24, x1
   1425c:	cset	w1, hi  // hi = pmore
   14260:	b	13250 <gcc_cp_fe_context@@Base+0x8fd8>
   14264:	mov	w20, w5
   14268:	b	13c44 <gcc_cp_fe_context@@Base+0x99cc>
   1426c:	add	x1, x0, #0x3
   14270:	mov	x0, x1
   14274:	b	13b28 <gcc_cp_fe_context@@Base+0x98b0>
   14278:	cmp	x3, x26
   1427c:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   14280:	mov	x26, x3
   14284:	mov	x24, x4
   14288:	b	13600 <gcc_cp_fe_context@@Base+0x9388>
   1428c:	mov	w7, w22
   14290:	mov	x19, x0
   14294:	ldp	x4, x5, [x29, #144]
   14298:	ldp	x22, x21, [x29, #160]
   1429c:	ldr	x3, [x29, #176]
   142a0:	cmp	x21, x22
   142a4:	b.hi	142e0 <gcc_cp_fe_context@@Base+0xa068>  // b.pmore
   142a8:	mov	x0, x21
   142ac:	nop
   142b0:	add	w2, w20, #0x1
   142b4:	add	w1, w20, #0x2
   142b8:	ldr	x6, [x25, x0, lsl #3]
   142bc:	str	x6, [x19, w20, uxtw #3]
   142c0:	ldr	x6, [x27, x0, lsl #3]
   142c4:	str	x6, [x19, x2, lsl #3]
   142c8:	ldr	x2, [x28, x0, lsl #3]
   142cc:	str	x2, [x19, w1, uxtw #3]
   142d0:	add	x0, x0, #0x1
   142d4:	add	w20, w20, #0x3
   142d8:	cmp	x22, x0
   142dc:	b.cs	142b0 <gcc_cp_fe_context@@Base+0xa038>  // b.hs, b.nlast
   142e0:	add	w1, w20, #0x1
   142e4:	ubfiz	x0, x20, #3, #32
   142e8:	add	w2, w20, #0x2
   142ec:	mov	w10, w7
   142f0:	lsl	x1, x1, #3
   142f4:	mov	x13, x5
   142f8:	str	w21, [x19, x0]
   142fc:	add	w0, w20, #0x3
   14300:	add	w20, w20, #0x4
   14304:	str	w22, [x19, x1]
   14308:	str	xzr, [x19, x2, lsl #3]
   1430c:	str	xzr, [x19, w0, uxtw #3]
   14310:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   14314:	mov	w6, w22
   14318:	mov	x19, x0
   1431c:	ldp	x4, x22, [x29, #136]
   14320:	ldp	x21, x13, [x29, #152]
   14324:	ldr	x3, [x29, #168]
   14328:	cmp	x21, x22
   1432c:	b.hi	14368 <gcc_cp_fe_context@@Base+0xa0f0>  // b.pmore
   14330:	mov	x0, x21
   14334:	nop
   14338:	add	w2, w20, #0x1
   1433c:	add	w1, w20, #0x2
   14340:	ldr	x5, [x25, x0, lsl #3]
   14344:	str	x5, [x19, w20, uxtw #3]
   14348:	ldr	x5, [x27, x0, lsl #3]
   1434c:	str	x5, [x19, x2, lsl #3]
   14350:	ldr	x2, [x28, x0, lsl #3]
   14354:	str	x2, [x19, w1, uxtw #3]
   14358:	add	x0, x0, #0x1
   1435c:	add	w20, w20, #0x3
   14360:	cmp	x0, x22
   14364:	b.ls	14338 <gcc_cp_fe_context@@Base+0xa0c0>  // b.plast
   14368:	add	w2, w20, #0x1
   1436c:	ubfiz	x0, x20, #3, #32
   14370:	add	w5, w20, #0x2
   14374:	ldr	w1, [x29, #176]
   14378:	lsl	x2, x2, #3
   1437c:	mov	w10, w6
   14380:	str	w21, [x19, x0]
   14384:	add	w0, w20, #0x3
   14388:	add	x1, x13, w1, sxtw
   1438c:	add	w20, w20, #0x4
   14390:	str	w22, [x19, x2]
   14394:	str	x1, [x19, x5, lsl #3]
   14398:	str	x24, [x19, w0, uxtw #3]
   1439c:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   143a0:	mov	x21, #0x0                   	// #0
   143a4:	cbz	w2, 13774 <gcc_cp_fe_context@@Base+0x94fc>
   143a8:	sub	w14, w2, #0x1
   143ac:	mov	x0, #0x0                   	// #0
   143b0:	b	143c0 <gcc_cp_fe_context@@Base+0xa148>
   143b4:	cmp	x14, x0
   143b8:	add	x0, x0, #0x1
   143bc:	b.eq	14828 <gcc_cp_fe_context@@Base+0xa5b0>  // b.none
   143c0:	ldrb	w12, [x24, x0]
   143c4:	ldrb	w11, [x1, x0]
   143c8:	ldrb	w12, [x22, x12]
   143cc:	ldrb	w11, [x22, x11]
   143d0:	cmp	w12, w11
   143d4:	b.eq	143b4 <gcc_cp_fe_context@@Base+0xa13c>  // b.none
   143d8:	mov	x19, x23
   143dc:	mov	w20, w25
   143e0:	mov	x23, x9
   143e4:	mov	x25, x27
   143e8:	mov	x27, x28
   143ec:	mov	x28, x8
   143f0:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   143f4:	mov	x23, x4
   143f8:	b	13d20 <gcc_cp_fe_context@@Base+0x9aa8>
   143fc:	sub	w0, w2, #0x1
   14400:	ands	w0, w0, #0xff
   14404:	b.eq	14a18 <gcc_cp_fe_context@@Base+0xa7a0>  // b.none
   14408:	and	x22, x0, #0xff
   1440c:	add	x0, x28, w0, uxtb #3
   14410:	ldrb	w1, [x0]
   14414:	tbnz	w1, #2, 13810 <gcc_cp_fe_context@@Base+0x9598>
   14418:	sub	x0, x0, #0x8
   1441c:	subs	x22, x22, #0x1
   14420:	b.ne	14410 <gcc_cp_fe_context@@Base+0xa198>  // b.any
   14424:	b	13808 <gcc_cp_fe_context@@Base+0x9590>
   14428:	sub	w0, w0, #0x1
   1442c:	add	x13, x13, #0x5
   14430:	sturh	w0, [x13, #-2]
   14434:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   14438:	mov	w0, #0x0                   	// #0
   1443c:	ldr	x2, [x29, #392]
   14440:	cmp	x5, x2
   14444:	ldr	x2, [x29, #384]
   14448:	ccmp	x5, x2, #0x0, ls  // ls = plast
   1444c:	cset	w2, cs  // cs = hs, nlast
   14450:	cmp	w2, w0
   14454:	ldr	x0, [x29, #376]
   14458:	csel	x6, x0, x5, ne  // ne = any
   1445c:	b	136d0 <gcc_cp_fe_context@@Base+0x9458>
   14460:	ldrb	w0, [x4]
   14464:	b	13390 <gcc_cp_fe_context@@Base+0x9118>
   14468:	ldrb	w0, [x4]
   1446c:	b	13f90 <gcc_cp_fe_context@@Base+0x9d18>
   14470:	ldrb	w1, [x0, #2]
   14474:	ldrb	w0, [x7, #3]
   14478:	cmp	w0, #0x2
   1447c:	b.eq	14958 <gcc_cp_fe_context@@Base+0xa6e0>  // b.none
   14480:	sub	w2, w0, #0x4
   14484:	and	w2, w2, #0xff
   14488:	cmp	w2, #0x1
   1448c:	b.hi	13ba0 <gcc_cp_fe_context@@Base+0x9928>  // b.pmore
   14490:	ldrb	w2, [x7, #4]
   14494:	cmp	w0, #0x5
   14498:	cset	w5, eq  // eq = none
   1449c:	cmp	w1, w2, lsl #3
   144a0:	b.cs	144c4 <gcc_cp_fe_context@@Base+0xa24c>  // b.hs, b.nlast
   144a4:	lsr	w2, w1, #3
   144a8:	and	w1, w1, #0x7
   144ac:	add	w2, w2, #0x5
   144b0:	ldrb	w2, [x7, w2, sxtw]
   144b4:	asr	w1, w2, w1
   144b8:	tbz	w1, #0, 144c4 <gcc_cp_fe_context@@Base+0xa24c>
   144bc:	cmp	w0, #0x5
   144c0:	cset	w5, ne  // ne = any
   144c4:	cbnz	w5, 13ba0 <gcc_cp_fe_context@@Base+0x9928>
   144c8:	mov	w0, #0x11                  	// #17
   144cc:	strb	w0, [x13]
   144d0:	b	140e8 <gcc_cp_fe_context@@Base+0x9e70>
   144d4:	ldrb	w0, [x4]
   144d8:	cmp	w0, #0xa
   144dc:	cset	w0, eq  // eq = none
   144e0:	b	13f20 <gcc_cp_fe_context@@Base+0x9ca8>
   144e4:	ldr	x0, [x29, #392]
   144e8:	ldurb	w0, [x0, #-1]
   144ec:	b	14004 <gcc_cp_fe_context@@Base+0x9d8c>
   144f0:	mov	w6, w22
   144f4:	mov	x19, x0
   144f8:	ldp	x4, x22, [x29, #136]
   144fc:	ldp	x21, x13, [x29, #152]
   14500:	ldr	x3, [x29, #168]
   14504:	cmp	x21, x22
   14508:	b.hi	14540 <gcc_cp_fe_context@@Base+0xa2c8>  // b.pmore
   1450c:	mov	x0, x21
   14510:	add	w2, w20, #0x1
   14514:	add	w1, w20, #0x2
   14518:	ldr	x5, [x25, x0, lsl #3]
   1451c:	str	x5, [x19, w20, uxtw #3]
   14520:	ldr	x5, [x27, x0, lsl #3]
   14524:	str	x5, [x19, x2, lsl #3]
   14528:	ldr	x2, [x28, x0, lsl #3]
   1452c:	str	x2, [x19, w1, uxtw #3]
   14530:	add	x0, x0, #0x1
   14534:	add	w20, w20, #0x3
   14538:	cmp	x22, x0
   1453c:	b.cs	14510 <gcc_cp_fe_context@@Base+0xa298>  // b.hs, b.nlast
   14540:	add	w2, w20, #0x1
   14544:	ubfiz	x1, x20, #3, #32
   14548:	ldr	w0, [x29, #176]
   1454c:	add	w5, w20, #0x2
   14550:	lsl	x2, x2, #3
   14554:	mov	w10, w6
   14558:	str	w21, [x19, x1]
   1455c:	add	w1, w20, #0x3
   14560:	add	x0, x13, w0, sxtw
   14564:	add	w20, w20, #0x4
   14568:	str	w22, [x19, x2]
   1456c:	str	x0, [x19, x5, lsl #3]
   14570:	mov	w0, w1
   14574:	str	xzr, [x19, w0, uxtw #3]
   14578:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   1457c:	cmp	w0, #0x16
   14580:	b.ne	141e0 <gcc_cp_fe_context@@Base+0x9f68>  // b.any
   14584:	ldrsb	w0, [x13, #5]
   14588:	add	x2, x13, #0x8
   1458c:	ldrb	w5, [x13, #4]
   14590:	add	w0, w5, w0, lsl #8
   14594:	b	13868 <gcc_cp_fe_context@@Base+0x95f0>
   14598:	cmp	x3, x1
   1459c:	ccmp	x5, x1, #0x4, ne  // ne = any
   145a0:	b.ne	14740 <gcc_cp_fe_context@@Base+0xa4c8>  // b.any
   145a4:	mov	x21, x20
   145a8:	mov	x22, x19
   145ac:	mov	w20, w25
   145b0:	mov	x19, x23
   145b4:	mov	x25, x27
   145b8:	mov	x23, x9
   145bc:	mov	x27, x28
   145c0:	add	x13, x13, #0x2
   145c4:	mov	x28, x8
   145c8:	b	13000 <gcc_cp_fe_context@@Base+0x8d88>
   145cc:	adrp	x0, 2d000 <xexit@@Base+0x161a0>
   145d0:	add	x0, x0, #0x600
   145d4:	ldr	w12, [x29, #352]
   145d8:	mov	x7, x6
   145dc:	add	x0, x0, #0x104
   145e0:	mov	x1, #0x1                   	// #1
   145e4:	mov	w13, #0xffffffff            	// #-1
   145e8:	ldr	x11, [x29, #272]
   145ec:	ldp	x10, x14, [x29, #384]
   145f0:	b	14654 <gcc_cp_fe_context@@Base+0xa3dc>
   145f4:	ldr	x3, [x27, x1, lsl #3]
   145f8:	cmp	x3, x0
   145fc:	b.eq	14664 <gcc_cp_fe_context@@Base+0xa3ec>  // b.none
   14600:	cmp	x2, x14
   14604:	sub	x6, x2, x23
   14608:	ccmp	x2, x10, #0x0, ls  // ls = plast
   1460c:	add	w6, w12, w6
   14610:	sub	x2, x2, x10
   14614:	sub	x4, x3, x23
   14618:	csel	w6, w6, w2, cc  // cc = lo, ul, last
   1461c:	cmp	x3, x10
   14620:	ccmp	x3, x14, #0x2, cs  // cs = hs, nlast
   14624:	add	w2, w12, w4
   14628:	sub	x3, x3, x10
   1462c:	str	w6, [x5, x8]
   14630:	csel	w3, w2, w3, hi  // hi = pmore
   14634:	str	w3, [x9, x1, lsl #2]
   14638:	ldr	w4, [x11]
   1463c:	add	x1, x1, #0x1
   14640:	mov	w2, w4
   14644:	cmp	x2, x7
   14648:	csel	x2, x2, x7, ls  // ls = plast
   1464c:	cmp	x2, x1
   14650:	b.ls	13e8c <gcc_cp_fe_context@@Base+0x9c14>  // b.plast
   14654:	ldr	x2, [x25, x1, lsl #3]
   14658:	lsl	x8, x1, #2
   1465c:	cmp	x2, x0
   14660:	b.ne	145f4 <gcc_cp_fe_context@@Base+0xa37c>  // b.any
   14664:	str	w13, [x9, x1, lsl #2]
   14668:	str	w13, [x5, x8]
   1466c:	b	14638 <gcc_cp_fe_context@@Base+0xa3c0>
   14670:	ldurb	w0, [x24, #-1]
   14674:	cmp	w0, #0xa
   14678:	b.eq	13f24 <gcc_cp_fe_context@@Base+0x9cac>  // b.none
   1467c:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   14680:	ldr	x0, [x29, #256]
   14684:	mov	x1, #0x1e                  	// #30
   14688:	ldr	x21, [x29, #272]
   1468c:	add	x0, x0, #0x2
   14690:	cmp	x0, x1
   14694:	csel	x0, x0, x1, cs  // cs = hs, nlast
   14698:	str	w0, [x21]
   1469c:	mov	w20, w0
   146a0:	ubfiz	x19, x0, #2, #32
   146a4:	mov	x0, x19
   146a8:	bl	5670 <malloc@plt>
   146ac:	mov	x1, x0
   146b0:	str	x1, [x21, #8]
   146b4:	mov	x0, x19
   146b8:	mov	x19, x1
   146bc:	bl	5670 <malloc@plt>
   146c0:	str	x0, [x21, #16]
   146c4:	cmp	x19, #0x0
   146c8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   146cc:	b.eq	134f0 <gcc_cp_fe_context@@Base+0x9278>  // b.none
   146d0:	ldr	x2, [x29, #280]
   146d4:	mov	w1, #0x1                   	// #1
   146d8:	ldr	w19, [x29, #320]
   146dc:	ldrb	w0, [x2, #56]
   146e0:	bfi	w0, w1, #1, #2
   146e4:	strb	w0, [x2, #56]
   146e8:	cbz	w20, 13eb8 <gcc_cp_fe_context@@Base+0x9c40>
   146ec:	b	13db0 <gcc_cp_fe_context@@Base+0x9b38>
   146f0:	mov	x6, x13
   146f4:	sub	w0, w0, #0x1
   146f8:	strh	w0, [x6, #3]!
   146fc:	b	132c0 <gcc_cp_fe_context@@Base+0x9048>
   14700:	ldr	x0, [x29, #280]
   14704:	mov	x13, x5
   14708:	ldrb	w0, [x0, #56]
   1470c:	tbz	w0, #6, 13000 <gcc_cp_fe_context@@Base+0x8d88>
   14710:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   14714:	ldrb	w0, [x4]
   14718:	b	14004 <gcc_cp_fe_context@@Base+0x9d8c>
   1471c:	tbz	w1, #7, 130f0 <gcc_cp_fe_context@@Base+0x8e78>
   14720:	ldr	x1, [x29, #240]
   14724:	ldrb	w0, [x24]
   14728:	cbz	x1, 130ec <gcc_cp_fe_context@@Base+0x8e74>
   1472c:	and	x0, x0, #0xff
   14730:	ldrb	w0, [x1, x0]
   14734:	b	130ec <gcc_cp_fe_context@@Base+0x8e74>
   14738:	ldrb	w0, [x4]
   1473c:	b	133bc <gcc_cp_fe_context@@Base+0x9144>
   14740:	mov	x6, x5
   14744:	mov	x1, x4
   14748:	b	136f8 <gcc_cp_fe_context@@Base+0x9480>
   1474c:	mov	x2, x28
   14750:	mov	x1, x23
   14754:	add	x0, x29, #0x198
   14758:	stp	x4, x13, [x29, #168]
   1475c:	str	x3, [x29, #232]
   14760:	str	w10, [x29, #368]
   14764:	bl	12930 <gcc_cp_fe_context@@Base+0x86b8>
   14768:	ldp	x4, x13, [x29, #168]
   1476c:	ldr	w10, [x29, #368]
   14770:	ldr	x3, [x29, #232]
   14774:	ldrb	w1, [x13, #1]
   14778:	lsl	x1, x1, #3
   1477c:	ldrb	w2, [x28, x1]
   14780:	bfxil	w2, w0, #0, #2
   14784:	strb	w2, [x28, x1]
   14788:	ldrb	w0, [x13, #1]
   1478c:	lsl	x0, x0, #3
   14790:	add	x2, x28, x0
   14794:	ldrb	w1, [x28, x0]
   14798:	and	w1, w1, #0x3
   1479c:	b	13534 <gcc_cp_fe_context@@Base+0x92bc>
   147a0:	mov	w6, w10
   147a4:	b	14328 <gcc_cp_fe_context@@Base+0xa0b0>
   147a8:	ldrb	w0, [x4]
   147ac:	b	140c4 <gcc_cp_fe_context@@Base+0x9e4c>
   147b0:	ldrb	w0, [x4]
   147b4:	b	14098 <gcc_cp_fe_context@@Base+0x9e20>
   147b8:	ldurb	w0, [x1, #-1]
   147bc:	b	13390 <gcc_cp_fe_context@@Base+0x9118>
   147c0:	ldrb	w0, [x4]
   147c4:	b	131d0 <gcc_cp_fe_context@@Base+0x8f58>
   147c8:	ldr	x0, [x29, #392]
   147cc:	ldurb	w0, [x0, #-1]
   147d0:	b	133bc <gcc_cp_fe_context@@Base+0x9144>
   147d4:	ldurb	w0, [x1, #-1]
   147d8:	b	13f90 <gcc_cp_fe_context@@Base+0x9d18>
   147dc:	ldrb	w0, [x4]
   147e0:	b	13158 <gcc_cp_fe_context@@Base+0x8ee0>
   147e4:	cmp	w0, #0x5
   147e8:	cset	w2, ne  // ne = any
   147ec:	b	13330 <gcc_cp_fe_context@@Base+0x90b8>
   147f0:	ldrb	w0, [x4]
   147f4:	b	13fc8 <gcc_cp_fe_context@@Base+0x9d50>
   147f8:	mov	w6, w10
   147fc:	b	14504 <gcc_cp_fe_context@@Base+0xa28c>
   14800:	mov	w20, w1
   14804:	str	wzr, [x29, #368]
   14808:	b	132c0 <gcc_cp_fe_context@@Base+0x9048>
   1480c:	mov	w0, #0x1                   	// #1
   14810:	str	w0, [x29, #336]
   14814:	str	x24, [x29, #344]
   14818:	b	13bcc <gcc_cp_fe_context@@Base+0x9954>
   1481c:	ldr	x0, [x29, #392]
   14820:	ldurb	w0, [x0, #-1]
   14824:	b	140c4 <gcc_cp_fe_context@@Base+0x9e4c>
   14828:	sxtw	x21, w2
   1482c:	b	13774 <gcc_cp_fe_context@@Base+0x94fc>
   14830:	ldurb	w0, [x1, #-1]
   14834:	b	14098 <gcc_cp_fe_context@@Base+0x9e20>
   14838:	ldr	x0, [x29, #392]
   1483c:	ldurb	w0, [x0, #-1]
   14840:	b	13158 <gcc_cp_fe_context@@Base+0x8ee0>
   14844:	ldr	x0, [x29, #392]
   14848:	ldurb	w0, [x0, #-1]
   1484c:	b	131d0 <gcc_cp_fe_context@@Base+0x8f58>
   14850:	ldrb	w1, [x7, #3]
   14854:	cmp	w1, #0x2
   14858:	b.eq	14990 <gcc_cp_fe_context@@Base+0xa718>  // b.none
   1485c:	cmp	w1, #0x5
   14860:	b.eq	149bc <gcc_cp_fe_context@@Base+0xa744>  // b.none
   14864:	cmp	w1, #0x4
   14868:	b.ne	13ba0 <gcc_cp_fe_context@@Base+0x9928>  // b.any
   1486c:	ldrb	w8, [x0, #1]
   14870:	cbz	w8, 144c8 <gcc_cp_fe_context@@Base+0xa250>
   14874:	ldrb	w9, [x7, #4]
   14878:	add	x0, x7, #0x5
   1487c:	mov	x1, #0x0                   	// #0
   14880:	and	x11, x9, #0xff
   14884:	b	148ac <gcc_cp_fe_context@@Base+0xa634>
   14888:	ldrb	w7, [x0, x1]
   1488c:	ldrb	w12, [x2, x1]
   14890:	and	w7, w7, w12
   14894:	tst	w7, #0xff
   14898:	b.ne	13ba0 <gcc_cp_fe_context@@Base+0x9928>  // b.any
   1489c:	add	x1, x1, #0x1
   148a0:	add	w5, w5, #0x1
   148a4:	cmp	w8, w1
   148a8:	b.le	14a28 <gcc_cp_fe_context@@Base+0xa7b0>
   148ac:	cmp	x11, x1
   148b0:	mov	w5, w1
   148b4:	b.ne	14888 <gcc_cp_fe_context@@Base+0xa610>  // b.any
   148b8:	b	14a30 <gcc_cp_fe_context@@Base+0xa7b8>
   148bc:	ldrb	w0, [x4]
   148c0:	b	14044 <gcc_cp_fe_context@@Base+0x9dcc>
   148c4:	ldurb	w0, [x1, #-1]
   148c8:	b	14044 <gcc_cp_fe_context@@Base+0x9dcc>
   148cc:	cmp	x21, x22
   148d0:	b.hi	131e8 <gcc_cp_fe_context@@Base+0x8f70>  // b.pmore
   148d4:	add	x2, x28, x21, lsl #3
   148d8:	mov	x1, x21
   148dc:	ldrb	w0, [x2]
   148e0:	add	x1, x1, #0x1
   148e4:	cmp	x22, x1
   148e8:	orr	w0, w0, #0x18
   148ec:	strb	w0, [x2], #8
   148f0:	b.cs	148dc <gcc_cp_fe_context@@Base+0xa664>  // b.hs, b.nlast
   148f4:	b	131e8 <gcc_cp_fe_context@@Base+0x8f70>
   148f8:	mov	w5, w10
   148fc:	b	13aa0 <gcc_cp_fe_context@@Base+0x9828>
   14900:	ldr	w2, [x29, #336]
   14904:	eor	w1, w1, #0x1
   14908:	mov	x22, x3
   1490c:	mov	x23, x4
   14910:	tst	w2, w1
   14914:	b.eq	13d20 <gcc_cp_fe_context@@Base+0x9aa8>  // b.none
   14918:	ldr	x24, [x29, #344]
   1491c:	b	13cdc <gcc_cp_fe_context@@Base+0x9a64>
   14920:	ldr	x0, [x29, #392]
   14924:	ldurb	w0, [x0, #-1]
   14928:	b	13fc8 <gcc_cp_fe_context@@Base+0x9d50>
   1492c:	cmp	x21, x22
   14930:	b.hi	1333c <gcc_cp_fe_context@@Base+0x90c4>  // b.pmore
   14934:	add	x2, x28, x21, lsl #3
   14938:	mov	x1, x21
   1493c:	ldrb	w0, [x2]
   14940:	add	x1, x1, #0x1
   14944:	cmp	x22, x1
   14948:	orr	w0, w0, #0x18
   1494c:	strb	w0, [x2], #8
   14950:	b.cs	1493c <gcc_cp_fe_context@@Base+0xa6c4>  // b.hs, b.nlast
   14954:	b	1333c <gcc_cp_fe_context@@Base+0x90c4>
   14958:	ldrb	w0, [x7, #5]
   1495c:	cmp	w0, w1
   14960:	b.ne	144c8 <gcc_cp_fe_context@@Base+0xa250>  // b.any
   14964:	b	13ba0 <gcc_cp_fe_context@@Base+0x9928>
   14968:	mov	w0, #0xffffffff            	// #-1
   1496c:	b	134f4 <gcc_cp_fe_context@@Base+0x927c>
   14970:	mov	w0, #0x1                   	// #1
   14974:	b	1443c <gcc_cp_fe_context@@Base+0xa1c4>
   14978:	cmp	w0, #0xa
   1497c:	b.eq	13bc8 <gcc_cp_fe_context@@Base+0x9950>  // b.none
   14980:	tbnz	w1, #7, 130ec <gcc_cp_fe_context@@Base+0x8e74>
   14984:	b	130f0 <gcc_cp_fe_context@@Base+0x8e78>
   14988:	mov	w1, #0xa                   	// #10
   1498c:	b	14474 <gcc_cp_fe_context@@Base+0xa1fc>
   14990:	ldrb	w1, [x7, #5]
   14994:	ldrb	w2, [x0, #1]
   14998:	cmp	w1, w2, lsl #3
   1499c:	b.ge	144c8 <gcc_cp_fe_context@@Base+0xa250>  // b.tcont
   149a0:	lsr	w2, w1, #3
   149a4:	and	w1, w1, #0x7
   149a8:	add	w2, w2, #0x2
   149ac:	ldrb	w0, [x0, w2, sxtw]
   149b0:	asr	w1, w0, w1
   149b4:	tbnz	w1, #0, 13ba0 <gcc_cp_fe_context@@Base+0x9928>
   149b8:	b	144c8 <gcc_cp_fe_context@@Base+0xa250>
   149bc:	ldrb	w5, [x0, #1]
   149c0:	cbz	w5, 144c8 <gcc_cp_fe_context@@Base+0xa250>
   149c4:	sub	w2, w5, #0x1
   149c8:	add	x0, x0, #0x1
   149cc:	add	x2, x2, #0x2
   149d0:	add	x9, x7, #0x4
   149d4:	mov	x1, #0x1                   	// #1
   149d8:	ldrb	w8, [x0, x1]
   149dc:	cbz	w8, 149fc <gcc_cp_fe_context@@Base+0xa784>
   149e0:	ldrb	w12, [x7, #4]
   149e4:	sub	w11, w1, #0x1
   149e8:	cmp	w12, w11
   149ec:	b.le	13ba0 <gcc_cp_fe_context@@Base+0x9928>
   149f0:	ldrb	w11, [x9, x1]
   149f4:	bics	wzr, w8, w11
   149f8:	b.ne	13ba0 <gcc_cp_fe_context@@Base+0x9928>  // b.any
   149fc:	mov	w8, w1
   14a00:	add	x1, x1, #0x1
   14a04:	cmp	x2, x1
   14a08:	b.ne	149d8 <gcc_cp_fe_context@@Base+0xa760>  // b.any
   14a0c:	cmp	w8, w5
   14a10:	b.eq	144c8 <gcc_cp_fe_context@@Base+0xa250>  // b.none
   14a14:	b	13ba0 <gcc_cp_fe_context@@Base+0x9928>
   14a18:	mov	w2, #0x1                   	// #1
   14a1c:	mov	x22, #0x100                 	// #256
   14a20:	mov	x21, #0x101                 	// #257
   14a24:	b	13810 <gcc_cp_fe_context@@Base+0x9598>
   14a28:	cmp	w8, w5
   14a2c:	b.eq	144c8 <gcc_cp_fe_context@@Base+0xa250>  // b.none
   14a30:	cmp	w5, w9
   14a34:	b.eq	144c8 <gcc_cp_fe_context@@Base+0xa250>  // b.none
   14a38:	b	13ba0 <gcc_cp_fe_context@@Base+0x9928>
   14a3c:	mov	w8, w23
   14a40:	mov	w6, w24
   14a44:	mov	x7, x25
   14a48:	mov	x3, x26
   14a4c:	mov	x24, x27
   14a50:	mov	x26, x28
   14a54:	ldp	x23, x28, [x29, #144]
   14a58:	mov	w9, w19
   14a5c:	ldp	x27, x25, [x29, #160]
   14a60:	mov	x19, x0
   14a64:	ldr	x22, [x29, #176]
   14a68:	mov	w10, w9
   14a6c:	ldr	x21, [x29, #368]
   14a70:	cmp	x21, x22
   14a74:	b.hi	14ac0 <gcc_cp_fe_context@@Base+0xa848>  // b.pmore
   14a78:	mov	w1, w20
   14a7c:	mov	x0, x21
   14a80:	add	w5, w1, #0x1
   14a84:	add	w2, w1, #0x2
   14a88:	ldr	x9, [x25, x0, lsl #3]
   14a8c:	str	x9, [x19, w1, uxtw #3]
   14a90:	ldr	x9, [x27, x0, lsl #3]
   14a94:	str	x9, [x19, x5, lsl #3]
   14a98:	ldr	x5, [x28, x0, lsl #3]
   14a9c:	str	x5, [x19, x2, lsl #3]
   14aa0:	cmp	x22, x0
   14aa4:	add	w1, w1, #0x3
   14aa8:	add	x0, x0, #0x1
   14aac:	b.ne	14a80 <gcc_cp_fe_context@@Base+0xa808>  // b.any
   14ab0:	sub	x0, x22, x21
   14ab4:	add	w20, w20, #0x3
   14ab8:	add	w0, w0, w0, lsl #1
   14abc:	add	w20, w0, w20
   14ac0:	add	w2, w20, #0x1
   14ac4:	ubfiz	x1, x20, #3, #32
   14ac8:	sbfiz	w0, w6, #8, #8
   14acc:	add	w5, w20, #0x2
   14ad0:	lsl	x2, x2, #3
   14ad4:	add	w0, w0, w8
   14ad8:	str	w21, [x19, x1]
   14adc:	add	w1, w20, #0x3
   14ae0:	add	x0, x7, w0, sxtw
   14ae4:	add	w20, w20, #0x4
   14ae8:	str	w22, [x19, x2]
   14aec:	str	x0, [x19, x5, lsl #3]
   14af0:	mov	w0, w1
   14af4:	str	x24, [x19, w0, uxtw #3]
   14af8:	b	13bc8 <gcc_cp_fe_context@@Base+0x9950>
   14afc:	and	w1, w1, #0xffffffef
   14b00:	strb	w1, [x28, x0]
   14b04:	ldrb	w5, [x13, #1]
   14b08:	ldrb	w0, [x13, #2]
   14b0c:	add	w7, w5, w0
   14b10:	str	w7, [x29, #144]
   14b14:	cmp	w5, w7
   14b18:	b.cs	138a8 <gcc_cp_fe_context@@Base+0x9630>  // b.hs, b.nlast
   14b1c:	sub	w2, w0, #0x1
   14b20:	ubfiz	x0, x5, #3, #8
   14b24:	ldr	x1, [x29, #288]
   14b28:	add	x2, x2, #0x1
   14b2c:	stp	x4, x3, [x29, #152]
   14b30:	add	x1, x1, x0
   14b34:	lsl	x2, x2, #3
   14b38:	add	x0, x25, x0
   14b3c:	str	w10, [x29, #168]
   14b40:	str	x6, [x29, #176]
   14b44:	str	w5, [x29, #368]
   14b48:	bl	5210 <memcpy@plt>
   14b4c:	ldr	w5, [x29, #368]
   14b50:	ldp	x4, x3, [x29, #152]
   14b54:	and	x0, x5, #0xff
   14b58:	ldr	w7, [x29, #144]
   14b5c:	ldr	w10, [x29, #168]
   14b60:	ldr	x6, [x29, #176]
   14b64:	ldr	x5, [x29, #288]
   14b68:	ldr	x1, [x29, #264]
   14b6c:	ldr	x2, [x5, x0, lsl #3]
   14b70:	ldr	x1, [x1, x0, lsl #3]
   14b74:	cmp	x2, x1
   14b78:	b.hi	14b80 <gcc_cp_fe_context@@Base+0xa908>  // b.pmore
   14b7c:	str	x1, [x27, x0, lsl #3]
   14b80:	add	x0, x0, #0x1
   14b84:	cmp	w7, w0
   14b88:	b.hi	14b68 <gcc_cp_fe_context@@Base+0xa8f0>  // b.pmore
   14b8c:	b	138a8 <gcc_cp_fe_context@@Base+0x9630>

0000000000014b90 <xre_set_syntax@@Base>:
   14b90:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
   14b94:	mov	x2, x0
   14b98:	ldr	x1, [x1, #3800]
   14b9c:	ldr	x0, [x1]
   14ba0:	str	x2, [x1]
   14ba4:	ret

0000000000014ba8 <xre_compile_fastmap@@Base>:
   14ba8:	b	f690 <gcc_cp_fe_context@@Base+0x5418>
   14bac:	nop

0000000000014bb0 <xre_set_registers@@Base>:
   14bb0:	cbz	w2, 14bd0 <xre_set_registers@@Base+0x20>
   14bb4:	ldrb	w5, [x0, #56]
   14bb8:	mov	w6, #0x1                   	// #1
   14bbc:	bfi	w5, w6, #1, #2
   14bc0:	strb	w5, [x0, #56]
   14bc4:	str	w2, [x1]
   14bc8:	stp	x3, x4, [x1, #8]
   14bcc:	ret
   14bd0:	ldrb	w2, [x0, #56]
   14bd4:	and	w2, w2, #0xfffffff9
   14bd8:	strb	w2, [x0, #56]
   14bdc:	str	wzr, [x1]
   14be0:	stp	xzr, xzr, [x1, #8]
   14be4:	ret

0000000000014be8 <xre_search_2@@Base>:
   14be8:	stp	x29, x30, [sp, #-128]!
   14bec:	cmp	w5, #0x0
   14bf0:	mov	x29, sp
   14bf4:	stp	x21, x22, [sp, #32]
   14bf8:	mov	x22, x0
   14bfc:	add	w0, w5, w6
   14c00:	stp	x19, x20, [sp, #16]
   14c04:	mov	w20, w6
   14c08:	stp	x23, x24, [sp, #48]
   14c0c:	add	w23, w2, w4
   14c10:	ccmp	w5, w23, #0x0, ge  // ge = tcont
   14c14:	stp	x25, x26, [sp, #64]
   14c18:	stp	x27, x28, [sp, #80]
   14c1c:	ldp	x25, x28, [x22, #32]
   14c20:	b.gt	14d2c <xre_search_2@@Base+0x144>
   14c24:	mov	w21, w2
   14c28:	mov	w24, w4
   14c2c:	mov	w19, w5
   14c30:	mov	x26, x1
   14c34:	mov	x27, x3
   14c38:	mov	x6, x7
   14c3c:	tbnz	w0, #31, 14e8c <xre_search_2@@Base+0x2a4>
   14c40:	ldr	x1, [x22, #16]
   14c44:	cmp	w23, w0
   14c48:	sub	w0, w23, w5
   14c4c:	csel	w20, w0, w20, lt  // lt = tstop
   14c50:	cbz	x1, 14c88 <xre_search_2@@Base+0xa0>
   14c54:	cmp	w20, #0x0
   14c58:	b.le	14c88 <xre_search_2@@Base+0xa0>
   14c5c:	ldr	x0, [x22]
   14c60:	ldrb	w0, [x0]
   14c64:	cmp	w0, #0xb
   14c68:	b.eq	14c7c <xre_search_2@@Base+0x94>  // b.none
   14c6c:	cmp	w0, #0x9
   14c70:	b.ne	14c88 <xre_search_2@@Base+0xa0>  // b.any
   14c74:	ldrsb	w0, [x22, #56]
   14c78:	tbnz	w0, #31, 14c88 <xre_search_2@@Base+0xa0>
   14c7c:	cbnz	w19, 14d2c <xre_search_2@@Base+0x144>
   14c80:	mov	w20, #0x1                   	// #1
   14c84:	nop
   14c88:	cbz	x25, 14c94 <xre_search_2@@Base+0xac>
   14c8c:	ldrb	w0, [x22, #56]
   14c90:	tbz	w0, #3, 14e54 <xre_search_2@@Base+0x26c>
   14c94:	cmp	x25, #0x0
   14c98:	sxtw	x0, w21
   14c9c:	cset	w8, ne  // ne = any
   14ca0:	str	x0, [sp, #120]
   14ca4:	nop
   14ca8:	cmp	w8, #0x0
   14cac:	ccmp	w23, w19, #0x4, ne  // ne = any
   14cb0:	b.le	14e1c <xre_search_2@@Base+0x234>
   14cb4:	ldrb	w0, [x22, #56]
   14cb8:	tbnz	w0, #0, 14dc0 <xre_search_2@@Base+0x1d8>
   14cbc:	cmp	w20, #0x0
   14cc0:	b.le	14d98 <xre_search_2@@Base+0x1b0>
   14cc4:	cmp	w21, w19
   14cc8:	sxtw	x5, w19
   14ccc:	b.le	14d4c <xre_search_2@@Base+0x164>
   14cd0:	add	w0, w19, w20
   14cd4:	add	x5, x26, x5
   14cd8:	cmp	w21, w0
   14cdc:	b.gt	14d58 <xre_search_2@@Base+0x170>
   14ce0:	sub	w0, w21, w19
   14ce4:	sub	w0, w20, w0
   14ce8:	cmp	w20, w0
   14cec:	cbz	x28, 14eb4 <xre_search_2@@Base+0x2cc>
   14cf0:	b.le	14dc0 <xre_search_2@@Base+0x1d8>
   14cf4:	mov	w2, w20
   14cf8:	b	14d08 <xre_search_2@@Base+0x120>
   14cfc:	sub	w2, w2, #0x1
   14d00:	cmp	w2, w0
   14d04:	b.le	14d18 <xre_search_2@@Base+0x130>
   14d08:	ldrb	w1, [x5], #1
   14d0c:	ldrb	w1, [x28, x1]
   14d10:	ldrb	w1, [x25, x1]
   14d14:	cbz	w1, 14cfc <xre_search_2@@Base+0x114>
   14d18:	sub	w20, w20, w2
   14d1c:	cmp	w2, #0x0
   14d20:	add	w19, w19, w20
   14d24:	ccmp	w23, w19, #0x0, ge  // ge = tcont
   14d28:	b.ne	14ebc <xre_search_2@@Base+0x2d4>  // b.any
   14d2c:	mov	w0, #0xffffffff            	// #-1
   14d30:	ldp	x19, x20, [sp, #16]
   14d34:	ldp	x21, x22, [sp, #32]
   14d38:	ldp	x23, x24, [sp, #48]
   14d3c:	ldp	x25, x26, [sp, #64]
   14d40:	ldp	x27, x28, [sp, #80]
   14d44:	ldp	x29, x30, [sp], #128
   14d48:	ret
   14d4c:	ldr	x0, [sp, #120]
   14d50:	sub	x5, x5, x0
   14d54:	add	x5, x27, x5
   14d58:	mov	w0, #0x0                   	// #0
   14d5c:	cbnz	x28, 14cf4 <xre_search_2@@Base+0x10c>
   14d60:	mov	w2, w20
   14d64:	b	14d74 <xre_search_2@@Base+0x18c>
   14d68:	sub	w2, w2, #0x1
   14d6c:	cmp	w2, w0
   14d70:	b.eq	14d18 <xre_search_2@@Base+0x130>  // b.none
   14d74:	ldrb	w1, [x5], #1
   14d78:	ldrb	w1, [x25, x1]
   14d7c:	cbz	w1, 14d68 <xre_search_2@@Base+0x180>
   14d80:	sub	w20, w20, w2
   14d84:	cmp	w2, #0x0
   14d88:	add	w19, w19, w20
   14d8c:	ccmp	w23, w19, #0x0, ge  // ge = tcont
   14d90:	b.ne	14ebc <xre_search_2@@Base+0x2d4>  // b.any
   14d94:	b	14d2c <xre_search_2@@Base+0x144>
   14d98:	cmp	w21, #0x0
   14d9c:	ccmp	w21, w19, #0x4, ne  // ne = any
   14da0:	b.gt	14e4c <xre_search_2@@Base+0x264>
   14da4:	sub	w0, w19, w21
   14da8:	ldrb	w0, [x27, w0, sxtw]
   14dac:	and	x0, x0, #0xff
   14db0:	cbz	x28, 14db8 <xre_search_2@@Base+0x1d0>
   14db4:	ldrb	w0, [x28, x0]
   14db8:	ldrb	w0, [x25, x0]
   14dbc:	cbz	w0, 14e38 <xre_search_2@@Base+0x250>
   14dc0:	ldr	w7, [sp, #128]
   14dc4:	mov	w5, w19
   14dc8:	mov	w4, w24
   14dcc:	mov	x3, x27
   14dd0:	mov	w2, w21
   14dd4:	mov	x1, x26
   14dd8:	mov	x0, x22
   14ddc:	str	x6, [sp, #104]
   14de0:	str	w8, [sp, #116]
   14de4:	bl	12dd8 <gcc_cp_fe_context@@Base+0x8b60>
   14de8:	tbz	w0, #31, 14e94 <xre_search_2@@Base+0x2ac>
   14dec:	cmn	w0, #0x2
   14df0:	b.eq	14e6c <xre_search_2@@Base+0x284>  // b.none
   14df4:	cmp	w20, #0x0
   14df8:	cbz	w20, 14d2c <xre_search_2@@Base+0x144>
   14dfc:	ldr	w8, [sp, #116]
   14e00:	ldr	x6, [sp, #104]
   14e04:	b.le	14e40 <xre_search_2@@Base+0x258>
   14e08:	add	w19, w19, #0x1
   14e0c:	cmp	w8, #0x0
   14e10:	sub	w20, w20, #0x1
   14e14:	ccmp	w23, w19, #0x4, ne  // ne = any
   14e18:	b.gt	14cb4 <xre_search_2@@Base+0xcc>
   14e1c:	cmp	w20, #0x0
   14e20:	ccmp	w23, w19, #0x0, ge  // ge = tcont
   14e24:	ccmp	w8, #0x0, #0x4, eq  // eq = none
   14e28:	b.eq	14dc0 <xre_search_2@@Base+0x1d8>  // b.none
   14e2c:	ldrb	w0, [x22, #56]
   14e30:	tbnz	w0, #0, 14dc0 <xre_search_2@@Base+0x1d8>
   14e34:	b	14d2c <xre_search_2@@Base+0x144>
   14e38:	cbz	w20, 14d2c <xre_search_2@@Base+0x144>
   14e3c:	nop
   14e40:	add	w20, w20, #0x1
   14e44:	sub	w19, w19, #0x1
   14e48:	b	14ca8 <xre_search_2@@Base+0xc0>
   14e4c:	ldrb	w0, [x26, w19, sxtw]
   14e50:	b	14dac <xre_search_2@@Base+0x1c4>
   14e54:	mov	x0, x22
   14e58:	str	x6, [sp, #104]
   14e5c:	bl	52a0 <xre_compile_fastmap@plt>
   14e60:	cmn	w0, #0x2
   14e64:	ldr	x6, [sp, #104]
   14e68:	b.ne	14c94 <xre_search_2@@Base+0xac>  // b.any
   14e6c:	mov	w0, #0xfffffffe            	// #-2
   14e70:	ldp	x19, x20, [sp, #16]
   14e74:	ldp	x21, x22, [sp, #32]
   14e78:	ldp	x23, x24, [sp, #48]
   14e7c:	ldp	x25, x26, [sp, #64]
   14e80:	ldp	x27, x28, [sp, #80]
   14e84:	ldp	x29, x30, [sp], #128
   14e88:	ret
   14e8c:	neg	w20, w5
   14e90:	b	14c88 <xre_search_2@@Base+0xa0>
   14e94:	mov	w0, w19
   14e98:	ldp	x19, x20, [sp, #16]
   14e9c:	ldp	x21, x22, [sp, #32]
   14ea0:	ldp	x23, x24, [sp, #48]
   14ea4:	ldp	x25, x26, [sp, #64]
   14ea8:	ldp	x27, x28, [sp, #80]
   14eac:	ldp	x29, x30, [sp], #128
   14eb0:	ret
   14eb4:	b.gt	14d60 <xre_search_2@@Base+0x178>
   14eb8:	b	14dc0 <xre_search_2@@Base+0x1d8>
   14ebc:	mov	w20, w2
   14ec0:	b	14dc0 <xre_search_2@@Base+0x1d8>
   14ec4:	nop

0000000000014ec8 <xre_search@@Base>:
   14ec8:	sub	sp, sp, #0x20
   14ecc:	mov	w8, w3
   14ed0:	mov	w6, w4
   14ed4:	mov	x3, x1
   14ed8:	mov	w4, w2
   14edc:	mov	x7, x5
   14ee0:	stp	x29, x30, [sp, #16]
   14ee4:	add	x29, sp, #0x10
   14ee8:	mov	w5, w8
   14eec:	mov	x1, #0x0                   	// #0
   14ef0:	str	w2, [sp]
   14ef4:	mov	w2, #0x0                   	// #0
   14ef8:	bl	5760 <xre_search_2@plt>
   14efc:	ldp	x29, x30, [sp, #16]
   14f00:	add	sp, sp, #0x20
   14f04:	ret

0000000000014f08 <xre_match@@Base>:
   14f08:	mov	w7, w2
   14f0c:	mov	w5, w3
   14f10:	mov	x6, x4
   14f14:	mov	x3, x1
   14f18:	mov	w4, w2
   14f1c:	mov	x1, #0x0                   	// #0
   14f20:	mov	w2, #0x0                   	// #0
   14f24:	b	12dd8 <gcc_cp_fe_context@@Base+0x8b60>

0000000000014f28 <xre_match_2@@Base>:
   14f28:	b	12dd8 <gcc_cp_fe_context@@Base+0x8b60>
   14f2c:	nop

0000000000014f30 <xre_compile_pattern@@Base>:
   14f30:	stp	x29, x30, [sp, #-16]!
   14f34:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
   14f38:	mov	w6, #0x69                  	// #105
   14f3c:	mov	x29, sp
   14f40:	ldr	x5, [x5, #3800]
   14f44:	mov	x3, x2
   14f48:	ldrb	w4, [x2, #56]
   14f4c:	and	w4, w4, w6
   14f50:	orr	w4, w4, #0xffffff80
   14f54:	strb	w4, [x2, #56]
   14f58:	ldr	x2, [x5]
   14f5c:	bl	fa60 <gcc_cp_fe_context@@Base+0x57e8>
   14f60:	cbz	w0, 14f78 <xre_compile_pattern@@Base+0x48>
   14f64:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
   14f68:	add	x1, x1, #0x900
   14f6c:	ldp	x29, x30, [sp], #16
   14f70:	ldr	x0, [x1, w0, sxtw #3]
   14f74:	ret
   14f78:	mov	x0, #0x0                   	// #0
   14f7c:	ldp	x29, x30, [sp], #16
   14f80:	ret
   14f84:	nop

0000000000014f88 <xre_comp@@Base>:
   14f88:	stp	x29, x30, [sp, #-48]!
   14f8c:	mov	x29, sp
   14f90:	stp	x19, x20, [sp, #16]
   14f94:	adrp	x19, 2d000 <xexit@@Base+0x161a0>
   14f98:	mov	x20, x0
   14f9c:	stp	x21, x22, [sp, #32]
   14fa0:	add	x21, x19, #0x600
   14fa4:	ldr	x0, [x21, #264]
   14fa8:	cbz	x20, 15040 <xre_comp@@Base+0xb8>
   14fac:	cbz	x0, 15008 <xre_comp@@Base+0x80>
   14fb0:	add	x19, x19, #0x600
   14fb4:	mov	x0, x20
   14fb8:	add	x19, x19, #0x108
   14fbc:	ldrb	w1, [x19, #56]
   14fc0:	orr	w1, w1, #0xffffff80
   14fc4:	strb	w1, [x19, #56]
   14fc8:	bl	52c0 <strlen@plt>
   14fcc:	mov	x1, x0
   14fd0:	adrp	x2, 2c000 <xexit@@Base+0x151a0>
   14fd4:	mov	x3, x19
   14fd8:	mov	x0, x20
   14fdc:	ldr	x2, [x2, #3800]
   14fe0:	ldr	x2, [x2]
   14fe4:	bl	fa60 <gcc_cp_fe_context@@Base+0x57e8>
   14fe8:	cbz	w0, 1505c <xre_comp@@Base+0xd4>
   14fec:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
   14ff0:	add	x1, x1, #0x900
   14ff4:	ldr	x0, [x1, w0, sxtw #3]
   14ff8:	ldp	x19, x20, [sp, #16]
   14ffc:	ldp	x21, x22, [sp, #32]
   15000:	ldp	x29, x30, [sp], #48
   15004:	ret
   15008:	mov	x0, #0xc8                  	// #200
   1500c:	bl	5670 <malloc@plt>
   15010:	str	x0, [x21, #264]
   15014:	cbz	x0, 15034 <xre_comp@@Base+0xac>
   15018:	add	x22, x21, #0x108
   1501c:	mov	x1, #0xc8                  	// #200
   15020:	mov	x0, #0x100                 	// #256
   15024:	str	x1, [x22, #8]
   15028:	bl	5670 <malloc@plt>
   1502c:	str	x0, [x22, #32]
   15030:	cbnz	x0, 14fb0 <xre_comp@@Base+0x28>
   15034:	adrp	x0, 17000 <xexit@@Base+0x1a0>
   15038:	add	x0, x0, #0xa70
   1503c:	b	14ff8 <xre_comp@@Base+0x70>
   15040:	cbnz	x0, 1505c <xre_comp@@Base+0xd4>
   15044:	adrp	x0, 17000 <xexit@@Base+0x1a0>
   15048:	add	x0, x0, #0xa88
   1504c:	ldp	x19, x20, [sp, #16]
   15050:	ldp	x21, x22, [sp, #32]
   15054:	ldp	x29, x30, [sp], #48
   15058:	ret
   1505c:	mov	x0, #0x0                   	// #0
   15060:	ldp	x19, x20, [sp, #16]
   15064:	ldp	x21, x22, [sp, #32]
   15068:	ldp	x29, x30, [sp], #48
   1506c:	ret

0000000000015070 <xre_exec@@Base>:
   15070:	stp	x29, x30, [sp, #-32]!
   15074:	mov	x29, sp
   15078:	str	x19, [sp, #16]
   1507c:	mov	x19, x0
   15080:	bl	52c0 <strlen@plt>
   15084:	mov	x2, x0
   15088:	adrp	x3, 2d000 <xexit@@Base+0x161a0>
   1508c:	add	x0, x3, #0x600
   15090:	mov	x1, x19
   15094:	mov	w4, w2
   15098:	mov	x5, #0x0                   	// #0
   1509c:	mov	w3, #0x0                   	// #0
   150a0:	add	x0, x0, #0x108
   150a4:	bl	5500 <xre_search@plt>
   150a8:	mvn	w0, w0
   150ac:	ldr	x19, [sp, #16]
   150b0:	lsr	w0, w0, #31
   150b4:	ldp	x29, x30, [sp], #32
   150b8:	ret
   150bc:	nop

00000000000150c0 <xregcomp@@Base>:
   150c0:	stp	x29, x30, [sp, #-80]!
   150c4:	mov	x29, sp
   150c8:	stp	x21, x22, [sp, #32]
   150cc:	mov	x21, x0
   150d0:	mov	w22, w2
   150d4:	ands	w0, w2, #0x1
   150d8:	mov	x2, #0x386                 	// #902
   150dc:	stp	x23, x24, [sp, #48]
   150e0:	mov	x23, #0xb3bc                	// #46012
   150e4:	movk	x2, #0x1, lsl #16
   150e8:	mov	x24, x1
   150ec:	movk	x23, #0x3, lsl #16
   150f0:	mov	x1, #0x2c6                 	// #710
   150f4:	csel	x23, x23, x2, ne  // ne = any
   150f8:	cmp	w0, #0x0
   150fc:	stp	x19, x20, [sp, #16]
   15100:	movk	x1, #0x1, lsl #16
   15104:	stp	x25, x26, [sp, #64]
   15108:	mov	x25, #0xb2fc                	// #45820
   1510c:	movk	x25, #0x3, lsl #16
   15110:	str	xzr, [x21]
   15114:	csel	x25, x25, x1, ne  // ne = any
   15118:	stp	xzr, xzr, [x21, #8]
   1511c:	mov	x0, #0x100                 	// #256
   15120:	bl	5670 <malloc@plt>
   15124:	str	x0, [x21, #32]
   15128:	tbnz	w22, #1, 151c0 <xregcomp@@Base+0x100>
   1512c:	str	xzr, [x21, #40]
   15130:	ands	w0, w22, #0x4
   15134:	ldrb	w2, [x21, #56]
   15138:	csel	x23, x23, x25, ne  // ne = any
   1513c:	cmp	w0, #0x0
   15140:	cset	w3, ne  // ne = any
   15144:	ubfx	x1, x22, #3, #1
   15148:	mov	w4, #0x6f                  	// #111
   1514c:	and	w2, w2, w4
   15150:	ubfiz	w3, w3, #7, #1
   15154:	mov	x0, x24
   15158:	orr	w1, w3, w1, lsl #4
   1515c:	orr	w1, w1, w2
   15160:	strb	w1, [x21, #56]
   15164:	bl	52c0 <strlen@plt>
   15168:	mov	x1, x0
   1516c:	mov	x3, x21
   15170:	mov	x2, x23
   15174:	mov	x0, x24
   15178:	bl	fa60 <gcc_cp_fe_context@@Base+0x57e8>
   1517c:	mov	w19, w0
   15180:	cmp	w0, #0x10
   15184:	b.eq	15234 <xregcomp@@Base+0x174>  // b.none
   15188:	cbnz	w0, 151a4 <xregcomp@@Base+0xe4>
   1518c:	ldr	x0, [x21, #32]
   15190:	cbz	x0, 151a4 <xregcomp@@Base+0xe4>
   15194:	mov	x0, x21
   15198:	bl	52a0 <xre_compile_fastmap@plt>
   1519c:	cmn	w0, #0x2
   151a0:	b.eq	15254 <xregcomp@@Base+0x194>  // b.none
   151a4:	mov	w0, w19
   151a8:	ldp	x19, x20, [sp, #16]
   151ac:	ldp	x21, x22, [sp, #32]
   151b0:	ldp	x23, x24, [sp, #48]
   151b4:	ldp	x25, x26, [sp, #64]
   151b8:	ldp	x29, x30, [sp], #80
   151bc:	ret
   151c0:	mov	x0, #0x100                 	// #256
   151c4:	bl	5670 <malloc@plt>
   151c8:	str	x0, [x21, #40]
   151cc:	mov	x20, x0
   151d0:	cbz	x0, 15264 <xregcomp@@Base+0x1a4>
   151d4:	bl	54d0 <__ctype_b_loc@plt>
   151d8:	mov	x26, x0
   151dc:	mov	x19, #0x0                   	// #0
   151e0:	ldr	x4, [x26]
   151e4:	ldrh	w4, [x4, x19, lsl #1]
   151e8:	tbz	w4, #8, 1521c <xregcomp@@Base+0x15c>
   151ec:	nop
   151f0:	bl	55a0 <__ctype_tolower_loc@plt>
   151f4:	ldr	x0, [x0]
   151f8:	ldr	w0, [x0, x19, lsl #2]
   151fc:	strb	w0, [x20, x19]
   15200:	add	x19, x19, #0x1
   15204:	cmp	x19, #0x100
   15208:	b.eq	15130 <xregcomp@@Base+0x70>  // b.none
   1520c:	ldr	x20, [x21, #40]
   15210:	ldr	x4, [x26]
   15214:	ldrh	w4, [x4, x19, lsl #1]
   15218:	tbnz	w4, #8, 151f0 <xregcomp@@Base+0x130>
   1521c:	strb	w19, [x20, x19]
   15220:	add	x19, x19, #0x1
   15224:	cmp	x19, #0x100
   15228:	b.eq	15130 <xregcomp@@Base+0x70>  // b.none
   1522c:	ldr	x20, [x21, #40]
   15230:	b	15210 <xregcomp@@Base+0x150>
   15234:	mov	w19, #0x8                   	// #8
   15238:	mov	w0, w19
   1523c:	ldp	x19, x20, [sp, #16]
   15240:	ldp	x21, x22, [sp, #32]
   15244:	ldp	x23, x24, [sp, #48]
   15248:	ldp	x25, x26, [sp, #64]
   1524c:	ldp	x29, x30, [sp], #80
   15250:	ret
   15254:	ldr	x0, [x21, #32]
   15258:	bl	5380 <free@plt>
   1525c:	str	xzr, [x21, #32]
   15260:	b	151a4 <xregcomp@@Base+0xe4>
   15264:	mov	w19, #0xc                   	// #12
   15268:	b	151a4 <xregcomp@@Base+0xe4>
   1526c:	nop

0000000000015270 <xregexec@@Base>:
   15270:	stp	x29, x30, [sp, #-160]!
   15274:	mov	x29, sp
   15278:	stp	x19, x20, [sp, #16]
   1527c:	mov	x19, x0
   15280:	mov	x20, x3
   15284:	mov	x0, x1
   15288:	stp	x21, x22, [sp, #32]
   1528c:	mov	w22, w4
   15290:	mov	x21, x2
   15294:	stp	x23, x24, [sp, #48]
   15298:	mov	x24, x1
   1529c:	bl	52c0 <strlen@plt>
   152a0:	mov	x23, x0
   152a4:	ldrb	w1, [x19, #56]
   152a8:	and	w4, w22, #0x1
   152ac:	ubfx	x22, x22, #1, #1
   152b0:	tst	x1, #0x10
   152b4:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   152b8:	b.ne	1532c <xregexec@@Base+0xbc>  // b.any
   152bc:	ldp	x0, x1, [x19, #48]
   152c0:	stp	x0, x1, [sp, #144]
   152c4:	mov	w2, w23
   152c8:	ldrb	w6, [sp, #152]
   152cc:	mov	x1, x24
   152d0:	ldp	x12, x13, [x19]
   152d4:	mov	w0, #0x2                   	// #2
   152d8:	bfi	w6, w4, #5, #1
   152dc:	mov	x5, #0x0                   	// #0
   152e0:	ldp	x10, x11, [x19, #16]
   152e4:	bfi	w6, w22, #6, #1
   152e8:	ldp	x8, x9, [x19, #32]
   152ec:	bfi	w6, w0, #1, #2
   152f0:	mov	w4, w23
   152f4:	add	x0, sp, #0x60
   152f8:	mov	w3, #0x0                   	// #0
   152fc:	stp	x12, x13, [sp, #96]
   15300:	stp	x10, x11, [sp, #112]
   15304:	stp	x8, x9, [sp, #128]
   15308:	strb	w6, [sp, #152]
   1530c:	bl	5500 <xre_search@plt>
   15310:	mov	w19, w0
   15314:	lsr	w0, w19, #31
   15318:	ldp	x19, x20, [sp, #16]
   1531c:	ldp	x21, x22, [sp, #32]
   15320:	ldp	x23, x24, [sp, #48]
   15324:	ldp	x29, x30, [sp], #160
   15328:	ret
   1532c:	ldp	x0, x1, [x19, #48]
   15330:	stp	x0, x1, [sp, #144]
   15334:	mov	w5, #0x2                   	// #2
   15338:	ldrb	w1, [sp, #152]
   1533c:	lsl	x0, x21, #3
   15340:	ldp	x2, x3, [x19]
   15344:	stp	x2, x3, [sp, #96]
   15348:	bfi	w1, w4, #5, #1
   1534c:	ldp	x2, x3, [x19, #16]
   15350:	stp	x2, x3, [sp, #112]
   15354:	bfi	w1, w22, #6, #1
   15358:	ldp	x2, x3, [x19, #32]
   1535c:	bfi	w1, w5, #1, #2
   15360:	str	w21, [sp, #72]
   15364:	add	x22, sp, #0x60
   15368:	stp	x2, x3, [sp, #128]
   1536c:	strb	w1, [sp, #152]
   15370:	bl	5670 <malloc@plt>
   15374:	str	x0, [sp, #80]
   15378:	cbz	x0, 153e8 <xregexec@@Base+0x178>
   1537c:	add	x6, x0, x21, lsl #2
   15380:	mov	x1, x24
   15384:	mov	x0, x22
   15388:	add	x5, sp, #0x48
   1538c:	mov	w4, w23
   15390:	mov	w2, w23
   15394:	mov	w3, #0x0                   	// #0
   15398:	str	x6, [sp, #88]
   1539c:	bl	5500 <xre_search@plt>
   153a0:	mov	w19, w0
   153a4:	ldr	x0, [sp, #80]
   153a8:	tbnz	w19, #31, 153e0 <xregexec@@Base+0x170>
   153ac:	ldr	x6, [sp, #88]
   153b0:	mov	w4, #0x0                   	// #0
   153b4:	mov	x1, #0x0                   	// #0
   153b8:	lsl	x2, x1, #3
   153bc:	ldr	w5, [x0, x1, lsl #2]
   153c0:	add	x3, x20, x2
   153c4:	add	w4, w4, #0x1
   153c8:	str	w5, [x20, x2]
   153cc:	cmp	x21, w4, uxtw
   153d0:	ldr	w2, [x6, x1, lsl #2]
   153d4:	mov	w1, w4
   153d8:	str	w2, [x3, #4]
   153dc:	b.hi	153b8 <xregexec@@Base+0x148>  // b.pmore
   153e0:	bl	5380 <free@plt>
   153e4:	b	15314 <xregexec@@Base+0xa4>
   153e8:	mov	w0, #0x1                   	// #1
   153ec:	b	15318 <xregexec@@Base+0xa8>

00000000000153f0 <xregerror@@Base>:
   153f0:	stp	x29, x30, [sp, #-48]!
   153f4:	cmp	w0, #0x10
   153f8:	mov	x29, sp
   153fc:	stp	x19, x20, [sp, #16]
   15400:	stp	x21, x22, [sp, #32]
   15404:	b.hi	15484 <xregerror@@Base+0x94>  // b.pmore
   15408:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
   1540c:	add	x1, x1, #0x900
   15410:	mov	x21, x2
   15414:	mov	x19, x3
   15418:	ldr	x22, [x1, w0, sxtw #3]
   1541c:	mov	x0, x22
   15420:	bl	52c0 <strlen@plt>
   15424:	add	x20, x0, #0x1
   15428:	cbz	x19, 1544c <xregerror@@Base+0x5c>
   1542c:	cmp	x20, x19
   15430:	b.ls	15460 <xregerror@@Base+0x70>  // b.plast
   15434:	sub	x19, x19, #0x1
   15438:	mov	x1, x22
   1543c:	mov	x2, x19
   15440:	mov	x0, x21
   15444:	bl	5210 <memcpy@plt>
   15448:	strb	wzr, [x21, x19]
   1544c:	mov	x0, x20
   15450:	ldp	x19, x20, [sp, #16]
   15454:	ldp	x21, x22, [sp, #32]
   15458:	ldp	x29, x30, [sp], #48
   1545c:	ret
   15460:	mov	x1, x22
   15464:	mov	x2, x20
   15468:	mov	x0, x21
   1546c:	bl	5210 <memcpy@plt>
   15470:	mov	x0, x20
   15474:	ldp	x19, x20, [sp, #16]
   15478:	ldp	x21, x22, [sp, #32]
   1547c:	ldp	x29, x30, [sp], #48
   15480:	ret
   15484:	bl	56a0 <abort@plt>

0000000000015488 <xregfree@@Base>:
   15488:	stp	x29, x30, [sp, #-32]!
   1548c:	mov	x29, sp
   15490:	str	x19, [sp, #16]
   15494:	mov	x19, x0
   15498:	ldr	x0, [x0]
   1549c:	bl	5380 <free@plt>
   154a0:	str	xzr, [x19]
   154a4:	ldr	x0, [x19, #32]
   154a8:	stp	xzr, xzr, [x19, #8]
   154ac:	bl	5380 <free@plt>
   154b0:	str	xzr, [x19, #32]
   154b4:	ldrb	w1, [x19, #56]
   154b8:	ldr	x0, [x19, #40]
   154bc:	and	w1, w1, #0xfffffff7
   154c0:	strb	w1, [x19, #56]
   154c4:	bl	5380 <free@plt>
   154c8:	str	xzr, [x19, #40]
   154cc:	ldr	x19, [sp, #16]
   154d0:	ldp	x29, x30, [sp], #32
   154d4:	ret

00000000000154d8 <concat_length@@Base>:
   154d8:	stp	x29, x30, [sp, #-272]!
   154dc:	mov	w8, #0xffffffc8            	// #-56
   154e0:	mov	w9, #0xffffff80            	// #-128
   154e4:	mov	x29, sp
   154e8:	add	x10, sp, #0xd0
   154ec:	stp	x19, x20, [sp, #16]
   154f0:	add	x20, sp, #0x110
   154f4:	stp	x21, x22, [sp, #32]
   154f8:	stp	x20, x20, [sp, #48]
   154fc:	str	x10, [sp, #64]
   15500:	stp	w8, w9, [sp, #72]
   15504:	str	q0, [sp, #80]
   15508:	str	q1, [sp, #96]
   1550c:	str	q2, [sp, #112]
   15510:	str	q3, [sp, #128]
   15514:	str	q4, [sp, #144]
   15518:	str	q5, [sp, #160]
   1551c:	str	q6, [sp, #176]
   15520:	str	q7, [sp, #192]
   15524:	stp	x1, x2, [sp, #216]
   15528:	stp	x3, x4, [sp, #232]
   1552c:	stp	x5, x6, [sp, #248]
   15530:	str	x7, [sp, #264]
   15534:	cbz	x0, 15594 <concat_length@@Base+0xbc>
   15538:	mov	w19, w8
   1553c:	mov	x22, x20
   15540:	mov	x21, #0x0                   	// #0
   15544:	b	15558 <concat_length@@Base+0x80>
   15548:	mov	x0, x20
   1554c:	add	x20, x20, #0x8
   15550:	ldr	x0, [x0]
   15554:	cbz	x0, 15580 <concat_length@@Base+0xa8>
   15558:	bl	52c0 <strlen@plt>
   1555c:	add	x21, x21, x0
   15560:	add	w1, w19, #0x8
   15564:	tbz	w19, #31, 15548 <concat_length@@Base+0x70>
   15568:	add	x0, x22, w19, sxtw
   1556c:	cmp	w1, #0x0
   15570:	mov	w19, w1
   15574:	b.gt	15548 <concat_length@@Base+0x70>
   15578:	ldr	x0, [x0]
   1557c:	cbnz	x0, 15558 <concat_length@@Base+0x80>
   15580:	mov	x0, x21
   15584:	ldp	x19, x20, [sp, #16]
   15588:	ldp	x21, x22, [sp, #32]
   1558c:	ldp	x29, x30, [sp], #272
   15590:	ret
   15594:	mov	x21, #0x0                   	// #0
   15598:	mov	x0, x21
   1559c:	ldp	x19, x20, [sp, #16]
   155a0:	ldp	x21, x22, [sp, #32]
   155a4:	ldp	x29, x30, [sp], #272
   155a8:	ret
   155ac:	nop

00000000000155b0 <concat_copy@@Base>:
   155b0:	stp	x29, x30, [sp, #-272]!
   155b4:	mov	w8, #0xffffffd0            	// #-48
   155b8:	mov	w9, #0xffffff80            	// #-128
   155bc:	mov	x29, sp
   155c0:	add	x10, sp, #0xe0
   155c4:	stp	x19, x20, [sp, #16]
   155c8:	add	x20, sp, #0x110
   155cc:	stp	x21, x22, [sp, #32]
   155d0:	stp	x23, x24, [sp, #48]
   155d4:	mov	x23, x0
   155d8:	stp	x20, x20, [sp, #64]
   155dc:	str	x10, [sp, #80]
   155e0:	stp	w8, w9, [sp, #88]
   155e4:	str	q0, [sp, #96]
   155e8:	str	q1, [sp, #112]
   155ec:	str	q2, [sp, #128]
   155f0:	str	q3, [sp, #144]
   155f4:	str	q4, [sp, #160]
   155f8:	str	q5, [sp, #176]
   155fc:	str	q6, [sp, #192]
   15600:	str	q7, [sp, #208]
   15604:	stp	x2, x3, [sp, #224]
   15608:	stp	x4, x5, [sp, #240]
   1560c:	stp	x6, x7, [sp, #256]
   15610:	cbz	x1, 15690 <concat_copy@@Base+0xe0>
   15614:	mov	x19, x1
   15618:	mov	w21, w8
   1561c:	mov	x24, x20
   15620:	mov	x22, x0
   15624:	b	15638 <concat_copy@@Base+0x88>
   15628:	mov	x0, x20
   1562c:	add	x20, x20, #0x8
   15630:	ldr	x19, [x0]
   15634:	cbz	x19, 15674 <concat_copy@@Base+0xc4>
   15638:	mov	x0, x19
   1563c:	bl	52c0 <strlen@plt>
   15640:	mov	x2, x0
   15644:	mov	x1, x19
   15648:	mov	x0, x22
   1564c:	add	x22, x22, x2
   15650:	bl	5210 <memcpy@plt>
   15654:	add	w1, w21, #0x8
   15658:	tbz	w21, #31, 15628 <concat_copy@@Base+0x78>
   1565c:	add	x0, x24, w21, sxtw
   15660:	cmp	w1, #0x0
   15664:	mov	w21, w1
   15668:	b.gt	15628 <concat_copy@@Base+0x78>
   1566c:	ldr	x19, [x0]
   15670:	cbnz	x19, 15638 <concat_copy@@Base+0x88>
   15674:	strb	wzr, [x22]
   15678:	mov	x0, x23
   1567c:	ldp	x19, x20, [sp, #16]
   15680:	ldp	x21, x22, [sp, #32]
   15684:	ldp	x23, x24, [sp, #48]
   15688:	ldp	x29, x30, [sp], #272
   1568c:	ret
   15690:	mov	x22, x0
   15694:	mov	x0, x23
   15698:	strb	wzr, [x22]
   1569c:	ldp	x19, x20, [sp, #16]
   156a0:	ldp	x21, x22, [sp, #32]
   156a4:	ldp	x23, x24, [sp, #48]
   156a8:	ldp	x29, x30, [sp], #272
   156ac:	ret

00000000000156b0 <concat_copy2@@Base>:
   156b0:	stp	x29, x30, [sp, #-288]!
   156b4:	mov	w8, #0xffffffc8            	// #-56
   156b8:	mov	w10, #0xffffff80            	// #-128
   156bc:	mov	x29, sp
   156c0:	stp	x21, x22, [sp, #32]
   156c4:	adrp	x22, 2c000 <xexit@@Base+0x151a0>
   156c8:	add	x11, sp, #0xe0
   156cc:	ldr	x9, [x22, #3840]
   156d0:	stp	x19, x20, [sp, #16]
   156d4:	add	x20, sp, #0x120
   156d8:	stp	x23, x24, [sp, #48]
   156dc:	mov	x19, x0
   156e0:	stp	x20, x20, [sp, #64]
   156e4:	str	x11, [sp, #80]
   156e8:	stp	w8, w10, [sp, #88]
   156ec:	str	q0, [sp, #96]
   156f0:	str	q1, [sp, #112]
   156f4:	str	q2, [sp, #128]
   156f8:	str	q3, [sp, #144]
   156fc:	str	q4, [sp, #160]
   15700:	str	q5, [sp, #176]
   15704:	str	q6, [sp, #192]
   15708:	str	q7, [sp, #208]
   1570c:	stp	x1, x2, [sp, #232]
   15710:	stp	x3, x4, [sp, #248]
   15714:	stp	x5, x6, [sp, #264]
   15718:	str	x7, [sp, #280]
   1571c:	ldr	x23, [x9]
   15720:	cbz	x0, 1577c <concat_copy2@@Base+0xcc>
   15724:	mov	w21, w8
   15728:	mov	x24, x20
   1572c:	b	15740 <concat_copy2@@Base+0x90>
   15730:	mov	x0, x20
   15734:	add	x20, x20, #0x8
   15738:	ldr	x19, [x0]
   1573c:	cbz	x19, 1577c <concat_copy2@@Base+0xcc>
   15740:	mov	x0, x19
   15744:	bl	52c0 <strlen@plt>
   15748:	mov	x2, x0
   1574c:	mov	x1, x19
   15750:	mov	x0, x23
   15754:	add	x23, x23, x2
   15758:	bl	5210 <memcpy@plt>
   1575c:	add	w1, w21, #0x8
   15760:	tbz	w21, #31, 15730 <concat_copy2@@Base+0x80>
   15764:	add	x0, x24, w21, sxtw
   15768:	cmp	w1, #0x0
   1576c:	mov	w21, w1
   15770:	b.gt	15730 <concat_copy2@@Base+0x80>
   15774:	ldr	x19, [x0]
   15778:	cbnz	x19, 15740 <concat_copy2@@Base+0x90>
   1577c:	ldr	x22, [x22, #3840]
   15780:	strb	wzr, [x23]
   15784:	ldp	x19, x20, [sp, #16]
   15788:	ldr	x0, [x22]
   1578c:	ldp	x21, x22, [sp, #32]
   15790:	ldp	x23, x24, [sp, #48]
   15794:	ldp	x29, x30, [sp], #288
   15798:	ret
   1579c:	nop

00000000000157a0 <concat@@Base>:
   157a0:	stp	x29, x30, [sp, #-304]!
   157a4:	mov	x29, sp
   157a8:	stp	x19, x20, [sp, #16]
   157ac:	mov	x19, x0
   157b0:	stp	x21, x22, [sp, #32]
   157b4:	add	x21, sp, #0x130
   157b8:	mov	w22, #0xffffffc8            	// #-56
   157bc:	stp	x23, x24, [sp, #48]
   157c0:	add	x23, sp, #0xf0
   157c4:	str	x25, [sp, #64]
   157c8:	mov	w25, #0xffffff80            	// #-128
   157cc:	stp	x21, x21, [sp, #80]
   157d0:	str	x23, [sp, #96]
   157d4:	str	w22, [sp, #104]
   157d8:	str	w25, [sp, #108]
   157dc:	str	q0, [sp, #112]
   157e0:	str	q1, [sp, #128]
   157e4:	str	q2, [sp, #144]
   157e8:	str	q3, [sp, #160]
   157ec:	str	q4, [sp, #176]
   157f0:	str	q5, [sp, #192]
   157f4:	str	q6, [sp, #208]
   157f8:	str	q7, [sp, #224]
   157fc:	stp	x1, x2, [sp, #248]
   15800:	stp	x3, x4, [sp, #264]
   15804:	stp	x5, x6, [sp, #280]
   15808:	str	x7, [sp, #296]
   1580c:	cbz	x0, 158f8 <concat@@Base+0x158>
   15810:	mov	w20, w22
   15814:	mov	x24, x21
   15818:	mov	x22, #0x0                   	// #0
   1581c:	b	15830 <concat@@Base+0x90>
   15820:	mov	x0, x21
   15824:	add	x21, x21, #0x8
   15828:	ldr	x0, [x0]
   1582c:	cbz	x0, 15858 <concat@@Base+0xb8>
   15830:	bl	52c0 <strlen@plt>
   15834:	add	x22, x22, x0
   15838:	add	w1, w20, #0x8
   1583c:	tbz	w20, #31, 15820 <concat@@Base+0x80>
   15840:	add	x0, x24, w20, sxtw
   15844:	cmp	w1, #0x0
   15848:	mov	w20, w1
   1584c:	b.gt	15820 <concat@@Base+0x80>
   15850:	ldr	x0, [x0]
   15854:	cbnz	x0, 15830 <concat@@Base+0x90>
   15858:	add	x0, x22, #0x1
   1585c:	add	x22, sp, #0x130
   15860:	bl	55c0 <xmalloc@plt>
   15864:	mov	x25, x22
   15868:	mov	w1, #0xffffffc8            	// #-56
   1586c:	mov	x24, x0
   15870:	mov	x20, x0
   15874:	mov	w21, w1
   15878:	mov	w0, #0xffffff80            	// #-128
   1587c:	stp	x22, x22, [sp, #80]
   15880:	str	x23, [sp, #96]
   15884:	stp	w1, w0, [sp, #104]
   15888:	b	1589c <concat@@Base+0xfc>
   1588c:	mov	x1, x22
   15890:	add	x22, x22, #0x8
   15894:	ldr	x19, [x1]
   15898:	cbz	x19, 158d8 <concat@@Base+0x138>
   1589c:	mov	x0, x19
   158a0:	bl	52c0 <strlen@plt>
   158a4:	mov	x2, x0
   158a8:	mov	x1, x19
   158ac:	mov	x0, x20
   158b0:	add	x20, x20, x2
   158b4:	bl	5210 <memcpy@plt>
   158b8:	add	w0, w21, #0x8
   158bc:	tbz	w21, #31, 1588c <concat@@Base+0xec>
   158c0:	add	x1, x25, w21, sxtw
   158c4:	cmp	w0, #0x0
   158c8:	mov	w21, w0
   158cc:	b.gt	1588c <concat@@Base+0xec>
   158d0:	ldr	x19, [x1]
   158d4:	cbnz	x19, 1589c <concat@@Base+0xfc>
   158d8:	strb	wzr, [x20]
   158dc:	mov	x0, x24
   158e0:	ldp	x19, x20, [sp, #16]
   158e4:	ldp	x21, x22, [sp, #32]
   158e8:	ldp	x23, x24, [sp, #48]
   158ec:	ldr	x25, [sp, #64]
   158f0:	ldp	x29, x30, [sp], #304
   158f4:	ret
   158f8:	mov	x0, #0x1                   	// #1
   158fc:	bl	55c0 <xmalloc@plt>
   15900:	mov	x20, x0
   15904:	add	x1, sp, #0x130
   15908:	stp	x1, x1, [sp, #80]
   1590c:	mov	x24, x0
   15910:	mov	x0, x24
   15914:	strb	wzr, [x20]
   15918:	str	x23, [sp, #96]
   1591c:	stp	w22, w25, [sp, #104]
   15920:	ldp	x19, x20, [sp, #16]
   15924:	ldp	x21, x22, [sp, #32]
   15928:	ldp	x23, x24, [sp, #48]
   1592c:	ldr	x25, [sp, #64]
   15930:	ldp	x29, x30, [sp], #304
   15934:	ret

0000000000015938 <reconcat@@Base>:
   15938:	stp	x29, x30, [sp, #-288]!
   1593c:	mov	x29, sp
   15940:	stp	x19, x20, [sp, #16]
   15944:	stp	x21, x22, [sp, #32]
   15948:	add	x21, sp, #0x120
   1594c:	mov	x22, x0
   15950:	stp	x23, x24, [sp, #48]
   15954:	add	x24, sp, #0xf0
   15958:	mov	w23, #0xffffffd0            	// #-48
   1595c:	stp	x25, x26, [sp, #64]
   15960:	mov	w26, #0xffffff80            	// #-128
   15964:	stp	x21, x21, [sp, #80]
   15968:	str	x24, [sp, #96]
   1596c:	stp	w23, w26, [sp, #104]
   15970:	str	q0, [sp, #112]
   15974:	str	q1, [sp, #128]
   15978:	str	q2, [sp, #144]
   1597c:	str	q3, [sp, #160]
   15980:	str	q4, [sp, #176]
   15984:	str	q5, [sp, #192]
   15988:	str	q6, [sp, #208]
   1598c:	str	q7, [sp, #224]
   15990:	stp	x2, x3, [sp, #240]
   15994:	stp	x4, x5, [sp, #256]
   15998:	stp	x6, x7, [sp, #272]
   1599c:	cbz	x1, 15a9c <reconcat@@Base+0x164>
   159a0:	mov	w20, w23
   159a4:	mov	x19, x1
   159a8:	mov	x25, x21
   159ac:	mov	x0, x1
   159b0:	mov	x23, #0x0                   	// #0
   159b4:	b	159c8 <reconcat@@Base+0x90>
   159b8:	mov	x0, x21
   159bc:	add	x21, x21, #0x8
   159c0:	ldr	x0, [x0]
   159c4:	cbz	x0, 159f0 <reconcat@@Base+0xb8>
   159c8:	bl	52c0 <strlen@plt>
   159cc:	add	x23, x23, x0
   159d0:	add	w1, w20, #0x8
   159d4:	tbz	w20, #31, 159b8 <reconcat@@Base+0x80>
   159d8:	add	x0, x25, w20, sxtw
   159dc:	cmp	w1, #0x0
   159e0:	mov	w20, w1
   159e4:	b.gt	159b8 <reconcat@@Base+0x80>
   159e8:	ldr	x0, [x0]
   159ec:	cbnz	x0, 159c8 <reconcat@@Base+0x90>
   159f0:	add	x0, x23, #0x1
   159f4:	add	x23, sp, #0x120
   159f8:	bl	55c0 <xmalloc@plt>
   159fc:	mov	x26, x23
   15a00:	mov	w1, #0xffffffd0            	// #-48
   15a04:	mov	x25, x0
   15a08:	mov	x20, x0
   15a0c:	mov	w21, w1
   15a10:	mov	w0, #0xffffff80            	// #-128
   15a14:	stp	x23, x23, [sp, #80]
   15a18:	str	x24, [sp, #96]
   15a1c:	stp	w1, w0, [sp, #104]
   15a20:	b	15a34 <reconcat@@Base+0xfc>
   15a24:	mov	x0, x23
   15a28:	add	x23, x23, #0x8
   15a2c:	ldr	x19, [x0]
   15a30:	cbz	x19, 15a70 <reconcat@@Base+0x138>
   15a34:	mov	x0, x19
   15a38:	bl	52c0 <strlen@plt>
   15a3c:	mov	x2, x0
   15a40:	mov	x1, x19
   15a44:	mov	x0, x20
   15a48:	add	x20, x20, x2
   15a4c:	bl	5210 <memcpy@plt>
   15a50:	add	w1, w21, #0x8
   15a54:	tbz	w21, #31, 15a24 <reconcat@@Base+0xec>
   15a58:	add	x0, x26, w21, sxtw
   15a5c:	cmp	w1, #0x0
   15a60:	mov	w21, w1
   15a64:	b.gt	15a24 <reconcat@@Base+0xec>
   15a68:	ldr	x19, [x0]
   15a6c:	cbnz	x19, 15a34 <reconcat@@Base+0xfc>
   15a70:	strb	wzr, [x20]
   15a74:	cbz	x22, 15a80 <reconcat@@Base+0x148>
   15a78:	mov	x0, x22
   15a7c:	bl	5380 <free@plt>
   15a80:	mov	x0, x25
   15a84:	ldp	x19, x20, [sp, #16]
   15a88:	ldp	x21, x22, [sp, #32]
   15a8c:	ldp	x23, x24, [sp, #48]
   15a90:	ldp	x25, x26, [sp, #64]
   15a94:	ldp	x29, x30, [sp], #288
   15a98:	ret
   15a9c:	mov	x0, #0x1                   	// #1
   15aa0:	bl	55c0 <xmalloc@plt>
   15aa4:	add	x1, sp, #0x120
   15aa8:	mov	x20, x0
   15aac:	mov	x25, x0
   15ab0:	stp	x1, x1, [sp, #80]
   15ab4:	str	x24, [sp, #96]
   15ab8:	stp	w23, w26, [sp, #104]
   15abc:	b	15a70 <reconcat@@Base+0x138>
   15ac0:	cmp	x1, x0
   15ac4:	cset	w0, eq  // eq = none
   15ac8:	ret
   15acc:	nop
   15ad0:	asr	x1, x0, #32
   15ad4:	mov	w3, #0x2785                	// #10117
   15ad8:	mov	w5, #0xadcc                	// #44492
   15adc:	movk	w3, #0x5c24, lsl #16
   15ae0:	add	w3, w3, w0
   15ae4:	sub	w0, w1, w0
   15ae8:	movk	w5, #0xbdec, lsl #16
   15aec:	mov	w4, #0x109a                	// #4250
   15af0:	add	w0, w0, w5
   15af4:	movk	w4, #0x2, lsl #16
   15af8:	mov	w2, #0x5234                	// #21044
   15afc:	eor	w0, w0, w4
   15b00:	sub	w3, w3, w0
   15b04:	movk	w2, #0x4213, lsl #16
   15b08:	sub	w1, w2, w0
   15b0c:	eor	w2, w3, w0, lsl #8
   15b10:	sub	w1, w1, w2
   15b14:	sub	w0, w0, w2
   15b18:	eor	w1, w1, w2, lsr #13
   15b1c:	sub	w0, w0, w1
   15b20:	sub	w2, w2, w1
   15b24:	eor	w0, w0, w1, lsr #12
   15b28:	sub	w2, w2, w0
   15b2c:	sub	w1, w1, w0
   15b30:	eor	w2, w2, w0, lsl #16
   15b34:	sub	w1, w1, w2
   15b38:	sub	w0, w0, w2
   15b3c:	eor	w1, w1, w2, lsr #5
   15b40:	sub	w0, w0, w1
   15b44:	sub	w2, w2, w1
   15b48:	eor	w0, w0, w1, lsr #3
   15b4c:	sub	w2, w2, w0
   15b50:	sub	w1, w1, w0
   15b54:	eor	w0, w2, w0, lsl #10
   15b58:	sub	w1, w1, w0
   15b5c:	eor	w0, w1, w0, lsr #15
   15b60:	ret
   15b64:	nop
   15b68:	stp	x29, x30, [sp, #-80]!
   15b6c:	mov	x29, sp
   15b70:	stp	x21, x22, [sp, #32]
   15b74:	mov	x21, x0
   15b78:	stp	x23, x24, [sp, #48]
   15b7c:	ldr	w23, [x0, #104]
   15b80:	ldr	x0, [x0, #40]
   15b84:	stp	x19, x20, [sp, #16]
   15b88:	ldr	x1, [x21, #48]
   15b8c:	ldr	x20, [x21, #24]
   15b90:	str	x25, [sp, #64]
   15b94:	ldr	x25, [x21, #32]
   15b98:	sub	x0, x0, x1
   15b9c:	lsl	x2, x0, #1
   15ba0:	cmp	x25, x0, lsl #1
   15ba4:	add	x19, x20, x25, lsl #3
   15ba8:	b.cc	15d00 <reconcat@@Base+0x3c8>  // b.lo, b.ul, b.last
   15bac:	lsl	x0, x0, #3
   15bb0:	mov	x1, #0x20                  	// #32
   15bb4:	cmp	x0, x1
   15bb8:	csel	x0, x0, x1, cs  // cs = hs, nlast
   15bbc:	cmp	x25, x0
   15bc0:	b.hi	15d00 <reconcat@@Base+0x3c8>  // b.pmore
   15bc4:	ldr	x3, [x21, #88]
   15bc8:	cbz	x3, 15d70 <reconcat@@Base+0x438>
   15bcc:	ldr	x0, [x21, #80]
   15bd0:	mov	x1, x25
   15bd4:	mov	x2, #0x8                   	// #8
   15bd8:	blr	x3
   15bdc:	cbz	x0, 15d84 <reconcat@@Base+0x44c>
   15be0:	ldp	x1, x2, [x21, #40]
   15be4:	adrp	x24, 17000 <xexit@@Base+0x1a0>
   15be8:	mov	x22, x20
   15bec:	add	x24, x24, #0xc70
   15bf0:	stp	x0, x25, [x21, #24]
   15bf4:	str	xzr, [x21, #48]
   15bf8:	sub	x0, x1, x2
   15bfc:	str	x0, [x21, #40]
   15c00:	str	w23, [x21, #104]
   15c04:	nop
   15c08:	ldr	x23, [x22]
   15c0c:	cmp	x23, #0x1
   15c10:	b.ls	15cc4 <reconcat@@Base+0x38c>  // b.plast
   15c14:	ldr	x1, [x21]
   15c18:	mov	x0, x23
   15c1c:	blr	x1
   15c20:	ldr	w1, [x21, #104]
   15c24:	ldr	x4, [x21, #24]
   15c28:	lsl	x1, x1, #4
   15c2c:	add	x6, x24, x1
   15c30:	ldr	w5, [x24, x1]
   15c34:	ldr	w1, [x6, #4]
   15c38:	ldr	w7, [x6, #12]
   15c3c:	umull	x1, w0, w1
   15c40:	lsr	x3, x1, #32
   15c44:	sub	w1, w0, w3
   15c48:	add	w1, w3, w1, lsr #1
   15c4c:	lsr	w1, w1, w7
   15c50:	msub	w1, w1, w5, w0
   15c54:	add	x3, x4, w1, uxtw #3
   15c58:	ldr	x2, [x4, w1, uxtw #3]
   15c5c:	cbz	x2, 15cc0 <reconcat@@Base+0x388>
   15c60:	cmp	x2, #0x1
   15c64:	b.eq	15dd8 <reconcat@@Base+0x4a0>  // b.none
   15c68:	ldr	w3, [x6, #8]
   15c6c:	add	w8, w0, #0x1
   15c70:	sub	w6, w5, #0x2
   15c74:	ldr	x5, [x21, #32]
   15c78:	umull	x3, w0, w3
   15c7c:	lsr	x3, x3, #32
   15c80:	sub	w2, w0, w3
   15c84:	add	w2, w3, w2, lsr #1
   15c88:	lsr	w2, w2, w7
   15c8c:	msub	w2, w2, w6, w8
   15c90:	b	15c9c <reconcat@@Base+0x364>
   15c94:	cmp	x0, #0x1
   15c98:	b.eq	15dd8 <reconcat@@Base+0x4a0>  // b.none
   15c9c:	add	w3, w1, w2
   15ca0:	mov	x1, x3
   15ca4:	cmp	x5, w3, uxtw
   15ca8:	b.hi	15cb4 <reconcat@@Base+0x37c>  // b.pmore
   15cac:	sub	w3, w3, w5
   15cb0:	mov	x1, x3
   15cb4:	ldr	x0, [x4, x3, lsl #3]
   15cb8:	add	x3, x4, x3, lsl #3
   15cbc:	cbnz	x0, 15c94 <reconcat@@Base+0x35c>
   15cc0:	str	x23, [x3]
   15cc4:	add	x22, x22, #0x8
   15cc8:	cmp	x19, x22
   15ccc:	b.hi	15c08 <reconcat@@Base+0x2d0>  // b.pmore
   15cd0:	ldr	x1, [x21, #72]
   15cd4:	cbz	x1, 15da4 <reconcat@@Base+0x46c>
   15cd8:	mov	x0, x20
   15cdc:	mov	w19, #0x1                   	// #1
   15ce0:	blr	x1
   15ce4:	mov	w0, w19
   15ce8:	ldp	x19, x20, [sp, #16]
   15cec:	ldp	x21, x22, [sp, #32]
   15cf0:	ldp	x23, x24, [sp, #48]
   15cf4:	ldr	x25, [sp, #64]
   15cf8:	ldp	x29, x30, [sp], #80
   15cfc:	ret
   15d00:	adrp	x5, 17000 <xexit@@Base+0x1a0>
   15d04:	mov	w0, #0x1e                  	// #30
   15d08:	add	x4, x5, #0xc70
   15d0c:	mov	w23, #0x0                   	// #0
   15d10:	b	15d30 <reconcat@@Base+0x3f8>
   15d14:	sub	w1, w0, w23
   15d18:	add	w1, w23, w1, lsr #1
   15d1c:	ubfiz	x3, x1, #4, #32
   15d20:	ldr	w3, [x4, x3]
   15d24:	cmp	x2, x3
   15d28:	b.hi	15d68 <reconcat@@Base+0x430>  // b.pmore
   15d2c:	mov	w0, w1
   15d30:	cmp	w0, w23
   15d34:	b.ne	15d14 <reconcat@@Base+0x3dc>  // b.any
   15d38:	add	x5, x5, #0xc70
   15d3c:	ubfiz	x0, x0, #4, #32
   15d40:	ldr	w25, [x5, x0]
   15d44:	cmp	x2, x25
   15d48:	b.ls	15bc4 <reconcat@@Base+0x28c>  // b.plast
   15d4c:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
   15d50:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   15d54:	add	x1, x1, #0xc48
   15d58:	ldr	x0, [x0, #3968]
   15d5c:	ldr	x0, [x0]
   15d60:	bl	52d0 <fprintf@plt>
   15d64:	bl	56a0 <abort@plt>
   15d68:	add	w23, w1, #0x1
   15d6c:	b	15d30 <reconcat@@Base+0x3f8>
   15d70:	ldr	x2, [x21, #64]
   15d74:	mov	x0, x25
   15d78:	mov	x1, #0x8                   	// #8
   15d7c:	blr	x2
   15d80:	cbnz	x0, 15be0 <reconcat@@Base+0x2a8>
   15d84:	mov	w19, #0x0                   	// #0
   15d88:	mov	w0, w19
   15d8c:	ldp	x19, x20, [sp, #16]
   15d90:	ldp	x21, x22, [sp, #32]
   15d94:	ldp	x23, x24, [sp, #48]
   15d98:	ldr	x25, [sp, #64]
   15d9c:	ldp	x29, x30, [sp], #80
   15da0:	ret
   15da4:	ldr	x2, [x21, #96]
   15da8:	mov	w19, #0x1                   	// #1
   15dac:	cbz	x2, 15ce4 <reconcat@@Base+0x3ac>
   15db0:	ldr	x0, [x21, #80]
   15db4:	mov	x1, x20
   15db8:	blr	x2
   15dbc:	mov	w0, w19
   15dc0:	ldp	x19, x20, [sp, #16]
   15dc4:	ldp	x21, x22, [sp, #32]
   15dc8:	ldp	x23, x24, [sp, #48]
   15dcc:	ldr	x25, [sp, #64]
   15dd0:	ldp	x29, x30, [sp], #80
   15dd4:	ret
   15dd8:	bl	56a0 <abort@plt>
   15ddc:	nop

0000000000015de0 <htab_size@@Base>:
   15de0:	ldr	x0, [x0, #32]
   15de4:	ret

0000000000015de8 <htab_elements@@Base>:
   15de8:	ldp	x1, x0, [x0, #40]
   15dec:	sub	x0, x1, x0
   15df0:	ret
   15df4:	nop

0000000000015df8 <htab_create_alloc_ex@@Base>:
   15df8:	stp	x29, x30, [sp, #-96]!
   15dfc:	mov	x29, sp
   15e00:	stp	x19, x20, [sp, #16]
   15e04:	mov	w20, #0x1e                  	// #30
   15e08:	stp	x21, x22, [sp, #32]
   15e0c:	mov	x21, x5
   15e10:	mov	x22, x6
   15e14:	stp	x23, x24, [sp, #48]
   15e18:	mov	x24, x2
   15e1c:	mov	x23, x3
   15e20:	mov	w2, #0x0                   	// #0
   15e24:	stp	x25, x26, [sp, #64]
   15e28:	mov	x25, x1
   15e2c:	mov	x26, x4
   15e30:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   15e34:	add	x3, x1, #0xc70
   15e38:	str	x27, [sp, #80]
   15e3c:	b	15e5c <htab_create_alloc_ex@@Base+0x64>
   15e40:	sub	w7, w20, w2
   15e44:	add	w7, w2, w7, lsr #1
   15e48:	ubfiz	x4, x7, #4, #32
   15e4c:	ldr	w4, [x3, x4]
   15e50:	cmp	x0, x4
   15e54:	b.hi	15ee0 <htab_create_alloc_ex@@Base+0xe8>  // b.pmore
   15e58:	mov	w20, w7
   15e5c:	cmp	w20, w2
   15e60:	b.ne	15e40 <htab_create_alloc_ex@@Base+0x48>  // b.any
   15e64:	add	x1, x1, #0xc70
   15e68:	ubfiz	x2, x20, #4, #32
   15e6c:	ldr	w27, [x1, x2]
   15e70:	cmp	x0, x27
   15e74:	b.hi	15f24 <htab_create_alloc_ex@@Base+0x12c>  // b.pmore
   15e78:	mov	x0, x26
   15e7c:	mov	x2, #0x70                  	// #112
   15e80:	mov	x1, #0x1                   	// #1
   15e84:	blr	x21
   15e88:	mov	x19, x0
   15e8c:	cbz	x0, 15ee8 <htab_create_alloc_ex@@Base+0xf0>
   15e90:	mov	x1, x27
   15e94:	mov	x0, x26
   15e98:	mov	x2, #0x8                   	// #8
   15e9c:	blr	x21
   15ea0:	str	x0, [x19, #24]
   15ea4:	cbz	x0, 15f0c <htab_create_alloc_ex@@Base+0x114>
   15ea8:	stp	x25, x24, [x19]
   15eac:	str	x23, [x19, #16]
   15eb0:	str	x27, [x19, #32]
   15eb4:	stp	x26, x21, [x19, #80]
   15eb8:	str	x22, [x19, #96]
   15ebc:	str	w20, [x19, #104]
   15ec0:	mov	x0, x19
   15ec4:	ldp	x19, x20, [sp, #16]
   15ec8:	ldp	x21, x22, [sp, #32]
   15ecc:	ldp	x23, x24, [sp, #48]
   15ed0:	ldp	x25, x26, [sp, #64]
   15ed4:	ldr	x27, [sp, #80]
   15ed8:	ldp	x29, x30, [sp], #96
   15edc:	ret
   15ee0:	add	w2, w7, #0x1
   15ee4:	b	15e5c <htab_create_alloc_ex@@Base+0x64>
   15ee8:	mov	x19, #0x0                   	// #0
   15eec:	mov	x0, x19
   15ef0:	ldp	x19, x20, [sp, #16]
   15ef4:	ldp	x21, x22, [sp, #32]
   15ef8:	ldp	x23, x24, [sp, #48]
   15efc:	ldp	x25, x26, [sp, #64]
   15f00:	ldr	x27, [sp, #80]
   15f04:	ldp	x29, x30, [sp], #96
   15f08:	ret
   15f0c:	cbz	x22, 15ee8 <htab_create_alloc_ex@@Base+0xf0>
   15f10:	mov	x1, x19
   15f14:	mov	x0, x26
   15f18:	mov	x19, #0x0                   	// #0
   15f1c:	blr	x22
   15f20:	b	15ec0 <htab_create_alloc_ex@@Base+0xc8>
   15f24:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
   15f28:	mov	x2, x0
   15f2c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   15f30:	add	x1, x1, #0xc48
   15f34:	ldr	x3, [x3, #3968]
   15f38:	ldr	x0, [x3]
   15f3c:	bl	52d0 <fprintf@plt>
   15f40:	bl	56a0 <abort@plt>
   15f44:	nop

0000000000015f48 <htab_create_typed_alloc@@Base>:
   15f48:	stp	x29, x30, [sp, #-80]!
   15f4c:	mov	x29, sp
   15f50:	stp	x19, x20, [sp, #16]
   15f54:	mov	w20, #0x1e                  	// #30
   15f58:	stp	x21, x22, [sp, #32]
   15f5c:	mov	x21, x5
   15f60:	mov	x22, x6
   15f64:	stp	x23, x24, [sp, #48]
   15f68:	mov	x24, x2
   15f6c:	mov	x23, x3
   15f70:	mov	w2, #0x0                   	// #0
   15f74:	stp	x25, x26, [sp, #64]
   15f78:	mov	x25, x1
   15f7c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   15f80:	add	x3, x1, #0xc70
   15f84:	b	15fa4 <htab_create_typed_alloc@@Base+0x5c>
   15f88:	sub	w7, w20, w2
   15f8c:	add	w7, w2, w7, lsr #1
   15f90:	ubfiz	x5, x7, #4, #32
   15f94:	ldr	w5, [x3, x5]
   15f98:	cmp	x0, x5
   15f9c:	b.hi	16018 <htab_create_typed_alloc@@Base+0xd0>  // b.pmore
   15fa0:	mov	w20, w7
   15fa4:	cmp	w20, w2
   15fa8:	b.ne	15f88 <htab_create_typed_alloc@@Base+0x40>  // b.any
   15fac:	add	x1, x1, #0xc70
   15fb0:	ubfiz	x2, x20, #4, #32
   15fb4:	ldr	w26, [x1, x2]
   15fb8:	cmp	x0, x26
   15fbc:	b.hi	16054 <htab_create_typed_alloc@@Base+0x10c>  // b.pmore
   15fc0:	mov	x1, #0x70                  	// #112
   15fc4:	mov	x0, #0x1                   	// #1
   15fc8:	blr	x4
   15fcc:	mov	x19, x0
   15fd0:	cbz	x0, 16020 <htab_create_typed_alloc@@Base+0xd8>
   15fd4:	mov	x0, x26
   15fd8:	mov	x1, #0x8                   	// #8
   15fdc:	blr	x21
   15fe0:	str	x0, [x19, #24]
   15fe4:	cbz	x0, 16040 <htab_create_typed_alloc@@Base+0xf8>
   15fe8:	stp	x25, x24, [x19]
   15fec:	str	x23, [x19, #16]
   15ff0:	str	x26, [x19, #32]
   15ff4:	stp	x21, x22, [x19, #64]
   15ff8:	str	w20, [x19, #104]
   15ffc:	mov	x0, x19
   16000:	ldp	x19, x20, [sp, #16]
   16004:	ldp	x21, x22, [sp, #32]
   16008:	ldp	x23, x24, [sp, #48]
   1600c:	ldp	x25, x26, [sp, #64]
   16010:	ldp	x29, x30, [sp], #80
   16014:	ret
   16018:	add	w2, w7, #0x1
   1601c:	b	15fa4 <htab_create_typed_alloc@@Base+0x5c>
   16020:	mov	x19, #0x0                   	// #0
   16024:	mov	x0, x19
   16028:	ldp	x19, x20, [sp, #16]
   1602c:	ldp	x21, x22, [sp, #32]
   16030:	ldp	x23, x24, [sp, #48]
   16034:	ldp	x25, x26, [sp, #64]
   16038:	ldp	x29, x30, [sp], #80
   1603c:	ret
   16040:	cbz	x22, 16020 <htab_create_typed_alloc@@Base+0xd8>
   16044:	mov	x0, x19
   16048:	mov	x19, #0x0                   	// #0
   1604c:	blr	x22
   16050:	b	15ffc <htab_create_typed_alloc@@Base+0xb4>
   16054:	adrp	x3, 2c000 <xexit@@Base+0x151a0>
   16058:	mov	x2, x0
   1605c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   16060:	add	x1, x1, #0xc48
   16064:	ldr	x3, [x3, #3968]
   16068:	ldr	x0, [x3]
   1606c:	bl	52d0 <fprintf@plt>
   16070:	bl	56a0 <abort@plt>
   16074:	nop

0000000000016078 <htab_create_alloc@@Base>:
   16078:	mov	x6, x5
   1607c:	mov	x5, x4
   16080:	b	53f0 <htab_create_typed_alloc@plt>
   16084:	nop

0000000000016088 <htab_set_functions_ex@@Base>:
   16088:	stp	x1, x2, [x0]
   1608c:	str	x3, [x0, #16]
   16090:	stp	x4, x5, [x0, #80]
   16094:	str	x6, [x0, #96]
   16098:	ret
   1609c:	nop

00000000000160a0 <htab_create@@Base>:
   160a0:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
   160a4:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
   160a8:	ldr	x5, [x5, #3376]
   160ac:	ldr	x4, [x4, #3872]
   160b0:	b	5320 <htab_create_alloc@plt>
   160b4:	nop

00000000000160b8 <htab_try_create@@Base>:
   160b8:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
   160bc:	adrp	x4, 2c000 <xexit@@Base+0x151a0>
   160c0:	ldr	x5, [x5, #3376]
   160c4:	ldr	x4, [x4, #3240]
   160c8:	b	5320 <htab_create_alloc@plt>
   160cc:	nop

00000000000160d0 <htab_delete@@Base>:
   160d0:	stp	x29, x30, [sp, #-48]!
   160d4:	mov	x29, sp
   160d8:	stp	x19, x20, [sp, #16]
   160dc:	mov	x20, x0
   160e0:	ldr	x0, [x0, #16]
   160e4:	str	x21, [sp, #32]
   160e8:	ldr	x21, [x20, #24]
   160ec:	cbz	x0, 1611c <htab_delete@@Base+0x4c>
   160f0:	ldr	x19, [x20, #32]
   160f4:	subs	w19, w19, #0x1
   160f8:	b.mi	1611c <htab_delete@@Base+0x4c>  // b.first
   160fc:	sxtw	x19, w19
   16100:	ldr	x0, [x21, x19, lsl #3]
   16104:	sub	x19, x19, #0x1
   16108:	cmp	x0, #0x1
   1610c:	b.ls	16118 <htab_delete@@Base+0x48>  // b.plast
   16110:	ldr	x1, [x20, #16]
   16114:	blr	x1
   16118:	tbz	w19, #31, 16100 <htab_delete@@Base+0x30>
   1611c:	ldr	x1, [x20, #72]
   16120:	cbz	x1, 16148 <htab_delete@@Base+0x78>
   16124:	mov	x0, x21
   16128:	blr	x1
   1612c:	mov	x0, x20
   16130:	ldr	x21, [sp, #32]
   16134:	ldr	x1, [x20, #72]
   16138:	ldp	x19, x20, [sp, #16]
   1613c:	mov	x16, x1
   16140:	ldp	x29, x30, [sp], #48
   16144:	br	x16
   16148:	ldr	x2, [x20, #96]
   1614c:	cbz	x2, 1617c <htab_delete@@Base+0xac>
   16150:	ldr	x0, [x20, #80]
   16154:	mov	x1, x21
   16158:	blr	x2
   1615c:	mov	x1, x20
   16160:	ldr	x21, [sp, #32]
   16164:	ldr	x0, [x20, #80]
   16168:	ldr	x2, [x20, #96]
   1616c:	ldp	x19, x20, [sp, #16]
   16170:	mov	x16, x2
   16174:	ldp	x29, x30, [sp], #48
   16178:	br	x16
   1617c:	ldp	x19, x20, [sp, #16]
   16180:	ldr	x21, [sp, #32]
   16184:	ldp	x29, x30, [sp], #48
   16188:	ret
   1618c:	nop

0000000000016190 <htab_empty@@Base>:
   16190:	stp	x29, x30, [sp, #-48]!
   16194:	mov	x29, sp
   16198:	stp	x19, x20, [sp, #16]
   1619c:	mov	x20, x0
   161a0:	ldr	x0, [x0, #16]
   161a4:	stp	x21, x22, [sp, #32]
   161a8:	ldp	x21, x22, [x20, #24]
   161ac:	cbz	x0, 161dc <htab_empty@@Base+0x4c>
   161b0:	subs	w19, w22, #0x1
   161b4:	b.mi	161dc <htab_empty@@Base+0x4c>  // b.first
   161b8:	sxtw	x19, w19
   161bc:	nop
   161c0:	ldr	x0, [x21, x19, lsl #3]
   161c4:	cmp	x0, #0x1
   161c8:	b.ls	161d4 <htab_empty@@Base+0x44>  // b.plast
   161cc:	ldr	x1, [x20, #16]
   161d0:	blr	x1
   161d4:	sub	x19, x19, #0x1
   161d8:	tbz	w19, #31, 161c0 <htab_empty@@Base+0x30>
   161dc:	cmp	x22, #0x20, lsl #12
   161e0:	b.ls	16284 <htab_empty@@Base+0xf4>  // b.plast
   161e4:	adrp	x4, 17000 <xexit@@Base+0x1a0>
   161e8:	mov	w2, #0x1e                  	// #30
   161ec:	add	x3, x4, #0xc70
   161f0:	mov	w19, #0x0                   	// #0
   161f4:	b	16214 <htab_empty@@Base+0x84>
   161f8:	sub	w1, w2, w19
   161fc:	add	w1, w19, w1, lsr #1
   16200:	ubfiz	x0, x1, #4, #32
   16204:	ldr	w0, [x3, x0]
   16208:	cmp	w0, #0x7f
   1620c:	b.ls	162a8 <htab_empty@@Base+0x118>  // b.plast
   16210:	mov	w2, w1
   16214:	cmp	w2, w19
   16218:	b.ne	161f8 <htab_empty@@Base+0x68>  // b.any
   1621c:	add	x0, x4, #0xc70
   16220:	ubfiz	x2, x2, #4, #32
   16224:	ldr	w1, [x0, x2]
   16228:	cmp	w1, #0x7f
   1622c:	b.ls	162e8 <htab_empty@@Base+0x158>  // b.plast
   16230:	ldr	x1, [x20, #72]
   16234:	sbfiz	x2, x19, #4, #32
   16238:	ldr	w21, [x0, x2]
   1623c:	cbz	x1, 162b0 <htab_empty@@Base+0x120>
   16240:	ldr	x0, [x20, #24]
   16244:	blr	x1
   16248:	ldr	x3, [x20, #88]
   1624c:	sxtw	x21, w21
   16250:	cbz	x3, 162d0 <htab_empty@@Base+0x140>
   16254:	ldr	x0, [x20, #80]
   16258:	mov	x1, x21
   1625c:	mov	x2, #0x8                   	// #8
   16260:	blr	x3
   16264:	str	x0, [x20, #24]
   16268:	str	x21, [x20, #32]
   1626c:	stp	xzr, xzr, [x20, #40]
   16270:	str	w19, [x20, #104]
   16274:	ldp	x19, x20, [sp, #16]
   16278:	ldp	x21, x22, [sp, #32]
   1627c:	ldp	x29, x30, [sp], #48
   16280:	ret
   16284:	lsl	x2, x22, #3
   16288:	mov	x0, x21
   1628c:	mov	w1, #0x0                   	// #0
   16290:	bl	5390 <memset@plt>
   16294:	stp	xzr, xzr, [x20, #40]
   16298:	ldp	x19, x20, [sp, #16]
   1629c:	ldp	x21, x22, [sp, #32]
   162a0:	ldp	x29, x30, [sp], #48
   162a4:	ret
   162a8:	add	w19, w1, #0x1
   162ac:	b	16214 <htab_empty@@Base+0x84>
   162b0:	ldr	x2, [x20, #96]
   162b4:	cbz	x2, 16248 <htab_empty@@Base+0xb8>
   162b8:	ldr	x1, [x20, #24]
   162bc:	sxtw	x21, w21
   162c0:	ldr	x0, [x20, #80]
   162c4:	blr	x2
   162c8:	ldr	x3, [x20, #88]
   162cc:	cbnz	x3, 16254 <htab_empty@@Base+0xc4>
   162d0:	ldr	x2, [x20, #64]
   162d4:	mov	x0, x21
   162d8:	mov	x1, #0x8                   	// #8
   162dc:	blr	x2
   162e0:	str	x0, [x20, #24]
   162e4:	b	16268 <htab_empty@@Base+0xd8>
   162e8:	adrp	x0, 2c000 <xexit@@Base+0x151a0>
   162ec:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   162f0:	add	x1, x1, #0xc48
   162f4:	mov	x2, #0x80                  	// #128
   162f8:	ldr	x0, [x0, #3968]
   162fc:	ldr	x0, [x0]
   16300:	bl	52d0 <fprintf@plt>
   16304:	bl	56a0 <abort@plt>

0000000000016308 <htab_find_with_hash@@Base>:
   16308:	stp	x29, x30, [sp, #-80]!
   1630c:	mov	x29, sp
   16310:	stp	x21, x22, [sp, #32]
   16314:	mov	x21, x0
   16318:	ldr	w0, [x0, #104]
   1631c:	stp	x25, x26, [sp, #64]
   16320:	adrp	x26, 17000 <xexit@@Base+0x1a0>
   16324:	add	x25, x26, #0xc70
   16328:	lsl	x3, x0, #4
   1632c:	mov	w22, w2
   16330:	add	x5, x25, x3
   16334:	ldr	w2, [x21, #56]
   16338:	stp	x19, x20, [sp, #16]
   1633c:	add	w2, w2, #0x1
   16340:	str	w2, [x21, #56]
   16344:	ldr	w2, [x25, x3]
   16348:	ldr	w3, [x5, #4]
   1634c:	ldr	w5, [x5, #12]
   16350:	ldr	x4, [x21, #24]
   16354:	umull	x3, w22, w3
   16358:	lsr	x3, x3, #32
   1635c:	sub	w19, w22, w3
   16360:	add	w19, w3, w19, lsr #1
   16364:	lsr	w19, w19, w5
   16368:	msub	w19, w19, w2, w22
   1636c:	ldr	x20, [x4, w19, uxtw #3]
   16370:	cbz	x20, 1645c <htab_find_with_hash@@Base+0x154>
   16374:	stp	x23, x24, [sp, #48]
   16378:	cmp	x20, #0x1
   1637c:	mov	x24, x1
   16380:	ldr	x23, [x21, #32]
   16384:	b.eq	163b0 <htab_find_with_hash@@Base+0xa8>  // b.none
   16388:	ldr	x2, [x21, #8]
   1638c:	mov	x0, x20
   16390:	blr	x2
   16394:	cbnz	w0, 16478 <htab_find_with_hash@@Base+0x170>
   16398:	ldr	w0, [x21, #104]
   1639c:	ldr	x4, [x21, #24]
   163a0:	lsl	x1, x0, #4
   163a4:	add	x3, x25, x1
   163a8:	ldr	w2, [x25, x1]
   163ac:	ldr	w5, [x3, #12]
   163b0:	add	x26, x26, #0xc70
   163b4:	sub	w1, w2, #0x2
   163b8:	add	x0, x26, x0, lsl #4
   163bc:	add	w6, w22, #0x1
   163c0:	ldr	w3, [x21, #60]
   163c4:	ldr	w0, [x0, #8]
   163c8:	umull	x2, w22, w0
   163cc:	lsr	x0, x2, #32
   163d0:	sub	w2, w22, w0
   163d4:	add	w2, w0, w2, lsr #1
   163d8:	lsr	w2, w2, w5
   163dc:	msub	w22, w2, w1, w6
   163e0:	add	w2, w19, w22
   163e4:	add	w3, w3, #0x1
   163e8:	str	w3, [x21, #60]
   163ec:	mov	x19, x2
   163f0:	cmp	x23, w2, uxtw
   163f4:	mov	x1, x24
   163f8:	b.hi	16404 <htab_find_with_hash@@Base+0xfc>  // b.pmore
   163fc:	sub	w2, w2, w23
   16400:	mov	x19, x2
   16404:	ldr	x20, [x4, x2, lsl #3]
   16408:	cmp	x20, #0x1
   1640c:	mov	x0, x20
   16410:	cbz	x20, 16458 <htab_find_with_hash@@Base+0x150>
   16414:	b.eq	163e0 <htab_find_with_hash@@Base+0xd8>  // b.none
   16418:	ldr	x2, [x21, #8]
   1641c:	blr	x2
   16420:	cbnz	w0, 16478 <htab_find_with_hash@@Base+0x170>
   16424:	ldr	w3, [x21, #60]
   16428:	add	w2, w19, w22
   1642c:	mov	x19, x2
   16430:	mov	x1, x24
   16434:	add	w3, w3, #0x1
   16438:	str	w3, [x21, #60]
   1643c:	cmp	x23, w2, uxtw
   16440:	ldr	x4, [x21, #24]
   16444:	b.ls	163fc <htab_find_with_hash@@Base+0xf4>  // b.plast
   16448:	ldr	x20, [x4, x2, lsl #3]
   1644c:	cmp	x20, #0x1
   16450:	mov	x0, x20
   16454:	cbnz	x20, 16414 <htab_find_with_hash@@Base+0x10c>
   16458:	ldp	x23, x24, [sp, #48]
   1645c:	mov	x20, #0x0                   	// #0
   16460:	mov	x0, x20
   16464:	ldp	x19, x20, [sp, #16]
   16468:	ldp	x21, x22, [sp, #32]
   1646c:	ldp	x25, x26, [sp, #64]
   16470:	ldp	x29, x30, [sp], #80
   16474:	ret
   16478:	mov	x0, x20
   1647c:	ldp	x19, x20, [sp, #16]
   16480:	ldp	x21, x22, [sp, #32]
   16484:	ldp	x23, x24, [sp, #48]
   16488:	ldp	x25, x26, [sp, #64]
   1648c:	ldp	x29, x30, [sp], #80
   16490:	ret
   16494:	nop

0000000000016498 <htab_find@@Base>:
   16498:	stp	x29, x30, [sp, #-32]!
   1649c:	mov	x29, sp
   164a0:	stp	x19, x20, [sp, #16]
   164a4:	mov	x19, x0
   164a8:	mov	x20, x1
   164ac:	mov	x0, x1
   164b0:	ldr	x1, [x19]
   164b4:	blr	x1
   164b8:	mov	w2, w0
   164bc:	mov	x1, x20
   164c0:	mov	x0, x19
   164c4:	ldp	x19, x20, [sp, #16]
   164c8:	ldp	x29, x30, [sp], #32
   164cc:	b	56f0 <htab_find_with_hash@plt>

00000000000164d0 <htab_find_slot_with_hash@@Base>:
   164d0:	stp	x29, x30, [sp, #-96]!
   164d4:	cmp	w3, #0x1
   164d8:	mov	x29, sp
   164dc:	stp	x21, x22, [sp, #32]
   164e0:	mov	w22, w3
   164e4:	mov	w21, w2
   164e8:	stp	x23, x24, [sp, #48]
   164ec:	mov	x24, x0
   164f0:	stp	x25, x26, [sp, #64]
   164f4:	mov	x26, x1
   164f8:	ldr	x25, [x0, #32]
   164fc:	b.eq	16688 <htab_find_slot_with_hash@@Base+0x1b8>  // b.none
   16500:	stp	x19, x20, [sp, #16]
   16504:	stp	x27, x28, [sp, #80]
   16508:	ldr	w1, [x24, #104]
   1650c:	adrp	x20, 17000 <xexit@@Base+0x1a0>
   16510:	add	x27, x20, #0xc70
   16514:	ldr	x3, [x24, #24]
   16518:	lsl	x2, x1, #4
   1651c:	add	x5, x27, x2
   16520:	ldr	w0, [x24, #56]
   16524:	ldr	w4, [x27, x2]
   16528:	add	w0, w0, #0x1
   1652c:	ldr	w2, [x5, #4]
   16530:	ldr	w5, [x5, #12]
   16534:	str	w0, [x24, #56]
   16538:	umull	x2, w21, w2
   1653c:	lsr	x2, x2, #32
   16540:	sub	w19, w21, w2
   16544:	add	w19, w2, w19, lsr #1
   16548:	lsr	w19, w19, w5
   1654c:	msub	w19, w19, w4, w21
   16550:	ubfiz	x28, x19, #3, #32
   16554:	ldr	x0, [x3, w19, uxtw #3]
   16558:	add	x23, x3, x28
   1655c:	cbz	x0, 16700 <htab_find_slot_with_hash@@Base+0x230>
   16560:	cmp	x0, #0x1
   16564:	b.eq	16594 <htab_find_slot_with_hash@@Base+0xc4>  // b.none
   16568:	ldr	x2, [x24, #8]
   1656c:	mov	x1, x26
   16570:	blr	x2
   16574:	cbnz	w0, 166d8 <htab_find_slot_with_hash@@Base+0x208>
   16578:	ldr	w1, [x24, #104]
   1657c:	mov	x23, #0x0                   	// #0
   16580:	ldr	x3, [x24, #24]
   16584:	lsl	x0, x1, #4
   16588:	add	x2, x27, x0
   1658c:	ldr	w4, [x27, x0]
   16590:	ldr	w5, [x2, #12]
   16594:	add	x20, x20, #0xc70
   16598:	sub	w2, w4, #0x2
   1659c:	add	x1, x20, x1, lsl #4
   165a0:	add	w6, w21, #0x1
   165a4:	ldr	w4, [x24, #60]
   165a8:	ldr	w0, [x1, #8]
   165ac:	umull	x0, w21, w0
   165b0:	lsr	x0, x0, #32
   165b4:	sub	w20, w21, w0
   165b8:	add	w20, w0, w20, lsr #1
   165bc:	lsr	w20, w20, w5
   165c0:	msub	w20, w20, w2, w6
   165c4:	add	w2, w19, w20
   165c8:	add	w4, w4, #0x1
   165cc:	str	w4, [x24, #60]
   165d0:	mov	x19, x2
   165d4:	cmp	x25, w2, uxtw
   165d8:	mov	x1, x26
   165dc:	b.hi	165e8 <htab_find_slot_with_hash@@Base+0x118>  // b.pmore
   165e0:	sub	w2, w2, w25
   165e4:	mov	x19, x2
   165e8:	ldr	x0, [x3, x2, lsl #3]
   165ec:	lsl	x21, x2, #3
   165f0:	add	x2, x3, x21
   165f4:	cmp	x0, #0x1
   165f8:	cbz	x0, 16644 <htab_find_slot_with_hash@@Base+0x174>
   165fc:	b.eq	1667c <htab_find_slot_with_hash@@Base+0x1ac>  // b.none
   16600:	ldr	x2, [x24, #8]
   16604:	blr	x2
   16608:	cbnz	w0, 166b0 <htab_find_slot_with_hash@@Base+0x1e0>
   1660c:	ldr	w4, [x24, #60]
   16610:	add	w2, w19, w20
   16614:	mov	x19, x2
   16618:	mov	x1, x26
   1661c:	add	w4, w4, #0x1
   16620:	str	w4, [x24, #60]
   16624:	cmp	x25, w2, uxtw
   16628:	ldr	x3, [x24, #24]
   1662c:	b.ls	165e0 <htab_find_slot_with_hash@@Base+0x110>  // b.plast
   16630:	ldr	x0, [x3, x2, lsl #3]
   16634:	lsl	x21, x2, #3
   16638:	add	x2, x3, x21
   1663c:	cmp	x0, #0x1
   16640:	cbnz	x0, 165fc <htab_find_slot_with_hash@@Base+0x12c>
   16644:	cbz	w22, 16730 <htab_find_slot_with_hash@@Base+0x260>
   16648:	cbz	x23, 16754 <htab_find_slot_with_hash@@Base+0x284>
   1664c:	ldr	x0, [x24, #48]
   16650:	ldp	x19, x20, [sp, #16]
   16654:	sub	x0, x0, #0x1
   16658:	ldp	x27, x28, [sp, #80]
   1665c:	str	x0, [x24, #48]
   16660:	str	xzr, [x23]
   16664:	mov	x0, x23
   16668:	ldp	x21, x22, [sp, #32]
   1666c:	ldp	x23, x24, [sp, #48]
   16670:	ldp	x25, x26, [sp, #64]
   16674:	ldp	x29, x30, [sp], #96
   16678:	ret
   1667c:	cmp	x23, #0x0
   16680:	csel	x23, x23, x2, ne  // ne = any
   16684:	b	165c4 <htab_find_slot_with_hash@@Base+0xf4>
   16688:	ldr	x2, [x0, #40]
   1668c:	add	x1, x25, x25, lsl #1
   16690:	cmp	x1, x2, lsl #2
   16694:	b.hi	16500 <htab_find_slot_with_hash@@Base+0x30>  // b.pmore
   16698:	bl	15b68 <reconcat@@Base+0x230>
   1669c:	cbz	w0, 16738 <htab_find_slot_with_hash@@Base+0x268>
   166a0:	stp	x19, x20, [sp, #16]
   166a4:	stp	x27, x28, [sp, #80]
   166a8:	ldr	x25, [x24, #32]
   166ac:	b	16508 <htab_find_slot_with_hash@@Base+0x38>
   166b0:	ldr	x23, [x24, #24]
   166b4:	ldp	x19, x20, [sp, #16]
   166b8:	add	x23, x23, x21
   166bc:	mov	x0, x23
   166c0:	ldp	x21, x22, [sp, #32]
   166c4:	ldp	x23, x24, [sp, #48]
   166c8:	ldp	x25, x26, [sp, #64]
   166cc:	ldp	x27, x28, [sp, #80]
   166d0:	ldp	x29, x30, [sp], #96
   166d4:	ret
   166d8:	ldr	x23, [x24, #24]
   166dc:	ldp	x19, x20, [sp, #16]
   166e0:	add	x23, x23, x28
   166e4:	mov	x0, x23
   166e8:	ldp	x21, x22, [sp, #32]
   166ec:	ldp	x23, x24, [sp, #48]
   166f0:	ldp	x25, x26, [sp, #64]
   166f4:	ldp	x27, x28, [sp, #80]
   166f8:	ldp	x29, x30, [sp], #96
   166fc:	ret
   16700:	cbz	w22, 16730 <htab_find_slot_with_hash@@Base+0x260>
   16704:	ldr	x0, [x24, #40]
   16708:	ldp	x19, x20, [sp, #16]
   1670c:	add	x0, x0, #0x1
   16710:	ldp	x27, x28, [sp, #80]
   16714:	str	x0, [x24, #40]
   16718:	mov	x0, x23
   1671c:	ldp	x21, x22, [sp, #32]
   16720:	ldp	x23, x24, [sp, #48]
   16724:	ldp	x25, x26, [sp, #64]
   16728:	ldp	x29, x30, [sp], #96
   1672c:	ret
   16730:	ldp	x19, x20, [sp, #16]
   16734:	ldp	x27, x28, [sp, #80]
   16738:	mov	x23, #0x0                   	// #0
   1673c:	mov	x0, x23
   16740:	ldp	x21, x22, [sp, #32]
   16744:	ldp	x23, x24, [sp, #48]
   16748:	ldp	x25, x26, [sp, #64]
   1674c:	ldp	x29, x30, [sp], #96
   16750:	ret
   16754:	mov	x23, x2
   16758:	b	16704 <htab_find_slot_with_hash@@Base+0x234>
   1675c:	nop

0000000000016760 <htab_find_slot@@Base>:
   16760:	stp	x29, x30, [sp, #-48]!
   16764:	mov	x29, sp
   16768:	stp	x19, x20, [sp, #16]
   1676c:	mov	x19, x0
   16770:	mov	x20, x1
   16774:	mov	x0, x1
   16778:	ldr	x1, [x19]
   1677c:	str	x21, [sp, #32]
   16780:	mov	w21, w2
   16784:	blr	x1
   16788:	mov	w2, w0
   1678c:	mov	w3, w21
   16790:	mov	x1, x20
   16794:	mov	x0, x19
   16798:	ldp	x19, x20, [sp, #16]
   1679c:	ldr	x21, [sp, #32]
   167a0:	ldp	x29, x30, [sp], #48
   167a4:	b	53e0 <htab_find_slot_with_hash@plt>

00000000000167a8 <htab_remove_elt_with_hash@@Base>:
   167a8:	stp	x29, x30, [sp, #-32]!
   167ac:	mov	w3, #0x0                   	// #0
   167b0:	mov	x29, sp
   167b4:	stp	x19, x20, [sp, #16]
   167b8:	mov	x19, x0
   167bc:	bl	53e0 <htab_find_slot_with_hash@plt>
   167c0:	cbz	x0, 167ec <htab_remove_elt_with_hash@@Base+0x44>
   167c4:	ldr	x1, [x19, #16]
   167c8:	mov	x20, x0
   167cc:	cbz	x1, 167d8 <htab_remove_elt_with_hash@@Base+0x30>
   167d0:	ldr	x0, [x0]
   167d4:	blr	x1
   167d8:	ldr	x0, [x19, #48]
   167dc:	mov	x1, #0x1                   	// #1
   167e0:	str	x1, [x20]
   167e4:	add	x0, x0, x1
   167e8:	str	x0, [x19, #48]
   167ec:	ldp	x19, x20, [sp, #16]
   167f0:	ldp	x29, x30, [sp], #32
   167f4:	ret

00000000000167f8 <htab_remove_elt@@Base>:
   167f8:	stp	x29, x30, [sp, #-32]!
   167fc:	mov	x29, sp
   16800:	stp	x19, x20, [sp, #16]
   16804:	mov	x19, x0
   16808:	mov	x20, x1
   1680c:	mov	x0, x1
   16810:	ldr	x1, [x19]
   16814:	blr	x1
   16818:	mov	w2, w0
   1681c:	mov	x1, x20
   16820:	mov	x0, x19
   16824:	ldp	x19, x20, [sp, #16]
   16828:	ldp	x29, x30, [sp], #32
   1682c:	b	5530 <htab_remove_elt_with_hash@plt>

0000000000016830 <htab_clear_slot@@Base>:
   16830:	stp	x29, x30, [sp, #-32]!
   16834:	mov	x29, sp
   16838:	stp	x19, x20, [sp, #16]
   1683c:	mov	x20, x1
   16840:	ldr	x1, [x0, #24]
   16844:	cmp	x1, x20
   16848:	b.hi	16898 <htab_clear_slot@@Base+0x68>  // b.pmore
   1684c:	mov	x19, x0
   16850:	ldr	x0, [x0, #32]
   16854:	add	x0, x1, x0, lsl #3
   16858:	cmp	x20, x0
   1685c:	b.cs	16898 <htab_clear_slot@@Base+0x68>  // b.hs, b.nlast
   16860:	ldr	x0, [x20]
   16864:	cmp	x0, #0x1
   16868:	b.ls	16898 <htab_clear_slot@@Base+0x68>  // b.plast
   1686c:	ldr	x1, [x19, #16]
   16870:	cbz	x1, 16878 <htab_clear_slot@@Base+0x48>
   16874:	blr	x1
   16878:	ldr	x0, [x19, #48]
   1687c:	mov	x1, #0x1                   	// #1
   16880:	str	x1, [x20]
   16884:	add	x0, x0, x1
   16888:	str	x0, [x19, #48]
   1688c:	ldp	x19, x20, [sp, #16]
   16890:	ldp	x29, x30, [sp], #32
   16894:	ret
   16898:	bl	56a0 <abort@plt>
   1689c:	nop

00000000000168a0 <htab_traverse_noresize@@Base>:
   168a0:	stp	x29, x30, [sp, #-48]!
   168a4:	mov	x29, sp
   168a8:	stp	x19, x20, [sp, #16]
   168ac:	mov	x20, x2
   168b0:	stp	x21, x22, [sp, #32]
   168b4:	mov	x22, x1
   168b8:	ldp	x19, x21, [x0, #24]
   168bc:	add	x21, x19, x21, lsl #3
   168c0:	ldr	x3, [x19]
   168c4:	mov	x0, x19
   168c8:	mov	x1, x20
   168cc:	add	x19, x19, #0x8
   168d0:	cmp	x3, #0x1
   168d4:	b.ls	168e0 <htab_traverse_noresize@@Base+0x40>  // b.plast
   168d8:	blr	x22
   168dc:	cbz	w0, 168e8 <htab_traverse_noresize@@Base+0x48>
   168e0:	cmp	x21, x19
   168e4:	b.hi	168c0 <htab_traverse_noresize@@Base+0x20>  // b.pmore
   168e8:	ldp	x19, x20, [sp, #16]
   168ec:	ldp	x21, x22, [sp, #32]
   168f0:	ldp	x29, x30, [sp], #48
   168f4:	ret

00000000000168f8 <htab_traverse@@Base>:
   168f8:	stp	x29, x30, [sp, #-48]!
   168fc:	mov	x5, #0x20                  	// #32
   16900:	mov	x29, sp
   16904:	ldp	x4, x3, [x0, #32]
   16908:	ldr	x6, [x0, #48]
   1690c:	str	x19, [sp, #16]
   16910:	mov	x19, x0
   16914:	sub	x3, x3, x6
   16918:	lsl	x3, x3, #3
   1691c:	cmp	x3, x5
   16920:	csel	x3, x3, x5, cs  // cs = hs, nlast
   16924:	cmp	x4, x3
   16928:	b.hi	1693c <htab_traverse@@Base+0x44>  // b.pmore
   1692c:	mov	x0, x19
   16930:	ldr	x19, [sp, #16]
   16934:	ldp	x29, x30, [sp], #48
   16938:	b	55b0 <htab_traverse_noresize@plt>
   1693c:	stp	x1, x2, [sp, #32]
   16940:	bl	15b68 <reconcat@@Base+0x230>
   16944:	mov	x0, x19
   16948:	ldr	x19, [sp, #16]
   1694c:	ldp	x1, x2, [sp, #32]
   16950:	ldp	x29, x30, [sp], #48
   16954:	b	55b0 <htab_traverse_noresize@plt>

0000000000016958 <htab_collisions@@Base>:
   16958:	ldr	w1, [x0, #56]
   1695c:	movi	d0, #0x0
   16960:	cbz	w1, 16974 <htab_collisions@@Base+0x1c>
   16964:	ldr	w0, [x0, #60]
   16968:	ucvtf	d1, w1
   1696c:	ucvtf	d0, w0
   16970:	fdiv	d0, d0, d1
   16974:	ret

0000000000016978 <htab_hash_string@@Base>:
   16978:	mov	x2, x0
   1697c:	mov	w0, #0x0                   	// #0
   16980:	ldrb	w1, [x2], #1
   16984:	cbz	w1, 169a0 <htab_hash_string@@Base+0x28>
   16988:	mov	w3, #0x43                  	// #67
   1698c:	nop
   16990:	madd	w0, w0, w3, w1
   16994:	ldrb	w1, [x2], #1
   16998:	sub	w0, w0, #0x71
   1699c:	cbnz	w1, 16990 <htab_hash_string@@Base+0x18>
   169a0:	ret
   169a4:	nop

00000000000169a8 <iterative_hash@@Base>:
   169a8:	mov	w8, #0x79b9                	// #31161
   169ac:	mov	w5, w1
   169b0:	movk	w8, #0x9e37, lsl #16
   169b4:	tst	x0, #0x3
   169b8:	mov	w7, w8
   169bc:	b.eq	16be8 <iterative_hash@@Base+0x240>  // b.none
   169c0:	cmp	w1, #0xb
   169c4:	b.ls	16aac <iterative_hash@@Base+0x104>  // b.plast
   169c8:	ldrb	w3, [x0, #10]
   169cc:	sub	w5, w5, #0xc
   169d0:	ldrb	w10, [x0, #6]
   169d4:	cmp	w5, #0xb
   169d8:	ldrb	w4, [x0, #5]
   169dc:	ldrb	w9, [x0, #7]
   169e0:	lsl	w6, w3, #16
   169e4:	ldrb	w13, [x0, #4]
   169e8:	lsl	w10, w10, #16
   169ec:	ldrb	w3, [x0, #9]
   169f0:	add	w4, w10, w4, lsl #8
   169f4:	ldrb	w11, [x0, #11]
   169f8:	ldrb	w12, [x0, #8]
   169fc:	add	w9, w13, w9, lsl #24
   16a00:	ldrb	w10, [x0, #2]
   16a04:	add	w3, w6, w3, lsl #8
   16a08:	add	w4, w4, w9
   16a0c:	ldrb	w6, [x0, #1]
   16a10:	ldrb	w9, [x0, #3]
   16a14:	add	w11, w12, w11, lsl #24
   16a18:	ldrb	w12, [x0], #12
   16a1c:	add	w3, w3, w11
   16a20:	lsl	w10, w10, #16
   16a24:	add	w2, w3, w2
   16a28:	add	w4, w4, w8
   16a2c:	add	w6, w10, w6, lsl #8
   16a30:	add	w3, w12, w9, lsl #24
   16a34:	add	w8, w4, w2
   16a38:	add	w6, w6, w3
   16a3c:	sub	w3, w4, w2
   16a40:	sub	w4, w6, w8
   16a44:	add	w4, w4, w7
   16a48:	eor	w4, w4, w2, lsr #13
   16a4c:	sub	w3, w3, w4
   16a50:	sub	w2, w2, w4
   16a54:	eor	w3, w3, w4, lsl #8
   16a58:	sub	w2, w2, w3
   16a5c:	sub	w4, w4, w3
   16a60:	eor	w2, w2, w3, lsr #13
   16a64:	sub	w4, w4, w2
   16a68:	sub	w3, w3, w2
   16a6c:	eor	w4, w4, w2, lsr #12
   16a70:	sub	w3, w3, w4
   16a74:	sub	w2, w2, w4
   16a78:	eor	w3, w3, w4, lsl #16
   16a7c:	sub	w2, w2, w3
   16a80:	sub	w4, w4, w3
   16a84:	eor	w2, w2, w3, lsr #5
   16a88:	sub	w4, w4, w2
   16a8c:	sub	w3, w3, w2
   16a90:	eor	w7, w4, w2, lsr #3
   16a94:	sub	w3, w3, w7
   16a98:	sub	w2, w2, w7
   16a9c:	eor	w8, w3, w7, lsl #10
   16aa0:	sub	w2, w2, w8
   16aa4:	eor	w2, w2, w8, lsr #15
   16aa8:	b.hi	169c8 <iterative_hash@@Base+0x20>  // b.pmore
   16aac:	add	w2, w2, w1
   16ab0:	cmp	w5, #0x6
   16ab4:	b.eq	16af8 <iterative_hash@@Base+0x150>  // b.none
   16ab8:	b.ls	16b04 <iterative_hash@@Base+0x15c>  // b.plast
   16abc:	cmp	w5, #0x9
   16ac0:	b.eq	16ae0 <iterative_hash@@Base+0x138>  // b.none
   16ac4:	b.ls	16bcc <iterative_hash@@Base+0x224>  // b.plast
   16ac8:	cmp	w5, #0xa
   16acc:	b.eq	16ad8 <iterative_hash@@Base+0x130>  // b.none
   16ad0:	ldrb	w1, [x0, #10]
   16ad4:	add	w2, w2, w1, lsl #24
   16ad8:	ldrb	w1, [x0, #9]
   16adc:	add	w2, w2, w1, lsl #16
   16ae0:	ldrb	w1, [x0, #8]
   16ae4:	add	w2, w2, w1, lsl #8
   16ae8:	ldrb	w1, [x0, #7]
   16aec:	add	w8, w8, w1, lsl #24
   16af0:	ldrb	w1, [x0, #6]
   16af4:	add	w8, w8, w1, lsl #16
   16af8:	ldrb	w1, [x0, #5]
   16afc:	add	w8, w8, w1, lsl #8
   16b00:	b	16b20 <iterative_hash@@Base+0x178>
   16b04:	cmp	w5, #0x3
   16b08:	b.eq	16b30 <iterative_hash@@Base+0x188>  // b.none
   16b0c:	b.ls	16bb8 <iterative_hash@@Base+0x210>  // b.plast
   16b10:	cmp	w5, #0x4
   16b14:	b.eq	16b28 <iterative_hash@@Base+0x180>  // b.none
   16b18:	cmp	w5, #0x5
   16b1c:	b.ne	16b48 <iterative_hash@@Base+0x1a0>  // b.any
   16b20:	ldrb	w1, [x0, #4]
   16b24:	add	w8, w8, w1
   16b28:	ldrb	w1, [x0, #3]
   16b2c:	add	w7, w7, w1, lsl #24
   16b30:	ldrb	w1, [x0, #2]
   16b34:	add	w7, w7, w1, lsl #16
   16b38:	ldrb	w1, [x0, #1]
   16b3c:	add	w7, w7, w1, lsl #8
   16b40:	ldrb	w0, [x0]
   16b44:	add	w7, w7, w0
   16b48:	add	w4, w8, w2
   16b4c:	sub	w3, w8, w2
   16b50:	sub	w4, w7, w4
   16b54:	eor	w7, w4, w2, lsr #13
   16b58:	sub	w3, w3, w7
   16b5c:	sub	w2, w2, w7
   16b60:	eor	w3, w3, w7, lsl #8
   16b64:	sub	w2, w2, w3
   16b68:	sub	w0, w7, w3
   16b6c:	eor	w2, w2, w3, lsr #13
   16b70:	sub	w0, w0, w2
   16b74:	sub	w1, w3, w2
   16b78:	eor	w0, w0, w2, lsr #12
   16b7c:	sub	w1, w1, w0
   16b80:	sub	w2, w2, w0
   16b84:	eor	w1, w1, w0, lsl #16
   16b88:	sub	w2, w2, w1
   16b8c:	sub	w0, w0, w1
   16b90:	eor	w2, w2, w1, lsr #5
   16b94:	sub	w0, w0, w2
   16b98:	sub	w1, w1, w2
   16b9c:	eor	w0, w0, w2, lsr #3
   16ba0:	sub	w1, w1, w0
   16ba4:	sub	w2, w2, w0
   16ba8:	eor	w0, w1, w0, lsl #10
   16bac:	sub	w2, w2, w0
   16bb0:	eor	w0, w2, w0, lsr #15
   16bb4:	ret
   16bb8:	cmp	w5, #0x1
   16bbc:	b.eq	16b40 <iterative_hash@@Base+0x198>  // b.none
   16bc0:	cmp	w5, #0x2
   16bc4:	b.eq	16b38 <iterative_hash@@Base+0x190>  // b.none
   16bc8:	b	16b48 <iterative_hash@@Base+0x1a0>
   16bcc:	cmp	w5, #0x7
   16bd0:	b.eq	16af0 <iterative_hash@@Base+0x148>  // b.none
   16bd4:	cmp	w5, #0x8
   16bd8:	b.ne	16b48 <iterative_hash@@Base+0x1a0>  // b.any
   16bdc:	ldrb	w1, [x0, #7]
   16be0:	add	w8, w8, w1, lsl #24
   16be4:	b	16af0 <iterative_hash@@Base+0x148>
   16be8:	cmp	w1, #0xb
   16bec:	b.ls	16aac <iterative_hash@@Base+0x104>  // b.plast
   16bf0:	ldp	w4, w3, [x0]
   16bf4:	sub	w5, w5, #0xc
   16bf8:	ldr	w6, [x0, #8]
   16bfc:	cmp	w5, #0xb
   16c00:	add	w3, w8, w3
   16c04:	add	w4, w7, w4
   16c08:	add	w2, w2, w6
   16c0c:	add	x0, x0, #0xc
   16c10:	add	w6, w3, w2
   16c14:	sub	w3, w3, w2
   16c18:	sub	w4, w4, w6
   16c1c:	eor	w4, w4, w2, lsr #13
   16c20:	sub	w3, w3, w4
   16c24:	sub	w2, w2, w4
   16c28:	eor	w3, w3, w4, lsl #8
   16c2c:	sub	w2, w2, w3
   16c30:	sub	w4, w4, w3
   16c34:	eor	w2, w2, w3, lsr #13
   16c38:	sub	w4, w4, w2
   16c3c:	sub	w3, w3, w2
   16c40:	eor	w4, w4, w2, lsr #12
   16c44:	sub	w3, w3, w4
   16c48:	sub	w2, w2, w4
   16c4c:	eor	w3, w3, w4, lsl #16
   16c50:	sub	w2, w2, w3
   16c54:	sub	w4, w4, w3
   16c58:	eor	w2, w2, w3, lsr #5
   16c5c:	sub	w4, w4, w2
   16c60:	sub	w3, w3, w2
   16c64:	eor	w7, w4, w2, lsr #3
   16c68:	sub	w3, w3, w7
   16c6c:	sub	w2, w2, w7
   16c70:	eor	w8, w3, w7, lsl #10
   16c74:	sub	w2, w2, w8
   16c78:	eor	w2, w2, w8, lsr #15
   16c7c:	b.hi	16bf0 <iterative_hash@@Base+0x248>  // b.pmore
   16c80:	b	16aac <iterative_hash@@Base+0x104>
   16c84:	nop

0000000000016c88 <xmalloc_set_program_name@@Base>:
   16c88:	stp	x29, x30, [sp, #-32]!
   16c8c:	adrp	x2, 2d000 <xexit@@Base+0x161a0>
   16c90:	mov	x29, sp
   16c94:	str	x19, [sp, #16]
   16c98:	adrp	x19, 2d000 <xexit@@Base+0x161a0>
   16c9c:	str	x0, [x2, #1504]
   16ca0:	ldr	x1, [x19, #1864]
   16ca4:	cbz	x1, 16cb4 <xmalloc_set_program_name@@Base+0x2c>
   16ca8:	ldr	x19, [sp, #16]
   16cac:	ldp	x29, x30, [sp], #32
   16cb0:	ret
   16cb4:	mov	x0, #0x0                   	// #0
   16cb8:	bl	5520 <sbrk@plt>
   16cbc:	str	x0, [x19, #1864]
   16cc0:	ldr	x19, [sp, #16]
   16cc4:	ldp	x29, x30, [sp], #32
   16cc8:	ret
   16ccc:	nop

0000000000016cd0 <xmalloc_failed@@Base>:
   16cd0:	stp	x29, x30, [sp, #-32]!
   16cd4:	adrp	x1, 2d000 <xexit@@Base+0x161a0>
   16cd8:	mov	x29, sp
   16cdc:	stp	x19, x20, [sp, #16]
   16ce0:	mov	x19, x0
   16ce4:	mov	x0, #0x0                   	// #0
   16ce8:	ldr	x20, [x1, #1864]
   16cec:	cbz	x20, 16d40 <xmalloc_failed@@Base+0x70>
   16cf0:	bl	5520 <sbrk@plt>
   16cf4:	sub	x5, x0, x20
   16cf8:	adrp	x0, 2d000 <xexit@@Base+0x161a0>
   16cfc:	adrp	x6, 2c000 <xexit@@Base+0x151a0>
   16d00:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   16d04:	adrp	x3, 17000 <xexit@@Base+0x1a0>
   16d08:	ldr	x2, [x0, #1504]
   16d0c:	add	x1, x1, #0xa80
   16d10:	ldr	x6, [x6, #3968]
   16d14:	add	x3, x3, #0xe50
   16d18:	ldrb	w7, [x2]
   16d1c:	mov	x4, x19
   16d20:	ldr	x0, [x6]
   16d24:	cmp	w7, #0x0
   16d28:	csel	x3, x3, x1, ne  // ne = any
   16d2c:	adrp	x1, 17000 <xexit@@Base+0x1a0>
   16d30:	add	x1, x1, #0xe58
   16d34:	bl	52d0 <fprintf@plt>
   16d38:	mov	w0, #0x1                   	// #1
   16d3c:	bl	5690 <xexit@plt>
   16d40:	bl	5520 <sbrk@plt>
   16d44:	adrp	x5, 2c000 <xexit@@Base+0x151a0>
   16d48:	ldr	x5, [x5, #4000]
   16d4c:	sub	x5, x0, x5
   16d50:	b	16cf8 <xmalloc_failed@@Base+0x28>
   16d54:	nop

0000000000016d58 <xmalloc@@Base>:
   16d58:	stp	x29, x30, [sp, #-32]!
   16d5c:	cmp	x0, #0x0
   16d60:	mov	x29, sp
   16d64:	str	x19, [sp, #16]
   16d68:	csinc	x19, x0, xzr, ne  // ne = any
   16d6c:	mov	x0, x19
   16d70:	bl	5670 <malloc@plt>
   16d74:	cbz	x0, 16d84 <xmalloc@@Base+0x2c>
   16d78:	ldr	x19, [sp, #16]
   16d7c:	ldp	x29, x30, [sp], #32
   16d80:	ret
   16d84:	mov	x0, x19
   16d88:	bl	5460 <xmalloc_failed@plt>
   16d8c:	nop

0000000000016d90 <xcalloc@@Base>:
   16d90:	stp	x29, x30, [sp, #-32]!
   16d94:	cmp	x0, #0x0
   16d98:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   16d9c:	mov	x29, sp
   16da0:	stp	x19, x20, [sp, #16]
   16da4:	b.ne	16dcc <xcalloc@@Base+0x3c>  // b.any
   16da8:	mov	x19, #0x1                   	// #1
   16dac:	mov	x20, x19
   16db0:	mov	x1, x19
   16db4:	mov	x0, x20
   16db8:	bl	5260 <calloc@plt>
   16dbc:	cbz	x0, 16dd8 <xcalloc@@Base+0x48>
   16dc0:	ldp	x19, x20, [sp, #16]
   16dc4:	ldp	x29, x30, [sp], #32
   16dc8:	ret
   16dcc:	mov	x20, x0
   16dd0:	mov	x19, x1
   16dd4:	b	16db0 <xcalloc@@Base+0x20>
   16dd8:	mul	x0, x20, x19
   16ddc:	bl	5460 <xmalloc_failed@plt>

0000000000016de0 <xrealloc@@Base>:
   16de0:	stp	x29, x30, [sp, #-32]!
   16de4:	cmp	x1, #0x0
   16de8:	mov	x29, sp
   16dec:	str	x19, [sp, #16]
   16df0:	csinc	x19, x1, xzr, ne  // ne = any
   16df4:	cbz	x0, 16e10 <xrealloc@@Base+0x30>
   16df8:	mov	x1, x19
   16dfc:	bl	53b0 <realloc@plt>
   16e00:	cbz	x0, 16e1c <xrealloc@@Base+0x3c>
   16e04:	ldr	x19, [sp, #16]
   16e08:	ldp	x29, x30, [sp], #32
   16e0c:	ret
   16e10:	mov	x0, x19
   16e14:	bl	5670 <malloc@plt>
   16e18:	b	16e00 <xrealloc@@Base+0x20>
   16e1c:	mov	x0, x19
   16e20:	bl	5460 <xmalloc_failed@plt>
   16e24:	nop

0000000000016e28 <xstrdup@@Base>:
   16e28:	stp	x29, x30, [sp, #-32]!
   16e2c:	mov	x29, sp
   16e30:	stp	x19, x20, [sp, #16]
   16e34:	mov	x20, x0
   16e38:	bl	52c0 <strlen@plt>
   16e3c:	add	x19, x0, #0x1
   16e40:	mov	x0, x19
   16e44:	bl	55c0 <xmalloc@plt>
   16e48:	mov	x2, x19
   16e4c:	mov	x1, x20
   16e50:	ldp	x19, x20, [sp, #16]
   16e54:	ldp	x29, x30, [sp], #32
   16e58:	b	5210 <memcpy@plt>
   16e5c:	nop

0000000000016e60 <xexit@@Base>:
   16e60:	stp	x29, x30, [sp, #-32]!
   16e64:	adrp	x1, 2c000 <xexit@@Base+0x151a0>
   16e68:	mov	x29, sp
   16e6c:	ldr	x1, [x1, #3168]
   16e70:	str	x19, [sp, #16]
   16e74:	mov	w19, w0
   16e78:	ldr	x0, [x1]
   16e7c:	cbz	x0, 16e84 <xexit@@Base+0x24>
   16e80:	blr	x0
   16e84:	mov	w0, w19
   16e88:	bl	5720 <exit@plt>

Disassembly of section .fini:

0000000000016e8c <.fini>:
   16e8c:	stp	x29, x30, [sp, #-16]!
   16e90:	mov	x29, sp
   16e94:	ldp	x29, x30, [sp], #16
   16e98:	ret
