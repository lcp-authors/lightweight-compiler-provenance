
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//eval.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1e0>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp, #8]
  10:	str	x0, [sp, #24]
  14:	ldr	x0, [sp]
  18:	str	x0, [sp, #16]
  1c:	ldr	x0, [sp, #24]
  20:	add	x1, x0, #0x1
  24:	str	x1, [sp, #24]
  28:	ldr	x1, [sp, #16]
  2c:	ldrb	w1, [x1]
  30:	strb	w1, [x0]
  34:	ldr	x0, [sp, #16]
  38:	add	x1, x0, #0x1
  3c:	str	x1, [sp, #16]
  40:	ldrb	w0, [x0]
  44:	cmp	w0, #0x0
  48:	b.ne	1c <grub_mod_init-0x1c4>  // b.any
  4c:	ldr	x0, [sp, #24]
  50:	sub	x0, x0, #0x1
  54:	add	sp, sp, #0x20
  58:	ret
  5c:	stp	x29, x30, [sp, #-48]!
  60:	mov	x29, sp
  64:	str	x0, [sp, #40]
  68:	str	x1, [sp, #32]
  6c:	str	x2, [sp, #24]
  70:	str	x3, [sp, #16]
  74:	mov	w4, #0x0                   	// #0
  78:	ldr	x3, [sp, #16]
  7c:	ldr	x2, [sp, #24]
  80:	ldr	x1, [sp, #32]
  84:	ldr	x0, [sp, #40]
  88:	bl	0 <grub_register_command_prio>
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	stp	x29, x30, [sp, #-96]!
  98:	mov	x29, sp
  9c:	str	x0, [sp, #40]
  a0:	str	w1, [sp, #36]
  a4:	str	x2, [sp, #24]
  a8:	ldrsw	x0, [sp, #36]
  ac:	str	x0, [sp, #80]
  b0:	ldr	w0, [sp, #36]
  b4:	cmp	w0, #0x0
  b8:	b.ne	c4 <grub_mod_init-0x11c>  // b.any
  bc:	mov	w0, #0x0                   	// #0
  c0:	b	1cc <grub_mod_init-0x14>
  c4:	str	wzr, [sp, #92]
  c8:	b	100 <grub_mod_init-0xe0>
  cc:	ldrsw	x0, [sp, #92]
  d0:	lsl	x0, x0, #3
  d4:	ldr	x1, [sp, #24]
  d8:	add	x0, x1, x0
  dc:	ldr	x0, [x0]
  e0:	bl	0 <grub_strlen>
  e4:	mov	x1, x0
  e8:	ldr	x0, [sp, #80]
  ec:	add	x0, x0, x1
  f0:	str	x0, [sp, #80]
  f4:	ldr	w0, [sp, #92]
  f8:	add	w0, w0, #0x1
  fc:	str	w0, [sp, #92]
 100:	ldr	w1, [sp, #92]
 104:	ldr	w0, [sp, #36]
 108:	cmp	w1, w0
 10c:	b.lt	cc <grub_mod_init-0x114>  // b.tstop
 110:	ldr	x0, [sp, #80]
 114:	bl	0 <grub_malloc>
 118:	str	x0, [sp, #72]
 11c:	ldr	x0, [sp, #72]
 120:	str	x0, [sp, #64]
 124:	ldr	x0, [sp, #64]
 128:	cmp	x0, #0x0
 12c:	b.ne	144 <grub_mod_init-0x9c>  // b.any
 130:	adrp	x0, 0 <grub_mod_init-0x1e0>
 134:	add	x0, x0, #0x0
 138:	ldr	x0, [x0]
 13c:	ldr	w0, [x0]
 140:	b	1cc <grub_mod_init-0x14>
 144:	str	wzr, [sp, #92]
 148:	b	190 <grub_mod_init-0x50>
 14c:	ldrsw	x0, [sp, #92]
 150:	lsl	x0, x0, #3
 154:	ldr	x1, [sp, #24]
 158:	add	x0, x1, x0
 15c:	ldr	x0, [x0]
 160:	mov	x1, x0
 164:	ldr	x0, [sp, #72]
 168:	bl	0 <grub_mod_init-0x1e0>
 16c:	str	x0, [sp, #72]
 170:	ldr	x0, [sp, #72]
 174:	add	x1, x0, #0x1
 178:	str	x1, [sp, #72]
 17c:	mov	w1, #0x20                  	// #32
 180:	strb	w1, [x0]
 184:	ldr	w0, [sp, #92]
 188:	add	w0, w0, #0x1
 18c:	str	w0, [sp, #92]
 190:	ldr	w1, [sp, #92]
 194:	ldr	w0, [sp, #36]
 198:	cmp	w1, w0
 19c:	b.lt	14c <grub_mod_init-0x94>  // b.tstop
 1a0:	ldr	x0, [sp, #72]
 1a4:	sub	x0, x0, #0x1
 1a8:	str	x0, [sp, #72]
 1ac:	ldr	x0, [sp, #72]
 1b0:	strb	wzr, [x0]
 1b4:	ldr	x0, [sp, #64]
 1b8:	bl	0 <grub_script_execute_sourcecode>
 1bc:	str	w0, [sp, #60]
 1c0:	ldr	x0, [sp, #64]
 1c4:	bl	0 <grub_free>
 1c8:	ldr	w0, [sp, #60]
 1cc:	ldp	x29, x30, [sp], #96
 1d0:	ret
 1d4:	nop
	...

00000000000001e0 <grub_mod_init>:
 1e0:	stp	x29, x30, [sp, #-32]!
 1e4:	mov	x29, sp
 1e8:	str	x0, [sp, #24]
 1ec:	adrp	x0, 0 <grub_mod_init-0x1e0>
 1f0:	add	x0, x0, #0x0
 1f4:	ldr	x3, [x0]
 1f8:	adrp	x0, 0 <grub_mod_init-0x1e0>
 1fc:	add	x0, x0, #0x0
 200:	ldr	x2, [x0]
 204:	adrp	x0, 0 <grub_mod_init-0x1e0>
 208:	add	x0, x0, #0x0
 20c:	ldr	x1, [x0]
 210:	adrp	x0, 0 <grub_mod_init-0x1e0>
 214:	add	x0, x0, #0x0
 218:	ldr	x0, [x0]
 21c:	bl	5c <grub_mod_init-0x184>
 220:	mov	x1, x0
 224:	adrp	x0, 0 <grub_mod_init-0x1e0>
 228:	add	x0, x0, #0x0
 22c:	ldr	x0, [x0]
 230:	str	x1, [x0]
 234:	nop
 238:	ldp	x29, x30, [sp], #32
 23c:	ret
	...

0000000000000268 <grub_mod_fini>:
 268:	stp	x29, x30, [sp, #-16]!
 26c:	mov	x29, sp
 270:	adrp	x0, 0 <grub_mod_init-0x1e0>
 274:	add	x0, x0, #0x0
 278:	ldr	x0, [x0]
 27c:	ldr	x0, [x0]
 280:	bl	0 <grub_unregister_command>
 284:	nop
 288:	ldp	x29, x30, [sp], #16
 28c:	ret
	...
