
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revoutput.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000630 <.init>:
 630:	stp	x29, x30, [sp, #-16]!
 634:	mov	x29, sp
 638:	bl	6e0 <fprintf@plt+0x10>
 63c:	ldp	x29, x30, [sp], #16
 640:	ret

Disassembly of section .plt:

0000000000000650 <exit@plt-0x20>:
 650:	stp	x16, x30, [sp, #-16]!
 654:	adrp	x16, 10000 <dl_load@@Base+0xf84c>
 658:	ldr	x17, [x16, #4088]
 65c:	add	x16, x16, #0xff8
 660:	br	x17
 664:	nop
 668:	nop
 66c:	nop

0000000000000670 <exit@plt>:
 670:	adrp	x16, 11000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16]
 678:	add	x16, x16, #0x0
 67c:	br	x17

0000000000000680 <__cxa_finalize@plt>:
 680:	adrp	x16, 11000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #8]
 688:	add	x16, x16, #0x8
 68c:	br	x17

0000000000000690 <putc@plt>:
 690:	adrp	x16, 11000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #16]
 698:	add	x16, x16, #0x10
 69c:	br	x17

00000000000006a0 <__gmon_start__@plt>:
 6a0:	adrp	x16, 11000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #24]
 6a8:	add	x16, x16, #0x18
 6ac:	br	x17

00000000000006b0 <fwrite@plt>:
 6b0:	adrp	x16, 11000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #32]
 6b8:	add	x16, x16, #0x20
 6bc:	br	x17

00000000000006c0 <dcgettext@plt>:
 6c0:	adrp	x16, 11000 <exit@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #40]
 6c8:	add	x16, x16, #0x28
 6cc:	br	x17

00000000000006d0 <fprintf@plt>:
 6d0:	adrp	x16, 11000 <exit@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #48]
 6d8:	add	x16, x16, #0x30
 6dc:	br	x17

Disassembly of section .text:

00000000000006e0 <dl_load@@Base-0xd4>:
 6e0:	adrp	x0, 10000 <dl_load@@Base+0xf84c>
 6e4:	ldr	x0, [x0, #4056]
 6e8:	cbz	x0, 6f0 <fprintf@plt+0x20>
 6ec:	b	6a0 <__gmon_start__@plt>
 6f0:	ret
 6f4:	nop
 6f8:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 6fc:	add	x0, x0, #0x60
 700:	adrp	x1, 11000 <dl_load@@Base+0x1084c>
 704:	add	x1, x1, #0x60
 708:	cmp	x1, x0
 70c:	b.eq	724 <fprintf@plt+0x54>  // b.none
 710:	adrp	x1, 10000 <dl_load@@Base+0xf84c>
 714:	ldr	x1, [x1, #4032]
 718:	cbz	x1, 724 <fprintf@plt+0x54>
 71c:	mov	x16, x1
 720:	br	x16
 724:	ret
 728:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 72c:	add	x0, x0, #0x60
 730:	adrp	x1, 11000 <dl_load@@Base+0x1084c>
 734:	add	x1, x1, #0x60
 738:	sub	x1, x1, x0
 73c:	lsr	x2, x1, #63
 740:	add	x1, x2, x1, asr #3
 744:	cmp	xzr, x1, asr #1
 748:	asr	x1, x1, #1
 74c:	b.eq	764 <fprintf@plt+0x94>  // b.none
 750:	adrp	x2, 10000 <dl_load@@Base+0xf84c>
 754:	ldr	x2, [x2, #4064]
 758:	cbz	x2, 764 <fprintf@plt+0x94>
 75c:	mov	x16, x2
 760:	br	x16
 764:	ret
 768:	stp	x29, x30, [sp, #-32]!
 76c:	mov	x29, sp
 770:	str	x19, [sp, #16]
 774:	adrp	x19, 11000 <dl_load@@Base+0x1084c>
 778:	ldrb	w0, [x19, #96]
 77c:	cbnz	w0, 7a4 <fprintf@plt+0xd4>
 780:	adrp	x0, 10000 <dl_load@@Base+0xf84c>
 784:	ldr	x0, [x0, #4040]
 788:	cbz	x0, 798 <fprintf@plt+0xc8>
 78c:	adrp	x0, 11000 <dl_load@@Base+0x1084c>
 790:	ldr	x0, [x0, #56]
 794:	bl	680 <__cxa_finalize@plt>
 798:	bl	6f8 <fprintf@plt+0x28>
 79c:	mov	w0, #0x1                   	// #1
 7a0:	strb	w0, [x19, #96]
 7a4:	ldr	x19, [sp, #16]
 7a8:	ldp	x29, x30, [sp], #32
 7ac:	ret
 7b0:	b	728 <fprintf@plt+0x58>

00000000000007b4 <dl_load@@Base>:
 7b4:	stp	x29, x30, [sp, #-48]!
 7b8:	stp	x20, x19, [sp, #32]
 7bc:	adrp	x19, 11000 <dl_load@@Base+0x1084c>
 7c0:	adrp	x20, 11000 <dl_load@@Base+0x1084c>
 7c4:	str	x0, [x19, #104]
 7c8:	str	x1, [x20, #112]
 7cc:	ldr	w8, [x0]
 7d0:	str	x21, [sp, #16]
 7d4:	mov	x29, sp
 7d8:	cmp	w8, #0x2
 7dc:	b.ne	89c <dl_load@@Base+0xe8>  // b.any
 7e0:	ldr	w8, [x0, #4]
 7e4:	tbnz	w8, #31, 89c <dl_load@@Base+0xe8>
 7e8:	adrp	x21, 11000 <dl_load@@Base+0x1084c>
 7ec:	ldr	x8, [x21, #120]
 7f0:	cbz	x8, 818 <dl_load@@Base+0x64>
 7f4:	ldr	x8, [x19, #104]
 7f8:	ldr	x0, [x20, #112]
 7fc:	adrp	x1, 0 <exit@plt-0x670>
 800:	adrp	x2, 11000 <dl_load@@Base+0x1084c>
 804:	ldr	x8, [x8, #48]
 808:	add	x1, x1, #0xad7
 80c:	add	x2, x2, #0x78
 810:	blr	x8
 814:	cbz	w0, 870 <dl_load@@Base+0xbc>
 818:	mov	w21, wzr
 81c:	bl	8e4 <dl_load@@Base+0x130>
 820:	cbnz	w0, 840 <dl_load@@Base+0x8c>
 824:	ldr	x8, [x19, #104]
 828:	ldr	x0, [x20, #112]
 82c:	adrp	x1, 0 <exit@plt-0x670>
 830:	add	x1, x1, #0xb27
 834:	ldr	x8, [x8, #104]
 838:	blr	x8
 83c:	mov	w21, #0x1                   	// #1
 840:	ldr	x8, [x19, #104]
 844:	ldr	x0, [x20, #112]
 848:	adrp	x1, 0 <exit@plt-0x670>
 84c:	add	x1, x1, #0xb92
 850:	ldr	x8, [x8, #88]
 854:	blr	x8
 858:	cmp	w21, #0x0
 85c:	ldp	x20, x19, [sp, #32]
 860:	ldr	x21, [sp, #16]
 864:	cset	w0, eq  // eq = none
 868:	ldp	x29, x30, [sp], #48
 86c:	ret
 870:	ldr	x8, [x19, #104]
 874:	ldr	x0, [x20, #112]
 878:	ldr	x2, [x21, #120]
 87c:	adrp	x1, 0 <exit@plt-0x670>
 880:	ldr	x8, [x8, #104]
 884:	add	x1, x1, #0xb0b
 888:	blr	x8
 88c:	mov	w21, #0x1                   	// #1
 890:	bl	8e4 <dl_load@@Base+0x130>
 894:	cbnz	w0, 840 <dl_load@@Base+0x8c>
 898:	b	824 <dl_load@@Base+0x70>
 89c:	adrp	x20, 10000 <dl_load@@Base+0xf84c>
 8a0:	ldr	x20, [x20, #4048]
 8a4:	adrp	x0, 0 <exit@plt-0x670>
 8a8:	add	x0, x0, #0xab0
 8ac:	mov	w1, #0x27                  	// #39
 8b0:	ldr	x3, [x20]
 8b4:	mov	w2, #0x1                   	// #1
 8b8:	bl	6b0 <fwrite@plt>
 8bc:	ldr	x8, [x19, #104]
 8c0:	ldr	x0, [x20]
 8c4:	adrp	x1, 0 <exit@plt-0x670>
 8c8:	add	x1, x1, #0xad8
 8cc:	ldp	w4, w5, [x8]
 8d0:	mov	w2, #0x2                   	// #2
 8d4:	mov	w3, wzr
 8d8:	bl	6d0 <fprintf@plt>
 8dc:	mov	w0, #0x1                   	// #1
 8e0:	bl	670 <exit@plt>
 8e4:	sub	sp, sp, #0x50
 8e8:	stp	x20, x19, [sp, #64]
 8ec:	adrp	x19, 11000 <dl_load@@Base+0x1084c>
 8f0:	ldr	x8, [x19, #104]
 8f4:	stp	x29, x30, [sp, #32]
 8f8:	adrp	x20, 11000 <dl_load@@Base+0x1084c>
 8fc:	ldr	x0, [x20, #112]
 900:	ldr	x8, [x8, #64]
 904:	adrp	x1, 11000 <dl_load@@Base+0x1084c>
 908:	add	x1, x1, #0x40
 90c:	str	x21, [sp, #48]
 910:	add	x29, sp, #0x20
 914:	blr	x8
 918:	ldr	x8, [x19, #104]
 91c:	ldr	x0, [x20, #112]
 920:	adrp	x1, 0 <exit@plt-0x670>
 924:	adrp	x2, 0 <exit@plt-0x670>
 928:	ldr	x8, [x8, #168]
 92c:	add	x1, x1, #0xad7
 930:	add	x2, x2, #0xb51
 934:	mov	x4, sp
 938:	mov	w3, #0x6                   	// #6
 93c:	blr	x8
 940:	cbnz	w0, 974 <dl_load@@Base+0x1c0>
 944:	mov	x0, sp
 948:	bl	9c0 <dl_load@@Base+0x20c>
 94c:	ldr	x8, [x19, #104]
 950:	ldr	x0, [x20, #112]
 954:	adrp	x1, 0 <exit@plt-0x670>
 958:	adrp	x2, 0 <exit@plt-0x670>
 95c:	ldr	x8, [x8, #176]
 960:	add	x1, x1, #0xad7
 964:	add	x2, x2, #0xb51
 968:	mov	x3, sp
 96c:	blr	x8
 970:	cbz	w0, 98c <dl_load@@Base+0x1d8>
 974:	mov	w0, #0x1                   	// #1
 978:	ldp	x20, x19, [sp, #64]
 97c:	ldr	x21, [sp, #48]
 980:	ldp	x29, x30, [sp, #32]
 984:	add	sp, sp, #0x50
 988:	ret
 98c:	ldr	x8, [x19, #104]
 990:	ldr	x19, [x20, #112]
 994:	adrp	x1, 0 <exit@plt-0x670>
 998:	add	x1, x1, #0xb58
 99c:	ldr	x21, [x8, #104]
 9a0:	mov	w2, #0x5                   	// #5
 9a4:	mov	x0, xzr
 9a8:	bl	6c0 <dcgettext@plt>
 9ac:	mov	x1, x0
 9b0:	mov	x0, x19
 9b4:	blr	x21
 9b8:	mov	w0, wzr
 9bc:	b	978 <dl_load@@Base+0x1c4>
 9c0:	mov	w8, #0x1                   	// #1
 9c4:	str	xzr, [x0, #8]
 9c8:	str	w8, [x0]
 9cc:	str	wzr, [x0, #16]
 9d0:	ret
 9d4:	sub	sp, sp, #0x30
 9d8:	stp	x29, x30, [sp, #32]
 9dc:	add	x29, sp, #0x20
 9e0:	cbz	x0, a24 <dl_load@@Base+0x270>
 9e4:	adrp	x8, 11000 <dl_load@@Base+0x1084c>
 9e8:	ldr	x8, [x8, #104]
 9ec:	adrp	x9, 11000 <dl_load@@Base+0x1084c>
 9f0:	ldr	x0, [x9, #112]
 9f4:	adrp	x1, 0 <exit@plt-0x670>
 9f8:	ldr	x8, [x8, #168]
 9fc:	adrp	x2, 0 <exit@plt-0x670>
 a00:	add	x1, x1, #0xad7
 a04:	add	x2, x2, #0xb51
 a08:	mov	x4, sp
 a0c:	mov	w3, #0x1                   	// #1
 a10:	blr	x8
 a14:	cbz	w0, a24 <dl_load@@Base+0x270>
 a18:	ldr	d0, [sp, #8]
 a1c:	fcmp	d0, #0.0
 a20:	cset	w0, ne  // ne = any
 a24:	ldp	x29, x30, [sp, #32]
 a28:	add	sp, sp, #0x30
 a2c:	ret
 a30:	cbz	x0, a4c <dl_load@@Base+0x298>
 a34:	adrp	x9, 0 <exit@plt-0x670>
 a38:	mov	x8, x0
 a3c:	add	x9, x9, #0xa50
 a40:	mov	w0, #0x1                   	// #1
 a44:	str	x9, [x8, #40]
 a48:	str	w0, [x8, #24]
 a4c:	ret
 a50:	stp	x29, x30, [sp, #-48]!
 a54:	stp	x20, x19, [sp, #32]
 a58:	mul	x20, x2, x1
 a5c:	cmp	w20, #0x1
 a60:	stp	x22, x21, [sp, #16]
 a64:	mov	x29, sp
 a68:	b.lt	a8c <dl_load@@Base+0x2d8>  // b.tstop
 a6c:	mov	x19, x3
 a70:	sxtw	x21, w20
 a74:	sub	x22, x0, #0x1
 a78:	ldrb	w0, [x22, x21]
 a7c:	mov	x1, x19
 a80:	bl	690 <putc@plt>
 a84:	subs	x21, x21, #0x1
 a88:	b.gt	a78 <dl_load@@Base+0x2c4>
 a8c:	mov	x0, x20
 a90:	ldp	x20, x19, [sp, #32]
 a94:	ldp	x22, x21, [sp, #16]
 a98:	ldp	x29, x30, [sp], #48
 a9c:	ret

Disassembly of section .fini:

0000000000000aa0 <.fini>:
 aa0:	stp	x29, x30, [sp, #-16]!
 aa4:	mov	x29, sp
 aa8:	ldp	x29, x30, [sp], #16
 aac:	ret
