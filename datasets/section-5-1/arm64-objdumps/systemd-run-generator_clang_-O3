
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-run-generator_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400d80 <_init>:
  400d80:	stp	x29, x30, [sp, #-16]!
  400d84:	mov	x29, sp
  400d88:	bl	400fe8 <call_weak_fn>
  400d8c:	ldp	x29, x30, [sp], #16
  400d90:	ret

Disassembly of section .plt:

0000000000400d98 <__libc_start_main@plt-0x20>:
  400d98:	stp	x16, x30, [sp, #-16]!
  400d9c:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400da0:	ldr	x17, [x16, #3848]
  400da4:	add	x16, x16, #0xf08
  400da8:	br	x17
  400dac:	nop
  400db0:	nop
  400db4:	nop

0000000000400db8 <__libc_start_main@plt>:
  400db8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400dbc:	ldr	x17, [x16, #3856]
  400dc0:	add	x16, x16, #0xf10
  400dc4:	br	x17

0000000000400dc8 <abort@plt>:
  400dc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400dcc:	ldr	x17, [x16, #3864]
  400dd0:	add	x16, x16, #0xf18
  400dd4:	br	x17

0000000000400dd8 <__gmon_start__@plt>:
  400dd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400ddc:	ldr	x17, [x16, #3872]
  400de0:	add	x16, x16, #0xf20
  400de4:	br	x17

0000000000400de8 <strv_free@plt>:
  400de8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400dec:	ldr	x17, [x16, #3880]
  400df0:	add	x16, x16, #0xf28
  400df4:	br	x17

0000000000400df8 <free@plt>:
  400df8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400dfc:	ldr	x17, [x16, #3888]
  400e00:	add	x16, x16, #0xf30
  400e04:	br	x17

0000000000400e08 <log_setup_generator@plt>:
  400e08:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e0c:	ldr	x17, [x16, #3896]
  400e10:	add	x16, x16, #0xf38
  400e14:	br	x17

0000000000400e18 <log_get_max_level_realm@plt>:
  400e18:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e1c:	ldr	x17, [x16, #3904]
  400e20:	add	x16, x16, #0xf40
  400e24:	br	x17

0000000000400e28 <log_internal_realm@plt>:
  400e28:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e2c:	ldr	x17, [x16, #3912]
  400e30:	add	x16, x16, #0xf48
  400e34:	br	x17

0000000000400e38 <log_assert_failed_realm@plt>:
  400e38:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e3c:	ldr	x17, [x16, #3920]
  400e40:	add	x16, x16, #0xf50
  400e44:	br	x17

0000000000400e48 <proc_cmdline_parse@plt>:
  400e48:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e4c:	ldr	x17, [x16, #3928]
  400e50:	add	x16, x16, #0xf58
  400e54:	br	x17

0000000000400e58 <ask_password_agent_close@plt>:
  400e58:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e5c:	ldr	x17, [x16, #3936]
  400e60:	add	x16, x16, #0xf60
  400e64:	br	x17

0000000000400e68 <polkit_agent_close@plt>:
  400e68:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e6c:	ldr	x17, [x16, #3944]
  400e70:	add	x16, x16, #0xf68
  400e74:	br	x17

0000000000400e78 <pager_close@plt>:
  400e78:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e7c:	ldr	x17, [x16, #3952]
  400e80:	add	x16, x16, #0xf70
  400e84:	br	x17

0000000000400e88 <mac_selinux_finish@plt>:
  400e88:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e8c:	ldr	x17, [x16, #3960]
  400e90:	add	x16, x16, #0xf78
  400e94:	br	x17

0000000000400e98 <proc_cmdline_key_streq@plt>:
  400e98:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400e9c:	ldr	x17, [x16, #3968]
  400ea0:	add	x16, x16, #0xf80
  400ea4:	br	x17

0000000000400ea8 <strv_extend@plt>:
  400ea8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400eac:	ldr	x17, [x16, #3976]
  400eb0:	add	x16, x16, #0xf88
  400eb4:	br	x17

0000000000400eb8 <free_and_strdup@plt>:
  400eb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400ebc:	ldr	x17, [x16, #3984]
  400ec0:	add	x16, x16, #0xf90
  400ec4:	br	x17

0000000000400ec8 <log_oom_internal@plt>:
  400ec8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400ecc:	ldr	x17, [x16, #3992]
  400ed0:	add	x16, x16, #0xf98
  400ed4:	br	x17

0000000000400ed8 <strlen@plt>:
  400ed8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400edc:	ldr	x17, [x16, #4000]
  400ee0:	add	x16, x16, #0xfa0
  400ee4:	br	x17

0000000000400ee8 <stpcpy@plt>:
  400ee8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400eec:	ldr	x17, [x16, #4008]
  400ef0:	add	x16, x16, #0xfa8
  400ef4:	br	x17

0000000000400ef8 <fopen64@plt>:
  400ef8:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400efc:	ldr	x17, [x16, #4016]
  400f00:	add	x16, x16, #0xfb0
  400f04:	br	x17

0000000000400f08 <fwrite@plt>:
  400f08:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400f0c:	ldr	x17, [x16, #4024]
  400f10:	add	x16, x16, #0xfb8
  400f14:	br	x17

0000000000400f18 <strcmp_ptr@plt>:
  400f18:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400f1c:	ldr	x17, [x16, #4032]
  400f20:	add	x16, x16, #0xfc0
  400f24:	br	x17

0000000000400f28 <fprintf@plt>:
  400f28:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400f2c:	ldr	x17, [x16, #4040]
  400f30:	add	x16, x16, #0xfc8
  400f34:	br	x17

0000000000400f38 <strreplace@plt>:
  400f38:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400f3c:	ldr	x17, [x16, #4048]
  400f40:	add	x16, x16, #0xfd0
  400f44:	br	x17

0000000000400f48 <fflush_and_check@plt>:
  400f48:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400f4c:	ldr	x17, [x16, #4056]
  400f50:	add	x16, x16, #0xfd8
  400f54:	br	x17

0000000000400f58 <__errno_location@plt>:
  400f58:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400f5c:	ldr	x17, [x16, #4064]
  400f60:	add	x16, x16, #0xfe0
  400f64:	br	x17

0000000000400f68 <write_string_file_ts@plt>:
  400f68:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400f6c:	ldr	x17, [x16, #4072]
  400f70:	add	x16, x16, #0xfe8
  400f74:	br	x17

0000000000400f78 <symlink@plt>:
  400f78:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400f7c:	ldr	x17, [x16, #4080]
  400f80:	add	x16, x16, #0xff0
  400f84:	br	x17

0000000000400f88 <safe_fclose@plt>:
  400f88:	adrp	x16, 41f000 <__FRAME_END__+0x1d0e0>
  400f8c:	ldr	x17, [x16, #4088]
  400f90:	add	x16, x16, #0xff8
  400f94:	br	x17

Disassembly of section .text:

0000000000400f98 <_start>:
  400f98:	mov	x29, #0x0                   	// #0
  400f9c:	mov	x30, #0x0                   	// #0
  400fa0:	mov	x5, x0
  400fa4:	ldr	x1, [sp]
  400fa8:	add	x2, sp, #0x8
  400fac:	mov	x6, sp
  400fb0:	movz	x0, #0x0, lsl #48
  400fb4:	movk	x0, #0x0, lsl #32
  400fb8:	movk	x0, #0x40, lsl #16
  400fbc:	movk	x0, #0x10c4
  400fc0:	movz	x3, #0x0, lsl #48
  400fc4:	movk	x3, #0x0, lsl #32
  400fc8:	movk	x3, #0x40, lsl #16
  400fcc:	movk	x3, #0x18a0
  400fd0:	movz	x4, #0x0, lsl #48
  400fd4:	movk	x4, #0x0, lsl #32
  400fd8:	movk	x4, #0x40, lsl #16
  400fdc:	movk	x4, #0x1920
  400fe0:	bl	400db8 <__libc_start_main@plt>
  400fe4:	bl	400dc8 <abort@plt>

0000000000400fe8 <call_weak_fn>:
  400fe8:	adrp	x0, 41f000 <__FRAME_END__+0x1d0e0>
  400fec:	ldr	x0, [x0, #3808]
  400ff0:	cbz	x0, 400ff8 <call_weak_fn+0x10>
  400ff4:	b	400dd8 <__gmon_start__@plt>
  400ff8:	ret
  400ffc:	udf	#0

0000000000401000 <deregister_tm_clones>:
  401000:	adrp	x0, 420000 <completed.8445>
  401004:	add	x0, x0, #0x0
  401008:	adrp	x1, 420000 <completed.8445>
  40100c:	add	x1, x1, #0x0
  401010:	cmp	x1, x0
  401014:	b.eq	40102c <deregister_tm_clones+0x2c>  // b.none
  401018:	adrp	x1, 401000 <deregister_tm_clones>
  40101c:	ldr	x1, [x1, #2360]
  401020:	cbz	x1, 40102c <deregister_tm_clones+0x2c>
  401024:	mov	x16, x1
  401028:	br	x16
  40102c:	ret

0000000000401030 <register_tm_clones>:
  401030:	adrp	x0, 420000 <completed.8445>
  401034:	add	x0, x0, #0x0
  401038:	adrp	x1, 420000 <completed.8445>
  40103c:	add	x1, x1, #0x0
  401040:	sub	x1, x1, x0
  401044:	lsr	x2, x1, #63
  401048:	add	x1, x2, x1, asr #3
  40104c:	cmp	xzr, x1, asr #1
  401050:	asr	x1, x1, #1
  401054:	b.eq	40106c <register_tm_clones+0x3c>  // b.none
  401058:	adrp	x2, 401000 <deregister_tm_clones>
  40105c:	ldr	x2, [x2, #2368]
  401060:	cbz	x2, 40106c <register_tm_clones+0x3c>
  401064:	mov	x16, x2
  401068:	br	x16
  40106c:	ret

0000000000401070 <__do_global_dtors_aux>:
  401070:	stp	x29, x30, [sp, #-32]!
  401074:	mov	x29, sp
  401078:	str	x19, [sp, #16]
  40107c:	adrp	x19, 420000 <completed.8445>
  401080:	ldrb	w0, [x19]
  401084:	cbnz	w0, 401094 <__do_global_dtors_aux+0x24>
  401088:	bl	401000 <deregister_tm_clones>
  40108c:	mov	w0, #0x1                   	// #1
  401090:	strb	w0, [x19]
  401094:	ldr	x19, [sp, #16]
  401098:	ldp	x29, x30, [sp], #32
  40109c:	ret

00000000004010a0 <frame_dummy>:
  4010a0:	b	401030 <register_tm_clones>

00000000004010a4 <__unique_prefix_static_destructor_wrapper0>:
  4010a4:	ldr	x0, [x0]
  4010a8:	cbz	x0, 4010b0 <__unique_prefix_static_destructor_wrapper0+0xc>
  4010ac:	b	400de8 <strv_free@plt>
  4010b0:	ret

00000000004010b4 <__unique_prefix_static_destructor_wrapper1>:
  4010b4:	ldr	x0, [x0]
  4010b8:	b	400df8 <free@plt>

00000000004010bc <__unique_prefix_static_destructor_wrapper2>:
  4010bc:	ldr	x0, [x0]
  4010c0:	b	400df8 <free@plt>

00000000004010c4 <main>:
  4010c4:	stp	x29, x30, [sp, #-48]!
  4010c8:	adrp	x8, 420000 <completed.8445>
  4010cc:	adrp	x9, 420000 <completed.8445>
  4010d0:	str	x21, [sp, #16]
  4010d4:	stp	x20, x19, [sp, #32]
  4010d8:	mov	x29, sp
  4010dc:	mov	x19, x1
  4010e0:	mov	w20, w0
  4010e4:	str	w0, [x8, #40]
  4010e8:	str	x1, [x9, #48]
  4010ec:	bl	400e08 <log_setup_generator@plt>
  4010f0:	cmp	w20, #0x2
  4010f4:	b.lt	401148 <main+0x84>  // b.tstop
  4010f8:	cmp	w20, #0x4
  4010fc:	b.eq	401148 <main+0x84>  // b.none
  401100:	mov	w0, wzr
  401104:	bl	400e18 <log_get_max_level_realm@plt>
  401108:	cmp	w0, #0x3
  40110c:	b.lt	401254 <main+0x190>  // b.tstop
  401110:	ldp	x20, x19, [sp, #32]
  401114:	ldr	x21, [sp, #16]
  401118:	adrp	x2, 401000 <deregister_tm_clones>
  40111c:	adrp	x4, 401000 <deregister_tm_clones>
  401120:	adrp	x5, 401000 <deregister_tm_clones>
  401124:	mov	w1, #0x16                  	// #22
  401128:	add	x2, x2, #0x94b
  40112c:	add	x4, x4, #0x96d
  401130:	add	x5, x5, #0x972
  401134:	mov	w0, #0x3                   	// #3
  401138:	movk	w1, #0x4000, lsl #16
  40113c:	mov	w3, #0x8a                  	// #138
  401140:	ldp	x29, x30, [sp], #48
  401144:	b	400e28 <log_internal_realm@plt>
  401148:	cmp	w20, #0x1
  40114c:	b.le	401184 <main+0xc0>
  401150:	ldr	x8, [x19, #8]
  401154:	adrp	x9, 420000 <completed.8445>
  401158:	str	x8, [x9, #32]
  40115c:	cbnz	x8, 401194 <main+0xd0>
  401160:	adrp	x1, 401000 <deregister_tm_clones>
  401164:	adrp	x2, 401000 <deregister_tm_clones>
  401168:	adrp	x4, 401000 <deregister_tm_clones>
  40116c:	add	x1, x1, #0x9a3
  401170:	add	x2, x2, #0x94b
  401174:	add	x4, x4, #0x9b3
  401178:	mov	w3, #0x81                  	// #129
  40117c:	mov	w0, wzr
  401180:	bl	400e38 <log_assert_failed_realm@plt>
  401184:	adrp	x9, 401000 <deregister_tm_clones>
  401188:	adrp	x8, 420000 <completed.8445>
  40118c:	add	x9, x9, #0x99e
  401190:	str	x9, [x8, #32]
  401194:	adrp	x0, 401000 <deregister_tm_clones>
  401198:	add	x0, x0, #0x268
  40119c:	mov	w2, #0x5                   	// #5
  4011a0:	mov	x1, xzr
  4011a4:	bl	400e48 <proc_cmdline_parse@plt>
  4011a8:	tbz	w0, #31, 4011e8 <main+0x124>
  4011ac:	mov	w19, w0
  4011b0:	mov	w0, wzr
  4011b4:	bl	400e18 <log_get_max_level_realm@plt>
  4011b8:	cmp	w0, #0x4
  4011bc:	b.lt	4011e8 <main+0x124>  // b.tstop
  4011c0:	adrp	x2, 401000 <deregister_tm_clones>
  4011c4:	adrp	x4, 401000 <deregister_tm_clones>
  4011c8:	adrp	x5, 401000 <deregister_tm_clones>
  4011cc:	add	x2, x2, #0x94b
  4011d0:	add	x4, x4, #0x9e5
  4011d4:	add	x5, x5, #0x9e9
  4011d8:	mov	w0, #0x4                   	// #4
  4011dc:	mov	w3, #0x85                  	// #133
  4011e0:	mov	w1, w19
  4011e4:	bl	400e28 <log_internal_realm@plt>
  4011e8:	bl	4013c4 <generate>
  4011ec:	mov	w19, w0
  4011f0:	bl	400e58 <ask_password_agent_close@plt>
  4011f4:	bl	400e68 <polkit_agent_close@plt>
  4011f8:	bl	400e78 <pager_close@plt>
  4011fc:	bl	400e88 <mac_selinux_finish@plt>
  401200:	adrp	x8, 41f000 <__FRAME_END__+0x1d0e0>
  401204:	ldr	x8, [x8, #3816]
  401208:	adrp	x20, 41f000 <__FRAME_END__+0x1d0e0>
  40120c:	ldr	x20, [x20, #3824]
  401210:	add	x9, x8, #0x7
  401214:	and	x21, x9, #0xfffffffffffffff8
  401218:	cmp	x21, x20
  40121c:	cset	w9, cs  // cs = hs, nlast
  401220:	cmp	x8, #0x0
  401224:	cset	w8, eq  // eq = none
  401228:	orr	w8, w8, w9
  40122c:	tbnz	w8, #0, 401240 <main+0x17c>
  401230:	ldp	x0, x8, [x21], #16
  401234:	blr	x8
  401238:	cmp	x21, x20
  40123c:	b.cc	401230 <main+0x16c>  // b.lo, b.ul, b.last
  401240:	lsr	w0, w19, #31
  401244:	ldp	x20, x19, [sp, #32]
  401248:	ldr	x21, [sp, #16]
  40124c:	ldp	x29, x30, [sp], #48
  401250:	ret
  401254:	mov	w0, #0xffffffea            	// #-22
  401258:	ldp	x20, x19, [sp, #32]
  40125c:	ldr	x21, [sp, #16]
  401260:	ldp	x29, x30, [sp], #48
  401264:	ret

0000000000401268 <parse>:
  401268:	stp	x29, x30, [sp, #-32]!
  40126c:	stp	x20, x19, [sp, #16]
  401270:	mov	x20, x1
  401274:	adrp	x1, 401000 <deregister_tm_clones>
  401278:	add	x1, x1, #0xa1b
  40127c:	mov	x29, sp
  401280:	mov	x19, x0
  401284:	bl	400e98 <proc_cmdline_key_streq@plt>
  401288:	tbz	w0, #0, 4012b4 <parse+0x4c>
  40128c:	cbz	x20, 401354 <parse+0xec>
  401290:	adrp	x0, 420000 <completed.8445>
  401294:	add	x0, x0, #0x8
  401298:	mov	x1, x20
  40129c:	bl	400ea8 <strv_extend@plt>
  4012a0:	tbnz	w0, #31, 4013a0 <parse+0x138>
  4012a4:	ldp	x20, x19, [sp, #16]
  4012a8:	mov	w0, wzr
  4012ac:	ldp	x29, x30, [sp], #32
  4012b0:	ret
  4012b4:	adrp	x1, 401000 <deregister_tm_clones>
  4012b8:	add	x1, x1, #0xa2d
  4012bc:	mov	x0, x19
  4012c0:	bl	400e98 <proc_cmdline_key_streq@plt>
  4012c4:	tbz	w0, #0, 401304 <parse+0x9c>
  4012c8:	cbz	x20, 401354 <parse+0xec>
  4012cc:	adrp	x0, 420000 <completed.8445>
  4012d0:	add	x0, x0, #0x10
  4012d4:	mov	x1, x20
  4012d8:	bl	400eb8 <free_and_strdup@plt>
  4012dc:	tbz	w0, #31, 4012a4 <parse+0x3c>
  4012e0:	adrp	x1, 401000 <deregister_tm_clones>
  4012e4:	adrp	x3, 401000 <deregister_tm_clones>
  4012e8:	add	x1, x1, #0x94b
  4012ec:	add	x3, x3, #0xa27
  4012f0:	mov	w2, #0x2a                  	// #42
  4012f4:	ldp	x20, x19, [sp, #16]
  4012f8:	mov	w0, wzr
  4012fc:	ldp	x29, x30, [sp], #32
  401300:	b	400ec8 <log_oom_internal@plt>
  401304:	adrp	x1, 401000 <deregister_tm_clones>
  401308:	add	x1, x1, #0xa48
  40130c:	mov	x0, x19
  401310:	bl	400e98 <proc_cmdline_key_streq@plt>
  401314:	tbz	w0, #0, 4012a4 <parse+0x3c>
  401318:	cbz	x20, 401354 <parse+0xec>
  40131c:	adrp	x0, 420000 <completed.8445>
  401320:	add	x0, x0, #0x18
  401324:	mov	x1, x20
  401328:	bl	400eb8 <free_and_strdup@plt>
  40132c:	tbz	w0, #31, 4012a4 <parse+0x3c>
  401330:	adrp	x1, 401000 <deregister_tm_clones>
  401334:	adrp	x3, 401000 <deregister_tm_clones>
  401338:	add	x1, x1, #0x94b
  40133c:	add	x3, x3, #0xa27
  401340:	mov	w2, #0x32                  	// #50
  401344:	ldp	x20, x19, [sp, #16]
  401348:	mov	w0, wzr
  40134c:	ldp	x29, x30, [sp], #32
  401350:	b	400ec8 <log_oom_internal@plt>
  401354:	mov	w0, wzr
  401358:	bl	400e18 <log_get_max_level_realm@plt>
  40135c:	cmp	w0, #0x4
  401360:	b.lt	4012a4 <parse+0x3c>  // b.tstop
  401364:	adrp	x2, 401000 <deregister_tm_clones>
  401368:	adrp	x4, 401000 <deregister_tm_clones>
  40136c:	adrp	x5, 401000 <deregister_tm_clones>
  401370:	add	x2, x2, #0xa66
  401374:	add	x4, x4, #0xa7f
  401378:	add	x5, x5, #0xa9a
  40137c:	mov	w0, #0x4                   	// #4
  401380:	mov	w3, #0x21                  	// #33
  401384:	mov	w1, wzr
  401388:	mov	x6, x19
  40138c:	bl	400e28 <log_internal_realm@plt>
  401390:	ldp	x20, x19, [sp, #16]
  401394:	mov	w0, wzr
  401398:	ldp	x29, x30, [sp], #32
  40139c:	ret
  4013a0:	adrp	x1, 401000 <deregister_tm_clones>
  4013a4:	adrp	x3, 401000 <deregister_tm_clones>
  4013a8:	add	x1, x1, #0x94b
  4013ac:	add	x3, x3, #0xa27
  4013b0:	mov	w2, #0x22                  	// #34
  4013b4:	ldp	x20, x19, [sp, #16]
  4013b8:	mov	w0, wzr
  4013bc:	ldp	x29, x30, [sp], #32
  4013c0:	b	400ec8 <log_oom_internal@plt>

00000000004013c4 <generate>:
  4013c4:	stp	x29, x30, [sp, #-80]!
  4013c8:	stp	x22, x21, [sp, #48]
  4013cc:	adrp	x22, 420000 <completed.8445>
  4013d0:	ldr	x8, [x22, #8]
  4013d4:	stp	x26, x25, [sp, #16]
  4013d8:	stp	x24, x23, [sp, #32]
  4013dc:	stp	x20, x19, [sp, #64]
  4013e0:	mov	x29, sp
  4013e4:	cbz	x8, 401404 <generate+0x40>
  4013e8:	ldr	x8, [x8]
  4013ec:	cmp	x8, #0x0
  4013f0:	cset	w8, eq  // eq = none
  4013f4:	adrp	x21, 420000 <completed.8445>
  4013f8:	ldr	x9, [x21, #16]
  4013fc:	cbz	x9, 401414 <generate+0x50>
  401400:	b	401424 <generate+0x60>
  401404:	mov	w8, #0x1                   	// #1
  401408:	adrp	x21, 420000 <completed.8445>
  40140c:	ldr	x9, [x21, #16]
  401410:	cbnz	x9, 401424 <generate+0x60>
  401414:	cbz	w8, 401424 <generate+0x60>
  401418:	mov	x19, xzr
  40141c:	mov	w21, wzr
  401420:	b	401804 <generate+0x440>
  401424:	adrp	x25, 420000 <completed.8445>
  401428:	ldr	x19, [x25, #32]
  40142c:	cbz	x19, 401484 <generate+0xc0>
  401430:	mov	x0, x19
  401434:	bl	400ed8 <strlen@plt>
  401438:	add	x8, x0, #0x1d
  40143c:	cmp	x8, #0x400, lsl #12
  401440:	b.hi	401834 <generate+0x470>  // b.pmore
  401444:	add	x8, x8, #0xf
  401448:	mov	x9, sp
  40144c:	and	x8, x8, #0xfffffffffffffff0
  401450:	sub	x20, x9, x8
  401454:	mov	sp, x20
  401458:	mov	x0, x20
  40145c:	mov	x1, x19
  401460:	bl	400ee8 <stpcpy@plt>
  401464:	adrp	x8, 401000 <deregister_tm_clones>
  401468:	add	x8, x8, #0xad9
  40146c:	ldr	q0, [x8]
  401470:	ldur	q1, [x8, #13]
  401474:	add	x8, x0, #0x1c
  401478:	str	q0, [x0]
  40147c:	stur	q1, [x0, #13]
  401480:	b	401490 <generate+0xcc>
  401484:	sub	x20, sp, #0x10
  401488:	mov	sp, x20
  40148c:	mov	x8, x20
  401490:	adrp	x1, 401000 <deregister_tm_clones>
  401494:	add	x1, x1, #0xb28
  401498:	mov	x0, x20
  40149c:	strb	wzr, [x8]
  4014a0:	bl	400ef8 <fopen64@plt>
  4014a4:	cbz	x0, 401610 <generate+0x24c>
  4014a8:	mov	x19, x0
  4014ac:	adrp	x0, 401000 <deregister_tm_clones>
  4014b0:	add	x0, x0, #0xb57
  4014b4:	mov	w1, #0xac                  	// #172
  4014b8:	mov	w2, #0x1                   	// #1
  4014bc:	mov	x3, x19
  4014c0:	bl	400f08 <fwrite@plt>
  4014c4:	ldr	x21, [x21, #16]
  4014c8:	adrp	x1, 401000 <deregister_tm_clones>
  4014cc:	add	x1, x1, #0xc04
  4014d0:	mov	x0, x21
  4014d4:	bl	400f18 <strcmp_ptr@plt>
  4014d8:	adrp	x23, 401000 <deregister_tm_clones>
  4014dc:	add	x23, x23, #0xc1b
  4014e0:	cbz	w0, 4014fc <generate+0x138>
  4014e4:	cmp	x21, #0x0
  4014e8:	adrp	x1, 401000 <deregister_tm_clones>
  4014ec:	csel	x2, x23, x21, eq  // eq = none
  4014f0:	add	x1, x1, #0xc09
  4014f4:	mov	x0, x19
  4014f8:	bl	400f28 <fprintf@plt>
  4014fc:	adrp	x8, 420000 <completed.8445>
  401500:	ldr	x21, [x8, #24]
  401504:	adrp	x1, 401000 <deregister_tm_clones>
  401508:	add	x1, x1, #0xc04
  40150c:	mov	x0, x21
  401510:	bl	400f18 <strcmp_ptr@plt>
  401514:	cbz	w0, 401530 <generate+0x16c>
  401518:	cmp	x21, #0x0
  40151c:	adrp	x1, 401000 <deregister_tm_clones>
  401520:	csel	x2, x23, x21, eq  // eq = none
  401524:	add	x1, x1, #0xc20
  401528:	mov	x0, x19
  40152c:	bl	400f28 <fprintf@plt>
  401530:	adrp	x0, 401000 <deregister_tm_clones>
  401534:	add	x0, x0, #0xc32
  401538:	mov	w1, #0x37                  	// #55
  40153c:	mov	w2, #0x1                   	// #1
  401540:	mov	x3, x19
  401544:	bl	400f08 <fwrite@plt>
  401548:	ldr	x8, [x22, #8]
  40154c:	cbz	x8, 4015a8 <generate+0x1e4>
  401550:	ldr	x0, [x8]
  401554:	cbz	x0, 4015a8 <generate+0x1e4>
  401558:	adrp	x21, 401000 <deregister_tm_clones>
  40155c:	adrp	x22, 401000 <deregister_tm_clones>
  401560:	adrp	x23, 401000 <deregister_tm_clones>
  401564:	add	x26, x8, #0x8
  401568:	add	x21, x21, #0xe13
  40156c:	add	x22, x22, #0xe15
  401570:	add	x23, x23, #0xc6a
  401574:	mov	x1, x21
  401578:	mov	x2, x22
  40157c:	bl	400f38 <strreplace@plt>
  401580:	cbz	x0, 4016ac <generate+0x2e8>
  401584:	mov	x24, x0
  401588:	mov	x0, x19
  40158c:	mov	x1, x23
  401590:	mov	x2, x24
  401594:	bl	400f28 <fprintf@plt>
  401598:	mov	x0, x24
  40159c:	bl	400df8 <free@plt>
  4015a0:	ldr	x0, [x26], #8
  4015a4:	cbnz	x0, 401574 <generate+0x1b0>
  4015a8:	mov	x0, x19
  4015ac:	bl	400f48 <fflush_and_check@plt>
  4015b0:	tbnz	w0, #31, 401660 <generate+0x29c>
  4015b4:	ldr	x21, [x25, #32]
  4015b8:	cbz	x21, 4016c8 <generate+0x304>
  4015bc:	mov	x0, x21
  4015c0:	bl	400ed8 <strlen@plt>
  4015c4:	add	x8, x0, #0x1c
  4015c8:	cmp	x8, #0x400, lsl #12
  4015cc:	b.hi	401858 <generate+0x494>  // b.pmore
  4015d0:	add	x8, x8, #0xf
  4015d4:	mov	x9, sp
  4015d8:	and	x8, x8, #0xfffffffffffffff0
  4015dc:	sub	x20, x9, x8
  4015e0:	mov	sp, x20
  4015e4:	mov	x0, x20
  4015e8:	mov	x1, x21
  4015ec:	bl	400ee8 <stpcpy@plt>
  4015f0:	adrp	x8, 401000 <deregister_tm_clones>
  4015f4:	add	x8, x8, #0xc99
  4015f8:	ldr	q0, [x8]
  4015fc:	ldur	q1, [x8, #12]
  401600:	add	x8, x0, #0x1b
  401604:	str	q0, [x0]
  401608:	stur	q1, [x0, #12]
  40160c:	b	4016d4 <generate+0x310>
  401610:	bl	400f58 <__errno_location@plt>
  401614:	ldr	w21, [x0]
  401618:	mov	w0, wzr
  40161c:	bl	400e18 <log_get_max_level_realm@plt>
  401620:	cmp	w0, #0x3
  401624:	b.lt	401698 <generate+0x2d4>  // b.tstop
  401628:	adrp	x2, 401000 <deregister_tm_clones>
  40162c:	adrp	x4, 401000 <deregister_tm_clones>
  401630:	adrp	x5, 401000 <deregister_tm_clones>
  401634:	add	x2, x2, #0x94b
  401638:	add	x4, x4, #0xb2c
  40163c:	add	x5, x5, #0xb35
  401640:	mov	w0, #0x3                   	// #3
  401644:	mov	w3, #0x44                  	// #68
  401648:	mov	w1, w21
  40164c:	mov	x6, x20
  401650:	bl	400e28 <log_internal_realm@plt>
  401654:	mov	w21, w0
  401658:	mov	x19, xzr
  40165c:	b	401804 <generate+0x440>
  401660:	mov	w21, w0
  401664:	mov	w0, wzr
  401668:	bl	400e18 <log_get_max_level_realm@plt>
  40166c:	cmp	w0, #0x3
  401670:	b.lt	401780 <generate+0x3bc>  // b.tstop
  401674:	adrp	x2, 401000 <deregister_tm_clones>
  401678:	adrp	x4, 401000 <deregister_tm_clones>
  40167c:	adrp	x5, 401000 <deregister_tm_clones>
  401680:	add	x2, x2, #0x94b
  401684:	add	x4, x4, #0xb2c
  401688:	add	x5, x5, #0xc78
  40168c:	mov	w0, #0x3                   	// #3
  401690:	mov	w3, #0x65                  	// #101
  401694:	b	4017f4 <generate+0x430>
  401698:	mov	w8, wzr
  40169c:	mov	x19, xzr
  4016a0:	cmp	w21, #0x0
  4016a4:	cneg	w9, w21, mi  // mi = first
  4016a8:	b	401788 <generate+0x3c4>
  4016ac:	adrp	x1, 401000 <deregister_tm_clones>
  4016b0:	adrp	x3, 401000 <deregister_tm_clones>
  4016b4:	add	x1, x1, #0x94b
  4016b8:	add	x3, x3, #0xb2c
  4016bc:	mov	w2, #0x5e                  	// #94
  4016c0:	bl	400ec8 <log_oom_internal@plt>
  4016c4:	b	401800 <generate+0x43c>
  4016c8:	sub	x20, sp, #0x10
  4016cc:	mov	sp, x20
  4016d0:	mov	x8, x20
  4016d4:	adrp	x1, 401000 <deregister_tm_clones>
  4016d8:	add	x1, x1, #0xcb5
  4016dc:	mov	w2, #0x41                  	// #65
  4016e0:	mov	x0, x20
  4016e4:	mov	x3, xzr
  4016e8:	strb	wzr, [x8]
  4016ec:	bl	400f68 <write_string_file_ts@plt>
  4016f0:	tbnz	w0, #31, 401748 <generate+0x384>
  4016f4:	ldr	x21, [x25, #32]
  4016f8:	cbz	x21, 401790 <generate+0x3cc>
  4016fc:	mov	x0, x21
  401700:	bl	400ed8 <strlen@plt>
  401704:	add	x8, x0, #0x10
  401708:	cmp	x8, #0x400, lsl #12
  40170c:	b.hi	40187c <generate+0x4b8>  // b.pmore
  401710:	add	x8, x8, #0xf
  401714:	mov	x9, sp
  401718:	and	x8, x8, #0xfffffffffffffff0
  40171c:	sub	x20, x9, x8
  401720:	mov	sp, x20
  401724:	mov	x0, x20
  401728:	mov	x1, x21
  40172c:	bl	400ee8 <stpcpy@plt>
  401730:	adrp	x8, 401000 <deregister_tm_clones>
  401734:	add	x8, x8, #0xda9
  401738:	ldr	q0, [x8]
  40173c:	add	x8, x0, #0xf
  401740:	str	q0, [x0]
  401744:	b	40179c <generate+0x3d8>
  401748:	mov	w21, w0
  40174c:	mov	w0, wzr
  401750:	bl	400e18 <log_get_max_level_realm@plt>
  401754:	cmp	w0, #0x3
  401758:	b.lt	401780 <generate+0x3bc>  // b.tstop
  40175c:	adrp	x2, 401000 <deregister_tm_clones>
  401760:	adrp	x4, 401000 <deregister_tm_clones>
  401764:	adrp	x5, 401000 <deregister_tm_clones>
  401768:	add	x2, x2, #0x94b
  40176c:	add	x4, x4, #0xb2c
  401770:	add	x5, x5, #0xb35
  401774:	mov	w0, #0x3                   	// #3
  401778:	mov	w3, #0x74                  	// #116
  40177c:	b	4017f4 <generate+0x430>
  401780:	mov	w8, wzr
  401784:	neg	w9, w21
  401788:	sub	w21, w8, w9, uxtb
  40178c:	b	401804 <generate+0x440>
  401790:	sub	x20, sp, #0x10
  401794:	mov	sp, x20
  401798:	mov	x8, x20
  40179c:	adrp	x0, 401000 <deregister_tm_clones>
  4017a0:	add	x0, x0, #0xdb9
  4017a4:	mov	x1, x20
  4017a8:	strb	wzr, [x8]
  4017ac:	bl	400f78 <symlink@plt>
  4017b0:	tbnz	w0, #31, 4017bc <generate+0x3f8>
  4017b4:	mov	w21, wzr
  4017b8:	b	401804 <generate+0x440>
  4017bc:	bl	400f58 <__errno_location@plt>
  4017c0:	ldr	w21, [x0]
  4017c4:	mov	w0, wzr
  4017c8:	bl	400e18 <log_get_max_level_realm@plt>
  4017cc:	cmp	w0, #0x3
  4017d0:	b.lt	40182c <generate+0x468>  // b.tstop
  4017d4:	adrp	x2, 401000 <deregister_tm_clones>
  4017d8:	adrp	x4, 401000 <deregister_tm_clones>
  4017dc:	adrp	x5, 401000 <deregister_tm_clones>
  4017e0:	add	x2, x2, #0x94b
  4017e4:	add	x4, x4, #0xb2c
  4017e8:	add	x5, x5, #0xdd4
  4017ec:	mov	w0, #0x3                   	// #3
  4017f0:	mov	w3, #0x79                  	// #121
  4017f4:	mov	w1, w21
  4017f8:	mov	x6, x20
  4017fc:	bl	400e28 <log_internal_realm@plt>
  401800:	mov	w21, w0
  401804:	mov	x0, x19
  401808:	bl	400f88 <safe_fclose@plt>
  40180c:	mov	w0, w21
  401810:	mov	sp, x29
  401814:	ldp	x20, x19, [sp, #64]
  401818:	ldp	x22, x21, [sp, #48]
  40181c:	ldp	x24, x23, [sp, #32]
  401820:	ldp	x26, x25, [sp, #16]
  401824:	ldp	x29, x30, [sp], #80
  401828:	ret
  40182c:	mov	w8, wzr
  401830:	b	4016a0 <generate+0x2dc>
  401834:	adrp	x1, 401000 <deregister_tm_clones>
  401838:	adrp	x2, 401000 <deregister_tm_clones>
  40183c:	adrp	x4, 401000 <deregister_tm_clones>
  401840:	add	x1, x1, #0xb09
  401844:	add	x2, x2, #0x94b
  401848:	add	x4, x4, #0xaf6
  40184c:	mov	w3, #0x41                  	// #65
  401850:	mov	w0, wzr
  401854:	bl	400e38 <log_assert_failed_realm@plt>
  401858:	adrp	x1, 401000 <deregister_tm_clones>
  40185c:	adrp	x2, 401000 <deregister_tm_clones>
  401860:	adrp	x4, 401000 <deregister_tm_clones>
  401864:	add	x1, x1, #0xb09
  401868:	add	x2, x2, #0x94b
  40186c:	add	x4, x4, #0xaf6
  401870:	mov	w3, #0x68                  	// #104
  401874:	mov	w0, wzr
  401878:	bl	400e38 <log_assert_failed_realm@plt>
  40187c:	adrp	x1, 401000 <deregister_tm_clones>
  401880:	adrp	x2, 401000 <deregister_tm_clones>
  401884:	adrp	x4, 401000 <deregister_tm_clones>
  401888:	add	x1, x1, #0xb09
  40188c:	add	x2, x2, #0x94b
  401890:	add	x4, x4, #0xaf6
  401894:	mov	w3, #0x77                  	// #119
  401898:	mov	w0, wzr
  40189c:	bl	400e38 <log_assert_failed_realm@plt>

00000000004018a0 <__libc_csu_init>:
  4018a0:	stp	x29, x30, [sp, #-64]!
  4018a4:	mov	x29, sp
  4018a8:	stp	x19, x20, [sp, #16]
  4018ac:	adrp	x20, 41f000 <__FRAME_END__+0x1d0e0>
  4018b0:	add	x20, x20, #0xcb8
  4018b4:	stp	x21, x22, [sp, #32]
  4018b8:	adrp	x21, 41f000 <__FRAME_END__+0x1d0e0>
  4018bc:	add	x21, x21, #0xcb0
  4018c0:	sub	x20, x20, x21
  4018c4:	mov	w22, w0
  4018c8:	stp	x23, x24, [sp, #48]
  4018cc:	mov	x23, x1
  4018d0:	mov	x24, x2
  4018d4:	bl	400d80 <_init>
  4018d8:	cmp	xzr, x20, asr #3
  4018dc:	b.eq	401908 <__libc_csu_init+0x68>  // b.none
  4018e0:	asr	x20, x20, #3
  4018e4:	mov	x19, #0x0                   	// #0
  4018e8:	ldr	x3, [x21, x19, lsl #3]
  4018ec:	mov	x2, x24
  4018f0:	add	x19, x19, #0x1
  4018f4:	mov	x1, x23
  4018f8:	mov	w0, w22
  4018fc:	blr	x3
  401900:	cmp	x20, x19
  401904:	b.ne	4018e8 <__libc_csu_init+0x48>  // b.any
  401908:	ldp	x19, x20, [sp, #16]
  40190c:	ldp	x21, x22, [sp, #32]
  401910:	ldp	x23, x24, [sp, #48]
  401914:	ldp	x29, x30, [sp], #64
  401918:	ret
  40191c:	nop

0000000000401920 <__libc_csu_fini>:
  401920:	ret

Disassembly of section .fini:

0000000000401924 <_fini>:
  401924:	stp	x29, x30, [sp, #-16]!
  401928:	mov	x29, sp
  40192c:	ldp	x29, x30, [sp], #16
  401930:	ret
