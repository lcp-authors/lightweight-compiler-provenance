
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libz.so.1.2.11_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002368 <.init>:
    2368:	stp	x29, x30, [sp, #-16]!
    236c:	mov	x29, sp
    2370:	bl	2670 <adler32_z@plt+0x10>
    2374:	ldp	x29, x30, [sp], #16
    2378:	ret

Disassembly of section .plt:

0000000000002380 <memcpy@plt-0x20>:
    2380:	stp	x16, x30, [sp, #-16]!
    2384:	adrp	x16, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    2388:	ldr	x17, [x16, #4088]
    238c:	add	x16, x16, #0xff8
    2390:	br	x17
    2394:	nop
    2398:	nop
    239c:	nop

00000000000023a0 <memcpy@plt>:
    23a0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16]
    23a8:	add	x16, x16, #0x0
    23ac:	br	x17

00000000000023b0 <crc32_z@plt>:
    23b0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #8]
    23b8:	add	x16, x16, #0x8
    23bc:	br	x17

00000000000023c0 <gzvprintf@plt>:
    23c0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #16]
    23c8:	add	x16, x16, #0x10
    23cc:	br	x17

00000000000023d0 <gzseek64@plt>:
    23d0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #24]
    23d8:	add	x16, x16, #0x18
    23dc:	br	x17

00000000000023e0 <strlen@plt>:
    23e0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #32]
    23e8:	add	x16, x16, #0x20
    23ec:	br	x17

00000000000023f0 <inflate@plt>:
    23f0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #40]
    23f8:	add	x16, x16, #0x28
    23fc:	br	x17

0000000000002400 <gzclose_r@plt>:
    2400:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #48]
    2408:	add	x16, x16, #0x30
    240c:	br	x17

0000000000002410 <gzgetc@plt>:
    2410:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #56]
    2418:	add	x16, x16, #0x38
    241c:	br	x17

0000000000002420 <__cxa_finalize@plt>:
    2420:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #64]
    2428:	add	x16, x16, #0x40
    242c:	br	x17

0000000000002430 <crc32@plt>:
    2430:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #72]
    2438:	add	x16, x16, #0x48
    243c:	br	x17

0000000000002440 <inflateResetKeep@plt>:
    2440:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #80]
    2448:	add	x16, x16, #0x50
    244c:	br	x17

0000000000002450 <snprintf@plt>:
    2450:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #88]
    2458:	add	x16, x16, #0x58
    245c:	br	x17

0000000000002460 <malloc@plt>:
    2460:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #96]
    2468:	add	x16, x16, #0x60
    246c:	br	x17

0000000000002470 <open@plt>:
    2470:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #104]
    2478:	add	x16, x16, #0x68
    247c:	br	x17

0000000000002480 <deflateReset@plt>:
    2480:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #112]
    2488:	add	x16, x16, #0x70
    248c:	br	x17

0000000000002490 <deflate@plt>:
    2490:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #120]
    2498:	add	x16, x16, #0x78
    249c:	br	x17

00000000000024a0 <memset@plt>:
    24a0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #128]
    24a8:	add	x16, x16, #0x80
    24ac:	br	x17

00000000000024b0 <lseek64@plt>:
    24b0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #136]
    24b8:	add	x16, x16, #0x88
    24bc:	br	x17

00000000000024c0 <gztell64@plt>:
    24c0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #144]
    24c8:	add	x16, x16, #0x90
    24cc:	br	x17

00000000000024d0 <deflateInit2_@plt>:
    24d0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #152]
    24d8:	add	x16, x16, #0x98
    24dc:	br	x17

00000000000024e0 <deflateParams@plt>:
    24e0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #160]
    24e8:	add	x16, x16, #0xa0
    24ec:	br	x17

00000000000024f0 <deflateInit_@plt>:
    24f0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #168]
    24f8:	add	x16, x16, #0xa8
    24fc:	br	x17

0000000000002500 <strerror@plt>:
    2500:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #176]
    2508:	add	x16, x16, #0xb0
    250c:	br	x17

0000000000002510 <close@plt>:
    2510:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #184]
    2518:	add	x16, x16, #0xb8
    251c:	br	x17

0000000000002520 <__gmon_start__@plt>:
    2520:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #192]
    2528:	add	x16, x16, #0xc0
    252c:	br	x17

0000000000002530 <write@plt>:
    2530:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #200]
    2538:	add	x16, x16, #0xc8
    253c:	br	x17

0000000000002540 <uncompress2@plt>:
    2540:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #208]
    2548:	add	x16, x16, #0xd0
    254c:	br	x17

0000000000002550 <inflateEnd@plt>:
    2550:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #216]
    2558:	add	x16, x16, #0xd8
    255c:	br	x17

0000000000002560 <adler32@plt>:
    2560:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #224]
    2568:	add	x16, x16, #0xe0
    256c:	br	x17

0000000000002570 <free@plt>:
    2570:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #232]
    2578:	add	x16, x16, #0xe8
    257c:	br	x17

0000000000002580 <gzclose_w@plt>:
    2580:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #240]
    2588:	add	x16, x16, #0xf0
    258c:	br	x17

0000000000002590 <deflateEnd@plt>:
    2590:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #248]
    2598:	add	x16, x16, #0xf8
    259c:	br	x17

00000000000025a0 <gzrewind@plt>:
    25a0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #256]
    25a8:	add	x16, x16, #0x100
    25ac:	br	x17

00000000000025b0 <gzoffset64@plt>:
    25b0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #264]
    25b8:	add	x16, x16, #0x108
    25bc:	br	x17

00000000000025c0 <inflateInit_@plt>:
    25c0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #272]
    25c8:	add	x16, x16, #0x110
    25cc:	br	x17

00000000000025d0 <compress2@plt>:
    25d0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #280]
    25d8:	add	x16, x16, #0x118
    25dc:	br	x17

00000000000025e0 <read@plt>:
    25e0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #288]
    25e8:	add	x16, x16, #0x120
    25ec:	br	x17

00000000000025f0 <memchr@plt>:
    25f0:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #296]
    25f8:	add	x16, x16, #0x128
    25fc:	br	x17

0000000000002600 <inflateInit2_@plt>:
    2600:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #304]
    2608:	add	x16, x16, #0x130
    260c:	br	x17

0000000000002610 <inflateReset@plt>:
    2610:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #312]
    2618:	add	x16, x16, #0x138
    261c:	br	x17

0000000000002620 <vsnprintf@plt>:
    2620:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #320]
    2628:	add	x16, x16, #0x140
    262c:	br	x17

0000000000002630 <deflateResetKeep@plt>:
    2630:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #328]
    2638:	add	x16, x16, #0x148
    263c:	br	x17

0000000000002640 <inflateReset2@plt>:
    2640:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #336]
    2648:	add	x16, x16, #0x150
    264c:	br	x17

0000000000002650 <__errno_location@plt>:
    2650:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #344]
    2658:	add	x16, x16, #0x158
    265c:	br	x17

0000000000002660 <adler32_z@plt>:
    2660:	adrp	x16, 23000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #352]
    2668:	add	x16, x16, #0x160
    266c:	br	x17

Disassembly of section .text:

0000000000002670 <adler32_z@@ZLIB_1.2.9-0x170>:
    2670:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    2674:	ldr	x0, [x0, #4048]
    2678:	cbz	x0, 2680 <adler32_z@plt+0x20>
    267c:	b	2520 <__gmon_start__@plt>
    2680:	ret
    2684:	nop
    2688:	adrp	x0, 23000 <gzclose_w@@ZLIB_1.2.3.5+0x163c4>
    268c:	add	x0, x0, #0x170
    2690:	adrp	x1, 23000 <gzclose_w@@ZLIB_1.2.3.5+0x163c4>
    2694:	add	x1, x1, #0x170
    2698:	cmp	x1, x0
    269c:	b.eq	26b4 <adler32_z@plt+0x54>  // b.none
    26a0:	adrp	x1, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    26a4:	ldr	x1, [x1, #4032]
    26a8:	cbz	x1, 26b4 <adler32_z@plt+0x54>
    26ac:	mov	x16, x1
    26b0:	br	x16
    26b4:	ret
    26b8:	adrp	x0, 23000 <gzclose_w@@ZLIB_1.2.3.5+0x163c4>
    26bc:	add	x0, x0, #0x170
    26c0:	adrp	x1, 23000 <gzclose_w@@ZLIB_1.2.3.5+0x163c4>
    26c4:	add	x1, x1, #0x170
    26c8:	sub	x1, x1, x0
    26cc:	lsr	x2, x1, #63
    26d0:	add	x1, x2, x1, asr #3
    26d4:	cmp	xzr, x1, asr #1
    26d8:	asr	x1, x1, #1
    26dc:	b.eq	26f4 <adler32_z@plt+0x94>  // b.none
    26e0:	adrp	x2, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    26e4:	ldr	x2, [x2, #4064]
    26e8:	cbz	x2, 26f4 <adler32_z@plt+0x94>
    26ec:	mov	x16, x2
    26f0:	br	x16
    26f4:	ret
    26f8:	stp	x29, x30, [sp, #-32]!
    26fc:	mov	x29, sp
    2700:	str	x19, [sp, #16]
    2704:	adrp	x19, 23000 <gzclose_w@@ZLIB_1.2.3.5+0x163c4>
    2708:	ldrb	w0, [x19, #368]
    270c:	cbnz	w0, 2734 <adler32_z@plt+0xd4>
    2710:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    2714:	ldr	x0, [x0, #4040]
    2718:	cbz	x0, 2728 <adler32_z@plt+0xc8>
    271c:	adrp	x0, 23000 <gzclose_w@@ZLIB_1.2.3.5+0x163c4>
    2720:	ldr	x0, [x0, #360]
    2724:	bl	2420 <__cxa_finalize@plt>
    2728:	bl	2688 <adler32_z@plt+0x28>
    272c:	mov	w0, #0x1                   	// #1
    2730:	strb	w0, [x19, #368]
    2734:	ldr	x19, [sp, #16]
    2738:	ldp	x29, x30, [sp], #32
    273c:	ret
    2740:	b	26b8 <adler32_z@plt+0x58>
    2744:	tbnz	x2, #63, 27d8 <adler32_z@plt+0x178>
    2748:	mov	x3, #0xfff1                	// #65521
    274c:	and	x5, x0, #0xffff
    2750:	sdiv	x4, x2, x3
    2754:	msub	x4, x4, x3, x2
    2758:	lsr	w2, w0, #16
    275c:	lsr	w0, w1, #16
    2760:	adds	x1, x5, w1, uxth
    2764:	add	x2, x2, x0
    2768:	mul	x6, x4, x5
    276c:	udiv	x0, x6, x3
    2770:	msub	x0, x0, x3, x6
    2774:	sub	x0, x0, x4
    2778:	mov	x4, #0xfff0                	// #65520
    277c:	add	x2, x2, x0
    2780:	add	x0, x2, x3
    2784:	b.eq	27d0 <adler32_z@plt+0x170>  // b.none
    2788:	sub	x3, x1, #0x1
    278c:	cmp	x3, x4
    2790:	b.ls	279c <adler32_z@plt+0x13c>  // b.plast
    2794:	mov	x5, #0xffffffffffff000e    	// #-65522
    2798:	add	x3, x1, x5
    279c:	mov	x1, #0xffe1                	// #65505
    27a0:	movk	x1, #0x1, lsl #16
    27a4:	cmp	x0, x1
    27a8:	b.ls	27b4 <adler32_z@plt+0x154>  // b.plast
    27ac:	mov	x4, #0xffffffffffff000f    	// #-65521
    27b0:	add	x0, x2, x4
    27b4:	mov	x1, #0xfff0                	// #65520
    27b8:	cmp	x0, x1
    27bc:	b.ls	27c8 <adler32_z@plt+0x168>  // b.plast
    27c0:	mov	x1, #0xffffffffffff000f    	// #-65521
    27c4:	add	x0, x0, x1
    27c8:	orr	x0, x3, x0, lsl #16
    27cc:	ret
    27d0:	mov	x3, x4
    27d4:	b	279c <adler32_z@plt+0x13c>
    27d8:	mov	x0, #0xffffffff            	// #4294967295
    27dc:	b	27cc <adler32_z@plt+0x16c>

00000000000027e0 <adler32_z@@ZLIB_1.2.9>:
    27e0:	lsr	w7, w0, #16
    27e4:	cmp	x2, #0x1
    27e8:	and	x0, x0, #0xffff
    27ec:	b.ne	282c <adler32_z@@ZLIB_1.2.9+0x4c>  // b.any
    27f0:	ldrb	w1, [x1]
    27f4:	add	x1, x1, x0
    27f8:	mov	x0, #0xfff0                	// #65520
    27fc:	cmp	x1, x0
    2800:	mov	x2, x0
    2804:	b.ls	2810 <adler32_z@@ZLIB_1.2.9+0x30>  // b.plast
    2808:	mov	x3, #0xffffffffffff000f    	// #-65521
    280c:	add	x1, x1, x3
    2810:	add	x0, x1, x7
    2814:	cmp	x0, x2
    2818:	b.ls	2824 <adler32_z@@ZLIB_1.2.9+0x44>  // b.plast
    281c:	mov	x2, #0xffffffffffff000f    	// #-65521
    2820:	add	x0, x0, x2
    2824:	orr	x0, x1, x0, lsl #16
    2828:	ret
    282c:	cbz	x1, 2ad0 <adler32_z@@ZLIB_1.2.9+0x2f0>
    2830:	cmp	x2, #0xf
    2834:	b.ls	2904 <adler32_z@@ZLIB_1.2.9+0x124>  // b.plast
    2838:	stp	x29, x30, [sp, #-64]!
    283c:	mov	x16, #0x15b0                	// #5552
    2840:	add	x1, x1, x16
    2844:	mov	x29, sp
    2848:	mov	x17, #0xffffffffffffea50    	// #-5552
    284c:	mov	x18, #0x15af                	// #5551
    2850:	mov	x15, #0xfff1                	// #65521
    2854:	stp	x19, x20, [sp, #16]
    2858:	stp	x21, x22, [sp, #32]
    285c:	str	x23, [sp, #48]
    2860:	add	x3, x1, x17
    2864:	cmp	x2, x18
    2868:	b.hi	290c <adler32_z@@ZLIB_1.2.9+0x12c>  // b.pmore
    286c:	cbz	x2, 28ac <adler32_z@@ZLIB_1.2.9+0xcc>
    2870:	and	x15, x2, #0xfffffffffffffff0
    2874:	lsr	x14, x2, #4
    2878:	add	x15, x3, x15
    287c:	cmp	x3, x15
    2880:	b.ne	29f4 <adler32_z@@ZLIB_1.2.9+0x214>  // b.any
    2884:	mov	x1, #0xfffffffffffffff0    	// #-16
    2888:	madd	x2, x14, x1, x2
    288c:	mov	x1, #0x0                   	// #0
    2890:	cmp	x1, x2
    2894:	b.ne	2abc <adler32_z@@ZLIB_1.2.9+0x2dc>  // b.any
    2898:	mov	x1, #0xfff1                	// #65521
    289c:	udiv	x2, x0, x1
    28a0:	msub	x0, x2, x1, x0
    28a4:	udiv	x2, x7, x1
    28a8:	msub	x7, x2, x1, x7
    28ac:	orr	x0, x0, x7, lsl #16
    28b0:	ldp	x19, x20, [sp, #16]
    28b4:	ldp	x21, x22, [sp, #32]
    28b8:	ldr	x23, [sp, #48]
    28bc:	ldp	x29, x30, [sp], #64
    28c0:	ret
    28c4:	ldrb	w4, [x1, x3]
    28c8:	add	x3, x3, #0x1
    28cc:	add	x0, x0, x4
    28d0:	add	x7, x7, x0
    28d4:	cmp	x2, x3
    28d8:	b.ne	28c4 <adler32_z@@ZLIB_1.2.9+0xe4>  // b.any
    28dc:	mov	x1, #0xfff0                	// #65520
    28e0:	cmp	x0, x1
    28e4:	b.ls	28f0 <adler32_z@@ZLIB_1.2.9+0x110>  // b.plast
    28e8:	mov	x1, #0xffffffffffff000f    	// #-65521
    28ec:	add	x0, x0, x1
    28f0:	mov	x4, #0xfff1                	// #65521
    28f4:	udiv	x1, x7, x4
    28f8:	msub	x1, x1, x4, x7
    28fc:	orr	x0, x0, x1, lsl #16
    2900:	ret
    2904:	mov	x3, #0x0                   	// #0
    2908:	b	28d4 <adler32_z@@ZLIB_1.2.9+0xf4>
    290c:	add	x2, x2, x17
    2910:	ldrb	w10, [x3]
    2914:	add	x3, x3, #0x10
    2918:	ldurb	w6, [x3, #-15]
    291c:	add	x10, x10, x0
    2920:	ldurb	w4, [x3, #-14]
    2924:	ldurb	w23, [x3, #-13]
    2928:	add	x6, x6, x10
    292c:	add	x4, x4, x6
    2930:	ldurb	w9, [x3, #-12]
    2934:	ldurb	w22, [x3, #-11]
    2938:	add	x23, x23, x4
    293c:	ldurb	w8, [x3, #-10]
    2940:	add	x9, x9, x23
    2944:	ldurb	w21, [x3, #-9]
    2948:	add	x22, x22, x9
    294c:	ldurb	w14, [x3, #-8]
    2950:	add	x8, x8, x22
    2954:	ldurb	w5, [x3, #-7]
    2958:	add	x21, x21, x8
    295c:	ldurb	w13, [x3, #-6]
    2960:	add	x14, x14, x21
    2964:	ldurb	w20, [x3, #-5]
    2968:	add	x5, x5, x14
    296c:	add	x13, x13, x5
    2970:	ldurb	w12, [x3, #-4]
    2974:	add	x4, x4, x23
    2978:	add	x6, x10, x6
    297c:	ldurb	w19, [x3, #-3]
    2980:	add	x20, x20, x13
    2984:	add	x6, x4, x6
    2988:	add	x9, x9, x22
    298c:	ldurb	w11, [x3, #-2]
    2990:	add	x12, x12, x20
    2994:	add	x6, x6, x9
    2998:	add	x8, x8, x21
    299c:	ldurb	w30, [x3, #-1]
    29a0:	add	x19, x19, x12
    29a4:	add	x6, x6, x8
    29a8:	add	x5, x14, x5
    29ac:	add	x11, x11, x19
    29b0:	add	x5, x6, x5
    29b4:	add	x13, x13, x20
    29b8:	add	x12, x12, x19
    29bc:	add	x5, x5, x13
    29c0:	add	x0, x30, x11
    29c4:	add	x5, x5, x12
    29c8:	add	x11, x30, x11, lsl #1
    29cc:	add	x5, x5, x11
    29d0:	cmp	x3, x1
    29d4:	add	x7, x7, x5
    29d8:	b.ne	2910 <adler32_z@@ZLIB_1.2.9+0x130>  // b.any
    29dc:	udiv	x3, x0, x15
    29e0:	add	x1, x1, x16
    29e4:	msub	x0, x3, x15, x0
    29e8:	udiv	x3, x7, x15
    29ec:	msub	x7, x3, x15, x7
    29f0:	b	2860 <adler32_z@@ZLIB_1.2.9+0x80>
    29f4:	ldrb	w1, [x3]
    29f8:	add	x3, x3, #0x10
    29fc:	ldurb	w12, [x3, #-15]
    2a00:	add	x1, x1, x0
    2a04:	ldurb	w4, [x3, #-14]
    2a08:	add	x12, x12, x1
    2a0c:	ldurb	w11, [x3, #-13]
    2a10:	add	x4, x4, x12
    2a14:	ldurb	w20, [x3, #-12]
    2a18:	add	x11, x11, x4
    2a1c:	ldurb	w10, [x3, #-11]
    2a20:	add	x20, x20, x11
    2a24:	ldurb	w19, [x3, #-10]
    2a28:	add	x10, x10, x20
    2a2c:	ldurb	w9, [x3, #-9]
    2a30:	add	x19, x19, x10
    2a34:	ldurb	w30, [x3, #-8]
    2a38:	add	x9, x9, x19
    2a3c:	ldurb	w8, [x3, #-7]
    2a40:	add	x30, x30, x9
    2a44:	ldurb	w17, [x3, #-6]
    2a48:	add	x0, x7, x1
    2a4c:	add	x8, x8, x30
    2a50:	ldurb	w6, [x3, #-5]
    2a54:	add	x4, x12, x4
    2a58:	add	x17, x17, x8
    2a5c:	add	x4, x0, x4
    2a60:	ldurb	w13, [x3, #-4]
    2a64:	add	x11, x11, x20
    2a68:	add	x6, x6, x17
    2a6c:	ldurb	w5, [x3, #-3]
    2a70:	add	x4, x4, x11
    2a74:	add	x10, x10, x19
    2a78:	ldurb	w18, [x3, #-2]
    2a7c:	add	x13, x13, x6
    2a80:	add	x4, x4, x10
    2a84:	add	x1, x9, x30
    2a88:	add	x5, x5, x13
    2a8c:	add	x1, x4, x1
    2a90:	add	x8, x8, x17
    2a94:	ldurb	w0, [x3, #-1]
    2a98:	add	x1, x1, x8
    2a9c:	add	x6, x6, x13
    2aa0:	add	x16, x18, x5
    2aa4:	add	x1, x1, x6
    2aa8:	add	x5, x18, x5, lsl #1
    2aac:	add	x0, x0, x16
    2ab0:	add	x1, x1, x5
    2ab4:	add	x7, x0, x1
    2ab8:	b	287c <adler32_z@@ZLIB_1.2.9+0x9c>
    2abc:	ldrb	w4, [x3, x1]
    2ac0:	add	x1, x1, #0x1
    2ac4:	add	x0, x0, x4
    2ac8:	add	x7, x7, x0
    2acc:	b	2890 <adler32_z@@ZLIB_1.2.9+0xb0>
    2ad0:	mov	x0, #0x1                   	// #1
    2ad4:	ret

0000000000002ad8 <adler32@@Base>:
    2ad8:	mov	w2, w2
    2adc:	b	2660 <adler32_z@plt>

0000000000002ae0 <adler32_combine@@ZLIB_1.2.2>:
    2ae0:	b	2744 <adler32_z@plt+0xe4>

0000000000002ae4 <adler32_combine64@@ZLIB_1.2.3.3>:
    2ae4:	b	2744 <adler32_z@plt+0xe4>
    2ae8:	mov	x2, x0
    2aec:	mov	x0, #0x0                   	// #0
    2af0:	cbnz	x1, 2af8 <adler32_combine64@@ZLIB_1.2.3.3+0x14>
    2af4:	ret
    2af8:	tbz	w1, #0, 2b04 <adler32_combine64@@ZLIB_1.2.3.3+0x20>
    2afc:	ldr	x3, [x2]
    2b00:	eor	x0, x0, x3
    2b04:	lsr	x1, x1, #1
    2b08:	add	x2, x2, #0x8
    2b0c:	b	2af0 <adler32_combine64@@ZLIB_1.2.3.3+0xc>
    2b10:	mov	x6, x0
    2b14:	mov	x5, x1
    2b18:	stp	x29, x30, [sp, #-16]!
    2b1c:	mov	x4, #0x0                   	// #0
    2b20:	mov	x29, sp
    2b24:	ldr	x1, [x5, x4]
    2b28:	mov	x0, x5
    2b2c:	bl	2ae8 <adler32_combine64@@ZLIB_1.2.3.3+0x4>
    2b30:	str	x0, [x6, x4]
    2b34:	add	x4, x4, #0x8
    2b38:	cmp	x4, #0x100
    2b3c:	b.ne	2b24 <adler32_combine64@@ZLIB_1.2.3.3+0x40>  // b.any
    2b40:	ldp	x29, x30, [sp], #16
    2b44:	ret
    2b48:	mov	x7, x0
    2b4c:	cmp	x2, #0x0
    2b50:	b.le	2c18 <adler32_combine64@@ZLIB_1.2.3.3+0x134>
    2b54:	sub	sp, sp, #0x210
    2b58:	mov	x0, #0x8320                	// #33568
    2b5c:	movk	x0, #0xedb8, lsl #16
    2b60:	mov	x11, x1
    2b64:	mov	x8, x2
    2b68:	add	x9, sp, #0x110
    2b6c:	stp	x29, x30, [sp]
    2b70:	mov	x29, sp
    2b74:	str	x0, [sp, #272]
    2b78:	mov	x0, #0x1                   	// #1
    2b7c:	mov	x1, x0
    2b80:	str	x1, [x9, x0, lsl #3]
    2b84:	add	x0, x0, #0x1
    2b88:	lsl	x1, x1, #1
    2b8c:	cmp	x0, #0x20
    2b90:	b.ne	2b80 <adler32_combine64@@ZLIB_1.2.3.3+0x9c>  // b.any
    2b94:	add	x10, sp, #0x10
    2b98:	mov	x1, x9
    2b9c:	mov	x0, x10
    2ba0:	bl	2b10 <adler32_combine64@@ZLIB_1.2.3.3+0x2c>
    2ba4:	mov	x1, x10
    2ba8:	mov	x0, x9
    2bac:	bl	2b10 <adler32_combine64@@ZLIB_1.2.3.3+0x2c>
    2bb0:	mov	x1, x9
    2bb4:	mov	x0, x10
    2bb8:	bl	2b10 <adler32_combine64@@ZLIB_1.2.3.3+0x2c>
    2bbc:	tbz	w8, #0, 2bd0 <adler32_combine64@@ZLIB_1.2.3.3+0xec>
    2bc0:	mov	x1, x7
    2bc4:	mov	x0, x10
    2bc8:	bl	2ae8 <adler32_combine64@@ZLIB_1.2.3.3+0x4>
    2bcc:	mov	x7, x0
    2bd0:	asr	x12, x8, #1
    2bd4:	cmp	xzr, x8, asr #1
    2bd8:	b.eq	2c04 <adler32_combine64@@ZLIB_1.2.3.3+0x120>  // b.none
    2bdc:	mov	x1, x10
    2be0:	mov	x0, x9
    2be4:	bl	2b10 <adler32_combine64@@ZLIB_1.2.3.3+0x2c>
    2be8:	tbz	w12, #0, 2bfc <adler32_combine64@@ZLIB_1.2.3.3+0x118>
    2bec:	mov	x1, x7
    2bf0:	mov	x0, x9
    2bf4:	bl	2ae8 <adler32_combine64@@ZLIB_1.2.3.3+0x4>
    2bf8:	mov	x7, x0
    2bfc:	asr	x8, x8, #2
    2c00:	cbnz	x8, 2bb0 <adler32_combine64@@ZLIB_1.2.3.3+0xcc>
    2c04:	eor	x7, x7, x11
    2c08:	mov	x0, x7
    2c0c:	ldp	x29, x30, [sp]
    2c10:	add	sp, sp, #0x210
    2c14:	ret
    2c18:	ret

0000000000002c1c <get_crc_table@@Base>:
    2c1c:	adrp	x0, c000 <gzgets@@Base+0x38>
    2c20:	add	x0, x0, #0xd20
    2c24:	ret

0000000000002c28 <crc32_z@@ZLIB_1.2.9>:
    2c28:	cbz	x1, 2f18 <crc32_z@@ZLIB_1.2.9+0x2f0>
    2c2c:	adrp	x4, c000 <gzgets@@Base+0x38>
    2c30:	mvn	w0, w0
    2c34:	add	x4, x4, #0xd20
    2c38:	cbz	x2, 2cc4 <crc32_z@@ZLIB_1.2.9+0x9c>
    2c3c:	tst	x1, #0x3
    2c40:	b.ne	2cd0 <crc32_z@@ZLIB_1.2.9+0xa8>  // b.any
    2c44:	and	x6, x2, #0xffffffffffffffe0
    2c48:	adrp	x3, c000 <gzgets@@Base+0x38>
    2c4c:	lsr	x5, x2, #5
    2c50:	add	x6, x1, x6
    2c54:	add	x3, x3, #0xd20
    2c58:	cmp	x1, x6
    2c5c:	b.ne	2cec <crc32_z@@ZLIB_1.2.9+0xc4>  // b.any
    2c60:	mov	x3, #0xffffffffffffffe0    	// #-32
    2c64:	adrp	x4, c000 <gzgets@@Base+0x38>
    2c68:	add	x4, x4, #0xd20
    2c6c:	madd	x2, x5, x3, x2
    2c70:	mov	x5, #0x0                   	// #0
    2c74:	sub	x3, x2, x5
    2c78:	cmp	x3, #0x3
    2c7c:	b.hi	2ed4 <crc32_z@@ZLIB_1.2.9+0x2ac>  // b.pmore
    2c80:	and	x3, x2, #0xfffffffffffffffc
    2c84:	lsr	x5, x2, #2
    2c88:	add	x1, x1, x3
    2c8c:	mov	x3, #0xfffffffffffffffc    	// #-4
    2c90:	madd	x2, x5, x3, x2
    2c94:	cbz	x2, 2cc4 <crc32_z@@ZLIB_1.2.9+0x9c>
    2c98:	adrp	x5, c000 <gzgets@@Base+0x38>
    2c9c:	add	x5, x5, #0xd20
    2ca0:	mov	x4, #0x0                   	// #0
    2ca4:	ldrb	w3, [x1, x4]
    2ca8:	add	x4, x4, #0x1
    2cac:	cmp	x2, x4
    2cb0:	eor	w3, w3, w0
    2cb4:	and	x3, x3, #0xff
    2cb8:	ldr	w3, [x5, x3, lsl #2]
    2cbc:	eor	w0, w3, w0, lsr #8
    2cc0:	b.ne	2ca4 <crc32_z@@ZLIB_1.2.9+0x7c>  // b.any
    2cc4:	mvn	w0, w0
    2cc8:	mov	w0, w0
    2ccc:	ret
    2cd0:	ldrb	w3, [x1], #1
    2cd4:	sub	x2, x2, #0x1
    2cd8:	eor	w3, w3, w0
    2cdc:	and	x3, x3, #0xff
    2ce0:	ldr	w3, [x4, x3, lsl #2]
    2ce4:	eor	w0, w3, w0, lsr #8
    2ce8:	b	2c38 <crc32_z@@ZLIB_1.2.9+0x10>
    2cec:	ldr	w4, [x1]
    2cf0:	add	x1, x1, #0x20
    2cf4:	eor	w0, w0, w4
    2cf8:	ubfx	x4, x0, #8, #8
    2cfc:	ubfx	x7, x0, #16, #8
    2d00:	add	x4, x4, #0x200
    2d04:	add	x7, x7, #0x100
    2d08:	ldr	w4, [x3, x4, lsl #2]
    2d0c:	ldr	w7, [x3, x7, lsl #2]
    2d10:	eor	w4, w4, w7
    2d14:	add	x7, x3, w0, uxtb #2
    2d18:	lsr	w0, w0, #24
    2d1c:	ldr	w7, [x7, #3072]
    2d20:	ldr	w0, [x3, x0, lsl #2]
    2d24:	eor	w0, w7, w0
    2d28:	eor	w4, w4, w0
    2d2c:	ldur	w0, [x1, #-28]
    2d30:	eor	w4, w4, w0
    2d34:	ubfx	x0, x4, #8, #8
    2d38:	ubfx	x7, x4, #16, #8
    2d3c:	add	x0, x0, #0x200
    2d40:	add	x7, x7, #0x100
    2d44:	ldr	w0, [x3, x0, lsl #2]
    2d48:	ldr	w7, [x3, x7, lsl #2]
    2d4c:	eor	w0, w0, w7
    2d50:	add	x7, x3, w4, uxtb #2
    2d54:	lsr	w4, w4, #24
    2d58:	ldr	w7, [x7, #3072]
    2d5c:	ldr	w4, [x3, x4, lsl #2]
    2d60:	eor	w4, w7, w4
    2d64:	eor	w0, w0, w4
    2d68:	ldur	w4, [x1, #-24]
    2d6c:	eor	w0, w0, w4
    2d70:	ubfx	x4, x0, #8, #8
    2d74:	ubfx	x7, x0, #16, #8
    2d78:	add	x4, x4, #0x200
    2d7c:	add	x7, x7, #0x100
    2d80:	ldr	w4, [x3, x4, lsl #2]
    2d84:	ldr	w7, [x3, x7, lsl #2]
    2d88:	eor	w4, w4, w7
    2d8c:	add	x7, x3, w0, uxtb #2
    2d90:	lsr	w0, w0, #24
    2d94:	ldr	w7, [x7, #3072]
    2d98:	ldr	w0, [x3, x0, lsl #2]
    2d9c:	eor	w0, w7, w0
    2da0:	eor	w4, w4, w0
    2da4:	ldur	w0, [x1, #-20]
    2da8:	eor	w4, w4, w0
    2dac:	ubfx	x0, x4, #8, #8
    2db0:	ubfx	x7, x4, #16, #8
    2db4:	add	x0, x0, #0x200
    2db8:	add	x7, x7, #0x100
    2dbc:	ldr	w0, [x3, x0, lsl #2]
    2dc0:	ldr	w7, [x3, x7, lsl #2]
    2dc4:	eor	w0, w0, w7
    2dc8:	add	x7, x3, w4, uxtb #2
    2dcc:	lsr	w4, w4, #24
    2dd0:	ldr	w7, [x7, #3072]
    2dd4:	ldr	w4, [x3, x4, lsl #2]
    2dd8:	eor	w4, w7, w4
    2ddc:	eor	w0, w0, w4
    2de0:	ldur	w4, [x1, #-16]
    2de4:	eor	w0, w0, w4
    2de8:	ubfx	x4, x0, #8, #8
    2dec:	ubfx	x7, x0, #16, #8
    2df0:	add	x4, x4, #0x200
    2df4:	add	x7, x7, #0x100
    2df8:	ldr	w4, [x3, x4, lsl #2]
    2dfc:	ldr	w7, [x3, x7, lsl #2]
    2e00:	eor	w4, w4, w7
    2e04:	add	x7, x3, w0, uxtb #2
    2e08:	lsr	w0, w0, #24
    2e0c:	ldr	w7, [x7, #3072]
    2e10:	ldr	w0, [x3, x0, lsl #2]
    2e14:	eor	w0, w7, w0
    2e18:	eor	w4, w4, w0
    2e1c:	ldur	w0, [x1, #-12]
    2e20:	eor	w4, w4, w0
    2e24:	ubfx	x0, x4, #8, #8
    2e28:	ubfx	x7, x4, #16, #8
    2e2c:	add	x0, x0, #0x200
    2e30:	add	x7, x7, #0x100
    2e34:	ldr	w0, [x3, x0, lsl #2]
    2e38:	ldr	w7, [x3, x7, lsl #2]
    2e3c:	eor	w0, w0, w7
    2e40:	add	x7, x3, w4, uxtb #2
    2e44:	lsr	w4, w4, #24
    2e48:	ldr	w7, [x7, #3072]
    2e4c:	ldr	w4, [x3, x4, lsl #2]
    2e50:	eor	w4, w7, w4
    2e54:	eor	w0, w0, w4
    2e58:	ldur	w4, [x1, #-8]
    2e5c:	eor	w0, w0, w4
    2e60:	ubfx	x4, x0, #8, #8
    2e64:	ubfx	x7, x0, #16, #8
    2e68:	add	x4, x4, #0x200
    2e6c:	add	x7, x7, #0x100
    2e70:	ldr	w4, [x3, x4, lsl #2]
    2e74:	ldr	w7, [x3, x7, lsl #2]
    2e78:	eor	w4, w4, w7
    2e7c:	add	x7, x3, w0, uxtb #2
    2e80:	lsr	w0, w0, #24
    2e84:	ldr	w7, [x7, #3072]
    2e88:	ldr	w0, [x3, x0, lsl #2]
    2e8c:	eor	w0, w7, w0
    2e90:	eor	w4, w4, w0
    2e94:	ldur	w0, [x1, #-4]
    2e98:	eor	w4, w4, w0
    2e9c:	ubfx	x0, x4, #8, #8
    2ea0:	ubfx	x7, x4, #16, #8
    2ea4:	add	x0, x0, #0x200
    2ea8:	add	x7, x7, #0x100
    2eac:	ldr	w0, [x3, x0, lsl #2]
    2eb0:	ldr	w7, [x3, x7, lsl #2]
    2eb4:	eor	w7, w0, w7
    2eb8:	add	x0, x3, w4, uxtb #2
    2ebc:	lsr	w4, w4, #24
    2ec0:	ldr	w0, [x0, #3072]
    2ec4:	ldr	w4, [x3, x4, lsl #2]
    2ec8:	eor	w0, w0, w4
    2ecc:	eor	w0, w0, w7
    2ed0:	b	2c58 <crc32_z@@ZLIB_1.2.9+0x30>
    2ed4:	ldr	w3, [x1, x5]
    2ed8:	add	x5, x5, #0x4
    2edc:	eor	w0, w0, w3
    2ee0:	ubfx	x3, x0, #8, #8
    2ee4:	ubfx	x6, x0, #16, #8
    2ee8:	add	x3, x3, #0x200
    2eec:	add	x6, x6, #0x100
    2ef0:	ldr	w3, [x4, x3, lsl #2]
    2ef4:	ldr	w6, [x4, x6, lsl #2]
    2ef8:	eor	w3, w3, w6
    2efc:	add	x6, x4, w0, uxtb #2
    2f00:	lsr	w0, w0, #24
    2f04:	ldr	w6, [x6, #3072]
    2f08:	ldr	w0, [x4, x0, lsl #2]
    2f0c:	eor	w0, w6, w0
    2f10:	eor	w0, w0, w3
    2f14:	b	2c74 <crc32_z@@ZLIB_1.2.9+0x4c>
    2f18:	mov	x0, #0x0                   	// #0
    2f1c:	b	2ccc <crc32_z@@ZLIB_1.2.9+0xa4>

0000000000002f20 <crc32@@Base>:
    2f20:	mov	w2, w2
    2f24:	b	23b0 <crc32_z@plt>

0000000000002f28 <crc32_combine@@ZLIB_1.2.2>:
    2f28:	b	2b48 <adler32_combine64@@ZLIB_1.2.3.3+0x64>

0000000000002f2c <crc32_combine64@@ZLIB_1.2.3.3>:
    2f2c:	b	2b48 <adler32_combine64@@ZLIB_1.2.3.3+0x64>
    2f30:	ldr	x2, [x0, #120]
    2f34:	ldr	w4, [x0, #132]
    2f38:	ldr	w1, [x0, #80]
    2f3c:	add	x2, x2, w4, uxtw #1
    2f40:	ldrh	w5, [x2, #-2]!
    2f44:	sub	w3, w5, w1
    2f48:	cmp	w1, w5
    2f4c:	and	w3, w3, #0xffff
    2f50:	csel	w3, w3, wzr, ls  // ls = plast
    2f54:	strh	w3, [x2]
    2f58:	subs	w4, w4, #0x1
    2f5c:	b.ne	2f40 <crc32_combine64@@ZLIB_1.2.3.3+0x14>  // b.any
    2f60:	ldr	x0, [x0, #112]
    2f64:	mov	w3, w1
    2f68:	add	x0, x0, w1, uxtw #1
    2f6c:	ldrh	w4, [x0, #-2]!
    2f70:	sub	w2, w4, w1
    2f74:	cmp	w1, w4
    2f78:	and	w2, w2, #0xffff
    2f7c:	csel	w2, w2, wzr, ls  // ls = plast
    2f80:	strh	w2, [x0]
    2f84:	subs	w3, w3, #0x1
    2f88:	b.ne	2f6c <crc32_combine64@@ZLIB_1.2.3.3+0x40>  // b.any
    2f8c:	ret
    2f90:	ldr	x3, [x0, #16]
    2f94:	ldr	x2, [x0, #40]
    2f98:	add	x4, x2, #0x1
    2f9c:	str	x4, [x0, #40]
    2fa0:	lsr	w4, w1, #8
    2fa4:	strb	w4, [x3, x2]
    2fa8:	ldr	x3, [x0, #16]
    2fac:	ldr	x2, [x0, #40]
    2fb0:	add	x4, x2, #0x1
    2fb4:	str	x4, [x0, #40]
    2fb8:	strb	w1, [x3, x2]
    2fbc:	ret
    2fc0:	ldr	x15, [x0, #96]
    2fc4:	ldr	w2, [x0, #172]
    2fc8:	ldp	w4, w14, [x0, #184]
    2fcc:	mov	w5, w2
    2fd0:	ldr	w3, [x0, #80]
    2fd4:	add	x13, x15, w2, uxtw
    2fd8:	add	w7, w2, #0x106
    2fdc:	add	x5, x5, #0x102
    2fe0:	sub	w6, w3, #0x106
    2fe4:	sub	w7, w7, w3
    2fe8:	cmp	w2, w6
    2fec:	add	x2, x13, w4, sxtw
    2ff0:	csel	w7, w7, wzr, hi  // hi = pmore
    2ff4:	ldr	w11, [x0, #88]
    2ff8:	ldr	w16, [x0, #208]
    2ffc:	add	x5, x15, x5
    3000:	ldurb	w8, [x2, #-1]
    3004:	ldr	w2, [x0, #204]
    3008:	ldrb	w9, [x13, w4, sxtw]
    300c:	cmp	w4, w2
    3010:	ldr	x10, [x0, #112]
    3014:	b.cc	301c <crc32_combine64@@ZLIB_1.2.3.3+0xf0>  // b.lo, b.ul, b.last
    3018:	lsr	w14, w14, #2
    301c:	ldr	w6, [x0, #180]
    3020:	mov	w12, #0x102                 	// #258
    3024:	cmp	w6, w16
    3028:	csel	w16, w16, w6, cs  // cs = hs, nlast
    302c:	add	x3, x15, w1, uxtw
    3030:	mov	w17, w1
    3034:	sxtw	x2, w4
    3038:	ldrb	w18, [x3, w4, sxtw]
    303c:	cmp	w18, w9
    3040:	b.ne	30cc <crc32_combine64@@ZLIB_1.2.3.3+0x1a0>  // b.any
    3044:	add	x2, x3, x2
    3048:	ldurb	w2, [x2, #-1]
    304c:	cmp	w2, w8
    3050:	b.ne	30cc <crc32_combine64@@ZLIB_1.2.3.3+0x1a0>  // b.any
    3054:	ldrb	w17, [x15, x17]
    3058:	ldrb	w2, [x13]
    305c:	cmp	w17, w2
    3060:	b.ne	30cc <crc32_combine64@@ZLIB_1.2.3.3+0x1a0>  // b.any
    3064:	ldrb	w17, [x3, #1]
    3068:	ldrb	w2, [x13, #1]
    306c:	cmp	w17, w2
    3070:	b.ne	30cc <crc32_combine64@@ZLIB_1.2.3.3+0x1a0>  // b.any
    3074:	add	x2, x13, #0x2
    3078:	add	x3, x3, #0x2
    307c:	ldrb	w18, [x2, #1]
    3080:	ldrb	w17, [x3, #1]
    3084:	cmp	w18, w17
    3088:	b.ne	3184 <crc32_combine64@@ZLIB_1.2.3.3+0x258>  // b.any
    308c:	ldrb	w18, [x2, #2]
    3090:	ldrb	w17, [x3, #2]
    3094:	cmp	w18, w17
    3098:	b.eq	30f0 <crc32_combine64@@ZLIB_1.2.3.3+0x1c4>  // b.none
    309c:	add	x2, x2, #0x2
    30a0:	sub	x2, x5, x2
    30a4:	sub	w2, w12, w2
    30a8:	cmp	w4, w2
    30ac:	b.ge	30cc <crc32_combine64@@ZLIB_1.2.3.3+0x1a0>  // b.tcont
    30b0:	str	w1, [x0, #176]
    30b4:	cmp	w2, w16
    30b8:	b.ge	318c <crc32_combine64@@ZLIB_1.2.3.3+0x260>  // b.tcont
    30bc:	add	x3, x13, w2, sxtw
    30c0:	ldrb	w9, [x13, w2, sxtw]
    30c4:	mov	w4, w2
    30c8:	ldurb	w8, [x3, #-1]
    30cc:	and	w1, w1, w11
    30d0:	ldrh	w1, [x10, x1, lsl #1]
    30d4:	cmp	w7, w1
    30d8:	b.cs	30e4 <crc32_combine64@@ZLIB_1.2.3.3+0x1b8>  // b.hs, b.nlast
    30dc:	subs	w14, w14, #0x1
    30e0:	b.ne	302c <crc32_combine64@@ZLIB_1.2.3.3+0x100>  // b.any
    30e4:	cmp	w4, w6
    30e8:	csel	w0, w4, w6, ls  // ls = plast
    30ec:	ret
    30f0:	ldrb	w18, [x2, #3]
    30f4:	ldrb	w17, [x3, #3]
    30f8:	cmp	w18, w17
    30fc:	b.eq	3108 <crc32_combine64@@ZLIB_1.2.3.3+0x1dc>  // b.none
    3100:	add	x2, x2, #0x3
    3104:	b	30a0 <crc32_combine64@@ZLIB_1.2.3.3+0x174>
    3108:	ldrb	w18, [x2, #4]
    310c:	ldrb	w17, [x3, #4]
    3110:	cmp	w18, w17
    3114:	b.eq	3120 <crc32_combine64@@ZLIB_1.2.3.3+0x1f4>  // b.none
    3118:	add	x2, x2, #0x4
    311c:	b	30a0 <crc32_combine64@@ZLIB_1.2.3.3+0x174>
    3120:	ldrb	w18, [x2, #5]
    3124:	ldrb	w17, [x3, #5]
    3128:	cmp	w18, w17
    312c:	b.eq	3138 <crc32_combine64@@ZLIB_1.2.3.3+0x20c>  // b.none
    3130:	add	x2, x2, #0x5
    3134:	b	30a0 <crc32_combine64@@ZLIB_1.2.3.3+0x174>
    3138:	ldrb	w18, [x2, #6]
    313c:	ldrb	w17, [x3, #6]
    3140:	cmp	w18, w17
    3144:	b.eq	3150 <crc32_combine64@@ZLIB_1.2.3.3+0x224>  // b.none
    3148:	add	x2, x2, #0x6
    314c:	b	30a0 <crc32_combine64@@ZLIB_1.2.3.3+0x174>
    3150:	ldrb	w18, [x2, #7]
    3154:	ldrb	w17, [x3, #7]
    3158:	cmp	w18, w17
    315c:	b.eq	3168 <crc32_combine64@@ZLIB_1.2.3.3+0x23c>  // b.none
    3160:	add	x2, x2, #0x7
    3164:	b	30a0 <crc32_combine64@@ZLIB_1.2.3.3+0x174>
    3168:	ldrb	w18, [x2, #8]!
    316c:	ldrb	w17, [x3, #8]!
    3170:	cmp	w18, w17
    3174:	b.ne	30a0 <crc32_combine64@@ZLIB_1.2.3.3+0x174>  // b.any
    3178:	cmp	x5, x2
    317c:	b.hi	307c <crc32_combine64@@ZLIB_1.2.3.3+0x150>  // b.pmore
    3180:	b	30a0 <crc32_combine64@@ZLIB_1.2.3.3+0x174>
    3184:	add	x2, x2, #0x1
    3188:	b	30a0 <crc32_combine64@@ZLIB_1.2.3.3+0x174>
    318c:	mov	w4, w2
    3190:	b	30e4 <crc32_combine64@@ZLIB_1.2.3.3+0x1b8>
    3194:	stp	x29, x30, [sp, #-48]!
    3198:	mov	x29, sp
    319c:	stp	x19, x20, [sp, #16]
    31a0:	mov	x19, x0
    31a4:	ldr	w0, [x0, #8]
    31a8:	str	x21, [sp, #32]
    31ac:	cmp	w0, w2
    31b0:	csel	w20, w0, w2, ls  // ls = plast
    31b4:	cbz	w20, 3218 <crc32_combine64@@ZLIB_1.2.3.3+0x2ec>
    31b8:	mov	x3, x1
    31bc:	sub	w0, w0, w20
    31c0:	ldr	x1, [x19]
    31c4:	str	w0, [x19, #8]
    31c8:	mov	w21, w20
    31cc:	mov	x0, x3
    31d0:	mov	x2, x21
    31d4:	bl	23a0 <memcpy@plt>
    31d8:	mov	x3, x0
    31dc:	ldr	x0, [x19, #56]
    31e0:	ldr	w0, [x0, #48]
    31e4:	cmp	w0, #0x1
    31e8:	b.ne	322c <crc32_combine64@@ZLIB_1.2.3.3+0x300>  // b.any
    31ec:	ldr	x0, [x19, #96]
    31f0:	mov	w2, w20
    31f4:	mov	x1, x3
    31f8:	bl	2560 <adler32@plt>
    31fc:	str	x0, [x19, #96]
    3200:	ldr	x0, [x19]
    3204:	ldr	x2, [x19, #16]
    3208:	add	x0, x0, x21
    320c:	str	x0, [x19]
    3210:	add	x2, x2, x21
    3214:	str	x2, [x19, #16]
    3218:	mov	w0, w20
    321c:	ldp	x19, x20, [sp, #16]
    3220:	ldr	x21, [sp, #32]
    3224:	ldp	x29, x30, [sp], #48
    3228:	ret
    322c:	cmp	w0, #0x2
    3230:	b.ne	3200 <crc32_combine64@@ZLIB_1.2.3.3+0x2d4>  // b.any
    3234:	ldr	x0, [x19, #96]
    3238:	mov	w2, w20
    323c:	mov	x1, x3
    3240:	bl	2430 <crc32@plt>
    3244:	b	31fc <crc32_combine64@@ZLIB_1.2.3.3+0x2d0>
    3248:	stp	x29, x30, [sp, #-48]!
    324c:	mov	x29, sp
    3250:	stp	x21, x22, [sp, #32]
    3254:	ldr	w22, [x0, #80]
    3258:	stp	x19, x20, [sp, #16]
    325c:	mov	x19, x0
    3260:	mov	w21, w22
    3264:	ldr	w0, [x19, #80]
    3268:	ldr	x3, [x19, #104]
    326c:	add	w0, w22, w0
    3270:	ldr	w20, [x19, #180]
    3274:	sub	w0, w0, #0x106
    3278:	ldr	w1, [x19, #172]
    327c:	add	w2, w20, w22
    3280:	sub	w20, w3, w20
    3284:	cmp	w1, w0
    3288:	sub	w20, w20, w1
    328c:	b.cc	32d4 <crc32_combine64@@ZLIB_1.2.3.3+0x3a8>  // b.lo, b.ul, b.last
    3290:	ldr	x0, [x19, #96]
    3294:	sub	w1, w1, w3
    3298:	add	w2, w1, w2
    329c:	add	w20, w20, w22
    32a0:	add	x1, x0, x21
    32a4:	bl	23a0 <memcpy@plt>
    32a8:	ldr	w0, [x19, #176]
    32ac:	sub	w0, w0, w22
    32b0:	str	w0, [x19, #176]
    32b4:	ldr	w0, [x19, #172]
    32b8:	sub	w0, w0, w22
    32bc:	str	w0, [x19, #172]
    32c0:	ldr	x0, [x19, #152]
    32c4:	sub	x0, x0, x21
    32c8:	str	x0, [x19, #152]
    32cc:	mov	x0, x19
    32d0:	bl	2f30 <crc32_combine64@@ZLIB_1.2.3.3+0x4>
    32d4:	ldr	x0, [x19]
    32d8:	ldr	w1, [x0, #8]
    32dc:	cbz	w1, 3320 <crc32_combine64@@ZLIB_1.2.3.3+0x3f4>
    32e0:	ldr	x3, [x19, #96]
    32e4:	ldr	w2, [x19, #180]
    32e8:	ldr	w1, [x19, #172]
    32ec:	add	x1, x1, x2
    32f0:	mov	w2, w20
    32f4:	add	x1, x3, x1
    32f8:	bl	3194 <crc32_combine64@@ZLIB_1.2.3.3+0x268>
    32fc:	ldr	w1, [x19, #180]
    3300:	ldr	w2, [x19, #5932]
    3304:	add	w0, w0, w1
    3308:	str	w0, [x19, #180]
    330c:	add	w1, w0, w2
    3310:	cmp	w1, #0x2
    3314:	b.hi	3380 <crc32_combine64@@ZLIB_1.2.3.3+0x454>  // b.pmore
    3318:	cmp	w0, #0x105
    331c:	b.ls	340c <crc32_combine64@@ZLIB_1.2.3.3+0x4e0>  // b.plast
    3320:	ldr	x2, [x19, #104]
    3324:	ldr	x0, [x19, #5944]
    3328:	cmp	x0, x2
    332c:	b.cs	3370 <crc32_combine64@@ZLIB_1.2.3.3+0x444>  // b.hs, b.nlast
    3330:	ldr	w20, [x19, #172]
    3334:	ldr	w21, [x19, #180]
    3338:	add	x21, x20, x21
    333c:	cmp	x0, x21
    3340:	b.cs	341c <crc32_combine64@@ZLIB_1.2.3.3+0x4f0>  // b.hs, b.nlast
    3344:	sub	x2, x2, x21
    3348:	mov	x20, #0x102                 	// #258
    334c:	cmp	x2, #0x102
    3350:	mov	w1, #0x0                   	// #0
    3354:	ldr	x0, [x19, #96]
    3358:	csel	x20, x2, x20, ls  // ls = plast
    335c:	mov	x2, x20
    3360:	add	x20, x20, x21
    3364:	add	x0, x0, x21
    3368:	bl	24a0 <memset@plt>
    336c:	str	x20, [x19, #5944]
    3370:	ldp	x19, x20, [sp, #16]
    3374:	ldp	x21, x22, [sp, #32]
    3378:	ldp	x29, x30, [sp], #48
    337c:	ret
    3380:	ldr	w1, [x19, #172]
    3384:	ldr	x4, [x19, #96]
    3388:	sub	w3, w1, w2
    338c:	sub	w1, w1, w2
    3390:	ldp	w7, w6, [x19, #140]
    3394:	ldrb	w2, [x4, x1]
    3398:	add	w1, w3, #0x1
    339c:	str	w2, [x19, #128]
    33a0:	ldrb	w1, [x4, x1]
    33a4:	lsl	w2, w2, w6
    33a8:	eor	w1, w1, w2
    33ac:	and	w1, w1, w7
    33b0:	str	w1, [x19, #128]
    33b4:	ldr	w1, [x19, #5932]
    33b8:	cbz	w1, 3318 <crc32_combine64@@ZLIB_1.2.3.3+0x3ec>
    33bc:	add	w2, w3, #0x2
    33c0:	ldr	w5, [x19, #128]
    33c4:	ldp	x9, x8, [x19, #112]
    33c8:	sub	w1, w1, #0x1
    33cc:	ldrb	w2, [x4, x2]
    33d0:	lsl	w5, w5, w6
    33d4:	eor	w2, w2, w5
    33d8:	ldr	w5, [x19, #88]
    33dc:	and	w2, w2, w7
    33e0:	and	w5, w3, w5
    33e4:	ldrh	w10, [x8, w2, uxtw #1]
    33e8:	str	w2, [x19, #128]
    33ec:	strh	w10, [x9, x5, lsl #1]
    33f0:	strh	w3, [x8, w2, uxtw #1]
    33f4:	add	w3, w3, #0x1
    33f8:	str	w1, [x19, #5932]
    33fc:	add	w1, w0, w1
    3400:	cmp	w1, #0x2
    3404:	b.hi	33b4 <crc32_combine64@@ZLIB_1.2.3.3+0x488>  // b.pmore
    3408:	b	3318 <crc32_combine64@@ZLIB_1.2.3.3+0x3ec>
    340c:	ldr	x0, [x19]
    3410:	ldr	w0, [x0, #8]
    3414:	cbnz	w0, 3264 <crc32_combine64@@ZLIB_1.2.3.3+0x338>
    3418:	b	3320 <crc32_combine64@@ZLIB_1.2.3.3+0x3f4>
    341c:	add	x1, x21, #0x102
    3420:	cmp	x0, x1
    3424:	b.cs	3370 <crc32_combine64@@ZLIB_1.2.3.3+0x444>  // b.hs, b.nlast
    3428:	sub	x20, x21, x0
    342c:	sub	x2, x2, x0
    3430:	add	x20, x20, #0x102
    3434:	mov	w1, #0x0                   	// #0
    3438:	ldr	x3, [x19, #96]
    343c:	cmp	x2, x20
    3440:	csel	x20, x2, x20, ls  // ls = plast
    3444:	mov	w2, w20
    3448:	add	x0, x3, x0
    344c:	bl	24a0 <memset@plt>
    3450:	ldr	x2, [x19, #5944]
    3454:	add	x20, x2, x20
    3458:	b	336c <crc32_combine64@@ZLIB_1.2.3.3+0x440>
    345c:	stp	x29, x30, [sp, #-48]!
    3460:	mov	x29, sp
    3464:	stp	x19, x20, [sp, #16]
    3468:	mov	x19, x0
    346c:	ldr	x20, [x0, #56]
    3470:	stp	x21, x22, [sp, #32]
    3474:	mov	x0, x20
    3478:	bl	a42c <inflateCodesUsed@@ZLIB_1.2.9+0x15ec>
    347c:	ldr	x0, [x20, #40]
    3480:	ldr	w21, [x19, #32]
    3484:	cmp	w21, w0
    3488:	csel	w21, w21, w0, ls  // ls = plast
    348c:	cbz	w21, 34ec <crc32_combine64@@ZLIB_1.2.3.3+0x5c0>
    3490:	ldr	x0, [x19, #24]
    3494:	mov	w22, w21
    3498:	ldr	x1, [x20, #32]
    349c:	mov	x2, x22
    34a0:	bl	23a0 <memcpy@plt>
    34a4:	ldr	x0, [x19, #24]
    34a8:	ldr	x2, [x20, #40]
    34ac:	add	x0, x0, x22
    34b0:	str	x0, [x19, #24]
    34b4:	ldr	x0, [x20, #32]
    34b8:	add	x0, x0, x22
    34bc:	str	x0, [x20, #32]
    34c0:	ldr	x0, [x19, #40]
    34c4:	add	x0, x0, x22
    34c8:	str	x0, [x19, #40]
    34cc:	ldr	w0, [x19, #32]
    34d0:	sub	x22, x2, x22
    34d4:	sub	w21, w0, w21
    34d8:	str	w21, [x19, #32]
    34dc:	str	x22, [x20, #40]
    34e0:	cbnz	x22, 34ec <crc32_combine64@@ZLIB_1.2.3.3+0x5c0>
    34e4:	ldr	x0, [x20, #16]
    34e8:	str	x0, [x20, #32]
    34ec:	ldp	x19, x20, [sp, #16]
    34f0:	ldp	x21, x22, [sp, #32]
    34f4:	ldp	x29, x30, [sp], #48
    34f8:	ret
    34fc:	stp	x29, x30, [sp, #-48]!
    3500:	mov	x29, sp
    3504:	stp	x19, x20, [sp, #16]
    3508:	mov	x19, x0
    350c:	mov	w20, w1
    3510:	stp	x21, x22, [sp, #32]
    3514:	adrp	x22, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    3518:	adrp	x21, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    351c:	add	x22, x22, #0x200
    3520:	add	x21, x21, #0x3e8
    3524:	ldr	w0, [x19, #180]
    3528:	cmp	w0, #0x105
    352c:	b.ls	3734 <crc32_combine64@@ZLIB_1.2.3.3+0x808>  // b.plast
    3530:	ldr	w0, [x19, #180]
    3534:	ldr	w2, [x19, #172]
    3538:	cmp	w0, #0x2
    353c:	b.hi	3814 <crc32_combine64@@ZLIB_1.2.3.3+0x8e8>  // b.pmore
    3540:	mov	w1, #0x0                   	// #0
    3544:	ldr	w3, [x19, #176]
    3548:	ldr	w0, [x19, #160]
    354c:	str	w3, [x19, #164]
    3550:	mov	w3, #0x2                   	// #2
    3554:	str	w3, [x19, #160]
    3558:	str	w0, [x19, #184]
    355c:	cbz	w1, 35c0 <crc32_combine64@@ZLIB_1.2.3.3+0x694>
    3560:	ldr	w3, [x19, #192]
    3564:	cmp	w0, w3
    3568:	b.cs	35c0 <crc32_combine64@@ZLIB_1.2.3.3+0x694>  // b.hs, b.nlast
    356c:	ldr	w0, [x19, #80]
    3570:	sub	w2, w2, w1
    3574:	sub	w0, w0, #0x106
    3578:	cmp	w2, w0
    357c:	b.hi	35c0 <crc32_combine64@@ZLIB_1.2.3.3+0x694>  // b.pmore
    3580:	mov	x0, x19
    3584:	bl	2fc0 <crc32_combine64@@ZLIB_1.2.3.3+0x94>
    3588:	str	w0, [x19, #160]
    358c:	cmp	w0, #0x5
    3590:	b.hi	35c0 <crc32_combine64@@ZLIB_1.2.3.3+0x694>  // b.pmore
    3594:	ldr	w1, [x19, #200]
    3598:	cmp	w1, #0x1
    359c:	b.eq	35b8 <crc32_combine64@@ZLIB_1.2.3.3+0x68c>  // b.none
    35a0:	cmp	w0, #0x3
    35a4:	b.ne	35c0 <crc32_combine64@@ZLIB_1.2.3.3+0x694>  // b.any
    35a8:	ldp	w0, w1, [x19, #172]
    35ac:	sub	w0, w0, w1
    35b0:	cmp	w0, #0x1, lsl #12
    35b4:	b.ls	35c0 <crc32_combine64@@ZLIB_1.2.3.3+0x694>  // b.plast
    35b8:	mov	w0, #0x2                   	// #2
    35bc:	str	w0, [x19, #160]
    35c0:	ldr	w1, [x19, #184]
    35c4:	ldr	w0, [x19, #172]
    35c8:	cmp	w1, #0x2
    35cc:	b.ls	386c <crc32_combine64@@ZLIB_1.2.3.3+0x940>  // b.plast
    35d0:	ldr	w2, [x19, #160]
    35d4:	cmp	w1, w2
    35d8:	b.cc	386c <crc32_combine64@@ZLIB_1.2.3.3+0x940>  // b.lo, b.ul, b.last
    35dc:	ldr	w2, [x19, #164]
    35e0:	sub	w1, w1, #0x3
    35e4:	ldr	w3, [x19, #180]
    35e8:	and	w1, w1, #0xff
    35ec:	ldr	x4, [x19, #5904]
    35f0:	add	w3, w0, w3
    35f4:	sub	w0, w0, w2
    35f8:	ldr	w2, [x19, #5900]
    35fc:	and	w0, w0, #0xffff
    3600:	sub	w3, w3, #0x3
    3604:	sub	w5, w0, #0x1
    3608:	sub	w0, w0, #0x2
    360c:	and	w0, w0, #0xffff
    3610:	strh	w5, [x4, w2, uxtw #1]
    3614:	add	w5, w2, #0x1
    3618:	ldr	x4, [x19, #5888]
    361c:	str	w5, [x19, #5900]
    3620:	cmp	w0, #0xff
    3624:	strb	w1, [x4, w2, uxtw]
    3628:	ldrb	w1, [x22, w1, sxtw]
    362c:	add	x1, x19, x1, lsl #2
    3630:	ldrh	w2, [x1, #1240]
    3634:	add	w2, w2, #0x1
    3638:	strh	w2, [x1, #1240]
    363c:	b.hi	3858 <crc32_combine64@@ZLIB_1.2.3.3+0x92c>  // b.pmore
    3640:	ldrb	w0, [x21, w0, sxtw]
    3644:	add	x0, x19, w0, sxtw #2
    3648:	ldrh	w1, [x0, #2504]
    364c:	add	w1, w1, #0x1
    3650:	strh	w1, [x0, #2504]
    3654:	ldp	w0, w1, [x19, #180]
    3658:	ldr	w4, [x19, #5896]
    365c:	ldr	w7, [x19, #5900]
    3660:	add	w0, w0, #0x1
    3664:	sub	w4, w4, #0x1
    3668:	sub	w0, w0, w1
    366c:	sub	w1, w1, #0x2
    3670:	stp	w0, w1, [x19, #180]
    3674:	ldr	w2, [x19, #172]
    3678:	add	w1, w2, #0x1
    367c:	str	w1, [x19, #172]
    3680:	cmp	w1, w3
    3684:	b.hi	36cc <crc32_combine64@@ZLIB_1.2.3.3+0x7a0>  // b.pmore
    3688:	ldr	x5, [x19, #96]
    368c:	add	w0, w2, #0x3
    3690:	ldr	w6, [x19, #144]
    3694:	ldr	x8, [x19, #112]
    3698:	ldrb	w0, [x5, x0]
    369c:	ldr	w5, [x19, #128]
    36a0:	lsl	w5, w5, w6
    36a4:	eor	w0, w0, w5
    36a8:	ldr	w5, [x19, #140]
    36ac:	ldr	x6, [x19, #120]
    36b0:	and	w0, w0, w5
    36b4:	ldr	w5, [x19, #88]
    36b8:	and	w5, w1, w5
    36bc:	ldrh	w9, [x6, w0, uxtw #1]
    36c0:	str	w0, [x19, #128]
    36c4:	strh	w9, [x8, x5, lsl #1]
    36c8:	strh	w1, [x6, w0, uxtw #1]
    36cc:	ldr	w0, [x19, #184]
    36d0:	sub	w0, w0, #0x1
    36d4:	str	w0, [x19, #184]
    36d8:	cbnz	w0, 3674 <crc32_combine64@@ZLIB_1.2.3.3+0x748>
    36dc:	mov	w0, #0x2                   	// #2
    36e0:	add	w2, w2, w0
    36e4:	str	w0, [x19, #160]
    36e8:	cmp	w7, w4
    36ec:	stp	wzr, w2, [x19, #168]
    36f0:	b.ne	3524 <crc32_combine64@@ZLIB_1.2.3.3+0x5f8>  // b.any
    36f4:	ldr	x0, [x19, #152]
    36f8:	tbnz	x0, #63, 3864 <crc32_combine64@@ZLIB_1.2.3.3+0x938>
    36fc:	ldr	x1, [x19, #96]
    3700:	add	x1, x1, w0, uxtw
    3704:	sub	x2, x2, x0
    3708:	mov	w3, #0x0                   	// #0
    370c:	mov	x0, x19
    3710:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    3714:	ldr	w0, [x19, #172]
    3718:	str	x0, [x19, #152]
    371c:	ldr	x0, [x19]
    3720:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    3724:	ldr	x0, [x19]
    3728:	ldr	w0, [x0, #32]
    372c:	cbnz	w0, 3524 <crc32_combine64@@ZLIB_1.2.3.3+0x5f8>
    3730:	b	374c <crc32_combine64@@ZLIB_1.2.3.3+0x820>
    3734:	mov	x0, x19
    3738:	bl	3248 <crc32_combine64@@ZLIB_1.2.3.3+0x31c>
    373c:	ldr	w0, [x19, #180]
    3740:	cmp	w0, #0x105
    3744:	b.hi	3530 <crc32_combine64@@ZLIB_1.2.3.3+0x604>  // b.pmore
    3748:	cbnz	w20, 3760 <crc32_combine64@@ZLIB_1.2.3.3+0x834>
    374c:	mov	w0, #0x0                   	// #0
    3750:	ldp	x19, x20, [sp, #16]
    3754:	ldp	x21, x22, [sp, #32]
    3758:	ldp	x29, x30, [sp], #48
    375c:	ret
    3760:	cbnz	w0, 3530 <crc32_combine64@@ZLIB_1.2.3.3+0x604>
    3764:	ldr	w0, [x19, #168]
    3768:	cbz	w0, 37ac <crc32_combine64@@ZLIB_1.2.3.3+0x880>
    376c:	ldr	w0, [x19, #172]
    3770:	ldr	x1, [x19, #96]
    3774:	sub	w0, w0, #0x1
    3778:	ldr	x2, [x19, #5904]
    377c:	ldrb	w0, [x1, x0]
    3780:	ldr	w1, [x19, #5900]
    3784:	add	w3, w1, #0x1
    3788:	strh	wzr, [x2, w1, uxtw #1]
    378c:	ldr	x2, [x19, #5888]
    3790:	str	w3, [x19, #5900]
    3794:	strb	w0, [x2, w1, uxtw]
    3798:	add	x0, x19, w0, uxtb #2
    379c:	ldrh	w1, [x0, #212]
    37a0:	add	w1, w1, #0x1
    37a4:	strh	w1, [x0, #212]
    37a8:	str	wzr, [x19, #168]
    37ac:	ldr	w0, [x19, #172]
    37b0:	mov	w1, #0x2                   	// #2
    37b4:	cmp	w0, #0x2
    37b8:	csel	w1, w0, w1, ls  // ls = plast
    37bc:	str	w1, [x19, #5932]
    37c0:	cmp	w20, #0x4
    37c4:	b.ne	393c <crc32_combine64@@ZLIB_1.2.3.3+0xa10>  // b.any
    37c8:	ldr	x2, [x19, #152]
    37cc:	tbnz	x2, #63, 3934 <crc32_combine64@@ZLIB_1.2.3.3+0xa08>
    37d0:	ldr	x1, [x19, #96]
    37d4:	add	x1, x1, w2, uxtw
    37d8:	mov	w0, w0
    37dc:	mov	w3, #0x1                   	// #1
    37e0:	sub	x2, x0, x2
    37e4:	mov	x0, x19
    37e8:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    37ec:	ldr	w0, [x19, #172]
    37f0:	str	x0, [x19, #152]
    37f4:	ldr	x0, [x19]
    37f8:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    37fc:	ldr	x0, [x19]
    3800:	ldr	w0, [x0, #32]
    3804:	cmp	w0, #0x0
    3808:	cset	w0, ne  // ne = any
    380c:	add	w0, w0, #0x2
    3810:	b	3750 <crc32_combine64@@ZLIB_1.2.3.3+0x824>
    3814:	ldr	x1, [x19, #96]
    3818:	add	w0, w2, #0x2
    381c:	ldr	w3, [x19, #144]
    3820:	ldp	x5, x4, [x19, #112]
    3824:	ldrb	w0, [x1, x0]
    3828:	ldr	w1, [x19, #128]
    382c:	lsl	w1, w1, w3
    3830:	eor	w0, w0, w1
    3834:	ldr	w1, [x19, #140]
    3838:	ldr	w3, [x19, #88]
    383c:	and	w0, w0, w1
    3840:	and	w3, w2, w3
    3844:	ldrh	w1, [x4, w0, uxtw #1]
    3848:	str	w0, [x19, #128]
    384c:	strh	w1, [x5, x3, lsl #1]
    3850:	strh	w2, [x4, w0, uxtw #1]
    3854:	b	3544 <crc32_combine64@@ZLIB_1.2.3.3+0x618>
    3858:	lsr	w0, w0, #7
    385c:	add	w0, w0, #0x100
    3860:	b	3640 <crc32_combine64@@ZLIB_1.2.3.3+0x714>
    3864:	mov	x1, #0x0                   	// #0
    3868:	b	3704 <crc32_combine64@@ZLIB_1.2.3.3+0x7d8>
    386c:	ldr	w1, [x19, #168]
    3870:	cbz	w1, 3918 <crc32_combine64@@ZLIB_1.2.3.3+0x9ec>
    3874:	ldr	x1, [x19, #96]
    3878:	sub	w0, w0, #0x1
    387c:	ldr	x2, [x19, #5904]
    3880:	ldrb	w0, [x1, x0]
    3884:	ldr	w1, [x19, #5900]
    3888:	add	w3, w1, #0x1
    388c:	strh	wzr, [x2, w1, uxtw #1]
    3890:	ldr	x2, [x19, #5888]
    3894:	str	w3, [x19, #5900]
    3898:	strb	w0, [x2, w1, uxtw]
    389c:	add	x0, x19, w0, uxtb #2
    38a0:	ldrh	w1, [x0, #212]
    38a4:	add	w1, w1, #0x1
    38a8:	strh	w1, [x0, #212]
    38ac:	ldr	w0, [x19, #5896]
    38b0:	ldr	w1, [x19, #5900]
    38b4:	sub	w0, w0, #0x1
    38b8:	cmp	w1, w0
    38bc:	b.ne	38f4 <crc32_combine64@@ZLIB_1.2.3.3+0x9c8>  // b.any
    38c0:	ldr	x0, [x19, #152]
    38c4:	tbnz	x0, #63, 3910 <crc32_combine64@@ZLIB_1.2.3.3+0x9e4>
    38c8:	ldr	x1, [x19, #96]
    38cc:	add	x1, x1, w0, uxtw
    38d0:	ldr	w2, [x19, #172]
    38d4:	mov	w3, #0x0                   	// #0
    38d8:	sub	x2, x2, x0
    38dc:	mov	x0, x19
    38e0:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    38e4:	ldr	w0, [x19, #172]
    38e8:	str	x0, [x19, #152]
    38ec:	ldr	x0, [x19]
    38f0:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    38f4:	ldr	w0, [x19, #172]
    38f8:	add	w0, w0, #0x1
    38fc:	str	w0, [x19, #172]
    3900:	ldr	w0, [x19, #180]
    3904:	sub	w0, w0, #0x1
    3908:	str	w0, [x19, #180]
    390c:	b	3724 <crc32_combine64@@ZLIB_1.2.3.3+0x7f8>
    3910:	mov	x1, #0x0                   	// #0
    3914:	b	38d0 <crc32_combine64@@ZLIB_1.2.3.3+0x9a4>
    3918:	mov	w1, #0x1                   	// #1
    391c:	add	w0, w0, w1
    3920:	stp	w1, w0, [x19, #168]
    3924:	ldr	w0, [x19, #180]
    3928:	sub	w0, w0, #0x1
    392c:	str	w0, [x19, #180]
    3930:	b	3524 <crc32_combine64@@ZLIB_1.2.3.3+0x5f8>
    3934:	mov	x1, #0x0                   	// #0
    3938:	b	37d8 <crc32_combine64@@ZLIB_1.2.3.3+0x8ac>
    393c:	ldr	w1, [x19, #5900]
    3940:	cbz	w1, 3994 <crc32_combine64@@ZLIB_1.2.3.3+0xa68>
    3944:	ldr	x2, [x19, #152]
    3948:	tbnz	x2, #63, 398c <crc32_combine64@@ZLIB_1.2.3.3+0xa60>
    394c:	ldr	x1, [x19, #96]
    3950:	add	x1, x1, w2, uxtw
    3954:	mov	w0, w0
    3958:	mov	w3, #0x0                   	// #0
    395c:	sub	x2, x0, x2
    3960:	mov	x0, x19
    3964:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    3968:	ldr	w0, [x19, #172]
    396c:	str	x0, [x19, #152]
    3970:	ldr	x0, [x19]
    3974:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    3978:	ldr	x0, [x19]
    397c:	ldr	w0, [x0, #32]
    3980:	cmp	w0, #0x0
    3984:	cset	w0, ne  // ne = any
    3988:	b	3750 <crc32_combine64@@ZLIB_1.2.3.3+0x824>
    398c:	mov	x1, #0x0                   	// #0
    3990:	b	3954 <crc32_combine64@@ZLIB_1.2.3.3+0xa28>
    3994:	mov	w0, #0x1                   	// #1
    3998:	b	3750 <crc32_combine64@@ZLIB_1.2.3.3+0x824>
    399c:	stp	x29, x30, [sp, #-48]!
    39a0:	mov	x29, sp
    39a4:	stp	x19, x20, [sp, #16]
    39a8:	mov	x19, x0
    39ac:	mov	w20, w1
    39b0:	stp	x21, x22, [sp, #32]
    39b4:	adrp	x22, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    39b8:	adrp	x21, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    39bc:	add	x22, x22, #0x200
    39c0:	add	x21, x21, #0x3e8
    39c4:	ldr	w0, [x19, #180]
    39c8:	cmp	w0, #0x105
    39cc:	b.ls	3b44 <crc32_combine64@@ZLIB_1.2.3.3+0xc18>  // b.plast
    39d0:	ldr	w0, [x19, #180]
    39d4:	cmp	w0, #0x2
    39d8:	b.hi	3bdc <crc32_combine64@@ZLIB_1.2.3.3+0xcb0>  // b.pmore
    39dc:	ldr	w2, [x19, #5900]
    39e0:	ldr	w1, [x19, #160]
    39e4:	mov	w3, w2
    39e8:	ldr	w0, [x19, #172]
    39ec:	ubfiz	x5, x2, #1, #32
    39f0:	cmp	w1, #0x2
    39f4:	add	w2, w2, #0x1
    39f8:	ldr	x4, [x19, #5888]
    39fc:	ldr	x6, [x19, #5904]
    3a00:	b.ls	3c88 <crc32_combine64@@ZLIB_1.2.3.3+0xd5c>  // b.plast
    3a04:	ldr	w7, [x19, #176]
    3a08:	sub	w1, w1, #0x3
    3a0c:	and	w1, w1, #0xff
    3a10:	sub	w0, w0, w7
    3a14:	and	w0, w0, #0xffff
    3a18:	strh	w0, [x6, x5]
    3a1c:	str	w2, [x19, #5900]
    3a20:	sub	w0, w0, #0x1
    3a24:	strb	w1, [x4, x3]
    3a28:	and	w0, w0, #0xffff
    3a2c:	ldrb	w1, [x22, w1, sxtw]
    3a30:	cmp	w0, #0xff
    3a34:	add	x1, x19, x1, lsl #2
    3a38:	ldrh	w2, [x1, #1240]
    3a3c:	add	w2, w2, #0x1
    3a40:	strh	w2, [x1, #1240]
    3a44:	b.hi	3c48 <crc32_combine64@@ZLIB_1.2.3.3+0xd1c>  // b.pmore
    3a48:	ldrb	w0, [x21, w0, sxtw]
    3a4c:	add	x0, x19, w0, sxtw #2
    3a50:	ldrh	w1, [x0, #2504]
    3a54:	add	w1, w1, #0x1
    3a58:	strh	w1, [x0, #2504]
    3a5c:	ldr	w0, [x19, #5896]
    3a60:	ldr	w1, [x19, #5900]
    3a64:	sub	w0, w0, #0x1
    3a68:	ldr	w2, [x19, #180]
    3a6c:	cmp	w0, w1
    3a70:	ldr	w0, [x19, #160]
    3a74:	ldr	w1, [x19, #192]
    3a78:	cset	w5, eq  // eq = none
    3a7c:	sub	w2, w2, w0
    3a80:	str	w2, [x19, #180]
    3a84:	ldp	w6, w7, [x19, #140]
    3a88:	cmp	w0, w1
    3a8c:	ldr	x3, [x19, #96]
    3a90:	b.hi	3c54 <crc32_combine64@@ZLIB_1.2.3.3+0xd28>  // b.pmore
    3a94:	cmp	w2, #0x2
    3a98:	b.ls	3c54 <crc32_combine64@@ZLIB_1.2.3.3+0xd28>  // b.plast
    3a9c:	ldp	x9, x8, [x19, #112]
    3aa0:	sub	w0, w0, #0x1
    3aa4:	ldr	w11, [x19, #88]
    3aa8:	str	w0, [x19, #160]
    3aac:	ldr	w1, [x19, #172]
    3ab0:	ldr	w4, [x19, #128]
    3ab4:	add	w0, w1, #0x3
    3ab8:	add	w2, w1, #0x1
    3abc:	str	w2, [x19, #172]
    3ac0:	lsl	w4, w4, w7
    3ac4:	ldrb	w0, [x3, x0]
    3ac8:	eor	w0, w0, w4
    3acc:	and	w4, w2, w11
    3ad0:	and	w0, w0, w6
    3ad4:	ldrh	w10, [x8, w0, uxtw #1]
    3ad8:	str	w0, [x19, #128]
    3adc:	strh	w10, [x9, x4, lsl #1]
    3ae0:	strh	w2, [x8, w0, uxtw #1]
    3ae4:	ldr	w2, [x19, #160]
    3ae8:	sub	w2, w2, #0x1
    3aec:	str	w2, [x19, #160]
    3af0:	cbnz	w2, 3aac <crc32_combine64@@ZLIB_1.2.3.3+0xb80>
    3af4:	add	w1, w1, #0x2
    3af8:	str	w1, [x19, #172]
    3afc:	cbz	w5, 39c4 <crc32_combine64@@ZLIB_1.2.3.3+0xa98>
    3b00:	ldr	x0, [x19, #152]
    3b04:	tbnz	x0, #63, 3cdc <crc32_combine64@@ZLIB_1.2.3.3+0xdb0>
    3b08:	ldr	x1, [x19, #96]
    3b0c:	add	x1, x1, w0, uxtw
    3b10:	ldr	w2, [x19, #172]
    3b14:	mov	w3, #0x0                   	// #0
    3b18:	sub	x2, x2, x0
    3b1c:	mov	x0, x19
    3b20:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    3b24:	ldr	w0, [x19, #172]
    3b28:	str	x0, [x19, #152]
    3b2c:	ldr	x0, [x19]
    3b30:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    3b34:	ldr	x0, [x19]
    3b38:	ldr	w0, [x0, #32]
    3b3c:	cbnz	w0, 39c4 <crc32_combine64@@ZLIB_1.2.3.3+0xa98>
    3b40:	b	3b5c <crc32_combine64@@ZLIB_1.2.3.3+0xc30>
    3b44:	mov	x0, x19
    3b48:	bl	3248 <crc32_combine64@@ZLIB_1.2.3.3+0x31c>
    3b4c:	ldr	w0, [x19, #180]
    3b50:	cmp	w0, #0x105
    3b54:	b.hi	39d0 <crc32_combine64@@ZLIB_1.2.3.3+0xaa4>  // b.pmore
    3b58:	cbnz	w20, 3b70 <crc32_combine64@@ZLIB_1.2.3.3+0xc44>
    3b5c:	mov	w0, #0x0                   	// #0
    3b60:	ldp	x19, x20, [sp, #16]
    3b64:	ldp	x21, x22, [sp, #32]
    3b68:	ldp	x29, x30, [sp], #48
    3b6c:	ret
    3b70:	cbnz	w0, 39d0 <crc32_combine64@@ZLIB_1.2.3.3+0xaa4>
    3b74:	ldr	w0, [x19, #172]
    3b78:	mov	w1, #0x2                   	// #2
    3b7c:	cmp	w0, #0x2
    3b80:	csel	w1, w0, w1, ls  // ls = plast
    3b84:	str	w1, [x19, #5932]
    3b88:	cmp	w20, #0x4
    3b8c:	b.ne	3cec <crc32_combine64@@ZLIB_1.2.3.3+0xdc0>  // b.any
    3b90:	ldr	x2, [x19, #152]
    3b94:	tbnz	x2, #63, 3ce4 <crc32_combine64@@ZLIB_1.2.3.3+0xdb8>
    3b98:	ldr	x1, [x19, #96]
    3b9c:	add	x1, x1, w2, uxtw
    3ba0:	mov	w0, w0
    3ba4:	mov	w3, #0x1                   	// #1
    3ba8:	sub	x2, x0, x2
    3bac:	mov	x0, x19
    3bb0:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    3bb4:	ldr	w0, [x19, #172]
    3bb8:	str	x0, [x19, #152]
    3bbc:	ldr	x0, [x19]
    3bc0:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    3bc4:	ldr	x0, [x19]
    3bc8:	ldr	w0, [x0, #32]
    3bcc:	cmp	w0, #0x0
    3bd0:	cset	w0, ne  // ne = any
    3bd4:	add	w0, w0, #0x2
    3bd8:	b	3b60 <crc32_combine64@@ZLIB_1.2.3.3+0xc34>
    3bdc:	ldr	w2, [x19, #172]
    3be0:	ldr	x1, [x19, #96]
    3be4:	add	w0, w2, #0x2
    3be8:	ldr	w3, [x19, #144]
    3bec:	ldp	x5, x4, [x19, #112]
    3bf0:	ldrb	w0, [x1, x0]
    3bf4:	ldr	w1, [x19, #128]
    3bf8:	lsl	w1, w1, w3
    3bfc:	eor	w0, w0, w1
    3c00:	ldr	w1, [x19, #140]
    3c04:	ldr	w3, [x19, #88]
    3c08:	and	w0, w0, w1
    3c0c:	and	w3, w2, w3
    3c10:	ldrh	w1, [x4, w0, uxtw #1]
    3c14:	str	w0, [x19, #128]
    3c18:	strh	w1, [x5, x3, lsl #1]
    3c1c:	strh	w2, [x4, w0, uxtw #1]
    3c20:	cbz	w1, 39dc <crc32_combine64@@ZLIB_1.2.3.3+0xab0>
    3c24:	ldr	w0, [x19, #80]
    3c28:	sub	w2, w2, w1
    3c2c:	sub	w0, w0, #0x106
    3c30:	cmp	w2, w0
    3c34:	b.hi	39dc <crc32_combine64@@ZLIB_1.2.3.3+0xab0>  // b.pmore
    3c38:	mov	x0, x19
    3c3c:	bl	2fc0 <crc32_combine64@@ZLIB_1.2.3.3+0x94>
    3c40:	str	w0, [x19, #160]
    3c44:	b	39dc <crc32_combine64@@ZLIB_1.2.3.3+0xab0>
    3c48:	lsr	w0, w0, #7
    3c4c:	add	w0, w0, #0x100
    3c50:	b	3a48 <crc32_combine64@@ZLIB_1.2.3.3+0xb1c>
    3c54:	ldr	w1, [x19, #172]
    3c58:	str	wzr, [x19, #160]
    3c5c:	add	w0, w0, w1
    3c60:	str	w0, [x19, #172]
    3c64:	ldrb	w1, [x3, w0, uxtw]
    3c68:	add	w0, w0, #0x1
    3c6c:	str	w1, [x19, #128]
    3c70:	ldrb	w0, [x3, x0]
    3c74:	lsl	w1, w1, w7
    3c78:	eor	w0, w0, w1
    3c7c:	and	w0, w0, w6
    3c80:	str	w0, [x19, #128]
    3c84:	b	3afc <crc32_combine64@@ZLIB_1.2.3.3+0xbd0>
    3c88:	ldr	x1, [x19, #96]
    3c8c:	ldrb	w0, [x1, w0, uxtw]
    3c90:	strh	wzr, [x6, x5]
    3c94:	str	w2, [x19, #5900]
    3c98:	strb	w0, [x4, x3]
    3c9c:	add	x0, x19, w0, uxtb #2
    3ca0:	ldrh	w1, [x0, #212]
    3ca4:	add	w1, w1, #0x1
    3ca8:	strh	w1, [x0, #212]
    3cac:	ldr	w0, [x19, #5896]
    3cb0:	ldr	w1, [x19, #5900]
    3cb4:	sub	w0, w0, #0x1
    3cb8:	cmp	w0, w1
    3cbc:	ldr	w0, [x19, #180]
    3cc0:	cset	w5, eq  // eq = none
    3cc4:	sub	w0, w0, #0x1
    3cc8:	str	w0, [x19, #180]
    3ccc:	ldr	w0, [x19, #172]
    3cd0:	add	w0, w0, #0x1
    3cd4:	str	w0, [x19, #172]
    3cd8:	b	3afc <crc32_combine64@@ZLIB_1.2.3.3+0xbd0>
    3cdc:	mov	x1, #0x0                   	// #0
    3ce0:	b	3b10 <crc32_combine64@@ZLIB_1.2.3.3+0xbe4>
    3ce4:	mov	x1, #0x0                   	// #0
    3ce8:	b	3ba0 <crc32_combine64@@ZLIB_1.2.3.3+0xc74>
    3cec:	ldr	w1, [x19, #5900]
    3cf0:	cbz	w1, 3d44 <crc32_combine64@@ZLIB_1.2.3.3+0xe18>
    3cf4:	ldr	x2, [x19, #152]
    3cf8:	tbnz	x2, #63, 3d3c <crc32_combine64@@ZLIB_1.2.3.3+0xe10>
    3cfc:	ldr	x1, [x19, #96]
    3d00:	add	x1, x1, w2, uxtw
    3d04:	mov	w0, w0
    3d08:	mov	w3, #0x0                   	// #0
    3d0c:	sub	x2, x0, x2
    3d10:	mov	x0, x19
    3d14:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    3d18:	ldr	w0, [x19, #172]
    3d1c:	str	x0, [x19, #152]
    3d20:	ldr	x0, [x19]
    3d24:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    3d28:	ldr	x0, [x19]
    3d2c:	ldr	w0, [x0, #32]
    3d30:	cmp	w0, #0x0
    3d34:	cset	w0, ne  // ne = any
    3d38:	b	3b60 <crc32_combine64@@ZLIB_1.2.3.3+0xc34>
    3d3c:	mov	x1, #0x0                   	// #0
    3d40:	b	3d04 <crc32_combine64@@ZLIB_1.2.3.3+0xdd8>
    3d44:	mov	w0, #0x1                   	// #1
    3d48:	b	3b60 <crc32_combine64@@ZLIB_1.2.3.3+0xc34>
    3d4c:	stp	x29, x30, [sp, #-96]!
    3d50:	mov	x29, sp
    3d54:	stp	x19, x20, [sp, #16]
    3d58:	mov	x19, x0
    3d5c:	ldr	w0, [x0, #80]
    3d60:	stp	x23, x24, [sp, #48]
    3d64:	ldr	x23, [x19, #24]
    3d68:	stp	x25, x26, [sp, #64]
    3d6c:	mov	x26, #0xfffe                	// #65534
    3d70:	sub	x23, x23, #0x5
    3d74:	stp	x21, x22, [sp, #32]
    3d78:	cmp	x23, x0
    3d7c:	csel	x23, x23, x0, ls  // ls = plast
    3d80:	mov	w22, w1
    3d84:	ldr	x0, [x19]
    3d88:	stp	x27, x28, [sp, #80]
    3d8c:	mov	w27, #0xffff                	// #65535
    3d90:	ldr	w25, [x0, #8]
    3d94:	ldr	x1, [x19]
    3d98:	ldr	w0, [x19, #5940]
    3d9c:	ldr	w20, [x1, #32]
    3da0:	add	w0, w0, #0x2a
    3da4:	ldr	w1, [x1, #8]
    3da8:	asr	w2, w0, #3
    3dac:	cmp	w20, w0, asr #3
    3db0:	b.cc	4158 <crc32_combine64@@ZLIB_1.2.3.3+0x122c>  // b.lo, b.ul, b.last
    3db4:	ldr	x3, [x19, #152]
    3db8:	sub	w2, w20, w2
    3dbc:	ldr	w0, [x19, #172]
    3dc0:	sub	w21, w0, w3
    3dc4:	sub	w0, w0, w3
    3dc8:	add	x0, x0, w1, uxtw
    3dcc:	add	w3, w21, w1
    3dd0:	cmp	x0, x26
    3dd4:	csel	w20, w3, w27, ls  // ls = plast
    3dd8:	cmp	w20, w2
    3ddc:	csel	w20, w20, w2, ls  // ls = plast
    3de0:	cmp	w20, w23
    3de4:	b.cs	3e00 <crc32_combine64@@ZLIB_1.2.3.3+0xed4>  // b.hs, b.nlast
    3de8:	cmp	w20, #0x0
    3dec:	ccmp	w22, #0x4, #0x4, eq  // eq = none
    3df0:	b.ne	4158 <crc32_combine64@@ZLIB_1.2.3.3+0x122c>  // b.any
    3df4:	cbz	w22, 4158 <crc32_combine64@@ZLIB_1.2.3.3+0x122c>
    3df8:	cmp	w20, w3
    3dfc:	b.ne	4158 <crc32_combine64@@ZLIB_1.2.3.3+0x122c>  // b.any
    3e00:	cmp	w22, #0x4
    3e04:	b.ne	4150 <crc32_combine64@@ZLIB_1.2.3.3+0x1224>  // b.any
    3e08:	add	w1, w21, w1
    3e0c:	cmp	w1, w20
    3e10:	cset	w24, eq  // eq = none
    3e14:	mov	x0, x19
    3e18:	mov	x2, #0x0                   	// #0
    3e1c:	mov	x1, #0x0                   	// #0
    3e20:	mov	w3, w24
    3e24:	bl	a2f8 <inflateCodesUsed@@ZLIB_1.2.9+0x14b8>
    3e28:	ldr	x1, [x19, #16]
    3e2c:	and	w0, w20, #0xff
    3e30:	ldr	x2, [x19, #40]
    3e34:	add	x1, x1, x2
    3e38:	sturb	w0, [x1, #-4]
    3e3c:	mvn	w0, w0
    3e40:	ldr	x1, [x19, #16]
    3e44:	ldr	x2, [x19, #40]
    3e48:	add	x1, x1, x2
    3e4c:	lsr	w2, w20, #8
    3e50:	sturb	w2, [x1, #-3]
    3e54:	ldr	x1, [x19, #16]
    3e58:	ldr	x2, [x19, #40]
    3e5c:	add	x1, x1, x2
    3e60:	sturb	w0, [x1, #-2]
    3e64:	ldr	x0, [x19, #16]
    3e68:	ldr	x1, [x19, #40]
    3e6c:	add	x0, x0, x1
    3e70:	mvn	w1, w20
    3e74:	lsr	w1, w1, #8
    3e78:	sturb	w1, [x0, #-1]
    3e7c:	ldr	x0, [x19]
    3e80:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    3e84:	cbz	w21, 3ee8 <crc32_combine64@@ZLIB_1.2.3.3+0xfbc>
    3e88:	ldr	x0, [x19]
    3e8c:	cmp	w20, w21
    3e90:	ldr	x3, [x19, #96]
    3e94:	csel	w28, w20, w21, ls  // ls = plast
    3e98:	ldr	x0, [x0, #24]
    3e9c:	csel	w21, w20, w21, ls  // ls = plast
    3ea0:	ldr	x1, [x19, #152]
    3ea4:	mov	x2, x21
    3ea8:	sub	w20, w20, w28
    3eac:	add	x1, x3, x1
    3eb0:	bl	23a0 <memcpy@plt>
    3eb4:	ldr	x0, [x19]
    3eb8:	ldr	x2, [x19, #152]
    3ebc:	ldr	x1, [x0, #24]
    3ec0:	add	x1, x1, x21
    3ec4:	str	x1, [x0, #24]
    3ec8:	ldr	w1, [x0, #32]
    3ecc:	sub	w1, w1, w28
    3ed0:	str	w1, [x0, #32]
    3ed4:	ldr	x1, [x0, #40]
    3ed8:	add	x1, x1, x21
    3edc:	str	x1, [x0, #40]
    3ee0:	add	x21, x2, x21
    3ee4:	str	x21, [x19, #152]
    3ee8:	cbz	w20, 3f24 <crc32_combine64@@ZLIB_1.2.3.3+0xff8>
    3eec:	ldr	x0, [x19]
    3ef0:	mov	w2, w20
    3ef4:	ldr	x1, [x0, #24]
    3ef8:	bl	3194 <crc32_combine64@@ZLIB_1.2.3.3+0x268>
    3efc:	ldr	x0, [x19]
    3f00:	ldr	x1, [x0, #24]
    3f04:	add	x1, x1, w20, uxtw
    3f08:	str	x1, [x0, #24]
    3f0c:	ldr	w1, [x0, #32]
    3f10:	sub	w1, w1, w20
    3f14:	str	w1, [x0, #32]
    3f18:	ldr	x1, [x0, #40]
    3f1c:	add	x20, x1, w20, uxtw
    3f20:	str	x20, [x0, #40]
    3f24:	cbz	w24, 3d94 <crc32_combine64@@ZLIB_1.2.3.3+0xe68>
    3f28:	mov	w20, #0x1                   	// #1
    3f2c:	ldr	x2, [x19]
    3f30:	ldr	w0, [x2, #8]
    3f34:	subs	w25, w25, w0
    3f38:	b.eq	3f90 <crc32_combine64@@ZLIB_1.2.3.3+0x1064>  // b.none
    3f3c:	ldr	w1, [x19, #80]
    3f40:	ldr	x0, [x19, #96]
    3f44:	cmp	w1, w25
    3f48:	b.hi	4160 <crc32_combine64@@ZLIB_1.2.3.3+0x1234>  // b.pmore
    3f4c:	mov	w3, #0x2                   	// #2
    3f50:	str	w3, [x19, #5928]
    3f54:	ldr	x3, [x2]
    3f58:	mov	w2, w1
    3f5c:	sub	x1, x3, w1, uxtw
    3f60:	bl	23a0 <memcpy@plt>
    3f64:	ldr	w0, [x19, #80]
    3f68:	str	w0, [x19, #172]
    3f6c:	ldr	w1, [x19, #5932]
    3f70:	ldr	w0, [x19, #172]
    3f74:	str	x0, [x19, #152]
    3f78:	ldr	w0, [x19, #80]
    3f7c:	sub	w0, w0, w1
    3f80:	cmp	w0, w25
    3f84:	csel	w25, w0, w25, ls  // ls = plast
    3f88:	add	w25, w25, w1
    3f8c:	str	w25, [x19, #5932]
    3f90:	ldr	x0, [x19, #5944]
    3f94:	ldr	w2, [x19, #172]
    3f98:	mov	w1, w2
    3f9c:	cmp	x0, w2, uxtw
    3fa0:	b.cs	3fa8 <crc32_combine64@@ZLIB_1.2.3.3+0x107c>  // b.hs, b.nlast
    3fa4:	str	x1, [x19, #5944]
    3fa8:	cbnz	w20, 41d0 <crc32_combine64@@ZLIB_1.2.3.3+0x12a4>
    3fac:	ldr	x0, [x19]
    3fb0:	tst	w22, #0xfffffffb
    3fb4:	ldr	w0, [x0, #8]
    3fb8:	b.eq	3fcc <crc32_combine64@@ZLIB_1.2.3.3+0x10a0>  // b.none
    3fbc:	cbnz	w0, 3fcc <crc32_combine64@@ZLIB_1.2.3.3+0x10a0>
    3fc0:	ldr	x3, [x19, #152]
    3fc4:	cmp	x1, x3
    3fc8:	b.eq	41d8 <crc32_combine64@@ZLIB_1.2.3.3+0x12ac>  // b.none
    3fcc:	ldr	x21, [x19, #104]
    3fd0:	sub	w21, w21, w2
    3fd4:	sub	w21, w21, #0x1
    3fd8:	cmp	w21, w0
    3fdc:	b.cs	402c <crc32_combine64@@ZLIB_1.2.3.3+0x1100>  // b.hs, b.nlast
    3fe0:	ldr	x0, [x19, #152]
    3fe4:	ldr	w3, [x19, #80]
    3fe8:	mov	w1, w3
    3fec:	cmp	x0, w3, uxtw
    3ff0:	b.lt	402c <crc32_combine64@@ZLIB_1.2.3.3+0x1100>  // b.tstop
    3ff4:	sub	x0, x0, x1
    3ff8:	str	x0, [x19, #152]
    3ffc:	ldr	x0, [x19, #96]
    4000:	sub	w2, w2, w3
    4004:	str	w2, [x19, #172]
    4008:	add	x1, x0, x1
    400c:	bl	23a0 <memcpy@plt>
    4010:	ldr	w0, [x19, #5928]
    4014:	cmp	w0, #0x1
    4018:	b.hi	4024 <crc32_combine64@@ZLIB_1.2.3.3+0x10f8>  // b.pmore
    401c:	add	w0, w0, #0x1
    4020:	str	w0, [x19, #5928]
    4024:	ldr	w0, [x19, #80]
    4028:	add	w21, w21, w0
    402c:	ldr	x0, [x19]
    4030:	ldr	w2, [x0, #8]
    4034:	cmp	w2, w21
    4038:	csel	w21, w2, w21, ls  // ls = plast
    403c:	cbz	w21, 4060 <crc32_combine64@@ZLIB_1.2.3.3+0x1134>
    4040:	ldr	x3, [x19, #96]
    4044:	mov	w2, w21
    4048:	ldr	w1, [x19, #172]
    404c:	add	x1, x3, x1
    4050:	bl	3194 <crc32_combine64@@ZLIB_1.2.3.3+0x268>
    4054:	ldr	w2, [x19, #172]
    4058:	add	w21, w2, w21
    405c:	str	w21, [x19, #172]
    4060:	ldr	x2, [x19, #5944]
    4064:	ldr	w0, [x19, #172]
    4068:	mov	w1, w0
    406c:	cmp	x2, w0, uxtw
    4070:	b.cs	4078 <crc32_combine64@@ZLIB_1.2.3.3+0x114c>  // b.hs, b.nlast
    4074:	str	x1, [x19, #5944]
    4078:	ldr	w2, [x19, #5940]
    407c:	ldr	w4, [x19, #80]
    4080:	add	w2, w2, #0x2a
    4084:	asr	w1, w2, #3
    4088:	ldr	x2, [x19, #24]
    408c:	sub	x2, x2, x1
    4090:	mov	x1, #0xffff                	// #65535
    4094:	cmp	x2, x1
    4098:	csel	x2, x2, x1, ls  // ls = plast
    409c:	ldr	x1, [x19, #152]
    40a0:	cmp	w4, w2
    40a4:	mov	w3, w2
    40a8:	csel	w2, w4, w2, ls  // ls = plast
    40ac:	sub	w0, w0, w1
    40b0:	cmp	w2, w0
    40b4:	b.ls	40dc <crc32_combine64@@ZLIB_1.2.3.3+0x11b0>  // b.plast
    40b8:	cmp	w0, #0x0
    40bc:	ccmp	w22, #0x4, #0x4, eq  // eq = none
    40c0:	b.ne	4130 <crc32_combine64@@ZLIB_1.2.3.3+0x1204>  // b.any
    40c4:	cbz	w22, 4130 <crc32_combine64@@ZLIB_1.2.3.3+0x1204>
    40c8:	ldr	x2, [x19]
    40cc:	ldr	w2, [x2, #8]
    40d0:	cbnz	w2, 4130 <crc32_combine64@@ZLIB_1.2.3.3+0x1204>
    40d4:	cmp	w3, w0
    40d8:	b.cc	4130 <crc32_combine64@@ZLIB_1.2.3.3+0x1204>  // b.lo, b.ul, b.last
    40dc:	cmp	w3, w0
    40e0:	csel	x21, x3, x0, ls  // ls = plast
    40e4:	cmp	w22, #0x4
    40e8:	b.ne	41c8 <crc32_combine64@@ZLIB_1.2.3.3+0x129c>  // b.any
    40ec:	ldr	x2, [x19]
    40f0:	ldr	w2, [x2, #8]
    40f4:	cbnz	w2, 41c8 <crc32_combine64@@ZLIB_1.2.3.3+0x129c>
    40f8:	cmp	w3, w0
    40fc:	cset	w20, cs  // cs = hs, nlast
    4100:	ldr	x0, [x19, #96]
    4104:	mov	w3, w20
    4108:	mov	x2, x21
    410c:	lsl	w20, w20, #1
    4110:	add	x1, x0, x1
    4114:	mov	x0, x19
    4118:	bl	a2f8 <inflateCodesUsed@@ZLIB_1.2.9+0x14b8>
    411c:	ldr	x2, [x19, #152]
    4120:	ldr	x0, [x19]
    4124:	add	x2, x2, x21
    4128:	str	x2, [x19, #152]
    412c:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    4130:	mov	w0, w20
    4134:	ldp	x19, x20, [sp, #16]
    4138:	ldp	x21, x22, [sp, #32]
    413c:	ldp	x23, x24, [sp, #48]
    4140:	ldp	x25, x26, [sp, #64]
    4144:	ldp	x27, x28, [sp, #80]
    4148:	ldp	x29, x30, [sp], #96
    414c:	ret
    4150:	mov	w24, #0x0                   	// #0
    4154:	b	3e14 <crc32_combine64@@ZLIB_1.2.3.3+0xee8>
    4158:	mov	w20, #0x0                   	// #0
    415c:	b	3f2c <crc32_combine64@@ZLIB_1.2.3.3+0x1000>
    4160:	ldr	x3, [x19, #104]
    4164:	mov	w21, w25
    4168:	ldr	w2, [x19, #172]
    416c:	sub	x3, x3, w2, uxtw
    4170:	cmp	x3, w25, uxtw
    4174:	b.hi	419c <crc32_combine64@@ZLIB_1.2.3.3+0x1270>  // b.pmore
    4178:	sub	w2, w2, w1
    417c:	str	w2, [x19, #172]
    4180:	add	x1, x0, w1, uxtw
    4184:	bl	23a0 <memcpy@plt>
    4188:	ldr	w0, [x19, #5928]
    418c:	cmp	w0, #0x1
    4190:	b.hi	419c <crc32_combine64@@ZLIB_1.2.3.3+0x1270>  // b.pmore
    4194:	add	w0, w0, #0x1
    4198:	str	w0, [x19, #5928]
    419c:	ldr	x1, [x19]
    41a0:	mov	x2, x21
    41a4:	ldr	x3, [x19, #96]
    41a8:	ldr	x1, [x1]
    41ac:	ldr	w0, [x19, #172]
    41b0:	sub	x1, x1, x21
    41b4:	add	x0, x3, x0
    41b8:	bl	23a0 <memcpy@plt>
    41bc:	ldr	w0, [x19, #172]
    41c0:	add	w0, w0, w25
    41c4:	b	3f68 <crc32_combine64@@ZLIB_1.2.3.3+0x103c>
    41c8:	mov	w20, #0x0                   	// #0
    41cc:	b	4100 <crc32_combine64@@ZLIB_1.2.3.3+0x11d4>
    41d0:	mov	w20, #0x3                   	// #3
    41d4:	b	4130 <crc32_combine64@@ZLIB_1.2.3.3+0x1204>
    41d8:	mov	w20, #0x1                   	// #1
    41dc:	b	4130 <crc32_combine64@@ZLIB_1.2.3.3+0x1204>
    41e0:	cbz	x0, 4250 <crc32_combine64@@ZLIB_1.2.3.3+0x1324>
    41e4:	ldr	x1, [x0, #64]
    41e8:	cbz	x1, 4250 <crc32_combine64@@ZLIB_1.2.3.3+0x1324>
    41ec:	ldr	x1, [x0, #72]
    41f0:	cbz	x1, 4250 <crc32_combine64@@ZLIB_1.2.3.3+0x1324>
    41f4:	ldr	x1, [x0, #56]
    41f8:	cbz	x1, 4250 <crc32_combine64@@ZLIB_1.2.3.3+0x1324>
    41fc:	ldr	x2, [x1]
    4200:	cmp	x0, x2
    4204:	b.ne	4250 <crc32_combine64@@ZLIB_1.2.3.3+0x1324>  // b.any
    4208:	ldr	w1, [x1, #8]
    420c:	sub	w2, w1, #0x2a
    4210:	cmp	w2, #0x3d
    4214:	b.ls	4228 <crc32_combine64@@ZLIB_1.2.3.3+0x12fc>  // b.plast
    4218:	cmp	w1, #0x71
    421c:	b.ne	4244 <crc32_combine64@@ZLIB_1.2.3.3+0x1318>  // b.any
    4220:	mov	w0, #0x0                   	// #0
    4224:	ret
    4228:	mov	x0, #0x8001                	// #32769
    422c:	movk	x0, #0x8800, lsl #16
    4230:	movk	x0, #0x2002, lsl #48
    4234:	lsr	x0, x0, x2
    4238:	mvn	x0, x0
    423c:	and	w0, w0, #0x1
    4240:	b	4224 <crc32_combine64@@ZLIB_1.2.3.3+0x12f8>
    4244:	cmp	w1, #0x29a
    4248:	cset	w0, ne  // ne = any
    424c:	b	4224 <crc32_combine64@@ZLIB_1.2.3.3+0x12f8>
    4250:	mov	w0, #0x1                   	// #1
    4254:	b	4224 <crc32_combine64@@ZLIB_1.2.3.3+0x12f8>

0000000000004258 <deflateSetDictionary@@Base>:
    4258:	stp	x29, x30, [sp, #-80]!
    425c:	mov	x29, sp
    4260:	stp	x19, x20, [sp, #16]
    4264:	mov	x20, x0
    4268:	stp	x21, x22, [sp, #32]
    426c:	mov	w22, w2
    4270:	stp	x23, x24, [sp, #48]
    4274:	stp	x25, x26, [sp, #64]
    4278:	mov	x26, x1
    427c:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    4280:	cbnz	w0, 43f4 <deflateSetDictionary@@Base+0x19c>
    4284:	cbz	x26, 43f4 <deflateSetDictionary@@Base+0x19c>
    4288:	ldr	x19, [x20, #56]
    428c:	ldr	w23, [x19, #48]
    4290:	cmp	w23, #0x2
    4294:	b.eq	43f4 <deflateSetDictionary@@Base+0x19c>  // b.none
    4298:	mov	w21, w0
    429c:	cmp	w23, #0x1
    42a0:	b.ne	42b0 <deflateSetDictionary@@Base+0x58>  // b.any
    42a4:	ldr	w0, [x19, #8]
    42a8:	cmp	w0, #0x2a
    42ac:	b.ne	43f4 <deflateSetDictionary@@Base+0x19c>  // b.any
    42b0:	ldr	w0, [x19, #180]
    42b4:	cbnz	w0, 43f4 <deflateSetDictionary@@Base+0x19c>
    42b8:	cmp	w23, #0x1
    42bc:	b.ne	42d4 <deflateSetDictionary@@Base+0x7c>  // b.any
    42c0:	ldr	x0, [x20, #96]
    42c4:	mov	w2, w22
    42c8:	mov	x1, x26
    42cc:	bl	2560 <adler32@plt>
    42d0:	str	x0, [x20, #96]
    42d4:	ldr	w0, [x19, #80]
    42d8:	str	wzr, [x19, #48]
    42dc:	cmp	w0, w22
    42e0:	b.hi	4320 <deflateSetDictionary@@Base+0xc8>  // b.pmore
    42e4:	cbnz	w23, 4310 <deflateSetDictionary@@Base+0xb8>
    42e8:	ldr	w2, [x19, #132]
    42ec:	mov	w1, #0x0                   	// #0
    42f0:	ldr	x0, [x19, #120]
    42f4:	sub	w2, w2, #0x1
    42f8:	lsl	x2, x2, #1
    42fc:	strh	wzr, [x0, x2]
    4300:	bl	24a0 <memset@plt>
    4304:	str	xzr, [x19, #152]
    4308:	str	wzr, [x19, #172]
    430c:	str	wzr, [x19, #5932]
    4310:	ldr	w0, [x19, #80]
    4314:	sub	w22, w22, w0
    4318:	add	x26, x26, x22
    431c:	mov	w22, w0
    4320:	ldr	w24, [x20, #8]
    4324:	mov	x0, x19
    4328:	str	w22, [x20, #8]
    432c:	mov	w22, #0x2                   	// #2
    4330:	ldr	x25, [x20]
    4334:	str	x26, [x20]
    4338:	bl	3248 <crc32_combine64@@ZLIB_1.2.3.3+0x31c>
    433c:	ldr	w2, [x19, #180]
    4340:	ldr	w0, [x19, #172]
    4344:	cmp	w2, #0x2
    4348:	add	w1, w2, w0
    434c:	b.hi	4394 <deflateSetDictionary@@Base+0x13c>  // b.pmore
    4350:	mov	x0, #0x200000000           	// #8589934592
    4354:	str	x1, [x19, #152]
    4358:	stp	wzr, w1, [x19, #168]
    435c:	stur	x0, [x19, #180]
    4360:	mov	w0, #0x2                   	// #2
    4364:	str	w0, [x19, #160]
    4368:	str	w2, [x19, #5932]
    436c:	str	x25, [x20]
    4370:	str	w24, [x20, #8]
    4374:	str	w23, [x19, #48]
    4378:	mov	w0, w21
    437c:	ldp	x19, x20, [sp, #16]
    4380:	ldp	x21, x22, [sp, #32]
    4384:	ldp	x23, x24, [sp, #48]
    4388:	ldp	x25, x26, [sp, #64]
    438c:	ldp	x29, x30, [sp], #80
    4390:	ret
    4394:	ldp	x5, x4, [x19, #112]
    4398:	sub	w1, w1, #0x2
    439c:	ldr	w7, [x19, #88]
    43a0:	ldp	w8, w9, [x19, #140]
    43a4:	ldr	x10, [x19, #96]
    43a8:	add	w2, w0, #0x2
    43ac:	ldr	w3, [x19, #128]
    43b0:	ldrb	w2, [x10, x2]
    43b4:	lsl	w3, w3, w9
    43b8:	eor	w2, w2, w3
    43bc:	and	w3, w7, w0
    43c0:	and	w2, w2, w8
    43c4:	ldrh	w6, [x4, w2, uxtw #1]
    43c8:	str	w2, [x19, #128]
    43cc:	strh	w6, [x5, x3, lsl #1]
    43d0:	strh	w0, [x4, w2, uxtw #1]
    43d4:	add	w0, w0, #0x1
    43d8:	cmp	w0, w1
    43dc:	b.ne	43a8 <deflateSetDictionary@@Base+0x150>  // b.any
    43e0:	str	w0, [x19, #172]
    43e4:	mov	x0, x19
    43e8:	str	w22, [x19, #180]
    43ec:	bl	3248 <crc32_combine64@@ZLIB_1.2.3.3+0x31c>
    43f0:	b	433c <deflateSetDictionary@@Base+0xe4>
    43f4:	mov	w21, #0xfffffffe            	// #-2
    43f8:	b	4378 <deflateSetDictionary@@Base+0x120>

00000000000043fc <deflateGetDictionary@@ZLIB_1.2.9>:
    43fc:	stp	x29, x30, [sp, #-48]!
    4400:	mov	x3, x0
    4404:	mov	x4, x1
    4408:	mov	x29, sp
    440c:	stp	x19, x20, [sp, #16]
    4410:	str	x21, [sp, #32]
    4414:	mov	x21, x2
    4418:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    441c:	cbnz	w0, 4488 <deflateGetDictionary@@ZLIB_1.2.9+0x8c>
    4420:	mov	w20, w0
    4424:	ldr	x0, [x3, #56]
    4428:	ldr	w3, [x0, #172]
    442c:	ldr	w1, [x0, #180]
    4430:	ldr	w19, [x0, #80]
    4434:	add	w2, w3, w1
    4438:	cmp	w19, w2
    443c:	csel	w19, w19, w2, ls  // ls = plast
    4440:	cmp	x4, #0x0
    4444:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    4448:	b.eq	446c <deflateGetDictionary@@ZLIB_1.2.9+0x70>  // b.none
    444c:	mov	w1, w1
    4450:	mov	w2, w19
    4454:	add	x3, x1, w3, uxtw
    4458:	sub	x3, x3, w19, uxtw
    445c:	ldr	x1, [x0, #96]
    4460:	mov	x0, x4
    4464:	add	x1, x1, x3
    4468:	bl	23a0 <memcpy@plt>
    446c:	cbz	x21, 4474 <deflateGetDictionary@@ZLIB_1.2.9+0x78>
    4470:	str	w19, [x21]
    4474:	mov	w0, w20
    4478:	ldp	x19, x20, [sp, #16]
    447c:	ldr	x21, [sp, #32]
    4480:	ldp	x29, x30, [sp], #48
    4484:	ret
    4488:	mov	w20, #0xfffffffe            	// #-2
    448c:	b	4474 <deflateGetDictionary@@ZLIB_1.2.9+0x78>

0000000000004490 <deflateResetKeep@@ZLIB_1.2.5.2>:
    4490:	stp	x29, x30, [sp, #-48]!
    4494:	mov	x29, sp
    4498:	stp	x19, x20, [sp, #16]
    449c:	mov	x20, x0
    44a0:	str	x21, [sp, #32]
    44a4:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    44a8:	cbnz	w0, 4548 <deflateResetKeep@@ZLIB_1.2.5.2+0xb8>
    44ac:	ldr	x19, [x20, #56]
    44b0:	mov	w21, w0
    44b4:	mov	w0, #0x2                   	// #2
    44b8:	str	xzr, [x20, #16]
    44bc:	stp	xzr, xzr, [x20, #40]
    44c0:	str	w0, [x20, #88]
    44c4:	ldr	x0, [x19, #16]
    44c8:	stp	x0, xzr, [x19, #32]
    44cc:	ldr	w0, [x19, #48]
    44d0:	tbz	w0, #31, 44dc <deflateResetKeep@@ZLIB_1.2.5.2+0x4c>
    44d4:	neg	w0, w0
    44d8:	str	w0, [x19, #48]
    44dc:	ldr	w1, [x19, #48]
    44e0:	cmp	w1, #0x2
    44e4:	b.eq	4538 <deflateResetKeep@@ZLIB_1.2.5.2+0xa8>  // b.none
    44e8:	cmp	w1, #0x0
    44ec:	mov	w0, #0x2a                  	// #42
    44f0:	mov	w2, #0x71                  	// #113
    44f4:	csel	w0, w0, w2, ne  // ne = any
    44f8:	str	w0, [x19, #8]
    44fc:	cmp	w1, #0x2
    4500:	mov	w2, #0x0                   	// #0
    4504:	mov	x1, #0x0                   	// #0
    4508:	mov	x0, #0x0                   	// #0
    450c:	b.ne	4540 <deflateResetKeep@@ZLIB_1.2.5.2+0xb0>  // b.any
    4510:	bl	2430 <crc32@plt>
    4514:	str	x0, [x20, #96]
    4518:	mov	x0, x19
    451c:	str	wzr, [x19, #76]
    4520:	bl	a2b8 <inflateCodesUsed@@ZLIB_1.2.9+0x1478>
    4524:	mov	w0, w21
    4528:	ldp	x19, x20, [sp, #16]
    452c:	ldr	x21, [sp, #32]
    4530:	ldp	x29, x30, [sp], #48
    4534:	ret
    4538:	mov	w0, #0x39                  	// #57
    453c:	b	44f8 <deflateResetKeep@@ZLIB_1.2.5.2+0x68>
    4540:	bl	2560 <adler32@plt>
    4544:	b	4514 <deflateResetKeep@@ZLIB_1.2.5.2+0x84>
    4548:	mov	w21, #0xfffffffe            	// #-2
    454c:	b	4524 <deflateResetKeep@@ZLIB_1.2.5.2+0x94>

0000000000004550 <deflateReset@@Base>:
    4550:	stp	x29, x30, [sp, #-32]!
    4554:	mov	x29, sp
    4558:	stp	x19, x20, [sp, #16]
    455c:	mov	x19, x0
    4560:	bl	2630 <deflateResetKeep@plt>
    4564:	mov	w20, w0
    4568:	cbnz	w0, 45ec <deflateReset@@Base+0x9c>
    456c:	ldr	x19, [x19, #56]
    4570:	mov	w1, #0x0                   	// #0
    4574:	ldr	w0, [x19, #80]
    4578:	ldr	w2, [x19, #132]
    457c:	lsl	x0, x0, #1
    4580:	sub	w2, w2, #0x1
    4584:	str	x0, [x19, #104]
    4588:	ldr	x0, [x19, #120]
    458c:	lsl	x2, x2, #1
    4590:	strh	wzr, [x0, x2]
    4594:	bl	24a0 <memset@plt>
    4598:	str	wzr, [x19, #128]
    459c:	ldrsw	x1, [x19, #196]
    45a0:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    45a4:	add	x0, x0, #0xc68
    45a8:	str	xzr, [x19, #152]
    45ac:	str	xzr, [x19, #168]
    45b0:	lsl	x2, x1, #4
    45b4:	add	x1, x0, x1, lsl #4
    45b8:	str	wzr, [x19, #5932]
    45bc:	ldrh	w0, [x0, x2]
    45c0:	str	w0, [x19, #204]
    45c4:	ldrh	w0, [x1, #4]
    45c8:	str	w0, [x19, #208]
    45cc:	ldrh	w0, [x1, #6]
    45d0:	ldrh	w3, [x1, #2]
    45d4:	str	w0, [x19, #188]
    45d8:	mov	x0, #0x200000000           	// #8589934592
    45dc:	stur	x0, [x19, #180]
    45e0:	mov	w0, #0x2                   	// #2
    45e4:	str	w0, [x19, #160]
    45e8:	str	w3, [x19, #192]
    45ec:	mov	w0, w20
    45f0:	ldp	x19, x20, [sp, #16]
    45f4:	ldp	x29, x30, [sp], #32
    45f8:	ret

00000000000045fc <deflateSetHeader@@ZLIB_1.2.2>:
    45fc:	mov	x4, x0
    4600:	mov	x3, x1
    4604:	stp	x29, x30, [sp, #-16]!
    4608:	mov	x29, sp
    460c:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    4610:	cbnz	w0, 4630 <deflateSetHeader@@ZLIB_1.2.2+0x34>
    4614:	ldr	x1, [x4, #56]
    4618:	ldr	w2, [x1, #48]
    461c:	cmp	w2, #0x2
    4620:	b.ne	4630 <deflateSetHeader@@ZLIB_1.2.2+0x34>  // b.any
    4624:	str	x3, [x1, #56]
    4628:	ldp	x29, x30, [sp], #16
    462c:	ret
    4630:	mov	w0, #0xfffffffe            	// #-2
    4634:	b	4628 <deflateSetHeader@@ZLIB_1.2.2+0x2c>

0000000000004638 <deflatePending@@ZLIB_1.2.5.1>:
    4638:	mov	x4, x0
    463c:	mov	x5, x1
    4640:	mov	x3, x2
    4644:	stp	x29, x30, [sp, #-16]!
    4648:	mov	x29, sp
    464c:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    4650:	cbnz	w0, 467c <deflatePending@@ZLIB_1.2.5.1+0x44>
    4654:	cbz	x5, 4664 <deflatePending@@ZLIB_1.2.5.1+0x2c>
    4658:	ldr	x1, [x4, #56]
    465c:	ldr	x1, [x1, #40]
    4660:	str	w1, [x5]
    4664:	cbz	x3, 4674 <deflatePending@@ZLIB_1.2.5.1+0x3c>
    4668:	ldr	x1, [x4, #56]
    466c:	ldr	w1, [x1, #5940]
    4670:	str	w1, [x3]
    4674:	ldp	x29, x30, [sp], #16
    4678:	ret
    467c:	mov	w0, #0xfffffffe            	// #-2
    4680:	b	4674 <deflatePending@@ZLIB_1.2.5.1+0x3c>

0000000000004684 <deflatePrime@@ZLIB_1.2.0.8>:
    4684:	stp	x29, x30, [sp, #-64]!
    4688:	mov	x3, x0
    468c:	mov	x29, sp
    4690:	stp	x19, x20, [sp, #16]
    4694:	mov	w19, w1
    4698:	stp	x21, x22, [sp, #32]
    469c:	mov	w22, w2
    46a0:	stp	x23, x24, [sp, #48]
    46a4:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    46a8:	cbnz	w0, 472c <deflatePrime@@ZLIB_1.2.0.8+0xa8>
    46ac:	ldr	x21, [x3, #56]
    46b0:	ldr	x0, [x21, #32]
    46b4:	ldr	x1, [x21, #5904]
    46b8:	add	x0, x0, #0x2
    46bc:	cmp	x1, x0
    46c0:	b.cc	4734 <deflatePrime@@ZLIB_1.2.0.8+0xb0>  // b.lo, b.ul, b.last
    46c4:	mov	w24, #0x10                  	// #16
    46c8:	mov	w23, #0x1                   	// #1
    46cc:	ldr	w0, [x21, #5940]
    46d0:	ldrh	w2, [x21, #5936]
    46d4:	sub	w20, w24, w0
    46d8:	cmp	w19, w20
    46dc:	csel	w20, w19, w20, le
    46e0:	lsl	w1, w23, w20
    46e4:	sub	w1, w1, #0x1
    46e8:	and	w1, w1, w22
    46ec:	asr	w22, w22, w20
    46f0:	lsl	w1, w1, w0
    46f4:	orr	w1, w1, w2
    46f8:	add	w0, w0, w20
    46fc:	strh	w1, [x21, #5936]
    4700:	str	w0, [x21, #5940]
    4704:	mov	x0, x21
    4708:	bl	a42c <inflateCodesUsed@@ZLIB_1.2.9+0x15ec>
    470c:	subs	w19, w19, w20
    4710:	b.ne	46cc <deflatePrime@@ZLIB_1.2.0.8+0x48>  // b.any
    4714:	mov	w0, w19
    4718:	ldp	x19, x20, [sp, #16]
    471c:	ldp	x21, x22, [sp, #32]
    4720:	ldp	x23, x24, [sp, #48]
    4724:	ldp	x29, x30, [sp], #64
    4728:	ret
    472c:	mov	w19, #0xfffffffe            	// #-2
    4730:	b	4714 <deflatePrime@@ZLIB_1.2.0.8+0x90>
    4734:	mov	w19, #0xfffffffb            	// #-5
    4738:	b	4714 <deflatePrime@@ZLIB_1.2.0.8+0x90>

000000000000473c <deflateTune@@ZLIB_1.2.2.3>:
    473c:	mov	x5, x0
    4740:	mov	w7, w1
    4744:	mov	w6, w2
    4748:	stp	x29, x30, [sp, #-16]!
    474c:	mov	x29, sp
    4750:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    4754:	cbnz	w0, 476c <deflateTune@@ZLIB_1.2.2.3+0x30>
    4758:	ldr	x5, [x5, #56]
    475c:	stp	w4, w6, [x5, #188]
    4760:	stp	w7, w3, [x5, #204]
    4764:	ldp	x29, x30, [sp], #16
    4768:	ret
    476c:	mov	w0, #0xfffffffe            	// #-2
    4770:	b	4764 <deflateTune@@ZLIB_1.2.2.3+0x28>

0000000000004774 <deflateBound@@ZLIB_1.2.0>:
    4774:	add	x7, x1, #0x7
    4778:	add	x4, x1, #0x3f
    477c:	mov	x3, x1
    4780:	mov	x5, x0
    4784:	lsr	x1, x7, #3
    4788:	stp	x29, x30, [sp, #-16]!
    478c:	add	x4, x1, x4, lsr #6
    4790:	add	x4, x4, x3
    4794:	mov	x29, sp
    4798:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    479c:	cbz	w0, 47ac <deflateBound@@ZLIB_1.2.0+0x38>
    47a0:	add	x0, x4, #0xb
    47a4:	ldp	x29, x30, [sp], #16
    47a8:	ret
    47ac:	ldr	x5, [x5, #56]
    47b0:	ldr	w0, [x5, #48]
    47b4:	cmp	w0, #0x1
    47b8:	b.eq	47f4 <deflateBound@@ZLIB_1.2.0+0x80>  // b.none
    47bc:	cmp	w0, #0x2
    47c0:	b.eq	480c <deflateBound@@ZLIB_1.2.0+0x98>  // b.none
    47c4:	cmp	w0, #0x0
    47c8:	mov	x0, #0x6                   	// #6
    47cc:	csel	x0, x0, xzr, ne  // ne = any
    47d0:	ldr	w1, [x5, #84]
    47d4:	cmp	w1, #0xf
    47d8:	b.ne	47e8 <deflateBound@@ZLIB_1.2.0+0x74>  // b.any
    47dc:	ldr	w1, [x5, #136]
    47e0:	cmp	w1, #0xf
    47e4:	b.eq	4880 <deflateBound@@ZLIB_1.2.0+0x10c>  // b.none
    47e8:	add	x4, x4, #0x5
    47ec:	add	x0, x4, x0
    47f0:	b	47a4 <deflateBound@@ZLIB_1.2.0+0x30>
    47f4:	ldr	w0, [x5, #172]
    47f8:	mov	x1, #0x6                   	// #6
    47fc:	cmp	w0, #0x0
    4800:	mov	x0, #0xa                   	// #10
    4804:	csel	x0, x0, x1, ne  // ne = any
    4808:	b	47d0 <deflateBound@@ZLIB_1.2.0+0x5c>
    480c:	ldr	x2, [x5, #56]
    4810:	cbz	x2, 4878 <deflateBound@@ZLIB_1.2.0+0x104>
    4814:	ldr	x0, [x2, #24]
    4818:	cbz	x0, 4870 <deflateBound@@ZLIB_1.2.0+0xfc>
    481c:	ldr	w0, [x2, #32]
    4820:	add	w0, w0, #0x2
    4824:	add	x0, x0, #0x12
    4828:	ldr	x6, [x2, #40]
    482c:	cbz	x6, 4844 <deflateBound@@ZLIB_1.2.0+0xd0>
    4830:	mvn	x1, x0
    4834:	add	x6, x6, x1
    4838:	add	x0, x0, #0x1
    483c:	ldrb	w1, [x6, x0]
    4840:	cbnz	w1, 4838 <deflateBound@@ZLIB_1.2.0+0xc4>
    4844:	ldr	x6, [x2, #56]
    4848:	cbz	x6, 4860 <deflateBound@@ZLIB_1.2.0+0xec>
    484c:	mvn	x1, x0
    4850:	add	x6, x6, x1
    4854:	add	x0, x0, #0x1
    4858:	ldrb	w1, [x6, x0]
    485c:	cbnz	w1, 4854 <deflateBound@@ZLIB_1.2.0+0xe0>
    4860:	ldr	w1, [x2, #68]
    4864:	cbz	w1, 47d0 <deflateBound@@ZLIB_1.2.0+0x5c>
    4868:	add	x0, x0, #0x2
    486c:	b	47d0 <deflateBound@@ZLIB_1.2.0+0x5c>
    4870:	mov	x0, #0x12                  	// #18
    4874:	b	4828 <deflateBound@@ZLIB_1.2.0+0xb4>
    4878:	mov	x0, #0x12                  	// #18
    487c:	b	47d0 <deflateBound@@ZLIB_1.2.0+0x5c>
    4880:	lsr	x1, x3, #25
    4884:	add	x1, x1, x3, lsr #14
    4888:	add	x3, x7, x3, lsr #12
    488c:	add	x3, x1, x3
    4890:	add	x0, x3, x0
    4894:	b	47a4 <deflateBound@@ZLIB_1.2.0+0x30>

0000000000004898 <deflate@@Base>:
    4898:	stp	x29, x30, [sp, #-96]!
    489c:	mov	x29, sp
    48a0:	stp	x19, x20, [sp, #16]
    48a4:	mov	x20, x0
    48a8:	stp	x21, x22, [sp, #32]
    48ac:	mov	w21, w1
    48b0:	stp	x23, x24, [sp, #48]
    48b4:	stp	x25, x26, [sp, #64]
    48b8:	str	x27, [sp, #80]
    48bc:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    48c0:	cbnz	w0, 4910 <deflate@@Base+0x78>
    48c4:	cmp	w21, #0x5
    48c8:	b.hi	4910 <deflate@@Base+0x78>  // b.pmore
    48cc:	mov	w22, w0
    48d0:	ldr	x0, [x20, #24]
    48d4:	ldr	x19, [x20, #56]
    48d8:	cbz	x0, 4900 <deflate@@Base+0x68>
    48dc:	ldr	w0, [x20, #8]
    48e0:	cbz	w0, 48ec <deflate@@Base+0x54>
    48e4:	ldr	x1, [x20]
    48e8:	cbz	x1, 4900 <deflate@@Base+0x68>
    48ec:	ldr	w1, [x19, #8]
    48f0:	cmp	w1, #0x29a
    48f4:	b.ne	4918 <deflate@@Base+0x80>  // b.any
    48f8:	cmp	w21, #0x4
    48fc:	b.eq	4918 <deflate@@Base+0x80>  // b.none
    4900:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    4904:	ldr	x0, [x0, #4056]
    4908:	ldr	x0, [x0, #32]
    490c:	str	x0, [x20, #48]
    4910:	mov	w22, #0xfffffffe            	// #-2
    4914:	b	4934 <deflate@@Base+0x9c>
    4918:	ldr	w1, [x20, #32]
    491c:	cbnz	w1, 4954 <deflate@@Base+0xbc>
    4920:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    4924:	mov	w22, #0xfffffffb            	// #-5
    4928:	ldr	x0, [x0, #4056]
    492c:	ldr	x0, [x0, #56]
    4930:	str	x0, [x20, #48]
    4934:	mov	w0, w22
    4938:	ldp	x19, x20, [sp, #16]
    493c:	ldp	x21, x22, [sp, #32]
    4940:	ldp	x23, x24, [sp, #48]
    4944:	ldp	x25, x26, [sp, #64]
    4948:	ldr	x27, [sp, #80]
    494c:	ldp	x29, x30, [sp], #96
    4950:	ret
    4954:	ldr	x1, [x19, #40]
    4958:	ldr	w3, [x19, #76]
    495c:	str	w21, [x19, #76]
    4960:	cbz	x1, 4980 <deflate@@Base+0xe8>
    4964:	mov	x0, x20
    4968:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    496c:	ldr	w0, [x20, #32]
    4970:	cbnz	w0, 49b8 <deflate@@Base+0x120>
    4974:	mov	w0, #0xffffffff            	// #-1
    4978:	str	w0, [x19, #76]
    497c:	b	4934 <deflate@@Base+0x9c>
    4980:	cbnz	w0, 49b8 <deflate@@Base+0x120>
    4984:	cmp	w21, #0x5
    4988:	mov	w1, #0x9                   	// #9
    498c:	lsl	w0, w21, #1
    4990:	csel	w2, w1, wzr, eq  // eq = none
    4994:	cmp	w3, #0x4
    4998:	sub	w0, w0, w2
    499c:	csel	w1, w1, wzr, gt
    49a0:	lsl	w2, w3, #1
    49a4:	sub	w1, w2, w1
    49a8:	cmp	w0, w1
    49ac:	b.gt	49b8 <deflate@@Base+0x120>
    49b0:	cmp	w21, #0x4
    49b4:	b.ne	4920 <deflate@@Base+0x88>  // b.any
    49b8:	ldr	w0, [x19, #8]
    49bc:	cmp	w0, #0x29a
    49c0:	b.ne	4a4c <deflate@@Base+0x1b4>  // b.any
    49c4:	ldr	w0, [x20, #8]
    49c8:	cbnz	w0, 4920 <deflate@@Base+0x88>
    49cc:	ldr	w0, [x19, #8]
    49d0:	cmp	w0, #0x45
    49d4:	b.eq	4e00 <deflate@@Base+0x568>  // b.none
    49d8:	cmp	w0, #0x49
    49dc:	b.eq	4e90 <deflate@@Base+0x5f8>  // b.none
    49e0:	cmp	w0, #0x5b
    49e4:	b.eq	4f58 <deflate@@Base+0x6c0>  // b.none
    49e8:	cmp	w0, #0x67
    49ec:	b.eq	501c <deflate@@Base+0x784>  // b.none
    49f0:	ldr	w0, [x20, #8]
    49f4:	cbnz	w0, 4a10 <deflate@@Base+0x178>
    49f8:	ldr	w0, [x19, #180]
    49fc:	cbnz	w0, 4a10 <deflate@@Base+0x178>
    4a00:	cbz	w21, 4934 <deflate@@Base+0x9c>
    4a04:	ldr	w0, [x19, #8]
    4a08:	cmp	w0, #0x29a
    4a0c:	b.eq	55ac <deflate@@Base+0xd14>  // b.none
    4a10:	ldr	w0, [x19, #196]
    4a14:	cbnz	w0, 5128 <deflate@@Base+0x890>
    4a18:	mov	w1, w21
    4a1c:	mov	x0, x19
    4a20:	bl	3d4c <crc32_combine64@@ZLIB_1.2.3.3+0xe20>
    4a24:	sub	w1, w0, #0x2
    4a28:	cmp	w1, #0x1
    4a2c:	b.hi	4a38 <deflate@@Base+0x1a0>  // b.pmore
    4a30:	mov	w1, #0x29a                 	// #666
    4a34:	str	w1, [x19, #8]
    4a38:	tst	w0, #0xfffffffd
    4a3c:	b.ne	5584 <deflate@@Base+0xcec>  // b.any
    4a40:	ldr	w0, [x20, #32]
    4a44:	cbnz	w0, 4934 <deflate@@Base+0x9c>
    4a48:	b	4974 <deflate@@Base+0xdc>
    4a4c:	cmp	w0, #0x2a
    4a50:	b.ne	4b04 <deflate@@Base+0x26c>  // b.any
    4a54:	ldr	w2, [x19, #84]
    4a58:	mov	w1, #0xffff8800            	// #-30720
    4a5c:	ldr	w0, [x19, #200]
    4a60:	lsl	w2, w2, #12
    4a64:	cmp	w0, #0x1
    4a68:	add	w1, w2, w1
    4a6c:	b.gt	4c44 <deflate@@Base+0x3ac>
    4a70:	ldr	w0, [x19, #196]
    4a74:	cmp	w0, #0x1
    4a78:	b.le	4c44 <deflate@@Base+0x3ac>
    4a7c:	cmp	w0, #0x5
    4a80:	b.le	4c4c <deflate@@Base+0x3b4>
    4a84:	cmp	w0, #0x6
    4a88:	cset	w2, ne  // ne = any
    4a8c:	add	w2, w2, #0x2
    4a90:	ldr	w0, [x19, #172]
    4a94:	orr	w2, w1, w2, lsl #6
    4a98:	cbz	w0, 4aa0 <deflate@@Base+0x208>
    4a9c:	orr	w2, w2, #0x20
    4aa0:	mov	w0, #0x1f                  	// #31
    4aa4:	udiv	w1, w2, w0
    4aa8:	msub	w1, w1, w0, w2
    4aac:	add	w2, w2, w0
    4ab0:	mov	x0, x19
    4ab4:	sub	w1, w2, w1
    4ab8:	bl	2f90 <crc32_combine64@@ZLIB_1.2.3.3+0x64>
    4abc:	ldr	w0, [x19, #172]
    4ac0:	cbz	w0, 4ad8 <deflate@@Base+0x240>
    4ac4:	ldur	w1, [x20, #98]
    4ac8:	mov	x0, x19
    4acc:	bl	2f90 <crc32_combine64@@ZLIB_1.2.3.3+0x64>
    4ad0:	ldrh	w1, [x20, #96]
    4ad4:	bl	2f90 <crc32_combine64@@ZLIB_1.2.3.3+0x64>
    4ad8:	mov	w2, #0x0                   	// #0
    4adc:	mov	x1, #0x0                   	// #0
    4ae0:	mov	x0, #0x0                   	// #0
    4ae4:	bl	2560 <adler32@plt>
    4ae8:	str	x0, [x20, #96]
    4aec:	mov	w0, #0x71                  	// #113
    4af0:	str	w0, [x19, #8]
    4af4:	mov	x0, x20
    4af8:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    4afc:	ldr	x0, [x19, #40]
    4b00:	cbnz	x0, 4974 <deflate@@Base+0xdc>
    4b04:	ldr	w0, [x19, #8]
    4b08:	cmp	w0, #0x39
    4b0c:	b.ne	49cc <deflate@@Base+0x134>  // b.any
    4b10:	mov	w2, #0x0                   	// #0
    4b14:	mov	x1, #0x0                   	// #0
    4b18:	mov	x0, #0x0                   	// #0
    4b1c:	bl	2430 <crc32@plt>
    4b20:	ldr	x1, [x19, #16]
    4b24:	str	x0, [x20, #96]
    4b28:	ldr	x0, [x19, #40]
    4b2c:	add	x2, x0, #0x1
    4b30:	str	x2, [x19, #40]
    4b34:	mov	w2, #0x1f                  	// #31
    4b38:	strb	w2, [x1, x0]
    4b3c:	ldr	x1, [x19, #16]
    4b40:	ldr	x0, [x19, #40]
    4b44:	add	x2, x0, #0x1
    4b48:	str	x2, [x19, #40]
    4b4c:	mov	w2, #0xffffff8b            	// #-117
    4b50:	strb	w2, [x1, x0]
    4b54:	ldr	x1, [x19, #16]
    4b58:	ldr	x0, [x19, #40]
    4b5c:	add	x2, x0, #0x1
    4b60:	str	x2, [x19, #40]
    4b64:	mov	w2, #0x8                   	// #8
    4b68:	strb	w2, [x1, x0]
    4b6c:	ldr	x0, [x19, #56]
    4b70:	ldr	x5, [x19, #16]
    4b74:	ldr	x2, [x19, #40]
    4b78:	cbnz	x0, 4c64 <deflate@@Base+0x3cc>
    4b7c:	add	x0, x2, #0x1
    4b80:	str	x0, [x19, #40]
    4b84:	strb	wzr, [x5, x2]
    4b88:	ldr	x1, [x19, #16]
    4b8c:	ldr	x0, [x19, #40]
    4b90:	add	x2, x0, #0x1
    4b94:	str	x2, [x19, #40]
    4b98:	strb	wzr, [x1, x0]
    4b9c:	ldr	x1, [x19, #16]
    4ba0:	ldr	x0, [x19, #40]
    4ba4:	add	x2, x0, #0x1
    4ba8:	str	x2, [x19, #40]
    4bac:	strb	wzr, [x1, x0]
    4bb0:	ldr	x1, [x19, #16]
    4bb4:	ldr	x0, [x19, #40]
    4bb8:	add	x2, x0, #0x1
    4bbc:	str	x2, [x19, #40]
    4bc0:	strb	wzr, [x1, x0]
    4bc4:	ldr	x1, [x19, #16]
    4bc8:	ldr	x0, [x19, #40]
    4bcc:	add	x2, x0, #0x1
    4bd0:	str	x2, [x19, #40]
    4bd4:	strb	wzr, [x1, x0]
    4bd8:	ldr	w0, [x19, #196]
    4bdc:	cmp	w0, #0x9
    4be0:	b.eq	4c54 <deflate@@Base+0x3bc>  // b.none
    4be4:	ldr	w1, [x19, #200]
    4be8:	cmp	w1, #0x1
    4bec:	b.gt	4c5c <deflate@@Base+0x3c4>
    4bf0:	cmp	w0, #0x2
    4bf4:	cset	w0, lt  // lt = tstop
    4bf8:	lsl	w0, w0, #2
    4bfc:	ldr	x2, [x19, #16]
    4c00:	ldr	x1, [x19, #40]
    4c04:	add	x3, x1, #0x1
    4c08:	str	x3, [x19, #40]
    4c0c:	strb	w0, [x2, x1]
    4c10:	ldr	x1, [x19, #16]
    4c14:	ldr	x0, [x19, #40]
    4c18:	add	x2, x0, #0x1
    4c1c:	str	x2, [x19, #40]
    4c20:	mov	w2, #0x3                   	// #3
    4c24:	strb	w2, [x1, x0]
    4c28:	mov	w0, #0x71                  	// #113
    4c2c:	str	w0, [x19, #8]
    4c30:	mov	x0, x20
    4c34:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    4c38:	ldr	x0, [x19, #40]
    4c3c:	cbz	x0, 49cc <deflate@@Base+0x134>
    4c40:	b	4974 <deflate@@Base+0xdc>
    4c44:	mov	w2, #0x0                   	// #0
    4c48:	b	4a90 <deflate@@Base+0x1f8>
    4c4c:	mov	w2, #0x1                   	// #1
    4c50:	b	4a90 <deflate@@Base+0x1f8>
    4c54:	mov	w0, #0x2                   	// #2
    4c58:	b	4bfc <deflate@@Base+0x364>
    4c5c:	mov	w0, #0x4                   	// #4
    4c60:	b	4bfc <deflate@@Base+0x364>
    4c64:	ldr	w1, [x0]
    4c68:	ldr	x4, [x0, #40]
    4c6c:	cmp	w1, #0x0
    4c70:	ldr	w1, [x0, #68]
    4c74:	cset	w3, ne  // ne = any
    4c78:	cmp	w1, #0x0
    4c7c:	cset	w1, ne  // ne = any
    4c80:	add	w1, w3, w1, lsl #1
    4c84:	ldr	x3, [x0, #24]
    4c88:	ldr	x0, [x0, #56]
    4c8c:	cmp	x3, #0x0
    4c90:	cset	w3, ne  // ne = any
    4c94:	cmp	x4, #0x0
    4c98:	cset	w4, ne  // ne = any
    4c9c:	cmp	x0, #0x0
    4ca0:	cset	w0, ne  // ne = any
    4ca4:	lsl	w4, w4, #3
    4ca8:	add	w3, w4, w3, lsl #2
    4cac:	add	w1, w1, w3
    4cb0:	add	x3, x2, #0x1
    4cb4:	str	x3, [x19, #40]
    4cb8:	add	w1, w1, w0, lsl #4
    4cbc:	strb	w1, [x5, x2]
    4cc0:	ldr	x0, [x19, #56]
    4cc4:	ldr	x1, [x19, #16]
    4cc8:	ldr	x2, [x0, #8]
    4ccc:	ldr	x0, [x19, #40]
    4cd0:	add	x3, x0, #0x1
    4cd4:	str	x3, [x19, #40]
    4cd8:	strb	w2, [x1, x0]
    4cdc:	ldr	x0, [x19, #56]
    4ce0:	ldr	x2, [x19, #16]
    4ce4:	ldr	x0, [x0, #8]
    4ce8:	ldr	x1, [x19, #40]
    4cec:	lsr	x0, x0, #8
    4cf0:	add	x3, x1, #0x1
    4cf4:	str	x3, [x19, #40]
    4cf8:	strb	w0, [x2, x1]
    4cfc:	ldr	x0, [x19, #56]
    4d00:	ldr	x2, [x19, #16]
    4d04:	ldr	x0, [x0, #8]
    4d08:	ldr	x1, [x19, #40]
    4d0c:	lsr	x0, x0, #16
    4d10:	add	x3, x1, #0x1
    4d14:	str	x3, [x19, #40]
    4d18:	strb	w0, [x2, x1]
    4d1c:	ldr	x0, [x19, #56]
    4d20:	ldr	x2, [x19, #16]
    4d24:	ldr	x0, [x0, #8]
    4d28:	ldr	x1, [x19, #40]
    4d2c:	lsr	x0, x0, #24
    4d30:	add	x3, x1, #0x1
    4d34:	str	x3, [x19, #40]
    4d38:	strb	w0, [x2, x1]
    4d3c:	ldr	w0, [x19, #196]
    4d40:	cmp	w0, #0x9
    4d44:	b.eq	50b0 <deflate@@Base+0x818>  // b.none
    4d48:	ldr	w1, [x19, #200]
    4d4c:	cmp	w1, #0x1
    4d50:	b.gt	50b8 <deflate@@Base+0x820>
    4d54:	cmp	w0, #0x2
    4d58:	cset	w0, lt  // lt = tstop
    4d5c:	lsl	w0, w0, #2
    4d60:	ldr	x2, [x19, #16]
    4d64:	ldr	x1, [x19, #40]
    4d68:	add	x3, x1, #0x1
    4d6c:	str	x3, [x19, #40]
    4d70:	strb	w0, [x2, x1]
    4d74:	ldr	x0, [x19, #56]
    4d78:	ldr	x1, [x19, #16]
    4d7c:	ldr	w2, [x0, #20]
    4d80:	ldr	x0, [x19, #40]
    4d84:	add	x3, x0, #0x1
    4d88:	str	x3, [x19, #40]
    4d8c:	strb	w2, [x1, x0]
    4d90:	ldr	x0, [x19, #56]
    4d94:	ldr	x1, [x0, #24]
    4d98:	cbz	x1, 4dd4 <deflate@@Base+0x53c>
    4d9c:	ldr	w2, [x0, #32]
    4da0:	ldr	x1, [x19, #16]
    4da4:	ldr	x0, [x19, #40]
    4da8:	add	x3, x0, #0x1
    4dac:	str	x3, [x19, #40]
    4db0:	strb	w2, [x1, x0]
    4db4:	ldr	x0, [x19, #56]
    4db8:	ldr	x2, [x19, #16]
    4dbc:	ldr	x1, [x19, #40]
    4dc0:	ldr	w0, [x0, #32]
    4dc4:	add	x3, x1, #0x1
    4dc8:	str	x3, [x19, #40]
    4dcc:	lsr	w0, w0, #8
    4dd0:	strb	w0, [x2, x1]
    4dd4:	ldr	x0, [x19, #56]
    4dd8:	ldr	w0, [x0, #68]
    4ddc:	cbz	w0, 4df4 <deflate@@Base+0x55c>
    4de0:	ldr	w2, [x19, #40]
    4de4:	ldr	x1, [x19, #16]
    4de8:	ldr	x0, [x20, #96]
    4dec:	bl	2430 <crc32@plt>
    4df0:	str	x0, [x20, #96]
    4df4:	mov	w0, #0x45                  	// #69
    4df8:	str	w0, [x19, #8]
    4dfc:	str	xzr, [x19, #64]
    4e00:	ldr	x0, [x19, #56]
    4e04:	ldr	x1, [x0, #24]
    4e08:	cbz	x1, 4e88 <deflate@@Base+0x5f0>
    4e0c:	ldrh	w25, [x0, #32]
    4e10:	ldr	x0, [x19, #64]
    4e14:	ldr	x23, [x19, #40]
    4e18:	sub	w25, w25, w0
    4e1c:	ldp	x1, x2, [x19, #56]
    4e20:	mov	w24, w25
    4e24:	ldp	x0, x26, [x19, #16]
    4e28:	ldr	x27, [x19, #40]
    4e2c:	ldr	x1, [x1, #24]
    4e30:	add	x0, x0, x27
    4e34:	add	x1, x1, x2
    4e38:	add	x2, x27, w25, uxtw
    4e3c:	cmp	x2, x26
    4e40:	b.hi	50c0 <deflate@@Base+0x828>  // b.pmore
    4e44:	mov	x2, x24
    4e48:	bl	23a0 <memcpy@plt>
    4e4c:	ldr	x0, [x19, #56]
    4e50:	ldr	x2, [x19, #40]
    4e54:	ldr	w0, [x0, #68]
    4e58:	add	x2, x24, x2
    4e5c:	str	x2, [x19, #40]
    4e60:	cbz	w0, 4e84 <deflate@@Base+0x5ec>
    4e64:	cmp	x2, x23
    4e68:	b.ls	4e84 <deflate@@Base+0x5ec>  // b.plast
    4e6c:	ldr	x0, [x20, #96]
    4e70:	sub	w2, w2, w23
    4e74:	ldr	x1, [x19, #16]
    4e78:	add	x1, x1, x23
    4e7c:	bl	2430 <crc32@plt>
    4e80:	str	x0, [x20, #96]
    4e84:	str	xzr, [x19, #64]
    4e88:	mov	w0, #0x49                  	// #73
    4e8c:	str	w0, [x19, #8]
    4e90:	ldr	x0, [x19, #56]
    4e94:	ldr	x0, [x0, #40]
    4e98:	cbz	x0, 4f50 <deflate@@Base+0x6b8>
    4e9c:	ldr	x0, [x19, #40]
    4ea0:	ldr	x1, [x19, #24]
    4ea4:	ldr	x2, [x19, #40]
    4ea8:	cmp	x2, x1
    4eac:	b.ne	4eec <deflate@@Base+0x654>  // b.any
    4eb0:	ldr	x1, [x19, #56]
    4eb4:	ldr	w1, [x1, #68]
    4eb8:	cbz	w1, 4edc <deflate@@Base+0x644>
    4ebc:	cmp	x2, x0
    4ec0:	b.ls	4edc <deflate@@Base+0x644>  // b.plast
    4ec4:	ldr	x1, [x19, #16]
    4ec8:	sub	w2, w2, w0
    4ecc:	add	x1, x1, x0
    4ed0:	ldr	x0, [x20, #96]
    4ed4:	bl	2430 <crc32@plt>
    4ed8:	str	x0, [x20, #96]
    4edc:	mov	x0, x20
    4ee0:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    4ee4:	ldr	x0, [x19, #40]
    4ee8:	cbnz	x0, 4974 <deflate@@Base+0xdc>
    4eec:	ldr	x1, [x19, #56]
    4ef0:	ldr	x2, [x1, #40]
    4ef4:	ldr	x1, [x19, #64]
    4ef8:	add	x3, x1, #0x1
    4efc:	str	x3, [x19, #64]
    4f00:	ldr	x3, [x19, #16]
    4f04:	ldrb	w1, [x2, x1]
    4f08:	ldr	x2, [x19, #40]
    4f0c:	add	x4, x2, #0x1
    4f10:	str	x4, [x19, #40]
    4f14:	strb	w1, [x3, x2]
    4f18:	cbnz	w1, 4ea0 <deflate@@Base+0x608>
    4f1c:	ldr	x1, [x19, #56]
    4f20:	ldr	w1, [x1, #68]
    4f24:	cbz	w1, 4f4c <deflate@@Base+0x6b4>
    4f28:	ldr	x2, [x19, #40]
    4f2c:	cmp	x2, x0
    4f30:	b.ls	4f4c <deflate@@Base+0x6b4>  // b.plast
    4f34:	ldr	x1, [x19, #16]
    4f38:	sub	w2, w2, w0
    4f3c:	add	x1, x1, x0
    4f40:	ldr	x0, [x20, #96]
    4f44:	bl	2430 <crc32@plt>
    4f48:	str	x0, [x20, #96]
    4f4c:	str	xzr, [x19, #64]
    4f50:	mov	w0, #0x5b                  	// #91
    4f54:	str	w0, [x19, #8]
    4f58:	ldr	x0, [x19, #56]
    4f5c:	ldr	x0, [x0, #56]
    4f60:	cbz	x0, 5014 <deflate@@Base+0x77c>
    4f64:	ldr	x0, [x19, #40]
    4f68:	ldr	x1, [x19, #24]
    4f6c:	ldr	x2, [x19, #40]
    4f70:	cmp	x2, x1
    4f74:	b.ne	4fb4 <deflate@@Base+0x71c>  // b.any
    4f78:	ldr	x1, [x19, #56]
    4f7c:	ldr	w1, [x1, #68]
    4f80:	cbz	w1, 4fa4 <deflate@@Base+0x70c>
    4f84:	cmp	x2, x0
    4f88:	b.ls	4fa4 <deflate@@Base+0x70c>  // b.plast
    4f8c:	ldr	x1, [x19, #16]
    4f90:	sub	w2, w2, w0
    4f94:	add	x1, x1, x0
    4f98:	ldr	x0, [x20, #96]
    4f9c:	bl	2430 <crc32@plt>
    4fa0:	str	x0, [x20, #96]
    4fa4:	mov	x0, x20
    4fa8:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    4fac:	ldr	x0, [x19, #40]
    4fb0:	cbnz	x0, 4974 <deflate@@Base+0xdc>
    4fb4:	ldr	x1, [x19, #56]
    4fb8:	ldr	x2, [x1, #56]
    4fbc:	ldr	x1, [x19, #64]
    4fc0:	add	x3, x1, #0x1
    4fc4:	str	x3, [x19, #64]
    4fc8:	ldr	x3, [x19, #16]
    4fcc:	ldrb	w1, [x2, x1]
    4fd0:	ldr	x2, [x19, #40]
    4fd4:	add	x4, x2, #0x1
    4fd8:	str	x4, [x19, #40]
    4fdc:	strb	w1, [x3, x2]
    4fe0:	cbnz	w1, 4f68 <deflate@@Base+0x6d0>
    4fe4:	ldr	x1, [x19, #56]
    4fe8:	ldr	w1, [x1, #68]
    4fec:	cbz	w1, 5014 <deflate@@Base+0x77c>
    4ff0:	ldr	x2, [x19, #40]
    4ff4:	cmp	x2, x0
    4ff8:	b.ls	5014 <deflate@@Base+0x77c>  // b.plast
    4ffc:	ldr	x1, [x19, #16]
    5000:	sub	w2, w2, w0
    5004:	add	x1, x1, x0
    5008:	ldr	x0, [x20, #96]
    500c:	bl	2430 <crc32@plt>
    5010:	str	x0, [x20, #96]
    5014:	mov	w0, #0x67                  	// #103
    5018:	str	w0, [x19, #8]
    501c:	ldr	x0, [x19, #56]
    5020:	ldr	w0, [x0, #68]
    5024:	cbz	w0, 5094 <deflate@@Base+0x7fc>
    5028:	ldr	x0, [x19, #40]
    502c:	ldr	x1, [x19, #24]
    5030:	add	x0, x0, #0x2
    5034:	cmp	x0, x1
    5038:	b.ls	504c <deflate@@Base+0x7b4>  // b.plast
    503c:	mov	x0, x20
    5040:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    5044:	ldr	x0, [x19, #40]
    5048:	cbnz	x0, 4974 <deflate@@Base+0xdc>
    504c:	ldr	x1, [x19, #16]
    5050:	ldr	x0, [x19, #40]
    5054:	ldr	x2, [x20, #96]
    5058:	add	x3, x0, #0x1
    505c:	str	x3, [x19, #40]
    5060:	strb	w2, [x1, x0]
    5064:	ldr	x2, [x19, #16]
    5068:	ldr	x1, [x19, #40]
    506c:	ldr	x0, [x20, #96]
    5070:	add	x3, x1, #0x1
    5074:	str	x3, [x19, #40]
    5078:	lsr	x0, x0, #8
    507c:	strb	w0, [x2, x1]
    5080:	mov	w2, #0x0                   	// #0
    5084:	mov	x1, #0x0                   	// #0
    5088:	mov	x0, #0x0                   	// #0
    508c:	bl	2430 <crc32@plt>
    5090:	str	x0, [x20, #96]
    5094:	mov	w0, #0x71                  	// #113
    5098:	str	w0, [x19, #8]
    509c:	mov	x0, x20
    50a0:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    50a4:	ldr	x0, [x19, #40]
    50a8:	cbz	x0, 49f0 <deflate@@Base+0x158>
    50ac:	b	4974 <deflate@@Base+0xdc>
    50b0:	mov	w0, #0x2                   	// #2
    50b4:	b	4d60 <deflate@@Base+0x4c8>
    50b8:	mov	w0, #0x4                   	// #4
    50bc:	b	4d60 <deflate@@Base+0x4c8>
    50c0:	sub	w24, w26, w27
    50c4:	mov	x2, x24
    50c8:	bl	23a0 <memcpy@plt>
    50cc:	ldr	x0, [x19, #56]
    50d0:	ldr	x2, [x19, #24]
    50d4:	ldr	w0, [x0, #68]
    50d8:	str	x2, [x19, #40]
    50dc:	cbz	w0, 5100 <deflate@@Base+0x868>
    50e0:	cmp	x2, x23
    50e4:	b.ls	5100 <deflate@@Base+0x868>  // b.plast
    50e8:	ldr	x0, [x20, #96]
    50ec:	sub	w2, w2, w23
    50f0:	ldr	x1, [x19, #16]
    50f4:	add	x1, x1, x23
    50f8:	bl	2430 <crc32@plt>
    50fc:	str	x0, [x20, #96]
    5100:	ldr	x0, [x19, #64]
    5104:	add	x24, x0, x24
    5108:	str	x24, [x19, #64]
    510c:	mov	x0, x20
    5110:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    5114:	ldr	x23, [x19, #40]
    5118:	cbnz	x23, 4974 <deflate@@Base+0xdc>
    511c:	sub	w26, w27, w26
    5120:	add	w25, w25, w26
    5124:	b	4e1c <deflate@@Base+0x584>
    5128:	ldr	w1, [x19, #200]
    512c:	cmp	w1, #0x2
    5130:	b.ne	525c <deflate@@Base+0x9c4>  // b.any
    5134:	ldr	w0, [x19, #180]
    5138:	cbnz	w0, 5158 <deflate@@Base+0x8c0>
    513c:	mov	x0, x19
    5140:	bl	3248 <crc32_combine64@@ZLIB_1.2.3.3+0x31c>
    5144:	ldr	w0, [x19, #180]
    5148:	cbnz	w0, 5158 <deflate@@Base+0x8c0>
    514c:	cbnz	w21, 5390 <deflate@@Base+0xaf8>
    5150:	mov	w0, #0x0                   	// #0
    5154:	b	4a24 <deflate@@Base+0x18c>
    5158:	ldr	w0, [x19, #172]
    515c:	ldr	x1, [x19, #96]
    5160:	str	wzr, [x19, #160]
    5164:	ldr	x2, [x19, #5904]
    5168:	ldrb	w0, [x1, x0]
    516c:	ldr	w1, [x19, #5900]
    5170:	add	w3, w1, #0x1
    5174:	strh	wzr, [x2, w1, uxtw #1]
    5178:	ldr	x2, [x19, #5888]
    517c:	str	w3, [x19, #5900]
    5180:	strb	w0, [x2, w1, uxtw]
    5184:	add	x0, x19, w0, uxtb #2
    5188:	ldrh	w1, [x0, #212]
    518c:	add	w1, w1, #0x1
    5190:	strh	w1, [x0, #212]
    5194:	ldr	w0, [x19, #180]
    5198:	ldr	w1, [x19, #5896]
    519c:	sub	w0, w0, #0x1
    51a0:	str	w0, [x19, #180]
    51a4:	ldr	w0, [x19, #172]
    51a8:	sub	w1, w1, #0x1
    51ac:	ldr	w2, [x19, #5900]
    51b0:	add	w0, w0, #0x1
    51b4:	str	w0, [x19, #172]
    51b8:	cmp	w2, w1
    51bc:	b.ne	5134 <deflate@@Base+0x89c>  // b.any
    51c0:	ldr	x2, [x19, #152]
    51c4:	tbnz	x2, #63, 5200 <deflate@@Base+0x968>
    51c8:	ldr	x1, [x19, #96]
    51cc:	add	x1, x1, w2, uxtw
    51d0:	sub	x2, x0, x2
    51d4:	mov	w3, #0x0                   	// #0
    51d8:	mov	x0, x19
    51dc:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    51e0:	ldr	w0, [x19, #172]
    51e4:	str	x0, [x19, #152]
    51e8:	ldr	x0, [x19]
    51ec:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    51f0:	ldr	x0, [x19]
    51f4:	ldr	w0, [x0, #32]
    51f8:	cbnz	w0, 5134 <deflate@@Base+0x89c>
    51fc:	b	5150 <deflate@@Base+0x8b8>
    5200:	mov	x1, #0x0                   	// #0
    5204:	b	51d0 <deflate@@Base+0x938>
    5208:	mov	x1, #0x0                   	// #0
    520c:	ldr	w2, [x19, #172]
    5210:	mov	w3, #0x1                   	// #1
    5214:	sub	x2, x2, x0
    5218:	mov	x0, x19
    521c:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    5220:	ldr	w0, [x19, #172]
    5224:	str	x0, [x19, #152]
    5228:	ldr	x0, [x19]
    522c:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    5230:	ldr	x0, [x19]
    5234:	ldr	w0, [x0, #32]
    5238:	cbz	w0, 5244 <deflate@@Base+0x9ac>
    523c:	mov	w0, #0x3                   	// #3
    5240:	b	4a24 <deflate@@Base+0x18c>
    5244:	mov	w0, #0x2                   	// #2
    5248:	b	4a24 <deflate@@Base+0x18c>
    524c:	ldr	w0, [x19, #5900]
    5250:	cbnz	w0, 5514 <deflate@@Base+0xc7c>
    5254:	mov	w0, #0x1                   	// #1
    5258:	b	4a24 <deflate@@Base+0x18c>
    525c:	cmp	w1, #0x3
    5260:	b.ne	5564 <deflate@@Base+0xccc>  // b.any
    5264:	adrp	x23, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    5268:	adrp	x24, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    526c:	add	x23, x23, #0x200
    5270:	add	x24, x24, #0x3e8
    5274:	mov	w25, #0x102                 	// #258
    5278:	ldr	w0, [x19, #180]
    527c:	cmp	w0, #0x102
    5280:	b.ls	5374 <deflate@@Base+0xadc>  // b.plast
    5284:	ldr	w4, [x19, #180]
    5288:	str	wzr, [x19, #160]
    528c:	cmp	w4, #0x2
    5290:	b.hi	53b0 <deflate@@Base+0xb18>  // b.pmore
    5294:	ldr	w1, [x19, #5900]
    5298:	ldr	w0, [x19, #160]
    529c:	mov	w2, w1
    52a0:	ubfiz	x4, x1, #1, #32
    52a4:	cmp	w0, #0x2
    52a8:	add	w1, w1, #0x1
    52ac:	ldr	x3, [x19, #5888]
    52b0:	ldr	x5, [x19, #5904]
    52b4:	b.ls	54b4 <deflate@@Base+0xc1c>  // b.plast
    52b8:	sub	w0, w0, #0x3
    52bc:	mov	w6, #0x1                   	// #1
    52c0:	and	w0, w0, #0xff
    52c4:	strh	w6, [x5, x4]
    52c8:	str	w1, [x19, #5900]
    52cc:	strb	w0, [x3, x2]
    52d0:	ldrb	w0, [x23, w0, sxtw]
    52d4:	add	x0, x19, x0, lsl #2
    52d8:	ldrh	w1, [x0, #1240]
    52dc:	add	w1, w1, #0x1
    52e0:	strh	w1, [x0, #1240]
    52e4:	ldrb	w0, [x24]
    52e8:	add	x0, x19, x0, lsl #2
    52ec:	ldrh	w1, [x0, #2504]
    52f0:	add	w1, w1, #0x1
    52f4:	strh	w1, [x0, #2504]
    52f8:	ldr	w0, [x19, #5896]
    52fc:	ldr	w1, [x19, #5900]
    5300:	sub	w0, w0, #0x1
    5304:	ldr	w3, [x19, #160]
    5308:	cmp	w0, w1
    530c:	ldr	w0, [x19, #172]
    5310:	ldr	w1, [x19, #180]
    5314:	cset	w2, eq  // eq = none
    5318:	add	w0, w0, w3
    531c:	str	wzr, [x19, #160]
    5320:	sub	w1, w1, w3
    5324:	str	w0, [x19, #172]
    5328:	str	w1, [x19, #180]
    532c:	cbz	w2, 5278 <deflate@@Base+0x9e0>
    5330:	ldr	x0, [x19, #152]
    5334:	tbnz	x0, #63, 550c <deflate@@Base+0xc74>
    5338:	ldr	x1, [x19, #96]
    533c:	add	x1, x1, w0, uxtw
    5340:	ldr	w2, [x19, #172]
    5344:	mov	w3, #0x0                   	// #0
    5348:	sub	x2, x2, x0
    534c:	mov	x0, x19
    5350:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    5354:	ldr	w0, [x19, #172]
    5358:	str	x0, [x19, #152]
    535c:	ldr	x0, [x19]
    5360:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    5364:	ldr	x0, [x19]
    5368:	ldr	w0, [x0, #32]
    536c:	cbnz	w0, 5274 <deflate@@Base+0x9dc>
    5370:	b	5150 <deflate@@Base+0x8b8>
    5374:	mov	x0, x19
    5378:	bl	3248 <crc32_combine64@@ZLIB_1.2.3.3+0x31c>
    537c:	ldr	w0, [x19, #180]
    5380:	cmp	w0, #0x102
    5384:	b.hi	5284 <deflate@@Base+0x9ec>  // b.pmore
    5388:	cbz	w21, 5150 <deflate@@Base+0x8b8>
    538c:	cbnz	w0, 5284 <deflate@@Base+0x9ec>
    5390:	str	wzr, [x19, #5932]
    5394:	cmp	w21, #0x4
    5398:	b.ne	524c <deflate@@Base+0x9b4>  // b.any
    539c:	ldr	x0, [x19, #152]
    53a0:	tbnz	x0, #63, 5208 <deflate@@Base+0x970>
    53a4:	ldr	x1, [x19, #96]
    53a8:	add	x1, x1, w0, uxtw
    53ac:	b	520c <deflate@@Base+0x974>
    53b0:	ldr	w3, [x19, #172]
    53b4:	cbz	w3, 5294 <deflate@@Base+0x9fc>
    53b8:	ldr	x0, [x19, #96]
    53bc:	mov	w3, w3
    53c0:	sub	x1, x3, #0x1
    53c4:	add	x2, x0, x1
    53c8:	ldrb	w1, [x0, x1]
    53cc:	ldrb	w5, [x2, #1]
    53d0:	cmp	w5, w1
    53d4:	b.ne	5294 <deflate@@Base+0x9fc>  // b.any
    53d8:	ldrb	w5, [x2, #2]
    53dc:	cmp	w5, w1
    53e0:	b.ne	5294 <deflate@@Base+0x9fc>  // b.any
    53e4:	ldrb	w5, [x2, #3]
    53e8:	cmp	w5, w1
    53ec:	b.ne	5294 <deflate@@Base+0x9fc>  // b.any
    53f0:	add	x3, x3, #0x102
    53f4:	add	x2, x2, #0x3
    53f8:	add	x0, x0, x3
    53fc:	ldrb	w3, [x2, #1]
    5400:	cmp	w3, w1
    5404:	b.ne	54ac <deflate@@Base+0xc14>  // b.any
    5408:	ldrb	w3, [x2, #2]
    540c:	cmp	w3, w1
    5410:	b.eq	5430 <deflate@@Base+0xb98>  // b.none
    5414:	add	x2, x2, #0x2
    5418:	sub	x2, x0, x2
    541c:	sub	w2, w25, w2
    5420:	cmp	w4, w2
    5424:	csel	w2, w4, w2, cc  // cc = lo, ul, last
    5428:	str	w2, [x19, #160]
    542c:	b	5294 <deflate@@Base+0x9fc>
    5430:	ldrb	w3, [x2, #3]
    5434:	cmp	w3, w1
    5438:	b.eq	5444 <deflate@@Base+0xbac>  // b.none
    543c:	add	x2, x2, #0x3
    5440:	b	5418 <deflate@@Base+0xb80>
    5444:	ldrb	w3, [x2, #4]
    5448:	cmp	w3, w1
    544c:	b.eq	5458 <deflate@@Base+0xbc0>  // b.none
    5450:	add	x2, x2, #0x4
    5454:	b	5418 <deflate@@Base+0xb80>
    5458:	ldrb	w3, [x2, #5]
    545c:	cmp	w3, w1
    5460:	b.eq	546c <deflate@@Base+0xbd4>  // b.none
    5464:	add	x2, x2, #0x5
    5468:	b	5418 <deflate@@Base+0xb80>
    546c:	ldrb	w3, [x2, #6]
    5470:	cmp	w3, w1
    5474:	b.eq	5480 <deflate@@Base+0xbe8>  // b.none
    5478:	add	x2, x2, #0x6
    547c:	b	5418 <deflate@@Base+0xb80>
    5480:	ldrb	w3, [x2, #7]
    5484:	cmp	w3, w1
    5488:	b.eq	5494 <deflate@@Base+0xbfc>  // b.none
    548c:	add	x2, x2, #0x7
    5490:	b	5418 <deflate@@Base+0xb80>
    5494:	ldrb	w3, [x2, #8]!
    5498:	cmp	w3, w1
    549c:	b.ne	5418 <deflate@@Base+0xb80>  // b.any
    54a0:	cmp	x0, x2
    54a4:	b.hi	53fc <deflate@@Base+0xb64>  // b.pmore
    54a8:	b	5418 <deflate@@Base+0xb80>
    54ac:	add	x2, x2, #0x1
    54b0:	b	5418 <deflate@@Base+0xb80>
    54b4:	ldr	w0, [x19, #172]
    54b8:	ldr	x6, [x19, #96]
    54bc:	ldrb	w0, [x6, x0]
    54c0:	strh	wzr, [x5, x4]
    54c4:	str	w1, [x19, #5900]
    54c8:	strb	w0, [x3, x2]
    54cc:	add	x0, x19, w0, uxtb #2
    54d0:	ldrh	w1, [x0, #212]
    54d4:	add	w1, w1, #0x1
    54d8:	strh	w1, [x0, #212]
    54dc:	ldr	w0, [x19, #5896]
    54e0:	ldr	w1, [x19, #5900]
    54e4:	sub	w0, w0, #0x1
    54e8:	cmp	w0, w1
    54ec:	ldr	w0, [x19, #180]
    54f0:	cset	w2, eq  // eq = none
    54f4:	sub	w0, w0, #0x1
    54f8:	str	w0, [x19, #180]
    54fc:	ldr	w0, [x19, #172]
    5500:	add	w0, w0, #0x1
    5504:	str	w0, [x19, #172]
    5508:	b	532c <deflate@@Base+0xa94>
    550c:	mov	x1, #0x0                   	// #0
    5510:	b	5340 <deflate@@Base+0xaa8>
    5514:	ldr	x0, [x19, #152]
    5518:	tbnz	x0, #63, 555c <deflate@@Base+0xcc4>
    551c:	ldr	x1, [x19, #96]
    5520:	add	x1, x1, w0, uxtw
    5524:	ldr	w2, [x19, #172]
    5528:	mov	w3, #0x0                   	// #0
    552c:	sub	x2, x2, x0
    5530:	mov	x0, x19
    5534:	bl	a50c <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>
    5538:	ldr	w0, [x19, #172]
    553c:	str	x0, [x19, #152]
    5540:	ldr	x0, [x19]
    5544:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    5548:	ldr	x0, [x19]
    554c:	ldr	w0, [x0, #32]
    5550:	cmp	w0, #0x0
    5554:	cset	w0, ne  // ne = any
    5558:	b	4a24 <deflate@@Base+0x18c>
    555c:	mov	x1, #0x0                   	// #0
    5560:	b	5524 <deflate@@Base+0xc8c>
    5564:	adrp	x1, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    5568:	add	x1, x1, #0xc68
    556c:	add	x0, x1, w0, sxtw #4
    5570:	mov	w1, w21
    5574:	ldr	x2, [x0, #8]
    5578:	mov	x0, x19
    557c:	blr	x2
    5580:	b	4a24 <deflate@@Base+0x18c>
    5584:	cmp	w0, #0x1
    5588:	b.ne	55ac <deflate@@Base+0xd14>  // b.any
    558c:	cmp	w21, #0x1
    5590:	b.ne	56cc <deflate@@Base+0xe34>  // b.any
    5594:	mov	x0, x19
    5598:	bl	a430 <inflateCodesUsed@@ZLIB_1.2.9+0x15f0>
    559c:	mov	x0, x20
    55a0:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    55a4:	ldr	w0, [x20, #32]
    55a8:	cbz	w0, 4974 <deflate@@Base+0xdc>
    55ac:	cmp	w21, #0x4
    55b0:	b.ne	4934 <deflate@@Base+0x9c>  // b.any
    55b4:	ldr	w0, [x19, #48]
    55b8:	cmp	w0, #0x0
    55bc:	b.le	573c <deflate@@Base+0xea4>
    55c0:	cmp	w0, #0x2
    55c4:	ldr	x1, [x20, #96]
    55c8:	b.ne	5724 <deflate@@Base+0xe8c>  // b.any
    55cc:	ldr	x2, [x19, #16]
    55d0:	ldr	x0, [x19, #40]
    55d4:	add	x3, x0, #0x1
    55d8:	str	x3, [x19, #40]
    55dc:	strb	w1, [x2, x0]
    55e0:	ldr	x2, [x19, #16]
    55e4:	ldr	x1, [x19, #40]
    55e8:	ldr	x0, [x20, #96]
    55ec:	add	x3, x1, #0x1
    55f0:	str	x3, [x19, #40]
    55f4:	lsr	x0, x0, #8
    55f8:	strb	w0, [x2, x1]
    55fc:	ldr	x2, [x19, #16]
    5600:	ldr	x1, [x19, #40]
    5604:	ldr	x0, [x20, #96]
    5608:	add	x3, x1, #0x1
    560c:	str	x3, [x19, #40]
    5610:	lsr	x0, x0, #16
    5614:	strb	w0, [x2, x1]
    5618:	ldr	x2, [x19, #16]
    561c:	ldr	x1, [x19, #40]
    5620:	ldr	x0, [x20, #96]
    5624:	add	x3, x1, #0x1
    5628:	str	x3, [x19, #40]
    562c:	lsr	x0, x0, #24
    5630:	strb	w0, [x2, x1]
    5634:	ldr	x1, [x19, #16]
    5638:	ldr	x0, [x19, #40]
    563c:	ldr	x2, [x20, #16]
    5640:	add	x3, x0, #0x1
    5644:	str	x3, [x19, #40]
    5648:	strb	w2, [x1, x0]
    564c:	ldr	x0, [x20, #16]
    5650:	ldr	x2, [x19, #16]
    5654:	ldr	x1, [x19, #40]
    5658:	lsr	x0, x0, #8
    565c:	add	x3, x1, #0x1
    5660:	str	x3, [x19, #40]
    5664:	strb	w0, [x2, x1]
    5668:	ldr	x2, [x19, #16]
    566c:	ldr	x0, [x20, #16]
    5670:	ldr	x1, [x19, #40]
    5674:	lsr	x0, x0, #16
    5678:	add	x3, x1, #0x1
    567c:	str	x3, [x19, #40]
    5680:	strb	w0, [x2, x1]
    5684:	ldr	x0, [x20, #16]
    5688:	ldr	x2, [x19, #16]
    568c:	ldr	x1, [x19, #40]
    5690:	lsr	x0, x0, #24
    5694:	add	x3, x1, #0x1
    5698:	str	x3, [x19, #40]
    569c:	strb	w0, [x2, x1]
    56a0:	mov	x0, x20
    56a4:	bl	345c <crc32_combine64@@ZLIB_1.2.3.3+0x530>
    56a8:	ldr	w0, [x19, #48]
    56ac:	cmp	w0, #0x0
    56b0:	b.le	56bc <deflate@@Base+0xe24>
    56b4:	neg	w0, w0
    56b8:	str	w0, [x19, #48]
    56bc:	ldr	x0, [x19, #40]
    56c0:	cmp	x0, #0x0
    56c4:	cset	w22, eq  // eq = none
    56c8:	b	4934 <deflate@@Base+0x9c>
    56cc:	cmp	w21, #0x5
    56d0:	b.eq	559c <deflate@@Base+0xd04>  // b.none
    56d4:	mov	x0, x19
    56d8:	mov	w3, #0x0                   	// #0
    56dc:	mov	x2, #0x0                   	// #0
    56e0:	mov	x1, #0x0                   	// #0
    56e4:	bl	a2f8 <inflateCodesUsed@@ZLIB_1.2.9+0x14b8>
    56e8:	cmp	w21, #0x3
    56ec:	b.ne	559c <deflate@@Base+0xd04>  // b.any
    56f0:	ldr	w2, [x19, #132]
    56f4:	mov	w1, #0x0                   	// #0
    56f8:	ldr	x0, [x19, #120]
    56fc:	sub	w2, w2, #0x1
    5700:	lsl	x2, x2, #1
    5704:	strh	wzr, [x0, x2]
    5708:	bl	24a0 <memset@plt>
    570c:	ldr	w0, [x19, #180]
    5710:	cbnz	w0, 559c <deflate@@Base+0xd04>
    5714:	str	xzr, [x19, #152]
    5718:	str	wzr, [x19, #172]
    571c:	str	wzr, [x19, #5932]
    5720:	b	559c <deflate@@Base+0xd04>
    5724:	ubfx	x1, x1, #16, #32
    5728:	mov	x0, x19
    572c:	bl	2f90 <crc32_combine64@@ZLIB_1.2.3.3+0x64>
    5730:	ldrh	w1, [x20, #96]
    5734:	bl	2f90 <crc32_combine64@@ZLIB_1.2.3.3+0x64>
    5738:	b	56a0 <deflate@@Base+0xe08>
    573c:	mov	w22, #0x1                   	// #1
    5740:	b	4934 <deflate@@Base+0x9c>

0000000000005744 <deflateParams@@Base>:
    5744:	stp	x29, x30, [sp, #-64]!
    5748:	mov	x29, sp
    574c:	stp	x19, x20, [sp, #16]
    5750:	mov	w20, w1
    5754:	stp	x21, x22, [sp, #32]
    5758:	mov	w22, w2
    575c:	str	x23, [sp, #48]
    5760:	mov	x23, x0
    5764:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    5768:	cbz	w0, 5788 <deflateParams@@Base+0x44>
    576c:	mov	w21, #0xfffffffe            	// #-2
    5770:	mov	w0, w21
    5774:	ldp	x19, x20, [sp, #16]
    5778:	ldp	x21, x22, [sp, #32]
    577c:	ldr	x23, [sp, #48]
    5780:	ldp	x29, x30, [sp], #64
    5784:	ret
    5788:	mov	w21, w0
    578c:	cmn	w20, #0x1
    5790:	ldr	x19, [x23, #56]
    5794:	b.eq	57ec <deflateParams@@Base+0xa8>  // b.none
    5798:	cmp	w20, #0x9
    579c:	b.hi	576c <deflateParams@@Base+0x28>  // b.pmore
    57a0:	cmp	w22, #0x4
    57a4:	b.hi	576c <deflateParams@@Base+0x28>  // b.pmore
    57a8:	ldr	w0, [x19, #200]
    57ac:	cmp	w0, w22
    57b0:	b.ne	57f4 <deflateParams@@Base+0xb0>  // b.any
    57b4:	ldrsw	x1, [x19, #196]
    57b8:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    57bc:	add	x0, x0, #0xc68
    57c0:	add	x2, x0, w20, sxtw #4
    57c4:	add	x0, x0, x1, lsl #4
    57c8:	ldr	x1, [x2, #8]
    57cc:	ldr	x0, [x0, #8]
    57d0:	cmp	x1, x0
    57d4:	b.ne	57f4 <deflateParams@@Base+0xb0>  // b.any
    57d8:	ldr	w0, [x19, #196]
    57dc:	cmp	w0, w20
    57e0:	b.ne	5820 <deflateParams@@Base+0xdc>  // b.any
    57e4:	str	w22, [x19, #200]
    57e8:	b	5770 <deflateParams@@Base+0x2c>
    57ec:	mov	w20, #0x6                   	// #6
    57f0:	b	57a0 <deflateParams@@Base+0x5c>
    57f4:	ldr	x0, [x19, #5944]
    57f8:	cbz	x0, 57d8 <deflateParams@@Base+0x94>
    57fc:	mov	x0, x23
    5800:	mov	w1, #0x5                   	// #5
    5804:	bl	2490 <deflate@plt>
    5808:	cmn	w0, #0x2
    580c:	b.eq	576c <deflateParams@@Base+0x28>  // b.none
    5810:	ldr	w0, [x23, #32]
    5814:	cbnz	w0, 57d8 <deflateParams@@Base+0x94>
    5818:	mov	w21, #0xfffffffb            	// #-5
    581c:	b	5770 <deflateParams@@Base+0x2c>
    5820:	cbnz	w0, 5858 <deflateParams@@Base+0x114>
    5824:	ldr	w0, [x19, #5928]
    5828:	cbz	w0, 5858 <deflateParams@@Base+0x114>
    582c:	cmp	w0, #0x1
    5830:	b.ne	5890 <deflateParams@@Base+0x14c>  // b.any
    5834:	mov	x0, x19
    5838:	bl	2f30 <crc32_combine64@@ZLIB_1.2.3.3+0x4>
    583c:	ldr	w2, [x19, #132]
    5840:	mov	w1, #0x0                   	// #0
    5844:	ldr	x0, [x19, #120]
    5848:	sub	w2, w2, #0x1
    584c:	lsl	x2, x2, #1
    5850:	bl	24a0 <memset@plt>
    5854:	str	wzr, [x19, #5928]
    5858:	sbfiz	x1, x20, #4, #32
    585c:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    5860:	add	x0, x0, #0xc68
    5864:	str	w20, [x19, #196]
    5868:	add	x20, x0, w20, sxtw #4
    586c:	ldrh	w0, [x0, x1]
    5870:	str	w0, [x19, #204]
    5874:	ldrh	w0, [x20, #4]
    5878:	ldrh	w2, [x20, #2]
    587c:	str	w0, [x19, #208]
    5880:	ldrh	w0, [x20, #6]
    5884:	str	w0, [x19, #188]
    5888:	str	w2, [x19, #192]
    588c:	b	57e4 <deflateParams@@Base+0xa0>
    5890:	ldr	w0, [x19, #132]
    5894:	ldr	x1, [x19, #120]
    5898:	sub	w0, w0, #0x1
    589c:	strh	wzr, [x1, x0, lsl #1]
    58a0:	b	583c <deflateParams@@Base+0xf8>

00000000000058a4 <deflateEnd@@Base>:
    58a4:	stp	x29, x30, [sp, #-32]!
    58a8:	mov	x29, sp
    58ac:	stp	x19, x20, [sp, #16]
    58b0:	mov	x19, x0
    58b4:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    58b8:	cbnz	w0, 5938 <deflateEnd@@Base+0x94>
    58bc:	ldr	x0, [x19, #56]
    58c0:	ldr	x1, [x0, #16]
    58c4:	ldr	w20, [x0, #8]
    58c8:	cbz	x1, 58d4 <deflateEnd@@Base+0x30>
    58cc:	ldp	x2, x0, [x19, #72]
    58d0:	blr	x2
    58d4:	ldr	x0, [x19, #56]
    58d8:	ldr	x1, [x0, #120]
    58dc:	cbz	x1, 58e8 <deflateEnd@@Base+0x44>
    58e0:	ldp	x2, x0, [x19, #72]
    58e4:	blr	x2
    58e8:	ldr	x0, [x19, #56]
    58ec:	ldr	x1, [x0, #112]
    58f0:	cbz	x1, 58fc <deflateEnd@@Base+0x58>
    58f4:	ldp	x2, x0, [x19, #72]
    58f8:	blr	x2
    58fc:	ldr	x0, [x19, #56]
    5900:	ldr	x1, [x0, #96]
    5904:	cbz	x1, 5910 <deflateEnd@@Base+0x6c>
    5908:	ldp	x2, x0, [x19, #72]
    590c:	blr	x2
    5910:	ldp	x2, x0, [x19, #72]
    5914:	ldr	x1, [x19, #56]
    5918:	blr	x2
    591c:	str	xzr, [x19, #56]
    5920:	cmp	w20, #0x71
    5924:	mov	w0, #0xfffffffd            	// #-3
    5928:	csel	w0, wzr, w0, ne  // ne = any
    592c:	ldp	x19, x20, [sp, #16]
    5930:	ldp	x29, x30, [sp], #32
    5934:	ret
    5938:	mov	w0, #0xfffffffe            	// #-2
    593c:	b	592c <deflateEnd@@Base+0x88>

0000000000005940 <deflateInit2_@@Base>:
    5940:	cbz	x6, 5bb0 <deflateInit2_@@Base+0x270>
    5944:	stp	x29, x30, [sp, #-80]!
    5948:	mov	x29, sp
    594c:	stp	x19, x20, [sp, #16]
    5950:	mov	x20, x0
    5954:	ldrb	w0, [x6]
    5958:	stp	x21, x22, [sp, #32]
    595c:	cmp	w0, #0x31
    5960:	stp	x23, x24, [sp, #48]
    5964:	str	x25, [sp, #64]
    5968:	b.ne	5bb8 <deflateInit2_@@Base+0x278>  // b.any
    596c:	cmp	w7, #0x70
    5970:	b.ne	5bb8 <deflateInit2_@@Base+0x278>  // b.any
    5974:	cbnz	x20, 5994 <deflateInit2_@@Base+0x54>
    5978:	mov	w0, #0xfffffffe            	// #-2
    597c:	ldp	x19, x20, [sp, #16]
    5980:	ldp	x21, x22, [sp, #32]
    5984:	ldp	x23, x24, [sp, #48]
    5988:	ldr	x25, [sp, #64]
    598c:	ldp	x29, x30, [sp], #80
    5990:	ret
    5994:	ldr	x0, [x20, #64]
    5998:	str	xzr, [x20, #48]
    599c:	mov	w25, w1
    59a0:	mov	w21, w3
    59a4:	mov	w22, w4
    59a8:	mov	w23, w5
    59ac:	cbnz	x0, 59c0 <deflateInit2_@@Base+0x80>
    59b0:	adrp	x0, a000 <inflateCodesUsed@@ZLIB_1.2.9+0x11c0>
    59b4:	add	x0, x0, #0xb6c
    59b8:	str	x0, [x20, #64]
    59bc:	str	xzr, [x20, #80]
    59c0:	ldr	x0, [x20, #72]
    59c4:	cbnz	x0, 59d4 <deflateInit2_@@Base+0x94>
    59c8:	adrp	x0, a000 <inflateCodesUsed@@ZLIB_1.2.9+0x11c0>
    59cc:	add	x0, x0, #0xb74
    59d0:	str	x0, [x20, #72]
    59d4:	cmn	w25, #0x1
    59d8:	b.ne	59e0 <deflateInit2_@@Base+0xa0>  // b.any
    59dc:	mov	w25, #0x6                   	// #6
    59e0:	tbz	w21, #31, 5b58 <deflateInit2_@@Base+0x218>
    59e4:	neg	w21, w21
    59e8:	mov	w24, #0x0                   	// #0
    59ec:	sub	w0, w22, #0x1
    59f0:	cmp	w0, #0x8
    59f4:	b.hi	5978 <deflateInit2_@@Base+0x38>  // b.pmore
    59f8:	sub	w0, w21, #0x8
    59fc:	cmp	w0, #0x7
    5a00:	ccmp	w2, #0x8, #0x0, ls  // ls = plast
    5a04:	b.ne	5978 <deflateInit2_@@Base+0x38>  // b.any
    5a08:	cmp	w25, #0x9
    5a0c:	b.hi	5978 <deflateInit2_@@Base+0x38>  // b.pmore
    5a10:	cmp	w23, #0x4
    5a14:	b.hi	5978 <deflateInit2_@@Base+0x38>  // b.pmore
    5a18:	cmp	w21, #0x8
    5a1c:	ccmp	w24, #0x1, #0x4, eq  // eq = none
    5a20:	b.ne	5978 <deflateInit2_@@Base+0x38>  // b.any
    5a24:	cmp	w21, #0x8
    5a28:	mov	w0, #0x9                   	// #9
    5a2c:	csel	w21, w21, w0, ne  // ne = any
    5a30:	mov	w2, #0x1740                	// #5952
    5a34:	ldr	x3, [x20, #64]
    5a38:	mov	w1, #0x1                   	// #1
    5a3c:	ldr	x0, [x20, #80]
    5a40:	blr	x3
    5a44:	mov	x19, x0
    5a48:	cbz	x0, 5b50 <deflateInit2_@@Base+0x210>
    5a4c:	str	x19, [x20, #56]
    5a50:	mov	w0, #0x2a                  	// #42
    5a54:	ldr	x3, [x20, #64]
    5a58:	str	w24, [x19, #48]
    5a5c:	mov	w24, #0x1                   	// #1
    5a60:	str	w0, [x19, #8]
    5a64:	lsl	w1, w24, w21
    5a68:	sub	w0, w1, #0x1
    5a6c:	str	w0, [x19, #88]
    5a70:	add	w0, w22, #0x7
    5a74:	str	w0, [x19, #136]
    5a78:	mov	w2, #0x2                   	// #2
    5a7c:	lsl	w0, w24, w0
    5a80:	str	w0, [x19, #132]
    5a84:	sub	w0, w0, #0x1
    5a88:	str	w0, [x19, #140]
    5a8c:	add	w0, w22, #0x9
    5a90:	str	w21, [x19, #84]
    5a94:	mov	w21, #0x3                   	// #3
    5a98:	str	x20, [x19]
    5a9c:	str	xzr, [x19, #56]
    5aa0:	add	w22, w22, #0x6
    5aa4:	udiv	w0, w0, w21
    5aa8:	str	w1, [x19, #80]
    5aac:	str	w0, [x19, #144]
    5ab0:	ldr	x0, [x20, #80]
    5ab4:	blr	x3
    5ab8:	ldr	w1, [x19, #80]
    5abc:	mov	w2, #0x2                   	// #2
    5ac0:	ldr	x3, [x20, #64]
    5ac4:	str	x0, [x19, #96]
    5ac8:	ldr	x0, [x20, #80]
    5acc:	blr	x3
    5ad0:	ldr	w1, [x19, #132]
    5ad4:	mov	w2, #0x2                   	// #2
    5ad8:	ldr	x3, [x20, #64]
    5adc:	str	x0, [x19, #112]
    5ae0:	ldr	x0, [x20, #80]
    5ae4:	blr	x3
    5ae8:	ldr	x3, [x20, #64]
    5aec:	str	x0, [x19, #120]
    5af0:	ldr	x0, [x20, #80]
    5af4:	lsl	w1, w24, w22
    5af8:	str	w1, [x19, #5896]
    5afc:	mov	w2, #0x4                   	// #4
    5b00:	str	xzr, [x19, #5944]
    5b04:	blr	x3
    5b08:	ldr	w1, [x19, #5896]
    5b0c:	ubfiz	x2, x1, #2, #32
    5b10:	stp	x0, x2, [x19, #16]
    5b14:	ldr	x2, [x19, #96]
    5b18:	cbz	x2, 5b30 <deflateInit2_@@Base+0x1f0>
    5b1c:	ldr	x2, [x19, #112]
    5b20:	cbz	x2, 5b30 <deflateInit2_@@Base+0x1f0>
    5b24:	ldr	x2, [x19, #120]
    5b28:	cbz	x2, 5b30 <deflateInit2_@@Base+0x1f0>
    5b2c:	cbnz	x0, 5b74 <deflateInit2_@@Base+0x234>
    5b30:	mov	w0, #0x29a                 	// #666
    5b34:	str	w0, [x19, #8]
    5b38:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    5b3c:	ldr	x0, [x0, #4056]
    5b40:	ldr	x0, [x0, #48]
    5b44:	str	x0, [x20, #48]
    5b48:	mov	x0, x20
    5b4c:	bl	2590 <deflateEnd@plt>
    5b50:	mov	w0, #0xfffffffc            	// #-4
    5b54:	b	597c <deflateInit2_@@Base+0x3c>
    5b58:	cmp	w21, #0xf
    5b5c:	b.le	5b6c <deflateInit2_@@Base+0x22c>
    5b60:	sub	w21, w21, #0x10
    5b64:	mov	w24, #0x2                   	// #2
    5b68:	b	59ec <deflateInit2_@@Base+0xac>
    5b6c:	mov	w24, #0x1                   	// #1
    5b70:	b	59ec <deflateInit2_@@Base+0xac>
    5b74:	and	x2, x1, #0xfffffffe
    5b78:	stp	w25, w23, [x19, #196]
    5b7c:	add	x2, x0, x2
    5b80:	umaddl	x0, w1, w21, x0
    5b84:	str	x0, [x19, #5888]
    5b88:	mov	w0, #0x8                   	// #8
    5b8c:	strb	w0, [x19, #72]
    5b90:	str	x2, [x19, #5904]
    5b94:	mov	x0, x20
    5b98:	ldp	x19, x20, [sp, #16]
    5b9c:	ldp	x21, x22, [sp, #32]
    5ba0:	ldp	x23, x24, [sp, #48]
    5ba4:	ldr	x25, [sp, #64]
    5ba8:	ldp	x29, x30, [sp], #80
    5bac:	b	2480 <deflateReset@plt>
    5bb0:	mov	w0, #0xfffffffa            	// #-6
    5bb4:	ret
    5bb8:	mov	w0, #0xfffffffa            	// #-6
    5bbc:	b	597c <deflateInit2_@@Base+0x3c>

0000000000005bc0 <deflateInit_@@Base>:
    5bc0:	mov	w7, w3
    5bc4:	mov	x6, x2
    5bc8:	mov	w4, #0x8                   	// #8
    5bcc:	mov	w5, #0x0                   	// #0
    5bd0:	mov	w2, w4
    5bd4:	mov	w3, #0xf                   	// #15
    5bd8:	b	24d0 <deflateInit2_@plt>

0000000000005bdc <deflateCopy@@Base>:
    5bdc:	stp	x29, x30, [sp, #-64]!
    5be0:	mov	x3, x1
    5be4:	mov	x29, sp
    5be8:	stp	x19, x20, [sp, #16]
    5bec:	mov	x20, x0
    5bf0:	mov	x0, x1
    5bf4:	stp	x21, x22, [sp, #32]
    5bf8:	str	x23, [sp, #48]
    5bfc:	bl	41e0 <crc32_combine64@@ZLIB_1.2.3.3+0x12b4>
    5c00:	cbnz	w0, 5d8c <deflateCopy@@Base+0x1b0>
    5c04:	cbz	x20, 5d8c <deflateCopy@@Base+0x1b0>
    5c08:	mov	x1, x3
    5c0c:	mov	x2, #0x70                  	// #112
    5c10:	mov	w21, w0
    5c14:	mov	x0, x20
    5c18:	ldr	x23, [x3, #56]
    5c1c:	bl	23a0 <memcpy@plt>
    5c20:	ldr	x3, [x20, #64]
    5c24:	mov	w2, #0x1740                	// #5952
    5c28:	ldr	x0, [x20, #80]
    5c2c:	mov	w1, #0x1                   	// #1
    5c30:	blr	x3
    5c34:	mov	x19, x0
    5c38:	cbz	x0, 5cd8 <deflateCopy@@Base+0xfc>
    5c3c:	str	x0, [x20, #56]
    5c40:	mov	x1, x23
    5c44:	mov	x2, #0x1740                	// #5952
    5c48:	bl	23a0 <memcpy@plt>
    5c4c:	ldr	w1, [x19, #80]
    5c50:	mov	w2, #0x2                   	// #2
    5c54:	ldr	x3, [x20, #64]
    5c58:	ldr	x0, [x20, #80]
    5c5c:	str	x20, [x19]
    5c60:	blr	x3
    5c64:	ldr	w1, [x19, #80]
    5c68:	mov	w2, #0x2                   	// #2
    5c6c:	ldr	x3, [x20, #64]
    5c70:	str	x0, [x19, #96]
    5c74:	ldr	x0, [x20, #80]
    5c78:	blr	x3
    5c7c:	ldr	w1, [x19, #132]
    5c80:	mov	w2, #0x2                   	// #2
    5c84:	ldr	x3, [x20, #64]
    5c88:	str	x0, [x19, #112]
    5c8c:	ldr	x0, [x20, #80]
    5c90:	blr	x3
    5c94:	ldr	w1, [x19, #5896]
    5c98:	mov	w2, #0x4                   	// #4
    5c9c:	ldr	x3, [x20, #64]
    5ca0:	str	x0, [x19, #120]
    5ca4:	ldr	x0, [x20, #80]
    5ca8:	blr	x3
    5cac:	mov	x22, x0
    5cb0:	ldr	x0, [x19, #96]
    5cb4:	str	x22, [x19, #16]
    5cb8:	cbz	x0, 5cd0 <deflateCopy@@Base+0xf4>
    5cbc:	ldr	x1, [x19, #112]
    5cc0:	cbz	x1, 5cd0 <deflateCopy@@Base+0xf4>
    5cc4:	ldr	x1, [x19, #120]
    5cc8:	cbz	x1, 5cd0 <deflateCopy@@Base+0xf4>
    5ccc:	cbnz	x22, 5ce0 <deflateCopy@@Base+0x104>
    5cd0:	mov	x0, x20
    5cd4:	bl	2590 <deflateEnd@plt>
    5cd8:	mov	w21, #0xfffffffc            	// #-4
    5cdc:	b	5d74 <deflateCopy@@Base+0x198>
    5ce0:	ldr	x1, [x23, #96]
    5ce4:	ldr	w2, [x19, #80]
    5ce8:	lsl	w2, w2, #1
    5cec:	bl	23a0 <memcpy@plt>
    5cf0:	ldr	x1, [x23, #112]
    5cf4:	ldr	x0, [x19, #112]
    5cf8:	ldr	w2, [x19, #80]
    5cfc:	lsl	x2, x2, #1
    5d00:	bl	23a0 <memcpy@plt>
    5d04:	ldr	x1, [x23, #120]
    5d08:	ldr	x0, [x19, #120]
    5d0c:	ldr	w2, [x19, #132]
    5d10:	lsl	x2, x2, #1
    5d14:	bl	23a0 <memcpy@plt>
    5d18:	ldr	w2, [x19, #24]
    5d1c:	ldr	x1, [x23, #16]
    5d20:	ldr	x0, [x19, #16]
    5d24:	bl	23a0 <memcpy@plt>
    5d28:	ldr	x1, [x23, #16]
    5d2c:	ldr	x0, [x23, #32]
    5d30:	ldr	x2, [x19, #16]
    5d34:	sub	x0, x0, x1
    5d38:	ldr	w1, [x19, #5896]
    5d3c:	add	x0, x2, x0
    5d40:	str	x0, [x19, #32]
    5d44:	and	x0, x1, #0xfffffffe
    5d48:	add	x22, x22, x0
    5d4c:	mov	w0, #0x3                   	// #3
    5d50:	str	x22, [x19, #5904]
    5d54:	umaddl	x1, w1, w0, x2
    5d58:	add	x0, x19, #0xd4
    5d5c:	str	x0, [x19, #2904]
    5d60:	add	x0, x19, #0x9c8
    5d64:	str	x0, [x19, #2928]
    5d68:	add	x0, x19, #0xabc
    5d6c:	str	x0, [x19, #2952]
    5d70:	str	x1, [x19, #5888]
    5d74:	mov	w0, w21
    5d78:	ldp	x19, x20, [sp, #16]
    5d7c:	ldp	x21, x22, [sp, #32]
    5d80:	ldr	x23, [sp, #48]
    5d84:	ldp	x29, x30, [sp], #64
    5d88:	ret
    5d8c:	mov	w21, #0xfffffffe            	// #-2
    5d90:	b	5d74 <deflateCopy@@Base+0x198>

0000000000005d94 <inflateBackInit_@@ZLIB_1.2.0>:
    5d94:	cbz	x3, 5e5c <inflateBackInit_@@ZLIB_1.2.0+0xc8>
    5d98:	stp	x29, x30, [sp, #-48]!
    5d9c:	mov	x29, sp
    5da0:	stp	x19, x20, [sp, #16]
    5da4:	mov	x19, x0
    5da8:	str	x21, [sp, #32]
    5dac:	ldrb	w0, [x3]
    5db0:	cmp	w0, #0x31
    5db4:	b.ne	5e64 <inflateBackInit_@@ZLIB_1.2.0+0xd0>  // b.any
    5db8:	cmp	w4, #0x70
    5dbc:	b.ne	5e64 <inflateBackInit_@@ZLIB_1.2.0+0xd0>  // b.any
    5dc0:	cmp	x19, #0x0
    5dc4:	mov	x21, x2
    5dc8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    5dcc:	b.eq	5e6c <inflateBackInit_@@ZLIB_1.2.0+0xd8>  // b.none
    5dd0:	sub	w0, w1, #0x8
    5dd4:	mov	w20, w1
    5dd8:	cmp	w0, #0x7
    5ddc:	b.hi	5e6c <inflateBackInit_@@ZLIB_1.2.0+0xd8>  // b.pmore
    5de0:	ldr	x0, [x19, #64]
    5de4:	str	xzr, [x19, #48]
    5de8:	cbnz	x0, 5dfc <inflateBackInit_@@ZLIB_1.2.0+0x68>
    5dec:	adrp	x0, a000 <inflateCodesUsed@@ZLIB_1.2.9+0x11c0>
    5df0:	add	x0, x0, #0xb6c
    5df4:	str	x0, [x19, #64]
    5df8:	str	xzr, [x19, #80]
    5dfc:	ldr	x0, [x19, #72]
    5e00:	cbnz	x0, 5e10 <inflateBackInit_@@ZLIB_1.2.0+0x7c>
    5e04:	adrp	x0, a000 <inflateCodesUsed@@ZLIB_1.2.9+0x11c0>
    5e08:	add	x0, x0, #0xb74
    5e0c:	str	x0, [x19, #72]
    5e10:	ldr	x3, [x19, #64]
    5e14:	mov	w2, #0x1bf8                	// #7160
    5e18:	ldr	x0, [x19, #80]
    5e1c:	mov	w1, #0x1                   	// #1
    5e20:	blr	x3
    5e24:	cbz	x0, 5e74 <inflateBackInit_@@ZLIB_1.2.0+0xe0>
    5e28:	mov	w1, #0x8000                	// #32768
    5e2c:	str	x0, [x19, #56]
    5e30:	str	w1, [x0, #28]
    5e34:	mov	w1, #0x1                   	// #1
    5e38:	str	w20, [x0, #56]
    5e3c:	lsl	w20, w1, w20
    5e40:	str	w20, [x0, #60]
    5e44:	stp	xzr, x21, [x0, #64]
    5e48:	mov	w0, #0x0                   	// #0
    5e4c:	ldp	x19, x20, [sp, #16]
    5e50:	ldr	x21, [sp, #32]
    5e54:	ldp	x29, x30, [sp], #48
    5e58:	ret
    5e5c:	mov	w0, #0xfffffffa            	// #-6
    5e60:	ret
    5e64:	mov	w0, #0xfffffffa            	// #-6
    5e68:	b	5e4c <inflateBackInit_@@ZLIB_1.2.0+0xb8>
    5e6c:	mov	w0, #0xfffffffe            	// #-2
    5e70:	b	5e4c <inflateBackInit_@@ZLIB_1.2.0+0xb8>
    5e74:	mov	w0, #0xfffffffc            	// #-4
    5e78:	b	5e4c <inflateBackInit_@@ZLIB_1.2.0+0xb8>

0000000000005e7c <inflateBack@@ZLIB_1.2.0>:
    5e7c:	stp	x29, x30, [sp, #-192]!
    5e80:	mov	x29, sp
    5e84:	stp	x19, x20, [sp, #16]
    5e88:	stp	x21, x22, [sp, #32]
    5e8c:	stp	x23, x24, [sp, #48]
    5e90:	stp	x25, x26, [sp, #64]
    5e94:	stp	x27, x28, [sp, #80]
    5e98:	stp	x1, x3, [sp, #104]
    5e9c:	str	x4, [sp, #120]
    5ea0:	cbz	x0, 6b7c <inflateBack@@ZLIB_1.2.0+0xd00>
    5ea4:	ldr	x28, [x0, #56]
    5ea8:	mov	x20, x0
    5eac:	cbz	x28, 6b7c <inflateBack@@ZLIB_1.2.0+0xd00>
    5eb0:	str	xzr, [x20, #48]
    5eb4:	mov	x0, #0x3f3f                	// #16191
    5eb8:	str	x0, [x28, #8]
    5ebc:	mov	x23, x2
    5ec0:	str	wzr, [x28, #64]
    5ec4:	ldr	x0, [x20]
    5ec8:	str	x0, [sp, #184]
    5ecc:	cbz	x0, 5f38 <inflateBack@@ZLIB_1.2.0+0xbc>
    5ed0:	ldr	w24, [x20, #8]
    5ed4:	ldr	w19, [x28, #60]
    5ed8:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    5edc:	ldr	x21, [x28, #72]
    5ee0:	add	x0, x0, #0xea8
    5ee4:	add	x0, x0, #0x880
    5ee8:	mov	w26, #0x0                   	// #0
    5eec:	mov	x22, #0x0                   	// #0
    5ef0:	str	x0, [sp, #160]
    5ef4:	ldr	w0, [x28, #8]
    5ef8:	mov	w1, #0x3f48                	// #16200
    5efc:	cmp	w0, w1
    5f00:	b.hi	5f90 <inflateBack@@ZLIB_1.2.0+0x114>  // b.pmore
    5f04:	mov	w1, #0x3f3e                	// #16190
    5f08:	cmp	w0, w1
    5f0c:	b.ls	6b64 <inflateBack@@ZLIB_1.2.0+0xce8>  // b.plast
    5f10:	mov	w1, #0xffffc0c1            	// #-16191
    5f14:	add	w0, w0, w1
    5f18:	cmp	w0, #0x9
    5f1c:	b.hi	6b64 <inflateBack@@ZLIB_1.2.0+0xce8>  // b.pmore
    5f20:	adrp	x1, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    5f24:	add	x1, x1, #0xe94
    5f28:	ldrh	w0, [x1, w0, uxtw #1]
    5f2c:	adr	x1, 5f38 <inflateBack@@ZLIB_1.2.0+0xbc>
    5f30:	add	x0, x1, w0, sxth #2
    5f34:	br	x0
    5f38:	mov	w24, #0x0                   	// #0
    5f3c:	b	5ed4 <inflateBack@@ZLIB_1.2.0+0x58>
    5f40:	add	x25, sp, #0xb8
    5f44:	cmp	w26, #0xd
    5f48:	b.ls	61f8 <inflateBack@@ZLIB_1.2.0+0x37c>  // b.plast
    5f4c:	and	w1, w22, #0x1f
    5f50:	ubfx	w0, w22, #5, #5
    5f54:	ubfx	w2, w22, #10, #4
    5f58:	add	w1, w1, #0x101
    5f5c:	add	w0, w0, #0x1
    5f60:	add	w2, w2, #0x4
    5f64:	stp	w2, w1, [x28, #128]
    5f68:	lsr	x22, x22, #14
    5f6c:	str	w0, [x28, #136]
    5f70:	sub	w26, w26, #0xe
    5f74:	cmp	w1, #0x11e
    5f78:	b.hi	5f84 <inflateBack@@ZLIB_1.2.0+0x108>  // b.pmore
    5f7c:	cmp	w0, #0x1e
    5f80:	b.ls	6238 <inflateBack@@ZLIB_1.2.0+0x3bc>  // b.plast
    5f84:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    5f88:	add	x0, x0, #0xd95
    5f8c:	b	6100 <inflateBack@@ZLIB_1.2.0+0x284>
    5f90:	mov	w1, #0x3f50                	// #16208
    5f94:	cmp	w0, w1
    5f98:	b.eq	6b38 <inflateBack@@ZLIB_1.2.0+0xcbc>  // b.none
    5f9c:	mov	w1, #0x3f51                	// #16209
    5fa0:	cmp	w0, w1
    5fa4:	cset	w0, ne  // ne = any
    5fa8:	sub	w0, w0, #0x3
    5fac:	ldr	x1, [sp, #184]
    5fb0:	str	x1, [x20]
    5fb4:	str	w24, [x20, #8]
    5fb8:	ldp	x19, x20, [sp, #16]
    5fbc:	ldp	x21, x22, [sp, #32]
    5fc0:	ldp	x23, x24, [sp, #48]
    5fc4:	ldp	x25, x26, [sp, #64]
    5fc8:	ldp	x27, x28, [sp, #80]
    5fcc:	ldp	x29, x30, [sp], #192
    5fd0:	ret
    5fd4:	ldr	w0, [x28, #12]
    5fd8:	cbnz	w0, 6020 <inflateBack@@ZLIB_1.2.0+0x1a4>
    5fdc:	add	x25, sp, #0xb8
    5fe0:	cmp	w26, #0x2
    5fe4:	b.ls	6038 <inflateBack@@ZLIB_1.2.0+0x1bc>  // b.plast
    5fe8:	and	w0, w22, #0x1
    5fec:	str	w0, [x28, #12]
    5ff0:	ubfx	w0, w22, #1, #2
    5ff4:	cmp	w0, #0x2
    5ff8:	b.eq	60b0 <inflateBack@@ZLIB_1.2.0+0x234>  // b.none
    5ffc:	cmp	w0, #0x3
    6000:	b.eq	60b8 <inflateBack@@ZLIB_1.2.0+0x23c>  // b.none
    6004:	cmp	w0, #0x1
    6008:	b.eq	6088 <inflateBack@@ZLIB_1.2.0+0x20c>  // b.none
    600c:	mov	w0, #0x3f41                	// #16193
    6010:	lsr	x22, x22, #3
    6014:	sub	w26, w26, #0x3
    6018:	str	w0, [x28, #8]
    601c:	b	5ef4 <inflateBack@@ZLIB_1.2.0+0x78>
    6020:	and	w0, w26, #0x7
    6024:	and	w26, w26, #0xfffffff8
    6028:	lsr	x22, x22, x0
    602c:	mov	w0, #0x3f50                	// #16208
    6030:	str	w0, [x28, #8]
    6034:	b	5ef4 <inflateBack@@ZLIB_1.2.0+0x78>
    6038:	cbnz	w24, 6064 <inflateBack@@ZLIB_1.2.0+0x1e8>
    603c:	ldr	x2, [sp, #104]
    6040:	mov	x1, x25
    6044:	mov	x0, x23
    6048:	blr	x2
    604c:	mov	w24, w0
    6050:	cbnz	w0, 6064 <inflateBack@@ZLIB_1.2.0+0x1e8>
    6054:	mov	w0, #0xfffffffb            	// #-5
    6058:	mov	w24, #0x0                   	// #0
    605c:	str	xzr, [sp, #184]
    6060:	b	5fac <inflateBack@@ZLIB_1.2.0+0x130>
    6064:	ldr	x0, [sp, #184]
    6068:	sub	w24, w24, #0x1
    606c:	add	x1, x0, #0x1
    6070:	str	x1, [sp, #184]
    6074:	ldrb	w0, [x0]
    6078:	lsl	x0, x0, x26
    607c:	add	w26, w26, #0x8
    6080:	add	x22, x22, x0
    6084:	b	5fe0 <inflateBack@@ZLIB_1.2.0+0x164>
    6088:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    608c:	add	x0, x0, #0xea8
    6090:	str	x0, [x28, #104]
    6094:	add	x0, x0, #0x800
    6098:	str	x0, [x28, #112]
    609c:	mov	x0, #0x9                   	// #9
    60a0:	movk	x0, #0x5, lsl #32
    60a4:	str	x0, [x28, #120]
    60a8:	mov	w0, #0x3f48                	// #16200
    60ac:	b	6010 <inflateBack@@ZLIB_1.2.0+0x194>
    60b0:	mov	w0, #0x3f44                	// #16196
    60b4:	b	6010 <inflateBack@@ZLIB_1.2.0+0x194>
    60b8:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    60bc:	add	x0, x0, #0xd65
    60c0:	str	x0, [x20, #48]
    60c4:	mov	w0, #0x3f51                	// #16209
    60c8:	b	6010 <inflateBack@@ZLIB_1.2.0+0x194>
    60cc:	and	w0, w26, #0x7
    60d0:	add	x25, sp, #0xb8
    60d4:	and	w26, w26, #0xfffffff8
    60d8:	lsr	x22, x22, x0
    60dc:	cmp	w26, #0x1f
    60e0:	b.ls	610c <inflateBack@@ZLIB_1.2.0+0x290>  // b.plast
    60e4:	lsr	x0, x22, #16
    60e8:	and	x1, x22, #0xffff
    60ec:	eor	x0, x0, #0xffff
    60f0:	cmp	x0, w22, uxth
    60f4:	b.eq	614c <inflateBack@@ZLIB_1.2.0+0x2d0>  // b.none
    60f8:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    60fc:	add	x0, x0, #0xd78
    6100:	str	x0, [x20, #48]
    6104:	mov	w0, #0x3f51                	// #16209
    6108:	b	6030 <inflateBack@@ZLIB_1.2.0+0x1b4>
    610c:	cbnz	w24, 6128 <inflateBack@@ZLIB_1.2.0+0x2ac>
    6110:	ldr	x2, [sp, #104]
    6114:	mov	x1, x25
    6118:	mov	x0, x23
    611c:	blr	x2
    6120:	mov	w24, w0
    6124:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    6128:	ldr	x0, [sp, #184]
    612c:	sub	w24, w24, #0x1
    6130:	add	x1, x0, #0x1
    6134:	str	x1, [sp, #184]
    6138:	ldrb	w0, [x0]
    613c:	lsl	x0, x0, x26
    6140:	add	w26, w26, #0x8
    6144:	add	x22, x22, x0
    6148:	b	60dc <inflateBack@@ZLIB_1.2.0+0x260>
    614c:	add	x25, sp, #0xb8
    6150:	str	w1, [x28, #92]
    6154:	ldr	w26, [x28, #92]
    6158:	cbnz	w26, 616c <inflateBack@@ZLIB_1.2.0+0x2f0>
    615c:	mov	w0, #0x3f3f                	// #16191
    6160:	mov	x22, #0x0                   	// #0
    6164:	str	w0, [x28, #8]
    6168:	b	5ef4 <inflateBack@@ZLIB_1.2.0+0x78>
    616c:	cbnz	w24, 6188 <inflateBack@@ZLIB_1.2.0+0x30c>
    6170:	ldr	x2, [sp, #104]
    6174:	mov	x1, x25
    6178:	mov	x0, x23
    617c:	blr	x2
    6180:	mov	w24, w0
    6184:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    6188:	cbnz	w19, 61ac <inflateBack@@ZLIB_1.2.0+0x330>
    618c:	ldp	x3, x0, [sp, #112]
    6190:	ldr	w19, [x28, #60]
    6194:	ldr	x21, [x28, #72]
    6198:	str	w19, [x28, #64]
    619c:	mov	w2, w19
    61a0:	mov	x1, x21
    61a4:	blr	x3
    61a8:	cbnz	w0, 6b6c <inflateBack@@ZLIB_1.2.0+0xcf0>
    61ac:	cmp	w26, w24
    61b0:	mov	x0, x21
    61b4:	csel	w8, w26, w24, ls  // ls = plast
    61b8:	ldr	x1, [sp, #184]
    61bc:	cmp	w19, w8
    61c0:	csel	w26, w19, w8, ls  // ls = plast
    61c4:	csel	w27, w19, w8, ls  // ls = plast
    61c8:	mov	x2, x26
    61cc:	sub	w24, w24, w27
    61d0:	bl	23a0 <memcpy@plt>
    61d4:	sub	w19, w19, w27
    61d8:	ldr	x0, [sp, #184]
    61dc:	add	x21, x21, x26
    61e0:	add	x0, x0, x26
    61e4:	str	x0, [sp, #184]
    61e8:	ldr	w0, [x28, #92]
    61ec:	sub	w0, w0, w27
    61f0:	str	w0, [x28, #92]
    61f4:	b	6154 <inflateBack@@ZLIB_1.2.0+0x2d8>
    61f8:	cbnz	w24, 6214 <inflateBack@@ZLIB_1.2.0+0x398>
    61fc:	ldr	x2, [sp, #104]
    6200:	mov	x1, x25
    6204:	mov	x0, x23
    6208:	blr	x2
    620c:	mov	w24, w0
    6210:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    6214:	ldr	x0, [sp, #184]
    6218:	sub	w24, w24, #0x1
    621c:	add	x1, x0, #0x1
    6220:	str	x1, [sp, #184]
    6224:	ldrb	w0, [x0]
    6228:	lsl	x0, x0, x26
    622c:	add	w26, w26, #0x8
    6230:	add	x22, x22, x0
    6234:	b	5f44 <inflateBack@@ZLIB_1.2.0+0xc8>
    6238:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    623c:	add	x25, x0, #0xea8
    6240:	add	x25, x25, #0x880
    6244:	add	x27, sp, #0xb8
    6248:	str	wzr, [x28, #140]
    624c:	cmp	w26, #0x2
    6250:	b.ls	62f0 <inflateBack@@ZLIB_1.2.0+0x474>  // b.plast
    6254:	ldr	w0, [x28, #140]
    6258:	and	w3, w22, #0x7
    625c:	sub	w26, w26, #0x3
    6260:	lsr	x22, x22, #3
    6264:	add	w2, w0, #0x1
    6268:	str	w2, [x28, #140]
    626c:	ldrh	w0, [x25, w0, uxtw #1]
    6270:	add	x0, x28, x0, lsl #1
    6274:	strh	w3, [x0, #152]
    6278:	ldr	w0, [x28, #128]
    627c:	cmp	w2, w0
    6280:	b.cc	624c <inflateBack@@ZLIB_1.2.0+0x3d0>  // b.lo, b.ul, b.last
    6284:	ldr	w0, [x28, #140]
    6288:	cmp	w0, #0x12
    628c:	b.ls	6330 <inflateBack@@ZLIB_1.2.0+0x4b4>  // b.plast
    6290:	add	x0, x28, #0x558
    6294:	str	x0, [x28, #104]
    6298:	str	x0, [sp, #128]
    629c:	add	x27, x28, #0x90
    62a0:	str	x0, [x28, #144]
    62a4:	mov	w0, #0x7                   	// #7
    62a8:	str	w0, [x28, #120]
    62ac:	add	x0, x28, #0x98
    62b0:	str	x0, [sp, #136]
    62b4:	add	x0, x28, #0x78
    62b8:	str	x0, [sp, #152]
    62bc:	add	x0, x28, #0x318
    62c0:	mov	x5, x0
    62c4:	add	x4, x28, #0x78
    62c8:	mov	x3, x27
    62cc:	add	x1, x28, #0x98
    62d0:	mov	w2, #0x13                  	// #19
    62d4:	str	x0, [sp, #144]
    62d8:	mov	w0, #0x0                   	// #0
    62dc:	bl	8e78 <inflateCodesUsed@@ZLIB_1.2.9+0x38>
    62e0:	cbz	w0, 634c <inflateBack@@ZLIB_1.2.0+0x4d0>
    62e4:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    62e8:	add	x0, x0, #0xdb9
    62ec:	b	6100 <inflateBack@@ZLIB_1.2.0+0x284>
    62f0:	cbnz	w24, 630c <inflateBack@@ZLIB_1.2.0+0x490>
    62f4:	ldr	x2, [sp, #104]
    62f8:	mov	x1, x27
    62fc:	mov	x0, x23
    6300:	blr	x2
    6304:	mov	w24, w0
    6308:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    630c:	ldr	x0, [sp, #184]
    6310:	sub	w24, w24, #0x1
    6314:	add	x1, x0, #0x1
    6318:	str	x1, [sp, #184]
    631c:	ldrb	w0, [x0]
    6320:	lsl	x0, x0, x26
    6324:	add	w26, w26, #0x8
    6328:	add	x22, x22, x0
    632c:	b	624c <inflateBack@@ZLIB_1.2.0+0x3d0>
    6330:	add	w1, w0, #0x1
    6334:	str	w1, [x28, #140]
    6338:	ldr	x1, [sp, #160]
    633c:	ldrh	w0, [x1, w0, uxtw #1]
    6340:	add	x0, x28, x0, lsl #1
    6344:	strh	wzr, [x0, #152]
    6348:	b	6284 <inflateBack@@ZLIB_1.2.0+0x408>
    634c:	add	x25, sp, #0xb8
    6350:	str	wzr, [x28, #140]
    6354:	ldp	w0, w2, [x28, #132]
    6358:	add	w0, w0, w2
    635c:	ldr	w2, [x28, #140]
    6360:	cmp	w2, w0
    6364:	b.cs	6430 <inflateBack@@ZLIB_1.2.0+0x5b4>  // b.hs, b.nlast
    6368:	ldr	w0, [x28, #120]
    636c:	mov	w1, #0xffffffff            	// #-1
    6370:	ldr	x2, [x28, #104]
    6374:	lsl	w0, w1, w0
    6378:	bic	w0, w22, w0
    637c:	add	x0, x2, x0, lsl #2
    6380:	ldrb	w2, [x0, #1]
    6384:	cmp	w2, w26
    6388:	b.ls	63cc <inflateBack@@ZLIB_1.2.0+0x550>  // b.plast
    638c:	cbnz	w24, 63a8 <inflateBack@@ZLIB_1.2.0+0x52c>
    6390:	ldr	x2, [sp, #104]
    6394:	mov	x1, x25
    6398:	mov	x0, x23
    639c:	blr	x2
    63a0:	mov	w24, w0
    63a4:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    63a8:	ldr	x0, [sp, #184]
    63ac:	sub	w24, w24, #0x1
    63b0:	add	x2, x0, #0x1
    63b4:	str	x2, [sp, #184]
    63b8:	ldrb	w0, [x0]
    63bc:	lsl	x0, x0, x26
    63c0:	add	w26, w26, #0x8
    63c4:	add	x22, x22, x0
    63c8:	b	6368 <inflateBack@@ZLIB_1.2.0+0x4ec>
    63cc:	ldrh	w0, [x0, #2]
    63d0:	cmp	w0, #0xf
    63d4:	b.hi	63f8 <inflateBack@@ZLIB_1.2.0+0x57c>  // b.pmore
    63d8:	sub	w26, w26, w2
    63dc:	lsr	x22, x22, x2
    63e0:	ldr	w2, [x28, #140]
    63e4:	add	w3, w2, #0x1
    63e8:	str	w3, [x28, #140]
    63ec:	add	x2, x28, w2, uxtw #1
    63f0:	strh	w0, [x2, #152]
    63f4:	b	6354 <inflateBack@@ZLIB_1.2.0+0x4d8>
    63f8:	cmp	w0, #0x10
    63fc:	b.ne	64fc <inflateBack@@ZLIB_1.2.0+0x680>  // b.any
    6400:	add	w3, w2, #0x2
    6404:	cmp	w3, w26
    6408:	b.hi	645c <inflateBack@@ZLIB_1.2.0+0x5e0>  // b.pmore
    640c:	ldr	w0, [x28, #140]
    6410:	sub	w26, w26, w2
    6414:	lsr	x22, x22, x2
    6418:	cbnz	w0, 64a4 <inflateBack@@ZLIB_1.2.0+0x628>
    641c:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    6420:	add	x0, x0, #0xdd2
    6424:	str	x0, [x20, #48]
    6428:	mov	w0, #0x3f51                	// #16209
    642c:	str	w0, [x28, #8]
    6430:	ldr	w0, [x28, #8]
    6434:	mov	w10, #0x3f51                	// #16209
    6438:	cmp	w0, w10
    643c:	b.eq	5ef4 <inflateBack@@ZLIB_1.2.0+0x78>  // b.none
    6440:	ldrh	w0, [x28, #664]
    6444:	cbnz	w0, 65ec <inflateBack@@ZLIB_1.2.0+0x770>
    6448:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    644c:	add	x0, x0, #0xdec
    6450:	str	x0, [x20, #48]
    6454:	str	w10, [x28, #8]
    6458:	b	5ef4 <inflateBack@@ZLIB_1.2.0+0x78>
    645c:	cbnz	w24, 6480 <inflateBack@@ZLIB_1.2.0+0x604>
    6460:	stp	w2, w3, [sp, #168]
    6464:	mov	x1, x25
    6468:	ldr	x2, [sp, #104]
    646c:	mov	x0, x23
    6470:	blr	x2
    6474:	mov	w24, w0
    6478:	ldp	w2, w3, [sp, #168]
    647c:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    6480:	ldr	x0, [sp, #184]
    6484:	sub	w24, w24, #0x1
    6488:	add	x4, x0, #0x1
    648c:	str	x4, [sp, #184]
    6490:	ldrb	w0, [x0]
    6494:	lsl	x0, x0, x26
    6498:	add	w26, w26, #0x8
    649c:	add	x22, x22, x0
    64a0:	b	6404 <inflateBack@@ZLIB_1.2.0+0x588>
    64a4:	sub	w0, w0, #0x1
    64a8:	sub	w26, w26, #0x2
    64ac:	add	x0, x28, x0, lsl #1
    64b0:	ldrh	w3, [x0, #152]
    64b4:	and	w0, w22, #0x3
    64b8:	add	w0, w0, #0x3
    64bc:	lsr	x22, x22, #2
    64c0:	ldp	w2, w5, [x28, #132]
    64c4:	ldr	w4, [x28, #140]
    64c8:	add	w2, w2, w5
    64cc:	add	w4, w0, w4
    64d0:	cmp	w4, w2
    64d4:	b.hi	641c <inflateBack@@ZLIB_1.2.0+0x5a0>  // b.pmore
    64d8:	sub	w0, w0, #0x1
    64dc:	ldr	w2, [x28, #140]
    64e0:	cmn	w0, #0x1
    64e4:	b.eq	6354 <inflateBack@@ZLIB_1.2.0+0x4d8>  // b.none
    64e8:	add	w4, w2, #0x1
    64ec:	add	x2, x28, w2, uxtw #1
    64f0:	str	w4, [x28, #140]
    64f4:	strh	w3, [x2, #152]
    64f8:	b	64d8 <inflateBack@@ZLIB_1.2.0+0x65c>
    64fc:	cmp	w0, #0x11
    6500:	b.ne	6530 <inflateBack@@ZLIB_1.2.0+0x6b4>  // b.any
    6504:	add	w3, w2, #0x3
    6508:	cmp	w3, w26
    650c:	b.hi	655c <inflateBack@@ZLIB_1.2.0+0x6e0>  // b.pmore
    6510:	lsr	x9, x22, x2
    6514:	sub	w8, w26, w2
    6518:	and	w0, w9, #0x7
    651c:	lsr	x22, x9, #3
    6520:	add	w0, w0, #0x3
    6524:	sub	w26, w8, #0x3
    6528:	mov	w3, #0x0                   	// #0
    652c:	b	64c0 <inflateBack@@ZLIB_1.2.0+0x644>
    6530:	add	w3, w2, #0x7
    6534:	cmp	w3, w26
    6538:	b.hi	65a4 <inflateBack@@ZLIB_1.2.0+0x728>  // b.pmore
    653c:	lsr	x9, x22, x2
    6540:	mov	w1, #0xfffffff9            	// #-7
    6544:	and	w0, w9, #0x7f
    6548:	sub	w2, w1, w2
    654c:	add	w0, w0, #0xb
    6550:	lsr	x22, x9, #7
    6554:	add	w26, w26, w2
    6558:	b	6528 <inflateBack@@ZLIB_1.2.0+0x6ac>
    655c:	cbnz	w24, 6580 <inflateBack@@ZLIB_1.2.0+0x704>
    6560:	stp	w2, w3, [sp, #168]
    6564:	mov	x1, x25
    6568:	ldr	x2, [sp, #104]
    656c:	mov	x0, x23
    6570:	blr	x2
    6574:	mov	w24, w0
    6578:	ldp	w2, w3, [sp, #168]
    657c:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    6580:	ldr	x0, [sp, #184]
    6584:	sub	w24, w24, #0x1
    6588:	add	x4, x0, #0x1
    658c:	str	x4, [sp, #184]
    6590:	ldrb	w0, [x0]
    6594:	lsl	x0, x0, x26
    6598:	add	w26, w26, #0x8
    659c:	add	x22, x22, x0
    65a0:	b	6508 <inflateBack@@ZLIB_1.2.0+0x68c>
    65a4:	cbnz	w24, 65c8 <inflateBack@@ZLIB_1.2.0+0x74c>
    65a8:	stp	w2, w3, [sp, #168]
    65ac:	mov	x1, x25
    65b0:	ldr	x2, [sp, #104]
    65b4:	mov	x0, x23
    65b8:	blr	x2
    65bc:	mov	w24, w0
    65c0:	ldp	w2, w3, [sp, #168]
    65c4:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    65c8:	ldr	x0, [sp, #184]
    65cc:	sub	w24, w24, #0x1
    65d0:	add	x4, x0, #0x1
    65d4:	str	x4, [sp, #184]
    65d8:	ldrb	w0, [x0]
    65dc:	lsl	x0, x0, x26
    65e0:	add	w26, w26, #0x8
    65e4:	add	x22, x22, x0
    65e8:	b	6534 <inflateBack@@ZLIB_1.2.0+0x6b8>
    65ec:	ldp	x0, x1, [sp, #128]
    65f0:	str	x0, [x28, #104]
    65f4:	ldp	x5, x4, [sp, #144]
    65f8:	str	x0, [x28, #144]
    65fc:	ldr	w2, [x28, #132]
    6600:	mov	w0, #0x9                   	// #9
    6604:	str	w0, [x28, #120]
    6608:	mov	x3, x27
    660c:	mov	w0, #0x1                   	// #1
    6610:	bl	8e78 <inflateCodesUsed@@ZLIB_1.2.9+0x38>
    6614:	mov	w10, #0x3f51                	// #16209
    6618:	cbz	w0, 6628 <inflateBack@@ZLIB_1.2.0+0x7ac>
    661c:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    6620:	add	x0, x0, #0xe11
    6624:	b	6450 <inflateBack@@ZLIB_1.2.0+0x5d4>
    6628:	mov	x4, x28
    662c:	mov	x3, x27
    6630:	ldr	x0, [x28, #144]
    6634:	str	x0, [x28, #112]
    6638:	mov	w0, #0x6                   	// #6
    663c:	ldp	w1, w2, [x28, #132]
    6640:	str	w0, [x4, #124]!
    6644:	ldr	x0, [sp, #136]
    6648:	ldr	x5, [sp, #144]
    664c:	add	x1, x0, x1, lsl #1
    6650:	mov	w0, #0x2                   	// #2
    6654:	bl	8e78 <inflateCodesUsed@@ZLIB_1.2.9+0x38>
    6658:	cbz	w0, 6670 <inflateBack@@ZLIB_1.2.0+0x7f4>
    665c:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    6660:	mov	w10, #0x3f51                	// #16209
    6664:	add	x0, x0, #0xe2d
    6668:	str	x0, [x20, #48]
    666c:	b	6454 <inflateBack@@ZLIB_1.2.0+0x5d8>
    6670:	mov	w0, #0x3f48                	// #16200
    6674:	str	w0, [x28, #8]
    6678:	cmp	w19, #0x101
    667c:	ccmp	w24, #0x5, #0x0, hi  // hi = pmore
    6680:	b.hi	66f4 <inflateBack@@ZLIB_1.2.0+0x878>  // b.pmore
    6684:	add	x27, sp, #0xb8
    6688:	mov	w4, #0xffffffff            	// #-1
    668c:	ldr	w2, [x28, #120]
    6690:	ldr	x0, [x28, #104]
    6694:	lsl	w2, w4, w2
    6698:	bic	w2, w22, w2
    669c:	add	x2, x0, x2, lsl #2
    66a0:	ldrb	w25, [x2, #1]
    66a4:	mov	w3, w25
    66a8:	cmp	w25, w26
    66ac:	b.ls	6750 <inflateBack@@ZLIB_1.2.0+0x8d4>  // b.plast
    66b0:	cbnz	w24, 66d0 <inflateBack@@ZLIB_1.2.0+0x854>
    66b4:	ldr	x2, [sp, #104]
    66b8:	mov	x1, x27
    66bc:	mov	x0, x23
    66c0:	blr	x2
    66c4:	mov	w24, w0
    66c8:	mov	w4, #0xffffffff            	// #-1
    66cc:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    66d0:	ldr	x0, [sp, #184]
    66d4:	sub	w24, w24, #0x1
    66d8:	add	x2, x0, #0x1
    66dc:	str	x2, [sp, #184]
    66e0:	ldrb	w0, [x0]
    66e4:	lsl	x0, x0, x26
    66e8:	add	w26, w26, #0x8
    66ec:	add	x22, x22, x0
    66f0:	b	668c <inflateBack@@ZLIB_1.2.0+0x810>
    66f4:	ldr	x0, [sp, #184]
    66f8:	ldr	w1, [x28, #60]
    66fc:	str	x0, [x20]
    6700:	str	w24, [x20, #8]
    6704:	str	x21, [x20, #24]
    6708:	str	w19, [x20, #32]
    670c:	ldr	w0, [x28, #64]
    6710:	str	x22, [x28, #80]
    6714:	str	w26, [x28, #88]
    6718:	cmp	w0, w1
    671c:	b.cs	6728 <inflateBack@@ZLIB_1.2.0+0x8ac>  // b.hs, b.nlast
    6720:	sub	w19, w1, w19
    6724:	str	w19, [x28, #64]
    6728:	mov	x0, x20
    672c:	bl	6bd4 <inflateBackEnd@@ZLIB_1.2.0+0x50>
    6730:	ldr	x0, [x20]
    6734:	str	x0, [sp, #184]
    6738:	ldr	w24, [x20, #8]
    673c:	ldr	w19, [x20, #32]
    6740:	ldr	w26, [x28, #88]
    6744:	ldr	x21, [x20, #24]
    6748:	ldr	x22, [x28, #80]
    674c:	b	5ef4 <inflateBack@@ZLIB_1.2.0+0x78>
    6750:	ldrb	w0, [x2]
    6754:	ldrh	w27, [x2, #2]
    6758:	cbz	w0, 67f4 <inflateBack@@ZLIB_1.2.0+0x978>
    675c:	tst	w0, #0xf0
    6760:	b.ne	67f4 <inflateBack@@ZLIB_1.2.0+0x978>  // b.any
    6764:	add	w0, w0, w25
    6768:	add	x1, sp, #0xb8
    676c:	lsl	w0, w4, w0
    6770:	mvn	w4, w0
    6774:	and	w2, w4, w22
    6778:	ldr	x0, [x28, #104]
    677c:	lsr	w2, w2, w25
    6780:	add	w2, w2, w27
    6784:	add	x2, x0, x2, lsl #2
    6788:	ldrb	w3, [x2, #1]
    678c:	add	w0, w3, w25
    6790:	cmp	w0, w26
    6794:	b.ls	67e4 <inflateBack@@ZLIB_1.2.0+0x968>  // b.plast
    6798:	cbnz	w24, 67c0 <inflateBack@@ZLIB_1.2.0+0x944>
    679c:	ldr	x2, [sp, #104]
    67a0:	str	x1, [sp, #128]
    67a4:	str	w4, [sp, #136]
    67a8:	mov	x0, x23
    67ac:	blr	x2
    67b0:	mov	w24, w0
    67b4:	ldr	w4, [sp, #136]
    67b8:	ldr	x1, [sp, #128]
    67bc:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    67c0:	ldr	x0, [sp, #184]
    67c4:	sub	w24, w24, #0x1
    67c8:	add	x2, x0, #0x1
    67cc:	str	x2, [sp, #184]
    67d0:	ldrb	w0, [x0]
    67d4:	lsl	x0, x0, x26
    67d8:	add	w26, w26, #0x8
    67dc:	add	x22, x22, x0
    67e0:	b	6774 <inflateBack@@ZLIB_1.2.0+0x8f8>
    67e4:	ldrb	w0, [x2]
    67e8:	sub	w26, w26, w25
    67ec:	ldrh	w27, [x2, #2]
    67f0:	lsr	x22, x22, x25
    67f4:	str	w27, [x28, #92]
    67f8:	sub	w26, w26, w3
    67fc:	lsr	x22, x22, x3
    6800:	cbnz	w0, 683c <inflateBack@@ZLIB_1.2.0+0x9c0>
    6804:	cbnz	w19, 6828 <inflateBack@@ZLIB_1.2.0+0x9ac>
    6808:	ldp	x3, x0, [sp, #112]
    680c:	ldr	w19, [x28, #60]
    6810:	ldr	x21, [x28, #72]
    6814:	str	w19, [x28, #64]
    6818:	mov	w2, w19
    681c:	mov	x1, x21
    6820:	blr	x3
    6824:	cbnz	w0, 6b6c <inflateBack@@ZLIB_1.2.0+0xcf0>
    6828:	ldr	w0, [x28, #92]
    682c:	sub	w19, w19, #0x1
    6830:	strb	w0, [x21], #1
    6834:	mov	w0, #0x3f48                	// #16200
    6838:	b	6030 <inflateBack@@ZLIB_1.2.0+0x1b4>
    683c:	tbz	w0, #5, 6848 <inflateBack@@ZLIB_1.2.0+0x9cc>
    6840:	mov	w0, #0x3f3f                	// #16191
    6844:	b	6030 <inflateBack@@ZLIB_1.2.0+0x1b4>
    6848:	tbz	w0, #6, 6858 <inflateBack@@ZLIB_1.2.0+0x9dc>
    684c:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    6850:	add	x0, x0, #0xe43
    6854:	b	6100 <inflateBack@@ZLIB_1.2.0+0x284>
    6858:	and	w0, w0, #0xf
    685c:	str	w0, [x28, #100]
    6860:	cbz	w0, 6894 <inflateBack@@ZLIB_1.2.0+0xa18>
    6864:	add	x25, sp, #0xb8
    6868:	ldr	w2, [x28, #100]
    686c:	cmp	w2, w26
    6870:	b.hi	6904 <inflateBack@@ZLIB_1.2.0+0xa88>  // b.pmore
    6874:	ldr	w1, [x28, #92]
    6878:	mov	w0, #0xffffffff            	// #-1
    687c:	lsl	w0, w0, w2
    6880:	sub	w26, w26, w2
    6884:	bic	w0, w22, w0
    6888:	lsr	x22, x22, x2
    688c:	add	w0, w1, w0
    6890:	str	w0, [x28, #92]
    6894:	add	x27, sp, #0xb8
    6898:	mov	w4, #0xffffffff            	// #-1
    689c:	ldr	w2, [x28, #124]
    68a0:	ldr	x0, [x28, #112]
    68a4:	lsl	w2, w4, w2
    68a8:	bic	w2, w22, w2
    68ac:	add	x2, x0, x2, lsl #2
    68b0:	ldrb	w25, [x2, #1]
    68b4:	mov	w3, w25
    68b8:	cmp	w25, w26
    68bc:	b.ls	6944 <inflateBack@@ZLIB_1.2.0+0xac8>  // b.plast
    68c0:	cbnz	w24, 68e0 <inflateBack@@ZLIB_1.2.0+0xa64>
    68c4:	ldr	x2, [sp, #104]
    68c8:	mov	x1, x27
    68cc:	mov	x0, x23
    68d0:	blr	x2
    68d4:	mov	w24, w0
    68d8:	mov	w4, #0xffffffff            	// #-1
    68dc:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    68e0:	ldr	x0, [sp, #184]
    68e4:	sub	w24, w24, #0x1
    68e8:	add	x2, x0, #0x1
    68ec:	str	x2, [sp, #184]
    68f0:	ldrb	w0, [x0]
    68f4:	lsl	x0, x0, x26
    68f8:	add	w26, w26, #0x8
    68fc:	add	x22, x22, x0
    6900:	b	689c <inflateBack@@ZLIB_1.2.0+0xa20>
    6904:	cbnz	w24, 6920 <inflateBack@@ZLIB_1.2.0+0xaa4>
    6908:	ldr	x2, [sp, #104]
    690c:	mov	x1, x25
    6910:	mov	x0, x23
    6914:	blr	x2
    6918:	mov	w24, w0
    691c:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    6920:	ldr	x0, [sp, #184]
    6924:	sub	w24, w24, #0x1
    6928:	add	x1, x0, #0x1
    692c:	str	x1, [sp, #184]
    6930:	ldrb	w0, [x0]
    6934:	lsl	x0, x0, x26
    6938:	add	w26, w26, #0x8
    693c:	add	x22, x22, x0
    6940:	b	6868 <inflateBack@@ZLIB_1.2.0+0x9ec>
    6944:	ldrb	w0, [x2]
    6948:	ldrh	w27, [x2, #2]
    694c:	tst	w0, #0xf0
    6950:	b.ne	69e4 <inflateBack@@ZLIB_1.2.0+0xb68>  // b.any
    6954:	add	w0, w0, w25
    6958:	add	x1, sp, #0xb8
    695c:	lsl	w0, w4, w0
    6960:	mvn	w4, w0
    6964:	and	w2, w4, w22
    6968:	ldr	x0, [x28, #112]
    696c:	lsr	w2, w2, w25
    6970:	add	w2, w2, w27
    6974:	add	x2, x0, x2, lsl #2
    6978:	ldrb	w3, [x2, #1]
    697c:	add	w0, w3, w25
    6980:	cmp	w0, w26
    6984:	b.ls	69d4 <inflateBack@@ZLIB_1.2.0+0xb58>  // b.plast
    6988:	cbnz	w24, 69b0 <inflateBack@@ZLIB_1.2.0+0xb34>
    698c:	ldr	x2, [sp, #104]
    6990:	str	x1, [sp, #128]
    6994:	str	w4, [sp, #136]
    6998:	mov	x0, x23
    699c:	blr	x2
    69a0:	mov	w24, w0
    69a4:	ldr	w4, [sp, #136]
    69a8:	ldr	x1, [sp, #128]
    69ac:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    69b0:	ldr	x0, [sp, #184]
    69b4:	sub	w24, w24, #0x1
    69b8:	add	x2, x0, #0x1
    69bc:	str	x2, [sp, #184]
    69c0:	ldrb	w0, [x0]
    69c4:	lsl	x0, x0, x26
    69c8:	add	w26, w26, #0x8
    69cc:	add	x22, x22, x0
    69d0:	b	6964 <inflateBack@@ZLIB_1.2.0+0xae8>
    69d4:	ldrb	w0, [x2]
    69d8:	sub	w26, w26, w25
    69dc:	ldrh	w27, [x2, #2]
    69e0:	lsr	x22, x22, x25
    69e4:	sub	w26, w26, w3
    69e8:	lsr	x22, x22, x3
    69ec:	tbz	w0, #6, 69fc <inflateBack@@ZLIB_1.2.0+0xb80>
    69f0:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    69f4:	add	x0, x0, #0xe5f
    69f8:	b	6100 <inflateBack@@ZLIB_1.2.0+0x284>
    69fc:	and	w0, w0, #0xf
    6a00:	stp	w27, w0, [x28, #96]
    6a04:	cbz	w0, 6a38 <inflateBack@@ZLIB_1.2.0+0xbbc>
    6a08:	add	x25, sp, #0xb8
    6a0c:	ldr	w2, [x28, #100]
    6a10:	cmp	w2, w26
    6a14:	b.hi	6a60 <inflateBack@@ZLIB_1.2.0+0xbe4>  // b.pmore
    6a18:	ldr	w1, [x28, #96]
    6a1c:	mov	w0, #0xffffffff            	// #-1
    6a20:	lsl	w0, w0, w2
    6a24:	sub	w26, w26, w2
    6a28:	bic	w0, w22, w0
    6a2c:	lsr	x22, x22, x2
    6a30:	add	w0, w1, w0
    6a34:	str	w0, [x28, #96]
    6a38:	ldp	w0, w2, [x28, #60]
    6a3c:	ldr	w1, [x28, #96]
    6a40:	cmp	w0, w2
    6a44:	csel	w2, w19, wzr, hi  // hi = pmore
    6a48:	sub	w0, w0, w2
    6a4c:	cmp	w1, w0
    6a50:	b.ls	6aa0 <inflateBack@@ZLIB_1.2.0+0xc24>  // b.plast
    6a54:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    6a58:	add	x0, x0, #0xe75
    6a5c:	b	6100 <inflateBack@@ZLIB_1.2.0+0x284>
    6a60:	cbnz	w24, 6a7c <inflateBack@@ZLIB_1.2.0+0xc00>
    6a64:	ldr	x2, [sp, #104]
    6a68:	mov	x1, x25
    6a6c:	mov	x0, x23
    6a70:	blr	x2
    6a74:	mov	w24, w0
    6a78:	cbz	w0, 6054 <inflateBack@@ZLIB_1.2.0+0x1d8>
    6a7c:	ldr	x0, [sp, #184]
    6a80:	sub	w24, w24, #0x1
    6a84:	add	x1, x0, #0x1
    6a88:	str	x1, [sp, #184]
    6a8c:	ldrb	w0, [x0]
    6a90:	lsl	x0, x0, x26
    6a94:	add	w26, w26, #0x8
    6a98:	add	x22, x22, x0
    6a9c:	b	6a0c <inflateBack@@ZLIB_1.2.0+0xb90>
    6aa0:	cbnz	w19, 6ac4 <inflateBack@@ZLIB_1.2.0+0xc48>
    6aa4:	ldp	x3, x0, [sp, #112]
    6aa8:	ldr	w19, [x28, #60]
    6aac:	ldr	x21, [x28, #72]
    6ab0:	str	w19, [x28, #64]
    6ab4:	mov	w2, w19
    6ab8:	mov	x1, x21
    6abc:	blr	x3
    6ac0:	cbnz	w0, 6b6c <inflateBack@@ZLIB_1.2.0+0xcf0>
    6ac4:	ldr	w1, [x28, #60]
    6ac8:	ldr	w0, [x28, #96]
    6acc:	sub	w2, w1, w0
    6ad0:	cmp	w19, w2
    6ad4:	b.ls	6b2c <inflateBack@@ZLIB_1.2.0+0xcb0>  // b.plast
    6ad8:	sub	w0, w0, w1
    6adc:	add	x2, x21, w2, uxtw
    6ae0:	add	w0, w0, w19
    6ae4:	ldr	w1, [x28, #92]
    6ae8:	cmp	w1, w0
    6aec:	csel	w0, w1, w0, ls  // ls = plast
    6af0:	sub	w1, w1, w0
    6af4:	sub	w19, w19, w0
    6af8:	str	w1, [x28, #92]
    6afc:	mov	x1, #0x0                   	// #0
    6b00:	ldrb	w3, [x2, x1]
    6b04:	strb	w3, [x21, x1]
    6b08:	add	x1, x1, #0x1
    6b0c:	cmp	w0, w1
    6b10:	b.ne	6b00 <inflateBack@@ZLIB_1.2.0+0xc84>  // b.any
    6b14:	sub	w0, w0, #0x1
    6b18:	add	x0, x0, #0x1
    6b1c:	add	x21, x21, x0
    6b20:	ldr	w0, [x28, #92]
    6b24:	cbnz	w0, 6aa0 <inflateBack@@ZLIB_1.2.0+0xc24>
    6b28:	b	5ef4 <inflateBack@@ZLIB_1.2.0+0x78>
    6b2c:	sub	x2, x21, w0, uxtw
    6b30:	mov	w0, w19
    6b34:	b	6ae4 <inflateBack@@ZLIB_1.2.0+0xc68>
    6b38:	ldr	w2, [x28, #60]
    6b3c:	cmp	w2, w19
    6b40:	b.ls	6b74 <inflateBack@@ZLIB_1.2.0+0xcf8>  // b.plast
    6b44:	ldp	x3, x0, [sp, #112]
    6b48:	sub	w2, w2, w19
    6b4c:	ldr	x1, [x28, #72]
    6b50:	blr	x3
    6b54:	cmp	w0, #0x0
    6b58:	mov	w0, #0xfffffffb            	// #-5
    6b5c:	csinc	w0, w0, wzr, ne  // ne = any
    6b60:	b	5fac <inflateBack@@ZLIB_1.2.0+0x130>
    6b64:	mov	w0, #0xfffffffe            	// #-2
    6b68:	b	5fac <inflateBack@@ZLIB_1.2.0+0x130>
    6b6c:	mov	w0, #0xfffffffb            	// #-5
    6b70:	b	5fac <inflateBack@@ZLIB_1.2.0+0x130>
    6b74:	mov	w0, #0x1                   	// #1
    6b78:	b	5fac <inflateBack@@ZLIB_1.2.0+0x130>
    6b7c:	mov	w0, #0xfffffffe            	// #-2
    6b80:	b	5fb8 <inflateBack@@ZLIB_1.2.0+0x13c>

0000000000006b84 <inflateBackEnd@@ZLIB_1.2.0>:
    6b84:	cbz	x0, 6bc4 <inflateBackEnd@@ZLIB_1.2.0+0x40>
    6b88:	stp	x29, x30, [sp, #-32]!
    6b8c:	mov	x29, sp
    6b90:	ldr	x1, [x0, #56]
    6b94:	str	x19, [sp, #16]
    6b98:	mov	x19, x0
    6b9c:	cbz	x1, 6bcc <inflateBackEnd@@ZLIB_1.2.0+0x48>
    6ba0:	ldr	x2, [x0, #72]
    6ba4:	cbz	x2, 6bcc <inflateBackEnd@@ZLIB_1.2.0+0x48>
    6ba8:	ldr	x0, [x0, #80]
    6bac:	blr	x2
    6bb0:	str	xzr, [x19, #56]
    6bb4:	mov	w0, #0x0                   	// #0
    6bb8:	ldr	x19, [sp, #16]
    6bbc:	ldp	x29, x30, [sp], #32
    6bc0:	ret
    6bc4:	mov	w0, #0xfffffffe            	// #-2
    6bc8:	ret
    6bcc:	mov	w0, #0xfffffffe            	// #-2
    6bd0:	b	6bb8 <inflateBackEnd@@ZLIB_1.2.0+0x34>
    6bd4:	stp	x29, x30, [sp, #-80]!
    6bd8:	mov	w12, #0x1                   	// #1
    6bdc:	mov	x29, sp
    6be0:	ldr	x8, [x0, #56]
    6be4:	stp	x19, x20, [sp, #16]
    6be8:	ldr	w10, [x0, #32]
    6bec:	ldr	w11, [x0, #8]
    6bf0:	mov	w19, #0xffffffff            	// #-1
    6bf4:	ldp	w14, w15, [x8, #120]
    6bf8:	sub	w1, w1, w10
    6bfc:	ldr	w9, [x8, #68]
    6c00:	sub	w11, w11, #0x5
    6c04:	ldp	w30, w20, [x8, #60]
    6c08:	sub	w10, w10, #0x101
    6c0c:	ldr	x5, [x0]
    6c10:	add	w18, w9, w19
    6c14:	ldr	x2, [x0, #24]
    6c18:	lsl	w14, w12, w14
    6c1c:	ldp	x13, x7, [x8, #72]
    6c20:	lsl	w15, w12, w15
    6c24:	ldp	x16, x17, [x8, #104]
    6c28:	add	x11, x5, x11
    6c2c:	ldr	w3, [x8, #88]
    6c30:	sub	x1, x2, x1
    6c34:	add	x10, x2, x10
    6c38:	sub	w14, w14, #0x1
    6c3c:	sub	w15, w15, #0x1
    6c40:	add	x18, x18, #0x1
    6c44:	stp	x21, x22, [sp, #32]
    6c48:	add	w21, w30, w9
    6c4c:	stp	x23, x24, [sp, #48]
    6c50:	stp	x25, x26, [sp, #64]
    6c54:	cmp	w3, #0xe
    6c58:	b.hi	6c80 <inflateBackEnd@@ZLIB_1.2.0+0xfc>  // b.pmore
    6c5c:	ldrb	w4, [x5, #1]
    6c60:	add	w6, w3, #0x8
    6c64:	add	x5, x5, #0x2
    6c68:	lsl	x4, x4, x6
    6c6c:	ldurb	w6, [x5, #-2]
    6c70:	lsl	x6, x6, x3
    6c74:	add	x4, x4, x6
    6c78:	add	x7, x7, x4
    6c7c:	add	w3, w3, #0x10
    6c80:	and	x4, x14, x7
    6c84:	lsl	x6, x4, #2
    6c88:	add	x4, x16, x4, lsl #2
    6c8c:	ldrb	w6, [x16, x6]
    6c90:	ldrb	w22, [x4, #1]
    6c94:	ldrh	w23, [x4, #2]
    6c98:	sub	w3, w3, w22
    6c9c:	lsr	x7, x7, x22
    6ca0:	cbnz	w6, 6cb8 <inflateBackEnd@@ZLIB_1.2.0+0x134>
    6ca4:	strb	w23, [x2], #1
    6ca8:	cmp	x5, x11
    6cac:	ccmp	x2, x10, #0x2, cc  // cc = lo, ul, last
    6cb0:	b.cc	6c54 <inflateBackEnd@@ZLIB_1.2.0+0xd0>  // b.lo, b.ul, b.last
    6cb4:	b	6db8 <inflateBackEnd@@ZLIB_1.2.0+0x234>
    6cb8:	tbz	w6, #4, 7034 <inflateBackEnd@@ZLIB_1.2.0+0x4b0>
    6cbc:	mov	w4, w23
    6cc0:	ands	w6, w6, #0xf
    6cc4:	b.eq	6cf4 <inflateBackEnd@@ZLIB_1.2.0+0x170>  // b.none
    6cc8:	cmp	w3, w6
    6ccc:	b.cs	6ce0 <inflateBackEnd@@ZLIB_1.2.0+0x15c>  // b.hs, b.nlast
    6cd0:	ldrb	w4, [x5], #1
    6cd4:	lsl	x4, x4, x3
    6cd8:	add	w3, w3, #0x8
    6cdc:	add	x7, x7, x4
    6ce0:	lsl	w4, w19, w6
    6ce4:	bic	w4, w7, w4
    6ce8:	add	w4, w23, w4
    6cec:	sub	w3, w3, w6
    6cf0:	lsr	x7, x7, x6
    6cf4:	cmp	w3, #0xe
    6cf8:	b.hi	6d20 <inflateBackEnd@@ZLIB_1.2.0+0x19c>  // b.pmore
    6cfc:	ldrb	w6, [x5, #1]
    6d00:	add	w22, w3, #0x8
    6d04:	add	x5, x5, #0x2
    6d08:	lsl	x6, x6, x22
    6d0c:	ldurb	w22, [x5, #-2]
    6d10:	lsl	x22, x22, x3
    6d14:	add	x6, x6, x22
    6d18:	add	x7, x7, x6
    6d1c:	add	w3, w3, #0x10
    6d20:	and	x22, x15, x7
    6d24:	lsl	x6, x22, #2
    6d28:	add	x22, x17, x22, lsl #2
    6d2c:	ldrb	w6, [x17, x6]
    6d30:	ldrb	w23, [x22, #1]
    6d34:	ldrh	w25, [x22, #2]
    6d38:	sub	w3, w3, w23
    6d3c:	lsr	x7, x7, x23
    6d40:	tbz	w6, #4, 7004 <inflateBackEnd@@ZLIB_1.2.0+0x480>
    6d44:	and	w22, w6, #0xf
    6d48:	cmp	w3, w22
    6d4c:	b.cs	6d70 <inflateBackEnd@@ZLIB_1.2.0+0x1ec>  // b.hs, b.nlast
    6d50:	ldrb	w6, [x5]
    6d54:	add	w23, w3, #0x8
    6d58:	cmp	w22, w23
    6d5c:	lsl	x6, x6, x3
    6d60:	add	x7, x7, x6
    6d64:	b.hi	6e34 <inflateBackEnd@@ZLIB_1.2.0+0x2b0>  // b.pmore
    6d68:	add	x5, x5, #0x1
    6d6c:	mov	w3, w23
    6d70:	lsl	w6, w19, w22
    6d74:	bic	w6, w7, w6
    6d78:	add	w24, w6, w25
    6d7c:	sub	w3, w3, w22
    6d80:	lsr	x7, x7, x22
    6d84:	sub	x22, x2, x1
    6d88:	cmp	w24, w22
    6d8c:	b.ls	6fa4 <inflateBackEnd@@ZLIB_1.2.0+0x420>  // b.plast
    6d90:	sub	w6, w24, w22
    6d94:	cmp	w20, w6
    6d98:	b.cs	6e4c <inflateBackEnd@@ZLIB_1.2.0+0x2c8>  // b.hs, b.nlast
    6d9c:	ldr	w23, [x8, #7144]
    6da0:	cbz	w23, 6e4c <inflateBackEnd@@ZLIB_1.2.0+0x2c8>
    6da4:	adrp	x1, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    6da8:	add	x1, x1, #0xe75
    6dac:	str	x1, [x0, #48]
    6db0:	mov	w1, #0x3f51                	// #16209
    6db4:	str	w1, [x8, #8]
    6db8:	lsr	w1, w3, #3
    6dbc:	and	w3, w3, #0x7
    6dc0:	sub	x5, x5, x1
    6dc4:	mov	w1, #0x1                   	// #1
    6dc8:	lsl	w1, w1, w3
    6dcc:	sub	w1, w1, #0x1
    6dd0:	and	x7, x1, x7
    6dd4:	sub	x1, x11, x5
    6dd8:	add	w4, w1, #0x5
    6ddc:	sub	w1, w11, w5
    6de0:	cmp	x11, x5
    6de4:	add	w1, w1, #0x5
    6de8:	csel	w1, w1, w4, ls  // ls = plast
    6dec:	str	w1, [x0, #8]
    6df0:	sub	x1, x10, x2
    6df4:	cmp	x2, x10
    6df8:	add	w4, w1, #0x101
    6dfc:	sub	w1, w10, w2
    6e00:	add	w1, w1, #0x101
    6e04:	str	x5, [x0]
    6e08:	csel	w1, w1, w4, cs  // cs = hs, nlast
    6e0c:	str	x2, [x0, #24]
    6e10:	str	w1, [x0, #32]
    6e14:	ldp	x19, x20, [sp, #16]
    6e18:	ldp	x21, x22, [sp, #32]
    6e1c:	ldp	x23, x24, [sp, #48]
    6e20:	ldp	x25, x26, [sp, #64]
    6e24:	str	x7, [x8, #80]
    6e28:	str	w3, [x8, #88]
    6e2c:	ldp	x29, x30, [sp], #80
    6e30:	ret
    6e34:	ldrb	w6, [x5, #1]
    6e38:	add	w3, w3, #0x10
    6e3c:	add	x5, x5, #0x2
    6e40:	lsl	x6, x6, x23
    6e44:	add	x7, x7, x6
    6e48:	b	6d70 <inflateBackEnd@@ZLIB_1.2.0+0x1ec>
    6e4c:	sub	w22, w22, w24
    6e50:	cbnz	w9, 6eb0 <inflateBackEnd@@ZLIB_1.2.0+0x32c>
    6e54:	add	w25, w30, w22
    6e58:	cmp	w4, w6
    6e5c:	add	x25, x13, x25
    6e60:	b.ls	6e90 <inflateBackEnd@@ZLIB_1.2.0+0x30c>  // b.plast
    6e64:	add	w4, w4, w22
    6e68:	mov	x22, #0x0                   	// #0
    6e6c:	ldrb	w23, [x25, x22]
    6e70:	strb	w23, [x2, x22]
    6e74:	add	x22, x22, #0x1
    6e78:	cmp	w6, w22
    6e7c:	b.ne	6e6c <inflateBackEnd@@ZLIB_1.2.0+0x2e8>  // b.any
    6e80:	sub	w6, w6, #0x1
    6e84:	add	x6, x6, #0x1
    6e88:	add	x2, x2, x6
    6e8c:	sub	x25, x2, w24, uxtw
    6e90:	cmp	w4, #0x2
    6e94:	b.hi	6f6c <inflateBackEnd@@ZLIB_1.2.0+0x3e8>  // b.pmore
    6e98:	cbz	w4, 6ca8 <inflateBackEnd@@ZLIB_1.2.0+0x124>
    6e9c:	ldrb	w6, [x25]
    6ea0:	strb	w6, [x2]
    6ea4:	b.eq	6f94 <inflateBackEnd@@ZLIB_1.2.0+0x410>  // b.none
    6ea8:	add	x2, x2, #0x1
    6eac:	b	6ca8 <inflateBackEnd@@ZLIB_1.2.0+0x124>
    6eb0:	cmp	w9, w6
    6eb4:	b.cs	6f30 <inflateBackEnd@@ZLIB_1.2.0+0x3ac>  // b.hs, b.nlast
    6eb8:	add	w25, w21, w22
    6ebc:	sub	w23, w6, w9
    6ec0:	add	x25, x13, x25
    6ec4:	cmp	w4, w23
    6ec8:	b.ls	6e90 <inflateBackEnd@@ZLIB_1.2.0+0x30c>  // b.plast
    6ecc:	add	w4, w4, w9
    6ed0:	mov	x6, #0x0                   	// #0
    6ed4:	add	w4, w4, w22
    6ed8:	mov	w22, w23
    6edc:	ldrb	w26, [x25, x6]
    6ee0:	strb	w26, [x2, x6]
    6ee4:	add	x6, x6, #0x1
    6ee8:	cmp	x22, x6
    6eec:	b.ne	6edc <inflateBackEnd@@ZLIB_1.2.0+0x358>  // b.any
    6ef0:	sub	w23, w23, #0x1
    6ef4:	cmp	w9, w4
    6ef8:	add	x23, x23, #0x1
    6efc:	add	x2, x2, x23
    6f00:	b.cs	6f28 <inflateBackEnd@@ZLIB_1.2.0+0x3a4>  // b.hs, b.nlast
    6f04:	sub	w4, w4, w9
    6f08:	mov	x6, #0x0                   	// #0
    6f0c:	ldrb	w22, [x13, x6]
    6f10:	strb	w22, [x2, x6]
    6f14:	add	x6, x6, #0x1
    6f18:	cmp	w9, w6
    6f1c:	b.ne	6f0c <inflateBackEnd@@ZLIB_1.2.0+0x388>  // b.any
    6f20:	add	x2, x2, x18
    6f24:	b	6e8c <inflateBackEnd@@ZLIB_1.2.0+0x308>
    6f28:	mov	x25, x13
    6f2c:	b	6e90 <inflateBackEnd@@ZLIB_1.2.0+0x30c>
    6f30:	add	w25, w9, w22
    6f34:	cmp	w4, w6
    6f38:	add	x25, x13, x25
    6f3c:	b.ls	6e90 <inflateBackEnd@@ZLIB_1.2.0+0x30c>  // b.plast
    6f40:	add	w4, w4, w22
    6f44:	mov	x22, #0x0                   	// #0
    6f48:	ldrb	w23, [x25, x22]
    6f4c:	strb	w23, [x2, x22]
    6f50:	add	x22, x22, #0x1
    6f54:	cmp	w6, w22
    6f58:	b.ne	6f48 <inflateBackEnd@@ZLIB_1.2.0+0x3c4>  // b.any
    6f5c:	sub	w22, w6, #0x1
    6f60:	add	x22, x22, #0x1
    6f64:	add	x2, x2, x22
    6f68:	b	6e8c <inflateBackEnd@@ZLIB_1.2.0+0x308>
    6f6c:	ldrb	w6, [x25]
    6f70:	add	x25, x25, #0x3
    6f74:	strb	w6, [x2]
    6f78:	add	x2, x2, #0x3
    6f7c:	sub	w4, w4, #0x3
    6f80:	ldurb	w6, [x25, #-2]
    6f84:	sturb	w6, [x2, #-2]
    6f88:	ldurb	w6, [x25, #-1]
    6f8c:	sturb	w6, [x2, #-1]
    6f90:	b	6e90 <inflateBackEnd@@ZLIB_1.2.0+0x30c>
    6f94:	ldrb	w4, [x25, #1]
    6f98:	add	x2, x2, #0x2
    6f9c:	sturb	w4, [x2, #-1]
    6fa0:	b	6ca8 <inflateBackEnd@@ZLIB_1.2.0+0x124>
    6fa4:	sub	x6, x2, w24, uxtw
    6fa8:	ldrb	w22, [x6]
    6fac:	mov	x23, x6
    6fb0:	strb	w22, [x2]
    6fb4:	add	x6, x6, #0x3
    6fb8:	sub	w4, w4, #0x3
    6fbc:	ldurb	w22, [x6, #-2]
    6fc0:	cmp	w4, #0x2
    6fc4:	strb	w22, [x2, #1]
    6fc8:	mov	x22, x2
    6fcc:	add	x2, x2, #0x3
    6fd0:	ldurb	w24, [x6, #-1]
    6fd4:	sturb	w24, [x2, #-1]
    6fd8:	b.hi	6fa8 <inflateBackEnd@@ZLIB_1.2.0+0x424>  // b.pmore
    6fdc:	cbz	w4, 6ca8 <inflateBackEnd@@ZLIB_1.2.0+0x124>
    6fe0:	ldrb	w2, [x23, #3]
    6fe4:	strb	w2, [x22, #3]
    6fe8:	b.eq	6ff4 <inflateBackEnd@@ZLIB_1.2.0+0x470>  // b.none
    6fec:	add	x2, x22, #0x4
    6ff0:	b	6ca8 <inflateBackEnd@@ZLIB_1.2.0+0x124>
    6ff4:	ldrb	w4, [x23, #4]
    6ff8:	add	x2, x22, #0x5
    6ffc:	strb	w4, [x22, #4]
    7000:	b	6ca8 <inflateBackEnd@@ZLIB_1.2.0+0x124>
    7004:	tbnz	w6, #6, 7028 <inflateBackEnd@@ZLIB_1.2.0+0x4a4>
    7008:	lsl	w6, w12, w6
    700c:	sub	w6, w6, #0x1
    7010:	and	x6, x6, x7
    7014:	add	x6, x6, w25, uxth
    7018:	lsl	x23, x6, #2
    701c:	add	x22, x17, x6, lsl #2
    7020:	ldrb	w6, [x17, x23]
    7024:	b	6d30 <inflateBackEnd@@ZLIB_1.2.0+0x1ac>
    7028:	adrp	x1, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    702c:	add	x1, x1, #0xe5f
    7030:	b	6dac <inflateBackEnd@@ZLIB_1.2.0+0x228>
    7034:	tbnz	w6, #6, 7058 <inflateBackEnd@@ZLIB_1.2.0+0x4d4>
    7038:	lsl	w6, w12, w6
    703c:	sub	w6, w6, #0x1
    7040:	and	x6, x6, x7
    7044:	add	x6, x6, w23, uxth
    7048:	lsl	x22, x6, #2
    704c:	add	x4, x16, x6, lsl #2
    7050:	ldrb	w6, [x16, x22]
    7054:	b	6c90 <inflateBackEnd@@ZLIB_1.2.0+0x10c>
    7058:	tbz	w6, #5, 7064 <inflateBackEnd@@ZLIB_1.2.0+0x4e0>
    705c:	mov	w1, #0x3f3f                	// #16191
    7060:	b	6db4 <inflateBackEnd@@ZLIB_1.2.0+0x230>
    7064:	adrp	x1, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    7068:	add	x1, x1, #0xe43
    706c:	b	6dac <inflateBackEnd@@ZLIB_1.2.0+0x228>
    7070:	mov	x4, x0
    7074:	mov	w6, #0xff                  	// #255
    7078:	mov	w0, #0x0                   	// #0
    707c:	mov	w7, #0x4                   	// #4
    7080:	ldr	w3, [x4]
    7084:	cmp	w0, w2
    7088:	ccmp	w3, #0x3, #0x2, cc  // cc = lo, ul, last
    708c:	b.ls	7098 <inflateBackEnd@@ZLIB_1.2.0+0x514>  // b.plast
    7090:	str	w3, [x4]
    7094:	ret
    7098:	cmp	w3, #0x2
    709c:	ldrb	w5, [x1, w0, uxtw]
    70a0:	csel	w8, wzr, w6, cc  // cc = lo, ul, last
    70a4:	cmp	w5, w8
    70a8:	b.ne	70b8 <inflateBackEnd@@ZLIB_1.2.0+0x534>  // b.any
    70ac:	add	w3, w3, #0x1
    70b0:	add	w0, w0, #0x1
    70b4:	b	7084 <inflateBackEnd@@ZLIB_1.2.0+0x500>
    70b8:	sub	w3, w7, w3
    70bc:	cmp	w5, #0x0
    70c0:	csel	w3, w3, wzr, eq  // eq = none
    70c4:	b	70b0 <inflateBackEnd@@ZLIB_1.2.0+0x52c>
    70c8:	stp	x29, x30, [sp, #-48]!
    70cc:	mov	x29, sp
    70d0:	stp	x19, x20, [sp, #16]
    70d4:	mov	w20, w2
    70d8:	ldr	x19, [x0, #56]
    70dc:	stp	x21, x22, [sp, #32]
    70e0:	mov	x22, x1
    70e4:	ldr	x1, [x19, #72]
    70e8:	cbz	x1, 7124 <inflateBackEnd@@ZLIB_1.2.0+0x5a0>
    70ec:	ldr	w0, [x19, #60]
    70f0:	cbz	w0, 715c <inflateBackEnd@@ZLIB_1.2.0+0x5d8>
    70f4:	ldr	w1, [x19, #60]
    70f8:	ldr	x0, [x19, #72]
    70fc:	cmp	w1, w20
    7100:	b.hi	7174 <inflateBackEnd@@ZLIB_1.2.0+0x5f0>  // b.pmore
    7104:	mov	w2, w1
    7108:	sub	x1, x22, w1, uxtw
    710c:	bl	23a0 <memcpy@plt>
    7110:	str	wzr, [x19, #68]
    7114:	ldr	w0, [x19, #60]
    7118:	str	w0, [x19, #64]
    711c:	mov	w0, #0x0                   	// #0
    7120:	b	714c <inflateBackEnd@@ZLIB_1.2.0+0x5c8>
    7124:	ldr	x3, [x0, #64]
    7128:	mov	w21, #0x1                   	// #1
    712c:	ldr	x0, [x0, #80]
    7130:	mov	w2, w21
    7134:	ldr	w1, [x19, #56]
    7138:	lsl	w1, w21, w1
    713c:	blr	x3
    7140:	str	x0, [x19, #72]
    7144:	cbnz	x0, 70ec <inflateBackEnd@@ZLIB_1.2.0+0x568>
    7148:	mov	w0, w21
    714c:	ldp	x19, x20, [sp, #16]
    7150:	ldp	x21, x22, [sp, #32]
    7154:	ldp	x29, x30, [sp], #48
    7158:	ret
    715c:	ldr	w1, [x19, #56]
    7160:	mov	w0, #0x1                   	// #1
    7164:	str	xzr, [x19, #64]
    7168:	lsl	w0, w0, w1
    716c:	str	w0, [x19, #60]
    7170:	b	70f4 <inflateBackEnd@@ZLIB_1.2.0+0x570>
    7174:	ldr	w4, [x19, #68]
    7178:	sub	w2, w1, w4
    717c:	sub	x1, x22, w20, uxtw
    7180:	cmp	w20, w2
    7184:	add	x0, x0, w4, uxtw
    7188:	csel	w21, w20, w2, ls  // ls = plast
    718c:	csel	w2, w20, w2, ls  // ls = plast
    7190:	bl	23a0 <memcpy@plt>
    7194:	subs	w20, w20, w21
    7198:	b.eq	71b4 <inflateBackEnd@@ZLIB_1.2.0+0x630>  // b.none
    719c:	ldr	x0, [x19, #72]
    71a0:	mov	w2, w20
    71a4:	sub	x1, x22, w20, uxtw
    71a8:	bl	23a0 <memcpy@plt>
    71ac:	str	w20, [x19, #68]
    71b0:	b	7114 <inflateBackEnd@@ZLIB_1.2.0+0x590>
    71b4:	ldr	w0, [x19, #68]
    71b8:	ldr	w1, [x19, #60]
    71bc:	add	w0, w21, w0
    71c0:	cmp	w0, w1
    71c4:	csel	w0, w0, wzr, ne  // ne = any
    71c8:	str	w0, [x19, #68]
    71cc:	ldr	w0, [x19, #64]
    71d0:	cmp	w1, w0
    71d4:	b.ls	711c <inflateBackEnd@@ZLIB_1.2.0+0x598>  // b.plast
    71d8:	add	w0, w0, w21
    71dc:	b	7118 <inflateBackEnd@@ZLIB_1.2.0+0x594>
    71e0:	cbz	x0, 7220 <inflateBackEnd@@ZLIB_1.2.0+0x69c>
    71e4:	ldr	x1, [x0, #64]
    71e8:	cbz	x1, 7220 <inflateBackEnd@@ZLIB_1.2.0+0x69c>
    71ec:	ldr	x1, [x0, #72]
    71f0:	cbz	x1, 7220 <inflateBackEnd@@ZLIB_1.2.0+0x69c>
    71f4:	ldr	x1, [x0, #56]
    71f8:	cbz	x1, 7220 <inflateBackEnd@@ZLIB_1.2.0+0x69c>
    71fc:	ldr	x2, [x1]
    7200:	cmp	x0, x2
    7204:	b.ne	7220 <inflateBackEnd@@ZLIB_1.2.0+0x69c>  // b.any
    7208:	ldr	w0, [x1, #8]
    720c:	mov	w1, #0xffffc0cc            	// #-16180
    7210:	add	w0, w0, w1
    7214:	cmp	w0, #0x1f
    7218:	cset	w0, hi  // hi = pmore
    721c:	ret
    7220:	mov	w0, #0x1                   	// #1
    7224:	b	721c <inflateBackEnd@@ZLIB_1.2.0+0x698>

0000000000007228 <inflateResetKeep@@ZLIB_1.2.5.2>:
    7228:	mov	x3, x0
    722c:	stp	x29, x30, [sp, #-16]!
    7230:	mov	x29, sp
    7234:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    7238:	cbnz	w0, 7298 <inflateResetKeep@@ZLIB_1.2.5.2+0x70>
    723c:	ldr	x1, [x3, #56]
    7240:	ldr	w2, [x1, #16]
    7244:	str	xzr, [x1, #40]
    7248:	str	xzr, [x3, #16]
    724c:	stp	xzr, xzr, [x3, #40]
    7250:	cbz	w2, 725c <inflateResetKeep@@ZLIB_1.2.5.2+0x34>
    7254:	and	x2, x2, #0x1
    7258:	str	x2, [x3, #96]
    725c:	mov	x2, #0x3f34                	// #16180
    7260:	str	x2, [x1, #8]
    7264:	mov	w2, #0x8000                	// #32768
    7268:	str	w2, [x1, #28]
    726c:	add	x2, x1, #0x558
    7270:	str	wzr, [x1, #20]
    7274:	str	xzr, [x1, #48]
    7278:	str	xzr, [x1, #80]
    727c:	str	wzr, [x1, #88]
    7280:	stp	x2, x2, [x1, #104]
    7284:	str	x2, [x1, #144]
    7288:	mov	x2, #0xffffffff00000001    	// #-4294967295
    728c:	str	x2, [x1, #7144]
    7290:	ldp	x29, x30, [sp], #16
    7294:	ret
    7298:	mov	w0, #0xfffffffe            	// #-2
    729c:	b	7290 <inflateResetKeep@@ZLIB_1.2.5.2+0x68>

00000000000072a0 <inflateReset@@Base>:
    72a0:	mov	x3, x0
    72a4:	stp	x29, x30, [sp, #-16]!
    72a8:	mov	x29, sp
    72ac:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    72b0:	cbnz	w0, 72cc <inflateReset@@Base+0x2c>
    72b4:	ldr	x0, [x3, #56]
    72b8:	str	wzr, [x0, #60]
    72bc:	str	xzr, [x0, #64]
    72c0:	mov	x0, x3
    72c4:	ldp	x29, x30, [sp], #16
    72c8:	b	2440 <inflateResetKeep@plt>
    72cc:	mov	w0, #0xfffffffe            	// #-2
    72d0:	ldp	x29, x30, [sp], #16
    72d4:	ret

00000000000072d8 <inflateReset2@@ZLIB_1.2.3.4>:
    72d8:	stp	x29, x30, [sp, #-48]!
    72dc:	mov	x29, sp
    72e0:	stp	x19, x20, [sp, #16]
    72e4:	mov	w19, w1
    72e8:	stp	x21, x22, [sp, #32]
    72ec:	mov	x21, x0
    72f0:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    72f4:	cbnz	w0, 736c <inflateReset2@@ZLIB_1.2.3.4+0x94>
    72f8:	ldr	x22, [x21, #56]
    72fc:	tbz	w19, #31, 7354 <inflateReset2@@ZLIB_1.2.3.4+0x7c>
    7300:	mov	w20, w0
    7304:	neg	w19, w19
    7308:	sub	w0, w19, #0x8
    730c:	cmp	w19, #0x0
    7310:	ccmp	w0, #0x7, #0x0, ne  // ne = any
    7314:	b.hi	736c <inflateReset2@@ZLIB_1.2.3.4+0x94>  // b.pmore
    7318:	ldr	x1, [x22, #72]
    731c:	cbz	x1, 7338 <inflateReset2@@ZLIB_1.2.3.4+0x60>
    7320:	ldr	w0, [x22, #56]
    7324:	cmp	w19, w0
    7328:	b.eq	7338 <inflateReset2@@ZLIB_1.2.3.4+0x60>  // b.none
    732c:	ldp	x2, x0, [x21, #72]
    7330:	blr	x2
    7334:	str	xzr, [x22, #72]
    7338:	str	w20, [x22, #16]
    733c:	mov	x0, x21
    7340:	str	w19, [x22, #56]
    7344:	ldp	x19, x20, [sp, #16]
    7348:	ldp	x21, x22, [sp, #32]
    734c:	ldp	x29, x30, [sp], #48
    7350:	b	2610 <inflateReset@plt>
    7354:	asr	w20, w19, #4
    7358:	cmp	w19, #0x2f
    735c:	add	w20, w20, #0x5
    7360:	b.gt	7308 <inflateReset2@@ZLIB_1.2.3.4+0x30>
    7364:	and	w19, w19, #0xf
    7368:	b	7308 <inflateReset2@@ZLIB_1.2.3.4+0x30>
    736c:	mov	w0, #0xfffffffe            	// #-2
    7370:	ldp	x19, x20, [sp, #16]
    7374:	ldp	x21, x22, [sp, #32]
    7378:	ldp	x29, x30, [sp], #48
    737c:	ret

0000000000007380 <inflateInit2_@@Base>:
    7380:	stp	x29, x30, [sp, #-48]!
    7384:	mov	x29, sp
    7388:	stp	x19, x20, [sp, #16]
    738c:	str	x21, [sp, #32]
    7390:	cbz	x2, 744c <inflateInit2_@@Base+0xcc>
    7394:	mov	x19, x0
    7398:	ldrb	w0, [x2]
    739c:	cmp	w0, #0x31
    73a0:	b.ne	744c <inflateInit2_@@Base+0xcc>  // b.any
    73a4:	cmp	w3, #0x70
    73a8:	b.ne	744c <inflateInit2_@@Base+0xcc>  // b.any
    73ac:	cbz	x19, 7454 <inflateInit2_@@Base+0xd4>
    73b0:	ldr	x0, [x19, #64]
    73b4:	str	xzr, [x19, #48]
    73b8:	mov	w20, w1
    73bc:	cbnz	x0, 73d0 <inflateInit2_@@Base+0x50>
    73c0:	adrp	x0, a000 <inflateCodesUsed@@ZLIB_1.2.9+0x11c0>
    73c4:	add	x0, x0, #0xb6c
    73c8:	str	x0, [x19, #64]
    73cc:	str	xzr, [x19, #80]
    73d0:	ldr	x0, [x19, #72]
    73d4:	cbnz	x0, 73e4 <inflateInit2_@@Base+0x64>
    73d8:	adrp	x0, a000 <inflateCodesUsed@@ZLIB_1.2.9+0x11c0>
    73dc:	add	x0, x0, #0xb74
    73e0:	str	x0, [x19, #72]
    73e4:	ldr	x3, [x19, #64]
    73e8:	mov	w2, #0x1bf8                	// #7160
    73ec:	ldr	x0, [x19, #80]
    73f0:	mov	w1, #0x1                   	// #1
    73f4:	blr	x3
    73f8:	mov	x21, x0
    73fc:	cbz	x0, 745c <inflateInit2_@@Base+0xdc>
    7400:	str	x21, [x19, #56]
    7404:	mov	w0, #0x3f34                	// #16180
    7408:	str	x19, [x21]
    740c:	mov	w1, w20
    7410:	str	w0, [x21, #8]
    7414:	mov	x0, x19
    7418:	str	xzr, [x21, #72]
    741c:	bl	2640 <inflateReset2@plt>
    7420:	mov	w20, w0
    7424:	cbz	w0, 7438 <inflateInit2_@@Base+0xb8>
    7428:	ldp	x2, x0, [x19, #72]
    742c:	mov	x1, x21
    7430:	blr	x2
    7434:	str	xzr, [x19, #56]
    7438:	mov	w0, w20
    743c:	ldp	x19, x20, [sp, #16]
    7440:	ldr	x21, [sp, #32]
    7444:	ldp	x29, x30, [sp], #48
    7448:	ret
    744c:	mov	w20, #0xfffffffa            	// #-6
    7450:	b	7438 <inflateInit2_@@Base+0xb8>
    7454:	mov	w20, #0xfffffffe            	// #-2
    7458:	b	7438 <inflateInit2_@@Base+0xb8>
    745c:	mov	w20, #0xfffffffc            	// #-4
    7460:	b	7438 <inflateInit2_@@Base+0xb8>

0000000000007464 <inflateInit_@@Base>:
    7464:	mov	w3, w2
    7468:	mov	x2, x1
    746c:	mov	w1, #0xf                   	// #15
    7470:	b	2600 <inflateInit2_@plt>

0000000000007474 <inflatePrime@@ZLIB_1.2.2.4>:
    7474:	mov	x3, x0
    7478:	mov	w5, w1
    747c:	mov	w6, w2
    7480:	stp	x29, x30, [sp, #-16]!
    7484:	mov	x29, sp
    7488:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    748c:	cbnz	w0, 74e8 <inflatePrime@@ZLIB_1.2.2.4+0x74>
    7490:	ldr	x4, [x3, #56]
    7494:	tbz	w5, #31, 74a8 <inflatePrime@@ZLIB_1.2.2.4+0x34>
    7498:	str	xzr, [x4, #80]
    749c:	str	wzr, [x4, #88]
    74a0:	ldp	x29, x30, [sp], #16
    74a4:	ret
    74a8:	cmp	w5, #0x10
    74ac:	b.gt	74e8 <inflatePrime@@ZLIB_1.2.2.4+0x74>
    74b0:	ldr	w8, [x4, #88]
    74b4:	add	w7, w5, w8
    74b8:	cmp	w7, #0x20
    74bc:	b.hi	74e8 <inflatePrime@@ZLIB_1.2.2.4+0x74>  // b.pmore
    74c0:	mov	x3, #0x1                   	// #1
    74c4:	str	w7, [x4, #88]
    74c8:	lsl	x1, x3, x5
    74cc:	sub	w1, w1, #0x1
    74d0:	and	w2, w1, w6
    74d4:	ldr	x1, [x4, #80]
    74d8:	lsl	w2, w2, w8
    74dc:	add	x2, x1, x2
    74e0:	str	x2, [x4, #80]
    74e4:	b	74a0 <inflatePrime@@ZLIB_1.2.2.4+0x2c>
    74e8:	mov	w0, #0xfffffffe            	// #-2
    74ec:	b	74a0 <inflatePrime@@ZLIB_1.2.2.4+0x2c>

00000000000074f0 <inflate@@Base>:
    74f0:	stp	x29, x30, [sp, #-176]!
    74f4:	mov	x29, sp
    74f8:	stp	x19, x20, [sp, #16]
    74fc:	stp	x21, x22, [sp, #32]
    7500:	stp	x23, x24, [sp, #48]
    7504:	stp	x25, x26, [sp, #64]
    7508:	stp	x27, x28, [sp, #80]
    750c:	mov	x27, x0
    7510:	str	w1, [sp, #112]
    7514:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    7518:	cbnz	w0, 88c0 <inflate@@Base+0x13d0>
    751c:	ldr	x22, [x27, #24]
    7520:	cbz	x22, 88c0 <inflate@@Base+0x13d0>
    7524:	ldr	x21, [x27]
    7528:	ldr	w0, [x27, #8]
    752c:	str	w0, [sp, #116]
    7530:	cbnz	x21, 753c <inflate@@Base+0x4c>
    7534:	mov	w0, w0
    7538:	cbnz	w0, 88c0 <inflate@@Base+0x13d0>
    753c:	ldr	x26, [x27, #56]
    7540:	mov	w0, #0x3f3f                	// #16191
    7544:	ldr	w1, [x26, #8]
    7548:	cmp	w1, w0
    754c:	b.ne	7558 <inflate@@Base+0x68>  // b.any
    7550:	mov	w0, #0x3f40                	// #16192
    7554:	str	w0, [x26, #8]
    7558:	add	x0, sp, #0xa8
    755c:	ldr	w24, [x26, #88]
    7560:	ldr	w25, [sp, #116]
    7564:	mov	w20, #0x0                   	// #0
    7568:	ldr	x23, [x26, #80]
    756c:	str	x0, [sp, #104]
    7570:	ldr	w19, [x27, #32]
    7574:	adrp	x0, f000 <gzclose_w@@ZLIB_1.2.3.5+0x23c4>
    7578:	add	x0, x0, #0x82e
    757c:	str	w19, [sp, #100]
    7580:	str	x0, [sp, #120]
    7584:	add	x0, x0, #0x880
    7588:	str	x0, [sp, #128]
    758c:	ldr	w0, [x26, #8]
    7590:	mov	w1, #0xffffc0cc            	// #-16180
    7594:	add	w0, w0, w1
    7598:	cmp	w0, #0x1e
    759c:	b.hi	88c0 <inflate@@Base+0x13d0>  // b.pmore
    75a0:	adrp	x1, f000 <gzclose_w@@ZLIB_1.2.3.5+0x23c4>
    75a4:	add	x1, x1, #0x7f0
    75a8:	ldrh	w0, [x1, w0, uxtw #1]
    75ac:	adr	x1, 75b8 <inflate@@Base+0xc8>
    75b0:	add	x0, x1, w0, sxth #2
    75b4:	br	x0
    75b8:	mov	w20, #0xfffffffd            	// #-3
    75bc:	ldr	w0, [x26, #60]
    75c0:	str	x21, [x27]
    75c4:	str	w25, [x27, #8]
    75c8:	str	x22, [x27, #24]
    75cc:	str	w19, [x27, #32]
    75d0:	str	x23, [x26, #80]
    75d4:	str	w24, [x26, #88]
    75d8:	cbnz	w0, 7610 <inflate@@Base+0x120>
    75dc:	ldr	w0, [sp, #100]
    75e0:	cmp	w0, w19
    75e4:	b.eq	87c8 <inflate@@Base+0x12d8>  // b.none
    75e8:	ldr	w0, [x26, #8]
    75ec:	mov	w1, #0x3f50                	// #16208
    75f0:	cmp	w0, w1
    75f4:	b.hi	87c8 <inflate@@Base+0x12d8>  // b.pmore
    75f8:	mov	w1, #0x3f4d                	// #16205
    75fc:	cmp	w0, w1
    7600:	b.ls	7610 <inflate@@Base+0x120>  // b.plast
    7604:	ldr	w0, [sp, #112]
    7608:	cmp	w0, #0x4
    760c:	b.eq	87c8 <inflate@@Base+0x12d8>  // b.none
    7610:	ldr	w0, [sp, #100]
    7614:	mov	x1, x22
    7618:	sub	w2, w0, w19
    761c:	mov	x0, x27
    7620:	bl	70c8 <inflateBackEnd@@ZLIB_1.2.0+0x544>
    7624:	cbz	w0, 87c8 <inflate@@Base+0x12d8>
    7628:	mov	w0, #0x3f52                	// #16210
    762c:	str	w0, [x26, #8]
    7630:	mov	w20, #0xfffffffc            	// #-4
    7634:	b	7c94 <inflate@@Base+0x7a4>
    7638:	ldr	w0, [x26, #16]
    763c:	cbnz	w0, 7664 <inflate@@Base+0x174>
    7640:	mov	w0, #0x3f40                	// #16192
    7644:	str	w0, [x26, #8]
    7648:	b	758c <inflate@@Base+0x9c>
    764c:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7650:	ldrb	w1, [x21], #1
    7654:	sub	w25, w25, #0x1
    7658:	lsl	x1, x1, x24
    765c:	add	w24, w24, #0x8
    7660:	add	x23, x23, x1
    7664:	cmp	w24, #0xf
    7668:	b.ls	764c <inflate@@Base+0x15c>  // b.plast
    766c:	tbz	w0, #1, 76cc <inflate@@Base+0x1dc>
    7670:	mov	x1, #0x8b1f                	// #35615
    7674:	cmp	x23, x1
    7678:	b.ne	76cc <inflate@@Base+0x1dc>  // b.any
    767c:	ldr	w0, [x26, #56]
    7680:	cbnz	w0, 768c <inflate@@Base+0x19c>
    7684:	mov	w0, #0xf                   	// #15
    7688:	str	w0, [x26, #56]
    768c:	mov	w2, #0x0                   	// #0
    7690:	mov	x1, #0x0                   	// #0
    7694:	mov	x0, #0x0                   	// #0
    7698:	bl	2430 <crc32@plt>
    769c:	mov	w1, #0xffff8b1f            	// #-29921
    76a0:	strh	w1, [sp, #168]
    76a4:	ldr	x1, [sp, #104]
    76a8:	str	x0, [x26, #32]
    76ac:	mov	w2, #0x2                   	// #2
    76b0:	mov	w24, #0x0                   	// #0
    76b4:	mov	x23, #0x0                   	// #0
    76b8:	bl	2430 <crc32@plt>
    76bc:	str	x0, [x26, #32]
    76c0:	mov	w0, #0x3f35                	// #16181
    76c4:	str	w0, [x26, #8]
    76c8:	b	758c <inflate@@Base+0x9c>
    76cc:	ldr	x1, [x26, #48]
    76d0:	str	wzr, [x26, #24]
    76d4:	cbz	x1, 76e0 <inflate@@Base+0x1f0>
    76d8:	mov	w2, #0xffffffff            	// #-1
    76dc:	str	w2, [x1, #72]
    76e0:	tbz	w0, #0, 76fc <inflate@@Base+0x20c>
    76e4:	ubfiz	x0, x23, #8, #8
    76e8:	mov	x2, #0x1f                  	// #31
    76ec:	add	x0, x0, x23, lsr #8
    76f0:	udiv	x1, x0, x2
    76f4:	msub	x0, x1, x2, x0
    76f8:	cbz	x0, 7710 <inflate@@Base+0x220>
    76fc:	adrp	x0, f000 <gzclose_w@@ZLIB_1.2.3.5+0x23c4>
    7700:	add	x0, x0, #0x74e
    7704:	str	x0, [x27, #48]
    7708:	mov	w0, #0x3f51                	// #16209
    770c:	b	7644 <inflate@@Base+0x154>
    7710:	and	w0, w23, #0xf
    7714:	cmp	w0, #0x8
    7718:	b.eq	7728 <inflate@@Base+0x238>  // b.none
    771c:	adrp	x0, f000 <gzclose_w@@ZLIB_1.2.3.5+0x23c4>
    7720:	add	x0, x0, #0x765
    7724:	b	7704 <inflate@@Base+0x214>
    7728:	ldr	w1, [x26, #56]
    772c:	lsr	x23, x23, #4
    7730:	and	w0, w23, #0xf
    7734:	sub	w24, w24, #0x4
    7738:	add	w0, w0, #0x8
    773c:	cbnz	w1, 7758 <inflate@@Base+0x268>
    7740:	str	w0, [x26, #56]
    7744:	cmp	w0, #0xf
    7748:	b.ls	7768 <inflate@@Base+0x278>  // b.plast
    774c:	adrp	x0, f000 <gzclose_w@@ZLIB_1.2.3.5+0x23c4>
    7750:	add	x0, x0, #0x780
    7754:	b	7704 <inflate@@Base+0x214>
    7758:	cmp	w0, #0xf
    775c:	b.hi	774c <inflate@@Base+0x25c>  // b.pmore
    7760:	cmp	w1, w0
    7764:	b.cc	774c <inflate@@Base+0x25c>  // b.lo, b.ul, b.last
    7768:	mov	w1, #0x1                   	// #1
    776c:	mov	w2, #0x0                   	// #0
    7770:	lsl	w0, w1, w0
    7774:	str	w0, [x26, #28]
    7778:	mov	x1, #0x0                   	// #0
    777c:	mov	x0, #0x0                   	// #0
    7780:	bl	2560 <adler32@plt>
    7784:	str	x0, [x26, #32]
    7788:	tst	x23, #0x200
    778c:	str	x0, [x27, #96]
    7790:	mov	w1, #0x3f3f                	// #16191
    7794:	mov	w0, #0x3f3d                	// #16189
    7798:	mov	w24, #0x0                   	// #0
    779c:	csel	w0, w0, w1, ne  // ne = any
    77a0:	mov	x23, #0x0                   	// #0
    77a4:	str	w0, [x26, #8]
    77a8:	b	758c <inflate@@Base+0x9c>
    77ac:	cbz	w25, 75bc <inflate@@Base+0xcc>
    77b0:	ldrb	w0, [x21], #1
    77b4:	sub	w25, w25, #0x1
    77b8:	lsl	x0, x0, x24
    77bc:	add	w24, w24, #0x8
    77c0:	add	x23, x23, x0
    77c4:	cmp	w24, #0xf
    77c8:	b.ls	77ac <inflate@@Base+0x2bc>  // b.plast
    77cc:	str	w23, [x26, #24]
    77d0:	and	w0, w23, #0xff
    77d4:	mov	w1, w23
    77d8:	cmp	w0, #0x8
    77dc:	b.ne	771c <inflate@@Base+0x22c>  // b.any
    77e0:	tst	x23, #0xe000
    77e4:	b.eq	77f4 <inflate@@Base+0x304>  // b.none
    77e8:	adrp	x0, f000 <gzclose_w@@ZLIB_1.2.3.5+0x23c4>
    77ec:	add	x0, x0, #0x794
    77f0:	b	7704 <inflate@@Base+0x214>
    77f4:	ldr	x0, [x26, #48]
    77f8:	cbz	x0, 7804 <inflate@@Base+0x314>
    77fc:	ubfx	w2, w23, #8, #1
    7800:	str	w2, [x0]
    7804:	tbz	w1, #9, 7828 <inflate@@Base+0x338>
    7808:	ldr	w0, [x26, #16]
    780c:	tbz	w0, #2, 7828 <inflate@@Base+0x338>
    7810:	ldr	x0, [x26, #32]
    7814:	mov	w2, #0x2                   	// #2
    7818:	ldr	x1, [sp, #104]
    781c:	strh	w23, [sp, #168]
    7820:	bl	2430 <crc32@plt>
    7824:	str	x0, [x26, #32]
    7828:	mov	w0, #0x3f36                	// #16182
    782c:	mov	w24, #0x0                   	// #0
    7830:	mov	x23, #0x0                   	// #0
    7834:	str	w0, [x26, #8]
    7838:	cmp	w24, #0x1f
    783c:	b.ls	792c <inflate@@Base+0x43c>  // b.plast
    7840:	ldr	x0, [x26, #48]
    7844:	cbz	x0, 784c <inflate@@Base+0x35c>
    7848:	str	x23, [x0, #8]
    784c:	ldr	w0, [x26, #24]
    7850:	tbz	w0, #9, 7874 <inflate@@Base+0x384>
    7854:	ldr	w0, [x26, #16]
    7858:	tbz	w0, #2, 7874 <inflate@@Base+0x384>
    785c:	ldr	x0, [x26, #32]
    7860:	mov	w2, #0x4                   	// #4
    7864:	ldr	x1, [sp, #104]
    7868:	str	w23, [sp, #168]
    786c:	bl	2430 <crc32@plt>
    7870:	str	x0, [x26, #32]
    7874:	mov	w0, #0x3f37                	// #16183
    7878:	mov	w24, #0x0                   	// #0
    787c:	mov	x23, #0x0                   	// #0
    7880:	str	w0, [x26, #8]
    7884:	cmp	w24, #0xf
    7888:	b.ls	7948 <inflate@@Base+0x458>  // b.plast
    788c:	ldr	x0, [x26, #48]
    7890:	cbz	x0, 78a4 <inflate@@Base+0x3b4>
    7894:	and	w1, w23, #0xff
    7898:	str	w1, [x0, #16]
    789c:	lsr	x1, x23, #8
    78a0:	str	w1, [x0, #20]
    78a4:	ldr	w0, [x26, #24]
    78a8:	tbz	w0, #9, 78cc <inflate@@Base+0x3dc>
    78ac:	ldr	w0, [x26, #16]
    78b0:	tbz	w0, #2, 78cc <inflate@@Base+0x3dc>
    78b4:	ldr	x0, [x26, #32]
    78b8:	mov	w2, #0x2                   	// #2
    78bc:	ldr	x1, [sp, #104]
    78c0:	strh	w23, [sp, #168]
    78c4:	bl	2430 <crc32@plt>
    78c8:	str	x0, [x26, #32]
    78cc:	mov	w0, #0x3f38                	// #16184
    78d0:	mov	w24, #0x0                   	// #0
    78d4:	mov	x23, #0x0                   	// #0
    78d8:	str	w0, [x26, #8]
    78dc:	ldr	w1, [x26, #24]
    78e0:	tbz	w1, #10, 7980 <inflate@@Base+0x490>
    78e4:	cmp	w24, #0xf
    78e8:	b.ls	7964 <inflate@@Base+0x474>  // b.plast
    78ec:	ldr	x0, [x26, #48]
    78f0:	str	w23, [x26, #92]
    78f4:	cbz	x0, 78fc <inflate@@Base+0x40c>
    78f8:	str	w23, [x0, #32]
    78fc:	tbz	w1, #9, 7920 <inflate@@Base+0x430>
    7900:	ldr	w0, [x26, #16]
    7904:	tbz	w0, #2, 7920 <inflate@@Base+0x430>
    7908:	ldr	x0, [x26, #32]
    790c:	mov	w2, #0x2                   	// #2
    7910:	ldr	x1, [sp, #104]
    7914:	strh	w23, [sp, #168]
    7918:	bl	2430 <crc32@plt>
    791c:	str	x0, [x26, #32]
    7920:	mov	w24, #0x0                   	// #0
    7924:	mov	x23, #0x0                   	// #0
    7928:	b	798c <inflate@@Base+0x49c>
    792c:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7930:	ldrb	w0, [x21], #1
    7934:	sub	w25, w25, #0x1
    7938:	lsl	x0, x0, x24
    793c:	add	w24, w24, #0x8
    7940:	add	x23, x23, x0
    7944:	b	7838 <inflate@@Base+0x348>
    7948:	cbz	w25, 75bc <inflate@@Base+0xcc>
    794c:	ldrb	w0, [x21], #1
    7950:	sub	w25, w25, #0x1
    7954:	lsl	x0, x0, x24
    7958:	add	w24, w24, #0x8
    795c:	add	x23, x23, x0
    7960:	b	7884 <inflate@@Base+0x394>
    7964:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7968:	ldrb	w0, [x21], #1
    796c:	sub	w25, w25, #0x1
    7970:	lsl	x0, x0, x24
    7974:	add	w24, w24, #0x8
    7978:	add	x23, x23, x0
    797c:	b	78e4 <inflate@@Base+0x3f4>
    7980:	ldr	x0, [x26, #48]
    7984:	cbz	x0, 798c <inflate@@Base+0x49c>
    7988:	str	xzr, [x0, #24]
    798c:	mov	w0, #0x3f39                	// #16185
    7990:	str	w0, [x26, #8]
    7994:	ldr	w0, [x26, #24]
    7998:	tbz	w0, #10, 7a38 <inflate@@Base+0x548>
    799c:	ldr	w1, [x26, #92]
    79a0:	cmp	w25, w1
    79a4:	csel	w28, w25, w1, ls  // ls = plast
    79a8:	cbz	w28, 7a30 <inflate@@Base+0x540>
    79ac:	ldr	x4, [x26, #48]
    79b0:	mov	w0, w28
    79b4:	str	x0, [sp, #136]
    79b8:	cbz	x4, 79f4 <inflate@@Base+0x504>
    79bc:	ldr	x0, [x4, #24]
    79c0:	cbz	x0, 79f4 <inflate@@Base+0x504>
    79c4:	ldp	w2, w12, [x4, #32]
    79c8:	sub	w5, w2, w1
    79cc:	sub	w13, w2, w1
    79d0:	add	w4, w28, w5
    79d4:	add	w1, w12, w1
    79d8:	cmp	w4, w12
    79dc:	sub	w2, w1, w2
    79e0:	mov	w1, w28
    79e4:	add	x0, x0, x13
    79e8:	csel	x2, x2, x1, hi  // hi = pmore
    79ec:	mov	x1, x21
    79f0:	bl	23a0 <memcpy@plt>
    79f4:	ldr	w0, [x26, #24]
    79f8:	tbz	w0, #9, 7a18 <inflate@@Base+0x528>
    79fc:	ldr	w0, [x26, #16]
    7a00:	tbz	w0, #2, 7a18 <inflate@@Base+0x528>
    7a04:	ldr	x0, [x26, #32]
    7a08:	mov	w2, w28
    7a0c:	mov	x1, x21
    7a10:	bl	2430 <crc32@plt>
    7a14:	str	x0, [x26, #32]
    7a18:	mov	w0, w28
    7a1c:	sub	w25, w25, w28
    7a20:	add	x21, x21, x0
    7a24:	ldr	w0, [x26, #92]
    7a28:	sub	w3, w0, w28
    7a2c:	str	w3, [x26, #92]
    7a30:	ldr	w0, [x26, #92]
    7a34:	cbnz	w0, 75bc <inflate@@Base+0xcc>
    7a38:	mov	w0, #0x3f3a                	// #16186
    7a3c:	str	w0, [x26, #8]
    7a40:	str	wzr, [x26, #92]
    7a44:	ldr	w0, [x26, #24]
    7a48:	tbz	w0, #11, 7b98 <inflate@@Base+0x6a8>
    7a4c:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7a50:	mov	w28, #0x0                   	// #0
    7a54:	ldr	x1, [x26, #48]
    7a58:	ldrb	w3, [x21, w28, uxtw]
    7a5c:	add	w28, w28, #0x1
    7a60:	cbz	x1, 7a88 <inflate@@Base+0x598>
    7a64:	ldr	x2, [x1, #40]
    7a68:	cbz	x2, 7a88 <inflate@@Base+0x598>
    7a6c:	ldr	w1, [x1, #48]
    7a70:	ldr	w0, [x26, #92]
    7a74:	cmp	w0, w1
    7a78:	b.cs	7a88 <inflate@@Base+0x598>  // b.hs, b.nlast
    7a7c:	add	w1, w0, #0x1
    7a80:	str	w1, [x26, #92]
    7a84:	strb	w3, [x2, w0, uxtw]
    7a88:	cmp	w3, #0x0
    7a8c:	ccmp	w25, w28, #0x0, ne  // ne = any
    7a90:	b.hi	7a54 <inflate@@Base+0x564>  // b.pmore
    7a94:	ldr	w0, [x26, #24]
    7a98:	tbz	w0, #9, 7ac0 <inflate@@Base+0x5d0>
    7a9c:	ldr	w0, [x26, #16]
    7aa0:	tbz	w0, #2, 7ac0 <inflate@@Base+0x5d0>
    7aa4:	ldr	x0, [x26, #32]
    7aa8:	mov	w2, w28
    7aac:	mov	x1, x21
    7ab0:	str	w3, [sp, #136]
    7ab4:	bl	2430 <crc32@plt>
    7ab8:	str	x0, [x26, #32]
    7abc:	ldr	w3, [sp, #136]
    7ac0:	sub	w25, w25, w28
    7ac4:	add	x21, x21, w28, uxtw
    7ac8:	cbnz	w3, 75bc <inflate@@Base+0xcc>
    7acc:	mov	w0, #0x3f3b                	// #16187
    7ad0:	str	w0, [x26, #8]
    7ad4:	str	wzr, [x26, #92]
    7ad8:	ldr	w0, [x26, #24]
    7adc:	tbz	w0, #12, 7ba8 <inflate@@Base+0x6b8>
    7ae0:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7ae4:	mov	w28, #0x0                   	// #0
    7ae8:	ldr	x1, [x26, #48]
    7aec:	ldrb	w3, [x21, w28, uxtw]
    7af0:	add	w28, w28, #0x1
    7af4:	cbz	x1, 7b1c <inflate@@Base+0x62c>
    7af8:	ldr	x2, [x1, #56]
    7afc:	cbz	x2, 7b1c <inflate@@Base+0x62c>
    7b00:	ldr	w1, [x1, #64]
    7b04:	ldr	w0, [x26, #92]
    7b08:	cmp	w0, w1
    7b0c:	b.cs	7b1c <inflate@@Base+0x62c>  // b.hs, b.nlast
    7b10:	add	w1, w0, #0x1
    7b14:	str	w1, [x26, #92]
    7b18:	strb	w3, [x2, w0, uxtw]
    7b1c:	cmp	w3, #0x0
    7b20:	ccmp	w25, w28, #0x0, ne  // ne = any
    7b24:	b.hi	7ae8 <inflate@@Base+0x5f8>  // b.pmore
    7b28:	ldr	w0, [x26, #24]
    7b2c:	tbz	w0, #9, 7b54 <inflate@@Base+0x664>
    7b30:	ldr	w0, [x26, #16]
    7b34:	tbz	w0, #2, 7b54 <inflate@@Base+0x664>
    7b38:	ldr	x0, [x26, #32]
    7b3c:	mov	w2, w28
    7b40:	mov	x1, x21
    7b44:	str	w3, [sp, #136]
    7b48:	bl	2430 <crc32@plt>
    7b4c:	str	x0, [x26, #32]
    7b50:	ldr	w3, [sp, #136]
    7b54:	sub	w25, w25, w28
    7b58:	add	x21, x21, w28, uxtw
    7b5c:	cbnz	w3, 75bc <inflate@@Base+0xcc>
    7b60:	mov	w0, #0x3f3c                	// #16188
    7b64:	str	w0, [x26, #8]
    7b68:	ldr	w0, [x26, #24]
    7b6c:	tbz	w0, #9, 7bdc <inflate@@Base+0x6ec>
    7b70:	cmp	w24, #0xf
    7b74:	b.ls	7bb8 <inflate@@Base+0x6c8>  // b.plast
    7b78:	ldr	w1, [x26, #16]
    7b7c:	tbz	w1, #2, 7bd4 <inflate@@Base+0x6e4>
    7b80:	ldrh	w1, [x26, #32]
    7b84:	cmp	x1, x23
    7b88:	b.eq	7bd4 <inflate@@Base+0x6e4>  // b.none
    7b8c:	adrp	x0, f000 <gzclose_w@@ZLIB_1.2.3.5+0x23c4>
    7b90:	add	x0, x0, #0x7ad
    7b94:	b	7704 <inflate@@Base+0x214>
    7b98:	ldr	x0, [x26, #48]
    7b9c:	cbz	x0, 7acc <inflate@@Base+0x5dc>
    7ba0:	str	xzr, [x0, #40]
    7ba4:	b	7acc <inflate@@Base+0x5dc>
    7ba8:	ldr	x0, [x26, #48]
    7bac:	cbz	x0, 7b60 <inflate@@Base+0x670>
    7bb0:	str	xzr, [x0, #56]
    7bb4:	b	7b60 <inflate@@Base+0x670>
    7bb8:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7bbc:	ldrb	w1, [x21], #1
    7bc0:	sub	w25, w25, #0x1
    7bc4:	lsl	x1, x1, x24
    7bc8:	add	w24, w24, #0x8
    7bcc:	add	x23, x23, x1
    7bd0:	b	7b70 <inflate@@Base+0x680>
    7bd4:	mov	w24, #0x0                   	// #0
    7bd8:	mov	x23, #0x0                   	// #0
    7bdc:	ldr	x1, [x26, #48]
    7be0:	cbz	x1, 7bf4 <inflate@@Base+0x704>
    7be4:	ubfx	x0, x0, #9, #1
    7be8:	str	w0, [x1, #68]
    7bec:	mov	w0, #0x1                   	// #1
    7bf0:	str	w0, [x1, #72]
    7bf4:	mov	w2, #0x0                   	// #0
    7bf8:	mov	x1, #0x0                   	// #0
    7bfc:	mov	x0, #0x0                   	// #0
    7c00:	bl	2430 <crc32@plt>
    7c04:	str	x0, [x26, #32]
    7c08:	str	x0, [x27, #96]
    7c0c:	mov	w0, #0x3f3f                	// #16191
    7c10:	b	7644 <inflate@@Base+0x154>
    7c14:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7c18:	ldrb	w0, [x21], #1
    7c1c:	sub	w25, w25, #0x1
    7c20:	lsl	x0, x0, x24
    7c24:	add	w24, w24, #0x8
    7c28:	add	x23, x23, x0
    7c2c:	cmp	w24, #0x1f
    7c30:	b.ls	7c14 <inflate@@Base+0x724>  // b.plast
    7c34:	lsr	x1, x23, #8
    7c38:	lsr	w0, w23, #24
    7c3c:	and	x1, x1, #0xff00
    7c40:	lsl	w7, w23, #24
    7c44:	orr	x0, x0, x1
    7c48:	lsl	x1, x23, #8
    7c4c:	and	x1, x1, #0xff0000
    7c50:	mov	w24, #0x0                   	// #0
    7c54:	add	x7, x1, x7
    7c58:	mov	x23, #0x0                   	// #0
    7c5c:	add	x7, x0, x7
    7c60:	str	x7, [x26, #32]
    7c64:	str	x7, [x27, #96]
    7c68:	mov	w0, #0x3f3e                	// #16190
    7c6c:	str	w0, [x26, #8]
    7c70:	ldr	w0, [x26, #20]
    7c74:	cbnz	w0, 7cb4 <inflate@@Base+0x7c4>
    7c78:	str	x21, [x27]
    7c7c:	mov	w20, #0x2                   	// #2
    7c80:	str	w25, [x27, #8]
    7c84:	str	x22, [x27, #24]
    7c88:	str	w19, [x27, #32]
    7c8c:	str	x23, [x26, #80]
    7c90:	str	w24, [x26, #88]
    7c94:	mov	w0, w20
    7c98:	ldp	x19, x20, [sp, #16]
    7c9c:	ldp	x21, x22, [sp, #32]
    7ca0:	ldp	x23, x24, [sp, #48]
    7ca4:	ldp	x25, x26, [sp, #64]
    7ca8:	ldp	x27, x28, [sp, #80]
    7cac:	ldp	x29, x30, [sp], #176
    7cb0:	ret
    7cb4:	mov	w2, #0x0                   	// #0
    7cb8:	mov	x1, #0x0                   	// #0
    7cbc:	mov	x0, #0x0                   	// #0
    7cc0:	bl	2560 <adler32@plt>
    7cc4:	str	x0, [x26, #32]
    7cc8:	str	x0, [x27, #96]
    7ccc:	mov	w0, #0x3f3f                	// #16191
    7cd0:	str	w0, [x26, #8]
    7cd4:	ldr	w0, [sp, #112]
    7cd8:	sub	w0, w0, #0x5
    7cdc:	cmp	w0, #0x1
    7ce0:	b.ls	75bc <inflate@@Base+0xcc>  // b.plast
    7ce4:	ldr	w0, [x26, #12]
    7ce8:	cbz	w0, 7d18 <inflate@@Base+0x828>
    7cec:	and	w0, w24, #0x7
    7cf0:	and	w24, w24, #0xfffffff8
    7cf4:	lsr	x23, x23, x0
    7cf8:	mov	w0, #0x3f4e                	// #16206
    7cfc:	b	7644 <inflate@@Base+0x154>
    7d00:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7d04:	ldrb	w0, [x21], #1
    7d08:	sub	w25, w25, #0x1
    7d0c:	lsl	x0, x0, x24
    7d10:	add	w24, w24, #0x8
    7d14:	add	x23, x23, x0
    7d18:	cmp	w24, #0x2
    7d1c:	b.ls	7d00 <inflate@@Base+0x810>  // b.plast
    7d20:	and	w0, w23, #0x1
    7d24:	str	w0, [x26, #12]
    7d28:	ubfx	w0, w23, #1, #2
    7d2c:	lsr	x7, x23, #3
    7d30:	sub	w8, w24, #0x3
    7d34:	cmp	w0, #0x2
    7d38:	b.eq	7d9c <inflate@@Base+0x8ac>  // b.none
    7d3c:	cmp	w0, #0x3
    7d40:	b.eq	7da4 <inflate@@Base+0x8b4>  // b.none
    7d44:	cmp	w0, #0x1
    7d48:	b.eq	7d60 <inflate@@Base+0x870>  // b.none
    7d4c:	mov	w0, #0x3f41                	// #16193
    7d50:	str	w0, [x26, #8]
    7d54:	mov	x23, x7
    7d58:	mov	w24, w8
    7d5c:	b	758c <inflate@@Base+0x9c>
    7d60:	ldr	x0, [sp, #120]
    7d64:	str	x0, [x26, #104]
    7d68:	add	x0, x0, #0x800
    7d6c:	str	x0, [x26, #112]
    7d70:	mov	x0, #0x9                   	// #9
    7d74:	movk	x0, #0x5, lsl #32
    7d78:	str	x0, [x26, #120]
    7d7c:	mov	w0, #0x3f47                	// #16199
    7d80:	str	w0, [x26, #8]
    7d84:	ldr	w0, [sp, #112]
    7d88:	cmp	w0, #0x6
    7d8c:	b.ne	7d54 <inflate@@Base+0x864>  // b.any
    7d90:	mov	x23, x7
    7d94:	mov	w24, w8
    7d98:	b	75bc <inflate@@Base+0xcc>
    7d9c:	mov	w0, #0x3f44                	// #16196
    7da0:	b	7d50 <inflate@@Base+0x860>
    7da4:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    7da8:	add	x0, x0, #0xd65
    7dac:	str	x0, [x27, #48]
    7db0:	mov	w0, #0x3f51                	// #16209
    7db4:	b	7d50 <inflate@@Base+0x860>
    7db8:	and	w0, w24, #0x7
    7dbc:	and	w24, w24, #0xfffffff8
    7dc0:	lsr	x23, x23, x0
    7dc4:	cmp	w24, #0x1f
    7dc8:	b.ls	7dec <inflate@@Base+0x8fc>  // b.plast
    7dcc:	lsr	x0, x23, #16
    7dd0:	and	x1, x23, #0xffff
    7dd4:	eor	x0, x0, #0xffff
    7dd8:	cmp	x0, w23, uxth
    7ddc:	b.eq	7e08 <inflate@@Base+0x918>  // b.none
    7de0:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    7de4:	add	x0, x0, #0xd78
    7de8:	b	7704 <inflate@@Base+0x214>
    7dec:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7df0:	ldrb	w0, [x21], #1
    7df4:	sub	w25, w25, #0x1
    7df8:	lsl	x0, x0, x24
    7dfc:	add	w24, w24, #0x8
    7e00:	add	x23, x23, x0
    7e04:	b	7dc4 <inflate@@Base+0x8d4>
    7e08:	mov	w0, #0x3f42                	// #16194
    7e0c:	str	w0, [x26, #8]
    7e10:	ldr	w0, [sp, #112]
    7e14:	mov	w24, #0x0                   	// #0
    7e18:	str	w1, [x26, #92]
    7e1c:	mov	x23, #0x0                   	// #0
    7e20:	cmp	w0, #0x6
    7e24:	b.eq	75bc <inflate@@Base+0xcc>  // b.none
    7e28:	mov	w0, #0x3f43                	// #16195
    7e2c:	str	w0, [x26, #8]
    7e30:	ldr	w28, [x26, #92]
    7e34:	cbz	w28, 7c0c <inflate@@Base+0x71c>
    7e38:	cmp	w19, w28
    7e3c:	csel	w28, w19, w28, ls  // ls = plast
    7e40:	cmp	w25, w28
    7e44:	csel	w28, w25, w28, ls  // ls = plast
    7e48:	cbz	w28, 75bc <inflate@@Base+0xcc>
    7e4c:	mov	w2, w28
    7e50:	mov	x1, x21
    7e54:	mov	x0, x22
    7e58:	str	x2, [sp, #136]
    7e5c:	bl	23a0 <memcpy@plt>
    7e60:	sub	w25, w25, w28
    7e64:	ldr	x2, [sp, #136]
    7e68:	sub	w19, w19, w28
    7e6c:	ldr	w0, [x26, #92]
    7e70:	add	x21, x21, x2
    7e74:	add	x22, x22, x2
    7e78:	sub	w28, w0, w28
    7e7c:	str	w28, [x26, #92]
    7e80:	b	758c <inflate@@Base+0x9c>
    7e84:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7e88:	ldrb	w0, [x21], #1
    7e8c:	sub	w25, w25, #0x1
    7e90:	lsl	x0, x0, x24
    7e94:	add	w24, w24, #0x8
    7e98:	add	x23, x23, x0
    7e9c:	cmp	w24, #0xd
    7ea0:	b.ls	7e84 <inflate@@Base+0x994>  // b.plast
    7ea4:	and	w1, w23, #0x1f
    7ea8:	ubfx	w0, w23, #5, #5
    7eac:	ubfx	w2, w23, #10, #4
    7eb0:	add	w1, w1, #0x101
    7eb4:	add	w0, w0, #0x1
    7eb8:	add	w2, w2, #0x4
    7ebc:	stp	w2, w1, [x26, #128]
    7ec0:	lsr	x23, x23, #14
    7ec4:	str	w0, [x26, #136]
    7ec8:	sub	w24, w24, #0xe
    7ecc:	cmp	w1, #0x11e
    7ed0:	b.hi	7edc <inflate@@Base+0x9ec>  // b.pmore
    7ed4:	cmp	w0, #0x1e
    7ed8:	b.ls	7ee8 <inflate@@Base+0x9f8>  // b.plast
    7edc:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    7ee0:	add	x0, x0, #0xd95
    7ee4:	b	7704 <inflate@@Base+0x214>
    7ee8:	mov	w0, #0x3f45                	// #16197
    7eec:	str	w0, [x26, #8]
    7ef0:	str	wzr, [x26, #140]
    7ef4:	ldr	w2, [x26, #128]
    7ef8:	ldr	w0, [x26, #140]
    7efc:	cmp	w0, w2
    7f00:	b.cc	7f6c <inflate@@Base+0xa7c>  // b.lo, b.ul, b.last
    7f04:	ldr	w0, [x26, #140]
    7f08:	cmp	w0, #0x12
    7f0c:	b.ls	7f9c <inflate@@Base+0xaac>  // b.plast
    7f10:	add	x0, x26, #0x558
    7f14:	str	x0, [x26, #104]
    7f18:	str	x0, [x26, #144]
    7f1c:	mov	w0, #0x7                   	// #7
    7f20:	str	w0, [x26, #120]
    7f24:	add	x5, x26, #0x318
    7f28:	add	x4, x26, #0x78
    7f2c:	add	x3, x26, #0x90
    7f30:	add	x1, x26, #0x98
    7f34:	mov	w2, #0x13                  	// #19
    7f38:	mov	w0, #0x0                   	// #0
    7f3c:	bl	8e78 <inflateCodesUsed@@ZLIB_1.2.9+0x38>
    7f40:	mov	w20, w0
    7f44:	cbz	w0, 7fb8 <inflate@@Base+0xac8>
    7f48:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    7f4c:	add	x0, x0, #0xdb9
    7f50:	b	7704 <inflate@@Base+0x214>
    7f54:	cbz	w25, 75bc <inflate@@Base+0xcc>
    7f58:	ldrb	w1, [x21], #1
    7f5c:	sub	w25, w25, #0x1
    7f60:	lsl	x1, x1, x24
    7f64:	add	w24, w24, #0x8
    7f68:	add	x23, x23, x1
    7f6c:	cmp	w24, #0x2
    7f70:	b.ls	7f54 <inflate@@Base+0xa64>  // b.plast
    7f74:	add	w1, w0, #0x1
    7f78:	str	w1, [x26, #140]
    7f7c:	ldr	x1, [sp, #128]
    7f80:	sub	w24, w24, #0x3
    7f84:	ldrh	w0, [x1, w0, uxtw #1]
    7f88:	and	w1, w23, #0x7
    7f8c:	lsr	x23, x23, #3
    7f90:	add	x0, x26, x0, lsl #1
    7f94:	strh	w1, [x0, #152]
    7f98:	b	7ef8 <inflate@@Base+0xa08>
    7f9c:	add	w1, w0, #0x1
    7fa0:	str	w1, [x26, #140]
    7fa4:	ldr	x1, [sp, #128]
    7fa8:	ldrh	w0, [x1, w0, uxtw #1]
    7fac:	add	x0, x26, x0, lsl #1
    7fb0:	strh	wzr, [x0, #152]
    7fb4:	b	7f04 <inflate@@Base+0xa14>
    7fb8:	mov	w0, #0x3f46                	// #16198
    7fbc:	str	w0, [x26, #8]
    7fc0:	str	wzr, [x26, #140]
    7fc4:	ldp	w2, w4, [x26, #132]
    7fc8:	mov	w5, #0xffffffff            	// #-1
    7fcc:	mov	w12, #0xfffffff9            	// #-7
    7fd0:	mov	w13, #0xfffffffd            	// #-3
    7fd4:	add	w4, w2, w4
    7fd8:	b	8000 <inflate@@Base+0xb10>
    7fdc:	ldrh	w1, [x14, #2]
    7fe0:	cmp	w1, #0xf
    7fe4:	b.hi	804c <inflate@@Base+0xb5c>  // b.pmore
    7fe8:	sub	w24, w24, w0
    7fec:	lsr	x23, x23, x0
    7ff0:	add	w0, w3, #0x1
    7ff4:	add	x3, x26, w3, uxtw #1
    7ff8:	str	w0, [x26, #140]
    7ffc:	strh	w1, [x3, #152]
    8000:	ldr	w3, [x26, #140]
    8004:	cmp	w3, w4
    8008:	b.cs	8080 <inflate@@Base+0xb90>  // b.hs, b.nlast
    800c:	ldr	w1, [x26, #120]
    8010:	ldr	x15, [x26, #104]
    8014:	lsl	w1, w5, w1
    8018:	mvn	w1, w1
    801c:	and	w14, w1, w23
    8020:	add	x14, x15, x14, lsl #2
    8024:	ldrb	w0, [x14, #1]
    8028:	cmp	w0, w24
    802c:	b.ls	7fdc <inflate@@Base+0xaec>  // b.plast
    8030:	cbz	w25, 75bc <inflate@@Base+0xcc>
    8034:	ldrb	w0, [x21], #1
    8038:	sub	w25, w25, #0x1
    803c:	lsl	x0, x0, x24
    8040:	add	w24, w24, #0x8
    8044:	add	x23, x23, x0
    8048:	b	801c <inflate@@Base+0xb2c>
    804c:	cmp	w1, #0x10
    8050:	b.ne	8114 <inflate@@Base+0xc24>  // b.any
    8054:	add	w14, w0, #0x2
    8058:	cmp	w14, w24
    805c:	b.hi	80ac <inflate@@Base+0xbbc>  // b.pmore
    8060:	sub	w24, w24, w0
    8064:	lsr	x23, x23, x0
    8068:	cbnz	w3, 80c8 <inflate@@Base+0xbd8>
    806c:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    8070:	add	x0, x0, #0xdd2
    8074:	str	x0, [x27, #48]
    8078:	mov	w0, #0x3f51                	// #16209
    807c:	str	w0, [x26, #8]
    8080:	ldr	w0, [x26, #8]
    8084:	mov	w28, #0x3f51                	// #16209
    8088:	cmp	w0, w28
    808c:	b.eq	758c <inflate@@Base+0x9c>  // b.none
    8090:	ldrh	w0, [x26, #664]
    8094:	cbnz	w0, 81a4 <inflate@@Base+0xcb4>
    8098:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    809c:	add	x0, x0, #0xdec
    80a0:	str	x0, [x27, #48]
    80a4:	str	w28, [x26, #8]
    80a8:	b	758c <inflate@@Base+0x9c>
    80ac:	cbz	w25, 75bc <inflate@@Base+0xcc>
    80b0:	ldrb	w1, [x21], #1
    80b4:	sub	w25, w25, #0x1
    80b8:	lsl	x1, x1, x24
    80bc:	add	w24, w24, #0x8
    80c0:	add	x23, x23, x1
    80c4:	b	8058 <inflate@@Base+0xb68>
    80c8:	sub	w0, w3, #0x1
    80cc:	and	w1, w23, #0x3
    80d0:	add	w1, w1, #0x3
    80d4:	lsr	x23, x23, #2
    80d8:	add	x0, x26, x0, lsl #1
    80dc:	sub	w24, w24, #0x2
    80e0:	ldrh	w14, [x0, #152]
    80e4:	add	w3, w3, w1
    80e8:	cmp	w3, w4
    80ec:	b.hi	806c <inflate@@Base+0xb7c>  // b.pmore
    80f0:	sub	w1, w1, #0x1
    80f4:	ldr	w0, [x26, #140]
    80f8:	cmn	w1, #0x1
    80fc:	b.eq	8000 <inflate@@Base+0xb10>  // b.none
    8100:	add	w3, w0, #0x1
    8104:	add	x0, x26, w0, uxtw #1
    8108:	str	w3, [x26, #140]
    810c:	strh	w14, [x0, #152]
    8110:	b	80f0 <inflate@@Base+0xc00>
    8114:	cmp	w1, #0x11
    8118:	b.ne	8148 <inflate@@Base+0xc58>  // b.any
    811c:	add	w14, w0, #0x3
    8120:	cmp	w14, w24
    8124:	b.hi	816c <inflate@@Base+0xc7c>  // b.pmore
    8128:	lsr	x7, x23, x0
    812c:	and	w1, w7, #0x7
    8130:	add	w1, w1, #0x3
    8134:	lsr	x23, x7, #3
    8138:	sub	w0, w13, w0
    813c:	add	w24, w24, w0
    8140:	mov	w14, #0x0                   	// #0
    8144:	b	80e4 <inflate@@Base+0xbf4>
    8148:	add	w14, w0, #0x7
    814c:	cmp	w14, w24
    8150:	b.hi	8188 <inflate@@Base+0xc98>  // b.pmore
    8154:	lsr	x7, x23, x0
    8158:	and	w1, w7, #0x7f
    815c:	add	w1, w1, #0xb
    8160:	lsr	x23, x7, #7
    8164:	sub	w0, w12, w0
    8168:	b	813c <inflate@@Base+0xc4c>
    816c:	cbz	w25, 75bc <inflate@@Base+0xcc>
    8170:	ldrb	w1, [x21], #1
    8174:	sub	w25, w25, #0x1
    8178:	lsl	x1, x1, x24
    817c:	add	w24, w24, #0x8
    8180:	add	x23, x23, x1
    8184:	b	8120 <inflate@@Base+0xc30>
    8188:	cbz	w25, 75bc <inflate@@Base+0xcc>
    818c:	ldrb	w1, [x21], #1
    8190:	sub	w25, w25, #0x1
    8194:	lsl	x1, x1, x24
    8198:	add	w24, w24, #0x8
    819c:	add	x23, x23, x1
    81a0:	b	814c <inflate@@Base+0xc5c>
    81a4:	add	x0, x26, #0x558
    81a8:	str	x0, [x26, #104]
    81ac:	str	x0, [x26, #144]
    81b0:	mov	w0, #0x9                   	// #9
    81b4:	str	w0, [x26, #120]
    81b8:	add	x1, x26, #0x98
    81bc:	add	x3, x26, #0x90
    81c0:	add	x5, x26, #0x318
    81c4:	add	x4, x26, #0x78
    81c8:	mov	w0, #0x1                   	// #1
    81cc:	stp	x1, x3, [sp, #136]
    81d0:	str	x5, [sp, #152]
    81d4:	bl	8e78 <inflateCodesUsed@@ZLIB_1.2.9+0x38>
    81d8:	mov	w20, w0
    81dc:	ldp	x1, x3, [sp, #136]
    81e0:	ldr	x5, [sp, #152]
    81e4:	cbz	w0, 81f4 <inflate@@Base+0xd04>
    81e8:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    81ec:	add	x0, x0, #0xe11
    81f0:	b	80a0 <inflate@@Base+0xbb0>
    81f4:	mov	x4, x26
    81f8:	ldr	w2, [x26, #136]
    81fc:	ldr	x0, [x26, #144]
    8200:	str	x0, [x26, #112]
    8204:	mov	w0, #0x6                   	// #6
    8208:	str	w0, [x4, #124]!
    820c:	ldr	w0, [x26, #132]
    8210:	add	x1, x1, x0, lsl #1
    8214:	mov	w0, #0x2                   	// #2
    8218:	bl	8e78 <inflateCodesUsed@@ZLIB_1.2.9+0x38>
    821c:	mov	w20, w0
    8220:	cbz	w0, 8230 <inflate@@Base+0xd40>
    8224:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    8228:	add	x0, x0, #0xe2d
    822c:	b	80a0 <inflate@@Base+0xbb0>
    8230:	mov	w0, #0x3f47                	// #16199
    8234:	str	w0, [x26, #8]
    8238:	ldr	w0, [sp, #112]
    823c:	cmp	w0, #0x6
    8240:	b.eq	75bc <inflate@@Base+0xcc>  // b.none
    8244:	mov	w0, #0x3f48                	// #16200
    8248:	str	w0, [x26, #8]
    824c:	cmp	w19, #0x101
    8250:	ccmp	w25, #0x5, #0x0, hi  // hi = pmore
    8254:	b.ls	82b0 <inflate@@Base+0xdc0>  // b.plast
    8258:	ldr	w1, [sp, #100]
    825c:	mov	x0, x27
    8260:	str	x21, [x27]
    8264:	str	w25, [x27, #8]
    8268:	str	x22, [x27, #24]
    826c:	str	w19, [x27, #32]
    8270:	str	x23, [x26, #80]
    8274:	str	w24, [x26, #88]
    8278:	bl	6bd4 <inflateBackEnd@@ZLIB_1.2.0+0x50>
    827c:	ldr	w24, [x26, #88]
    8280:	ldr	w1, [x26, #8]
    8284:	mov	w0, #0x3f3f                	// #16191
    8288:	ldr	w25, [x27, #8]
    828c:	ldr	w19, [x27, #32]
    8290:	cmp	w1, w0
    8294:	ldr	x21, [x27]
    8298:	ldr	x22, [x27, #24]
    829c:	ldr	x23, [x26, #80]
    82a0:	b.ne	758c <inflate@@Base+0x9c>  // b.any
    82a4:	mov	w0, #0xffffffff            	// #-1
    82a8:	str	w0, [x26, #7148]
    82ac:	b	758c <inflate@@Base+0x9c>
    82b0:	ldr	w1, [x26, #120]
    82b4:	mov	w0, #0xffffffff            	// #-1
    82b8:	ldr	x4, [x26, #104]
    82bc:	str	wzr, [x26, #7148]
    82c0:	lsl	w0, w0, w1
    82c4:	mvn	w0, w0
    82c8:	and	w1, w0, w23
    82cc:	add	x1, x4, x1, lsl #2
    82d0:	ldrb	w2, [x1, #1]
    82d4:	mov	w3, w2
    82d8:	cmp	w2, w24
    82dc:	b.ls	82fc <inflate@@Base+0xe0c>  // b.plast
    82e0:	cbz	w25, 75bc <inflate@@Base+0xcc>
    82e4:	ldrb	w1, [x21], #1
    82e8:	sub	w25, w25, #0x1
    82ec:	lsl	x1, x1, x24
    82f0:	add	w24, w24, #0x8
    82f4:	add	x23, x23, x1
    82f8:	b	82c8 <inflate@@Base+0xdd8>
    82fc:	ldrb	w0, [x1]
    8300:	ldrh	w5, [x1, #2]
    8304:	cbz	w0, 8370 <inflate@@Base+0xe80>
    8308:	tst	w0, #0xf0
    830c:	b.ne	8370 <inflate@@Base+0xe80>  // b.any
    8310:	add	w0, w0, w2
    8314:	mov	w1, #0xffffffff            	// #-1
    8318:	lsl	w0, w1, w0
    831c:	mvn	w0, w0
    8320:	and	w1, w0, w23
    8324:	lsr	w1, w1, w2
    8328:	add	w1, w1, w5
    832c:	add	x1, x4, x1, lsl #2
    8330:	ldrb	w3, [x1, #1]
    8334:	add	w12, w3, w2
    8338:	cmp	w12, w24
    833c:	b.ls	835c <inflate@@Base+0xe6c>  // b.plast
    8340:	cbz	w25, 75bc <inflate@@Base+0xcc>
    8344:	ldrb	w1, [x21], #1
    8348:	sub	w25, w25, #0x1
    834c:	lsl	x1, x1, x24
    8350:	add	w24, w24, #0x8
    8354:	add	x23, x23, x1
    8358:	b	8320 <inflate@@Base+0xe30>
    835c:	sub	w24, w24, w2
    8360:	ldrb	w0, [x1]
    8364:	ldrh	w5, [x1, #2]
    8368:	lsr	x23, x23, x2
    836c:	str	w2, [x26, #7148]
    8370:	ldr	w1, [x26, #7148]
    8374:	sub	w24, w24, w3
    8378:	lsr	x23, x23, x3
    837c:	str	w5, [x26, #92]
    8380:	add	w3, w1, w3
    8384:	str	w3, [x26, #7148]
    8388:	cbnz	w0, 8394 <inflate@@Base+0xea4>
    838c:	mov	w0, #0x3f4d                	// #16205
    8390:	b	7644 <inflate@@Base+0x154>
    8394:	tbz	w0, #5, 83a4 <inflate@@Base+0xeb4>
    8398:	mov	w0, #0xffffffff            	// #-1
    839c:	str	w0, [x26, #7148]
    83a0:	b	7c0c <inflate@@Base+0x71c>
    83a4:	tbz	w0, #6, 83b4 <inflate@@Base+0xec4>
    83a8:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    83ac:	add	x0, x0, #0xe43
    83b0:	b	7704 <inflate@@Base+0x214>
    83b4:	and	w0, w0, #0xf
    83b8:	str	w0, [x26, #100]
    83bc:	mov	w0, #0x3f49                	// #16201
    83c0:	str	w0, [x26, #8]
    83c4:	ldr	w0, [x26, #100]
    83c8:	cbnz	w0, 843c <inflate@@Base+0xf4c>
    83cc:	ldr	w0, [x26, #92]
    83d0:	str	w0, [x26, #7152]
    83d4:	mov	w0, #0x3f4a                	// #16202
    83d8:	str	w0, [x26, #8]
    83dc:	ldr	w1, [x26, #124]
    83e0:	mov	w0, #0xffffffff            	// #-1
    83e4:	ldr	x4, [x26, #112]
    83e8:	lsl	w0, w0, w1
    83ec:	mvn	w0, w0
    83f0:	and	w1, w0, w23
    83f4:	add	x1, x4, x1, lsl #2
    83f8:	ldrb	w2, [x1, #1]
    83fc:	mov	w3, w2
    8400:	cmp	w2, w24
    8404:	b.ls	8474 <inflate@@Base+0xf84>  // b.plast
    8408:	cbz	w25, 75bc <inflate@@Base+0xcc>
    840c:	ldrb	w1, [x21], #1
    8410:	sub	w25, w25, #0x1
    8414:	lsl	x1, x1, x24
    8418:	add	w24, w24, #0x8
    841c:	add	x23, x23, x1
    8420:	b	83f0 <inflate@@Base+0xf00>
    8424:	cbz	w25, 75bc <inflate@@Base+0xcc>
    8428:	ldrb	w1, [x21], #1
    842c:	sub	w25, w25, #0x1
    8430:	lsl	x1, x1, x24
    8434:	add	w24, w24, #0x8
    8438:	add	x23, x23, x1
    843c:	cmp	w0, w24
    8440:	b.hi	8424 <inflate@@Base+0xf34>  // b.pmore
    8444:	ldr	w2, [x26, #92]
    8448:	mov	w1, #0xffffffff            	// #-1
    844c:	lsl	w1, w1, w0
    8450:	bic	w1, w23, w1
    8454:	add	w1, w2, w1
    8458:	str	w1, [x26, #92]
    845c:	ldr	w1, [x26, #7148]
    8460:	sub	w24, w24, w0
    8464:	lsr	x23, x23, x0
    8468:	add	w0, w1, w0
    846c:	str	w0, [x26, #7148]
    8470:	b	83cc <inflate@@Base+0xedc>
    8474:	ldrb	w0, [x1]
    8478:	ldrh	w5, [x1, #2]
    847c:	tst	w0, #0xf0
    8480:	b.ne	84ec <inflate@@Base+0xffc>  // b.any
    8484:	add	w0, w0, w2
    8488:	mov	w1, #0xffffffff            	// #-1
    848c:	lsl	w0, w1, w0
    8490:	mvn	w0, w0
    8494:	and	w1, w0, w23
    8498:	lsr	w1, w1, w2
    849c:	add	w1, w1, w5
    84a0:	add	x1, x4, x1, lsl #2
    84a4:	ldrb	w3, [x1, #1]
    84a8:	add	w12, w3, w2
    84ac:	cmp	w12, w24
    84b0:	b.ls	84d0 <inflate@@Base+0xfe0>  // b.plast
    84b4:	cbz	w25, 75bc <inflate@@Base+0xcc>
    84b8:	ldrb	w1, [x21], #1
    84bc:	sub	w25, w25, #0x1
    84c0:	lsl	x1, x1, x24
    84c4:	add	w24, w24, #0x8
    84c8:	add	x23, x23, x1
    84cc:	b	8494 <inflate@@Base+0xfa4>
    84d0:	ldrb	w0, [x1]
    84d4:	sub	w24, w24, w2
    84d8:	ldrh	w5, [x1, #2]
    84dc:	lsr	x23, x23, x2
    84e0:	ldr	w1, [x26, #7148]
    84e4:	add	w2, w1, w2
    84e8:	str	w2, [x26, #7148]
    84ec:	ldr	w1, [x26, #7148]
    84f0:	sub	w24, w24, w3
    84f4:	lsr	x23, x23, x3
    84f8:	add	w3, w1, w3
    84fc:	str	w3, [x26, #7148]
    8500:	tbz	w0, #6, 8510 <inflate@@Base+0x1020>
    8504:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    8508:	add	x0, x0, #0xe5f
    850c:	b	7704 <inflate@@Base+0x214>
    8510:	and	w0, w0, #0xf
    8514:	stp	w5, w0, [x26, #96]
    8518:	mov	w0, #0x3f4b                	// #16203
    851c:	str	w0, [x26, #8]
    8520:	ldr	w0, [x26, #100]
    8524:	cbz	w0, 855c <inflate@@Base+0x106c>
    8528:	cmp	w0, w24
    852c:	b.hi	85a8 <inflate@@Base+0x10b8>  // b.pmore
    8530:	ldr	w2, [x26, #96]
    8534:	mov	w1, #0xffffffff            	// #-1
    8538:	lsl	w1, w1, w0
    853c:	bic	w1, w23, w1
    8540:	add	w1, w2, w1
    8544:	str	w1, [x26, #96]
    8548:	ldr	w1, [x26, #7148]
    854c:	sub	w24, w24, w0
    8550:	lsr	x23, x23, x0
    8554:	add	w0, w1, w0
    8558:	str	w0, [x26, #7148]
    855c:	mov	w0, #0x3f4c                	// #16204
    8560:	str	w0, [x26, #8]
    8564:	cbz	w19, 75bc <inflate@@Base+0xcc>
    8568:	ldr	w0, [sp, #100]
    856c:	ldr	w1, [x26, #96]
    8570:	sub	w0, w0, w19
    8574:	cmp	w1, w0
    8578:	b.ls	8650 <inflate@@Base+0x1160>  // b.plast
    857c:	ldr	w0, [sp, #100]
    8580:	add	w1, w1, w19
    8584:	sub	w4, w1, w0
    8588:	ldr	w0, [x26, #64]
    858c:	cmp	w0, w4
    8590:	b.cs	85c4 <inflate@@Base+0x10d4>  // b.hs, b.nlast
    8594:	ldr	w0, [x26, #7144]
    8598:	cbz	w0, 85c4 <inflate@@Base+0x10d4>
    859c:	adrp	x0, e000 <gzclose_w@@ZLIB_1.2.3.5+0x13c4>
    85a0:	add	x0, x0, #0xe75
    85a4:	b	7704 <inflate@@Base+0x214>
    85a8:	cbz	w25, 75bc <inflate@@Base+0xcc>
    85ac:	ldrb	w1, [x21], #1
    85b0:	sub	w25, w25, #0x1
    85b4:	lsl	x1, x1, x24
    85b8:	add	w24, w24, #0x8
    85bc:	add	x23, x23, x1
    85c0:	b	8528 <inflate@@Base+0x1038>
    85c4:	ldr	w3, [x26, #68]
    85c8:	ldr	w0, [sp, #100]
    85cc:	cmp	w3, w4
    85d0:	sub	w0, w0, w1
    85d4:	ldr	x2, [x26, #72]
    85d8:	b.cs	8648 <inflate@@Base+0x1158>  // b.hs, b.nlast
    85dc:	ldr	w1, [x26, #60]
    85e0:	sub	w4, w4, w3
    85e4:	add	w1, w3, w1
    85e8:	add	w1, w1, w0
    85ec:	ldr	w0, [x26, #92]
    85f0:	add	x1, x2, x1
    85f4:	cmp	w0, w4
    85f8:	csel	w0, w0, w4, ls  // ls = plast
    85fc:	ldr	w2, [x26, #92]
    8600:	cmp	w19, w0
    8604:	csel	w0, w19, w0, ls  // ls = plast
    8608:	sub	w2, w2, w0
    860c:	sub	w19, w19, w0
    8610:	str	w2, [x26, #92]
    8614:	mov	x2, #0x0                   	// #0
    8618:	ldrb	w3, [x1, x2]
    861c:	strb	w3, [x22, x2]
    8620:	add	x2, x2, #0x1
    8624:	cmp	w0, w2
    8628:	b.ne	8618 <inflate@@Base+0x1128>  // b.any
    862c:	sub	w0, w0, #0x1
    8630:	add	x0, x0, #0x1
    8634:	add	x22, x22, x0
    8638:	ldr	w0, [x26, #92]
    863c:	cbnz	w0, 758c <inflate@@Base+0x9c>
    8640:	mov	w0, #0x3f48                	// #16200
    8644:	b	7644 <inflate@@Base+0x154>
    8648:	add	w1, w3, w0
    864c:	b	85ec <inflate@@Base+0x10fc>
    8650:	ldr	w0, [x26, #92]
    8654:	sub	x1, x22, w1, uxtw
    8658:	b	85fc <inflate@@Base+0x110c>
    865c:	cbz	w19, 75bc <inflate@@Base+0xcc>
    8660:	ldr	w0, [x26, #92]
    8664:	sub	w19, w19, #0x1
    8668:	strb	w0, [x22], #1
    866c:	b	8640 <inflate@@Base+0x1150>
    8670:	ldr	w1, [x26, #16]
    8674:	cbnz	w1, 86b8 <inflate@@Base+0x11c8>
    8678:	mov	w0, #0x3f4f                	// #16207
    867c:	str	w0, [x26, #8]
    8680:	ldr	w0, [x26, #16]
    8684:	cbz	w0, 8690 <inflate@@Base+0x11a0>
    8688:	ldr	w0, [x26, #24]
    868c:	cbnz	w0, 879c <inflate@@Base+0x12ac>
    8690:	mov	w0, #0x3f50                	// #16208
    8694:	str	w0, [x26, #8]
    8698:	mov	w20, #0x1                   	// #1
    869c:	b	75bc <inflate@@Base+0xcc>
    86a0:	cbz	w25, 75bc <inflate@@Base+0xcc>
    86a4:	ldrb	w0, [x21], #1
    86a8:	sub	w25, w25, #0x1
    86ac:	lsl	x0, x0, x24
    86b0:	add	w24, w24, #0x8
    86b4:	add	x23, x23, x0
    86b8:	cmp	w24, #0x1f
    86bc:	b.ls	86a0 <inflate@@Base+0x11b0>  // b.plast
    86c0:	ldr	w0, [sp, #100]
    86c4:	sub	w3, w0, w19
    86c8:	sub	w2, w0, w19
    86cc:	ldr	x0, [x27, #40]
    86d0:	add	x0, x0, x3
    86d4:	str	x0, [x27, #40]
    86d8:	ldr	x0, [x26, #40]
    86dc:	add	x0, x0, x3
    86e0:	str	x0, [x26, #40]
    86e4:	tbz	w1, #2, 8728 <inflate@@Base+0x1238>
    86e8:	cbnz	w2, 8738 <inflate@@Base+0x1248>
    86ec:	lsr	x1, x23, #8
    86f0:	lsr	w0, w23, #24
    86f4:	and	x1, x1, #0xff00
    86f8:	lsl	w3, w23, #24
    86fc:	orr	x0, x0, x1
    8700:	lsl	x1, x23, #8
    8704:	and	x1, x1, #0xff0000
    8708:	ldr	w2, [x26, #24]
    870c:	add	x1, x1, x3
    8710:	add	x0, x0, x1
    8714:	cmp	w2, #0x0
    8718:	ldr	x1, [x26, #32]
    871c:	csel	x0, x0, x23, eq  // eq = none
    8720:	cmp	x1, x0
    8724:	b.ne	8768 <inflate@@Base+0x1278>  // b.any
    8728:	mov	w24, #0x0                   	// #0
    872c:	mov	x23, #0x0                   	// #0
    8730:	str	w19, [sp, #100]
    8734:	b	8678 <inflate@@Base+0x1188>
    8738:	sub	x1, x22, x3
    873c:	ldr	w3, [x26, #24]
    8740:	ldr	x0, [x26, #32]
    8744:	cbz	w3, 8760 <inflate@@Base+0x1270>
    8748:	bl	2430 <crc32@plt>
    874c:	str	x0, [x26, #32]
    8750:	str	x0, [x27, #96]
    8754:	ldr	w0, [x26, #16]
    8758:	tbnz	w0, #2, 86ec <inflate@@Base+0x11fc>
    875c:	b	8728 <inflate@@Base+0x1238>
    8760:	bl	2560 <adler32@plt>
    8764:	b	874c <inflate@@Base+0x125c>
    8768:	adrp	x0, f000 <gzclose_w@@ZLIB_1.2.3.5+0x23c4>
    876c:	add	x0, x0, #0x7c1
    8770:	str	x0, [x27, #48]
    8774:	mov	w0, #0x3f51                	// #16209
    8778:	str	w0, [x26, #8]
    877c:	str	w19, [sp, #100]
    8780:	b	758c <inflate@@Base+0x9c>
    8784:	cbz	w25, 75bc <inflate@@Base+0xcc>
    8788:	ldrb	w0, [x21], #1
    878c:	sub	w25, w25, #0x1
    8790:	lsl	x0, x0, x24
    8794:	add	w24, w24, #0x8
    8798:	add	x23, x23, x0
    879c:	cmp	w24, #0x1f
    87a0:	b.ls	8784 <inflate@@Base+0x1294>  // b.plast
    87a4:	ldr	w0, [x26, #40]
    87a8:	cmp	x0, x23
    87ac:	b.eq	87bc <inflate@@Base+0x12cc>  // b.none
    87b0:	adrp	x0, f000 <gzclose_w@@ZLIB_1.2.3.5+0x23c4>
    87b4:	add	x0, x0, #0x7d6
    87b8:	b	7704 <inflate@@Base+0x214>
    87bc:	mov	w24, #0x0                   	// #0
    87c0:	mov	x23, #0x0                   	// #0
    87c4:	b	8690 <inflate@@Base+0x11a0>
    87c8:	ldr	w0, [x27, #8]
    87cc:	ldr	w1, [sp, #116]
    87d0:	ldr	w2, [sp, #100]
    87d4:	sub	w19, w1, w0
    87d8:	ldr	w1, [x27, #32]
    87dc:	sub	w22, w2, w1
    87e0:	ldr	w2, [sp, #116]
    87e4:	sub	w24, w2, w0
    87e8:	ldr	x0, [x27, #16]
    87ec:	add	x24, x0, x24
    87f0:	ldr	w0, [sp, #100]
    87f4:	str	x24, [x27, #16]
    87f8:	sub	w21, w0, w1
    87fc:	ldr	x0, [x27, #40]
    8800:	add	x0, x0, x21
    8804:	str	x0, [x27, #40]
    8808:	ldr	x0, [x26, #40]
    880c:	add	x0, x0, x21
    8810:	str	x0, [x26, #40]
    8814:	ldr	w0, [x26, #16]
    8818:	tbz	w0, #2, 8844 <inflate@@Base+0x1354>
    881c:	cbz	w22, 8844 <inflate@@Base+0x1354>
    8820:	ldr	w2, [x26, #24]
    8824:	ldr	x1, [x27, #24]
    8828:	ldr	x0, [x26, #32]
    882c:	sub	x1, x1, x21
    8830:	cbz	w2, 88b4 <inflate@@Base+0x13c4>
    8834:	mov	w2, w22
    8838:	bl	2430 <crc32@plt>
    883c:	str	x0, [x26, #32]
    8840:	str	x0, [x27, #96]
    8844:	ldr	w0, [x26, #12]
    8848:	mov	w1, #0x40                  	// #64
    884c:	ldr	w2, [x26, #88]
    8850:	orr	w19, w19, w22
    8854:	cmp	w0, #0x0
    8858:	csel	w0, w0, w1, eq  // eq = none
    885c:	ldr	w1, [x26, #8]
    8860:	add	w2, w2, w0
    8864:	mov	w0, #0x3f3f                	// #16191
    8868:	cmp	w1, w0
    886c:	cset	w0, eq  // eq = none
    8870:	add	w0, w2, w0, lsl #7
    8874:	mov	w2, #0x3f47                	// #16199
    8878:	cmp	w1, w2
    887c:	mov	w2, #0x3f42                	// #16194
    8880:	ccmp	w1, w2, #0x4, ne  // ne = any
    8884:	mov	w1, #0x100                 	// #256
    8888:	csel	w1, wzr, w1, ne  // ne = any
    888c:	add	w0, w0, w1
    8890:	str	w0, [x27, #88]
    8894:	cbz	w19, 88a4 <inflate@@Base+0x13b4>
    8898:	ldr	w0, [sp, #112]
    889c:	cmp	w0, #0x4
    88a0:	b.ne	7c94 <inflate@@Base+0x7a4>  // b.any
    88a4:	cmp	w20, #0x0
    88a8:	mov	w0, #0xfffffffb            	// #-5
    88ac:	csel	w20, w20, w0, ne  // ne = any
    88b0:	b	7c94 <inflate@@Base+0x7a4>
    88b4:	mov	w2, w22
    88b8:	bl	2560 <adler32@plt>
    88bc:	b	883c <inflate@@Base+0x134c>
    88c0:	mov	w20, #0xfffffffe            	// #-2
    88c4:	b	7c94 <inflate@@Base+0x7a4>

00000000000088c8 <inflateEnd@@Base>:
    88c8:	stp	x29, x30, [sp, #-32]!
    88cc:	mov	x29, sp
    88d0:	stp	x19, x20, [sp, #16]
    88d4:	mov	x19, x0
    88d8:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    88dc:	cbnz	w0, 8918 <inflateEnd@@Base+0x50>
    88e0:	mov	w20, w0
    88e4:	ldr	x0, [x19, #56]
    88e8:	ldr	x1, [x0, #72]
    88ec:	cbz	x1, 88f8 <inflateEnd@@Base+0x30>
    88f0:	ldp	x2, x0, [x19, #72]
    88f4:	blr	x2
    88f8:	ldp	x2, x0, [x19, #72]
    88fc:	ldr	x1, [x19, #56]
    8900:	blr	x2
    8904:	str	xzr, [x19, #56]
    8908:	mov	w0, w20
    890c:	ldp	x19, x20, [sp, #16]
    8910:	ldp	x29, x30, [sp], #32
    8914:	ret
    8918:	mov	w20, #0xfffffffe            	// #-2
    891c:	b	8908 <inflateEnd@@Base+0x40>

0000000000008920 <inflateGetDictionary@@ZLIB_1.2.7.1>:
    8920:	stp	x29, x30, [sp, #-48]!
    8924:	mov	x3, x0
    8928:	mov	x29, sp
    892c:	stp	x19, x20, [sp, #16]
    8930:	stp	x21, x22, [sp, #32]
    8934:	mov	x21, x1
    8938:	mov	x22, x2
    893c:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    8940:	cbnz	w0, 89a4 <inflateGetDictionary@@ZLIB_1.2.7.1+0x84>
    8944:	ldr	x19, [x3, #56]
    8948:	mov	w20, w0
    894c:	ldr	w2, [x19, #64]
    8950:	cbz	w2, 8984 <inflateGetDictionary@@ZLIB_1.2.7.1+0x64>
    8954:	cbz	x21, 8984 <inflateGetDictionary@@ZLIB_1.2.7.1+0x64>
    8958:	ldr	x1, [x19, #72]
    895c:	ldr	w0, [x19, #68]
    8960:	sub	w2, w2, w0
    8964:	add	x1, x1, w0, uxtw
    8968:	mov	x0, x21
    896c:	bl	23a0 <memcpy@plt>
    8970:	ldp	w0, w2, [x19, #64]
    8974:	ldr	x1, [x19, #72]
    8978:	sub	x0, x0, x2
    897c:	add	x0, x21, x0
    8980:	bl	23a0 <memcpy@plt>
    8984:	cbz	x22, 8990 <inflateGetDictionary@@ZLIB_1.2.7.1+0x70>
    8988:	ldr	w0, [x19, #64]
    898c:	str	w0, [x22]
    8990:	mov	w0, w20
    8994:	ldp	x19, x20, [sp, #16]
    8998:	ldp	x21, x22, [sp, #32]
    899c:	ldp	x29, x30, [sp], #48
    89a0:	ret
    89a4:	mov	w20, #0xfffffffe            	// #-2
    89a8:	b	8990 <inflateGetDictionary@@ZLIB_1.2.7.1+0x70>

00000000000089ac <inflateSetDictionary@@Base>:
    89ac:	stp	x29, x30, [sp, #-48]!
    89b0:	mov	x29, sp
    89b4:	stp	x19, x20, [sp, #16]
    89b8:	mov	x20, x1
    89bc:	stp	x21, x22, [sp, #32]
    89c0:	mov	x22, x0
    89c4:	mov	w21, w2
    89c8:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    89cc:	cbnz	w0, 89ec <inflateSetDictionary@@Base+0x40>
    89d0:	ldr	x19, [x22, #56]
    89d4:	mov	w0, #0x3f3e                	// #16190
    89d8:	ldr	w2, [x19, #16]
    89dc:	ldr	w1, [x19, #8]
    89e0:	cmp	w1, w0
    89e4:	cbz	w2, 89f4 <inflateSetDictionary@@Base+0x48>
    89e8:	b.eq	8a28 <inflateSetDictionary@@Base+0x7c>  // b.none
    89ec:	mov	w0, #0xfffffffe            	// #-2
    89f0:	b	8a18 <inflateSetDictionary@@Base+0x6c>
    89f4:	b.eq	8a28 <inflateSetDictionary@@Base+0x7c>  // b.none
    89f8:	mov	w2, w21
    89fc:	add	x1, x20, w21, uxtw
    8a00:	mov	x0, x22
    8a04:	bl	70c8 <inflateBackEnd@@ZLIB_1.2.0+0x544>
    8a08:	cbz	w0, 8a58 <inflateSetDictionary@@Base+0xac>
    8a0c:	mov	w0, #0x3f52                	// #16210
    8a10:	str	w0, [x19, #8]
    8a14:	mov	w0, #0xfffffffc            	// #-4
    8a18:	ldp	x19, x20, [sp, #16]
    8a1c:	ldp	x21, x22, [sp, #32]
    8a20:	ldp	x29, x30, [sp], #48
    8a24:	ret
    8a28:	mov	w2, #0x0                   	// #0
    8a2c:	mov	x1, #0x0                   	// #0
    8a30:	mov	x0, #0x0                   	// #0
    8a34:	bl	2560 <adler32@plt>
    8a38:	mov	x1, x20
    8a3c:	mov	w2, w21
    8a40:	bl	2560 <adler32@plt>
    8a44:	ldr	x1, [x19, #32]
    8a48:	cmp	x1, x0
    8a4c:	b.eq	89f8 <inflateSetDictionary@@Base+0x4c>  // b.none
    8a50:	mov	w0, #0xfffffffd            	// #-3
    8a54:	b	8a18 <inflateSetDictionary@@Base+0x6c>
    8a58:	mov	w1, #0x1                   	// #1
    8a5c:	str	w1, [x19, #20]
    8a60:	b	8a18 <inflateSetDictionary@@Base+0x6c>

0000000000008a64 <inflateGetHeader@@ZLIB_1.2.2>:
    8a64:	mov	x4, x0
    8a68:	mov	x3, x1
    8a6c:	stp	x29, x30, [sp, #-16]!
    8a70:	mov	x29, sp
    8a74:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    8a78:	cbnz	w0, 8a98 <inflateGetHeader@@ZLIB_1.2.2+0x34>
    8a7c:	ldr	x1, [x4, #56]
    8a80:	ldr	w2, [x1, #16]
    8a84:	tbz	w2, #1, 8a98 <inflateGetHeader@@ZLIB_1.2.2+0x34>
    8a88:	str	x3, [x1, #48]
    8a8c:	str	wzr, [x3, #72]
    8a90:	ldp	x29, x30, [sp], #16
    8a94:	ret
    8a98:	mov	w0, #0xfffffffe            	// #-2
    8a9c:	b	8a90 <inflateGetHeader@@ZLIB_1.2.2+0x2c>

0000000000008aa0 <inflateSync@@Base>:
    8aa0:	stp	x29, x30, [sp, #-80]!
    8aa4:	mov	x29, sp
    8aa8:	stp	x19, x20, [sp, #16]
    8aac:	mov	x19, x0
    8ab0:	stp	x21, x22, [sp, #32]
    8ab4:	str	x23, [sp, #48]
    8ab8:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    8abc:	cbnz	w0, 8bc0 <inflateSync@@Base+0x120>
    8ac0:	mov	w22, w0
    8ac4:	ldr	w0, [x19, #8]
    8ac8:	ldr	x20, [x19, #56]
    8acc:	cbnz	w0, 8adc <inflateSync@@Base+0x3c>
    8ad0:	ldr	w0, [x20, #88]
    8ad4:	cmp	w0, #0x7
    8ad8:	b.ls	8bc8 <inflateSync@@Base+0x128>  // b.plast
    8adc:	ldr	w1, [x20, #8]
    8ae0:	mov	w0, #0x3f53                	// #16211
    8ae4:	cmp	w1, w0
    8ae8:	b.eq	8b2c <inflateSync@@Base+0x8c>  // b.none
    8aec:	str	w0, [x20, #8]
    8af0:	ldr	w0, [x20, #88]
    8af4:	ldr	x1, [x20, #80]
    8af8:	and	w2, w0, #0x7
    8afc:	and	w0, w0, #0xfffffff8
    8b00:	str	w0, [x20, #88]
    8b04:	lsl	x1, x1, x2
    8b08:	str	x1, [x20, #80]
    8b0c:	add	x1, sp, #0x48
    8b10:	mov	x2, #0x0                   	// #0
    8b14:	ldr	w0, [x20, #88]
    8b18:	cmp	w0, #0x7
    8b1c:	b.hi	8ba0 <inflateSync@@Base+0x100>  // b.pmore
    8b20:	mov	x0, x20
    8b24:	str	wzr, [x0, #140]!
    8b28:	bl	7070 <inflateBackEnd@@ZLIB_1.2.0+0x4ec>
    8b2c:	ldr	w2, [x19, #8]
    8b30:	add	x0, x20, #0x8c
    8b34:	ldr	x1, [x19]
    8b38:	bl	7070 <inflateBackEnd@@ZLIB_1.2.0+0x4ec>
    8b3c:	ldr	w1, [x19, #8]
    8b40:	ldr	x21, [x19, #16]
    8b44:	sub	w1, w1, w0
    8b48:	str	w1, [x19, #8]
    8b4c:	ldr	x1, [x19]
    8b50:	add	x21, x21, w0, uxtw
    8b54:	str	x21, [x19, #16]
    8b58:	add	x1, x1, w0, uxtw
    8b5c:	ldr	w0, [x20, #140]
    8b60:	str	x1, [x19]
    8b64:	cmp	w0, #0x4
    8b68:	b.ne	8bd0 <inflateSync@@Base+0x130>  // b.any
    8b6c:	ldr	x23, [x19, #40]
    8b70:	mov	x0, x19
    8b74:	bl	2610 <inflateReset@plt>
    8b78:	str	x21, [x19, #16]
    8b7c:	str	x23, [x19, #40]
    8b80:	mov	w0, #0x3f3f                	// #16191
    8b84:	str	w0, [x20, #8]
    8b88:	mov	w0, w22
    8b8c:	ldp	x19, x20, [sp, #16]
    8b90:	ldp	x21, x22, [sp, #32]
    8b94:	ldr	x23, [sp, #48]
    8b98:	ldp	x29, x30, [sp], #80
    8b9c:	ret
    8ba0:	ldr	x3, [x20, #80]
    8ba4:	sub	w0, w0, #0x8
    8ba8:	strb	w3, [x1, x2]
    8bac:	add	x2, x2, #0x1
    8bb0:	str	w0, [x20, #88]
    8bb4:	lsr	x3, x3, #8
    8bb8:	str	x3, [x20, #80]
    8bbc:	b	8b14 <inflateSync@@Base+0x74>
    8bc0:	mov	w22, #0xfffffffe            	// #-2
    8bc4:	b	8b88 <inflateSync@@Base+0xe8>
    8bc8:	mov	w22, #0xfffffffb            	// #-5
    8bcc:	b	8b88 <inflateSync@@Base+0xe8>
    8bd0:	mov	w22, #0xfffffffd            	// #-3
    8bd4:	b	8b88 <inflateSync@@Base+0xe8>

0000000000008bd8 <inflateSyncPoint@@Base>:
    8bd8:	mov	x3, x0
    8bdc:	stp	x29, x30, [sp, #-16]!
    8be0:	mov	x29, sp
    8be4:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    8be8:	cbnz	w0, 8c14 <inflateSyncPoint@@Base+0x3c>
    8bec:	ldr	x1, [x3, #56]
    8bf0:	mov	w2, #0x3f41                	// #16193
    8bf4:	ldr	w3, [x1, #8]
    8bf8:	cmp	w3, w2
    8bfc:	b.ne	8c0c <inflateSyncPoint@@Base+0x34>  // b.any
    8c00:	ldr	w0, [x1, #88]
    8c04:	cmp	w0, #0x0
    8c08:	cset	w0, eq  // eq = none
    8c0c:	ldp	x29, x30, [sp], #16
    8c10:	ret
    8c14:	mov	w0, #0xfffffffe            	// #-2
    8c18:	b	8c0c <inflateSyncPoint@@Base+0x34>

0000000000008c1c <inflateCopy@@ZLIB_1.2.0>:
    8c1c:	stp	x29, x30, [sp, #-64]!
    8c20:	mov	x29, sp
    8c24:	stp	x19, x20, [sp, #16]
    8c28:	mov	x20, x1
    8c2c:	stp	x21, x22, [sp, #32]
    8c30:	stp	x23, x24, [sp, #48]
    8c34:	mov	x24, x0
    8c38:	mov	x0, x1
    8c3c:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    8c40:	cbnz	w0, 8d54 <inflateCopy@@ZLIB_1.2.0+0x138>
    8c44:	cbz	x24, 8d54 <inflateCopy@@ZLIB_1.2.0+0x138>
    8c48:	ldp	x21, x3, [x20, #56]
    8c4c:	mov	w22, w0
    8c50:	ldr	x0, [x20, #80]
    8c54:	mov	w2, #0x1bf8                	// #7160
    8c58:	mov	w1, #0x1                   	// #1
    8c5c:	blr	x3
    8c60:	mov	x19, x0
    8c64:	cbz	x0, 8c9c <inflateCopy@@ZLIB_1.2.0+0x80>
    8c68:	ldr	x23, [x21, #72]
    8c6c:	cbz	x23, 8ca4 <inflateCopy@@ZLIB_1.2.0+0x88>
    8c70:	ldr	x3, [x20, #64]
    8c74:	mov	w2, #0x1                   	// #1
    8c78:	ldr	x0, [x20, #80]
    8c7c:	ldr	w1, [x21, #56]
    8c80:	lsl	w1, w2, w1
    8c84:	blr	x3
    8c88:	mov	x23, x0
    8c8c:	cbnz	x0, 8ca4 <inflateCopy@@ZLIB_1.2.0+0x88>
    8c90:	ldp	x2, x0, [x20, #72]
    8c94:	mov	x1, x19
    8c98:	blr	x2
    8c9c:	mov	w22, #0xfffffffc            	// #-4
    8ca0:	b	8d3c <inflateCopy@@ZLIB_1.2.0+0x120>
    8ca4:	mov	x1, x20
    8ca8:	mov	x2, #0x70                  	// #112
    8cac:	mov	x0, x24
    8cb0:	bl	23a0 <memcpy@plt>
    8cb4:	mov	x1, x21
    8cb8:	mov	x2, #0x1bf8                	// #7160
    8cbc:	mov	x0, x19
    8cc0:	bl	23a0 <memcpy@plt>
    8cc4:	ldr	x1, [x21, #104]
    8cc8:	str	x24, [x19]
    8ccc:	add	x2, x21, #0x558
    8cd0:	add	x0, x19, #0x558
    8cd4:	cmp	x1, x2
    8cd8:	b.cc	8d08 <inflateCopy@@ZLIB_1.2.0+0xec>  // b.lo, b.ul, b.last
    8cdc:	mov	x3, #0x1be4                	// #7140
    8ce0:	add	x3, x21, x3
    8ce4:	cmp	x1, x3
    8ce8:	b.hi	8d08 <inflateCopy@@ZLIB_1.2.0+0xec>  // b.pmore
    8cec:	sub	x1, x1, x2
    8cf0:	add	x1, x0, x1
    8cf4:	str	x1, [x19, #104]
    8cf8:	ldr	x1, [x21, #112]
    8cfc:	sub	x1, x1, x2
    8d00:	add	x1, x0, x1
    8d04:	str	x1, [x19, #112]
    8d08:	ldr	x1, [x21, #144]
    8d0c:	sub	x2, x1, x2
    8d10:	add	x0, x0, x2
    8d14:	str	x0, [x19, #144]
    8d18:	cbz	x23, 8d34 <inflateCopy@@ZLIB_1.2.0+0x118>
    8d1c:	ldr	x1, [x21, #72]
    8d20:	mov	w2, #0x1                   	// #1
    8d24:	ldr	w0, [x21, #56]
    8d28:	lsl	w2, w2, w0
    8d2c:	mov	x0, x23
    8d30:	bl	23a0 <memcpy@plt>
    8d34:	str	x23, [x19, #72]
    8d38:	str	x19, [x24, #56]
    8d3c:	mov	w0, w22
    8d40:	ldp	x19, x20, [sp, #16]
    8d44:	ldp	x21, x22, [sp, #32]
    8d48:	ldp	x23, x24, [sp, #48]
    8d4c:	ldp	x29, x30, [sp], #64
    8d50:	ret
    8d54:	mov	w22, #0xfffffffe            	// #-2
    8d58:	b	8d3c <inflateCopy@@ZLIB_1.2.0+0x120>

0000000000008d5c <inflateUndermine@@ZLIB_1.2.3.3>:
    8d5c:	mov	x3, x0
    8d60:	stp	x29, x30, [sp, #-16]!
    8d64:	mov	x29, sp
    8d68:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    8d6c:	cbnz	w0, 8d88 <inflateUndermine@@ZLIB_1.2.3.3+0x2c>
    8d70:	ldr	x0, [x3, #56]
    8d74:	mov	w1, #0x1                   	// #1
    8d78:	str	w1, [x0, #7144]
    8d7c:	mov	w0, #0xfffffffd            	// #-3
    8d80:	ldp	x29, x30, [sp], #16
    8d84:	ret
    8d88:	mov	w0, #0xfffffffe            	// #-2
    8d8c:	b	8d80 <inflateUndermine@@ZLIB_1.2.3.3+0x24>

0000000000008d90 <inflateValidate@@ZLIB_1.2.9>:
    8d90:	mov	x4, x0
    8d94:	mov	w3, w1
    8d98:	stp	x29, x30, [sp, #-16]!
    8d9c:	mov	x29, sp
    8da0:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    8da4:	cbnz	w0, 8dcc <inflateValidate@@ZLIB_1.2.9+0x3c>
    8da8:	ldr	x1, [x4, #56]
    8dac:	cmp	w3, #0x0
    8db0:	ldr	w2, [x1, #16]
    8db4:	and	w4, w2, #0xfffffffb
    8db8:	orr	w2, w2, #0x4
    8dbc:	csel	w2, w2, w4, ne  // ne = any
    8dc0:	str	w2, [x1, #16]
    8dc4:	ldp	x29, x30, [sp], #16
    8dc8:	ret
    8dcc:	mov	w0, #0xfffffffe            	// #-2
    8dd0:	b	8dc4 <inflateValidate@@ZLIB_1.2.9+0x34>

0000000000008dd4 <inflateMark@@ZLIB_1.2.3.4>:
    8dd4:	mov	x3, x0
    8dd8:	stp	x29, x30, [sp, #-16]!
    8ddc:	mov	x29, sp
    8de0:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    8de4:	cbnz	w0, 8e38 <inflateMark@@ZLIB_1.2.3.4+0x64>
    8de8:	ldr	x2, [x3, #56]
    8dec:	mov	w3, #0x3f43                	// #16195
    8df0:	ldrsw	x0, [x2, #7148]
    8df4:	ldr	w1, [x2, #8]
    8df8:	lsl	x0, x0, #16
    8dfc:	cmp	w1, w3
    8e00:	b.ne	8e14 <inflateMark@@ZLIB_1.2.3.4+0x40>  // b.any
    8e04:	ldr	w1, [x2, #92]
    8e08:	add	x0, x0, x1
    8e0c:	ldp	x29, x30, [sp], #16
    8e10:	ret
    8e14:	mov	w3, #0x3f4c                	// #16204
    8e18:	cmp	w1, w3
    8e1c:	b.ne	8e30 <inflateMark@@ZLIB_1.2.3.4+0x5c>  // b.any
    8e20:	ldr	w1, [x2, #7152]
    8e24:	ldr	w2, [x2, #92]
    8e28:	sub	w1, w1, w2
    8e2c:	b	8e08 <inflateMark@@ZLIB_1.2.3.4+0x34>
    8e30:	mov	x1, #0x0                   	// #0
    8e34:	b	8e08 <inflateMark@@ZLIB_1.2.3.4+0x34>
    8e38:	mov	x0, #0xffffffffffff0000    	// #-65536
    8e3c:	b	8e0c <inflateMark@@ZLIB_1.2.3.4+0x38>

0000000000008e40 <inflateCodesUsed@@ZLIB_1.2.9>:
    8e40:	mov	x3, x0
    8e44:	stp	x29, x30, [sp, #-16]!
    8e48:	mov	x29, sp
    8e4c:	bl	71e0 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    8e50:	cbnz	w0, 8e70 <inflateCodesUsed@@ZLIB_1.2.9+0x30>
    8e54:	ldr	x1, [x3, #56]
    8e58:	add	x2, x1, #0x558
    8e5c:	ldr	x0, [x1, #144]
    8e60:	sub	x0, x0, x2
    8e64:	asr	x0, x0, #2
    8e68:	ldp	x29, x30, [sp], #16
    8e6c:	ret
    8e70:	mov	x0, #0xffffffffffffffff    	// #-1
    8e74:	b	8e68 <inflateCodesUsed@@ZLIB_1.2.9+0x28>
    8e78:	stp	x29, x30, [sp, #-176]!
    8e7c:	mov	w6, w0
    8e80:	mov	x0, #0x0                   	// #0
    8e84:	mov	x29, sp
    8e88:	add	x8, sp, #0x70
    8e8c:	stp	x19, x20, [sp, #16]
    8e90:	stp	x21, x22, [sp, #32]
    8e94:	stp	x23, x24, [sp, #48]
    8e98:	stp	x25, x26, [sp, #64]
    8e9c:	stp	x27, x28, [sp, #80]
    8ea0:	strh	wzr, [x8, x0, lsl #1]
    8ea4:	add	x0, x0, #0x1
    8ea8:	cmp	x0, #0x10
    8eac:	b.ne	8ea0 <inflateCodesUsed@@ZLIB_1.2.9+0x60>  // b.any
    8eb0:	mov	x0, #0x0                   	// #0
    8eb4:	cmp	w2, w0
    8eb8:	b.hi	8f00 <inflateCodesUsed@@ZLIB_1.2.9+0xc0>  // b.pmore
    8ebc:	mov	x0, x8
    8ec0:	mov	w10, #0xf                   	// #15
    8ec4:	ldrh	w7, [x0, #30]
    8ec8:	cbnz	w7, 8f1c <inflateCodesUsed@@ZLIB_1.2.9+0xdc>
    8ecc:	sub	x0, x0, #0x2
    8ed0:	subs	w10, w10, #0x1
    8ed4:	b.ne	8ec4 <inflateCodesUsed@@ZLIB_1.2.9+0x84>  // b.any
    8ed8:	ldr	x1, [x3]
    8edc:	mov	w2, #0x140                 	// #320
    8ee0:	mov	x0, x1
    8ee4:	str	w2, [x0], #8
    8ee8:	str	x0, [x3]
    8eec:	mov	w0, #0x1                   	// #1
    8ef0:	str	w2, [x1, #4]
    8ef4:	str	w0, [x4]
    8ef8:	mov	w0, #0x0                   	// #0
    8efc:	b	9000 <inflateCodesUsed@@ZLIB_1.2.9+0x1c0>
    8f00:	ldrh	w7, [x1, x0, lsl #1]
    8f04:	add	x0, x0, #0x1
    8f08:	lsl	x7, x7, #1
    8f0c:	ldrh	w9, [x8, x7]
    8f10:	add	w9, w9, #0x1
    8f14:	strh	w9, [x8, x7]
    8f18:	b	8eb4 <inflateCodesUsed@@ZLIB_1.2.9+0x74>
    8f1c:	mov	x0, #0x1                   	// #1
    8f20:	mov	w7, w0
    8f24:	cmp	w0, w10
    8f28:	b.cs	8f3c <inflateCodesUsed@@ZLIB_1.2.9+0xfc>  // b.hs, b.nlast
    8f2c:	add	x0, x0, #0x1
    8f30:	add	x9, x8, x0, lsl #1
    8f34:	ldurh	w9, [x9, #-2]
    8f38:	cbz	w9, 8f20 <inflateCodesUsed@@ZLIB_1.2.9+0xe0>
    8f3c:	mov	x9, #0x1                   	// #1
    8f40:	mov	w0, w9
    8f44:	ldrh	w11, [x8, x9, lsl #1]
    8f48:	lsl	w0, w0, #1
    8f4c:	subs	w0, w0, w11
    8f50:	b.mi	9234 <inflateCodesUsed@@ZLIB_1.2.9+0x3f4>  // b.first
    8f54:	add	x9, x9, #0x1
    8f58:	cmp	x9, #0x10
    8f5c:	b.ne	8f44 <inflateCodesUsed@@ZLIB_1.2.9+0x104>  // b.any
    8f60:	cbz	w0, 8f70 <inflateCodesUsed@@ZLIB_1.2.9+0x130>
    8f64:	cmp	w6, #0x0
    8f68:	ccmp	w10, #0x1, #0x0, ne  // ne = any
    8f6c:	b.ne	9234 <inflateCodesUsed@@ZLIB_1.2.9+0x3f4>  // b.any
    8f70:	add	x9, sp, #0x90
    8f74:	ldr	w0, [x4]
    8f78:	mov	x13, x9
    8f7c:	mov	x11, #0x2                   	// #2
    8f80:	strh	wzr, [sp, #146]
    8f84:	ldrh	w12, [x9, #2]
    8f88:	add	x9, x9, #0x2
    8f8c:	ldrh	w14, [x8, x11]
    8f90:	add	x11, x11, #0x2
    8f94:	cmp	x11, #0x1e
    8f98:	add	w12, w12, w14
    8f9c:	strh	w12, [x9, #2]
    8fa0:	b.ne	8f84 <inflateCodesUsed@@ZLIB_1.2.9+0x144>  // b.any
    8fa4:	mov	x9, #0x0                   	// #0
    8fa8:	cmp	w2, w9
    8fac:	b.hi	901c <inflateCodesUsed@@ZLIB_1.2.9+0x1dc>  // b.pmore
    8fb0:	cbz	w6, 9040 <inflateCodesUsed@@ZLIB_1.2.9+0x200>
    8fb4:	cmp	w6, #0x1
    8fb8:	adrp	x30, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    8fbc:	b.eq	9050 <inflateCodesUsed@@ZLIB_1.2.9+0x210>  // b.none
    8fc0:	add	x9, x30, #0xd4
    8fc4:	mov	w16, #0x0                   	// #0
    8fc8:	add	x30, x9, #0x7c
    8fcc:	add	x9, x9, #0xbc
    8fd0:	cmp	w0, w10
    8fd4:	mov	w12, #0x1                   	// #1
    8fd8:	csel	w2, w0, w10, ls  // ls = plast
    8fdc:	cmp	w2, w7
    8fe0:	csel	w2, w2, w7, cs  // cs = hs, nlast
    8fe4:	cmp	w6, w12
    8fe8:	cset	w25, eq  // eq = none
    8fec:	lsl	w0, w12, w2
    8ff0:	cmp	w0, #0x354
    8ff4:	ccmp	w25, #0x0, #0x4, hi  // hi = pmore
    8ff8:	b.eq	9060 <inflateCodesUsed@@ZLIB_1.2.9+0x220>  // b.none
    8ffc:	mov	w0, #0x1                   	// #1
    9000:	ldp	x19, x20, [sp, #16]
    9004:	ldp	x21, x22, [sp, #32]
    9008:	ldp	x23, x24, [sp, #48]
    900c:	ldp	x25, x26, [sp, #64]
    9010:	ldp	x27, x28, [sp, #80]
    9014:	ldp	x29, x30, [sp], #176
    9018:	ret
    901c:	ldrh	w12, [x1, x9, lsl #1]
    9020:	cbz	w12, 9038 <inflateCodesUsed@@ZLIB_1.2.9+0x1f8>
    9024:	ldrh	w11, [x13, w12, sxtw #1]
    9028:	add	w14, w11, #0x1
    902c:	strh	w14, [x13, w12, sxtw #1]
    9030:	ubfiz	x11, x11, #1, #16
    9034:	strh	w9, [x5, x11]
    9038:	add	x9, x9, #0x1
    903c:	b	8fa8 <inflateCodesUsed@@ZLIB_1.2.9+0x168>
    9040:	mov	x30, x5
    9044:	mov	x9, x5
    9048:	mov	w16, #0x14                  	// #20
    904c:	b	8fd0 <inflateCodesUsed@@ZLIB_1.2.9+0x190>
    9050:	add	x30, x30, #0xd4
    9054:	mov	w16, #0x101                 	// #257
    9058:	add	x9, x30, #0x3e
    905c:	b	8fd0 <inflateCodesUsed@@ZLIB_1.2.9+0x190>
    9060:	cmp	w6, #0x2
    9064:	cset	w26, eq  // eq = none
    9068:	cmp	w0, #0x250
    906c:	ccmp	w26, #0x0, #0x4, hi  // hi = pmore
    9070:	b.ne	8ffc <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>  // b.any
    9074:	ldr	x15, [x3]
    9078:	mov	w11, w2
    907c:	mov	w24, #0xffffffff            	// #-1
    9080:	mov	w19, #0x0                   	// #0
    9084:	mov	x13, x15
    9088:	add	w6, w0, w24
    908c:	mov	w14, #0x0                   	// #0
    9090:	mov	w18, #0x0                   	// #0
    9094:	str	w6, [sp, #108]
    9098:	ldrh	w6, [x5, w18, uxtw #1]
    909c:	sub	w21, w7, w14
    90a0:	and	w23, w21, #0xff
    90a4:	add	w17, w6, #0x1
    90a8:	cmp	w17, w16
    90ac:	b.cc	91e0 <inflateCodesUsed@@ZLIB_1.2.9+0x3a0>  // b.lo, b.ul, b.last
    90b0:	cmp	w6, w16
    90b4:	b.cc	91e8 <inflateCodesUsed@@ZLIB_1.2.9+0x3a8>  // b.lo, b.ul, b.last
    90b8:	sub	w6, w6, w16
    90bc:	lsl	x6, x6, #1
    90c0:	ldrb	w22, [x30, x6]
    90c4:	ldrh	w6, [x9, x6]
    90c8:	lsl	w27, w12, w11
    90cc:	mov	w20, w27
    90d0:	lsr	w17, w19, w14
    90d4:	str	w17, [sp, #104]
    90d8:	lsl	w21, w12, w21
    90dc:	ldr	w17, [sp, #104]
    90e0:	sub	w20, w20, w21
    90e4:	add	w17, w17, w20
    90e8:	lsl	x28, x17, #2
    90ec:	add	x17, x13, x17, lsl #2
    90f0:	strb	w22, [x13, x28]
    90f4:	strb	w23, [x17, #1]
    90f8:	strh	w6, [x17, #2]
    90fc:	cbnz	w20, 90dc <inflateCodesUsed@@ZLIB_1.2.9+0x29c>
    9100:	sub	w6, w7, #0x1
    9104:	lsl	w6, w12, w6
    9108:	tst	w19, w6
    910c:	b.ne	91f4 <inflateCodesUsed@@ZLIB_1.2.9+0x3b4>  // b.any
    9110:	cbz	w6, 9120 <inflateCodesUsed@@ZLIB_1.2.9+0x2e0>
    9114:	sub	w17, w6, #0x1
    9118:	and	w19, w17, w19
    911c:	add	w6, w6, w19
    9120:	ubfiz	x19, x7, #1, #32
    9124:	add	w18, w18, #0x1
    9128:	ldrh	w17, [x8, x19]
    912c:	sub	w17, w17, #0x1
    9130:	and	w17, w17, #0xffff
    9134:	strh	w17, [x8, x19]
    9138:	cbnz	w17, 914c <inflateCodesUsed@@ZLIB_1.2.9+0x30c>
    913c:	cmp	w7, w10
    9140:	b.eq	9208 <inflateCodesUsed@@ZLIB_1.2.9+0x3c8>  // b.none
    9144:	ldrh	w7, [x5, w18, uxtw #1]
    9148:	ldrh	w7, [x1, x7, lsl #1]
    914c:	cmp	w7, w2
    9150:	b.ls	91d8 <inflateCodesUsed@@ZLIB_1.2.9+0x398>  // b.plast
    9154:	ldr	w17, [sp, #108]
    9158:	and	w19, w17, w6
    915c:	cmp	w19, w24
    9160:	b.eq	91d8 <inflateCodesUsed@@ZLIB_1.2.9+0x398>  // b.none
    9164:	cmp	w14, #0x0
    9168:	add	x13, x13, w27, uxtw #2
    916c:	csel	w14, w14, w2, ne  // ne = any
    9170:	add	x20, x8, w7, uxtw #1
    9174:	sub	w11, w7, w14
    9178:	lsl	w17, w12, w11
    917c:	add	w21, w11, w14
    9180:	cmp	w21, w10
    9184:	b.cs	9198 <inflateCodesUsed@@ZLIB_1.2.9+0x358>  // b.hs, b.nlast
    9188:	ldrh	w21, [x20], #2
    918c:	sub	w17, w17, w21
    9190:	cmp	w17, #0x0
    9194:	b.gt	91fc <inflateCodesUsed@@ZLIB_1.2.9+0x3bc>
    9198:	lsl	w17, w12, w11
    919c:	add	w0, w0, w17
    91a0:	cmp	w0, #0x354
    91a4:	ccmp	w25, #0x0, #0x4, hi  // hi = pmore
    91a8:	b.ne	8ffc <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>  // b.any
    91ac:	cmp	w0, #0x250
    91b0:	ccmp	w26, #0x0, #0x4, hi  // hi = pmore
    91b4:	b.ne	8ffc <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>  // b.any
    91b8:	ubfiz	x17, x19, #2, #32
    91bc:	mov	w24, w19
    91c0:	add	x20, x15, x17
    91c4:	strb	w11, [x15, x17]
    91c8:	sub	x17, x13, x15
    91cc:	strb	w2, [x20, #1]
    91d0:	asr	x17, x17, #2
    91d4:	strh	w17, [x20, #2]
    91d8:	mov	w19, w6
    91dc:	b	9098 <inflateCodesUsed@@ZLIB_1.2.9+0x258>
    91e0:	mov	w22, #0x0                   	// #0
    91e4:	b	90c8 <inflateCodesUsed@@ZLIB_1.2.9+0x288>
    91e8:	mov	w6, #0x0                   	// #0
    91ec:	mov	w22, #0x60                  	// #96
    91f0:	b	90c8 <inflateCodesUsed@@ZLIB_1.2.9+0x288>
    91f4:	lsr	w6, w6, #1
    91f8:	b	9108 <inflateCodesUsed@@ZLIB_1.2.9+0x2c8>
    91fc:	add	w11, w11, #0x1
    9200:	lsl	w17, w17, #1
    9204:	b	917c <inflateCodesUsed@@ZLIB_1.2.9+0x33c>
    9208:	cbz	w6, 9224 <inflateCodesUsed@@ZLIB_1.2.9+0x3e4>
    920c:	ubfiz	x6, x6, #2, #32
    9210:	mov	w5, #0x40                  	// #64
    9214:	add	x1, x13, x6
    9218:	strb	w5, [x13, x6]
    921c:	strb	w23, [x1, #1]
    9220:	strh	wzr, [x1, #2]
    9224:	add	x0, x15, w0, uxtw #2
    9228:	str	x0, [x3]
    922c:	str	w2, [x4]
    9230:	b	8ef8 <inflateCodesUsed@@ZLIB_1.2.9+0xb8>
    9234:	mov	w0, #0xffffffff            	// #-1
    9238:	b	9000 <inflateCodesUsed@@ZLIB_1.2.9+0x1c0>
    923c:	add	x1, x0, #0xd4
    9240:	add	x2, x0, #0x54c
    9244:	strh	wzr, [x1], #4
    9248:	cmp	x1, x2
    924c:	b.ne	9244 <inflateCodesUsed@@ZLIB_1.2.9+0x404>  // b.any
    9250:	add	x1, x0, #0x9c8
    9254:	add	x2, x0, #0xa40
    9258:	strh	wzr, [x1], #4
    925c:	cmp	x1, x2
    9260:	b.ne	9258 <inflateCodesUsed@@ZLIB_1.2.9+0x418>  // b.any
    9264:	add	x1, x0, #0xabc
    9268:	add	x2, x0, #0xb08
    926c:	strh	wzr, [x1], #4
    9270:	cmp	x1, x2
    9274:	b.ne	926c <inflateCodesUsed@@ZLIB_1.2.9+0x42c>  // b.any
    9278:	mov	w1, #0x1                   	// #1
    927c:	strh	w1, [x0, #1236]
    9280:	str	wzr, [x0, #5900]
    9284:	str	xzr, [x0, #5912]
    9288:	str	xzr, [x0, #5920]
    928c:	str	wzr, [x0, #5928]
    9290:	ret
    9294:	add	x3, x0, w2, sxtw #2
    9298:	ldr	w9, [x0, #5300]
    929c:	lsl	w6, w2, #1
    92a0:	ldr	w7, [x3, #3008]
    92a4:	add	x8, x0, w7, sxtw
    92a8:	add	x10, x1, w7, sxtw #2
    92ac:	add	x8, x8, #0x1, lsl #12
    92b0:	cmp	w9, w6
    92b4:	sxtw	x2, w2
    92b8:	b.ge	92c8 <inflateCodesUsed@@ZLIB_1.2.9+0x488>  // b.tcont
    92bc:	add	x2, x2, #0x2f0
    92c0:	str	w7, [x0, x2, lsl #2]
    92c4:	ret
    92c8:	b.le	9318 <inflateCodesUsed@@ZLIB_1.2.9+0x4d8>
    92cc:	add	x4, x0, w6, sxtw #2
    92d0:	ldrsw	x3, [x4, #3008]
    92d4:	ldrsw	x4, [x4, #3012]
    92d8:	lsl	x5, x3, #2
    92dc:	lsl	x12, x4, #2
    92e0:	ldrh	w11, [x1, x5]
    92e4:	add	w5, w6, #0x1
    92e8:	ldrh	w12, [x1, x12]
    92ec:	cmp	w12, w11
    92f0:	b.cc	9368 <inflateCodesUsed@@ZLIB_1.2.9+0x528>  // b.lo, b.ul, b.last
    92f4:	b.ne	9318 <inflateCodesUsed@@ZLIB_1.2.9+0x4d8>  // b.any
    92f8:	add	x4, x0, x4
    92fc:	add	x3, x0, x3
    9300:	add	x4, x4, #0x1, lsl #12
    9304:	add	x3, x3, #0x1, lsl #12
    9308:	ldrb	w4, [x4, #1212]
    930c:	ldrb	w3, [x3, #1212]
    9310:	cmp	w4, w3
    9314:	csel	w6, w6, w5, hi  // hi = pmore
    9318:	add	x3, x0, w6, sxtw #2
    931c:	ldrh	w11, [x10]
    9320:	ldr	w4, [x3, #3008]
    9324:	sbfiz	x5, x4, #2, #32
    9328:	sxtw	x3, w4
    932c:	ldrh	w5, [x1, x5]
    9330:	cmp	w11, w5
    9334:	b.cc	92bc <inflateCodesUsed@@ZLIB_1.2.9+0x47c>  // b.lo, b.ul, b.last
    9338:	b.ne	9354 <inflateCodesUsed@@ZLIB_1.2.9+0x514>  // b.any
    933c:	add	x3, x0, x3
    9340:	ldrb	w5, [x8, #1212]
    9344:	add	x3, x3, #0x1, lsl #12
    9348:	ldrb	w3, [x3, #1212]
    934c:	cmp	w5, w3
    9350:	b.ls	92bc <inflateCodesUsed@@ZLIB_1.2.9+0x47c>  // b.plast
    9354:	add	x2, x2, #0x2f0
    9358:	str	w4, [x0, x2, lsl #2]
    935c:	mov	w2, w6
    9360:	lsl	w6, w6, #1
    9364:	b	92b0 <inflateCodesUsed@@ZLIB_1.2.9+0x470>
    9368:	mov	w6, w5
    936c:	b	9318 <inflateCodesUsed@@ZLIB_1.2.9+0x4d8>
    9370:	ldrh	w3, [x1, #2]
    9374:	mov	w4, #0x3                   	// #3
    9378:	mov	w6, #0x4                   	// #4
    937c:	mov	w5, #0x7                   	// #7
    9380:	cmp	w3, #0x0
    9384:	mov	w7, #0xffffffff            	// #-1
    9388:	csel	w6, w6, w4, ne  // ne = any
    938c:	mov	w4, #0x8a                  	// #138
    9390:	csel	w5, w5, w4, ne  // ne = any
    9394:	add	x4, x1, w2, sxtw #2
    9398:	add	x1, x1, #0x6
    939c:	mov	x8, #0x0                   	// #0
    93a0:	mov	w9, #0xffffffff            	// #-1
    93a4:	strh	w7, [x4, #6]
    93a8:	mov	w4, #0x0                   	// #0
    93ac:	cmp	w2, w8
    93b0:	b.ge	93b8 <inflateCodesUsed@@ZLIB_1.2.9+0x578>  // b.tcont
    93b4:	ret
    93b8:	lsl	x7, x8, #2
    93bc:	add	w4, w4, #0x1
    93c0:	cmp	w5, w4
    93c4:	ldrh	w7, [x1, x7]
    93c8:	b.le	9400 <inflateCodesUsed@@ZLIB_1.2.9+0x5c0>
    93cc:	cmp	w3, w7
    93d0:	b.eq	943c <inflateCodesUsed@@ZLIB_1.2.9+0x5fc>  // b.none
    93d4:	cmp	w6, w4
    93d8:	b.le	9400 <inflateCodesUsed@@ZLIB_1.2.9+0x5c0>
    93dc:	add	x5, x0, w3, sxtw #2
    93e0:	ldrh	w6, [x5, #2748]
    93e4:	add	w4, w4, w6
    93e8:	strh	w4, [x5, #2748]
    93ec:	cbz	w7, 942c <inflateCodesUsed@@ZLIB_1.2.9+0x5ec>
    93f0:	mov	w9, w3
    93f4:	mov	w6, #0x4                   	// #4
    93f8:	mov	w5, #0x7                   	// #7
    93fc:	b	9438 <inflateCodesUsed@@ZLIB_1.2.9+0x5f8>
    9400:	cbz	w3, 9448 <inflateCodesUsed@@ZLIB_1.2.9+0x608>
    9404:	cmp	w9, w3
    9408:	b.eq	941c <inflateCodesUsed@@ZLIB_1.2.9+0x5dc>  // b.none
    940c:	add	x5, x0, w3, sxtw #2
    9410:	ldrh	w4, [x5, #2748]
    9414:	add	w4, w4, #0x1
    9418:	strh	w4, [x5, #2748]
    941c:	ldrh	w4, [x0, #2812]
    9420:	add	w4, w4, #0x1
    9424:	strh	w4, [x0, #2812]
    9428:	cbnz	w7, 9470 <inflateCodesUsed@@ZLIB_1.2.9+0x630>
    942c:	mov	w9, w3
    9430:	mov	w6, #0x3                   	// #3
    9434:	mov	w5, #0x8a                  	// #138
    9438:	mov	w4, #0x0                   	// #0
    943c:	add	x8, x8, #0x1
    9440:	mov	w3, w7
    9444:	b	93ac <inflateCodesUsed@@ZLIB_1.2.9+0x56c>
    9448:	cmp	w4, #0xa
    944c:	b.gt	9460 <inflateCodesUsed@@ZLIB_1.2.9+0x620>
    9450:	ldrh	w4, [x0, #2816]
    9454:	add	w4, w4, #0x1
    9458:	strh	w4, [x0, #2816]
    945c:	b	9428 <inflateCodesUsed@@ZLIB_1.2.9+0x5e8>
    9460:	ldrh	w4, [x0, #2820]
    9464:	add	w4, w4, #0x1
    9468:	strh	w4, [x0, #2820]
    946c:	b	9428 <inflateCodesUsed@@ZLIB_1.2.9+0x5e8>
    9470:	cmp	w3, w7
    9474:	b.ne	93f0 <inflateCodesUsed@@ZLIB_1.2.9+0x5b0>  // b.any
    9478:	mov	w9, w7
    947c:	mov	w6, #0x3                   	// #3
    9480:	mov	w5, #0x6                   	// #6
    9484:	b	9438 <inflateCodesUsed@@ZLIB_1.2.9+0x5f8>
    9488:	ldrh	w6, [x1, #2]
    948c:	mov	w3, #0x3                   	// #3
    9490:	mov	w8, #0x4                   	// #4
    9494:	add	x1, x1, #0x6
    9498:	cmp	w6, #0x0
    949c:	mov	w7, #0x7                   	// #7
    94a0:	csel	w8, w8, w3, ne  // ne = any
    94a4:	mov	w3, #0x8a                  	// #138
    94a8:	mov	x10, #0x0                   	// #0
    94ac:	csel	w7, w7, w3, ne  // ne = any
    94b0:	mov	w11, #0xffffffff            	// #-1
    94b4:	mov	w3, #0x0                   	// #0
    94b8:	mov	w5, #0x10                  	// #16
    94bc:	cmp	w2, w10
    94c0:	b.ge	94c8 <inflateCodesUsed@@ZLIB_1.2.9+0x688>  // b.tcont
    94c4:	ret
    94c8:	lsl	x4, x10, #2
    94cc:	ldrh	w9, [x1, x4]
    94d0:	add	w4, w3, #0x1
    94d4:	cmp	w7, w4
    94d8:	b.le	9584 <inflateCodesUsed@@ZLIB_1.2.9+0x744>
    94dc:	cmp	w6, w9
    94e0:	b.eq	9980 <inflateCodesUsed@@ZLIB_1.2.9+0xb40>  // b.none
    94e4:	cmp	w8, w4
    94e8:	b.le	9584 <inflateCodesUsed@@ZLIB_1.2.9+0x744>
    94ec:	add	x12, x0, w6, sxtw #2
    94f0:	ldrh	w11, [x12, #2748]
    94f4:	ldr	w8, [x0, #5940]
    94f8:	ldrh	w13, [x0, #5936]
    94fc:	ldrh	w7, [x12, #2750]
    9500:	lsl	w3, w11, w8
    9504:	orr	w3, w3, w13
    9508:	sub	w14, w5, w7
    950c:	sxth	w13, w3
    9510:	and	w3, w3, #0xffff
    9514:	strh	w3, [x0, #5936]
    9518:	cmp	w8, w14
    951c:	b.le	957c <inflateCodesUsed@@ZLIB_1.2.9+0x73c>
    9520:	ldr	x8, [x0, #16]
    9524:	sub	w7, w7, #0x10
    9528:	ldr	x3, [x0, #40]
    952c:	add	x14, x3, #0x1
    9530:	str	x14, [x0, #40]
    9534:	strb	w13, [x8, x3]
    9538:	ldr	x13, [x0, #16]
    953c:	ldr	x8, [x0, #40]
    9540:	ldrh	w3, [x0, #5936]
    9544:	add	x14, x8, #0x1
    9548:	str	x14, [x0, #40]
    954c:	lsr	w3, w3, #8
    9550:	strb	w3, [x13, x8]
    9554:	ldr	w3, [x0, #5940]
    9558:	sub	w8, w5, w3
    955c:	add	w7, w7, w3
    9560:	asr	w11, w11, w8
    9564:	strh	w11, [x0, #5936]
    9568:	str	w7, [x0, #5940]
    956c:	subs	w4, w4, #0x1
    9570:	b.ne	94f0 <inflateCodesUsed@@ZLIB_1.2.9+0x6b0>  // b.any
    9574:	cbnz	w9, 9974 <inflateCodesUsed@@ZLIB_1.2.9+0xb34>
    9578:	b	9738 <inflateCodesUsed@@ZLIB_1.2.9+0x8f8>
    957c:	add	w7, w8, w7
    9580:	b	9568 <inflateCodesUsed@@ZLIB_1.2.9+0x728>
    9584:	ldrh	w13, [x0, #5936]
    9588:	ldr	w7, [x0, #5940]
    958c:	cbz	w6, 9748 <inflateCodesUsed@@ZLIB_1.2.9+0x908>
    9590:	cmp	w11, w6
    9594:	b.eq	970c <inflateCodesUsed@@ZLIB_1.2.9+0x8cc>  // b.none
    9598:	add	x8, x0, w6, sxtw #2
    959c:	ldrh	w4, [x8, #2750]
    95a0:	ldrh	w8, [x8, #2748]
    95a4:	lsl	w11, w8, w7
    95a8:	orr	w11, w11, w13
    95ac:	sub	w13, w5, w4
    95b0:	sxth	w12, w11
    95b4:	and	w11, w11, #0xffff
    95b8:	strh	w11, [x0, #5936]
    95bc:	cmp	w13, w7
    95c0:	b.ge	9700 <inflateCodesUsed@@ZLIB_1.2.9+0x8c0>  // b.tcont
    95c4:	ldr	x11, [x0, #16]
    95c8:	sub	w4, w4, #0x10
    95cc:	ldr	x7, [x0, #40]
    95d0:	add	x13, x7, #0x1
    95d4:	str	x13, [x0, #40]
    95d8:	strb	w12, [x11, x7]
    95dc:	ldr	x12, [x0, #16]
    95e0:	ldr	x11, [x0, #40]
    95e4:	ldrh	w7, [x0, #5936]
    95e8:	add	x13, x11, #0x1
    95ec:	str	x13, [x0, #40]
    95f0:	lsr	w7, w7, #8
    95f4:	strb	w7, [x12, x11]
    95f8:	ldr	w7, [x0, #5940]
    95fc:	sub	w11, w5, w7
    9600:	add	w4, w4, w7
    9604:	str	w4, [x0, #5940]
    9608:	asr	w8, w8, w11
    960c:	strh	w8, [x0, #5936]
    9610:	ldr	w8, [x0, #5940]
    9614:	ldrh	w11, [x0, #2812]
    9618:	ldrh	w12, [x0, #5936]
    961c:	ldrh	w7, [x0, #2814]
    9620:	lsl	w4, w11, w8
    9624:	orr	w4, w4, w12
    9628:	sub	w13, w5, w7
    962c:	sxth	w12, w4
    9630:	and	w4, w4, #0xffff
    9634:	strh	w4, [x0, #5936]
    9638:	cmp	w8, w13
    963c:	b.le	9714 <inflateCodesUsed@@ZLIB_1.2.9+0x8d4>
    9640:	ldr	x8, [x0, #16]
    9644:	sub	w7, w7, #0x10
    9648:	ldr	x4, [x0, #40]
    964c:	add	x13, x4, #0x1
    9650:	str	x13, [x0, #40]
    9654:	strb	w12, [x8, x4]
    9658:	ldr	x12, [x0, #16]
    965c:	ldr	x8, [x0, #40]
    9660:	ldrh	w4, [x0, #5936]
    9664:	add	x13, x8, #0x1
    9668:	str	x13, [x0, #40]
    966c:	lsr	w4, w4, #8
    9670:	strb	w4, [x12, x8]
    9674:	ldr	w4, [x0, #5940]
    9678:	sub	w8, w5, w4
    967c:	add	w7, w7, w4
    9680:	asr	w11, w11, w8
    9684:	strh	w11, [x0, #5936]
    9688:	str	w7, [x0, #5940]
    968c:	sub	w3, w3, #0x3
    9690:	ldrsh	w4, [x0, #5936]
    9694:	ldr	w7, [x0, #5940]
    9698:	cmp	w7, #0xe
    969c:	b.le	971c <inflateCodesUsed@@ZLIB_1.2.9+0x8dc>
    96a0:	and	w3, w3, #0xffff
    96a4:	ldr	x8, [x0, #16]
    96a8:	lsl	w7, w3, w7
    96ac:	orr	w4, w4, w7
    96b0:	ldr	x7, [x0, #40]
    96b4:	sxth	w4, w4
    96b8:	strh	w4, [x0, #5936]
    96bc:	add	x11, x7, #0x1
    96c0:	str	x11, [x0, #40]
    96c4:	strb	w4, [x8, x7]
    96c8:	ldr	x8, [x0, #16]
    96cc:	ldr	x7, [x0, #40]
    96d0:	ldrh	w4, [x0, #5936]
    96d4:	add	x11, x7, #0x1
    96d8:	str	x11, [x0, #40]
    96dc:	lsr	w4, w4, #8
    96e0:	strb	w4, [x8, x7]
    96e4:	ldr	w4, [x0, #5940]
    96e8:	sub	w7, w5, w4
    96ec:	sub	w4, w4, #0xe
    96f0:	asr	w3, w3, w7
    96f4:	strh	w3, [x0, #5936]
    96f8:	str	w4, [x0, #5940]
    96fc:	b	9734 <inflateCodesUsed@@ZLIB_1.2.9+0x8f4>
    9700:	add	w7, w4, w7
    9704:	str	w7, [x0, #5940]
    9708:	b	9610 <inflateCodesUsed@@ZLIB_1.2.9+0x7d0>
    970c:	mov	w3, w4
    9710:	b	9610 <inflateCodesUsed@@ZLIB_1.2.9+0x7d0>
    9714:	add	w7, w8, w7
    9718:	b	9688 <inflateCodesUsed@@ZLIB_1.2.9+0x848>
    971c:	and	w3, w3, #0xffff
    9720:	lsl	w3, w3, w7
    9724:	add	w7, w7, #0x2
    9728:	orr	w3, w4, w3
    972c:	strh	w3, [x0, #5936]
    9730:	str	w7, [x0, #5940]
    9734:	cbnz	w9, 996c <inflateCodesUsed@@ZLIB_1.2.9+0xb2c>
    9738:	mov	w8, #0x3                   	// #3
    973c:	mov	w7, #0x8a                  	// #138
    9740:	mov	w4, #0x0                   	// #0
    9744:	b	9984 <inflateCodesUsed@@ZLIB_1.2.9+0xb44>
    9748:	cmp	w4, #0xa
    974c:	b.gt	9860 <inflateCodesUsed@@ZLIB_1.2.9+0xa20>
    9750:	ldrh	w8, [x0, #2818]
    9754:	ldrh	w12, [x0, #2816]
    9758:	sub	w11, w5, w8
    975c:	cmp	w11, w7
    9760:	lsl	w11, w12, w7
    9764:	orr	w11, w11, w13
    9768:	b.ge	9830 <inflateCodesUsed@@ZLIB_1.2.9+0x9f0>  // b.tcont
    976c:	ldr	x13, [x0, #16]
    9770:	sxth	w11, w11
    9774:	ldr	x7, [x0, #40]
    9778:	strh	w11, [x0, #5936]
    977c:	sub	w8, w8, #0x10
    9780:	add	x14, x7, #0x1
    9784:	str	x14, [x0, #40]
    9788:	strb	w11, [x13, x7]
    978c:	ldr	x13, [x0, #16]
    9790:	ldr	x11, [x0, #40]
    9794:	ldrh	w7, [x0, #5936]
    9798:	add	x14, x11, #0x1
    979c:	str	x14, [x0, #40]
    97a0:	lsr	w7, w7, #8
    97a4:	strb	w7, [x13, x11]
    97a8:	ldr	w7, [x0, #5940]
    97ac:	sub	w11, w5, w7
    97b0:	add	w8, w8, w7
    97b4:	str	w8, [x0, #5940]
    97b8:	asr	w12, w12, w11
    97bc:	strh	w12, [x0, #5936]
    97c0:	ldr	w8, [x0, #5940]
    97c4:	ldrsh	w7, [x0, #5936]
    97c8:	cmp	w8, #0xd
    97cc:	b.le	9840 <inflateCodesUsed@@ZLIB_1.2.9+0xa00>
    97d0:	sub	w3, w3, #0x2
    97d4:	and	w3, w3, #0xffff
    97d8:	ldr	x4, [x0, #40]
    97dc:	lsl	w8, w3, w8
    97e0:	orr	w7, w7, w8
    97e4:	ldr	x8, [x0, #16]
    97e8:	sxth	w7, w7
    97ec:	add	x11, x4, #0x1
    97f0:	str	x11, [x0, #40]
    97f4:	strh	w7, [x0, #5936]
    97f8:	strb	w7, [x8, x4]
    97fc:	ldr	x8, [x0, #16]
    9800:	ldr	x7, [x0, #40]
    9804:	ldrh	w4, [x0, #5936]
    9808:	add	x11, x7, #0x1
    980c:	str	x11, [x0, #40]
    9810:	lsr	w4, w4, #8
    9814:	strb	w4, [x8, x7]
    9818:	ldr	w4, [x0, #5940]
    981c:	sub	w7, w5, w4
    9820:	sub	w4, w4, #0xd
    9824:	asr	w3, w3, w7
    9828:	strh	w3, [x0, #5936]
    982c:	b	96f8 <inflateCodesUsed@@ZLIB_1.2.9+0x8b8>
    9830:	add	w7, w8, w7
    9834:	strh	w11, [x0, #5936]
    9838:	str	w7, [x0, #5940]
    983c:	b	97c0 <inflateCodesUsed@@ZLIB_1.2.9+0x980>
    9840:	sub	w4, w4, #0x3
    9844:	and	w4, w4, #0xffff
    9848:	lsl	w4, w4, w8
    984c:	add	w8, w8, #0x3
    9850:	orr	w7, w7, w4
    9854:	strh	w7, [x0, #5936]
    9858:	str	w8, [x0, #5940]
    985c:	b	9734 <inflateCodesUsed@@ZLIB_1.2.9+0x8f4>
    9860:	ldrh	w12, [x0, #2820]
    9864:	ldrh	w8, [x0, #2822]
    9868:	lsl	w11, w12, w7
    986c:	orr	w11, w11, w13
    9870:	sub	w14, w5, w8
    9874:	sxth	w13, w11
    9878:	and	w11, w11, #0xffff
    987c:	strh	w11, [x0, #5936]
    9880:	cmp	w14, w7
    9884:	b.ge	9944 <inflateCodesUsed@@ZLIB_1.2.9+0xb04>  // b.tcont
    9888:	ldr	x11, [x0, #16]
    988c:	sub	w8, w8, #0x10
    9890:	ldr	x7, [x0, #40]
    9894:	add	x14, x7, #0x1
    9898:	str	x14, [x0, #40]
    989c:	strb	w13, [x11, x7]
    98a0:	ldr	x13, [x0, #16]
    98a4:	ldr	x11, [x0, #40]
    98a8:	ldrh	w7, [x0, #5936]
    98ac:	add	x14, x11, #0x1
    98b0:	str	x14, [x0, #40]
    98b4:	lsr	w7, w7, #8
    98b8:	strb	w7, [x13, x11]
    98bc:	ldr	w7, [x0, #5940]
    98c0:	sub	w11, w5, w7
    98c4:	add	w8, w8, w7
    98c8:	str	w8, [x0, #5940]
    98cc:	asr	w12, w12, w11
    98d0:	strh	w12, [x0, #5936]
    98d4:	ldr	w8, [x0, #5940]
    98d8:	ldrsh	w7, [x0, #5936]
    98dc:	cmp	w8, #0x9
    98e0:	b.le	9950 <inflateCodesUsed@@ZLIB_1.2.9+0xb10>
    98e4:	sub	w3, w3, #0xa
    98e8:	and	w3, w3, #0xffff
    98ec:	ldr	x4, [x0, #40]
    98f0:	lsl	w8, w3, w8
    98f4:	orr	w7, w7, w8
    98f8:	ldr	x8, [x0, #16]
    98fc:	sxth	w7, w7
    9900:	add	x11, x4, #0x1
    9904:	str	x11, [x0, #40]
    9908:	strh	w7, [x0, #5936]
    990c:	strb	w7, [x8, x4]
    9910:	ldr	x8, [x0, #16]
    9914:	ldr	x7, [x0, #40]
    9918:	ldrh	w4, [x0, #5936]
    991c:	add	x11, x7, #0x1
    9920:	str	x11, [x0, #40]
    9924:	lsr	w4, w4, #8
    9928:	strb	w4, [x8, x7]
    992c:	ldr	w4, [x0, #5940]
    9930:	sub	w7, w5, w4
    9934:	sub	w4, w4, #0x9
    9938:	asr	w3, w3, w7
    993c:	strh	w3, [x0, #5936]
    9940:	b	96f8 <inflateCodesUsed@@ZLIB_1.2.9+0x8b8>
    9944:	add	w7, w8, w7
    9948:	str	w7, [x0, #5940]
    994c:	b	98d4 <inflateCodesUsed@@ZLIB_1.2.9+0xa94>
    9950:	sub	w4, w4, #0xb
    9954:	and	w4, w4, #0xffff
    9958:	lsl	w4, w4, w8
    995c:	add	w8, w8, #0x7
    9960:	orr	w7, w7, w4
    9964:	strh	w7, [x0, #5936]
    9968:	b	9858 <inflateCodesUsed@@ZLIB_1.2.9+0xa18>
    996c:	cmp	w6, w9
    9970:	b.eq	9998 <inflateCodesUsed@@ZLIB_1.2.9+0xb58>  // b.none
    9974:	mov	w8, #0x4                   	// #4
    9978:	mov	w7, #0x7                   	// #7
    997c:	b	9740 <inflateCodesUsed@@ZLIB_1.2.9+0x900>
    9980:	mov	w6, w11
    9984:	mov	w11, w6
    9988:	add	x10, x10, #0x1
    998c:	mov	w3, w4
    9990:	mov	w6, w9
    9994:	b	94bc <inflateCodesUsed@@ZLIB_1.2.9+0x67c>
    9998:	mov	w8, #0x3                   	// #3
    999c:	mov	w7, #0x6                   	// #6
    99a0:	b	9740 <inflateCodesUsed@@ZLIB_1.2.9+0x900>
    99a4:	stp	x29, x30, [sp, #-16]!
    99a8:	mov	x29, sp
    99ac:	ldr	w3, [x0, #5900]
    99b0:	cbnz	w3, 99f0 <inflateCodesUsed@@ZLIB_1.2.9+0xbb0>
    99b4:	ldr	w3, [x0, #5940]
    99b8:	ldrh	w4, [x1, #1024]
    99bc:	ldrh	w5, [x0, #5936]
    99c0:	ldrh	w2, [x1, #1026]
    99c4:	lsl	w1, w4, w3
    99c8:	orr	w1, w1, w5
    99cc:	mov	w5, #0x10                  	// #16
    99d0:	sub	w7, w5, w2
    99d4:	sxth	w6, w1
    99d8:	cmp	w3, w7
    99dc:	and	w1, w1, #0xffff
    99e0:	b.gt	9d24 <inflateCodesUsed@@ZLIB_1.2.9+0xee4>
    99e4:	add	w2, w3, w2
    99e8:	strh	w1, [x0, #5936]
    99ec:	b	9d70 <inflateCodesUsed@@ZLIB_1.2.9+0xf30>
    99f0:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    99f4:	add	x8, x8, #0x200
    99f8:	add	x11, x8, #0x100
    99fc:	add	x12, x8, #0x3e8
    9a00:	add	x13, x8, #0x460
    9a04:	add	x10, x8, #0x1e8
    9a08:	add	x14, x8, #0x174
    9a0c:	mov	w9, #0x0                   	// #0
    9a10:	mov	w6, #0x10                  	// #16
    9a14:	ldr	x4, [x0, #5904]
    9a18:	mov	w3, w9
    9a1c:	ldr	w17, [x0, #5940]
    9a20:	ldrh	w15, [x4, w9, uxtw #1]
    9a24:	add	w9, w9, #0x1
    9a28:	ldr	x4, [x0, #5888]
    9a2c:	ldrb	w4, [x4, x3]
    9a30:	ldrsh	w3, [x0, #5936]
    9a34:	cbnz	w15, 9acc <inflateCodesUsed@@ZLIB_1.2.9+0xc8c>
    9a38:	ubfiz	x4, x4, #2, #8
    9a3c:	add	x5, x1, x4
    9a40:	ldrh	w4, [x1, x4]
    9a44:	ldrh	w7, [x5, #2]
    9a48:	lsl	w5, w4, w17
    9a4c:	orr	w3, w3, w5
    9a50:	sub	w5, w6, w7
    9a54:	sxth	w15, w3
    9a58:	and	w3, w3, #0xffff
    9a5c:	strh	w3, [x0, #5936]
    9a60:	cmp	w5, w17
    9a64:	b.ge	9ac4 <inflateCodesUsed@@ZLIB_1.2.9+0xc84>  // b.tcont
    9a68:	ldr	x5, [x0, #16]
    9a6c:	sub	w7, w7, #0x10
    9a70:	ldr	x3, [x0, #40]
    9a74:	add	x16, x3, #0x1
    9a78:	str	x16, [x0, #40]
    9a7c:	strb	w15, [x5, x3]
    9a80:	ldr	x15, [x0, #16]
    9a84:	ldr	x5, [x0, #40]
    9a88:	ldrh	w3, [x0, #5936]
    9a8c:	add	x16, x5, #0x1
    9a90:	str	x16, [x0, #40]
    9a94:	lsr	w3, w3, #8
    9a98:	strb	w3, [x15, x5]
    9a9c:	ldr	w3, [x0, #5940]
    9aa0:	sub	w5, w6, w3
    9aa4:	add	w7, w7, w3
    9aa8:	asr	w4, w4, w5
    9aac:	strh	w4, [x0, #5936]
    9ab0:	str	w7, [x0, #5940]
    9ab4:	ldr	w3, [x0, #5900]
    9ab8:	cmp	w3, w9
    9abc:	b.hi	9a14 <inflateCodesUsed@@ZLIB_1.2.9+0xbd4>  // b.pmore
    9ac0:	b	99b4 <inflateCodesUsed@@ZLIB_1.2.9+0xb74>
    9ac4:	add	w7, w7, w17
    9ac8:	b	9ab0 <inflateCodesUsed@@ZLIB_1.2.9+0xc70>
    9acc:	ldrb	w7, [x8, w4, sxtw]
    9ad0:	add	w16, w7, #0x101
    9ad4:	ubfiz	x16, x16, #2, #10
    9ad8:	add	x5, x1, x16
    9adc:	ldrh	w18, [x1, x16]
    9ae0:	ldrh	w5, [x5, #2]
    9ae4:	lsl	w16, w18, w17
    9ae8:	orr	w3, w3, w16
    9aec:	sub	w16, w6, w5
    9af0:	sxth	w30, w3
    9af4:	and	w3, w3, #0xffff
    9af8:	strh	w3, [x0, #5936]
    9afc:	cmp	w16, w17
    9b00:	b.ge	9cfc <inflateCodesUsed@@ZLIB_1.2.9+0xebc>  // b.tcont
    9b04:	ldr	x16, [x0, #16]
    9b08:	sub	w5, w5, #0x10
    9b0c:	ldr	x3, [x0, #40]
    9b10:	add	x17, x3, #0x1
    9b14:	str	x17, [x0, #40]
    9b18:	strb	w30, [x16, x3]
    9b1c:	ldr	x17, [x0, #16]
    9b20:	ldr	x3, [x0, #40]
    9b24:	ldrh	w16, [x0, #5936]
    9b28:	add	x30, x3, #0x1
    9b2c:	str	x30, [x0, #40]
    9b30:	lsr	w16, w16, #8
    9b34:	strb	w16, [x17, x3]
    9b38:	ldr	w16, [x0, #5940]
    9b3c:	sub	w3, w6, w16
    9b40:	add	w5, w5, w16
    9b44:	asr	w3, w18, w3
    9b48:	strh	w3, [x0, #5936]
    9b4c:	str	w5, [x0, #5940]
    9b50:	ldr	w5, [x11, x7, lsl #2]
    9b54:	cbz	w5, 9bd8 <inflateCodesUsed@@ZLIB_1.2.9+0xd98>
    9b58:	ldr	w7, [x14, x7, lsl #2]
    9b5c:	sub	w17, w6, w5
    9b60:	ldr	w3, [x0, #5940]
    9b64:	sub	w4, w4, w7
    9b68:	ldrh	w16, [x0, #5936]
    9b6c:	and	w4, w4, #0xffff
    9b70:	cmp	w17, w3
    9b74:	lsl	w7, w4, w3
    9b78:	orr	w7, w7, w16
    9b7c:	sxth	w16, w7
    9b80:	and	w7, w7, #0xffff
    9b84:	strh	w7, [x0, #5936]
    9b88:	b.ge	9bd0 <inflateCodesUsed@@ZLIB_1.2.9+0xd90>  // b.tcont
    9b8c:	ldr	x7, [x0, #16]
    9b90:	sub	w5, w5, #0x10
    9b94:	ldr	x3, [x0, #40]
    9b98:	add	x17, x3, #0x1
    9b9c:	str	x17, [x0, #40]
    9ba0:	strb	w16, [x7, x3]
    9ba4:	ldr	x16, [x0, #16]
    9ba8:	ldr	x7, [x0, #40]
    9bac:	ldrh	w3, [x0, #5936]
    9bb0:	add	x17, x7, #0x1
    9bb4:	str	x17, [x0, #40]
    9bb8:	lsr	w3, w3, #8
    9bbc:	strb	w3, [x16, x7]
    9bc0:	ldr	w3, [x0, #5940]
    9bc4:	sub	w7, w6, w3
    9bc8:	asr	w4, w4, w7
    9bcc:	strh	w4, [x0, #5936]
    9bd0:	add	w5, w5, w3
    9bd4:	str	w5, [x0, #5940]
    9bd8:	sub	w3, w15, #0x1
    9bdc:	cmp	w3, #0xff
    9be0:	b.hi	9d04 <inflateCodesUsed@@ZLIB_1.2.9+0xec4>  // b.pmore
    9be4:	ldrb	w4, [x10, w3, uxtw]
    9be8:	mov	w17, w4
    9bec:	ubfiz	x4, x4, #2, #8
    9bf0:	add	x5, x2, x4
    9bf4:	ldrh	w7, [x0, #5936]
    9bf8:	ldrh	w16, [x2, x4]
    9bfc:	ldrh	w15, [x5, #2]
    9c00:	ldr	w5, [x0, #5940]
    9c04:	sub	w18, w6, w15
    9c08:	cmp	w5, w18
    9c0c:	lsl	w4, w16, w5
    9c10:	orr	w4, w4, w7
    9c14:	sxth	w7, w4
    9c18:	and	w4, w4, #0xffff
    9c1c:	strh	w4, [x0, #5936]
    9c20:	b.le	9d14 <inflateCodesUsed@@ZLIB_1.2.9+0xed4>
    9c24:	ldr	x5, [x0, #16]
    9c28:	ldr	x4, [x0, #40]
    9c2c:	add	x18, x4, #0x1
    9c30:	str	x18, [x0, #40]
    9c34:	strb	w7, [x5, x4]
    9c38:	ldr	x5, [x0, #16]
    9c3c:	ldr	x4, [x0, #40]
    9c40:	ldrh	w7, [x0, #5936]
    9c44:	add	x18, x4, #0x1
    9c48:	str	x18, [x0, #40]
    9c4c:	lsr	w7, w7, #8
    9c50:	strb	w7, [x5, x4]
    9c54:	sub	w5, w15, #0x10
    9c58:	ldr	w7, [x0, #5940]
    9c5c:	sub	w4, w6, w7
    9c60:	add	w5, w5, w7
    9c64:	asr	w4, w16, w4
    9c68:	strh	w4, [x0, #5936]
    9c6c:	ldr	w4, [x12, x17, lsl #2]
    9c70:	str	w5, [x0, #5940]
    9c74:	cbz	w4, 9ab4 <inflateCodesUsed@@ZLIB_1.2.9+0xc74>
    9c78:	ldr	w5, [x13, x17, lsl #2]
    9c7c:	sub	w16, w6, w4
    9c80:	ldr	w7, [x0, #5940]
    9c84:	sub	w3, w3, w5
    9c88:	ldrh	w15, [x0, #5936]
    9c8c:	and	w3, w3, #0xffff
    9c90:	cmp	w16, w7
    9c94:	lsl	w5, w3, w7
    9c98:	orr	w5, w5, w15
    9c9c:	sxth	w15, w5
    9ca0:	and	w5, w5, #0xffff
    9ca4:	strh	w5, [x0, #5936]
    9ca8:	b.ge	9d1c <inflateCodesUsed@@ZLIB_1.2.9+0xedc>  // b.tcont
    9cac:	ldr	x7, [x0, #16]
    9cb0:	sub	w4, w4, #0x10
    9cb4:	ldr	x5, [x0, #40]
    9cb8:	add	x16, x5, #0x1
    9cbc:	str	x16, [x0, #40]
    9cc0:	strb	w15, [x7, x5]
    9cc4:	ldr	x15, [x0, #16]
    9cc8:	ldr	x7, [x0, #40]
    9ccc:	ldrh	w5, [x0, #5936]
    9cd0:	add	x16, x7, #0x1
    9cd4:	str	x16, [x0, #40]
    9cd8:	lsr	w5, w5, #8
    9cdc:	strb	w5, [x15, x7]
    9ce0:	ldr	w5, [x0, #5940]
    9ce4:	sub	w7, w6, w5
    9ce8:	add	w4, w4, w5
    9cec:	asr	w3, w3, w7
    9cf0:	strh	w3, [x0, #5936]
    9cf4:	str	w4, [x0, #5940]
    9cf8:	b	9ab4 <inflateCodesUsed@@ZLIB_1.2.9+0xc74>
    9cfc:	add	w5, w5, w17
    9d00:	b	9b4c <inflateCodesUsed@@ZLIB_1.2.9+0xd0c>
    9d04:	lsr	w4, w3, #7
    9d08:	add	w4, w4, #0x100
    9d0c:	ldrb	w4, [x10, x4]
    9d10:	b	9be8 <inflateCodesUsed@@ZLIB_1.2.9+0xda8>
    9d14:	add	w5, w5, w15
    9d18:	b	9c6c <inflateCodesUsed@@ZLIB_1.2.9+0xe2c>
    9d1c:	add	w4, w4, w7
    9d20:	b	9cf4 <inflateCodesUsed@@ZLIB_1.2.9+0xeb4>
    9d24:	strh	w1, [x0, #5936]
    9d28:	sub	w2, w2, #0x10
    9d2c:	ldr	x3, [x0, #16]
    9d30:	ldr	x1, [x0, #40]
    9d34:	add	x7, x1, #0x1
    9d38:	str	x7, [x0, #40]
    9d3c:	strb	w6, [x3, x1]
    9d40:	ldr	x6, [x0, #16]
    9d44:	ldr	x3, [x0, #40]
    9d48:	ldrh	w1, [x0, #5936]
    9d4c:	add	x7, x3, #0x1
    9d50:	str	x7, [x0, #40]
    9d54:	lsr	w1, w1, #8
    9d58:	strb	w1, [x6, x3]
    9d5c:	ldr	w1, [x0, #5940]
    9d60:	sub	w5, w5, w1
    9d64:	add	w2, w2, w1
    9d68:	asr	w4, w4, w5
    9d6c:	strh	w4, [x0, #5936]
    9d70:	ldp	x29, x30, [sp], #16
    9d74:	str	w2, [x0, #5940]
    9d78:	ret
    9d7c:	mov	x15, x1
    9d80:	stp	x29, x30, [sp, #-80]!
    9d84:	mov	x4, #0x14bc                	// #5308
    9d88:	mov	x29, sp
    9d8c:	ldr	x2, [x15, #16]
    9d90:	add	x7, x0, x4
    9d94:	ldr	x1, [x1]
    9d98:	mov	x5, #0x1400                	// #5120
    9d9c:	stp	x19, x20, [sp, #16]
    9da0:	mov	x3, #0x23d00000000         	// #2461016260608
    9da4:	ldr	w19, [x2, #20]
    9da8:	ldr	x4, [x2]
    9dac:	add	x2, x0, x5
    9db0:	add	x6, x1, #0x2
    9db4:	str	x21, [sp, #32]
    9db8:	mov	w14, #0xffffffff            	// #-1
    9dbc:	stur	x3, [x2, #180]
    9dc0:	mov	x2, #0x0                   	// #0
    9dc4:	mov	w5, w2
    9dc8:	cmp	w19, w2
    9dcc:	b.gt	9fe0 <inflateCodesUsed@@ZLIB_1.2.9+0x11a0>
    9dd0:	mov	w5, #0x1                   	// #1
    9dd4:	ldr	w13, [x0, #5300]
    9dd8:	cmp	w13, #0x1
    9ddc:	b.le	a01c <inflateCodesUsed@@ZLIB_1.2.9+0x11dc>
    9de0:	asr	w13, w13, #1
    9de4:	str	w14, [x15, #8]
    9de8:	mov	w2, w13
    9dec:	bl	9294 <inflateCodesUsed@@ZLIB_1.2.9+0x454>
    9df0:	subs	w13, w13, #0x1
    9df4:	b.ne	9de8 <inflateCodesUsed@@ZLIB_1.2.9+0xfa8>  // b.any
    9df8:	mov	x2, #0x14bc                	// #5308
    9dfc:	sxtw	x21, w19
    9e00:	add	x20, x0, x2
    9e04:	ldr	w2, [x0, #5300]
    9e08:	ldr	w18, [x0, #3012]
    9e0c:	sub	w3, w2, #0x1
    9e10:	add	x2, x0, w2, sxtw #2
    9e14:	ldr	w2, [x2, #3008]
    9e18:	str	w2, [x0, #3012]
    9e1c:	str	w3, [x0, #5300]
    9e20:	mov	w2, #0x1                   	// #1
    9e24:	bl	9294 <inflateCodesUsed@@ZLIB_1.2.9+0x454>
    9e28:	ldr	w3, [x0, #5304]
    9e2c:	ldr	w2, [x0, #3012]
    9e30:	add	x6, x1, w18, sxtw #2
    9e34:	add	x4, x0, w3, sxtw #2
    9e38:	sub	w3, w3, #0x2
    9e3c:	sbfiz	x5, x2, #2, #32
    9e40:	add	x7, x1, w2, sxtw #2
    9e44:	str	w18, [x4, #3004]
    9e48:	str	w3, [x0, #5304]
    9e4c:	sbfiz	x3, x18, #2, #32
    9e50:	str	w2, [x4, #3000]
    9e54:	lsl	x4, x21, #2
    9e58:	add	x18, x0, w18, sxtw
    9e5c:	add	x2, x0, w2, sxtw
    9e60:	ldrh	w5, [x1, x5]
    9e64:	add	x18, x18, #0x1, lsl #12
    9e68:	ldrh	w3, [x1, x3]
    9e6c:	add	x2, x2, #0x1, lsl #12
    9e70:	add	w3, w3, w5
    9e74:	strh	w3, [x1, x4]
    9e78:	ldrb	w5, [x18, #1212]
    9e7c:	add	w18, w19, #0x1
    9e80:	ldrb	w4, [x2, #1212]
    9e84:	add	w2, w5, #0x1
    9e88:	and	w3, w2, #0xff
    9e8c:	add	w2, w4, #0x1
    9e90:	cmp	w5, w4
    9e94:	and	w2, w2, #0xff
    9e98:	csel	w2, w2, w3, cc  // cc = lo, ul, last
    9e9c:	strb	w2, [x20, x21]
    9ea0:	and	w2, w19, #0xffff
    9ea4:	strh	w2, [x7, #2]
    9ea8:	strh	w2, [x6, #2]
    9eac:	mov	w2, #0x1                   	// #1
    9eb0:	str	w19, [x0, #3012]
    9eb4:	add	x21, x21, #0x1
    9eb8:	bl	9294 <inflateCodesUsed@@ZLIB_1.2.9+0x454>
    9ebc:	ldr	w2, [x0, #5300]
    9ec0:	cmp	w2, #0x1
    9ec4:	b.gt	a080 <inflateCodesUsed@@ZLIB_1.2.9+0x1240>
    9ec8:	ldr	w7, [x0, #5304]
    9ecc:	add	x9, x0, #0xba0
    9ed0:	ldr	w8, [x15, #8]
    9ed4:	mov	x4, x9
    9ed8:	sub	w3, w7, #0x1
    9edc:	ldr	w2, [x0, #3012]
    9ee0:	ldr	x5, [x15]
    9ee4:	str	w3, [x0, #5304]
    9ee8:	add	x3, x0, w3, sxtw #2
    9eec:	add	x18, x0, #0xbc0
    9ef0:	str	w2, [x3, #3008]
    9ef4:	ldr	x3, [x15, #16]
    9ef8:	ldr	w16, [x3, #16]
    9efc:	ldp	x15, x17, [x3]
    9f00:	ldr	w3, [x3, #24]
    9f04:	strh	wzr, [x4], #2
    9f08:	cmp	x18, x4
    9f0c:	b.ne	9f04 <inflateCodesUsed@@ZLIB_1.2.9+0x10c4>  // b.any
    9f10:	add	x2, x5, w2, sxtw #2
    9f14:	sxtw	x10, w7
    9f18:	mov	w6, #0x0                   	// #0
    9f1c:	strh	wzr, [x2, #2]
    9f20:	cmp	w10, #0x23c
    9f24:	b.le	a088 <inflateCodesUsed@@ZLIB_1.2.9+0x1248>
    9f28:	cmp	w7, #0x23d
    9f2c:	mov	w2, #0x23d                 	// #573
    9f30:	sub	w2, w2, w7
    9f34:	csel	w2, w2, wzr, le
    9f38:	add	w2, w2, w7
    9f3c:	cbz	w6, 9f9c <inflateCodesUsed@@ZLIB_1.2.9+0x115c>
    9f40:	sub	w11, w3, #0x1
    9f44:	add	x12, x0, #0xba2
    9f48:	sxtw	x10, w11
    9f4c:	mov	w4, w10
    9f50:	sub	x10, x10, #0x1
    9f54:	ldrh	w7, [x12, x10, lsl #1]
    9f58:	cbz	w7, 9f4c <inflateCodesUsed@@ZLIB_1.2.9+0x110c>
    9f5c:	add	x4, x0, w4, sxtw #1
    9f60:	sub	w7, w7, #0x1
    9f64:	add	x10, x0, w3, sxtw #1
    9f68:	sub	w6, w6, #0x2
    9f6c:	cmp	w6, #0x0
    9f70:	strh	w7, [x4, #2976]
    9f74:	ldrh	w7, [x4, #2978]
    9f78:	add	w7, w7, #0x2
    9f7c:	strh	w7, [x4, #2978]
    9f80:	sxtw	x7, w3
    9f84:	ldrh	w4, [x10, #2976]
    9f88:	sub	w4, w4, #0x1
    9f8c:	strh	w4, [x10, #2976]
    9f90:	b.gt	9f48 <inflateCodesUsed@@ZLIB_1.2.9+0x1108>
    9f94:	add	x11, x0, #0xbbc
    9f98:	cbnz	w3, a120 <inflateCodesUsed@@ZLIB_1.2.9+0x12e0>
    9f9c:	add	x0, x0, #0xb9e
    9fa0:	add	x4, sp, #0x30
    9fa4:	mov	x2, #0x1                   	// #1
    9fa8:	mov	w3, #0x0                   	// #0
    9fac:	ldrh	w5, [x0, x2, lsl #1]
    9fb0:	add	w3, w5, w3
    9fb4:	lsl	w3, w3, #1
    9fb8:	strh	w3, [x4, x2, lsl #1]
    9fbc:	add	x2, x2, #0x1
    9fc0:	cmp	x2, #0x10
    9fc4:	b.ne	9fac <inflateCodesUsed@@ZLIB_1.2.9+0x116c>  // b.any
    9fc8:	cmp	w14, w13
    9fcc:	b.ge	a180 <inflateCodesUsed@@ZLIB_1.2.9+0x1340>  // b.tcont
    9fd0:	ldp	x19, x20, [sp, #16]
    9fd4:	ldr	x21, [sp, #32]
    9fd8:	ldp	x29, x30, [sp], #80
    9fdc:	ret
    9fe0:	lsl	x3, x2, #2
    9fe4:	ldrh	w8, [x1, x3]
    9fe8:	cbz	w8, a010 <inflateCodesUsed@@ZLIB_1.2.9+0x11d0>
    9fec:	ldr	w3, [x0, #5300]
    9ff0:	add	w3, w3, #0x1
    9ff4:	str	w3, [x0, #5300]
    9ff8:	add	x3, x0, w3, sxtw #2
    9ffc:	str	w2, [x3, #3008]
    a000:	strb	wzr, [x7, x2]
    a004:	add	x2, x2, #0x1
    a008:	mov	w14, w5
    a00c:	b	9dc4 <inflateCodesUsed@@ZLIB_1.2.9+0xf84>
    a010:	mov	w5, w14
    a014:	strh	wzr, [x6, x3]
    a018:	b	a004 <inflateCodesUsed@@ZLIB_1.2.9+0x11c4>
    a01c:	cmp	w14, #0x1
    a020:	b.gt	a078 <inflateCodesUsed@@ZLIB_1.2.9+0x1238>
    a024:	add	w14, w14, #0x1
    a028:	mov	w2, w14
    a02c:	add	w13, w13, #0x1
    a030:	str	w13, [x0, #5300]
    a034:	sbfiz	x3, x2, #2, #32
    a038:	add	x13, x0, w13, sxtw #2
    a03c:	str	w2, [x13, #3008]
    a040:	add	x2, x0, w2, sxtw
    a044:	add	x2, x2, #0x1, lsl #12
    a048:	strh	w5, [x1, x3]
    a04c:	strb	wzr, [x2, #1212]
    a050:	ldr	x2, [x0, #5912]
    a054:	sub	x2, x2, #0x1
    a058:	str	x2, [x0, #5912]
    a05c:	cbz	x4, 9dd4 <inflateCodesUsed@@ZLIB_1.2.9+0xf94>
    a060:	add	x3, x4, x3
    a064:	ldr	x2, [x0, #5920]
    a068:	ldrh	w3, [x3, #2]
    a06c:	sub	x2, x2, x3
    a070:	str	x2, [x0, #5920]
    a074:	b	9dd4 <inflateCodesUsed@@ZLIB_1.2.9+0xf94>
    a078:	mov	w2, #0x0                   	// #0
    a07c:	b	a02c <inflateCodesUsed@@ZLIB_1.2.9+0x11ec>
    a080:	mov	w19, w18
    a084:	b	9e04 <inflateCodesUsed@@ZLIB_1.2.9+0xfc4>
    a088:	ldr	w4, [x18, x10, lsl #2]
    a08c:	add	x12, x5, w4, sxtw #2
    a090:	sbfiz	x11, x4, #2, #32
    a094:	ldrh	w2, [x12, #2]
    a098:	add	x2, x5, x2, lsl #2
    a09c:	ldrh	w2, [x2, #2]
    a0a0:	add	w2, w2, #0x1
    a0a4:	cmp	w3, w2
    a0a8:	b.ge	a0b4 <inflateCodesUsed@@ZLIB_1.2.9+0x1274>  // b.tcont
    a0ac:	add	w6, w6, #0x1
    a0b0:	mov	w2, w3
    a0b4:	strh	w2, [x12, #2]
    a0b8:	cmp	w8, w4
    a0bc:	b.lt	a110 <inflateCodesUsed@@ZLIB_1.2.9+0x12d0>  // b.tstop
    a0c0:	add	x19, x0, w2, sxtw #1
    a0c4:	cmp	w16, w4
    a0c8:	ldrh	w12, [x19, #2976]
    a0cc:	add	w12, w12, #0x1
    a0d0:	strh	w12, [x19, #2976]
    a0d4:	b.gt	a118 <inflateCodesUsed@@ZLIB_1.2.9+0x12d8>
    a0d8:	sub	w4, w4, w16
    a0dc:	ldr	w4, [x17, w4, sxtw #2]
    a0e0:	ldrh	w12, [x5, x11]
    a0e4:	add	w2, w2, w4
    a0e8:	ldr	x19, [x0, #5912]
    a0ec:	umaddl	x2, w2, w12, x19
    a0f0:	str	x2, [x0, #5912]
    a0f4:	cbz	x15, a110 <inflateCodesUsed@@ZLIB_1.2.9+0x12d0>
    a0f8:	add	x11, x15, x11
    a0fc:	ldrh	w2, [x11, #2]
    a100:	add	w2, w2, w4
    a104:	ldr	x4, [x0, #5920]
    a108:	umaddl	x2, w2, w12, x4
    a10c:	str	x2, [x0, #5920]
    a110:	add	x10, x10, #0x1
    a114:	b	9f20 <inflateCodesUsed@@ZLIB_1.2.9+0x10e0>
    a118:	mov	w4, #0x0                   	// #0
    a11c:	b	a0e0 <inflateCodesUsed@@ZLIB_1.2.9+0x12a0>
    a120:	ldrh	w10, [x9, x7, lsl #1]
    a124:	sxtw	x6, w2
    a128:	mov	w2, w6
    a12c:	cbnz	w10, a13c <inflateCodesUsed@@ZLIB_1.2.9+0x12fc>
    a130:	sub	w3, w3, #0x1
    a134:	sub	x7, x7, #0x1
    a138:	b	9f98 <inflateCodesUsed@@ZLIB_1.2.9+0x1158>
    a13c:	ldr	w2, [x11, x6, lsl #2]
    a140:	cmp	w8, w2
    a144:	b.lt	a178 <inflateCodesUsed@@ZLIB_1.2.9+0x1338>  // b.tstop
    a148:	sbfiz	x12, x2, #2, #32
    a14c:	add	x2, x5, w2, sxtw #2
    a150:	ldrh	w4, [x2, #2]
    a154:	cmp	w4, w3
    a158:	b.eq	a174 <inflateCodesUsed@@ZLIB_1.2.9+0x1334>  // b.none
    a15c:	ldrh	w15, [x5, x12]
    a160:	sub	x4, x7, w4, uxth
    a164:	ldr	x12, [x0, #5912]
    a168:	madd	x4, x4, x15, x12
    a16c:	str	x4, [x0, #5912]
    a170:	strh	w3, [x2, #2]
    a174:	sub	w10, w10, #0x1
    a178:	sub	x6, x6, #0x1
    a17c:	b	a128 <inflateCodesUsed@@ZLIB_1.2.9+0x12e8>
    a180:	ldrh	w0, [x1, #2]
    a184:	cbz	w0, a1b4 <inflateCodesUsed@@ZLIB_1.2.9+0x1374>
    a188:	ldrh	w2, [x4, w0, sxtw #1]
    a18c:	mov	w5, #0x0                   	// #0
    a190:	add	w3, w2, #0x1
    a194:	strh	w3, [x4, w0, sxtw #1]
    a198:	and	w3, w2, #0x1
    a19c:	subs	w0, w0, #0x1
    a1a0:	orr	w3, w3, w5
    a1a4:	lsr	w2, w2, #1
    a1a8:	lsl	w5, w3, #1
    a1ac:	b.ne	a198 <inflateCodesUsed@@ZLIB_1.2.9+0x1358>  // b.any
    a1b0:	strh	w3, [x1]
    a1b4:	add	w13, w13, #0x1
    a1b8:	add	x1, x1, #0x4
    a1bc:	b	9fc8 <inflateCodesUsed@@ZLIB_1.2.9+0x1188>
    a1c0:	ldr	w1, [x0, #5940]
    a1c4:	cmp	w1, #0x8
    a1c8:	b.le	a20c <inflateCodesUsed@@ZLIB_1.2.9+0x13cc>
    a1cc:	ldr	x2, [x0, #16]
    a1d0:	ldr	x1, [x0, #40]
    a1d4:	ldrh	w3, [x0, #5936]
    a1d8:	add	x4, x1, #0x1
    a1dc:	str	x4, [x0, #40]
    a1e0:	strb	w3, [x2, x1]
    a1e4:	ldr	x3, [x0, #16]
    a1e8:	ldr	x2, [x0, #40]
    a1ec:	ldrh	w1, [x0, #5936]
    a1f0:	add	x4, x2, #0x1
    a1f4:	str	x4, [x0, #40]
    a1f8:	lsr	w1, w1, #8
    a1fc:	strb	w1, [x3, x2]
    a200:	strh	wzr, [x0, #5936]
    a204:	str	wzr, [x0, #5940]
    a208:	ret
    a20c:	cmp	w1, #0x0
    a210:	b.le	a200 <inflateCodesUsed@@ZLIB_1.2.9+0x13c0>
    a214:	ldr	x2, [x0, #16]
    a218:	ldr	x1, [x0, #40]
    a21c:	ldrh	w3, [x0, #5936]
    a220:	add	x4, x1, #0x1
    a224:	str	x4, [x0, #40]
    a228:	strb	w3, [x2, x1]
    a22c:	b	a200 <inflateCodesUsed@@ZLIB_1.2.9+0x13c0>
    a230:	ldr	w1, [x0, #5940]
    a234:	cmp	w1, #0x10
    a238:	b.ne	a27c <inflateCodesUsed@@ZLIB_1.2.9+0x143c>  // b.any
    a23c:	ldr	x2, [x0, #16]
    a240:	ldr	x1, [x0, #40]
    a244:	ldrh	w3, [x0, #5936]
    a248:	add	x4, x1, #0x1
    a24c:	str	x4, [x0, #40]
    a250:	strb	w3, [x2, x1]
    a254:	ldr	x3, [x0, #16]
    a258:	ldr	x2, [x0, #40]
    a25c:	ldrh	w1, [x0, #5936]
    a260:	add	x4, x2, #0x1
    a264:	str	x4, [x0, #40]
    a268:	lsr	w1, w1, #8
    a26c:	strb	w1, [x3, x2]
    a270:	strh	wzr, [x0, #5936]
    a274:	str	wzr, [x0, #5940]
    a278:	ret
    a27c:	cmp	w1, #0x7
    a280:	b.le	a278 <inflateCodesUsed@@ZLIB_1.2.9+0x1438>
    a284:	ldr	x2, [x0, #16]
    a288:	ldr	x1, [x0, #40]
    a28c:	ldrh	w3, [x0, #5936]
    a290:	add	x4, x1, #0x1
    a294:	str	x4, [x0, #40]
    a298:	strb	w3, [x2, x1]
    a29c:	ldrh	w1, [x0, #5936]
    a2a0:	lsr	w1, w1, #8
    a2a4:	strh	w1, [x0, #5936]
    a2a8:	ldr	w1, [x0, #5940]
    a2ac:	sub	w1, w1, #0x8
    a2b0:	str	w1, [x0, #5940]
    a2b4:	b	a278 <inflateCodesUsed@@ZLIB_1.2.9+0x1438>
    a2b8:	add	x2, x0, #0xd4
    a2bc:	add	x3, x0, #0x9c8
    a2c0:	str	x2, [x0, #2904]
    a2c4:	adrp	x2, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    a2c8:	add	x2, x2, #0xd08
    a2cc:	str	x3, [x0, #2928]
    a2d0:	add	x3, x2, #0x20
    a2d4:	str	x2, [x0, #2920]
    a2d8:	add	x2, x2, #0x40
    a2dc:	str	x3, [x0, #2944]
    a2e0:	add	x3, x0, #0xabc
    a2e4:	str	x3, [x0, #2952]
    a2e8:	str	x2, [x0, #2968]
    a2ec:	strh	wzr, [x0, #5936]
    a2f0:	str	wzr, [x0, #5940]
    a2f4:	b	923c <inflateCodesUsed@@ZLIB_1.2.9+0x3fc>
    a2f8:	stp	x29, x30, [sp, #-32]!
    a2fc:	mov	x5, x1
    a300:	and	w3, w3, #0xffff
    a304:	mov	x29, sp
    a308:	stp	x19, x20, [sp, #16]
    a30c:	mov	x20, x2
    a310:	ldr	w2, [x0, #5940]
    a314:	ldrh	w1, [x0, #5936]
    a318:	mov	x19, x0
    a31c:	cmp	w2, #0xd
    a320:	lsl	w0, w3, w2
    a324:	orr	w0, w0, w1
    a328:	sxth	w4, w0
    a32c:	and	w0, w0, #0xffff
    a330:	strh	w0, [x19, #5936]
    a334:	b.le	a420 <inflateCodesUsed@@ZLIB_1.2.9+0x15e0>
    a338:	ldr	x1, [x19, #16]
    a33c:	ldr	x0, [x19, #40]
    a340:	add	x2, x0, #0x1
    a344:	str	x2, [x19, #40]
    a348:	strb	w4, [x1, x0]
    a34c:	ldr	x2, [x19, #16]
    a350:	ldr	x1, [x19, #40]
    a354:	ldrh	w0, [x19, #5936]
    a358:	add	x4, x1, #0x1
    a35c:	str	x4, [x19, #40]
    a360:	lsr	w0, w0, #8
    a364:	strb	w0, [x2, x1]
    a368:	mov	w1, #0x10                  	// #16
    a36c:	ldr	w0, [x19, #5940]
    a370:	sub	w1, w1, w0
    a374:	sub	w0, w0, #0xd
    a378:	str	w0, [x19, #5940]
    a37c:	asr	w3, w3, w1
    a380:	strh	w3, [x19, #5936]
    a384:	mov	x0, x19
    a388:	bl	a1c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1380>
    a38c:	ldr	x2, [x19, #16]
    a390:	ldr	x1, [x19, #40]
    a394:	add	x0, x1, #0x1
    a398:	str	x0, [x19, #40]
    a39c:	and	w0, w20, #0xff
    a3a0:	strb	w0, [x2, x1]
    a3a4:	mvn	w0, w0
    a3a8:	ldr	x2, [x19, #16]
    a3ac:	ldr	x1, [x19, #40]
    a3b0:	add	x3, x1, #0x1
    a3b4:	str	x3, [x19, #40]
    a3b8:	ubfx	w3, w20, #8, #8
    a3bc:	strb	w3, [x2, x1]
    a3c0:	ldr	x2, [x19, #16]
    a3c4:	ldr	x1, [x19, #40]
    a3c8:	add	x3, x1, #0x1
    a3cc:	str	x3, [x19, #40]
    a3d0:	strb	w0, [x2, x1]
    a3d4:	ldr	x1, [x19, #40]
    a3d8:	ldr	x2, [x19, #16]
    a3dc:	add	x0, x1, #0x1
    a3e0:	str	x0, [x19, #40]
    a3e4:	mvn	w0, w20
    a3e8:	ubfx	x0, x0, #8, #8
    a3ec:	strb	w0, [x2, x1]
    a3f0:	mov	x2, x20
    a3f4:	mov	x1, x5
    a3f8:	ldr	x3, [x19, #16]
    a3fc:	ldr	x0, [x19, #40]
    a400:	add	x0, x3, x0
    a404:	bl	23a0 <memcpy@plt>
    a408:	ldr	x2, [x19, #40]
    a40c:	add	x2, x2, x20
    a410:	str	x2, [x19, #40]
    a414:	ldp	x19, x20, [sp, #16]
    a418:	ldp	x29, x30, [sp], #32
    a41c:	ret
    a420:	add	w2, w2, #0x3
    a424:	str	w2, [x19, #5940]
    a428:	b	a384 <inflateCodesUsed@@ZLIB_1.2.9+0x1544>
    a42c:	b	a230 <inflateCodesUsed@@ZLIB_1.2.9+0x13f0>
    a430:	ldr	w2, [x0, #5940]
    a434:	mov	w3, #0x2                   	// #2
    a438:	ldrh	w4, [x0, #5936]
    a43c:	cmp	w2, #0xd
    a440:	lsl	w1, w3, w2
    a444:	orr	w1, w1, w4
    a448:	sxth	w4, w1
    a44c:	and	w1, w1, #0xffff
    a450:	strh	w1, [x0, #5936]
    a454:	b.le	a4f8 <inflateCodesUsed@@ZLIB_1.2.9+0x16b8>
    a458:	ldr	x2, [x0, #16]
    a45c:	ldr	x1, [x0, #40]
    a460:	add	x5, x1, #0x1
    a464:	str	x5, [x0, #40]
    a468:	strb	w4, [x2, x1]
    a46c:	ldr	x4, [x0, #16]
    a470:	ldr	x2, [x0, #40]
    a474:	ldrh	w1, [x0, #5936]
    a478:	add	x5, x2, #0x1
    a47c:	str	x5, [x0, #40]
    a480:	lsr	w1, w1, #8
    a484:	strb	w1, [x4, x2]
    a488:	mov	w2, #0x10                  	// #16
    a48c:	ldr	w1, [x0, #5940]
    a490:	sub	w2, w2, w1
    a494:	sub	w1, w1, #0xd
    a498:	str	w1, [x0, #5940]
    a49c:	asr	w3, w3, w2
    a4a0:	strh	w3, [x0, #5936]
    a4a4:	ldr	w1, [x0, #5940]
    a4a8:	cmp	w1, #0x9
    a4ac:	b.le	a504 <inflateCodesUsed@@ZLIB_1.2.9+0x16c4>
    a4b0:	ldr	x2, [x0, #16]
    a4b4:	ldr	x1, [x0, #40]
    a4b8:	ldrh	w3, [x0, #5936]
    a4bc:	add	x4, x1, #0x1
    a4c0:	str	x4, [x0, #40]
    a4c4:	strb	w3, [x2, x1]
    a4c8:	ldr	x3, [x0, #16]
    a4cc:	ldr	x2, [x0, #40]
    a4d0:	ldrh	w1, [x0, #5936]
    a4d4:	add	x4, x2, #0x1
    a4d8:	str	x4, [x0, #40]
    a4dc:	lsr	w1, w1, #8
    a4e0:	strb	w1, [x3, x2]
    a4e4:	strh	wzr, [x0, #5936]
    a4e8:	ldr	w1, [x0, #5940]
    a4ec:	sub	w1, w1, #0x9
    a4f0:	str	w1, [x0, #5940]
    a4f4:	b	a230 <inflateCodesUsed@@ZLIB_1.2.9+0x13f0>
    a4f8:	add	w2, w2, #0x3
    a4fc:	str	w2, [x0, #5940]
    a500:	b	a4a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1664>
    a504:	add	w1, w1, #0x7
    a508:	b	a4f0 <inflateCodesUsed@@ZLIB_1.2.9+0x16b0>
    a50c:	stp	x29, x30, [sp, #-64]!
    a510:	mov	x29, sp
    a514:	stp	x19, x20, [sp, #16]
    a518:	mov	x19, x0
    a51c:	ldr	w0, [x0, #196]
    a520:	stp	x21, x22, [sp, #32]
    a524:	mov	w20, w3
    a528:	mov	x22, x1
    a52c:	str	x23, [sp, #48]
    a530:	mov	x21, x2
    a534:	cmp	w0, #0x0
    a538:	b.le	a6a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1864>
    a53c:	mov	x23, x19
    a540:	ldr	x3, [x23], #212
    a544:	ldr	w0, [x3, #88]
    a548:	cmp	w0, #0x2
    a54c:	b.ne	a5b0 <inflateCodesUsed@@ZLIB_1.2.9+0x1770>  // b.any
    a550:	mov	x2, #0xc07f                	// #49279
    a554:	mov	x1, x23
    a558:	add	x0, x19, #0x154
    a55c:	movk	x2, #0xf3ff, lsl #16
    a560:	tbz	w2, #0, a56c <inflateCodesUsed@@ZLIB_1.2.9+0x172c>
    a564:	ldrh	w4, [x1]
    a568:	cbnz	w4, a5a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1768>
    a56c:	add	x1, x1, #0x4
    a570:	lsr	x2, x2, #1
    a574:	cmp	x0, x1
    a578:	b.ne	a560 <inflateCodesUsed@@ZLIB_1.2.9+0x1720>  // b.any
    a57c:	ldr	x1, [x19, #248]
    a580:	tst	x1, #0xffff0000ffff
    a584:	b.ne	a69c <inflateCodesUsed@@ZLIB_1.2.9+0x185c>  // b.any
    a588:	ldrh	w1, [x19, #264]
    a58c:	cbnz	w1, a69c <inflateCodesUsed@@ZLIB_1.2.9+0x185c>
    a590:	add	x1, x19, #0x4d4
    a594:	ldrh	w2, [x0]
    a598:	cbnz	w2, a69c <inflateCodesUsed@@ZLIB_1.2.9+0x185c>
    a59c:	add	x0, x0, #0x4
    a5a0:	cmp	x1, x0
    a5a4:	b.ne	a594 <inflateCodesUsed@@ZLIB_1.2.9+0x1754>  // b.any
    a5a8:	mov	w0, #0x0                   	// #0
    a5ac:	str	w0, [x3, #88]
    a5b0:	add	x1, x19, #0xb58
    a5b4:	mov	x0, x19
    a5b8:	bl	9d7c <inflateCodesUsed@@ZLIB_1.2.9+0xf3c>
    a5bc:	add	x1, x19, #0xb70
    a5c0:	mov	x0, x19
    a5c4:	bl	9d7c <inflateCodesUsed@@ZLIB_1.2.9+0xf3c>
    a5c8:	ldr	w2, [x19, #2912]
    a5cc:	mov	x0, x19
    a5d0:	mov	x1, x23
    a5d4:	bl	9370 <inflateCodesUsed@@ZLIB_1.2.9+0x530>
    a5d8:	ldr	w2, [x19, #2936]
    a5dc:	add	x1, x19, #0x9c8
    a5e0:	bl	9370 <inflateCodesUsed@@ZLIB_1.2.9+0x530>
    a5e4:	add	x1, x19, #0xb88
    a5e8:	bl	9d7c <inflateCodesUsed@@ZLIB_1.2.9+0xf3c>
    a5ec:	adrp	x3, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    a5f0:	add	x3, x3, #0x200
    a5f4:	add	x3, x3, #0x4d8
    a5f8:	mov	x0, #0x12                  	// #18
    a5fc:	ldrb	w1, [x3, x0]
    a600:	mov	w4, w0
    a604:	add	x1, x19, x1, lsl #2
    a608:	ldrh	w1, [x1, #2750]
    a60c:	cbnz	w1, a620 <inflateCodesUsed@@ZLIB_1.2.9+0x17e0>
    a610:	sub	x0, x0, #0x1
    a614:	cmp	x0, #0x2
    a618:	b.ne	a5fc <inflateCodesUsed@@ZLIB_1.2.9+0x17bc>  // b.any
    a61c:	mov	w4, w0
    a620:	sxtw	x0, w4
    a624:	ldr	x1, [x19, #5912]
    a628:	add	x0, x0, #0x1
    a62c:	ldr	x5, [x19, #5920]
    a630:	add	x0, x0, x0, lsl #1
    a634:	add	x1, x1, #0xe
    a638:	add	x0, x0, x1
    a63c:	add	x5, x5, #0xa
    a640:	str	x0, [x19, #5912]
    a644:	add	x0, x0, #0xa
    a648:	lsr	x5, x5, #3
    a64c:	lsr	x0, x0, #3
    a650:	cmp	x0, x5
    a654:	csel	x0, x0, x5, ls  // ls = plast
    a658:	add	x1, x21, #0x4
    a65c:	cmp	x1, x0
    a660:	b.hi	a6b4 <inflateCodesUsed@@ZLIB_1.2.9+0x1874>  // b.pmore
    a664:	cbz	x22, a6b4 <inflateCodesUsed@@ZLIB_1.2.9+0x1874>
    a668:	mov	w3, w20
    a66c:	mov	x2, x21
    a670:	mov	x1, x22
    a674:	mov	x0, x19
    a678:	bl	a2f8 <inflateCodesUsed@@ZLIB_1.2.9+0x14b8>
    a67c:	mov	x0, x19
    a680:	bl	923c <inflateCodesUsed@@ZLIB_1.2.9+0x3fc>
    a684:	cbz	w20, aa80 <inflateCodesUsed@@ZLIB_1.2.9+0x1c40>
    a688:	ldp	x19, x20, [sp, #16]
    a68c:	ldp	x21, x22, [sp, #32]
    a690:	ldr	x23, [sp, #48]
    a694:	ldp	x29, x30, [sp], #64
    a698:	b	a1c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1380>
    a69c:	mov	w0, #0x1                   	// #1
    a6a0:	b	a5ac <inflateCodesUsed@@ZLIB_1.2.9+0x176c>
    a6a4:	add	x0, x2, #0x5
    a6a8:	mov	w4, #0x0                   	// #0
    a6ac:	mov	x5, x0
    a6b0:	b	a658 <inflateCodesUsed@@ZLIB_1.2.9+0x1818>
    a6b4:	ldr	w1, [x19, #200]
    a6b8:	ldrsh	w2, [x19, #5936]
    a6bc:	cmp	w1, #0x4
    a6c0:	ldr	w3, [x19, #5940]
    a6c4:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    a6c8:	b.eq	a6d4 <inflateCodesUsed@@ZLIB_1.2.9+0x1894>  // b.none
    a6cc:	cmp	x0, x5
    a6d0:	b.ne	a774 <inflateCodesUsed@@ZLIB_1.2.9+0x1934>  // b.any
    a6d4:	cmp	w3, #0xd
    a6d8:	add	w0, w20, #0x2
    a6dc:	b.le	a758 <inflateCodesUsed@@ZLIB_1.2.9+0x1918>
    a6e0:	and	w0, w0, #0xffff
    a6e4:	ldr	x4, [x19, #16]
    a6e8:	lsl	w3, w0, w3
    a6ec:	orr	w2, w2, w3
    a6f0:	ldr	x3, [x19, #40]
    a6f4:	sxth	w2, w2
    a6f8:	strh	w2, [x19, #5936]
    a6fc:	add	x5, x3, #0x1
    a700:	str	x5, [x19, #40]
    a704:	strb	w2, [x4, x3]
    a708:	ldr	x4, [x19, #16]
    a70c:	ldr	x3, [x19, #40]
    a710:	ldrh	w2, [x19, #5936]
    a714:	add	x5, x3, #0x1
    a718:	str	x5, [x19, #40]
    a71c:	lsr	w2, w2, #8
    a720:	strb	w2, [x4, x3]
    a724:	mov	w3, #0x10                  	// #16
    a728:	ldr	w2, [x19, #5940]
    a72c:	sub	w3, w3, w2
    a730:	sub	w2, w2, #0xd
    a734:	str	w2, [x19, #5940]
    a738:	asr	w0, w0, w3
    a73c:	strh	w0, [x19, #5936]
    a740:	add	x1, x1, #0x200
    a744:	add	x2, x1, #0x4ec
    a748:	add	x1, x1, #0x564
    a74c:	mov	x0, x19
    a750:	bl	99a4 <inflateCodesUsed@@ZLIB_1.2.9+0xb64>
    a754:	b	a67c <inflateCodesUsed@@ZLIB_1.2.9+0x183c>
    a758:	and	w0, w0, #0xffff
    a75c:	lsl	w0, w0, w3
    a760:	add	w3, w3, #0x3
    a764:	orr	w2, w2, w0
    a768:	strh	w2, [x19, #5936]
    a76c:	str	w3, [x19, #5940]
    a770:	b	a740 <inflateCodesUsed@@ZLIB_1.2.9+0x1900>
    a774:	cmp	w3, #0xd
    a778:	add	w0, w20, #0x4
    a77c:	b.le	aa04 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc4>
    a780:	and	w0, w0, #0xffff
    a784:	ldr	x5, [x19, #16]
    a788:	lsl	w3, w0, w3
    a78c:	orr	w2, w2, w3
    a790:	ldr	x3, [x19, #40]
    a794:	sxth	w2, w2
    a798:	strh	w2, [x19, #5936]
    a79c:	add	x6, x3, #0x1
    a7a0:	str	x6, [x19, #40]
    a7a4:	strb	w2, [x5, x3]
    a7a8:	ldr	x5, [x19, #16]
    a7ac:	ldr	x3, [x19, #40]
    a7b0:	ldrh	w2, [x19, #5936]
    a7b4:	add	x6, x3, #0x1
    a7b8:	str	x6, [x19, #40]
    a7bc:	lsr	w2, w2, #8
    a7c0:	strb	w2, [x5, x3]
    a7c4:	mov	w3, #0x10                  	// #16
    a7c8:	ldr	w2, [x19, #5940]
    a7cc:	sub	w3, w3, w2
    a7d0:	sub	w2, w2, #0xd
    a7d4:	str	w2, [x19, #5940]
    a7d8:	asr	w0, w0, w3
    a7dc:	strh	w0, [x19, #5936]
    a7e0:	ldr	w2, [x19, #2912]
    a7e4:	ldr	w3, [x19, #5940]
    a7e8:	ldrsh	w0, [x19, #5936]
    a7ec:	sub	w5, w2, #0x100
    a7f0:	ldr	w15, [x19, #2936]
    a7f4:	cmp	w3, #0xb
    a7f8:	b.le	aa20 <inflateCodesUsed@@ZLIB_1.2.9+0x1be0>
    a7fc:	and	w5, w5, #0xffff
    a800:	ldr	x6, [x19, #16]
    a804:	lsl	w3, w5, w3
    a808:	orr	w0, w0, w3
    a80c:	ldr	x3, [x19, #40]
    a810:	sxth	w0, w0
    a814:	strh	w0, [x19, #5936]
    a818:	add	x7, x3, #0x1
    a81c:	str	x7, [x19, #40]
    a820:	strb	w0, [x6, x3]
    a824:	ldr	x6, [x19, #16]
    a828:	ldr	x3, [x19, #40]
    a82c:	ldrh	w0, [x19, #5936]
    a830:	add	x7, x3, #0x1
    a834:	str	x7, [x19, #40]
    a838:	lsr	w0, w0, #8
    a83c:	strb	w0, [x6, x3]
    a840:	mov	w3, #0x10                  	// #16
    a844:	ldr	w0, [x19, #5940]
    a848:	sub	w3, w3, w0
    a84c:	sub	w0, w0, #0xb
    a850:	str	w0, [x19, #5940]
    a854:	asr	w5, w5, w3
    a858:	strh	w5, [x19, #5936]
    a85c:	ldr	w3, [x19, #5940]
    a860:	ldrsh	w0, [x19, #5936]
    a864:	cmp	w3, #0xb
    a868:	b.le	aa3c <inflateCodesUsed@@ZLIB_1.2.9+0x1bfc>
    a86c:	and	w5, w15, #0xffff
    a870:	ldr	x6, [x19, #16]
    a874:	lsl	w3, w5, w3
    a878:	orr	w0, w0, w3
    a87c:	ldr	x3, [x19, #40]
    a880:	sxth	w0, w0
    a884:	strh	w0, [x19, #5936]
    a888:	add	x7, x3, #0x1
    a88c:	str	x7, [x19, #40]
    a890:	strb	w0, [x6, x3]
    a894:	ldr	x6, [x19, #16]
    a898:	ldr	x3, [x19, #40]
    a89c:	ldrh	w0, [x19, #5936]
    a8a0:	add	x7, x3, #0x1
    a8a4:	str	x7, [x19, #40]
    a8a8:	lsr	w0, w0, #8
    a8ac:	strb	w0, [x6, x3]
    a8b0:	mov	w3, #0x10                  	// #16
    a8b4:	ldr	w0, [x19, #5940]
    a8b8:	sub	w3, w3, w0
    a8bc:	sub	w0, w0, #0xb
    a8c0:	str	w0, [x19, #5940]
    a8c4:	asr	w5, w5, w3
    a8c8:	strh	w5, [x19, #5936]
    a8cc:	ldr	w3, [x19, #5940]
    a8d0:	sub	w5, w4, #0x3
    a8d4:	ldrsh	w0, [x19, #5936]
    a8d8:	cmp	w3, #0xc
    a8dc:	b.le	aa58 <inflateCodesUsed@@ZLIB_1.2.9+0x1c18>
    a8e0:	and	w5, w5, #0xffff
    a8e4:	ldr	x6, [x19, #16]
    a8e8:	lsl	w3, w5, w3
    a8ec:	orr	w0, w0, w3
    a8f0:	ldr	x3, [x19, #40]
    a8f4:	sxth	w0, w0
    a8f8:	strh	w0, [x19, #5936]
    a8fc:	add	x7, x3, #0x1
    a900:	str	x7, [x19, #40]
    a904:	strb	w0, [x6, x3]
    a908:	ldr	x6, [x19, #16]
    a90c:	ldr	x3, [x19, #40]
    a910:	ldrh	w0, [x19, #5936]
    a914:	add	x7, x3, #0x1
    a918:	str	x7, [x19, #40]
    a91c:	lsr	w0, w0, #8
    a920:	strb	w0, [x6, x3]
    a924:	mov	w3, #0x10                  	// #16
    a928:	ldr	w0, [x19, #5940]
    a92c:	sub	w3, w3, w0
    a930:	sub	w0, w0, #0xc
    a934:	str	w0, [x19, #5940]
    a938:	asr	w5, w5, w3
    a93c:	strh	w5, [x19, #5936]
    a940:	add	x1, x1, #0x200
    a944:	mov	x6, #0x0                   	// #0
    a948:	add	x1, x1, #0x4d8
    a94c:	mov	w7, #0x10                  	// #16
    a950:	ldrb	w0, [x1, x6]
    a954:	ldr	w3, [x19, #5940]
    a958:	ldrh	w8, [x19, #5936]
    a95c:	add	x0, x19, x0, lsl #2
    a960:	cmp	w3, #0xd
    a964:	ldrh	w5, [x0, #2750]
    a968:	lsl	w0, w5, w3
    a96c:	orr	w0, w0, w8
    a970:	sxth	w8, w0
    a974:	and	w0, w0, #0xffff
    a978:	strh	w0, [x19, #5936]
    a97c:	b.le	aa74 <inflateCodesUsed@@ZLIB_1.2.9+0x1c34>
    a980:	ldr	x3, [x19, #16]
    a984:	ldr	x0, [x19, #40]
    a988:	add	x9, x0, #0x1
    a98c:	str	x9, [x19, #40]
    a990:	strb	w8, [x3, x0]
    a994:	ldr	x8, [x19, #16]
    a998:	ldr	x3, [x19, #40]
    a99c:	ldrh	w0, [x19, #5936]
    a9a0:	add	x9, x3, #0x1
    a9a4:	str	x9, [x19, #40]
    a9a8:	lsr	w0, w0, #8
    a9ac:	strb	w0, [x8, x3]
    a9b0:	ldr	w0, [x19, #5940]
    a9b4:	sub	w3, w7, w0
    a9b8:	sub	w0, w0, #0xd
    a9bc:	str	w0, [x19, #5940]
    a9c0:	asr	w5, w5, w3
    a9c4:	strh	w5, [x19, #5936]
    a9c8:	add	x6, x6, #0x1
    a9cc:	sub	w0, w6, #0x1
    a9d0:	cmp	w4, w0
    a9d4:	b.gt	a950 <inflateCodesUsed@@ZLIB_1.2.9+0x1b10>
    a9d8:	add	x18, x19, #0xd4
    a9dc:	mov	x0, x19
    a9e0:	mov	x1, x18
    a9e4:	bl	9488 <inflateCodesUsed@@ZLIB_1.2.9+0x648>
    a9e8:	mov	w2, w15
    a9ec:	add	x1, x19, #0x9c8
    a9f0:	mov	x15, x1
    a9f4:	bl	9488 <inflateCodesUsed@@ZLIB_1.2.9+0x648>
    a9f8:	mov	x2, x15
    a9fc:	mov	x1, x18
    aa00:	b	a74c <inflateCodesUsed@@ZLIB_1.2.9+0x190c>
    aa04:	and	w0, w0, #0xffff
    aa08:	lsl	w0, w0, w3
    aa0c:	add	w3, w3, #0x3
    aa10:	orr	w2, w2, w0
    aa14:	strh	w2, [x19, #5936]
    aa18:	str	w3, [x19, #5940]
    aa1c:	b	a7e0 <inflateCodesUsed@@ZLIB_1.2.9+0x19a0>
    aa20:	and	w5, w5, #0xffff
    aa24:	lsl	w5, w5, w3
    aa28:	add	w3, w3, #0x5
    aa2c:	orr	w0, w0, w5
    aa30:	strh	w0, [x19, #5936]
    aa34:	str	w3, [x19, #5940]
    aa38:	b	a85c <inflateCodesUsed@@ZLIB_1.2.9+0x1a1c>
    aa3c:	and	w5, w15, #0xffff
    aa40:	lsl	w5, w5, w3
    aa44:	add	w3, w3, #0x5
    aa48:	orr	w0, w0, w5
    aa4c:	strh	w0, [x19, #5936]
    aa50:	str	w3, [x19, #5940]
    aa54:	b	a8cc <inflateCodesUsed@@ZLIB_1.2.9+0x1a8c>
    aa58:	and	w5, w5, #0xffff
    aa5c:	lsl	w5, w5, w3
    aa60:	add	w3, w3, #0x4
    aa64:	orr	w0, w0, w5
    aa68:	strh	w0, [x19, #5936]
    aa6c:	str	w3, [x19, #5940]
    aa70:	b	a940 <inflateCodesUsed@@ZLIB_1.2.9+0x1b00>
    aa74:	add	w3, w3, #0x3
    aa78:	str	w3, [x19, #5940]
    aa7c:	b	a9c8 <inflateCodesUsed@@ZLIB_1.2.9+0x1b88>
    aa80:	ldp	x19, x20, [sp, #16]
    aa84:	ldp	x21, x22, [sp, #32]
    aa88:	ldr	x23, [sp, #48]
    aa8c:	ldp	x29, x30, [sp], #64
    aa90:	ret
    aa94:	ldr	w3, [x0, #5900]
    aa98:	ldr	x4, [x0, #5904]
    aa9c:	add	w5, w3, #0x1
    aaa0:	strh	w1, [x4, w3, uxtw #1]
    aaa4:	ldr	x4, [x0, #5888]
    aaa8:	str	w5, [x0, #5900]
    aaac:	strb	w2, [x4, w3, uxtw]
    aab0:	mov	w2, w2
    aab4:	cbnz	w1, aae0 <inflateCodesUsed@@ZLIB_1.2.9+0x1ca0>
    aab8:	add	x2, x0, x2, lsl #2
    aabc:	ldrh	w1, [x2, #212]
    aac0:	add	w1, w1, #0x1
    aac4:	strh	w1, [x2, #212]
    aac8:	ldr	w1, [x0, #5896]
    aacc:	ldr	w0, [x0, #5900]
    aad0:	sub	w1, w1, #0x1
    aad4:	cmp	w1, w0
    aad8:	cset	w0, eq  // eq = none
    aadc:	ret
    aae0:	ldr	w3, [x0, #5928]
    aae4:	sub	w1, w1, #0x1
    aae8:	cmp	w1, #0xff
    aaec:	add	w3, w3, #0x1
    aaf0:	str	w3, [x0, #5928]
    aaf4:	adrp	x3, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    aaf8:	add	x3, x3, #0x200
    aafc:	ldrb	w2, [x3, x2]
    ab00:	add	x2, x0, x2, lsl #2
    ab04:	ldrh	w4, [x2, #1240]
    ab08:	add	w4, w4, #0x1
    ab0c:	strh	w4, [x2, #1240]
    ab10:	add	x2, x3, #0x1e8
    ab14:	b.hi	ab30 <inflateCodesUsed@@ZLIB_1.2.9+0x1cf0>  // b.pmore
    ab18:	ldrb	w1, [x2, w1, uxtw]
    ab1c:	add	x1, x0, w1, sxtw #2
    ab20:	ldrh	w2, [x1, #2504]
    ab24:	add	w2, w2, #0x1
    ab28:	strh	w2, [x1, #2504]
    ab2c:	b	aac8 <inflateCodesUsed@@ZLIB_1.2.9+0x1c88>
    ab30:	lsr	w1, w1, #7
    ab34:	add	w1, w1, #0x100
    ab38:	ldrb	w1, [x2, x1]
    ab3c:	b	ab1c <inflateCodesUsed@@ZLIB_1.2.9+0x1cdc>

000000000000ab40 <zlibVersion@@Base>:
    ab40:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    ab44:	add	x0, x0, #0xc30
    ab48:	ret

000000000000ab4c <zlibCompileFlags@@ZLIB_1.2.0.2>:
    ab4c:	mov	x0, #0xa9                  	// #169
    ab50:	ret

000000000000ab54 <zError@@Base>:
    ab54:	mov	w1, #0x2                   	// #2
    ab58:	sub	w0, w1, w0
    ab5c:	adrp	x1, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x153c4>
    ab60:	ldr	x1, [x1, #4056]
    ab64:	ldr	x0, [x1, w0, sxtw #3]
    ab68:	ret
    ab6c:	mul	w0, w1, w2
    ab70:	b	2460 <malloc@plt>
    ab74:	mov	x0, x1
    ab78:	b	2570 <free@plt>

000000000000ab7c <compress2@@Base>:
    ab7c:	stp	x29, x30, [sp, #-176]!
    ab80:	mov	x29, sp
    ab84:	stp	x21, x22, [sp, #32]
    ab88:	mov	x21, x1
    ab8c:	mov	w1, w4
    ab90:	stp	x19, x20, [sp, #16]
    ab94:	mov	x19, x2
    ab98:	mov	x20, x3
    ab9c:	stp	x23, x24, [sp, #48]
    aba0:	add	x24, sp, #0x40
    aba4:	mov	x23, x0
    aba8:	ldr	x22, [x21]
    abac:	str	xzr, [x21]
    abb0:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    abb4:	mov	x0, x24
    abb8:	add	x2, x2, #0xc30
    abbc:	mov	w3, #0x70                  	// #112
    abc0:	stp	xzr, xzr, [sp, #128]
    abc4:	str	xzr, [sp, #144]
    abc8:	bl	24f0 <deflateInit_@plt>
    abcc:	cbnz	w0, ac48 <compress2@@Base+0xcc>
    abd0:	str	x19, [sp, #64]
    abd4:	str	wzr, [sp, #72]
    abd8:	str	x23, [sp, #88]
    abdc:	mov	x23, #0xffffffff            	// #4294967295
    abe0:	str	wzr, [sp, #96]
    abe4:	ldr	w0, [sp, #96]
    abe8:	cbnz	w0, abfc <compress2@@Base+0x80>
    abec:	cmp	x22, x23
    abf0:	csel	x0, x22, x23, ls  // ls = plast
    abf4:	str	w0, [sp, #96]
    abf8:	sub	x22, x22, x0
    abfc:	ldr	w0, [sp, #72]
    ac00:	cbnz	w0, ac14 <compress2@@Base+0x98>
    ac04:	cmp	x20, x23
    ac08:	csel	x0, x20, x23, ls  // ls = plast
    ac0c:	str	w0, [sp, #72]
    ac10:	sub	x20, x20, x0
    ac14:	cmp	x20, #0x0
    ac18:	mov	x0, x24
    ac1c:	cset	w1, eq  // eq = none
    ac20:	lsl	w1, w1, #2
    ac24:	bl	2490 <deflate@plt>
    ac28:	mov	w19, w0
    ac2c:	cbz	w0, abe4 <compress2@@Base+0x68>
    ac30:	ldr	x0, [sp, #104]
    ac34:	str	x0, [x21]
    ac38:	mov	x0, x24
    ac3c:	bl	2590 <deflateEnd@plt>
    ac40:	cmp	w19, #0x1
    ac44:	csel	w0, wzr, w19, eq  // eq = none
    ac48:	ldp	x19, x20, [sp, #16]
    ac4c:	ldp	x21, x22, [sp, #32]
    ac50:	ldp	x23, x24, [sp, #48]
    ac54:	ldp	x29, x30, [sp], #176
    ac58:	ret

000000000000ac5c <compress@@Base>:
    ac5c:	mov	w4, #0xffffffff            	// #-1
    ac60:	b	25d0 <compress2@plt>

000000000000ac64 <compressBound@@ZLIB_1.2.0>:
    ac64:	lsr	x1, x0, #14
    ac68:	add	x2, x0, #0xd
    ac6c:	add	x1, x1, x0, lsr #12
    ac70:	add	x1, x1, x2
    ac74:	add	x0, x1, x0, lsr #25
    ac78:	ret

000000000000ac7c <uncompress2@@ZLIB_1.2.9>:
    ac7c:	stp	x29, x30, [sp, #-224]!
    ac80:	mov	x29, sp
    ac84:	stp	x21, x22, [sp, #32]
    ac88:	mov	x22, x1
    ac8c:	ldr	x21, [x1]
    ac90:	stp	x19, x20, [sp, #16]
    ac94:	stp	x23, x24, [sp, #48]
    ac98:	mov	x24, x3
    ac9c:	stp	x25, x26, [sp, #64]
    aca0:	str	x27, [sp, #80]
    aca4:	ldr	x25, [x3]
    aca8:	cbz	x21, adac <uncompress2@@ZLIB_1.2.9+0x130>
    acac:	mov	x23, x0
    acb0:	str	xzr, [x1]
    acb4:	add	x27, sp, #0x70
    acb8:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    acbc:	mov	x0, x27
    acc0:	add	x1, x1, #0xc30
    acc4:	str	x2, [sp, #112]
    acc8:	mov	w2, #0x70                  	// #112
    accc:	str	wzr, [sp, #120]
    acd0:	stp	xzr, xzr, [sp, #176]
    acd4:	str	xzr, [sp, #192]
    acd8:	bl	25c0 <inflateInit_@plt>
    acdc:	mov	w19, w0
    ace0:	cbnz	w0, ad8c <uncompress2@@ZLIB_1.2.9+0x110>
    ace4:	mov	x26, #0xffffffff            	// #4294967295
    ace8:	str	x23, [sp, #136]
    acec:	str	wzr, [sp, #144]
    acf0:	ldr	w0, [sp, #144]
    acf4:	cbnz	w0, ad08 <uncompress2@@ZLIB_1.2.9+0x8c>
    acf8:	cmp	x21, x26
    acfc:	csel	x0, x21, x26, ls  // ls = plast
    ad00:	str	w0, [sp, #144]
    ad04:	sub	x21, x21, x0
    ad08:	ldr	w0, [sp, #120]
    ad0c:	cbnz	w0, ad20 <uncompress2@@ZLIB_1.2.9+0xa4>
    ad10:	cmp	x25, x26
    ad14:	csel	x0, x25, x26, ls  // ls = plast
    ad18:	str	w0, [sp, #120]
    ad1c:	sub	x25, x25, x0
    ad20:	mov	x0, x27
    ad24:	mov	w1, #0x0                   	// #0
    ad28:	bl	23f0 <inflate@plt>
    ad2c:	mov	w20, w0
    ad30:	cbz	w0, acf0 <uncompress2@@ZLIB_1.2.9+0x74>
    ad34:	ldr	x0, [x24]
    ad38:	ldr	w1, [sp, #120]
    ad3c:	sub	x0, x0, x1
    ad40:	add	x1, sp, #0x68
    ad44:	sub	x0, x0, x25
    ad48:	str	x0, [x24]
    ad4c:	cmp	x23, x1
    ad50:	ldr	x0, [sp, #152]
    ad54:	b.eq	adb8 <uncompress2@@ZLIB_1.2.9+0x13c>  // b.none
    ad58:	str	x0, [x22]
    ad5c:	mov	x0, x27
    ad60:	bl	2550 <inflateEnd@plt>
    ad64:	cmp	w20, #0x1
    ad68:	b.eq	ad8c <uncompress2@@ZLIB_1.2.9+0x110>  // b.none
    ad6c:	cmp	w20, #0x2
    ad70:	b.eq	adc8 <uncompress2@@ZLIB_1.2.9+0x14c>  // b.none
    ad74:	cmn	w20, #0x5
    ad78:	b.ne	add0 <uncompress2@@ZLIB_1.2.9+0x154>  // b.any
    ad7c:	ldr	w0, [sp, #144]
    ad80:	mov	w19, #0xfffffffd            	// #-3
    ad84:	cmn	x0, x21
    ad88:	csel	w19, w19, w20, ne  // ne = any
    ad8c:	mov	w0, w19
    ad90:	ldp	x19, x20, [sp, #16]
    ad94:	ldp	x21, x22, [sp, #32]
    ad98:	ldp	x23, x24, [sp, #48]
    ad9c:	ldp	x25, x26, [sp, #64]
    ada0:	ldr	x27, [sp, #80]
    ada4:	ldp	x29, x30, [sp], #224
    ada8:	ret
    adac:	add	x23, sp, #0x68
    adb0:	mov	x21, #0x1                   	// #1
    adb4:	b	acb4 <uncompress2@@ZLIB_1.2.9+0x38>
    adb8:	cbz	x0, ad5c <uncompress2@@ZLIB_1.2.9+0xe0>
    adbc:	cmn	w20, #0x5
    adc0:	csinc	x21, x21, xzr, ne  // ne = any
    adc4:	b	ad5c <uncompress2@@ZLIB_1.2.9+0xe0>
    adc8:	mov	w19, #0xfffffffd            	// #-3
    adcc:	b	ad8c <uncompress2@@ZLIB_1.2.9+0x110>
    add0:	mov	w19, w20
    add4:	b	ad8c <uncompress2@@ZLIB_1.2.9+0x110>

000000000000add8 <uncompress@@Base>:
    add8:	stp	x29, x30, [sp, #-32]!
    addc:	mov	x29, sp
    ade0:	str	x3, [sp, #24]
    ade4:	add	x3, sp, #0x18
    ade8:	bl	2540 <uncompress2@plt>
    adec:	ldp	x29, x30, [sp], #32
    adf0:	ret

000000000000adf4 <gzclose@@Base>:
    adf4:	cbz	x0, ae10 <gzclose@@Base+0x1c>
    adf8:	ldr	w2, [x0, #24]
    adfc:	mov	w1, #0x1c4f                	// #7247
    ae00:	cmp	w2, w1
    ae04:	b.ne	ae0c <gzclose@@Base+0x18>  // b.any
    ae08:	b	2400 <gzclose_r@plt>
    ae0c:	b	2580 <gzclose_w@plt>
    ae10:	mov	w0, #0xfffffffe            	// #-2
    ae14:	ret

000000000000ae18 <gzbuffer@@ZLIB_1.2.3.5>:
    ae18:	cbz	x0, ae5c <gzbuffer@@ZLIB_1.2.3.5+0x44>
    ae1c:	ldr	w2, [x0, #24]
    ae20:	mov	w3, #0x1c4f                	// #7247
    ae24:	cmp	w2, w3
    ae28:	mov	w3, #0x79b1                	// #31153
    ae2c:	ccmp	w2, w3, #0x4, ne  // ne = any
    ae30:	b.ne	ae5c <gzbuffer@@ZLIB_1.2.3.5+0x44>  // b.any
    ae34:	ldr	w2, [x0, #40]
    ae38:	cbnz	w2, ae5c <gzbuffer@@ZLIB_1.2.3.5+0x44>
    ae3c:	cmp	w1, w1, lsl #1
    ae40:	b.hi	ae5c <gzbuffer@@ZLIB_1.2.3.5+0x44>  // b.pmore
    ae44:	cmp	w1, #0x2
    ae48:	mov	w2, #0x2                   	// #2
    ae4c:	csel	w1, w1, w2, cs  // cs = hs, nlast
    ae50:	str	w1, [x0, #44]
    ae54:	mov	w0, #0x0                   	// #0
    ae58:	ret
    ae5c:	mov	w0, #0xffffffff            	// #-1
    ae60:	b	ae58 <gzbuffer@@ZLIB_1.2.3.5+0x40>

000000000000ae64 <gztell64@@ZLIB_1.2.3.3>:
    ae64:	cbz	x0, aea0 <gztell64@@ZLIB_1.2.3.3+0x3c>
    ae68:	ldr	w1, [x0, #24]
    ae6c:	mov	w2, #0x1c4f                	// #7247
    ae70:	cmp	w1, w2
    ae74:	mov	w2, #0x79b1                	// #31153
    ae78:	ccmp	w1, w2, #0x4, ne  // ne = any
    ae7c:	b.ne	aea0 <gztell64@@ZLIB_1.2.3.3+0x3c>  // b.any
    ae80:	ldr	w2, [x0, #104]
    ae84:	ldr	x1, [x0, #16]
    ae88:	cbz	w2, ae98 <gztell64@@ZLIB_1.2.3.3+0x34>
    ae8c:	ldr	x0, [x0, #96]
    ae90:	add	x0, x1, x0
    ae94:	ret
    ae98:	mov	x0, #0x0                   	// #0
    ae9c:	b	ae90 <gztell64@@ZLIB_1.2.3.3+0x2c>
    aea0:	mov	x0, #0xffffffffffffffff    	// #-1
    aea4:	b	ae94 <gztell64@@ZLIB_1.2.3.3+0x30>

000000000000aea8 <gztell@@Base>:
    aea8:	b	24c0 <gztell64@plt>

000000000000aeac <gzoffset64@@ZLIB_1.2.3.5>:
    aeac:	cbnz	x0, aec8 <gzoffset64@@ZLIB_1.2.3.5+0x1c>
    aeb0:	mov	x0, #0xffffffffffffffff    	// #-1
    aeb4:	ret
    aeb8:	mov	x0, #0xffffffffffffffff    	// #-1
    aebc:	ldp	x19, x20, [sp, #16]
    aec0:	ldp	x29, x30, [sp], #32
    aec4:	ret
    aec8:	stp	x29, x30, [sp, #-32]!
    aecc:	mov	w1, #0x79b1                	// #31153
    aed0:	mov	x29, sp
    aed4:	stp	x19, x20, [sp, #16]
    aed8:	mov	x19, x0
    aedc:	ldr	w0, [x0, #24]
    aee0:	mov	w20, #0x1c4f                	// #7247
    aee4:	cmp	w0, w20
    aee8:	ccmp	w0, w1, #0x4, ne  // ne = any
    aeec:	b.ne	aeb8 <gzoffset64@@ZLIB_1.2.3.5+0xc>  // b.any
    aef0:	ldr	w0, [x19, #28]
    aef4:	mov	w2, #0x1                   	// #1
    aef8:	mov	x1, #0x0                   	// #0
    aefc:	bl	24b0 <lseek64@plt>
    af00:	cmn	x0, #0x1
    af04:	b.eq	aeb8 <gzoffset64@@ZLIB_1.2.3.5+0xc>  // b.none
    af08:	ldr	w1, [x19, #24]
    af0c:	cmp	w1, w20
    af10:	b.ne	aebc <gzoffset64@@ZLIB_1.2.3.5+0x10>  // b.any
    af14:	ldr	w1, [x19, #128]
    af18:	sub	x0, x0, x1
    af1c:	b	aebc <gzoffset64@@ZLIB_1.2.3.5+0x10>

000000000000af20 <gzoffset@@ZLIB_1.2.3.5>:
    af20:	b	25b0 <gzoffset64@plt>

000000000000af24 <gzeof@@Base>:
    af24:	cbz	x0, af40 <gzeof@@Base+0x1c>
    af28:	ldr	w2, [x0, #24]
    af2c:	mov	w1, #0x1c4f                	// #7247
    af30:	cmp	w2, w1
    af34:	b.ne	af40 <gzeof@@Base+0x1c>  // b.any
    af38:	ldr	w0, [x0, #84]
    af3c:	ret
    af40:	mov	w0, #0x0                   	// #0
    af44:	b	af3c <gzeof@@Base+0x18>

000000000000af48 <gzerror@@Base>:
    af48:	cbz	x0, af94 <gzerror@@Base+0x4c>
    af4c:	ldr	w2, [x0, #24]
    af50:	mov	w3, #0x1c4f                	// #7247
    af54:	cmp	w2, w3
    af58:	mov	w3, #0x79b1                	// #31153
    af5c:	ccmp	w2, w3, #0x4, ne  // ne = any
    af60:	b.ne	af90 <gzerror@@Base+0x48>  // b.any
    af64:	cbz	x1, af70 <gzerror@@Base+0x28>
    af68:	ldr	w2, [x0, #108]
    af6c:	str	w2, [x1]
    af70:	ldr	w1, [x0, #108]
    af74:	cmn	w1, #0x4
    af78:	b.eq	af98 <gzerror@@Base+0x50>  // b.none
    af7c:	ldr	x0, [x0, #112]
    af80:	cbnz	x0, af94 <gzerror@@Base+0x4c>
    af84:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    af88:	add	x0, x0, #0xcb0
    af8c:	b	af94 <gzerror@@Base+0x4c>
    af90:	mov	x0, #0x0                   	// #0
    af94:	ret
    af98:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    af9c:	add	x0, x0, #0xca0
    afa0:	b	af94 <gzerror@@Base+0x4c>
    afa4:	stp	x29, x30, [sp, #-48]!
    afa8:	mov	x29, sp
    afac:	stp	x19, x20, [sp, #16]
    afb0:	mov	x19, x0
    afb4:	mov	x20, x2
    afb8:	ldr	x0, [x0, #112]
    afbc:	stp	x21, x22, [sp, #32]
    afc0:	mov	w21, w1
    afc4:	cbz	x0, afdc <gzerror@@Base+0x94>
    afc8:	ldr	w1, [x19, #108]
    afcc:	cmn	w1, #0x4
    afd0:	b.eq	afd8 <gzerror@@Base+0x90>  // b.none
    afd4:	bl	2570 <free@plt>
    afd8:	str	xzr, [x19, #112]
    afdc:	cmp	w21, #0x0
    afe0:	ccmn	w21, #0x5, #0x4, ne  // ne = any
    afe4:	b.eq	afec <gzerror@@Base+0xa4>  // b.none
    afe8:	str	wzr, [x19]
    afec:	str	w21, [x19, #108]
    aff0:	cbz	x20, b034 <gzerror@@Base+0xec>
    aff4:	cmn	w21, #0x4
    aff8:	b.eq	b034 <gzerror@@Base+0xec>  // b.none
    affc:	ldr	x22, [x19, #32]
    b000:	mov	x0, x22
    b004:	bl	23e0 <strlen@plt>
    b008:	mov	x21, x0
    b00c:	mov	x0, x20
    b010:	bl	23e0 <strlen@plt>
    b014:	add	x0, x21, x0
    b018:	add	x0, x0, #0x3
    b01c:	bl	2460 <malloc@plt>
    b020:	str	x0, [x19, #112]
    b024:	mov	x21, x0
    b028:	cbnz	x0, b044 <gzerror@@Base+0xfc>
    b02c:	mov	w0, #0xfffffffc            	// #-4
    b030:	str	w0, [x19, #108]
    b034:	ldp	x19, x20, [sp, #16]
    b038:	ldp	x21, x22, [sp, #32]
    b03c:	ldp	x29, x30, [sp], #48
    b040:	ret
    b044:	mov	x0, x22
    b048:	bl	23e0 <strlen@plt>
    b04c:	mov	x19, x0
    b050:	mov	x0, x20
    b054:	bl	23e0 <strlen@plt>
    b058:	add	x1, x19, x0
    b05c:	mov	x5, x20
    b060:	mov	x3, x22
    b064:	mov	x0, x21
    b068:	add	x1, x1, #0x3
    b06c:	ldp	x19, x20, [sp, #16]
    b070:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b074:	ldp	x21, x22, [sp, #32]
    b078:	add	x4, x4, #0xcae
    b07c:	ldp	x29, x30, [sp], #48
    b080:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b084:	add	x2, x2, #0xcb1
    b088:	b	2450 <snprintf@plt>
    b08c:	stp	x29, x30, [sp, #-64]!
    b090:	mov	x29, sp
    b094:	stp	x19, x20, [sp, #16]
    b098:	stp	x21, x22, [sp, #32]
    b09c:	stp	x23, x24, [sp, #48]
    b0a0:	cbnz	x0, b0c0 <gzerror@@Base+0x178>
    b0a4:	mov	x19, #0x0                   	// #0
    b0a8:	mov	x0, x19
    b0ac:	ldp	x19, x20, [sp, #16]
    b0b0:	ldp	x21, x22, [sp, #32]
    b0b4:	ldp	x23, x24, [sp, #48]
    b0b8:	ldp	x29, x30, [sp], #64
    b0bc:	ret
    b0c0:	mov	x21, x0
    b0c4:	mov	w20, w1
    b0c8:	mov	x23, x2
    b0cc:	mov	x0, #0xe8                  	// #232
    b0d0:	bl	2460 <malloc@plt>
    b0d4:	mov	x19, x0
    b0d8:	cbz	x0, b0a4 <gzerror@@Base+0x15c>
    b0dc:	mov	x0, #0x200000000000        	// #35184372088832
    b0e0:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b0e4:	add	x1, x1, #0xcc0
    b0e8:	str	x0, [x19, #40]
    b0ec:	mov	x0, #0xffffffff            	// #4294967295
    b0f0:	mov	w24, #0x0                   	// #0
    b0f4:	mov	w22, #0x0                   	// #0
    b0f8:	mov	w3, #0x79b1                	// #31153
    b0fc:	mov	w5, #0x1c4f                	// #7247
    b100:	mov	w6, #0x2                   	// #2
    b104:	mov	w7, #0x3                   	// #3
    b108:	mov	w8, #0x4                   	// #4
    b10c:	str	wzr, [x19, #24]
    b110:	str	wzr, [x19, #64]
    b114:	str	x0, [x19, #88]
    b118:	mov	w0, #0x1                   	// #1
    b11c:	str	xzr, [x19, #112]
    b120:	ldrb	w4, [x23]
    b124:	cbnz	w4, b13c <gzerror@@Base+0x1f4>
    b128:	ldr	w0, [x19, #24]
    b12c:	cbnz	w0, b210 <gzerror@@Base+0x2c8>
    b130:	mov	x0, x19
    b134:	bl	2570 <free@plt>
    b138:	b	b0a4 <gzerror@@Base+0x15c>
    b13c:	sub	w2, w4, #0x30
    b140:	and	w9, w2, #0xff
    b144:	cmp	w9, #0x9
    b148:	b.hi	b158 <gzerror@@Base+0x210>  // b.pmore
    b14c:	str	w2, [x19, #88]
    b150:	add	x23, x23, #0x1
    b154:	b	b120 <gzerror@@Base+0x1d8>
    b158:	cmp	w4, #0x68
    b15c:	b.hi	b1c0 <gzerror@@Base+0x278>  // b.pmore
    b160:	cmp	w4, #0x60
    b164:	b.hi	b18c <gzerror@@Base+0x244>  // b.pmore
    b168:	cmp	w4, #0x52
    b16c:	b.eq	b200 <gzerror@@Base+0x2b8>  // b.none
    b170:	b.hi	b1b0 <gzerror@@Base+0x268>  // b.pmore
    b174:	cmp	w4, #0x2b
    b178:	b.eq	b130 <gzerror@@Base+0x1e8>  // b.none
    b17c:	cmp	w4, #0x46
    b180:	b.ne	b150 <gzerror@@Base+0x208>  // b.any
    b184:	str	w8, [x19, #92]
    b188:	b	b150 <gzerror@@Base+0x208>
    b18c:	sub	w4, w4, #0x61
    b190:	cmp	w4, #0x7
    b194:	b.hi	b150 <gzerror@@Base+0x208>  // b.pmore
    b198:	ldrb	w2, [x1, w4, uxtw]
    b19c:	adr	x4, b1a8 <gzerror@@Base+0x260>
    b1a0:	add	x2, x4, w2, sxtb #2
    b1a4:	br	x2
    b1a8:	mov	w22, #0x1                   	// #1
    b1ac:	b	b150 <gzerror@@Base+0x208>
    b1b0:	cmp	w4, #0x54
    b1b4:	b.ne	b150 <gzerror@@Base+0x208>  // b.any
    b1b8:	str	w0, [x19, #64]
    b1bc:	b	b150 <gzerror@@Base+0x208>
    b1c0:	cmp	w4, #0x77
    b1c4:	b.eq	b1e0 <gzerror@@Base+0x298>  // b.none
    b1c8:	cmp	w4, #0x78
    b1cc:	b.eq	b208 <gzerror@@Base+0x2c0>  // b.none
    b1d0:	cmp	w4, #0x72
    b1d4:	b.ne	b150 <gzerror@@Base+0x208>  // b.any
    b1d8:	str	w5, [x19, #24]
    b1dc:	b	b150 <gzerror@@Base+0x208>
    b1e0:	str	w3, [x19, #24]
    b1e4:	b	b150 <gzerror@@Base+0x208>
    b1e8:	str	w0, [x19, #24]
    b1ec:	b	b150 <gzerror@@Base+0x208>
    b1f0:	str	w0, [x19, #92]
    b1f4:	b	b150 <gzerror@@Base+0x208>
    b1f8:	str	w6, [x19, #92]
    b1fc:	b	b150 <gzerror@@Base+0x208>
    b200:	str	w7, [x19, #92]
    b204:	b	b150 <gzerror@@Base+0x208>
    b208:	mov	w24, #0x1                   	// #1
    b20c:	b	b150 <gzerror@@Base+0x208>
    b210:	mov	w1, #0x1c4f                	// #7247
    b214:	cmp	w0, w1
    b218:	b.ne	b22c <gzerror@@Base+0x2e4>  // b.any
    b21c:	ldr	w0, [x19, #64]
    b220:	cbnz	w0, b130 <gzerror@@Base+0x1e8>
    b224:	mov	w0, #0x1                   	// #1
    b228:	str	w0, [x19, #64]
    b22c:	mov	x0, x21
    b230:	bl	23e0 <strlen@plt>
    b234:	add	x23, x0, #0x1
    b238:	mov	x0, x23
    b23c:	bl	2460 <malloc@plt>
    b240:	str	x0, [x19, #32]
    b244:	cbz	x0, b130 <gzerror@@Base+0x1e8>
    b248:	mov	x1, x23
    b24c:	mov	x3, x21
    b250:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b254:	add	x2, x2, #0xcb5
    b258:	bl	2450 <snprintf@plt>
    b25c:	cmp	w22, #0x0
    b260:	mov	w0, #0x80000               	// #524288
    b264:	csel	w22, w22, w0, eq  // eq = none
    b268:	ldr	w0, [x19, #24]
    b26c:	mov	w1, #0x1c4f                	// #7247
    b270:	cmp	w0, w1
    b274:	b.eq	b2d0 <gzerror@@Base+0x388>  // b.none
    b278:	cmp	w24, #0x0
    b27c:	mov	w2, #0x41                  	// #65
    b280:	mov	w1, #0xc1                  	// #193
    b284:	csel	w1, w1, w2, ne  // ne = any
    b288:	mov	w2, #0x79b1                	// #31153
    b28c:	cmp	w0, w2
    b290:	mov	w0, #0x200                 	// #512
    b294:	mov	w2, #0x400                 	// #1024
    b298:	csel	w0, w0, w2, eq  // eq = none
    b29c:	orr	w1, w1, w0
    b2a0:	tbz	w20, #31, b2b8 <gzerror@@Base+0x370>
    b2a4:	orr	w1, w22, w1
    b2a8:	mov	x0, x21
    b2ac:	mov	w2, #0x1b6                 	// #438
    b2b0:	bl	2470 <open@plt>
    b2b4:	mov	w20, w0
    b2b8:	str	w20, [x19, #28]
    b2bc:	cmn	w20, #0x1
    b2c0:	b.ne	b2d8 <gzerror@@Base+0x390>  // b.any
    b2c4:	ldr	x0, [x19, #32]
    b2c8:	bl	2570 <free@plt>
    b2cc:	b	b130 <gzerror@@Base+0x1e8>
    b2d0:	mov	w1, #0x0                   	// #0
    b2d4:	b	b2a0 <gzerror@@Base+0x358>
    b2d8:	ldr	w0, [x19, #24]
    b2dc:	cmp	w0, #0x1
    b2e0:	b.ne	b338 <gzerror@@Base+0x3f0>  // b.any
    b2e4:	mov	w0, w20
    b2e8:	mov	w2, #0x2                   	// #2
    b2ec:	mov	x1, #0x0                   	// #0
    b2f0:	bl	24b0 <lseek64@plt>
    b2f4:	mov	w0, #0x79b1                	// #31153
    b2f8:	str	w0, [x19, #24]
    b2fc:	ldr	w1, [x19, #24]
    b300:	mov	w0, #0x1c4f                	// #7247
    b304:	str	wzr, [x19]
    b308:	cmp	w1, w0
    b30c:	b.ne	b318 <gzerror@@Base+0x3d0>  // b.any
    b310:	str	wzr, [x19, #68]
    b314:	str	xzr, [x19, #80]
    b318:	str	wzr, [x19, #104]
    b31c:	mov	x0, x19
    b320:	mov	x2, #0x0                   	// #0
    b324:	mov	w1, #0x0                   	// #0
    b328:	bl	afa4 <gzerror@@Base+0x5c>
    b32c:	str	xzr, [x19, #16]
    b330:	str	wzr, [x19, #128]
    b334:	b	b0a8 <gzerror@@Base+0x160>
    b338:	mov	w1, #0x1c4f                	// #7247
    b33c:	cmp	w0, w1
    b340:	b.ne	b2fc <gzerror@@Base+0x3b4>  // b.any
    b344:	mov	w0, w20
    b348:	mov	w2, #0x1                   	// #1
    b34c:	mov	x1, #0x0                   	// #0
    b350:	bl	24b0 <lseek64@plt>
    b354:	cmn	x0, #0x1
    b358:	csel	x0, x0, xzr, ne  // ne = any
    b35c:	str	x0, [x19, #72]
    b360:	b	b2fc <gzerror@@Base+0x3b4>

000000000000b364 <gzopen64@@ZLIB_1.2.3.3>:
    b364:	mov	x2, x1
    b368:	mov	w1, #0xffffffff            	// #-1
    b36c:	b	b08c <gzerror@@Base+0x144>

000000000000b370 <gzopen@@Base>:
    b370:	b	b364 <gzopen64@@ZLIB_1.2.3.3>

000000000000b374 <gzdopen@@Base>:
    b374:	stp	x29, x30, [sp, #-48]!
    b378:	cmn	w0, #0x1
    b37c:	mov	x29, sp
    b380:	stp	x19, x20, [sp, #16]
    b384:	str	x21, [sp, #32]
    b388:	b.ne	b3a4 <gzdopen@@Base+0x30>  // b.any
    b38c:	mov	x20, #0x0                   	// #0
    b390:	mov	x0, x20
    b394:	ldp	x19, x20, [sp, #16]
    b398:	ldr	x21, [sp, #32]
    b39c:	ldp	x29, x30, [sp], #48
    b3a0:	ret
    b3a4:	mov	w20, w0
    b3a8:	mov	x21, x1
    b3ac:	mov	x0, #0x13                  	// #19
    b3b0:	bl	2460 <malloc@plt>
    b3b4:	mov	x19, x0
    b3b8:	cbz	x0, b38c <gzdopen@@Base+0x18>
    b3bc:	mov	w3, w20
    b3c0:	mov	x1, #0x13                  	// #19
    b3c4:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b3c8:	add	x2, x2, #0xcb8
    b3cc:	bl	2450 <snprintf@plt>
    b3d0:	mov	w1, w20
    b3d4:	mov	x2, x21
    b3d8:	mov	x0, x19
    b3dc:	bl	b08c <gzerror@@Base+0x144>
    b3e0:	mov	x20, x0
    b3e4:	mov	x0, x19
    b3e8:	bl	2570 <free@plt>
    b3ec:	b	b390 <gzdopen@@Base+0x1c>

000000000000b3f0 <gzclearerr@@ZLIB_1.2.0.2>:
    b3f0:	cbz	x0, b424 <gzclearerr@@ZLIB_1.2.0.2+0x34>
    b3f4:	ldr	w1, [x0, #24]
    b3f8:	mov	w2, #0x1c4f                	// #7247
    b3fc:	mov	w3, #0x79b1                	// #31153
    b400:	cmp	w1, w2
    b404:	ccmp	w1, w3, #0x4, ne  // ne = any
    b408:	b.ne	b424 <gzclearerr@@ZLIB_1.2.0.2+0x34>  // b.any
    b40c:	cmp	w1, w2
    b410:	b.ne	b418 <gzclearerr@@ZLIB_1.2.0.2+0x28>  // b.any
    b414:	str	xzr, [x0, #80]
    b418:	mov	x2, #0x0                   	// #0
    b41c:	mov	w1, #0x0                   	// #0
    b420:	b	afa4 <gzerror@@Base+0x5c>
    b424:	ret

000000000000b428 <gzrewind@@Base>:
    b428:	cbnz	x0, b444 <gzrewind@@Base+0x1c>
    b42c:	mov	w0, #0xffffffff            	// #-1
    b430:	ret
    b434:	mov	w0, #0xffffffff            	// #-1
    b438:	ldp	x19, x20, [sp, #16]
    b43c:	ldp	x29, x30, [sp], #32
    b440:	ret
    b444:	stp	x29, x30, [sp, #-32]!
    b448:	mov	x29, sp
    b44c:	stp	x19, x20, [sp, #16]
    b450:	mov	x19, x0
    b454:	mov	w0, #0x1c4f                	// #7247
    b458:	ldr	w20, [x19, #24]
    b45c:	cmp	w20, w0
    b460:	b.ne	b434 <gzrewind@@Base+0xc>  // b.any
    b464:	ldr	w0, [x19, #108]
    b468:	cmp	w0, #0x0
    b46c:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    b470:	b.ne	b434 <gzrewind@@Base+0xc>  // b.any
    b474:	ldr	w0, [x19, #28]
    b478:	mov	w2, #0x0                   	// #0
    b47c:	ldr	x1, [x19, #72]
    b480:	bl	24b0 <lseek64@plt>
    b484:	cmn	x0, #0x1
    b488:	b.eq	b434 <gzrewind@@Base+0xc>  // b.none
    b48c:	ldr	w0, [x19, #24]
    b490:	str	wzr, [x19]
    b494:	cmp	w0, w20
    b498:	b.ne	b4a4 <gzrewind@@Base+0x7c>  // b.any
    b49c:	str	wzr, [x19, #68]
    b4a0:	str	xzr, [x19, #80]
    b4a4:	str	wzr, [x19, #104]
    b4a8:	mov	x0, x19
    b4ac:	mov	x2, #0x0                   	// #0
    b4b0:	mov	w1, #0x0                   	// #0
    b4b4:	bl	afa4 <gzerror@@Base+0x5c>
    b4b8:	str	xzr, [x19, #16]
    b4bc:	mov	w0, #0x0                   	// #0
    b4c0:	str	wzr, [x19, #128]
    b4c4:	b	b438 <gzrewind@@Base+0x10>

000000000000b4c8 <gzseek64@@ZLIB_1.2.3.3>:
    b4c8:	cbnz	x0, b4d4 <gzseek64@@ZLIB_1.2.3.3+0xc>
    b4cc:	mov	x0, #0xffffffffffffffff    	// #-1
    b4d0:	ret
    b4d4:	stp	x29, x30, [sp, #-32]!
    b4d8:	mov	x29, sp
    b4dc:	stp	x19, x20, [sp, #16]
    b4e0:	mov	x19, x0
    b4e4:	ldr	w0, [x0, #24]
    b4e8:	mov	x20, x1
    b4ec:	mov	w1, #0x1c4f                	// #7247
    b4f0:	cmp	w0, w1
    b4f4:	mov	w1, #0x79b1                	// #31153
    b4f8:	ccmp	w0, w1, #0x4, ne  // ne = any
    b4fc:	b.ne	b624 <gzseek64@@ZLIB_1.2.3.3+0x15c>  // b.any
    b500:	ldr	w1, [x19, #108]
    b504:	cmp	w1, #0x0
    b508:	ccmn	w1, #0x5, #0x4, ne  // ne = any
    b50c:	b.ne	b624 <gzseek64@@ZLIB_1.2.3.3+0x15c>  // b.any
    b510:	cmp	w2, #0x1
    b514:	b.hi	b624 <gzseek64@@ZLIB_1.2.3.3+0x15c>  // b.pmore
    b518:	cbnz	w2, b594 <gzseek64@@ZLIB_1.2.3.3+0xcc>
    b51c:	ldr	x1, [x19, #16]
    b520:	sub	x20, x20, x1
    b524:	str	wzr, [x19, #104]
    b528:	mov	w1, #0x1c4f                	// #7247
    b52c:	cmp	w0, w1
    b530:	b.ne	b620 <gzseek64@@ZLIB_1.2.3.3+0x158>  // b.any
    b534:	ldr	w2, [x19, #68]
    b538:	ldr	x0, [x19, #16]
    b53c:	cmp	w2, #0x1
    b540:	b.ne	b5a8 <gzseek64@@ZLIB_1.2.3.3+0xe0>  // b.any
    b544:	cmn	x20, x0
    b548:	b.mi	b5a8 <gzseek64@@ZLIB_1.2.3.3+0xe0>  // b.first
    b54c:	ldr	w0, [x19, #28]
    b550:	ldr	w1, [x19]
    b554:	sub	x1, x20, x1
    b558:	bl	24b0 <lseek64@plt>
    b55c:	cmn	x0, #0x1
    b560:	b.eq	b624 <gzseek64@@ZLIB_1.2.3.3+0x15c>  // b.none
    b564:	str	wzr, [x19]
    b568:	mov	x0, x19
    b56c:	str	xzr, [x19, #80]
    b570:	mov	x2, #0x0                   	// #0
    b574:	str	wzr, [x19, #104]
    b578:	mov	w1, #0x0                   	// #0
    b57c:	bl	afa4 <gzerror@@Base+0x5c>
    b580:	str	wzr, [x19, #128]
    b584:	ldr	x0, [x19, #16]
    b588:	add	x0, x20, x0
    b58c:	str	x0, [x19, #16]
    b590:	b	b628 <gzseek64@@ZLIB_1.2.3.3+0x160>
    b594:	ldr	w1, [x19, #104]
    b598:	cbz	w1, b524 <gzseek64@@ZLIB_1.2.3.3+0x5c>
    b59c:	ldr	x1, [x19, #96]
    b5a0:	add	x20, x20, x1
    b5a4:	b	b524 <gzseek64@@ZLIB_1.2.3.3+0x5c>
    b5a8:	tbz	x20, #63, b5c4 <gzseek64@@ZLIB_1.2.3.3+0xfc>
    b5ac:	adds	x20, x20, x0
    b5b0:	b.mi	b624 <gzseek64@@ZLIB_1.2.3.3+0x15c>  // b.first
    b5b4:	mov	x0, x19
    b5b8:	bl	25a0 <gzrewind@plt>
    b5bc:	cmn	w0, #0x1
    b5c0:	b.eq	b624 <gzseek64@@ZLIB_1.2.3.3+0x15c>  // b.none
    b5c4:	ldr	w1, [x19, #24]
    b5c8:	mov	w0, #0x1c4f                	// #7247
    b5cc:	cmp	w1, w0
    b5d0:	b.ne	b604 <gzseek64@@ZLIB_1.2.3.3+0x13c>  // b.any
    b5d4:	ldr	w0, [x19]
    b5d8:	cmp	x20, w0, uxtw
    b5dc:	csel	w1, w0, w20, ge  // ge = tcont
    b5e0:	sub	w0, w0, w1
    b5e4:	str	w0, [x19]
    b5e8:	ldr	x0, [x19, #8]
    b5ec:	sub	x20, x20, w1, uxtw
    b5f0:	add	x0, x0, w1, uxtw
    b5f4:	str	x0, [x19, #8]
    b5f8:	ldr	x0, [x19, #16]
    b5fc:	add	x0, x0, w1, uxtw
    b600:	str	x0, [x19, #16]
    b604:	cbz	x20, b614 <gzseek64@@ZLIB_1.2.3.3+0x14c>
    b608:	mov	w0, #0x1                   	// #1
    b60c:	str	x20, [x19, #96]
    b610:	str	w0, [x19, #104]
    b614:	ldr	x0, [x19, #16]
    b618:	add	x0, x20, x0
    b61c:	b	b628 <gzseek64@@ZLIB_1.2.3.3+0x160>
    b620:	tbz	x20, #63, b5c4 <gzseek64@@ZLIB_1.2.3.3+0xfc>
    b624:	mov	x0, #0xffffffffffffffff    	// #-1
    b628:	ldp	x19, x20, [sp, #16]
    b62c:	ldp	x29, x30, [sp], #32
    b630:	ret

000000000000b634 <gzseek@@Base>:
    b634:	b	23d0 <gzseek64@plt>
    b638:	stp	x29, x30, [sp, #-64]!
    b63c:	mov	x29, sp
    b640:	stp	x19, x20, [sp, #16]
    b644:	mov	x20, x0
    b648:	mov	x19, x3
    b64c:	stp	x21, x22, [sp, #32]
    b650:	mov	x22, x1
    b654:	mov	w21, w2
    b658:	str	wzr, [x3]
    b65c:	str	x23, [sp, #48]
    b660:	mov	w23, #0x40000000            	// #1073741824
    b664:	ldr	w1, [x19]
    b668:	ldr	w0, [x20, #28]
    b66c:	sub	w2, w21, w1
    b670:	cmp	w2, w23
    b674:	add	x1, x22, w1, uxtw
    b678:	csel	w2, w2, w23, ls  // ls = plast
    b67c:	bl	25e0 <read@plt>
    b680:	mov	x3, x0
    b684:	cmp	w0, #0x0
    b688:	b.le	b6b8 <gzseek@@Base+0x84>
    b68c:	ldr	w0, [x19]
    b690:	add	w3, w0, w3
    b694:	str	w3, [x19]
    b698:	cmp	w3, w21
    b69c:	b.cc	b664 <gzseek@@Base+0x30>  // b.lo, b.ul, b.last
    b6a0:	mov	w0, #0x0                   	// #0
    b6a4:	ldp	x19, x20, [sp, #16]
    b6a8:	ldp	x21, x22, [sp, #32]
    b6ac:	ldr	x23, [sp, #48]
    b6b0:	ldp	x29, x30, [sp], #64
    b6b4:	ret
    b6b8:	cbz	w0, b6e0 <gzseek@@Base+0xac>
    b6bc:	bl	2650 <__errno_location@plt>
    b6c0:	ldr	w0, [x0]
    b6c4:	bl	2500 <strerror@plt>
    b6c8:	mov	x2, x0
    b6cc:	mov	w1, #0xffffffff            	// #-1
    b6d0:	mov	x0, x20
    b6d4:	bl	afa4 <gzerror@@Base+0x5c>
    b6d8:	mov	w0, #0xffffffff            	// #-1
    b6dc:	b	b6a4 <gzseek@@Base+0x70>
    b6e0:	mov	w1, #0x1                   	// #1
    b6e4:	str	w1, [x20, #80]
    b6e8:	b	b6a4 <gzseek@@Base+0x70>
    b6ec:	stp	x29, x30, [sp, #-48]!
    b6f0:	mov	x29, sp
    b6f4:	stp	x19, x20, [sp, #16]
    b6f8:	mov	x19, x0
    b6fc:	ldr	w0, [x0, #108]
    b700:	cmp	w0, #0x0
    b704:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    b708:	b.ne	b798 <gzseek@@Base+0x164>  // b.any
    b70c:	ldr	w0, [x19, #80]
    b710:	cbnz	w0, b790 <gzseek@@Base+0x15c>
    b714:	ldr	w1, [x19, #128]
    b718:	add	x20, x19, #0x78
    b71c:	cbnz	w1, b754 <gzseek@@Base+0x120>
    b720:	ldr	x1, [x19, #48]
    b724:	add	x3, sp, #0x2c
    b728:	ldr	w0, [x20, #8]
    b72c:	ldr	w2, [x19, #40]
    b730:	add	x1, x1, w0, uxtw
    b734:	sub	w2, w2, w0
    b738:	mov	x0, x19
    b73c:	bl	b638 <gzseek@@Base+0x4>
    b740:	cmn	w0, #0x1
    b744:	b.ne	b778 <gzseek@@Base+0x144>  // b.any
    b748:	ldp	x19, x20, [sp, #16]
    b74c:	ldp	x29, x30, [sp], #48
    b750:	ret
    b754:	ldr	x2, [x19, #48]
    b758:	mov	x0, #0x0                   	// #0
    b75c:	ldr	x4, [x19, #120]
    b760:	ldrb	w3, [x4, x0]
    b764:	strb	w3, [x2, x0]
    b768:	add	x0, x0, #0x1
    b76c:	cmp	w1, w0
    b770:	b.ne	b760 <gzseek@@Base+0x12c>  // b.any
    b774:	b	b720 <gzseek@@Base+0xec>
    b778:	ldr	w0, [x20, #8]
    b77c:	ldr	w1, [sp, #44]
    b780:	add	w0, w0, w1
    b784:	str	w0, [x20, #8]
    b788:	ldr	x0, [x19, #48]
    b78c:	str	x0, [x19, #120]
    b790:	mov	w0, #0x0                   	// #0
    b794:	b	b748 <gzseek@@Base+0x114>
    b798:	mov	w0, #0xffffffff            	// #-1
    b79c:	b	b748 <gzseek@@Base+0x114>
    b7a0:	stp	x29, x30, [sp, #-48]!
    b7a4:	mov	x29, sp
    b7a8:	stp	x19, x20, [sp, #16]
    b7ac:	mov	x19, x0
    b7b0:	add	x20, x0, #0x78
    b7b4:	ldr	w0, [x0, #40]
    b7b8:	stp	x21, x22, [sp, #32]
    b7bc:	cbnz	w0, b864 <gzseek@@Base+0x230>
    b7c0:	ldr	w22, [x19, #44]
    b7c4:	mov	w0, w22
    b7c8:	bl	2460 <malloc@plt>
    b7cc:	mov	x21, x0
    b7d0:	str	x21, [x19, #48]
    b7d4:	lsl	w0, w22, #1
    b7d8:	bl	2460 <malloc@plt>
    b7dc:	str	x0, [x19, #56]
    b7e0:	cbz	x21, b7e8 <gzseek@@Base+0x1b4>
    b7e4:	cbnz	x0, b81c <gzseek@@Base+0x1e8>
    b7e8:	bl	2570 <free@plt>
    b7ec:	mov	x0, x21
    b7f0:	bl	2570 <free@plt>
    b7f4:	mov	x0, x19
    b7f8:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b7fc:	mov	w1, #0xfffffffc            	// #-4
    b800:	add	x2, x2, #0xca0
    b804:	bl	afa4 <gzerror@@Base+0x5c>
    b808:	mov	w0, #0xffffffff            	// #-1
    b80c:	ldp	x19, x20, [sp, #16]
    b810:	ldp	x21, x22, [sp, #32]
    b814:	ldp	x29, x30, [sp], #48
    b818:	ret
    b81c:	str	w22, [x19, #40]
    b820:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b824:	str	xzr, [x19, #120]
    b828:	add	x2, x2, #0xc30
    b82c:	str	wzr, [x19, #128]
    b830:	mov	x0, x20
    b834:	stp	xzr, xzr, [x19, #184]
    b838:	mov	w3, #0x70                  	// #112
    b83c:	mov	w1, #0x1f                  	// #31
    b840:	str	xzr, [x19, #200]
    b844:	bl	2600 <inflateInit2_@plt>
    b848:	cbz	w0, b864 <gzseek@@Base+0x230>
    b84c:	ldr	x0, [x19, #56]
    b850:	bl	2570 <free@plt>
    b854:	ldr	x0, [x19, #48]
    b858:	bl	2570 <free@plt>
    b85c:	str	wzr, [x19, #40]
    b860:	b	b7f4 <gzseek@@Base+0x1c0>
    b864:	ldr	w0, [x20, #8]
    b868:	cmp	w0, #0x1
    b86c:	b.ls	b898 <gzseek@@Base+0x264>  // b.plast
    b870:	ldr	w2, [x20, #8]
    b874:	cmp	w2, #0x1
    b878:	b.hi	b8b8 <gzseek@@Base+0x284>  // b.pmore
    b87c:	ldr	w0, [x19, #64]
    b880:	cbnz	w0, b8e8 <gzseek@@Base+0x2b4>
    b884:	str	wzr, [x20, #8]
    b888:	mov	w1, #0x1                   	// #1
    b88c:	str	wzr, [x19]
    b890:	str	w1, [x19, #80]
    b894:	b	b80c <gzseek@@Base+0x1d8>
    b898:	mov	x0, x19
    b89c:	bl	b6ec <gzseek@@Base+0xb8>
    b8a0:	cmn	w0, #0x1
    b8a4:	b.eq	b80c <gzseek@@Base+0x1d8>  // b.none
    b8a8:	ldr	w0, [x20, #8]
    b8ac:	cbnz	w0, b870 <gzseek@@Base+0x23c>
    b8b0:	mov	w0, #0x0                   	// #0
    b8b4:	b	b80c <gzseek@@Base+0x1d8>
    b8b8:	ldr	x0, [x19, #120]
    b8bc:	ldrb	w1, [x0]
    b8c0:	cmp	w1, #0x1f
    b8c4:	b.ne	b87c <gzseek@@Base+0x248>  // b.any
    b8c8:	ldrb	w0, [x0, #1]
    b8cc:	cmp	w0, #0x8b
    b8d0:	b.ne	b87c <gzseek@@Base+0x248>  // b.any
    b8d4:	mov	x0, x20
    b8d8:	bl	2610 <inflateReset@plt>
    b8dc:	mov	x0, #0x200000000           	// #8589934592
    b8e0:	str	x0, [x19, #64]
    b8e4:	b	b8b0 <gzseek@@Base+0x27c>
    b8e8:	ldr	x0, [x19, #56]
    b8ec:	str	x0, [x19, #8]
    b8f0:	cbz	w2, b90c <gzseek@@Base+0x2d8>
    b8f4:	ldr	x1, [x19, #120]
    b8f8:	mov	w2, w2
    b8fc:	bl	23a0 <memcpy@plt>
    b900:	ldr	w0, [x20, #8]
    b904:	str	w0, [x19]
    b908:	str	wzr, [x20, #8]
    b90c:	mov	x0, #0x100000001           	// #4294967297
    b910:	b	b8e0 <gzseek@@Base+0x2ac>
    b914:	stp	x29, x30, [sp, #-48]!
    b918:	mov	x29, sp
    b91c:	stp	x21, x22, [sp, #32]
    b920:	add	x21, x0, #0x78
    b924:	ldr	w22, [x21, #32]
    b928:	stp	x19, x20, [sp, #16]
    b92c:	mov	x19, x0
    b930:	mov	w20, #0x0                   	// #0
    b934:	ldr	w0, [x21, #8]
    b938:	cbnz	w0, b994 <gzseek@@Base+0x360>
    b93c:	mov	x0, x19
    b940:	bl	b6ec <gzseek@@Base+0xb8>
    b944:	cmn	w0, #0x1
    b948:	b.eq	b9c8 <gzseek@@Base+0x394>  // b.none
    b94c:	ldr	w0, [x21, #8]
    b950:	cbnz	w0, b994 <gzseek@@Base+0x360>
    b954:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b958:	mov	x0, x19
    b95c:	add	x2, x2, #0xcde
    b960:	mov	w1, #0xfffffffb            	// #-5
    b964:	bl	afa4 <gzerror@@Base+0x5c>
    b968:	ldr	w0, [x21, #32]
    b96c:	cmp	w20, #0x1
    b970:	ldr	x1, [x21, #24]
    b974:	sub	w0, w22, w0
    b978:	str	w0, [x19]
    b97c:	sub	x0, x1, w0, uxtw
    b980:	str	x0, [x19, #8]
    b984:	b.ne	b98c <gzseek@@Base+0x358>  // b.any
    b988:	str	wzr, [x19, #68]
    b98c:	mov	w0, #0x0                   	// #0
    b990:	b	b9c8 <gzseek@@Base+0x394>
    b994:	mov	x0, x21
    b998:	mov	w1, #0x0                   	// #0
    b99c:	bl	23f0 <inflate@plt>
    b9a0:	cmp	w0, #0x2
    b9a4:	mov	w20, w0
    b9a8:	ccmn	w0, #0x2, #0x4, ne  // ne = any
    b9ac:	b.ne	b9d8 <gzseek@@Base+0x3a4>  // b.any
    b9b0:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b9b4:	add	x2, x2, #0xcf5
    b9b8:	mov	w1, #0xfffffffe            	// #-2
    b9bc:	mov	x0, x19
    b9c0:	bl	afa4 <gzerror@@Base+0x5c>
    b9c4:	mov	w0, #0xffffffff            	// #-1
    b9c8:	ldp	x19, x20, [sp, #16]
    b9cc:	ldp	x21, x22, [sp, #32]
    b9d0:	ldp	x29, x30, [sp], #48
    b9d4:	ret
    b9d8:	cmn	w0, #0x4
    b9dc:	b.ne	b9f0 <gzseek@@Base+0x3bc>  // b.any
    b9e0:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    b9e4:	mov	w1, w0
    b9e8:	add	x2, x2, #0xca0
    b9ec:	b	b9bc <gzseek@@Base+0x388>
    b9f0:	cmn	w0, #0x3
    b9f4:	b.ne	ba10 <gzseek@@Base+0x3dc>  // b.any
    b9f8:	ldr	x2, [x21, #48]
    b9fc:	cbnz	x2, ba08 <gzseek@@Base+0x3d4>
    ba00:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    ba04:	add	x2, x2, #0xcc8
    ba08:	mov	w1, #0xfffffffd            	// #-3
    ba0c:	b	b9bc <gzseek@@Base+0x388>
    ba10:	ldr	w0, [x21, #32]
    ba14:	cbz	w0, b968 <gzseek@@Base+0x334>
    ba18:	cmp	w20, #0x1
    ba1c:	b.ne	b934 <gzseek@@Base+0x300>  // b.any
    ba20:	b	b968 <gzseek@@Base+0x334>
    ba24:	stp	x29, x30, [sp, #-32]!
    ba28:	mov	x29, sp
    ba2c:	str	x19, [sp, #16]
    ba30:	mov	x19, x0
    ba34:	ldr	w0, [x19, #68]
    ba38:	cmp	w0, #0x1
    ba3c:	b.eq	ba7c <gzseek@@Base+0x448>  // b.none
    ba40:	cmp	w0, #0x2
    ba44:	b.eq	baa8 <gzseek@@Base+0x474>  // b.none
    ba48:	cbnz	w0, bacc <gzseek@@Base+0x498>
    ba4c:	mov	x0, x19
    ba50:	bl	b7a0 <gzseek@@Base+0x16c>
    ba54:	cmn	w0, #0x1
    ba58:	b.ne	ba6c <gzseek@@Base+0x438>  // b.any
    ba5c:	mov	w0, #0xffffffff            	// #-1
    ba60:	ldr	x19, [sp, #16]
    ba64:	ldp	x29, x30, [sp], #32
    ba68:	ret
    ba6c:	ldr	w0, [x19, #68]
    ba70:	cbnz	w0, bacc <gzseek@@Base+0x498>
    ba74:	mov	w0, #0x0                   	// #0
    ba78:	b	ba60 <gzseek@@Base+0x42c>
    ba7c:	ldr	x1, [x19, #56]
    ba80:	mov	x3, x19
    ba84:	ldr	w2, [x19, #40]
    ba88:	mov	x0, x19
    ba8c:	lsl	w2, w2, #1
    ba90:	bl	b638 <gzseek@@Base+0x4>
    ba94:	cmn	w0, #0x1
    ba98:	b.eq	ba5c <gzseek@@Base+0x428>  // b.none
    ba9c:	ldr	x0, [x19, #56]
    baa0:	str	x0, [x19, #8]
    baa4:	b	ba74 <gzseek@@Base+0x440>
    baa8:	ldr	w0, [x19, #40]
    baac:	lsl	w0, w0, #1
    bab0:	str	w0, [x19, #152]
    bab4:	ldr	x0, [x19, #56]
    bab8:	str	x0, [x19, #144]
    babc:	mov	x0, x19
    bac0:	bl	b914 <gzseek@@Base+0x2e0>
    bac4:	cmn	w0, #0x1
    bac8:	b.eq	ba5c <gzseek@@Base+0x428>  // b.none
    bacc:	ldr	w0, [x19]
    bad0:	cbnz	w0, ba74 <gzseek@@Base+0x440>
    bad4:	ldr	w0, [x19, #80]
    bad8:	cbz	w0, ba34 <gzseek@@Base+0x400>
    badc:	ldr	w0, [x19, #128]
    bae0:	cbnz	w0, ba34 <gzseek@@Base+0x400>
    bae4:	b	ba74 <gzseek@@Base+0x440>
    bae8:	stp	x29, x30, [sp, #-32]!
    baec:	mov	x29, sp
    baf0:	stp	x19, x20, [sp, #16]
    baf4:	mov	x19, x0
    baf8:	mov	x20, x1
    bafc:	cbnz	x20, bb08 <gzseek@@Base+0x4d4>
    bb00:	mov	w0, #0x0                   	// #0
    bb04:	b	bb60 <gzseek@@Base+0x52c>
    bb08:	ldr	w0, [x19]
    bb0c:	cbz	w0, bb40 <gzseek@@Base+0x50c>
    bb10:	cmp	x20, w0, uxtw
    bb14:	csel	w1, w0, w20, ge  // ge = tcont
    bb18:	sub	w0, w0, w1
    bb1c:	str	w0, [x19]
    bb20:	ldr	x0, [x19, #8]
    bb24:	sub	x20, x20, w1, uxtw
    bb28:	add	x0, x0, w1, uxtw
    bb2c:	str	x0, [x19, #8]
    bb30:	ldr	x0, [x19, #16]
    bb34:	add	x0, x0, w1, uxtw
    bb38:	str	x0, [x19, #16]
    bb3c:	b	bafc <gzseek@@Base+0x4c8>
    bb40:	ldr	w0, [x19, #80]
    bb44:	cbz	w0, bb50 <gzseek@@Base+0x51c>
    bb48:	ldr	w0, [x19, #128]
    bb4c:	cbz	w0, bb00 <gzseek@@Base+0x4cc>
    bb50:	mov	x0, x19
    bb54:	bl	ba24 <gzseek@@Base+0x3f0>
    bb58:	cmn	w0, #0x1
    bb5c:	b.ne	bafc <gzseek@@Base+0x4c8>  // b.any
    bb60:	ldp	x19, x20, [sp, #16]
    bb64:	ldp	x29, x30, [sp], #32
    bb68:	ret
    bb6c:	stp	x29, x30, [sp, #-112]!
    bb70:	mov	x29, sp
    bb74:	stp	x19, x20, [sp, #16]
    bb78:	stp	x21, x22, [sp, #32]
    bb7c:	stp	x23, x24, [sp, #48]
    bb80:	stp	x25, x26, [sp, #64]
    bb84:	str	x27, [sp, #80]
    bb88:	cbnz	x2, bb94 <gzseek@@Base+0x560>
    bb8c:	mov	x22, #0x0                   	// #0
    bb90:	b	bc5c <gzseek@@Base+0x628>
    bb94:	mov	x21, x1
    bb98:	ldr	w1, [x0, #104]
    bb9c:	mov	x19, x0
    bba0:	mov	x20, x2
    bba4:	cbnz	w1, bc2c <gzseek@@Base+0x5f8>
    bba8:	add	x25, sp, #0x6c
    bbac:	mov	x22, #0x0                   	// #0
    bbb0:	mov	x23, #0xfffffffe            	// #4294967294
    bbb4:	mov	w24, #0xffffffff            	// #-1
    bbb8:	ldr	w0, [x19]
    bbbc:	cmp	x20, x23
    bbc0:	csel	w1, w20, w24, ls  // ls = plast
    bbc4:	str	w1, [sp, #108]
    bbc8:	cbz	w0, bc44 <gzseek@@Base+0x610>
    bbcc:	cmp	w0, w1
    bbd0:	b.cs	bbd8 <gzseek@@Base+0x5a4>  // b.hs, b.nlast
    bbd4:	str	w0, [sp, #108]
    bbd8:	ldr	x1, [x19, #8]
    bbdc:	mov	x0, x21
    bbe0:	ldr	w26, [sp, #108]
    bbe4:	mov	w27, w26
    bbe8:	mov	x2, x27
    bbec:	bl	23a0 <memcpy@plt>
    bbf0:	ldr	x0, [x19, #8]
    bbf4:	add	x0, x0, x27
    bbf8:	str	x0, [x19, #8]
    bbfc:	ldr	w0, [x19]
    bc00:	sub	w0, w0, w26
    bc04:	str	w0, [x19]
    bc08:	ldr	x1, [x19, #16]
    bc0c:	ldr	w0, [sp, #108]
    bc10:	add	x1, x1, x0
    bc14:	str	x1, [x19, #16]
    bc18:	add	x21, x21, x0
    bc1c:	add	x22, x22, x0
    bc20:	subs	x20, x20, x0
    bc24:	b.ne	bbb8 <gzseek@@Base+0x584>  // b.any
    bc28:	b	bc5c <gzseek@@Base+0x628>
    bc2c:	ldr	x1, [x0, #96]
    bc30:	str	wzr, [x0, #104]
    bc34:	bl	bae8 <gzseek@@Base+0x4b4>
    bc38:	cmn	w0, #0x1
    bc3c:	b.ne	bba8 <gzseek@@Base+0x574>  // b.any
    bc40:	b	bb8c <gzseek@@Base+0x558>
    bc44:	ldr	w0, [x19, #80]
    bc48:	cbz	w0, bc7c <gzseek@@Base+0x648>
    bc4c:	ldr	w0, [x19, #128]
    bc50:	cbnz	w0, bc7c <gzseek@@Base+0x648>
    bc54:	mov	w0, #0x1                   	// #1
    bc58:	str	w0, [x19, #84]
    bc5c:	mov	x0, x22
    bc60:	ldp	x19, x20, [sp, #16]
    bc64:	ldp	x21, x22, [sp, #32]
    bc68:	ldp	x23, x24, [sp, #48]
    bc6c:	ldp	x25, x26, [sp, #64]
    bc70:	ldr	x27, [sp, #80]
    bc74:	ldp	x29, x30, [sp], #112
    bc78:	ret
    bc7c:	ldr	w0, [x19, #68]
    bc80:	cbz	w0, bc94 <gzseek@@Base+0x660>
    bc84:	ldr	w1, [x19, #40]
    bc88:	ldr	w2, [sp, #108]
    bc8c:	cmp	w2, w1, lsl #1
    bc90:	b.cs	bca8 <gzseek@@Base+0x674>  // b.hs, b.nlast
    bc94:	mov	x0, x19
    bc98:	bl	ba24 <gzseek@@Base+0x3f0>
    bc9c:	cmn	w0, #0x1
    bca0:	b.ne	bbb8 <gzseek@@Base+0x584>  // b.any
    bca4:	b	bb8c <gzseek@@Base+0x558>
    bca8:	cmp	w0, #0x1
    bcac:	b.ne	bccc <gzseek@@Base+0x698>  // b.any
    bcb0:	mov	x3, x25
    bcb4:	mov	x1, x21
    bcb8:	mov	x0, x19
    bcbc:	bl	b638 <gzseek@@Base+0x4>
    bcc0:	cmn	w0, #0x1
    bcc4:	b.ne	bc08 <gzseek@@Base+0x5d4>  // b.any
    bcc8:	b	bb8c <gzseek@@Base+0x558>
    bccc:	str	x21, [x19, #144]
    bcd0:	mov	x0, x19
    bcd4:	str	w2, [x19, #152]
    bcd8:	bl	b914 <gzseek@@Base+0x2e0>
    bcdc:	cmn	w0, #0x1
    bce0:	b.eq	bb8c <gzseek@@Base+0x558>  // b.none
    bce4:	ldr	w0, [x19]
    bce8:	str	wzr, [x19]
    bcec:	str	w0, [sp, #108]
    bcf0:	b	bc08 <gzseek@@Base+0x5d4>

000000000000bcf4 <gzread@@Base>:
    bcf4:	cbnz	x0, bd00 <gzread@@Base+0xc>
    bcf8:	mov	w0, #0xffffffff            	// #-1
    bcfc:	ret
    bd00:	stp	x29, x30, [sp, #-32]!
    bd04:	mov	w3, #0x1c4f                	// #7247
    bd08:	mov	x29, sp
    bd0c:	ldr	w4, [x0, #24]
    bd10:	str	x19, [sp, #16]
    bd14:	mov	x19, x0
    bd18:	cmp	w4, w3
    bd1c:	b.ne	bd44 <gzread@@Base+0x50>  // b.any
    bd20:	ldr	w3, [x0, #108]
    bd24:	cmp	w3, #0x0
    bd28:	ccmn	w3, #0x5, #0x4, ne  // ne = any
    bd2c:	b.ne	bd44 <gzread@@Base+0x50>  // b.any
    bd30:	tbz	w2, #31, bd54 <gzread@@Base+0x60>
    bd34:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    bd38:	mov	w1, #0xfffffffe            	// #-2
    bd3c:	add	x2, x2, #0xd1c
    bd40:	bl	afa4 <gzerror@@Base+0x5c>
    bd44:	mov	w0, #0xffffffff            	// #-1
    bd48:	ldr	x19, [sp, #16]
    bd4c:	ldp	x29, x30, [sp], #32
    bd50:	ret
    bd54:	mov	w2, w2
    bd58:	bl	bb6c <gzseek@@Base+0x538>
    bd5c:	cbnz	w0, bd48 <gzread@@Base+0x54>
    bd60:	ldr	w1, [x19, #108]
    bd64:	cbz	w1, bd48 <gzread@@Base+0x54>
    bd68:	cmn	w1, #0x5
    bd6c:	b.eq	bd48 <gzread@@Base+0x54>  // b.none
    bd70:	b	bd44 <gzread@@Base+0x50>

000000000000bd74 <gzfread@@ZLIB_1.2.9>:
    bd74:	cbz	x3, be00 <gzfread@@ZLIB_1.2.9+0x8c>
    bd78:	stp	x29, x30, [sp, #-32]!
    bd7c:	mov	x4, x0
    bd80:	mov	x0, x3
    bd84:	mov	x29, sp
    bd88:	ldr	w3, [x3, #24]
    bd8c:	str	x19, [sp, #16]
    bd90:	mov	x19, x1
    bd94:	mov	x1, x2
    bd98:	mov	w2, #0x1c4f                	// #7247
    bd9c:	cmp	w3, w2
    bda0:	b.ne	bdd8 <gzfread@@ZLIB_1.2.9+0x64>  // b.any
    bda4:	ldr	w2, [x0, #108]
    bda8:	cmp	w2, #0x0
    bdac:	ccmn	w2, #0x5, #0x4, ne  // ne = any
    bdb0:	b.ne	bdd8 <gzfread@@ZLIB_1.2.9+0x64>  // b.any
    bdb4:	cbz	x19, bdd8 <gzfread@@ZLIB_1.2.9+0x64>
    bdb8:	mul	x2, x1, x19
    bdbc:	udiv	x3, x2, x19
    bdc0:	cmp	x3, x1
    bdc4:	b.eq	bde0 <gzfread@@ZLIB_1.2.9+0x6c>  // b.none
    bdc8:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    bdcc:	mov	w1, #0xfffffffe            	// #-2
    bdd0:	add	x2, x2, #0xd3b
    bdd4:	bl	afa4 <gzerror@@Base+0x5c>
    bdd8:	mov	x2, #0x0                   	// #0
    bddc:	b	bdf0 <gzfread@@ZLIB_1.2.9+0x7c>
    bde0:	cbz	x2, bdf0 <gzfread@@ZLIB_1.2.9+0x7c>
    bde4:	mov	x1, x4
    bde8:	bl	bb6c <gzseek@@Base+0x538>
    bdec:	udiv	x2, x0, x19
    bdf0:	mov	x0, x2
    bdf4:	ldr	x19, [sp, #16]
    bdf8:	ldp	x29, x30, [sp], #32
    bdfc:	ret
    be00:	mov	x2, #0x0                   	// #0
    be04:	mov	x0, x2
    be08:	ret

000000000000be0c <gzgetc@@Base>:
    be0c:	cbz	x0, be8c <gzgetc@@Base+0x80>
    be10:	ldr	w3, [x0, #24]
    be14:	mov	w2, #0x1c4f                	// #7247
    be18:	mov	x1, x0
    be1c:	cmp	w3, w2
    be20:	b.ne	be8c <gzgetc@@Base+0x80>  // b.any
    be24:	ldr	w2, [x0, #108]
    be28:	cmp	w2, #0x0
    be2c:	ccmn	w2, #0x5, #0x4, ne  // ne = any
    be30:	b.ne	be8c <gzgetc@@Base+0x80>  // b.any
    be34:	ldr	w2, [x0]
    be38:	cbz	w2, be64 <gzgetc@@Base+0x58>
    be3c:	ldr	x0, [x0, #16]
    be40:	sub	w2, w2, #0x1
    be44:	str	w2, [x1]
    be48:	add	x0, x0, #0x1
    be4c:	str	x0, [x1, #16]
    be50:	ldr	x0, [x1, #8]
    be54:	add	x2, x0, #0x1
    be58:	str	x2, [x1, #8]
    be5c:	ldrb	w0, [x0]
    be60:	ret
    be64:	stp	x29, x30, [sp, #-32]!
    be68:	mov	x2, #0x1                   	// #1
    be6c:	mov	x29, sp
    be70:	add	x1, sp, #0x18
    be74:	bl	bb6c <gzseek@@Base+0x538>
    be78:	ldrb	w1, [sp, #24]
    be7c:	cmp	w0, #0x0
    be80:	ldp	x29, x30, [sp], #32
    be84:	csinv	w0, w1, wzr, gt
    be88:	ret
    be8c:	mov	w0, #0xffffffff            	// #-1
    be90:	ret

000000000000be94 <gzgetc_@@ZLIB_1.2.5.2>:
    be94:	b	2410 <gzgetc@plt>

000000000000be98 <gzungetc@@ZLIB_1.2.0.2>:
    be98:	stp	x29, x30, [sp, #-32]!
    be9c:	mov	x29, sp
    bea0:	stp	x19, x20, [sp, #16]
    bea4:	cbnz	x1, bebc <gzungetc@@ZLIB_1.2.0.2+0x24>
    bea8:	mov	w20, #0xffffffff            	// #-1
    beac:	mov	w0, w20
    beb0:	ldp	x19, x20, [sp, #16]
    beb4:	ldp	x29, x30, [sp], #32
    beb8:	ret
    bebc:	mov	x19, x1
    bec0:	ldr	w1, [x1, #24]
    bec4:	mov	w20, w0
    bec8:	mov	w0, #0x1c4f                	// #7247
    becc:	cmp	w1, w0
    bed0:	b.ne	bea8 <gzungetc@@ZLIB_1.2.0.2+0x10>  // b.any
    bed4:	ldr	w0, [x19, #108]
    bed8:	cmp	w0, #0x0
    bedc:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    bee0:	b.ne	bea8 <gzungetc@@ZLIB_1.2.0.2+0x10>  // b.any
    bee4:	ldr	w0, [x19, #104]
    bee8:	cbnz	w0, bf30 <gzungetc@@ZLIB_1.2.0.2+0x98>
    beec:	tbnz	w20, #31, bea8 <gzungetc@@ZLIB_1.2.0.2+0x10>
    bef0:	ldr	w0, [x19]
    bef4:	ldr	w1, [x19, #40]
    bef8:	lsl	w1, w1, #1
    befc:	cbnz	w0, bf4c <gzungetc@@ZLIB_1.2.0.2+0xb4>
    bf00:	mov	w0, #0x1                   	// #1
    bf04:	str	w0, [x19]
    bf08:	ldr	x0, [x19, #56]
    bf0c:	sub	x1, x1, #0x1
    bf10:	add	x2, x0, x1
    bf14:	str	x2, [x19, #8]
    bf18:	strb	w20, [x0, x1]
    bf1c:	ldr	x0, [x19, #16]
    bf20:	str	wzr, [x19, #84]
    bf24:	sub	x0, x0, #0x1
    bf28:	str	x0, [x19, #16]
    bf2c:	b	beac <gzungetc@@ZLIB_1.2.0.2+0x14>
    bf30:	ldr	x1, [x19, #96]
    bf34:	str	wzr, [x19, #104]
    bf38:	mov	x0, x19
    bf3c:	bl	bae8 <gzseek@@Base+0x4b4>
    bf40:	cmn	w0, #0x1
    bf44:	b.ne	beec <gzungetc@@ZLIB_1.2.0.2+0x54>  // b.any
    bf48:	b	bea8 <gzungetc@@ZLIB_1.2.0.2+0x10>
    bf4c:	cmp	w0, w1
    bf50:	b.ne	bf6c <gzungetc@@ZLIB_1.2.0.2+0xd4>  // b.any
    bf54:	mov	x0, x19
    bf58:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    bf5c:	mov	w1, #0xfffffffd            	// #-3
    bf60:	add	x2, x2, #0xd5c
    bf64:	bl	afa4 <gzerror@@Base+0x5c>
    bf68:	b	bea8 <gzungetc@@ZLIB_1.2.0.2+0x10>
    bf6c:	ldr	x2, [x19, #8]
    bf70:	ldr	x3, [x19, #56]
    bf74:	cmp	x2, x3
    bf78:	b.ne	bf98 <gzungetc@@ZLIB_1.2.0.2+0x100>  // b.any
    bf7c:	add	x0, x2, w0, uxtw
    bf80:	add	x1, x2, w1, uxtw
    bf84:	ldr	x2, [x19, #56]
    bf88:	sub	x3, x1, #0x1
    bf8c:	cmp	x2, x0
    bf90:	b.cc	bfb8 <gzungetc@@ZLIB_1.2.0.2+0x120>  // b.lo, b.ul, b.last
    bf94:	str	x1, [x19, #8]
    bf98:	ldr	w0, [x19]
    bf9c:	add	w0, w0, #0x1
    bfa0:	str	w0, [x19]
    bfa4:	ldr	x0, [x19, #8]
    bfa8:	sub	x1, x0, #0x1
    bfac:	str	x1, [x19, #8]
    bfb0:	sturb	w20, [x0, #-1]
    bfb4:	b	bf1c <gzungetc@@ZLIB_1.2.0.2+0x84>
    bfb8:	ldrb	w2, [x0, #-1]!
    bfbc:	sturb	w2, [x1, #-1]
    bfc0:	mov	x1, x3
    bfc4:	b	bf84 <gzungetc@@ZLIB_1.2.0.2+0xec>

000000000000bfc8 <gzgets@@Base>:
    bfc8:	cmp	x0, #0x0
    bfcc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    bfd0:	b.ne	bfdc <gzgets@@Base+0x14>  // b.any
    bfd4:	mov	x0, #0x0                   	// #0
    bfd8:	ret
    bfdc:	stp	x29, x30, [sp, #-80]!
    bfe0:	cmp	w2, #0x0
    bfe4:	mov	x29, sp
    bfe8:	stp	x19, x20, [sp, #16]
    bfec:	mov	w20, w2
    bff0:	stp	x21, x22, [sp, #32]
    bff4:	stp	x23, x24, [sp, #48]
    bff8:	stp	x25, x26, [sp, #64]
    bffc:	b.le	c038 <gzgets@@Base+0x70>
    c000:	ldr	w2, [x0, #24]
    c004:	mov	x21, x1
    c008:	mov	x19, x0
    c00c:	mov	w1, #0x1c4f                	// #7247
    c010:	cmp	w2, w1
    c014:	b.ne	c038 <gzgets@@Base+0x70>  // b.any
    c018:	ldr	w1, [x0, #108]
    c01c:	cmp	w1, #0x0
    c020:	ccmn	w1, #0x5, #0x4, ne  // ne = any
    c024:	b.ne	c038 <gzgets@@Base+0x70>  // b.any
    c028:	ldr	w1, [x0, #104]
    c02c:	cbnz	w1, c054 <gzgets@@Base+0x8c>
    c030:	subs	w20, w20, #0x1
    c034:	b.ne	c06c <gzgets@@Base+0xa4>  // b.any
    c038:	mov	x0, #0x0                   	// #0
    c03c:	ldp	x19, x20, [sp, #16]
    c040:	ldp	x21, x22, [sp, #32]
    c044:	ldp	x23, x24, [sp, #48]
    c048:	ldp	x25, x26, [sp, #64]
    c04c:	ldp	x29, x30, [sp], #80
    c050:	ret
    c054:	ldr	x1, [x0, #96]
    c058:	str	wzr, [x0, #104]
    c05c:	bl	bae8 <gzseek@@Base+0x4b4>
    c060:	cmn	w0, #0x1
    c064:	b.ne	c030 <gzgets@@Base+0x68>  // b.any
    c068:	b	c038 <gzgets@@Base+0x70>
    c06c:	mov	x23, x21
    c070:	ldr	w0, [x19]
    c074:	cbz	w0, c09c <gzgets@@Base+0xd4>
    c078:	ldr	w2, [x19]
    c07c:	cbnz	w2, c0b0 <gzgets@@Base+0xe8>
    c080:	mov	w0, #0x1                   	// #1
    c084:	str	w0, [x19, #84]
    c088:	cmp	x23, x21
    c08c:	b.eq	c038 <gzgets@@Base+0x70>  // b.none
    c090:	mov	x0, x21
    c094:	strb	wzr, [x23]
    c098:	b	c03c <gzgets@@Base+0x74>
    c09c:	mov	x0, x19
    c0a0:	bl	ba24 <gzseek@@Base+0x3f0>
    c0a4:	cmn	w0, #0x1
    c0a8:	b.ne	c078 <gzgets@@Base+0xb0>  // b.any
    c0ac:	b	c038 <gzgets@@Base+0x70>
    c0b0:	cmp	w2, w20
    c0b4:	mov	w1, #0xa                   	// #10
    c0b8:	ldr	x26, [x19, #8]
    c0bc:	csel	w22, w2, w20, ls  // ls = plast
    c0c0:	csel	w2, w2, w20, ls  // ls = plast
    c0c4:	mov	x0, x26
    c0c8:	bl	25f0 <memchr@plt>
    c0cc:	mov	x24, x0
    c0d0:	cbz	x0, c0dc <gzgets@@Base+0x114>
    c0d4:	sub	x22, x0, x26
    c0d8:	add	w22, w22, #0x1
    c0dc:	mov	w25, w22
    c0e0:	mov	x0, x23
    c0e4:	mov	x2, x25
    c0e8:	mov	x1, x26
    c0ec:	bl	23a0 <memcpy@plt>
    c0f0:	add	x23, x23, x25
    c0f4:	ldr	w0, [x19]
    c0f8:	subs	w20, w20, w22
    c0fc:	ccmp	x24, #0x0, #0x0, ne  // ne = any
    c100:	sub	w0, w0, w22
    c104:	str	w0, [x19]
    c108:	ldr	x0, [x19, #8]
    c10c:	add	x0, x0, x25
    c110:	str	x0, [x19, #8]
    c114:	ldr	x0, [x19, #16]
    c118:	add	x0, x0, x25
    c11c:	str	x0, [x19, #16]
    c120:	b.eq	c070 <gzgets@@Base+0xa8>  // b.none
    c124:	b	c088 <gzgets@@Base+0xc0>

000000000000c128 <gzdirect@@ZLIB_1.2.2.3>:
    c128:	cbz	x0, c170 <gzdirect@@ZLIB_1.2.2.3+0x48>
    c12c:	stp	x29, x30, [sp, #-32]!
    c130:	mov	w1, #0x1c4f                	// #7247
    c134:	mov	x29, sp
    c138:	ldr	w2, [x0, #24]
    c13c:	str	x19, [sp, #16]
    c140:	mov	x19, x0
    c144:	cmp	w2, w1
    c148:	b.ne	c160 <gzdirect@@ZLIB_1.2.2.3+0x38>  // b.any
    c14c:	ldr	w1, [x0, #68]
    c150:	cbnz	w1, c160 <gzdirect@@ZLIB_1.2.2.3+0x38>
    c154:	ldr	w1, [x0]
    c158:	cbnz	w1, c160 <gzdirect@@ZLIB_1.2.2.3+0x38>
    c15c:	bl	b7a0 <gzseek@@Base+0x16c>
    c160:	ldr	w0, [x19, #64]
    c164:	ldr	x19, [sp, #16]
    c168:	ldp	x29, x30, [sp], #32
    c16c:	ret
    c170:	mov	w0, #0x0                   	// #0
    c174:	ret

000000000000c178 <gzclose_r@@ZLIB_1.2.3.5>:
    c178:	stp	x29, x30, [sp, #-48]!
    c17c:	mov	x29, sp
    c180:	stp	x19, x20, [sp, #16]
    c184:	str	x21, [sp, #32]
    c188:	cbz	x0, c218 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    c18c:	mov	x19, x0
    c190:	mov	w0, #0x1c4f                	// #7247
    c194:	ldr	w1, [x19, #24]
    c198:	cmp	w1, w0
    c19c:	b.ne	c218 <gzclose_r@@ZLIB_1.2.3.5+0xa0>  // b.any
    c1a0:	ldr	w0, [x19, #40]
    c1a4:	cbz	w0, c1c0 <gzclose_r@@ZLIB_1.2.3.5+0x48>
    c1a8:	add	x0, x19, #0x78
    c1ac:	bl	2550 <inflateEnd@plt>
    c1b0:	ldr	x0, [x19, #56]
    c1b4:	bl	2570 <free@plt>
    c1b8:	ldr	x0, [x19, #48]
    c1bc:	bl	2570 <free@plt>
    c1c0:	ldr	w20, [x19, #108]
    c1c4:	cmn	w20, #0x5
    c1c8:	b.eq	c1d0 <gzclose_r@@ZLIB_1.2.3.5+0x58>  // b.none
    c1cc:	mov	w20, #0x0                   	// #0
    c1d0:	mov	x2, #0x0                   	// #0
    c1d4:	mov	w1, #0x0                   	// #0
    c1d8:	mov	x0, x19
    c1dc:	bl	afa4 <gzerror@@Base+0x5c>
    c1e0:	ldr	x0, [x19, #32]
    c1e4:	bl	2570 <free@plt>
    c1e8:	ldr	w0, [x19, #28]
    c1ec:	bl	2510 <close@plt>
    c1f0:	mov	w21, w0
    c1f4:	mov	x0, x19
    c1f8:	bl	2570 <free@plt>
    c1fc:	cmp	w21, #0x0
    c200:	csinv	w20, w20, wzr, eq  // eq = none
    c204:	mov	w0, w20
    c208:	ldp	x19, x20, [sp, #16]
    c20c:	ldr	x21, [sp, #32]
    c210:	ldp	x29, x30, [sp], #48
    c214:	ret
    c218:	mov	w20, #0xfffffffe            	// #-2
    c21c:	b	c204 <gzclose_r@@ZLIB_1.2.3.5+0x8c>
    c220:	stp	x29, x30, [sp, #-48]!
    c224:	mov	x29, sp
    c228:	stp	x19, x20, [sp, #16]
    c22c:	mov	x19, x0
    c230:	str	x21, [sp, #32]
    c234:	ldr	w21, [x0, #44]
    c238:	lsl	w0, w21, #1
    c23c:	bl	2460 <malloc@plt>
    c240:	str	x0, [x19, #48]
    c244:	cbnz	x0, c270 <gzclose_r@@ZLIB_1.2.3.5+0xf8>
    c248:	mov	x0, x19
    c24c:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    c250:	mov	w1, #0xfffffffc            	// #-4
    c254:	add	x2, x2, #0xca0
    c258:	bl	afa4 <gzerror@@Base+0x5c>
    c25c:	mov	w0, #0xffffffff            	// #-1
    c260:	ldp	x19, x20, [sp, #16]
    c264:	ldr	x21, [sp, #32]
    c268:	ldp	x29, x30, [sp], #48
    c26c:	ret
    c270:	mov	x20, x0
    c274:	ldr	w0, [x19, #64]
    c278:	cbnz	w0, c2dc <gzclose_r@@ZLIB_1.2.3.5+0x164>
    c27c:	mov	w0, w21
    c280:	bl	2460 <malloc@plt>
    c284:	str	x0, [x19, #56]
    c288:	cbnz	x0, c298 <gzclose_r@@ZLIB_1.2.3.5+0x120>
    c28c:	mov	x0, x20
    c290:	bl	2570 <free@plt>
    c294:	b	c248 <gzclose_r@@ZLIB_1.2.3.5+0xd0>
    c298:	add	x0, x19, #0x78
    c29c:	adrp	x6, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    c2a0:	ldp	w1, w5, [x19, #88]
    c2a4:	mov	w4, #0x8                   	// #8
    c2a8:	stp	xzr, xzr, [x0, #64]
    c2ac:	add	x6, x6, #0xc30
    c2b0:	mov	w2, w4
    c2b4:	str	xzr, [x0, #80]
    c2b8:	mov	w7, #0x70                  	// #112
    c2bc:	mov	w3, #0x1f                  	// #31
    c2c0:	bl	24d0 <deflateInit2_@plt>
    c2c4:	cbz	w0, c2d8 <gzclose_r@@ZLIB_1.2.3.5+0x160>
    c2c8:	ldr	x0, [x19, #56]
    c2cc:	bl	2570 <free@plt>
    c2d0:	ldr	x0, [x19, #48]
    c2d4:	b	c290 <gzclose_r@@ZLIB_1.2.3.5+0x118>
    c2d8:	str	xzr, [x19, #120]
    c2dc:	ldr	w0, [x19, #64]
    c2e0:	ldr	w1, [x19, #44]
    c2e4:	str	w1, [x19, #40]
    c2e8:	cbnz	w0, c300 <gzclose_r@@ZLIB_1.2.3.5+0x188>
    c2ec:	str	w1, [x19, #152]
    c2f0:	ldr	x1, [x19, #56]
    c2f4:	str	x1, [x19, #8]
    c2f8:	str	x1, [x19, #144]
    c2fc:	b	c260 <gzclose_r@@ZLIB_1.2.3.5+0xe8>
    c300:	mov	w0, #0x0                   	// #0
    c304:	b	c260 <gzclose_r@@ZLIB_1.2.3.5+0xe8>
    c308:	stp	x29, x30, [sp, #-64]!
    c30c:	mov	x29, sp
    c310:	stp	x21, x22, [sp, #32]
    c314:	mov	w22, w1
    c318:	ldr	w1, [x0, #40]
    c31c:	stp	x19, x20, [sp, #16]
    c320:	mov	x19, x0
    c324:	stp	x23, x24, [sp, #48]
    c328:	cbz	w1, c34c <gzclose_r@@ZLIB_1.2.3.5+0x1d4>
    c32c:	ldr	w21, [x19, #64]
    c330:	add	x20, x19, #0x78
    c334:	cbz	w21, c3cc <gzclose_r@@ZLIB_1.2.3.5+0x254>
    c338:	mov	w21, #0x40000000            	// #1073741824
    c33c:	ldr	w2, [x20, #8]
    c340:	cbnz	w2, c374 <gzclose_r@@ZLIB_1.2.3.5+0x1fc>
    c344:	mov	w21, #0x0                   	// #0
    c348:	b	c35c <gzclose_r@@ZLIB_1.2.3.5+0x1e4>
    c34c:	bl	c220 <gzclose_r@@ZLIB_1.2.3.5+0xa8>
    c350:	mov	w21, w0
    c354:	cmn	w0, #0x1
    c358:	b.ne	c32c <gzclose_r@@ZLIB_1.2.3.5+0x1b4>  // b.any
    c35c:	mov	w0, w21
    c360:	ldp	x19, x20, [sp, #16]
    c364:	ldp	x21, x22, [sp, #32]
    c368:	ldp	x23, x24, [sp, #48]
    c36c:	ldp	x29, x30, [sp], #64
    c370:	ret
    c374:	ldr	w0, [x19, #28]
    c378:	cmp	w2, w21
    c37c:	ldr	x1, [x20]
    c380:	csel	w2, w2, w21, ls  // ls = plast
    c384:	bl	2530 <write@plt>
    c388:	tbz	w0, #31, c3b0 <gzclose_r@@ZLIB_1.2.3.5+0x238>
    c38c:	bl	2650 <__errno_location@plt>
    c390:	ldr	w0, [x0]
    c394:	bl	2500 <strerror@plt>
    c398:	mov	x2, x0
    c39c:	mov	w1, #0xffffffff            	// #-1
    c3a0:	mov	x0, x19
    c3a4:	mov	w21, #0xffffffff            	// #-1
    c3a8:	bl	afa4 <gzerror@@Base+0x5c>
    c3ac:	b	c35c <gzclose_r@@ZLIB_1.2.3.5+0x1e4>
    c3b0:	ldr	w1, [x20, #8]
    c3b4:	sub	w1, w1, w0
    c3b8:	str	w1, [x20, #8]
    c3bc:	ldr	x1, [x20]
    c3c0:	add	x0, x1, w0, sxtw
    c3c4:	str	x0, [x20]
    c3c8:	b	c33c <gzclose_r@@ZLIB_1.2.3.5+0x1c4>
    c3cc:	mov	w1, #0x0                   	// #0
    c3d0:	mov	x23, #0x40000000            	// #1073741824
    c3d4:	ldr	w0, [x20, #32]
    c3d8:	cbz	w0, c3ec <gzclose_r@@ZLIB_1.2.3.5+0x274>
    c3dc:	cbz	w22, c418 <gzclose_r@@ZLIB_1.2.3.5+0x2a0>
    c3e0:	cmp	w22, #0x4
    c3e4:	ccmp	w1, #0x1, #0x4, eq  // eq = none
    c3e8:	b.ne	c418 <gzclose_r@@ZLIB_1.2.3.5+0x2a0>  // b.any
    c3ec:	ldr	x1, [x19, #8]
    c3f0:	ldr	x2, [x20, #24]
    c3f4:	cmp	x2, x1
    c3f8:	b.hi	c440 <gzclose_r@@ZLIB_1.2.3.5+0x2c8>  // b.pmore
    c3fc:	ldr	w0, [x20, #32]
    c400:	cbnz	w0, c418 <gzclose_r@@ZLIB_1.2.3.5+0x2a0>
    c404:	ldr	w0, [x19, #40]
    c408:	str	w0, [x20, #32]
    c40c:	ldr	x0, [x19, #56]
    c410:	str	x0, [x20, #24]
    c414:	str	x0, [x19, #8]
    c418:	mov	w1, w22
    c41c:	ldr	w24, [x20, #32]
    c420:	mov	x0, x20
    c424:	bl	2490 <deflate@plt>
    c428:	mov	w1, w0
    c42c:	cmn	w0, #0x2
    c430:	b.ne	c46c <gzclose_r@@ZLIB_1.2.3.5+0x2f4>  // b.any
    c434:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    c438:	add	x2, x2, #0xd7b
    c43c:	b	c3a0 <gzclose_r@@ZLIB_1.2.3.5+0x228>
    c440:	sub	x2, x2, x1
    c444:	ldr	w0, [x19, #28]
    c448:	cmp	x2, x23
    c44c:	csel	x2, x2, x23, le
    c450:	mov	w2, w2
    c454:	bl	2530 <write@plt>
    c458:	tbnz	w0, #31, c38c <gzclose_r@@ZLIB_1.2.3.5+0x214>
    c45c:	ldr	x1, [x19, #8]
    c460:	add	x0, x1, w0, sxtw
    c464:	str	x0, [x19, #8]
    c468:	b	c3ec <gzclose_r@@ZLIB_1.2.3.5+0x274>
    c46c:	ldr	w0, [x20, #32]
    c470:	cmp	w0, w24
    c474:	b.ne	c3d4 <gzclose_r@@ZLIB_1.2.3.5+0x25c>  // b.any
    c478:	cmp	w22, #0x4
    c47c:	b.ne	c344 <gzclose_r@@ZLIB_1.2.3.5+0x1cc>  // b.any
    c480:	mov	x0, x20
    c484:	bl	2480 <deflateReset@plt>
    c488:	b	c35c <gzclose_r@@ZLIB_1.2.3.5+0x1e4>
    c48c:	stp	x29, x30, [sp, #-64]!
    c490:	mov	x29, sp
    c494:	stp	x21, x22, [sp, #32]
    c498:	add	x22, x0, #0x78
    c49c:	stp	x19, x20, [sp, #16]
    c4a0:	mov	x20, x1
    c4a4:	ldr	w1, [x22, #8]
    c4a8:	str	x23, [sp, #48]
    c4ac:	mov	x19, x0
    c4b0:	cbnz	w1, c4c4 <gzclose_r@@ZLIB_1.2.3.5+0x34c>
    c4b4:	mov	w0, #0x1                   	// #1
    c4b8:	cbnz	x20, c4ec <gzclose_r@@ZLIB_1.2.3.5+0x374>
    c4bc:	mov	w0, #0x0                   	// #0
    c4c0:	b	c4d8 <gzclose_r@@ZLIB_1.2.3.5+0x360>
    c4c4:	mov	w1, #0x0                   	// #0
    c4c8:	bl	c308 <gzclose_r@@ZLIB_1.2.3.5+0x190>
    c4cc:	cmn	w0, #0x1
    c4d0:	b.ne	c4b4 <gzclose_r@@ZLIB_1.2.3.5+0x33c>  // b.any
    c4d4:	mov	w0, #0xffffffff            	// #-1
    c4d8:	ldp	x19, x20, [sp, #16]
    c4dc:	ldp	x21, x22, [sp, #32]
    c4e0:	ldr	x23, [sp, #48]
    c4e4:	ldp	x29, x30, [sp], #64
    c4e8:	ret
    c4ec:	ldr	w21, [x19, #40]
    c4f0:	cmp	x20, w21, uxtw
    c4f4:	csel	w21, w21, w20, ge  // ge = tcont
    c4f8:	mov	w23, w21
    c4fc:	cbz	w0, c510 <gzclose_r@@ZLIB_1.2.3.5+0x398>
    c500:	ldr	x0, [x19, #48]
    c504:	mov	x2, x23
    c508:	mov	w1, #0x0                   	// #0
    c50c:	bl	24a0 <memset@plt>
    c510:	ldr	x0, [x19, #48]
    c514:	str	x0, [x22]
    c518:	ldr	x0, [x19, #16]
    c51c:	str	w21, [x22, #8]
    c520:	mov	w1, #0x0                   	// #0
    c524:	add	x0, x0, x23
    c528:	str	x0, [x19, #16]
    c52c:	mov	x0, x19
    c530:	bl	c308 <gzclose_r@@ZLIB_1.2.3.5+0x190>
    c534:	cmn	w0, #0x1
    c538:	b.eq	c4d4 <gzclose_r@@ZLIB_1.2.3.5+0x35c>  // b.none
    c53c:	sub	x20, x20, x23
    c540:	mov	w0, #0x0                   	// #0
    c544:	b	c4b8 <gzclose_r@@ZLIB_1.2.3.5+0x340>
    c548:	cbnz	x2, c554 <gzclose_r@@ZLIB_1.2.3.5+0x3dc>
    c54c:	mov	x0, #0x0                   	// #0
    c550:	ret
    c554:	stp	x29, x30, [sp, #-64]!
    c558:	mov	x29, sp
    c55c:	stp	x21, x22, [sp, #32]
    c560:	mov	x21, x1
    c564:	ldr	w1, [x0, #40]
    c568:	stp	x19, x20, [sp, #16]
    c56c:	mov	x19, x0
    c570:	mov	x20, x2
    c574:	stp	x23, x24, [sp, #48]
    c578:	cbz	w1, c5f8 <gzclose_r@@ZLIB_1.2.3.5+0x480>
    c57c:	ldr	w0, [x19, #104]
    c580:	cbz	w0, c59c <gzclose_r@@ZLIB_1.2.3.5+0x424>
    c584:	ldr	x1, [x19, #96]
    c588:	str	wzr, [x19, #104]
    c58c:	mov	x0, x19
    c590:	bl	c48c <gzclose_r@@ZLIB_1.2.3.5+0x314>
    c594:	cmn	w0, #0x1
    c598:	b.eq	c604 <gzclose_r@@ZLIB_1.2.3.5+0x48c>  // b.none
    c59c:	ldr	w0, [x19, #40]
    c5a0:	cmp	x20, x0
    c5a4:	b.cc	c61c <gzclose_r@@ZLIB_1.2.3.5+0x4a4>  // b.lo, b.ul, b.last
    c5a8:	ldr	w0, [x19, #128]
    c5ac:	cbnz	w0, c6a8 <gzclose_r@@ZLIB_1.2.3.5+0x530>
    c5b0:	str	x21, [x19, #120]
    c5b4:	mov	x21, x20
    c5b8:	mov	x23, #0xfffffffe            	// #4294967294
    c5bc:	mov	x24, #0xffffffff            	// #4294967295
    c5c0:	ldr	x0, [x19, #16]
    c5c4:	cmp	x21, x23
    c5c8:	csel	x22, x21, x24, ls  // ls = plast
    c5cc:	str	w22, [x19, #128]
    c5d0:	add	x0, x0, x22
    c5d4:	str	x0, [x19, #16]
    c5d8:	mov	w1, #0x0                   	// #0
    c5dc:	mov	x0, x19
    c5e0:	bl	c308 <gzclose_r@@ZLIB_1.2.3.5+0x190>
    c5e4:	cmn	w0, #0x1
    c5e8:	b.eq	c604 <gzclose_r@@ZLIB_1.2.3.5+0x48c>  // b.none
    c5ec:	subs	x21, x21, x22
    c5f0:	b.ne	c5c0 <gzclose_r@@ZLIB_1.2.3.5+0x448>  // b.any
    c5f4:	b	c688 <gzclose_r@@ZLIB_1.2.3.5+0x510>
    c5f8:	bl	c220 <gzclose_r@@ZLIB_1.2.3.5+0xa8>
    c5fc:	cmn	w0, #0x1
    c600:	b.ne	c57c <gzclose_r@@ZLIB_1.2.3.5+0x404>  // b.any
    c604:	mov	x0, #0x0                   	// #0
    c608:	ldp	x19, x20, [sp, #16]
    c60c:	ldp	x21, x22, [sp, #32]
    c610:	ldp	x23, x24, [sp, #48]
    c614:	ldp	x29, x30, [sp], #64
    c618:	ret
    c61c:	mov	x22, x20
    c620:	ldr	w2, [x19, #128]
    c624:	ldr	x3, [x19, #48]
    c628:	cbnz	w2, c630 <gzclose_r@@ZLIB_1.2.3.5+0x4b8>
    c62c:	str	x3, [x19, #120]
    c630:	ldr	x0, [x19, #120]
    c634:	ldr	w1, [x19, #40]
    c638:	add	x2, x0, w2, uxtw
    c63c:	sub	x0, x2, x3
    c640:	sub	w24, w1, w0
    c644:	sub	w1, w1, w0
    c648:	cmp	x1, x22
    c64c:	add	x0, x3, w0, uxtw
    c650:	csel	w24, w22, w24, hi  // hi = pmore
    c654:	mov	x1, x21
    c658:	mov	w23, w24
    c65c:	mov	x2, x23
    c660:	bl	23a0 <memcpy@plt>
    c664:	ldr	w0, [x19, #128]
    c668:	add	x21, x21, x23
    c66c:	subs	x22, x22, x23
    c670:	add	w24, w0, w24
    c674:	str	w24, [x19, #128]
    c678:	ldr	x0, [x19, #16]
    c67c:	add	x0, x0, x23
    c680:	str	x0, [x19, #16]
    c684:	b.ne	c690 <gzclose_r@@ZLIB_1.2.3.5+0x518>  // b.any
    c688:	mov	x0, x20
    c68c:	b	c608 <gzclose_r@@ZLIB_1.2.3.5+0x490>
    c690:	mov	x0, x19
    c694:	mov	w1, #0x0                   	// #0
    c698:	bl	c308 <gzclose_r@@ZLIB_1.2.3.5+0x190>
    c69c:	cmn	w0, #0x1
    c6a0:	b.ne	c620 <gzclose_r@@ZLIB_1.2.3.5+0x4a8>  // b.any
    c6a4:	b	c604 <gzclose_r@@ZLIB_1.2.3.5+0x48c>
    c6a8:	mov	x0, x19
    c6ac:	mov	w1, #0x0                   	// #0
    c6b0:	bl	c308 <gzclose_r@@ZLIB_1.2.3.5+0x190>
    c6b4:	cmn	w0, #0x1
    c6b8:	b.ne	c5b0 <gzclose_r@@ZLIB_1.2.3.5+0x438>  // b.any
    c6bc:	b	c604 <gzclose_r@@ZLIB_1.2.3.5+0x48c>

000000000000c6c0 <gzwrite@@Base>:
    c6c0:	stp	x29, x30, [sp, #-32]!
    c6c4:	mov	x29, sp
    c6c8:	str	x19, [sp, #16]
    c6cc:	cbz	x0, c71c <gzwrite@@Base+0x5c>
    c6d0:	ldr	w5, [x0, #24]
    c6d4:	mov	w4, #0x79b1                	// #31153
    c6d8:	cmp	w5, w4
    c6dc:	b.ne	c71c <gzwrite@@Base+0x5c>  // b.any
    c6e0:	ldr	w19, [x0, #108]
    c6e4:	cbnz	w19, c71c <gzwrite@@Base+0x5c>
    c6e8:	tbz	w2, #31, c70c <gzwrite@@Base+0x4c>
    c6ec:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    c6f0:	mov	w1, #0xfffffffd            	// #-3
    c6f4:	add	x2, x2, #0xda2
    c6f8:	bl	afa4 <gzerror@@Base+0x5c>
    c6fc:	mov	w0, w19
    c700:	ldr	x19, [sp, #16]
    c704:	ldp	x29, x30, [sp], #32
    c708:	ret
    c70c:	mov	w2, w2
    c710:	bl	c548 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    c714:	mov	w19, w0
    c718:	b	c6fc <gzwrite@@Base+0x3c>
    c71c:	mov	w19, #0x0                   	// #0
    c720:	b	c6fc <gzwrite@@Base+0x3c>

000000000000c724 <gzfwrite@@ZLIB_1.2.9>:
    c724:	cbz	x3, c7a8 <gzfwrite@@ZLIB_1.2.9+0x84>
    c728:	stp	x29, x30, [sp, #-32]!
    c72c:	mov	x4, x0
    c730:	mov	x0, x3
    c734:	mov	x29, sp
    c738:	ldr	w3, [x3, #24]
    c73c:	str	x19, [sp, #16]
    c740:	mov	x19, x1
    c744:	mov	x1, x2
    c748:	mov	w2, #0x79b1                	// #31153
    c74c:	cmp	w3, w2
    c750:	b.ne	c780 <gzfwrite@@ZLIB_1.2.9+0x5c>  // b.any
    c754:	ldr	w2, [x0, #108]
    c758:	cbnz	w2, c780 <gzfwrite@@ZLIB_1.2.9+0x5c>
    c75c:	cbz	x19, c780 <gzfwrite@@ZLIB_1.2.9+0x5c>
    c760:	mul	x2, x1, x19
    c764:	udiv	x3, x2, x19
    c768:	cmp	x3, x1
    c76c:	b.eq	c788 <gzfwrite@@ZLIB_1.2.9+0x64>  // b.none
    c770:	adrp	x2, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x33c4>
    c774:	mov	w1, #0xfffffffe            	// #-2
    c778:	add	x2, x2, #0xd3b
    c77c:	bl	afa4 <gzerror@@Base+0x5c>
    c780:	mov	x2, #0x0                   	// #0
    c784:	b	c798 <gzfwrite@@ZLIB_1.2.9+0x74>
    c788:	cbz	x2, c798 <gzfwrite@@ZLIB_1.2.9+0x74>
    c78c:	mov	x1, x4
    c790:	bl	c548 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    c794:	udiv	x2, x0, x19
    c798:	mov	x0, x2
    c79c:	ldr	x19, [sp, #16]
    c7a0:	ldp	x29, x30, [sp], #32
    c7a4:	ret
    c7a8:	mov	x2, #0x0                   	// #0
    c7ac:	mov	x0, x2
    c7b0:	ret

000000000000c7b4 <gzputc@@Base>:
    c7b4:	cbnz	x0, c7c0 <gzputc@@Base+0xc>
    c7b8:	mov	w0, #0xffffffff            	// #-1
    c7bc:	ret
    c7c0:	stp	x29, x30, [sp, #-48]!
    c7c4:	mov	x29, sp
    c7c8:	ldr	w2, [x0, #24]
    c7cc:	stp	x19, x20, [sp, #16]
    c7d0:	mov	w20, w1
    c7d4:	mov	x19, x0
    c7d8:	mov	w1, #0x79b1                	// #31153
    c7dc:	cmp	w2, w1
    c7e0:	b.ne	c830 <gzputc@@Base+0x7c>  // b.any
    c7e4:	ldr	w1, [x0, #108]
    c7e8:	cbnz	w1, c830 <gzputc@@Base+0x7c>
    c7ec:	ldr	w1, [x0, #104]
    c7f0:	cbnz	w1, c81c <gzputc@@Base+0x68>
    c7f4:	ldr	w3, [x19, #40]
    c7f8:	cbnz	w3, c840 <gzputc@@Base+0x8c>
    c7fc:	add	x1, sp, #0x28
    c800:	mov	x0, x19
    c804:	mov	x2, #0x1                   	// #1
    c808:	strb	w20, [sp, #40]
    c80c:	bl	c548 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    c810:	cmp	x0, #0x1
    c814:	b.eq	c884 <gzputc@@Base+0xd0>  // b.none
    c818:	b	c830 <gzputc@@Base+0x7c>
    c81c:	ldr	x1, [x0, #96]
    c820:	str	wzr, [x0, #104]
    c824:	bl	c48c <gzclose_r@@ZLIB_1.2.3.5+0x314>
    c828:	cmn	w0, #0x1
    c82c:	b.ne	c7f4 <gzputc@@Base+0x40>  // b.any
    c830:	mov	w0, #0xffffffff            	// #-1
    c834:	ldp	x19, x20, [sp, #16]
    c838:	ldp	x29, x30, [sp], #48
    c83c:	ret
    c840:	ldr	w0, [x19, #128]
    c844:	add	x1, x19, #0x78
    c848:	ldr	x2, [x19, #48]
    c84c:	cbnz	w0, c854 <gzputc@@Base+0xa0>
    c850:	str	x2, [x19, #120]
    c854:	ldr	x4, [x19, #120]
    c858:	add	x0, x4, w0, uxtw
    c85c:	sub	x0, x0, x2
    c860:	cmp	w3, w0
    c864:	b.ls	c7fc <gzputc@@Base+0x48>  // b.plast
    c868:	strb	w20, [x2, w0, uxtw]
    c86c:	ldr	w0, [x1, #8]
    c870:	add	w0, w0, #0x1
    c874:	str	w0, [x1, #8]
    c878:	ldr	x0, [x19, #16]
    c87c:	add	x0, x0, #0x1
    c880:	str	x0, [x19, #16]
    c884:	and	w0, w20, #0xff
    c888:	b	c834 <gzputc@@Base+0x80>

000000000000c88c <gzputs@@Base>:
    c88c:	cbz	x0, c8fc <gzputs@@Base+0x70>
    c890:	stp	x29, x30, [sp, #-48]!
    c894:	mov	x29, sp
    c898:	stp	x19, x20, [sp, #16]
    c89c:	mov	x19, x0
    c8a0:	mov	w0, #0x79b1                	// #31153
    c8a4:	str	x21, [sp, #32]
    c8a8:	mov	x21, x1
    c8ac:	ldr	w1, [x19, #24]
    c8b0:	cmp	w1, w0
    c8b4:	b.ne	c8e8 <gzputs@@Base+0x5c>  // b.any
    c8b8:	ldr	w0, [x19, #108]
    c8bc:	cbnz	w0, c8e8 <gzputs@@Base+0x5c>
    c8c0:	mov	x0, x21
    c8c4:	bl	23e0 <strlen@plt>
    c8c8:	mov	x1, x21
    c8cc:	mov	x20, x0
    c8d0:	mov	x2, x0
    c8d4:	mov	x0, x19
    c8d8:	bl	c548 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    c8dc:	cmp	w0, #0x0
    c8e0:	ccmp	x20, #0x0, #0x4, eq  // eq = none
    c8e4:	b.eq	c8ec <gzputs@@Base+0x60>  // b.none
    c8e8:	mov	w0, #0xffffffff            	// #-1
    c8ec:	ldp	x19, x20, [sp, #16]
    c8f0:	ldr	x21, [sp, #32]
    c8f4:	ldp	x29, x30, [sp], #48
    c8f8:	ret
    c8fc:	mov	w0, #0xffffffff            	// #-1
    c900:	ret

000000000000c904 <gzvprintf@@ZLIB_1.2.7.1>:
    c904:	stp	x29, x30, [sp, #-96]!
    c908:	mov	x29, sp
    c90c:	stp	x19, x20, [sp, #16]
    c910:	stp	x21, x22, [sp, #32]
    c914:	stp	x23, x24, [sp, #48]
    c918:	cbz	x0, ca5c <gzvprintf@@ZLIB_1.2.7.1+0x158>
    c91c:	mov	x20, x2
    c920:	ldr	w2, [x0, #24]
    c924:	mov	x21, x1
    c928:	mov	x19, x0
    c92c:	mov	w1, #0x79b1                	// #31153
    c930:	cmp	w2, w1
    c934:	b.ne	ca5c <gzvprintf@@ZLIB_1.2.7.1+0x158>  // b.any
    c938:	ldr	w1, [x0, #108]
    c93c:	cbnz	w1, ca5c <gzvprintf@@ZLIB_1.2.7.1+0x158>
    c940:	ldr	w1, [x0, #40]
    c944:	cbnz	w1, c970 <gzvprintf@@ZLIB_1.2.7.1+0x6c>
    c948:	bl	c220 <gzclose_r@@ZLIB_1.2.3.5+0xa8>
    c94c:	cmn	w0, #0x1
    c950:	b.ne	c970 <gzvprintf@@ZLIB_1.2.7.1+0x6c>  // b.any
    c954:	ldr	w20, [x19, #108]
    c958:	mov	w0, w20
    c95c:	ldp	x19, x20, [sp, #16]
    c960:	ldp	x21, x22, [sp, #32]
    c964:	ldp	x23, x24, [sp, #48]
    c968:	ldp	x29, x30, [sp], #96
    c96c:	ret
    c970:	ldr	w0, [x19, #104]
    c974:	cbz	w0, c990 <gzvprintf@@ZLIB_1.2.7.1+0x8c>
    c978:	ldr	x1, [x19, #96]
    c97c:	str	wzr, [x19, #104]
    c980:	mov	x0, x19
    c984:	bl	c48c <gzclose_r@@ZLIB_1.2.3.5+0x314>
    c988:	cmn	w0, #0x1
    c98c:	b.eq	c954 <gzvprintf@@ZLIB_1.2.7.1+0x50>  // b.none
    c990:	ldr	w22, [x19, #128]
    c994:	add	x23, x19, #0x78
    c998:	cbnz	w22, c9a4 <gzvprintf@@ZLIB_1.2.7.1+0xa0>
    c99c:	ldr	x0, [x19, #48]
    c9a0:	str	x0, [x19, #120]
    c9a4:	ldr	x0, [x19, #120]
    c9a8:	add	x3, sp, #0x40
    c9ac:	mov	x2, x21
    c9b0:	add	x22, x0, w22, uxtw
    c9b4:	ldr	w0, [x19, #40]
    c9b8:	sub	w0, w0, #0x1
    c9bc:	strb	wzr, [x22, x0]
    c9c0:	ldp	x0, x1, [x20]
    c9c4:	stp	x0, x1, [sp, #64]
    c9c8:	ldp	x0, x1, [x20, #16]
    c9cc:	stp	x0, x1, [sp, #80]
    c9d0:	ldr	w1, [x19, #40]
    c9d4:	mov	x0, x22
    c9d8:	bl	2620 <vsnprintf@plt>
    c9dc:	mov	w20, w0
    c9e0:	cbz	w0, c958 <gzvprintf@@ZLIB_1.2.7.1+0x54>
    c9e4:	ldr	w21, [x19, #40]
    c9e8:	cmp	w21, w0
    c9ec:	b.ls	ca64 <gzvprintf@@ZLIB_1.2.7.1+0x160>  // b.plast
    c9f0:	sub	w0, w21, #0x1
    c9f4:	ldrb	w0, [x22, x0]
    c9f8:	cbnz	w0, ca64 <gzvprintf@@ZLIB_1.2.7.1+0x160>
    c9fc:	ldr	x0, [x19, #16]
    ca00:	ldr	w22, [x23, #8]
    ca04:	add	w22, w20, w22
    ca08:	str	w22, [x23, #8]
    ca0c:	add	x0, x0, w20, sxtw
    ca10:	str	x0, [x19, #16]
    ca14:	cmp	w21, w22
    ca18:	b.hi	c958 <gzvprintf@@ZLIB_1.2.7.1+0x54>  // b.pmore
    ca1c:	str	w21, [x23, #8]
    ca20:	mov	x0, x19
    ca24:	mov	w1, #0x0                   	// #0
    ca28:	bl	c308 <gzclose_r@@ZLIB_1.2.3.5+0x190>
    ca2c:	cmn	w0, #0x1
    ca30:	b.eq	c954 <gzvprintf@@ZLIB_1.2.7.1+0x50>  // b.none
    ca34:	ldr	x0, [x19, #48]
    ca38:	sub	w2, w22, w21
    ca3c:	ldr	w1, [x19, #40]
    ca40:	sub	w24, w22, w21
    ca44:	add	x1, x0, x1
    ca48:	bl	23a0 <memcpy@plt>
    ca4c:	ldr	x0, [x19, #48]
    ca50:	str	x0, [x19, #120]
    ca54:	str	w24, [x23, #8]
    ca58:	b	c958 <gzvprintf@@ZLIB_1.2.7.1+0x54>
    ca5c:	mov	w20, #0xfffffffe            	// #-2
    ca60:	b	c958 <gzvprintf@@ZLIB_1.2.7.1+0x54>
    ca64:	mov	w20, #0x0                   	// #0
    ca68:	b	c958 <gzvprintf@@ZLIB_1.2.7.1+0x54>

000000000000ca6c <gzprintf@@Base>:
    ca6c:	stp	x29, x30, [sp, #-256]!
    ca70:	mov	x29, sp
    ca74:	stp	x2, x3, [sp, #208]
    ca78:	add	x2, sp, #0x100
    ca7c:	stp	x2, x2, [sp, #48]
    ca80:	add	x2, sp, #0xd0
    ca84:	str	x2, [sp, #64]
    ca88:	mov	w2, #0xffffffd0            	// #-48
    ca8c:	str	w2, [sp, #72]
    ca90:	mov	w2, #0xffffff80            	// #-128
    ca94:	str	w2, [sp, #76]
    ca98:	ldp	x2, x3, [sp, #48]
    ca9c:	stp	x2, x3, [sp, #16]
    caa0:	ldp	x2, x3, [sp, #64]
    caa4:	stp	x2, x3, [sp, #32]
    caa8:	add	x2, sp, #0x10
    caac:	str	q0, [sp, #80]
    cab0:	str	q1, [sp, #96]
    cab4:	str	q2, [sp, #112]
    cab8:	str	q3, [sp, #128]
    cabc:	str	q4, [sp, #144]
    cac0:	str	q5, [sp, #160]
    cac4:	str	q6, [sp, #176]
    cac8:	str	q7, [sp, #192]
    cacc:	stp	x4, x5, [sp, #224]
    cad0:	stp	x6, x7, [sp, #240]
    cad4:	bl	23c0 <gzvprintf@plt>
    cad8:	ldp	x29, x30, [sp], #256
    cadc:	ret

000000000000cae0 <gzflush@@Base>:
    cae0:	cbz	x0, cb54 <gzflush@@Base+0x74>
    cae4:	stp	x29, x30, [sp, #-32]!
    cae8:	mov	x29, sp
    caec:	ldr	w2, [x0, #24]
    caf0:	stp	x19, x20, [sp, #16]
    caf4:	mov	w20, w1
    caf8:	mov	x19, x0
    cafc:	mov	w1, #0x79b1                	// #31153
    cb00:	cmp	w2, w1
    cb04:	b.ne	cb5c <gzflush@@Base+0x7c>  // b.any
    cb08:	ldr	w1, [x0, #108]
    cb0c:	cbnz	w1, cb5c <gzflush@@Base+0x7c>
    cb10:	cmp	w20, #0x4
    cb14:	b.hi	cb5c <gzflush@@Base+0x7c>  // b.pmore
    cb18:	ldr	w1, [x0, #104]
    cb1c:	cbz	w1, cb44 <gzflush@@Base+0x64>
    cb20:	ldr	x1, [x0, #96]
    cb24:	str	wzr, [x0, #104]
    cb28:	bl	c48c <gzclose_r@@ZLIB_1.2.3.5+0x314>
    cb2c:	cmn	w0, #0x1
    cb30:	b.ne	cb44 <gzflush@@Base+0x64>  // b.any
    cb34:	ldr	w0, [x19, #108]
    cb38:	ldp	x19, x20, [sp, #16]
    cb3c:	ldp	x29, x30, [sp], #32
    cb40:	ret
    cb44:	mov	w1, w20
    cb48:	mov	x0, x19
    cb4c:	bl	c308 <gzclose_r@@ZLIB_1.2.3.5+0x190>
    cb50:	b	cb34 <gzflush@@Base+0x54>
    cb54:	mov	w0, #0xfffffffe            	// #-2
    cb58:	ret
    cb5c:	mov	w0, #0xfffffffe            	// #-2
    cb60:	b	cb38 <gzflush@@Base+0x58>

000000000000cb64 <gzsetparams@@Base>:
    cb64:	stp	x29, x30, [sp, #-64]!
    cb68:	mov	x29, sp
    cb6c:	stp	x19, x20, [sp, #16]
    cb70:	stp	x21, x22, [sp, #32]
    cb74:	str	x23, [sp, #48]
    cb78:	cbz	x0, cc34 <gzsetparams@@Base+0xd0>
    cb7c:	mov	x19, x0
    cb80:	mov	w22, w1
    cb84:	mov	w0, #0x79b1                	// #31153
    cb88:	ldr	w1, [x19, #24]
    cb8c:	cmp	w1, w0
    cb90:	b.ne	cc34 <gzsetparams@@Base+0xd0>  // b.any
    cb94:	ldr	w20, [x19, #108]
    cb98:	cbnz	w20, cc34 <gzsetparams@@Base+0xd0>
    cb9c:	ldr	w0, [x19, #88]
    cba0:	mov	w21, w2
    cba4:	cmp	w0, w22
    cba8:	b.ne	cbb8 <gzsetparams@@Base+0x54>  // b.any
    cbac:	ldr	w0, [x19, #92]
    cbb0:	cmp	w0, w2
    cbb4:	b.eq	cbdc <gzsetparams@@Base+0x78>  // b.none
    cbb8:	ldr	w0, [x19, #104]
    cbbc:	cbz	w0, cbf4 <gzsetparams@@Base+0x90>
    cbc0:	ldr	x1, [x19, #96]
    cbc4:	str	wzr, [x19, #104]
    cbc8:	mov	x0, x19
    cbcc:	bl	c48c <gzclose_r@@ZLIB_1.2.3.5+0x314>
    cbd0:	cmn	w0, #0x1
    cbd4:	b.ne	cbf4 <gzsetparams@@Base+0x90>  // b.any
    cbd8:	ldr	w20, [x19, #108]
    cbdc:	mov	w0, w20
    cbe0:	ldp	x19, x20, [sp, #16]
    cbe4:	ldp	x21, x22, [sp, #32]
    cbe8:	ldr	x23, [sp, #48]
    cbec:	ldp	x29, x30, [sp], #64
    cbf0:	ret
    cbf4:	ldr	w0, [x19, #40]
    cbf8:	cbz	w0, cc2c <gzsetparams@@Base+0xc8>
    cbfc:	ldr	w0, [x19, #128]
    cc00:	add	x23, x19, #0x78
    cc04:	cbz	w0, cc1c <gzsetparams@@Base+0xb8>
    cc08:	mov	x0, x19
    cc0c:	mov	w1, #0x5                   	// #5
    cc10:	bl	c308 <gzclose_r@@ZLIB_1.2.3.5+0x190>
    cc14:	cmn	w0, #0x1
    cc18:	b.eq	cbd8 <gzsetparams@@Base+0x74>  // b.none
    cc1c:	mov	w2, w21
    cc20:	mov	w1, w22
    cc24:	mov	x0, x23
    cc28:	bl	24e0 <deflateParams@plt>
    cc2c:	stp	w22, w21, [x19, #88]
    cc30:	b	cbdc <gzsetparams@@Base+0x78>
    cc34:	mov	w20, #0xfffffffe            	// #-2
    cc38:	b	cbdc <gzsetparams@@Base+0x78>

000000000000cc3c <gzclose_w@@ZLIB_1.2.3.5>:
    cc3c:	stp	x29, x30, [sp, #-32]!
    cc40:	mov	x29, sp
    cc44:	stp	x19, x20, [sp, #16]
    cc48:	cbz	x0, cd08 <gzclose_w@@ZLIB_1.2.3.5+0xcc>
    cc4c:	ldr	w2, [x0, #24]
    cc50:	mov	w1, #0x79b1                	// #31153
    cc54:	mov	x19, x0
    cc58:	cmp	w2, w1
    cc5c:	b.ne	cd08 <gzclose_w@@ZLIB_1.2.3.5+0xcc>  // b.any
    cc60:	ldr	w1, [x0, #104]
    cc64:	cbnz	w1, ccec <gzclose_w@@ZLIB_1.2.3.5+0xb0>
    cc68:	mov	w20, #0x0                   	// #0
    cc6c:	mov	x0, x19
    cc70:	mov	w1, #0x4                   	// #4
    cc74:	bl	c308 <gzclose_r@@ZLIB_1.2.3.5+0x190>
    cc78:	cmn	w0, #0x1
    cc7c:	b.ne	cc84 <gzclose_w@@ZLIB_1.2.3.5+0x48>  // b.any
    cc80:	ldr	w20, [x19, #108]
    cc84:	ldr	w0, [x19, #40]
    cc88:	cbz	w0, ccac <gzclose_w@@ZLIB_1.2.3.5+0x70>
    cc8c:	ldr	w0, [x19, #64]
    cc90:	cbnz	w0, cca4 <gzclose_w@@ZLIB_1.2.3.5+0x68>
    cc94:	add	x0, x19, #0x78
    cc98:	bl	2590 <deflateEnd@plt>
    cc9c:	ldr	x0, [x19, #56]
    cca0:	bl	2570 <free@plt>
    cca4:	ldr	x0, [x19, #48]
    cca8:	bl	2570 <free@plt>
    ccac:	mov	x2, #0x0                   	// #0
    ccb0:	mov	w1, #0x0                   	// #0
    ccb4:	mov	x0, x19
    ccb8:	bl	afa4 <gzerror@@Base+0x5c>
    ccbc:	ldr	x0, [x19, #32]
    ccc0:	bl	2570 <free@plt>
    ccc4:	ldr	w0, [x19, #28]
    ccc8:	bl	2510 <close@plt>
    cccc:	cmn	w0, #0x1
    ccd0:	csinv	w20, w20, wzr, ne  // ne = any
    ccd4:	mov	x0, x19
    ccd8:	bl	2570 <free@plt>
    ccdc:	mov	w0, w20
    cce0:	ldp	x19, x20, [sp, #16]
    cce4:	ldp	x29, x30, [sp], #32
    cce8:	ret
    ccec:	ldr	x1, [x0, #96]
    ccf0:	str	wzr, [x0, #104]
    ccf4:	bl	c48c <gzclose_r@@ZLIB_1.2.3.5+0x314>
    ccf8:	cmn	w0, #0x1
    ccfc:	b.ne	cc68 <gzclose_w@@ZLIB_1.2.3.5+0x2c>  // b.any
    cd00:	ldr	w20, [x19, #108]
    cd04:	b	cc6c <gzclose_w@@ZLIB_1.2.3.5+0x30>
    cd08:	mov	w20, #0xfffffffe            	// #-2
    cd0c:	b	ccdc <gzclose_w@@ZLIB_1.2.3.5+0xa0>

Disassembly of section .fini:

000000000000cd10 <.fini>:
    cd10:	stp	x29, x30, [sp, #-16]!
    cd14:	mov	x29, sp
    cd18:	ldp	x29, x30, [sp], #16
    cd1c:	ret
