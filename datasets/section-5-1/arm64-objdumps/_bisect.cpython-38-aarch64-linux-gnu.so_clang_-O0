
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bisect.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b30 <.init>:
 b30:	stp	x29, x30, [sp, #-16]!
 b34:	mov	x29, sp
 b38:	bl	c30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x10>
 b3c:	ldp	x29, x30, [sp], #16
 b40:	ret

Disassembly of section .plt:

0000000000000b50 <PyList_Insert@plt-0x20>:
 b50:	stp	x16, x30, [sp, #-16]!
 b54:	adrp	x16, 11000 <PyInit__bisect@@Base+0x102fc>
 b58:	ldr	x17, [x16, #4088]
 b5c:	add	x16, x16, #0xff8
 b60:	br	x17
 b64:	nop
 b68:	nop
 b6c:	nop

0000000000000b70 <PyList_Insert@plt>:
 b70:	adrp	x16, 12000 <PyList_Insert>
 b74:	ldr	x17, [x16]
 b78:	add	x16, x16, #0x0
 b7c:	br	x17

0000000000000b80 <__cxa_finalize@plt>:
 b80:	adrp	x16, 12000 <PyList_Insert>
 b84:	ldr	x17, [x16, #8]
 b88:	add	x16, x16, #0x8
 b8c:	br	x17

0000000000000b90 <_Py_Dealloc@plt>:
 b90:	adrp	x16, 12000 <PyList_Insert>
 b94:	ldr	x17, [x16, #16]
 b98:	add	x16, x16, #0x10
 b9c:	br	x17

0000000000000ba0 <PyErr_SetString@plt>:
 ba0:	adrp	x16, 12000 <PyList_Insert>
 ba4:	ldr	x17, [x16, #24]
 ba8:	add	x16, x16, #0x18
 bac:	br	x17

0000000000000bb0 <PySequence_GetItem@plt>:
 bb0:	adrp	x16, 12000 <PyList_Insert>
 bb4:	ldr	x17, [x16, #32]
 bb8:	add	x16, x16, #0x20
 bbc:	br	x17

0000000000000bc0 <PyLong_FromSsize_t@plt>:
 bc0:	adrp	x16, 12000 <PyList_Insert>
 bc4:	ldr	x17, [x16, #40]
 bc8:	add	x16, x16, #0x28
 bcc:	br	x17

0000000000000bd0 <PyObject_RichCompareBool@plt>:
 bd0:	adrp	x16, 12000 <PyList_Insert>
 bd4:	ldr	x17, [x16, #48]
 bd8:	add	x16, x16, #0x30
 bdc:	br	x17

0000000000000be0 <PySequence_Size@plt>:
 be0:	adrp	x16, 12000 <PyList_Insert>
 be4:	ldr	x17, [x16, #56]
 be8:	add	x16, x16, #0x38
 bec:	br	x17

0000000000000bf0 <__gmon_start__@plt>:
 bf0:	adrp	x16, 12000 <PyList_Insert>
 bf4:	ldr	x17, [x16, #64]
 bf8:	add	x16, x16, #0x40
 bfc:	br	x17

0000000000000c00 <PyModule_Create2@plt>:
 c00:	adrp	x16, 12000 <PyList_Insert>
 c04:	ldr	x17, [x16, #72]
 c08:	add	x16, x16, #0x48
 c0c:	br	x17

0000000000000c10 <_PyObject_CallMethodId_SizeT@plt>:
 c10:	adrp	x16, 12000 <PyList_Insert>
 c14:	ldr	x17, [x16, #80]
 c18:	add	x16, x16, #0x50
 c1c:	br	x17

0000000000000c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
 c20:	adrp	x16, 12000 <PyList_Insert>
 c24:	ldr	x17, [x16, #88]
 c28:	add	x16, x16, #0x58
 c2c:	br	x17

Disassembly of section .text:

0000000000000c30 <PyInit__bisect@@Base-0xd4>:
     c30:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
     c34:	ldr	x0, [x0, #4040]
     c38:	cbz	x0, c40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x20>
     c3c:	b	bf0 <__gmon_start__@plt>
     c40:	ret
     c44:	nop
     c48:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     c4c:	add	x0, x0, #0x228
     c50:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     c54:	add	x1, x1, #0x228
     c58:	cmp	x1, x0
     c5c:	b.eq	c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>  // b.none
     c60:	adrp	x1, 11000 <PyInit__bisect@@Base+0x102fc>
     c64:	ldr	x1, [x1, #4016]
     c68:	cbz	x1, c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>
     c6c:	mov	x16, x1
     c70:	br	x16
     c74:	ret
     c78:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     c7c:	add	x0, x0, #0x228
     c80:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     c84:	add	x1, x1, #0x228
     c88:	sub	x1, x1, x0
     c8c:	lsr	x2, x1, #63
     c90:	add	x1, x2, x1, asr #3
     c94:	cmp	xzr, x1, asr #1
     c98:	asr	x1, x1, #1
     c9c:	b.eq	cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>  // b.none
     ca0:	adrp	x2, 11000 <PyInit__bisect@@Base+0x102fc>
     ca4:	ldr	x2, [x2, #4056]
     ca8:	cbz	x2, cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>
     cac:	mov	x16, x2
     cb0:	br	x16
     cb4:	ret
     cb8:	stp	x29, x30, [sp, #-32]!
     cbc:	mov	x29, sp
     cc0:	str	x19, [sp, #16]
     cc4:	adrp	x19, 12000 <PyInit__bisect@@Base+0x112fc>
     cc8:	ldrb	w0, [x19, #552]
     ccc:	cbnz	w0, cf4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xd4>
     cd0:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
     cd4:	ldr	x0, [x0, #4024]
     cd8:	cbz	x0, ce8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xc8>
     cdc:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     ce0:	ldr	x0, [x0, #96]
     ce4:	bl	b80 <__cxa_finalize@plt>
     ce8:	bl	c48 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x28>
     cec:	mov	w0, #0x1                   	// #1
     cf0:	strb	w0, [x19, #552]
     cf4:	ldr	x19, [sp, #16]
     cf8:	ldp	x29, x30, [sp], #32
     cfc:	ret
     d00:	b	c78 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x58>

0000000000000d04 <PyInit__bisect@@Base>:
     d04:	stp	x29, x30, [sp, #-16]!
     d08:	mov	x29, sp
     d0c:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     d10:	add	x0, x0, #0x68
     d14:	mov	w1, #0x3f5                 	// #1013
     d18:	bl	c00 <PyModule_Create2@plt>
     d1c:	ldp	x29, x30, [sp], #16
     d20:	ret
     d24:	sub	sp, sp, #0x60
     d28:	stp	x29, x30, [sp, #80]
     d2c:	add	x29, sp, #0x50
     d30:	mov	x8, #0xffffffffffffffff    	// #-1
     d34:	stur	x0, [x29, #-16]
     d38:	stur	x1, [x29, #-24]
     d3c:	stur	x2, [x29, #-32]
     d40:	str	xzr, [sp, #24]
     d44:	str	x8, [sp, #16]
     d48:	ldur	x8, [x29, #-32]
     d4c:	cbnz	x8, d7c <PyInit__bisect@@Base+0x78>
     d50:	ldur	x8, [x29, #-24]
     d54:	ldr	x8, [x8, #16]
     d58:	cmp	x8, #0x2
     d5c:	b.ne	d7c <PyInit__bisect@@Base+0x78>  // b.any
     d60:	ldur	x8, [x29, #-24]
     d64:	ldr	x8, [x8, #24]
     d68:	str	x8, [sp, #40]
     d6c:	ldur	x8, [x29, #-24]
     d70:	ldr	x8, [x8, #32]
     d74:	str	x8, [sp, #32]
     d78:	b	db8 <PyInit__bisect@@Base+0xb4>
     d7c:	ldur	x0, [x29, #-24]
     d80:	ldur	x1, [x29, #-32]
     d84:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
     d88:	add	x2, x2, #0x52a
     d8c:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
     d90:	add	x3, x3, #0x170
     d94:	add	x4, sp, #0x28
     d98:	add	x5, sp, #0x20
     d9c:	add	x6, sp, #0x18
     da0:	add	x7, sp, #0x10
     da4:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     da8:	cbnz	w0, db8 <PyInit__bisect@@Base+0xb4>
     dac:	mov	x8, xzr
     db0:	stur	x8, [x29, #-8]
     db4:	b	df8 <PyInit__bisect@@Base+0xf4>
     db8:	ldr	x0, [sp, #40]
     dbc:	ldr	x1, [sp, #32]
     dc0:	ldr	x2, [sp, #24]
     dc4:	ldr	x3, [sp, #16]
     dc8:	bl	11f4 <PyInit__bisect@@Base+0x4f0>
     dcc:	str	x0, [sp, #8]
     dd0:	ldr	x8, [sp, #8]
     dd4:	cmp	x8, #0x0
     dd8:	cset	w9, ge  // ge = tcont
     ddc:	tbnz	w9, #0, dec <PyInit__bisect@@Base+0xe8>
     de0:	mov	x8, xzr
     de4:	stur	x8, [x29, #-8]
     de8:	b	df8 <PyInit__bisect@@Base+0xf4>
     dec:	ldr	x0, [sp, #8]
     df0:	bl	bc0 <PyLong_FromSsize_t@plt>
     df4:	stur	x0, [x29, #-8]
     df8:	ldur	x0, [x29, #-8]
     dfc:	ldp	x29, x30, [sp, #80]
     e00:	add	sp, sp, #0x60
     e04:	ret
     e08:	sub	sp, sp, #0x70
     e0c:	stp	x29, x30, [sp, #96]
     e10:	add	x29, sp, #0x60
     e14:	mov	x8, #0xffffffffffffffff    	// #-1
     e18:	stur	x0, [x29, #-16]
     e1c:	stur	x1, [x29, #-24]
     e20:	stur	x2, [x29, #-32]
     e24:	str	xzr, [sp, #32]
     e28:	str	x8, [sp, #24]
     e2c:	ldur	x8, [x29, #-32]
     e30:	cbnz	x8, e60 <PyInit__bisect@@Base+0x15c>
     e34:	ldur	x8, [x29, #-24]
     e38:	ldr	x8, [x8, #16]
     e3c:	cmp	x8, #0x2
     e40:	b.ne	e60 <PyInit__bisect@@Base+0x15c>  // b.any
     e44:	ldur	x8, [x29, #-24]
     e48:	ldr	x8, [x8, #24]
     e4c:	stur	x8, [x29, #-40]
     e50:	ldur	x8, [x29, #-24]
     e54:	ldr	x8, [x8, #32]
     e58:	str	x8, [sp, #48]
     e5c:	b	e9c <PyInit__bisect@@Base+0x198>
     e60:	ldur	x0, [x29, #-24]
     e64:	ldur	x1, [x29, #-32]
     e68:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
     e6c:	add	x2, x2, #0x583
     e70:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
     e74:	add	x3, x3, #0x198
     e78:	sub	x4, x29, #0x28
     e7c:	add	x5, sp, #0x30
     e80:	add	x6, sp, #0x20
     e84:	add	x7, sp, #0x18
     e88:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     e8c:	cbnz	w0, e9c <PyInit__bisect@@Base+0x198>
     e90:	mov	x8, xzr
     e94:	stur	x8, [x29, #-8]
     e98:	b	f7c <PyInit__bisect@@Base+0x278>
     e9c:	ldur	x0, [x29, #-40]
     ea0:	ldr	x1, [sp, #48]
     ea4:	ldr	x2, [sp, #32]
     ea8:	ldr	x3, [sp, #24]
     eac:	bl	11f4 <PyInit__bisect@@Base+0x4f0>
     eb0:	str	x0, [sp, #16]
     eb4:	ldr	x8, [sp, #16]
     eb8:	cmp	x8, #0x0
     ebc:	cset	w9, ge  // ge = tcont
     ec0:	tbnz	w9, #0, ed0 <PyInit__bisect@@Base+0x1cc>
     ec4:	mov	x8, xzr
     ec8:	stur	x8, [x29, #-8]
     ecc:	b	f7c <PyInit__bisect@@Base+0x278>
     ed0:	ldur	x8, [x29, #-40]
     ed4:	ldr	x8, [x8, #8]
     ed8:	adrp	x9, 11000 <PyInit__bisect@@Base+0x102fc>
     edc:	ldr	x9, [x9, #4064]
     ee0:	cmp	x8, x9
     ee4:	b.ne	f14 <PyInit__bisect@@Base+0x210>  // b.any
     ee8:	ldur	x0, [x29, #-40]
     eec:	ldr	x1, [sp, #16]
     ef0:	ldr	x2, [sp, #48]
     ef4:	bl	b70 <PyList_Insert@plt>
     ef8:	cmp	w0, #0x0
     efc:	cset	w8, ge  // ge = tcont
     f00:	tbnz	w8, #0, f10 <PyInit__bisect@@Base+0x20c>
     f04:	mov	x8, xzr
     f08:	stur	x8, [x29, #-8]
     f0c:	b	f7c <PyInit__bisect@@Base+0x278>
     f10:	b	f60 <PyInit__bisect@@Base+0x25c>
     f14:	ldur	x0, [x29, #-40]
     f18:	ldr	x3, [sp, #16]
     f1c:	ldr	x4, [sp, #48]
     f20:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     f24:	add	x1, x1, #0x1c0
     f28:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
     f2c:	add	x2, x2, #0x596
     f30:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
     f34:	str	x0, [sp, #40]
     f38:	ldr	x8, [sp, #40]
     f3c:	cbnz	x8, f4c <PyInit__bisect@@Base+0x248>
     f40:	mov	x8, xzr
     f44:	stur	x8, [x29, #-8]
     f48:	b	f7c <PyInit__bisect@@Base+0x278>
     f4c:	ldr	x2, [sp, #40]
     f50:	adrp	x0, 1000 <PyInit__bisect@@Base+0x2fc>
     f54:	add	x0, x0, #0x555
     f58:	mov	w1, #0x70                  	// #112
     f5c:	bl	134c <PyInit__bisect@@Base+0x648>
     f60:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
     f64:	ldr	x8, [x8, #4048]
     f68:	mov	x0, x8
     f6c:	str	x8, [sp, #8]
     f70:	bl	1390 <PyInit__bisect@@Base+0x68c>
     f74:	ldr	x8, [sp, #8]
     f78:	stur	x8, [x29, #-8]
     f7c:	ldur	x0, [x29, #-8]
     f80:	ldp	x29, x30, [sp, #96]
     f84:	add	sp, sp, #0x70
     f88:	ret
     f8c:	sub	sp, sp, #0x60
     f90:	stp	x29, x30, [sp, #80]
     f94:	add	x29, sp, #0x50
     f98:	mov	x8, #0xffffffffffffffff    	// #-1
     f9c:	stur	x0, [x29, #-16]
     fa0:	stur	x1, [x29, #-24]
     fa4:	stur	x2, [x29, #-32]
     fa8:	str	xzr, [sp, #24]
     fac:	str	x8, [sp, #16]
     fb0:	ldur	x8, [x29, #-32]
     fb4:	cbnz	x8, fe4 <PyInit__bisect@@Base+0x2e0>
     fb8:	ldur	x8, [x29, #-24]
     fbc:	ldr	x8, [x8, #16]
     fc0:	cmp	x8, #0x2
     fc4:	b.ne	fe4 <PyInit__bisect@@Base+0x2e0>  // b.any
     fc8:	ldur	x8, [x29, #-24]
     fcc:	ldr	x8, [x8, #24]
     fd0:	str	x8, [sp, #40]
     fd4:	ldur	x8, [x29, #-24]
     fd8:	ldr	x8, [x8, #32]
     fdc:	str	x8, [sp, #32]
     fe0:	b	1020 <PyInit__bisect@@Base+0x31c>
     fe4:	ldur	x0, [x29, #-24]
     fe8:	ldur	x1, [x29, #-32]
     fec:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
     ff0:	add	x2, x2, #0x5a0
     ff4:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
     ff8:	add	x3, x3, #0x1d8
     ffc:	add	x4, sp, #0x28
    1000:	add	x5, sp, #0x20
    1004:	add	x6, sp, #0x18
    1008:	add	x7, sp, #0x10
    100c:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    1010:	cbnz	w0, 1020 <PyInit__bisect@@Base+0x31c>
    1014:	mov	x8, xzr
    1018:	stur	x8, [x29, #-8]
    101c:	b	1060 <PyInit__bisect@@Base+0x35c>
    1020:	ldr	x0, [sp, #40]
    1024:	ldr	x1, [sp, #32]
    1028:	ldr	x2, [sp, #24]
    102c:	ldr	x3, [sp, #16]
    1030:	bl	13b0 <PyInit__bisect@@Base+0x6ac>
    1034:	str	x0, [sp, #8]
    1038:	ldr	x8, [sp, #8]
    103c:	cmp	x8, #0x0
    1040:	cset	w9, ge  // ge = tcont
    1044:	tbnz	w9, #0, 1054 <PyInit__bisect@@Base+0x350>
    1048:	mov	x8, xzr
    104c:	stur	x8, [x29, #-8]
    1050:	b	1060 <PyInit__bisect@@Base+0x35c>
    1054:	ldr	x0, [sp, #8]
    1058:	bl	bc0 <PyLong_FromSsize_t@plt>
    105c:	stur	x0, [x29, #-8]
    1060:	ldur	x0, [x29, #-8]
    1064:	ldp	x29, x30, [sp, #80]
    1068:	add	sp, sp, #0x60
    106c:	ret
    1070:	sub	sp, sp, #0x70
    1074:	stp	x29, x30, [sp, #96]
    1078:	add	x29, sp, #0x60
    107c:	mov	x8, #0xffffffffffffffff    	// #-1
    1080:	stur	x0, [x29, #-16]
    1084:	stur	x1, [x29, #-24]
    1088:	stur	x2, [x29, #-32]
    108c:	str	xzr, [sp, #32]
    1090:	str	x8, [sp, #24]
    1094:	ldur	x8, [x29, #-32]
    1098:	cbnz	x8, 10c8 <PyInit__bisect@@Base+0x3c4>
    109c:	ldur	x8, [x29, #-24]
    10a0:	ldr	x8, [x8, #16]
    10a4:	cmp	x8, #0x2
    10a8:	b.ne	10c8 <PyInit__bisect@@Base+0x3c4>  // b.any
    10ac:	ldur	x8, [x29, #-24]
    10b0:	ldr	x8, [x8, #24]
    10b4:	stur	x8, [x29, #-40]
    10b8:	ldur	x8, [x29, #-24]
    10bc:	ldr	x8, [x8, #32]
    10c0:	str	x8, [sp, #48]
    10c4:	b	1104 <PyInit__bisect@@Base+0x400>
    10c8:	ldur	x0, [x29, #-24]
    10cc:	ldur	x1, [x29, #-32]
    10d0:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
    10d4:	add	x2, x2, #0x5b2
    10d8:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
    10dc:	add	x3, x3, #0x200
    10e0:	sub	x4, x29, #0x28
    10e4:	add	x5, sp, #0x30
    10e8:	add	x6, sp, #0x20
    10ec:	add	x7, sp, #0x18
    10f0:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    10f4:	cbnz	w0, 1104 <PyInit__bisect@@Base+0x400>
    10f8:	mov	x8, xzr
    10fc:	stur	x8, [x29, #-8]
    1100:	b	11e4 <PyInit__bisect@@Base+0x4e0>
    1104:	ldur	x0, [x29, #-40]
    1108:	ldr	x1, [sp, #48]
    110c:	ldr	x2, [sp, #32]
    1110:	ldr	x3, [sp, #24]
    1114:	bl	13b0 <PyInit__bisect@@Base+0x6ac>
    1118:	str	x0, [sp, #16]
    111c:	ldr	x8, [sp, #16]
    1120:	cmp	x8, #0x0
    1124:	cset	w9, ge  // ge = tcont
    1128:	tbnz	w9, #0, 1138 <PyInit__bisect@@Base+0x434>
    112c:	mov	x8, xzr
    1130:	stur	x8, [x29, #-8]
    1134:	b	11e4 <PyInit__bisect@@Base+0x4e0>
    1138:	ldur	x8, [x29, #-40]
    113c:	ldr	x8, [x8, #8]
    1140:	adrp	x9, 11000 <PyInit__bisect@@Base+0x102fc>
    1144:	ldr	x9, [x9, #4064]
    1148:	cmp	x8, x9
    114c:	b.ne	117c <PyInit__bisect@@Base+0x478>  // b.any
    1150:	ldur	x0, [x29, #-40]
    1154:	ldr	x1, [sp, #16]
    1158:	ldr	x2, [sp, #48]
    115c:	bl	b70 <PyList_Insert@plt>
    1160:	cmp	w0, #0x0
    1164:	cset	w8, ge  // ge = tcont
    1168:	tbnz	w8, #0, 1178 <PyInit__bisect@@Base+0x474>
    116c:	mov	x8, xzr
    1170:	stur	x8, [x29, #-8]
    1174:	b	11e4 <PyInit__bisect@@Base+0x4e0>
    1178:	b	11c8 <PyInit__bisect@@Base+0x4c4>
    117c:	ldur	x0, [x29, #-40]
    1180:	ldr	x3, [sp, #16]
    1184:	ldr	x4, [sp, #48]
    1188:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
    118c:	add	x1, x1, #0x1c0
    1190:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
    1194:	add	x2, x2, #0x596
    1198:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
    119c:	str	x0, [sp, #40]
    11a0:	ldr	x8, [sp, #40]
    11a4:	cbnz	x8, 11b4 <PyInit__bisect@@Base+0x4b0>
    11a8:	mov	x8, xzr
    11ac:	stur	x8, [x29, #-8]
    11b0:	b	11e4 <PyInit__bisect@@Base+0x4e0>
    11b4:	ldr	x2, [sp, #40]
    11b8:	adrp	x0, 1000 <PyInit__bisect@@Base+0x2fc>
    11bc:	add	x0, x0, #0x555
    11c0:	mov	w1, #0xe3                  	// #227
    11c4:	bl	134c <PyInit__bisect@@Base+0x648>
    11c8:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
    11cc:	ldr	x8, [x8, #4048]
    11d0:	mov	x0, x8
    11d4:	str	x8, [sp, #8]
    11d8:	bl	1390 <PyInit__bisect@@Base+0x68c>
    11dc:	ldr	x8, [sp, #8]
    11e0:	stur	x8, [x29, #-8]
    11e4:	ldur	x0, [x29, #-8]
    11e8:	ldp	x29, x30, [sp, #96]
    11ec:	add	sp, sp, #0x70
    11f0:	ret
    11f4:	sub	sp, sp, #0x50
    11f8:	stp	x29, x30, [sp, #64]
    11fc:	add	x29, sp, #0x40
    1200:	stur	x0, [x29, #-16]
    1204:	stur	x1, [x29, #-24]
    1208:	str	x2, [sp, #32]
    120c:	str	x3, [sp, #24]
    1210:	ldr	x8, [sp, #32]
    1214:	cmp	x8, #0x0
    1218:	cset	w9, ge  // ge = tcont
    121c:	tbnz	w9, #0, 1244 <PyInit__bisect@@Base+0x540>
    1220:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
    1224:	ldr	x8, [x8, #4032]
    1228:	ldr	x0, [x8]
    122c:	adrp	x1, 1000 <PyInit__bisect@@Base+0x2fc>
    1230:	add	x1, x1, #0x53d
    1234:	bl	ba0 <PyErr_SetString@plt>
    1238:	mov	x8, #0xffffffffffffffff    	// #-1
    123c:	stur	x8, [x29, #-8]
    1240:	b	133c <PyInit__bisect@@Base+0x638>
    1244:	ldr	x8, [sp, #24]
    1248:	mov	x9, #0xffffffffffffffff    	// #-1
    124c:	cmp	x8, x9
    1250:	b.ne	127c <PyInit__bisect@@Base+0x578>  // b.any
    1254:	ldur	x0, [x29, #-16]
    1258:	bl	be0 <PySequence_Size@plt>
    125c:	str	x0, [sp, #24]
    1260:	ldr	x8, [sp, #24]
    1264:	cmp	x8, #0x0
    1268:	cset	w9, ge  // ge = tcont
    126c:	tbnz	w9, #0, 127c <PyInit__bisect@@Base+0x578>
    1270:	mov	x8, #0xffffffffffffffff    	// #-1
    1274:	stur	x8, [x29, #-8]
    1278:	b	133c <PyInit__bisect@@Base+0x638>
    127c:	ldr	x8, [sp, #32]
    1280:	ldr	x9, [sp, #24]
    1284:	cmp	x8, x9
    1288:	b.ge	1334 <PyInit__bisect@@Base+0x630>  // b.tcont
    128c:	ldr	x8, [sp, #32]
    1290:	ldr	x9, [sp, #24]
    1294:	add	x8, x8, x9
    1298:	mov	x9, #0x2                   	// #2
    129c:	udiv	x8, x8, x9
    12a0:	str	x8, [sp, #8]
    12a4:	ldur	x0, [x29, #-16]
    12a8:	ldr	x1, [sp, #8]
    12ac:	bl	bb0 <PySequence_GetItem@plt>
    12b0:	str	x0, [sp, #16]
    12b4:	ldr	x8, [sp, #16]
    12b8:	cbnz	x8, 12c8 <PyInit__bisect@@Base+0x5c4>
    12bc:	mov	x8, #0xffffffffffffffff    	// #-1
    12c0:	stur	x8, [x29, #-8]
    12c4:	b	133c <PyInit__bisect@@Base+0x638>
    12c8:	ldur	x0, [x29, #-24]
    12cc:	ldr	x1, [sp, #16]
    12d0:	mov	w8, wzr
    12d4:	mov	w2, w8
    12d8:	bl	bd0 <PyObject_RichCompareBool@plt>
    12dc:	str	w0, [sp, #4]
    12e0:	ldr	x2, [sp, #16]
    12e4:	adrp	x0, 1000 <PyInit__bisect@@Base+0x2fc>
    12e8:	add	x0, x0, #0x555
    12ec:	mov	w1, #0x24                  	// #36
    12f0:	bl	134c <PyInit__bisect@@Base+0x648>
    12f4:	ldr	w8, [sp, #4]
    12f8:	cmp	w8, #0x0
    12fc:	cset	w8, ge  // ge = tcont
    1300:	tbnz	w8, #0, 1310 <PyInit__bisect@@Base+0x60c>
    1304:	mov	x8, #0xffffffffffffffff    	// #-1
    1308:	stur	x8, [x29, #-8]
    130c:	b	133c <PyInit__bisect@@Base+0x638>
    1310:	ldr	w8, [sp, #4]
    1314:	cbz	w8, 1324 <PyInit__bisect@@Base+0x620>
    1318:	ldr	x8, [sp, #8]
    131c:	str	x8, [sp, #24]
    1320:	b	1330 <PyInit__bisect@@Base+0x62c>
    1324:	ldr	x8, [sp, #8]
    1328:	add	x8, x8, #0x1
    132c:	str	x8, [sp, #32]
    1330:	b	127c <PyInit__bisect@@Base+0x578>
    1334:	ldr	x8, [sp, #32]
    1338:	stur	x8, [x29, #-8]
    133c:	ldur	x0, [x29, #-8]
    1340:	ldp	x29, x30, [sp, #64]
    1344:	add	sp, sp, #0x50
    1348:	ret
    134c:	sub	sp, sp, #0x30
    1350:	stp	x29, x30, [sp, #32]
    1354:	add	x29, sp, #0x20
    1358:	stur	x0, [x29, #-8]
    135c:	stur	w1, [x29, #-12]
    1360:	str	x2, [sp, #8]
    1364:	ldr	x8, [sp, #8]
    1368:	ldr	x9, [x8]
    136c:	subs	x9, x9, #0x1
    1370:	str	x9, [x8]
    1374:	cbz	x9, 137c <PyInit__bisect@@Base+0x678>
    1378:	b	1384 <PyInit__bisect@@Base+0x680>
    137c:	ldr	x0, [sp, #8]
    1380:	bl	b90 <_Py_Dealloc@plt>
    1384:	ldp	x29, x30, [sp, #32]
    1388:	add	sp, sp, #0x30
    138c:	ret
    1390:	sub	sp, sp, #0x10
    1394:	str	x0, [sp, #8]
    1398:	ldr	x8, [sp, #8]
    139c:	ldr	x9, [x8]
    13a0:	add	x9, x9, #0x1
    13a4:	str	x9, [x8]
    13a8:	add	sp, sp, #0x10
    13ac:	ret
    13b0:	sub	sp, sp, #0x50
    13b4:	stp	x29, x30, [sp, #64]
    13b8:	add	x29, sp, #0x40
    13bc:	stur	x0, [x29, #-16]
    13c0:	stur	x1, [x29, #-24]
    13c4:	str	x2, [sp, #32]
    13c8:	str	x3, [sp, #24]
    13cc:	ldr	x8, [sp, #32]
    13d0:	cmp	x8, #0x0
    13d4:	cset	w9, ge  // ge = tcont
    13d8:	tbnz	w9, #0, 1400 <PyInit__bisect@@Base+0x6fc>
    13dc:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
    13e0:	ldr	x8, [x8, #4032]
    13e4:	ldr	x0, [x8]
    13e8:	adrp	x1, 1000 <PyInit__bisect@@Base+0x2fc>
    13ec:	add	x1, x1, #0x53d
    13f0:	bl	ba0 <PyErr_SetString@plt>
    13f4:	mov	x8, #0xffffffffffffffff    	// #-1
    13f8:	stur	x8, [x29, #-8]
    13fc:	b	14f8 <PyInit__bisect@@Base+0x7f4>
    1400:	ldr	x8, [sp, #24]
    1404:	mov	x9, #0xffffffffffffffff    	// #-1
    1408:	cmp	x8, x9
    140c:	b.ne	1438 <PyInit__bisect@@Base+0x734>  // b.any
    1410:	ldur	x0, [x29, #-16]
    1414:	bl	be0 <PySequence_Size@plt>
    1418:	str	x0, [sp, #24]
    141c:	ldr	x8, [sp, #24]
    1420:	cmp	x8, #0x0
    1424:	cset	w9, ge  // ge = tcont
    1428:	tbnz	w9, #0, 1438 <PyInit__bisect@@Base+0x734>
    142c:	mov	x8, #0xffffffffffffffff    	// #-1
    1430:	stur	x8, [x29, #-8]
    1434:	b	14f8 <PyInit__bisect@@Base+0x7f4>
    1438:	ldr	x8, [sp, #32]
    143c:	ldr	x9, [sp, #24]
    1440:	cmp	x8, x9
    1444:	b.ge	14f0 <PyInit__bisect@@Base+0x7ec>  // b.tcont
    1448:	ldr	x8, [sp, #32]
    144c:	ldr	x9, [sp, #24]
    1450:	add	x8, x8, x9
    1454:	mov	x9, #0x2                   	// #2
    1458:	udiv	x8, x8, x9
    145c:	str	x8, [sp, #8]
    1460:	ldur	x0, [x29, #-16]
    1464:	ldr	x1, [sp, #8]
    1468:	bl	bb0 <PySequence_GetItem@plt>
    146c:	str	x0, [sp, #16]
    1470:	ldr	x8, [sp, #16]
    1474:	cbnz	x8, 1484 <PyInit__bisect@@Base+0x780>
    1478:	mov	x8, #0xffffffffffffffff    	// #-1
    147c:	stur	x8, [x29, #-8]
    1480:	b	14f8 <PyInit__bisect@@Base+0x7f4>
    1484:	ldr	x0, [sp, #16]
    1488:	ldur	x1, [x29, #-24]
    148c:	mov	w8, wzr
    1490:	mov	w2, w8
    1494:	bl	bd0 <PyObject_RichCompareBool@plt>
    1498:	str	w0, [sp, #4]
    149c:	ldr	x2, [sp, #16]
    14a0:	adrp	x0, 1000 <PyInit__bisect@@Base+0x2fc>
    14a4:	add	x0, x0, #0x555
    14a8:	mov	w1, #0x99                  	// #153
    14ac:	bl	134c <PyInit__bisect@@Base+0x648>
    14b0:	ldr	w8, [sp, #4]
    14b4:	cmp	w8, #0x0
    14b8:	cset	w8, ge  // ge = tcont
    14bc:	tbnz	w8, #0, 14cc <PyInit__bisect@@Base+0x7c8>
    14c0:	mov	x8, #0xffffffffffffffff    	// #-1
    14c4:	stur	x8, [x29, #-8]
    14c8:	b	14f8 <PyInit__bisect@@Base+0x7f4>
    14cc:	ldr	w8, [sp, #4]
    14d0:	cbz	w8, 14e4 <PyInit__bisect@@Base+0x7e0>
    14d4:	ldr	x8, [sp, #8]
    14d8:	add	x8, x8, #0x1
    14dc:	str	x8, [sp, #32]
    14e0:	b	14ec <PyInit__bisect@@Base+0x7e8>
    14e4:	ldr	x8, [sp, #8]
    14e8:	str	x8, [sp, #24]
    14ec:	b	1438 <PyInit__bisect@@Base+0x734>
    14f0:	ldr	x8, [sp, #32]
    14f4:	stur	x8, [x29, #-8]
    14f8:	ldur	x0, [x29, #-8]
    14fc:	ldp	x29, x30, [sp, #64]
    1500:	add	sp, sp, #0x50
    1504:	ret

Disassembly of section .fini:

0000000000001508 <.fini>:
    1508:	stp	x29, x30, [sp, #-16]!
    150c:	mov	x29, sp
    1510:	ldp	x29, x30, [sp], #16
    1514:	ret
