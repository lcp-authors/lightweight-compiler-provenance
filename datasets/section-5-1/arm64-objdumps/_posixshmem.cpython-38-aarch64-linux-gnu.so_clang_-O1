
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_posixshmem.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c38 <.init>:
 c38:	stp	x29, x30, [sp, #-16]!
 c3c:	mov	x29, sp
 c40:	bl	da0 <_PyLong_AsInt@plt+0x10>
 c44:	ldp	x29, x30, [sp], #16
 c48:	ret

Disassembly of section .plt:

0000000000000c50 <_PyUnicode_Ready@plt-0x20>:
 c50:	stp	x16, x30, [sp, #-16]!
 c54:	adrp	x16, 11000 <PyInit__posixshmem@@Base+0x1018c>
 c58:	ldr	x17, [x16, #4088]
 c5c:	add	x16, x16, #0xff8
 c60:	br	x17
 c64:	nop
 c68:	nop
 c6c:	nop

0000000000000c70 <_PyUnicode_Ready@plt>:
 c70:	adrp	x16, 12000 <_PyUnicode_Ready>
 c74:	ldr	x17, [x16]
 c78:	add	x16, x16, #0x0
 c7c:	br	x17

0000000000000c80 <PyEval_RestoreThread@plt>:
 c80:	adrp	x16, 12000 <_PyUnicode_Ready>
 c84:	ldr	x17, [x16, #8]
 c88:	add	x16, x16, #0x8
 c8c:	br	x17

0000000000000c90 <__cxa_finalize@plt>:
 c90:	adrp	x16, 12000 <_PyUnicode_Ready>
 c94:	ldr	x17, [x16, #16]
 c98:	add	x16, x16, #0x10
 c9c:	br	x17

0000000000000ca0 <_PyArg_UnpackKeywords@plt>:
 ca0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ca4:	ldr	x17, [x16, #24]
 ca8:	add	x16, x16, #0x18
 cac:	br	x17

0000000000000cb0 <PyErr_SetString@plt>:
 cb0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cb4:	ldr	x17, [x16, #32]
 cb8:	add	x16, x16, #0x20
 cbc:	br	x17

0000000000000cc0 <PyLong_FromLong@plt>:
 cc0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cc4:	ldr	x17, [x16, #40]
 cc8:	add	x16, x16, #0x28
 ccc:	br	x17

0000000000000cd0 <_PyArg_BadArgument@plt>:
 cd0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cd4:	ldr	x17, [x16, #48]
 cd8:	add	x16, x16, #0x30
 cdc:	br	x17

0000000000000ce0 <__gmon_start__@plt>:
 ce0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ce4:	ldr	x17, [x16, #56]
 ce8:	add	x16, x16, #0x38
 cec:	br	x17

0000000000000cf0 <PyErr_Occurred@plt>:
 cf0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cf4:	ldr	x17, [x16, #64]
 cf8:	add	x16, x16, #0x40
 cfc:	br	x17

0000000000000d00 <PyModule_Create2@plt>:
 d00:	adrp	x16, 12000 <_PyUnicode_Ready>
 d04:	ldr	x17, [x16, #72]
 d08:	add	x16, x16, #0x48
 d0c:	br	x17

0000000000000d10 <PyErr_SetFromErrnoWithFilenameObject@plt>:
 d10:	adrp	x16, 12000 <_PyUnicode_Ready>
 d14:	ldr	x17, [x16, #80]
 d18:	add	x16, x16, #0x50
 d1c:	br	x17

0000000000000d20 <shm_open@plt>:
 d20:	adrp	x16, 12000 <_PyUnicode_Ready>
 d24:	ldr	x17, [x16, #88]
 d28:	add	x16, x16, #0x58
 d2c:	br	x17

0000000000000d30 <PyUnicode_AsUTF8@plt>:
 d30:	adrp	x16, 12000 <_PyUnicode_Ready>
 d34:	ldr	x17, [x16, #96]
 d38:	add	x16, x16, #0x60
 d3c:	br	x17

0000000000000d40 <shm_unlink@plt>:
 d40:	adrp	x16, 12000 <_PyUnicode_Ready>
 d44:	ldr	x17, [x16, #104]
 d48:	add	x16, x16, #0x68
 d4c:	br	x17

0000000000000d50 <PyEval_SaveThread@plt>:
 d50:	adrp	x16, 12000 <_PyUnicode_Ready>
 d54:	ldr	x17, [x16, #112]
 d58:	add	x16, x16, #0x70
 d5c:	br	x17

0000000000000d60 <PyErr_CheckSignals@plt>:
 d60:	adrp	x16, 12000 <_PyUnicode_Ready>
 d64:	ldr	x17, [x16, #120]
 d68:	add	x16, x16, #0x78
 d6c:	br	x17

0000000000000d70 <PyType_IsSubtype@plt>:
 d70:	adrp	x16, 12000 <_PyUnicode_Ready>
 d74:	ldr	x17, [x16, #128]
 d78:	add	x16, x16, #0x80
 d7c:	br	x17

0000000000000d80 <__errno_location@plt>:
 d80:	adrp	x16, 12000 <_PyUnicode_Ready>
 d84:	ldr	x17, [x16, #136]
 d88:	add	x16, x16, #0x88
 d8c:	br	x17

0000000000000d90 <_PyLong_AsInt@plt>:
 d90:	adrp	x16, 12000 <_PyUnicode_Ready>
 d94:	ldr	x17, [x16, #144]
 d98:	add	x16, x16, #0x90
 d9c:	br	x17

Disassembly of section .text:

0000000000000da0 <PyInit__posixshmem@@Base-0xd4>:
     da0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0x1018c>
     da4:	ldr	x0, [x0, #4048]
     da8:	cbz	x0, db0 <_PyLong_AsInt@plt+0x20>
     dac:	b	ce0 <__gmon_start__@plt>
     db0:	ret
     db4:	nop
     db8:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x1118c>
     dbc:	add	x0, x0, #0x1e8
     dc0:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x1118c>
     dc4:	add	x1, x1, #0x1e8
     dc8:	cmp	x1, x0
     dcc:	b.eq	de4 <_PyLong_AsInt@plt+0x54>  // b.none
     dd0:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0x1018c>
     dd4:	ldr	x1, [x1, #4008]
     dd8:	cbz	x1, de4 <_PyLong_AsInt@plt+0x54>
     ddc:	mov	x16, x1
     de0:	br	x16
     de4:	ret
     de8:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x1118c>
     dec:	add	x0, x0, #0x1e8
     df0:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x1118c>
     df4:	add	x1, x1, #0x1e8
     df8:	sub	x1, x1, x0
     dfc:	lsr	x2, x1, #63
     e00:	add	x1, x2, x1, asr #3
     e04:	cmp	xzr, x1, asr #1
     e08:	asr	x1, x1, #1
     e0c:	b.eq	e24 <_PyLong_AsInt@plt+0x94>  // b.none
     e10:	adrp	x2, 11000 <PyInit__posixshmem@@Base+0x1018c>
     e14:	ldr	x2, [x2, #4064]
     e18:	cbz	x2, e24 <_PyLong_AsInt@plt+0x94>
     e1c:	mov	x16, x2
     e20:	br	x16
     e24:	ret
     e28:	stp	x29, x30, [sp, #-32]!
     e2c:	mov	x29, sp
     e30:	str	x19, [sp, #16]
     e34:	adrp	x19, 12000 <PyInit__posixshmem@@Base+0x1118c>
     e38:	ldrb	w0, [x19, #488]
     e3c:	cbnz	w0, e64 <_PyLong_AsInt@plt+0xd4>
     e40:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0x1018c>
     e44:	ldr	x0, [x0, #4024]
     e48:	cbz	x0, e58 <_PyLong_AsInt@plt+0xc8>
     e4c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x1118c>
     e50:	ldr	x0, [x0, #152]
     e54:	bl	c90 <__cxa_finalize@plt>
     e58:	bl	db8 <_PyLong_AsInt@plt+0x28>
     e5c:	mov	w0, #0x1                   	// #1
     e60:	strb	w0, [x19, #488]
     e64:	ldr	x19, [sp, #16]
     e68:	ldp	x29, x30, [sp], #32
     e6c:	ret
     e70:	b	de8 <_PyLong_AsInt@plt+0x58>

0000000000000e74 <PyInit__posixshmem@@Base>:
     e74:	stp	x29, x30, [sp, #-16]!
     e78:	mov	x29, sp
     e7c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x1118c>
     e80:	add	x0, x0, #0xa0
     e84:	mov	w1, #0x3f5                 	// #1013
     e88:	bl	d00 <PyModule_Create2@plt>
     e8c:	ldp	x29, x30, [sp], #16
     e90:	ret
     e94:	sub	sp, sp, #0x60
     e98:	stp	x29, x30, [sp, #32]
     e9c:	stp	x24, x23, [sp, #48]
     ea0:	stp	x22, x21, [sp, #64]
     ea4:	stp	x20, x19, [sp, #80]
     ea8:	add	x29, sp, #0x20
     eac:	mov	x20, x2
     eb0:	mov	x19, x1
     eb4:	cbz	x3, ec4 <PyInit__posixshmem@@Base+0x50>
     eb8:	ldr	x24, [x3, #16]
     ebc:	cbnz	x19, ecc <PyInit__posixshmem@@Base+0x58>
     ec0:	b	ee4 <PyInit__posixshmem@@Base+0x70>
     ec4:	mov	x24, xzr
     ec8:	cbz	x19, ee4 <PyInit__posixshmem@@Base+0x70>
     ecc:	and	x8, x20, #0xfffffffffffffffe
     ed0:	cmp	x8, #0x2
     ed4:	b.ne	ee4 <PyInit__posixshmem@@Base+0x70>  // b.any
     ed8:	cbnz	x3, ee4 <PyInit__posixshmem@@Base+0x70>
     edc:	cbnz	x19, f18 <PyInit__posixshmem@@Base+0xa4>
     ee0:	b	fa8 <PyInit__posixshmem@@Base+0x134>
     ee4:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x1118c>
     ee8:	add	x8, sp, #0x8
     eec:	add	x4, x4, #0x168
     ef0:	mov	w5, #0x2                   	// #2
     ef4:	mov	w6, #0x3                   	// #3
     ef8:	mov	x0, x19
     efc:	mov	x1, x20
     f00:	mov	x2, xzr
     f04:	mov	w7, wzr
     f08:	str	x8, [sp]
     f0c:	bl	ca0 <_PyArg_UnpackKeywords@plt>
     f10:	mov	x19, x0
     f14:	cbz	x19, fa8 <PyInit__posixshmem@@Base+0x134>
     f18:	ldr	x3, [x19]
     f1c:	ldr	x8, [x3, #8]
     f20:	ldrb	w8, [x8, #171]
     f24:	tbnz	w8, #4, f48 <PyInit__posixshmem@@Base+0xd4>
     f28:	adrp	x0, 1000 <PyInit__posixshmem@@Base+0x18c>
     f2c:	adrp	x1, 1000 <PyInit__posixshmem@@Base+0x18c>
     f30:	adrp	x2, 1000 <PyInit__posixshmem@@Base+0x18c>
     f34:	add	x0, x0, #0x35f
     f38:	add	x1, x1, #0x383
     f3c:	add	x2, x2, #0x393
     f40:	bl	cd0 <_PyArg_BadArgument@plt>
     f44:	b	fa8 <PyInit__posixshmem@@Base+0x134>
     f48:	ldrb	w8, [x3, #32]
     f4c:	tbnz	w8, #7, f60 <PyInit__posixshmem@@Base+0xec>
     f50:	mov	x0, x3
     f54:	bl	c70 <_PyUnicode_Ready@plt>
     f58:	cmn	w0, #0x1
     f5c:	b.eq	fa8 <PyInit__posixshmem@@Base+0x134>  // b.none
     f60:	ldr	x8, [x19, #8]
     f64:	ldr	x0, [x8, #8]
     f68:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
     f6c:	ldr	x8, [x8, #4016]
     f70:	cmp	x0, x8
     f74:	b.eq	f90 <PyInit__posixshmem@@Base+0x11c>  // b.none
     f78:	adrp	x23, 11000 <PyInit__posixshmem@@Base+0x1018c>
     f7c:	ldr	x21, [x19]
     f80:	ldr	x23, [x23, #4016]
     f84:	mov	x1, x23
     f88:	bl	d70 <PyType_IsSubtype@plt>
     f8c:	cbz	w0, fc4 <PyInit__posixshmem@@Base+0x150>
     f90:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
     f94:	ldr	x8, [x8, #4032]
     f98:	adrp	x1, 1000 <PyInit__posixshmem@@Base+0x18c>
     f9c:	add	x1, x1, #0x397
     fa0:	ldr	x0, [x8]
     fa4:	bl	cb0 <PyErr_SetString@plt>
     fa8:	mov	x0, xzr
     fac:	ldp	x20, x19, [sp, #80]
     fb0:	ldp	x22, x21, [sp, #64]
     fb4:	ldp	x24, x23, [sp, #48]
     fb8:	ldp	x29, x30, [sp, #32]
     fbc:	add	sp, sp, #0x60
     fc0:	ret
     fc4:	ldr	x0, [x19, #8]
     fc8:	bl	d90 <_PyLong_AsInt@plt>
     fcc:	mov	w22, w0
     fd0:	cmn	w0, #0x1
     fd4:	b.eq	1050 <PyInit__posixshmem@@Base+0x1dc>  // b.none
     fd8:	add	x8, x24, x20
     fdc:	cmp	x8, #0x2
     fe0:	b.ne	100c <PyInit__posixshmem@@Base+0x198>  // b.any
     fe4:	mov	w2, #0x1ff                 	// #511
     fe8:	mov	x0, x21
     fec:	mov	w1, w22
     ff0:	bl	1134 <PyInit__posixshmem@@Base+0x2c0>
     ff4:	mov	w19, w0
     ff8:	cmn	w0, #0x1
     ffc:	b.eq	105c <PyInit__posixshmem@@Base+0x1e8>  // b.none
    1000:	sxtw	x0, w19
    1004:	bl	cc0 <PyLong_FromLong@plt>
    1008:	b	fac <PyInit__posixshmem@@Base+0x138>
    100c:	ldr	x8, [x19, #16]
    1010:	ldr	x0, [x8, #8]
    1014:	cmp	x0, x23
    1018:	b.eq	f90 <PyInit__posixshmem@@Base+0x11c>  // b.none
    101c:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0x1018c>
    1020:	ldr	x1, [x1, #4016]
    1024:	bl	d70 <PyType_IsSubtype@plt>
    1028:	cbnz	w0, f90 <PyInit__posixshmem@@Base+0x11c>
    102c:	ldr	x0, [x19, #16]
    1030:	bl	d90 <_PyLong_AsInt@plt>
    1034:	mov	w2, w0
    1038:	cmn	w0, #0x1
    103c:	b.ne	fe8 <PyInit__posixshmem@@Base+0x174>  // b.any
    1040:	bl	cf0 <PyErr_Occurred@plt>
    1044:	cbnz	x0, fa8 <PyInit__posixshmem@@Base+0x134>
    1048:	mov	w2, #0xffffffff            	// #-1
    104c:	b	fe8 <PyInit__posixshmem@@Base+0x174>
    1050:	bl	cf0 <PyErr_Occurred@plt>
    1054:	cbnz	x0, fa8 <PyInit__posixshmem@@Base+0x134>
    1058:	b	fd8 <PyInit__posixshmem@@Base+0x164>
    105c:	bl	cf0 <PyErr_Occurred@plt>
    1060:	cbnz	x0, fa8 <PyInit__posixshmem@@Base+0x134>
    1064:	b	1000 <PyInit__posixshmem@@Base+0x18c>
    1068:	sub	sp, sp, #0x30
    106c:	stp	x29, x30, [sp, #16]
    1070:	str	x19, [sp, #32]
    1074:	add	x29, sp, #0x10
    1078:	mov	x19, x1
    107c:	cbz	x1, 1094 <PyInit__posixshmem@@Base+0x220>
    1080:	cmp	x2, #0x1
    1084:	b.ne	1094 <PyInit__posixshmem@@Base+0x220>  // b.any
    1088:	cbnz	x3, 1094 <PyInit__posixshmem@@Base+0x220>
    108c:	cbnz	x19, 10c8 <PyInit__posixshmem@@Base+0x254>
    1090:	b	1120 <PyInit__posixshmem@@Base+0x2ac>
    1094:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x1118c>
    1098:	add	x8, x29, #0x18
    109c:	add	x4, x4, #0x1a8
    10a0:	mov	w5, #0x1                   	// #1
    10a4:	mov	w6, #0x1                   	// #1
    10a8:	mov	x0, x19
    10ac:	mov	x1, x2
    10b0:	mov	x2, xzr
    10b4:	mov	w7, wzr
    10b8:	str	x8, [sp]
    10bc:	bl	ca0 <_PyArg_UnpackKeywords@plt>
    10c0:	mov	x19, x0
    10c4:	cbz	x19, 1120 <PyInit__posixshmem@@Base+0x2ac>
    10c8:	ldr	x3, [x19]
    10cc:	ldr	x8, [x3, #8]
    10d0:	ldrb	w8, [x8, #171]
    10d4:	tbnz	w8, #4, 10fc <PyInit__posixshmem@@Base+0x288>
    10d8:	adrp	x0, 1000 <PyInit__posixshmem@@Base+0x18c>
    10dc:	adrp	x1, 1000 <PyInit__posixshmem@@Base+0x18c>
    10e0:	adrp	x2, 1000 <PyInit__posixshmem@@Base+0x18c>
    10e4:	add	x0, x0, #0x368
    10e8:	add	x1, x1, #0x383
    10ec:	add	x2, x2, #0x393
    10f0:	bl	cd0 <_PyArg_BadArgument@plt>
    10f4:	mov	x0, xzr
    10f8:	b	1124 <PyInit__posixshmem@@Base+0x2b0>
    10fc:	ldrb	w8, [x3, #32]
    1100:	tbnz	w8, #7, 1114 <PyInit__posixshmem@@Base+0x2a0>
    1104:	mov	x0, x3
    1108:	bl	c70 <_PyUnicode_Ready@plt>
    110c:	cmn	w0, #0x1
    1110:	b.eq	1120 <PyInit__posixshmem@@Base+0x2ac>  // b.none
    1114:	ldr	x0, [x19]
    1118:	bl	122c <PyInit__posixshmem@@Base+0x3b8>
    111c:	b	1124 <PyInit__posixshmem@@Base+0x2b0>
    1120:	mov	x0, xzr
    1124:	ldr	x19, [sp, #32]
    1128:	ldp	x29, x30, [sp, #16]
    112c:	add	sp, sp, #0x30
    1130:	ret
    1134:	stp	x29, x30, [sp, #-80]!
    1138:	stp	x26, x25, [sp, #16]
    113c:	stp	x24, x23, [sp, #32]
    1140:	stp	x22, x21, [sp, #48]
    1144:	stp	x20, x19, [sp, #64]
    1148:	mov	x29, sp
    114c:	mov	w21, w2
    1150:	mov	w22, w1
    1154:	mov	x19, x0
    1158:	bl	d30 <PyUnicode_AsUTF8@plt>
    115c:	cbz	x0, 120c <PyInit__posixshmem@@Base+0x398>
    1160:	mov	x23, x0
    1164:	bl	d50 <PyEval_SaveThread@plt>
    1168:	mov	x24, x0
    116c:	mov	x0, x23
    1170:	mov	w1, w22
    1174:	mov	w2, w21
    1178:	bl	d20 <shm_open@plt>
    117c:	mov	w20, w0
    1180:	mov	x0, x24
    1184:	bl	c80 <PyEval_RestoreThread@plt>
    1188:	lsr	w26, w20, #31
    118c:	tbz	w20, #31, 11ec <PyInit__posixshmem@@Base+0x378>
    1190:	bl	d80 <__errno_location@plt>
    1194:	ldr	w8, [x0]
    1198:	cmp	w8, #0x4
    119c:	b.ne	11ec <PyInit__posixshmem@@Base+0x378>  // b.any
    11a0:	mov	x25, x0
    11a4:	bl	d60 <PyErr_CheckSignals@plt>
    11a8:	mov	w24, w0
    11ac:	cbnz	w0, 11f0 <PyInit__posixshmem@@Base+0x37c>
    11b0:	bl	d50 <PyEval_SaveThread@plt>
    11b4:	mov	x26, x0
    11b8:	mov	x0, x23
    11bc:	mov	w1, w22
    11c0:	mov	w2, w21
    11c4:	bl	d20 <shm_open@plt>
    11c8:	mov	w20, w0
    11cc:	mov	x0, x26
    11d0:	bl	c80 <PyEval_RestoreThread@plt>
    11d4:	lsr	w26, w20, #31
    11d8:	tbz	w20, #31, 11f0 <PyInit__posixshmem@@Base+0x37c>
    11dc:	ldr	w8, [x25]
    11e0:	cmp	w8, #0x4
    11e4:	b.eq	11a4 <PyInit__posixshmem@@Base+0x330>  // b.none
    11e8:	b	11f0 <PyInit__posixshmem@@Base+0x37c>
    11ec:	mov	w24, wzr
    11f0:	tbz	w26, #0, 1210 <PyInit__posixshmem@@Base+0x39c>
    11f4:	cbnz	w24, 120c <PyInit__posixshmem@@Base+0x398>
    11f8:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
    11fc:	ldr	x8, [x8, #4040]
    1200:	mov	x1, x19
    1204:	ldr	x0, [x8]
    1208:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
    120c:	mov	w20, #0xffffffff            	// #-1
    1210:	mov	w0, w20
    1214:	ldp	x20, x19, [sp, #64]
    1218:	ldp	x22, x21, [sp, #48]
    121c:	ldp	x24, x23, [sp, #32]
    1220:	ldp	x26, x25, [sp, #16]
    1224:	ldp	x29, x30, [sp], #80
    1228:	ret
    122c:	stp	x29, x30, [sp, #-64]!
    1230:	stp	x24, x23, [sp, #16]
    1234:	stp	x22, x21, [sp, #32]
    1238:	stp	x20, x19, [sp, #48]
    123c:	mov	x29, sp
    1240:	mov	x19, x0
    1244:	bl	d30 <PyUnicode_AsUTF8@plt>
    1248:	cbz	x0, 12fc <PyInit__posixshmem@@Base+0x488>
    124c:	mov	x20, x0
    1250:	bl	d50 <PyEval_SaveThread@plt>
    1254:	mov	x21, x0
    1258:	mov	x0, x20
    125c:	bl	d40 <shm_unlink@plt>
    1260:	mov	w22, w0
    1264:	mov	x0, x21
    1268:	bl	c80 <PyEval_RestoreThread@plt>
    126c:	lsr	w23, w22, #31
    1270:	tbz	w22, #31, 12e8 <PyInit__posixshmem@@Base+0x474>
    1274:	bl	d80 <__errno_location@plt>
    1278:	ldr	w8, [x0]
    127c:	cmp	w8, #0x4
    1280:	b.ne	12e8 <PyInit__posixshmem@@Base+0x474>  // b.any
    1284:	mov	x22, x0
    1288:	bl	d60 <PyErr_CheckSignals@plt>
    128c:	mov	w21, w0
    1290:	cbnz	w0, 12c4 <PyInit__posixshmem@@Base+0x450>
    1294:	bl	d50 <PyEval_SaveThread@plt>
    1298:	mov	x23, x0
    129c:	mov	x0, x20
    12a0:	bl	d40 <shm_unlink@plt>
    12a4:	mov	w24, w0
    12a8:	mov	x0, x23
    12ac:	bl	c80 <PyEval_RestoreThread@plt>
    12b0:	lsr	w23, w24, #31
    12b4:	tbz	w24, #31, 12c4 <PyInit__posixshmem@@Base+0x450>
    12b8:	ldr	w8, [x22]
    12bc:	cmp	w8, #0x4
    12c0:	b.eq	1288 <PyInit__posixshmem@@Base+0x414>  // b.none
    12c4:	tbz	w23, #0, 12f0 <PyInit__posixshmem@@Base+0x47c>
    12c8:	cbnz	w21, 12e0 <PyInit__posixshmem@@Base+0x46c>
    12cc:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
    12d0:	ldr	x8, [x8, #4040]
    12d4:	mov	x1, x19
    12d8:	ldr	x0, [x8]
    12dc:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
    12e0:	mov	x0, xzr
    12e4:	b	12fc <PyInit__posixshmem@@Base+0x488>
    12e8:	mov	w21, wzr
    12ec:	tbnz	w23, #0, 12c8 <PyInit__posixshmem@@Base+0x454>
    12f0:	bl	1310 <PyInit__posixshmem@@Base+0x49c>
    12f4:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0x1018c>
    12f8:	ldr	x0, [x0, #4056]
    12fc:	ldp	x20, x19, [sp, #48]
    1300:	ldp	x22, x21, [sp, #32]
    1304:	ldp	x24, x23, [sp, #16]
    1308:	ldp	x29, x30, [sp], #64
    130c:	ret
    1310:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
    1314:	ldr	x8, [x8, #4056]
    1318:	ldr	x9, [x8]
    131c:	add	x9, x9, #0x1
    1320:	str	x9, [x8]
    1324:	ret

Disassembly of section .fini:

0000000000001328 <.fini>:
    1328:	stp	x29, x30, [sp, #-16]!
    132c:	mov	x29, sp
    1330:	ldp	x29, x30, [sp], #16
    1334:	ret
