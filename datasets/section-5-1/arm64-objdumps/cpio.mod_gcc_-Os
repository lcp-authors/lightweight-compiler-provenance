
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cpio.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x4a8>:
   0:	mov	x3, x0
   4:	mov	x2, #0x0                   	// #0
   8:	mov	x0, #0x0                   	// #0
   c:	ldrh	w4, [x3, x2, lsl #1]
  10:	add	x2, x2, #0x1
  14:	cmp	x1, x2
  18:	orr	x0, x4, x0, lsl #16
  1c:	b.ne	c <grub_mod_init-0x49c>  // b.any
  20:	ret
  24:	str	xzr, [x0, #16]
  28:	ret
  2c:	stp	x29, x30, [sp, #-16]!
  30:	mov	x29, sp
  34:	ldr	x0, [x0, #80]
  38:	bl	0 <grub_free>
  3c:	adrp	x0, 0 <grub_mod_init-0x4a8>
  40:	ldp	x29, x30, [sp], #16
  44:	ldr	x0, [x0]
  48:	ldr	w0, [x0]
  4c:	ret
	...
  58:	stp	x29, x30, [sp, #-32]!
  5c:	mov	x3, x2
  60:	mov	x5, x0
  64:	mov	x29, sp
  68:	stp	x19, x20, [sp, #16]
  6c:	mov	x19, x2
  70:	mov	x4, x1
  74:	ldp	x20, x2, [x0, #80]
  78:	mov	x1, #0x0                   	// #0
  7c:	ldr	x0, [x20]
  80:	ldr	x6, [x20, #24]
  84:	str	x2, [x0, #48]
  88:	ldr	x2, [x5, #96]
  8c:	str	x2, [x0, #56]
  90:	ldr	x2, [x5, #24]
  94:	add	x2, x6, x2
  98:	bl	0 <grub_disk_read>
  9c:	cmp	w0, #0x0
  a0:	ldr	x0, [x20]
  a4:	str	xzr, [x0, #48]
  a8:	csinv	x0, x19, xzr, eq  // eq = none
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret
  b8:	stp	x29, x30, [sp, #-96]!
  bc:	mov	x29, sp
  c0:	stp	x19, x20, [sp, #16]
  c4:	mov	x19, x2
  c8:	mov	x20, x0
  cc:	stp	x21, x22, [sp, #32]
  d0:	add	x4, sp, #0x40
  d4:	mov	x22, x1
  d8:	stp	x23, x24, [sp, #48]
  dc:	mov	x1, #0x0                   	// #0
  e0:	mov	x23, x3
  e4:	ldr	x2, [x0, #16]
  e8:	str	x2, [x0, #8]
  ec:	ldr	x0, [x0]
  f0:	mov	x3, #0x1a                  	// #26
  f4:	bl	0 <grub_disk_read>
  f8:	cbz	w0, 10c <grub_mod_init-0x39c>
  fc:	adrp	x0, 0 <grub_mod_init-0x4a8>
 100:	ldr	x0, [x0]
 104:	ldr	w21, [x0]
 108:	b	13c <grub_mod_init-0x36c>
 10c:	mov	w21, w0
 110:	adrp	x0, 0 <grub_mod_init-0x4a8>
 114:	mov	x2, #0x2                   	// #2
 118:	ldr	x1, [x0]
 11c:	add	x0, sp, #0x40
 120:	bl	0 <grub_memcmp>
 124:	cbz	w0, 154 <grub_mod_init-0x354>
 128:	adrp	x0, 0 <grub_mod_init-0x4a8>
 12c:	ldr	x1, [x0]
 130:	mov	w0, #0x9                   	// #9
 134:	bl	0 <grub_error>
 138:	mov	w21, w0
 13c:	mov	w0, w21
 140:	ldp	x19, x20, [sp, #16]
 144:	ldp	x21, x22, [sp, #32]
 148:	ldp	x23, x24, [sp, #48]
 14c:	ldp	x29, x30, [sp], #96
 150:	ret
 154:	add	x0, sp, #0x56
 158:	mov	x1, #0x2                   	// #2
 15c:	bl	0 <grub_mod_init-0x4a8>
 160:	str	x0, [x20, #32]
 164:	cbz	x19, 178 <grub_mod_init-0x330>
 168:	add	x0, sp, #0x50
 16c:	mov	x1, #0x2                   	// #2
 170:	bl	0 <grub_mod_init-0x4a8>
 174:	str	w0, [x19]
 178:	add	x0, sp, #0x54
 17c:	mov	x1, #0x1                   	// #1
 180:	bl	0 <grub_mod_init-0x4a8>
 184:	mov	x19, x0
 188:	mov	x0, #0x7fffffff            	// #2147483647
 18c:	cmp	x19, x0
 190:	b.ls	1a0 <grub_mod_init-0x308>  // b.plast
 194:	mov	w0, #0xffffffff            	// #-1
 198:	str	w0, [x23]
 19c:	b	13c <grub_mod_init-0x36c>
 1a0:	mov	x1, #0x1                   	// #1
 1a4:	add	x0, sp, #0x46
 1a8:	bl	0 <grub_mod_init-0x4a8>
 1ac:	mov	x24, x0
 1b0:	str	w24, [x23]
 1b4:	add	x0, x19, #0x1
 1b8:	bl	0 <grub_malloc>
 1bc:	str	x0, [x22]
 1c0:	mov	x4, x0
 1c4:	cbz	x0, fc <grub_mod_init-0x3ac>
 1c8:	ldp	x0, x2, [x20]
 1cc:	mov	x3, x19
 1d0:	mov	x1, #0x0                   	// #0
 1d4:	add	x2, x2, #0x1a
 1d8:	bl	0 <grub_disk_read>
 1dc:	mov	w21, w0
 1e0:	ldr	x0, [x22]
 1e4:	cbz	w21, 1f0 <grub_mod_init-0x2b8>
 1e8:	bl	0 <grub_free>
 1ec:	b	fc <grub_mod_init-0x3ac>
 1f0:	strb	wzr, [x0, x19]
 1f4:	ldr	x0, [x20, #32]
 1f8:	cbnz	x0, 234 <grub_mod_init-0x274>
 1fc:	cmp	w24, #0x0
 200:	ccmp	x19, #0xb, #0x0, eq  // eq = none
 204:	b.ne	234 <grub_mod_init-0x274>  // b.any
 208:	adrp	x0, 0 <grub_mod_init-0x4a8>
 20c:	mov	x2, #0xb                   	// #11
 210:	ldr	x1, [x0]
 214:	ldr	x0, [x22]
 218:	bl	0 <grub_memcmp>
 21c:	cbnz	w0, 234 <grub_mod_init-0x274>
 220:	mov	w0, #0xffffffff            	// #-1
 224:	str	w0, [x23]
 228:	ldr	x0, [x22]
 22c:	bl	0 <grub_free>
 230:	b	13c <grub_mod_init-0x36c>
 234:	ldr	x0, [x20, #32]
 238:	add	x19, x19, #0x1b
 23c:	ldr	x3, [x20, #8]
 240:	and	x19, x19, #0xfffffffffffffffe
 244:	add	x0, x0, #0x1
 248:	add	x19, x19, x3
 24c:	and	x0, x0, #0xfffffffffffffffe
 250:	str	x19, [x20, #24]
 254:	add	x19, x0, x19
 258:	str	x19, [x20, #16]
 25c:	b	13c <grub_mod_init-0x36c>
	...
 280:	stp	x29, x30, [sp, #-32]!
 284:	mov	x29, sp
 288:	stp	x19, x20, [sp, #16]
 28c:	mov	x20, x0
 290:	ldr	x0, [x0, #32]
 294:	cbnz	x0, 2ac <grub_mod_init-0x1fc>
 298:	adrp	x0, 0 <grub_mod_init-0x4a8>
 29c:	ldp	x19, x20, [sp, #16]
 2a0:	ldp	x29, x30, [sp], #32
 2a4:	ldr	x0, [x0]
 2a8:	b	0 <grub_strdup>
 2ac:	add	x0, x0, #0x1
 2b0:	bl	0 <grub_malloc>
 2b4:	mov	x19, x0
 2b8:	cbz	x0, 2e0 <grub_mod_init-0x1c8>
 2bc:	ldp	x2, x3, [x20, #24]
 2c0:	mov	x4, x0
 2c4:	ldr	x0, [x20]
 2c8:	mov	x1, #0x0                   	// #0
 2cc:	bl	0 <grub_disk_read>
 2d0:	cbz	w0, 2f0 <grub_mod_init-0x1b8>
 2d4:	mov	x0, x19
 2d8:	mov	x19, #0x0                   	// #0
 2dc:	bl	0 <grub_free>
 2e0:	mov	x0, x19
 2e4:	ldp	x19, x20, [sp, #16]
 2e8:	ldp	x29, x30, [sp], #32
 2ec:	ret
 2f0:	ldr	x0, [x20, #32]
 2f4:	strb	wzr, [x19, x0]
 2f8:	b	2e0 <grub_mod_init-0x1c8>
 2fc:	nop
	...
 308:	stp	x29, x30, [sp, #-64]!
 30c:	mov	x3, #0x1a                  	// #26
 310:	mov	x2, #0x0                   	// #0
 314:	mov	x29, sp
 318:	add	x4, sp, #0x20
 31c:	mov	x1, #0x0                   	// #0
 320:	str	x19, [sp, #16]
 324:	mov	x19, x0
 328:	bl	0 <grub_disk_read>
 32c:	cbnz	w0, 364 <grub_mod_init-0x144>
 330:	adrp	x0, 0 <grub_mod_init-0x4a8>
 334:	mov	x2, #0x2                   	// #2
 338:	ldr	x1, [x0]
 33c:	add	x0, sp, #0x20
 340:	bl	0 <grub_memcmp>
 344:	cbnz	w0, 364 <grub_mod_init-0x144>
 348:	mov	x0, #0x28                  	// #40
 34c:	bl	0 <grub_zalloc>
 350:	cbz	x0, 364 <grub_mod_init-0x144>
 354:	str	x19, [x0]
 358:	ldr	x19, [sp, #16]
 35c:	ldp	x29, x30, [sp], #64
 360:	ret
 364:	adrp	x0, 0 <grub_mod_init-0x4a8>
 368:	ldr	x1, [x0]
 36c:	mov	w0, #0x9                   	// #9
 370:	bl	0 <grub_error>
 374:	mov	x0, #0x0                   	// #0
 378:	b	358 <grub_mod_init-0x150>
 37c:	nop
	...
 390:	stp	x29, x30, [sp, #-48]!
 394:	mov	x29, sp
 398:	str	x21, [sp, #32]
 39c:	mov	x21, x0
 3a0:	ldr	x0, [x0, #8]
 3a4:	stp	x19, x20, [sp, #16]
 3a8:	mov	x20, x1
 3ac:	ldr	x0, [x0]
 3b0:	bl	308 <grub_mod_init-0x1a0>
 3b4:	cbnz	x0, 3d8 <grub_mod_init-0xd0>
 3b8:	adrp	x0, 0 <grub_mod_init-0x4a8>
 3bc:	ldr	x0, [x0]
 3c0:	ldr	w20, [x0]
 3c4:	mov	w0, w20
 3c8:	ldp	x19, x20, [sp, #16]
 3cc:	ldr	x21, [sp, #32]
 3d0:	ldp	x29, x30, [sp], #48
 3d4:	ret
 3d8:	adrp	x1, 0 <grub_mod_init-0x4a8>
 3dc:	mov	x2, x20
 3e0:	mov	x19, x0
 3e4:	ldr	x1, [x1]
 3e8:	bl	0 <grub_archelp_open>
 3ec:	mov	w20, w0
 3f0:	cbz	w0, 400 <grub_mod_init-0xa8>
 3f4:	mov	x0, x19
 3f8:	bl	0 <grub_free>
 3fc:	b	3c4 <grub_mod_init-0xe4>
 400:	ldr	x0, [x19, #32]
 404:	str	x0, [x21, #64]
 408:	str	x19, [x21, #80]
 40c:	b	3c4 <grub_mod_init-0xe4>
	...
 420:	stp	x29, x30, [sp, #-48]!
 424:	mov	x29, sp
 428:	ldr	x0, [x0]
 42c:	stp	x19, x20, [sp, #16]
 430:	mov	x19, x1
 434:	stp	x21, x22, [sp, #32]
 438:	mov	x21, x2
 43c:	mov	x22, x3
 440:	bl	308 <grub_mod_init-0x1a0>
 444:	cbnz	x0, 468 <grub_mod_init-0x40>
 448:	adrp	x0, 0 <grub_mod_init-0x4a8>
 44c:	ldr	x0, [x0]
 450:	ldr	w19, [x0]
 454:	mov	w0, w19
 458:	ldp	x19, x20, [sp, #16]
 45c:	ldp	x21, x22, [sp, #32]
 460:	ldp	x29, x30, [sp], #48
 464:	ret
 468:	adrp	x1, 0 <grub_mod_init-0x4a8>
 46c:	mov	x2, x19
 470:	mov	x4, x22
 474:	mov	x3, x21
 478:	ldr	x1, [x1]
 47c:	mov	x20, x0
 480:	bl	0 <grub_archelp_dir>
 484:	mov	w19, w0
 488:	mov	x0, x20
 48c:	bl	0 <grub_free>
 490:	b	454 <grub_mod_init-0x54>
 494:	nop
	...

00000000000004a8 <grub_mod_init>:
 4a8:	adrp	x0, 0 <grub_mod_init-0x4a8>
 4ac:	ldr	x1, [x0]
 4b0:	adrp	x0, 0 <grub_mod_init-0x4a8>
 4b4:	ldr	x0, [x0]
 4b8:	add	x1, x1, #0x18
 4bc:	b	0 <grub_list_push>
	...

00000000000004d0 <grub_mod_fini>:
 4d0:	adrp	x0, 0 <grub_mod_init-0x4a8>
 4d4:	ldr	x0, [x0]
 4d8:	add	x0, x0, #0x18
 4dc:	b	0 <grub_list_remove>
	...
