
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-update-done_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004008b8 <_init>:
  4008b8:	stp	x29, x30, [sp, #-16]!
  4008bc:	mov	x29, sp
  4008c0:	bl	400a30 <call_weak_fn>
  4008c4:	ldp	x29, x30, [sp], #16
  4008c8:	ret

Disassembly of section .plt:

00000000004008d0 <__libc_start_main@plt-0x20>:
  4008d0:	stp	x16, x30, [sp, #-16]!
  4008d4:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  4008d8:	ldr	x17, [x16, #3968]
  4008dc:	add	x16, x16, #0xf80
  4008e0:	br	x17
  4008e4:	nop
  4008e8:	nop
  4008ec:	nop

00000000004008f0 <__libc_start_main@plt>:
  4008f0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  4008f4:	ldr	x17, [x16, #3976]
  4008f8:	add	x16, x16, #0xf88
  4008fc:	br	x17

0000000000400900 <abort@plt>:
  400900:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400904:	ldr	x17, [x16, #3984]
  400908:	add	x16, x16, #0xf90
  40090c:	br	x17

0000000000400910 <__gmon_start__@plt>:
  400910:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400914:	ldr	x17, [x16, #3992]
  400918:	add	x16, x16, #0xf98
  40091c:	br	x17

0000000000400920 <log_setup_service@plt>:
  400920:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400924:	ldr	x17, [x16, #4000]
  400928:	add	x16, x16, #0xfa0
  40092c:	br	x17

0000000000400930 <__errno_location@plt>:
  400930:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400934:	ldr	x17, [x16, #4008]
  400938:	add	x16, x16, #0xfa8
  40093c:	br	x17

0000000000400940 <log_get_max_level_realm@plt>:
  400940:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400944:	ldr	x17, [x16, #4016]
  400948:	add	x16, x16, #0xfb0
  40094c:	br	x17

0000000000400950 <log_internal_realm@plt>:
  400950:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400954:	ldr	x17, [x16, #4024]
  400958:	add	x16, x16, #0xfb8
  40095c:	br	x17

0000000000400960 <abs@plt>:
  400960:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400964:	ldr	x17, [x16, #4032]
  400968:	add	x16, x16, #0xfc0
  40096c:	br	x17

0000000000400970 <mac_selinux_init@plt>:
  400970:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400974:	ldr	x17, [x16, #4040]
  400978:	add	x16, x16, #0xfc8
  40097c:	br	x17

0000000000400980 <timespec_load_nsec@plt>:
  400980:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400984:	ldr	x17, [x16, #4048]
  400988:	add	x16, x16, #0xfd0
  40098c:	br	x17

0000000000400990 <asprintf@plt>:
  400990:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  400994:	ldr	x17, [x16, #4056]
  400998:	add	x16, x16, #0xfd8
  40099c:	br	x17

00000000004009a0 <log_oom_internal@plt>:
  4009a0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  4009a4:	ldr	x17, [x16, #4064]
  4009a8:	add	x16, x16, #0xfe0
  4009ac:	br	x17

00000000004009b0 <write_string_file_atomic_label_ts@plt>:
  4009b0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  4009b4:	ldr	x17, [x16, #4072]
  4009b8:	add	x16, x16, #0xfe8
  4009bc:	br	x17

00000000004009c0 <free@plt>:
  4009c0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  4009c4:	ldr	x17, [x16, #4080]
  4009c8:	add	x16, x16, #0xff0
  4009cc:	br	x17

00000000004009d0 <__xstat64@plt>:
  4009d0:	adrp	x16, 41f000 <__FRAME_END__+0x1dcc0>
  4009d4:	ldr	x17, [x16, #4088]
  4009d8:	add	x16, x16, #0xff8
  4009dc:	br	x17

Disassembly of section .text:

00000000004009e0 <_start>:
  4009e0:	mov	x29, #0x0                   	// #0
  4009e4:	mov	x30, #0x0                   	// #0
  4009e8:	mov	x5, x0
  4009ec:	ldr	x1, [sp]
  4009f0:	add	x2, sp, #0x8
  4009f4:	mov	x6, sp
  4009f8:	movz	x0, #0x0, lsl #48
  4009fc:	movk	x0, #0x0, lsl #32
  400a00:	movk	x0, #0x40, lsl #16
  400a04:	movk	x0, #0xba8
  400a08:	movz	x3, #0x0, lsl #48
  400a0c:	movk	x3, #0x0, lsl #32
  400a10:	movk	x3, #0x40, lsl #16
  400a14:	movk	x3, #0xff0
  400a18:	movz	x4, #0x0, lsl #48
  400a1c:	movk	x4, #0x0, lsl #32
  400a20:	movk	x4, #0x40, lsl #16
  400a24:	movk	x4, #0x1070
  400a28:	bl	4008f0 <__libc_start_main@plt>
  400a2c:	bl	400900 <abort@plt>

0000000000400a30 <call_weak_fn>:
  400a30:	adrp	x0, 41f000 <__FRAME_END__+0x1dcc0>
  400a34:	ldr	x0, [x0, #3944]
  400a38:	cbz	x0, 400a40 <call_weak_fn+0x10>
  400a3c:	b	400910 <__gmon_start__@plt>
  400a40:	ret

0000000000400a44 <deregister_tm_clones>:
  400a44:	stp	x29, x30, [sp, #-32]!
  400a48:	mov	x29, sp
  400a4c:	adrp	x0, 420000 <completed.8445>
  400a50:	add	x0, x0, #0x0
  400a54:	str	x0, [sp, #24]
  400a58:	ldr	x0, [sp, #24]
  400a5c:	str	x0, [sp, #24]
  400a60:	ldr	x1, [sp, #24]
  400a64:	adrp	x0, 420000 <completed.8445>
  400a68:	add	x0, x0, #0x0
  400a6c:	cmp	x1, x0
  400a70:	b.eq	400aac <deregister_tm_clones+0x68>  // b.none
  400a74:	adrp	x0, 401000 <__libc_csu_init+0x10>
  400a78:	add	x0, x0, #0x98
  400a7c:	ldr	x0, [x0]
  400a80:	str	x0, [sp, #16]
  400a84:	ldr	x0, [sp, #16]
  400a88:	str	x0, [sp, #16]
  400a8c:	ldr	x0, [sp, #16]
  400a90:	cmp	x0, #0x0
  400a94:	b.eq	400ab0 <deregister_tm_clones+0x6c>  // b.none
  400a98:	ldr	x1, [sp, #16]
  400a9c:	adrp	x0, 420000 <completed.8445>
  400aa0:	add	x0, x0, #0x0
  400aa4:	blr	x1
  400aa8:	b	400ab0 <deregister_tm_clones+0x6c>
  400aac:	nop
  400ab0:	ldp	x29, x30, [sp], #32
  400ab4:	ret

0000000000400ab8 <register_tm_clones>:
  400ab8:	stp	x29, x30, [sp, #-48]!
  400abc:	mov	x29, sp
  400ac0:	adrp	x0, 420000 <completed.8445>
  400ac4:	add	x0, x0, #0x0
  400ac8:	str	x0, [sp, #40]
  400acc:	ldr	x0, [sp, #40]
  400ad0:	str	x0, [sp, #40]
  400ad4:	ldr	x1, [sp, #40]
  400ad8:	adrp	x0, 420000 <completed.8445>
  400adc:	add	x0, x0, #0x0
  400ae0:	sub	x0, x1, x0
  400ae4:	asr	x0, x0, #3
  400ae8:	lsr	x1, x0, #63
  400aec:	add	x0, x1, x0
  400af0:	asr	x0, x0, #1
  400af4:	str	x0, [sp, #32]
  400af8:	ldr	x0, [sp, #32]
  400afc:	cmp	x0, #0x0
  400b00:	b.eq	400b40 <register_tm_clones+0x88>  // b.none
  400b04:	adrp	x0, 401000 <__libc_csu_init+0x10>
  400b08:	add	x0, x0, #0xa0
  400b0c:	ldr	x0, [x0]
  400b10:	str	x0, [sp, #24]
  400b14:	ldr	x0, [sp, #24]
  400b18:	str	x0, [sp, #24]
  400b1c:	ldr	x0, [sp, #24]
  400b20:	cmp	x0, #0x0
  400b24:	b.eq	400b44 <register_tm_clones+0x8c>  // b.none
  400b28:	ldr	x2, [sp, #24]
  400b2c:	ldr	x1, [sp, #32]
  400b30:	adrp	x0, 420000 <completed.8445>
  400b34:	add	x0, x0, #0x0
  400b38:	blr	x2
  400b3c:	b	400b44 <register_tm_clones+0x8c>
  400b40:	nop
  400b44:	ldp	x29, x30, [sp], #48
  400b48:	ret

0000000000400b4c <__do_global_dtors_aux>:
  400b4c:	stp	x29, x30, [sp, #-16]!
  400b50:	mov	x29, sp
  400b54:	adrp	x0, 420000 <completed.8445>
  400b58:	add	x0, x0, #0x0
  400b5c:	ldrb	w0, [x0]
  400b60:	and	x0, x0, #0xff
  400b64:	cmp	x0, #0x0
  400b68:	b.ne	400b84 <__do_global_dtors_aux+0x38>  // b.any
  400b6c:	bl	400a44 <deregister_tm_clones>
  400b70:	adrp	x0, 420000 <completed.8445>
  400b74:	add	x0, x0, #0x0
  400b78:	mov	w1, #0x1                   	// #1
  400b7c:	strb	w1, [x0]
  400b80:	b	400b88 <__do_global_dtors_aux+0x3c>
  400b84:	nop
  400b88:	ldp	x29, x30, [sp], #16
  400b8c:	ret

0000000000400b90 <frame_dummy>:
  400b90:	stp	x29, x30, [sp, #-16]!
  400b94:	mov	x29, sp
  400b98:	bl	400ab8 <register_tm_clones>
  400b9c:	nop
  400ba0:	ldp	x29, x30, [sp], #16
  400ba4:	ret

0000000000400ba8 <main>:
  400ba8:	sub	sp, sp, #0x100
  400bac:	stp	x29, x30, [sp, #240]
  400bb0:	add	x29, sp, #0xf0
  400bb4:	adrp	x8, 401000 <__libc_csu_init+0x10>
  400bb8:	add	x8, x8, #0xa8
  400bbc:	adrp	x9, 401000 <__libc_csu_init+0x10>
  400bc0:	add	x9, x9, #0xad
  400bc4:	add	x9, x9, #0x3
  400bc8:	add	x10, sp, #0x60
  400bcc:	stur	wzr, [x29, #-4]
  400bd0:	stur	w0, [x29, #-8]
  400bd4:	stur	x1, [x29, #-16]
  400bd8:	str	wzr, [sp, #88]
  400bdc:	str	x8, [sp, #48]
  400be0:	str	x9, [sp, #40]
  400be4:	str	x10, [sp, #32]
  400be8:	bl	400920 <log_setup_service@plt>
  400bec:	ldr	x0, [sp, #48]
  400bf0:	ldr	x1, [sp, #32]
  400bf4:	bl	401078 <stat64>
  400bf8:	cmp	w0, #0x0
  400bfc:	cset	w11, ge  // ge = tcont
  400c00:	tbnz	w11, #0, 400c90 <main+0xe8>
  400c04:	mov	w8, #0x3                   	// #3
  400c08:	str	w8, [sp, #84]
  400c0c:	bl	400930 <__errno_location@plt>
  400c10:	ldr	w8, [x0]
  400c14:	str	w8, [sp, #80]
  400c18:	str	wzr, [sp, #76]
  400c1c:	ldr	w0, [sp, #76]
  400c20:	bl	400940 <log_get_max_level_realm@plt>
  400c24:	ldr	w8, [sp, #84]
  400c28:	and	w8, w8, #0x7
  400c2c:	cmp	w0, w8
  400c30:	b.lt	400c68 <main+0xc0>  // b.tstop
  400c34:	ldr	w8, [sp, #76]
  400c38:	ldr	w9, [sp, #84]
  400c3c:	orr	w0, w9, w8, lsl #10
  400c40:	ldr	w1, [sp, #80]
  400c44:	ldr	x2, [sp, #40]
  400c48:	mov	w3, #0x2f                  	// #47
  400c4c:	adrp	x4, 401000 <__libc_csu_init+0x10>
  400c50:	add	x4, x4, #0xce
  400c54:	adrp	x5, 401000 <__libc_csu_init+0x10>
  400c58:	add	x5, x5, #0xd3
  400c5c:	bl	400950 <log_internal_realm@plt>
  400c60:	str	w0, [sp, #28]
  400c64:	b	400c7c <main+0xd4>
  400c68:	ldr	w0, [sp, #80]
  400c6c:	bl	400960 <abs@plt>
  400c70:	mov	w8, wzr
  400c74:	subs	w8, w8, w0, uxtb
  400c78:	str	w8, [sp, #28]
  400c7c:	ldr	w8, [sp, #28]
  400c80:	str	w8, [sp, #72]
  400c84:	mov	w8, #0x1                   	// #1
  400c88:	stur	w8, [x29, #-4]
  400c8c:	b	400da4 <main+0x1fc>
  400c90:	bl	400970 <mac_selinux_init@plt>
  400c94:	str	w0, [sp, #92]
  400c98:	ldr	w8, [sp, #92]
  400c9c:	cmp	w8, #0x0
  400ca0:	cset	w8, ge  // ge = tcont
  400ca4:	tbnz	w8, #0, 400d30 <main+0x188>
  400ca8:	mov	w8, #0x3                   	// #3
  400cac:	str	w8, [sp, #68]
  400cb0:	ldr	w8, [sp, #92]
  400cb4:	str	w8, [sp, #64]
  400cb8:	str	wzr, [sp, #60]
  400cbc:	ldr	w0, [sp, #60]
  400cc0:	bl	400940 <log_get_max_level_realm@plt>
  400cc4:	ldr	w8, [sp, #68]
  400cc8:	and	w8, w8, #0x7
  400ccc:	cmp	w0, w8
  400cd0:	b.lt	400d08 <main+0x160>  // b.tstop
  400cd4:	ldr	w8, [sp, #60]
  400cd8:	ldr	w9, [sp, #68]
  400cdc:	orr	w0, w9, w8, lsl #10
  400ce0:	ldr	w1, [sp, #64]
  400ce4:	ldr	x2, [sp, #40]
  400ce8:	mov	w3, #0x35                  	// #53
  400cec:	adrp	x4, 401000 <__libc_csu_init+0x10>
  400cf0:	add	x4, x4, #0xce
  400cf4:	adrp	x5, 401000 <__libc_csu_init+0x10>
  400cf8:	add	x5, x5, #0xeb
  400cfc:	bl	400950 <log_internal_realm@plt>
  400d00:	str	w0, [sp, #24]
  400d04:	b	400d1c <main+0x174>
  400d08:	ldr	w0, [sp, #64]
  400d0c:	bl	400960 <abs@plt>
  400d10:	mov	w8, wzr
  400d14:	subs	w8, w8, w0, uxtb
  400d18:	str	w8, [sp, #24]
  400d1c:	ldr	w8, [sp, #24]
  400d20:	str	w8, [sp, #56]
  400d24:	mov	w8, #0x1                   	// #1
  400d28:	stur	w8, [x29, #-4]
  400d2c:	b	400da4 <main+0x1fc>
  400d30:	add	x8, sp, #0x60
  400d34:	add	x1, x8, #0x58
  400d38:	adrp	x0, 401000 <__libc_csu_init+0x10>
  400d3c:	add	x0, x0, #0x104
  400d40:	str	x8, [sp, #16]
  400d44:	bl	400db4 <apply_timestamp>
  400d48:	str	w0, [sp, #92]
  400d4c:	ldr	x8, [sp, #16]
  400d50:	add	x1, x8, #0x58
  400d54:	adrp	x0, 401000 <__libc_csu_init+0x10>
  400d58:	add	x0, x0, #0x112
  400d5c:	bl	400db4 <apply_timestamp>
  400d60:	str	w0, [sp, #88]
  400d64:	ldr	w9, [sp, #92]
  400d68:	cmp	w9, #0x0
  400d6c:	cset	w9, lt  // lt = tstop
  400d70:	mov	w10, #0x1                   	// #1
  400d74:	str	w10, [sp, #12]
  400d78:	tbnz	w9, #0, 400d8c <main+0x1e4>
  400d7c:	ldr	w8, [sp, #88]
  400d80:	cmp	w8, #0x0
  400d84:	cset	w8, lt  // lt = tstop
  400d88:	str	w8, [sp, #12]
  400d8c:	ldr	w8, [sp, #12]
  400d90:	mov	w9, #0x1                   	// #1
  400d94:	mov	w10, wzr
  400d98:	tst	w8, #0x1
  400d9c:	csel	w8, w9, w10, ne  // ne = any
  400da0:	stur	w8, [x29, #-4]
  400da4:	ldur	w0, [x29, #-4]
  400da8:	ldp	x29, x30, [sp, #240]
  400dac:	add	sp, sp, #0x100
  400db0:	ret

0000000000400db4 <apply_timestamp>:
  400db4:	sub	sp, sp, #0x90
  400db8:	stp	x29, x30, [sp, #128]
  400dbc:	add	x29, sp, #0x80
  400dc0:	mov	x8, xzr
  400dc4:	adrp	x9, 401000 <__libc_csu_init+0x10>
  400dc8:	add	x9, x9, #0x120
  400dcc:	adrp	x10, 401000 <__libc_csu_init+0x10>
  400dd0:	add	x10, x10, #0xad
  400dd4:	add	x10, x10, #0x3
  400dd8:	adrp	x11, 401000 <__libc_csu_init+0x10>
  400ddc:	add	x11, x11, #0x1e1
  400de0:	sub	x12, x29, #0x20
  400de4:	stur	x0, [x29, #-16]
  400de8:	stur	x1, [x29, #-24]
  400dec:	stur	x8, [x29, #-32]
  400df0:	ldur	x0, [x29, #-24]
  400df4:	str	x9, [sp, #48]
  400df8:	str	x10, [sp, #40]
  400dfc:	str	x11, [sp, #32]
  400e00:	str	x12, [sp, #24]
  400e04:	bl	400980 <timespec_load_nsec@plt>
  400e08:	ldr	x8, [sp, #24]
  400e0c:	str	x0, [sp, #16]
  400e10:	mov	x0, x8
  400e14:	ldr	x1, [sp, #48]
  400e18:	ldr	x2, [sp, #16]
  400e1c:	bl	400990 <asprintf@plt>
  400e20:	cmp	w0, #0x0
  400e24:	cset	w13, ge  // ge = tcont
  400e28:	tbnz	w13, #0, 400e54 <apply_timestamp+0xa0>
  400e2c:	mov	w8, wzr
  400e30:	mov	w0, w8
  400e34:	ldr	x1, [sp, #40]
  400e38:	mov	w2, #0x1e                  	// #30
  400e3c:	ldr	x3, [sp, #32]
  400e40:	bl	4009a0 <log_oom_internal@plt>
  400e44:	stur	w0, [x29, #-4]
  400e48:	mov	w8, #0x1                   	// #1
  400e4c:	stur	w8, [x29, #-40]
  400e50:	b	400fb0 <apply_timestamp+0x1fc>
  400e54:	ldur	x0, [x29, #-16]
  400e58:	ldur	x1, [x29, #-32]
  400e5c:	ldur	x2, [x29, #-24]
  400e60:	bl	4009b0 <write_string_file_atomic_label_ts@plt>
  400e64:	stur	w0, [x29, #-36]
  400e68:	ldur	w8, [x29, #-36]
  400e6c:	mov	w9, #0xffffffe2            	// #-30
  400e70:	cmp	w8, w9
  400e74:	b.ne	400f04 <apply_timestamp+0x150>  // b.any
  400e78:	mov	w8, #0x7                   	// #7
  400e7c:	stur	w8, [x29, #-44]
  400e80:	stur	wzr, [x29, #-48]
  400e84:	stur	wzr, [x29, #-52]
  400e88:	ldur	w0, [x29, #-52]
  400e8c:	bl	400940 <log_get_max_level_realm@plt>
  400e90:	ldur	w8, [x29, #-44]
  400e94:	and	w8, w8, #0x7
  400e98:	cmp	w0, w8
  400e9c:	b.lt	400ed4 <apply_timestamp+0x120>  // b.tstop
  400ea0:	ldur	w8, [x29, #-52]
  400ea4:	ldur	w9, [x29, #-44]
  400ea8:	orr	w0, w9, w8, lsl #10
  400eac:	ldur	w1, [x29, #-48]
  400eb0:	ldur	x6, [x29, #-16]
  400eb4:	ldr	x2, [sp, #40]
  400eb8:	mov	w3, #0x22                  	// #34
  400ebc:	ldr	x4, [sp, #32]
  400ec0:	adrp	x5, 401000 <__libc_csu_init+0x10>
  400ec4:	add	x5, x5, #0x1f1
  400ec8:	bl	400950 <log_internal_realm@plt>
  400ecc:	str	w0, [sp, #12]
  400ed0:	b	400ee8 <apply_timestamp+0x134>
  400ed4:	ldur	w0, [x29, #-48]
  400ed8:	bl	400960 <abs@plt>
  400edc:	mov	w8, wzr
  400ee0:	subs	w8, w8, w0, uxtb
  400ee4:	str	w8, [sp, #12]
  400ee8:	ldr	w8, [sp, #12]
  400eec:	stur	w8, [x29, #-56]
  400ef0:	ldur	w8, [x29, #-56]
  400ef4:	stur	w8, [x29, #-4]
  400ef8:	mov	w8, #0x1                   	// #1
  400efc:	stur	w8, [x29, #-40]
  400f00:	b	400fb0 <apply_timestamp+0x1fc>
  400f04:	ldur	w8, [x29, #-36]
  400f08:	cmp	w8, #0x0
  400f0c:	cset	w8, ge  // ge = tcont
  400f10:	tbnz	w8, #0, 400fa4 <apply_timestamp+0x1f0>
  400f14:	mov	w8, #0x3                   	// #3
  400f18:	stur	w8, [x29, #-60]
  400f1c:	ldur	w8, [x29, #-36]
  400f20:	str	w8, [sp, #64]
  400f24:	str	wzr, [sp, #60]
  400f28:	ldr	w0, [sp, #60]
  400f2c:	bl	400940 <log_get_max_level_realm@plt>
  400f30:	ldur	w8, [x29, #-60]
  400f34:	and	w8, w8, #0x7
  400f38:	cmp	w0, w8
  400f3c:	b.lt	400f74 <apply_timestamp+0x1c0>  // b.tstop
  400f40:	ldr	w8, [sp, #60]
  400f44:	ldur	w9, [x29, #-60]
  400f48:	orr	w0, w9, w8, lsl #10
  400f4c:	ldr	w1, [sp, #64]
  400f50:	ldur	x6, [x29, #-16]
  400f54:	ldr	x2, [sp, #40]
  400f58:	mov	w3, #0x24                  	// #36
  400f5c:	ldr	x4, [sp, #32]
  400f60:	adrp	x5, 401000 <__libc_csu_init+0x10>
  400f64:	add	x5, x5, #0x21f
  400f68:	bl	400950 <log_internal_realm@plt>
  400f6c:	str	w0, [sp, #8]
  400f70:	b	400f88 <apply_timestamp+0x1d4>
  400f74:	ldr	w0, [sp, #64]
  400f78:	bl	400960 <abs@plt>
  400f7c:	mov	w8, wzr
  400f80:	subs	w8, w8, w0, uxtb
  400f84:	str	w8, [sp, #8]
  400f88:	ldr	w8, [sp, #8]
  400f8c:	str	w8, [sp, #56]
  400f90:	ldr	w8, [sp, #56]
  400f94:	stur	w8, [x29, #-4]
  400f98:	mov	w8, #0x1                   	// #1
  400f9c:	stur	w8, [x29, #-40]
  400fa0:	b	400fb0 <apply_timestamp+0x1fc>
  400fa4:	stur	wzr, [x29, #-4]
  400fa8:	mov	w8, #0x1                   	// #1
  400fac:	stur	w8, [x29, #-40]
  400fb0:	sub	x0, x29, #0x20
  400fb4:	bl	400fc8 <freep>
  400fb8:	ldur	w0, [x29, #-4]
  400fbc:	ldp	x29, x30, [sp, #128]
  400fc0:	add	sp, sp, #0x90
  400fc4:	ret

0000000000400fc8 <freep>:
  400fc8:	sub	sp, sp, #0x20
  400fcc:	stp	x29, x30, [sp, #16]
  400fd0:	add	x29, sp, #0x10
  400fd4:	str	x0, [sp, #8]
  400fd8:	ldr	x8, [sp, #8]
  400fdc:	ldr	x0, [x8]
  400fe0:	bl	4009c0 <free@plt>
  400fe4:	ldp	x29, x30, [sp, #16]
  400fe8:	add	sp, sp, #0x20
  400fec:	ret

0000000000400ff0 <__libc_csu_init>:
  400ff0:	stp	x29, x30, [sp, #-64]!
  400ff4:	mov	x29, sp
  400ff8:	stp	x19, x20, [sp, #16]
  400ffc:	adrp	x20, 41f000 <__FRAME_END__+0x1dcc0>
  401000:	add	x20, x20, #0xd40
  401004:	stp	x21, x22, [sp, #32]
  401008:	adrp	x21, 41f000 <__FRAME_END__+0x1dcc0>
  40100c:	add	x21, x21, #0xd38
  401010:	sub	x20, x20, x21
  401014:	mov	w22, w0
  401018:	stp	x23, x24, [sp, #48]
  40101c:	mov	x23, x1
  401020:	mov	x24, x2
  401024:	bl	4008b8 <_init>
  401028:	cmp	xzr, x20, asr #3
  40102c:	b.eq	401058 <__libc_csu_init+0x68>  // b.none
  401030:	asr	x20, x20, #3
  401034:	mov	x19, #0x0                   	// #0
  401038:	ldr	x3, [x21, x19, lsl #3]
  40103c:	mov	x2, x24
  401040:	add	x19, x19, #0x1
  401044:	mov	x1, x23
  401048:	mov	w0, w22
  40104c:	blr	x3
  401050:	cmp	x20, x19
  401054:	b.ne	401038 <__libc_csu_init+0x48>  // b.any
  401058:	ldp	x19, x20, [sp, #16]
  40105c:	ldp	x21, x22, [sp, #32]
  401060:	ldp	x23, x24, [sp, #48]
  401064:	ldp	x29, x30, [sp], #64
  401068:	ret
  40106c:	nop

0000000000401070 <__libc_csu_fini>:
  401070:	ret
  401074:	udf	#0

0000000000401078 <stat64>:
  401078:	mov	x2, x1
  40107c:	mov	x1, x0
  401080:	mov	w0, #0x0                   	// #0
  401084:	b	4009d0 <__xstat64@plt>

Disassembly of section .fini:

0000000000401088 <_fini>:
  401088:	stp	x29, x30, [sp, #-16]!
  40108c:	mov	x29, sp
  401090:	ldp	x29, x30, [sp], #16
  401094:	ret
