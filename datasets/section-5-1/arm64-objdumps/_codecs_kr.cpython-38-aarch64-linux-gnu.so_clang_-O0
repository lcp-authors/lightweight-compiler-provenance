
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_kr.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002768 <.init>:
    2768:	stp	x29, x30, [sp, #-16]!
    276c:	mov	x29, sp
    2770:	bl	2890 <PyCapsule_New@plt+0x10>
    2774:	ldp	x29, x30, [sp], #16
    2778:	ret

Disassembly of section .plt:

0000000000002780 <PyObject_GetAttrString@plt-0x20>:
    2780:	stp	x16, x30, [sp, #-16]!
    2784:	adrp	x16, 30000 <PyInit__codecs_kr@@Base+0x2d69c>
    2788:	ldr	x17, [x16, #4088]
    278c:	add	x16, x16, #0xff8
    2790:	br	x17
    2794:	nop
    2798:	nop
    279c:	nop

00000000000027a0 <PyObject_GetAttrString@plt>:
    27a0:	adrp	x16, 31000 <PyObject_GetAttrString>
    27a4:	ldr	x17, [x16]
    27a8:	add	x16, x16, #0x0
    27ac:	br	x17

00000000000027b0 <__cxa_finalize@plt>:
    27b0:	adrp	x16, 31000 <PyObject_GetAttrString>
    27b4:	ldr	x17, [x16, #8]
    27b8:	add	x16, x16, #0x8
    27bc:	br	x17

00000000000027c0 <_Py_Dealloc@plt>:
    27c0:	adrp	x16, 31000 <PyObject_GetAttrString>
    27c4:	ldr	x17, [x16, #16]
    27c8:	add	x16, x16, #0x10
    27cc:	br	x17

00000000000027d0 <PyErr_SetString@plt>:
    27d0:	adrp	x16, 31000 <PyObject_GetAttrString>
    27d4:	ldr	x17, [x16, #24]
    27d8:	add	x16, x16, #0x18
    27dc:	br	x17

00000000000027e0 <memset@plt>:
    27e0:	adrp	x16, 31000 <PyObject_GetAttrString>
    27e4:	ldr	x17, [x16, #32]
    27e8:	add	x16, x16, #0x20
    27ec:	br	x17

00000000000027f0 <__gmon_start__@plt>:
    27f0:	adrp	x16, 31000 <PyObject_GetAttrString>
    27f4:	ldr	x17, [x16, #40]
    27f8:	add	x16, x16, #0x28
    27fc:	br	x17

0000000000002800 <PyModule_Create2@plt>:
    2800:	adrp	x16, 31000 <PyObject_GetAttrString>
    2804:	ldr	x17, [x16, #48]
    2808:	add	x16, x16, #0x30
    280c:	br	x17

0000000000002810 <PyImport_ImportModuleNoBlock@plt>:
    2810:	adrp	x16, 31000 <PyObject_GetAttrString>
    2814:	ldr	x17, [x16, #56]
    2818:	add	x16, x16, #0x38
    281c:	br	x17

0000000000002820 <PyObject_CallFunctionObjArgs@plt>:
    2820:	adrp	x16, 31000 <PyObject_GetAttrString>
    2824:	ldr	x17, [x16, #64]
    2828:	add	x16, x16, #0x40
    282c:	br	x17

0000000000002830 <strcmp@plt>:
    2830:	adrp	x16, 31000 <PyObject_GetAttrString>
    2834:	ldr	x17, [x16, #72]
    2838:	add	x16, x16, #0x48
    283c:	br	x17

0000000000002840 <_PyUnicodeWriter_WriteChar@plt>:
    2840:	adrp	x16, 31000 <PyObject_GetAttrString>
    2844:	ldr	x17, [x16, #80]
    2848:	add	x16, x16, #0x50
    284c:	br	x17

0000000000002850 <PyUnicode_AsUTF8@plt>:
    2850:	adrp	x16, 31000 <PyObject_GetAttrString>
    2854:	ldr	x17, [x16, #88]
    2858:	add	x16, x16, #0x58
    285c:	br	x17

0000000000002860 <strcpy@plt>:
    2860:	adrp	x16, 31000 <PyObject_GetAttrString>
    2864:	ldr	x17, [x16, #96]
    2868:	add	x16, x16, #0x60
    286c:	br	x17

0000000000002870 <PyModule_AddObject@plt>:
    2870:	adrp	x16, 31000 <PyObject_GetAttrString>
    2874:	ldr	x17, [x16, #104]
    2878:	add	x16, x16, #0x68
    287c:	br	x17

0000000000002880 <PyCapsule_New@plt>:
    2880:	adrp	x16, 31000 <PyObject_GetAttrString>
    2884:	ldr	x17, [x16, #112]
    2888:	add	x16, x16, #0x70
    288c:	br	x17

Disassembly of section .text:

0000000000002890 <PyInit__codecs_kr@@Base-0xd4>:
    2890:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d69c>
    2894:	ldr	x0, [x0, #4048]
    2898:	cbz	x0, 28a0 <PyCapsule_New@plt+0x20>
    289c:	b	27f0 <__gmon_start__@plt>
    28a0:	ret
    28a4:	nop
    28a8:	adrp	x0, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    28ac:	add	x0, x0, #0x138
    28b0:	adrp	x1, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    28b4:	add	x1, x1, #0x138
    28b8:	cmp	x1, x0
    28bc:	b.eq	28d4 <PyCapsule_New@plt+0x54>  // b.none
    28c0:	adrp	x1, 30000 <PyInit__codecs_kr@@Base+0x2d69c>
    28c4:	ldr	x1, [x1, #4024]
    28c8:	cbz	x1, 28d4 <PyCapsule_New@plt+0x54>
    28cc:	mov	x16, x1
    28d0:	br	x16
    28d4:	ret
    28d8:	adrp	x0, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    28dc:	add	x0, x0, #0x138
    28e0:	adrp	x1, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    28e4:	add	x1, x1, #0x138
    28e8:	sub	x1, x1, x0
    28ec:	lsr	x2, x1, #63
    28f0:	add	x1, x2, x1, asr #3
    28f4:	cmp	xzr, x1, asr #1
    28f8:	asr	x1, x1, #1
    28fc:	b.eq	2914 <PyCapsule_New@plt+0x94>  // b.none
    2900:	adrp	x2, 30000 <PyInit__codecs_kr@@Base+0x2d69c>
    2904:	ldr	x2, [x2, #4056]
    2908:	cbz	x2, 2914 <PyCapsule_New@plt+0x94>
    290c:	mov	x16, x2
    2910:	br	x16
    2914:	ret
    2918:	stp	x29, x30, [sp, #-32]!
    291c:	mov	x29, sp
    2920:	str	x19, [sp, #16]
    2924:	adrp	x19, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    2928:	ldrb	w0, [x19, #312]
    292c:	cbnz	w0, 2954 <PyCapsule_New@plt+0xd4>
    2930:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d69c>
    2934:	ldr	x0, [x0, #4032]
    2938:	cbz	x0, 2948 <PyCapsule_New@plt+0xc8>
    293c:	adrp	x0, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    2940:	ldr	x0, [x0, #120]
    2944:	bl	27b0 <__cxa_finalize@plt>
    2948:	bl	28a8 <PyCapsule_New@plt+0x28>
    294c:	mov	w0, #0x1                   	// #1
    2950:	strb	w0, [x19, #312]
    2954:	ldr	x19, [sp, #16]
    2958:	ldp	x29, x30, [sp], #32
    295c:	ret
    2960:	b	28d8 <PyCapsule_New@plt+0x58>

0000000000002964 <PyInit__codecs_kr@@Base>:
    2964:	sub	sp, sp, #0x20
    2968:	stp	x29, x30, [sp, #16]
    296c:	add	x29, sp, #0x10
    2970:	adrp	x0, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    2974:	add	x0, x0, #0x80
    2978:	mov	w1, #0x3f5                 	// #1013
    297c:	bl	2800 <PyModule_Create2@plt>
    2980:	str	x0, [sp, #8]
    2984:	ldr	x8, [sp, #8]
    2988:	cbz	x8, 2994 <PyInit__codecs_kr@@Base+0x30>
    298c:	ldr	x0, [sp, #8]
    2990:	bl	29a4 <PyInit__codecs_kr@@Base+0x40>
    2994:	ldr	x0, [sp, #8]
    2998:	ldp	x29, x30, [sp, #16]
    299c:	add	sp, sp, #0x20
    29a0:	ret
    29a4:	sub	sp, sp, #0x160
    29a8:	stp	x29, x30, [sp, #320]
    29ac:	str	x28, [sp, #336]
    29b0:	add	x29, sp, #0x140
    29b4:	sub	x8, x29, #0x18
    29b8:	adrp	x9, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    29bc:	add	x9, x9, #0x130
    29c0:	str	x0, [x8, #8]
    29c4:	ldr	x9, [x9]
    29c8:	str	x9, [x8]
    29cc:	str	x8, [sp, #24]
    29d0:	ldr	x8, [sp, #24]
    29d4:	ldr	x9, [x8]
    29d8:	ldr	x9, [x9]
    29dc:	ldrb	w10, [x9]
    29e0:	cbz	w10, 2ab4 <PyInit__codecs_kr@@Base+0x150>
    29e4:	add	x8, sp, #0x28
    29e8:	mov	x0, x8
    29ec:	mov	w9, wzr
    29f0:	mov	w1, w9
    29f4:	mov	x2, #0x100                 	// #256
    29f8:	str	x8, [sp, #16]
    29fc:	bl	27e0 <memset@plt>
    2a00:	mov	w9, #0x5f                  	// #95
    2a04:	strb	w9, [sp, #40]
    2a08:	ldr	x8, [sp, #16]
    2a0c:	strb	w9, [x8, #1]
    2a10:	mov	w10, #0x6d                  	// #109
    2a14:	strb	w10, [x8, #2]
    2a18:	mov	w10, #0x61                  	// #97
    2a1c:	strb	w10, [x8, #3]
    2a20:	mov	w10, #0x70                  	// #112
    2a24:	strb	w10, [x8, #4]
    2a28:	strb	w9, [x8, #5]
    2a2c:	add	x0, x8, #0x6
    2a30:	ldr	x11, [sp, #24]
    2a34:	ldr	x12, [x11]
    2a38:	ldr	x1, [x12]
    2a3c:	bl	2860 <strcpy@plt>
    2a40:	ldr	x8, [sp, #24]
    2a44:	ldr	x11, [x8, #8]
    2a48:	ldr	x12, [x8]
    2a4c:	mov	x0, x12
    2a50:	adrp	x1, 4000 <PyInit__codecs_kr@@Base+0x169c>
    2a54:	add	x1, x1, #0x6ec
    2a58:	mov	x12, xzr
    2a5c:	mov	x2, x12
    2a60:	str	x11, [sp, #8]
    2a64:	bl	2880 <PyCapsule_New@plt>
    2a68:	ldr	x8, [sp, #8]
    2a6c:	str	x0, [sp]
    2a70:	mov	x0, x8
    2a74:	ldr	x1, [sp, #16]
    2a78:	ldr	x2, [sp]
    2a7c:	bl	2870 <PyModule_AddObject@plt>
    2a80:	str	w0, [sp, #36]
    2a84:	ldr	w9, [sp, #36]
    2a88:	mov	w10, #0xffffffff            	// #-1
    2a8c:	cmp	w9, w10
    2a90:	b.ne	2aa0 <PyInit__codecs_kr@@Base+0x13c>  // b.any
    2a94:	mov	w8, #0xffffffff            	// #-1
    2a98:	stur	w8, [x29, #-4]
    2a9c:	b	2ab8 <PyInit__codecs_kr@@Base+0x154>
    2aa0:	ldr	x8, [sp, #24]
    2aa4:	ldr	x9, [x8]
    2aa8:	add	x9, x9, #0x18
    2aac:	str	x9, [x8]
    2ab0:	b	29d0 <PyInit__codecs_kr@@Base+0x6c>
    2ab4:	stur	wzr, [x29, #-4]
    2ab8:	ldur	w0, [x29, #-4]
    2abc:	ldr	x28, [sp, #336]
    2ac0:	ldp	x29, x30, [sp, #320]
    2ac4:	add	sp, sp, #0x160
    2ac8:	ret
    2acc:	sub	sp, sp, #0x50
    2ad0:	stp	x29, x30, [sp, #64]
    2ad4:	add	x29, sp, #0x40
    2ad8:	stur	x0, [x29, #-16]
    2adc:	stur	x1, [x29, #-24]
    2ae0:	ldur	x8, [x29, #-24]
    2ae4:	ldr	x8, [x8, #8]
    2ae8:	ldr	x8, [x8, #168]
    2aec:	and	x8, x8, #0x10000000
    2af0:	cbnz	x8, 2b18 <PyInit__codecs_kr@@Base+0x1b4>
    2af4:	adrp	x8, 30000 <PyInit__codecs_kr@@Base+0x2d69c>
    2af8:	ldr	x8, [x8, #4040]
    2afc:	ldr	x0, [x8]
    2b00:	adrp	x1, 4000 <PyInit__codecs_kr@@Base+0x169c>
    2b04:	add	x1, x1, #0x6b0
    2b08:	bl	27d0 <PyErr_SetString@plt>
    2b0c:	mov	x8, xzr
    2b10:	stur	x8, [x29, #-8]
    2b14:	b	2c34 <PyInit__codecs_kr@@Base+0x2d0>
    2b18:	ldur	x0, [x29, #-24]
    2b1c:	bl	2850 <PyUnicode_AsUTF8@plt>
    2b20:	str	x0, [sp]
    2b24:	ldr	x8, [sp]
    2b28:	cbnz	x8, 2b38 <PyInit__codecs_kr@@Base+0x1d4>
    2b2c:	mov	x8, xzr
    2b30:	stur	x8, [x29, #-8]
    2b34:	b	2c34 <PyInit__codecs_kr@@Base+0x2d0>
    2b38:	bl	2c44 <PyInit__codecs_kr@@Base+0x2e0>
    2b3c:	str	x0, [sp, #16]
    2b40:	ldr	x8, [sp, #16]
    2b44:	cbnz	x8, 2b54 <PyInit__codecs_kr@@Base+0x1f0>
    2b48:	mov	x8, xzr
    2b4c:	stur	x8, [x29, #-8]
    2b50:	b	2c34 <PyInit__codecs_kr@@Base+0x2d0>
    2b54:	adrp	x8, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    2b58:	add	x8, x8, #0x128
    2b5c:	ldr	x8, [x8]
    2b60:	str	x8, [sp, #8]
    2b64:	ldr	x8, [sp, #8]
    2b68:	ldr	x8, [x8]
    2b6c:	ldrb	w9, [x8]
    2b70:	cbz	w9, 2b9c <PyInit__codecs_kr@@Base+0x238>
    2b74:	ldr	x8, [sp, #8]
    2b78:	ldr	x0, [x8]
    2b7c:	ldr	x1, [sp]
    2b80:	bl	2830 <strcmp@plt>
    2b84:	cbnz	w0, 2b8c <PyInit__codecs_kr@@Base+0x228>
    2b88:	b	2b9c <PyInit__codecs_kr@@Base+0x238>
    2b8c:	ldr	x8, [sp, #8]
    2b90:	add	x8, x8, #0x48
    2b94:	str	x8, [sp, #8]
    2b98:	b	2b64 <PyInit__codecs_kr@@Base+0x200>
    2b9c:	ldr	x8, [sp, #8]
    2ba0:	ldr	x8, [x8]
    2ba4:	ldrb	w9, [x8]
    2ba8:	cbnz	w9, 2bd0 <PyInit__codecs_kr@@Base+0x26c>
    2bac:	adrp	x8, 30000 <PyInit__codecs_kr@@Base+0x2d69c>
    2bb0:	ldr	x8, [x8, #4064]
    2bb4:	ldr	x0, [x8]
    2bb8:	adrp	x1, 4000 <PyInit__codecs_kr@@Base+0x169c>
    2bbc:	add	x1, x1, #0x6d0
    2bc0:	bl	27d0 <PyErr_SetString@plt>
    2bc4:	mov	x8, xzr
    2bc8:	stur	x8, [x29, #-8]
    2bcc:	b	2c34 <PyInit__codecs_kr@@Base+0x2d0>
    2bd0:	ldr	x0, [sp, #8]
    2bd4:	adrp	x1, 4000 <PyInit__codecs_kr@@Base+0x169c>
    2bd8:	add	x1, x1, #0x6ec
    2bdc:	mov	x8, xzr
    2be0:	mov	x2, x8
    2be4:	bl	2880 <PyCapsule_New@plt>
    2be8:	str	x0, [sp, #32]
    2bec:	ldr	x8, [sp, #32]
    2bf0:	cbnz	x8, 2c00 <PyInit__codecs_kr@@Base+0x29c>
    2bf4:	mov	x8, xzr
    2bf8:	stur	x8, [x29, #-8]
    2bfc:	b	2c34 <PyInit__codecs_kr@@Base+0x2d0>
    2c00:	ldr	x0, [sp, #16]
    2c04:	ldr	x1, [sp, #32]
    2c08:	mov	x8, xzr
    2c0c:	mov	x2, x8
    2c10:	bl	2820 <PyObject_CallFunctionObjArgs@plt>
    2c14:	str	x0, [sp, #24]
    2c18:	ldr	x2, [sp, #32]
    2c1c:	adrp	x0, 4000 <PyInit__codecs_kr@@Base+0x169c>
    2c20:	add	x0, x0, #0x703
    2c24:	mov	w1, #0x127                 	// #295
    2c28:	bl	2cd0 <PyInit__codecs_kr@@Base+0x36c>
    2c2c:	ldr	x8, [sp, #24]
    2c30:	stur	x8, [x29, #-8]
    2c34:	ldur	x0, [x29, #-8]
    2c38:	ldp	x29, x30, [sp, #64]
    2c3c:	add	sp, sp, #0x50
    2c40:	ret
    2c44:	sub	sp, sp, #0x30
    2c48:	stp	x29, x30, [sp, #32]
    2c4c:	add	x29, sp, #0x20
    2c50:	adrp	x8, 31000 <PyInit__codecs_kr@@Base+0x2e69c>
    2c54:	add	x8, x8, #0x140
    2c58:	ldr	x9, [x8]
    2c5c:	str	x8, [sp, #8]
    2c60:	cbnz	x9, 2cb4 <PyInit__codecs_kr@@Base+0x350>
    2c64:	adrp	x0, 4000 <PyInit__codecs_kr@@Base+0x169c>
    2c68:	add	x0, x0, #0x737
    2c6c:	bl	2810 <PyImport_ImportModuleNoBlock@plt>
    2c70:	str	x0, [sp, #16]
    2c74:	ldr	x8, [sp, #16]
    2c78:	cbnz	x8, 2c88 <PyInit__codecs_kr@@Base+0x324>
    2c7c:	mov	x8, xzr
    2c80:	stur	x8, [x29, #-8]
    2c84:	b	2cc0 <PyInit__codecs_kr@@Base+0x35c>
    2c88:	ldr	x0, [sp, #16]
    2c8c:	adrp	x1, 4000 <PyInit__codecs_kr@@Base+0x169c>
    2c90:	add	x1, x1, #0x747
    2c94:	bl	27a0 <PyObject_GetAttrString@plt>
    2c98:	ldr	x8, [sp, #8]
    2c9c:	str	x0, [x8]
    2ca0:	ldr	x2, [sp, #16]
    2ca4:	adrp	x0, 4000 <PyInit__codecs_kr@@Base+0x169c>
    2ca8:	add	x0, x0, #0x703
    2cac:	mov	w1, #0xff                  	// #255
    2cb0:	bl	2cd0 <PyInit__codecs_kr@@Base+0x36c>
    2cb4:	ldr	x8, [sp, #8]
    2cb8:	ldr	x9, [x8]
    2cbc:	stur	x9, [x29, #-8]
    2cc0:	ldur	x0, [x29, #-8]
    2cc4:	ldp	x29, x30, [sp, #32]
    2cc8:	add	sp, sp, #0x30
    2ccc:	ret
    2cd0:	sub	sp, sp, #0x30
    2cd4:	stp	x29, x30, [sp, #32]
    2cd8:	add	x29, sp, #0x20
    2cdc:	stur	x0, [x29, #-8]
    2ce0:	stur	w1, [x29, #-12]
    2ce4:	str	x2, [sp, #8]
    2ce8:	ldr	x8, [sp, #8]
    2cec:	ldr	x9, [x8]
    2cf0:	subs	x9, x9, #0x1
    2cf4:	str	x9, [x8]
    2cf8:	cbz	x9, 2d00 <PyInit__codecs_kr@@Base+0x39c>
    2cfc:	b	2d08 <PyInit__codecs_kr@@Base+0x3a4>
    2d00:	ldr	x0, [sp, #8]
    2d04:	bl	27c0 <_Py_Dealloc@plt>
    2d08:	ldp	x29, x30, [sp, #32]
    2d0c:	add	sp, sp, #0x30
    2d10:	ret
    2d14:	sub	sp, sp, #0x70
    2d18:	ldr	w8, [sp, #112]
    2d1c:	adrp	x9, 2d000 <PyInit__codecs_kr@@Base+0x2a69c>
    2d20:	add	x9, x9, #0xd70
    2d24:	str	x0, [sp, #96]
    2d28:	str	x1, [sp, #88]
    2d2c:	str	w2, [sp, #84]
    2d30:	str	x3, [sp, #72]
    2d34:	str	x4, [sp, #64]
    2d38:	str	x5, [sp, #56]
    2d3c:	str	x6, [sp, #48]
    2d40:	str	x7, [sp, #40]
    2d44:	str	w8, [sp, #36]
    2d48:	str	x9, [sp, #16]
    2d4c:	ldr	x8, [sp, #64]
    2d50:	ldr	x8, [x8]
    2d54:	ldr	x9, [sp, #56]
    2d58:	cmp	x8, x9
    2d5c:	b.ge	3148 <PyInit__codecs_kr@@Base+0x7e4>  // b.tcont
    2d60:	ldr	w8, [sp, #84]
    2d64:	cmp	w8, #0x1
    2d68:	b.ne	2d84 <PyInit__codecs_kr@@Base+0x420>  // b.any
    2d6c:	ldr	x8, [sp, #72]
    2d70:	ldr	x9, [sp, #64]
    2d74:	ldr	x9, [x9]
    2d78:	ldrb	w10, [x8, x9]
    2d7c:	str	w10, [sp, #12]
    2d80:	b	2dc4 <PyInit__codecs_kr@@Base+0x460>
    2d84:	ldr	w8, [sp, #84]
    2d88:	cmp	w8, #0x2
    2d8c:	b.ne	2da8 <PyInit__codecs_kr@@Base+0x444>  // b.any
    2d90:	ldr	x8, [sp, #72]
    2d94:	ldr	x9, [sp, #64]
    2d98:	ldr	x9, [x9]
    2d9c:	ldrh	w10, [x8, x9, lsl #1]
    2da0:	str	w10, [sp, #8]
    2da4:	b	2dbc <PyInit__codecs_kr@@Base+0x458>
    2da8:	ldr	x8, [sp, #72]
    2dac:	ldr	x9, [sp, #64]
    2db0:	ldr	x9, [x9]
    2db4:	ldr	w10, [x8, x9, lsl #2]
    2db8:	str	w10, [sp, #8]
    2dbc:	ldr	w8, [sp, #8]
    2dc0:	str	w8, [sp, #12]
    2dc4:	ldr	w8, [sp, #12]
    2dc8:	str	w8, [sp, #32]
    2dcc:	ldr	w8, [sp, #32]
    2dd0:	cmp	w8, #0x80
    2dd4:	b.cs	2e30 <PyInit__codecs_kr@@Base+0x4cc>  // b.hs, b.nlast
    2dd8:	ldr	x8, [sp, #40]
    2ddc:	cmp	x8, #0x1
    2de0:	b.ge	2df0 <PyInit__codecs_kr@@Base+0x48c>  // b.tcont
    2de4:	mov	x8, #0xffffffffffffffff    	// #-1
    2de8:	str	x8, [sp, #104]
    2dec:	b	314c <PyInit__codecs_kr@@Base+0x7e8>
    2df0:	ldr	w8, [sp, #32]
    2df4:	ldr	x9, [sp, #48]
    2df8:	ldr	x9, [x9]
    2dfc:	strb	w8, [x9]
    2e00:	ldr	x8, [sp, #64]
    2e04:	ldr	x9, [x8]
    2e08:	add	x9, x9, #0x1
    2e0c:	str	x9, [x8]
    2e10:	ldr	x8, [sp, #48]
    2e14:	ldr	x9, [x8]
    2e18:	add	x9, x9, #0x1
    2e1c:	str	x9, [x8]
    2e20:	ldr	x8, [sp, #40]
    2e24:	subs	x8, x8, #0x1
    2e28:	str	x8, [sp, #40]
    2e2c:	b	2d4c <PyInit__codecs_kr@@Base+0x3e8>
    2e30:	ldr	w8, [sp, #32]
    2e34:	mov	w9, #0xffff                	// #65535
    2e38:	cmp	w8, w9
    2e3c:	b.ls	2e4c <PyInit__codecs_kr@@Base+0x4e8>  // b.plast
    2e40:	mov	x8, #0x1                   	// #1
    2e44:	str	x8, [sp, #104]
    2e48:	b	314c <PyInit__codecs_kr@@Base+0x7e8>
    2e4c:	ldr	x8, [sp, #40]
    2e50:	cmp	x8, #0x2
    2e54:	b.ge	2e64 <PyInit__codecs_kr@@Base+0x500>  // b.tcont
    2e58:	mov	x8, #0xffffffffffffffff    	// #-1
    2e5c:	str	x8, [sp, #104]
    2e60:	b	314c <PyInit__codecs_kr@@Base+0x7e8>
    2e64:	ldr	w8, [sp, #32]
    2e68:	lsr	w8, w8, #8
    2e6c:	mov	w9, w8
    2e70:	ubfx	x9, x9, #0, #32
    2e74:	mov	x10, #0x10                  	// #16
    2e78:	mul	x9, x10, x9
    2e7c:	ldr	x10, [sp, #16]
    2e80:	add	x9, x10, x9
    2e84:	ldr	x9, [x9]
    2e88:	cbz	x9, 2f64 <PyInit__codecs_kr@@Base+0x600>
    2e8c:	ldr	w8, [sp, #32]
    2e90:	and	w8, w8, #0xff
    2e94:	ldr	w9, [sp, #32]
    2e98:	mov	x10, #0x8                   	// #8
    2e9c:	lsr	w9, w9, w10
    2ea0:	mov	w11, w9
    2ea4:	ubfx	x11, x11, #0, #32
    2ea8:	mov	x12, #0x10                  	// #16
    2eac:	mul	x11, x12, x11
    2eb0:	ldr	x12, [sp, #16]
    2eb4:	add	x11, x12, x11
    2eb8:	ldrb	w9, [x11, #8]
    2ebc:	cmp	w8, w9
    2ec0:	b.cc	2f64 <PyInit__codecs_kr@@Base+0x600>  // b.lo, b.ul, b.last
    2ec4:	ldr	w8, [sp, #32]
    2ec8:	and	w8, w8, #0xff
    2ecc:	ldr	w9, [sp, #32]
    2ed0:	lsr	w9, w9, #8
    2ed4:	mov	w10, w9
    2ed8:	ubfx	x10, x10, #0, #32
    2edc:	mov	x11, #0x10                  	// #16
    2ee0:	mul	x10, x11, x10
    2ee4:	ldr	x11, [sp, #16]
    2ee8:	add	x10, x11, x10
    2eec:	ldrb	w9, [x10, #9]
    2ef0:	cmp	w8, w9
    2ef4:	b.hi	2f64 <PyInit__codecs_kr@@Base+0x600>  // b.pmore
    2ef8:	ldr	w8, [sp, #32]
    2efc:	mov	x9, #0x8                   	// #8
    2f00:	mov	x0, x9
    2f04:	lsr	w8, w8, w0
    2f08:	mov	w10, w8
    2f0c:	ubfx	x10, x10, #0, #32
    2f10:	mov	x11, #0x10                  	// #16
    2f14:	mul	x10, x11, x10
    2f18:	ldr	x12, [sp, #16]
    2f1c:	add	x10, x12, x10
    2f20:	ldr	x10, [x10]
    2f24:	ldr	w8, [sp, #32]
    2f28:	and	w8, w8, #0xff
    2f2c:	ldr	w13, [sp, #32]
    2f30:	lsr	w9, w13, w9
    2f34:	mov	w14, w9
    2f38:	ubfx	x14, x14, #0, #32
    2f3c:	mul	x11, x11, x14
    2f40:	add	x11, x12, x11
    2f44:	ldrb	w9, [x11, #8]
    2f48:	subs	w8, w8, w9
    2f4c:	ldrh	w8, [x10, w8, uxtw #1]
    2f50:	strh	w8, [sp, #30]
    2f54:	mov	w9, #0xffff                	// #65535
    2f58:	cmp	w8, w9
    2f5c:	b.eq	2f64 <PyInit__codecs_kr@@Base+0x600>  // b.none
    2f60:	b	2f70 <PyInit__codecs_kr@@Base+0x60c>
    2f64:	mov	x8, #0x1                   	// #1
    2f68:	str	x8, [sp, #104]
    2f6c:	b	314c <PyInit__codecs_kr@@Base+0x7e8>
    2f70:	ldrh	w8, [sp, #30]
    2f74:	and	w8, w8, #0x8000
    2f78:	cbnz	w8, 2fdc <PyInit__codecs_kr@@Base+0x678>
    2f7c:	ldrh	w8, [sp, #30]
    2f80:	asr	w8, w8, #8
    2f84:	orr	w8, w8, #0x80
    2f88:	ldr	x9, [sp, #48]
    2f8c:	ldr	x9, [x9]
    2f90:	strb	w8, [x9]
    2f94:	ldrh	w8, [sp, #30]
    2f98:	and	w8, w8, #0xff
    2f9c:	orr	w8, w8, #0x80
    2fa0:	ldr	x9, [sp, #48]
    2fa4:	ldr	x9, [x9]
    2fa8:	strb	w8, [x9, #1]
    2fac:	ldr	x8, [sp, #64]
    2fb0:	ldr	x9, [x8]
    2fb4:	add	x9, x9, #0x1
    2fb8:	str	x9, [x8]
    2fbc:	ldr	x8, [sp, #48]
    2fc0:	ldr	x9, [x8]
    2fc4:	add	x9, x9, #0x2
    2fc8:	str	x9, [x8]
    2fcc:	ldr	x8, [sp, #40]
    2fd0:	subs	x8, x8, #0x2
    2fd4:	str	x8, [sp, #40]
    2fd8:	b	3144 <PyInit__codecs_kr@@Base+0x7e0>
    2fdc:	ldr	x8, [sp, #40]
    2fe0:	cmp	x8, #0x8
    2fe4:	b.ge	2ff4 <PyInit__codecs_kr@@Base+0x690>  // b.tcont
    2fe8:	mov	x8, #0xffffffffffffffff    	// #-1
    2fec:	str	x8, [sp, #104]
    2ff0:	b	314c <PyInit__codecs_kr@@Base+0x7e8>
    2ff4:	ldr	x8, [sp, #48]
    2ff8:	ldr	x8, [x8]
    2ffc:	mov	w9, #0xa4                  	// #164
    3000:	strb	w9, [x8]
    3004:	ldr	x8, [sp, #48]
    3008:	ldr	x8, [x8]
    300c:	mov	w9, #0xd4                  	// #212
    3010:	strb	w9, [x8, #1]
    3014:	ldr	w8, [sp, #32]
    3018:	mov	w9, #0xac00                	// #44032
    301c:	subs	w8, w8, w9
    3020:	str	w8, [sp, #32]
    3024:	ldr	x8, [sp, #48]
    3028:	ldr	x8, [x8]
    302c:	mov	w9, #0xa4                  	// #164
    3030:	strb	w9, [x8, #2]
    3034:	ldr	w8, [sp, #32]
    3038:	mov	w9, #0x24c                 	// #588
    303c:	udiv	w8, w8, w9
    3040:	mov	w10, w8
    3044:	ubfx	x10, x10, #0, #32
    3048:	adrp	x11, 4000 <PyInit__codecs_kr@@Base+0x169c>
    304c:	add	x11, x11, #0x77a
    3050:	add	x10, x11, x10
    3054:	ldrb	w8, [x10]
    3058:	ldr	x10, [sp, #48]
    305c:	ldr	x10, [x10]
    3060:	strb	w8, [x10, #3]
    3064:	ldr	x8, [sp, #48]
    3068:	ldr	x9, [x8]
    306c:	add	x9, x9, #0x4
    3070:	str	x9, [x8]
    3074:	ldr	x8, [sp, #40]
    3078:	subs	x8, x8, #0x4
    307c:	str	x8, [sp, #40]
    3080:	ldr	x8, [sp, #48]
    3084:	ldr	x8, [x8]
    3088:	mov	w9, #0xa4                  	// #164
    308c:	strb	w9, [x8]
    3090:	ldr	w8, [sp, #32]
    3094:	mov	w9, #0x1c                  	// #28
    3098:	udiv	w8, w8, w9
    309c:	mov	w9, #0x15                  	// #21
    30a0:	udiv	w10, w8, w9
    30a4:	mul	w9, w10, w9
    30a8:	subs	w8, w8, w9
    30ac:	mov	w11, w8
    30b0:	ubfx	x11, x11, #0, #32
    30b4:	adrp	x12, 4000 <PyInit__codecs_kr@@Base+0x169c>
    30b8:	add	x12, x12, #0x78d
    30bc:	add	x11, x12, x11
    30c0:	ldrb	w8, [x11]
    30c4:	ldr	x11, [sp, #48]
    30c8:	ldr	x11, [x11]
    30cc:	strb	w8, [x11, #1]
    30d0:	ldr	x8, [sp, #48]
    30d4:	ldr	x8, [x8]
    30d8:	mov	w9, #0xa4                  	// #164
    30dc:	strb	w9, [x8, #2]
    30e0:	ldr	w8, [sp, #32]
    30e4:	mov	w9, #0x1c                  	// #28
    30e8:	udiv	w10, w8, w9
    30ec:	mul	w9, w10, w9
    30f0:	subs	w8, w8, w9
    30f4:	mov	w11, w8
    30f8:	ubfx	x11, x11, #0, #32
    30fc:	adrp	x12, 4000 <PyInit__codecs_kr@@Base+0x169c>
    3100:	add	x12, x12, #0x7a2
    3104:	add	x11, x12, x11
    3108:	ldrb	w8, [x11]
    310c:	ldr	x11, [sp, #48]
    3110:	ldr	x11, [x11]
    3114:	strb	w8, [x11, #3]
    3118:	ldr	x8, [sp, #64]
    311c:	ldr	x9, [x8]
    3120:	add	x9, x9, #0x1
    3124:	str	x9, [x8]
    3128:	ldr	x8, [sp, #48]
    312c:	ldr	x9, [x8]
    3130:	add	x9, x9, #0x4
    3134:	str	x9, [x8]
    3138:	ldr	x8, [sp, #40]
    313c:	subs	x8, x8, #0x4
    3140:	str	x8, [sp, #40]
    3144:	b	2d4c <PyInit__codecs_kr@@Base+0x3e8>
    3148:	str	xzr, [sp, #104]
    314c:	ldr	x0, [sp, #104]
    3150:	add	sp, sp, #0x70
    3154:	ret
    3158:	sub	sp, sp, #0x60
    315c:	stp	x29, x30, [sp, #80]
    3160:	add	x29, sp, #0x50
    3164:	adrp	x8, 2e000 <PyInit__codecs_kr@@Base+0x2b69c>
    3168:	add	x8, x8, #0xd70
    316c:	stur	x0, [x29, #-16]
    3170:	stur	x1, [x29, #-24]
    3174:	stur	x2, [x29, #-32]
    3178:	str	x3, [sp, #40]
    317c:	str	x4, [sp, #32]
    3180:	str	x8, [sp, #8]
    3184:	ldr	x8, [sp, #40]
    3188:	cmp	x8, #0x0
    318c:	cset	w9, le
    3190:	tbnz	w9, #0, 3588 <PyInit__codecs_kr@@Base+0xc24>
    3194:	ldur	x8, [x29, #-32]
    3198:	ldr	x8, [x8]
    319c:	ldrb	w9, [x8]
    31a0:	strb	w9, [sp, #31]
    31a4:	ldrb	w9, [sp, #31]
    31a8:	cmp	w9, #0x80
    31ac:	b.ge	31f4 <PyInit__codecs_kr@@Base+0x890>  // b.tcont
    31b0:	ldr	x0, [sp, #32]
    31b4:	ldrb	w1, [sp, #31]
    31b8:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    31bc:	cmp	w0, #0x0
    31c0:	cset	w8, ge  // ge = tcont
    31c4:	tbnz	w8, #0, 31d4 <PyInit__codecs_kr@@Base+0x870>
    31c8:	mov	x8, #0xfffffffffffffffc    	// #-4
    31cc:	stur	x8, [x29, #-8]
    31d0:	b	358c <PyInit__codecs_kr@@Base+0xc28>
    31d4:	ldur	x8, [x29, #-32]
    31d8:	ldr	x9, [x8]
    31dc:	add	x9, x9, #0x1
    31e0:	str	x9, [x8]
    31e4:	ldr	x8, [sp, #40]
    31e8:	subs	x8, x8, #0x1
    31ec:	str	x8, [sp, #40]
    31f0:	b	3184 <PyInit__codecs_kr@@Base+0x820>
    31f4:	ldr	x8, [sp, #40]
    31f8:	cmp	x8, #0x2
    31fc:	b.ge	320c <PyInit__codecs_kr@@Base+0x8a8>  // b.tcont
    3200:	mov	x8, #0xfffffffffffffffe    	// #-2
    3204:	stur	x8, [x29, #-8]
    3208:	b	358c <PyInit__codecs_kr@@Base+0xc28>
    320c:	ldrb	w8, [sp, #31]
    3210:	cmp	w8, #0xa4
    3214:	b.ne	342c <PyInit__codecs_kr@@Base+0xac8>  // b.any
    3218:	ldur	x8, [x29, #-32]
    321c:	ldr	x8, [x8]
    3220:	ldrb	w9, [x8, #1]
    3224:	cmp	w9, #0xd4
    3228:	b.ne	342c <PyInit__codecs_kr@@Base+0xac8>  // b.any
    322c:	ldr	x8, [sp, #40]
    3230:	cmp	x8, #0x8
    3234:	b.ge	3244 <PyInit__codecs_kr@@Base+0x8e0>  // b.tcont
    3238:	mov	x8, #0xfffffffffffffffe    	// #-2
    323c:	stur	x8, [x29, #-8]
    3240:	b	358c <PyInit__codecs_kr@@Base+0xc28>
    3244:	ldur	x8, [x29, #-32]
    3248:	ldr	x8, [x8]
    324c:	ldrb	w9, [x8, #2]
    3250:	cmp	w9, #0xa4
    3254:	b.ne	3280 <PyInit__codecs_kr@@Base+0x91c>  // b.any
    3258:	ldur	x8, [x29, #-32]
    325c:	ldr	x8, [x8]
    3260:	ldrb	w9, [x8, #4]
    3264:	cmp	w9, #0xa4
    3268:	b.ne	3280 <PyInit__codecs_kr@@Base+0x91c>  // b.any
    326c:	ldur	x8, [x29, #-32]
    3270:	ldr	x8, [x8]
    3274:	ldrb	w9, [x8, #6]
    3278:	cmp	w9, #0xa4
    327c:	b.eq	328c <PyInit__codecs_kr@@Base+0x928>  // b.none
    3280:	mov	x8, #0x1                   	// #1
    3284:	stur	x8, [x29, #-8]
    3288:	b	358c <PyInit__codecs_kr@@Base+0xc28>
    328c:	ldur	x8, [x29, #-32]
    3290:	ldr	x8, [x8]
    3294:	ldrb	w9, [x8, #3]
    3298:	strb	w9, [sp, #31]
    329c:	ldrb	w9, [sp, #31]
    32a0:	mov	w10, #0xa1                  	// #161
    32a4:	cmp	w10, w9
    32a8:	b.gt	32d4 <PyInit__codecs_kr@@Base+0x970>
    32ac:	ldrb	w8, [sp, #31]
    32b0:	cmp	w8, #0xbe
    32b4:	b.gt	32d4 <PyInit__codecs_kr@@Base+0x970>
    32b8:	ldrb	w8, [sp, #31]
    32bc:	subs	w8, w8, #0xa1
    32c0:	adrp	x9, 14000 <PyInit__codecs_kr@@Base+0x1169c>
    32c4:	add	x9, x9, #0xa98
    32c8:	ldrb	w8, [x9, w8, sxtw]
    32cc:	strh	w8, [sp, #22]
    32d0:	b	32dc <PyInit__codecs_kr@@Base+0x978>
    32d4:	mov	w8, #0x7f                  	// #127
    32d8:	strh	w8, [sp, #22]
    32dc:	ldur	x8, [x29, #-32]
    32e0:	ldr	x8, [x8]
    32e4:	ldrb	w9, [x8, #5]
    32e8:	strb	w9, [sp, #31]
    32ec:	ldrb	w9, [sp, #31]
    32f0:	mov	w10, #0xbf                  	// #191
    32f4:	cmp	w10, w9
    32f8:	b.gt	3318 <PyInit__codecs_kr@@Base+0x9b4>
    32fc:	ldrb	w8, [sp, #31]
    3300:	cmp	w8, #0xd3
    3304:	b.gt	3318 <PyInit__codecs_kr@@Base+0x9b4>
    3308:	ldrb	w8, [sp, #31]
    330c:	subs	w8, w8, #0xbf
    3310:	str	w8, [sp, #4]
    3314:	b	3320 <PyInit__codecs_kr@@Base+0x9bc>
    3318:	mov	w8, #0x7f                  	// #127
    331c:	str	w8, [sp, #4]
    3320:	ldr	w8, [sp, #4]
    3324:	strh	w8, [sp, #20]
    3328:	ldur	x9, [x29, #-32]
    332c:	ldr	x9, [x9]
    3330:	ldrb	w8, [x9, #7]
    3334:	strb	w8, [sp, #31]
    3338:	ldrb	w8, [sp, #31]
    333c:	cmp	w8, #0xd4
    3340:	b.ne	3350 <PyInit__codecs_kr@@Base+0x9ec>  // b.any
    3344:	mov	w8, #0x0                   	// #0
    3348:	strh	w8, [sp, #18]
    334c:	b	3390 <PyInit__codecs_kr@@Base+0xa2c>
    3350:	ldrb	w8, [sp, #31]
    3354:	mov	w9, #0xa1                  	// #161
    3358:	cmp	w9, w8
    335c:	b.gt	3388 <PyInit__codecs_kr@@Base+0xa24>
    3360:	ldrb	w8, [sp, #31]
    3364:	cmp	w8, #0xbe
    3368:	b.gt	3388 <PyInit__codecs_kr@@Base+0xa24>
    336c:	ldrb	w8, [sp, #31]
    3370:	subs	w8, w8, #0xa1
    3374:	adrp	x9, 14000 <PyInit__codecs_kr@@Base+0x1169c>
    3378:	add	x9, x9, #0xab6
    337c:	ldrb	w8, [x9, w8, sxtw]
    3380:	strh	w8, [sp, #18]
    3384:	b	3390 <PyInit__codecs_kr@@Base+0xa2c>
    3388:	mov	w8, #0x7f                  	// #127
    338c:	strh	w8, [sp, #18]
    3390:	ldrh	w8, [sp, #22]
    3394:	cmp	w8, #0x7f
    3398:	b.eq	33b4 <PyInit__codecs_kr@@Base+0xa50>  // b.none
    339c:	ldrh	w8, [sp, #20]
    33a0:	cmp	w8, #0x7f
    33a4:	b.eq	33b4 <PyInit__codecs_kr@@Base+0xa50>  // b.none
    33a8:	ldrh	w8, [sp, #18]
    33ac:	cmp	w8, #0x7f
    33b0:	b.ne	33c0 <PyInit__codecs_kr@@Base+0xa5c>  // b.any
    33b4:	mov	x8, #0x1                   	// #1
    33b8:	stur	x8, [x29, #-8]
    33bc:	b	358c <PyInit__codecs_kr@@Base+0xc28>
    33c0:	ldr	x0, [sp, #32]
    33c4:	ldrh	w8, [sp, #22]
    33c8:	mov	w9, #0x24c                 	// #588
    33cc:	mul	w8, w8, w9
    33d0:	mov	w9, #0xac00                	// #44032
    33d4:	add	w8, w9, w8
    33d8:	ldrh	w9, [sp, #20]
    33dc:	mov	w10, #0x1c                  	// #28
    33e0:	mul	w9, w9, w10
    33e4:	add	w8, w8, w9
    33e8:	ldrh	w9, [sp, #18]
    33ec:	add	w1, w8, w9
    33f0:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    33f4:	cmp	w0, #0x0
    33f8:	cset	w8, ge  // ge = tcont
    33fc:	tbnz	w8, #0, 340c <PyInit__codecs_kr@@Base+0xaa8>
    3400:	mov	x8, #0xfffffffffffffffc    	// #-4
    3404:	stur	x8, [x29, #-8]
    3408:	b	358c <PyInit__codecs_kr@@Base+0xc28>
    340c:	ldur	x8, [x29, #-32]
    3410:	ldr	x9, [x8]
    3414:	add	x9, x9, #0x8
    3418:	str	x9, [x8]
    341c:	ldr	x8, [sp, #40]
    3420:	subs	x8, x8, #0x8
    3424:	str	x8, [sp, #40]
    3428:	b	3584 <PyInit__codecs_kr@@Base+0xc20>
    342c:	ldrb	w8, [sp, #31]
    3430:	eor	w8, w8, #0x80
    3434:	mov	w0, w8
    3438:	sxtw	x9, w0
    343c:	mov	x10, #0x10                  	// #16
    3440:	mul	x9, x10, x9
    3444:	ldr	x10, [sp, #8]
    3448:	add	x9, x10, x9
    344c:	ldr	x9, [x9]
    3450:	cbz	x9, 3578 <PyInit__codecs_kr@@Base+0xc14>
    3454:	ldur	x8, [x29, #-32]
    3458:	ldr	x8, [x8]
    345c:	ldrb	w9, [x8, #1]
    3460:	eor	w9, w9, #0x80
    3464:	ldrb	w10, [sp, #31]
    3468:	eor	w10, w10, #0x80
    346c:	mov	w0, w10
    3470:	sxtw	x8, w0
    3474:	mov	x11, #0x10                  	// #16
    3478:	mul	x8, x11, x8
    347c:	ldr	x11, [sp, #8]
    3480:	add	x8, x11, x8
    3484:	ldrb	w10, [x8, #8]
    3488:	cmp	w9, w10
    348c:	b.lt	3578 <PyInit__codecs_kr@@Base+0xc14>  // b.tstop
    3490:	ldur	x8, [x29, #-32]
    3494:	ldr	x8, [x8]
    3498:	ldrb	w9, [x8, #1]
    349c:	eor	w9, w9, #0x80
    34a0:	ldrb	w10, [sp, #31]
    34a4:	eor	w10, w10, #0x80
    34a8:	mov	w0, w10
    34ac:	sxtw	x8, w0
    34b0:	mov	x11, #0x10                  	// #16
    34b4:	mul	x8, x11, x8
    34b8:	ldr	x11, [sp, #8]
    34bc:	add	x8, x11, x8
    34c0:	ldrb	w10, [x8, #9]
    34c4:	cmp	w9, w10
    34c8:	b.gt	3578 <PyInit__codecs_kr@@Base+0xc14>
    34cc:	ldrb	w8, [sp, #31]
    34d0:	eor	w8, w8, #0x80
    34d4:	mov	w0, w8
    34d8:	sxtw	x9, w0
    34dc:	mov	x10, #0x10                  	// #16
    34e0:	mul	x9, x10, x9
    34e4:	ldr	x11, [sp, #8]
    34e8:	add	x9, x11, x9
    34ec:	ldr	x9, [x9]
    34f0:	ldur	x12, [x29, #-32]
    34f4:	ldr	x12, [x12]
    34f8:	ldrb	w8, [x12, #1]
    34fc:	eor	w8, w8, #0x80
    3500:	ldrb	w13, [sp, #31]
    3504:	eor	w13, w13, #0x80
    3508:	mov	w0, w13
    350c:	sxtw	x12, w0
    3510:	mul	x10, x10, x12
    3514:	add	x10, x11, x10
    3518:	ldrb	w13, [x10, #8]
    351c:	subs	w8, w8, w13
    3520:	ldrh	w8, [x9, w8, sxtw #1]
    3524:	str	w8, [sp, #24]
    3528:	mov	w13, #0xfffe                	// #65534
    352c:	cmp	w8, w13
    3530:	b.eq	3578 <PyInit__codecs_kr@@Base+0xc14>  // b.none
    3534:	ldr	x0, [sp, #32]
    3538:	ldr	w1, [sp, #24]
    353c:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    3540:	cmp	w0, #0x0
    3544:	cset	w8, ge  // ge = tcont
    3548:	tbnz	w8, #0, 3558 <PyInit__codecs_kr@@Base+0xbf4>
    354c:	mov	x8, #0xfffffffffffffffc    	// #-4
    3550:	stur	x8, [x29, #-8]
    3554:	b	358c <PyInit__codecs_kr@@Base+0xc28>
    3558:	ldur	x8, [x29, #-32]
    355c:	ldr	x9, [x8]
    3560:	add	x9, x9, #0x2
    3564:	str	x9, [x8]
    3568:	ldr	x8, [sp, #40]
    356c:	subs	x8, x8, #0x2
    3570:	str	x8, [sp, #40]
    3574:	b	3584 <PyInit__codecs_kr@@Base+0xc20>
    3578:	mov	x8, #0x1                   	// #1
    357c:	stur	x8, [x29, #-8]
    3580:	b	358c <PyInit__codecs_kr@@Base+0xc28>
    3584:	b	3184 <PyInit__codecs_kr@@Base+0x820>
    3588:	stur	xzr, [x29, #-8]
    358c:	ldur	x0, [x29, #-8]
    3590:	ldp	x29, x30, [sp, #80]
    3594:	add	sp, sp, #0x60
    3598:	ret
    359c:	sub	sp, sp, #0x70
    35a0:	ldr	w8, [sp, #112]
    35a4:	adrp	x9, 2d000 <PyInit__codecs_kr@@Base+0x2a69c>
    35a8:	add	x9, x9, #0xd70
    35ac:	str	x0, [sp, #96]
    35b0:	str	x1, [sp, #88]
    35b4:	str	w2, [sp, #84]
    35b8:	str	x3, [sp, #72]
    35bc:	str	x4, [sp, #64]
    35c0:	str	x5, [sp, #56]
    35c4:	str	x6, [sp, #48]
    35c8:	str	x7, [sp, #40]
    35cc:	str	w8, [sp, #36]
    35d0:	str	x9, [sp, #16]
    35d4:	ldr	x8, [sp, #64]
    35d8:	ldr	x8, [x8]
    35dc:	ldr	x9, [sp, #56]
    35e0:	cmp	x8, x9
    35e4:	b.ge	387c <PyInit__codecs_kr@@Base+0xf18>  // b.tcont
    35e8:	ldr	w8, [sp, #84]
    35ec:	cmp	w8, #0x1
    35f0:	b.ne	360c <PyInit__codecs_kr@@Base+0xca8>  // b.any
    35f4:	ldr	x8, [sp, #72]
    35f8:	ldr	x9, [sp, #64]
    35fc:	ldr	x9, [x9]
    3600:	ldrb	w10, [x8, x9]
    3604:	str	w10, [sp, #12]
    3608:	b	364c <PyInit__codecs_kr@@Base+0xce8>
    360c:	ldr	w8, [sp, #84]
    3610:	cmp	w8, #0x2
    3614:	b.ne	3630 <PyInit__codecs_kr@@Base+0xccc>  // b.any
    3618:	ldr	x8, [sp, #72]
    361c:	ldr	x9, [sp, #64]
    3620:	ldr	x9, [x9]
    3624:	ldrh	w10, [x8, x9, lsl #1]
    3628:	str	w10, [sp, #8]
    362c:	b	3644 <PyInit__codecs_kr@@Base+0xce0>
    3630:	ldr	x8, [sp, #72]
    3634:	ldr	x9, [sp, #64]
    3638:	ldr	x9, [x9]
    363c:	ldr	w10, [x8, x9, lsl #2]
    3640:	str	w10, [sp, #8]
    3644:	ldr	w8, [sp, #8]
    3648:	str	w8, [sp, #12]
    364c:	ldr	w8, [sp, #12]
    3650:	str	w8, [sp, #32]
    3654:	ldr	w8, [sp, #32]
    3658:	cmp	w8, #0x80
    365c:	b.cs	36b8 <PyInit__codecs_kr@@Base+0xd54>  // b.hs, b.nlast
    3660:	ldr	x8, [sp, #40]
    3664:	cmp	x8, #0x1
    3668:	b.ge	3678 <PyInit__codecs_kr@@Base+0xd14>  // b.tcont
    366c:	mov	x8, #0xffffffffffffffff    	// #-1
    3670:	str	x8, [sp, #104]
    3674:	b	3880 <PyInit__codecs_kr@@Base+0xf1c>
    3678:	ldr	w8, [sp, #32]
    367c:	ldr	x9, [sp, #48]
    3680:	ldr	x9, [x9]
    3684:	strb	w8, [x9]
    3688:	ldr	x8, [sp, #64]
    368c:	ldr	x9, [x8]
    3690:	add	x9, x9, #0x1
    3694:	str	x9, [x8]
    3698:	ldr	x8, [sp, #48]
    369c:	ldr	x9, [x8]
    36a0:	add	x9, x9, #0x1
    36a4:	str	x9, [x8]
    36a8:	ldr	x8, [sp, #40]
    36ac:	subs	x8, x8, #0x1
    36b0:	str	x8, [sp, #40]
    36b4:	b	35d4 <PyInit__codecs_kr@@Base+0xc70>
    36b8:	ldr	w8, [sp, #32]
    36bc:	mov	w9, #0xffff                	// #65535
    36c0:	cmp	w8, w9
    36c4:	b.ls	36d4 <PyInit__codecs_kr@@Base+0xd70>  // b.plast
    36c8:	mov	x8, #0x1                   	// #1
    36cc:	str	x8, [sp, #104]
    36d0:	b	3880 <PyInit__codecs_kr@@Base+0xf1c>
    36d4:	ldr	x8, [sp, #40]
    36d8:	cmp	x8, #0x2
    36dc:	b.ge	36ec <PyInit__codecs_kr@@Base+0xd88>  // b.tcont
    36e0:	mov	x8, #0xffffffffffffffff    	// #-1
    36e4:	str	x8, [sp, #104]
    36e8:	b	3880 <PyInit__codecs_kr@@Base+0xf1c>
    36ec:	ldr	w8, [sp, #32]
    36f0:	lsr	w8, w8, #8
    36f4:	mov	w9, w8
    36f8:	ubfx	x9, x9, #0, #32
    36fc:	mov	x10, #0x10                  	// #16
    3700:	mul	x9, x10, x9
    3704:	ldr	x10, [sp, #16]
    3708:	add	x9, x10, x9
    370c:	ldr	x9, [x9]
    3710:	cbz	x9, 37ec <PyInit__codecs_kr@@Base+0xe88>
    3714:	ldr	w8, [sp, #32]
    3718:	and	w8, w8, #0xff
    371c:	ldr	w9, [sp, #32]
    3720:	mov	x10, #0x8                   	// #8
    3724:	lsr	w9, w9, w10
    3728:	mov	w11, w9
    372c:	ubfx	x11, x11, #0, #32
    3730:	mov	x12, #0x10                  	// #16
    3734:	mul	x11, x12, x11
    3738:	ldr	x12, [sp, #16]
    373c:	add	x11, x12, x11
    3740:	ldrb	w9, [x11, #8]
    3744:	cmp	w8, w9
    3748:	b.cc	37ec <PyInit__codecs_kr@@Base+0xe88>  // b.lo, b.ul, b.last
    374c:	ldr	w8, [sp, #32]
    3750:	and	w8, w8, #0xff
    3754:	ldr	w9, [sp, #32]
    3758:	lsr	w9, w9, #8
    375c:	mov	w10, w9
    3760:	ubfx	x10, x10, #0, #32
    3764:	mov	x11, #0x10                  	// #16
    3768:	mul	x10, x11, x10
    376c:	ldr	x11, [sp, #16]
    3770:	add	x10, x11, x10
    3774:	ldrb	w9, [x10, #9]
    3778:	cmp	w8, w9
    377c:	b.hi	37ec <PyInit__codecs_kr@@Base+0xe88>  // b.pmore
    3780:	ldr	w8, [sp, #32]
    3784:	mov	x9, #0x8                   	// #8
    3788:	mov	x0, x9
    378c:	lsr	w8, w8, w0
    3790:	mov	w10, w8
    3794:	ubfx	x10, x10, #0, #32
    3798:	mov	x11, #0x10                  	// #16
    379c:	mul	x10, x11, x10
    37a0:	ldr	x12, [sp, #16]
    37a4:	add	x10, x12, x10
    37a8:	ldr	x10, [x10]
    37ac:	ldr	w8, [sp, #32]
    37b0:	and	w8, w8, #0xff
    37b4:	ldr	w13, [sp, #32]
    37b8:	lsr	w9, w13, w9
    37bc:	mov	w14, w9
    37c0:	ubfx	x14, x14, #0, #32
    37c4:	mul	x11, x11, x14
    37c8:	add	x11, x12, x11
    37cc:	ldrb	w9, [x11, #8]
    37d0:	subs	w8, w8, w9
    37d4:	ldrh	w8, [x10, w8, uxtw #1]
    37d8:	strh	w8, [sp, #30]
    37dc:	mov	w9, #0xffff                	// #65535
    37e0:	cmp	w8, w9
    37e4:	b.eq	37ec <PyInit__codecs_kr@@Base+0xe88>  // b.none
    37e8:	b	37f8 <PyInit__codecs_kr@@Base+0xe94>
    37ec:	mov	x8, #0x1                   	// #1
    37f0:	str	x8, [sp, #104]
    37f4:	b	3880 <PyInit__codecs_kr@@Base+0xf1c>
    37f8:	ldrh	w8, [sp, #30]
    37fc:	asr	w8, w8, #8
    3800:	orr	w8, w8, #0x80
    3804:	ldr	x9, [sp, #48]
    3808:	ldr	x9, [x9]
    380c:	strb	w8, [x9]
    3810:	ldrh	w8, [sp, #30]
    3814:	and	w8, w8, #0x8000
    3818:	cbz	w8, 3834 <PyInit__codecs_kr@@Base+0xed0>
    381c:	ldrh	w8, [sp, #30]
    3820:	and	w8, w8, #0xff
    3824:	ldr	x9, [sp, #48]
    3828:	ldr	x9, [x9]
    382c:	strb	w8, [x9, #1]
    3830:	b	384c <PyInit__codecs_kr@@Base+0xee8>
    3834:	ldrh	w8, [sp, #30]
    3838:	and	w8, w8, #0xff
    383c:	orr	w8, w8, #0x80
    3840:	ldr	x9, [sp, #48]
    3844:	ldr	x9, [x9]
    3848:	strb	w8, [x9, #1]
    384c:	ldr	x8, [sp, #64]
    3850:	ldr	x9, [x8]
    3854:	add	x9, x9, #0x1
    3858:	str	x9, [x8]
    385c:	ldr	x8, [sp, #48]
    3860:	ldr	x9, [x8]
    3864:	add	x9, x9, #0x2
    3868:	str	x9, [x8]
    386c:	ldr	x8, [sp, #40]
    3870:	subs	x8, x8, #0x2
    3874:	str	x8, [sp, #40]
    3878:	b	35d4 <PyInit__codecs_kr@@Base+0xc70>
    387c:	str	xzr, [sp, #104]
    3880:	ldr	x0, [sp, #104]
    3884:	add	sp, sp, #0x70
    3888:	ret
    388c:	sub	sp, sp, #0x60
    3890:	stp	x29, x30, [sp, #80]
    3894:	add	x29, sp, #0x50
    3898:	adrp	x8, 2e000 <PyInit__codecs_kr@@Base+0x2b69c>
    389c:	add	x8, x8, #0xd70
    38a0:	adrp	x9, 2f000 <PyInit__codecs_kr@@Base+0x2c69c>
    38a4:	add	x9, x9, #0xd70
    38a8:	stur	x0, [x29, #-16]
    38ac:	stur	x1, [x29, #-24]
    38b0:	stur	x2, [x29, #-32]
    38b4:	str	x3, [sp, #40]
    38b8:	str	x4, [sp, #32]
    38bc:	str	x8, [sp, #16]
    38c0:	str	x9, [sp, #8]
    38c4:	ldr	x8, [sp, #40]
    38c8:	cmp	x8, #0x0
    38cc:	cset	w9, le
    38d0:	tbnz	w9, #0, 3ba4 <PyInit__codecs_kr@@Base+0x1240>
    38d4:	ldur	x8, [x29, #-32]
    38d8:	ldr	x8, [x8]
    38dc:	ldrb	w9, [x8]
    38e0:	strb	w9, [sp, #31]
    38e4:	ldrb	w9, [sp, #31]
    38e8:	cmp	w9, #0x80
    38ec:	b.ge	3934 <PyInit__codecs_kr@@Base+0xfd0>  // b.tcont
    38f0:	ldr	x0, [sp, #32]
    38f4:	ldrb	w1, [sp, #31]
    38f8:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    38fc:	cmp	w0, #0x0
    3900:	cset	w8, ge  // ge = tcont
    3904:	tbnz	w8, #0, 3914 <PyInit__codecs_kr@@Base+0xfb0>
    3908:	mov	x8, #0xfffffffffffffffc    	// #-4
    390c:	stur	x8, [x29, #-8]
    3910:	b	3ba8 <PyInit__codecs_kr@@Base+0x1244>
    3914:	ldur	x8, [x29, #-32]
    3918:	ldr	x9, [x8]
    391c:	add	x9, x9, #0x1
    3920:	str	x9, [x8]
    3924:	ldr	x8, [sp, #40]
    3928:	subs	x8, x8, #0x1
    392c:	str	x8, [sp, #40]
    3930:	b	38c4 <PyInit__codecs_kr@@Base+0xf60>
    3934:	ldr	x8, [sp, #40]
    3938:	cmp	x8, #0x2
    393c:	b.ge	394c <PyInit__codecs_kr@@Base+0xfe8>  // b.tcont
    3940:	mov	x8, #0xfffffffffffffffe    	// #-2
    3944:	stur	x8, [x29, #-8]
    3948:	b	3ba8 <PyInit__codecs_kr@@Base+0x1244>
    394c:	ldrb	w8, [sp, #31]
    3950:	eor	w8, w8, #0x80
    3954:	mov	w0, w8
    3958:	sxtw	x9, w0
    395c:	mov	x10, #0x10                  	// #16
    3960:	mul	x9, x10, x9
    3964:	ldr	x10, [sp, #16]
    3968:	add	x9, x10, x9
    396c:	ldr	x9, [x9]
    3970:	cbz	x9, 3a7c <PyInit__codecs_kr@@Base+0x1118>
    3974:	ldur	x8, [x29, #-32]
    3978:	ldr	x8, [x8]
    397c:	ldrb	w9, [x8, #1]
    3980:	eor	w9, w9, #0x80
    3984:	ldrb	w10, [sp, #31]
    3988:	eor	w10, w10, #0x80
    398c:	mov	w0, w10
    3990:	sxtw	x8, w0
    3994:	mov	x11, #0x10                  	// #16
    3998:	mul	x8, x11, x8
    399c:	ldr	x11, [sp, #16]
    39a0:	add	x8, x11, x8
    39a4:	ldrb	w10, [x8, #8]
    39a8:	cmp	w9, w10
    39ac:	b.lt	3a7c <PyInit__codecs_kr@@Base+0x1118>  // b.tstop
    39b0:	ldur	x8, [x29, #-32]
    39b4:	ldr	x8, [x8]
    39b8:	ldrb	w9, [x8, #1]
    39bc:	eor	w9, w9, #0x80
    39c0:	ldrb	w10, [sp, #31]
    39c4:	eor	w10, w10, #0x80
    39c8:	mov	w0, w10
    39cc:	sxtw	x8, w0
    39d0:	mov	x11, #0x10                  	// #16
    39d4:	mul	x8, x11, x8
    39d8:	ldr	x11, [sp, #16]
    39dc:	add	x8, x11, x8
    39e0:	ldrb	w10, [x8, #9]
    39e4:	cmp	w9, w10
    39e8:	b.gt	3a7c <PyInit__codecs_kr@@Base+0x1118>
    39ec:	ldrb	w8, [sp, #31]
    39f0:	eor	w8, w8, #0x80
    39f4:	mov	w0, w8
    39f8:	sxtw	x9, w0
    39fc:	mov	x10, #0x10                  	// #16
    3a00:	mul	x9, x10, x9
    3a04:	ldr	x11, [sp, #16]
    3a08:	add	x9, x11, x9
    3a0c:	ldr	x9, [x9]
    3a10:	ldur	x12, [x29, #-32]
    3a14:	ldr	x12, [x12]
    3a18:	ldrb	w8, [x12, #1]
    3a1c:	eor	w8, w8, #0x80
    3a20:	ldrb	w13, [sp, #31]
    3a24:	eor	w13, w13, #0x80
    3a28:	mov	w0, w13
    3a2c:	sxtw	x12, w0
    3a30:	mul	x10, x10, x12
    3a34:	add	x10, x11, x10
    3a38:	ldrb	w13, [x10, #8]
    3a3c:	subs	w8, w8, w13
    3a40:	ldrh	w8, [x9, w8, sxtw #1]
    3a44:	str	w8, [sp, #24]
    3a48:	mov	w13, #0xfffe                	// #65534
    3a4c:	cmp	w8, w13
    3a50:	b.eq	3a7c <PyInit__codecs_kr@@Base+0x1118>  // b.none
    3a54:	ldr	x0, [sp, #32]
    3a58:	ldr	w1, [sp, #24]
    3a5c:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    3a60:	cmp	w0, #0x0
    3a64:	cset	w8, ge  // ge = tcont
    3a68:	tbnz	w8, #0, 3a78 <PyInit__codecs_kr@@Base+0x1114>
    3a6c:	mov	x8, #0xfffffffffffffffc    	// #-4
    3a70:	stur	x8, [x29, #-8]
    3a74:	b	3ba8 <PyInit__codecs_kr@@Base+0x1244>
    3a78:	b	3b84 <PyInit__codecs_kr@@Base+0x1220>
    3a7c:	ldrb	w8, [sp, #31]
    3a80:	mov	w9, w8
    3a84:	mov	x10, #0x10                  	// #16
    3a88:	mul	x9, x10, x9
    3a8c:	ldr	x10, [sp, #8]
    3a90:	add	x9, x10, x9
    3a94:	ldr	x9, [x9]
    3a98:	cbz	x9, 3b78 <PyInit__codecs_kr@@Base+0x1214>
    3a9c:	ldur	x8, [x29, #-32]
    3aa0:	ldr	x8, [x8]
    3aa4:	ldrb	w9, [x8, #1]
    3aa8:	ldrb	w10, [sp, #31]
    3aac:	mov	w8, w10
    3ab0:	mov	x11, #0x10                  	// #16
    3ab4:	mul	x8, x11, x8
    3ab8:	ldr	x11, [sp, #8]
    3abc:	add	x8, x11, x8
    3ac0:	ldrb	w10, [x8, #8]
    3ac4:	cmp	w9, w10
    3ac8:	b.lt	3b78 <PyInit__codecs_kr@@Base+0x1214>  // b.tstop
    3acc:	ldur	x8, [x29, #-32]
    3ad0:	ldr	x8, [x8]
    3ad4:	ldrb	w9, [x8, #1]
    3ad8:	ldrb	w10, [sp, #31]
    3adc:	mov	w8, w10
    3ae0:	mov	x11, #0x10                  	// #16
    3ae4:	mul	x8, x11, x8
    3ae8:	ldr	x11, [sp, #8]
    3aec:	add	x8, x11, x8
    3af0:	ldrb	w10, [x8, #9]
    3af4:	cmp	w9, w10
    3af8:	b.gt	3b78 <PyInit__codecs_kr@@Base+0x1214>
    3afc:	ldrb	w8, [sp, #31]
    3b00:	mov	w9, w8
    3b04:	mov	x10, #0x10                  	// #16
    3b08:	mul	x9, x10, x9
    3b0c:	ldr	x11, [sp, #8]
    3b10:	add	x9, x11, x9
    3b14:	ldr	x9, [x9]
    3b18:	ldur	x12, [x29, #-32]
    3b1c:	ldr	x12, [x12]
    3b20:	ldrb	w8, [x12, #1]
    3b24:	ldrb	w13, [sp, #31]
    3b28:	mov	w12, w13
    3b2c:	mul	x10, x10, x12
    3b30:	add	x10, x11, x10
    3b34:	ldrb	w13, [x10, #8]
    3b38:	subs	w8, w8, w13
    3b3c:	ldrh	w8, [x9, w8, sxtw #1]
    3b40:	str	w8, [sp, #24]
    3b44:	mov	w13, #0xfffe                	// #65534
    3b48:	cmp	w8, w13
    3b4c:	b.eq	3b78 <PyInit__codecs_kr@@Base+0x1214>  // b.none
    3b50:	ldr	x0, [sp, #32]
    3b54:	ldr	w1, [sp, #24]
    3b58:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    3b5c:	cmp	w0, #0x0
    3b60:	cset	w8, ge  // ge = tcont
    3b64:	tbnz	w8, #0, 3b74 <PyInit__codecs_kr@@Base+0x1210>
    3b68:	mov	x8, #0xfffffffffffffffc    	// #-4
    3b6c:	stur	x8, [x29, #-8]
    3b70:	b	3ba8 <PyInit__codecs_kr@@Base+0x1244>
    3b74:	b	3b84 <PyInit__codecs_kr@@Base+0x1220>
    3b78:	mov	x8, #0x1                   	// #1
    3b7c:	stur	x8, [x29, #-8]
    3b80:	b	3ba8 <PyInit__codecs_kr@@Base+0x1244>
    3b84:	ldur	x8, [x29, #-32]
    3b88:	ldr	x9, [x8]
    3b8c:	add	x9, x9, #0x2
    3b90:	str	x9, [x8]
    3b94:	ldr	x8, [sp, #40]
    3b98:	subs	x8, x8, #0x2
    3b9c:	str	x8, [sp, #40]
    3ba0:	b	38c4 <PyInit__codecs_kr@@Base+0xf60>
    3ba4:	stur	xzr, [x29, #-8]
    3ba8:	ldur	x0, [x29, #-8]
    3bac:	ldp	x29, x30, [sp, #80]
    3bb0:	add	sp, sp, #0x60
    3bb4:	ret
    3bb8:	sub	sp, sp, #0x70
    3bbc:	ldr	w8, [sp, #112]
    3bc0:	adrp	x9, 2d000 <PyInit__codecs_kr@@Base+0x2a69c>
    3bc4:	add	x9, x9, #0xd70
    3bc8:	str	x0, [sp, #96]
    3bcc:	str	x1, [sp, #88]
    3bd0:	str	w2, [sp, #84]
    3bd4:	str	x3, [sp, #72]
    3bd8:	str	x4, [sp, #64]
    3bdc:	str	x5, [sp, #56]
    3be0:	str	x6, [sp, #48]
    3be4:	str	x7, [sp, #40]
    3be8:	str	w8, [sp, #36]
    3bec:	str	x9, [sp, #16]
    3bf0:	ldr	x8, [sp, #64]
    3bf4:	ldr	x8, [x8]
    3bf8:	ldr	x9, [sp, #56]
    3bfc:	cmp	x8, x9
    3c00:	b.ge	40a4 <PyInit__codecs_kr@@Base+0x1740>  // b.tcont
    3c04:	ldr	w8, [sp, #84]
    3c08:	cmp	w8, #0x1
    3c0c:	b.ne	3c28 <PyInit__codecs_kr@@Base+0x12c4>  // b.any
    3c10:	ldr	x8, [sp, #72]
    3c14:	ldr	x9, [sp, #64]
    3c18:	ldr	x9, [x9]
    3c1c:	ldrb	w10, [x8, x9]
    3c20:	str	w10, [sp, #12]
    3c24:	b	3c68 <PyInit__codecs_kr@@Base+0x1304>
    3c28:	ldr	w8, [sp, #84]
    3c2c:	cmp	w8, #0x2
    3c30:	b.ne	3c4c <PyInit__codecs_kr@@Base+0x12e8>  // b.any
    3c34:	ldr	x8, [sp, #72]
    3c38:	ldr	x9, [sp, #64]
    3c3c:	ldr	x9, [x9]
    3c40:	ldrh	w10, [x8, x9, lsl #1]
    3c44:	str	w10, [sp, #8]
    3c48:	b	3c60 <PyInit__codecs_kr@@Base+0x12fc>
    3c4c:	ldr	x8, [sp, #72]
    3c50:	ldr	x9, [sp, #64]
    3c54:	ldr	x9, [x9]
    3c58:	ldr	w10, [x8, x9, lsl #2]
    3c5c:	str	w10, [sp, #8]
    3c60:	ldr	w8, [sp, #8]
    3c64:	str	w8, [sp, #12]
    3c68:	ldr	w8, [sp, #12]
    3c6c:	str	w8, [sp, #32]
    3c70:	ldr	w8, [sp, #32]
    3c74:	cmp	w8, #0x80
    3c78:	b.cs	3cd4 <PyInit__codecs_kr@@Base+0x1370>  // b.hs, b.nlast
    3c7c:	ldr	x8, [sp, #40]
    3c80:	cmp	x8, #0x1
    3c84:	b.ge	3c94 <PyInit__codecs_kr@@Base+0x1330>  // b.tcont
    3c88:	mov	x8, #0xffffffffffffffff    	// #-1
    3c8c:	str	x8, [sp, #104]
    3c90:	b	40a8 <PyInit__codecs_kr@@Base+0x1744>
    3c94:	ldr	w8, [sp, #32]
    3c98:	ldr	x9, [sp, #48]
    3c9c:	ldr	x9, [x9]
    3ca0:	strb	w8, [x9]
    3ca4:	ldr	x8, [sp, #64]
    3ca8:	ldr	x9, [x8]
    3cac:	add	x9, x9, #0x1
    3cb0:	str	x9, [x8]
    3cb4:	ldr	x8, [sp, #48]
    3cb8:	ldr	x9, [x8]
    3cbc:	add	x9, x9, #0x1
    3cc0:	str	x9, [x8]
    3cc4:	ldr	x8, [sp, #40]
    3cc8:	subs	x8, x8, #0x1
    3ccc:	str	x8, [sp, #40]
    3cd0:	b	3bf0 <PyInit__codecs_kr@@Base+0x128c>
    3cd4:	ldr	w8, [sp, #32]
    3cd8:	mov	w9, #0xffff                	// #65535
    3cdc:	cmp	w8, w9
    3ce0:	b.ls	3cf0 <PyInit__codecs_kr@@Base+0x138c>  // b.plast
    3ce4:	mov	x8, #0x1                   	// #1
    3ce8:	str	x8, [sp, #104]
    3cec:	b	40a8 <PyInit__codecs_kr@@Base+0x1744>
    3cf0:	ldr	x8, [sp, #40]
    3cf4:	cmp	x8, #0x2
    3cf8:	b.ge	3d08 <PyInit__codecs_kr@@Base+0x13a4>  // b.tcont
    3cfc:	mov	x8, #0xffffffffffffffff    	// #-1
    3d00:	str	x8, [sp, #104]
    3d04:	b	40a8 <PyInit__codecs_kr@@Base+0x1744>
    3d08:	ldr	w8, [sp, #32]
    3d0c:	mov	w9, #0xac00                	// #44032
    3d10:	cmp	w8, w9
    3d14:	b.cc	3dac <PyInit__codecs_kr@@Base+0x1448>  // b.lo, b.ul, b.last
    3d18:	ldr	w8, [sp, #32]
    3d1c:	mov	w9, #0xd7a3                	// #55203
    3d20:	cmp	w8, w9
    3d24:	b.hi	3dac <PyInit__codecs_kr@@Base+0x1448>  // b.pmore
    3d28:	ldr	w8, [sp, #32]
    3d2c:	mov	w9, #0xac00                	// #44032
    3d30:	subs	w8, w8, w9
    3d34:	str	w8, [sp, #32]
    3d38:	ldr	w8, [sp, #32]
    3d3c:	mov	w9, #0x24c                 	// #588
    3d40:	udiv	w8, w8, w9
    3d44:	adrp	x10, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    3d48:	add	x10, x10, #0x74e
    3d4c:	ldrb	w8, [x10, w8, uxtw]
    3d50:	mov	w9, #0x8000                	// #32768
    3d54:	orr	w8, w9, w8, lsl #10
    3d58:	ldr	w9, [sp, #32]
    3d5c:	mov	w11, #0x1c                  	// #28
    3d60:	udiv	w9, w9, w11
    3d64:	mov	w12, #0x15                  	// #21
    3d68:	udiv	w13, w9, w12
    3d6c:	mul	w12, w13, w12
    3d70:	subs	w9, w9, w12
    3d74:	adrp	x10, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    3d78:	add	x10, x10, #0x76e
    3d7c:	ldrb	w9, [x10, w9, uxtw]
    3d80:	orr	w8, w8, w9, lsl #5
    3d84:	ldr	w9, [sp, #32]
    3d88:	udiv	w12, w9, w11
    3d8c:	mul	w11, w12, w11
    3d90:	subs	w9, w9, w11
    3d94:	adrp	x10, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    3d98:	add	x10, x10, #0x6c8
    3d9c:	ldrb	w9, [x10, w9, uxtw]
    3da0:	orr	w8, w8, w9
    3da4:	strh	w8, [sp, #30]
    3da8:	b	404c <PyInit__codecs_kr@@Base+0x16e8>
    3dac:	ldr	w8, [sp, #32]
    3db0:	mov	w9, #0x3131                	// #12593
    3db4:	cmp	w8, w9
    3db8:	b.cc	3e00 <PyInit__codecs_kr@@Base+0x149c>  // b.lo, b.ul, b.last
    3dbc:	ldr	w8, [sp, #32]
    3dc0:	mov	w9, #0x3163                	// #12643
    3dc4:	cmp	w8, w9
    3dc8:	b.hi	3e00 <PyInit__codecs_kr@@Base+0x149c>  // b.pmore
    3dcc:	ldr	w8, [sp, #32]
    3dd0:	mov	w9, #0x3131                	// #12593
    3dd4:	subs	w8, w8, w9
    3dd8:	mov	w10, w8
    3ddc:	ubfx	x10, x10, #0, #32
    3de0:	mov	x11, #0x2                   	// #2
    3de4:	mul	x10, x11, x10
    3de8:	adrp	x11, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    3dec:	add	x11, x11, #0x6e8
    3df0:	add	x10, x11, x10
    3df4:	ldrh	w8, [x10]
    3df8:	strh	w8, [sp, #30]
    3dfc:	b	404c <PyInit__codecs_kr@@Base+0x16e8>
    3e00:	ldr	w8, [sp, #32]
    3e04:	lsr	w8, w8, #8
    3e08:	mov	w9, w8
    3e0c:	ubfx	x9, x9, #0, #32
    3e10:	mov	x10, #0x10                  	// #16
    3e14:	mul	x9, x10, x9
    3e18:	ldr	x10, [sp, #16]
    3e1c:	add	x9, x10, x9
    3e20:	ldr	x9, [x9]
    3e24:	cbz	x9, 4040 <PyInit__codecs_kr@@Base+0x16dc>
    3e28:	ldr	w8, [sp, #32]
    3e2c:	and	w8, w8, #0xff
    3e30:	ldr	w9, [sp, #32]
    3e34:	mov	x10, #0x8                   	// #8
    3e38:	lsr	w9, w9, w10
    3e3c:	mov	w11, w9
    3e40:	ubfx	x11, x11, #0, #32
    3e44:	mov	x12, #0x10                  	// #16
    3e48:	mul	x11, x12, x11
    3e4c:	ldr	x12, [sp, #16]
    3e50:	add	x11, x12, x11
    3e54:	ldrb	w9, [x11, #8]
    3e58:	cmp	w8, w9
    3e5c:	b.cc	4040 <PyInit__codecs_kr@@Base+0x16dc>  // b.lo, b.ul, b.last
    3e60:	ldr	w8, [sp, #32]
    3e64:	and	w8, w8, #0xff
    3e68:	ldr	w9, [sp, #32]
    3e6c:	lsr	w9, w9, #8
    3e70:	mov	w10, w9
    3e74:	ubfx	x10, x10, #0, #32
    3e78:	mov	x11, #0x10                  	// #16
    3e7c:	mul	x10, x11, x10
    3e80:	ldr	x11, [sp, #16]
    3e84:	add	x10, x11, x10
    3e88:	ldrb	w9, [x10, #9]
    3e8c:	cmp	w8, w9
    3e90:	b.hi	4040 <PyInit__codecs_kr@@Base+0x16dc>  // b.pmore
    3e94:	ldr	w8, [sp, #32]
    3e98:	mov	x9, #0x8                   	// #8
    3e9c:	mov	x0, x9
    3ea0:	lsr	w8, w8, w0
    3ea4:	mov	w10, w8
    3ea8:	ubfx	x10, x10, #0, #32
    3eac:	mov	x11, #0x10                  	// #16
    3eb0:	mul	x10, x11, x10
    3eb4:	ldr	x12, [sp, #16]
    3eb8:	add	x10, x12, x10
    3ebc:	ldr	x10, [x10]
    3ec0:	ldr	w8, [sp, #32]
    3ec4:	and	w8, w8, #0xff
    3ec8:	ldr	w13, [sp, #32]
    3ecc:	lsr	w9, w13, w9
    3ed0:	mov	w14, w9
    3ed4:	ubfx	x14, x14, #0, #32
    3ed8:	mul	x11, x11, x14
    3edc:	add	x11, x12, x11
    3ee0:	ldrb	w9, [x11, #8]
    3ee4:	subs	w8, w8, w9
    3ee8:	ldrh	w8, [x10, w8, uxtw #1]
    3eec:	strh	w8, [sp, #30]
    3ef0:	mov	w9, #0xffff                	// #65535
    3ef4:	cmp	w8, w9
    3ef8:	b.eq	4040 <PyInit__codecs_kr@@Base+0x16dc>  // b.none
    3efc:	ldrh	w8, [sp, #30]
    3f00:	asr	w8, w8, #8
    3f04:	strb	w8, [sp, #29]
    3f08:	ldrh	w8, [sp, #30]
    3f0c:	and	w8, w8, #0xff
    3f10:	strb	w8, [sp, #28]
    3f14:	ldrb	w8, [sp, #29]
    3f18:	cmp	w8, #0x21
    3f1c:	b.lt	3f2c <PyInit__codecs_kr@@Base+0x15c8>  // b.tstop
    3f20:	ldrb	w8, [sp, #29]
    3f24:	cmp	w8, #0x2c
    3f28:	b.le	3f44 <PyInit__codecs_kr@@Base+0x15e0>
    3f2c:	ldrb	w8, [sp, #29]
    3f30:	cmp	w8, #0x4a
    3f34:	b.lt	4034 <PyInit__codecs_kr@@Base+0x16d0>  // b.tstop
    3f38:	ldrb	w8, [sp, #29]
    3f3c:	cmp	w8, #0x7d
    3f40:	b.gt	4034 <PyInit__codecs_kr@@Base+0x16d0>
    3f44:	ldrb	w8, [sp, #28]
    3f48:	cmp	w8, #0x21
    3f4c:	b.lt	4034 <PyInit__codecs_kr@@Base+0x16d0>  // b.tstop
    3f50:	ldrb	w8, [sp, #28]
    3f54:	cmp	w8, #0x7e
    3f58:	b.gt	4034 <PyInit__codecs_kr@@Base+0x16d0>
    3f5c:	ldrb	w8, [sp, #29]
    3f60:	cmp	w8, #0x4a
    3f64:	b.ge	3f7c <PyInit__codecs_kr@@Base+0x1618>  // b.tcont
    3f68:	ldrb	w8, [sp, #29]
    3f6c:	subs	w8, w8, #0x21
    3f70:	add	w8, w8, #0x1b2
    3f74:	str	w8, [sp, #4]
    3f78:	b	3f8c <PyInit__codecs_kr@@Base+0x1628>
    3f7c:	ldrb	w8, [sp, #29]
    3f80:	subs	w8, w8, #0x21
    3f84:	add	w8, w8, #0x197
    3f88:	str	w8, [sp, #4]
    3f8c:	ldr	w8, [sp, #4]
    3f90:	strh	w8, [sp, #24]
    3f94:	ldrh	w8, [sp, #24]
    3f98:	mov	w9, wzr
    3f9c:	mov	w10, #0x5e                  	// #94
    3fa0:	tst	w8, #0x1
    3fa4:	csel	w8, w10, w9, ne  // ne = any
    3fa8:	ldrb	w9, [sp, #28]
    3fac:	subs	w9, w9, #0x21
    3fb0:	add	w8, w8, w9
    3fb4:	strb	w8, [sp, #27]
    3fb8:	ldrh	w8, [sp, #24]
    3fbc:	asr	w8, w8, #1
    3fc0:	ldr	x9, [sp, #48]
    3fc4:	ldr	x9, [x9]
    3fc8:	strb	w8, [x9]
    3fcc:	ldrb	w8, [sp, #27]
    3fd0:	cmp	w8, #0x4e
    3fd4:	b.ge	3fe8 <PyInit__codecs_kr@@Base+0x1684>  // b.tcont
    3fd8:	ldrb	w8, [sp, #27]
    3fdc:	add	w8, w8, #0x31
    3fe0:	str	w8, [sp]
    3fe4:	b	3ff4 <PyInit__codecs_kr@@Base+0x1690>
    3fe8:	ldrb	w8, [sp, #27]
    3fec:	add	w8, w8, #0x43
    3ff0:	str	w8, [sp]
    3ff4:	ldr	w8, [sp]
    3ff8:	ldr	x9, [sp, #48]
    3ffc:	ldr	x9, [x9]
    4000:	strb	w8, [x9, #1]
    4004:	ldr	x8, [sp, #64]
    4008:	ldr	x9, [x8]
    400c:	add	x9, x9, #0x1
    4010:	str	x9, [x8]
    4014:	ldr	x8, [sp, #48]
    4018:	ldr	x9, [x8]
    401c:	add	x9, x9, #0x2
    4020:	str	x9, [x8]
    4024:	ldr	x8, [sp, #40]
    4028:	subs	x8, x8, #0x2
    402c:	str	x8, [sp, #40]
    4030:	b	3bf0 <PyInit__codecs_kr@@Base+0x128c>
    4034:	mov	x8, #0x1                   	// #1
    4038:	str	x8, [sp, #104]
    403c:	b	40a8 <PyInit__codecs_kr@@Base+0x1744>
    4040:	mov	x8, #0x1                   	// #1
    4044:	str	x8, [sp, #104]
    4048:	b	40a8 <PyInit__codecs_kr@@Base+0x1744>
    404c:	ldrh	w8, [sp, #30]
    4050:	asr	w8, w8, #8
    4054:	ldr	x9, [sp, #48]
    4058:	ldr	x9, [x9]
    405c:	strb	w8, [x9]
    4060:	ldrh	w8, [sp, #30]
    4064:	and	w8, w8, #0xff
    4068:	ldr	x9, [sp, #48]
    406c:	ldr	x9, [x9]
    4070:	strb	w8, [x9, #1]
    4074:	ldr	x8, [sp, #64]
    4078:	ldr	x9, [x8]
    407c:	add	x9, x9, #0x1
    4080:	str	x9, [x8]
    4084:	ldr	x8, [sp, #48]
    4088:	ldr	x9, [x8]
    408c:	add	x9, x9, #0x2
    4090:	str	x9, [x8]
    4094:	ldr	x8, [sp, #40]
    4098:	subs	x8, x8, #0x2
    409c:	str	x8, [sp, #40]
    40a0:	b	3bf0 <PyInit__codecs_kr@@Base+0x128c>
    40a4:	str	xzr, [sp, #104]
    40a8:	ldr	x0, [sp, #104]
    40ac:	add	sp, sp, #0x70
    40b0:	ret
    40b4:	sub	sp, sp, #0x80
    40b8:	stp	x29, x30, [sp, #112]
    40bc:	add	x29, sp, #0x70
    40c0:	adrp	x8, 2e000 <PyInit__codecs_kr@@Base+0x2b69c>
    40c4:	add	x8, x8, #0xd70
    40c8:	stur	x0, [x29, #-16]
    40cc:	stur	x1, [x29, #-24]
    40d0:	stur	x2, [x29, #-32]
    40d4:	stur	x3, [x29, #-40]
    40d8:	stur	x4, [x29, #-48]
    40dc:	str	x8, [sp, #40]
    40e0:	ldur	x8, [x29, #-40]
    40e4:	cmp	x8, #0x0
    40e8:	cset	w9, le
    40ec:	tbnz	w9, #0, 4678 <PyInit__codecs_kr@@Base+0x1d14>
    40f0:	ldur	x8, [x29, #-32]
    40f4:	ldr	x8, [x8]
    40f8:	ldrb	w9, [x8]
    40fc:	sturb	w9, [x29, #-49]
    4100:	ldurb	w9, [x29, #-49]
    4104:	cmp	w9, #0x80
    4108:	b.ge	4150 <PyInit__codecs_kr@@Base+0x17ec>  // b.tcont
    410c:	ldur	x0, [x29, #-48]
    4110:	ldurb	w1, [x29, #-49]
    4114:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    4118:	cmp	w0, #0x0
    411c:	cset	w8, ge  // ge = tcont
    4120:	tbnz	w8, #0, 4130 <PyInit__codecs_kr@@Base+0x17cc>
    4124:	mov	x8, #0xfffffffffffffffc    	// #-4
    4128:	stur	x8, [x29, #-8]
    412c:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4130:	ldur	x8, [x29, #-32]
    4134:	ldr	x9, [x8]
    4138:	add	x9, x9, #0x1
    413c:	str	x9, [x8]
    4140:	ldur	x8, [x29, #-40]
    4144:	subs	x8, x8, #0x1
    4148:	stur	x8, [x29, #-40]
    414c:	b	40e0 <PyInit__codecs_kr@@Base+0x177c>
    4150:	ldur	x8, [x29, #-40]
    4154:	cmp	x8, #0x2
    4158:	b.ge	4168 <PyInit__codecs_kr@@Base+0x1804>  // b.tcont
    415c:	mov	x8, #0xfffffffffffffffe    	// #-2
    4160:	stur	x8, [x29, #-8]
    4164:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4168:	ldur	x8, [x29, #-32]
    416c:	ldr	x8, [x8]
    4170:	ldrb	w9, [x8, #1]
    4174:	sturb	w9, [x29, #-50]
    4178:	ldurb	w9, [x29, #-49]
    417c:	cmp	w9, #0xd8
    4180:	b.ge	4428 <PyInit__codecs_kr@@Base+0x1ac4>  // b.tcont
    4184:	ldurb	w8, [x29, #-49]
    4188:	asr	w8, w8, #2
    418c:	and	w8, w8, #0x1f
    4190:	strb	w8, [sp, #55]
    4194:	ldurb	w8, [x29, #-49]
    4198:	ldurb	w9, [x29, #-50]
    419c:	asr	w9, w9, #5
    41a0:	orr	w8, w9, w8, lsl #3
    41a4:	and	w8, w8, #0x1f
    41a8:	strb	w8, [sp, #54]
    41ac:	ldurb	w8, [x29, #-50]
    41b0:	and	w8, w8, #0x1f
    41b4:	strb	w8, [sp, #53]
    41b8:	ldrb	w8, [sp, #55]
    41bc:	mov	w10, w8
    41c0:	adrp	x11, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    41c4:	add	x11, x11, #0x78e
    41c8:	add	x10, x11, x10
    41cc:	ldrb	w8, [x10]
    41d0:	strb	w8, [sp, #52]
    41d4:	ldrb	w8, [sp, #54]
    41d8:	mov	w10, w8
    41dc:	adrp	x11, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    41e0:	add	x11, x11, #0x7ae
    41e4:	add	x10, x11, x10
    41e8:	ldrb	w8, [x10]
    41ec:	strb	w8, [sp, #51]
    41f0:	ldrb	w8, [sp, #53]
    41f4:	mov	w10, w8
    41f8:	adrp	x11, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    41fc:	add	x11, x11, #0x7ce
    4200:	add	x10, x11, x10
    4204:	ldrb	w8, [x10]
    4208:	strb	w8, [sp, #50]
    420c:	ldrb	w8, [sp, #52]
    4210:	cmp	w8, #0xff
    4214:	b.eq	4230 <PyInit__codecs_kr@@Base+0x18cc>  // b.none
    4218:	ldrb	w8, [sp, #51]
    421c:	cmp	w8, #0xff
    4220:	b.eq	4230 <PyInit__codecs_kr@@Base+0x18cc>  // b.none
    4224:	ldrb	w8, [sp, #50]
    4228:	cmp	w8, #0xff
    422c:	b.ne	423c <PyInit__codecs_kr@@Base+0x18d8>  // b.any
    4230:	mov	x8, #0x1                   	// #1
    4234:	stur	x8, [x29, #-8]
    4238:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    423c:	ldrb	w8, [sp, #52]
    4240:	cmp	w8, #0xfd
    4244:	b.ne	4324 <PyInit__codecs_kr@@Base+0x19c0>  // b.any
    4248:	ldrb	w8, [sp, #51]
    424c:	cmp	w8, #0xfd
    4250:	b.ne	42c8 <PyInit__codecs_kr@@Base+0x1964>  // b.any
    4254:	ldrb	w8, [sp, #50]
    4258:	cmp	w8, #0xfd
    425c:	b.ne	4288 <PyInit__codecs_kr@@Base+0x1924>  // b.any
    4260:	ldur	x0, [x29, #-48]
    4264:	mov	w1, #0x3000                	// #12288
    4268:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    426c:	cmp	w0, #0x0
    4270:	cset	w8, ge  // ge = tcont
    4274:	tbnz	w8, #0, 4284 <PyInit__codecs_kr@@Base+0x1920>
    4278:	mov	x8, #0xfffffffffffffffc    	// #-4
    427c:	stur	x8, [x29, #-8]
    4280:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4284:	b	42c4 <PyInit__codecs_kr@@Base+0x1960>
    4288:	ldur	x0, [x29, #-48]
    428c:	ldrb	w8, [sp, #53]
    4290:	mov	w9, w8
    4294:	adrp	x10, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    4298:	add	x10, x10, #0x7ee
    429c:	ldrb	w8, [x10, x9]
    42a0:	mov	w11, #0x3100                	// #12544
    42a4:	orr	w1, w11, w8
    42a8:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    42ac:	cmp	w0, #0x0
    42b0:	cset	w8, ge  // ge = tcont
    42b4:	tbnz	w8, #0, 42c4 <PyInit__codecs_kr@@Base+0x1960>
    42b8:	mov	x8, #0xfffffffffffffffc    	// #-4
    42bc:	stur	x8, [x29, #-8]
    42c0:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    42c4:	b	4320 <PyInit__codecs_kr@@Base+0x19bc>
    42c8:	ldrb	w8, [sp, #50]
    42cc:	cmp	w8, #0xfd
    42d0:	b.ne	4314 <PyInit__codecs_kr@@Base+0x19b0>  // b.any
    42d4:	ldur	x0, [x29, #-48]
    42d8:	ldrb	w8, [sp, #54]
    42dc:	mov	w9, w8
    42e0:	adrp	x10, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    42e4:	add	x10, x10, #0x80e
    42e8:	ldrb	w8, [x10, x9]
    42ec:	mov	w11, #0x3100                	// #12544
    42f0:	orr	w1, w11, w8
    42f4:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    42f8:	cmp	w0, #0x0
    42fc:	cset	w8, ge  // ge = tcont
    4300:	tbnz	w8, #0, 4310 <PyInit__codecs_kr@@Base+0x19ac>
    4304:	mov	x8, #0xfffffffffffffffc    	// #-4
    4308:	stur	x8, [x29, #-8]
    430c:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4310:	b	4320 <PyInit__codecs_kr@@Base+0x19bc>
    4314:	mov	x8, #0x1                   	// #1
    4318:	stur	x8, [x29, #-8]
    431c:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4320:	b	4408 <PyInit__codecs_kr@@Base+0x1aa4>
    4324:	ldrb	w8, [sp, #51]
    4328:	cmp	w8, #0xfd
    432c:	b.ne	438c <PyInit__codecs_kr@@Base+0x1a28>  // b.any
    4330:	ldrb	w8, [sp, #50]
    4334:	cmp	w8, #0xfd
    4338:	b.ne	437c <PyInit__codecs_kr@@Base+0x1a18>  // b.any
    433c:	ldur	x0, [x29, #-48]
    4340:	ldrb	w8, [sp, #55]
    4344:	mov	w9, w8
    4348:	adrp	x10, 1d000 <PyInit__codecs_kr@@Base+0x1a69c>
    434c:	add	x10, x10, #0x82e
    4350:	ldrb	w8, [x10, x9]
    4354:	mov	w11, #0x3100                	// #12544
    4358:	orr	w1, w11, w8
    435c:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    4360:	cmp	w0, #0x0
    4364:	cset	w8, ge  // ge = tcont
    4368:	tbnz	w8, #0, 4378 <PyInit__codecs_kr@@Base+0x1a14>
    436c:	mov	x8, #0xfffffffffffffffc    	// #-4
    4370:	stur	x8, [x29, #-8]
    4374:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4378:	b	4388 <PyInit__codecs_kr@@Base+0x1a24>
    437c:	mov	x8, #0x1                   	// #1
    4380:	stur	x8, [x29, #-8]
    4384:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4388:	b	4408 <PyInit__codecs_kr@@Base+0x1aa4>
    438c:	ldur	x0, [x29, #-48]
    4390:	ldrb	w8, [sp, #52]
    4394:	mov	w9, #0x24c                 	// #588
    4398:	mul	w8, w8, w9
    439c:	mov	w9, #0xac00                	// #44032
    43a0:	add	w8, w9, w8
    43a4:	ldrb	w9, [sp, #51]
    43a8:	mov	w10, #0x1c                  	// #28
    43ac:	mul	w9, w9, w10
    43b0:	add	w8, w8, w9
    43b4:	ldrb	w9, [sp, #50]
    43b8:	cmp	w9, #0xfd
    43bc:	str	x0, [sp, #32]
    43c0:	str	w8, [sp, #28]
    43c4:	b.ne	43d4 <PyInit__codecs_kr@@Base+0x1a70>  // b.any
    43c8:	mov	w8, wzr
    43cc:	str	w8, [sp, #24]
    43d0:	b	43dc <PyInit__codecs_kr@@Base+0x1a78>
    43d4:	ldrb	w8, [sp, #50]
    43d8:	str	w8, [sp, #24]
    43dc:	ldr	w8, [sp, #24]
    43e0:	ldr	w9, [sp, #28]
    43e4:	add	w1, w9, w8
    43e8:	ldr	x0, [sp, #32]
    43ec:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    43f0:	cmp	w0, #0x0
    43f4:	cset	w8, ge  // ge = tcont
    43f8:	tbnz	w8, #0, 4408 <PyInit__codecs_kr@@Base+0x1aa4>
    43fc:	mov	x8, #0xfffffffffffffffc    	// #-4
    4400:	stur	x8, [x29, #-8]
    4404:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4408:	ldur	x8, [x29, #-32]
    440c:	ldr	x9, [x8]
    4410:	add	x9, x9, #0x2
    4414:	str	x9, [x8]
    4418:	ldur	x8, [x29, #-40]
    441c:	subs	x8, x8, #0x2
    4420:	stur	x8, [x29, #-40]
    4424:	b	4674 <PyInit__codecs_kr@@Base+0x1d10>
    4428:	ldurb	w8, [x29, #-49]
    442c:	cmp	w8, #0xdf
    4430:	b.eq	4498 <PyInit__codecs_kr@@Base+0x1b34>  // b.none
    4434:	ldurb	w8, [x29, #-49]
    4438:	cmp	w8, #0xf9
    443c:	b.gt	4498 <PyInit__codecs_kr@@Base+0x1b34>
    4440:	ldurb	w8, [x29, #-50]
    4444:	cmp	w8, #0x31
    4448:	b.lt	4498 <PyInit__codecs_kr@@Base+0x1b34>  // b.tstop
    444c:	ldurb	w8, [x29, #-50]
    4450:	cmp	w8, #0x80
    4454:	b.lt	4464 <PyInit__codecs_kr@@Base+0x1b00>  // b.tstop
    4458:	ldurb	w8, [x29, #-50]
    445c:	cmp	w8, #0x91
    4460:	b.lt	4498 <PyInit__codecs_kr@@Base+0x1b34>  // b.tstop
    4464:	ldurb	w8, [x29, #-50]
    4468:	and	w8, w8, #0x7f
    446c:	cmp	w8, #0x7f
    4470:	b.eq	4498 <PyInit__codecs_kr@@Base+0x1b34>  // b.none
    4474:	ldurb	w8, [x29, #-49]
    4478:	cmp	w8, #0xda
    447c:	b.ne	44a4 <PyInit__codecs_kr@@Base+0x1b40>  // b.any
    4480:	ldurb	w8, [x29, #-50]
    4484:	cmp	w8, #0xa1
    4488:	b.lt	44a4 <PyInit__codecs_kr@@Base+0x1b40>  // b.tstop
    448c:	ldurb	w8, [x29, #-50]
    4490:	cmp	w8, #0xd3
    4494:	b.gt	44a4 <PyInit__codecs_kr@@Base+0x1b40>
    4498:	mov	x8, #0x1                   	// #1
    449c:	stur	x8, [x29, #-8]
    44a0:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    44a4:	ldurb	w8, [x29, #-49]
    44a8:	cmp	w8, #0xe0
    44ac:	b.ge	44c8 <PyInit__codecs_kr@@Base+0x1b64>  // b.tcont
    44b0:	ldurb	w8, [x29, #-49]
    44b4:	subs	w8, w8, #0xd9
    44b8:	mov	w9, #0x2                   	// #2
    44bc:	mul	w8, w9, w8
    44c0:	str	w8, [sp, #20]
    44c4:	b	44dc <PyInit__codecs_kr@@Base+0x1b78>
    44c8:	ldurb	w8, [x29, #-49]
    44cc:	mov	w9, #0x2                   	// #2
    44d0:	mul	w8, w9, w8
    44d4:	subs	w8, w8, #0x197
    44d8:	str	w8, [sp, #20]
    44dc:	ldr	w8, [sp, #20]
    44e0:	strb	w8, [sp, #49]
    44e4:	ldurb	w8, [x29, #-50]
    44e8:	cmp	w8, #0x91
    44ec:	b.ge	4500 <PyInit__codecs_kr@@Base+0x1b9c>  // b.tcont
    44f0:	ldurb	w8, [x29, #-50]
    44f4:	subs	w8, w8, #0x31
    44f8:	str	w8, [sp, #16]
    44fc:	b	450c <PyInit__codecs_kr@@Base+0x1ba8>
    4500:	ldurb	w8, [x29, #-50]
    4504:	subs	w8, w8, #0x43
    4508:	str	w8, [sp, #16]
    450c:	ldr	w8, [sp, #16]
    4510:	strb	w8, [sp, #48]
    4514:	ldrb	w8, [sp, #49]
    4518:	ldrb	w9, [sp, #48]
    451c:	mov	w10, #0x1                   	// #1
    4520:	mov	w11, wzr
    4524:	cmp	w9, #0x5e
    4528:	csel	w9, w11, w10, lt  // lt = tstop
    452c:	add	w8, w8, w9
    4530:	add	w8, w8, #0x21
    4534:	strb	w8, [sp, #49]
    4538:	ldrb	w8, [sp, #48]
    453c:	cmp	w8, #0x5e
    4540:	b.ge	4550 <PyInit__codecs_kr@@Base+0x1bec>  // b.tcont
    4544:	ldrb	w8, [sp, #48]
    4548:	str	w8, [sp, #12]
    454c:	b	455c <PyInit__codecs_kr@@Base+0x1bf8>
    4550:	ldrb	w8, [sp, #48]
    4554:	subs	w8, w8, #0x5e
    4558:	str	w8, [sp, #12]
    455c:	ldr	w8, [sp, #12]
    4560:	add	w8, w8, #0x21
    4564:	strb	w8, [sp, #48]
    4568:	ldrb	w8, [sp, #49]
    456c:	mov	w9, w8
    4570:	mov	x10, #0x10                  	// #16
    4574:	mul	x9, x10, x9
    4578:	ldr	x10, [sp, #40]
    457c:	add	x9, x10, x9
    4580:	ldr	x9, [x9]
    4584:	cbz	x9, 4668 <PyInit__codecs_kr@@Base+0x1d04>
    4588:	ldrb	w8, [sp, #48]
    458c:	ldrb	w9, [sp, #49]
    4590:	mov	w10, w9
    4594:	mov	x11, #0x10                  	// #16
    4598:	mul	x10, x11, x10
    459c:	ldr	x11, [sp, #40]
    45a0:	add	x10, x11, x10
    45a4:	ldrb	w9, [x10, #8]
    45a8:	cmp	w8, w9
    45ac:	b.lt	4668 <PyInit__codecs_kr@@Base+0x1d04>  // b.tstop
    45b0:	ldrb	w8, [sp, #48]
    45b4:	ldrb	w9, [sp, #49]
    45b8:	mov	w10, w9
    45bc:	mov	x11, #0x10                  	// #16
    45c0:	mul	x10, x11, x10
    45c4:	ldr	x11, [sp, #40]
    45c8:	add	x10, x11, x10
    45cc:	ldrb	w9, [x10, #9]
    45d0:	cmp	w8, w9
    45d4:	b.gt	4668 <PyInit__codecs_kr@@Base+0x1d04>
    45d8:	ldrb	w8, [sp, #49]
    45dc:	mov	w9, w8
    45e0:	mov	x10, #0x10                  	// #16
    45e4:	mul	x9, x10, x9
    45e8:	ldr	x11, [sp, #40]
    45ec:	add	x9, x11, x9
    45f0:	ldr	x9, [x9]
    45f4:	ldrb	w8, [sp, #48]
    45f8:	ldrb	w12, [sp, #49]
    45fc:	mov	w13, w12
    4600:	mul	x10, x10, x13
    4604:	add	x10, x11, x10
    4608:	ldrb	w12, [x10, #8]
    460c:	subs	w8, w8, w12
    4610:	ldrh	w8, [x9, w8, sxtw #1]
    4614:	str	w8, [sp, #56]
    4618:	mov	w12, #0xfffe                	// #65534
    461c:	cmp	w8, w12
    4620:	b.eq	4668 <PyInit__codecs_kr@@Base+0x1d04>  // b.none
    4624:	ldur	x0, [x29, #-48]
    4628:	ldr	w1, [sp, #56]
    462c:	bl	2840 <_PyUnicodeWriter_WriteChar@plt>
    4630:	cmp	w0, #0x0
    4634:	cset	w8, ge  // ge = tcont
    4638:	tbnz	w8, #0, 4648 <PyInit__codecs_kr@@Base+0x1ce4>
    463c:	mov	x8, #0xfffffffffffffffc    	// #-4
    4640:	stur	x8, [x29, #-8]
    4644:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4648:	ldur	x8, [x29, #-32]
    464c:	ldr	x9, [x8]
    4650:	add	x9, x9, #0x2
    4654:	str	x9, [x8]
    4658:	ldur	x8, [x29, #-40]
    465c:	subs	x8, x8, #0x2
    4660:	stur	x8, [x29, #-40]
    4664:	b	4674 <PyInit__codecs_kr@@Base+0x1d10>
    4668:	mov	x8, #0x1                   	// #1
    466c:	stur	x8, [x29, #-8]
    4670:	b	467c <PyInit__codecs_kr@@Base+0x1d18>
    4674:	b	40e0 <PyInit__codecs_kr@@Base+0x177c>
    4678:	stur	xzr, [x29, #-8]
    467c:	ldur	x0, [x29, #-8]
    4680:	ldp	x29, x30, [sp, #112]
    4684:	add	sp, sp, #0x80
    4688:	ret

Disassembly of section .fini:

000000000000468c <.fini>:
    468c:	stp	x29, x30, [sp, #-16]!
    4690:	mov	x29, sp
    4694:	ldp	x29, x30, [sp], #16
    4698:	ret
