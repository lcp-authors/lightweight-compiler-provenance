
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//wc_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401858 <.init>:
  401858:	stp	x29, x30, [sp, #-16]!
  40185c:	mov	x29, sp
  401860:	bl	402730 <ferror@plt+0xa90>
  401864:	ldp	x29, x30, [sp], #16
  401868:	ret

Disassembly of section .plt:

0000000000401870 <mbrtowc@plt-0x20>:
  401870:	stp	x16, x30, [sp, #-16]!
  401874:	adrp	x16, 418000 <_obstack_memory_used@@Base+0x117f8>
  401878:	ldr	x17, [x16, #4088]
  40187c:	add	x16, x16, #0xff8
  401880:	br	x17
  401884:	nop
  401888:	nop
  40188c:	nop

0000000000401890 <mbrtowc@plt>:
  401890:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401894:	ldr	x17, [x16]
  401898:	add	x16, x16, #0x0
  40189c:	br	x17

00000000004018a0 <memcpy@plt>:
  4018a0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4018a4:	ldr	x17, [x16, #8]
  4018a8:	add	x16, x16, #0x8
  4018ac:	br	x17

00000000004018b0 <_exit@plt>:
  4018b0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4018b4:	ldr	x17, [x16, #16]
  4018b8:	add	x16, x16, #0x10
  4018bc:	br	x17

00000000004018c0 <strlen@plt>:
  4018c0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4018c4:	ldr	x17, [x16, #24]
  4018c8:	add	x16, x16, #0x18
  4018cc:	br	x17

00000000004018d0 <exit@plt>:
  4018d0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4018d4:	ldr	x17, [x16, #32]
  4018d8:	add	x16, x16, #0x20
  4018dc:	br	x17

00000000004018e0 <error@plt>:
  4018e0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4018e4:	ldr	x17, [x16, #40]
  4018e8:	add	x16, x16, #0x28
  4018ec:	br	x17

00000000004018f0 <sysinfo@plt>:
  4018f0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4018f4:	ldr	x17, [x16, #48]
  4018f8:	add	x16, x16, #0x30
  4018fc:	br	x17

0000000000401900 <__cxa_atexit@plt>:
  401900:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401904:	ldr	x17, [x16, #56]
  401908:	add	x16, x16, #0x38
  40190c:	br	x17

0000000000401910 <iswcntrl@plt>:
  401910:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401914:	ldr	x17, [x16, #64]
  401918:	add	x16, x16, #0x40
  40191c:	br	x17

0000000000401920 <setvbuf@plt>:
  401920:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401924:	ldr	x17, [x16, #72]
  401928:	add	x16, x16, #0x48
  40192c:	br	x17

0000000000401930 <lseek@plt>:
  401930:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401934:	ldr	x17, [x16, #80]
  401938:	add	x16, x16, #0x50
  40193c:	br	x17

0000000000401940 <__fpending@plt>:
  401940:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401944:	ldr	x17, [x16, #88]
  401948:	add	x16, x16, #0x58
  40194c:	br	x17

0000000000401950 <fileno@plt>:
  401950:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401954:	ldr	x17, [x16, #96]
  401958:	add	x16, x16, #0x60
  40195c:	br	x17

0000000000401960 <fclose@plt>:
  401960:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401964:	ldr	x17, [x16, #104]
  401968:	add	x16, x16, #0x68
  40196c:	br	x17

0000000000401970 <iswspace@plt>:
  401970:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401974:	ldr	x17, [x16, #112]
  401978:	add	x16, x16, #0x70
  40197c:	br	x17

0000000000401980 <nl_langinfo@plt>:
  401980:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401984:	ldr	x17, [x16, #120]
  401988:	add	x16, x16, #0x78
  40198c:	br	x17

0000000000401990 <fopen@plt>:
  401990:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401994:	ldr	x17, [x16, #128]
  401998:	add	x16, x16, #0x80
  40199c:	br	x17

00000000004019a0 <malloc@plt>:
  4019a0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019a4:	ldr	x17, [x16, #136]
  4019a8:	add	x16, x16, #0x88
  4019ac:	br	x17

00000000004019b0 <wcwidth@plt>:
  4019b0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019b4:	ldr	x17, [x16, #144]
  4019b8:	add	x16, x16, #0x90
  4019bc:	br	x17

00000000004019c0 <getdelim@plt>:
  4019c0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019c4:	ldr	x17, [x16, #152]
  4019c8:	add	x16, x16, #0x98
  4019cc:	br	x17

00000000004019d0 <open@plt>:
  4019d0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019d4:	ldr	x17, [x16, #160]
  4019d8:	add	x16, x16, #0xa0
  4019dc:	br	x17

00000000004019e0 <strncmp@plt>:
  4019e0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019e4:	ldr	x17, [x16, #168]
  4019e8:	add	x16, x16, #0xa8
  4019ec:	br	x17

00000000004019f0 <bindtextdomain@plt>:
  4019f0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019f4:	ldr	x17, [x16, #176]
  4019f8:	add	x16, x16, #0xb0
  4019fc:	br	x17

0000000000401a00 <__libc_start_main@plt>:
  401a00:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a04:	ldr	x17, [x16, #184]
  401a08:	add	x16, x16, #0xb8
  401a0c:	br	x17

0000000000401a10 <fgetc@plt>:
  401a10:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a14:	ldr	x17, [x16, #192]
  401a18:	add	x16, x16, #0xc0
  401a1c:	br	x17

0000000000401a20 <__printf_chk@plt>:
  401a20:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a24:	ldr	x17, [x16, #200]
  401a28:	add	x16, x16, #0xc8
  401a2c:	br	x17

0000000000401a30 <memset@plt>:
  401a30:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a34:	ldr	x17, [x16, #208]
  401a38:	add	x16, x16, #0xd0
  401a3c:	br	x17

0000000000401a40 <calloc@plt>:
  401a40:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a44:	ldr	x17, [x16, #216]
  401a48:	add	x16, x16, #0xd8
  401a4c:	br	x17

0000000000401a50 <realloc@plt>:
  401a50:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a54:	ldr	x17, [x16, #224]
  401a58:	add	x16, x16, #0xe0
  401a5c:	br	x17

0000000000401a60 <getpagesize@plt>:
  401a60:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a64:	ldr	x17, [x16, #232]
  401a68:	add	x16, x16, #0xe8
  401a6c:	br	x17

0000000000401a70 <close@plt>:
  401a70:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a74:	ldr	x17, [x16, #240]
  401a78:	add	x16, x16, #0xf0
  401a7c:	br	x17

0000000000401a80 <strrchr@plt>:
  401a80:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a84:	ldr	x17, [x16, #248]
  401a88:	add	x16, x16, #0xf8
  401a8c:	br	x17

0000000000401a90 <__gmon_start__@plt>:
  401a90:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a94:	ldr	x17, [x16, #256]
  401a98:	add	x16, x16, #0x100
  401a9c:	br	x17

0000000000401aa0 <btowc@plt>:
  401aa0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401aa4:	ldr	x17, [x16, #264]
  401aa8:	add	x16, x16, #0x108
  401aac:	br	x17

0000000000401ab0 <abort@plt>:
  401ab0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #272]
  401ab8:	add	x16, x16, #0x110
  401abc:	br	x17

0000000000401ac0 <posix_fadvise@plt>:
  401ac0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #280]
  401ac8:	add	x16, x16, #0x118
  401acc:	br	x17

0000000000401ad0 <mbsinit@plt>:
  401ad0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #288]
  401ad8:	add	x16, x16, #0x120
  401adc:	br	x17

0000000000401ae0 <__overflow@plt>:
  401ae0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #296]
  401ae8:	add	x16, x16, #0x128
  401aec:	br	x17

0000000000401af0 <feof@plt>:
  401af0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #304]
  401af8:	add	x16, x16, #0x130
  401afc:	br	x17

0000000000401b00 <memcmp@plt>:
  401b00:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #312]
  401b08:	add	x16, x16, #0x138
  401b0c:	br	x17

0000000000401b10 <textdomain@plt>:
  401b10:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #320]
  401b18:	add	x16, x16, #0x140
  401b1c:	br	x17

0000000000401b20 <getopt_long@plt>:
  401b20:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #328]
  401b28:	add	x16, x16, #0x148
  401b2c:	br	x17

0000000000401b30 <__fprintf_chk@plt>:
  401b30:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #336]
  401b38:	add	x16, x16, #0x150
  401b3c:	br	x17

0000000000401b40 <strcmp@plt>:
  401b40:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #344]
  401b48:	add	x16, x16, #0x158
  401b4c:	br	x17

0000000000401b50 <__ctype_b_loc@plt>:
  401b50:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #352]
  401b58:	add	x16, x16, #0x160
  401b5c:	br	x17

0000000000401b60 <fseeko@plt>:
  401b60:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #360]
  401b68:	add	x16, x16, #0x168
  401b6c:	br	x17

0000000000401b70 <free@plt>:
  401b70:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #368]
  401b78:	add	x16, x16, #0x170
  401b7c:	br	x17

0000000000401b80 <__ctype_get_mb_cur_max@plt>:
  401b80:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #376]
  401b88:	add	x16, x16, #0x178
  401b8c:	br	x17

0000000000401b90 <strchr@plt>:
  401b90:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #384]
  401b98:	add	x16, x16, #0x180
  401b9c:	br	x17

0000000000401ba0 <fwrite@plt>:
  401ba0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #392]
  401ba8:	add	x16, x16, #0x188
  401bac:	br	x17

0000000000401bb0 <fflush@plt>:
  401bb0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #400]
  401bb8:	add	x16, x16, #0x190
  401bbc:	br	x17

0000000000401bc0 <read@plt>:
  401bc0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #408]
  401bc8:	add	x16, x16, #0x198
  401bcc:	br	x17

0000000000401bd0 <memchr@plt>:
  401bd0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #416]
  401bd8:	add	x16, x16, #0x1a0
  401bdc:	br	x17

0000000000401be0 <sysconf@plt>:
  401be0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #424]
  401be8:	add	x16, x16, #0x1a8
  401bec:	br	x17

0000000000401bf0 <__fxstat@plt>:
  401bf0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #432]
  401bf8:	add	x16, x16, #0x1b0
  401bfc:	br	x17

0000000000401c00 <dcgettext@plt>:
  401c00:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #440]
  401c08:	add	x16, x16, #0x1b8
  401c0c:	br	x17

0000000000401c10 <fputs_unlocked@plt>:
  401c10:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #448]
  401c18:	add	x16, x16, #0x1c0
  401c1c:	br	x17

0000000000401c20 <__freading@plt>:
  401c20:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #456]
  401c28:	add	x16, x16, #0x1c8
  401c2c:	br	x17

0000000000401c30 <iswprint@plt>:
  401c30:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #464]
  401c38:	add	x16, x16, #0x1d0
  401c3c:	br	x17

0000000000401c40 <__assert_fail@plt>:
  401c40:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #472]
  401c48:	add	x16, x16, #0x1d8
  401c4c:	br	x17

0000000000401c50 <__errno_location@plt>:
  401c50:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #480]
  401c58:	add	x16, x16, #0x1e0
  401c5c:	br	x17

0000000000401c60 <getenv@plt>:
  401c60:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #488]
  401c68:	add	x16, x16, #0x1e8
  401c6c:	br	x17

0000000000401c70 <__xstat@plt>:
  401c70:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #496]
  401c78:	add	x16, x16, #0x1f0
  401c7c:	br	x17

0000000000401c80 <__memmove_chk@plt>:
  401c80:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #504]
  401c88:	add	x16, x16, #0x1f8
  401c8c:	br	x17

0000000000401c90 <setlocale@plt>:
  401c90:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #512]
  401c98:	add	x16, x16, #0x200
  401c9c:	br	x17

0000000000401ca0 <ferror@plt>:
  401ca0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #520]
  401ca8:	add	x16, x16, #0x208
  401cac:	br	x17

Disassembly of section .text:

0000000000401cb0 <_obstack_begin@@Base-0x4948>:
  401cb0:	sub	sp, sp, #0x230
  401cb4:	stp	x29, x30, [sp]
  401cb8:	mov	x29, sp
  401cbc:	stp	x19, x20, [sp, #16]
  401cc0:	mov	w20, w0
  401cc4:	ldr	x0, [x1]
  401cc8:	stp	x21, x22, [sp, #32]
  401ccc:	adrp	x22, 406000 <ferror@plt+0x4360>
  401cd0:	stp	x23, x24, [sp, #48]
  401cd4:	mov	x23, x1
  401cd8:	add	x22, x22, #0xa18
  401cdc:	stp	x25, x26, [sp, #64]
  401ce0:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x127f8>
  401ce4:	add	x19, x24, #0x2d0
  401ce8:	stp	x27, x28, [sp, #80]
  401cec:	bl	403b68 <ferror@plt+0x1ec8>
  401cf0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  401cf4:	mov	w0, #0x6                   	// #6
  401cf8:	add	x1, x1, #0xb20
  401cfc:	bl	401c90 <setlocale@plt>
  401d00:	adrp	x27, 419000 <_obstack_memory_used@@Base+0x127f8>
  401d04:	adrp	x1, 406000 <ferror@plt+0x4360>
  401d08:	add	x1, x1, #0xfe0
  401d0c:	mov	x0, x22
  401d10:	bl	4019f0 <bindtextdomain@plt>
  401d14:	mov	x0, x22
  401d18:	adrp	x22, 407000 <_obstack_memory_used@@Base+0x7f8>
  401d1c:	bl	401b10 <textdomain@plt>
  401d20:	add	x22, x22, #0x1d0
  401d24:	adrp	x0, 403000 <ferror@plt+0x1360>
  401d28:	add	x0, x0, #0x838
  401d2c:	bl	4069c8 <_obstack_memory_used@@Base+0x1c0>
  401d30:	adrp	x25, 407000 <_obstack_memory_used@@Base+0x7f8>
  401d34:	bl	401a60 <getpagesize@plt>
  401d38:	sxtw	x4, w0
  401d3c:	ldr	x0, [x27, #688]
  401d40:	mov	x3, #0x0                   	// #0
  401d44:	mov	w2, #0x1                   	// #1
  401d48:	mov	x1, #0x0                   	// #0
  401d4c:	str	x4, [x19, #16]
  401d50:	add	x25, x25, #0x28
  401d54:	bl	401920 <setvbuf@plt>
  401d58:	add	x28, x22, #0x78
  401d5c:	adrp	x0, 406000 <ferror@plt+0x4360>
  401d60:	add	x0, x0, #0xff8
  401d64:	bl	401c60 <getenv@plt>
  401d68:	cmp	x0, #0x0
  401d6c:	cset	w0, ne  // ne = any
  401d70:	mov	x21, #0x0                   	// #0
  401d74:	mov	w26, #0x1                   	// #1
  401d78:	strb	wzr, [x24, #720]
  401d7c:	strb	wzr, [x19, #8]
  401d80:	strb	wzr, [x19, #9]
  401d84:	strb	wzr, [x19, #10]
  401d88:	strb	wzr, [x19, #11]
  401d8c:	strb	w0, [x19, #24]
  401d90:	stp	xzr, xzr, [x19, #32]
  401d94:	stp	xzr, xzr, [x19, #48]
  401d98:	str	xzr, [x19, #64]
  401d9c:	nop
  401da0:	mov	x3, x28
  401da4:	mov	x2, x25
  401da8:	mov	x1, x23
  401dac:	mov	w0, w20
  401db0:	mov	x4, #0x0                   	// #0
  401db4:	bl	401b20 <getopt_long@plt>
  401db8:	cmn	w0, #0x1
  401dbc:	b.eq	401e04 <ferror@plt+0x164>  // b.none
  401dc0:	cmp	w0, #0x6c
  401dc4:	b.eq	402104 <ferror@plt+0x464>  // b.none
  401dc8:	b.gt	402074 <ferror@plt+0x3d4>
  401dcc:	cmp	w0, #0x4c
  401dd0:	b.eq	40210c <ferror@plt+0x46c>  // b.none
  401dd4:	b.le	402090 <ferror@plt+0x3f0>
  401dd8:	cmp	w0, #0x63
  401ddc:	b.ne	402618 <ferror@plt+0x978>  // b.any
  401de0:	mov	x3, x28
  401de4:	mov	x2, x25
  401de8:	mov	x1, x23
  401dec:	mov	w0, w20
  401df0:	mov	x4, #0x0                   	// #0
  401df4:	strb	w26, [x19, #10]
  401df8:	bl	401b20 <getopt_long@plt>
  401dfc:	cmn	w0, #0x1
  401e00:	b.ne	401dc0 <ferror@plt+0x120>  // b.any
  401e04:	ldrb	w0, [x24, #720]
  401e08:	cbnz	w0, 401e14 <ferror@plt+0x174>
  401e0c:	ldrb	w0, [x19, #8]
  401e10:	cbz	w0, 4022cc <ferror@plt+0x62c>
  401e14:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x127f8>
  401e18:	ldr	w25, [x26, #680]
  401e1c:	cmp	w20, w25
  401e20:	cbz	x21, 40233c <ferror@plt+0x69c>
  401e24:	b.gt	402624 <ferror@plt+0x984>
  401e28:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  401e2c:	mov	x0, x21
  401e30:	add	x1, x1, #0x80
  401e34:	bl	401b40 <strcmp@plt>
  401e38:	cbnz	w0, 402400 <ferror@plt+0x760>
  401e3c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  401e40:	ldr	x20, [x0, #696]
  401e44:	mov	x0, x20
  401e48:	add	x27, sp, #0x90
  401e4c:	bl	401950 <fileno@plt>
  401e50:	mov	x2, x27
  401e54:	mov	w1, w0
  401e58:	mov	w0, #0x0                   	// #0
  401e5c:	bl	401bf0 <__fxstat@plt>
  401e60:	cbnz	w0, 401e74 <ferror@plt+0x1d4>
  401e64:	ldr	w0, [sp, #160]
  401e68:	and	w0, w0, #0xf000
  401e6c:	cmp	w0, #0x8, lsl #12
  401e70:	b.eq	40255c <ferror@plt+0x8bc>  // b.none
  401e74:	mov	x0, x20
  401e78:	bl	4036e0 <ferror@plt+0x1a40>
  401e7c:	mov	x23, x0
  401e80:	cbz	x0, 4026a0 <ferror@plt+0xa00>
  401e84:	mov	x0, #0x88                  	// #136
  401e88:	bl	406020 <ferror@plt+0x4380>
  401e8c:	mov	x26, x0
  401e90:	str	wzr, [sp, #140]
  401e94:	mov	w1, #0x1                   	// #1
  401e98:	mov	w0, w1
  401e9c:	mov	x20, #0x0                   	// #0
  401ea0:	str	w1, [x26]
  401ea4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  401ea8:	add	x1, x1, #0x188
  401eac:	adrp	x28, 407000 <_obstack_memory_used@@Base+0x7f8>
  401eb0:	str	x1, [sp, #128]
  401eb4:	add	x1, x28, #0x80
  401eb8:	mov	x24, #0x0                   	// #0
  401ebc:	mov	w25, #0x1                   	// #1
  401ec0:	str	w0, [x19, #4]
  401ec4:	mov	x0, x23
  401ec8:	str	x1, [sp, #112]
  401ecc:	mov	x1, x27
  401ed0:	bl	403718 <ferror@plt+0x1a78>
  401ed4:	mov	x28, x0
  401ed8:	cbz	x0, 401f84 <ferror@plt+0x2e4>
  401edc:	nop
  401ee0:	cbz	x21, 4021bc <ferror@plt+0x51c>
  401ee4:	ldrb	w1, [x21]
  401ee8:	cmp	w1, #0x2d
  401eec:	b.ne	402114 <ferror@plt+0x474>  // b.any
  401ef0:	ldrb	w1, [x21, #1]
  401ef4:	cbnz	w1, 402114 <ferror@plt+0x474>
  401ef8:	ldr	x1, [sp, #112]
  401efc:	bl	401b40 <strcmp@plt>
  401f00:	cbz	w0, 402228 <ferror@plt+0x588>
  401f04:	ldrb	w0, [x28]
  401f08:	cbz	w0, 40211c <ferror@plt+0x47c>
  401f0c:	cbnz	x20, 4021f4 <ferror@plt+0x554>
  401f10:	mov	x2, x26
  401f14:	mov	x0, x28
  401f18:	mov	w1, #0x0                   	// #0
  401f1c:	str	x2, [sp, #120]
  401f20:	bl	4019d0 <open@plt>
  401f24:	cmn	w0, #0x1
  401f28:	ldr	x2, [sp, #120]
  401f2c:	b.eq	4024d8 <ferror@plt+0x838>  // b.none
  401f30:	mov	x1, x28
  401f34:	mov	x3, #0x0                   	// #0
  401f38:	str	w0, [sp, #120]
  401f3c:	bl	4029d8 <ferror@plt+0xd38>
  401f40:	ldr	w6, [sp, #120]
  401f44:	and	w5, w0, #0xff
  401f48:	str	w5, [sp, #120]
  401f4c:	mov	w0, w6
  401f50:	bl	401a70 <close@plt>
  401f54:	ldr	w5, [sp, #120]
  401f58:	cbnz	w0, 4022f8 <ferror@plt+0x658>
  401f5c:	and	w25, w25, w5
  401f60:	cbnz	x20, 401f6c <ferror@plt+0x2cc>
  401f64:	mov	w0, #0x1                   	// #1
  401f68:	str	w0, [x26]
  401f6c:	mov	x1, x27
  401f70:	mov	x0, x23
  401f74:	add	x24, x24, #0x1
  401f78:	bl	403718 <ferror@plt+0x1a78>
  401f7c:	mov	x28, x0
  401f80:	cbnz	x0, 401ee0 <ferror@plt+0x240>
  401f84:	ldr	w0, [sp, #144]
  401f88:	cmp	w0, #0x3
  401f8c:	b.eq	4026a0 <ferror@plt+0xa00>  // b.none
  401f90:	cmp	w0, #0x4
  401f94:	b.ne	402200 <ferror@plt+0x560>  // b.any
  401f98:	bl	401c50 <__errno_location@plt>
  401f9c:	mov	x3, x0
  401fa0:	mov	w2, #0x5                   	// #5
  401fa4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  401fa8:	mov	x0, #0x0                   	// #0
  401fac:	add	x1, x1, #0xd0
  401fb0:	ldr	w22, [x3]
  401fb4:	bl	401c00 <dcgettext@plt>
  401fb8:	mov	x2, x21
  401fbc:	mov	x20, x0
  401fc0:	mov	w1, #0x3                   	// #3
  401fc4:	mov	w0, #0x0                   	// #0
  401fc8:	bl	405500 <ferror@plt+0x3860>
  401fcc:	mov	w25, #0x0                   	// #0
  401fd0:	mov	x3, x0
  401fd4:	mov	x2, x20
  401fd8:	mov	w1, w22
  401fdc:	mov	w0, #0x0                   	// #0
  401fe0:	bl	4018e0 <error@plt>
  401fe4:	ldr	w0, [sp, #140]
  401fe8:	cbnz	w0, 402294 <ferror@plt+0x5f4>
  401fec:	mov	x0, x23
  401ff0:	bl	4037c8 <ferror@plt+0x1b28>
  401ff4:	cmp	x0, #0x1
  401ff8:	b.ls	402038 <ferror@plt+0x398>  // b.plast
  401ffc:	ldp	x20, x21, [x19, #32]
  402000:	mov	w2, #0x5                   	// #5
  402004:	ldp	x22, x24, [x19, #48]
  402008:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  40200c:	ldr	x27, [x19, #64]
  402010:	add	x1, x1, #0x158
  402014:	mov	x0, #0x0                   	// #0
  402018:	bl	401c00 <dcgettext@plt>
  40201c:	mov	x4, x27
  402020:	mov	x5, x0
  402024:	mov	x3, x24
  402028:	mov	x2, x22
  40202c:	mov	x1, x21
  402030:	mov	x0, x20
  402034:	bl	4027f0 <ferror@plt+0xb50>
  402038:	mov	x0, x23
  40203c:	bl	4037e8 <ferror@plt+0x1b48>
  402040:	mov	x0, x26
  402044:	bl	401b70 <free@plt>
  402048:	ldrb	w0, [x19, #80]
  40204c:	cbnz	w0, 4022a0 <ferror@plt+0x600>
  402050:	eor	w0, w25, #0x1
  402054:	ldp	x29, x30, [sp]
  402058:	ldp	x19, x20, [sp, #16]
  40205c:	ldp	x21, x22, [sp, #32]
  402060:	ldp	x23, x24, [sp, #48]
  402064:	ldp	x25, x26, [sp, #64]
  402068:	ldp	x27, x28, [sp, #80]
  40206c:	add	sp, sp, #0x230
  402070:	ret
  402074:	cmp	w0, #0x77
  402078:	b.eq	4020fc <ferror@plt+0x45c>  // b.none
  40207c:	cmp	w0, #0x100
  402080:	b.ne	4020d8 <ferror@plt+0x438>  // b.any
  402084:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  402088:	ldr	x21, [x0, #672]
  40208c:	b	401da0 <ferror@plt+0x100>
  402090:	cmn	w0, #0x3
  402094:	b.ne	4020e8 <ferror@plt+0x448>  // b.any
  402098:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  40209c:	adrp	x5, 407000 <_obstack_memory_used@@Base+0x7f8>
  4020a0:	ldr	x0, [x27, #688]
  4020a4:	add	x5, x5, #0x8
  4020a8:	ldr	x3, [x1, #544]
  4020ac:	adrp	x4, 407000 <_obstack_memory_used@@Base+0x7f8>
  4020b0:	adrp	x2, 406000 <ferror@plt+0x4360>
  4020b4:	add	x4, x4, #0x18
  4020b8:	add	x2, x2, #0xf28
  4020bc:	adrp	x1, 406000 <ferror@plt+0x4360>
  4020c0:	add	x1, x1, #0xaa8
  4020c4:	mov	x6, #0x0                   	// #0
  4020c8:	stp	d8, d9, [sp, #96]
  4020cc:	bl	405ed8 <ferror@plt+0x4238>
  4020d0:	mov	w0, #0x0                   	// #0
  4020d4:	bl	4018d0 <exit@plt>
  4020d8:	cmp	w0, #0x6d
  4020dc:	b.ne	402618 <ferror@plt+0x978>  // b.any
  4020e0:	strb	w26, [x19, #9]
  4020e4:	b	401da0 <ferror@plt+0x100>
  4020e8:	cmn	w0, #0x2
  4020ec:	b.ne	402618 <ferror@plt+0x978>  // b.any
  4020f0:	mov	w0, #0x0                   	// #0
  4020f4:	stp	d8, d9, [sp, #96]
  4020f8:	bl	403358 <ferror@plt+0x16b8>
  4020fc:	strb	w26, [x19, #8]
  402100:	b	401da0 <ferror@plt+0x100>
  402104:	strb	w26, [x19]
  402108:	b	401da0 <ferror@plt+0x100>
  40210c:	strb	w26, [x19, #11]
  402110:	b	401da0 <ferror@plt+0x100>
  402114:	ldrb	w0, [x28]
  402118:	cbnz	w0, 402178 <ferror@plt+0x4d8>
  40211c:	mov	x0, x23
  402120:	bl	4037c8 <ferror@plt+0x1b28>
  402124:	mov	x2, x21
  402128:	mov	x28, x0
  40212c:	mov	w1, #0x3                   	// #3
  402130:	mov	w0, #0x0                   	// #0
  402134:	bl	405500 <ferror@plt+0x3860>
  402138:	mov	x25, x0
  40213c:	mov	w2, #0x5                   	// #5
  402140:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  402144:	mov	x0, #0x0                   	// #0
  402148:	add	x1, x1, #0x160
  40214c:	bl	401c00 <dcgettext@plt>
  402150:	mov	x5, x0
  402154:	mov	x3, x25
  402158:	mov	x4, x28
  40215c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  402160:	mov	w1, #0x0                   	// #0
  402164:	add	x2, x2, #0x180
  402168:	mov	w0, #0x0                   	// #0
  40216c:	mov	w25, #0x0                   	// #0
  402170:	bl	4018e0 <error@plt>
  402174:	b	401f60 <ferror@plt+0x2c0>
  402178:	cbnz	x20, 4021f4 <ferror@plt+0x554>
  40217c:	mov	x2, #0x0                   	// #0
  402180:	ldr	x1, [sp, #112]
  402184:	add	x2, x26, x2
  402188:	mov	x0, x28
  40218c:	str	x2, [sp, #120]
  402190:	bl	401b40 <strcmp@plt>
  402194:	ldr	x2, [sp, #120]
  402198:	cbnz	w0, 401f14 <ferror@plt+0x274>
  40219c:	mov	w4, #0x1                   	// #1
  4021a0:	mov	x1, x28
  4021a4:	mov	x3, #0xffffffffffffffff    	// #-1
  4021a8:	strb	w4, [x19, #80]
  4021ac:	bl	4029d8 <ferror@plt+0xd38>
  4021b0:	and	w5, w0, #0xff
  4021b4:	and	w25, w25, w5
  4021b8:	b	401f60 <ferror@plt+0x2c0>
  4021bc:	ldrb	w0, [x0]
  4021c0:	cbnz	w0, 402178 <ferror@plt+0x4d8>
  4021c4:	mov	w2, #0x5                   	// #5
  4021c8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  4021cc:	mov	x0, #0x0                   	// #0
  4021d0:	add	x1, x1, #0x160
  4021d4:	bl	401c00 <dcgettext@plt>
  4021d8:	mov	w25, #0x0                   	// #0
  4021dc:	ldr	x2, [sp, #128]
  4021e0:	mov	x3, x0
  4021e4:	mov	w1, #0x0                   	// #0
  4021e8:	mov	w0, #0x0                   	// #0
  4021ec:	bl	4018e0 <error@plt>
  4021f0:	b	401f60 <ferror@plt+0x2c0>
  4021f4:	mov	x2, #0x88                  	// #136
  4021f8:	mul	x2, x24, x2
  4021fc:	b	402180 <ferror@plt+0x4e0>
  402200:	cmp	w0, #0x2
  402204:	b.eq	402270 <ferror@plt+0x5d0>  // b.none
  402208:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  40220c:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  402210:	add	x3, x22, #0x198
  402214:	add	x1, x1, #0xe0
  402218:	add	x0, x0, #0xf0
  40221c:	mov	w2, #0x33f                 	// #831
  402220:	stp	d8, d9, [sp, #96]
  402224:	bl	401c40 <__assert_fail@plt>
  402228:	mov	w2, #0x5                   	// #5
  40222c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  402230:	mov	x0, #0x0                   	// #0
  402234:	add	x1, x1, #0x118
  402238:	bl	401c00 <dcgettext@plt>
  40223c:	mov	x25, x0
  402240:	mov	x1, x28
  402244:	mov	w0, #0x4                   	// #4
  402248:	bl	405430 <ferror@plt+0x3790>
  40224c:	mov	x3, x0
  402250:	mov	x2, x25
  402254:	mov	w0, #0x0                   	// #0
  402258:	mov	w1, #0x0                   	// #0
  40225c:	bl	4018e0 <error@plt>
  402260:	ldrb	w0, [x28]
  402264:	cbz	w0, 40211c <ferror@plt+0x47c>
  402268:	mov	w25, #0x0                   	// #0
  40226c:	b	401f60 <ferror@plt+0x2c0>
  402270:	cmp	x21, #0x0
  402274:	cset	w0, eq  // eq = none
  402278:	ands	w20, w25, w0
  40227c:	b.eq	401fe4 <ferror@plt+0x344>  // b.none
  402280:	mov	x0, x23
  402284:	bl	4037c8 <ferror@plt+0x1b28>
  402288:	cbz	x0, 40252c <ferror@plt+0x88c>
  40228c:	mov	w25, w20
  402290:	b	401fe4 <ferror@plt+0x344>
  402294:	add	x0, sp, #0x110
  402298:	bl	405818 <ferror@plt+0x3b78>
  40229c:	b	401fec <ferror@plt+0x34c>
  4022a0:	mov	w0, #0x0                   	// #0
  4022a4:	bl	401a70 <close@plt>
  4022a8:	cbz	w0, 402050 <ferror@plt+0x3b0>
  4022ac:	stp	d8, d9, [sp, #96]
  4022b0:	bl	401c50 <__errno_location@plt>
  4022b4:	mov	x1, x0
  4022b8:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  4022bc:	mov	w0, #0x1                   	// #1
  4022c0:	add	x2, x2, #0x80
  4022c4:	ldr	w1, [x1]
  4022c8:	bl	4018e0 <error@plt>
  4022cc:	ldrb	w0, [x19, #9]
  4022d0:	cbnz	w0, 401e14 <ferror@plt+0x174>
  4022d4:	ldrb	w0, [x19, #10]
  4022d8:	cbnz	w0, 401e14 <ferror@plt+0x174>
  4022dc:	ldrb	w0, [x19, #11]
  4022e0:	cbnz	w0, 401e14 <ferror@plt+0x174>
  4022e4:	mov	w0, #0x1                   	// #1
  4022e8:	strb	w0, [x24, #720]
  4022ec:	strb	w0, [x19, #8]
  4022f0:	strb	w0, [x19, #10]
  4022f4:	b	401e14 <ferror@plt+0x174>
  4022f8:	bl	401c50 <__errno_location@plt>
  4022fc:	mov	x3, x0
  402300:	mov	x2, x28
  402304:	mov	w5, #0x0                   	// #0
  402308:	mov	w1, #0x3                   	// #3
  40230c:	mov	w0, #0x0                   	// #0
  402310:	str	w5, [sp, #120]
  402314:	ldr	w28, [x3]
  402318:	bl	405500 <ferror@plt+0x3860>
  40231c:	ldr	x2, [sp, #128]
  402320:	mov	x3, x0
  402324:	mov	w1, w28
  402328:	mov	w0, #0x0                   	// #0
  40232c:	bl	4018e0 <error@plt>
  402330:	ldr	w5, [sp, #120]
  402334:	and	w25, w25, w5
  402338:	b	401f60 <ferror@plt+0x2c0>
  40233c:	b.le	40254c <ferror@plt+0x8ac>
  402340:	sub	w20, w20, w25
  402344:	add	x0, x23, w25, sxtw #3
  402348:	str	x0, [sp, #112]
  40234c:	sxtw	x20, w20
  402350:	ldr	x0, [sp, #112]
  402354:	bl	4036b0 <ferror@plt+0x1a10>
  402358:	mov	x23, x0
  40235c:	cbz	x0, 4026a0 <ferror@plt+0xa00>
  402360:	mov	x0, #0x88                  	// #136
  402364:	add	x27, sp, #0x90
  402368:	str	wzr, [sp, #140]
  40236c:	mul	x0, x20, x0
  402370:	bl	406020 <ferror@plt+0x4380>
  402374:	mov	x26, x0
  402378:	cmp	x20, #0x1
  40237c:	b.eq	4024f8 <ferror@plt+0x858>  // b.none
  402380:	adrp	x24, 407000 <_obstack_memory_used@@Base+0x7f8>
  402384:	add	x25, x26, #0x8
  402388:	add	x0, x24, #0x80
  40238c:	mov	x28, #0x0                   	// #0
  402390:	str	x0, [sp, #120]
  402394:	b	4023bc <ferror@plt+0x71c>
  402398:	mov	x2, x25
  40239c:	mov	w1, #0x0                   	// #0
  4023a0:	mov	w0, #0x0                   	// #0
  4023a4:	bl	401bf0 <__fxstat@plt>
  4023a8:	stur	w0, [x25, #-8]
  4023ac:	add	x28, x28, #0x1
  4023b0:	cmp	x28, x20
  4023b4:	add	x25, x25, #0x88
  4023b8:	b.eq	4023ec <ferror@plt+0x74c>  // b.none
  4023bc:	ldr	x0, [sp, #112]
  4023c0:	ldr	x24, [x0, x28, lsl #3]
  4023c4:	cbz	x24, 402398 <ferror@plt+0x6f8>
  4023c8:	ldr	x1, [sp, #120]
  4023cc:	mov	x0, x24
  4023d0:	bl	401b40 <strcmp@plt>
  4023d4:	cbz	w0, 402398 <ferror@plt+0x6f8>
  4023d8:	mov	x1, x24
  4023dc:	mov	x2, x25
  4023e0:	mov	w0, #0x0                   	// #0
  4023e4:	bl	401c70 <__xstat@plt>
  4023e8:	b	4023a8 <ferror@plt+0x708>
  4023ec:	ldr	w0, [x26]
  4023f0:	cmp	w0, #0x0
  4023f4:	b.le	402460 <ferror@plt+0x7c0>
  4023f8:	mov	w0, #0x1                   	// #1
  4023fc:	b	401ea4 <ferror@plt+0x204>
  402400:	mov	x0, x21
  402404:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  402408:	add	x1, x1, #0x88
  40240c:	bl	401990 <fopen@plt>
  402410:	mov	x20, x0
  402414:	cbnz	x0, 401e44 <ferror@plt+0x1a4>
  402418:	stp	d8, d9, [sp, #96]
  40241c:	bl	401c50 <__errno_location@plt>
  402420:	mov	x3, x0
  402424:	mov	w2, #0x5                   	// #5
  402428:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  40242c:	mov	x0, #0x0                   	// #0
  402430:	add	x1, x1, #0x90
  402434:	ldr	w20, [x3]
  402438:	bl	401c00 <dcgettext@plt>
  40243c:	mov	x1, x21
  402440:	mov	x19, x0
  402444:	mov	w0, #0x4                   	// #4
  402448:	bl	405430 <ferror@plt+0x3790>
  40244c:	mov	x2, x19
  402450:	mov	x3, x0
  402454:	mov	w1, w20
  402458:	mov	w0, #0x1                   	// #1
  40245c:	bl	4018e0 <error@plt>
  402460:	mov	x3, #0x88                  	// #136
  402464:	mov	x0, x26
  402468:	mov	x1, #0x0                   	// #0
  40246c:	mov	w4, #0x1                   	// #1
  402470:	madd	x3, x20, x3, x26
  402474:	cmp	x0, x3
  402478:	b.eq	4024b0 <ferror@plt+0x810>  // b.none
  40247c:	ldr	w2, [x0]
  402480:	cbnz	w2, 402498 <ferror@plt+0x7f8>
  402484:	ldr	w2, [x0, #24]
  402488:	and	w2, w2, #0xf000
  40248c:	cmp	w2, #0x8, lsl #12
  402490:	b.eq	4024a0 <ferror@plt+0x800>  // b.none
  402494:	mov	w4, #0x7                   	// #7
  402498:	add	x0, x0, #0x88
  40249c:	b	402474 <ferror@plt+0x7d4>
  4024a0:	ldr	x2, [x0, #56]
  4024a4:	add	x0, x0, #0x88
  4024a8:	add	x1, x1, x2
  4024ac:	b	402474 <ferror@plt+0x7d4>
  4024b0:	mov	w0, #0x1                   	// #1
  4024b4:	mov	x2, #0xa                   	// #10
  4024b8:	b	4024c4 <ferror@plt+0x824>
  4024bc:	udiv	x1, x1, x2
  4024c0:	add	w0, w0, #0x1
  4024c4:	cmp	x1, #0x9
  4024c8:	b.hi	4024bc <ferror@plt+0x81c>  // b.pmore
  4024cc:	cmp	w0, w4
  4024d0:	csel	w0, w0, w4, ge  // ge = tcont
  4024d4:	b	401ea4 <ferror@plt+0x204>
  4024d8:	bl	401c50 <__errno_location@plt>
  4024dc:	mov	x3, x0
  4024e0:	mov	w5, #0x0                   	// #0
  4024e4:	mov	x2, x28
  4024e8:	mov	w1, #0x3                   	// #3
  4024ec:	mov	w0, #0x0                   	// #0
  4024f0:	str	w5, [sp, #120]
  4024f4:	b	402314 <ferror@plt+0x674>
  4024f8:	ldrb	w2, [x19, #8]
  4024fc:	ldrb	w0, [x24, #720]
  402500:	ldrb	w1, [x19, #9]
  402504:	add	w0, w0, w2
  402508:	ldrb	w2, [x19, #10]
  40250c:	add	w0, w0, w1
  402510:	ldrb	w1, [x19, #11]
  402514:	add	w0, w0, w2
  402518:	add	w0, w0, w1
  40251c:	cmp	w0, #0x1
  402520:	b.ne	402380 <ferror@plt+0x6e0>  // b.any
  402524:	str	w20, [x26]
  402528:	b	401ea4 <ferror@plt+0x204>
  40252c:	mov	w4, #0x1                   	// #1
  402530:	mov	x2, x26
  402534:	mov	x3, #0xffffffffffffffff    	// #-1
  402538:	mov	x1, #0x0                   	// #0
  40253c:	strb	w4, [x19, #80]
  402540:	bl	4029d8 <ferror@plt+0xd38>
  402544:	and	w25, w0, #0xff
  402548:	b	401fe4 <ferror@plt+0x344>
  40254c:	add	x0, x19, #0x48
  402550:	mov	x20, #0x1                   	// #1
  402554:	str	x0, [sp, #112]
  402558:	b	402350 <ferror@plt+0x6b0>
  40255c:	stp	d8, d9, [sp, #96]
  402560:	fmov	d9, #5.000000000000000000e-01
  402564:	ldr	d8, [sp, #192]
  402568:	scvtf	d8, d8
  40256c:	bl	403ad8 <ferror@plt+0x1e38>
  402570:	fmul	d0, d0, d9
  402574:	mov	x0, #0x4164000000000000    	// #4711891110136381440
  402578:	fmov	d1, x0
  40257c:	fcmpe	d0, d1
  402580:	b.le	402594 <ferror@plt+0x8f4>
  402584:	fcmpe	d8, d1
  402588:	b.ls	4025a0 <ferror@plt+0x900>  // b.plast
  40258c:	ldp	d8, d9, [sp, #96]
  402590:	b	401e74 <ferror@plt+0x1d4>
  402594:	bl	403ad8 <ferror@plt+0x1e38>
  402598:	fmul	d1, d0, d9
  40259c:	b	402584 <ferror@plt+0x8e4>
  4025a0:	add	x0, sp, #0x110
  4025a4:	bl	405798 <ferror@plt+0x3af8>
  4025a8:	add	x1, sp, #0x110
  4025ac:	mov	x0, x20
  4025b0:	bl	405858 <ferror@plt+0x3bb8>
  4025b4:	ands	w0, w0, #0xff
  4025b8:	str	w0, [sp, #140]
  4025bc:	b.eq	4026a8 <ferror@plt+0xa08>  // b.none
  4025c0:	mov	x0, x20
  4025c4:	bl	4062c0 <ferror@plt+0x4620>
  4025c8:	cbnz	w0, 4026a8 <ferror@plt+0xa08>
  4025cc:	ldp	x20, x0, [sp, #272]
  4025d0:	str	x0, [sp, #112]
  4025d4:	bl	4036b0 <ferror@plt+0x1a10>
  4025d8:	mov	x23, x0
  4025dc:	cbz	x0, 4026a4 <ferror@plt+0xa04>
  4025e0:	cmp	x20, #0x0
  4025e4:	mov	x1, #0x88                  	// #136
  4025e8:	csinc	x0, x20, xzr, ne  // ne = any
  4025ec:	umulh	x2, x0, x1
  4025f0:	mul	x0, x0, x1
  4025f4:	cmp	x2, #0x0
  4025f8:	cset	x1, ne  // ne = any
  4025fc:	tbnz	x0, #63, 4026a4 <ferror@plt+0xa04>
  402600:	cbnz	x1, 4026a4 <ferror@plt+0xa04>
  402604:	bl	406020 <ferror@plt+0x4380>
  402608:	mov	x26, x0
  40260c:	ldp	d8, d9, [sp, #96]
  402610:	cbnz	x20, 402378 <ferror@plt+0x6d8>
  402614:	b	401e94 <ferror@plt+0x1f4>
  402618:	mov	w0, #0x1                   	// #1
  40261c:	stp	d8, d9, [sp, #96]
  402620:	bl	403358 <ferror@plt+0x16b8>
  402624:	mov	w2, #0x5                   	// #5
  402628:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  40262c:	mov	x0, #0x0                   	// #0
  402630:	add	x1, x1, #0x30
  402634:	stp	d8, d9, [sp, #96]
  402638:	bl	401c00 <dcgettext@plt>
  40263c:	ldrsw	x1, [x26, #680]
  402640:	mov	x19, x0
  402644:	mov	w0, #0x4                   	// #4
  402648:	ldr	x1, [x23, x1, lsl #3]
  40264c:	bl	405430 <ferror@plt+0x3790>
  402650:	mov	x3, x0
  402654:	mov	x2, x19
  402658:	mov	w1, #0x0                   	// #0
  40265c:	mov	w0, #0x0                   	// #0
  402660:	bl	4018e0 <error@plt>
  402664:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  402668:	mov	w2, #0x5                   	// #5
  40266c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  402670:	add	x1, x1, #0x48
  402674:	ldr	x19, [x0, #664]
  402678:	mov	x0, #0x0                   	// #0
  40267c:	bl	401c00 <dcgettext@plt>
  402680:	mov	x3, x0
  402684:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  402688:	add	x2, x2, #0x820
  40268c:	mov	w1, #0x1                   	// #1
  402690:	mov	x0, x19
  402694:	bl	401b30 <__fprintf_chk@plt>
  402698:	mov	w0, #0x1                   	// #1
  40269c:	bl	403358 <ferror@plt+0x16b8>
  4026a0:	stp	d8, d9, [sp, #96]
  4026a4:	bl	406278 <ferror@plt+0x45d8>
  4026a8:	mov	w2, #0x5                   	// #5
  4026ac:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  4026b0:	mov	x0, #0x0                   	// #0
  4026b4:	add	x1, x1, #0xb0
  4026b8:	bl	401c00 <dcgettext@plt>
  4026bc:	mov	x19, x0
  4026c0:	mov	x1, x21
  4026c4:	mov	w0, #0x4                   	// #4
  4026c8:	bl	405430 <ferror@plt+0x3790>
  4026cc:	mov	x3, x0
  4026d0:	mov	x2, x19
  4026d4:	mov	w1, #0x0                   	// #0
  4026d8:	mov	w0, #0x1                   	// #1
  4026dc:	bl	4018e0 <error@plt>
  4026e0:	mov	x29, #0x0                   	// #0
  4026e4:	mov	x30, #0x0                   	// #0
  4026e8:	mov	x5, x0
  4026ec:	ldr	x1, [sp]
  4026f0:	add	x2, sp, #0x8
  4026f4:	mov	x6, sp
  4026f8:	movz	x0, #0x0, lsl #48
  4026fc:	movk	x0, #0x0, lsl #32
  402700:	movk	x0, #0x40, lsl #16
  402704:	movk	x0, #0x1cb0
  402708:	movz	x3, #0x0, lsl #48
  40270c:	movk	x3, #0x0, lsl #32
  402710:	movk	x3, #0x40, lsl #16
  402714:	movk	x3, #0x6940
  402718:	movz	x4, #0x0, lsl #48
  40271c:	movk	x4, #0x0, lsl #32
  402720:	movk	x4, #0x40, lsl #16
  402724:	movk	x4, #0x69c0
  402728:	bl	401a00 <__libc_start_main@plt>
  40272c:	bl	401ab0 <abort@plt>
  402730:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x117f8>
  402734:	ldr	x0, [x0, #4064]
  402738:	cbz	x0, 402740 <ferror@plt+0xaa0>
  40273c:	b	401a90 <__gmon_start__@plt>
  402740:	ret
  402744:	nop
  402748:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  40274c:	add	x0, x0, #0x290
  402750:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  402754:	add	x1, x1, #0x290
  402758:	cmp	x1, x0
  40275c:	b.eq	402774 <ferror@plt+0xad4>  // b.none
  402760:	adrp	x1, 406000 <ferror@plt+0x4360>
  402764:	ldr	x1, [x1, #2544]
  402768:	cbz	x1, 402774 <ferror@plt+0xad4>
  40276c:	mov	x16, x1
  402770:	br	x16
  402774:	ret
  402778:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  40277c:	add	x0, x0, #0x290
  402780:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  402784:	add	x1, x1, #0x290
  402788:	sub	x1, x1, x0
  40278c:	lsr	x2, x1, #63
  402790:	add	x1, x2, x1, asr #3
  402794:	cmp	xzr, x1, asr #1
  402798:	asr	x1, x1, #1
  40279c:	b.eq	4027b4 <ferror@plt+0xb14>  // b.none
  4027a0:	adrp	x2, 406000 <ferror@plt+0x4360>
  4027a4:	ldr	x2, [x2, #2552]
  4027a8:	cbz	x2, 4027b4 <ferror@plt+0xb14>
  4027ac:	mov	x16, x2
  4027b0:	br	x16
  4027b4:	ret
  4027b8:	stp	x29, x30, [sp, #-32]!
  4027bc:	mov	x29, sp
  4027c0:	str	x19, [sp, #16]
  4027c4:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x127f8>
  4027c8:	ldrb	w0, [x19, #712]
  4027cc:	cbnz	w0, 4027dc <ferror@plt+0xb3c>
  4027d0:	bl	402748 <ferror@plt+0xaa8>
  4027d4:	mov	w0, #0x1                   	// #1
  4027d8:	strb	w0, [x19, #712]
  4027dc:	ldr	x19, [sp, #16]
  4027e0:	ldp	x29, x30, [sp], #32
  4027e4:	ret
  4027e8:	b	402778 <ferror@plt+0xad8>
  4027ec:	nop
  4027f0:	stp	x29, x30, [sp, #-128]!
  4027f4:	mov	x29, sp
  4027f8:	stp	x19, x20, [sp, #16]
  4027fc:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x127f8>
  402800:	mov	x20, x5
  402804:	ldrb	w6, [x19, #720]
  402808:	add	x19, x19, #0x2d0
  40280c:	stp	x21, x22, [sp, #32]
  402810:	mov	x22, x4
  402814:	stp	x23, x24, [sp, #48]
  402818:	mov	x24, x2
  40281c:	mov	x23, x3
  402820:	stp	x25, x26, [sp, #64]
  402824:	mov	x25, x1
  402828:	cbnz	w6, 402984 <ferror@plt+0xce4>
  40282c:	adrp	x21, 407000 <_obstack_memory_used@@Base+0x7f8>
  402830:	add	x21, x21, #0x1d0
  402834:	add	x26, x21, #0x1
  402838:	ldrb	w0, [x19, #8]
  40283c:	cbnz	w0, 402950 <ferror@plt+0xcb0>
  402840:	ldrb	w0, [x19, #9]
  402844:	cbnz	w0, 402924 <ferror@plt+0xc84>
  402848:	ldrb	w0, [x19, #10]
  40284c:	cbnz	w0, 4028f8 <ferror@plt+0xc58>
  402850:	ldrb	w0, [x19, #11]
  402854:	cbnz	w0, 4028d0 <ferror@plt+0xc30>
  402858:	cbz	x20, 402894 <ferror@plt+0xbf4>
  40285c:	mov	x0, x20
  402860:	mov	w1, #0xa                   	// #10
  402864:	bl	401b90 <strchr@plt>
  402868:	cbz	x0, 402880 <ferror@plt+0xbe0>
  40286c:	mov	x2, x20
  402870:	mov	w1, #0x3                   	// #3
  402874:	mov	w0, #0x0                   	// #0
  402878:	bl	405500 <ferror@plt+0x3860>
  40287c:	mov	x20, x0
  402880:	adrp	x1, 406000 <ferror@plt+0x4360>
  402884:	mov	x2, x20
  402888:	add	x1, x1, #0xa90
  40288c:	mov	w0, #0x1                   	// #1
  402890:	bl	401a20 <__printf_chk@plt>
  402894:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  402898:	ldr	x0, [x0, #688]
  40289c:	ldp	x1, x2, [x0, #40]
  4028a0:	cmp	x1, x2
  4028a4:	b.cs	4029b4 <ferror@plt+0xd14>  // b.hs, b.nlast
  4028a8:	add	x2, x1, #0x1
  4028ac:	str	x2, [x0, #40]
  4028b0:	mov	w0, #0xa                   	// #10
  4028b4:	strb	w0, [x1]
  4028b8:	ldp	x19, x20, [sp, #16]
  4028bc:	ldp	x21, x22, [sp, #32]
  4028c0:	ldp	x23, x24, [sp, #48]
  4028c4:	ldp	x25, x26, [sp, #64]
  4028c8:	ldp	x29, x30, [sp], #128
  4028cc:	ret
  4028d0:	ldr	w19, [x19, #4]
  4028d4:	add	x1, sp, #0x68
  4028d8:	mov	x0, x22
  4028dc:	bl	403958 <ferror@plt+0x1cb8>
  4028e0:	mov	w2, w19
  4028e4:	mov	x3, x0
  4028e8:	mov	x1, x26
  4028ec:	mov	w0, #0x1                   	// #1
  4028f0:	bl	401a20 <__printf_chk@plt>
  4028f4:	b	402858 <ferror@plt+0xbb8>
  4028f8:	ldr	w24, [x19, #4]
  4028fc:	add	x1, sp, #0x68
  402900:	mov	x0, x23
  402904:	bl	403958 <ferror@plt+0x1cb8>
  402908:	mov	x1, x26
  40290c:	mov	x3, x0
  402910:	mov	w2, w24
  402914:	mov	x26, x21
  402918:	mov	w0, #0x1                   	// #1
  40291c:	bl	401a20 <__printf_chk@plt>
  402920:	b	402850 <ferror@plt+0xbb0>
  402924:	ldr	w25, [x19, #4]
  402928:	add	x1, sp, #0x68
  40292c:	mov	x0, x24
  402930:	bl	403958 <ferror@plt+0x1cb8>
  402934:	mov	x1, x26
  402938:	mov	x3, x0
  40293c:	mov	w2, w25
  402940:	mov	x26, x21
  402944:	mov	w0, #0x1                   	// #1
  402948:	bl	401a20 <__printf_chk@plt>
  40294c:	b	402848 <ferror@plt+0xba8>
  402950:	str	x27, [sp, #80]
  402954:	add	x1, sp, #0x68
  402958:	ldr	w27, [x19, #4]
  40295c:	mov	x0, x25
  402960:	bl	403958 <ferror@plt+0x1cb8>
  402964:	mov	x3, x0
  402968:	mov	w2, w27
  40296c:	mov	x1, x26
  402970:	mov	w0, #0x1                   	// #1
  402974:	mov	x26, x21
  402978:	bl	401a20 <__printf_chk@plt>
  40297c:	ldr	x27, [sp, #80]
  402980:	b	402840 <ferror@plt+0xba0>
  402984:	ldr	w26, [x19, #4]
  402988:	add	x1, sp, #0x68
  40298c:	adrp	x21, 407000 <_obstack_memory_used@@Base+0x7f8>
  402990:	bl	403958 <ferror@plt+0x1cb8>
  402994:	add	x21, x21, #0x1d0
  402998:	mov	w2, w26
  40299c:	mov	x3, x0
  4029a0:	add	x1, x21, #0x1
  4029a4:	mov	x26, x21
  4029a8:	mov	w0, #0x1                   	// #1
  4029ac:	bl	401a20 <__printf_chk@plt>
  4029b0:	b	402838 <ferror@plt+0xb98>
  4029b4:	mov	w1, #0xa                   	// #10
  4029b8:	bl	401ae0 <__overflow@plt>
  4029bc:	ldp	x19, x20, [sp, #16]
  4029c0:	ldp	x21, x22, [sp, #32]
  4029c4:	ldp	x23, x24, [sp, #48]
  4029c8:	ldp	x25, x26, [sp, #64]
  4029cc:	ldp	x29, x30, [sp], #128
  4029d0:	ret
  4029d4:	nop
  4029d8:	mov	x12, #0x40c0                	// #16576
  4029dc:	sub	sp, sp, x12
  4029e0:	stp	x29, x30, [sp]
  4029e4:	mov	x29, sp
  4029e8:	stp	x19, x20, [sp, #16]
  4029ec:	mov	x19, x2
  4029f0:	mov	x20, x3
  4029f4:	stp	x21, x22, [sp, #32]
  4029f8:	stp	x23, x24, [sp, #48]
  4029fc:	stp	x25, x26, [sp, #64]
  402a00:	stp	x27, x28, [sp, #80]
  402a04:	str	w0, [sp, #116]
  402a08:	str	x1, [sp, #136]
  402a0c:	str	x1, [sp, #152]
  402a10:	cbz	x1, 402fcc <ferror@plt+0x132c>
  402a14:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x127f8>
  402a18:	add	x25, x21, #0x2d0
  402a1c:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  402a20:	cmp	x0, #0x1
  402a24:	ldrb	w22, [x25, #10]
  402a28:	b.ls	402ce4 <ferror@plt+0x1044>  // b.plast
  402a2c:	ldrb	w0, [x25, #9]
  402a30:	str	w0, [sp, #144]
  402a34:	ldrb	w0, [x25, #8]
  402a38:	cbnz	w0, 402af8 <ferror@plt+0xe58>
  402a3c:	ldrb	w26, [x25, #11]
  402a40:	cbnz	w26, 402af8 <ferror@plt+0xe58>
  402a44:	ldr	w1, [sp, #144]
  402a48:	eor	w0, w22, #0x1
  402a4c:	orr	w0, w0, w1
  402a50:	cbnz	w0, 4031c4 <ferror@plt+0x1524>
  402a54:	ldrb	w0, [x21, #720]
  402a58:	cbnz	w0, 40332c <ferror@plt+0x168c>
  402a5c:	ldr	w0, [x19]
  402a60:	cmp	w0, #0x0
  402a64:	b.gt	402cf4 <ferror@plt+0x1054>
  402a68:	cbnz	w0, 402dbc <ferror@plt+0x111c>
  402a6c:	ldr	w0, [x19, #24]
  402a70:	mov	w1, #0xd000                	// #53248
  402a74:	and	w0, w0, w1
  402a78:	cmp	w0, #0x8, lsl #12
  402a7c:	b.ne	402dbc <ferror@plt+0x111c>  // b.any
  402a80:	ldr	x21, [x19, #56]
  402a84:	tbnz	x21, #63, 402dbc <ferror@plt+0x111c>
  402a88:	cmn	x20, #0x1
  402a8c:	mov	x24, x21
  402a90:	ldr	x22, [x25, #16]
  402a94:	b.eq	403180 <ferror@plt+0x14e0>  // b.none
  402a98:	udiv	x0, x21, x22
  402a9c:	msub	x22, x0, x22, x21
  402aa0:	cbnz	x22, 403168 <ferror@plt+0x14c8>
  402aa4:	mov	w0, #0x1                   	// #1
  402aa8:	mov	x20, #0x0                   	// #0
  402aac:	ldr	w2, [x19, #64]
  402ab0:	mov	x24, #0x201                 	// #513
  402ab4:	add	w1, w2, #0x1
  402ab8:	cmp	w2, #0x0
  402abc:	sxtw	x1, w1
  402ac0:	csel	x1, x1, x24, gt
  402ac4:	cmp	w0, #0x0
  402ac8:	udiv	x24, x21, x1
  402acc:	msub	x24, x24, x1, x21
  402ad0:	sub	x24, x21, x24
  402ad4:	ccmp	x24, x20, #0x4, ne  // ne = any
  402ad8:	b.le	402dbc <ferror@plt+0x111c>
  402adc:	ldr	w0, [sp, #116]
  402ae0:	mov	x1, x24
  402ae4:	mov	w2, #0x1                   	// #1
  402ae8:	bl	401930 <lseek@plt>
  402aec:	tbnz	x0, #63, 402dbc <ferror@plt+0x111c>
  402af0:	sub	x24, x24, x20
  402af4:	b	402dc0 <ferror@plt+0x1120>
  402af8:	ldr	w0, [sp, #116]
  402afc:	mov	w3, #0x2                   	// #2
  402b00:	mov	x2, #0x0                   	// #0
  402b04:	mov	x1, #0x0                   	// #0
  402b08:	bl	403918 <ferror@plt+0x1c78>
  402b0c:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  402b10:	cmp	x0, #0x1
  402b14:	b.ls	402d0c <ferror@plt+0x106c>  // b.plast
  402b18:	add	x21, sp, #0xb8
  402b1c:	mov	x26, #0x0                   	// #0
  402b20:	mov	w5, #0x0                   	// #0
  402b24:	mov	x19, #0x0                   	// #0
  402b28:	mov	w20, #0x0                   	// #0
  402b2c:	mov	x24, #0x0                   	// #0
  402b30:	mov	x27, #0x0                   	// #0
  402b34:	mov	x23, #0x0                   	// #0
  402b38:	mov	x22, #0x0                   	// #0
  402b3c:	str	xzr, [sp, #120]
  402b40:	str	xzr, [sp, #176]
  402b44:	nop
  402b48:	mov	x0, #0x4000                	// #16384
  402b4c:	sub	x2, x0, x26
  402b50:	ldr	w0, [sp, #116]
  402b54:	add	x1, x21, x26
  402b58:	str	w5, [sp, #96]
  402b5c:	bl	405a58 <ferror@plt+0x3db8>
  402b60:	ldr	w5, [sp, #96]
  402b64:	cbz	x0, 402fe8 <ferror@plt+0x1348>
  402b68:	cmn	x0, #0x1
  402b6c:	b.eq	403084 <ferror@plt+0x13e4>  // b.none
  402b70:	add	x24, x24, x0
  402b74:	add	x26, x26, x0
  402b78:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  402b7c:	add	x0, x0, #0x390
  402b80:	str	x0, [sp, #104]
  402b84:	mov	x28, x21
  402b88:	cbnz	w5, 402c04 <ferror@plt+0xf64>
  402b8c:	nop
  402b90:	ldrb	w3, [x28]
  402b94:	ldr	x1, [sp, #104]
  402b98:	ubfx	x0, x3, #5, #3
  402b9c:	ldr	w0, [x1, x0, lsl #2]
  402ba0:	lsr	w0, w0, w3
  402ba4:	and	w7, w0, #0x1
  402ba8:	tbz	w0, #0, 402c04 <ferror@plt+0xf64>
  402bac:	str	w3, [sp, #172]
  402bb0:	cmp	w3, #0xb
  402bb4:	b.eq	402f54 <ferror@plt+0x12b4>  // b.none
  402bb8:	b.hi	402e5c <ferror@plt+0x11bc>  // b.pmore
  402bbc:	cmp	w3, #0x9
  402bc0:	b.eq	402ecc <ferror@plt+0x122c>  // b.none
  402bc4:	cmp	w3, #0xa
  402bc8:	mov	x2, #0x1                   	// #1
  402bcc:	b.ne	402e78 <ferror@plt+0x11d8>  // b.any
  402bd0:	add	x22, x22, #0x1
  402bd4:	ldr	x0, [sp, #120]
  402bd8:	cmp	x0, x19
  402bdc:	csel	x0, x0, x19, cs  // cs = hs, nlast
  402be0:	mov	x19, #0x0                   	// #0
  402be4:	str	x0, [sp, #120]
  402be8:	add	x23, x23, w20, uxtb
  402bec:	mov	w20, #0x0                   	// #0
  402bf0:	add	x28, x28, x2
  402bf4:	sub	x26, x26, x2
  402bf8:	add	x27, x27, #0x1
  402bfc:	cbz	x26, 402b48 <ferror@plt+0xea8>
  402c00:	cbz	w5, 402b90 <ferror@plt+0xef0>
  402c04:	ldr	x4, [sp, #176]
  402c08:	mov	x2, x26
  402c0c:	add	x3, sp, #0xb0
  402c10:	mov	x1, x28
  402c14:	add	x0, sp, #0xac
  402c18:	str	x4, [sp, #96]
  402c1c:	bl	406430 <ferror@plt+0x4790>
  402c20:	mov	x2, x0
  402c24:	cmn	x0, #0x2
  402c28:	b.eq	402f5c <ferror@plt+0x12bc>  // b.none
  402c2c:	cmn	x0, #0x1
  402c30:	b.eq	402eb8 <ferror@plt+0x1218>  // b.none
  402c34:	add	x0, sp, #0xb0
  402c38:	str	x2, [sp, #96]
  402c3c:	bl	401ad0 <mbsinit@plt>
  402c40:	cmp	w0, #0x0
  402c44:	ldr	x2, [sp, #96]
  402c48:	cset	w5, eq  // eq = none
  402c4c:	cbnz	x2, 402e14 <ferror@plt+0x1174>
  402c50:	mov	w3, #0x0                   	// #0
  402c54:	mov	x2, #0x1                   	// #1
  402c58:	str	wzr, [sp, #172]
  402c5c:	mov	w0, w3
  402c60:	str	w5, [sp, #96]
  402c64:	str	x2, [sp, #128]
  402c68:	str	w3, [sp, #148]
  402c6c:	bl	401c30 <iswprint@plt>
  402c70:	ldr	w5, [sp, #96]
  402c74:	ldr	x2, [sp, #128]
  402c78:	cbz	w0, 402bf0 <ferror@plt+0xf50>
  402c7c:	ldrb	w0, [x25, #11]
  402c80:	ldr	w3, [sp, #148]
  402c84:	cbnz	w0, 402fa8 <ferror@plt+0x1308>
  402c88:	ldr	w3, [sp, #172]
  402c8c:	str	w5, [sp, #96]
  402c90:	mov	w0, w3
  402c94:	str	x2, [sp, #128]
  402c98:	str	w3, [sp, #148]
  402c9c:	bl	401970 <iswspace@plt>
  402ca0:	ldr	w5, [sp, #96]
  402ca4:	ldr	x2, [sp, #128]
  402ca8:	cbnz	w0, 402be8 <ferror@plt+0xf48>
  402cac:	ldrb	w0, [x25, #24]
  402cb0:	cbnz	w0, 402fa0 <ferror@plt+0x1300>
  402cb4:	ldr	w3, [sp, #148]
  402cb8:	mov	w0, #0x2007                	// #8199
  402cbc:	cmp	w3, #0xa0
  402cc0:	ccmp	w3, w0, #0x4, ne  // ne = any
  402cc4:	b.eq	402be8 <ferror@plt+0xf48>  // b.none
  402cc8:	mov	w0, #0x202f                	// #8239
  402ccc:	cmp	w3, w0
  402cd0:	mov	w0, #0x2060                	// #8288
  402cd4:	ccmp	w3, w0, #0x4, ne  // ne = any
  402cd8:	b.eq	402be8 <ferror@plt+0xf48>  // b.none
  402cdc:	mov	w20, #0x1                   	// #1
  402ce0:	b	402bf0 <ferror@plt+0xf50>
  402ce4:	cbnz	w22, 402cec <ferror@plt+0x104c>
  402ce8:	ldrb	w22, [x25, #9]
  402cec:	str	wzr, [sp, #144]
  402cf0:	b	402a34 <ferror@plt+0xd94>
  402cf4:	ldr	w1, [sp, #116]
  402cf8:	add	x2, x19, #0x8
  402cfc:	mov	w0, #0x0                   	// #0
  402d00:	bl	401bf0 <__fxstat@plt>
  402d04:	str	w0, [x19]
  402d08:	b	402a68 <ferror@plt+0xdc8>
  402d0c:	add	x21, sp, #0xb8
  402d10:	mov	x23, #0x0                   	// #0
  402d14:	mov	w4, #0x0                   	// #0
  402d18:	mov	x19, #0x0                   	// #0
  402d1c:	mov	x24, #0x0                   	// #0
  402d20:	mov	x20, #0x0                   	// #0
  402d24:	mov	x22, #0x0                   	// #0
  402d28:	mov	w28, #0x2007                	// #8199
  402d2c:	nop
  402d30:	ldr	w0, [sp, #116]
  402d34:	mov	x1, x21
  402d38:	mov	x2, #0x4000                	// #16384
  402d3c:	str	w4, [sp, #96]
  402d40:	bl	405a58 <ferror@plt+0x3db8>
  402d44:	ldr	w4, [sp, #96]
  402d48:	cbz	x0, 4030c0 <ferror@plt+0x1420>
  402d4c:	cmn	x0, #0x1
  402d50:	b.eq	4030d8 <ferror@plt+0x1438>  // b.none
  402d54:	add	x24, x24, x0
  402d58:	add	x1, x21, x0
  402d5c:	mov	x27, x21
  402d60:	b	402d94 <ferror@plt+0x10f4>
  402d64:	cmp	w26, #0x9
  402d68:	b.eq	402ed4 <ferror@plt+0x1234>  // b.none
  402d6c:	cmp	w26, #0xa
  402d70:	b.ne	402ee0 <ferror@plt+0x1240>  // b.any
  402d74:	add	x22, x22, #0x1
  402d78:	cmp	x19, x23
  402d7c:	csel	x19, x19, x23, cs  // cs = hs, nlast
  402d80:	mov	x23, #0x0                   	// #0
  402d84:	add	x20, x20, w4, uxtb
  402d88:	mov	w4, #0x0                   	// #0
  402d8c:	cmp	x1, x27
  402d90:	b.eq	402d30 <ferror@plt+0x1090>  // b.none
  402d94:	ldrb	w26, [x27], #1
  402d98:	cmp	w26, #0xb
  402d9c:	b.eq	402d84 <ferror@plt+0x10e4>  // b.none
  402da0:	b.ls	402d64 <ferror@plt+0x10c4>  // b.plast
  402da4:	cmp	w26, #0xd
  402da8:	b.ls	402d78 <ferror@plt+0x10d8>  // b.plast
  402dac:	cmp	w26, #0x20
  402db0:	b.ne	402ee0 <ferror@plt+0x1240>  // b.any
  402db4:	add	x23, x23, #0x1
  402db8:	b	402d84 <ferror@plt+0x10e4>
  402dbc:	mov	x24, #0x0                   	// #0
  402dc0:	ldr	w0, [sp, #116]
  402dc4:	add	x21, sp, #0xb8
  402dc8:	mov	w3, #0x2                   	// #2
  402dcc:	mov	x2, #0x0                   	// #0
  402dd0:	mov	x1, #0x0                   	// #0
  402dd4:	bl	403918 <ferror@plt+0x1c78>
  402dd8:	b	402de8 <ferror@plt+0x1148>
  402ddc:	cmn	x27, #0x1
  402de0:	b.eq	40311c <ferror@plt+0x147c>  // b.none
  402de4:	add	x24, x24, x27
  402de8:	ldr	w0, [sp, #116]
  402dec:	mov	x1, x21
  402df0:	mov	x2, #0x4000                	// #16384
  402df4:	bl	405a58 <ferror@plt+0x3db8>
  402df8:	mov	x27, x0
  402dfc:	cbnz	x0, 402ddc <ferror@plt+0x113c>
  402e00:	mov	x19, #0x0                   	// #0
  402e04:	mov	x20, #0x0                   	// #0
  402e08:	mov	x22, #0x0                   	// #0
  402e0c:	mov	w26, #0x1                   	// #1
  402e10:	b	403000 <ferror@plt+0x1360>
  402e14:	ldr	w3, [sp, #172]
  402e18:	cmp	w3, #0xb
  402e1c:	b.eq	402be8 <ferror@plt+0xf48>  // b.none
  402e20:	b.hi	402e38 <ferror@plt+0x1198>  // b.pmore
  402e24:	cmp	w3, #0x9
  402e28:	b.ne	402e50 <ferror@plt+0x11b0>  // b.any
  402e2c:	and	x19, x19, #0xfffffffffffffff8
  402e30:	add	x19, x19, #0x8
  402e34:	b	402be8 <ferror@plt+0xf48>
  402e38:	cmp	w3, #0xd
  402e3c:	b.ls	402bd4 <ferror@plt+0xf34>  // b.plast
  402e40:	cmp	w3, #0x20
  402e44:	b.ne	402c5c <ferror@plt+0xfbc>  // b.any
  402e48:	add	x19, x19, #0x1
  402e4c:	b	402be8 <ferror@plt+0xf48>
  402e50:	cmp	w3, #0xa
  402e54:	b.eq	402bd0 <ferror@plt+0xf30>  // b.none
  402e58:	b	402c5c <ferror@plt+0xfbc>
  402e5c:	cmp	w3, #0xd
  402e60:	b.hi	402e6c <ferror@plt+0x11cc>  // b.pmore
  402e64:	mov	x2, #0x1                   	// #1
  402e68:	b	402bd4 <ferror@plt+0xf34>
  402e6c:	cmp	w3, #0x20
  402e70:	mov	x2, #0x1                   	// #1
  402e74:	b.eq	402e48 <ferror@plt+0x11a8>  // b.none
  402e78:	str	w3, [sp, #96]
  402e7c:	str	w5, [sp, #128]
  402e80:	str	w7, [sp, #148]
  402e84:	bl	401b50 <__ctype_b_loc@plt>
  402e88:	ldr	w3, [sp, #96]
  402e8c:	mov	x2, #0x1                   	// #1
  402e90:	ldr	x0, [x0]
  402e94:	ubfiz	x3, x3, #1, #8
  402e98:	ldr	w5, [sp, #128]
  402e9c:	ldrh	w0, [x0, x3]
  402ea0:	tbz	w0, #14, 402bf0 <ferror@plt+0xf50>
  402ea4:	add	x19, x19, x2
  402ea8:	tbnz	w0, #13, 402be8 <ferror@plt+0xf48>
  402eac:	ldr	w7, [sp, #148]
  402eb0:	mov	w20, w7
  402eb4:	b	402bf0 <ferror@plt+0xf50>
  402eb8:	add	x28, x28, #0x1
  402ebc:	sub	x26, x26, #0x1
  402ec0:	mov	w5, #0x1                   	// #1
  402ec4:	cbnz	x26, 402c00 <ferror@plt+0xf60>
  402ec8:	b	402b48 <ferror@plt+0xea8>
  402ecc:	mov	x2, #0x1                   	// #1
  402ed0:	b	402e2c <ferror@plt+0x118c>
  402ed4:	and	x5, x23, #0xfffffffffffffff8
  402ed8:	add	x23, x5, #0x8
  402edc:	b	402d84 <ferror@plt+0x10e4>
  402ee0:	str	x1, [sp, #96]
  402ee4:	str	w4, [sp, #104]
  402ee8:	bl	401b50 <__ctype_b_loc@plt>
  402eec:	ldr	x0, [x0]
  402ef0:	ubfiz	x2, x26, #1, #8
  402ef4:	ldr	w4, [sp, #104]
  402ef8:	ldr	x1, [sp, #96]
  402efc:	ldrh	w0, [x0, x2]
  402f00:	tbz	w0, #14, 402d8c <ferror@plt+0x10ec>
  402f04:	add	x23, x23, #0x1
  402f08:	tbnz	w0, #13, 402d84 <ferror@plt+0x10e4>
  402f0c:	mov	w0, w26
  402f10:	str	w4, [sp, #104]
  402f14:	bl	401aa0 <btowc@plt>
  402f18:	ldrb	w2, [x25, #24]
  402f1c:	ldr	x1, [sp, #96]
  402f20:	mov	w4, w2
  402f24:	cbnz	w2, 402d8c <ferror@plt+0x10ec>
  402f28:	cmp	w0, #0xa0
  402f2c:	ldr	w4, [sp, #104]
  402f30:	ccmp	w0, w28, #0x4, ne  // ne = any
  402f34:	b.eq	402d84 <ferror@plt+0x10e4>  // b.none
  402f38:	mov	w2, #0x202f                	// #8239
  402f3c:	cmp	w0, w2
  402f40:	mov	w2, #0x2060                	// #8288
  402f44:	ccmp	w0, w2, #0x4, ne  // ne = any
  402f48:	b.eq	402d84 <ferror@plt+0x10e4>  // b.none
  402f4c:	mov	w4, #0x1                   	// #1
  402f50:	b	402d8c <ferror@plt+0x10ec>
  402f54:	mov	x2, #0x1                   	// #1
  402f58:	b	402be8 <ferror@plt+0xf48>
  402f5c:	ldr	x0, [sp, #96]
  402f60:	str	x0, [sp, #176]
  402f64:	mov	w5, #0x1                   	// #1
  402f68:	cbz	x26, 402b48 <ferror@plt+0xea8>
  402f6c:	cmp	x26, #0x4, lsl #12
  402f70:	b.ne	402f7c <ferror@plt+0x12dc>  // b.any
  402f74:	add	x28, x28, #0x1
  402f78:	mov	x26, #0x3fff                	// #16383
  402f7c:	mov	w5, #0x1                   	// #1
  402f80:	mov	x1, x28
  402f84:	mov	x2, x26
  402f88:	mov	x0, x21
  402f8c:	mov	x3, #0x4001                	// #16385
  402f90:	str	w5, [sp, #96]
  402f94:	bl	401c80 <__memmove_chk@plt>
  402f98:	ldr	w5, [sp, #96]
  402f9c:	b	402b48 <ferror@plt+0xea8>
  402fa0:	mov	w20, w0
  402fa4:	b	402bf0 <ferror@plt+0xf50>
  402fa8:	mov	w0, w3
  402fac:	str	w5, [sp, #96]
  402fb0:	bl	4019b0 <wcwidth@plt>
  402fb4:	cmp	w0, #0x0
  402fb8:	add	x0, x19, w0, sxtw
  402fbc:	ldr	w5, [sp, #96]
  402fc0:	csel	x19, x0, x19, gt
  402fc4:	ldr	x2, [sp, #128]
  402fc8:	b	402c88 <ferror@plt+0xfe8>
  402fcc:	adrp	x1, 406000 <ferror@plt+0x4360>
  402fd0:	mov	w2, #0x5                   	// #5
  402fd4:	add	x1, x1, #0xa98
  402fd8:	mov	x0, #0x0                   	// #0
  402fdc:	bl	401c00 <dcgettext@plt>
  402fe0:	str	x0, [sp, #152]
  402fe4:	b	402a14 <ferror@plt+0xd74>
  402fe8:	mov	w26, #0x1                   	// #1
  402fec:	ldr	x0, [sp, #120]
  402ff0:	add	x20, x23, w20, uxtb
  402ff4:	cmp	x0, x19
  402ff8:	csel	x19, x0, x19, cs  // cs = hs, nlast
  402ffc:	nop
  403000:	ldrb	w0, [x25, #9]
  403004:	mov	x3, x24
  403008:	ldr	w1, [sp, #144]
  40300c:	mov	x4, x19
  403010:	ldr	x5, [sp, #136]
  403014:	cmp	w0, w1
  403018:	csel	x27, x27, x24, ls  // ls = plast
  40301c:	mov	x1, x20
  403020:	mov	x0, x22
  403024:	mov	x2, x27
  403028:	bl	4027f0 <ferror@plt+0xb50>
  40302c:	ldp	x0, x23, [x25, #32]
  403030:	ldr	x1, [x25, #48]
  403034:	add	x6, x1, x27
  403038:	add	x22, x0, x22
  40303c:	add	x20, x23, x20
  403040:	ldp	x0, x1, [x25, #56]
  403044:	stp	x22, x20, [x25, #32]
  403048:	add	x24, x0, x24
  40304c:	stp	x6, x24, [x25, #48]
  403050:	cmp	x1, x19
  403054:	b.cs	40305c <ferror@plt+0x13bc>  // b.hs, b.nlast
  403058:	str	x19, [x25, #64]
  40305c:	mov	w0, w26
  403060:	mov	x12, #0x40c0                	// #16576
  403064:	ldp	x29, x30, [sp]
  403068:	ldp	x19, x20, [sp, #16]
  40306c:	ldp	x21, x22, [sp, #32]
  403070:	ldp	x23, x24, [sp, #48]
  403074:	ldp	x25, x26, [sp, #64]
  403078:	ldp	x27, x28, [sp, #80]
  40307c:	add	sp, sp, x12
  403080:	ret
  403084:	bl	401c50 <__errno_location@plt>
  403088:	mov	x3, x0
  40308c:	ldr	x2, [sp, #152]
  403090:	mov	w1, #0x3                   	// #3
  403094:	ldr	w21, [x3]
  403098:	mov	w0, #0x0                   	// #0
  40309c:	mov	w26, #0x0                   	// #0
  4030a0:	bl	405500 <ferror@plt+0x3860>
  4030a4:	mov	x3, x0
  4030a8:	mov	w1, w21
  4030ac:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  4030b0:	mov	w0, #0x0                   	// #0
  4030b4:	add	x2, x2, #0x188
  4030b8:	bl	4018e0 <error@plt>
  4030bc:	b	402fec <ferror@plt+0x134c>
  4030c0:	mov	w26, #0x1                   	// #1
  4030c4:	cmp	x19, x23
  4030c8:	add	x20, x20, w4, uxtb
  4030cc:	csel	x19, x19, x23, cs  // cs = hs, nlast
  4030d0:	mov	x27, #0x0                   	// #0
  4030d4:	b	403000 <ferror@plt+0x1360>
  4030d8:	str	w4, [sp, #96]
  4030dc:	bl	401c50 <__errno_location@plt>
  4030e0:	mov	x3, x0
  4030e4:	mov	w1, #0x3                   	// #3
  4030e8:	ldr	x2, [sp, #152]
  4030ec:	mov	w0, #0x0                   	// #0
  4030f0:	ldr	w21, [x3]
  4030f4:	mov	w26, #0x0                   	// #0
  4030f8:	bl	405500 <ferror@plt+0x3860>
  4030fc:	mov	x3, x0
  403100:	mov	w1, w21
  403104:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  403108:	mov	w0, #0x0                   	// #0
  40310c:	add	x2, x2, #0x188
  403110:	bl	4018e0 <error@plt>
  403114:	ldr	w4, [sp, #96]
  403118:	b	4030c4 <ferror@plt+0x1424>
  40311c:	bl	401c50 <__errno_location@plt>
  403120:	mov	x3, x0
  403124:	ldr	x2, [sp, #152]
  403128:	mov	w1, #0x3                   	// #3
  40312c:	ldr	w20, [x3]
  403130:	mov	w0, #0x0                   	// #0
  403134:	mov	x19, #0x0                   	// #0
  403138:	mov	x27, #0x0                   	// #0
  40313c:	bl	405500 <ferror@plt+0x3860>
  403140:	mov	x22, #0x0                   	// #0
  403144:	mov	w1, w20
  403148:	mov	x3, x0
  40314c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  403150:	mov	w0, #0x0                   	// #0
  403154:	add	x2, x2, #0x188
  403158:	mov	x20, #0x0                   	// #0
  40315c:	bl	4018e0 <error@plt>
  403160:	b	403000 <ferror@plt+0x1360>
  403164:	sub	x24, x21, x0
  403168:	mov	x19, #0x0                   	// #0
  40316c:	mov	x27, #0x0                   	// #0
  403170:	mov	x20, #0x0                   	// #0
  403174:	mov	x22, #0x0                   	// #0
  403178:	mov	w26, #0x1                   	// #1
  40317c:	b	403000 <ferror@plt+0x1360>
  403180:	ldr	w0, [sp, #116]
  403184:	mov	x1, #0x0                   	// #0
  403188:	mov	w2, #0x1                   	// #1
  40318c:	bl	401930 <lseek@plt>
  403190:	mov	x20, x0
  403194:	udiv	x1, x21, x22
  403198:	msub	x1, x1, x22, x21
  40319c:	cbz	x1, 403344 <ferror@plt+0x16a4>
  4031a0:	cmp	x0, x21
  4031a4:	b.ls	403164 <ferror@plt+0x14c4>  // b.plast
  4031a8:	mov	x19, #0x0                   	// #0
  4031ac:	mov	x24, #0x0                   	// #0
  4031b0:	mov	x27, #0x0                   	// #0
  4031b4:	mov	x20, #0x0                   	// #0
  4031b8:	mov	x22, #0x0                   	// #0
  4031bc:	mov	w26, #0x1                   	// #1
  4031c0:	b	403000 <ferror@plt+0x1360>
  4031c4:	ldr	w0, [sp, #116]
  4031c8:	mov	w3, #0x2                   	// #2
  4031cc:	mov	x2, #0x0                   	// #0
  4031d0:	mov	x1, #0x0                   	// #0
  4031d4:	bl	403918 <ferror@plt+0x1c78>
  4031d8:	ldr	w0, [sp, #144]
  4031dc:	eor	w0, w0, #0x1
  4031e0:	tst	w22, w0
  4031e4:	b.eq	4032d4 <ferror@plt+0x1634>  // b.none
  4031e8:	ldrb	w0, [x21, #720]
  4031ec:	cbz	w0, 402a5c <ferror@plt+0xdbc>
  4031f0:	mov	x23, #0x8888888888888888    	// #-8608480567731124088
  4031f4:	add	x21, sp, #0xb8
  4031f8:	mov	w20, #0x0                   	// #0
  4031fc:	mov	x24, #0x0                   	// #0
  403200:	mov	x22, #0x0                   	// #0
  403204:	movk	x23, #0x8889
  403208:	ldr	w0, [sp, #116]
  40320c:	mov	x1, x21
  403210:	mov	x2, #0x4000                	// #16384
  403214:	bl	405a58 <ferror@plt+0x3db8>
  403218:	mov	x27, x0
  40321c:	cbz	x0, 40328c <ferror@plt+0x15ec>
  403220:	cmn	x27, #0x1
  403224:	b.eq	4032e0 <ferror@plt+0x1640>  // b.none
  403228:	umulh	x19, x27, x23
  40322c:	add	x24, x24, x27
  403230:	add	x27, x21, x27
  403234:	lsr	x19, x19, #3
  403238:	cbnz	w20, 40329c <ferror@plt+0x15fc>
  40323c:	cmp	x27, x21
  403240:	b.eq	403324 <ferror@plt+0x1684>  // b.none
  403244:	mov	x1, x22
  403248:	mov	x0, x21
  40324c:	nop
  403250:	ldrb	w2, [x0], #1
  403254:	cmp	w2, #0xa
  403258:	cinc	x1, x1, eq  // eq = none
  40325c:	cmp	x27, x0
  403260:	b.ne	403250 <ferror@plt+0x15b0>  // b.any
  403264:	sub	x0, x1, x22
  403268:	mov	x2, #0x4000                	// #16384
  40326c:	cmp	x0, x19
  403270:	ldr	w0, [sp, #116]
  403274:	mov	x22, x1
  403278:	cset	w20, ls  // ls = plast
  40327c:	mov	x1, x21
  403280:	bl	405a58 <ferror@plt+0x3db8>
  403284:	mov	x27, x0
  403288:	cbnz	x0, 403220 <ferror@plt+0x1580>
  40328c:	mov	x19, #0x0                   	// #0
  403290:	mov	x20, #0x0                   	// #0
  403294:	mov	w26, #0x1                   	// #1
  403298:	b	403000 <ferror@plt+0x1360>
  40329c:	mov	x20, x22
  4032a0:	mov	x0, x21
  4032a4:	b	4032b0 <ferror@plt+0x1610>
  4032a8:	add	x0, x0, #0x1
  4032ac:	add	x20, x20, #0x1
  4032b0:	sub	x2, x27, x0
  4032b4:	mov	w1, #0xa                   	// #10
  4032b8:	bl	401bd0 <memchr@plt>
  4032bc:	cbnz	x0, 4032a8 <ferror@plt+0x1608>
  4032c0:	sub	x0, x20, x22
  4032c4:	mov	x22, x20
  4032c8:	cmp	x0, x19
  4032cc:	cset	w20, ls  // ls = plast
  4032d0:	b	403208 <ferror@plt+0x1568>
  4032d4:	ldr	w0, [sp, #144]
  4032d8:	cbz	w0, 4031f0 <ferror@plt+0x1550>
  4032dc:	b	402b0c <ferror@plt+0xe6c>
  4032e0:	bl	401c50 <__errno_location@plt>
  4032e4:	mov	x3, x0
  4032e8:	ldr	x2, [sp, #152]
  4032ec:	mov	w1, #0x3                   	// #3
  4032f0:	ldr	w20, [x3]
  4032f4:	mov	w0, #0x0                   	// #0
  4032f8:	mov	x19, #0x0                   	// #0
  4032fc:	mov	x27, #0x0                   	// #0
  403300:	bl	405500 <ferror@plt+0x3860>
  403304:	mov	x3, x0
  403308:	mov	w1, w20
  40330c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  403310:	mov	w0, #0x0                   	// #0
  403314:	add	x2, x2, #0x188
  403318:	mov	x20, #0x0                   	// #0
  40331c:	bl	4018e0 <error@plt>
  403320:	b	403000 <ferror@plt+0x1360>
  403324:	mov	w20, #0x1                   	// #1
  403328:	b	403208 <ferror@plt+0x1568>
  40332c:	ldr	w0, [sp, #116]
  403330:	mov	w3, #0x2                   	// #2
  403334:	mov	x2, #0x0                   	// #0
  403338:	mov	x1, #0x0                   	// #0
  40333c:	bl	403918 <ferror@plt+0x1c78>
  403340:	b	4031e8 <ferror@plt+0x1548>
  403344:	mvn	x0, x0
  403348:	lsr	x0, x0, #63
  40334c:	and	w0, w0, #0xff
  403350:	b	402aac <ferror@plt+0xe0c>
  403354:	nop
  403358:	stp	x29, x30, [sp, #-176]!
  40335c:	mov	x29, sp
  403360:	stp	x19, x20, [sp, #16]
  403364:	mov	w19, w0
  403368:	stp	x21, x22, [sp, #32]
  40336c:	str	x23, [sp, #48]
  403370:	cbz	w0, 4033b0 <ferror@plt+0x1710>
  403374:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  403378:	mov	w2, #0x5                   	// #5
  40337c:	adrp	x1, 406000 <ferror@plt+0x4360>
  403380:	add	x1, x1, #0xac0
  403384:	ldr	x20, [x0, #664]
  403388:	mov	x0, #0x0                   	// #0
  40338c:	bl	401c00 <dcgettext@plt>
  403390:	mov	x2, x0
  403394:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  403398:	mov	x0, x20
  40339c:	mov	w1, #0x1                   	// #1
  4033a0:	ldr	x3, [x3, #824]
  4033a4:	bl	401b30 <__fprintf_chk@plt>
  4033a8:	mov	w0, w19
  4033ac:	bl	4018d0 <exit@plt>
  4033b0:	mov	w2, #0x5                   	// #5
  4033b4:	adrp	x1, 406000 <ferror@plt+0x4360>
  4033b8:	mov	x0, #0x0                   	// #0
  4033bc:	add	x1, x1, #0xae8
  4033c0:	bl	401c00 <dcgettext@plt>
  4033c4:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x127f8>
  4033c8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x127f8>
  4033cc:	mov	x1, x0
  4033d0:	mov	w0, #0x1                   	// #1
  4033d4:	ldr	x3, [x2, #824]
  4033d8:	mov	x2, x3
  4033dc:	bl	401a20 <__printf_chk@plt>
  4033e0:	mov	w2, #0x5                   	// #5
  4033e4:	adrp	x1, 406000 <ferror@plt+0x4360>
  4033e8:	mov	x0, #0x0                   	// #0
  4033ec:	add	x1, x1, #0xb30
  4033f0:	bl	401c00 <dcgettext@plt>
  4033f4:	ldr	x1, [x20, #688]
  4033f8:	bl	401c10 <fputs_unlocked@plt>
  4033fc:	mov	w2, #0x5                   	// #5
  403400:	adrp	x1, 406000 <ferror@plt+0x4360>
  403404:	mov	x0, #0x0                   	// #0
  403408:	add	x1, x1, #0xbe8
  40340c:	bl	401c00 <dcgettext@plt>
  403410:	ldr	x1, [x20, #688]
  403414:	bl	401c10 <fputs_unlocked@plt>
  403418:	mov	w2, #0x5                   	// #5
  40341c:	adrp	x1, 406000 <ferror@plt+0x4360>
  403420:	mov	x0, #0x0                   	// #0
  403424:	add	x1, x1, #0xc20
  403428:	bl	401c00 <dcgettext@plt>
  40342c:	ldr	x1, [x20, #688]
  403430:	bl	401c10 <fputs_unlocked@plt>
  403434:	mov	w2, #0x5                   	// #5
  403438:	adrp	x1, 406000 <ferror@plt+0x4360>
  40343c:	mov	x0, #0x0                   	// #0
  403440:	add	x1, x1, #0xd50
  403444:	bl	401c00 <dcgettext@plt>
  403448:	ldr	x1, [x20, #688]
  40344c:	bl	401c10 <fputs_unlocked@plt>
  403450:	mov	w2, #0x5                   	// #5
  403454:	adrp	x1, 406000 <ferror@plt+0x4360>
  403458:	mov	x0, #0x0                   	// #0
  40345c:	add	x1, x1, #0xe80
  403460:	bl	401c00 <dcgettext@plt>
  403464:	ldr	x1, [x20, #688]
  403468:	bl	401c10 <fputs_unlocked@plt>
  40346c:	mov	w2, #0x5                   	// #5
  403470:	adrp	x1, 406000 <ferror@plt+0x4360>
  403474:	mov	x0, #0x0                   	// #0
  403478:	add	x1, x1, #0xeb0
  40347c:	bl	401c00 <dcgettext@plt>
  403480:	ldr	x1, [x20, #688]
  403484:	bl	401c10 <fputs_unlocked@plt>
  403488:	adrp	x3, 407000 <_obstack_memory_used@@Base+0x7f8>
  40348c:	add	x3, x3, #0x1d0
  403490:	add	x0, x3, #0x8
  403494:	add	x2, sp, #0x40
  403498:	ldp	x4, x5, [x3, #24]
  40349c:	stp	x4, x5, [sp, #80]
  4034a0:	ldp	x4, x5, [x0, #32]
  4034a4:	stp	x4, x5, [sp, #96]
  4034a8:	ldp	x1, x3, [x3, #8]
  4034ac:	stp	x1, x3, [sp, #64]
  4034b0:	ldp	x4, x5, [x0, #48]
  4034b4:	stp	x4, x5, [sp, #112]
  4034b8:	ldp	x4, x5, [x0, #64]
  4034bc:	stp	x4, x5, [sp, #128]
  4034c0:	ldp	x4, x5, [x0, #80]
  4034c4:	stp	x4, x5, [sp, #144]
  4034c8:	ldp	x4, x5, [x0, #96]
  4034cc:	stp	x4, x5, [sp, #160]
  4034d0:	cbz	x1, 403508 <ferror@plt+0x1868>
  4034d4:	mov	w4, #0x77                  	// #119
  4034d8:	mov	w3, #0x63                  	// #99
  4034dc:	b	4034e8 <ferror@plt+0x1848>
  4034e0:	ldr	x1, [x2, #16]!
  4034e4:	cbz	x1, 403508 <ferror@plt+0x1868>
  4034e8:	ldrb	w0, [x1]
  4034ec:	cmp	w4, w0
  4034f0:	b.ne	4034e0 <ferror@plt+0x1840>  // b.any
  4034f4:	ldrb	w0, [x1, #1]
  4034f8:	cmp	w3, w0
  4034fc:	b.ne	4034e0 <ferror@plt+0x1840>  // b.any
  403500:	ldrb	w0, [x1, #2]
  403504:	cbnz	w0, 4034e0 <ferror@plt+0x1840>
  403508:	ldr	x21, [x2, #8]
  40350c:	adrp	x1, 406000 <ferror@plt+0x4360>
  403510:	mov	x0, #0x0                   	// #0
  403514:	add	x1, x1, #0xee8
  403518:	mov	w2, #0x5                   	// #5
  40351c:	cbz	x21, 4035d8 <ferror@plt+0x1938>
  403520:	bl	401c00 <dcgettext@plt>
  403524:	adrp	x22, 406000 <ferror@plt+0x4360>
  403528:	add	x22, x22, #0xf00
  40352c:	adrp	x2, 406000 <ferror@plt+0x4360>
  403530:	mov	x3, x22
  403534:	add	x2, x2, #0xf28
  403538:	mov	x1, x0
  40353c:	mov	w0, #0x1                   	// #1
  403540:	bl	401a20 <__printf_chk@plt>
  403544:	mov	x1, #0x0                   	// #0
  403548:	mov	w0, #0x5                   	// #5
  40354c:	bl	401c90 <setlocale@plt>
  403550:	cbz	x0, 4036a0 <ferror@plt+0x1a00>
  403554:	adrp	x1, 406000 <ferror@plt+0x4360>
  403558:	mov	x2, #0x3                   	// #3
  40355c:	add	x1, x1, #0xf38
  403560:	adrp	x23, 406000 <ferror@plt+0x4360>
  403564:	bl	4019e0 <strncmp@plt>
  403568:	add	x23, x23, #0xaa8
  40356c:	cbnz	w0, 403680 <ferror@plt+0x19e0>
  403570:	mov	w2, #0x5                   	// #5
  403574:	adrp	x1, 406000 <ferror@plt+0x4360>
  403578:	mov	x0, #0x0                   	// #0
  40357c:	add	x1, x1, #0xf88
  403580:	bl	401c00 <dcgettext@plt>
  403584:	mov	x1, x0
  403588:	mov	x3, x23
  40358c:	mov	x2, x22
  403590:	mov	w0, #0x1                   	// #1
  403594:	bl	401a20 <__printf_chk@plt>
  403598:	mov	w2, #0x5                   	// #5
  40359c:	adrp	x1, 406000 <ferror@plt+0x4360>
  4035a0:	mov	x0, #0x0                   	// #0
  4035a4:	add	x1, x1, #0xfa8
  4035a8:	bl	401c00 <dcgettext@plt>
  4035ac:	mov	x1, x0
  4035b0:	cmp	x21, x23
  4035b4:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  4035b8:	adrp	x3, 406000 <ferror@plt+0x4360>
  4035bc:	add	x2, x2, #0xb20
  4035c0:	add	x3, x3, #0xab0
  4035c4:	csel	x3, x3, x2, eq  // eq = none
  4035c8:	mov	x2, x21
  4035cc:	mov	w0, #0x1                   	// #1
  4035d0:	bl	401a20 <__printf_chk@plt>
  4035d4:	b	4033a8 <ferror@plt+0x1708>
  4035d8:	bl	401c00 <dcgettext@plt>
  4035dc:	adrp	x22, 406000 <ferror@plt+0x4360>
  4035e0:	add	x22, x22, #0xf00
  4035e4:	adrp	x2, 406000 <ferror@plt+0x4360>
  4035e8:	mov	x3, x22
  4035ec:	add	x2, x2, #0xf28
  4035f0:	mov	x1, x0
  4035f4:	mov	w0, #0x1                   	// #1
  4035f8:	bl	401a20 <__printf_chk@plt>
  4035fc:	mov	x1, #0x0                   	// #0
  403600:	mov	w0, #0x5                   	// #5
  403604:	bl	401c90 <setlocale@plt>
  403608:	cbz	x0, 403620 <ferror@plt+0x1980>
  40360c:	adrp	x1, 406000 <ferror@plt+0x4360>
  403610:	mov	x2, #0x3                   	// #3
  403614:	add	x1, x1, #0xf38
  403618:	bl	4019e0 <strncmp@plt>
  40361c:	cbnz	w0, 403674 <ferror@plt+0x19d4>
  403620:	mov	w2, #0x5                   	// #5
  403624:	adrp	x1, 406000 <ferror@plt+0x4360>
  403628:	mov	x0, #0x0                   	// #0
  40362c:	add	x1, x1, #0xf88
  403630:	adrp	x21, 406000 <ferror@plt+0x4360>
  403634:	bl	401c00 <dcgettext@plt>
  403638:	add	x21, x21, #0xaa8
  40363c:	mov	x1, x0
  403640:	mov	x3, x21
  403644:	mov	x2, x22
  403648:	mov	w0, #0x1                   	// #1
  40364c:	bl	401a20 <__printf_chk@plt>
  403650:	adrp	x1, 406000 <ferror@plt+0x4360>
  403654:	mov	w2, #0x5                   	// #5
  403658:	add	x1, x1, #0xfa8
  40365c:	mov	x0, #0x0                   	// #0
  403660:	bl	401c00 <dcgettext@plt>
  403664:	mov	x1, x0
  403668:	adrp	x3, 406000 <ferror@plt+0x4360>
  40366c:	add	x3, x3, #0xab0
  403670:	b	4035c8 <ferror@plt+0x1928>
  403674:	adrp	x23, 406000 <ferror@plt+0x4360>
  403678:	add	x23, x23, #0xaa8
  40367c:	mov	x21, x23
  403680:	mov	w2, #0x5                   	// #5
  403684:	adrp	x1, 406000 <ferror@plt+0x4360>
  403688:	mov	x0, #0x0                   	// #0
  40368c:	add	x1, x1, #0xf40
  403690:	bl	401c00 <dcgettext@plt>
  403694:	ldr	x1, [x20, #688]
  403698:	bl	401c10 <fputs_unlocked@plt>
  40369c:	b	403570 <ferror@plt+0x18d0>
  4036a0:	adrp	x23, 406000 <ferror@plt+0x4360>
  4036a4:	add	x23, x23, #0xaa8
  4036a8:	b	403570 <ferror@plt+0x18d0>
  4036ac:	nop
  4036b0:	stp	x29, x30, [sp, #-32]!
  4036b4:	mov	x29, sp
  4036b8:	str	x19, [sp, #16]
  4036bc:	mov	x19, x0
  4036c0:	mov	x0, #0x30                  	// #48
  4036c4:	bl	4019a0 <malloc@plt>
  4036c8:	cbz	x0, 4036d4 <ferror@plt+0x1a34>
  4036cc:	str	xzr, [x0]
  4036d0:	stp	x19, x19, [x0, #32]
  4036d4:	ldr	x19, [sp, #16]
  4036d8:	ldp	x29, x30, [sp], #32
  4036dc:	ret
  4036e0:	stp	x29, x30, [sp, #-32]!
  4036e4:	mov	x29, sp
  4036e8:	str	x19, [sp, #16]
  4036ec:	mov	x19, x0
  4036f0:	mov	x0, #0x30                  	// #48
  4036f4:	bl	4019a0 <malloc@plt>
  4036f8:	cbz	x0, 403708 <ferror@plt+0x1a68>
  4036fc:	stp	x19, xzr, [x0]
  403700:	stp	xzr, xzr, [x0, #16]
  403704:	str	xzr, [x0, #32]
  403708:	ldr	x19, [sp, #16]
  40370c:	ldp	x29, x30, [sp], #32
  403710:	ret
  403714:	nop
  403718:	stp	x29, x30, [sp, #-32]!
  40371c:	mov	x29, sp
  403720:	ldr	x3, [x0]
  403724:	stp	x19, x20, [sp, #16]
  403728:	mov	x19, x0
  40372c:	mov	x20, x1
  403730:	cbz	x3, 40376c <ferror@plt+0x1acc>
  403734:	add	x1, x0, #0x18
  403738:	mov	w2, #0x0                   	// #0
  40373c:	add	x0, x0, #0x10
  403740:	bl	4019c0 <getdelim@plt>
  403744:	tbnz	x0, #63, 403794 <ferror@plt+0x1af4>
  403748:	ldr	x0, [x19, #8]
  40374c:	mov	w1, #0x1                   	// #1
  403750:	str	w1, [x20]
  403754:	add	x0, x0, #0x1
  403758:	str	x0, [x19, #8]
  40375c:	ldr	x0, [x19, #16]
  403760:	ldp	x19, x20, [sp, #16]
  403764:	ldp	x29, x30, [sp], #32
  403768:	ret
  40376c:	ldr	x1, [x0, #40]
  403770:	ldr	x0, [x1]
  403774:	cbz	x0, 4037b8 <ferror@plt+0x1b18>
  403778:	mov	w2, #0x1                   	// #1
  40377c:	str	w2, [x20]
  403780:	add	x1, x1, #0x8
  403784:	str	x1, [x19, #40]
  403788:	ldp	x19, x20, [sp, #16]
  40378c:	ldp	x29, x30, [sp], #32
  403790:	ret
  403794:	ldr	x0, [x19]
  403798:	bl	401af0 <feof@plt>
  40379c:	cmp	w0, #0x0
  4037a0:	mov	w1, #0x2                   	// #2
  4037a4:	mov	w2, #0x4                   	// #4
  4037a8:	mov	x0, #0x0                   	// #0
  4037ac:	csel	w1, w1, w2, ne  // ne = any
  4037b0:	str	w1, [x20]
  4037b4:	b	403760 <ferror@plt+0x1ac0>
  4037b8:	mov	w1, #0x2                   	// #2
  4037bc:	str	w1, [x20]
  4037c0:	b	403760 <ferror@plt+0x1ac0>
  4037c4:	nop
  4037c8:	ldr	x1, [x0]
  4037cc:	cbz	x1, 4037d8 <ferror@plt+0x1b38>
  4037d0:	ldr	x0, [x0, #8]
  4037d4:	ret
  4037d8:	ldp	x1, x0, [x0, #32]
  4037dc:	sub	x0, x0, x1
  4037e0:	asr	x0, x0, #3
  4037e4:	ret
  4037e8:	stp	x29, x30, [sp, #-32]!
  4037ec:	mov	x29, sp
  4037f0:	str	x19, [sp, #16]
  4037f4:	mov	x19, x0
  4037f8:	ldr	x0, [x0]
  4037fc:	cbz	x0, 403808 <ferror@plt+0x1b68>
  403800:	ldr	x0, [x19, #16]
  403804:	bl	401b70 <free@plt>
  403808:	mov	x0, x19
  40380c:	ldr	x19, [sp, #16]
  403810:	ldp	x29, x30, [sp], #32
  403814:	b	401b70 <free@plt>
  403818:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  40381c:	str	x0, [x1, #808]
  403820:	ret
  403824:	nop
  403828:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  40382c:	strb	w0, [x1, #816]
  403830:	ret
  403834:	nop
  403838:	stp	x29, x30, [sp, #-48]!
  40383c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  403840:	mov	x29, sp
  403844:	ldr	x0, [x0, #688]
  403848:	bl	406830 <_obstack_memory_used@@Base+0x28>
  40384c:	cbz	w0, 403884 <ferror@plt+0x1be4>
  403850:	stp	x19, x20, [sp, #16]
  403854:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x127f8>
  403858:	add	x0, x20, #0x328
  40385c:	str	x21, [sp, #32]
  403860:	ldrb	w21, [x0, #8]
  403864:	bl	401c50 <__errno_location@plt>
  403868:	mov	x19, x0
  40386c:	cbz	w21, 40389c <ferror@plt+0x1bfc>
  403870:	ldr	w0, [x0]
  403874:	cmp	w0, #0x20
  403878:	b.ne	40389c <ferror@plt+0x1bfc>  // b.any
  40387c:	ldp	x19, x20, [sp, #16]
  403880:	ldr	x21, [sp, #32]
  403884:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  403888:	ldr	x0, [x0, #664]
  40388c:	bl	406830 <_obstack_memory_used@@Base+0x28>
  403890:	cbnz	w0, 4038f0 <ferror@plt+0x1c50>
  403894:	ldp	x29, x30, [sp], #48
  403898:	ret
  40389c:	mov	w2, #0x5                   	// #5
  4038a0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  4038a4:	mov	x0, #0x0                   	// #0
  4038a8:	add	x1, x1, #0x378
  4038ac:	bl	401c00 <dcgettext@plt>
  4038b0:	ldr	x2, [x20, #808]
  4038b4:	mov	x20, x0
  4038b8:	cbz	x2, 4038fc <ferror@plt+0x1c5c>
  4038bc:	ldr	w19, [x19]
  4038c0:	mov	x0, x2
  4038c4:	bl	4054e8 <ferror@plt+0x3848>
  4038c8:	mov	x3, x0
  4038cc:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  4038d0:	mov	w1, w19
  4038d4:	mov	x4, x20
  4038d8:	add	x2, x2, #0x388
  4038dc:	mov	w0, #0x0                   	// #0
  4038e0:	bl	4018e0 <error@plt>
  4038e4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  4038e8:	ldr	w0, [x0, #552]
  4038ec:	bl	4018b0 <_exit@plt>
  4038f0:	stp	x19, x20, [sp, #16]
  4038f4:	str	x21, [sp, #32]
  4038f8:	b	4038e4 <ferror@plt+0x1c44>
  4038fc:	ldr	w1, [x19]
  403900:	mov	x3, x0
  403904:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  403908:	mov	w0, #0x0                   	// #0
  40390c:	add	x2, x2, #0x188
  403910:	bl	4018e0 <error@plt>
  403914:	b	4038e4 <ferror@plt+0x1c44>
  403918:	b	401ac0 <posix_fadvise@plt>
  40391c:	nop
  403920:	cbz	x0, 403950 <ferror@plt+0x1cb0>
  403924:	stp	x29, x30, [sp, #-32]!
  403928:	mov	x29, sp
  40392c:	str	x19, [sp, #16]
  403930:	mov	w19, w1
  403934:	bl	401950 <fileno@plt>
  403938:	mov	w3, w19
  40393c:	mov	x2, #0x0                   	// #0
  403940:	ldr	x19, [sp, #16]
  403944:	mov	x1, #0x0                   	// #0
  403948:	ldp	x29, x30, [sp], #32
  40394c:	b	401ac0 <posix_fadvise@plt>
  403950:	ret
  403954:	nop
  403958:	mov	x3, x0
  40395c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  403960:	add	x0, x1, #0x14
  403964:	movk	x4, #0xcccd
  403968:	strb	wzr, [x1, #20]
  40396c:	nop
  403970:	umulh	x2, x3, x4
  403974:	cmp	x3, #0x9
  403978:	lsr	x2, x2, #3
  40397c:	add	x1, x2, x2, lsl #2
  403980:	sub	x1, x3, x1, lsl #1
  403984:	mov	x3, x2
  403988:	add	w1, w1, #0x30
  40398c:	strb	w1, [x0, #-1]!
  403990:	b.hi	403970 <ferror@plt+0x1cd0>  // b.pmore
  403994:	ret
  403998:	stp	x29, x30, [sp, #-32]!
  40399c:	mov	x29, sp
  4039a0:	str	x19, [sp, #16]
  4039a4:	mov	w19, w0
  4039a8:	bl	4019b0 <wcwidth@plt>
  4039ac:	tbz	w0, #31, 4039c0 <ferror@plt+0x1d20>
  4039b0:	mov	w0, w19
  4039b4:	bl	401910 <iswcntrl@plt>
  4039b8:	cmp	w0, #0x0
  4039bc:	cset	w0, eq  // eq = none
  4039c0:	ldr	x19, [sp, #16]
  4039c4:	ldp	x29, x30, [sp], #32
  4039c8:	ret
  4039cc:	nop
  4039d0:	stp	x29, x30, [sp, #-32]!
  4039d4:	mov	x29, sp
  4039d8:	stp	x19, x20, [sp, #16]
  4039dc:	mov	x20, x0
  4039e0:	mov	x0, x1
  4039e4:	mov	x19, x1
  4039e8:	ldr	x2, [x1, #8]
  4039ec:	ldr	x1, [x0], #24
  4039f0:	cmp	x1, x0
  4039f4:	b.eq	403a20 <ferror@plt+0x1d80>  // b.none
  4039f8:	str	x1, [x20]
  4039fc:	ldrb	w0, [x19, #16]
  403a00:	str	x2, [x20, #8]
  403a04:	strb	w0, [x20, #16]
  403a08:	cbz	w0, 403a14 <ferror@plt+0x1d74>
  403a0c:	ldr	w0, [x19, #20]
  403a10:	str	w0, [x20, #20]
  403a14:	ldp	x19, x20, [sp, #16]
  403a18:	ldp	x29, x30, [sp], #32
  403a1c:	ret
  403a20:	add	x3, x20, #0x18
  403a24:	mov	x0, x3
  403a28:	bl	4018a0 <memcpy@plt>
  403a2c:	ldr	x2, [x19, #8]
  403a30:	str	x0, [x20]
  403a34:	b	4039fc <ferror@plt+0x1d5c>
  403a38:	ubfx	x2, x0, #5, #3
  403a3c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  403a40:	add	x1, x1, #0x390
  403a44:	ldr	w1, [x1, x2, lsl #2]
  403a48:	lsr	w0, w1, w0
  403a4c:	and	w0, w0, #0x1
  403a50:	ret
  403a54:	nop
  403a58:	stp	x29, x30, [sp, #-144]!
  403a5c:	mov	w0, #0x55                  	// #85
  403a60:	mov	x29, sp
  403a64:	str	d8, [sp, #16]
  403a68:	bl	401be0 <sysconf@plt>
  403a6c:	mov	x1, x0
  403a70:	mov	w0, #0x1e                  	// #30
  403a74:	scvtf	d8, x1
  403a78:	bl	401be0 <sysconf@plt>
  403a7c:	fcmpe	d8, #0.0
  403a80:	b.lt	403a94 <ferror@plt+0x1df4>  // b.tstop
  403a84:	fmov	d0, x0
  403a88:	scvtf	d0, d0
  403a8c:	fcmpe	d0, #0.0
  403a90:	b.ge	403ac4 <ferror@plt+0x1e24>  // b.tcont
  403a94:	add	x0, sp, #0x20
  403a98:	bl	4018f0 <sysinfo@plt>
  403a9c:	mov	x1, #0x4190000000000000    	// #4724276009111650304
  403aa0:	fmov	d0, x1
  403aa4:	cbz	w0, 403ab4 <ferror@plt+0x1e14>
  403aa8:	ldr	d8, [sp, #16]
  403aac:	ldp	x29, x30, [sp], #144
  403ab0:	ret
  403ab4:	ldr	d0, [sp, #64]
  403ab8:	ldr	w0, [sp, #136]
  403abc:	ucvtf	d0, d0
  403ac0:	ucvtf	d8, w0
  403ac4:	fmul	d0, d0, d8
  403ac8:	ldr	d8, [sp, #16]
  403acc:	ldp	x29, x30, [sp], #144
  403ad0:	ret
  403ad4:	nop
  403ad8:	stp	x29, x30, [sp, #-144]!
  403adc:	mov	w0, #0x56                  	// #86
  403ae0:	mov	x29, sp
  403ae4:	str	d8, [sp, #16]
  403ae8:	bl	401be0 <sysconf@plt>
  403aec:	mov	x1, x0
  403af0:	mov	w0, #0x1e                  	// #30
  403af4:	scvtf	d8, x1
  403af8:	bl	401be0 <sysconf@plt>
  403afc:	fcmpe	d8, #0.0
  403b00:	b.lt	403b14 <ferror@plt+0x1e74>  // b.tstop
  403b04:	fmov	d0, x0
  403b08:	scvtf	d0, d0
  403b0c:	fcmpe	d0, #0.0
  403b10:	b.ge	403b54 <ferror@plt+0x1eb4>  // b.tcont
  403b14:	add	x0, sp, #0x20
  403b18:	bl	4018f0 <sysinfo@plt>
  403b1c:	cbnz	w0, 403b4c <ferror@plt+0x1eac>
  403b20:	ldr	d0, [sp, #72]
  403b24:	ldr	d1, [sp, #88]
  403b28:	ucvtf	d0, d0
  403b2c:	ldr	w0, [sp, #136]
  403b30:	ucvtf	d1, d1
  403b34:	ucvtf	d8, w0
  403b38:	fadd	d0, d0, d1
  403b3c:	fmul	d0, d0, d8
  403b40:	ldr	d8, [sp, #16]
  403b44:	ldp	x29, x30, [sp], #144
  403b48:	ret
  403b4c:	bl	403a58 <ferror@plt+0x1db8>
  403b50:	fmov	d8, #2.500000000000000000e-01
  403b54:	fmul	d0, d0, d8
  403b58:	ldr	d8, [sp, #16]
  403b5c:	ldp	x29, x30, [sp], #144
  403b60:	ret
  403b64:	nop
  403b68:	stp	x29, x30, [sp, #-48]!
  403b6c:	mov	x29, sp
  403b70:	stp	x19, x20, [sp, #16]
  403b74:	cbz	x0, 403c4c <ferror@plt+0x1fac>
  403b78:	mov	x19, x0
  403b7c:	mov	w1, #0x2f                  	// #47
  403b80:	bl	401a80 <strrchr@plt>
  403b84:	mov	x20, x0
  403b88:	cbz	x0, 403bec <ferror@plt+0x1f4c>
  403b8c:	str	x21, [sp, #32]
  403b90:	add	x21, x0, #0x1
  403b94:	sub	x0, x21, x19
  403b98:	cmp	x0, #0x6
  403b9c:	b.le	403c08 <ferror@plt+0x1f68>
  403ba0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  403ba4:	sub	x0, x20, #0x6
  403ba8:	add	x1, x1, #0x3e8
  403bac:	mov	x2, #0x7                   	// #7
  403bb0:	bl	4019e0 <strncmp@plt>
  403bb4:	cbnz	w0, 403c08 <ferror@plt+0x1f68>
  403bb8:	ldrb	w0, [x20, #1]
  403bbc:	cmp	w0, #0x6c
  403bc0:	b.ne	403c28 <ferror@plt+0x1f88>  // b.any
  403bc4:	ldrb	w0, [x21, #1]
  403bc8:	cmp	w0, #0x74
  403bcc:	b.ne	403c28 <ferror@plt+0x1f88>  // b.any
  403bd0:	ldrb	w0, [x21, #2]
  403bd4:	cmp	w0, #0x2d
  403bd8:	b.ne	403c28 <ferror@plt+0x1f88>  // b.any
  403bdc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  403be0:	add	x19, x20, #0x4
  403be4:	ldr	x21, [sp, #32]
  403be8:	str	x19, [x0, #704]
  403bec:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  403bf0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  403bf4:	str	x19, [x1, #824]
  403bf8:	str	x19, [x0, #656]
  403bfc:	ldp	x19, x20, [sp, #16]
  403c00:	ldp	x29, x30, [sp], #48
  403c04:	ret
  403c08:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  403c0c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  403c10:	ldr	x21, [sp, #32]
  403c14:	str	x19, [x1, #824]
  403c18:	str	x19, [x0, #656]
  403c1c:	ldp	x19, x20, [sp, #16]
  403c20:	ldp	x29, x30, [sp], #48
  403c24:	ret
  403c28:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  403c2c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  403c30:	mov	x19, x21
  403c34:	str	x19, [x1, #824]
  403c38:	str	x19, [x0, #656]
  403c3c:	ldp	x19, x20, [sp, #16]
  403c40:	ldr	x21, [sp, #32]
  403c44:	ldp	x29, x30, [sp], #48
  403c48:	ret
  403c4c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  403c50:	mov	x2, #0x37                  	// #55
  403c54:	mov	x1, #0x1                   	// #1
  403c58:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  403c5c:	ldr	x3, [x3, #664]
  403c60:	add	x0, x0, #0x3b0
  403c64:	str	x21, [sp, #32]
  403c68:	bl	401ba0 <fwrite@plt>
  403c6c:	bl	401ab0 <abort@plt>
  403c70:	stp	xzr, xzr, [x8]
  403c74:	cmp	w0, #0xa
  403c78:	stp	xzr, xzr, [x8, #16]
  403c7c:	stp	xzr, xzr, [x8, #32]
  403c80:	str	xzr, [x8, #48]
  403c84:	b.eq	403c90 <ferror@plt+0x1ff0>  // b.none
  403c88:	str	w0, [x8]
  403c8c:	ret
  403c90:	stp	x29, x30, [sp, #-16]!
  403c94:	mov	x29, sp
  403c98:	bl	401ab0 <abort@plt>
  403c9c:	nop
  403ca0:	stp	x29, x30, [sp, #-48]!
  403ca4:	mov	w2, #0x5                   	// #5
  403ca8:	mov	x29, sp
  403cac:	stp	x19, x20, [sp, #16]
  403cb0:	mov	x20, x0
  403cb4:	str	x21, [sp, #32]
  403cb8:	mov	w21, w1
  403cbc:	mov	x1, x0
  403cc0:	mov	x0, #0x0                   	// #0
  403cc4:	bl	401c00 <dcgettext@plt>
  403cc8:	mov	x19, x0
  403ccc:	cmp	x20, x0
  403cd0:	b.eq	403ce8 <ferror@plt+0x2048>  // b.none
  403cd4:	mov	x0, x19
  403cd8:	ldp	x19, x20, [sp, #16]
  403cdc:	ldr	x21, [sp, #32]
  403ce0:	ldp	x29, x30, [sp], #48
  403ce4:	ret
  403ce8:	bl	406900 <_obstack_memory_used@@Base+0xf8>
  403cec:	ldrb	w1, [x0]
  403cf0:	and	w1, w1, #0xffffffdf
  403cf4:	cmp	w1, #0x55
  403cf8:	b.ne	403d5c <ferror@plt+0x20bc>  // b.any
  403cfc:	ldrb	w1, [x0, #1]
  403d00:	and	w1, w1, #0xffffffdf
  403d04:	cmp	w1, #0x54
  403d08:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403d0c:	ldrb	w1, [x0, #2]
  403d10:	and	w1, w1, #0xffffffdf
  403d14:	cmp	w1, #0x46
  403d18:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403d1c:	ldrb	w1, [x0, #3]
  403d20:	cmp	w1, #0x2d
  403d24:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403d28:	ldrb	w1, [x0, #4]
  403d2c:	cmp	w1, #0x38
  403d30:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403d34:	ldrb	w0, [x0, #5]
  403d38:	cbnz	w0, 403dd8 <ferror@plt+0x2138>
  403d3c:	ldrb	w1, [x19]
  403d40:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  403d44:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7f8>
  403d48:	add	x0, x0, #0x3f8
  403d4c:	cmp	w1, #0x60
  403d50:	add	x19, x19, #0x410
  403d54:	csel	x19, x19, x0, eq  // eq = none
  403d58:	b	403cd4 <ferror@plt+0x2034>
  403d5c:	cmp	w1, #0x47
  403d60:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403d64:	ldrb	w1, [x0, #1]
  403d68:	and	w1, w1, #0xffffffdf
  403d6c:	cmp	w1, #0x42
  403d70:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403d74:	ldrb	w1, [x0, #2]
  403d78:	cmp	w1, #0x31
  403d7c:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403d80:	ldrb	w1, [x0, #3]
  403d84:	cmp	w1, #0x38
  403d88:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403d8c:	ldrb	w1, [x0, #4]
  403d90:	cmp	w1, #0x30
  403d94:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403d98:	ldrb	w1, [x0, #5]
  403d9c:	cmp	w1, #0x33
  403da0:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403da4:	ldrb	w1, [x0, #6]
  403da8:	cmp	w1, #0x30
  403dac:	b.ne	403dd8 <ferror@plt+0x2138>  // b.any
  403db0:	ldrb	w0, [x0, #7]
  403db4:	cbnz	w0, 403dd8 <ferror@plt+0x2138>
  403db8:	ldrb	w1, [x19]
  403dbc:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  403dc0:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7f8>
  403dc4:	add	x0, x0, #0x400
  403dc8:	cmp	w1, #0x60
  403dcc:	add	x19, x19, #0x408
  403dd0:	csel	x19, x19, x0, eq  // eq = none
  403dd4:	b	403cd4 <ferror@plt+0x2034>
  403dd8:	cmp	w21, #0x9
  403ddc:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  403de0:	adrp	x19, 407000 <_obstack_memory_used@@Base+0x7f8>
  403de4:	add	x0, x0, #0x418
  403de8:	add	x19, x19, #0x3f0
  403dec:	csel	x19, x19, x0, eq  // eq = none
  403df0:	mov	x0, x19
  403df4:	ldp	x19, x20, [sp, #16]
  403df8:	ldr	x21, [sp, #32]
  403dfc:	ldp	x29, x30, [sp], #48
  403e00:	ret
  403e04:	nop
  403e08:	sub	sp, sp, #0xf0
  403e0c:	stp	x29, x30, [sp, #16]
  403e10:	add	x29, sp, #0x10
  403e14:	stp	x19, x20, [sp, #32]
  403e18:	mov	w19, w5
  403e1c:	and	w20, w5, #0x2
  403e20:	stp	x21, x22, [sp, #48]
  403e24:	stp	x23, x24, [sp, #64]
  403e28:	mov	x23, x1
  403e2c:	stp	x25, x26, [sp, #80]
  403e30:	mov	w26, w4
  403e34:	mov	x25, x3
  403e38:	stp	x27, x28, [sp, #96]
  403e3c:	mov	x28, x0
  403e40:	mov	x27, x2
  403e44:	str	x6, [sp, #112]
  403e48:	str	w5, [sp, #200]
  403e4c:	str	x7, [sp, #208]
  403e50:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  403e54:	mov	x1, x19
  403e58:	str	x0, [sp, #192]
  403e5c:	cmp	w26, #0x4
  403e60:	ubfx	x11, x1, #1, #1
  403e64:	ldr	x6, [sp, #112]
  403e68:	b.eq	404b00 <ferror@plt+0x2e60>  // b.none
  403e6c:	b.ls	403ed4 <ferror@plt+0x2234>  // b.plast
  403e70:	cmp	w26, #0x7
  403e74:	b.eq	404990 <ferror@plt+0x2cf0>  // b.none
  403e78:	b.ls	4045fc <ferror@plt+0x295c>  // b.plast
  403e7c:	sub	w0, w26, #0x8
  403e80:	cmp	w0, #0x2
  403e84:	b.hi	404e1c <ferror@plt+0x317c>  // b.pmore
  403e88:	cmp	w26, #0xa
  403e8c:	b.ne	404a04 <ferror@plt+0x2d64>  // b.any
  403e90:	mov	x19, #0x0                   	// #0
  403e94:	cbz	w20, 404c7c <ferror@plt+0x2fdc>
  403e98:	ldr	x0, [sp, #240]
  403e9c:	str	w11, [sp, #136]
  403ea0:	str	x6, [sp, #144]
  403ea4:	bl	4018c0 <strlen@plt>
  403ea8:	mov	x12, x0
  403eac:	ldr	x0, [sp, #240]
  403eb0:	mov	w10, #0x1                   	// #1
  403eb4:	ldr	w11, [sp, #136]
  403eb8:	mov	w5, w10
  403ebc:	mov	w7, #0x0                   	// #0
  403ec0:	str	x0, [sp, #112]
  403ec4:	str	wzr, [sp, #120]
  403ec8:	str	xzr, [sp, #128]
  403ecc:	ldr	x6, [sp, #144]
  403ed0:	b	403f18 <ferror@plt+0x2278>
  403ed4:	cmp	w26, #0x1
  403ed8:	b.eq	40495c <ferror@plt+0x2cbc>  // b.none
  403edc:	b.ls	4045d0 <ferror@plt+0x2930>  // b.plast
  403ee0:	cmp	w26, #0x2
  403ee4:	b.eq	404b24 <ferror@plt+0x2e84>  // b.none
  403ee8:	mov	w10, #0x1                   	// #1
  403eec:	adrp	x26, 407000 <_obstack_memory_used@@Base+0x7f8>
  403ef0:	mov	w11, w10
  403ef4:	mov	w5, w10
  403ef8:	add	x0, x26, #0x418
  403efc:	mov	w7, #0x0                   	// #0
  403f00:	mov	x12, #0x1                   	// #1
  403f04:	mov	x19, #0x0                   	// #0
  403f08:	mov	w26, #0x2                   	// #2
  403f0c:	str	x0, [sp, #112]
  403f10:	str	wzr, [sp, #120]
  403f14:	str	xzr, [sp, #128]
  403f18:	mov	w22, w5
  403f1c:	mov	w24, w7
  403f20:	mov	x20, #0x0                   	// #0
  403f24:	nop
  403f28:	cmp	x25, x20
  403f2c:	cset	w21, ne  // ne = any
  403f30:	cmn	x25, #0x1
  403f34:	b.eq	404004 <ferror@plt+0x2364>  // b.none
  403f38:	cbz	w21, 404014 <ferror@plt+0x2374>
  403f3c:	cmp	w26, #0x2
  403f40:	add	x3, x27, x20
  403f44:	cset	w5, ne  // ne = any
  403f48:	ands	w5, w22, w5
  403f4c:	b.eq	40451c <ferror@plt+0x287c>  // b.none
  403f50:	cbz	x12, 404210 <ferror@plt+0x2570>
  403f54:	cmp	x12, #0x1
  403f58:	add	x1, x20, x12
  403f5c:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  403f60:	b.ne	403f98 <ferror@plt+0x22f8>  // b.any
  403f64:	mov	x0, x27
  403f68:	str	x1, [sp, #136]
  403f6c:	str	w5, [sp, #144]
  403f70:	stp	x3, x12, [sp, #152]
  403f74:	stp	w11, w10, [sp, #172]
  403f78:	str	x6, [sp, #184]
  403f7c:	bl	4018c0 <strlen@plt>
  403f80:	ldp	x3, x12, [sp, #152]
  403f84:	mov	x25, x0
  403f88:	ldr	w5, [sp, #144]
  403f8c:	ldp	w11, w10, [sp, #172]
  403f90:	ldr	x1, [sp, #136]
  403f94:	ldr	x6, [sp, #184]
  403f98:	cmp	x1, x25
  403f9c:	b.hi	404210 <ferror@plt+0x2570>  // b.pmore
  403fa0:	ldr	x1, [sp, #112]
  403fa4:	mov	x2, x12
  403fa8:	mov	x0, x3
  403fac:	stp	x3, x12, [sp, #136]
  403fb0:	str	w5, [sp, #152]
  403fb4:	str	w11, [sp, #160]
  403fb8:	str	w10, [sp, #172]
  403fbc:	str	x6, [sp, #176]
  403fc0:	bl	401b00 <memcmp@plt>
  403fc4:	ldr	w5, [sp, #152]
  403fc8:	ldr	w11, [sp, #160]
  403fcc:	ldr	w10, [sp, #172]
  403fd0:	ldp	x3, x12, [sp, #136]
  403fd4:	ldr	x6, [sp, #176]
  403fd8:	cbnz	w0, 404210 <ferror@plt+0x2570>
  403fdc:	cbnz	w11, 404308 <ferror@plt+0x2668>
  403fe0:	ldrb	w4, [x3]
  403fe4:	cmp	w4, #0x7e
  403fe8:	b.hi	404220 <ferror@plt+0x2580>  // b.pmore
  403fec:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  403ff0:	add	x0, x0, #0x498
  403ff4:	ldrh	w0, [x0, w4, uxtw #1]
  403ff8:	adr	x1, 404004 <ferror@plt+0x2364>
  403ffc:	add	x0, x1, w0, sxth #2
  404000:	br	x0
  404004:	ldrb	w0, [x27, x20]
  404008:	cmp	w0, #0x0
  40400c:	cset	w21, ne  // ne = any
  404010:	cbnz	w21, 403f3c <ferror@plt+0x229c>
  404014:	cmp	w26, #0x2
  404018:	mov	w5, w22
  40401c:	cset	w0, eq  // eq = none
  404020:	mov	w7, w24
  404024:	cmp	w0, #0x0
  404028:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  40402c:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  404030:	b.eq	404dc4 <ferror@plt+0x3124>  // b.none
  404034:	eor	w11, w11, #0x1
  404038:	ands	w0, w0, w11
  40403c:	b.eq	404d24 <ferror@plt+0x3084>  // b.none
  404040:	ldr	w1, [sp, #120]
  404044:	cbz	w1, 404d28 <ferror@plt+0x3088>
  404048:	cbnz	w10, 404d80 <ferror@plt+0x30e0>
  40404c:	ldr	x2, [sp, #128]
  404050:	cmp	x23, #0x0
  404054:	cset	w0, eq  // eq = none
  404058:	cmp	x2, #0x0
  40405c:	mov	x1, x2
  404060:	csel	w0, w0, wzr, ne  // ne = any
  404064:	cbz	w0, 404db0 <ferror@plt+0x3110>
  404068:	adrp	x26, 407000 <_obstack_memory_used@@Base+0x7f8>
  40406c:	mov	x12, #0x1                   	// #1
  404070:	mov	w11, #0x0                   	// #0
  404074:	mov	x19, x12
  404078:	str	w0, [sp, #120]
  40407c:	mov	w0, #0x27                  	// #39
  404080:	strb	w0, [x28]
  404084:	ldr	x23, [sp, #128]
  404088:	str	x1, [sp, #128]
  40408c:	add	x1, x26, #0x418
  404090:	mov	w26, #0x2                   	// #2
  404094:	str	x1, [sp, #112]
  404098:	b	403f18 <ferror@plt+0x2278>
  40409c:	mov	w0, w5
  4040a0:	mov	w21, w5
  4040a4:	mov	w5, w0
  4040a8:	mov	w1, #0x0                   	// #0
  4040ac:	nop
  4040b0:	cbz	x6, 4041c8 <ferror@plt+0x2528>
  4040b4:	ubfx	x0, x4, #5, #8
  4040b8:	ldr	w0, [x6, x0, lsl #2]
  4040bc:	lsr	w0, w0, w4
  4040c0:	tbz	w0, #0, 4041c8 <ferror@plt+0x2528>
  4040c4:	cmp	w26, #0x2
  4040c8:	cset	w0, eq  // eq = none
  4040cc:	cbnz	w11, 404448 <ferror@plt+0x27a8>
  4040d0:	eor	w1, w24, #0x1
  4040d4:	ands	w0, w0, w1
  4040d8:	b.eq	40411c <ferror@plt+0x247c>  // b.none
  4040dc:	cmp	x23, x19
  4040e0:	b.ls	4040ec <ferror@plt+0x244c>  // b.plast
  4040e4:	mov	w1, #0x27                  	// #39
  4040e8:	strb	w1, [x28, x19]
  4040ec:	add	x1, x19, #0x1
  4040f0:	cmp	x23, x1
  4040f4:	b.ls	404100 <ferror@plt+0x2460>  // b.plast
  4040f8:	mov	w2, #0x24                  	// #36
  4040fc:	strb	w2, [x28, x1]
  404100:	add	x1, x19, #0x2
  404104:	cmp	x23, x1
  404108:	b.ls	404114 <ferror@plt+0x2474>  // b.plast
  40410c:	mov	w2, #0x27                  	// #39
  404110:	strb	w2, [x28, x1]
  404114:	add	x19, x19, #0x3
  404118:	mov	w24, w0
  40411c:	cmp	x19, x23
  404120:	b.cs	40412c <ferror@plt+0x248c>  // b.hs, b.nlast
  404124:	mov	w0, #0x5c                  	// #92
  404128:	strb	w0, [x28, x19]
  40412c:	add	x19, x19, #0x1
  404130:	add	x20, x20, #0x1
  404134:	cmp	x19, x23
  404138:	b.cs	404140 <ferror@plt+0x24a0>  // b.hs, b.nlast
  40413c:	strb	w4, [x28, x19]
  404140:	cmp	w21, #0x0
  404144:	add	x19, x19, #0x1
  404148:	csel	w10, w10, wzr, ne  // ne = any
  40414c:	b	403f28 <ferror@plt+0x2288>
  404150:	cbnz	w11, 404d6c <ferror@plt+0x30cc>
  404154:	ldr	x1, [sp, #128]
  404158:	cmp	x23, #0x0
  40415c:	mov	x0, #0x0                   	// #0
  404160:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  404164:	b.eq	4041a8 <ferror@plt+0x2508>  // b.none
  404168:	cmp	x23, x19
  40416c:	b.ls	404178 <ferror@plt+0x24d8>  // b.plast
  404170:	mov	w0, #0x27                  	// #39
  404174:	strb	w0, [x28, x19]
  404178:	add	x0, x19, #0x1
  40417c:	cmp	x23, x0
  404180:	b.ls	40418c <ferror@plt+0x24ec>  // b.plast
  404184:	mov	w1, #0x5c                  	// #92
  404188:	strb	w1, [x28, x0]
  40418c:	add	x1, x19, #0x2
  404190:	mov	x0, x23
  404194:	cmp	x23, x1
  404198:	b.ls	404dfc <ferror@plt+0x315c>  // b.plast
  40419c:	ldr	x23, [sp, #128]
  4041a0:	mov	w2, #0x27                  	// #39
  4041a4:	strb	w2, [x28, x1]
  4041a8:	add	x19, x19, #0x3
  4041ac:	str	x23, [sp, #128]
  4041b0:	mov	x23, x0
  4041b4:	mov	w1, #0x0                   	// #0
  4041b8:	mov	w24, #0x0                   	// #0
  4041bc:	mov	w4, #0x27                  	// #39
  4041c0:	str	w21, [sp, #120]
  4041c4:	nop
  4041c8:	cbnz	w5, 4040c4 <ferror@plt+0x2424>
  4041cc:	eor	w1, w1, #0x1
  4041d0:	add	x20, x20, #0x1
  4041d4:	and	w1, w24, w1
  4041d8:	and	w1, w1, #0xff
  4041dc:	cbz	w1, 404134 <ferror@plt+0x2494>
  4041e0:	cmp	x23, x19
  4041e4:	b.ls	4041f0 <ferror@plt+0x2550>  // b.plast
  4041e8:	mov	w0, #0x27                  	// #39
  4041ec:	strb	w0, [x28, x19]
  4041f0:	add	x0, x19, #0x1
  4041f4:	cmp	x23, x0
  4041f8:	b.ls	404204 <ferror@plt+0x2564>  // b.plast
  4041fc:	mov	w1, #0x27                  	// #39
  404200:	strb	w1, [x28, x0]
  404204:	add	x19, x19, #0x2
  404208:	mov	w24, #0x0                   	// #0
  40420c:	b	404134 <ferror@plt+0x2494>
  404210:	ldrb	w4, [x3]
  404214:	cmp	w4, #0x7e
  404218:	b.ls	4045a4 <ferror@plt+0x2904>  // b.plast
  40421c:	mov	w5, #0x0                   	// #0
  404220:	ldr	x0, [sp, #192]
  404224:	cmp	x0, #0x1
  404228:	b.ne	4046d0 <ferror@plt+0x2a30>  // b.any
  40422c:	str	w4, [sp, #136]
  404230:	str	w5, [sp, #144]
  404234:	str	x12, [sp, #152]
  404238:	str	w11, [sp, #160]
  40423c:	str	w10, [sp, #172]
  404240:	str	x6, [sp, #176]
  404244:	bl	401b50 <__ctype_b_loc@plt>
  404248:	ldr	w4, [sp, #136]
  40424c:	ldr	x0, [x0]
  404250:	ldr	w5, [sp, #144]
  404254:	ldr	w11, [sp, #160]
  404258:	ldrh	w21, [x0, w4, uxtw #1]
  40425c:	ldr	w10, [sp, #172]
  404260:	ands	w0, w21, #0x4000
  404264:	cset	w2, eq  // eq = none
  404268:	ubfx	x21, x21, #14, #1
  40426c:	ldr	x12, [sp, #152]
  404270:	and	w2, w22, w2
  404274:	ldr	x6, [sp, #176]
  404278:	ldr	x8, [sp, #192]
  40427c:	cbnz	w2, 404ae4 <ferror@plt+0x2e44>
  404280:	cmp	w26, #0x2
  404284:	cset	w1, eq  // eq = none
  404288:	eor	w0, w22, #0x1
  40428c:	orr	w1, w1, w0
  404290:	cbz	w1, 4040b0 <ferror@plt+0x2410>
  404294:	mov	w1, #0x0                   	// #0
  404298:	cbnz	w11, 4040b0 <ferror@plt+0x2410>
  40429c:	nop
  4042a0:	cbnz	w5, 4040c4 <ferror@plt+0x2424>
  4042a4:	b	4041cc <ferror@plt+0x252c>
  4042a8:	mov	w5, #0x0                   	// #0
  4042ac:	cmp	x25, #0x1
  4042b0:	cset	w0, ne  // ne = any
  4042b4:	cmn	x25, #0x1
  4042b8:	b.ne	4042c8 <ferror@plt+0x2628>  // b.any
  4042bc:	ldrb	w0, [x27, #1]
  4042c0:	cmp	w0, #0x0
  4042c4:	cset	w0, ne  // ne = any
  4042c8:	cmp	w26, #0x2
  4042cc:	cset	w1, eq  // eq = none
  4042d0:	cbz	w0, 4042e4 <ferror@plt+0x2644>
  4042d4:	mov	w21, #0x0                   	// #0
  4042d8:	b	404288 <ferror@plt+0x25e8>
  4042dc:	cmp	w26, #0x2
  4042e0:	cset	w1, eq  // eq = none
  4042e4:	cbnz	x20, 4042d4 <ferror@plt+0x2634>
  4042e8:	cmp	w11, #0x0
  4042ec:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4042f0:	b.eq	404288 <ferror@plt+0x25e8>  // b.none
  4042f4:	mov	w5, w22
  4042f8:	mov	w26, #0x2                   	// #2
  4042fc:	cmp	w5, #0x0
  404300:	mov	w0, #0x4                   	// #4
  404304:	csel	w26, w26, w0, eq  // eq = none
  404308:	ldr	x7, [sp, #208]
  40430c:	mov	w4, w26
  404310:	ldr	x0, [sp, #240]
  404314:	str	x0, [sp]
  404318:	ldr	w0, [sp, #200]
  40431c:	mov	x3, x25
  404320:	mov	x2, x27
  404324:	mov	x1, x23
  404328:	and	w5, w0, #0xfffffffd
  40432c:	mov	x6, #0x0                   	// #0
  404330:	mov	x0, x28
  404334:	bl	403e08 <ferror@plt+0x2168>
  404338:	mov	x19, x0
  40433c:	mov	x0, x19
  404340:	ldp	x29, x30, [sp, #16]
  404344:	ldp	x19, x20, [sp, #32]
  404348:	ldp	x21, x22, [sp, #48]
  40434c:	ldp	x23, x24, [sp, #64]
  404350:	ldp	x25, x26, [sp, #80]
  404354:	ldp	x27, x28, [sp, #96]
  404358:	add	sp, sp, #0xf0
  40435c:	ret
  404360:	mov	w5, #0x0                   	// #0
  404364:	cmp	w26, #0x2
  404368:	b.eq	4046a0 <ferror@plt+0x2a00>  // b.none
  40436c:	cmp	w22, #0x0
  404370:	mov	w4, #0x5c                  	// #92
  404374:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  404378:	mov	w0, w4
  40437c:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  404380:	b.ne	4049d0 <ferror@plt+0x2d30>  // b.any
  404384:	cbnz	w22, 404a40 <ferror@plt+0x2da0>
  404388:	mov	w21, #0x0                   	// #0
  40438c:	mov	w1, #0x0                   	// #0
  404390:	cbnz	w11, 4040b0 <ferror@plt+0x2410>
  404394:	b	4042a0 <ferror@plt+0x2600>
  404398:	mov	w5, #0x0                   	// #0
  40439c:	cmp	w26, #0x2
  4043a0:	b.eq	4046b8 <ferror@plt+0x2a18>  // b.none
  4043a4:	cmp	w26, #0x5
  4043a8:	b.ne	4043d0 <ferror@plt+0x2730>  // b.any
  4043ac:	ldr	x0, [sp, #200]
  4043b0:	tbz	w0, #2, 4043d0 <ferror@plt+0x2730>
  4043b4:	add	x7, x20, #0x2
  4043b8:	cmp	x7, x25
  4043bc:	b.cs	4043d0 <ferror@plt+0x2730>  // b.hs, b.nlast
  4043c0:	ldrb	w4, [x3, #1]
  4043c4:	cmp	w4, #0x3f
  4043c8:	b.eq	404bac <ferror@plt+0x2f0c>  // b.none
  4043cc:	nop
  4043d0:	mov	w1, #0x0                   	// #0
  4043d4:	mov	w21, #0x0                   	// #0
  4043d8:	mov	w4, #0x3f                  	// #63
  4043dc:	b	404288 <ferror@plt+0x25e8>
  4043e0:	mov	w5, #0x0                   	// #0
  4043e4:	cmp	w26, #0x2
  4043e8:	b.eq	404150 <ferror@plt+0x24b0>  // b.none
  4043ec:	mov	w1, #0x0                   	// #0
  4043f0:	mov	w4, #0x27                  	// #39
  4043f4:	str	w21, [sp, #120]
  4043f8:	b	404288 <ferror@plt+0x25e8>
  4043fc:	mov	w0, #0x74                  	// #116
  404400:	cmp	w11, #0x0
  404404:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  404408:	b.eq	4042f4 <ferror@plt+0x2654>  // b.none
  40440c:	cbz	w22, 404388 <ferror@plt+0x26e8>
  404410:	b	404a40 <ferror@plt+0x2da0>
  404414:	mov	w4, #0x62                  	// #98
  404418:	cmp	w26, #0x2
  40441c:	cset	w0, eq  // eq = none
  404420:	cbnz	w11, 404448 <ferror@plt+0x27a8>
  404424:	mov	w21, #0x0                   	// #0
  404428:	b	40411c <ferror@plt+0x247c>
  40442c:	mov	w4, #0x66                  	// #102
  404430:	b	404418 <ferror@plt+0x2778>
  404434:	mov	w4, #0x6e                  	// #110
  404438:	mov	w21, #0x0                   	// #0
  40443c:	cmp	w26, #0x2
  404440:	cset	w0, eq  // eq = none
  404444:	cbz	w11, 4040d0 <ferror@plt+0x2430>
  404448:	and	w5, w22, w0
  40444c:	b	4042fc <ferror@plt+0x265c>
  404450:	mov	w4, #0x72                  	// #114
  404454:	mov	w21, #0x0                   	// #0
  404458:	b	40443c <ferror@plt+0x279c>
  40445c:	mov	w4, #0x61                  	// #97
  404460:	b	404418 <ferror@plt+0x2778>
  404464:	cbnz	w11, 404d74 <ferror@plt+0x30d4>
  404468:	mov	w5, #0x0                   	// #0
  40446c:	cmp	w26, #0x2
  404470:	eor	w1, w24, #0x1
  404474:	cset	w0, eq  // eq = none
  404478:	ands	w1, w0, w1
  40447c:	b.eq	404680 <ferror@plt+0x29e0>  // b.none
  404480:	cmp	x23, x19
  404484:	b.ls	404490 <ferror@plt+0x27f0>  // b.plast
  404488:	mov	w2, #0x27                  	// #39
  40448c:	strb	w2, [x28, x19]
  404490:	add	x2, x19, #0x1
  404494:	cmp	x23, x2
  404498:	b.ls	4044a4 <ferror@plt+0x2804>  // b.plast
  40449c:	mov	w3, #0x24                  	// #36
  4044a0:	strb	w3, [x28, x2]
  4044a4:	add	x2, x19, #0x2
  4044a8:	cmp	x23, x2
  4044ac:	b.ls	4044b8 <ferror@plt+0x2818>  // b.plast
  4044b0:	mov	w3, #0x27                  	// #39
  4044b4:	strb	w3, [x28, x2]
  4044b8:	add	x2, x19, #0x3
  4044bc:	cmp	x23, x2
  4044c0:	b.ls	4049b8 <ferror@plt+0x2d18>  // b.plast
  4044c4:	mov	w24, w1
  4044c8:	mov	w1, #0x5c                  	// #92
  4044cc:	strb	w1, [x28, x2]
  4044d0:	cmp	w26, #0x2
  4044d4:	add	x19, x2, #0x1
  4044d8:	b.eq	404b98 <ferror@plt+0x2ef8>  // b.none
  4044dc:	add	x1, x20, #0x1
  4044e0:	mov	w4, #0x30                  	// #48
  4044e4:	cmp	x1, x25
  4044e8:	b.cs	404500 <ferror@plt+0x2860>  // b.hs, b.nlast
  4044ec:	ldrb	w1, [x27, x1]
  4044f0:	sub	w1, w1, #0x30
  4044f4:	and	w1, w1, #0xff
  4044f8:	cmp	w1, #0x9
  4044fc:	b.ls	404a4c <ferror@plt+0x2dac>  // b.plast
  404500:	eor	w1, w22, #0x1
  404504:	orr	w0, w0, w1
  404508:	mov	w1, w21
  40450c:	mov	w21, #0x0                   	// #0
  404510:	cbz	w0, 4040b0 <ferror@plt+0x2410>
  404514:	cbnz	w5, 4040c4 <ferror@plt+0x2424>
  404518:	b	4041cc <ferror@plt+0x252c>
  40451c:	ldrb	w4, [x27, x20]
  404520:	cmp	w4, #0x7e
  404524:	b.hi	404220 <ferror@plt+0x2580>  // b.pmore
  404528:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  40452c:	add	x0, x0, #0x598
  404530:	ldrh	w0, [x0, w4, uxtw #1]
  404534:	adr	x1, 404540 <ferror@plt+0x28a0>
  404538:	add	x0, x1, w0, sxth #2
  40453c:	br	x0
  404540:	cmp	w26, #0x2
  404544:	mov	w21, #0x0                   	// #0
  404548:	cset	w1, eq  // eq = none
  40454c:	cmp	w11, #0x0
  404550:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  404554:	b.eq	404288 <ferror@plt+0x25e8>  // b.none
  404558:	b	4042f4 <ferror@plt+0x2654>
  40455c:	cmp	w26, #0x2
  404560:	cset	w1, eq  // eq = none
  404564:	cmp	w11, #0x0
  404568:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40456c:	b.eq	404288 <ferror@plt+0x25e8>  // b.none
  404570:	b	4042f4 <ferror@plt+0x2654>
  404574:	cbnz	w22, 404464 <ferror@plt+0x27c4>
  404578:	ldr	x0, [sp, #200]
  40457c:	mov	w5, #0x0                   	// #0
  404580:	tbz	w0, #0, 404388 <ferror@plt+0x26e8>
  404584:	add	x20, x20, #0x1
  404588:	b	403f28 <ferror@plt+0x2288>
  40458c:	mov	w0, #0x66                  	// #102
  404590:	cbz	w22, 404388 <ferror@plt+0x26e8>
  404594:	b	404a40 <ferror@plt+0x2da0>
  404598:	mov	w0, #0x62                  	// #98
  40459c:	cbz	w22, 404388 <ferror@plt+0x26e8>
  4045a0:	b	404a40 <ferror@plt+0x2da0>
  4045a4:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  4045a8:	add	x0, x0, #0x698
  4045ac:	ldrh	w0, [x0, w4, uxtw #1]
  4045b0:	adr	x1, 4045bc <ferror@plt+0x291c>
  4045b4:	add	x0, x1, w0, sxth #2
  4045b8:	br	x0
  4045bc:	mov	w0, #0x0                   	// #0
  4045c0:	b	4040a0 <ferror@plt+0x2400>
  4045c4:	mov	w0, #0x0                   	// #0
  4045c8:	mov	w5, #0x0                   	// #0
  4045cc:	b	4040a0 <ferror@plt+0x2400>
  4045d0:	cbnz	w26, 404e1c <ferror@plt+0x317c>
  4045d4:	mov	w10, #0x1                   	// #1
  4045d8:	mov	w7, #0x0                   	// #0
  4045dc:	mov	w11, #0x0                   	// #0
  4045e0:	mov	w5, #0x0                   	// #0
  4045e4:	mov	x12, #0x0                   	// #0
  4045e8:	mov	x19, #0x0                   	// #0
  4045ec:	str	xzr, [sp, #112]
  4045f0:	str	wzr, [sp, #120]
  4045f4:	str	xzr, [sp, #128]
  4045f8:	b	403f18 <ferror@plt+0x2278>
  4045fc:	cmp	w26, #0x5
  404600:	b.ne	404644 <ferror@plt+0x29a4>  // b.any
  404604:	cbnz	w20, 404c3c <ferror@plt+0x2f9c>
  404608:	cbz	x23, 404b68 <ferror@plt+0x2ec8>
  40460c:	mov	w0, #0x22                  	// #34
  404610:	mov	w10, #0x1                   	// #1
  404614:	mov	x12, #0x1                   	// #1
  404618:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  40461c:	mov	w5, w10
  404620:	add	x1, x1, #0x3f0
  404624:	mov	x19, x12
  404628:	mov	w7, #0x0                   	// #0
  40462c:	mov	w11, #0x0                   	// #0
  404630:	strb	w0, [x28]
  404634:	str	x1, [sp, #112]
  404638:	str	wzr, [sp, #120]
  40463c:	str	xzr, [sp, #128]
  404640:	b	403f18 <ferror@plt+0x2278>
  404644:	cmp	w26, #0x6
  404648:	b.ne	404e1c <ferror@plt+0x317c>  // b.any
  40464c:	adrp	x26, 407000 <_obstack_memory_used@@Base+0x7f8>
  404650:	mov	w10, #0x1                   	// #1
  404654:	add	x0, x26, #0x3f0
  404658:	mov	w11, w10
  40465c:	mov	w5, w10
  404660:	mov	w7, #0x0                   	// #0
  404664:	mov	x12, #0x1                   	// #1
  404668:	mov	x19, #0x0                   	// #0
  40466c:	mov	w26, #0x5                   	// #5
  404670:	str	x0, [sp, #112]
  404674:	str	wzr, [sp, #120]
  404678:	str	xzr, [sp, #128]
  40467c:	b	403f18 <ferror@plt+0x2278>
  404680:	mov	x2, x19
  404684:	cmp	x23, x19
  404688:	b.ls	4044d0 <ferror@plt+0x2830>  // b.plast
  40468c:	mov	w1, w24
  404690:	mov	w24, w1
  404694:	mov	w1, #0x5c                  	// #92
  404698:	strb	w1, [x28, x2]
  40469c:	b	4044d0 <ferror@plt+0x2830>
  4046a0:	cbnz	w11, 404d6c <ferror@plt+0x30cc>
  4046a4:	add	x20, x20, #0x1
  4046a8:	mov	w1, w24
  4046ac:	mov	w21, #0x0                   	// #0
  4046b0:	mov	w4, #0x5c                  	// #92
  4046b4:	b	4041dc <ferror@plt+0x253c>
  4046b8:	cbnz	w11, 404d6c <ferror@plt+0x30cc>
  4046bc:	mov	w21, #0x0                   	// #0
  4046c0:	mov	w1, #0x0                   	// #0
  4046c4:	mov	w4, #0x3f                  	// #63
  4046c8:	cbnz	w5, 4040c4 <ferror@plt+0x2424>
  4046cc:	b	4041cc <ferror@plt+0x252c>
  4046d0:	str	xzr, [sp, #232]
  4046d4:	cmn	x25, #0x1
  4046d8:	b.ne	404718 <ferror@plt+0x2a78>  // b.any
  4046dc:	mov	x0, x27
  4046e0:	str	w4, [sp, #136]
  4046e4:	str	w5, [sp, #144]
  4046e8:	str	x12, [sp, #152]
  4046ec:	str	w11, [sp, #160]
  4046f0:	str	w10, [sp, #172]
  4046f4:	str	x6, [sp, #176]
  4046f8:	bl	4018c0 <strlen@plt>
  4046fc:	ldr	w4, [sp, #136]
  404700:	mov	x25, x0
  404704:	ldr	w5, [sp, #144]
  404708:	ldr	w11, [sp, #160]
  40470c:	ldr	w10, [sp, #172]
  404710:	ldr	x12, [sp, #152]
  404714:	ldr	x6, [sp, #176]
  404718:	mov	x8, #0x0                   	// #0
  40471c:	str	x19, [sp, #184]
  404720:	mov	w19, w21
  404724:	mov	x21, x8
  404728:	str	w11, [sp, #136]
  40472c:	str	x12, [sp, #144]
  404730:	str	w24, [sp, #152]
  404734:	str	w10, [sp, #160]
  404738:	stp	w4, w5, [sp, #172]
  40473c:	str	x6, [sp, #216]
  404740:	add	x24, x20, x21
  404744:	add	x3, sp, #0xe8
  404748:	sub	x2, x25, x24
  40474c:	add	x1, x27, x24
  404750:	add	x0, sp, #0xe4
  404754:	bl	406430 <ferror@plt+0x4790>
  404758:	mov	x13, #0x2b                  	// #43
  40475c:	mov	x3, x0
  404760:	movk	x13, #0x2, lsl #32
  404764:	cbz	x0, 4047ac <ferror@plt+0x2b0c>
  404768:	cmn	x0, #0x1
  40476c:	b.eq	404ca4 <ferror@plt+0x3004>  // b.none
  404770:	cmn	x0, #0x2
  404774:	mov	x7, #0x1                   	// #1
  404778:	b.eq	404cd0 <ferror@plt+0x3030>  // b.none
  40477c:	ldr	w0, [sp, #136]
  404780:	cmp	w0, #0x0
  404784:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  404788:	b.eq	404910 <ferror@plt+0x2c70>  // b.none
  40478c:	ldr	w0, [sp, #228]
  404790:	add	x21, x21, x3
  404794:	bl	401c30 <iswprint@plt>
  404798:	cmp	w0, #0x0
  40479c:	csel	w19, w19, wzr, ne  // ne = any
  4047a0:	add	x0, sp, #0xe8
  4047a4:	bl	401ad0 <mbsinit@plt>
  4047a8:	cbz	w0, 404740 <ferror@plt+0x2aa0>
  4047ac:	eor	w2, w19, #0x1
  4047b0:	mov	x8, x21
  4047b4:	ldr	w11, [sp, #136]
  4047b8:	mov	w21, w19
  4047bc:	ldr	w24, [sp, #152]
  4047c0:	and	w2, w22, w2
  4047c4:	ldr	w10, [sp, #160]
  4047c8:	ldp	w4, w5, [sp, #172]
  4047cc:	ldr	x12, [sp, #144]
  4047d0:	ldr	x19, [sp, #184]
  4047d4:	ldr	x6, [sp, #216]
  4047d8:	cmp	x8, #0x1
  4047dc:	b.ls	40427c <ferror@plt+0x25dc>  // b.plast
  4047e0:	add	x8, x8, x20
  4047e4:	mov	w14, #0x0                   	// #0
  4047e8:	mov	w3, #0x27                  	// #39
  4047ec:	mov	w7, #0x5c                  	// #92
  4047f0:	mov	w9, #0x24                  	// #36
  4047f4:	cbz	w2, 4048b4 <ferror@plt+0x2c14>
  4047f8:	cmp	w26, #0x2
  4047fc:	cset	w0, eq  // eq = none
  404800:	cbnz	w11, 404af8 <ferror@plt+0x2e58>
  404804:	eor	w1, w24, #0x1
  404808:	ands	w0, w0, w1
  40480c:	b.eq	404844 <ferror@plt+0x2ba4>  // b.none
  404810:	cmp	x23, x19
  404814:	b.ls	40481c <ferror@plt+0x2b7c>  // b.plast
  404818:	strb	w3, [x28, x19]
  40481c:	add	x1, x19, #0x1
  404820:	cmp	x23, x1
  404824:	b.ls	40482c <ferror@plt+0x2b8c>  // b.plast
  404828:	strb	w9, [x28, x1]
  40482c:	add	x1, x19, #0x2
  404830:	cmp	x23, x1
  404834:	b.ls	40483c <ferror@plt+0x2b9c>  // b.plast
  404838:	strb	w3, [x28, x1]
  40483c:	add	x19, x19, #0x3
  404840:	mov	w24, w0
  404844:	cmp	x23, x19
  404848:	b.ls	404850 <ferror@plt+0x2bb0>  // b.plast
  40484c:	strb	w7, [x28, x19]
  404850:	add	x0, x19, #0x1
  404854:	cmp	x23, x0
  404858:	b.ls	404868 <ferror@plt+0x2bc8>  // b.plast
  40485c:	lsr	w1, w4, #6
  404860:	add	w1, w1, #0x30
  404864:	strb	w1, [x28, x0]
  404868:	add	x0, x19, #0x2
  40486c:	cmp	x23, x0
  404870:	b.ls	404880 <ferror@plt+0x2be0>  // b.plast
  404874:	ubfx	x1, x4, #3, #3
  404878:	add	w1, w1, #0x30
  40487c:	strb	w1, [x28, x0]
  404880:	and	w4, w4, #0x7
  404884:	add	x20, x20, #0x1
  404888:	add	w4, w4, #0x30
  40488c:	cmp	x20, x8
  404890:	add	x19, x19, #0x3
  404894:	b.cs	404134 <ferror@plt+0x2494>  // b.hs, b.nlast
  404898:	mov	w14, w2
  40489c:	cmp	x23, x19
  4048a0:	b.ls	4048a8 <ferror@plt+0x2c08>  // b.plast
  4048a4:	strb	w4, [x28, x19]
  4048a8:	ldrb	w4, [x27, x20]
  4048ac:	add	x19, x19, #0x1
  4048b0:	cbnz	w2, 4047f8 <ferror@plt+0x2b58>
  4048b4:	eor	w0, w14, #0x1
  4048b8:	and	w0, w24, w0
  4048bc:	and	w0, w0, #0xff
  4048c0:	cbz	w5, 4048d4 <ferror@plt+0x2c34>
  4048c4:	cmp	x23, x19
  4048c8:	b.ls	4048d0 <ferror@plt+0x2c30>  // b.plast
  4048cc:	strb	w7, [x28, x19]
  4048d0:	add	x19, x19, #0x1
  4048d4:	add	x20, x20, #0x1
  4048d8:	cmp	x20, x8
  4048dc:	b.cs	404af0 <ferror@plt+0x2e50>  // b.hs, b.nlast
  4048e0:	cbz	w0, 404b60 <ferror@plt+0x2ec0>
  4048e4:	cmp	x23, x19
  4048e8:	b.ls	4048f0 <ferror@plt+0x2c50>  // b.plast
  4048ec:	strb	w3, [x28, x19]
  4048f0:	add	x0, x19, #0x1
  4048f4:	cmp	x23, x0
  4048f8:	b.ls	404900 <ferror@plt+0x2c60>  // b.plast
  4048fc:	strb	w3, [x28, x0]
  404900:	add	x19, x19, #0x2
  404904:	mov	w5, #0x0                   	// #0
  404908:	mov	w24, #0x0                   	// #0
  40490c:	b	40489c <ferror@plt+0x2bfc>
  404910:	cmp	x3, #0x1
  404914:	b.eq	40478c <ferror@plt+0x2aec>  // b.none
  404918:	add	x2, x24, #0x1
  40491c:	add	x0, x27, x3
  404920:	add	x2, x27, x2
  404924:	add	x9, x0, x24
  404928:	b	404938 <ferror@plt+0x2c98>
  40492c:	add	x2, x2, #0x1
  404930:	cmp	x9, x2
  404934:	b.eq	40478c <ferror@plt+0x2aec>  // b.none
  404938:	ldrb	w0, [x2]
  40493c:	sub	w0, w0, #0x5b
  404940:	and	w0, w0, #0xff
  404944:	cmp	w0, #0x21
  404948:	b.hi	40492c <ferror@plt+0x2c8c>  // b.pmore
  40494c:	lsl	x0, x7, x0
  404950:	tst	x0, x13
  404954:	b.eq	40492c <ferror@plt+0x2c8c>  // b.none
  404958:	b	4042f4 <ferror@plt+0x2654>
  40495c:	mov	w10, w26
  404960:	mov	w11, w26
  404964:	adrp	x26, 407000 <_obstack_memory_used@@Base+0x7f8>
  404968:	add	x0, x26, #0x418
  40496c:	str	x0, [sp, #112]
  404970:	str	wzr, [sp, #120]
  404974:	mov	w7, #0x0                   	// #0
  404978:	mov	w5, #0x0                   	// #0
  40497c:	mov	x12, #0x1                   	// #1
  404980:	mov	x19, #0x0                   	// #0
  404984:	mov	w26, #0x2                   	// #2
  404988:	str	xzr, [sp, #128]
  40498c:	b	403f18 <ferror@plt+0x2278>
  404990:	mov	w10, #0x1                   	// #1
  404994:	mov	w7, #0x0                   	// #0
  404998:	mov	w5, w10
  40499c:	mov	w11, #0x0                   	// #0
  4049a0:	mov	x12, #0x0                   	// #0
  4049a4:	mov	x19, #0x0                   	// #0
  4049a8:	str	xzr, [sp, #112]
  4049ac:	str	wzr, [sp, #120]
  4049b0:	str	xzr, [sp, #128]
  4049b4:	b	403f18 <ferror@plt+0x2278>
  4049b8:	add	x19, x19, #0x4
  4049bc:	mov	w24, w1
  4049c0:	mov	w21, #0x0                   	// #0
  4049c4:	mov	w4, #0x30                  	// #48
  4049c8:	cbnz	w5, 4040c4 <ferror@plt+0x2424>
  4049cc:	b	4041cc <ferror@plt+0x252c>
  4049d0:	add	x20, x20, #0x1
  4049d4:	mov	w1, w24
  4049d8:	mov	w21, #0x0                   	// #0
  4049dc:	b	4041dc <ferror@plt+0x253c>
  4049e0:	mov	w0, w5
  4049e4:	mov	w5, #0x0                   	// #0
  4049e8:	b	4040a0 <ferror@plt+0x2400>
  4049ec:	mov	w0, #0x0                   	// #0
  4049f0:	cbnz	x20, 404ad4 <ferror@plt+0x2e34>
  4049f4:	mov	w21, w5
  4049f8:	mov	w1, #0x0                   	// #0
  4049fc:	mov	w5, w0
  404a00:	b	404288 <ferror@plt+0x25e8>
  404a04:	mov	w1, w26
  404a08:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  404a0c:	add	x0, x0, #0x420
  404a10:	str	w11, [sp, #112]
  404a14:	str	x6, [sp, #120]
  404a18:	bl	403ca0 <ferror@plt+0x2000>
  404a1c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  404a20:	str	x0, [sp, #208]
  404a24:	add	x0, x1, #0x418
  404a28:	mov	w1, w26
  404a2c:	bl	403ca0 <ferror@plt+0x2000>
  404a30:	str	x0, [sp, #240]
  404a34:	ldr	w11, [sp, #112]
  404a38:	ldr	x6, [sp, #120]
  404a3c:	b	403e90 <ferror@plt+0x21f0>
  404a40:	mov	w4, w0
  404a44:	mov	w21, #0x0                   	// #0
  404a48:	b	40443c <ferror@plt+0x279c>
  404a4c:	cmp	x23, x19
  404a50:	b.ls	404a58 <ferror@plt+0x2db8>  // b.plast
  404a54:	strb	w4, [x28, x19]
  404a58:	add	x1, x2, #0x2
  404a5c:	cmp	x23, x1
  404a60:	b.ls	404a6c <ferror@plt+0x2dcc>  // b.plast
  404a64:	mov	w3, #0x30                  	// #48
  404a68:	strb	w3, [x28, x1]
  404a6c:	add	x19, x2, #0x3
  404a70:	mov	w4, #0x30                  	// #48
  404a74:	b	404500 <ferror@plt+0x2860>
  404a78:	mov	w0, #0x76                  	// #118
  404a7c:	cbz	w22, 404388 <ferror@plt+0x26e8>
  404a80:	b	404a40 <ferror@plt+0x2da0>
  404a84:	mov	w0, #0x72                  	// #114
  404a88:	b	404400 <ferror@plt+0x2760>
  404a8c:	mov	w0, #0x61                  	// #97
  404a90:	cbz	w22, 404388 <ferror@plt+0x26e8>
  404a94:	b	404a40 <ferror@plt+0x2da0>
  404a98:	mov	w0, #0x6e                  	// #110
  404a9c:	b	404400 <ferror@plt+0x2760>
  404aa0:	mov	w0, #0x0                   	// #0
  404aa4:	mov	w21, w5
  404aa8:	mov	w1, #0x0                   	// #0
  404aac:	mov	w5, w0
  404ab0:	mov	w4, #0x20                  	// #32
  404ab4:	b	404288 <ferror@plt+0x25e8>
  404ab8:	mov	w5, #0x0                   	// #0
  404abc:	mov	w0, #0x74                  	// #116
  404ac0:	b	404400 <ferror@plt+0x2760>
  404ac4:	mov	w5, #0x0                   	// #0
  404ac8:	mov	w0, #0x76                  	// #118
  404acc:	cbz	w22, 404388 <ferror@plt+0x26e8>
  404ad0:	b	404a40 <ferror@plt+0x2da0>
  404ad4:	mov	w5, w0
  404ad8:	mov	w21, #0x0                   	// #0
  404adc:	mov	w1, #0x0                   	// #0
  404ae0:	b	4040b0 <ferror@plt+0x2410>
  404ae4:	mov	w2, w22
  404ae8:	mov	w21, #0x0                   	// #0
  404aec:	b	4047e0 <ferror@plt+0x2b40>
  404af0:	mov	w1, w0
  404af4:	b	4041dc <ferror@plt+0x253c>
  404af8:	mov	w5, w0
  404afc:	b	4042fc <ferror@plt+0x265c>
  404b00:	mov	w5, #0x1                   	// #1
  404b04:	cbz	w20, 404b2c <ferror@plt+0x2e8c>
  404b08:	mov	w10, #0x1                   	// #1
  404b0c:	adrp	x26, 407000 <_obstack_memory_used@@Base+0x7f8>
  404b10:	mov	w11, w10
  404b14:	add	x0, x26, #0x418
  404b18:	str	x0, [sp, #112]
  404b1c:	str	wzr, [sp, #120]
  404b20:	b	404974 <ferror@plt+0x2cd4>
  404b24:	cbnz	w20, 404dcc <ferror@plt+0x312c>
  404b28:	mov	w5, #0x0                   	// #0
  404b2c:	cbnz	x23, 404e04 <ferror@plt+0x3164>
  404b30:	adrp	x26, 407000 <_obstack_memory_used@@Base+0x7f8>
  404b34:	mov	x12, #0x1                   	// #1
  404b38:	add	x0, x26, #0x418
  404b3c:	mov	x19, x12
  404b40:	mov	w10, #0x1                   	// #1
  404b44:	mov	w7, #0x0                   	// #0
  404b48:	mov	w11, #0x0                   	// #0
  404b4c:	mov	w26, #0x2                   	// #2
  404b50:	str	x0, [sp, #112]
  404b54:	str	wzr, [sp, #120]
  404b58:	str	xzr, [sp, #128]
  404b5c:	b	403f18 <ferror@plt+0x2278>
  404b60:	mov	w5, #0x0                   	// #0
  404b64:	b	40489c <ferror@plt+0x2bfc>
  404b68:	mov	w10, #0x1                   	// #1
  404b6c:	mov	x12, #0x1                   	// #1
  404b70:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  404b74:	mov	w5, w10
  404b78:	add	x0, x0, #0x3f0
  404b7c:	mov	x19, x12
  404b80:	mov	w7, #0x0                   	// #0
  404b84:	mov	w11, #0x0                   	// #0
  404b88:	str	x0, [sp, #112]
  404b8c:	str	wzr, [sp, #120]
  404b90:	str	xzr, [sp, #128]
  404b94:	b	403f18 <ferror@plt+0x2278>
  404b98:	mov	w1, w21
  404b9c:	mov	w4, #0x30                  	// #48
  404ba0:	mov	w21, #0x0                   	// #0
  404ba4:	cbnz	w5, 4040c4 <ferror@plt+0x2424>
  404ba8:	b	4041cc <ferror@plt+0x252c>
  404bac:	ldrb	w3, [x27, x7]
  404bb0:	cmp	w3, #0x3e
  404bb4:	b.hi	404db8 <ferror@plt+0x3118>  // b.pmore
  404bb8:	mov	x0, #0x1                   	// #1
  404bbc:	mov	x2, #0xa38200000000        	// #179778741075968
  404bc0:	movk	x2, #0x7000, lsl #48
  404bc4:	lsl	x0, x0, x3
  404bc8:	mov	w1, #0x0                   	// #0
  404bcc:	tst	x0, x2
  404bd0:	mov	w21, #0x0                   	// #0
  404bd4:	b.eq	404288 <ferror@plt+0x25e8>  // b.none
  404bd8:	cbnz	w11, 404308 <ferror@plt+0x2668>
  404bdc:	cmp	x23, x19
  404be0:	b.ls	404be8 <ferror@plt+0x2f48>  // b.plast
  404be4:	strb	w4, [x28, x19]
  404be8:	add	x0, x19, #0x1
  404bec:	cmp	x23, x0
  404bf0:	b.ls	404bfc <ferror@plt+0x2f5c>  // b.plast
  404bf4:	mov	w1, #0x22                  	// #34
  404bf8:	strb	w1, [x28, x0]
  404bfc:	add	x0, x19, #0x2
  404c00:	cmp	x23, x0
  404c04:	b.ls	404c10 <ferror@plt+0x2f70>  // b.plast
  404c08:	mov	w1, #0x22                  	// #34
  404c0c:	strb	w1, [x28, x0]
  404c10:	add	x0, x19, #0x3
  404c14:	cmp	x23, x0
  404c18:	b.ls	404c24 <ferror@plt+0x2f84>  // b.plast
  404c1c:	mov	w1, #0x3f                  	// #63
  404c20:	strb	w1, [x28, x0]
  404c24:	add	x19, x19, #0x4
  404c28:	mov	w4, w3
  404c2c:	mov	x20, x7
  404c30:	mov	w0, #0x0                   	// #0
  404c34:	mov	w21, #0x0                   	// #0
  404c38:	b	404500 <ferror@plt+0x2860>
  404c3c:	mov	w10, #0x1                   	// #1
  404c40:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  404c44:	mov	w11, w10
  404c48:	add	x0, x0, #0x3f0
  404c4c:	mov	w5, w10
  404c50:	mov	w7, #0x0                   	// #0
  404c54:	mov	x12, #0x1                   	// #1
  404c58:	mov	x19, #0x0                   	// #0
  404c5c:	str	x0, [sp, #112]
  404c60:	str	wzr, [sp, #120]
  404c64:	str	xzr, [sp, #128]
  404c68:	b	403f18 <ferror@plt+0x2278>
  404c6c:	mov	w0, w5
  404c70:	b	4049f0 <ferror@plt+0x2d50>
  404c74:	mov	w0, w5
  404c78:	b	404aa4 <ferror@plt+0x2e04>
  404c7c:	ldr	x1, [sp, #208]
  404c80:	ldrb	w0, [x1]
  404c84:	cbz	w0, 403e98 <ferror@plt+0x21f8>
  404c88:	cmp	x23, x19
  404c8c:	b.ls	404c94 <ferror@plt+0x2ff4>  // b.plast
  404c90:	strb	w0, [x28, x19]
  404c94:	add	x19, x19, #0x1
  404c98:	ldrb	w0, [x1, x19]
  404c9c:	cbnz	w0, 404c88 <ferror@plt+0x2fe8>
  404ca0:	b	403e98 <ferror@plt+0x21f8>
  404ca4:	mov	x8, x21
  404ca8:	ldr	w11, [sp, #136]
  404cac:	ldr	w24, [sp, #152]
  404cb0:	mov	w2, w22
  404cb4:	ldr	w10, [sp, #160]
  404cb8:	mov	w21, #0x0                   	// #0
  404cbc:	ldp	w4, w5, [sp, #172]
  404cc0:	ldr	x12, [sp, #144]
  404cc4:	ldr	x19, [sp, #184]
  404cc8:	ldr	x6, [sp, #216]
  404ccc:	b	4047d8 <ferror@plt+0x2b38>
  404cd0:	mov	x9, x24
  404cd4:	cmp	x24, x25
  404cd8:	ldr	w11, [sp, #136]
  404cdc:	mov	x8, x21
  404ce0:	ldr	w24, [sp, #152]
  404ce4:	ldr	w10, [sp, #160]
  404ce8:	ldp	w4, w5, [sp, #172]
  404cec:	ldr	x12, [sp, #144]
  404cf0:	ldr	x19, [sp, #184]
  404cf4:	ldr	x6, [sp, #216]
  404cf8:	b.cc	404d10 <ferror@plt+0x3070>  // b.lo, b.ul, b.last
  404cfc:	b	404d18 <ferror@plt+0x3078>
  404d00:	add	x8, x8, #0x1
  404d04:	add	x9, x20, x8
  404d08:	cmp	x25, x9
  404d0c:	b.ls	404d18 <ferror@plt+0x3078>  // b.plast
  404d10:	ldrb	w0, [x27, x9]
  404d14:	cbnz	w0, 404d00 <ferror@plt+0x3060>
  404d18:	mov	w2, w22
  404d1c:	mov	w21, #0x0                   	// #0
  404d20:	b	4047d8 <ferror@plt+0x2b38>
  404d24:	mov	w0, w11
  404d28:	ldr	x1, [sp, #112]
  404d2c:	cmp	x1, #0x0
  404d30:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404d34:	b.eq	404d5c <ferror@plt+0x30bc>  // b.none
  404d38:	ldrb	w0, [x1]
  404d3c:	cbz	w0, 404d5c <ferror@plt+0x30bc>
  404d40:	sub	x26, x1, x19
  404d44:	cmp	x23, x19
  404d48:	b.ls	404d50 <ferror@plt+0x30b0>  // b.plast
  404d4c:	strb	w0, [x28, x19]
  404d50:	add	x19, x19, #0x1
  404d54:	ldrb	w0, [x26, x19]
  404d58:	cbnz	w0, 404d44 <ferror@plt+0x30a4>
  404d5c:	cmp	x23, x19
  404d60:	b.ls	40433c <ferror@plt+0x269c>  // b.plast
  404d64:	strb	wzr, [x28, x19]
  404d68:	b	40433c <ferror@plt+0x269c>
  404d6c:	mov	w5, w22
  404d70:	b	4042fc <ferror@plt+0x265c>
  404d74:	cmp	w26, #0x2
  404d78:	cset	w5, eq  // eq = none
  404d7c:	b	4042fc <ferror@plt+0x265c>
  404d80:	ldr	w5, [sp, #200]
  404d84:	mov	x3, x25
  404d88:	ldr	x1, [sp, #128]
  404d8c:	mov	x2, x27
  404d90:	ldr	x7, [sp, #208]
  404d94:	mov	w4, #0x5                   	// #5
  404d98:	ldr	x0, [sp, #240]
  404d9c:	str	x0, [sp]
  404da0:	mov	x0, x28
  404da4:	bl	403e08 <ferror@plt+0x2168>
  404da8:	mov	x19, x0
  404dac:	b	40433c <ferror@plt+0x269c>
  404db0:	ldr	w0, [sp, #120]
  404db4:	b	404d28 <ferror@plt+0x3088>
  404db8:	mov	w1, #0x0                   	// #0
  404dbc:	mov	w21, #0x0                   	// #0
  404dc0:	b	404288 <ferror@plt+0x25e8>
  404dc4:	mov	w26, #0x2                   	// #2
  404dc8:	b	4042fc <ferror@plt+0x265c>
  404dcc:	mov	w10, #0x1                   	// #1
  404dd0:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  404dd4:	mov	w11, w10
  404dd8:	add	x0, x0, #0x418
  404ddc:	mov	w7, #0x0                   	// #0
  404de0:	mov	w5, #0x0                   	// #0
  404de4:	mov	x12, #0x1                   	// #1
  404de8:	mov	x19, #0x0                   	// #0
  404dec:	str	x0, [sp, #112]
  404df0:	str	wzr, [sp, #120]
  404df4:	str	xzr, [sp, #128]
  404df8:	b	403f18 <ferror@plt+0x2278>
  404dfc:	ldr	x23, [sp, #128]
  404e00:	b	4041a8 <ferror@plt+0x2508>
  404e04:	mov	w7, #0x0                   	// #0
  404e08:	mov	w0, #0x0                   	// #0
  404e0c:	mov	w10, #0x1                   	// #1
  404e10:	mov	x1, #0x0                   	// #0
  404e14:	str	x23, [sp, #128]
  404e18:	b	404068 <ferror@plt+0x23c8>
  404e1c:	bl	401ab0 <abort@plt>
  404e20:	sub	sp, sp, #0x80
  404e24:	stp	x29, x30, [sp, #16]
  404e28:	add	x29, sp, #0x10
  404e2c:	stp	x19, x20, [sp, #32]
  404e30:	mov	w19, w0
  404e34:	mov	x20, x3
  404e38:	stp	x21, x22, [sp, #48]
  404e3c:	stp	x23, x24, [sp, #64]
  404e40:	mov	x23, x1
  404e44:	mov	x24, x2
  404e48:	stp	x25, x26, [sp, #80]
  404e4c:	stp	x27, x28, [sp, #96]
  404e50:	bl	401c50 <__errno_location@plt>
  404e54:	mov	x22, x0
  404e58:	ldr	w0, [x0]
  404e5c:	adrp	x27, 419000 <_obstack_memory_used@@Base+0x127f8>
  404e60:	str	w0, [sp, #116]
  404e64:	ldr	x21, [x27, #560]
  404e68:	tbnz	w19, #31, 404fc0 <ferror@plt+0x3320>
  404e6c:	add	x26, x27, #0x230
  404e70:	ldr	w0, [x26, #8]
  404e74:	cmp	w0, w19
  404e78:	b.gt	404ec8 <ferror@plt+0x3228>
  404e7c:	mov	w0, #0x7fffffff            	// #2147483647
  404e80:	cmp	w19, w0
  404e84:	b.eq	404fbc <ferror@plt+0x331c>  // b.none
  404e88:	add	w28, w19, #0x1
  404e8c:	add	x0, x26, #0x10
  404e90:	cmp	x21, x0
  404e94:	sbfiz	x1, x28, #4, #32
  404e98:	b.eq	404fa0 <ferror@plt+0x3300>  // b.none
  404e9c:	mov	x0, x21
  404ea0:	bl	406080 <ferror@plt+0x43e0>
  404ea4:	mov	x21, x0
  404ea8:	str	x0, [x27, #560]
  404eac:	ldr	w0, [x26, #8]
  404eb0:	mov	w1, #0x0                   	// #0
  404eb4:	sub	w2, w28, w0
  404eb8:	add	x0, x21, w0, sxtw #4
  404ebc:	sbfiz	x2, x2, #4, #32
  404ec0:	bl	401a30 <memset@plt>
  404ec4:	str	w28, [x26, #8]
  404ec8:	sbfiz	x19, x19, #4, #32
  404ecc:	add	x26, x20, #0x8
  404ed0:	add	x0, x21, x19
  404ed4:	str	x0, [sp, #120]
  404ed8:	ldp	w4, w5, [x20]
  404edc:	mov	x6, x26
  404ee0:	ldr	x7, [x20, #40]
  404ee4:	orr	w25, w5, #0x1
  404ee8:	ldr	x27, [x21, x19]
  404eec:	mov	x3, x24
  404ef0:	ldr	x28, [x0, #8]
  404ef4:	mov	x1, x27
  404ef8:	ldr	x0, [x20, #48]
  404efc:	str	x0, [sp]
  404f00:	mov	x2, x23
  404f04:	mov	w5, w25
  404f08:	mov	x0, x28
  404f0c:	bl	403e08 <ferror@plt+0x2168>
  404f10:	cmp	x27, x0
  404f14:	b.hi	404f74 <ferror@plt+0x32d4>  // b.pmore
  404f18:	add	x27, x0, #0x1
  404f1c:	str	x27, [x21, x19]
  404f20:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  404f24:	add	x0, x0, #0x340
  404f28:	cmp	x28, x0
  404f2c:	b.eq	404f38 <ferror@plt+0x3298>  // b.none
  404f30:	mov	x0, x28
  404f34:	bl	401b70 <free@plt>
  404f38:	mov	x0, x27
  404f3c:	bl	406020 <ferror@plt+0x4380>
  404f40:	ldr	x1, [sp, #120]
  404f44:	mov	x28, x0
  404f48:	ldr	w4, [x20]
  404f4c:	mov	x6, x26
  404f50:	ldr	x7, [x20, #40]
  404f54:	str	x0, [x1, #8]
  404f58:	ldr	x1, [x20, #48]
  404f5c:	str	x1, [sp]
  404f60:	mov	w5, w25
  404f64:	mov	x3, x24
  404f68:	mov	x2, x23
  404f6c:	mov	x1, x27
  404f70:	bl	403e08 <ferror@plt+0x2168>
  404f74:	ldr	w0, [sp, #116]
  404f78:	ldp	x29, x30, [sp, #16]
  404f7c:	ldp	x19, x20, [sp, #32]
  404f80:	ldp	x23, x24, [sp, #64]
  404f84:	ldp	x25, x26, [sp, #80]
  404f88:	str	w0, [x22]
  404f8c:	mov	x0, x28
  404f90:	ldp	x21, x22, [sp, #48]
  404f94:	ldp	x27, x28, [sp, #96]
  404f98:	add	sp, sp, #0x80
  404f9c:	ret
  404fa0:	mov	x0, #0x0                   	// #0
  404fa4:	bl	406080 <ferror@plt+0x43e0>
  404fa8:	mov	x21, x0
  404fac:	str	x0, [x27, #560]
  404fb0:	ldp	x0, x1, [x26, #16]
  404fb4:	stp	x0, x1, [x21]
  404fb8:	b	404eac <ferror@plt+0x320c>
  404fbc:	bl	406278 <ferror@plt+0x45d8>
  404fc0:	bl	401ab0 <abort@plt>
  404fc4:	nop
  404fc8:	stp	x29, x30, [sp, #-48]!
  404fcc:	mov	x29, sp
  404fd0:	stp	x19, x20, [sp, #16]
  404fd4:	mov	x20, x0
  404fd8:	str	x21, [sp, #32]
  404fdc:	bl	401c50 <__errno_location@plt>
  404fe0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x127f8>
  404fe4:	mov	x19, x0
  404fe8:	add	x2, x2, #0x340
  404fec:	cmp	x20, #0x0
  404ff0:	add	x2, x2, #0x100
  404ff4:	mov	x1, #0x38                  	// #56
  404ff8:	ldr	w21, [x19]
  404ffc:	csel	x0, x2, x20, eq  // eq = none
  405000:	bl	406218 <ferror@plt+0x4578>
  405004:	str	w21, [x19]
  405008:	ldp	x19, x20, [sp, #16]
  40500c:	ldr	x21, [sp, #32]
  405010:	ldp	x29, x30, [sp], #48
  405014:	ret
  405018:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  40501c:	add	x1, x1, #0x340
  405020:	cmp	x0, #0x0
  405024:	add	x1, x1, #0x100
  405028:	csel	x0, x1, x0, eq  // eq = none
  40502c:	ldr	w0, [x0]
  405030:	ret
  405034:	nop
  405038:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x127f8>
  40503c:	add	x2, x2, #0x340
  405040:	cmp	x0, #0x0
  405044:	add	x2, x2, #0x100
  405048:	csel	x0, x2, x0, eq  // eq = none
  40504c:	str	w1, [x0]
  405050:	ret
  405054:	nop
  405058:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  40505c:	add	x3, x3, #0x340
  405060:	cmp	x0, #0x0
  405064:	add	x3, x3, #0x100
  405068:	csel	x0, x3, x0, eq  // eq = none
  40506c:	ubfx	x4, x1, #5, #3
  405070:	add	x3, x0, #0x8
  405074:	and	w1, w1, #0x1f
  405078:	ldr	w5, [x3, x4, lsl #2]
  40507c:	lsr	w0, w5, w1
  405080:	eor	w2, w0, w2
  405084:	and	w2, w2, #0x1
  405088:	and	w0, w0, #0x1
  40508c:	lsl	w2, w2, w1
  405090:	eor	w2, w2, w5
  405094:	str	w2, [x3, x4, lsl #2]
  405098:	ret
  40509c:	nop
  4050a0:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  4050a4:	add	x3, x3, #0x340
  4050a8:	cmp	x0, #0x0
  4050ac:	add	x3, x3, #0x100
  4050b0:	csel	x2, x3, x0, eq  // eq = none
  4050b4:	ldr	w0, [x2, #4]
  4050b8:	str	w1, [x2, #4]
  4050bc:	ret
  4050c0:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  4050c4:	add	x3, x3, #0x340
  4050c8:	cmp	x0, #0x0
  4050cc:	add	x3, x3, #0x100
  4050d0:	csel	x0, x3, x0, eq  // eq = none
  4050d4:	mov	w3, #0xa                   	// #10
  4050d8:	cmp	x1, #0x0
  4050dc:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  4050e0:	str	w3, [x0]
  4050e4:	b.eq	4050f0 <ferror@plt+0x3450>  // b.none
  4050e8:	stp	x1, x2, [x0, #40]
  4050ec:	ret
  4050f0:	stp	x29, x30, [sp, #-16]!
  4050f4:	mov	x29, sp
  4050f8:	bl	401ab0 <abort@plt>
  4050fc:	nop
  405100:	sub	sp, sp, #0x50
  405104:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x127f8>
  405108:	stp	x29, x30, [sp, #16]
  40510c:	add	x29, sp, #0x10
  405110:	stp	x19, x20, [sp, #32]
  405114:	mov	x19, x4
  405118:	add	x4, x5, #0x340
  40511c:	cmp	x19, #0x0
  405120:	add	x4, x4, #0x100
  405124:	csel	x19, x4, x19, eq  // eq = none
  405128:	mov	x20, x3
  40512c:	stp	x21, x22, [sp, #48]
  405130:	mov	x21, x0
  405134:	mov	x22, x1
  405138:	str	x23, [sp, #64]
  40513c:	mov	x23, x2
  405140:	bl	401c50 <__errno_location@plt>
  405144:	ldp	x7, x8, [x19, #40]
  405148:	mov	x3, x20
  40514c:	mov	x20, x0
  405150:	mov	x0, x21
  405154:	ldp	w4, w5, [x19]
  405158:	mov	x2, x23
  40515c:	ldr	w21, [x20]
  405160:	mov	x1, x22
  405164:	str	x8, [sp]
  405168:	add	x6, x19, #0x8
  40516c:	bl	403e08 <ferror@plt+0x2168>
  405170:	ldp	x29, x30, [sp, #16]
  405174:	ldr	x23, [sp, #64]
  405178:	str	w21, [x20]
  40517c:	ldp	x19, x20, [sp, #32]
  405180:	ldp	x21, x22, [sp, #48]
  405184:	add	sp, sp, #0x50
  405188:	ret
  40518c:	nop
  405190:	sub	sp, sp, #0x70
  405194:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x127f8>
  405198:	add	x4, x4, #0x340
  40519c:	cmp	x3, #0x0
  4051a0:	add	x4, x4, #0x100
  4051a4:	stp	x29, x30, [sp, #16]
  4051a8:	add	x29, sp, #0x10
  4051ac:	stp	x19, x20, [sp, #32]
  4051b0:	csel	x19, x4, x3, eq  // eq = none
  4051b4:	mov	x20, x2
  4051b8:	stp	x21, x22, [sp, #48]
  4051bc:	mov	x22, x0
  4051c0:	stp	x23, x24, [sp, #64]
  4051c4:	mov	x23, x1
  4051c8:	stp	x25, x26, [sp, #80]
  4051cc:	stp	x27, x28, [sp, #96]
  4051d0:	bl	401c50 <__errno_location@plt>
  4051d4:	ldr	w28, [x0]
  4051d8:	ldp	w4, w5, [x19]
  4051dc:	mov	x21, x0
  4051e0:	ldp	x7, x0, [x19, #40]
  4051e4:	cmp	x20, #0x0
  4051e8:	cset	w24, eq  // eq = none
  4051ec:	add	x27, x19, #0x8
  4051f0:	orr	w24, w24, w5
  4051f4:	mov	x6, x27
  4051f8:	mov	x3, x23
  4051fc:	mov	x2, x22
  405200:	mov	w5, w24
  405204:	str	x0, [sp]
  405208:	mov	x1, #0x0                   	// #0
  40520c:	mov	x0, #0x0                   	// #0
  405210:	bl	403e08 <ferror@plt+0x2168>
  405214:	add	x26, x0, #0x1
  405218:	mov	x25, x0
  40521c:	mov	x0, x26
  405220:	bl	406020 <ferror@plt+0x4380>
  405224:	ldp	x7, x1, [x19, #40]
  405228:	mov	w5, w24
  40522c:	ldr	w4, [x19]
  405230:	mov	x6, x27
  405234:	str	x1, [sp]
  405238:	mov	x3, x23
  40523c:	mov	x2, x22
  405240:	mov	x19, x0
  405244:	mov	x1, x26
  405248:	bl	403e08 <ferror@plt+0x2168>
  40524c:	str	w28, [x21]
  405250:	cbz	x20, 405258 <ferror@plt+0x35b8>
  405254:	str	x25, [x20]
  405258:	mov	x0, x19
  40525c:	ldp	x29, x30, [sp, #16]
  405260:	ldp	x19, x20, [sp, #32]
  405264:	ldp	x21, x22, [sp, #48]
  405268:	ldp	x23, x24, [sp, #64]
  40526c:	ldp	x25, x26, [sp, #80]
  405270:	ldp	x27, x28, [sp, #96]
  405274:	add	sp, sp, #0x70
  405278:	ret
  40527c:	nop
  405280:	mov	x3, x2
  405284:	mov	x2, #0x0                   	// #0
  405288:	b	405190 <ferror@plt+0x34f0>
  40528c:	nop
  405290:	stp	x29, x30, [sp, #-64]!
  405294:	mov	x29, sp
  405298:	stp	x21, x22, [sp, #32]
  40529c:	str	x23, [sp, #48]
  4052a0:	adrp	x23, 419000 <_obstack_memory_used@@Base+0x127f8>
  4052a4:	add	x22, x23, #0x230
  4052a8:	stp	x19, x20, [sp, #16]
  4052ac:	ldr	x21, [x23, #560]
  4052b0:	ldr	w20, [x22, #8]
  4052b4:	cmp	w20, #0x1
  4052b8:	b.le	4052e0 <ferror@plt+0x3640>
  4052bc:	sub	w0, w20, #0x2
  4052c0:	add	x20, x21, #0x28
  4052c4:	add	x19, x21, #0x18
  4052c8:	add	x20, x20, w0, uxtw #4
  4052cc:	nop
  4052d0:	ldr	x0, [x19], #16
  4052d4:	bl	401b70 <free@plt>
  4052d8:	cmp	x19, x20
  4052dc:	b.ne	4052d0 <ferror@plt+0x3630>  // b.any
  4052e0:	ldr	x0, [x21, #8]
  4052e4:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x127f8>
  4052e8:	add	x19, x19, #0x340
  4052ec:	cmp	x0, x19
  4052f0:	b.eq	405300 <ferror@plt+0x3660>  // b.none
  4052f4:	bl	401b70 <free@plt>
  4052f8:	mov	x0, #0x100                 	// #256
  4052fc:	stp	x0, x19, [x22, #16]
  405300:	add	x19, x22, #0x10
  405304:	cmp	x21, x19
  405308:	b.eq	405318 <ferror@plt+0x3678>  // b.none
  40530c:	mov	x0, x21
  405310:	bl	401b70 <free@plt>
  405314:	str	x19, [x23, #560]
  405318:	mov	w0, #0x1                   	// #1
  40531c:	str	w0, [x22, #8]
  405320:	ldp	x19, x20, [sp, #16]
  405324:	ldp	x21, x22, [sp, #32]
  405328:	ldr	x23, [sp, #48]
  40532c:	ldp	x29, x30, [sp], #64
  405330:	ret
  405334:	nop
  405338:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  40533c:	add	x3, x3, #0x340
  405340:	add	x3, x3, #0x100
  405344:	mov	x2, #0xffffffffffffffff    	// #-1
  405348:	b	404e20 <ferror@plt+0x3180>
  40534c:	nop
  405350:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  405354:	add	x3, x3, #0x340
  405358:	add	x3, x3, #0x100
  40535c:	b	404e20 <ferror@plt+0x3180>
  405360:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  405364:	add	x3, x3, #0x340
  405368:	mov	x1, x0
  40536c:	add	x3, x3, #0x100
  405370:	mov	x2, #0xffffffffffffffff    	// #-1
  405374:	mov	w0, #0x0                   	// #0
  405378:	b	404e20 <ferror@plt+0x3180>
  40537c:	nop
  405380:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  405384:	add	x3, x3, #0x340
  405388:	mov	x2, x1
  40538c:	add	x3, x3, #0x100
  405390:	mov	x1, x0
  405394:	mov	w0, #0x0                   	// #0
  405398:	b	404e20 <ferror@plt+0x3180>
  40539c:	nop
  4053a0:	stp	x29, x30, [sp, #-96]!
  4053a4:	add	x8, sp, #0x28
  4053a8:	mov	x29, sp
  4053ac:	stp	x19, x20, [sp, #16]
  4053b0:	mov	x20, x2
  4053b4:	mov	w19, w0
  4053b8:	mov	w0, w1
  4053bc:	bl	403c70 <ferror@plt+0x1fd0>
  4053c0:	add	x3, sp, #0x28
  4053c4:	mov	x1, x20
  4053c8:	mov	w0, w19
  4053cc:	mov	x2, #0xffffffffffffffff    	// #-1
  4053d0:	bl	404e20 <ferror@plt+0x3180>
  4053d4:	ldp	x19, x20, [sp, #16]
  4053d8:	ldp	x29, x30, [sp], #96
  4053dc:	ret
  4053e0:	stp	x29, x30, [sp, #-112]!
  4053e4:	add	x8, sp, #0x38
  4053e8:	mov	x29, sp
  4053ec:	stp	x19, x20, [sp, #16]
  4053f0:	mov	x20, x2
  4053f4:	mov	w19, w0
  4053f8:	mov	w0, w1
  4053fc:	str	x21, [sp, #32]
  405400:	mov	x21, x3
  405404:	bl	403c70 <ferror@plt+0x1fd0>
  405408:	add	x3, sp, #0x38
  40540c:	mov	x2, x21
  405410:	mov	x1, x20
  405414:	mov	w0, w19
  405418:	bl	404e20 <ferror@plt+0x3180>
  40541c:	ldp	x19, x20, [sp, #16]
  405420:	ldr	x21, [sp, #32]
  405424:	ldp	x29, x30, [sp], #112
  405428:	ret
  40542c:	nop
  405430:	mov	x2, x1
  405434:	mov	w1, w0
  405438:	mov	w0, #0x0                   	// #0
  40543c:	b	4053a0 <ferror@plt+0x3700>
  405440:	mov	x4, x1
  405444:	mov	x3, x2
  405448:	mov	w1, w0
  40544c:	mov	x2, x4
  405450:	mov	w0, #0x0                   	// #0
  405454:	b	4053e0 <ferror@plt+0x3740>
  405458:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  40545c:	add	x3, x3, #0x340
  405460:	stp	x29, x30, [sp, #-80]!
  405464:	add	x5, x3, #0x100
  405468:	ubfx	x7, x2, #5, #3
  40546c:	mov	x29, sp
  405470:	ldp	x8, x9, [x3, #256]
  405474:	stp	x8, x9, [sp, #24]
  405478:	add	x6, sp, #0x20
  40547c:	and	w8, w2, #0x1f
  405480:	add	x4, sp, #0x18
  405484:	ldp	x2, x3, [x3, #272]
  405488:	stp	x2, x3, [sp, #40]
  40548c:	ldp	x2, x3, [x5, #32]
  405490:	stp	x2, x3, [sp, #56]
  405494:	mov	x2, x1
  405498:	mov	x3, x4
  40549c:	ldr	x1, [x5, #48]
  4054a0:	str	x1, [sp, #72]
  4054a4:	mov	x1, x0
  4054a8:	mov	w0, #0x0                   	// #0
  4054ac:	ldr	w5, [x6, x7, lsl #2]
  4054b0:	lsr	w4, w5, w8
  4054b4:	mvn	w4, w4
  4054b8:	and	w4, w4, #0x1
  4054bc:	lsl	w4, w4, w8
  4054c0:	eor	w4, w4, w5
  4054c4:	str	w4, [x6, x7, lsl #2]
  4054c8:	bl	404e20 <ferror@plt+0x3180>
  4054cc:	ldp	x29, x30, [sp], #80
  4054d0:	ret
  4054d4:	nop
  4054d8:	mov	w2, w1
  4054dc:	mov	x1, #0xffffffffffffffff    	// #-1
  4054e0:	b	405458 <ferror@plt+0x37b8>
  4054e4:	nop
  4054e8:	mov	w2, #0x3a                  	// #58
  4054ec:	mov	x1, #0xffffffffffffffff    	// #-1
  4054f0:	b	405458 <ferror@plt+0x37b8>
  4054f4:	nop
  4054f8:	mov	w2, #0x3a                  	// #58
  4054fc:	b	405458 <ferror@plt+0x37b8>
  405500:	stp	x29, x30, [sp, #-160]!
  405504:	mov	x29, sp
  405508:	add	x8, sp, #0x20
  40550c:	stp	x19, x20, [sp, #16]
  405510:	mov	x20, x2
  405514:	mov	w19, w0
  405518:	mov	w0, w1
  40551c:	bl	403c70 <ferror@plt+0x1fd0>
  405520:	ldp	x0, x1, [sp, #32]
  405524:	stp	x0, x1, [sp, #104]
  405528:	add	x3, sp, #0x68
  40552c:	ldr	w2, [sp, #116]
  405530:	mov	x1, x20
  405534:	ldp	x6, x7, [sp, #48]
  405538:	mvn	w4, w2
  40553c:	ldp	x8, x9, [sp, #64]
  405540:	and	w4, w4, #0x4000000
  405544:	ldr	x5, [sp, #80]
  405548:	eor	w4, w4, w2
  40554c:	mov	w0, w19
  405550:	mov	x2, #0xffffffffffffffff    	// #-1
  405554:	str	w4, [sp, #116]
  405558:	stp	x6, x7, [sp, #120]
  40555c:	stp	x8, x9, [sp, #136]
  405560:	str	x5, [sp, #152]
  405564:	bl	404e20 <ferror@plt+0x3180>
  405568:	ldp	x19, x20, [sp, #16]
  40556c:	ldp	x29, x30, [sp], #160
  405570:	ret
  405574:	nop
  405578:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x127f8>
  40557c:	add	x5, x5, #0x340
  405580:	stp	x29, x30, [sp, #-80]!
  405584:	mov	x6, x1
  405588:	mov	w1, #0xa                   	// #10
  40558c:	mov	x29, sp
  405590:	ldp	x8, x9, [x5, #256]
  405594:	stp	x8, x9, [sp, #24]
  405598:	cmp	x6, #0x0
  40559c:	str	w1, [sp, #24]
  4055a0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  4055a4:	ldp	x10, x11, [x5, #272]
  4055a8:	stp	x10, x11, [sp, #40]
  4055ac:	ldp	x8, x9, [x5, #288]
  4055b0:	stp	x8, x9, [sp, #56]
  4055b4:	ldr	x1, [x5, #304]
  4055b8:	str	x1, [sp, #72]
  4055bc:	b.eq	4055e0 <ferror@plt+0x3940>  // b.none
  4055c0:	mov	x5, x2
  4055c4:	mov	x1, x3
  4055c8:	mov	x2, x4
  4055cc:	add	x3, sp, #0x18
  4055d0:	stp	x6, x5, [sp, #64]
  4055d4:	bl	404e20 <ferror@plt+0x3180>
  4055d8:	ldp	x29, x30, [sp], #80
  4055dc:	ret
  4055e0:	bl	401ab0 <abort@plt>
  4055e4:	nop
  4055e8:	mov	x4, #0xffffffffffffffff    	// #-1
  4055ec:	b	405578 <ferror@plt+0x38d8>
  4055f0:	mov	x4, x1
  4055f4:	mov	x3, x2
  4055f8:	mov	x1, x0
  4055fc:	mov	x2, x4
  405600:	mov	w0, #0x0                   	// #0
  405604:	mov	x4, #0xffffffffffffffff    	// #-1
  405608:	b	405578 <ferror@plt+0x38d8>
  40560c:	nop
  405610:	mov	x4, x1
  405614:	mov	x5, x2
  405618:	mov	x1, x0
  40561c:	mov	x2, x4
  405620:	mov	w0, #0x0                   	// #0
  405624:	mov	x4, x3
  405628:	mov	x3, x5
  40562c:	b	405578 <ferror@plt+0x38d8>
  405630:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  405634:	add	x3, x3, #0x230
  405638:	add	x3, x3, #0x20
  40563c:	b	404e20 <ferror@plt+0x3180>
  405640:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  405644:	add	x3, x3, #0x230
  405648:	mov	x2, x1
  40564c:	add	x3, x3, #0x20
  405650:	mov	x1, x0
  405654:	mov	w0, #0x0                   	// #0
  405658:	b	404e20 <ferror@plt+0x3180>
  40565c:	nop
  405660:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  405664:	add	x3, x3, #0x230
  405668:	add	x3, x3, #0x20
  40566c:	mov	x2, #0xffffffffffffffff    	// #-1
  405670:	b	404e20 <ferror@plt+0x3180>
  405674:	nop
  405678:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x127f8>
  40567c:	add	x3, x3, #0x230
  405680:	mov	x1, x0
  405684:	add	x3, x3, #0x20
  405688:	mov	x2, #0xffffffffffffffff    	// #-1
  40568c:	mov	w0, #0x0                   	// #0
  405690:	b	404e20 <ferror@plt+0x3180>
  405694:	nop
  405698:	stp	x29, x30, [sp, #-48]!
  40569c:	add	x1, x0, #0x18
  4056a0:	mov	x29, sp
  4056a4:	stp	x19, x20, [sp, #16]
  4056a8:	mov	x19, x0
  4056ac:	ldp	x20, x0, [x1, #16]
  4056b0:	stp	x21, x22, [sp, #32]
  4056b4:	subs	x22, x0, x20
  4056b8:	sub	x22, x22, #0x1
  4056bc:	b.eq	405788 <ferror@plt+0x3ae8>  // b.none
  4056c0:	ldr	x2, [x1, #48]
  4056c4:	ldr	x3, [x1, #8]
  4056c8:	add	x0, x0, x2
  4056cc:	ldr	x4, [x1, #32]
  4056d0:	bic	x2, x0, x2
  4056d4:	str	x2, [x1, #24]
  4056d8:	sub	x0, x2, x3
  4056dc:	sub	x3, x4, x3
  4056e0:	cmp	x0, x3
  4056e4:	b.ls	4056f0 <ferror@plt+0x3a50>  // b.plast
  4056e8:	mov	x2, x4
  4056ec:	str	x4, [x1, #24]
  4056f0:	ldr	x0, [x19, #144]
  4056f4:	str	x2, [x1, #16]
  4056f8:	ldr	x1, [x19, #136]
  4056fc:	add	x21, x19, #0x70
  405700:	sub	x0, x0, x1
  405704:	cmp	x0, #0x7
  405708:	b.ls	405760 <ferror@plt+0x3ac0>  // b.plast
  40570c:	str	x20, [x1]
  405710:	add	x20, x19, #0xc8
  405714:	ldr	x1, [x21, #24]
  405718:	ldr	x0, [x20, #32]
  40571c:	add	x1, x1, #0x8
  405720:	str	x1, [x21, #24]
  405724:	ldr	x1, [x20, #24]
  405728:	sub	x0, x0, x1
  40572c:	cmp	x0, #0x7
  405730:	b.ls	405774 <ferror@plt+0x3ad4>  // b.plast
  405734:	str	x22, [x1]
  405738:	ldr	x1, [x20, #24]
  40573c:	ldr	x0, [x19]
  405740:	add	x1, x1, #0x8
  405744:	ldp	x21, x22, [sp, #32]
  405748:	str	x1, [x20, #24]
  40574c:	add	x0, x0, #0x1
  405750:	str	x0, [x19]
  405754:	ldp	x19, x20, [sp, #16]
  405758:	ldp	x29, x30, [sp], #48
  40575c:	ret
  405760:	mov	x1, #0x8                   	// #8
  405764:	mov	x0, x21
  405768:	bl	406628 <_obstack_newchunk@@Base>
  40576c:	ldr	x1, [x21, #24]
  405770:	b	40570c <ferror@plt+0x3a6c>
  405774:	mov	x1, #0x8                   	// #8
  405778:	mov	x0, x20
  40577c:	bl	406628 <_obstack_newchunk@@Base>
  405780:	ldr	x1, [x20, #24]
  405784:	b	405734 <ferror@plt+0x3a94>
  405788:	ldrb	w2, [x1, #80]
  40578c:	orr	w2, w2, #0x2
  405790:	strb	w2, [x1, #80]
  405794:	b	4056c0 <ferror@plt+0x3a20>
  405798:	stp	x29, x30, [sp, #-48]!
  40579c:	mov	x2, #0x0                   	// #0
  4057a0:	mov	x1, #0x0                   	// #0
  4057a4:	mov	x29, sp
  4057a8:	stp	x19, x20, [sp, #16]
  4057ac:	mov	x19, x0
  4057b0:	adrp	x20, 401000 <mbrtowc@plt-0x890>
  4057b4:	str	x21, [sp, #32]
  4057b8:	add	x20, x20, #0x9a0
  4057bc:	stp	xzr, xzr, [x19]
  4057c0:	adrp	x21, 401000 <mbrtowc@plt-0x890>
  4057c4:	add	x21, x21, #0xb70
  4057c8:	str	xzr, [x19, #16]
  4057cc:	mov	x3, x20
  4057d0:	mov	x4, x21
  4057d4:	add	x0, x0, #0x18
  4057d8:	bl	4065f8 <_obstack_begin@@Base>
  4057dc:	mov	x4, x21
  4057e0:	mov	x3, x20
  4057e4:	add	x0, x19, #0x70
  4057e8:	mov	x2, #0x0                   	// #0
  4057ec:	mov	x1, #0x0                   	// #0
  4057f0:	bl	4065f8 <_obstack_begin@@Base>
  4057f4:	mov	x4, x21
  4057f8:	mov	x3, x20
  4057fc:	add	x0, x19, #0xc8
  405800:	mov	x2, #0x0                   	// #0
  405804:	ldp	x19, x20, [sp, #16]
  405808:	mov	x1, #0x0                   	// #0
  40580c:	ldr	x21, [sp, #32]
  405810:	ldp	x29, x30, [sp], #48
  405814:	b	4065f8 <_obstack_begin@@Base>
  405818:	stp	x29, x30, [sp, #-32]!
  40581c:	mov	x1, #0x0                   	// #0
  405820:	mov	x29, sp
  405824:	str	x19, [sp, #16]
  405828:	mov	x19, x0
  40582c:	add	x0, x0, #0x18
  405830:	bl	406778 <_obstack_free@@Base>
  405834:	add	x0, x19, #0x70
  405838:	mov	x1, #0x0                   	// #0
  40583c:	bl	406778 <_obstack_free@@Base>
  405840:	add	x0, x19, #0xc8
  405844:	mov	x1, #0x0                   	// #0
  405848:	ldr	x19, [sp, #16]
  40584c:	ldp	x29, x30, [sp], #32
  405850:	b	406778 <_obstack_free@@Base>
  405854:	nop
  405858:	stp	x29, x30, [sp, #-48]!
  40585c:	mov	x29, sp
  405860:	stp	x19, x20, [sp, #16]
  405864:	add	x20, x1, #0x18
  405868:	stp	x21, x22, [sp, #32]
  40586c:	mov	x22, x1
  405870:	mov	x21, x0
  405874:	b	405888 <ferror@plt+0x3be8>
  405878:	add	x3, x2, #0x1
  40587c:	str	x3, [x20, #24]
  405880:	strb	w19, [x2]
  405884:	cbz	w19, 4058c8 <ferror@plt+0x3c28>
  405888:	mov	x0, x21
  40588c:	bl	401a10 <fgetc@plt>
  405890:	mov	w19, w0
  405894:	cmn	w0, #0x1
  405898:	b.eq	4058e8 <ferror@plt+0x3c48>  // b.none
  40589c:	ldp	x2, x3, [x20, #24]
  4058a0:	cmp	x3, x2
  4058a4:	b.ne	405878 <ferror@plt+0x3bd8>  // b.any
  4058a8:	mov	x0, x20
  4058ac:	mov	x1, #0x1                   	// #1
  4058b0:	bl	406628 <_obstack_newchunk@@Base>
  4058b4:	ldr	x2, [x20, #24]
  4058b8:	add	x3, x2, #0x1
  4058bc:	str	x3, [x20, #24]
  4058c0:	strb	w19, [x2]
  4058c4:	cbnz	w19, 405888 <ferror@plt+0x3be8>
  4058c8:	mov	x0, x22
  4058cc:	bl	405698 <ferror@plt+0x39f8>
  4058d0:	mov	x0, x21
  4058d4:	bl	401a10 <fgetc@plt>
  4058d8:	mov	w19, w0
  4058dc:	cmn	w0, #0x1
  4058e0:	b.ne	40589c <ferror@plt+0x3bfc>  // b.any
  4058e4:	nop
  4058e8:	ldp	x0, x1, [x20, #16]
  4058ec:	cmp	x1, x0
  4058f0:	b.eq	405914 <ferror@plt+0x3c74>  // b.none
  4058f4:	ldr	x0, [x20, #32]
  4058f8:	cmp	x1, x0
  4058fc:	b.eq	405a40 <ferror@plt+0x3da0>  // b.none
  405900:	add	x0, x1, #0x1
  405904:	str	x0, [x20, #24]
  405908:	strb	wzr, [x1]
  40590c:	mov	x0, x22
  405910:	bl	405698 <ferror@plt+0x39f8>
  405914:	add	x19, x22, #0x70
  405918:	ldp	x1, x0, [x19, #24]
  40591c:	sub	x0, x0, x1
  405920:	cmp	x0, #0x7
  405924:	b.ls	405a0c <ferror@plt+0x3d6c>  // b.plast
  405928:	str	xzr, [x1]
  40592c:	ldp	x3, x0, [x19, #16]
  405930:	add	x0, x0, #0x8
  405934:	cmp	x0, x3
  405938:	b.eq	405a30 <ferror@plt+0x3d90>  // b.none
  40593c:	ldr	x1, [x19, #48]
  405940:	ldr	x2, [x19, #8]
  405944:	add	x0, x0, x1
  405948:	ldr	x4, [x19, #32]
  40594c:	bic	x1, x0, x1
  405950:	str	x1, [x19, #24]
  405954:	sub	x0, x1, x2
  405958:	sub	x2, x4, x2
  40595c:	cmp	x0, x2
  405960:	b.hi	4059d8 <ferror@plt+0x3d38>  // b.pmore
  405964:	add	x0, x22, #0xc8
  405968:	str	x1, [x19, #16]
  40596c:	ldr	x4, [x0, #16]
  405970:	str	x3, [x22, #8]
  405974:	ldr	x3, [x0, #24]
  405978:	cmp	x3, x4
  40597c:	b.eq	4059fc <ferror@plt+0x3d5c>  // b.none
  405980:	ldr	x1, [x0, #48]
  405984:	ldr	x2, [x0, #8]
  405988:	add	x3, x3, x1
  40598c:	ldr	x5, [x0, #32]
  405990:	bic	x1, x3, x1
  405994:	str	x1, [x0, #24]
  405998:	sub	x3, x1, x2
  40599c:	sub	x2, x5, x2
  4059a0:	cmp	x3, x2
  4059a4:	b.ls	4059b0 <ferror@plt+0x3d10>  // b.plast
  4059a8:	mov	x1, x5
  4059ac:	str	x5, [x0, #24]
  4059b0:	str	x1, [x0, #16]
  4059b4:	mov	x0, x21
  4059b8:	str	x4, [x22, #16]
  4059bc:	bl	401ca0 <ferror@plt>
  4059c0:	cmp	w0, #0x0
  4059c4:	cset	w0, eq  // eq = none
  4059c8:	ldp	x19, x20, [sp, #16]
  4059cc:	ldp	x21, x22, [sp, #32]
  4059d0:	ldp	x29, x30, [sp], #48
  4059d4:	ret
  4059d8:	add	x0, x22, #0xc8
  4059dc:	mov	x1, x4
  4059e0:	str	x1, [x19, #16]
  4059e4:	str	x4, [x19, #24]
  4059e8:	ldr	x4, [x0, #16]
  4059ec:	str	x3, [x22, #8]
  4059f0:	ldr	x3, [x0, #24]
  4059f4:	cmp	x3, x4
  4059f8:	b.ne	405980 <ferror@plt+0x3ce0>  // b.any
  4059fc:	ldrb	w1, [x0, #80]
  405a00:	orr	w1, w1, #0x2
  405a04:	strb	w1, [x0, #80]
  405a08:	b	405980 <ferror@plt+0x3ce0>
  405a0c:	mov	x0, x19
  405a10:	mov	x1, #0x8                   	// #8
  405a14:	bl	406628 <_obstack_newchunk@@Base>
  405a18:	ldr	x1, [x19, #24]
  405a1c:	str	xzr, [x1]
  405a20:	ldp	x3, x0, [x19, #16]
  405a24:	add	x0, x0, #0x8
  405a28:	cmp	x0, x3
  405a2c:	b.ne	40593c <ferror@plt+0x3c9c>  // b.any
  405a30:	ldrb	w1, [x19, #80]
  405a34:	orr	w1, w1, #0x2
  405a38:	strb	w1, [x19, #80]
  405a3c:	b	40593c <ferror@plt+0x3c9c>
  405a40:	mov	x1, #0x1                   	// #1
  405a44:	mov	x0, x20
  405a48:	bl	406628 <_obstack_newchunk@@Base>
  405a4c:	ldr	x1, [x20, #24]
  405a50:	b	405900 <ferror@plt+0x3c60>
  405a54:	nop
  405a58:	stp	x29, x30, [sp, #-64]!
  405a5c:	mov	x29, sp
  405a60:	stp	x19, x20, [sp, #16]
  405a64:	mov	x20, x2
  405a68:	stp	x21, x22, [sp, #32]
  405a6c:	mov	w22, w0
  405a70:	mov	x21, x1
  405a74:	str	x23, [sp, #48]
  405a78:	mov	x23, #0x7ff00000            	// #2146435072
  405a7c:	nop
  405a80:	mov	x2, x20
  405a84:	mov	x1, x21
  405a88:	mov	w0, w22
  405a8c:	bl	401bc0 <read@plt>
  405a90:	mov	x19, x0
  405a94:	tbz	x0, #63, 405ab8 <ferror@plt+0x3e18>
  405a98:	bl	401c50 <__errno_location@plt>
  405a9c:	ldr	w2, [x0]
  405aa0:	cmp	w2, #0x4
  405aa4:	b.eq	405a80 <ferror@plt+0x3de0>  // b.none
  405aa8:	cmp	x20, x23
  405aac:	mov	x20, #0x7ff00000            	// #2146435072
  405ab0:	ccmp	w2, #0x16, #0x0, hi  // hi = pmore
  405ab4:	b.eq	405a80 <ferror@plt+0x3de0>  // b.none
  405ab8:	mov	x0, x19
  405abc:	ldp	x19, x20, [sp, #16]
  405ac0:	ldp	x21, x22, [sp, #32]
  405ac4:	ldr	x23, [sp, #48]
  405ac8:	ldp	x29, x30, [sp], #64
  405acc:	ret
  405ad0:	sub	sp, sp, #0x50
  405ad4:	stp	x29, x30, [sp, #32]
  405ad8:	add	x29, sp, #0x20
  405adc:	stp	x19, x20, [sp, #48]
  405ae0:	mov	x19, x5
  405ae4:	mov	x20, x4
  405ae8:	str	x21, [sp, #64]
  405aec:	mov	x5, x3
  405af0:	mov	x21, x0
  405af4:	cbz	x1, 405cd0 <ferror@plt+0x4030>
  405af8:	mov	x4, x2
  405afc:	mov	x3, x1
  405b00:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  405b04:	mov	w1, #0x1                   	// #1
  405b08:	add	x2, x2, #0x818
  405b0c:	bl	401b30 <__fprintf_chk@plt>
  405b10:	mov	w2, #0x5                   	// #5
  405b14:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405b18:	mov	x0, #0x0                   	// #0
  405b1c:	add	x1, x1, #0x830
  405b20:	bl	401c00 <dcgettext@plt>
  405b24:	mov	x3, x0
  405b28:	mov	w4, #0x7e3                 	// #2019
  405b2c:	mov	w1, #0x1                   	// #1
  405b30:	mov	x0, x21
  405b34:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  405b38:	add	x2, x2, #0xb28
  405b3c:	bl	401b30 <__fprintf_chk@plt>
  405b40:	mov	w2, #0x5                   	// #5
  405b44:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405b48:	mov	x0, #0x0                   	// #0
  405b4c:	add	x1, x1, #0x838
  405b50:	bl	401c00 <dcgettext@plt>
  405b54:	mov	x1, x21
  405b58:	bl	401c10 <fputs_unlocked@plt>
  405b5c:	cmp	x19, #0x5
  405b60:	b.eq	405cec <ferror@plt+0x404c>  // b.none
  405b64:	b.hi	405bb8 <ferror@plt+0x3f18>  // b.pmore
  405b68:	cmp	x19, #0x2
  405b6c:	b.eq	405d2c <ferror@plt+0x408c>  // b.none
  405b70:	b.ls	405c2c <ferror@plt+0x3f8c>  // b.plast
  405b74:	cmp	x19, #0x3
  405b78:	b.eq	405dac <ferror@plt+0x410c>  // b.none
  405b7c:	mov	w2, #0x5                   	// #5
  405b80:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405b84:	mov	x0, #0x0                   	// #0
  405b88:	add	x1, x1, #0x950
  405b8c:	bl	401c00 <dcgettext@plt>
  405b90:	mov	x2, x0
  405b94:	ldp	x3, x4, [x20]
  405b98:	mov	x0, x21
  405b9c:	ldp	x5, x6, [x20, #16]
  405ba0:	mov	w1, #0x1                   	// #1
  405ba4:	ldp	x29, x30, [sp, #32]
  405ba8:	ldp	x19, x20, [sp, #48]
  405bac:	ldr	x21, [sp, #64]
  405bb0:	add	sp, sp, #0x50
  405bb4:	b	401b30 <__fprintf_chk@plt>
  405bb8:	cmp	x19, #0x8
  405bbc:	b.eq	405de8 <ferror@plt+0x4148>  // b.none
  405bc0:	b.ls	405c70 <ferror@plt+0x3fd0>  // b.plast
  405bc4:	cmp	x19, #0x9
  405bc8:	b.ne	405d9c <ferror@plt+0x40fc>  // b.any
  405bcc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405bd0:	add	x1, x1, #0xa20
  405bd4:	mov	w2, #0x5                   	// #5
  405bd8:	mov	x0, #0x0                   	// #0
  405bdc:	bl	401c00 <dcgettext@plt>
  405be0:	ldp	x7, x8, [x20, #32]
  405be4:	mov	x2, x0
  405be8:	ldp	x3, x4, [x20]
  405bec:	mov	x0, x21
  405bf0:	ldp	x5, x6, [x20, #16]
  405bf4:	str	x8, [sp]
  405bf8:	mov	w1, #0x1                   	// #1
  405bfc:	ldr	x8, [x20, #48]
  405c00:	str	x8, [sp, #8]
  405c04:	ldr	x8, [x20, #56]
  405c08:	str	x8, [sp, #16]
  405c0c:	ldr	x8, [x20, #64]
  405c10:	str	x8, [sp, #24]
  405c14:	bl	401b30 <__fprintf_chk@plt>
  405c18:	ldp	x29, x30, [sp, #32]
  405c1c:	ldp	x19, x20, [sp, #48]
  405c20:	ldr	x21, [sp, #64]
  405c24:	add	sp, sp, #0x50
  405c28:	ret
  405c2c:	cbz	x19, 405cbc <ferror@plt+0x401c>
  405c30:	cmp	x19, #0x1
  405c34:	b.ne	405d9c <ferror@plt+0x40fc>  // b.any
  405c38:	mov	w2, #0x5                   	// #5
  405c3c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405c40:	mov	x0, #0x0                   	// #0
  405c44:	add	x1, x1, #0x908
  405c48:	bl	401c00 <dcgettext@plt>
  405c4c:	mov	x2, x0
  405c50:	mov	w1, w19
  405c54:	mov	x0, x21
  405c58:	ldr	x3, [x20]
  405c5c:	ldp	x29, x30, [sp, #32]
  405c60:	ldp	x19, x20, [sp, #48]
  405c64:	ldr	x21, [sp, #64]
  405c68:	add	sp, sp, #0x50
  405c6c:	b	401b30 <__fprintf_chk@plt>
  405c70:	cmp	x19, #0x6
  405c74:	b.eq	405d64 <ferror@plt+0x40c4>  // b.none
  405c78:	cmp	x19, #0x7
  405c7c:	b.ne	405d9c <ferror@plt+0x40fc>  // b.any
  405c80:	mov	w2, #0x5                   	// #5
  405c84:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405c88:	mov	x0, #0x0                   	// #0
  405c8c:	add	x1, x1, #0x9c0
  405c90:	bl	401c00 <dcgettext@plt>
  405c94:	mov	x2, x0
  405c98:	ldp	x7, x8, [x20, #32]
  405c9c:	mov	x0, x21
  405ca0:	ldp	x3, x4, [x20]
  405ca4:	mov	w1, #0x1                   	// #1
  405ca8:	ldp	x5, x6, [x20, #16]
  405cac:	str	x8, [sp]
  405cb0:	ldr	x8, [x20, #48]
  405cb4:	str	x8, [sp, #8]
  405cb8:	bl	401b30 <__fprintf_chk@plt>
  405cbc:	ldp	x29, x30, [sp, #32]
  405cc0:	ldp	x19, x20, [sp, #48]
  405cc4:	ldr	x21, [sp, #64]
  405cc8:	add	sp, sp, #0x50
  405ccc:	ret
  405cd0:	mov	x4, x3
  405cd4:	mov	w1, #0x1                   	// #1
  405cd8:	mov	x3, x2
  405cdc:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  405ce0:	add	x2, x2, #0x828
  405ce4:	bl	401b30 <__fprintf_chk@plt>
  405ce8:	b	405b10 <ferror@plt+0x3e70>
  405cec:	mov	w2, w19
  405cf0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405cf4:	mov	x0, #0x0                   	// #0
  405cf8:	add	x1, x1, #0x970
  405cfc:	bl	401c00 <dcgettext@plt>
  405d00:	mov	x2, x0
  405d04:	ldp	x3, x4, [x20]
  405d08:	mov	x0, x21
  405d0c:	ldp	x5, x6, [x20, #16]
  405d10:	mov	w1, #0x1                   	// #1
  405d14:	ldp	x29, x30, [sp, #32]
  405d18:	ldr	x7, [x20, #32]
  405d1c:	ldp	x19, x20, [sp, #48]
  405d20:	ldr	x21, [sp, #64]
  405d24:	add	sp, sp, #0x50
  405d28:	b	401b30 <__fprintf_chk@plt>
  405d2c:	mov	w2, #0x5                   	// #5
  405d30:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405d34:	mov	x0, #0x0                   	// #0
  405d38:	add	x1, x1, #0x918
  405d3c:	bl	401c00 <dcgettext@plt>
  405d40:	mov	x2, x0
  405d44:	ldp	x3, x4, [x20]
  405d48:	mov	x0, x21
  405d4c:	ldp	x29, x30, [sp, #32]
  405d50:	mov	w1, #0x1                   	// #1
  405d54:	ldp	x19, x20, [sp, #48]
  405d58:	ldr	x21, [sp, #64]
  405d5c:	add	sp, sp, #0x50
  405d60:	b	401b30 <__fprintf_chk@plt>
  405d64:	mov	w2, #0x5                   	// #5
  405d68:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405d6c:	mov	x0, #0x0                   	// #0
  405d70:	add	x1, x1, #0x998
  405d74:	bl	401c00 <dcgettext@plt>
  405d78:	mov	x2, x0
  405d7c:	ldp	x3, x4, [x20]
  405d80:	mov	x0, x21
  405d84:	ldp	x5, x6, [x20, #16]
  405d88:	mov	w1, #0x1                   	// #1
  405d8c:	ldp	x7, x8, [x20, #32]
  405d90:	str	x8, [sp]
  405d94:	bl	401b30 <__fprintf_chk@plt>
  405d98:	b	405cbc <ferror@plt+0x401c>
  405d9c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405da0:	mov	w2, #0x5                   	// #5
  405da4:	add	x1, x1, #0xa58
  405da8:	b	405bd8 <ferror@plt+0x3f38>
  405dac:	mov	w2, #0x5                   	// #5
  405db0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405db4:	mov	x0, #0x0                   	// #0
  405db8:	add	x1, x1, #0x930
  405dbc:	bl	401c00 <dcgettext@plt>
  405dc0:	mov	x2, x0
  405dc4:	ldp	x3, x4, [x20]
  405dc8:	mov	x0, x21
  405dcc:	ldr	x5, [x20, #16]
  405dd0:	mov	w1, #0x1                   	// #1
  405dd4:	ldp	x29, x30, [sp, #32]
  405dd8:	ldp	x19, x20, [sp, #48]
  405ddc:	ldr	x21, [sp, #64]
  405de0:	add	sp, sp, #0x50
  405de4:	b	401b30 <__fprintf_chk@plt>
  405de8:	mov	w2, #0x5                   	// #5
  405dec:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405df0:	mov	x0, #0x0                   	// #0
  405df4:	add	x1, x1, #0x9f0
  405df8:	bl	401c00 <dcgettext@plt>
  405dfc:	mov	x2, x0
  405e00:	ldp	x7, x8, [x20, #32]
  405e04:	mov	x0, x21
  405e08:	ldp	x3, x4, [x20]
  405e0c:	mov	w1, #0x1                   	// #1
  405e10:	ldp	x5, x6, [x20, #16]
  405e14:	str	x8, [sp]
  405e18:	ldr	x8, [x20, #48]
  405e1c:	str	x8, [sp, #8]
  405e20:	ldr	x8, [x20, #56]
  405e24:	str	x8, [sp, #16]
  405e28:	bl	401b30 <__fprintf_chk@plt>
  405e2c:	b	405cbc <ferror@plt+0x401c>
  405e30:	ldr	x5, [x4]
  405e34:	cbz	x5, 405e50 <ferror@plt+0x41b0>
  405e38:	mov	x5, #0x0                   	// #0
  405e3c:	nop
  405e40:	add	x5, x5, #0x1
  405e44:	ldr	x6, [x4, x5, lsl #3]
  405e48:	cbnz	x6, 405e40 <ferror@plt+0x41a0>
  405e4c:	b	405ad0 <ferror@plt+0x3e30>
  405e50:	mov	x5, #0x0                   	// #0
  405e54:	b	405ad0 <ferror@plt+0x3e30>
  405e58:	stp	x29, x30, [sp, #-96]!
  405e5c:	mov	x5, #0x0                   	// #0
  405e60:	mov	x29, sp
  405e64:	add	x8, sp, #0x10
  405e68:	ldr	w7, [x4, #24]
  405e6c:	ldp	x6, x11, [x4]
  405e70:	b	405e98 <ferror@plt+0x41f8>
  405e74:	mov	x4, x6
  405e78:	add	x8, x8, #0x8
  405e7c:	and	x6, x10, #0xfffffffffffffff8
  405e80:	ldr	x4, [x4]
  405e84:	stur	x4, [x8, #-8]
  405e88:	cbz	x4, 405ec8 <ferror@plt+0x4228>
  405e8c:	add	x5, x5, #0x1
  405e90:	cmp	x5, #0xa
  405e94:	b.eq	405ec8 <ferror@plt+0x4228>  // b.none
  405e98:	add	x10, x6, #0xf
  405e9c:	add	w9, w7, #0x8
  405ea0:	tbz	w7, #31, 405e74 <ferror@plt+0x41d4>
  405ea4:	add	x4, x11, w7, sxtw
  405ea8:	add	x10, x6, #0xf
  405eac:	mov	w7, w9
  405eb0:	cmp	w9, #0x0
  405eb4:	b.gt	405e74 <ferror@plt+0x41d4>
  405eb8:	ldr	x4, [x4]
  405ebc:	str	x4, [x8]
  405ec0:	add	x8, x8, #0x8
  405ec4:	cbnz	x4, 405e8c <ferror@plt+0x41ec>
  405ec8:	add	x4, sp, #0x10
  405ecc:	bl	405ad0 <ferror@plt+0x3e30>
  405ed0:	ldp	x29, x30, [sp], #96
  405ed4:	ret
  405ed8:	stp	x29, x30, [sp, #-288]!
  405edc:	mov	w12, #0xffffffe0            	// #-32
  405ee0:	mov	w13, #0xffffff80            	// #-128
  405ee4:	mov	x29, sp
  405ee8:	add	x14, sp, #0x100
  405eec:	add	x11, sp, #0x120
  405ef0:	add	x9, sp, #0x30
  405ef4:	mov	w8, w12
  405ef8:	mov	x10, #0x0                   	// #0
  405efc:	stp	x11, x11, [sp, #16]
  405f00:	str	x14, [sp, #32]
  405f04:	stp	w12, w13, [sp, #40]
  405f08:	str	q0, [sp, #128]
  405f0c:	str	q1, [sp, #144]
  405f10:	str	q2, [sp, #160]
  405f14:	str	q3, [sp, #176]
  405f18:	str	q4, [sp, #192]
  405f1c:	str	q5, [sp, #208]
  405f20:	str	q6, [sp, #224]
  405f24:	str	q7, [sp, #240]
  405f28:	stp	x4, x5, [sp, #256]
  405f2c:	stp	x6, x7, [sp, #272]
  405f30:	b	405f58 <ferror@plt+0x42b8>
  405f34:	mov	x4, x11
  405f38:	add	x9, x9, #0x8
  405f3c:	add	x11, x11, #0x8
  405f40:	ldr	x4, [x4]
  405f44:	stur	x4, [x9, #-8]
  405f48:	cbz	x4, 405f84 <ferror@plt+0x42e4>
  405f4c:	add	x10, x10, #0x1
  405f50:	cmp	x10, #0xa
  405f54:	b.eq	405f84 <ferror@plt+0x42e4>  // b.none
  405f58:	add	w5, w8, #0x8
  405f5c:	tbz	w8, #31, 405f34 <ferror@plt+0x4294>
  405f60:	add	x4, sp, #0x120
  405f64:	cmp	w5, #0x0
  405f68:	add	x4, x4, w8, sxtw
  405f6c:	mov	w8, w5
  405f70:	b.gt	405f34 <ferror@plt+0x4294>
  405f74:	ldr	x4, [x4]
  405f78:	str	x4, [x9]
  405f7c:	add	x9, x9, #0x8
  405f80:	cbnz	x4, 405f4c <ferror@plt+0x42ac>
  405f84:	add	x4, sp, #0x30
  405f88:	mov	x5, x10
  405f8c:	bl	405ad0 <ferror@plt+0x3e30>
  405f90:	ldp	x29, x30, [sp], #288
  405f94:	ret
  405f98:	stp	x29, x30, [sp, #-16]!
  405f9c:	mov	w2, #0x5                   	// #5
  405fa0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405fa4:	mov	x29, sp
  405fa8:	add	x1, x1, #0xa98
  405fac:	mov	x0, #0x0                   	// #0
  405fb0:	bl	401c00 <dcgettext@plt>
  405fb4:	mov	x1, x0
  405fb8:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  405fbc:	mov	w0, #0x1                   	// #1
  405fc0:	add	x2, x2, #0xab0
  405fc4:	bl	401a20 <__printf_chk@plt>
  405fc8:	mov	w2, #0x5                   	// #5
  405fcc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  405fd0:	mov	x0, #0x0                   	// #0
  405fd4:	add	x1, x1, #0xac8
  405fd8:	bl	401c00 <dcgettext@plt>
  405fdc:	mov	x1, x0
  405fe0:	adrp	x3, 406000 <ferror@plt+0x4360>
  405fe4:	add	x3, x3, #0xf00
  405fe8:	adrp	x2, 406000 <ferror@plt+0x4360>
  405fec:	mov	w0, #0x1                   	// #1
  405ff0:	add	x2, x2, #0xf28
  405ff4:	bl	401a20 <__printf_chk@plt>
  405ff8:	mov	w2, #0x5                   	// #5
  405ffc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  406000:	mov	x0, #0x0                   	// #0
  406004:	add	x1, x1, #0xae0
  406008:	bl	401c00 <dcgettext@plt>
  40600c:	ldp	x29, x30, [sp], #16
  406010:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x127f8>
  406014:	ldr	x1, [x1, #688]
  406018:	b	401c10 <fputs_unlocked@plt>
  40601c:	nop
  406020:	stp	x29, x30, [sp, #-32]!
  406024:	mov	x29, sp
  406028:	str	x19, [sp, #16]
  40602c:	mov	x19, x0
  406030:	bl	4019a0 <malloc@plt>
  406034:	cmp	x0, #0x0
  406038:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40603c:	b.ne	40604c <ferror@plt+0x43ac>  // b.any
  406040:	ldr	x19, [sp, #16]
  406044:	ldp	x29, x30, [sp], #32
  406048:	ret
  40604c:	bl	406278 <ferror@plt+0x45d8>
  406050:	umulh	x2, x0, x1
  406054:	mul	x0, x0, x1
  406058:	cmp	x2, #0x0
  40605c:	cset	x1, ne  // ne = any
  406060:	tbnz	x0, #63, 40606c <ferror@plt+0x43cc>
  406064:	cbnz	x1, 40606c <ferror@plt+0x43cc>
  406068:	b	406020 <ferror@plt+0x4380>
  40606c:	stp	x29, x30, [sp, #-16]!
  406070:	mov	x29, sp
  406074:	bl	406278 <ferror@plt+0x45d8>
  406078:	b	406020 <ferror@plt+0x4380>
  40607c:	nop
  406080:	stp	x29, x30, [sp, #-32]!
  406084:	cmp	x1, #0x0
  406088:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40608c:	mov	x29, sp
  406090:	b.ne	4060b8 <ferror@plt+0x4418>  // b.any
  406094:	str	x19, [sp, #16]
  406098:	mov	x19, x1
  40609c:	bl	401a50 <realloc@plt>
  4060a0:	cmp	x0, #0x0
  4060a4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4060a8:	b.ne	4060c8 <ferror@plt+0x4428>  // b.any
  4060ac:	ldr	x19, [sp, #16]
  4060b0:	ldp	x29, x30, [sp], #32
  4060b4:	ret
  4060b8:	bl	401b70 <free@plt>
  4060bc:	mov	x0, #0x0                   	// #0
  4060c0:	ldp	x29, x30, [sp], #32
  4060c4:	ret
  4060c8:	bl	406278 <ferror@plt+0x45d8>
  4060cc:	nop
  4060d0:	umulh	x3, x1, x2
  4060d4:	mul	x1, x1, x2
  4060d8:	cmp	x3, #0x0
  4060dc:	cset	x2, ne  // ne = any
  4060e0:	tbnz	x1, #63, 4060ec <ferror@plt+0x444c>
  4060e4:	cbnz	x2, 4060ec <ferror@plt+0x444c>
  4060e8:	b	406080 <ferror@plt+0x43e0>
  4060ec:	stp	x29, x30, [sp, #-16]!
  4060f0:	mov	x29, sp
  4060f4:	bl	406278 <ferror@plt+0x45d8>
  4060f8:	mov	x4, x1
  4060fc:	ldr	x3, [x1]
  406100:	cbz	x0, 40612c <ferror@plt+0x448c>
  406104:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  406108:	movk	x1, #0x5554
  40610c:	udiv	x1, x1, x2
  406110:	cmp	x1, x3
  406114:	b.ls	406148 <ferror@plt+0x44a8>  // b.plast
  406118:	add	x1, x3, #0x1
  40611c:	add	x3, x1, x3, lsr #1
  406120:	mul	x1, x3, x2
  406124:	str	x3, [x4]
  406128:	b	406080 <ferror@plt+0x43e0>
  40612c:	cbz	x3, 406154 <ferror@plt+0x44b4>
  406130:	umulh	x5, x3, x2
  406134:	mul	x1, x3, x2
  406138:	cmp	x5, #0x0
  40613c:	cset	x2, ne  // ne = any
  406140:	tbnz	x1, #63, 406148 <ferror@plt+0x44a8>
  406144:	cbz	x2, 406124 <ferror@plt+0x4484>
  406148:	stp	x29, x30, [sp, #-16]!
  40614c:	mov	x29, sp
  406150:	bl	406278 <ferror@plt+0x45d8>
  406154:	mov	x3, #0x80                  	// #128
  406158:	cmp	x2, x3
  40615c:	udiv	x3, x3, x2
  406160:	cinc	x3, x3, hi  // hi = pmore
  406164:	b	406130 <ferror@plt+0x4490>
  406168:	mov	x2, x1
  40616c:	ldr	x1, [x1]
  406170:	cbz	x0, 406194 <ferror@plt+0x44f4>
  406174:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  406178:	movk	x3, #0x5553
  40617c:	cmp	x1, x3
  406180:	b.hi	4061ac <ferror@plt+0x450c>  // b.pmore
  406184:	add	x3, x1, #0x1
  406188:	add	x1, x3, x1, lsr #1
  40618c:	str	x1, [x2]
  406190:	b	406080 <ferror@plt+0x43e0>
  406194:	cmp	x1, #0x0
  406198:	cbnz	x1, 4061a8 <ferror@plt+0x4508>
  40619c:	mov	x1, #0x80                  	// #128
  4061a0:	str	x1, [x2]
  4061a4:	b	406080 <ferror@plt+0x43e0>
  4061a8:	b.ge	40618c <ferror@plt+0x44ec>  // b.tcont
  4061ac:	stp	x29, x30, [sp, #-16]!
  4061b0:	mov	x29, sp
  4061b4:	bl	406278 <ferror@plt+0x45d8>
  4061b8:	stp	x29, x30, [sp, #-32]!
  4061bc:	mov	x29, sp
  4061c0:	str	x19, [sp, #16]
  4061c4:	mov	x19, x0
  4061c8:	bl	406020 <ferror@plt+0x4380>
  4061cc:	mov	x2, x19
  4061d0:	mov	w1, #0x0                   	// #0
  4061d4:	ldr	x19, [sp, #16]
  4061d8:	ldp	x29, x30, [sp], #32
  4061dc:	b	401a30 <memset@plt>
  4061e0:	umulh	x4, x0, x1
  4061e4:	stp	x29, x30, [sp, #-16]!
  4061e8:	mul	x2, x0, x1
  4061ec:	cmp	x4, #0x0
  4061f0:	mov	x29, sp
  4061f4:	cset	x3, ne  // ne = any
  4061f8:	tbnz	x2, #63, 406210 <ferror@plt+0x4570>
  4061fc:	cbnz	x3, 406210 <ferror@plt+0x4570>
  406200:	bl	401a40 <calloc@plt>
  406204:	cbz	x0, 406210 <ferror@plt+0x4570>
  406208:	ldp	x29, x30, [sp], #16
  40620c:	ret
  406210:	bl	406278 <ferror@plt+0x45d8>
  406214:	nop
  406218:	stp	x29, x30, [sp, #-32]!
  40621c:	mov	x29, sp
  406220:	stp	x19, x20, [sp, #16]
  406224:	mov	x19, x1
  406228:	mov	x20, x0
  40622c:	mov	x0, x1
  406230:	bl	406020 <ferror@plt+0x4380>
  406234:	mov	x2, x19
  406238:	mov	x1, x20
  40623c:	ldp	x19, x20, [sp, #16]
  406240:	ldp	x29, x30, [sp], #32
  406244:	b	4018a0 <memcpy@plt>
  406248:	stp	x29, x30, [sp, #-32]!
  40624c:	mov	x29, sp
  406250:	str	x19, [sp, #16]
  406254:	mov	x19, x0
  406258:	bl	4018c0 <strlen@plt>
  40625c:	mov	x1, x0
  406260:	mov	x0, x19
  406264:	add	x1, x1, #0x1
  406268:	ldr	x19, [sp, #16]
  40626c:	ldp	x29, x30, [sp], #32
  406270:	b	406218 <ferror@plt+0x4578>
  406274:	nop
  406278:	stp	x29, x30, [sp, #-32]!
  40627c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  406280:	mov	w2, #0x5                   	// #5
  406284:	mov	x29, sp
  406288:	str	x19, [sp, #16]
  40628c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  406290:	ldr	w19, [x0, #552]
  406294:	add	x1, x1, #0xb58
  406298:	mov	x0, #0x0                   	// #0
  40629c:	bl	401c00 <dcgettext@plt>
  4062a0:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  4062a4:	mov	x3, x0
  4062a8:	add	x2, x2, #0x188
  4062ac:	mov	w0, w19
  4062b0:	mov	w1, #0x0                   	// #0
  4062b4:	bl	4018e0 <error@plt>
  4062b8:	bl	401ab0 <abort@plt>
  4062bc:	nop
  4062c0:	stp	x29, x30, [sp, #-32]!
  4062c4:	mov	x29, sp
  4062c8:	stp	x19, x20, [sp, #16]
  4062cc:	mov	x19, x0
  4062d0:	bl	401950 <fileno@plt>
  4062d4:	tbnz	w0, #31, 406330 <ferror@plt+0x4690>
  4062d8:	mov	x0, x19
  4062dc:	bl	401c20 <__freading@plt>
  4062e0:	cbnz	w0, 406314 <ferror@plt+0x4674>
  4062e4:	mov	x0, x19
  4062e8:	bl	406350 <ferror@plt+0x46b0>
  4062ec:	cbz	w0, 406330 <ferror@plt+0x4690>
  4062f0:	bl	401c50 <__errno_location@plt>
  4062f4:	mov	x20, x0
  4062f8:	mov	x0, x19
  4062fc:	ldr	w19, [x20]
  406300:	bl	401960 <fclose@plt>
  406304:	cbnz	w19, 406340 <ferror@plt+0x46a0>
  406308:	ldp	x19, x20, [sp, #16]
  40630c:	ldp	x29, x30, [sp], #32
  406310:	ret
  406314:	mov	x0, x19
  406318:	bl	401950 <fileno@plt>
  40631c:	mov	w2, #0x1                   	// #1
  406320:	mov	x1, #0x0                   	// #0
  406324:	bl	401930 <lseek@plt>
  406328:	cmn	x0, #0x1
  40632c:	b.ne	4062e4 <ferror@plt+0x4644>  // b.any
  406330:	mov	x0, x19
  406334:	ldp	x19, x20, [sp, #16]
  406338:	ldp	x29, x30, [sp], #32
  40633c:	b	401960 <fclose@plt>
  406340:	mov	w0, #0xffffffff            	// #-1
  406344:	str	w19, [x20]
  406348:	b	406308 <ferror@plt+0x4668>
  40634c:	nop
  406350:	stp	x29, x30, [sp, #-32]!
  406354:	mov	x29, sp
  406358:	str	x19, [sp, #16]
  40635c:	mov	x19, x0
  406360:	cbz	x0, 406374 <ferror@plt+0x46d4>
  406364:	bl	401c20 <__freading@plt>
  406368:	cbz	w0, 406374 <ferror@plt+0x46d4>
  40636c:	ldr	w0, [x19]
  406370:	tbnz	w0, #8, 406384 <ferror@plt+0x46e4>
  406374:	mov	x0, x19
  406378:	ldr	x19, [sp, #16]
  40637c:	ldp	x29, x30, [sp], #32
  406380:	b	401bb0 <fflush@plt>
  406384:	mov	x0, x19
  406388:	mov	w2, #0x1                   	// #1
  40638c:	mov	x1, #0x0                   	// #0
  406390:	bl	4063a8 <ferror@plt+0x4708>
  406394:	mov	x0, x19
  406398:	ldr	x19, [sp, #16]
  40639c:	ldp	x29, x30, [sp], #32
  4063a0:	b	401bb0 <fflush@plt>
  4063a4:	nop
  4063a8:	stp	x29, x30, [sp, #-48]!
  4063ac:	mov	x29, sp
  4063b0:	ldp	x3, x4, [x0, #8]
  4063b4:	str	x19, [sp, #16]
  4063b8:	mov	x19, x0
  4063bc:	cmp	x4, x3
  4063c0:	b.eq	4063d4 <ferror@plt+0x4734>  // b.none
  4063c4:	mov	x0, x19
  4063c8:	ldr	x19, [sp, #16]
  4063cc:	ldp	x29, x30, [sp], #48
  4063d0:	b	401b60 <fseeko@plt>
  4063d4:	ldp	x3, x4, [x0, #32]
  4063d8:	cmp	x4, x3
  4063dc:	b.ne	4063c4 <ferror@plt+0x4724>  // b.any
  4063e0:	ldr	x3, [x0, #72]
  4063e4:	cbnz	x3, 4063c4 <ferror@plt+0x4724>
  4063e8:	str	x1, [sp, #32]
  4063ec:	str	w2, [sp, #44]
  4063f0:	bl	401950 <fileno@plt>
  4063f4:	ldr	w2, [sp, #44]
  4063f8:	ldr	x1, [sp, #32]
  4063fc:	bl	401930 <lseek@plt>
  406400:	mov	x1, x0
  406404:	cmn	x0, #0x1
  406408:	b.eq	406420 <ferror@plt+0x4780>  // b.none
  40640c:	ldr	w2, [x19]
  406410:	mov	w0, #0x0                   	// #0
  406414:	str	x1, [x19, #144]
  406418:	and	w1, w2, #0xffffffef
  40641c:	str	w1, [x19]
  406420:	ldr	x19, [sp, #16]
  406424:	ldp	x29, x30, [sp], #48
  406428:	ret
  40642c:	nop
  406430:	stp	x29, x30, [sp, #-64]!
  406434:	cmp	x0, #0x0
  406438:	add	x4, sp, #0x3c
  40643c:	mov	x29, sp
  406440:	stp	x19, x20, [sp, #16]
  406444:	csel	x19, x4, x0, eq  // eq = none
  406448:	mov	x20, x2
  40644c:	mov	x0, x19
  406450:	str	x21, [sp, #32]
  406454:	mov	x21, x1
  406458:	bl	401890 <mbrtowc@plt>
  40645c:	cmp	x20, #0x0
  406460:	mov	x20, x0
  406464:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  406468:	b.hi	406480 <ferror@plt+0x47e0>  // b.pmore
  40646c:	mov	x0, x20
  406470:	ldp	x19, x20, [sp, #16]
  406474:	ldr	x21, [sp, #32]
  406478:	ldp	x29, x30, [sp], #64
  40647c:	ret
  406480:	mov	w0, #0x0                   	// #0
  406484:	bl	4068a0 <_obstack_memory_used@@Base+0x98>
  406488:	tst	w0, #0xff
  40648c:	b.ne	40646c <ferror@plt+0x47cc>  // b.any
  406490:	ldrb	w0, [x21]
  406494:	mov	x20, #0x1                   	// #1
  406498:	str	w0, [x19]
  40649c:	mov	x0, x20
  4064a0:	ldp	x19, x20, [sp, #16]
  4064a4:	ldr	x21, [sp, #32]
  4064a8:	ldp	x29, x30, [sp], #64
  4064ac:	ret
  4064b0:	stp	x29, x30, [sp, #-32]!
  4064b4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  4064b8:	mov	w2, #0x5                   	// #5
  4064bc:	mov	x29, sp
  4064c0:	str	x19, [sp, #16]
  4064c4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  4064c8:	ldr	x19, [x0, #664]
  4064cc:	add	x1, x1, #0xb58
  4064d0:	mov	x0, #0x0                   	// #0
  4064d4:	bl	401c00 <dcgettext@plt>
  4064d8:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x7f8>
  4064dc:	mov	x3, x0
  4064e0:	add	x2, x2, #0x820
  4064e4:	mov	x0, x19
  4064e8:	mov	w1, #0x1                   	// #1
  4064ec:	bl	401b30 <__fprintf_chk@plt>
  4064f0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  4064f4:	ldr	w0, [x0, #552]
  4064f8:	bl	4018d0 <exit@plt>
  4064fc:	nop
  406500:	mov	x2, x0
  406504:	mov	x0, x1
  406508:	ldrb	w4, [x2, #80]
  40650c:	ldr	x3, [x2, #56]
  406510:	tbz	w4, #0, 406520 <ferror@plt+0x4880>
  406514:	ldr	x0, [x2, #72]
  406518:	mov	x16, x3
  40651c:	br	x16
  406520:	mov	x16, x3
  406524:	br	x16
  406528:	mov	x2, x0
  40652c:	mov	x0, x1
  406530:	ldrb	w4, [x2, #80]
  406534:	ldr	x3, [x2, #64]
  406538:	tbz	w4, #0, 406548 <ferror@plt+0x48a8>
  40653c:	ldr	x0, [x2, #72]
  406540:	mov	x16, x3
  406544:	br	x16
  406548:	mov	x16, x3
  40654c:	br	x16
  406550:	stp	x29, x30, [sp, #-48]!
  406554:	mov	x29, sp
  406558:	stp	x19, x20, [sp, #16]
  40655c:	mov	x19, x0
  406560:	str	x21, [sp, #32]
  406564:	cbz	x2, 4065e0 <ferror@plt+0x4940>
  406568:	mov	x20, x2
  40656c:	sub	x21, x2, #0x1
  406570:	cmp	x1, #0x0
  406574:	mov	x0, #0xfe0                 	// #4064
  406578:	csel	x1, x1, x0, ne  // ne = any
  40657c:	str	x1, [x19]
  406580:	str	x21, [x19, #48]
  406584:	mov	x0, x19
  406588:	bl	406500 <ferror@plt+0x4860>
  40658c:	str	x0, [x19, #8]
  406590:	mov	x1, x0
  406594:	cbz	x0, 4065ec <ferror@plt+0x494c>
  406598:	add	x2, x0, #0x10
  40659c:	neg	x20, x20
  4065a0:	ldr	x0, [x19]
  4065a4:	add	x2, x2, x21
  4065a8:	and	x20, x2, x20
  4065ac:	ldr	x21, [sp, #32]
  4065b0:	stp	x20, x20, [x19, #16]
  4065b4:	add	x2, x1, x0
  4065b8:	str	x2, [x1]
  4065bc:	mov	w0, #0x1                   	// #1
  4065c0:	str	x2, [x19, #32]
  4065c4:	ldrb	w2, [x19, #80]
  4065c8:	str	xzr, [x1, #8]
  4065cc:	and	w1, w2, #0xfffffff9
  4065d0:	strb	w1, [x19, #80]
  4065d4:	ldp	x19, x20, [sp, #16]
  4065d8:	ldp	x29, x30, [sp], #48
  4065dc:	ret
  4065e0:	mov	x21, #0xf                   	// #15
  4065e4:	mov	x20, #0x10                  	// #16
  4065e8:	b	406570 <ferror@plt+0x48d0>
  4065ec:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  4065f0:	ldr	x0, [x0, #648]
  4065f4:	blr	x0

00000000004065f8 <_obstack_begin@@Base>:
  4065f8:	ldrb	w6, [x0, #80]
  4065fc:	stp	x3, x4, [x0, #56]
  406600:	and	w6, w6, #0xfffffffe
  406604:	strb	w6, [x0, #80]
  406608:	b	406550 <ferror@plt+0x48b0>
  40660c:	nop

0000000000406610 <_obstack_begin_1@@Base>:
  406610:	ldrb	w7, [x0, #80]
  406614:	stp	x3, x4, [x0, #56]
  406618:	orr	w7, w7, #0x1
  40661c:	str	x5, [x0, #72]
  406620:	strb	w7, [x0, #80]
  406624:	b	406550 <ferror@plt+0x48b0>

0000000000406628 <_obstack_newchunk@@Base>:
  406628:	stp	x29, x30, [sp, #-64]!
  40662c:	mov	x29, sp
  406630:	stp	x21, x22, [sp, #32]
  406634:	ldp	x2, x21, [x0, #16]
  406638:	stp	x19, x20, [sp, #16]
  40663c:	ldr	x4, [x0, #48]
  406640:	ldr	x3, [x0]
  406644:	sub	x21, x21, x2
  406648:	adds	x1, x21, x1
  40664c:	str	x23, [sp, #48]
  406650:	cset	x2, cs  // cs = hs, nlast
  406654:	lsr	x20, x21, #3
  406658:	adds	x4, x4, x1
  40665c:	add	x20, x20, #0x64
  406660:	cset	x1, cs  // cs = hs, nlast
  406664:	cmp	x3, x4
  406668:	csel	x3, x3, x4, cs  // cs = hs, nlast
  40666c:	add	x4, x20, x4
  406670:	cmp	x3, x4
  406674:	csel	x20, x3, x4, cs  // cs = hs, nlast
  406678:	cmp	x2, #0x0
  40667c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  406680:	ldr	x23, [x0, #8]
  406684:	b.ne	406730 <_obstack_newchunk@@Base+0x108>  // b.any
  406688:	mov	x19, x0
  40668c:	mov	x1, x20
  406690:	bl	406500 <ferror@plt+0x4860>
  406694:	mov	x22, x0
  406698:	cbz	x0, 406730 <_obstack_newchunk@@Base+0x108>
  40669c:	str	x0, [x19, #8]
  4066a0:	add	x3, x0, x20
  4066a4:	ldr	x1, [x19, #16]
  4066a8:	mov	x2, x21
  4066ac:	ldr	x20, [x19, #48]
  4066b0:	str	x23, [x0, #8]
  4066b4:	str	x3, [x19, #32]
  4066b8:	str	x3, [x0], #16
  4066bc:	add	x0, x0, x20
  4066c0:	bic	x20, x0, x20
  4066c4:	mov	x0, x20
  4066c8:	bl	4018a0 <memcpy@plt>
  4066cc:	ldrb	w0, [x19, #80]
  4066d0:	tbnz	w0, #1, 4066f0 <_obstack_newchunk@@Base+0xc8>
  4066d4:	ldr	x1, [x19, #48]
  4066d8:	add	x0, x23, #0x10
  4066dc:	ldr	x2, [x19, #16]
  4066e0:	add	x0, x0, x1
  4066e4:	bic	x0, x0, x1
  4066e8:	cmp	x2, x0
  4066ec:	b.eq	406718 <_obstack_newchunk@@Base+0xf0>  // b.none
  4066f0:	ldrb	w0, [x19, #80]
  4066f4:	add	x21, x20, x21
  4066f8:	ldr	x23, [sp, #48]
  4066fc:	and	w0, w0, #0xfffffffd
  406700:	stp	x20, x21, [x19, #16]
  406704:	strb	w0, [x19, #80]
  406708:	ldp	x19, x20, [sp, #16]
  40670c:	ldp	x21, x22, [sp, #32]
  406710:	ldp	x29, x30, [sp], #64
  406714:	ret
  406718:	ldr	x0, [x23, #8]
  40671c:	str	x0, [x22, #8]
  406720:	mov	x1, x23
  406724:	mov	x0, x19
  406728:	bl	406528 <ferror@plt+0x4888>
  40672c:	b	4066f0 <_obstack_newchunk@@Base+0xc8>
  406730:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x127f8>
  406734:	ldr	x0, [x0, #648]
  406738:	blr	x0
  40673c:	nop

0000000000406740 <_obstack_allocated_p@@Base>:
  406740:	ldr	x0, [x0, #8]
  406744:	cbz	x0, 406768 <_obstack_allocated_p@@Base+0x28>
  406748:	cmp	x1, x0
  40674c:	b.ls	40675c <_obstack_allocated_p@@Base+0x1c>  // b.plast
  406750:	ldr	x2, [x0]
  406754:	cmp	x2, x1
  406758:	b.cs	40676c <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  40675c:	ldr	x0, [x0, #8]
  406760:	cbnz	x0, 406748 <_obstack_allocated_p@@Base+0x8>
  406764:	mov	w0, #0x0                   	// #0
  406768:	ret
  40676c:	mov	w0, #0x1                   	// #1
  406770:	ret
  406774:	nop

0000000000406778 <_obstack_free@@Base>:
  406778:	stp	x29, x30, [sp, #-48]!
  40677c:	mov	x29, sp
  406780:	str	x21, [sp, #32]
  406784:	mov	x21, x1
  406788:	ldr	x1, [x0, #8]
  40678c:	cbz	x1, 4067d4 <_obstack_free@@Base+0x5c>
  406790:	stp	x19, x20, [sp, #16]
  406794:	mov	x20, x0
  406798:	b	4067a0 <_obstack_free@@Base+0x28>
  40679c:	mov	x1, x19
  4067a0:	cmp	x1, x21
  4067a4:	b.cs	4067b4 <_obstack_free@@Base+0x3c>  // b.hs, b.nlast
  4067a8:	ldr	x0, [x1]
  4067ac:	cmp	x0, x21
  4067b0:	b.cs	4067e4 <_obstack_free@@Base+0x6c>  // b.hs, b.nlast
  4067b4:	mov	x0, x20
  4067b8:	ldr	x19, [x1, #8]
  4067bc:	bl	406528 <ferror@plt+0x4888>
  4067c0:	ldrb	w2, [x20, #80]
  4067c4:	orr	w2, w2, #0x2
  4067c8:	strb	w2, [x20, #80]
  4067cc:	cbnz	x19, 40679c <_obstack_free@@Base+0x24>
  4067d0:	ldp	x19, x20, [sp, #16]
  4067d4:	cbnz	x21, 4067fc <_obstack_free@@Base+0x84>
  4067d8:	ldr	x21, [sp, #32]
  4067dc:	ldp	x29, x30, [sp], #48
  4067e0:	ret
  4067e4:	stp	x1, x21, [x20, #8]
  4067e8:	stp	x21, x0, [x20, #24]
  4067ec:	ldp	x19, x20, [sp, #16]
  4067f0:	ldr	x21, [sp, #32]
  4067f4:	ldp	x29, x30, [sp], #48
  4067f8:	ret
  4067fc:	stp	x19, x20, [sp, #16]
  406800:	bl	401ab0 <abort@plt>
  406804:	nop

0000000000406808 <_obstack_memory_used@@Base>:
  406808:	ldr	x1, [x0, #8]
  40680c:	mov	x0, #0x0                   	// #0
  406810:	cbz	x1, 40682c <_obstack_memory_used@@Base+0x24>
  406814:	nop
  406818:	ldr	x2, [x1]
  40681c:	sub	x2, x2, x1
  406820:	ldr	x1, [x1, #8]
  406824:	add	x0, x0, x2
  406828:	cbnz	x1, 406818 <_obstack_memory_used@@Base+0x10>
  40682c:	ret
  406830:	stp	x29, x30, [sp, #-32]!
  406834:	mov	x29, sp
  406838:	stp	x19, x20, [sp, #16]
  40683c:	mov	x19, x0
  406840:	bl	401940 <__fpending@plt>
  406844:	mov	x20, x0
  406848:	mov	x0, x19
  40684c:	ldr	w19, [x19]
  406850:	and	w19, w19, #0x20
  406854:	bl	4062c0 <ferror@plt+0x4620>
  406858:	cbnz	w19, 406880 <_obstack_memory_used@@Base+0x78>
  40685c:	cbz	w0, 406874 <_obstack_memory_used@@Base+0x6c>
  406860:	cbnz	x20, 406898 <_obstack_memory_used@@Base+0x90>
  406864:	bl	401c50 <__errno_location@plt>
  406868:	ldr	w0, [x0]
  40686c:	cmp	w0, #0x9
  406870:	csetm	w0, ne  // ne = any
  406874:	ldp	x19, x20, [sp, #16]
  406878:	ldp	x29, x30, [sp], #32
  40687c:	ret
  406880:	cbnz	w0, 406898 <_obstack_memory_used@@Base+0x90>
  406884:	bl	401c50 <__errno_location@plt>
  406888:	mov	x1, x0
  40688c:	mov	w0, #0xffffffff            	// #-1
  406890:	str	wzr, [x1]
  406894:	b	406874 <_obstack_memory_used@@Base+0x6c>
  406898:	mov	w0, #0xffffffff            	// #-1
  40689c:	b	406874 <_obstack_memory_used@@Base+0x6c>
  4068a0:	stp	x29, x30, [sp, #-16]!
  4068a4:	mov	x1, #0x0                   	// #0
  4068a8:	mov	x29, sp
  4068ac:	bl	401c90 <setlocale@plt>
  4068b0:	mov	w1, #0x1                   	// #1
  4068b4:	cbz	x0, 4068d8 <_obstack_memory_used@@Base+0xd0>
  4068b8:	ldrb	w1, [x0]
  4068bc:	cmp	w1, #0x43
  4068c0:	b.eq	4068e4 <_obstack_memory_used@@Base+0xdc>  // b.none
  4068c4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  4068c8:	add	x1, x1, #0xb70
  4068cc:	bl	401b40 <strcmp@plt>
  4068d0:	cmp	w0, #0x0
  4068d4:	cset	w1, ne  // ne = any
  4068d8:	mov	w0, w1
  4068dc:	ldp	x29, x30, [sp], #16
  4068e0:	ret
  4068e4:	ldrb	w2, [x0, #1]
  4068e8:	mov	w1, #0x0                   	// #0
  4068ec:	cbnz	w2, 4068c4 <_obstack_memory_used@@Base+0xbc>
  4068f0:	mov	w0, w1
  4068f4:	ldp	x29, x30, [sp], #16
  4068f8:	ret
  4068fc:	nop
  406900:	stp	x29, x30, [sp, #-16]!
  406904:	mov	w0, #0xe                   	// #14
  406908:	mov	x29, sp
  40690c:	bl	401980 <nl_langinfo@plt>
  406910:	cbz	x0, 406930 <_obstack_memory_used@@Base+0x128>
  406914:	ldrb	w2, [x0]
  406918:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x7f8>
  40691c:	add	x1, x1, #0xb78
  406920:	cmp	w2, #0x0
  406924:	csel	x0, x1, x0, eq  // eq = none
  406928:	ldp	x29, x30, [sp], #16
  40692c:	ret
  406930:	ldp	x29, x30, [sp], #16
  406934:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x7f8>
  406938:	add	x0, x0, #0xb78
  40693c:	ret
  406940:	stp	x29, x30, [sp, #-64]!
  406944:	mov	x29, sp
  406948:	stp	x19, x20, [sp, #16]
  40694c:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x117f8>
  406950:	add	x20, x20, #0xdf0
  406954:	stp	x21, x22, [sp, #32]
  406958:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x117f8>
  40695c:	add	x21, x21, #0xde8
  406960:	sub	x20, x20, x21
  406964:	mov	w22, w0
  406968:	stp	x23, x24, [sp, #48]
  40696c:	mov	x23, x1
  406970:	mov	x24, x2
  406974:	bl	401858 <mbrtowc@plt-0x38>
  406978:	cmp	xzr, x20, asr #3
  40697c:	b.eq	4069a8 <_obstack_memory_used@@Base+0x1a0>  // b.none
  406980:	asr	x20, x20, #3
  406984:	mov	x19, #0x0                   	// #0
  406988:	ldr	x3, [x21, x19, lsl #3]
  40698c:	mov	x2, x24
  406990:	add	x19, x19, #0x1
  406994:	mov	x1, x23
  406998:	mov	w0, w22
  40699c:	blr	x3
  4069a0:	cmp	x20, x19
  4069a4:	b.ne	406988 <_obstack_memory_used@@Base+0x180>  // b.any
  4069a8:	ldp	x19, x20, [sp, #16]
  4069ac:	ldp	x21, x22, [sp, #32]
  4069b0:	ldp	x23, x24, [sp, #48]
  4069b4:	ldp	x29, x30, [sp], #64
  4069b8:	ret
  4069bc:	nop
  4069c0:	ret
  4069c4:	nop
  4069c8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x127f8>
  4069cc:	mov	x1, #0x0                   	// #0
  4069d0:	ldr	x2, [x2, #536]
  4069d4:	b	401900 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004069d8 <.fini>:
  4069d8:	stp	x29, x30, [sp, #-16]!
  4069dc:	mov	x29, sp
  4069e0:	ldp	x29, x30, [sp], #16
  4069e4:	ret
