
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha1.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__sha1@@Base+0x10548>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__sha1@@Base-0xc98>:
     e20:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10548>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
     e38:	add	x0, x0, #0x460
     e3c:	adrp	x1, 13000 <PyInit__sha1@@Base+0x11548>
     e40:	add	x1, x1, #0x460
     e44:	cmp	x0, x1
     e48:	b.eq	e74 <_Py_strhex@plt+0x64>  // b.none
     e4c:	adrp	x1, 12000 <PyInit__sha1@@Base+0x10548>
     e50:	ldr	x1, [x1, #4008]
     e54:	cbz	x1, e74 <_Py_strhex@plt+0x64>
     e58:	stp	x29, x30, [sp, #-16]!
     e5c:	mov	x29, sp
     e60:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
     e64:	add	x0, x0, #0x460
     e68:	blr	x1
     e6c:	ldp	x29, x30, [sp], #16
     e70:	ret
     e74:	ret
     e78:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
     e7c:	add	x0, x0, #0x460
     e80:	adrp	x1, 13000 <PyInit__sha1@@Base+0x11548>
     e84:	add	x1, x1, #0x460
     e88:	sub	x0, x0, x1
     e8c:	lsr	x1, x0, #63
     e90:	add	x0, x1, x0, asr #3
     e94:	cmp	xzr, x0, asr #1
     e98:	b.eq	ec8 <_Py_strhex@plt+0xb8>  // b.none
     e9c:	asr	x1, x0, #1
     ea0:	adrp	x2, 12000 <PyInit__sha1@@Base+0x10548>
     ea4:	ldr	x2, [x2, #4064]
     ea8:	cbz	x2, ec8 <_Py_strhex@plt+0xb8>
     eac:	stp	x29, x30, [sp, #-16]!
     eb0:	mov	x29, sp
     eb4:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
     eb8:	add	x0, x0, #0x460
     ebc:	blr	x2
     ec0:	ldp	x29, x30, [sp], #16
     ec4:	ret
     ec8:	ret
     ecc:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
     ed0:	ldrb	w0, [x0, #1120]
     ed4:	cbnz	w0, f10 <_Py_strhex@plt+0x100>
     ed8:	stp	x29, x30, [sp, #-16]!
     edc:	mov	x29, sp
     ee0:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10548>
     ee4:	ldr	x0, [x0, #4016]
     ee8:	cbz	x0, ef8 <_Py_strhex@plt+0xe8>
     eec:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
     ef0:	ldr	x0, [x0, #144]
     ef4:	bl	d20 <__cxa_finalize@plt>
     ef8:	bl	e34 <_Py_strhex@plt+0x24>
     efc:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
     f00:	mov	w1, #0x1                   	// #1
     f04:	strb	w1, [x0, #1120]
     f08:	ldp	x29, x30, [sp], #16
     f0c:	ret
     f10:	ret
     f14:	stp	x29, x30, [sp, #-16]!
     f18:	mov	x29, sp
     f1c:	bl	e78 <_Py_strhex@plt+0x68>
     f20:	ldp	x29, x30, [sp], #16
     f24:	ret
     f28:	sub	sp, sp, #0x140
     f2c:	mov	x6, sp
     f30:	add	x7, x6, #0x40
     f34:	mov	x4, x6
     f38:	ldrb	w2, [x1]
     f3c:	ldrb	w3, [x1, #1]
     f40:	lsl	w3, w3, #16
     f44:	orr	w2, w3, w2, lsl #24
     f48:	ldrb	w3, [x1, #2]
     f4c:	ldrb	w5, [x1, #3]
     f50:	orr	w3, w5, w3, lsl #8
     f54:	orr	w2, w2, w3
     f58:	str	w2, [x4], #4
     f5c:	add	x1, x1, #0x4
     f60:	cmp	x4, x7
     f64:	b.ne	f38 <_Py_strhex@plt+0x128>  // b.any
     f68:	ldr	w11, [x0, #8]
     f6c:	ldr	w10, [x0, #12]
     f70:	ldr	w9, [x0, #16]
     f74:	ldr	w8, [x0, #20]
     f78:	ldr	w7, [x0, #24]
     f7c:	add	x5, x6, #0x100
     f80:	mov	x1, x6
     f84:	ldr	w2, [x1, #52]
     f88:	ldr	w3, [x1, #32]
     f8c:	eor	w2, w2, w3
     f90:	ldr	w3, [x1, #8]
     f94:	ldr	w4, [x1]
     f98:	eor	w3, w3, w4
     f9c:	eor	w2, w2, w3
     fa0:	ror	w2, w2, #31
     fa4:	str	w2, [x1, #64]
     fa8:	add	x1, x1, #0x4
     fac:	cmp	x1, x5
     fb0:	b.ne	f84 <_Py_strhex@plt+0x174>  // b.any
     fb4:	add	x15, x6, #0x50
     fb8:	mov	x13, x6
     fbc:	mov	w3, w7
     fc0:	mov	w4, w8
     fc4:	mov	w2, w9
     fc8:	mov	w5, w10
     fcc:	mov	w1, w11
     fd0:	mov	w14, #0x7999                	// #31129
     fd4:	movk	w14, #0x5a82, lsl #16
     fd8:	eor	w12, w2, w4
     fdc:	and	w12, w12, w5
     fe0:	eor	w12, w12, w4
     fe4:	ldr	w16, [x13]
     fe8:	add	w12, w12, w16
     fec:	ror	w16, w1, #27
     ff0:	add	w16, w16, w14
     ff4:	add	w12, w12, w16
     ff8:	add	w3, w12, w3
     ffc:	ror	w17, w5, #2
    1000:	eor	w12, w17, w2
    1004:	and	w12, w12, w1
    1008:	eor	w12, w12, w2
    100c:	ldr	w5, [x13, #4]
    1010:	add	w12, w12, w5
    1014:	add	w4, w4, w14
    1018:	add	w4, w12, w4
    101c:	ror	w5, w3, #27
    1020:	add	w4, w5, w4
    1024:	ror	w16, w1, #2
    1028:	eor	w12, w17, w16
    102c:	and	w12, w12, w3
    1030:	eor	w12, w12, w17
    1034:	ldr	w1, [x13, #8]
    1038:	add	w12, w12, w1
    103c:	add	w2, w2, w14
    1040:	add	w2, w12, w2
    1044:	ror	w1, w4, #27
    1048:	add	w2, w1, w2
    104c:	ror	w3, w3, #2
    1050:	eor	w5, w16, w3
    1054:	and	w5, w5, w4
    1058:	eor	w5, w5, w16
    105c:	ldr	w1, [x13, #12]
    1060:	add	w5, w5, w1
    1064:	add	w17, w17, w14
    1068:	add	w5, w5, w17
    106c:	ror	w1, w2, #27
    1070:	add	w5, w1, w5
    1074:	ror	w4, w4, #2
    1078:	eor	w1, w3, w4
    107c:	and	w1, w1, w2
    1080:	eor	w1, w1, w3
    1084:	ldr	w12, [x13, #16]
    1088:	add	w1, w1, w12
    108c:	add	w16, w16, w14
    1090:	add	w1, w1, w16
    1094:	ror	w12, w5, #27
    1098:	add	w1, w12, w1
    109c:	ror	w2, w2, #2
    10a0:	add	x13, x13, #0x14
    10a4:	cmp	x13, x15
    10a8:	b.ne	fd8 <_Py_strhex@plt+0x1c8>  // b.any
    10ac:	mov	w12, #0x14                  	// #20
    10b0:	mov	w14, #0xeba1                	// #60321
    10b4:	movk	w14, #0x6ed9, lsl #16
    10b8:	eor	w13, w5, w2
    10bc:	eor	w13, w13, w4
    10c0:	ldr	w15, [x6, #80]
    10c4:	add	w13, w13, w15
    10c8:	ror	w15, w1, #27
    10cc:	add	w15, w15, w14
    10d0:	add	w13, w13, w15
    10d4:	add	w3, w13, w3
    10d8:	ror	w16, w5, #2
    10dc:	eor	w13, w1, w2
    10e0:	eor	w13, w13, w16
    10e4:	ldr	w5, [x6, #84]
    10e8:	add	w13, w13, w5
    10ec:	add	w4, w4, w14
    10f0:	add	w4, w13, w4
    10f4:	ror	w5, w3, #27
    10f8:	add	w4, w5, w4
    10fc:	ror	w15, w1, #2
    1100:	eor	w13, w16, w15
    1104:	eor	w13, w13, w3
    1108:	ldr	w1, [x6, #88]
    110c:	add	w13, w13, w1
    1110:	add	w2, w2, w14
    1114:	add	w2, w13, w2
    1118:	ror	w1, w4, #27
    111c:	add	w2, w1, w2
    1120:	ror	w3, w3, #2
    1124:	eor	w5, w15, w3
    1128:	eor	w5, w5, w4
    112c:	ldr	w1, [x6, #92]
    1130:	add	w5, w5, w1
    1134:	add	w16, w16, w14
    1138:	add	w5, w5, w16
    113c:	ror	w1, w2, #27
    1140:	add	w5, w1, w5
    1144:	ror	w4, w4, #2
    1148:	add	w12, w12, #0x5
    114c:	eor	w1, w3, w4
    1150:	eor	w1, w1, w2
    1154:	ldr	w13, [x6, #96]
    1158:	add	w1, w1, w13
    115c:	add	w15, w15, w14
    1160:	add	w1, w1, w15
    1164:	ror	w13, w5, #27
    1168:	add	w1, w13, w1
    116c:	ror	w2, w2, #2
    1170:	add	x6, x6, #0x14
    1174:	cmp	w12, #0x28
    1178:	b.ne	10b8 <_Py_strhex@plt+0x2a8>  // b.any
    117c:	mov	w14, #0xbcdc                	// #48348
    1180:	movk	w14, #0x8f1b, lsl #16
    1184:	mov	x13, sp
    1188:	orr	w6, w5, w2
    118c:	and	w6, w6, w4
    1190:	and	w15, w5, w2
    1194:	orr	w6, w6, w15
    1198:	add	w6, w6, w14
    119c:	ror	w15, w1, #27
    11a0:	ldr	w16, [x13, w12, uxtw #2]
    11a4:	add	w15, w15, w16
    11a8:	add	w6, w6, w15
    11ac:	add	w3, w6, w3
    11b0:	ror	w5, w5, #2
    11b4:	orr	w6, w5, w1
    11b8:	and	w6, w6, w2
    11bc:	and	w15, w5, w1
    11c0:	orr	w6, w6, w15
    11c4:	add	w15, w12, #0x1
    11c8:	ldr	w15, [x13, x15, lsl #2]
    11cc:	add	w6, w6, w15
    11d0:	add	w4, w4, w14
    11d4:	add	w4, w6, w4
    11d8:	ror	w6, w3, #27
    11dc:	add	w4, w6, w4
    11e0:	ror	w15, w1, #2
    11e4:	orr	w6, w3, w15
    11e8:	and	w6, w6, w5
    11ec:	and	w1, w3, w15
    11f0:	orr	w6, w6, w1
    11f4:	ror	w1, w4, #27
    11f8:	add	w6, w6, w1
    11fc:	add	w2, w2, w14
    1200:	add	w2, w6, w2
    1204:	add	w1, w12, #0x2
    1208:	ldr	w1, [x13, x1, lsl #2]
    120c:	add	w2, w2, w1
    1210:	ror	w3, w3, #2
    1214:	add	w16, w12, #0x4
    1218:	orr	w6, w4, w3
    121c:	and	w6, w6, w15
    1220:	and	w1, w4, w3
    1224:	orr	w6, w6, w1
    1228:	add	w1, w12, #0x3
    122c:	ldr	w1, [x13, x1, lsl #2]
    1230:	add	w6, w6, w1
    1234:	add	w5, w5, w14
    1238:	add	w5, w6, w5
    123c:	ror	w1, w2, #27
    1240:	add	w5, w1, w5
    1244:	ror	w4, w4, #2
    1248:	orr	w1, w2, w4
    124c:	and	w1, w1, w3
    1250:	and	w6, w2, w4
    1254:	orr	w1, w1, w6
    1258:	ror	w6, w5, #27
    125c:	add	w1, w1, w6
    1260:	add	w15, w15, w14
    1264:	add	w1, w1, w15
    1268:	add	w12, w12, #0x5
    126c:	ldr	w6, [x13, w16, uxtw #2]
    1270:	add	w1, w1, w6
    1274:	ror	w2, w2, #2
    1278:	cmp	w12, #0x3b
    127c:	b.ls	1188 <_Py_strhex@plt+0x378>  // b.plast
    1280:	cmp	w12, #0x4f
    1284:	b.hi	1364 <_Py_strhex@plt+0x554>  // b.pmore
    1288:	mov	x14, sp
    128c:	mov	w13, #0xc1d6                	// #49622
    1290:	movk	w13, #0xca62, lsl #16
    1294:	ror	w6, w1, #27
    1298:	ldr	w15, [x14, w12, uxtw #2]
    129c:	add	w6, w6, w15
    12a0:	eor	w15, w5, w2
    12a4:	eor	w15, w15, w4
    12a8:	add	w15, w15, w13
    12ac:	add	w6, w6, w15
    12b0:	add	w3, w6, w3
    12b4:	ror	w15, w5, #2
    12b8:	eor	w6, w1, w2
    12bc:	eor	w6, w6, w15
    12c0:	add	w5, w12, #0x1
    12c4:	ldr	w5, [x14, x5, lsl #2]
    12c8:	add	w6, w6, w5
    12cc:	add	w4, w4, w13
    12d0:	add	w4, w6, w4
    12d4:	ror	w5, w3, #27
    12d8:	add	w4, w5, w4
    12dc:	ror	w16, w1, #2
    12e0:	eor	w6, w15, w16
    12e4:	eor	w6, w6, w3
    12e8:	add	w1, w12, #0x2
    12ec:	ldr	w1, [x14, x1, lsl #2]
    12f0:	add	w6, w6, w1
    12f4:	add	w2, w2, w13
    12f8:	add	w2, w6, w2
    12fc:	ror	w1, w4, #27
    1300:	add	w2, w1, w2
    1304:	ror	w3, w3, #2
    1308:	add	w6, w12, #0x4
    130c:	eor	w5, w16, w3
    1310:	eor	w5, w5, w4
    1314:	add	w1, w12, #0x3
    1318:	ldr	w1, [x14, x1, lsl #2]
    131c:	add	w5, w5, w1
    1320:	add	w15, w15, w13
    1324:	add	w5, w5, w15
    1328:	ror	w1, w2, #27
    132c:	add	w5, w1, w5
    1330:	ror	w4, w4, #2
    1334:	add	w12, w12, #0x5
    1338:	eor	w1, w3, w4
    133c:	eor	w1, w1, w2
    1340:	ldr	w6, [x14, w6, uxtw #2]
    1344:	add	w1, w1, w6
    1348:	add	w6, w16, w13
    134c:	add	w1, w1, w6
    1350:	ror	w6, w5, #27
    1354:	add	w1, w6, w1
    1358:	ror	w2, w2, #2
    135c:	cmp	w12, #0x4f
    1360:	b.ls	1294 <_Py_strhex@plt+0x484>  // b.plast
    1364:	add	w1, w11, w1
    1368:	str	w1, [x0, #8]
    136c:	add	w5, w10, w5
    1370:	str	w5, [x0, #12]
    1374:	add	w2, w9, w2
    1378:	str	w2, [x0, #16]
    137c:	add	w4, w8, w4
    1380:	str	w4, [x0, #20]
    1384:	add	w3, w7, w3
    1388:	str	w3, [x0, #24]
    138c:	add	sp, sp, #0x140
    1390:	ret
    1394:	stp	x29, x30, [sp, #-32]!
    1398:	mov	x29, sp
    139c:	stp	x19, x20, [sp, #16]
    13a0:	mov	x19, x0
    13a4:	mov	x20, x1
    13a8:	ldr	w3, [x0, #28]
    13ac:	lsl	w1, w3, #3
    13b0:	ldr	x0, [x0]
    13b4:	add	x0, x0, x1
    13b8:	str	x0, [x19]
    13bc:	add	w1, w3, #0x1
    13c0:	str	w1, [x19, #28]
    13c4:	add	x0, x19, w3, uxtw
    13c8:	mov	w2, #0xffffff80            	// #-128
    13cc:	strb	w2, [x0, #32]
    13d0:	cmp	w1, #0x38
    13d4:	b.ls	14ec <_Py_strhex@plt+0x6dc>  // b.plast
    13d8:	cmp	w1, #0x3f
    13dc:	b.hi	1414 <_Py_strhex@plt+0x604>  // b.pmore
    13e0:	mov	w1, w1
    13e4:	add	x0, x1, #0x20
    13e8:	add	x0, x19, x0
    13ec:	mov	w2, #0x3e                  	// #62
    13f0:	sub	w2, w2, w3
    13f4:	add	x1, x2, x1
    13f8:	add	x2, x19, #0x21
    13fc:	add	x1, x1, x2
    1400:	strb	wzr, [x0], #1
    1404:	cmp	x0, x1
    1408:	b.ne	1400 <_Py_strhex@plt+0x5f0>  // b.any
    140c:	mov	w0, #0x40                  	// #64
    1410:	str	w0, [x19, #28]
    1414:	add	x1, x19, #0x20
    1418:	mov	x0, x19
    141c:	bl	f28 <_Py_strhex@plt+0x118>
    1420:	mov	w1, #0x0                   	// #0
    1424:	mov	w0, w1
    1428:	add	x2, x19, w0, uxtw
    142c:	strb	wzr, [x2, #32]
    1430:	add	w0, w0, #0x1
    1434:	cmp	w0, #0x37
    1438:	b.ls	1428 <_Py_strhex@plt+0x618>  // b.plast
    143c:	add	w2, w1, #0x1
    1440:	mov	w0, #0x37                  	// #55
    1444:	sub	w1, w0, w1
    1448:	cmp	w2, #0x38
    144c:	csel	w1, w1, wzr, ls  // ls = plast
    1450:	add	w1, w1, w2
    1454:	str	w1, [x19, #28]
    1458:	ldr	x0, [x19]
    145c:	asr	x1, x0, #56
    1460:	strb	w1, [x19, #88]
    1464:	asr	x1, x0, #48
    1468:	strb	w1, [x19, #89]
    146c:	asr	x1, x0, #40
    1470:	strb	w1, [x19, #90]
    1474:	asr	x1, x0, #32
    1478:	strb	w1, [x19, #91]
    147c:	asr	x1, x0, #24
    1480:	strb	w1, [x19, #92]
    1484:	asr	x1, x0, #16
    1488:	strb	w1, [x19, #93]
    148c:	asr	x1, x0, #8
    1490:	strb	w1, [x19, #94]
    1494:	strb	w0, [x19, #95]
    1498:	add	x1, x19, #0x20
    149c:	mov	x0, x19
    14a0:	bl	f28 <_Py_strhex@plt+0x118>
    14a4:	add	x19, x19, #0x8
    14a8:	mov	x0, x20
    14ac:	add	x2, x20, #0x14
    14b0:	ldrb	w1, [x19, #3]
    14b4:	strb	w1, [x0]
    14b8:	ldrh	w1, [x19, #2]
    14bc:	strb	w1, [x0, #1]
    14c0:	ldr	w1, [x19]
    14c4:	lsr	w1, w1, #8
    14c8:	strb	w1, [x0, #2]
    14cc:	ldr	w1, [x19], #4
    14d0:	strb	w1, [x0, #3]
    14d4:	add	x0, x0, #0x4
    14d8:	cmp	x0, x2
    14dc:	b.ne	14b0 <_Py_strhex@plt+0x6a0>  // b.any
    14e0:	ldp	x19, x20, [sp, #16]
    14e4:	ldp	x29, x30, [sp], #32
    14e8:	ret
    14ec:	cmp	w1, #0x37
    14f0:	b.ls	1424 <_Py_strhex@plt+0x614>  // b.plast
    14f4:	b	1458 <_Py_strhex@plt+0x648>
    14f8:	stp	x29, x30, [sp, #-32]!
    14fc:	mov	x29, sp
    1500:	str	x19, [sp, #16]
    1504:	mov	x19, x0
    1508:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
    150c:	add	x0, x0, #0x98
    1510:	bl	de0 <_PyObject_New@plt>
    1514:	cbz	x0, 1548 <_Py_strhex@plt+0x738>
    1518:	ldp	x4, x5, [x19, #16]
    151c:	stp	x4, x5, [x0, #16]
    1520:	ldp	x4, x5, [x19, #32]
    1524:	stp	x4, x5, [x0, #32]
    1528:	ldp	x4, x5, [x19, #48]
    152c:	stp	x4, x5, [x0, #48]
    1530:	ldp	x4, x5, [x19, #64]
    1534:	stp	x4, x5, [x0, #64]
    1538:	ldp	x4, x5, [x19, #80]
    153c:	stp	x4, x5, [x0, #80]
    1540:	ldp	x2, x3, [x19, #96]
    1544:	stp	x2, x3, [x0, #96]
    1548:	ldr	x19, [sp, #16]
    154c:	ldp	x29, x30, [sp], #32
    1550:	ret
    1554:	cmp	x2, #0x0
    1558:	b.le	162c <_Py_strhex@plt+0x81c>
    155c:	stp	x29, x30, [sp, #-64]!
    1560:	mov	x29, sp
    1564:	stp	x19, x20, [sp, #16]
    1568:	stp	x21, x22, [sp, #32]
    156c:	stp	x23, x24, [sp, #48]
    1570:	mov	x21, x0
    1574:	mov	x22, x1
    1578:	mov	x20, x2
    157c:	mov	w24, #0x40                  	// #64
    1580:	add	x23, x0, #0x20
    1584:	b	15b0 <_Py_strhex@plt+0x7a0>
    1588:	mov	x1, x22
    158c:	mov	x0, x21
    1590:	bl	f28 <_Py_strhex@plt+0x118>
    1594:	ldr	x0, [x21]
    1598:	add	x0, x0, #0x200
    159c:	str	x0, [x21]
    15a0:	add	x22, x22, #0x40
    15a4:	sub	x20, x20, #0x40
    15a8:	cmp	x20, #0x0
    15ac:	b.le	1618 <_Py_strhex@plt+0x808>
    15b0:	ldr	w0, [x21, #28]
    15b4:	cmp	x20, #0x3f
    15b8:	ccmp	w0, #0x0, #0x0, gt
    15bc:	b.eq	1588 <_Py_strhex@plt+0x778>  // b.none
    15c0:	sub	w19, w24, w0
    15c4:	cmp	x19, x20
    15c8:	csel	x19, x19, x20, le
    15cc:	mov	x2, x19
    15d0:	mov	x1, x22
    15d4:	add	x0, x23, w0, uxtw
    15d8:	bl	d00 <memcpy@plt>
    15dc:	ldr	w0, [x21, #28]
    15e0:	add	w0, w0, w19
    15e4:	str	w0, [x21, #28]
    15e8:	add	x22, x22, x19
    15ec:	sub	x20, x20, x19
    15f0:	cmp	w0, #0x40
    15f4:	b.ne	15a8 <_Py_strhex@plt+0x798>  // b.any
    15f8:	mov	x1, x23
    15fc:	mov	x0, x21
    1600:	bl	f28 <_Py_strhex@plt+0x118>
    1604:	ldr	x0, [x21]
    1608:	add	x0, x0, #0x200
    160c:	str	x0, [x21]
    1610:	str	wzr, [x21, #28]
    1614:	b	15a8 <_Py_strhex@plt+0x798>
    1618:	ldp	x19, x20, [sp, #16]
    161c:	ldp	x21, x22, [sp, #32]
    1620:	ldp	x23, x24, [sp, #48]
    1624:	ldp	x29, x30, [sp], #64
    1628:	ret
    162c:	ret
    1630:	stp	x29, x30, [sp, #-112]!
    1634:	mov	x29, sp
    1638:	str	x19, [sp, #16]
    163c:	mov	x19, x0
    1640:	mov	x0, x1
    1644:	ldr	x1, [x1, #8]
    1648:	ldr	x2, [x1, #168]
    164c:	tbnz	w2, #28, 16b8 <_Py_strhex@plt+0x8a8>
    1650:	ldr	x1, [x1, #160]
    1654:	cbz	x1, 16d8 <_Py_strhex@plt+0x8c8>
    1658:	ldr	x1, [x1]
    165c:	cbz	x1, 16d8 <_Py_strhex@plt+0x8c8>
    1660:	mov	w2, #0x0                   	// #0
    1664:	add	x1, sp, #0x20
    1668:	bl	dd0 <PyObject_GetBuffer@plt>
    166c:	cmn	w0, #0x1
    1670:	b.eq	1720 <_Py_strhex@plt+0x910>  // b.none
    1674:	ldr	w0, [sp, #68]
    1678:	cmp	w0, #0x1
    167c:	b.gt	16f8 <_Py_strhex@plt+0x8e8>
    1680:	ldr	x2, [sp, #48]
    1684:	ldr	x1, [sp, #32]
    1688:	add	x0, x19, #0x10
    168c:	bl	1554 <_Py_strhex@plt+0x744>
    1690:	add	x0, sp, #0x20
    1694:	bl	d10 <PyBuffer_Release@plt>
    1698:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10548>
    169c:	ldr	x0, [x0, #4056]
    16a0:	ldr	x1, [x0]
    16a4:	add	x1, x1, #0x1
    16a8:	str	x1, [x0]
    16ac:	ldr	x19, [sp, #16]
    16b0:	ldp	x29, x30, [sp], #112
    16b4:	ret
    16b8:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    16bc:	add	x1, x1, #0xb48
    16c0:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10548>
    16c4:	ldr	x0, [x0, #4032]
    16c8:	ldr	x0, [x0]
    16cc:	bl	d60 <PyErr_SetString@plt>
    16d0:	mov	x0, #0x0                   	// #0
    16d4:	b	16ac <_Py_strhex@plt+0x89c>
    16d8:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    16dc:	add	x1, x1, #0xb78
    16e0:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10548>
    16e4:	ldr	x0, [x0, #4032]
    16e8:	ldr	x0, [x0]
    16ec:	bl	d60 <PyErr_SetString@plt>
    16f0:	mov	x0, #0x0                   	// #0
    16f4:	b	16ac <_Py_strhex@plt+0x89c>
    16f8:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    16fc:	add	x1, x1, #0xba8
    1700:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10548>
    1704:	ldr	x0, [x0, #4024]
    1708:	ldr	x0, [x0]
    170c:	bl	d60 <PyErr_SetString@plt>
    1710:	add	x0, sp, #0x20
    1714:	bl	d10 <PyBuffer_Release@plt>
    1718:	mov	x0, #0x0                   	// #0
    171c:	b	16ac <_Py_strhex@plt+0x89c>
    1720:	mov	x0, #0x0                   	// #0
    1724:	b	16ac <_Py_strhex@plt+0x89c>
    1728:	stp	x29, x30, [sp, #-16]!
    172c:	mov	x29, sp
    1730:	mov	x0, #0x14                  	// #20
    1734:	bl	d90 <PyLong_FromLong@plt>
    1738:	ldp	x29, x30, [sp], #16
    173c:	ret
    1740:	stp	x29, x30, [sp, #-16]!
    1744:	mov	x29, sp
    1748:	mov	x0, #0x40                  	// #64
    174c:	bl	d90 <PyLong_FromLong@plt>
    1750:	ldp	x29, x30, [sp], #16
    1754:	ret
    1758:	stp	x29, x30, [sp, #-16]!
    175c:	mov	x29, sp
    1760:	mov	x1, #0x4                   	// #4
    1764:	adrp	x0, 1000 <_Py_strhex@plt+0x1f0>
    1768:	add	x0, x0, #0xbc8
    176c:	bl	e00 <PyUnicode_FromStringAndSize@plt>
    1770:	ldp	x29, x30, [sp], #16
    1774:	ret
    1778:	stp	x29, x30, [sp, #-160]!
    177c:	mov	x29, sp
    1780:	str	x19, [sp, #16]
    1784:	ldp	x2, x3, [x0, #16]
    1788:	stp	x2, x3, [sp, #64]
    178c:	ldp	x2, x3, [x0, #32]
    1790:	stp	x2, x3, [sp, #80]
    1794:	ldp	x2, x3, [x0, #48]
    1798:	stp	x2, x3, [sp, #96]
    179c:	ldp	x2, x3, [x0, #64]
    17a0:	stp	x2, x3, [sp, #112]
    17a4:	ldp	x2, x3, [x0, #80]
    17a8:	stp	x2, x3, [sp, #128]
    17ac:	ldp	x0, x1, [x0, #96]
    17b0:	stp	x0, x1, [sp, #144]
    17b4:	add	x19, sp, #0x28
    17b8:	mov	x1, x19
    17bc:	add	x0, sp, #0x40
    17c0:	bl	1394 <_Py_strhex@plt+0x584>
    17c4:	mov	x1, #0x14                  	// #20
    17c8:	mov	x0, x19
    17cc:	bl	e10 <_Py_strhex@plt>
    17d0:	ldr	x19, [sp, #16]
    17d4:	ldp	x29, x30, [sp], #160
    17d8:	ret
    17dc:	stp	x29, x30, [sp, #-160]!
    17e0:	mov	x29, sp
    17e4:	str	x19, [sp, #16]
    17e8:	ldp	x2, x3, [x0, #16]
    17ec:	stp	x2, x3, [sp, #64]
    17f0:	ldp	x2, x3, [x0, #32]
    17f4:	stp	x2, x3, [sp, #80]
    17f8:	ldp	x2, x3, [x0, #48]
    17fc:	stp	x2, x3, [sp, #96]
    1800:	ldp	x2, x3, [x0, #64]
    1804:	stp	x2, x3, [sp, #112]
    1808:	ldp	x2, x3, [x0, #80]
    180c:	stp	x2, x3, [sp, #128]
    1810:	ldp	x0, x1, [x0, #96]
    1814:	stp	x0, x1, [sp, #144]
    1818:	add	x19, sp, #0x28
    181c:	mov	x1, x19
    1820:	add	x0, sp, #0x40
    1824:	bl	1394 <_Py_strhex@plt+0x584>
    1828:	mov	x1, #0x14                  	// #20
    182c:	mov	x0, x19
    1830:	bl	d30 <PyBytes_FromStringAndSize@plt>
    1834:	ldr	x19, [sp, #16]
    1838:	ldp	x29, x30, [sp], #160
    183c:	ret
    1840:	stp	x29, x30, [sp, #-16]!
    1844:	mov	x29, sp
    1848:	bl	d70 <PyObject_Free@plt>
    184c:	ldp	x29, x30, [sp], #16
    1850:	ret
    1854:	sub	sp, sp, #0x90
    1858:	stp	x29, x30, [sp, #16]
    185c:	add	x29, sp, #0x10
    1860:	stp	x19, x20, [sp, #32]
    1864:	mov	x0, x1
    1868:	mov	x1, x2
    186c:	cbz	x3, 1978 <_Py_strhex@plt+0xb68>
    1870:	ldr	x19, [x3, #16]
    1874:	add	x19, x2, x19
    1878:	add	x2, sp, #0x88
    187c:	str	x2, [sp]
    1880:	mov	w7, #0x0                   	// #0
    1884:	mov	w6, #0x1                   	// #1
    1888:	mov	w5, #0x0                   	// #0
    188c:	adrp	x4, 13000 <PyInit__sha1@@Base+0x11548>
    1890:	add	x4, x4, #0x98
    1894:	add	x4, x4, #0x1a0
    1898:	mov	x2, #0x0                   	// #0
    189c:	bl	d50 <_PyArg_UnpackKeywords@plt>
    18a0:	cbz	x0, 1a48 <_Py_strhex@plt+0xc38>
    18a4:	cbz	x19, 1a50 <_Py_strhex@plt+0xc40>
    18a8:	ldr	x20, [x0]
    18ac:	cbz	x20, 1a50 <_Py_strhex@plt+0xc40>
    18b0:	ldr	x0, [x20, #8]
    18b4:	ldr	x1, [x0, #168]
    18b8:	tbnz	w1, #28, 1994 <_Py_strhex@plt+0xb84>
    18bc:	ldr	x0, [x0, #160]
    18c0:	cbz	x0, 19b4 <_Py_strhex@plt+0xba4>
    18c4:	ldr	x0, [x0]
    18c8:	cbz	x0, 19b4 <_Py_strhex@plt+0xba4>
    18cc:	mov	w2, #0x0                   	// #0
    18d0:	add	x1, sp, #0x38
    18d4:	mov	x0, x20
    18d8:	bl	dd0 <PyObject_GetBuffer@plt>
    18dc:	cmn	w0, #0x1
    18e0:	b.eq	1a40 <_Py_strhex@plt+0xc30>  // b.none
    18e4:	ldr	w0, [sp, #92]
    18e8:	cmp	w0, #0x1
    18ec:	b.gt	19d4 <_Py_strhex@plt+0xbc4>
    18f0:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
    18f4:	add	x0, x0, #0x98
    18f8:	bl	de0 <_PyObject_New@plt>
    18fc:	mov	x19, x0
    1900:	cbz	x0, 19fc <_Py_strhex@plt+0xbec>
    1904:	mov	w1, #0x2301                	// #8961
    1908:	movk	w1, #0x6745, lsl #16
    190c:	str	w1, [x0, #24]
    1910:	mov	w1, #0xab89                	// #43913
    1914:	movk	w1, #0xefcd, lsl #16
    1918:	str	w1, [x0, #28]
    191c:	mov	w1, #0xdcfe                	// #56574
    1920:	movk	w1, #0x98ba, lsl #16
    1924:	str	w1, [x0, #32]
    1928:	mov	w1, #0x5476                	// #21622
    192c:	movk	w1, #0x1032, lsl #16
    1930:	str	w1, [x0, #36]
    1934:	mov	w1, #0xe1f0                	// #57840
    1938:	movk	w1, #0xc3d2, lsl #16
    193c:	str	w1, [x0, #40]
    1940:	str	wzr, [x0, #44]
    1944:	str	xzr, [x0, #16]
    1948:	bl	db0 <PyErr_Occurred@plt>
    194c:	cbz	x0, 1a14 <_Py_strhex@plt+0xc04>
    1950:	ldr	x0, [x19]
    1954:	sub	x0, x0, #0x1
    1958:	str	x0, [x19]
    195c:	cbz	x0, 1a08 <_Py_strhex@plt+0xbf8>
    1960:	mov	x19, x20
    1964:	cbz	x20, 1a2c <_Py_strhex@plt+0xc1c>
    1968:	add	x0, sp, #0x38
    196c:	bl	d10 <PyBuffer_Release@plt>
    1970:	mov	x19, #0x0                   	// #0
    1974:	b	1a2c <_Py_strhex@plt+0xc1c>
    1978:	cmp	x0, #0x0
    197c:	ccmp	x2, #0x1, #0x2, ne  // ne = any
    1980:	b.ls	198c <_Py_strhex@plt+0xb7c>  // b.plast
    1984:	mov	x19, x2
    1988:	b	1878 <_Py_strhex@plt+0xa68>
    198c:	mov	x19, x2
    1990:	b	18a4 <_Py_strhex@plt+0xa94>
    1994:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1998:	add	x1, x1, #0xb48
    199c:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10548>
    19a0:	ldr	x0, [x0, #4032]
    19a4:	ldr	x0, [x0]
    19a8:	bl	d60 <PyErr_SetString@plt>
    19ac:	mov	x19, #0x0                   	// #0
    19b0:	b	1a2c <_Py_strhex@plt+0xc1c>
    19b4:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    19b8:	add	x1, x1, #0xb78
    19bc:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10548>
    19c0:	ldr	x0, [x0, #4032]
    19c4:	ldr	x0, [x0]
    19c8:	bl	d60 <PyErr_SetString@plt>
    19cc:	mov	x19, #0x0                   	// #0
    19d0:	b	1a2c <_Py_strhex@plt+0xc1c>
    19d4:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    19d8:	add	x1, x1, #0xba8
    19dc:	adrp	x0, 12000 <PyInit__sha1@@Base+0x10548>
    19e0:	ldr	x0, [x0, #4024]
    19e4:	ldr	x0, [x0]
    19e8:	bl	d60 <PyErr_SetString@plt>
    19ec:	add	x0, sp, #0x38
    19f0:	bl	d10 <PyBuffer_Release@plt>
    19f4:	mov	x19, #0x0                   	// #0
    19f8:	b	1a2c <_Py_strhex@plt+0xc1c>
    19fc:	add	x0, sp, #0x38
    1a00:	bl	d10 <PyBuffer_Release@plt>
    1a04:	b	1a2c <_Py_strhex@plt+0xc1c>
    1a08:	mov	x0, x19
    1a0c:	bl	d40 <_Py_Dealloc@plt>
    1a10:	b	1960 <_Py_strhex@plt+0xb50>
    1a14:	ldr	x2, [sp, #72]
    1a18:	ldr	x1, [sp, #56]
    1a1c:	add	x0, x19, #0x10
    1a20:	bl	1554 <_Py_strhex@plt+0x744>
    1a24:	add	x0, sp, #0x38
    1a28:	bl	d10 <PyBuffer_Release@plt>
    1a2c:	mov	x0, x19
    1a30:	ldp	x19, x20, [sp, #32]
    1a34:	ldp	x29, x30, [sp, #16]
    1a38:	add	sp, sp, #0x90
    1a3c:	ret
    1a40:	mov	x19, #0x0                   	// #0
    1a44:	b	1a2c <_Py_strhex@plt+0xc1c>
    1a48:	mov	x19, x0
    1a4c:	b	1a2c <_Py_strhex@plt+0xc1c>
    1a50:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
    1a54:	add	x0, x0, #0x98
    1a58:	bl	de0 <_PyObject_New@plt>
    1a5c:	mov	x19, x0
    1a60:	cbz	x0, 1a2c <_Py_strhex@plt+0xc1c>
    1a64:	mov	w1, #0x2301                	// #8961
    1a68:	movk	w1, #0x6745, lsl #16
    1a6c:	str	w1, [x0, #24]
    1a70:	mov	w1, #0xab89                	// #43913
    1a74:	movk	w1, #0xefcd, lsl #16
    1a78:	str	w1, [x0, #28]
    1a7c:	mov	w1, #0xdcfe                	// #56574
    1a80:	movk	w1, #0x98ba, lsl #16
    1a84:	str	w1, [x0, #32]
    1a88:	mov	w1, #0x5476                	// #21622
    1a8c:	movk	w1, #0x1032, lsl #16
    1a90:	str	w1, [x0, #36]
    1a94:	mov	w1, #0xe1f0                	// #57840
    1a98:	movk	w1, #0xc3d2, lsl #16
    1a9c:	str	w1, [x0, #40]
    1aa0:	str	wzr, [x0, #44]
    1aa4:	str	xzr, [x0, #16]
    1aa8:	bl	db0 <PyErr_Occurred@plt>
    1aac:	cbz	x0, 1a2c <_Py_strhex@plt+0xc1c>
    1ab0:	mov	x20, #0x0                   	// #0
    1ab4:	b	1950 <_Py_strhex@plt+0xb40>

0000000000001ab8 <PyInit__sha1@@Base>:
    1ab8:	stp	x29, x30, [sp, #-32]!
    1abc:	mov	x29, sp
    1ac0:	str	x19, [sp, #16]
    1ac4:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
    1ac8:	add	x0, x0, #0x98
    1acc:	adrp	x1, 12000 <PyInit__sha1@@Base+0x10548>
    1ad0:	ldr	x1, [x1, #4048]
    1ad4:	str	x1, [x0, #8]
    1ad8:	bl	d80 <PyType_Ready@plt>
    1adc:	mov	x19, #0x0                   	// #0
    1ae0:	tbnz	w0, #31, 1b24 <PyInit__sha1@@Base+0x6c>
    1ae4:	mov	w1, #0x3f5                 	// #1013
    1ae8:	adrp	x0, 13000 <PyInit__sha1@@Base+0x11548>
    1aec:	add	x0, x0, #0x98
    1af0:	add	x0, x0, #0x1e0
    1af4:	bl	dc0 <PyModule_Create2@plt>
    1af8:	mov	x19, x0
    1afc:	cbz	x0, 1b24 <PyInit__sha1@@Base+0x6c>
    1b00:	adrp	x2, 13000 <PyInit__sha1@@Base+0x11548>
    1b04:	ldr	x0, [x2, #152]
    1b08:	add	x0, x0, #0x1
    1b0c:	str	x0, [x2, #152]
    1b10:	add	x2, x2, #0x98
    1b14:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1b18:	add	x1, x1, #0xbd0
    1b1c:	mov	x0, x19
    1b20:	bl	df0 <PyModule_AddObject@plt>
    1b24:	mov	x0, x19
    1b28:	ldr	x19, [sp, #16]
    1b2c:	ldp	x29, x30, [sp], #32
    1b30:	ret

Disassembly of section .fini:

0000000000001b34 <.fini>:
    1b34:	stp	x29, x30, [sp, #-16]!
    1b38:	mov	x29, sp
    1b3c:	ldp	x29, x30, [sp], #16
    1b40:	ret
