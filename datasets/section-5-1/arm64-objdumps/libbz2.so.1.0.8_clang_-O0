
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libbz2.so.1.0.8_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001430 <.init>:
    1430:	stp	x29, x30, [sp, #-16]!
    1434:	mov	x29, sp
    1438:	bl	1700 <ferror@plt+0x10>
    143c:	ldp	x29, x30, [sp], #16
    1440:	ret

Disassembly of section .plt:

0000000000001450 <BZ2_hbMakeCodeLengths@plt-0x20>:
    1450:	stp	x16, x30, [sp, #-16]!
    1454:	adrp	x16, 26000 <BZ2_bzerror@@Base+0x10f84>
    1458:	ldr	x17, [x16, #4088]
    145c:	add	x16, x16, #0xff8
    1460:	br	x17
    1464:	nop
    1468:	nop
    146c:	nop

0000000000001470 <BZ2_hbMakeCodeLengths@plt>:
    1470:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1474:	ldr	x17, [x16]
    1478:	add	x16, x16, #0x0
    147c:	br	x17

0000000000001480 <exit@plt>:
    1480:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1484:	ldr	x17, [x16, #8]
    1488:	add	x16, x16, #0x8
    148c:	br	x17

0000000000001490 <__cxa_finalize@plt>:
    1490:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1494:	ldr	x17, [x16, #16]
    1498:	add	x16, x16, #0x10
    149c:	br	x17

00000000000014a0 <BZ2_bzlibVersion@plt>:
    14a0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    14a4:	ldr	x17, [x16, #24]
    14a8:	add	x16, x16, #0x18
    14ac:	br	x17

00000000000014b0 <fclose@plt>:
    14b0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    14b4:	ldr	x17, [x16, #32]
    14b8:	add	x16, x16, #0x20
    14bc:	br	x17

00000000000014c0 <malloc@plt>:
    14c0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    14c4:	ldr	x17, [x16, #40]
    14c8:	add	x16, x16, #0x28
    14cc:	br	x17

00000000000014d0 <BZ2_bzDecompressInit@plt>:
    14d0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    14d4:	ldr	x17, [x16, #48]
    14d8:	add	x16, x16, #0x30
    14dc:	br	x17

00000000000014e0 <BZ2_bzDecompressEnd@plt>:
    14e0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    14e4:	ldr	x17, [x16, #56]
    14e8:	add	x16, x16, #0x38
    14ec:	br	x17

00000000000014f0 <BZ2_bzReadClose@plt>:
    14f0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    14f4:	ldr	x17, [x16, #64]
    14f8:	add	x16, x16, #0x40
    14fc:	br	x17

0000000000001500 <strcat@plt>:
    1500:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1504:	ldr	x17, [x16, #72]
    1508:	add	x16, x16, #0x48
    150c:	br	x17

0000000000001510 <fgetc@plt>:
    1510:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1514:	ldr	x17, [x16, #80]
    1518:	add	x16, x16, #0x50
    151c:	br	x17

0000000000001520 <fdopen@plt>:
    1520:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1524:	ldr	x17, [x16, #88]
    1528:	add	x16, x16, #0x58
    152c:	br	x17

0000000000001530 <BZ2_bzWriteOpen@plt>:
    1530:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1534:	ldr	x17, [x16, #96]
    1538:	add	x16, x16, #0x60
    153c:	br	x17

0000000000001540 <BZ2_bzCompressInit@plt>:
    1540:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1544:	ldr	x17, [x16, #104]
    1548:	add	x16, x16, #0x68
    154c:	br	x17

0000000000001550 <BZ2_bzCompressEnd@plt>:
    1550:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1554:	ldr	x17, [x16, #112]
    1558:	add	x16, x16, #0x70
    155c:	br	x17

0000000000001560 <BZ2_hbCreateDecodeTables@plt>:
    1560:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1564:	ldr	x17, [x16, #120]
    1568:	add	x16, x16, #0x78
    156c:	br	x17

0000000000001570 <__gmon_start__@plt>:
    1570:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1574:	ldr	x17, [x16, #128]
    1578:	add	x16, x16, #0x80
    157c:	br	x17

0000000000001580 <BZ2_decompress@plt>:
    1580:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1584:	ldr	x17, [x16, #136]
    1588:	add	x16, x16, #0x88
    158c:	br	x17

0000000000001590 <BZ2_bzWriteClose@plt>:
    1590:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1594:	ldr	x17, [x16, #144]
    1598:	add	x16, x16, #0x90
    159c:	br	x17

00000000000015a0 <BZ2_bzCompress@plt>:
    15a0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    15a4:	ldr	x17, [x16, #152]
    15a8:	add	x16, x16, #0x98
    15ac:	br	x17

00000000000015b0 <BZ2_bzWrite@plt>:
    15b0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    15b4:	ldr	x17, [x16, #160]
    15b8:	add	x16, x16, #0xa0
    15bc:	br	x17

00000000000015c0 <strcmp@plt>:
    15c0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    15c4:	ldr	x17, [x16, #168]
    15c8:	add	x16, x16, #0xa8
    15cc:	br	x17

00000000000015d0 <__ctype_b_loc@plt>:
    15d0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    15d4:	ldr	x17, [x16, #176]
    15d8:	add	x16, x16, #0xb0
    15dc:	br	x17

00000000000015e0 <BZ2_compressBlock@plt>:
    15e0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    15e4:	ldr	x17, [x16, #184]
    15e8:	add	x16, x16, #0xb8
    15ec:	br	x17

00000000000015f0 <fread@plt>:
    15f0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    15f4:	ldr	x17, [x16, #192]
    15f8:	add	x16, x16, #0xc0
    15fc:	br	x17

0000000000001600 <BZ2_bsInitWrite@plt>:
    1600:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1604:	ldr	x17, [x16, #200]
    1608:	add	x16, x16, #0xc8
    160c:	br	x17

0000000000001610 <free@plt>:
    1610:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1614:	ldr	x17, [x16, #208]
    1618:	add	x16, x16, #0xd0
    161c:	br	x17

0000000000001620 <ungetc@plt>:
    1620:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1624:	ldr	x17, [x16, #216]
    1628:	add	x16, x16, #0xd8
    162c:	br	x17

0000000000001630 <BZ2_bzDecompress@plt>:
    1630:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1634:	ldr	x17, [x16, #224]
    1638:	add	x16, x16, #0xe0
    163c:	br	x17

0000000000001640 <BZ2_blockSort@plt>:
    1640:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1644:	ldr	x17, [x16, #232]
    1648:	add	x16, x16, #0xe8
    164c:	br	x17

0000000000001650 <BZ2_bzWriteClose64@plt>:
    1650:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1654:	ldr	x17, [x16, #240]
    1658:	add	x16, x16, #0xf0
    165c:	br	x17

0000000000001660 <BZ2_indexIntoF@plt>:
    1660:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1664:	ldr	x17, [x16, #248]
    1668:	add	x16, x16, #0xf8
    166c:	br	x17

0000000000001670 <BZ2_hbAssignCodes@plt>:
    1670:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1674:	ldr	x17, [x16, #256]
    1678:	add	x16, x16, #0x100
    167c:	br	x17

0000000000001680 <fwrite@plt>:
    1680:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1684:	ldr	x17, [x16, #264]
    1688:	add	x16, x16, #0x108
    168c:	br	x17

0000000000001690 <fflush@plt>:
    1690:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    1694:	ldr	x17, [x16, #272]
    1698:	add	x16, x16, #0x110
    169c:	br	x17

00000000000016a0 <fopen64@plt>:
    16a0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    16a4:	ldr	x17, [x16, #280]
    16a8:	add	x16, x16, #0x118
    16ac:	br	x17

00000000000016b0 <BZ2_bzReadOpen@plt>:
    16b0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    16b4:	ldr	x17, [x16, #288]
    16b8:	add	x16, x16, #0x120
    16bc:	br	x17

00000000000016c0 <BZ2_bzRead@plt>:
    16c0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    16c4:	ldr	x17, [x16, #296]
    16c8:	add	x16, x16, #0x128
    16cc:	br	x17

00000000000016d0 <BZ2_bz__AssertH__fail@plt>:
    16d0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    16d4:	ldr	x17, [x16, #304]
    16d8:	add	x16, x16, #0x130
    16dc:	br	x17

00000000000016e0 <fprintf@plt>:
    16e0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    16e4:	ldr	x17, [x16, #312]
    16e8:	add	x16, x16, #0x138
    16ec:	br	x17

00000000000016f0 <ferror@plt>:
    16f0:	adrp	x16, 27000 <BZ2_hbMakeCodeLengths@@Base+0x21cfc>
    16f4:	ldr	x17, [x16, #320]
    16f8:	add	x16, x16, #0x140
    16fc:	br	x17

Disassembly of section .text:

0000000000001700 <BZ2_blockSort@@Base-0xd4>:
    1700:	adrp	x0, 26000 <BZ2_bzerror@@Base+0x10f84>
    1704:	ldr	x0, [x0, #4056]
    1708:	cbz	x0, 1710 <ferror@plt+0x20>
    170c:	b	1570 <__gmon_start__@plt>
    1710:	ret
    1714:	nop
    1718:	adrp	x0, 27000 <BZ2_bzerror@@Base+0x11f84>
    171c:	add	x0, x0, #0xe08
    1720:	adrp	x1, 27000 <BZ2_bzerror@@Base+0x11f84>
    1724:	add	x1, x1, #0xe08
    1728:	cmp	x1, x0
    172c:	b.eq	1744 <ferror@plt+0x54>  // b.none
    1730:	adrp	x1, 26000 <BZ2_bzerror@@Base+0x10f84>
    1734:	ldr	x1, [x1, #4000]
    1738:	cbz	x1, 1744 <ferror@plt+0x54>
    173c:	mov	x16, x1
    1740:	br	x16
    1744:	ret
    1748:	adrp	x0, 27000 <BZ2_bzerror@@Base+0x11f84>
    174c:	add	x0, x0, #0xe08
    1750:	adrp	x1, 27000 <BZ2_bzerror@@Base+0x11f84>
    1754:	add	x1, x1, #0xe08
    1758:	sub	x1, x1, x0
    175c:	lsr	x2, x1, #63
    1760:	add	x1, x2, x1, asr #3
    1764:	cmp	xzr, x1, asr #1
    1768:	asr	x1, x1, #1
    176c:	b.eq	1784 <ferror@plt+0x94>  // b.none
    1770:	adrp	x2, 26000 <BZ2_bzerror@@Base+0x10f84>
    1774:	ldr	x2, [x2, #4064]
    1778:	cbz	x2, 1784 <ferror@plt+0x94>
    177c:	mov	x16, x2
    1780:	br	x16
    1784:	ret
    1788:	stp	x29, x30, [sp, #-32]!
    178c:	mov	x29, sp
    1790:	str	x19, [sp, #16]
    1794:	adrp	x19, 27000 <BZ2_bzerror@@Base+0x11f84>
    1798:	ldrb	w0, [x19, #3592]
    179c:	cbnz	w0, 17c4 <ferror@plt+0xd4>
    17a0:	adrp	x0, 26000 <BZ2_bzerror@@Base+0x10f84>
    17a4:	ldr	x0, [x0, #4008]
    17a8:	cbz	x0, 17b8 <ferror@plt+0xc8>
    17ac:	adrp	x0, 27000 <BZ2_bzerror@@Base+0x11f84>
    17b0:	ldr	x0, [x0, #328]
    17b4:	bl	1490 <__cxa_finalize@plt>
    17b8:	bl	1718 <ferror@plt+0x28>
    17bc:	mov	w0, #0x1                   	// #1
    17c0:	strb	w0, [x19, #3592]
    17c4:	ldr	x19, [sp, #16]
    17c8:	ldp	x29, x30, [sp], #32
    17cc:	ret
    17d0:	b	1748 <ferror@plt+0x58>

00000000000017d4 <BZ2_blockSort@@Base>:
    17d4:	sub	sp, sp, #0x70
    17d8:	stp	x29, x30, [sp, #96]
    17dc:	add	x29, sp, #0x60
    17e0:	mov	w8, #0x2710                	// #10000
    17e4:	stur	x0, [x29, #-8]
    17e8:	ldur	x9, [x29, #-8]
    17ec:	ldr	x9, [x9, #56]
    17f0:	stur	x9, [x29, #-16]
    17f4:	ldur	x9, [x29, #-8]
    17f8:	ldr	x9, [x9, #64]
    17fc:	stur	x9, [x29, #-24]
    1800:	ldur	x9, [x29, #-8]
    1804:	ldr	x9, [x9, #40]
    1808:	stur	x9, [x29, #-32]
    180c:	ldur	x9, [x29, #-8]
    1810:	ldr	w10, [x9, #108]
    1814:	stur	w10, [x29, #-36]
    1818:	ldur	x9, [x29, #-8]
    181c:	ldr	w10, [x9, #656]
    1820:	stur	w10, [x29, #-40]
    1824:	ldur	x9, [x29, #-8]
    1828:	ldr	w10, [x9, #88]
    182c:	stur	w10, [x29, #-44]
    1830:	ldur	w10, [x29, #-36]
    1834:	cmp	w10, w8
    1838:	b.ge	1860 <BZ2_blockSort@@Base+0x8c>  // b.tcont
    183c:	ldur	x8, [x29, #-8]
    1840:	ldr	x0, [x8, #24]
    1844:	ldur	x8, [x29, #-8]
    1848:	ldr	x1, [x8, #32]
    184c:	ldur	x2, [x29, #-32]
    1850:	ldur	w3, [x29, #-36]
    1854:	ldur	w4, [x29, #-40]
    1858:	bl	1a60 <BZ2_blockSort@@Base+0x28c>
    185c:	b	19e4 <BZ2_blockSort@@Base+0x210>
    1860:	ldur	w8, [x29, #-36]
    1864:	add	w8, w8, #0x22
    1868:	str	w8, [sp, #28]
    186c:	ldr	w8, [sp, #28]
    1870:	and	w8, w8, #0x1
    1874:	cbz	w8, 1884 <BZ2_blockSort@@Base+0xb0>
    1878:	ldr	w8, [sp, #28]
    187c:	add	w8, w8, #0x1
    1880:	str	w8, [sp, #28]
    1884:	ldur	x8, [x29, #-24]
    1888:	ldrsw	x9, [sp, #28]
    188c:	add	x8, x8, x9
    1890:	str	x8, [sp, #40]
    1894:	ldur	w10, [x29, #-44]
    1898:	cmp	w10, #0x1
    189c:	b.ge	18a8 <BZ2_blockSort@@Base+0xd4>  // b.tcont
    18a0:	mov	w8, #0x1                   	// #1
    18a4:	stur	w8, [x29, #-44]
    18a8:	ldur	w8, [x29, #-44]
    18ac:	cmp	w8, #0x64
    18b0:	b.le	18bc <BZ2_blockSort@@Base+0xe8>
    18b4:	mov	w8, #0x64                  	// #100
    18b8:	stur	w8, [x29, #-44]
    18bc:	ldur	w8, [x29, #-36]
    18c0:	ldur	w9, [x29, #-44]
    18c4:	subs	w9, w9, #0x1
    18c8:	mov	w10, #0x3                   	// #3
    18cc:	sdiv	w9, w9, w10
    18d0:	mul	w8, w8, w9
    18d4:	str	w8, [sp, #32]
    18d8:	ldr	w8, [sp, #32]
    18dc:	add	x6, sp, #0x24
    18e0:	str	w8, [sp, #36]
    18e4:	ldur	x0, [x29, #-16]
    18e8:	ldur	x1, [x29, #-24]
    18ec:	ldr	x2, [sp, #40]
    18f0:	ldur	x3, [x29, #-32]
    18f4:	ldur	w4, [x29, #-36]
    18f8:	ldur	w5, [x29, #-40]
    18fc:	bl	22a0 <BZ2_blockSort@@Base+0xacc>
    1900:	ldur	w8, [x29, #-40]
    1904:	cmp	w8, #0x3
    1908:	b.lt	1990 <BZ2_blockSort@@Base+0x1bc>  // b.tstop
    190c:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
    1910:	ldr	x8, [x8, #4016]
    1914:	ldr	x0, [x8]
    1918:	ldr	w9, [sp, #32]
    191c:	ldr	w10, [sp, #36]
    1920:	subs	w2, w9, w10
    1924:	ldur	w3, [x29, #-36]
    1928:	ldr	w9, [sp, #32]
    192c:	ldr	w10, [sp, #36]
    1930:	subs	w9, w9, w10
    1934:	scvtf	s0, w9
    1938:	ldur	w9, [x29, #-36]
    193c:	str	x0, [sp, #16]
    1940:	str	w2, [sp, #12]
    1944:	str	w3, [sp, #8]
    1948:	str	s0, [sp, #4]
    194c:	cbnz	w9, 195c <BZ2_blockSort@@Base+0x188>
    1950:	mov	w8, #0x1                   	// #1
    1954:	str	w8, [sp]
    1958:	b	1964 <BZ2_blockSort@@Base+0x190>
    195c:	ldur	w8, [x29, #-36]
    1960:	str	w8, [sp]
    1964:	ldr	w8, [sp]
    1968:	scvtf	s0, w8
    196c:	ldr	s1, [sp, #4]
    1970:	fdiv	s0, s1, s0
    1974:	fcvt	d0, s0
    1978:	ldr	x0, [sp, #16]
    197c:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    1980:	add	x1, x1, #0x914
    1984:	ldr	w2, [sp, #12]
    1988:	ldr	w3, [sp, #8]
    198c:	bl	16e0 <fprintf@plt>
    1990:	ldr	w8, [sp, #36]
    1994:	cmp	w8, #0x0
    1998:	cset	w8, ge  // ge = tcont
    199c:	tbnz	w8, #0, 19e4 <BZ2_blockSort@@Base+0x210>
    19a0:	ldur	w8, [x29, #-40]
    19a4:	cmp	w8, #0x2
    19a8:	b.lt	19c4 <BZ2_blockSort@@Base+0x1f0>  // b.tstop
    19ac:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
    19b0:	ldr	x8, [x8, #4016]
    19b4:	ldr	x0, [x8]
    19b8:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    19bc:	add	x1, x1, #0x93a
    19c0:	bl	16e0 <fprintf@plt>
    19c4:	ldur	x8, [x29, #-8]
    19c8:	ldr	x0, [x8, #24]
    19cc:	ldur	x8, [x29, #-8]
    19d0:	ldr	x1, [x8, #32]
    19d4:	ldur	x2, [x29, #-32]
    19d8:	ldur	w3, [x29, #-36]
    19dc:	ldur	w4, [x29, #-40]
    19e0:	bl	1a60 <BZ2_blockSort@@Base+0x28c>
    19e4:	ldur	x8, [x29, #-8]
    19e8:	mov	w9, #0xffffffff            	// #-1
    19ec:	str	w9, [x8, #48]
    19f0:	str	wzr, [sp, #28]
    19f4:	ldr	w8, [sp, #28]
    19f8:	ldur	x9, [x29, #-8]
    19fc:	ldr	w10, [x9, #108]
    1a00:	cmp	w8, w10
    1a04:	b.ge	1a38 <BZ2_blockSort@@Base+0x264>  // b.tcont
    1a08:	ldur	x8, [x29, #-16]
    1a0c:	ldrsw	x9, [sp, #28]
    1a10:	ldr	w10, [x8, x9, lsl #2]
    1a14:	cbnz	w10, 1a28 <BZ2_blockSort@@Base+0x254>
    1a18:	ldr	w8, [sp, #28]
    1a1c:	ldur	x9, [x29, #-8]
    1a20:	str	w8, [x9, #48]
    1a24:	b	1a38 <BZ2_blockSort@@Base+0x264>
    1a28:	ldr	w8, [sp, #28]
    1a2c:	add	w8, w8, #0x1
    1a30:	str	w8, [sp, #28]
    1a34:	b	19f4 <BZ2_blockSort@@Base+0x220>
    1a38:	ldur	x8, [x29, #-8]
    1a3c:	ldr	w9, [x8, #48]
    1a40:	mov	w10, #0xffffffff            	// #-1
    1a44:	cmp	w9, w10
    1a48:	b.ne	1a54 <BZ2_blockSort@@Base+0x280>  // b.any
    1a4c:	mov	w0, #0x3eb                 	// #1003
    1a50:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    1a54:	ldp	x29, x30, [sp, #96]
    1a58:	add	sp, sp, #0x70
    1a5c:	ret
    1a60:	stp	x29, x30, [sp, #-32]!
    1a64:	str	x28, [sp, #16]
    1a68:	mov	x29, sp
    1a6c:	sub	sp, sp, #0x870
    1a70:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
    1a74:	ldr	x8, [x8, #4016]
    1a78:	stur	x0, [x29, #-8]
    1a7c:	stur	x1, [x29, #-16]
    1a80:	stur	x2, [x29, #-24]
    1a84:	stur	w3, [x29, #-28]
    1a88:	stur	w4, [x29, #-32]
    1a8c:	ldur	x9, [x29, #-16]
    1a90:	str	x9, [sp, #24]
    1a94:	ldur	w10, [x29, #-32]
    1a98:	cmp	w10, #0x4
    1a9c:	str	x8, [sp, #16]
    1aa0:	b.lt	1ab8 <BZ2_blockSort@@Base+0x2e4>  // b.tstop
    1aa4:	ldr	x8, [sp, #16]
    1aa8:	ldr	x0, [x8]
    1aac:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    1ab0:	add	x1, x1, #0x970
    1ab4:	bl	16e0 <fprintf@plt>
    1ab8:	str	wzr, [sp, #68]
    1abc:	ldr	w8, [sp, #68]
    1ac0:	cmp	w8, #0x101
    1ac4:	b.ge	1ae8 <BZ2_blockSort@@Base+0x314>  // b.tcont
    1ac8:	ldrsw	x8, [sp, #68]
    1acc:	add	x9, sp, #0x44c
    1ad0:	mov	w10, wzr
    1ad4:	str	w10, [x9, x8, lsl #2]
    1ad8:	ldr	w8, [sp, #68]
    1adc:	add	w8, w8, #0x1
    1ae0:	str	w8, [sp, #68]
    1ae4:	b	1abc <BZ2_blockSort@@Base+0x2e8>
    1ae8:	str	wzr, [sp, #68]
    1aec:	ldr	w8, [sp, #68]
    1af0:	ldur	w9, [x29, #-28]
    1af4:	cmp	w8, w9
    1af8:	b.ge	1b38 <BZ2_blockSort@@Base+0x364>  // b.tcont
    1afc:	ldr	x8, [sp, #24]
    1b00:	ldrsw	x9, [sp, #68]
    1b04:	ldrb	w10, [x8, x9]
    1b08:	mov	w8, w10
    1b0c:	mov	x9, #0x4                   	// #4
    1b10:	mul	x8, x9, x8
    1b14:	add	x9, sp, #0x44c
    1b18:	add	x8, x9, x8
    1b1c:	ldr	w10, [x8]
    1b20:	add	w10, w10, #0x1
    1b24:	str	w10, [x8]
    1b28:	ldr	w8, [sp, #68]
    1b2c:	add	w8, w8, #0x1
    1b30:	str	w8, [sp, #68]
    1b34:	b	1aec <BZ2_blockSort@@Base+0x318>
    1b38:	str	wzr, [sp, #68]
    1b3c:	ldr	w8, [sp, #68]
    1b40:	cmp	w8, #0x100
    1b44:	b.ge	1b70 <BZ2_blockSort@@Base+0x39c>  // b.tcont
    1b48:	ldrsw	x8, [sp, #68]
    1b4c:	add	x9, sp, #0x44c
    1b50:	ldr	w10, [x9, x8, lsl #2]
    1b54:	ldrsw	x8, [sp, #68]
    1b58:	add	x9, sp, #0x4c
    1b5c:	str	w10, [x9, x8, lsl #2]
    1b60:	ldr	w8, [sp, #68]
    1b64:	add	w8, w8, #0x1
    1b68:	str	w8, [sp, #68]
    1b6c:	b	1b3c <BZ2_blockSort@@Base+0x368>
    1b70:	mov	w8, #0x1                   	// #1
    1b74:	str	w8, [sp, #68]
    1b78:	ldr	w8, [sp, #68]
    1b7c:	cmp	w8, #0x101
    1b80:	b.ge	1bc0 <BZ2_blockSort@@Base+0x3ec>  // b.tcont
    1b84:	ldr	w8, [sp, #68]
    1b88:	subs	w8, w8, #0x1
    1b8c:	mov	x9, #0x4                   	// #4
    1b90:	add	x10, sp, #0x44c
    1b94:	ldr	w8, [x10, w8, sxtw #2]
    1b98:	ldrsw	x11, [sp, #68]
    1b9c:	mul	x9, x9, x11
    1ba0:	add	x9, x10, x9
    1ba4:	ldr	w12, [x9]
    1ba8:	add	w8, w12, w8
    1bac:	str	w8, [x9]
    1bb0:	ldr	w8, [sp, #68]
    1bb4:	add	w8, w8, #0x1
    1bb8:	str	w8, [sp, #68]
    1bbc:	b	1b78 <BZ2_blockSort@@Base+0x3a4>
    1bc0:	str	wzr, [sp, #68]
    1bc4:	ldr	w8, [sp, #68]
    1bc8:	ldur	w9, [x29, #-28]
    1bcc:	cmp	w8, w9
    1bd0:	b.ge	1c24 <BZ2_blockSort@@Base+0x450>  // b.tcont
    1bd4:	ldr	x8, [sp, #24]
    1bd8:	ldrsw	x9, [sp, #68]
    1bdc:	ldrb	w10, [x8, x9]
    1be0:	str	w10, [sp, #64]
    1be4:	ldrsw	x8, [sp, #64]
    1be8:	add	x9, sp, #0x44c
    1bec:	ldr	w10, [x9, x8, lsl #2]
    1bf0:	subs	w10, w10, #0x1
    1bf4:	str	w10, [sp, #60]
    1bf8:	ldr	w10, [sp, #60]
    1bfc:	ldrsw	x8, [sp, #64]
    1c00:	str	w10, [x9, x8, lsl #2]
    1c04:	ldr	w10, [sp, #68]
    1c08:	ldur	x8, [x29, #-8]
    1c0c:	ldrsw	x9, [sp, #60]
    1c10:	str	w10, [x8, x9, lsl #2]
    1c14:	ldr	w8, [sp, #68]
    1c18:	add	w8, w8, #0x1
    1c1c:	str	w8, [sp, #68]
    1c20:	b	1bc4 <BZ2_blockSort@@Base+0x3f0>
    1c24:	ldur	w8, [x29, #-28]
    1c28:	mov	w9, #0x20                  	// #32
    1c2c:	sdiv	w8, w8, w9
    1c30:	add	w8, w8, #0x2
    1c34:	str	w8, [sp, #36]
    1c38:	str	wzr, [sp, #68]
    1c3c:	ldr	w8, [sp, #68]
    1c40:	ldr	w9, [sp, #36]
    1c44:	cmp	w8, w9
    1c48:	b.ge	1c6c <BZ2_blockSort@@Base+0x498>  // b.tcont
    1c4c:	ldur	x8, [x29, #-24]
    1c50:	ldrsw	x9, [sp, #68]
    1c54:	mov	w10, wzr
    1c58:	str	w10, [x8, x9, lsl #2]
    1c5c:	ldr	w8, [sp, #68]
    1c60:	add	w8, w8, #0x1
    1c64:	str	w8, [sp, #68]
    1c68:	b	1c3c <BZ2_blockSort@@Base+0x468>
    1c6c:	str	wzr, [sp, #68]
    1c70:	ldr	w8, [sp, #68]
    1c74:	cmp	w8, #0x100
    1c78:	b.ge	1cd4 <BZ2_blockSort@@Base+0x500>  // b.tcont
    1c7c:	ldrsw	x8, [sp, #68]
    1c80:	mov	x9, #0x4                   	// #4
    1c84:	add	x10, sp, #0x44c
    1c88:	ldr	w11, [x10, x8, lsl #2]
    1c8c:	and	w11, w11, #0x1f
    1c90:	mov	w12, #0x1                   	// #1
    1c94:	lsl	w11, w12, w11
    1c98:	ldur	x8, [x29, #-24]
    1c9c:	ldrsw	x13, [sp, #68]
    1ca0:	ldr	w12, [x10, x13, lsl #2]
    1ca4:	asr	w12, w12, #5
    1ca8:	mov	w0, w12
    1cac:	sxtw	x10, w0
    1cb0:	mul	x9, x9, x10
    1cb4:	add	x8, x8, x9
    1cb8:	ldr	w12, [x8]
    1cbc:	orr	w11, w12, w11
    1cc0:	str	w11, [x8]
    1cc4:	ldr	w8, [sp, #68]
    1cc8:	add	w8, w8, #0x1
    1ccc:	str	w8, [sp, #68]
    1cd0:	b	1c70 <BZ2_blockSort@@Base+0x49c>
    1cd4:	str	wzr, [sp, #68]
    1cd8:	ldr	w8, [sp, #68]
    1cdc:	cmp	w8, #0x20
    1ce0:	b.ge	1da4 <BZ2_blockSort@@Base+0x5d0>  // b.tcont
    1ce4:	ldur	w8, [x29, #-28]
    1ce8:	ldr	w9, [sp, #68]
    1cec:	mov	w10, #0x2                   	// #2
    1cf0:	mul	w9, w10, w9
    1cf4:	add	w8, w8, w9
    1cf8:	and	w8, w8, #0x1f
    1cfc:	mov	w9, #0x1                   	// #1
    1d00:	lsl	w8, w9, w8
    1d04:	ldur	x11, [x29, #-24]
    1d08:	ldur	w12, [x29, #-28]
    1d0c:	ldr	w13, [sp, #68]
    1d10:	mul	w13, w10, w13
    1d14:	add	w12, w12, w13
    1d18:	mov	x14, #0x5                   	// #5
    1d1c:	asr	w12, w12, #5
    1d20:	mov	w0, w12
    1d24:	sxtw	x15, w0
    1d28:	mov	x16, #0x4                   	// #4
    1d2c:	mul	x15, x16, x15
    1d30:	add	x11, x11, x15
    1d34:	ldr	w12, [x11]
    1d38:	orr	w8, w12, w8
    1d3c:	str	w8, [x11]
    1d40:	ldur	w8, [x29, #-28]
    1d44:	ldr	w12, [sp, #68]
    1d48:	mul	w12, w10, w12
    1d4c:	add	w8, w8, w12
    1d50:	add	w8, w8, #0x1
    1d54:	and	w8, w8, #0x1f
    1d58:	lsl	w8, w9, w8
    1d5c:	ldur	x11, [x29, #-24]
    1d60:	ldur	w9, [x29, #-28]
    1d64:	ldr	w12, [sp, #68]
    1d68:	mul	w10, w10, w12
    1d6c:	add	w9, w9, w10
    1d70:	add	w9, w9, #0x1
    1d74:	asr	w9, w9, w14
    1d78:	mov	w0, w9
    1d7c:	sxtw	x15, w0
    1d80:	mul	x15, x16, x15
    1d84:	add	x11, x11, x15
    1d88:	ldr	w9, [x11]
    1d8c:	bic	w8, w9, w8
    1d90:	str	w8, [x11]
    1d94:	ldr	w8, [sp, #68]
    1d98:	add	w8, w8, #0x1
    1d9c:	str	w8, [sp, #68]
    1da0:	b	1cd8 <BZ2_blockSort@@Base+0x504>
    1da4:	mov	w8, #0x1                   	// #1
    1da8:	str	w8, [sp, #72]
    1dac:	ldur	w8, [x29, #-32]
    1db0:	cmp	w8, #0x4
    1db4:	b.lt	1dd0 <BZ2_blockSort@@Base+0x5fc>  // b.tstop
    1db8:	ldr	x8, [sp, #16]
    1dbc:	ldr	x0, [x8]
    1dc0:	ldr	w2, [sp, #72]
    1dc4:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    1dc8:	add	x1, x1, #0x98c
    1dcc:	bl	16e0 <fprintf@plt>
    1dd0:	str	wzr, [sp, #64]
    1dd4:	str	wzr, [sp, #68]
    1dd8:	ldr	w8, [sp, #68]
    1ddc:	ldur	w9, [x29, #-28]
    1de0:	cmp	w8, w9
    1de4:	b.ge	1e70 <BZ2_blockSort@@Base+0x69c>  // b.tcont
    1de8:	ldur	x8, [x29, #-24]
    1dec:	ldr	w9, [sp, #68]
    1df0:	asr	w9, w9, #5
    1df4:	ldr	w9, [x8, w9, sxtw #2]
    1df8:	ldr	w10, [sp, #68]
    1dfc:	and	w10, w10, #0x1f
    1e00:	mov	w11, #0x1                   	// #1
    1e04:	lsl	w10, w11, w10
    1e08:	and	w9, w9, w10
    1e0c:	cbz	w9, 1e18 <BZ2_blockSort@@Base+0x644>
    1e10:	ldr	w8, [sp, #68]
    1e14:	str	w8, [sp, #64]
    1e18:	ldur	x8, [x29, #-8]
    1e1c:	ldrsw	x9, [sp, #68]
    1e20:	ldr	w10, [x8, x9, lsl #2]
    1e24:	ldr	w11, [sp, #72]
    1e28:	subs	w10, w10, w11
    1e2c:	str	w10, [sp, #60]
    1e30:	ldr	w10, [sp, #60]
    1e34:	cmp	w10, #0x0
    1e38:	cset	w10, ge  // ge = tcont
    1e3c:	tbnz	w10, #0, 1e50 <BZ2_blockSort@@Base+0x67c>
    1e40:	ldur	w8, [x29, #-28]
    1e44:	ldr	w9, [sp, #60]
    1e48:	add	w8, w9, w8
    1e4c:	str	w8, [sp, #60]
    1e50:	ldr	w8, [sp, #64]
    1e54:	ldur	x9, [x29, #-16]
    1e58:	ldrsw	x10, [sp, #60]
    1e5c:	str	w8, [x9, x10, lsl #2]
    1e60:	ldr	w8, [sp, #68]
    1e64:	add	w8, w8, #0x1
    1e68:	str	w8, [sp, #68]
    1e6c:	b	1dd8 <BZ2_blockSort@@Base+0x604>
    1e70:	str	wzr, [sp, #40]
    1e74:	mov	w8, #0xffffffff            	// #-1
    1e78:	str	w8, [sp, #52]
    1e7c:	ldr	w8, [sp, #52]
    1e80:	add	w8, w8, #0x1
    1e84:	str	w8, [sp, #60]
    1e88:	ldur	x8, [x29, #-24]
    1e8c:	ldr	w9, [sp, #60]
    1e90:	asr	w9, w9, #5
    1e94:	ldr	w9, [x8, w9, sxtw #2]
    1e98:	ldr	w10, [sp, #60]
    1e9c:	and	w10, w10, #0x1f
    1ea0:	mov	w11, #0x1                   	// #1
    1ea4:	lsl	w10, w11, w10
    1ea8:	and	w9, w9, w10
    1eac:	mov	w10, #0x0                   	// #0
    1eb0:	str	w10, [sp, #12]
    1eb4:	cbz	w9, 1ec8 <BZ2_blockSort@@Base+0x6f4>
    1eb8:	ldr	w8, [sp, #60]
    1ebc:	tst	w8, #0x1f
    1ec0:	cset	w8, ne  // ne = any
    1ec4:	str	w8, [sp, #12]
    1ec8:	ldr	w8, [sp, #12]
    1ecc:	tbnz	w8, #0, 1ed4 <BZ2_blockSort@@Base+0x700>
    1ed0:	b	1ee4 <BZ2_blockSort@@Base+0x710>
    1ed4:	ldr	w8, [sp, #60]
    1ed8:	add	w8, w8, #0x1
    1edc:	str	w8, [sp, #60]
    1ee0:	b	1e88 <BZ2_blockSort@@Base+0x6b4>
    1ee4:	ldur	x8, [x29, #-24]
    1ee8:	ldr	w9, [sp, #60]
    1eec:	asr	w9, w9, #5
    1ef0:	ldr	w9, [x8, w9, sxtw #2]
    1ef4:	ldr	w10, [sp, #60]
    1ef8:	and	w10, w10, #0x1f
    1efc:	mov	w11, #0x1                   	// #1
    1f00:	lsl	w10, w11, w10
    1f04:	and	w9, w9, w10
    1f08:	cbz	w9, 1f70 <BZ2_blockSort@@Base+0x79c>
    1f0c:	ldur	x8, [x29, #-24]
    1f10:	ldr	w9, [sp, #60]
    1f14:	asr	w9, w9, #5
    1f18:	ldr	w9, [x8, w9, sxtw #2]
    1f1c:	mov	w10, #0xffffffff            	// #-1
    1f20:	cmp	w9, w10
    1f24:	b.ne	1f38 <BZ2_blockSort@@Base+0x764>  // b.any
    1f28:	ldr	w8, [sp, #60]
    1f2c:	add	w8, w8, #0x20
    1f30:	str	w8, [sp, #60]
    1f34:	b	1f0c <BZ2_blockSort@@Base+0x738>
    1f38:	ldur	x8, [x29, #-24]
    1f3c:	ldr	w9, [sp, #60]
    1f40:	asr	w9, w9, #5
    1f44:	ldr	w9, [x8, w9, sxtw #2]
    1f48:	ldr	w10, [sp, #60]
    1f4c:	and	w10, w10, #0x1f
    1f50:	mov	w11, #0x1                   	// #1
    1f54:	lsl	w10, w11, w10
    1f58:	and	w9, w9, w10
    1f5c:	cbz	w9, 1f70 <BZ2_blockSort@@Base+0x79c>
    1f60:	ldr	w8, [sp, #60]
    1f64:	add	w8, w8, #0x1
    1f68:	str	w8, [sp, #60]
    1f6c:	b	1f38 <BZ2_blockSort@@Base+0x764>
    1f70:	ldr	w8, [sp, #60]
    1f74:	subs	w8, w8, #0x1
    1f78:	str	w8, [sp, #56]
    1f7c:	ldr	w8, [sp, #56]
    1f80:	ldur	w9, [x29, #-28]
    1f84:	cmp	w8, w9
    1f88:	b.lt	1f90 <BZ2_blockSort@@Base+0x7bc>  // b.tstop
    1f8c:	b	2180 <BZ2_blockSort@@Base+0x9ac>
    1f90:	ldur	x8, [x29, #-24]
    1f94:	ldr	w9, [sp, #60]
    1f98:	asr	w9, w9, #5
    1f9c:	ldr	w9, [x8, w9, sxtw #2]
    1fa0:	ldr	w10, [sp, #60]
    1fa4:	and	w10, w10, #0x1f
    1fa8:	mov	w11, #0x1                   	// #1
    1fac:	lsl	w10, w11, w10
    1fb0:	and	w9, w9, w10
    1fb4:	mov	w10, #0x0                   	// #0
    1fb8:	str	w10, [sp, #8]
    1fbc:	cbnz	w9, 1fd0 <BZ2_blockSort@@Base+0x7fc>
    1fc0:	ldr	w8, [sp, #60]
    1fc4:	tst	w8, #0x1f
    1fc8:	cset	w8, ne  // ne = any
    1fcc:	str	w8, [sp, #8]
    1fd0:	ldr	w8, [sp, #8]
    1fd4:	tbnz	w8, #0, 1fdc <BZ2_blockSort@@Base+0x808>
    1fd8:	b	1fec <BZ2_blockSort@@Base+0x818>
    1fdc:	ldr	w8, [sp, #60]
    1fe0:	add	w8, w8, #0x1
    1fe4:	str	w8, [sp, #60]
    1fe8:	b	1f90 <BZ2_blockSort@@Base+0x7bc>
    1fec:	ldur	x8, [x29, #-24]
    1ff0:	ldr	w9, [sp, #60]
    1ff4:	asr	w9, w9, #5
    1ff8:	ldr	w9, [x8, w9, sxtw #2]
    1ffc:	ldr	w10, [sp, #60]
    2000:	and	w10, w10, #0x1f
    2004:	mov	w11, #0x1                   	// #1
    2008:	lsl	w10, w11, w10
    200c:	and	w9, w9, w10
    2010:	cbnz	w9, 207c <BZ2_blockSort@@Base+0x8a8>
    2014:	ldur	x8, [x29, #-24]
    2018:	ldr	w9, [sp, #60]
    201c:	asr	w9, w9, #5
    2020:	ldr	w9, [x8, w9, sxtw #2]
    2024:	cbnz	w9, 2038 <BZ2_blockSort@@Base+0x864>
    2028:	ldr	w8, [sp, #60]
    202c:	add	w8, w8, #0x20
    2030:	str	w8, [sp, #60]
    2034:	b	2014 <BZ2_blockSort@@Base+0x840>
    2038:	ldur	x8, [x29, #-24]
    203c:	ldr	w9, [sp, #60]
    2040:	asr	w9, w9, #5
    2044:	ldr	w9, [x8, w9, sxtw #2]
    2048:	ldr	w10, [sp, #60]
    204c:	and	w10, w10, #0x1f
    2050:	mov	w11, #0x1                   	// #1
    2054:	lsl	w10, w11, w10
    2058:	tst	w9, w10
    205c:	cset	w9, ne  // ne = any
    2060:	eor	w9, w9, #0x1
    2064:	tbnz	w9, #0, 206c <BZ2_blockSort@@Base+0x898>
    2068:	b	207c <BZ2_blockSort@@Base+0x8a8>
    206c:	ldr	w8, [sp, #60]
    2070:	add	w8, w8, #0x1
    2074:	str	w8, [sp, #60]
    2078:	b	2038 <BZ2_blockSort@@Base+0x864>
    207c:	ldr	w8, [sp, #60]
    2080:	subs	w8, w8, #0x1
    2084:	str	w8, [sp, #52]
    2088:	ldr	w8, [sp, #52]
    208c:	ldur	w9, [x29, #-28]
    2090:	cmp	w8, w9
    2094:	b.lt	209c <BZ2_blockSort@@Base+0x8c8>  // b.tstop
    2098:	b	2180 <BZ2_blockSort@@Base+0x9ac>
    209c:	ldr	w8, [sp, #52]
    20a0:	ldr	w9, [sp, #56]
    20a4:	cmp	w8, w9
    20a8:	b.le	217c <BZ2_blockSort@@Base+0x9a8>
    20ac:	ldr	w8, [sp, #52]
    20b0:	ldr	w9, [sp, #56]
    20b4:	subs	w8, w8, w9
    20b8:	add	w8, w8, #0x1
    20bc:	ldr	w9, [sp, #40]
    20c0:	add	w8, w9, w8
    20c4:	str	w8, [sp, #40]
    20c8:	ldur	x0, [x29, #-8]
    20cc:	ldur	x1, [x29, #-16]
    20d0:	ldr	w2, [sp, #56]
    20d4:	ldr	w3, [sp, #52]
    20d8:	bl	3150 <BZ2_blockSort@@Base+0x197c>
    20dc:	mov	w8, #0xffffffff            	// #-1
    20e0:	str	w8, [sp, #48]
    20e4:	ldr	w8, [sp, #56]
    20e8:	str	w8, [sp, #68]
    20ec:	ldr	w8, [sp, #68]
    20f0:	ldr	w9, [sp, #52]
    20f4:	cmp	w8, w9
    20f8:	b.gt	217c <BZ2_blockSort@@Base+0x9a8>
    20fc:	ldur	x8, [x29, #-16]
    2100:	ldur	x9, [x29, #-8]
    2104:	ldrsw	x10, [sp, #68]
    2108:	ldr	w11, [x9, x10, lsl #2]
    210c:	mov	w9, w11
    2110:	ldr	w11, [x8, x9, lsl #2]
    2114:	str	w11, [sp, #44]
    2118:	ldr	w11, [sp, #48]
    211c:	ldr	w12, [sp, #44]
    2120:	cmp	w11, w12
    2124:	b.eq	216c <BZ2_blockSort@@Base+0x998>  // b.none
    2128:	ldr	w8, [sp, #68]
    212c:	and	w8, w8, #0x1f
    2130:	mov	w9, #0x1                   	// #1
    2134:	lsl	w8, w9, w8
    2138:	ldur	x10, [x29, #-24]
    213c:	ldr	w9, [sp, #68]
    2140:	asr	w9, w9, #5
    2144:	mov	w0, w9
    2148:	sxtw	x11, w0
    214c:	mov	x12, #0x4                   	// #4
    2150:	mul	x11, x12, x11
    2154:	add	x10, x10, x11
    2158:	ldr	w9, [x10]
    215c:	orr	w8, w9, w8
    2160:	str	w8, [x10]
    2164:	ldr	w8, [sp, #44]
    2168:	str	w8, [sp, #48]
    216c:	ldr	w8, [sp, #68]
    2170:	add	w8, w8, #0x1
    2174:	str	w8, [sp, #68]
    2178:	b	20ec <BZ2_blockSort@@Base+0x918>
    217c:	b	1e7c <BZ2_blockSort@@Base+0x6a8>
    2180:	ldur	w8, [x29, #-32]
    2184:	cmp	w8, #0x4
    2188:	b.lt	21a4 <BZ2_blockSort@@Base+0x9d0>  // b.tstop
    218c:	ldr	x8, [sp, #16]
    2190:	ldr	x0, [x8]
    2194:	ldr	w2, [sp, #40]
    2198:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    219c:	add	x1, x1, #0x9a3
    21a0:	bl	16e0 <fprintf@plt>
    21a4:	ldr	w8, [sp, #72]
    21a8:	mov	w9, #0x2                   	// #2
    21ac:	mul	w8, w8, w9
    21b0:	str	w8, [sp, #72]
    21b4:	ldr	w8, [sp, #72]
    21b8:	ldur	w9, [x29, #-28]
    21bc:	cmp	w8, w9
    21c0:	b.gt	21cc <BZ2_blockSort@@Base+0x9f8>
    21c4:	ldr	w8, [sp, #40]
    21c8:	cbnz	w8, 21d0 <BZ2_blockSort@@Base+0x9fc>
    21cc:	b	21d4 <BZ2_blockSort@@Base+0xa00>
    21d0:	b	1dac <BZ2_blockSort@@Base+0x5d8>
    21d4:	ldur	w8, [x29, #-32]
    21d8:	cmp	w8, #0x4
    21dc:	b.lt	21f4 <BZ2_blockSort@@Base+0xa20>  // b.tstop
    21e0:	ldr	x8, [sp, #16]
    21e4:	ldr	x0, [x8]
    21e8:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    21ec:	add	x1, x1, #0x9bb
    21f0:	bl	16e0 <fprintf@plt>
    21f4:	str	wzr, [sp, #64]
    21f8:	str	wzr, [sp, #68]
    21fc:	ldr	w8, [sp, #68]
    2200:	ldur	w9, [x29, #-28]
    2204:	cmp	w8, w9
    2208:	b.ge	227c <BZ2_blockSort@@Base+0xaa8>  // b.tcont
    220c:	ldrsw	x8, [sp, #64]
    2210:	add	x9, sp, #0x4c
    2214:	ldr	w10, [x9, x8, lsl #2]
    2218:	cbnz	w10, 222c <BZ2_blockSort@@Base+0xa58>
    221c:	ldr	w8, [sp, #64]
    2220:	add	w8, w8, #0x1
    2224:	str	w8, [sp, #64]
    2228:	b	220c <BZ2_blockSort@@Base+0xa38>
    222c:	ldrsw	x8, [sp, #64]
    2230:	mov	x9, #0x4                   	// #4
    2234:	mul	x8, x9, x8
    2238:	add	x9, sp, #0x4c
    223c:	add	x8, x9, x8
    2240:	ldr	w10, [x8]
    2244:	subs	w10, w10, #0x1
    2248:	str	w10, [x8]
    224c:	ldr	w10, [sp, #64]
    2250:	ldr	x8, [sp, #24]
    2254:	ldur	x9, [x29, #-8]
    2258:	ldrsw	x11, [sp, #68]
    225c:	ldr	w12, [x9, x11, lsl #2]
    2260:	mov	w9, w12
    2264:	add	x8, x8, x9
    2268:	strb	w10, [x8]
    226c:	ldr	w8, [sp, #68]
    2270:	add	w8, w8, #0x1
    2274:	str	w8, [sp, #68]
    2278:	b	21fc <BZ2_blockSort@@Base+0xa28>
    227c:	ldr	w8, [sp, #64]
    2280:	cmp	w8, #0x100
    2284:	b.lt	2290 <BZ2_blockSort@@Base+0xabc>  // b.tstop
    2288:	mov	w0, #0x3ed                 	// #1005
    228c:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    2290:	add	sp, sp, #0x870
    2294:	ldr	x28, [sp, #16]
    2298:	ldp	x29, x30, [sp], #32
    229c:	ret
    22a0:	stp	x29, x30, [sp, #-32]!
    22a4:	str	x28, [sp, #16]
    22a8:	mov	x29, sp
    22ac:	sub	sp, sp, #0xd90
    22b0:	sub	x8, x29, #0x44
    22b4:	adrp	x9, 26000 <BZ2_bzerror@@Base+0x10f84>
    22b8:	ldr	x9, [x9, #4016]
    22bc:	stur	x0, [x8, #60]
    22c0:	stur	x1, [x8, #52]
    22c4:	stur	x2, [x8, #44]
    22c8:	stur	x3, [x8, #36]
    22cc:	str	w4, [x8, #32]
    22d0:	str	w5, [x8, #28]
    22d4:	stur	x6, [x8, #20]
    22d8:	ldr	w10, [x8, #28]
    22dc:	cmp	w10, #0x4
    22e0:	str	x8, [sp, #16]
    22e4:	str	x9, [sp, #8]
    22e8:	b.lt	2300 <BZ2_blockSort@@Base+0xb2c>  // b.tstop
    22ec:	ldr	x8, [sp, #8]
    22f0:	ldr	x0, [x8]
    22f4:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    22f8:	add	x1, x1, #0x9dd
    22fc:	bl	16e0 <fprintf@plt>
    2300:	mov	w8, #0x10000               	// #65536
    2304:	ldr	x9, [sp, #16]
    2308:	str	w8, [x9, #16]
    230c:	ldr	x8, [sp, #16]
    2310:	ldr	w9, [x8, #16]
    2314:	cmp	w9, #0x0
    2318:	cset	w9, lt  // lt = tstop
    231c:	tbnz	w9, #0, 2348 <BZ2_blockSort@@Base+0xb74>
    2320:	ldr	x8, [sp, #16]
    2324:	ldur	x9, [x8, #36]
    2328:	ldrsw	x10, [x8, #16]
    232c:	mov	w11, wzr
    2330:	str	w11, [x9, x10, lsl #2]
    2334:	ldr	x8, [sp, #16]
    2338:	ldr	w9, [x8, #16]
    233c:	subs	w9, w9, #0x1
    2340:	str	w9, [x8, #16]
    2344:	b	230c <BZ2_blockSort@@Base+0xb38>
    2348:	ldr	x8, [sp, #16]
    234c:	ldur	x9, [x8, #52]
    2350:	ldrb	w10, [x9]
    2354:	lsl	w10, w10, #8
    2358:	str	w10, [x8, #12]
    235c:	ldr	w10, [x8, #32]
    2360:	subs	w10, w10, #0x1
    2364:	str	w10, [x8, #16]
    2368:	ldr	x8, [sp, #16]
    236c:	ldr	w9, [x8, #16]
    2370:	cmp	w9, #0x3
    2374:	b.lt	24fc <BZ2_blockSort@@Base+0xd28>  // b.tstop
    2378:	ldr	x8, [sp, #16]
    237c:	ldur	x9, [x8, #44]
    2380:	ldrsw	x10, [x8, #16]
    2384:	mov	x11, #0x2                   	// #2
    2388:	mul	x10, x11, x10
    238c:	add	x9, x9, x10
    2390:	mov	w12, #0x0                   	// #0
    2394:	strh	w12, [x9]
    2398:	ldr	w13, [x8, #12]
    239c:	ldur	x9, [x8, #52]
    23a0:	ldrsw	x10, [x8, #16]
    23a4:	ldrb	w14, [x9, x10]
    23a8:	lsl	w14, w14, #8
    23ac:	orr	w13, w14, w13, asr #8
    23b0:	str	w13, [x8, #12]
    23b4:	ldur	x9, [x8, #36]
    23b8:	ldrsw	x10, [x8, #12]
    23bc:	mov	x15, #0x4                   	// #4
    23c0:	mul	x10, x15, x10
    23c4:	add	x9, x9, x10
    23c8:	ldr	w13, [x9]
    23cc:	add	w13, w13, #0x1
    23d0:	str	w13, [x9]
    23d4:	ldur	x9, [x8, #44]
    23d8:	ldr	w13, [x8, #16]
    23dc:	subs	w13, w13, #0x1
    23e0:	mov	w0, w13
    23e4:	sxtw	x10, w0
    23e8:	mul	x10, x11, x10
    23ec:	add	x9, x9, x10
    23f0:	strh	w12, [x9]
    23f4:	ldr	w13, [x8, #12]
    23f8:	ldur	x9, [x8, #52]
    23fc:	ldr	w14, [x8, #16]
    2400:	subs	w14, w14, #0x1
    2404:	ldrb	w14, [x9, w14, sxtw]
    2408:	lsl	w14, w14, #8
    240c:	orr	w13, w14, w13, asr #8
    2410:	str	w13, [x8, #12]
    2414:	ldur	x9, [x8, #36]
    2418:	ldrsw	x10, [x8, #12]
    241c:	mul	x10, x15, x10
    2420:	add	x9, x9, x10
    2424:	ldr	w13, [x9]
    2428:	add	w13, w13, #0x1
    242c:	str	w13, [x9]
    2430:	ldur	x9, [x8, #44]
    2434:	ldr	w13, [x8, #16]
    2438:	subs	w13, w13, #0x2
    243c:	mov	w0, w13
    2440:	sxtw	x10, w0
    2444:	mul	x10, x11, x10
    2448:	add	x9, x9, x10
    244c:	strh	w12, [x9]
    2450:	ldr	w13, [x8, #12]
    2454:	ldur	x9, [x8, #52]
    2458:	ldr	w14, [x8, #16]
    245c:	subs	w14, w14, #0x2
    2460:	ldrb	w14, [x9, w14, sxtw]
    2464:	lsl	w14, w14, #8
    2468:	orr	w13, w14, w13, asr #8
    246c:	str	w13, [x8, #12]
    2470:	ldur	x9, [x8, #36]
    2474:	ldrsw	x10, [x8, #12]
    2478:	mul	x10, x15, x10
    247c:	add	x9, x9, x10
    2480:	ldr	w13, [x9]
    2484:	add	w13, w13, #0x1
    2488:	str	w13, [x9]
    248c:	ldur	x9, [x8, #44]
    2490:	ldr	w13, [x8, #16]
    2494:	subs	w13, w13, #0x3
    2498:	mov	w0, w13
    249c:	sxtw	x10, w0
    24a0:	mul	x10, x11, x10
    24a4:	add	x9, x9, x10
    24a8:	strh	w12, [x9]
    24ac:	ldr	w12, [x8, #12]
    24b0:	ldur	x9, [x8, #52]
    24b4:	ldr	w13, [x8, #16]
    24b8:	subs	w13, w13, #0x3
    24bc:	ldrb	w13, [x9, w13, sxtw]
    24c0:	lsl	w13, w13, #8
    24c4:	orr	w12, w13, w12, asr #8
    24c8:	str	w12, [x8, #12]
    24cc:	ldur	x9, [x8, #36]
    24d0:	ldrsw	x10, [x8, #12]
    24d4:	mul	x10, x15, x10
    24d8:	add	x9, x9, x10
    24dc:	ldr	w12, [x9]
    24e0:	add	w12, w12, #0x1
    24e4:	str	w12, [x9]
    24e8:	ldr	x8, [sp, #16]
    24ec:	ldr	w9, [x8, #16]
    24f0:	subs	w9, w9, #0x4
    24f4:	str	w9, [x8, #16]
    24f8:	b	2368 <BZ2_blockSort@@Base+0xb94>
    24fc:	ldr	x8, [sp, #16]
    2500:	ldr	w9, [x8, #16]
    2504:	cmp	w9, #0x0
    2508:	cset	w9, lt  // lt = tstop
    250c:	tbnz	w9, #0, 2580 <BZ2_blockSort@@Base+0xdac>
    2510:	ldr	x8, [sp, #16]
    2514:	ldur	x9, [x8, #44]
    2518:	ldrsw	x10, [x8, #16]
    251c:	mov	x11, #0x2                   	// #2
    2520:	mul	x10, x11, x10
    2524:	add	x9, x9, x10
    2528:	mov	w12, #0x0                   	// #0
    252c:	strh	w12, [x9]
    2530:	ldr	w12, [x8, #12]
    2534:	ldur	x9, [x8, #52]
    2538:	ldrsw	x10, [x8, #16]
    253c:	ldrb	w13, [x9, x10]
    2540:	lsl	w13, w13, #8
    2544:	orr	w12, w13, w12, asr #8
    2548:	str	w12, [x8, #12]
    254c:	ldur	x9, [x8, #36]
    2550:	ldrsw	x10, [x8, #12]
    2554:	mov	x11, #0x4                   	// #4
    2558:	mul	x10, x11, x10
    255c:	add	x9, x9, x10
    2560:	ldr	w12, [x9]
    2564:	add	w12, w12, #0x1
    2568:	str	w12, [x9]
    256c:	ldr	x8, [sp, #16]
    2570:	ldr	w9, [x8, #16]
    2574:	subs	w9, w9, #0x1
    2578:	str	w9, [x8, #16]
    257c:	b	24fc <BZ2_blockSort@@Base+0xd28>
    2580:	ldr	x8, [sp, #16]
    2584:	str	wzr, [x8, #16]
    2588:	ldr	x8, [sp, #16]
    258c:	ldr	w9, [x8, #16]
    2590:	cmp	w9, #0x22
    2594:	b.ge	260c <BZ2_blockSort@@Base+0xe38>  // b.tcont
    2598:	ldr	x8, [sp, #16]
    259c:	ldur	x9, [x8, #52]
    25a0:	ldrsw	x10, [x8, #16]
    25a4:	add	x9, x9, x10
    25a8:	ldrb	w11, [x9]
    25ac:	ldur	x9, [x8, #52]
    25b0:	ldr	w12, [x8, #32]
    25b4:	ldr	w13, [x8, #16]
    25b8:	add	w12, w12, w13
    25bc:	mov	w0, w12
    25c0:	sxtw	x10, w0
    25c4:	add	x9, x9, x10
    25c8:	strb	w11, [x9]
    25cc:	ldur	x9, [x8, #44]
    25d0:	ldr	w11, [x8, #32]
    25d4:	ldr	w12, [x8, #16]
    25d8:	add	w11, w11, w12
    25dc:	mov	w0, w11
    25e0:	sxtw	x10, w0
    25e4:	mov	x14, #0x2                   	// #2
    25e8:	mul	x10, x14, x10
    25ec:	add	x9, x9, x10
    25f0:	mov	w11, #0x0                   	// #0
    25f4:	strh	w11, [x9]
    25f8:	ldr	x8, [sp, #16]
    25fc:	ldr	w9, [x8, #16]
    2600:	add	w9, w9, #0x1
    2604:	str	w9, [x8, #16]
    2608:	b	2588 <BZ2_blockSort@@Base+0xdb4>
    260c:	ldr	x8, [sp, #16]
    2610:	ldr	w9, [x8, #28]
    2614:	cmp	w9, #0x4
    2618:	b.lt	2630 <BZ2_blockSort@@Base+0xe5c>  // b.tstop
    261c:	ldr	x8, [sp, #8]
    2620:	ldr	x0, [x8]
    2624:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    2628:	add	x1, x1, #0x970
    262c:	bl	16e0 <fprintf@plt>
    2630:	mov	w8, #0x1                   	// #1
    2634:	ldr	x9, [sp, #16]
    2638:	str	w8, [x9, #16]
    263c:	ldr	x8, [sp, #16]
    2640:	ldr	w9, [x8, #16]
    2644:	cmp	w9, #0x10, lsl #12
    2648:	b.gt	2694 <BZ2_blockSort@@Base+0xec0>
    264c:	ldr	x8, [sp, #16]
    2650:	ldur	x9, [x8, #36]
    2654:	ldr	w10, [x8, #16]
    2658:	subs	w10, w10, #0x1
    265c:	mov	x11, #0x4                   	// #4
    2660:	ldr	w10, [x9, w10, sxtw #2]
    2664:	ldur	x9, [x8, #36]
    2668:	ldrsw	x12, [x8, #16]
    266c:	mul	x11, x11, x12
    2670:	add	x9, x9, x11
    2674:	ldr	w13, [x9]
    2678:	add	w10, w13, w10
    267c:	str	w10, [x9]
    2680:	ldr	x8, [sp, #16]
    2684:	ldr	w9, [x8, #16]
    2688:	add	w9, w9, #0x1
    268c:	str	w9, [x8, #16]
    2690:	b	263c <BZ2_blockSort@@Base+0xe68>
    2694:	ldr	x8, [sp, #16]
    2698:	ldur	x9, [x8, #52]
    269c:	ldrb	w10, [x9]
    26a0:	lsl	w10, w10, #8
    26a4:	strh	w10, [sp, #66]
    26a8:	ldr	w10, [x8, #32]
    26ac:	subs	w10, w10, #0x1
    26b0:	str	w10, [x8, #16]
    26b4:	ldr	x8, [sp, #16]
    26b8:	ldr	w9, [x8, #16]
    26bc:	cmp	w9, #0x3
    26c0:	b.lt	2854 <BZ2_blockSort@@Base+0x1080>  // b.tstop
    26c4:	ldrh	w8, [sp, #66]
    26c8:	ldr	x9, [sp, #16]
    26cc:	ldur	x10, [x9, #52]
    26d0:	ldrsw	x11, [x9, #16]
    26d4:	ldrb	w12, [x10, x11]
    26d8:	lsl	w12, w12, #8
    26dc:	orr	w8, w12, w8, asr #8
    26e0:	strh	w8, [sp, #66]
    26e4:	ldur	x10, [x9, #36]
    26e8:	ldrh	w8, [sp, #66]
    26ec:	mov	w11, w8
    26f0:	ldr	w8, [x10, x11, lsl #2]
    26f4:	subs	w8, w8, #0x1
    26f8:	str	w8, [x9, #12]
    26fc:	ldr	w8, [x9, #12]
    2700:	ldur	x10, [x9, #36]
    2704:	ldrh	w12, [sp, #66]
    2708:	mov	w11, w12
    270c:	str	w8, [x10, x11, lsl #2]
    2710:	ldr	w8, [x9, #16]
    2714:	ldur	x10, [x9, #60]
    2718:	ldrsw	x11, [x9, #12]
    271c:	str	w8, [x10, x11, lsl #2]
    2720:	ldrh	w8, [sp, #66]
    2724:	ldur	x10, [x9, #52]
    2728:	ldr	w12, [x9, #16]
    272c:	subs	w12, w12, #0x1
    2730:	ldrb	w12, [x10, w12, sxtw]
    2734:	lsl	w12, w12, #8
    2738:	orr	w8, w12, w8, asr #8
    273c:	strh	w8, [sp, #66]
    2740:	ldur	x10, [x9, #36]
    2744:	ldrh	w8, [sp, #66]
    2748:	mov	w11, w8
    274c:	ldr	w8, [x10, x11, lsl #2]
    2750:	subs	w8, w8, #0x1
    2754:	str	w8, [x9, #12]
    2758:	ldr	w8, [x9, #12]
    275c:	ldur	x10, [x9, #36]
    2760:	ldrh	w12, [sp, #66]
    2764:	mov	w11, w12
    2768:	str	w8, [x10, x11, lsl #2]
    276c:	ldr	w8, [x9, #16]
    2770:	subs	w8, w8, #0x1
    2774:	ldur	x10, [x9, #60]
    2778:	ldrsw	x11, [x9, #12]
    277c:	str	w8, [x10, x11, lsl #2]
    2780:	ldrh	w8, [sp, #66]
    2784:	ldur	x10, [x9, #52]
    2788:	ldr	w12, [x9, #16]
    278c:	subs	w12, w12, #0x2
    2790:	ldrb	w12, [x10, w12, sxtw]
    2794:	lsl	w12, w12, #8
    2798:	orr	w8, w12, w8, asr #8
    279c:	strh	w8, [sp, #66]
    27a0:	ldur	x10, [x9, #36]
    27a4:	ldrh	w8, [sp, #66]
    27a8:	mov	w11, w8
    27ac:	ldr	w8, [x10, x11, lsl #2]
    27b0:	subs	w8, w8, #0x1
    27b4:	str	w8, [x9, #12]
    27b8:	ldr	w8, [x9, #12]
    27bc:	ldur	x10, [x9, #36]
    27c0:	ldrh	w12, [sp, #66]
    27c4:	mov	w11, w12
    27c8:	str	w8, [x10, x11, lsl #2]
    27cc:	ldr	w8, [x9, #16]
    27d0:	subs	w8, w8, #0x2
    27d4:	ldur	x10, [x9, #60]
    27d8:	ldrsw	x11, [x9, #12]
    27dc:	str	w8, [x10, x11, lsl #2]
    27e0:	ldrh	w8, [sp, #66]
    27e4:	ldur	x10, [x9, #52]
    27e8:	ldr	w12, [x9, #16]
    27ec:	subs	w12, w12, #0x3
    27f0:	ldrb	w12, [x10, w12, sxtw]
    27f4:	lsl	w12, w12, #8
    27f8:	orr	w8, w12, w8, asr #8
    27fc:	strh	w8, [sp, #66]
    2800:	ldur	x10, [x9, #36]
    2804:	ldrh	w8, [sp, #66]
    2808:	mov	w11, w8
    280c:	ldr	w8, [x10, x11, lsl #2]
    2810:	subs	w8, w8, #0x1
    2814:	str	w8, [x9, #12]
    2818:	ldr	w8, [x9, #12]
    281c:	ldur	x10, [x9, #36]
    2820:	ldrh	w12, [sp, #66]
    2824:	mov	w11, w12
    2828:	str	w8, [x10, x11, lsl #2]
    282c:	ldr	w8, [x9, #16]
    2830:	subs	w8, w8, #0x3
    2834:	ldur	x10, [x9, #60]
    2838:	ldrsw	x11, [x9, #12]
    283c:	str	w8, [x10, x11, lsl #2]
    2840:	ldr	x8, [sp, #16]
    2844:	ldr	w9, [x8, #16]
    2848:	subs	w9, w9, #0x4
    284c:	str	w9, [x8, #16]
    2850:	b	26b4 <BZ2_blockSort@@Base+0xee0>
    2854:	ldr	x8, [sp, #16]
    2858:	ldr	w9, [x8, #16]
    285c:	cmp	w9, #0x0
    2860:	cset	w9, lt  // lt = tstop
    2864:	tbnz	w9, #0, 28d8 <BZ2_blockSort@@Base+0x1104>
    2868:	ldrh	w8, [sp, #66]
    286c:	ldr	x9, [sp, #16]
    2870:	ldur	x10, [x9, #52]
    2874:	ldrsw	x11, [x9, #16]
    2878:	ldrb	w12, [x10, x11]
    287c:	lsl	w12, w12, #8
    2880:	orr	w8, w12, w8, asr #8
    2884:	strh	w8, [sp, #66]
    2888:	ldur	x10, [x9, #36]
    288c:	ldrh	w8, [sp, #66]
    2890:	mov	w11, w8
    2894:	ldr	w8, [x10, x11, lsl #2]
    2898:	subs	w8, w8, #0x1
    289c:	str	w8, [x9, #12]
    28a0:	ldr	w8, [x9, #12]
    28a4:	ldur	x10, [x9, #36]
    28a8:	ldrh	w12, [sp, #66]
    28ac:	mov	w11, w12
    28b0:	str	w8, [x10, x11, lsl #2]
    28b4:	ldr	w8, [x9, #16]
    28b8:	ldur	x10, [x9, #60]
    28bc:	ldrsw	x11, [x9, #12]
    28c0:	str	w8, [x10, x11, lsl #2]
    28c4:	ldr	x8, [sp, #16]
    28c8:	ldr	w9, [x8, #16]
    28cc:	subs	w9, w9, #0x1
    28d0:	str	w9, [x8, #16]
    28d4:	b	2854 <BZ2_blockSort@@Base+0x1080>
    28d8:	ldr	x8, [sp, #16]
    28dc:	str	wzr, [x8, #16]
    28e0:	ldr	x8, [sp, #16]
    28e4:	ldr	w9, [x8, #16]
    28e8:	cmp	w9, #0xff
    28ec:	b.gt	292c <BZ2_blockSort@@Base+0x1158>
    28f0:	ldr	x8, [sp, #16]
    28f4:	ldrsw	x9, [x8, #16]
    28f8:	add	x10, sp, #0x84c
    28fc:	add	x9, x10, x9
    2900:	mov	w11, #0x0                   	// #0
    2904:	strb	w11, [x9]
    2908:	ldr	w11, [x8, #16]
    290c:	ldrsw	x9, [x8, #16]
    2910:	add	x10, sp, #0x94c
    2914:	str	w11, [x10, x9, lsl #2]
    2918:	ldr	x8, [sp, #16]
    291c:	ldr	w9, [x8, #16]
    2920:	add	w9, w9, #0x1
    2924:	str	w9, [x8, #16]
    2928:	b	28e0 <BZ2_blockSort@@Base+0x110c>
    292c:	mov	w8, #0x1                   	// #1
    2930:	str	w8, [sp, #56]
    2934:	ldr	w8, [sp, #56]
    2938:	mov	w9, #0x3                   	// #3
    293c:	mul	w8, w9, w8
    2940:	add	w8, w8, #0x1
    2944:	str	w8, [sp, #56]
    2948:	ldr	w8, [sp, #56]
    294c:	cmp	w8, #0x100
    2950:	b.le	2934 <BZ2_blockSort@@Base+0x1160>
    2954:	ldr	w8, [sp, #56]
    2958:	mov	w9, #0x3                   	// #3
    295c:	sdiv	w8, w8, w9
    2960:	str	w8, [sp, #56]
    2964:	ldr	w8, [sp, #56]
    2968:	ldr	x10, [sp, #16]
    296c:	str	w8, [x10, #16]
    2970:	ldr	x8, [sp, #16]
    2974:	ldr	w9, [x8, #16]
    2978:	cmp	w9, #0xff
    297c:	b.gt	2a88 <BZ2_blockSort@@Base+0x12b4>
    2980:	ldr	x8, [sp, #16]
    2984:	ldrsw	x9, [x8, #16]
    2988:	add	x10, sp, #0x94c
    298c:	ldr	w11, [x10, x9, lsl #2]
    2990:	str	w11, [sp, #60]
    2994:	ldr	w11, [x8, #16]
    2998:	str	w11, [x8, #12]
    299c:	ldr	x8, [sp, #16]
    29a0:	ldur	x9, [x8, #36]
    29a4:	ldr	w10, [x8, #12]
    29a8:	ldr	w11, [sp, #56]
    29ac:	subs	w10, w10, w11
    29b0:	add	x12, sp, #0x94c
    29b4:	ldr	w10, [x12, w10, sxtw #2]
    29b8:	add	w10, w10, #0x1
    29bc:	lsl	w10, w10, #8
    29c0:	ldr	w10, [x9, w10, sxtw #2]
    29c4:	ldur	x9, [x8, #36]
    29c8:	ldr	w11, [x8, #12]
    29cc:	ldr	w13, [sp, #56]
    29d0:	subs	w11, w11, w13
    29d4:	ldr	w11, [x12, w11, sxtw #2]
    29d8:	lsl	w11, w11, #8
    29dc:	ldr	w11, [x9, w11, sxtw #2]
    29e0:	subs	w10, w10, w11
    29e4:	ldur	x9, [x8, #36]
    29e8:	ldr	w11, [sp, #60]
    29ec:	add	w11, w11, #0x1
    29f0:	lsl	w11, w11, #8
    29f4:	ldr	w11, [x9, w11, sxtw #2]
    29f8:	ldur	x9, [x8, #36]
    29fc:	ldr	w13, [sp, #60]
    2a00:	lsl	w13, w13, #8
    2a04:	ldr	w13, [x9, w13, sxtw #2]
    2a08:	subs	w11, w11, w13
    2a0c:	cmp	w10, w11
    2a10:	b.ls	2a60 <BZ2_blockSort@@Base+0x128c>  // b.plast
    2a14:	ldr	x8, [sp, #16]
    2a18:	ldr	w9, [x8, #12]
    2a1c:	ldr	w10, [sp, #56]
    2a20:	subs	w9, w9, w10
    2a24:	add	x11, sp, #0x94c
    2a28:	ldr	w9, [x11, w9, sxtw #2]
    2a2c:	ldrsw	x12, [x8, #12]
    2a30:	str	w9, [x11, x12, lsl #2]
    2a34:	ldr	w9, [x8, #12]
    2a38:	ldr	w10, [sp, #56]
    2a3c:	subs	w9, w9, w10
    2a40:	str	w9, [x8, #12]
    2a44:	ldr	w9, [x8, #12]
    2a48:	ldr	w10, [sp, #56]
    2a4c:	subs	w10, w10, #0x1
    2a50:	cmp	w9, w10
    2a54:	b.gt	2a5c <BZ2_blockSort@@Base+0x1288>
    2a58:	b	2a60 <BZ2_blockSort@@Base+0x128c>
    2a5c:	b	299c <BZ2_blockSort@@Base+0x11c8>
    2a60:	ldr	w8, [sp, #60]
    2a64:	ldr	x9, [sp, #16]
    2a68:	ldrsw	x10, [x9, #12]
    2a6c:	add	x11, sp, #0x94c
    2a70:	str	w8, [x11, x10, lsl #2]
    2a74:	ldr	x8, [sp, #16]
    2a78:	ldr	w9, [x8, #16]
    2a7c:	add	w9, w9, #0x1
    2a80:	str	w9, [x8, #16]
    2a84:	b	2970 <BZ2_blockSort@@Base+0x119c>
    2a88:	ldr	w8, [sp, #56]
    2a8c:	cmp	w8, #0x1
    2a90:	b.ne	2954 <BZ2_blockSort@@Base+0x1180>  // b.any
    2a94:	str	wzr, [sp, #68]
    2a98:	ldr	x8, [sp, #16]
    2a9c:	str	wzr, [x8, #16]
    2aa0:	ldr	x8, [sp, #16]
    2aa4:	ldr	w9, [x8, #16]
    2aa8:	cmp	w9, #0xff
    2aac:	b.gt	3104 <BZ2_blockSort@@Base+0x1930>
    2ab0:	ldr	x8, [sp, #16]
    2ab4:	ldrsw	x9, [x8, #16]
    2ab8:	add	x10, sp, #0x94c
    2abc:	ldr	w11, [x10, x9, lsl #2]
    2ac0:	str	w11, [x8, #4]
    2ac4:	str	wzr, [x8, #12]
    2ac8:	ldr	x8, [sp, #16]
    2acc:	ldr	w9, [x8, #12]
    2ad0:	cmp	w9, #0xff
    2ad4:	b.gt	2c34 <BZ2_blockSort@@Base+0x1460>
    2ad8:	ldr	x8, [sp, #16]
    2adc:	ldr	w9, [x8, #12]
    2ae0:	ldr	w10, [x8, #4]
    2ae4:	cmp	w9, w10
    2ae8:	b.eq	2c20 <BZ2_blockSort@@Base+0x144c>  // b.none
    2aec:	ldr	x8, [sp, #16]
    2af0:	ldr	w9, [x8, #4]
    2af4:	ldr	w10, [x8, #12]
    2af8:	add	w9, w10, w9, lsl #8
    2afc:	str	w9, [x8]
    2b00:	ldur	x11, [x8, #36]
    2b04:	ldrsw	x12, [x8]
    2b08:	ldr	w9, [x11, x12, lsl #2]
    2b0c:	and	w9, w9, #0x200000
    2b10:	cbnz	w9, 2bfc <BZ2_blockSort@@Base+0x1428>
    2b14:	ldr	x8, [sp, #16]
    2b18:	ldur	x9, [x8, #36]
    2b1c:	ldrsw	x10, [x8]
    2b20:	ldr	w11, [x9, x10, lsl #2]
    2b24:	and	w11, w11, #0xffdfffff
    2b28:	str	w11, [sp, #52]
    2b2c:	ldur	x9, [x8, #36]
    2b30:	ldr	w11, [x8]
    2b34:	add	w11, w11, #0x1
    2b38:	ldr	w11, [x9, w11, sxtw #2]
    2b3c:	and	w11, w11, #0xffdfffff
    2b40:	subs	w11, w11, #0x1
    2b44:	str	w11, [sp, #48]
    2b48:	ldr	w11, [sp, #48]
    2b4c:	ldr	w12, [sp, #52]
    2b50:	cmp	w11, w12
    2b54:	b.le	2bfc <BZ2_blockSort@@Base+0x1428>
    2b58:	ldr	x8, [sp, #16]
    2b5c:	ldr	w9, [x8, #28]
    2b60:	cmp	w9, #0x4
    2b64:	b.lt	2b9c <BZ2_blockSort@@Base+0x13c8>  // b.tstop
    2b68:	ldr	x8, [sp, #8]
    2b6c:	ldr	x0, [x8]
    2b70:	ldr	x9, [sp, #16]
    2b74:	ldr	w2, [x9, #4]
    2b78:	ldr	w3, [x9, #12]
    2b7c:	ldr	w4, [sp, #68]
    2b80:	ldr	w10, [sp, #48]
    2b84:	ldr	w11, [sp, #52]
    2b88:	subs	w10, w10, w11
    2b8c:	add	w5, w10, #0x1
    2b90:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    2b94:	add	x1, x1, #0x9ff
    2b98:	bl	16e0 <fprintf@plt>
    2b9c:	ldr	x8, [sp, #16]
    2ba0:	ldur	x0, [x8, #60]
    2ba4:	ldur	x1, [x8, #52]
    2ba8:	ldur	x2, [x8, #44]
    2bac:	ldr	w3, [x8, #32]
    2bb0:	ldr	w4, [sp, #52]
    2bb4:	ldr	w5, [sp, #48]
    2bb8:	ldur	x7, [x8, #20]
    2bbc:	mov	w6, #0x2                   	// #2
    2bc0:	bl	39e8 <BZ2_blockSort@@Base+0x2214>
    2bc4:	ldr	w9, [sp, #48]
    2bc8:	ldr	w10, [sp, #52]
    2bcc:	subs	w9, w9, w10
    2bd0:	add	w9, w9, #0x1
    2bd4:	ldr	w10, [sp, #68]
    2bd8:	add	w9, w10, w9
    2bdc:	str	w9, [sp, #68]
    2be0:	ldr	x8, [sp, #16]
    2be4:	ldur	x11, [x8, #20]
    2be8:	ldr	w9, [x11]
    2bec:	cmp	w9, #0x0
    2bf0:	cset	w9, ge  // ge = tcont
    2bf4:	tbnz	w9, #0, 2bfc <BZ2_blockSort@@Base+0x1428>
    2bf8:	b	3140 <BZ2_blockSort@@Base+0x196c>
    2bfc:	ldr	x8, [sp, #16]
    2c00:	ldur	x9, [x8, #36]
    2c04:	ldrsw	x10, [x8]
    2c08:	mov	x11, #0x4                   	// #4
    2c0c:	mul	x10, x11, x10
    2c10:	add	x9, x9, x10
    2c14:	ldr	w12, [x9]
    2c18:	orr	w12, w12, #0x200000
    2c1c:	str	w12, [x9]
    2c20:	ldr	x8, [sp, #16]
    2c24:	ldr	w9, [x8, #12]
    2c28:	add	w9, w9, #0x1
    2c2c:	str	w9, [x8, #12]
    2c30:	b	2ac8 <BZ2_blockSort@@Base+0x12f4>
    2c34:	ldr	x8, [sp, #16]
    2c38:	ldrsw	x9, [x8, #4]
    2c3c:	add	x10, sp, #0x84c
    2c40:	add	x9, x10, x9
    2c44:	ldrb	w11, [x9]
    2c48:	cbz	w11, 2c54 <BZ2_blockSort@@Base+0x1480>
    2c4c:	mov	w0, #0x3ee                 	// #1006
    2c50:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    2c54:	ldr	x8, [sp, #16]
    2c58:	str	wzr, [x8, #12]
    2c5c:	ldr	x8, [sp, #16]
    2c60:	ldr	w9, [x8, #12]
    2c64:	cmp	w9, #0xff
    2c68:	b.gt	2cd4 <BZ2_blockSort@@Base+0x1500>
    2c6c:	ldr	x8, [sp, #16]
    2c70:	ldur	x9, [x8, #36]
    2c74:	ldr	w10, [x8, #12]
    2c78:	ldr	w11, [x8, #4]
    2c7c:	add	w10, w11, w10, lsl #8
    2c80:	ldr	w10, [x9, w10, sxtw #2]
    2c84:	and	w10, w10, #0xffdfffff
    2c88:	ldrsw	x9, [x8, #12]
    2c8c:	add	x12, sp, #0x44c
    2c90:	str	w10, [x12, x9, lsl #2]
    2c94:	ldur	x9, [x8, #36]
    2c98:	ldr	w10, [x8, #12]
    2c9c:	ldr	w11, [x8, #4]
    2ca0:	add	w10, w11, w10, lsl #8
    2ca4:	add	w10, w10, #0x1
    2ca8:	ldr	w10, [x9, w10, sxtw #2]
    2cac:	and	w10, w10, #0xffdfffff
    2cb0:	subs	w10, w10, #0x1
    2cb4:	ldrsw	x9, [x8, #12]
    2cb8:	add	x12, sp, #0x4c
    2cbc:	str	w10, [x12, x9, lsl #2]
    2cc0:	ldr	x8, [sp, #16]
    2cc4:	ldr	w9, [x8, #12]
    2cc8:	add	w9, w9, #0x1
    2ccc:	str	w9, [x8, #12]
    2cd0:	b	2c5c <BZ2_blockSort@@Base+0x1488>
    2cd4:	ldr	x8, [sp, #16]
    2cd8:	ldur	x9, [x8, #36]
    2cdc:	ldr	w10, [x8, #4]
    2ce0:	lsl	w10, w10, #8
    2ce4:	ldr	w10, [x9, w10, sxtw #2]
    2ce8:	and	w10, w10, #0xffdfffff
    2cec:	str	w10, [x8, #12]
    2cf0:	ldr	x8, [sp, #16]
    2cf4:	ldr	w9, [x8, #12]
    2cf8:	ldrsw	x10, [x8, #4]
    2cfc:	add	x11, sp, #0x44c
    2d00:	ldr	w12, [x11, x10, lsl #2]
    2d04:	cmp	w9, w12
    2d08:	b.ge	2dc4 <BZ2_blockSort@@Base+0x15f0>  // b.tcont
    2d0c:	ldr	x8, [sp, #16]
    2d10:	ldur	x9, [x8, #60]
    2d14:	ldrsw	x10, [x8, #12]
    2d18:	ldr	w11, [x9, x10, lsl #2]
    2d1c:	subs	w11, w11, #0x1
    2d20:	str	w11, [x8, #8]
    2d24:	ldr	w11, [x8, #8]
    2d28:	cmp	w11, #0x0
    2d2c:	cset	w11, ge  // ge = tcont
    2d30:	tbnz	w11, #0, 2d48 <BZ2_blockSort@@Base+0x1574>
    2d34:	ldr	x8, [sp, #16]
    2d38:	ldr	w9, [x8, #32]
    2d3c:	ldr	w10, [x8, #8]
    2d40:	add	w9, w10, w9
    2d44:	str	w9, [x8, #8]
    2d48:	ldr	x8, [sp, #16]
    2d4c:	ldur	x9, [x8, #52]
    2d50:	ldrsw	x10, [x8, #8]
    2d54:	add	x9, x9, x10
    2d58:	ldrb	w11, [x9]
    2d5c:	strb	w11, [sp, #75]
    2d60:	ldrb	w11, [sp, #75]
    2d64:	mov	w9, w11
    2d68:	add	x10, sp, #0x84c
    2d6c:	add	x9, x10, x9
    2d70:	ldrb	w11, [x9]
    2d74:	cbnz	w11, 2db0 <BZ2_blockSort@@Base+0x15dc>
    2d78:	ldr	x8, [sp, #16]
    2d7c:	ldr	w9, [x8, #8]
    2d80:	ldur	x10, [x8, #60]
    2d84:	ldrb	w11, [sp, #75]
    2d88:	mov	w12, w11
    2d8c:	mov	x13, #0x4                   	// #4
    2d90:	mul	x12, x13, x12
    2d94:	add	x13, sp, #0x44c
    2d98:	add	x12, x13, x12
    2d9c:	ldrsw	x13, [x12]
    2da0:	mov	w11, w13
    2da4:	add	w11, w11, #0x1
    2da8:	str	w11, [x12]
    2dac:	str	w9, [x10, x13, lsl #2]
    2db0:	ldr	x8, [sp, #16]
    2db4:	ldr	w9, [x8, #12]
    2db8:	add	w9, w9, #0x1
    2dbc:	str	w9, [x8, #12]
    2dc0:	b	2cf0 <BZ2_blockSort@@Base+0x151c>
    2dc4:	ldr	x8, [sp, #16]
    2dc8:	ldur	x9, [x8, #36]
    2dcc:	ldr	w10, [x8, #4]
    2dd0:	add	w10, w10, #0x1
    2dd4:	lsl	w10, w10, #8
    2dd8:	ldr	w10, [x9, w10, sxtw #2]
    2ddc:	and	w10, w10, #0xffdfffff
    2de0:	subs	w10, w10, #0x1
    2de4:	str	w10, [x8, #12]
    2de8:	ldr	x8, [sp, #16]
    2dec:	ldr	w9, [x8, #12]
    2df0:	ldrsw	x10, [x8, #4]
    2df4:	add	x11, sp, #0x4c
    2df8:	ldr	w12, [x11, x10, lsl #2]
    2dfc:	cmp	w9, w12
    2e00:	b.le	2ebc <BZ2_blockSort@@Base+0x16e8>
    2e04:	ldr	x8, [sp, #16]
    2e08:	ldur	x9, [x8, #60]
    2e0c:	ldrsw	x10, [x8, #12]
    2e10:	ldr	w11, [x9, x10, lsl #2]
    2e14:	subs	w11, w11, #0x1
    2e18:	str	w11, [x8, #8]
    2e1c:	ldr	w11, [x8, #8]
    2e20:	cmp	w11, #0x0
    2e24:	cset	w11, ge  // ge = tcont
    2e28:	tbnz	w11, #0, 2e40 <BZ2_blockSort@@Base+0x166c>
    2e2c:	ldr	x8, [sp, #16]
    2e30:	ldr	w9, [x8, #32]
    2e34:	ldr	w10, [x8, #8]
    2e38:	add	w9, w10, w9
    2e3c:	str	w9, [x8, #8]
    2e40:	ldr	x8, [sp, #16]
    2e44:	ldur	x9, [x8, #52]
    2e48:	ldrsw	x10, [x8, #8]
    2e4c:	add	x9, x9, x10
    2e50:	ldrb	w11, [x9]
    2e54:	strb	w11, [sp, #75]
    2e58:	ldrb	w11, [sp, #75]
    2e5c:	mov	w9, w11
    2e60:	add	x10, sp, #0x84c
    2e64:	add	x9, x10, x9
    2e68:	ldrb	w11, [x9]
    2e6c:	cbnz	w11, 2ea8 <BZ2_blockSort@@Base+0x16d4>
    2e70:	ldr	x8, [sp, #16]
    2e74:	ldr	w9, [x8, #8]
    2e78:	ldur	x10, [x8, #60]
    2e7c:	ldrb	w11, [sp, #75]
    2e80:	mov	w12, w11
    2e84:	mov	x13, #0x4                   	// #4
    2e88:	mul	x12, x13, x12
    2e8c:	add	x13, sp, #0x4c
    2e90:	add	x12, x13, x12
    2e94:	ldrsw	x13, [x12]
    2e98:	mov	w11, w13
    2e9c:	subs	w11, w11, #0x1
    2ea0:	str	w11, [x12]
    2ea4:	str	w9, [x10, x13, lsl #2]
    2ea8:	ldr	x8, [sp, #16]
    2eac:	ldr	w9, [x8, #12]
    2eb0:	subs	w9, w9, #0x1
    2eb4:	str	w9, [x8, #12]
    2eb8:	b	2de8 <BZ2_blockSort@@Base+0x1614>
    2ebc:	ldr	x8, [sp, #16]
    2ec0:	ldrsw	x9, [x8, #4]
    2ec4:	add	x10, sp, #0x44c
    2ec8:	ldr	w11, [x10, x9, lsl #2]
    2ecc:	subs	w11, w11, #0x1
    2ed0:	ldrsw	x9, [x8, #4]
    2ed4:	add	x10, sp, #0x4c
    2ed8:	ldr	w12, [x10, x9, lsl #2]
    2edc:	cmp	w11, w12
    2ee0:	b.eq	2f20 <BZ2_blockSort@@Base+0x174c>  // b.none
    2ee4:	ldr	x8, [sp, #16]
    2ee8:	ldrsw	x9, [x8, #4]
    2eec:	add	x10, sp, #0x44c
    2ef0:	ldr	w11, [x10, x9, lsl #2]
    2ef4:	cbnz	w11, 2f18 <BZ2_blockSort@@Base+0x1744>
    2ef8:	ldr	x8, [sp, #16]
    2efc:	ldrsw	x9, [x8, #4]
    2f00:	add	x10, sp, #0x4c
    2f04:	ldr	w11, [x10, x9, lsl #2]
    2f08:	ldr	w12, [x8, #32]
    2f0c:	subs	w12, w12, #0x1
    2f10:	cmp	w11, w12
    2f14:	b.eq	2f20 <BZ2_blockSort@@Base+0x174c>  // b.none
    2f18:	mov	w0, #0x3ef                 	// #1007
    2f1c:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    2f20:	ldr	x8, [sp, #16]
    2f24:	str	wzr, [x8, #12]
    2f28:	ldr	x8, [sp, #16]
    2f2c:	ldr	w9, [x8, #12]
    2f30:	cmp	w9, #0xff
    2f34:	b.gt	2f80 <BZ2_blockSort@@Base+0x17ac>
    2f38:	ldr	x8, [sp, #16]
    2f3c:	ldur	x9, [x8, #36]
    2f40:	ldr	w10, [x8, #12]
    2f44:	ldr	w11, [x8, #4]
    2f48:	add	w10, w11, w10, lsl #8
    2f4c:	mov	w0, w10
    2f50:	sxtw	x12, w0
    2f54:	mov	x13, #0x4                   	// #4
    2f58:	mul	x12, x13, x12
    2f5c:	add	x9, x9, x12
    2f60:	ldr	w10, [x9]
    2f64:	orr	w10, w10, #0x200000
    2f68:	str	w10, [x9]
    2f6c:	ldr	x8, [sp, #16]
    2f70:	ldr	w9, [x8, #12]
    2f74:	add	w9, w9, #0x1
    2f78:	str	w9, [x8, #12]
    2f7c:	b	2f28 <BZ2_blockSort@@Base+0x1754>
    2f80:	ldr	x8, [sp, #16]
    2f84:	ldrsw	x9, [x8, #4]
    2f88:	add	x10, sp, #0x84c
    2f8c:	add	x9, x10, x9
    2f90:	mov	w11, #0x1                   	// #1
    2f94:	strb	w11, [x9]
    2f98:	ldr	w11, [x8, #16]
    2f9c:	cmp	w11, #0xff
    2fa0:	b.ge	30f0 <BZ2_blockSort@@Base+0x191c>  // b.tcont
    2fa4:	ldr	x8, [sp, #16]
    2fa8:	ldur	x9, [x8, #36]
    2fac:	ldr	w10, [x8, #4]
    2fb0:	lsl	w10, w10, #8
    2fb4:	ldr	w10, [x9, w10, sxtw #2]
    2fb8:	and	w10, w10, #0xffdfffff
    2fbc:	str	w10, [sp, #44]
    2fc0:	ldur	x9, [x8, #36]
    2fc4:	ldr	w10, [x8, #4]
    2fc8:	add	w10, w10, #0x1
    2fcc:	lsl	w10, w10, #8
    2fd0:	ldr	w10, [x9, w10, sxtw #2]
    2fd4:	and	w10, w10, #0xffdfffff
    2fd8:	ldr	w11, [sp, #44]
    2fdc:	subs	w10, w10, w11
    2fe0:	str	w10, [sp, #40]
    2fe4:	str	wzr, [sp, #36]
    2fe8:	ldr	w8, [sp, #40]
    2fec:	ldr	w9, [sp, #36]
    2ff0:	asr	w8, w8, w9
    2ff4:	mov	w9, #0xfffe                	// #65534
    2ff8:	cmp	w8, w9
    2ffc:	b.le	3010 <BZ2_blockSort@@Base+0x183c>
    3000:	ldr	w8, [sp, #36]
    3004:	add	w8, w8, #0x1
    3008:	str	w8, [sp, #36]
    300c:	b	2fe8 <BZ2_blockSort@@Base+0x1814>
    3010:	ldr	w8, [sp, #40]
    3014:	subs	w8, w8, #0x1
    3018:	ldr	x9, [sp, #16]
    301c:	str	w8, [x9, #12]
    3020:	ldr	x8, [sp, #16]
    3024:	ldr	w9, [x8, #12]
    3028:	cmp	w9, #0x0
    302c:	cset	w9, lt  // lt = tstop
    3030:	tbnz	w9, #0, 30cc <BZ2_blockSort@@Base+0x18f8>
    3034:	ldr	x8, [sp, #16]
    3038:	ldur	x9, [x8, #60]
    303c:	ldr	w10, [sp, #44]
    3040:	ldr	w11, [x8, #12]
    3044:	add	w10, w10, w11
    3048:	ldr	w10, [x9, w10, sxtw #2]
    304c:	str	w10, [sp, #32]
    3050:	ldr	w10, [x8, #12]
    3054:	ldr	w11, [sp, #36]
    3058:	asr	w10, w10, w11
    305c:	strh	w10, [sp, #30]
    3060:	ldrh	w10, [sp, #30]
    3064:	ldur	x9, [x8, #44]
    3068:	ldrsw	x12, [sp, #32]
    306c:	mov	x13, #0x2                   	// #2
    3070:	mul	x12, x13, x12
    3074:	add	x9, x9, x12
    3078:	strh	w10, [x9]
    307c:	ldr	w10, [sp, #32]
    3080:	cmp	w10, #0x22
    3084:	b.ge	30b8 <BZ2_blockSort@@Base+0x18e4>  // b.tcont
    3088:	ldrh	w8, [sp, #30]
    308c:	ldr	x9, [sp, #16]
    3090:	ldur	x10, [x9, #44]
    3094:	ldr	w11, [sp, #32]
    3098:	ldr	w12, [x9, #32]
    309c:	add	w11, w11, w12
    30a0:	mov	w0, w11
    30a4:	sxtw	x13, w0
    30a8:	mov	x14, #0x2                   	// #2
    30ac:	mul	x13, x14, x13
    30b0:	add	x10, x10, x13
    30b4:	strh	w8, [x10]
    30b8:	ldr	x8, [sp, #16]
    30bc:	ldr	w9, [x8, #12]
    30c0:	subs	w9, w9, #0x1
    30c4:	str	w9, [x8, #12]
    30c8:	b	3020 <BZ2_blockSort@@Base+0x184c>
    30cc:	ldr	w8, [sp, #40]
    30d0:	subs	w8, w8, #0x1
    30d4:	ldr	w9, [sp, #36]
    30d8:	asr	w8, w8, w9
    30dc:	mov	w9, #0xffff                	// #65535
    30e0:	cmp	w8, w9
    30e4:	b.le	30f0 <BZ2_blockSort@@Base+0x191c>
    30e8:	mov	w0, #0x3ea                 	// #1002
    30ec:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    30f0:	ldr	x8, [sp, #16]
    30f4:	ldr	w9, [x8, #16]
    30f8:	add	w9, w9, #0x1
    30fc:	str	w9, [x8, #16]
    3100:	b	2aa0 <BZ2_blockSort@@Base+0x12cc>
    3104:	ldr	x8, [sp, #16]
    3108:	ldr	w9, [x8, #28]
    310c:	cmp	w9, #0x4
    3110:	b.lt	3140 <BZ2_blockSort@@Base+0x196c>  // b.tstop
    3114:	ldr	x8, [sp, #8]
    3118:	ldr	x0, [x8]
    311c:	ldr	x9, [sp, #16]
    3120:	ldr	w2, [x9, #32]
    3124:	ldr	w3, [sp, #68]
    3128:	ldr	w10, [x9, #32]
    312c:	ldr	w11, [sp, #68]
    3130:	subs	w4, w10, w11
    3134:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    3138:	add	x1, x1, #0xa2f
    313c:	bl	16e0 <fprintf@plt>
    3140:	add	sp, sp, #0xd90
    3144:	ldr	x28, [sp, #16]
    3148:	ldp	x29, x30, [sp], #32
    314c:	ret
    3150:	stp	x29, x30, [sp, #-32]!
    3154:	str	x28, [sp, #16]
    3158:	mov	x29, sp
    315c:	sub	sp, sp, #0x3b0
    3160:	sub	x8, x29, #0x10
    3164:	add	x9, sp, #0x1d8
    3168:	add	x10, sp, #0x48
    316c:	str	x0, [x8, #8]
    3170:	str	x1, [x8]
    3174:	stur	w2, [x29, #-20]
    3178:	stur	w3, [x29, #-24]
    317c:	stur	wzr, [x29, #-68]
    3180:	stur	wzr, [x29, #-52]
    3184:	ldur	w11, [x29, #-20]
    3188:	ldursw	x12, [x29, #-52]
    318c:	str	w11, [x9, x12, lsl #2]
    3190:	ldur	w11, [x29, #-24]
    3194:	ldursw	x9, [x29, #-52]
    3198:	str	w11, [x10, x9, lsl #2]
    319c:	ldur	w11, [x29, #-52]
    31a0:	add	w11, w11, #0x1
    31a4:	stur	w11, [x29, #-52]
    31a8:	str	x8, [sp, #16]
    31ac:	ldur	w8, [x29, #-52]
    31b0:	cmp	w8, #0x0
    31b4:	cset	w8, le
    31b8:	tbnz	w8, #0, 37cc <BZ2_blockSort@@Base+0x1ff8>
    31bc:	ldur	w8, [x29, #-52]
    31c0:	cmp	w8, #0x63
    31c4:	b.lt	31d0 <BZ2_blockSort@@Base+0x19fc>  // b.tstop
    31c8:	mov	w0, #0x3ec                 	// #1004
    31cc:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    31d0:	ldur	w8, [x29, #-52]
    31d4:	subs	w8, w8, #0x1
    31d8:	stur	w8, [x29, #-52]
    31dc:	ldursw	x9, [x29, #-52]
    31e0:	add	x10, sp, #0x1d8
    31e4:	ldr	w8, [x10, x9, lsl #2]
    31e8:	stur	w8, [x29, #-56]
    31ec:	ldursw	x9, [x29, #-52]
    31f0:	add	x10, sp, #0x48
    31f4:	ldr	w8, [x10, x9, lsl #2]
    31f8:	stur	w8, [x29, #-60]
    31fc:	ldur	w8, [x29, #-60]
    3200:	ldur	w11, [x29, #-56]
    3204:	subs	w8, w8, w11
    3208:	cmp	w8, #0xa
    320c:	b.ge	322c <BZ2_blockSort@@Base+0x1a58>  // b.tcont
    3210:	ldr	x8, [sp, #16]
    3214:	ldr	x0, [x8, #8]
    3218:	ldr	x1, [x8]
    321c:	ldur	w2, [x29, #-56]
    3220:	ldur	w3, [x29, #-60]
    3224:	bl	37dc <BZ2_blockSort@@Base+0x2008>
    3228:	b	31ac <BZ2_blockSort@@Base+0x19d8>
    322c:	ldur	w8, [x29, #-68]
    3230:	mov	w9, #0x1dc5                	// #7621
    3234:	mul	w8, w8, w9
    3238:	add	w8, w8, #0x1
    323c:	mov	w9, #0x8000                	// #32768
    3240:	udiv	w10, w8, w9
    3244:	mul	w9, w10, w9
    3248:	subs	w8, w8, w9
    324c:	stur	w8, [x29, #-68]
    3250:	ldur	w8, [x29, #-68]
    3254:	mov	w9, #0x3                   	// #3
    3258:	udiv	w10, w8, w9
    325c:	mul	w9, w10, w9
    3260:	subs	w8, w8, w9
    3264:	stur	w8, [x29, #-72]
    3268:	ldur	w8, [x29, #-72]
    326c:	cbnz	w8, 3294 <BZ2_blockSort@@Base+0x1ac0>
    3270:	ldr	x8, [sp, #16]
    3274:	ldr	x9, [x8]
    3278:	ldr	x10, [x8, #8]
    327c:	ldursw	x11, [x29, #-56]
    3280:	ldr	w12, [x10, x11, lsl #2]
    3284:	mov	w10, w12
    3288:	ldr	w12, [x9, x10, lsl #2]
    328c:	stur	w12, [x29, #-64]
    3290:	b	32f0 <BZ2_blockSort@@Base+0x1b1c>
    3294:	ldur	w8, [x29, #-72]
    3298:	cmp	w8, #0x1
    329c:	b.ne	32d0 <BZ2_blockSort@@Base+0x1afc>  // b.any
    32a0:	ldr	x8, [sp, #16]
    32a4:	ldr	x9, [x8]
    32a8:	ldr	x10, [x8, #8]
    32ac:	ldur	w11, [x29, #-56]
    32b0:	ldur	w12, [x29, #-60]
    32b4:	add	w11, w11, w12
    32b8:	asr	w11, w11, #1
    32bc:	ldr	w11, [x10, w11, sxtw #2]
    32c0:	mov	w10, w11
    32c4:	ldr	w11, [x9, x10, lsl #2]
    32c8:	stur	w11, [x29, #-64]
    32cc:	b	32f0 <BZ2_blockSort@@Base+0x1b1c>
    32d0:	ldr	x8, [sp, #16]
    32d4:	ldr	x9, [x8]
    32d8:	ldr	x10, [x8, #8]
    32dc:	ldursw	x11, [x29, #-60]
    32e0:	ldr	w12, [x10, x11, lsl #2]
    32e4:	mov	w10, w12
    32e8:	ldr	w12, [x9, x10, lsl #2]
    32ec:	stur	w12, [x29, #-64]
    32f0:	ldur	w8, [x29, #-56]
    32f4:	stur	w8, [x29, #-36]
    32f8:	stur	w8, [x29, #-28]
    32fc:	ldur	w8, [x29, #-60]
    3300:	stur	w8, [x29, #-40]
    3304:	stur	w8, [x29, #-32]
    3308:	ldur	w8, [x29, #-28]
    330c:	ldur	w9, [x29, #-32]
    3310:	cmp	w8, w9
    3314:	b.le	331c <BZ2_blockSort@@Base+0x1b48>
    3318:	b	33c8 <BZ2_blockSort@@Base+0x1bf4>
    331c:	ldr	x8, [sp, #16]
    3320:	ldr	x9, [x8]
    3324:	ldr	x10, [x8, #8]
    3328:	ldursw	x11, [x29, #-28]
    332c:	ldr	w12, [x10, x11, lsl #2]
    3330:	mov	w10, w12
    3334:	ldr	w12, [x9, x10, lsl #2]
    3338:	ldur	w13, [x29, #-64]
    333c:	subs	w12, w12, w13
    3340:	stur	w12, [x29, #-44]
    3344:	ldur	w12, [x29, #-44]
    3348:	cbnz	w12, 33a4 <BZ2_blockSort@@Base+0x1bd0>
    334c:	ldr	x8, [sp, #16]
    3350:	ldr	x9, [x8, #8]
    3354:	ldursw	x10, [x29, #-28]
    3358:	ldr	w11, [x9, x10, lsl #2]
    335c:	str	w11, [sp, #68]
    3360:	ldr	x9, [x8, #8]
    3364:	ldursw	x10, [x29, #-36]
    3368:	ldr	w11, [x9, x10, lsl #2]
    336c:	ldr	x9, [x8, #8]
    3370:	ldursw	x10, [x29, #-28]
    3374:	str	w11, [x9, x10, lsl #2]
    3378:	ldr	w11, [sp, #68]
    337c:	ldr	x9, [x8, #8]
    3380:	ldursw	x10, [x29, #-36]
    3384:	str	w11, [x9, x10, lsl #2]
    3388:	ldur	w11, [x29, #-36]
    338c:	add	w11, w11, #0x1
    3390:	stur	w11, [x29, #-36]
    3394:	ldur	w11, [x29, #-28]
    3398:	add	w11, w11, #0x1
    339c:	stur	w11, [x29, #-28]
    33a0:	b	3308 <BZ2_blockSort@@Base+0x1b34>
    33a4:	ldur	w8, [x29, #-44]
    33a8:	cmp	w8, #0x0
    33ac:	cset	w8, le
    33b0:	tbnz	w8, #0, 33b8 <BZ2_blockSort@@Base+0x1be4>
    33b4:	b	33c8 <BZ2_blockSort@@Base+0x1bf4>
    33b8:	ldur	w8, [x29, #-28]
    33bc:	add	w8, w8, #0x1
    33c0:	stur	w8, [x29, #-28]
    33c4:	b	3308 <BZ2_blockSort@@Base+0x1b34>
    33c8:	ldur	w8, [x29, #-28]
    33cc:	ldur	w9, [x29, #-32]
    33d0:	cmp	w8, w9
    33d4:	b.le	33dc <BZ2_blockSort@@Base+0x1c08>
    33d8:	b	3488 <BZ2_blockSort@@Base+0x1cb4>
    33dc:	ldr	x8, [sp, #16]
    33e0:	ldr	x9, [x8]
    33e4:	ldr	x10, [x8, #8]
    33e8:	ldursw	x11, [x29, #-32]
    33ec:	ldr	w12, [x10, x11, lsl #2]
    33f0:	mov	w10, w12
    33f4:	ldr	w12, [x9, x10, lsl #2]
    33f8:	ldur	w13, [x29, #-64]
    33fc:	subs	w12, w12, w13
    3400:	stur	w12, [x29, #-44]
    3404:	ldur	w12, [x29, #-44]
    3408:	cbnz	w12, 3464 <BZ2_blockSort@@Base+0x1c90>
    340c:	ldr	x8, [sp, #16]
    3410:	ldr	x9, [x8, #8]
    3414:	ldursw	x10, [x29, #-32]
    3418:	ldr	w11, [x9, x10, lsl #2]
    341c:	str	w11, [sp, #64]
    3420:	ldr	x9, [x8, #8]
    3424:	ldursw	x10, [x29, #-40]
    3428:	ldr	w11, [x9, x10, lsl #2]
    342c:	ldr	x9, [x8, #8]
    3430:	ldursw	x10, [x29, #-32]
    3434:	str	w11, [x9, x10, lsl #2]
    3438:	ldr	w11, [sp, #64]
    343c:	ldr	x9, [x8, #8]
    3440:	ldursw	x10, [x29, #-40]
    3444:	str	w11, [x9, x10, lsl #2]
    3448:	ldur	w11, [x29, #-40]
    344c:	subs	w11, w11, #0x1
    3450:	stur	w11, [x29, #-40]
    3454:	ldur	w11, [x29, #-32]
    3458:	subs	w11, w11, #0x1
    345c:	stur	w11, [x29, #-32]
    3460:	b	33c8 <BZ2_blockSort@@Base+0x1bf4>
    3464:	ldur	w8, [x29, #-44]
    3468:	cmp	w8, #0x0
    346c:	cset	w8, ge  // ge = tcont
    3470:	tbnz	w8, #0, 3478 <BZ2_blockSort@@Base+0x1ca4>
    3474:	b	3488 <BZ2_blockSort@@Base+0x1cb4>
    3478:	ldur	w8, [x29, #-32]
    347c:	subs	w8, w8, #0x1
    3480:	stur	w8, [x29, #-32]
    3484:	b	33c8 <BZ2_blockSort@@Base+0x1bf4>
    3488:	ldur	w8, [x29, #-28]
    348c:	ldur	w9, [x29, #-32]
    3490:	cmp	w8, w9
    3494:	b.le	349c <BZ2_blockSort@@Base+0x1cc8>
    3498:	b	34f4 <BZ2_blockSort@@Base+0x1d20>
    349c:	ldr	x8, [sp, #16]
    34a0:	ldr	x9, [x8, #8]
    34a4:	ldursw	x10, [x29, #-28]
    34a8:	ldr	w11, [x9, x10, lsl #2]
    34ac:	str	w11, [sp, #60]
    34b0:	ldr	x9, [x8, #8]
    34b4:	ldursw	x10, [x29, #-32]
    34b8:	ldr	w11, [x9, x10, lsl #2]
    34bc:	ldr	x9, [x8, #8]
    34c0:	ldursw	x10, [x29, #-28]
    34c4:	str	w11, [x9, x10, lsl #2]
    34c8:	ldr	w11, [sp, #60]
    34cc:	ldr	x9, [x8, #8]
    34d0:	ldursw	x10, [x29, #-32]
    34d4:	str	w11, [x9, x10, lsl #2]
    34d8:	ldur	w11, [x29, #-28]
    34dc:	add	w11, w11, #0x1
    34e0:	stur	w11, [x29, #-28]
    34e4:	ldur	w11, [x29, #-32]
    34e8:	subs	w11, w11, #0x1
    34ec:	stur	w11, [x29, #-32]
    34f0:	b	3308 <BZ2_blockSort@@Base+0x1b34>
    34f4:	ldur	w8, [x29, #-40]
    34f8:	ldur	w9, [x29, #-36]
    34fc:	cmp	w8, w9
    3500:	b.ge	3508 <BZ2_blockSort@@Base+0x1d34>  // b.tcont
    3504:	b	31ac <BZ2_blockSort@@Base+0x19d8>
    3508:	ldur	w8, [x29, #-36]
    350c:	ldur	w9, [x29, #-56]
    3510:	subs	w8, w8, w9
    3514:	ldur	w9, [x29, #-28]
    3518:	ldur	w10, [x29, #-36]
    351c:	subs	w9, w9, w10
    3520:	cmp	w8, w9
    3524:	b.ge	353c <BZ2_blockSort@@Base+0x1d68>  // b.tcont
    3528:	ldur	w8, [x29, #-36]
    352c:	ldur	w9, [x29, #-56]
    3530:	subs	w8, w8, w9
    3534:	str	w8, [sp, #12]
    3538:	b	354c <BZ2_blockSort@@Base+0x1d78>
    353c:	ldur	w8, [x29, #-28]
    3540:	ldur	w9, [x29, #-36]
    3544:	subs	w8, w8, w9
    3548:	str	w8, [sp, #12]
    354c:	ldr	w8, [sp, #12]
    3550:	stur	w8, [x29, #-44]
    3554:	ldur	w8, [x29, #-56]
    3558:	str	w8, [sp, #56]
    355c:	ldur	w8, [x29, #-28]
    3560:	ldur	w9, [x29, #-44]
    3564:	subs	w8, w8, w9
    3568:	str	w8, [sp, #52]
    356c:	ldur	w8, [x29, #-44]
    3570:	str	w8, [sp, #48]
    3574:	ldr	w8, [sp, #48]
    3578:	cmp	w8, #0x0
    357c:	cset	w8, le
    3580:	tbnz	w8, #0, 35e8 <BZ2_blockSort@@Base+0x1e14>
    3584:	ldr	x8, [sp, #16]
    3588:	ldr	x9, [x8, #8]
    358c:	ldrsw	x10, [sp, #56]
    3590:	ldr	w11, [x9, x10, lsl #2]
    3594:	str	w11, [sp, #44]
    3598:	ldr	x9, [x8, #8]
    359c:	ldrsw	x10, [sp, #52]
    35a0:	ldr	w11, [x9, x10, lsl #2]
    35a4:	ldr	x9, [x8, #8]
    35a8:	ldrsw	x10, [sp, #56]
    35ac:	str	w11, [x9, x10, lsl #2]
    35b0:	ldr	w11, [sp, #44]
    35b4:	ldr	x9, [x8, #8]
    35b8:	ldrsw	x10, [sp, #52]
    35bc:	str	w11, [x9, x10, lsl #2]
    35c0:	ldr	w11, [sp, #56]
    35c4:	add	w11, w11, #0x1
    35c8:	str	w11, [sp, #56]
    35cc:	ldr	w11, [sp, #52]
    35d0:	add	w11, w11, #0x1
    35d4:	str	w11, [sp, #52]
    35d8:	ldr	w11, [sp, #48]
    35dc:	subs	w11, w11, #0x1
    35e0:	str	w11, [sp, #48]
    35e4:	b	3574 <BZ2_blockSort@@Base+0x1da0>
    35e8:	ldur	w8, [x29, #-60]
    35ec:	ldur	w9, [x29, #-40]
    35f0:	subs	w8, w8, w9
    35f4:	ldur	w9, [x29, #-40]
    35f8:	ldur	w10, [x29, #-32]
    35fc:	subs	w9, w9, w10
    3600:	cmp	w8, w9
    3604:	b.ge	361c <BZ2_blockSort@@Base+0x1e48>  // b.tcont
    3608:	ldur	w8, [x29, #-60]
    360c:	ldur	w9, [x29, #-40]
    3610:	subs	w8, w8, w9
    3614:	str	w8, [sp, #8]
    3618:	b	362c <BZ2_blockSort@@Base+0x1e58>
    361c:	ldur	w8, [x29, #-40]
    3620:	ldur	w9, [x29, #-32]
    3624:	subs	w8, w8, w9
    3628:	str	w8, [sp, #8]
    362c:	ldr	w8, [sp, #8]
    3630:	stur	w8, [x29, #-48]
    3634:	ldur	w8, [x29, #-28]
    3638:	str	w8, [sp, #40]
    363c:	ldur	w8, [x29, #-60]
    3640:	ldur	w9, [x29, #-48]
    3644:	subs	w8, w8, w9
    3648:	add	w8, w8, #0x1
    364c:	str	w8, [sp, #36]
    3650:	ldur	w8, [x29, #-48]
    3654:	str	w8, [sp, #32]
    3658:	ldr	w8, [sp, #32]
    365c:	cmp	w8, #0x0
    3660:	cset	w8, le
    3664:	tbnz	w8, #0, 36cc <BZ2_blockSort@@Base+0x1ef8>
    3668:	ldr	x8, [sp, #16]
    366c:	ldr	x9, [x8, #8]
    3670:	ldrsw	x10, [sp, #40]
    3674:	ldr	w11, [x9, x10, lsl #2]
    3678:	str	w11, [sp, #28]
    367c:	ldr	x9, [x8, #8]
    3680:	ldrsw	x10, [sp, #36]
    3684:	ldr	w11, [x9, x10, lsl #2]
    3688:	ldr	x9, [x8, #8]
    368c:	ldrsw	x10, [sp, #40]
    3690:	str	w11, [x9, x10, lsl #2]
    3694:	ldr	w11, [sp, #28]
    3698:	ldr	x9, [x8, #8]
    369c:	ldrsw	x10, [sp, #36]
    36a0:	str	w11, [x9, x10, lsl #2]
    36a4:	ldr	w11, [sp, #40]
    36a8:	add	w11, w11, #0x1
    36ac:	str	w11, [sp, #40]
    36b0:	ldr	w11, [sp, #36]
    36b4:	add	w11, w11, #0x1
    36b8:	str	w11, [sp, #36]
    36bc:	ldr	w11, [sp, #32]
    36c0:	subs	w11, w11, #0x1
    36c4:	str	w11, [sp, #32]
    36c8:	b	3658 <BZ2_blockSort@@Base+0x1e84>
    36cc:	ldur	w8, [x29, #-56]
    36d0:	ldur	w9, [x29, #-28]
    36d4:	add	w8, w8, w9
    36d8:	ldur	w9, [x29, #-36]
    36dc:	subs	w8, w8, w9
    36e0:	subs	w8, w8, #0x1
    36e4:	stur	w8, [x29, #-44]
    36e8:	ldur	w8, [x29, #-60]
    36ec:	ldur	w9, [x29, #-40]
    36f0:	ldur	w10, [x29, #-32]
    36f4:	subs	w9, w9, w10
    36f8:	subs	w8, w8, w9
    36fc:	add	w8, w8, #0x1
    3700:	stur	w8, [x29, #-48]
    3704:	ldur	w8, [x29, #-44]
    3708:	ldur	w9, [x29, #-56]
    370c:	subs	w8, w8, w9
    3710:	ldur	w9, [x29, #-60]
    3714:	ldur	w10, [x29, #-48]
    3718:	subs	w9, w9, w10
    371c:	cmp	w8, w9
    3720:	b.le	3778 <BZ2_blockSort@@Base+0x1fa4>
    3724:	ldur	w8, [x29, #-56]
    3728:	ldursw	x9, [x29, #-52]
    372c:	add	x10, sp, #0x1d8
    3730:	str	w8, [x10, x9, lsl #2]
    3734:	ldur	w8, [x29, #-44]
    3738:	ldursw	x9, [x29, #-52]
    373c:	add	x11, sp, #0x48
    3740:	str	w8, [x11, x9, lsl #2]
    3744:	ldur	w8, [x29, #-52]
    3748:	add	w8, w8, #0x1
    374c:	stur	w8, [x29, #-52]
    3750:	ldur	w8, [x29, #-48]
    3754:	ldursw	x9, [x29, #-52]
    3758:	str	w8, [x10, x9, lsl #2]
    375c:	ldur	w8, [x29, #-60]
    3760:	ldursw	x9, [x29, #-52]
    3764:	str	w8, [x11, x9, lsl #2]
    3768:	ldur	w8, [x29, #-52]
    376c:	add	w8, w8, #0x1
    3770:	stur	w8, [x29, #-52]
    3774:	b	37c8 <BZ2_blockSort@@Base+0x1ff4>
    3778:	ldur	w8, [x29, #-48]
    377c:	ldursw	x9, [x29, #-52]
    3780:	add	x10, sp, #0x1d8
    3784:	str	w8, [x10, x9, lsl #2]
    3788:	ldur	w8, [x29, #-60]
    378c:	ldursw	x9, [x29, #-52]
    3790:	add	x11, sp, #0x48
    3794:	str	w8, [x11, x9, lsl #2]
    3798:	ldur	w8, [x29, #-52]
    379c:	add	w8, w8, #0x1
    37a0:	stur	w8, [x29, #-52]
    37a4:	ldur	w8, [x29, #-56]
    37a8:	ldursw	x9, [x29, #-52]
    37ac:	str	w8, [x10, x9, lsl #2]
    37b0:	ldur	w8, [x29, #-44]
    37b4:	ldursw	x9, [x29, #-52]
    37b8:	str	w8, [x11, x9, lsl #2]
    37bc:	ldur	w8, [x29, #-52]
    37c0:	add	w8, w8, #0x1
    37c4:	stur	w8, [x29, #-52]
    37c8:	b	31ac <BZ2_blockSort@@Base+0x19d8>
    37cc:	add	sp, sp, #0x3b0
    37d0:	ldr	x28, [sp, #16]
    37d4:	ldp	x29, x30, [sp], #32
    37d8:	ret
    37dc:	sub	sp, sp, #0x30
    37e0:	str	x0, [sp, #40]
    37e4:	str	x1, [sp, #32]
    37e8:	str	w2, [sp, #28]
    37ec:	str	w3, [sp, #24]
    37f0:	ldr	w8, [sp, #28]
    37f4:	ldr	w9, [sp, #24]
    37f8:	cmp	w8, w9
    37fc:	b.ne	3804 <BZ2_blockSort@@Base+0x2030>  // b.any
    3800:	b	39e0 <BZ2_blockSort@@Base+0x220c>
    3804:	ldr	w8, [sp, #24]
    3808:	ldr	w9, [sp, #28]
    380c:	subs	w8, w8, w9
    3810:	cmp	w8, #0x3
    3814:	b.le	38fc <BZ2_blockSort@@Base+0x2128>
    3818:	ldr	w8, [sp, #24]
    381c:	subs	w8, w8, #0x4
    3820:	str	w8, [sp, #20]
    3824:	ldr	w8, [sp, #20]
    3828:	ldr	w9, [sp, #28]
    382c:	cmp	w8, w9
    3830:	b.lt	38fc <BZ2_blockSort@@Base+0x2128>  // b.tstop
    3834:	ldr	x8, [sp, #40]
    3838:	ldrsw	x9, [sp, #20]
    383c:	ldr	w10, [x8, x9, lsl #2]
    3840:	str	w10, [sp, #12]
    3844:	ldr	x8, [sp, #32]
    3848:	ldrsw	x9, [sp, #12]
    384c:	ldr	w10, [x8, x9, lsl #2]
    3850:	str	w10, [sp, #8]
    3854:	ldr	w10, [sp, #20]
    3858:	add	w10, w10, #0x4
    385c:	str	w10, [sp, #16]
    3860:	ldr	w8, [sp, #16]
    3864:	ldr	w9, [sp, #24]
    3868:	mov	w10, #0x0                   	// #0
    386c:	cmp	w8, w9
    3870:	str	w10, [sp, #4]
    3874:	b.gt	38a0 <BZ2_blockSort@@Base+0x20cc>
    3878:	ldr	w8, [sp, #8]
    387c:	ldr	x9, [sp, #32]
    3880:	ldr	x10, [sp, #40]
    3884:	ldrsw	x11, [sp, #16]
    3888:	ldr	w12, [x10, x11, lsl #2]
    388c:	mov	w10, w12
    3890:	ldr	w12, [x9, x10, lsl #2]
    3894:	cmp	w8, w12
    3898:	cset	w8, hi  // hi = pmore
    389c:	str	w8, [sp, #4]
    38a0:	ldr	w8, [sp, #4]
    38a4:	tbnz	w8, #0, 38ac <BZ2_blockSort@@Base+0x20d8>
    38a8:	b	38d8 <BZ2_blockSort@@Base+0x2104>
    38ac:	ldr	x8, [sp, #40]
    38b0:	ldrsw	x9, [sp, #16]
    38b4:	ldr	w10, [x8, x9, lsl #2]
    38b8:	ldr	x8, [sp, #40]
    38bc:	ldr	w11, [sp, #16]
    38c0:	subs	w11, w11, #0x4
    38c4:	str	w10, [x8, w11, sxtw #2]
    38c8:	ldr	w8, [sp, #16]
    38cc:	add	w8, w8, #0x4
    38d0:	str	w8, [sp, #16]
    38d4:	b	3860 <BZ2_blockSort@@Base+0x208c>
    38d8:	ldr	w8, [sp, #12]
    38dc:	ldr	x9, [sp, #40]
    38e0:	ldr	w10, [sp, #16]
    38e4:	subs	w10, w10, #0x4
    38e8:	str	w8, [x9, w10, sxtw #2]
    38ec:	ldr	w8, [sp, #20]
    38f0:	subs	w8, w8, #0x1
    38f4:	str	w8, [sp, #20]
    38f8:	b	3824 <BZ2_blockSort@@Base+0x2050>
    38fc:	ldr	w8, [sp, #24]
    3900:	subs	w8, w8, #0x1
    3904:	str	w8, [sp, #20]
    3908:	ldr	w8, [sp, #20]
    390c:	ldr	w9, [sp, #28]
    3910:	cmp	w8, w9
    3914:	b.lt	39e0 <BZ2_blockSort@@Base+0x220c>  // b.tstop
    3918:	ldr	x8, [sp, #40]
    391c:	ldrsw	x9, [sp, #20]
    3920:	ldr	w10, [x8, x9, lsl #2]
    3924:	str	w10, [sp, #12]
    3928:	ldr	x8, [sp, #32]
    392c:	ldrsw	x9, [sp, #12]
    3930:	ldr	w10, [x8, x9, lsl #2]
    3934:	str	w10, [sp, #8]
    3938:	ldr	w10, [sp, #20]
    393c:	add	w10, w10, #0x1
    3940:	str	w10, [sp, #16]
    3944:	ldr	w8, [sp, #16]
    3948:	ldr	w9, [sp, #24]
    394c:	mov	w10, #0x0                   	// #0
    3950:	cmp	w8, w9
    3954:	str	w10, [sp]
    3958:	b.gt	3984 <BZ2_blockSort@@Base+0x21b0>
    395c:	ldr	w8, [sp, #8]
    3960:	ldr	x9, [sp, #32]
    3964:	ldr	x10, [sp, #40]
    3968:	ldrsw	x11, [sp, #16]
    396c:	ldr	w12, [x10, x11, lsl #2]
    3970:	mov	w10, w12
    3974:	ldr	w12, [x9, x10, lsl #2]
    3978:	cmp	w8, w12
    397c:	cset	w8, hi  // hi = pmore
    3980:	str	w8, [sp]
    3984:	ldr	w8, [sp]
    3988:	tbnz	w8, #0, 3990 <BZ2_blockSort@@Base+0x21bc>
    398c:	b	39bc <BZ2_blockSort@@Base+0x21e8>
    3990:	ldr	x8, [sp, #40]
    3994:	ldrsw	x9, [sp, #16]
    3998:	ldr	w10, [x8, x9, lsl #2]
    399c:	ldr	x8, [sp, #40]
    39a0:	ldr	w11, [sp, #16]
    39a4:	subs	w11, w11, #0x1
    39a8:	str	w10, [x8, w11, sxtw #2]
    39ac:	ldr	w8, [sp, #16]
    39b0:	add	w8, w8, #0x1
    39b4:	str	w8, [sp, #16]
    39b8:	b	3944 <BZ2_blockSort@@Base+0x2170>
    39bc:	ldr	w8, [sp, #12]
    39c0:	ldr	x9, [sp, #40]
    39c4:	ldr	w10, [sp, #16]
    39c8:	subs	w10, w10, #0x1
    39cc:	str	w8, [x9, w10, sxtw #2]
    39d0:	ldr	w8, [sp, #20]
    39d4:	subs	w8, w8, #0x1
    39d8:	str	w8, [sp, #20]
    39dc:	b	3908 <BZ2_blockSort@@Base+0x2134>
    39e0:	add	sp, sp, #0x30
    39e4:	ret
    39e8:	stp	x29, x30, [sp, #-32]!
    39ec:	str	x28, [sp, #16]
    39f0:	mov	x29, sp
    39f4:	sub	sp, sp, #0x570
    39f8:	add	x8, sp, #0x384
    39fc:	add	x9, sp, #0x1f4
    3a00:	add	x10, sp, #0x64
    3a04:	stur	x0, [x29, #-8]
    3a08:	stur	x1, [x29, #-16]
    3a0c:	stur	x2, [x29, #-24]
    3a10:	stur	w3, [x29, #-28]
    3a14:	stur	w4, [x29, #-32]
    3a18:	stur	w5, [x29, #-36]
    3a1c:	stur	w6, [x29, #-40]
    3a20:	stur	x7, [x29, #-48]
    3a24:	stur	wzr, [x29, #-80]
    3a28:	ldur	w11, [x29, #-32]
    3a2c:	ldursw	x12, [x29, #-80]
    3a30:	str	w11, [x8, x12, lsl #2]
    3a34:	ldur	w11, [x29, #-36]
    3a38:	ldursw	x8, [x29, #-80]
    3a3c:	str	w11, [x9, x8, lsl #2]
    3a40:	ldur	w11, [x29, #-40]
    3a44:	ldursw	x8, [x29, #-80]
    3a48:	str	w11, [x10, x8, lsl #2]
    3a4c:	ldur	w11, [x29, #-80]
    3a50:	add	w11, w11, #0x1
    3a54:	stur	w11, [x29, #-80]
    3a58:	ldur	w8, [x29, #-80]
    3a5c:	cmp	w8, #0x0
    3a60:	cset	w8, le
    3a64:	tbnz	w8, #0, 41f0 <BZ2_blockSort@@Base+0x2a1c>
    3a68:	ldur	w8, [x29, #-80]
    3a6c:	cmp	w8, #0x62
    3a70:	b.lt	3a7c <BZ2_blockSort@@Base+0x22a8>  // b.tstop
    3a74:	mov	w0, #0x3e9                 	// #1001
    3a78:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    3a7c:	ldur	w8, [x29, #-80]
    3a80:	subs	w8, w8, #0x1
    3a84:	stur	w8, [x29, #-80]
    3a88:	ldursw	x9, [x29, #-80]
    3a8c:	add	x10, sp, #0x384
    3a90:	ldr	w8, [x10, x9, lsl #2]
    3a94:	stur	w8, [x29, #-84]
    3a98:	ldursw	x9, [x29, #-80]
    3a9c:	add	x10, sp, #0x1f4
    3aa0:	ldr	w8, [x10, x9, lsl #2]
    3aa4:	stur	w8, [x29, #-88]
    3aa8:	ldursw	x9, [x29, #-80]
    3aac:	add	x10, sp, #0x64
    3ab0:	ldr	w8, [x10, x9, lsl #2]
    3ab4:	stur	w8, [x29, #-92]
    3ab8:	ldur	w8, [x29, #-88]
    3abc:	ldur	w11, [x29, #-84]
    3ac0:	subs	w8, w8, w11
    3ac4:	cmp	w8, #0x14
    3ac8:	b.lt	3ad8 <BZ2_blockSort@@Base+0x2304>  // b.tstop
    3acc:	ldur	w8, [x29, #-92]
    3ad0:	cmp	w8, #0xe
    3ad4:	b.le	3b18 <BZ2_blockSort@@Base+0x2344>
    3ad8:	ldur	x0, [x29, #-8]
    3adc:	ldur	x1, [x29, #-16]
    3ae0:	ldur	x2, [x29, #-24]
    3ae4:	ldur	w3, [x29, #-28]
    3ae8:	ldur	w4, [x29, #-84]
    3aec:	ldur	w5, [x29, #-88]
    3af0:	ldur	w6, [x29, #-92]
    3af4:	ldur	x7, [x29, #-48]
    3af8:	bl	4200 <BZ2_blockSort@@Base+0x2a2c>
    3afc:	ldur	x8, [x29, #-48]
    3b00:	ldr	w9, [x8]
    3b04:	cmp	w9, #0x0
    3b08:	cset	w9, ge  // ge = tcont
    3b0c:	tbnz	w9, #0, 3b14 <BZ2_blockSort@@Base+0x2340>
    3b10:	b	41f0 <BZ2_blockSort@@Base+0x2a1c>
    3b14:	b	3a58 <BZ2_blockSort@@Base+0x2284>
    3b18:	ldur	x8, [x29, #-16]
    3b1c:	ldur	x9, [x29, #-8]
    3b20:	ldursw	x10, [x29, #-84]
    3b24:	ldr	w11, [x9, x10, lsl #2]
    3b28:	ldur	w12, [x29, #-92]
    3b2c:	add	w11, w11, w12
    3b30:	ldrb	w0, [x8, w11, uxtw]
    3b34:	ldur	x8, [x29, #-16]
    3b38:	ldur	x9, [x29, #-8]
    3b3c:	ldursw	x10, [x29, #-88]
    3b40:	ldr	w11, [x9, x10, lsl #2]
    3b44:	ldur	w12, [x29, #-92]
    3b48:	add	w11, w11, w12
    3b4c:	ldrb	w1, [x8, w11, uxtw]
    3b50:	ldur	x8, [x29, #-16]
    3b54:	ldur	x9, [x29, #-8]
    3b58:	ldur	w11, [x29, #-84]
    3b5c:	ldur	w12, [x29, #-88]
    3b60:	add	w11, w11, w12
    3b64:	asr	w11, w11, #1
    3b68:	ldr	w11, [x9, w11, sxtw #2]
    3b6c:	ldur	w12, [x29, #-92]
    3b70:	add	w11, w11, w12
    3b74:	ldrb	w2, [x8, w11, uxtw]
    3b78:	bl	4598 <BZ2_blockSort@@Base+0x2dc4>
    3b7c:	and	w11, w0, #0xff
    3b80:	stur	w11, [x29, #-76]
    3b84:	ldur	w11, [x29, #-84]
    3b88:	stur	w11, [x29, #-60]
    3b8c:	stur	w11, [x29, #-52]
    3b90:	ldur	w11, [x29, #-88]
    3b94:	stur	w11, [x29, #-64]
    3b98:	stur	w11, [x29, #-56]
    3b9c:	ldur	w8, [x29, #-52]
    3ba0:	ldur	w9, [x29, #-56]
    3ba4:	cmp	w8, w9
    3ba8:	b.le	3bb0 <BZ2_blockSort@@Base+0x23dc>
    3bac:	b	3c58 <BZ2_blockSort@@Base+0x2484>
    3bb0:	ldur	x8, [x29, #-16]
    3bb4:	ldur	x9, [x29, #-8]
    3bb8:	ldursw	x10, [x29, #-52]
    3bbc:	ldr	w11, [x9, x10, lsl #2]
    3bc0:	ldur	w12, [x29, #-92]
    3bc4:	add	w11, w11, w12
    3bc8:	ldrb	w11, [x8, w11, uxtw]
    3bcc:	ldur	w12, [x29, #-76]
    3bd0:	subs	w11, w11, w12
    3bd4:	stur	w11, [x29, #-68]
    3bd8:	ldur	w11, [x29, #-68]
    3bdc:	cbnz	w11, 3c34 <BZ2_blockSort@@Base+0x2460>
    3be0:	ldur	x8, [x29, #-8]
    3be4:	ldursw	x9, [x29, #-52]
    3be8:	ldr	w10, [x8, x9, lsl #2]
    3bec:	str	w10, [sp, #60]
    3bf0:	ldur	x8, [x29, #-8]
    3bf4:	ldursw	x9, [x29, #-60]
    3bf8:	ldr	w10, [x8, x9, lsl #2]
    3bfc:	ldur	x8, [x29, #-8]
    3c00:	ldursw	x9, [x29, #-52]
    3c04:	str	w10, [x8, x9, lsl #2]
    3c08:	ldr	w10, [sp, #60]
    3c0c:	ldur	x8, [x29, #-8]
    3c10:	ldursw	x9, [x29, #-60]
    3c14:	str	w10, [x8, x9, lsl #2]
    3c18:	ldur	w10, [x29, #-60]
    3c1c:	add	w10, w10, #0x1
    3c20:	stur	w10, [x29, #-60]
    3c24:	ldur	w10, [x29, #-52]
    3c28:	add	w10, w10, #0x1
    3c2c:	stur	w10, [x29, #-52]
    3c30:	b	3b9c <BZ2_blockSort@@Base+0x23c8>
    3c34:	ldur	w8, [x29, #-68]
    3c38:	cmp	w8, #0x0
    3c3c:	cset	w8, le
    3c40:	tbnz	w8, #0, 3c48 <BZ2_blockSort@@Base+0x2474>
    3c44:	b	3c58 <BZ2_blockSort@@Base+0x2484>
    3c48:	ldur	w8, [x29, #-52]
    3c4c:	add	w8, w8, #0x1
    3c50:	stur	w8, [x29, #-52]
    3c54:	b	3b9c <BZ2_blockSort@@Base+0x23c8>
    3c58:	ldur	w8, [x29, #-52]
    3c5c:	ldur	w9, [x29, #-56]
    3c60:	cmp	w8, w9
    3c64:	b.le	3c6c <BZ2_blockSort@@Base+0x2498>
    3c68:	b	3d14 <BZ2_blockSort@@Base+0x2540>
    3c6c:	ldur	x8, [x29, #-16]
    3c70:	ldur	x9, [x29, #-8]
    3c74:	ldursw	x10, [x29, #-56]
    3c78:	ldr	w11, [x9, x10, lsl #2]
    3c7c:	ldur	w12, [x29, #-92]
    3c80:	add	w11, w11, w12
    3c84:	ldrb	w11, [x8, w11, uxtw]
    3c88:	ldur	w12, [x29, #-76]
    3c8c:	subs	w11, w11, w12
    3c90:	stur	w11, [x29, #-68]
    3c94:	ldur	w11, [x29, #-68]
    3c98:	cbnz	w11, 3cf0 <BZ2_blockSort@@Base+0x251c>
    3c9c:	ldur	x8, [x29, #-8]
    3ca0:	ldursw	x9, [x29, #-56]
    3ca4:	ldr	w10, [x8, x9, lsl #2]
    3ca8:	str	w10, [sp, #56]
    3cac:	ldur	x8, [x29, #-8]
    3cb0:	ldursw	x9, [x29, #-64]
    3cb4:	ldr	w10, [x8, x9, lsl #2]
    3cb8:	ldur	x8, [x29, #-8]
    3cbc:	ldursw	x9, [x29, #-56]
    3cc0:	str	w10, [x8, x9, lsl #2]
    3cc4:	ldr	w10, [sp, #56]
    3cc8:	ldur	x8, [x29, #-8]
    3ccc:	ldursw	x9, [x29, #-64]
    3cd0:	str	w10, [x8, x9, lsl #2]
    3cd4:	ldur	w10, [x29, #-64]
    3cd8:	subs	w10, w10, #0x1
    3cdc:	stur	w10, [x29, #-64]
    3ce0:	ldur	w10, [x29, #-56]
    3ce4:	subs	w10, w10, #0x1
    3ce8:	stur	w10, [x29, #-56]
    3cec:	b	3c58 <BZ2_blockSort@@Base+0x2484>
    3cf0:	ldur	w8, [x29, #-68]
    3cf4:	cmp	w8, #0x0
    3cf8:	cset	w8, ge  // ge = tcont
    3cfc:	tbnz	w8, #0, 3d04 <BZ2_blockSort@@Base+0x2530>
    3d00:	b	3d14 <BZ2_blockSort@@Base+0x2540>
    3d04:	ldur	w8, [x29, #-56]
    3d08:	subs	w8, w8, #0x1
    3d0c:	stur	w8, [x29, #-56]
    3d10:	b	3c58 <BZ2_blockSort@@Base+0x2484>
    3d14:	ldur	w8, [x29, #-52]
    3d18:	ldur	w9, [x29, #-56]
    3d1c:	cmp	w8, w9
    3d20:	b.le	3d28 <BZ2_blockSort@@Base+0x2554>
    3d24:	b	3d7c <BZ2_blockSort@@Base+0x25a8>
    3d28:	ldur	x8, [x29, #-8]
    3d2c:	ldursw	x9, [x29, #-52]
    3d30:	ldr	w10, [x8, x9, lsl #2]
    3d34:	str	w10, [sp, #52]
    3d38:	ldur	x8, [x29, #-8]
    3d3c:	ldursw	x9, [x29, #-56]
    3d40:	ldr	w10, [x8, x9, lsl #2]
    3d44:	ldur	x8, [x29, #-8]
    3d48:	ldursw	x9, [x29, #-52]
    3d4c:	str	w10, [x8, x9, lsl #2]
    3d50:	ldr	w10, [sp, #52]
    3d54:	ldur	x8, [x29, #-8]
    3d58:	ldursw	x9, [x29, #-56]
    3d5c:	str	w10, [x8, x9, lsl #2]
    3d60:	ldur	w10, [x29, #-52]
    3d64:	add	w10, w10, #0x1
    3d68:	stur	w10, [x29, #-52]
    3d6c:	ldur	w10, [x29, #-56]
    3d70:	subs	w10, w10, #0x1
    3d74:	stur	w10, [x29, #-56]
    3d78:	b	3b9c <BZ2_blockSort@@Base+0x23c8>
    3d7c:	ldur	w8, [x29, #-64]
    3d80:	ldur	w9, [x29, #-60]
    3d84:	cmp	w8, w9
    3d88:	b.ge	3dd0 <BZ2_blockSort@@Base+0x25fc>  // b.tcont
    3d8c:	ldur	w8, [x29, #-84]
    3d90:	ldursw	x9, [x29, #-80]
    3d94:	add	x10, sp, #0x384
    3d98:	str	w8, [x10, x9, lsl #2]
    3d9c:	ldur	w8, [x29, #-88]
    3da0:	ldursw	x9, [x29, #-80]
    3da4:	add	x10, sp, #0x1f4
    3da8:	str	w8, [x10, x9, lsl #2]
    3dac:	ldur	w8, [x29, #-92]
    3db0:	add	w8, w8, #0x1
    3db4:	ldursw	x9, [x29, #-80]
    3db8:	add	x10, sp, #0x64
    3dbc:	str	w8, [x10, x9, lsl #2]
    3dc0:	ldur	w8, [x29, #-80]
    3dc4:	add	w8, w8, #0x1
    3dc8:	stur	w8, [x29, #-80]
    3dcc:	b	3a58 <BZ2_blockSort@@Base+0x2284>
    3dd0:	ldur	w8, [x29, #-60]
    3dd4:	ldur	w9, [x29, #-84]
    3dd8:	subs	w8, w8, w9
    3ddc:	ldur	w9, [x29, #-52]
    3de0:	ldur	w10, [x29, #-60]
    3de4:	subs	w9, w9, w10
    3de8:	cmp	w8, w9
    3dec:	b.ge	3e04 <BZ2_blockSort@@Base+0x2630>  // b.tcont
    3df0:	ldur	w8, [x29, #-60]
    3df4:	ldur	w9, [x29, #-84]
    3df8:	subs	w8, w8, w9
    3dfc:	str	w8, [sp, #4]
    3e00:	b	3e14 <BZ2_blockSort@@Base+0x2640>
    3e04:	ldur	w8, [x29, #-52]
    3e08:	ldur	w9, [x29, #-60]
    3e0c:	subs	w8, w8, w9
    3e10:	str	w8, [sp, #4]
    3e14:	ldr	w8, [sp, #4]
    3e18:	stur	w8, [x29, #-68]
    3e1c:	ldur	w8, [x29, #-84]
    3e20:	str	w8, [sp, #48]
    3e24:	ldur	w8, [x29, #-52]
    3e28:	ldur	w9, [x29, #-68]
    3e2c:	subs	w8, w8, w9
    3e30:	str	w8, [sp, #44]
    3e34:	ldur	w8, [x29, #-68]
    3e38:	str	w8, [sp, #40]
    3e3c:	ldr	w8, [sp, #40]
    3e40:	cmp	w8, #0x0
    3e44:	cset	w8, le
    3e48:	tbnz	w8, #0, 3eac <BZ2_blockSort@@Base+0x26d8>
    3e4c:	ldur	x8, [x29, #-8]
    3e50:	ldrsw	x9, [sp, #48]
    3e54:	ldr	w10, [x8, x9, lsl #2]
    3e58:	str	w10, [sp, #36]
    3e5c:	ldur	x8, [x29, #-8]
    3e60:	ldrsw	x9, [sp, #44]
    3e64:	ldr	w10, [x8, x9, lsl #2]
    3e68:	ldur	x8, [x29, #-8]
    3e6c:	ldrsw	x9, [sp, #48]
    3e70:	str	w10, [x8, x9, lsl #2]
    3e74:	ldr	w10, [sp, #36]
    3e78:	ldur	x8, [x29, #-8]
    3e7c:	ldrsw	x9, [sp, #44]
    3e80:	str	w10, [x8, x9, lsl #2]
    3e84:	ldr	w10, [sp, #48]
    3e88:	add	w10, w10, #0x1
    3e8c:	str	w10, [sp, #48]
    3e90:	ldr	w10, [sp, #44]
    3e94:	add	w10, w10, #0x1
    3e98:	str	w10, [sp, #44]
    3e9c:	ldr	w10, [sp, #40]
    3ea0:	subs	w10, w10, #0x1
    3ea4:	str	w10, [sp, #40]
    3ea8:	b	3e3c <BZ2_blockSort@@Base+0x2668>
    3eac:	ldur	w8, [x29, #-88]
    3eb0:	ldur	w9, [x29, #-64]
    3eb4:	subs	w8, w8, w9
    3eb8:	ldur	w9, [x29, #-64]
    3ebc:	ldur	w10, [x29, #-56]
    3ec0:	subs	w9, w9, w10
    3ec4:	cmp	w8, w9
    3ec8:	b.ge	3ee0 <BZ2_blockSort@@Base+0x270c>  // b.tcont
    3ecc:	ldur	w8, [x29, #-88]
    3ed0:	ldur	w9, [x29, #-64]
    3ed4:	subs	w8, w8, w9
    3ed8:	str	w8, [sp]
    3edc:	b	3ef0 <BZ2_blockSort@@Base+0x271c>
    3ee0:	ldur	w8, [x29, #-64]
    3ee4:	ldur	w9, [x29, #-56]
    3ee8:	subs	w8, w8, w9
    3eec:	str	w8, [sp]
    3ef0:	ldr	w8, [sp]
    3ef4:	stur	w8, [x29, #-72]
    3ef8:	ldur	w8, [x29, #-52]
    3efc:	str	w8, [sp, #32]
    3f00:	ldur	w8, [x29, #-88]
    3f04:	ldur	w9, [x29, #-72]
    3f08:	subs	w8, w8, w9
    3f0c:	add	w8, w8, #0x1
    3f10:	str	w8, [sp, #28]
    3f14:	ldur	w8, [x29, #-72]
    3f18:	str	w8, [sp, #24]
    3f1c:	ldr	w8, [sp, #24]
    3f20:	cmp	w8, #0x0
    3f24:	cset	w8, le
    3f28:	tbnz	w8, #0, 3f8c <BZ2_blockSort@@Base+0x27b8>
    3f2c:	ldur	x8, [x29, #-8]
    3f30:	ldrsw	x9, [sp, #32]
    3f34:	ldr	w10, [x8, x9, lsl #2]
    3f38:	str	w10, [sp, #20]
    3f3c:	ldur	x8, [x29, #-8]
    3f40:	ldrsw	x9, [sp, #28]
    3f44:	ldr	w10, [x8, x9, lsl #2]
    3f48:	ldur	x8, [x29, #-8]
    3f4c:	ldrsw	x9, [sp, #32]
    3f50:	str	w10, [x8, x9, lsl #2]
    3f54:	ldr	w10, [sp, #20]
    3f58:	ldur	x8, [x29, #-8]
    3f5c:	ldrsw	x9, [sp, #28]
    3f60:	str	w10, [x8, x9, lsl #2]
    3f64:	ldr	w10, [sp, #32]
    3f68:	add	w10, w10, #0x1
    3f6c:	str	w10, [sp, #32]
    3f70:	ldr	w10, [sp, #28]
    3f74:	add	w10, w10, #0x1
    3f78:	str	w10, [sp, #28]
    3f7c:	ldr	w10, [sp, #24]
    3f80:	subs	w10, w10, #0x1
    3f84:	str	w10, [sp, #24]
    3f88:	b	3f1c <BZ2_blockSort@@Base+0x2748>
    3f8c:	ldur	w8, [x29, #-84]
    3f90:	ldur	w9, [x29, #-52]
    3f94:	add	w8, w8, w9
    3f98:	ldur	w9, [x29, #-60]
    3f9c:	subs	w8, w8, w9
    3fa0:	subs	w8, w8, #0x1
    3fa4:	stur	w8, [x29, #-68]
    3fa8:	ldur	w8, [x29, #-88]
    3fac:	ldur	w9, [x29, #-64]
    3fb0:	ldur	w10, [x29, #-56]
    3fb4:	subs	w9, w9, w10
    3fb8:	subs	w8, w8, w9
    3fbc:	add	w8, w8, #0x1
    3fc0:	stur	w8, [x29, #-72]
    3fc4:	ldur	w8, [x29, #-84]
    3fc8:	str	w8, [sp, #88]
    3fcc:	ldur	w8, [x29, #-68]
    3fd0:	str	w8, [sp, #76]
    3fd4:	ldur	w8, [x29, #-92]
    3fd8:	str	w8, [sp, #64]
    3fdc:	ldur	w8, [x29, #-72]
    3fe0:	str	w8, [sp, #92]
    3fe4:	ldur	w8, [x29, #-88]
    3fe8:	str	w8, [sp, #80]
    3fec:	ldur	w8, [x29, #-92]
    3ff0:	str	w8, [sp, #68]
    3ff4:	ldur	w8, [x29, #-68]
    3ff8:	add	w8, w8, #0x1
    3ffc:	str	w8, [sp, #96]
    4000:	ldur	w8, [x29, #-72]
    4004:	subs	w8, w8, #0x1
    4008:	str	w8, [sp, #84]
    400c:	ldur	w8, [x29, #-92]
    4010:	add	w8, w8, #0x1
    4014:	str	w8, [sp, #72]
    4018:	ldr	w8, [sp, #76]
    401c:	ldr	w9, [sp, #88]
    4020:	subs	w8, w8, w9
    4024:	ldr	w9, [sp, #80]
    4028:	ldr	w10, [sp, #92]
    402c:	subs	w9, w9, w10
    4030:	cmp	w8, w9
    4034:	b.ge	4080 <BZ2_blockSort@@Base+0x28ac>  // b.tcont
    4038:	ldr	w8, [sp, #88]
    403c:	str	w8, [sp, #16]
    4040:	ldr	w8, [sp, #92]
    4044:	str	w8, [sp, #88]
    4048:	ldr	w8, [sp, #16]
    404c:	str	w8, [sp, #92]
    4050:	ldr	w8, [sp, #76]
    4054:	str	w8, [sp, #16]
    4058:	ldr	w8, [sp, #80]
    405c:	str	w8, [sp, #76]
    4060:	ldr	w8, [sp, #16]
    4064:	str	w8, [sp, #80]
    4068:	ldr	w8, [sp, #64]
    406c:	str	w8, [sp, #16]
    4070:	ldr	w8, [sp, #68]
    4074:	str	w8, [sp, #64]
    4078:	ldr	w8, [sp, #16]
    407c:	str	w8, [sp, #68]
    4080:	ldr	w8, [sp, #80]
    4084:	ldr	w9, [sp, #92]
    4088:	subs	w8, w8, w9
    408c:	ldr	w9, [sp, #84]
    4090:	ldr	w10, [sp, #96]
    4094:	subs	w9, w9, w10
    4098:	cmp	w8, w9
    409c:	b.ge	40e8 <BZ2_blockSort@@Base+0x2914>  // b.tcont
    40a0:	ldr	w8, [sp, #92]
    40a4:	str	w8, [sp, #12]
    40a8:	ldr	w8, [sp, #96]
    40ac:	str	w8, [sp, #92]
    40b0:	ldr	w8, [sp, #12]
    40b4:	str	w8, [sp, #96]
    40b8:	ldr	w8, [sp, #80]
    40bc:	str	w8, [sp, #12]
    40c0:	ldr	w8, [sp, #84]
    40c4:	str	w8, [sp, #80]
    40c8:	ldr	w8, [sp, #12]
    40cc:	str	w8, [sp, #84]
    40d0:	ldr	w8, [sp, #68]
    40d4:	str	w8, [sp, #12]
    40d8:	ldr	w8, [sp, #72]
    40dc:	str	w8, [sp, #68]
    40e0:	ldr	w8, [sp, #12]
    40e4:	str	w8, [sp, #72]
    40e8:	ldr	w8, [sp, #76]
    40ec:	ldr	w9, [sp, #88]
    40f0:	subs	w8, w8, w9
    40f4:	ldr	w9, [sp, #80]
    40f8:	ldr	w10, [sp, #92]
    40fc:	subs	w9, w9, w10
    4100:	cmp	w8, w9
    4104:	b.ge	4150 <BZ2_blockSort@@Base+0x297c>  // b.tcont
    4108:	ldr	w8, [sp, #88]
    410c:	str	w8, [sp, #8]
    4110:	ldr	w8, [sp, #92]
    4114:	str	w8, [sp, #88]
    4118:	ldr	w8, [sp, #8]
    411c:	str	w8, [sp, #92]
    4120:	ldr	w8, [sp, #76]
    4124:	str	w8, [sp, #8]
    4128:	ldr	w8, [sp, #80]
    412c:	str	w8, [sp, #76]
    4130:	ldr	w8, [sp, #8]
    4134:	str	w8, [sp, #80]
    4138:	ldr	w8, [sp, #64]
    413c:	str	w8, [sp, #8]
    4140:	ldr	w8, [sp, #68]
    4144:	str	w8, [sp, #64]
    4148:	ldr	w8, [sp, #8]
    414c:	str	w8, [sp, #68]
    4150:	ldr	w8, [sp, #88]
    4154:	ldursw	x9, [x29, #-80]
    4158:	add	x10, sp, #0x384
    415c:	str	w8, [x10, x9, lsl #2]
    4160:	ldr	w8, [sp, #76]
    4164:	ldursw	x9, [x29, #-80]
    4168:	add	x11, sp, #0x1f4
    416c:	str	w8, [x11, x9, lsl #2]
    4170:	ldr	w8, [sp, #64]
    4174:	ldursw	x9, [x29, #-80]
    4178:	add	x12, sp, #0x64
    417c:	str	w8, [x12, x9, lsl #2]
    4180:	ldur	w8, [x29, #-80]
    4184:	add	w8, w8, #0x1
    4188:	stur	w8, [x29, #-80]
    418c:	ldr	w8, [sp, #92]
    4190:	ldursw	x9, [x29, #-80]
    4194:	str	w8, [x10, x9, lsl #2]
    4198:	ldr	w8, [sp, #80]
    419c:	ldursw	x9, [x29, #-80]
    41a0:	str	w8, [x11, x9, lsl #2]
    41a4:	ldr	w8, [sp, #68]
    41a8:	ldursw	x9, [x29, #-80]
    41ac:	str	w8, [x12, x9, lsl #2]
    41b0:	ldur	w8, [x29, #-80]
    41b4:	add	w8, w8, #0x1
    41b8:	stur	w8, [x29, #-80]
    41bc:	ldr	w8, [sp, #96]
    41c0:	ldursw	x9, [x29, #-80]
    41c4:	str	w8, [x10, x9, lsl #2]
    41c8:	ldr	w8, [sp, #84]
    41cc:	ldursw	x9, [x29, #-80]
    41d0:	str	w8, [x11, x9, lsl #2]
    41d4:	ldr	w8, [sp, #72]
    41d8:	ldursw	x9, [x29, #-80]
    41dc:	str	w8, [x12, x9, lsl #2]
    41e0:	ldur	w8, [x29, #-80]
    41e4:	add	w8, w8, #0x1
    41e8:	stur	w8, [x29, #-80]
    41ec:	b	3a58 <BZ2_blockSort@@Base+0x2284>
    41f0:	add	sp, sp, #0x570
    41f4:	ldr	x28, [sp, #16]
    41f8:	ldp	x29, x30, [sp], #32
    41fc:	ret
    4200:	sub	sp, sp, #0x60
    4204:	stp	x29, x30, [sp, #80]
    4208:	add	x29, sp, #0x50
    420c:	stur	x0, [x29, #-8]
    4210:	stur	x1, [x29, #-16]
    4214:	stur	x2, [x29, #-24]
    4218:	stur	w3, [x29, #-28]
    421c:	stur	w4, [x29, #-32]
    4220:	stur	w5, [x29, #-36]
    4224:	str	w6, [sp, #40]
    4228:	str	x7, [sp, #32]
    422c:	ldur	w8, [x29, #-36]
    4230:	ldur	w9, [x29, #-32]
    4234:	subs	w8, w8, w9
    4238:	add	w8, w8, #0x1
    423c:	str	w8, [sp, #16]
    4240:	ldr	w8, [sp, #16]
    4244:	cmp	w8, #0x2
    4248:	b.ge	4250 <BZ2_blockSort@@Base+0x2a7c>  // b.tcont
    424c:	b	458c <BZ2_blockSort@@Base+0x2db8>
    4250:	str	wzr, [sp, #12]
    4254:	ldrsw	x8, [sp, #12]
    4258:	adrp	x9, 27000 <BZ2_bzerror@@Base+0x11f84>
    425c:	add	x9, x9, #0x150
    4260:	ldr	w10, [x9, x8, lsl #2]
    4264:	ldr	w11, [sp, #16]
    4268:	cmp	w10, w11
    426c:	b.ge	4280 <BZ2_blockSort@@Base+0x2aac>  // b.tcont
    4270:	ldr	w8, [sp, #12]
    4274:	add	w8, w8, #0x1
    4278:	str	w8, [sp, #12]
    427c:	b	4254 <BZ2_blockSort@@Base+0x2a80>
    4280:	ldr	w8, [sp, #12]
    4284:	subs	w8, w8, #0x1
    4288:	str	w8, [sp, #12]
    428c:	ldr	w8, [sp, #12]
    4290:	cmp	w8, #0x0
    4294:	cset	w8, lt  // lt = tstop
    4298:	tbnz	w8, #0, 458c <BZ2_blockSort@@Base+0x2db8>
    429c:	ldrsw	x8, [sp, #12]
    42a0:	adrp	x9, 27000 <BZ2_bzerror@@Base+0x11f84>
    42a4:	add	x9, x9, #0x150
    42a8:	ldr	w10, [x9, x8, lsl #2]
    42ac:	str	w10, [sp, #20]
    42b0:	ldur	w10, [x29, #-32]
    42b4:	ldr	w11, [sp, #20]
    42b8:	add	w10, w10, w11
    42bc:	str	w10, [sp, #28]
    42c0:	ldr	w8, [sp, #28]
    42c4:	ldur	w9, [x29, #-36]
    42c8:	cmp	w8, w9
    42cc:	b.le	42d4 <BZ2_blockSort@@Base+0x2b00>
    42d0:	b	457c <BZ2_blockSort@@Base+0x2da8>
    42d4:	ldur	x8, [x29, #-8]
    42d8:	ldrsw	x9, [sp, #28]
    42dc:	ldr	w10, [x8, x9, lsl #2]
    42e0:	str	w10, [sp, #8]
    42e4:	ldr	w10, [sp, #28]
    42e8:	str	w10, [sp, #24]
    42ec:	ldur	x8, [x29, #-8]
    42f0:	ldr	w9, [sp, #24]
    42f4:	ldr	w10, [sp, #20]
    42f8:	subs	w9, w9, w10
    42fc:	ldr	w9, [x8, w9, sxtw #2]
    4300:	ldr	w10, [sp, #40]
    4304:	add	w0, w9, w10
    4308:	ldr	w9, [sp, #8]
    430c:	ldr	w10, [sp, #40]
    4310:	add	w1, w9, w10
    4314:	ldur	x2, [x29, #-16]
    4318:	ldur	x3, [x29, #-24]
    431c:	ldur	w4, [x29, #-28]
    4320:	ldr	x5, [sp, #32]
    4324:	bl	460c <BZ2_blockSort@@Base+0x2e38>
    4328:	and	w9, w0, #0xff
    432c:	cbz	w9, 4384 <BZ2_blockSort@@Base+0x2bb0>
    4330:	ldur	x8, [x29, #-8]
    4334:	ldr	w9, [sp, #24]
    4338:	ldr	w10, [sp, #20]
    433c:	subs	w9, w9, w10
    4340:	ldr	w9, [x8, w9, sxtw #2]
    4344:	ldur	x8, [x29, #-8]
    4348:	ldrsw	x11, [sp, #24]
    434c:	str	w9, [x8, x11, lsl #2]
    4350:	ldr	w9, [sp, #24]
    4354:	ldr	w10, [sp, #20]
    4358:	subs	w9, w9, w10
    435c:	str	w9, [sp, #24]
    4360:	ldr	w9, [sp, #24]
    4364:	ldur	w10, [x29, #-32]
    4368:	ldr	w12, [sp, #20]
    436c:	add	w10, w10, w12
    4370:	subs	w10, w10, #0x1
    4374:	cmp	w9, w10
    4378:	b.gt	4380 <BZ2_blockSort@@Base+0x2bac>
    437c:	b	4384 <BZ2_blockSort@@Base+0x2bb0>
    4380:	b	42ec <BZ2_blockSort@@Base+0x2b18>
    4384:	ldr	w8, [sp, #8]
    4388:	ldur	x9, [x29, #-8]
    438c:	ldrsw	x10, [sp, #24]
    4390:	str	w8, [x9, x10, lsl #2]
    4394:	ldr	w8, [sp, #28]
    4398:	add	w8, w8, #0x1
    439c:	str	w8, [sp, #28]
    43a0:	ldr	w8, [sp, #28]
    43a4:	ldur	w11, [x29, #-36]
    43a8:	cmp	w8, w11
    43ac:	b.le	43b4 <BZ2_blockSort@@Base+0x2be0>
    43b0:	b	457c <BZ2_blockSort@@Base+0x2da8>
    43b4:	ldur	x8, [x29, #-8]
    43b8:	ldrsw	x9, [sp, #28]
    43bc:	ldr	w10, [x8, x9, lsl #2]
    43c0:	str	w10, [sp, #8]
    43c4:	ldr	w10, [sp, #28]
    43c8:	str	w10, [sp, #24]
    43cc:	ldur	x8, [x29, #-8]
    43d0:	ldr	w9, [sp, #24]
    43d4:	ldr	w10, [sp, #20]
    43d8:	subs	w9, w9, w10
    43dc:	ldr	w9, [x8, w9, sxtw #2]
    43e0:	ldr	w10, [sp, #40]
    43e4:	add	w0, w9, w10
    43e8:	ldr	w9, [sp, #8]
    43ec:	ldr	w10, [sp, #40]
    43f0:	add	w1, w9, w10
    43f4:	ldur	x2, [x29, #-16]
    43f8:	ldur	x3, [x29, #-24]
    43fc:	ldur	w4, [x29, #-28]
    4400:	ldr	x5, [sp, #32]
    4404:	bl	460c <BZ2_blockSort@@Base+0x2e38>
    4408:	and	w9, w0, #0xff
    440c:	cbz	w9, 4464 <BZ2_blockSort@@Base+0x2c90>
    4410:	ldur	x8, [x29, #-8]
    4414:	ldr	w9, [sp, #24]
    4418:	ldr	w10, [sp, #20]
    441c:	subs	w9, w9, w10
    4420:	ldr	w9, [x8, w9, sxtw #2]
    4424:	ldur	x8, [x29, #-8]
    4428:	ldrsw	x11, [sp, #24]
    442c:	str	w9, [x8, x11, lsl #2]
    4430:	ldr	w9, [sp, #24]
    4434:	ldr	w10, [sp, #20]
    4438:	subs	w9, w9, w10
    443c:	str	w9, [sp, #24]
    4440:	ldr	w9, [sp, #24]
    4444:	ldur	w10, [x29, #-32]
    4448:	ldr	w12, [sp, #20]
    444c:	add	w10, w10, w12
    4450:	subs	w10, w10, #0x1
    4454:	cmp	w9, w10
    4458:	b.gt	4460 <BZ2_blockSort@@Base+0x2c8c>
    445c:	b	4464 <BZ2_blockSort@@Base+0x2c90>
    4460:	b	43cc <BZ2_blockSort@@Base+0x2bf8>
    4464:	ldr	w8, [sp, #8]
    4468:	ldur	x9, [x29, #-8]
    446c:	ldrsw	x10, [sp, #24]
    4470:	str	w8, [x9, x10, lsl #2]
    4474:	ldr	w8, [sp, #28]
    4478:	add	w8, w8, #0x1
    447c:	str	w8, [sp, #28]
    4480:	ldr	w8, [sp, #28]
    4484:	ldur	w11, [x29, #-36]
    4488:	cmp	w8, w11
    448c:	b.le	4494 <BZ2_blockSort@@Base+0x2cc0>
    4490:	b	457c <BZ2_blockSort@@Base+0x2da8>
    4494:	ldur	x8, [x29, #-8]
    4498:	ldrsw	x9, [sp, #28]
    449c:	ldr	w10, [x8, x9, lsl #2]
    44a0:	str	w10, [sp, #8]
    44a4:	ldr	w10, [sp, #28]
    44a8:	str	w10, [sp, #24]
    44ac:	ldur	x8, [x29, #-8]
    44b0:	ldr	w9, [sp, #24]
    44b4:	ldr	w10, [sp, #20]
    44b8:	subs	w9, w9, w10
    44bc:	ldr	w9, [x8, w9, sxtw #2]
    44c0:	ldr	w10, [sp, #40]
    44c4:	add	w0, w9, w10
    44c8:	ldr	w9, [sp, #8]
    44cc:	ldr	w10, [sp, #40]
    44d0:	add	w1, w9, w10
    44d4:	ldur	x2, [x29, #-16]
    44d8:	ldur	x3, [x29, #-24]
    44dc:	ldur	w4, [x29, #-28]
    44e0:	ldr	x5, [sp, #32]
    44e4:	bl	460c <BZ2_blockSort@@Base+0x2e38>
    44e8:	and	w9, w0, #0xff
    44ec:	cbz	w9, 4544 <BZ2_blockSort@@Base+0x2d70>
    44f0:	ldur	x8, [x29, #-8]
    44f4:	ldr	w9, [sp, #24]
    44f8:	ldr	w10, [sp, #20]
    44fc:	subs	w9, w9, w10
    4500:	ldr	w9, [x8, w9, sxtw #2]
    4504:	ldur	x8, [x29, #-8]
    4508:	ldrsw	x11, [sp, #24]
    450c:	str	w9, [x8, x11, lsl #2]
    4510:	ldr	w9, [sp, #24]
    4514:	ldr	w10, [sp, #20]
    4518:	subs	w9, w9, w10
    451c:	str	w9, [sp, #24]
    4520:	ldr	w9, [sp, #24]
    4524:	ldur	w10, [x29, #-32]
    4528:	ldr	w12, [sp, #20]
    452c:	add	w10, w10, w12
    4530:	subs	w10, w10, #0x1
    4534:	cmp	w9, w10
    4538:	b.gt	4540 <BZ2_blockSort@@Base+0x2d6c>
    453c:	b	4544 <BZ2_blockSort@@Base+0x2d70>
    4540:	b	44ac <BZ2_blockSort@@Base+0x2cd8>
    4544:	ldr	w8, [sp, #8]
    4548:	ldur	x9, [x29, #-8]
    454c:	ldrsw	x10, [sp, #24]
    4550:	str	w8, [x9, x10, lsl #2]
    4554:	ldr	w8, [sp, #28]
    4558:	add	w8, w8, #0x1
    455c:	str	w8, [sp, #28]
    4560:	ldr	x9, [sp, #32]
    4564:	ldr	w8, [x9]
    4568:	cmp	w8, #0x0
    456c:	cset	w8, ge  // ge = tcont
    4570:	tbnz	w8, #0, 4578 <BZ2_blockSort@@Base+0x2da4>
    4574:	b	458c <BZ2_blockSort@@Base+0x2db8>
    4578:	b	42c0 <BZ2_blockSort@@Base+0x2aec>
    457c:	ldr	w8, [sp, #12]
    4580:	subs	w8, w8, #0x1
    4584:	str	w8, [sp, #12]
    4588:	b	428c <BZ2_blockSort@@Base+0x2ab8>
    458c:	ldp	x29, x30, [sp, #80]
    4590:	add	sp, sp, #0x60
    4594:	ret
    4598:	sub	sp, sp, #0x10
    459c:	strb	w0, [sp, #15]
    45a0:	strb	w1, [sp, #14]
    45a4:	strb	w2, [sp, #13]
    45a8:	ldrb	w8, [sp, #15]
    45ac:	ldrb	w9, [sp, #14]
    45b0:	cmp	w8, w9
    45b4:	b.le	45d0 <BZ2_blockSort@@Base+0x2dfc>
    45b8:	ldrb	w8, [sp, #15]
    45bc:	strb	w8, [sp, #12]
    45c0:	ldrb	w8, [sp, #14]
    45c4:	strb	w8, [sp, #15]
    45c8:	ldrb	w8, [sp, #12]
    45cc:	strb	w8, [sp, #14]
    45d0:	ldrb	w8, [sp, #14]
    45d4:	ldrb	w9, [sp, #13]
    45d8:	cmp	w8, w9
    45dc:	b.le	4600 <BZ2_blockSort@@Base+0x2e2c>
    45e0:	ldrb	w8, [sp, #13]
    45e4:	strb	w8, [sp, #14]
    45e8:	ldrb	w8, [sp, #15]
    45ec:	ldrb	w9, [sp, #14]
    45f0:	cmp	w8, w9
    45f4:	b.le	4600 <BZ2_blockSort@@Base+0x2e2c>
    45f8:	ldrb	w8, [sp, #15]
    45fc:	strb	w8, [sp, #14]
    4600:	ldrb	w0, [sp, #14]
    4604:	add	sp, sp, #0x10
    4608:	ret
    460c:	sub	sp, sp, #0x40
    4610:	str	w0, [sp, #56]
    4614:	str	w1, [sp, #52]
    4618:	str	x2, [sp, #40]
    461c:	str	x3, [sp, #32]
    4620:	str	w4, [sp, #28]
    4624:	str	x5, [sp, #16]
    4628:	ldr	x8, [sp, #40]
    462c:	ldr	w9, [sp, #56]
    4630:	mov	w10, w9
    4634:	add	x8, x8, x10
    4638:	ldrb	w9, [x8]
    463c:	strb	w9, [sp, #11]
    4640:	ldr	x8, [sp, #40]
    4644:	ldr	w9, [sp, #52]
    4648:	mov	w10, w9
    464c:	add	x8, x8, x10
    4650:	ldrb	w9, [x8]
    4654:	strb	w9, [sp, #10]
    4658:	ldrb	w9, [sp, #11]
    465c:	ldrb	w11, [sp, #10]
    4660:	cmp	w9, w11
    4664:	b.eq	4684 <BZ2_blockSort@@Base+0x2eb0>  // b.none
    4668:	ldrb	w8, [sp, #11]
    466c:	ldrb	w9, [sp, #10]
    4670:	cmp	w8, w9
    4674:	cset	w8, gt
    4678:	and	w8, w8, #0x1
    467c:	strb	w8, [sp, #63]
    4680:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4684:	ldr	w8, [sp, #56]
    4688:	add	w8, w8, #0x1
    468c:	str	w8, [sp, #56]
    4690:	ldr	w8, [sp, #52]
    4694:	add	w8, w8, #0x1
    4698:	str	w8, [sp, #52]
    469c:	ldr	x9, [sp, #40]
    46a0:	ldr	w8, [sp, #56]
    46a4:	mov	w10, w8
    46a8:	add	x9, x9, x10
    46ac:	ldrb	w8, [x9]
    46b0:	strb	w8, [sp, #11]
    46b4:	ldr	x9, [sp, #40]
    46b8:	ldr	w8, [sp, #52]
    46bc:	mov	w10, w8
    46c0:	add	x9, x9, x10
    46c4:	ldrb	w8, [x9]
    46c8:	strb	w8, [sp, #10]
    46cc:	ldrb	w8, [sp, #11]
    46d0:	ldrb	w11, [sp, #10]
    46d4:	cmp	w8, w11
    46d8:	b.eq	46f8 <BZ2_blockSort@@Base+0x2f24>  // b.none
    46dc:	ldrb	w8, [sp, #11]
    46e0:	ldrb	w9, [sp, #10]
    46e4:	cmp	w8, w9
    46e8:	cset	w8, gt
    46ec:	and	w8, w8, #0x1
    46f0:	strb	w8, [sp, #63]
    46f4:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    46f8:	ldr	w8, [sp, #56]
    46fc:	add	w8, w8, #0x1
    4700:	str	w8, [sp, #56]
    4704:	ldr	w8, [sp, #52]
    4708:	add	w8, w8, #0x1
    470c:	str	w8, [sp, #52]
    4710:	ldr	x9, [sp, #40]
    4714:	ldr	w8, [sp, #56]
    4718:	mov	w10, w8
    471c:	add	x9, x9, x10
    4720:	ldrb	w8, [x9]
    4724:	strb	w8, [sp, #11]
    4728:	ldr	x9, [sp, #40]
    472c:	ldr	w8, [sp, #52]
    4730:	mov	w10, w8
    4734:	add	x9, x9, x10
    4738:	ldrb	w8, [x9]
    473c:	strb	w8, [sp, #10]
    4740:	ldrb	w8, [sp, #11]
    4744:	ldrb	w11, [sp, #10]
    4748:	cmp	w8, w11
    474c:	b.eq	476c <BZ2_blockSort@@Base+0x2f98>  // b.none
    4750:	ldrb	w8, [sp, #11]
    4754:	ldrb	w9, [sp, #10]
    4758:	cmp	w8, w9
    475c:	cset	w8, gt
    4760:	and	w8, w8, #0x1
    4764:	strb	w8, [sp, #63]
    4768:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    476c:	ldr	w8, [sp, #56]
    4770:	add	w8, w8, #0x1
    4774:	str	w8, [sp, #56]
    4778:	ldr	w8, [sp, #52]
    477c:	add	w8, w8, #0x1
    4780:	str	w8, [sp, #52]
    4784:	ldr	x9, [sp, #40]
    4788:	ldr	w8, [sp, #56]
    478c:	mov	w10, w8
    4790:	add	x9, x9, x10
    4794:	ldrb	w8, [x9]
    4798:	strb	w8, [sp, #11]
    479c:	ldr	x9, [sp, #40]
    47a0:	ldr	w8, [sp, #52]
    47a4:	mov	w10, w8
    47a8:	add	x9, x9, x10
    47ac:	ldrb	w8, [x9]
    47b0:	strb	w8, [sp, #10]
    47b4:	ldrb	w8, [sp, #11]
    47b8:	ldrb	w11, [sp, #10]
    47bc:	cmp	w8, w11
    47c0:	b.eq	47e0 <BZ2_blockSort@@Base+0x300c>  // b.none
    47c4:	ldrb	w8, [sp, #11]
    47c8:	ldrb	w9, [sp, #10]
    47cc:	cmp	w8, w9
    47d0:	cset	w8, gt
    47d4:	and	w8, w8, #0x1
    47d8:	strb	w8, [sp, #63]
    47dc:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    47e0:	ldr	w8, [sp, #56]
    47e4:	add	w8, w8, #0x1
    47e8:	str	w8, [sp, #56]
    47ec:	ldr	w8, [sp, #52]
    47f0:	add	w8, w8, #0x1
    47f4:	str	w8, [sp, #52]
    47f8:	ldr	x9, [sp, #40]
    47fc:	ldr	w8, [sp, #56]
    4800:	mov	w10, w8
    4804:	add	x9, x9, x10
    4808:	ldrb	w8, [x9]
    480c:	strb	w8, [sp, #11]
    4810:	ldr	x9, [sp, #40]
    4814:	ldr	w8, [sp, #52]
    4818:	mov	w10, w8
    481c:	add	x9, x9, x10
    4820:	ldrb	w8, [x9]
    4824:	strb	w8, [sp, #10]
    4828:	ldrb	w8, [sp, #11]
    482c:	ldrb	w11, [sp, #10]
    4830:	cmp	w8, w11
    4834:	b.eq	4854 <BZ2_blockSort@@Base+0x3080>  // b.none
    4838:	ldrb	w8, [sp, #11]
    483c:	ldrb	w9, [sp, #10]
    4840:	cmp	w8, w9
    4844:	cset	w8, gt
    4848:	and	w8, w8, #0x1
    484c:	strb	w8, [sp, #63]
    4850:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4854:	ldr	w8, [sp, #56]
    4858:	add	w8, w8, #0x1
    485c:	str	w8, [sp, #56]
    4860:	ldr	w8, [sp, #52]
    4864:	add	w8, w8, #0x1
    4868:	str	w8, [sp, #52]
    486c:	ldr	x9, [sp, #40]
    4870:	ldr	w8, [sp, #56]
    4874:	mov	w10, w8
    4878:	add	x9, x9, x10
    487c:	ldrb	w8, [x9]
    4880:	strb	w8, [sp, #11]
    4884:	ldr	x9, [sp, #40]
    4888:	ldr	w8, [sp, #52]
    488c:	mov	w10, w8
    4890:	add	x9, x9, x10
    4894:	ldrb	w8, [x9]
    4898:	strb	w8, [sp, #10]
    489c:	ldrb	w8, [sp, #11]
    48a0:	ldrb	w11, [sp, #10]
    48a4:	cmp	w8, w11
    48a8:	b.eq	48c8 <BZ2_blockSort@@Base+0x30f4>  // b.none
    48ac:	ldrb	w8, [sp, #11]
    48b0:	ldrb	w9, [sp, #10]
    48b4:	cmp	w8, w9
    48b8:	cset	w8, gt
    48bc:	and	w8, w8, #0x1
    48c0:	strb	w8, [sp, #63]
    48c4:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    48c8:	ldr	w8, [sp, #56]
    48cc:	add	w8, w8, #0x1
    48d0:	str	w8, [sp, #56]
    48d4:	ldr	w8, [sp, #52]
    48d8:	add	w8, w8, #0x1
    48dc:	str	w8, [sp, #52]
    48e0:	ldr	x9, [sp, #40]
    48e4:	ldr	w8, [sp, #56]
    48e8:	mov	w10, w8
    48ec:	add	x9, x9, x10
    48f0:	ldrb	w8, [x9]
    48f4:	strb	w8, [sp, #11]
    48f8:	ldr	x9, [sp, #40]
    48fc:	ldr	w8, [sp, #52]
    4900:	mov	w10, w8
    4904:	add	x9, x9, x10
    4908:	ldrb	w8, [x9]
    490c:	strb	w8, [sp, #10]
    4910:	ldrb	w8, [sp, #11]
    4914:	ldrb	w11, [sp, #10]
    4918:	cmp	w8, w11
    491c:	b.eq	493c <BZ2_blockSort@@Base+0x3168>  // b.none
    4920:	ldrb	w8, [sp, #11]
    4924:	ldrb	w9, [sp, #10]
    4928:	cmp	w8, w9
    492c:	cset	w8, gt
    4930:	and	w8, w8, #0x1
    4934:	strb	w8, [sp, #63]
    4938:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    493c:	ldr	w8, [sp, #56]
    4940:	add	w8, w8, #0x1
    4944:	str	w8, [sp, #56]
    4948:	ldr	w8, [sp, #52]
    494c:	add	w8, w8, #0x1
    4950:	str	w8, [sp, #52]
    4954:	ldr	x9, [sp, #40]
    4958:	ldr	w8, [sp, #56]
    495c:	mov	w10, w8
    4960:	add	x9, x9, x10
    4964:	ldrb	w8, [x9]
    4968:	strb	w8, [sp, #11]
    496c:	ldr	x9, [sp, #40]
    4970:	ldr	w8, [sp, #52]
    4974:	mov	w10, w8
    4978:	add	x9, x9, x10
    497c:	ldrb	w8, [x9]
    4980:	strb	w8, [sp, #10]
    4984:	ldrb	w8, [sp, #11]
    4988:	ldrb	w11, [sp, #10]
    498c:	cmp	w8, w11
    4990:	b.eq	49b0 <BZ2_blockSort@@Base+0x31dc>  // b.none
    4994:	ldrb	w8, [sp, #11]
    4998:	ldrb	w9, [sp, #10]
    499c:	cmp	w8, w9
    49a0:	cset	w8, gt
    49a4:	and	w8, w8, #0x1
    49a8:	strb	w8, [sp, #63]
    49ac:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    49b0:	ldr	w8, [sp, #56]
    49b4:	add	w8, w8, #0x1
    49b8:	str	w8, [sp, #56]
    49bc:	ldr	w8, [sp, #52]
    49c0:	add	w8, w8, #0x1
    49c4:	str	w8, [sp, #52]
    49c8:	ldr	x9, [sp, #40]
    49cc:	ldr	w8, [sp, #56]
    49d0:	mov	w10, w8
    49d4:	add	x9, x9, x10
    49d8:	ldrb	w8, [x9]
    49dc:	strb	w8, [sp, #11]
    49e0:	ldr	x9, [sp, #40]
    49e4:	ldr	w8, [sp, #52]
    49e8:	mov	w10, w8
    49ec:	add	x9, x9, x10
    49f0:	ldrb	w8, [x9]
    49f4:	strb	w8, [sp, #10]
    49f8:	ldrb	w8, [sp, #11]
    49fc:	ldrb	w11, [sp, #10]
    4a00:	cmp	w8, w11
    4a04:	b.eq	4a24 <BZ2_blockSort@@Base+0x3250>  // b.none
    4a08:	ldrb	w8, [sp, #11]
    4a0c:	ldrb	w9, [sp, #10]
    4a10:	cmp	w8, w9
    4a14:	cset	w8, gt
    4a18:	and	w8, w8, #0x1
    4a1c:	strb	w8, [sp, #63]
    4a20:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4a24:	ldr	w8, [sp, #56]
    4a28:	add	w8, w8, #0x1
    4a2c:	str	w8, [sp, #56]
    4a30:	ldr	w8, [sp, #52]
    4a34:	add	w8, w8, #0x1
    4a38:	str	w8, [sp, #52]
    4a3c:	ldr	x9, [sp, #40]
    4a40:	ldr	w8, [sp, #56]
    4a44:	mov	w10, w8
    4a48:	add	x9, x9, x10
    4a4c:	ldrb	w8, [x9]
    4a50:	strb	w8, [sp, #11]
    4a54:	ldr	x9, [sp, #40]
    4a58:	ldr	w8, [sp, #52]
    4a5c:	mov	w10, w8
    4a60:	add	x9, x9, x10
    4a64:	ldrb	w8, [x9]
    4a68:	strb	w8, [sp, #10]
    4a6c:	ldrb	w8, [sp, #11]
    4a70:	ldrb	w11, [sp, #10]
    4a74:	cmp	w8, w11
    4a78:	b.eq	4a98 <BZ2_blockSort@@Base+0x32c4>  // b.none
    4a7c:	ldrb	w8, [sp, #11]
    4a80:	ldrb	w9, [sp, #10]
    4a84:	cmp	w8, w9
    4a88:	cset	w8, gt
    4a8c:	and	w8, w8, #0x1
    4a90:	strb	w8, [sp, #63]
    4a94:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4a98:	ldr	w8, [sp, #56]
    4a9c:	add	w8, w8, #0x1
    4aa0:	str	w8, [sp, #56]
    4aa4:	ldr	w8, [sp, #52]
    4aa8:	add	w8, w8, #0x1
    4aac:	str	w8, [sp, #52]
    4ab0:	ldr	x9, [sp, #40]
    4ab4:	ldr	w8, [sp, #56]
    4ab8:	mov	w10, w8
    4abc:	add	x9, x9, x10
    4ac0:	ldrb	w8, [x9]
    4ac4:	strb	w8, [sp, #11]
    4ac8:	ldr	x9, [sp, #40]
    4acc:	ldr	w8, [sp, #52]
    4ad0:	mov	w10, w8
    4ad4:	add	x9, x9, x10
    4ad8:	ldrb	w8, [x9]
    4adc:	strb	w8, [sp, #10]
    4ae0:	ldrb	w8, [sp, #11]
    4ae4:	ldrb	w11, [sp, #10]
    4ae8:	cmp	w8, w11
    4aec:	b.eq	4b0c <BZ2_blockSort@@Base+0x3338>  // b.none
    4af0:	ldrb	w8, [sp, #11]
    4af4:	ldrb	w9, [sp, #10]
    4af8:	cmp	w8, w9
    4afc:	cset	w8, gt
    4b00:	and	w8, w8, #0x1
    4b04:	strb	w8, [sp, #63]
    4b08:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4b0c:	ldr	w8, [sp, #56]
    4b10:	add	w8, w8, #0x1
    4b14:	str	w8, [sp, #56]
    4b18:	ldr	w8, [sp, #52]
    4b1c:	add	w8, w8, #0x1
    4b20:	str	w8, [sp, #52]
    4b24:	ldr	x9, [sp, #40]
    4b28:	ldr	w8, [sp, #56]
    4b2c:	mov	w10, w8
    4b30:	add	x9, x9, x10
    4b34:	ldrb	w8, [x9]
    4b38:	strb	w8, [sp, #11]
    4b3c:	ldr	x9, [sp, #40]
    4b40:	ldr	w8, [sp, #52]
    4b44:	mov	w10, w8
    4b48:	add	x9, x9, x10
    4b4c:	ldrb	w8, [x9]
    4b50:	strb	w8, [sp, #10]
    4b54:	ldrb	w8, [sp, #11]
    4b58:	ldrb	w11, [sp, #10]
    4b5c:	cmp	w8, w11
    4b60:	b.eq	4b80 <BZ2_blockSort@@Base+0x33ac>  // b.none
    4b64:	ldrb	w8, [sp, #11]
    4b68:	ldrb	w9, [sp, #10]
    4b6c:	cmp	w8, w9
    4b70:	cset	w8, gt
    4b74:	and	w8, w8, #0x1
    4b78:	strb	w8, [sp, #63]
    4b7c:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4b80:	ldr	w8, [sp, #56]
    4b84:	add	w8, w8, #0x1
    4b88:	str	w8, [sp, #56]
    4b8c:	ldr	w8, [sp, #52]
    4b90:	add	w8, w8, #0x1
    4b94:	str	w8, [sp, #52]
    4b98:	ldr	w8, [sp, #28]
    4b9c:	add	w8, w8, #0x8
    4ba0:	str	w8, [sp, #12]
    4ba4:	ldr	x8, [sp, #40]
    4ba8:	ldr	w9, [sp, #56]
    4bac:	mov	w10, w9
    4bb0:	add	x8, x8, x10
    4bb4:	ldrb	w9, [x8]
    4bb8:	strb	w9, [sp, #11]
    4bbc:	ldr	x8, [sp, #40]
    4bc0:	ldr	w9, [sp, #52]
    4bc4:	mov	w10, w9
    4bc8:	add	x8, x8, x10
    4bcc:	ldrb	w9, [x8]
    4bd0:	strb	w9, [sp, #10]
    4bd4:	ldrb	w9, [sp, #11]
    4bd8:	ldrb	w11, [sp, #10]
    4bdc:	cmp	w9, w11
    4be0:	b.eq	4c00 <BZ2_blockSort@@Base+0x342c>  // b.none
    4be4:	ldrb	w8, [sp, #11]
    4be8:	ldrb	w9, [sp, #10]
    4bec:	cmp	w8, w9
    4bf0:	cset	w8, gt
    4bf4:	and	w8, w8, #0x1
    4bf8:	strb	w8, [sp, #63]
    4bfc:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4c00:	ldr	x8, [sp, #32]
    4c04:	ldr	w9, [sp, #56]
    4c08:	mov	w10, w9
    4c0c:	mov	x11, #0x2                   	// #2
    4c10:	mul	x10, x11, x10
    4c14:	add	x8, x8, x10
    4c18:	ldrh	w9, [x8]
    4c1c:	strh	w9, [sp, #8]
    4c20:	ldr	x8, [sp, #32]
    4c24:	ldr	w9, [sp, #52]
    4c28:	mov	w10, w9
    4c2c:	mul	x10, x11, x10
    4c30:	add	x8, x8, x10
    4c34:	ldrh	w9, [x8]
    4c38:	strh	w9, [sp, #6]
    4c3c:	ldrh	w9, [sp, #8]
    4c40:	ldrh	w12, [sp, #6]
    4c44:	cmp	w9, w12
    4c48:	b.eq	4c68 <BZ2_blockSort@@Base+0x3494>  // b.none
    4c4c:	ldrh	w8, [sp, #8]
    4c50:	ldrh	w9, [sp, #6]
    4c54:	cmp	w8, w9
    4c58:	cset	w8, gt
    4c5c:	and	w8, w8, #0x1
    4c60:	strb	w8, [sp, #63]
    4c64:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4c68:	ldr	w8, [sp, #56]
    4c6c:	add	w8, w8, #0x1
    4c70:	str	w8, [sp, #56]
    4c74:	ldr	w8, [sp, #52]
    4c78:	add	w8, w8, #0x1
    4c7c:	str	w8, [sp, #52]
    4c80:	ldr	x9, [sp, #40]
    4c84:	ldr	w8, [sp, #56]
    4c88:	mov	w10, w8
    4c8c:	add	x9, x9, x10
    4c90:	ldrb	w8, [x9]
    4c94:	strb	w8, [sp, #11]
    4c98:	ldr	x9, [sp, #40]
    4c9c:	ldr	w8, [sp, #52]
    4ca0:	mov	w10, w8
    4ca4:	add	x9, x9, x10
    4ca8:	ldrb	w8, [x9]
    4cac:	strb	w8, [sp, #10]
    4cb0:	ldrb	w8, [sp, #11]
    4cb4:	ldrb	w11, [sp, #10]
    4cb8:	cmp	w8, w11
    4cbc:	b.eq	4cdc <BZ2_blockSort@@Base+0x3508>  // b.none
    4cc0:	ldrb	w8, [sp, #11]
    4cc4:	ldrb	w9, [sp, #10]
    4cc8:	cmp	w8, w9
    4ccc:	cset	w8, gt
    4cd0:	and	w8, w8, #0x1
    4cd4:	strb	w8, [sp, #63]
    4cd8:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4cdc:	ldr	x8, [sp, #32]
    4ce0:	ldr	w9, [sp, #56]
    4ce4:	mov	w10, w9
    4ce8:	mov	x11, #0x2                   	// #2
    4cec:	mul	x10, x11, x10
    4cf0:	add	x8, x8, x10
    4cf4:	ldrh	w9, [x8]
    4cf8:	strh	w9, [sp, #8]
    4cfc:	ldr	x8, [sp, #32]
    4d00:	ldr	w9, [sp, #52]
    4d04:	mov	w10, w9
    4d08:	mul	x10, x11, x10
    4d0c:	add	x8, x8, x10
    4d10:	ldrh	w9, [x8]
    4d14:	strh	w9, [sp, #6]
    4d18:	ldrh	w9, [sp, #8]
    4d1c:	ldrh	w12, [sp, #6]
    4d20:	cmp	w9, w12
    4d24:	b.eq	4d44 <BZ2_blockSort@@Base+0x3570>  // b.none
    4d28:	ldrh	w8, [sp, #8]
    4d2c:	ldrh	w9, [sp, #6]
    4d30:	cmp	w8, w9
    4d34:	cset	w8, gt
    4d38:	and	w8, w8, #0x1
    4d3c:	strb	w8, [sp, #63]
    4d40:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4d44:	ldr	w8, [sp, #56]
    4d48:	add	w8, w8, #0x1
    4d4c:	str	w8, [sp, #56]
    4d50:	ldr	w8, [sp, #52]
    4d54:	add	w8, w8, #0x1
    4d58:	str	w8, [sp, #52]
    4d5c:	ldr	x9, [sp, #40]
    4d60:	ldr	w8, [sp, #56]
    4d64:	mov	w10, w8
    4d68:	add	x9, x9, x10
    4d6c:	ldrb	w8, [x9]
    4d70:	strb	w8, [sp, #11]
    4d74:	ldr	x9, [sp, #40]
    4d78:	ldr	w8, [sp, #52]
    4d7c:	mov	w10, w8
    4d80:	add	x9, x9, x10
    4d84:	ldrb	w8, [x9]
    4d88:	strb	w8, [sp, #10]
    4d8c:	ldrb	w8, [sp, #11]
    4d90:	ldrb	w11, [sp, #10]
    4d94:	cmp	w8, w11
    4d98:	b.eq	4db8 <BZ2_blockSort@@Base+0x35e4>  // b.none
    4d9c:	ldrb	w8, [sp, #11]
    4da0:	ldrb	w9, [sp, #10]
    4da4:	cmp	w8, w9
    4da8:	cset	w8, gt
    4dac:	and	w8, w8, #0x1
    4db0:	strb	w8, [sp, #63]
    4db4:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4db8:	ldr	x8, [sp, #32]
    4dbc:	ldr	w9, [sp, #56]
    4dc0:	mov	w10, w9
    4dc4:	mov	x11, #0x2                   	// #2
    4dc8:	mul	x10, x11, x10
    4dcc:	add	x8, x8, x10
    4dd0:	ldrh	w9, [x8]
    4dd4:	strh	w9, [sp, #8]
    4dd8:	ldr	x8, [sp, #32]
    4ddc:	ldr	w9, [sp, #52]
    4de0:	mov	w10, w9
    4de4:	mul	x10, x11, x10
    4de8:	add	x8, x8, x10
    4dec:	ldrh	w9, [x8]
    4df0:	strh	w9, [sp, #6]
    4df4:	ldrh	w9, [sp, #8]
    4df8:	ldrh	w12, [sp, #6]
    4dfc:	cmp	w9, w12
    4e00:	b.eq	4e20 <BZ2_blockSort@@Base+0x364c>  // b.none
    4e04:	ldrh	w8, [sp, #8]
    4e08:	ldrh	w9, [sp, #6]
    4e0c:	cmp	w8, w9
    4e10:	cset	w8, gt
    4e14:	and	w8, w8, #0x1
    4e18:	strb	w8, [sp, #63]
    4e1c:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4e20:	ldr	w8, [sp, #56]
    4e24:	add	w8, w8, #0x1
    4e28:	str	w8, [sp, #56]
    4e2c:	ldr	w8, [sp, #52]
    4e30:	add	w8, w8, #0x1
    4e34:	str	w8, [sp, #52]
    4e38:	ldr	x9, [sp, #40]
    4e3c:	ldr	w8, [sp, #56]
    4e40:	mov	w10, w8
    4e44:	add	x9, x9, x10
    4e48:	ldrb	w8, [x9]
    4e4c:	strb	w8, [sp, #11]
    4e50:	ldr	x9, [sp, #40]
    4e54:	ldr	w8, [sp, #52]
    4e58:	mov	w10, w8
    4e5c:	add	x9, x9, x10
    4e60:	ldrb	w8, [x9]
    4e64:	strb	w8, [sp, #10]
    4e68:	ldrb	w8, [sp, #11]
    4e6c:	ldrb	w11, [sp, #10]
    4e70:	cmp	w8, w11
    4e74:	b.eq	4e94 <BZ2_blockSort@@Base+0x36c0>  // b.none
    4e78:	ldrb	w8, [sp, #11]
    4e7c:	ldrb	w9, [sp, #10]
    4e80:	cmp	w8, w9
    4e84:	cset	w8, gt
    4e88:	and	w8, w8, #0x1
    4e8c:	strb	w8, [sp, #63]
    4e90:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4e94:	ldr	x8, [sp, #32]
    4e98:	ldr	w9, [sp, #56]
    4e9c:	mov	w10, w9
    4ea0:	mov	x11, #0x2                   	// #2
    4ea4:	mul	x10, x11, x10
    4ea8:	add	x8, x8, x10
    4eac:	ldrh	w9, [x8]
    4eb0:	strh	w9, [sp, #8]
    4eb4:	ldr	x8, [sp, #32]
    4eb8:	ldr	w9, [sp, #52]
    4ebc:	mov	w10, w9
    4ec0:	mul	x10, x11, x10
    4ec4:	add	x8, x8, x10
    4ec8:	ldrh	w9, [x8]
    4ecc:	strh	w9, [sp, #6]
    4ed0:	ldrh	w9, [sp, #8]
    4ed4:	ldrh	w12, [sp, #6]
    4ed8:	cmp	w9, w12
    4edc:	b.eq	4efc <BZ2_blockSort@@Base+0x3728>  // b.none
    4ee0:	ldrh	w8, [sp, #8]
    4ee4:	ldrh	w9, [sp, #6]
    4ee8:	cmp	w8, w9
    4eec:	cset	w8, gt
    4ef0:	and	w8, w8, #0x1
    4ef4:	strb	w8, [sp, #63]
    4ef8:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4efc:	ldr	w8, [sp, #56]
    4f00:	add	w8, w8, #0x1
    4f04:	str	w8, [sp, #56]
    4f08:	ldr	w8, [sp, #52]
    4f0c:	add	w8, w8, #0x1
    4f10:	str	w8, [sp, #52]
    4f14:	ldr	x9, [sp, #40]
    4f18:	ldr	w8, [sp, #56]
    4f1c:	mov	w10, w8
    4f20:	add	x9, x9, x10
    4f24:	ldrb	w8, [x9]
    4f28:	strb	w8, [sp, #11]
    4f2c:	ldr	x9, [sp, #40]
    4f30:	ldr	w8, [sp, #52]
    4f34:	mov	w10, w8
    4f38:	add	x9, x9, x10
    4f3c:	ldrb	w8, [x9]
    4f40:	strb	w8, [sp, #10]
    4f44:	ldrb	w8, [sp, #11]
    4f48:	ldrb	w11, [sp, #10]
    4f4c:	cmp	w8, w11
    4f50:	b.eq	4f70 <BZ2_blockSort@@Base+0x379c>  // b.none
    4f54:	ldrb	w8, [sp, #11]
    4f58:	ldrb	w9, [sp, #10]
    4f5c:	cmp	w8, w9
    4f60:	cset	w8, gt
    4f64:	and	w8, w8, #0x1
    4f68:	strb	w8, [sp, #63]
    4f6c:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4f70:	ldr	x8, [sp, #32]
    4f74:	ldr	w9, [sp, #56]
    4f78:	mov	w10, w9
    4f7c:	mov	x11, #0x2                   	// #2
    4f80:	mul	x10, x11, x10
    4f84:	add	x8, x8, x10
    4f88:	ldrh	w9, [x8]
    4f8c:	strh	w9, [sp, #8]
    4f90:	ldr	x8, [sp, #32]
    4f94:	ldr	w9, [sp, #52]
    4f98:	mov	w10, w9
    4f9c:	mul	x10, x11, x10
    4fa0:	add	x8, x8, x10
    4fa4:	ldrh	w9, [x8]
    4fa8:	strh	w9, [sp, #6]
    4fac:	ldrh	w9, [sp, #8]
    4fb0:	ldrh	w12, [sp, #6]
    4fb4:	cmp	w9, w12
    4fb8:	b.eq	4fd8 <BZ2_blockSort@@Base+0x3804>  // b.none
    4fbc:	ldrh	w8, [sp, #8]
    4fc0:	ldrh	w9, [sp, #6]
    4fc4:	cmp	w8, w9
    4fc8:	cset	w8, gt
    4fcc:	and	w8, w8, #0x1
    4fd0:	strb	w8, [sp, #63]
    4fd4:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    4fd8:	ldr	w8, [sp, #56]
    4fdc:	add	w8, w8, #0x1
    4fe0:	str	w8, [sp, #56]
    4fe4:	ldr	w8, [sp, #52]
    4fe8:	add	w8, w8, #0x1
    4fec:	str	w8, [sp, #52]
    4ff0:	ldr	x9, [sp, #40]
    4ff4:	ldr	w8, [sp, #56]
    4ff8:	mov	w10, w8
    4ffc:	add	x9, x9, x10
    5000:	ldrb	w8, [x9]
    5004:	strb	w8, [sp, #11]
    5008:	ldr	x9, [sp, #40]
    500c:	ldr	w8, [sp, #52]
    5010:	mov	w10, w8
    5014:	add	x9, x9, x10
    5018:	ldrb	w8, [x9]
    501c:	strb	w8, [sp, #10]
    5020:	ldrb	w8, [sp, #11]
    5024:	ldrb	w11, [sp, #10]
    5028:	cmp	w8, w11
    502c:	b.eq	504c <BZ2_blockSort@@Base+0x3878>  // b.none
    5030:	ldrb	w8, [sp, #11]
    5034:	ldrb	w9, [sp, #10]
    5038:	cmp	w8, w9
    503c:	cset	w8, gt
    5040:	and	w8, w8, #0x1
    5044:	strb	w8, [sp, #63]
    5048:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    504c:	ldr	x8, [sp, #32]
    5050:	ldr	w9, [sp, #56]
    5054:	mov	w10, w9
    5058:	mov	x11, #0x2                   	// #2
    505c:	mul	x10, x11, x10
    5060:	add	x8, x8, x10
    5064:	ldrh	w9, [x8]
    5068:	strh	w9, [sp, #8]
    506c:	ldr	x8, [sp, #32]
    5070:	ldr	w9, [sp, #52]
    5074:	mov	w10, w9
    5078:	mul	x10, x11, x10
    507c:	add	x8, x8, x10
    5080:	ldrh	w9, [x8]
    5084:	strh	w9, [sp, #6]
    5088:	ldrh	w9, [sp, #8]
    508c:	ldrh	w12, [sp, #6]
    5090:	cmp	w9, w12
    5094:	b.eq	50b4 <BZ2_blockSort@@Base+0x38e0>  // b.none
    5098:	ldrh	w8, [sp, #8]
    509c:	ldrh	w9, [sp, #6]
    50a0:	cmp	w8, w9
    50a4:	cset	w8, gt
    50a8:	and	w8, w8, #0x1
    50ac:	strb	w8, [sp, #63]
    50b0:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    50b4:	ldr	w8, [sp, #56]
    50b8:	add	w8, w8, #0x1
    50bc:	str	w8, [sp, #56]
    50c0:	ldr	w8, [sp, #52]
    50c4:	add	w8, w8, #0x1
    50c8:	str	w8, [sp, #52]
    50cc:	ldr	x9, [sp, #40]
    50d0:	ldr	w8, [sp, #56]
    50d4:	mov	w10, w8
    50d8:	add	x9, x9, x10
    50dc:	ldrb	w8, [x9]
    50e0:	strb	w8, [sp, #11]
    50e4:	ldr	x9, [sp, #40]
    50e8:	ldr	w8, [sp, #52]
    50ec:	mov	w10, w8
    50f0:	add	x9, x9, x10
    50f4:	ldrb	w8, [x9]
    50f8:	strb	w8, [sp, #10]
    50fc:	ldrb	w8, [sp, #11]
    5100:	ldrb	w11, [sp, #10]
    5104:	cmp	w8, w11
    5108:	b.eq	5128 <BZ2_blockSort@@Base+0x3954>  // b.none
    510c:	ldrb	w8, [sp, #11]
    5110:	ldrb	w9, [sp, #10]
    5114:	cmp	w8, w9
    5118:	cset	w8, gt
    511c:	and	w8, w8, #0x1
    5120:	strb	w8, [sp, #63]
    5124:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    5128:	ldr	x8, [sp, #32]
    512c:	ldr	w9, [sp, #56]
    5130:	mov	w10, w9
    5134:	mov	x11, #0x2                   	// #2
    5138:	mul	x10, x11, x10
    513c:	add	x8, x8, x10
    5140:	ldrh	w9, [x8]
    5144:	strh	w9, [sp, #8]
    5148:	ldr	x8, [sp, #32]
    514c:	ldr	w9, [sp, #52]
    5150:	mov	w10, w9
    5154:	mul	x10, x11, x10
    5158:	add	x8, x8, x10
    515c:	ldrh	w9, [x8]
    5160:	strh	w9, [sp, #6]
    5164:	ldrh	w9, [sp, #8]
    5168:	ldrh	w12, [sp, #6]
    516c:	cmp	w9, w12
    5170:	b.eq	5190 <BZ2_blockSort@@Base+0x39bc>  // b.none
    5174:	ldrh	w8, [sp, #8]
    5178:	ldrh	w9, [sp, #6]
    517c:	cmp	w8, w9
    5180:	cset	w8, gt
    5184:	and	w8, w8, #0x1
    5188:	strb	w8, [sp, #63]
    518c:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    5190:	ldr	w8, [sp, #56]
    5194:	add	w8, w8, #0x1
    5198:	str	w8, [sp, #56]
    519c:	ldr	w8, [sp, #52]
    51a0:	add	w8, w8, #0x1
    51a4:	str	w8, [sp, #52]
    51a8:	ldr	x9, [sp, #40]
    51ac:	ldr	w8, [sp, #56]
    51b0:	mov	w10, w8
    51b4:	add	x9, x9, x10
    51b8:	ldrb	w8, [x9]
    51bc:	strb	w8, [sp, #11]
    51c0:	ldr	x9, [sp, #40]
    51c4:	ldr	w8, [sp, #52]
    51c8:	mov	w10, w8
    51cc:	add	x9, x9, x10
    51d0:	ldrb	w8, [x9]
    51d4:	strb	w8, [sp, #10]
    51d8:	ldrb	w8, [sp, #11]
    51dc:	ldrb	w11, [sp, #10]
    51e0:	cmp	w8, w11
    51e4:	b.eq	5204 <BZ2_blockSort@@Base+0x3a30>  // b.none
    51e8:	ldrb	w8, [sp, #11]
    51ec:	ldrb	w9, [sp, #10]
    51f0:	cmp	w8, w9
    51f4:	cset	w8, gt
    51f8:	and	w8, w8, #0x1
    51fc:	strb	w8, [sp, #63]
    5200:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    5204:	ldr	x8, [sp, #32]
    5208:	ldr	w9, [sp, #56]
    520c:	mov	w10, w9
    5210:	mov	x11, #0x2                   	// #2
    5214:	mul	x10, x11, x10
    5218:	add	x8, x8, x10
    521c:	ldrh	w9, [x8]
    5220:	strh	w9, [sp, #8]
    5224:	ldr	x8, [sp, #32]
    5228:	ldr	w9, [sp, #52]
    522c:	mov	w10, w9
    5230:	mul	x10, x11, x10
    5234:	add	x8, x8, x10
    5238:	ldrh	w9, [x8]
    523c:	strh	w9, [sp, #6]
    5240:	ldrh	w9, [sp, #8]
    5244:	ldrh	w12, [sp, #6]
    5248:	cmp	w9, w12
    524c:	b.eq	526c <BZ2_blockSort@@Base+0x3a98>  // b.none
    5250:	ldrh	w8, [sp, #8]
    5254:	ldrh	w9, [sp, #6]
    5258:	cmp	w8, w9
    525c:	cset	w8, gt
    5260:	and	w8, w8, #0x1
    5264:	strb	w8, [sp, #63]
    5268:	b	52f8 <BZ2_blockSort@@Base+0x3b24>
    526c:	ldr	w8, [sp, #56]
    5270:	add	w8, w8, #0x1
    5274:	str	w8, [sp, #56]
    5278:	ldr	w8, [sp, #52]
    527c:	add	w8, w8, #0x1
    5280:	str	w8, [sp, #52]
    5284:	ldr	w8, [sp, #56]
    5288:	ldr	w9, [sp, #28]
    528c:	cmp	w8, w9
    5290:	b.cc	52a4 <BZ2_blockSort@@Base+0x3ad0>  // b.lo, b.ul, b.last
    5294:	ldr	w8, [sp, #28]
    5298:	ldr	w9, [sp, #56]
    529c:	subs	w8, w9, w8
    52a0:	str	w8, [sp, #56]
    52a4:	ldr	w8, [sp, #52]
    52a8:	ldr	w9, [sp, #28]
    52ac:	cmp	w8, w9
    52b0:	b.cc	52c4 <BZ2_blockSort@@Base+0x3af0>  // b.lo, b.ul, b.last
    52b4:	ldr	w8, [sp, #28]
    52b8:	ldr	w9, [sp, #52]
    52bc:	subs	w8, w9, w8
    52c0:	str	w8, [sp, #52]
    52c4:	ldr	w8, [sp, #12]
    52c8:	subs	w8, w8, #0x8
    52cc:	str	w8, [sp, #12]
    52d0:	ldr	x9, [sp, #16]
    52d4:	ldr	w8, [x9]
    52d8:	subs	w8, w8, #0x1
    52dc:	str	w8, [x9]
    52e0:	ldr	w8, [sp, #12]
    52e4:	cmp	w8, #0x0
    52e8:	cset	w8, ge  // ge = tcont
    52ec:	tbnz	w8, #0, 4ba4 <BZ2_blockSort@@Base+0x33d0>
    52f0:	mov	w8, #0x0                   	// #0
    52f4:	strb	w8, [sp, #63]
    52f8:	ldrb	w0, [sp, #63]
    52fc:	add	sp, sp, #0x40
    5300:	ret

0000000000005304 <BZ2_hbMakeCodeLengths@@Base>:
    5304:	stp	x29, x30, [sp, #-32]!
    5308:	str	x28, [sp, #16]
    530c:	mov	x29, sp
    5310:	sub	sp, sp, #0x1, lsl #12
    5314:	sub	sp, sp, #0x4b0
    5318:	sub	x8, x29, #0x35
    531c:	stur	x0, [x29, #-8]
    5320:	stur	x1, [x29, #-16]
    5324:	stur	w2, [x29, #-20]
    5328:	stur	w3, [x29, #-24]
    532c:	stur	wzr, [x29, #-44]
    5330:	str	x8, [sp, #24]
    5334:	ldur	w8, [x29, #-44]
    5338:	ldur	w9, [x29, #-20]
    533c:	cmp	w8, w9
    5340:	b.ge	5398 <BZ2_hbMakeCodeLengths@@Base+0x94>  // b.tcont
    5344:	ldur	x8, [x29, #-16]
    5348:	ldursw	x9, [x29, #-44]
    534c:	ldr	w10, [x8, x9, lsl #2]
    5350:	cbnz	w10, 5360 <BZ2_hbMakeCodeLengths@@Base+0x5c>
    5354:	mov	w8, #0x1                   	// #1
    5358:	str	w8, [sp, #20]
    535c:	b	5370 <BZ2_hbMakeCodeLengths@@Base+0x6c>
    5360:	ldur	x8, [x29, #-16]
    5364:	ldursw	x9, [x29, #-44]
    5368:	ldr	w10, [x8, x9, lsl #2]
    536c:	str	w10, [sp, #20]
    5370:	ldr	w8, [sp, #20]
    5374:	lsl	w8, w8, #8
    5378:	ldur	w9, [x29, #-44]
    537c:	add	w9, w9, #0x1
    5380:	add	x10, sp, #0x858
    5384:	str	w8, [x10, w9, sxtw #2]
    5388:	ldur	w8, [x29, #-44]
    538c:	add	w8, w8, #0x1
    5390:	stur	w8, [x29, #-44]
    5394:	b	5334 <BZ2_hbMakeCodeLengths@@Base+0x30>
    5398:	ldur	w8, [x29, #-20]
    539c:	stur	w8, [x29, #-28]
    53a0:	stur	wzr, [x29, #-32]
    53a4:	str	wzr, [sp, #4200]
    53a8:	str	wzr, [sp, #2136]
    53ac:	mov	w8, #0xfffffffe            	// #-2
    53b0:	str	w8, [sp, #72]
    53b4:	mov	w8, #0x1                   	// #1
    53b8:	stur	w8, [x29, #-44]
    53bc:	ldur	w8, [x29, #-44]
    53c0:	ldur	w9, [x29, #-20]
    53c4:	cmp	w8, w9
    53c8:	b.gt	5490 <BZ2_hbMakeCodeLengths@@Base+0x18c>
    53cc:	ldursw	x8, [x29, #-44]
    53d0:	add	x9, sp, #0x48
    53d4:	mov	w10, #0xffffffff            	// #-1
    53d8:	str	w10, [x9, x8, lsl #2]
    53dc:	ldur	w10, [x29, #-32]
    53e0:	add	w10, w10, #0x1
    53e4:	stur	w10, [x29, #-32]
    53e8:	ldur	w10, [x29, #-44]
    53ec:	ldursw	x8, [x29, #-32]
    53f0:	add	x9, sp, #0x1, lsl #12
    53f4:	add	x9, x9, #0x68
    53f8:	str	w10, [x9, x8, lsl #2]
    53fc:	ldur	w10, [x29, #-32]
    5400:	str	w10, [sp, #68]
    5404:	ldrsw	x8, [sp, #68]
    5408:	ldr	w10, [x9, x8, lsl #2]
    540c:	str	w10, [sp, #64]
    5410:	ldrsw	x8, [sp, #64]
    5414:	add	x9, sp, #0x858
    5418:	ldr	w10, [x9, x8, lsl #2]
    541c:	ldr	w11, [sp, #68]
    5420:	asr	w11, w11, #1
    5424:	add	x8, sp, #0x1, lsl #12
    5428:	add	x8, x8, #0x68
    542c:	ldrsw	x8, [x8, w11, sxtw #2]
    5430:	ldr	w11, [x9, x8, lsl #2]
    5434:	cmp	w10, w11
    5438:	b.ge	546c <BZ2_hbMakeCodeLengths@@Base+0x168>  // b.tcont
    543c:	ldr	w8, [sp, #68]
    5440:	mov	x9, #0x1                   	// #1
    5444:	asr	w8, w8, #1
    5448:	add	x10, sp, #0x1, lsl #12
    544c:	add	x10, x10, #0x68
    5450:	ldr	w8, [x10, w8, sxtw #2]
    5454:	ldrsw	x11, [sp, #68]
    5458:	str	w8, [x10, x11, lsl #2]
    545c:	ldr	w8, [sp, #68]
    5460:	asr	w8, w8, w9
    5464:	str	w8, [sp, #68]
    5468:	b	5410 <BZ2_hbMakeCodeLengths@@Base+0x10c>
    546c:	ldr	w8, [sp, #64]
    5470:	ldrsw	x9, [sp, #68]
    5474:	add	x10, sp, #0x1, lsl #12
    5478:	add	x10, x10, #0x68
    547c:	str	w8, [x10, x9, lsl #2]
    5480:	ldur	w8, [x29, #-44]
    5484:	add	w8, w8, #0x1
    5488:	stur	w8, [x29, #-44]
    548c:	b	53bc <BZ2_hbMakeCodeLengths@@Base+0xb8>
    5490:	ldur	w8, [x29, #-32]
    5494:	cmp	w8, #0x104
    5498:	b.lt	54a4 <BZ2_hbMakeCodeLengths@@Base+0x1a0>  // b.tstop
    549c:	mov	w0, #0x7d1                 	// #2001
    54a0:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    54a4:	ldur	w8, [x29, #-32]
    54a8:	cmp	w8, #0x1
    54ac:	b.le	5828 <BZ2_hbMakeCodeLengths@@Base+0x524>
    54b0:	add	x8, sp, #0x1, lsl #12
    54b4:	add	x8, x8, #0x68
    54b8:	ldr	w9, [sp, #4204]
    54bc:	stur	w9, [x29, #-36]
    54c0:	ldursw	x10, [x29, #-32]
    54c4:	ldr	w9, [x8, x10, lsl #2]
    54c8:	str	w9, [sp, #4204]
    54cc:	ldur	w9, [x29, #-32]
    54d0:	subs	w9, w9, #0x1
    54d4:	stur	w9, [x29, #-32]
    54d8:	mov	w9, #0x1                   	// #1
    54dc:	str	w9, [sp, #60]
    54e0:	ldrsw	x10, [sp, #60]
    54e4:	ldr	w9, [x8, x10, lsl #2]
    54e8:	str	w9, [sp, #52]
    54ec:	ldr	w8, [sp, #60]
    54f0:	lsl	w8, w8, #1
    54f4:	str	w8, [sp, #56]
    54f8:	ldr	w8, [sp, #56]
    54fc:	ldur	w9, [x29, #-32]
    5500:	cmp	w8, w9
    5504:	b.le	550c <BZ2_hbMakeCodeLengths@@Base+0x208>
    5508:	b	55a8 <BZ2_hbMakeCodeLengths@@Base+0x2a4>
    550c:	ldr	w8, [sp, #56]
    5510:	ldur	w9, [x29, #-32]
    5514:	cmp	w8, w9
    5518:	b.ge	5558 <BZ2_hbMakeCodeLengths@@Base+0x254>  // b.tcont
    551c:	ldr	w8, [sp, #56]
    5520:	add	w8, w8, #0x1
    5524:	add	x9, sp, #0x1, lsl #12
    5528:	add	x9, x9, #0x68
    552c:	ldrsw	x10, [x9, w8, sxtw #2]
    5530:	add	x11, sp, #0x858
    5534:	ldr	w8, [x11, x10, lsl #2]
    5538:	ldrsw	x10, [sp, #56]
    553c:	ldrsw	x9, [x9, x10, lsl #2]
    5540:	ldr	w12, [x11, x9, lsl #2]
    5544:	cmp	w8, w12
    5548:	b.ge	5558 <BZ2_hbMakeCodeLengths@@Base+0x254>  // b.tcont
    554c:	ldr	w8, [sp, #56]
    5550:	add	w8, w8, #0x1
    5554:	str	w8, [sp, #56]
    5558:	ldrsw	x8, [sp, #52]
    555c:	add	x9, sp, #0x858
    5560:	ldr	w10, [x9, x8, lsl #2]
    5564:	ldrsw	x8, [sp, #56]
    5568:	add	x11, sp, #0x1, lsl #12
    556c:	add	x11, x11, #0x68
    5570:	ldrsw	x8, [x11, x8, lsl #2]
    5574:	ldr	w12, [x9, x8, lsl #2]
    5578:	cmp	w10, w12
    557c:	b.ge	5584 <BZ2_hbMakeCodeLengths@@Base+0x280>  // b.tcont
    5580:	b	55a8 <BZ2_hbMakeCodeLengths@@Base+0x2a4>
    5584:	ldrsw	x8, [sp, #56]
    5588:	add	x9, sp, #0x1, lsl #12
    558c:	add	x9, x9, #0x68
    5590:	ldr	w10, [x9, x8, lsl #2]
    5594:	ldrsw	x8, [sp, #60]
    5598:	str	w10, [x9, x8, lsl #2]
    559c:	ldr	w10, [sp, #56]
    55a0:	str	w10, [sp, #60]
    55a4:	b	54ec <BZ2_hbMakeCodeLengths@@Base+0x1e8>
    55a8:	ldr	w8, [sp, #52]
    55ac:	ldrsw	x9, [sp, #60]
    55b0:	add	x10, sp, #0x1, lsl #12
    55b4:	add	x10, x10, #0x68
    55b8:	str	w8, [x10, x9, lsl #2]
    55bc:	ldr	w8, [sp, #4204]
    55c0:	stur	w8, [x29, #-40]
    55c4:	ldursw	x9, [x29, #-32]
    55c8:	ldr	w8, [x10, x9, lsl #2]
    55cc:	str	w8, [sp, #4204]
    55d0:	ldur	w8, [x29, #-32]
    55d4:	subs	w8, w8, #0x1
    55d8:	stur	w8, [x29, #-32]
    55dc:	mov	w8, #0x1                   	// #1
    55e0:	str	w8, [sp, #48]
    55e4:	ldrsw	x9, [sp, #48]
    55e8:	ldr	w8, [x10, x9, lsl #2]
    55ec:	str	w8, [sp, #40]
    55f0:	ldr	w8, [sp, #48]
    55f4:	lsl	w8, w8, #1
    55f8:	str	w8, [sp, #44]
    55fc:	ldr	w8, [sp, #44]
    5600:	ldur	w9, [x29, #-32]
    5604:	cmp	w8, w9
    5608:	b.le	5610 <BZ2_hbMakeCodeLengths@@Base+0x30c>
    560c:	b	56ac <BZ2_hbMakeCodeLengths@@Base+0x3a8>
    5610:	ldr	w8, [sp, #44]
    5614:	ldur	w9, [x29, #-32]
    5618:	cmp	w8, w9
    561c:	b.ge	565c <BZ2_hbMakeCodeLengths@@Base+0x358>  // b.tcont
    5620:	ldr	w8, [sp, #44]
    5624:	add	w8, w8, #0x1
    5628:	add	x9, sp, #0x1, lsl #12
    562c:	add	x9, x9, #0x68
    5630:	ldrsw	x10, [x9, w8, sxtw #2]
    5634:	add	x11, sp, #0x858
    5638:	ldr	w8, [x11, x10, lsl #2]
    563c:	ldrsw	x10, [sp, #44]
    5640:	ldrsw	x9, [x9, x10, lsl #2]
    5644:	ldr	w12, [x11, x9, lsl #2]
    5648:	cmp	w8, w12
    564c:	b.ge	565c <BZ2_hbMakeCodeLengths@@Base+0x358>  // b.tcont
    5650:	ldr	w8, [sp, #44]
    5654:	add	w8, w8, #0x1
    5658:	str	w8, [sp, #44]
    565c:	ldrsw	x8, [sp, #40]
    5660:	add	x9, sp, #0x858
    5664:	ldr	w10, [x9, x8, lsl #2]
    5668:	ldrsw	x8, [sp, #44]
    566c:	add	x11, sp, #0x1, lsl #12
    5670:	add	x11, x11, #0x68
    5674:	ldrsw	x8, [x11, x8, lsl #2]
    5678:	ldr	w12, [x9, x8, lsl #2]
    567c:	cmp	w10, w12
    5680:	b.ge	5688 <BZ2_hbMakeCodeLengths@@Base+0x384>  // b.tcont
    5684:	b	56ac <BZ2_hbMakeCodeLengths@@Base+0x3a8>
    5688:	ldrsw	x8, [sp, #44]
    568c:	add	x9, sp, #0x1, lsl #12
    5690:	add	x9, x9, #0x68
    5694:	ldr	w10, [x9, x8, lsl #2]
    5698:	ldrsw	x8, [sp, #48]
    569c:	str	w10, [x9, x8, lsl #2]
    56a0:	ldr	w10, [sp, #44]
    56a4:	str	w10, [sp, #48]
    56a8:	b	55f0 <BZ2_hbMakeCodeLengths@@Base+0x2ec>
    56ac:	ldr	w8, [sp, #40]
    56b0:	ldrsw	x9, [sp, #48]
    56b4:	add	x10, sp, #0x1, lsl #12
    56b8:	add	x10, x10, #0x68
    56bc:	str	w8, [x10, x9, lsl #2]
    56c0:	ldur	w8, [x29, #-28]
    56c4:	add	w8, w8, #0x1
    56c8:	stur	w8, [x29, #-28]
    56cc:	ldur	w8, [x29, #-28]
    56d0:	ldursw	x9, [x29, #-40]
    56d4:	add	x10, sp, #0x48
    56d8:	str	w8, [x10, x9, lsl #2]
    56dc:	ldursw	x9, [x29, #-36]
    56e0:	str	w8, [x10, x9, lsl #2]
    56e4:	ldursw	x9, [x29, #-36]
    56e8:	add	x10, sp, #0x858
    56ec:	ldr	w8, [x10, x9, lsl #2]
    56f0:	and	w8, w8, #0xffffff00
    56f4:	ldursw	x9, [x29, #-40]
    56f8:	ldr	w11, [x10, x9, lsl #2]
    56fc:	and	w11, w11, #0xffffff00
    5700:	add	w8, w8, w11
    5704:	ldursw	x9, [x29, #-36]
    5708:	ldr	w11, [x10, x9, lsl #2]
    570c:	and	w11, w11, #0xff
    5710:	ldursw	x9, [x29, #-40]
    5714:	ldr	w12, [x10, x9, lsl #2]
    5718:	and	w12, w12, #0xff
    571c:	cmp	w11, w12
    5720:	str	w8, [sp, #16]
    5724:	b.le	5740 <BZ2_hbMakeCodeLengths@@Base+0x43c>
    5728:	ldursw	x8, [x29, #-36]
    572c:	add	x9, sp, #0x858
    5730:	ldr	w10, [x9, x8, lsl #2]
    5734:	and	w10, w10, #0xff
    5738:	str	w10, [sp, #12]
    573c:	b	5754 <BZ2_hbMakeCodeLengths@@Base+0x450>
    5740:	ldursw	x8, [x29, #-40]
    5744:	add	x9, sp, #0x858
    5748:	ldr	w10, [x9, x8, lsl #2]
    574c:	and	w10, w10, #0xff
    5750:	str	w10, [sp, #12]
    5754:	ldr	w8, [sp, #12]
    5758:	add	w8, w8, #0x1
    575c:	ldr	w9, [sp, #16]
    5760:	orr	w8, w9, w8
    5764:	ldursw	x10, [x29, #-28]
    5768:	add	x11, sp, #0x858
    576c:	str	w8, [x11, x10, lsl #2]
    5770:	ldursw	x10, [x29, #-28]
    5774:	add	x11, sp, #0x48
    5778:	mov	w8, #0xffffffff            	// #-1
    577c:	str	w8, [x11, x10, lsl #2]
    5780:	ldur	w8, [x29, #-32]
    5784:	add	w8, w8, #0x1
    5788:	stur	w8, [x29, #-32]
    578c:	ldur	w8, [x29, #-28]
    5790:	ldursw	x10, [x29, #-32]
    5794:	add	x11, sp, #0x1, lsl #12
    5798:	add	x11, x11, #0x68
    579c:	str	w8, [x11, x10, lsl #2]
    57a0:	ldur	w8, [x29, #-32]
    57a4:	str	w8, [sp, #36]
    57a8:	ldrsw	x10, [sp, #36]
    57ac:	ldr	w8, [x11, x10, lsl #2]
    57b0:	str	w8, [sp, #32]
    57b4:	ldrsw	x8, [sp, #32]
    57b8:	add	x9, sp, #0x858
    57bc:	ldr	w10, [x9, x8, lsl #2]
    57c0:	ldr	w11, [sp, #36]
    57c4:	asr	w11, w11, #1
    57c8:	add	x8, sp, #0x1, lsl #12
    57cc:	add	x8, x8, #0x68
    57d0:	ldrsw	x8, [x8, w11, sxtw #2]
    57d4:	ldr	w11, [x9, x8, lsl #2]
    57d8:	cmp	w10, w11
    57dc:	b.ge	5810 <BZ2_hbMakeCodeLengths@@Base+0x50c>  // b.tcont
    57e0:	ldr	w8, [sp, #36]
    57e4:	mov	x9, #0x1                   	// #1
    57e8:	asr	w8, w8, #1
    57ec:	add	x10, sp, #0x1, lsl #12
    57f0:	add	x10, x10, #0x68
    57f4:	ldr	w8, [x10, w8, sxtw #2]
    57f8:	ldrsw	x11, [sp, #36]
    57fc:	str	w8, [x10, x11, lsl #2]
    5800:	ldr	w8, [sp, #36]
    5804:	asr	w8, w8, w9
    5808:	str	w8, [sp, #36]
    580c:	b	57b4 <BZ2_hbMakeCodeLengths@@Base+0x4b0>
    5810:	ldr	w8, [sp, #32]
    5814:	ldrsw	x9, [sp, #36]
    5818:	add	x10, sp, #0x1, lsl #12
    581c:	add	x10, x10, #0x68
    5820:	str	w8, [x10, x9, lsl #2]
    5824:	b	54a4 <BZ2_hbMakeCodeLengths@@Base+0x1a0>
    5828:	ldur	w8, [x29, #-28]
    582c:	cmp	w8, #0x204
    5830:	b.lt	583c <BZ2_hbMakeCodeLengths@@Base+0x538>  // b.tstop
    5834:	mov	w0, #0x7d2                 	// #2002
    5838:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    583c:	mov	w8, #0x0                   	// #0
    5840:	ldr	x9, [sp, #24]
    5844:	strb	w8, [x9]
    5848:	mov	w8, #0x1                   	// #1
    584c:	stur	w8, [x29, #-44]
    5850:	ldur	w8, [x29, #-44]
    5854:	ldur	w9, [x29, #-20]
    5858:	cmp	w8, w9
    585c:	b.gt	58f0 <BZ2_hbMakeCodeLengths@@Base+0x5ec>
    5860:	stur	wzr, [x29, #-48]
    5864:	ldur	w8, [x29, #-44]
    5868:	stur	w8, [x29, #-52]
    586c:	ldursw	x8, [x29, #-52]
    5870:	add	x9, sp, #0x48
    5874:	ldr	w10, [x9, x8, lsl #2]
    5878:	cmp	w10, #0x0
    587c:	cset	w10, lt  // lt = tstop
    5880:	tbnz	w10, #0, 58a4 <BZ2_hbMakeCodeLengths@@Base+0x5a0>
    5884:	ldursw	x8, [x29, #-52]
    5888:	add	x9, sp, #0x48
    588c:	ldr	w10, [x9, x8, lsl #2]
    5890:	stur	w10, [x29, #-52]
    5894:	ldur	w10, [x29, #-48]
    5898:	add	w10, w10, #0x1
    589c:	stur	w10, [x29, #-48]
    58a0:	b	586c <BZ2_hbMakeCodeLengths@@Base+0x568>
    58a4:	ldur	w8, [x29, #-48]
    58a8:	ldur	x9, [x29, #-8]
    58ac:	ldur	w10, [x29, #-44]
    58b0:	subs	w10, w10, #0x1
    58b4:	mov	w0, w10
    58b8:	sxtw	x11, w0
    58bc:	add	x9, x9, x11
    58c0:	strb	w8, [x9]
    58c4:	ldur	w8, [x29, #-48]
    58c8:	ldur	w10, [x29, #-24]
    58cc:	cmp	w8, w10
    58d0:	b.le	58e0 <BZ2_hbMakeCodeLengths@@Base+0x5dc>
    58d4:	mov	w8, #0x1                   	// #1
    58d8:	ldr	x9, [sp, #24]
    58dc:	strb	w8, [x9]
    58e0:	ldur	w8, [x29, #-44]
    58e4:	add	w8, w8, #0x1
    58e8:	stur	w8, [x29, #-44]
    58ec:	b	5850 <BZ2_hbMakeCodeLengths@@Base+0x54c>
    58f0:	ldr	x8, [sp, #24]
    58f4:	ldrb	w9, [x8]
    58f8:	cbnz	w9, 5900 <BZ2_hbMakeCodeLengths@@Base+0x5fc>
    58fc:	b	5964 <BZ2_hbMakeCodeLengths@@Base+0x660>
    5900:	mov	w8, #0x1                   	// #1
    5904:	stur	w8, [x29, #-44]
    5908:	ldur	w8, [x29, #-44]
    590c:	ldur	w9, [x29, #-20]
    5910:	cmp	w8, w9
    5914:	b.gt	5960 <BZ2_hbMakeCodeLengths@@Base+0x65c>
    5918:	ldursw	x8, [x29, #-44]
    591c:	add	x9, sp, #0x858
    5920:	ldr	w10, [x9, x8, lsl #2]
    5924:	asr	w10, w10, #8
    5928:	stur	w10, [x29, #-48]
    592c:	ldur	w10, [x29, #-48]
    5930:	mov	w11, #0x2                   	// #2
    5934:	sdiv	w10, w10, w11
    5938:	add	w10, w10, #0x1
    593c:	stur	w10, [x29, #-48]
    5940:	ldur	w10, [x29, #-48]
    5944:	lsl	w10, w10, #8
    5948:	ldursw	x8, [x29, #-44]
    594c:	str	w10, [x9, x8, lsl #2]
    5950:	ldur	w8, [x29, #-44]
    5954:	add	w8, w8, #0x1
    5958:	stur	w8, [x29, #-44]
    595c:	b	5908 <BZ2_hbMakeCodeLengths@@Base+0x604>
    5960:	b	5398 <BZ2_hbMakeCodeLengths@@Base+0x94>
    5964:	add	sp, sp, #0x1, lsl #12
    5968:	add	sp, sp, #0x4b0
    596c:	ldr	x28, [sp, #16]
    5970:	ldp	x29, x30, [sp], #32
    5974:	ret

0000000000005978 <BZ2_hbAssignCodes@@Base>:
    5978:	sub	sp, sp, #0x30
    597c:	str	x0, [sp, #40]
    5980:	str	x1, [sp, #32]
    5984:	str	w2, [sp, #28]
    5988:	str	w3, [sp, #24]
    598c:	str	w4, [sp, #20]
    5990:	str	wzr, [sp, #12]
    5994:	ldr	w8, [sp, #28]
    5998:	str	w8, [sp, #16]
    599c:	ldr	w8, [sp, #16]
    59a0:	ldr	w9, [sp, #24]
    59a4:	cmp	w8, w9
    59a8:	b.gt	5a20 <BZ2_hbAssignCodes@@Base+0xa8>
    59ac:	str	wzr, [sp, #8]
    59b0:	ldr	w8, [sp, #8]
    59b4:	ldr	w9, [sp, #20]
    59b8:	cmp	w8, w9
    59bc:	b.ge	5a04 <BZ2_hbAssignCodes@@Base+0x8c>  // b.tcont
    59c0:	ldr	x8, [sp, #32]
    59c4:	ldrsw	x9, [sp, #8]
    59c8:	ldrb	w10, [x8, x9]
    59cc:	ldr	w11, [sp, #16]
    59d0:	cmp	w10, w11
    59d4:	b.ne	59f4 <BZ2_hbAssignCodes@@Base+0x7c>  // b.any
    59d8:	ldr	w8, [sp, #12]
    59dc:	ldr	x9, [sp, #40]
    59e0:	ldrsw	x10, [sp, #8]
    59e4:	str	w8, [x9, x10, lsl #2]
    59e8:	ldr	w8, [sp, #12]
    59ec:	add	w8, w8, #0x1
    59f0:	str	w8, [sp, #12]
    59f4:	ldr	w8, [sp, #8]
    59f8:	add	w8, w8, #0x1
    59fc:	str	w8, [sp, #8]
    5a00:	b	59b0 <BZ2_hbAssignCodes@@Base+0x38>
    5a04:	ldr	w8, [sp, #12]
    5a08:	lsl	w8, w8, #1
    5a0c:	str	w8, [sp, #12]
    5a10:	ldr	w8, [sp, #16]
    5a14:	add	w8, w8, #0x1
    5a18:	str	w8, [sp, #16]
    5a1c:	b	599c <BZ2_hbAssignCodes@@Base+0x24>
    5a20:	add	sp, sp, #0x30
    5a24:	ret

0000000000005a28 <BZ2_hbCreateDecodeTables@@Base>:
    5a28:	sub	sp, sp, #0x40
    5a2c:	str	x0, [sp, #56]
    5a30:	str	x1, [sp, #48]
    5a34:	str	x2, [sp, #40]
    5a38:	str	x3, [sp, #32]
    5a3c:	str	w4, [sp, #28]
    5a40:	str	w5, [sp, #24]
    5a44:	str	w6, [sp, #20]
    5a48:	str	wzr, [sp, #16]
    5a4c:	ldr	w8, [sp, #28]
    5a50:	str	w8, [sp, #12]
    5a54:	ldr	w8, [sp, #12]
    5a58:	ldr	w9, [sp, #24]
    5a5c:	cmp	w8, w9
    5a60:	b.gt	5acc <BZ2_hbCreateDecodeTables@@Base+0xa4>
    5a64:	str	wzr, [sp, #8]
    5a68:	ldr	w8, [sp, #8]
    5a6c:	ldr	w9, [sp, #20]
    5a70:	cmp	w8, w9
    5a74:	b.ge	5abc <BZ2_hbCreateDecodeTables@@Base+0x94>  // b.tcont
    5a78:	ldr	x8, [sp, #32]
    5a7c:	ldrsw	x9, [sp, #8]
    5a80:	ldrb	w10, [x8, x9]
    5a84:	ldr	w11, [sp, #12]
    5a88:	cmp	w10, w11
    5a8c:	b.ne	5aac <BZ2_hbCreateDecodeTables@@Base+0x84>  // b.any
    5a90:	ldr	w8, [sp, #8]
    5a94:	ldr	x9, [sp, #40]
    5a98:	ldrsw	x10, [sp, #16]
    5a9c:	str	w8, [x9, x10, lsl #2]
    5aa0:	ldr	w8, [sp, #16]
    5aa4:	add	w8, w8, #0x1
    5aa8:	str	w8, [sp, #16]
    5aac:	ldr	w8, [sp, #8]
    5ab0:	add	w8, w8, #0x1
    5ab4:	str	w8, [sp, #8]
    5ab8:	b	5a68 <BZ2_hbCreateDecodeTables@@Base+0x40>
    5abc:	ldr	w8, [sp, #12]
    5ac0:	add	w8, w8, #0x1
    5ac4:	str	w8, [sp, #12]
    5ac8:	b	5a54 <BZ2_hbCreateDecodeTables@@Base+0x2c>
    5acc:	str	wzr, [sp, #12]
    5ad0:	ldr	w8, [sp, #12]
    5ad4:	cmp	w8, #0x17
    5ad8:	b.ge	5afc <BZ2_hbCreateDecodeTables@@Base+0xd4>  // b.tcont
    5adc:	ldr	x8, [sp, #48]
    5ae0:	ldrsw	x9, [sp, #12]
    5ae4:	mov	w10, wzr
    5ae8:	str	w10, [x8, x9, lsl #2]
    5aec:	ldr	w8, [sp, #12]
    5af0:	add	w8, w8, #0x1
    5af4:	str	w8, [sp, #12]
    5af8:	b	5ad0 <BZ2_hbCreateDecodeTables@@Base+0xa8>
    5afc:	str	wzr, [sp, #12]
    5b00:	ldr	w8, [sp, #12]
    5b04:	ldr	w9, [sp, #20]
    5b08:	cmp	w8, w9
    5b0c:	b.ge	5b54 <BZ2_hbCreateDecodeTables@@Base+0x12c>  // b.tcont
    5b10:	ldr	x8, [sp, #48]
    5b14:	ldr	x9, [sp, #32]
    5b18:	ldrsw	x10, [sp, #12]
    5b1c:	ldrb	w11, [x9, x10]
    5b20:	add	w11, w11, #0x1
    5b24:	mov	w0, w11
    5b28:	sxtw	x9, w0
    5b2c:	mov	x10, #0x4                   	// #4
    5b30:	mul	x9, x10, x9
    5b34:	add	x8, x8, x9
    5b38:	ldr	w11, [x8]
    5b3c:	add	w11, w11, #0x1
    5b40:	str	w11, [x8]
    5b44:	ldr	w8, [sp, #12]
    5b48:	add	w8, w8, #0x1
    5b4c:	str	w8, [sp, #12]
    5b50:	b	5b00 <BZ2_hbCreateDecodeTables@@Base+0xd8>
    5b54:	mov	w8, #0x1                   	// #1
    5b58:	str	w8, [sp, #12]
    5b5c:	ldr	w8, [sp, #12]
    5b60:	cmp	w8, #0x17
    5b64:	b.ge	5ba8 <BZ2_hbCreateDecodeTables@@Base+0x180>  // b.tcont
    5b68:	ldr	x8, [sp, #48]
    5b6c:	ldr	w9, [sp, #12]
    5b70:	subs	w9, w9, #0x1
    5b74:	mov	x10, #0x4                   	// #4
    5b78:	ldr	w9, [x8, w9, sxtw #2]
    5b7c:	ldr	x8, [sp, #48]
    5b80:	ldrsw	x11, [sp, #12]
    5b84:	mul	x10, x10, x11
    5b88:	add	x8, x8, x10
    5b8c:	ldr	w12, [x8]
    5b90:	add	w9, w12, w9
    5b94:	str	w9, [x8]
    5b98:	ldr	w8, [sp, #12]
    5b9c:	add	w8, w8, #0x1
    5ba0:	str	w8, [sp, #12]
    5ba4:	b	5b5c <BZ2_hbCreateDecodeTables@@Base+0x134>
    5ba8:	str	wzr, [sp, #12]
    5bac:	ldr	w8, [sp, #12]
    5bb0:	cmp	w8, #0x17
    5bb4:	b.ge	5bd8 <BZ2_hbCreateDecodeTables@@Base+0x1b0>  // b.tcont
    5bb8:	ldr	x8, [sp, #56]
    5bbc:	ldrsw	x9, [sp, #12]
    5bc0:	mov	w10, wzr
    5bc4:	str	w10, [x8, x9, lsl #2]
    5bc8:	ldr	w8, [sp, #12]
    5bcc:	add	w8, w8, #0x1
    5bd0:	str	w8, [sp, #12]
    5bd4:	b	5bac <BZ2_hbCreateDecodeTables@@Base+0x184>
    5bd8:	str	wzr, [sp, #4]
    5bdc:	ldr	w8, [sp, #28]
    5be0:	str	w8, [sp, #12]
    5be4:	ldr	w8, [sp, #12]
    5be8:	ldr	w9, [sp, #24]
    5bec:	cmp	w8, w9
    5bf0:	b.gt	5c50 <BZ2_hbCreateDecodeTables@@Base+0x228>
    5bf4:	ldr	x8, [sp, #48]
    5bf8:	ldr	w9, [sp, #12]
    5bfc:	add	w9, w9, #0x1
    5c00:	ldr	w9, [x8, w9, sxtw #2]
    5c04:	ldr	x8, [sp, #48]
    5c08:	ldrsw	x10, [sp, #12]
    5c0c:	ldr	w11, [x8, x10, lsl #2]
    5c10:	subs	w9, w9, w11
    5c14:	ldr	w11, [sp, #4]
    5c18:	add	w9, w11, w9
    5c1c:	str	w9, [sp, #4]
    5c20:	ldr	w9, [sp, #4]
    5c24:	subs	w9, w9, #0x1
    5c28:	ldr	x8, [sp, #56]
    5c2c:	ldrsw	x10, [sp, #12]
    5c30:	str	w9, [x8, x10, lsl #2]
    5c34:	ldr	w9, [sp, #4]
    5c38:	lsl	w9, w9, #1
    5c3c:	str	w9, [sp, #4]
    5c40:	ldr	w8, [sp, #12]
    5c44:	add	w8, w8, #0x1
    5c48:	str	w8, [sp, #12]
    5c4c:	b	5be4 <BZ2_hbCreateDecodeTables@@Base+0x1bc>
    5c50:	ldr	w8, [sp, #28]
    5c54:	add	w8, w8, #0x1
    5c58:	str	w8, [sp, #12]
    5c5c:	ldr	w8, [sp, #12]
    5c60:	ldr	w9, [sp, #24]
    5c64:	cmp	w8, w9
    5c68:	b.gt	5cb0 <BZ2_hbCreateDecodeTables@@Base+0x288>
    5c6c:	ldr	x8, [sp, #56]
    5c70:	ldr	w9, [sp, #12]
    5c74:	subs	w9, w9, #0x1
    5c78:	ldr	w9, [x8, w9, sxtw #2]
    5c7c:	add	w9, w9, #0x1
    5c80:	lsl	w9, w9, #1
    5c84:	ldr	x8, [sp, #48]
    5c88:	ldrsw	x10, [sp, #12]
    5c8c:	ldr	w11, [x8, x10, lsl #2]
    5c90:	subs	w9, w9, w11
    5c94:	ldr	x8, [sp, #48]
    5c98:	ldrsw	x10, [sp, #12]
    5c9c:	str	w9, [x8, x10, lsl #2]
    5ca0:	ldr	w8, [sp, #12]
    5ca4:	add	w8, w8, #0x1
    5ca8:	str	w8, [sp, #12]
    5cac:	b	5c5c <BZ2_hbCreateDecodeTables@@Base+0x234>
    5cb0:	add	sp, sp, #0x40
    5cb4:	ret

0000000000005cb8 <BZ2_bsInitWrite@@Base>:
    5cb8:	sub	sp, sp, #0x10
    5cbc:	str	x0, [sp, #8]
    5cc0:	ldr	x8, [sp, #8]
    5cc4:	str	wzr, [x8, #644]
    5cc8:	ldr	x8, [sp, #8]
    5ccc:	str	wzr, [x8, #640]
    5cd0:	add	sp, sp, #0x10
    5cd4:	ret

0000000000005cd8 <BZ2_compressBlock@@Base>:
    5cd8:	sub	sp, sp, #0x20
    5cdc:	stp	x29, x30, [sp, #16]
    5ce0:	add	x29, sp, #0x10
    5ce4:	str	x0, [sp, #8]
    5ce8:	strb	w1, [sp, #7]
    5cec:	ldr	x8, [sp, #8]
    5cf0:	ldr	w9, [x8, #108]
    5cf4:	cmp	w9, #0x0
    5cf8:	cset	w9, le
    5cfc:	tbnz	w9, #0, 5db4 <BZ2_compressBlock@@Base+0xdc>
    5d00:	ldr	x8, [sp, #8]
    5d04:	ldr	w9, [x8, #648]
    5d08:	mvn	w9, w9
    5d0c:	ldr	x8, [sp, #8]
    5d10:	str	w9, [x8, #648]
    5d14:	ldr	x8, [sp, #8]
    5d18:	ldr	w9, [x8, #652]
    5d1c:	ldr	x8, [sp, #8]
    5d20:	ldr	w10, [x8, #652]
    5d24:	lsr	w10, w10, #31
    5d28:	orr	w9, w10, w9, lsl #1
    5d2c:	ldr	x8, [sp, #8]
    5d30:	str	w9, [x8, #652]
    5d34:	ldr	x8, [sp, #8]
    5d38:	ldr	w9, [x8, #648]
    5d3c:	ldr	x8, [sp, #8]
    5d40:	ldr	w10, [x8, #652]
    5d44:	eor	w9, w10, w9
    5d48:	str	w9, [x8, #652]
    5d4c:	ldr	x8, [sp, #8]
    5d50:	ldr	w9, [x8, #660]
    5d54:	cmp	w9, #0x1
    5d58:	b.le	5d64 <BZ2_compressBlock@@Base+0x8c>
    5d5c:	ldr	x8, [sp, #8]
    5d60:	str	wzr, [x8, #116]
    5d64:	ldr	x8, [sp, #8]
    5d68:	ldr	w9, [x8, #656]
    5d6c:	cmp	w9, #0x2
    5d70:	b.lt	5dac <BZ2_compressBlock@@Base+0xd4>  // b.tstop
    5d74:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
    5d78:	ldr	x8, [x8, #4016]
    5d7c:	ldr	x0, [x8]
    5d80:	ldr	x8, [sp, #8]
    5d84:	ldr	w2, [x8, #660]
    5d88:	ldr	x8, [sp, #8]
    5d8c:	ldr	w3, [x8, #648]
    5d90:	ldr	x8, [sp, #8]
    5d94:	ldr	w4, [x8, #652]
    5d98:	ldr	x8, [sp, #8]
    5d9c:	ldr	w5, [x8, #108]
    5da0:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    5da4:	add	x1, x1, #0xa5b
    5da8:	bl	16e0 <fprintf@plt>
    5dac:	ldr	x0, [sp, #8]
    5db0:	bl	1640 <BZ2_blockSort@plt>
    5db4:	ldr	x8, [sp, #8]
    5db8:	ldr	x8, [x8, #32]
    5dbc:	ldr	x9, [sp, #8]
    5dc0:	ldrsw	x9, [x9, #108]
    5dc4:	add	x8, x8, x9
    5dc8:	ldr	x9, [sp, #8]
    5dcc:	str	x8, [x9, #80]
    5dd0:	ldr	x8, [sp, #8]
    5dd4:	ldr	w10, [x8, #660]
    5dd8:	cmp	w10, #0x1
    5ddc:	b.ne	5e24 <BZ2_compressBlock@@Base+0x14c>  // b.any
    5de0:	ldr	x0, [sp, #8]
    5de4:	bl	1600 <BZ2_bsInitWrite@plt>
    5de8:	ldr	x0, [sp, #8]
    5dec:	mov	w1, #0x42                  	// #66
    5df0:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5df4:	ldr	x0, [sp, #8]
    5df8:	mov	w1, #0x5a                  	// #90
    5dfc:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5e00:	ldr	x0, [sp, #8]
    5e04:	mov	w1, #0x68                  	// #104
    5e08:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5e0c:	ldr	x0, [sp, #8]
    5e10:	ldr	x8, [sp, #8]
    5e14:	ldr	w9, [x8, #664]
    5e18:	add	w9, w9, #0x30
    5e1c:	mov	w1, w9
    5e20:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5e24:	ldr	x8, [sp, #8]
    5e28:	ldr	w9, [x8, #108]
    5e2c:	cmp	w9, #0x0
    5e30:	cset	w9, le
    5e34:	tbnz	w9, #0, 5ed0 <BZ2_compressBlock@@Base+0x1f8>
    5e38:	ldr	x0, [sp, #8]
    5e3c:	mov	w1, #0x31                  	// #49
    5e40:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5e44:	ldr	x0, [sp, #8]
    5e48:	mov	w1, #0x41                  	// #65
    5e4c:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5e50:	ldr	x0, [sp, #8]
    5e54:	mov	w8, #0x59                  	// #89
    5e58:	mov	w1, w8
    5e5c:	str	w8, [sp]
    5e60:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5e64:	ldr	x0, [sp, #8]
    5e68:	mov	w1, #0x26                  	// #38
    5e6c:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5e70:	ldr	x0, [sp, #8]
    5e74:	mov	w1, #0x53                  	// #83
    5e78:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5e7c:	ldr	x0, [sp, #8]
    5e80:	ldr	w1, [sp]
    5e84:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5e88:	ldr	x0, [sp, #8]
    5e8c:	ldr	x9, [sp, #8]
    5e90:	ldr	w1, [x9, #648]
    5e94:	bl	5fa8 <BZ2_compressBlock@@Base+0x2d0>
    5e98:	ldr	x0, [sp, #8]
    5e9c:	mov	w1, #0x1                   	// #1
    5ea0:	mov	w8, wzr
    5ea4:	mov	w2, w8
    5ea8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    5eac:	ldr	x0, [sp, #8]
    5eb0:	ldr	x9, [sp, #8]
    5eb4:	ldr	w2, [x9, #48]
    5eb8:	mov	w1, #0x18                  	// #24
    5ebc:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    5ec0:	ldr	x0, [sp, #8]
    5ec4:	bl	611c <BZ2_compressBlock@@Base+0x444>
    5ec8:	ldr	x0, [sp, #8]
    5ecc:	bl	6594 <BZ2_compressBlock@@Base+0x8bc>
    5ed0:	ldrb	w8, [sp, #7]
    5ed4:	cbz	w8, 5f68 <BZ2_compressBlock@@Base+0x290>
    5ed8:	ldr	x0, [sp, #8]
    5edc:	mov	w1, #0x17                  	// #23
    5ee0:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5ee4:	ldr	x0, [sp, #8]
    5ee8:	mov	w1, #0x72                  	// #114
    5eec:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5ef0:	ldr	x0, [sp, #8]
    5ef4:	mov	w1, #0x45                  	// #69
    5ef8:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5efc:	ldr	x0, [sp, #8]
    5f00:	mov	w1, #0x38                  	// #56
    5f04:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5f08:	ldr	x0, [sp, #8]
    5f0c:	mov	w1, #0x50                  	// #80
    5f10:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5f14:	ldr	x0, [sp, #8]
    5f18:	mov	w1, #0xffffff90            	// #-112
    5f1c:	bl	5f74 <BZ2_compressBlock@@Base+0x29c>
    5f20:	ldr	x0, [sp, #8]
    5f24:	ldr	x8, [sp, #8]
    5f28:	ldr	w1, [x8, #652]
    5f2c:	bl	5fa8 <BZ2_compressBlock@@Base+0x2d0>
    5f30:	ldr	x8, [sp, #8]
    5f34:	ldr	w9, [x8, #656]
    5f38:	cmp	w9, #0x2
    5f3c:	b.lt	5f60 <BZ2_compressBlock@@Base+0x288>  // b.tstop
    5f40:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
    5f44:	ldr	x8, [x8, #4016]
    5f48:	ldr	x0, [x8]
    5f4c:	ldr	x8, [sp, #8]
    5f50:	ldr	w2, [x8, #652]
    5f54:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    5f58:	add	x1, x1, #0xa99
    5f5c:	bl	16e0 <fprintf@plt>
    5f60:	ldr	x0, [sp, #8]
    5f64:	bl	b1a4 <BZ2_compressBlock@@Base+0x54cc>
    5f68:	ldp	x29, x30, [sp, #16]
    5f6c:	add	sp, sp, #0x20
    5f70:	ret
    5f74:	sub	sp, sp, #0x20
    5f78:	stp	x29, x30, [sp, #16]
    5f7c:	add	x29, sp, #0x10
    5f80:	mov	w8, #0x8                   	// #8
    5f84:	str	x0, [sp, #8]
    5f88:	strb	w1, [sp, #7]
    5f8c:	ldr	x0, [sp, #8]
    5f90:	ldrb	w2, [sp, #7]
    5f94:	mov	w1, w8
    5f98:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    5f9c:	ldp	x29, x30, [sp, #16]
    5fa0:	add	sp, sp, #0x20
    5fa4:	ret
    5fa8:	sub	sp, sp, #0x20
    5fac:	stp	x29, x30, [sp, #16]
    5fb0:	add	x29, sp, #0x10
    5fb4:	mov	w8, #0x8                   	// #8
    5fb8:	str	x0, [sp, #8]
    5fbc:	str	w1, [sp, #4]
    5fc0:	ldr	x0, [sp, #8]
    5fc4:	ldr	w9, [sp, #4]
    5fc8:	lsr	w9, w9, #24
    5fcc:	mov	w10, w9
    5fd0:	ubfx	x10, x10, #0, #32
    5fd4:	and	x10, x10, #0xff
    5fd8:	mov	w1, w8
    5fdc:	mov	w2, w10
    5fe0:	str	w8, [sp]
    5fe4:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    5fe8:	ldr	x0, [sp, #8]
    5fec:	ldr	w8, [sp, #4]
    5ff0:	lsr	w8, w8, #16
    5ff4:	mov	w11, w8
    5ff8:	ubfx	x11, x11, #0, #32
    5ffc:	and	x11, x11, #0xff
    6000:	ldr	w1, [sp]
    6004:	mov	w2, w11
    6008:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    600c:	ldr	x0, [sp, #8]
    6010:	ldr	w8, [sp, #4]
    6014:	lsr	w8, w8, #8
    6018:	mov	w12, w8
    601c:	ubfx	x12, x12, #0, #32
    6020:	and	x12, x12, #0xff
    6024:	ldr	w1, [sp]
    6028:	mov	w2, w12
    602c:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    6030:	ldr	x0, [sp, #8]
    6034:	ldr	w8, [sp, #4]
    6038:	mov	w13, w8
    603c:	and	x13, x13, #0xff
    6040:	ldr	w1, [sp]
    6044:	mov	w2, w13
    6048:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    604c:	ldp	x29, x30, [sp, #16]
    6050:	add	sp, sp, #0x20
    6054:	ret
    6058:	sub	sp, sp, #0x10
    605c:	str	x0, [sp, #8]
    6060:	str	w1, [sp, #4]
    6064:	str	w2, [sp]
    6068:	ldr	x8, [sp, #8]
    606c:	ldr	w9, [x8, #644]
    6070:	cmp	w9, #0x8
    6074:	b.lt	60d0 <BZ2_compressBlock@@Base+0x3f8>  // b.tstop
    6078:	ldr	x8, [sp, #8]
    607c:	ldr	w9, [x8, #640]
    6080:	lsr	w9, w9, #24
    6084:	ldr	x8, [sp, #8]
    6088:	ldr	x8, [x8, #80]
    608c:	ldr	x10, [sp, #8]
    6090:	ldrsw	x10, [x10, #116]
    6094:	add	x8, x8, x10
    6098:	strb	w9, [x8]
    609c:	ldr	x8, [sp, #8]
    60a0:	ldr	w9, [x8, #116]
    60a4:	add	w9, w9, #0x1
    60a8:	str	w9, [x8, #116]
    60ac:	ldr	x8, [sp, #8]
    60b0:	ldr	w9, [x8, #640]
    60b4:	lsl	w9, w9, #8
    60b8:	str	w9, [x8, #640]
    60bc:	ldr	x8, [sp, #8]
    60c0:	ldr	w9, [x8, #644]
    60c4:	subs	w9, w9, #0x8
    60c8:	str	w9, [x8, #644]
    60cc:	b	6068 <BZ2_compressBlock@@Base+0x390>
    60d0:	ldr	w8, [sp]
    60d4:	ldr	x9, [sp, #8]
    60d8:	ldr	w10, [x9, #644]
    60dc:	mov	w11, #0x20                  	// #32
    60e0:	subs	w10, w11, w10
    60e4:	ldr	w11, [sp, #4]
    60e8:	subs	w10, w10, w11
    60ec:	lsl	w8, w8, w10
    60f0:	ldr	x9, [sp, #8]
    60f4:	ldr	w10, [x9, #640]
    60f8:	orr	w8, w10, w8
    60fc:	str	w8, [x9, #640]
    6100:	ldr	w8, [sp, #4]
    6104:	ldr	x9, [sp, #8]
    6108:	ldr	w10, [x9, #644]
    610c:	add	w8, w10, w8
    6110:	str	w8, [x9, #644]
    6114:	add	sp, sp, #0x10
    6118:	ret
    611c:	sub	sp, sp, #0x180
    6120:	stp	x29, x30, [sp, #352]
    6124:	str	x28, [sp, #368]
    6128:	add	x29, sp, #0x160
    612c:	sub	x8, x29, #0x8
    6130:	str	x0, [x8]
    6134:	ldr	x9, [x8]
    6138:	ldr	x9, [x9, #56]
    613c:	str	x9, [sp, #56]
    6140:	ldr	x9, [x8]
    6144:	ldr	x9, [x9, #64]
    6148:	str	x9, [sp, #48]
    614c:	ldr	x9, [x8]
    6150:	ldr	x9, [x9, #72]
    6154:	str	x9, [sp, #40]
    6158:	ldr	x0, [x8]
    615c:	str	x8, [sp, #8]
    6160:	bl	b220 <BZ2_compressBlock@@Base+0x5548>
    6164:	ldr	x8, [sp, #8]
    6168:	ldr	x9, [x8]
    616c:	ldr	w10, [x9, #124]
    6170:	add	w10, w10, #0x1
    6174:	str	w10, [sp, #68]
    6178:	str	wzr, [sp, #84]
    617c:	ldr	w8, [sp, #84]
    6180:	ldr	w9, [sp, #68]
    6184:	cmp	w8, w9
    6188:	b.gt	61b4 <BZ2_compressBlock@@Base+0x4dc>
    618c:	ldr	x8, [sp, #8]
    6190:	ldr	x9, [x8]
    6194:	add	x9, x9, #0x2a0
    6198:	ldrsw	x10, [sp, #84]
    619c:	mov	w11, wzr
    61a0:	str	w11, [x9, x10, lsl #2]
    61a4:	ldr	w8, [sp, #84]
    61a8:	add	w8, w8, #0x1
    61ac:	str	w8, [sp, #84]
    61b0:	b	617c <BZ2_compressBlock@@Base+0x4a4>
    61b4:	str	wzr, [sp, #72]
    61b8:	str	wzr, [sp, #76]
    61bc:	str	wzr, [sp, #84]
    61c0:	ldr	w8, [sp, #84]
    61c4:	ldr	x9, [sp, #8]
    61c8:	ldr	x10, [x9]
    61cc:	ldr	w11, [x10, #124]
    61d0:	cmp	w8, w11
    61d4:	b.ge	61fc <BZ2_compressBlock@@Base+0x524>  // b.tcont
    61d8:	ldr	w8, [sp, #84]
    61dc:	ldrsw	x9, [sp, #84]
    61e0:	add	x10, sp, #0x58
    61e4:	add	x9, x10, x9
    61e8:	strb	w8, [x9]
    61ec:	ldr	w8, [sp, #84]
    61f0:	add	w8, w8, #0x1
    61f4:	str	w8, [sp, #84]
    61f8:	b	61c0 <BZ2_compressBlock@@Base+0x4e8>
    61fc:	str	wzr, [sp, #84]
    6200:	ldr	w8, [sp, #84]
    6204:	ldr	x9, [sp, #8]
    6208:	ldr	x10, [x9]
    620c:	ldr	w11, [x10, #108]
    6210:	cmp	w8, w11
    6214:	b.ge	6458 <BZ2_compressBlock@@Base+0x780>  // b.tcont
    6218:	ldr	x8, [sp, #56]
    621c:	ldrsw	x9, [sp, #84]
    6220:	ldr	w10, [x8, x9, lsl #2]
    6224:	subs	w10, w10, #0x1
    6228:	str	w10, [sp, #80]
    622c:	ldr	w10, [sp, #80]
    6230:	cmp	w10, #0x0
    6234:	cset	w10, ge  // ge = tcont
    6238:	tbnz	w10, #0, 6254 <BZ2_compressBlock@@Base+0x57c>
    623c:	ldr	x8, [sp, #8]
    6240:	ldr	x9, [x8]
    6244:	ldr	w10, [x9, #108]
    6248:	ldr	w11, [sp, #80]
    624c:	add	w10, w11, w10
    6250:	str	w10, [sp, #80]
    6254:	ldr	x8, [sp, #8]
    6258:	ldr	x9, [x8]
    625c:	add	x9, x9, #0x180
    6260:	ldr	x10, [sp, #48]
    6264:	ldrsw	x11, [sp, #80]
    6268:	ldrb	w12, [x10, x11]
    626c:	mov	w10, w12
    6270:	add	x9, x9, x10
    6274:	ldrb	w12, [x9]
    6278:	strb	w12, [sp, #39]
    627c:	ldrb	w12, [sp, #88]
    6280:	ldrb	w13, [sp, #39]
    6284:	cmp	w12, w13
    6288:	b.ne	629c <BZ2_compressBlock@@Base+0x5c4>  // b.any
    628c:	ldr	w8, [sp, #76]
    6290:	add	w8, w8, #0x1
    6294:	str	w8, [sp, #76]
    6298:	b	6448 <BZ2_compressBlock@@Base+0x770>
    629c:	ldr	w8, [sp, #76]
    62a0:	cmp	w8, #0x0
    62a4:	cset	w8, le
    62a8:	tbnz	w8, #0, 636c <BZ2_compressBlock@@Base+0x694>
    62ac:	ldr	w8, [sp, #76]
    62b0:	subs	w8, w8, #0x1
    62b4:	str	w8, [sp, #76]
    62b8:	ldr	w8, [sp, #76]
    62bc:	and	w8, w8, #0x1
    62c0:	cbz	w8, 6304 <BZ2_compressBlock@@Base+0x62c>
    62c4:	ldr	x8, [sp, #40]
    62c8:	ldrsw	x9, [sp, #72]
    62cc:	mov	x10, #0x2                   	// #2
    62d0:	mul	x9, x10, x9
    62d4:	add	x8, x8, x9
    62d8:	mov	w11, #0x1                   	// #1
    62dc:	strh	w11, [x8]
    62e0:	ldr	w11, [sp, #72]
    62e4:	add	w11, w11, #0x1
    62e8:	str	w11, [sp, #72]
    62ec:	ldr	x8, [sp, #8]
    62f0:	ldr	x9, [x8]
    62f4:	ldr	w11, [x9, #676]
    62f8:	add	w11, w11, #0x1
    62fc:	str	w11, [x9, #676]
    6300:	b	6340 <BZ2_compressBlock@@Base+0x668>
    6304:	ldr	x8, [sp, #40]
    6308:	ldrsw	x9, [sp, #72]
    630c:	mov	x10, #0x2                   	// #2
    6310:	mul	x9, x10, x9
    6314:	add	x8, x8, x9
    6318:	mov	w11, #0x0                   	// #0
    631c:	strh	w11, [x8]
    6320:	ldr	w11, [sp, #72]
    6324:	add	w11, w11, #0x1
    6328:	str	w11, [sp, #72]
    632c:	ldr	x8, [sp, #8]
    6330:	ldr	x9, [x8]
    6334:	ldr	w11, [x9, #672]
    6338:	add	w11, w11, #0x1
    633c:	str	w11, [x9, #672]
    6340:	ldr	w8, [sp, #76]
    6344:	cmp	w8, #0x2
    6348:	b.ge	6350 <BZ2_compressBlock@@Base+0x678>  // b.tcont
    634c:	b	6368 <BZ2_compressBlock@@Base+0x690>
    6350:	ldr	w8, [sp, #76]
    6354:	mov	w9, #0x2                   	// #2
    6358:	subs	w8, w8, #0x2
    635c:	sdiv	w8, w8, w9
    6360:	str	w8, [sp, #76]
    6364:	b	62b8 <BZ2_compressBlock@@Base+0x5e0>
    6368:	str	wzr, [sp, #76]
    636c:	add	x8, sp, #0x58
    6370:	ldrb	w9, [x8, #1]
    6374:	strb	w9, [sp, #38]
    6378:	ldrb	w9, [sp, #88]
    637c:	strb	w9, [x8, #1]
    6380:	add	x8, x8, #0x1
    6384:	str	x8, [sp, #24]
    6388:	ldrb	w9, [sp, #39]
    638c:	strb	w9, [sp, #23]
    6390:	ldrb	w8, [sp, #23]
    6394:	ldrb	w9, [sp, #38]
    6398:	cmp	w8, w9
    639c:	b.eq	63d0 <BZ2_compressBlock@@Base+0x6f8>  // b.none
    63a0:	ldr	x8, [sp, #24]
    63a4:	add	x8, x8, #0x1
    63a8:	str	x8, [sp, #24]
    63ac:	ldrb	w9, [sp, #38]
    63b0:	strb	w9, [sp, #22]
    63b4:	ldr	x8, [sp, #24]
    63b8:	ldrb	w9, [x8]
    63bc:	strb	w9, [sp, #38]
    63c0:	ldrb	w9, [sp, #22]
    63c4:	ldr	x8, [sp, #24]
    63c8:	strb	w9, [x8]
    63cc:	b	6390 <BZ2_compressBlock@@Base+0x6b8>
    63d0:	ldrb	w8, [sp, #38]
    63d4:	add	x9, sp, #0x58
    63d8:	strb	w8, [sp, #88]
    63dc:	ldr	x10, [sp, #24]
    63e0:	subs	x9, x10, x9
    63e4:	str	w9, [sp, #80]
    63e8:	ldr	w8, [sp, #80]
    63ec:	add	w8, w8, #0x1
    63f0:	ldr	x10, [sp, #40]
    63f4:	ldrsw	x11, [sp, #72]
    63f8:	mov	x12, #0x2                   	// #2
    63fc:	mul	x11, x12, x11
    6400:	add	x10, x10, x11
    6404:	strh	w8, [x10]
    6408:	ldr	w8, [sp, #72]
    640c:	add	w8, w8, #0x1
    6410:	str	w8, [sp, #72]
    6414:	ldr	x10, [sp, #8]
    6418:	ldr	x11, [x10]
    641c:	add	x11, x11, #0x2a0
    6420:	ldr	w8, [sp, #80]
    6424:	add	w8, w8, #0x1
    6428:	mov	w0, w8
    642c:	sxtw	x12, w0
    6430:	mov	x13, #0x4                   	// #4
    6434:	mul	x12, x13, x12
    6438:	add	x11, x11, x12
    643c:	ldr	w8, [x11]
    6440:	add	w8, w8, #0x1
    6444:	str	w8, [x11]
    6448:	ldr	w8, [sp, #84]
    644c:	add	w8, w8, #0x1
    6450:	str	w8, [sp, #84]
    6454:	b	6200 <BZ2_compressBlock@@Base+0x528>
    6458:	ldr	w8, [sp, #76]
    645c:	cmp	w8, #0x0
    6460:	cset	w8, le
    6464:	tbnz	w8, #0, 6528 <BZ2_compressBlock@@Base+0x850>
    6468:	ldr	w8, [sp, #76]
    646c:	subs	w8, w8, #0x1
    6470:	str	w8, [sp, #76]
    6474:	ldr	w8, [sp, #76]
    6478:	and	w8, w8, #0x1
    647c:	cbz	w8, 64c0 <BZ2_compressBlock@@Base+0x7e8>
    6480:	ldr	x8, [sp, #40]
    6484:	ldrsw	x9, [sp, #72]
    6488:	mov	x10, #0x2                   	// #2
    648c:	mul	x9, x10, x9
    6490:	add	x8, x8, x9
    6494:	mov	w11, #0x1                   	// #1
    6498:	strh	w11, [x8]
    649c:	ldr	w11, [sp, #72]
    64a0:	add	w11, w11, #0x1
    64a4:	str	w11, [sp, #72]
    64a8:	ldr	x8, [sp, #8]
    64ac:	ldr	x9, [x8]
    64b0:	ldr	w11, [x9, #676]
    64b4:	add	w11, w11, #0x1
    64b8:	str	w11, [x9, #676]
    64bc:	b	64fc <BZ2_compressBlock@@Base+0x824>
    64c0:	ldr	x8, [sp, #40]
    64c4:	ldrsw	x9, [sp, #72]
    64c8:	mov	x10, #0x2                   	// #2
    64cc:	mul	x9, x10, x9
    64d0:	add	x8, x8, x9
    64d4:	mov	w11, #0x0                   	// #0
    64d8:	strh	w11, [x8]
    64dc:	ldr	w11, [sp, #72]
    64e0:	add	w11, w11, #0x1
    64e4:	str	w11, [sp, #72]
    64e8:	ldr	x8, [sp, #8]
    64ec:	ldr	x9, [x8]
    64f0:	ldr	w11, [x9, #672]
    64f4:	add	w11, w11, #0x1
    64f8:	str	w11, [x9, #672]
    64fc:	ldr	w8, [sp, #76]
    6500:	cmp	w8, #0x2
    6504:	b.ge	650c <BZ2_compressBlock@@Base+0x834>  // b.tcont
    6508:	b	6524 <BZ2_compressBlock@@Base+0x84c>
    650c:	ldr	w8, [sp, #76]
    6510:	mov	w9, #0x2                   	// #2
    6514:	subs	w8, w8, #0x2
    6518:	sdiv	w8, w8, w9
    651c:	str	w8, [sp, #76]
    6520:	b	6474 <BZ2_compressBlock@@Base+0x79c>
    6524:	str	wzr, [sp, #76]
    6528:	ldr	w8, [sp, #68]
    652c:	ldr	x9, [sp, #40]
    6530:	ldrsw	x10, [sp, #72]
    6534:	mov	x11, #0x2                   	// #2
    6538:	mul	x10, x11, x10
    653c:	add	x9, x9, x10
    6540:	strh	w8, [x9]
    6544:	ldr	w8, [sp, #72]
    6548:	add	w8, w8, #0x1
    654c:	str	w8, [sp, #72]
    6550:	ldr	x9, [sp, #8]
    6554:	ldr	x10, [x9]
    6558:	add	x10, x10, #0x2a0
    655c:	ldrsw	x11, [sp, #68]
    6560:	mov	x12, #0x4                   	// #4
    6564:	mul	x11, x12, x11
    6568:	add	x10, x10, x11
    656c:	ldr	w8, [x10]
    6570:	add	w8, w8, #0x1
    6574:	str	w8, [x10]
    6578:	ldr	w8, [sp, #72]
    657c:	ldr	x10, [x9]
    6580:	str	w8, [x10, #668]
    6584:	ldr	x28, [sp, #368]
    6588:	ldp	x29, x30, [sp, #352]
    658c:	add	sp, sp, #0x180
    6590:	ret
    6594:	sub	sp, sp, #0x100
    6598:	stp	x29, x30, [sp, #240]
    659c:	add	x29, sp, #0xf0
    65a0:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
    65a4:	ldr	x8, [x8, #4016]
    65a8:	stur	x0, [x29, #-8]
    65ac:	ldur	x9, [x29, #-8]
    65b0:	ldr	x9, [x9, #72]
    65b4:	str	x9, [sp, #120]
    65b8:	ldur	x9, [x29, #-8]
    65bc:	ldr	w10, [x9, #656]
    65c0:	cmp	w10, #0x3
    65c4:	str	x8, [sp, #24]
    65c8:	b.lt	65f8 <BZ2_compressBlock@@Base+0x920>  // b.tstop
    65cc:	ldr	x8, [sp, #24]
    65d0:	ldr	x0, [x8]
    65d4:	ldur	x9, [x29, #-8]
    65d8:	ldr	w2, [x9, #108]
    65dc:	ldur	x9, [x29, #-8]
    65e0:	ldr	w3, [x9, #668]
    65e4:	ldur	x9, [x29, #-8]
    65e8:	ldr	w4, [x9, #124]
    65ec:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    65f0:	add	x1, x1, #0xabd
    65f4:	bl	16e0 <fprintf@plt>
    65f8:	ldur	x8, [x29, #-8]
    65fc:	ldr	w9, [x8, #124]
    6600:	add	w9, w9, #0x2
    6604:	stur	w9, [x29, #-56]
    6608:	stur	wzr, [x29, #-16]
    660c:	ldur	w8, [x29, #-16]
    6610:	cmp	w8, #0x6
    6614:	b.ge	6678 <BZ2_compressBlock@@Base+0x9a0>  // b.tcont
    6618:	stur	wzr, [x29, #-12]
    661c:	ldur	w8, [x29, #-12]
    6620:	ldur	w9, [x29, #-56]
    6624:	cmp	w8, w9
    6628:	b.ge	6668 <BZ2_compressBlock@@Base+0x990>  // b.tcont
    662c:	ldur	x8, [x29, #-8]
    6630:	mov	x9, #0x934c                	// #37708
    6634:	add	x8, x8, x9
    6638:	ldursw	x9, [x29, #-16]
    663c:	mov	x10, #0x102                 	// #258
    6640:	mul	x9, x10, x9
    6644:	add	x8, x8, x9
    6648:	ldursw	x9, [x29, #-12]
    664c:	add	x8, x8, x9
    6650:	mov	w11, #0xf                   	// #15
    6654:	strb	w11, [x8]
    6658:	ldur	w8, [x29, #-12]
    665c:	add	w8, w8, #0x1
    6660:	stur	w8, [x29, #-12]
    6664:	b	661c <BZ2_compressBlock@@Base+0x944>
    6668:	ldur	w8, [x29, #-16]
    666c:	add	w8, w8, #0x1
    6670:	stur	w8, [x29, #-16]
    6674:	b	660c <BZ2_compressBlock@@Base+0x934>
    6678:	ldur	x8, [x29, #-8]
    667c:	ldr	w9, [x8, #668]
    6680:	cmp	w9, #0x0
    6684:	cset	w9, gt
    6688:	tbnz	w9, #0, 6694 <BZ2_compressBlock@@Base+0x9bc>
    668c:	mov	w0, #0xbb9                 	// #3001
    6690:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    6694:	ldur	x8, [x29, #-8]
    6698:	ldr	w9, [x8, #668]
    669c:	cmp	w9, #0xc8
    66a0:	b.ge	66b0 <BZ2_compressBlock@@Base+0x9d8>  // b.tcont
    66a4:	mov	w8, #0x2                   	// #2
    66a8:	stur	w8, [x29, #-72]
    66ac:	b	670c <BZ2_compressBlock@@Base+0xa34>
    66b0:	ldur	x8, [x29, #-8]
    66b4:	ldr	w9, [x8, #668]
    66b8:	cmp	w9, #0x258
    66bc:	b.ge	66cc <BZ2_compressBlock@@Base+0x9f4>  // b.tcont
    66c0:	mov	w8, #0x3                   	// #3
    66c4:	stur	w8, [x29, #-72]
    66c8:	b	670c <BZ2_compressBlock@@Base+0xa34>
    66cc:	ldur	x8, [x29, #-8]
    66d0:	ldr	w9, [x8, #668]
    66d4:	cmp	w9, #0x4b0
    66d8:	b.ge	66e8 <BZ2_compressBlock@@Base+0xa10>  // b.tcont
    66dc:	mov	w8, #0x4                   	// #4
    66e0:	stur	w8, [x29, #-72]
    66e4:	b	670c <BZ2_compressBlock@@Base+0xa34>
    66e8:	ldur	x8, [x29, #-8]
    66ec:	ldr	w9, [x8, #668]
    66f0:	cmp	w9, #0x960
    66f4:	b.ge	6704 <BZ2_compressBlock@@Base+0xa2c>  // b.tcont
    66f8:	mov	w8, #0x5                   	// #5
    66fc:	stur	w8, [x29, #-72]
    6700:	b	670c <BZ2_compressBlock@@Base+0xa34>
    6704:	mov	w8, #0x6                   	// #6
    6708:	stur	w8, [x29, #-72]
    670c:	ldur	w8, [x29, #-72]
    6710:	str	w8, [sp, #116]
    6714:	ldur	x9, [x29, #-8]
    6718:	ldr	w8, [x9, #668]
    671c:	str	w8, [sp, #112]
    6720:	stur	wzr, [x29, #-28]
    6724:	ldr	w8, [sp, #116]
    6728:	cmp	w8, #0x0
    672c:	cset	w8, le
    6730:	tbnz	w8, #0, 6978 <BZ2_compressBlock@@Base+0xca0>
    6734:	ldr	w8, [sp, #112]
    6738:	ldr	w9, [sp, #116]
    673c:	sdiv	w8, w8, w9
    6740:	str	w8, [sp, #108]
    6744:	ldur	w8, [x29, #-28]
    6748:	subs	w8, w8, #0x1
    674c:	stur	w8, [x29, #-32]
    6750:	str	wzr, [sp, #104]
    6754:	ldr	w8, [sp, #104]
    6758:	ldr	w9, [sp, #108]
    675c:	mov	w10, #0x0                   	// #0
    6760:	cmp	w8, w9
    6764:	str	w10, [sp, #20]
    6768:	b.ge	6784 <BZ2_compressBlock@@Base+0xaac>  // b.tcont
    676c:	ldur	w8, [x29, #-32]
    6770:	ldur	w9, [x29, #-56]
    6774:	subs	w9, w9, #0x1
    6778:	cmp	w8, w9
    677c:	cset	w8, lt  // lt = tstop
    6780:	str	w8, [sp, #20]
    6784:	ldr	w8, [sp, #20]
    6788:	tbnz	w8, #0, 6790 <BZ2_compressBlock@@Base+0xab8>
    678c:	b	67bc <BZ2_compressBlock@@Base+0xae4>
    6790:	ldur	w8, [x29, #-32]
    6794:	add	w8, w8, #0x1
    6798:	stur	w8, [x29, #-32]
    679c:	ldur	x9, [x29, #-8]
    67a0:	add	x9, x9, #0x2a0
    67a4:	ldursw	x10, [x29, #-32]
    67a8:	ldr	w8, [x9, x10, lsl #2]
    67ac:	ldr	w11, [sp, #104]
    67b0:	add	w8, w11, w8
    67b4:	str	w8, [sp, #104]
    67b8:	b	6754 <BZ2_compressBlock@@Base+0xa7c>
    67bc:	ldur	w8, [x29, #-32]
    67c0:	ldur	w9, [x29, #-28]
    67c4:	cmp	w8, w9
    67c8:	b.le	6834 <BZ2_compressBlock@@Base+0xb5c>
    67cc:	ldr	w8, [sp, #116]
    67d0:	ldur	w9, [x29, #-72]
    67d4:	cmp	w8, w9
    67d8:	b.eq	6834 <BZ2_compressBlock@@Base+0xb5c>  // b.none
    67dc:	ldr	w8, [sp, #116]
    67e0:	cmp	w8, #0x1
    67e4:	b.eq	6834 <BZ2_compressBlock@@Base+0xb5c>  // b.none
    67e8:	ldur	w8, [x29, #-72]
    67ec:	ldr	w9, [sp, #116]
    67f0:	subs	w8, w8, w9
    67f4:	mov	w9, #0x2                   	// #2
    67f8:	sdiv	w10, w8, w9
    67fc:	mul	w9, w10, w9
    6800:	subs	w8, w8, w9
    6804:	cmp	w8, #0x1
    6808:	b.ne	6834 <BZ2_compressBlock@@Base+0xb5c>  // b.any
    680c:	ldur	x8, [x29, #-8]
    6810:	add	x8, x8, #0x2a0
    6814:	ldursw	x9, [x29, #-32]
    6818:	ldr	w10, [x8, x9, lsl #2]
    681c:	ldr	w11, [sp, #104]
    6820:	subs	w10, w11, w10
    6824:	str	w10, [sp, #104]
    6828:	ldur	w10, [x29, #-32]
    682c:	subs	w10, w10, #0x1
    6830:	stur	w10, [x29, #-32]
    6834:	ldur	x8, [x29, #-8]
    6838:	ldr	w9, [x8, #656]
    683c:	cmp	w9, #0x3
    6840:	b.lt	6894 <BZ2_compressBlock@@Base+0xbbc>  // b.tstop
    6844:	ldr	x8, [sp, #24]
    6848:	ldr	x0, [x8]
    684c:	ldr	w2, [sp, #116]
    6850:	ldur	w3, [x29, #-28]
    6854:	ldur	w4, [x29, #-32]
    6858:	ldr	w5, [sp, #104]
    685c:	ldr	w9, [sp, #104]
    6860:	scvtf	s0, w9
    6864:	fcvt	d1, s0
    6868:	mov	x10, #0x4059000000000000    	// #4636737291354636288
    686c:	fmov	d2, x10
    6870:	fmul	d1, d2, d1
    6874:	ldur	x10, [x29, #-8]
    6878:	ldr	w9, [x10, #668]
    687c:	scvtf	s0, w9
    6880:	fcvt	d2, s0
    6884:	fdiv	d0, d1, d2
    6888:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    688c:	add	x1, x1, #0xafd
    6890:	bl	16e0 <fprintf@plt>
    6894:	stur	wzr, [x29, #-12]
    6898:	ldur	w8, [x29, #-12]
    689c:	ldur	w9, [x29, #-56]
    68a0:	cmp	w8, w9
    68a4:	b.ge	694c <BZ2_compressBlock@@Base+0xc74>  // b.tcont
    68a8:	ldur	w8, [x29, #-12]
    68ac:	ldur	w9, [x29, #-28]
    68b0:	cmp	w8, w9
    68b4:	b.lt	6904 <BZ2_compressBlock@@Base+0xc2c>  // b.tstop
    68b8:	ldur	w8, [x29, #-12]
    68bc:	ldur	w9, [x29, #-32]
    68c0:	cmp	w8, w9
    68c4:	b.gt	6904 <BZ2_compressBlock@@Base+0xc2c>
    68c8:	ldur	x8, [x29, #-8]
    68cc:	mov	x9, #0x934c                	// #37708
    68d0:	add	x8, x8, x9
    68d4:	ldr	w10, [sp, #116]
    68d8:	subs	w10, w10, #0x1
    68dc:	mov	w0, w10
    68e0:	sxtw	x9, w0
    68e4:	mov	x11, #0x102                 	// #258
    68e8:	mul	x9, x11, x9
    68ec:	add	x8, x8, x9
    68f0:	ldursw	x9, [x29, #-12]
    68f4:	add	x8, x8, x9
    68f8:	mov	w10, #0x0                   	// #0
    68fc:	strb	w10, [x8]
    6900:	b	693c <BZ2_compressBlock@@Base+0xc64>
    6904:	ldur	x8, [x29, #-8]
    6908:	mov	x9, #0x934c                	// #37708
    690c:	add	x8, x8, x9
    6910:	ldr	w10, [sp, #116]
    6914:	subs	w10, w10, #0x1
    6918:	mov	w0, w10
    691c:	sxtw	x9, w0
    6920:	mov	x11, #0x102                 	// #258
    6924:	mul	x9, x11, x9
    6928:	add	x8, x8, x9
    692c:	ldursw	x9, [x29, #-12]
    6930:	add	x8, x8, x9
    6934:	mov	w10, #0xf                   	// #15
    6938:	strb	w10, [x8]
    693c:	ldur	w8, [x29, #-12]
    6940:	add	w8, w8, #0x1
    6944:	stur	w8, [x29, #-12]
    6948:	b	6898 <BZ2_compressBlock@@Base+0xbc0>
    694c:	ldr	w8, [sp, #116]
    6950:	subs	w8, w8, #0x1
    6954:	str	w8, [sp, #116]
    6958:	ldur	w8, [x29, #-32]
    695c:	add	w8, w8, #0x1
    6960:	stur	w8, [x29, #-28]
    6964:	ldr	w8, [sp, #104]
    6968:	ldr	w9, [sp, #112]
    696c:	subs	w8, w9, w8
    6970:	str	w8, [sp, #112]
    6974:	b	6724 <BZ2_compressBlock@@Base+0xa4c>
    6978:	stur	wzr, [x29, #-48]
    697c:	ldur	w8, [x29, #-48]
    6980:	cmp	w8, #0x4
    6984:	b.ge	98ec <BZ2_compressBlock@@Base+0x3c14>  // b.tcont
    6988:	stur	wzr, [x29, #-16]
    698c:	ldur	w8, [x29, #-16]
    6990:	ldur	w9, [x29, #-72]
    6994:	cmp	w8, w9
    6998:	b.ge	69bc <BZ2_compressBlock@@Base+0xce4>  // b.tcont
    699c:	ldursw	x8, [x29, #-16]
    69a0:	sub	x9, x29, #0x70
    69a4:	mov	w10, wzr
    69a8:	str	w10, [x9, x8, lsl #2]
    69ac:	ldur	w8, [x29, #-16]
    69b0:	add	w8, w8, #0x1
    69b4:	stur	w8, [x29, #-16]
    69b8:	b	698c <BZ2_compressBlock@@Base+0xcb4>
    69bc:	stur	wzr, [x29, #-16]
    69c0:	ldur	w8, [x29, #-16]
    69c4:	ldur	w9, [x29, #-72]
    69c8:	cmp	w8, w9
    69cc:	b.ge	6a2c <BZ2_compressBlock@@Base+0xd54>  // b.tcont
    69d0:	stur	wzr, [x29, #-12]
    69d4:	ldur	w8, [x29, #-12]
    69d8:	ldur	w9, [x29, #-56]
    69dc:	cmp	w8, w9
    69e0:	b.ge	6a1c <BZ2_compressBlock@@Base+0xd44>  // b.tcont
    69e4:	ldur	x8, [x29, #-8]
    69e8:	mov	x9, #0xb188                	// #45448
    69ec:	add	x8, x8, x9
    69f0:	ldursw	x9, [x29, #-16]
    69f4:	mov	x10, #0x408                 	// #1032
    69f8:	mul	x9, x10, x9
    69fc:	add	x8, x8, x9
    6a00:	ldursw	x9, [x29, #-12]
    6a04:	mov	w11, wzr
    6a08:	str	w11, [x8, x9, lsl #2]
    6a0c:	ldur	w8, [x29, #-12]
    6a10:	add	w8, w8, #0x1
    6a14:	stur	w8, [x29, #-12]
    6a18:	b	69d4 <BZ2_compressBlock@@Base+0xcfc>
    6a1c:	ldur	w8, [x29, #-16]
    6a20:	add	w8, w8, #0x1
    6a24:	stur	w8, [x29, #-16]
    6a28:	b	69c0 <BZ2_compressBlock@@Base+0xce8>
    6a2c:	ldur	w8, [x29, #-72]
    6a30:	cmp	w8, #0x6
    6a34:	b.ne	6b2c <BZ2_compressBlock@@Base+0xe54>  // b.any
    6a38:	stur	wzr, [x29, #-12]
    6a3c:	ldur	w8, [x29, #-12]
    6a40:	ldur	w9, [x29, #-56]
    6a44:	cmp	w8, w9
    6a48:	b.ge	6b2c <BZ2_compressBlock@@Base+0xe54>  // b.tcont
    6a4c:	ldur	x8, [x29, #-8]
    6a50:	mov	x9, #0x934c                	// #37708
    6a54:	mov	x10, #0x944e                	// #37966
    6a58:	add	x8, x8, x10
    6a5c:	ldursw	x10, [x29, #-12]
    6a60:	ldrb	w11, [x8, x10]
    6a64:	ldur	x8, [x29, #-8]
    6a68:	add	x8, x8, x9
    6a6c:	ldursw	x9, [x29, #-12]
    6a70:	ldrb	w12, [x8, x9]
    6a74:	orr	w11, w12, w11, lsl #16
    6a78:	ldur	x8, [x29, #-8]
    6a7c:	mov	x9, #0xc9b8                	// #51640
    6a80:	add	x8, x8, x9
    6a84:	ldursw	x10, [x29, #-12]
    6a88:	mov	x13, #0x10                  	// #16
    6a8c:	mul	x10, x13, x10
    6a90:	str	w11, [x8, x10]
    6a94:	ldur	x8, [x29, #-8]
    6a98:	mov	x10, #0x9652                	// #38482
    6a9c:	add	x8, x8, x10
    6aa0:	ldursw	x10, [x29, #-12]
    6aa4:	ldrb	w11, [x8, x10]
    6aa8:	ldur	x8, [x29, #-8]
    6aac:	mov	x10, #0x9550                	// #38224
    6ab0:	add	x8, x8, x10
    6ab4:	ldursw	x10, [x29, #-12]
    6ab8:	ldrb	w12, [x8, x10]
    6abc:	orr	w11, w12, w11, lsl #16
    6ac0:	ldur	x8, [x29, #-8]
    6ac4:	add	x8, x8, x9
    6ac8:	ldursw	x10, [x29, #-12]
    6acc:	mul	x10, x13, x10
    6ad0:	add	x8, x8, x10
    6ad4:	str	w11, [x8, #4]
    6ad8:	ldur	x8, [x29, #-8]
    6adc:	mov	x10, #0x9856                	// #38998
    6ae0:	add	x8, x8, x10
    6ae4:	ldursw	x10, [x29, #-12]
    6ae8:	ldrb	w11, [x8, x10]
    6aec:	ldur	x8, [x29, #-8]
    6af0:	mov	x10, #0x9754                	// #38740
    6af4:	add	x8, x8, x10
    6af8:	ldursw	x10, [x29, #-12]
    6afc:	ldrb	w12, [x8, x10]
    6b00:	orr	w11, w12, w11, lsl #16
    6b04:	ldur	x8, [x29, #-8]
    6b08:	add	x8, x8, x9
    6b0c:	ldursw	x9, [x29, #-12]
    6b10:	mul	x9, x13, x9
    6b14:	add	x8, x8, x9
    6b18:	str	w11, [x8, #8]
    6b1c:	ldur	w8, [x29, #-12]
    6b20:	add	w8, w8, #0x1
    6b24:	stur	w8, [x29, #-12]
    6b28:	b	6a3c <BZ2_compressBlock@@Base+0xd64>
    6b2c:	stur	wzr, [x29, #-52]
    6b30:	stur	wzr, [x29, #-36]
    6b34:	stur	wzr, [x29, #-28]
    6b38:	ldur	w8, [x29, #-28]
    6b3c:	ldur	x9, [x29, #-8]
    6b40:	ldr	w10, [x9, #668]
    6b44:	cmp	w8, w10
    6b48:	b.lt	6b50 <BZ2_compressBlock@@Base+0xe78>  // b.tstop
    6b4c:	b	97e4 <BZ2_compressBlock@@Base+0x3b0c>
    6b50:	ldur	w8, [x29, #-28]
    6b54:	add	w8, w8, #0x32
    6b58:	subs	w8, w8, #0x1
    6b5c:	stur	w8, [x29, #-32]
    6b60:	ldur	w8, [x29, #-32]
    6b64:	ldur	x9, [x29, #-8]
    6b68:	ldr	w10, [x9, #668]
    6b6c:	cmp	w8, w10
    6b70:	b.lt	6b84 <BZ2_compressBlock@@Base+0xeac>  // b.tstop
    6b74:	ldur	x8, [x29, #-8]
    6b78:	ldr	w9, [x8, #668]
    6b7c:	subs	w9, w9, #0x1
    6b80:	stur	w9, [x29, #-32]
    6b84:	stur	wzr, [x29, #-16]
    6b88:	ldur	w8, [x29, #-16]
    6b8c:	ldur	w9, [x29, #-72]
    6b90:	cmp	w8, w9
    6b94:	b.ge	6bc4 <BZ2_compressBlock@@Base+0xeec>  // b.tcont
    6b98:	ldursw	x8, [x29, #-16]
    6b9c:	mov	x9, #0x2                   	// #2
    6ba0:	mul	x8, x9, x8
    6ba4:	sub	x9, x29, #0x58
    6ba8:	add	x8, x9, x8
    6bac:	mov	w10, #0x0                   	// #0
    6bb0:	strh	w10, [x8]
    6bb4:	ldur	w8, [x29, #-16]
    6bb8:	add	w8, w8, #0x1
    6bbc:	stur	w8, [x29, #-16]
    6bc0:	b	6b88 <BZ2_compressBlock@@Base+0xeb0>
    6bc4:	ldur	w8, [x29, #-72]
    6bc8:	cmp	w8, #0x6
    6bcc:	b.ne	8a0c <BZ2_compressBlock@@Base+0x2d34>  // b.any
    6bd0:	ldur	w8, [x29, #-32]
    6bd4:	ldur	w9, [x29, #-28]
    6bd8:	subs	w8, w8, w9
    6bdc:	add	w8, w8, #0x1
    6be0:	mov	w9, #0x32                  	// #50
    6be4:	cmp	w9, w8
    6be8:	b.ne	8a0c <BZ2_compressBlock@@Base+0x2d34>  // b.any
    6bec:	str	wzr, [sp, #92]
    6bf0:	str	wzr, [sp, #96]
    6bf4:	str	wzr, [sp, #100]
    6bf8:	ldr	x8, [sp, #120]
    6bfc:	ldur	w9, [x29, #-28]
    6c00:	add	w9, w9, #0x0
    6c04:	mov	w0, w9
    6c08:	sxtw	x10, w0
    6c0c:	mov	x11, #0x2                   	// #2
    6c10:	mul	x10, x11, x10
    6c14:	add	x8, x8, x10
    6c18:	ldrh	w9, [x8]
    6c1c:	strh	w9, [sp, #90]
    6c20:	ldur	x8, [x29, #-8]
    6c24:	mov	x10, #0xc9b8                	// #51640
    6c28:	add	x8, x8, x10
    6c2c:	ldrh	w9, [sp, #90]
    6c30:	mov	w12, w9
    6c34:	mov	x13, #0x10                  	// #16
    6c38:	mul	x12, x13, x12
    6c3c:	ldr	w9, [x8, x12]
    6c40:	ldr	w14, [sp, #100]
    6c44:	add	w9, w14, w9
    6c48:	str	w9, [sp, #100]
    6c4c:	ldur	x8, [x29, #-8]
    6c50:	add	x8, x8, x10
    6c54:	ldrh	w9, [sp, #90]
    6c58:	mov	w12, w9
    6c5c:	mul	x12, x13, x12
    6c60:	add	x8, x8, x12
    6c64:	ldr	w9, [x8, #4]
    6c68:	ldr	w14, [sp, #96]
    6c6c:	add	w9, w14, w9
    6c70:	str	w9, [sp, #96]
    6c74:	ldur	x8, [x29, #-8]
    6c78:	add	x8, x8, x10
    6c7c:	ldrh	w9, [sp, #90]
    6c80:	mov	w12, w9
    6c84:	mul	x12, x13, x12
    6c88:	add	x8, x8, x12
    6c8c:	ldr	w9, [x8, #8]
    6c90:	ldr	w14, [sp, #92]
    6c94:	add	w9, w14, w9
    6c98:	str	w9, [sp, #92]
    6c9c:	ldr	x8, [sp, #120]
    6ca0:	ldur	w9, [x29, #-28]
    6ca4:	add	w9, w9, #0x1
    6ca8:	mov	w0, w9
    6cac:	sxtw	x12, w0
    6cb0:	mul	x12, x11, x12
    6cb4:	add	x8, x8, x12
    6cb8:	ldrh	w9, [x8]
    6cbc:	strh	w9, [sp, #90]
    6cc0:	ldur	x8, [x29, #-8]
    6cc4:	add	x8, x8, x10
    6cc8:	ldrh	w9, [sp, #90]
    6ccc:	mov	w12, w9
    6cd0:	mul	x12, x13, x12
    6cd4:	ldr	w9, [x8, x12]
    6cd8:	ldr	w14, [sp, #100]
    6cdc:	add	w9, w14, w9
    6ce0:	str	w9, [sp, #100]
    6ce4:	ldur	x8, [x29, #-8]
    6ce8:	add	x8, x8, x10
    6cec:	ldrh	w9, [sp, #90]
    6cf0:	mov	w12, w9
    6cf4:	mul	x12, x13, x12
    6cf8:	add	x8, x8, x12
    6cfc:	ldr	w9, [x8, #4]
    6d00:	ldr	w14, [sp, #96]
    6d04:	add	w9, w14, w9
    6d08:	str	w9, [sp, #96]
    6d0c:	ldur	x8, [x29, #-8]
    6d10:	add	x8, x8, x10
    6d14:	ldrh	w9, [sp, #90]
    6d18:	mov	w12, w9
    6d1c:	mul	x12, x13, x12
    6d20:	add	x8, x8, x12
    6d24:	ldr	w9, [x8, #8]
    6d28:	ldr	w14, [sp, #92]
    6d2c:	add	w9, w14, w9
    6d30:	str	w9, [sp, #92]
    6d34:	ldr	x8, [sp, #120]
    6d38:	ldur	w9, [x29, #-28]
    6d3c:	add	w9, w9, #0x2
    6d40:	mov	w0, w9
    6d44:	sxtw	x12, w0
    6d48:	mul	x12, x11, x12
    6d4c:	add	x8, x8, x12
    6d50:	ldrh	w9, [x8]
    6d54:	strh	w9, [sp, #90]
    6d58:	ldur	x8, [x29, #-8]
    6d5c:	add	x8, x8, x10
    6d60:	ldrh	w9, [sp, #90]
    6d64:	mov	w12, w9
    6d68:	mul	x12, x13, x12
    6d6c:	ldr	w9, [x8, x12]
    6d70:	ldr	w14, [sp, #100]
    6d74:	add	w9, w14, w9
    6d78:	str	w9, [sp, #100]
    6d7c:	ldur	x8, [x29, #-8]
    6d80:	add	x8, x8, x10
    6d84:	ldrh	w9, [sp, #90]
    6d88:	mov	w12, w9
    6d8c:	mul	x12, x13, x12
    6d90:	add	x8, x8, x12
    6d94:	ldr	w9, [x8, #4]
    6d98:	ldr	w14, [sp, #96]
    6d9c:	add	w9, w14, w9
    6da0:	str	w9, [sp, #96]
    6da4:	ldur	x8, [x29, #-8]
    6da8:	add	x8, x8, x10
    6dac:	ldrh	w9, [sp, #90]
    6db0:	mov	w12, w9
    6db4:	mul	x12, x13, x12
    6db8:	add	x8, x8, x12
    6dbc:	ldr	w9, [x8, #8]
    6dc0:	ldr	w14, [sp, #92]
    6dc4:	add	w9, w14, w9
    6dc8:	str	w9, [sp, #92]
    6dcc:	ldr	x8, [sp, #120]
    6dd0:	ldur	w9, [x29, #-28]
    6dd4:	add	w9, w9, #0x3
    6dd8:	mov	w0, w9
    6ddc:	sxtw	x12, w0
    6de0:	mul	x12, x11, x12
    6de4:	add	x8, x8, x12
    6de8:	ldrh	w9, [x8]
    6dec:	strh	w9, [sp, #90]
    6df0:	ldur	x8, [x29, #-8]
    6df4:	add	x8, x8, x10
    6df8:	ldrh	w9, [sp, #90]
    6dfc:	mov	w12, w9
    6e00:	mul	x12, x13, x12
    6e04:	ldr	w9, [x8, x12]
    6e08:	ldr	w14, [sp, #100]
    6e0c:	add	w9, w14, w9
    6e10:	str	w9, [sp, #100]
    6e14:	ldur	x8, [x29, #-8]
    6e18:	add	x8, x8, x10
    6e1c:	ldrh	w9, [sp, #90]
    6e20:	mov	w12, w9
    6e24:	mul	x12, x13, x12
    6e28:	add	x8, x8, x12
    6e2c:	ldr	w9, [x8, #4]
    6e30:	ldr	w14, [sp, #96]
    6e34:	add	w9, w14, w9
    6e38:	str	w9, [sp, #96]
    6e3c:	ldur	x8, [x29, #-8]
    6e40:	add	x8, x8, x10
    6e44:	ldrh	w9, [sp, #90]
    6e48:	mov	w12, w9
    6e4c:	mul	x12, x13, x12
    6e50:	add	x8, x8, x12
    6e54:	ldr	w9, [x8, #8]
    6e58:	ldr	w14, [sp, #92]
    6e5c:	add	w9, w14, w9
    6e60:	str	w9, [sp, #92]
    6e64:	ldr	x8, [sp, #120]
    6e68:	ldur	w9, [x29, #-28]
    6e6c:	add	w9, w9, #0x4
    6e70:	mov	w0, w9
    6e74:	sxtw	x12, w0
    6e78:	mul	x12, x11, x12
    6e7c:	add	x8, x8, x12
    6e80:	ldrh	w9, [x8]
    6e84:	strh	w9, [sp, #90]
    6e88:	ldur	x8, [x29, #-8]
    6e8c:	add	x8, x8, x10
    6e90:	ldrh	w9, [sp, #90]
    6e94:	mov	w12, w9
    6e98:	mul	x12, x13, x12
    6e9c:	ldr	w9, [x8, x12]
    6ea0:	ldr	w14, [sp, #100]
    6ea4:	add	w9, w14, w9
    6ea8:	str	w9, [sp, #100]
    6eac:	ldur	x8, [x29, #-8]
    6eb0:	add	x8, x8, x10
    6eb4:	ldrh	w9, [sp, #90]
    6eb8:	mov	w12, w9
    6ebc:	mul	x12, x13, x12
    6ec0:	add	x8, x8, x12
    6ec4:	ldr	w9, [x8, #4]
    6ec8:	ldr	w14, [sp, #96]
    6ecc:	add	w9, w14, w9
    6ed0:	str	w9, [sp, #96]
    6ed4:	ldur	x8, [x29, #-8]
    6ed8:	add	x8, x8, x10
    6edc:	ldrh	w9, [sp, #90]
    6ee0:	mov	w12, w9
    6ee4:	mul	x12, x13, x12
    6ee8:	add	x8, x8, x12
    6eec:	ldr	w9, [x8, #8]
    6ef0:	ldr	w14, [sp, #92]
    6ef4:	add	w9, w14, w9
    6ef8:	str	w9, [sp, #92]
    6efc:	ldr	x8, [sp, #120]
    6f00:	ldur	w9, [x29, #-28]
    6f04:	add	w9, w9, #0x5
    6f08:	mov	w0, w9
    6f0c:	sxtw	x12, w0
    6f10:	mul	x12, x11, x12
    6f14:	add	x8, x8, x12
    6f18:	ldrh	w9, [x8]
    6f1c:	strh	w9, [sp, #90]
    6f20:	ldur	x8, [x29, #-8]
    6f24:	add	x8, x8, x10
    6f28:	ldrh	w9, [sp, #90]
    6f2c:	mov	w12, w9
    6f30:	mul	x12, x13, x12
    6f34:	ldr	w9, [x8, x12]
    6f38:	ldr	w14, [sp, #100]
    6f3c:	add	w9, w14, w9
    6f40:	str	w9, [sp, #100]
    6f44:	ldur	x8, [x29, #-8]
    6f48:	add	x8, x8, x10
    6f4c:	ldrh	w9, [sp, #90]
    6f50:	mov	w12, w9
    6f54:	mul	x12, x13, x12
    6f58:	add	x8, x8, x12
    6f5c:	ldr	w9, [x8, #4]
    6f60:	ldr	w14, [sp, #96]
    6f64:	add	w9, w14, w9
    6f68:	str	w9, [sp, #96]
    6f6c:	ldur	x8, [x29, #-8]
    6f70:	add	x8, x8, x10
    6f74:	ldrh	w9, [sp, #90]
    6f78:	mov	w12, w9
    6f7c:	mul	x12, x13, x12
    6f80:	add	x8, x8, x12
    6f84:	ldr	w9, [x8, #8]
    6f88:	ldr	w14, [sp, #92]
    6f8c:	add	w9, w14, w9
    6f90:	str	w9, [sp, #92]
    6f94:	ldr	x8, [sp, #120]
    6f98:	ldur	w9, [x29, #-28]
    6f9c:	add	w9, w9, #0x6
    6fa0:	mov	w0, w9
    6fa4:	sxtw	x12, w0
    6fa8:	mul	x12, x11, x12
    6fac:	add	x8, x8, x12
    6fb0:	ldrh	w9, [x8]
    6fb4:	strh	w9, [sp, #90]
    6fb8:	ldur	x8, [x29, #-8]
    6fbc:	add	x8, x8, x10
    6fc0:	ldrh	w9, [sp, #90]
    6fc4:	mov	w12, w9
    6fc8:	mul	x12, x13, x12
    6fcc:	ldr	w9, [x8, x12]
    6fd0:	ldr	w14, [sp, #100]
    6fd4:	add	w9, w14, w9
    6fd8:	str	w9, [sp, #100]
    6fdc:	ldur	x8, [x29, #-8]
    6fe0:	add	x8, x8, x10
    6fe4:	ldrh	w9, [sp, #90]
    6fe8:	mov	w12, w9
    6fec:	mul	x12, x13, x12
    6ff0:	add	x8, x8, x12
    6ff4:	ldr	w9, [x8, #4]
    6ff8:	ldr	w14, [sp, #96]
    6ffc:	add	w9, w14, w9
    7000:	str	w9, [sp, #96]
    7004:	ldur	x8, [x29, #-8]
    7008:	add	x8, x8, x10
    700c:	ldrh	w9, [sp, #90]
    7010:	mov	w12, w9
    7014:	mul	x12, x13, x12
    7018:	add	x8, x8, x12
    701c:	ldr	w9, [x8, #8]
    7020:	ldr	w14, [sp, #92]
    7024:	add	w9, w14, w9
    7028:	str	w9, [sp, #92]
    702c:	ldr	x8, [sp, #120]
    7030:	ldur	w9, [x29, #-28]
    7034:	add	w9, w9, #0x7
    7038:	mov	w0, w9
    703c:	sxtw	x12, w0
    7040:	mul	x12, x11, x12
    7044:	add	x8, x8, x12
    7048:	ldrh	w9, [x8]
    704c:	strh	w9, [sp, #90]
    7050:	ldur	x8, [x29, #-8]
    7054:	add	x8, x8, x10
    7058:	ldrh	w9, [sp, #90]
    705c:	mov	w12, w9
    7060:	mul	x12, x13, x12
    7064:	ldr	w9, [x8, x12]
    7068:	ldr	w14, [sp, #100]
    706c:	add	w9, w14, w9
    7070:	str	w9, [sp, #100]
    7074:	ldur	x8, [x29, #-8]
    7078:	add	x8, x8, x10
    707c:	ldrh	w9, [sp, #90]
    7080:	mov	w12, w9
    7084:	mul	x12, x13, x12
    7088:	add	x8, x8, x12
    708c:	ldr	w9, [x8, #4]
    7090:	ldr	w14, [sp, #96]
    7094:	add	w9, w14, w9
    7098:	str	w9, [sp, #96]
    709c:	ldur	x8, [x29, #-8]
    70a0:	add	x8, x8, x10
    70a4:	ldrh	w9, [sp, #90]
    70a8:	mov	w12, w9
    70ac:	mul	x12, x13, x12
    70b0:	add	x8, x8, x12
    70b4:	ldr	w9, [x8, #8]
    70b8:	ldr	w14, [sp, #92]
    70bc:	add	w9, w14, w9
    70c0:	str	w9, [sp, #92]
    70c4:	ldr	x8, [sp, #120]
    70c8:	ldur	w9, [x29, #-28]
    70cc:	add	w9, w9, #0x8
    70d0:	mov	w0, w9
    70d4:	sxtw	x12, w0
    70d8:	mul	x12, x11, x12
    70dc:	add	x8, x8, x12
    70e0:	ldrh	w9, [x8]
    70e4:	strh	w9, [sp, #90]
    70e8:	ldur	x8, [x29, #-8]
    70ec:	add	x8, x8, x10
    70f0:	ldrh	w9, [sp, #90]
    70f4:	mov	w12, w9
    70f8:	mul	x12, x13, x12
    70fc:	ldr	w9, [x8, x12]
    7100:	ldr	w14, [sp, #100]
    7104:	add	w9, w14, w9
    7108:	str	w9, [sp, #100]
    710c:	ldur	x8, [x29, #-8]
    7110:	add	x8, x8, x10
    7114:	ldrh	w9, [sp, #90]
    7118:	mov	w12, w9
    711c:	mul	x12, x13, x12
    7120:	add	x8, x8, x12
    7124:	ldr	w9, [x8, #4]
    7128:	ldr	w14, [sp, #96]
    712c:	add	w9, w14, w9
    7130:	str	w9, [sp, #96]
    7134:	ldur	x8, [x29, #-8]
    7138:	add	x8, x8, x10
    713c:	ldrh	w9, [sp, #90]
    7140:	mov	w12, w9
    7144:	mul	x12, x13, x12
    7148:	add	x8, x8, x12
    714c:	ldr	w9, [x8, #8]
    7150:	ldr	w14, [sp, #92]
    7154:	add	w9, w14, w9
    7158:	str	w9, [sp, #92]
    715c:	ldr	x8, [sp, #120]
    7160:	ldur	w9, [x29, #-28]
    7164:	add	w9, w9, #0x9
    7168:	mov	w0, w9
    716c:	sxtw	x12, w0
    7170:	mul	x12, x11, x12
    7174:	add	x8, x8, x12
    7178:	ldrh	w9, [x8]
    717c:	strh	w9, [sp, #90]
    7180:	ldur	x8, [x29, #-8]
    7184:	add	x8, x8, x10
    7188:	ldrh	w9, [sp, #90]
    718c:	mov	w12, w9
    7190:	mul	x12, x13, x12
    7194:	ldr	w9, [x8, x12]
    7198:	ldr	w14, [sp, #100]
    719c:	add	w9, w14, w9
    71a0:	str	w9, [sp, #100]
    71a4:	ldur	x8, [x29, #-8]
    71a8:	add	x8, x8, x10
    71ac:	ldrh	w9, [sp, #90]
    71b0:	mov	w12, w9
    71b4:	mul	x12, x13, x12
    71b8:	add	x8, x8, x12
    71bc:	ldr	w9, [x8, #4]
    71c0:	ldr	w14, [sp, #96]
    71c4:	add	w9, w14, w9
    71c8:	str	w9, [sp, #96]
    71cc:	ldur	x8, [x29, #-8]
    71d0:	add	x8, x8, x10
    71d4:	ldrh	w9, [sp, #90]
    71d8:	mov	w12, w9
    71dc:	mul	x12, x13, x12
    71e0:	add	x8, x8, x12
    71e4:	ldr	w9, [x8, #8]
    71e8:	ldr	w14, [sp, #92]
    71ec:	add	w9, w14, w9
    71f0:	str	w9, [sp, #92]
    71f4:	ldr	x8, [sp, #120]
    71f8:	ldur	w9, [x29, #-28]
    71fc:	add	w9, w9, #0xa
    7200:	mov	w0, w9
    7204:	sxtw	x12, w0
    7208:	mul	x12, x11, x12
    720c:	add	x8, x8, x12
    7210:	ldrh	w9, [x8]
    7214:	strh	w9, [sp, #90]
    7218:	ldur	x8, [x29, #-8]
    721c:	add	x8, x8, x10
    7220:	ldrh	w9, [sp, #90]
    7224:	mov	w12, w9
    7228:	mul	x12, x13, x12
    722c:	ldr	w9, [x8, x12]
    7230:	ldr	w14, [sp, #100]
    7234:	add	w9, w14, w9
    7238:	str	w9, [sp, #100]
    723c:	ldur	x8, [x29, #-8]
    7240:	add	x8, x8, x10
    7244:	ldrh	w9, [sp, #90]
    7248:	mov	w12, w9
    724c:	mul	x12, x13, x12
    7250:	add	x8, x8, x12
    7254:	ldr	w9, [x8, #4]
    7258:	ldr	w14, [sp, #96]
    725c:	add	w9, w14, w9
    7260:	str	w9, [sp, #96]
    7264:	ldur	x8, [x29, #-8]
    7268:	add	x8, x8, x10
    726c:	ldrh	w9, [sp, #90]
    7270:	mov	w12, w9
    7274:	mul	x12, x13, x12
    7278:	add	x8, x8, x12
    727c:	ldr	w9, [x8, #8]
    7280:	ldr	w14, [sp, #92]
    7284:	add	w9, w14, w9
    7288:	str	w9, [sp, #92]
    728c:	ldr	x8, [sp, #120]
    7290:	ldur	w9, [x29, #-28]
    7294:	add	w9, w9, #0xb
    7298:	mov	w0, w9
    729c:	sxtw	x12, w0
    72a0:	mul	x12, x11, x12
    72a4:	add	x8, x8, x12
    72a8:	ldrh	w9, [x8]
    72ac:	strh	w9, [sp, #90]
    72b0:	ldur	x8, [x29, #-8]
    72b4:	add	x8, x8, x10
    72b8:	ldrh	w9, [sp, #90]
    72bc:	mov	w12, w9
    72c0:	mul	x12, x13, x12
    72c4:	ldr	w9, [x8, x12]
    72c8:	ldr	w14, [sp, #100]
    72cc:	add	w9, w14, w9
    72d0:	str	w9, [sp, #100]
    72d4:	ldur	x8, [x29, #-8]
    72d8:	add	x8, x8, x10
    72dc:	ldrh	w9, [sp, #90]
    72e0:	mov	w12, w9
    72e4:	mul	x12, x13, x12
    72e8:	add	x8, x8, x12
    72ec:	ldr	w9, [x8, #4]
    72f0:	ldr	w14, [sp, #96]
    72f4:	add	w9, w14, w9
    72f8:	str	w9, [sp, #96]
    72fc:	ldur	x8, [x29, #-8]
    7300:	add	x8, x8, x10
    7304:	ldrh	w9, [sp, #90]
    7308:	mov	w12, w9
    730c:	mul	x12, x13, x12
    7310:	add	x8, x8, x12
    7314:	ldr	w9, [x8, #8]
    7318:	ldr	w14, [sp, #92]
    731c:	add	w9, w14, w9
    7320:	str	w9, [sp, #92]
    7324:	ldr	x8, [sp, #120]
    7328:	ldur	w9, [x29, #-28]
    732c:	add	w9, w9, #0xc
    7330:	mov	w0, w9
    7334:	sxtw	x12, w0
    7338:	mul	x12, x11, x12
    733c:	add	x8, x8, x12
    7340:	ldrh	w9, [x8]
    7344:	strh	w9, [sp, #90]
    7348:	ldur	x8, [x29, #-8]
    734c:	add	x8, x8, x10
    7350:	ldrh	w9, [sp, #90]
    7354:	mov	w12, w9
    7358:	mul	x12, x13, x12
    735c:	ldr	w9, [x8, x12]
    7360:	ldr	w14, [sp, #100]
    7364:	add	w9, w14, w9
    7368:	str	w9, [sp, #100]
    736c:	ldur	x8, [x29, #-8]
    7370:	add	x8, x8, x10
    7374:	ldrh	w9, [sp, #90]
    7378:	mov	w12, w9
    737c:	mul	x12, x13, x12
    7380:	add	x8, x8, x12
    7384:	ldr	w9, [x8, #4]
    7388:	ldr	w14, [sp, #96]
    738c:	add	w9, w14, w9
    7390:	str	w9, [sp, #96]
    7394:	ldur	x8, [x29, #-8]
    7398:	add	x8, x8, x10
    739c:	ldrh	w9, [sp, #90]
    73a0:	mov	w12, w9
    73a4:	mul	x12, x13, x12
    73a8:	add	x8, x8, x12
    73ac:	ldr	w9, [x8, #8]
    73b0:	ldr	w14, [sp, #92]
    73b4:	add	w9, w14, w9
    73b8:	str	w9, [sp, #92]
    73bc:	ldr	x8, [sp, #120]
    73c0:	ldur	w9, [x29, #-28]
    73c4:	add	w9, w9, #0xd
    73c8:	mov	w0, w9
    73cc:	sxtw	x12, w0
    73d0:	mul	x12, x11, x12
    73d4:	add	x8, x8, x12
    73d8:	ldrh	w9, [x8]
    73dc:	strh	w9, [sp, #90]
    73e0:	ldur	x8, [x29, #-8]
    73e4:	add	x8, x8, x10
    73e8:	ldrh	w9, [sp, #90]
    73ec:	mov	w12, w9
    73f0:	mul	x12, x13, x12
    73f4:	ldr	w9, [x8, x12]
    73f8:	ldr	w14, [sp, #100]
    73fc:	add	w9, w14, w9
    7400:	str	w9, [sp, #100]
    7404:	ldur	x8, [x29, #-8]
    7408:	add	x8, x8, x10
    740c:	ldrh	w9, [sp, #90]
    7410:	mov	w12, w9
    7414:	mul	x12, x13, x12
    7418:	add	x8, x8, x12
    741c:	ldr	w9, [x8, #4]
    7420:	ldr	w14, [sp, #96]
    7424:	add	w9, w14, w9
    7428:	str	w9, [sp, #96]
    742c:	ldur	x8, [x29, #-8]
    7430:	add	x8, x8, x10
    7434:	ldrh	w9, [sp, #90]
    7438:	mov	w12, w9
    743c:	mul	x12, x13, x12
    7440:	add	x8, x8, x12
    7444:	ldr	w9, [x8, #8]
    7448:	ldr	w14, [sp, #92]
    744c:	add	w9, w14, w9
    7450:	str	w9, [sp, #92]
    7454:	ldr	x8, [sp, #120]
    7458:	ldur	w9, [x29, #-28]
    745c:	add	w9, w9, #0xe
    7460:	mov	w0, w9
    7464:	sxtw	x12, w0
    7468:	mul	x12, x11, x12
    746c:	add	x8, x8, x12
    7470:	ldrh	w9, [x8]
    7474:	strh	w9, [sp, #90]
    7478:	ldur	x8, [x29, #-8]
    747c:	add	x8, x8, x10
    7480:	ldrh	w9, [sp, #90]
    7484:	mov	w12, w9
    7488:	mul	x12, x13, x12
    748c:	ldr	w9, [x8, x12]
    7490:	ldr	w14, [sp, #100]
    7494:	add	w9, w14, w9
    7498:	str	w9, [sp, #100]
    749c:	ldur	x8, [x29, #-8]
    74a0:	add	x8, x8, x10
    74a4:	ldrh	w9, [sp, #90]
    74a8:	mov	w12, w9
    74ac:	mul	x12, x13, x12
    74b0:	add	x8, x8, x12
    74b4:	ldr	w9, [x8, #4]
    74b8:	ldr	w14, [sp, #96]
    74bc:	add	w9, w14, w9
    74c0:	str	w9, [sp, #96]
    74c4:	ldur	x8, [x29, #-8]
    74c8:	add	x8, x8, x10
    74cc:	ldrh	w9, [sp, #90]
    74d0:	mov	w12, w9
    74d4:	mul	x12, x13, x12
    74d8:	add	x8, x8, x12
    74dc:	ldr	w9, [x8, #8]
    74e0:	ldr	w14, [sp, #92]
    74e4:	add	w9, w14, w9
    74e8:	str	w9, [sp, #92]
    74ec:	ldr	x8, [sp, #120]
    74f0:	ldur	w9, [x29, #-28]
    74f4:	add	w9, w9, #0xf
    74f8:	mov	w0, w9
    74fc:	sxtw	x12, w0
    7500:	mul	x12, x11, x12
    7504:	add	x8, x8, x12
    7508:	ldrh	w9, [x8]
    750c:	strh	w9, [sp, #90]
    7510:	ldur	x8, [x29, #-8]
    7514:	add	x8, x8, x10
    7518:	ldrh	w9, [sp, #90]
    751c:	mov	w12, w9
    7520:	mul	x12, x13, x12
    7524:	ldr	w9, [x8, x12]
    7528:	ldr	w14, [sp, #100]
    752c:	add	w9, w14, w9
    7530:	str	w9, [sp, #100]
    7534:	ldur	x8, [x29, #-8]
    7538:	add	x8, x8, x10
    753c:	ldrh	w9, [sp, #90]
    7540:	mov	w12, w9
    7544:	mul	x12, x13, x12
    7548:	add	x8, x8, x12
    754c:	ldr	w9, [x8, #4]
    7550:	ldr	w14, [sp, #96]
    7554:	add	w9, w14, w9
    7558:	str	w9, [sp, #96]
    755c:	ldur	x8, [x29, #-8]
    7560:	add	x8, x8, x10
    7564:	ldrh	w9, [sp, #90]
    7568:	mov	w12, w9
    756c:	mul	x12, x13, x12
    7570:	add	x8, x8, x12
    7574:	ldr	w9, [x8, #8]
    7578:	ldr	w14, [sp, #92]
    757c:	add	w9, w14, w9
    7580:	str	w9, [sp, #92]
    7584:	ldr	x8, [sp, #120]
    7588:	ldur	w9, [x29, #-28]
    758c:	add	w9, w9, #0x10
    7590:	mov	w0, w9
    7594:	sxtw	x12, w0
    7598:	mul	x12, x11, x12
    759c:	add	x8, x8, x12
    75a0:	ldrh	w9, [x8]
    75a4:	strh	w9, [sp, #90]
    75a8:	ldur	x8, [x29, #-8]
    75ac:	add	x8, x8, x10
    75b0:	ldrh	w9, [sp, #90]
    75b4:	mov	w12, w9
    75b8:	mul	x12, x13, x12
    75bc:	ldr	w9, [x8, x12]
    75c0:	ldr	w14, [sp, #100]
    75c4:	add	w9, w14, w9
    75c8:	str	w9, [sp, #100]
    75cc:	ldur	x8, [x29, #-8]
    75d0:	add	x8, x8, x10
    75d4:	ldrh	w9, [sp, #90]
    75d8:	mov	w12, w9
    75dc:	mul	x12, x13, x12
    75e0:	add	x8, x8, x12
    75e4:	ldr	w9, [x8, #4]
    75e8:	ldr	w14, [sp, #96]
    75ec:	add	w9, w14, w9
    75f0:	str	w9, [sp, #96]
    75f4:	ldur	x8, [x29, #-8]
    75f8:	add	x8, x8, x10
    75fc:	ldrh	w9, [sp, #90]
    7600:	mov	w12, w9
    7604:	mul	x12, x13, x12
    7608:	add	x8, x8, x12
    760c:	ldr	w9, [x8, #8]
    7610:	ldr	w14, [sp, #92]
    7614:	add	w9, w14, w9
    7618:	str	w9, [sp, #92]
    761c:	ldr	x8, [sp, #120]
    7620:	ldur	w9, [x29, #-28]
    7624:	add	w9, w9, #0x11
    7628:	mov	w0, w9
    762c:	sxtw	x12, w0
    7630:	mul	x12, x11, x12
    7634:	add	x8, x8, x12
    7638:	ldrh	w9, [x8]
    763c:	strh	w9, [sp, #90]
    7640:	ldur	x8, [x29, #-8]
    7644:	add	x8, x8, x10
    7648:	ldrh	w9, [sp, #90]
    764c:	mov	w12, w9
    7650:	mul	x12, x13, x12
    7654:	ldr	w9, [x8, x12]
    7658:	ldr	w14, [sp, #100]
    765c:	add	w9, w14, w9
    7660:	str	w9, [sp, #100]
    7664:	ldur	x8, [x29, #-8]
    7668:	add	x8, x8, x10
    766c:	ldrh	w9, [sp, #90]
    7670:	mov	w12, w9
    7674:	mul	x12, x13, x12
    7678:	add	x8, x8, x12
    767c:	ldr	w9, [x8, #4]
    7680:	ldr	w14, [sp, #96]
    7684:	add	w9, w14, w9
    7688:	str	w9, [sp, #96]
    768c:	ldur	x8, [x29, #-8]
    7690:	add	x8, x8, x10
    7694:	ldrh	w9, [sp, #90]
    7698:	mov	w12, w9
    769c:	mul	x12, x13, x12
    76a0:	add	x8, x8, x12
    76a4:	ldr	w9, [x8, #8]
    76a8:	ldr	w14, [sp, #92]
    76ac:	add	w9, w14, w9
    76b0:	str	w9, [sp, #92]
    76b4:	ldr	x8, [sp, #120]
    76b8:	ldur	w9, [x29, #-28]
    76bc:	add	w9, w9, #0x12
    76c0:	mov	w0, w9
    76c4:	sxtw	x12, w0
    76c8:	mul	x12, x11, x12
    76cc:	add	x8, x8, x12
    76d0:	ldrh	w9, [x8]
    76d4:	strh	w9, [sp, #90]
    76d8:	ldur	x8, [x29, #-8]
    76dc:	add	x8, x8, x10
    76e0:	ldrh	w9, [sp, #90]
    76e4:	mov	w12, w9
    76e8:	mul	x12, x13, x12
    76ec:	ldr	w9, [x8, x12]
    76f0:	ldr	w14, [sp, #100]
    76f4:	add	w9, w14, w9
    76f8:	str	w9, [sp, #100]
    76fc:	ldur	x8, [x29, #-8]
    7700:	add	x8, x8, x10
    7704:	ldrh	w9, [sp, #90]
    7708:	mov	w12, w9
    770c:	mul	x12, x13, x12
    7710:	add	x8, x8, x12
    7714:	ldr	w9, [x8, #4]
    7718:	ldr	w14, [sp, #96]
    771c:	add	w9, w14, w9
    7720:	str	w9, [sp, #96]
    7724:	ldur	x8, [x29, #-8]
    7728:	add	x8, x8, x10
    772c:	ldrh	w9, [sp, #90]
    7730:	mov	w12, w9
    7734:	mul	x12, x13, x12
    7738:	add	x8, x8, x12
    773c:	ldr	w9, [x8, #8]
    7740:	ldr	w14, [sp, #92]
    7744:	add	w9, w14, w9
    7748:	str	w9, [sp, #92]
    774c:	ldr	x8, [sp, #120]
    7750:	ldur	w9, [x29, #-28]
    7754:	add	w9, w9, #0x13
    7758:	mov	w0, w9
    775c:	sxtw	x12, w0
    7760:	mul	x12, x11, x12
    7764:	add	x8, x8, x12
    7768:	ldrh	w9, [x8]
    776c:	strh	w9, [sp, #90]
    7770:	ldur	x8, [x29, #-8]
    7774:	add	x8, x8, x10
    7778:	ldrh	w9, [sp, #90]
    777c:	mov	w12, w9
    7780:	mul	x12, x13, x12
    7784:	ldr	w9, [x8, x12]
    7788:	ldr	w14, [sp, #100]
    778c:	add	w9, w14, w9
    7790:	str	w9, [sp, #100]
    7794:	ldur	x8, [x29, #-8]
    7798:	add	x8, x8, x10
    779c:	ldrh	w9, [sp, #90]
    77a0:	mov	w12, w9
    77a4:	mul	x12, x13, x12
    77a8:	add	x8, x8, x12
    77ac:	ldr	w9, [x8, #4]
    77b0:	ldr	w14, [sp, #96]
    77b4:	add	w9, w14, w9
    77b8:	str	w9, [sp, #96]
    77bc:	ldur	x8, [x29, #-8]
    77c0:	add	x8, x8, x10
    77c4:	ldrh	w9, [sp, #90]
    77c8:	mov	w12, w9
    77cc:	mul	x12, x13, x12
    77d0:	add	x8, x8, x12
    77d4:	ldr	w9, [x8, #8]
    77d8:	ldr	w14, [sp, #92]
    77dc:	add	w9, w14, w9
    77e0:	str	w9, [sp, #92]
    77e4:	ldr	x8, [sp, #120]
    77e8:	ldur	w9, [x29, #-28]
    77ec:	add	w9, w9, #0x14
    77f0:	mov	w0, w9
    77f4:	sxtw	x12, w0
    77f8:	mul	x12, x11, x12
    77fc:	add	x8, x8, x12
    7800:	ldrh	w9, [x8]
    7804:	strh	w9, [sp, #90]
    7808:	ldur	x8, [x29, #-8]
    780c:	add	x8, x8, x10
    7810:	ldrh	w9, [sp, #90]
    7814:	mov	w12, w9
    7818:	mul	x12, x13, x12
    781c:	ldr	w9, [x8, x12]
    7820:	ldr	w14, [sp, #100]
    7824:	add	w9, w14, w9
    7828:	str	w9, [sp, #100]
    782c:	ldur	x8, [x29, #-8]
    7830:	add	x8, x8, x10
    7834:	ldrh	w9, [sp, #90]
    7838:	mov	w12, w9
    783c:	mul	x12, x13, x12
    7840:	add	x8, x8, x12
    7844:	ldr	w9, [x8, #4]
    7848:	ldr	w14, [sp, #96]
    784c:	add	w9, w14, w9
    7850:	str	w9, [sp, #96]
    7854:	ldur	x8, [x29, #-8]
    7858:	add	x8, x8, x10
    785c:	ldrh	w9, [sp, #90]
    7860:	mov	w12, w9
    7864:	mul	x12, x13, x12
    7868:	add	x8, x8, x12
    786c:	ldr	w9, [x8, #8]
    7870:	ldr	w14, [sp, #92]
    7874:	add	w9, w14, w9
    7878:	str	w9, [sp, #92]
    787c:	ldr	x8, [sp, #120]
    7880:	ldur	w9, [x29, #-28]
    7884:	add	w9, w9, #0x15
    7888:	mov	w0, w9
    788c:	sxtw	x12, w0
    7890:	mul	x12, x11, x12
    7894:	add	x8, x8, x12
    7898:	ldrh	w9, [x8]
    789c:	strh	w9, [sp, #90]
    78a0:	ldur	x8, [x29, #-8]
    78a4:	add	x8, x8, x10
    78a8:	ldrh	w9, [sp, #90]
    78ac:	mov	w12, w9
    78b0:	mul	x12, x13, x12
    78b4:	ldr	w9, [x8, x12]
    78b8:	ldr	w14, [sp, #100]
    78bc:	add	w9, w14, w9
    78c0:	str	w9, [sp, #100]
    78c4:	ldur	x8, [x29, #-8]
    78c8:	add	x8, x8, x10
    78cc:	ldrh	w9, [sp, #90]
    78d0:	mov	w12, w9
    78d4:	mul	x12, x13, x12
    78d8:	add	x8, x8, x12
    78dc:	ldr	w9, [x8, #4]
    78e0:	ldr	w14, [sp, #96]
    78e4:	add	w9, w14, w9
    78e8:	str	w9, [sp, #96]
    78ec:	ldur	x8, [x29, #-8]
    78f0:	add	x8, x8, x10
    78f4:	ldrh	w9, [sp, #90]
    78f8:	mov	w12, w9
    78fc:	mul	x12, x13, x12
    7900:	add	x8, x8, x12
    7904:	ldr	w9, [x8, #8]
    7908:	ldr	w14, [sp, #92]
    790c:	add	w9, w14, w9
    7910:	str	w9, [sp, #92]
    7914:	ldr	x8, [sp, #120]
    7918:	ldur	w9, [x29, #-28]
    791c:	add	w9, w9, #0x16
    7920:	mov	w0, w9
    7924:	sxtw	x12, w0
    7928:	mul	x12, x11, x12
    792c:	add	x8, x8, x12
    7930:	ldrh	w9, [x8]
    7934:	strh	w9, [sp, #90]
    7938:	ldur	x8, [x29, #-8]
    793c:	add	x8, x8, x10
    7940:	ldrh	w9, [sp, #90]
    7944:	mov	w12, w9
    7948:	mul	x12, x13, x12
    794c:	ldr	w9, [x8, x12]
    7950:	ldr	w14, [sp, #100]
    7954:	add	w9, w14, w9
    7958:	str	w9, [sp, #100]
    795c:	ldur	x8, [x29, #-8]
    7960:	add	x8, x8, x10
    7964:	ldrh	w9, [sp, #90]
    7968:	mov	w12, w9
    796c:	mul	x12, x13, x12
    7970:	add	x8, x8, x12
    7974:	ldr	w9, [x8, #4]
    7978:	ldr	w14, [sp, #96]
    797c:	add	w9, w14, w9
    7980:	str	w9, [sp, #96]
    7984:	ldur	x8, [x29, #-8]
    7988:	add	x8, x8, x10
    798c:	ldrh	w9, [sp, #90]
    7990:	mov	w12, w9
    7994:	mul	x12, x13, x12
    7998:	add	x8, x8, x12
    799c:	ldr	w9, [x8, #8]
    79a0:	ldr	w14, [sp, #92]
    79a4:	add	w9, w14, w9
    79a8:	str	w9, [sp, #92]
    79ac:	ldr	x8, [sp, #120]
    79b0:	ldur	w9, [x29, #-28]
    79b4:	add	w9, w9, #0x17
    79b8:	mov	w0, w9
    79bc:	sxtw	x12, w0
    79c0:	mul	x12, x11, x12
    79c4:	add	x8, x8, x12
    79c8:	ldrh	w9, [x8]
    79cc:	strh	w9, [sp, #90]
    79d0:	ldur	x8, [x29, #-8]
    79d4:	add	x8, x8, x10
    79d8:	ldrh	w9, [sp, #90]
    79dc:	mov	w12, w9
    79e0:	mul	x12, x13, x12
    79e4:	ldr	w9, [x8, x12]
    79e8:	ldr	w14, [sp, #100]
    79ec:	add	w9, w14, w9
    79f0:	str	w9, [sp, #100]
    79f4:	ldur	x8, [x29, #-8]
    79f8:	add	x8, x8, x10
    79fc:	ldrh	w9, [sp, #90]
    7a00:	mov	w12, w9
    7a04:	mul	x12, x13, x12
    7a08:	add	x8, x8, x12
    7a0c:	ldr	w9, [x8, #4]
    7a10:	ldr	w14, [sp, #96]
    7a14:	add	w9, w14, w9
    7a18:	str	w9, [sp, #96]
    7a1c:	ldur	x8, [x29, #-8]
    7a20:	add	x8, x8, x10
    7a24:	ldrh	w9, [sp, #90]
    7a28:	mov	w12, w9
    7a2c:	mul	x12, x13, x12
    7a30:	add	x8, x8, x12
    7a34:	ldr	w9, [x8, #8]
    7a38:	ldr	w14, [sp, #92]
    7a3c:	add	w9, w14, w9
    7a40:	str	w9, [sp, #92]
    7a44:	ldr	x8, [sp, #120]
    7a48:	ldur	w9, [x29, #-28]
    7a4c:	add	w9, w9, #0x18
    7a50:	mov	w0, w9
    7a54:	sxtw	x12, w0
    7a58:	mul	x12, x11, x12
    7a5c:	add	x8, x8, x12
    7a60:	ldrh	w9, [x8]
    7a64:	strh	w9, [sp, #90]
    7a68:	ldur	x8, [x29, #-8]
    7a6c:	add	x8, x8, x10
    7a70:	ldrh	w9, [sp, #90]
    7a74:	mov	w12, w9
    7a78:	mul	x12, x13, x12
    7a7c:	ldr	w9, [x8, x12]
    7a80:	ldr	w14, [sp, #100]
    7a84:	add	w9, w14, w9
    7a88:	str	w9, [sp, #100]
    7a8c:	ldur	x8, [x29, #-8]
    7a90:	add	x8, x8, x10
    7a94:	ldrh	w9, [sp, #90]
    7a98:	mov	w12, w9
    7a9c:	mul	x12, x13, x12
    7aa0:	add	x8, x8, x12
    7aa4:	ldr	w9, [x8, #4]
    7aa8:	ldr	w14, [sp, #96]
    7aac:	add	w9, w14, w9
    7ab0:	str	w9, [sp, #96]
    7ab4:	ldur	x8, [x29, #-8]
    7ab8:	add	x8, x8, x10
    7abc:	ldrh	w9, [sp, #90]
    7ac0:	mov	w12, w9
    7ac4:	mul	x12, x13, x12
    7ac8:	add	x8, x8, x12
    7acc:	ldr	w9, [x8, #8]
    7ad0:	ldr	w14, [sp, #92]
    7ad4:	add	w9, w14, w9
    7ad8:	str	w9, [sp, #92]
    7adc:	ldr	x8, [sp, #120]
    7ae0:	ldur	w9, [x29, #-28]
    7ae4:	add	w9, w9, #0x19
    7ae8:	mov	w0, w9
    7aec:	sxtw	x12, w0
    7af0:	mul	x12, x11, x12
    7af4:	add	x8, x8, x12
    7af8:	ldrh	w9, [x8]
    7afc:	strh	w9, [sp, #90]
    7b00:	ldur	x8, [x29, #-8]
    7b04:	add	x8, x8, x10
    7b08:	ldrh	w9, [sp, #90]
    7b0c:	mov	w12, w9
    7b10:	mul	x12, x13, x12
    7b14:	ldr	w9, [x8, x12]
    7b18:	ldr	w14, [sp, #100]
    7b1c:	add	w9, w14, w9
    7b20:	str	w9, [sp, #100]
    7b24:	ldur	x8, [x29, #-8]
    7b28:	add	x8, x8, x10
    7b2c:	ldrh	w9, [sp, #90]
    7b30:	mov	w12, w9
    7b34:	mul	x12, x13, x12
    7b38:	add	x8, x8, x12
    7b3c:	ldr	w9, [x8, #4]
    7b40:	ldr	w14, [sp, #96]
    7b44:	add	w9, w14, w9
    7b48:	str	w9, [sp, #96]
    7b4c:	ldur	x8, [x29, #-8]
    7b50:	add	x8, x8, x10
    7b54:	ldrh	w9, [sp, #90]
    7b58:	mov	w12, w9
    7b5c:	mul	x12, x13, x12
    7b60:	add	x8, x8, x12
    7b64:	ldr	w9, [x8, #8]
    7b68:	ldr	w14, [sp, #92]
    7b6c:	add	w9, w14, w9
    7b70:	str	w9, [sp, #92]
    7b74:	ldr	x8, [sp, #120]
    7b78:	ldur	w9, [x29, #-28]
    7b7c:	add	w9, w9, #0x1a
    7b80:	mov	w0, w9
    7b84:	sxtw	x12, w0
    7b88:	mul	x12, x11, x12
    7b8c:	add	x8, x8, x12
    7b90:	ldrh	w9, [x8]
    7b94:	strh	w9, [sp, #90]
    7b98:	ldur	x8, [x29, #-8]
    7b9c:	add	x8, x8, x10
    7ba0:	ldrh	w9, [sp, #90]
    7ba4:	mov	w12, w9
    7ba8:	mul	x12, x13, x12
    7bac:	ldr	w9, [x8, x12]
    7bb0:	ldr	w14, [sp, #100]
    7bb4:	add	w9, w14, w9
    7bb8:	str	w9, [sp, #100]
    7bbc:	ldur	x8, [x29, #-8]
    7bc0:	add	x8, x8, x10
    7bc4:	ldrh	w9, [sp, #90]
    7bc8:	mov	w12, w9
    7bcc:	mul	x12, x13, x12
    7bd0:	add	x8, x8, x12
    7bd4:	ldr	w9, [x8, #4]
    7bd8:	ldr	w14, [sp, #96]
    7bdc:	add	w9, w14, w9
    7be0:	str	w9, [sp, #96]
    7be4:	ldur	x8, [x29, #-8]
    7be8:	add	x8, x8, x10
    7bec:	ldrh	w9, [sp, #90]
    7bf0:	mov	w12, w9
    7bf4:	mul	x12, x13, x12
    7bf8:	add	x8, x8, x12
    7bfc:	ldr	w9, [x8, #8]
    7c00:	ldr	w14, [sp, #92]
    7c04:	add	w9, w14, w9
    7c08:	str	w9, [sp, #92]
    7c0c:	ldr	x8, [sp, #120]
    7c10:	ldur	w9, [x29, #-28]
    7c14:	add	w9, w9, #0x1b
    7c18:	mov	w0, w9
    7c1c:	sxtw	x12, w0
    7c20:	mul	x12, x11, x12
    7c24:	add	x8, x8, x12
    7c28:	ldrh	w9, [x8]
    7c2c:	strh	w9, [sp, #90]
    7c30:	ldur	x8, [x29, #-8]
    7c34:	add	x8, x8, x10
    7c38:	ldrh	w9, [sp, #90]
    7c3c:	mov	w12, w9
    7c40:	mul	x12, x13, x12
    7c44:	ldr	w9, [x8, x12]
    7c48:	ldr	w14, [sp, #100]
    7c4c:	add	w9, w14, w9
    7c50:	str	w9, [sp, #100]
    7c54:	ldur	x8, [x29, #-8]
    7c58:	add	x8, x8, x10
    7c5c:	ldrh	w9, [sp, #90]
    7c60:	mov	w12, w9
    7c64:	mul	x12, x13, x12
    7c68:	add	x8, x8, x12
    7c6c:	ldr	w9, [x8, #4]
    7c70:	ldr	w14, [sp, #96]
    7c74:	add	w9, w14, w9
    7c78:	str	w9, [sp, #96]
    7c7c:	ldur	x8, [x29, #-8]
    7c80:	add	x8, x8, x10
    7c84:	ldrh	w9, [sp, #90]
    7c88:	mov	w12, w9
    7c8c:	mul	x12, x13, x12
    7c90:	add	x8, x8, x12
    7c94:	ldr	w9, [x8, #8]
    7c98:	ldr	w14, [sp, #92]
    7c9c:	add	w9, w14, w9
    7ca0:	str	w9, [sp, #92]
    7ca4:	ldr	x8, [sp, #120]
    7ca8:	ldur	w9, [x29, #-28]
    7cac:	add	w9, w9, #0x1c
    7cb0:	mov	w0, w9
    7cb4:	sxtw	x12, w0
    7cb8:	mul	x12, x11, x12
    7cbc:	add	x8, x8, x12
    7cc0:	ldrh	w9, [x8]
    7cc4:	strh	w9, [sp, #90]
    7cc8:	ldur	x8, [x29, #-8]
    7ccc:	add	x8, x8, x10
    7cd0:	ldrh	w9, [sp, #90]
    7cd4:	mov	w12, w9
    7cd8:	mul	x12, x13, x12
    7cdc:	ldr	w9, [x8, x12]
    7ce0:	ldr	w14, [sp, #100]
    7ce4:	add	w9, w14, w9
    7ce8:	str	w9, [sp, #100]
    7cec:	ldur	x8, [x29, #-8]
    7cf0:	add	x8, x8, x10
    7cf4:	ldrh	w9, [sp, #90]
    7cf8:	mov	w12, w9
    7cfc:	mul	x12, x13, x12
    7d00:	add	x8, x8, x12
    7d04:	ldr	w9, [x8, #4]
    7d08:	ldr	w14, [sp, #96]
    7d0c:	add	w9, w14, w9
    7d10:	str	w9, [sp, #96]
    7d14:	ldur	x8, [x29, #-8]
    7d18:	add	x8, x8, x10
    7d1c:	ldrh	w9, [sp, #90]
    7d20:	mov	w12, w9
    7d24:	mul	x12, x13, x12
    7d28:	add	x8, x8, x12
    7d2c:	ldr	w9, [x8, #8]
    7d30:	ldr	w14, [sp, #92]
    7d34:	add	w9, w14, w9
    7d38:	str	w9, [sp, #92]
    7d3c:	ldr	x8, [sp, #120]
    7d40:	ldur	w9, [x29, #-28]
    7d44:	add	w9, w9, #0x1d
    7d48:	mov	w0, w9
    7d4c:	sxtw	x12, w0
    7d50:	mul	x12, x11, x12
    7d54:	add	x8, x8, x12
    7d58:	ldrh	w9, [x8]
    7d5c:	strh	w9, [sp, #90]
    7d60:	ldur	x8, [x29, #-8]
    7d64:	add	x8, x8, x10
    7d68:	ldrh	w9, [sp, #90]
    7d6c:	mov	w12, w9
    7d70:	mul	x12, x13, x12
    7d74:	ldr	w9, [x8, x12]
    7d78:	ldr	w14, [sp, #100]
    7d7c:	add	w9, w14, w9
    7d80:	str	w9, [sp, #100]
    7d84:	ldur	x8, [x29, #-8]
    7d88:	add	x8, x8, x10
    7d8c:	ldrh	w9, [sp, #90]
    7d90:	mov	w12, w9
    7d94:	mul	x12, x13, x12
    7d98:	add	x8, x8, x12
    7d9c:	ldr	w9, [x8, #4]
    7da0:	ldr	w14, [sp, #96]
    7da4:	add	w9, w14, w9
    7da8:	str	w9, [sp, #96]
    7dac:	ldur	x8, [x29, #-8]
    7db0:	add	x8, x8, x10
    7db4:	ldrh	w9, [sp, #90]
    7db8:	mov	w12, w9
    7dbc:	mul	x12, x13, x12
    7dc0:	add	x8, x8, x12
    7dc4:	ldr	w9, [x8, #8]
    7dc8:	ldr	w14, [sp, #92]
    7dcc:	add	w9, w14, w9
    7dd0:	str	w9, [sp, #92]
    7dd4:	ldr	x8, [sp, #120]
    7dd8:	ldur	w9, [x29, #-28]
    7ddc:	add	w9, w9, #0x1e
    7de0:	mov	w0, w9
    7de4:	sxtw	x12, w0
    7de8:	mul	x12, x11, x12
    7dec:	add	x8, x8, x12
    7df0:	ldrh	w9, [x8]
    7df4:	strh	w9, [sp, #90]
    7df8:	ldur	x8, [x29, #-8]
    7dfc:	add	x8, x8, x10
    7e00:	ldrh	w9, [sp, #90]
    7e04:	mov	w12, w9
    7e08:	mul	x12, x13, x12
    7e0c:	ldr	w9, [x8, x12]
    7e10:	ldr	w14, [sp, #100]
    7e14:	add	w9, w14, w9
    7e18:	str	w9, [sp, #100]
    7e1c:	ldur	x8, [x29, #-8]
    7e20:	add	x8, x8, x10
    7e24:	ldrh	w9, [sp, #90]
    7e28:	mov	w12, w9
    7e2c:	mul	x12, x13, x12
    7e30:	add	x8, x8, x12
    7e34:	ldr	w9, [x8, #4]
    7e38:	ldr	w14, [sp, #96]
    7e3c:	add	w9, w14, w9
    7e40:	str	w9, [sp, #96]
    7e44:	ldur	x8, [x29, #-8]
    7e48:	add	x8, x8, x10
    7e4c:	ldrh	w9, [sp, #90]
    7e50:	mov	w12, w9
    7e54:	mul	x12, x13, x12
    7e58:	add	x8, x8, x12
    7e5c:	ldr	w9, [x8, #8]
    7e60:	ldr	w14, [sp, #92]
    7e64:	add	w9, w14, w9
    7e68:	str	w9, [sp, #92]
    7e6c:	ldr	x8, [sp, #120]
    7e70:	ldur	w9, [x29, #-28]
    7e74:	add	w9, w9, #0x1f
    7e78:	mov	w0, w9
    7e7c:	sxtw	x12, w0
    7e80:	mul	x12, x11, x12
    7e84:	add	x8, x8, x12
    7e88:	ldrh	w9, [x8]
    7e8c:	strh	w9, [sp, #90]
    7e90:	ldur	x8, [x29, #-8]
    7e94:	add	x8, x8, x10
    7e98:	ldrh	w9, [sp, #90]
    7e9c:	mov	w12, w9
    7ea0:	mul	x12, x13, x12
    7ea4:	ldr	w9, [x8, x12]
    7ea8:	ldr	w14, [sp, #100]
    7eac:	add	w9, w14, w9
    7eb0:	str	w9, [sp, #100]
    7eb4:	ldur	x8, [x29, #-8]
    7eb8:	add	x8, x8, x10
    7ebc:	ldrh	w9, [sp, #90]
    7ec0:	mov	w12, w9
    7ec4:	mul	x12, x13, x12
    7ec8:	add	x8, x8, x12
    7ecc:	ldr	w9, [x8, #4]
    7ed0:	ldr	w14, [sp, #96]
    7ed4:	add	w9, w14, w9
    7ed8:	str	w9, [sp, #96]
    7edc:	ldur	x8, [x29, #-8]
    7ee0:	add	x8, x8, x10
    7ee4:	ldrh	w9, [sp, #90]
    7ee8:	mov	w12, w9
    7eec:	mul	x12, x13, x12
    7ef0:	add	x8, x8, x12
    7ef4:	ldr	w9, [x8, #8]
    7ef8:	ldr	w14, [sp, #92]
    7efc:	add	w9, w14, w9
    7f00:	str	w9, [sp, #92]
    7f04:	ldr	x8, [sp, #120]
    7f08:	ldur	w9, [x29, #-28]
    7f0c:	add	w9, w9, #0x20
    7f10:	mov	w0, w9
    7f14:	sxtw	x12, w0
    7f18:	mul	x12, x11, x12
    7f1c:	add	x8, x8, x12
    7f20:	ldrh	w9, [x8]
    7f24:	strh	w9, [sp, #90]
    7f28:	ldur	x8, [x29, #-8]
    7f2c:	add	x8, x8, x10
    7f30:	ldrh	w9, [sp, #90]
    7f34:	mov	w12, w9
    7f38:	mul	x12, x13, x12
    7f3c:	ldr	w9, [x8, x12]
    7f40:	ldr	w14, [sp, #100]
    7f44:	add	w9, w14, w9
    7f48:	str	w9, [sp, #100]
    7f4c:	ldur	x8, [x29, #-8]
    7f50:	add	x8, x8, x10
    7f54:	ldrh	w9, [sp, #90]
    7f58:	mov	w12, w9
    7f5c:	mul	x12, x13, x12
    7f60:	add	x8, x8, x12
    7f64:	ldr	w9, [x8, #4]
    7f68:	ldr	w14, [sp, #96]
    7f6c:	add	w9, w14, w9
    7f70:	str	w9, [sp, #96]
    7f74:	ldur	x8, [x29, #-8]
    7f78:	add	x8, x8, x10
    7f7c:	ldrh	w9, [sp, #90]
    7f80:	mov	w12, w9
    7f84:	mul	x12, x13, x12
    7f88:	add	x8, x8, x12
    7f8c:	ldr	w9, [x8, #8]
    7f90:	ldr	w14, [sp, #92]
    7f94:	add	w9, w14, w9
    7f98:	str	w9, [sp, #92]
    7f9c:	ldr	x8, [sp, #120]
    7fa0:	ldur	w9, [x29, #-28]
    7fa4:	add	w9, w9, #0x21
    7fa8:	mov	w0, w9
    7fac:	sxtw	x12, w0
    7fb0:	mul	x12, x11, x12
    7fb4:	add	x8, x8, x12
    7fb8:	ldrh	w9, [x8]
    7fbc:	strh	w9, [sp, #90]
    7fc0:	ldur	x8, [x29, #-8]
    7fc4:	add	x8, x8, x10
    7fc8:	ldrh	w9, [sp, #90]
    7fcc:	mov	w12, w9
    7fd0:	mul	x12, x13, x12
    7fd4:	ldr	w9, [x8, x12]
    7fd8:	ldr	w14, [sp, #100]
    7fdc:	add	w9, w14, w9
    7fe0:	str	w9, [sp, #100]
    7fe4:	ldur	x8, [x29, #-8]
    7fe8:	add	x8, x8, x10
    7fec:	ldrh	w9, [sp, #90]
    7ff0:	mov	w12, w9
    7ff4:	mul	x12, x13, x12
    7ff8:	add	x8, x8, x12
    7ffc:	ldr	w9, [x8, #4]
    8000:	ldr	w14, [sp, #96]
    8004:	add	w9, w14, w9
    8008:	str	w9, [sp, #96]
    800c:	ldur	x8, [x29, #-8]
    8010:	add	x8, x8, x10
    8014:	ldrh	w9, [sp, #90]
    8018:	mov	w12, w9
    801c:	mul	x12, x13, x12
    8020:	add	x8, x8, x12
    8024:	ldr	w9, [x8, #8]
    8028:	ldr	w14, [sp, #92]
    802c:	add	w9, w14, w9
    8030:	str	w9, [sp, #92]
    8034:	ldr	x8, [sp, #120]
    8038:	ldur	w9, [x29, #-28]
    803c:	add	w9, w9, #0x22
    8040:	mov	w0, w9
    8044:	sxtw	x12, w0
    8048:	mul	x12, x11, x12
    804c:	add	x8, x8, x12
    8050:	ldrh	w9, [x8]
    8054:	strh	w9, [sp, #90]
    8058:	ldur	x8, [x29, #-8]
    805c:	add	x8, x8, x10
    8060:	ldrh	w9, [sp, #90]
    8064:	mov	w12, w9
    8068:	mul	x12, x13, x12
    806c:	ldr	w9, [x8, x12]
    8070:	ldr	w14, [sp, #100]
    8074:	add	w9, w14, w9
    8078:	str	w9, [sp, #100]
    807c:	ldur	x8, [x29, #-8]
    8080:	add	x8, x8, x10
    8084:	ldrh	w9, [sp, #90]
    8088:	mov	w12, w9
    808c:	mul	x12, x13, x12
    8090:	add	x8, x8, x12
    8094:	ldr	w9, [x8, #4]
    8098:	ldr	w14, [sp, #96]
    809c:	add	w9, w14, w9
    80a0:	str	w9, [sp, #96]
    80a4:	ldur	x8, [x29, #-8]
    80a8:	add	x8, x8, x10
    80ac:	ldrh	w9, [sp, #90]
    80b0:	mov	w12, w9
    80b4:	mul	x12, x13, x12
    80b8:	add	x8, x8, x12
    80bc:	ldr	w9, [x8, #8]
    80c0:	ldr	w14, [sp, #92]
    80c4:	add	w9, w14, w9
    80c8:	str	w9, [sp, #92]
    80cc:	ldr	x8, [sp, #120]
    80d0:	ldur	w9, [x29, #-28]
    80d4:	add	w9, w9, #0x23
    80d8:	mov	w0, w9
    80dc:	sxtw	x12, w0
    80e0:	mul	x12, x11, x12
    80e4:	add	x8, x8, x12
    80e8:	ldrh	w9, [x8]
    80ec:	strh	w9, [sp, #90]
    80f0:	ldur	x8, [x29, #-8]
    80f4:	add	x8, x8, x10
    80f8:	ldrh	w9, [sp, #90]
    80fc:	mov	w12, w9
    8100:	mul	x12, x13, x12
    8104:	ldr	w9, [x8, x12]
    8108:	ldr	w14, [sp, #100]
    810c:	add	w9, w14, w9
    8110:	str	w9, [sp, #100]
    8114:	ldur	x8, [x29, #-8]
    8118:	add	x8, x8, x10
    811c:	ldrh	w9, [sp, #90]
    8120:	mov	w12, w9
    8124:	mul	x12, x13, x12
    8128:	add	x8, x8, x12
    812c:	ldr	w9, [x8, #4]
    8130:	ldr	w14, [sp, #96]
    8134:	add	w9, w14, w9
    8138:	str	w9, [sp, #96]
    813c:	ldur	x8, [x29, #-8]
    8140:	add	x8, x8, x10
    8144:	ldrh	w9, [sp, #90]
    8148:	mov	w12, w9
    814c:	mul	x12, x13, x12
    8150:	add	x8, x8, x12
    8154:	ldr	w9, [x8, #8]
    8158:	ldr	w14, [sp, #92]
    815c:	add	w9, w14, w9
    8160:	str	w9, [sp, #92]
    8164:	ldr	x8, [sp, #120]
    8168:	ldur	w9, [x29, #-28]
    816c:	add	w9, w9, #0x24
    8170:	mov	w0, w9
    8174:	sxtw	x12, w0
    8178:	mul	x12, x11, x12
    817c:	add	x8, x8, x12
    8180:	ldrh	w9, [x8]
    8184:	strh	w9, [sp, #90]
    8188:	ldur	x8, [x29, #-8]
    818c:	add	x8, x8, x10
    8190:	ldrh	w9, [sp, #90]
    8194:	mov	w12, w9
    8198:	mul	x12, x13, x12
    819c:	ldr	w9, [x8, x12]
    81a0:	ldr	w14, [sp, #100]
    81a4:	add	w9, w14, w9
    81a8:	str	w9, [sp, #100]
    81ac:	ldur	x8, [x29, #-8]
    81b0:	add	x8, x8, x10
    81b4:	ldrh	w9, [sp, #90]
    81b8:	mov	w12, w9
    81bc:	mul	x12, x13, x12
    81c0:	add	x8, x8, x12
    81c4:	ldr	w9, [x8, #4]
    81c8:	ldr	w14, [sp, #96]
    81cc:	add	w9, w14, w9
    81d0:	str	w9, [sp, #96]
    81d4:	ldur	x8, [x29, #-8]
    81d8:	add	x8, x8, x10
    81dc:	ldrh	w9, [sp, #90]
    81e0:	mov	w12, w9
    81e4:	mul	x12, x13, x12
    81e8:	add	x8, x8, x12
    81ec:	ldr	w9, [x8, #8]
    81f0:	ldr	w14, [sp, #92]
    81f4:	add	w9, w14, w9
    81f8:	str	w9, [sp, #92]
    81fc:	ldr	x8, [sp, #120]
    8200:	ldur	w9, [x29, #-28]
    8204:	add	w9, w9, #0x25
    8208:	mov	w0, w9
    820c:	sxtw	x12, w0
    8210:	mul	x12, x11, x12
    8214:	add	x8, x8, x12
    8218:	ldrh	w9, [x8]
    821c:	strh	w9, [sp, #90]
    8220:	ldur	x8, [x29, #-8]
    8224:	add	x8, x8, x10
    8228:	ldrh	w9, [sp, #90]
    822c:	mov	w12, w9
    8230:	mul	x12, x13, x12
    8234:	ldr	w9, [x8, x12]
    8238:	ldr	w14, [sp, #100]
    823c:	add	w9, w14, w9
    8240:	str	w9, [sp, #100]
    8244:	ldur	x8, [x29, #-8]
    8248:	add	x8, x8, x10
    824c:	ldrh	w9, [sp, #90]
    8250:	mov	w12, w9
    8254:	mul	x12, x13, x12
    8258:	add	x8, x8, x12
    825c:	ldr	w9, [x8, #4]
    8260:	ldr	w14, [sp, #96]
    8264:	add	w9, w14, w9
    8268:	str	w9, [sp, #96]
    826c:	ldur	x8, [x29, #-8]
    8270:	add	x8, x8, x10
    8274:	ldrh	w9, [sp, #90]
    8278:	mov	w12, w9
    827c:	mul	x12, x13, x12
    8280:	add	x8, x8, x12
    8284:	ldr	w9, [x8, #8]
    8288:	ldr	w14, [sp, #92]
    828c:	add	w9, w14, w9
    8290:	str	w9, [sp, #92]
    8294:	ldr	x8, [sp, #120]
    8298:	ldur	w9, [x29, #-28]
    829c:	add	w9, w9, #0x26
    82a0:	mov	w0, w9
    82a4:	sxtw	x12, w0
    82a8:	mul	x12, x11, x12
    82ac:	add	x8, x8, x12
    82b0:	ldrh	w9, [x8]
    82b4:	strh	w9, [sp, #90]
    82b8:	ldur	x8, [x29, #-8]
    82bc:	add	x8, x8, x10
    82c0:	ldrh	w9, [sp, #90]
    82c4:	mov	w12, w9
    82c8:	mul	x12, x13, x12
    82cc:	ldr	w9, [x8, x12]
    82d0:	ldr	w14, [sp, #100]
    82d4:	add	w9, w14, w9
    82d8:	str	w9, [sp, #100]
    82dc:	ldur	x8, [x29, #-8]
    82e0:	add	x8, x8, x10
    82e4:	ldrh	w9, [sp, #90]
    82e8:	mov	w12, w9
    82ec:	mul	x12, x13, x12
    82f0:	add	x8, x8, x12
    82f4:	ldr	w9, [x8, #4]
    82f8:	ldr	w14, [sp, #96]
    82fc:	add	w9, w14, w9
    8300:	str	w9, [sp, #96]
    8304:	ldur	x8, [x29, #-8]
    8308:	add	x8, x8, x10
    830c:	ldrh	w9, [sp, #90]
    8310:	mov	w12, w9
    8314:	mul	x12, x13, x12
    8318:	add	x8, x8, x12
    831c:	ldr	w9, [x8, #8]
    8320:	ldr	w14, [sp, #92]
    8324:	add	w9, w14, w9
    8328:	str	w9, [sp, #92]
    832c:	ldr	x8, [sp, #120]
    8330:	ldur	w9, [x29, #-28]
    8334:	add	w9, w9, #0x27
    8338:	mov	w0, w9
    833c:	sxtw	x12, w0
    8340:	mul	x12, x11, x12
    8344:	add	x8, x8, x12
    8348:	ldrh	w9, [x8]
    834c:	strh	w9, [sp, #90]
    8350:	ldur	x8, [x29, #-8]
    8354:	add	x8, x8, x10
    8358:	ldrh	w9, [sp, #90]
    835c:	mov	w12, w9
    8360:	mul	x12, x13, x12
    8364:	ldr	w9, [x8, x12]
    8368:	ldr	w14, [sp, #100]
    836c:	add	w9, w14, w9
    8370:	str	w9, [sp, #100]
    8374:	ldur	x8, [x29, #-8]
    8378:	add	x8, x8, x10
    837c:	ldrh	w9, [sp, #90]
    8380:	mov	w12, w9
    8384:	mul	x12, x13, x12
    8388:	add	x8, x8, x12
    838c:	ldr	w9, [x8, #4]
    8390:	ldr	w14, [sp, #96]
    8394:	add	w9, w14, w9
    8398:	str	w9, [sp, #96]
    839c:	ldur	x8, [x29, #-8]
    83a0:	add	x8, x8, x10
    83a4:	ldrh	w9, [sp, #90]
    83a8:	mov	w12, w9
    83ac:	mul	x12, x13, x12
    83b0:	add	x8, x8, x12
    83b4:	ldr	w9, [x8, #8]
    83b8:	ldr	w14, [sp, #92]
    83bc:	add	w9, w14, w9
    83c0:	str	w9, [sp, #92]
    83c4:	ldr	x8, [sp, #120]
    83c8:	ldur	w9, [x29, #-28]
    83cc:	add	w9, w9, #0x28
    83d0:	mov	w0, w9
    83d4:	sxtw	x12, w0
    83d8:	mul	x12, x11, x12
    83dc:	add	x8, x8, x12
    83e0:	ldrh	w9, [x8]
    83e4:	strh	w9, [sp, #90]
    83e8:	ldur	x8, [x29, #-8]
    83ec:	add	x8, x8, x10
    83f0:	ldrh	w9, [sp, #90]
    83f4:	mov	w12, w9
    83f8:	mul	x12, x13, x12
    83fc:	ldr	w9, [x8, x12]
    8400:	ldr	w14, [sp, #100]
    8404:	add	w9, w14, w9
    8408:	str	w9, [sp, #100]
    840c:	ldur	x8, [x29, #-8]
    8410:	add	x8, x8, x10
    8414:	ldrh	w9, [sp, #90]
    8418:	mov	w12, w9
    841c:	mul	x12, x13, x12
    8420:	add	x8, x8, x12
    8424:	ldr	w9, [x8, #4]
    8428:	ldr	w14, [sp, #96]
    842c:	add	w9, w14, w9
    8430:	str	w9, [sp, #96]
    8434:	ldur	x8, [x29, #-8]
    8438:	add	x8, x8, x10
    843c:	ldrh	w9, [sp, #90]
    8440:	mov	w12, w9
    8444:	mul	x12, x13, x12
    8448:	add	x8, x8, x12
    844c:	ldr	w9, [x8, #8]
    8450:	ldr	w14, [sp, #92]
    8454:	add	w9, w14, w9
    8458:	str	w9, [sp, #92]
    845c:	ldr	x8, [sp, #120]
    8460:	ldur	w9, [x29, #-28]
    8464:	add	w9, w9, #0x29
    8468:	mov	w0, w9
    846c:	sxtw	x12, w0
    8470:	mul	x12, x11, x12
    8474:	add	x8, x8, x12
    8478:	ldrh	w9, [x8]
    847c:	strh	w9, [sp, #90]
    8480:	ldur	x8, [x29, #-8]
    8484:	add	x8, x8, x10
    8488:	ldrh	w9, [sp, #90]
    848c:	mov	w12, w9
    8490:	mul	x12, x13, x12
    8494:	ldr	w9, [x8, x12]
    8498:	ldr	w14, [sp, #100]
    849c:	add	w9, w14, w9
    84a0:	str	w9, [sp, #100]
    84a4:	ldur	x8, [x29, #-8]
    84a8:	add	x8, x8, x10
    84ac:	ldrh	w9, [sp, #90]
    84b0:	mov	w12, w9
    84b4:	mul	x12, x13, x12
    84b8:	add	x8, x8, x12
    84bc:	ldr	w9, [x8, #4]
    84c0:	ldr	w14, [sp, #96]
    84c4:	add	w9, w14, w9
    84c8:	str	w9, [sp, #96]
    84cc:	ldur	x8, [x29, #-8]
    84d0:	add	x8, x8, x10
    84d4:	ldrh	w9, [sp, #90]
    84d8:	mov	w12, w9
    84dc:	mul	x12, x13, x12
    84e0:	add	x8, x8, x12
    84e4:	ldr	w9, [x8, #8]
    84e8:	ldr	w14, [sp, #92]
    84ec:	add	w9, w14, w9
    84f0:	str	w9, [sp, #92]
    84f4:	ldr	x8, [sp, #120]
    84f8:	ldur	w9, [x29, #-28]
    84fc:	add	w9, w9, #0x2a
    8500:	mov	w0, w9
    8504:	sxtw	x12, w0
    8508:	mul	x12, x11, x12
    850c:	add	x8, x8, x12
    8510:	ldrh	w9, [x8]
    8514:	strh	w9, [sp, #90]
    8518:	ldur	x8, [x29, #-8]
    851c:	add	x8, x8, x10
    8520:	ldrh	w9, [sp, #90]
    8524:	mov	w12, w9
    8528:	mul	x12, x13, x12
    852c:	ldr	w9, [x8, x12]
    8530:	ldr	w14, [sp, #100]
    8534:	add	w9, w14, w9
    8538:	str	w9, [sp, #100]
    853c:	ldur	x8, [x29, #-8]
    8540:	add	x8, x8, x10
    8544:	ldrh	w9, [sp, #90]
    8548:	mov	w12, w9
    854c:	mul	x12, x13, x12
    8550:	add	x8, x8, x12
    8554:	ldr	w9, [x8, #4]
    8558:	ldr	w14, [sp, #96]
    855c:	add	w9, w14, w9
    8560:	str	w9, [sp, #96]
    8564:	ldur	x8, [x29, #-8]
    8568:	add	x8, x8, x10
    856c:	ldrh	w9, [sp, #90]
    8570:	mov	w12, w9
    8574:	mul	x12, x13, x12
    8578:	add	x8, x8, x12
    857c:	ldr	w9, [x8, #8]
    8580:	ldr	w14, [sp, #92]
    8584:	add	w9, w14, w9
    8588:	str	w9, [sp, #92]
    858c:	ldr	x8, [sp, #120]
    8590:	ldur	w9, [x29, #-28]
    8594:	add	w9, w9, #0x2b
    8598:	mov	w0, w9
    859c:	sxtw	x12, w0
    85a0:	mul	x12, x11, x12
    85a4:	add	x8, x8, x12
    85a8:	ldrh	w9, [x8]
    85ac:	strh	w9, [sp, #90]
    85b0:	ldur	x8, [x29, #-8]
    85b4:	add	x8, x8, x10
    85b8:	ldrh	w9, [sp, #90]
    85bc:	mov	w12, w9
    85c0:	mul	x12, x13, x12
    85c4:	ldr	w9, [x8, x12]
    85c8:	ldr	w14, [sp, #100]
    85cc:	add	w9, w14, w9
    85d0:	str	w9, [sp, #100]
    85d4:	ldur	x8, [x29, #-8]
    85d8:	add	x8, x8, x10
    85dc:	ldrh	w9, [sp, #90]
    85e0:	mov	w12, w9
    85e4:	mul	x12, x13, x12
    85e8:	add	x8, x8, x12
    85ec:	ldr	w9, [x8, #4]
    85f0:	ldr	w14, [sp, #96]
    85f4:	add	w9, w14, w9
    85f8:	str	w9, [sp, #96]
    85fc:	ldur	x8, [x29, #-8]
    8600:	add	x8, x8, x10
    8604:	ldrh	w9, [sp, #90]
    8608:	mov	w12, w9
    860c:	mul	x12, x13, x12
    8610:	add	x8, x8, x12
    8614:	ldr	w9, [x8, #8]
    8618:	ldr	w14, [sp, #92]
    861c:	add	w9, w14, w9
    8620:	str	w9, [sp, #92]
    8624:	ldr	x8, [sp, #120]
    8628:	ldur	w9, [x29, #-28]
    862c:	add	w9, w9, #0x2c
    8630:	mov	w0, w9
    8634:	sxtw	x12, w0
    8638:	mul	x12, x11, x12
    863c:	add	x8, x8, x12
    8640:	ldrh	w9, [x8]
    8644:	strh	w9, [sp, #90]
    8648:	ldur	x8, [x29, #-8]
    864c:	add	x8, x8, x10
    8650:	ldrh	w9, [sp, #90]
    8654:	mov	w12, w9
    8658:	mul	x12, x13, x12
    865c:	ldr	w9, [x8, x12]
    8660:	ldr	w14, [sp, #100]
    8664:	add	w9, w14, w9
    8668:	str	w9, [sp, #100]
    866c:	ldur	x8, [x29, #-8]
    8670:	add	x8, x8, x10
    8674:	ldrh	w9, [sp, #90]
    8678:	mov	w12, w9
    867c:	mul	x12, x13, x12
    8680:	add	x8, x8, x12
    8684:	ldr	w9, [x8, #4]
    8688:	ldr	w14, [sp, #96]
    868c:	add	w9, w14, w9
    8690:	str	w9, [sp, #96]
    8694:	ldur	x8, [x29, #-8]
    8698:	add	x8, x8, x10
    869c:	ldrh	w9, [sp, #90]
    86a0:	mov	w12, w9
    86a4:	mul	x12, x13, x12
    86a8:	add	x8, x8, x12
    86ac:	ldr	w9, [x8, #8]
    86b0:	ldr	w14, [sp, #92]
    86b4:	add	w9, w14, w9
    86b8:	str	w9, [sp, #92]
    86bc:	ldr	x8, [sp, #120]
    86c0:	ldur	w9, [x29, #-28]
    86c4:	add	w9, w9, #0x2d
    86c8:	mov	w0, w9
    86cc:	sxtw	x12, w0
    86d0:	mul	x12, x11, x12
    86d4:	add	x8, x8, x12
    86d8:	ldrh	w9, [x8]
    86dc:	strh	w9, [sp, #90]
    86e0:	ldur	x8, [x29, #-8]
    86e4:	add	x8, x8, x10
    86e8:	ldrh	w9, [sp, #90]
    86ec:	mov	w12, w9
    86f0:	mul	x12, x13, x12
    86f4:	ldr	w9, [x8, x12]
    86f8:	ldr	w14, [sp, #100]
    86fc:	add	w9, w14, w9
    8700:	str	w9, [sp, #100]
    8704:	ldur	x8, [x29, #-8]
    8708:	add	x8, x8, x10
    870c:	ldrh	w9, [sp, #90]
    8710:	mov	w12, w9
    8714:	mul	x12, x13, x12
    8718:	add	x8, x8, x12
    871c:	ldr	w9, [x8, #4]
    8720:	ldr	w14, [sp, #96]
    8724:	add	w9, w14, w9
    8728:	str	w9, [sp, #96]
    872c:	ldur	x8, [x29, #-8]
    8730:	add	x8, x8, x10
    8734:	ldrh	w9, [sp, #90]
    8738:	mov	w12, w9
    873c:	mul	x12, x13, x12
    8740:	add	x8, x8, x12
    8744:	ldr	w9, [x8, #8]
    8748:	ldr	w14, [sp, #92]
    874c:	add	w9, w14, w9
    8750:	str	w9, [sp, #92]
    8754:	ldr	x8, [sp, #120]
    8758:	ldur	w9, [x29, #-28]
    875c:	add	w9, w9, #0x2e
    8760:	mov	w0, w9
    8764:	sxtw	x12, w0
    8768:	mul	x12, x11, x12
    876c:	add	x8, x8, x12
    8770:	ldrh	w9, [x8]
    8774:	strh	w9, [sp, #90]
    8778:	ldur	x8, [x29, #-8]
    877c:	add	x8, x8, x10
    8780:	ldrh	w9, [sp, #90]
    8784:	mov	w12, w9
    8788:	mul	x12, x13, x12
    878c:	ldr	w9, [x8, x12]
    8790:	ldr	w14, [sp, #100]
    8794:	add	w9, w14, w9
    8798:	str	w9, [sp, #100]
    879c:	ldur	x8, [x29, #-8]
    87a0:	add	x8, x8, x10
    87a4:	ldrh	w9, [sp, #90]
    87a8:	mov	w12, w9
    87ac:	mul	x12, x13, x12
    87b0:	add	x8, x8, x12
    87b4:	ldr	w9, [x8, #4]
    87b8:	ldr	w14, [sp, #96]
    87bc:	add	w9, w14, w9
    87c0:	str	w9, [sp, #96]
    87c4:	ldur	x8, [x29, #-8]
    87c8:	add	x8, x8, x10
    87cc:	ldrh	w9, [sp, #90]
    87d0:	mov	w12, w9
    87d4:	mul	x12, x13, x12
    87d8:	add	x8, x8, x12
    87dc:	ldr	w9, [x8, #8]
    87e0:	ldr	w14, [sp, #92]
    87e4:	add	w9, w14, w9
    87e8:	str	w9, [sp, #92]
    87ec:	ldr	x8, [sp, #120]
    87f0:	ldur	w9, [x29, #-28]
    87f4:	add	w9, w9, #0x2f
    87f8:	mov	w0, w9
    87fc:	sxtw	x12, w0
    8800:	mul	x12, x11, x12
    8804:	add	x8, x8, x12
    8808:	ldrh	w9, [x8]
    880c:	strh	w9, [sp, #90]
    8810:	ldur	x8, [x29, #-8]
    8814:	add	x8, x8, x10
    8818:	ldrh	w9, [sp, #90]
    881c:	mov	w12, w9
    8820:	mul	x12, x13, x12
    8824:	ldr	w9, [x8, x12]
    8828:	ldr	w14, [sp, #100]
    882c:	add	w9, w14, w9
    8830:	str	w9, [sp, #100]
    8834:	ldur	x8, [x29, #-8]
    8838:	add	x8, x8, x10
    883c:	ldrh	w9, [sp, #90]
    8840:	mov	w12, w9
    8844:	mul	x12, x13, x12
    8848:	add	x8, x8, x12
    884c:	ldr	w9, [x8, #4]
    8850:	ldr	w14, [sp, #96]
    8854:	add	w9, w14, w9
    8858:	str	w9, [sp, #96]
    885c:	ldur	x8, [x29, #-8]
    8860:	add	x8, x8, x10
    8864:	ldrh	w9, [sp, #90]
    8868:	mov	w12, w9
    886c:	mul	x12, x13, x12
    8870:	add	x8, x8, x12
    8874:	ldr	w9, [x8, #8]
    8878:	ldr	w14, [sp, #92]
    887c:	add	w9, w14, w9
    8880:	str	w9, [sp, #92]
    8884:	ldr	x8, [sp, #120]
    8888:	ldur	w9, [x29, #-28]
    888c:	add	w9, w9, #0x30
    8890:	mov	w0, w9
    8894:	sxtw	x12, w0
    8898:	mul	x12, x11, x12
    889c:	add	x8, x8, x12
    88a0:	ldrh	w9, [x8]
    88a4:	strh	w9, [sp, #90]
    88a8:	ldur	x8, [x29, #-8]
    88ac:	add	x8, x8, x10
    88b0:	ldrh	w9, [sp, #90]
    88b4:	mov	w12, w9
    88b8:	mul	x12, x13, x12
    88bc:	ldr	w9, [x8, x12]
    88c0:	ldr	w14, [sp, #100]
    88c4:	add	w9, w14, w9
    88c8:	str	w9, [sp, #100]
    88cc:	ldur	x8, [x29, #-8]
    88d0:	add	x8, x8, x10
    88d4:	ldrh	w9, [sp, #90]
    88d8:	mov	w12, w9
    88dc:	mul	x12, x13, x12
    88e0:	add	x8, x8, x12
    88e4:	ldr	w9, [x8, #4]
    88e8:	ldr	w14, [sp, #96]
    88ec:	add	w9, w14, w9
    88f0:	str	w9, [sp, #96]
    88f4:	ldur	x8, [x29, #-8]
    88f8:	add	x8, x8, x10
    88fc:	ldrh	w9, [sp, #90]
    8900:	mov	w12, w9
    8904:	mul	x12, x13, x12
    8908:	add	x8, x8, x12
    890c:	ldr	w9, [x8, #8]
    8910:	ldr	w14, [sp, #92]
    8914:	add	w9, w14, w9
    8918:	str	w9, [sp, #92]
    891c:	ldr	x8, [sp, #120]
    8920:	ldur	w9, [x29, #-28]
    8924:	add	w9, w9, #0x31
    8928:	mov	w0, w9
    892c:	sxtw	x12, w0
    8930:	mul	x11, x11, x12
    8934:	add	x8, x8, x11
    8938:	ldrh	w9, [x8]
    893c:	strh	w9, [sp, #90]
    8940:	ldur	x8, [x29, #-8]
    8944:	add	x8, x8, x10
    8948:	ldrh	w9, [sp, #90]
    894c:	mov	w11, w9
    8950:	mul	x11, x13, x11
    8954:	ldr	w9, [x8, x11]
    8958:	ldr	w14, [sp, #100]
    895c:	add	w9, w14, w9
    8960:	str	w9, [sp, #100]
    8964:	ldur	x8, [x29, #-8]
    8968:	add	x8, x8, x10
    896c:	ldrh	w9, [sp, #90]
    8970:	mov	w11, w9
    8974:	mul	x11, x13, x11
    8978:	add	x8, x8, x11
    897c:	ldr	w9, [x8, #4]
    8980:	ldr	w14, [sp, #96]
    8984:	add	w9, w14, w9
    8988:	str	w9, [sp, #96]
    898c:	ldur	x8, [x29, #-8]
    8990:	add	x8, x8, x10
    8994:	ldrh	w9, [sp, #90]
    8998:	mov	w10, w9
    899c:	mul	x10, x13, x10
    89a0:	add	x8, x8, x10
    89a4:	ldr	w9, [x8, #8]
    89a8:	ldr	w14, [sp, #92]
    89ac:	add	w9, w14, w9
    89b0:	str	w9, [sp, #92]
    89b4:	ldr	w9, [sp, #100]
    89b8:	and	w9, w9, #0xffff
    89bc:	sub	x8, x29, #0x58
    89c0:	sturh	w9, [x29, #-88]
    89c4:	ldr	w9, [sp, #100]
    89c8:	mov	x0, x13
    89cc:	lsr	w9, w9, w0
    89d0:	strh	w9, [x8, #2]
    89d4:	ldr	w9, [sp, #96]
    89d8:	and	w9, w9, #0xffff
    89dc:	strh	w9, [x8, #4]
    89e0:	ldr	w9, [sp, #96]
    89e4:	mov	x1, x13
    89e8:	lsr	w9, w9, w1
    89ec:	strh	w9, [x8, #6]
    89f0:	ldr	w9, [sp, #92]
    89f4:	and	w9, w9, #0xffff
    89f8:	strh	w9, [x8, #8]
    89fc:	ldr	w9, [sp, #92]
    8a00:	lsr	w9, w9, w13
    8a04:	strh	w9, [x8, #10]
    8a08:	b	8abc <BZ2_compressBlock@@Base+0x2de4>
    8a0c:	ldur	w8, [x29, #-28]
    8a10:	stur	w8, [x29, #-20]
    8a14:	ldur	w8, [x29, #-20]
    8a18:	ldur	w9, [x29, #-32]
    8a1c:	cmp	w8, w9
    8a20:	b.gt	8abc <BZ2_compressBlock@@Base+0x2de4>
    8a24:	ldr	x8, [sp, #120]
    8a28:	ldursw	x9, [x29, #-20]
    8a2c:	mov	x10, #0x2                   	// #2
    8a30:	mul	x9, x10, x9
    8a34:	add	x8, x8, x9
    8a38:	ldrh	w11, [x8]
    8a3c:	strh	w11, [sp, #88]
    8a40:	stur	wzr, [x29, #-16]
    8a44:	ldur	w8, [x29, #-16]
    8a48:	ldur	w9, [x29, #-72]
    8a4c:	cmp	w8, w9
    8a50:	b.ge	8aac <BZ2_compressBlock@@Base+0x2dd4>  // b.tcont
    8a54:	ldur	x8, [x29, #-8]
    8a58:	mov	x9, #0x934c                	// #37708
    8a5c:	add	x8, x8, x9
    8a60:	ldursw	x9, [x29, #-16]
    8a64:	mov	x10, #0x102                 	// #258
    8a68:	mul	x9, x10, x9
    8a6c:	add	x8, x8, x9
    8a70:	ldrh	w11, [sp, #88]
    8a74:	mov	w9, w11
    8a78:	ldrb	w11, [x8, x9]
    8a7c:	ldursw	x8, [x29, #-16]
    8a80:	mov	x9, #0x2                   	// #2
    8a84:	mul	x8, x9, x8
    8a88:	sub	x9, x29, #0x58
    8a8c:	add	x8, x9, x8
    8a90:	ldrh	w12, [x8]
    8a94:	add	w11, w12, w11
    8a98:	strh	w11, [x8]
    8a9c:	ldur	w8, [x29, #-16]
    8aa0:	add	w8, w8, #0x1
    8aa4:	stur	w8, [x29, #-16]
    8aa8:	b	8a44 <BZ2_compressBlock@@Base+0x2d6c>
    8aac:	ldur	w8, [x29, #-20]
    8ab0:	add	w8, w8, #0x1
    8ab4:	stur	w8, [x29, #-20]
    8ab8:	b	8a14 <BZ2_compressBlock@@Base+0x2d3c>
    8abc:	mov	w8, #0xc9ff                	// #51711
    8ac0:	movk	w8, #0x3b9a, lsl #16
    8ac4:	stur	w8, [x29, #-44]
    8ac8:	mov	w8, #0xffffffff            	// #-1
    8acc:	stur	w8, [x29, #-40]
    8ad0:	stur	wzr, [x29, #-16]
    8ad4:	ldur	w8, [x29, #-16]
    8ad8:	ldur	w9, [x29, #-72]
    8adc:	cmp	w8, w9
    8ae0:	b.ge	8b24 <BZ2_compressBlock@@Base+0x2e4c>  // b.tcont
    8ae4:	ldursw	x8, [x29, #-16]
    8ae8:	sub	x9, x29, #0x58
    8aec:	ldrh	w10, [x9, x8, lsl #1]
    8af0:	ldur	w11, [x29, #-44]
    8af4:	cmp	w10, w11
    8af8:	b.ge	8b14 <BZ2_compressBlock@@Base+0x2e3c>  // b.tcont
    8afc:	ldursw	x8, [x29, #-16]
    8b00:	sub	x9, x29, #0x58
    8b04:	ldrh	w10, [x9, x8, lsl #1]
    8b08:	stur	w10, [x29, #-44]
    8b0c:	ldur	w10, [x29, #-16]
    8b10:	stur	w10, [x29, #-40]
    8b14:	ldur	w8, [x29, #-16]
    8b18:	add	w8, w8, #0x1
    8b1c:	stur	w8, [x29, #-16]
    8b20:	b	8ad4 <BZ2_compressBlock@@Base+0x2dfc>
    8b24:	ldur	w8, [x29, #-44]
    8b28:	ldur	w9, [x29, #-36]
    8b2c:	add	w8, w9, w8
    8b30:	stur	w8, [x29, #-36]
    8b34:	ldursw	x10, [x29, #-40]
    8b38:	mov	x11, #0x4                   	// #4
    8b3c:	mul	x10, x11, x10
    8b40:	sub	x11, x29, #0x70
    8b44:	add	x10, x11, x10
    8b48:	ldr	w8, [x10]
    8b4c:	add	w8, w8, #0x1
    8b50:	str	w8, [x10]
    8b54:	ldur	w8, [x29, #-40]
    8b58:	ldur	x10, [x29, #-8]
    8b5c:	add	x10, x10, #0x6a8
    8b60:	ldursw	x11, [x29, #-52]
    8b64:	add	x10, x10, x11
    8b68:	strb	w8, [x10]
    8b6c:	ldur	w8, [x29, #-52]
    8b70:	add	w8, w8, #0x1
    8b74:	stur	w8, [x29, #-52]
    8b78:	ldur	w8, [x29, #-72]
    8b7c:	cmp	w8, #0x6
    8b80:	b.ne	9768 <BZ2_compressBlock@@Base+0x3a90>  // b.any
    8b84:	ldur	w8, [x29, #-32]
    8b88:	ldur	w9, [x29, #-28]
    8b8c:	subs	w8, w8, w9
    8b90:	add	w8, w8, #0x1
    8b94:	mov	w9, #0x32                  	// #50
    8b98:	cmp	w9, w8
    8b9c:	b.ne	9768 <BZ2_compressBlock@@Base+0x3a90>  // b.any
    8ba0:	ldur	x8, [x29, #-8]
    8ba4:	mov	x9, #0xb188                	// #45448
    8ba8:	add	x8, x8, x9
    8bac:	ldursw	x10, [x29, #-40]
    8bb0:	mov	x11, #0x408                 	// #1032
    8bb4:	mul	x10, x11, x10
    8bb8:	add	x8, x8, x10
    8bbc:	ldr	x10, [sp, #120]
    8bc0:	ldur	w12, [x29, #-28]
    8bc4:	add	w12, w12, #0x0
    8bc8:	ldrh	w12, [x10, w12, sxtw #1]
    8bcc:	mov	w10, w12
    8bd0:	mov	x13, #0x4                   	// #4
    8bd4:	mul	x10, x13, x10
    8bd8:	add	x8, x8, x10
    8bdc:	ldr	w12, [x8]
    8be0:	add	w12, w12, #0x1
    8be4:	str	w12, [x8]
    8be8:	ldur	x8, [x29, #-8]
    8bec:	add	x8, x8, x9
    8bf0:	ldursw	x10, [x29, #-40]
    8bf4:	mul	x10, x11, x10
    8bf8:	add	x8, x8, x10
    8bfc:	ldr	x10, [sp, #120]
    8c00:	ldur	w12, [x29, #-28]
    8c04:	add	w12, w12, #0x1
    8c08:	ldrh	w12, [x10, w12, sxtw #1]
    8c0c:	mov	w10, w12
    8c10:	mul	x10, x13, x10
    8c14:	add	x8, x8, x10
    8c18:	ldr	w12, [x8]
    8c1c:	add	w12, w12, #0x1
    8c20:	str	w12, [x8]
    8c24:	ldur	x8, [x29, #-8]
    8c28:	add	x8, x8, x9
    8c2c:	ldursw	x10, [x29, #-40]
    8c30:	mul	x10, x11, x10
    8c34:	add	x8, x8, x10
    8c38:	ldr	x10, [sp, #120]
    8c3c:	ldur	w12, [x29, #-28]
    8c40:	add	w12, w12, #0x2
    8c44:	ldrh	w12, [x10, w12, sxtw #1]
    8c48:	mov	w10, w12
    8c4c:	mul	x10, x13, x10
    8c50:	add	x8, x8, x10
    8c54:	ldr	w12, [x8]
    8c58:	add	w12, w12, #0x1
    8c5c:	str	w12, [x8]
    8c60:	ldur	x8, [x29, #-8]
    8c64:	add	x8, x8, x9
    8c68:	ldursw	x10, [x29, #-40]
    8c6c:	mul	x10, x11, x10
    8c70:	add	x8, x8, x10
    8c74:	ldr	x10, [sp, #120]
    8c78:	ldur	w12, [x29, #-28]
    8c7c:	add	w12, w12, #0x3
    8c80:	ldrh	w12, [x10, w12, sxtw #1]
    8c84:	mov	w10, w12
    8c88:	mul	x10, x13, x10
    8c8c:	add	x8, x8, x10
    8c90:	ldr	w12, [x8]
    8c94:	add	w12, w12, #0x1
    8c98:	str	w12, [x8]
    8c9c:	ldur	x8, [x29, #-8]
    8ca0:	add	x8, x8, x9
    8ca4:	ldursw	x10, [x29, #-40]
    8ca8:	mul	x10, x11, x10
    8cac:	add	x8, x8, x10
    8cb0:	ldr	x10, [sp, #120]
    8cb4:	ldur	w12, [x29, #-28]
    8cb8:	add	w12, w12, #0x4
    8cbc:	ldrh	w12, [x10, w12, sxtw #1]
    8cc0:	mov	w10, w12
    8cc4:	mul	x10, x13, x10
    8cc8:	add	x8, x8, x10
    8ccc:	ldr	w12, [x8]
    8cd0:	add	w12, w12, #0x1
    8cd4:	str	w12, [x8]
    8cd8:	ldur	x8, [x29, #-8]
    8cdc:	add	x8, x8, x9
    8ce0:	ldursw	x10, [x29, #-40]
    8ce4:	mul	x10, x11, x10
    8ce8:	add	x8, x8, x10
    8cec:	ldr	x10, [sp, #120]
    8cf0:	ldur	w12, [x29, #-28]
    8cf4:	add	w12, w12, #0x5
    8cf8:	ldrh	w12, [x10, w12, sxtw #1]
    8cfc:	mov	w10, w12
    8d00:	mul	x10, x13, x10
    8d04:	add	x8, x8, x10
    8d08:	ldr	w12, [x8]
    8d0c:	add	w12, w12, #0x1
    8d10:	str	w12, [x8]
    8d14:	ldur	x8, [x29, #-8]
    8d18:	add	x8, x8, x9
    8d1c:	ldursw	x10, [x29, #-40]
    8d20:	mul	x10, x11, x10
    8d24:	add	x8, x8, x10
    8d28:	ldr	x10, [sp, #120]
    8d2c:	ldur	w12, [x29, #-28]
    8d30:	add	w12, w12, #0x6
    8d34:	ldrh	w12, [x10, w12, sxtw #1]
    8d38:	mov	w10, w12
    8d3c:	mul	x10, x13, x10
    8d40:	add	x8, x8, x10
    8d44:	ldr	w12, [x8]
    8d48:	add	w12, w12, #0x1
    8d4c:	str	w12, [x8]
    8d50:	ldur	x8, [x29, #-8]
    8d54:	add	x8, x8, x9
    8d58:	ldursw	x10, [x29, #-40]
    8d5c:	mul	x10, x11, x10
    8d60:	add	x8, x8, x10
    8d64:	ldr	x10, [sp, #120]
    8d68:	ldur	w12, [x29, #-28]
    8d6c:	add	w12, w12, #0x7
    8d70:	ldrh	w12, [x10, w12, sxtw #1]
    8d74:	mov	w10, w12
    8d78:	mul	x10, x13, x10
    8d7c:	add	x8, x8, x10
    8d80:	ldr	w12, [x8]
    8d84:	add	w12, w12, #0x1
    8d88:	str	w12, [x8]
    8d8c:	ldur	x8, [x29, #-8]
    8d90:	add	x8, x8, x9
    8d94:	ldursw	x10, [x29, #-40]
    8d98:	mul	x10, x11, x10
    8d9c:	add	x8, x8, x10
    8da0:	ldr	x10, [sp, #120]
    8da4:	ldur	w12, [x29, #-28]
    8da8:	add	w12, w12, #0x8
    8dac:	ldrh	w12, [x10, w12, sxtw #1]
    8db0:	mov	w10, w12
    8db4:	mul	x10, x13, x10
    8db8:	add	x8, x8, x10
    8dbc:	ldr	w12, [x8]
    8dc0:	add	w12, w12, #0x1
    8dc4:	str	w12, [x8]
    8dc8:	ldur	x8, [x29, #-8]
    8dcc:	add	x8, x8, x9
    8dd0:	ldursw	x10, [x29, #-40]
    8dd4:	mul	x10, x11, x10
    8dd8:	add	x8, x8, x10
    8ddc:	ldr	x10, [sp, #120]
    8de0:	ldur	w12, [x29, #-28]
    8de4:	add	w12, w12, #0x9
    8de8:	ldrh	w12, [x10, w12, sxtw #1]
    8dec:	mov	w10, w12
    8df0:	mul	x10, x13, x10
    8df4:	add	x8, x8, x10
    8df8:	ldr	w12, [x8]
    8dfc:	add	w12, w12, #0x1
    8e00:	str	w12, [x8]
    8e04:	ldur	x8, [x29, #-8]
    8e08:	add	x8, x8, x9
    8e0c:	ldursw	x10, [x29, #-40]
    8e10:	mul	x10, x11, x10
    8e14:	add	x8, x8, x10
    8e18:	ldr	x10, [sp, #120]
    8e1c:	ldur	w12, [x29, #-28]
    8e20:	add	w12, w12, #0xa
    8e24:	ldrh	w12, [x10, w12, sxtw #1]
    8e28:	mov	w10, w12
    8e2c:	mul	x10, x13, x10
    8e30:	add	x8, x8, x10
    8e34:	ldr	w12, [x8]
    8e38:	add	w12, w12, #0x1
    8e3c:	str	w12, [x8]
    8e40:	ldur	x8, [x29, #-8]
    8e44:	add	x8, x8, x9
    8e48:	ldursw	x10, [x29, #-40]
    8e4c:	mul	x10, x11, x10
    8e50:	add	x8, x8, x10
    8e54:	ldr	x10, [sp, #120]
    8e58:	ldur	w12, [x29, #-28]
    8e5c:	add	w12, w12, #0xb
    8e60:	ldrh	w12, [x10, w12, sxtw #1]
    8e64:	mov	w10, w12
    8e68:	mul	x10, x13, x10
    8e6c:	add	x8, x8, x10
    8e70:	ldr	w12, [x8]
    8e74:	add	w12, w12, #0x1
    8e78:	str	w12, [x8]
    8e7c:	ldur	x8, [x29, #-8]
    8e80:	add	x8, x8, x9
    8e84:	ldursw	x10, [x29, #-40]
    8e88:	mul	x10, x11, x10
    8e8c:	add	x8, x8, x10
    8e90:	ldr	x10, [sp, #120]
    8e94:	ldur	w12, [x29, #-28]
    8e98:	add	w12, w12, #0xc
    8e9c:	ldrh	w12, [x10, w12, sxtw #1]
    8ea0:	mov	w10, w12
    8ea4:	mul	x10, x13, x10
    8ea8:	add	x8, x8, x10
    8eac:	ldr	w12, [x8]
    8eb0:	add	w12, w12, #0x1
    8eb4:	str	w12, [x8]
    8eb8:	ldur	x8, [x29, #-8]
    8ebc:	add	x8, x8, x9
    8ec0:	ldursw	x10, [x29, #-40]
    8ec4:	mul	x10, x11, x10
    8ec8:	add	x8, x8, x10
    8ecc:	ldr	x10, [sp, #120]
    8ed0:	ldur	w12, [x29, #-28]
    8ed4:	add	w12, w12, #0xd
    8ed8:	ldrh	w12, [x10, w12, sxtw #1]
    8edc:	mov	w10, w12
    8ee0:	mul	x10, x13, x10
    8ee4:	add	x8, x8, x10
    8ee8:	ldr	w12, [x8]
    8eec:	add	w12, w12, #0x1
    8ef0:	str	w12, [x8]
    8ef4:	ldur	x8, [x29, #-8]
    8ef8:	add	x8, x8, x9
    8efc:	ldursw	x10, [x29, #-40]
    8f00:	mul	x10, x11, x10
    8f04:	add	x8, x8, x10
    8f08:	ldr	x10, [sp, #120]
    8f0c:	ldur	w12, [x29, #-28]
    8f10:	add	w12, w12, #0xe
    8f14:	ldrh	w12, [x10, w12, sxtw #1]
    8f18:	mov	w10, w12
    8f1c:	mul	x10, x13, x10
    8f20:	add	x8, x8, x10
    8f24:	ldr	w12, [x8]
    8f28:	add	w12, w12, #0x1
    8f2c:	str	w12, [x8]
    8f30:	ldur	x8, [x29, #-8]
    8f34:	add	x8, x8, x9
    8f38:	ldursw	x10, [x29, #-40]
    8f3c:	mul	x10, x11, x10
    8f40:	add	x8, x8, x10
    8f44:	ldr	x10, [sp, #120]
    8f48:	ldur	w12, [x29, #-28]
    8f4c:	add	w12, w12, #0xf
    8f50:	ldrh	w12, [x10, w12, sxtw #1]
    8f54:	mov	w10, w12
    8f58:	mul	x10, x13, x10
    8f5c:	add	x8, x8, x10
    8f60:	ldr	w12, [x8]
    8f64:	add	w12, w12, #0x1
    8f68:	str	w12, [x8]
    8f6c:	ldur	x8, [x29, #-8]
    8f70:	add	x8, x8, x9
    8f74:	ldursw	x10, [x29, #-40]
    8f78:	mul	x10, x11, x10
    8f7c:	add	x8, x8, x10
    8f80:	ldr	x10, [sp, #120]
    8f84:	ldur	w12, [x29, #-28]
    8f88:	add	w12, w12, #0x10
    8f8c:	ldrh	w12, [x10, w12, sxtw #1]
    8f90:	mov	w10, w12
    8f94:	mul	x10, x13, x10
    8f98:	add	x8, x8, x10
    8f9c:	ldr	w12, [x8]
    8fa0:	add	w12, w12, #0x1
    8fa4:	str	w12, [x8]
    8fa8:	ldur	x8, [x29, #-8]
    8fac:	add	x8, x8, x9
    8fb0:	ldursw	x10, [x29, #-40]
    8fb4:	mul	x10, x11, x10
    8fb8:	add	x8, x8, x10
    8fbc:	ldr	x10, [sp, #120]
    8fc0:	ldur	w12, [x29, #-28]
    8fc4:	add	w12, w12, #0x11
    8fc8:	ldrh	w12, [x10, w12, sxtw #1]
    8fcc:	mov	w10, w12
    8fd0:	mul	x10, x13, x10
    8fd4:	add	x8, x8, x10
    8fd8:	ldr	w12, [x8]
    8fdc:	add	w12, w12, #0x1
    8fe0:	str	w12, [x8]
    8fe4:	ldur	x8, [x29, #-8]
    8fe8:	add	x8, x8, x9
    8fec:	ldursw	x10, [x29, #-40]
    8ff0:	mul	x10, x11, x10
    8ff4:	add	x8, x8, x10
    8ff8:	ldr	x10, [sp, #120]
    8ffc:	ldur	w12, [x29, #-28]
    9000:	add	w12, w12, #0x12
    9004:	ldrh	w12, [x10, w12, sxtw #1]
    9008:	mov	w10, w12
    900c:	mul	x10, x13, x10
    9010:	add	x8, x8, x10
    9014:	ldr	w12, [x8]
    9018:	add	w12, w12, #0x1
    901c:	str	w12, [x8]
    9020:	ldur	x8, [x29, #-8]
    9024:	add	x8, x8, x9
    9028:	ldursw	x10, [x29, #-40]
    902c:	mul	x10, x11, x10
    9030:	add	x8, x8, x10
    9034:	ldr	x10, [sp, #120]
    9038:	ldur	w12, [x29, #-28]
    903c:	add	w12, w12, #0x13
    9040:	ldrh	w12, [x10, w12, sxtw #1]
    9044:	mov	w10, w12
    9048:	mul	x10, x13, x10
    904c:	add	x8, x8, x10
    9050:	ldr	w12, [x8]
    9054:	add	w12, w12, #0x1
    9058:	str	w12, [x8]
    905c:	ldur	x8, [x29, #-8]
    9060:	add	x8, x8, x9
    9064:	ldursw	x10, [x29, #-40]
    9068:	mul	x10, x11, x10
    906c:	add	x8, x8, x10
    9070:	ldr	x10, [sp, #120]
    9074:	ldur	w12, [x29, #-28]
    9078:	add	w12, w12, #0x14
    907c:	ldrh	w12, [x10, w12, sxtw #1]
    9080:	mov	w10, w12
    9084:	mul	x10, x13, x10
    9088:	add	x8, x8, x10
    908c:	ldr	w12, [x8]
    9090:	add	w12, w12, #0x1
    9094:	str	w12, [x8]
    9098:	ldur	x8, [x29, #-8]
    909c:	add	x8, x8, x9
    90a0:	ldursw	x10, [x29, #-40]
    90a4:	mul	x10, x11, x10
    90a8:	add	x8, x8, x10
    90ac:	ldr	x10, [sp, #120]
    90b0:	ldur	w12, [x29, #-28]
    90b4:	add	w12, w12, #0x15
    90b8:	ldrh	w12, [x10, w12, sxtw #1]
    90bc:	mov	w10, w12
    90c0:	mul	x10, x13, x10
    90c4:	add	x8, x8, x10
    90c8:	ldr	w12, [x8]
    90cc:	add	w12, w12, #0x1
    90d0:	str	w12, [x8]
    90d4:	ldur	x8, [x29, #-8]
    90d8:	add	x8, x8, x9
    90dc:	ldursw	x10, [x29, #-40]
    90e0:	mul	x10, x11, x10
    90e4:	add	x8, x8, x10
    90e8:	ldr	x10, [sp, #120]
    90ec:	ldur	w12, [x29, #-28]
    90f0:	add	w12, w12, #0x16
    90f4:	ldrh	w12, [x10, w12, sxtw #1]
    90f8:	mov	w10, w12
    90fc:	mul	x10, x13, x10
    9100:	add	x8, x8, x10
    9104:	ldr	w12, [x8]
    9108:	add	w12, w12, #0x1
    910c:	str	w12, [x8]
    9110:	ldur	x8, [x29, #-8]
    9114:	add	x8, x8, x9
    9118:	ldursw	x10, [x29, #-40]
    911c:	mul	x10, x11, x10
    9120:	add	x8, x8, x10
    9124:	ldr	x10, [sp, #120]
    9128:	ldur	w12, [x29, #-28]
    912c:	add	w12, w12, #0x17
    9130:	ldrh	w12, [x10, w12, sxtw #1]
    9134:	mov	w10, w12
    9138:	mul	x10, x13, x10
    913c:	add	x8, x8, x10
    9140:	ldr	w12, [x8]
    9144:	add	w12, w12, #0x1
    9148:	str	w12, [x8]
    914c:	ldur	x8, [x29, #-8]
    9150:	add	x8, x8, x9
    9154:	ldursw	x10, [x29, #-40]
    9158:	mul	x10, x11, x10
    915c:	add	x8, x8, x10
    9160:	ldr	x10, [sp, #120]
    9164:	ldur	w12, [x29, #-28]
    9168:	add	w12, w12, #0x18
    916c:	ldrh	w12, [x10, w12, sxtw #1]
    9170:	mov	w10, w12
    9174:	mul	x10, x13, x10
    9178:	add	x8, x8, x10
    917c:	ldr	w12, [x8]
    9180:	add	w12, w12, #0x1
    9184:	str	w12, [x8]
    9188:	ldur	x8, [x29, #-8]
    918c:	add	x8, x8, x9
    9190:	ldursw	x10, [x29, #-40]
    9194:	mul	x10, x11, x10
    9198:	add	x8, x8, x10
    919c:	ldr	x10, [sp, #120]
    91a0:	ldur	w12, [x29, #-28]
    91a4:	add	w12, w12, #0x19
    91a8:	ldrh	w12, [x10, w12, sxtw #1]
    91ac:	mov	w10, w12
    91b0:	mul	x10, x13, x10
    91b4:	add	x8, x8, x10
    91b8:	ldr	w12, [x8]
    91bc:	add	w12, w12, #0x1
    91c0:	str	w12, [x8]
    91c4:	ldur	x8, [x29, #-8]
    91c8:	add	x8, x8, x9
    91cc:	ldursw	x10, [x29, #-40]
    91d0:	mul	x10, x11, x10
    91d4:	add	x8, x8, x10
    91d8:	ldr	x10, [sp, #120]
    91dc:	ldur	w12, [x29, #-28]
    91e0:	add	w12, w12, #0x1a
    91e4:	ldrh	w12, [x10, w12, sxtw #1]
    91e8:	mov	w10, w12
    91ec:	mul	x10, x13, x10
    91f0:	add	x8, x8, x10
    91f4:	ldr	w12, [x8]
    91f8:	add	w12, w12, #0x1
    91fc:	str	w12, [x8]
    9200:	ldur	x8, [x29, #-8]
    9204:	add	x8, x8, x9
    9208:	ldursw	x10, [x29, #-40]
    920c:	mul	x10, x11, x10
    9210:	add	x8, x8, x10
    9214:	ldr	x10, [sp, #120]
    9218:	ldur	w12, [x29, #-28]
    921c:	add	w12, w12, #0x1b
    9220:	ldrh	w12, [x10, w12, sxtw #1]
    9224:	mov	w10, w12
    9228:	mul	x10, x13, x10
    922c:	add	x8, x8, x10
    9230:	ldr	w12, [x8]
    9234:	add	w12, w12, #0x1
    9238:	str	w12, [x8]
    923c:	ldur	x8, [x29, #-8]
    9240:	add	x8, x8, x9
    9244:	ldursw	x10, [x29, #-40]
    9248:	mul	x10, x11, x10
    924c:	add	x8, x8, x10
    9250:	ldr	x10, [sp, #120]
    9254:	ldur	w12, [x29, #-28]
    9258:	add	w12, w12, #0x1c
    925c:	ldrh	w12, [x10, w12, sxtw #1]
    9260:	mov	w10, w12
    9264:	mul	x10, x13, x10
    9268:	add	x8, x8, x10
    926c:	ldr	w12, [x8]
    9270:	add	w12, w12, #0x1
    9274:	str	w12, [x8]
    9278:	ldur	x8, [x29, #-8]
    927c:	add	x8, x8, x9
    9280:	ldursw	x10, [x29, #-40]
    9284:	mul	x10, x11, x10
    9288:	add	x8, x8, x10
    928c:	ldr	x10, [sp, #120]
    9290:	ldur	w12, [x29, #-28]
    9294:	add	w12, w12, #0x1d
    9298:	ldrh	w12, [x10, w12, sxtw #1]
    929c:	mov	w10, w12
    92a0:	mul	x10, x13, x10
    92a4:	add	x8, x8, x10
    92a8:	ldr	w12, [x8]
    92ac:	add	w12, w12, #0x1
    92b0:	str	w12, [x8]
    92b4:	ldur	x8, [x29, #-8]
    92b8:	add	x8, x8, x9
    92bc:	ldursw	x10, [x29, #-40]
    92c0:	mul	x10, x11, x10
    92c4:	add	x8, x8, x10
    92c8:	ldr	x10, [sp, #120]
    92cc:	ldur	w12, [x29, #-28]
    92d0:	add	w12, w12, #0x1e
    92d4:	ldrh	w12, [x10, w12, sxtw #1]
    92d8:	mov	w10, w12
    92dc:	mul	x10, x13, x10
    92e0:	add	x8, x8, x10
    92e4:	ldr	w12, [x8]
    92e8:	add	w12, w12, #0x1
    92ec:	str	w12, [x8]
    92f0:	ldur	x8, [x29, #-8]
    92f4:	add	x8, x8, x9
    92f8:	ldursw	x10, [x29, #-40]
    92fc:	mul	x10, x11, x10
    9300:	add	x8, x8, x10
    9304:	ldr	x10, [sp, #120]
    9308:	ldur	w12, [x29, #-28]
    930c:	add	w12, w12, #0x1f
    9310:	ldrh	w12, [x10, w12, sxtw #1]
    9314:	mov	w10, w12
    9318:	mul	x10, x13, x10
    931c:	add	x8, x8, x10
    9320:	ldr	w12, [x8]
    9324:	add	w12, w12, #0x1
    9328:	str	w12, [x8]
    932c:	ldur	x8, [x29, #-8]
    9330:	add	x8, x8, x9
    9334:	ldursw	x10, [x29, #-40]
    9338:	mul	x10, x11, x10
    933c:	add	x8, x8, x10
    9340:	ldr	x10, [sp, #120]
    9344:	ldur	w12, [x29, #-28]
    9348:	add	w12, w12, #0x20
    934c:	ldrh	w12, [x10, w12, sxtw #1]
    9350:	mov	w10, w12
    9354:	mul	x10, x13, x10
    9358:	add	x8, x8, x10
    935c:	ldr	w12, [x8]
    9360:	add	w12, w12, #0x1
    9364:	str	w12, [x8]
    9368:	ldur	x8, [x29, #-8]
    936c:	add	x8, x8, x9
    9370:	ldursw	x10, [x29, #-40]
    9374:	mul	x10, x11, x10
    9378:	add	x8, x8, x10
    937c:	ldr	x10, [sp, #120]
    9380:	ldur	w12, [x29, #-28]
    9384:	add	w12, w12, #0x21
    9388:	ldrh	w12, [x10, w12, sxtw #1]
    938c:	mov	w10, w12
    9390:	mul	x10, x13, x10
    9394:	add	x8, x8, x10
    9398:	ldr	w12, [x8]
    939c:	add	w12, w12, #0x1
    93a0:	str	w12, [x8]
    93a4:	ldur	x8, [x29, #-8]
    93a8:	add	x8, x8, x9
    93ac:	ldursw	x10, [x29, #-40]
    93b0:	mul	x10, x11, x10
    93b4:	add	x8, x8, x10
    93b8:	ldr	x10, [sp, #120]
    93bc:	ldur	w12, [x29, #-28]
    93c0:	add	w12, w12, #0x22
    93c4:	ldrh	w12, [x10, w12, sxtw #1]
    93c8:	mov	w10, w12
    93cc:	mul	x10, x13, x10
    93d0:	add	x8, x8, x10
    93d4:	ldr	w12, [x8]
    93d8:	add	w12, w12, #0x1
    93dc:	str	w12, [x8]
    93e0:	ldur	x8, [x29, #-8]
    93e4:	add	x8, x8, x9
    93e8:	ldursw	x10, [x29, #-40]
    93ec:	mul	x10, x11, x10
    93f0:	add	x8, x8, x10
    93f4:	ldr	x10, [sp, #120]
    93f8:	ldur	w12, [x29, #-28]
    93fc:	add	w12, w12, #0x23
    9400:	ldrh	w12, [x10, w12, sxtw #1]
    9404:	mov	w10, w12
    9408:	mul	x10, x13, x10
    940c:	add	x8, x8, x10
    9410:	ldr	w12, [x8]
    9414:	add	w12, w12, #0x1
    9418:	str	w12, [x8]
    941c:	ldur	x8, [x29, #-8]
    9420:	add	x8, x8, x9
    9424:	ldursw	x10, [x29, #-40]
    9428:	mul	x10, x11, x10
    942c:	add	x8, x8, x10
    9430:	ldr	x10, [sp, #120]
    9434:	ldur	w12, [x29, #-28]
    9438:	add	w12, w12, #0x24
    943c:	ldrh	w12, [x10, w12, sxtw #1]
    9440:	mov	w10, w12
    9444:	mul	x10, x13, x10
    9448:	add	x8, x8, x10
    944c:	ldr	w12, [x8]
    9450:	add	w12, w12, #0x1
    9454:	str	w12, [x8]
    9458:	ldur	x8, [x29, #-8]
    945c:	add	x8, x8, x9
    9460:	ldursw	x10, [x29, #-40]
    9464:	mul	x10, x11, x10
    9468:	add	x8, x8, x10
    946c:	ldr	x10, [sp, #120]
    9470:	ldur	w12, [x29, #-28]
    9474:	add	w12, w12, #0x25
    9478:	ldrh	w12, [x10, w12, sxtw #1]
    947c:	mov	w10, w12
    9480:	mul	x10, x13, x10
    9484:	add	x8, x8, x10
    9488:	ldr	w12, [x8]
    948c:	add	w12, w12, #0x1
    9490:	str	w12, [x8]
    9494:	ldur	x8, [x29, #-8]
    9498:	add	x8, x8, x9
    949c:	ldursw	x10, [x29, #-40]
    94a0:	mul	x10, x11, x10
    94a4:	add	x8, x8, x10
    94a8:	ldr	x10, [sp, #120]
    94ac:	ldur	w12, [x29, #-28]
    94b0:	add	w12, w12, #0x26
    94b4:	ldrh	w12, [x10, w12, sxtw #1]
    94b8:	mov	w10, w12
    94bc:	mul	x10, x13, x10
    94c0:	add	x8, x8, x10
    94c4:	ldr	w12, [x8]
    94c8:	add	w12, w12, #0x1
    94cc:	str	w12, [x8]
    94d0:	ldur	x8, [x29, #-8]
    94d4:	add	x8, x8, x9
    94d8:	ldursw	x10, [x29, #-40]
    94dc:	mul	x10, x11, x10
    94e0:	add	x8, x8, x10
    94e4:	ldr	x10, [sp, #120]
    94e8:	ldur	w12, [x29, #-28]
    94ec:	add	w12, w12, #0x27
    94f0:	ldrh	w12, [x10, w12, sxtw #1]
    94f4:	mov	w10, w12
    94f8:	mul	x10, x13, x10
    94fc:	add	x8, x8, x10
    9500:	ldr	w12, [x8]
    9504:	add	w12, w12, #0x1
    9508:	str	w12, [x8]
    950c:	ldur	x8, [x29, #-8]
    9510:	add	x8, x8, x9
    9514:	ldursw	x10, [x29, #-40]
    9518:	mul	x10, x11, x10
    951c:	add	x8, x8, x10
    9520:	ldr	x10, [sp, #120]
    9524:	ldur	w12, [x29, #-28]
    9528:	add	w12, w12, #0x28
    952c:	ldrh	w12, [x10, w12, sxtw #1]
    9530:	mov	w10, w12
    9534:	mul	x10, x13, x10
    9538:	add	x8, x8, x10
    953c:	ldr	w12, [x8]
    9540:	add	w12, w12, #0x1
    9544:	str	w12, [x8]
    9548:	ldur	x8, [x29, #-8]
    954c:	add	x8, x8, x9
    9550:	ldursw	x10, [x29, #-40]
    9554:	mul	x10, x11, x10
    9558:	add	x8, x8, x10
    955c:	ldr	x10, [sp, #120]
    9560:	ldur	w12, [x29, #-28]
    9564:	add	w12, w12, #0x29
    9568:	ldrh	w12, [x10, w12, sxtw #1]
    956c:	mov	w10, w12
    9570:	mul	x10, x13, x10
    9574:	add	x8, x8, x10
    9578:	ldr	w12, [x8]
    957c:	add	w12, w12, #0x1
    9580:	str	w12, [x8]
    9584:	ldur	x8, [x29, #-8]
    9588:	add	x8, x8, x9
    958c:	ldursw	x10, [x29, #-40]
    9590:	mul	x10, x11, x10
    9594:	add	x8, x8, x10
    9598:	ldr	x10, [sp, #120]
    959c:	ldur	w12, [x29, #-28]
    95a0:	add	w12, w12, #0x2a
    95a4:	ldrh	w12, [x10, w12, sxtw #1]
    95a8:	mov	w10, w12
    95ac:	mul	x10, x13, x10
    95b0:	add	x8, x8, x10
    95b4:	ldr	w12, [x8]
    95b8:	add	w12, w12, #0x1
    95bc:	str	w12, [x8]
    95c0:	ldur	x8, [x29, #-8]
    95c4:	add	x8, x8, x9
    95c8:	ldursw	x10, [x29, #-40]
    95cc:	mul	x10, x11, x10
    95d0:	add	x8, x8, x10
    95d4:	ldr	x10, [sp, #120]
    95d8:	ldur	w12, [x29, #-28]
    95dc:	add	w12, w12, #0x2b
    95e0:	ldrh	w12, [x10, w12, sxtw #1]
    95e4:	mov	w10, w12
    95e8:	mul	x10, x13, x10
    95ec:	add	x8, x8, x10
    95f0:	ldr	w12, [x8]
    95f4:	add	w12, w12, #0x1
    95f8:	str	w12, [x8]
    95fc:	ldur	x8, [x29, #-8]
    9600:	add	x8, x8, x9
    9604:	ldursw	x10, [x29, #-40]
    9608:	mul	x10, x11, x10
    960c:	add	x8, x8, x10
    9610:	ldr	x10, [sp, #120]
    9614:	ldur	w12, [x29, #-28]
    9618:	add	w12, w12, #0x2c
    961c:	ldrh	w12, [x10, w12, sxtw #1]
    9620:	mov	w10, w12
    9624:	mul	x10, x13, x10
    9628:	add	x8, x8, x10
    962c:	ldr	w12, [x8]
    9630:	add	w12, w12, #0x1
    9634:	str	w12, [x8]
    9638:	ldur	x8, [x29, #-8]
    963c:	add	x8, x8, x9
    9640:	ldursw	x10, [x29, #-40]
    9644:	mul	x10, x11, x10
    9648:	add	x8, x8, x10
    964c:	ldr	x10, [sp, #120]
    9650:	ldur	w12, [x29, #-28]
    9654:	add	w12, w12, #0x2d
    9658:	ldrh	w12, [x10, w12, sxtw #1]
    965c:	mov	w10, w12
    9660:	mul	x10, x13, x10
    9664:	add	x8, x8, x10
    9668:	ldr	w12, [x8]
    966c:	add	w12, w12, #0x1
    9670:	str	w12, [x8]
    9674:	ldur	x8, [x29, #-8]
    9678:	add	x8, x8, x9
    967c:	ldursw	x10, [x29, #-40]
    9680:	mul	x10, x11, x10
    9684:	add	x8, x8, x10
    9688:	ldr	x10, [sp, #120]
    968c:	ldur	w12, [x29, #-28]
    9690:	add	w12, w12, #0x2e
    9694:	ldrh	w12, [x10, w12, sxtw #1]
    9698:	mov	w10, w12
    969c:	mul	x10, x13, x10
    96a0:	add	x8, x8, x10
    96a4:	ldr	w12, [x8]
    96a8:	add	w12, w12, #0x1
    96ac:	str	w12, [x8]
    96b0:	ldur	x8, [x29, #-8]
    96b4:	add	x8, x8, x9
    96b8:	ldursw	x10, [x29, #-40]
    96bc:	mul	x10, x11, x10
    96c0:	add	x8, x8, x10
    96c4:	ldr	x10, [sp, #120]
    96c8:	ldur	w12, [x29, #-28]
    96cc:	add	w12, w12, #0x2f
    96d0:	ldrh	w12, [x10, w12, sxtw #1]
    96d4:	mov	w10, w12
    96d8:	mul	x10, x13, x10
    96dc:	add	x8, x8, x10
    96e0:	ldr	w12, [x8]
    96e4:	add	w12, w12, #0x1
    96e8:	str	w12, [x8]
    96ec:	ldur	x8, [x29, #-8]
    96f0:	add	x8, x8, x9
    96f4:	ldursw	x10, [x29, #-40]
    96f8:	mul	x10, x11, x10
    96fc:	add	x8, x8, x10
    9700:	ldr	x10, [sp, #120]
    9704:	ldur	w12, [x29, #-28]
    9708:	add	w12, w12, #0x30
    970c:	ldrh	w12, [x10, w12, sxtw #1]
    9710:	mov	w10, w12
    9714:	mul	x10, x13, x10
    9718:	add	x8, x8, x10
    971c:	ldr	w12, [x8]
    9720:	add	w12, w12, #0x1
    9724:	str	w12, [x8]
    9728:	ldur	x8, [x29, #-8]
    972c:	add	x8, x8, x9
    9730:	ldursw	x9, [x29, #-40]
    9734:	mul	x9, x11, x9
    9738:	add	x8, x8, x9
    973c:	ldr	x9, [sp, #120]
    9740:	ldur	w12, [x29, #-28]
    9744:	add	w12, w12, #0x31
    9748:	ldrh	w12, [x9, w12, sxtw #1]
    974c:	mov	w9, w12
    9750:	mul	x9, x13, x9
    9754:	add	x8, x8, x9
    9758:	ldr	w12, [x8]
    975c:	add	w12, w12, #0x1
    9760:	str	w12, [x8]
    9764:	b	97d4 <BZ2_compressBlock@@Base+0x3afc>
    9768:	ldur	w8, [x29, #-28]
    976c:	stur	w8, [x29, #-20]
    9770:	ldur	w8, [x29, #-20]
    9774:	ldur	w9, [x29, #-32]
    9778:	cmp	w8, w9
    977c:	b.gt	97d4 <BZ2_compressBlock@@Base+0x3afc>
    9780:	ldur	x8, [x29, #-8]
    9784:	mov	x9, #0xb188                	// #45448
    9788:	add	x8, x8, x9
    978c:	ldursw	x9, [x29, #-40]
    9790:	mov	x10, #0x408                 	// #1032
    9794:	mul	x9, x10, x9
    9798:	add	x8, x8, x9
    979c:	ldr	x9, [sp, #120]
    97a0:	ldursw	x10, [x29, #-20]
    97a4:	ldrh	w11, [x9, x10, lsl #1]
    97a8:	mov	w9, w11
    97ac:	mov	x10, #0x4                   	// #4
    97b0:	mul	x9, x10, x9
    97b4:	add	x8, x8, x9
    97b8:	ldr	w11, [x8]
    97bc:	add	w11, w11, #0x1
    97c0:	str	w11, [x8]
    97c4:	ldur	w8, [x29, #-20]
    97c8:	add	w8, w8, #0x1
    97cc:	stur	w8, [x29, #-20]
    97d0:	b	9770 <BZ2_compressBlock@@Base+0x3a98>
    97d4:	ldur	w8, [x29, #-32]
    97d8:	add	w8, w8, #0x1
    97dc:	stur	w8, [x29, #-28]
    97e0:	b	6b38 <BZ2_compressBlock@@Base+0xe60>
    97e4:	ldur	x8, [x29, #-8]
    97e8:	ldr	w9, [x8, #656]
    97ec:	cmp	w9, #0x3
    97f0:	b.lt	9874 <BZ2_compressBlock@@Base+0x3b9c>  // b.tstop
    97f4:	ldr	x8, [sp, #24]
    97f8:	ldr	x0, [x8]
    97fc:	ldur	w9, [x29, #-48]
    9800:	add	w2, w9, #0x1
    9804:	ldur	w9, [x29, #-36]
    9808:	mov	w10, #0x8                   	// #8
    980c:	sdiv	w3, w9, w10
    9810:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    9814:	add	x1, x1, #0xb38
    9818:	bl	16e0 <fprintf@plt>
    981c:	stur	wzr, [x29, #-16]
    9820:	ldur	w8, [x29, #-16]
    9824:	ldur	w9, [x29, #-72]
    9828:	cmp	w8, w9
    982c:	b.ge	9860 <BZ2_compressBlock@@Base+0x3b88>  // b.tcont
    9830:	ldr	x8, [sp, #24]
    9834:	ldr	x0, [x8]
    9838:	ldursw	x9, [x29, #-16]
    983c:	sub	x10, x29, #0x70
    9840:	ldr	w2, [x10, x9, lsl #2]
    9844:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    9848:	add	x1, x1, #0xb61
    984c:	bl	16e0 <fprintf@plt>
    9850:	ldur	w8, [x29, #-16]
    9854:	add	w8, w8, #0x1
    9858:	stur	w8, [x29, #-16]
    985c:	b	9820 <BZ2_compressBlock@@Base+0x3b48>
    9860:	ldr	x8, [sp, #24]
    9864:	ldr	x0, [x8]
    9868:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    986c:	add	x1, x1, #0xe17
    9870:	bl	16e0 <fprintf@plt>
    9874:	stur	wzr, [x29, #-16]
    9878:	ldur	w8, [x29, #-16]
    987c:	ldur	w9, [x29, #-72]
    9880:	cmp	w8, w9
    9884:	b.ge	98dc <BZ2_compressBlock@@Base+0x3c04>  // b.tcont
    9888:	ldur	x8, [x29, #-8]
    988c:	mov	x9, #0x934c                	// #37708
    9890:	add	x8, x8, x9
    9894:	ldursw	x9, [x29, #-16]
    9898:	mov	x10, #0x102                 	// #258
    989c:	mul	x9, x10, x9
    98a0:	add	x0, x8, x9
    98a4:	ldur	x8, [x29, #-8]
    98a8:	mov	x9, #0xb188                	// #45448
    98ac:	add	x8, x8, x9
    98b0:	ldursw	x9, [x29, #-16]
    98b4:	mov	x10, #0x408                 	// #1032
    98b8:	mul	x9, x10, x9
    98bc:	add	x1, x8, x9
    98c0:	ldur	w2, [x29, #-56]
    98c4:	mov	w3, #0x11                  	// #17
    98c8:	bl	1470 <BZ2_hbMakeCodeLengths@plt>
    98cc:	ldur	w8, [x29, #-16]
    98d0:	add	w8, w8, #0x1
    98d4:	stur	w8, [x29, #-16]
    98d8:	b	9878 <BZ2_compressBlock@@Base+0x3ba0>
    98dc:	ldur	w8, [x29, #-48]
    98e0:	add	w8, w8, #0x1
    98e4:	stur	w8, [x29, #-48]
    98e8:	b	697c <BZ2_compressBlock@@Base+0xca4>
    98ec:	ldur	w8, [x29, #-72]
    98f0:	cmp	w8, #0x8
    98f4:	b.lt	9900 <BZ2_compressBlock@@Base+0x3c28>  // b.tstop
    98f8:	mov	w0, #0xbba                 	// #3002
    98fc:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    9900:	ldur	w8, [x29, #-52]
    9904:	cmp	w8, #0x8, lsl #12
    9908:	b.ge	991c <BZ2_compressBlock@@Base+0x3c44>  // b.tcont
    990c:	ldur	w8, [x29, #-52]
    9910:	mov	w9, #0x4652                	// #18002
    9914:	cmp	w8, w9
    9918:	b.le	9924 <BZ2_compressBlock@@Base+0x3c4c>
    991c:	mov	w0, #0xbbb                 	// #3003
    9920:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    9924:	stur	wzr, [x29, #-20]
    9928:	ldur	w8, [x29, #-20]
    992c:	ldur	w9, [x29, #-72]
    9930:	cmp	w8, w9
    9934:	b.ge	995c <BZ2_compressBlock@@Base+0x3c84>  // b.tcont
    9938:	ldur	w8, [x29, #-20]
    993c:	ldursw	x9, [x29, #-20]
    9940:	add	x10, sp, #0x52
    9944:	add	x9, x10, x9
    9948:	strb	w8, [x9]
    994c:	ldur	w8, [x29, #-20]
    9950:	add	w8, w8, #0x1
    9954:	stur	w8, [x29, #-20]
    9958:	b	9928 <BZ2_compressBlock@@Base+0x3c50>
    995c:	stur	wzr, [x29, #-20]
    9960:	ldur	w8, [x29, #-20]
    9964:	ldur	w9, [x29, #-52]
    9968:	cmp	w8, w9
    996c:	b.ge	9a20 <BZ2_compressBlock@@Base+0x3d48>  // b.tcont
    9970:	ldur	x8, [x29, #-8]
    9974:	add	x8, x8, #0x6a8
    9978:	ldursw	x9, [x29, #-20]
    997c:	add	x8, x8, x9
    9980:	ldrb	w10, [x8]
    9984:	strb	w10, [sp, #81]
    9988:	stur	wzr, [x29, #-24]
    998c:	ldursw	x8, [x29, #-24]
    9990:	add	x9, sp, #0x52
    9994:	add	x8, x9, x8
    9998:	ldrb	w10, [x8]
    999c:	strb	w10, [sp, #79]
    99a0:	ldrb	w8, [sp, #81]
    99a4:	ldrb	w9, [sp, #79]
    99a8:	cmp	w8, w9
    99ac:	b.eq	99ec <BZ2_compressBlock@@Base+0x3d14>  // b.none
    99b0:	ldur	w8, [x29, #-24]
    99b4:	add	w8, w8, #0x1
    99b8:	stur	w8, [x29, #-24]
    99bc:	ldrb	w8, [sp, #79]
    99c0:	strb	w8, [sp, #80]
    99c4:	ldursw	x9, [x29, #-24]
    99c8:	add	x10, sp, #0x52
    99cc:	add	x9, x10, x9
    99d0:	ldrb	w8, [x9]
    99d4:	strb	w8, [sp, #79]
    99d8:	ldrb	w8, [sp, #80]
    99dc:	ldursw	x9, [x29, #-24]
    99e0:	add	x9, x10, x9
    99e4:	strb	w8, [x9]
    99e8:	b	99a0 <BZ2_compressBlock@@Base+0x3cc8>
    99ec:	ldrb	w8, [sp, #79]
    99f0:	strb	w8, [sp, #82]
    99f4:	ldur	w8, [x29, #-24]
    99f8:	ldur	x9, [x29, #-8]
    99fc:	mov	x10, #0x4cfa                	// #19706
    9a00:	add	x9, x9, x10
    9a04:	ldursw	x10, [x29, #-20]
    9a08:	add	x9, x9, x10
    9a0c:	strb	w8, [x9]
    9a10:	ldur	w8, [x29, #-20]
    9a14:	add	w8, w8, #0x1
    9a18:	stur	w8, [x29, #-20]
    9a1c:	b	9960 <BZ2_compressBlock@@Base+0x3c88>
    9a20:	stur	wzr, [x29, #-16]
    9a24:	ldur	w8, [x29, #-16]
    9a28:	ldur	w9, [x29, #-72]
    9a2c:	cmp	w8, w9
    9a30:	b.ge	9b94 <BZ2_compressBlock@@Base+0x3ebc>  // b.tcont
    9a34:	mov	w8, #0x20                  	// #32
    9a38:	stur	w8, [x29, #-60]
    9a3c:	stur	wzr, [x29, #-64]
    9a40:	stur	wzr, [x29, #-20]
    9a44:	ldur	w8, [x29, #-20]
    9a48:	ldur	w9, [x29, #-56]
    9a4c:	cmp	w8, w9
    9a50:	b.ge	9b14 <BZ2_compressBlock@@Base+0x3e3c>  // b.tcont
    9a54:	ldur	x8, [x29, #-8]
    9a58:	mov	x9, #0x934c                	// #37708
    9a5c:	add	x8, x8, x9
    9a60:	ldursw	x9, [x29, #-16]
    9a64:	mov	x10, #0x102                 	// #258
    9a68:	mul	x9, x10, x9
    9a6c:	add	x8, x8, x9
    9a70:	ldursw	x9, [x29, #-20]
    9a74:	ldrb	w11, [x8, x9]
    9a78:	ldur	w12, [x29, #-64]
    9a7c:	cmp	w11, w12
    9a80:	b.le	9aac <BZ2_compressBlock@@Base+0x3dd4>
    9a84:	ldur	x8, [x29, #-8]
    9a88:	mov	x9, #0x934c                	// #37708
    9a8c:	add	x8, x8, x9
    9a90:	ldursw	x9, [x29, #-16]
    9a94:	mov	x10, #0x102                 	// #258
    9a98:	mul	x9, x10, x9
    9a9c:	add	x8, x8, x9
    9aa0:	ldursw	x9, [x29, #-20]
    9aa4:	ldrb	w11, [x8, x9]
    9aa8:	stur	w11, [x29, #-64]
    9aac:	ldur	x8, [x29, #-8]
    9ab0:	mov	x9, #0x934c                	// #37708
    9ab4:	add	x8, x8, x9
    9ab8:	ldursw	x9, [x29, #-16]
    9abc:	mov	x10, #0x102                 	// #258
    9ac0:	mul	x9, x10, x9
    9ac4:	add	x8, x8, x9
    9ac8:	ldursw	x9, [x29, #-20]
    9acc:	ldrb	w11, [x8, x9]
    9ad0:	ldur	w12, [x29, #-60]
    9ad4:	cmp	w11, w12
    9ad8:	b.ge	9b04 <BZ2_compressBlock@@Base+0x3e2c>  // b.tcont
    9adc:	ldur	x8, [x29, #-8]
    9ae0:	mov	x9, #0x934c                	// #37708
    9ae4:	add	x8, x8, x9
    9ae8:	ldursw	x9, [x29, #-16]
    9aec:	mov	x10, #0x102                 	// #258
    9af0:	mul	x9, x10, x9
    9af4:	add	x8, x8, x9
    9af8:	ldursw	x9, [x29, #-20]
    9afc:	ldrb	w11, [x8, x9]
    9b00:	stur	w11, [x29, #-60]
    9b04:	ldur	w8, [x29, #-20]
    9b08:	add	w8, w8, #0x1
    9b0c:	stur	w8, [x29, #-20]
    9b10:	b	9a44 <BZ2_compressBlock@@Base+0x3d6c>
    9b14:	ldur	w8, [x29, #-64]
    9b18:	cmp	w8, #0x11
    9b1c:	b.le	9b28 <BZ2_compressBlock@@Base+0x3e50>
    9b20:	mov	w0, #0xbbc                 	// #3004
    9b24:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    9b28:	ldur	w8, [x29, #-60]
    9b2c:	cmp	w8, #0x1
    9b30:	b.ge	9b3c <BZ2_compressBlock@@Base+0x3e64>  // b.tcont
    9b34:	mov	w0, #0xbbd                 	// #3005
    9b38:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    9b3c:	ldur	x8, [x29, #-8]
    9b40:	mov	x9, #0x9958                	// #39256
    9b44:	add	x8, x8, x9
    9b48:	ldursw	x9, [x29, #-16]
    9b4c:	mov	x10, #0x408                 	// #1032
    9b50:	mul	x9, x10, x9
    9b54:	add	x0, x8, x9
    9b58:	ldur	x8, [x29, #-8]
    9b5c:	mov	x9, #0x934c                	// #37708
    9b60:	add	x8, x8, x9
    9b64:	ldursw	x9, [x29, #-16]
    9b68:	mov	x10, #0x102                 	// #258
    9b6c:	mul	x9, x10, x9
    9b70:	add	x1, x8, x9
    9b74:	ldur	w2, [x29, #-60]
    9b78:	ldur	w3, [x29, #-64]
    9b7c:	ldur	w4, [x29, #-56]
    9b80:	bl	1670 <BZ2_hbAssignCodes@plt>
    9b84:	ldur	w8, [x29, #-16]
    9b88:	add	w8, w8, #0x1
    9b8c:	stur	w8, [x29, #-16]
    9b90:	b	9a24 <BZ2_compressBlock@@Base+0x3d4c>
    9b94:	stur	wzr, [x29, #-20]
    9b98:	ldur	w8, [x29, #-20]
    9b9c:	cmp	w8, #0x10
    9ba0:	b.ge	9c2c <BZ2_compressBlock@@Base+0x3f54>  // b.tcont
    9ba4:	ldursw	x8, [x29, #-20]
    9ba8:	add	x9, sp, #0x3f
    9bac:	add	x8, x9, x8
    9bb0:	mov	w10, #0x0                   	// #0
    9bb4:	strb	w10, [x8]
    9bb8:	stur	wzr, [x29, #-24]
    9bbc:	ldur	w8, [x29, #-24]
    9bc0:	cmp	w8, #0x10
    9bc4:	b.ge	9c1c <BZ2_compressBlock@@Base+0x3f44>  // b.tcont
    9bc8:	ldur	x8, [x29, #-8]
    9bcc:	add	x8, x8, #0x80
    9bd0:	ldur	w9, [x29, #-20]
    9bd4:	mov	w10, #0x10                  	// #16
    9bd8:	mul	w9, w9, w10
    9bdc:	ldur	w10, [x29, #-24]
    9be0:	add	w9, w9, w10
    9be4:	mov	w0, w9
    9be8:	sxtw	x11, w0
    9bec:	add	x8, x8, x11
    9bf0:	ldrb	w9, [x8]
    9bf4:	cbz	w9, 9c0c <BZ2_compressBlock@@Base+0x3f34>
    9bf8:	ldursw	x8, [x29, #-20]
    9bfc:	add	x9, sp, #0x3f
    9c00:	add	x8, x9, x8
    9c04:	mov	w10, #0x1                   	// #1
    9c08:	strb	w10, [x8]
    9c0c:	ldur	w8, [x29, #-24]
    9c10:	add	w8, w8, #0x1
    9c14:	stur	w8, [x29, #-24]
    9c18:	b	9bbc <BZ2_compressBlock@@Base+0x3ee4>
    9c1c:	ldur	w8, [x29, #-20]
    9c20:	add	w8, w8, #0x1
    9c24:	stur	w8, [x29, #-20]
    9c28:	b	9b98 <BZ2_compressBlock@@Base+0x3ec0>
    9c2c:	ldur	x8, [x29, #-8]
    9c30:	ldr	w9, [x8, #116]
    9c34:	stur	w9, [x29, #-76]
    9c38:	stur	wzr, [x29, #-20]
    9c3c:	ldur	w8, [x29, #-20]
    9c40:	cmp	w8, #0x10
    9c44:	b.ge	9c98 <BZ2_compressBlock@@Base+0x3fc0>  // b.tcont
    9c48:	ldursw	x8, [x29, #-20]
    9c4c:	add	x9, sp, #0x3f
    9c50:	add	x8, x9, x8
    9c54:	ldrb	w10, [x8]
    9c58:	cbz	w10, 9c74 <BZ2_compressBlock@@Base+0x3f9c>
    9c5c:	ldur	x0, [x29, #-8]
    9c60:	mov	w8, #0x1                   	// #1
    9c64:	mov	w1, w8
    9c68:	mov	w2, w8
    9c6c:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9c70:	b	9c88 <BZ2_compressBlock@@Base+0x3fb0>
    9c74:	ldur	x0, [x29, #-8]
    9c78:	mov	w1, #0x1                   	// #1
    9c7c:	mov	w8, wzr
    9c80:	mov	w2, w8
    9c84:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9c88:	ldur	w8, [x29, #-20]
    9c8c:	add	w8, w8, #0x1
    9c90:	stur	w8, [x29, #-20]
    9c94:	b	9c3c <BZ2_compressBlock@@Base+0x3f64>
    9c98:	stur	wzr, [x29, #-20]
    9c9c:	ldur	w8, [x29, #-20]
    9ca0:	cmp	w8, #0x10
    9ca4:	b.ge	9d48 <BZ2_compressBlock@@Base+0x4070>  // b.tcont
    9ca8:	ldursw	x8, [x29, #-20]
    9cac:	add	x9, sp, #0x3f
    9cb0:	add	x8, x9, x8
    9cb4:	ldrb	w10, [x8]
    9cb8:	cbz	w10, 9d38 <BZ2_compressBlock@@Base+0x4060>
    9cbc:	stur	wzr, [x29, #-24]
    9cc0:	ldur	w8, [x29, #-24]
    9cc4:	cmp	w8, #0x10
    9cc8:	b.ge	9d38 <BZ2_compressBlock@@Base+0x4060>  // b.tcont
    9ccc:	ldur	x8, [x29, #-8]
    9cd0:	add	x8, x8, #0x80
    9cd4:	ldur	w9, [x29, #-20]
    9cd8:	mov	w10, #0x10                  	// #16
    9cdc:	mul	w9, w9, w10
    9ce0:	ldur	w10, [x29, #-24]
    9ce4:	add	w9, w9, w10
    9ce8:	mov	w0, w9
    9cec:	sxtw	x11, w0
    9cf0:	add	x8, x8, x11
    9cf4:	ldrb	w9, [x8]
    9cf8:	cbz	w9, 9d14 <BZ2_compressBlock@@Base+0x403c>
    9cfc:	ldur	x0, [x29, #-8]
    9d00:	mov	w8, #0x1                   	// #1
    9d04:	mov	w1, w8
    9d08:	mov	w2, w8
    9d0c:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9d10:	b	9d28 <BZ2_compressBlock@@Base+0x4050>
    9d14:	ldur	x0, [x29, #-8]
    9d18:	mov	w1, #0x1                   	// #1
    9d1c:	mov	w8, wzr
    9d20:	mov	w2, w8
    9d24:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9d28:	ldur	w8, [x29, #-24]
    9d2c:	add	w8, w8, #0x1
    9d30:	stur	w8, [x29, #-24]
    9d34:	b	9cc0 <BZ2_compressBlock@@Base+0x3fe8>
    9d38:	ldur	w8, [x29, #-20]
    9d3c:	add	w8, w8, #0x1
    9d40:	stur	w8, [x29, #-20]
    9d44:	b	9c9c <BZ2_compressBlock@@Base+0x3fc4>
    9d48:	ldur	x8, [x29, #-8]
    9d4c:	ldr	w9, [x8, #656]
    9d50:	cmp	w9, #0x3
    9d54:	b.lt	9d7c <BZ2_compressBlock@@Base+0x40a4>  // b.tstop
    9d58:	ldr	x8, [sp, #24]
    9d5c:	ldr	x0, [x8]
    9d60:	ldur	x9, [x29, #-8]
    9d64:	ldr	w10, [x9, #116]
    9d68:	ldur	w11, [x29, #-76]
    9d6c:	subs	w2, w10, w11
    9d70:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    9d74:	add	x1, x1, #0xb65
    9d78:	bl	16e0 <fprintf@plt>
    9d7c:	ldur	x8, [x29, #-8]
    9d80:	ldr	w9, [x8, #116]
    9d84:	stur	w9, [x29, #-76]
    9d88:	ldur	x0, [x29, #-8]
    9d8c:	ldur	w2, [x29, #-72]
    9d90:	mov	w1, #0x3                   	// #3
    9d94:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9d98:	ldur	x0, [x29, #-8]
    9d9c:	ldur	w2, [x29, #-52]
    9da0:	mov	w1, #0xf                   	// #15
    9da4:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9da8:	stur	wzr, [x29, #-20]
    9dac:	ldur	w8, [x29, #-20]
    9db0:	ldur	w9, [x29, #-52]
    9db4:	cmp	w8, w9
    9db8:	b.ge	9e28 <BZ2_compressBlock@@Base+0x4150>  // b.tcont
    9dbc:	stur	wzr, [x29, #-24]
    9dc0:	ldur	w8, [x29, #-24]
    9dc4:	ldur	x9, [x29, #-8]
    9dc8:	mov	x10, #0x4cfa                	// #19706
    9dcc:	add	x9, x9, x10
    9dd0:	ldursw	x10, [x29, #-20]
    9dd4:	ldrb	w11, [x9, x10]
    9dd8:	cmp	w8, w11
    9ddc:	b.ge	9e04 <BZ2_compressBlock@@Base+0x412c>  // b.tcont
    9de0:	ldur	x0, [x29, #-8]
    9de4:	mov	w8, #0x1                   	// #1
    9de8:	mov	w1, w8
    9dec:	mov	w2, w8
    9df0:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9df4:	ldur	w8, [x29, #-24]
    9df8:	add	w8, w8, #0x1
    9dfc:	stur	w8, [x29, #-24]
    9e00:	b	9dc0 <BZ2_compressBlock@@Base+0x40e8>
    9e04:	ldur	x0, [x29, #-8]
    9e08:	mov	w1, #0x1                   	// #1
    9e0c:	mov	w8, wzr
    9e10:	mov	w2, w8
    9e14:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9e18:	ldur	w8, [x29, #-20]
    9e1c:	add	w8, w8, #0x1
    9e20:	stur	w8, [x29, #-20]
    9e24:	b	9dac <BZ2_compressBlock@@Base+0x40d4>
    9e28:	ldur	x8, [x29, #-8]
    9e2c:	ldr	w9, [x8, #656]
    9e30:	cmp	w9, #0x3
    9e34:	b.lt	9e5c <BZ2_compressBlock@@Base+0x4184>  // b.tstop
    9e38:	ldr	x8, [sp, #24]
    9e3c:	ldr	x0, [x8]
    9e40:	ldur	x9, [x29, #-8]
    9e44:	ldr	w10, [x9, #116]
    9e48:	ldur	w11, [x29, #-76]
    9e4c:	subs	w2, w10, w11
    9e50:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    9e54:	add	x1, x1, #0xb7f
    9e58:	bl	16e0 <fprintf@plt>
    9e5c:	ldur	x8, [x29, #-8]
    9e60:	ldr	w9, [x8, #116]
    9e64:	stur	w9, [x29, #-76]
    9e68:	stur	wzr, [x29, #-16]
    9e6c:	ldur	w8, [x29, #-16]
    9e70:	ldur	w9, [x29, #-72]
    9e74:	cmp	w8, w9
    9e78:	b.ge	9f98 <BZ2_compressBlock@@Base+0x42c0>  // b.tcont
    9e7c:	ldur	x8, [x29, #-8]
    9e80:	mov	x9, #0x934c                	// #37708
    9e84:	add	x8, x8, x9
    9e88:	ldursw	x9, [x29, #-16]
    9e8c:	mov	x10, #0x102                 	// #258
    9e90:	mul	x9, x10, x9
    9e94:	ldrb	w11, [x8, x9]
    9e98:	str	w11, [sp, #56]
    9e9c:	ldur	x0, [x29, #-8]
    9ea0:	ldr	w2, [sp, #56]
    9ea4:	mov	w1, #0x5                   	// #5
    9ea8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9eac:	stur	wzr, [x29, #-20]
    9eb0:	ldur	w8, [x29, #-20]
    9eb4:	ldur	w9, [x29, #-56]
    9eb8:	cmp	w8, w9
    9ebc:	b.ge	9f88 <BZ2_compressBlock@@Base+0x42b0>  // b.tcont
    9ec0:	ldr	w8, [sp, #56]
    9ec4:	ldur	x9, [x29, #-8]
    9ec8:	mov	x10, #0x934c                	// #37708
    9ecc:	add	x9, x9, x10
    9ed0:	ldursw	x10, [x29, #-16]
    9ed4:	mov	x11, #0x102                 	// #258
    9ed8:	mul	x10, x11, x10
    9edc:	add	x9, x9, x10
    9ee0:	ldursw	x10, [x29, #-20]
    9ee4:	ldrb	w12, [x9, x10]
    9ee8:	cmp	w8, w12
    9eec:	b.ge	9f14 <BZ2_compressBlock@@Base+0x423c>  // b.tcont
    9ef0:	ldur	x0, [x29, #-8]
    9ef4:	mov	w8, #0x2                   	// #2
    9ef8:	mov	w1, w8
    9efc:	mov	w2, w8
    9f00:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9f04:	ldr	w8, [sp, #56]
    9f08:	add	w8, w8, #0x1
    9f0c:	str	w8, [sp, #56]
    9f10:	b	9ec0 <BZ2_compressBlock@@Base+0x41e8>
    9f14:	ldr	w8, [sp, #56]
    9f18:	ldur	x9, [x29, #-8]
    9f1c:	mov	x10, #0x934c                	// #37708
    9f20:	add	x9, x9, x10
    9f24:	ldursw	x10, [x29, #-16]
    9f28:	mov	x11, #0x102                 	// #258
    9f2c:	mul	x10, x11, x10
    9f30:	add	x9, x9, x10
    9f34:	ldursw	x10, [x29, #-20]
    9f38:	ldrb	w12, [x9, x10]
    9f3c:	cmp	w8, w12
    9f40:	b.le	9f64 <BZ2_compressBlock@@Base+0x428c>
    9f44:	ldur	x0, [x29, #-8]
    9f48:	mov	w1, #0x2                   	// #2
    9f4c:	mov	w2, #0x3                   	// #3
    9f50:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9f54:	ldr	w8, [sp, #56]
    9f58:	subs	w8, w8, #0x1
    9f5c:	str	w8, [sp, #56]
    9f60:	b	9f14 <BZ2_compressBlock@@Base+0x423c>
    9f64:	ldur	x0, [x29, #-8]
    9f68:	mov	w1, #0x1                   	// #1
    9f6c:	mov	w8, wzr
    9f70:	mov	w2, w8
    9f74:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    9f78:	ldur	w8, [x29, #-20]
    9f7c:	add	w8, w8, #0x1
    9f80:	stur	w8, [x29, #-20]
    9f84:	b	9eb0 <BZ2_compressBlock@@Base+0x41d8>
    9f88:	ldur	w8, [x29, #-16]
    9f8c:	add	w8, w8, #0x1
    9f90:	stur	w8, [x29, #-16]
    9f94:	b	9e6c <BZ2_compressBlock@@Base+0x4194>
    9f98:	ldur	x8, [x29, #-8]
    9f9c:	ldr	w9, [x8, #656]
    9fa0:	cmp	w9, #0x3
    9fa4:	b.lt	9fcc <BZ2_compressBlock@@Base+0x42f4>  // b.tstop
    9fa8:	ldr	x8, [sp, #24]
    9fac:	ldr	x0, [x8]
    9fb0:	ldur	x9, [x29, #-8]
    9fb4:	ldr	w10, [x9, #116]
    9fb8:	ldur	w11, [x29, #-76]
    9fbc:	subs	w2, w10, w11
    9fc0:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    9fc4:	add	x1, x1, #0xb8e
    9fc8:	bl	16e0 <fprintf@plt>
    9fcc:	ldur	x8, [x29, #-8]
    9fd0:	ldr	w9, [x8, #116]
    9fd4:	stur	w9, [x29, #-76]
    9fd8:	stur	wzr, [x29, #-68]
    9fdc:	stur	wzr, [x29, #-28]
    9fe0:	ldur	w8, [x29, #-28]
    9fe4:	ldur	x9, [x29, #-8]
    9fe8:	ldr	w10, [x9, #668]
    9fec:	cmp	w8, w10
    9ff0:	b.lt	9ff8 <BZ2_compressBlock@@Base+0x4320>  // b.tstop
    9ff4:	b	b14c <BZ2_compressBlock@@Base+0x5474>
    9ff8:	ldur	w8, [x29, #-28]
    9ffc:	add	w8, w8, #0x32
    a000:	subs	w8, w8, #0x1
    a004:	stur	w8, [x29, #-32]
    a008:	ldur	w8, [x29, #-32]
    a00c:	ldur	x9, [x29, #-8]
    a010:	ldr	w10, [x9, #668]
    a014:	cmp	w8, w10
    a018:	b.lt	a02c <BZ2_compressBlock@@Base+0x4354>  // b.tstop
    a01c:	ldur	x8, [x29, #-8]
    a020:	ldr	w9, [x8, #668]
    a024:	subs	w9, w9, #0x1
    a028:	stur	w9, [x29, #-32]
    a02c:	ldur	x8, [x29, #-8]
    a030:	add	x8, x8, #0x6a8
    a034:	ldursw	x9, [x29, #-68]
    a038:	ldrb	w10, [x8, x9]
    a03c:	ldur	w11, [x29, #-72]
    a040:	cmp	w10, w11
    a044:	b.lt	a050 <BZ2_compressBlock@@Base+0x4378>  // b.tstop
    a048:	mov	w0, #0xbbe                 	// #3006
    a04c:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    a050:	ldur	w8, [x29, #-72]
    a054:	cmp	w8, #0x6
    a058:	b.ne	b080 <BZ2_compressBlock@@Base+0x53a8>  // b.any
    a05c:	ldur	w8, [x29, #-32]
    a060:	ldur	w9, [x29, #-28]
    a064:	subs	w8, w8, w9
    a068:	add	w8, w8, #0x1
    a06c:	mov	w9, #0x32                  	// #50
    a070:	cmp	w9, w8
    a074:	b.ne	b080 <BZ2_compressBlock@@Base+0x53a8>  // b.any
    a078:	ldur	x8, [x29, #-8]
    a07c:	mov	x9, #0x934c                	// #37708
    a080:	add	x8, x8, x9
    a084:	ldur	x9, [x29, #-8]
    a088:	add	x9, x9, #0x6a8
    a08c:	ldursw	x10, [x29, #-68]
    a090:	ldrb	w11, [x9, x10]
    a094:	mov	w9, w11
    a098:	mov	x10, #0x102                 	// #258
    a09c:	mul	x9, x10, x9
    a0a0:	add	x8, x8, x9
    a0a4:	str	x8, [sp, #40]
    a0a8:	ldur	x8, [x29, #-8]
    a0ac:	mov	x9, #0x9958                	// #39256
    a0b0:	add	x8, x8, x9
    a0b4:	ldur	x9, [x29, #-8]
    a0b8:	add	x9, x9, #0x6a8
    a0bc:	ldursw	x10, [x29, #-68]
    a0c0:	ldrb	w11, [x9, x10]
    a0c4:	mov	w9, w11
    a0c8:	mov	x10, #0x408                 	// #1032
    a0cc:	mul	x9, x10, x9
    a0d0:	add	x8, x8, x9
    a0d4:	str	x8, [sp, #32]
    a0d8:	ldr	x8, [sp, #120]
    a0dc:	ldur	w11, [x29, #-28]
    a0e0:	add	w11, w11, #0x0
    a0e4:	mov	w0, w11
    a0e8:	sxtw	x9, w0
    a0ec:	mov	x10, #0x2                   	// #2
    a0f0:	mul	x9, x10, x9
    a0f4:	add	x8, x8, x9
    a0f8:	ldrh	w11, [x8]
    a0fc:	strh	w11, [sp, #54]
    a100:	ldur	x0, [x29, #-8]
    a104:	ldr	x8, [sp, #40]
    a108:	ldrh	w11, [sp, #54]
    a10c:	mov	w9, w11
    a110:	ldrb	w1, [x8, x9]
    a114:	ldr	x8, [sp, #32]
    a118:	ldrh	w11, [sp, #54]
    a11c:	mov	w9, w11
    a120:	ldr	w2, [x8, x9, lsl #2]
    a124:	str	x10, [sp, #8]
    a128:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a12c:	ldr	x8, [sp, #120]
    a130:	ldur	w11, [x29, #-28]
    a134:	add	w11, w11, #0x1
    a138:	mov	w0, w11
    a13c:	sxtw	x9, w0
    a140:	ldr	x10, [sp, #8]
    a144:	mul	x9, x10, x9
    a148:	add	x8, x8, x9
    a14c:	ldrh	w11, [x8]
    a150:	strh	w11, [sp, #54]
    a154:	ldur	x0, [x29, #-8]
    a158:	ldr	x8, [sp, #40]
    a15c:	ldrh	w11, [sp, #54]
    a160:	mov	w9, w11
    a164:	ldrb	w1, [x8, x9]
    a168:	ldr	x8, [sp, #32]
    a16c:	ldrh	w11, [sp, #54]
    a170:	mov	w9, w11
    a174:	ldr	w2, [x8, x9, lsl #2]
    a178:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a17c:	ldr	x8, [sp, #120]
    a180:	ldur	w11, [x29, #-28]
    a184:	add	w11, w11, #0x2
    a188:	mov	w0, w11
    a18c:	sxtw	x9, w0
    a190:	ldr	x10, [sp, #8]
    a194:	mul	x9, x10, x9
    a198:	add	x8, x8, x9
    a19c:	ldrh	w11, [x8]
    a1a0:	strh	w11, [sp, #54]
    a1a4:	ldur	x0, [x29, #-8]
    a1a8:	ldr	x8, [sp, #40]
    a1ac:	ldrh	w11, [sp, #54]
    a1b0:	mov	w9, w11
    a1b4:	ldrb	w1, [x8, x9]
    a1b8:	ldr	x8, [sp, #32]
    a1bc:	ldrh	w11, [sp, #54]
    a1c0:	mov	w9, w11
    a1c4:	ldr	w2, [x8, x9, lsl #2]
    a1c8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a1cc:	ldr	x8, [sp, #120]
    a1d0:	ldur	w11, [x29, #-28]
    a1d4:	add	w11, w11, #0x3
    a1d8:	mov	w0, w11
    a1dc:	sxtw	x9, w0
    a1e0:	ldr	x10, [sp, #8]
    a1e4:	mul	x9, x10, x9
    a1e8:	add	x8, x8, x9
    a1ec:	ldrh	w11, [x8]
    a1f0:	strh	w11, [sp, #54]
    a1f4:	ldur	x0, [x29, #-8]
    a1f8:	ldr	x8, [sp, #40]
    a1fc:	ldrh	w11, [sp, #54]
    a200:	mov	w9, w11
    a204:	ldrb	w1, [x8, x9]
    a208:	ldr	x8, [sp, #32]
    a20c:	ldrh	w11, [sp, #54]
    a210:	mov	w9, w11
    a214:	ldr	w2, [x8, x9, lsl #2]
    a218:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a21c:	ldr	x8, [sp, #120]
    a220:	ldur	w11, [x29, #-28]
    a224:	add	w11, w11, #0x4
    a228:	mov	w0, w11
    a22c:	sxtw	x9, w0
    a230:	ldr	x10, [sp, #8]
    a234:	mul	x9, x10, x9
    a238:	add	x8, x8, x9
    a23c:	ldrh	w11, [x8]
    a240:	strh	w11, [sp, #54]
    a244:	ldur	x0, [x29, #-8]
    a248:	ldr	x8, [sp, #40]
    a24c:	ldrh	w11, [sp, #54]
    a250:	mov	w9, w11
    a254:	ldrb	w1, [x8, x9]
    a258:	ldr	x8, [sp, #32]
    a25c:	ldrh	w11, [sp, #54]
    a260:	mov	w9, w11
    a264:	ldr	w2, [x8, x9, lsl #2]
    a268:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a26c:	ldr	x8, [sp, #120]
    a270:	ldur	w11, [x29, #-28]
    a274:	add	w11, w11, #0x5
    a278:	mov	w0, w11
    a27c:	sxtw	x9, w0
    a280:	ldr	x10, [sp, #8]
    a284:	mul	x9, x10, x9
    a288:	add	x8, x8, x9
    a28c:	ldrh	w11, [x8]
    a290:	strh	w11, [sp, #54]
    a294:	ldur	x0, [x29, #-8]
    a298:	ldr	x8, [sp, #40]
    a29c:	ldrh	w11, [sp, #54]
    a2a0:	mov	w9, w11
    a2a4:	ldrb	w1, [x8, x9]
    a2a8:	ldr	x8, [sp, #32]
    a2ac:	ldrh	w11, [sp, #54]
    a2b0:	mov	w9, w11
    a2b4:	ldr	w2, [x8, x9, lsl #2]
    a2b8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a2bc:	ldr	x8, [sp, #120]
    a2c0:	ldur	w11, [x29, #-28]
    a2c4:	add	w11, w11, #0x6
    a2c8:	mov	w0, w11
    a2cc:	sxtw	x9, w0
    a2d0:	ldr	x10, [sp, #8]
    a2d4:	mul	x9, x10, x9
    a2d8:	add	x8, x8, x9
    a2dc:	ldrh	w11, [x8]
    a2e0:	strh	w11, [sp, #54]
    a2e4:	ldur	x0, [x29, #-8]
    a2e8:	ldr	x8, [sp, #40]
    a2ec:	ldrh	w11, [sp, #54]
    a2f0:	mov	w9, w11
    a2f4:	ldrb	w1, [x8, x9]
    a2f8:	ldr	x8, [sp, #32]
    a2fc:	ldrh	w11, [sp, #54]
    a300:	mov	w9, w11
    a304:	ldr	w2, [x8, x9, lsl #2]
    a308:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a30c:	ldr	x8, [sp, #120]
    a310:	ldur	w11, [x29, #-28]
    a314:	add	w11, w11, #0x7
    a318:	mov	w0, w11
    a31c:	sxtw	x9, w0
    a320:	ldr	x10, [sp, #8]
    a324:	mul	x9, x10, x9
    a328:	add	x8, x8, x9
    a32c:	ldrh	w11, [x8]
    a330:	strh	w11, [sp, #54]
    a334:	ldur	x0, [x29, #-8]
    a338:	ldr	x8, [sp, #40]
    a33c:	ldrh	w11, [sp, #54]
    a340:	mov	w9, w11
    a344:	ldrb	w1, [x8, x9]
    a348:	ldr	x8, [sp, #32]
    a34c:	ldrh	w11, [sp, #54]
    a350:	mov	w9, w11
    a354:	ldr	w2, [x8, x9, lsl #2]
    a358:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a35c:	ldr	x8, [sp, #120]
    a360:	ldur	w11, [x29, #-28]
    a364:	add	w11, w11, #0x8
    a368:	mov	w0, w11
    a36c:	sxtw	x9, w0
    a370:	ldr	x10, [sp, #8]
    a374:	mul	x9, x10, x9
    a378:	add	x8, x8, x9
    a37c:	ldrh	w11, [x8]
    a380:	strh	w11, [sp, #54]
    a384:	ldur	x0, [x29, #-8]
    a388:	ldr	x8, [sp, #40]
    a38c:	ldrh	w11, [sp, #54]
    a390:	mov	w9, w11
    a394:	ldrb	w1, [x8, x9]
    a398:	ldr	x8, [sp, #32]
    a39c:	ldrh	w11, [sp, #54]
    a3a0:	mov	w9, w11
    a3a4:	ldr	w2, [x8, x9, lsl #2]
    a3a8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a3ac:	ldr	x8, [sp, #120]
    a3b0:	ldur	w11, [x29, #-28]
    a3b4:	add	w11, w11, #0x9
    a3b8:	mov	w0, w11
    a3bc:	sxtw	x9, w0
    a3c0:	ldr	x10, [sp, #8]
    a3c4:	mul	x9, x10, x9
    a3c8:	add	x8, x8, x9
    a3cc:	ldrh	w11, [x8]
    a3d0:	strh	w11, [sp, #54]
    a3d4:	ldur	x0, [x29, #-8]
    a3d8:	ldr	x8, [sp, #40]
    a3dc:	ldrh	w11, [sp, #54]
    a3e0:	mov	w9, w11
    a3e4:	ldrb	w1, [x8, x9]
    a3e8:	ldr	x8, [sp, #32]
    a3ec:	ldrh	w11, [sp, #54]
    a3f0:	mov	w9, w11
    a3f4:	ldr	w2, [x8, x9, lsl #2]
    a3f8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a3fc:	ldr	x8, [sp, #120]
    a400:	ldur	w11, [x29, #-28]
    a404:	add	w11, w11, #0xa
    a408:	mov	w0, w11
    a40c:	sxtw	x9, w0
    a410:	ldr	x10, [sp, #8]
    a414:	mul	x9, x10, x9
    a418:	add	x8, x8, x9
    a41c:	ldrh	w11, [x8]
    a420:	strh	w11, [sp, #54]
    a424:	ldur	x0, [x29, #-8]
    a428:	ldr	x8, [sp, #40]
    a42c:	ldrh	w11, [sp, #54]
    a430:	mov	w9, w11
    a434:	ldrb	w1, [x8, x9]
    a438:	ldr	x8, [sp, #32]
    a43c:	ldrh	w11, [sp, #54]
    a440:	mov	w9, w11
    a444:	ldr	w2, [x8, x9, lsl #2]
    a448:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a44c:	ldr	x8, [sp, #120]
    a450:	ldur	w11, [x29, #-28]
    a454:	add	w11, w11, #0xb
    a458:	mov	w0, w11
    a45c:	sxtw	x9, w0
    a460:	ldr	x10, [sp, #8]
    a464:	mul	x9, x10, x9
    a468:	add	x8, x8, x9
    a46c:	ldrh	w11, [x8]
    a470:	strh	w11, [sp, #54]
    a474:	ldur	x0, [x29, #-8]
    a478:	ldr	x8, [sp, #40]
    a47c:	ldrh	w11, [sp, #54]
    a480:	mov	w9, w11
    a484:	ldrb	w1, [x8, x9]
    a488:	ldr	x8, [sp, #32]
    a48c:	ldrh	w11, [sp, #54]
    a490:	mov	w9, w11
    a494:	ldr	w2, [x8, x9, lsl #2]
    a498:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a49c:	ldr	x8, [sp, #120]
    a4a0:	ldur	w11, [x29, #-28]
    a4a4:	add	w11, w11, #0xc
    a4a8:	mov	w0, w11
    a4ac:	sxtw	x9, w0
    a4b0:	ldr	x10, [sp, #8]
    a4b4:	mul	x9, x10, x9
    a4b8:	add	x8, x8, x9
    a4bc:	ldrh	w11, [x8]
    a4c0:	strh	w11, [sp, #54]
    a4c4:	ldur	x0, [x29, #-8]
    a4c8:	ldr	x8, [sp, #40]
    a4cc:	ldrh	w11, [sp, #54]
    a4d0:	mov	w9, w11
    a4d4:	ldrb	w1, [x8, x9]
    a4d8:	ldr	x8, [sp, #32]
    a4dc:	ldrh	w11, [sp, #54]
    a4e0:	mov	w9, w11
    a4e4:	ldr	w2, [x8, x9, lsl #2]
    a4e8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a4ec:	ldr	x8, [sp, #120]
    a4f0:	ldur	w11, [x29, #-28]
    a4f4:	add	w11, w11, #0xd
    a4f8:	mov	w0, w11
    a4fc:	sxtw	x9, w0
    a500:	ldr	x10, [sp, #8]
    a504:	mul	x9, x10, x9
    a508:	add	x8, x8, x9
    a50c:	ldrh	w11, [x8]
    a510:	strh	w11, [sp, #54]
    a514:	ldur	x0, [x29, #-8]
    a518:	ldr	x8, [sp, #40]
    a51c:	ldrh	w11, [sp, #54]
    a520:	mov	w9, w11
    a524:	ldrb	w1, [x8, x9]
    a528:	ldr	x8, [sp, #32]
    a52c:	ldrh	w11, [sp, #54]
    a530:	mov	w9, w11
    a534:	ldr	w2, [x8, x9, lsl #2]
    a538:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a53c:	ldr	x8, [sp, #120]
    a540:	ldur	w11, [x29, #-28]
    a544:	add	w11, w11, #0xe
    a548:	mov	w0, w11
    a54c:	sxtw	x9, w0
    a550:	ldr	x10, [sp, #8]
    a554:	mul	x9, x10, x9
    a558:	add	x8, x8, x9
    a55c:	ldrh	w11, [x8]
    a560:	strh	w11, [sp, #54]
    a564:	ldur	x0, [x29, #-8]
    a568:	ldr	x8, [sp, #40]
    a56c:	ldrh	w11, [sp, #54]
    a570:	mov	w9, w11
    a574:	ldrb	w1, [x8, x9]
    a578:	ldr	x8, [sp, #32]
    a57c:	ldrh	w11, [sp, #54]
    a580:	mov	w9, w11
    a584:	ldr	w2, [x8, x9, lsl #2]
    a588:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a58c:	ldr	x8, [sp, #120]
    a590:	ldur	w11, [x29, #-28]
    a594:	add	w11, w11, #0xf
    a598:	mov	w0, w11
    a59c:	sxtw	x9, w0
    a5a0:	ldr	x10, [sp, #8]
    a5a4:	mul	x9, x10, x9
    a5a8:	add	x8, x8, x9
    a5ac:	ldrh	w11, [x8]
    a5b0:	strh	w11, [sp, #54]
    a5b4:	ldur	x0, [x29, #-8]
    a5b8:	ldr	x8, [sp, #40]
    a5bc:	ldrh	w11, [sp, #54]
    a5c0:	mov	w9, w11
    a5c4:	ldrb	w1, [x8, x9]
    a5c8:	ldr	x8, [sp, #32]
    a5cc:	ldrh	w11, [sp, #54]
    a5d0:	mov	w9, w11
    a5d4:	ldr	w2, [x8, x9, lsl #2]
    a5d8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a5dc:	ldr	x8, [sp, #120]
    a5e0:	ldur	w11, [x29, #-28]
    a5e4:	add	w11, w11, #0x10
    a5e8:	mov	w0, w11
    a5ec:	sxtw	x9, w0
    a5f0:	ldr	x10, [sp, #8]
    a5f4:	mul	x9, x10, x9
    a5f8:	add	x8, x8, x9
    a5fc:	ldrh	w11, [x8]
    a600:	strh	w11, [sp, #54]
    a604:	ldur	x0, [x29, #-8]
    a608:	ldr	x8, [sp, #40]
    a60c:	ldrh	w11, [sp, #54]
    a610:	mov	w9, w11
    a614:	ldrb	w1, [x8, x9]
    a618:	ldr	x8, [sp, #32]
    a61c:	ldrh	w11, [sp, #54]
    a620:	mov	w9, w11
    a624:	ldr	w2, [x8, x9, lsl #2]
    a628:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a62c:	ldr	x8, [sp, #120]
    a630:	ldur	w11, [x29, #-28]
    a634:	add	w11, w11, #0x11
    a638:	mov	w0, w11
    a63c:	sxtw	x9, w0
    a640:	ldr	x10, [sp, #8]
    a644:	mul	x9, x10, x9
    a648:	add	x8, x8, x9
    a64c:	ldrh	w11, [x8]
    a650:	strh	w11, [sp, #54]
    a654:	ldur	x0, [x29, #-8]
    a658:	ldr	x8, [sp, #40]
    a65c:	ldrh	w11, [sp, #54]
    a660:	mov	w9, w11
    a664:	ldrb	w1, [x8, x9]
    a668:	ldr	x8, [sp, #32]
    a66c:	ldrh	w11, [sp, #54]
    a670:	mov	w9, w11
    a674:	ldr	w2, [x8, x9, lsl #2]
    a678:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a67c:	ldr	x8, [sp, #120]
    a680:	ldur	w11, [x29, #-28]
    a684:	add	w11, w11, #0x12
    a688:	mov	w0, w11
    a68c:	sxtw	x9, w0
    a690:	ldr	x10, [sp, #8]
    a694:	mul	x9, x10, x9
    a698:	add	x8, x8, x9
    a69c:	ldrh	w11, [x8]
    a6a0:	strh	w11, [sp, #54]
    a6a4:	ldur	x0, [x29, #-8]
    a6a8:	ldr	x8, [sp, #40]
    a6ac:	ldrh	w11, [sp, #54]
    a6b0:	mov	w9, w11
    a6b4:	ldrb	w1, [x8, x9]
    a6b8:	ldr	x8, [sp, #32]
    a6bc:	ldrh	w11, [sp, #54]
    a6c0:	mov	w9, w11
    a6c4:	ldr	w2, [x8, x9, lsl #2]
    a6c8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a6cc:	ldr	x8, [sp, #120]
    a6d0:	ldur	w11, [x29, #-28]
    a6d4:	add	w11, w11, #0x13
    a6d8:	mov	w0, w11
    a6dc:	sxtw	x9, w0
    a6e0:	ldr	x10, [sp, #8]
    a6e4:	mul	x9, x10, x9
    a6e8:	add	x8, x8, x9
    a6ec:	ldrh	w11, [x8]
    a6f0:	strh	w11, [sp, #54]
    a6f4:	ldur	x0, [x29, #-8]
    a6f8:	ldr	x8, [sp, #40]
    a6fc:	ldrh	w11, [sp, #54]
    a700:	mov	w9, w11
    a704:	ldrb	w1, [x8, x9]
    a708:	ldr	x8, [sp, #32]
    a70c:	ldrh	w11, [sp, #54]
    a710:	mov	w9, w11
    a714:	ldr	w2, [x8, x9, lsl #2]
    a718:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a71c:	ldr	x8, [sp, #120]
    a720:	ldur	w11, [x29, #-28]
    a724:	add	w11, w11, #0x14
    a728:	mov	w0, w11
    a72c:	sxtw	x9, w0
    a730:	ldr	x10, [sp, #8]
    a734:	mul	x9, x10, x9
    a738:	add	x8, x8, x9
    a73c:	ldrh	w11, [x8]
    a740:	strh	w11, [sp, #54]
    a744:	ldur	x0, [x29, #-8]
    a748:	ldr	x8, [sp, #40]
    a74c:	ldrh	w11, [sp, #54]
    a750:	mov	w9, w11
    a754:	ldrb	w1, [x8, x9]
    a758:	ldr	x8, [sp, #32]
    a75c:	ldrh	w11, [sp, #54]
    a760:	mov	w9, w11
    a764:	ldr	w2, [x8, x9, lsl #2]
    a768:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a76c:	ldr	x8, [sp, #120]
    a770:	ldur	w11, [x29, #-28]
    a774:	add	w11, w11, #0x15
    a778:	mov	w0, w11
    a77c:	sxtw	x9, w0
    a780:	ldr	x10, [sp, #8]
    a784:	mul	x9, x10, x9
    a788:	add	x8, x8, x9
    a78c:	ldrh	w11, [x8]
    a790:	strh	w11, [sp, #54]
    a794:	ldur	x0, [x29, #-8]
    a798:	ldr	x8, [sp, #40]
    a79c:	ldrh	w11, [sp, #54]
    a7a0:	mov	w9, w11
    a7a4:	ldrb	w1, [x8, x9]
    a7a8:	ldr	x8, [sp, #32]
    a7ac:	ldrh	w11, [sp, #54]
    a7b0:	mov	w9, w11
    a7b4:	ldr	w2, [x8, x9, lsl #2]
    a7b8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a7bc:	ldr	x8, [sp, #120]
    a7c0:	ldur	w11, [x29, #-28]
    a7c4:	add	w11, w11, #0x16
    a7c8:	mov	w0, w11
    a7cc:	sxtw	x9, w0
    a7d0:	ldr	x10, [sp, #8]
    a7d4:	mul	x9, x10, x9
    a7d8:	add	x8, x8, x9
    a7dc:	ldrh	w11, [x8]
    a7e0:	strh	w11, [sp, #54]
    a7e4:	ldur	x0, [x29, #-8]
    a7e8:	ldr	x8, [sp, #40]
    a7ec:	ldrh	w11, [sp, #54]
    a7f0:	mov	w9, w11
    a7f4:	ldrb	w1, [x8, x9]
    a7f8:	ldr	x8, [sp, #32]
    a7fc:	ldrh	w11, [sp, #54]
    a800:	mov	w9, w11
    a804:	ldr	w2, [x8, x9, lsl #2]
    a808:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a80c:	ldr	x8, [sp, #120]
    a810:	ldur	w11, [x29, #-28]
    a814:	add	w11, w11, #0x17
    a818:	mov	w0, w11
    a81c:	sxtw	x9, w0
    a820:	ldr	x10, [sp, #8]
    a824:	mul	x9, x10, x9
    a828:	add	x8, x8, x9
    a82c:	ldrh	w11, [x8]
    a830:	strh	w11, [sp, #54]
    a834:	ldur	x0, [x29, #-8]
    a838:	ldr	x8, [sp, #40]
    a83c:	ldrh	w11, [sp, #54]
    a840:	mov	w9, w11
    a844:	ldrb	w1, [x8, x9]
    a848:	ldr	x8, [sp, #32]
    a84c:	ldrh	w11, [sp, #54]
    a850:	mov	w9, w11
    a854:	ldr	w2, [x8, x9, lsl #2]
    a858:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a85c:	ldr	x8, [sp, #120]
    a860:	ldur	w11, [x29, #-28]
    a864:	add	w11, w11, #0x18
    a868:	mov	w0, w11
    a86c:	sxtw	x9, w0
    a870:	ldr	x10, [sp, #8]
    a874:	mul	x9, x10, x9
    a878:	add	x8, x8, x9
    a87c:	ldrh	w11, [x8]
    a880:	strh	w11, [sp, #54]
    a884:	ldur	x0, [x29, #-8]
    a888:	ldr	x8, [sp, #40]
    a88c:	ldrh	w11, [sp, #54]
    a890:	mov	w9, w11
    a894:	ldrb	w1, [x8, x9]
    a898:	ldr	x8, [sp, #32]
    a89c:	ldrh	w11, [sp, #54]
    a8a0:	mov	w9, w11
    a8a4:	ldr	w2, [x8, x9, lsl #2]
    a8a8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a8ac:	ldr	x8, [sp, #120]
    a8b0:	ldur	w11, [x29, #-28]
    a8b4:	add	w11, w11, #0x19
    a8b8:	mov	w0, w11
    a8bc:	sxtw	x9, w0
    a8c0:	ldr	x10, [sp, #8]
    a8c4:	mul	x9, x10, x9
    a8c8:	add	x8, x8, x9
    a8cc:	ldrh	w11, [x8]
    a8d0:	strh	w11, [sp, #54]
    a8d4:	ldur	x0, [x29, #-8]
    a8d8:	ldr	x8, [sp, #40]
    a8dc:	ldrh	w11, [sp, #54]
    a8e0:	mov	w9, w11
    a8e4:	ldrb	w1, [x8, x9]
    a8e8:	ldr	x8, [sp, #32]
    a8ec:	ldrh	w11, [sp, #54]
    a8f0:	mov	w9, w11
    a8f4:	ldr	w2, [x8, x9, lsl #2]
    a8f8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a8fc:	ldr	x8, [sp, #120]
    a900:	ldur	w11, [x29, #-28]
    a904:	add	w11, w11, #0x1a
    a908:	mov	w0, w11
    a90c:	sxtw	x9, w0
    a910:	ldr	x10, [sp, #8]
    a914:	mul	x9, x10, x9
    a918:	add	x8, x8, x9
    a91c:	ldrh	w11, [x8]
    a920:	strh	w11, [sp, #54]
    a924:	ldur	x0, [x29, #-8]
    a928:	ldr	x8, [sp, #40]
    a92c:	ldrh	w11, [sp, #54]
    a930:	mov	w9, w11
    a934:	ldrb	w1, [x8, x9]
    a938:	ldr	x8, [sp, #32]
    a93c:	ldrh	w11, [sp, #54]
    a940:	mov	w9, w11
    a944:	ldr	w2, [x8, x9, lsl #2]
    a948:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a94c:	ldr	x8, [sp, #120]
    a950:	ldur	w11, [x29, #-28]
    a954:	add	w11, w11, #0x1b
    a958:	mov	w0, w11
    a95c:	sxtw	x9, w0
    a960:	ldr	x10, [sp, #8]
    a964:	mul	x9, x10, x9
    a968:	add	x8, x8, x9
    a96c:	ldrh	w11, [x8]
    a970:	strh	w11, [sp, #54]
    a974:	ldur	x0, [x29, #-8]
    a978:	ldr	x8, [sp, #40]
    a97c:	ldrh	w11, [sp, #54]
    a980:	mov	w9, w11
    a984:	ldrb	w1, [x8, x9]
    a988:	ldr	x8, [sp, #32]
    a98c:	ldrh	w11, [sp, #54]
    a990:	mov	w9, w11
    a994:	ldr	w2, [x8, x9, lsl #2]
    a998:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a99c:	ldr	x8, [sp, #120]
    a9a0:	ldur	w11, [x29, #-28]
    a9a4:	add	w11, w11, #0x1c
    a9a8:	mov	w0, w11
    a9ac:	sxtw	x9, w0
    a9b0:	ldr	x10, [sp, #8]
    a9b4:	mul	x9, x10, x9
    a9b8:	add	x8, x8, x9
    a9bc:	ldrh	w11, [x8]
    a9c0:	strh	w11, [sp, #54]
    a9c4:	ldur	x0, [x29, #-8]
    a9c8:	ldr	x8, [sp, #40]
    a9cc:	ldrh	w11, [sp, #54]
    a9d0:	mov	w9, w11
    a9d4:	ldrb	w1, [x8, x9]
    a9d8:	ldr	x8, [sp, #32]
    a9dc:	ldrh	w11, [sp, #54]
    a9e0:	mov	w9, w11
    a9e4:	ldr	w2, [x8, x9, lsl #2]
    a9e8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    a9ec:	ldr	x8, [sp, #120]
    a9f0:	ldur	w11, [x29, #-28]
    a9f4:	add	w11, w11, #0x1d
    a9f8:	mov	w0, w11
    a9fc:	sxtw	x9, w0
    aa00:	ldr	x10, [sp, #8]
    aa04:	mul	x9, x10, x9
    aa08:	add	x8, x8, x9
    aa0c:	ldrh	w11, [x8]
    aa10:	strh	w11, [sp, #54]
    aa14:	ldur	x0, [x29, #-8]
    aa18:	ldr	x8, [sp, #40]
    aa1c:	ldrh	w11, [sp, #54]
    aa20:	mov	w9, w11
    aa24:	ldrb	w1, [x8, x9]
    aa28:	ldr	x8, [sp, #32]
    aa2c:	ldrh	w11, [sp, #54]
    aa30:	mov	w9, w11
    aa34:	ldr	w2, [x8, x9, lsl #2]
    aa38:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    aa3c:	ldr	x8, [sp, #120]
    aa40:	ldur	w11, [x29, #-28]
    aa44:	add	w11, w11, #0x1e
    aa48:	mov	w0, w11
    aa4c:	sxtw	x9, w0
    aa50:	ldr	x10, [sp, #8]
    aa54:	mul	x9, x10, x9
    aa58:	add	x8, x8, x9
    aa5c:	ldrh	w11, [x8]
    aa60:	strh	w11, [sp, #54]
    aa64:	ldur	x0, [x29, #-8]
    aa68:	ldr	x8, [sp, #40]
    aa6c:	ldrh	w11, [sp, #54]
    aa70:	mov	w9, w11
    aa74:	ldrb	w1, [x8, x9]
    aa78:	ldr	x8, [sp, #32]
    aa7c:	ldrh	w11, [sp, #54]
    aa80:	mov	w9, w11
    aa84:	ldr	w2, [x8, x9, lsl #2]
    aa88:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    aa8c:	ldr	x8, [sp, #120]
    aa90:	ldur	w11, [x29, #-28]
    aa94:	add	w11, w11, #0x1f
    aa98:	mov	w0, w11
    aa9c:	sxtw	x9, w0
    aaa0:	ldr	x10, [sp, #8]
    aaa4:	mul	x9, x10, x9
    aaa8:	add	x8, x8, x9
    aaac:	ldrh	w11, [x8]
    aab0:	strh	w11, [sp, #54]
    aab4:	ldur	x0, [x29, #-8]
    aab8:	ldr	x8, [sp, #40]
    aabc:	ldrh	w11, [sp, #54]
    aac0:	mov	w9, w11
    aac4:	ldrb	w1, [x8, x9]
    aac8:	ldr	x8, [sp, #32]
    aacc:	ldrh	w11, [sp, #54]
    aad0:	mov	w9, w11
    aad4:	ldr	w2, [x8, x9, lsl #2]
    aad8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    aadc:	ldr	x8, [sp, #120]
    aae0:	ldur	w11, [x29, #-28]
    aae4:	add	w11, w11, #0x20
    aae8:	mov	w0, w11
    aaec:	sxtw	x9, w0
    aaf0:	ldr	x10, [sp, #8]
    aaf4:	mul	x9, x10, x9
    aaf8:	add	x8, x8, x9
    aafc:	ldrh	w11, [x8]
    ab00:	strh	w11, [sp, #54]
    ab04:	ldur	x0, [x29, #-8]
    ab08:	ldr	x8, [sp, #40]
    ab0c:	ldrh	w11, [sp, #54]
    ab10:	mov	w9, w11
    ab14:	ldrb	w1, [x8, x9]
    ab18:	ldr	x8, [sp, #32]
    ab1c:	ldrh	w11, [sp, #54]
    ab20:	mov	w9, w11
    ab24:	ldr	w2, [x8, x9, lsl #2]
    ab28:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    ab2c:	ldr	x8, [sp, #120]
    ab30:	ldur	w11, [x29, #-28]
    ab34:	add	w11, w11, #0x21
    ab38:	mov	w0, w11
    ab3c:	sxtw	x9, w0
    ab40:	ldr	x10, [sp, #8]
    ab44:	mul	x9, x10, x9
    ab48:	add	x8, x8, x9
    ab4c:	ldrh	w11, [x8]
    ab50:	strh	w11, [sp, #54]
    ab54:	ldur	x0, [x29, #-8]
    ab58:	ldr	x8, [sp, #40]
    ab5c:	ldrh	w11, [sp, #54]
    ab60:	mov	w9, w11
    ab64:	ldrb	w1, [x8, x9]
    ab68:	ldr	x8, [sp, #32]
    ab6c:	ldrh	w11, [sp, #54]
    ab70:	mov	w9, w11
    ab74:	ldr	w2, [x8, x9, lsl #2]
    ab78:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    ab7c:	ldr	x8, [sp, #120]
    ab80:	ldur	w11, [x29, #-28]
    ab84:	add	w11, w11, #0x22
    ab88:	mov	w0, w11
    ab8c:	sxtw	x9, w0
    ab90:	ldr	x10, [sp, #8]
    ab94:	mul	x9, x10, x9
    ab98:	add	x8, x8, x9
    ab9c:	ldrh	w11, [x8]
    aba0:	strh	w11, [sp, #54]
    aba4:	ldur	x0, [x29, #-8]
    aba8:	ldr	x8, [sp, #40]
    abac:	ldrh	w11, [sp, #54]
    abb0:	mov	w9, w11
    abb4:	ldrb	w1, [x8, x9]
    abb8:	ldr	x8, [sp, #32]
    abbc:	ldrh	w11, [sp, #54]
    abc0:	mov	w9, w11
    abc4:	ldr	w2, [x8, x9, lsl #2]
    abc8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    abcc:	ldr	x8, [sp, #120]
    abd0:	ldur	w11, [x29, #-28]
    abd4:	add	w11, w11, #0x23
    abd8:	mov	w0, w11
    abdc:	sxtw	x9, w0
    abe0:	ldr	x10, [sp, #8]
    abe4:	mul	x9, x10, x9
    abe8:	add	x8, x8, x9
    abec:	ldrh	w11, [x8]
    abf0:	strh	w11, [sp, #54]
    abf4:	ldur	x0, [x29, #-8]
    abf8:	ldr	x8, [sp, #40]
    abfc:	ldrh	w11, [sp, #54]
    ac00:	mov	w9, w11
    ac04:	ldrb	w1, [x8, x9]
    ac08:	ldr	x8, [sp, #32]
    ac0c:	ldrh	w11, [sp, #54]
    ac10:	mov	w9, w11
    ac14:	ldr	w2, [x8, x9, lsl #2]
    ac18:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    ac1c:	ldr	x8, [sp, #120]
    ac20:	ldur	w11, [x29, #-28]
    ac24:	add	w11, w11, #0x24
    ac28:	mov	w0, w11
    ac2c:	sxtw	x9, w0
    ac30:	ldr	x10, [sp, #8]
    ac34:	mul	x9, x10, x9
    ac38:	add	x8, x8, x9
    ac3c:	ldrh	w11, [x8]
    ac40:	strh	w11, [sp, #54]
    ac44:	ldur	x0, [x29, #-8]
    ac48:	ldr	x8, [sp, #40]
    ac4c:	ldrh	w11, [sp, #54]
    ac50:	mov	w9, w11
    ac54:	ldrb	w1, [x8, x9]
    ac58:	ldr	x8, [sp, #32]
    ac5c:	ldrh	w11, [sp, #54]
    ac60:	mov	w9, w11
    ac64:	ldr	w2, [x8, x9, lsl #2]
    ac68:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    ac6c:	ldr	x8, [sp, #120]
    ac70:	ldur	w11, [x29, #-28]
    ac74:	add	w11, w11, #0x25
    ac78:	mov	w0, w11
    ac7c:	sxtw	x9, w0
    ac80:	ldr	x10, [sp, #8]
    ac84:	mul	x9, x10, x9
    ac88:	add	x8, x8, x9
    ac8c:	ldrh	w11, [x8]
    ac90:	strh	w11, [sp, #54]
    ac94:	ldur	x0, [x29, #-8]
    ac98:	ldr	x8, [sp, #40]
    ac9c:	ldrh	w11, [sp, #54]
    aca0:	mov	w9, w11
    aca4:	ldrb	w1, [x8, x9]
    aca8:	ldr	x8, [sp, #32]
    acac:	ldrh	w11, [sp, #54]
    acb0:	mov	w9, w11
    acb4:	ldr	w2, [x8, x9, lsl #2]
    acb8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    acbc:	ldr	x8, [sp, #120]
    acc0:	ldur	w11, [x29, #-28]
    acc4:	add	w11, w11, #0x26
    acc8:	mov	w0, w11
    accc:	sxtw	x9, w0
    acd0:	ldr	x10, [sp, #8]
    acd4:	mul	x9, x10, x9
    acd8:	add	x8, x8, x9
    acdc:	ldrh	w11, [x8]
    ace0:	strh	w11, [sp, #54]
    ace4:	ldur	x0, [x29, #-8]
    ace8:	ldr	x8, [sp, #40]
    acec:	ldrh	w11, [sp, #54]
    acf0:	mov	w9, w11
    acf4:	ldrb	w1, [x8, x9]
    acf8:	ldr	x8, [sp, #32]
    acfc:	ldrh	w11, [sp, #54]
    ad00:	mov	w9, w11
    ad04:	ldr	w2, [x8, x9, lsl #2]
    ad08:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    ad0c:	ldr	x8, [sp, #120]
    ad10:	ldur	w11, [x29, #-28]
    ad14:	add	w11, w11, #0x27
    ad18:	mov	w0, w11
    ad1c:	sxtw	x9, w0
    ad20:	ldr	x10, [sp, #8]
    ad24:	mul	x9, x10, x9
    ad28:	add	x8, x8, x9
    ad2c:	ldrh	w11, [x8]
    ad30:	strh	w11, [sp, #54]
    ad34:	ldur	x0, [x29, #-8]
    ad38:	ldr	x8, [sp, #40]
    ad3c:	ldrh	w11, [sp, #54]
    ad40:	mov	w9, w11
    ad44:	ldrb	w1, [x8, x9]
    ad48:	ldr	x8, [sp, #32]
    ad4c:	ldrh	w11, [sp, #54]
    ad50:	mov	w9, w11
    ad54:	ldr	w2, [x8, x9, lsl #2]
    ad58:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    ad5c:	ldr	x8, [sp, #120]
    ad60:	ldur	w11, [x29, #-28]
    ad64:	add	w11, w11, #0x28
    ad68:	mov	w0, w11
    ad6c:	sxtw	x9, w0
    ad70:	ldr	x10, [sp, #8]
    ad74:	mul	x9, x10, x9
    ad78:	add	x8, x8, x9
    ad7c:	ldrh	w11, [x8]
    ad80:	strh	w11, [sp, #54]
    ad84:	ldur	x0, [x29, #-8]
    ad88:	ldr	x8, [sp, #40]
    ad8c:	ldrh	w11, [sp, #54]
    ad90:	mov	w9, w11
    ad94:	ldrb	w1, [x8, x9]
    ad98:	ldr	x8, [sp, #32]
    ad9c:	ldrh	w11, [sp, #54]
    ada0:	mov	w9, w11
    ada4:	ldr	w2, [x8, x9, lsl #2]
    ada8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    adac:	ldr	x8, [sp, #120]
    adb0:	ldur	w11, [x29, #-28]
    adb4:	add	w11, w11, #0x29
    adb8:	mov	w0, w11
    adbc:	sxtw	x9, w0
    adc0:	ldr	x10, [sp, #8]
    adc4:	mul	x9, x10, x9
    adc8:	add	x8, x8, x9
    adcc:	ldrh	w11, [x8]
    add0:	strh	w11, [sp, #54]
    add4:	ldur	x0, [x29, #-8]
    add8:	ldr	x8, [sp, #40]
    addc:	ldrh	w11, [sp, #54]
    ade0:	mov	w9, w11
    ade4:	ldrb	w1, [x8, x9]
    ade8:	ldr	x8, [sp, #32]
    adec:	ldrh	w11, [sp, #54]
    adf0:	mov	w9, w11
    adf4:	ldr	w2, [x8, x9, lsl #2]
    adf8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    adfc:	ldr	x8, [sp, #120]
    ae00:	ldur	w11, [x29, #-28]
    ae04:	add	w11, w11, #0x2a
    ae08:	mov	w0, w11
    ae0c:	sxtw	x9, w0
    ae10:	ldr	x10, [sp, #8]
    ae14:	mul	x9, x10, x9
    ae18:	add	x8, x8, x9
    ae1c:	ldrh	w11, [x8]
    ae20:	strh	w11, [sp, #54]
    ae24:	ldur	x0, [x29, #-8]
    ae28:	ldr	x8, [sp, #40]
    ae2c:	ldrh	w11, [sp, #54]
    ae30:	mov	w9, w11
    ae34:	ldrb	w1, [x8, x9]
    ae38:	ldr	x8, [sp, #32]
    ae3c:	ldrh	w11, [sp, #54]
    ae40:	mov	w9, w11
    ae44:	ldr	w2, [x8, x9, lsl #2]
    ae48:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    ae4c:	ldr	x8, [sp, #120]
    ae50:	ldur	w11, [x29, #-28]
    ae54:	add	w11, w11, #0x2b
    ae58:	mov	w0, w11
    ae5c:	sxtw	x9, w0
    ae60:	ldr	x10, [sp, #8]
    ae64:	mul	x9, x10, x9
    ae68:	add	x8, x8, x9
    ae6c:	ldrh	w11, [x8]
    ae70:	strh	w11, [sp, #54]
    ae74:	ldur	x0, [x29, #-8]
    ae78:	ldr	x8, [sp, #40]
    ae7c:	ldrh	w11, [sp, #54]
    ae80:	mov	w9, w11
    ae84:	ldrb	w1, [x8, x9]
    ae88:	ldr	x8, [sp, #32]
    ae8c:	ldrh	w11, [sp, #54]
    ae90:	mov	w9, w11
    ae94:	ldr	w2, [x8, x9, lsl #2]
    ae98:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    ae9c:	ldr	x8, [sp, #120]
    aea0:	ldur	w11, [x29, #-28]
    aea4:	add	w11, w11, #0x2c
    aea8:	mov	w0, w11
    aeac:	sxtw	x9, w0
    aeb0:	ldr	x10, [sp, #8]
    aeb4:	mul	x9, x10, x9
    aeb8:	add	x8, x8, x9
    aebc:	ldrh	w11, [x8]
    aec0:	strh	w11, [sp, #54]
    aec4:	ldur	x0, [x29, #-8]
    aec8:	ldr	x8, [sp, #40]
    aecc:	ldrh	w11, [sp, #54]
    aed0:	mov	w9, w11
    aed4:	ldrb	w1, [x8, x9]
    aed8:	ldr	x8, [sp, #32]
    aedc:	ldrh	w11, [sp, #54]
    aee0:	mov	w9, w11
    aee4:	ldr	w2, [x8, x9, lsl #2]
    aee8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    aeec:	ldr	x8, [sp, #120]
    aef0:	ldur	w11, [x29, #-28]
    aef4:	add	w11, w11, #0x2d
    aef8:	mov	w0, w11
    aefc:	sxtw	x9, w0
    af00:	ldr	x10, [sp, #8]
    af04:	mul	x9, x10, x9
    af08:	add	x8, x8, x9
    af0c:	ldrh	w11, [x8]
    af10:	strh	w11, [sp, #54]
    af14:	ldur	x0, [x29, #-8]
    af18:	ldr	x8, [sp, #40]
    af1c:	ldrh	w11, [sp, #54]
    af20:	mov	w9, w11
    af24:	ldrb	w1, [x8, x9]
    af28:	ldr	x8, [sp, #32]
    af2c:	ldrh	w11, [sp, #54]
    af30:	mov	w9, w11
    af34:	ldr	w2, [x8, x9, lsl #2]
    af38:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    af3c:	ldr	x8, [sp, #120]
    af40:	ldur	w11, [x29, #-28]
    af44:	add	w11, w11, #0x2e
    af48:	mov	w0, w11
    af4c:	sxtw	x9, w0
    af50:	ldr	x10, [sp, #8]
    af54:	mul	x9, x10, x9
    af58:	add	x8, x8, x9
    af5c:	ldrh	w11, [x8]
    af60:	strh	w11, [sp, #54]
    af64:	ldur	x0, [x29, #-8]
    af68:	ldr	x8, [sp, #40]
    af6c:	ldrh	w11, [sp, #54]
    af70:	mov	w9, w11
    af74:	ldrb	w1, [x8, x9]
    af78:	ldr	x8, [sp, #32]
    af7c:	ldrh	w11, [sp, #54]
    af80:	mov	w9, w11
    af84:	ldr	w2, [x8, x9, lsl #2]
    af88:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    af8c:	ldr	x8, [sp, #120]
    af90:	ldur	w11, [x29, #-28]
    af94:	add	w11, w11, #0x2f
    af98:	mov	w0, w11
    af9c:	sxtw	x9, w0
    afa0:	ldr	x10, [sp, #8]
    afa4:	mul	x9, x10, x9
    afa8:	add	x8, x8, x9
    afac:	ldrh	w11, [x8]
    afb0:	strh	w11, [sp, #54]
    afb4:	ldur	x0, [x29, #-8]
    afb8:	ldr	x8, [sp, #40]
    afbc:	ldrh	w11, [sp, #54]
    afc0:	mov	w9, w11
    afc4:	ldrb	w1, [x8, x9]
    afc8:	ldr	x8, [sp, #32]
    afcc:	ldrh	w11, [sp, #54]
    afd0:	mov	w9, w11
    afd4:	ldr	w2, [x8, x9, lsl #2]
    afd8:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    afdc:	ldr	x8, [sp, #120]
    afe0:	ldur	w11, [x29, #-28]
    afe4:	add	w11, w11, #0x30
    afe8:	mov	w0, w11
    afec:	sxtw	x9, w0
    aff0:	ldr	x10, [sp, #8]
    aff4:	mul	x9, x10, x9
    aff8:	add	x8, x8, x9
    affc:	ldrh	w11, [x8]
    b000:	strh	w11, [sp, #54]
    b004:	ldur	x0, [x29, #-8]
    b008:	ldr	x8, [sp, #40]
    b00c:	ldrh	w11, [sp, #54]
    b010:	mov	w9, w11
    b014:	ldrb	w1, [x8, x9]
    b018:	ldr	x8, [sp, #32]
    b01c:	ldrh	w11, [sp, #54]
    b020:	mov	w9, w11
    b024:	ldr	w2, [x8, x9, lsl #2]
    b028:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    b02c:	ldr	x8, [sp, #120]
    b030:	ldur	w11, [x29, #-28]
    b034:	add	w11, w11, #0x31
    b038:	mov	w0, w11
    b03c:	sxtw	x9, w0
    b040:	ldr	x10, [sp, #8]
    b044:	mul	x9, x10, x9
    b048:	add	x8, x8, x9
    b04c:	ldrh	w11, [x8]
    b050:	strh	w11, [sp, #54]
    b054:	ldur	x0, [x29, #-8]
    b058:	ldr	x8, [sp, #40]
    b05c:	ldrh	w11, [sp, #54]
    b060:	mov	w9, w11
    b064:	ldrb	w1, [x8, x9]
    b068:	ldr	x8, [sp, #32]
    b06c:	ldrh	w11, [sp, #54]
    b070:	mov	w9, w11
    b074:	ldr	w2, [x8, x9, lsl #2]
    b078:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    b07c:	b	b130 <BZ2_compressBlock@@Base+0x5458>
    b080:	ldur	w8, [x29, #-28]
    b084:	stur	w8, [x29, #-20]
    b088:	ldur	w8, [x29, #-20]
    b08c:	ldur	w9, [x29, #-32]
    b090:	cmp	w8, w9
    b094:	b.gt	b130 <BZ2_compressBlock@@Base+0x5458>
    b098:	ldur	x0, [x29, #-8]
    b09c:	ldur	x8, [x29, #-8]
    b0a0:	mov	x9, #0x934c                	// #37708
    b0a4:	add	x8, x8, x9
    b0a8:	ldur	x9, [x29, #-8]
    b0ac:	add	x9, x9, #0x6a8
    b0b0:	ldursw	x10, [x29, #-68]
    b0b4:	ldrb	w11, [x9, x10]
    b0b8:	mov	w9, w11
    b0bc:	mov	x10, #0x102                 	// #258
    b0c0:	mul	x9, x10, x9
    b0c4:	add	x8, x8, x9
    b0c8:	ldr	x9, [sp, #120]
    b0cc:	ldursw	x10, [x29, #-20]
    b0d0:	ldrh	w11, [x9, x10, lsl #1]
    b0d4:	mov	w9, w11
    b0d8:	ldrb	w1, [x8, x9]
    b0dc:	ldur	x8, [x29, #-8]
    b0e0:	mov	x9, #0x9958                	// #39256
    b0e4:	add	x8, x8, x9
    b0e8:	ldur	x9, [x29, #-8]
    b0ec:	add	x9, x9, #0x6a8
    b0f0:	ldursw	x10, [x29, #-68]
    b0f4:	ldrb	w11, [x9, x10]
    b0f8:	mov	w9, w11
    b0fc:	mov	x10, #0x408                 	// #1032
    b100:	mul	x9, x10, x9
    b104:	add	x8, x8, x9
    b108:	ldr	x9, [sp, #120]
    b10c:	ldursw	x10, [x29, #-20]
    b110:	ldrh	w11, [x9, x10, lsl #1]
    b114:	mov	w9, w11
    b118:	ldr	w2, [x8, x9, lsl #2]
    b11c:	bl	6058 <BZ2_compressBlock@@Base+0x380>
    b120:	ldur	w8, [x29, #-20]
    b124:	add	w8, w8, #0x1
    b128:	stur	w8, [x29, #-20]
    b12c:	b	b088 <BZ2_compressBlock@@Base+0x53b0>
    b130:	ldur	w8, [x29, #-32]
    b134:	add	w8, w8, #0x1
    b138:	stur	w8, [x29, #-28]
    b13c:	ldur	w8, [x29, #-68]
    b140:	add	w8, w8, #0x1
    b144:	stur	w8, [x29, #-68]
    b148:	b	9fe0 <BZ2_compressBlock@@Base+0x4308>
    b14c:	ldur	w8, [x29, #-68]
    b150:	ldur	w9, [x29, #-52]
    b154:	cmp	w8, w9
    b158:	b.eq	b164 <BZ2_compressBlock@@Base+0x548c>  // b.none
    b15c:	mov	w0, #0xbbf                 	// #3007
    b160:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
    b164:	ldur	x8, [x29, #-8]
    b168:	ldr	w9, [x8, #656]
    b16c:	cmp	w9, #0x3
    b170:	b.lt	b198 <BZ2_compressBlock@@Base+0x54c0>  // b.tstop
    b174:	ldr	x8, [sp, #24]
    b178:	ldr	x0, [x8]
    b17c:	ldur	x9, [x29, #-8]
    b180:	ldr	w10, [x9, #116]
    b184:	ldur	w11, [x29, #-76]
    b188:	subs	w2, w10, w11
    b18c:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    b190:	add	x1, x1, #0xba0
    b194:	bl	16e0 <fprintf@plt>
    b198:	ldp	x29, x30, [sp, #240]
    b19c:	add	sp, sp, #0x100
    b1a0:	ret
    b1a4:	sub	sp, sp, #0x10
    b1a8:	str	x0, [sp, #8]
    b1ac:	ldr	x8, [sp, #8]
    b1b0:	ldr	w9, [x8, #644]
    b1b4:	cmp	w9, #0x0
    b1b8:	cset	w9, le
    b1bc:	tbnz	w9, #0, b218 <BZ2_compressBlock@@Base+0x5540>
    b1c0:	ldr	x8, [sp, #8]
    b1c4:	ldr	w9, [x8, #640]
    b1c8:	lsr	w9, w9, #24
    b1cc:	ldr	x8, [sp, #8]
    b1d0:	ldr	x8, [x8, #80]
    b1d4:	ldr	x10, [sp, #8]
    b1d8:	ldrsw	x10, [x10, #116]
    b1dc:	add	x8, x8, x10
    b1e0:	strb	w9, [x8]
    b1e4:	ldr	x8, [sp, #8]
    b1e8:	ldr	w9, [x8, #116]
    b1ec:	add	w9, w9, #0x1
    b1f0:	str	w9, [x8, #116]
    b1f4:	ldr	x8, [sp, #8]
    b1f8:	ldr	w9, [x8, #640]
    b1fc:	lsl	w9, w9, #8
    b200:	str	w9, [x8, #640]
    b204:	ldr	x8, [sp, #8]
    b208:	ldr	w9, [x8, #644]
    b20c:	subs	w9, w9, #0x8
    b210:	str	w9, [x8, #644]
    b214:	b	b1ac <BZ2_compressBlock@@Base+0x54d4>
    b218:	add	sp, sp, #0x10
    b21c:	ret
    b220:	sub	sp, sp, #0x10
    b224:	str	x0, [sp, #8]
    b228:	ldr	x8, [sp, #8]
    b22c:	str	wzr, [x8, #124]
    b230:	str	wzr, [sp, #4]
    b234:	ldr	w8, [sp, #4]
    b238:	cmp	w8, #0x100
    b23c:	b.ge	b294 <BZ2_compressBlock@@Base+0x55bc>  // b.tcont
    b240:	ldr	x8, [sp, #8]
    b244:	add	x8, x8, #0x80
    b248:	ldrsw	x9, [sp, #4]
    b24c:	add	x8, x8, x9
    b250:	ldrb	w10, [x8]
    b254:	cbz	w10, b284 <BZ2_compressBlock@@Base+0x55ac>
    b258:	ldr	x8, [sp, #8]
    b25c:	ldr	w9, [x8, #124]
    b260:	ldr	x8, [sp, #8]
    b264:	add	x8, x8, #0x180
    b268:	ldrsw	x10, [sp, #4]
    b26c:	add	x8, x8, x10
    b270:	strb	w9, [x8]
    b274:	ldr	x8, [sp, #8]
    b278:	ldr	w9, [x8, #124]
    b27c:	add	w9, w9, #0x1
    b280:	str	w9, [x8, #124]
    b284:	ldr	w8, [sp, #4]
    b288:	add	w8, w8, #0x1
    b28c:	str	w8, [sp, #4]
    b290:	b	b234 <BZ2_compressBlock@@Base+0x555c>
    b294:	add	sp, sp, #0x10
    b298:	ret

000000000000b29c <BZ2_decompress@@Base>:
    b29c:	sub	sp, sp, #0x1c0
    b2a0:	stp	x29, x30, [sp, #416]
    b2a4:	str	x28, [sp, #432]
    b2a8:	add	x29, sp, #0x1a0
    b2ac:	sub	x8, x29, #0x98
    b2b0:	str	x0, [x8, #136]
    b2b4:	ldr	x9, [x8, #136]
    b2b8:	ldr	x9, [x9]
    b2bc:	str	x9, [x8, #112]
    b2c0:	ldr	x9, [x8, #136]
    b2c4:	ldr	w10, [x9, #8]
    b2c8:	cmp	w10, #0xa
    b2cc:	str	x8, [sp, #32]
    b2d0:	b.ne	b45c <BZ2_decompress@@Base+0x1c0>  // b.any
    b2d4:	ldr	x8, [sp, #32]
    b2d8:	ldr	x9, [x8, #136]
    b2dc:	mov	x10, #0xfa24                	// #64036
    b2e0:	add	x9, x9, x10
    b2e4:	str	wzr, [x9]
    b2e8:	ldr	x9, [x8, #136]
    b2ec:	mov	x10, #0xfa28                	// #64040
    b2f0:	add	x9, x9, x10
    b2f4:	str	wzr, [x9]
    b2f8:	ldr	x9, [x8, #136]
    b2fc:	mov	x10, #0xfa2c                	// #64044
    b300:	add	x9, x9, x10
    b304:	str	wzr, [x9]
    b308:	ldr	x9, [x8, #136]
    b30c:	mov	x10, #0xfa30                	// #64048
    b310:	add	x9, x9, x10
    b314:	str	wzr, [x9]
    b318:	ldr	x9, [x8, #136]
    b31c:	mov	x10, #0xfa34                	// #64052
    b320:	add	x9, x9, x10
    b324:	str	wzr, [x9]
    b328:	ldr	x9, [x8, #136]
    b32c:	mov	x10, #0xfa38                	// #64056
    b330:	add	x9, x9, x10
    b334:	str	wzr, [x9]
    b338:	ldr	x9, [x8, #136]
    b33c:	mov	x10, #0xfa3c                	// #64060
    b340:	add	x9, x9, x10
    b344:	str	wzr, [x9]
    b348:	ldr	x9, [x8, #136]
    b34c:	mov	x10, #0xfa40                	// #64064
    b350:	add	x9, x9, x10
    b354:	str	wzr, [x9]
    b358:	ldr	x9, [x8, #136]
    b35c:	mov	x10, #0xfa44                	// #64068
    b360:	add	x9, x9, x10
    b364:	str	wzr, [x9]
    b368:	ldr	x9, [x8, #136]
    b36c:	mov	x10, #0xfa48                	// #64072
    b370:	add	x9, x9, x10
    b374:	str	wzr, [x9]
    b378:	ldr	x9, [x8, #136]
    b37c:	mov	x10, #0xfa4c                	// #64076
    b380:	add	x9, x9, x10
    b384:	str	wzr, [x9]
    b388:	ldr	x9, [x8, #136]
    b38c:	mov	x10, #0xfa50                	// #64080
    b390:	add	x9, x9, x10
    b394:	str	wzr, [x9]
    b398:	ldr	x9, [x8, #136]
    b39c:	mov	x10, #0xfa54                	// #64084
    b3a0:	add	x9, x9, x10
    b3a4:	str	wzr, [x9]
    b3a8:	ldr	x9, [x8, #136]
    b3ac:	mov	x10, #0xfa58                	// #64088
    b3b0:	add	x9, x9, x10
    b3b4:	str	wzr, [x9]
    b3b8:	ldr	x9, [x8, #136]
    b3bc:	mov	x10, #0xfa5c                	// #64092
    b3c0:	add	x9, x9, x10
    b3c4:	str	wzr, [x9]
    b3c8:	ldr	x9, [x8, #136]
    b3cc:	mov	x10, #0xfa60                	// #64096
    b3d0:	add	x9, x9, x10
    b3d4:	str	wzr, [x9]
    b3d8:	ldr	x9, [x8, #136]
    b3dc:	mov	x10, #0xfa64                	// #64100
    b3e0:	add	x9, x9, x10
    b3e4:	str	wzr, [x9]
    b3e8:	ldr	x9, [x8, #136]
    b3ec:	mov	x10, #0xfa68                	// #64104
    b3f0:	add	x9, x9, x10
    b3f4:	str	wzr, [x9]
    b3f8:	ldr	x9, [x8, #136]
    b3fc:	mov	x10, #0xfa6c                	// #64108
    b400:	add	x9, x9, x10
    b404:	str	wzr, [x9]
    b408:	ldr	x9, [x8, #136]
    b40c:	mov	x10, #0xfa70                	// #64112
    b410:	add	x9, x9, x10
    b414:	str	wzr, [x9]
    b418:	ldr	x9, [x8, #136]
    b41c:	mov	x10, #0xfa74                	// #64116
    b420:	add	x9, x9, x10
    b424:	str	wzr, [x9]
    b428:	ldr	x9, [x8, #136]
    b42c:	mov	x10, #0xfa78                	// #64120
    b430:	add	x9, x9, x10
    b434:	mov	x10, xzr
    b438:	str	x10, [x9]
    b43c:	ldr	x9, [x8, #136]
    b440:	mov	x11, #0xfa80                	// #64128
    b444:	add	x9, x9, x11
    b448:	str	x10, [x9]
    b44c:	ldr	x9, [x8, #136]
    b450:	mov	x11, #0xfa88                	// #64136
    b454:	add	x9, x9, x11
    b458:	str	x10, [x9]
    b45c:	ldr	x8, [sp, #32]
    b460:	ldr	x9, [x8, #136]
    b464:	mov	x10, #0xfa24                	// #64036
    b468:	add	x9, x9, x10
    b46c:	ldr	w11, [x9]
    b470:	stur	w11, [x29, #-44]
    b474:	ldr	x9, [x8, #136]
    b478:	mov	x10, #0xfa28                	// #64040
    b47c:	add	x9, x9, x10
    b480:	ldr	w11, [x9]
    b484:	stur	w11, [x29, #-48]
    b488:	ldr	x9, [x8, #136]
    b48c:	mov	x10, #0xfa2c                	// #64044
    b490:	add	x9, x9, x10
    b494:	ldr	w11, [x9]
    b498:	stur	w11, [x29, #-52]
    b49c:	ldr	x9, [x8, #136]
    b4a0:	mov	x10, #0xfa30                	// #64048
    b4a4:	add	x9, x9, x10
    b4a8:	ldr	w11, [x9]
    b4ac:	stur	w11, [x29, #-56]
    b4b0:	ldr	x9, [x8, #136]
    b4b4:	mov	x10, #0xfa34                	// #64052
    b4b8:	add	x9, x9, x10
    b4bc:	ldr	w11, [x9]
    b4c0:	stur	w11, [x29, #-60]
    b4c4:	ldr	x9, [x8, #136]
    b4c8:	mov	x10, #0xfa38                	// #64056
    b4cc:	add	x9, x9, x10
    b4d0:	ldr	w11, [x9]
    b4d4:	stur	w11, [x29, #-64]
    b4d8:	ldr	x9, [x8, #136]
    b4dc:	mov	x10, #0xfa3c                	// #64060
    b4e0:	add	x9, x9, x10
    b4e4:	ldr	w11, [x9]
    b4e8:	stur	w11, [x29, #-68]
    b4ec:	ldr	x9, [x8, #136]
    b4f0:	mov	x10, #0xfa40                	// #64064
    b4f4:	add	x9, x9, x10
    b4f8:	ldr	w11, [x9]
    b4fc:	stur	w11, [x29, #-72]
    b500:	ldr	x9, [x8, #136]
    b504:	mov	x10, #0xfa44                	// #64068
    b508:	add	x9, x9, x10
    b50c:	ldr	w11, [x9]
    b510:	stur	w11, [x29, #-76]
    b514:	ldr	x9, [x8, #136]
    b518:	mov	x10, #0xfa48                	// #64072
    b51c:	add	x9, x9, x10
    b520:	ldr	w11, [x9]
    b524:	stur	w11, [x29, #-80]
    b528:	ldr	x9, [x8, #136]
    b52c:	mov	x10, #0xfa4c                	// #64076
    b530:	add	x9, x9, x10
    b534:	ldr	w11, [x9]
    b538:	stur	w11, [x29, #-84]
    b53c:	ldr	x9, [x8, #136]
    b540:	mov	x10, #0xfa50                	// #64080
    b544:	add	x9, x9, x10
    b548:	ldr	w11, [x9]
    b54c:	stur	w11, [x29, #-88]
    b550:	ldr	x9, [x8, #136]
    b554:	mov	x10, #0xfa54                	// #64084
    b558:	add	x9, x9, x10
    b55c:	ldr	w11, [x9]
    b560:	stur	w11, [x29, #-92]
    b564:	ldr	x9, [x8, #136]
    b568:	mov	x10, #0xfa58                	// #64088
    b56c:	add	x9, x9, x10
    b570:	ldr	w11, [x9]
    b574:	stur	w11, [x29, #-96]
    b578:	ldr	x9, [x8, #136]
    b57c:	mov	x10, #0xfa5c                	// #64092
    b580:	add	x9, x9, x10
    b584:	ldr	w11, [x9]
    b588:	stur	w11, [x29, #-100]
    b58c:	ldr	x9, [x8, #136]
    b590:	mov	x10, #0xfa60                	// #64096
    b594:	add	x9, x9, x10
    b598:	ldr	w11, [x9]
    b59c:	stur	w11, [x29, #-104]
    b5a0:	ldr	x9, [x8, #136]
    b5a4:	mov	x10, #0xfa64                	// #64100
    b5a8:	add	x9, x9, x10
    b5ac:	ldr	w11, [x9]
    b5b0:	stur	w11, [x29, #-108]
    b5b4:	ldr	x9, [x8, #136]
    b5b8:	mov	x10, #0xfa68                	// #64104
    b5bc:	add	x9, x9, x10
    b5c0:	ldr	w11, [x9]
    b5c4:	stur	w11, [x29, #-112]
    b5c8:	ldr	x9, [x8, #136]
    b5cc:	mov	x10, #0xfa6c                	// #64108
    b5d0:	add	x9, x9, x10
    b5d4:	ldr	w11, [x9]
    b5d8:	stur	w11, [x29, #-116]
    b5dc:	ldr	x9, [x8, #136]
    b5e0:	mov	x10, #0xfa70                	// #64112
    b5e4:	add	x9, x9, x10
    b5e8:	ldr	w11, [x9]
    b5ec:	stur	w11, [x29, #-120]
    b5f0:	ldr	x9, [x8, #136]
    b5f4:	mov	x10, #0xfa74                	// #64116
    b5f8:	add	x9, x9, x10
    b5fc:	ldr	w11, [x9]
    b600:	stur	w11, [x29, #-124]
    b604:	ldr	x9, [x8, #136]
    b608:	mov	x10, #0xfa78                	// #64120
    b60c:	add	x9, x9, x10
    b610:	ldr	x9, [x9]
    b614:	str	x9, [x8, #16]
    b618:	ldr	x9, [x8, #136]
    b61c:	mov	x10, #0xfa80                	// #64128
    b620:	add	x9, x9, x10
    b624:	ldr	x9, [x9]
    b628:	str	x9, [x8, #8]
    b62c:	ldr	x9, [x8, #136]
    b630:	mov	x10, #0xfa88                	// #64136
    b634:	add	x9, x9, x10
    b638:	ldr	x9, [x9]
    b63c:	str	x9, [x8]
    b640:	stur	wzr, [x29, #-24]
    b644:	ldr	x9, [x8, #136]
    b648:	ldr	w11, [x9, #8]
    b64c:	subs	w11, w11, #0xa
    b650:	mov	w9, w11
    b654:	ubfx	x9, x9, #0, #32
    b658:	cmp	x9, #0x28
    b65c:	str	x9, [sp, #24]
    b660:	b.hi	1082c <BZ2_decompress@@Base+0x5590>  // b.pmore
    b664:	adrp	x8, 15000 <BZ2_bzclose@@Base+0x58>
    b668:	add	x8, x8, #0xbac
    b66c:	ldr	x11, [sp, #24]
    b670:	ldrsw	x10, [x8, x11, lsl #2]
    b674:	add	x9, x8, x10
    b678:	br	x9
    b67c:	ldr	x8, [sp, #32]
    b680:	ldr	x9, [x8, #136]
    b684:	mov	w10, #0xa                   	// #10
    b688:	str	w10, [x9, #8]
    b68c:	ldr	x8, [sp, #32]
    b690:	ldr	x9, [x8, #136]
    b694:	ldr	w10, [x9, #36]
    b698:	cmp	w10, #0x8
    b69c:	b.lt	b6e0 <BZ2_decompress@@Base+0x444>  // b.tstop
    b6a0:	ldr	x8, [sp, #32]
    b6a4:	ldr	x9, [x8, #136]
    b6a8:	ldr	w10, [x9, #32]
    b6ac:	ldr	x9, [x8, #136]
    b6b0:	ldr	w11, [x9, #36]
    b6b4:	subs	w11, w11, #0x8
    b6b8:	lsr	w10, w10, w11
    b6bc:	and	w10, w10, #0xff
    b6c0:	stur	w10, [x29, #-156]
    b6c4:	ldr	x9, [x8, #136]
    b6c8:	ldr	w10, [x9, #36]
    b6cc:	subs	w10, w10, #0x8
    b6d0:	str	w10, [x9, #36]
    b6d4:	ldur	w10, [x29, #-156]
    b6d8:	sturb	w10, [x29, #-17]
    b6dc:	b	b79c <BZ2_decompress@@Base+0x500>
    b6e0:	ldr	x8, [sp, #32]
    b6e4:	ldr	x9, [x8, #136]
    b6e8:	ldr	x9, [x9]
    b6ec:	ldr	w10, [x9, #8]
    b6f0:	cbnz	w10, b6fc <BZ2_decompress@@Base+0x460>
    b6f4:	stur	wzr, [x29, #-24]
    b6f8:	b	1083c <BZ2_decompress@@Base+0x55a0>
    b6fc:	ldr	x8, [sp, #32]
    b700:	ldr	x9, [x8, #136]
    b704:	ldr	w10, [x9, #32]
    b708:	ldr	x9, [x8, #136]
    b70c:	ldr	x9, [x9]
    b710:	ldr	x9, [x9]
    b714:	ldrb	w11, [x9]
    b718:	orr	w10, w11, w10, lsl #8
    b71c:	ldr	x9, [x8, #136]
    b720:	str	w10, [x9, #32]
    b724:	ldr	x9, [x8, #136]
    b728:	ldr	w10, [x9, #36]
    b72c:	add	w10, w10, #0x8
    b730:	str	w10, [x9, #36]
    b734:	ldr	x9, [x8, #136]
    b738:	ldr	x9, [x9]
    b73c:	ldr	x12, [x9]
    b740:	add	x12, x12, #0x1
    b744:	str	x12, [x9]
    b748:	ldr	x9, [x8, #136]
    b74c:	ldr	x9, [x9]
    b750:	ldr	w10, [x9, #8]
    b754:	subs	w10, w10, #0x1
    b758:	str	w10, [x9, #8]
    b75c:	ldr	x9, [x8, #136]
    b760:	ldr	x9, [x9]
    b764:	ldr	w10, [x9, #12]
    b768:	add	w10, w10, #0x1
    b76c:	str	w10, [x9, #12]
    b770:	ldr	x9, [x8, #136]
    b774:	ldr	x9, [x9]
    b778:	ldr	w10, [x9, #12]
    b77c:	cbnz	w10, b798 <BZ2_decompress@@Base+0x4fc>
    b780:	ldr	x8, [sp, #32]
    b784:	ldr	x9, [x8, #136]
    b788:	ldr	x9, [x9]
    b78c:	ldr	w10, [x9, #16]
    b790:	add	w10, w10, #0x1
    b794:	str	w10, [x9, #16]
    b798:	b	b68c <BZ2_decompress@@Base+0x3f0>
    b79c:	ldurb	w8, [x29, #-17]
    b7a0:	cmp	w8, #0x42
    b7a4:	b.eq	b7b4 <BZ2_decompress@@Base+0x518>  // b.none
    b7a8:	mov	w8, #0xfffffffb            	// #-5
    b7ac:	stur	w8, [x29, #-24]
    b7b0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    b7b4:	ldr	x8, [sp, #32]
    b7b8:	ldr	x9, [x8, #136]
    b7bc:	mov	w10, #0xb                   	// #11
    b7c0:	str	w10, [x9, #8]
    b7c4:	ldr	x8, [sp, #32]
    b7c8:	ldr	x9, [x8, #136]
    b7cc:	ldr	w10, [x9, #36]
    b7d0:	cmp	w10, #0x8
    b7d4:	b.lt	b818 <BZ2_decompress@@Base+0x57c>  // b.tstop
    b7d8:	ldr	x8, [sp, #32]
    b7dc:	ldr	x9, [x8, #136]
    b7e0:	ldr	w10, [x9, #32]
    b7e4:	ldr	x9, [x8, #136]
    b7e8:	ldr	w11, [x9, #36]
    b7ec:	subs	w11, w11, #0x8
    b7f0:	lsr	w10, w10, w11
    b7f4:	and	w10, w10, #0xff
    b7f8:	stur	w10, [x29, #-160]
    b7fc:	ldr	x9, [x8, #136]
    b800:	ldr	w10, [x9, #36]
    b804:	subs	w10, w10, #0x8
    b808:	str	w10, [x9, #36]
    b80c:	ldur	w10, [x29, #-160]
    b810:	sturb	w10, [x29, #-17]
    b814:	b	b8d4 <BZ2_decompress@@Base+0x638>
    b818:	ldr	x8, [sp, #32]
    b81c:	ldr	x9, [x8, #136]
    b820:	ldr	x9, [x9]
    b824:	ldr	w10, [x9, #8]
    b828:	cbnz	w10, b834 <BZ2_decompress@@Base+0x598>
    b82c:	stur	wzr, [x29, #-24]
    b830:	b	1083c <BZ2_decompress@@Base+0x55a0>
    b834:	ldr	x8, [sp, #32]
    b838:	ldr	x9, [x8, #136]
    b83c:	ldr	w10, [x9, #32]
    b840:	ldr	x9, [x8, #136]
    b844:	ldr	x9, [x9]
    b848:	ldr	x9, [x9]
    b84c:	ldrb	w11, [x9]
    b850:	orr	w10, w11, w10, lsl #8
    b854:	ldr	x9, [x8, #136]
    b858:	str	w10, [x9, #32]
    b85c:	ldr	x9, [x8, #136]
    b860:	ldr	w10, [x9, #36]
    b864:	add	w10, w10, #0x8
    b868:	str	w10, [x9, #36]
    b86c:	ldr	x9, [x8, #136]
    b870:	ldr	x9, [x9]
    b874:	ldr	x12, [x9]
    b878:	add	x12, x12, #0x1
    b87c:	str	x12, [x9]
    b880:	ldr	x9, [x8, #136]
    b884:	ldr	x9, [x9]
    b888:	ldr	w10, [x9, #8]
    b88c:	subs	w10, w10, #0x1
    b890:	str	w10, [x9, #8]
    b894:	ldr	x9, [x8, #136]
    b898:	ldr	x9, [x9]
    b89c:	ldr	w10, [x9, #12]
    b8a0:	add	w10, w10, #0x1
    b8a4:	str	w10, [x9, #12]
    b8a8:	ldr	x9, [x8, #136]
    b8ac:	ldr	x9, [x9]
    b8b0:	ldr	w10, [x9, #12]
    b8b4:	cbnz	w10, b8d0 <BZ2_decompress@@Base+0x634>
    b8b8:	ldr	x8, [sp, #32]
    b8bc:	ldr	x9, [x8, #136]
    b8c0:	ldr	x9, [x9]
    b8c4:	ldr	w10, [x9, #16]
    b8c8:	add	w10, w10, #0x1
    b8cc:	str	w10, [x9, #16]
    b8d0:	b	b7c4 <BZ2_decompress@@Base+0x528>
    b8d4:	ldurb	w8, [x29, #-17]
    b8d8:	cmp	w8, #0x5a
    b8dc:	b.eq	b8ec <BZ2_decompress@@Base+0x650>  // b.none
    b8e0:	mov	w8, #0xfffffffb            	// #-5
    b8e4:	stur	w8, [x29, #-24]
    b8e8:	b	1083c <BZ2_decompress@@Base+0x55a0>
    b8ec:	ldr	x8, [sp, #32]
    b8f0:	ldr	x9, [x8, #136]
    b8f4:	mov	w10, #0xc                   	// #12
    b8f8:	str	w10, [x9, #8]
    b8fc:	ldr	x8, [sp, #32]
    b900:	ldr	x9, [x8, #136]
    b904:	ldr	w10, [x9, #36]
    b908:	cmp	w10, #0x8
    b90c:	b.lt	b950 <BZ2_decompress@@Base+0x6b4>  // b.tstop
    b910:	ldr	x8, [sp, #32]
    b914:	ldr	x9, [x8, #136]
    b918:	ldr	w10, [x9, #32]
    b91c:	ldr	x9, [x8, #136]
    b920:	ldr	w11, [x9, #36]
    b924:	subs	w11, w11, #0x8
    b928:	lsr	w10, w10, w11
    b92c:	and	w10, w10, #0xff
    b930:	stur	w10, [x29, #-164]
    b934:	ldr	x9, [x8, #136]
    b938:	ldr	w10, [x9, #36]
    b93c:	subs	w10, w10, #0x8
    b940:	str	w10, [x9, #36]
    b944:	ldur	w10, [x29, #-164]
    b948:	sturb	w10, [x29, #-17]
    b94c:	b	ba0c <BZ2_decompress@@Base+0x770>
    b950:	ldr	x8, [sp, #32]
    b954:	ldr	x9, [x8, #136]
    b958:	ldr	x9, [x9]
    b95c:	ldr	w10, [x9, #8]
    b960:	cbnz	w10, b96c <BZ2_decompress@@Base+0x6d0>
    b964:	stur	wzr, [x29, #-24]
    b968:	b	1083c <BZ2_decompress@@Base+0x55a0>
    b96c:	ldr	x8, [sp, #32]
    b970:	ldr	x9, [x8, #136]
    b974:	ldr	w10, [x9, #32]
    b978:	ldr	x9, [x8, #136]
    b97c:	ldr	x9, [x9]
    b980:	ldr	x9, [x9]
    b984:	ldrb	w11, [x9]
    b988:	orr	w10, w11, w10, lsl #8
    b98c:	ldr	x9, [x8, #136]
    b990:	str	w10, [x9, #32]
    b994:	ldr	x9, [x8, #136]
    b998:	ldr	w10, [x9, #36]
    b99c:	add	w10, w10, #0x8
    b9a0:	str	w10, [x9, #36]
    b9a4:	ldr	x9, [x8, #136]
    b9a8:	ldr	x9, [x9]
    b9ac:	ldr	x12, [x9]
    b9b0:	add	x12, x12, #0x1
    b9b4:	str	x12, [x9]
    b9b8:	ldr	x9, [x8, #136]
    b9bc:	ldr	x9, [x9]
    b9c0:	ldr	w10, [x9, #8]
    b9c4:	subs	w10, w10, #0x1
    b9c8:	str	w10, [x9, #8]
    b9cc:	ldr	x9, [x8, #136]
    b9d0:	ldr	x9, [x9]
    b9d4:	ldr	w10, [x9, #12]
    b9d8:	add	w10, w10, #0x1
    b9dc:	str	w10, [x9, #12]
    b9e0:	ldr	x9, [x8, #136]
    b9e4:	ldr	x9, [x9]
    b9e8:	ldr	w10, [x9, #12]
    b9ec:	cbnz	w10, ba08 <BZ2_decompress@@Base+0x76c>
    b9f0:	ldr	x8, [sp, #32]
    b9f4:	ldr	x9, [x8, #136]
    b9f8:	ldr	x9, [x9]
    b9fc:	ldr	w10, [x9, #16]
    ba00:	add	w10, w10, #0x1
    ba04:	str	w10, [x9, #16]
    ba08:	b	b8fc <BZ2_decompress@@Base+0x660>
    ba0c:	ldurb	w8, [x29, #-17]
    ba10:	cmp	w8, #0x68
    ba14:	b.eq	ba24 <BZ2_decompress@@Base+0x788>  // b.none
    ba18:	mov	w8, #0xfffffffb            	// #-5
    ba1c:	stur	w8, [x29, #-24]
    ba20:	b	1083c <BZ2_decompress@@Base+0x55a0>
    ba24:	ldr	x8, [sp, #32]
    ba28:	ldr	x9, [x8, #136]
    ba2c:	mov	w10, #0xd                   	// #13
    ba30:	str	w10, [x9, #8]
    ba34:	ldr	x8, [sp, #32]
    ba38:	ldr	x9, [x8, #136]
    ba3c:	ldr	w10, [x9, #36]
    ba40:	cmp	w10, #0x8
    ba44:	b.lt	ba8c <BZ2_decompress@@Base+0x7f0>  // b.tstop
    ba48:	ldr	x8, [sp, #32]
    ba4c:	ldr	x9, [x8, #136]
    ba50:	ldr	w10, [x9, #32]
    ba54:	ldr	x9, [x8, #136]
    ba58:	ldr	w11, [x9, #36]
    ba5c:	subs	w11, w11, #0x8
    ba60:	lsr	w10, w10, w11
    ba64:	and	w10, w10, #0xff
    ba68:	stur	w10, [x29, #-168]
    ba6c:	ldr	x9, [x8, #136]
    ba70:	ldr	w10, [x9, #36]
    ba74:	subs	w10, w10, #0x8
    ba78:	str	w10, [x9, #36]
    ba7c:	ldur	w10, [x29, #-168]
    ba80:	ldr	x9, [x8, #136]
    ba84:	str	w10, [x9, #40]
    ba88:	b	bb48 <BZ2_decompress@@Base+0x8ac>
    ba8c:	ldr	x8, [sp, #32]
    ba90:	ldr	x9, [x8, #136]
    ba94:	ldr	x9, [x9]
    ba98:	ldr	w10, [x9, #8]
    ba9c:	cbnz	w10, baa8 <BZ2_decompress@@Base+0x80c>
    baa0:	stur	wzr, [x29, #-24]
    baa4:	b	1083c <BZ2_decompress@@Base+0x55a0>
    baa8:	ldr	x8, [sp, #32]
    baac:	ldr	x9, [x8, #136]
    bab0:	ldr	w10, [x9, #32]
    bab4:	ldr	x9, [x8, #136]
    bab8:	ldr	x9, [x9]
    babc:	ldr	x9, [x9]
    bac0:	ldrb	w11, [x9]
    bac4:	orr	w10, w11, w10, lsl #8
    bac8:	ldr	x9, [x8, #136]
    bacc:	str	w10, [x9, #32]
    bad0:	ldr	x9, [x8, #136]
    bad4:	ldr	w10, [x9, #36]
    bad8:	add	w10, w10, #0x8
    badc:	str	w10, [x9, #36]
    bae0:	ldr	x9, [x8, #136]
    bae4:	ldr	x9, [x9]
    bae8:	ldr	x12, [x9]
    baec:	add	x12, x12, #0x1
    baf0:	str	x12, [x9]
    baf4:	ldr	x9, [x8, #136]
    baf8:	ldr	x9, [x9]
    bafc:	ldr	w10, [x9, #8]
    bb00:	subs	w10, w10, #0x1
    bb04:	str	w10, [x9, #8]
    bb08:	ldr	x9, [x8, #136]
    bb0c:	ldr	x9, [x9]
    bb10:	ldr	w10, [x9, #12]
    bb14:	add	w10, w10, #0x1
    bb18:	str	w10, [x9, #12]
    bb1c:	ldr	x9, [x8, #136]
    bb20:	ldr	x9, [x9]
    bb24:	ldr	w10, [x9, #12]
    bb28:	cbnz	w10, bb44 <BZ2_decompress@@Base+0x8a8>
    bb2c:	ldr	x8, [sp, #32]
    bb30:	ldr	x9, [x8, #136]
    bb34:	ldr	x9, [x9]
    bb38:	ldr	w10, [x9, #16]
    bb3c:	add	w10, w10, #0x1
    bb40:	str	w10, [x9, #16]
    bb44:	b	ba34 <BZ2_decompress@@Base+0x798>
    bb48:	ldr	x8, [sp, #32]
    bb4c:	ldr	x9, [x8, #136]
    bb50:	ldr	w10, [x9, #40]
    bb54:	cmp	w10, #0x31
    bb58:	b.lt	bb70 <BZ2_decompress@@Base+0x8d4>  // b.tstop
    bb5c:	ldr	x8, [sp, #32]
    bb60:	ldr	x9, [x8, #136]
    bb64:	ldr	w10, [x9, #40]
    bb68:	cmp	w10, #0x39
    bb6c:	b.le	bb7c <BZ2_decompress@@Base+0x8e0>
    bb70:	mov	w8, #0xfffffffb            	// #-5
    bb74:	stur	w8, [x29, #-24]
    bb78:	b	1083c <BZ2_decompress@@Base+0x55a0>
    bb7c:	ldr	x8, [sp, #32]
    bb80:	ldr	x9, [x8, #136]
    bb84:	ldr	w10, [x9, #40]
    bb88:	subs	w10, w10, #0x30
    bb8c:	str	w10, [x9, #40]
    bb90:	ldr	x9, [x8, #136]
    bb94:	ldrb	w10, [x9, #44]
    bb98:	cbz	w10, bc64 <BZ2_decompress@@Base+0x9c8>
    bb9c:	ldr	x8, [sp, #32]
    bba0:	ldr	x9, [x8, #112]
    bba4:	ldr	x9, [x9, #56]
    bba8:	ldr	x10, [x8, #112]
    bbac:	ldr	x0, [x10, #72]
    bbb0:	ldr	x10, [x8, #136]
    bbb4:	ldr	w11, [x10, #40]
    bbb8:	mov	w12, #0x86a0                	// #34464
    bbbc:	movk	w12, #0x1, lsl #16
    bbc0:	mul	w11, w11, w12
    bbc4:	mov	w13, #0x2                   	// #2
    bbc8:	smull	x10, w11, w13
    bbcc:	mov	w1, w10
    bbd0:	mov	w10, #0x1                   	// #1
    bbd4:	mov	w2, w10
    bbd8:	str	w12, [sp, #20]
    bbdc:	str	w10, [sp, #16]
    bbe0:	blr	x9
    bbe4:	ldr	x8, [sp, #32]
    bbe8:	ldr	x9, [x8, #136]
    bbec:	str	x0, [x9, #3160]
    bbf0:	ldr	x9, [x8, #112]
    bbf4:	ldr	x9, [x9, #56]
    bbf8:	ldr	x14, [x8, #112]
    bbfc:	ldr	x0, [x14, #72]
    bc00:	ldr	x14, [x8, #136]
    bc04:	ldr	w10, [x14, #40]
    bc08:	ldr	w11, [sp, #20]
    bc0c:	mul	w10, w10, w11
    bc10:	add	w10, w10, #0x1
    bc14:	asr	w10, w10, #1
    bc18:	mov	w12, #0x1                   	// #1
    bc1c:	smull	x14, w10, w12
    bc20:	mov	w1, w14
    bc24:	ldr	w2, [sp, #16]
    bc28:	blr	x9
    bc2c:	ldr	x8, [sp, #32]
    bc30:	ldr	x9, [x8, #136]
    bc34:	str	x0, [x9, #3168]
    bc38:	ldr	x9, [x8, #136]
    bc3c:	ldr	x9, [x9, #3160]
    bc40:	cbz	x9, bc54 <BZ2_decompress@@Base+0x9b8>
    bc44:	ldr	x8, [sp, #32]
    bc48:	ldr	x9, [x8, #136]
    bc4c:	ldr	x9, [x9, #3168]
    bc50:	cbnz	x9, bc60 <BZ2_decompress@@Base+0x9c4>
    bc54:	mov	w8, #0xfffffffd            	// #-3
    bc58:	stur	w8, [x29, #-24]
    bc5c:	b	1083c <BZ2_decompress@@Base+0x55a0>
    bc60:	b	bcc4 <BZ2_decompress@@Base+0xa28>
    bc64:	ldr	x8, [sp, #32]
    bc68:	ldr	x9, [x8, #112]
    bc6c:	ldr	x9, [x9, #56]
    bc70:	ldr	x10, [x8, #112]
    bc74:	ldr	x0, [x10, #72]
    bc78:	ldr	x10, [x8, #136]
    bc7c:	ldr	w11, [x10, #40]
    bc80:	mov	w12, #0x86a0                	// #34464
    bc84:	movk	w12, #0x1, lsl #16
    bc88:	mul	w11, w11, w12
    bc8c:	mov	w12, #0x4                   	// #4
    bc90:	smull	x10, w11, w12
    bc94:	mov	w1, w10
    bc98:	mov	w2, #0x1                   	// #1
    bc9c:	blr	x9
    bca0:	ldr	x8, [sp, #32]
    bca4:	ldr	x9, [x8, #136]
    bca8:	str	x0, [x9, #3152]
    bcac:	ldr	x9, [x8, #136]
    bcb0:	ldr	x9, [x9, #3152]
    bcb4:	cbnz	x9, bcc4 <BZ2_decompress@@Base+0xa28>
    bcb8:	mov	w8, #0xfffffffd            	// #-3
    bcbc:	stur	w8, [x29, #-24]
    bcc0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    bcc4:	ldr	x8, [sp, #32]
    bcc8:	ldr	x9, [x8, #136]
    bccc:	mov	w10, #0xe                   	// #14
    bcd0:	str	w10, [x9, #8]
    bcd4:	ldr	x8, [sp, #32]
    bcd8:	ldr	x9, [x8, #136]
    bcdc:	ldr	w10, [x9, #36]
    bce0:	cmp	w10, #0x8
    bce4:	b.lt	bd28 <BZ2_decompress@@Base+0xa8c>  // b.tstop
    bce8:	ldr	x8, [sp, #32]
    bcec:	ldr	x9, [x8, #136]
    bcf0:	ldr	w10, [x9, #32]
    bcf4:	ldr	x9, [x8, #136]
    bcf8:	ldr	w11, [x9, #36]
    bcfc:	subs	w11, w11, #0x8
    bd00:	lsr	w10, w10, w11
    bd04:	and	w10, w10, #0xff
    bd08:	stur	w10, [x29, #-172]
    bd0c:	ldr	x9, [x8, #136]
    bd10:	ldr	w10, [x9, #36]
    bd14:	subs	w10, w10, #0x8
    bd18:	str	w10, [x9, #36]
    bd1c:	ldur	w10, [x29, #-172]
    bd20:	sturb	w10, [x29, #-17]
    bd24:	b	bde4 <BZ2_decompress@@Base+0xb48>
    bd28:	ldr	x8, [sp, #32]
    bd2c:	ldr	x9, [x8, #136]
    bd30:	ldr	x9, [x9]
    bd34:	ldr	w10, [x9, #8]
    bd38:	cbnz	w10, bd44 <BZ2_decompress@@Base+0xaa8>
    bd3c:	stur	wzr, [x29, #-24]
    bd40:	b	1083c <BZ2_decompress@@Base+0x55a0>
    bd44:	ldr	x8, [sp, #32]
    bd48:	ldr	x9, [x8, #136]
    bd4c:	ldr	w10, [x9, #32]
    bd50:	ldr	x9, [x8, #136]
    bd54:	ldr	x9, [x9]
    bd58:	ldr	x9, [x9]
    bd5c:	ldrb	w11, [x9]
    bd60:	orr	w10, w11, w10, lsl #8
    bd64:	ldr	x9, [x8, #136]
    bd68:	str	w10, [x9, #32]
    bd6c:	ldr	x9, [x8, #136]
    bd70:	ldr	w10, [x9, #36]
    bd74:	add	w10, w10, #0x8
    bd78:	str	w10, [x9, #36]
    bd7c:	ldr	x9, [x8, #136]
    bd80:	ldr	x9, [x9]
    bd84:	ldr	x12, [x9]
    bd88:	add	x12, x12, #0x1
    bd8c:	str	x12, [x9]
    bd90:	ldr	x9, [x8, #136]
    bd94:	ldr	x9, [x9]
    bd98:	ldr	w10, [x9, #8]
    bd9c:	subs	w10, w10, #0x1
    bda0:	str	w10, [x9, #8]
    bda4:	ldr	x9, [x8, #136]
    bda8:	ldr	x9, [x9]
    bdac:	ldr	w10, [x9, #12]
    bdb0:	add	w10, w10, #0x1
    bdb4:	str	w10, [x9, #12]
    bdb8:	ldr	x9, [x8, #136]
    bdbc:	ldr	x9, [x9]
    bdc0:	ldr	w10, [x9, #12]
    bdc4:	cbnz	w10, bde0 <BZ2_decompress@@Base+0xb44>
    bdc8:	ldr	x8, [sp, #32]
    bdcc:	ldr	x9, [x8, #136]
    bdd0:	ldr	x9, [x9]
    bdd4:	ldr	w10, [x9, #16]
    bdd8:	add	w10, w10, #0x1
    bddc:	str	w10, [x9, #16]
    bde0:	b	bcd4 <BZ2_decompress@@Base+0xa38>
    bde4:	ldurb	w8, [x29, #-17]
    bde8:	cmp	w8, #0x17
    bdec:	b.ne	bdf4 <BZ2_decompress@@Base+0xb58>  // b.any
    bdf0:	b	fd00 <BZ2_decompress@@Base+0x4a64>
    bdf4:	ldurb	w8, [x29, #-17]
    bdf8:	cmp	w8, #0x31
    bdfc:	b.eq	be0c <BZ2_decompress@@Base+0xb70>  // b.none
    be00:	mov	w8, #0xfffffffc            	// #-4
    be04:	stur	w8, [x29, #-24]
    be08:	b	1083c <BZ2_decompress@@Base+0x55a0>
    be0c:	ldr	x8, [sp, #32]
    be10:	ldr	x9, [x8, #136]
    be14:	mov	w10, #0xf                   	// #15
    be18:	str	w10, [x9, #8]
    be1c:	ldr	x8, [sp, #32]
    be20:	ldr	x9, [x8, #136]
    be24:	ldr	w10, [x9, #36]
    be28:	cmp	w10, #0x8
    be2c:	b.lt	be70 <BZ2_decompress@@Base+0xbd4>  // b.tstop
    be30:	ldr	x8, [sp, #32]
    be34:	ldr	x9, [x8, #136]
    be38:	ldr	w10, [x9, #32]
    be3c:	ldr	x9, [x8, #136]
    be40:	ldr	w11, [x9, #36]
    be44:	subs	w11, w11, #0x8
    be48:	lsr	w10, w10, w11
    be4c:	and	w10, w10, #0xff
    be50:	stur	w10, [x29, #-176]
    be54:	ldr	x9, [x8, #136]
    be58:	ldr	w10, [x9, #36]
    be5c:	subs	w10, w10, #0x8
    be60:	str	w10, [x9, #36]
    be64:	ldur	w10, [x29, #-176]
    be68:	sturb	w10, [x29, #-17]
    be6c:	b	bf2c <BZ2_decompress@@Base+0xc90>
    be70:	ldr	x8, [sp, #32]
    be74:	ldr	x9, [x8, #136]
    be78:	ldr	x9, [x9]
    be7c:	ldr	w10, [x9, #8]
    be80:	cbnz	w10, be8c <BZ2_decompress@@Base+0xbf0>
    be84:	stur	wzr, [x29, #-24]
    be88:	b	1083c <BZ2_decompress@@Base+0x55a0>
    be8c:	ldr	x8, [sp, #32]
    be90:	ldr	x9, [x8, #136]
    be94:	ldr	w10, [x9, #32]
    be98:	ldr	x9, [x8, #136]
    be9c:	ldr	x9, [x9]
    bea0:	ldr	x9, [x9]
    bea4:	ldrb	w11, [x9]
    bea8:	orr	w10, w11, w10, lsl #8
    beac:	ldr	x9, [x8, #136]
    beb0:	str	w10, [x9, #32]
    beb4:	ldr	x9, [x8, #136]
    beb8:	ldr	w10, [x9, #36]
    bebc:	add	w10, w10, #0x8
    bec0:	str	w10, [x9, #36]
    bec4:	ldr	x9, [x8, #136]
    bec8:	ldr	x9, [x9]
    becc:	ldr	x12, [x9]
    bed0:	add	x12, x12, #0x1
    bed4:	str	x12, [x9]
    bed8:	ldr	x9, [x8, #136]
    bedc:	ldr	x9, [x9]
    bee0:	ldr	w10, [x9, #8]
    bee4:	subs	w10, w10, #0x1
    bee8:	str	w10, [x9, #8]
    beec:	ldr	x9, [x8, #136]
    bef0:	ldr	x9, [x9]
    bef4:	ldr	w10, [x9, #12]
    bef8:	add	w10, w10, #0x1
    befc:	str	w10, [x9, #12]
    bf00:	ldr	x9, [x8, #136]
    bf04:	ldr	x9, [x9]
    bf08:	ldr	w10, [x9, #12]
    bf0c:	cbnz	w10, bf28 <BZ2_decompress@@Base+0xc8c>
    bf10:	ldr	x8, [sp, #32]
    bf14:	ldr	x9, [x8, #136]
    bf18:	ldr	x9, [x9]
    bf1c:	ldr	w10, [x9, #16]
    bf20:	add	w10, w10, #0x1
    bf24:	str	w10, [x9, #16]
    bf28:	b	be1c <BZ2_decompress@@Base+0xb80>
    bf2c:	ldurb	w8, [x29, #-17]
    bf30:	cmp	w8, #0x41
    bf34:	b.eq	bf44 <BZ2_decompress@@Base+0xca8>  // b.none
    bf38:	mov	w8, #0xfffffffc            	// #-4
    bf3c:	stur	w8, [x29, #-24]
    bf40:	b	1083c <BZ2_decompress@@Base+0x55a0>
    bf44:	ldr	x8, [sp, #32]
    bf48:	ldr	x9, [x8, #136]
    bf4c:	mov	w10, #0x10                  	// #16
    bf50:	str	w10, [x9, #8]
    bf54:	ldr	x8, [sp, #32]
    bf58:	ldr	x9, [x8, #136]
    bf5c:	ldr	w10, [x9, #36]
    bf60:	cmp	w10, #0x8
    bf64:	b.lt	bfa8 <BZ2_decompress@@Base+0xd0c>  // b.tstop
    bf68:	ldr	x8, [sp, #32]
    bf6c:	ldr	x9, [x8, #136]
    bf70:	ldr	w10, [x9, #32]
    bf74:	ldr	x9, [x8, #136]
    bf78:	ldr	w11, [x9, #36]
    bf7c:	subs	w11, w11, #0x8
    bf80:	lsr	w10, w10, w11
    bf84:	and	w10, w10, #0xff
    bf88:	stur	w10, [x29, #-180]
    bf8c:	ldr	x9, [x8, #136]
    bf90:	ldr	w10, [x9, #36]
    bf94:	subs	w10, w10, #0x8
    bf98:	str	w10, [x9, #36]
    bf9c:	ldur	w10, [x29, #-180]
    bfa0:	sturb	w10, [x29, #-17]
    bfa4:	b	c064 <BZ2_decompress@@Base+0xdc8>
    bfa8:	ldr	x8, [sp, #32]
    bfac:	ldr	x9, [x8, #136]
    bfb0:	ldr	x9, [x9]
    bfb4:	ldr	w10, [x9, #8]
    bfb8:	cbnz	w10, bfc4 <BZ2_decompress@@Base+0xd28>
    bfbc:	stur	wzr, [x29, #-24]
    bfc0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    bfc4:	ldr	x8, [sp, #32]
    bfc8:	ldr	x9, [x8, #136]
    bfcc:	ldr	w10, [x9, #32]
    bfd0:	ldr	x9, [x8, #136]
    bfd4:	ldr	x9, [x9]
    bfd8:	ldr	x9, [x9]
    bfdc:	ldrb	w11, [x9]
    bfe0:	orr	w10, w11, w10, lsl #8
    bfe4:	ldr	x9, [x8, #136]
    bfe8:	str	w10, [x9, #32]
    bfec:	ldr	x9, [x8, #136]
    bff0:	ldr	w10, [x9, #36]
    bff4:	add	w10, w10, #0x8
    bff8:	str	w10, [x9, #36]
    bffc:	ldr	x9, [x8, #136]
    c000:	ldr	x9, [x9]
    c004:	ldr	x12, [x9]
    c008:	add	x12, x12, #0x1
    c00c:	str	x12, [x9]
    c010:	ldr	x9, [x8, #136]
    c014:	ldr	x9, [x9]
    c018:	ldr	w10, [x9, #8]
    c01c:	subs	w10, w10, #0x1
    c020:	str	w10, [x9, #8]
    c024:	ldr	x9, [x8, #136]
    c028:	ldr	x9, [x9]
    c02c:	ldr	w10, [x9, #12]
    c030:	add	w10, w10, #0x1
    c034:	str	w10, [x9, #12]
    c038:	ldr	x9, [x8, #136]
    c03c:	ldr	x9, [x9]
    c040:	ldr	w10, [x9, #12]
    c044:	cbnz	w10, c060 <BZ2_decompress@@Base+0xdc4>
    c048:	ldr	x8, [sp, #32]
    c04c:	ldr	x9, [x8, #136]
    c050:	ldr	x9, [x9]
    c054:	ldr	w10, [x9, #16]
    c058:	add	w10, w10, #0x1
    c05c:	str	w10, [x9, #16]
    c060:	b	bf54 <BZ2_decompress@@Base+0xcb8>
    c064:	ldurb	w8, [x29, #-17]
    c068:	cmp	w8, #0x59
    c06c:	b.eq	c07c <BZ2_decompress@@Base+0xde0>  // b.none
    c070:	mov	w8, #0xfffffffc            	// #-4
    c074:	stur	w8, [x29, #-24]
    c078:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c07c:	ldr	x8, [sp, #32]
    c080:	ldr	x9, [x8, #136]
    c084:	mov	w10, #0x11                  	// #17
    c088:	str	w10, [x9, #8]
    c08c:	ldr	x8, [sp, #32]
    c090:	ldr	x9, [x8, #136]
    c094:	ldr	w10, [x9, #36]
    c098:	cmp	w10, #0x8
    c09c:	b.lt	c0e0 <BZ2_decompress@@Base+0xe44>  // b.tstop
    c0a0:	ldr	x8, [sp, #32]
    c0a4:	ldr	x9, [x8, #136]
    c0a8:	ldr	w10, [x9, #32]
    c0ac:	ldr	x9, [x8, #136]
    c0b0:	ldr	w11, [x9, #36]
    c0b4:	subs	w11, w11, #0x8
    c0b8:	lsr	w10, w10, w11
    c0bc:	and	w10, w10, #0xff
    c0c0:	stur	w10, [x29, #-184]
    c0c4:	ldr	x9, [x8, #136]
    c0c8:	ldr	w10, [x9, #36]
    c0cc:	subs	w10, w10, #0x8
    c0d0:	str	w10, [x9, #36]
    c0d4:	ldur	w10, [x29, #-184]
    c0d8:	sturb	w10, [x29, #-17]
    c0dc:	b	c19c <BZ2_decompress@@Base+0xf00>
    c0e0:	ldr	x8, [sp, #32]
    c0e4:	ldr	x9, [x8, #136]
    c0e8:	ldr	x9, [x9]
    c0ec:	ldr	w10, [x9, #8]
    c0f0:	cbnz	w10, c0fc <BZ2_decompress@@Base+0xe60>
    c0f4:	stur	wzr, [x29, #-24]
    c0f8:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c0fc:	ldr	x8, [sp, #32]
    c100:	ldr	x9, [x8, #136]
    c104:	ldr	w10, [x9, #32]
    c108:	ldr	x9, [x8, #136]
    c10c:	ldr	x9, [x9]
    c110:	ldr	x9, [x9]
    c114:	ldrb	w11, [x9]
    c118:	orr	w10, w11, w10, lsl #8
    c11c:	ldr	x9, [x8, #136]
    c120:	str	w10, [x9, #32]
    c124:	ldr	x9, [x8, #136]
    c128:	ldr	w10, [x9, #36]
    c12c:	add	w10, w10, #0x8
    c130:	str	w10, [x9, #36]
    c134:	ldr	x9, [x8, #136]
    c138:	ldr	x9, [x9]
    c13c:	ldr	x12, [x9]
    c140:	add	x12, x12, #0x1
    c144:	str	x12, [x9]
    c148:	ldr	x9, [x8, #136]
    c14c:	ldr	x9, [x9]
    c150:	ldr	w10, [x9, #8]
    c154:	subs	w10, w10, #0x1
    c158:	str	w10, [x9, #8]
    c15c:	ldr	x9, [x8, #136]
    c160:	ldr	x9, [x9]
    c164:	ldr	w10, [x9, #12]
    c168:	add	w10, w10, #0x1
    c16c:	str	w10, [x9, #12]
    c170:	ldr	x9, [x8, #136]
    c174:	ldr	x9, [x9]
    c178:	ldr	w10, [x9, #12]
    c17c:	cbnz	w10, c198 <BZ2_decompress@@Base+0xefc>
    c180:	ldr	x8, [sp, #32]
    c184:	ldr	x9, [x8, #136]
    c188:	ldr	x9, [x9]
    c18c:	ldr	w10, [x9, #16]
    c190:	add	w10, w10, #0x1
    c194:	str	w10, [x9, #16]
    c198:	b	c08c <BZ2_decompress@@Base+0xdf0>
    c19c:	ldurb	w8, [x29, #-17]
    c1a0:	cmp	w8, #0x26
    c1a4:	b.eq	c1b4 <BZ2_decompress@@Base+0xf18>  // b.none
    c1a8:	mov	w8, #0xfffffffc            	// #-4
    c1ac:	stur	w8, [x29, #-24]
    c1b0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c1b4:	ldr	x8, [sp, #32]
    c1b8:	ldr	x9, [x8, #136]
    c1bc:	mov	w10, #0x12                  	// #18
    c1c0:	str	w10, [x9, #8]
    c1c4:	ldr	x8, [sp, #32]
    c1c8:	ldr	x9, [x8, #136]
    c1cc:	ldr	w10, [x9, #36]
    c1d0:	cmp	w10, #0x8
    c1d4:	b.lt	c218 <BZ2_decompress@@Base+0xf7c>  // b.tstop
    c1d8:	ldr	x8, [sp, #32]
    c1dc:	ldr	x9, [x8, #136]
    c1e0:	ldr	w10, [x9, #32]
    c1e4:	ldr	x9, [x8, #136]
    c1e8:	ldr	w11, [x9, #36]
    c1ec:	subs	w11, w11, #0x8
    c1f0:	lsr	w10, w10, w11
    c1f4:	and	w10, w10, #0xff
    c1f8:	stur	w10, [x29, #-188]
    c1fc:	ldr	x9, [x8, #136]
    c200:	ldr	w10, [x9, #36]
    c204:	subs	w10, w10, #0x8
    c208:	str	w10, [x9, #36]
    c20c:	ldur	w10, [x29, #-188]
    c210:	sturb	w10, [x29, #-17]
    c214:	b	c2d4 <BZ2_decompress@@Base+0x1038>
    c218:	ldr	x8, [sp, #32]
    c21c:	ldr	x9, [x8, #136]
    c220:	ldr	x9, [x9]
    c224:	ldr	w10, [x9, #8]
    c228:	cbnz	w10, c234 <BZ2_decompress@@Base+0xf98>
    c22c:	stur	wzr, [x29, #-24]
    c230:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c234:	ldr	x8, [sp, #32]
    c238:	ldr	x9, [x8, #136]
    c23c:	ldr	w10, [x9, #32]
    c240:	ldr	x9, [x8, #136]
    c244:	ldr	x9, [x9]
    c248:	ldr	x9, [x9]
    c24c:	ldrb	w11, [x9]
    c250:	orr	w10, w11, w10, lsl #8
    c254:	ldr	x9, [x8, #136]
    c258:	str	w10, [x9, #32]
    c25c:	ldr	x9, [x8, #136]
    c260:	ldr	w10, [x9, #36]
    c264:	add	w10, w10, #0x8
    c268:	str	w10, [x9, #36]
    c26c:	ldr	x9, [x8, #136]
    c270:	ldr	x9, [x9]
    c274:	ldr	x12, [x9]
    c278:	add	x12, x12, #0x1
    c27c:	str	x12, [x9]
    c280:	ldr	x9, [x8, #136]
    c284:	ldr	x9, [x9]
    c288:	ldr	w10, [x9, #8]
    c28c:	subs	w10, w10, #0x1
    c290:	str	w10, [x9, #8]
    c294:	ldr	x9, [x8, #136]
    c298:	ldr	x9, [x9]
    c29c:	ldr	w10, [x9, #12]
    c2a0:	add	w10, w10, #0x1
    c2a4:	str	w10, [x9, #12]
    c2a8:	ldr	x9, [x8, #136]
    c2ac:	ldr	x9, [x9]
    c2b0:	ldr	w10, [x9, #12]
    c2b4:	cbnz	w10, c2d0 <BZ2_decompress@@Base+0x1034>
    c2b8:	ldr	x8, [sp, #32]
    c2bc:	ldr	x9, [x8, #136]
    c2c0:	ldr	x9, [x9]
    c2c4:	ldr	w10, [x9, #16]
    c2c8:	add	w10, w10, #0x1
    c2cc:	str	w10, [x9, #16]
    c2d0:	b	c1c4 <BZ2_decompress@@Base+0xf28>
    c2d4:	ldurb	w8, [x29, #-17]
    c2d8:	cmp	w8, #0x53
    c2dc:	b.eq	c2ec <BZ2_decompress@@Base+0x1050>  // b.none
    c2e0:	mov	w8, #0xfffffffc            	// #-4
    c2e4:	stur	w8, [x29, #-24]
    c2e8:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c2ec:	ldr	x8, [sp, #32]
    c2f0:	ldr	x9, [x8, #136]
    c2f4:	mov	w10, #0x13                  	// #19
    c2f8:	str	w10, [x9, #8]
    c2fc:	ldr	x8, [sp, #32]
    c300:	ldr	x9, [x8, #136]
    c304:	ldr	w10, [x9, #36]
    c308:	cmp	w10, #0x8
    c30c:	b.lt	c350 <BZ2_decompress@@Base+0x10b4>  // b.tstop
    c310:	ldr	x8, [sp, #32]
    c314:	ldr	x9, [x8, #136]
    c318:	ldr	w10, [x9, #32]
    c31c:	ldr	x9, [x8, #136]
    c320:	ldr	w11, [x9, #36]
    c324:	subs	w11, w11, #0x8
    c328:	lsr	w10, w10, w11
    c32c:	and	w10, w10, #0xff
    c330:	stur	w10, [x29, #-192]
    c334:	ldr	x9, [x8, #136]
    c338:	ldr	w10, [x9, #36]
    c33c:	subs	w10, w10, #0x8
    c340:	str	w10, [x9, #36]
    c344:	ldur	w10, [x29, #-192]
    c348:	sturb	w10, [x29, #-17]
    c34c:	b	c40c <BZ2_decompress@@Base+0x1170>
    c350:	ldr	x8, [sp, #32]
    c354:	ldr	x9, [x8, #136]
    c358:	ldr	x9, [x9]
    c35c:	ldr	w10, [x9, #8]
    c360:	cbnz	w10, c36c <BZ2_decompress@@Base+0x10d0>
    c364:	stur	wzr, [x29, #-24]
    c368:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c36c:	ldr	x8, [sp, #32]
    c370:	ldr	x9, [x8, #136]
    c374:	ldr	w10, [x9, #32]
    c378:	ldr	x9, [x8, #136]
    c37c:	ldr	x9, [x9]
    c380:	ldr	x9, [x9]
    c384:	ldrb	w11, [x9]
    c388:	orr	w10, w11, w10, lsl #8
    c38c:	ldr	x9, [x8, #136]
    c390:	str	w10, [x9, #32]
    c394:	ldr	x9, [x8, #136]
    c398:	ldr	w10, [x9, #36]
    c39c:	add	w10, w10, #0x8
    c3a0:	str	w10, [x9, #36]
    c3a4:	ldr	x9, [x8, #136]
    c3a8:	ldr	x9, [x9]
    c3ac:	ldr	x12, [x9]
    c3b0:	add	x12, x12, #0x1
    c3b4:	str	x12, [x9]
    c3b8:	ldr	x9, [x8, #136]
    c3bc:	ldr	x9, [x9]
    c3c0:	ldr	w10, [x9, #8]
    c3c4:	subs	w10, w10, #0x1
    c3c8:	str	w10, [x9, #8]
    c3cc:	ldr	x9, [x8, #136]
    c3d0:	ldr	x9, [x9]
    c3d4:	ldr	w10, [x9, #12]
    c3d8:	add	w10, w10, #0x1
    c3dc:	str	w10, [x9, #12]
    c3e0:	ldr	x9, [x8, #136]
    c3e4:	ldr	x9, [x9]
    c3e8:	ldr	w10, [x9, #12]
    c3ec:	cbnz	w10, c408 <BZ2_decompress@@Base+0x116c>
    c3f0:	ldr	x8, [sp, #32]
    c3f4:	ldr	x9, [x8, #136]
    c3f8:	ldr	x9, [x9]
    c3fc:	ldr	w10, [x9, #16]
    c400:	add	w10, w10, #0x1
    c404:	str	w10, [x9, #16]
    c408:	b	c2fc <BZ2_decompress@@Base+0x1060>
    c40c:	ldurb	w8, [x29, #-17]
    c410:	cmp	w8, #0x59
    c414:	b.eq	c424 <BZ2_decompress@@Base+0x1188>  // b.none
    c418:	mov	w8, #0xfffffffc            	// #-4
    c41c:	stur	w8, [x29, #-24]
    c420:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c424:	ldr	x8, [sp, #32]
    c428:	ldr	x9, [x8, #136]
    c42c:	ldr	w10, [x9, #48]
    c430:	add	w10, w10, #0x1
    c434:	str	w10, [x9, #48]
    c438:	ldr	x9, [x8, #136]
    c43c:	ldr	w10, [x9, #52]
    c440:	cmp	w10, #0x2
    c444:	b.lt	c46c <BZ2_decompress@@Base+0x11d0>  // b.tstop
    c448:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
    c44c:	ldr	x8, [x8, #4016]
    c450:	ldr	x0, [x8]
    c454:	ldr	x8, [sp, #32]
    c458:	ldr	x9, [x8, #136]
    c45c:	ldr	w2, [x9, #48]
    c460:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    c464:	add	x1, x1, #0xc50
    c468:	bl	16e0 <fprintf@plt>
    c46c:	ldr	x8, [sp, #32]
    c470:	ldr	x9, [x8, #136]
    c474:	str	wzr, [x9, #3176]
    c478:	ldr	x8, [sp, #32]
    c47c:	ldr	x9, [x8, #136]
    c480:	mov	w10, #0x14                  	// #20
    c484:	str	w10, [x9, #8]
    c488:	ldr	x8, [sp, #32]
    c48c:	ldr	x9, [x8, #136]
    c490:	ldr	w10, [x9, #36]
    c494:	cmp	w10, #0x8
    c498:	b.lt	c4dc <BZ2_decompress@@Base+0x1240>  // b.tstop
    c49c:	ldr	x8, [sp, #32]
    c4a0:	ldr	x9, [x8, #136]
    c4a4:	ldr	w10, [x9, #32]
    c4a8:	ldr	x9, [x8, #136]
    c4ac:	ldr	w11, [x9, #36]
    c4b0:	subs	w11, w11, #0x8
    c4b4:	lsr	w10, w10, w11
    c4b8:	and	w10, w10, #0xff
    c4bc:	stur	w10, [x29, #-196]
    c4c0:	ldr	x9, [x8, #136]
    c4c4:	ldr	w10, [x9, #36]
    c4c8:	subs	w10, w10, #0x8
    c4cc:	str	w10, [x9, #36]
    c4d0:	ldur	w10, [x29, #-196]
    c4d4:	sturb	w10, [x29, #-17]
    c4d8:	b	c598 <BZ2_decompress@@Base+0x12fc>
    c4dc:	ldr	x8, [sp, #32]
    c4e0:	ldr	x9, [x8, #136]
    c4e4:	ldr	x9, [x9]
    c4e8:	ldr	w10, [x9, #8]
    c4ec:	cbnz	w10, c4f8 <BZ2_decompress@@Base+0x125c>
    c4f0:	stur	wzr, [x29, #-24]
    c4f4:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c4f8:	ldr	x8, [sp, #32]
    c4fc:	ldr	x9, [x8, #136]
    c500:	ldr	w10, [x9, #32]
    c504:	ldr	x9, [x8, #136]
    c508:	ldr	x9, [x9]
    c50c:	ldr	x9, [x9]
    c510:	ldrb	w11, [x9]
    c514:	orr	w10, w11, w10, lsl #8
    c518:	ldr	x9, [x8, #136]
    c51c:	str	w10, [x9, #32]
    c520:	ldr	x9, [x8, #136]
    c524:	ldr	w10, [x9, #36]
    c528:	add	w10, w10, #0x8
    c52c:	str	w10, [x9, #36]
    c530:	ldr	x9, [x8, #136]
    c534:	ldr	x9, [x9]
    c538:	ldr	x12, [x9]
    c53c:	add	x12, x12, #0x1
    c540:	str	x12, [x9]
    c544:	ldr	x9, [x8, #136]
    c548:	ldr	x9, [x9]
    c54c:	ldr	w10, [x9, #8]
    c550:	subs	w10, w10, #0x1
    c554:	str	w10, [x9, #8]
    c558:	ldr	x9, [x8, #136]
    c55c:	ldr	x9, [x9]
    c560:	ldr	w10, [x9, #12]
    c564:	add	w10, w10, #0x1
    c568:	str	w10, [x9, #12]
    c56c:	ldr	x9, [x8, #136]
    c570:	ldr	x9, [x9]
    c574:	ldr	w10, [x9, #12]
    c578:	cbnz	w10, c594 <BZ2_decompress@@Base+0x12f8>
    c57c:	ldr	x8, [sp, #32]
    c580:	ldr	x9, [x8, #136]
    c584:	ldr	x9, [x9]
    c588:	ldr	w10, [x9, #16]
    c58c:	add	w10, w10, #0x1
    c590:	str	w10, [x9, #16]
    c594:	b	c488 <BZ2_decompress@@Base+0x11ec>
    c598:	ldr	x8, [sp, #32]
    c59c:	ldr	x9, [x8, #136]
    c5a0:	ldr	w10, [x9, #3176]
    c5a4:	ldurb	w11, [x29, #-17]
    c5a8:	orr	w10, w11, w10, lsl #8
    c5ac:	ldr	x9, [x8, #136]
    c5b0:	str	w10, [x9, #3176]
    c5b4:	ldr	x8, [sp, #32]
    c5b8:	ldr	x9, [x8, #136]
    c5bc:	mov	w10, #0x15                  	// #21
    c5c0:	str	w10, [x9, #8]
    c5c4:	ldr	x8, [sp, #32]
    c5c8:	ldr	x9, [x8, #136]
    c5cc:	ldr	w10, [x9, #36]
    c5d0:	cmp	w10, #0x8
    c5d4:	b.lt	c618 <BZ2_decompress@@Base+0x137c>  // b.tstop
    c5d8:	ldr	x8, [sp, #32]
    c5dc:	ldr	x9, [x8, #136]
    c5e0:	ldr	w10, [x9, #32]
    c5e4:	ldr	x9, [x8, #136]
    c5e8:	ldr	w11, [x9, #36]
    c5ec:	subs	w11, w11, #0x8
    c5f0:	lsr	w10, w10, w11
    c5f4:	and	w10, w10, #0xff
    c5f8:	stur	w10, [x29, #-200]
    c5fc:	ldr	x9, [x8, #136]
    c600:	ldr	w10, [x9, #36]
    c604:	subs	w10, w10, #0x8
    c608:	str	w10, [x9, #36]
    c60c:	ldur	w10, [x29, #-200]
    c610:	sturb	w10, [x29, #-17]
    c614:	b	c6d4 <BZ2_decompress@@Base+0x1438>
    c618:	ldr	x8, [sp, #32]
    c61c:	ldr	x9, [x8, #136]
    c620:	ldr	x9, [x9]
    c624:	ldr	w10, [x9, #8]
    c628:	cbnz	w10, c634 <BZ2_decompress@@Base+0x1398>
    c62c:	stur	wzr, [x29, #-24]
    c630:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c634:	ldr	x8, [sp, #32]
    c638:	ldr	x9, [x8, #136]
    c63c:	ldr	w10, [x9, #32]
    c640:	ldr	x9, [x8, #136]
    c644:	ldr	x9, [x9]
    c648:	ldr	x9, [x9]
    c64c:	ldrb	w11, [x9]
    c650:	orr	w10, w11, w10, lsl #8
    c654:	ldr	x9, [x8, #136]
    c658:	str	w10, [x9, #32]
    c65c:	ldr	x9, [x8, #136]
    c660:	ldr	w10, [x9, #36]
    c664:	add	w10, w10, #0x8
    c668:	str	w10, [x9, #36]
    c66c:	ldr	x9, [x8, #136]
    c670:	ldr	x9, [x9]
    c674:	ldr	x12, [x9]
    c678:	add	x12, x12, #0x1
    c67c:	str	x12, [x9]
    c680:	ldr	x9, [x8, #136]
    c684:	ldr	x9, [x9]
    c688:	ldr	w10, [x9, #8]
    c68c:	subs	w10, w10, #0x1
    c690:	str	w10, [x9, #8]
    c694:	ldr	x9, [x8, #136]
    c698:	ldr	x9, [x9]
    c69c:	ldr	w10, [x9, #12]
    c6a0:	add	w10, w10, #0x1
    c6a4:	str	w10, [x9, #12]
    c6a8:	ldr	x9, [x8, #136]
    c6ac:	ldr	x9, [x9]
    c6b0:	ldr	w10, [x9, #12]
    c6b4:	cbnz	w10, c6d0 <BZ2_decompress@@Base+0x1434>
    c6b8:	ldr	x8, [sp, #32]
    c6bc:	ldr	x9, [x8, #136]
    c6c0:	ldr	x9, [x9]
    c6c4:	ldr	w10, [x9, #16]
    c6c8:	add	w10, w10, #0x1
    c6cc:	str	w10, [x9, #16]
    c6d0:	b	c5c4 <BZ2_decompress@@Base+0x1328>
    c6d4:	ldr	x8, [sp, #32]
    c6d8:	ldr	x9, [x8, #136]
    c6dc:	ldr	w10, [x9, #3176]
    c6e0:	ldurb	w11, [x29, #-17]
    c6e4:	orr	w10, w11, w10, lsl #8
    c6e8:	ldr	x9, [x8, #136]
    c6ec:	str	w10, [x9, #3176]
    c6f0:	ldr	x8, [sp, #32]
    c6f4:	ldr	x9, [x8, #136]
    c6f8:	mov	w10, #0x16                  	// #22
    c6fc:	str	w10, [x9, #8]
    c700:	ldr	x8, [sp, #32]
    c704:	ldr	x9, [x8, #136]
    c708:	ldr	w10, [x9, #36]
    c70c:	cmp	w10, #0x8
    c710:	b.lt	c754 <BZ2_decompress@@Base+0x14b8>  // b.tstop
    c714:	ldr	x8, [sp, #32]
    c718:	ldr	x9, [x8, #136]
    c71c:	ldr	w10, [x9, #32]
    c720:	ldr	x9, [x8, #136]
    c724:	ldr	w11, [x9, #36]
    c728:	subs	w11, w11, #0x8
    c72c:	lsr	w10, w10, w11
    c730:	and	w10, w10, #0xff
    c734:	stur	w10, [x29, #-204]
    c738:	ldr	x9, [x8, #136]
    c73c:	ldr	w10, [x9, #36]
    c740:	subs	w10, w10, #0x8
    c744:	str	w10, [x9, #36]
    c748:	ldur	w10, [x29, #-204]
    c74c:	sturb	w10, [x29, #-17]
    c750:	b	c810 <BZ2_decompress@@Base+0x1574>
    c754:	ldr	x8, [sp, #32]
    c758:	ldr	x9, [x8, #136]
    c75c:	ldr	x9, [x9]
    c760:	ldr	w10, [x9, #8]
    c764:	cbnz	w10, c770 <BZ2_decompress@@Base+0x14d4>
    c768:	stur	wzr, [x29, #-24]
    c76c:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c770:	ldr	x8, [sp, #32]
    c774:	ldr	x9, [x8, #136]
    c778:	ldr	w10, [x9, #32]
    c77c:	ldr	x9, [x8, #136]
    c780:	ldr	x9, [x9]
    c784:	ldr	x9, [x9]
    c788:	ldrb	w11, [x9]
    c78c:	orr	w10, w11, w10, lsl #8
    c790:	ldr	x9, [x8, #136]
    c794:	str	w10, [x9, #32]
    c798:	ldr	x9, [x8, #136]
    c79c:	ldr	w10, [x9, #36]
    c7a0:	add	w10, w10, #0x8
    c7a4:	str	w10, [x9, #36]
    c7a8:	ldr	x9, [x8, #136]
    c7ac:	ldr	x9, [x9]
    c7b0:	ldr	x12, [x9]
    c7b4:	add	x12, x12, #0x1
    c7b8:	str	x12, [x9]
    c7bc:	ldr	x9, [x8, #136]
    c7c0:	ldr	x9, [x9]
    c7c4:	ldr	w10, [x9, #8]
    c7c8:	subs	w10, w10, #0x1
    c7cc:	str	w10, [x9, #8]
    c7d0:	ldr	x9, [x8, #136]
    c7d4:	ldr	x9, [x9]
    c7d8:	ldr	w10, [x9, #12]
    c7dc:	add	w10, w10, #0x1
    c7e0:	str	w10, [x9, #12]
    c7e4:	ldr	x9, [x8, #136]
    c7e8:	ldr	x9, [x9]
    c7ec:	ldr	w10, [x9, #12]
    c7f0:	cbnz	w10, c80c <BZ2_decompress@@Base+0x1570>
    c7f4:	ldr	x8, [sp, #32]
    c7f8:	ldr	x9, [x8, #136]
    c7fc:	ldr	x9, [x9]
    c800:	ldr	w10, [x9, #16]
    c804:	add	w10, w10, #0x1
    c808:	str	w10, [x9, #16]
    c80c:	b	c700 <BZ2_decompress@@Base+0x1464>
    c810:	ldr	x8, [sp, #32]
    c814:	ldr	x9, [x8, #136]
    c818:	ldr	w10, [x9, #3176]
    c81c:	ldurb	w11, [x29, #-17]
    c820:	orr	w10, w11, w10, lsl #8
    c824:	ldr	x9, [x8, #136]
    c828:	str	w10, [x9, #3176]
    c82c:	ldr	x8, [sp, #32]
    c830:	ldr	x9, [x8, #136]
    c834:	mov	w10, #0x17                  	// #23
    c838:	str	w10, [x9, #8]
    c83c:	ldr	x8, [sp, #32]
    c840:	ldr	x9, [x8, #136]
    c844:	ldr	w10, [x9, #36]
    c848:	cmp	w10, #0x8
    c84c:	b.lt	c890 <BZ2_decompress@@Base+0x15f4>  // b.tstop
    c850:	ldr	x8, [sp, #32]
    c854:	ldr	x9, [x8, #136]
    c858:	ldr	w10, [x9, #32]
    c85c:	ldr	x9, [x8, #136]
    c860:	ldr	w11, [x9, #36]
    c864:	subs	w11, w11, #0x8
    c868:	lsr	w10, w10, w11
    c86c:	and	w10, w10, #0xff
    c870:	str	w10, [sp, #208]
    c874:	ldr	x9, [x8, #136]
    c878:	ldr	w10, [x9, #36]
    c87c:	subs	w10, w10, #0x8
    c880:	str	w10, [x9, #36]
    c884:	ldr	w10, [sp, #208]
    c888:	sturb	w10, [x29, #-17]
    c88c:	b	c94c <BZ2_decompress@@Base+0x16b0>
    c890:	ldr	x8, [sp, #32]
    c894:	ldr	x9, [x8, #136]
    c898:	ldr	x9, [x9]
    c89c:	ldr	w10, [x9, #8]
    c8a0:	cbnz	w10, c8ac <BZ2_decompress@@Base+0x1610>
    c8a4:	stur	wzr, [x29, #-24]
    c8a8:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c8ac:	ldr	x8, [sp, #32]
    c8b0:	ldr	x9, [x8, #136]
    c8b4:	ldr	w10, [x9, #32]
    c8b8:	ldr	x9, [x8, #136]
    c8bc:	ldr	x9, [x9]
    c8c0:	ldr	x9, [x9]
    c8c4:	ldrb	w11, [x9]
    c8c8:	orr	w10, w11, w10, lsl #8
    c8cc:	ldr	x9, [x8, #136]
    c8d0:	str	w10, [x9, #32]
    c8d4:	ldr	x9, [x8, #136]
    c8d8:	ldr	w10, [x9, #36]
    c8dc:	add	w10, w10, #0x8
    c8e0:	str	w10, [x9, #36]
    c8e4:	ldr	x9, [x8, #136]
    c8e8:	ldr	x9, [x9]
    c8ec:	ldr	x12, [x9]
    c8f0:	add	x12, x12, #0x1
    c8f4:	str	x12, [x9]
    c8f8:	ldr	x9, [x8, #136]
    c8fc:	ldr	x9, [x9]
    c900:	ldr	w10, [x9, #8]
    c904:	subs	w10, w10, #0x1
    c908:	str	w10, [x9, #8]
    c90c:	ldr	x9, [x8, #136]
    c910:	ldr	x9, [x9]
    c914:	ldr	w10, [x9, #12]
    c918:	add	w10, w10, #0x1
    c91c:	str	w10, [x9, #12]
    c920:	ldr	x9, [x8, #136]
    c924:	ldr	x9, [x9]
    c928:	ldr	w10, [x9, #12]
    c92c:	cbnz	w10, c948 <BZ2_decompress@@Base+0x16ac>
    c930:	ldr	x8, [sp, #32]
    c934:	ldr	x9, [x8, #136]
    c938:	ldr	x9, [x9]
    c93c:	ldr	w10, [x9, #16]
    c940:	add	w10, w10, #0x1
    c944:	str	w10, [x9, #16]
    c948:	b	c83c <BZ2_decompress@@Base+0x15a0>
    c94c:	ldr	x8, [sp, #32]
    c950:	ldr	x9, [x8, #136]
    c954:	ldr	w10, [x9, #3176]
    c958:	ldurb	w11, [x29, #-17]
    c95c:	orr	w10, w11, w10, lsl #8
    c960:	ldr	x9, [x8, #136]
    c964:	str	w10, [x9, #3176]
    c968:	ldr	x8, [sp, #32]
    c96c:	ldr	x9, [x8, #136]
    c970:	mov	w10, #0x18                  	// #24
    c974:	str	w10, [x9, #8]
    c978:	ldr	x8, [sp, #32]
    c97c:	ldr	x9, [x8, #136]
    c980:	ldr	w10, [x9, #36]
    c984:	cmp	w10, #0x1
    c988:	b.lt	c9d0 <BZ2_decompress@@Base+0x1734>  // b.tstop
    c98c:	ldr	x8, [sp, #32]
    c990:	ldr	x9, [x8, #136]
    c994:	ldr	w10, [x9, #32]
    c998:	ldr	x9, [x8, #136]
    c99c:	ldr	w11, [x9, #36]
    c9a0:	subs	w11, w11, #0x1
    c9a4:	lsr	w10, w10, w11
    c9a8:	and	w10, w10, #0x1
    c9ac:	str	w10, [sp, #204]
    c9b0:	ldr	x9, [x8, #136]
    c9b4:	ldr	w10, [x9, #36]
    c9b8:	subs	w10, w10, #0x1
    c9bc:	str	w10, [x9, #36]
    c9c0:	ldr	w10, [sp, #204]
    c9c4:	ldr	x9, [x8, #136]
    c9c8:	strb	w10, [x9, #20]
    c9cc:	b	ca8c <BZ2_decompress@@Base+0x17f0>
    c9d0:	ldr	x8, [sp, #32]
    c9d4:	ldr	x9, [x8, #136]
    c9d8:	ldr	x9, [x9]
    c9dc:	ldr	w10, [x9, #8]
    c9e0:	cbnz	w10, c9ec <BZ2_decompress@@Base+0x1750>
    c9e4:	stur	wzr, [x29, #-24]
    c9e8:	b	1083c <BZ2_decompress@@Base+0x55a0>
    c9ec:	ldr	x8, [sp, #32]
    c9f0:	ldr	x9, [x8, #136]
    c9f4:	ldr	w10, [x9, #32]
    c9f8:	ldr	x9, [x8, #136]
    c9fc:	ldr	x9, [x9]
    ca00:	ldr	x9, [x9]
    ca04:	ldrb	w11, [x9]
    ca08:	orr	w10, w11, w10, lsl #8
    ca0c:	ldr	x9, [x8, #136]
    ca10:	str	w10, [x9, #32]
    ca14:	ldr	x9, [x8, #136]
    ca18:	ldr	w10, [x9, #36]
    ca1c:	add	w10, w10, #0x8
    ca20:	str	w10, [x9, #36]
    ca24:	ldr	x9, [x8, #136]
    ca28:	ldr	x9, [x9]
    ca2c:	ldr	x12, [x9]
    ca30:	add	x12, x12, #0x1
    ca34:	str	x12, [x9]
    ca38:	ldr	x9, [x8, #136]
    ca3c:	ldr	x9, [x9]
    ca40:	ldr	w10, [x9, #8]
    ca44:	subs	w10, w10, #0x1
    ca48:	str	w10, [x9, #8]
    ca4c:	ldr	x9, [x8, #136]
    ca50:	ldr	x9, [x9]
    ca54:	ldr	w10, [x9, #12]
    ca58:	add	w10, w10, #0x1
    ca5c:	str	w10, [x9, #12]
    ca60:	ldr	x9, [x8, #136]
    ca64:	ldr	x9, [x9]
    ca68:	ldr	w10, [x9, #12]
    ca6c:	cbnz	w10, ca88 <BZ2_decompress@@Base+0x17ec>
    ca70:	ldr	x8, [sp, #32]
    ca74:	ldr	x9, [x8, #136]
    ca78:	ldr	x9, [x9]
    ca7c:	ldr	w10, [x9, #16]
    ca80:	add	w10, w10, #0x1
    ca84:	str	w10, [x9, #16]
    ca88:	b	c978 <BZ2_decompress@@Base+0x16dc>
    ca8c:	ldr	x8, [sp, #32]
    ca90:	ldr	x9, [x8, #136]
    ca94:	str	wzr, [x9, #56]
    ca98:	ldr	x8, [sp, #32]
    ca9c:	ldr	x9, [x8, #136]
    caa0:	mov	w10, #0x19                  	// #25
    caa4:	str	w10, [x9, #8]
    caa8:	ldr	x8, [sp, #32]
    caac:	ldr	x9, [x8, #136]
    cab0:	ldr	w10, [x9, #36]
    cab4:	cmp	w10, #0x8
    cab8:	b.lt	cafc <BZ2_decompress@@Base+0x1860>  // b.tstop
    cabc:	ldr	x8, [sp, #32]
    cac0:	ldr	x9, [x8, #136]
    cac4:	ldr	w10, [x9, #32]
    cac8:	ldr	x9, [x8, #136]
    cacc:	ldr	w11, [x9, #36]
    cad0:	subs	w11, w11, #0x8
    cad4:	lsr	w10, w10, w11
    cad8:	and	w10, w10, #0xff
    cadc:	str	w10, [sp, #200]
    cae0:	ldr	x9, [x8, #136]
    cae4:	ldr	w10, [x9, #36]
    cae8:	subs	w10, w10, #0x8
    caec:	str	w10, [x9, #36]
    caf0:	ldr	w10, [sp, #200]
    caf4:	sturb	w10, [x29, #-17]
    caf8:	b	cbb8 <BZ2_decompress@@Base+0x191c>
    cafc:	ldr	x8, [sp, #32]
    cb00:	ldr	x9, [x8, #136]
    cb04:	ldr	x9, [x9]
    cb08:	ldr	w10, [x9, #8]
    cb0c:	cbnz	w10, cb18 <BZ2_decompress@@Base+0x187c>
    cb10:	stur	wzr, [x29, #-24]
    cb14:	b	1083c <BZ2_decompress@@Base+0x55a0>
    cb18:	ldr	x8, [sp, #32]
    cb1c:	ldr	x9, [x8, #136]
    cb20:	ldr	w10, [x9, #32]
    cb24:	ldr	x9, [x8, #136]
    cb28:	ldr	x9, [x9]
    cb2c:	ldr	x9, [x9]
    cb30:	ldrb	w11, [x9]
    cb34:	orr	w10, w11, w10, lsl #8
    cb38:	ldr	x9, [x8, #136]
    cb3c:	str	w10, [x9, #32]
    cb40:	ldr	x9, [x8, #136]
    cb44:	ldr	w10, [x9, #36]
    cb48:	add	w10, w10, #0x8
    cb4c:	str	w10, [x9, #36]
    cb50:	ldr	x9, [x8, #136]
    cb54:	ldr	x9, [x9]
    cb58:	ldr	x12, [x9]
    cb5c:	add	x12, x12, #0x1
    cb60:	str	x12, [x9]
    cb64:	ldr	x9, [x8, #136]
    cb68:	ldr	x9, [x9]
    cb6c:	ldr	w10, [x9, #8]
    cb70:	subs	w10, w10, #0x1
    cb74:	str	w10, [x9, #8]
    cb78:	ldr	x9, [x8, #136]
    cb7c:	ldr	x9, [x9]
    cb80:	ldr	w10, [x9, #12]
    cb84:	add	w10, w10, #0x1
    cb88:	str	w10, [x9, #12]
    cb8c:	ldr	x9, [x8, #136]
    cb90:	ldr	x9, [x9]
    cb94:	ldr	w10, [x9, #12]
    cb98:	cbnz	w10, cbb4 <BZ2_decompress@@Base+0x1918>
    cb9c:	ldr	x8, [sp, #32]
    cba0:	ldr	x9, [x8, #136]
    cba4:	ldr	x9, [x9]
    cba8:	ldr	w10, [x9, #16]
    cbac:	add	w10, w10, #0x1
    cbb0:	str	w10, [x9, #16]
    cbb4:	b	caa8 <BZ2_decompress@@Base+0x180c>
    cbb8:	ldr	x8, [sp, #32]
    cbbc:	ldr	x9, [x8, #136]
    cbc0:	ldr	w10, [x9, #56]
    cbc4:	ldurb	w11, [x29, #-17]
    cbc8:	orr	w10, w11, w10, lsl #8
    cbcc:	ldr	x9, [x8, #136]
    cbd0:	str	w10, [x9, #56]
    cbd4:	ldr	x8, [sp, #32]
    cbd8:	ldr	x9, [x8, #136]
    cbdc:	mov	w10, #0x1a                  	// #26
    cbe0:	str	w10, [x9, #8]
    cbe4:	ldr	x8, [sp, #32]
    cbe8:	ldr	x9, [x8, #136]
    cbec:	ldr	w10, [x9, #36]
    cbf0:	cmp	w10, #0x8
    cbf4:	b.lt	cc38 <BZ2_decompress@@Base+0x199c>  // b.tstop
    cbf8:	ldr	x8, [sp, #32]
    cbfc:	ldr	x9, [x8, #136]
    cc00:	ldr	w10, [x9, #32]
    cc04:	ldr	x9, [x8, #136]
    cc08:	ldr	w11, [x9, #36]
    cc0c:	subs	w11, w11, #0x8
    cc10:	lsr	w10, w10, w11
    cc14:	and	w10, w10, #0xff
    cc18:	str	w10, [sp, #196]
    cc1c:	ldr	x9, [x8, #136]
    cc20:	ldr	w10, [x9, #36]
    cc24:	subs	w10, w10, #0x8
    cc28:	str	w10, [x9, #36]
    cc2c:	ldr	w10, [sp, #196]
    cc30:	sturb	w10, [x29, #-17]
    cc34:	b	ccf4 <BZ2_decompress@@Base+0x1a58>
    cc38:	ldr	x8, [sp, #32]
    cc3c:	ldr	x9, [x8, #136]
    cc40:	ldr	x9, [x9]
    cc44:	ldr	w10, [x9, #8]
    cc48:	cbnz	w10, cc54 <BZ2_decompress@@Base+0x19b8>
    cc4c:	stur	wzr, [x29, #-24]
    cc50:	b	1083c <BZ2_decompress@@Base+0x55a0>
    cc54:	ldr	x8, [sp, #32]
    cc58:	ldr	x9, [x8, #136]
    cc5c:	ldr	w10, [x9, #32]
    cc60:	ldr	x9, [x8, #136]
    cc64:	ldr	x9, [x9]
    cc68:	ldr	x9, [x9]
    cc6c:	ldrb	w11, [x9]
    cc70:	orr	w10, w11, w10, lsl #8
    cc74:	ldr	x9, [x8, #136]
    cc78:	str	w10, [x9, #32]
    cc7c:	ldr	x9, [x8, #136]
    cc80:	ldr	w10, [x9, #36]
    cc84:	add	w10, w10, #0x8
    cc88:	str	w10, [x9, #36]
    cc8c:	ldr	x9, [x8, #136]
    cc90:	ldr	x9, [x9]
    cc94:	ldr	x12, [x9]
    cc98:	add	x12, x12, #0x1
    cc9c:	str	x12, [x9]
    cca0:	ldr	x9, [x8, #136]
    cca4:	ldr	x9, [x9]
    cca8:	ldr	w10, [x9, #8]
    ccac:	subs	w10, w10, #0x1
    ccb0:	str	w10, [x9, #8]
    ccb4:	ldr	x9, [x8, #136]
    ccb8:	ldr	x9, [x9]
    ccbc:	ldr	w10, [x9, #12]
    ccc0:	add	w10, w10, #0x1
    ccc4:	str	w10, [x9, #12]
    ccc8:	ldr	x9, [x8, #136]
    cccc:	ldr	x9, [x9]
    ccd0:	ldr	w10, [x9, #12]
    ccd4:	cbnz	w10, ccf0 <BZ2_decompress@@Base+0x1a54>
    ccd8:	ldr	x8, [sp, #32]
    ccdc:	ldr	x9, [x8, #136]
    cce0:	ldr	x9, [x9]
    cce4:	ldr	w10, [x9, #16]
    cce8:	add	w10, w10, #0x1
    ccec:	str	w10, [x9, #16]
    ccf0:	b	cbe4 <BZ2_decompress@@Base+0x1948>
    ccf4:	ldr	x8, [sp, #32]
    ccf8:	ldr	x9, [x8, #136]
    ccfc:	ldr	w10, [x9, #56]
    cd00:	ldurb	w11, [x29, #-17]
    cd04:	orr	w10, w11, w10, lsl #8
    cd08:	ldr	x9, [x8, #136]
    cd0c:	str	w10, [x9, #56]
    cd10:	ldr	x8, [sp, #32]
    cd14:	ldr	x9, [x8, #136]
    cd18:	mov	w10, #0x1b                  	// #27
    cd1c:	str	w10, [x9, #8]
    cd20:	ldr	x8, [sp, #32]
    cd24:	ldr	x9, [x8, #136]
    cd28:	ldr	w10, [x9, #36]
    cd2c:	cmp	w10, #0x8
    cd30:	b.lt	cd74 <BZ2_decompress@@Base+0x1ad8>  // b.tstop
    cd34:	ldr	x8, [sp, #32]
    cd38:	ldr	x9, [x8, #136]
    cd3c:	ldr	w10, [x9, #32]
    cd40:	ldr	x9, [x8, #136]
    cd44:	ldr	w11, [x9, #36]
    cd48:	subs	w11, w11, #0x8
    cd4c:	lsr	w10, w10, w11
    cd50:	and	w10, w10, #0xff
    cd54:	str	w10, [sp, #192]
    cd58:	ldr	x9, [x8, #136]
    cd5c:	ldr	w10, [x9, #36]
    cd60:	subs	w10, w10, #0x8
    cd64:	str	w10, [x9, #36]
    cd68:	ldr	w10, [sp, #192]
    cd6c:	sturb	w10, [x29, #-17]
    cd70:	b	ce30 <BZ2_decompress@@Base+0x1b94>
    cd74:	ldr	x8, [sp, #32]
    cd78:	ldr	x9, [x8, #136]
    cd7c:	ldr	x9, [x9]
    cd80:	ldr	w10, [x9, #8]
    cd84:	cbnz	w10, cd90 <BZ2_decompress@@Base+0x1af4>
    cd88:	stur	wzr, [x29, #-24]
    cd8c:	b	1083c <BZ2_decompress@@Base+0x55a0>
    cd90:	ldr	x8, [sp, #32]
    cd94:	ldr	x9, [x8, #136]
    cd98:	ldr	w10, [x9, #32]
    cd9c:	ldr	x9, [x8, #136]
    cda0:	ldr	x9, [x9]
    cda4:	ldr	x9, [x9]
    cda8:	ldrb	w11, [x9]
    cdac:	orr	w10, w11, w10, lsl #8
    cdb0:	ldr	x9, [x8, #136]
    cdb4:	str	w10, [x9, #32]
    cdb8:	ldr	x9, [x8, #136]
    cdbc:	ldr	w10, [x9, #36]
    cdc0:	add	w10, w10, #0x8
    cdc4:	str	w10, [x9, #36]
    cdc8:	ldr	x9, [x8, #136]
    cdcc:	ldr	x9, [x9]
    cdd0:	ldr	x12, [x9]
    cdd4:	add	x12, x12, #0x1
    cdd8:	str	x12, [x9]
    cddc:	ldr	x9, [x8, #136]
    cde0:	ldr	x9, [x9]
    cde4:	ldr	w10, [x9, #8]
    cde8:	subs	w10, w10, #0x1
    cdec:	str	w10, [x9, #8]
    cdf0:	ldr	x9, [x8, #136]
    cdf4:	ldr	x9, [x9]
    cdf8:	ldr	w10, [x9, #12]
    cdfc:	add	w10, w10, #0x1
    ce00:	str	w10, [x9, #12]
    ce04:	ldr	x9, [x8, #136]
    ce08:	ldr	x9, [x9]
    ce0c:	ldr	w10, [x9, #12]
    ce10:	cbnz	w10, ce2c <BZ2_decompress@@Base+0x1b90>
    ce14:	ldr	x8, [sp, #32]
    ce18:	ldr	x9, [x8, #136]
    ce1c:	ldr	x9, [x9]
    ce20:	ldr	w10, [x9, #16]
    ce24:	add	w10, w10, #0x1
    ce28:	str	w10, [x9, #16]
    ce2c:	b	cd20 <BZ2_decompress@@Base+0x1a84>
    ce30:	ldr	x8, [sp, #32]
    ce34:	ldr	x9, [x8, #136]
    ce38:	ldr	w10, [x9, #56]
    ce3c:	ldurb	w11, [x29, #-17]
    ce40:	orr	w10, w11, w10, lsl #8
    ce44:	ldr	x9, [x8, #136]
    ce48:	str	w10, [x9, #56]
    ce4c:	ldr	x9, [x8, #136]
    ce50:	ldr	w10, [x9, #56]
    ce54:	cmp	w10, #0x0
    ce58:	cset	w10, ge  // ge = tcont
    ce5c:	tbnz	w10, #0, ce6c <BZ2_decompress@@Base+0x1bd0>
    ce60:	mov	w8, #0xfffffffc            	// #-4
    ce64:	stur	w8, [x29, #-24]
    ce68:	b	1083c <BZ2_decompress@@Base+0x55a0>
    ce6c:	ldr	x8, [sp, #32]
    ce70:	ldr	x9, [x8, #136]
    ce74:	ldr	w10, [x9, #56]
    ce78:	ldr	x9, [x8, #136]
    ce7c:	ldr	w11, [x9, #40]
    ce80:	mov	w12, #0x86a0                	// #34464
    ce84:	movk	w12, #0x1, lsl #16
    ce88:	mul	w11, w12, w11
    ce8c:	add	w11, w11, #0xa
    ce90:	cmp	w10, w11
    ce94:	b.le	cea4 <BZ2_decompress@@Base+0x1c08>
    ce98:	mov	w8, #0xfffffffc            	// #-4
    ce9c:	stur	w8, [x29, #-24]
    cea0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    cea4:	stur	wzr, [x29, #-44]
    cea8:	ldur	w8, [x29, #-44]
    ceac:	cmp	w8, #0x10
    ceb0:	b.ge	d02c <BZ2_decompress@@Base+0x1d90>  // b.tcont
    ceb4:	ldr	x8, [sp, #32]
    ceb8:	ldr	x9, [x8, #136]
    cebc:	mov	w10, #0x1c                  	// #28
    cec0:	str	w10, [x9, #8]
    cec4:	ldr	x8, [sp, #32]
    cec8:	ldr	x9, [x8, #136]
    cecc:	ldr	w10, [x9, #36]
    ced0:	cmp	w10, #0x1
    ced4:	b.lt	cf18 <BZ2_decompress@@Base+0x1c7c>  // b.tstop
    ced8:	ldr	x8, [sp, #32]
    cedc:	ldr	x9, [x8, #136]
    cee0:	ldr	w10, [x9, #32]
    cee4:	ldr	x9, [x8, #136]
    cee8:	ldr	w11, [x9, #36]
    ceec:	subs	w11, w11, #0x1
    cef0:	lsr	w10, w10, w11
    cef4:	and	w10, w10, #0x1
    cef8:	str	w10, [sp, #188]
    cefc:	ldr	x9, [x8, #136]
    cf00:	ldr	w10, [x9, #36]
    cf04:	subs	w10, w10, #0x1
    cf08:	str	w10, [x9, #36]
    cf0c:	ldr	w10, [sp, #188]
    cf10:	sturb	w10, [x29, #-17]
    cf14:	b	cfd4 <BZ2_decompress@@Base+0x1d38>
    cf18:	ldr	x8, [sp, #32]
    cf1c:	ldr	x9, [x8, #136]
    cf20:	ldr	x9, [x9]
    cf24:	ldr	w10, [x9, #8]
    cf28:	cbnz	w10, cf34 <BZ2_decompress@@Base+0x1c98>
    cf2c:	stur	wzr, [x29, #-24]
    cf30:	b	1083c <BZ2_decompress@@Base+0x55a0>
    cf34:	ldr	x8, [sp, #32]
    cf38:	ldr	x9, [x8, #136]
    cf3c:	ldr	w10, [x9, #32]
    cf40:	ldr	x9, [x8, #136]
    cf44:	ldr	x9, [x9]
    cf48:	ldr	x9, [x9]
    cf4c:	ldrb	w11, [x9]
    cf50:	orr	w10, w11, w10, lsl #8
    cf54:	ldr	x9, [x8, #136]
    cf58:	str	w10, [x9, #32]
    cf5c:	ldr	x9, [x8, #136]
    cf60:	ldr	w10, [x9, #36]
    cf64:	add	w10, w10, #0x8
    cf68:	str	w10, [x9, #36]
    cf6c:	ldr	x9, [x8, #136]
    cf70:	ldr	x9, [x9]
    cf74:	ldr	x12, [x9]
    cf78:	add	x12, x12, #0x1
    cf7c:	str	x12, [x9]
    cf80:	ldr	x9, [x8, #136]
    cf84:	ldr	x9, [x9]
    cf88:	ldr	w10, [x9, #8]
    cf8c:	subs	w10, w10, #0x1
    cf90:	str	w10, [x9, #8]
    cf94:	ldr	x9, [x8, #136]
    cf98:	ldr	x9, [x9]
    cf9c:	ldr	w10, [x9, #12]
    cfa0:	add	w10, w10, #0x1
    cfa4:	str	w10, [x9, #12]
    cfa8:	ldr	x9, [x8, #136]
    cfac:	ldr	x9, [x9]
    cfb0:	ldr	w10, [x9, #12]
    cfb4:	cbnz	w10, cfd0 <BZ2_decompress@@Base+0x1d34>
    cfb8:	ldr	x8, [sp, #32]
    cfbc:	ldr	x9, [x8, #136]
    cfc0:	ldr	x9, [x9]
    cfc4:	ldr	w10, [x9, #16]
    cfc8:	add	w10, w10, #0x1
    cfcc:	str	w10, [x9, #16]
    cfd0:	b	cec4 <BZ2_decompress@@Base+0x1c28>
    cfd4:	ldurb	w8, [x29, #-17]
    cfd8:	cmp	w8, #0x1
    cfdc:	b.ne	d000 <BZ2_decompress@@Base+0x1d64>  // b.any
    cfe0:	ldr	x8, [sp, #32]
    cfe4:	ldr	x9, [x8, #136]
    cfe8:	add	x9, x9, #0xd7c
    cfec:	ldursw	x10, [x29, #-44]
    cff0:	add	x9, x9, x10
    cff4:	mov	w11, #0x1                   	// #1
    cff8:	strb	w11, [x9]
    cffc:	b	d01c <BZ2_decompress@@Base+0x1d80>
    d000:	ldr	x8, [sp, #32]
    d004:	ldr	x9, [x8, #136]
    d008:	add	x9, x9, #0xd7c
    d00c:	ldursw	x10, [x29, #-44]
    d010:	add	x9, x9, x10
    d014:	mov	w11, #0x0                   	// #0
    d018:	strb	w11, [x9]
    d01c:	ldur	w8, [x29, #-44]
    d020:	add	w8, w8, #0x1
    d024:	stur	w8, [x29, #-44]
    d028:	b	cea8 <BZ2_decompress@@Base+0x1c0c>
    d02c:	stur	wzr, [x29, #-44]
    d030:	ldur	w8, [x29, #-44]
    d034:	cmp	w8, #0x100
    d038:	b.ge	d068 <BZ2_decompress@@Base+0x1dcc>  // b.tcont
    d03c:	ldr	x8, [sp, #32]
    d040:	ldr	x9, [x8, #136]
    d044:	add	x9, x9, #0xc7c
    d048:	ldursw	x10, [x29, #-44]
    d04c:	add	x9, x9, x10
    d050:	mov	w11, #0x0                   	// #0
    d054:	strb	w11, [x9]
    d058:	ldur	w8, [x29, #-44]
    d05c:	add	w8, w8, #0x1
    d060:	stur	w8, [x29, #-44]
    d064:	b	d030 <BZ2_decompress@@Base+0x1d94>
    d068:	stur	wzr, [x29, #-44]
    d06c:	ldur	w8, [x29, #-44]
    d070:	cmp	w8, #0x10
    d074:	b.ge	d224 <BZ2_decompress@@Base+0x1f88>  // b.tcont
    d078:	ldr	x8, [sp, #32]
    d07c:	ldr	x9, [x8, #136]
    d080:	add	x9, x9, #0xd7c
    d084:	ldursw	x10, [x29, #-44]
    d088:	add	x9, x9, x10
    d08c:	ldrb	w11, [x9]
    d090:	cbz	w11, d214 <BZ2_decompress@@Base+0x1f78>
    d094:	stur	wzr, [x29, #-48]
    d098:	ldur	w8, [x29, #-48]
    d09c:	cmp	w8, #0x10
    d0a0:	b.ge	d214 <BZ2_decompress@@Base+0x1f78>  // b.tcont
    d0a4:	ldr	x8, [sp, #32]
    d0a8:	ldr	x9, [x8, #136]
    d0ac:	mov	w10, #0x1d                  	// #29
    d0b0:	str	w10, [x9, #8]
    d0b4:	ldr	x8, [sp, #32]
    d0b8:	ldr	x9, [x8, #136]
    d0bc:	ldr	w10, [x9, #36]
    d0c0:	cmp	w10, #0x1
    d0c4:	b.lt	d108 <BZ2_decompress@@Base+0x1e6c>  // b.tstop
    d0c8:	ldr	x8, [sp, #32]
    d0cc:	ldr	x9, [x8, #136]
    d0d0:	ldr	w10, [x9, #32]
    d0d4:	ldr	x9, [x8, #136]
    d0d8:	ldr	w11, [x9, #36]
    d0dc:	subs	w11, w11, #0x1
    d0e0:	lsr	w10, w10, w11
    d0e4:	and	w10, w10, #0x1
    d0e8:	str	w10, [sp, #184]
    d0ec:	ldr	x9, [x8, #136]
    d0f0:	ldr	w10, [x9, #36]
    d0f4:	subs	w10, w10, #0x1
    d0f8:	str	w10, [x9, #36]
    d0fc:	ldr	w10, [sp, #184]
    d100:	sturb	w10, [x29, #-17]
    d104:	b	d1c4 <BZ2_decompress@@Base+0x1f28>
    d108:	ldr	x8, [sp, #32]
    d10c:	ldr	x9, [x8, #136]
    d110:	ldr	x9, [x9]
    d114:	ldr	w10, [x9, #8]
    d118:	cbnz	w10, d124 <BZ2_decompress@@Base+0x1e88>
    d11c:	stur	wzr, [x29, #-24]
    d120:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d124:	ldr	x8, [sp, #32]
    d128:	ldr	x9, [x8, #136]
    d12c:	ldr	w10, [x9, #32]
    d130:	ldr	x9, [x8, #136]
    d134:	ldr	x9, [x9]
    d138:	ldr	x9, [x9]
    d13c:	ldrb	w11, [x9]
    d140:	orr	w10, w11, w10, lsl #8
    d144:	ldr	x9, [x8, #136]
    d148:	str	w10, [x9, #32]
    d14c:	ldr	x9, [x8, #136]
    d150:	ldr	w10, [x9, #36]
    d154:	add	w10, w10, #0x8
    d158:	str	w10, [x9, #36]
    d15c:	ldr	x9, [x8, #136]
    d160:	ldr	x9, [x9]
    d164:	ldr	x12, [x9]
    d168:	add	x12, x12, #0x1
    d16c:	str	x12, [x9]
    d170:	ldr	x9, [x8, #136]
    d174:	ldr	x9, [x9]
    d178:	ldr	w10, [x9, #8]
    d17c:	subs	w10, w10, #0x1
    d180:	str	w10, [x9, #8]
    d184:	ldr	x9, [x8, #136]
    d188:	ldr	x9, [x9]
    d18c:	ldr	w10, [x9, #12]
    d190:	add	w10, w10, #0x1
    d194:	str	w10, [x9, #12]
    d198:	ldr	x9, [x8, #136]
    d19c:	ldr	x9, [x9]
    d1a0:	ldr	w10, [x9, #12]
    d1a4:	cbnz	w10, d1c0 <BZ2_decompress@@Base+0x1f24>
    d1a8:	ldr	x8, [sp, #32]
    d1ac:	ldr	x9, [x8, #136]
    d1b0:	ldr	x9, [x9]
    d1b4:	ldr	w10, [x9, #16]
    d1b8:	add	w10, w10, #0x1
    d1bc:	str	w10, [x9, #16]
    d1c0:	b	d0b4 <BZ2_decompress@@Base+0x1e18>
    d1c4:	ldurb	w8, [x29, #-17]
    d1c8:	cmp	w8, #0x1
    d1cc:	b.ne	d204 <BZ2_decompress@@Base+0x1f68>  // b.any
    d1d0:	ldr	x8, [sp, #32]
    d1d4:	ldr	x9, [x8, #136]
    d1d8:	add	x9, x9, #0xc7c
    d1dc:	ldur	w10, [x29, #-44]
    d1e0:	mov	w11, #0x10                  	// #16
    d1e4:	mul	w10, w10, w11
    d1e8:	ldur	w11, [x29, #-48]
    d1ec:	add	w10, w10, w11
    d1f0:	mov	w0, w10
    d1f4:	sxtw	x12, w0
    d1f8:	add	x9, x9, x12
    d1fc:	mov	w10, #0x1                   	// #1
    d200:	strb	w10, [x9]
    d204:	ldur	w8, [x29, #-48]
    d208:	add	w8, w8, #0x1
    d20c:	stur	w8, [x29, #-48]
    d210:	b	d098 <BZ2_decompress@@Base+0x1dfc>
    d214:	ldur	w8, [x29, #-44]
    d218:	add	w8, w8, #0x1
    d21c:	stur	w8, [x29, #-44]
    d220:	b	d06c <BZ2_decompress@@Base+0x1dd0>
    d224:	ldr	x8, [sp, #32]
    d228:	ldr	x0, [x8, #136]
    d22c:	bl	10a3c <BZ2_decompress@@Base+0x57a0>
    d230:	ldr	x8, [sp, #32]
    d234:	ldr	x9, [x8, #136]
    d238:	ldr	w10, [x9, #3192]
    d23c:	cbnz	w10, d24c <BZ2_decompress@@Base+0x1fb0>
    d240:	mov	w8, #0xfffffffc            	// #-4
    d244:	stur	w8, [x29, #-24]
    d248:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d24c:	ldr	x8, [sp, #32]
    d250:	ldr	x9, [x8, #136]
    d254:	ldr	w10, [x9, #3192]
    d258:	add	w10, w10, #0x2
    d25c:	stur	w10, [x29, #-56]
    d260:	ldr	x8, [sp, #32]
    d264:	ldr	x9, [x8, #136]
    d268:	mov	w10, #0x1e                  	// #30
    d26c:	str	w10, [x9, #8]
    d270:	ldr	x8, [sp, #32]
    d274:	ldr	x9, [x8, #136]
    d278:	ldr	w10, [x9, #36]
    d27c:	cmp	w10, #0x3
    d280:	b.lt	d2c4 <BZ2_decompress@@Base+0x2028>  // b.tstop
    d284:	ldr	x8, [sp, #32]
    d288:	ldr	x9, [x8, #136]
    d28c:	ldr	w10, [x9, #32]
    d290:	ldr	x9, [x8, #136]
    d294:	ldr	w11, [x9, #36]
    d298:	subs	w11, w11, #0x3
    d29c:	lsr	w10, w10, w11
    d2a0:	and	w10, w10, #0x7
    d2a4:	str	w10, [sp, #180]
    d2a8:	ldr	x9, [x8, #136]
    d2ac:	ldr	w10, [x9, #36]
    d2b0:	subs	w10, w10, #0x3
    d2b4:	str	w10, [x9, #36]
    d2b8:	ldr	w10, [sp, #180]
    d2bc:	stur	w10, [x29, #-60]
    d2c0:	b	d380 <BZ2_decompress@@Base+0x20e4>
    d2c4:	ldr	x8, [sp, #32]
    d2c8:	ldr	x9, [x8, #136]
    d2cc:	ldr	x9, [x9]
    d2d0:	ldr	w10, [x9, #8]
    d2d4:	cbnz	w10, d2e0 <BZ2_decompress@@Base+0x2044>
    d2d8:	stur	wzr, [x29, #-24]
    d2dc:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d2e0:	ldr	x8, [sp, #32]
    d2e4:	ldr	x9, [x8, #136]
    d2e8:	ldr	w10, [x9, #32]
    d2ec:	ldr	x9, [x8, #136]
    d2f0:	ldr	x9, [x9]
    d2f4:	ldr	x9, [x9]
    d2f8:	ldrb	w11, [x9]
    d2fc:	orr	w10, w11, w10, lsl #8
    d300:	ldr	x9, [x8, #136]
    d304:	str	w10, [x9, #32]
    d308:	ldr	x9, [x8, #136]
    d30c:	ldr	w10, [x9, #36]
    d310:	add	w10, w10, #0x8
    d314:	str	w10, [x9, #36]
    d318:	ldr	x9, [x8, #136]
    d31c:	ldr	x9, [x9]
    d320:	ldr	x12, [x9]
    d324:	add	x12, x12, #0x1
    d328:	str	x12, [x9]
    d32c:	ldr	x9, [x8, #136]
    d330:	ldr	x9, [x9]
    d334:	ldr	w10, [x9, #8]
    d338:	subs	w10, w10, #0x1
    d33c:	str	w10, [x9, #8]
    d340:	ldr	x9, [x8, #136]
    d344:	ldr	x9, [x9]
    d348:	ldr	w10, [x9, #12]
    d34c:	add	w10, w10, #0x1
    d350:	str	w10, [x9, #12]
    d354:	ldr	x9, [x8, #136]
    d358:	ldr	x9, [x9]
    d35c:	ldr	w10, [x9, #12]
    d360:	cbnz	w10, d37c <BZ2_decompress@@Base+0x20e0>
    d364:	ldr	x8, [sp, #32]
    d368:	ldr	x9, [x8, #136]
    d36c:	ldr	x9, [x9]
    d370:	ldr	w10, [x9, #16]
    d374:	add	w10, w10, #0x1
    d378:	str	w10, [x9, #16]
    d37c:	b	d270 <BZ2_decompress@@Base+0x1fd4>
    d380:	ldur	w8, [x29, #-60]
    d384:	cmp	w8, #0x2
    d388:	b.lt	d398 <BZ2_decompress@@Base+0x20fc>  // b.tstop
    d38c:	ldur	w8, [x29, #-60]
    d390:	cmp	w8, #0x6
    d394:	b.le	d3a4 <BZ2_decompress@@Base+0x2108>
    d398:	mov	w8, #0xfffffffc            	// #-4
    d39c:	stur	w8, [x29, #-24]
    d3a0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d3a4:	ldr	x8, [sp, #32]
    d3a8:	ldr	x9, [x8, #136]
    d3ac:	mov	w10, #0x1f                  	// #31
    d3b0:	str	w10, [x9, #8]
    d3b4:	ldr	x8, [sp, #32]
    d3b8:	ldr	x9, [x8, #136]
    d3bc:	ldr	w10, [x9, #36]
    d3c0:	cmp	w10, #0xf
    d3c4:	b.lt	d408 <BZ2_decompress@@Base+0x216c>  // b.tstop
    d3c8:	ldr	x8, [sp, #32]
    d3cc:	ldr	x9, [x8, #136]
    d3d0:	ldr	w10, [x9, #32]
    d3d4:	ldr	x9, [x8, #136]
    d3d8:	ldr	w11, [x9, #36]
    d3dc:	subs	w11, w11, #0xf
    d3e0:	lsr	w10, w10, w11
    d3e4:	and	w10, w10, #0x7fff
    d3e8:	str	w10, [sp, #176]
    d3ec:	ldr	x9, [x8, #136]
    d3f0:	ldr	w10, [x9, #36]
    d3f4:	subs	w10, w10, #0xf
    d3f8:	str	w10, [x9, #36]
    d3fc:	ldr	w10, [sp, #176]
    d400:	stur	w10, [x29, #-64]
    d404:	b	d4c4 <BZ2_decompress@@Base+0x2228>
    d408:	ldr	x8, [sp, #32]
    d40c:	ldr	x9, [x8, #136]
    d410:	ldr	x9, [x9]
    d414:	ldr	w10, [x9, #8]
    d418:	cbnz	w10, d424 <BZ2_decompress@@Base+0x2188>
    d41c:	stur	wzr, [x29, #-24]
    d420:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d424:	ldr	x8, [sp, #32]
    d428:	ldr	x9, [x8, #136]
    d42c:	ldr	w10, [x9, #32]
    d430:	ldr	x9, [x8, #136]
    d434:	ldr	x9, [x9]
    d438:	ldr	x9, [x9]
    d43c:	ldrb	w11, [x9]
    d440:	orr	w10, w11, w10, lsl #8
    d444:	ldr	x9, [x8, #136]
    d448:	str	w10, [x9, #32]
    d44c:	ldr	x9, [x8, #136]
    d450:	ldr	w10, [x9, #36]
    d454:	add	w10, w10, #0x8
    d458:	str	w10, [x9, #36]
    d45c:	ldr	x9, [x8, #136]
    d460:	ldr	x9, [x9]
    d464:	ldr	x12, [x9]
    d468:	add	x12, x12, #0x1
    d46c:	str	x12, [x9]
    d470:	ldr	x9, [x8, #136]
    d474:	ldr	x9, [x9]
    d478:	ldr	w10, [x9, #8]
    d47c:	subs	w10, w10, #0x1
    d480:	str	w10, [x9, #8]
    d484:	ldr	x9, [x8, #136]
    d488:	ldr	x9, [x9]
    d48c:	ldr	w10, [x9, #12]
    d490:	add	w10, w10, #0x1
    d494:	str	w10, [x9, #12]
    d498:	ldr	x9, [x8, #136]
    d49c:	ldr	x9, [x9]
    d4a0:	ldr	w10, [x9, #12]
    d4a4:	cbnz	w10, d4c0 <BZ2_decompress@@Base+0x2224>
    d4a8:	ldr	x8, [sp, #32]
    d4ac:	ldr	x9, [x8, #136]
    d4b0:	ldr	x9, [x9]
    d4b4:	ldr	w10, [x9, #16]
    d4b8:	add	w10, w10, #0x1
    d4bc:	str	w10, [x9, #16]
    d4c0:	b	d3b4 <BZ2_decompress@@Base+0x2118>
    d4c4:	ldur	w8, [x29, #-64]
    d4c8:	cmp	w8, #0x1
    d4cc:	b.ge	d4dc <BZ2_decompress@@Base+0x2240>  // b.tcont
    d4d0:	mov	w8, #0xfffffffc            	// #-4
    d4d4:	stur	w8, [x29, #-24]
    d4d8:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d4dc:	stur	wzr, [x29, #-44]
    d4e0:	ldur	w8, [x29, #-44]
    d4e4:	ldur	w9, [x29, #-64]
    d4e8:	cmp	w8, w9
    d4ec:	b.ge	d68c <BZ2_decompress@@Base+0x23f0>  // b.tcont
    d4f0:	stur	wzr, [x29, #-48]
    d4f4:	ldr	x8, [sp, #32]
    d4f8:	ldr	x9, [x8, #136]
    d4fc:	mov	w10, #0x20                  	// #32
    d500:	str	w10, [x9, #8]
    d504:	ldr	x8, [sp, #32]
    d508:	ldr	x9, [x8, #136]
    d50c:	ldr	w10, [x9, #36]
    d510:	cmp	w10, #0x1
    d514:	b.lt	d558 <BZ2_decompress@@Base+0x22bc>  // b.tstop
    d518:	ldr	x8, [sp, #32]
    d51c:	ldr	x9, [x8, #136]
    d520:	ldr	w10, [x9, #32]
    d524:	ldr	x9, [x8, #136]
    d528:	ldr	w11, [x9, #36]
    d52c:	subs	w11, w11, #0x1
    d530:	lsr	w10, w10, w11
    d534:	and	w10, w10, #0x1
    d538:	str	w10, [sp, #172]
    d53c:	ldr	x9, [x8, #136]
    d540:	ldr	w10, [x9, #36]
    d544:	subs	w10, w10, #0x1
    d548:	str	w10, [x9, #36]
    d54c:	ldr	w10, [sp, #172]
    d550:	sturb	w10, [x29, #-17]
    d554:	b	d614 <BZ2_decompress@@Base+0x2378>
    d558:	ldr	x8, [sp, #32]
    d55c:	ldr	x9, [x8, #136]
    d560:	ldr	x9, [x9]
    d564:	ldr	w10, [x9, #8]
    d568:	cbnz	w10, d574 <BZ2_decompress@@Base+0x22d8>
    d56c:	stur	wzr, [x29, #-24]
    d570:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d574:	ldr	x8, [sp, #32]
    d578:	ldr	x9, [x8, #136]
    d57c:	ldr	w10, [x9, #32]
    d580:	ldr	x9, [x8, #136]
    d584:	ldr	x9, [x9]
    d588:	ldr	x9, [x9]
    d58c:	ldrb	w11, [x9]
    d590:	orr	w10, w11, w10, lsl #8
    d594:	ldr	x9, [x8, #136]
    d598:	str	w10, [x9, #32]
    d59c:	ldr	x9, [x8, #136]
    d5a0:	ldr	w10, [x9, #36]
    d5a4:	add	w10, w10, #0x8
    d5a8:	str	w10, [x9, #36]
    d5ac:	ldr	x9, [x8, #136]
    d5b0:	ldr	x9, [x9]
    d5b4:	ldr	x12, [x9]
    d5b8:	add	x12, x12, #0x1
    d5bc:	str	x12, [x9]
    d5c0:	ldr	x9, [x8, #136]
    d5c4:	ldr	x9, [x9]
    d5c8:	ldr	w10, [x9, #8]
    d5cc:	subs	w10, w10, #0x1
    d5d0:	str	w10, [x9, #8]
    d5d4:	ldr	x9, [x8, #136]
    d5d8:	ldr	x9, [x9]
    d5dc:	ldr	w10, [x9, #12]
    d5e0:	add	w10, w10, #0x1
    d5e4:	str	w10, [x9, #12]
    d5e8:	ldr	x9, [x8, #136]
    d5ec:	ldr	x9, [x9]
    d5f0:	ldr	w10, [x9, #12]
    d5f4:	cbnz	w10, d610 <BZ2_decompress@@Base+0x2374>
    d5f8:	ldr	x8, [sp, #32]
    d5fc:	ldr	x9, [x8, #136]
    d600:	ldr	x9, [x9]
    d604:	ldr	w10, [x9, #16]
    d608:	add	w10, w10, #0x1
    d60c:	str	w10, [x9, #16]
    d610:	b	d504 <BZ2_decompress@@Base+0x2268>
    d614:	ldurb	w8, [x29, #-17]
    d618:	cbnz	w8, d620 <BZ2_decompress@@Base+0x2384>
    d61c:	b	d64c <BZ2_decompress@@Base+0x23b0>
    d620:	ldur	w8, [x29, #-48]
    d624:	add	w8, w8, #0x1
    d628:	stur	w8, [x29, #-48]
    d62c:	ldur	w8, [x29, #-48]
    d630:	ldur	w9, [x29, #-60]
    d634:	cmp	w8, w9
    d638:	b.lt	d648 <BZ2_decompress@@Base+0x23ac>  // b.tstop
    d63c:	mov	w8, #0xfffffffc            	// #-4
    d640:	stur	w8, [x29, #-24]
    d644:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d648:	b	d4f4 <BZ2_decompress@@Base+0x2258>
    d64c:	ldur	w8, [x29, #-44]
    d650:	mov	w9, #0x4652                	// #18002
    d654:	cmp	w8, w9
    d658:	b.ge	d67c <BZ2_decompress@@Base+0x23e0>  // b.tcont
    d65c:	ldur	w8, [x29, #-48]
    d660:	ldr	x9, [sp, #32]
    d664:	ldr	x10, [x9, #136]
    d668:	mov	x11, #0x651e                	// #25886
    d66c:	add	x10, x10, x11
    d670:	ldursw	x11, [x29, #-44]
    d674:	add	x10, x10, x11
    d678:	strb	w8, [x10]
    d67c:	ldur	w8, [x29, #-44]
    d680:	add	w8, w8, #0x1
    d684:	stur	w8, [x29, #-44]
    d688:	b	d4e0 <BZ2_decompress@@Base+0x2244>
    d68c:	ldur	w8, [x29, #-64]
    d690:	mov	w9, #0x4652                	// #18002
    d694:	cmp	w8, w9
    d698:	b.le	d6a4 <BZ2_decompress@@Base+0x2408>
    d69c:	mov	w8, #0x4652                	// #18002
    d6a0:	stur	w8, [x29, #-64]
    d6a4:	mov	w8, #0x0                   	// #0
    d6a8:	strb	w8, [sp, #164]
    d6ac:	ldrb	w8, [sp, #164]
    d6b0:	ldur	w9, [x29, #-60]
    d6b4:	cmp	w8, w9
    d6b8:	b.ge	d6e4 <BZ2_decompress@@Base+0x2448>  // b.tcont
    d6bc:	ldrb	w8, [sp, #164]
    d6c0:	ldrb	w9, [sp, #164]
    d6c4:	mov	w10, w9
    d6c8:	add	x11, sp, #0xa6
    d6cc:	add	x10, x11, x10
    d6d0:	strb	w8, [x10]
    d6d4:	ldrb	w8, [sp, #164]
    d6d8:	add	w8, w8, #0x1
    d6dc:	strb	w8, [sp, #164]
    d6e0:	b	d6ac <BZ2_decompress@@Base+0x2410>
    d6e4:	stur	wzr, [x29, #-44]
    d6e8:	ldur	w8, [x29, #-44]
    d6ec:	ldur	w9, [x29, #-64]
    d6f0:	cmp	w8, w9
    d6f4:	b.ge	d7b8 <BZ2_decompress@@Base+0x251c>  // b.tcont
    d6f8:	ldr	x8, [sp, #32]
    d6fc:	ldr	x9, [x8, #136]
    d700:	mov	x10, #0x651e                	// #25886
    d704:	add	x9, x9, x10
    d708:	ldursw	x10, [x29, #-44]
    d70c:	add	x9, x9, x10
    d710:	ldrb	w11, [x9]
    d714:	strb	w11, [sp, #164]
    d718:	ldrb	w11, [sp, #164]
    d71c:	mov	w9, w11
    d720:	add	x10, sp, #0xa6
    d724:	add	x9, x10, x9
    d728:	ldrb	w11, [x9]
    d72c:	strb	w11, [sp, #165]
    d730:	ldrb	w8, [sp, #164]
    d734:	cmp	w8, #0x0
    d738:	cset	w8, le
    d73c:	tbnz	w8, #0, d780 <BZ2_decompress@@Base+0x24e4>
    d740:	ldrb	w8, [sp, #164]
    d744:	subs	w8, w8, #0x1
    d748:	mov	w0, w8
    d74c:	sxtw	x9, w0
    d750:	add	x10, sp, #0xa6
    d754:	add	x9, x10, x9
    d758:	ldrb	w8, [x9]
    d75c:	ldrb	w11, [sp, #164]
    d760:	mov	w9, w11
    d764:	add	x9, x10, x9
    d768:	strb	w8, [x9]
    d76c:	ldrb	w8, [sp, #164]
    d770:	mov	w11, #0xffffffff            	// #-1
    d774:	add	w8, w11, w8, uxtb
    d778:	strb	w8, [sp, #164]
    d77c:	b	d730 <BZ2_decompress@@Base+0x2494>
    d780:	ldrb	w8, [sp, #165]
    d784:	strb	w8, [sp, #166]
    d788:	ldrb	w8, [sp, #165]
    d78c:	ldr	x9, [sp, #32]
    d790:	ldr	x10, [x9, #136]
    d794:	mov	x11, #0x1ecc                	// #7884
    d798:	add	x10, x10, x11
    d79c:	ldursw	x11, [x29, #-44]
    d7a0:	add	x10, x10, x11
    d7a4:	strb	w8, [x10]
    d7a8:	ldur	w8, [x29, #-44]
    d7ac:	add	w8, w8, #0x1
    d7b0:	stur	w8, [x29, #-44]
    d7b4:	b	d6e8 <BZ2_decompress@@Base+0x244c>
    d7b8:	stur	wzr, [x29, #-52]
    d7bc:	ldur	w8, [x29, #-52]
    d7c0:	ldur	w9, [x29, #-60]
    d7c4:	cmp	w8, w9
    d7c8:	b.ge	dbe8 <BZ2_decompress@@Base+0x294c>  // b.tcont
    d7cc:	ldr	x8, [sp, #32]
    d7d0:	ldr	x9, [x8, #136]
    d7d4:	mov	w10, #0x21                  	// #33
    d7d8:	str	w10, [x9, #8]
    d7dc:	ldr	x8, [sp, #32]
    d7e0:	ldr	x9, [x8, #136]
    d7e4:	ldr	w10, [x9, #36]
    d7e8:	cmp	w10, #0x5
    d7ec:	b.lt	d830 <BZ2_decompress@@Base+0x2594>  // b.tstop
    d7f0:	ldr	x8, [sp, #32]
    d7f4:	ldr	x9, [x8, #136]
    d7f8:	ldr	w10, [x9, #32]
    d7fc:	ldr	x9, [x8, #136]
    d800:	ldr	w11, [x9, #36]
    d804:	subs	w11, w11, #0x5
    d808:	lsr	w10, w10, w11
    d80c:	and	w10, w10, #0x1f
    d810:	str	w10, [sp, #160]
    d814:	ldr	x9, [x8, #136]
    d818:	ldr	w10, [x9, #36]
    d81c:	subs	w10, w10, #0x5
    d820:	str	w10, [x9, #36]
    d824:	ldr	w10, [sp, #160]
    d828:	stur	w10, [x29, #-100]
    d82c:	b	d8ec <BZ2_decompress@@Base+0x2650>
    d830:	ldr	x8, [sp, #32]
    d834:	ldr	x9, [x8, #136]
    d838:	ldr	x9, [x9]
    d83c:	ldr	w10, [x9, #8]
    d840:	cbnz	w10, d84c <BZ2_decompress@@Base+0x25b0>
    d844:	stur	wzr, [x29, #-24]
    d848:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d84c:	ldr	x8, [sp, #32]
    d850:	ldr	x9, [x8, #136]
    d854:	ldr	w10, [x9, #32]
    d858:	ldr	x9, [x8, #136]
    d85c:	ldr	x9, [x9]
    d860:	ldr	x9, [x9]
    d864:	ldrb	w11, [x9]
    d868:	orr	w10, w11, w10, lsl #8
    d86c:	ldr	x9, [x8, #136]
    d870:	str	w10, [x9, #32]
    d874:	ldr	x9, [x8, #136]
    d878:	ldr	w10, [x9, #36]
    d87c:	add	w10, w10, #0x8
    d880:	str	w10, [x9, #36]
    d884:	ldr	x9, [x8, #136]
    d888:	ldr	x9, [x9]
    d88c:	ldr	x12, [x9]
    d890:	add	x12, x12, #0x1
    d894:	str	x12, [x9]
    d898:	ldr	x9, [x8, #136]
    d89c:	ldr	x9, [x9]
    d8a0:	ldr	w10, [x9, #8]
    d8a4:	subs	w10, w10, #0x1
    d8a8:	str	w10, [x9, #8]
    d8ac:	ldr	x9, [x8, #136]
    d8b0:	ldr	x9, [x9]
    d8b4:	ldr	w10, [x9, #12]
    d8b8:	add	w10, w10, #0x1
    d8bc:	str	w10, [x9, #12]
    d8c0:	ldr	x9, [x8, #136]
    d8c4:	ldr	x9, [x9]
    d8c8:	ldr	w10, [x9, #12]
    d8cc:	cbnz	w10, d8e8 <BZ2_decompress@@Base+0x264c>
    d8d0:	ldr	x8, [sp, #32]
    d8d4:	ldr	x9, [x8, #136]
    d8d8:	ldr	x9, [x9]
    d8dc:	ldr	w10, [x9, #16]
    d8e0:	add	w10, w10, #0x1
    d8e4:	str	w10, [x9, #16]
    d8e8:	b	d7dc <BZ2_decompress@@Base+0x2540>
    d8ec:	stur	wzr, [x29, #-44]
    d8f0:	ldur	w8, [x29, #-44]
    d8f4:	ldur	w9, [x29, #-56]
    d8f8:	cmp	w8, w9
    d8fc:	b.ge	dbd8 <BZ2_decompress@@Base+0x293c>  // b.tcont
    d900:	ldur	w8, [x29, #-100]
    d904:	cmp	w8, #0x1
    d908:	b.lt	d918 <BZ2_decompress@@Base+0x267c>  // b.tstop
    d90c:	ldur	w8, [x29, #-100]
    d910:	cmp	w8, #0x14
    d914:	b.le	d924 <BZ2_decompress@@Base+0x2688>
    d918:	mov	w8, #0xfffffffc            	// #-4
    d91c:	stur	w8, [x29, #-24]
    d920:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d924:	ldr	x8, [sp, #32]
    d928:	ldr	x9, [x8, #136]
    d92c:	mov	w10, #0x22                  	// #34
    d930:	str	w10, [x9, #8]
    d934:	ldr	x8, [sp, #32]
    d938:	ldr	x9, [x8, #136]
    d93c:	ldr	w10, [x9, #36]
    d940:	cmp	w10, #0x1
    d944:	b.lt	d988 <BZ2_decompress@@Base+0x26ec>  // b.tstop
    d948:	ldr	x8, [sp, #32]
    d94c:	ldr	x9, [x8, #136]
    d950:	ldr	w10, [x9, #32]
    d954:	ldr	x9, [x8, #136]
    d958:	ldr	w11, [x9, #36]
    d95c:	subs	w11, w11, #0x1
    d960:	lsr	w10, w10, w11
    d964:	and	w10, w10, #0x1
    d968:	str	w10, [sp, #156]
    d96c:	ldr	x9, [x8, #136]
    d970:	ldr	w10, [x9, #36]
    d974:	subs	w10, w10, #0x1
    d978:	str	w10, [x9, #36]
    d97c:	ldr	w10, [sp, #156]
    d980:	sturb	w10, [x29, #-17]
    d984:	b	da44 <BZ2_decompress@@Base+0x27a8>
    d988:	ldr	x8, [sp, #32]
    d98c:	ldr	x9, [x8, #136]
    d990:	ldr	x9, [x9]
    d994:	ldr	w10, [x9, #8]
    d998:	cbnz	w10, d9a4 <BZ2_decompress@@Base+0x2708>
    d99c:	stur	wzr, [x29, #-24]
    d9a0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    d9a4:	ldr	x8, [sp, #32]
    d9a8:	ldr	x9, [x8, #136]
    d9ac:	ldr	w10, [x9, #32]
    d9b0:	ldr	x9, [x8, #136]
    d9b4:	ldr	x9, [x9]
    d9b8:	ldr	x9, [x9]
    d9bc:	ldrb	w11, [x9]
    d9c0:	orr	w10, w11, w10, lsl #8
    d9c4:	ldr	x9, [x8, #136]
    d9c8:	str	w10, [x9, #32]
    d9cc:	ldr	x9, [x8, #136]
    d9d0:	ldr	w10, [x9, #36]
    d9d4:	add	w10, w10, #0x8
    d9d8:	str	w10, [x9, #36]
    d9dc:	ldr	x9, [x8, #136]
    d9e0:	ldr	x9, [x9]
    d9e4:	ldr	x12, [x9]
    d9e8:	add	x12, x12, #0x1
    d9ec:	str	x12, [x9]
    d9f0:	ldr	x9, [x8, #136]
    d9f4:	ldr	x9, [x9]
    d9f8:	ldr	w10, [x9, #8]
    d9fc:	subs	w10, w10, #0x1
    da00:	str	w10, [x9, #8]
    da04:	ldr	x9, [x8, #136]
    da08:	ldr	x9, [x9]
    da0c:	ldr	w10, [x9, #12]
    da10:	add	w10, w10, #0x1
    da14:	str	w10, [x9, #12]
    da18:	ldr	x9, [x8, #136]
    da1c:	ldr	x9, [x9]
    da20:	ldr	w10, [x9, #12]
    da24:	cbnz	w10, da40 <BZ2_decompress@@Base+0x27a4>
    da28:	ldr	x8, [sp, #32]
    da2c:	ldr	x9, [x8, #136]
    da30:	ldr	x9, [x9]
    da34:	ldr	w10, [x9, #16]
    da38:	add	w10, w10, #0x1
    da3c:	str	w10, [x9, #16]
    da40:	b	d934 <BZ2_decompress@@Base+0x2698>
    da44:	ldurb	w8, [x29, #-17]
    da48:	cbnz	w8, da50 <BZ2_decompress@@Base+0x27b4>
    da4c:	b	db98 <BZ2_decompress@@Base+0x28fc>
    da50:	ldr	x8, [sp, #32]
    da54:	ldr	x9, [x8, #136]
    da58:	mov	w10, #0x23                  	// #35
    da5c:	str	w10, [x9, #8]
    da60:	ldr	x8, [sp, #32]
    da64:	ldr	x9, [x8, #136]
    da68:	ldr	w10, [x9, #36]
    da6c:	cmp	w10, #0x1
    da70:	b.lt	dab4 <BZ2_decompress@@Base+0x2818>  // b.tstop
    da74:	ldr	x8, [sp, #32]
    da78:	ldr	x9, [x8, #136]
    da7c:	ldr	w10, [x9, #32]
    da80:	ldr	x9, [x8, #136]
    da84:	ldr	w11, [x9, #36]
    da88:	subs	w11, w11, #0x1
    da8c:	lsr	w10, w10, w11
    da90:	and	w10, w10, #0x1
    da94:	str	w10, [sp, #152]
    da98:	ldr	x9, [x8, #136]
    da9c:	ldr	w10, [x9, #36]
    daa0:	subs	w10, w10, #0x1
    daa4:	str	w10, [x9, #36]
    daa8:	ldr	w10, [sp, #152]
    daac:	sturb	w10, [x29, #-17]
    dab0:	b	db70 <BZ2_decompress@@Base+0x28d4>
    dab4:	ldr	x8, [sp, #32]
    dab8:	ldr	x9, [x8, #136]
    dabc:	ldr	x9, [x9]
    dac0:	ldr	w10, [x9, #8]
    dac4:	cbnz	w10, dad0 <BZ2_decompress@@Base+0x2834>
    dac8:	stur	wzr, [x29, #-24]
    dacc:	b	1083c <BZ2_decompress@@Base+0x55a0>
    dad0:	ldr	x8, [sp, #32]
    dad4:	ldr	x9, [x8, #136]
    dad8:	ldr	w10, [x9, #32]
    dadc:	ldr	x9, [x8, #136]
    dae0:	ldr	x9, [x9]
    dae4:	ldr	x9, [x9]
    dae8:	ldrb	w11, [x9]
    daec:	orr	w10, w11, w10, lsl #8
    daf0:	ldr	x9, [x8, #136]
    daf4:	str	w10, [x9, #32]
    daf8:	ldr	x9, [x8, #136]
    dafc:	ldr	w10, [x9, #36]
    db00:	add	w10, w10, #0x8
    db04:	str	w10, [x9, #36]
    db08:	ldr	x9, [x8, #136]
    db0c:	ldr	x9, [x9]
    db10:	ldr	x12, [x9]
    db14:	add	x12, x12, #0x1
    db18:	str	x12, [x9]
    db1c:	ldr	x9, [x8, #136]
    db20:	ldr	x9, [x9]
    db24:	ldr	w10, [x9, #8]
    db28:	subs	w10, w10, #0x1
    db2c:	str	w10, [x9, #8]
    db30:	ldr	x9, [x8, #136]
    db34:	ldr	x9, [x9]
    db38:	ldr	w10, [x9, #12]
    db3c:	add	w10, w10, #0x1
    db40:	str	w10, [x9, #12]
    db44:	ldr	x9, [x8, #136]
    db48:	ldr	x9, [x9]
    db4c:	ldr	w10, [x9, #12]
    db50:	cbnz	w10, db6c <BZ2_decompress@@Base+0x28d0>
    db54:	ldr	x8, [sp, #32]
    db58:	ldr	x9, [x8, #136]
    db5c:	ldr	x9, [x9]
    db60:	ldr	w10, [x9, #16]
    db64:	add	w10, w10, #0x1
    db68:	str	w10, [x9, #16]
    db6c:	b	da60 <BZ2_decompress@@Base+0x27c4>
    db70:	ldurb	w8, [x29, #-17]
    db74:	cbnz	w8, db88 <BZ2_decompress@@Base+0x28ec>
    db78:	ldur	w8, [x29, #-100]
    db7c:	add	w8, w8, #0x1
    db80:	stur	w8, [x29, #-100]
    db84:	b	db94 <BZ2_decompress@@Base+0x28f8>
    db88:	ldur	w8, [x29, #-100]
    db8c:	subs	w8, w8, #0x1
    db90:	stur	w8, [x29, #-100]
    db94:	b	d900 <BZ2_decompress@@Base+0x2664>
    db98:	ldur	w8, [x29, #-100]
    db9c:	ldr	x9, [sp, #32]
    dba0:	ldr	x10, [x9, #136]
    dba4:	mov	x11, #0xab70                	// #43888
    dba8:	add	x10, x10, x11
    dbac:	ldursw	x11, [x29, #-52]
    dbb0:	mov	x12, #0x102                 	// #258
    dbb4:	mul	x11, x12, x11
    dbb8:	add	x10, x10, x11
    dbbc:	ldursw	x11, [x29, #-44]
    dbc0:	add	x10, x10, x11
    dbc4:	strb	w8, [x10]
    dbc8:	ldur	w8, [x29, #-44]
    dbcc:	add	w8, w8, #0x1
    dbd0:	stur	w8, [x29, #-44]
    dbd4:	b	d8f0 <BZ2_decompress@@Base+0x2654>
    dbd8:	ldur	w8, [x29, #-52]
    dbdc:	add	w8, w8, #0x1
    dbe0:	stur	w8, [x29, #-52]
    dbe4:	b	d7bc <BZ2_decompress@@Base+0x2520>
    dbe8:	stur	wzr, [x29, #-52]
    dbec:	ldur	w8, [x29, #-52]
    dbf0:	ldur	w9, [x29, #-60]
    dbf4:	cmp	w8, w9
    dbf8:	b.ge	dd94 <BZ2_decompress@@Base+0x2af8>  // b.tcont
    dbfc:	mov	w8, #0x20                  	// #32
    dc00:	stur	w8, [x29, #-28]
    dc04:	stur	wzr, [x29, #-32]
    dc08:	stur	wzr, [x29, #-44]
    dc0c:	ldur	w8, [x29, #-44]
    dc10:	ldur	w9, [x29, #-56]
    dc14:	cmp	w8, w9
    dc18:	b.ge	dcec <BZ2_decompress@@Base+0x2a50>  // b.tcont
    dc1c:	ldr	x8, [sp, #32]
    dc20:	ldr	x9, [x8, #136]
    dc24:	mov	x10, #0xab70                	// #43888
    dc28:	add	x9, x9, x10
    dc2c:	ldursw	x10, [x29, #-52]
    dc30:	mov	x11, #0x102                 	// #258
    dc34:	mul	x10, x11, x10
    dc38:	add	x9, x9, x10
    dc3c:	ldursw	x10, [x29, #-44]
    dc40:	ldrb	w12, [x9, x10]
    dc44:	ldur	w13, [x29, #-32]
    dc48:	cmp	w12, w13
    dc4c:	b.le	dc7c <BZ2_decompress@@Base+0x29e0>
    dc50:	ldr	x8, [sp, #32]
    dc54:	ldr	x9, [x8, #136]
    dc58:	mov	x10, #0xab70                	// #43888
    dc5c:	add	x9, x9, x10
    dc60:	ldursw	x10, [x29, #-52]
    dc64:	mov	x11, #0x102                 	// #258
    dc68:	mul	x10, x11, x10
    dc6c:	add	x9, x9, x10
    dc70:	ldursw	x10, [x29, #-44]
    dc74:	ldrb	w12, [x9, x10]
    dc78:	stur	w12, [x29, #-32]
    dc7c:	ldr	x8, [sp, #32]
    dc80:	ldr	x9, [x8, #136]
    dc84:	mov	x10, #0xab70                	// #43888
    dc88:	add	x9, x9, x10
    dc8c:	ldursw	x10, [x29, #-52]
    dc90:	mov	x11, #0x102                 	// #258
    dc94:	mul	x10, x11, x10
    dc98:	add	x9, x9, x10
    dc9c:	ldursw	x10, [x29, #-44]
    dca0:	ldrb	w12, [x9, x10]
    dca4:	ldur	w13, [x29, #-28]
    dca8:	cmp	w12, w13
    dcac:	b.ge	dcdc <BZ2_decompress@@Base+0x2a40>  // b.tcont
    dcb0:	ldr	x8, [sp, #32]
    dcb4:	ldr	x9, [x8, #136]
    dcb8:	mov	x10, #0xab70                	// #43888
    dcbc:	add	x9, x9, x10
    dcc0:	ldursw	x10, [x29, #-52]
    dcc4:	mov	x11, #0x102                 	// #258
    dcc8:	mul	x10, x11, x10
    dccc:	add	x9, x9, x10
    dcd0:	ldursw	x10, [x29, #-44]
    dcd4:	ldrb	w12, [x9, x10]
    dcd8:	stur	w12, [x29, #-28]
    dcdc:	ldur	w8, [x29, #-44]
    dce0:	add	w8, w8, #0x1
    dce4:	stur	w8, [x29, #-44]
    dce8:	b	dc0c <BZ2_decompress@@Base+0x2970>
    dcec:	ldr	x8, [sp, #32]
    dcf0:	ldr	x9, [x8, #136]
    dcf4:	mov	x10, #0xb17c                	// #45436
    dcf8:	add	x9, x9, x10
    dcfc:	ldursw	x10, [x29, #-52]
    dd00:	mov	x11, #0x408                 	// #1032
    dd04:	mul	x10, x11, x10
    dd08:	add	x0, x9, x10
    dd0c:	ldr	x9, [x8, #136]
    dd10:	mov	x10, #0xc9ac                	// #51628
    dd14:	add	x9, x9, x10
    dd18:	ldursw	x10, [x29, #-52]
    dd1c:	mul	x10, x11, x10
    dd20:	add	x1, x9, x10
    dd24:	ldr	x9, [x8, #136]
    dd28:	mov	x10, #0xe1dc                	// #57820
    dd2c:	add	x9, x9, x10
    dd30:	ldursw	x10, [x29, #-52]
    dd34:	mul	x10, x11, x10
    dd38:	add	x2, x9, x10
    dd3c:	ldr	x9, [x8, #136]
    dd40:	mov	x10, #0xab70                	// #43888
    dd44:	add	x9, x9, x10
    dd48:	ldursw	x10, [x29, #-52]
    dd4c:	mov	x11, #0x102                 	// #258
    dd50:	mul	x10, x11, x10
    dd54:	add	x3, x9, x10
    dd58:	ldur	w4, [x29, #-28]
    dd5c:	ldur	w5, [x29, #-32]
    dd60:	ldur	w6, [x29, #-56]
    dd64:	bl	1560 <BZ2_hbCreateDecodeTables@plt>
    dd68:	ldur	w12, [x29, #-28]
    dd6c:	ldr	x8, [sp, #32]
    dd70:	ldr	x9, [x8, #136]
    dd74:	mov	x10, #0xfa0c                	// #64012
    dd78:	add	x9, x9, x10
    dd7c:	ldursw	x10, [x29, #-52]
    dd80:	str	w12, [x9, x10, lsl #2]
    dd84:	ldur	w8, [x29, #-52]
    dd88:	add	w8, w8, #0x1
    dd8c:	stur	w8, [x29, #-52]
    dd90:	b	dbec <BZ2_decompress@@Base+0x2950>
    dd94:	ldr	x8, [sp, #32]
    dd98:	ldr	x9, [x8, #136]
    dd9c:	ldr	w10, [x9, #3192]
    dda0:	add	w10, w10, #0x1
    dda4:	stur	w10, [x29, #-68]
    dda8:	ldr	x9, [x8, #136]
    ddac:	ldr	w10, [x9, #40]
    ddb0:	mov	w11, #0x86a0                	// #34464
    ddb4:	movk	w11, #0x1, lsl #16
    ddb8:	mul	w10, w11, w10
    ddbc:	stur	w10, [x29, #-84]
    ddc0:	mov	w10, #0xffffffff            	// #-1
    ddc4:	stur	w10, [x29, #-72]
    ddc8:	stur	wzr, [x29, #-76]
    ddcc:	stur	wzr, [x29, #-44]
    ddd0:	ldur	w8, [x29, #-44]
    ddd4:	cmp	w8, #0xff
    ddd8:	b.gt	de04 <BZ2_decompress@@Base+0x2b68>
    dddc:	ldr	x8, [sp, #32]
    dde0:	ldr	x9, [x8, #136]
    dde4:	add	x9, x9, #0x44
    dde8:	ldursw	x10, [x29, #-44]
    ddec:	mov	w11, wzr
    ddf0:	str	w11, [x9, x10, lsl #2]
    ddf4:	ldur	w8, [x29, #-44]
    ddf8:	add	w8, w8, #0x1
    ddfc:	stur	w8, [x29, #-44]
    de00:	b	ddd0 <BZ2_decompress@@Base+0x2b34>
    de04:	mov	w8, #0xfff                 	// #4095
    de08:	str	w8, [sp, #140]
    de0c:	mov	w8, #0xf                   	// #15
    de10:	str	w8, [sp, #148]
    de14:	ldr	w8, [sp, #148]
    de18:	cmp	w8, #0x0
    de1c:	cset	w8, lt  // lt = tstop
    de20:	tbnz	w8, #0, deb4 <BZ2_decompress@@Base+0x2c18>
    de24:	mov	w8, #0xf                   	// #15
    de28:	str	w8, [sp, #144]
    de2c:	ldr	w8, [sp, #144]
    de30:	cmp	w8, #0x0
    de34:	cset	w8, lt  // lt = tstop
    de38:	tbnz	w8, #0, de84 <BZ2_decompress@@Base+0x2be8>
    de3c:	ldr	w8, [sp, #148]
    de40:	mov	w9, #0x10                  	// #16
    de44:	mul	w8, w8, w9
    de48:	ldr	w9, [sp, #144]
    de4c:	add	w8, w8, w9
    de50:	ldr	x10, [sp, #32]
    de54:	ldr	x11, [x10, #136]
    de58:	add	x11, x11, #0xe8c
    de5c:	ldrsw	x12, [sp, #140]
    de60:	add	x11, x11, x12
    de64:	strb	w8, [x11]
    de68:	ldr	w8, [sp, #140]
    de6c:	subs	w8, w8, #0x1
    de70:	str	w8, [sp, #140]
    de74:	ldr	w8, [sp, #144]
    de78:	subs	w8, w8, #0x1
    de7c:	str	w8, [sp, #144]
    de80:	b	de2c <BZ2_decompress@@Base+0x2b90>
    de84:	ldr	w8, [sp, #140]
    de88:	add	w8, w8, #0x1
    de8c:	ldr	x9, [sp, #32]
    de90:	ldr	x10, [x9, #136]
    de94:	mov	x11, #0x1e8c                	// #7820
    de98:	add	x10, x10, x11
    de9c:	ldrsw	x11, [sp, #148]
    dea0:	str	w8, [x10, x11, lsl #2]
    dea4:	ldr	w8, [sp, #148]
    dea8:	subs	w8, w8, #0x1
    deac:	str	w8, [sp, #148]
    deb0:	b	de14 <BZ2_decompress@@Base+0x2b78>
    deb4:	stur	wzr, [x29, #-88]
    deb8:	ldur	w8, [x29, #-76]
    debc:	cbnz	w8, df7c <BZ2_decompress@@Base+0x2ce0>
    dec0:	ldur	w8, [x29, #-72]
    dec4:	add	w8, w8, #0x1
    dec8:	stur	w8, [x29, #-72]
    decc:	ldur	w8, [x29, #-72]
    ded0:	ldur	w9, [x29, #-64]
    ded4:	cmp	w8, w9
    ded8:	b.lt	dee8 <BZ2_decompress@@Base+0x2c4c>  // b.tstop
    dedc:	mov	w8, #0xfffffffc            	// #-4
    dee0:	stur	w8, [x29, #-24]
    dee4:	b	1083c <BZ2_decompress@@Base+0x55a0>
    dee8:	mov	w8, #0x32                  	// #50
    deec:	stur	w8, [x29, #-76]
    def0:	ldr	x9, [sp, #32]
    def4:	ldr	x10, [x9, #136]
    def8:	mov	x11, #0x1ecc                	// #7884
    defc:	add	x10, x10, x11
    df00:	ldursw	x11, [x29, #-72]
    df04:	ldrb	w8, [x10, x11]
    df08:	stur	w8, [x29, #-120]
    df0c:	ldr	x10, [x9, #136]
    df10:	mov	x11, #0xfa0c                	// #64012
    df14:	add	x10, x10, x11
    df18:	ldursw	x11, [x29, #-120]
    df1c:	ldr	w8, [x10, x11, lsl #2]
    df20:	stur	w8, [x29, #-124]
    df24:	ldr	x10, [x9, #136]
    df28:	mov	x11, #0xb17c                	// #45436
    df2c:	add	x10, x10, x11
    df30:	ldursw	x11, [x29, #-120]
    df34:	mov	x12, #0x408                 	// #1032
    df38:	mul	x11, x12, x11
    df3c:	add	x10, x10, x11
    df40:	str	x10, [x9, #16]
    df44:	ldr	x10, [x9, #136]
    df48:	mov	x11, #0xe1dc                	// #57820
    df4c:	add	x10, x10, x11
    df50:	ldursw	x11, [x29, #-120]
    df54:	mul	x11, x12, x11
    df58:	add	x10, x10, x11
    df5c:	str	x10, [x9]
    df60:	ldr	x10, [x9, #136]
    df64:	mov	x11, #0xc9ac                	// #51628
    df68:	add	x10, x10, x11
    df6c:	ldursw	x11, [x29, #-120]
    df70:	mul	x11, x12, x11
    df74:	add	x10, x10, x11
    df78:	str	x10, [x9, #8]
    df7c:	ldur	w8, [x29, #-76]
    df80:	subs	w8, w8, #0x1
    df84:	stur	w8, [x29, #-76]
    df88:	ldur	w8, [x29, #-124]
    df8c:	stur	w8, [x29, #-108]
    df90:	ldr	x8, [sp, #32]
    df94:	ldr	x9, [x8, #136]
    df98:	mov	w10, #0x24                  	// #36
    df9c:	str	w10, [x9, #8]
    dfa0:	ldr	x8, [sp, #32]
    dfa4:	ldr	x9, [x8, #136]
    dfa8:	ldr	w10, [x9, #36]
    dfac:	ldur	w11, [x29, #-108]
    dfb0:	cmp	w10, w11
    dfb4:	b.lt	e010 <BZ2_decompress@@Base+0x2d74>  // b.tstop
    dfb8:	ldr	x8, [sp, #32]
    dfbc:	ldr	x9, [x8, #136]
    dfc0:	ldr	w10, [x9, #32]
    dfc4:	ldr	x9, [x8, #136]
    dfc8:	ldr	w11, [x9, #36]
    dfcc:	ldur	w12, [x29, #-108]
    dfd0:	subs	w11, w11, w12
    dfd4:	lsr	w10, w10, w11
    dfd8:	ldur	w11, [x29, #-108]
    dfdc:	mov	w12, #0x1                   	// #1
    dfe0:	lsl	w11, w12, w11
    dfe4:	subs	w11, w11, #0x1
    dfe8:	and	w10, w10, w11
    dfec:	str	w10, [sp, #136]
    dff0:	ldur	w10, [x29, #-108]
    dff4:	ldr	x9, [x8, #136]
    dff8:	ldr	w11, [x9, #36]
    dffc:	subs	w10, w11, w10
    e000:	str	w10, [x9, #36]
    e004:	ldr	w10, [sp, #136]
    e008:	stur	w10, [x29, #-112]
    e00c:	b	e0cc <BZ2_decompress@@Base+0x2e30>
    e010:	ldr	x8, [sp, #32]
    e014:	ldr	x9, [x8, #136]
    e018:	ldr	x9, [x9]
    e01c:	ldr	w10, [x9, #8]
    e020:	cbnz	w10, e02c <BZ2_decompress@@Base+0x2d90>
    e024:	stur	wzr, [x29, #-24]
    e028:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e02c:	ldr	x8, [sp, #32]
    e030:	ldr	x9, [x8, #136]
    e034:	ldr	w10, [x9, #32]
    e038:	ldr	x9, [x8, #136]
    e03c:	ldr	x9, [x9]
    e040:	ldr	x9, [x9]
    e044:	ldrb	w11, [x9]
    e048:	orr	w10, w11, w10, lsl #8
    e04c:	ldr	x9, [x8, #136]
    e050:	str	w10, [x9, #32]
    e054:	ldr	x9, [x8, #136]
    e058:	ldr	w10, [x9, #36]
    e05c:	add	w10, w10, #0x8
    e060:	str	w10, [x9, #36]
    e064:	ldr	x9, [x8, #136]
    e068:	ldr	x9, [x9]
    e06c:	ldr	x12, [x9]
    e070:	add	x12, x12, #0x1
    e074:	str	x12, [x9]
    e078:	ldr	x9, [x8, #136]
    e07c:	ldr	x9, [x9]
    e080:	ldr	w10, [x9, #8]
    e084:	subs	w10, w10, #0x1
    e088:	str	w10, [x9, #8]
    e08c:	ldr	x9, [x8, #136]
    e090:	ldr	x9, [x9]
    e094:	ldr	w10, [x9, #12]
    e098:	add	w10, w10, #0x1
    e09c:	str	w10, [x9, #12]
    e0a0:	ldr	x9, [x8, #136]
    e0a4:	ldr	x9, [x9]
    e0a8:	ldr	w10, [x9, #12]
    e0ac:	cbnz	w10, e0c8 <BZ2_decompress@@Base+0x2e2c>
    e0b0:	ldr	x8, [sp, #32]
    e0b4:	ldr	x9, [x8, #136]
    e0b8:	ldr	x9, [x9]
    e0bc:	ldr	w10, [x9, #16]
    e0c0:	add	w10, w10, #0x1
    e0c4:	str	w10, [x9, #16]
    e0c8:	b	dfa0 <BZ2_decompress@@Base+0x2d04>
    e0cc:	ldur	w8, [x29, #-108]
    e0d0:	cmp	w8, #0x14
    e0d4:	b.le	e0e4 <BZ2_decompress@@Base+0x2e48>
    e0d8:	mov	w8, #0xfffffffc            	// #-4
    e0dc:	stur	w8, [x29, #-24]
    e0e0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e0e4:	ldur	w8, [x29, #-112]
    e0e8:	ldr	x9, [sp, #32]
    e0ec:	ldr	x10, [x9, #16]
    e0f0:	ldursw	x11, [x29, #-108]
    e0f4:	ldr	w12, [x10, x11, lsl #2]
    e0f8:	cmp	w8, w12
    e0fc:	b.gt	e104 <BZ2_decompress@@Base+0x2e68>
    e100:	b	e244 <BZ2_decompress@@Base+0x2fa8>
    e104:	ldur	w8, [x29, #-108]
    e108:	add	w8, w8, #0x1
    e10c:	stur	w8, [x29, #-108]
    e110:	ldr	x8, [sp, #32]
    e114:	ldr	x9, [x8, #136]
    e118:	mov	w10, #0x25                  	// #37
    e11c:	str	w10, [x9, #8]
    e120:	ldr	x8, [sp, #32]
    e124:	ldr	x9, [x8, #136]
    e128:	ldr	w10, [x9, #36]
    e12c:	cmp	w10, #0x1
    e130:	b.lt	e174 <BZ2_decompress@@Base+0x2ed8>  // b.tstop
    e134:	ldr	x8, [sp, #32]
    e138:	ldr	x9, [x8, #136]
    e13c:	ldr	w10, [x9, #32]
    e140:	ldr	x9, [x8, #136]
    e144:	ldr	w11, [x9, #36]
    e148:	subs	w11, w11, #0x1
    e14c:	lsr	w10, w10, w11
    e150:	and	w10, w10, #0x1
    e154:	str	w10, [sp, #132]
    e158:	ldr	x9, [x8, #136]
    e15c:	ldr	w10, [x9, #36]
    e160:	subs	w10, w10, #0x1
    e164:	str	w10, [x9, #36]
    e168:	ldr	w10, [sp, #132]
    e16c:	stur	w10, [x29, #-116]
    e170:	b	e230 <BZ2_decompress@@Base+0x2f94>
    e174:	ldr	x8, [sp, #32]
    e178:	ldr	x9, [x8, #136]
    e17c:	ldr	x9, [x9]
    e180:	ldr	w10, [x9, #8]
    e184:	cbnz	w10, e190 <BZ2_decompress@@Base+0x2ef4>
    e188:	stur	wzr, [x29, #-24]
    e18c:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e190:	ldr	x8, [sp, #32]
    e194:	ldr	x9, [x8, #136]
    e198:	ldr	w10, [x9, #32]
    e19c:	ldr	x9, [x8, #136]
    e1a0:	ldr	x9, [x9]
    e1a4:	ldr	x9, [x9]
    e1a8:	ldrb	w11, [x9]
    e1ac:	orr	w10, w11, w10, lsl #8
    e1b0:	ldr	x9, [x8, #136]
    e1b4:	str	w10, [x9, #32]
    e1b8:	ldr	x9, [x8, #136]
    e1bc:	ldr	w10, [x9, #36]
    e1c0:	add	w10, w10, #0x8
    e1c4:	str	w10, [x9, #36]
    e1c8:	ldr	x9, [x8, #136]
    e1cc:	ldr	x9, [x9]
    e1d0:	ldr	x12, [x9]
    e1d4:	add	x12, x12, #0x1
    e1d8:	str	x12, [x9]
    e1dc:	ldr	x9, [x8, #136]
    e1e0:	ldr	x9, [x9]
    e1e4:	ldr	w10, [x9, #8]
    e1e8:	subs	w10, w10, #0x1
    e1ec:	str	w10, [x9, #8]
    e1f0:	ldr	x9, [x8, #136]
    e1f4:	ldr	x9, [x9]
    e1f8:	ldr	w10, [x9, #12]
    e1fc:	add	w10, w10, #0x1
    e200:	str	w10, [x9, #12]
    e204:	ldr	x9, [x8, #136]
    e208:	ldr	x9, [x9]
    e20c:	ldr	w10, [x9, #12]
    e210:	cbnz	w10, e22c <BZ2_decompress@@Base+0x2f90>
    e214:	ldr	x8, [sp, #32]
    e218:	ldr	x9, [x8, #136]
    e21c:	ldr	x9, [x9]
    e220:	ldr	w10, [x9, #16]
    e224:	add	w10, w10, #0x1
    e228:	str	w10, [x9, #16]
    e22c:	b	e120 <BZ2_decompress@@Base+0x2e84>
    e230:	ldur	w8, [x29, #-112]
    e234:	ldur	w9, [x29, #-116]
    e238:	orr	w8, w9, w8, lsl #1
    e23c:	stur	w8, [x29, #-112]
    e240:	b	e0cc <BZ2_decompress@@Base+0x2e30>
    e244:	ldur	w8, [x29, #-112]
    e248:	ldr	x9, [sp, #32]
    e24c:	ldr	x10, [x9, #8]
    e250:	ldursw	x11, [x29, #-108]
    e254:	ldr	w12, [x10, x11, lsl #2]
    e258:	subs	w8, w8, w12
    e25c:	cmp	w8, #0x0
    e260:	cset	w8, lt  // lt = tstop
    e264:	tbnz	w8, #0, e288 <BZ2_decompress@@Base+0x2fec>
    e268:	ldur	w8, [x29, #-112]
    e26c:	ldr	x9, [sp, #32]
    e270:	ldr	x10, [x9, #8]
    e274:	ldursw	x11, [x29, #-108]
    e278:	ldr	w12, [x10, x11, lsl #2]
    e27c:	subs	w8, w8, w12
    e280:	cmp	w8, #0x102
    e284:	b.lt	e294 <BZ2_decompress@@Base+0x2ff8>  // b.tstop
    e288:	mov	w8, #0xfffffffc            	// #-4
    e28c:	stur	w8, [x29, #-24]
    e290:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e294:	ldr	x8, [sp, #32]
    e298:	ldr	x9, [x8]
    e29c:	ldur	w10, [x29, #-112]
    e2a0:	ldr	x11, [x8, #8]
    e2a4:	ldursw	x12, [x29, #-108]
    e2a8:	ldr	w13, [x11, x12, lsl #2]
    e2ac:	subs	w10, w10, w13
    e2b0:	ldr	w10, [x9, w10, sxtw #2]
    e2b4:	stur	w10, [x29, #-80]
    e2b8:	ldur	w8, [x29, #-80]
    e2bc:	ldur	w9, [x29, #-68]
    e2c0:	cmp	w8, w9
    e2c4:	b.ne	e2cc <BZ2_decompress@@Base+0x3030>  // b.any
    e2c8:	b	f24c <BZ2_decompress@@Base+0x3fb0>
    e2cc:	ldur	w8, [x29, #-80]
    e2d0:	cbz	w8, e2e0 <BZ2_decompress@@Base+0x3044>
    e2d4:	ldur	w8, [x29, #-80]
    e2d8:	cmp	w8, #0x1
    e2dc:	b.ne	e8d0 <BZ2_decompress@@Base+0x3634>  // b.any
    e2e0:	mov	w8, #0xffffffff            	// #-1
    e2e4:	stur	w8, [x29, #-92]
    e2e8:	mov	w8, #0x1                   	// #1
    e2ec:	stur	w8, [x29, #-96]
    e2f0:	ldur	w8, [x29, #-96]
    e2f4:	cmp	w8, #0x200, lsl #12
    e2f8:	b.lt	e308 <BZ2_decompress@@Base+0x306c>  // b.tstop
    e2fc:	mov	w8, #0xfffffffc            	// #-4
    e300:	stur	w8, [x29, #-24]
    e304:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e308:	ldur	w8, [x29, #-80]
    e30c:	cbnz	w8, e32c <BZ2_decompress@@Base+0x3090>
    e310:	ldur	w8, [x29, #-92]
    e314:	ldur	w9, [x29, #-96]
    e318:	mov	w10, #0x1                   	// #1
    e31c:	mul	w9, w10, w9
    e320:	add	w8, w8, w9
    e324:	stur	w8, [x29, #-92]
    e328:	b	e350 <BZ2_decompress@@Base+0x30b4>
    e32c:	ldur	w8, [x29, #-80]
    e330:	cmp	w8, #0x1
    e334:	b.ne	e350 <BZ2_decompress@@Base+0x30b4>  // b.any
    e338:	ldur	w8, [x29, #-92]
    e33c:	ldur	w9, [x29, #-96]
    e340:	mov	w10, #0x2                   	// #2
    e344:	mul	w9, w10, w9
    e348:	add	w8, w8, w9
    e34c:	stur	w8, [x29, #-92]
    e350:	ldur	w8, [x29, #-96]
    e354:	mov	w9, #0x2                   	// #2
    e358:	mul	w8, w8, w9
    e35c:	stur	w8, [x29, #-96]
    e360:	ldur	w8, [x29, #-76]
    e364:	cbnz	w8, e424 <BZ2_decompress@@Base+0x3188>
    e368:	ldur	w8, [x29, #-72]
    e36c:	add	w8, w8, #0x1
    e370:	stur	w8, [x29, #-72]
    e374:	ldur	w8, [x29, #-72]
    e378:	ldur	w9, [x29, #-64]
    e37c:	cmp	w8, w9
    e380:	b.lt	e390 <BZ2_decompress@@Base+0x30f4>  // b.tstop
    e384:	mov	w8, #0xfffffffc            	// #-4
    e388:	stur	w8, [x29, #-24]
    e38c:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e390:	mov	w8, #0x32                  	// #50
    e394:	stur	w8, [x29, #-76]
    e398:	ldr	x9, [sp, #32]
    e39c:	ldr	x10, [x9, #136]
    e3a0:	mov	x11, #0x1ecc                	// #7884
    e3a4:	add	x10, x10, x11
    e3a8:	ldursw	x11, [x29, #-72]
    e3ac:	ldrb	w8, [x10, x11]
    e3b0:	stur	w8, [x29, #-120]
    e3b4:	ldr	x10, [x9, #136]
    e3b8:	mov	x11, #0xfa0c                	// #64012
    e3bc:	add	x10, x10, x11
    e3c0:	ldursw	x11, [x29, #-120]
    e3c4:	ldr	w8, [x10, x11, lsl #2]
    e3c8:	stur	w8, [x29, #-124]
    e3cc:	ldr	x10, [x9, #136]
    e3d0:	mov	x11, #0xb17c                	// #45436
    e3d4:	add	x10, x10, x11
    e3d8:	ldursw	x11, [x29, #-120]
    e3dc:	mov	x12, #0x408                 	// #1032
    e3e0:	mul	x11, x12, x11
    e3e4:	add	x10, x10, x11
    e3e8:	str	x10, [x9, #16]
    e3ec:	ldr	x10, [x9, #136]
    e3f0:	mov	x11, #0xe1dc                	// #57820
    e3f4:	add	x10, x10, x11
    e3f8:	ldursw	x11, [x29, #-120]
    e3fc:	mul	x11, x12, x11
    e400:	add	x10, x10, x11
    e404:	str	x10, [x9]
    e408:	ldr	x10, [x9, #136]
    e40c:	mov	x11, #0xc9ac                	// #51628
    e410:	add	x10, x10, x11
    e414:	ldursw	x11, [x29, #-120]
    e418:	mul	x11, x12, x11
    e41c:	add	x10, x10, x11
    e420:	str	x10, [x9, #8]
    e424:	ldur	w8, [x29, #-76]
    e428:	subs	w8, w8, #0x1
    e42c:	stur	w8, [x29, #-76]
    e430:	ldur	w8, [x29, #-124]
    e434:	stur	w8, [x29, #-108]
    e438:	ldr	x8, [sp, #32]
    e43c:	ldr	x9, [x8, #136]
    e440:	mov	w10, #0x26                  	// #38
    e444:	str	w10, [x9, #8]
    e448:	ldr	x8, [sp, #32]
    e44c:	ldr	x9, [x8, #136]
    e450:	ldr	w10, [x9, #36]
    e454:	ldur	w11, [x29, #-108]
    e458:	cmp	w10, w11
    e45c:	b.lt	e4b8 <BZ2_decompress@@Base+0x321c>  // b.tstop
    e460:	ldr	x8, [sp, #32]
    e464:	ldr	x9, [x8, #136]
    e468:	ldr	w10, [x9, #32]
    e46c:	ldr	x9, [x8, #136]
    e470:	ldr	w11, [x9, #36]
    e474:	ldur	w12, [x29, #-108]
    e478:	subs	w11, w11, w12
    e47c:	lsr	w10, w10, w11
    e480:	ldur	w11, [x29, #-108]
    e484:	mov	w12, #0x1                   	// #1
    e488:	lsl	w11, w12, w11
    e48c:	subs	w11, w11, #0x1
    e490:	and	w10, w10, w11
    e494:	str	w10, [sp, #128]
    e498:	ldur	w10, [x29, #-108]
    e49c:	ldr	x9, [x8, #136]
    e4a0:	ldr	w11, [x9, #36]
    e4a4:	subs	w10, w11, w10
    e4a8:	str	w10, [x9, #36]
    e4ac:	ldr	w10, [sp, #128]
    e4b0:	stur	w10, [x29, #-112]
    e4b4:	b	e574 <BZ2_decompress@@Base+0x32d8>
    e4b8:	ldr	x8, [sp, #32]
    e4bc:	ldr	x9, [x8, #136]
    e4c0:	ldr	x9, [x9]
    e4c4:	ldr	w10, [x9, #8]
    e4c8:	cbnz	w10, e4d4 <BZ2_decompress@@Base+0x3238>
    e4cc:	stur	wzr, [x29, #-24]
    e4d0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e4d4:	ldr	x8, [sp, #32]
    e4d8:	ldr	x9, [x8, #136]
    e4dc:	ldr	w10, [x9, #32]
    e4e0:	ldr	x9, [x8, #136]
    e4e4:	ldr	x9, [x9]
    e4e8:	ldr	x9, [x9]
    e4ec:	ldrb	w11, [x9]
    e4f0:	orr	w10, w11, w10, lsl #8
    e4f4:	ldr	x9, [x8, #136]
    e4f8:	str	w10, [x9, #32]
    e4fc:	ldr	x9, [x8, #136]
    e500:	ldr	w10, [x9, #36]
    e504:	add	w10, w10, #0x8
    e508:	str	w10, [x9, #36]
    e50c:	ldr	x9, [x8, #136]
    e510:	ldr	x9, [x9]
    e514:	ldr	x12, [x9]
    e518:	add	x12, x12, #0x1
    e51c:	str	x12, [x9]
    e520:	ldr	x9, [x8, #136]
    e524:	ldr	x9, [x9]
    e528:	ldr	w10, [x9, #8]
    e52c:	subs	w10, w10, #0x1
    e530:	str	w10, [x9, #8]
    e534:	ldr	x9, [x8, #136]
    e538:	ldr	x9, [x9]
    e53c:	ldr	w10, [x9, #12]
    e540:	add	w10, w10, #0x1
    e544:	str	w10, [x9, #12]
    e548:	ldr	x9, [x8, #136]
    e54c:	ldr	x9, [x9]
    e550:	ldr	w10, [x9, #12]
    e554:	cbnz	w10, e570 <BZ2_decompress@@Base+0x32d4>
    e558:	ldr	x8, [sp, #32]
    e55c:	ldr	x9, [x8, #136]
    e560:	ldr	x9, [x9]
    e564:	ldr	w10, [x9, #16]
    e568:	add	w10, w10, #0x1
    e56c:	str	w10, [x9, #16]
    e570:	b	e448 <BZ2_decompress@@Base+0x31ac>
    e574:	ldur	w8, [x29, #-108]
    e578:	cmp	w8, #0x14
    e57c:	b.le	e58c <BZ2_decompress@@Base+0x32f0>
    e580:	mov	w8, #0xfffffffc            	// #-4
    e584:	stur	w8, [x29, #-24]
    e588:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e58c:	ldur	w8, [x29, #-112]
    e590:	ldr	x9, [sp, #32]
    e594:	ldr	x10, [x9, #16]
    e598:	ldursw	x11, [x29, #-108]
    e59c:	ldr	w12, [x10, x11, lsl #2]
    e5a0:	cmp	w8, w12
    e5a4:	b.gt	e5ac <BZ2_decompress@@Base+0x3310>
    e5a8:	b	e6ec <BZ2_decompress@@Base+0x3450>
    e5ac:	ldur	w8, [x29, #-108]
    e5b0:	add	w8, w8, #0x1
    e5b4:	stur	w8, [x29, #-108]
    e5b8:	ldr	x8, [sp, #32]
    e5bc:	ldr	x9, [x8, #136]
    e5c0:	mov	w10, #0x27                  	// #39
    e5c4:	str	w10, [x9, #8]
    e5c8:	ldr	x8, [sp, #32]
    e5cc:	ldr	x9, [x8, #136]
    e5d0:	ldr	w10, [x9, #36]
    e5d4:	cmp	w10, #0x1
    e5d8:	b.lt	e61c <BZ2_decompress@@Base+0x3380>  // b.tstop
    e5dc:	ldr	x8, [sp, #32]
    e5e0:	ldr	x9, [x8, #136]
    e5e4:	ldr	w10, [x9, #32]
    e5e8:	ldr	x9, [x8, #136]
    e5ec:	ldr	w11, [x9, #36]
    e5f0:	subs	w11, w11, #0x1
    e5f4:	lsr	w10, w10, w11
    e5f8:	and	w10, w10, #0x1
    e5fc:	str	w10, [sp, #124]
    e600:	ldr	x9, [x8, #136]
    e604:	ldr	w10, [x9, #36]
    e608:	subs	w10, w10, #0x1
    e60c:	str	w10, [x9, #36]
    e610:	ldr	w10, [sp, #124]
    e614:	stur	w10, [x29, #-116]
    e618:	b	e6d8 <BZ2_decompress@@Base+0x343c>
    e61c:	ldr	x8, [sp, #32]
    e620:	ldr	x9, [x8, #136]
    e624:	ldr	x9, [x9]
    e628:	ldr	w10, [x9, #8]
    e62c:	cbnz	w10, e638 <BZ2_decompress@@Base+0x339c>
    e630:	stur	wzr, [x29, #-24]
    e634:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e638:	ldr	x8, [sp, #32]
    e63c:	ldr	x9, [x8, #136]
    e640:	ldr	w10, [x9, #32]
    e644:	ldr	x9, [x8, #136]
    e648:	ldr	x9, [x9]
    e64c:	ldr	x9, [x9]
    e650:	ldrb	w11, [x9]
    e654:	orr	w10, w11, w10, lsl #8
    e658:	ldr	x9, [x8, #136]
    e65c:	str	w10, [x9, #32]
    e660:	ldr	x9, [x8, #136]
    e664:	ldr	w10, [x9, #36]
    e668:	add	w10, w10, #0x8
    e66c:	str	w10, [x9, #36]
    e670:	ldr	x9, [x8, #136]
    e674:	ldr	x9, [x9]
    e678:	ldr	x12, [x9]
    e67c:	add	x12, x12, #0x1
    e680:	str	x12, [x9]
    e684:	ldr	x9, [x8, #136]
    e688:	ldr	x9, [x9]
    e68c:	ldr	w10, [x9, #8]
    e690:	subs	w10, w10, #0x1
    e694:	str	w10, [x9, #8]
    e698:	ldr	x9, [x8, #136]
    e69c:	ldr	x9, [x9]
    e6a0:	ldr	w10, [x9, #12]
    e6a4:	add	w10, w10, #0x1
    e6a8:	str	w10, [x9, #12]
    e6ac:	ldr	x9, [x8, #136]
    e6b0:	ldr	x9, [x9]
    e6b4:	ldr	w10, [x9, #12]
    e6b8:	cbnz	w10, e6d4 <BZ2_decompress@@Base+0x3438>
    e6bc:	ldr	x8, [sp, #32]
    e6c0:	ldr	x9, [x8, #136]
    e6c4:	ldr	x9, [x9]
    e6c8:	ldr	w10, [x9, #16]
    e6cc:	add	w10, w10, #0x1
    e6d0:	str	w10, [x9, #16]
    e6d4:	b	e5c8 <BZ2_decompress@@Base+0x332c>
    e6d8:	ldur	w8, [x29, #-112]
    e6dc:	ldur	w9, [x29, #-116]
    e6e0:	orr	w8, w9, w8, lsl #1
    e6e4:	stur	w8, [x29, #-112]
    e6e8:	b	e574 <BZ2_decompress@@Base+0x32d8>
    e6ec:	ldur	w8, [x29, #-112]
    e6f0:	ldr	x9, [sp, #32]
    e6f4:	ldr	x10, [x9, #8]
    e6f8:	ldursw	x11, [x29, #-108]
    e6fc:	ldr	w12, [x10, x11, lsl #2]
    e700:	subs	w8, w8, w12
    e704:	cmp	w8, #0x0
    e708:	cset	w8, lt  // lt = tstop
    e70c:	tbnz	w8, #0, e730 <BZ2_decompress@@Base+0x3494>
    e710:	ldur	w8, [x29, #-112]
    e714:	ldr	x9, [sp, #32]
    e718:	ldr	x10, [x9, #8]
    e71c:	ldursw	x11, [x29, #-108]
    e720:	ldr	w12, [x10, x11, lsl #2]
    e724:	subs	w8, w8, w12
    e728:	cmp	w8, #0x102
    e72c:	b.lt	e73c <BZ2_decompress@@Base+0x34a0>  // b.tstop
    e730:	mov	w8, #0xfffffffc            	// #-4
    e734:	stur	w8, [x29, #-24]
    e738:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e73c:	ldr	x8, [sp, #32]
    e740:	ldr	x9, [x8]
    e744:	ldur	w10, [x29, #-112]
    e748:	ldr	x11, [x8, #8]
    e74c:	ldursw	x12, [x29, #-108]
    e750:	ldr	w13, [x11, x12, lsl #2]
    e754:	subs	w10, w10, w13
    e758:	ldr	w10, [x9, w10, sxtw #2]
    e75c:	stur	w10, [x29, #-80]
    e760:	ldur	w8, [x29, #-80]
    e764:	mov	w9, #0x1                   	// #1
    e768:	str	w9, [sp, #12]
    e76c:	cbz	w8, e780 <BZ2_decompress@@Base+0x34e4>
    e770:	ldur	w8, [x29, #-80]
    e774:	cmp	w8, #0x1
    e778:	cset	w8, eq  // eq = none
    e77c:	str	w8, [sp, #12]
    e780:	ldr	w8, [sp, #12]
    e784:	tbnz	w8, #0, e2f0 <BZ2_decompress@@Base+0x3054>
    e788:	ldur	w8, [x29, #-92]
    e78c:	add	w8, w8, #0x1
    e790:	stur	w8, [x29, #-92]
    e794:	ldr	x9, [sp, #32]
    e798:	ldr	x10, [x9, #136]
    e79c:	add	x10, x10, #0xd8c
    e7a0:	ldr	x11, [x9, #136]
    e7a4:	add	x11, x11, #0xe8c
    e7a8:	ldr	x12, [x9, #136]
    e7ac:	ldrsw	x12, [x12, #7820]
    e7b0:	ldrb	w8, [x11, x12]
    e7b4:	mov	w11, w8
    e7b8:	add	x10, x10, x11
    e7bc:	ldrb	w8, [x10]
    e7c0:	sturb	w8, [x29, #-17]
    e7c4:	ldur	w8, [x29, #-92]
    e7c8:	ldr	x10, [x9, #136]
    e7cc:	add	x10, x10, #0x44
    e7d0:	ldurb	w13, [x29, #-17]
    e7d4:	mov	w11, w13
    e7d8:	mov	x12, #0x4                   	// #4
    e7dc:	mul	x11, x12, x11
    e7e0:	add	x10, x10, x11
    e7e4:	ldr	w13, [x10]
    e7e8:	add	w8, w13, w8
    e7ec:	str	w8, [x10]
    e7f0:	ldr	x10, [x9, #136]
    e7f4:	ldrb	w8, [x10, #44]
    e7f8:	cbz	w8, e86c <BZ2_decompress@@Base+0x35d0>
    e7fc:	ldur	w8, [x29, #-92]
    e800:	cmp	w8, #0x0
    e804:	cset	w8, le
    e808:	tbnz	w8, #0, e868 <BZ2_decompress@@Base+0x35cc>
    e80c:	ldur	w8, [x29, #-88]
    e810:	ldur	w9, [x29, #-84]
    e814:	cmp	w8, w9
    e818:	b.lt	e828 <BZ2_decompress@@Base+0x358c>  // b.tstop
    e81c:	mov	w8, #0xfffffffc            	// #-4
    e820:	stur	w8, [x29, #-24]
    e824:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e828:	ldurb	w8, [x29, #-17]
    e82c:	ldr	x9, [sp, #32]
    e830:	ldr	x10, [x9, #136]
    e834:	ldr	x10, [x10, #3160]
    e838:	ldursw	x11, [x29, #-88]
    e83c:	mov	x12, #0x2                   	// #2
    e840:	mul	x11, x12, x11
    e844:	add	x10, x10, x11
    e848:	strh	w8, [x10]
    e84c:	ldur	w8, [x29, #-88]
    e850:	add	w8, w8, #0x1
    e854:	stur	w8, [x29, #-88]
    e858:	ldur	w8, [x29, #-92]
    e85c:	subs	w8, w8, #0x1
    e860:	stur	w8, [x29, #-92]
    e864:	b	e7fc <BZ2_decompress@@Base+0x3560>
    e868:	b	e8cc <BZ2_decompress@@Base+0x3630>
    e86c:	ldur	w8, [x29, #-92]
    e870:	cmp	w8, #0x0
    e874:	cset	w8, le
    e878:	tbnz	w8, #0, e8cc <BZ2_decompress@@Base+0x3630>
    e87c:	ldur	w8, [x29, #-88]
    e880:	ldur	w9, [x29, #-84]
    e884:	cmp	w8, w9
    e888:	b.lt	e898 <BZ2_decompress@@Base+0x35fc>  // b.tstop
    e88c:	mov	w8, #0xfffffffc            	// #-4
    e890:	stur	w8, [x29, #-24]
    e894:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e898:	ldurb	w8, [x29, #-17]
    e89c:	ldr	x9, [sp, #32]
    e8a0:	ldr	x10, [x9, #136]
    e8a4:	ldr	x10, [x10, #3152]
    e8a8:	ldursw	x11, [x29, #-88]
    e8ac:	str	w8, [x10, x11, lsl #2]
    e8b0:	ldur	w8, [x29, #-88]
    e8b4:	add	w8, w8, #0x1
    e8b8:	stur	w8, [x29, #-88]
    e8bc:	ldur	w8, [x29, #-92]
    e8c0:	subs	w8, w8, #0x1
    e8c4:	stur	w8, [x29, #-92]
    e8c8:	b	e86c <BZ2_decompress@@Base+0x35d0>
    e8cc:	b	e2b8 <BZ2_decompress@@Base+0x301c>
    e8d0:	ldur	w8, [x29, #-88]
    e8d4:	ldur	w9, [x29, #-84]
    e8d8:	cmp	w8, w9
    e8dc:	b.lt	e8ec <BZ2_decompress@@Base+0x3650>  // b.tstop
    e8e0:	mov	w8, #0xfffffffc            	// #-4
    e8e4:	stur	w8, [x29, #-24]
    e8e8:	b	1083c <BZ2_decompress@@Base+0x55a0>
    e8ec:	ldur	w8, [x29, #-80]
    e8f0:	subs	w8, w8, #0x1
    e8f4:	str	w8, [sp, #96]
    e8f8:	ldr	w8, [sp, #96]
    e8fc:	cmp	w8, #0x10
    e900:	b.cs	eaf0 <BZ2_decompress@@Base+0x3854>  // b.hs, b.nlast
    e904:	ldr	x8, [sp, #32]
    e908:	ldr	x9, [x8, #136]
    e90c:	ldr	w10, [x9, #7820]
    e910:	str	w10, [sp, #108]
    e914:	ldr	x9, [x8, #136]
    e918:	add	x9, x9, #0xe8c
    e91c:	ldr	w10, [sp, #108]
    e920:	ldr	w11, [sp, #96]
    e924:	add	w10, w10, w11
    e928:	mov	w12, w10
    e92c:	ubfx	x12, x12, #0, #32
    e930:	add	x9, x9, x12
    e934:	ldrb	w10, [x9]
    e938:	sturb	w10, [x29, #-17]
    e93c:	ldr	w8, [sp, #96]
    e940:	cmp	w8, #0x3
    e944:	b.ls	ea60 <BZ2_decompress@@Base+0x37c4>  // b.plast
    e948:	ldr	w8, [sp, #108]
    e94c:	ldr	w9, [sp, #96]
    e950:	add	w8, w8, w9
    e954:	str	w8, [sp, #92]
    e958:	ldr	x10, [sp, #32]
    e95c:	ldr	x11, [x10, #136]
    e960:	add	x11, x11, #0xe8c
    e964:	ldr	w8, [sp, #92]
    e968:	subs	w8, w8, #0x1
    e96c:	mov	w0, w8
    e970:	sxtw	x12, w0
    e974:	add	x11, x11, x12
    e978:	ldrb	w8, [x11]
    e97c:	ldr	x11, [x10, #136]
    e980:	add	x11, x11, #0xe8c
    e984:	ldrsw	x12, [sp, #92]
    e988:	add	x11, x11, x12
    e98c:	strb	w8, [x11]
    e990:	ldr	x11, [x10, #136]
    e994:	add	x11, x11, #0xe8c
    e998:	ldr	w8, [sp, #92]
    e99c:	subs	w8, w8, #0x2
    e9a0:	mov	w0, w8
    e9a4:	sxtw	x12, w0
    e9a8:	add	x11, x11, x12
    e9ac:	ldrb	w8, [x11]
    e9b0:	ldr	x11, [x10, #136]
    e9b4:	add	x11, x11, #0xe8c
    e9b8:	ldr	w9, [sp, #92]
    e9bc:	subs	w9, w9, #0x1
    e9c0:	mov	w0, w9
    e9c4:	sxtw	x12, w0
    e9c8:	add	x11, x11, x12
    e9cc:	strb	w8, [x11]
    e9d0:	ldr	x11, [x10, #136]
    e9d4:	add	x11, x11, #0xe8c
    e9d8:	ldr	w8, [sp, #92]
    e9dc:	subs	w8, w8, #0x3
    e9e0:	mov	w0, w8
    e9e4:	sxtw	x12, w0
    e9e8:	add	x11, x11, x12
    e9ec:	ldrb	w8, [x11]
    e9f0:	ldr	x11, [x10, #136]
    e9f4:	add	x11, x11, #0xe8c
    e9f8:	ldr	w9, [sp, #92]
    e9fc:	subs	w9, w9, #0x2
    ea00:	mov	w0, w9
    ea04:	sxtw	x12, w0
    ea08:	add	x11, x11, x12
    ea0c:	strb	w8, [x11]
    ea10:	ldr	x11, [x10, #136]
    ea14:	add	x11, x11, #0xe8c
    ea18:	ldr	w8, [sp, #92]
    ea1c:	subs	w8, w8, #0x4
    ea20:	mov	w0, w8
    ea24:	sxtw	x12, w0
    ea28:	add	x11, x11, x12
    ea2c:	ldrb	w8, [x11]
    ea30:	ldr	x11, [x10, #136]
    ea34:	add	x11, x11, #0xe8c
    ea38:	ldr	w9, [sp, #92]
    ea3c:	subs	w9, w9, #0x3
    ea40:	mov	w0, w9
    ea44:	sxtw	x12, w0
    ea48:	add	x11, x11, x12
    ea4c:	strb	w8, [x11]
    ea50:	ldr	w8, [sp, #96]
    ea54:	subs	w8, w8, #0x4
    ea58:	str	w8, [sp, #96]
    ea5c:	b	e93c <BZ2_decompress@@Base+0x36a0>
    ea60:	ldr	w8, [sp, #96]
    ea64:	cmp	w8, #0x0
    ea68:	cset	w8, ls  // ls = plast
    ea6c:	tbnz	w8, #0, ead0 <BZ2_decompress@@Base+0x3834>
    ea70:	ldr	x8, [sp, #32]
    ea74:	ldr	x9, [x8, #136]
    ea78:	add	x9, x9, #0xe8c
    ea7c:	ldr	w10, [sp, #108]
    ea80:	ldr	w11, [sp, #96]
    ea84:	add	w10, w10, w11
    ea88:	subs	w10, w10, #0x1
    ea8c:	mov	w12, w10
    ea90:	ubfx	x12, x12, #0, #32
    ea94:	add	x9, x9, x12
    ea98:	ldrb	w10, [x9]
    ea9c:	ldr	x9, [x8, #136]
    eaa0:	add	x9, x9, #0xe8c
    eaa4:	ldr	w11, [sp, #108]
    eaa8:	ldr	w13, [sp, #96]
    eaac:	add	w11, w11, w13
    eab0:	mov	w12, w11
    eab4:	ubfx	x12, x12, #0, #32
    eab8:	add	x9, x9, x12
    eabc:	strb	w10, [x9]
    eac0:	ldr	w10, [sp, #96]
    eac4:	subs	w10, w10, #0x1
    eac8:	str	w10, [sp, #96]
    eacc:	b	ea60 <BZ2_decompress@@Base+0x37c4>
    ead0:	ldurb	w8, [x29, #-17]
    ead4:	ldr	x9, [sp, #32]
    ead8:	ldr	x10, [x9, #136]
    eadc:	add	x10, x10, #0xe8c
    eae0:	ldrsw	x11, [sp, #108]
    eae4:	add	x10, x10, x11
    eae8:	strb	w8, [x10]
    eaec:	b	ed94 <BZ2_decompress@@Base+0x3af8>
    eaf0:	ldr	w8, [sp, #96]
    eaf4:	mov	w9, #0x10                  	// #16
    eaf8:	udiv	w8, w8, w9
    eafc:	str	w8, [sp, #104]
    eb00:	ldr	w8, [sp, #96]
    eb04:	udiv	w10, w8, w9
    eb08:	mul	w9, w10, w9
    eb0c:	subs	w8, w8, w9
    eb10:	str	w8, [sp, #100]
    eb14:	ldr	x11, [sp, #32]
    eb18:	ldr	x12, [x11, #136]
    eb1c:	mov	x13, #0x1e8c                	// #7820
    eb20:	add	x12, x12, x13
    eb24:	ldrsw	x13, [sp, #104]
    eb28:	ldr	w8, [x12, x13, lsl #2]
    eb2c:	ldr	w9, [sp, #100]
    eb30:	add	w8, w8, w9
    eb34:	str	w8, [sp, #108]
    eb38:	ldr	x12, [x11, #136]
    eb3c:	add	x12, x12, #0xe8c
    eb40:	ldrsw	x13, [sp, #108]
    eb44:	add	x12, x12, x13
    eb48:	ldrb	w8, [x12]
    eb4c:	sturb	w8, [x29, #-17]
    eb50:	ldr	w8, [sp, #108]
    eb54:	ldr	x9, [sp, #32]
    eb58:	ldr	x10, [x9, #136]
    eb5c:	mov	x11, #0x1e8c                	// #7820
    eb60:	add	x10, x10, x11
    eb64:	ldrsw	x11, [sp, #104]
    eb68:	ldr	w12, [x10, x11, lsl #2]
    eb6c:	cmp	w8, w12
    eb70:	b.le	ebbc <BZ2_decompress@@Base+0x3920>
    eb74:	ldr	x8, [sp, #32]
    eb78:	ldr	x9, [x8, #136]
    eb7c:	add	x9, x9, #0xe8c
    eb80:	ldr	w10, [sp, #108]
    eb84:	subs	w10, w10, #0x1
    eb88:	mov	w0, w10
    eb8c:	sxtw	x11, w0
    eb90:	add	x9, x9, x11
    eb94:	ldrb	w10, [x9]
    eb98:	ldr	x9, [x8, #136]
    eb9c:	add	x9, x9, #0xe8c
    eba0:	ldrsw	x11, [sp, #108]
    eba4:	add	x9, x9, x11
    eba8:	strb	w10, [x9]
    ebac:	ldr	w10, [sp, #108]
    ebb0:	subs	w10, w10, #0x1
    ebb4:	str	w10, [sp, #108]
    ebb8:	b	eb50 <BZ2_decompress@@Base+0x38b4>
    ebbc:	ldr	x8, [sp, #32]
    ebc0:	ldr	x9, [x8, #136]
    ebc4:	mov	x10, #0x1e8c                	// #7820
    ebc8:	add	x9, x9, x10
    ebcc:	ldrsw	x10, [sp, #104]
    ebd0:	mov	x11, #0x4                   	// #4
    ebd4:	mul	x10, x11, x10
    ebd8:	add	x9, x9, x10
    ebdc:	ldr	w12, [x9]
    ebe0:	add	w12, w12, #0x1
    ebe4:	str	w12, [x9]
    ebe8:	ldr	w8, [sp, #104]
    ebec:	cmp	w8, #0x0
    ebf0:	cset	w8, le
    ebf4:	tbnz	w8, #0, ec88 <BZ2_decompress@@Base+0x39ec>
    ebf8:	ldr	x8, [sp, #32]
    ebfc:	ldr	x9, [x8, #136]
    ec00:	mov	x10, #0x1e8c                	// #7820
    ec04:	add	x9, x9, x10
    ec08:	ldrsw	x11, [sp, #104]
    ec0c:	mov	x12, #0x4                   	// #4
    ec10:	mul	x11, x12, x11
    ec14:	add	x9, x9, x11
    ec18:	ldr	w13, [x9]
    ec1c:	subs	w13, w13, #0x1
    ec20:	str	w13, [x9]
    ec24:	ldr	x9, [x8, #136]
    ec28:	add	x9, x9, #0xe8c
    ec2c:	ldr	x11, [x8, #136]
    ec30:	add	x11, x11, x10
    ec34:	ldr	w13, [sp, #104]
    ec38:	subs	w13, w13, #0x1
    ec3c:	ldr	w13, [x11, w13, sxtw #2]
    ec40:	add	w13, w13, #0x10
    ec44:	subs	w13, w13, #0x1
    ec48:	mov	w0, w13
    ec4c:	sxtw	x11, w0
    ec50:	add	x9, x9, x11
    ec54:	ldrb	w13, [x9]
    ec58:	ldr	x9, [x8, #136]
    ec5c:	add	x9, x9, #0xe8c
    ec60:	ldr	x11, [x8, #136]
    ec64:	add	x10, x11, x10
    ec68:	ldrsw	x11, [sp, #104]
    ec6c:	ldrsw	x10, [x10, x11, lsl #2]
    ec70:	add	x9, x9, x10
    ec74:	strb	w13, [x9]
    ec78:	ldr	w13, [sp, #104]
    ec7c:	subs	w13, w13, #0x1
    ec80:	str	w13, [sp, #104]
    ec84:	b	ebe8 <BZ2_decompress@@Base+0x394c>
    ec88:	ldr	x8, [sp, #32]
    ec8c:	ldr	x9, [x8, #136]
    ec90:	ldr	w10, [x9, #7820]
    ec94:	subs	w10, w10, #0x1
    ec98:	str	w10, [x9, #7820]
    ec9c:	ldurb	w10, [x29, #-17]
    eca0:	ldr	x9, [x8, #136]
    eca4:	add	x9, x9, #0xe8c
    eca8:	ldr	x11, [x8, #136]
    ecac:	ldrsw	x11, [x11, #7820]
    ecb0:	add	x9, x9, x11
    ecb4:	strb	w10, [x9]
    ecb8:	ldr	x9, [x8, #136]
    ecbc:	ldr	w10, [x9, #7820]
    ecc0:	cbnz	w10, ed94 <BZ2_decompress@@Base+0x3af8>
    ecc4:	mov	w8, #0xfff                 	// #4095
    ecc8:	str	w8, [sp, #112]
    eccc:	mov	w8, #0xf                   	// #15
    ecd0:	str	w8, [sp, #120]
    ecd4:	ldr	w8, [sp, #120]
    ecd8:	cmp	w8, #0x0
    ecdc:	cset	w8, lt  // lt = tstop
    ece0:	tbnz	w8, #0, ed94 <BZ2_decompress@@Base+0x3af8>
    ece4:	mov	w8, #0xf                   	// #15
    ece8:	str	w8, [sp, #116]
    ecec:	ldr	w8, [sp, #116]
    ecf0:	cmp	w8, #0x0
    ecf4:	cset	w8, lt  // lt = tstop
    ecf8:	tbnz	w8, #0, ed64 <BZ2_decompress@@Base+0x3ac8>
    ecfc:	ldr	x8, [sp, #32]
    ed00:	ldr	x9, [x8, #136]
    ed04:	add	x9, x9, #0xe8c
    ed08:	ldr	x10, [x8, #136]
    ed0c:	mov	x11, #0x1e8c                	// #7820
    ed10:	add	x10, x10, x11
    ed14:	ldrsw	x11, [sp, #120]
    ed18:	ldr	w12, [x10, x11, lsl #2]
    ed1c:	ldr	w13, [sp, #116]
    ed20:	add	w12, w12, w13
    ed24:	mov	w0, w12
    ed28:	sxtw	x10, w0
    ed2c:	add	x9, x9, x10
    ed30:	ldrb	w12, [x9]
    ed34:	ldr	x9, [x8, #136]
    ed38:	add	x9, x9, #0xe8c
    ed3c:	ldrsw	x10, [sp, #112]
    ed40:	add	x9, x9, x10
    ed44:	strb	w12, [x9]
    ed48:	ldr	w12, [sp, #112]
    ed4c:	subs	w12, w12, #0x1
    ed50:	str	w12, [sp, #112]
    ed54:	ldr	w8, [sp, #116]
    ed58:	subs	w8, w8, #0x1
    ed5c:	str	w8, [sp, #116]
    ed60:	b	ecec <BZ2_decompress@@Base+0x3a50>
    ed64:	ldr	w8, [sp, #112]
    ed68:	add	w8, w8, #0x1
    ed6c:	ldr	x9, [sp, #32]
    ed70:	ldr	x10, [x9, #136]
    ed74:	mov	x11, #0x1e8c                	// #7820
    ed78:	add	x10, x10, x11
    ed7c:	ldrsw	x11, [sp, #120]
    ed80:	str	w8, [x10, x11, lsl #2]
    ed84:	ldr	w8, [sp, #120]
    ed88:	subs	w8, w8, #0x1
    ed8c:	str	w8, [sp, #120]
    ed90:	b	ecd4 <BZ2_decompress@@Base+0x3a38>
    ed94:	ldr	x8, [sp, #32]
    ed98:	ldr	x9, [x8, #136]
    ed9c:	add	x9, x9, #0x44
    eda0:	ldr	x10, [x8, #136]
    eda4:	add	x10, x10, #0xd8c
    eda8:	ldurb	w11, [x29, #-17]
    edac:	mov	w12, w11
    edb0:	ldrb	w11, [x10, x12]
    edb4:	mov	w10, w11
    edb8:	mov	x12, #0x4                   	// #4
    edbc:	mul	x10, x12, x10
    edc0:	add	x9, x9, x10
    edc4:	ldr	w11, [x9]
    edc8:	add	w11, w11, #0x1
    edcc:	str	w11, [x9]
    edd0:	ldr	x9, [x8, #136]
    edd4:	ldrb	w11, [x9, #44]
    edd8:	cbz	w11, ee14 <BZ2_decompress@@Base+0x3b78>
    eddc:	ldr	x8, [sp, #32]
    ede0:	ldr	x9, [x8, #136]
    ede4:	add	x9, x9, #0xd8c
    ede8:	ldurb	w10, [x29, #-17]
    edec:	mov	w11, w10
    edf0:	ldrb	w10, [x9, x11]
    edf4:	ldr	x9, [x8, #136]
    edf8:	ldr	x9, [x9, #3160]
    edfc:	ldursw	x11, [x29, #-88]
    ee00:	mov	x12, #0x2                   	// #2
    ee04:	mul	x11, x12, x11
    ee08:	add	x9, x9, x11
    ee0c:	strh	w10, [x9]
    ee10:	b	ee3c <BZ2_decompress@@Base+0x3ba0>
    ee14:	ldr	x8, [sp, #32]
    ee18:	ldr	x9, [x8, #136]
    ee1c:	add	x9, x9, #0xd8c
    ee20:	ldurb	w10, [x29, #-17]
    ee24:	mov	w11, w10
    ee28:	ldrb	w10, [x9, x11]
    ee2c:	ldr	x9, [x8, #136]
    ee30:	ldr	x9, [x9, #3152]
    ee34:	ldursw	x11, [x29, #-88]
    ee38:	str	w10, [x9, x11, lsl #2]
    ee3c:	ldur	w8, [x29, #-88]
    ee40:	add	w8, w8, #0x1
    ee44:	stur	w8, [x29, #-88]
    ee48:	ldur	w8, [x29, #-76]
    ee4c:	cbnz	w8, ef0c <BZ2_decompress@@Base+0x3c70>
    ee50:	ldur	w8, [x29, #-72]
    ee54:	add	w8, w8, #0x1
    ee58:	stur	w8, [x29, #-72]
    ee5c:	ldur	w8, [x29, #-72]
    ee60:	ldur	w9, [x29, #-64]
    ee64:	cmp	w8, w9
    ee68:	b.lt	ee78 <BZ2_decompress@@Base+0x3bdc>  // b.tstop
    ee6c:	mov	w8, #0xfffffffc            	// #-4
    ee70:	stur	w8, [x29, #-24]
    ee74:	b	1083c <BZ2_decompress@@Base+0x55a0>
    ee78:	mov	w8, #0x32                  	// #50
    ee7c:	stur	w8, [x29, #-76]
    ee80:	ldr	x9, [sp, #32]
    ee84:	ldr	x10, [x9, #136]
    ee88:	mov	x11, #0x1ecc                	// #7884
    ee8c:	add	x10, x10, x11
    ee90:	ldursw	x11, [x29, #-72]
    ee94:	ldrb	w8, [x10, x11]
    ee98:	stur	w8, [x29, #-120]
    ee9c:	ldr	x10, [x9, #136]
    eea0:	mov	x11, #0xfa0c                	// #64012
    eea4:	add	x10, x10, x11
    eea8:	ldursw	x11, [x29, #-120]
    eeac:	ldr	w8, [x10, x11, lsl #2]
    eeb0:	stur	w8, [x29, #-124]
    eeb4:	ldr	x10, [x9, #136]
    eeb8:	mov	x11, #0xb17c                	// #45436
    eebc:	add	x10, x10, x11
    eec0:	ldursw	x11, [x29, #-120]
    eec4:	mov	x12, #0x408                 	// #1032
    eec8:	mul	x11, x12, x11
    eecc:	add	x10, x10, x11
    eed0:	str	x10, [x9, #16]
    eed4:	ldr	x10, [x9, #136]
    eed8:	mov	x11, #0xe1dc                	// #57820
    eedc:	add	x10, x10, x11
    eee0:	ldursw	x11, [x29, #-120]
    eee4:	mul	x11, x12, x11
    eee8:	add	x10, x10, x11
    eeec:	str	x10, [x9]
    eef0:	ldr	x10, [x9, #136]
    eef4:	mov	x11, #0xc9ac                	// #51628
    eef8:	add	x10, x10, x11
    eefc:	ldursw	x11, [x29, #-120]
    ef00:	mul	x11, x12, x11
    ef04:	add	x10, x10, x11
    ef08:	str	x10, [x9, #8]
    ef0c:	ldur	w8, [x29, #-76]
    ef10:	subs	w8, w8, #0x1
    ef14:	stur	w8, [x29, #-76]
    ef18:	ldur	w8, [x29, #-124]
    ef1c:	stur	w8, [x29, #-108]
    ef20:	ldr	x8, [sp, #32]
    ef24:	ldr	x9, [x8, #136]
    ef28:	mov	w10, #0x28                  	// #40
    ef2c:	str	w10, [x9, #8]
    ef30:	ldr	x8, [sp, #32]
    ef34:	ldr	x9, [x8, #136]
    ef38:	ldr	w10, [x9, #36]
    ef3c:	ldur	w11, [x29, #-108]
    ef40:	cmp	w10, w11
    ef44:	b.lt	efa0 <BZ2_decompress@@Base+0x3d04>  // b.tstop
    ef48:	ldr	x8, [sp, #32]
    ef4c:	ldr	x9, [x8, #136]
    ef50:	ldr	w10, [x9, #32]
    ef54:	ldr	x9, [x8, #136]
    ef58:	ldr	w11, [x9, #36]
    ef5c:	ldur	w12, [x29, #-108]
    ef60:	subs	w11, w11, w12
    ef64:	lsr	w10, w10, w11
    ef68:	ldur	w11, [x29, #-108]
    ef6c:	mov	w12, #0x1                   	// #1
    ef70:	lsl	w11, w12, w11
    ef74:	subs	w11, w11, #0x1
    ef78:	and	w10, w10, w11
    ef7c:	str	w10, [sp, #88]
    ef80:	ldur	w10, [x29, #-108]
    ef84:	ldr	x9, [x8, #136]
    ef88:	ldr	w11, [x9, #36]
    ef8c:	subs	w10, w11, w10
    ef90:	str	w10, [x9, #36]
    ef94:	ldr	w10, [sp, #88]
    ef98:	stur	w10, [x29, #-112]
    ef9c:	b	f05c <BZ2_decompress@@Base+0x3dc0>
    efa0:	ldr	x8, [sp, #32]
    efa4:	ldr	x9, [x8, #136]
    efa8:	ldr	x9, [x9]
    efac:	ldr	w10, [x9, #8]
    efb0:	cbnz	w10, efbc <BZ2_decompress@@Base+0x3d20>
    efb4:	stur	wzr, [x29, #-24]
    efb8:	b	1083c <BZ2_decompress@@Base+0x55a0>
    efbc:	ldr	x8, [sp, #32]
    efc0:	ldr	x9, [x8, #136]
    efc4:	ldr	w10, [x9, #32]
    efc8:	ldr	x9, [x8, #136]
    efcc:	ldr	x9, [x9]
    efd0:	ldr	x9, [x9]
    efd4:	ldrb	w11, [x9]
    efd8:	orr	w10, w11, w10, lsl #8
    efdc:	ldr	x9, [x8, #136]
    efe0:	str	w10, [x9, #32]
    efe4:	ldr	x9, [x8, #136]
    efe8:	ldr	w10, [x9, #36]
    efec:	add	w10, w10, #0x8
    eff0:	str	w10, [x9, #36]
    eff4:	ldr	x9, [x8, #136]
    eff8:	ldr	x9, [x9]
    effc:	ldr	x12, [x9]
    f000:	add	x12, x12, #0x1
    f004:	str	x12, [x9]
    f008:	ldr	x9, [x8, #136]
    f00c:	ldr	x9, [x9]
    f010:	ldr	w10, [x9, #8]
    f014:	subs	w10, w10, #0x1
    f018:	str	w10, [x9, #8]
    f01c:	ldr	x9, [x8, #136]
    f020:	ldr	x9, [x9]
    f024:	ldr	w10, [x9, #12]
    f028:	add	w10, w10, #0x1
    f02c:	str	w10, [x9, #12]
    f030:	ldr	x9, [x8, #136]
    f034:	ldr	x9, [x9]
    f038:	ldr	w10, [x9, #12]
    f03c:	cbnz	w10, f058 <BZ2_decompress@@Base+0x3dbc>
    f040:	ldr	x8, [sp, #32]
    f044:	ldr	x9, [x8, #136]
    f048:	ldr	x9, [x9]
    f04c:	ldr	w10, [x9, #16]
    f050:	add	w10, w10, #0x1
    f054:	str	w10, [x9, #16]
    f058:	b	ef30 <BZ2_decompress@@Base+0x3c94>
    f05c:	ldur	w8, [x29, #-108]
    f060:	cmp	w8, #0x14
    f064:	b.le	f074 <BZ2_decompress@@Base+0x3dd8>
    f068:	mov	w8, #0xfffffffc            	// #-4
    f06c:	stur	w8, [x29, #-24]
    f070:	b	1083c <BZ2_decompress@@Base+0x55a0>
    f074:	ldur	w8, [x29, #-112]
    f078:	ldr	x9, [sp, #32]
    f07c:	ldr	x10, [x9, #16]
    f080:	ldursw	x11, [x29, #-108]
    f084:	ldr	w12, [x10, x11, lsl #2]
    f088:	cmp	w8, w12
    f08c:	b.gt	f094 <BZ2_decompress@@Base+0x3df8>
    f090:	b	f1d4 <BZ2_decompress@@Base+0x3f38>
    f094:	ldur	w8, [x29, #-108]
    f098:	add	w8, w8, #0x1
    f09c:	stur	w8, [x29, #-108]
    f0a0:	ldr	x8, [sp, #32]
    f0a4:	ldr	x9, [x8, #136]
    f0a8:	mov	w10, #0x29                  	// #41
    f0ac:	str	w10, [x9, #8]
    f0b0:	ldr	x8, [sp, #32]
    f0b4:	ldr	x9, [x8, #136]
    f0b8:	ldr	w10, [x9, #36]
    f0bc:	cmp	w10, #0x1
    f0c0:	b.lt	f104 <BZ2_decompress@@Base+0x3e68>  // b.tstop
    f0c4:	ldr	x8, [sp, #32]
    f0c8:	ldr	x9, [x8, #136]
    f0cc:	ldr	w10, [x9, #32]
    f0d0:	ldr	x9, [x8, #136]
    f0d4:	ldr	w11, [x9, #36]
    f0d8:	subs	w11, w11, #0x1
    f0dc:	lsr	w10, w10, w11
    f0e0:	and	w10, w10, #0x1
    f0e4:	str	w10, [sp, #84]
    f0e8:	ldr	x9, [x8, #136]
    f0ec:	ldr	w10, [x9, #36]
    f0f0:	subs	w10, w10, #0x1
    f0f4:	str	w10, [x9, #36]
    f0f8:	ldr	w10, [sp, #84]
    f0fc:	stur	w10, [x29, #-116]
    f100:	b	f1c0 <BZ2_decompress@@Base+0x3f24>
    f104:	ldr	x8, [sp, #32]
    f108:	ldr	x9, [x8, #136]
    f10c:	ldr	x9, [x9]
    f110:	ldr	w10, [x9, #8]
    f114:	cbnz	w10, f120 <BZ2_decompress@@Base+0x3e84>
    f118:	stur	wzr, [x29, #-24]
    f11c:	b	1083c <BZ2_decompress@@Base+0x55a0>
    f120:	ldr	x8, [sp, #32]
    f124:	ldr	x9, [x8, #136]
    f128:	ldr	w10, [x9, #32]
    f12c:	ldr	x9, [x8, #136]
    f130:	ldr	x9, [x9]
    f134:	ldr	x9, [x9]
    f138:	ldrb	w11, [x9]
    f13c:	orr	w10, w11, w10, lsl #8
    f140:	ldr	x9, [x8, #136]
    f144:	str	w10, [x9, #32]
    f148:	ldr	x9, [x8, #136]
    f14c:	ldr	w10, [x9, #36]
    f150:	add	w10, w10, #0x8
    f154:	str	w10, [x9, #36]
    f158:	ldr	x9, [x8, #136]
    f15c:	ldr	x9, [x9]
    f160:	ldr	x12, [x9]
    f164:	add	x12, x12, #0x1
    f168:	str	x12, [x9]
    f16c:	ldr	x9, [x8, #136]
    f170:	ldr	x9, [x9]
    f174:	ldr	w10, [x9, #8]
    f178:	subs	w10, w10, #0x1
    f17c:	str	w10, [x9, #8]
    f180:	ldr	x9, [x8, #136]
    f184:	ldr	x9, [x9]
    f188:	ldr	w10, [x9, #12]
    f18c:	add	w10, w10, #0x1
    f190:	str	w10, [x9, #12]
    f194:	ldr	x9, [x8, #136]
    f198:	ldr	x9, [x9]
    f19c:	ldr	w10, [x9, #12]
    f1a0:	cbnz	w10, f1bc <BZ2_decompress@@Base+0x3f20>
    f1a4:	ldr	x8, [sp, #32]
    f1a8:	ldr	x9, [x8, #136]
    f1ac:	ldr	x9, [x9]
    f1b0:	ldr	w10, [x9, #16]
    f1b4:	add	w10, w10, #0x1
    f1b8:	str	w10, [x9, #16]
    f1bc:	b	f0b0 <BZ2_decompress@@Base+0x3e14>
    f1c0:	ldur	w8, [x29, #-112]
    f1c4:	ldur	w9, [x29, #-116]
    f1c8:	orr	w8, w9, w8, lsl #1
    f1cc:	stur	w8, [x29, #-112]
    f1d0:	b	f05c <BZ2_decompress@@Base+0x3dc0>
    f1d4:	ldur	w8, [x29, #-112]
    f1d8:	ldr	x9, [sp, #32]
    f1dc:	ldr	x10, [x9, #8]
    f1e0:	ldursw	x11, [x29, #-108]
    f1e4:	ldr	w12, [x10, x11, lsl #2]
    f1e8:	subs	w8, w8, w12
    f1ec:	cmp	w8, #0x0
    f1f0:	cset	w8, lt  // lt = tstop
    f1f4:	tbnz	w8, #0, f218 <BZ2_decompress@@Base+0x3f7c>
    f1f8:	ldur	w8, [x29, #-112]
    f1fc:	ldr	x9, [sp, #32]
    f200:	ldr	x10, [x9, #8]
    f204:	ldursw	x11, [x29, #-108]
    f208:	ldr	w12, [x10, x11, lsl #2]
    f20c:	subs	w8, w8, w12
    f210:	cmp	w8, #0x102
    f214:	b.lt	f224 <BZ2_decompress@@Base+0x3f88>  // b.tstop
    f218:	mov	w8, #0xfffffffc            	// #-4
    f21c:	stur	w8, [x29, #-24]
    f220:	b	1083c <BZ2_decompress@@Base+0x55a0>
    f224:	ldr	x8, [sp, #32]
    f228:	ldr	x9, [x8]
    f22c:	ldur	w10, [x29, #-112]
    f230:	ldr	x11, [x8, #8]
    f234:	ldursw	x12, [x29, #-108]
    f238:	ldr	w13, [x11, x12, lsl #2]
    f23c:	subs	w10, w10, w13
    f240:	ldr	w10, [x9, w10, sxtw #2]
    f244:	stur	w10, [x29, #-80]
    f248:	b	e2b8 <BZ2_decompress@@Base+0x301c>
    f24c:	ldr	x8, [sp, #32]
    f250:	ldr	x9, [x8, #136]
    f254:	ldr	w10, [x9, #56]
    f258:	cmp	w10, #0x0
    f25c:	cset	w10, lt  // lt = tstop
    f260:	tbnz	w10, #0, f27c <BZ2_decompress@@Base+0x3fe0>
    f264:	ldr	x8, [sp, #32]
    f268:	ldr	x9, [x8, #136]
    f26c:	ldr	w10, [x9, #56]
    f270:	ldur	w11, [x29, #-88]
    f274:	cmp	w10, w11
    f278:	b.lt	f288 <BZ2_decompress@@Base+0x3fec>  // b.tstop
    f27c:	mov	w8, #0xfffffffc            	// #-4
    f280:	stur	w8, [x29, #-24]
    f284:	b	1083c <BZ2_decompress@@Base+0x55a0>
    f288:	stur	wzr, [x29, #-44]
    f28c:	ldur	w8, [x29, #-44]
    f290:	cmp	w8, #0xff
    f294:	b.gt	f2f4 <BZ2_decompress@@Base+0x4058>
    f298:	ldr	x8, [sp, #32]
    f29c:	ldr	x9, [x8, #136]
    f2a0:	add	x9, x9, #0x44
    f2a4:	ldursw	x10, [x29, #-44]
    f2a8:	ldr	w11, [x9, x10, lsl #2]
    f2ac:	cmp	w11, #0x0
    f2b0:	cset	w11, lt  // lt = tstop
    f2b4:	tbnz	w11, #0, f2d8 <BZ2_decompress@@Base+0x403c>
    f2b8:	ldr	x8, [sp, #32]
    f2bc:	ldr	x9, [x8, #136]
    f2c0:	add	x9, x9, #0x44
    f2c4:	ldursw	x10, [x29, #-44]
    f2c8:	ldr	w11, [x9, x10, lsl #2]
    f2cc:	ldur	w12, [x29, #-88]
    f2d0:	cmp	w11, w12
    f2d4:	b.le	f2e4 <BZ2_decompress@@Base+0x4048>
    f2d8:	mov	w8, #0xfffffffc            	// #-4
    f2dc:	stur	w8, [x29, #-24]
    f2e0:	b	1083c <BZ2_decompress@@Base+0x55a0>
    f2e4:	ldur	w8, [x29, #-44]
    f2e8:	add	w8, w8, #0x1
    f2ec:	stur	w8, [x29, #-44]
    f2f0:	b	f28c <BZ2_decompress@@Base+0x3ff0>
    f2f4:	ldr	x8, [sp, #32]
    f2f8:	ldr	x9, [x8, #136]
    f2fc:	str	wzr, [x9, #1096]
    f300:	mov	w10, #0x1                   	// #1
    f304:	stur	w10, [x29, #-44]
    f308:	ldur	w8, [x29, #-44]
    f30c:	cmp	w8, #0x100
    f310:	b.gt	f34c <BZ2_decompress@@Base+0x40b0>
    f314:	ldr	x8, [sp, #32]
    f318:	ldr	x9, [x8, #136]
    f31c:	add	x9, x9, #0x44
    f320:	ldur	w10, [x29, #-44]
    f324:	subs	w10, w10, #0x1
    f328:	ldr	w10, [x9, w10, sxtw #2]
    f32c:	ldr	x9, [x8, #136]
    f330:	add	x9, x9, #0x448
    f334:	ldursw	x11, [x29, #-44]
    f338:	str	w10, [x9, x11, lsl #2]
    f33c:	ldur	w8, [x29, #-44]
    f340:	add	w8, w8, #0x1
    f344:	stur	w8, [x29, #-44]
    f348:	b	f308 <BZ2_decompress@@Base+0x406c>
    f34c:	mov	w8, #0x1                   	// #1
    f350:	stur	w8, [x29, #-44]
    f354:	ldur	w8, [x29, #-44]
    f358:	cmp	w8, #0x100
    f35c:	b.gt	f3ac <BZ2_decompress@@Base+0x4110>
    f360:	ldr	x8, [sp, #32]
    f364:	ldr	x9, [x8, #136]
    f368:	add	x9, x9, #0x448
    f36c:	ldur	w10, [x29, #-44]
    f370:	subs	w10, w10, #0x1
    f374:	mov	x11, #0x4                   	// #4
    f378:	ldr	w10, [x9, w10, sxtw #2]
    f37c:	ldr	x9, [x8, #136]
    f380:	add	x9, x9, #0x448
    f384:	ldursw	x12, [x29, #-44]
    f388:	mul	x11, x11, x12
    f38c:	add	x9, x9, x11
    f390:	ldr	w13, [x9]
    f394:	add	w10, w13, w10
    f398:	str	w10, [x9]
    f39c:	ldur	w8, [x29, #-44]
    f3a0:	add	w8, w8, #0x1
    f3a4:	stur	w8, [x29, #-44]
    f3a8:	b	f354 <BZ2_decompress@@Base+0x40b8>
    f3ac:	stur	wzr, [x29, #-44]
    f3b0:	ldur	w8, [x29, #-44]
    f3b4:	cmp	w8, #0x100
    f3b8:	b.gt	f418 <BZ2_decompress@@Base+0x417c>
    f3bc:	ldr	x8, [sp, #32]
    f3c0:	ldr	x9, [x8, #136]
    f3c4:	add	x9, x9, #0x448
    f3c8:	ldursw	x10, [x29, #-44]
    f3cc:	ldr	w11, [x9, x10, lsl #2]
    f3d0:	cmp	w11, #0x0
    f3d4:	cset	w11, lt  // lt = tstop
    f3d8:	tbnz	w11, #0, f3fc <BZ2_decompress@@Base+0x4160>
    f3dc:	ldr	x8, [sp, #32]
    f3e0:	ldr	x9, [x8, #136]
    f3e4:	add	x9, x9, #0x448
    f3e8:	ldursw	x10, [x29, #-44]
    f3ec:	ldr	w11, [x9, x10, lsl #2]
    f3f0:	ldur	w12, [x29, #-88]
    f3f4:	cmp	w11, w12
    f3f8:	b.le	f408 <BZ2_decompress@@Base+0x416c>
    f3fc:	mov	w8, #0xfffffffc            	// #-4
    f400:	stur	w8, [x29, #-24]
    f404:	b	1083c <BZ2_decompress@@Base+0x55a0>
    f408:	ldur	w8, [x29, #-44]
    f40c:	add	w8, w8, #0x1
    f410:	stur	w8, [x29, #-44]
    f414:	b	f3b0 <BZ2_decompress@@Base+0x4114>
    f418:	mov	w8, #0x1                   	// #1
    f41c:	stur	w8, [x29, #-44]
    f420:	ldur	w8, [x29, #-44]
    f424:	cmp	w8, #0x100
    f428:	b.gt	f478 <BZ2_decompress@@Base+0x41dc>
    f42c:	ldr	x8, [sp, #32]
    f430:	ldr	x9, [x8, #136]
    f434:	add	x9, x9, #0x448
    f438:	ldur	w10, [x29, #-44]
    f43c:	subs	w10, w10, #0x1
    f440:	ldr	w10, [x9, w10, sxtw #2]
    f444:	ldr	x9, [x8, #136]
    f448:	add	x9, x9, #0x448
    f44c:	ldursw	x11, [x29, #-44]
    f450:	ldr	w12, [x9, x11, lsl #2]
    f454:	cmp	w10, w12
    f458:	b.le	f468 <BZ2_decompress@@Base+0x41cc>
    f45c:	mov	w8, #0xfffffffc            	// #-4
    f460:	stur	w8, [x29, #-24]
    f464:	b	1083c <BZ2_decompress@@Base+0x55a0>
    f468:	ldur	w8, [x29, #-44]
    f46c:	add	w8, w8, #0x1
    f470:	stur	w8, [x29, #-44]
    f474:	b	f420 <BZ2_decompress@@Base+0x4184>
    f478:	ldr	x8, [sp, #32]
    f47c:	ldr	x9, [x8, #136]
    f480:	str	wzr, [x9, #16]
    f484:	ldr	x9, [x8, #136]
    f488:	mov	w10, #0x0                   	// #0
    f48c:	strb	w10, [x9, #12]
    f490:	ldr	x9, [x8, #136]
    f494:	mov	w10, #0xffffffff            	// #-1
    f498:	str	w10, [x9, #3184]
    f49c:	ldr	x9, [x8, #136]
    f4a0:	mov	w10, #0x2                   	// #2
    f4a4:	str	w10, [x9, #8]
    f4a8:	ldr	x9, [x8, #136]
    f4ac:	ldr	w10, [x9, #52]
    f4b0:	cmp	w10, #0x2
    f4b4:	b.lt	f4d0 <BZ2_decompress@@Base+0x4234>  // b.tstop
    f4b8:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
    f4bc:	ldr	x8, [x8, #4016]
    f4c0:	ldr	x0, [x8]
    f4c4:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
    f4c8:	add	x1, x1, #0xc64
    f4cc:	bl	16e0 <fprintf@plt>
    f4d0:	ldr	x8, [sp, #32]
    f4d4:	ldr	x9, [x8, #136]
    f4d8:	ldrb	w10, [x9, #44]
    f4dc:	cbz	w10, fa5c <BZ2_decompress@@Base+0x47c0>
    f4e0:	stur	wzr, [x29, #-44]
    f4e4:	ldur	w8, [x29, #-44]
    f4e8:	cmp	w8, #0x100
    f4ec:	b.gt	f524 <BZ2_decompress@@Base+0x4288>
    f4f0:	ldr	x8, [sp, #32]
    f4f4:	ldr	x9, [x8, #136]
    f4f8:	add	x9, x9, #0x448
    f4fc:	ldursw	x10, [x29, #-44]
    f500:	ldr	w11, [x9, x10, lsl #2]
    f504:	ldr	x9, [x8, #136]
    f508:	add	x9, x9, #0x84c
    f50c:	ldursw	x10, [x29, #-44]
    f510:	str	w11, [x9, x10, lsl #2]
    f514:	ldur	w8, [x29, #-44]
    f518:	add	w8, w8, #0x1
    f51c:	stur	w8, [x29, #-44]
    f520:	b	f4e4 <BZ2_decompress@@Base+0x4248>
    f524:	stur	wzr, [x29, #-44]
    f528:	ldur	w8, [x29, #-44]
    f52c:	ldur	w9, [x29, #-88]
    f530:	cmp	w8, w9
    f534:	b.ge	f68c <BZ2_decompress@@Base+0x43f0>  // b.tcont
    f538:	ldr	x8, [sp, #32]
    f53c:	ldr	x9, [x8, #136]
    f540:	ldr	x9, [x9, #3160]
    f544:	ldursw	x10, [x29, #-44]
    f548:	mov	x11, #0x2                   	// #2
    f54c:	mul	x10, x11, x10
    f550:	add	x9, x9, x10
    f554:	ldrh	w12, [x9]
    f558:	sturb	w12, [x29, #-17]
    f55c:	ldr	x9, [x8, #136]
    f560:	add	x9, x9, #0x84c
    f564:	ldurb	w12, [x29, #-17]
    f568:	mov	w10, w12
    f56c:	ldr	w12, [x9, x10, lsl #2]
    f570:	and	w12, w12, #0xffff
    f574:	ldr	x9, [x8, #136]
    f578:	ldr	x9, [x9, #3160]
    f57c:	ldursw	x10, [x29, #-44]
    f580:	mul	x10, x11, x10
    f584:	add	x9, x9, x10
    f588:	strh	w12, [x9]
    f58c:	ldur	w12, [x29, #-44]
    f590:	and	w12, w12, #0x1
    f594:	cbnz	w12, f5f4 <BZ2_decompress@@Base+0x4358>
    f598:	ldr	x8, [sp, #32]
    f59c:	ldr	x9, [x8, #136]
    f5a0:	ldr	x9, [x9, #3168]
    f5a4:	ldur	w10, [x29, #-44]
    f5a8:	mov	x11, #0x1                   	// #1
    f5ac:	asr	w10, w10, #1
    f5b0:	ldrb	w10, [x9, w10, sxtw]
    f5b4:	and	w10, w10, #0xf0
    f5b8:	ldr	x9, [x8, #136]
    f5bc:	add	x9, x9, #0x84c
    f5c0:	ldurb	w12, [x29, #-17]
    f5c4:	mov	w13, w12
    f5c8:	ldr	w12, [x9, x13, lsl #2]
    f5cc:	orr	w10, w10, w12, asr #16
    f5d0:	ldr	x9, [x8, #136]
    f5d4:	ldr	x9, [x9, #3168]
    f5d8:	ldur	w12, [x29, #-44]
    f5dc:	asr	w11, w12, w11
    f5e0:	mov	w0, w11
    f5e4:	sxtw	x13, w0
    f5e8:	add	x9, x9, x13
    f5ec:	strb	w10, [x9]
    f5f0:	b	f650 <BZ2_decompress@@Base+0x43b4>
    f5f4:	ldr	x8, [sp, #32]
    f5f8:	ldr	x9, [x8, #136]
    f5fc:	ldr	x9, [x9, #3168]
    f600:	ldur	w10, [x29, #-44]
    f604:	mov	x11, #0x1                   	// #1
    f608:	asr	w10, w10, #1
    f60c:	ldrb	w10, [x9, w10, sxtw]
    f610:	and	w10, w10, #0xf
    f614:	ldr	x9, [x8, #136]
    f618:	add	x9, x9, #0x84c
    f61c:	ldurb	w12, [x29, #-17]
    f620:	mov	w13, w12
    f624:	ldr	w12, [x9, x13, lsl #2]
    f628:	asr	w12, w12, #16
    f62c:	orr	w10, w10, w12, lsl #4
    f630:	ldr	x9, [x8, #136]
    f634:	ldr	x9, [x9, #3168]
    f638:	ldur	w12, [x29, #-44]
    f63c:	asr	w11, w12, w11
    f640:	mov	w0, w11
    f644:	sxtw	x13, w0
    f648:	add	x9, x9, x13
    f64c:	strb	w10, [x9]
    f650:	ldr	x8, [sp, #32]
    f654:	ldr	x9, [x8, #136]
    f658:	add	x9, x9, #0x84c
    f65c:	ldurb	w10, [x29, #-17]
    f660:	mov	w11, w10
    f664:	mov	x12, #0x4                   	// #4
    f668:	mul	x11, x12, x11
    f66c:	add	x9, x9, x11
    f670:	ldr	w10, [x9]
    f674:	add	w10, w10, #0x1
    f678:	str	w10, [x9]
    f67c:	ldur	w8, [x29, #-44]
    f680:	add	w8, w8, #0x1
    f684:	stur	w8, [x29, #-44]
    f688:	b	f528 <BZ2_decompress@@Base+0x428c>
    f68c:	ldr	x8, [sp, #32]
    f690:	ldr	x9, [x8, #136]
    f694:	ldr	w10, [x9, #56]
    f698:	stur	w10, [x29, #-44]
    f69c:	ldr	x9, [x8, #136]
    f6a0:	ldr	x9, [x9, #3160]
    f6a4:	ldursw	x11, [x29, #-44]
    f6a8:	ldrh	w10, [x9, x11, lsl #1]
    f6ac:	ldr	x9, [x8, #136]
    f6b0:	ldr	x9, [x9, #3168]
    f6b4:	ldur	w12, [x29, #-44]
    f6b8:	asr	w12, w12, #1
    f6bc:	ldrb	w12, [x9, w12, sxtw]
    f6c0:	ldur	w13, [x29, #-44]
    f6c4:	lsl	w13, w13, #2
    f6c8:	and	w13, w13, #0x4
    f6cc:	lsr	w12, w12, w13
    f6d0:	and	w12, w12, #0xf
    f6d4:	orr	w10, w10, w12, lsl #16
    f6d8:	stur	w10, [x29, #-48]
    f6dc:	ldr	x8, [sp, #32]
    f6e0:	ldr	x9, [x8, #136]
    f6e4:	ldr	x9, [x9, #3160]
    f6e8:	ldursw	x10, [x29, #-48]
    f6ec:	mov	x11, #0x2                   	// #2
    f6f0:	ldrh	w12, [x9, x10, lsl #1]
    f6f4:	ldr	x9, [x8, #136]
    f6f8:	ldr	x9, [x9, #3168]
    f6fc:	ldur	w13, [x29, #-48]
    f700:	asr	w13, w13, #1
    f704:	ldrb	w13, [x9, w13, sxtw]
    f708:	ldur	w14, [x29, #-48]
    f70c:	lsl	w14, w14, #2
    f710:	and	w14, w14, #0x4
    f714:	lsr	w13, w13, w14
    f718:	and	w13, w13, #0xf
    f71c:	orr	w12, w12, w13, lsl #16
    f720:	str	w12, [sp, #80]
    f724:	ldur	w12, [x29, #-44]
    f728:	and	w12, w12, #0xffff
    f72c:	ldr	x9, [x8, #136]
    f730:	ldr	x9, [x9, #3160]
    f734:	ldursw	x10, [x29, #-48]
    f738:	mul	x10, x11, x10
    f73c:	add	x9, x9, x10
    f740:	strh	w12, [x9]
    f744:	ldur	w12, [x29, #-48]
    f748:	and	w12, w12, #0x1
    f74c:	cbnz	w12, f79c <BZ2_decompress@@Base+0x4500>
    f750:	ldr	x8, [sp, #32]
    f754:	ldr	x9, [x8, #136]
    f758:	ldr	x9, [x9, #3168]
    f75c:	ldur	w10, [x29, #-48]
    f760:	mov	x11, #0x1                   	// #1
    f764:	asr	w10, w10, #1
    f768:	ldrb	w10, [x9, w10, sxtw]
    f76c:	and	w10, w10, #0xf0
    f770:	ldur	w12, [x29, #-44]
    f774:	orr	w10, w10, w12, asr #16
    f778:	ldr	x9, [x8, #136]
    f77c:	ldr	x9, [x9, #3168]
    f780:	ldur	w12, [x29, #-48]
    f784:	asr	w11, w12, w11
    f788:	mov	w0, w11
    f78c:	sxtw	x13, w0
    f790:	add	x9, x9, x13
    f794:	strb	w10, [x9]
    f798:	b	f7e8 <BZ2_decompress@@Base+0x454c>
    f79c:	ldr	x8, [sp, #32]
    f7a0:	ldr	x9, [x8, #136]
    f7a4:	ldr	x9, [x9, #3168]
    f7a8:	ldur	w10, [x29, #-48]
    f7ac:	mov	x11, #0x1                   	// #1
    f7b0:	asr	w10, w10, #1
    f7b4:	ldrb	w10, [x9, w10, sxtw]
    f7b8:	and	w10, w10, #0xf
    f7bc:	ldur	w12, [x29, #-44]
    f7c0:	asr	w12, w12, #16
    f7c4:	orr	w10, w10, w12, lsl #4
    f7c8:	ldr	x9, [x8, #136]
    f7cc:	ldr	x9, [x9, #3168]
    f7d0:	ldur	w12, [x29, #-48]
    f7d4:	asr	w11, w12, w11
    f7d8:	mov	w0, w11
    f7dc:	sxtw	x13, w0
    f7e0:	add	x9, x9, x13
    f7e4:	strb	w10, [x9]
    f7e8:	ldur	w8, [x29, #-48]
    f7ec:	stur	w8, [x29, #-44]
    f7f0:	ldr	w8, [sp, #80]
    f7f4:	stur	w8, [x29, #-48]
    f7f8:	ldur	w8, [x29, #-44]
    f7fc:	ldr	x9, [sp, #32]
    f800:	ldr	x10, [x9, #136]
    f804:	ldr	w11, [x10, #56]
    f808:	cmp	w8, w11
    f80c:	b.ne	f6dc <BZ2_decompress@@Base+0x4440>  // b.any
    f810:	ldr	x8, [sp, #32]
    f814:	ldr	x9, [x8, #136]
    f818:	ldr	w10, [x9, #56]
    f81c:	ldr	x9, [x8, #136]
    f820:	str	w10, [x9, #60]
    f824:	ldr	x9, [x8, #136]
    f828:	str	wzr, [x9, #1092]
    f82c:	ldr	x9, [x8, #136]
    f830:	ldrb	w10, [x9, #20]
    f834:	cbz	w10, f99c <BZ2_decompress@@Base+0x4700>
    f838:	ldr	x8, [sp, #32]
    f83c:	ldr	x9, [x8, #136]
    f840:	str	wzr, [x9, #24]
    f844:	ldr	x9, [x8, #136]
    f848:	str	wzr, [x9, #28]
    f84c:	ldr	x9, [x8, #136]
    f850:	ldr	w10, [x9, #60]
    f854:	ldr	x9, [x8, #136]
    f858:	ldr	w11, [x9, #40]
    f85c:	mov	w12, #0x86a0                	// #34464
    f860:	movk	w12, #0x1, lsl #16
    f864:	mul	w11, w12, w11
    f868:	cmp	w10, w11
    f86c:	b.cc	f87c <BZ2_decompress@@Base+0x45e0>  // b.lo, b.ul, b.last
    f870:	mov	w8, #0x1                   	// #1
    f874:	stur	w8, [x29, #-4]
    f878:	b	10a28 <BZ2_decompress@@Base+0x578c>
    f87c:	ldr	x8, [sp, #32]
    f880:	ldr	x9, [x8, #136]
    f884:	ldr	w0, [x9, #60]
    f888:	ldr	x9, [x8, #136]
    f88c:	add	x1, x9, #0x448
    f890:	bl	1660 <BZ2_indexIntoF@plt>
    f894:	ldr	x8, [sp, #32]
    f898:	ldr	x9, [x8, #136]
    f89c:	str	w0, [x9, #64]
    f8a0:	ldr	x9, [x8, #136]
    f8a4:	ldr	x9, [x9, #3160]
    f8a8:	ldr	x10, [x8, #136]
    f8ac:	ldr	w11, [x10, #60]
    f8b0:	mov	w10, w11
    f8b4:	ldrh	w11, [x9, x10, lsl #1]
    f8b8:	ldr	x9, [x8, #136]
    f8bc:	ldr	x9, [x9, #3168]
    f8c0:	ldr	x10, [x8, #136]
    f8c4:	ldr	w12, [x10, #60]
    f8c8:	lsr	w12, w12, #1
    f8cc:	ldrb	w12, [x9, w12, uxtw]
    f8d0:	ldr	x9, [x8, #136]
    f8d4:	ldr	w13, [x9, #60]
    f8d8:	lsl	w13, w13, #2
    f8dc:	and	w13, w13, #0x4
    f8e0:	lsr	w12, w12, w13
    f8e4:	and	w12, w12, #0xf
    f8e8:	orr	w11, w11, w12, lsl #16
    f8ec:	ldr	x9, [x8, #136]
    f8f0:	str	w11, [x9, #60]
    f8f4:	ldr	x9, [x8, #136]
    f8f8:	ldr	w11, [x9, #1092]
    f8fc:	add	w11, w11, #0x1
    f900:	str	w11, [x9, #1092]
    f904:	ldr	x9, [x8, #136]
    f908:	ldr	w11, [x9, #24]
    f90c:	cbnz	w11, f95c <BZ2_decompress@@Base+0x46c0>
    f910:	ldr	x8, [sp, #32]
    f914:	ldr	x9, [x8, #136]
    f918:	ldrsw	x9, [x9, #28]
    f91c:	adrp	x10, 26000 <BZ2_bzerror@@Base+0x10f84>
    f920:	ldr	x10, [x10, #4048]
    f924:	ldr	w11, [x10, x9, lsl #2]
    f928:	ldr	x9, [x8, #136]
    f92c:	str	w11, [x9, #24]
    f930:	ldr	x9, [x8, #136]
    f934:	ldr	w11, [x9, #28]
    f938:	add	w11, w11, #0x1
    f93c:	str	w11, [x9, #28]
    f940:	ldr	x9, [x8, #136]
    f944:	ldr	w11, [x9, #28]
    f948:	cmp	w11, #0x200
    f94c:	b.ne	f95c <BZ2_decompress@@Base+0x46c0>  // b.any
    f950:	ldr	x8, [sp, #32]
    f954:	ldr	x9, [x8, #136]
    f958:	str	wzr, [x9, #28]
    f95c:	ldr	x8, [sp, #32]
    f960:	ldr	x9, [x8, #136]
    f964:	ldr	w10, [x9, #24]
    f968:	subs	w10, w10, #0x1
    f96c:	str	w10, [x9, #24]
    f970:	ldr	x9, [x8, #136]
    f974:	ldr	w10, [x9, #24]
    f978:	mov	w11, #0x1                   	// #1
    f97c:	mov	w12, wzr
    f980:	cmp	w10, #0x1
    f984:	csel	w10, w11, w12, eq  // eq = none
    f988:	ldr	x9, [x8, #136]
    f98c:	ldr	w11, [x9, #64]
    f990:	eor	w10, w11, w10
    f994:	str	w10, [x9, #64]
    f998:	b	fa58 <BZ2_decompress@@Base+0x47bc>
    f99c:	ldr	x8, [sp, #32]
    f9a0:	ldr	x9, [x8, #136]
    f9a4:	ldr	w10, [x9, #60]
    f9a8:	ldr	x9, [x8, #136]
    f9ac:	ldr	w11, [x9, #40]
    f9b0:	mov	w12, #0x86a0                	// #34464
    f9b4:	movk	w12, #0x1, lsl #16
    f9b8:	mul	w11, w12, w11
    f9bc:	cmp	w10, w11
    f9c0:	b.cc	f9d0 <BZ2_decompress@@Base+0x4734>  // b.lo, b.ul, b.last
    f9c4:	mov	w8, #0x1                   	// #1
    f9c8:	stur	w8, [x29, #-4]
    f9cc:	b	10a28 <BZ2_decompress@@Base+0x578c>
    f9d0:	ldr	x8, [sp, #32]
    f9d4:	ldr	x9, [x8, #136]
    f9d8:	ldr	w0, [x9, #60]
    f9dc:	ldr	x9, [x8, #136]
    f9e0:	add	x1, x9, #0x448
    f9e4:	bl	1660 <BZ2_indexIntoF@plt>
    f9e8:	ldr	x8, [sp, #32]
    f9ec:	ldr	x9, [x8, #136]
    f9f0:	str	w0, [x9, #64]
    f9f4:	ldr	x9, [x8, #136]
    f9f8:	ldr	x9, [x9, #3160]
    f9fc:	ldr	x10, [x8, #136]
    fa00:	ldr	w11, [x10, #60]
    fa04:	mov	w10, w11
    fa08:	ldrh	w11, [x9, x10, lsl #1]
    fa0c:	ldr	x9, [x8, #136]
    fa10:	ldr	x9, [x9, #3168]
    fa14:	ldr	x10, [x8, #136]
    fa18:	ldr	w12, [x10, #60]
    fa1c:	lsr	w12, w12, #1
    fa20:	ldrb	w12, [x9, w12, uxtw]
    fa24:	ldr	x9, [x8, #136]
    fa28:	ldr	w13, [x9, #60]
    fa2c:	lsl	w13, w13, #2
    fa30:	and	w13, w13, #0x4
    fa34:	lsr	w12, w12, w13
    fa38:	and	w12, w12, #0xf
    fa3c:	orr	w11, w11, w12, lsl #16
    fa40:	ldr	x9, [x8, #136]
    fa44:	str	w11, [x9, #60]
    fa48:	ldr	x9, [x8, #136]
    fa4c:	ldr	w11, [x9, #1092]
    fa50:	add	w11, w11, #0x1
    fa54:	str	w11, [x9, #1092]
    fa58:	b	fcf8 <BZ2_decompress@@Base+0x4a5c>
    fa5c:	stur	wzr, [x29, #-44]
    fa60:	ldur	w8, [x29, #-44]
    fa64:	ldur	w9, [x29, #-88]
    fa68:	cmp	w8, w9
    fa6c:	b.ge	faf8 <BZ2_decompress@@Base+0x485c>  // b.tcont
    fa70:	ldr	x8, [sp, #32]
    fa74:	ldr	x9, [x8, #136]
    fa78:	ldr	x9, [x9, #3152]
    fa7c:	ldursw	x10, [x29, #-44]
    fa80:	mov	x11, #0x4                   	// #4
    fa84:	ldr	w12, [x9, x10, lsl #2]
    fa88:	and	w12, w12, #0xff
    fa8c:	sturb	w12, [x29, #-17]
    fa90:	ldur	w12, [x29, #-44]
    fa94:	ldr	x9, [x8, #136]
    fa98:	ldr	x9, [x9, #3152]
    fa9c:	ldr	x10, [x8, #136]
    faa0:	add	x10, x10, #0x448
    faa4:	ldurb	w13, [x29, #-17]
    faa8:	mov	w14, w13
    faac:	ldrsw	x10, [x10, x14, lsl #2]
    fab0:	mul	x10, x11, x10
    fab4:	add	x9, x9, x10
    fab8:	ldr	w13, [x9]
    fabc:	orr	w12, w13, w12, lsl #8
    fac0:	str	w12, [x9]
    fac4:	ldr	x9, [x8, #136]
    fac8:	add	x9, x9, #0x448
    facc:	ldurb	w12, [x29, #-17]
    fad0:	mov	w10, w12
    fad4:	mul	x10, x11, x10
    fad8:	add	x9, x9, x10
    fadc:	ldr	w12, [x9]
    fae0:	add	w12, w12, #0x1
    fae4:	str	w12, [x9]
    fae8:	ldur	w8, [x29, #-44]
    faec:	add	w8, w8, #0x1
    faf0:	stur	w8, [x29, #-44]
    faf4:	b	fa60 <BZ2_decompress@@Base+0x47c4>
    faf8:	ldr	x8, [sp, #32]
    fafc:	ldr	x9, [x8, #136]
    fb00:	ldr	x9, [x9, #3152]
    fb04:	ldr	x10, [x8, #136]
    fb08:	ldrsw	x10, [x10, #56]
    fb0c:	ldr	w11, [x9, x10, lsl #2]
    fb10:	lsr	w11, w11, #8
    fb14:	ldr	x9, [x8, #136]
    fb18:	str	w11, [x9, #60]
    fb1c:	ldr	x9, [x8, #136]
    fb20:	str	wzr, [x9, #1092]
    fb24:	ldr	x9, [x8, #136]
    fb28:	ldrb	w11, [x9, #20]
    fb2c:	cbz	w11, fc68 <BZ2_decompress@@Base+0x49cc>
    fb30:	ldr	x8, [sp, #32]
    fb34:	ldr	x9, [x8, #136]
    fb38:	str	wzr, [x9, #24]
    fb3c:	ldr	x9, [x8, #136]
    fb40:	str	wzr, [x9, #28]
    fb44:	ldr	x9, [x8, #136]
    fb48:	ldr	w10, [x9, #60]
    fb4c:	ldr	x9, [x8, #136]
    fb50:	ldr	w11, [x9, #40]
    fb54:	mov	w12, #0x86a0                	// #34464
    fb58:	movk	w12, #0x1, lsl #16
    fb5c:	mul	w11, w12, w11
    fb60:	cmp	w10, w11
    fb64:	b.cc	fb74 <BZ2_decompress@@Base+0x48d8>  // b.lo, b.ul, b.last
    fb68:	mov	w8, #0x1                   	// #1
    fb6c:	stur	w8, [x29, #-4]
    fb70:	b	10a28 <BZ2_decompress@@Base+0x578c>
    fb74:	ldr	x8, [sp, #32]
    fb78:	ldr	x9, [x8, #136]
    fb7c:	ldr	x9, [x9, #3152]
    fb80:	ldr	x10, [x8, #136]
    fb84:	ldr	w11, [x10, #60]
    fb88:	mov	w10, w11
    fb8c:	ldr	w11, [x9, x10, lsl #2]
    fb90:	ldr	x9, [x8, #136]
    fb94:	str	w11, [x9, #60]
    fb98:	ldr	x9, [x8, #136]
    fb9c:	ldr	w11, [x9, #60]
    fba0:	and	w11, w11, #0xff
    fba4:	and	w11, w11, #0xff
    fba8:	ldr	x9, [x8, #136]
    fbac:	str	w11, [x9, #64]
    fbb0:	ldr	x9, [x8, #136]
    fbb4:	ldr	w11, [x9, #60]
    fbb8:	lsr	w11, w11, #8
    fbbc:	str	w11, [x9, #60]
    fbc0:	ldr	x9, [x8, #136]
    fbc4:	ldr	w11, [x9, #1092]
    fbc8:	add	w11, w11, #0x1
    fbcc:	str	w11, [x9, #1092]
    fbd0:	ldr	x9, [x8, #136]
    fbd4:	ldr	w11, [x9, #24]
    fbd8:	cbnz	w11, fc28 <BZ2_decompress@@Base+0x498c>
    fbdc:	ldr	x8, [sp, #32]
    fbe0:	ldr	x9, [x8, #136]
    fbe4:	ldrsw	x9, [x9, #28]
    fbe8:	adrp	x10, 26000 <BZ2_bzerror@@Base+0x10f84>
    fbec:	ldr	x10, [x10, #4048]
    fbf0:	ldr	w11, [x10, x9, lsl #2]
    fbf4:	ldr	x9, [x8, #136]
    fbf8:	str	w11, [x9, #24]
    fbfc:	ldr	x9, [x8, #136]
    fc00:	ldr	w11, [x9, #28]
    fc04:	add	w11, w11, #0x1
    fc08:	str	w11, [x9, #28]
    fc0c:	ldr	x9, [x8, #136]
    fc10:	ldr	w11, [x9, #28]
    fc14:	cmp	w11, #0x200
    fc18:	b.ne	fc28 <BZ2_decompress@@Base+0x498c>  // b.any
    fc1c:	ldr	x8, [sp, #32]
    fc20:	ldr	x9, [x8, #136]
    fc24:	str	wzr, [x9, #28]
    fc28:	ldr	x8, [sp, #32]
    fc2c:	ldr	x9, [x8, #136]
    fc30:	ldr	w10, [x9, #24]
    fc34:	subs	w10, w10, #0x1
    fc38:	str	w10, [x9, #24]
    fc3c:	ldr	x9, [x8, #136]
    fc40:	ldr	w10, [x9, #24]
    fc44:	mov	w11, #0x1                   	// #1
    fc48:	mov	w12, wzr
    fc4c:	cmp	w10, #0x1
    fc50:	csel	w10, w11, w12, eq  // eq = none
    fc54:	ldr	x9, [x8, #136]
    fc58:	ldr	w11, [x9, #64]
    fc5c:	eor	w10, w11, w10
    fc60:	str	w10, [x9, #64]
    fc64:	b	fcf8 <BZ2_decompress@@Base+0x4a5c>
    fc68:	ldr	x8, [sp, #32]
    fc6c:	ldr	x9, [x8, #136]
    fc70:	ldr	w10, [x9, #60]
    fc74:	ldr	x9, [x8, #136]
    fc78:	ldr	w11, [x9, #40]
    fc7c:	mov	w12, #0x86a0                	// #34464
    fc80:	movk	w12, #0x1, lsl #16
    fc84:	mul	w11, w12, w11
    fc88:	cmp	w10, w11
    fc8c:	b.cc	fc9c <BZ2_decompress@@Base+0x4a00>  // b.lo, b.ul, b.last
    fc90:	mov	w8, #0x1                   	// #1
    fc94:	stur	w8, [x29, #-4]
    fc98:	b	10a28 <BZ2_decompress@@Base+0x578c>
    fc9c:	ldr	x8, [sp, #32]
    fca0:	ldr	x9, [x8, #136]
    fca4:	ldr	x9, [x9, #3152]
    fca8:	ldr	x10, [x8, #136]
    fcac:	ldr	w11, [x10, #60]
    fcb0:	mov	w10, w11
    fcb4:	ldr	w11, [x9, x10, lsl #2]
    fcb8:	ldr	x9, [x8, #136]
    fcbc:	str	w11, [x9, #60]
    fcc0:	ldr	x9, [x8, #136]
    fcc4:	ldr	w11, [x9, #60]
    fcc8:	and	w11, w11, #0xff
    fccc:	and	w11, w11, #0xff
    fcd0:	ldr	x9, [x8, #136]
    fcd4:	str	w11, [x9, #64]
    fcd8:	ldr	x9, [x8, #136]
    fcdc:	ldr	w11, [x9, #60]
    fce0:	lsr	w11, w11, #8
    fce4:	str	w11, [x9, #60]
    fce8:	ldr	x9, [x8, #136]
    fcec:	ldr	w11, [x9, #1092]
    fcf0:	add	w11, w11, #0x1
    fcf4:	str	w11, [x9, #1092]
    fcf8:	stur	wzr, [x29, #-24]
    fcfc:	b	1083c <BZ2_decompress@@Base+0x55a0>
    fd00:	ldr	x8, [sp, #32]
    fd04:	ldr	x9, [x8, #136]
    fd08:	mov	w10, #0x2a                  	// #42
    fd0c:	str	w10, [x9, #8]
    fd10:	ldr	x8, [sp, #32]
    fd14:	ldr	x9, [x8, #136]
    fd18:	ldr	w10, [x9, #36]
    fd1c:	cmp	w10, #0x8
    fd20:	b.lt	fd64 <BZ2_decompress@@Base+0x4ac8>  // b.tstop
    fd24:	ldr	x8, [sp, #32]
    fd28:	ldr	x9, [x8, #136]
    fd2c:	ldr	w10, [x9, #32]
    fd30:	ldr	x9, [x8, #136]
    fd34:	ldr	w11, [x9, #36]
    fd38:	subs	w11, w11, #0x8
    fd3c:	lsr	w10, w10, w11
    fd40:	and	w10, w10, #0xff
    fd44:	str	w10, [sp, #76]
    fd48:	ldr	x9, [x8, #136]
    fd4c:	ldr	w10, [x9, #36]
    fd50:	subs	w10, w10, #0x8
    fd54:	str	w10, [x9, #36]
    fd58:	ldr	w10, [sp, #76]
    fd5c:	sturb	w10, [x29, #-17]
    fd60:	b	fe20 <BZ2_decompress@@Base+0x4b84>
    fd64:	ldr	x8, [sp, #32]
    fd68:	ldr	x9, [x8, #136]
    fd6c:	ldr	x9, [x9]
    fd70:	ldr	w10, [x9, #8]
    fd74:	cbnz	w10, fd80 <BZ2_decompress@@Base+0x4ae4>
    fd78:	stur	wzr, [x29, #-24]
    fd7c:	b	1083c <BZ2_decompress@@Base+0x55a0>
    fd80:	ldr	x8, [sp, #32]
    fd84:	ldr	x9, [x8, #136]
    fd88:	ldr	w10, [x9, #32]
    fd8c:	ldr	x9, [x8, #136]
    fd90:	ldr	x9, [x9]
    fd94:	ldr	x9, [x9]
    fd98:	ldrb	w11, [x9]
    fd9c:	orr	w10, w11, w10, lsl #8
    fda0:	ldr	x9, [x8, #136]
    fda4:	str	w10, [x9, #32]
    fda8:	ldr	x9, [x8, #136]
    fdac:	ldr	w10, [x9, #36]
    fdb0:	add	w10, w10, #0x8
    fdb4:	str	w10, [x9, #36]
    fdb8:	ldr	x9, [x8, #136]
    fdbc:	ldr	x9, [x9]
    fdc0:	ldr	x12, [x9]
    fdc4:	add	x12, x12, #0x1
    fdc8:	str	x12, [x9]
    fdcc:	ldr	x9, [x8, #136]
    fdd0:	ldr	x9, [x9]
    fdd4:	ldr	w10, [x9, #8]
    fdd8:	subs	w10, w10, #0x1
    fddc:	str	w10, [x9, #8]
    fde0:	ldr	x9, [x8, #136]
    fde4:	ldr	x9, [x9]
    fde8:	ldr	w10, [x9, #12]
    fdec:	add	w10, w10, #0x1
    fdf0:	str	w10, [x9, #12]
    fdf4:	ldr	x9, [x8, #136]
    fdf8:	ldr	x9, [x9]
    fdfc:	ldr	w10, [x9, #12]
    fe00:	cbnz	w10, fe1c <BZ2_decompress@@Base+0x4b80>
    fe04:	ldr	x8, [sp, #32]
    fe08:	ldr	x9, [x8, #136]
    fe0c:	ldr	x9, [x9]
    fe10:	ldr	w10, [x9, #16]
    fe14:	add	w10, w10, #0x1
    fe18:	str	w10, [x9, #16]
    fe1c:	b	fd10 <BZ2_decompress@@Base+0x4a74>
    fe20:	ldurb	w8, [x29, #-17]
    fe24:	cmp	w8, #0x72
    fe28:	b.eq	fe38 <BZ2_decompress@@Base+0x4b9c>  // b.none
    fe2c:	mov	w8, #0xfffffffc            	// #-4
    fe30:	stur	w8, [x29, #-24]
    fe34:	b	1083c <BZ2_decompress@@Base+0x55a0>
    fe38:	ldr	x8, [sp, #32]
    fe3c:	ldr	x9, [x8, #136]
    fe40:	mov	w10, #0x2b                  	// #43
    fe44:	str	w10, [x9, #8]
    fe48:	ldr	x8, [sp, #32]
    fe4c:	ldr	x9, [x8, #136]
    fe50:	ldr	w10, [x9, #36]
    fe54:	cmp	w10, #0x8
    fe58:	b.lt	fe9c <BZ2_decompress@@Base+0x4c00>  // b.tstop
    fe5c:	ldr	x8, [sp, #32]
    fe60:	ldr	x9, [x8, #136]
    fe64:	ldr	w10, [x9, #32]
    fe68:	ldr	x9, [x8, #136]
    fe6c:	ldr	w11, [x9, #36]
    fe70:	subs	w11, w11, #0x8
    fe74:	lsr	w10, w10, w11
    fe78:	and	w10, w10, #0xff
    fe7c:	str	w10, [sp, #72]
    fe80:	ldr	x9, [x8, #136]
    fe84:	ldr	w10, [x9, #36]
    fe88:	subs	w10, w10, #0x8
    fe8c:	str	w10, [x9, #36]
    fe90:	ldr	w10, [sp, #72]
    fe94:	sturb	w10, [x29, #-17]
    fe98:	b	ff58 <BZ2_decompress@@Base+0x4cbc>
    fe9c:	ldr	x8, [sp, #32]
    fea0:	ldr	x9, [x8, #136]
    fea4:	ldr	x9, [x9]
    fea8:	ldr	w10, [x9, #8]
    feac:	cbnz	w10, feb8 <BZ2_decompress@@Base+0x4c1c>
    feb0:	stur	wzr, [x29, #-24]
    feb4:	b	1083c <BZ2_decompress@@Base+0x55a0>
    feb8:	ldr	x8, [sp, #32]
    febc:	ldr	x9, [x8, #136]
    fec0:	ldr	w10, [x9, #32]
    fec4:	ldr	x9, [x8, #136]
    fec8:	ldr	x9, [x9]
    fecc:	ldr	x9, [x9]
    fed0:	ldrb	w11, [x9]
    fed4:	orr	w10, w11, w10, lsl #8
    fed8:	ldr	x9, [x8, #136]
    fedc:	str	w10, [x9, #32]
    fee0:	ldr	x9, [x8, #136]
    fee4:	ldr	w10, [x9, #36]
    fee8:	add	w10, w10, #0x8
    feec:	str	w10, [x9, #36]
    fef0:	ldr	x9, [x8, #136]
    fef4:	ldr	x9, [x9]
    fef8:	ldr	x12, [x9]
    fefc:	add	x12, x12, #0x1
    ff00:	str	x12, [x9]
    ff04:	ldr	x9, [x8, #136]
    ff08:	ldr	x9, [x9]
    ff0c:	ldr	w10, [x9, #8]
    ff10:	subs	w10, w10, #0x1
    ff14:	str	w10, [x9, #8]
    ff18:	ldr	x9, [x8, #136]
    ff1c:	ldr	x9, [x9]
    ff20:	ldr	w10, [x9, #12]
    ff24:	add	w10, w10, #0x1
    ff28:	str	w10, [x9, #12]
    ff2c:	ldr	x9, [x8, #136]
    ff30:	ldr	x9, [x9]
    ff34:	ldr	w10, [x9, #12]
    ff38:	cbnz	w10, ff54 <BZ2_decompress@@Base+0x4cb8>
    ff3c:	ldr	x8, [sp, #32]
    ff40:	ldr	x9, [x8, #136]
    ff44:	ldr	x9, [x9]
    ff48:	ldr	w10, [x9, #16]
    ff4c:	add	w10, w10, #0x1
    ff50:	str	w10, [x9, #16]
    ff54:	b	fe48 <BZ2_decompress@@Base+0x4bac>
    ff58:	ldurb	w8, [x29, #-17]
    ff5c:	cmp	w8, #0x45
    ff60:	b.eq	ff70 <BZ2_decompress@@Base+0x4cd4>  // b.none
    ff64:	mov	w8, #0xfffffffc            	// #-4
    ff68:	stur	w8, [x29, #-24]
    ff6c:	b	1083c <BZ2_decompress@@Base+0x55a0>
    ff70:	ldr	x8, [sp, #32]
    ff74:	ldr	x9, [x8, #136]
    ff78:	mov	w10, #0x2c                  	// #44
    ff7c:	str	w10, [x9, #8]
    ff80:	ldr	x8, [sp, #32]
    ff84:	ldr	x9, [x8, #136]
    ff88:	ldr	w10, [x9, #36]
    ff8c:	cmp	w10, #0x8
    ff90:	b.lt	ffd4 <BZ2_decompress@@Base+0x4d38>  // b.tstop
    ff94:	ldr	x8, [sp, #32]
    ff98:	ldr	x9, [x8, #136]
    ff9c:	ldr	w10, [x9, #32]
    ffa0:	ldr	x9, [x8, #136]
    ffa4:	ldr	w11, [x9, #36]
    ffa8:	subs	w11, w11, #0x8
    ffac:	lsr	w10, w10, w11
    ffb0:	and	w10, w10, #0xff
    ffb4:	str	w10, [sp, #68]
    ffb8:	ldr	x9, [x8, #136]
    ffbc:	ldr	w10, [x9, #36]
    ffc0:	subs	w10, w10, #0x8
    ffc4:	str	w10, [x9, #36]
    ffc8:	ldr	w10, [sp, #68]
    ffcc:	sturb	w10, [x29, #-17]
    ffd0:	b	10090 <BZ2_decompress@@Base+0x4df4>
    ffd4:	ldr	x8, [sp, #32]
    ffd8:	ldr	x9, [x8, #136]
    ffdc:	ldr	x9, [x9]
    ffe0:	ldr	w10, [x9, #8]
    ffe4:	cbnz	w10, fff0 <BZ2_decompress@@Base+0x4d54>
    ffe8:	stur	wzr, [x29, #-24]
    ffec:	b	1083c <BZ2_decompress@@Base+0x55a0>
    fff0:	ldr	x8, [sp, #32]
    fff4:	ldr	x9, [x8, #136]
    fff8:	ldr	w10, [x9, #32]
    fffc:	ldr	x9, [x8, #136]
   10000:	ldr	x9, [x9]
   10004:	ldr	x9, [x9]
   10008:	ldrb	w11, [x9]
   1000c:	orr	w10, w11, w10, lsl #8
   10010:	ldr	x9, [x8, #136]
   10014:	str	w10, [x9, #32]
   10018:	ldr	x9, [x8, #136]
   1001c:	ldr	w10, [x9, #36]
   10020:	add	w10, w10, #0x8
   10024:	str	w10, [x9, #36]
   10028:	ldr	x9, [x8, #136]
   1002c:	ldr	x9, [x9]
   10030:	ldr	x12, [x9]
   10034:	add	x12, x12, #0x1
   10038:	str	x12, [x9]
   1003c:	ldr	x9, [x8, #136]
   10040:	ldr	x9, [x9]
   10044:	ldr	w10, [x9, #8]
   10048:	subs	w10, w10, #0x1
   1004c:	str	w10, [x9, #8]
   10050:	ldr	x9, [x8, #136]
   10054:	ldr	x9, [x9]
   10058:	ldr	w10, [x9, #12]
   1005c:	add	w10, w10, #0x1
   10060:	str	w10, [x9, #12]
   10064:	ldr	x9, [x8, #136]
   10068:	ldr	x9, [x9]
   1006c:	ldr	w10, [x9, #12]
   10070:	cbnz	w10, 1008c <BZ2_decompress@@Base+0x4df0>
   10074:	ldr	x8, [sp, #32]
   10078:	ldr	x9, [x8, #136]
   1007c:	ldr	x9, [x9]
   10080:	ldr	w10, [x9, #16]
   10084:	add	w10, w10, #0x1
   10088:	str	w10, [x9, #16]
   1008c:	b	ff80 <BZ2_decompress@@Base+0x4ce4>
   10090:	ldurb	w8, [x29, #-17]
   10094:	cmp	w8, #0x38
   10098:	b.eq	100a8 <BZ2_decompress@@Base+0x4e0c>  // b.none
   1009c:	mov	w8, #0xfffffffc            	// #-4
   100a0:	stur	w8, [x29, #-24]
   100a4:	b	1083c <BZ2_decompress@@Base+0x55a0>
   100a8:	ldr	x8, [sp, #32]
   100ac:	ldr	x9, [x8, #136]
   100b0:	mov	w10, #0x2d                  	// #45
   100b4:	str	w10, [x9, #8]
   100b8:	ldr	x8, [sp, #32]
   100bc:	ldr	x9, [x8, #136]
   100c0:	ldr	w10, [x9, #36]
   100c4:	cmp	w10, #0x8
   100c8:	b.lt	1010c <BZ2_decompress@@Base+0x4e70>  // b.tstop
   100cc:	ldr	x8, [sp, #32]
   100d0:	ldr	x9, [x8, #136]
   100d4:	ldr	w10, [x9, #32]
   100d8:	ldr	x9, [x8, #136]
   100dc:	ldr	w11, [x9, #36]
   100e0:	subs	w11, w11, #0x8
   100e4:	lsr	w10, w10, w11
   100e8:	and	w10, w10, #0xff
   100ec:	str	w10, [sp, #64]
   100f0:	ldr	x9, [x8, #136]
   100f4:	ldr	w10, [x9, #36]
   100f8:	subs	w10, w10, #0x8
   100fc:	str	w10, [x9, #36]
   10100:	ldr	w10, [sp, #64]
   10104:	sturb	w10, [x29, #-17]
   10108:	b	101c8 <BZ2_decompress@@Base+0x4f2c>
   1010c:	ldr	x8, [sp, #32]
   10110:	ldr	x9, [x8, #136]
   10114:	ldr	x9, [x9]
   10118:	ldr	w10, [x9, #8]
   1011c:	cbnz	w10, 10128 <BZ2_decompress@@Base+0x4e8c>
   10120:	stur	wzr, [x29, #-24]
   10124:	b	1083c <BZ2_decompress@@Base+0x55a0>
   10128:	ldr	x8, [sp, #32]
   1012c:	ldr	x9, [x8, #136]
   10130:	ldr	w10, [x9, #32]
   10134:	ldr	x9, [x8, #136]
   10138:	ldr	x9, [x9]
   1013c:	ldr	x9, [x9]
   10140:	ldrb	w11, [x9]
   10144:	orr	w10, w11, w10, lsl #8
   10148:	ldr	x9, [x8, #136]
   1014c:	str	w10, [x9, #32]
   10150:	ldr	x9, [x8, #136]
   10154:	ldr	w10, [x9, #36]
   10158:	add	w10, w10, #0x8
   1015c:	str	w10, [x9, #36]
   10160:	ldr	x9, [x8, #136]
   10164:	ldr	x9, [x9]
   10168:	ldr	x12, [x9]
   1016c:	add	x12, x12, #0x1
   10170:	str	x12, [x9]
   10174:	ldr	x9, [x8, #136]
   10178:	ldr	x9, [x9]
   1017c:	ldr	w10, [x9, #8]
   10180:	subs	w10, w10, #0x1
   10184:	str	w10, [x9, #8]
   10188:	ldr	x9, [x8, #136]
   1018c:	ldr	x9, [x9]
   10190:	ldr	w10, [x9, #12]
   10194:	add	w10, w10, #0x1
   10198:	str	w10, [x9, #12]
   1019c:	ldr	x9, [x8, #136]
   101a0:	ldr	x9, [x9]
   101a4:	ldr	w10, [x9, #12]
   101a8:	cbnz	w10, 101c4 <BZ2_decompress@@Base+0x4f28>
   101ac:	ldr	x8, [sp, #32]
   101b0:	ldr	x9, [x8, #136]
   101b4:	ldr	x9, [x9]
   101b8:	ldr	w10, [x9, #16]
   101bc:	add	w10, w10, #0x1
   101c0:	str	w10, [x9, #16]
   101c4:	b	100b8 <BZ2_decompress@@Base+0x4e1c>
   101c8:	ldurb	w8, [x29, #-17]
   101cc:	cmp	w8, #0x50
   101d0:	b.eq	101e0 <BZ2_decompress@@Base+0x4f44>  // b.none
   101d4:	mov	w8, #0xfffffffc            	// #-4
   101d8:	stur	w8, [x29, #-24]
   101dc:	b	1083c <BZ2_decompress@@Base+0x55a0>
   101e0:	ldr	x8, [sp, #32]
   101e4:	ldr	x9, [x8, #136]
   101e8:	mov	w10, #0x2e                  	// #46
   101ec:	str	w10, [x9, #8]
   101f0:	ldr	x8, [sp, #32]
   101f4:	ldr	x9, [x8, #136]
   101f8:	ldr	w10, [x9, #36]
   101fc:	cmp	w10, #0x8
   10200:	b.lt	10244 <BZ2_decompress@@Base+0x4fa8>  // b.tstop
   10204:	ldr	x8, [sp, #32]
   10208:	ldr	x9, [x8, #136]
   1020c:	ldr	w10, [x9, #32]
   10210:	ldr	x9, [x8, #136]
   10214:	ldr	w11, [x9, #36]
   10218:	subs	w11, w11, #0x8
   1021c:	lsr	w10, w10, w11
   10220:	and	w10, w10, #0xff
   10224:	str	w10, [sp, #60]
   10228:	ldr	x9, [x8, #136]
   1022c:	ldr	w10, [x9, #36]
   10230:	subs	w10, w10, #0x8
   10234:	str	w10, [x9, #36]
   10238:	ldr	w10, [sp, #60]
   1023c:	sturb	w10, [x29, #-17]
   10240:	b	10300 <BZ2_decompress@@Base+0x5064>
   10244:	ldr	x8, [sp, #32]
   10248:	ldr	x9, [x8, #136]
   1024c:	ldr	x9, [x9]
   10250:	ldr	w10, [x9, #8]
   10254:	cbnz	w10, 10260 <BZ2_decompress@@Base+0x4fc4>
   10258:	stur	wzr, [x29, #-24]
   1025c:	b	1083c <BZ2_decompress@@Base+0x55a0>
   10260:	ldr	x8, [sp, #32]
   10264:	ldr	x9, [x8, #136]
   10268:	ldr	w10, [x9, #32]
   1026c:	ldr	x9, [x8, #136]
   10270:	ldr	x9, [x9]
   10274:	ldr	x9, [x9]
   10278:	ldrb	w11, [x9]
   1027c:	orr	w10, w11, w10, lsl #8
   10280:	ldr	x9, [x8, #136]
   10284:	str	w10, [x9, #32]
   10288:	ldr	x9, [x8, #136]
   1028c:	ldr	w10, [x9, #36]
   10290:	add	w10, w10, #0x8
   10294:	str	w10, [x9, #36]
   10298:	ldr	x9, [x8, #136]
   1029c:	ldr	x9, [x9]
   102a0:	ldr	x12, [x9]
   102a4:	add	x12, x12, #0x1
   102a8:	str	x12, [x9]
   102ac:	ldr	x9, [x8, #136]
   102b0:	ldr	x9, [x9]
   102b4:	ldr	w10, [x9, #8]
   102b8:	subs	w10, w10, #0x1
   102bc:	str	w10, [x9, #8]
   102c0:	ldr	x9, [x8, #136]
   102c4:	ldr	x9, [x9]
   102c8:	ldr	w10, [x9, #12]
   102cc:	add	w10, w10, #0x1
   102d0:	str	w10, [x9, #12]
   102d4:	ldr	x9, [x8, #136]
   102d8:	ldr	x9, [x9]
   102dc:	ldr	w10, [x9, #12]
   102e0:	cbnz	w10, 102fc <BZ2_decompress@@Base+0x5060>
   102e4:	ldr	x8, [sp, #32]
   102e8:	ldr	x9, [x8, #136]
   102ec:	ldr	x9, [x9]
   102f0:	ldr	w10, [x9, #16]
   102f4:	add	w10, w10, #0x1
   102f8:	str	w10, [x9, #16]
   102fc:	b	101f0 <BZ2_decompress@@Base+0x4f54>
   10300:	ldurb	w8, [x29, #-17]
   10304:	cmp	w8, #0x90
   10308:	b.eq	10318 <BZ2_decompress@@Base+0x507c>  // b.none
   1030c:	mov	w8, #0xfffffffc            	// #-4
   10310:	stur	w8, [x29, #-24]
   10314:	b	1083c <BZ2_decompress@@Base+0x55a0>
   10318:	ldr	x8, [sp, #32]
   1031c:	ldr	x9, [x8, #136]
   10320:	str	wzr, [x9, #3180]
   10324:	ldr	x8, [sp, #32]
   10328:	ldr	x9, [x8, #136]
   1032c:	mov	w10, #0x2f                  	// #47
   10330:	str	w10, [x9, #8]
   10334:	ldr	x8, [sp, #32]
   10338:	ldr	x9, [x8, #136]
   1033c:	ldr	w10, [x9, #36]
   10340:	cmp	w10, #0x8
   10344:	b.lt	10388 <BZ2_decompress@@Base+0x50ec>  // b.tstop
   10348:	ldr	x8, [sp, #32]
   1034c:	ldr	x9, [x8, #136]
   10350:	ldr	w10, [x9, #32]
   10354:	ldr	x9, [x8, #136]
   10358:	ldr	w11, [x9, #36]
   1035c:	subs	w11, w11, #0x8
   10360:	lsr	w10, w10, w11
   10364:	and	w10, w10, #0xff
   10368:	str	w10, [sp, #56]
   1036c:	ldr	x9, [x8, #136]
   10370:	ldr	w10, [x9, #36]
   10374:	subs	w10, w10, #0x8
   10378:	str	w10, [x9, #36]
   1037c:	ldr	w10, [sp, #56]
   10380:	sturb	w10, [x29, #-17]
   10384:	b	10444 <BZ2_decompress@@Base+0x51a8>
   10388:	ldr	x8, [sp, #32]
   1038c:	ldr	x9, [x8, #136]
   10390:	ldr	x9, [x9]
   10394:	ldr	w10, [x9, #8]
   10398:	cbnz	w10, 103a4 <BZ2_decompress@@Base+0x5108>
   1039c:	stur	wzr, [x29, #-24]
   103a0:	b	1083c <BZ2_decompress@@Base+0x55a0>
   103a4:	ldr	x8, [sp, #32]
   103a8:	ldr	x9, [x8, #136]
   103ac:	ldr	w10, [x9, #32]
   103b0:	ldr	x9, [x8, #136]
   103b4:	ldr	x9, [x9]
   103b8:	ldr	x9, [x9]
   103bc:	ldrb	w11, [x9]
   103c0:	orr	w10, w11, w10, lsl #8
   103c4:	ldr	x9, [x8, #136]
   103c8:	str	w10, [x9, #32]
   103cc:	ldr	x9, [x8, #136]
   103d0:	ldr	w10, [x9, #36]
   103d4:	add	w10, w10, #0x8
   103d8:	str	w10, [x9, #36]
   103dc:	ldr	x9, [x8, #136]
   103e0:	ldr	x9, [x9]
   103e4:	ldr	x12, [x9]
   103e8:	add	x12, x12, #0x1
   103ec:	str	x12, [x9]
   103f0:	ldr	x9, [x8, #136]
   103f4:	ldr	x9, [x9]
   103f8:	ldr	w10, [x9, #8]
   103fc:	subs	w10, w10, #0x1
   10400:	str	w10, [x9, #8]
   10404:	ldr	x9, [x8, #136]
   10408:	ldr	x9, [x9]
   1040c:	ldr	w10, [x9, #12]
   10410:	add	w10, w10, #0x1
   10414:	str	w10, [x9, #12]
   10418:	ldr	x9, [x8, #136]
   1041c:	ldr	x9, [x9]
   10420:	ldr	w10, [x9, #12]
   10424:	cbnz	w10, 10440 <BZ2_decompress@@Base+0x51a4>
   10428:	ldr	x8, [sp, #32]
   1042c:	ldr	x9, [x8, #136]
   10430:	ldr	x9, [x9]
   10434:	ldr	w10, [x9, #16]
   10438:	add	w10, w10, #0x1
   1043c:	str	w10, [x9, #16]
   10440:	b	10334 <BZ2_decompress@@Base+0x5098>
   10444:	ldr	x8, [sp, #32]
   10448:	ldr	x9, [x8, #136]
   1044c:	ldr	w10, [x9, #3180]
   10450:	ldurb	w11, [x29, #-17]
   10454:	orr	w10, w11, w10, lsl #8
   10458:	ldr	x9, [x8, #136]
   1045c:	str	w10, [x9, #3180]
   10460:	ldr	x8, [sp, #32]
   10464:	ldr	x9, [x8, #136]
   10468:	mov	w10, #0x30                  	// #48
   1046c:	str	w10, [x9, #8]
   10470:	ldr	x8, [sp, #32]
   10474:	ldr	x9, [x8, #136]
   10478:	ldr	w10, [x9, #36]
   1047c:	cmp	w10, #0x8
   10480:	b.lt	104c4 <BZ2_decompress@@Base+0x5228>  // b.tstop
   10484:	ldr	x8, [sp, #32]
   10488:	ldr	x9, [x8, #136]
   1048c:	ldr	w10, [x9, #32]
   10490:	ldr	x9, [x8, #136]
   10494:	ldr	w11, [x9, #36]
   10498:	subs	w11, w11, #0x8
   1049c:	lsr	w10, w10, w11
   104a0:	and	w10, w10, #0xff
   104a4:	str	w10, [sp, #52]
   104a8:	ldr	x9, [x8, #136]
   104ac:	ldr	w10, [x9, #36]
   104b0:	subs	w10, w10, #0x8
   104b4:	str	w10, [x9, #36]
   104b8:	ldr	w10, [sp, #52]
   104bc:	sturb	w10, [x29, #-17]
   104c0:	b	10580 <BZ2_decompress@@Base+0x52e4>
   104c4:	ldr	x8, [sp, #32]
   104c8:	ldr	x9, [x8, #136]
   104cc:	ldr	x9, [x9]
   104d0:	ldr	w10, [x9, #8]
   104d4:	cbnz	w10, 104e0 <BZ2_decompress@@Base+0x5244>
   104d8:	stur	wzr, [x29, #-24]
   104dc:	b	1083c <BZ2_decompress@@Base+0x55a0>
   104e0:	ldr	x8, [sp, #32]
   104e4:	ldr	x9, [x8, #136]
   104e8:	ldr	w10, [x9, #32]
   104ec:	ldr	x9, [x8, #136]
   104f0:	ldr	x9, [x9]
   104f4:	ldr	x9, [x9]
   104f8:	ldrb	w11, [x9]
   104fc:	orr	w10, w11, w10, lsl #8
   10500:	ldr	x9, [x8, #136]
   10504:	str	w10, [x9, #32]
   10508:	ldr	x9, [x8, #136]
   1050c:	ldr	w10, [x9, #36]
   10510:	add	w10, w10, #0x8
   10514:	str	w10, [x9, #36]
   10518:	ldr	x9, [x8, #136]
   1051c:	ldr	x9, [x9]
   10520:	ldr	x12, [x9]
   10524:	add	x12, x12, #0x1
   10528:	str	x12, [x9]
   1052c:	ldr	x9, [x8, #136]
   10530:	ldr	x9, [x9]
   10534:	ldr	w10, [x9, #8]
   10538:	subs	w10, w10, #0x1
   1053c:	str	w10, [x9, #8]
   10540:	ldr	x9, [x8, #136]
   10544:	ldr	x9, [x9]
   10548:	ldr	w10, [x9, #12]
   1054c:	add	w10, w10, #0x1
   10550:	str	w10, [x9, #12]
   10554:	ldr	x9, [x8, #136]
   10558:	ldr	x9, [x9]
   1055c:	ldr	w10, [x9, #12]
   10560:	cbnz	w10, 1057c <BZ2_decompress@@Base+0x52e0>
   10564:	ldr	x8, [sp, #32]
   10568:	ldr	x9, [x8, #136]
   1056c:	ldr	x9, [x9]
   10570:	ldr	w10, [x9, #16]
   10574:	add	w10, w10, #0x1
   10578:	str	w10, [x9, #16]
   1057c:	b	10470 <BZ2_decompress@@Base+0x51d4>
   10580:	ldr	x8, [sp, #32]
   10584:	ldr	x9, [x8, #136]
   10588:	ldr	w10, [x9, #3180]
   1058c:	ldurb	w11, [x29, #-17]
   10590:	orr	w10, w11, w10, lsl #8
   10594:	ldr	x9, [x8, #136]
   10598:	str	w10, [x9, #3180]
   1059c:	ldr	x8, [sp, #32]
   105a0:	ldr	x9, [x8, #136]
   105a4:	mov	w10, #0x31                  	// #49
   105a8:	str	w10, [x9, #8]
   105ac:	ldr	x8, [sp, #32]
   105b0:	ldr	x9, [x8, #136]
   105b4:	ldr	w10, [x9, #36]
   105b8:	cmp	w10, #0x8
   105bc:	b.lt	10600 <BZ2_decompress@@Base+0x5364>  // b.tstop
   105c0:	ldr	x8, [sp, #32]
   105c4:	ldr	x9, [x8, #136]
   105c8:	ldr	w10, [x9, #32]
   105cc:	ldr	x9, [x8, #136]
   105d0:	ldr	w11, [x9, #36]
   105d4:	subs	w11, w11, #0x8
   105d8:	lsr	w10, w10, w11
   105dc:	and	w10, w10, #0xff
   105e0:	str	w10, [sp, #48]
   105e4:	ldr	x9, [x8, #136]
   105e8:	ldr	w10, [x9, #36]
   105ec:	subs	w10, w10, #0x8
   105f0:	str	w10, [x9, #36]
   105f4:	ldr	w10, [sp, #48]
   105f8:	sturb	w10, [x29, #-17]
   105fc:	b	106bc <BZ2_decompress@@Base+0x5420>
   10600:	ldr	x8, [sp, #32]
   10604:	ldr	x9, [x8, #136]
   10608:	ldr	x9, [x9]
   1060c:	ldr	w10, [x9, #8]
   10610:	cbnz	w10, 1061c <BZ2_decompress@@Base+0x5380>
   10614:	stur	wzr, [x29, #-24]
   10618:	b	1083c <BZ2_decompress@@Base+0x55a0>
   1061c:	ldr	x8, [sp, #32]
   10620:	ldr	x9, [x8, #136]
   10624:	ldr	w10, [x9, #32]
   10628:	ldr	x9, [x8, #136]
   1062c:	ldr	x9, [x9]
   10630:	ldr	x9, [x9]
   10634:	ldrb	w11, [x9]
   10638:	orr	w10, w11, w10, lsl #8
   1063c:	ldr	x9, [x8, #136]
   10640:	str	w10, [x9, #32]
   10644:	ldr	x9, [x8, #136]
   10648:	ldr	w10, [x9, #36]
   1064c:	add	w10, w10, #0x8
   10650:	str	w10, [x9, #36]
   10654:	ldr	x9, [x8, #136]
   10658:	ldr	x9, [x9]
   1065c:	ldr	x12, [x9]
   10660:	add	x12, x12, #0x1
   10664:	str	x12, [x9]
   10668:	ldr	x9, [x8, #136]
   1066c:	ldr	x9, [x9]
   10670:	ldr	w10, [x9, #8]
   10674:	subs	w10, w10, #0x1
   10678:	str	w10, [x9, #8]
   1067c:	ldr	x9, [x8, #136]
   10680:	ldr	x9, [x9]
   10684:	ldr	w10, [x9, #12]
   10688:	add	w10, w10, #0x1
   1068c:	str	w10, [x9, #12]
   10690:	ldr	x9, [x8, #136]
   10694:	ldr	x9, [x9]
   10698:	ldr	w10, [x9, #12]
   1069c:	cbnz	w10, 106b8 <BZ2_decompress@@Base+0x541c>
   106a0:	ldr	x8, [sp, #32]
   106a4:	ldr	x9, [x8, #136]
   106a8:	ldr	x9, [x9]
   106ac:	ldr	w10, [x9, #16]
   106b0:	add	w10, w10, #0x1
   106b4:	str	w10, [x9, #16]
   106b8:	b	105ac <BZ2_decompress@@Base+0x5310>
   106bc:	ldr	x8, [sp, #32]
   106c0:	ldr	x9, [x8, #136]
   106c4:	ldr	w10, [x9, #3180]
   106c8:	ldurb	w11, [x29, #-17]
   106cc:	orr	w10, w11, w10, lsl #8
   106d0:	ldr	x9, [x8, #136]
   106d4:	str	w10, [x9, #3180]
   106d8:	ldr	x8, [sp, #32]
   106dc:	ldr	x9, [x8, #136]
   106e0:	mov	w10, #0x32                  	// #50
   106e4:	str	w10, [x9, #8]
   106e8:	ldr	x8, [sp, #32]
   106ec:	ldr	x9, [x8, #136]
   106f0:	ldr	w10, [x9, #36]
   106f4:	cmp	w10, #0x8
   106f8:	b.lt	1073c <BZ2_decompress@@Base+0x54a0>  // b.tstop
   106fc:	ldr	x8, [sp, #32]
   10700:	ldr	x9, [x8, #136]
   10704:	ldr	w10, [x9, #32]
   10708:	ldr	x9, [x8, #136]
   1070c:	ldr	w11, [x9, #36]
   10710:	subs	w11, w11, #0x8
   10714:	lsr	w10, w10, w11
   10718:	and	w10, w10, #0xff
   1071c:	str	w10, [sp, #44]
   10720:	ldr	x9, [x8, #136]
   10724:	ldr	w10, [x9, #36]
   10728:	subs	w10, w10, #0x8
   1072c:	str	w10, [x9, #36]
   10730:	ldr	w10, [sp, #44]
   10734:	sturb	w10, [x29, #-17]
   10738:	b	107f8 <BZ2_decompress@@Base+0x555c>
   1073c:	ldr	x8, [sp, #32]
   10740:	ldr	x9, [x8, #136]
   10744:	ldr	x9, [x9]
   10748:	ldr	w10, [x9, #8]
   1074c:	cbnz	w10, 10758 <BZ2_decompress@@Base+0x54bc>
   10750:	stur	wzr, [x29, #-24]
   10754:	b	1083c <BZ2_decompress@@Base+0x55a0>
   10758:	ldr	x8, [sp, #32]
   1075c:	ldr	x9, [x8, #136]
   10760:	ldr	w10, [x9, #32]
   10764:	ldr	x9, [x8, #136]
   10768:	ldr	x9, [x9]
   1076c:	ldr	x9, [x9]
   10770:	ldrb	w11, [x9]
   10774:	orr	w10, w11, w10, lsl #8
   10778:	ldr	x9, [x8, #136]
   1077c:	str	w10, [x9, #32]
   10780:	ldr	x9, [x8, #136]
   10784:	ldr	w10, [x9, #36]
   10788:	add	w10, w10, #0x8
   1078c:	str	w10, [x9, #36]
   10790:	ldr	x9, [x8, #136]
   10794:	ldr	x9, [x9]
   10798:	ldr	x12, [x9]
   1079c:	add	x12, x12, #0x1
   107a0:	str	x12, [x9]
   107a4:	ldr	x9, [x8, #136]
   107a8:	ldr	x9, [x9]
   107ac:	ldr	w10, [x9, #8]
   107b0:	subs	w10, w10, #0x1
   107b4:	str	w10, [x9, #8]
   107b8:	ldr	x9, [x8, #136]
   107bc:	ldr	x9, [x9]
   107c0:	ldr	w10, [x9, #12]
   107c4:	add	w10, w10, #0x1
   107c8:	str	w10, [x9, #12]
   107cc:	ldr	x9, [x8, #136]
   107d0:	ldr	x9, [x9]
   107d4:	ldr	w10, [x9, #12]
   107d8:	cbnz	w10, 107f4 <BZ2_decompress@@Base+0x5558>
   107dc:	ldr	x8, [sp, #32]
   107e0:	ldr	x9, [x8, #136]
   107e4:	ldr	x9, [x9]
   107e8:	ldr	w10, [x9, #16]
   107ec:	add	w10, w10, #0x1
   107f0:	str	w10, [x9, #16]
   107f4:	b	106e8 <BZ2_decompress@@Base+0x544c>
   107f8:	ldr	x8, [sp, #32]
   107fc:	ldr	x9, [x8, #136]
   10800:	ldr	w10, [x9, #3180]
   10804:	ldurb	w11, [x29, #-17]
   10808:	orr	w10, w11, w10, lsl #8
   1080c:	ldr	x9, [x8, #136]
   10810:	str	w10, [x9, #3180]
   10814:	ldr	x9, [x8, #136]
   10818:	mov	w10, #0x1                   	// #1
   1081c:	str	w10, [x9, #8]
   10820:	mov	w10, #0x4                   	// #4
   10824:	stur	w10, [x29, #-24]
   10828:	b	1083c <BZ2_decompress@@Base+0x55a0>
   1082c:	mov	w0, #0xfa1                 	// #4001
   10830:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
   10834:	mov	w0, #0xfa2                 	// #4002
   10838:	bl	16d0 <BZ2_bz__AssertH__fail@plt>
   1083c:	ldur	w8, [x29, #-44]
   10840:	ldr	x9, [sp, #32]
   10844:	ldr	x10, [x9, #136]
   10848:	mov	x11, #0xfa24                	// #64036
   1084c:	add	x10, x10, x11
   10850:	str	w8, [x10]
   10854:	ldur	w8, [x29, #-48]
   10858:	ldr	x10, [x9, #136]
   1085c:	mov	x11, #0xfa28                	// #64040
   10860:	add	x10, x10, x11
   10864:	str	w8, [x10]
   10868:	ldur	w8, [x29, #-52]
   1086c:	ldr	x10, [x9, #136]
   10870:	mov	x11, #0xfa2c                	// #64044
   10874:	add	x10, x10, x11
   10878:	str	w8, [x10]
   1087c:	ldur	w8, [x29, #-56]
   10880:	ldr	x10, [x9, #136]
   10884:	mov	x11, #0xfa30                	// #64048
   10888:	add	x10, x10, x11
   1088c:	str	w8, [x10]
   10890:	ldur	w8, [x29, #-60]
   10894:	ldr	x10, [x9, #136]
   10898:	mov	x11, #0xfa34                	// #64052
   1089c:	add	x10, x10, x11
   108a0:	str	w8, [x10]
   108a4:	ldur	w8, [x29, #-64]
   108a8:	ldr	x10, [x9, #136]
   108ac:	mov	x11, #0xfa38                	// #64056
   108b0:	add	x10, x10, x11
   108b4:	str	w8, [x10]
   108b8:	ldur	w8, [x29, #-68]
   108bc:	ldr	x10, [x9, #136]
   108c0:	mov	x11, #0xfa3c                	// #64060
   108c4:	add	x10, x10, x11
   108c8:	str	w8, [x10]
   108cc:	ldur	w8, [x29, #-72]
   108d0:	ldr	x10, [x9, #136]
   108d4:	mov	x11, #0xfa40                	// #64064
   108d8:	add	x10, x10, x11
   108dc:	str	w8, [x10]
   108e0:	ldur	w8, [x29, #-76]
   108e4:	ldr	x10, [x9, #136]
   108e8:	mov	x11, #0xfa44                	// #64068
   108ec:	add	x10, x10, x11
   108f0:	str	w8, [x10]
   108f4:	ldur	w8, [x29, #-80]
   108f8:	ldr	x10, [x9, #136]
   108fc:	mov	x11, #0xfa48                	// #64072
   10900:	add	x10, x10, x11
   10904:	str	w8, [x10]
   10908:	ldur	w8, [x29, #-84]
   1090c:	ldr	x10, [x9, #136]
   10910:	mov	x11, #0xfa4c                	// #64076
   10914:	add	x10, x10, x11
   10918:	str	w8, [x10]
   1091c:	ldur	w8, [x29, #-88]
   10920:	ldr	x10, [x9, #136]
   10924:	mov	x11, #0xfa50                	// #64080
   10928:	add	x10, x10, x11
   1092c:	str	w8, [x10]
   10930:	ldur	w8, [x29, #-92]
   10934:	ldr	x10, [x9, #136]
   10938:	mov	x11, #0xfa54                	// #64084
   1093c:	add	x10, x10, x11
   10940:	str	w8, [x10]
   10944:	ldur	w8, [x29, #-96]
   10948:	ldr	x10, [x9, #136]
   1094c:	mov	x11, #0xfa58                	// #64088
   10950:	add	x10, x10, x11
   10954:	str	w8, [x10]
   10958:	ldur	w8, [x29, #-100]
   1095c:	ldr	x10, [x9, #136]
   10960:	mov	x11, #0xfa5c                	// #64092
   10964:	add	x10, x10, x11
   10968:	str	w8, [x10]
   1096c:	ldur	w8, [x29, #-104]
   10970:	ldr	x10, [x9, #136]
   10974:	mov	x11, #0xfa60                	// #64096
   10978:	add	x10, x10, x11
   1097c:	str	w8, [x10]
   10980:	ldur	w8, [x29, #-108]
   10984:	ldr	x10, [x9, #136]
   10988:	mov	x11, #0xfa64                	// #64100
   1098c:	add	x10, x10, x11
   10990:	str	w8, [x10]
   10994:	ldur	w8, [x29, #-112]
   10998:	ldr	x10, [x9, #136]
   1099c:	mov	x11, #0xfa68                	// #64104
   109a0:	add	x10, x10, x11
   109a4:	str	w8, [x10]
   109a8:	ldur	w8, [x29, #-116]
   109ac:	ldr	x10, [x9, #136]
   109b0:	mov	x11, #0xfa6c                	// #64108
   109b4:	add	x10, x10, x11
   109b8:	str	w8, [x10]
   109bc:	ldur	w8, [x29, #-120]
   109c0:	ldr	x10, [x9, #136]
   109c4:	mov	x11, #0xfa70                	// #64112
   109c8:	add	x10, x10, x11
   109cc:	str	w8, [x10]
   109d0:	ldur	w8, [x29, #-124]
   109d4:	ldr	x10, [x9, #136]
   109d8:	mov	x11, #0xfa74                	// #64116
   109dc:	add	x10, x10, x11
   109e0:	str	w8, [x10]
   109e4:	ldr	x10, [x9, #16]
   109e8:	ldr	x11, [x9, #136]
   109ec:	mov	x12, #0xfa78                	// #64120
   109f0:	add	x11, x11, x12
   109f4:	str	x10, [x11]
   109f8:	ldr	x10, [x9, #8]
   109fc:	ldr	x11, [x9, #136]
   10a00:	mov	x12, #0xfa80                	// #64128
   10a04:	add	x11, x11, x12
   10a08:	str	x10, [x11]
   10a0c:	ldr	x10, [x9]
   10a10:	ldr	x11, [x9, #136]
   10a14:	mov	x12, #0xfa88                	// #64136
   10a18:	add	x11, x11, x12
   10a1c:	str	x10, [x11]
   10a20:	ldur	w8, [x29, #-24]
   10a24:	stur	w8, [x29, #-4]
   10a28:	ldur	w0, [x29, #-4]
   10a2c:	ldr	x28, [sp, #432]
   10a30:	ldp	x29, x30, [sp, #416]
   10a34:	add	sp, sp, #0x1c0
   10a38:	ret
   10a3c:	sub	sp, sp, #0x10
   10a40:	str	x0, [sp, #8]
   10a44:	ldr	x8, [sp, #8]
   10a48:	str	wzr, [x8, #3192]
   10a4c:	str	wzr, [sp, #4]
   10a50:	ldr	w8, [sp, #4]
   10a54:	cmp	w8, #0x100
   10a58:	b.ge	10ab0 <BZ2_decompress@@Base+0x5814>  // b.tcont
   10a5c:	ldr	x8, [sp, #8]
   10a60:	add	x8, x8, #0xc7c
   10a64:	ldrsw	x9, [sp, #4]
   10a68:	add	x8, x8, x9
   10a6c:	ldrb	w10, [x8]
   10a70:	cbz	w10, 10aa0 <BZ2_decompress@@Base+0x5804>
   10a74:	ldr	w8, [sp, #4]
   10a78:	ldr	x9, [sp, #8]
   10a7c:	add	x9, x9, #0xd8c
   10a80:	ldr	x10, [sp, #8]
   10a84:	ldrsw	x10, [x10, #3192]
   10a88:	add	x9, x9, x10
   10a8c:	strb	w8, [x9]
   10a90:	ldr	x9, [sp, #8]
   10a94:	ldr	w8, [x9, #3192]
   10a98:	add	w8, w8, #0x1
   10a9c:	str	w8, [x9, #3192]
   10aa0:	ldr	w8, [sp, #4]
   10aa4:	add	w8, w8, #0x1
   10aa8:	str	w8, [sp, #4]
   10aac:	b	10a50 <BZ2_decompress@@Base+0x57b4>
   10ab0:	add	sp, sp, #0x10
   10ab4:	ret

0000000000010ab8 <BZ2_bz__AssertH__fail@@Base>:
   10ab8:	sub	sp, sp, #0x40
   10abc:	stp	x29, x30, [sp, #48]
   10ac0:	add	x29, sp, #0x30
   10ac4:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   10ac8:	ldr	x8, [x8, #4016]
   10acc:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
   10ad0:	add	x1, x1, #0xc7c
   10ad4:	stur	w0, [x29, #-4]
   10ad8:	ldr	x0, [x8]
   10adc:	ldur	w2, [x29, #-4]
   10ae0:	stur	x1, [x29, #-16]
   10ae4:	str	x0, [sp, #24]
   10ae8:	str	w2, [sp, #20]
   10aec:	bl	14a0 <BZ2_bzlibVersion@plt>
   10af0:	ldr	x8, [sp, #24]
   10af4:	str	x0, [sp, #8]
   10af8:	mov	x0, x8
   10afc:	ldur	x1, [x29, #-16]
   10b00:	ldr	w2, [sp, #20]
   10b04:	ldr	x3, [sp, #8]
   10b08:	bl	16e0 <fprintf@plt>
   10b0c:	ldur	w9, [x29, #-4]
   10b10:	cmp	w9, #0x3ef
   10b14:	b.ne	10b30 <BZ2_bz__AssertH__fail@@Base+0x78>  // b.any
   10b18:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   10b1c:	ldr	x8, [x8, #4016]
   10b20:	ldr	x0, [x8]
   10b24:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
   10b28:	add	x1, x1, #0xe19
   10b2c:	bl	16e0 <fprintf@plt>
   10b30:	mov	w0, #0x3                   	// #3
   10b34:	bl	1480 <exit@plt>

0000000000010b38 <BZ2_bzlibVersion@@Base>:
   10b38:	adrp	x0, 16000 <BZ2_bzerror@@Base+0xf84>
   10b3c:	add	x0, x0, #0x285
   10b40:	ret

0000000000010b44 <BZ2_bzCompressInit@@Base>:
   10b44:	sub	sp, sp, #0x40
   10b48:	stp	x29, x30, [sp, #48]
   10b4c:	add	x29, sp, #0x30
   10b50:	stur	x0, [x29, #-16]
   10b54:	stur	w1, [x29, #-20]
   10b58:	str	w2, [sp, #24]
   10b5c:	str	w3, [sp, #20]
   10b60:	bl	10ebc <BZ2_bzCompressInit@@Base+0x378>
   10b64:	cbnz	w0, 10b74 <BZ2_bzCompressInit@@Base+0x30>
   10b68:	mov	w8, #0xfffffff7            	// #-9
   10b6c:	stur	w8, [x29, #-4]
   10b70:	b	10eac <BZ2_bzCompressInit@@Base+0x368>
   10b74:	ldur	x8, [x29, #-16]
   10b78:	cbz	x8, 10bb0 <BZ2_bzCompressInit@@Base+0x6c>
   10b7c:	ldur	w8, [x29, #-20]
   10b80:	cmp	w8, #0x1
   10b84:	b.lt	10bb0 <BZ2_bzCompressInit@@Base+0x6c>  // b.tstop
   10b88:	ldur	w8, [x29, #-20]
   10b8c:	cmp	w8, #0x9
   10b90:	b.gt	10bb0 <BZ2_bzCompressInit@@Base+0x6c>
   10b94:	ldr	w8, [sp, #20]
   10b98:	cmp	w8, #0x0
   10b9c:	cset	w8, lt  // lt = tstop
   10ba0:	tbnz	w8, #0, 10bb0 <BZ2_bzCompressInit@@Base+0x6c>
   10ba4:	ldr	w8, [sp, #20]
   10ba8:	cmp	w8, #0xfa
   10bac:	b.le	10bbc <BZ2_bzCompressInit@@Base+0x78>
   10bb0:	mov	w8, #0xfffffffe            	// #-2
   10bb4:	stur	w8, [x29, #-4]
   10bb8:	b	10eac <BZ2_bzCompressInit@@Base+0x368>
   10bbc:	ldr	w8, [sp, #20]
   10bc0:	cbnz	w8, 10bcc <BZ2_bzCompressInit@@Base+0x88>
   10bc4:	mov	w8, #0x1e                  	// #30
   10bc8:	str	w8, [sp, #20]
   10bcc:	ldur	x8, [x29, #-16]
   10bd0:	ldr	x8, [x8, #56]
   10bd4:	cbnz	x8, 10be8 <BZ2_bzCompressInit@@Base+0xa4>
   10bd8:	ldur	x8, [x29, #-16]
   10bdc:	adrp	x9, 10000 <BZ2_decompress@@Base+0x4d64>
   10be0:	add	x9, x9, #0xec4
   10be4:	str	x9, [x8, #56]
   10be8:	ldur	x8, [x29, #-16]
   10bec:	ldr	x8, [x8, #64]
   10bf0:	cbnz	x8, 10c04 <BZ2_bzCompressInit@@Base+0xc0>
   10bf4:	ldur	x8, [x29, #-16]
   10bf8:	adrp	x9, 10000 <BZ2_decompress@@Base+0x4d64>
   10bfc:	add	x9, x9, #0xf08
   10c00:	str	x9, [x8, #64]
   10c04:	ldur	x8, [x29, #-16]
   10c08:	ldr	x8, [x8, #56]
   10c0c:	ldur	x9, [x29, #-16]
   10c10:	ldr	x0, [x9, #72]
   10c14:	mov	w1, #0xd9d8                	// #55768
   10c18:	mov	w2, #0x1                   	// #1
   10c1c:	blr	x8
   10c20:	str	x0, [sp, #8]
   10c24:	ldr	x8, [sp, #8]
   10c28:	cbnz	x8, 10c38 <BZ2_bzCompressInit@@Base+0xf4>
   10c2c:	mov	w8, #0xfffffffd            	// #-3
   10c30:	stur	w8, [x29, #-4]
   10c34:	b	10eac <BZ2_bzCompressInit@@Base+0x368>
   10c38:	ldur	x8, [x29, #-16]
   10c3c:	ldr	x9, [sp, #8]
   10c40:	str	x8, [x9]
   10c44:	ldr	x8, [sp, #8]
   10c48:	mov	x9, xzr
   10c4c:	str	x9, [x8, #24]
   10c50:	ldr	x8, [sp, #8]
   10c54:	str	x9, [x8, #32]
   10c58:	ldr	x8, [sp, #8]
   10c5c:	str	x9, [x8, #40]
   10c60:	ldur	w10, [x29, #-20]
   10c64:	mov	w11, #0x86a0                	// #34464
   10c68:	movk	w11, #0x1, lsl #16
   10c6c:	mul	w10, w11, w10
   10c70:	str	w10, [sp, #16]
   10c74:	ldur	x8, [x29, #-16]
   10c78:	ldr	x8, [x8, #56]
   10c7c:	ldur	x9, [x29, #-16]
   10c80:	ldr	x0, [x9, #72]
   10c84:	ldrsw	x9, [sp, #16]
   10c88:	mov	x12, #0x4                   	// #4
   10c8c:	mul	x9, x9, x12
   10c90:	mov	w1, w9
   10c94:	mov	w9, #0x1                   	// #1
   10c98:	mov	w2, w9
   10c9c:	str	w9, [sp, #4]
   10ca0:	blr	x8
   10ca4:	ldr	x8, [sp, #8]
   10ca8:	str	x0, [x8, #24]
   10cac:	ldur	x8, [x29, #-16]
   10cb0:	ldr	x8, [x8, #56]
   10cb4:	ldur	x12, [x29, #-16]
   10cb8:	ldr	x0, [x12, #72]
   10cbc:	ldr	w9, [sp, #16]
   10cc0:	add	w9, w9, #0x22
   10cc4:	mov	w10, #0x4                   	// #4
   10cc8:	smull	x12, w9, w10
   10ccc:	mov	w1, w12
   10cd0:	ldr	w2, [sp, #4]
   10cd4:	blr	x8
   10cd8:	ldr	x8, [sp, #8]
   10cdc:	str	x0, [x8, #32]
   10ce0:	ldur	x8, [x29, #-16]
   10ce4:	ldr	x8, [x8, #56]
   10ce8:	ldur	x13, [x29, #-16]
   10cec:	ldr	x0, [x13, #72]
   10cf0:	mov	w1, #0x40004               	// #262148
   10cf4:	ldr	w2, [sp, #4]
   10cf8:	blr	x8
   10cfc:	ldr	x8, [sp, #8]
   10d00:	str	x0, [x8, #40]
   10d04:	ldr	x8, [sp, #8]
   10d08:	ldr	x8, [x8, #24]
   10d0c:	cbz	x8, 10d28 <BZ2_bzCompressInit@@Base+0x1e4>
   10d10:	ldr	x8, [sp, #8]
   10d14:	ldr	x8, [x8, #32]
   10d18:	cbz	x8, 10d28 <BZ2_bzCompressInit@@Base+0x1e4>
   10d1c:	ldr	x8, [sp, #8]
   10d20:	ldr	x8, [x8, #40]
   10d24:	cbnz	x8, 10dcc <BZ2_bzCompressInit@@Base+0x288>
   10d28:	ldr	x8, [sp, #8]
   10d2c:	ldr	x8, [x8, #24]
   10d30:	cbz	x8, 10d50 <BZ2_bzCompressInit@@Base+0x20c>
   10d34:	ldur	x8, [x29, #-16]
   10d38:	ldr	x8, [x8, #64]
   10d3c:	ldur	x9, [x29, #-16]
   10d40:	ldr	x0, [x9, #72]
   10d44:	ldr	x9, [sp, #8]
   10d48:	ldr	x1, [x9, #24]
   10d4c:	blr	x8
   10d50:	ldr	x8, [sp, #8]
   10d54:	ldr	x8, [x8, #32]
   10d58:	cbz	x8, 10d78 <BZ2_bzCompressInit@@Base+0x234>
   10d5c:	ldur	x8, [x29, #-16]
   10d60:	ldr	x8, [x8, #64]
   10d64:	ldur	x9, [x29, #-16]
   10d68:	ldr	x0, [x9, #72]
   10d6c:	ldr	x9, [sp, #8]
   10d70:	ldr	x1, [x9, #32]
   10d74:	blr	x8
   10d78:	ldr	x8, [sp, #8]
   10d7c:	ldr	x8, [x8, #40]
   10d80:	cbz	x8, 10da0 <BZ2_bzCompressInit@@Base+0x25c>
   10d84:	ldur	x8, [x29, #-16]
   10d88:	ldr	x8, [x8, #64]
   10d8c:	ldur	x9, [x29, #-16]
   10d90:	ldr	x0, [x9, #72]
   10d94:	ldr	x9, [sp, #8]
   10d98:	ldr	x1, [x9, #40]
   10d9c:	blr	x8
   10da0:	ldr	x8, [sp, #8]
   10da4:	cbz	x8, 10dc0 <BZ2_bzCompressInit@@Base+0x27c>
   10da8:	ldur	x8, [x29, #-16]
   10dac:	ldr	x8, [x8, #64]
   10db0:	ldur	x9, [x29, #-16]
   10db4:	ldr	x0, [x9, #72]
   10db8:	ldr	x1, [sp, #8]
   10dbc:	blr	x8
   10dc0:	mov	w8, #0xfffffffd            	// #-3
   10dc4:	stur	w8, [x29, #-4]
   10dc8:	b	10eac <BZ2_bzCompressInit@@Base+0x368>
   10dcc:	ldr	x8, [sp, #8]
   10dd0:	str	wzr, [x8, #660]
   10dd4:	ldr	x8, [sp, #8]
   10dd8:	mov	w9, #0x2                   	// #2
   10ddc:	str	w9, [x8, #12]
   10de0:	ldr	x8, [sp, #8]
   10de4:	str	w9, [x8, #8]
   10de8:	ldr	x8, [sp, #8]
   10dec:	str	wzr, [x8, #652]
   10df0:	ldur	w9, [x29, #-20]
   10df4:	ldr	x8, [sp, #8]
   10df8:	str	w9, [x8, #664]
   10dfc:	ldur	w9, [x29, #-20]
   10e00:	mov	w10, #0x86a0                	// #34464
   10e04:	movk	w10, #0x1, lsl #16
   10e08:	mul	w9, w10, w9
   10e0c:	subs	w9, w9, #0x13
   10e10:	ldr	x8, [sp, #8]
   10e14:	str	w9, [x8, #112]
   10e18:	ldr	w9, [sp, #24]
   10e1c:	ldr	x8, [sp, #8]
   10e20:	str	w9, [x8, #656]
   10e24:	ldr	w9, [sp, #20]
   10e28:	ldr	x8, [sp, #8]
   10e2c:	str	w9, [x8, #88]
   10e30:	ldr	x8, [sp, #8]
   10e34:	ldr	x8, [x8, #32]
   10e38:	ldr	x11, [sp, #8]
   10e3c:	str	x8, [x11, #64]
   10e40:	ldr	x8, [sp, #8]
   10e44:	ldr	x8, [x8, #24]
   10e48:	ldr	x11, [sp, #8]
   10e4c:	str	x8, [x11, #72]
   10e50:	ldr	x8, [sp, #8]
   10e54:	mov	x11, xzr
   10e58:	str	x11, [x8, #80]
   10e5c:	ldr	x8, [sp, #8]
   10e60:	ldr	x8, [x8, #24]
   10e64:	ldr	x11, [sp, #8]
   10e68:	str	x8, [x11, #56]
   10e6c:	ldr	x8, [sp, #8]
   10e70:	ldur	x11, [x29, #-16]
   10e74:	str	x8, [x11, #48]
   10e78:	ldur	x8, [x29, #-16]
   10e7c:	str	wzr, [x8, #12]
   10e80:	ldur	x8, [x29, #-16]
   10e84:	str	wzr, [x8, #16]
   10e88:	ldur	x8, [x29, #-16]
   10e8c:	str	wzr, [x8, #36]
   10e90:	ldur	x8, [x29, #-16]
   10e94:	str	wzr, [x8, #40]
   10e98:	ldr	x0, [sp, #8]
   10e9c:	bl	10f38 <BZ2_bzCompressInit@@Base+0x3f4>
   10ea0:	ldr	x0, [sp, #8]
   10ea4:	bl	10f5c <BZ2_bzCompressInit@@Base+0x418>
   10ea8:	stur	wzr, [x29, #-4]
   10eac:	ldur	w0, [x29, #-4]
   10eb0:	ldp	x29, x30, [sp, #48]
   10eb4:	add	sp, sp, #0x40
   10eb8:	ret
   10ebc:	mov	w0, #0x1                   	// #1
   10ec0:	ret
   10ec4:	sub	sp, sp, #0x30
   10ec8:	stp	x29, x30, [sp, #32]
   10ecc:	add	x29, sp, #0x20
   10ed0:	stur	x0, [x29, #-8]
   10ed4:	stur	w1, [x29, #-12]
   10ed8:	str	w2, [sp, #16]
   10edc:	ldur	w8, [x29, #-12]
   10ee0:	ldr	w9, [sp, #16]
   10ee4:	mul	w8, w8, w9
   10ee8:	mov	w0, w8
   10eec:	sxtw	x0, w0
   10ef0:	bl	14c0 <malloc@plt>
   10ef4:	str	x0, [sp, #8]
   10ef8:	ldr	x0, [sp, #8]
   10efc:	ldp	x29, x30, [sp, #32]
   10f00:	add	sp, sp, #0x30
   10f04:	ret
   10f08:	sub	sp, sp, #0x20
   10f0c:	stp	x29, x30, [sp, #16]
   10f10:	add	x29, sp, #0x10
   10f14:	str	x0, [sp, #8]
   10f18:	str	x1, [sp]
   10f1c:	ldr	x8, [sp]
   10f20:	cbz	x8, 10f2c <BZ2_bzCompressInit@@Base+0x3e8>
   10f24:	ldr	x0, [sp]
   10f28:	bl	1610 <free@plt>
   10f2c:	ldp	x29, x30, [sp, #16]
   10f30:	add	sp, sp, #0x20
   10f34:	ret
   10f38:	sub	sp, sp, #0x10
   10f3c:	mov	w8, #0x100                 	// #256
   10f40:	str	x0, [sp, #8]
   10f44:	ldr	x9, [sp, #8]
   10f48:	str	w8, [x9, #92]
   10f4c:	ldr	x9, [sp, #8]
   10f50:	str	wzr, [x9, #96]
   10f54:	add	sp, sp, #0x10
   10f58:	ret
   10f5c:	sub	sp, sp, #0x10
   10f60:	mov	w8, #0xffffffff            	// #-1
   10f64:	str	x0, [sp, #8]
   10f68:	ldr	x9, [sp, #8]
   10f6c:	str	wzr, [x9, #108]
   10f70:	ldr	x9, [sp, #8]
   10f74:	str	wzr, [x9, #116]
   10f78:	ldr	x9, [sp, #8]
   10f7c:	str	wzr, [x9, #120]
   10f80:	ldr	x9, [sp, #8]
   10f84:	str	w8, [x9, #648]
   10f88:	str	wzr, [sp, #4]
   10f8c:	ldr	w8, [sp, #4]
   10f90:	cmp	w8, #0x100
   10f94:	b.ge	10fc0 <BZ2_bzCompressInit@@Base+0x47c>  // b.tcont
   10f98:	ldr	x8, [sp, #8]
   10f9c:	add	x8, x8, #0x80
   10fa0:	ldrsw	x9, [sp, #4]
   10fa4:	add	x8, x8, x9
   10fa8:	mov	w10, #0x0                   	// #0
   10fac:	strb	w10, [x8]
   10fb0:	ldr	w8, [sp, #4]
   10fb4:	add	w8, w8, #0x1
   10fb8:	str	w8, [sp, #4]
   10fbc:	b	10f8c <BZ2_bzCompressInit@@Base+0x448>
   10fc0:	ldr	x8, [sp, #8]
   10fc4:	ldr	w9, [x8, #660]
   10fc8:	add	w9, w9, #0x1
   10fcc:	str	w9, [x8, #660]
   10fd0:	add	sp, sp, #0x10
   10fd4:	ret

0000000000010fd8 <BZ2_bzCompress@@Base>:
   10fd8:	sub	sp, sp, #0x40
   10fdc:	stp	x29, x30, [sp, #48]
   10fe0:	add	x29, sp, #0x30
   10fe4:	stur	x0, [x29, #-16]
   10fe8:	stur	w1, [x29, #-20]
   10fec:	ldur	x8, [x29, #-16]
   10ff0:	cbnz	x8, 11000 <BZ2_bzCompress@@Base+0x28>
   10ff4:	mov	w8, #0xfffffffe            	// #-2
   10ff8:	stur	w8, [x29, #-4]
   10ffc:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11000:	ldur	x8, [x29, #-16]
   11004:	ldr	x8, [x8, #48]
   11008:	str	x8, [sp, #16]
   1100c:	ldr	x8, [sp, #16]
   11010:	cbnz	x8, 11020 <BZ2_bzCompress@@Base+0x48>
   11014:	mov	w8, #0xfffffffe            	// #-2
   11018:	stur	w8, [x29, #-4]
   1101c:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11020:	ldr	x8, [sp, #16]
   11024:	ldr	x8, [x8]
   11028:	ldur	x9, [x29, #-16]
   1102c:	cmp	x8, x9
   11030:	b.eq	11040 <BZ2_bzCompress@@Base+0x68>  // b.none
   11034:	mov	w8, #0xfffffffe            	// #-2
   11038:	stur	w8, [x29, #-4]
   1103c:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11040:	ldr	x8, [sp, #16]
   11044:	ldr	w9, [x8, #8]
   11048:	subs	w9, w9, #0x1
   1104c:	mov	w8, w9
   11050:	ubfx	x8, x8, #0, #32
   11054:	cmp	x8, #0x3
   11058:	str	x8, [sp, #8]
   1105c:	b.hi	11284 <BZ2_bzCompress@@Base+0x2ac>  // b.pmore
   11060:	adrp	x8, 15000 <BZ2_bzclose@@Base+0x58>
   11064:	add	x8, x8, #0xc6c
   11068:	ldr	x11, [sp, #8]
   1106c:	ldrsw	x10, [x8, x11, lsl #2]
   11070:	add	x9, x8, x10
   11074:	br	x9
   11078:	mov	w8, #0xffffffff            	// #-1
   1107c:	stur	w8, [x29, #-4]
   11080:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11084:	ldur	w8, [x29, #-20]
   11088:	cbnz	w8, 110b4 <BZ2_bzCompress@@Base+0xdc>
   1108c:	ldur	x0, [x29, #-16]
   11090:	bl	11298 <BZ2_bzCompress@@Base+0x2c0>
   11094:	sturb	w0, [x29, #-21]
   11098:	ldurb	w8, [x29, #-21]
   1109c:	mov	w9, #0xfffffffe            	// #-2
   110a0:	mov	w10, #0x1                   	// #1
   110a4:	cmp	w8, #0x0
   110a8:	csel	w8, w10, w9, ne  // ne = any
   110ac:	stur	w8, [x29, #-4]
   110b0:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   110b4:	ldur	w8, [x29, #-20]
   110b8:	cmp	w8, #0x1
   110bc:	b.ne	110e0 <BZ2_bzCompress@@Base+0x108>  // b.any
   110c0:	ldur	x8, [x29, #-16]
   110c4:	ldr	w9, [x8, #8]
   110c8:	ldr	x8, [sp, #16]
   110cc:	str	w9, [x8, #16]
   110d0:	ldr	x8, [sp, #16]
   110d4:	mov	w9, #0x3                   	// #3
   110d8:	str	w9, [x8, #8]
   110dc:	b	11040 <BZ2_bzCompress@@Base+0x68>
   110e0:	ldur	w8, [x29, #-20]
   110e4:	cmp	w8, #0x2
   110e8:	b.ne	1110c <BZ2_bzCompress@@Base+0x134>  // b.any
   110ec:	ldur	x8, [x29, #-16]
   110f0:	ldr	w9, [x8, #8]
   110f4:	ldr	x8, [sp, #16]
   110f8:	str	w9, [x8, #16]
   110fc:	ldr	x8, [sp, #16]
   11100:	mov	w9, #0x4                   	// #4
   11104:	str	w9, [x8, #8]
   11108:	b	11040 <BZ2_bzCompress@@Base+0x68>
   1110c:	mov	w8, #0xfffffffe            	// #-2
   11110:	stur	w8, [x29, #-4]
   11114:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11118:	ldur	w8, [x29, #-20]
   1111c:	cmp	w8, #0x1
   11120:	b.eq	11130 <BZ2_bzCompress@@Base+0x158>  // b.none
   11124:	mov	w8, #0xffffffff            	// #-1
   11128:	stur	w8, [x29, #-4]
   1112c:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11130:	ldr	x8, [sp, #16]
   11134:	ldr	w9, [x8, #16]
   11138:	ldr	x8, [sp, #16]
   1113c:	ldr	x8, [x8]
   11140:	ldr	w10, [x8, #8]
   11144:	cmp	w9, w10
   11148:	b.eq	11158 <BZ2_bzCompress@@Base+0x180>  // b.none
   1114c:	mov	w8, #0xffffffff            	// #-1
   11150:	stur	w8, [x29, #-4]
   11154:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11158:	ldur	x0, [x29, #-16]
   1115c:	bl	11298 <BZ2_bzCompress@@Base+0x2c0>
   11160:	sturb	w0, [x29, #-21]
   11164:	ldr	x8, [sp, #16]
   11168:	ldr	w9, [x8, #16]
   1116c:	cmp	w9, #0x0
   11170:	cset	w9, hi  // hi = pmore
   11174:	tbnz	w9, #0, 111a0 <BZ2_bzCompress@@Base+0x1c8>
   11178:	ldr	x0, [sp, #16]
   1117c:	bl	1147c <BZ2_bzCompress@@Base+0x4a4>
   11180:	and	w8, w0, #0xff
   11184:	cbz	w8, 111a0 <BZ2_bzCompress@@Base+0x1c8>
   11188:	ldr	x8, [sp, #16]
   1118c:	ldr	w9, [x8, #120]
   11190:	ldr	x8, [sp, #16]
   11194:	ldr	w10, [x8, #116]
   11198:	cmp	w9, w10
   1119c:	b.ge	111ac <BZ2_bzCompress@@Base+0x1d4>  // b.tcont
   111a0:	mov	w8, #0x2                   	// #2
   111a4:	stur	w8, [x29, #-4]
   111a8:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   111ac:	ldr	x8, [sp, #16]
   111b0:	mov	w9, #0x2                   	// #2
   111b4:	str	w9, [x8, #8]
   111b8:	mov	w9, #0x1                   	// #1
   111bc:	stur	w9, [x29, #-4]
   111c0:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   111c4:	ldur	w8, [x29, #-20]
   111c8:	cmp	w8, #0x2
   111cc:	b.eq	111dc <BZ2_bzCompress@@Base+0x204>  // b.none
   111d0:	mov	w8, #0xffffffff            	// #-1
   111d4:	stur	w8, [x29, #-4]
   111d8:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   111dc:	ldr	x8, [sp, #16]
   111e0:	ldr	w9, [x8, #16]
   111e4:	ldr	x8, [sp, #16]
   111e8:	ldr	x8, [x8]
   111ec:	ldr	w10, [x8, #8]
   111f0:	cmp	w9, w10
   111f4:	b.eq	11204 <BZ2_bzCompress@@Base+0x22c>  // b.none
   111f8:	mov	w8, #0xffffffff            	// #-1
   111fc:	stur	w8, [x29, #-4]
   11200:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11204:	ldur	x0, [x29, #-16]
   11208:	bl	11298 <BZ2_bzCompress@@Base+0x2c0>
   1120c:	sturb	w0, [x29, #-21]
   11210:	ldurb	w8, [x29, #-21]
   11214:	cbnz	w8, 11224 <BZ2_bzCompress@@Base+0x24c>
   11218:	mov	w8, #0xffffffff            	// #-1
   1121c:	stur	w8, [x29, #-4]
   11220:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11224:	ldr	x8, [sp, #16]
   11228:	ldr	w9, [x8, #16]
   1122c:	cmp	w9, #0x0
   11230:	cset	w9, hi  // hi = pmore
   11234:	tbnz	w9, #0, 11260 <BZ2_bzCompress@@Base+0x288>
   11238:	ldr	x0, [sp, #16]
   1123c:	bl	1147c <BZ2_bzCompress@@Base+0x4a4>
   11240:	and	w8, w0, #0xff
   11244:	cbz	w8, 11260 <BZ2_bzCompress@@Base+0x288>
   11248:	ldr	x8, [sp, #16]
   1124c:	ldr	w9, [x8, #120]
   11250:	ldr	x8, [sp, #16]
   11254:	ldr	w10, [x8, #116]
   11258:	cmp	w9, w10
   1125c:	b.ge	1126c <BZ2_bzCompress@@Base+0x294>  // b.tcont
   11260:	mov	w8, #0x3                   	// #3
   11264:	stur	w8, [x29, #-4]
   11268:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   1126c:	ldr	x8, [sp, #16]
   11270:	mov	w9, #0x1                   	// #1
   11274:	str	w9, [x8, #8]
   11278:	mov	w9, #0x4                   	// #4
   1127c:	stur	w9, [x29, #-4]
   11280:	b	11288 <BZ2_bzCompress@@Base+0x2b0>
   11284:	stur	wzr, [x29, #-4]
   11288:	ldur	w0, [x29, #-4]
   1128c:	ldp	x29, x30, [sp, #48]
   11290:	add	sp, sp, #0x40
   11294:	ret
   11298:	sub	sp, sp, #0x30
   1129c:	stp	x29, x30, [sp, #32]
   112a0:	add	x29, sp, #0x20
   112a4:	mov	w8, #0x0                   	// #0
   112a8:	stur	x0, [x29, #-8]
   112ac:	sturb	w8, [x29, #-9]
   112b0:	sturb	w8, [x29, #-10]
   112b4:	ldur	x9, [x29, #-8]
   112b8:	ldr	x9, [x9, #48]
   112bc:	str	x9, [sp, #8]
   112c0:	ldr	x8, [sp, #8]
   112c4:	ldr	w9, [x8, #12]
   112c8:	cmp	w9, #0x1
   112cc:	b.ne	11378 <BZ2_bzCompress@@Base+0x3a0>  // b.any
   112d0:	ldr	x0, [sp, #8]
   112d4:	bl	150e8 <BZ2_bzerror@@Base+0x6c>
   112d8:	and	w8, w0, #0xff
   112dc:	ldurb	w9, [x29, #-10]
   112e0:	orr	w8, w9, w8
   112e4:	sturb	w8, [x29, #-10]
   112e8:	ldr	x10, [sp, #8]
   112ec:	ldr	w8, [x10, #120]
   112f0:	ldr	x10, [sp, #8]
   112f4:	ldr	w9, [x10, #116]
   112f8:	cmp	w8, w9
   112fc:	b.ge	11304 <BZ2_bzCompress@@Base+0x32c>  // b.tcont
   11300:	b	11444 <BZ2_bzCompress@@Base+0x46c>
   11304:	ldr	x8, [sp, #8]
   11308:	ldr	w9, [x8, #8]
   1130c:	cmp	w9, #0x4
   11310:	b.ne	11334 <BZ2_bzCompress@@Base+0x35c>  // b.any
   11314:	ldr	x8, [sp, #8]
   11318:	ldr	w9, [x8, #16]
   1131c:	cbnz	w9, 11334 <BZ2_bzCompress@@Base+0x35c>
   11320:	ldr	x0, [sp, #8]
   11324:	bl	1147c <BZ2_bzCompress@@Base+0x4a4>
   11328:	and	w8, w0, #0xff
   1132c:	cbz	w8, 11334 <BZ2_bzCompress@@Base+0x35c>
   11330:	b	11444 <BZ2_bzCompress@@Base+0x46c>
   11334:	ldr	x0, [sp, #8]
   11338:	bl	10f5c <BZ2_bzCompressInit@@Base+0x418>
   1133c:	ldr	x8, [sp, #8]
   11340:	mov	w9, #0x2                   	// #2
   11344:	str	w9, [x8, #12]
   11348:	ldr	x8, [sp, #8]
   1134c:	ldr	w9, [x8, #8]
   11350:	cmp	w9, #0x3
   11354:	b.ne	11378 <BZ2_bzCompress@@Base+0x3a0>  // b.any
   11358:	ldr	x8, [sp, #8]
   1135c:	ldr	w9, [x8, #16]
   11360:	cbnz	w9, 11378 <BZ2_bzCompress@@Base+0x3a0>
   11364:	ldr	x0, [sp, #8]
   11368:	bl	1147c <BZ2_bzCompress@@Base+0x4a4>
   1136c:	and	w8, w0, #0xff
   11370:	cbz	w8, 11378 <BZ2_bzCompress@@Base+0x3a0>
   11374:	b	11444 <BZ2_bzCompress@@Base+0x46c>
   11378:	ldr	x8, [sp, #8]
   1137c:	ldr	w9, [x8, #12]
   11380:	cmp	w9, #0x2
   11384:	b.ne	11440 <BZ2_bzCompress@@Base+0x468>  // b.any
   11388:	ldr	x0, [sp, #8]
   1138c:	bl	151d8 <BZ2_bzerror@@Base+0x15c>
   11390:	and	w8, w0, #0xff
   11394:	ldurb	w9, [x29, #-9]
   11398:	orr	w8, w9, w8
   1139c:	sturb	w8, [x29, #-9]
   113a0:	ldr	x10, [sp, #8]
   113a4:	ldr	w8, [x10, #8]
   113a8:	cmp	w8, #0x2
   113ac:	b.eq	113f4 <BZ2_bzCompress@@Base+0x41c>  // b.none
   113b0:	ldr	x8, [sp, #8]
   113b4:	ldr	w9, [x8, #16]
   113b8:	cbnz	w9, 113f4 <BZ2_bzCompress@@Base+0x41c>
   113bc:	ldr	x0, [sp, #8]
   113c0:	bl	155dc <BZ2_bzerror@@Base+0x560>
   113c4:	ldr	x0, [sp, #8]
   113c8:	ldr	x8, [sp, #8]
   113cc:	ldr	w9, [x8, #8]
   113d0:	cmp	w9, #0x4
   113d4:	cset	w9, eq  // eq = none
   113d8:	and	w9, w9, #0x1
   113dc:	mov	w1, w9
   113e0:	bl	15e0 <BZ2_compressBlock@plt>
   113e4:	ldr	x8, [sp, #8]
   113e8:	mov	w9, #0x1                   	// #1
   113ec:	str	w9, [x8, #12]
   113f0:	b	11440 <BZ2_bzCompress@@Base+0x468>
   113f4:	ldr	x8, [sp, #8]
   113f8:	ldr	w9, [x8, #108]
   113fc:	ldr	x8, [sp, #8]
   11400:	ldr	w10, [x8, #112]
   11404:	cmp	w9, w10
   11408:	b.lt	1142c <BZ2_bzCompress@@Base+0x454>  // b.tstop
   1140c:	ldr	x0, [sp, #8]
   11410:	mov	w8, wzr
   11414:	mov	w1, w8
   11418:	bl	15e0 <BZ2_compressBlock@plt>
   1141c:	ldr	x9, [sp, #8]
   11420:	mov	w8, #0x1                   	// #1
   11424:	str	w8, [x9, #12]
   11428:	b	11440 <BZ2_bzCompress@@Base+0x468>
   1142c:	ldr	x8, [sp, #8]
   11430:	ldr	x8, [x8]
   11434:	ldr	w9, [x8, #8]
   11438:	cbnz	w9, 11440 <BZ2_bzCompress@@Base+0x468>
   1143c:	b	11444 <BZ2_bzCompress@@Base+0x46c>
   11440:	b	112c0 <BZ2_bzCompress@@Base+0x2e8>
   11444:	ldurb	w8, [x29, #-9]
   11448:	mov	w9, #0x1                   	// #1
   1144c:	str	w9, [sp, #4]
   11450:	cbnz	w8, 11464 <BZ2_bzCompress@@Base+0x48c>
   11454:	ldurb	w8, [x29, #-10]
   11458:	cmp	w8, #0x0
   1145c:	cset	w8, ne  // ne = any
   11460:	str	w8, [sp, #4]
   11464:	ldr	w8, [sp, #4]
   11468:	and	w8, w8, #0x1
   1146c:	mov	w0, w8
   11470:	ldp	x29, x30, [sp, #32]
   11474:	add	sp, sp, #0x30
   11478:	ret
   1147c:	sub	sp, sp, #0x10
   11480:	str	x0, [sp]
   11484:	ldr	x8, [sp]
   11488:	ldr	w9, [x8, #92]
   1148c:	cmp	w9, #0x100
   11490:	b.cs	114b4 <BZ2_bzCompress@@Base+0x4dc>  // b.hs, b.nlast
   11494:	ldr	x8, [sp]
   11498:	ldr	w9, [x8, #96]
   1149c:	cmp	w9, #0x0
   114a0:	cset	w9, le
   114a4:	tbnz	w9, #0, 114b4 <BZ2_bzCompress@@Base+0x4dc>
   114a8:	mov	w8, #0x0                   	// #0
   114ac:	strb	w8, [sp, #15]
   114b0:	b	114bc <BZ2_bzCompress@@Base+0x4e4>
   114b4:	mov	w8, #0x1                   	// #1
   114b8:	strb	w8, [sp, #15]
   114bc:	ldrb	w0, [sp, #15]
   114c0:	add	sp, sp, #0x10
   114c4:	ret

00000000000114c8 <BZ2_bzCompressEnd@@Base>:
   114c8:	sub	sp, sp, #0x30
   114cc:	stp	x29, x30, [sp, #32]
   114d0:	add	x29, sp, #0x20
   114d4:	str	x0, [sp, #16]
   114d8:	ldr	x8, [sp, #16]
   114dc:	cbnz	x8, 114ec <BZ2_bzCompressEnd@@Base+0x24>
   114e0:	mov	w8, #0xfffffffe            	// #-2
   114e4:	stur	w8, [x29, #-4]
   114e8:	b	115d0 <BZ2_bzCompressEnd@@Base+0x108>
   114ec:	ldr	x8, [sp, #16]
   114f0:	ldr	x8, [x8, #48]
   114f4:	str	x8, [sp, #8]
   114f8:	ldr	x8, [sp, #8]
   114fc:	cbnz	x8, 1150c <BZ2_bzCompressEnd@@Base+0x44>
   11500:	mov	w8, #0xfffffffe            	// #-2
   11504:	stur	w8, [x29, #-4]
   11508:	b	115d0 <BZ2_bzCompressEnd@@Base+0x108>
   1150c:	ldr	x8, [sp, #8]
   11510:	ldr	x8, [x8]
   11514:	ldr	x9, [sp, #16]
   11518:	cmp	x8, x9
   1151c:	b.eq	1152c <BZ2_bzCompressEnd@@Base+0x64>  // b.none
   11520:	mov	w8, #0xfffffffe            	// #-2
   11524:	stur	w8, [x29, #-4]
   11528:	b	115d0 <BZ2_bzCompressEnd@@Base+0x108>
   1152c:	ldr	x8, [sp, #8]
   11530:	ldr	x8, [x8, #24]
   11534:	cbz	x8, 11554 <BZ2_bzCompressEnd@@Base+0x8c>
   11538:	ldr	x8, [sp, #16]
   1153c:	ldr	x8, [x8, #64]
   11540:	ldr	x9, [sp, #16]
   11544:	ldr	x0, [x9, #72]
   11548:	ldr	x9, [sp, #8]
   1154c:	ldr	x1, [x9, #24]
   11550:	blr	x8
   11554:	ldr	x8, [sp, #8]
   11558:	ldr	x8, [x8, #32]
   1155c:	cbz	x8, 1157c <BZ2_bzCompressEnd@@Base+0xb4>
   11560:	ldr	x8, [sp, #16]
   11564:	ldr	x8, [x8, #64]
   11568:	ldr	x9, [sp, #16]
   1156c:	ldr	x0, [x9, #72]
   11570:	ldr	x9, [sp, #8]
   11574:	ldr	x1, [x9, #32]
   11578:	blr	x8
   1157c:	ldr	x8, [sp, #8]
   11580:	ldr	x8, [x8, #40]
   11584:	cbz	x8, 115a4 <BZ2_bzCompressEnd@@Base+0xdc>
   11588:	ldr	x8, [sp, #16]
   1158c:	ldr	x8, [x8, #64]
   11590:	ldr	x9, [sp, #16]
   11594:	ldr	x0, [x9, #72]
   11598:	ldr	x9, [sp, #8]
   1159c:	ldr	x1, [x9, #40]
   115a0:	blr	x8
   115a4:	ldr	x8, [sp, #16]
   115a8:	ldr	x8, [x8, #64]
   115ac:	ldr	x9, [sp, #16]
   115b0:	ldr	x0, [x9, #72]
   115b4:	ldr	x9, [sp, #16]
   115b8:	ldr	x1, [x9, #48]
   115bc:	blr	x8
   115c0:	ldr	x8, [sp, #16]
   115c4:	mov	x9, xzr
   115c8:	str	x9, [x8, #48]
   115cc:	stur	wzr, [x29, #-4]
   115d0:	ldur	w0, [x29, #-4]
   115d4:	ldp	x29, x30, [sp, #32]
   115d8:	add	sp, sp, #0x30
   115dc:	ret

00000000000115e0 <BZ2_bzDecompressInit@@Base>:
   115e0:	sub	sp, sp, #0x30
   115e4:	stp	x29, x30, [sp, #32]
   115e8:	add	x29, sp, #0x20
   115ec:	str	x0, [sp, #16]
   115f0:	str	w1, [sp, #12]
   115f4:	str	w2, [sp, #8]
   115f8:	bl	10ebc <BZ2_bzCompressInit@@Base+0x378>
   115fc:	cbnz	w0, 1160c <BZ2_bzDecompressInit@@Base+0x2c>
   11600:	mov	w8, #0xfffffff7            	// #-9
   11604:	stur	w8, [x29, #-4]
   11608:	b	11770 <BZ2_bzDecompressInit@@Base+0x190>
   1160c:	ldr	x8, [sp, #16]
   11610:	cbnz	x8, 11620 <BZ2_bzDecompressInit@@Base+0x40>
   11614:	mov	w8, #0xfffffffe            	// #-2
   11618:	stur	w8, [x29, #-4]
   1161c:	b	11770 <BZ2_bzDecompressInit@@Base+0x190>
   11620:	ldr	w8, [sp, #8]
   11624:	cbz	w8, 11640 <BZ2_bzDecompressInit@@Base+0x60>
   11628:	ldr	w8, [sp, #8]
   1162c:	cmp	w8, #0x1
   11630:	b.eq	11640 <BZ2_bzDecompressInit@@Base+0x60>  // b.none
   11634:	mov	w8, #0xfffffffe            	// #-2
   11638:	stur	w8, [x29, #-4]
   1163c:	b	11770 <BZ2_bzDecompressInit@@Base+0x190>
   11640:	ldr	w8, [sp, #12]
   11644:	cmp	w8, #0x0
   11648:	cset	w8, lt  // lt = tstop
   1164c:	tbnz	w8, #0, 1165c <BZ2_bzDecompressInit@@Base+0x7c>
   11650:	ldr	w8, [sp, #12]
   11654:	cmp	w8, #0x4
   11658:	b.le	11668 <BZ2_bzDecompressInit@@Base+0x88>
   1165c:	mov	w8, #0xfffffffe            	// #-2
   11660:	stur	w8, [x29, #-4]
   11664:	b	11770 <BZ2_bzDecompressInit@@Base+0x190>
   11668:	ldr	x8, [sp, #16]
   1166c:	ldr	x8, [x8, #56]
   11670:	cbnz	x8, 11684 <BZ2_bzDecompressInit@@Base+0xa4>
   11674:	ldr	x8, [sp, #16]
   11678:	adrp	x9, 10000 <BZ2_decompress@@Base+0x4d64>
   1167c:	add	x9, x9, #0xec4
   11680:	str	x9, [x8, #56]
   11684:	ldr	x8, [sp, #16]
   11688:	ldr	x8, [x8, #64]
   1168c:	cbnz	x8, 116a0 <BZ2_bzDecompressInit@@Base+0xc0>
   11690:	ldr	x8, [sp, #16]
   11694:	adrp	x9, 10000 <BZ2_decompress@@Base+0x4d64>
   11698:	add	x9, x9, #0xf08
   1169c:	str	x9, [x8, #64]
   116a0:	ldr	x8, [sp, #16]
   116a4:	ldr	x8, [x8, #56]
   116a8:	ldr	x9, [sp, #16]
   116ac:	ldr	x0, [x9, #72]
   116b0:	mov	w1, #0xfa90                	// #64144
   116b4:	mov	w2, #0x1                   	// #1
   116b8:	blr	x8
   116bc:	str	x0, [sp]
   116c0:	ldr	x8, [sp]
   116c4:	cbnz	x8, 116d4 <BZ2_bzDecompressInit@@Base+0xf4>
   116c8:	mov	w8, #0xfffffffd            	// #-3
   116cc:	stur	w8, [x29, #-4]
   116d0:	b	11770 <BZ2_bzDecompressInit@@Base+0x190>
   116d4:	ldr	x8, [sp, #16]
   116d8:	ldr	x9, [sp]
   116dc:	str	x8, [x9]
   116e0:	ldr	x8, [sp]
   116e4:	ldr	x9, [sp, #16]
   116e8:	str	x8, [x9, #48]
   116ec:	ldr	x8, [sp]
   116f0:	mov	w10, #0xa                   	// #10
   116f4:	str	w10, [x8, #8]
   116f8:	ldr	x8, [sp]
   116fc:	str	wzr, [x8, #36]
   11700:	ldr	x8, [sp]
   11704:	str	wzr, [x8, #32]
   11708:	ldr	x8, [sp]
   1170c:	str	wzr, [x8, #3188]
   11710:	ldr	x8, [sp, #16]
   11714:	str	wzr, [x8, #12]
   11718:	ldr	x8, [sp, #16]
   1171c:	str	wzr, [x8, #16]
   11720:	ldr	x8, [sp, #16]
   11724:	str	wzr, [x8, #36]
   11728:	ldr	x8, [sp, #16]
   1172c:	str	wzr, [x8, #40]
   11730:	ldr	w10, [sp, #8]
   11734:	ldr	x8, [sp]
   11738:	strb	w10, [x8, #44]
   1173c:	ldr	x8, [sp]
   11740:	mov	x9, xzr
   11744:	str	x9, [x8, #3168]
   11748:	ldr	x8, [sp]
   1174c:	str	x9, [x8, #3160]
   11750:	ldr	x8, [sp]
   11754:	str	x9, [x8, #3152]
   11758:	ldr	x8, [sp]
   1175c:	str	wzr, [x8, #48]
   11760:	ldr	w10, [sp, #12]
   11764:	ldr	x8, [sp]
   11768:	str	w10, [x8, #52]
   1176c:	stur	wzr, [x29, #-4]
   11770:	ldur	w0, [x29, #-4]
   11774:	ldp	x29, x30, [sp, #32]
   11778:	add	sp, sp, #0x30
   1177c:	ret

0000000000011780 <BZ2_indexIntoF@@Base>:
   11780:	sub	sp, sp, #0x20
   11784:	mov	w8, #0x100                 	// #256
   11788:	str	w0, [sp, #28]
   1178c:	str	x1, [sp, #16]
   11790:	str	wzr, [sp, #12]
   11794:	str	w8, [sp, #8]
   11798:	ldr	w8, [sp, #12]
   1179c:	ldr	w9, [sp, #8]
   117a0:	add	w8, w8, w9
   117a4:	asr	w8, w8, #1
   117a8:	str	w8, [sp, #4]
   117ac:	ldr	w8, [sp, #28]
   117b0:	ldr	x10, [sp, #16]
   117b4:	ldrsw	x11, [sp, #4]
   117b8:	ldr	w9, [x10, x11, lsl #2]
   117bc:	cmp	w8, w9
   117c0:	b.lt	117d0 <BZ2_indexIntoF@@Base+0x50>  // b.tstop
   117c4:	ldr	w8, [sp, #4]
   117c8:	str	w8, [sp, #12]
   117cc:	b	117d8 <BZ2_indexIntoF@@Base+0x58>
   117d0:	ldr	w8, [sp, #4]
   117d4:	str	w8, [sp, #8]
   117d8:	ldr	w8, [sp, #8]
   117dc:	ldr	w9, [sp, #12]
   117e0:	subs	w8, w8, w9
   117e4:	cmp	w8, #0x1
   117e8:	b.ne	11798 <BZ2_indexIntoF@@Base+0x18>  // b.any
   117ec:	ldr	w0, [sp, #12]
   117f0:	add	sp, sp, #0x20
   117f4:	ret

00000000000117f8 <BZ2_bzDecompress@@Base>:
   117f8:	sub	sp, sp, #0x40
   117fc:	stp	x29, x30, [sp, #48]
   11800:	add	x29, sp, #0x30
   11804:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   11808:	ldr	x8, [x8, #4016]
   1180c:	stur	x0, [x29, #-16]
   11810:	ldur	x9, [x29, #-16]
   11814:	str	x8, [sp]
   11818:	cbnz	x9, 11828 <BZ2_bzDecompress@@Base+0x30>
   1181c:	mov	w8, #0xfffffffe            	// #-2
   11820:	stur	w8, [x29, #-4]
   11824:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   11828:	ldur	x8, [x29, #-16]
   1182c:	ldr	x8, [x8, #48]
   11830:	str	x8, [sp, #16]
   11834:	ldr	x8, [sp, #16]
   11838:	cbnz	x8, 11848 <BZ2_bzDecompress@@Base+0x50>
   1183c:	mov	w8, #0xfffffffe            	// #-2
   11840:	stur	w8, [x29, #-4]
   11844:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   11848:	ldr	x8, [sp, #16]
   1184c:	ldr	x8, [x8]
   11850:	ldur	x9, [x29, #-16]
   11854:	cmp	x8, x9
   11858:	b.eq	11868 <BZ2_bzDecompress@@Base+0x70>  // b.none
   1185c:	mov	w8, #0xfffffffe            	// #-2
   11860:	stur	w8, [x29, #-4]
   11864:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   11868:	ldr	x8, [sp, #16]
   1186c:	ldr	w9, [x8, #8]
   11870:	cmp	w9, #0x1
   11874:	b.ne	11884 <BZ2_bzDecompress@@Base+0x8c>  // b.any
   11878:	mov	w8, #0xffffffff            	// #-1
   1187c:	stur	w8, [x29, #-4]
   11880:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   11884:	ldr	x8, [sp, #16]
   11888:	ldr	w9, [x8, #8]
   1188c:	cmp	w9, #0x2
   11890:	b.ne	119e0 <BZ2_bzDecompress@@Base+0x1e8>  // b.any
   11894:	ldr	x8, [sp, #16]
   11898:	ldrb	w9, [x8, #44]
   1189c:	cbz	w9, 118b0 <BZ2_bzDecompress@@Base+0xb8>
   118a0:	ldr	x0, [sp, #16]
   118a4:	bl	11a9c <BZ2_bzDecompress@@Base+0x2a4>
   118a8:	sturb	w0, [x29, #-17]
   118ac:	b	118bc <BZ2_bzDecompress@@Base+0xc4>
   118b0:	ldr	x0, [sp, #16]
   118b4:	bl	12908 <BZ2_bzDecompress@@Base+0x1110>
   118b8:	sturb	w0, [x29, #-17]
   118bc:	ldurb	w8, [x29, #-17]
   118c0:	cbz	w8, 118d0 <BZ2_bzDecompress@@Base+0xd8>
   118c4:	mov	w8, #0xfffffffc            	// #-4
   118c8:	stur	w8, [x29, #-4]
   118cc:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   118d0:	ldr	x8, [sp, #16]
   118d4:	ldr	w9, [x8, #1092]
   118d8:	ldr	x8, [sp, #16]
   118dc:	mov	x10, #0xfa50                	// #64080
   118e0:	add	x8, x8, x10
   118e4:	ldr	w11, [x8]
   118e8:	add	w11, w11, #0x1
   118ec:	cmp	w9, w11
   118f0:	b.ne	119d8 <BZ2_bzDecompress@@Base+0x1e0>  // b.any
   118f4:	ldr	x8, [sp, #16]
   118f8:	ldr	w9, [x8, #16]
   118fc:	cbnz	w9, 119d8 <BZ2_bzDecompress@@Base+0x1e0>
   11900:	ldr	x8, [sp, #16]
   11904:	ldr	w9, [x8, #3184]
   11908:	mvn	w9, w9
   1190c:	ldr	x8, [sp, #16]
   11910:	str	w9, [x8, #3184]
   11914:	ldr	x8, [sp, #16]
   11918:	ldr	w9, [x8, #52]
   1191c:	cmp	w9, #0x3
   11920:	b.lt	11948 <BZ2_bzDecompress@@Base+0x150>  // b.tstop
   11924:	ldr	x8, [sp]
   11928:	ldr	x0, [x8]
   1192c:	ldr	x9, [sp, #16]
   11930:	ldr	w2, [x9, #3176]
   11934:	ldr	x9, [sp, #16]
   11938:	ldr	w3, [x9, #3184]
   1193c:	adrp	x1, 16000 <BZ2_bzerror@@Base+0xf84>
   11940:	add	x1, x1, #0x23a
   11944:	bl	16e0 <fprintf@plt>
   11948:	ldr	x8, [sp, #16]
   1194c:	ldr	w9, [x8, #52]
   11950:	cmp	w9, #0x2
   11954:	b.lt	1196c <BZ2_bzDecompress@@Base+0x174>  // b.tstop
   11958:	ldr	x8, [sp]
   1195c:	ldr	x0, [x8]
   11960:	adrp	x1, 16000 <BZ2_bzerror@@Base+0xf84>
   11964:	add	x1, x1, #0x24c
   11968:	bl	16e0 <fprintf@plt>
   1196c:	ldr	x8, [sp, #16]
   11970:	ldr	w9, [x8, #3184]
   11974:	ldr	x8, [sp, #16]
   11978:	ldr	w10, [x8, #3176]
   1197c:	cmp	w9, w10
   11980:	b.eq	11990 <BZ2_bzDecompress@@Base+0x198>  // b.none
   11984:	mov	w8, #0xfffffffc            	// #-4
   11988:	stur	w8, [x29, #-4]
   1198c:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   11990:	ldr	x8, [sp, #16]
   11994:	ldr	w9, [x8, #3188]
   11998:	ldr	x8, [sp, #16]
   1199c:	ldr	w10, [x8, #3188]
   119a0:	lsr	w10, w10, #31
   119a4:	orr	w9, w10, w9, lsl #1
   119a8:	ldr	x8, [sp, #16]
   119ac:	str	w9, [x8, #3188]
   119b0:	ldr	x8, [sp, #16]
   119b4:	ldr	w9, [x8, #3184]
   119b8:	ldr	x8, [sp, #16]
   119bc:	ldr	w10, [x8, #3188]
   119c0:	eor	w9, w10, w9
   119c4:	str	w9, [x8, #3188]
   119c8:	ldr	x8, [sp, #16]
   119cc:	mov	w9, #0xe                   	// #14
   119d0:	str	w9, [x8, #8]
   119d4:	b	119e0 <BZ2_bzDecompress@@Base+0x1e8>
   119d8:	stur	wzr, [x29, #-4]
   119dc:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   119e0:	ldr	x8, [sp, #16]
   119e4:	ldr	w9, [x8, #8]
   119e8:	cmp	w9, #0xa
   119ec:	b.lt	11a88 <BZ2_bzDecompress@@Base+0x290>  // b.tstop
   119f0:	ldr	x0, [sp, #16]
   119f4:	bl	1580 <BZ2_decompress@plt>
   119f8:	str	w0, [sp, #12]
   119fc:	ldr	w8, [sp, #12]
   11a00:	cmp	w8, #0x4
   11a04:	b.ne	11a6c <BZ2_bzDecompress@@Base+0x274>  // b.any
   11a08:	ldr	x8, [sp, #16]
   11a0c:	ldr	w9, [x8, #52]
   11a10:	cmp	w9, #0x3
   11a14:	b.lt	11a3c <BZ2_bzDecompress@@Base+0x244>  // b.tstop
   11a18:	ldr	x8, [sp]
   11a1c:	ldr	x0, [x8]
   11a20:	ldr	x9, [sp, #16]
   11a24:	ldr	w2, [x9, #3180]
   11a28:	ldr	x9, [sp, #16]
   11a2c:	ldr	w3, [x9, #3188]
   11a30:	adrp	x1, 16000 <BZ2_bzerror@@Base+0xf84>
   11a34:	add	x1, x1, #0x24e
   11a38:	bl	16e0 <fprintf@plt>
   11a3c:	ldr	x8, [sp, #16]
   11a40:	ldr	w9, [x8, #3188]
   11a44:	ldr	x8, [sp, #16]
   11a48:	ldr	w10, [x8, #3180]
   11a4c:	cmp	w9, w10
   11a50:	b.eq	11a60 <BZ2_bzDecompress@@Base+0x268>  // b.none
   11a54:	mov	w8, #0xfffffffc            	// #-4
   11a58:	stur	w8, [x29, #-4]
   11a5c:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   11a60:	ldr	w8, [sp, #12]
   11a64:	stur	w8, [x29, #-4]
   11a68:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   11a6c:	ldr	x8, [sp, #16]
   11a70:	ldr	w9, [x8, #8]
   11a74:	cmp	w9, #0x2
   11a78:	b.eq	11a88 <BZ2_bzDecompress@@Base+0x290>  // b.none
   11a7c:	ldr	w8, [sp, #12]
   11a80:	stur	w8, [x29, #-4]
   11a84:	b	11a8c <BZ2_bzDecompress@@Base+0x294>
   11a88:	b	11868 <BZ2_bzDecompress@@Base+0x70>
   11a8c:	ldur	w0, [x29, #-4]
   11a90:	ldp	x29, x30, [sp, #48]
   11a94:	add	sp, sp, #0x40
   11a98:	ret
   11a9c:	sub	sp, sp, #0x30
   11aa0:	stp	x29, x30, [sp, #32]
   11aa4:	add	x29, sp, #0x20
   11aa8:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   11aac:	ldr	x8, [x8, #4048]
   11ab0:	str	x0, [sp, #16]
   11ab4:	ldr	x9, [sp, #16]
   11ab8:	ldrb	w10, [x9, #20]
   11abc:	str	x8, [sp]
   11ac0:	cbz	w10, 12320 <BZ2_bzDecompress@@Base+0xb28>
   11ac4:	ldr	x8, [sp, #16]
   11ac8:	ldr	x8, [x8]
   11acc:	ldr	w9, [x8, #32]
   11ad0:	cbnz	w9, 11ae0 <BZ2_bzDecompress@@Base+0x2e8>
   11ad4:	mov	w8, #0x0                   	// #0
   11ad8:	sturb	w8, [x29, #-1]
   11adc:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   11ae0:	ldr	x8, [sp, #16]
   11ae4:	ldr	w9, [x8, #16]
   11ae8:	cbnz	w9, 11af0 <BZ2_bzDecompress@@Base+0x2f8>
   11aec:	b	11bb0 <BZ2_bzDecompress@@Base+0x3b8>
   11af0:	ldr	x8, [sp, #16]
   11af4:	ldrb	w9, [x8, #12]
   11af8:	ldr	x8, [sp, #16]
   11afc:	ldr	x8, [x8]
   11b00:	ldr	x8, [x8, #24]
   11b04:	strb	w9, [x8]
   11b08:	ldr	x8, [sp, #16]
   11b0c:	ldr	w9, [x8, #3184]
   11b10:	ldr	x8, [sp, #16]
   11b14:	ldr	w10, [x8, #3184]
   11b18:	ldr	x8, [sp, #16]
   11b1c:	ldrb	w11, [x8, #12]
   11b20:	eor	w10, w11, w10, lsr #24
   11b24:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   11b28:	ldr	x8, [x8, #4024]
   11b2c:	ldr	w10, [x8, w10, uxtw #2]
   11b30:	eor	w9, w10, w9, lsl #8
   11b34:	ldr	x8, [sp, #16]
   11b38:	str	w9, [x8, #3184]
   11b3c:	ldr	x8, [sp, #16]
   11b40:	ldr	w9, [x8, #16]
   11b44:	subs	w9, w9, #0x1
   11b48:	str	w9, [x8, #16]
   11b4c:	ldr	x8, [sp, #16]
   11b50:	ldr	x8, [x8]
   11b54:	ldr	x12, [x8, #24]
   11b58:	add	x12, x12, #0x1
   11b5c:	str	x12, [x8, #24]
   11b60:	ldr	x8, [sp, #16]
   11b64:	ldr	x8, [x8]
   11b68:	ldr	w9, [x8, #32]
   11b6c:	subs	w9, w9, #0x1
   11b70:	str	w9, [x8, #32]
   11b74:	ldr	x8, [sp, #16]
   11b78:	ldr	x8, [x8]
   11b7c:	ldr	w9, [x8, #36]
   11b80:	add	w9, w9, #0x1
   11b84:	str	w9, [x8, #36]
   11b88:	ldr	x8, [sp, #16]
   11b8c:	ldr	x8, [x8]
   11b90:	ldr	w9, [x8, #36]
   11b94:	cbnz	w9, 11bac <BZ2_bzDecompress@@Base+0x3b4>
   11b98:	ldr	x8, [sp, #16]
   11b9c:	ldr	x8, [x8]
   11ba0:	ldr	w9, [x8, #40]
   11ba4:	add	w9, w9, #0x1
   11ba8:	str	w9, [x8, #40]
   11bac:	b	11ac4 <BZ2_bzDecompress@@Base+0x2cc>
   11bb0:	ldr	x8, [sp, #16]
   11bb4:	ldr	w9, [x8, #1092]
   11bb8:	ldr	x8, [sp, #16]
   11bbc:	mov	x10, #0xfa50                	// #64080
   11bc0:	add	x8, x8, x10
   11bc4:	ldr	w11, [x8]
   11bc8:	add	w11, w11, #0x1
   11bcc:	cmp	w9, w11
   11bd0:	b.ne	11be0 <BZ2_bzDecompress@@Base+0x3e8>  // b.any
   11bd4:	mov	w8, #0x0                   	// #0
   11bd8:	sturb	w8, [x29, #-1]
   11bdc:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   11be0:	ldr	x8, [sp, #16]
   11be4:	ldr	w9, [x8, #1092]
   11be8:	ldr	x8, [sp, #16]
   11bec:	mov	x10, #0xfa50                	// #64080
   11bf0:	add	x8, x8, x10
   11bf4:	ldr	w11, [x8]
   11bf8:	add	w11, w11, #0x1
   11bfc:	cmp	w9, w11
   11c00:	b.le	11c10 <BZ2_bzDecompress@@Base+0x418>
   11c04:	mov	w8, #0x1                   	// #1
   11c08:	sturb	w8, [x29, #-1]
   11c0c:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   11c10:	ldr	x8, [sp, #16]
   11c14:	mov	w9, #0x1                   	// #1
   11c18:	str	w9, [x8, #16]
   11c1c:	ldr	x8, [sp, #16]
   11c20:	ldr	w9, [x8, #64]
   11c24:	ldr	x8, [sp, #16]
   11c28:	strb	w9, [x8, #12]
   11c2c:	ldr	x8, [sp, #16]
   11c30:	ldr	w9, [x8, #60]
   11c34:	ldr	x8, [sp, #16]
   11c38:	ldr	w10, [x8, #40]
   11c3c:	mov	w11, #0x86a0                	// #34464
   11c40:	movk	w11, #0x1, lsl #16
   11c44:	mul	w10, w11, w10
   11c48:	cmp	w9, w10
   11c4c:	b.cc	11c5c <BZ2_bzDecompress@@Base+0x464>  // b.lo, b.ul, b.last
   11c50:	mov	w8, #0x1                   	// #1
   11c54:	sturb	w8, [x29, #-1]
   11c58:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   11c5c:	ldr	x8, [sp, #16]
   11c60:	ldr	w0, [x8, #60]
   11c64:	ldr	x8, [sp, #16]
   11c68:	add	x1, x8, #0x448
   11c6c:	bl	1660 <BZ2_indexIntoF@plt>
   11c70:	strb	w0, [sp, #15]
   11c74:	ldr	x8, [sp, #16]
   11c78:	ldr	x8, [x8, #3160]
   11c7c:	ldr	x9, [sp, #16]
   11c80:	ldr	w10, [x9, #60]
   11c84:	mov	w9, w10
   11c88:	ldrh	w10, [x8, x9, lsl #1]
   11c8c:	ldr	x8, [sp, #16]
   11c90:	ldr	x8, [x8, #3168]
   11c94:	ldr	x9, [sp, #16]
   11c98:	ldr	w11, [x9, #60]
   11c9c:	lsr	w11, w11, #1
   11ca0:	ldrb	w11, [x8, w11, uxtw]
   11ca4:	ldr	x8, [sp, #16]
   11ca8:	ldr	w12, [x8, #60]
   11cac:	lsl	w12, w12, #2
   11cb0:	and	w12, w12, #0x4
   11cb4:	lsr	w11, w11, w12
   11cb8:	and	w11, w11, #0xf
   11cbc:	orr	w10, w10, w11, lsl #16
   11cc0:	ldr	x8, [sp, #16]
   11cc4:	str	w10, [x8, #60]
   11cc8:	ldr	x8, [sp, #16]
   11ccc:	ldr	w10, [x8, #24]
   11cd0:	cbnz	w10, 11d14 <BZ2_bzDecompress@@Base+0x51c>
   11cd4:	ldr	x8, [sp, #16]
   11cd8:	ldrsw	x8, [x8, #28]
   11cdc:	ldr	x9, [sp]
   11ce0:	ldr	w10, [x9, x8, lsl #2]
   11ce4:	ldr	x8, [sp, #16]
   11ce8:	str	w10, [x8, #24]
   11cec:	ldr	x8, [sp, #16]
   11cf0:	ldr	w10, [x8, #28]
   11cf4:	add	w10, w10, #0x1
   11cf8:	str	w10, [x8, #28]
   11cfc:	ldr	x8, [sp, #16]
   11d00:	ldr	w10, [x8, #28]
   11d04:	cmp	w10, #0x200
   11d08:	b.ne	11d14 <BZ2_bzDecompress@@Base+0x51c>  // b.any
   11d0c:	ldr	x8, [sp, #16]
   11d10:	str	wzr, [x8, #28]
   11d14:	ldr	x8, [sp, #16]
   11d18:	ldr	w9, [x8, #24]
   11d1c:	subs	w9, w9, #0x1
   11d20:	str	w9, [x8, #24]
   11d24:	ldr	x8, [sp, #16]
   11d28:	ldr	w9, [x8, #24]
   11d2c:	mov	w10, #0x1                   	// #1
   11d30:	mov	w11, wzr
   11d34:	cmp	w9, #0x1
   11d38:	csel	w9, w10, w11, eq  // eq = none
   11d3c:	ldrb	w10, [sp, #15]
   11d40:	eor	w9, w10, w9
   11d44:	strb	w9, [sp, #15]
   11d48:	ldr	x8, [sp, #16]
   11d4c:	ldr	w9, [x8, #1092]
   11d50:	add	w9, w9, #0x1
   11d54:	str	w9, [x8, #1092]
   11d58:	ldr	x8, [sp, #16]
   11d5c:	ldr	w9, [x8, #1092]
   11d60:	ldr	x8, [sp, #16]
   11d64:	mov	x12, #0xfa50                	// #64080
   11d68:	add	x8, x8, x12
   11d6c:	ldr	w10, [x8]
   11d70:	add	w10, w10, #0x1
   11d74:	cmp	w9, w10
   11d78:	b.ne	11d80 <BZ2_bzDecompress@@Base+0x588>  // b.any
   11d7c:	b	11ac4 <BZ2_bzDecompress@@Base+0x2cc>
   11d80:	ldrb	w8, [sp, #15]
   11d84:	ldr	x9, [sp, #16]
   11d88:	ldr	w10, [x9, #64]
   11d8c:	cmp	w8, w10
   11d90:	b.eq	11da4 <BZ2_bzDecompress@@Base+0x5ac>  // b.none
   11d94:	ldrb	w8, [sp, #15]
   11d98:	ldr	x9, [sp, #16]
   11d9c:	str	w8, [x9, #64]
   11da0:	b	11ac4 <BZ2_bzDecompress@@Base+0x2cc>
   11da4:	ldr	x8, [sp, #16]
   11da8:	mov	w9, #0x2                   	// #2
   11dac:	str	w9, [x8, #16]
   11db0:	ldr	x8, [sp, #16]
   11db4:	ldr	w9, [x8, #60]
   11db8:	ldr	x8, [sp, #16]
   11dbc:	ldr	w10, [x8, #40]
   11dc0:	mov	w11, #0x86a0                	// #34464
   11dc4:	movk	w11, #0x1, lsl #16
   11dc8:	mul	w10, w11, w10
   11dcc:	cmp	w9, w10
   11dd0:	b.cc	11de0 <BZ2_bzDecompress@@Base+0x5e8>  // b.lo, b.ul, b.last
   11dd4:	mov	w8, #0x1                   	// #1
   11dd8:	sturb	w8, [x29, #-1]
   11ddc:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   11de0:	ldr	x8, [sp, #16]
   11de4:	ldr	w0, [x8, #60]
   11de8:	ldr	x8, [sp, #16]
   11dec:	add	x1, x8, #0x448
   11df0:	bl	1660 <BZ2_indexIntoF@plt>
   11df4:	strb	w0, [sp, #15]
   11df8:	ldr	x8, [sp, #16]
   11dfc:	ldr	x8, [x8, #3160]
   11e00:	ldr	x9, [sp, #16]
   11e04:	ldr	w10, [x9, #60]
   11e08:	mov	w9, w10
   11e0c:	ldrh	w10, [x8, x9, lsl #1]
   11e10:	ldr	x8, [sp, #16]
   11e14:	ldr	x8, [x8, #3168]
   11e18:	ldr	x9, [sp, #16]
   11e1c:	ldr	w11, [x9, #60]
   11e20:	lsr	w11, w11, #1
   11e24:	ldrb	w11, [x8, w11, uxtw]
   11e28:	ldr	x8, [sp, #16]
   11e2c:	ldr	w12, [x8, #60]
   11e30:	lsl	w12, w12, #2
   11e34:	and	w12, w12, #0x4
   11e38:	lsr	w11, w11, w12
   11e3c:	and	w11, w11, #0xf
   11e40:	orr	w10, w10, w11, lsl #16
   11e44:	ldr	x8, [sp, #16]
   11e48:	str	w10, [x8, #60]
   11e4c:	ldr	x8, [sp, #16]
   11e50:	ldr	w10, [x8, #24]
   11e54:	cbnz	w10, 11e98 <BZ2_bzDecompress@@Base+0x6a0>
   11e58:	ldr	x8, [sp, #16]
   11e5c:	ldrsw	x8, [x8, #28]
   11e60:	ldr	x9, [sp]
   11e64:	ldr	w10, [x9, x8, lsl #2]
   11e68:	ldr	x8, [sp, #16]
   11e6c:	str	w10, [x8, #24]
   11e70:	ldr	x8, [sp, #16]
   11e74:	ldr	w10, [x8, #28]
   11e78:	add	w10, w10, #0x1
   11e7c:	str	w10, [x8, #28]
   11e80:	ldr	x8, [sp, #16]
   11e84:	ldr	w10, [x8, #28]
   11e88:	cmp	w10, #0x200
   11e8c:	b.ne	11e98 <BZ2_bzDecompress@@Base+0x6a0>  // b.any
   11e90:	ldr	x8, [sp, #16]
   11e94:	str	wzr, [x8, #28]
   11e98:	ldr	x8, [sp, #16]
   11e9c:	ldr	w9, [x8, #24]
   11ea0:	subs	w9, w9, #0x1
   11ea4:	str	w9, [x8, #24]
   11ea8:	ldr	x8, [sp, #16]
   11eac:	ldr	w9, [x8, #24]
   11eb0:	mov	w10, #0x1                   	// #1
   11eb4:	mov	w11, wzr
   11eb8:	cmp	w9, #0x1
   11ebc:	csel	w9, w10, w11, eq  // eq = none
   11ec0:	ldrb	w10, [sp, #15]
   11ec4:	eor	w9, w10, w9
   11ec8:	strb	w9, [sp, #15]
   11ecc:	ldr	x8, [sp, #16]
   11ed0:	ldr	w9, [x8, #1092]
   11ed4:	add	w9, w9, #0x1
   11ed8:	str	w9, [x8, #1092]
   11edc:	ldr	x8, [sp, #16]
   11ee0:	ldr	w9, [x8, #1092]
   11ee4:	ldr	x8, [sp, #16]
   11ee8:	mov	x12, #0xfa50                	// #64080
   11eec:	add	x8, x8, x12
   11ef0:	ldr	w10, [x8]
   11ef4:	add	w10, w10, #0x1
   11ef8:	cmp	w9, w10
   11efc:	b.ne	11f04 <BZ2_bzDecompress@@Base+0x70c>  // b.any
   11f00:	b	11ac4 <BZ2_bzDecompress@@Base+0x2cc>
   11f04:	ldrb	w8, [sp, #15]
   11f08:	ldr	x9, [sp, #16]
   11f0c:	ldr	w10, [x9, #64]
   11f10:	cmp	w8, w10
   11f14:	b.eq	11f28 <BZ2_bzDecompress@@Base+0x730>  // b.none
   11f18:	ldrb	w8, [sp, #15]
   11f1c:	ldr	x9, [sp, #16]
   11f20:	str	w8, [x9, #64]
   11f24:	b	11ac4 <BZ2_bzDecompress@@Base+0x2cc>
   11f28:	ldr	x8, [sp, #16]
   11f2c:	mov	w9, #0x3                   	// #3
   11f30:	str	w9, [x8, #16]
   11f34:	ldr	x8, [sp, #16]
   11f38:	ldr	w9, [x8, #60]
   11f3c:	ldr	x8, [sp, #16]
   11f40:	ldr	w10, [x8, #40]
   11f44:	mov	w11, #0x86a0                	// #34464
   11f48:	movk	w11, #0x1, lsl #16
   11f4c:	mul	w10, w11, w10
   11f50:	cmp	w9, w10
   11f54:	b.cc	11f64 <BZ2_bzDecompress@@Base+0x76c>  // b.lo, b.ul, b.last
   11f58:	mov	w8, #0x1                   	// #1
   11f5c:	sturb	w8, [x29, #-1]
   11f60:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   11f64:	ldr	x8, [sp, #16]
   11f68:	ldr	w0, [x8, #60]
   11f6c:	ldr	x8, [sp, #16]
   11f70:	add	x1, x8, #0x448
   11f74:	bl	1660 <BZ2_indexIntoF@plt>
   11f78:	strb	w0, [sp, #15]
   11f7c:	ldr	x8, [sp, #16]
   11f80:	ldr	x8, [x8, #3160]
   11f84:	ldr	x9, [sp, #16]
   11f88:	ldr	w10, [x9, #60]
   11f8c:	mov	w9, w10
   11f90:	ldrh	w10, [x8, x9, lsl #1]
   11f94:	ldr	x8, [sp, #16]
   11f98:	ldr	x8, [x8, #3168]
   11f9c:	ldr	x9, [sp, #16]
   11fa0:	ldr	w11, [x9, #60]
   11fa4:	lsr	w11, w11, #1
   11fa8:	ldrb	w11, [x8, w11, uxtw]
   11fac:	ldr	x8, [sp, #16]
   11fb0:	ldr	w12, [x8, #60]
   11fb4:	lsl	w12, w12, #2
   11fb8:	and	w12, w12, #0x4
   11fbc:	lsr	w11, w11, w12
   11fc0:	and	w11, w11, #0xf
   11fc4:	orr	w10, w10, w11, lsl #16
   11fc8:	ldr	x8, [sp, #16]
   11fcc:	str	w10, [x8, #60]
   11fd0:	ldr	x8, [sp, #16]
   11fd4:	ldr	w10, [x8, #24]
   11fd8:	cbnz	w10, 1201c <BZ2_bzDecompress@@Base+0x824>
   11fdc:	ldr	x8, [sp, #16]
   11fe0:	ldrsw	x8, [x8, #28]
   11fe4:	ldr	x9, [sp]
   11fe8:	ldr	w10, [x9, x8, lsl #2]
   11fec:	ldr	x8, [sp, #16]
   11ff0:	str	w10, [x8, #24]
   11ff4:	ldr	x8, [sp, #16]
   11ff8:	ldr	w10, [x8, #28]
   11ffc:	add	w10, w10, #0x1
   12000:	str	w10, [x8, #28]
   12004:	ldr	x8, [sp, #16]
   12008:	ldr	w10, [x8, #28]
   1200c:	cmp	w10, #0x200
   12010:	b.ne	1201c <BZ2_bzDecompress@@Base+0x824>  // b.any
   12014:	ldr	x8, [sp, #16]
   12018:	str	wzr, [x8, #28]
   1201c:	ldr	x8, [sp, #16]
   12020:	ldr	w9, [x8, #24]
   12024:	subs	w9, w9, #0x1
   12028:	str	w9, [x8, #24]
   1202c:	ldr	x8, [sp, #16]
   12030:	ldr	w9, [x8, #24]
   12034:	mov	w10, #0x1                   	// #1
   12038:	mov	w11, wzr
   1203c:	cmp	w9, #0x1
   12040:	csel	w9, w10, w11, eq  // eq = none
   12044:	ldrb	w10, [sp, #15]
   12048:	eor	w9, w10, w9
   1204c:	strb	w9, [sp, #15]
   12050:	ldr	x8, [sp, #16]
   12054:	ldr	w9, [x8, #1092]
   12058:	add	w9, w9, #0x1
   1205c:	str	w9, [x8, #1092]
   12060:	ldr	x8, [sp, #16]
   12064:	ldr	w9, [x8, #1092]
   12068:	ldr	x8, [sp, #16]
   1206c:	mov	x12, #0xfa50                	// #64080
   12070:	add	x8, x8, x12
   12074:	ldr	w10, [x8]
   12078:	add	w10, w10, #0x1
   1207c:	cmp	w9, w10
   12080:	b.ne	12088 <BZ2_bzDecompress@@Base+0x890>  // b.any
   12084:	b	11ac4 <BZ2_bzDecompress@@Base+0x2cc>
   12088:	ldrb	w8, [sp, #15]
   1208c:	ldr	x9, [sp, #16]
   12090:	ldr	w10, [x9, #64]
   12094:	cmp	w8, w10
   12098:	b.eq	120ac <BZ2_bzDecompress@@Base+0x8b4>  // b.none
   1209c:	ldrb	w8, [sp, #15]
   120a0:	ldr	x9, [sp, #16]
   120a4:	str	w8, [x9, #64]
   120a8:	b	11ac4 <BZ2_bzDecompress@@Base+0x2cc>
   120ac:	ldr	x8, [sp, #16]
   120b0:	ldr	w9, [x8, #60]
   120b4:	ldr	x8, [sp, #16]
   120b8:	ldr	w10, [x8, #40]
   120bc:	mov	w11, #0x86a0                	// #34464
   120c0:	movk	w11, #0x1, lsl #16
   120c4:	mul	w10, w11, w10
   120c8:	cmp	w9, w10
   120cc:	b.cc	120dc <BZ2_bzDecompress@@Base+0x8e4>  // b.lo, b.ul, b.last
   120d0:	mov	w8, #0x1                   	// #1
   120d4:	sturb	w8, [x29, #-1]
   120d8:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   120dc:	ldr	x8, [sp, #16]
   120e0:	ldr	w0, [x8, #60]
   120e4:	ldr	x8, [sp, #16]
   120e8:	add	x1, x8, #0x448
   120ec:	bl	1660 <BZ2_indexIntoF@plt>
   120f0:	strb	w0, [sp, #15]
   120f4:	ldr	x8, [sp, #16]
   120f8:	ldr	x8, [x8, #3160]
   120fc:	ldr	x9, [sp, #16]
   12100:	ldr	w10, [x9, #60]
   12104:	mov	w9, w10
   12108:	ldrh	w10, [x8, x9, lsl #1]
   1210c:	ldr	x8, [sp, #16]
   12110:	ldr	x8, [x8, #3168]
   12114:	ldr	x9, [sp, #16]
   12118:	ldr	w11, [x9, #60]
   1211c:	lsr	w11, w11, #1
   12120:	ldrb	w11, [x8, w11, uxtw]
   12124:	ldr	x8, [sp, #16]
   12128:	ldr	w12, [x8, #60]
   1212c:	lsl	w12, w12, #2
   12130:	and	w12, w12, #0x4
   12134:	lsr	w11, w11, w12
   12138:	and	w11, w11, #0xf
   1213c:	orr	w10, w10, w11, lsl #16
   12140:	ldr	x8, [sp, #16]
   12144:	str	w10, [x8, #60]
   12148:	ldr	x8, [sp, #16]
   1214c:	ldr	w10, [x8, #24]
   12150:	cbnz	w10, 12194 <BZ2_bzDecompress@@Base+0x99c>
   12154:	ldr	x8, [sp, #16]
   12158:	ldrsw	x8, [x8, #28]
   1215c:	ldr	x9, [sp]
   12160:	ldr	w10, [x9, x8, lsl #2]
   12164:	ldr	x8, [sp, #16]
   12168:	str	w10, [x8, #24]
   1216c:	ldr	x8, [sp, #16]
   12170:	ldr	w10, [x8, #28]
   12174:	add	w10, w10, #0x1
   12178:	str	w10, [x8, #28]
   1217c:	ldr	x8, [sp, #16]
   12180:	ldr	w10, [x8, #28]
   12184:	cmp	w10, #0x200
   12188:	b.ne	12194 <BZ2_bzDecompress@@Base+0x99c>  // b.any
   1218c:	ldr	x8, [sp, #16]
   12190:	str	wzr, [x8, #28]
   12194:	ldr	x8, [sp, #16]
   12198:	ldr	w9, [x8, #24]
   1219c:	subs	w9, w9, #0x1
   121a0:	str	w9, [x8, #24]
   121a4:	ldr	x8, [sp, #16]
   121a8:	ldr	w9, [x8, #24]
   121ac:	mov	w10, #0x1                   	// #1
   121b0:	mov	w11, wzr
   121b4:	cmp	w9, #0x1
   121b8:	csel	w9, w10, w11, eq  // eq = none
   121bc:	ldrb	w10, [sp, #15]
   121c0:	eor	w9, w10, w9
   121c4:	strb	w9, [sp, #15]
   121c8:	ldr	x8, [sp, #16]
   121cc:	ldr	w9, [x8, #1092]
   121d0:	add	w9, w9, #0x1
   121d4:	str	w9, [x8, #1092]
   121d8:	ldrb	w9, [sp, #15]
   121dc:	add	w9, w9, #0x4
   121e0:	ldr	x8, [sp, #16]
   121e4:	str	w9, [x8, #16]
   121e8:	ldr	x8, [sp, #16]
   121ec:	ldr	w9, [x8, #60]
   121f0:	ldr	x8, [sp, #16]
   121f4:	ldr	w10, [x8, #40]
   121f8:	mov	w11, #0x86a0                	// #34464
   121fc:	movk	w11, #0x1, lsl #16
   12200:	mul	w10, w11, w10
   12204:	cmp	w9, w10
   12208:	b.cc	12218 <BZ2_bzDecompress@@Base+0xa20>  // b.lo, b.ul, b.last
   1220c:	mov	w8, #0x1                   	// #1
   12210:	sturb	w8, [x29, #-1]
   12214:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   12218:	ldr	x8, [sp, #16]
   1221c:	ldr	w0, [x8, #60]
   12220:	ldr	x8, [sp, #16]
   12224:	add	x1, x8, #0x448
   12228:	bl	1660 <BZ2_indexIntoF@plt>
   1222c:	ldr	x8, [sp, #16]
   12230:	str	w0, [x8, #64]
   12234:	ldr	x8, [sp, #16]
   12238:	ldr	x8, [x8, #3160]
   1223c:	ldr	x9, [sp, #16]
   12240:	ldr	w10, [x9, #60]
   12244:	mov	w9, w10
   12248:	ldrh	w10, [x8, x9, lsl #1]
   1224c:	ldr	x8, [sp, #16]
   12250:	ldr	x8, [x8, #3168]
   12254:	ldr	x9, [sp, #16]
   12258:	ldr	w11, [x9, #60]
   1225c:	lsr	w11, w11, #1
   12260:	ldrb	w11, [x8, w11, uxtw]
   12264:	ldr	x8, [sp, #16]
   12268:	ldr	w12, [x8, #60]
   1226c:	lsl	w12, w12, #2
   12270:	and	w12, w12, #0x4
   12274:	lsr	w11, w11, w12
   12278:	and	w11, w11, #0xf
   1227c:	orr	w10, w10, w11, lsl #16
   12280:	ldr	x8, [sp, #16]
   12284:	str	w10, [x8, #60]
   12288:	ldr	x8, [sp, #16]
   1228c:	ldr	w10, [x8, #24]
   12290:	cbnz	w10, 122d4 <BZ2_bzDecompress@@Base+0xadc>
   12294:	ldr	x8, [sp, #16]
   12298:	ldrsw	x8, [x8, #28]
   1229c:	ldr	x9, [sp]
   122a0:	ldr	w10, [x9, x8, lsl #2]
   122a4:	ldr	x8, [sp, #16]
   122a8:	str	w10, [x8, #24]
   122ac:	ldr	x8, [sp, #16]
   122b0:	ldr	w10, [x8, #28]
   122b4:	add	w10, w10, #0x1
   122b8:	str	w10, [x8, #28]
   122bc:	ldr	x8, [sp, #16]
   122c0:	ldr	w10, [x8, #28]
   122c4:	cmp	w10, #0x200
   122c8:	b.ne	122d4 <BZ2_bzDecompress@@Base+0xadc>  // b.any
   122cc:	ldr	x8, [sp, #16]
   122d0:	str	wzr, [x8, #28]
   122d4:	ldr	x8, [sp, #16]
   122d8:	ldr	w9, [x8, #24]
   122dc:	subs	w9, w9, #0x1
   122e0:	str	w9, [x8, #24]
   122e4:	ldr	x8, [sp, #16]
   122e8:	ldr	w9, [x8, #24]
   122ec:	mov	w10, #0x1                   	// #1
   122f0:	mov	w11, wzr
   122f4:	cmp	w9, #0x1
   122f8:	csel	w9, w10, w11, eq  // eq = none
   122fc:	ldr	x8, [sp, #16]
   12300:	ldr	w10, [x8, #64]
   12304:	eor	w9, w10, w9
   12308:	str	w9, [x8, #64]
   1230c:	ldr	x8, [sp, #16]
   12310:	ldr	w9, [x8, #1092]
   12314:	add	w9, w9, #0x1
   12318:	str	w9, [x8, #1092]
   1231c:	b	11ac4 <BZ2_bzDecompress@@Base+0x2cc>
   12320:	ldr	x8, [sp, #16]
   12324:	ldr	x8, [x8]
   12328:	ldr	w9, [x8, #32]
   1232c:	cbnz	w9, 1233c <BZ2_bzDecompress@@Base+0xb44>
   12330:	mov	w8, #0x0                   	// #0
   12334:	sturb	w8, [x29, #-1]
   12338:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   1233c:	ldr	x8, [sp, #16]
   12340:	ldr	w9, [x8, #16]
   12344:	cbnz	w9, 1234c <BZ2_bzDecompress@@Base+0xb54>
   12348:	b	1240c <BZ2_bzDecompress@@Base+0xc14>
   1234c:	ldr	x8, [sp, #16]
   12350:	ldrb	w9, [x8, #12]
   12354:	ldr	x8, [sp, #16]
   12358:	ldr	x8, [x8]
   1235c:	ldr	x8, [x8, #24]
   12360:	strb	w9, [x8]
   12364:	ldr	x8, [sp, #16]
   12368:	ldr	w9, [x8, #3184]
   1236c:	ldr	x8, [sp, #16]
   12370:	ldr	w10, [x8, #3184]
   12374:	ldr	x8, [sp, #16]
   12378:	ldrb	w11, [x8, #12]
   1237c:	eor	w10, w11, w10, lsr #24
   12380:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   12384:	ldr	x8, [x8, #4024]
   12388:	ldr	w10, [x8, w10, uxtw #2]
   1238c:	eor	w9, w10, w9, lsl #8
   12390:	ldr	x8, [sp, #16]
   12394:	str	w9, [x8, #3184]
   12398:	ldr	x8, [sp, #16]
   1239c:	ldr	w9, [x8, #16]
   123a0:	subs	w9, w9, #0x1
   123a4:	str	w9, [x8, #16]
   123a8:	ldr	x8, [sp, #16]
   123ac:	ldr	x8, [x8]
   123b0:	ldr	x12, [x8, #24]
   123b4:	add	x12, x12, #0x1
   123b8:	str	x12, [x8, #24]
   123bc:	ldr	x8, [sp, #16]
   123c0:	ldr	x8, [x8]
   123c4:	ldr	w9, [x8, #32]
   123c8:	subs	w9, w9, #0x1
   123cc:	str	w9, [x8, #32]
   123d0:	ldr	x8, [sp, #16]
   123d4:	ldr	x8, [x8]
   123d8:	ldr	w9, [x8, #36]
   123dc:	add	w9, w9, #0x1
   123e0:	str	w9, [x8, #36]
   123e4:	ldr	x8, [sp, #16]
   123e8:	ldr	x8, [x8]
   123ec:	ldr	w9, [x8, #36]
   123f0:	cbnz	w9, 12408 <BZ2_bzDecompress@@Base+0xc10>
   123f4:	ldr	x8, [sp, #16]
   123f8:	ldr	x8, [x8]
   123fc:	ldr	w9, [x8, #40]
   12400:	add	w9, w9, #0x1
   12404:	str	w9, [x8, #40]
   12408:	b	12320 <BZ2_bzDecompress@@Base+0xb28>
   1240c:	ldr	x8, [sp, #16]
   12410:	ldr	w9, [x8, #1092]
   12414:	ldr	x8, [sp, #16]
   12418:	mov	x10, #0xfa50                	// #64080
   1241c:	add	x8, x8, x10
   12420:	ldr	w11, [x8]
   12424:	add	w11, w11, #0x1
   12428:	cmp	w9, w11
   1242c:	b.ne	1243c <BZ2_bzDecompress@@Base+0xc44>  // b.any
   12430:	mov	w8, #0x0                   	// #0
   12434:	sturb	w8, [x29, #-1]
   12438:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   1243c:	ldr	x8, [sp, #16]
   12440:	ldr	w9, [x8, #1092]
   12444:	ldr	x8, [sp, #16]
   12448:	mov	x10, #0xfa50                	// #64080
   1244c:	add	x8, x8, x10
   12450:	ldr	w11, [x8]
   12454:	add	w11, w11, #0x1
   12458:	cmp	w9, w11
   1245c:	b.le	1246c <BZ2_bzDecompress@@Base+0xc74>
   12460:	mov	w8, #0x1                   	// #1
   12464:	sturb	w8, [x29, #-1]
   12468:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   1246c:	ldr	x8, [sp, #16]
   12470:	mov	w9, #0x1                   	// #1
   12474:	str	w9, [x8, #16]
   12478:	ldr	x8, [sp, #16]
   1247c:	ldr	w9, [x8, #64]
   12480:	ldr	x8, [sp, #16]
   12484:	strb	w9, [x8, #12]
   12488:	ldr	x8, [sp, #16]
   1248c:	ldr	w9, [x8, #60]
   12490:	ldr	x8, [sp, #16]
   12494:	ldr	w10, [x8, #40]
   12498:	mov	w11, #0x86a0                	// #34464
   1249c:	movk	w11, #0x1, lsl #16
   124a0:	mul	w10, w11, w10
   124a4:	cmp	w9, w10
   124a8:	b.cc	124b8 <BZ2_bzDecompress@@Base+0xcc0>  // b.lo, b.ul, b.last
   124ac:	mov	w8, #0x1                   	// #1
   124b0:	sturb	w8, [x29, #-1]
   124b4:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   124b8:	ldr	x8, [sp, #16]
   124bc:	ldr	w0, [x8, #60]
   124c0:	ldr	x8, [sp, #16]
   124c4:	add	x1, x8, #0x448
   124c8:	bl	1660 <BZ2_indexIntoF@plt>
   124cc:	strb	w0, [sp, #15]
   124d0:	ldr	x8, [sp, #16]
   124d4:	ldr	x8, [x8, #3160]
   124d8:	ldr	x9, [sp, #16]
   124dc:	ldr	w10, [x9, #60]
   124e0:	mov	w9, w10
   124e4:	ldrh	w10, [x8, x9, lsl #1]
   124e8:	ldr	x8, [sp, #16]
   124ec:	ldr	x8, [x8, #3168]
   124f0:	ldr	x9, [sp, #16]
   124f4:	ldr	w11, [x9, #60]
   124f8:	lsr	w11, w11, #1
   124fc:	ldrb	w11, [x8, w11, uxtw]
   12500:	ldr	x8, [sp, #16]
   12504:	ldr	w12, [x8, #60]
   12508:	lsl	w12, w12, #2
   1250c:	and	w12, w12, #0x4
   12510:	lsr	w11, w11, w12
   12514:	and	w11, w11, #0xf
   12518:	orr	w10, w10, w11, lsl #16
   1251c:	ldr	x8, [sp, #16]
   12520:	str	w10, [x8, #60]
   12524:	ldr	x8, [sp, #16]
   12528:	ldr	w10, [x8, #1092]
   1252c:	add	w10, w10, #0x1
   12530:	str	w10, [x8, #1092]
   12534:	ldr	x8, [sp, #16]
   12538:	ldr	w10, [x8, #1092]
   1253c:	ldr	x8, [sp, #16]
   12540:	mov	x9, #0xfa50                	// #64080
   12544:	add	x8, x8, x9
   12548:	ldr	w11, [x8]
   1254c:	add	w11, w11, #0x1
   12550:	cmp	w10, w11
   12554:	b.ne	1255c <BZ2_bzDecompress@@Base+0xd64>  // b.any
   12558:	b	12320 <BZ2_bzDecompress@@Base+0xb28>
   1255c:	ldrb	w8, [sp, #15]
   12560:	ldr	x9, [sp, #16]
   12564:	ldr	w10, [x9, #64]
   12568:	cmp	w8, w10
   1256c:	b.eq	12580 <BZ2_bzDecompress@@Base+0xd88>  // b.none
   12570:	ldrb	w8, [sp, #15]
   12574:	ldr	x9, [sp, #16]
   12578:	str	w8, [x9, #64]
   1257c:	b	12320 <BZ2_bzDecompress@@Base+0xb28>
   12580:	ldr	x8, [sp, #16]
   12584:	mov	w9, #0x2                   	// #2
   12588:	str	w9, [x8, #16]
   1258c:	ldr	x8, [sp, #16]
   12590:	ldr	w9, [x8, #60]
   12594:	ldr	x8, [sp, #16]
   12598:	ldr	w10, [x8, #40]
   1259c:	mov	w11, #0x86a0                	// #34464
   125a0:	movk	w11, #0x1, lsl #16
   125a4:	mul	w10, w11, w10
   125a8:	cmp	w9, w10
   125ac:	b.cc	125bc <BZ2_bzDecompress@@Base+0xdc4>  // b.lo, b.ul, b.last
   125b0:	mov	w8, #0x1                   	// #1
   125b4:	sturb	w8, [x29, #-1]
   125b8:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   125bc:	ldr	x8, [sp, #16]
   125c0:	ldr	w0, [x8, #60]
   125c4:	ldr	x8, [sp, #16]
   125c8:	add	x1, x8, #0x448
   125cc:	bl	1660 <BZ2_indexIntoF@plt>
   125d0:	strb	w0, [sp, #15]
   125d4:	ldr	x8, [sp, #16]
   125d8:	ldr	x8, [x8, #3160]
   125dc:	ldr	x9, [sp, #16]
   125e0:	ldr	w10, [x9, #60]
   125e4:	mov	w9, w10
   125e8:	ldrh	w10, [x8, x9, lsl #1]
   125ec:	ldr	x8, [sp, #16]
   125f0:	ldr	x8, [x8, #3168]
   125f4:	ldr	x9, [sp, #16]
   125f8:	ldr	w11, [x9, #60]
   125fc:	lsr	w11, w11, #1
   12600:	ldrb	w11, [x8, w11, uxtw]
   12604:	ldr	x8, [sp, #16]
   12608:	ldr	w12, [x8, #60]
   1260c:	lsl	w12, w12, #2
   12610:	and	w12, w12, #0x4
   12614:	lsr	w11, w11, w12
   12618:	and	w11, w11, #0xf
   1261c:	orr	w10, w10, w11, lsl #16
   12620:	ldr	x8, [sp, #16]
   12624:	str	w10, [x8, #60]
   12628:	ldr	x8, [sp, #16]
   1262c:	ldr	w10, [x8, #1092]
   12630:	add	w10, w10, #0x1
   12634:	str	w10, [x8, #1092]
   12638:	ldr	x8, [sp, #16]
   1263c:	ldr	w10, [x8, #1092]
   12640:	ldr	x8, [sp, #16]
   12644:	mov	x9, #0xfa50                	// #64080
   12648:	add	x8, x8, x9
   1264c:	ldr	w11, [x8]
   12650:	add	w11, w11, #0x1
   12654:	cmp	w10, w11
   12658:	b.ne	12660 <BZ2_bzDecompress@@Base+0xe68>  // b.any
   1265c:	b	12320 <BZ2_bzDecompress@@Base+0xb28>
   12660:	ldrb	w8, [sp, #15]
   12664:	ldr	x9, [sp, #16]
   12668:	ldr	w10, [x9, #64]
   1266c:	cmp	w8, w10
   12670:	b.eq	12684 <BZ2_bzDecompress@@Base+0xe8c>  // b.none
   12674:	ldrb	w8, [sp, #15]
   12678:	ldr	x9, [sp, #16]
   1267c:	str	w8, [x9, #64]
   12680:	b	12320 <BZ2_bzDecompress@@Base+0xb28>
   12684:	ldr	x8, [sp, #16]
   12688:	mov	w9, #0x3                   	// #3
   1268c:	str	w9, [x8, #16]
   12690:	ldr	x8, [sp, #16]
   12694:	ldr	w9, [x8, #60]
   12698:	ldr	x8, [sp, #16]
   1269c:	ldr	w10, [x8, #40]
   126a0:	mov	w11, #0x86a0                	// #34464
   126a4:	movk	w11, #0x1, lsl #16
   126a8:	mul	w10, w11, w10
   126ac:	cmp	w9, w10
   126b0:	b.cc	126c0 <BZ2_bzDecompress@@Base+0xec8>  // b.lo, b.ul, b.last
   126b4:	mov	w8, #0x1                   	// #1
   126b8:	sturb	w8, [x29, #-1]
   126bc:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   126c0:	ldr	x8, [sp, #16]
   126c4:	ldr	w0, [x8, #60]
   126c8:	ldr	x8, [sp, #16]
   126cc:	add	x1, x8, #0x448
   126d0:	bl	1660 <BZ2_indexIntoF@plt>
   126d4:	strb	w0, [sp, #15]
   126d8:	ldr	x8, [sp, #16]
   126dc:	ldr	x8, [x8, #3160]
   126e0:	ldr	x9, [sp, #16]
   126e4:	ldr	w10, [x9, #60]
   126e8:	mov	w9, w10
   126ec:	ldrh	w10, [x8, x9, lsl #1]
   126f0:	ldr	x8, [sp, #16]
   126f4:	ldr	x8, [x8, #3168]
   126f8:	ldr	x9, [sp, #16]
   126fc:	ldr	w11, [x9, #60]
   12700:	lsr	w11, w11, #1
   12704:	ldrb	w11, [x8, w11, uxtw]
   12708:	ldr	x8, [sp, #16]
   1270c:	ldr	w12, [x8, #60]
   12710:	lsl	w12, w12, #2
   12714:	and	w12, w12, #0x4
   12718:	lsr	w11, w11, w12
   1271c:	and	w11, w11, #0xf
   12720:	orr	w10, w10, w11, lsl #16
   12724:	ldr	x8, [sp, #16]
   12728:	str	w10, [x8, #60]
   1272c:	ldr	x8, [sp, #16]
   12730:	ldr	w10, [x8, #1092]
   12734:	add	w10, w10, #0x1
   12738:	str	w10, [x8, #1092]
   1273c:	ldr	x8, [sp, #16]
   12740:	ldr	w10, [x8, #1092]
   12744:	ldr	x8, [sp, #16]
   12748:	mov	x9, #0xfa50                	// #64080
   1274c:	add	x8, x8, x9
   12750:	ldr	w11, [x8]
   12754:	add	w11, w11, #0x1
   12758:	cmp	w10, w11
   1275c:	b.ne	12764 <BZ2_bzDecompress@@Base+0xf6c>  // b.any
   12760:	b	12320 <BZ2_bzDecompress@@Base+0xb28>
   12764:	ldrb	w8, [sp, #15]
   12768:	ldr	x9, [sp, #16]
   1276c:	ldr	w10, [x9, #64]
   12770:	cmp	w8, w10
   12774:	b.eq	12788 <BZ2_bzDecompress@@Base+0xf90>  // b.none
   12778:	ldrb	w8, [sp, #15]
   1277c:	ldr	x9, [sp, #16]
   12780:	str	w8, [x9, #64]
   12784:	b	12320 <BZ2_bzDecompress@@Base+0xb28>
   12788:	ldr	x8, [sp, #16]
   1278c:	ldr	w9, [x8, #60]
   12790:	ldr	x8, [sp, #16]
   12794:	ldr	w10, [x8, #40]
   12798:	mov	w11, #0x86a0                	// #34464
   1279c:	movk	w11, #0x1, lsl #16
   127a0:	mul	w10, w11, w10
   127a4:	cmp	w9, w10
   127a8:	b.cc	127b8 <BZ2_bzDecompress@@Base+0xfc0>  // b.lo, b.ul, b.last
   127ac:	mov	w8, #0x1                   	// #1
   127b0:	sturb	w8, [x29, #-1]
   127b4:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   127b8:	ldr	x8, [sp, #16]
   127bc:	ldr	w0, [x8, #60]
   127c0:	ldr	x8, [sp, #16]
   127c4:	add	x1, x8, #0x448
   127c8:	bl	1660 <BZ2_indexIntoF@plt>
   127cc:	strb	w0, [sp, #15]
   127d0:	ldr	x8, [sp, #16]
   127d4:	ldr	x8, [x8, #3160]
   127d8:	ldr	x9, [sp, #16]
   127dc:	ldr	w10, [x9, #60]
   127e0:	mov	w9, w10
   127e4:	ldrh	w10, [x8, x9, lsl #1]
   127e8:	ldr	x8, [sp, #16]
   127ec:	ldr	x8, [x8, #3168]
   127f0:	ldr	x9, [sp, #16]
   127f4:	ldr	w11, [x9, #60]
   127f8:	lsr	w11, w11, #1
   127fc:	ldrb	w11, [x8, w11, uxtw]
   12800:	ldr	x8, [sp, #16]
   12804:	ldr	w12, [x8, #60]
   12808:	lsl	w12, w12, #2
   1280c:	and	w12, w12, #0x4
   12810:	lsr	w11, w11, w12
   12814:	and	w11, w11, #0xf
   12818:	orr	w10, w10, w11, lsl #16
   1281c:	ldr	x8, [sp, #16]
   12820:	str	w10, [x8, #60]
   12824:	ldr	x8, [sp, #16]
   12828:	ldr	w10, [x8, #1092]
   1282c:	add	w10, w10, #0x1
   12830:	str	w10, [x8, #1092]
   12834:	ldrb	w10, [sp, #15]
   12838:	add	w10, w10, #0x4
   1283c:	ldr	x8, [sp, #16]
   12840:	str	w10, [x8, #16]
   12844:	ldr	x8, [sp, #16]
   12848:	ldr	w10, [x8, #60]
   1284c:	ldr	x8, [sp, #16]
   12850:	ldr	w11, [x8, #40]
   12854:	mov	w12, #0x86a0                	// #34464
   12858:	movk	w12, #0x1, lsl #16
   1285c:	mul	w11, w12, w11
   12860:	cmp	w10, w11
   12864:	b.cc	12874 <BZ2_bzDecompress@@Base+0x107c>  // b.lo, b.ul, b.last
   12868:	mov	w8, #0x1                   	// #1
   1286c:	sturb	w8, [x29, #-1]
   12870:	b	128f8 <BZ2_bzDecompress@@Base+0x1100>
   12874:	ldr	x8, [sp, #16]
   12878:	ldr	w0, [x8, #60]
   1287c:	ldr	x8, [sp, #16]
   12880:	add	x1, x8, #0x448
   12884:	bl	1660 <BZ2_indexIntoF@plt>
   12888:	ldr	x8, [sp, #16]
   1288c:	str	w0, [x8, #64]
   12890:	ldr	x8, [sp, #16]
   12894:	ldr	x8, [x8, #3160]
   12898:	ldr	x9, [sp, #16]
   1289c:	ldr	w10, [x9, #60]
   128a0:	mov	w9, w10
   128a4:	ldrh	w10, [x8, x9, lsl #1]
   128a8:	ldr	x8, [sp, #16]
   128ac:	ldr	x8, [x8, #3168]
   128b0:	ldr	x9, [sp, #16]
   128b4:	ldr	w11, [x9, #60]
   128b8:	lsr	w11, w11, #1
   128bc:	ldrb	w11, [x8, w11, uxtw]
   128c0:	ldr	x8, [sp, #16]
   128c4:	ldr	w12, [x8, #60]
   128c8:	lsl	w12, w12, #2
   128cc:	and	w12, w12, #0x4
   128d0:	lsr	w11, w11, w12
   128d4:	and	w11, w11, #0xf
   128d8:	orr	w10, w10, w11, lsl #16
   128dc:	ldr	x8, [sp, #16]
   128e0:	str	w10, [x8, #60]
   128e4:	ldr	x8, [sp, #16]
   128e8:	ldr	w10, [x8, #1092]
   128ec:	add	w10, w10, #0x1
   128f0:	str	w10, [x8, #1092]
   128f4:	b	12320 <BZ2_bzDecompress@@Base+0xb28>
   128f8:	ldurb	w0, [x29, #-1]
   128fc:	ldp	x29, x30, [sp, #32]
   12900:	add	sp, sp, #0x30
   12904:	ret
   12908:	sub	sp, sp, #0x70
   1290c:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   12910:	ldr	x8, [x8, #4024]
   12914:	adrp	x9, 26000 <BZ2_bzerror@@Base+0x10f84>
   12918:	ldr	x9, [x9, #4048]
   1291c:	str	x0, [sp, #96]
   12920:	ldr	x10, [sp, #96]
   12924:	ldrb	w11, [x10, #20]
   12928:	str	x8, [sp, #16]
   1292c:	str	x9, [sp, #8]
   12930:	cbz	w11, 130b4 <BZ2_bzDecompress@@Base+0x18bc>
   12934:	ldr	x8, [sp, #96]
   12938:	ldr	x8, [x8]
   1293c:	ldr	w9, [x8, #32]
   12940:	cbnz	w9, 12950 <BZ2_bzDecompress@@Base+0x1158>
   12944:	mov	w8, #0x0                   	// #0
   12948:	strb	w8, [sp, #111]
   1294c:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   12950:	ldr	x8, [sp, #96]
   12954:	ldr	w9, [x8, #16]
   12958:	cbnz	w9, 12960 <BZ2_bzDecompress@@Base+0x1168>
   1295c:	b	12a1c <BZ2_bzDecompress@@Base+0x1224>
   12960:	ldr	x8, [sp, #96]
   12964:	ldrb	w9, [x8, #12]
   12968:	ldr	x8, [sp, #96]
   1296c:	ldr	x8, [x8]
   12970:	ldr	x8, [x8, #24]
   12974:	strb	w9, [x8]
   12978:	ldr	x8, [sp, #96]
   1297c:	ldr	w9, [x8, #3184]
   12980:	ldr	x8, [sp, #96]
   12984:	ldr	w10, [x8, #3184]
   12988:	ldr	x8, [sp, #96]
   1298c:	ldrb	w11, [x8, #12]
   12990:	eor	w10, w11, w10, lsr #24
   12994:	ldr	x8, [sp, #16]
   12998:	ldr	w10, [x8, w10, uxtw #2]
   1299c:	eor	w9, w10, w9, lsl #8
   129a0:	ldr	x12, [sp, #96]
   129a4:	str	w9, [x12, #3184]
   129a8:	ldr	x12, [sp, #96]
   129ac:	ldr	w9, [x12, #16]
   129b0:	subs	w9, w9, #0x1
   129b4:	str	w9, [x12, #16]
   129b8:	ldr	x12, [sp, #96]
   129bc:	ldr	x12, [x12]
   129c0:	ldr	x13, [x12, #24]
   129c4:	add	x13, x13, #0x1
   129c8:	str	x13, [x12, #24]
   129cc:	ldr	x12, [sp, #96]
   129d0:	ldr	x12, [x12]
   129d4:	ldr	w9, [x12, #32]
   129d8:	subs	w9, w9, #0x1
   129dc:	str	w9, [x12, #32]
   129e0:	ldr	x12, [sp, #96]
   129e4:	ldr	x12, [x12]
   129e8:	ldr	w9, [x12, #36]
   129ec:	add	w9, w9, #0x1
   129f0:	str	w9, [x12, #36]
   129f4:	ldr	x12, [sp, #96]
   129f8:	ldr	x12, [x12]
   129fc:	ldr	w9, [x12, #36]
   12a00:	cbnz	w9, 12a18 <BZ2_bzDecompress@@Base+0x1220>
   12a04:	ldr	x8, [sp, #96]
   12a08:	ldr	x8, [x8]
   12a0c:	ldr	w9, [x8, #40]
   12a10:	add	w9, w9, #0x1
   12a14:	str	w9, [x8, #40]
   12a18:	b	12934 <BZ2_bzDecompress@@Base+0x113c>
   12a1c:	ldr	x8, [sp, #96]
   12a20:	ldr	w9, [x8, #1092]
   12a24:	ldr	x8, [sp, #96]
   12a28:	mov	x10, #0xfa50                	// #64080
   12a2c:	add	x8, x8, x10
   12a30:	ldr	w11, [x8]
   12a34:	add	w11, w11, #0x1
   12a38:	cmp	w9, w11
   12a3c:	b.ne	12a4c <BZ2_bzDecompress@@Base+0x1254>  // b.any
   12a40:	mov	w8, #0x0                   	// #0
   12a44:	strb	w8, [sp, #111]
   12a48:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   12a4c:	ldr	x8, [sp, #96]
   12a50:	ldr	w9, [x8, #1092]
   12a54:	ldr	x8, [sp, #96]
   12a58:	mov	x10, #0xfa50                	// #64080
   12a5c:	add	x8, x8, x10
   12a60:	ldr	w11, [x8]
   12a64:	add	w11, w11, #0x1
   12a68:	cmp	w9, w11
   12a6c:	b.le	12a7c <BZ2_bzDecompress@@Base+0x1284>
   12a70:	mov	w8, #0x1                   	// #1
   12a74:	strb	w8, [sp, #111]
   12a78:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   12a7c:	ldr	x8, [sp, #96]
   12a80:	mov	w9, #0x1                   	// #1
   12a84:	str	w9, [x8, #16]
   12a88:	ldr	x8, [sp, #96]
   12a8c:	ldr	w9, [x8, #64]
   12a90:	ldr	x8, [sp, #96]
   12a94:	strb	w9, [x8, #12]
   12a98:	ldr	x8, [sp, #96]
   12a9c:	ldr	w9, [x8, #60]
   12aa0:	ldr	x8, [sp, #96]
   12aa4:	ldr	w10, [x8, #40]
   12aa8:	mov	w11, #0x86a0                	// #34464
   12aac:	movk	w11, #0x1, lsl #16
   12ab0:	mul	w10, w11, w10
   12ab4:	cmp	w9, w10
   12ab8:	b.cc	12ac8 <BZ2_bzDecompress@@Base+0x12d0>  // b.lo, b.ul, b.last
   12abc:	mov	w8, #0x1                   	// #1
   12ac0:	strb	w8, [sp, #111]
   12ac4:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   12ac8:	ldr	x8, [sp, #96]
   12acc:	ldr	x8, [x8, #3152]
   12ad0:	ldr	x9, [sp, #96]
   12ad4:	ldr	w10, [x9, #60]
   12ad8:	mov	w9, w10
   12adc:	ldr	w10, [x8, x9, lsl #2]
   12ae0:	ldr	x8, [sp, #96]
   12ae4:	str	w10, [x8, #60]
   12ae8:	ldr	x8, [sp, #96]
   12aec:	ldr	w10, [x8, #60]
   12af0:	and	w10, w10, #0xff
   12af4:	strb	w10, [sp, #95]
   12af8:	ldr	x8, [sp, #96]
   12afc:	ldr	w10, [x8, #60]
   12b00:	lsr	w10, w10, #8
   12b04:	str	w10, [x8, #60]
   12b08:	ldr	x8, [sp, #96]
   12b0c:	ldr	w10, [x8, #24]
   12b10:	cbnz	w10, 12b54 <BZ2_bzDecompress@@Base+0x135c>
   12b14:	ldr	x8, [sp, #96]
   12b18:	ldrsw	x8, [x8, #28]
   12b1c:	ldr	x9, [sp, #8]
   12b20:	ldr	w10, [x9, x8, lsl #2]
   12b24:	ldr	x8, [sp, #96]
   12b28:	str	w10, [x8, #24]
   12b2c:	ldr	x8, [sp, #96]
   12b30:	ldr	w10, [x8, #28]
   12b34:	add	w10, w10, #0x1
   12b38:	str	w10, [x8, #28]
   12b3c:	ldr	x8, [sp, #96]
   12b40:	ldr	w10, [x8, #28]
   12b44:	cmp	w10, #0x200
   12b48:	b.ne	12b54 <BZ2_bzDecompress@@Base+0x135c>  // b.any
   12b4c:	ldr	x8, [sp, #96]
   12b50:	str	wzr, [x8, #28]
   12b54:	ldr	x8, [sp, #96]
   12b58:	ldr	w9, [x8, #24]
   12b5c:	subs	w9, w9, #0x1
   12b60:	str	w9, [x8, #24]
   12b64:	ldr	x8, [sp, #96]
   12b68:	ldr	w9, [x8, #24]
   12b6c:	mov	w10, #0x1                   	// #1
   12b70:	mov	w11, wzr
   12b74:	cmp	w9, #0x1
   12b78:	csel	w9, w10, w11, eq  // eq = none
   12b7c:	ldrb	w10, [sp, #95]
   12b80:	eor	w9, w10, w9
   12b84:	strb	w9, [sp, #95]
   12b88:	ldr	x8, [sp, #96]
   12b8c:	ldr	w9, [x8, #1092]
   12b90:	add	w9, w9, #0x1
   12b94:	str	w9, [x8, #1092]
   12b98:	ldr	x8, [sp, #96]
   12b9c:	ldr	w9, [x8, #1092]
   12ba0:	ldr	x8, [sp, #96]
   12ba4:	mov	x12, #0xfa50                	// #64080
   12ba8:	add	x8, x8, x12
   12bac:	ldr	w10, [x8]
   12bb0:	add	w10, w10, #0x1
   12bb4:	cmp	w9, w10
   12bb8:	b.ne	12bc0 <BZ2_bzDecompress@@Base+0x13c8>  // b.any
   12bbc:	b	12934 <BZ2_bzDecompress@@Base+0x113c>
   12bc0:	ldrb	w8, [sp, #95]
   12bc4:	ldr	x9, [sp, #96]
   12bc8:	ldr	w10, [x9, #64]
   12bcc:	cmp	w8, w10
   12bd0:	b.eq	12be4 <BZ2_bzDecompress@@Base+0x13ec>  // b.none
   12bd4:	ldrb	w8, [sp, #95]
   12bd8:	ldr	x9, [sp, #96]
   12bdc:	str	w8, [x9, #64]
   12be0:	b	12934 <BZ2_bzDecompress@@Base+0x113c>
   12be4:	ldr	x8, [sp, #96]
   12be8:	mov	w9, #0x2                   	// #2
   12bec:	str	w9, [x8, #16]
   12bf0:	ldr	x8, [sp, #96]
   12bf4:	ldr	w9, [x8, #60]
   12bf8:	ldr	x8, [sp, #96]
   12bfc:	ldr	w10, [x8, #40]
   12c00:	mov	w11, #0x86a0                	// #34464
   12c04:	movk	w11, #0x1, lsl #16
   12c08:	mul	w10, w11, w10
   12c0c:	cmp	w9, w10
   12c10:	b.cc	12c20 <BZ2_bzDecompress@@Base+0x1428>  // b.lo, b.ul, b.last
   12c14:	mov	w8, #0x1                   	// #1
   12c18:	strb	w8, [sp, #111]
   12c1c:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   12c20:	ldr	x8, [sp, #96]
   12c24:	ldr	x8, [x8, #3152]
   12c28:	ldr	x9, [sp, #96]
   12c2c:	ldr	w10, [x9, #60]
   12c30:	mov	w9, w10
   12c34:	ldr	w10, [x8, x9, lsl #2]
   12c38:	ldr	x8, [sp, #96]
   12c3c:	str	w10, [x8, #60]
   12c40:	ldr	x8, [sp, #96]
   12c44:	ldr	w10, [x8, #60]
   12c48:	and	w10, w10, #0xff
   12c4c:	strb	w10, [sp, #95]
   12c50:	ldr	x8, [sp, #96]
   12c54:	ldr	w10, [x8, #60]
   12c58:	lsr	w10, w10, #8
   12c5c:	str	w10, [x8, #60]
   12c60:	ldr	x8, [sp, #96]
   12c64:	ldr	w10, [x8, #24]
   12c68:	cbnz	w10, 12cac <BZ2_bzDecompress@@Base+0x14b4>
   12c6c:	ldr	x8, [sp, #96]
   12c70:	ldrsw	x8, [x8, #28]
   12c74:	ldr	x9, [sp, #8]
   12c78:	ldr	w10, [x9, x8, lsl #2]
   12c7c:	ldr	x8, [sp, #96]
   12c80:	str	w10, [x8, #24]
   12c84:	ldr	x8, [sp, #96]
   12c88:	ldr	w10, [x8, #28]
   12c8c:	add	w10, w10, #0x1
   12c90:	str	w10, [x8, #28]
   12c94:	ldr	x8, [sp, #96]
   12c98:	ldr	w10, [x8, #28]
   12c9c:	cmp	w10, #0x200
   12ca0:	b.ne	12cac <BZ2_bzDecompress@@Base+0x14b4>  // b.any
   12ca4:	ldr	x8, [sp, #96]
   12ca8:	str	wzr, [x8, #28]
   12cac:	ldr	x8, [sp, #96]
   12cb0:	ldr	w9, [x8, #24]
   12cb4:	subs	w9, w9, #0x1
   12cb8:	str	w9, [x8, #24]
   12cbc:	ldr	x8, [sp, #96]
   12cc0:	ldr	w9, [x8, #24]
   12cc4:	mov	w10, #0x1                   	// #1
   12cc8:	mov	w11, wzr
   12ccc:	cmp	w9, #0x1
   12cd0:	csel	w9, w10, w11, eq  // eq = none
   12cd4:	ldrb	w10, [sp, #95]
   12cd8:	eor	w9, w10, w9
   12cdc:	strb	w9, [sp, #95]
   12ce0:	ldr	x8, [sp, #96]
   12ce4:	ldr	w9, [x8, #1092]
   12ce8:	add	w9, w9, #0x1
   12cec:	str	w9, [x8, #1092]
   12cf0:	ldr	x8, [sp, #96]
   12cf4:	ldr	w9, [x8, #1092]
   12cf8:	ldr	x8, [sp, #96]
   12cfc:	mov	x12, #0xfa50                	// #64080
   12d00:	add	x8, x8, x12
   12d04:	ldr	w10, [x8]
   12d08:	add	w10, w10, #0x1
   12d0c:	cmp	w9, w10
   12d10:	b.ne	12d18 <BZ2_bzDecompress@@Base+0x1520>  // b.any
   12d14:	b	12934 <BZ2_bzDecompress@@Base+0x113c>
   12d18:	ldrb	w8, [sp, #95]
   12d1c:	ldr	x9, [sp, #96]
   12d20:	ldr	w10, [x9, #64]
   12d24:	cmp	w8, w10
   12d28:	b.eq	12d3c <BZ2_bzDecompress@@Base+0x1544>  // b.none
   12d2c:	ldrb	w8, [sp, #95]
   12d30:	ldr	x9, [sp, #96]
   12d34:	str	w8, [x9, #64]
   12d38:	b	12934 <BZ2_bzDecompress@@Base+0x113c>
   12d3c:	ldr	x8, [sp, #96]
   12d40:	mov	w9, #0x3                   	// #3
   12d44:	str	w9, [x8, #16]
   12d48:	ldr	x8, [sp, #96]
   12d4c:	ldr	w9, [x8, #60]
   12d50:	ldr	x8, [sp, #96]
   12d54:	ldr	w10, [x8, #40]
   12d58:	mov	w11, #0x86a0                	// #34464
   12d5c:	movk	w11, #0x1, lsl #16
   12d60:	mul	w10, w11, w10
   12d64:	cmp	w9, w10
   12d68:	b.cc	12d78 <BZ2_bzDecompress@@Base+0x1580>  // b.lo, b.ul, b.last
   12d6c:	mov	w8, #0x1                   	// #1
   12d70:	strb	w8, [sp, #111]
   12d74:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   12d78:	ldr	x8, [sp, #96]
   12d7c:	ldr	x8, [x8, #3152]
   12d80:	ldr	x9, [sp, #96]
   12d84:	ldr	w10, [x9, #60]
   12d88:	mov	w9, w10
   12d8c:	ldr	w10, [x8, x9, lsl #2]
   12d90:	ldr	x8, [sp, #96]
   12d94:	str	w10, [x8, #60]
   12d98:	ldr	x8, [sp, #96]
   12d9c:	ldr	w10, [x8, #60]
   12da0:	and	w10, w10, #0xff
   12da4:	strb	w10, [sp, #95]
   12da8:	ldr	x8, [sp, #96]
   12dac:	ldr	w10, [x8, #60]
   12db0:	lsr	w10, w10, #8
   12db4:	str	w10, [x8, #60]
   12db8:	ldr	x8, [sp, #96]
   12dbc:	ldr	w10, [x8, #24]
   12dc0:	cbnz	w10, 12e04 <BZ2_bzDecompress@@Base+0x160c>
   12dc4:	ldr	x8, [sp, #96]
   12dc8:	ldrsw	x8, [x8, #28]
   12dcc:	ldr	x9, [sp, #8]
   12dd0:	ldr	w10, [x9, x8, lsl #2]
   12dd4:	ldr	x8, [sp, #96]
   12dd8:	str	w10, [x8, #24]
   12ddc:	ldr	x8, [sp, #96]
   12de0:	ldr	w10, [x8, #28]
   12de4:	add	w10, w10, #0x1
   12de8:	str	w10, [x8, #28]
   12dec:	ldr	x8, [sp, #96]
   12df0:	ldr	w10, [x8, #28]
   12df4:	cmp	w10, #0x200
   12df8:	b.ne	12e04 <BZ2_bzDecompress@@Base+0x160c>  // b.any
   12dfc:	ldr	x8, [sp, #96]
   12e00:	str	wzr, [x8, #28]
   12e04:	ldr	x8, [sp, #96]
   12e08:	ldr	w9, [x8, #24]
   12e0c:	subs	w9, w9, #0x1
   12e10:	str	w9, [x8, #24]
   12e14:	ldr	x8, [sp, #96]
   12e18:	ldr	w9, [x8, #24]
   12e1c:	mov	w10, #0x1                   	// #1
   12e20:	mov	w11, wzr
   12e24:	cmp	w9, #0x1
   12e28:	csel	w9, w10, w11, eq  // eq = none
   12e2c:	ldrb	w10, [sp, #95]
   12e30:	eor	w9, w10, w9
   12e34:	strb	w9, [sp, #95]
   12e38:	ldr	x8, [sp, #96]
   12e3c:	ldr	w9, [x8, #1092]
   12e40:	add	w9, w9, #0x1
   12e44:	str	w9, [x8, #1092]
   12e48:	ldr	x8, [sp, #96]
   12e4c:	ldr	w9, [x8, #1092]
   12e50:	ldr	x8, [sp, #96]
   12e54:	mov	x12, #0xfa50                	// #64080
   12e58:	add	x8, x8, x12
   12e5c:	ldr	w10, [x8]
   12e60:	add	w10, w10, #0x1
   12e64:	cmp	w9, w10
   12e68:	b.ne	12e70 <BZ2_bzDecompress@@Base+0x1678>  // b.any
   12e6c:	b	12934 <BZ2_bzDecompress@@Base+0x113c>
   12e70:	ldrb	w8, [sp, #95]
   12e74:	ldr	x9, [sp, #96]
   12e78:	ldr	w10, [x9, #64]
   12e7c:	cmp	w8, w10
   12e80:	b.eq	12e94 <BZ2_bzDecompress@@Base+0x169c>  // b.none
   12e84:	ldrb	w8, [sp, #95]
   12e88:	ldr	x9, [sp, #96]
   12e8c:	str	w8, [x9, #64]
   12e90:	b	12934 <BZ2_bzDecompress@@Base+0x113c>
   12e94:	ldr	x8, [sp, #96]
   12e98:	ldr	w9, [x8, #60]
   12e9c:	ldr	x8, [sp, #96]
   12ea0:	ldr	w10, [x8, #40]
   12ea4:	mov	w11, #0x86a0                	// #34464
   12ea8:	movk	w11, #0x1, lsl #16
   12eac:	mul	w10, w11, w10
   12eb0:	cmp	w9, w10
   12eb4:	b.cc	12ec4 <BZ2_bzDecompress@@Base+0x16cc>  // b.lo, b.ul, b.last
   12eb8:	mov	w8, #0x1                   	// #1
   12ebc:	strb	w8, [sp, #111]
   12ec0:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   12ec4:	ldr	x8, [sp, #96]
   12ec8:	ldr	x8, [x8, #3152]
   12ecc:	ldr	x9, [sp, #96]
   12ed0:	ldr	w10, [x9, #60]
   12ed4:	mov	w9, w10
   12ed8:	ldr	w10, [x8, x9, lsl #2]
   12edc:	ldr	x8, [sp, #96]
   12ee0:	str	w10, [x8, #60]
   12ee4:	ldr	x8, [sp, #96]
   12ee8:	ldr	w10, [x8, #60]
   12eec:	and	w10, w10, #0xff
   12ef0:	strb	w10, [sp, #95]
   12ef4:	ldr	x8, [sp, #96]
   12ef8:	ldr	w10, [x8, #60]
   12efc:	lsr	w10, w10, #8
   12f00:	str	w10, [x8, #60]
   12f04:	ldr	x8, [sp, #96]
   12f08:	ldr	w10, [x8, #24]
   12f0c:	cbnz	w10, 12f50 <BZ2_bzDecompress@@Base+0x1758>
   12f10:	ldr	x8, [sp, #96]
   12f14:	ldrsw	x8, [x8, #28]
   12f18:	ldr	x9, [sp, #8]
   12f1c:	ldr	w10, [x9, x8, lsl #2]
   12f20:	ldr	x8, [sp, #96]
   12f24:	str	w10, [x8, #24]
   12f28:	ldr	x8, [sp, #96]
   12f2c:	ldr	w10, [x8, #28]
   12f30:	add	w10, w10, #0x1
   12f34:	str	w10, [x8, #28]
   12f38:	ldr	x8, [sp, #96]
   12f3c:	ldr	w10, [x8, #28]
   12f40:	cmp	w10, #0x200
   12f44:	b.ne	12f50 <BZ2_bzDecompress@@Base+0x1758>  // b.any
   12f48:	ldr	x8, [sp, #96]
   12f4c:	str	wzr, [x8, #28]
   12f50:	ldr	x8, [sp, #96]
   12f54:	ldr	w9, [x8, #24]
   12f58:	subs	w9, w9, #0x1
   12f5c:	str	w9, [x8, #24]
   12f60:	ldr	x8, [sp, #96]
   12f64:	ldr	w9, [x8, #24]
   12f68:	mov	w10, #0x1                   	// #1
   12f6c:	mov	w11, wzr
   12f70:	cmp	w9, #0x1
   12f74:	csel	w9, w10, w11, eq  // eq = none
   12f78:	ldrb	w10, [sp, #95]
   12f7c:	eor	w9, w10, w9
   12f80:	strb	w9, [sp, #95]
   12f84:	ldr	x8, [sp, #96]
   12f88:	ldr	w9, [x8, #1092]
   12f8c:	add	w9, w9, #0x1
   12f90:	str	w9, [x8, #1092]
   12f94:	ldrb	w9, [sp, #95]
   12f98:	add	w9, w9, #0x4
   12f9c:	ldr	x8, [sp, #96]
   12fa0:	str	w9, [x8, #16]
   12fa4:	ldr	x8, [sp, #96]
   12fa8:	ldr	w9, [x8, #60]
   12fac:	ldr	x8, [sp, #96]
   12fb0:	ldr	w10, [x8, #40]
   12fb4:	mov	w11, #0x86a0                	// #34464
   12fb8:	movk	w11, #0x1, lsl #16
   12fbc:	mul	w10, w11, w10
   12fc0:	cmp	w9, w10
   12fc4:	b.cc	12fd4 <BZ2_bzDecompress@@Base+0x17dc>  // b.lo, b.ul, b.last
   12fc8:	mov	w8, #0x1                   	// #1
   12fcc:	strb	w8, [sp, #111]
   12fd0:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   12fd4:	ldr	x8, [sp, #96]
   12fd8:	ldr	x8, [x8, #3152]
   12fdc:	ldr	x9, [sp, #96]
   12fe0:	ldr	w10, [x9, #60]
   12fe4:	mov	w9, w10
   12fe8:	ldr	w10, [x8, x9, lsl #2]
   12fec:	ldr	x8, [sp, #96]
   12ff0:	str	w10, [x8, #60]
   12ff4:	ldr	x8, [sp, #96]
   12ff8:	ldr	w10, [x8, #60]
   12ffc:	and	w10, w10, #0xff
   13000:	and	w10, w10, #0xff
   13004:	ldr	x8, [sp, #96]
   13008:	str	w10, [x8, #64]
   1300c:	ldr	x8, [sp, #96]
   13010:	ldr	w10, [x8, #60]
   13014:	lsr	w10, w10, #8
   13018:	str	w10, [x8, #60]
   1301c:	ldr	x8, [sp, #96]
   13020:	ldr	w10, [x8, #24]
   13024:	cbnz	w10, 13068 <BZ2_bzDecompress@@Base+0x1870>
   13028:	ldr	x8, [sp, #96]
   1302c:	ldrsw	x8, [x8, #28]
   13030:	ldr	x9, [sp, #8]
   13034:	ldr	w10, [x9, x8, lsl #2]
   13038:	ldr	x8, [sp, #96]
   1303c:	str	w10, [x8, #24]
   13040:	ldr	x8, [sp, #96]
   13044:	ldr	w10, [x8, #28]
   13048:	add	w10, w10, #0x1
   1304c:	str	w10, [x8, #28]
   13050:	ldr	x8, [sp, #96]
   13054:	ldr	w10, [x8, #28]
   13058:	cmp	w10, #0x200
   1305c:	b.ne	13068 <BZ2_bzDecompress@@Base+0x1870>  // b.any
   13060:	ldr	x8, [sp, #96]
   13064:	str	wzr, [x8, #28]
   13068:	ldr	x8, [sp, #96]
   1306c:	ldr	w9, [x8, #24]
   13070:	subs	w9, w9, #0x1
   13074:	str	w9, [x8, #24]
   13078:	ldr	x8, [sp, #96]
   1307c:	ldr	w9, [x8, #24]
   13080:	mov	w10, #0x1                   	// #1
   13084:	mov	w11, wzr
   13088:	cmp	w9, #0x1
   1308c:	csel	w9, w10, w11, eq  // eq = none
   13090:	ldr	x8, [sp, #96]
   13094:	ldr	w10, [x8, #64]
   13098:	eor	w9, w10, w9
   1309c:	str	w9, [x8, #64]
   130a0:	ldr	x8, [sp, #96]
   130a4:	ldr	w9, [x8, #1092]
   130a8:	add	w9, w9, #0x1
   130ac:	str	w9, [x8, #1092]
   130b0:	b	12934 <BZ2_bzDecompress@@Base+0x113c>
   130b4:	ldr	x8, [sp, #96]
   130b8:	ldr	w9, [x8, #3184]
   130bc:	str	w9, [sp, #88]
   130c0:	ldr	x8, [sp, #96]
   130c4:	ldrb	w9, [x8, #12]
   130c8:	strb	w9, [sp, #87]
   130cc:	ldr	x8, [sp, #96]
   130d0:	ldr	w9, [x8, #16]
   130d4:	str	w9, [sp, #80]
   130d8:	ldr	x8, [sp, #96]
   130dc:	ldr	w9, [x8, #1092]
   130e0:	str	w9, [sp, #76]
   130e4:	ldr	x8, [sp, #96]
   130e8:	ldr	w9, [x8, #64]
   130ec:	str	w9, [sp, #72]
   130f0:	ldr	x8, [sp, #96]
   130f4:	ldr	x8, [x8, #3152]
   130f8:	str	x8, [sp, #64]
   130fc:	ldr	x8, [sp, #96]
   13100:	ldr	w9, [x8, #60]
   13104:	str	w9, [sp, #60]
   13108:	ldr	x8, [sp, #96]
   1310c:	ldr	x8, [x8]
   13110:	ldr	x8, [x8, #24]
   13114:	str	x8, [sp, #48]
   13118:	ldr	x8, [sp, #96]
   1311c:	ldr	x8, [x8]
   13120:	ldr	w9, [x8, #32]
   13124:	str	w9, [sp, #44]
   13128:	ldr	x8, [sp, #96]
   1312c:	ldr	w9, [x8, #40]
   13130:	str	w9, [sp, #40]
   13134:	ldr	w9, [sp, #44]
   13138:	str	w9, [sp, #36]
   1313c:	ldr	x8, [sp, #96]
   13140:	mov	x10, #0xfa50                	// #64080
   13144:	add	x8, x8, x10
   13148:	ldr	w9, [x8]
   1314c:	add	w9, w9, #0x1
   13150:	str	w9, [sp, #32]
   13154:	ldr	w8, [sp, #80]
   13158:	cmp	w8, #0x0
   1315c:	cset	w8, le
   13160:	tbnz	w8, #0, 1322c <BZ2_bzDecompress@@Base+0x1a34>
   13164:	ldr	w8, [sp, #44]
   13168:	cbnz	w8, 13170 <BZ2_bzDecompress@@Base+0x1978>
   1316c:	b	134fc <BZ2_bzDecompress@@Base+0x1d04>
   13170:	ldr	w8, [sp, #80]
   13174:	cmp	w8, #0x1
   13178:	b.ne	13180 <BZ2_bzDecompress@@Base+0x1988>  // b.any
   1317c:	b	131d4 <BZ2_bzDecompress@@Base+0x19dc>
   13180:	ldrb	w8, [sp, #87]
   13184:	ldr	x9, [sp, #48]
   13188:	strb	w8, [x9]
   1318c:	ldr	w8, [sp, #88]
   13190:	ldr	w10, [sp, #88]
   13194:	ldrb	w11, [sp, #87]
   13198:	eor	w10, w11, w10, lsr #24
   1319c:	ldr	x9, [sp, #16]
   131a0:	ldr	w10, [x9, w10, uxtw #2]
   131a4:	eor	w8, w10, w8, lsl #8
   131a8:	str	w8, [sp, #88]
   131ac:	ldr	w8, [sp, #80]
   131b0:	subs	w8, w8, #0x1
   131b4:	str	w8, [sp, #80]
   131b8:	ldr	x12, [sp, #48]
   131bc:	add	x12, x12, #0x1
   131c0:	str	x12, [sp, #48]
   131c4:	ldr	w8, [sp, #44]
   131c8:	subs	w8, w8, #0x1
   131cc:	str	w8, [sp, #44]
   131d0:	b	13164 <BZ2_bzDecompress@@Base+0x196c>
   131d4:	ldr	w8, [sp, #44]
   131d8:	cbnz	w8, 131e8 <BZ2_bzDecompress@@Base+0x19f0>
   131dc:	mov	w8, #0x1                   	// #1
   131e0:	str	w8, [sp, #80]
   131e4:	b	134fc <BZ2_bzDecompress@@Base+0x1d04>
   131e8:	ldrb	w8, [sp, #87]
   131ec:	ldr	x9, [sp, #48]
   131f0:	strb	w8, [x9]
   131f4:	ldr	w8, [sp, #88]
   131f8:	ldr	w10, [sp, #88]
   131fc:	ldrb	w11, [sp, #87]
   13200:	eor	w10, w11, w10, lsr #24
   13204:	ldr	x9, [sp, #16]
   13208:	ldr	w10, [x9, w10, uxtw #2]
   1320c:	eor	w8, w10, w8, lsl #8
   13210:	str	w8, [sp, #88]
   13214:	ldr	x12, [sp, #48]
   13218:	add	x12, x12, #0x1
   1321c:	str	x12, [sp, #48]
   13220:	ldr	w8, [sp, #44]
   13224:	subs	w8, w8, #0x1
   13228:	str	w8, [sp, #44]
   1322c:	ldr	w8, [sp, #76]
   13230:	ldr	w9, [sp, #32]
   13234:	cmp	w8, w9
   13238:	b.le	13248 <BZ2_bzDecompress@@Base+0x1a50>
   1323c:	mov	w8, #0x1                   	// #1
   13240:	strb	w8, [sp, #111]
   13244:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   13248:	ldr	w8, [sp, #76]
   1324c:	ldr	w9, [sp, #32]
   13250:	cmp	w8, w9
   13254:	b.ne	13260 <BZ2_bzDecompress@@Base+0x1a68>  // b.any
   13258:	str	wzr, [sp, #80]
   1325c:	b	134fc <BZ2_bzDecompress@@Base+0x1d04>
   13260:	ldr	w8, [sp, #72]
   13264:	strb	w8, [sp, #87]
   13268:	ldr	w8, [sp, #60]
   1326c:	ldr	w9, [sp, #40]
   13270:	mov	w10, #0x86a0                	// #34464
   13274:	movk	w10, #0x1, lsl #16
   13278:	mul	w9, w10, w9
   1327c:	cmp	w8, w9
   13280:	b.cc	13290 <BZ2_bzDecompress@@Base+0x1a98>  // b.lo, b.ul, b.last
   13284:	mov	w8, #0x1                   	// #1
   13288:	strb	w8, [sp, #111]
   1328c:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   13290:	ldr	x8, [sp, #64]
   13294:	ldr	w9, [sp, #60]
   13298:	mov	w10, w9
   1329c:	ldr	w9, [x8, x10, lsl #2]
   132a0:	str	w9, [sp, #60]
   132a4:	ldr	w9, [sp, #60]
   132a8:	and	w9, w9, #0xff
   132ac:	strb	w9, [sp, #95]
   132b0:	ldr	w9, [sp, #60]
   132b4:	lsr	w9, w9, #8
   132b8:	str	w9, [sp, #60]
   132bc:	ldr	w9, [sp, #76]
   132c0:	add	w9, w9, #0x1
   132c4:	str	w9, [sp, #76]
   132c8:	ldrb	w9, [sp, #95]
   132cc:	ldr	w11, [sp, #72]
   132d0:	cmp	w9, w11
   132d4:	b.eq	132e4 <BZ2_bzDecompress@@Base+0x1aec>  // b.none
   132d8:	ldrb	w8, [sp, #95]
   132dc:	str	w8, [sp, #72]
   132e0:	b	131d4 <BZ2_bzDecompress@@Base+0x19dc>
   132e4:	ldr	w8, [sp, #76]
   132e8:	ldr	w9, [sp, #32]
   132ec:	cmp	w8, w9
   132f0:	b.ne	132f8 <BZ2_bzDecompress@@Base+0x1b00>  // b.any
   132f4:	b	131d4 <BZ2_bzDecompress@@Base+0x19dc>
   132f8:	mov	w8, #0x2                   	// #2
   132fc:	str	w8, [sp, #80]
   13300:	ldr	w8, [sp, #60]
   13304:	ldr	w9, [sp, #40]
   13308:	mov	w10, #0x86a0                	// #34464
   1330c:	movk	w10, #0x1, lsl #16
   13310:	mul	w9, w10, w9
   13314:	cmp	w8, w9
   13318:	b.cc	13328 <BZ2_bzDecompress@@Base+0x1b30>  // b.lo, b.ul, b.last
   1331c:	mov	w8, #0x1                   	// #1
   13320:	strb	w8, [sp, #111]
   13324:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   13328:	ldr	x8, [sp, #64]
   1332c:	ldr	w9, [sp, #60]
   13330:	mov	w10, w9
   13334:	ldr	w9, [x8, x10, lsl #2]
   13338:	str	w9, [sp, #60]
   1333c:	ldr	w9, [sp, #60]
   13340:	and	w9, w9, #0xff
   13344:	strb	w9, [sp, #95]
   13348:	ldr	w9, [sp, #60]
   1334c:	lsr	w9, w9, #8
   13350:	str	w9, [sp, #60]
   13354:	ldr	w9, [sp, #76]
   13358:	add	w9, w9, #0x1
   1335c:	str	w9, [sp, #76]
   13360:	ldr	w9, [sp, #76]
   13364:	ldr	w11, [sp, #32]
   13368:	cmp	w9, w11
   1336c:	b.ne	13374 <BZ2_bzDecompress@@Base+0x1b7c>  // b.any
   13370:	b	13154 <BZ2_bzDecompress@@Base+0x195c>
   13374:	ldrb	w8, [sp, #95]
   13378:	ldr	w9, [sp, #72]
   1337c:	cmp	w8, w9
   13380:	b.eq	13390 <BZ2_bzDecompress@@Base+0x1b98>  // b.none
   13384:	ldrb	w8, [sp, #95]
   13388:	str	w8, [sp, #72]
   1338c:	b	13154 <BZ2_bzDecompress@@Base+0x195c>
   13390:	mov	w8, #0x3                   	// #3
   13394:	str	w8, [sp, #80]
   13398:	ldr	w8, [sp, #60]
   1339c:	ldr	w9, [sp, #40]
   133a0:	mov	w10, #0x86a0                	// #34464
   133a4:	movk	w10, #0x1, lsl #16
   133a8:	mul	w9, w10, w9
   133ac:	cmp	w8, w9
   133b0:	b.cc	133c0 <BZ2_bzDecompress@@Base+0x1bc8>  // b.lo, b.ul, b.last
   133b4:	mov	w8, #0x1                   	// #1
   133b8:	strb	w8, [sp, #111]
   133bc:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   133c0:	ldr	x8, [sp, #64]
   133c4:	ldr	w9, [sp, #60]
   133c8:	mov	w10, w9
   133cc:	ldr	w9, [x8, x10, lsl #2]
   133d0:	str	w9, [sp, #60]
   133d4:	ldr	w9, [sp, #60]
   133d8:	and	w9, w9, #0xff
   133dc:	strb	w9, [sp, #95]
   133e0:	ldr	w9, [sp, #60]
   133e4:	lsr	w9, w9, #8
   133e8:	str	w9, [sp, #60]
   133ec:	ldr	w9, [sp, #76]
   133f0:	add	w9, w9, #0x1
   133f4:	str	w9, [sp, #76]
   133f8:	ldr	w9, [sp, #76]
   133fc:	ldr	w11, [sp, #32]
   13400:	cmp	w9, w11
   13404:	b.ne	1340c <BZ2_bzDecompress@@Base+0x1c14>  // b.any
   13408:	b	13154 <BZ2_bzDecompress@@Base+0x195c>
   1340c:	ldrb	w8, [sp, #95]
   13410:	ldr	w9, [sp, #72]
   13414:	cmp	w8, w9
   13418:	b.eq	13428 <BZ2_bzDecompress@@Base+0x1c30>  // b.none
   1341c:	ldrb	w8, [sp, #95]
   13420:	str	w8, [sp, #72]
   13424:	b	13154 <BZ2_bzDecompress@@Base+0x195c>
   13428:	ldr	w8, [sp, #60]
   1342c:	ldr	w9, [sp, #40]
   13430:	mov	w10, #0x86a0                	// #34464
   13434:	movk	w10, #0x1, lsl #16
   13438:	mul	w9, w10, w9
   1343c:	cmp	w8, w9
   13440:	b.cc	13450 <BZ2_bzDecompress@@Base+0x1c58>  // b.lo, b.ul, b.last
   13444:	mov	w8, #0x1                   	// #1
   13448:	strb	w8, [sp, #111]
   1344c:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   13450:	ldr	x8, [sp, #64]
   13454:	ldr	w9, [sp, #60]
   13458:	mov	w10, w9
   1345c:	ldr	w9, [x8, x10, lsl #2]
   13460:	str	w9, [sp, #60]
   13464:	ldr	w9, [sp, #60]
   13468:	and	w9, w9, #0xff
   1346c:	strb	w9, [sp, #95]
   13470:	ldr	w9, [sp, #60]
   13474:	lsr	w9, w9, #8
   13478:	str	w9, [sp, #60]
   1347c:	ldr	w9, [sp, #76]
   13480:	add	w9, w9, #0x1
   13484:	str	w9, [sp, #76]
   13488:	ldrb	w9, [sp, #95]
   1348c:	add	w9, w9, #0x4
   13490:	str	w9, [sp, #80]
   13494:	ldr	w9, [sp, #60]
   13498:	ldr	w11, [sp, #40]
   1349c:	mov	w12, #0x86a0                	// #34464
   134a0:	movk	w12, #0x1, lsl #16
   134a4:	mul	w11, w12, w11
   134a8:	cmp	w9, w11
   134ac:	b.cc	134bc <BZ2_bzDecompress@@Base+0x1cc4>  // b.lo, b.ul, b.last
   134b0:	mov	w8, #0x1                   	// #1
   134b4:	strb	w8, [sp, #111]
   134b8:	b	135d4 <BZ2_bzDecompress@@Base+0x1ddc>
   134bc:	ldr	x8, [sp, #64]
   134c0:	ldr	w9, [sp, #60]
   134c4:	mov	w10, w9
   134c8:	ldr	w9, [x8, x10, lsl #2]
   134cc:	str	w9, [sp, #60]
   134d0:	ldr	w9, [sp, #60]
   134d4:	and	w9, w9, #0xff
   134d8:	and	w9, w9, #0xff
   134dc:	str	w9, [sp, #72]
   134e0:	ldr	w9, [sp, #60]
   134e4:	lsr	w9, w9, #8
   134e8:	str	w9, [sp, #60]
   134ec:	ldr	w9, [sp, #76]
   134f0:	add	w9, w9, #0x1
   134f4:	str	w9, [sp, #76]
   134f8:	b	13154 <BZ2_bzDecompress@@Base+0x195c>
   134fc:	ldr	x8, [sp, #96]
   13500:	ldr	x8, [x8]
   13504:	ldr	w9, [x8, #36]
   13508:	str	w9, [sp, #28]
   1350c:	ldr	w9, [sp, #36]
   13510:	ldr	w10, [sp, #44]
   13514:	subs	w9, w9, w10
   13518:	ldr	x8, [sp, #96]
   1351c:	ldr	x8, [x8]
   13520:	ldr	w10, [x8, #36]
   13524:	add	w9, w10, w9
   13528:	str	w9, [x8, #36]
   1352c:	ldr	x8, [sp, #96]
   13530:	ldr	x8, [x8]
   13534:	ldr	w9, [x8, #36]
   13538:	ldr	w10, [sp, #28]
   1353c:	cmp	w9, w10
   13540:	b.cs	13558 <BZ2_bzDecompress@@Base+0x1d60>  // b.hs, b.nlast
   13544:	ldr	x8, [sp, #96]
   13548:	ldr	x8, [x8]
   1354c:	ldr	w9, [x8, #40]
   13550:	add	w9, w9, #0x1
   13554:	str	w9, [x8, #40]
   13558:	ldr	w8, [sp, #88]
   1355c:	ldr	x9, [sp, #96]
   13560:	str	w8, [x9, #3184]
   13564:	ldrb	w8, [sp, #87]
   13568:	ldr	x9, [sp, #96]
   1356c:	strb	w8, [x9, #12]
   13570:	ldr	w8, [sp, #80]
   13574:	ldr	x9, [sp, #96]
   13578:	str	w8, [x9, #16]
   1357c:	ldr	w8, [sp, #76]
   13580:	ldr	x9, [sp, #96]
   13584:	str	w8, [x9, #1092]
   13588:	ldr	w8, [sp, #72]
   1358c:	ldr	x9, [sp, #96]
   13590:	str	w8, [x9, #64]
   13594:	ldr	x9, [sp, #64]
   13598:	ldr	x10, [sp, #96]
   1359c:	str	x9, [x10, #3152]
   135a0:	ldr	w8, [sp, #60]
   135a4:	ldr	x9, [sp, #96]
   135a8:	str	w8, [x9, #60]
   135ac:	ldr	x9, [sp, #48]
   135b0:	ldr	x10, [sp, #96]
   135b4:	ldr	x10, [x10]
   135b8:	str	x9, [x10, #24]
   135bc:	ldr	w8, [sp, #44]
   135c0:	ldr	x9, [sp, #96]
   135c4:	ldr	x9, [x9]
   135c8:	str	w8, [x9, #32]
   135cc:	mov	w8, #0x0                   	// #0
   135d0:	strb	w8, [sp, #111]
   135d4:	ldrb	w0, [sp, #111]
   135d8:	add	sp, sp, #0x70
   135dc:	ret

00000000000135e0 <BZ2_bzDecompressEnd@@Base>:
   135e0:	sub	sp, sp, #0x30
   135e4:	stp	x29, x30, [sp, #32]
   135e8:	add	x29, sp, #0x20
   135ec:	str	x0, [sp, #16]
   135f0:	ldr	x8, [sp, #16]
   135f4:	cbnz	x8, 13604 <BZ2_bzDecompressEnd@@Base+0x24>
   135f8:	mov	w8, #0xfffffffe            	// #-2
   135fc:	stur	w8, [x29, #-4]
   13600:	b	136e8 <BZ2_bzDecompressEnd@@Base+0x108>
   13604:	ldr	x8, [sp, #16]
   13608:	ldr	x8, [x8, #48]
   1360c:	str	x8, [sp, #8]
   13610:	ldr	x8, [sp, #8]
   13614:	cbnz	x8, 13624 <BZ2_bzDecompressEnd@@Base+0x44>
   13618:	mov	w8, #0xfffffffe            	// #-2
   1361c:	stur	w8, [x29, #-4]
   13620:	b	136e8 <BZ2_bzDecompressEnd@@Base+0x108>
   13624:	ldr	x8, [sp, #8]
   13628:	ldr	x8, [x8]
   1362c:	ldr	x9, [sp, #16]
   13630:	cmp	x8, x9
   13634:	b.eq	13644 <BZ2_bzDecompressEnd@@Base+0x64>  // b.none
   13638:	mov	w8, #0xfffffffe            	// #-2
   1363c:	stur	w8, [x29, #-4]
   13640:	b	136e8 <BZ2_bzDecompressEnd@@Base+0x108>
   13644:	ldr	x8, [sp, #8]
   13648:	ldr	x8, [x8, #3152]
   1364c:	cbz	x8, 1366c <BZ2_bzDecompressEnd@@Base+0x8c>
   13650:	ldr	x8, [sp, #16]
   13654:	ldr	x8, [x8, #64]
   13658:	ldr	x9, [sp, #16]
   1365c:	ldr	x0, [x9, #72]
   13660:	ldr	x9, [sp, #8]
   13664:	ldr	x1, [x9, #3152]
   13668:	blr	x8
   1366c:	ldr	x8, [sp, #8]
   13670:	ldr	x8, [x8, #3160]
   13674:	cbz	x8, 13694 <BZ2_bzDecompressEnd@@Base+0xb4>
   13678:	ldr	x8, [sp, #16]
   1367c:	ldr	x8, [x8, #64]
   13680:	ldr	x9, [sp, #16]
   13684:	ldr	x0, [x9, #72]
   13688:	ldr	x9, [sp, #8]
   1368c:	ldr	x1, [x9, #3160]
   13690:	blr	x8
   13694:	ldr	x8, [sp, #8]
   13698:	ldr	x8, [x8, #3168]
   1369c:	cbz	x8, 136bc <BZ2_bzDecompressEnd@@Base+0xdc>
   136a0:	ldr	x8, [sp, #16]
   136a4:	ldr	x8, [x8, #64]
   136a8:	ldr	x9, [sp, #16]
   136ac:	ldr	x0, [x9, #72]
   136b0:	ldr	x9, [sp, #8]
   136b4:	ldr	x1, [x9, #3168]
   136b8:	blr	x8
   136bc:	ldr	x8, [sp, #16]
   136c0:	ldr	x8, [x8, #64]
   136c4:	ldr	x9, [sp, #16]
   136c8:	ldr	x0, [x9, #72]
   136cc:	ldr	x9, [sp, #16]
   136d0:	ldr	x1, [x9, #48]
   136d4:	blr	x8
   136d8:	ldr	x8, [sp, #16]
   136dc:	mov	x9, xzr
   136e0:	str	x9, [x8, #48]
   136e4:	stur	wzr, [x29, #-4]
   136e8:	ldur	w0, [x29, #-4]
   136ec:	ldp	x29, x30, [sp, #32]
   136f0:	add	sp, sp, #0x30
   136f4:	ret

00000000000136f8 <BZ2_bzWriteOpen@@Base>:
   136f8:	sub	sp, sp, #0x40
   136fc:	stp	x29, x30, [sp, #48]
   13700:	add	x29, sp, #0x30
   13704:	mov	x8, xzr
   13708:	stur	x0, [x29, #-16]
   1370c:	str	x1, [sp, #24]
   13710:	str	w2, [sp, #20]
   13714:	str	w3, [sp, #16]
   13718:	str	w4, [sp, #12]
   1371c:	str	x8, [sp]
   13720:	ldur	x8, [x29, #-16]
   13724:	cbz	x8, 13730 <BZ2_bzWriteOpen@@Base+0x38>
   13728:	ldur	x8, [x29, #-16]
   1372c:	str	wzr, [x8]
   13730:	ldr	x8, [sp]
   13734:	cbz	x8, 13740 <BZ2_bzWriteOpen@@Base+0x48>
   13738:	ldr	x8, [sp]
   1373c:	str	wzr, [x8, #5096]
   13740:	ldr	x8, [sp, #24]
   13744:	cbz	x8, 13798 <BZ2_bzWriteOpen@@Base+0xa0>
   13748:	ldr	w8, [sp, #20]
   1374c:	cmp	w8, #0x1
   13750:	b.lt	13798 <BZ2_bzWriteOpen@@Base+0xa0>  // b.tstop
   13754:	ldr	w8, [sp, #20]
   13758:	cmp	w8, #0x9
   1375c:	b.gt	13798 <BZ2_bzWriteOpen@@Base+0xa0>
   13760:	ldr	w8, [sp, #12]
   13764:	cmp	w8, #0x0
   13768:	cset	w8, lt  // lt = tstop
   1376c:	tbnz	w8, #0, 13798 <BZ2_bzWriteOpen@@Base+0xa0>
   13770:	ldr	w8, [sp, #12]
   13774:	cmp	w8, #0xfa
   13778:	b.gt	13798 <BZ2_bzWriteOpen@@Base+0xa0>
   1377c:	ldr	w8, [sp, #16]
   13780:	cmp	w8, #0x0
   13784:	cset	w8, lt  // lt = tstop
   13788:	tbnz	w8, #0, 13798 <BZ2_bzWriteOpen@@Base+0xa0>
   1378c:	ldr	w8, [sp, #16]
   13790:	cmp	w8, #0x4
   13794:	b.le	137cc <BZ2_bzWriteOpen@@Base+0xd4>
   13798:	ldur	x8, [x29, #-16]
   1379c:	cbz	x8, 137ac <BZ2_bzWriteOpen@@Base+0xb4>
   137a0:	ldur	x8, [x29, #-16]
   137a4:	mov	w9, #0xfffffffe            	// #-2
   137a8:	str	w9, [x8]
   137ac:	ldr	x8, [sp]
   137b0:	cbz	x8, 137c0 <BZ2_bzWriteOpen@@Base+0xc8>
   137b4:	ldr	x8, [sp]
   137b8:	mov	w9, #0xfffffffe            	// #-2
   137bc:	str	w9, [x8, #5096]
   137c0:	mov	x8, xzr
   137c4:	stur	x8, [x29, #-8]
   137c8:	b	13964 <BZ2_bzWriteOpen@@Base+0x26c>
   137cc:	ldr	x0, [sp, #24]
   137d0:	bl	16f0 <ferror@plt>
   137d4:	cbz	w0, 1380c <BZ2_bzWriteOpen@@Base+0x114>
   137d8:	ldur	x8, [x29, #-16]
   137dc:	cbz	x8, 137ec <BZ2_bzWriteOpen@@Base+0xf4>
   137e0:	ldur	x8, [x29, #-16]
   137e4:	mov	w9, #0xfffffffa            	// #-6
   137e8:	str	w9, [x8]
   137ec:	ldr	x8, [sp]
   137f0:	cbz	x8, 13800 <BZ2_bzWriteOpen@@Base+0x108>
   137f4:	ldr	x8, [sp]
   137f8:	mov	w9, #0xfffffffa            	// #-6
   137fc:	str	w9, [x8, #5096]
   13800:	mov	x8, xzr
   13804:	stur	x8, [x29, #-8]
   13808:	b	13964 <BZ2_bzWriteOpen@@Base+0x26c>
   1380c:	mov	x0, #0x13f0                	// #5104
   13810:	bl	14c0 <malloc@plt>
   13814:	str	x0, [sp]
   13818:	ldr	x8, [sp]
   1381c:	cbnz	x8, 13854 <BZ2_bzWriteOpen@@Base+0x15c>
   13820:	ldur	x8, [x29, #-16]
   13824:	cbz	x8, 13834 <BZ2_bzWriteOpen@@Base+0x13c>
   13828:	ldur	x8, [x29, #-16]
   1382c:	mov	w9, #0xfffffffd            	// #-3
   13830:	str	w9, [x8]
   13834:	ldr	x8, [sp]
   13838:	cbz	x8, 13848 <BZ2_bzWriteOpen@@Base+0x150>
   1383c:	ldr	x8, [sp]
   13840:	mov	w9, #0xfffffffd            	// #-3
   13844:	str	w9, [x8, #5096]
   13848:	mov	x8, xzr
   1384c:	stur	x8, [x29, #-8]
   13850:	b	13964 <BZ2_bzWriteOpen@@Base+0x26c>
   13854:	ldur	x8, [x29, #-16]
   13858:	cbz	x8, 13864 <BZ2_bzWriteOpen@@Base+0x16c>
   1385c:	ldur	x8, [x29, #-16]
   13860:	str	wzr, [x8]
   13864:	ldr	x8, [sp]
   13868:	cbz	x8, 13874 <BZ2_bzWriteOpen@@Base+0x17c>
   1386c:	ldr	x8, [sp]
   13870:	str	wzr, [x8, #5096]
   13874:	ldr	x8, [sp]
   13878:	mov	x9, #0x13ec                	// #5100
   1387c:	add	x8, x8, x9
   13880:	mov	w10, #0x0                   	// #0
   13884:	strb	w10, [x8]
   13888:	ldr	x8, [sp]
   1388c:	str	wzr, [x8, #5008]
   13890:	ldr	x8, [sp, #24]
   13894:	ldr	x9, [sp]
   13898:	str	x8, [x9]
   1389c:	ldr	x8, [sp]
   138a0:	mov	x9, #0x1394                	// #5012
   138a4:	add	x8, x8, x9
   138a8:	mov	w10, #0x1                   	// #1
   138ac:	strb	w10, [x8]
   138b0:	ldr	x8, [sp]
   138b4:	mov	x9, xzr
   138b8:	str	x9, [x8, #5072]
   138bc:	ldr	x8, [sp]
   138c0:	str	x9, [x8, #5080]
   138c4:	ldr	x8, [sp]
   138c8:	str	x9, [x8, #5088]
   138cc:	ldr	w10, [sp, #12]
   138d0:	cbnz	w10, 138dc <BZ2_bzWriteOpen@@Base+0x1e4>
   138d4:	mov	w8, #0x1e                  	// #30
   138d8:	str	w8, [sp, #12]
   138dc:	ldr	x8, [sp]
   138e0:	mov	x9, #0x1398                	// #5016
   138e4:	add	x0, x8, x9
   138e8:	ldr	w1, [sp, #20]
   138ec:	ldr	w2, [sp, #16]
   138f0:	ldr	w3, [sp, #12]
   138f4:	bl	1540 <BZ2_bzCompressInit@plt>
   138f8:	str	w0, [sp, #8]
   138fc:	ldr	w10, [sp, #8]
   13900:	cbz	w10, 13940 <BZ2_bzWriteOpen@@Base+0x248>
   13904:	ldur	x8, [x29, #-16]
   13908:	cbz	x8, 13918 <BZ2_bzWriteOpen@@Base+0x220>
   1390c:	ldr	w8, [sp, #8]
   13910:	ldur	x9, [x29, #-16]
   13914:	str	w8, [x9]
   13918:	ldr	x8, [sp]
   1391c:	cbz	x8, 1392c <BZ2_bzWriteOpen@@Base+0x234>
   13920:	ldr	w8, [sp, #8]
   13924:	ldr	x9, [sp]
   13928:	str	w8, [x9, #5096]
   1392c:	ldr	x0, [sp]
   13930:	bl	1610 <free@plt>
   13934:	mov	x8, xzr
   13938:	stur	x8, [x29, #-8]
   1393c:	b	13964 <BZ2_bzWriteOpen@@Base+0x26c>
   13940:	ldr	x8, [sp]
   13944:	str	wzr, [x8, #5024]
   13948:	ldr	x8, [sp]
   1394c:	mov	x9, #0x13ec                	// #5100
   13950:	add	x8, x8, x9
   13954:	mov	w10, #0x1                   	// #1
   13958:	strb	w10, [x8]
   1395c:	ldr	x8, [sp]
   13960:	stur	x8, [x29, #-8]
   13964:	ldur	x0, [x29, #-8]
   13968:	ldp	x29, x30, [sp, #48]
   1396c:	add	sp, sp, #0x40
   13970:	ret

0000000000013974 <BZ2_bzWrite@@Base>:
   13974:	sub	sp, sp, #0x40
   13978:	stp	x29, x30, [sp, #48]
   1397c:	add	x29, sp, #0x30
   13980:	stur	x0, [x29, #-8]
   13984:	stur	x1, [x29, #-16]
   13988:	str	x2, [sp, #24]
   1398c:	str	w3, [sp, #20]
   13990:	ldur	x8, [x29, #-16]
   13994:	str	x8, [sp]
   13998:	ldur	x8, [x29, #-8]
   1399c:	cbz	x8, 139a8 <BZ2_bzWrite@@Base+0x34>
   139a0:	ldur	x8, [x29, #-8]
   139a4:	str	wzr, [x8]
   139a8:	ldr	x8, [sp]
   139ac:	cbz	x8, 139b8 <BZ2_bzWrite@@Base+0x44>
   139b0:	ldr	x8, [sp]
   139b4:	str	wzr, [x8, #5096]
   139b8:	ldr	x8, [sp]
   139bc:	cbz	x8, 139d8 <BZ2_bzWrite@@Base+0x64>
   139c0:	ldr	x8, [sp, #24]
   139c4:	cbz	x8, 139d8 <BZ2_bzWrite@@Base+0x64>
   139c8:	ldr	w8, [sp, #20]
   139cc:	cmp	w8, #0x0
   139d0:	cset	w8, ge  // ge = tcont
   139d4:	tbnz	w8, #0, 13a04 <BZ2_bzWrite@@Base+0x90>
   139d8:	ldur	x8, [x29, #-8]
   139dc:	cbz	x8, 139ec <BZ2_bzWrite@@Base+0x78>
   139e0:	ldur	x8, [x29, #-8]
   139e4:	mov	w9, #0xfffffffe            	// #-2
   139e8:	str	w9, [x8]
   139ec:	ldr	x8, [sp]
   139f0:	cbz	x8, 13a00 <BZ2_bzWrite@@Base+0x8c>
   139f4:	ldr	x8, [sp]
   139f8:	mov	w9, #0xfffffffe            	// #-2
   139fc:	str	w9, [x8, #5096]
   13a00:	b	13bfc <BZ2_bzWrite@@Base+0x288>
   13a04:	ldr	x8, [sp]
   13a08:	mov	x9, #0x1394                	// #5012
   13a0c:	add	x8, x8, x9
   13a10:	ldrb	w10, [x8]
   13a14:	cbnz	w10, 13a44 <BZ2_bzWrite@@Base+0xd0>
   13a18:	ldur	x8, [x29, #-8]
   13a1c:	cbz	x8, 13a2c <BZ2_bzWrite@@Base+0xb8>
   13a20:	ldur	x8, [x29, #-8]
   13a24:	mov	w9, #0xffffffff            	// #-1
   13a28:	str	w9, [x8]
   13a2c:	ldr	x8, [sp]
   13a30:	cbz	x8, 13a40 <BZ2_bzWrite@@Base+0xcc>
   13a34:	ldr	x8, [sp]
   13a38:	mov	w9, #0xffffffff            	// #-1
   13a3c:	str	w9, [x8, #5096]
   13a40:	b	13bfc <BZ2_bzWrite@@Base+0x288>
   13a44:	ldr	x8, [sp]
   13a48:	ldr	x0, [x8]
   13a4c:	bl	16f0 <ferror@plt>
   13a50:	cbz	w0, 13a80 <BZ2_bzWrite@@Base+0x10c>
   13a54:	ldur	x8, [x29, #-8]
   13a58:	cbz	x8, 13a68 <BZ2_bzWrite@@Base+0xf4>
   13a5c:	ldur	x8, [x29, #-8]
   13a60:	mov	w9, #0xfffffffa            	// #-6
   13a64:	str	w9, [x8]
   13a68:	ldr	x8, [sp]
   13a6c:	cbz	x8, 13a7c <BZ2_bzWrite@@Base+0x108>
   13a70:	ldr	x8, [sp]
   13a74:	mov	w9, #0xfffffffa            	// #-6
   13a78:	str	w9, [x8, #5096]
   13a7c:	b	13bfc <BZ2_bzWrite@@Base+0x288>
   13a80:	ldr	w8, [sp, #20]
   13a84:	cbnz	w8, 13aac <BZ2_bzWrite@@Base+0x138>
   13a88:	ldur	x8, [x29, #-8]
   13a8c:	cbz	x8, 13a98 <BZ2_bzWrite@@Base+0x124>
   13a90:	ldur	x8, [x29, #-8]
   13a94:	str	wzr, [x8]
   13a98:	ldr	x8, [sp]
   13a9c:	cbz	x8, 13aa8 <BZ2_bzWrite@@Base+0x134>
   13aa0:	ldr	x8, [sp]
   13aa4:	str	wzr, [x8, #5096]
   13aa8:	b	13bfc <BZ2_bzWrite@@Base+0x288>
   13aac:	ldr	w8, [sp, #20]
   13ab0:	ldr	x9, [sp]
   13ab4:	str	w8, [x9, #5024]
   13ab8:	ldr	x9, [sp, #24]
   13abc:	ldr	x10, [sp]
   13ac0:	str	x9, [x10, #5016]
   13ac4:	ldr	x8, [sp]
   13ac8:	mov	x9, #0x1398                	// #5016
   13acc:	mov	w10, #0x1388                	// #5000
   13ad0:	str	w10, [x8, #5048]
   13ad4:	ldr	x8, [sp]
   13ad8:	add	x8, x8, #0x8
   13adc:	ldr	x11, [sp]
   13ae0:	str	x8, [x11, #5040]
   13ae4:	ldr	x8, [sp]
   13ae8:	add	x0, x8, x9
   13aec:	mov	w10, wzr
   13af0:	mov	w1, w10
   13af4:	bl	15a0 <BZ2_bzCompress@plt>
   13af8:	str	w0, [sp, #8]
   13afc:	ldr	w10, [sp, #8]
   13b00:	cmp	w10, #0x1
   13b04:	b.eq	13b34 <BZ2_bzWrite@@Base+0x1c0>  // b.none
   13b08:	ldur	x8, [x29, #-8]
   13b0c:	cbz	x8, 13b1c <BZ2_bzWrite@@Base+0x1a8>
   13b10:	ldr	w8, [sp, #8]
   13b14:	ldur	x9, [x29, #-8]
   13b18:	str	w8, [x9]
   13b1c:	ldr	x8, [sp]
   13b20:	cbz	x8, 13b30 <BZ2_bzWrite@@Base+0x1bc>
   13b24:	ldr	w8, [sp, #8]
   13b28:	ldr	x9, [sp]
   13b2c:	str	w8, [x9, #5096]
   13b30:	b	13bfc <BZ2_bzWrite@@Base+0x288>
   13b34:	ldr	x8, [sp]
   13b38:	ldr	w9, [x8, #5048]
   13b3c:	mov	w10, #0x1388                	// #5000
   13b40:	cmp	w9, w10
   13b44:	b.cs	13bc8 <BZ2_bzWrite@@Base+0x254>  // b.hs, b.nlast
   13b48:	ldr	x8, [sp]
   13b4c:	ldr	w9, [x8, #5048]
   13b50:	mov	w10, #0x1388                	// #5000
   13b54:	subs	w9, w10, w9
   13b58:	str	w9, [sp, #16]
   13b5c:	ldr	x8, [sp]
   13b60:	add	x0, x8, #0x8
   13b64:	ldrsw	x2, [sp, #16]
   13b68:	ldr	x8, [sp]
   13b6c:	ldr	x3, [x8]
   13b70:	mov	x1, #0x1                   	// #1
   13b74:	bl	1680 <fwrite@plt>
   13b78:	str	w0, [sp, #12]
   13b7c:	ldr	w9, [sp, #16]
   13b80:	ldr	w10, [sp, #12]
   13b84:	cmp	w9, w10
   13b88:	b.ne	13b9c <BZ2_bzWrite@@Base+0x228>  // b.any
   13b8c:	ldr	x8, [sp]
   13b90:	ldr	x0, [x8]
   13b94:	bl	16f0 <ferror@plt>
   13b98:	cbz	w0, 13bc8 <BZ2_bzWrite@@Base+0x254>
   13b9c:	ldur	x8, [x29, #-8]
   13ba0:	cbz	x8, 13bb0 <BZ2_bzWrite@@Base+0x23c>
   13ba4:	ldur	x8, [x29, #-8]
   13ba8:	mov	w9, #0xfffffffa            	// #-6
   13bac:	str	w9, [x8]
   13bb0:	ldr	x8, [sp]
   13bb4:	cbz	x8, 13bc4 <BZ2_bzWrite@@Base+0x250>
   13bb8:	ldr	x8, [sp]
   13bbc:	mov	w9, #0xfffffffa            	// #-6
   13bc0:	str	w9, [x8, #5096]
   13bc4:	b	13bfc <BZ2_bzWrite@@Base+0x288>
   13bc8:	ldr	x8, [sp]
   13bcc:	ldr	w9, [x8, #5024]
   13bd0:	cbnz	w9, 13bf8 <BZ2_bzWrite@@Base+0x284>
   13bd4:	ldur	x8, [x29, #-8]
   13bd8:	cbz	x8, 13be4 <BZ2_bzWrite@@Base+0x270>
   13bdc:	ldur	x8, [x29, #-8]
   13be0:	str	wzr, [x8]
   13be4:	ldr	x8, [sp]
   13be8:	cbz	x8, 13bf4 <BZ2_bzWrite@@Base+0x280>
   13bec:	ldr	x8, [sp]
   13bf0:	str	wzr, [x8, #5096]
   13bf4:	b	13bfc <BZ2_bzWrite@@Base+0x288>
   13bf8:	b	13ac4 <BZ2_bzWrite@@Base+0x150>
   13bfc:	ldp	x29, x30, [sp, #48]
   13c00:	add	sp, sp, #0x40
   13c04:	ret

0000000000013c08 <BZ2_bzWriteClose@@Base>:
   13c08:	sub	sp, sp, #0x40
   13c0c:	stp	x29, x30, [sp, #48]
   13c10:	add	x29, sp, #0x30
   13c14:	mov	x8, xzr
   13c18:	stur	x0, [x29, #-8]
   13c1c:	stur	x1, [x29, #-16]
   13c20:	stur	w2, [x29, #-20]
   13c24:	str	x3, [sp, #16]
   13c28:	str	x4, [sp, #8]
   13c2c:	ldur	x0, [x29, #-8]
   13c30:	ldur	x1, [x29, #-16]
   13c34:	ldur	w2, [x29, #-20]
   13c38:	ldr	x3, [sp, #16]
   13c3c:	ldr	x5, [sp, #8]
   13c40:	mov	x4, x8
   13c44:	mov	x6, x8
   13c48:	bl	1650 <BZ2_bzWriteClose64@plt>
   13c4c:	ldp	x29, x30, [sp, #48]
   13c50:	add	sp, sp, #0x40
   13c54:	ret

0000000000013c58 <BZ2_bzWriteClose64@@Base>:
   13c58:	sub	sp, sp, #0x60
   13c5c:	stp	x29, x30, [sp, #80]
   13c60:	add	x29, sp, #0x50
   13c64:	stur	x0, [x29, #-8]
   13c68:	stur	x1, [x29, #-16]
   13c6c:	stur	w2, [x29, #-20]
   13c70:	stur	x3, [x29, #-32]
   13c74:	str	x4, [sp, #40]
   13c78:	str	x5, [sp, #32]
   13c7c:	str	x6, [sp, #24]
   13c80:	ldur	x8, [x29, #-16]
   13c84:	str	x8, [sp]
   13c88:	ldr	x8, [sp]
   13c8c:	cbnz	x8, 13cb4 <BZ2_bzWriteClose64@@Base+0x5c>
   13c90:	ldur	x8, [x29, #-8]
   13c94:	cbz	x8, 13ca0 <BZ2_bzWriteClose64@@Base+0x48>
   13c98:	ldur	x8, [x29, #-8]
   13c9c:	str	wzr, [x8]
   13ca0:	ldr	x8, [sp]
   13ca4:	cbz	x8, 13cb0 <BZ2_bzWriteClose64@@Base+0x58>
   13ca8:	ldr	x8, [sp]
   13cac:	str	wzr, [x8, #5096]
   13cb0:	b	13fa4 <BZ2_bzWriteClose64@@Base+0x34c>
   13cb4:	ldr	x8, [sp]
   13cb8:	mov	x9, #0x1394                	// #5012
   13cbc:	add	x8, x8, x9
   13cc0:	ldrb	w10, [x8]
   13cc4:	cbnz	w10, 13cf4 <BZ2_bzWriteClose64@@Base+0x9c>
   13cc8:	ldur	x8, [x29, #-8]
   13ccc:	cbz	x8, 13cdc <BZ2_bzWriteClose64@@Base+0x84>
   13cd0:	ldur	x8, [x29, #-8]
   13cd4:	mov	w9, #0xffffffff            	// #-1
   13cd8:	str	w9, [x8]
   13cdc:	ldr	x8, [sp]
   13ce0:	cbz	x8, 13cf0 <BZ2_bzWriteClose64@@Base+0x98>
   13ce4:	ldr	x8, [sp]
   13ce8:	mov	w9, #0xffffffff            	// #-1
   13cec:	str	w9, [x8, #5096]
   13cf0:	b	13fa4 <BZ2_bzWriteClose64@@Base+0x34c>
   13cf4:	ldr	x8, [sp]
   13cf8:	ldr	x0, [x8]
   13cfc:	bl	16f0 <ferror@plt>
   13d00:	cbz	w0, 13d30 <BZ2_bzWriteClose64@@Base+0xd8>
   13d04:	ldur	x8, [x29, #-8]
   13d08:	cbz	x8, 13d18 <BZ2_bzWriteClose64@@Base+0xc0>
   13d0c:	ldur	x8, [x29, #-8]
   13d10:	mov	w9, #0xfffffffa            	// #-6
   13d14:	str	w9, [x8]
   13d18:	ldr	x8, [sp]
   13d1c:	cbz	x8, 13d2c <BZ2_bzWriteClose64@@Base+0xd4>
   13d20:	ldr	x8, [sp]
   13d24:	mov	w9, #0xfffffffa            	// #-6
   13d28:	str	w9, [x8, #5096]
   13d2c:	b	13fa4 <BZ2_bzWriteClose64@@Base+0x34c>
   13d30:	ldur	x8, [x29, #-32]
   13d34:	cbz	x8, 13d40 <BZ2_bzWriteClose64@@Base+0xe8>
   13d38:	ldur	x8, [x29, #-32]
   13d3c:	str	wzr, [x8]
   13d40:	ldr	x8, [sp, #40]
   13d44:	cbz	x8, 13d50 <BZ2_bzWriteClose64@@Base+0xf8>
   13d48:	ldr	x8, [sp, #40]
   13d4c:	str	wzr, [x8]
   13d50:	ldr	x8, [sp, #32]
   13d54:	cbz	x8, 13d60 <BZ2_bzWriteClose64@@Base+0x108>
   13d58:	ldr	x8, [sp, #32]
   13d5c:	str	wzr, [x8]
   13d60:	ldr	x8, [sp, #24]
   13d64:	cbz	x8, 13d70 <BZ2_bzWriteClose64@@Base+0x118>
   13d68:	ldr	x8, [sp, #24]
   13d6c:	str	wzr, [x8]
   13d70:	ldur	w8, [x29, #-20]
   13d74:	cbnz	w8, 13ea4 <BZ2_bzWriteClose64@@Base+0x24c>
   13d78:	ldr	x8, [sp]
   13d7c:	ldr	w9, [x8, #5096]
   13d80:	cbnz	w9, 13ea4 <BZ2_bzWriteClose64@@Base+0x24c>
   13d84:	ldr	x8, [sp]
   13d88:	mov	x9, #0x1398                	// #5016
   13d8c:	mov	w10, #0x1388                	// #5000
   13d90:	str	w10, [x8, #5048]
   13d94:	ldr	x8, [sp]
   13d98:	add	x8, x8, #0x8
   13d9c:	ldr	x11, [sp]
   13da0:	str	x8, [x11, #5040]
   13da4:	ldr	x8, [sp]
   13da8:	add	x0, x8, x9
   13dac:	mov	w1, #0x2                   	// #2
   13db0:	bl	15a0 <BZ2_bzCompress@plt>
   13db4:	str	w0, [sp, #12]
   13db8:	ldr	w10, [sp, #12]
   13dbc:	cmp	w10, #0x3
   13dc0:	b.eq	13dfc <BZ2_bzWriteClose64@@Base+0x1a4>  // b.none
   13dc4:	ldr	w8, [sp, #12]
   13dc8:	cmp	w8, #0x4
   13dcc:	b.eq	13dfc <BZ2_bzWriteClose64@@Base+0x1a4>  // b.none
   13dd0:	ldur	x8, [x29, #-8]
   13dd4:	cbz	x8, 13de4 <BZ2_bzWriteClose64@@Base+0x18c>
   13dd8:	ldr	w8, [sp, #12]
   13ddc:	ldur	x9, [x29, #-8]
   13de0:	str	w8, [x9]
   13de4:	ldr	x8, [sp]
   13de8:	cbz	x8, 13df8 <BZ2_bzWriteClose64@@Base+0x1a0>
   13dec:	ldr	w8, [sp, #12]
   13df0:	ldr	x9, [sp]
   13df4:	str	w8, [x9, #5096]
   13df8:	b	13fa4 <BZ2_bzWriteClose64@@Base+0x34c>
   13dfc:	ldr	x8, [sp]
   13e00:	ldr	w9, [x8, #5048]
   13e04:	mov	w10, #0x1388                	// #5000
   13e08:	cmp	w9, w10
   13e0c:	b.cs	13e90 <BZ2_bzWriteClose64@@Base+0x238>  // b.hs, b.nlast
   13e10:	ldr	x8, [sp]
   13e14:	ldr	w9, [x8, #5048]
   13e18:	mov	w10, #0x1388                	// #5000
   13e1c:	subs	w9, w10, w9
   13e20:	str	w9, [sp, #20]
   13e24:	ldr	x8, [sp]
   13e28:	add	x0, x8, #0x8
   13e2c:	ldrsw	x2, [sp, #20]
   13e30:	ldr	x8, [sp]
   13e34:	ldr	x3, [x8]
   13e38:	mov	x1, #0x1                   	// #1
   13e3c:	bl	1680 <fwrite@plt>
   13e40:	str	w0, [sp, #16]
   13e44:	ldr	w9, [sp, #20]
   13e48:	ldr	w10, [sp, #16]
   13e4c:	cmp	w9, w10
   13e50:	b.ne	13e64 <BZ2_bzWriteClose64@@Base+0x20c>  // b.any
   13e54:	ldr	x8, [sp]
   13e58:	ldr	x0, [x8]
   13e5c:	bl	16f0 <ferror@plt>
   13e60:	cbz	w0, 13e90 <BZ2_bzWriteClose64@@Base+0x238>
   13e64:	ldur	x8, [x29, #-8]
   13e68:	cbz	x8, 13e78 <BZ2_bzWriteClose64@@Base+0x220>
   13e6c:	ldur	x8, [x29, #-8]
   13e70:	mov	w9, #0xfffffffa            	// #-6
   13e74:	str	w9, [x8]
   13e78:	ldr	x8, [sp]
   13e7c:	cbz	x8, 13e8c <BZ2_bzWriteClose64@@Base+0x234>
   13e80:	ldr	x8, [sp]
   13e84:	mov	w9, #0xfffffffa            	// #-6
   13e88:	str	w9, [x8, #5096]
   13e8c:	b	13fa4 <BZ2_bzWriteClose64@@Base+0x34c>
   13e90:	ldr	w8, [sp, #12]
   13e94:	cmp	w8, #0x4
   13e98:	b.ne	13ea0 <BZ2_bzWriteClose64@@Base+0x248>  // b.any
   13e9c:	b	13ea4 <BZ2_bzWriteClose64@@Base+0x24c>
   13ea0:	b	13d84 <BZ2_bzWriteClose64@@Base+0x12c>
   13ea4:	ldur	w8, [x29, #-20]
   13ea8:	cbnz	w8, 13f08 <BZ2_bzWriteClose64@@Base+0x2b0>
   13eac:	ldr	x8, [sp]
   13eb0:	ldr	x0, [x8]
   13eb4:	bl	16f0 <ferror@plt>
   13eb8:	cbnz	w0, 13f08 <BZ2_bzWriteClose64@@Base+0x2b0>
   13ebc:	ldr	x8, [sp]
   13ec0:	ldr	x0, [x8]
   13ec4:	bl	1690 <fflush@plt>
   13ec8:	ldr	x8, [sp]
   13ecc:	ldr	x8, [x8]
   13ed0:	mov	x0, x8
   13ed4:	bl	16f0 <ferror@plt>
   13ed8:	cbz	w0, 13f08 <BZ2_bzWriteClose64@@Base+0x2b0>
   13edc:	ldur	x8, [x29, #-8]
   13ee0:	cbz	x8, 13ef0 <BZ2_bzWriteClose64@@Base+0x298>
   13ee4:	ldur	x8, [x29, #-8]
   13ee8:	mov	w9, #0xfffffffa            	// #-6
   13eec:	str	w9, [x8]
   13ef0:	ldr	x8, [sp]
   13ef4:	cbz	x8, 13f04 <BZ2_bzWriteClose64@@Base+0x2ac>
   13ef8:	ldr	x8, [sp]
   13efc:	mov	w9, #0xfffffffa            	// #-6
   13f00:	str	w9, [x8, #5096]
   13f04:	b	13fa4 <BZ2_bzWriteClose64@@Base+0x34c>
   13f08:	ldur	x8, [x29, #-32]
   13f0c:	cbz	x8, 13f20 <BZ2_bzWriteClose64@@Base+0x2c8>
   13f10:	ldr	x8, [sp]
   13f14:	ldr	w9, [x8, #5028]
   13f18:	ldur	x8, [x29, #-32]
   13f1c:	str	w9, [x8]
   13f20:	ldr	x8, [sp, #40]
   13f24:	cbz	x8, 13f38 <BZ2_bzWriteClose64@@Base+0x2e0>
   13f28:	ldr	x8, [sp]
   13f2c:	ldr	w9, [x8, #5032]
   13f30:	ldr	x8, [sp, #40]
   13f34:	str	w9, [x8]
   13f38:	ldr	x8, [sp, #32]
   13f3c:	cbz	x8, 13f50 <BZ2_bzWriteClose64@@Base+0x2f8>
   13f40:	ldr	x8, [sp]
   13f44:	ldr	w9, [x8, #5052]
   13f48:	ldr	x8, [sp, #32]
   13f4c:	str	w9, [x8]
   13f50:	ldr	x8, [sp, #24]
   13f54:	cbz	x8, 13f68 <BZ2_bzWriteClose64@@Base+0x310>
   13f58:	ldr	x8, [sp]
   13f5c:	ldr	w9, [x8, #5056]
   13f60:	ldr	x8, [sp, #24]
   13f64:	str	w9, [x8]
   13f68:	ldur	x8, [x29, #-8]
   13f6c:	cbz	x8, 13f78 <BZ2_bzWriteClose64@@Base+0x320>
   13f70:	ldur	x8, [x29, #-8]
   13f74:	str	wzr, [x8]
   13f78:	ldr	x8, [sp]
   13f7c:	cbz	x8, 13f88 <BZ2_bzWriteClose64@@Base+0x330>
   13f80:	ldr	x8, [sp]
   13f84:	str	wzr, [x8, #5096]
   13f88:	ldr	x8, [sp]
   13f8c:	mov	x9, #0x1398                	// #5016
   13f90:	add	x0, x8, x9
   13f94:	bl	1550 <BZ2_bzCompressEnd@plt>
   13f98:	ldr	x8, [sp]
   13f9c:	mov	x0, x8
   13fa0:	bl	1610 <free@plt>
   13fa4:	ldp	x29, x30, [sp, #80]
   13fa8:	add	sp, sp, #0x60
   13fac:	ret

0000000000013fb0 <BZ2_bzReadOpen@@Base>:
   13fb0:	sub	sp, sp, #0x50
   13fb4:	stp	x29, x30, [sp, #64]
   13fb8:	add	x29, sp, #0x40
   13fbc:	mov	x8, xzr
   13fc0:	stur	x0, [x29, #-16]
   13fc4:	stur	x1, [x29, #-24]
   13fc8:	stur	w2, [x29, #-28]
   13fcc:	str	w3, [sp, #32]
   13fd0:	str	x4, [sp, #24]
   13fd4:	str	w5, [sp, #20]
   13fd8:	str	x8, [sp, #8]
   13fdc:	ldur	x8, [x29, #-16]
   13fe0:	cbz	x8, 13fec <BZ2_bzReadOpen@@Base+0x3c>
   13fe4:	ldur	x8, [x29, #-16]
   13fe8:	str	wzr, [x8]
   13fec:	ldr	x8, [sp, #8]
   13ff0:	cbz	x8, 13ffc <BZ2_bzReadOpen@@Base+0x4c>
   13ff4:	ldr	x8, [sp, #8]
   13ff8:	str	wzr, [x8, #5096]
   13ffc:	ldur	x8, [x29, #-24]
   14000:	cbz	x8, 1406c <BZ2_bzReadOpen@@Base+0xbc>
   14004:	ldr	w8, [sp, #32]
   14008:	cbz	w8, 14018 <BZ2_bzReadOpen@@Base+0x68>
   1400c:	ldr	w8, [sp, #32]
   14010:	cmp	w8, #0x1
   14014:	b.ne	1406c <BZ2_bzReadOpen@@Base+0xbc>  // b.any
   14018:	ldur	w8, [x29, #-28]
   1401c:	cmp	w8, #0x0
   14020:	cset	w8, lt  // lt = tstop
   14024:	tbnz	w8, #0, 1406c <BZ2_bzReadOpen@@Base+0xbc>
   14028:	ldur	w8, [x29, #-28]
   1402c:	cmp	w8, #0x4
   14030:	b.gt	1406c <BZ2_bzReadOpen@@Base+0xbc>
   14034:	ldr	x8, [sp, #24]
   14038:	cbnz	x8, 14044 <BZ2_bzReadOpen@@Base+0x94>
   1403c:	ldr	w8, [sp, #20]
   14040:	cbnz	w8, 1406c <BZ2_bzReadOpen@@Base+0xbc>
   14044:	ldr	x8, [sp, #24]
   14048:	cbz	x8, 140a0 <BZ2_bzReadOpen@@Base+0xf0>
   1404c:	ldr	w8, [sp, #20]
   14050:	cmp	w8, #0x0
   14054:	cset	w8, lt  // lt = tstop
   14058:	tbnz	w8, #0, 1406c <BZ2_bzReadOpen@@Base+0xbc>
   1405c:	ldr	w8, [sp, #20]
   14060:	mov	w9, #0x1388                	// #5000
   14064:	cmp	w8, w9
   14068:	b.le	140a0 <BZ2_bzReadOpen@@Base+0xf0>
   1406c:	ldur	x8, [x29, #-16]
   14070:	cbz	x8, 14080 <BZ2_bzReadOpen@@Base+0xd0>
   14074:	ldur	x8, [x29, #-16]
   14078:	mov	w9, #0xfffffffe            	// #-2
   1407c:	str	w9, [x8]
   14080:	ldr	x8, [sp, #8]
   14084:	cbz	x8, 14094 <BZ2_bzReadOpen@@Base+0xe4>
   14088:	ldr	x8, [sp, #8]
   1408c:	mov	w9, #0xfffffffe            	// #-2
   14090:	str	w9, [x8, #5096]
   14094:	mov	x8, xzr
   14098:	stur	x8, [x29, #-8]
   1409c:	b	14294 <BZ2_bzReadOpen@@Base+0x2e4>
   140a0:	ldur	x0, [x29, #-24]
   140a4:	bl	16f0 <ferror@plt>
   140a8:	cbz	w0, 140e0 <BZ2_bzReadOpen@@Base+0x130>
   140ac:	ldur	x8, [x29, #-16]
   140b0:	cbz	x8, 140c0 <BZ2_bzReadOpen@@Base+0x110>
   140b4:	ldur	x8, [x29, #-16]
   140b8:	mov	w9, #0xfffffffa            	// #-6
   140bc:	str	w9, [x8]
   140c0:	ldr	x8, [sp, #8]
   140c4:	cbz	x8, 140d4 <BZ2_bzReadOpen@@Base+0x124>
   140c8:	ldr	x8, [sp, #8]
   140cc:	mov	w9, #0xfffffffa            	// #-6
   140d0:	str	w9, [x8, #5096]
   140d4:	mov	x8, xzr
   140d8:	stur	x8, [x29, #-8]
   140dc:	b	14294 <BZ2_bzReadOpen@@Base+0x2e4>
   140e0:	mov	x0, #0x13f0                	// #5104
   140e4:	bl	14c0 <malloc@plt>
   140e8:	str	x0, [sp, #8]
   140ec:	ldr	x8, [sp, #8]
   140f0:	cbnz	x8, 14128 <BZ2_bzReadOpen@@Base+0x178>
   140f4:	ldur	x8, [x29, #-16]
   140f8:	cbz	x8, 14108 <BZ2_bzReadOpen@@Base+0x158>
   140fc:	ldur	x8, [x29, #-16]
   14100:	mov	w9, #0xfffffffd            	// #-3
   14104:	str	w9, [x8]
   14108:	ldr	x8, [sp, #8]
   1410c:	cbz	x8, 1411c <BZ2_bzReadOpen@@Base+0x16c>
   14110:	ldr	x8, [sp, #8]
   14114:	mov	w9, #0xfffffffd            	// #-3
   14118:	str	w9, [x8, #5096]
   1411c:	mov	x8, xzr
   14120:	stur	x8, [x29, #-8]
   14124:	b	14294 <BZ2_bzReadOpen@@Base+0x2e4>
   14128:	ldur	x8, [x29, #-16]
   1412c:	cbz	x8, 14138 <BZ2_bzReadOpen@@Base+0x188>
   14130:	ldur	x8, [x29, #-16]
   14134:	str	wzr, [x8]
   14138:	ldr	x8, [sp, #8]
   1413c:	cbz	x8, 14148 <BZ2_bzReadOpen@@Base+0x198>
   14140:	ldr	x8, [sp, #8]
   14144:	str	wzr, [x8, #5096]
   14148:	ldr	x8, [sp, #8]
   1414c:	mov	x9, #0x13ec                	// #5100
   14150:	add	x8, x8, x9
   14154:	mov	w10, #0x0                   	// #0
   14158:	strb	w10, [x8]
   1415c:	ldur	x8, [x29, #-24]
   14160:	ldr	x9, [sp, #8]
   14164:	str	x8, [x9]
   14168:	ldr	x8, [sp, #8]
   1416c:	str	wzr, [x8, #5008]
   14170:	ldr	x8, [sp, #8]
   14174:	mov	x9, #0x1394                	// #5012
   14178:	add	x8, x8, x9
   1417c:	strb	w10, [x8]
   14180:	ldr	x8, [sp, #8]
   14184:	mov	x9, xzr
   14188:	str	x9, [x8, #5072]
   1418c:	ldr	x8, [sp, #8]
   14190:	str	x9, [x8, #5080]
   14194:	ldr	x8, [sp, #8]
   14198:	str	x9, [x8, #5088]
   1419c:	ldr	w8, [sp, #20]
   141a0:	cmp	w8, #0x0
   141a4:	cset	w8, le
   141a8:	tbnz	w8, #0, 141f8 <BZ2_bzReadOpen@@Base+0x248>
   141ac:	ldr	x8, [sp, #24]
   141b0:	ldrb	w9, [x8]
   141b4:	ldr	x8, [sp, #8]
   141b8:	add	x8, x8, #0x8
   141bc:	ldr	x10, [sp, #8]
   141c0:	ldrsw	x10, [x10, #5008]
   141c4:	add	x8, x8, x10
   141c8:	strb	w9, [x8]
   141cc:	ldr	x8, [sp, #8]
   141d0:	ldr	w9, [x8, #5008]
   141d4:	add	w9, w9, #0x1
   141d8:	str	w9, [x8, #5008]
   141dc:	ldr	x8, [sp, #24]
   141e0:	add	x8, x8, #0x1
   141e4:	str	x8, [sp, #24]
   141e8:	ldr	w9, [sp, #20]
   141ec:	subs	w9, w9, #0x1
   141f0:	str	w9, [sp, #20]
   141f4:	b	1419c <BZ2_bzReadOpen@@Base+0x1ec>
   141f8:	ldr	x8, [sp, #8]
   141fc:	mov	x9, #0x1398                	// #5016
   14200:	add	x0, x8, x9
   14204:	ldur	w1, [x29, #-28]
   14208:	ldr	w2, [sp, #32]
   1420c:	bl	14d0 <BZ2_bzDecompressInit@plt>
   14210:	str	w0, [sp, #4]
   14214:	ldr	w10, [sp, #4]
   14218:	cbz	w10, 14258 <BZ2_bzReadOpen@@Base+0x2a8>
   1421c:	ldur	x8, [x29, #-16]
   14220:	cbz	x8, 14230 <BZ2_bzReadOpen@@Base+0x280>
   14224:	ldr	w8, [sp, #4]
   14228:	ldur	x9, [x29, #-16]
   1422c:	str	w8, [x9]
   14230:	ldr	x8, [sp, #8]
   14234:	cbz	x8, 14244 <BZ2_bzReadOpen@@Base+0x294>
   14238:	ldr	w8, [sp, #4]
   1423c:	ldr	x9, [sp, #8]
   14240:	str	w8, [x9, #5096]
   14244:	ldr	x0, [sp, #8]
   14248:	bl	1610 <free@plt>
   1424c:	mov	x8, xzr
   14250:	stur	x8, [x29, #-8]
   14254:	b	14294 <BZ2_bzReadOpen@@Base+0x2e4>
   14258:	ldr	x8, [sp, #8]
   1425c:	ldr	w9, [x8, #5008]
   14260:	ldr	x8, [sp, #8]
   14264:	str	w9, [x8, #5024]
   14268:	ldr	x8, [sp, #8]
   1426c:	add	x8, x8, #0x8
   14270:	ldr	x10, [sp, #8]
   14274:	str	x8, [x10, #5016]
   14278:	ldr	x8, [sp, #8]
   1427c:	mov	x10, #0x13ec                	// #5100
   14280:	add	x8, x8, x10
   14284:	mov	w9, #0x1                   	// #1
   14288:	strb	w9, [x8]
   1428c:	ldr	x8, [sp, #8]
   14290:	stur	x8, [x29, #-8]
   14294:	ldur	x0, [x29, #-8]
   14298:	ldp	x29, x30, [sp, #64]
   1429c:	add	sp, sp, #0x50
   142a0:	ret

00000000000142a4 <BZ2_bzReadClose@@Base>:
   142a4:	sub	sp, sp, #0x30
   142a8:	stp	x29, x30, [sp, #32]
   142ac:	add	x29, sp, #0x20
   142b0:	stur	x0, [x29, #-8]
   142b4:	str	x1, [sp, #16]
   142b8:	ldr	x8, [sp, #16]
   142bc:	str	x8, [sp, #8]
   142c0:	ldur	x8, [x29, #-8]
   142c4:	cbz	x8, 142d0 <BZ2_bzReadClose@@Base+0x2c>
   142c8:	ldur	x8, [x29, #-8]
   142cc:	str	wzr, [x8]
   142d0:	ldr	x8, [sp, #8]
   142d4:	cbz	x8, 142e0 <BZ2_bzReadClose@@Base+0x3c>
   142d8:	ldr	x8, [sp, #8]
   142dc:	str	wzr, [x8, #5096]
   142e0:	ldr	x8, [sp, #8]
   142e4:	cbnz	x8, 1430c <BZ2_bzReadClose@@Base+0x68>
   142e8:	ldur	x8, [x29, #-8]
   142ec:	cbz	x8, 142f8 <BZ2_bzReadClose@@Base+0x54>
   142f0:	ldur	x8, [x29, #-8]
   142f4:	str	wzr, [x8]
   142f8:	ldr	x8, [sp, #8]
   142fc:	cbz	x8, 14308 <BZ2_bzReadClose@@Base+0x64>
   14300:	ldr	x8, [sp, #8]
   14304:	str	wzr, [x8, #5096]
   14308:	b	14378 <BZ2_bzReadClose@@Base+0xd4>
   1430c:	ldr	x8, [sp, #8]
   14310:	mov	x9, #0x1394                	// #5012
   14314:	add	x8, x8, x9
   14318:	ldrb	w10, [x8]
   1431c:	cbz	w10, 1434c <BZ2_bzReadClose@@Base+0xa8>
   14320:	ldur	x8, [x29, #-8]
   14324:	cbz	x8, 14334 <BZ2_bzReadClose@@Base+0x90>
   14328:	ldur	x8, [x29, #-8]
   1432c:	mov	w9, #0xffffffff            	// #-1
   14330:	str	w9, [x8]
   14334:	ldr	x8, [sp, #8]
   14338:	cbz	x8, 14348 <BZ2_bzReadClose@@Base+0xa4>
   1433c:	ldr	x8, [sp, #8]
   14340:	mov	w9, #0xffffffff            	// #-1
   14344:	str	w9, [x8, #5096]
   14348:	b	14378 <BZ2_bzReadClose@@Base+0xd4>
   1434c:	ldr	x8, [sp, #8]
   14350:	mov	x9, #0x13ec                	// #5100
   14354:	add	x8, x8, x9
   14358:	ldrb	w10, [x8]
   1435c:	cbz	w10, 14370 <BZ2_bzReadClose@@Base+0xcc>
   14360:	ldr	x8, [sp, #8]
   14364:	mov	x9, #0x1398                	// #5016
   14368:	add	x0, x8, x9
   1436c:	bl	14e0 <BZ2_bzDecompressEnd@plt>
   14370:	ldr	x0, [sp, #8]
   14374:	bl	1610 <free@plt>
   14378:	ldp	x29, x30, [sp, #32]
   1437c:	add	sp, sp, #0x30
   14380:	ret

0000000000014384 <BZ2_bzRead@@Base>:
   14384:	sub	sp, sp, #0x50
   14388:	stp	x29, x30, [sp, #64]
   1438c:	add	x29, sp, #0x40
   14390:	stur	x0, [x29, #-16]
   14394:	stur	x1, [x29, #-24]
   14398:	str	x2, [sp, #32]
   1439c:	str	w3, [sp, #28]
   143a0:	ldur	x8, [x29, #-24]
   143a4:	str	x8, [sp, #8]
   143a8:	ldur	x8, [x29, #-16]
   143ac:	cbz	x8, 143b8 <BZ2_bzRead@@Base+0x34>
   143b0:	ldur	x8, [x29, #-16]
   143b4:	str	wzr, [x8]
   143b8:	ldr	x8, [sp, #8]
   143bc:	cbz	x8, 143c8 <BZ2_bzRead@@Base+0x44>
   143c0:	ldr	x8, [sp, #8]
   143c4:	str	wzr, [x8, #5096]
   143c8:	ldr	x8, [sp, #8]
   143cc:	cbz	x8, 143e8 <BZ2_bzRead@@Base+0x64>
   143d0:	ldr	x8, [sp, #32]
   143d4:	cbz	x8, 143e8 <BZ2_bzRead@@Base+0x64>
   143d8:	ldr	w8, [sp, #28]
   143dc:	cmp	w8, #0x0
   143e0:	cset	w8, ge  // ge = tcont
   143e4:	tbnz	w8, #0, 14418 <BZ2_bzRead@@Base+0x94>
   143e8:	ldur	x8, [x29, #-16]
   143ec:	cbz	x8, 143fc <BZ2_bzRead@@Base+0x78>
   143f0:	ldur	x8, [x29, #-16]
   143f4:	mov	w9, #0xfffffffe            	// #-2
   143f8:	str	w9, [x8]
   143fc:	ldr	x8, [sp, #8]
   14400:	cbz	x8, 14410 <BZ2_bzRead@@Base+0x8c>
   14404:	ldr	x8, [sp, #8]
   14408:	mov	w9, #0xfffffffe            	// #-2
   1440c:	str	w9, [x8, #5096]
   14410:	stur	wzr, [x29, #-4]
   14414:	b	146dc <BZ2_bzRead@@Base+0x358>
   14418:	ldr	x8, [sp, #8]
   1441c:	mov	x9, #0x1394                	// #5012
   14420:	add	x8, x8, x9
   14424:	ldrb	w10, [x8]
   14428:	cbz	w10, 1445c <BZ2_bzRead@@Base+0xd8>
   1442c:	ldur	x8, [x29, #-16]
   14430:	cbz	x8, 14440 <BZ2_bzRead@@Base+0xbc>
   14434:	ldur	x8, [x29, #-16]
   14438:	mov	w9, #0xffffffff            	// #-1
   1443c:	str	w9, [x8]
   14440:	ldr	x8, [sp, #8]
   14444:	cbz	x8, 14454 <BZ2_bzRead@@Base+0xd0>
   14448:	ldr	x8, [sp, #8]
   1444c:	mov	w9, #0xffffffff            	// #-1
   14450:	str	w9, [x8, #5096]
   14454:	stur	wzr, [x29, #-4]
   14458:	b	146dc <BZ2_bzRead@@Base+0x358>
   1445c:	ldr	w8, [sp, #28]
   14460:	cbnz	w8, 1448c <BZ2_bzRead@@Base+0x108>
   14464:	ldur	x8, [x29, #-16]
   14468:	cbz	x8, 14474 <BZ2_bzRead@@Base+0xf0>
   1446c:	ldur	x8, [x29, #-16]
   14470:	str	wzr, [x8]
   14474:	ldr	x8, [sp, #8]
   14478:	cbz	x8, 14484 <BZ2_bzRead@@Base+0x100>
   1447c:	ldr	x8, [sp, #8]
   14480:	str	wzr, [x8, #5096]
   14484:	stur	wzr, [x29, #-4]
   14488:	b	146dc <BZ2_bzRead@@Base+0x358>
   1448c:	ldr	w8, [sp, #28]
   14490:	ldr	x9, [sp, #8]
   14494:	str	w8, [x9, #5048]
   14498:	ldr	x9, [sp, #32]
   1449c:	ldr	x10, [sp, #8]
   144a0:	str	x9, [x10, #5040]
   144a4:	ldr	x8, [sp, #8]
   144a8:	ldr	x0, [x8]
   144ac:	bl	16f0 <ferror@plt>
   144b0:	cbz	w0, 144e4 <BZ2_bzRead@@Base+0x160>
   144b4:	ldur	x8, [x29, #-16]
   144b8:	cbz	x8, 144c8 <BZ2_bzRead@@Base+0x144>
   144bc:	ldur	x8, [x29, #-16]
   144c0:	mov	w9, #0xfffffffa            	// #-6
   144c4:	str	w9, [x8]
   144c8:	ldr	x8, [sp, #8]
   144cc:	cbz	x8, 144dc <BZ2_bzRead@@Base+0x158>
   144d0:	ldr	x8, [sp, #8]
   144d4:	mov	w9, #0xfffffffa            	// #-6
   144d8:	str	w9, [x8, #5096]
   144dc:	stur	wzr, [x29, #-4]
   144e0:	b	146dc <BZ2_bzRead@@Base+0x358>
   144e4:	ldr	x8, [sp, #8]
   144e8:	ldr	w9, [x8, #5024]
   144ec:	cbnz	w9, 14590 <BZ2_bzRead@@Base+0x20c>
   144f0:	ldr	x8, [sp, #8]
   144f4:	ldr	x0, [x8]
   144f8:	bl	146ec <BZ2_bzRead@@Base+0x368>
   144fc:	and	w9, w0, #0xff
   14500:	cbnz	w9, 14590 <BZ2_bzRead@@Base+0x20c>
   14504:	ldr	x8, [sp, #8]
   14508:	add	x0, x8, #0x8
   1450c:	ldr	x8, [sp, #8]
   14510:	ldr	x3, [x8]
   14514:	mov	x1, #0x1                   	// #1
   14518:	mov	x2, #0x1388                	// #5000
   1451c:	bl	15f0 <fread@plt>
   14520:	str	w0, [sp, #24]
   14524:	ldr	x8, [sp, #8]
   14528:	ldr	x0, [x8]
   1452c:	bl	16f0 <ferror@plt>
   14530:	cbz	w0, 14564 <BZ2_bzRead@@Base+0x1e0>
   14534:	ldur	x8, [x29, #-16]
   14538:	cbz	x8, 14548 <BZ2_bzRead@@Base+0x1c4>
   1453c:	ldur	x8, [x29, #-16]
   14540:	mov	w9, #0xfffffffa            	// #-6
   14544:	str	w9, [x8]
   14548:	ldr	x8, [sp, #8]
   1454c:	cbz	x8, 1455c <BZ2_bzRead@@Base+0x1d8>
   14550:	ldr	x8, [sp, #8]
   14554:	mov	w9, #0xfffffffa            	// #-6
   14558:	str	w9, [x8, #5096]
   1455c:	stur	wzr, [x29, #-4]
   14560:	b	146dc <BZ2_bzRead@@Base+0x358>
   14564:	ldr	w8, [sp, #24]
   14568:	ldr	x9, [sp, #8]
   1456c:	str	w8, [x9, #5008]
   14570:	ldr	x9, [sp, #8]
   14574:	ldr	w8, [x9, #5008]
   14578:	ldr	x9, [sp, #8]
   1457c:	str	w8, [x9, #5024]
   14580:	ldr	x9, [sp, #8]
   14584:	add	x9, x9, #0x8
   14588:	ldr	x10, [sp, #8]
   1458c:	str	x9, [x10, #5016]
   14590:	ldr	x8, [sp, #8]
   14594:	mov	x9, #0x1398                	// #5016
   14598:	add	x0, x8, x9
   1459c:	bl	1630 <BZ2_bzDecompress@plt>
   145a0:	str	w0, [sp, #20]
   145a4:	ldr	w10, [sp, #20]
   145a8:	cbz	w10, 145e8 <BZ2_bzRead@@Base+0x264>
   145ac:	ldr	w8, [sp, #20]
   145b0:	cmp	w8, #0x4
   145b4:	b.eq	145e8 <BZ2_bzRead@@Base+0x264>  // b.none
   145b8:	ldur	x8, [x29, #-16]
   145bc:	cbz	x8, 145cc <BZ2_bzRead@@Base+0x248>
   145c0:	ldr	w8, [sp, #20]
   145c4:	ldur	x9, [x29, #-16]
   145c8:	str	w8, [x9]
   145cc:	ldr	x8, [sp, #8]
   145d0:	cbz	x8, 145e0 <BZ2_bzRead@@Base+0x25c>
   145d4:	ldr	w8, [sp, #20]
   145d8:	ldr	x9, [sp, #8]
   145dc:	str	w8, [x9, #5096]
   145e0:	stur	wzr, [x29, #-4]
   145e4:	b	146dc <BZ2_bzRead@@Base+0x358>
   145e8:	ldr	w8, [sp, #20]
   145ec:	cbnz	w8, 14654 <BZ2_bzRead@@Base+0x2d0>
   145f0:	ldr	x8, [sp, #8]
   145f4:	ldr	x0, [x8]
   145f8:	bl	146ec <BZ2_bzRead@@Base+0x368>
   145fc:	and	w9, w0, #0xff
   14600:	cbz	w9, 14654 <BZ2_bzRead@@Base+0x2d0>
   14604:	ldr	x8, [sp, #8]
   14608:	ldr	w9, [x8, #5024]
   1460c:	cbnz	w9, 14654 <BZ2_bzRead@@Base+0x2d0>
   14610:	ldr	x8, [sp, #8]
   14614:	ldr	w9, [x8, #5048]
   14618:	cmp	w9, #0x0
   1461c:	cset	w9, ls  // ls = plast
   14620:	tbnz	w9, #0, 14654 <BZ2_bzRead@@Base+0x2d0>
   14624:	ldur	x8, [x29, #-16]
   14628:	cbz	x8, 14638 <BZ2_bzRead@@Base+0x2b4>
   1462c:	ldur	x8, [x29, #-16]
   14630:	mov	w9, #0xfffffff9            	// #-7
   14634:	str	w9, [x8]
   14638:	ldr	x8, [sp, #8]
   1463c:	cbz	x8, 1464c <BZ2_bzRead@@Base+0x2c8>
   14640:	ldr	x8, [sp, #8]
   14644:	mov	w9, #0xfffffff9            	// #-7
   14648:	str	w9, [x8, #5096]
   1464c:	stur	wzr, [x29, #-4]
   14650:	b	146dc <BZ2_bzRead@@Base+0x358>
   14654:	ldr	w8, [sp, #20]
   14658:	cmp	w8, #0x4
   1465c:	b.ne	146a0 <BZ2_bzRead@@Base+0x31c>  // b.any
   14660:	ldur	x8, [x29, #-16]
   14664:	cbz	x8, 14674 <BZ2_bzRead@@Base+0x2f0>
   14668:	ldur	x8, [x29, #-16]
   1466c:	mov	w9, #0x4                   	// #4
   14670:	str	w9, [x8]
   14674:	ldr	x8, [sp, #8]
   14678:	cbz	x8, 14688 <BZ2_bzRead@@Base+0x304>
   1467c:	ldr	x8, [sp, #8]
   14680:	mov	w9, #0x4                   	// #4
   14684:	str	w9, [x8, #5096]
   14688:	ldr	w8, [sp, #28]
   1468c:	ldr	x9, [sp, #8]
   14690:	ldr	w10, [x9, #5048]
   14694:	subs	w8, w8, w10
   14698:	stur	w8, [x29, #-4]
   1469c:	b	146dc <BZ2_bzRead@@Base+0x358>
   146a0:	ldr	x8, [sp, #8]
   146a4:	ldr	w9, [x8, #5048]
   146a8:	cbnz	w9, 146d8 <BZ2_bzRead@@Base+0x354>
   146ac:	ldur	x8, [x29, #-16]
   146b0:	cbz	x8, 146bc <BZ2_bzRead@@Base+0x338>
   146b4:	ldur	x8, [x29, #-16]
   146b8:	str	wzr, [x8]
   146bc:	ldr	x8, [sp, #8]
   146c0:	cbz	x8, 146cc <BZ2_bzRead@@Base+0x348>
   146c4:	ldr	x8, [sp, #8]
   146c8:	str	wzr, [x8, #5096]
   146cc:	ldr	w8, [sp, #28]
   146d0:	stur	w8, [x29, #-4]
   146d4:	b	146dc <BZ2_bzRead@@Base+0x358>
   146d8:	b	144a4 <BZ2_bzRead@@Base+0x120>
   146dc:	ldur	w0, [x29, #-4]
   146e0:	ldp	x29, x30, [sp, #64]
   146e4:	add	sp, sp, #0x50
   146e8:	ret
   146ec:	sub	sp, sp, #0x30
   146f0:	stp	x29, x30, [sp, #32]
   146f4:	add	x29, sp, #0x20
   146f8:	mov	w8, #0xffffffff            	// #-1
   146fc:	str	x0, [sp, #16]
   14700:	ldr	x0, [sp, #16]
   14704:	str	w8, [sp, #8]
   14708:	bl	1510 <fgetc@plt>
   1470c:	str	w0, [sp, #12]
   14710:	ldr	w8, [sp, #12]
   14714:	ldr	w9, [sp, #8]
   14718:	cmp	w8, w9
   1471c:	b.ne	1472c <BZ2_bzRead@@Base+0x3a8>  // b.any
   14720:	mov	w8, #0x1                   	// #1
   14724:	sturb	w8, [x29, #-1]
   14728:	b	14740 <BZ2_bzRead@@Base+0x3bc>
   1472c:	ldr	w0, [sp, #12]
   14730:	ldr	x1, [sp, #16]
   14734:	bl	1620 <ungetc@plt>
   14738:	mov	w8, #0x0                   	// #0
   1473c:	sturb	w8, [x29, #-1]
   14740:	ldurb	w0, [x29, #-1]
   14744:	ldp	x29, x30, [sp, #32]
   14748:	add	sp, sp, #0x30
   1474c:	ret

0000000000014750 <BZ2_bzReadGetUnused@@Base>:
   14750:	sub	sp, sp, #0x30
   14754:	str	x0, [sp, #40]
   14758:	str	x1, [sp, #32]
   1475c:	str	x2, [sp, #24]
   14760:	str	x3, [sp, #16]
   14764:	ldr	x8, [sp, #32]
   14768:	str	x8, [sp, #8]
   1476c:	ldr	x8, [sp, #8]
   14770:	cbnz	x8, 147a0 <BZ2_bzReadGetUnused@@Base+0x50>
   14774:	ldr	x8, [sp, #40]
   14778:	cbz	x8, 14788 <BZ2_bzReadGetUnused@@Base+0x38>
   1477c:	ldr	x8, [sp, #40]
   14780:	mov	w9, #0xfffffffe            	// #-2
   14784:	str	w9, [x8]
   14788:	ldr	x8, [sp, #8]
   1478c:	cbz	x8, 1479c <BZ2_bzReadGetUnused@@Base+0x4c>
   14790:	ldr	x8, [sp, #8]
   14794:	mov	w9, #0xfffffffe            	// #-2
   14798:	str	w9, [x8, #5096]
   1479c:	b	14858 <BZ2_bzReadGetUnused@@Base+0x108>
   147a0:	ldr	x8, [sp, #8]
   147a4:	ldr	w9, [x8, #5096]
   147a8:	cmp	w9, #0x4
   147ac:	b.eq	147dc <BZ2_bzReadGetUnused@@Base+0x8c>  // b.none
   147b0:	ldr	x8, [sp, #40]
   147b4:	cbz	x8, 147c4 <BZ2_bzReadGetUnused@@Base+0x74>
   147b8:	ldr	x8, [sp, #40]
   147bc:	mov	w9, #0xffffffff            	// #-1
   147c0:	str	w9, [x8]
   147c4:	ldr	x8, [sp, #8]
   147c8:	cbz	x8, 147d8 <BZ2_bzReadGetUnused@@Base+0x88>
   147cc:	ldr	x8, [sp, #8]
   147d0:	mov	w9, #0xffffffff            	// #-1
   147d4:	str	w9, [x8, #5096]
   147d8:	b	14858 <BZ2_bzReadGetUnused@@Base+0x108>
   147dc:	ldr	x8, [sp, #24]
   147e0:	cbz	x8, 147ec <BZ2_bzReadGetUnused@@Base+0x9c>
   147e4:	ldr	x8, [sp, #16]
   147e8:	cbnz	x8, 14818 <BZ2_bzReadGetUnused@@Base+0xc8>
   147ec:	ldr	x8, [sp, #40]
   147f0:	cbz	x8, 14800 <BZ2_bzReadGetUnused@@Base+0xb0>
   147f4:	ldr	x8, [sp, #40]
   147f8:	mov	w9, #0xfffffffe            	// #-2
   147fc:	str	w9, [x8]
   14800:	ldr	x8, [sp, #8]
   14804:	cbz	x8, 14814 <BZ2_bzReadGetUnused@@Base+0xc4>
   14808:	ldr	x8, [sp, #8]
   1480c:	mov	w9, #0xfffffffe            	// #-2
   14810:	str	w9, [x8, #5096]
   14814:	b	14858 <BZ2_bzReadGetUnused@@Base+0x108>
   14818:	ldr	x8, [sp, #40]
   1481c:	cbz	x8, 14828 <BZ2_bzReadGetUnused@@Base+0xd8>
   14820:	ldr	x8, [sp, #40]
   14824:	str	wzr, [x8]
   14828:	ldr	x8, [sp, #8]
   1482c:	cbz	x8, 14838 <BZ2_bzReadGetUnused@@Base+0xe8>
   14830:	ldr	x8, [sp, #8]
   14834:	str	wzr, [x8, #5096]
   14838:	ldr	x8, [sp, #8]
   1483c:	ldr	w9, [x8, #5024]
   14840:	ldr	x8, [sp, #16]
   14844:	str	w9, [x8]
   14848:	ldr	x8, [sp, #8]
   1484c:	ldr	x8, [x8, #5016]
   14850:	ldr	x10, [sp, #24]
   14854:	str	x8, [x10]
   14858:	add	sp, sp, #0x30
   1485c:	ret

0000000000014860 <BZ2_bzBuffToBuffCompress@@Base>:
   14860:	sub	sp, sp, #0xa0
   14864:	stp	x29, x30, [sp, #144]
   14868:	add	x29, sp, #0x90
   1486c:	stur	x0, [x29, #-16]
   14870:	stur	x1, [x29, #-24]
   14874:	stur	x2, [x29, #-32]
   14878:	stur	w3, [x29, #-36]
   1487c:	stur	w4, [x29, #-40]
   14880:	stur	w5, [x29, #-44]
   14884:	stur	w6, [x29, #-48]
   14888:	ldur	x8, [x29, #-16]
   1488c:	cbz	x8, 148f0 <BZ2_bzBuffToBuffCompress@@Base+0x90>
   14890:	ldur	x8, [x29, #-24]
   14894:	cbz	x8, 148f0 <BZ2_bzBuffToBuffCompress@@Base+0x90>
   14898:	ldur	x8, [x29, #-32]
   1489c:	cbz	x8, 148f0 <BZ2_bzBuffToBuffCompress@@Base+0x90>
   148a0:	ldur	w8, [x29, #-40]
   148a4:	cmp	w8, #0x1
   148a8:	b.lt	148f0 <BZ2_bzBuffToBuffCompress@@Base+0x90>  // b.tstop
   148ac:	ldur	w8, [x29, #-40]
   148b0:	cmp	w8, #0x9
   148b4:	b.gt	148f0 <BZ2_bzBuffToBuffCompress@@Base+0x90>
   148b8:	ldur	w8, [x29, #-44]
   148bc:	cmp	w8, #0x0
   148c0:	cset	w8, lt  // lt = tstop
   148c4:	tbnz	w8, #0, 148f0 <BZ2_bzBuffToBuffCompress@@Base+0x90>
   148c8:	ldur	w8, [x29, #-44]
   148cc:	cmp	w8, #0x4
   148d0:	b.gt	148f0 <BZ2_bzBuffToBuffCompress@@Base+0x90>
   148d4:	ldur	w8, [x29, #-48]
   148d8:	cmp	w8, #0x0
   148dc:	cset	w8, lt  // lt = tstop
   148e0:	tbnz	w8, #0, 148f0 <BZ2_bzBuffToBuffCompress@@Base+0x90>
   148e4:	ldur	w8, [x29, #-48]
   148e8:	cmp	w8, #0xfa
   148ec:	b.le	148fc <BZ2_bzBuffToBuffCompress@@Base+0x9c>
   148f0:	mov	w8, #0xfffffffe            	// #-2
   148f4:	stur	w8, [x29, #-4]
   148f8:	b	149ec <BZ2_bzBuffToBuffCompress@@Base+0x18c>
   148fc:	ldur	w8, [x29, #-48]
   14900:	cbnz	w8, 1490c <BZ2_bzBuffToBuffCompress@@Base+0xac>
   14904:	mov	w8, #0x1e                  	// #30
   14908:	stur	w8, [x29, #-48]
   1490c:	add	x8, sp, #0x10
   14910:	mov	x9, xzr
   14914:	str	x9, [x8, #56]
   14918:	str	x9, [x8, #64]
   1491c:	str	x9, [x8, #72]
   14920:	ldur	w1, [x29, #-40]
   14924:	ldur	w2, [x29, #-44]
   14928:	ldur	w3, [x29, #-48]
   1492c:	mov	x0, x8
   14930:	bl	1540 <BZ2_bzCompressInit@plt>
   14934:	str	w0, [sp, #12]
   14938:	ldr	w10, [sp, #12]
   1493c:	cbz	w10, 1494c <BZ2_bzBuffToBuffCompress@@Base+0xec>
   14940:	ldr	w8, [sp, #12]
   14944:	stur	w8, [x29, #-4]
   14948:	b	149ec <BZ2_bzBuffToBuffCompress@@Base+0x18c>
   1494c:	ldur	x8, [x29, #-32]
   14950:	add	x9, sp, #0x10
   14954:	str	x8, [sp, #16]
   14958:	ldur	x8, [x29, #-16]
   1495c:	str	x8, [x9, #24]
   14960:	ldur	w10, [x29, #-36]
   14964:	str	w10, [sp, #24]
   14968:	ldur	x8, [x29, #-24]
   1496c:	ldr	w10, [x8]
   14970:	str	w10, [sp, #48]
   14974:	mov	x0, x9
   14978:	mov	w1, #0x2                   	// #2
   1497c:	bl	15a0 <BZ2_bzCompress@plt>
   14980:	str	w0, [sp, #12]
   14984:	ldr	w10, [sp, #12]
   14988:	cmp	w10, #0x3
   1498c:	b.ne	14994 <BZ2_bzBuffToBuffCompress@@Base+0x134>  // b.any
   14990:	b	149c8 <BZ2_bzBuffToBuffCompress@@Base+0x168>
   14994:	ldr	w8, [sp, #12]
   14998:	cmp	w8, #0x4
   1499c:	b.eq	149a4 <BZ2_bzBuffToBuffCompress@@Base+0x144>  // b.none
   149a0:	b	149dc <BZ2_bzBuffToBuffCompress@@Base+0x17c>
   149a4:	add	x0, sp, #0x10
   149a8:	ldr	w8, [sp, #48]
   149ac:	ldur	x9, [x29, #-24]
   149b0:	ldr	w10, [x9]
   149b4:	subs	w8, w10, w8
   149b8:	str	w8, [x9]
   149bc:	bl	1550 <BZ2_bzCompressEnd@plt>
   149c0:	stur	wzr, [x29, #-4]
   149c4:	b	149ec <BZ2_bzBuffToBuffCompress@@Base+0x18c>
   149c8:	add	x0, sp, #0x10
   149cc:	bl	1550 <BZ2_bzCompressEnd@plt>
   149d0:	mov	w8, #0xfffffff8            	// #-8
   149d4:	stur	w8, [x29, #-4]
   149d8:	b	149ec <BZ2_bzBuffToBuffCompress@@Base+0x18c>
   149dc:	add	x0, sp, #0x10
   149e0:	bl	1550 <BZ2_bzCompressEnd@plt>
   149e4:	ldr	w8, [sp, #12]
   149e8:	stur	w8, [x29, #-4]
   149ec:	ldur	w0, [x29, #-4]
   149f0:	ldp	x29, x30, [sp, #144]
   149f4:	add	sp, sp, #0xa0
   149f8:	ret

00000000000149fc <BZ2_bzBuffToBuffDecompress@@Base>:
   149fc:	sub	sp, sp, #0xa0
   14a00:	stp	x29, x30, [sp, #144]
   14a04:	add	x29, sp, #0x90
   14a08:	stur	x0, [x29, #-16]
   14a0c:	stur	x1, [x29, #-24]
   14a10:	stur	x2, [x29, #-32]
   14a14:	stur	w3, [x29, #-36]
   14a18:	stur	w4, [x29, #-40]
   14a1c:	stur	w5, [x29, #-44]
   14a20:	ldur	x8, [x29, #-16]
   14a24:	cbz	x8, 14a68 <BZ2_bzBuffToBuffDecompress@@Base+0x6c>
   14a28:	ldur	x8, [x29, #-24]
   14a2c:	cbz	x8, 14a68 <BZ2_bzBuffToBuffDecompress@@Base+0x6c>
   14a30:	ldur	x8, [x29, #-32]
   14a34:	cbz	x8, 14a68 <BZ2_bzBuffToBuffDecompress@@Base+0x6c>
   14a38:	ldur	w8, [x29, #-40]
   14a3c:	cbz	w8, 14a4c <BZ2_bzBuffToBuffDecompress@@Base+0x50>
   14a40:	ldur	w8, [x29, #-40]
   14a44:	cmp	w8, #0x1
   14a48:	b.ne	14a68 <BZ2_bzBuffToBuffDecompress@@Base+0x6c>  // b.any
   14a4c:	ldur	w8, [x29, #-44]
   14a50:	cmp	w8, #0x0
   14a54:	cset	w8, lt  // lt = tstop
   14a58:	tbnz	w8, #0, 14a68 <BZ2_bzBuffToBuffDecompress@@Base+0x6c>
   14a5c:	ldur	w8, [x29, #-44]
   14a60:	cmp	w8, #0x4
   14a64:	b.le	14a74 <BZ2_bzBuffToBuffDecompress@@Base+0x78>
   14a68:	mov	w8, #0xfffffffe            	// #-2
   14a6c:	stur	w8, [x29, #-4]
   14a70:	b	14b6c <BZ2_bzBuffToBuffDecompress@@Base+0x170>
   14a74:	add	x8, sp, #0x10
   14a78:	mov	x9, xzr
   14a7c:	str	x9, [x8, #56]
   14a80:	str	x9, [x8, #64]
   14a84:	str	x9, [x8, #72]
   14a88:	ldur	w1, [x29, #-44]
   14a8c:	ldur	w2, [x29, #-40]
   14a90:	mov	x0, x8
   14a94:	bl	14d0 <BZ2_bzDecompressInit@plt>
   14a98:	str	w0, [sp, #12]
   14a9c:	ldr	w10, [sp, #12]
   14aa0:	cbz	w10, 14ab0 <BZ2_bzBuffToBuffDecompress@@Base+0xb4>
   14aa4:	ldr	w8, [sp, #12]
   14aa8:	stur	w8, [x29, #-4]
   14aac:	b	14b6c <BZ2_bzBuffToBuffDecompress@@Base+0x170>
   14ab0:	ldur	x8, [x29, #-32]
   14ab4:	add	x9, sp, #0x10
   14ab8:	str	x8, [sp, #16]
   14abc:	ldur	x8, [x29, #-16]
   14ac0:	str	x8, [x9, #24]
   14ac4:	ldur	w10, [x29, #-36]
   14ac8:	str	w10, [sp, #24]
   14acc:	ldur	x8, [x29, #-24]
   14ad0:	ldr	w10, [x8]
   14ad4:	str	w10, [sp, #48]
   14ad8:	mov	x0, x9
   14adc:	bl	1630 <BZ2_bzDecompress@plt>
   14ae0:	str	w0, [sp, #12]
   14ae4:	ldr	w10, [sp, #12]
   14ae8:	cbnz	w10, 14af0 <BZ2_bzBuffToBuffDecompress@@Base+0xf4>
   14aec:	b	14b24 <BZ2_bzBuffToBuffDecompress@@Base+0x128>
   14af0:	ldr	w8, [sp, #12]
   14af4:	cmp	w8, #0x4
   14af8:	b.eq	14b00 <BZ2_bzBuffToBuffDecompress@@Base+0x104>  // b.none
   14afc:	b	14b5c <BZ2_bzBuffToBuffDecompress@@Base+0x160>
   14b00:	add	x0, sp, #0x10
   14b04:	ldr	w8, [sp, #48]
   14b08:	ldur	x9, [x29, #-24]
   14b0c:	ldr	w10, [x9]
   14b10:	subs	w8, w10, w8
   14b14:	str	w8, [x9]
   14b18:	bl	14e0 <BZ2_bzDecompressEnd@plt>
   14b1c:	stur	wzr, [x29, #-4]
   14b20:	b	14b6c <BZ2_bzBuffToBuffDecompress@@Base+0x170>
   14b24:	ldr	w8, [sp, #48]
   14b28:	cmp	w8, #0x0
   14b2c:	cset	w8, ls  // ls = plast
   14b30:	tbnz	w8, #0, 14b48 <BZ2_bzBuffToBuffDecompress@@Base+0x14c>
   14b34:	add	x0, sp, #0x10
   14b38:	bl	14e0 <BZ2_bzDecompressEnd@plt>
   14b3c:	mov	w8, #0xfffffff9            	// #-7
   14b40:	stur	w8, [x29, #-4]
   14b44:	b	14b6c <BZ2_bzBuffToBuffDecompress@@Base+0x170>
   14b48:	add	x0, sp, #0x10
   14b4c:	bl	14e0 <BZ2_bzDecompressEnd@plt>
   14b50:	mov	w8, #0xfffffff8            	// #-8
   14b54:	stur	w8, [x29, #-4]
   14b58:	b	14b6c <BZ2_bzBuffToBuffDecompress@@Base+0x170>
   14b5c:	add	x0, sp, #0x10
   14b60:	bl	14e0 <BZ2_bzDecompressEnd@plt>
   14b64:	ldr	w8, [sp, #12]
   14b68:	stur	w8, [x29, #-4]
   14b6c:	ldur	w0, [x29, #-4]
   14b70:	ldp	x29, x30, [sp, #144]
   14b74:	add	sp, sp, #0xa0
   14b78:	ret

0000000000014b7c <BZ2_bzopen@@Base>:
   14b7c:	sub	sp, sp, #0x20
   14b80:	stp	x29, x30, [sp, #16]
   14b84:	add	x29, sp, #0x10
   14b88:	mov	w8, #0xffffffff            	// #-1
   14b8c:	mov	w9, wzr
   14b90:	str	x0, [sp, #8]
   14b94:	str	x1, [sp]
   14b98:	ldr	x0, [sp, #8]
   14b9c:	ldr	x2, [sp]
   14ba0:	mov	w1, w8
   14ba4:	mov	w3, w9
   14ba8:	bl	14bb8 <BZ2_bzopen@@Base+0x3c>
   14bac:	ldp	x29, x30, [sp, #16]
   14bb0:	add	sp, sp, #0x20
   14bb4:	ret
   14bb8:	stp	x29, x30, [sp, #-32]!
   14bbc:	str	x28, [sp, #16]
   14bc0:	mov	x29, sp
   14bc4:	sub	sp, sp, #0x1, lsl #12
   14bc8:	sub	sp, sp, #0x400
   14bcc:	mov	w8, #0x9                   	// #9
   14bd0:	mov	x9, xzr
   14bd4:	mov	w10, #0x1e                  	// #30
   14bd8:	add	x11, sp, #0x38
   14bdc:	stur	x0, [x29, #-16]
   14be0:	stur	w1, [x29, #-20]
   14be4:	stur	x2, [x29, #-32]
   14be8:	stur	w3, [x29, #-36]
   14bec:	str	w8, [sp, #76]
   14bf0:	str	wzr, [sp, #72]
   14bf4:	str	xzr, [sp, #56]
   14bf8:	mov	w8, #0x0                   	// #0
   14bfc:	strh	w8, [x11, #8]
   14c00:	str	x9, [sp, #48]
   14c04:	str	x9, [sp, #40]
   14c08:	str	wzr, [sp, #36]
   14c0c:	str	w10, [sp, #32]
   14c10:	str	wzr, [sp, #28]
   14c14:	str	wzr, [sp, #24]
   14c18:	ldur	x9, [x29, #-32]
   14c1c:	cbnz	x9, 14c2c <BZ2_bzopen@@Base+0xb0>
   14c20:	mov	x8, xzr
   14c24:	stur	x8, [x29, #-8]
   14c28:	b	14e64 <BZ2_bzopen@@Base+0x2e8>
   14c2c:	ldur	x8, [x29, #-32]
   14c30:	ldrb	w9, [x8]
   14c34:	cbz	w9, 14ccc <BZ2_bzopen@@Base+0x150>
   14c38:	ldur	x8, [x29, #-32]
   14c3c:	ldrb	w9, [x8]
   14c40:	cmp	w9, #0x72
   14c44:	str	w9, [sp, #20]
   14c48:	b.eq	14c70 <BZ2_bzopen@@Base+0xf4>  // b.none
   14c4c:	b	14c50 <BZ2_bzopen@@Base+0xd4>
   14c50:	ldr	w8, [sp, #20]
   14c54:	cmp	w8, #0x73
   14c58:	b.eq	14c84 <BZ2_bzopen@@Base+0x108>  // b.none
   14c5c:	b	14c60 <BZ2_bzopen@@Base+0xe4>
   14c60:	ldr	w8, [sp, #20]
   14c64:	cmp	w8, #0x77
   14c68:	b.eq	14c78 <BZ2_bzopen@@Base+0xfc>  // b.none
   14c6c:	b	14c90 <BZ2_bzopen@@Base+0x114>
   14c70:	str	wzr, [sp, #72]
   14c74:	b	14cbc <BZ2_bzopen@@Base+0x140>
   14c78:	mov	w8, #0x1                   	// #1
   14c7c:	str	w8, [sp, #72]
   14c80:	b	14cbc <BZ2_bzopen@@Base+0x140>
   14c84:	mov	w8, #0x1                   	// #1
   14c88:	str	w8, [sp, #28]
   14c8c:	b	14cbc <BZ2_bzopen@@Base+0x140>
   14c90:	bl	15d0 <__ctype_b_loc@plt>
   14c94:	ldr	x8, [x0]
   14c98:	ldur	x9, [x29, #-32]
   14c9c:	ldrb	w10, [x9]
   14ca0:	ldrh	w10, [x8, w10, sxtw #1]
   14ca4:	and	w10, w10, #0x800
   14ca8:	cbz	w10, 14cbc <BZ2_bzopen@@Base+0x140>
   14cac:	ldur	x8, [x29, #-32]
   14cb0:	ldrb	w9, [x8]
   14cb4:	subs	w9, w9, #0x30
   14cb8:	str	w9, [sp, #76]
   14cbc:	ldur	x8, [x29, #-32]
   14cc0:	add	x8, x8, #0x1
   14cc4:	stur	x8, [x29, #-32]
   14cc8:	b	14c2c <BZ2_bzopen@@Base+0xb0>
   14ccc:	ldr	w8, [sp, #72]
   14cd0:	adrp	x9, 16000 <BZ2_bzerror@@Base+0xf84>
   14cd4:	add	x9, x9, #0x29a
   14cd8:	adrp	x10, 16000 <BZ2_bzerror@@Base+0xf84>
   14cdc:	add	x10, x10, #0x298
   14ce0:	cmp	w8, #0x0
   14ce4:	csel	x1, x10, x9, ne  // ne = any
   14ce8:	add	x9, sp, #0x38
   14cec:	mov	x0, x9
   14cf0:	str	x9, [sp, #8]
   14cf4:	bl	1500 <strcat@plt>
   14cf8:	ldr	x9, [sp, #8]
   14cfc:	mov	x0, x9
   14d00:	adrp	x1, 16000 <BZ2_bzerror@@Base+0xf84>
   14d04:	add	x1, x1, #0x29c
   14d08:	bl	1500 <strcat@plt>
   14d0c:	ldur	w8, [x29, #-36]
   14d10:	cbnz	w8, 14d7c <BZ2_bzopen@@Base+0x200>
   14d14:	ldur	x8, [x29, #-16]
   14d18:	cbz	x8, 14d30 <BZ2_bzopen@@Base+0x1b4>
   14d1c:	ldur	x0, [x29, #-16]
   14d20:	adrp	x1, 15000 <BZ2_bzclose@@Base+0x58>
   14d24:	add	x1, x1, #0xe18
   14d28:	bl	15c0 <strcmp@plt>
   14d2c:	cbnz	w0, 14d68 <BZ2_bzopen@@Base+0x1ec>
   14d30:	ldr	w8, [sp, #72]
   14d34:	cbz	w8, 14d4c <BZ2_bzopen@@Base+0x1d0>
   14d38:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   14d3c:	ldr	x8, [x8, #4032]
   14d40:	ldr	x8, [x8]
   14d44:	str	x8, [sp]
   14d48:	b	14d5c <BZ2_bzopen@@Base+0x1e0>
   14d4c:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   14d50:	ldr	x8, [x8, #4040]
   14d54:	ldr	x8, [x8]
   14d58:	str	x8, [sp]
   14d5c:	ldr	x8, [sp]
   14d60:	str	x8, [sp, #48]
   14d64:	b	14d78 <BZ2_bzopen@@Base+0x1fc>
   14d68:	ldur	x0, [x29, #-16]
   14d6c:	add	x1, sp, #0x38
   14d70:	bl	16a0 <fopen64@plt>
   14d74:	str	x0, [sp, #48]
   14d78:	b	14d8c <BZ2_bzopen@@Base+0x210>
   14d7c:	ldur	w0, [x29, #-20]
   14d80:	add	x1, sp, #0x38
   14d84:	bl	1520 <fdopen@plt>
   14d88:	str	x0, [sp, #48]
   14d8c:	ldr	x8, [sp, #48]
   14d90:	cbnz	x8, 14da0 <BZ2_bzopen@@Base+0x224>
   14d94:	mov	x8, xzr
   14d98:	stur	x8, [x29, #-8]
   14d9c:	b	14e64 <BZ2_bzopen@@Base+0x2e8>
   14da0:	ldr	w8, [sp, #72]
   14da4:	cbz	w8, 14df0 <BZ2_bzopen@@Base+0x274>
   14da8:	ldr	w8, [sp, #76]
   14dac:	cmp	w8, #0x1
   14db0:	b.ge	14dbc <BZ2_bzopen@@Base+0x240>  // b.tcont
   14db4:	mov	w8, #0x1                   	// #1
   14db8:	str	w8, [sp, #76]
   14dbc:	ldr	w8, [sp, #76]
   14dc0:	cmp	w8, #0x9
   14dc4:	b.le	14dd0 <BZ2_bzopen@@Base+0x254>
   14dc8:	mov	w8, #0x9                   	// #9
   14dcc:	str	w8, [sp, #76]
   14dd0:	ldr	x1, [sp, #48]
   14dd4:	ldr	w2, [sp, #76]
   14dd8:	ldr	w3, [sp, #36]
   14ddc:	ldr	w4, [sp, #32]
   14de0:	sub	x0, x29, #0x28
   14de4:	bl	1530 <BZ2_bzWriteOpen@plt>
   14de8:	str	x0, [sp, #40]
   14dec:	b	14e10 <BZ2_bzopen@@Base+0x294>
   14df0:	ldr	x1, [sp, #48]
   14df4:	ldr	w2, [sp, #36]
   14df8:	ldr	w3, [sp, #28]
   14dfc:	ldr	w5, [sp, #24]
   14e00:	sub	x0, x29, #0x28
   14e04:	add	x4, sp, #0x50
   14e08:	bl	16b0 <BZ2_bzReadOpen@plt>
   14e0c:	str	x0, [sp, #40]
   14e10:	ldr	x8, [sp, #40]
   14e14:	cbnz	x8, 14e5c <BZ2_bzopen@@Base+0x2e0>
   14e18:	ldr	x8, [sp, #48]
   14e1c:	adrp	x9, 26000 <BZ2_bzerror@@Base+0x10f84>
   14e20:	ldr	x9, [x9, #4040]
   14e24:	ldr	x9, [x9]
   14e28:	cmp	x8, x9
   14e2c:	b.eq	14e50 <BZ2_bzopen@@Base+0x2d4>  // b.none
   14e30:	ldr	x8, [sp, #48]
   14e34:	adrp	x9, 26000 <BZ2_bzerror@@Base+0x10f84>
   14e38:	ldr	x9, [x9, #4032]
   14e3c:	ldr	x9, [x9]
   14e40:	cmp	x8, x9
   14e44:	b.eq	14e50 <BZ2_bzopen@@Base+0x2d4>  // b.none
   14e48:	ldr	x0, [sp, #48]
   14e4c:	bl	14b0 <fclose@plt>
   14e50:	mov	x8, xzr
   14e54:	stur	x8, [x29, #-8]
   14e58:	b	14e64 <BZ2_bzopen@@Base+0x2e8>
   14e5c:	ldr	x8, [sp, #40]
   14e60:	stur	x8, [x29, #-8]
   14e64:	ldur	x0, [x29, #-8]
   14e68:	add	sp, sp, #0x1, lsl #12
   14e6c:	add	sp, sp, #0x400
   14e70:	ldr	x28, [sp, #16]
   14e74:	ldp	x29, x30, [sp], #32
   14e78:	ret

0000000000014e7c <BZ2_bzdopen@@Base>:
   14e7c:	sub	sp, sp, #0x20
   14e80:	stp	x29, x30, [sp, #16]
   14e84:	add	x29, sp, #0x10
   14e88:	mov	x8, xzr
   14e8c:	mov	w3, #0x1                   	// #1
   14e90:	stur	w0, [x29, #-4]
   14e94:	str	x1, [sp]
   14e98:	ldur	w1, [x29, #-4]
   14e9c:	ldr	x2, [sp]
   14ea0:	mov	x0, x8
   14ea4:	bl	14bb8 <BZ2_bzopen@@Base+0x3c>
   14ea8:	ldp	x29, x30, [sp, #16]
   14eac:	add	sp, sp, #0x20
   14eb0:	ret

0000000000014eb4 <BZ2_bzread@@Base>:
   14eb4:	sub	sp, sp, #0x40
   14eb8:	stp	x29, x30, [sp, #48]
   14ebc:	add	x29, sp, #0x30
   14ec0:	stur	x0, [x29, #-16]
   14ec4:	str	x1, [sp, #24]
   14ec8:	str	w2, [sp, #20]
   14ecc:	ldur	x8, [x29, #-16]
   14ed0:	ldr	w9, [x8, #5096]
   14ed4:	cmp	w9, #0x4
   14ed8:	b.ne	14ee4 <BZ2_bzread@@Base+0x30>  // b.any
   14edc:	stur	wzr, [x29, #-4]
   14ee0:	b	14f24 <BZ2_bzread@@Base+0x70>
   14ee4:	ldur	x1, [x29, #-16]
   14ee8:	ldr	x2, [sp, #24]
   14eec:	ldr	w3, [sp, #20]
   14ef0:	add	x0, sp, #0x10
   14ef4:	bl	16c0 <BZ2_bzRead@plt>
   14ef8:	str	w0, [sp, #12]
   14efc:	ldr	w8, [sp, #16]
   14f00:	cbz	w8, 14f10 <BZ2_bzread@@Base+0x5c>
   14f04:	ldr	w8, [sp, #16]
   14f08:	cmp	w8, #0x4
   14f0c:	b.ne	14f1c <BZ2_bzread@@Base+0x68>  // b.any
   14f10:	ldr	w8, [sp, #12]
   14f14:	stur	w8, [x29, #-4]
   14f18:	b	14f24 <BZ2_bzread@@Base+0x70>
   14f1c:	mov	w8, #0xffffffff            	// #-1
   14f20:	stur	w8, [x29, #-4]
   14f24:	ldur	w0, [x29, #-4]
   14f28:	ldp	x29, x30, [sp, #48]
   14f2c:	add	sp, sp, #0x40
   14f30:	ret

0000000000014f34 <BZ2_bzwrite@@Base>:
   14f34:	sub	sp, sp, #0x30
   14f38:	stp	x29, x30, [sp, #32]
   14f3c:	add	x29, sp, #0x20
   14f40:	mov	x8, sp
   14f44:	str	x0, [sp, #16]
   14f48:	str	x1, [sp, #8]
   14f4c:	str	w2, [sp, #4]
   14f50:	ldr	x1, [sp, #16]
   14f54:	ldr	x2, [sp, #8]
   14f58:	ldr	w3, [sp, #4]
   14f5c:	mov	x0, x8
   14f60:	bl	15b0 <BZ2_bzWrite@plt>
   14f64:	ldr	w9, [sp]
   14f68:	cbnz	w9, 14f78 <BZ2_bzwrite@@Base+0x44>
   14f6c:	ldr	w8, [sp, #4]
   14f70:	stur	w8, [x29, #-4]
   14f74:	b	14f80 <BZ2_bzwrite@@Base+0x4c>
   14f78:	mov	w8, #0xffffffff            	// #-1
   14f7c:	stur	w8, [x29, #-4]
   14f80:	ldur	w0, [x29, #-4]
   14f84:	ldp	x29, x30, [sp, #32]
   14f88:	add	sp, sp, #0x30
   14f8c:	ret

0000000000014f90 <BZ2_bzflush@@Base>:
   14f90:	sub	sp, sp, #0x10
   14f94:	mov	w8, wzr
   14f98:	str	x0, [sp, #8]
   14f9c:	mov	w0, w8
   14fa0:	add	sp, sp, #0x10
   14fa4:	ret

0000000000014fa8 <BZ2_bzclose@@Base>:
   14fa8:	sub	sp, sp, #0x30
   14fac:	stp	x29, x30, [sp, #32]
   14fb0:	add	x29, sp, #0x20
   14fb4:	stur	x0, [x29, #-8]
   14fb8:	ldur	x8, [x29, #-8]
   14fbc:	cbnz	x8, 14fc4 <BZ2_bzclose@@Base+0x1c>
   14fc0:	b	15070 <BZ2_bzclose@@Base+0xc8>
   14fc4:	ldur	x8, [x29, #-8]
   14fc8:	ldr	x8, [x8]
   14fcc:	str	x8, [sp, #8]
   14fd0:	ldur	x8, [x29, #-8]
   14fd4:	mov	x9, #0x1394                	// #5012
   14fd8:	add	x8, x8, x9
   14fdc:	ldrb	w10, [x8]
   14fe0:	cbz	w10, 1502c <BZ2_bzclose@@Base+0x84>
   14fe4:	ldur	x1, [x29, #-8]
   14fe8:	sub	x0, x29, #0xc
   14fec:	mov	w8, wzr
   14ff0:	mov	w2, w8
   14ff4:	mov	x9, xzr
   14ff8:	mov	x3, x9
   14ffc:	mov	x4, x9
   15000:	bl	1590 <BZ2_bzWriteClose@plt>
   15004:	ldur	w8, [x29, #-12]
   15008:	cbz	w8, 15028 <BZ2_bzclose@@Base+0x80>
   1500c:	ldur	x1, [x29, #-8]
   15010:	mov	x8, xzr
   15014:	mov	x0, x8
   15018:	mov	w2, #0x1                   	// #1
   1501c:	mov	x3, x8
   15020:	mov	x4, x8
   15024:	bl	1590 <BZ2_bzWriteClose@plt>
   15028:	b	15038 <BZ2_bzclose@@Base+0x90>
   1502c:	ldur	x1, [x29, #-8]
   15030:	sub	x0, x29, #0xc
   15034:	bl	14f0 <BZ2_bzReadClose@plt>
   15038:	ldr	x8, [sp, #8]
   1503c:	adrp	x9, 26000 <BZ2_bzerror@@Base+0x10f84>
   15040:	ldr	x9, [x9, #4040]
   15044:	ldr	x9, [x9]
   15048:	cmp	x8, x9
   1504c:	b.eq	15070 <BZ2_bzclose@@Base+0xc8>  // b.none
   15050:	ldr	x8, [sp, #8]
   15054:	adrp	x9, 26000 <BZ2_bzerror@@Base+0x10f84>
   15058:	ldr	x9, [x9, #4032]
   1505c:	ldr	x9, [x9]
   15060:	cmp	x8, x9
   15064:	b.eq	15070 <BZ2_bzclose@@Base+0xc8>  // b.none
   15068:	ldr	x0, [sp, #8]
   1506c:	bl	14b0 <fclose@plt>
   15070:	ldp	x29, x30, [sp, #32]
   15074:	add	sp, sp, #0x30
   15078:	ret

000000000001507c <BZ2_bzerror@@Base>:
   1507c:	sub	sp, sp, #0x20
   15080:	str	x0, [sp, #24]
   15084:	str	x1, [sp, #16]
   15088:	ldr	x8, [sp, #24]
   1508c:	ldr	w9, [x8, #5096]
   15090:	str	w9, [sp, #12]
   15094:	ldr	w9, [sp, #12]
   15098:	cmp	w9, #0x0
   1509c:	cset	w9, le
   150a0:	tbnz	w9, #0, 150a8 <BZ2_bzerror@@Base+0x2c>
   150a4:	str	wzr, [sp, #12]
   150a8:	ldr	w8, [sp, #12]
   150ac:	ldr	x9, [sp, #16]
   150b0:	str	w8, [x9]
   150b4:	ldr	w8, [sp, #12]
   150b8:	mov	w10, #0xffffffff            	// #-1
   150bc:	mul	w8, w8, w10
   150c0:	mov	w0, w8
   150c4:	sxtw	x9, w0
   150c8:	mov	x11, #0x8                   	// #8
   150cc:	mul	x9, x11, x9
   150d0:	adrp	x11, 27000 <BZ2_bzerror@@Base+0x11f84>
   150d4:	add	x11, x11, #0xd88
   150d8:	add	x9, x11, x9
   150dc:	ldr	x0, [x9]
   150e0:	add	sp, sp, #0x20
   150e4:	ret
   150e8:	sub	sp, sp, #0x10
   150ec:	mov	w8, #0x0                   	// #0
   150f0:	str	x0, [sp, #8]
   150f4:	strb	w8, [sp, #7]
   150f8:	ldr	x8, [sp, #8]
   150fc:	ldr	x8, [x8]
   15100:	ldr	w9, [x8, #32]
   15104:	cbnz	w9, 1510c <BZ2_bzerror@@Base+0x90>
   15108:	b	151cc <BZ2_bzerror@@Base+0x150>
   1510c:	ldr	x8, [sp, #8]
   15110:	ldr	w9, [x8, #120]
   15114:	ldr	x8, [sp, #8]
   15118:	ldr	w10, [x8, #116]
   1511c:	cmp	w9, w10
   15120:	b.lt	15128 <BZ2_bzerror@@Base+0xac>  // b.tstop
   15124:	b	151cc <BZ2_bzerror@@Base+0x150>
   15128:	mov	w8, #0x1                   	// #1
   1512c:	strb	w8, [sp, #7]
   15130:	ldr	x9, [sp, #8]
   15134:	ldr	x9, [x9, #80]
   15138:	ldr	x10, [sp, #8]
   1513c:	ldrsw	x10, [x10, #120]
   15140:	add	x9, x9, x10
   15144:	ldrb	w8, [x9]
   15148:	ldr	x9, [sp, #8]
   1514c:	ldr	x9, [x9]
   15150:	ldr	x9, [x9, #24]
   15154:	strb	w8, [x9]
   15158:	ldr	x9, [sp, #8]
   1515c:	ldr	w8, [x9, #120]
   15160:	add	w8, w8, #0x1
   15164:	str	w8, [x9, #120]
   15168:	ldr	x9, [sp, #8]
   1516c:	ldr	x9, [x9]
   15170:	ldr	w8, [x9, #32]
   15174:	subs	w8, w8, #0x1
   15178:	str	w8, [x9, #32]
   1517c:	ldr	x9, [sp, #8]
   15180:	ldr	x9, [x9]
   15184:	ldr	x10, [x9, #24]
   15188:	add	x10, x10, #0x1
   1518c:	str	x10, [x9, #24]
   15190:	ldr	x9, [sp, #8]
   15194:	ldr	x9, [x9]
   15198:	ldr	w8, [x9, #36]
   1519c:	add	w8, w8, #0x1
   151a0:	str	w8, [x9, #36]
   151a4:	ldr	x9, [sp, #8]
   151a8:	ldr	x9, [x9]
   151ac:	ldr	w8, [x9, #36]
   151b0:	cbnz	w8, 151c8 <BZ2_bzerror@@Base+0x14c>
   151b4:	ldr	x8, [sp, #8]
   151b8:	ldr	x8, [x8]
   151bc:	ldr	w9, [x8, #40]
   151c0:	add	w9, w9, #0x1
   151c4:	str	w9, [x8, #40]
   151c8:	b	150f8 <BZ2_bzerror@@Base+0x7c>
   151cc:	ldrb	w0, [sp, #7]
   151d0:	add	sp, sp, #0x10
   151d4:	ret
   151d8:	sub	sp, sp, #0x30
   151dc:	stp	x29, x30, [sp, #32]
   151e0:	add	x29, sp, #0x20
   151e4:	mov	w8, #0x0                   	// #0
   151e8:	stur	x0, [x29, #-8]
   151ec:	sturb	w8, [x29, #-9]
   151f0:	ldur	x9, [x29, #-8]
   151f4:	ldr	w8, [x9, #8]
   151f8:	cmp	w8, #0x2
   151fc:	b.ne	153d8 <BZ2_bzerror@@Base+0x35c>  // b.any
   15200:	ldur	x8, [x29, #-8]
   15204:	ldr	w9, [x8, #108]
   15208:	ldur	x8, [x29, #-8]
   1520c:	ldr	w10, [x8, #112]
   15210:	cmp	w9, w10
   15214:	b.lt	1521c <BZ2_bzerror@@Base+0x1a0>  // b.tstop
   15218:	b	153d4 <BZ2_bzerror@@Base+0x358>
   1521c:	ldur	x8, [x29, #-8]
   15220:	ldr	x8, [x8]
   15224:	ldr	w9, [x8, #8]
   15228:	cbnz	w9, 15230 <BZ2_bzerror@@Base+0x1b4>
   1522c:	b	153d4 <BZ2_bzerror@@Base+0x358>
   15230:	mov	w8, #0x1                   	// #1
   15234:	sturb	w8, [x29, #-9]
   15238:	ldur	x9, [x29, #-8]
   1523c:	ldr	x9, [x9]
   15240:	ldr	x9, [x9]
   15244:	ldrb	w8, [x9]
   15248:	str	w8, [sp, #16]
   1524c:	ldr	w8, [sp, #16]
   15250:	ldur	x9, [x29, #-8]
   15254:	ldr	w10, [x9, #92]
   15258:	cmp	w8, w10
   1525c:	b.eq	15308 <BZ2_bzerror@@Base+0x28c>  // b.none
   15260:	ldur	x8, [x29, #-8]
   15264:	ldr	w9, [x8, #96]
   15268:	cmp	w9, #0x1
   1526c:	b.ne	15308 <BZ2_bzerror@@Base+0x28c>  // b.any
   15270:	ldur	x8, [x29, #-8]
   15274:	ldr	w9, [x8, #92]
   15278:	strb	w9, [sp, #15]
   1527c:	ldur	x8, [x29, #-8]
   15280:	ldr	w9, [x8, #648]
   15284:	ldur	x8, [x29, #-8]
   15288:	ldr	w10, [x8, #648]
   1528c:	ldrb	w11, [sp, #15]
   15290:	eor	w10, w11, w10, lsr #24
   15294:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   15298:	ldr	x8, [x8, #4024]
   1529c:	ldr	w10, [x8, w10, uxtw #2]
   152a0:	eor	w9, w10, w9, lsl #8
   152a4:	ldur	x8, [x29, #-8]
   152a8:	str	w9, [x8, #648]
   152ac:	ldur	x8, [x29, #-8]
   152b0:	add	x8, x8, #0x80
   152b4:	ldur	x12, [x29, #-8]
   152b8:	ldr	w9, [x12, #92]
   152bc:	mov	w12, w9
   152c0:	add	x8, x8, x12
   152c4:	mov	w9, #0x1                   	// #1
   152c8:	strb	w9, [x8]
   152cc:	ldrb	w9, [sp, #15]
   152d0:	ldur	x8, [x29, #-8]
   152d4:	ldr	x8, [x8, #64]
   152d8:	ldur	x12, [x29, #-8]
   152dc:	ldrsw	x12, [x12, #108]
   152e0:	add	x8, x8, x12
   152e4:	strb	w9, [x8]
   152e8:	ldur	x8, [x29, #-8]
   152ec:	ldr	w9, [x8, #108]
   152f0:	add	w9, w9, #0x1
   152f4:	str	w9, [x8, #108]
   152f8:	ldr	w9, [sp, #16]
   152fc:	ldur	x8, [x29, #-8]
   15300:	str	w9, [x8, #92]
   15304:	b	15370 <BZ2_bzerror@@Base+0x2f4>
   15308:	ldr	w8, [sp, #16]
   1530c:	ldur	x9, [x29, #-8]
   15310:	ldr	w10, [x9, #92]
   15314:	cmp	w8, w10
   15318:	b.ne	1532c <BZ2_bzerror@@Base+0x2b0>  // b.any
   1531c:	ldur	x8, [x29, #-8]
   15320:	ldr	w9, [x8, #96]
   15324:	cmp	w9, #0xff
   15328:	b.ne	15360 <BZ2_bzerror@@Base+0x2e4>  // b.any
   1532c:	ldur	x8, [x29, #-8]
   15330:	ldr	w9, [x8, #92]
   15334:	cmp	w9, #0x100
   15338:	b.cs	15344 <BZ2_bzerror@@Base+0x2c8>  // b.hs, b.nlast
   1533c:	ldur	x0, [x29, #-8]
   15340:	bl	15618 <BZ2_bzerror@@Base+0x59c>
   15344:	ldr	w8, [sp, #16]
   15348:	ldur	x9, [x29, #-8]
   1534c:	str	w8, [x9, #92]
   15350:	ldur	x9, [x29, #-8]
   15354:	mov	w8, #0x1                   	// #1
   15358:	str	w8, [x9, #96]
   1535c:	b	15370 <BZ2_bzerror@@Base+0x2f4>
   15360:	ldur	x8, [x29, #-8]
   15364:	ldr	w9, [x8, #96]
   15368:	add	w9, w9, #0x1
   1536c:	str	w9, [x8, #96]
   15370:	ldur	x8, [x29, #-8]
   15374:	ldr	x8, [x8]
   15378:	ldr	x9, [x8]
   1537c:	add	x9, x9, #0x1
   15380:	str	x9, [x8]
   15384:	ldur	x8, [x29, #-8]
   15388:	ldr	x8, [x8]
   1538c:	ldr	w10, [x8, #8]
   15390:	subs	w10, w10, #0x1
   15394:	str	w10, [x8, #8]
   15398:	ldur	x8, [x29, #-8]
   1539c:	ldr	x8, [x8]
   153a0:	ldr	w10, [x8, #12]
   153a4:	add	w10, w10, #0x1
   153a8:	str	w10, [x8, #12]
   153ac:	ldur	x8, [x29, #-8]
   153b0:	ldr	x8, [x8]
   153b4:	ldr	w10, [x8, #12]
   153b8:	cbnz	w10, 153d0 <BZ2_bzerror@@Base+0x354>
   153bc:	ldur	x8, [x29, #-8]
   153c0:	ldr	x8, [x8]
   153c4:	ldr	w9, [x8, #16]
   153c8:	add	w9, w9, #0x1
   153cc:	str	w9, [x8, #16]
   153d0:	b	15200 <BZ2_bzerror@@Base+0x184>
   153d4:	b	155cc <BZ2_bzerror@@Base+0x550>
   153d8:	ldur	x8, [x29, #-8]
   153dc:	ldr	w9, [x8, #108]
   153e0:	ldur	x8, [x29, #-8]
   153e4:	ldr	w10, [x8, #112]
   153e8:	cmp	w9, w10
   153ec:	b.lt	153f4 <BZ2_bzerror@@Base+0x378>  // b.tstop
   153f0:	b	155cc <BZ2_bzerror@@Base+0x550>
   153f4:	ldur	x8, [x29, #-8]
   153f8:	ldr	x8, [x8]
   153fc:	ldr	w9, [x8, #8]
   15400:	cbnz	w9, 15408 <BZ2_bzerror@@Base+0x38c>
   15404:	b	155cc <BZ2_bzerror@@Base+0x550>
   15408:	ldur	x8, [x29, #-8]
   1540c:	ldr	w9, [x8, #16]
   15410:	cbnz	w9, 15418 <BZ2_bzerror@@Base+0x39c>
   15414:	b	155cc <BZ2_bzerror@@Base+0x550>
   15418:	mov	w8, #0x1                   	// #1
   1541c:	sturb	w8, [x29, #-9]
   15420:	ldur	x9, [x29, #-8]
   15424:	ldr	x9, [x9]
   15428:	ldr	x9, [x9]
   1542c:	ldrb	w8, [x9]
   15430:	str	w8, [sp, #8]
   15434:	ldr	w8, [sp, #8]
   15438:	ldur	x9, [x29, #-8]
   1543c:	ldr	w10, [x9, #92]
   15440:	cmp	w8, w10
   15444:	b.eq	154f0 <BZ2_bzerror@@Base+0x474>  // b.none
   15448:	ldur	x8, [x29, #-8]
   1544c:	ldr	w9, [x8, #96]
   15450:	cmp	w9, #0x1
   15454:	b.ne	154f0 <BZ2_bzerror@@Base+0x474>  // b.any
   15458:	ldur	x8, [x29, #-8]
   1545c:	ldr	w9, [x8, #92]
   15460:	strb	w9, [sp, #7]
   15464:	ldur	x8, [x29, #-8]
   15468:	ldr	w9, [x8, #648]
   1546c:	ldur	x8, [x29, #-8]
   15470:	ldr	w10, [x8, #648]
   15474:	ldrb	w11, [sp, #7]
   15478:	eor	w10, w11, w10, lsr #24
   1547c:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   15480:	ldr	x8, [x8, #4024]
   15484:	ldr	w10, [x8, w10, uxtw #2]
   15488:	eor	w9, w10, w9, lsl #8
   1548c:	ldur	x8, [x29, #-8]
   15490:	str	w9, [x8, #648]
   15494:	ldur	x8, [x29, #-8]
   15498:	add	x8, x8, #0x80
   1549c:	ldur	x12, [x29, #-8]
   154a0:	ldr	w9, [x12, #92]
   154a4:	mov	w12, w9
   154a8:	add	x8, x8, x12
   154ac:	mov	w9, #0x1                   	// #1
   154b0:	strb	w9, [x8]
   154b4:	ldrb	w9, [sp, #7]
   154b8:	ldur	x8, [x29, #-8]
   154bc:	ldr	x8, [x8, #64]
   154c0:	ldur	x12, [x29, #-8]
   154c4:	ldrsw	x12, [x12, #108]
   154c8:	add	x8, x8, x12
   154cc:	strb	w9, [x8]
   154d0:	ldur	x8, [x29, #-8]
   154d4:	ldr	w9, [x8, #108]
   154d8:	add	w9, w9, #0x1
   154dc:	str	w9, [x8, #108]
   154e0:	ldr	w9, [sp, #8]
   154e4:	ldur	x8, [x29, #-8]
   154e8:	str	w9, [x8, #92]
   154ec:	b	15558 <BZ2_bzerror@@Base+0x4dc>
   154f0:	ldr	w8, [sp, #8]
   154f4:	ldur	x9, [x29, #-8]
   154f8:	ldr	w10, [x9, #92]
   154fc:	cmp	w8, w10
   15500:	b.ne	15514 <BZ2_bzerror@@Base+0x498>  // b.any
   15504:	ldur	x8, [x29, #-8]
   15508:	ldr	w9, [x8, #96]
   1550c:	cmp	w9, #0xff
   15510:	b.ne	15548 <BZ2_bzerror@@Base+0x4cc>  // b.any
   15514:	ldur	x8, [x29, #-8]
   15518:	ldr	w9, [x8, #92]
   1551c:	cmp	w9, #0x100
   15520:	b.cs	1552c <BZ2_bzerror@@Base+0x4b0>  // b.hs, b.nlast
   15524:	ldur	x0, [x29, #-8]
   15528:	bl	15618 <BZ2_bzerror@@Base+0x59c>
   1552c:	ldr	w8, [sp, #8]
   15530:	ldur	x9, [x29, #-8]
   15534:	str	w8, [x9, #92]
   15538:	ldur	x9, [x29, #-8]
   1553c:	mov	w8, #0x1                   	// #1
   15540:	str	w8, [x9, #96]
   15544:	b	15558 <BZ2_bzerror@@Base+0x4dc>
   15548:	ldur	x8, [x29, #-8]
   1554c:	ldr	w9, [x8, #96]
   15550:	add	w9, w9, #0x1
   15554:	str	w9, [x8, #96]
   15558:	ldur	x8, [x29, #-8]
   1555c:	ldr	x8, [x8]
   15560:	ldr	x9, [x8]
   15564:	add	x9, x9, #0x1
   15568:	str	x9, [x8]
   1556c:	ldur	x8, [x29, #-8]
   15570:	ldr	x8, [x8]
   15574:	ldr	w10, [x8, #8]
   15578:	subs	w10, w10, #0x1
   1557c:	str	w10, [x8, #8]
   15580:	ldur	x8, [x29, #-8]
   15584:	ldr	x8, [x8]
   15588:	ldr	w10, [x8, #12]
   1558c:	add	w10, w10, #0x1
   15590:	str	w10, [x8, #12]
   15594:	ldur	x8, [x29, #-8]
   15598:	ldr	x8, [x8]
   1559c:	ldr	w10, [x8, #12]
   155a0:	cbnz	w10, 155b8 <BZ2_bzerror@@Base+0x53c>
   155a4:	ldur	x8, [x29, #-8]
   155a8:	ldr	x8, [x8]
   155ac:	ldr	w9, [x8, #16]
   155b0:	add	w9, w9, #0x1
   155b4:	str	w9, [x8, #16]
   155b8:	ldur	x8, [x29, #-8]
   155bc:	ldr	w9, [x8, #16]
   155c0:	subs	w9, w9, #0x1
   155c4:	str	w9, [x8, #16]
   155c8:	b	153d8 <BZ2_bzerror@@Base+0x35c>
   155cc:	ldurb	w0, [x29, #-9]
   155d0:	ldp	x29, x30, [sp, #32]
   155d4:	add	sp, sp, #0x30
   155d8:	ret
   155dc:	sub	sp, sp, #0x20
   155e0:	stp	x29, x30, [sp, #16]
   155e4:	add	x29, sp, #0x10
   155e8:	str	x0, [sp, #8]
   155ec:	ldr	x8, [sp, #8]
   155f0:	ldr	w9, [x8, #92]
   155f4:	cmp	w9, #0x100
   155f8:	b.cs	15604 <BZ2_bzerror@@Base+0x588>  // b.hs, b.nlast
   155fc:	ldr	x0, [sp, #8]
   15600:	bl	15618 <BZ2_bzerror@@Base+0x59c>
   15604:	ldr	x0, [sp, #8]
   15608:	bl	10f38 <BZ2_bzCompressInit@@Base+0x3f4>
   1560c:	ldp	x29, x30, [sp, #16]
   15610:	add	sp, sp, #0x20
   15614:	ret
   15618:	sub	sp, sp, #0x20
   1561c:	str	x0, [sp, #24]
   15620:	ldr	x8, [sp, #24]
   15624:	ldr	w9, [x8, #92]
   15628:	strb	w9, [sp, #19]
   1562c:	str	wzr, [sp, #20]
   15630:	ldr	w8, [sp, #20]
   15634:	ldr	x9, [sp, #24]
   15638:	ldr	w10, [x9, #96]
   1563c:	cmp	w8, w10
   15640:	b.ge	15684 <BZ2_bzerror@@Base+0x608>  // b.tcont
   15644:	ldr	x8, [sp, #24]
   15648:	ldr	w9, [x8, #648]
   1564c:	ldr	x8, [sp, #24]
   15650:	ldr	w10, [x8, #648]
   15654:	ldrb	w11, [sp, #19]
   15658:	eor	w10, w11, w10, lsr #24
   1565c:	adrp	x8, 26000 <BZ2_bzerror@@Base+0x10f84>
   15660:	ldr	x8, [x8, #4024]
   15664:	ldr	w10, [x8, w10, uxtw #2]
   15668:	eor	w9, w10, w9, lsl #8
   1566c:	ldr	x8, [sp, #24]
   15670:	str	w9, [x8, #648]
   15674:	ldr	w8, [sp, #20]
   15678:	add	w8, w8, #0x1
   1567c:	str	w8, [sp, #20]
   15680:	b	15630 <BZ2_bzerror@@Base+0x5b4>
   15684:	ldr	x8, [sp, #24]
   15688:	add	x8, x8, #0x80
   1568c:	ldr	x9, [sp, #24]
   15690:	ldr	w10, [x9, #92]
   15694:	mov	w9, w10
   15698:	add	x8, x8, x9
   1569c:	mov	w10, #0x1                   	// #1
   156a0:	strb	w10, [x8]
   156a4:	ldr	x8, [sp, #24]
   156a8:	ldr	w10, [x8, #96]
   156ac:	cmp	w10, #0x1
   156b0:	str	w10, [sp, #12]
   156b4:	b.eq	156dc <BZ2_bzerror@@Base+0x660>  // b.none
   156b8:	b	156bc <BZ2_bzerror@@Base+0x640>
   156bc:	ldr	w8, [sp, #12]
   156c0:	cmp	w8, #0x2
   156c4:	b.eq	1570c <BZ2_bzerror@@Base+0x690>  // b.none
   156c8:	b	156cc <BZ2_bzerror@@Base+0x650>
   156cc:	ldr	w8, [sp, #12]
   156d0:	cmp	w8, #0x3
   156d4:	b.eq	15768 <BZ2_bzerror@@Base+0x6ec>  // b.none
   156d8:	b	157f0 <BZ2_bzerror@@Base+0x774>
   156dc:	ldrb	w8, [sp, #19]
   156e0:	ldr	x9, [sp, #24]
   156e4:	ldr	x9, [x9, #64]
   156e8:	ldr	x10, [sp, #24]
   156ec:	ldrsw	x10, [x10, #108]
   156f0:	add	x9, x9, x10
   156f4:	strb	w8, [x9]
   156f8:	ldr	x9, [sp, #24]
   156fc:	ldr	w8, [x9, #108]
   15700:	add	w8, w8, #0x1
   15704:	str	w8, [x9, #108]
   15708:	b	158fc <BZ2_bzerror@@Base+0x880>
   1570c:	ldrb	w8, [sp, #19]
   15710:	ldr	x9, [sp, #24]
   15714:	ldr	x9, [x9, #64]
   15718:	ldr	x10, [sp, #24]
   1571c:	ldrsw	x10, [x10, #108]
   15720:	add	x9, x9, x10
   15724:	strb	w8, [x9]
   15728:	ldr	x9, [sp, #24]
   1572c:	ldr	w8, [x9, #108]
   15730:	add	w8, w8, #0x1
   15734:	str	w8, [x9, #108]
   15738:	ldrb	w8, [sp, #19]
   1573c:	ldr	x9, [sp, #24]
   15740:	ldr	x9, [x9, #64]
   15744:	ldr	x10, [sp, #24]
   15748:	ldrsw	x10, [x10, #108]
   1574c:	add	x9, x9, x10
   15750:	strb	w8, [x9]
   15754:	ldr	x9, [sp, #24]
   15758:	ldr	w8, [x9, #108]
   1575c:	add	w8, w8, #0x1
   15760:	str	w8, [x9, #108]
   15764:	b	158fc <BZ2_bzerror@@Base+0x880>
   15768:	ldrb	w8, [sp, #19]
   1576c:	ldr	x9, [sp, #24]
   15770:	ldr	x9, [x9, #64]
   15774:	ldr	x10, [sp, #24]
   15778:	ldrsw	x10, [x10, #108]
   1577c:	add	x9, x9, x10
   15780:	strb	w8, [x9]
   15784:	ldr	x9, [sp, #24]
   15788:	ldr	w8, [x9, #108]
   1578c:	add	w8, w8, #0x1
   15790:	str	w8, [x9, #108]
   15794:	ldrb	w8, [sp, #19]
   15798:	ldr	x9, [sp, #24]
   1579c:	ldr	x9, [x9, #64]
   157a0:	ldr	x10, [sp, #24]
   157a4:	ldrsw	x10, [x10, #108]
   157a8:	add	x9, x9, x10
   157ac:	strb	w8, [x9]
   157b0:	ldr	x9, [sp, #24]
   157b4:	ldr	w8, [x9, #108]
   157b8:	add	w8, w8, #0x1
   157bc:	str	w8, [x9, #108]
   157c0:	ldrb	w8, [sp, #19]
   157c4:	ldr	x9, [sp, #24]
   157c8:	ldr	x9, [x9, #64]
   157cc:	ldr	x10, [sp, #24]
   157d0:	ldrsw	x10, [x10, #108]
   157d4:	add	x9, x9, x10
   157d8:	strb	w8, [x9]
   157dc:	ldr	x9, [sp, #24]
   157e0:	ldr	w8, [x9, #108]
   157e4:	add	w8, w8, #0x1
   157e8:	str	w8, [x9, #108]
   157ec:	b	158fc <BZ2_bzerror@@Base+0x880>
   157f0:	ldr	x8, [sp, #24]
   157f4:	add	x8, x8, #0x80
   157f8:	ldr	x9, [sp, #24]
   157fc:	ldr	w10, [x9, #96]
   15800:	subs	w10, w10, #0x4
   15804:	mov	w0, w10
   15808:	sxtw	x9, w0
   1580c:	add	x8, x8, x9
   15810:	mov	w10, #0x1                   	// #1
   15814:	strb	w10, [x8]
   15818:	ldrb	w10, [sp, #19]
   1581c:	ldr	x8, [sp, #24]
   15820:	ldr	x8, [x8, #64]
   15824:	ldr	x9, [sp, #24]
   15828:	ldrsw	x9, [x9, #108]
   1582c:	add	x8, x8, x9
   15830:	strb	w10, [x8]
   15834:	ldr	x8, [sp, #24]
   15838:	ldr	w10, [x8, #108]
   1583c:	add	w10, w10, #0x1
   15840:	str	w10, [x8, #108]
   15844:	ldrb	w10, [sp, #19]
   15848:	ldr	x8, [sp, #24]
   1584c:	ldr	x8, [x8, #64]
   15850:	ldr	x9, [sp, #24]
   15854:	ldrsw	x9, [x9, #108]
   15858:	add	x8, x8, x9
   1585c:	strb	w10, [x8]
   15860:	ldr	x8, [sp, #24]
   15864:	ldr	w10, [x8, #108]
   15868:	add	w10, w10, #0x1
   1586c:	str	w10, [x8, #108]
   15870:	ldrb	w10, [sp, #19]
   15874:	ldr	x8, [sp, #24]
   15878:	ldr	x8, [x8, #64]
   1587c:	ldr	x9, [sp, #24]
   15880:	ldrsw	x9, [x9, #108]
   15884:	add	x8, x8, x9
   15888:	strb	w10, [x8]
   1588c:	ldr	x8, [sp, #24]
   15890:	ldr	w10, [x8, #108]
   15894:	add	w10, w10, #0x1
   15898:	str	w10, [x8, #108]
   1589c:	ldrb	w10, [sp, #19]
   158a0:	ldr	x8, [sp, #24]
   158a4:	ldr	x8, [x8, #64]
   158a8:	ldr	x9, [sp, #24]
   158ac:	ldrsw	x9, [x9, #108]
   158b0:	add	x8, x8, x9
   158b4:	strb	w10, [x8]
   158b8:	ldr	x8, [sp, #24]
   158bc:	ldr	w10, [x8, #108]
   158c0:	add	w10, w10, #0x1
   158c4:	str	w10, [x8, #108]
   158c8:	ldr	x8, [sp, #24]
   158cc:	ldr	w10, [x8, #96]
   158d0:	subs	w10, w10, #0x4
   158d4:	ldr	x8, [sp, #24]
   158d8:	ldr	x8, [x8, #64]
   158dc:	ldr	x9, [sp, #24]
   158e0:	ldrsw	x9, [x9, #108]
   158e4:	add	x8, x8, x9
   158e8:	strb	w10, [x8]
   158ec:	ldr	x8, [sp, #24]
   158f0:	ldr	w10, [x8, #108]
   158f4:	add	w10, w10, #0x1
   158f8:	str	w10, [x8, #108]
   158fc:	add	sp, sp, #0x20
   15900:	ret

Disassembly of section .fini:

0000000000015904 <.fini>:
   15904:	stp	x29, x30, [sp, #-16]!
   15908:	mov	x29, sp
   1590c:	ldp	x29, x30, [sp], #16
   15910:	ret
