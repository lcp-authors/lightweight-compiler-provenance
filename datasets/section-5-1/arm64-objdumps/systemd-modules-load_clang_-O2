
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-modules-load_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401018 <_init>:
  401018:	stp	x29, x30, [sp, #-16]!
  40101c:	mov	x29, sp
  401020:	bl	4012d0 <call_weak_fn>
  401024:	ldp	x29, x30, [sp], #16
  401028:	ret

Disassembly of section .plt:

0000000000401030 <__libc_start_main@plt-0x20>:
  401030:	stp	x16, x30, [sp, #-16]!
  401034:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401038:	ldr	x17, [x16, #3808]
  40103c:	add	x16, x16, #0xee0
  401040:	br	x17
  401044:	nop
  401048:	nop
  40104c:	nop

0000000000401050 <__libc_start_main@plt>:
  401050:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401054:	ldr	x17, [x16, #3816]
  401058:	add	x16, x16, #0xee8
  40105c:	br	x17

0000000000401060 <abort@plt>:
  401060:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401064:	ldr	x17, [x16, #3824]
  401068:	add	x16, x16, #0xef0
  40106c:	br	x17

0000000000401070 <__gmon_start__@plt>:
  401070:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401074:	ldr	x17, [x16, #3832]
  401078:	add	x16, x16, #0xef8
  40107c:	br	x17

0000000000401080 <strv_free@plt>:
  401080:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401084:	ldr	x17, [x16, #3840]
  401088:	add	x16, x16, #0xf00
  40108c:	br	x17

0000000000401090 <getopt_long@plt>:
  401090:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401094:	ldr	x17, [x16, #3848]
  401098:	add	x16, x16, #0xf08
  40109c:	br	x17

00000000004010a0 <terminal_urlify_man@plt>:
  4010a0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4010a4:	ldr	x17, [x16, #3856]
  4010a8:	add	x16, x16, #0xf10
  4010ac:	br	x17

00000000004010b0 <printf@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4010b4:	ldr	x17, [x16, #3864]
  4010b8:	add	x16, x16, #0xf18
  4010bc:	br	x17

00000000004010c0 <version@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4010c4:	ldr	x17, [x16, #3872]
  4010c8:	add	x16, x16, #0xf20
  4010cc:	br	x17

00000000004010d0 <log_oom_internal@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4010d4:	ldr	x17, [x16, #3880]
  4010d8:	add	x16, x16, #0xf28
  4010dc:	br	x17

00000000004010e0 <free@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4010e4:	ldr	x17, [x16, #3888]
  4010e8:	add	x16, x16, #0xf30
  4010ec:	br	x17

00000000004010f0 <log_setup_service@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4010f4:	ldr	x17, [x16, #3896]
  4010f8:	add	x16, x16, #0xf38
  4010fc:	br	x17

0000000000401100 <umask@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401104:	ldr	x17, [x16, #3904]
  401108:	add	x16, x16, #0xf40
  40110c:	br	x17

0000000000401110 <proc_cmdline_parse@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401114:	ldr	x17, [x16, #3912]
  401118:	add	x16, x16, #0xf48
  40111c:	br	x17

0000000000401120 <log_get_max_level_realm@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401124:	ldr	x17, [x16, #3920]
  401128:	add	x16, x16, #0xf50
  40112c:	br	x17

0000000000401130 <log_internal_realm@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401134:	ldr	x17, [x16, #3928]
  401138:	add	x16, x16, #0xf58
  40113c:	br	x17

0000000000401140 <kmod_new@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401144:	ldr	x17, [x16, #3936]
  401148:	add	x16, x16, #0xf60
  40114c:	br	x17

0000000000401150 <kmod_load_resources@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401154:	ldr	x17, [x16, #3944]
  401158:	add	x16, x16, #0xf68
  40115c:	br	x17

0000000000401160 <kmod_set_log_fn@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401164:	ldr	x17, [x16, #3952]
  401168:	add	x16, x16, #0xf70
  40116c:	br	x17

0000000000401170 <module_load_and_warn@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401174:	ldr	x17, [x16, #3960]
  401178:	add	x16, x16, #0xf78
  40117c:	br	x17

0000000000401180 <conf_files_list_nulstr@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401184:	ldr	x17, [x16, #3968]
  401188:	add	x16, x16, #0xf80
  40118c:	br	x17

0000000000401190 <kmod_unref@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401194:	ldr	x17, [x16, #3976]
  401198:	add	x16, x16, #0xf88
  40119c:	br	x17

00000000004011a0 <ask_password_agent_close@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4011a4:	ldr	x17, [x16, #3984]
  4011a8:	add	x16, x16, #0xf90
  4011ac:	br	x17

00000000004011b0 <polkit_agent_close@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4011b4:	ldr	x17, [x16, #3992]
  4011b8:	add	x16, x16, #0xf98
  4011bc:	br	x17

00000000004011c0 <pager_close@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4011c4:	ldr	x17, [x16, #4000]
  4011c8:	add	x16, x16, #0xfa0
  4011cc:	br	x17

00000000004011d0 <mac_selinux_finish@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4011d4:	ldr	x17, [x16, #4008]
  4011d8:	add	x16, x16, #0xfa8
  4011dc:	br	x17

00000000004011e0 <log_assert_failed_realm@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4011e4:	ldr	x17, [x16, #4016]
  4011e8:	add	x16, x16, #0xfb0
  4011ec:	br	x17

00000000004011f0 <log_assert_failed_unreachable_realm@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  4011f4:	ldr	x17, [x16, #4024]
  4011f8:	add	x16, x16, #0xfb8
  4011fc:	br	x17

0000000000401200 <proc_cmdline_key_streq@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401204:	ldr	x17, [x16, #4032]
  401208:	add	x16, x16, #0xfc0
  40120c:	br	x17

0000000000401210 <strv_split_full@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401214:	ldr	x17, [x16, #4040]
  401218:	add	x16, x16, #0xfc8
  40121c:	br	x17

0000000000401220 <strv_extend_strv@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401224:	ldr	x17, [x16, #4048]
  401228:	add	x16, x16, #0xfd0
  40122c:	br	x17

0000000000401230 <log_internalv_realm@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401234:	ldr	x17, [x16, #4056]
  401238:	add	x16, x16, #0xfd8
  40123c:	br	x17

0000000000401240 <search_and_fopen_nulstr@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401244:	ldr	x17, [x16, #4064]
  401248:	add	x16, x16, #0xfe0
  40124c:	br	x17

0000000000401250 <read_line_full@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401254:	ldr	x17, [x16, #4072]
  401258:	add	x16, x16, #0xfe8
  40125c:	br	x17

0000000000401260 <strstrip@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401264:	ldr	x17, [x16, #4080]
  401268:	add	x16, x16, #0xff0
  40126c:	br	x17

0000000000401270 <safe_fclose@plt>:
  401270:	adrp	x16, 41f000 <__FRAME_END__+0x1cf60>
  401274:	ldr	x17, [x16, #4088]
  401278:	add	x16, x16, #0xff8
  40127c:	br	x17

Disassembly of section .text:

0000000000401280 <_start>:
  401280:	mov	x29, #0x0                   	// #0
  401284:	mov	x30, #0x0                   	// #0
  401288:	mov	x5, x0
  40128c:	ldr	x1, [sp]
  401290:	add	x2, sp, #0x8
  401294:	mov	x6, sp
  401298:	movz	x0, #0x0, lsl #48
  40129c:	movk	x0, #0x0, lsl #32
  4012a0:	movk	x0, #0x40, lsl #16
  4012a4:	movk	x0, #0x139c
  4012a8:	movz	x3, #0x0, lsl #48
  4012ac:	movk	x3, #0x0, lsl #32
  4012b0:	movk	x3, #0x40, lsl #16
  4012b4:	movk	x3, #0x1b38
  4012b8:	movz	x4, #0x0, lsl #48
  4012bc:	movk	x4, #0x0, lsl #32
  4012c0:	movk	x4, #0x40, lsl #16
  4012c4:	movk	x4, #0x1bb8
  4012c8:	bl	401050 <__libc_start_main@plt>
  4012cc:	bl	401060 <abort@plt>

00000000004012d0 <call_weak_fn>:
  4012d0:	adrp	x0, 41f000 <__FRAME_END__+0x1cf60>
  4012d4:	ldr	x0, [x0, #3768]
  4012d8:	cbz	x0, 4012e0 <call_weak_fn+0x10>
  4012dc:	b	401070 <__gmon_start__@plt>
  4012e0:	ret
  4012e4:	udf	#0

00000000004012e8 <deregister_tm_clones>:
  4012e8:	adrp	x0, 420000 <completed.8445>
  4012ec:	add	x0, x0, #0x0
  4012f0:	adrp	x1, 420000 <completed.8445>
  4012f4:	add	x1, x1, #0x0
  4012f8:	cmp	x1, x0
  4012fc:	b.eq	401314 <deregister_tm_clones+0x2c>  // b.none
  401300:	adrp	x1, 401000 <_init-0x18>
  401304:	ldr	x1, [x1, #3024]
  401308:	cbz	x1, 401314 <deregister_tm_clones+0x2c>
  40130c:	mov	x16, x1
  401310:	br	x16
  401314:	ret

0000000000401318 <register_tm_clones>:
  401318:	adrp	x0, 420000 <completed.8445>
  40131c:	add	x0, x0, #0x0
  401320:	adrp	x1, 420000 <completed.8445>
  401324:	add	x1, x1, #0x0
  401328:	sub	x1, x1, x0
  40132c:	lsr	x2, x1, #63
  401330:	add	x1, x2, x1, asr #3
  401334:	cmp	xzr, x1, asr #1
  401338:	asr	x1, x1, #1
  40133c:	b.eq	401354 <register_tm_clones+0x3c>  // b.none
  401340:	adrp	x2, 401000 <_init-0x18>
  401344:	ldr	x2, [x2, #3032]
  401348:	cbz	x2, 401354 <register_tm_clones+0x3c>
  40134c:	mov	x16, x2
  401350:	br	x16
  401354:	ret

0000000000401358 <__do_global_dtors_aux>:
  401358:	stp	x29, x30, [sp, #-32]!
  40135c:	mov	x29, sp
  401360:	str	x19, [sp, #16]
  401364:	adrp	x19, 420000 <completed.8445>
  401368:	ldrb	w0, [x19]
  40136c:	cbnz	w0, 40137c <__do_global_dtors_aux+0x24>
  401370:	bl	4012e8 <deregister_tm_clones>
  401374:	mov	w0, #0x1                   	// #1
  401378:	strb	w0, [x19]
  40137c:	ldr	x19, [sp, #16]
  401380:	ldp	x29, x30, [sp], #32
  401384:	ret

0000000000401388 <frame_dummy>:
  401388:	b	401318 <register_tm_clones>

000000000040138c <__unique_prefix_static_destructor_wrapper0>:
  40138c:	ldr	x0, [x0]
  401390:	cbz	x0, 401398 <__unique_prefix_static_destructor_wrapper0+0xc>
  401394:	b	401080 <strv_free@plt>
  401398:	ret

000000000040139c <main>:
  40139c:	sub	sp, sp, #0x40
  4013a0:	adrp	x8, 420000 <completed.8445>
  4013a4:	adrp	x9, 420000 <completed.8445>
  4013a8:	stp	x29, x30, [sp, #16]
  4013ac:	stp	x22, x21, [sp, #32]
  4013b0:	stp	x20, x19, [sp, #48]
  4013b4:	add	x29, sp, #0x10
  4013b8:	str	w0, [x8, #16]
  4013bc:	str	x1, [x9, #24]
  4013c0:	tbnz	w0, #31, 40171c <main+0x380>
  4013c4:	mov	x21, x1
  4013c8:	cbz	x1, 401740 <main+0x3a4>
  4013cc:	adrp	x2, 401000 <_init-0x18>
  4013d0:	adrp	x3, 401000 <_init-0x18>
  4013d4:	add	x2, x2, #0xcc9
  4013d8:	add	x3, x3, #0xf58
  4013dc:	mov	x1, x21
  4013e0:	mov	x4, xzr
  4013e4:	mov	w22, w0
  4013e8:	bl	401090 <getopt_long@plt>
  4013ec:	tbnz	w0, #31, 401494 <main+0xf8>
  4013f0:	cmp	w0, #0x3f
  4013f4:	b.eq	40145c <main+0xc0>  // b.none
  4013f8:	cmp	w0, #0x100
  4013fc:	b.eq	401448 <main+0xac>  // b.none
  401400:	cmp	w0, #0x68
  401404:	b.ne	401764 <main+0x3c8>  // b.any
  401408:	adrp	x0, 401000 <_init-0x18>
  40140c:	adrp	x1, 401000 <_init-0x18>
  401410:	add	x0, x0, #0xcdc
  401414:	add	x1, x1, #0xcf9
  401418:	add	x2, sp, #0x8
  40141c:	str	xzr, [sp, #8]
  401420:	bl	4010a0 <terminal_urlify_man@plt>
  401424:	tbnz	w0, #31, 401464 <main+0xc8>
  401428:	adrp	x8, 420000 <completed.8445>
  40142c:	ldr	x1, [x8, #32]
  401430:	ldr	x2, [sp, #8]
  401434:	adrp	x0, 401000 <_init-0x18>
  401438:	add	x0, x0, #0xcfb
  40143c:	bl	4010b0 <printf@plt>
  401440:	mov	w19, wzr
  401444:	b	401484 <main+0xe8>
  401448:	bl	4010c0 <version@plt>
  40144c:	mov	w19, w0
  401450:	cmp	w19, #0x1
  401454:	b.ge	401494 <main+0xf8>  // b.tcont
  401458:	b	4016b4 <main+0x318>
  40145c:	mov	w19, #0xffffffea            	// #-22
  401460:	b	4016b4 <main+0x318>
  401464:	adrp	x1, 401000 <_init-0x18>
  401468:	adrp	x3, 401000 <_init-0x18>
  40146c:	add	x1, x1, #0xbe3
  401470:	add	x3, x3, #0xc90
  401474:	mov	w2, #0x70                  	// #112
  401478:	mov	w0, wzr
  40147c:	bl	4010d0 <log_oom_internal@plt>
  401480:	mov	w19, w0
  401484:	ldr	x0, [sp, #8]
  401488:	bl	4010e0 <free@plt>
  40148c:	cmp	w19, #0x1
  401490:	b.lt	4016b4 <main+0x318>  // b.tstop
  401494:	bl	4010f0 <log_setup_service@plt>
  401498:	mov	w0, #0x12                  	// #18
  40149c:	bl	401100 <umask@plt>
  4014a0:	adrp	x0, 401000 <_init-0x18>
  4014a4:	add	x0, x0, #0x788
  4014a8:	mov	w2, #0x1                   	// #1
  4014ac:	mov	x1, xzr
  4014b0:	bl	401110 <proc_cmdline_parse@plt>
  4014b4:	tbz	w0, #31, 4014f4 <main+0x158>
  4014b8:	mov	w19, w0
  4014bc:	mov	w0, wzr
  4014c0:	bl	401120 <log_get_max_level_realm@plt>
  4014c4:	cmp	w0, #0x4
  4014c8:	b.lt	4014f4 <main+0x158>  // b.tstop
  4014cc:	adrp	x2, 401000 <_init-0x18>
  4014d0:	adrp	x4, 401000 <_init-0x18>
  4014d4:	adrp	x5, 401000 <_init-0x18>
  4014d8:	add	x2, x2, #0xbe3
  4014dc:	add	x4, x4, #0xc03
  4014e0:	add	x5, x5, #0xc07
  4014e4:	mov	w0, #0x4                   	// #4
  4014e8:	mov	w3, #0xaf                  	// #175
  4014ec:	mov	w1, w19
  4014f0:	bl	401130 <log_internal_realm@plt>
  4014f4:	mov	x0, xzr
  4014f8:	mov	x1, xzr
  4014fc:	bl	401140 <kmod_new@plt>
  401500:	cbz	x0, 401564 <main+0x1c8>
  401504:	mov	x20, x0
  401508:	bl	401150 <kmod_load_resources@plt>
  40150c:	adrp	x1, 401000 <_init-0x18>
  401510:	add	x1, x1, #0x890
  401514:	mov	x0, x20
  401518:	mov	x2, xzr
  40151c:	bl	401160 <kmod_set_log_fn@plt>
  401520:	adrp	x8, 420000 <completed.8445>
  401524:	ldrsw	x8, [x8, #40]
  401528:	cmp	w8, w22
  40152c:	b.ge	4015a0 <main+0x204>  // b.tcont
  401530:	mov	w19, wzr
  401534:	sub	w22, w22, w8
  401538:	add	x21, x21, x8, lsl #3
  40153c:	ldr	x1, [x21], #8
  401540:	mov	x0, x20
  401544:	mov	w2, wzr
  401548:	bl	4018c0 <apply_file>
  40154c:	cmp	w0, #0x0
  401550:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  401554:	csel	w19, w0, w19, eq  // eq = none
  401558:	subs	w22, w22, #0x1
  40155c:	b.ne	40153c <main+0x1a0>  // b.any
  401560:	b	4016ac <main+0x310>
  401564:	bl	401120 <log_get_max_level_realm@plt>
  401568:	cmp	w0, #0x3
  40156c:	b.lt	401650 <main+0x2b4>  // b.tstop
  401570:	adrp	x2, 401000 <_init-0x18>
  401574:	adrp	x4, 401000 <_init-0x18>
  401578:	adrp	x5, 401000 <_init-0x18>
  40157c:	add	x2, x2, #0xbe3
  401580:	add	x4, x4, #0xc03
  401584:	add	x5, x5, #0xc39
  401588:	mov	w0, #0x3                   	// #3
  40158c:	mov	w3, #0xb3                  	// #179
  401590:	mov	w1, wzr
  401594:	bl	401130 <log_internal_realm@plt>
  401598:	mov	w19, #0xfffffff4            	// #-12
  40159c:	b	4016b4 <main+0x318>
  4015a0:	adrp	x8, 420000 <completed.8445>
  4015a4:	ldr	x8, [x8, #8]
  4015a8:	str	xzr, [sp, #8]
  4015ac:	cbz	x8, 4015ec <main+0x250>
  4015b0:	ldr	x1, [x8]
  4015b4:	cbz	x1, 4015ec <main+0x250>
  4015b8:	mov	w19, wzr
  4015bc:	add	x21, x8, #0x8
  4015c0:	mov	w2, #0x1                   	// #1
  4015c4:	mov	x0, x20
  4015c8:	bl	401170 <module_load_and_warn@plt>
  4015cc:	cmp	w0, #0x0
  4015d0:	ldr	x1, [x21], #8
  4015d4:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  4015d8:	csel	w8, w0, w19, eq  // eq = none
  4015dc:	cmn	w0, #0x2
  4015e0:	csel	w19, w19, w8, eq  // eq = none
  4015e4:	cbnz	x1, 4015c0 <main+0x224>
  4015e8:	b	4015f0 <main+0x254>
  4015ec:	mov	w19, wzr
  4015f0:	adrp	x1, 401000 <_init-0x18>
  4015f4:	adrp	x4, 401000 <_init-0x18>
  4015f8:	add	x1, x1, #0xc5d
  4015fc:	add	x4, x4, #0xee0
  401600:	add	x0, sp, #0x8
  401604:	mov	x2, xzr
  401608:	mov	w3, wzr
  40160c:	bl	401180 <conf_files_list_nulstr@plt>
  401610:	tbnz	w0, #31, 401658 <main+0x2bc>
  401614:	ldr	x0, [sp, #8]
  401618:	cbz	x0, 4016ac <main+0x310>
  40161c:	ldr	x1, [x0]
  401620:	cbz	x1, 4016a8 <main+0x30c>
  401624:	add	x21, x0, #0x8
  401628:	mov	w22, #0x1                   	// #1
  40162c:	mov	w2, #0x1                   	// #1
  401630:	mov	x0, x20
  401634:	bl	4018c0 <apply_file>
  401638:	ldr	x1, [x21], #8
  40163c:	cmp	w0, #0x0
  401640:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  401644:	csel	w19, w0, w19, eq  // eq = none
  401648:	cbnz	x1, 40162c <main+0x290>
  40164c:	b	4016a0 <main+0x304>
  401650:	mov	w19, #0xfffffff4            	// #-12
  401654:	b	4016b4 <main+0x318>
  401658:	mov	w21, w0
  40165c:	mov	w0, wzr
  401660:	bl	401120 <log_get_max_level_realm@plt>
  401664:	cmp	w0, #0x3
  401668:	b.lt	401694 <main+0x2f8>  // b.tstop
  40166c:	adrp	x2, 401000 <_init-0x18>
  401670:	adrp	x4, 401000 <_init-0x18>
  401674:	adrp	x5, 401000 <_init-0x18>
  401678:	add	x2, x2, #0xbe3
  40167c:	add	x4, x4, #0xc03
  401680:	add	x5, x5, #0xc63
  401684:	mov	w0, #0x3                   	// #3
  401688:	mov	w3, #0xd3                  	// #211
  40168c:	mov	w1, w21
  401690:	bl	401130 <log_internal_realm@plt>
  401694:	cmp	w19, #0x0
  401698:	mov	w22, wzr
  40169c:	csel	w19, w21, w19, eq  // eq = none
  4016a0:	ldr	x0, [sp, #8]
  4016a4:	cbz	x0, 4016ac <main+0x310>
  4016a8:	bl	401080 <strv_free@plt>
  4016ac:	mov	x0, x20
  4016b0:	bl	401190 <kmod_unref@plt>
  4016b4:	bl	4011a0 <ask_password_agent_close@plt>
  4016b8:	bl	4011b0 <polkit_agent_close@plt>
  4016bc:	bl	4011c0 <pager_close@plt>
  4016c0:	bl	4011d0 <mac_selinux_finish@plt>
  4016c4:	adrp	x8, 41f000 <__FRAME_END__+0x1cf60>
  4016c8:	ldr	x8, [x8, #3776]
  4016cc:	adrp	x20, 41f000 <__FRAME_END__+0x1cf60>
  4016d0:	ldr	x20, [x20, #3784]
  4016d4:	add	x9, x8, #0x7
  4016d8:	and	x21, x9, #0xfffffffffffffff8
  4016dc:	cmp	x21, x20
  4016e0:	cset	w9, cs  // cs = hs, nlast
  4016e4:	cmp	x8, #0x0
  4016e8:	cset	w8, eq  // eq = none
  4016ec:	orr	w8, w8, w9
  4016f0:	tbnz	w8, #0, 401704 <main+0x368>
  4016f4:	ldp	x0, x8, [x21], #16
  4016f8:	blr	x8
  4016fc:	cmp	x21, x20
  401700:	b.cc	4016f4 <main+0x358>  // b.lo, b.ul, b.last
  401704:	lsr	w0, w19, #31
  401708:	ldp	x20, x19, [sp, #48]
  40170c:	ldp	x22, x21, [sp, #32]
  401710:	ldp	x29, x30, [sp, #16]
  401714:	add	sp, sp, #0x40
  401718:	ret
  40171c:	adrp	x1, 401000 <_init-0x18>
  401720:	adrp	x2, 401000 <_init-0x18>
  401724:	adrp	x4, 401000 <_init-0x18>
  401728:	add	x1, x1, #0xc9d
  40172c:	add	x2, x2, #0xbe3
  401730:	add	x4, x4, #0xca7
  401734:	mov	w3, #0x8b                  	// #139
  401738:	mov	w0, wzr
  40173c:	bl	4011e0 <log_assert_failed_realm@plt>
  401740:	adrp	x1, 401000 <_init-0x18>
  401744:	adrp	x2, 401000 <_init-0x18>
  401748:	adrp	x4, 401000 <_init-0x18>
  40174c:	add	x1, x1, #0xcc4
  401750:	add	x2, x2, #0xbe3
  401754:	add	x4, x4, #0xca7
  401758:	mov	w3, #0x8c                  	// #140
  40175c:	mov	w0, wzr
  401760:	bl	4011e0 <log_assert_failed_realm@plt>
  401764:	adrp	x1, 401000 <_init-0x18>
  401768:	adrp	x2, 401000 <_init-0x18>
  40176c:	adrp	x4, 401000 <_init-0x18>
  401770:	add	x1, x1, #0xccb
  401774:	add	x2, x2, #0xbe3
  401778:	add	x4, x4, #0xca7
  40177c:	mov	w3, #0x9b                  	// #155
  401780:	mov	w0, wzr
  401784:	bl	4011f0 <log_assert_failed_unreachable_realm@plt>

0000000000401788 <parse_proc_cmdline_item>:
  401788:	stp	x29, x30, [sp, #-32]!
  40178c:	stp	x20, x19, [sp, #16]
  401790:	mov	x20, x1
  401794:	adrp	x1, 401000 <_init-0x18>
  401798:	add	x1, x1, #0xdbf
  40179c:	mov	x29, sp
  4017a0:	mov	x19, x0
  4017a4:	bl	401200 <proc_cmdline_key_streq@plt>
  4017a8:	tbz	w0, #0, 40187c <parse_proc_cmdline_item+0xf4>
  4017ac:	cbz	x20, 4017ec <parse_proc_cmdline_item+0x64>
  4017b0:	adrp	x1, 401000 <_init-0x18>
  4017b4:	add	x1, x1, #0xe42
  4017b8:	mov	x0, x20
  4017bc:	mov	w2, wzr
  4017c0:	bl	401210 <strv_split_full@plt>
  4017c4:	cbz	x0, 40182c <parse_proc_cmdline_item+0xa4>
  4017c8:	mov	x19, x0
  4017cc:	adrp	x0, 420000 <completed.8445>
  4017d0:	add	x0, x0, #0x8
  4017d4:	mov	w2, #0x1                   	// #1
  4017d8:	mov	x1, x19
  4017dc:	bl	401220 <strv_extend_strv@plt>
  4017e0:	tbnz	w0, #31, 401850 <parse_proc_cmdline_item+0xc8>
  4017e4:	mov	w20, wzr
  4017e8:	b	401870 <parse_proc_cmdline_item+0xe8>
  4017ec:	mov	w0, wzr
  4017f0:	bl	401120 <log_get_max_level_realm@plt>
  4017f4:	cmp	w0, #0x4
  4017f8:	b.lt	401880 <parse_proc_cmdline_item+0xf8>  // b.tstop
  4017fc:	adrp	x2, 401000 <_init-0x18>
  401800:	adrp	x4, 401000 <_init-0x18>
  401804:	adrp	x5, 401000 <_init-0x18>
  401808:	add	x2, x2, #0xdcf
  40180c:	add	x4, x4, #0xde8
  401810:	add	x5, x5, #0xe03
  401814:	mov	w0, #0x4                   	// #4
  401818:	mov	w3, #0x21                  	// #33
  40181c:	mov	w1, wzr
  401820:	mov	x6, x19
  401824:	bl	401130 <log_internal_realm@plt>
  401828:	b	40187c <parse_proc_cmdline_item+0xf4>
  40182c:	adrp	x1, 401000 <_init-0x18>
  401830:	adrp	x3, 401000 <_init-0x18>
  401834:	add	x1, x1, #0xbe3
  401838:	add	x3, x3, #0xe44
  40183c:	mov	w2, #0x27                  	// #39
  401840:	bl	4010d0 <log_oom_internal@plt>
  401844:	mov	w20, w0
  401848:	tbz	w20, #31, 40187c <parse_proc_cmdline_item+0xf4>
  40184c:	b	401880 <parse_proc_cmdline_item+0xf8>
  401850:	adrp	x1, 401000 <_init-0x18>
  401854:	adrp	x3, 401000 <_init-0x18>
  401858:	add	x1, x1, #0xbe3
  40185c:	add	x3, x3, #0xe44
  401860:	mov	w2, #0x2a                  	// #42
  401864:	mov	w0, wzr
  401868:	bl	4010d0 <log_oom_internal@plt>
  40186c:	mov	w20, w0
  401870:	mov	x0, x19
  401874:	bl	401080 <strv_free@plt>
  401878:	tbnz	w20, #31, 401880 <parse_proc_cmdline_item+0xf8>
  40187c:	mov	w20, wzr
  401880:	mov	w0, w20
  401884:	ldp	x20, x19, [sp, #16]
  401888:	ldp	x29, x30, [sp], #32
  40188c:	ret

0000000000401890 <systemd_kmod_log>:
  401890:	sub	sp, sp, #0x30
  401894:	stp	x29, x30, [sp, #32]
  401898:	ldp	q1, q0, [x6]
  40189c:	mov	w0, w1
  4018a0:	mov	x6, sp
  4018a4:	mov	w1, wzr
  4018a8:	add	x29, sp, #0x20
  4018ac:	stp	q1, q0, [sp]
  4018b0:	bl	401230 <log_internalv_realm@plt>
  4018b4:	ldp	x29, x30, [sp, #32]
  4018b8:	add	sp, sp, #0x30
  4018bc:	ret

00000000004018c0 <apply_file>:
  4018c0:	sub	sp, sp, #0x60
  4018c4:	stp	x29, x30, [sp, #16]
  4018c8:	add	x29, sp, #0x10
  4018cc:	str	x25, [sp, #32]
  4018d0:	stp	x24, x23, [sp, #48]
  4018d4:	stp	x22, x21, [sp, #64]
  4018d8:	stp	x20, x19, [sp, #80]
  4018dc:	str	xzr, [x29, #24]
  4018e0:	cbz	x0, 401af4 <apply_file+0x234>
  4018e4:	mov	x19, x1
  4018e8:	cbz	x1, 401b14 <apply_file+0x254>
  4018ec:	adrp	x1, 401000 <_init-0x18>
  4018f0:	adrp	x3, 401000 <_init-0x18>
  4018f4:	mov	w22, w2
  4018f8:	mov	x21, x0
  4018fc:	add	x1, x1, #0xe90
  401900:	add	x3, x3, #0xee0
  401904:	add	x4, x29, #0x18
  401908:	mov	x0, x19
  40190c:	mov	x2, xzr
  401910:	bl	401240 <search_and_fopen_nulstr@plt>
  401914:	mov	w20, w0
  401918:	tbnz	w0, #31, 401a50 <apply_file+0x190>
  40191c:	mov	w0, wzr
  401920:	bl	401120 <log_get_max_level_realm@plt>
  401924:	cmp	w0, #0x7
  401928:	b.lt	401958 <apply_file+0x98>  // b.tstop
  40192c:	adrp	x2, 401000 <_init-0x18>
  401930:	adrp	x4, 401000 <_init-0x18>
  401934:	adrp	x5, 401000 <_init-0x18>
  401938:	add	x2, x2, #0xbe3
  40193c:	add	x4, x4, #0xe93
  401940:	add	x5, x5, #0xeb4
  401944:	mov	w0, #0x7                   	// #7
  401948:	mov	w3, #0x4e                  	// #78
  40194c:	mov	w1, wzr
  401950:	mov	x6, x19
  401954:	bl	401130 <log_internal_realm@plt>
  401958:	ldr	x0, [x29, #24]
  40195c:	add	x3, sp, #0x8
  401960:	mov	w1, #0x100000              	// #1048576
  401964:	mov	w2, wzr
  401968:	str	xzr, [sp, #8]
  40196c:	bl	401250 <read_line_full@plt>
  401970:	mov	w22, w0
  401974:	tbnz	w0, #31, 401a0c <apply_file+0x14c>
  401978:	mov	x24, #0x1                   	// #1
  40197c:	movk	x24, #0x8, lsl #32
  401980:	mov	w23, #0x1                   	// #1
  401984:	movk	x24, #0x800, lsl #48
  401988:	mov	w25, #0xffffffff            	// #-1
  40198c:	b	4019b8 <apply_file+0xf8>
  401990:	ldr	x0, [sp, #8]
  401994:	bl	4010e0 <free@plt>
  401998:	ldr	x0, [x29, #24]
  40199c:	add	x3, sp, #0x8
  4019a0:	mov	w1, #0x100000              	// #1048576
  4019a4:	mov	w2, wzr
  4019a8:	str	xzr, [sp, #8]
  4019ac:	bl	401250 <read_line_full@plt>
  4019b0:	mov	w22, w0
  4019b4:	tbnz	w0, #31, 401a0c <apply_file+0x14c>
  4019b8:	ldr	x0, [sp, #8]
  4019bc:	cbz	w22, 401a74 <apply_file+0x1b4>
  4019c0:	bl	401260 <strstrip@plt>
  4019c4:	cbz	x0, 401990 <apply_file+0xd0>
  4019c8:	ldrb	w8, [x0]
  4019cc:	mov	x1, x0
  4019d0:	cbz	x8, 401990 <apply_file+0xd0>
  4019d4:	cmp	w8, #0x3f
  4019d8:	b.hi	4019e8 <apply_file+0x128>  // b.pmore
  4019dc:	lsl	x8, x23, x8
  4019e0:	and	x8, x8, x24
  4019e4:	cbnz	x8, 401990 <apply_file+0xd0>
  4019e8:	mov	w2, #0x1                   	// #1
  4019ec:	mov	x0, x21
  4019f0:	bl	401170 <module_load_and_warn@plt>
  4019f4:	cmn	w0, #0x2
  4019f8:	b.eq	401990 <apply_file+0xd0>  // b.none
  4019fc:	cmp	w0, #0x0
  401a00:	ccmp	w20, w25, #0x4, lt  // lt = tstop
  401a04:	csel	w20, w0, w20, gt
  401a08:	b	401990 <apply_file+0xd0>
  401a0c:	mov	w0, wzr
  401a10:	bl	401120 <log_get_max_level_realm@plt>
  401a14:	cmp	w0, #0x3
  401a18:	b.lt	401a64 <apply_file+0x1a4>  // b.tstop
  401a1c:	adrp	x2, 401000 <_init-0x18>
  401a20:	adrp	x4, 401000 <_init-0x18>
  401a24:	adrp	x5, 401000 <_init-0x18>
  401a28:	add	x2, x2, #0xbe3
  401a2c:	add	x4, x4, #0xe93
  401a30:	add	x5, x5, #0xebe
  401a34:	mov	w0, #0x3                   	// #3
  401a38:	mov	w3, #0x56                  	// #86
  401a3c:	mov	w1, w22
  401a40:	mov	x6, x19
  401a44:	bl	401130 <log_internal_realm@plt>
  401a48:	mov	w20, w0
  401a4c:	b	401a70 <apply_file+0x1b0>
  401a50:	cmn	w20, #0x2
  401a54:	b.ne	401aa0 <apply_file+0x1e0>  // b.any
  401a58:	tbz	w22, #0, 401aa0 <apply_file+0x1e0>
  401a5c:	mov	w20, wzr
  401a60:	b	401a78 <apply_file+0x1b8>
  401a64:	mov	w8, wzr
  401a68:	neg	w9, w22
  401a6c:	sub	w20, w8, w9, uxtb
  401a70:	ldr	x0, [sp, #8]
  401a74:	bl	4010e0 <free@plt>
  401a78:	ldr	x0, [x29, #24]
  401a7c:	bl	401270 <safe_fclose@plt>
  401a80:	mov	w0, w20
  401a84:	ldp	x20, x19, [sp, #80]
  401a88:	ldp	x22, x21, [sp, #64]
  401a8c:	ldp	x24, x23, [sp, #48]
  401a90:	ldr	x25, [sp, #32]
  401a94:	ldp	x29, x30, [sp, #16]
  401a98:	add	sp, sp, #0x60
  401a9c:	ret
  401aa0:	mov	w0, wzr
  401aa4:	bl	401120 <log_get_max_level_realm@plt>
  401aa8:	cmp	w0, #0x3
  401aac:	b.lt	401ae4 <apply_file+0x224>  // b.tstop
  401ab0:	adrp	x2, 401000 <_init-0x18>
  401ab4:	adrp	x4, 401000 <_init-0x18>
  401ab8:	adrp	x5, 401000 <_init-0x18>
  401abc:	add	x2, x2, #0xbe3
  401ac0:	add	x4, x4, #0xe93
  401ac4:	add	x5, x5, #0xe9e
  401ac8:	mov	w0, #0x3                   	// #3
  401acc:	mov	w3, #0x4b                  	// #75
  401ad0:	mov	w1, w20
  401ad4:	mov	x6, x19
  401ad8:	bl	401130 <log_internal_realm@plt>
  401adc:	mov	w20, w0
  401ae0:	b	401a78 <apply_file+0x1b8>
  401ae4:	mov	w8, wzr
  401ae8:	neg	w9, w20
  401aec:	sub	w20, w8, w9, uxtb
  401af0:	b	401a78 <apply_file+0x1b8>
  401af4:	adrp	x1, 401000 <_init-0x18>
  401af8:	adrp	x2, 401000 <_init-0x18>
  401afc:	adrp	x4, 401000 <_init-0x18>
  401b00:	add	x1, x1, #0xe50
  401b04:	add	x2, x2, #0xbe3
  401b08:	add	x4, x4, #0xe54
  401b0c:	mov	w3, #0x43                  	// #67
  401b10:	bl	4011e0 <log_assert_failed_realm@plt>
  401b14:	adrp	x1, 401000 <_init-0x18>
  401b18:	adrp	x2, 401000 <_init-0x18>
  401b1c:	adrp	x4, 401000 <_init-0x18>
  401b20:	add	x1, x1, #0xe8b
  401b24:	add	x2, x2, #0xbe3
  401b28:	add	x4, x4, #0xe54
  401b2c:	mov	w3, #0x44                  	// #68
  401b30:	mov	w0, wzr
  401b34:	bl	4011e0 <log_assert_failed_realm@plt>

0000000000401b38 <__libc_csu_init>:
  401b38:	stp	x29, x30, [sp, #-64]!
  401b3c:	mov	x29, sp
  401b40:	stp	x19, x20, [sp, #16]
  401b44:	adrp	x20, 41f000 <__FRAME_END__+0x1cf60>
  401b48:	add	x20, x20, #0xc80
  401b4c:	stp	x21, x22, [sp, #32]
  401b50:	adrp	x21, 41f000 <__FRAME_END__+0x1cf60>
  401b54:	add	x21, x21, #0xc78
  401b58:	sub	x20, x20, x21
  401b5c:	mov	w22, w0
  401b60:	stp	x23, x24, [sp, #48]
  401b64:	mov	x23, x1
  401b68:	mov	x24, x2
  401b6c:	bl	401018 <_init>
  401b70:	cmp	xzr, x20, asr #3
  401b74:	b.eq	401ba0 <__libc_csu_init+0x68>  // b.none
  401b78:	asr	x20, x20, #3
  401b7c:	mov	x19, #0x0                   	// #0
  401b80:	ldr	x3, [x21, x19, lsl #3]
  401b84:	mov	x2, x24
  401b88:	add	x19, x19, #0x1
  401b8c:	mov	x1, x23
  401b90:	mov	w0, w22
  401b94:	blr	x3
  401b98:	cmp	x20, x19
  401b9c:	b.ne	401b80 <__libc_csu_init+0x48>  // b.any
  401ba0:	ldp	x19, x20, [sp, #16]
  401ba4:	ldp	x21, x22, [sp, #32]
  401ba8:	ldp	x23, x24, [sp, #48]
  401bac:	ldp	x29, x30, [sp], #64
  401bb0:	ret
  401bb4:	nop

0000000000401bb8 <__libc_csu_fini>:
  401bb8:	ret

Disassembly of section .fini:

0000000000401bbc <_fini>:
  401bbc:	stp	x29, x30, [sp, #-16]!
  401bc0:	mov	x29, sp
  401bc4:	ldp	x29, x30, [sp], #16
  401bc8:	ret
